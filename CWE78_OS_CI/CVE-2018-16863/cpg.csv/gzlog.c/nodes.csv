command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5898009	File	data/converged/CVE-2018-16863_ghostpdl/gzlog.c								
ANR	5898010	DeclStmt									
ANR	5898011	Decl							unsigned int	unsigned int	uint
ANR	5898012	DeclStmt									
ANR	5898013	Decl							unsigned long	unsigned long	ulong
ANR	5898014	DeclStmt									
ANR	5898015	Decl							jmp_buf	jmp_buf	gzlog_jump
ANR	5898016	DeclStmt									
ANR	5898017	Decl							int	int	gzlog_bail
ANR	5898018	DeclStmt									
ANR	5898019	Decl							int	int	gzlog_count
ANR	5898020	ClassDef	log	289:0:15604:16477							
ANR	5898021	DeclStmt									
ANR	5898022	Decl							char	char [ 4 ]	id
ANR	5898023	DeclStmt									
ANR	5898024	Decl							int	int	fd
ANR	5898025	DeclStmt									
ANR	5898026	Decl							char	char *	path
ANR	5898027	DeclStmt									
ANR	5898028	Decl							char	char *	end
ANR	5898029	DeclStmt									
ANR	5898030	Decl							off_t	off_t	first
ANR	5898031	DeclStmt									
ANR	5898032	Decl							int	int	back
ANR	5898033	DeclStmt									
ANR	5898034	Decl							uint	uint	stored
ANR	5898035	DeclStmt									
ANR	5898036	Decl							off_t	off_t	last
ANR	5898037	DeclStmt									
ANR	5898038	Decl							ulong	ulong	ccrc
ANR	5898039	DeclStmt									
ANR	5898040	Decl							ulong	ulong	clen
ANR	5898041	DeclStmt									
ANR	5898042	Decl							ulong	ulong	tcrc
ANR	5898043	DeclStmt									
ANR	5898044	Decl							ulong	ulong	tlen
ANR	5898045	DeclStmt									
ANR	5898046	Decl							time_t	time_t	lock
ANR	5898047	DeclStmt									
ANR	5898048	Decl							unsigned char	unsigned char [ ]	log_gzhead
ANR	5898049	DeclStmt									
ANR	5898050	Decl							unsigned char	unsigned char [ ]	log_gzext
ANR	5898051	DeclStmt									
ANR	5898052	Decl							unsigned char	unsigned char [ ]	log_gzbody
ANR	5898053	Function	log_lock	348:0:18573:19117							
ANR	5898054	FunctionDef	log_lock (struct log * log)		5898053	0					
ANR	5898055	CompoundStatement		349:0:18609:19117	5898053	0					
ANR	5898056	IdentifierDeclStatement	int fd ;	350:4:18615:18621	5898053	0	True				
ANR	5898057	IdentifierDecl	fd		5898053	0					
ANR	5898058	IdentifierDeclType	int		5898053	0					
ANR	5898059	Identifier	fd		5898053	1					
ANR	5898060	IdentifierDeclStatement	struct stat st ;	351:4:18627:18641	5898053	1	True				
ANR	5898061	IdentifierDecl	st		5898053	0					
ANR	5898062	IdentifierDeclType	struct stat		5898053	0					
ANR	5898063	Identifier	st		5898053	1					
ANR	5898064	ExpressionStatement	"strcpy ( log -> end , "".lock"" )"	353:4:18648:18673	5898053	2	True				
ANR	5898065	CallExpression	"strcpy ( log -> end , "".lock"" )"		5898053	0					
ANR	5898066	Callee	strcpy		5898053	0					
ANR	5898067	Identifier	strcpy		5898053	0					
ANR	5898068	ArgumentList	log -> end		5898053	1					
ANR	5898069	Argument	log -> end		5898053	0					
ANR	5898070	PtrMemberAccess	log -> end		5898053	0					
ANR	5898071	Identifier	log		5898053	0					
ANR	5898072	Identifier	end		5898053	1					
ANR	5898073	Argument	""".lock"""		5898053	1					
ANR	5898074	PrimaryExpression	""".lock"""		5898053	0					
ANR	5898075	WhileStatement	"while ( ( fd = open ( log -> path , O_CREAT | O_EXCL , 0644 ) ) < 0 )"		5898053	3					
ANR	5898076	Condition	"( fd = open ( log -> path , O_CREAT | O_EXCL , 0644 ) ) < 0"	354:11:18686:18735	5898053	0	True				
ANR	5898077	RelationalExpression	"( fd = open ( log -> path , O_CREAT | O_EXCL , 0644 ) ) < 0"		5898053	0		<			
ANR	5898078	AssignmentExpression	"fd = open ( log -> path , O_CREAT | O_EXCL , 0644 )"		5898053	0		=			
ANR	5898079	Identifier	fd		5898053	0					
ANR	5898080	CallExpression	"open ( log -> path , O_CREAT | O_EXCL , 0644 )"		5898053	1					
ANR	5898081	Callee	open		5898053	0					
ANR	5898082	Identifier	open		5898053	0					
ANR	5898083	ArgumentList	log -> path		5898053	1					
ANR	5898084	Argument	log -> path		5898053	0					
ANR	5898085	PtrMemberAccess	log -> path		5898053	0					
ANR	5898086	Identifier	log		5898053	0					
ANR	5898087	Identifier	path		5898053	1					
ANR	5898088	Argument	O_CREAT | O_EXCL		5898053	1					
ANR	5898089	InclusiveOrExpression	O_CREAT | O_EXCL		5898053	0		|			
ANR	5898090	Identifier	O_CREAT		5898053	0					
ANR	5898091	Identifier	O_EXCL		5898053	1					
ANR	5898092	Argument	0644		5898053	2					
ANR	5898093	PrimaryExpression	0644		5898053	0					
ANR	5898094	PrimaryExpression	0		5898053	1					
ANR	5898095	CompoundStatement		6:63:128:128	5898053	1					
ANR	5898096	IfStatement	if ( errno != EEXIST )		5898053	0					
ANR	5898097	Condition	errno != EEXIST	355:12:18752:18766	5898053	0	True				
ANR	5898098	EqualityExpression	errno != EEXIST		5898053	0		!=			
ANR	5898099	Identifier	errno		5898053	0					
ANR	5898100	Identifier	EEXIST		5898053	1					
ANR	5898101	ReturnStatement	return - 1 ;	356:12:18781:18790	5898053	1	True				
ANR	5898102	UnaryOperationExpression	- 1		5898053	0					
ANR	5898103	UnaryOperator	-		5898053	0					
ANR	5898104	PrimaryExpression	1		5898053	1					
ANR	5898105	IfStatement	"if ( stat ( log -> path , & st ) == 0 && time ( NULL ) - st . st_mtime > PATIENCE )"		5898053	1					
ANR	5898106	Condition	"stat ( log -> path , & st ) == 0 && time ( NULL ) - st . st_mtime > PATIENCE"	357:12:18804:18867	5898053	0	True				
ANR	5898107	AndExpression	"stat ( log -> path , & st ) == 0 && time ( NULL ) - st . st_mtime > PATIENCE"		5898053	0		&&			
ANR	5898108	EqualityExpression	"stat ( log -> path , & st ) == 0"		5898053	0		==			
ANR	5898109	CallExpression	"stat ( log -> path , & st )"		5898053	0					
ANR	5898110	Callee	stat		5898053	0					
ANR	5898111	Identifier	stat		5898053	0					
ANR	5898112	ArgumentList	log -> path		5898053	1					
ANR	5898113	Argument	log -> path		5898053	0					
ANR	5898114	PtrMemberAccess	log -> path		5898053	0					
ANR	5898115	Identifier	log		5898053	0					
ANR	5898116	Identifier	path		5898053	1					
ANR	5898117	Argument	& st		5898053	1					
ANR	5898118	UnaryOperationExpression	& st		5898053	0					
ANR	5898119	UnaryOperator	&		5898053	0					
ANR	5898120	Identifier	st		5898053	1					
ANR	5898121	PrimaryExpression	0		5898053	1					
ANR	5898122	RelationalExpression	time ( NULL ) - st . st_mtime > PATIENCE		5898053	1		>			
ANR	5898123	AdditiveExpression	time ( NULL ) - st . st_mtime		5898053	0		-			
ANR	5898124	CallExpression	time ( NULL )		5898053	0					
ANR	5898125	Callee	time		5898053	0					
ANR	5898126	Identifier	time		5898053	0					
ANR	5898127	ArgumentList	NULL		5898053	1					
ANR	5898128	Argument	NULL		5898053	0					
ANR	5898129	Identifier	NULL		5898053	0					
ANR	5898130	MemberAccess	st . st_mtime		5898053	1					
ANR	5898131	Identifier	st		5898053	0					
ANR	5898132	Identifier	st_mtime		5898053	1					
ANR	5898133	Identifier	PATIENCE		5898053	1					
ANR	5898134	CompoundStatement		9:78:260:260	5898053	1					
ANR	5898135	ExpressionStatement	unlink ( log -> path )	358:12:18884:18901	5898053	0	True				
ANR	5898136	CallExpression	unlink ( log -> path )		5898053	0					
ANR	5898137	Callee	unlink		5898053	0					
ANR	5898138	Identifier	unlink		5898053	0					
ANR	5898139	ArgumentList	log -> path		5898053	1					
ANR	5898140	Argument	log -> path		5898053	0					
ANR	5898141	PtrMemberAccess	log -> path		5898053	0					
ANR	5898142	Identifier	log		5898053	0					
ANR	5898143	Identifier	path		5898053	1					
ANR	5898144	ContinueStatement	continue ;	359:12:18915:18923	5898053	1	True				
ANR	5898145	ExpressionStatement	sleep ( 2 )	361:8:18943:18951	5898053	2	True				
ANR	5898146	CallExpression	sleep ( 2 )		5898053	0					
ANR	5898147	Callee	sleep		5898053	0					
ANR	5898148	Identifier	sleep		5898053	0					
ANR	5898149	ArgumentList	2		5898053	1					
ANR	5898150	Argument	2		5898053	0					
ANR	5898151	PrimaryExpression	2		5898053	0					
ANR	5898152	ExpressionStatement	close ( fd )	363:4:19024:19033	5898053	4	True				
ANR	5898153	CallExpression	close ( fd )		5898053	0					
ANR	5898154	Callee	close		5898053	0					
ANR	5898155	Identifier	close		5898053	0					
ANR	5898156	ArgumentList	fd		5898053	1					
ANR	5898157	Argument	fd		5898053	0					
ANR	5898158	Identifier	fd		5898053	0					
ANR	5898159	IfStatement	"if ( stat ( log -> path , & st ) == 0 )"		5898053	5					
ANR	5898160	Condition	"stat ( log -> path , & st ) == 0"	364:8:19043:19067	5898053	0	True				
ANR	5898161	EqualityExpression	"stat ( log -> path , & st ) == 0"		5898053	0		==			
ANR	5898162	CallExpression	"stat ( log -> path , & st )"		5898053	0					
ANR	5898163	Callee	stat		5898053	0					
ANR	5898164	Identifier	stat		5898053	0					
ANR	5898165	ArgumentList	log -> path		5898053	1					
ANR	5898166	Argument	log -> path		5898053	0					
ANR	5898167	PtrMemberAccess	log -> path		5898053	0					
ANR	5898168	Identifier	log		5898053	0					
ANR	5898169	Identifier	path		5898053	1					
ANR	5898170	Argument	& st		5898053	1					
ANR	5898171	UnaryOperationExpression	& st		5898053	0					
ANR	5898172	UnaryOperator	&		5898053	0					
ANR	5898173	Identifier	st		5898053	1					
ANR	5898174	PrimaryExpression	0		5898053	1					
ANR	5898175	ExpressionStatement	log -> lock = st . st_mtime	365:8:19078:19101	5898053	1	True				
ANR	5898176	AssignmentExpression	log -> lock = st . st_mtime		5898053	0		=			
ANR	5898177	PtrMemberAccess	log -> lock		5898053	0					
ANR	5898178	Identifier	log		5898053	0					
ANR	5898179	Identifier	lock		5898053	1					
ANR	5898180	MemberAccess	st . st_mtime		5898053	1					
ANR	5898181	Identifier	st		5898053	0					
ANR	5898182	Identifier	st_mtime		5898053	1					
ANR	5898183	ReturnStatement	return 0 ;	366:4:19107:19115	5898053	6	True				
ANR	5898184	PrimaryExpression	0		5898053	0					
ANR	5898185	ReturnType	local int		5898053	1					
ANR	5898186	Identifier	log_lock		5898053	2					
ANR	5898187	ParameterList	struct log * log		5898053	3					
ANR	5898188	Parameter	struct log * log	348:19:18592:18606	5898053	0	True				
ANR	5898189	ParameterType	struct log *		5898053	0					
ANR	5898190	Identifier	log		5898053	1					
ANR	5898191	CFGEntryNode	ENTRY		5898053		True				
ANR	5898192	CFGExitNode	EXIT		5898053		True				
ANR	5898193	Symbol	st		5898053						
ANR	5898194	Symbol	EEXIST		5898053						
ANR	5898195	Symbol	errno		5898053						
ANR	5898196	Symbol	stat		5898053						
ANR	5898197	Symbol	log -> lock		5898053						
ANR	5898198	Symbol	NULL		5898053						
ANR	5898199	Symbol	log -> end		5898053						
ANR	5898200	Symbol	log		5898053						
ANR	5898201	Symbol	log -> path		5898053						
ANR	5898202	Symbol	O_CREAT		5898053						
ANR	5898203	Symbol	O_EXCL		5898053						
ANR	5898204	Symbol	& st		5898053						
ANR	5898205	Symbol	* log		5898053						
ANR	5898206	Symbol	st . st_mtime		5898053						
ANR	5898207	Symbol	time		5898053						
ANR	5898208	Symbol	fd		5898053						
ANR	5898209	Symbol	open		5898053						
ANR	5898210	Symbol	PATIENCE		5898053						
ANR	5898211	Function	log_touch	372:0:19314:19503							
ANR	5898212	FunctionDef	log_touch (struct log * log)		5898211	0					
ANR	5898213	CompoundStatement		373:0:19352:19503	5898211	0					
ANR	5898214	IdentifierDeclStatement	struct stat st ;	374:4:19358:19372	5898211	0	True				
ANR	5898215	IdentifierDecl	st		5898211	0					
ANR	5898216	IdentifierDeclType	struct stat		5898211	0					
ANR	5898217	Identifier	st		5898211	1					
ANR	5898218	ExpressionStatement	"strcpy ( log -> end , "".lock"" )"	376:4:19379:19404	5898211	1	True				
ANR	5898219	CallExpression	"strcpy ( log -> end , "".lock"" )"		5898211	0					
ANR	5898220	Callee	strcpy		5898211	0					
ANR	5898221	Identifier	strcpy		5898211	0					
ANR	5898222	ArgumentList	log -> end		5898211	1					
ANR	5898223	Argument	log -> end		5898211	0					
ANR	5898224	PtrMemberAccess	log -> end		5898211	0					
ANR	5898225	Identifier	log		5898211	0					
ANR	5898226	Identifier	end		5898211	1					
ANR	5898227	Argument	""".lock"""		5898211	1					
ANR	5898228	PrimaryExpression	""".lock"""		5898211	0					
ANR	5898229	ExpressionStatement	"utimes ( log -> path , NULL )"	377:4:19410:19433	5898211	2	True				
ANR	5898230	CallExpression	"utimes ( log -> path , NULL )"		5898211	0					
ANR	5898231	Callee	utimes		5898211	0					
ANR	5898232	Identifier	utimes		5898211	0					
ANR	5898233	ArgumentList	log -> path		5898211	1					
ANR	5898234	Argument	log -> path		5898211	0					
ANR	5898235	PtrMemberAccess	log -> path		5898211	0					
ANR	5898236	Identifier	log		5898211	0					
ANR	5898237	Identifier	path		5898211	1					
ANR	5898238	Argument	NULL		5898211	1					
ANR	5898239	Identifier	NULL		5898211	0					
ANR	5898240	IfStatement	"if ( stat ( log -> path , & st ) == 0 )"		5898211	3					
ANR	5898241	Condition	"stat ( log -> path , & st ) == 0"	378:8:19443:19467	5898211	0	True				
ANR	5898242	EqualityExpression	"stat ( log -> path , & st ) == 0"		5898211	0		==			
ANR	5898243	CallExpression	"stat ( log -> path , & st )"		5898211	0					
ANR	5898244	Callee	stat		5898211	0					
ANR	5898245	Identifier	stat		5898211	0					
ANR	5898246	ArgumentList	log -> path		5898211	1					
ANR	5898247	Argument	log -> path		5898211	0					
ANR	5898248	PtrMemberAccess	log -> path		5898211	0					
ANR	5898249	Identifier	log		5898211	0					
ANR	5898250	Identifier	path		5898211	1					
ANR	5898251	Argument	& st		5898211	1					
ANR	5898252	UnaryOperationExpression	& st		5898211	0					
ANR	5898253	UnaryOperator	&		5898211	0					
ANR	5898254	Identifier	st		5898211	1					
ANR	5898255	PrimaryExpression	0		5898211	1					
ANR	5898256	ExpressionStatement	log -> lock = st . st_mtime	379:8:19478:19501	5898211	1	True				
ANR	5898257	AssignmentExpression	log -> lock = st . st_mtime		5898211	0		=			
ANR	5898258	PtrMemberAccess	log -> lock		5898211	0					
ANR	5898259	Identifier	log		5898211	0					
ANR	5898260	Identifier	lock		5898211	1					
ANR	5898261	MemberAccess	st . st_mtime		5898211	1					
ANR	5898262	Identifier	st		5898211	0					
ANR	5898263	Identifier	st_mtime		5898211	1					
ANR	5898264	ReturnType	local void		5898211	1					
ANR	5898265	Identifier	log_touch		5898211	2					
ANR	5898266	ParameterList	struct log * log		5898211	3					
ANR	5898267	Parameter	struct log * log	372:21:19335:19349	5898211	0	True				
ANR	5898268	ParameterType	struct log *		5898211	0					
ANR	5898269	Identifier	log		5898211	1					
ANR	5898270	CFGEntryNode	ENTRY		5898211		True				
ANR	5898271	CFGExitNode	EXIT		5898211		True				
ANR	5898272	Symbol	st		5898211						
ANR	5898273	Symbol	stat		5898211						
ANR	5898274	Symbol	log -> lock		5898211						
ANR	5898275	Symbol	NULL		5898211						
ANR	5898276	Symbol	st . st_mtime		5898211						
ANR	5898277	Symbol	log -> end		5898211						
ANR	5898278	Symbol	log		5898211						
ANR	5898279	Symbol	log -> path		5898211						
ANR	5898280	Symbol	& st		5898211						
ANR	5898281	Symbol	* log		5898211						
ANR	5898282	Function	log_check	384:0:19651:19852							
ANR	5898283	FunctionDef	log_check (struct log * log)		5898282	0					
ANR	5898284	CompoundStatement		385:0:19688:19852	5898282	0					
ANR	5898285	IdentifierDeclStatement	struct stat st ;	386:4:19694:19708	5898282	0	True				
ANR	5898286	IdentifierDecl	st		5898282	0					
ANR	5898287	IdentifierDeclType	struct stat		5898282	0					
ANR	5898288	Identifier	st		5898282	1					
ANR	5898289	ExpressionStatement	"strcpy ( log -> end , "".lock"" )"	388:4:19715:19740	5898282	1	True				
ANR	5898290	CallExpression	"strcpy ( log -> end , "".lock"" )"		5898282	0					
ANR	5898291	Callee	strcpy		5898282	0					
ANR	5898292	Identifier	strcpy		5898282	0					
ANR	5898293	ArgumentList	log -> end		5898282	1					
ANR	5898294	Argument	log -> end		5898282	0					
ANR	5898295	PtrMemberAccess	log -> end		5898282	0					
ANR	5898296	Identifier	log		5898282	0					
ANR	5898297	Identifier	end		5898282	1					
ANR	5898298	Argument	""".lock"""		5898282	1					
ANR	5898299	PrimaryExpression	""".lock"""		5898282	0					
ANR	5898300	IfStatement	"if ( stat ( log -> path , & st ) || st . st_mtime != log -> lock )"		5898282	2					
ANR	5898301	Condition	"stat ( log -> path , & st ) || st . st_mtime != log -> lock"	389:8:19750:19797	5898282	0	True				
ANR	5898302	OrExpression	"stat ( log -> path , & st ) || st . st_mtime != log -> lock"		5898282	0		||			
ANR	5898303	CallExpression	"stat ( log -> path , & st )"		5898282	0					
ANR	5898304	Callee	stat		5898282	0					
ANR	5898305	Identifier	stat		5898282	0					
ANR	5898306	ArgumentList	log -> path		5898282	1					
ANR	5898307	Argument	log -> path		5898282	0					
ANR	5898308	PtrMemberAccess	log -> path		5898282	0					
ANR	5898309	Identifier	log		5898282	0					
ANR	5898310	Identifier	path		5898282	1					
ANR	5898311	Argument	& st		5898282	1					
ANR	5898312	UnaryOperationExpression	& st		5898282	0					
ANR	5898313	UnaryOperator	&		5898282	0					
ANR	5898314	Identifier	st		5898282	1					
ANR	5898315	EqualityExpression	st . st_mtime != log -> lock		5898282	1		!=			
ANR	5898316	MemberAccess	st . st_mtime		5898282	0					
ANR	5898317	Identifier	st		5898282	0					
ANR	5898318	Identifier	st_mtime		5898282	1					
ANR	5898319	PtrMemberAccess	log -> lock		5898282	1					
ANR	5898320	Identifier	log		5898282	0					
ANR	5898321	Identifier	lock		5898282	1					
ANR	5898322	ReturnStatement	return 1 ;	390:8:19808:19816	5898282	1	True				
ANR	5898323	PrimaryExpression	1		5898282	0					
ANR	5898324	ExpressionStatement	log_touch ( log )	391:4:19822:19836	5898282	3	True				
ANR	5898325	CallExpression	log_touch ( log )		5898282	0					
ANR	5898326	Callee	log_touch		5898282	0					
ANR	5898327	Identifier	log_touch		5898282	0					
ANR	5898328	ArgumentList	log		5898282	1					
ANR	5898329	Argument	log		5898282	0					
ANR	5898330	Identifier	log		5898282	0					
ANR	5898331	ReturnStatement	return 0 ;	392:4:19842:19850	5898282	4	True				
ANR	5898332	PrimaryExpression	0		5898282	0					
ANR	5898333	ReturnType	local int		5898282	1					
ANR	5898334	Identifier	log_check		5898282	2					
ANR	5898335	ParameterList	struct log * log		5898282	3					
ANR	5898336	Parameter	struct log * log	384:20:19671:19685	5898282	0	True				
ANR	5898337	ParameterType	struct log *		5898282	0					
ANR	5898338	Identifier	log		5898282	1					
ANR	5898339	CFGEntryNode	ENTRY		5898282		True				
ANR	5898340	CFGExitNode	EXIT		5898282		True				
ANR	5898341	Symbol	st		5898282						
ANR	5898342	Symbol	log -> lock		5898282						
ANR	5898343	Symbol	stat		5898282						
ANR	5898344	Symbol	st . st_mtime		5898282						
ANR	5898345	Symbol	log -> end		5898282						
ANR	5898346	Symbol	log		5898282						
ANR	5898347	Symbol	log -> path		5898282						
ANR	5898348	Symbol	& st		5898282						
ANR	5898349	Symbol	* log		5898282						
ANR	5898350	Function	log_unlock	396:0:19919:20073							
ANR	5898351	FunctionDef	log_unlock (struct log * log)		5898350	0					
ANR	5898352	CompoundStatement		397:0:19958:20073	5898350	0					
ANR	5898353	IfStatement	if ( log_check ( log ) )		5898350	0					
ANR	5898354	Condition	log_check ( log )	398:8:19968:19981	5898350	0	True				
ANR	5898355	CallExpression	log_check ( log )		5898350	0					
ANR	5898356	Callee	log_check		5898350	0					
ANR	5898357	Identifier	log_check		5898350	0					
ANR	5898358	ArgumentList	log		5898350	1					
ANR	5898359	Argument	log		5898350	0					
ANR	5898360	Identifier	log		5898350	0					
ANR	5898361	ReturnStatement	return ;	399:8:19992:19998	5898350	1	True				
ANR	5898362	ExpressionStatement	"strcpy ( log -> end , "".lock"" )"	400:4:20004:20029	5898350	1	True				
ANR	5898363	CallExpression	"strcpy ( log -> end , "".lock"" )"		5898350	0					
ANR	5898364	Callee	strcpy		5898350	0					
ANR	5898365	Identifier	strcpy		5898350	0					
ANR	5898366	ArgumentList	log -> end		5898350	1					
ANR	5898367	Argument	log -> end		5898350	0					
ANR	5898368	PtrMemberAccess	log -> end		5898350	0					
ANR	5898369	Identifier	log		5898350	0					
ANR	5898370	Identifier	end		5898350	1					
ANR	5898371	Argument	""".lock"""		5898350	1					
ANR	5898372	PrimaryExpression	""".lock"""		5898350	0					
ANR	5898373	ExpressionStatement	unlink ( log -> path )	401:4:20035:20052	5898350	2	True				
ANR	5898374	CallExpression	unlink ( log -> path )		5898350	0					
ANR	5898375	Callee	unlink		5898350	0					
ANR	5898376	Identifier	unlink		5898350	0					
ANR	5898377	ArgumentList	log -> path		5898350	1					
ANR	5898378	Argument	log -> path		5898350	0					
ANR	5898379	PtrMemberAccess	log -> path		5898350	0					
ANR	5898380	Identifier	log		5898350	0					
ANR	5898381	Identifier	path		5898350	1					
ANR	5898382	ExpressionStatement	log -> lock = 0	402:4:20058:20071	5898350	3	True				
ANR	5898383	AssignmentExpression	log -> lock = 0		5898350	0		=			
ANR	5898384	PtrMemberAccess	log -> lock		5898350	0					
ANR	5898385	Identifier	log		5898350	0					
ANR	5898386	Identifier	lock		5898350	1					
ANR	5898387	PrimaryExpression	0		5898350	1					
ANR	5898388	ReturnType	local void		5898350	1					
ANR	5898389	Identifier	log_unlock		5898350	2					
ANR	5898390	ParameterList	struct log * log		5898350	3					
ANR	5898391	Parameter	struct log * log	396:22:19941:19955	5898350	0	True				
ANR	5898392	ParameterType	struct log *		5898350	0					
ANR	5898393	Identifier	log		5898350	1					
ANR	5898394	CFGEntryNode	ENTRY		5898350		True				
ANR	5898395	CFGExitNode	EXIT		5898350		True				
ANR	5898396	Symbol	log -> lock		5898350						
ANR	5898397	Symbol	log -> end		5898350						
ANR	5898398	Symbol	log		5898350						
ANR	5898399	Symbol	log -> path		5898350						
ANR	5898400	Symbol	log_check		5898350						
ANR	5898401	Symbol	* log		5898350						
ANR	5898402	Function	log_head	410:0:20423:21050							
ANR	5898403	FunctionDef	log_head (struct log * log)		5898402	0					
ANR	5898404	CompoundStatement		411:0:20459:21050	5898402	0					
ANR	5898405	IdentifierDeclStatement	int op ;	412:4:20465:20471	5898402	0	True				
ANR	5898406	IdentifierDecl	op		5898402	0					
ANR	5898407	IdentifierDeclType	int		5898402	0					
ANR	5898408	Identifier	op		5898402	1					
ANR	5898409	IdentifierDeclStatement	unsigned char buf [ HEAD + EXTRA ] ;	413:4:20477:20508	5898402	1	True				
ANR	5898410	IdentifierDecl	buf [ HEAD + EXTRA ]		5898402	0					
ANR	5898411	IdentifierDeclType	unsigned char [ HEAD + EXTRA ]		5898402	0					
ANR	5898412	Identifier	buf		5898402	1					
ANR	5898413	AdditiveExpression	HEAD + EXTRA		5898402	2		+			
ANR	5898414	Identifier	HEAD		5898402	0					
ANR	5898415	Identifier	EXTRA		5898402	1					
ANR	5898416	IfStatement	"if ( lseek ( log -> fd , 0 , SEEK_SET ) < 0 || read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA || memcmp ( buf , log_gzhead , HEAD ) )"		5898402	2					
ANR	5898417	Condition	"lseek ( log -> fd , 0 , SEEK_SET ) < 0 || read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA || memcmp ( buf , log_gzhead , HEAD )"	415:8:20519:20650	5898402	0	True				
ANR	5898418	OrExpression	"lseek ( log -> fd , 0 , SEEK_SET ) < 0 || read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA || memcmp ( buf , log_gzhead , HEAD )"		5898402	0		||			
ANR	5898419	RelationalExpression	"lseek ( log -> fd , 0 , SEEK_SET ) < 0"		5898402	0		<			
ANR	5898420	CallExpression	"lseek ( log -> fd , 0 , SEEK_SET )"		5898402	0					
ANR	5898421	Callee	lseek		5898402	0					
ANR	5898422	Identifier	lseek		5898402	0					
ANR	5898423	ArgumentList	log -> fd		5898402	1					
ANR	5898424	Argument	log -> fd		5898402	0					
ANR	5898425	PtrMemberAccess	log -> fd		5898402	0					
ANR	5898426	Identifier	log		5898402	0					
ANR	5898427	Identifier	fd		5898402	1					
ANR	5898428	Argument	0		5898402	1					
ANR	5898429	PrimaryExpression	0		5898402	0					
ANR	5898430	Argument	SEEK_SET		5898402	2					
ANR	5898431	Identifier	SEEK_SET		5898402	0					
ANR	5898432	PrimaryExpression	0		5898402	1					
ANR	5898433	OrExpression	"read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA || memcmp ( buf , log_gzhead , HEAD )"		5898402	1		||			
ANR	5898434	EqualityExpression	"read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA"		5898402	0		!=			
ANR	5898435	CallExpression	"read ( log -> fd , buf , HEAD + EXTRA )"		5898402	0					
ANR	5898436	Callee	read		5898402	0					
ANR	5898437	Identifier	read		5898402	0					
ANR	5898438	ArgumentList	log -> fd		5898402	1					
ANR	5898439	Argument	log -> fd		5898402	0					
ANR	5898440	PtrMemberAccess	log -> fd		5898402	0					
ANR	5898441	Identifier	log		5898402	0					
ANR	5898442	Identifier	fd		5898402	1					
ANR	5898443	Argument	buf		5898402	1					
ANR	5898444	Identifier	buf		5898402	0					
ANR	5898445	Argument	HEAD + EXTRA		5898402	2					
ANR	5898446	AdditiveExpression	HEAD + EXTRA		5898402	0		+			
ANR	5898447	Identifier	HEAD		5898402	0					
ANR	5898448	Identifier	EXTRA		5898402	1					
ANR	5898449	AdditiveExpression	HEAD + EXTRA		5898402	1		+			
ANR	5898450	Identifier	HEAD		5898402	0					
ANR	5898451	Identifier	EXTRA		5898402	1					
ANR	5898452	CallExpression	"memcmp ( buf , log_gzhead , HEAD )"		5898402	1					
ANR	5898453	Callee	memcmp		5898402	0					
ANR	5898454	Identifier	memcmp		5898402	0					
ANR	5898455	ArgumentList	buf		5898402	1					
ANR	5898456	Argument	buf		5898402	0					
ANR	5898457	Identifier	buf		5898402	0					
ANR	5898458	Argument	log_gzhead		5898402	1					
ANR	5898459	Identifier	log_gzhead		5898402	0					
ANR	5898460	Argument	HEAD		5898402	2					
ANR	5898461	Identifier	HEAD		5898402	0					
ANR	5898462	CompoundStatement		7:39:193:193	5898402	1					
ANR	5898463	ReturnStatement	return - 1 ;	418:8:20663:20672	5898402	0	True				
ANR	5898464	UnaryOperationExpression	- 1		5898402	0					
ANR	5898465	UnaryOperator	-		5898402	0					
ANR	5898466	PrimaryExpression	1		5898402	1					
ANR	5898467	ExpressionStatement	log -> first = PULL8 ( buf + HEAD )	420:4:20684:20714	5898402	3	True				
ANR	5898468	AssignmentExpression	log -> first = PULL8 ( buf + HEAD )		5898402	0		=			
ANR	5898469	PtrMemberAccess	log -> first		5898402	0					
ANR	5898470	Identifier	log		5898402	0					
ANR	5898471	Identifier	first		5898402	1					
ANR	5898472	CallExpression	PULL8 ( buf + HEAD )		5898402	1					
ANR	5898473	Callee	PULL8		5898402	0					
ANR	5898474	Identifier	PULL8		5898402	0					
ANR	5898475	ArgumentList	buf + HEAD		5898402	1					
ANR	5898476	Argument	buf + HEAD		5898402	0					
ANR	5898477	AdditiveExpression	buf + HEAD		5898402	0		+			
ANR	5898478	Identifier	buf		5898402	0					
ANR	5898479	Identifier	HEAD		5898402	1					
ANR	5898480	ExpressionStatement	log -> last = PULL8 ( buf + HEAD + 8 )	421:4:20720:20753	5898402	4	True				
ANR	5898481	AssignmentExpression	log -> last = PULL8 ( buf + HEAD + 8 )		5898402	0		=			
ANR	5898482	PtrMemberAccess	log -> last		5898402	0					
ANR	5898483	Identifier	log		5898402	0					
ANR	5898484	Identifier	last		5898402	1					
ANR	5898485	CallExpression	PULL8 ( buf + HEAD + 8 )		5898402	1					
ANR	5898486	Callee	PULL8		5898402	0					
ANR	5898487	Identifier	PULL8		5898402	0					
ANR	5898488	ArgumentList	buf + HEAD + 8		5898402	1					
ANR	5898489	Argument	buf + HEAD + 8		5898402	0					
ANR	5898490	AdditiveExpression	buf + HEAD + 8		5898402	0		+			
ANR	5898491	Identifier	buf		5898402	0					
ANR	5898492	AdditiveExpression	HEAD + 8		5898402	1		+			
ANR	5898493	Identifier	HEAD		5898402	0					
ANR	5898494	PrimaryExpression	8		5898402	1					
ANR	5898495	ExpressionStatement	log -> ccrc = PULL4 ( buf + HEAD + 16 )	422:4:20759:20793	5898402	5	True				
ANR	5898496	AssignmentExpression	log -> ccrc = PULL4 ( buf + HEAD + 16 )		5898402	0		=			
ANR	5898497	PtrMemberAccess	log -> ccrc		5898402	0					
ANR	5898498	Identifier	log		5898402	0					
ANR	5898499	Identifier	ccrc		5898402	1					
ANR	5898500	CallExpression	PULL4 ( buf + HEAD + 16 )		5898402	1					
ANR	5898501	Callee	PULL4		5898402	0					
ANR	5898502	Identifier	PULL4		5898402	0					
ANR	5898503	ArgumentList	buf + HEAD + 16		5898402	1					
ANR	5898504	Argument	buf + HEAD + 16		5898402	0					
ANR	5898505	AdditiveExpression	buf + HEAD + 16		5898402	0		+			
ANR	5898506	Identifier	buf		5898402	0					
ANR	5898507	AdditiveExpression	HEAD + 16		5898402	1		+			
ANR	5898508	Identifier	HEAD		5898402	0					
ANR	5898509	PrimaryExpression	16		5898402	1					
ANR	5898510	ExpressionStatement	log -> clen = PULL4 ( buf + HEAD + 20 )	423:4:20799:20833	5898402	6	True				
ANR	5898511	AssignmentExpression	log -> clen = PULL4 ( buf + HEAD + 20 )		5898402	0		=			
ANR	5898512	PtrMemberAccess	log -> clen		5898402	0					
ANR	5898513	Identifier	log		5898402	0					
ANR	5898514	Identifier	clen		5898402	1					
ANR	5898515	CallExpression	PULL4 ( buf + HEAD + 20 )		5898402	1					
ANR	5898516	Callee	PULL4		5898402	0					
ANR	5898517	Identifier	PULL4		5898402	0					
ANR	5898518	ArgumentList	buf + HEAD + 20		5898402	1					
ANR	5898519	Argument	buf + HEAD + 20		5898402	0					
ANR	5898520	AdditiveExpression	buf + HEAD + 20		5898402	0		+			
ANR	5898521	Identifier	buf		5898402	0					
ANR	5898522	AdditiveExpression	HEAD + 20		5898402	1		+			
ANR	5898523	Identifier	HEAD		5898402	0					
ANR	5898524	PrimaryExpression	20		5898402	1					
ANR	5898525	ExpressionStatement	log -> tcrc = PULL4 ( buf + HEAD + 24 )	424:4:20839:20873	5898402	7	True				
ANR	5898526	AssignmentExpression	log -> tcrc = PULL4 ( buf + HEAD + 24 )		5898402	0		=			
ANR	5898527	PtrMemberAccess	log -> tcrc		5898402	0					
ANR	5898528	Identifier	log		5898402	0					
ANR	5898529	Identifier	tcrc		5898402	1					
ANR	5898530	CallExpression	PULL4 ( buf + HEAD + 24 )		5898402	1					
ANR	5898531	Callee	PULL4		5898402	0					
ANR	5898532	Identifier	PULL4		5898402	0					
ANR	5898533	ArgumentList	buf + HEAD + 24		5898402	1					
ANR	5898534	Argument	buf + HEAD + 24		5898402	0					
ANR	5898535	AdditiveExpression	buf + HEAD + 24		5898402	0		+			
ANR	5898536	Identifier	buf		5898402	0					
ANR	5898537	AdditiveExpression	HEAD + 24		5898402	1		+			
ANR	5898538	Identifier	HEAD		5898402	0					
ANR	5898539	PrimaryExpression	24		5898402	1					
ANR	5898540	ExpressionStatement	log -> tlen = PULL4 ( buf + HEAD + 28 )	425:4:20879:20913	5898402	8	True				
ANR	5898541	AssignmentExpression	log -> tlen = PULL4 ( buf + HEAD + 28 )		5898402	0		=			
ANR	5898542	PtrMemberAccess	log -> tlen		5898402	0					
ANR	5898543	Identifier	log		5898402	0					
ANR	5898544	Identifier	tlen		5898402	1					
ANR	5898545	CallExpression	PULL4 ( buf + HEAD + 28 )		5898402	1					
ANR	5898546	Callee	PULL4		5898402	0					
ANR	5898547	Identifier	PULL4		5898402	0					
ANR	5898548	ArgumentList	buf + HEAD + 28		5898402	1					
ANR	5898549	Argument	buf + HEAD + 28		5898402	0					
ANR	5898550	AdditiveExpression	buf + HEAD + 28		5898402	0		+			
ANR	5898551	Identifier	buf		5898402	0					
ANR	5898552	AdditiveExpression	HEAD + 28		5898402	1		+			
ANR	5898553	Identifier	HEAD		5898402	0					
ANR	5898554	PrimaryExpression	28		5898402	1					
ANR	5898555	ExpressionStatement	log -> stored = PULL2 ( buf + HEAD + 32 )	426:4:20919:20955	5898402	9	True				
ANR	5898556	AssignmentExpression	log -> stored = PULL2 ( buf + HEAD + 32 )		5898402	0		=			
ANR	5898557	PtrMemberAccess	log -> stored		5898402	0					
ANR	5898558	Identifier	log		5898402	0					
ANR	5898559	Identifier	stored		5898402	1					
ANR	5898560	CallExpression	PULL2 ( buf + HEAD + 32 )		5898402	1					
ANR	5898561	Callee	PULL2		5898402	0					
ANR	5898562	Identifier	PULL2		5898402	0					
ANR	5898563	ArgumentList	buf + HEAD + 32		5898402	1					
ANR	5898564	Argument	buf + HEAD + 32		5898402	0					
ANR	5898565	AdditiveExpression	buf + HEAD + 32		5898402	0		+			
ANR	5898566	Identifier	buf		5898402	0					
ANR	5898567	AdditiveExpression	HEAD + 32		5898402	1		+			
ANR	5898568	Identifier	HEAD		5898402	0					
ANR	5898569	PrimaryExpression	32		5898402	1					
ANR	5898570	ExpressionStatement	log -> back = 3 + ( buf [ HEAD + 34 ] & 7 )	427:4:20961:20997	5898402	10	True				
ANR	5898571	AssignmentExpression	log -> back = 3 + ( buf [ HEAD + 34 ] & 7 )		5898402	0		=			
ANR	5898572	PtrMemberAccess	log -> back		5898402	0					
ANR	5898573	Identifier	log		5898402	0					
ANR	5898574	Identifier	back		5898402	1					
ANR	5898575	AdditiveExpression	3 + ( buf [ HEAD + 34 ] & 7 )		5898402	1		+			
ANR	5898576	PrimaryExpression	3		5898402	0					
ANR	5898577	BitAndExpression	buf [ HEAD + 34 ] & 7		5898402	1		&			
ANR	5898578	ArrayIndexing	buf [ HEAD + 34 ]		5898402	0					
ANR	5898579	Identifier	buf		5898402	0					
ANR	5898580	AdditiveExpression	HEAD + 34		5898402	1		+			
ANR	5898581	Identifier	HEAD		5898402	0					
ANR	5898582	PrimaryExpression	34		5898402	1					
ANR	5898583	PrimaryExpression	7		5898402	1					
ANR	5898584	ExpressionStatement	op = ( buf [ HEAD + 34 ] >> 3 ) & 3	428:4:21003:21033	5898402	11	True				
ANR	5898585	AssignmentExpression	op = ( buf [ HEAD + 34 ] >> 3 ) & 3		5898402	0		=			
ANR	5898586	Identifier	op		5898402	0					
ANR	5898587	BitAndExpression	( buf [ HEAD + 34 ] >> 3 ) & 3		5898402	1		&			
ANR	5898588	ShiftExpression	buf [ HEAD + 34 ] >> 3		5898402	0		>>			
ANR	5898589	ArrayIndexing	buf [ HEAD + 34 ]		5898402	0					
ANR	5898590	Identifier	buf		5898402	0					
ANR	5898591	AdditiveExpression	HEAD + 34		5898402	1		+			
ANR	5898592	Identifier	HEAD		5898402	0					
ANR	5898593	PrimaryExpression	34		5898402	1					
ANR	5898594	PrimaryExpression	3		5898402	1					
ANR	5898595	PrimaryExpression	3		5898402	1					
ANR	5898596	ReturnStatement	return op ;	429:4:21039:21048	5898402	12	True				
ANR	5898597	Identifier	op		5898402	0					
ANR	5898598	ReturnType	local int		5898402	1					
ANR	5898599	Identifier	log_head		5898402	2					
ANR	5898600	ParameterList	struct log * log		5898402	3					
ANR	5898601	Parameter	struct log * log	410:19:20442:20456	5898402	0	True				
ANR	5898602	ParameterType	struct log *		5898402	0					
ANR	5898603	Identifier	log		5898402	1					
ANR	5898604	CFGEntryNode	ENTRY		5898402		True				
ANR	5898605	CFGExitNode	EXIT		5898402		True				
ANR	5898606	Symbol	PULL4		5898402						
ANR	5898607	Symbol	HEAD		5898402						
ANR	5898608	Symbol	PULL2		5898402						
ANR	5898609	Symbol	lseek		5898402						
ANR	5898610	Symbol	log		5898402						
ANR	5898611	Symbol	EXTRA		5898402						
ANR	5898612	Symbol	* HEAD		5898402						
ANR	5898613	Symbol	memcmp		5898402						
ANR	5898614	Symbol	PULL8		5898402						
ANR	5898615	Symbol	SEEK_SET		5898402						
ANR	5898616	Symbol	op		5898402						
ANR	5898617	Symbol	* buf		5898402						
ANR	5898618	Symbol	read		5898402						
ANR	5898619	Symbol	log -> fd		5898402						
ANR	5898620	Symbol	log -> first		5898402						
ANR	5898621	Symbol	log -> tlen		5898402						
ANR	5898622	Symbol	log -> tcrc		5898402						
ANR	5898623	Symbol	log -> back		5898402						
ANR	5898624	Symbol	* log		5898402						
ANR	5898625	Symbol	buf		5898402						
ANR	5898626	Symbol	log_gzhead		5898402						
ANR	5898627	Symbol	log -> last		5898402						
ANR	5898628	Symbol	log -> ccrc		5898402						
ANR	5898629	Symbol	log -> clen		5898402						
ANR	5898630	Symbol	log -> stored		5898402						
ANR	5898631	Function	log_mark	437:0:21433:21938							
ANR	5898632	FunctionDef	"log_mark (struct log * log , int op)"		5898631	0					
ANR	5898633	CompoundStatement		438:0:21477:21938	5898631	0					
ANR	5898634	IdentifierDeclStatement	int ret ;	439:4:21483:21490	5898631	0	True				
ANR	5898635	IdentifierDecl	ret		5898631	0					
ANR	5898636	IdentifierDeclType	int		5898631	0					
ANR	5898637	Identifier	ret		5898631	1					
ANR	5898638	IdentifierDeclStatement	unsigned char ext [ EXTRA ] ;	440:4:21496:21520	5898631	1	True				
ANR	5898639	IdentifierDecl	ext [ EXTRA ]		5898631	0					
ANR	5898640	IdentifierDeclType	unsigned char [ EXTRA ]		5898631	0					
ANR	5898641	Identifier	ext		5898631	1					
ANR	5898642	Identifier	EXTRA		5898631	2					
ANR	5898643	ExpressionStatement	"PUT8 ( ext , log -> first )"	442:4:21527:21548	5898631	2	True				
ANR	5898644	CallExpression	"PUT8 ( ext , log -> first )"		5898631	0					
ANR	5898645	Callee	PUT8		5898631	0					
ANR	5898646	Identifier	PUT8		5898631	0					
ANR	5898647	ArgumentList	ext		5898631	1					
ANR	5898648	Argument	ext		5898631	0					
ANR	5898649	Identifier	ext		5898631	0					
ANR	5898650	Argument	log -> first		5898631	1					
ANR	5898651	PtrMemberAccess	log -> first		5898631	0					
ANR	5898652	Identifier	log		5898631	0					
ANR	5898653	Identifier	first		5898631	1					
ANR	5898654	ExpressionStatement	"PUT8 ( ext + 8 , log -> last )"	443:4:21554:21578	5898631	3	True				
ANR	5898655	CallExpression	"PUT8 ( ext + 8 , log -> last )"		5898631	0					
ANR	5898656	Callee	PUT8		5898631	0					
ANR	5898657	Identifier	PUT8		5898631	0					
ANR	5898658	ArgumentList	ext + 8		5898631	1					
ANR	5898659	Argument	ext + 8		5898631	0					
ANR	5898660	AdditiveExpression	ext + 8		5898631	0		+			
ANR	5898661	Identifier	ext		5898631	0					
ANR	5898662	PrimaryExpression	8		5898631	1					
ANR	5898663	Argument	log -> last		5898631	1					
ANR	5898664	PtrMemberAccess	log -> last		5898631	0					
ANR	5898665	Identifier	log		5898631	0					
ANR	5898666	Identifier	last		5898631	1					
ANR	5898667	ExpressionStatement	"PUT4 ( ext + 16 , log -> ccrc )"	444:4:21584:21609	5898631	4	True				
ANR	5898668	CallExpression	"PUT4 ( ext + 16 , log -> ccrc )"		5898631	0					
ANR	5898669	Callee	PUT4		5898631	0					
ANR	5898670	Identifier	PUT4		5898631	0					
ANR	5898671	ArgumentList	ext + 16		5898631	1					
ANR	5898672	Argument	ext + 16		5898631	0					
ANR	5898673	AdditiveExpression	ext + 16		5898631	0		+			
ANR	5898674	Identifier	ext		5898631	0					
ANR	5898675	PrimaryExpression	16		5898631	1					
ANR	5898676	Argument	log -> ccrc		5898631	1					
ANR	5898677	PtrMemberAccess	log -> ccrc		5898631	0					
ANR	5898678	Identifier	log		5898631	0					
ANR	5898679	Identifier	ccrc		5898631	1					
ANR	5898680	ExpressionStatement	"PUT4 ( ext + 20 , log -> clen )"	445:4:21615:21640	5898631	5	True				
ANR	5898681	CallExpression	"PUT4 ( ext + 20 , log -> clen )"		5898631	0					
ANR	5898682	Callee	PUT4		5898631	0					
ANR	5898683	Identifier	PUT4		5898631	0					
ANR	5898684	ArgumentList	ext + 20		5898631	1					
ANR	5898685	Argument	ext + 20		5898631	0					
ANR	5898686	AdditiveExpression	ext + 20		5898631	0		+			
ANR	5898687	Identifier	ext		5898631	0					
ANR	5898688	PrimaryExpression	20		5898631	1					
ANR	5898689	Argument	log -> clen		5898631	1					
ANR	5898690	PtrMemberAccess	log -> clen		5898631	0					
ANR	5898691	Identifier	log		5898631	0					
ANR	5898692	Identifier	clen		5898631	1					
ANR	5898693	ExpressionStatement	"PUT4 ( ext + 24 , log -> tcrc )"	446:4:21646:21671	5898631	6	True				
ANR	5898694	CallExpression	"PUT4 ( ext + 24 , log -> tcrc )"		5898631	0					
ANR	5898695	Callee	PUT4		5898631	0					
ANR	5898696	Identifier	PUT4		5898631	0					
ANR	5898697	ArgumentList	ext + 24		5898631	1					
ANR	5898698	Argument	ext + 24		5898631	0					
ANR	5898699	AdditiveExpression	ext + 24		5898631	0		+			
ANR	5898700	Identifier	ext		5898631	0					
ANR	5898701	PrimaryExpression	24		5898631	1					
ANR	5898702	Argument	log -> tcrc		5898631	1					
ANR	5898703	PtrMemberAccess	log -> tcrc		5898631	0					
ANR	5898704	Identifier	log		5898631	0					
ANR	5898705	Identifier	tcrc		5898631	1					
ANR	5898706	ExpressionStatement	"PUT4 ( ext + 28 , log -> tlen )"	447:4:21677:21702	5898631	7	True				
ANR	5898707	CallExpression	"PUT4 ( ext + 28 , log -> tlen )"		5898631	0					
ANR	5898708	Callee	PUT4		5898631	0					
ANR	5898709	Identifier	PUT4		5898631	0					
ANR	5898710	ArgumentList	ext + 28		5898631	1					
ANR	5898711	Argument	ext + 28		5898631	0					
ANR	5898712	AdditiveExpression	ext + 28		5898631	0		+			
ANR	5898713	Identifier	ext		5898631	0					
ANR	5898714	PrimaryExpression	28		5898631	1					
ANR	5898715	Argument	log -> tlen		5898631	1					
ANR	5898716	PtrMemberAccess	log -> tlen		5898631	0					
ANR	5898717	Identifier	log		5898631	0					
ANR	5898718	Identifier	tlen		5898631	1					
ANR	5898719	ExpressionStatement	"PUT2 ( ext + 32 , log -> stored )"	448:4:21708:21735	5898631	8	True				
ANR	5898720	CallExpression	"PUT2 ( ext + 32 , log -> stored )"		5898631	0					
ANR	5898721	Callee	PUT2		5898631	0					
ANR	5898722	Identifier	PUT2		5898631	0					
ANR	5898723	ArgumentList	ext + 32		5898631	1					
ANR	5898724	Argument	ext + 32		5898631	0					
ANR	5898725	AdditiveExpression	ext + 32		5898631	0		+			
ANR	5898726	Identifier	ext		5898631	0					
ANR	5898727	PrimaryExpression	32		5898631	1					
ANR	5898728	Argument	log -> stored		5898631	1					
ANR	5898729	PtrMemberAccess	log -> stored		5898631	0					
ANR	5898730	Identifier	log		5898631	0					
ANR	5898731	Identifier	stored		5898631	1					
ANR	5898732	ExpressionStatement	ext [ 34 ] = log -> back - 3 + ( op << 3 )	449:4:21741:21776	5898631	9	True				
ANR	5898733	AssignmentExpression	ext [ 34 ] = log -> back - 3 + ( op << 3 )		5898631	0		=			
ANR	5898734	ArrayIndexing	ext [ 34 ]		5898631	0					
ANR	5898735	Identifier	ext		5898631	0					
ANR	5898736	PrimaryExpression	34		5898631	1					
ANR	5898737	AdditiveExpression	log -> back - 3 + ( op << 3 )		5898631	1		-			
ANR	5898738	PtrMemberAccess	log -> back		5898631	0					
ANR	5898739	Identifier	log		5898631	0					
ANR	5898740	Identifier	back		5898631	1					
ANR	5898741	AdditiveExpression	3 + ( op << 3 )		5898631	1		+			
ANR	5898742	PrimaryExpression	3		5898631	0					
ANR	5898743	ShiftExpression	op << 3		5898631	1		<<			
ANR	5898744	Identifier	op		5898631	0					
ANR	5898745	PrimaryExpression	3		5898631	1					
ANR	5898746	ExpressionStatement	fsync ( log -> fd )	450:4:21782:21796	5898631	10	True				
ANR	5898747	CallExpression	fsync ( log -> fd )		5898631	0					
ANR	5898748	Callee	fsync		5898631	0					
ANR	5898749	Identifier	fsync		5898631	0					
ANR	5898750	ArgumentList	log -> fd		5898631	1					
ANR	5898751	Argument	log -> fd		5898631	0					
ANR	5898752	PtrMemberAccess	log -> fd		5898631	0					
ANR	5898753	Identifier	log		5898631	0					
ANR	5898754	Identifier	fd		5898631	1					
ANR	5898755	ExpressionStatement	"ret = lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA ? - 1 : 0"	451:4:21802:21900	5898631	11	True				
ANR	5898756	AssignmentExpression	"ret = lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA ? - 1 : 0"		5898631	0		=			
ANR	5898757	Identifier	ret		5898631	0					
ANR	5898758	ConditionalExpression	"lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA ? - 1 : 0"		5898631	1					
ANR	5898759	Condition	"lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA"		5898631	0					
ANR	5898760	OrExpression	"lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA"		5898631	0		||			
ANR	5898761	RelationalExpression	"lseek ( log -> fd , HEAD , SEEK_SET ) < 0"		5898631	0		<			
ANR	5898762	CallExpression	"lseek ( log -> fd , HEAD , SEEK_SET )"		5898631	0					
ANR	5898763	Callee	lseek		5898631	0					
ANR	5898764	Identifier	lseek		5898631	0					
ANR	5898765	ArgumentList	log -> fd		5898631	1					
ANR	5898766	Argument	log -> fd		5898631	0					
ANR	5898767	PtrMemberAccess	log -> fd		5898631	0					
ANR	5898768	Identifier	log		5898631	0					
ANR	5898769	Identifier	fd		5898631	1					
ANR	5898770	Argument	HEAD		5898631	1					
ANR	5898771	Identifier	HEAD		5898631	0					
ANR	5898772	Argument	SEEK_SET		5898631	2					
ANR	5898773	Identifier	SEEK_SET		5898631	0					
ANR	5898774	PrimaryExpression	0		5898631	1					
ANR	5898775	EqualityExpression	"write ( log -> fd , ext , EXTRA ) != EXTRA"		5898631	1		!=			
ANR	5898776	CallExpression	"write ( log -> fd , ext , EXTRA )"		5898631	0					
ANR	5898777	Callee	write		5898631	0					
ANR	5898778	Identifier	write		5898631	0					
ANR	5898779	ArgumentList	log -> fd		5898631	1					
ANR	5898780	Argument	log -> fd		5898631	0					
ANR	5898781	PtrMemberAccess	log -> fd		5898631	0					
ANR	5898782	Identifier	log		5898631	0					
ANR	5898783	Identifier	fd		5898631	1					
ANR	5898784	Argument	ext		5898631	1					
ANR	5898785	Identifier	ext		5898631	0					
ANR	5898786	Argument	EXTRA		5898631	2					
ANR	5898787	Identifier	EXTRA		5898631	0					
ANR	5898788	Identifier	EXTRA		5898631	1					
ANR	5898789	UnaryOperationExpression	- 1		5898631	1					
ANR	5898790	UnaryOperator	-		5898631	0					
ANR	5898791	PrimaryExpression	1		5898631	1					
ANR	5898792	PrimaryExpression	0		5898631	2					
ANR	5898793	ExpressionStatement	fsync ( log -> fd )	453:4:21906:21920	5898631	12	True				
ANR	5898794	CallExpression	fsync ( log -> fd )		5898631	0					
ANR	5898795	Callee	fsync		5898631	0					
ANR	5898796	Identifier	fsync		5898631	0					
ANR	5898797	ArgumentList	log -> fd		5898631	1					
ANR	5898798	Argument	log -> fd		5898631	0					
ANR	5898799	PtrMemberAccess	log -> fd		5898631	0					
ANR	5898800	Identifier	log		5898631	0					
ANR	5898801	Identifier	fd		5898631	1					
ANR	5898802	ReturnStatement	return ret ;	454:4:21926:21936	5898631	13	True				
ANR	5898803	Identifier	ret		5898631	0					
ANR	5898804	ReturnType	local int		5898631	1					
ANR	5898805	Identifier	log_mark		5898631	2					
ANR	5898806	ParameterList	"struct log * log , int op"		5898631	3					
ANR	5898807	Parameter	struct log * log	437:19:21452:21466	5898631	0	True				
ANR	5898808	ParameterType	struct log *		5898631	0					
ANR	5898809	Identifier	log		5898631	1					
ANR	5898810	Parameter	int op	437:36:21469:21474	5898631	1	True				
ANR	5898811	ParameterType	int		5898631	0					
ANR	5898812	Identifier	op		5898631	1					
ANR	5898813	CFGEntryNode	ENTRY		5898631		True				
ANR	5898814	CFGExitNode	EXIT		5898631		True				
ANR	5898815	Symbol	ret		5898631						
ANR	5898816	Symbol	ext		5898631						
ANR	5898817	Symbol	SEEK_SET		5898631						
ANR	5898818	Symbol	op		5898631						
ANR	5898819	Symbol	HEAD		5898631						
ANR	5898820	Symbol	lseek		5898631						
ANR	5898821	Symbol	log -> fd		5898631						
ANR	5898822	Symbol	log		5898631						
ANR	5898823	Symbol	EXTRA		5898631						
ANR	5898824	Symbol	log -> first		5898631						
ANR	5898825	Symbol	log -> tlen		5898631						
ANR	5898826	Symbol	log -> tcrc		5898631						
ANR	5898827	Symbol	log -> back		5898631						
ANR	5898828	Symbol	* log		5898631						
ANR	5898829	Symbol	* ext		5898631						
ANR	5898830	Symbol	log -> last		5898631						
ANR	5898831	Symbol	log -> ccrc		5898631						
ANR	5898832	Symbol	log -> clen		5898631						
ANR	5898833	Symbol	log -> stored		5898631						
ANR	5898834	Symbol	write		5898631						
ANR	5898835	Function	log_last	462:0:22312:23782							
ANR	5898836	FunctionDef	"log_last (struct log * log , int last)"		5898835	0					
ANR	5898837	CompoundStatement		463:0:22358:23782	5898835	0					
ANR	5898838	IdentifierDeclStatement	"int back , len , mask ;"	464:4:22364:22383	5898835	0	True				
ANR	5898839	IdentifierDecl	back		5898835	0					
ANR	5898840	IdentifierDeclType	int		5898835	0					
ANR	5898841	Identifier	back		5898835	1					
ANR	5898842	IdentifierDecl	len		5898835	1					
ANR	5898843	IdentifierDeclType	int		5898835	0					
ANR	5898844	Identifier	len		5898835	1					
ANR	5898845	IdentifierDecl	mask		5898835	2					
ANR	5898846	IdentifierDeclType	int		5898835	0					
ANR	5898847	Identifier	mask		5898835	1					
ANR	5898848	IdentifierDeclStatement	unsigned char buf [ 6 ] ;	465:4:22389:22409	5898835	1	True				
ANR	5898849	IdentifierDecl	buf [ 6 ]		5898835	0					
ANR	5898850	IdentifierDeclType	unsigned char [ 6 ]		5898835	0					
ANR	5898851	Identifier	buf		5898835	1					
ANR	5898852	PrimaryExpression	6		5898835	2					
ANR	5898853	ExpressionStatement	back = log -> last == log -> first ? log -> back : 8	468:4:22482:22528	5898835	2	True				
ANR	5898854	AssignmentExpression	back = log -> last == log -> first ? log -> back : 8		5898835	0		=			
ANR	5898855	Identifier	back		5898835	0					
ANR	5898856	ConditionalExpression	log -> last == log -> first ? log -> back : 8		5898835	1					
ANR	5898857	Condition	log -> last == log -> first		5898835	0					
ANR	5898858	EqualityExpression	log -> last == log -> first		5898835	0		==			
ANR	5898859	PtrMemberAccess	log -> last		5898835	0					
ANR	5898860	Identifier	log		5898835	0					
ANR	5898861	Identifier	last		5898835	1					
ANR	5898862	PtrMemberAccess	log -> first		5898835	1					
ANR	5898863	Identifier	log		5898835	0					
ANR	5898864	Identifier	first		5898835	1					
ANR	5898865	PtrMemberAccess	log -> back		5898835	1					
ANR	5898866	Identifier	log		5898835	0					
ANR	5898867	Identifier	back		5898835	1					
ANR	5898868	PrimaryExpression	8		5898835	2					
ANR	5898869	ExpressionStatement	len = back > 8 ? 2 : 1	469:4:22534:22556	5898835	3	True				
ANR	5898870	AssignmentExpression	len = back > 8 ? 2 : 1		5898835	0		=			
ANR	5898871	Identifier	len		5898835	0					
ANR	5898872	ConditionalExpression	back > 8 ? 2 : 1		5898835	1					
ANR	5898873	Condition	back > 8		5898835	0					
ANR	5898874	RelationalExpression	back > 8		5898835	0		>			
ANR	5898875	Identifier	back		5898835	0					
ANR	5898876	PrimaryExpression	8		5898835	1					
ANR	5898877	PrimaryExpression	2		5898835	1					
ANR	5898878	PrimaryExpression	1		5898835	2					
ANR	5898879	ExpressionStatement	mask = 0x80 >> ( ( back - 1 ) & 7 )	470:4:22610:22641	5898835	4	True				
ANR	5898880	AssignmentExpression	mask = 0x80 >> ( ( back - 1 ) & 7 )		5898835	0		=			
ANR	5898881	Identifier	mask		5898835	0					
ANR	5898882	ShiftExpression	0x80 >> ( ( back - 1 ) & 7 )		5898835	1		>>			
ANR	5898883	PrimaryExpression	0x80		5898835	0					
ANR	5898884	BitAndExpression	( back - 1 ) & 7		5898835	1		&			
ANR	5898885	AdditiveExpression	back - 1		5898835	0		-			
ANR	5898886	Identifier	back		5898835	0					
ANR	5898887	PrimaryExpression	1		5898835	1					
ANR	5898888	PrimaryExpression	7		5898835	1					
ANR	5898889	ExpressionStatement	buf [ 0 ] = 0	475:4:22881:22891	5898835	5	True				
ANR	5898890	AssignmentExpression	buf [ 0 ] = 0		5898835	0		=			
ANR	5898891	ArrayIndexing	buf [ 0 ]		5898835	0					
ANR	5898892	Identifier	buf		5898835	0					
ANR	5898893	PrimaryExpression	0		5898835	1					
ANR	5898894	PrimaryExpression	0		5898835	1					
ANR	5898895	IfStatement	"if ( back != 8 && ( lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 ) )"		5898835	6					
ANR	5898896	Condition	"back != 8 && ( lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 )"	476:8:22901:23012	5898835	0	True				
ANR	5898897	AndExpression	"back != 8 && ( lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 )"		5898835	0		&&			
ANR	5898898	EqualityExpression	back != 8		5898835	0		!=			
ANR	5898899	Identifier	back		5898835	0					
ANR	5898900	PrimaryExpression	8		5898835	1					
ANR	5898901	OrExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1"		5898835	1		||			
ANR	5898902	RelationalExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0"		5898835	0		<			
ANR	5898903	CallExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET )"		5898835	0					
ANR	5898904	Callee	lseek		5898835	0					
ANR	5898905	Identifier	lseek		5898835	0					
ANR	5898906	ArgumentList	log -> fd		5898835	1					
ANR	5898907	Argument	log -> fd		5898835	0					
ANR	5898908	PtrMemberAccess	log -> fd		5898835	0					
ANR	5898909	Identifier	log		5898835	0					
ANR	5898910	Identifier	fd		5898835	1					
ANR	5898911	Argument	log -> last - len		5898835	1					
ANR	5898912	AdditiveExpression	log -> last - len		5898835	0		-			
ANR	5898913	PtrMemberAccess	log -> last		5898835	0					
ANR	5898914	Identifier	log		5898835	0					
ANR	5898915	Identifier	last		5898835	1					
ANR	5898916	Identifier	len		5898835	1					
ANR	5898917	Argument	SEEK_SET		5898835	2					
ANR	5898918	Identifier	SEEK_SET		5898835	0					
ANR	5898919	PrimaryExpression	0		5898835	1					
ANR	5898920	EqualityExpression	"read ( log -> fd , buf , 1 ) != 1"		5898835	1		!=			
ANR	5898921	CallExpression	"read ( log -> fd , buf , 1 )"		5898835	0					
ANR	5898922	Callee	read		5898835	0					
ANR	5898923	Identifier	read		5898835	0					
ANR	5898924	ArgumentList	log -> fd		5898835	1					
ANR	5898925	Argument	log -> fd		5898835	0					
ANR	5898926	PtrMemberAccess	log -> fd		5898835	0					
ANR	5898927	Identifier	log		5898835	0					
ANR	5898928	Identifier	fd		5898835	1					
ANR	5898929	Argument	buf		5898835	1					
ANR	5898930	Identifier	buf		5898835	0					
ANR	5898931	Argument	1		5898835	2					
ANR	5898932	PrimaryExpression	1		5898835	0					
ANR	5898933	PrimaryExpression	1		5898835	1					
ANR	5898934	ReturnStatement	return - 1 ;	478:8:23023:23032	5898835	1	True				
ANR	5898935	UnaryOperationExpression	- 1		5898835	0					
ANR	5898936	UnaryOperator	-		5898835	0					
ANR	5898937	PrimaryExpression	1		5898835	1					
ANR	5898938	ExpressionStatement	buf [ 1 ] = 0	484:4:23322:23332	5898835	7	True				
ANR	5898939	AssignmentExpression	buf [ 1 ] = 0		5898835	0		=			
ANR	5898940	ArrayIndexing	buf [ 1 ]		5898835	0					
ANR	5898941	Identifier	buf		5898835	0					
ANR	5898942	PrimaryExpression	1		5898835	1					
ANR	5898943	PrimaryExpression	0		5898835	1					
ANR	5898944	ExpressionStatement	buf [ 2 - len ] = ( * buf & ( mask - 1 ) ) + ( last ? mask : 0 )	485:4:23338:23392	5898835	8	True				
ANR	5898945	AssignmentExpression	buf [ 2 - len ] = ( * buf & ( mask - 1 ) ) + ( last ? mask : 0 )		5898835	0		=			
ANR	5898946	ArrayIndexing	buf [ 2 - len ]		5898835	0					
ANR	5898947	Identifier	buf		5898835	0					
ANR	5898948	AdditiveExpression	2 - len		5898835	1		-			
ANR	5898949	PrimaryExpression	2		5898835	0					
ANR	5898950	Identifier	len		5898835	1					
ANR	5898951	AdditiveExpression	( * buf & ( mask - 1 ) ) + ( last ? mask : 0 )		5898835	1		+			
ANR	5898952	BitAndExpression	* buf & ( mask - 1 )		5898835	0		&			
ANR	5898953	UnaryOperationExpression	* buf		5898835	0					
ANR	5898954	UnaryOperator	*		5898835	0					
ANR	5898955	Identifier	buf		5898835	1					
ANR	5898956	AdditiveExpression	mask - 1		5898835	1		-			
ANR	5898957	Identifier	mask		5898835	0					
ANR	5898958	PrimaryExpression	1		5898835	1					
ANR	5898959	ConditionalExpression	last ? mask : 0		5898835	1					
ANR	5898960	Condition	last		5898835	0					
ANR	5898961	Identifier	last		5898835	0					
ANR	5898962	Identifier	mask		5898835	1					
ANR	5898963	PrimaryExpression	0		5898835	2					
ANR	5898964	ExpressionStatement	"PUT2 ( buf + 2 , log -> stored )"	489:4:23526:23552	5898835	9	True				
ANR	5898965	CallExpression	"PUT2 ( buf + 2 , log -> stored )"		5898835	0					
ANR	5898966	Callee	PUT2		5898835	0					
ANR	5898967	Identifier	PUT2		5898835	0					
ANR	5898968	ArgumentList	buf + 2		5898835	1					
ANR	5898969	Argument	buf + 2		5898835	0					
ANR	5898970	AdditiveExpression	buf + 2		5898835	0		+			
ANR	5898971	Identifier	buf		5898835	0					
ANR	5898972	PrimaryExpression	2		5898835	1					
ANR	5898973	Argument	log -> stored		5898835	1					
ANR	5898974	PtrMemberAccess	log -> stored		5898835	0					
ANR	5898975	Identifier	log		5898835	0					
ANR	5898976	Identifier	stored		5898835	1					
ANR	5898977	ExpressionStatement	"PUT2 ( buf + 4 , log -> stored ^ 0xffff )"	490:4:23558:23593	5898835	10	True				
ANR	5898978	CallExpression	"PUT2 ( buf + 4 , log -> stored ^ 0xffff )"		5898835	0					
ANR	5898979	Callee	PUT2		5898835	0					
ANR	5898980	Identifier	PUT2		5898835	0					
ANR	5898981	ArgumentList	buf + 4		5898835	1					
ANR	5898982	Argument	buf + 4		5898835	0					
ANR	5898983	AdditiveExpression	buf + 4		5898835	0		+			
ANR	5898984	Identifier	buf		5898835	0					
ANR	5898985	PrimaryExpression	4		5898835	1					
ANR	5898986	Argument	log -> stored ^ 0xffff		5898835	1					
ANR	5898987	ExclusiveOrExpression	log -> stored ^ 0xffff		5898835	0		^			
ANR	5898988	PtrMemberAccess	log -> stored		5898835	0					
ANR	5898989	Identifier	log		5898835	0					
ANR	5898990	Identifier	stored		5898835	1					
ANR	5898991	PrimaryExpression	0xffff		5898835	1					
ANR	5898992	ReturnStatement	"return lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0 ? - 1 : 0 ;"	491:4:23599:23780	5898835	11	True				
ANR	5898993	ConditionalExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0 ? - 1 : 0"		5898835	0					
ANR	5898994	Condition	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0"		5898835	0					
ANR	5898995	OrExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0"		5898835	0		||			
ANR	5898996	RelationalExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0"		5898835	0		<			
ANR	5898997	CallExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET )"		5898835	0					
ANR	5898998	Callee	lseek		5898835	0					
ANR	5898999	Identifier	lseek		5898835	0					
ANR	5899000	ArgumentList	log -> fd		5898835	1					
ANR	5899001	Argument	log -> fd		5898835	0					
ANR	5899002	PtrMemberAccess	log -> fd		5898835	0					
ANR	5899003	Identifier	log		5898835	0					
ANR	5899004	Identifier	fd		5898835	1					
ANR	5899005	Argument	log -> last - len		5898835	1					
ANR	5899006	AdditiveExpression	log -> last - len		5898835	0		-			
ANR	5899007	PtrMemberAccess	log -> last		5898835	0					
ANR	5899008	Identifier	log		5898835	0					
ANR	5899009	Identifier	last		5898835	1					
ANR	5899010	Identifier	len		5898835	1					
ANR	5899011	Argument	SEEK_SET		5898835	2					
ANR	5899012	Identifier	SEEK_SET		5898835	0					
ANR	5899013	PrimaryExpression	0		5898835	1					
ANR	5899014	OrExpression	"write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0"		5898835	1		||			
ANR	5899015	EqualityExpression	"write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4"		5898835	0		!=			
ANR	5899016	CallExpression	"write ( log -> fd , buf + 2 - len , len + 4 )"		5898835	0					
ANR	5899017	Callee	write		5898835	0					
ANR	5899018	Identifier	write		5898835	0					
ANR	5899019	ArgumentList	log -> fd		5898835	1					
ANR	5899020	Argument	log -> fd		5898835	0					
ANR	5899021	PtrMemberAccess	log -> fd		5898835	0					
ANR	5899022	Identifier	log		5898835	0					
ANR	5899023	Identifier	fd		5898835	1					
ANR	5899024	Argument	buf + 2 - len		5898835	1					
ANR	5899025	AdditiveExpression	buf + 2 - len		5898835	0		+			
ANR	5899026	Identifier	buf		5898835	0					
ANR	5899027	AdditiveExpression	2 - len		5898835	1		-			
ANR	5899028	PrimaryExpression	2		5898835	0					
ANR	5899029	Identifier	len		5898835	1					
ANR	5899030	Argument	len + 4		5898835	2					
ANR	5899031	AdditiveExpression	len + 4		5898835	0		+			
ANR	5899032	Identifier	len		5898835	0					
ANR	5899033	PrimaryExpression	4		5898835	1					
ANR	5899034	AdditiveExpression	len + 4		5898835	1		+			
ANR	5899035	Identifier	len		5898835	0					
ANR	5899036	PrimaryExpression	4		5898835	1					
ANR	5899037	RelationalExpression	"lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0"		5898835	1		<			
ANR	5899038	CallExpression	"lseek ( log -> fd , log -> stored , SEEK_CUR )"		5898835	0					
ANR	5899039	Callee	lseek		5898835	0					
ANR	5899040	Identifier	lseek		5898835	0					
ANR	5899041	ArgumentList	log -> fd		5898835	1					
ANR	5899042	Argument	log -> fd		5898835	0					
ANR	5899043	PtrMemberAccess	log -> fd		5898835	0					
ANR	5899044	Identifier	log		5898835	0					
ANR	5899045	Identifier	fd		5898835	1					
ANR	5899046	Argument	log -> stored		5898835	1					
ANR	5899047	PtrMemberAccess	log -> stored		5898835	0					
ANR	5899048	Identifier	log		5898835	0					
ANR	5899049	Identifier	stored		5898835	1					
ANR	5899050	Argument	SEEK_CUR		5898835	2					
ANR	5899051	Identifier	SEEK_CUR		5898835	0					
ANR	5899052	PrimaryExpression	0		5898835	1					
ANR	5899053	UnaryOperationExpression	- 1		5898835	1					
ANR	5899054	UnaryOperator	-		5898835	0					
ANR	5899055	PrimaryExpression	1		5898835	1					
ANR	5899056	PrimaryExpression	0		5898835	2					
ANR	5899057	ReturnType	local int		5898835	1					
ANR	5899058	Identifier	log_last		5898835	2					
ANR	5899059	ParameterList	"struct log * log , int last"		5898835	3					
ANR	5899060	Parameter	struct log * log	462:19:22331:22345	5898835	0	True				
ANR	5899061	ParameterType	struct log *		5898835	0					
ANR	5899062	Identifier	log		5898835	1					
ANR	5899063	Parameter	int last	462:36:22348:22355	5898835	1	True				
ANR	5899064	ParameterType	int		5898835	0					
ANR	5899065	Identifier	last		5898835	1					
ANR	5899066	CFGEntryNode	ENTRY		5898835		True				
ANR	5899067	CFGExitNode	EXIT		5898835		True				
ANR	5899068	Symbol	SEEK_SET		5898835						
ANR	5899069	Symbol	* buf		5898835						
ANR	5899070	Symbol	lseek		5898835						
ANR	5899071	Symbol	read		5898835						
ANR	5899072	Symbol	SEEK_CUR		5898835						
ANR	5899073	Symbol	last		5898835						
ANR	5899074	Symbol	log -> fd		5898835						
ANR	5899075	Symbol	log		5898835						
ANR	5899076	Symbol	back		5898835						
ANR	5899077	Symbol	log -> first		5898835						
ANR	5899078	Symbol	log -> back		5898835						
ANR	5899079	Symbol	* log		5898835						
ANR	5899080	Symbol	buf		5898835						
ANR	5899081	Symbol	len		5898835						
ANR	5899082	Symbol	log -> last		5898835						
ANR	5899083	Symbol	log -> stored		5898835						
ANR	5899084	Symbol	write		5898835						
ANR	5899085	Symbol	mask		5898835						
ANR	5899086	Symbol	* len		5898835						
ANR	5899087	Function	log_append	501:0:24118:26107							
ANR	5899088	FunctionDef	"log_append (struct log * log , unsigned char * data , size_t len)"		5899087	0					
ANR	5899089	CompoundStatement		502:0:24189:26107	5899087	0					
ANR	5899090	IdentifierDeclStatement	uint put ;	503:4:24195:24203	5899087	0	True				
ANR	5899091	IdentifierDecl	put		5899087	0					
ANR	5899092	IdentifierDeclType	uint		5899087	0					
ANR	5899093	Identifier	put		5899087	1					
ANR	5899094	IdentifierDeclStatement	off_t end ;	504:4:24209:24218	5899087	1	True				
ANR	5899095	IdentifierDecl	end		5899087	0					
ANR	5899096	IdentifierDeclType	off_t		5899087	0					
ANR	5899097	Identifier	end		5899087	1					
ANR	5899098	IdentifierDeclStatement	unsigned char buf [ 8 ] ;	505:4:24224:24244	5899087	2	True				
ANR	5899099	IdentifierDecl	buf [ 8 ]		5899087	0					
ANR	5899100	IdentifierDeclType	unsigned char [ 8 ]		5899087	0					
ANR	5899101	Identifier	buf		5899087	1					
ANR	5899102	PrimaryExpression	8		5899087	2					
ANR	5899103	IfStatement	"if ( log_last ( log , 1 ) )"		5899087	3					
ANR	5899104	Condition	"log_last ( log , 1 )"	510:8:24415:24430	5899087	0	True				
ANR	5899105	CallExpression	"log_last ( log , 1 )"		5899087	0					
ANR	5899106	Callee	log_last		5899087	0					
ANR	5899107	Identifier	log_last		5899087	0					
ANR	5899108	ArgumentList	log		5899087	1					
ANR	5899109	Argument	log		5899087	0					
ANR	5899110	Identifier	log		5899087	0					
ANR	5899111	Argument	1		5899087	1					
ANR	5899112	PrimaryExpression	1		5899087	0					
ANR	5899113	ReturnStatement	return - 1 ;	511:8:24441:24450	5899087	1	True				
ANR	5899114	UnaryOperationExpression	- 1		5899087	0					
ANR	5899115	UnaryOperator	-		5899087	0					
ANR	5899116	PrimaryExpression	1		5899087	1					
ANR	5899117	WhileStatement	while ( len )		5899087	4					
ANR	5899118	Condition	len	515:11:24606:24608	5899087	0	True				
ANR	5899119	Identifier	len		5899087	0					
ANR	5899120	CompoundStatement		14:16:421:421	5899087	1					
ANR	5899121	ExpressionStatement	put = ( MAX_STORE << 10 ) - log -> stored	517:8:24678:24715	5899087	0	True				
ANR	5899122	AssignmentExpression	put = ( MAX_STORE << 10 ) - log -> stored		5899087	0		=			
ANR	5899123	Identifier	put		5899087	0					
ANR	5899124	AdditiveExpression	( MAX_STORE << 10 ) - log -> stored		5899087	1		-			
ANR	5899125	ShiftExpression	MAX_STORE << 10		5899087	0		<<			
ANR	5899126	Identifier	MAX_STORE		5899087	0					
ANR	5899127	PrimaryExpression	10		5899087	1					
ANR	5899128	PtrMemberAccess	log -> stored		5899087	1					
ANR	5899129	Identifier	log		5899087	0					
ANR	5899130	Identifier	stored		5899087	1					
ANR	5899131	IfStatement	if ( put > len )		5899087	1					
ANR	5899132	Condition	put > len	518:12:24729:24737	5899087	0	True				
ANR	5899133	RelationalExpression	put > len		5899087	0		>			
ANR	5899134	Identifier	put		5899087	0					
ANR	5899135	Identifier	len		5899087	1					
ANR	5899136	ExpressionStatement	put = ( uint ) len	519:12:24752:24767	5899087	1	True				
ANR	5899137	AssignmentExpression	put = ( uint ) len		5899087	0		=			
ANR	5899138	Identifier	put		5899087	0					
ANR	5899139	CastExpression	( uint ) len		5899087	1					
ANR	5899140	CastTarget	uint		5899087	0					
ANR	5899141	Identifier	len		5899087	1					
ANR	5899142	IfStatement	if ( put )		5899087	2					
ANR	5899143	Condition	put	520:12:24781:24783	5899087	0	True				
ANR	5899144	Identifier	put		5899087	0					
ANR	5899145	CompoundStatement		19:17:596:596	5899087	1					
ANR	5899146	IfStatement	"if ( write ( log -> fd , data , put ) != put )"		5899087	0					
ANR	5899147	Condition	"write ( log -> fd , data , put ) != put"	521:16:24804:24835	5899087	0	True				
ANR	5899148	EqualityExpression	"write ( log -> fd , data , put ) != put"		5899087	0		!=			
ANR	5899149	CallExpression	"write ( log -> fd , data , put )"		5899087	0					
ANR	5899150	Callee	write		5899087	0					
ANR	5899151	Identifier	write		5899087	0					
ANR	5899152	ArgumentList	log -> fd		5899087	1					
ANR	5899153	Argument	log -> fd		5899087	0					
ANR	5899154	PtrMemberAccess	log -> fd		5899087	0					
ANR	5899155	Identifier	log		5899087	0					
ANR	5899156	Identifier	fd		5899087	1					
ANR	5899157	Argument	data		5899087	1					
ANR	5899158	Identifier	data		5899087	0					
ANR	5899159	Argument	put		5899087	2					
ANR	5899160	Identifier	put		5899087	0					
ANR	5899161	Identifier	put		5899087	1					
ANR	5899162	ReturnStatement	return - 1 ;	522:16:24854:24863	5899087	1	True				
ANR	5899163	UnaryOperationExpression	- 1		5899087	0					
ANR	5899164	UnaryOperator	-		5899087	0					
ANR	5899165	PrimaryExpression	1		5899087	1					
ANR	5899166	ExpressionStatement	BAIL ( 1 )	523:12:24877:24884	5899087	1	True				
ANR	5899167	CallExpression	BAIL ( 1 )		5899087	0					
ANR	5899168	Callee	BAIL		5899087	0					
ANR	5899169	Identifier	BAIL		5899087	0					
ANR	5899170	ArgumentList	1		5899087	1					
ANR	5899171	Argument	1		5899087	0					
ANR	5899172	PrimaryExpression	1		5899087	0					
ANR	5899173	ExpressionStatement	"log -> tcrc = crc32 ( log -> tcrc , data , put )"	524:12:24898:24937	5899087	2	True				
ANR	5899174	AssignmentExpression	"log -> tcrc = crc32 ( log -> tcrc , data , put )"		5899087	0		=			
ANR	5899175	PtrMemberAccess	log -> tcrc		5899087	0					
ANR	5899176	Identifier	log		5899087	0					
ANR	5899177	Identifier	tcrc		5899087	1					
ANR	5899178	CallExpression	"crc32 ( log -> tcrc , data , put )"		5899087	1					
ANR	5899179	Callee	crc32		5899087	0					
ANR	5899180	Identifier	crc32		5899087	0					
ANR	5899181	ArgumentList	log -> tcrc		5899087	1					
ANR	5899182	Argument	log -> tcrc		5899087	0					
ANR	5899183	PtrMemberAccess	log -> tcrc		5899087	0					
ANR	5899184	Identifier	log		5899087	0					
ANR	5899185	Identifier	tcrc		5899087	1					
ANR	5899186	Argument	data		5899087	1					
ANR	5899187	Identifier	data		5899087	0					
ANR	5899188	Argument	put		5899087	2					
ANR	5899189	Identifier	put		5899087	0					
ANR	5899190	ExpressionStatement	log -> tlen += put	525:12:24951:24967	5899087	3	True				
ANR	5899191	AssignmentExpression	log -> tlen += put		5899087	0		+=			
ANR	5899192	PtrMemberAccess	log -> tlen		5899087	0					
ANR	5899193	Identifier	log		5899087	0					
ANR	5899194	Identifier	tlen		5899087	1					
ANR	5899195	Identifier	put		5899087	1					
ANR	5899196	ExpressionStatement	log -> stored += put	526:12:24981:24999	5899087	4	True				
ANR	5899197	AssignmentExpression	log -> stored += put		5899087	0		+=			
ANR	5899198	PtrMemberAccess	log -> stored		5899087	0					
ANR	5899199	Identifier	log		5899087	0					
ANR	5899200	Identifier	stored		5899087	1					
ANR	5899201	Identifier	put		5899087	1					
ANR	5899202	ExpressionStatement	data += put	527:12:25013:25024	5899087	5	True				
ANR	5899203	AssignmentExpression	data += put		5899087	0		+=			
ANR	5899204	Identifier	data		5899087	0					
ANR	5899205	Identifier	put		5899087	1					
ANR	5899206	ExpressionStatement	len -= put	528:12:25038:25048	5899087	6	True				
ANR	5899207	AssignmentExpression	len -= put		5899087	0		-=			
ANR	5899208	Identifier	len		5899087	0					
ANR	5899209	Identifier	put		5899087	1					
ANR	5899210	IfStatement	if ( len )		5899087	3					
ANR	5899211	Condition	len	532:12:25131:25133	5899087	0	True				
ANR	5899212	Identifier	len		5899087	0					
ANR	5899213	CompoundStatement		31:17:946:946	5899087	1					
ANR	5899214	IfStatement	"if ( log_last ( log , 0 ) )"		5899087	0					
ANR	5899215	Condition	"log_last ( log , 0 )"	534:16:25203:25218	5899087	0	True				
ANR	5899216	CallExpression	"log_last ( log , 0 )"		5899087	0					
ANR	5899217	Callee	log_last		5899087	0					
ANR	5899218	Identifier	log_last		5899087	0					
ANR	5899219	ArgumentList	log		5899087	1					
ANR	5899220	Argument	log		5899087	0					
ANR	5899221	Identifier	log		5899087	0					
ANR	5899222	Argument	0		5899087	1					
ANR	5899223	PrimaryExpression	0		5899087	0					
ANR	5899224	ReturnStatement	return - 1 ;	535:16:25237:25246	5899087	1	True				
ANR	5899225	UnaryOperationExpression	- 1		5899087	0					
ANR	5899226	UnaryOperator	-		5899087	0					
ANR	5899227	PrimaryExpression	1		5899087	1					
ANR	5899228	ExpressionStatement	log -> last += 4 + log -> stored + 1	538:12:25312:25344	5899087	1	True				
ANR	5899229	AssignmentExpression	log -> last += 4 + log -> stored + 1		5899087	0		+=			
ANR	5899230	PtrMemberAccess	log -> last		5899087	0					
ANR	5899231	Identifier	log		5899087	0					
ANR	5899232	Identifier	last		5899087	1					
ANR	5899233	AdditiveExpression	4 + log -> stored + 1		5899087	1		+			
ANR	5899234	PrimaryExpression	4		5899087	0					
ANR	5899235	AdditiveExpression	log -> stored + 1		5899087	1		+			
ANR	5899236	PtrMemberAccess	log -> stored		5899087	0					
ANR	5899237	Identifier	log		5899087	0					
ANR	5899238	Identifier	stored		5899087	1					
ANR	5899239	PrimaryExpression	1		5899087	1					
ANR	5899240	ExpressionStatement	log -> stored = 0	539:12:25358:25373	5899087	2	True				
ANR	5899241	AssignmentExpression	log -> stored = 0		5899087	0		=			
ANR	5899242	PtrMemberAccess	log -> stored		5899087	0					
ANR	5899243	Identifier	log		5899087	0					
ANR	5899244	Identifier	stored		5899087	1					
ANR	5899245	PrimaryExpression	0		5899087	1					
ANR	5899246	IfStatement	"if ( log_last ( log , 1 ) )"		5899087	4					
ANR	5899247	Condition	"log_last ( log , 1 )"	543:12:25455:25470	5899087	0	True				
ANR	5899248	CallExpression	"log_last ( log , 1 )"		5899087	0					
ANR	5899249	Callee	log_last		5899087	0					
ANR	5899250	Identifier	log_last		5899087	0					
ANR	5899251	ArgumentList	log		5899087	1					
ANR	5899252	Argument	log		5899087	0					
ANR	5899253	Identifier	log		5899087	0					
ANR	5899254	Argument	1		5899087	1					
ANR	5899255	PrimaryExpression	1		5899087	0					
ANR	5899256	ReturnStatement	return - 1 ;	544:12:25485:25494	5899087	1	True				
ANR	5899257	UnaryOperationExpression	- 1		5899087	0					
ANR	5899258	UnaryOperator	-		5899087	0					
ANR	5899259	PrimaryExpression	1		5899087	1					
ANR	5899260	ExpressionStatement	BAIL ( 2 )	545:8:25504:25511	5899087	5	True				
ANR	5899261	CallExpression	BAIL ( 2 )		5899087	0					
ANR	5899262	Callee	BAIL		5899087	0					
ANR	5899263	Identifier	BAIL		5899087	0					
ANR	5899264	ArgumentList	2		5899087	1					
ANR	5899265	Argument	2		5899087	0					
ANR	5899266	PrimaryExpression	2		5899087	0					
ANR	5899267	ExpressionStatement	"PUT4 ( buf , log -> tcrc )"	550:4:25675:25695	5899087	5	True				
ANR	5899268	CallExpression	"PUT4 ( buf , log -> tcrc )"		5899087	0					
ANR	5899269	Callee	PUT4		5899087	0					
ANR	5899270	Identifier	PUT4		5899087	0					
ANR	5899271	ArgumentList	buf		5899087	1					
ANR	5899272	Argument	buf		5899087	0					
ANR	5899273	Identifier	buf		5899087	0					
ANR	5899274	Argument	log -> tcrc		5899087	1					
ANR	5899275	PtrMemberAccess	log -> tcrc		5899087	0					
ANR	5899276	Identifier	log		5899087	0					
ANR	5899277	Identifier	tcrc		5899087	1					
ANR	5899278	ExpressionStatement	"PUT4 ( buf + 4 , log -> tlen )"	551:4:25701:25725	5899087	6	True				
ANR	5899279	CallExpression	"PUT4 ( buf + 4 , log -> tlen )"		5899087	0					
ANR	5899280	Callee	PUT4		5899087	0					
ANR	5899281	Identifier	PUT4		5899087	0					
ANR	5899282	ArgumentList	buf + 4		5899087	1					
ANR	5899283	Argument	buf + 4		5899087	0					
ANR	5899284	AdditiveExpression	buf + 4		5899087	0		+			
ANR	5899285	Identifier	buf		5899087	0					
ANR	5899286	PrimaryExpression	4		5899087	1					
ANR	5899287	Argument	log -> tlen		5899087	1					
ANR	5899288	PtrMemberAccess	log -> tlen		5899087	0					
ANR	5899289	Identifier	log		5899087	0					
ANR	5899290	Identifier	tlen		5899087	1					
ANR	5899291	IfStatement	"if ( write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end ) )"		5899087	7					
ANR	5899292	Condition	"write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"	552:8:25735:25839	5899087	0	True				
ANR	5899293	OrExpression	"write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		5899087	0		||			
ANR	5899294	EqualityExpression	"write ( log -> fd , buf , 8 ) != 8"		5899087	0		!=			
ANR	5899295	CallExpression	"write ( log -> fd , buf , 8 )"		5899087	0					
ANR	5899296	Callee	write		5899087	0					
ANR	5899297	Identifier	write		5899087	0					
ANR	5899298	ArgumentList	log -> fd		5899087	1					
ANR	5899299	Argument	log -> fd		5899087	0					
ANR	5899300	PtrMemberAccess	log -> fd		5899087	0					
ANR	5899301	Identifier	log		5899087	0					
ANR	5899302	Identifier	fd		5899087	1					
ANR	5899303	Argument	buf		5899087	1					
ANR	5899304	Identifier	buf		5899087	0					
ANR	5899305	Argument	8		5899087	2					
ANR	5899306	PrimaryExpression	8		5899087	0					
ANR	5899307	PrimaryExpression	8		5899087	1					
ANR	5899308	OrExpression	"( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		5899087	1		||			
ANR	5899309	RelationalExpression	"( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0"		5899087	0		<			
ANR	5899310	AssignmentExpression	"end = lseek ( log -> fd , 0 , SEEK_CUR )"		5899087	0		=			
ANR	5899311	Identifier	end		5899087	0					
ANR	5899312	CallExpression	"lseek ( log -> fd , 0 , SEEK_CUR )"		5899087	1					
ANR	5899313	Callee	lseek		5899087	0					
ANR	5899314	Identifier	lseek		5899087	0					
ANR	5899315	ArgumentList	log -> fd		5899087	1					
ANR	5899316	Argument	log -> fd		5899087	0					
ANR	5899317	PtrMemberAccess	log -> fd		5899087	0					
ANR	5899318	Identifier	log		5899087	0					
ANR	5899319	Identifier	fd		5899087	1					
ANR	5899320	Argument	0		5899087	1					
ANR	5899321	PrimaryExpression	0		5899087	0					
ANR	5899322	Argument	SEEK_CUR		5899087	2					
ANR	5899323	Identifier	SEEK_CUR		5899087	0					
ANR	5899324	PrimaryExpression	0		5899087	1					
ANR	5899325	CallExpression	"ftruncate ( log -> fd , end )"		5899087	1					
ANR	5899326	Callee	ftruncate		5899087	0					
ANR	5899327	Identifier	ftruncate		5899087	0					
ANR	5899328	ArgumentList	log -> fd		5899087	1					
ANR	5899329	Argument	log -> fd		5899087	0					
ANR	5899330	PtrMemberAccess	log -> fd		5899087	0					
ANR	5899331	Identifier	log		5899087	0					
ANR	5899332	Identifier	fd		5899087	1					
ANR	5899333	Argument	end		5899087	1					
ANR	5899334	Identifier	end		5899087	0					
ANR	5899335	ReturnStatement	return - 1 ;	554:8:25850:25859	5899087	1	True				
ANR	5899336	UnaryOperationExpression	- 1		5899087	0					
ANR	5899337	UnaryOperator	-		5899087	0					
ANR	5899338	PrimaryExpression	1		5899087	1					
ANR	5899339	IfStatement	"if ( log_mark ( log , NO_OP ) )"		5899087	8					
ANR	5899340	Condition	"log_mark ( log , NO_OP )"	557:8:25950:25969	5899087	0	True				
ANR	5899341	CallExpression	"log_mark ( log , NO_OP )"		5899087	0					
ANR	5899342	Callee	log_mark		5899087	0					
ANR	5899343	Identifier	log_mark		5899087	0					
ANR	5899344	ArgumentList	log		5899087	1					
ANR	5899345	Argument	log		5899087	0					
ANR	5899346	Identifier	log		5899087	0					
ANR	5899347	Argument	NO_OP		5899087	1					
ANR	5899348	Identifier	NO_OP		5899087	0					
ANR	5899349	ReturnStatement	return - 1 ;	558:8:25980:25989	5899087	1	True				
ANR	5899350	UnaryOperationExpression	- 1		5899087	0					
ANR	5899351	UnaryOperator	-		5899087	0					
ANR	5899352	PrimaryExpression	1		5899087	1					
ANR	5899353	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	559:4:25995:26019	5899087	9	True				
ANR	5899354	CallExpression	"strcpy ( log -> end , "".add"" )"		5899087	0					
ANR	5899355	Callee	strcpy		5899087	0					
ANR	5899356	Identifier	strcpy		5899087	0					
ANR	5899357	ArgumentList	log -> end		5899087	1					
ANR	5899358	Argument	log -> end		5899087	0					
ANR	5899359	PtrMemberAccess	log -> end		5899087	0					
ANR	5899360	Identifier	log		5899087	0					
ANR	5899361	Identifier	end		5899087	1					
ANR	5899362	Argument	""".add"""		5899087	1					
ANR	5899363	PrimaryExpression	""".add"""		5899087	0					
ANR	5899364	ExpressionStatement	unlink ( log -> path )	560:4:26025:26042	5899087	10	True				
ANR	5899365	CallExpression	unlink ( log -> path )		5899087	0					
ANR	5899366	Callee	unlink		5899087	0					
ANR	5899367	Identifier	unlink		5899087	0					
ANR	5899368	ArgumentList	log -> path		5899087	1					
ANR	5899369	Argument	log -> path		5899087	0					
ANR	5899370	PtrMemberAccess	log -> path		5899087	0					
ANR	5899371	Identifier	log		5899087	0					
ANR	5899372	Identifier	path		5899087	1					
ANR	5899373	ReturnStatement	return 0 ;	561:4:26097:26105	5899087	11	True				
ANR	5899374	PrimaryExpression	0		5899087	0					
ANR	5899375	ReturnType	local int		5899087	1					
ANR	5899376	Identifier	log_append		5899087	2					
ANR	5899377	ParameterList	"struct log * log , unsigned char * data , size_t len"		5899087	3					
ANR	5899378	Parameter	struct log * log	501:21:24139:24153	5899087	0	True				
ANR	5899379	ParameterType	struct log *		5899087	0					
ANR	5899380	Identifier	log		5899087	1					
ANR	5899381	Parameter	unsigned char * data	501:38:24156:24174	5899087	1	True				
ANR	5899382	ParameterType	unsigned char *		5899087	0					
ANR	5899383	Identifier	data		5899087	1					
ANR	5899384	Parameter	size_t len	501:59:24177:24186	5899087	2	True				
ANR	5899385	ParameterType	size_t		5899087	0					
ANR	5899386	Identifier	len		5899087	1					
ANR	5899387	CFGEntryNode	ENTRY		5899087		True				
ANR	5899388	CFGExitNode	EXIT		5899087		True				
ANR	5899389	Symbol	SEEK_CUR		5899087						
ANR	5899390	Symbol	lseek		5899087						
ANR	5899391	Symbol	data		5899087						
ANR	5899392	Symbol	log -> fd		5899087						
ANR	5899393	Symbol	log -> end		5899087						
ANR	5899394	Symbol	log		5899087						
ANR	5899395	Symbol	log -> path		5899087						
ANR	5899396	Symbol	log -> tlen		5899087						
ANR	5899397	Symbol	log_mark		5899087						
ANR	5899398	Symbol	log -> tcrc		5899087						
ANR	5899399	Symbol	put		5899087						
ANR	5899400	Symbol	* log		5899087						
ANR	5899401	Symbol	NO_OP		5899087						
ANR	5899402	Symbol	buf		5899087						
ANR	5899403	Symbol	log_last		5899087						
ANR	5899404	Symbol	len		5899087						
ANR	5899405	Symbol	log -> last		5899087						
ANR	5899406	Symbol	end		5899087						
ANR	5899407	Symbol	ftruncate		5899087						
ANR	5899408	Symbol	crc32		5899087						
ANR	5899409	Symbol	MAX_STORE		5899087						
ANR	5899410	Symbol	log -> stored		5899087						
ANR	5899411	Symbol	write		5899087						
ANR	5899412	Function	log_replace	571:0:26618:27267							
ANR	5899413	FunctionDef	log_replace (struct log * log)		5899412	0					
ANR	5899414	CompoundStatement		572:0:26657:27267	5899412	0					
ANR	5899415	IdentifierDeclStatement	int ret ;	573:4:26663:26670	5899412	0	True				
ANR	5899416	IdentifierDecl	ret		5899412	0					
ANR	5899417	IdentifierDeclType	int		5899412	0					
ANR	5899418	Identifier	ret		5899412	1					
ANR	5899419	IdentifierDeclStatement	char * dest ;	574:4:26676:26686	5899412	1	True				
ANR	5899420	IdentifierDecl	* dest		5899412	0					
ANR	5899421	IdentifierDeclType	char *		5899412	0					
ANR	5899422	Identifier	dest		5899412	1					
ANR	5899423	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	577:4:26723:26747	5899412	2	True				
ANR	5899424	CallExpression	"strcpy ( log -> end , "".add"" )"		5899412	0					
ANR	5899425	Callee	strcpy		5899412	0					
ANR	5899426	Identifier	strcpy		5899412	0					
ANR	5899427	ArgumentList	log -> end		5899412	1					
ANR	5899428	Argument	log -> end		5899412	0					
ANR	5899429	PtrMemberAccess	log -> end		5899412	0					
ANR	5899430	Identifier	log		5899412	0					
ANR	5899431	Identifier	end		5899412	1					
ANR	5899432	Argument	""".add"""		5899412	1					
ANR	5899433	PrimaryExpression	""".add"""		5899412	0					
ANR	5899434	ExpressionStatement	unlink ( log -> path )	578:4:26753:26770	5899412	3	True				
ANR	5899435	CallExpression	unlink ( log -> path )		5899412	0					
ANR	5899436	Callee	unlink		5899412	0					
ANR	5899437	Identifier	unlink		5899412	0					
ANR	5899438	ArgumentList	log -> path		5899412	1					
ANR	5899439	Argument	log -> path		5899412	0					
ANR	5899440	PtrMemberAccess	log -> path		5899412	0					
ANR	5899441	Identifier	log		5899412	0					
ANR	5899442	Identifier	path		5899412	1					
ANR	5899443	ExpressionStatement	BAIL ( 3 )	579:4:26824:26831	5899412	4	True				
ANR	5899444	CallExpression	BAIL ( 3 )		5899412	0					
ANR	5899445	Callee	BAIL		5899412	0					
ANR	5899446	Identifier	BAIL		5899412	0					
ANR	5899447	ArgumentList	3		5899412	1					
ANR	5899448	Argument	3		5899412	0					
ANR	5899449	PrimaryExpression	3		5899412	0					
ANR	5899450	ExpressionStatement	"strcpy ( log -> end , "".dict"" )"	582:4:26909:26934	5899412	5	True				
ANR	5899451	CallExpression	"strcpy ( log -> end , "".dict"" )"		5899412	0					
ANR	5899452	Callee	strcpy		5899412	0					
ANR	5899453	Identifier	strcpy		5899412	0					
ANR	5899454	ArgumentList	log -> end		5899412	1					
ANR	5899455	Argument	log -> end		5899412	0					
ANR	5899456	PtrMemberAccess	log -> end		5899412	0					
ANR	5899457	Identifier	log		5899412	0					
ANR	5899458	Identifier	end		5899412	1					
ANR	5899459	Argument	""".dict"""		5899412	1					
ANR	5899460	PrimaryExpression	""".dict"""		5899412	0					
ANR	5899461	ExpressionStatement	dest = malloc ( strlen ( log -> path ) + 1 )	583:4:26940:26976	5899412	6	True				
ANR	5899462	AssignmentExpression	dest = malloc ( strlen ( log -> path ) + 1 )		5899412	0		=			
ANR	5899463	Identifier	dest		5899412	0					
ANR	5899464	CallExpression	malloc ( strlen ( log -> path ) + 1 )		5899412	1					
ANR	5899465	Callee	malloc		5899412	0					
ANR	5899466	Identifier	malloc		5899412	0					
ANR	5899467	ArgumentList	strlen ( log -> path ) + 1		5899412	1					
ANR	5899468	Argument	strlen ( log -> path ) + 1		5899412	0					
ANR	5899469	AdditiveExpression	strlen ( log -> path ) + 1		5899412	0		+			
ANR	5899470	CallExpression	strlen ( log -> path )		5899412	0					
ANR	5899471	Callee	strlen		5899412	0					
ANR	5899472	Identifier	strlen		5899412	0					
ANR	5899473	ArgumentList	log -> path		5899412	1					
ANR	5899474	Argument	log -> path		5899412	0					
ANR	5899475	PtrMemberAccess	log -> path		5899412	0					
ANR	5899476	Identifier	log		5899412	0					
ANR	5899477	Identifier	path		5899412	1					
ANR	5899478	PrimaryExpression	1		5899412	1					
ANR	5899479	IfStatement	if ( dest == NULL )		5899412	7					
ANR	5899480	Condition	dest == NULL	584:8:26986:26997	5899412	0	True				
ANR	5899481	EqualityExpression	dest == NULL		5899412	0		==			
ANR	5899482	Identifier	dest		5899412	0					
ANR	5899483	Identifier	NULL		5899412	1					
ANR	5899484	ReturnStatement	return - 2 ;	585:8:27008:27017	5899412	1	True				
ANR	5899485	UnaryOperationExpression	- 2		5899412	0					
ANR	5899486	UnaryOperator	-		5899412	0					
ANR	5899487	PrimaryExpression	2		5899412	1					
ANR	5899488	ExpressionStatement	"strcpy ( dest , log -> path )"	586:4:27023:27046	5899412	8	True				
ANR	5899489	CallExpression	"strcpy ( dest , log -> path )"		5899412	0					
ANR	5899490	Callee	strcpy		5899412	0					
ANR	5899491	Identifier	strcpy		5899412	0					
ANR	5899492	ArgumentList	dest		5899412	1					
ANR	5899493	Argument	dest		5899412	0					
ANR	5899494	Identifier	dest		5899412	0					
ANR	5899495	Argument	log -> path		5899412	1					
ANR	5899496	PtrMemberAccess	log -> path		5899412	0					
ANR	5899497	Identifier	log		5899412	0					
ANR	5899498	Identifier	path		5899412	1					
ANR	5899499	ExpressionStatement	"strcpy ( log -> end , "".temp"" )"	587:4:27052:27077	5899412	9	True				
ANR	5899500	CallExpression	"strcpy ( log -> end , "".temp"" )"		5899412	0					
ANR	5899501	Callee	strcpy		5899412	0					
ANR	5899502	Identifier	strcpy		5899412	0					
ANR	5899503	ArgumentList	log -> end		5899412	1					
ANR	5899504	Argument	log -> end		5899412	0					
ANR	5899505	PtrMemberAccess	log -> end		5899412	0					
ANR	5899506	Identifier	log		5899412	0					
ANR	5899507	Identifier	end		5899412	1					
ANR	5899508	Argument	""".temp"""		5899412	1					
ANR	5899509	PrimaryExpression	""".temp"""		5899412	0					
ANR	5899510	ExpressionStatement	"ret = rename ( log -> path , dest )"	588:4:27083:27112	5899412	10	True				
ANR	5899511	AssignmentExpression	"ret = rename ( log -> path , dest )"		5899412	0		=			
ANR	5899512	Identifier	ret		5899412	0					
ANR	5899513	CallExpression	"rename ( log -> path , dest )"		5899412	1					
ANR	5899514	Callee	rename		5899412	0					
ANR	5899515	Identifier	rename		5899412	0					
ANR	5899516	ArgumentList	log -> path		5899412	1					
ANR	5899517	Argument	log -> path		5899412	0					
ANR	5899518	PtrMemberAccess	log -> path		5899412	0					
ANR	5899519	Identifier	log		5899412	0					
ANR	5899520	Identifier	path		5899412	1					
ANR	5899521	Argument	dest		5899412	1					
ANR	5899522	Identifier	dest		5899412	0					
ANR	5899523	ExpressionStatement	free ( dest )	589:4:27118:27128	5899412	11	True				
ANR	5899524	CallExpression	free ( dest )		5899412	0					
ANR	5899525	Callee	free		5899412	0					
ANR	5899526	Identifier	free		5899412	0					
ANR	5899527	ArgumentList	dest		5899412	1					
ANR	5899528	Argument	dest		5899412	0					
ANR	5899529	Identifier	dest		5899412	0					
ANR	5899530	IfStatement	if ( ret && errno != ENOENT )		5899412	12					
ANR	5899531	Condition	ret && errno != ENOENT	590:8:27138:27159	5899412	0	True				
ANR	5899532	AndExpression	ret && errno != ENOENT		5899412	0		&&			
ANR	5899533	Identifier	ret		5899412	0					
ANR	5899534	EqualityExpression	errno != ENOENT		5899412	1		!=			
ANR	5899535	Identifier	errno		5899412	0					
ANR	5899536	Identifier	ENOENT		5899412	1					
ANR	5899537	ReturnStatement	return - 1 ;	591:8:27170:27179	5899412	1	True				
ANR	5899538	UnaryOperationExpression	- 1		5899412	0					
ANR	5899539	UnaryOperator	-		5899412	0					
ANR	5899540	PrimaryExpression	1		5899412	1					
ANR	5899541	ExpressionStatement	BAIL ( 4 )	592:4:27185:27192	5899412	13	True				
ANR	5899542	CallExpression	BAIL ( 4 )		5899412	0					
ANR	5899543	Callee	BAIL		5899412	0					
ANR	5899544	Identifier	BAIL		5899412	0					
ANR	5899545	ArgumentList	4		5899412	1					
ANR	5899546	Argument	4		5899412	0					
ANR	5899547	PrimaryExpression	4		5899412	0					
ANR	5899548	ReturnStatement	"return log_mark ( log , NO_OP ) ;"	595:4:27238:27265	5899412	14	True				
ANR	5899549	CallExpression	"log_mark ( log , NO_OP )"		5899412	0					
ANR	5899550	Callee	log_mark		5899412	0					
ANR	5899551	Identifier	log_mark		5899412	0					
ANR	5899552	ArgumentList	log		5899412	1					
ANR	5899553	Argument	log		5899412	0					
ANR	5899554	Identifier	log		5899412	0					
ANR	5899555	Argument	NO_OP		5899412	1					
ANR	5899556	Identifier	NO_OP		5899412	0					
ANR	5899557	ReturnType	local int		5899412	1					
ANR	5899558	Identifier	log_replace		5899412	2					
ANR	5899559	ParameterList	struct log * log		5899412	3					
ANR	5899560	Parameter	struct log * log	571:22:26640:26654	5899412	0	True				
ANR	5899561	ParameterType	struct log *		5899412	0					
ANR	5899562	Identifier	log		5899412	1					
ANR	5899563	CFGEntryNode	ENTRY		5899412		True				
ANR	5899564	CFGExitNode	EXIT		5899412		True				
ANR	5899565	Symbol	ret		5899412						
ANR	5899566	Symbol	malloc		5899412						
ANR	5899567	Symbol	errno		5899412						
ANR	5899568	Symbol	NULL		5899412						
ANR	5899569	Symbol	log -> end		5899412						
ANR	5899570	Symbol	log		5899412						
ANR	5899571	Symbol	log -> path		5899412						
ANR	5899572	Symbol	ENOENT		5899412						
ANR	5899573	Symbol	log_mark		5899412						
ANR	5899574	Symbol	dest		5899412						
ANR	5899575	Symbol	* log		5899412						
ANR	5899576	Symbol	NO_OP		5899412						
ANR	5899577	Symbol	strlen		5899412						
ANR	5899578	Symbol	rename		5899412						
ANR	5899579	Function	log_compress	608:0:27963:31634							
ANR	5899580	FunctionDef	"log_compress (struct log * log , unsigned char * data , size_t len)"		5899579	0					
ANR	5899581	CompoundStatement		609:0:28036:31634	5899579	0					
ANR	5899582	IdentifierDeclStatement	int fd ;	610:4:28042:28048	5899579	0	True				
ANR	5899583	IdentifierDecl	fd		5899579	0					
ANR	5899584	IdentifierDeclType	int		5899579	0					
ANR	5899585	Identifier	fd		5899579	1					
ANR	5899586	IdentifierDeclStatement	"uint got , max ;"	611:4:28054:28067	5899579	1	True				
ANR	5899587	IdentifierDecl	got		5899579	0					
ANR	5899588	IdentifierDeclType	uint		5899579	0					
ANR	5899589	Identifier	got		5899579	1					
ANR	5899590	IdentifierDecl	max		5899579	1					
ANR	5899591	IdentifierDeclType	uint		5899579	0					
ANR	5899592	Identifier	max		5899579	1					
ANR	5899593	IdentifierDeclStatement	ssize_t dict ;	612:4:28073:28085	5899579	2	True				
ANR	5899594	IdentifierDecl	dict		5899579	0					
ANR	5899595	IdentifierDeclType	ssize_t		5899579	0					
ANR	5899596	Identifier	dict		5899579	1					
ANR	5899597	IdentifierDeclStatement	off_t end ;	613:4:28091:28100	5899579	3	True				
ANR	5899598	IdentifierDecl	end		5899579	0					
ANR	5899599	IdentifierDeclType	off_t		5899579	0					
ANR	5899600	Identifier	end		5899579	1					
ANR	5899601	IdentifierDeclStatement	z_stream strm ;	614:4:28106:28119	5899579	4	True				
ANR	5899602	IdentifierDecl	strm		5899579	0					
ANR	5899603	IdentifierDeclType	z_stream		5899579	0					
ANR	5899604	Identifier	strm		5899579	1					
ANR	5899605	IdentifierDeclStatement	unsigned char buf [ DICT ] ;	615:4:28125:28148	5899579	5	True				
ANR	5899606	IdentifierDecl	buf [ DICT ]		5899579	0					
ANR	5899607	IdentifierDeclType	unsigned char [ DICT ]		5899579	0					
ANR	5899608	Identifier	buf		5899579	1					
ANR	5899609	Identifier	DICT		5899579	2					
ANR	5899610	IfStatement	if ( len )		5899579	6					
ANR	5899611	Condition	len	618:8:28205:28207	5899579	0	True				
ANR	5899612	Identifier	len		5899579	0					
ANR	5899613	CompoundStatement		10:13:173:173	5899579	1					
ANR	5899614	ExpressionStatement	strm . zalloc = Z_NULL	620:8:28272:28292	5899579	0	True				
ANR	5899615	AssignmentExpression	strm . zalloc = Z_NULL		5899579	0		=			
ANR	5899616	MemberAccess	strm . zalloc		5899579	0					
ANR	5899617	Identifier	strm		5899579	0					
ANR	5899618	Identifier	zalloc		5899579	1					
ANR	5899619	Identifier	Z_NULL		5899579	1					
ANR	5899620	ExpressionStatement	strm . zfree = Z_NULL	621:8:28302:28321	5899579	1	True				
ANR	5899621	AssignmentExpression	strm . zfree = Z_NULL		5899579	0		=			
ANR	5899622	MemberAccess	strm . zfree		5899579	0					
ANR	5899623	Identifier	strm		5899579	0					
ANR	5899624	Identifier	zfree		5899579	1					
ANR	5899625	Identifier	Z_NULL		5899579	1					
ANR	5899626	ExpressionStatement	strm . opaque = Z_NULL	622:8:28331:28351	5899579	2	True				
ANR	5899627	AssignmentExpression	strm . opaque = Z_NULL		5899579	0		=			
ANR	5899628	MemberAccess	strm . opaque		5899579	0					
ANR	5899629	Identifier	strm		5899579	0					
ANR	5899630	Identifier	opaque		5899579	1					
ANR	5899631	Identifier	Z_NULL		5899579	1					
ANR	5899632	IfStatement	"if ( deflateInit2 ( & strm , Z_DEFAULT_COMPRESSION , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY ) != Z_OK )"		5899579	3					
ANR	5899633	Condition	"deflateInit2 ( & strm , Z_DEFAULT_COMPRESSION , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY ) != Z_OK"	623:12:28365:28479	5899579	0	True				
ANR	5899634	EqualityExpression	"deflateInit2 ( & strm , Z_DEFAULT_COMPRESSION , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY ) != Z_OK"		5899579	0		!=			
ANR	5899635	CallExpression	"deflateInit2 ( & strm , Z_DEFAULT_COMPRESSION , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY )"		5899579	0					
ANR	5899636	Callee	deflateInit2		5899579	0					
ANR	5899637	Identifier	deflateInit2		5899579	0					
ANR	5899638	ArgumentList	& strm		5899579	1					
ANR	5899639	Argument	& strm		5899579	0					
ANR	5899640	UnaryOperationExpression	& strm		5899579	0					
ANR	5899641	UnaryOperator	&		5899579	0					
ANR	5899642	Identifier	strm		5899579	1					
ANR	5899643	Argument	Z_DEFAULT_COMPRESSION		5899579	1					
ANR	5899644	Identifier	Z_DEFAULT_COMPRESSION		5899579	0					
ANR	5899645	Argument	Z_DEFLATED		5899579	2					
ANR	5899646	Identifier	Z_DEFLATED		5899579	0					
ANR	5899647	Argument	- 15		5899579	3					
ANR	5899648	UnaryOperationExpression	- 15		5899579	0					
ANR	5899649	UnaryOperator	-		5899579	0					
ANR	5899650	PrimaryExpression	15		5899579	1					
ANR	5899651	Argument	8		5899579	4					
ANR	5899652	PrimaryExpression	8		5899579	0					
ANR	5899653	Argument	Z_DEFAULT_STRATEGY		5899579	5					
ANR	5899654	Identifier	Z_DEFAULT_STRATEGY		5899579	0					
ANR	5899655	Identifier	Z_OK		5899579	1					
ANR	5899656	ReturnStatement	return - 2 ;	625:12:28494:28503	5899579	1	True				
ANR	5899657	UnaryOperationExpression	- 2		5899579	0					
ANR	5899658	UnaryOperator	-		5899579	0					
ANR	5899659	PrimaryExpression	2		5899579	1					
ANR	5899660	ExpressionStatement	"strcpy ( log -> end , "".dict"" )"	628:8:28586:28611	5899579	4	True				
ANR	5899661	CallExpression	"strcpy ( log -> end , "".dict"" )"		5899579	0					
ANR	5899662	Callee	strcpy		5899579	0					
ANR	5899663	Identifier	strcpy		5899579	0					
ANR	5899664	ArgumentList	log -> end		5899579	1					
ANR	5899665	Argument	log -> end		5899579	0					
ANR	5899666	PtrMemberAccess	log -> end		5899579	0					
ANR	5899667	Identifier	log		5899579	0					
ANR	5899668	Identifier	end		5899579	1					
ANR	5899669	Argument	""".dict"""		5899579	1					
ANR	5899670	PrimaryExpression	""".dict"""		5899579	0					
ANR	5899671	ExpressionStatement	"fd = open ( log -> path , O_RDONLY , 0 )"	629:8:28621:28654	5899579	5	True				
ANR	5899672	AssignmentExpression	"fd = open ( log -> path , O_RDONLY , 0 )"		5899579	0		=			
ANR	5899673	Identifier	fd		5899579	0					
ANR	5899674	CallExpression	"open ( log -> path , O_RDONLY , 0 )"		5899579	1					
ANR	5899675	Callee	open		5899579	0					
ANR	5899676	Identifier	open		5899579	0					
ANR	5899677	ArgumentList	log -> path		5899579	1					
ANR	5899678	Argument	log -> path		5899579	0					
ANR	5899679	PtrMemberAccess	log -> path		5899579	0					
ANR	5899680	Identifier	log		5899579	0					
ANR	5899681	Identifier	path		5899579	1					
ANR	5899682	Argument	O_RDONLY		5899579	1					
ANR	5899683	Identifier	O_RDONLY		5899579	0					
ANR	5899684	Argument	0		5899579	2					
ANR	5899685	PrimaryExpression	0		5899579	0					
ANR	5899686	IfStatement	if ( fd >= 0 )		5899579	6					
ANR	5899687	Condition	fd >= 0	630:12:28668:28674	5899579	0	True				
ANR	5899688	RelationalExpression	fd >= 0		5899579	0		>=			
ANR	5899689	Identifier	fd		5899579	0					
ANR	5899690	PrimaryExpression	0		5899579	1					
ANR	5899691	CompoundStatement		22:21:640:640	5899579	1					
ANR	5899692	ExpressionStatement	"dict = read ( fd , buf , DICT )"	631:12:28691:28717	5899579	0	True				
ANR	5899693	AssignmentExpression	"dict = read ( fd , buf , DICT )"		5899579	0		=			
ANR	5899694	Identifier	dict		5899579	0					
ANR	5899695	CallExpression	"read ( fd , buf , DICT )"		5899579	1					
ANR	5899696	Callee	read		5899579	0					
ANR	5899697	Identifier	read		5899579	0					
ANR	5899698	ArgumentList	fd		5899579	1					
ANR	5899699	Argument	fd		5899579	0					
ANR	5899700	Identifier	fd		5899579	0					
ANR	5899701	Argument	buf		5899579	1					
ANR	5899702	Identifier	buf		5899579	0					
ANR	5899703	Argument	DICT		5899579	2					
ANR	5899704	Identifier	DICT		5899579	0					
ANR	5899705	ExpressionStatement	close ( fd )	632:12:28731:28740	5899579	1	True				
ANR	5899706	CallExpression	close ( fd )		5899579	0					
ANR	5899707	Callee	close		5899579	0					
ANR	5899708	Identifier	close		5899579	0					
ANR	5899709	ArgumentList	fd		5899579	1					
ANR	5899710	Argument	fd		5899579	0					
ANR	5899711	Identifier	fd		5899579	0					
ANR	5899712	IfStatement	if ( dict < 0 )		5899579	2					
ANR	5899713	Condition	dict < 0	633:16:28758:28765	5899579	0	True				
ANR	5899714	RelationalExpression	dict < 0		5899579	0		<			
ANR	5899715	Identifier	dict		5899579	0					
ANR	5899716	PrimaryExpression	0		5899579	1					
ANR	5899717	CompoundStatement		25:26:731:731	5899579	1					
ANR	5899718	ExpressionStatement	deflateEnd ( & strm )	634:16:28786:28803	5899579	0	True				
ANR	5899719	CallExpression	deflateEnd ( & strm )		5899579	0					
ANR	5899720	Callee	deflateEnd		5899579	0					
ANR	5899721	Identifier	deflateEnd		5899579	0					
ANR	5899722	ArgumentList	& strm		5899579	1					
ANR	5899723	Argument	& strm		5899579	0					
ANR	5899724	UnaryOperationExpression	& strm		5899579	0					
ANR	5899725	UnaryOperator	&		5899579	0					
ANR	5899726	Identifier	strm		5899579	1					
ANR	5899727	ReturnStatement	return - 1 ;	635:16:28821:28830	5899579	1	True				
ANR	5899728	UnaryOperationExpression	- 1		5899579	0					
ANR	5899729	UnaryOperator	-		5899579	0					
ANR	5899730	PrimaryExpression	1		5899579	1					
ANR	5899731	IfStatement	if ( dict )		5899579	3					
ANR	5899732	Condition	dict	637:16:28862:28865	5899579	0	True				
ANR	5899733	Identifier	dict		5899579	0					
ANR	5899734	ExpressionStatement	"deflateSetDictionary ( & strm , buf , ( uint ) dict )"	638:16:28884:28928	5899579	1	True				
ANR	5899735	CallExpression	"deflateSetDictionary ( & strm , buf , ( uint ) dict )"		5899579	0					
ANR	5899736	Callee	deflateSetDictionary		5899579	0					
ANR	5899737	Identifier	deflateSetDictionary		5899579	0					
ANR	5899738	ArgumentList	& strm		5899579	1					
ANR	5899739	Argument	& strm		5899579	0					
ANR	5899740	UnaryOperationExpression	& strm		5899579	0					
ANR	5899741	UnaryOperator	&		5899579	0					
ANR	5899742	Identifier	strm		5899579	1					
ANR	5899743	Argument	buf		5899579	1					
ANR	5899744	Identifier	buf		5899579	0					
ANR	5899745	Argument	( uint ) dict		5899579	2					
ANR	5899746	CastExpression	( uint ) dict		5899579	0					
ANR	5899747	CastTarget	uint		5899579	0					
ANR	5899748	Identifier	dict		5899579	1					
ANR	5899749	ExpressionStatement	log_touch ( log )	640:8:28948:28962	5899579	7	True				
ANR	5899750	CallExpression	log_touch ( log )		5899579	0					
ANR	5899751	Callee	log_touch		5899579	0					
ANR	5899752	Identifier	log_touch		5899579	0					
ANR	5899753	ArgumentList	log		5899579	1					
ANR	5899754	Argument	log		5899579	0					
ANR	5899755	Identifier	log		5899579	0					
ANR	5899756	IfStatement	"if ( lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 || lseek ( log -> fd , - 1 , SEEK_CUR ) < 0 )"		5899579	8					
ANR	5899757	Condition	"lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 || lseek ( log -> fd , - 1 , SEEK_CUR ) < 0"	644:12:29120:29279	5899579	0	True				
ANR	5899758	OrExpression	"lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 || lseek ( log -> fd , - 1 , SEEK_CUR ) < 0"		5899579	0		||			
ANR	5899759	RelationalExpression	"lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET ) < 0"		5899579	0		<			
ANR	5899760	CallExpression	"lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET )"		5899579	0					
ANR	5899761	Callee	lseek		5899579	0					
ANR	5899762	Identifier	lseek		5899579	0					
ANR	5899763	ArgumentList	log -> fd		5899579	1					
ANR	5899764	Argument	log -> fd		5899579	0					
ANR	5899765	PtrMemberAccess	log -> fd		5899579	0					
ANR	5899766	Identifier	log		5899579	0					
ANR	5899767	Identifier	fd		5899579	1					
ANR	5899768	Argument	log -> first - ( log -> back > 8 ? 2 : 1 )		5899579	1					
ANR	5899769	AdditiveExpression	log -> first - ( log -> back > 8 ? 2 : 1 )		5899579	0		-			
ANR	5899770	PtrMemberAccess	log -> first		5899579	0					
ANR	5899771	Identifier	log		5899579	0					
ANR	5899772	Identifier	first		5899579	1					
ANR	5899773	ConditionalExpression	log -> back > 8 ? 2 : 1		5899579	1					
ANR	5899774	Condition	log -> back > 8		5899579	0					
ANR	5899775	RelationalExpression	log -> back > 8		5899579	0		>			
ANR	5899776	PtrMemberAccess	log -> back		5899579	0					
ANR	5899777	Identifier	log		5899579	0					
ANR	5899778	Identifier	back		5899579	1					
ANR	5899779	PrimaryExpression	8		5899579	1					
ANR	5899780	PrimaryExpression	2		5899579	1					
ANR	5899781	PrimaryExpression	1		5899579	2					
ANR	5899782	Argument	SEEK_SET		5899579	2					
ANR	5899783	Identifier	SEEK_SET		5899579	0					
ANR	5899784	PrimaryExpression	0		5899579	1					
ANR	5899785	OrExpression	"read ( log -> fd , buf , 1 ) != 1 || lseek ( log -> fd , - 1 , SEEK_CUR ) < 0"		5899579	1		||			
ANR	5899786	EqualityExpression	"read ( log -> fd , buf , 1 ) != 1"		5899579	0		!=			
ANR	5899787	CallExpression	"read ( log -> fd , buf , 1 )"		5899579	0					
ANR	5899788	Callee	read		5899579	0					
ANR	5899789	Identifier	read		5899579	0					
ANR	5899790	ArgumentList	log -> fd		5899579	1					
ANR	5899791	Argument	log -> fd		5899579	0					
ANR	5899792	PtrMemberAccess	log -> fd		5899579	0					
ANR	5899793	Identifier	log		5899579	0					
ANR	5899794	Identifier	fd		5899579	1					
ANR	5899795	Argument	buf		5899579	1					
ANR	5899796	Identifier	buf		5899579	0					
ANR	5899797	Argument	1		5899579	2					
ANR	5899798	PrimaryExpression	1		5899579	0					
ANR	5899799	PrimaryExpression	1		5899579	1					
ANR	5899800	RelationalExpression	"lseek ( log -> fd , - 1 , SEEK_CUR ) < 0"		5899579	1		<			
ANR	5899801	CallExpression	"lseek ( log -> fd , - 1 , SEEK_CUR )"		5899579	0					
ANR	5899802	Callee	lseek		5899579	0					
ANR	5899803	Identifier	lseek		5899579	0					
ANR	5899804	ArgumentList	log -> fd		5899579	1					
ANR	5899805	Argument	log -> fd		5899579	0					
ANR	5899806	PtrMemberAccess	log -> fd		5899579	0					
ANR	5899807	Identifier	log		5899579	0					
ANR	5899808	Identifier	fd		5899579	1					
ANR	5899809	Argument	- 1		5899579	1					
ANR	5899810	UnaryOperationExpression	- 1		5899579	0					
ANR	5899811	UnaryOperator	-		5899579	0					
ANR	5899812	PrimaryExpression	1		5899579	1					
ANR	5899813	Argument	SEEK_CUR		5899579	2					
ANR	5899814	Identifier	SEEK_CUR		5899579	0					
ANR	5899815	PrimaryExpression	0		5899579	1					
ANR	5899816	CompoundStatement		38:76:1245:1245	5899579	1					
ANR	5899817	ExpressionStatement	deflateEnd ( & strm )	647:12:29296:29313	5899579	0	True				
ANR	5899818	CallExpression	deflateEnd ( & strm )		5899579	0					
ANR	5899819	Callee	deflateEnd		5899579	0					
ANR	5899820	Identifier	deflateEnd		5899579	0					
ANR	5899821	ArgumentList	& strm		5899579	1					
ANR	5899822	Argument	& strm		5899579	0					
ANR	5899823	UnaryOperationExpression	& strm		5899579	0					
ANR	5899824	UnaryOperator	&		5899579	0					
ANR	5899825	Identifier	strm		5899579	1					
ANR	5899826	ReturnStatement	return - 1 ;	648:12:29327:29336	5899579	1	True				
ANR	5899827	UnaryOperationExpression	- 1		5899579	0					
ANR	5899828	UnaryOperator	-		5899579	0					
ANR	5899829	PrimaryExpression	1		5899579	1					
ANR	5899830	ExpressionStatement	"deflatePrime ( & strm , ( 8 - log -> back ) & 7 , * buf )"	650:8:29356:29402	5899579	9	True				
ANR	5899831	CallExpression	"deflatePrime ( & strm , ( 8 - log -> back ) & 7 , * buf )"		5899579	0					
ANR	5899832	Callee	deflatePrime		5899579	0					
ANR	5899833	Identifier	deflatePrime		5899579	0					
ANR	5899834	ArgumentList	& strm		5899579	1					
ANR	5899835	Argument	& strm		5899579	0					
ANR	5899836	UnaryOperationExpression	& strm		5899579	0					
ANR	5899837	UnaryOperator	&		5899579	0					
ANR	5899838	Identifier	strm		5899579	1					
ANR	5899839	Argument	( 8 - log -> back ) & 7		5899579	1					
ANR	5899840	BitAndExpression	( 8 - log -> back ) & 7		5899579	0		&			
ANR	5899841	AdditiveExpression	8 - log -> back		5899579	0		-			
ANR	5899842	PrimaryExpression	8		5899579	0					
ANR	5899843	PtrMemberAccess	log -> back		5899579	1					
ANR	5899844	Identifier	log		5899579	0					
ANR	5899845	Identifier	back		5899579	1					
ANR	5899846	PrimaryExpression	7		5899579	1					
ANR	5899847	Argument	* buf		5899579	2					
ANR	5899848	UnaryOperationExpression	* buf		5899579	0					
ANR	5899849	UnaryOperator	*		5899579	0					
ANR	5899850	Identifier	buf		5899579	1					
ANR	5899851	ExpressionStatement	strm . next_in = data	653:8:29490:29509	5899579	10	True				
ANR	5899852	AssignmentExpression	strm . next_in = data		5899579	0		=			
ANR	5899853	MemberAccess	strm . next_in		5899579	0					
ANR	5899854	Identifier	strm		5899579	0					
ANR	5899855	Identifier	next_in		5899579	1					
ANR	5899856	Identifier	data		5899579	1					
ANR	5899857	ExpressionStatement	max = ( ( ( uint ) 0 - 1 ) >> 1 ) + 1	654:8:29519:29549	5899579	11	True				
ANR	5899858	AssignmentExpression	max = ( ( ( uint ) 0 - 1 ) >> 1 ) + 1		5899579	0		=			
ANR	5899859	Identifier	max		5899579	0					
ANR	5899860	AdditiveExpression	( ( ( uint ) 0 - 1 ) >> 1 ) + 1		5899579	1		+			
ANR	5899861	ShiftExpression	( ( uint ) 0 - 1 ) >> 1		5899579	0		>>			
ANR	5899862	AdditiveExpression	( uint ) 0 - 1		5899579	0		-			
ANR	5899863	CastExpression	( uint ) 0		5899579	0					
ANR	5899864	CastTarget	uint		5899579	0					
ANR	5899865	PrimaryExpression	0		5899579	1					
ANR	5899866	PrimaryExpression	1		5899579	1					
ANR	5899867	PrimaryExpression	1		5899579	1					
ANR	5899868	PrimaryExpression	1		5899579	1					
ANR	5899869	DoStatement	do		5899579	12					
ANR	5899870	CompoundStatement		47:11:1563:1563	5899579	0					
ANR	5899871	ExpressionStatement	strm . avail_in = len > max ? max : ( uint ) len	656:12:29614:29657	5899579	0	True				
ANR	5899872	AssignmentExpression	strm . avail_in = len > max ? max : ( uint ) len		5899579	0		=			
ANR	5899873	MemberAccess	strm . avail_in		5899579	0					
ANR	5899874	Identifier	strm		5899579	0					
ANR	5899875	Identifier	avail_in		5899579	1					
ANR	5899876	ConditionalExpression	len > max ? max : ( uint ) len		5899579	1					
ANR	5899877	Condition	len > max		5899579	0					
ANR	5899878	RelationalExpression	len > max		5899579	0		>			
ANR	5899879	Identifier	len		5899579	0					
ANR	5899880	Identifier	max		5899579	1					
ANR	5899881	Identifier	max		5899579	1					
ANR	5899882	CastExpression	( uint ) len		5899579	2					
ANR	5899883	CastTarget	uint		5899579	0					
ANR	5899884	Identifier	len		5899579	1					
ANR	5899885	ExpressionStatement	len -= strm . avail_in	657:12:29671:29691	5899579	1	True				
ANR	5899886	AssignmentExpression	len -= strm . avail_in		5899579	0		-=			
ANR	5899887	Identifier	len		5899579	0					
ANR	5899888	MemberAccess	strm . avail_in		5899579	1					
ANR	5899889	Identifier	strm		5899579	0					
ANR	5899890	Identifier	avail_in		5899579	1					
ANR	5899891	DoStatement	do		5899579	2					
ANR	5899892	CompoundStatement		50:15:1671:1671	5899579	0					
ANR	5899893	ExpressionStatement	strm . avail_out = DICT	659:16:29726:29747	5899579	0	True				
ANR	5899894	AssignmentExpression	strm . avail_out = DICT		5899579	0		=			
ANR	5899895	MemberAccess	strm . avail_out		5899579	0					
ANR	5899896	Identifier	strm		5899579	0					
ANR	5899897	Identifier	avail_out		5899579	1					
ANR	5899898	Identifier	DICT		5899579	1					
ANR	5899899	ExpressionStatement	strm . next_out = buf	660:16:29765:29784	5899579	1	True				
ANR	5899900	AssignmentExpression	strm . next_out = buf		5899579	0		=			
ANR	5899901	MemberAccess	strm . next_out		5899579	0					
ANR	5899902	Identifier	strm		5899579	0					
ANR	5899903	Identifier	next_out		5899579	1					
ANR	5899904	Identifier	buf		5899579	1					
ANR	5899905	ExpressionStatement	"deflate ( & strm , len ? Z_NO_FLUSH : Z_PARTIAL_FLUSH )"	661:16:29802:29852	5899579	2	True				
ANR	5899906	CallExpression	"deflate ( & strm , len ? Z_NO_FLUSH : Z_PARTIAL_FLUSH )"		5899579	0					
ANR	5899907	Callee	deflate		5899579	0					
ANR	5899908	Identifier	deflate		5899579	0					
ANR	5899909	ArgumentList	& strm		5899579	1					
ANR	5899910	Argument	& strm		5899579	0					
ANR	5899911	UnaryOperationExpression	& strm		5899579	0					
ANR	5899912	UnaryOperator	&		5899579	0					
ANR	5899913	Identifier	strm		5899579	1					
ANR	5899914	Argument	len ? Z_NO_FLUSH : Z_PARTIAL_FLUSH		5899579	1					
ANR	5899915	ConditionalExpression	len ? Z_NO_FLUSH : Z_PARTIAL_FLUSH		5899579	0					
ANR	5899916	Condition	len		5899579	0					
ANR	5899917	Identifier	len		5899579	0					
ANR	5899918	Identifier	Z_NO_FLUSH		5899579	1					
ANR	5899919	Identifier	Z_PARTIAL_FLUSH		5899579	2					
ANR	5899920	ExpressionStatement	got = DICT - strm . avail_out	662:16:29870:29897	5899579	3	True				
ANR	5899921	AssignmentExpression	got = DICT - strm . avail_out		5899579	0		=			
ANR	5899922	Identifier	got		5899579	0					
ANR	5899923	AdditiveExpression	DICT - strm . avail_out		5899579	1		-			
ANR	5899924	Identifier	DICT		5899579	0					
ANR	5899925	MemberAccess	strm . avail_out		5899579	1					
ANR	5899926	Identifier	strm		5899579	0					
ANR	5899927	Identifier	avail_out		5899579	1					
ANR	5899928	IfStatement	"if ( got && write ( log -> fd , buf , got ) != got )"		5899579	4					
ANR	5899929	Condition	"got && write ( log -> fd , buf , got ) != got"	663:20:29919:29956	5899579	0	True				
ANR	5899930	AndExpression	"got && write ( log -> fd , buf , got ) != got"		5899579	0		&&			
ANR	5899931	Identifier	got		5899579	0					
ANR	5899932	EqualityExpression	"write ( log -> fd , buf , got ) != got"		5899579	1		!=			
ANR	5899933	CallExpression	"write ( log -> fd , buf , got )"		5899579	0					
ANR	5899934	Callee	write		5899579	0					
ANR	5899935	Identifier	write		5899579	0					
ANR	5899936	ArgumentList	log -> fd		5899579	1					
ANR	5899937	Argument	log -> fd		5899579	0					
ANR	5899938	PtrMemberAccess	log -> fd		5899579	0					
ANR	5899939	Identifier	log		5899579	0					
ANR	5899940	Identifier	fd		5899579	1					
ANR	5899941	Argument	buf		5899579	1					
ANR	5899942	Identifier	buf		5899579	0					
ANR	5899943	Argument	got		5899579	2					
ANR	5899944	Identifier	got		5899579	0					
ANR	5899945	Identifier	got		5899579	1					
ANR	5899946	CompoundStatement		55:60:1922:1922	5899579	1					
ANR	5899947	ExpressionStatement	deflateEnd ( & strm )	664:20:29981:29998	5899579	0	True				
ANR	5899948	CallExpression	deflateEnd ( & strm )		5899579	0					
ANR	5899949	Callee	deflateEnd		5899579	0					
ANR	5899950	Identifier	deflateEnd		5899579	0					
ANR	5899951	ArgumentList	& strm		5899579	1					
ANR	5899952	Argument	& strm		5899579	0					
ANR	5899953	UnaryOperationExpression	& strm		5899579	0					
ANR	5899954	UnaryOperator	&		5899579	0					
ANR	5899955	Identifier	strm		5899579	1					
ANR	5899956	ReturnStatement	return - 1 ;	665:20:30020:30029	5899579	1	True				
ANR	5899957	UnaryOperationExpression	- 1		5899579	0					
ANR	5899958	UnaryOperator	-		5899579	0					
ANR	5899959	PrimaryExpression	1		5899579	1					
ANR	5899960	ExpressionStatement	log_touch ( log )	667:16:30065:30079	5899579	5	True				
ANR	5899961	CallExpression	log_touch ( log )		5899579	0					
ANR	5899962	Callee	log_touch		5899579	0					
ANR	5899963	Identifier	log_touch		5899579	0					
ANR	5899964	ArgumentList	log		5899579	1					
ANR	5899965	Argument	log		5899579	0					
ANR	5899966	Identifier	log		5899579	0					
ANR	5899967	Condition	strm . avail_out == 0	668:21:30102:30120	5899579	1	True				
ANR	5899968	EqualityExpression	strm . avail_out == 0		5899579	0		==			
ANR	5899969	MemberAccess	strm . avail_out		5899579	0					
ANR	5899970	Identifier	strm		5899579	0					
ANR	5899971	Identifier	avail_out		5899579	1					
ANR	5899972	PrimaryExpression	0		5899579	1					
ANR	5899973	Condition	len	669:17:30141:30143	5899579	1	True				
ANR	5899974	Identifier	len		5899579	0					
ANR	5899975	ExpressionStatement	deflateEnd ( & strm )	670:8:30155:30172	5899579	13	True				
ANR	5899976	CallExpression	deflateEnd ( & strm )		5899579	0					
ANR	5899977	Callee	deflateEnd		5899579	0					
ANR	5899978	Identifier	deflateEnd		5899579	0					
ANR	5899979	ArgumentList	& strm		5899579	1					
ANR	5899980	Argument	& strm		5899579	0					
ANR	5899981	UnaryOperationExpression	& strm		5899579	0					
ANR	5899982	UnaryOperator	&		5899579	0					
ANR	5899983	Identifier	strm		5899579	1					
ANR	5899984	ExpressionStatement	BAIL ( 5 )	671:8:30182:30189	5899579	14	True				
ANR	5899985	CallExpression	BAIL ( 5 )		5899579	0					
ANR	5899986	Callee	BAIL		5899579	0					
ANR	5899987	Identifier	BAIL		5899579	0					
ANR	5899988	ArgumentList	5		5899579	1					
ANR	5899989	Argument	5		5899579	0					
ANR	5899990	PrimaryExpression	5		5899579	0					
ANR	5899991	IfStatement	"if ( ( log -> first = lseek ( log -> fd , - 1 , SEEK_CUR ) ) < 0 || read ( log -> fd , buf , 1 ) != 1 )"		5899579	15					
ANR	5899992	Condition	"( log -> first = lseek ( log -> fd , - 1 , SEEK_CUR ) ) < 0 || read ( log -> fd , buf , 1 ) != 1"	677:12:30487:30575	5899579	0	True				
ANR	5899993	OrExpression	"( log -> first = lseek ( log -> fd , - 1 , SEEK_CUR ) ) < 0 || read ( log -> fd , buf , 1 ) != 1"		5899579	0		||			
ANR	5899994	RelationalExpression	"( log -> first = lseek ( log -> fd , - 1 , SEEK_CUR ) ) < 0"		5899579	0		<			
ANR	5899995	AssignmentExpression	"log -> first = lseek ( log -> fd , - 1 , SEEK_CUR )"		5899579	0		=			
ANR	5899996	PtrMemberAccess	log -> first		5899579	0					
ANR	5899997	Identifier	log		5899579	0					
ANR	5899998	Identifier	first		5899579	1					
ANR	5899999	CallExpression	"lseek ( log -> fd , - 1 , SEEK_CUR )"		5899579	1					
ANR	5900000	Callee	lseek		5899579	0					
ANR	5900001	Identifier	lseek		5899579	0					
ANR	5900002	ArgumentList	log -> fd		5899579	1					
ANR	5900003	Argument	log -> fd		5899579	0					
ANR	5900004	PtrMemberAccess	log -> fd		5899579	0					
ANR	5900005	Identifier	log		5899579	0					
ANR	5900006	Identifier	fd		5899579	1					
ANR	5900007	Argument	- 1		5899579	1					
ANR	5900008	UnaryOperationExpression	- 1		5899579	0					
ANR	5900009	UnaryOperator	-		5899579	0					
ANR	5900010	PrimaryExpression	1		5899579	1					
ANR	5900011	Argument	SEEK_CUR		5899579	2					
ANR	5900012	Identifier	SEEK_CUR		5899579	0					
ANR	5900013	PrimaryExpression	0		5899579	1					
ANR	5900014	EqualityExpression	"read ( log -> fd , buf , 1 ) != 1"		5899579	1		!=			
ANR	5900015	CallExpression	"read ( log -> fd , buf , 1 )"		5899579	0					
ANR	5900016	Callee	read		5899579	0					
ANR	5900017	Identifier	read		5899579	0					
ANR	5900018	ArgumentList	log -> fd		5899579	1					
ANR	5900019	Argument	log -> fd		5899579	0					
ANR	5900020	PtrMemberAccess	log -> fd		5899579	0					
ANR	5900021	Identifier	log		5899579	0					
ANR	5900022	Identifier	fd		5899579	1					
ANR	5900023	Argument	buf		5899579	1					
ANR	5900024	Identifier	buf		5899579	0					
ANR	5900025	Argument	1		5899579	2					
ANR	5900026	PrimaryExpression	1		5899579	0					
ANR	5900027	PrimaryExpression	1		5899579	1					
ANR	5900028	ReturnStatement	return - 1 ;	679:12:30590:30599	5899579	1	True				
ANR	5900029	UnaryOperationExpression	- 1		5899579	0					
ANR	5900030	UnaryOperator	-		5899579	0					
ANR	5900031	PrimaryExpression	1		5899579	1					
ANR	5900032	ExpressionStatement	log -> first ++	680:8:30609:30621	5899579	16	True				
ANR	5900033	PostIncDecOperationExpression	log -> first ++		5899579	0					
ANR	5900034	PtrMemberAccess	log -> first		5899579	0					
ANR	5900035	Identifier	log		5899579	0					
ANR	5900036	Identifier	first		5899579	1					
ANR	5900037	IncDec	++		5899579	1					
ANR	5900038	IfStatement	if ( * buf )		5899579	17					
ANR	5900039	Condition	* buf	681:12:30635:30638	5899579	0	True				
ANR	5900040	UnaryOperationExpression	* buf		5899579	0					
ANR	5900041	UnaryOperator	*		5899579	0					
ANR	5900042	Identifier	buf		5899579	1					
ANR	5900043	CompoundStatement		73:18:2604:2604	5899579	1					
ANR	5900044	ExpressionStatement	log -> back = 1	682:12:30655:30668	5899579	0	True				
ANR	5900045	AssignmentExpression	log -> back = 1		5899579	0		=			
ANR	5900046	PtrMemberAccess	log -> back		5899579	0					
ANR	5900047	Identifier	log		5899579	0					
ANR	5900048	Identifier	back		5899579	1					
ANR	5900049	PrimaryExpression	1		5899579	1					
ANR	5900050	WhileStatement	while ( ( * buf & ( ( uint ) 1 << ( 8 - log -> back ++ ) ) ) == 0 )		5899579	1					
ANR	5900051	Condition	( * buf & ( ( uint ) 1 << ( 8 - log -> back ++ ) ) ) == 0	683:19:30689:30732	5899579	0	True				
ANR	5900052	EqualityExpression	( * buf & ( ( uint ) 1 << ( 8 - log -> back ++ ) ) ) == 0		5899579	0		==			
ANR	5900053	BitAndExpression	* buf & ( ( uint ) 1 << ( 8 - log -> back ++ ) )		5899579	0		&			
ANR	5900054	UnaryOperationExpression	* buf		5899579	0					
ANR	5900055	UnaryOperator	*		5899579	0					
ANR	5900056	Identifier	buf		5899579	1					
ANR	5900057	ShiftExpression	( uint ) 1 << ( 8 - log -> back ++ )		5899579	1		<<			
ANR	5900058	CastExpression	( uint ) 1		5899579	0					
ANR	5900059	CastTarget	uint		5899579	0					
ANR	5900060	PrimaryExpression	1		5899579	1					
ANR	5900061	AdditiveExpression	8 - log -> back ++		5899579	1		-			
ANR	5900062	PrimaryExpression	8		5899579	0					
ANR	5900063	PostIncDecOperationExpression	log -> back ++		5899579	1					
ANR	5900064	PtrMemberAccess	log -> back		5899579	0					
ANR	5900065	Identifier	log		5899579	0					
ANR	5900066	Identifier	back		5899579	1					
ANR	5900067	IncDec	++		5899579	1					
ANR	5900068	PrimaryExpression	0		5899579	1					
ANR	5900069	ExpressionStatement		684:16:30751:30751	5899579	1	True				
ANR	5900070	ElseStatement	else		5899579	0					
ANR	5900071	ExpressionStatement	log -> back = 10	687:12:30841:30855	5899579	0	True				
ANR	5900072	AssignmentExpression	log -> back = 10		5899579	0		=			
ANR	5900073	PtrMemberAccess	log -> back		5899579	0					
ANR	5900074	Identifier	log		5899579	0					
ANR	5900075	Identifier	back		5899579	1					
ANR	5900076	PrimaryExpression	10		5899579	1					
ANR	5900077	ExpressionStatement	log -> ccrc = log -> tcrc	690:8:30913:30934	5899579	18	True				
ANR	5900078	AssignmentExpression	log -> ccrc = log -> tcrc		5899579	0		=			
ANR	5900079	PtrMemberAccess	log -> ccrc		5899579	0					
ANR	5900080	Identifier	log		5899579	0					
ANR	5900081	Identifier	ccrc		5899579	1					
ANR	5900082	PtrMemberAccess	log -> tcrc		5899579	1					
ANR	5900083	Identifier	log		5899579	0					
ANR	5900084	Identifier	tcrc		5899579	1					
ANR	5900085	ExpressionStatement	log -> clen = log -> tlen	691:8:30944:30965	5899579	19	True				
ANR	5900086	AssignmentExpression	log -> clen = log -> tlen		5899579	0		=			
ANR	5900087	PtrMemberAccess	log -> clen		5899579	0					
ANR	5900088	Identifier	log		5899579	0					
ANR	5900089	Identifier	clen		5899579	1					
ANR	5900090	PtrMemberAccess	log -> tlen		5899579	1					
ANR	5900091	Identifier	log		5899579	0					
ANR	5900092	Identifier	tlen		5899579	1					
ANR	5900093	ElseStatement	else		5899579	0					
ANR	5900094	CompoundStatement		85:9:2945:2945	5899579	0					
ANR	5900095	ExpressionStatement	log -> tcrc = log -> ccrc	695:8:31057:31078	5899579	0	True				
ANR	5900096	AssignmentExpression	log -> tcrc = log -> ccrc		5899579	0		=			
ANR	5900097	PtrMemberAccess	log -> tcrc		5899579	0					
ANR	5900098	Identifier	log		5899579	0					
ANR	5900099	Identifier	tcrc		5899579	1					
ANR	5900100	PtrMemberAccess	log -> ccrc		5899579	1					
ANR	5900101	Identifier	log		5899579	0					
ANR	5900102	Identifier	ccrc		5899579	1					
ANR	5900103	ExpressionStatement	log -> tlen = log -> clen	696:8:31088:31109	5899579	1	True				
ANR	5900104	AssignmentExpression	log -> tlen = log -> clen		5899579	0		=			
ANR	5900105	PtrMemberAccess	log -> tlen		5899579	0					
ANR	5900106	Identifier	log		5899579	0					
ANR	5900107	Identifier	tlen		5899579	1					
ANR	5900108	PtrMemberAccess	log -> clen		5899579	1					
ANR	5900109	Identifier	log		5899579	0					
ANR	5900110	Identifier	clen		5899579	1					
ANR	5900111	ExpressionStatement	log -> last = log -> first	700:4:31166:31188	5899579	7	True				
ANR	5900112	AssignmentExpression	log -> last = log -> first		5899579	0		=			
ANR	5900113	PtrMemberAccess	log -> last		5899579	0					
ANR	5900114	Identifier	log		5899579	0					
ANR	5900115	Identifier	last		5899579	1					
ANR	5900116	PtrMemberAccess	log -> first		5899579	1					
ANR	5900117	Identifier	log		5899579	0					
ANR	5900118	Identifier	first		5899579	1					
ANR	5900119	ExpressionStatement	log -> stored = 0	701:4:31194:31209	5899579	8	True				
ANR	5900120	AssignmentExpression	log -> stored = 0		5899579	0		=			
ANR	5900121	PtrMemberAccess	log -> stored		5899579	0					
ANR	5900122	Identifier	log		5899579	0					
ANR	5900123	Identifier	stored		5899579	1					
ANR	5900124	PrimaryExpression	0		5899579	1					
ANR	5900125	ExpressionStatement	"PUT4 ( buf , log -> tcrc )"	702:4:31215:31235	5899579	9	True				
ANR	5900126	CallExpression	"PUT4 ( buf , log -> tcrc )"		5899579	0					
ANR	5900127	Callee	PUT4		5899579	0					
ANR	5900128	Identifier	PUT4		5899579	0					
ANR	5900129	ArgumentList	buf		5899579	1					
ANR	5900130	Argument	buf		5899579	0					
ANR	5900131	Identifier	buf		5899579	0					
ANR	5900132	Argument	log -> tcrc		5899579	1					
ANR	5900133	PtrMemberAccess	log -> tcrc		5899579	0					
ANR	5900134	Identifier	log		5899579	0					
ANR	5900135	Identifier	tcrc		5899579	1					
ANR	5900136	ExpressionStatement	"PUT4 ( buf + 4 , log -> tlen )"	703:4:31241:31265	5899579	10	True				
ANR	5900137	CallExpression	"PUT4 ( buf + 4 , log -> tlen )"		5899579	0					
ANR	5900138	Callee	PUT4		5899579	0					
ANR	5900139	Identifier	PUT4		5899579	0					
ANR	5900140	ArgumentList	buf + 4		5899579	1					
ANR	5900141	Argument	buf + 4		5899579	0					
ANR	5900142	AdditiveExpression	buf + 4		5899579	0		+			
ANR	5900143	Identifier	buf		5899579	0					
ANR	5900144	PrimaryExpression	4		5899579	1					
ANR	5900145	Argument	log -> tlen		5899579	1					
ANR	5900146	PtrMemberAccess	log -> tlen		5899579	0					
ANR	5900147	Identifier	log		5899579	0					
ANR	5900148	Identifier	tlen		5899579	1					
ANR	5900149	IfStatement	"if ( log_last ( log , 1 ) || write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end ) )"		5899579	11					
ANR	5900150	Condition	"log_last ( log , 1 ) || write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"	704:8:31275:31399	5899579	0	True				
ANR	5900151	OrExpression	"log_last ( log , 1 ) || write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		5899579	0		||			
ANR	5900152	CallExpression	"log_last ( log , 1 )"		5899579	0					
ANR	5900153	Callee	log_last		5899579	0					
ANR	5900154	Identifier	log_last		5899579	0					
ANR	5900155	ArgumentList	log		5899579	1					
ANR	5900156	Argument	log		5899579	0					
ANR	5900157	Identifier	log		5899579	0					
ANR	5900158	Argument	1		5899579	1					
ANR	5900159	PrimaryExpression	1		5899579	0					
ANR	5900160	OrExpression	"write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		5899579	1		||			
ANR	5900161	EqualityExpression	"write ( log -> fd , buf , 8 ) != 8"		5899579	0		!=			
ANR	5900162	CallExpression	"write ( log -> fd , buf , 8 )"		5899579	0					
ANR	5900163	Callee	write		5899579	0					
ANR	5900164	Identifier	write		5899579	0					
ANR	5900165	ArgumentList	log -> fd		5899579	1					
ANR	5900166	Argument	log -> fd		5899579	0					
ANR	5900167	PtrMemberAccess	log -> fd		5899579	0					
ANR	5900168	Identifier	log		5899579	0					
ANR	5900169	Identifier	fd		5899579	1					
ANR	5900170	Argument	buf		5899579	1					
ANR	5900171	Identifier	buf		5899579	0					
ANR	5900172	Argument	8		5899579	2					
ANR	5900173	PrimaryExpression	8		5899579	0					
ANR	5900174	PrimaryExpression	8		5899579	1					
ANR	5900175	OrExpression	"( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		5899579	1		||			
ANR	5900176	RelationalExpression	"( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0"		5899579	0		<			
ANR	5900177	AssignmentExpression	"end = lseek ( log -> fd , 0 , SEEK_CUR )"		5899579	0		=			
ANR	5900178	Identifier	end		5899579	0					
ANR	5900179	CallExpression	"lseek ( log -> fd , 0 , SEEK_CUR )"		5899579	1					
ANR	5900180	Callee	lseek		5899579	0					
ANR	5900181	Identifier	lseek		5899579	0					
ANR	5900182	ArgumentList	log -> fd		5899579	1					
ANR	5900183	Argument	log -> fd		5899579	0					
ANR	5900184	PtrMemberAccess	log -> fd		5899579	0					
ANR	5900185	Identifier	log		5899579	0					
ANR	5900186	Identifier	fd		5899579	1					
ANR	5900187	Argument	0		5899579	1					
ANR	5900188	PrimaryExpression	0		5899579	0					
ANR	5900189	Argument	SEEK_CUR		5899579	2					
ANR	5900190	Identifier	SEEK_CUR		5899579	0					
ANR	5900191	PrimaryExpression	0		5899579	1					
ANR	5900192	CallExpression	"ftruncate ( log -> fd , end )"		5899579	1					
ANR	5900193	Callee	ftruncate		5899579	0					
ANR	5900194	Identifier	ftruncate		5899579	0					
ANR	5900195	ArgumentList	log -> fd		5899579	1					
ANR	5900196	Argument	log -> fd		5899579	0					
ANR	5900197	PtrMemberAccess	log -> fd		5899579	0					
ANR	5900198	Identifier	log		5899579	0					
ANR	5900199	Identifier	fd		5899579	1					
ANR	5900200	Argument	end		5899579	1					
ANR	5900201	Identifier	end		5899579	0					
ANR	5900202	ReturnStatement	return - 1 ;	706:8:31410:31419	5899579	1	True				
ANR	5900203	UnaryOperationExpression	- 1		5899579	0					
ANR	5900204	UnaryOperator	-		5899579	0					
ANR	5900205	PrimaryExpression	1		5899579	1					
ANR	5900206	ExpressionStatement	BAIL ( 6 )	707:4:31425:31432	5899579	12	True				
ANR	5900207	CallExpression	BAIL ( 6 )		5899579	0					
ANR	5900208	Callee	BAIL		5899579	0					
ANR	5900209	Identifier	BAIL		5899579	0					
ANR	5900210	ArgumentList	6		5899579	1					
ANR	5900211	Argument	6		5899579	0					
ANR	5900212	PrimaryExpression	6		5899579	0					
ANR	5900213	IfStatement	"if ( log_mark ( log , REPLACE_OP ) )"		5899579	13					
ANR	5900214	Condition	"log_mark ( log , REPLACE_OP )"	710:8:31492:31516	5899579	0	True				
ANR	5900215	CallExpression	"log_mark ( log , REPLACE_OP )"		5899579	0					
ANR	5900216	Callee	log_mark		5899579	0					
ANR	5900217	Identifier	log_mark		5899579	0					
ANR	5900218	ArgumentList	log		5899579	1					
ANR	5900219	Argument	log		5899579	0					
ANR	5900220	Identifier	log		5899579	0					
ANR	5900221	Argument	REPLACE_OP		5899579	1					
ANR	5900222	Identifier	REPLACE_OP		5899579	0					
ANR	5900223	ReturnStatement	return - 1 ;	711:8:31527:31536	5899579	1	True				
ANR	5900224	UnaryOperationExpression	- 1		5899579	0					
ANR	5900225	UnaryOperator	-		5899579	0					
ANR	5900226	PrimaryExpression	1		5899579	1					
ANR	5900227	ReturnStatement	return log_replace ( log ) ;	714:4:31609:31632	5899579	14	True				
ANR	5900228	CallExpression	log_replace ( log )		5899579	0					
ANR	5900229	Callee	log_replace		5899579	0					
ANR	5900230	Identifier	log_replace		5899579	0					
ANR	5900231	ArgumentList	log		5899579	1					
ANR	5900232	Argument	log		5899579	0					
ANR	5900233	Identifier	log		5899579	0					
ANR	5900234	ReturnType	local int		5899579	1					
ANR	5900235	Identifier	log_compress		5899579	2					
ANR	5900236	ParameterList	"struct log * log , unsigned char * data , size_t len"		5899579	3					
ANR	5900237	Parameter	struct log * log	608:23:27986:28000	5899579	0	True				
ANR	5900238	ParameterType	struct log *		5899579	0					
ANR	5900239	Identifier	log		5899579	1					
ANR	5900240	Parameter	unsigned char * data	608:40:28003:28021	5899579	1	True				
ANR	5900241	ParameterType	unsigned char *		5899579	0					
ANR	5900242	Identifier	data		5899579	1					
ANR	5900243	Parameter	size_t len	608:61:28024:28033	5899579	2	True				
ANR	5900244	ParameterType	size_t		5899579	0					
ANR	5900245	Identifier	len		5899579	1					
ANR	5900246	CFGEntryNode	ENTRY		5899579		True				
ANR	5900247	CFGExitNode	EXIT		5899579		True				
ANR	5900248	Symbol	data		5899579						
ANR	5900249	Symbol	log -> end		5899579						
ANR	5900250	Symbol	REPLACE_OP		5899579						
ANR	5900251	Symbol	strm . zalloc		5899579						
ANR	5900252	Symbol	Z_DEFLATED		5899579						
ANR	5900253	Symbol	got		5899579						
ANR	5900254	Symbol	strm . next_in		5899579						
ANR	5900255	Symbol	log_replace		5899579						
ANR	5900256	Symbol	strm . opaque		5899579						
ANR	5900257	Symbol	len		5899579						
ANR	5900258	Symbol	DICT		5899579						
ANR	5900259	Symbol	dict		5899579						
ANR	5900260	Symbol	Z_PARTIAL_FLUSH		5899579						
ANR	5900261	Symbol	write		5899579						
ANR	5900262	Symbol	Z_DEFAULT_STRATEGY		5899579						
ANR	5900263	Symbol	* buf		5899579						
ANR	5900264	Symbol	read		5899579						
ANR	5900265	Symbol	log -> first		5899579						
ANR	5900266	Symbol	log -> tcrc		5899579						
ANR	5900267	Symbol	log -> back		5899579						
ANR	5900268	Symbol	* log		5899579						
ANR	5900269	Symbol	log_last		5899579						
ANR	5900270	Symbol	strm . next_out		5899579						
ANR	5900271	Symbol	log -> clen		5899579						
ANR	5900272	Symbol	log -> stored		5899579						
ANR	5900273	Symbol	fd		5899579						
ANR	5900274	Symbol	Z_NULL		5899579						
ANR	5900275	Symbol	strm . avail_in		5899579						
ANR	5900276	Symbol	deflateInit2		5899579						
ANR	5900277	Symbol	SEEK_CUR		5899579						
ANR	5900278	Symbol	lseek		5899579						
ANR	5900279	Symbol	log		5899579						
ANR	5900280	Symbol	& strm		5899579						
ANR	5900281	Symbol	Z_OK		5899579						
ANR	5900282	Symbol	Z_NO_FLUSH		5899579						
ANR	5900283	Symbol	end		5899579						
ANR	5900284	Symbol	SEEK_SET		5899579						
ANR	5900285	Symbol	log -> fd		5899579						
ANR	5900286	Symbol	max		5899579						
ANR	5900287	Symbol	log -> path		5899579						
ANR	5900288	Symbol	strm		5899579						
ANR	5900289	Symbol	log -> tlen		5899579						
ANR	5900290	Symbol	log_mark		5899579						
ANR	5900291	Symbol	Z_DEFAULT_COMPRESSION		5899579						
ANR	5900292	Symbol	buf		5899579						
ANR	5900293	Symbol	O_RDONLY		5899579						
ANR	5900294	Symbol	strm . avail_out		5899579						
ANR	5900295	Symbol	log -> last		5899579						
ANR	5900296	Symbol	ftruncate		5899579						
ANR	5900297	Symbol	strm . zfree		5899579						
ANR	5900298	Symbol	log -> ccrc		5899579						
ANR	5900299	Symbol	open		5899579						
ANR	5900300	Function	log_log	718:0:31684:32084							
ANR	5900301	FunctionDef	"log_log (struct log * log , int op , char * record)"		5900300	0					
ANR	5900302	CompoundStatement		719:0:31742:32084	5900300	0					
ANR	5900303	IdentifierDeclStatement	time_t now ;	720:4:31748:31758	5900300	0	True				
ANR	5900304	IdentifierDecl	now		5900300	0					
ANR	5900305	IdentifierDeclType	time_t		5900300	0					
ANR	5900306	Identifier	now		5900300	1					
ANR	5900307	IdentifierDeclStatement	FILE * rec ;	721:4:31764:31773	5900300	1	True				
ANR	5900308	IdentifierDecl	* rec		5900300	0					
ANR	5900309	IdentifierDeclType	FILE *		5900300	0					
ANR	5900310	Identifier	rec		5900300	1					
ANR	5900311	ExpressionStatement	now = time ( NULL )	723:4:31780:31796	5900300	2	True				
ANR	5900312	AssignmentExpression	now = time ( NULL )		5900300	0		=			
ANR	5900313	Identifier	now		5900300	0					
ANR	5900314	CallExpression	time ( NULL )		5900300	1					
ANR	5900315	Callee	time		5900300	0					
ANR	5900316	Identifier	time		5900300	0					
ANR	5900317	ArgumentList	NULL		5900300	1					
ANR	5900318	Argument	NULL		5900300	0					
ANR	5900319	Identifier	NULL		5900300	0					
ANR	5900320	ExpressionStatement	"strcpy ( log -> end , "".repairs"" )"	724:4:31802:31830	5900300	3	True				
ANR	5900321	CallExpression	"strcpy ( log -> end , "".repairs"" )"		5900300	0					
ANR	5900322	Callee	strcpy		5900300	0					
ANR	5900323	Identifier	strcpy		5900300	0					
ANR	5900324	ArgumentList	log -> end		5900300	1					
ANR	5900325	Argument	log -> end		5900300	0					
ANR	5900326	PtrMemberAccess	log -> end		5900300	0					
ANR	5900327	Identifier	log		5900300	0					
ANR	5900328	Identifier	end		5900300	1					
ANR	5900329	Argument	""".repairs"""		5900300	1					
ANR	5900330	PrimaryExpression	""".repairs"""		5900300	0					
ANR	5900331	ExpressionStatement	"rec = fopen ( log -> path , ""a"" )"	725:4:31836:31863	5900300	4	True				
ANR	5900332	AssignmentExpression	"rec = fopen ( log -> path , ""a"" )"		5900300	0		=			
ANR	5900333	Identifier	rec		5900300	0					
ANR	5900334	CallExpression	"fopen ( log -> path , ""a"" )"		5900300	1					
ANR	5900335	Callee	fopen		5900300	0					
ANR	5900336	Identifier	fopen		5900300	0					
ANR	5900337	ArgumentList	log -> path		5900300	1					
ANR	5900338	Argument	log -> path		5900300	0					
ANR	5900339	PtrMemberAccess	log -> path		5900300	0					
ANR	5900340	Identifier	log		5900300	0					
ANR	5900341	Identifier	path		5900300	1					
ANR	5900342	Argument	"""a"""		5900300	1					
ANR	5900343	PrimaryExpression	"""a"""		5900300	0					
ANR	5900344	IfStatement	if ( rec == NULL )		5900300	5					
ANR	5900345	Condition	rec == NULL	726:8:31873:31883	5900300	0	True				
ANR	5900346	EqualityExpression	rec == NULL		5900300	0		==			
ANR	5900347	Identifier	rec		5900300	0					
ANR	5900348	Identifier	NULL		5900300	1					
ANR	5900349	ReturnStatement	return ;	727:8:31894:31900	5900300	1	True				
ANR	5900350	ExpressionStatement	"fprintf ( rec , ""%.24s %s recovery: %s\\n"" , ctime ( & now ) , op == APPEND_OP ? ""append"" : ( op == COMPRESS_OP ? ""compress"" : ""replace"" ) , record )"	728:4:31906:32053	5900300	6	True				
ANR	5900351	CallExpression	"fprintf ( rec , ""%.24s %s recovery: %s\\n"" , ctime ( & now ) , op == APPEND_OP ? ""append"" : ( op == COMPRESS_OP ? ""compress"" : ""replace"" ) , record )"		5900300	0					
ANR	5900352	Callee	fprintf		5900300	0					
ANR	5900353	Identifier	fprintf		5900300	0					
ANR	5900354	ArgumentList	rec		5900300	1					
ANR	5900355	Argument	rec		5900300	0					
ANR	5900356	Identifier	rec		5900300	0					
ANR	5900357	Argument	"""%.24s %s recovery: %s\\n"""		5900300	1					
ANR	5900358	PrimaryExpression	"""%.24s %s recovery: %s\\n"""		5900300	0					
ANR	5900359	Argument	ctime ( & now )		5900300	2					
ANR	5900360	CallExpression	ctime ( & now )		5900300	0					
ANR	5900361	Callee	ctime		5900300	0					
ANR	5900362	Identifier	ctime		5900300	0					
ANR	5900363	ArgumentList	& now		5900300	1					
ANR	5900364	Argument	& now		5900300	0					
ANR	5900365	UnaryOperationExpression	& now		5900300	0					
ANR	5900366	UnaryOperator	&		5900300	0					
ANR	5900367	Identifier	now		5900300	1					
ANR	5900368	Argument	"op == APPEND_OP ? ""append"" : ( op == COMPRESS_OP ? ""compress"" : ""replace"" )"		5900300	3					
ANR	5900369	ConditionalExpression	"op == APPEND_OP ? ""append"" : ( op == COMPRESS_OP ? ""compress"" : ""replace"" )"		5900300	0					
ANR	5900370	Condition	op == APPEND_OP		5900300	0					
ANR	5900371	EqualityExpression	op == APPEND_OP		5900300	0		==			
ANR	5900372	Identifier	op		5900300	0					
ANR	5900373	Identifier	APPEND_OP		5900300	1					
ANR	5900374	PrimaryExpression	"""append"""		5900300	1					
ANR	5900375	ConditionalExpression	"op == COMPRESS_OP ? ""compress"" : ""replace"""		5900300	2					
ANR	5900376	Condition	op == COMPRESS_OP		5900300	0					
ANR	5900377	EqualityExpression	op == COMPRESS_OP		5900300	0		==			
ANR	5900378	Identifier	op		5900300	0					
ANR	5900379	Identifier	COMPRESS_OP		5900300	1					
ANR	5900380	PrimaryExpression	"""compress"""		5900300	1					
ANR	5900381	PrimaryExpression	"""replace"""		5900300	2					
ANR	5900382	Argument	record		5900300	4					
ANR	5900383	Identifier	record		5900300	0					
ANR	5900384	ExpressionStatement	fclose ( rec )	730:4:32059:32070	5900300	7	True				
ANR	5900385	CallExpression	fclose ( rec )		5900300	0					
ANR	5900386	Callee	fclose		5900300	0					
ANR	5900387	Identifier	fclose		5900300	0					
ANR	5900388	ArgumentList	rec		5900300	1					
ANR	5900389	Argument	rec		5900300	0					
ANR	5900390	Identifier	rec		5900300	0					
ANR	5900391	ReturnStatement	return ;	731:4:32076:32082	5900300	8	True				
ANR	5900392	ReturnType	local void		5900300	1					
ANR	5900393	Identifier	log_log		5900300	2					
ANR	5900394	ParameterList	"struct log * log , int op , char * record"		5900300	3					
ANR	5900395	Parameter	struct log * log	718:19:31703:31717	5900300	0	True				
ANR	5900396	ParameterType	struct log *		5900300	0					
ANR	5900397	Identifier	log		5900300	1					
ANR	5900398	Parameter	int op	718:36:31720:31725	5900300	1	True				
ANR	5900399	ParameterType	int		5900300	0					
ANR	5900400	Identifier	op		5900300	1					
ANR	5900401	Parameter	char * record	718:44:31728:31739	5900300	2	True				
ANR	5900402	ParameterType	char *		5900300	0					
ANR	5900403	Identifier	record		5900300	1					
ANR	5900404	CFGEntryNode	ENTRY		5900300		True				
ANR	5900405	CFGExitNode	EXIT		5900300		True				
ANR	5900406	Symbol	op		5900300						
ANR	5900407	Symbol	fopen		5900300						
ANR	5900408	Symbol	NULL		5900300						
ANR	5900409	Symbol	log -> end		5900300						
ANR	5900410	Symbol	log		5900300						
ANR	5900411	Symbol	log -> path		5900300						
ANR	5900412	Symbol	* log		5900300						
ANR	5900413	Symbol	COMPRESS_OP		5900300						
ANR	5900414	Symbol	rec		5900300						
ANR	5900415	Symbol	record		5900300						
ANR	5900416	Symbol	now		5900300						
ANR	5900417	Symbol	ctime		5900300						
ANR	5900418	Symbol	time		5900300						
ANR	5900419	Symbol	& now		5900300						
ANR	5900420	Symbol	APPEND_OP		5900300						
ANR	5900421	Function	log_recover	738:0:32347:33898							
ANR	5900422	FunctionDef	"log_recover (struct log * log , int op)"		5900421	0					
ANR	5900423	CompoundStatement		739:0:32394:33898	5900421	0					
ANR	5900424	IdentifierDeclStatement	"int fd , ret = 0 ;"	740:4:32400:32415	5900421	0	True				
ANR	5900425	IdentifierDecl	fd		5900421	0					
ANR	5900426	IdentifierDeclType	int		5900421	0					
ANR	5900427	Identifier	fd		5900421	1					
ANR	5900428	IdentifierDecl	ret = 0		5900421	1					
ANR	5900429	IdentifierDeclType	int		5900421	0					
ANR	5900430	Identifier	ret		5900421	1					
ANR	5900431	AssignmentExpression	ret = 0		5900421	2		=			
ANR	5900432	Identifier	ret		5900421	0					
ANR	5900433	PrimaryExpression	0		5900421	1					
ANR	5900434	IdentifierDeclStatement	unsigned char * data = NULL ;	741:4:32421:32447	5900421	1	True				
ANR	5900435	IdentifierDecl	* data = NULL		5900421	0					
ANR	5900436	IdentifierDeclType	unsigned char *		5900421	0					
ANR	5900437	Identifier	data		5900421	1					
ANR	5900438	AssignmentExpression	* data = NULL		5900421	2		=			
ANR	5900439	Identifier	NULL		5900421	0					
ANR	5900440	Identifier	NULL		5900421	1					
ANR	5900441	IdentifierDeclStatement	size_t len = 0 ;	742:4:32453:32467	5900421	2	True				
ANR	5900442	IdentifierDecl	len = 0		5900421	0					
ANR	5900443	IdentifierDeclType	size_t		5900421	0					
ANR	5900444	Identifier	len		5900421	1					
ANR	5900445	AssignmentExpression	len = 0		5900421	2		=			
ANR	5900446	Identifier	len		5900421	0					
ANR	5900447	PrimaryExpression	0		5900421	1					
ANR	5900448	IdentifierDeclStatement	struct stat st ;	743:4:32473:32487	5900421	3	True				
ANR	5900449	IdentifierDecl	st		5900421	0					
ANR	5900450	IdentifierDeclType	struct stat		5900421	0					
ANR	5900451	Identifier	st		5900421	1					
ANR	5900452	ExpressionStatement	"log_log ( log , op , ""start"" )"	746:4:32517:32542	5900421	4	True				
ANR	5900453	CallExpression	"log_log ( log , op , ""start"" )"		5900421	0					
ANR	5900454	Callee	log_log		5900421	0					
ANR	5900455	Identifier	log_log		5900421	0					
ANR	5900456	ArgumentList	log		5900421	1					
ANR	5900457	Argument	log		5900421	0					
ANR	5900458	Identifier	log		5900421	0					
ANR	5900459	Argument	op		5900421	1					
ANR	5900460	Identifier	op		5900421	0					
ANR	5900461	Argument	"""start"""		5900421	2					
ANR	5900462	PrimaryExpression	"""start"""		5900421	0					
ANR	5900463	IfStatement	if ( op == APPEND_OP || op == COMPRESS_OP )		5900421	5					
ANR	5900464	Condition	op == APPEND_OP || op == COMPRESS_OP	749:8:32605:32640	5900421	0	True				
ANR	5900465	OrExpression	op == APPEND_OP || op == COMPRESS_OP		5900421	0		||			
ANR	5900466	EqualityExpression	op == APPEND_OP		5900421	0		==			
ANR	5900467	Identifier	op		5900421	0					
ANR	5900468	Identifier	APPEND_OP		5900421	1					
ANR	5900469	EqualityExpression	op == COMPRESS_OP		5900421	1		==			
ANR	5900470	Identifier	op		5900421	0					
ANR	5900471	Identifier	COMPRESS_OP		5900421	1					
ANR	5900472	CompoundStatement		11:46:248:248	5900421	1					
ANR	5900473	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	750:8:32653:32677	5900421	0	True				
ANR	5900474	CallExpression	"strcpy ( log -> end , "".add"" )"		5900421	0					
ANR	5900475	Callee	strcpy		5900421	0					
ANR	5900476	Identifier	strcpy		5900421	0					
ANR	5900477	ArgumentList	log -> end		5900421	1					
ANR	5900478	Argument	log -> end		5900421	0					
ANR	5900479	PtrMemberAccess	log -> end		5900421	0					
ANR	5900480	Identifier	log		5900421	0					
ANR	5900481	Identifier	end		5900421	1					
ANR	5900482	Argument	""".add"""		5900421	1					
ANR	5900483	PrimaryExpression	""".add"""		5900421	0					
ANR	5900484	IfStatement	"if ( stat ( log -> path , & st ) == 0 && st . st_size )"		5900421	1					
ANR	5900485	Condition	"stat ( log -> path , & st ) == 0 && st . st_size"	751:12:32691:32729	5900421	0	True				
ANR	5900486	AndExpression	"stat ( log -> path , & st ) == 0 && st . st_size"		5900421	0		&&			
ANR	5900487	EqualityExpression	"stat ( log -> path , & st ) == 0"		5900421	0		==			
ANR	5900488	CallExpression	"stat ( log -> path , & st )"		5900421	0					
ANR	5900489	Callee	stat		5900421	0					
ANR	5900490	Identifier	stat		5900421	0					
ANR	5900491	ArgumentList	log -> path		5900421	1					
ANR	5900492	Argument	log -> path		5900421	0					
ANR	5900493	PtrMemberAccess	log -> path		5900421	0					
ANR	5900494	Identifier	log		5900421	0					
ANR	5900495	Identifier	path		5900421	1					
ANR	5900496	Argument	& st		5900421	1					
ANR	5900497	UnaryOperationExpression	& st		5900421	0					
ANR	5900498	UnaryOperator	&		5900421	0					
ANR	5900499	Identifier	st		5900421	1					
ANR	5900500	PrimaryExpression	0		5900421	1					
ANR	5900501	MemberAccess	st . st_size		5900421	1					
ANR	5900502	Identifier	st		5900421	0					
ANR	5900503	Identifier	st_size		5900421	1					
ANR	5900504	CompoundStatement		13:53:337:337	5900421	1					
ANR	5900505	ExpressionStatement	len = ( size_t ) ( st . st_size )	752:12:32746:32772	5900421	0	True				
ANR	5900506	AssignmentExpression	len = ( size_t ) ( st . st_size )		5900421	0		=			
ANR	5900507	Identifier	len		5900421	0					
ANR	5900508	CastExpression	( size_t ) ( st . st_size )		5900421	1					
ANR	5900509	CastTarget	size_t		5900421	0					
ANR	5900510	MemberAccess	st . st_size		5900421	1					
ANR	5900511	Identifier	st		5900421	0					
ANR	5900512	Identifier	st_size		5900421	1					
ANR	5900513	IfStatement	if ( ( off_t ) len != st . st_size || ( data = malloc ( st . st_size ) ) == NULL )		5900421	1					
ANR	5900514	Condition	( off_t ) len != st . st_size || ( data = malloc ( st . st_size ) ) == NULL	753:16:32790:32872	5900421	0	True				
ANR	5900515	OrExpression	( off_t ) len != st . st_size || ( data = malloc ( st . st_size ) ) == NULL		5900421	0		||			
ANR	5900516	EqualityExpression	( off_t ) len != st . st_size		5900421	0		!=			
ANR	5900517	CastExpression	( off_t ) len		5900421	0					
ANR	5900518	CastTarget	off_t		5900421	0					
ANR	5900519	Identifier	len		5900421	1					
ANR	5900520	MemberAccess	st . st_size		5900421	1					
ANR	5900521	Identifier	st		5900421	0					
ANR	5900522	Identifier	st_size		5900421	1					
ANR	5900523	EqualityExpression	( data = malloc ( st . st_size ) ) == NULL		5900421	1		==			
ANR	5900524	AssignmentExpression	data = malloc ( st . st_size )		5900421	0		=			
ANR	5900525	Identifier	data		5900421	0					
ANR	5900526	CallExpression	malloc ( st . st_size )		5900421	1					
ANR	5900527	Callee	malloc		5900421	0					
ANR	5900528	Identifier	malloc		5900421	0					
ANR	5900529	ArgumentList	st . st_size		5900421	1					
ANR	5900530	Argument	st . st_size		5900421	0					
ANR	5900531	MemberAccess	st . st_size		5900421	0					
ANR	5900532	Identifier	st		5900421	0					
ANR	5900533	Identifier	st_size		5900421	1					
ANR	5900534	Identifier	NULL		5900421	1					
ANR	5900535	CompoundStatement		16:57:480:480	5900421	1					
ANR	5900536	ExpressionStatement	"log_log ( log , op , ""allocation failure"" )"	755:16:32893:32931	5900421	0	True				
ANR	5900537	CallExpression	"log_log ( log , op , ""allocation failure"" )"		5900421	0					
ANR	5900538	Callee	log_log		5900421	0					
ANR	5900539	Identifier	log_log		5900421	0					
ANR	5900540	ArgumentList	log		5900421	1					
ANR	5900541	Argument	log		5900421	0					
ANR	5900542	Identifier	log		5900421	0					
ANR	5900543	Argument	op		5900421	1					
ANR	5900544	Identifier	op		5900421	0					
ANR	5900545	Argument	"""allocation failure"""		5900421	2					
ANR	5900546	PrimaryExpression	"""allocation failure"""		5900421	0					
ANR	5900547	ReturnStatement	return - 2 ;	756:16:32949:32958	5900421	1	True				
ANR	5900548	UnaryOperationExpression	- 2		5900421	0					
ANR	5900549	UnaryOperator	-		5900421	0					
ANR	5900550	PrimaryExpression	2		5900421	1					
ANR	5900551	IfStatement	"if ( ( fd = open ( log -> path , O_RDONLY , 0 ) ) < 0 )"		5900421	2					
ANR	5900552	Condition	"( fd = open ( log -> path , O_RDONLY , 0 ) ) < 0"	758:16:32990:33028	5900421	0	True				
ANR	5900553	RelationalExpression	"( fd = open ( log -> path , O_RDONLY , 0 ) ) < 0"		5900421	0		<			
ANR	5900554	AssignmentExpression	"fd = open ( log -> path , O_RDONLY , 0 )"		5900421	0		=			
ANR	5900555	Identifier	fd		5900421	0					
ANR	5900556	CallExpression	"open ( log -> path , O_RDONLY , 0 )"		5900421	1					
ANR	5900557	Callee	open		5900421	0					
ANR	5900558	Identifier	open		5900421	0					
ANR	5900559	ArgumentList	log -> path		5900421	1					
ANR	5900560	Argument	log -> path		5900421	0					
ANR	5900561	PtrMemberAccess	log -> path		5900421	0					
ANR	5900562	Identifier	log		5900421	0					
ANR	5900563	Identifier	path		5900421	1					
ANR	5900564	Argument	O_RDONLY		5900421	1					
ANR	5900565	Identifier	O_RDONLY		5900421	0					
ANR	5900566	Argument	0		5900421	2					
ANR	5900567	PrimaryExpression	0		5900421	0					
ANR	5900568	PrimaryExpression	0		5900421	1					
ANR	5900569	CompoundStatement		20:57:636:636	5900421	1					
ANR	5900570	ExpressionStatement	"log_log ( log , op , "".add file read failure"" )"	759:16:33049:33091	5900421	0	True				
ANR	5900571	CallExpression	"log_log ( log , op , "".add file read failure"" )"		5900421	0					
ANR	5900572	Callee	log_log		5900421	0					
ANR	5900573	Identifier	log_log		5900421	0					
ANR	5900574	ArgumentList	log		5900421	1					
ANR	5900575	Argument	log		5900421	0					
ANR	5900576	Identifier	log		5900421	0					
ANR	5900577	Argument	op		5900421	1					
ANR	5900578	Identifier	op		5900421	0					
ANR	5900579	Argument	""".add file read failure"""		5900421	2					
ANR	5900580	PrimaryExpression	""".add file read failure"""		5900421	0					
ANR	5900581	ReturnStatement	return - 1 ;	760:16:33109:33118	5900421	1	True				
ANR	5900582	UnaryOperationExpression	- 1		5900421	0					
ANR	5900583	UnaryOperator	-		5900421	0					
ANR	5900584	PrimaryExpression	1		5900421	1					
ANR	5900585	ExpressionStatement	"ret = ( size_t ) read ( fd , data , len ) != len"	762:12:33146:33186	5900421	3	True				
ANR	5900586	AssignmentExpression	"ret = ( size_t ) read ( fd , data , len ) != len"		5900421	0		=			
ANR	5900587	Identifier	ret		5900421	0					
ANR	5900588	EqualityExpression	"( size_t ) read ( fd , data , len ) != len"		5900421	1		!=			
ANR	5900589	CastExpression	"( size_t ) read ( fd , data , len )"		5900421	0					
ANR	5900590	CastTarget	size_t		5900421	0					
ANR	5900591	CallExpression	"read ( fd , data , len )"		5900421	1					
ANR	5900592	Callee	read		5900421	0					
ANR	5900593	Identifier	read		5900421	0					
ANR	5900594	ArgumentList	fd		5900421	1					
ANR	5900595	Argument	fd		5900421	0					
ANR	5900596	Identifier	fd		5900421	0					
ANR	5900597	Argument	data		5900421	1					
ANR	5900598	Identifier	data		5900421	0					
ANR	5900599	Argument	len		5900421	2					
ANR	5900600	Identifier	len		5900421	0					
ANR	5900601	Identifier	len		5900421	1					
ANR	5900602	ExpressionStatement	close ( fd )	763:12:33200:33209	5900421	4	True				
ANR	5900603	CallExpression	close ( fd )		5900421	0					
ANR	5900604	Callee	close		5900421	0					
ANR	5900605	Identifier	close		5900421	0					
ANR	5900606	ArgumentList	fd		5900421	1					
ANR	5900607	Argument	fd		5900421	0					
ANR	5900608	Identifier	fd		5900421	0					
ANR	5900609	IfStatement	if ( ret )		5900421	5					
ANR	5900610	Condition	ret	764:16:33227:33229	5900421	0	True				
ANR	5900611	Identifier	ret		5900421	0					
ANR	5900612	CompoundStatement		26:21:837:837	5900421	1					
ANR	5900613	ExpressionStatement	"log_log ( log , op , "".add file read failure"" )"	765:16:33250:33292	5900421	0	True				
ANR	5900614	CallExpression	"log_log ( log , op , "".add file read failure"" )"		5900421	0					
ANR	5900615	Callee	log_log		5900421	0					
ANR	5900616	Identifier	log_log		5900421	0					
ANR	5900617	ArgumentList	log		5900421	1					
ANR	5900618	Argument	log		5900421	0					
ANR	5900619	Identifier	log		5900421	0					
ANR	5900620	Argument	op		5900421	1					
ANR	5900621	Identifier	op		5900421	0					
ANR	5900622	Argument	""".add file read failure"""		5900421	2					
ANR	5900623	PrimaryExpression	""".add file read failure"""		5900421	0					
ANR	5900624	ReturnStatement	return - 1 ;	766:16:33310:33319	5900421	1	True				
ANR	5900625	UnaryOperationExpression	- 1		5900421	0					
ANR	5900626	UnaryOperator	-		5900421	0					
ANR	5900627	PrimaryExpression	1		5900421	1					
ANR	5900628	ExpressionStatement	"log_log ( log , op , ""loaded .add file"" )"	768:12:33347:33383	5900421	6	True				
ANR	5900629	CallExpression	"log_log ( log , op , ""loaded .add file"" )"		5900421	0					
ANR	5900630	Callee	log_log		5900421	0					
ANR	5900631	Identifier	log_log		5900421	0					
ANR	5900632	ArgumentList	log		5900421	1					
ANR	5900633	Argument	log		5900421	0					
ANR	5900634	Identifier	log		5900421	0					
ANR	5900635	Argument	op		5900421	1					
ANR	5900636	Identifier	op		5900421	0					
ANR	5900637	Argument	"""loaded .add file"""		5900421	2					
ANR	5900638	PrimaryExpression	"""loaded .add file"""		5900421	0					
ANR	5900639	ElseStatement	else		5900421	0					
ANR	5900640	ExpressionStatement	"log_log ( log , op , ""missing .add file!"" )"	771:12:33420:33458	5900421	0	True				
ANR	5900641	CallExpression	"log_log ( log , op , ""missing .add file!"" )"		5900421	0					
ANR	5900642	Callee	log_log		5900421	0					
ANR	5900643	Identifier	log_log		5900421	0					
ANR	5900644	ArgumentList	log		5900421	1					
ANR	5900645	Argument	log		5900421	0					
ANR	5900646	Identifier	log		5900421	0					
ANR	5900647	Argument	op		5900421	1					
ANR	5900648	Identifier	op		5900421	0					
ANR	5900649	Argument	"""missing .add file!"""		5900421	2					
ANR	5900650	PrimaryExpression	"""missing .add file!"""		5900421	0					
ANR	5900651	SwitchStatement	switch ( op )		5900421	6					
ANR	5900652	Condition	op	775:12:33523:33524	5900421	0	True				
ANR	5900653	Identifier	op		5900421	0					
ANR	5900654	CompoundStatement		37:16:1132:1132	5900421	1					
ANR	5900655	Label	case APPEND_OP :	776:4:33533:33547	5900421	0	True				
ANR	5900656	Identifier	APPEND_OP		5900421	0					
ANR	5900657	ExpressionStatement	"ret = log_append ( log , data , len )"	777:8:33557:33589	5900421	1	True				
ANR	5900658	AssignmentExpression	"ret = log_append ( log , data , len )"		5900421	0		=			
ANR	5900659	Identifier	ret		5900421	0					
ANR	5900660	CallExpression	"log_append ( log , data , len )"		5900421	1					
ANR	5900661	Callee	log_append		5900421	0					
ANR	5900662	Identifier	log_append		5900421	0					
ANR	5900663	ArgumentList	log		5900421	1					
ANR	5900664	Argument	log		5900421	0					
ANR	5900665	Identifier	log		5900421	0					
ANR	5900666	Argument	data		5900421	1					
ANR	5900667	Identifier	data		5900421	0					
ANR	5900668	Argument	len		5900421	2					
ANR	5900669	Identifier	len		5900421	0					
ANR	5900670	BreakStatement	break ;	778:8:33599:33604	5900421	2	True				
ANR	5900671	Label	case COMPRESS_OP :	779:4:33610:33626	5900421	3	True				
ANR	5900672	Identifier	COMPRESS_OP		5900421	0					
ANR	5900673	ExpressionStatement	"ret = log_compress ( log , data , len )"	780:8:33636:33670	5900421	4	True				
ANR	5900674	AssignmentExpression	"ret = log_compress ( log , data , len )"		5900421	0		=			
ANR	5900675	Identifier	ret		5900421	0					
ANR	5900676	CallExpression	"log_compress ( log , data , len )"		5900421	1					
ANR	5900677	Callee	log_compress		5900421	0					
ANR	5900678	Identifier	log_compress		5900421	0					
ANR	5900679	ArgumentList	log		5900421	1					
ANR	5900680	Argument	log		5900421	0					
ANR	5900681	Identifier	log		5900421	0					
ANR	5900682	Argument	data		5900421	1					
ANR	5900683	Identifier	data		5900421	0					
ANR	5900684	Argument	len		5900421	2					
ANR	5900685	Identifier	len		5900421	0					
ANR	5900686	BreakStatement	break ;	781:8:33680:33685	5900421	5	True				
ANR	5900687	Label	case REPLACE_OP :	782:4:33691:33706	5900421	6	True				
ANR	5900688	Identifier	REPLACE_OP		5900421	0					
ANR	5900689	ExpressionStatement	ret = log_replace ( log )	783:8:33716:33738	5900421	7	True				
ANR	5900690	AssignmentExpression	ret = log_replace ( log )		5900421	0		=			
ANR	5900691	Identifier	ret		5900421	0					
ANR	5900692	CallExpression	log_replace ( log )		5900421	1					
ANR	5900693	Callee	log_replace		5900421	0					
ANR	5900694	Identifier	log_replace		5900421	0					
ANR	5900695	ArgumentList	log		5900421	1					
ANR	5900696	Argument	log		5900421	0					
ANR	5900697	Identifier	log		5900421	0					
ANR	5900698	ExpressionStatement	"log_log ( log , op , ret ? ""failure"" : ""complete"" )"	787:4:33772:33818	5900421	7	True				
ANR	5900699	CallExpression	"log_log ( log , op , ret ? ""failure"" : ""complete"" )"		5900421	0					
ANR	5900700	Callee	log_log		5900421	0					
ANR	5900701	Identifier	log_log		5900421	0					
ANR	5900702	ArgumentList	log		5900421	1					
ANR	5900703	Argument	log		5900421	0					
ANR	5900704	Identifier	log		5900421	0					
ANR	5900705	Argument	op		5900421	1					
ANR	5900706	Identifier	op		5900421	0					
ANR	5900707	Argument	"ret ? ""failure"" : ""complete"""		5900421	2					
ANR	5900708	ConditionalExpression	"ret ? ""failure"" : ""complete"""		5900421	0					
ANR	5900709	Condition	ret		5900421	0					
ANR	5900710	Identifier	ret		5900421	0					
ANR	5900711	PrimaryExpression	"""failure"""		5900421	1					
ANR	5900712	PrimaryExpression	"""complete"""		5900421	2					
ANR	5900713	IfStatement	if ( data != NULL )		5900421	8					
ANR	5900714	Condition	data != NULL	790:8:33848:33859	5900421	0	True				
ANR	5900715	EqualityExpression	data != NULL		5900421	0		!=			
ANR	5900716	Identifier	data		5900421	0					
ANR	5900717	Identifier	NULL		5900421	1					
ANR	5900718	ExpressionStatement	free ( data )	791:8:33870:33880	5900421	1	True				
ANR	5900719	CallExpression	free ( data )		5900421	0					
ANR	5900720	Callee	free		5900421	0					
ANR	5900721	Identifier	free		5900421	0					
ANR	5900722	ArgumentList	data		5900421	1					
ANR	5900723	Argument	data		5900421	0					
ANR	5900724	Identifier	data		5900421	0					
ANR	5900725	ReturnStatement	return ret ;	792:4:33886:33896	5900421	9	True				
ANR	5900726	Identifier	ret		5900421	0					
ANR	5900727	ReturnType	local int		5900421	1					
ANR	5900728	Identifier	log_recover		5900421	2					
ANR	5900729	ParameterList	"struct log * log , int op"		5900421	3					
ANR	5900730	Parameter	struct log * log	738:22:32369:32383	5900421	0	True				
ANR	5900731	ParameterType	struct log *		5900421	0					
ANR	5900732	Identifier	log		5900421	1					
ANR	5900733	Parameter	int op	738:39:32386:32391	5900421	1	True				
ANR	5900734	ParameterType	int		5900421	0					
ANR	5900735	Identifier	op		5900421	1					
ANR	5900736	CFGEntryNode	ENTRY		5900421		True				
ANR	5900737	CFGExitNode	EXIT		5900421		True				
ANR	5900738	Symbol	ret		5900421						
ANR	5900739	Symbol	log_append		5900421						
ANR	5900740	Symbol	op		5900421						
ANR	5900741	Symbol	st		5900421						
ANR	5900742	Symbol	malloc		5900421						
ANR	5900743	Symbol	stat		5900421						
ANR	5900744	Symbol	NULL		5900421						
ANR	5900745	Symbol	read		5900421						
ANR	5900746	Symbol	data		5900421						
ANR	5900747	Symbol	log -> end		5900421						
ANR	5900748	Symbol	log		5900421						
ANR	5900749	Symbol	log -> path		5900421						
ANR	5900750	Symbol	log_compress		5900421						
ANR	5900751	Symbol	& st		5900421						
ANR	5900752	Symbol	* log		5900421						
ANR	5900753	Symbol	COMPRESS_OP		5900421						
ANR	5900754	Symbol	log_replace		5900421						
ANR	5900755	Symbol	st . st_size		5900421						
ANR	5900756	Symbol	O_RDONLY		5900421						
ANR	5900757	Symbol	len		5900421						
ANR	5900758	Symbol	APPEND_OP		5900421						
ANR	5900759	Symbol	fd		5900421						
ANR	5900760	Symbol	open		5900421						
ANR	5900761	Function	log_close	796:0:33961:34086							
ANR	5900762	FunctionDef	log_close (struct log * log)		5900761	0					
ANR	5900763	CompoundStatement		797:0:33999:34086	5900761	0					
ANR	5900764	IfStatement	if ( log -> fd >= 0 )		5900761	0					
ANR	5900765	Condition	log -> fd >= 0	798:8:34009:34020	5900761	0	True				
ANR	5900766	RelationalExpression	log -> fd >= 0		5900761	0		>=			
ANR	5900767	PtrMemberAccess	log -> fd		5900761	0					
ANR	5900768	Identifier	log		5900761	0					
ANR	5900769	Identifier	fd		5900761	1					
ANR	5900770	PrimaryExpression	0		5900761	1					
ANR	5900771	ExpressionStatement	close ( log -> fd )	799:8:34031:34045	5900761	1	True				
ANR	5900772	CallExpression	close ( log -> fd )		5900761	0					
ANR	5900773	Callee	close		5900761	0					
ANR	5900774	Identifier	close		5900761	0					
ANR	5900775	ArgumentList	log -> fd		5900761	1					
ANR	5900776	Argument	log -> fd		5900761	0					
ANR	5900777	PtrMemberAccess	log -> fd		5900761	0					
ANR	5900778	Identifier	log		5900761	0					
ANR	5900779	Identifier	fd		5900761	1					
ANR	5900780	ExpressionStatement	log -> fd = - 1	800:4:34051:34063	5900761	1	True				
ANR	5900781	AssignmentExpression	log -> fd = - 1		5900761	0		=			
ANR	5900782	PtrMemberAccess	log -> fd		5900761	0					
ANR	5900783	Identifier	log		5900761	0					
ANR	5900784	Identifier	fd		5900761	1					
ANR	5900785	UnaryOperationExpression	- 1		5900761	1					
ANR	5900786	UnaryOperator	-		5900761	0					
ANR	5900787	PrimaryExpression	1		5900761	1					
ANR	5900788	ExpressionStatement	log_unlock ( log )	801:4:34069:34084	5900761	2	True				
ANR	5900789	CallExpression	log_unlock ( log )		5900761	0					
ANR	5900790	Callee	log_unlock		5900761	0					
ANR	5900791	Identifier	log_unlock		5900761	0					
ANR	5900792	ArgumentList	log		5900761	1					
ANR	5900793	Argument	log		5900761	0					
ANR	5900794	Identifier	log		5900761	0					
ANR	5900795	ReturnType	local void		5900761	1					
ANR	5900796	Identifier	log_close		5900761	2					
ANR	5900797	ParameterList	struct log * log		5900761	3					
ANR	5900798	Parameter	struct log * log	796:21:33982:33996	5900761	0	True				
ANR	5900799	ParameterType	struct log *		5900761	0					
ANR	5900800	Identifier	log		5900761	1					
ANR	5900801	CFGEntryNode	ENTRY		5900761		True				
ANR	5900802	CFGExitNode	EXIT		5900761		True				
ANR	5900803	Symbol	log -> fd		5900761						
ANR	5900804	Symbol	log		5900761						
ANR	5900805	Symbol	* log		5900761						
ANR	5900806	Function	log_open	813:0:34747:36091							
ANR	5900807	FunctionDef	log_open (struct log * log)		5900806	0					
ANR	5900808	CompoundStatement		814:0:34783:36091	5900806	0					
ANR	5900809	IdentifierDeclStatement	int op ;	815:4:34789:34795	5900806	0	True				
ANR	5900810	IdentifierDecl	op		5900806	0					
ANR	5900811	IdentifierDeclType	int		5900806	0					
ANR	5900812	Identifier	op		5900806	1					
ANR	5900813	IfStatement	if ( log -> fd >= 0 )		5900806	1					
ANR	5900814	Condition	log -> fd >= 0	819:8:34928:34939	5900806	0	True				
ANR	5900815	RelationalExpression	log -> fd >= 0		5900806	0		>=			
ANR	5900816	PtrMemberAccess	log -> fd		5900806	0					
ANR	5900817	Identifier	log		5900806	0					
ANR	5900818	Identifier	fd		5900806	1					
ANR	5900819	PrimaryExpression	0		5900806	1					
ANR	5900820	ExpressionStatement	close ( log -> fd )	820:8:34950:34964	5900806	1	True				
ANR	5900821	CallExpression	close ( log -> fd )		5900806	0					
ANR	5900822	Callee	close		5900806	0					
ANR	5900823	Identifier	close		5900806	0					
ANR	5900824	ArgumentList	log -> fd		5900806	1					
ANR	5900825	Argument	log -> fd		5900806	0					
ANR	5900826	PtrMemberAccess	log -> fd		5900806	0					
ANR	5900827	Identifier	log		5900806	0					
ANR	5900828	Identifier	fd		5900806	1					
ANR	5900829	ExpressionStatement	log -> fd = - 1	821:4:34970:34982	5900806	2	True				
ANR	5900830	AssignmentExpression	log -> fd = - 1		5900806	0		=			
ANR	5900831	PtrMemberAccess	log -> fd		5900806	0					
ANR	5900832	Identifier	log		5900806	0					
ANR	5900833	Identifier	fd		5900806	1					
ANR	5900834	UnaryOperationExpression	- 1		5900806	1					
ANR	5900835	UnaryOperator	-		5900806	0					
ANR	5900836	PrimaryExpression	1		5900806	1					
ANR	5900837	IfStatement	if ( log_lock ( log ) < 0 )		5900806	3					
ANR	5900838	Condition	log_lock ( log ) < 0	824:8:35030:35046	5900806	0	True				
ANR	5900839	RelationalExpression	log_lock ( log ) < 0		5900806	0		<			
ANR	5900840	CallExpression	log_lock ( log )		5900806	0					
ANR	5900841	Callee	log_lock		5900806	0					
ANR	5900842	Identifier	log_lock		5900806	0					
ANR	5900843	ArgumentList	log		5900806	1					
ANR	5900844	Argument	log		5900806	0					
ANR	5900845	Identifier	log		5900806	0					
ANR	5900846	PrimaryExpression	0		5900806	1					
ANR	5900847	ReturnStatement	return - 1 ;	825:8:35057:35066	5900806	1	True				
ANR	5900848	UnaryOperationExpression	- 1		5900806	0					
ANR	5900849	UnaryOperator	-		5900806	0					
ANR	5900850	PrimaryExpression	1		5900806	1					
ANR	5900851	ExpressionStatement	"strcpy ( log -> end , "".gz"" )"	828:4:35109:35132	5900806	4	True				
ANR	5900852	CallExpression	"strcpy ( log -> end , "".gz"" )"		5900806	0					
ANR	5900853	Callee	strcpy		5900806	0					
ANR	5900854	Identifier	strcpy		5900806	0					
ANR	5900855	ArgumentList	log -> end		5900806	1					
ANR	5900856	Argument	log -> end		5900806	0					
ANR	5900857	PtrMemberAccess	log -> end		5900806	0					
ANR	5900858	Identifier	log		5900806	0					
ANR	5900859	Identifier	end		5900806	1					
ANR	5900860	Argument	""".gz"""		5900806	1					
ANR	5900861	PrimaryExpression	""".gz"""		5900806	0					
ANR	5900862	ExpressionStatement	"log -> fd = open ( log -> path , O_RDWR | O_CREAT , 0644 )"	829:4:35138:35187	5900806	5	True				
ANR	5900863	AssignmentExpression	"log -> fd = open ( log -> path , O_RDWR | O_CREAT , 0644 )"		5900806	0		=			
ANR	5900864	PtrMemberAccess	log -> fd		5900806	0					
ANR	5900865	Identifier	log		5900806	0					
ANR	5900866	Identifier	fd		5900806	1					
ANR	5900867	CallExpression	"open ( log -> path , O_RDWR | O_CREAT , 0644 )"		5900806	1					
ANR	5900868	Callee	open		5900806	0					
ANR	5900869	Identifier	open		5900806	0					
ANR	5900870	ArgumentList	log -> path		5900806	1					
ANR	5900871	Argument	log -> path		5900806	0					
ANR	5900872	PtrMemberAccess	log -> path		5900806	0					
ANR	5900873	Identifier	log		5900806	0					
ANR	5900874	Identifier	path		5900806	1					
ANR	5900875	Argument	O_RDWR | O_CREAT		5900806	1					
ANR	5900876	InclusiveOrExpression	O_RDWR | O_CREAT		5900806	0		|			
ANR	5900877	Identifier	O_RDWR		5900806	0					
ANR	5900878	Identifier	O_CREAT		5900806	1					
ANR	5900879	Argument	0644		5900806	2					
ANR	5900880	PrimaryExpression	0644		5900806	0					
ANR	5900881	IfStatement	if ( log -> fd < 0 )		5900806	6					
ANR	5900882	Condition	log -> fd < 0	830:8:35197:35207	5900806	0	True				
ANR	5900883	RelationalExpression	log -> fd < 0		5900806	0		<			
ANR	5900884	PtrMemberAccess	log -> fd		5900806	0					
ANR	5900885	Identifier	log		5900806	0					
ANR	5900886	Identifier	fd		5900806	1					
ANR	5900887	PrimaryExpression	0		5900806	1					
ANR	5900888	CompoundStatement		17:21:426:426	5900806	1					
ANR	5900889	ExpressionStatement	log_close ( log )	831:8:35220:35234	5900806	0	True				
ANR	5900890	CallExpression	log_close ( log )		5900806	0					
ANR	5900891	Callee	log_close		5900806	0					
ANR	5900892	Identifier	log_close		5900806	0					
ANR	5900893	ArgumentList	log		5900806	1					
ANR	5900894	Argument	log		5900806	0					
ANR	5900895	Identifier	log		5900806	0					
ANR	5900896	ReturnStatement	return - 1 ;	832:8:35244:35253	5900806	1	True				
ANR	5900897	UnaryOperationExpression	- 1		5900806	0					
ANR	5900898	UnaryOperator	-		5900806	0					
ANR	5900899	PrimaryExpression	1		5900806	1					
ANR	5900900	IfStatement	"if ( lseek ( log -> fd , 0 , SEEK_END ) == 0 )"		5900806	7					
ANR	5900901	Condition	"lseek ( log -> fd , 0 , SEEK_END ) == 0"	836:8:35347:35378	5900806	0	True				
ANR	5900902	EqualityExpression	"lseek ( log -> fd , 0 , SEEK_END ) == 0"		5900806	0		==			
ANR	5900903	CallExpression	"lseek ( log -> fd , 0 , SEEK_END )"		5900806	0					
ANR	5900904	Callee	lseek		5900806	0					
ANR	5900905	Identifier	lseek		5900806	0					
ANR	5900906	ArgumentList	log -> fd		5900806	1					
ANR	5900907	Argument	log -> fd		5900806	0					
ANR	5900908	PtrMemberAccess	log -> fd		5900806	0					
ANR	5900909	Identifier	log		5900806	0					
ANR	5900910	Identifier	fd		5900806	1					
ANR	5900911	Argument	0		5900806	1					
ANR	5900912	PrimaryExpression	0		5900806	0					
ANR	5900913	Argument	SEEK_END		5900806	2					
ANR	5900914	Identifier	SEEK_END		5900806	0					
ANR	5900915	PrimaryExpression	0		5900806	1					
ANR	5900916	CompoundStatement		23:42:597:597	5900806	1					
ANR	5900917	IfStatement	"if ( write ( log -> fd , log_gzhead , HEAD ) != HEAD || write ( log -> fd , log_gzext , EXTRA ) != EXTRA || write ( log -> fd , log_gzbody , BODY ) != BODY )"		5900806	0					
ANR	5900918	Condition	"write ( log -> fd , log_gzhead , HEAD ) != HEAD || write ( log -> fd , log_gzext , EXTRA ) != EXTRA || write ( log -> fd , log_gzbody , BODY ) != BODY"	837:12:35395:35547	5900806	0	True				
ANR	5900919	OrExpression	"write ( log -> fd , log_gzhead , HEAD ) != HEAD || write ( log -> fd , log_gzext , EXTRA ) != EXTRA || write ( log -> fd , log_gzbody , BODY ) != BODY"		5900806	0		||			
ANR	5900920	EqualityExpression	"write ( log -> fd , log_gzhead , HEAD ) != HEAD"		5900806	0		!=			
ANR	5900921	CallExpression	"write ( log -> fd , log_gzhead , HEAD )"		5900806	0					
ANR	5900922	Callee	write		5900806	0					
ANR	5900923	Identifier	write		5900806	0					
ANR	5900924	ArgumentList	log -> fd		5900806	1					
ANR	5900925	Argument	log -> fd		5900806	0					
ANR	5900926	PtrMemberAccess	log -> fd		5900806	0					
ANR	5900927	Identifier	log		5900806	0					
ANR	5900928	Identifier	fd		5900806	1					
ANR	5900929	Argument	log_gzhead		5900806	1					
ANR	5900930	Identifier	log_gzhead		5900806	0					
ANR	5900931	Argument	HEAD		5900806	2					
ANR	5900932	Identifier	HEAD		5900806	0					
ANR	5900933	Identifier	HEAD		5900806	1					
ANR	5900934	OrExpression	"write ( log -> fd , log_gzext , EXTRA ) != EXTRA || write ( log -> fd , log_gzbody , BODY ) != BODY"		5900806	1		||			
ANR	5900935	EqualityExpression	"write ( log -> fd , log_gzext , EXTRA ) != EXTRA"		5900806	0		!=			
ANR	5900936	CallExpression	"write ( log -> fd , log_gzext , EXTRA )"		5900806	0					
ANR	5900937	Callee	write		5900806	0					
ANR	5900938	Identifier	write		5900806	0					
ANR	5900939	ArgumentList	log -> fd		5900806	1					
ANR	5900940	Argument	log -> fd		5900806	0					
ANR	5900941	PtrMemberAccess	log -> fd		5900806	0					
ANR	5900942	Identifier	log		5900806	0					
ANR	5900943	Identifier	fd		5900806	1					
ANR	5900944	Argument	log_gzext		5900806	1					
ANR	5900945	Identifier	log_gzext		5900806	0					
ANR	5900946	Argument	EXTRA		5900806	2					
ANR	5900947	Identifier	EXTRA		5900806	0					
ANR	5900948	Identifier	EXTRA		5900806	1					
ANR	5900949	EqualityExpression	"write ( log -> fd , log_gzbody , BODY ) != BODY"		5900806	1		!=			
ANR	5900950	CallExpression	"write ( log -> fd , log_gzbody , BODY )"		5900806	0					
ANR	5900951	Callee	write		5900806	0					
ANR	5900952	Identifier	write		5900806	0					
ANR	5900953	ArgumentList	log -> fd		5900806	1					
ANR	5900954	Argument	log -> fd		5900806	0					
ANR	5900955	PtrMemberAccess	log -> fd		5900806	0					
ANR	5900956	Identifier	log		5900806	0					
ANR	5900957	Identifier	fd		5900806	1					
ANR	5900958	Argument	log_gzbody		5900806	1					
ANR	5900959	Identifier	log_gzbody		5900806	0					
ANR	5900960	Argument	BODY		5900806	2					
ANR	5900961	Identifier	BODY		5900806	0					
ANR	5900962	Identifier	BODY		5900806	1					
ANR	5900963	CompoundStatement		26:54:766:766	5900806	1					
ANR	5900964	ExpressionStatement	log_close ( log )	840:12:35564:35578	5900806	0	True				
ANR	5900965	CallExpression	log_close ( log )		5900806	0					
ANR	5900966	Callee	log_close		5900806	0					
ANR	5900967	Identifier	log_close		5900806	0					
ANR	5900968	ArgumentList	log		5900806	1					
ANR	5900969	Argument	log		5900806	0					
ANR	5900970	Identifier	log		5900806	0					
ANR	5900971	ReturnStatement	return - 1 ;	841:12:35592:35601	5900806	1	True				
ANR	5900972	UnaryOperationExpression	- 1		5900806	0					
ANR	5900973	UnaryOperator	-		5900806	0					
ANR	5900974	PrimaryExpression	1		5900806	1					
ANR	5900975	ExpressionStatement	"strcpy ( log -> end , "".dict"" )"	843:8:35621:35646	5900806	1	True				
ANR	5900976	CallExpression	"strcpy ( log -> end , "".dict"" )"		5900806	0					
ANR	5900977	Callee	strcpy		5900806	0					
ANR	5900978	Identifier	strcpy		5900806	0					
ANR	5900979	ArgumentList	log -> end		5900806	1					
ANR	5900980	Argument	log -> end		5900806	0					
ANR	5900981	PtrMemberAccess	log -> end		5900806	0					
ANR	5900982	Identifier	log		5900806	0					
ANR	5900983	Identifier	end		5900806	1					
ANR	5900984	Argument	""".dict"""		5900806	1					
ANR	5900985	PrimaryExpression	""".dict"""		5900806	0					
ANR	5900986	ExpressionStatement	unlink ( log -> path )	844:8:35656:35673	5900806	2	True				
ANR	5900987	CallExpression	unlink ( log -> path )		5900806	0					
ANR	5900988	Callee	unlink		5900806	0					
ANR	5900989	Identifier	unlink		5900806	0					
ANR	5900990	ArgumentList	log -> path		5900806	1					
ANR	5900991	Argument	log -> path		5900806	0					
ANR	5900992	PtrMemberAccess	log -> path		5900806	0					
ANR	5900993	Identifier	log		5900806	0					
ANR	5900994	Identifier	path		5900806	1					
ANR	5900995	IfStatement	if ( ( op = log_head ( log ) ) < 0 )		5900806	8					
ANR	5900996	Condition	( op = log_head ( log ) ) < 0	848:8:35749:35772	5900806	0	True				
ANR	5900997	RelationalExpression	( op = log_head ( log ) ) < 0		5900806	0		<			
ANR	5900998	AssignmentExpression	op = log_head ( log )		5900806	0		=			
ANR	5900999	Identifier	op		5900806	0					
ANR	5901000	CallExpression	log_head ( log )		5900806	1					
ANR	5901001	Callee	log_head		5900806	0					
ANR	5901002	Identifier	log_head		5900806	0					
ANR	5901003	ArgumentList	log		5900806	1					
ANR	5901004	Argument	log		5900806	0					
ANR	5901005	Identifier	log		5900806	0					
ANR	5901006	PrimaryExpression	0		5900806	1					
ANR	5901007	CompoundStatement		35:34:991:991	5900806	1					
ANR	5901008	ExpressionStatement	log_close ( log )	849:8:35785:35799	5900806	0	True				
ANR	5901009	CallExpression	log_close ( log )		5900806	0					
ANR	5901010	Callee	log_close		5900806	0					
ANR	5901011	Identifier	log_close		5900806	0					
ANR	5901012	ArgumentList	log		5900806	1					
ANR	5901013	Argument	log		5900806	0					
ANR	5901014	Identifier	log		5900806	0					
ANR	5901015	ReturnStatement	return - 1 ;	850:8:35809:35818	5900806	1	True				
ANR	5901016	UnaryOperationExpression	- 1		5900806	0					
ANR	5901017	UnaryOperator	-		5900806	0					
ANR	5901018	PrimaryExpression	1		5900806	1					
ANR	5901019	IfStatement	"if ( op != NO_OP && log_recover ( log , op ) )"		5900806	9					
ANR	5901020	Condition	"op != NO_OP && log_recover ( log , op )"	854:8:35894:35928	5900806	0	True				
ANR	5901021	AndExpression	"op != NO_OP && log_recover ( log , op )"		5900806	0		&&			
ANR	5901022	EqualityExpression	op != NO_OP		5900806	0		!=			
ANR	5901023	Identifier	op		5900806	0					
ANR	5901024	Identifier	NO_OP		5900806	1					
ANR	5901025	CallExpression	"log_recover ( log , op )"		5900806	1					
ANR	5901026	Callee	log_recover		5900806	0					
ANR	5901027	Identifier	log_recover		5900806	0					
ANR	5901028	ArgumentList	log		5900806	1					
ANR	5901029	Argument	log		5900806	0					
ANR	5901030	Identifier	log		5900806	0					
ANR	5901031	Argument	op		5900806	1					
ANR	5901032	Identifier	op		5900806	0					
ANR	5901033	CompoundStatement		41:45:1147:1147	5900806	1					
ANR	5901034	ExpressionStatement	log_close ( log )	855:8:35941:35955	5900806	0	True				
ANR	5901035	CallExpression	log_close ( log )		5900806	0					
ANR	5901036	Callee	log_close		5900806	0					
ANR	5901037	Identifier	log_close		5900806	0					
ANR	5901038	ArgumentList	log		5900806	1					
ANR	5901039	Argument	log		5900806	0					
ANR	5901040	Identifier	log		5900806	0					
ANR	5901041	ReturnStatement	return - 1 ;	856:8:35965:35974	5900806	1	True				
ANR	5901042	UnaryOperationExpression	- 1		5900806	0					
ANR	5901043	UnaryOperator	-		5900806	0					
ANR	5901044	PrimaryExpression	1		5900806	1					
ANR	5901045	ExpressionStatement	log_touch ( log )	860:4:36061:36075	5900806	10	True				
ANR	5901046	CallExpression	log_touch ( log )		5900806	0					
ANR	5901047	Callee	log_touch		5900806	0					
ANR	5901048	Identifier	log_touch		5900806	0					
ANR	5901049	ArgumentList	log		5900806	1					
ANR	5901050	Argument	log		5900806	0					
ANR	5901051	Identifier	log		5900806	0					
ANR	5901052	ReturnStatement	return 0 ;	861:4:36081:36089	5900806	11	True				
ANR	5901053	PrimaryExpression	0		5900806	0					
ANR	5901054	ReturnType	local int		5900806	1					
ANR	5901055	Identifier	log_open		5900806	2					
ANR	5901056	ParameterList	struct log * log		5900806	3					
ANR	5901057	Parameter	struct log * log	813:19:34766:34780	5900806	0	True				
ANR	5901058	ParameterType	struct log *		5900806	0					
ANR	5901059	Identifier	log		5900806	1					
ANR	5901060	CFGEntryNode	ENTRY		5900806		True				
ANR	5901061	CFGExitNode	EXIT		5900806		True				
ANR	5901062	Symbol	op		5900806						
ANR	5901063	Symbol	HEAD		5900806						
ANR	5901064	Symbol	lseek		5900806						
ANR	5901065	Symbol	log -> fd		5900806						
ANR	5901066	Symbol	log -> end		5900806						
ANR	5901067	Symbol	log		5900806						
ANR	5901068	Symbol	log_lock		5900806						
ANR	5901069	Symbol	log -> path		5900806						
ANR	5901070	Symbol	EXTRA		5900806						
ANR	5901071	Symbol	O_CREAT		5900806						
ANR	5901072	Symbol	log_gzbody		5900806						
ANR	5901073	Symbol	* log		5900806						
ANR	5901074	Symbol	SEEK_END		5900806						
ANR	5901075	Symbol	NO_OP		5900806						
ANR	5901076	Symbol	log_gzext		5900806						
ANR	5901077	Symbol	O_RDWR		5900806						
ANR	5901078	Symbol	log_gzhead		5900806						
ANR	5901079	Symbol	log_head		5900806						
ANR	5901080	Symbol	log_recover		5900806						
ANR	5901081	Symbol	BODY		5900806						
ANR	5901082	Symbol	write		5900806						
ANR	5901083	Symbol	open		5900806						
ANR	5901084	Function	gzlog_open	865:0:36162:37035							
ANR	5901085	FunctionDef	gzlog_open (char * path)		5901084	0					
ANR	5901086	CompoundStatement		866:0:36192:37035	5901084	0					
ANR	5901087	IdentifierDeclStatement	size_t n ;	867:4:36198:36206	5901084	0	True				
ANR	5901088	IdentifierDecl	n		5901084	0					
ANR	5901089	IdentifierDeclType	size_t		5901084	0					
ANR	5901090	Identifier	n		5901084	1					
ANR	5901091	IdentifierDeclStatement	struct log * log ;	868:4:36212:36227	5901084	1	True				
ANR	5901092	IdentifierDecl	* log		5901084	0					
ANR	5901093	IdentifierDeclType	struct log *		5901084	0					
ANR	5901094	Identifier	log		5901084	1					
ANR	5901095	IfStatement	if ( path == NULL || * path == 0 )		5901084	2					
ANR	5901096	Condition	path == NULL || * path == 0	871:8:36264:36289	5901084	0	True				
ANR	5901097	OrExpression	path == NULL || * path == 0		5901084	0		||			
ANR	5901098	EqualityExpression	path == NULL		5901084	0		==			
ANR	5901099	Identifier	path		5901084	0					
ANR	5901100	Identifier	NULL		5901084	1					
ANR	5901101	EqualityExpression	* path == 0		5901084	1		==			
ANR	5901102	UnaryOperationExpression	* path		5901084	0					
ANR	5901103	UnaryOperator	*		5901084	0					
ANR	5901104	Identifier	path		5901084	1					
ANR	5901105	PrimaryExpression	0		5901084	1					
ANR	5901106	ReturnStatement	return NULL ;	872:8:36300:36311	5901084	1	True				
ANR	5901107	Identifier	NULL		5901084	0					
ANR	5901108	ExpressionStatement	log = malloc ( sizeof ( struct log ) )	875:4:36366:36398	5901084	3	True				
ANR	5901109	AssignmentExpression	log = malloc ( sizeof ( struct log ) )		5901084	0		=			
ANR	5901110	Identifier	log		5901084	0					
ANR	5901111	CallExpression	malloc ( sizeof ( struct log ) )		5901084	1					
ANR	5901112	Callee	malloc		5901084	0					
ANR	5901113	Identifier	malloc		5901084	0					
ANR	5901114	ArgumentList	sizeof ( struct log )		5901084	1					
ANR	5901115	Argument	sizeof ( struct log )		5901084	0					
ANR	5901116	SizeofExpression	sizeof ( struct log )		5901084	0					
ANR	5901117	Sizeof	sizeof		5901084	0					
ANR	5901118	SizeofOperand	struct log		5901084	1					
ANR	5901119	IfStatement	if ( log == NULL )		5901084	4					
ANR	5901120	Condition	log == NULL	876:8:36408:36418	5901084	0	True				
ANR	5901121	EqualityExpression	log == NULL		5901084	0		==			
ANR	5901122	Identifier	log		5901084	0					
ANR	5901123	Identifier	NULL		5901084	1					
ANR	5901124	ReturnStatement	return NULL ;	877:8:36429:36440	5901084	1	True				
ANR	5901125	Identifier	NULL		5901084	0					
ANR	5901126	ExpressionStatement	"strcpy ( log -> id , LOGID )"	878:4:36446:36468	5901084	5	True				
ANR	5901127	CallExpression	"strcpy ( log -> id , LOGID )"		5901084	0					
ANR	5901128	Callee	strcpy		5901084	0					
ANR	5901129	Identifier	strcpy		5901084	0					
ANR	5901130	ArgumentList	log -> id		5901084	1					
ANR	5901131	Argument	log -> id		5901084	0					
ANR	5901132	PtrMemberAccess	log -> id		5901084	0					
ANR	5901133	Identifier	log		5901084	0					
ANR	5901134	Identifier	id		5901084	1					
ANR	5901135	Argument	LOGID		5901084	1					
ANR	5901136	Identifier	LOGID		5901084	0					
ANR	5901137	ExpressionStatement	log -> fd = - 1	879:4:36474:36486	5901084	6	True				
ANR	5901138	AssignmentExpression	log -> fd = - 1		5901084	0		=			
ANR	5901139	PtrMemberAccess	log -> fd		5901084	0					
ANR	5901140	Identifier	log		5901084	0					
ANR	5901141	Identifier	fd		5901084	1					
ANR	5901142	UnaryOperationExpression	- 1		5901084	1					
ANR	5901143	UnaryOperator	-		5901084	0					
ANR	5901144	PrimaryExpression	1		5901084	1					
ANR	5901145	ExpressionStatement	n = strlen ( path )	882:4:36551:36567	5901084	7	True				
ANR	5901146	AssignmentExpression	n = strlen ( path )		5901084	0		=			
ANR	5901147	Identifier	n		5901084	0					
ANR	5901148	CallExpression	strlen ( path )		5901084	1					
ANR	5901149	Callee	strlen		5901084	0					
ANR	5901150	Identifier	strlen		5901084	0					
ANR	5901151	ArgumentList	path		5901084	1					
ANR	5901152	Argument	path		5901084	0					
ANR	5901153	Identifier	path		5901084	0					
ANR	5901154	ExpressionStatement	log -> path = malloc ( n + 9 )	883:4:36573:36598	5901084	8	True				
ANR	5901155	AssignmentExpression	log -> path = malloc ( n + 9 )		5901084	0		=			
ANR	5901156	PtrMemberAccess	log -> path		5901084	0					
ANR	5901157	Identifier	log		5901084	0					
ANR	5901158	Identifier	path		5901084	1					
ANR	5901159	CallExpression	malloc ( n + 9 )		5901084	1					
ANR	5901160	Callee	malloc		5901084	0					
ANR	5901161	Identifier	malloc		5901084	0					
ANR	5901162	ArgumentList	n + 9		5901084	1					
ANR	5901163	Argument	n + 9		5901084	0					
ANR	5901164	AdditiveExpression	n + 9		5901084	0		+			
ANR	5901165	Identifier	n		5901084	0					
ANR	5901166	PrimaryExpression	9		5901084	1					
ANR	5901167	IfStatement	if ( log -> path == NULL )		5901084	9					
ANR	5901168	Condition	log -> path == NULL	884:8:36648:36664	5901084	0	True				
ANR	5901169	EqualityExpression	log -> path == NULL		5901084	0		==			
ANR	5901170	PtrMemberAccess	log -> path		5901084	0					
ANR	5901171	Identifier	log		5901084	0					
ANR	5901172	Identifier	path		5901084	1					
ANR	5901173	Identifier	NULL		5901084	1					
ANR	5901174	CompoundStatement		19:27:474:474	5901084	1					
ANR	5901175	ExpressionStatement	free ( log )	885:8:36677:36686	5901084	0	True				
ANR	5901176	CallExpression	free ( log )		5901084	0					
ANR	5901177	Callee	free		5901084	0					
ANR	5901178	Identifier	free		5901084	0					
ANR	5901179	ArgumentList	log		5901084	1					
ANR	5901180	Argument	log		5901084	0					
ANR	5901181	Identifier	log		5901084	0					
ANR	5901182	ReturnStatement	return NULL ;	886:8:36696:36707	5901084	1	True				
ANR	5901183	Identifier	NULL		5901084	0					
ANR	5901184	ExpressionStatement	"strcpy ( log -> path , path )"	888:4:36719:36742	5901084	10	True				
ANR	5901185	CallExpression	"strcpy ( log -> path , path )"		5901084	0					
ANR	5901186	Callee	strcpy		5901084	0					
ANR	5901187	Identifier	strcpy		5901084	0					
ANR	5901188	ArgumentList	log -> path		5901084	1					
ANR	5901189	Argument	log -> path		5901084	0					
ANR	5901190	PtrMemberAccess	log -> path		5901084	0					
ANR	5901191	Identifier	log		5901084	0					
ANR	5901192	Identifier	path		5901084	1					
ANR	5901193	Argument	path		5901084	1					
ANR	5901194	Identifier	path		5901084	0					
ANR	5901195	ExpressionStatement	log -> end = log -> path + n	889:4:36748:36772	5901084	11	True				
ANR	5901196	AssignmentExpression	log -> end = log -> path + n		5901084	0		=			
ANR	5901197	PtrMemberAccess	log -> end		5901084	0					
ANR	5901198	Identifier	log		5901084	0					
ANR	5901199	Identifier	end		5901084	1					
ANR	5901200	AdditiveExpression	log -> path + n		5901084	1		+			
ANR	5901201	PtrMemberAccess	log -> path		5901084	0					
ANR	5901202	Identifier	log		5901084	0					
ANR	5901203	Identifier	path		5901084	1					
ANR	5901204	Identifier	n		5901084	1					
ANR	5901205	IfStatement	if ( log_open ( log ) )		5901084	12					
ANR	5901206	Condition	log_open ( log )	893:8:36888:36900	5901084	0	True				
ANR	5901207	CallExpression	log_open ( log )		5901084	0					
ANR	5901208	Callee	log_open		5901084	0					
ANR	5901209	Identifier	log_open		5901084	0					
ANR	5901210	ArgumentList	log		5901084	1					
ANR	5901211	Argument	log		5901084	0					
ANR	5901212	Identifier	log		5901084	0					
ANR	5901213	CompoundStatement		28:23:710:710	5901084	1					
ANR	5901214	ExpressionStatement	free ( log -> path )	894:8:36913:36928	5901084	0	True				
ANR	5901215	CallExpression	free ( log -> path )		5901084	0					
ANR	5901216	Callee	free		5901084	0					
ANR	5901217	Identifier	free		5901084	0					
ANR	5901218	ArgumentList	log -> path		5901084	1					
ANR	5901219	Argument	log -> path		5901084	0					
ANR	5901220	PtrMemberAccess	log -> path		5901084	0					
ANR	5901221	Identifier	log		5901084	0					
ANR	5901222	Identifier	path		5901084	1					
ANR	5901223	ExpressionStatement	free ( log )	895:8:36938:36947	5901084	1	True				
ANR	5901224	CallExpression	free ( log )		5901084	0					
ANR	5901225	Callee	free		5901084	0					
ANR	5901226	Identifier	free		5901084	0					
ANR	5901227	ArgumentList	log		5901084	1					
ANR	5901228	Argument	log		5901084	0					
ANR	5901229	Identifier	log		5901084	0					
ANR	5901230	ReturnStatement	return NULL ;	896:8:36957:36968	5901084	2	True				
ANR	5901231	Identifier	NULL		5901084	0					
ANR	5901232	ReturnStatement	return log ;	900:4:37023:37033	5901084	13	True				
ANR	5901233	Identifier	log		5901084	0					
ANR	5901234	ReturnType	gzlog *		5901084	1					
ANR	5901235	Identifier	gzlog_open		5901084	2					
ANR	5901236	ParameterList	char * path		5901084	3					
ANR	5901237	Parameter	char * path	865:18:36180:36189	5901084	0	True				
ANR	5901238	ParameterType	char *		5901084	0					
ANR	5901239	Identifier	path		5901084	1					
ANR	5901240	CFGEntryNode	ENTRY		5901084		True				
ANR	5901241	CFGExitNode	EXIT		5901084		True				
ANR	5901242	Symbol	malloc		5901084						
ANR	5901243	Symbol	log_open		5901084						
ANR	5901244	Symbol	NULL		5901084						
ANR	5901245	Symbol	log -> fd		5901084						
ANR	5901246	Symbol	log -> end		5901084						
ANR	5901247	Symbol	log		5901084						
ANR	5901248	Symbol	log -> path		5901084						
ANR	5901249	Symbol	LOGID		5901084						
ANR	5901250	Symbol	n		5901084						
ANR	5901251	Symbol	* log		5901084						
ANR	5901252	Symbol	path		5901084						
ANR	5901253	Symbol	strlen		5901084						
ANR	5901254	Symbol	* path		5901084						
ANR	5901255	Symbol	log -> id		5901084						
ANR	5901256	Function	gzlog_compress	908:0:37206:39677							
ANR	5901257	FunctionDef	gzlog_compress (gzlog * logd)		5901256	0					
ANR	5901258	CompoundStatement		909:0:37238:39677	5901256	0					
ANR	5901259	IdentifierDeclStatement	"int fd , ret ;"	910:4:37244:37255	5901256	0	True				
ANR	5901260	IdentifierDecl	fd		5901256	0					
ANR	5901261	IdentifierDeclType	int		5901256	0					
ANR	5901262	Identifier	fd		5901256	1					
ANR	5901263	IdentifierDecl	ret		5901256	1					
ANR	5901264	IdentifierDeclType	int		5901256	0					
ANR	5901265	Identifier	ret		5901256	1					
ANR	5901266	IdentifierDeclStatement	uint block ;	911:4:37261:37271	5901256	1	True				
ANR	5901267	IdentifierDecl	block		5901256	0					
ANR	5901268	IdentifierDeclType	uint		5901256	0					
ANR	5901269	Identifier	block		5901256	1					
ANR	5901270	IdentifierDeclStatement	"size_t len , next ;"	912:4:37277:37293	5901256	2	True				
ANR	5901271	IdentifierDecl	len		5901256	0					
ANR	5901272	IdentifierDeclType	size_t		5901256	0					
ANR	5901273	Identifier	len		5901256	1					
ANR	5901274	IdentifierDecl	next		5901256	1					
ANR	5901275	IdentifierDeclType	size_t		5901256	0					
ANR	5901276	Identifier	next		5901256	1					
ANR	5901277	IdentifierDeclStatement	"unsigned char * data , buf [ 5 ] ;"	913:4:37299:37326	5901256	3	True				
ANR	5901278	IdentifierDecl	* data		5901256	0					
ANR	5901279	IdentifierDeclType	unsigned char *		5901256	0					
ANR	5901280	Identifier	data		5901256	1					
ANR	5901281	IdentifierDecl	buf [ 5 ]		5901256	1					
ANR	5901282	IdentifierDeclType	unsigned char [ 5 ]		5901256	0					
ANR	5901283	Identifier	buf		5901256	1					
ANR	5901284	PrimaryExpression	5		5901256	2					
ANR	5901285	IdentifierDeclStatement	struct log * log = logd ;	914:4:37332:37354	5901256	4	True				
ANR	5901286	IdentifierDecl	* log = logd		5901256	0					
ANR	5901287	IdentifierDeclType	struct log *		5901256	0					
ANR	5901288	Identifier	log		5901256	1					
ANR	5901289	AssignmentExpression	* log = logd		5901256	2		=			
ANR	5901290	Identifier	logd		5901256	0					
ANR	5901291	Identifier	logd		5901256	1					
ANR	5901292	IfStatement	"if ( log == NULL || strcmp ( log -> id , LOGID ) )"		5901256	5					
ANR	5901293	Condition	"log == NULL || strcmp ( log -> id , LOGID )"	917:8:37391:37427	5901256	0	True				
ANR	5901294	OrExpression	"log == NULL || strcmp ( log -> id , LOGID )"		5901256	0		||			
ANR	5901295	EqualityExpression	log == NULL		5901256	0		==			
ANR	5901296	Identifier	log		5901256	0					
ANR	5901297	Identifier	NULL		5901256	1					
ANR	5901298	CallExpression	"strcmp ( log -> id , LOGID )"		5901256	1					
ANR	5901299	Callee	strcmp		5901256	0					
ANR	5901300	Identifier	strcmp		5901256	0					
ANR	5901301	ArgumentList	log -> id		5901256	1					
ANR	5901302	Argument	log -> id		5901256	0					
ANR	5901303	PtrMemberAccess	log -> id		5901256	0					
ANR	5901304	Identifier	log		5901256	0					
ANR	5901305	Identifier	id		5901256	1					
ANR	5901306	Argument	LOGID		5901256	1					
ANR	5901307	Identifier	LOGID		5901256	0					
ANR	5901308	ReturnStatement	return - 3 ;	918:8:37438:37447	5901256	1	True				
ANR	5901309	UnaryOperationExpression	- 3		5901256	0					
ANR	5901310	UnaryOperator	-		5901256	0					
ANR	5901311	PrimaryExpression	3		5901256	1					
ANR	5901312	IfStatement	if ( log_check ( log ) && log_open ( log ) )		5901256	6					
ANR	5901313	Condition	log_check ( log ) && log_open ( log )	923:8:37626:37656	5901256	0	True				
ANR	5901314	AndExpression	log_check ( log ) && log_open ( log )		5901256	0		&&			
ANR	5901315	CallExpression	log_check ( log )		5901256	0					
ANR	5901316	Callee	log_check		5901256	0					
ANR	5901317	Identifier	log_check		5901256	0					
ANR	5901318	ArgumentList	log		5901256	1					
ANR	5901319	Argument	log		5901256	0					
ANR	5901320	Identifier	log		5901256	0					
ANR	5901321	CallExpression	log_open ( log )		5901256	1					
ANR	5901322	Callee	log_open		5901256	0					
ANR	5901323	Identifier	log_open		5901256	0					
ANR	5901324	ArgumentList	log		5901256	1					
ANR	5901325	Argument	log		5901256	0					
ANR	5901326	Identifier	log		5901256	0					
ANR	5901327	ReturnStatement	return - 1 ;	924:8:37667:37676	5901256	1	True				
ANR	5901328	UnaryOperationExpression	- 1		5901256	0					
ANR	5901329	UnaryOperator	-		5901256	0					
ANR	5901330	PrimaryExpression	1		5901256	1					
ANR	5901331	ExpressionStatement	len = ( ( size_t ) ( log -> last - log -> first ) & ~ ( ( ( size_t ) 1 << 10 ) - 1 ) ) + log -> stored	927:4:37728:37819	5901256	7	True				
ANR	5901332	AssignmentExpression	len = ( ( size_t ) ( log -> last - log -> first ) & ~ ( ( ( size_t ) 1 << 10 ) - 1 ) ) + log -> stored		5901256	0		=			
ANR	5901333	Identifier	len		5901256	0					
ANR	5901334	AdditiveExpression	( ( size_t ) ( log -> last - log -> first ) & ~ ( ( ( size_t ) 1 << 10 ) - 1 ) ) + log -> stored		5901256	1		+			
ANR	5901335	BitAndExpression	( size_t ) ( log -> last - log -> first ) & ~ ( ( ( size_t ) 1 << 10 ) - 1 )		5901256	0		&			
ANR	5901336	CastExpression	( size_t ) ( log -> last - log -> first )		5901256	0					
ANR	5901337	CastTarget	size_t		5901256	0					
ANR	5901338	AdditiveExpression	log -> last - log -> first		5901256	1		-			
ANR	5901339	PtrMemberAccess	log -> last		5901256	0					
ANR	5901340	Identifier	log		5901256	0					
ANR	5901341	Identifier	last		5901256	1					
ANR	5901342	PtrMemberAccess	log -> first		5901256	1					
ANR	5901343	Identifier	log		5901256	0					
ANR	5901344	Identifier	first		5901256	1					
ANR	5901345	UnaryOperationExpression	~ ( ( ( size_t ) 1 << 10 ) - 1 )		5901256	1					
ANR	5901346	UnaryOperator	~		5901256	0					
ANR	5901347	AdditiveExpression	( ( size_t ) 1 << 10 ) - 1		5901256	1		-			
ANR	5901348	ShiftExpression	( size_t ) 1 << 10		5901256	0		<<			
ANR	5901349	CastExpression	( size_t ) 1		5901256	0					
ANR	5901350	CastTarget	size_t		5901256	0					
ANR	5901351	PrimaryExpression	1		5901256	1					
ANR	5901352	PrimaryExpression	10		5901256	1					
ANR	5901353	PrimaryExpression	1		5901256	1					
ANR	5901354	PtrMemberAccess	log -> stored		5901256	1					
ANR	5901355	Identifier	log		5901256	0					
ANR	5901356	Identifier	stored		5901256	1					
ANR	5901357	IfStatement	if ( ( data = malloc ( len ) ) == NULL )		5901256	8					
ANR	5901358	Condition	( data = malloc ( len ) ) == NULL	929:8:37829:37856	5901256	0	True				
ANR	5901359	EqualityExpression	( data = malloc ( len ) ) == NULL		5901256	0		==			
ANR	5901360	AssignmentExpression	data = malloc ( len )		5901256	0		=			
ANR	5901361	Identifier	data		5901256	0					
ANR	5901362	CallExpression	malloc ( len )		5901256	1					
ANR	5901363	Callee	malloc		5901256	0					
ANR	5901364	Identifier	malloc		5901256	0					
ANR	5901365	ArgumentList	len		5901256	1					
ANR	5901366	Argument	len		5901256	0					
ANR	5901367	Identifier	len		5901256	0					
ANR	5901368	Identifier	NULL		5901256	1					
ANR	5901369	ReturnStatement	return - 2 ;	930:8:37867:37876	5901256	1	True				
ANR	5901370	UnaryOperationExpression	- 2		5901256	0					
ANR	5901371	UnaryOperator	-		5901256	0					
ANR	5901372	PrimaryExpression	2		5901256	1					
ANR	5901373	DoStatement	do		5901256	9					
ANR	5901374	CompoundStatement		25:7:716:716	5901256	0					
ANR	5901375	IfStatement	"if ( lseek ( log -> fd , log -> first - 1 , SEEK_SET ) < 0 )"		5901256	0					
ANR	5901376	Condition	"lseek ( log -> fd , log -> first - 1 , SEEK_SET ) < 0"	935:12:38013:38056	5901256	0	True				
ANR	5901377	RelationalExpression	"lseek ( log -> fd , log -> first - 1 , SEEK_SET ) < 0"		5901256	0		<			
ANR	5901378	CallExpression	"lseek ( log -> fd , log -> first - 1 , SEEK_SET )"		5901256	0					
ANR	5901379	Callee	lseek		5901256	0					
ANR	5901380	Identifier	lseek		5901256	0					
ANR	5901381	ArgumentList	log -> fd		5901256	1					
ANR	5901382	Argument	log -> fd		5901256	0					
ANR	5901383	PtrMemberAccess	log -> fd		5901256	0					
ANR	5901384	Identifier	log		5901256	0					
ANR	5901385	Identifier	fd		5901256	1					
ANR	5901386	Argument	log -> first - 1		5901256	1					
ANR	5901387	AdditiveExpression	log -> first - 1		5901256	0		-			
ANR	5901388	PtrMemberAccess	log -> first		5901256	0					
ANR	5901389	Identifier	log		5901256	0					
ANR	5901390	Identifier	first		5901256	1					
ANR	5901391	PrimaryExpression	1		5901256	1					
ANR	5901392	Argument	SEEK_SET		5901256	2					
ANR	5901393	Identifier	SEEK_SET		5901256	0					
ANR	5901394	PrimaryExpression	0		5901256	1					
ANR	5901395	BreakStatement	break ;	936:12:38071:38076	5901256	1	True				
ANR	5901396	ExpressionStatement	next = 0	937:8:38086:38094	5901256	1	True				
ANR	5901397	AssignmentExpression	next = 0		5901256	0		=			
ANR	5901398	Identifier	next		5901256	0					
ANR	5901399	PrimaryExpression	0		5901256	1					
ANR	5901400	WhileStatement	while ( next < len )		5901256	2					
ANR	5901401	Condition	next < len	938:15:38111:38120	5901256	0	True				
ANR	5901402	RelationalExpression	next < len		5901256	0		<			
ANR	5901403	Identifier	next		5901256	0					
ANR	5901404	Identifier	len		5901256	1					
ANR	5901405	CompoundStatement		30:27:884:884	5901256	1					
ANR	5901406	IfStatement	"if ( read ( log -> fd , buf , 5 ) != 5 )"		5901256	0					
ANR	5901407	Condition	"read ( log -> fd , buf , 5 ) != 5"	939:16:38141:38166	5901256	0	True				
ANR	5901408	EqualityExpression	"read ( log -> fd , buf , 5 ) != 5"		5901256	0		!=			
ANR	5901409	CallExpression	"read ( log -> fd , buf , 5 )"		5901256	0					
ANR	5901410	Callee	read		5901256	0					
ANR	5901411	Identifier	read		5901256	0					
ANR	5901412	ArgumentList	log -> fd		5901256	1					
ANR	5901413	Argument	log -> fd		5901256	0					
ANR	5901414	PtrMemberAccess	log -> fd		5901256	0					
ANR	5901415	Identifier	log		5901256	0					
ANR	5901416	Identifier	fd		5901256	1					
ANR	5901417	Argument	buf		5901256	1					
ANR	5901418	Identifier	buf		5901256	0					
ANR	5901419	Argument	5		5901256	2					
ANR	5901420	PrimaryExpression	5		5901256	0					
ANR	5901421	PrimaryExpression	5		5901256	1					
ANR	5901422	BreakStatement	break ;	940:16:38185:38190	5901256	1	True				
ANR	5901423	ExpressionStatement	block = PULL2 ( buf + 1 )	941:12:38204:38226	5901256	1	True				
ANR	5901424	AssignmentExpression	block = PULL2 ( buf + 1 )		5901256	0		=			
ANR	5901425	Identifier	block		5901256	0					
ANR	5901426	CallExpression	PULL2 ( buf + 1 )		5901256	1					
ANR	5901427	Callee	PULL2		5901256	0					
ANR	5901428	Identifier	PULL2		5901256	0					
ANR	5901429	ArgumentList	buf + 1		5901256	1					
ANR	5901430	Argument	buf + 1		5901256	0					
ANR	5901431	AdditiveExpression	buf + 1		5901256	0		+			
ANR	5901432	Identifier	buf		5901256	0					
ANR	5901433	PrimaryExpression	1		5901256	1					
ANR	5901434	IfStatement	"if ( next + block > len || read ( log -> fd , ( char * ) data + next , block ) != block )"		5901256	2					
ANR	5901435	Condition	"next + block > len || read ( log -> fd , ( char * ) data + next , block ) != block"	942:16:38244:38331	5901256	0	True				
ANR	5901436	OrExpression	"next + block > len || read ( log -> fd , ( char * ) data + next , block ) != block"		5901256	0		||			
ANR	5901437	RelationalExpression	next + block > len		5901256	0		>			
ANR	5901438	AdditiveExpression	next + block		5901256	0		+			
ANR	5901439	Identifier	next		5901256	0					
ANR	5901440	Identifier	block		5901256	1					
ANR	5901441	Identifier	len		5901256	1					
ANR	5901442	EqualityExpression	"read ( log -> fd , ( char * ) data + next , block ) != block"		5901256	1		!=			
ANR	5901443	CallExpression	"read ( log -> fd , ( char * ) data + next , block )"		5901256	0					
ANR	5901444	Callee	read		5901256	0					
ANR	5901445	Identifier	read		5901256	0					
ANR	5901446	ArgumentList	log -> fd		5901256	1					
ANR	5901447	Argument	log -> fd		5901256	0					
ANR	5901448	PtrMemberAccess	log -> fd		5901256	0					
ANR	5901449	Identifier	log		5901256	0					
ANR	5901450	Identifier	fd		5901256	1					
ANR	5901451	Argument	( char * ) data + next		5901256	1					
ANR	5901452	AdditiveExpression	( char * ) data + next		5901256	0		+			
ANR	5901453	CastExpression	( char * ) data		5901256	0					
ANR	5901454	CastTarget	char *		5901256	0					
ANR	5901455	Identifier	data		5901256	1					
ANR	5901456	Identifier	next		5901256	1					
ANR	5901457	Argument	block		5901256	2					
ANR	5901458	Identifier	block		5901256	0					
ANR	5901459	Identifier	block		5901256	1					
ANR	5901460	BreakStatement	break ;	944:16:38350:38355	5901256	1	True				
ANR	5901461	ExpressionStatement	next += block	945:12:38369:38382	5901256	3	True				
ANR	5901462	AssignmentExpression	next += block		5901256	0		+=			
ANR	5901463	Identifier	next		5901256	0					
ANR	5901464	Identifier	block		5901256	1					
ANR	5901465	IfStatement	"if ( lseek ( log -> fd , 0 , SEEK_CUR ) != log -> last + 4 + log -> stored )"		5901256	3					
ANR	5901466	Condition	"lseek ( log -> fd , 0 , SEEK_CUR ) != log -> last + 4 + log -> stored"	947:12:38406:38463	5901256	0	True				
ANR	5901467	EqualityExpression	"lseek ( log -> fd , 0 , SEEK_CUR ) != log -> last + 4 + log -> stored"		5901256	0		!=			
ANR	5901468	CallExpression	"lseek ( log -> fd , 0 , SEEK_CUR )"		5901256	0					
ANR	5901469	Callee	lseek		5901256	0					
ANR	5901470	Identifier	lseek		5901256	0					
ANR	5901471	ArgumentList	log -> fd		5901256	1					
ANR	5901472	Argument	log -> fd		5901256	0					
ANR	5901473	PtrMemberAccess	log -> fd		5901256	0					
ANR	5901474	Identifier	log		5901256	0					
ANR	5901475	Identifier	fd		5901256	1					
ANR	5901476	Argument	0		5901256	1					
ANR	5901477	PrimaryExpression	0		5901256	0					
ANR	5901478	Argument	SEEK_CUR		5901256	2					
ANR	5901479	Identifier	SEEK_CUR		5901256	0					
ANR	5901480	AdditiveExpression	log -> last + 4 + log -> stored		5901256	1		+			
ANR	5901481	PtrMemberAccess	log -> last		5901256	0					
ANR	5901482	Identifier	log		5901256	0					
ANR	5901483	Identifier	last		5901256	1					
ANR	5901484	AdditiveExpression	4 + log -> stored		5901256	1		+			
ANR	5901485	PrimaryExpression	4		5901256	0					
ANR	5901486	PtrMemberAccess	log -> stored		5901256	1					
ANR	5901487	Identifier	log		5901256	0					
ANR	5901488	Identifier	stored		5901256	1					
ANR	5901489	BreakStatement	break ;	948:12:38478:38483	5901256	1	True				
ANR	5901490	ExpressionStatement	log_touch ( log )	949:8:38493:38507	5901256	4	True				
ANR	5901491	CallExpression	log_touch ( log )		5901256	0					
ANR	5901492	Callee	log_touch		5901256	0					
ANR	5901493	Identifier	log_touch		5901256	0					
ANR	5901494	ArgumentList	log		5901256	1					
ANR	5901495	Argument	log		5901256	0					
ANR	5901496	Identifier	log		5901256	0					
ANR	5901497	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	952:8:38577:38601	5901256	5	True				
ANR	5901498	CallExpression	"strcpy ( log -> end , "".add"" )"		5901256	0					
ANR	5901499	Callee	strcpy		5901256	0					
ANR	5901500	Identifier	strcpy		5901256	0					
ANR	5901501	ArgumentList	log -> end		5901256	1					
ANR	5901502	Argument	log -> end		5901256	0					
ANR	5901503	PtrMemberAccess	log -> end		5901256	0					
ANR	5901504	Identifier	log		5901256	0					
ANR	5901505	Identifier	end		5901256	1					
ANR	5901506	Argument	""".add"""		5901256	1					
ANR	5901507	PrimaryExpression	""".add"""		5901256	0					
ANR	5901508	ExpressionStatement	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"	953:8:38611:38667	5901256	6	True				
ANR	5901509	AssignmentExpression	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		5901256	0		=			
ANR	5901510	Identifier	fd		5901256	0					
ANR	5901511	CallExpression	"open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		5901256	1					
ANR	5901512	Callee	open		5901256	0					
ANR	5901513	Identifier	open		5901256	0					
ANR	5901514	ArgumentList	log -> path		5901256	1					
ANR	5901515	Argument	log -> path		5901256	0					
ANR	5901516	PtrMemberAccess	log -> path		5901256	0					
ANR	5901517	Identifier	log		5901256	0					
ANR	5901518	Identifier	path		5901256	1					
ANR	5901519	Argument	O_WRONLY | O_CREAT | O_TRUNC		5901256	1					
ANR	5901520	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		5901256	0		|			
ANR	5901521	Identifier	O_WRONLY		5901256	0					
ANR	5901522	InclusiveOrExpression	O_CREAT | O_TRUNC		5901256	1		|			
ANR	5901523	Identifier	O_CREAT		5901256	0					
ANR	5901524	Identifier	O_TRUNC		5901256	1					
ANR	5901525	Argument	0644		5901256	2					
ANR	5901526	PrimaryExpression	0644		5901256	0					
ANR	5901527	IfStatement	if ( fd < 0 )		5901256	7					
ANR	5901528	Condition	fd < 0	954:12:38681:38686	5901256	0	True				
ANR	5901529	RelationalExpression	fd < 0		5901256	0		<			
ANR	5901530	Identifier	fd		5901256	0					
ANR	5901531	PrimaryExpression	0		5901256	1					
ANR	5901532	BreakStatement	break ;	955:12:38701:38706	5901256	1	True				
ANR	5901533	ExpressionStatement	"ret = ( size_t ) write ( fd , data , len ) != len"	956:8:38716:38757	5901256	8	True				
ANR	5901534	AssignmentExpression	"ret = ( size_t ) write ( fd , data , len ) != len"		5901256	0		=			
ANR	5901535	Identifier	ret		5901256	0					
ANR	5901536	EqualityExpression	"( size_t ) write ( fd , data , len ) != len"		5901256	1		!=			
ANR	5901537	CastExpression	"( size_t ) write ( fd , data , len )"		5901256	0					
ANR	5901538	CastTarget	size_t		5901256	0					
ANR	5901539	CallExpression	"write ( fd , data , len )"		5901256	1					
ANR	5901540	Callee	write		5901256	0					
ANR	5901541	Identifier	write		5901256	0					
ANR	5901542	ArgumentList	fd		5901256	1					
ANR	5901543	Argument	fd		5901256	0					
ANR	5901544	Identifier	fd		5901256	0					
ANR	5901545	Argument	data		5901256	1					
ANR	5901546	Identifier	data		5901256	0					
ANR	5901547	Argument	len		5901256	2					
ANR	5901548	Identifier	len		5901256	0					
ANR	5901549	Identifier	len		5901256	1					
ANR	5901550	IfStatement	if ( ret | close ( fd ) )		5901256	9					
ANR	5901551	Condition	ret | close ( fd )	957:12:38771:38785	5901256	0	True				
ANR	5901552	InclusiveOrExpression	ret | close ( fd )		5901256	0		|			
ANR	5901553	Identifier	ret		5901256	0					
ANR	5901554	CallExpression	close ( fd )		5901256	1					
ANR	5901555	Callee	close		5901256	0					
ANR	5901556	Identifier	close		5901256	0					
ANR	5901557	ArgumentList	fd		5901256	1					
ANR	5901558	Argument	fd		5901256	0					
ANR	5901559	Identifier	fd		5901256	0					
ANR	5901560	BreakStatement	break ;	958:12:38800:38805	5901256	1	True				
ANR	5901561	ExpressionStatement	log_touch ( log )	959:8:38815:38829	5901256	10	True				
ANR	5901562	CallExpression	log_touch ( log )		5901256	0					
ANR	5901563	Callee	log_touch		5901256	0					
ANR	5901564	Identifier	log_touch		5901256	0					
ANR	5901565	ArgumentList	log		5901256	1					
ANR	5901566	Argument	log		5901256	0					
ANR	5901567	Identifier	log		5901256	0					
ANR	5901568	ExpressionStatement	"strcpy ( log -> end , "".temp"" )"	962:8:38915:38940	5901256	11	True				
ANR	5901569	CallExpression	"strcpy ( log -> end , "".temp"" )"		5901256	0					
ANR	5901570	Callee	strcpy		5901256	0					
ANR	5901571	Identifier	strcpy		5901256	0					
ANR	5901572	ArgumentList	log -> end		5901256	1					
ANR	5901573	Argument	log -> end		5901256	0					
ANR	5901574	PtrMemberAccess	log -> end		5901256	0					
ANR	5901575	Identifier	log		5901256	0					
ANR	5901576	Identifier	end		5901256	1					
ANR	5901577	Argument	""".temp"""		5901256	1					
ANR	5901578	PrimaryExpression	""".temp"""		5901256	0					
ANR	5901579	ExpressionStatement	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"	963:8:38950:39006	5901256	12	True				
ANR	5901580	AssignmentExpression	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		5901256	0		=			
ANR	5901581	Identifier	fd		5901256	0					
ANR	5901582	CallExpression	"open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		5901256	1					
ANR	5901583	Callee	open		5901256	0					
ANR	5901584	Identifier	open		5901256	0					
ANR	5901585	ArgumentList	log -> path		5901256	1					
ANR	5901586	Argument	log -> path		5901256	0					
ANR	5901587	PtrMemberAccess	log -> path		5901256	0					
ANR	5901588	Identifier	log		5901256	0					
ANR	5901589	Identifier	path		5901256	1					
ANR	5901590	Argument	O_WRONLY | O_CREAT | O_TRUNC		5901256	1					
ANR	5901591	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		5901256	0		|			
ANR	5901592	Identifier	O_WRONLY		5901256	0					
ANR	5901593	InclusiveOrExpression	O_CREAT | O_TRUNC		5901256	1		|			
ANR	5901594	Identifier	O_CREAT		5901256	0					
ANR	5901595	Identifier	O_TRUNC		5901256	1					
ANR	5901596	Argument	0644		5901256	2					
ANR	5901597	PrimaryExpression	0644		5901256	0					
ANR	5901598	IfStatement	if ( fd < 0 )		5901256	13					
ANR	5901599	Condition	fd < 0	964:12:39020:39025	5901256	0	True				
ANR	5901600	RelationalExpression	fd < 0		5901256	0		<			
ANR	5901601	Identifier	fd		5901256	0					
ANR	5901602	PrimaryExpression	0		5901256	1					
ANR	5901603	BreakStatement	break ;	965:12:39040:39045	5901256	1	True				
ANR	5901604	ExpressionStatement	next = DICT > len ? len : DICT	966:8:39055:39085	5901256	14	True				
ANR	5901605	AssignmentExpression	next = DICT > len ? len : DICT		5901256	0		=			
ANR	5901606	Identifier	next		5901256	0					
ANR	5901607	ConditionalExpression	DICT > len ? len : DICT		5901256	1					
ANR	5901608	Condition	DICT > len		5901256	0					
ANR	5901609	RelationalExpression	DICT > len		5901256	0		>			
ANR	5901610	Identifier	DICT		5901256	0					
ANR	5901611	Identifier	len		5901256	1					
ANR	5901612	Identifier	len		5901256	1					
ANR	5901613	Identifier	DICT		5901256	2					
ANR	5901614	ExpressionStatement	"ret = ( size_t ) write ( fd , ( char * ) data + len - next , next ) != next"	967:8:39095:39159	5901256	15	True				
ANR	5901615	AssignmentExpression	"ret = ( size_t ) write ( fd , ( char * ) data + len - next , next ) != next"		5901256	0		=			
ANR	5901616	Identifier	ret		5901256	0					
ANR	5901617	EqualityExpression	"( size_t ) write ( fd , ( char * ) data + len - next , next ) != next"		5901256	1		!=			
ANR	5901618	CastExpression	"( size_t ) write ( fd , ( char * ) data + len - next , next )"		5901256	0					
ANR	5901619	CastTarget	size_t		5901256	0					
ANR	5901620	CallExpression	"write ( fd , ( char * ) data + len - next , next )"		5901256	1					
ANR	5901621	Callee	write		5901256	0					
ANR	5901622	Identifier	write		5901256	0					
ANR	5901623	ArgumentList	fd		5901256	1					
ANR	5901624	Argument	fd		5901256	0					
ANR	5901625	Identifier	fd		5901256	0					
ANR	5901626	Argument	( char * ) data + len - next		5901256	1					
ANR	5901627	AdditiveExpression	( char * ) data + len - next		5901256	0		+			
ANR	5901628	CastExpression	( char * ) data		5901256	0					
ANR	5901629	CastTarget	char *		5901256	0					
ANR	5901630	Identifier	data		5901256	1					
ANR	5901631	AdditiveExpression	len - next		5901256	1		-			
ANR	5901632	Identifier	len		5901256	0					
ANR	5901633	Identifier	next		5901256	1					
ANR	5901634	Argument	next		5901256	2					
ANR	5901635	Identifier	next		5901256	0					
ANR	5901636	Identifier	next		5901256	1					
ANR	5901637	IfStatement	if ( ret | close ( fd ) )		5901256	16					
ANR	5901638	Condition	ret | close ( fd )	968:12:39173:39187	5901256	0	True				
ANR	5901639	InclusiveOrExpression	ret | close ( fd )		5901256	0		|			
ANR	5901640	Identifier	ret		5901256	0					
ANR	5901641	CallExpression	close ( fd )		5901256	1					
ANR	5901642	Callee	close		5901256	0					
ANR	5901643	Identifier	close		5901256	0					
ANR	5901644	ArgumentList	fd		5901256	1					
ANR	5901645	Argument	fd		5901256	0					
ANR	5901646	Identifier	fd		5901256	0					
ANR	5901647	BreakStatement	break ;	969:12:39202:39207	5901256	1	True				
ANR	5901648	ExpressionStatement	log_touch ( log )	970:8:39217:39231	5901256	17	True				
ANR	5901649	CallExpression	log_touch ( log )		5901256	0					
ANR	5901650	Callee	log_touch		5901256	0					
ANR	5901651	Identifier	log_touch		5901256	0					
ANR	5901652	ArgumentList	log		5901256	1					
ANR	5901653	Argument	log		5901256	0					
ANR	5901654	Identifier	log		5901256	0					
ANR	5901655	ExpressionStatement	log -> last = log -> first	973:8:39316:39338	5901256	18	True				
ANR	5901656	AssignmentExpression	log -> last = log -> first		5901256	0		=			
ANR	5901657	PtrMemberAccess	log -> last		5901256	0					
ANR	5901658	Identifier	log		5901256	0					
ANR	5901659	Identifier	last		5901256	1					
ANR	5901660	PtrMemberAccess	log -> first		5901256	1					
ANR	5901661	Identifier	log		5901256	0					
ANR	5901662	Identifier	first		5901256	1					
ANR	5901663	ExpressionStatement	log -> stored = 0	974:8:39348:39363	5901256	19	True				
ANR	5901664	AssignmentExpression	log -> stored = 0		5901256	0		=			
ANR	5901665	PtrMemberAccess	log -> stored		5901256	0					
ANR	5901666	Identifier	log		5901256	0					
ANR	5901667	Identifier	stored		5901256	1					
ANR	5901668	PrimaryExpression	0		5901256	1					
ANR	5901669	IfStatement	"if ( log_mark ( log , COMPRESS_OP ) )"		5901256	20					
ANR	5901670	Condition	"log_mark ( log , COMPRESS_OP )"	975:12:39377:39402	5901256	0	True				
ANR	5901671	CallExpression	"log_mark ( log , COMPRESS_OP )"		5901256	0					
ANR	5901672	Callee	log_mark		5901256	0					
ANR	5901673	Identifier	log_mark		5901256	0					
ANR	5901674	ArgumentList	log		5901256	1					
ANR	5901675	Argument	log		5901256	0					
ANR	5901676	Identifier	log		5901256	0					
ANR	5901677	Argument	COMPRESS_OP		5901256	1					
ANR	5901678	Identifier	COMPRESS_OP		5901256	0					
ANR	5901679	BreakStatement	break ;	976:12:39417:39422	5901256	1	True				
ANR	5901680	ExpressionStatement	BAIL ( 7 )	977:8:39432:39439	5901256	21	True				
ANR	5901681	CallExpression	BAIL ( 7 )		5901256	0					
ANR	5901682	Callee	BAIL		5901256	0					
ANR	5901683	Identifier	BAIL		5901256	0					
ANR	5901684	ArgumentList	7		5901256	1					
ANR	5901685	Argument	7		5901256	0					
ANR	5901686	PrimaryExpression	7		5901256	0					
ANR	5901687	ExpressionStatement	"ret = log_compress ( log , data , len )"	980:8:39507:39541	5901256	22	True				
ANR	5901688	AssignmentExpression	"ret = log_compress ( log , data , len )"		5901256	0		=			
ANR	5901689	Identifier	ret		5901256	0					
ANR	5901690	CallExpression	"log_compress ( log , data , len )"		5901256	1					
ANR	5901691	Callee	log_compress		5901256	0					
ANR	5901692	Identifier	log_compress		5901256	0					
ANR	5901693	ArgumentList	log		5901256	1					
ANR	5901694	Argument	log		5901256	0					
ANR	5901695	Identifier	log		5901256	0					
ANR	5901696	Argument	data		5901256	1					
ANR	5901697	Identifier	data		5901256	0					
ANR	5901698	Argument	len		5901256	2					
ANR	5901699	Identifier	len		5901256	0					
ANR	5901700	ExpressionStatement	free ( data )	981:8:39551:39561	5901256	23	True				
ANR	5901701	CallExpression	free ( data )		5901256	0					
ANR	5901702	Callee	free		5901256	0					
ANR	5901703	Identifier	free		5901256	0					
ANR	5901704	ArgumentList	data		5901256	1					
ANR	5901705	Argument	data		5901256	0					
ANR	5901706	Identifier	data		5901256	0					
ANR	5901707	ReturnStatement	return ret ;	982:8:39571:39581	5901256	24	True				
ANR	5901708	Identifier	ret		5901256	0					
ANR	5901709	Condition	0	983:13:39596:39596	5901256	1	True				
ANR	5901710	PrimaryExpression	0		5901256	0					
ANR	5901711	ExpressionStatement	free ( data )	986:4:39650:39660	5901256	10	True				
ANR	5901712	CallExpression	free ( data )		5901256	0					
ANR	5901713	Callee	free		5901256	0					
ANR	5901714	Identifier	free		5901256	0					
ANR	5901715	ArgumentList	data		5901256	1					
ANR	5901716	Argument	data		5901256	0					
ANR	5901717	Identifier	data		5901256	0					
ANR	5901718	ReturnStatement	return - 1 ;	987:4:39666:39675	5901256	11	True				
ANR	5901719	UnaryOperationExpression	- 1		5901256	0					
ANR	5901720	UnaryOperator	-		5901256	0					
ANR	5901721	PrimaryExpression	1		5901256	1					
ANR	5901722	ReturnType	int		5901256	1					
ANR	5901723	Identifier	gzlog_compress		5901256	2					
ANR	5901724	ParameterList	gzlog * logd		5901256	3					
ANR	5901725	Parameter	gzlog * logd	908:19:37225:37235	5901256	0	True				
ANR	5901726	ParameterType	gzlog *		5901256	0					
ANR	5901727	Identifier	logd		5901256	1					
ANR	5901728	CFGEntryNode	ENTRY		5901256		True				
ANR	5901729	CFGExitNode	EXIT		5901256		True				
ANR	5901730	Symbol	next		5901256						
ANR	5901731	Symbol	PULL2		5901256						
ANR	5901732	Symbol	lseek		5901256						
ANR	5901733	Symbol	SEEK_CUR		5901256						
ANR	5901734	Symbol	data		5901256						
ANR	5901735	Symbol	log -> end		5901256						
ANR	5901736	Symbol	log		5901256						
ANR	5901737	Symbol	O_CREAT		5901256						
ANR	5901738	Symbol	logd		5901256						
ANR	5901739	Symbol	len		5901256						
ANR	5901740	Symbol	DICT		5901256						
ANR	5901741	Symbol	block		5901256						
ANR	5901742	Symbol	log -> id		5901256						
ANR	5901743	Symbol	write		5901256						
ANR	5901744	Symbol	close		5901256						
ANR	5901745	Symbol	ret		5901256						
ANR	5901746	Symbol	strcmp		5901256						
ANR	5901747	Symbol	SEEK_SET		5901256						
ANR	5901748	Symbol	log_open		5901256						
ANR	5901749	Symbol	malloc		5901256						
ANR	5901750	Symbol	NULL		5901256						
ANR	5901751	Symbol	read		5901256						
ANR	5901752	Symbol	log -> fd		5901256						
ANR	5901753	Symbol	log -> path		5901256						
ANR	5901754	Symbol	log_compress		5901256						
ANR	5901755	Symbol	log -> first		5901256						
ANR	5901756	Symbol	log_mark		5901256						
ANR	5901757	Symbol	LOGID		5901256						
ANR	5901758	Symbol	* log		5901256						
ANR	5901759	Symbol	log_check		5901256						
ANR	5901760	Symbol	COMPRESS_OP		5901256						
ANR	5901761	Symbol	buf		5901256						
ANR	5901762	Symbol	O_TRUNC		5901256						
ANR	5901763	Symbol	log -> last		5901256						
ANR	5901764	Symbol	O_WRONLY		5901256						
ANR	5901765	Symbol	log -> stored		5901256						
ANR	5901766	Symbol	fd		5901256						
ANR	5901767	Symbol	open		5901256						
ANR	5901768	Function	gzlog_write	995:0:39845:41024							
ANR	5901769	FunctionDef	"gzlog_write (gzlog * logd , void * data , size_t len)"		5901768	0					
ANR	5901770	CompoundStatement		996:0:39898:41024	5901768	0					
ANR	5901771	IdentifierDeclStatement	"int fd , ret ;"	997:4:39904:39915	5901768	0	True				
ANR	5901772	IdentifierDecl	fd		5901768	0					
ANR	5901773	IdentifierDeclType	int		5901768	0					
ANR	5901774	Identifier	fd		5901768	1					
ANR	5901775	IdentifierDecl	ret		5901768	1					
ANR	5901776	IdentifierDeclType	int		5901768	0					
ANR	5901777	Identifier	ret		5901768	1					
ANR	5901778	IdentifierDeclStatement	struct log * log = logd ;	998:4:39921:39943	5901768	1	True				
ANR	5901779	IdentifierDecl	* log = logd		5901768	0					
ANR	5901780	IdentifierDeclType	struct log *		5901768	0					
ANR	5901781	Identifier	log		5901768	1					
ANR	5901782	AssignmentExpression	* log = logd		5901768	2		=			
ANR	5901783	Identifier	logd		5901768	0					
ANR	5901784	Identifier	logd		5901768	1					
ANR	5901785	IfStatement	"if ( log == NULL || strcmp ( log -> id , LOGID ) )"		5901768	2					
ANR	5901786	Condition	"log == NULL || strcmp ( log -> id , LOGID )"	1001:8:39980:40016	5901768	0	True				
ANR	5901787	OrExpression	"log == NULL || strcmp ( log -> id , LOGID )"		5901768	0		||			
ANR	5901788	EqualityExpression	log == NULL		5901768	0		==			
ANR	5901789	Identifier	log		5901768	0					
ANR	5901790	Identifier	NULL		5901768	1					
ANR	5901791	CallExpression	"strcmp ( log -> id , LOGID )"		5901768	1					
ANR	5901792	Callee	strcmp		5901768	0					
ANR	5901793	Identifier	strcmp		5901768	0					
ANR	5901794	ArgumentList	log -> id		5901768	1					
ANR	5901795	Argument	log -> id		5901768	0					
ANR	5901796	PtrMemberAccess	log -> id		5901768	0					
ANR	5901797	Identifier	log		5901768	0					
ANR	5901798	Identifier	id		5901768	1					
ANR	5901799	Argument	LOGID		5901768	1					
ANR	5901800	Identifier	LOGID		5901768	0					
ANR	5901801	ReturnStatement	return - 3 ;	1002:8:40027:40036	5901768	1	True				
ANR	5901802	UnaryOperationExpression	- 3		5901768	0					
ANR	5901803	UnaryOperator	-		5901768	0					
ANR	5901804	PrimaryExpression	3		5901768	1					
ANR	5901805	IfStatement	if ( data == NULL || len <= 0 )		5901768	3					
ANR	5901806	Condition	data == NULL || len <= 0	1003:8:40046:40069	5901768	0	True				
ANR	5901807	OrExpression	data == NULL || len <= 0		5901768	0		||			
ANR	5901808	EqualityExpression	data == NULL		5901768	0		==			
ANR	5901809	Identifier	data		5901768	0					
ANR	5901810	Identifier	NULL		5901768	1					
ANR	5901811	RelationalExpression	len <= 0		5901768	1		<=			
ANR	5901812	Identifier	len		5901768	0					
ANR	5901813	PrimaryExpression	0		5901768	1					
ANR	5901814	ReturnStatement	return 0 ;	1004:8:40080:40088	5901768	1	True				
ANR	5901815	PrimaryExpression	0		5901768	0					
ANR	5901816	IfStatement	if ( log_check ( log ) && log_open ( log ) )		5901768	4					
ANR	5901817	Condition	log_check ( log ) && log_open ( log )	1009:8:40267:40297	5901768	0	True				
ANR	5901818	AndExpression	log_check ( log ) && log_open ( log )		5901768	0		&&			
ANR	5901819	CallExpression	log_check ( log )		5901768	0					
ANR	5901820	Callee	log_check		5901768	0					
ANR	5901821	Identifier	log_check		5901768	0					
ANR	5901822	ArgumentList	log		5901768	1					
ANR	5901823	Argument	log		5901768	0					
ANR	5901824	Identifier	log		5901768	0					
ANR	5901825	CallExpression	log_open ( log )		5901768	1					
ANR	5901826	Callee	log_open		5901768	0					
ANR	5901827	Identifier	log_open		5901768	0					
ANR	5901828	ArgumentList	log		5901768	1					
ANR	5901829	Argument	log		5901768	0					
ANR	5901830	Identifier	log		5901768	0					
ANR	5901831	ReturnStatement	return - 1 ;	1010:8:40308:40317	5901768	1	True				
ANR	5901832	UnaryOperationExpression	- 1		5901768	0					
ANR	5901833	UnaryOperator	-		5901768	0					
ANR	5901834	PrimaryExpression	1		5901768	1					
ANR	5901835	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	1013:4:40361:40385	5901768	5	True				
ANR	5901836	CallExpression	"strcpy ( log -> end , "".add"" )"		5901768	0					
ANR	5901837	Callee	strcpy		5901768	0					
ANR	5901838	Identifier	strcpy		5901768	0					
ANR	5901839	ArgumentList	log -> end		5901768	1					
ANR	5901840	Argument	log -> end		5901768	0					
ANR	5901841	PtrMemberAccess	log -> end		5901768	0					
ANR	5901842	Identifier	log		5901768	0					
ANR	5901843	Identifier	end		5901768	1					
ANR	5901844	Argument	""".add"""		5901768	1					
ANR	5901845	PrimaryExpression	""".add"""		5901768	0					
ANR	5901846	ExpressionStatement	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"	1014:4:40391:40447	5901768	6	True				
ANR	5901847	AssignmentExpression	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		5901768	0		=			
ANR	5901848	Identifier	fd		5901768	0					
ANR	5901849	CallExpression	"open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		5901768	1					
ANR	5901850	Callee	open		5901768	0					
ANR	5901851	Identifier	open		5901768	0					
ANR	5901852	ArgumentList	log -> path		5901768	1					
ANR	5901853	Argument	log -> path		5901768	0					
ANR	5901854	PtrMemberAccess	log -> path		5901768	0					
ANR	5901855	Identifier	log		5901768	0					
ANR	5901856	Identifier	path		5901768	1					
ANR	5901857	Argument	O_WRONLY | O_CREAT | O_TRUNC		5901768	1					
ANR	5901858	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		5901768	0		|			
ANR	5901859	Identifier	O_WRONLY		5901768	0					
ANR	5901860	InclusiveOrExpression	O_CREAT | O_TRUNC		5901768	1		|			
ANR	5901861	Identifier	O_CREAT		5901768	0					
ANR	5901862	Identifier	O_TRUNC		5901768	1					
ANR	5901863	Argument	0644		5901768	2					
ANR	5901864	PrimaryExpression	0644		5901768	0					
ANR	5901865	IfStatement	if ( fd < 0 )		5901768	7					
ANR	5901866	Condition	fd < 0	1015:8:40457:40462	5901768	0	True				
ANR	5901867	RelationalExpression	fd < 0		5901768	0		<			
ANR	5901868	Identifier	fd		5901768	0					
ANR	5901869	PrimaryExpression	0		5901768	1					
ANR	5901870	ReturnStatement	return - 1 ;	1016:8:40473:40482	5901768	1	True				
ANR	5901871	UnaryOperationExpression	- 1		5901768	0					
ANR	5901872	UnaryOperator	-		5901768	0					
ANR	5901873	PrimaryExpression	1		5901768	1					
ANR	5901874	ExpressionStatement	"ret = ( size_t ) write ( fd , data , len ) != len"	1017:4:40488:40529	5901768	8	True				
ANR	5901875	AssignmentExpression	"ret = ( size_t ) write ( fd , data , len ) != len"		5901768	0		=			
ANR	5901876	Identifier	ret		5901768	0					
ANR	5901877	EqualityExpression	"( size_t ) write ( fd , data , len ) != len"		5901768	1		!=			
ANR	5901878	CastExpression	"( size_t ) write ( fd , data , len )"		5901768	0					
ANR	5901879	CastTarget	size_t		5901768	0					
ANR	5901880	CallExpression	"write ( fd , data , len )"		5901768	1					
ANR	5901881	Callee	write		5901768	0					
ANR	5901882	Identifier	write		5901768	0					
ANR	5901883	ArgumentList	fd		5901768	1					
ANR	5901884	Argument	fd		5901768	0					
ANR	5901885	Identifier	fd		5901768	0					
ANR	5901886	Argument	data		5901768	1					
ANR	5901887	Identifier	data		5901768	0					
ANR	5901888	Argument	len		5901768	2					
ANR	5901889	Identifier	len		5901768	0					
ANR	5901890	Identifier	len		5901768	1					
ANR	5901891	IfStatement	if ( ret | close ( fd ) )		5901768	9					
ANR	5901892	Condition	ret | close ( fd )	1018:8:40539:40553	5901768	0	True				
ANR	5901893	InclusiveOrExpression	ret | close ( fd )		5901768	0		|			
ANR	5901894	Identifier	ret		5901768	0					
ANR	5901895	CallExpression	close ( fd )		5901768	1					
ANR	5901896	Callee	close		5901768	0					
ANR	5901897	Identifier	close		5901768	0					
ANR	5901898	ArgumentList	fd		5901768	1					
ANR	5901899	Argument	fd		5901768	0					
ANR	5901900	Identifier	fd		5901768	0					
ANR	5901901	ReturnStatement	return - 1 ;	1019:8:40564:40573	5901768	1	True				
ANR	5901902	UnaryOperationExpression	- 1		5901768	0					
ANR	5901903	UnaryOperator	-		5901768	0					
ANR	5901904	PrimaryExpression	1		5901768	1					
ANR	5901905	ExpressionStatement	log_touch ( log )	1020:4:40579:40593	5901768	10	True				
ANR	5901906	CallExpression	log_touch ( log )		5901768	0					
ANR	5901907	Callee	log_touch		5901768	0					
ANR	5901908	Identifier	log_touch		5901768	0					
ANR	5901909	ArgumentList	log		5901768	1					
ANR	5901910	Argument	log		5901768	0					
ANR	5901911	Identifier	log		5901768	0					
ANR	5901912	IfStatement	"if ( log_mark ( log , APPEND_OP ) )"		5901768	11					
ANR	5901913	Condition	"log_mark ( log , APPEND_OP )"	1023:8:40652:40675	5901768	0	True				
ANR	5901914	CallExpression	"log_mark ( log , APPEND_OP )"		5901768	0					
ANR	5901915	Callee	log_mark		5901768	0					
ANR	5901916	Identifier	log_mark		5901768	0					
ANR	5901917	ArgumentList	log		5901768	1					
ANR	5901918	Argument	log		5901768	0					
ANR	5901919	Identifier	log		5901768	0					
ANR	5901920	Argument	APPEND_OP		5901768	1					
ANR	5901921	Identifier	APPEND_OP		5901768	0					
ANR	5901922	ReturnStatement	return - 1 ;	1024:8:40686:40695	5901768	1	True				
ANR	5901923	UnaryOperationExpression	- 1		5901768	0					
ANR	5901924	UnaryOperator	-		5901768	0					
ANR	5901925	PrimaryExpression	1		5901768	1					
ANR	5901926	ExpressionStatement	BAIL ( 8 )	1025:4:40701:40708	5901768	12	True				
ANR	5901927	CallExpression	BAIL ( 8 )		5901768	0					
ANR	5901928	Callee	BAIL		5901768	0					
ANR	5901929	Identifier	BAIL		5901768	0					
ANR	5901930	ArgumentList	8		5901768	1					
ANR	5901931	Argument	8		5901768	0					
ANR	5901932	PrimaryExpression	8		5901768	0					
ANR	5901933	IfStatement	"if ( log_append ( log , data , len ) )"		5901768	13					
ANR	5901934	Condition	"log_append ( log , data , len )"	1028:8:40755:40780	5901768	0	True				
ANR	5901935	CallExpression	"log_append ( log , data , len )"		5901768	0					
ANR	5901936	Callee	log_append		5901768	0					
ANR	5901937	Identifier	log_append		5901768	0					
ANR	5901938	ArgumentList	log		5901768	1					
ANR	5901939	Argument	log		5901768	0					
ANR	5901940	Identifier	log		5901768	0					
ANR	5901941	Argument	data		5901768	1					
ANR	5901942	Identifier	data		5901768	0					
ANR	5901943	Argument	len		5901768	2					
ANR	5901944	Identifier	len		5901768	0					
ANR	5901945	ReturnStatement	return - 1 ;	1029:8:40791:40800	5901768	1	True				
ANR	5901946	UnaryOperationExpression	- 1		5901768	0					
ANR	5901947	UnaryOperator	-		5901768	0					
ANR	5901948	PrimaryExpression	1		5901768	1					
ANR	5901949	IfStatement	if ( ( ( log -> last - log -> first ) >> 10 ) + ( log -> stored >> 10 ) < TRIGGER )		5901768	14					
ANR	5901950	Condition	( ( log -> last - log -> first ) >> 10 ) + ( log -> stored >> 10 ) < TRIGGER	1032:8:40880:40943	5901768	0	True				
ANR	5901951	RelationalExpression	( ( log -> last - log -> first ) >> 10 ) + ( log -> stored >> 10 ) < TRIGGER		5901768	0		<			
ANR	5901952	AdditiveExpression	( ( log -> last - log -> first ) >> 10 ) + ( log -> stored >> 10 )		5901768	0		+			
ANR	5901953	ShiftExpression	( log -> last - log -> first ) >> 10		5901768	0		>>			
ANR	5901954	AdditiveExpression	log -> last - log -> first		5901768	0		-			
ANR	5901955	PtrMemberAccess	log -> last		5901768	0					
ANR	5901956	Identifier	log		5901768	0					
ANR	5901957	Identifier	last		5901768	1					
ANR	5901958	PtrMemberAccess	log -> first		5901768	1					
ANR	5901959	Identifier	log		5901768	0					
ANR	5901960	Identifier	first		5901768	1					
ANR	5901961	PrimaryExpression	10		5901768	1					
ANR	5901962	ShiftExpression	log -> stored >> 10		5901768	1		>>			
ANR	5901963	PtrMemberAccess	log -> stored		5901768	0					
ANR	5901964	Identifier	log		5901768	0					
ANR	5901965	Identifier	stored		5901768	1					
ANR	5901966	PrimaryExpression	10		5901768	1					
ANR	5901967	Identifier	TRIGGER		5901768	1					
ANR	5901968	ReturnStatement	return 0 ;	1033:8:40954:40962	5901768	1	True				
ANR	5901969	PrimaryExpression	0		5901768	0					
ANR	5901970	ReturnStatement	return gzlog_compress ( log ) ;	1036:4:40996:41022	5901768	15	True				
ANR	5901971	CallExpression	gzlog_compress ( log )		5901768	0					
ANR	5901972	Callee	gzlog_compress		5901768	0					
ANR	5901973	Identifier	gzlog_compress		5901768	0					
ANR	5901974	ArgumentList	log		5901768	1					
ANR	5901975	Argument	log		5901768	0					
ANR	5901976	Identifier	log		5901768	0					
ANR	5901977	ReturnType	int		5901768	1					
ANR	5901978	Identifier	gzlog_write		5901768	2					
ANR	5901979	ParameterList	"gzlog * logd , void * data , size_t len"		5901768	3					
ANR	5901980	Parameter	gzlog * logd	995:16:39861:39871	5901768	0	True				
ANR	5901981	ParameterType	gzlog *		5901768	0					
ANR	5901982	Identifier	logd		5901768	1					
ANR	5901983	Parameter	void * data	995:29:39874:39883	5901768	1	True				
ANR	5901984	ParameterType	void *		5901768	0					
ANR	5901985	Identifier	data		5901768	1					
ANR	5901986	Parameter	size_t len	995:41:39886:39895	5901768	2	True				
ANR	5901987	ParameterType	size_t		5901768	0					
ANR	5901988	Identifier	len		5901768	1					
ANR	5901989	CFGEntryNode	ENTRY		5901768		True				
ANR	5901990	CFGExitNode	EXIT		5901768		True				
ANR	5901991	Symbol	data		5901768						
ANR	5901992	Symbol	log -> end		5901768						
ANR	5901993	Symbol	log		5901768						
ANR	5901994	Symbol	O_CREAT		5901768						
ANR	5901995	Symbol	TRIGGER		5901768						
ANR	5901996	Symbol	logd		5901768						
ANR	5901997	Symbol	len		5901768						
ANR	5901998	Symbol	log -> id		5901768						
ANR	5901999	Symbol	write		5901768						
ANR	5902000	Symbol	close		5901768						
ANR	5902001	Symbol	ret		5901768						
ANR	5902002	Symbol	strcmp		5901768						
ANR	5902003	Symbol	log_append		5901768						
ANR	5902004	Symbol	log_open		5901768						
ANR	5902005	Symbol	NULL		5901768						
ANR	5902006	Symbol	log -> path		5901768						
ANR	5902007	Symbol	log_mark		5901768						
ANR	5902008	Symbol	log -> first		5901768						
ANR	5902009	Symbol	LOGID		5901768						
ANR	5902010	Symbol	* log		5901768						
ANR	5902011	Symbol	log_check		5901768						
ANR	5902012	Symbol	O_TRUNC		5901768						
ANR	5902013	Symbol	gzlog_compress		5901768						
ANR	5902014	Symbol	log -> last		5901768						
ANR	5902015	Symbol	O_WRONLY		5901768						
ANR	5902016	Symbol	APPEND_OP		5901768						
ANR	5902017	Symbol	log -> stored		5901768						
ANR	5902018	Symbol	fd		5901768						
ANR	5902019	Symbol	open		5901768						
ANR	5902020	Function	gzlog_close	1042:0:41108:41477							
ANR	5902021	FunctionDef	gzlog_close (gzlog * logd)		5902020	0					
ANR	5902022	CompoundStatement		1043:0:41137:41477	5902020	0					
ANR	5902023	IdentifierDeclStatement	struct log * log = logd ;	1044:4:41143:41165	5902020	0	True				
ANR	5902024	IdentifierDecl	* log = logd		5902020	0					
ANR	5902025	IdentifierDeclType	struct log *		5902020	0					
ANR	5902026	Identifier	log		5902020	1					
ANR	5902027	AssignmentExpression	* log = logd		5902020	2		=			
ANR	5902028	Identifier	logd		5902020	0					
ANR	5902029	Identifier	logd		5902020	1					
ANR	5902030	IfStatement	"if ( log == NULL || strcmp ( log -> id , LOGID ) )"		5902020	1					
ANR	5902031	Condition	"log == NULL || strcmp ( log -> id , LOGID )"	1047:8:41202:41238	5902020	0	True				
ANR	5902032	OrExpression	"log == NULL || strcmp ( log -> id , LOGID )"		5902020	0		||			
ANR	5902033	EqualityExpression	log == NULL		5902020	0		==			
ANR	5902034	Identifier	log		5902020	0					
ANR	5902035	Identifier	NULL		5902020	1					
ANR	5902036	CallExpression	"strcmp ( log -> id , LOGID )"		5902020	1					
ANR	5902037	Callee	strcmp		5902020	0					
ANR	5902038	Identifier	strcmp		5902020	0					
ANR	5902039	ArgumentList	log -> id		5902020	1					
ANR	5902040	Argument	log -> id		5902020	0					
ANR	5902041	PtrMemberAccess	log -> id		5902020	0					
ANR	5902042	Identifier	log		5902020	0					
ANR	5902043	Identifier	id		5902020	1					
ANR	5902044	Argument	LOGID		5902020	1					
ANR	5902045	Identifier	LOGID		5902020	0					
ANR	5902046	ReturnStatement	return - 3 ;	1048:8:41249:41258	5902020	1	True				
ANR	5902047	UnaryOperationExpression	- 3		5902020	0					
ANR	5902048	UnaryOperator	-		5902020	0					
ANR	5902049	PrimaryExpression	3		5902020	1					
ANR	5902050	ExpressionStatement	log_close ( log )	1051:4:41315:41329	5902020	2	True				
ANR	5902051	CallExpression	log_close ( log )		5902020	0					
ANR	5902052	Callee	log_close		5902020	0					
ANR	5902053	Identifier	log_close		5902020	0					
ANR	5902054	ArgumentList	log		5902020	1					
ANR	5902055	Argument	log		5902020	0					
ANR	5902056	Identifier	log		5902020	0					
ANR	5902057	IfStatement	if ( log -> path != NULL )		5902020	3					
ANR	5902058	Condition	log -> path != NULL	1054:8:41376:41392	5902020	0	True				
ANR	5902059	EqualityExpression	log -> path != NULL		5902020	0		!=			
ANR	5902060	PtrMemberAccess	log -> path		5902020	0					
ANR	5902061	Identifier	log		5902020	0					
ANR	5902062	Identifier	path		5902020	1					
ANR	5902063	Identifier	NULL		5902020	1					
ANR	5902064	ExpressionStatement	free ( log -> path )	1055:8:41403:41418	5902020	1	True				
ANR	5902065	CallExpression	free ( log -> path )		5902020	0					
ANR	5902066	Callee	free		5902020	0					
ANR	5902067	Identifier	free		5902020	0					
ANR	5902068	ArgumentList	log -> path		5902020	1					
ANR	5902069	Argument	log -> path		5902020	0					
ANR	5902070	PtrMemberAccess	log -> path		5902020	0					
ANR	5902071	Identifier	log		5902020	0					
ANR	5902072	Identifier	path		5902020	1					
ANR	5902073	ExpressionStatement	"strcpy ( log -> id , ""bad"" )"	1056:4:41424:41446	5902020	4	True				
ANR	5902074	CallExpression	"strcpy ( log -> id , ""bad"" )"		5902020	0					
ANR	5902075	Callee	strcpy		5902020	0					
ANR	5902076	Identifier	strcpy		5902020	0					
ANR	5902077	ArgumentList	log -> id		5902020	1					
ANR	5902078	Argument	log -> id		5902020	0					
ANR	5902079	PtrMemberAccess	log -> id		5902020	0					
ANR	5902080	Identifier	log		5902020	0					
ANR	5902081	Identifier	id		5902020	1					
ANR	5902082	Argument	"""bad"""		5902020	1					
ANR	5902083	PrimaryExpression	"""bad"""		5902020	0					
ANR	5902084	ExpressionStatement	free ( log )	1057:4:41452:41461	5902020	5	True				
ANR	5902085	CallExpression	free ( log )		5902020	0					
ANR	5902086	Callee	free		5902020	0					
ANR	5902087	Identifier	free		5902020	0					
ANR	5902088	ArgumentList	log		5902020	1					
ANR	5902089	Argument	log		5902020	0					
ANR	5902090	Identifier	log		5902020	0					
ANR	5902091	ReturnStatement	return 0 ;	1058:4:41467:41475	5902020	6	True				
ANR	5902092	PrimaryExpression	0		5902020	0					
ANR	5902093	ReturnType	int		5902020	1					
ANR	5902094	Identifier	gzlog_close		5902020	2					
ANR	5902095	ParameterList	gzlog * logd		5902020	3					
ANR	5902096	Parameter	gzlog * logd	1042:16:41124:41134	5902020	0	True				
ANR	5902097	ParameterType	gzlog *		5902020	0					
ANR	5902098	Identifier	logd		5902020	1					
ANR	5902099	CFGEntryNode	ENTRY		5902020		True				
ANR	5902100	CFGExitNode	EXIT		5902020		True				
ANR	5902101	Symbol	strcmp		5902020						
ANR	5902102	Symbol	logd		5902020						
ANR	5902103	Symbol	NULL		5902020						
ANR	5902104	Symbol	log		5902020						
ANR	5902105	Symbol	log -> path		5902020						
ANR	5902106	Symbol	log -> id		5902020						
ANR	5902107	Symbol	LOGID		5902020						
ANR	5902108	Symbol	* log		5902020						
