command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8001209	File	data/converged/CVE-2018-16863_ghostpdl/pcfdrivr.c								
ANR	8001210	ClassDef	PCF_CMapRec_	66:10:2224:2362							
ANR	8001211	DeclStmt									
ANR	8001212	Decl							FT_CMapRec	FT_CMapRec	root
ANR	8001213	DeclStmt									
ANR	8001214	Decl							FT_ULong	FT_ULong	num_encodings
ANR	8001215	DeclStmt									
ANR	8001216	Decl							PCF_Encoding	PCF_Encoding	encodings
ANR	8001217	DeclStmt									
ANR	8001218	Decl							PCF_CMapRec_	PCF_CMapRec_	PCF_CMapRec
ANR	8001219	Decl							PCF_CMapRec_	PCF_CMapRec_ *	PCF_CMap
ANR	8001220	Function	pcf_cmap_init	76:2:2398:2735							
ANR	8001221	FunctionDef	"pcf_cmap_init (FT_CMap pcfcmap , FT_Pointer init_data)"		8001220	0					
ANR	8001222	CompoundStatement		78:2:2494:2735	8001220	0					
ANR	8001223	IdentifierDeclStatement	PCF_CMap cmap = ( PCF_CMap ) pcfcmap ;	79:4:2500:2534	8001220	0	True				
ANR	8001224	IdentifierDecl	cmap = ( PCF_CMap ) pcfcmap		8001220	0					
ANR	8001225	IdentifierDeclType	PCF_CMap		8001220	0					
ANR	8001226	Identifier	cmap		8001220	1					
ANR	8001227	AssignmentExpression	cmap = ( PCF_CMap ) pcfcmap		8001220	2		=			
ANR	8001228	Identifier	cmap		8001220	0					
ANR	8001229	CastExpression	( PCF_CMap ) pcfcmap		8001220	1					
ANR	8001230	CastTarget	PCF_CMap		8001220	0					
ANR	8001231	Identifier	pcfcmap		8001220	1					
ANR	8001232	IdentifierDeclStatement	PCF_Face face = ( PCF_Face ) FT_CMAP_FACE ( pcfcmap ) ;	80:4:2540:2590	8001220	1	True				
ANR	8001233	IdentifierDecl	face = ( PCF_Face ) FT_CMAP_FACE ( pcfcmap )		8001220	0					
ANR	8001234	IdentifierDeclType	PCF_Face		8001220	0					
ANR	8001235	Identifier	face		8001220	1					
ANR	8001236	AssignmentExpression	face = ( PCF_Face ) FT_CMAP_FACE ( pcfcmap )		8001220	2		=			
ANR	8001237	Identifier	face		8001220	0					
ANR	8001238	CastExpression	( PCF_Face ) FT_CMAP_FACE ( pcfcmap )		8001220	1					
ANR	8001239	CastTarget	PCF_Face		8001220	0					
ANR	8001240	CallExpression	FT_CMAP_FACE ( pcfcmap )		8001220	1					
ANR	8001241	Callee	FT_CMAP_FACE		8001220	0					
ANR	8001242	Identifier	FT_CMAP_FACE		8001220	0					
ANR	8001243	ArgumentList	pcfcmap		8001220	1					
ANR	8001244	Argument	pcfcmap		8001220	0					
ANR	8001245	Identifier	pcfcmap		8001220	0					
ANR	8001246	ExpressionStatement	FT_UNUSED ( init_data )	82:4:2597:2619	8001220	2	True				
ANR	8001247	CallExpression	FT_UNUSED ( init_data )		8001220	0					
ANR	8001248	Callee	FT_UNUSED		8001220	0					
ANR	8001249	Identifier	FT_UNUSED		8001220	0					
ANR	8001250	ArgumentList	init_data		8001220	1					
ANR	8001251	Argument	init_data		8001220	0					
ANR	8001252	Identifier	init_data		8001220	0					
ANR	8001253	ExpressionStatement	cmap -> num_encodings = face -> nencodings	85:4:2627:2665	8001220	3	True				
ANR	8001254	AssignmentExpression	cmap -> num_encodings = face -> nencodings		8001220	0		=			
ANR	8001255	PtrMemberAccess	cmap -> num_encodings		8001220	0					
ANR	8001256	Identifier	cmap		8001220	0					
ANR	8001257	Identifier	num_encodings		8001220	1					
ANR	8001258	PtrMemberAccess	face -> nencodings		8001220	1					
ANR	8001259	Identifier	face		8001220	0					
ANR	8001260	Identifier	nencodings		8001220	1					
ANR	8001261	ExpressionStatement	cmap -> encodings = face -> encodings	86:4:2671:2708	8001220	4	True				
ANR	8001262	AssignmentExpression	cmap -> encodings = face -> encodings		8001220	0		=			
ANR	8001263	PtrMemberAccess	cmap -> encodings		8001220	0					
ANR	8001264	Identifier	cmap		8001220	0					
ANR	8001265	Identifier	encodings		8001220	1					
ANR	8001266	PtrMemberAccess	face -> encodings		8001220	1					
ANR	8001267	Identifier	face		8001220	0					
ANR	8001268	Identifier	encodings		8001220	1					
ANR	8001269	ReturnStatement	return FT_Err_Ok ;	88:4:2715:2731	8001220	5	True				
ANR	8001270	Identifier	FT_Err_Ok		8001220	0					
ANR	8001271	Identifier	pcf_cmap_init		8001220	1					
ANR	8001272	ParameterList	"FT_CMap pcfcmap , FT_Pointer init_data"		8001220	2					
ANR	8001273	Parameter	FT_CMap pcfcmap	76:17:2413:2431	8001220	0	True				
ANR	8001274	ParameterType	FT_CMap		8001220	0					
ANR	8001275	Identifier	pcfcmap		8001220	1					
ANR	8001276	Parameter	FT_Pointer init_data	77:17:2468:2488	8001220	1	True				
ANR	8001277	ParameterType	FT_Pointer		8001220	0					
ANR	8001278	Identifier	init_data		8001220	1					
ANR	8001279	CFGEntryNode	ENTRY		8001220		True				
ANR	8001280	CFGExitNode	EXIT		8001220		True				
ANR	8001281	Symbol	face		8001220						
ANR	8001282	Symbol	* cmap		8001220						
ANR	8001283	Symbol	cmap -> encodings		8001220						
ANR	8001284	Symbol	FT_CMAP_FACE		8001220						
ANR	8001285	Symbol	face -> encodings		8001220						
ANR	8001286	Symbol	FT_Err_Ok		8001220						
ANR	8001287	Symbol	init_data		8001220						
ANR	8001288	Symbol	cmap		8001220						
ANR	8001289	Symbol	face -> nencodings		8001220						
ANR	8001290	Symbol	pcfcmap		8001220						
ANR	8001291	Symbol	* face		8001220						
ANR	8001292	Symbol	cmap -> num_encodings		8001220						
ANR	8001293	Function	pcf_cmap_done	93:2:2767:2933							
ANR	8001294	FunctionDef	pcf_cmap_done (FT_CMap pcfcmap)		8001293	0					
ANR	8001295	CompoundStatement		94:2:2826:2933	8001293	0					
ANR	8001296	IdentifierDeclStatement	PCF_CMap cmap = ( PCF_CMap ) pcfcmap ;	95:4:2832:2866	8001293	0	True				
ANR	8001297	IdentifierDecl	cmap = ( PCF_CMap ) pcfcmap		8001293	0					
ANR	8001298	IdentifierDeclType	PCF_CMap		8001293	0					
ANR	8001299	Identifier	cmap		8001293	1					
ANR	8001300	AssignmentExpression	cmap = ( PCF_CMap ) pcfcmap		8001293	2		=			
ANR	8001301	Identifier	cmap		8001293	0					
ANR	8001302	CastExpression	( PCF_CMap ) pcfcmap		8001293	1					
ANR	8001303	CastTarget	PCF_CMap		8001293	0					
ANR	8001304	Identifier	pcfcmap		8001293	1					
ANR	8001305	ExpressionStatement	cmap -> encodings = NULL	98:4:2874:2900	8001293	1	True				
ANR	8001306	AssignmentExpression	cmap -> encodings = NULL		8001293	0		=			
ANR	8001307	PtrMemberAccess	cmap -> encodings		8001293	0					
ANR	8001308	Identifier	cmap		8001293	0					
ANR	8001309	Identifier	encodings		8001293	1					
ANR	8001310	Identifier	NULL		8001293	1					
ANR	8001311	ExpressionStatement	cmap -> num_encodings = 0	99:4:2906:2929	8001293	2	True				
ANR	8001312	AssignmentExpression	cmap -> num_encodings = 0		8001293	0		=			
ANR	8001313	PtrMemberAccess	cmap -> num_encodings		8001293	0					
ANR	8001314	Identifier	cmap		8001293	0					
ANR	8001315	Identifier	num_encodings		8001293	1					
ANR	8001316	PrimaryExpression	0		8001293	1					
ANR	8001317	Identifier	pcf_cmap_done		8001293	1					
ANR	8001318	ParameterList	FT_CMap pcfcmap		8001293	2					
ANR	8001319	Parameter	FT_CMap pcfcmap	93:17:2782:2797	8001293	0	True				
ANR	8001320	ParameterType	FT_CMap		8001293	0					
ANR	8001321	Identifier	pcfcmap		8001293	1					
ANR	8001322	CFGEntryNode	ENTRY		8001293		True				
ANR	8001323	CFGExitNode	EXIT		8001293		True				
ANR	8001324	Symbol	* cmap		8001293						
ANR	8001325	Symbol	cmap -> encodings		8001293						
ANR	8001326	Symbol	NULL		8001293						
ANR	8001327	Symbol	cmap		8001293						
ANR	8001328	Symbol	pcfcmap		8001293						
ANR	8001329	Symbol	cmap -> num_encodings		8001293						
ANR	8001330	Function	pcf_cmap_char_index	104:2:2968:3629							
ANR	8001331	FunctionDef	"pcf_cmap_char_index (FT_CMap pcfcmap , FT_UInt32 charcode)"		8001330	0					
ANR	8001332	CompoundStatement		106:2:3072:3629	8001330	0					
ANR	8001333	IdentifierDeclStatement	PCF_CMap cmap = ( PCF_CMap ) pcfcmap ;	107:4:3078:3121	8001330	0	True				
ANR	8001334	IdentifierDecl	cmap = ( PCF_CMap ) pcfcmap		8001330	0					
ANR	8001335	IdentifierDeclType	PCF_CMap		8001330	0					
ANR	8001336	Identifier	cmap		8001330	1					
ANR	8001337	AssignmentExpression	cmap = ( PCF_CMap ) pcfcmap		8001330	2		=			
ANR	8001338	Identifier	cmap		8001330	0					
ANR	8001339	CastExpression	( PCF_CMap ) pcfcmap		8001330	1					
ANR	8001340	CastTarget	PCF_CMap		8001330	0					
ANR	8001341	Identifier	pcfcmap		8001330	1					
ANR	8001342	IdentifierDeclStatement	PCF_Encoding encodings = cmap -> encodings ;	108:4:3127:3168	8001330	1	True				
ANR	8001343	IdentifierDecl	encodings = cmap -> encodings		8001330	0					
ANR	8001344	IdentifierDeclType	PCF_Encoding		8001330	0					
ANR	8001345	Identifier	encodings		8001330	1					
ANR	8001346	AssignmentExpression	encodings = cmap -> encodings		8001330	2		=			
ANR	8001347	Identifier	encodings		8001330	0					
ANR	8001348	PtrMemberAccess	cmap -> encodings		8001330	1					
ANR	8001349	Identifier	cmap		8001330	0					
ANR	8001350	Identifier	encodings		8001330	1					
ANR	8001351	IdentifierDeclStatement	"FT_ULong min , max , mid ;"	109:4:3174:3201	8001330	2	True				
ANR	8001352	IdentifierDecl	min		8001330	0					
ANR	8001353	IdentifierDeclType	FT_ULong		8001330	0					
ANR	8001354	Identifier	min		8001330	1					
ANR	8001355	IdentifierDecl	max		8001330	1					
ANR	8001356	IdentifierDeclType	FT_ULong		8001330	0					
ANR	8001357	Identifier	max		8001330	1					
ANR	8001358	IdentifierDecl	mid		8001330	2					
ANR	8001359	IdentifierDeclType	FT_ULong		8001330	0					
ANR	8001360	Identifier	mid		8001330	1					
ANR	8001361	IdentifierDeclStatement	FT_UInt result = 0 ;	110:4:3207:3234	8001330	3	True				
ANR	8001362	IdentifierDecl	result = 0		8001330	0					
ANR	8001363	IdentifierDeclType	FT_UInt		8001330	0					
ANR	8001364	Identifier	result		8001330	1					
ANR	8001365	AssignmentExpression	result = 0		8001330	2		=			
ANR	8001366	Identifier	result		8001330	0					
ANR	8001367	PrimaryExpression	0		8001330	1					
ANR	8001368	ExpressionStatement	min = 0	113:4:3242:3249	8001330	4	True				
ANR	8001369	AssignmentExpression	min = 0		8001330	0		=			
ANR	8001370	Identifier	min		8001330	0					
ANR	8001371	PrimaryExpression	0		8001330	1					
ANR	8001372	ExpressionStatement	max = cmap -> num_encodings	114:4:3255:3280	8001330	5	True				
ANR	8001373	AssignmentExpression	max = cmap -> num_encodings		8001330	0		=			
ANR	8001374	Identifier	max		8001330	0					
ANR	8001375	PtrMemberAccess	cmap -> num_encodings		8001330	1					
ANR	8001376	Identifier	cmap		8001330	0					
ANR	8001377	Identifier	num_encodings		8001330	1					
ANR	8001378	WhileStatement	while ( min < max )		8001330	6					
ANR	8001379	Condition	min < max	116:12:3295:3303	8001330	0	True				
ANR	8001380	RelationalExpression	min < max		8001330	0		<			
ANR	8001381	Identifier	min		8001330	0					
ANR	8001382	Identifier	max		8001330	1					
ANR	8001383	CompoundStatement		13:6:246:260	8001330	1					
ANR	8001384	IdentifierDeclStatement	FT_ULong code ;	118:6:3319:3333	8001330	0	True				
ANR	8001385	IdentifierDecl	code		8001330	0					
ANR	8001386	IdentifierDeclType	FT_ULong		8001330	0					
ANR	8001387	Identifier	code		8001330	1					
ANR	8001388	ExpressionStatement	mid = ( min + max ) >> 1	121:6:3343:3368	8001330	1	True				
ANR	8001389	AssignmentExpression	mid = ( min + max ) >> 1		8001330	0		=			
ANR	8001390	Identifier	mid		8001330	0					
ANR	8001391	ShiftExpression	( min + max ) >> 1		8001330	1		>>			
ANR	8001392	AdditiveExpression	min + max		8001330	0		+			
ANR	8001393	Identifier	min		8001330	0					
ANR	8001394	Identifier	max		8001330	1					
ANR	8001395	PrimaryExpression	1		8001330	1					
ANR	8001396	ExpressionStatement	code = ( FT_ULong ) encodings [ mid ] . enc	122:6:3376:3411	8001330	2	True				
ANR	8001397	AssignmentExpression	code = ( FT_ULong ) encodings [ mid ] . enc		8001330	0		=			
ANR	8001398	Identifier	code		8001330	0					
ANR	8001399	CastExpression	( FT_ULong ) encodings [ mid ] . enc		8001330	1					
ANR	8001400	CastTarget	FT_ULong		8001330	0					
ANR	8001401	MemberAccess	encodings [ mid ] . enc		8001330	1					
ANR	8001402	ArrayIndexing	encodings [ mid ]		8001330	0					
ANR	8001403	Identifier	encodings		8001330	0					
ANR	8001404	Identifier	mid		8001330	1					
ANR	8001405	Identifier	enc		8001330	1					
ANR	8001406	IfStatement	if ( charcode == code )		8001330	3					
ANR	8001407	Condition	charcode == code	124:11:3425:3440	8001330	0	True				
ANR	8001408	EqualityExpression	charcode == code		8001330	0		==			
ANR	8001409	Identifier	charcode		8001330	0					
ANR	8001410	Identifier	code		8001330	1					
ANR	8001411	CompoundStatement		20:6:377:377	8001330	1					
ANR	8001412	ExpressionStatement	result = encodings [ mid ] . glyph + 1	126:8:3460:3493	8001330	0	True				
ANR	8001413	AssignmentExpression	result = encodings [ mid ] . glyph + 1		8001330	0		=			
ANR	8001414	Identifier	result		8001330	0					
ANR	8001415	AdditiveExpression	encodings [ mid ] . glyph + 1		8001330	1		+			
ANR	8001416	MemberAccess	encodings [ mid ] . glyph		8001330	0					
ANR	8001417	ArrayIndexing	encodings [ mid ]		8001330	0					
ANR	8001418	Identifier	encodings		8001330	0					
ANR	8001419	Identifier	mid		8001330	1					
ANR	8001420	Identifier	glyph		8001330	1					
ANR	8001421	PrimaryExpression	1		8001330	1					
ANR	8001422	BreakStatement	break ;	127:8:3503:3508	8001330	1	True				
ANR	8001423	IfStatement	if ( charcode < code )		8001330	4					
ANR	8001424	Condition	charcode < code	130:11:3530:3544	8001330	0	True				
ANR	8001425	RelationalExpression	charcode < code		8001330	0		<			
ANR	8001426	Identifier	charcode		8001330	0					
ANR	8001427	Identifier	code		8001330	1					
ANR	8001428	ExpressionStatement	max = mid	131:8:3556:3565	8001330	1	True				
ANR	8001429	AssignmentExpression	max = mid		8001330	0		=			
ANR	8001430	Identifier	max		8001330	0					
ANR	8001431	Identifier	mid		8001330	1					
ANR	8001432	ElseStatement	else		8001330	0					
ANR	8001433	ExpressionStatement	min = mid + 1	133:8:3586:3599	8001330	0	True				
ANR	8001434	AssignmentExpression	min = mid + 1		8001330	0		=			
ANR	8001435	Identifier	min		8001330	0					
ANR	8001436	AdditiveExpression	mid + 1		8001330	1		+			
ANR	8001437	Identifier	mid		8001330	0					
ANR	8001438	PrimaryExpression	1		8001330	1					
ANR	8001439	ReturnStatement	return result ;	136:4:3612:3625	8001330	7	True				
ANR	8001440	Identifier	result		8001330	0					
ANR	8001441	Identifier	pcf_cmap_char_index		8001330	1					
ANR	8001442	ParameterList	"FT_CMap pcfcmap , FT_UInt32 charcode"		8001330	2					
ANR	8001443	Parameter	FT_CMap pcfcmap	104:23:2989:3006	8001330	0	True				
ANR	8001444	ParameterType	FT_CMap		8001330	0					
ANR	8001445	Identifier	pcfcmap		8001330	1					
ANR	8001446	Parameter	FT_UInt32 charcode	105:23:3048:3066	8001330	1	True				
ANR	8001447	ParameterType	FT_UInt32		8001330	0					
ANR	8001448	Identifier	charcode		8001330	1					
ANR	8001449	CFGEntryNode	ENTRY		8001330		True				
ANR	8001450	CFGExitNode	EXIT		8001330		True				
ANR	8001451	Symbol	code		8001330						
ANR	8001452	Symbol	max		8001330						
ANR	8001453	Symbol	encodings		8001330						
ANR	8001454	Symbol	mid		8001330						
ANR	8001455	Symbol	encodings [ mid ] . glyph		8001330						
ANR	8001456	Symbol	cmap -> num_encodings		8001330						
ANR	8001457	Symbol	result		8001330						
ANR	8001458	Symbol	cmap -> encodings		8001330						
ANR	8001459	Symbol	* cmap		8001330						
ANR	8001460	Symbol	* mid		8001330						
ANR	8001461	Symbol	min		8001330						
ANR	8001462	Symbol	* encodings		8001330						
ANR	8001463	Symbol	charcode		8001330						
ANR	8001464	Symbol	cmap		8001330						
ANR	8001465	Symbol	pcfcmap		8001330						
ANR	8001466	Symbol	encodings [ mid ] . enc		8001330						
ANR	8001467	Function	pcf_cmap_char_next	141:2:3664:4802							
ANR	8001468	FunctionDef	"pcf_cmap_char_next (FT_CMap pcfcmap , FT_UInt32 * acharcode)"		8001467	0					
ANR	8001469	CompoundStatement		143:2:3769:4802	8001467	0					
ANR	8001470	IdentifierDeclStatement	PCF_CMap cmap = ( PCF_CMap ) pcfcmap ;	144:4:3775:3818	8001467	0	True				
ANR	8001471	IdentifierDecl	cmap = ( PCF_CMap ) pcfcmap		8001467	0					
ANR	8001472	IdentifierDeclType	PCF_CMap		8001467	0					
ANR	8001473	Identifier	cmap		8001467	1					
ANR	8001474	AssignmentExpression	cmap = ( PCF_CMap ) pcfcmap		8001467	2		=			
ANR	8001475	Identifier	cmap		8001467	0					
ANR	8001476	CastExpression	( PCF_CMap ) pcfcmap		8001467	1					
ANR	8001477	CastTarget	PCF_CMap		8001467	0					
ANR	8001478	Identifier	pcfcmap		8001467	1					
ANR	8001479	IdentifierDeclStatement	PCF_Encoding encodings = cmap -> encodings ;	145:4:3824:3865	8001467	1	True				
ANR	8001480	IdentifierDecl	encodings = cmap -> encodings		8001467	0					
ANR	8001481	IdentifierDeclType	PCF_Encoding		8001467	0					
ANR	8001482	Identifier	encodings		8001467	1					
ANR	8001483	AssignmentExpression	encodings = cmap -> encodings		8001467	2		=			
ANR	8001484	Identifier	encodings		8001467	0					
ANR	8001485	PtrMemberAccess	cmap -> encodings		8001467	1					
ANR	8001486	Identifier	cmap		8001467	0					
ANR	8001487	Identifier	encodings		8001467	1					
ANR	8001488	IdentifierDeclStatement	"FT_ULong min , max , mid ;"	146:4:3871:3898	8001467	2	True				
ANR	8001489	IdentifierDecl	min		8001467	0					
ANR	8001490	IdentifierDeclType	FT_ULong		8001467	0					
ANR	8001491	Identifier	min		8001467	1					
ANR	8001492	IdentifierDecl	max		8001467	1					
ANR	8001493	IdentifierDeclType	FT_ULong		8001467	0					
ANR	8001494	Identifier	max		8001467	1					
ANR	8001495	IdentifierDecl	mid		8001467	2					
ANR	8001496	IdentifierDeclType	FT_ULong		8001467	0					
ANR	8001497	Identifier	mid		8001467	1					
ANR	8001498	IdentifierDeclStatement	FT_ULong charcode = * acharcode + 1 ;	147:4:3904:3944	8001467	3	True				
ANR	8001499	IdentifierDecl	charcode = * acharcode + 1		8001467	0					
ANR	8001500	IdentifierDeclType	FT_ULong		8001467	0					
ANR	8001501	Identifier	charcode		8001467	1					
ANR	8001502	AssignmentExpression	charcode = * acharcode + 1		8001467	2		=			
ANR	8001503	Identifier	charcode		8001467	0					
ANR	8001504	AdditiveExpression	* acharcode + 1		8001467	1		+			
ANR	8001505	UnaryOperationExpression	* acharcode		8001467	0					
ANR	8001506	UnaryOperator	*		8001467	0					
ANR	8001507	Identifier	acharcode		8001467	1					
ANR	8001508	PrimaryExpression	1		8001467	1					
ANR	8001509	IdentifierDeclStatement	FT_UInt result = 0 ;	148:4:3950:3977	8001467	4	True				
ANR	8001510	IdentifierDecl	result = 0		8001467	0					
ANR	8001511	IdentifierDeclType	FT_UInt		8001467	0					
ANR	8001512	Identifier	result		8001467	1					
ANR	8001513	AssignmentExpression	result = 0		8001467	2		=			
ANR	8001514	Identifier	result		8001467	0					
ANR	8001515	PrimaryExpression	0		8001467	1					
ANR	8001516	ExpressionStatement	min = 0	151:4:3985:3992	8001467	5	True				
ANR	8001517	AssignmentExpression	min = 0		8001467	0		=			
ANR	8001518	Identifier	min		8001467	0					
ANR	8001519	PrimaryExpression	0		8001467	1					
ANR	8001520	ExpressionStatement	max = cmap -> num_encodings	152:4:3998:4023	8001467	6	True				
ANR	8001521	AssignmentExpression	max = cmap -> num_encodings		8001467	0		=			
ANR	8001522	Identifier	max		8001467	0					
ANR	8001523	PtrMemberAccess	cmap -> num_encodings		8001467	1					
ANR	8001524	Identifier	cmap		8001467	0					
ANR	8001525	Identifier	num_encodings		8001467	1					
ANR	8001526	WhileStatement	while ( min < max )		8001467	7					
ANR	8001527	Condition	min < max	154:12:4038:4046	8001467	0	True				
ANR	8001528	RelationalExpression	min < max		8001467	0		<			
ANR	8001529	Identifier	min		8001467	0					
ANR	8001530	Identifier	max		8001467	1					
ANR	8001531	CompoundStatement		14:6:292:306	8001467	1					
ANR	8001532	IdentifierDeclStatement	FT_ULong code ;	156:6:4062:4076	8001467	0	True				
ANR	8001533	IdentifierDecl	code		8001467	0					
ANR	8001534	IdentifierDeclType	FT_ULong		8001467	0					
ANR	8001535	Identifier	code		8001467	1					
ANR	8001536	ExpressionStatement	mid = ( min + max ) >> 1	159:6:4086:4111	8001467	1	True				
ANR	8001537	AssignmentExpression	mid = ( min + max ) >> 1		8001467	0		=			
ANR	8001538	Identifier	mid		8001467	0					
ANR	8001539	ShiftExpression	( min + max ) >> 1		8001467	1		>>			
ANR	8001540	AdditiveExpression	min + max		8001467	0		+			
ANR	8001541	Identifier	min		8001467	0					
ANR	8001542	Identifier	max		8001467	1					
ANR	8001543	PrimaryExpression	1		8001467	1					
ANR	8001544	ExpressionStatement	code = ( FT_ULong ) encodings [ mid ] . enc	160:6:4119:4154	8001467	2	True				
ANR	8001545	AssignmentExpression	code = ( FT_ULong ) encodings [ mid ] . enc		8001467	0		=			
ANR	8001546	Identifier	code		8001467	0					
ANR	8001547	CastExpression	( FT_ULong ) encodings [ mid ] . enc		8001467	1					
ANR	8001548	CastTarget	FT_ULong		8001467	0					
ANR	8001549	MemberAccess	encodings [ mid ] . enc		8001467	1					
ANR	8001550	ArrayIndexing	encodings [ mid ]		8001467	0					
ANR	8001551	Identifier	encodings		8001467	0					
ANR	8001552	Identifier	mid		8001467	1					
ANR	8001553	Identifier	enc		8001467	1					
ANR	8001554	IfStatement	if ( charcode == code )		8001467	3					
ANR	8001555	Condition	charcode == code	162:11:4168:4183	8001467	0	True				
ANR	8001556	EqualityExpression	charcode == code		8001467	0		==			
ANR	8001557	Identifier	charcode		8001467	0					
ANR	8001558	Identifier	code		8001467	1					
ANR	8001559	CompoundStatement		21:6:423:423	8001467	1					
ANR	8001560	ExpressionStatement	result = encodings [ mid ] . glyph + 1	164:8:4203:4236	8001467	0	True				
ANR	8001561	AssignmentExpression	result = encodings [ mid ] . glyph + 1		8001467	0		=			
ANR	8001562	Identifier	result		8001467	0					
ANR	8001563	AdditiveExpression	encodings [ mid ] . glyph + 1		8001467	1		+			
ANR	8001564	MemberAccess	encodings [ mid ] . glyph		8001467	0					
ANR	8001565	ArrayIndexing	encodings [ mid ]		8001467	0					
ANR	8001566	Identifier	encodings		8001467	0					
ANR	8001567	Identifier	mid		8001467	1					
ANR	8001568	Identifier	glyph		8001467	1					
ANR	8001569	PrimaryExpression	1		8001467	1					
ANR	8001570	GotoStatement	goto Exit ;	165:8:4246:4255	8001467	1	True				
ANR	8001571	Identifier	Exit		8001467	0					
ANR	8001572	IfStatement	if ( charcode < code )		8001467	4					
ANR	8001573	Condition	charcode < code	168:11:4277:4291	8001467	0	True				
ANR	8001574	RelationalExpression	charcode < code		8001467	0		<			
ANR	8001575	Identifier	charcode		8001467	0					
ANR	8001576	Identifier	code		8001467	1					
ANR	8001577	ExpressionStatement	max = mid	169:8:4303:4312	8001467	1	True				
ANR	8001578	AssignmentExpression	max = mid		8001467	0		=			
ANR	8001579	Identifier	max		8001467	0					
ANR	8001580	Identifier	mid		8001467	1					
ANR	8001581	ElseStatement	else		8001467	0					
ANR	8001582	ExpressionStatement	min = mid + 1	171:8:4333:4346	8001467	0	True				
ANR	8001583	AssignmentExpression	min = mid + 1		8001467	0		=			
ANR	8001584	Identifier	min		8001467	0					
ANR	8001585	AdditiveExpression	mid + 1		8001467	1		+			
ANR	8001586	Identifier	mid		8001467	0					
ANR	8001587	PrimaryExpression	1		8001467	1					
ANR	8001588	ExpressionStatement	charcode = 0	174:4:4359:4371	8001467	8	True				
ANR	8001589	AssignmentExpression	charcode = 0		8001467	0		=			
ANR	8001590	Identifier	charcode		8001467	0					
ANR	8001591	PrimaryExpression	0		8001467	1					
ANR	8001592	IfStatement	if ( min < cmap -> num_encodings )		8001467	9					
ANR	8001593	Condition	min < cmap -> num_encodings	175:9:4382:4406	8001467	0	True				
ANR	8001594	RelationalExpression	min < cmap -> num_encodings		8001467	0		<			
ANR	8001595	Identifier	min		8001467	0					
ANR	8001596	PtrMemberAccess	cmap -> num_encodings		8001467	1					
ANR	8001597	Identifier	cmap		8001467	0					
ANR	8001598	Identifier	num_encodings		8001467	1					
ANR	8001599	CompoundStatement		34:4:644:644	8001467	1					
ANR	8001600	ExpressionStatement	charcode = ( FT_ULong ) encodings [ min ] . enc	177:6:4422:4461	8001467	0	True				
ANR	8001601	AssignmentExpression	charcode = ( FT_ULong ) encodings [ min ] . enc		8001467	0		=			
ANR	8001602	Identifier	charcode		8001467	0					
ANR	8001603	CastExpression	( FT_ULong ) encodings [ min ] . enc		8001467	1					
ANR	8001604	CastTarget	FT_ULong		8001467	0					
ANR	8001605	MemberAccess	encodings [ min ] . enc		8001467	1					
ANR	8001606	ArrayIndexing	encodings [ min ]		8001467	0					
ANR	8001607	Identifier	encodings		8001467	0					
ANR	8001608	Identifier	min		8001467	1					
ANR	8001609	Identifier	enc		8001467	1					
ANR	8001610	ExpressionStatement	result = encodings [ min ] . glyph + 1	178:6:4469:4504	8001467	1	True				
ANR	8001611	AssignmentExpression	result = encodings [ min ] . glyph + 1		8001467	0		=			
ANR	8001612	Identifier	result		8001467	0					
ANR	8001613	AdditiveExpression	encodings [ min ] . glyph + 1		8001467	1		+			
ANR	8001614	MemberAccess	encodings [ min ] . glyph		8001467	0					
ANR	8001615	ArrayIndexing	encodings [ min ]		8001467	0					
ANR	8001616	Identifier	encodings		8001467	0					
ANR	8001617	Identifier	min		8001467	1					
ANR	8001618	Identifier	glyph		8001467	1					
ANR	8001619	PrimaryExpression	1		8001467	1					
ANR	8001620	Label	Exit :	181:2:4515:4519	8001467	10	True				
ANR	8001621	Identifier	Exit		8001467	0					
ANR	8001622	IfStatement	if ( charcode > 0xFFFFFFFFUL )		8001467	11					
ANR	8001623	Condition	charcode > 0xFFFFFFFFUL	182:9:4530:4552	8001467	0	True				
ANR	8001624	RelationalExpression	charcode > 0xFFFFFFFFUL		8001467	0		>			
ANR	8001625	Identifier	charcode		8001467	0					
ANR	8001626	PrimaryExpression	0xFFFFFFFFUL		8001467	1					
ANR	8001627	CompoundStatement		41:4:790:790	8001467	1					
ANR	8001628	ExpressionStatement	"FT_TRACE1 ( ( ""pcf_cmap_char_next: charcode 0x%x > 32bit API"" ) )"	184:6:4568:4630	8001467	0	True				
ANR	8001629	CallExpression	"FT_TRACE1 ( ( ""pcf_cmap_char_next: charcode 0x%x > 32bit API"" ) )"		8001467	0					
ANR	8001630	Callee	FT_TRACE1		8001467	0					
ANR	8001631	Identifier	FT_TRACE1		8001467	0					
ANR	8001632	ArgumentList	"""pcf_cmap_char_next: charcode 0x%x > 32bit API"""		8001467	1					
ANR	8001633	Argument	"""pcf_cmap_char_next: charcode 0x%x > 32bit API"""		8001467	0					
ANR	8001634	PrimaryExpression	"""pcf_cmap_char_next: charcode 0x%x > 32bit API"""		8001467	0					
ANR	8001635	ExpressionStatement	* acharcode = 0	185:6:4638:4652	8001467	1	True				
ANR	8001636	AssignmentExpression	* acharcode = 0		8001467	0		=			
ANR	8001637	UnaryOperationExpression	* acharcode		8001467	0					
ANR	8001638	UnaryOperator	*		8001467	0					
ANR	8001639	Identifier	acharcode		8001467	1					
ANR	8001640	PrimaryExpression	0		8001467	1					
ANR	8001641	ElseStatement	else		8001467	0					
ANR	8001642	ExpressionStatement	* acharcode = ( FT_UInt32 ) charcode	189:6:4747:4779	8001467	0	True				
ANR	8001643	AssignmentExpression	* acharcode = ( FT_UInt32 ) charcode		8001467	0		=			
ANR	8001644	UnaryOperationExpression	* acharcode		8001467	0					
ANR	8001645	UnaryOperator	*		8001467	0					
ANR	8001646	Identifier	acharcode		8001467	1					
ANR	8001647	CastExpression	( FT_UInt32 ) charcode		8001467	1					
ANR	8001648	CastTarget	FT_UInt32		8001467	0					
ANR	8001649	Identifier	charcode		8001467	1					
ANR	8001650	ReturnStatement	return result ;	190:4:4785:4798	8001467	12	True				
ANR	8001651	Identifier	result		8001467	0					
ANR	8001652	Identifier	pcf_cmap_char_next		8001467	1					
ANR	8001653	ParameterList	"FT_CMap pcfcmap , FT_UInt32 * acharcode"		8001467	2					
ANR	8001654	Parameter	FT_CMap pcfcmap	141:22:3684:3701	8001467	0	True				
ANR	8001655	ParameterType	FT_CMap		8001467	0					
ANR	8001656	Identifier	pcfcmap		8001467	1					
ANR	8001657	Parameter	FT_UInt32 * acharcode	142:22:3743:3763	8001467	1	True				
ANR	8001658	ParameterType	FT_UInt32 *		8001467	0					
ANR	8001659	Identifier	acharcode		8001467	1					
ANR	8001660	CFGEntryNode	ENTRY		8001467		True				
ANR	8001661	CFGExitNode	EXIT		8001467		True				
ANR	8001662	Symbol	acharcode		8001467						
ANR	8001663	Symbol	code		8001467						
ANR	8001664	Symbol	max		8001467						
ANR	8001665	Symbol	encodings		8001467						
ANR	8001666	Symbol	encodings [ min ] . glyph		8001467						
ANR	8001667	Symbol	mid		8001467						
ANR	8001668	Symbol	encodings [ mid ] . glyph		8001467						
ANR	8001669	Symbol	cmap -> num_encodings		8001467						
ANR	8001670	Symbol	result		8001467						
ANR	8001671	Symbol	* cmap		8001467						
ANR	8001672	Symbol	cmap -> encodings		8001467						
ANR	8001673	Symbol	* mid		8001467						
ANR	8001674	Symbol	min		8001467						
ANR	8001675	Symbol	* encodings		8001467						
ANR	8001676	Symbol	encodings [ min ] . enc		8001467						
ANR	8001677	Symbol	charcode		8001467						
ANR	8001678	Symbol	cmap		8001467						
ANR	8001679	Symbol	* acharcode		8001467						
ANR	8001680	Symbol	pcfcmap		8001467						
ANR	8001681	Symbol	* min		8001467						
ANR	8001682	Symbol	encodings [ mid ] . enc		8001467						
ANR	8001683	DeclStmt									
ANR	8001684	Decl							const FT_CMap_ClassRec	const FT_CMap_ClassRec	pcf_cmap_class
ANR	8001685	Function	PCF_Face_Done	208:2:5046:6104							
ANR	8001686	FunctionDef	PCF_Face_Done (FT_Face pcfface)		8001685	0					
ANR	8001687	CompoundStatement		209:2:5105:6104	8001685	0					
ANR	8001688	IdentifierDeclStatement	PCF_Face face = ( PCF_Face ) pcfface ;	210:4:5111:5146	8001685	0	True				
ANR	8001689	IdentifierDecl	face = ( PCF_Face ) pcfface		8001685	0					
ANR	8001690	IdentifierDeclType	PCF_Face		8001685	0					
ANR	8001691	Identifier	face		8001685	1					
ANR	8001692	AssignmentExpression	face = ( PCF_Face ) pcfface		8001685	2		=			
ANR	8001693	Identifier	face		8001685	0					
ANR	8001694	CastExpression	( PCF_Face ) pcfface		8001685	1					
ANR	8001695	CastTarget	PCF_Face		8001685	0					
ANR	8001696	Identifier	pcfface		8001685	1					
ANR	8001697	IdentifierDeclStatement	FT_Memory memory ;	211:4:5152:5169	8001685	1	True				
ANR	8001698	IdentifierDecl	memory		8001685	0					
ANR	8001699	IdentifierDeclType	FT_Memory		8001685	0					
ANR	8001700	Identifier	memory		8001685	1					
ANR	8001701	IfStatement	if ( ! face )		8001685	2					
ANR	8001702	Condition	! face	214:9:5182:5186	8001685	0	True				
ANR	8001703	UnaryOperationExpression	! face		8001685	0					
ANR	8001704	UnaryOperator	!		8001685	0					
ANR	8001705	Identifier	face		8001685	1					
ANR	8001706	ReturnStatement	return ;	215:6:5196:5202	8001685	1	True				
ANR	8001707	ExpressionStatement	memory = FT_FACE_MEMORY ( face )	217:4:5209:5240	8001685	3	True				
ANR	8001708	AssignmentExpression	memory = FT_FACE_MEMORY ( face )		8001685	0		=			
ANR	8001709	Identifier	memory		8001685	0					
ANR	8001710	CallExpression	FT_FACE_MEMORY ( face )		8001685	1					
ANR	8001711	Callee	FT_FACE_MEMORY		8001685	0					
ANR	8001712	Identifier	FT_FACE_MEMORY		8001685	0					
ANR	8001713	ArgumentList	face		8001685	1					
ANR	8001714	Argument	face		8001685	0					
ANR	8001715	Identifier	face		8001685	0					
ANR	8001716	ExpressionStatement	FT_FREE ( face -> encodings )	219:4:5247:5273	8001685	4	True				
ANR	8001717	CallExpression	FT_FREE ( face -> encodings )		8001685	0					
ANR	8001718	Callee	FT_FREE		8001685	0					
ANR	8001719	Identifier	FT_FREE		8001685	0					
ANR	8001720	ArgumentList	face -> encodings		8001685	1					
ANR	8001721	Argument	face -> encodings		8001685	0					
ANR	8001722	PtrMemberAccess	face -> encodings		8001685	0					
ANR	8001723	Identifier	face		8001685	0					
ANR	8001724	Identifier	encodings		8001685	1					
ANR	8001725	ExpressionStatement	FT_FREE ( face -> metrics )	220:4:5279:5303	8001685	5	True				
ANR	8001726	CallExpression	FT_FREE ( face -> metrics )		8001685	0					
ANR	8001727	Callee	FT_FREE		8001685	0					
ANR	8001728	Identifier	FT_FREE		8001685	0					
ANR	8001729	ArgumentList	face -> metrics		8001685	1					
ANR	8001730	Argument	face -> metrics		8001685	0					
ANR	8001731	PtrMemberAccess	face -> metrics		8001685	0					
ANR	8001732	Identifier	face		8001685	0					
ANR	8001733	Identifier	metrics		8001685	1					
ANR	8001734	IfStatement	if ( face -> properties )		8001685	6					
ANR	8001735	Condition	face -> properties	223:9:5341:5356	8001685	0	True				
ANR	8001736	PtrMemberAccess	face -> properties		8001685	0					
ANR	8001737	Identifier	face		8001685	0					
ANR	8001738	Identifier	properties		8001685	1					
ANR	8001739	CompoundStatement		17:6:266:275	8001685	1					
ANR	8001740	IdentifierDeclStatement	FT_Int i ;	225:6:5372:5381	8001685	0	True				
ANR	8001741	IdentifierDecl	i		8001685	0					
ANR	8001742	IdentifierDeclType	FT_Int		8001685	0					
ANR	8001743	Identifier	i		8001685	1					
ANR	8001744	ForStatement	for ( i = 0 ; i < face -> nprops ; i ++ )		8001685	1					
ANR	8001745	ForInit	i = 0 ;	228:12:5397:5402	8001685	0	True				
ANR	8001746	AssignmentExpression	i = 0		8001685	0		=			
ANR	8001747	Identifier	i		8001685	0					
ANR	8001748	PrimaryExpression	0		8001685	1					
ANR	8001749	Condition	i < face -> nprops	228:19:5404:5419	8001685	1	True				
ANR	8001750	RelationalExpression	i < face -> nprops		8001685	0		<			
ANR	8001751	Identifier	i		8001685	0					
ANR	8001752	PtrMemberAccess	face -> nprops		8001685	1					
ANR	8001753	Identifier	face		8001685	0					
ANR	8001754	Identifier	nprops		8001685	1					
ANR	8001755	PostIncDecOperationExpression	i ++	228:37:5422:5424	8001685	2	True				
ANR	8001756	Identifier	i		8001685	0					
ANR	8001757	IncDec	++		8001685	1					
ANR	8001758	CompoundStatement		22:8:338:379	8001685	3					
ANR	8001759	IdentifierDeclStatement	PCF_Property prop = & face -> properties [ i ] ;	230:8:5444:5485	8001685	0	True				
ANR	8001760	IdentifierDecl	prop = & face -> properties [ i ]		8001685	0					
ANR	8001761	IdentifierDeclType	PCF_Property		8001685	0					
ANR	8001762	Identifier	prop		8001685	1					
ANR	8001763	AssignmentExpression	prop = & face -> properties [ i ]		8001685	2		=			
ANR	8001764	Identifier	prop		8001685	0					
ANR	8001765	UnaryOperationExpression	& face -> properties [ i ]		8001685	1					
ANR	8001766	UnaryOperator	&		8001685	0					
ANR	8001767	ArrayIndexing	face -> properties [ i ]		8001685	1					
ANR	8001768	PtrMemberAccess	face -> properties		8001685	0					
ANR	8001769	Identifier	face		8001685	0					
ANR	8001770	Identifier	properties		8001685	1					
ANR	8001771	Identifier	i		8001685	1					
ANR	8001772	IfStatement	if ( prop )		8001685	1					
ANR	8001773	Condition	prop	233:13:5502:5505	8001685	0	True				
ANR	8001774	Identifier	prop		8001685	0					
ANR	8001775	CompoundStatement		26:8:411:411	8001685	1					
ANR	8001776	ExpressionStatement	FT_FREE ( prop -> name )	235:10:5529:5550	8001685	0	True				
ANR	8001777	CallExpression	FT_FREE ( prop -> name )		8001685	0					
ANR	8001778	Callee	FT_FREE		8001685	0					
ANR	8001779	Identifier	FT_FREE		8001685	0					
ANR	8001780	ArgumentList	prop -> name		8001685	1					
ANR	8001781	Argument	prop -> name		8001685	0					
ANR	8001782	PtrMemberAccess	prop -> name		8001685	0					
ANR	8001783	Identifier	prop		8001685	0					
ANR	8001784	Identifier	name		8001685	1					
ANR	8001785	IfStatement	if ( prop -> isString )		8001685	1					
ANR	8001786	Condition	prop -> isString	236:15:5567:5580	8001685	0	True				
ANR	8001787	PtrMemberAccess	prop -> isString		8001685	0					
ANR	8001788	Identifier	prop		8001685	0					
ANR	8001789	Identifier	isString		8001685	1					
ANR	8001790	ExpressionStatement	FT_FREE ( prop -> value . atom )	237:12:5596:5623	8001685	1	True				
ANR	8001791	CallExpression	FT_FREE ( prop -> value . atom )		8001685	0					
ANR	8001792	Callee	FT_FREE		8001685	0					
ANR	8001793	Identifier	FT_FREE		8001685	0					
ANR	8001794	ArgumentList	prop -> value . atom		8001685	1					
ANR	8001795	Argument	prop -> value . atom		8001685	0					
ANR	8001796	MemberAccess	prop -> value . atom		8001685	0					
ANR	8001797	PtrMemberAccess	prop -> value		8001685	0					
ANR	8001798	Identifier	prop		8001685	0					
ANR	8001799	Identifier	value		8001685	1					
ANR	8001800	Identifier	atom		8001685	1					
ANR	8001801	ExpressionStatement	FT_FREE ( face -> properties )	241:6:5650:5677	8001685	2	True				
ANR	8001802	CallExpression	FT_FREE ( face -> properties )		8001685	0					
ANR	8001803	Callee	FT_FREE		8001685	0					
ANR	8001804	Identifier	FT_FREE		8001685	0					
ANR	8001805	ArgumentList	face -> properties		8001685	1					
ANR	8001806	Argument	face -> properties		8001685	0					
ANR	8001807	PtrMemberAccess	face -> properties		8001685	0					
ANR	8001808	Identifier	face		8001685	0					
ANR	8001809	Identifier	properties		8001685	1					
ANR	8001810	ExpressionStatement	FT_FREE ( face -> toc . tables )	244:4:5690:5717	8001685	7	True				
ANR	8001811	CallExpression	FT_FREE ( face -> toc . tables )		8001685	0					
ANR	8001812	Callee	FT_FREE		8001685	0					
ANR	8001813	Identifier	FT_FREE		8001685	0					
ANR	8001814	ArgumentList	face -> toc . tables		8001685	1					
ANR	8001815	Argument	face -> toc . tables		8001685	0					
ANR	8001816	MemberAccess	face -> toc . tables		8001685	0					
ANR	8001817	PtrMemberAccess	face -> toc		8001685	0					
ANR	8001818	Identifier	face		8001685	0					
ANR	8001819	Identifier	toc		8001685	1					
ANR	8001820	Identifier	tables		8001685	1					
ANR	8001821	ExpressionStatement	FT_FREE ( pcfface -> family_name )	245:4:5723:5754	8001685	8	True				
ANR	8001822	CallExpression	FT_FREE ( pcfface -> family_name )		8001685	0					
ANR	8001823	Callee	FT_FREE		8001685	0					
ANR	8001824	Identifier	FT_FREE		8001685	0					
ANR	8001825	ArgumentList	pcfface -> family_name		8001685	1					
ANR	8001826	Argument	pcfface -> family_name		8001685	0					
ANR	8001827	PtrMemberAccess	pcfface -> family_name		8001685	0					
ANR	8001828	Identifier	pcfface		8001685	0					
ANR	8001829	Identifier	family_name		8001685	1					
ANR	8001830	ExpressionStatement	FT_FREE ( pcfface -> style_name )	246:4:5760:5790	8001685	9	True				
ANR	8001831	CallExpression	FT_FREE ( pcfface -> style_name )		8001685	0					
ANR	8001832	Callee	FT_FREE		8001685	0					
ANR	8001833	Identifier	FT_FREE		8001685	0					
ANR	8001834	ArgumentList	pcfface -> style_name		8001685	1					
ANR	8001835	Argument	pcfface -> style_name		8001685	0					
ANR	8001836	PtrMemberAccess	pcfface -> style_name		8001685	0					
ANR	8001837	Identifier	pcfface		8001685	0					
ANR	8001838	Identifier	style_name		8001685	1					
ANR	8001839	ExpressionStatement	FT_FREE ( pcfface -> available_sizes )	247:4:5796:5831	8001685	10	True				
ANR	8001840	CallExpression	FT_FREE ( pcfface -> available_sizes )		8001685	0					
ANR	8001841	Callee	FT_FREE		8001685	0					
ANR	8001842	Identifier	FT_FREE		8001685	0					
ANR	8001843	ArgumentList	pcfface -> available_sizes		8001685	1					
ANR	8001844	Argument	pcfface -> available_sizes		8001685	0					
ANR	8001845	PtrMemberAccess	pcfface -> available_sizes		8001685	0					
ANR	8001846	Identifier	pcfface		8001685	0					
ANR	8001847	Identifier	available_sizes		8001685	1					
ANR	8001848	ExpressionStatement	FT_FREE ( face -> charset_encoding )	248:4:5837:5870	8001685	11	True				
ANR	8001849	CallExpression	FT_FREE ( face -> charset_encoding )		8001685	0					
ANR	8001850	Callee	FT_FREE		8001685	0					
ANR	8001851	Identifier	FT_FREE		8001685	0					
ANR	8001852	ArgumentList	face -> charset_encoding		8001685	1					
ANR	8001853	Argument	face -> charset_encoding		8001685	0					
ANR	8001854	PtrMemberAccess	face -> charset_encoding		8001685	0					
ANR	8001855	Identifier	face		8001685	0					
ANR	8001856	Identifier	charset_encoding		8001685	1					
ANR	8001857	ExpressionStatement	FT_FREE ( face -> charset_registry )	249:4:5876:5909	8001685	12	True				
ANR	8001858	CallExpression	FT_FREE ( face -> charset_registry )		8001685	0					
ANR	8001859	Callee	FT_FREE		8001685	0					
ANR	8001860	Identifier	FT_FREE		8001685	0					
ANR	8001861	ArgumentList	face -> charset_registry		8001685	1					
ANR	8001862	Argument	face -> charset_registry		8001685	0					
ANR	8001863	PtrMemberAccess	face -> charset_registry		8001685	0					
ANR	8001864	Identifier	face		8001685	0					
ANR	8001865	Identifier	charset_registry		8001685	1					
ANR	8001866	IfStatement	if ( pcfface -> stream == & face -> comp_stream )		8001685	13					
ANR	8001867	Condition	pcfface -> stream == & face -> comp_stream	252:9:5962:5998	8001685	0	True				
ANR	8001868	EqualityExpression	pcfface -> stream == & face -> comp_stream		8001685	0		==			
ANR	8001869	PtrMemberAccess	pcfface -> stream		8001685	0					
ANR	8001870	Identifier	pcfface		8001685	0					
ANR	8001871	Identifier	stream		8001685	1					
ANR	8001872	UnaryOperationExpression	& face -> comp_stream		8001685	1					
ANR	8001873	UnaryOperator	&		8001685	0					
ANR	8001874	PtrMemberAccess	face -> comp_stream		8001685	1					
ANR	8001875	Identifier	face		8001685	0					
ANR	8001876	Identifier	comp_stream		8001685	1					
ANR	8001877	CompoundStatement		45:4:900:900	8001685	1					
ANR	8001878	ExpressionStatement	FT_Stream_Close ( & face -> comp_stream )	254:6:6014:6051	8001685	0	True				
ANR	8001879	CallExpression	FT_Stream_Close ( & face -> comp_stream )		8001685	0					
ANR	8001880	Callee	FT_Stream_Close		8001685	0					
ANR	8001881	Identifier	FT_Stream_Close		8001685	0					
ANR	8001882	ArgumentList	& face -> comp_stream		8001685	1					
ANR	8001883	Argument	& face -> comp_stream		8001685	0					
ANR	8001884	UnaryOperationExpression	& face -> comp_stream		8001685	0					
ANR	8001885	UnaryOperator	&		8001685	0					
ANR	8001886	PtrMemberAccess	face -> comp_stream		8001685	1					
ANR	8001887	Identifier	face		8001685	0					
ANR	8001888	Identifier	comp_stream		8001685	1					
ANR	8001889	ExpressionStatement	pcfface -> stream = face -> comp_source	255:6:6059:6094	8001685	1	True				
ANR	8001890	AssignmentExpression	pcfface -> stream = face -> comp_source		8001685	0		=			
ANR	8001891	PtrMemberAccess	pcfface -> stream		8001685	0					
ANR	8001892	Identifier	pcfface		8001685	0					
ANR	8001893	Identifier	stream		8001685	1					
ANR	8001894	PtrMemberAccess	face -> comp_source		8001685	1					
ANR	8001895	Identifier	face		8001685	0					
ANR	8001896	Identifier	comp_source		8001685	1					
ANR	8001897	Identifier	PCF_Face_Done		8001685	1					
ANR	8001898	ParameterList	FT_Face pcfface		8001685	2					
ANR	8001899	Parameter	FT_Face pcfface	208:17:5061:5076	8001685	0	True				
ANR	8001900	ParameterType	FT_Face		8001685	0					
ANR	8001901	Identifier	pcfface		8001685	1					
ANR	8001902	CFGEntryNode	ENTRY		8001685		True				
ANR	8001903	CFGExitNode	EXIT		8001685		True				
ANR	8001904	Symbol	face -> nprops		8001685						
ANR	8001905	Symbol	memory		8001685						
ANR	8001906	Symbol	pcfface		8001685						
ANR	8001907	Symbol	face -> toc . tables		8001685						
ANR	8001908	Symbol	* face		8001685						
ANR	8001909	Symbol	face -> comp_source		8001685						
ANR	8001910	Symbol	& face -> comp_stream		8001685						
ANR	8001911	Symbol	face -> metrics		8001685						
ANR	8001912	Symbol	face -> encodings		8001685						
ANR	8001913	Symbol	prop		8001685						
ANR	8001914	Symbol	prop -> value . atom		8001685						
ANR	8001915	Symbol	face -> properties		8001685						
ANR	8001916	Symbol	prop -> name		8001685						
ANR	8001917	Symbol	pcfface -> available_sizes		8001685						
ANR	8001918	Symbol	pcfface -> family_name		8001685						
ANR	8001919	Symbol	prop -> isString		8001685						
ANR	8001920	Symbol	face -> charset_encoding		8001685						
ANR	8001921	Symbol	i		8001685						
ANR	8001922	Symbol	face -> charset_registry		8001685						
ANR	8001923	Symbol	FT_FACE_MEMORY		8001685						
ANR	8001924	Symbol	* pcfface		8001685						
ANR	8001925	Symbol	pcfface -> stream		8001685						
ANR	8001926	Symbol	face -> toc		8001685						
ANR	8001927	Symbol	face		8001685						
ANR	8001928	Symbol	pcfface -> style_name		8001685						
ANR	8001929	Symbol	prop -> value		8001685						
ANR	8001930	Symbol	* prop		8001685						
ANR	8001931	Function	PCF_Face_Init	261:2:6140:10719							
ANR	8001932	FunctionDef	"PCF_Face_Init (FT_Stream stream , FT_Face pcfface , FT_Int face_index , FT_Int num_params , FT_Parameter * params)"		8001931	0					
ANR	8001933	CompoundStatement		266:2:6372:10719	8001931	0					
ANR	8001934	IdentifierDeclStatement	PCF_Face face = ( PCF_Face ) pcfface ;	267:4:6378:6413	8001931	0	True				
ANR	8001935	IdentifierDecl	face = ( PCF_Face ) pcfface		8001931	0					
ANR	8001936	IdentifierDeclType	PCF_Face		8001931	0					
ANR	8001937	Identifier	face		8001931	1					
ANR	8001938	AssignmentExpression	face = ( PCF_Face ) pcfface		8001931	2		=			
ANR	8001939	Identifier	face		8001931	0					
ANR	8001940	CastExpression	( PCF_Face ) pcfface		8001931	1					
ANR	8001941	CastTarget	PCF_Face		8001931	0					
ANR	8001942	Identifier	pcfface		8001931	1					
ANR	8001943	IdentifierDeclStatement	FT_Error error ;	268:4:6419:6434	8001931	1	True				
ANR	8001944	IdentifierDecl	error		8001931	0					
ANR	8001945	IdentifierDeclType	FT_Error		8001931	0					
ANR	8001946	Identifier	error		8001931	1					
ANR	8001947	ExpressionStatement	FT_UNUSED ( num_params )	270:4:6441:6464	8001931	2	True				
ANR	8001948	CallExpression	FT_UNUSED ( num_params )		8001931	0					
ANR	8001949	Callee	FT_UNUSED		8001931	0					
ANR	8001950	Identifier	FT_UNUSED		8001931	0					
ANR	8001951	ArgumentList	num_params		8001931	1					
ANR	8001952	Argument	num_params		8001931	0					
ANR	8001953	Identifier	num_params		8001931	0					
ANR	8001954	ExpressionStatement	FT_UNUSED ( params )	271:4:6470:6489	8001931	3	True				
ANR	8001955	CallExpression	FT_UNUSED ( params )		8001931	0					
ANR	8001956	Callee	FT_UNUSED		8001931	0					
ANR	8001957	Identifier	FT_UNUSED		8001931	0					
ANR	8001958	ArgumentList	params		8001931	1					
ANR	8001959	Argument	params		8001931	0					
ANR	8001960	Identifier	params		8001931	0					
ANR	8001961	ExpressionStatement	"FT_TRACE2 ( ( ""PCF driver\\n"" ) )"	274:4:6497:6526	8001931	4	True				
ANR	8001962	CallExpression	"FT_TRACE2 ( ( ""PCF driver\\n"" ) )"		8001931	0					
ANR	8001963	Callee	FT_TRACE2		8001931	0					
ANR	8001964	Identifier	FT_TRACE2		8001931	0					
ANR	8001965	ArgumentList	"""PCF driver\\n"""		8001931	1					
ANR	8001966	Argument	"""PCF driver\\n"""		8001931	0					
ANR	8001967	PrimaryExpression	"""PCF driver\\n"""		8001931	0					
ANR	8001968	ExpressionStatement	"error = pcf_load_font ( stream , face , face_index )"	276:4:6533:6582	8001931	5	True				
ANR	8001969	AssignmentExpression	"error = pcf_load_font ( stream , face , face_index )"		8001931	0		=			
ANR	8001970	Identifier	error		8001931	0					
ANR	8001971	CallExpression	"pcf_load_font ( stream , face , face_index )"		8001931	1					
ANR	8001972	Callee	pcf_load_font		8001931	0					
ANR	8001973	Identifier	pcf_load_font		8001931	0					
ANR	8001974	ArgumentList	stream		8001931	1					
ANR	8001975	Argument	stream		8001931	0					
ANR	8001976	Identifier	stream		8001931	0					
ANR	8001977	Argument	face		8001931	1					
ANR	8001978	Identifier	face		8001931	0					
ANR	8001979	Argument	face_index		8001931	2					
ANR	8001980	Identifier	face_index		8001931	0					
ANR	8001981	IfStatement	if ( error )		8001931	6					
ANR	8001982	Condition	error	277:9:6593:6597	8001931	0	True				
ANR	8001983	Identifier	error		8001931	0					
ANR	8001984	CompoundStatement		13:4:232:232	8001931	1					
ANR	8001985	ExpressionStatement	PCF_Face_Done ( pcfface )	279:6:6613:6637	8001931	0	True				
ANR	8001986	CallExpression	PCF_Face_Done ( pcfface )		8001931	0					
ANR	8001987	Callee	PCF_Face_Done		8001931	0					
ANR	8001988	Identifier	PCF_Face_Done		8001931	0					
ANR	8001989	ArgumentList	pcfface		8001931	1					
ANR	8001990	Argument	pcfface		8001931	0					
ANR	8001991	Identifier	pcfface		8001931	0					
ANR	8001992	Statement	defined	282:4:6691:6697	8001931	1	True				
ANR	8001993	Statement	(	282:11:6698:6698	8001931	2	True				
ANR	8001994	Statement	FT_CONFIG_OPTION_USE_LZW	282:13:6700:6723	8001931	3	True				
ANR	8001995	Statement	)	282:38:6725:6725	8001931	4	True				
ANR	8001996	Statement	||	282:42:6729:6730	8001931	5	True				
ANR	8001997	Statement	defined	283:4:6738:6744	8001931	6	True				
ANR	8001998	Statement	(	283:11:6745:6745	8001931	7	True				
ANR	8001999	Statement	FT_CONFIG_OPTION_USE_BZIP2	283:13:6747:6772	8001931	8	True				
ANR	8002000	Statement	)	283:40:6774:6774	8001931	9	True				
ANR	8002001	CompoundStatement		22:8:453:469	8001931	10					
ANR	8002002	IdentifierDeclStatement	FT_Error error2 ;	287:8:6826:6842	8001931	0	True				
ANR	8002003	IdentifierDecl	error2		8001931	0					
ANR	8002004	IdentifierDeclType	FT_Error		8001931	0					
ANR	8002005	Identifier	error2		8001931	1					
ANR	8002006	ExpressionStatement	"FT_TRACE2 ( ( ""  ... try gzip stream\\n"" ) )"	291:8:6904:6944	8001931	1	True				
ANR	8002007	CallExpression	"FT_TRACE2 ( ( ""  ... try gzip stream\\n"" ) )"		8001931	0					
ANR	8002008	Callee	FT_TRACE2		8001931	0					
ANR	8002009	Identifier	FT_TRACE2		8001931	0					
ANR	8002010	ArgumentList	"""  ... try gzip stream\\n"""		8001931	1					
ANR	8002011	Argument	"""  ... try gzip stream\\n"""		8001931	0					
ANR	8002012	PrimaryExpression	"""  ... try gzip stream\\n"""		8001931	0					
ANR	8002013	ExpressionStatement	"error2 = FT_Stream_OpenGzip ( & face -> comp_stream , stream )"	292:8:6954:7011	8001931	2	True				
ANR	8002014	AssignmentExpression	"error2 = FT_Stream_OpenGzip ( & face -> comp_stream , stream )"		8001931	0		=			
ANR	8002015	Identifier	error2		8001931	0					
ANR	8002016	CallExpression	"FT_Stream_OpenGzip ( & face -> comp_stream , stream )"		8001931	1					
ANR	8002017	Callee	FT_Stream_OpenGzip		8001931	0					
ANR	8002018	Identifier	FT_Stream_OpenGzip		8001931	0					
ANR	8002019	ArgumentList	& face -> comp_stream		8001931	1					
ANR	8002020	Argument	& face -> comp_stream		8001931	0					
ANR	8002021	UnaryOperationExpression	& face -> comp_stream		8001931	0					
ANR	8002022	UnaryOperator	&		8001931	0					
ANR	8002023	PtrMemberAccess	face -> comp_stream		8001931	1					
ANR	8002024	Identifier	face		8001931	0					
ANR	8002025	Identifier	comp_stream		8001931	1					
ANR	8002026	Argument	stream		8001931	1					
ANR	8002027	Identifier	stream		8001931	0					
ANR	8002028	IfStatement	"if ( FT_ERR_EQ ( error2 , Unimplemented_Feature ) )"		8001931	3					
ANR	8002029	Condition	"FT_ERR_EQ ( error2 , Unimplemented_Feature )"	293:13:7026:7067	8001931	0	True				
ANR	8002030	CallExpression	"FT_ERR_EQ ( error2 , Unimplemented_Feature )"		8001931	0					
ANR	8002031	Callee	FT_ERR_EQ		8001931	0					
ANR	8002032	Identifier	FT_ERR_EQ		8001931	0					
ANR	8002033	ArgumentList	error2		8001931	1					
ANR	8002034	Argument	error2		8001931	0					
ANR	8002035	Identifier	error2		8001931	0					
ANR	8002036	Argument	Unimplemented_Feature		8001931	1					
ANR	8002037	Identifier	Unimplemented_Feature		8001931	0					
ANR	8002038	GotoStatement	goto Fail ;	294:10:7081:7090	8001931	1	True				
ANR	8002039	Identifier	Fail		8001931	0					
ANR	8002040	ExpressionStatement	error = error2	296:8:7101:7115	8001931	4	True				
ANR	8002041	AssignmentExpression	error = error2		8001931	0		=			
ANR	8002042	Identifier	error		8001931	0					
ANR	8002043	Identifier	error2		8001931	1					
ANR	8002044	IfStatement	if ( error )		8001931	11					
ANR	8002045	Condition	error	301:11:7208:7212	8001931	0	True				
ANR	8002046	Identifier	error		8001931	0					
ANR	8002047	CompoundStatement		38:8:859:875	8001931	1					
ANR	8002048	IdentifierDeclStatement	FT_Error error3 ;	303:8:7232:7248	8001931	0	True				
ANR	8002049	IdentifierDecl	error3		8001931	0					
ANR	8002050	IdentifierDeclType	FT_Error		8001931	0					
ANR	8002051	Identifier	error3		8001931	1					
ANR	8002052	ExpressionStatement	"FT_TRACE2 ( ( ""  ... try LZW stream\\n"" ) )"	307:8:7309:7348	8001931	1	True				
ANR	8002053	CallExpression	"FT_TRACE2 ( ( ""  ... try LZW stream\\n"" ) )"		8001931	0					
ANR	8002054	Callee	FT_TRACE2		8001931	0					
ANR	8002055	Identifier	FT_TRACE2		8001931	0					
ANR	8002056	ArgumentList	"""  ... try LZW stream\\n"""		8001931	1					
ANR	8002057	Argument	"""  ... try LZW stream\\n"""		8001931	0					
ANR	8002058	PrimaryExpression	"""  ... try LZW stream\\n"""		8001931	0					
ANR	8002059	ExpressionStatement	"error3 = FT_Stream_OpenLZW ( & face -> comp_stream , stream )"	308:8:7358:7414	8001931	2	True				
ANR	8002060	AssignmentExpression	"error3 = FT_Stream_OpenLZW ( & face -> comp_stream , stream )"		8001931	0		=			
ANR	8002061	Identifier	error3		8001931	0					
ANR	8002062	CallExpression	"FT_Stream_OpenLZW ( & face -> comp_stream , stream )"		8001931	1					
ANR	8002063	Callee	FT_Stream_OpenLZW		8001931	0					
ANR	8002064	Identifier	FT_Stream_OpenLZW		8001931	0					
ANR	8002065	ArgumentList	& face -> comp_stream		8001931	1					
ANR	8002066	Argument	& face -> comp_stream		8001931	0					
ANR	8002067	UnaryOperationExpression	& face -> comp_stream		8001931	0					
ANR	8002068	UnaryOperator	&		8001931	0					
ANR	8002069	PtrMemberAccess	face -> comp_stream		8001931	1					
ANR	8002070	Identifier	face		8001931	0					
ANR	8002071	Identifier	comp_stream		8001931	1					
ANR	8002072	Argument	stream		8001931	1					
ANR	8002073	Identifier	stream		8001931	0					
ANR	8002074	IfStatement	"if ( FT_ERR_EQ ( error3 , Unimplemented_Feature ) )"		8001931	3					
ANR	8002075	Condition	"FT_ERR_EQ ( error3 , Unimplemented_Feature )"	309:13:7429:7470	8001931	0	True				
ANR	8002076	CallExpression	"FT_ERR_EQ ( error3 , Unimplemented_Feature )"		8001931	0					
ANR	8002077	Callee	FT_ERR_EQ		8001931	0					
ANR	8002078	Identifier	FT_ERR_EQ		8001931	0					
ANR	8002079	ArgumentList	error3		8001931	1					
ANR	8002080	Argument	error3		8001931	0					
ANR	8002081	Identifier	error3		8001931	0					
ANR	8002082	Argument	Unimplemented_Feature		8001931	1					
ANR	8002083	Identifier	Unimplemented_Feature		8001931	0					
ANR	8002084	GotoStatement	goto Fail ;	310:10:7484:7493	8001931	1	True				
ANR	8002085	Identifier	Fail		8001931	0					
ANR	8002086	ExpressionStatement	error = error3	312:8:7504:7518	8001931	4	True				
ANR	8002087	AssignmentExpression	error = error3		8001931	0		=			
ANR	8002088	Identifier	error		8001931	0					
ANR	8002089	Identifier	error3		8001931	1					
ANR	8002090	IfStatement	if ( error )		8001931	12					
ANR	8002091	Condition	error	317:11:7612:7616	8001931	0	True				
ANR	8002092	Identifier	error		8001931	0					
ANR	8002093	CompoundStatement		54:8:1263:1279	8001931	1					
ANR	8002094	IdentifierDeclStatement	FT_Error error4 ;	319:8:7636:7652	8001931	0	True				
ANR	8002095	IdentifierDecl	error4		8001931	0					
ANR	8002096	IdentifierDeclType	FT_Error		8001931	0					
ANR	8002097	Identifier	error4		8001931	1					
ANR	8002098	ExpressionStatement	"FT_TRACE2 ( ( ""  ... try Bzip2 stream\\n"" ) )"	323:8:7715:7756	8001931	1	True				
ANR	8002099	CallExpression	"FT_TRACE2 ( ( ""  ... try Bzip2 stream\\n"" ) )"		8001931	0					
ANR	8002100	Callee	FT_TRACE2		8001931	0					
ANR	8002101	Identifier	FT_TRACE2		8001931	0					
ANR	8002102	ArgumentList	"""  ... try Bzip2 stream\\n"""		8001931	1					
ANR	8002103	Argument	"""  ... try Bzip2 stream\\n"""		8001931	0					
ANR	8002104	PrimaryExpression	"""  ... try Bzip2 stream\\n"""		8001931	0					
ANR	8002105	ExpressionStatement	"error4 = FT_Stream_OpenBzip2 ( & face -> comp_stream , stream )"	324:8:7766:7824	8001931	2	True				
ANR	8002106	AssignmentExpression	"error4 = FT_Stream_OpenBzip2 ( & face -> comp_stream , stream )"		8001931	0		=			
ANR	8002107	Identifier	error4		8001931	0					
ANR	8002108	CallExpression	"FT_Stream_OpenBzip2 ( & face -> comp_stream , stream )"		8001931	1					
ANR	8002109	Callee	FT_Stream_OpenBzip2		8001931	0					
ANR	8002110	Identifier	FT_Stream_OpenBzip2		8001931	0					
ANR	8002111	ArgumentList	& face -> comp_stream		8001931	1					
ANR	8002112	Argument	& face -> comp_stream		8001931	0					
ANR	8002113	UnaryOperationExpression	& face -> comp_stream		8001931	0					
ANR	8002114	UnaryOperator	&		8001931	0					
ANR	8002115	PtrMemberAccess	face -> comp_stream		8001931	1					
ANR	8002116	Identifier	face		8001931	0					
ANR	8002117	Identifier	comp_stream		8001931	1					
ANR	8002118	Argument	stream		8001931	1					
ANR	8002119	Identifier	stream		8001931	0					
ANR	8002120	IfStatement	"if ( FT_ERR_EQ ( error4 , Unimplemented_Feature ) )"		8001931	3					
ANR	8002121	Condition	"FT_ERR_EQ ( error4 , Unimplemented_Feature )"	325:13:7839:7880	8001931	0	True				
ANR	8002122	CallExpression	"FT_ERR_EQ ( error4 , Unimplemented_Feature )"		8001931	0					
ANR	8002123	Callee	FT_ERR_EQ		8001931	0					
ANR	8002124	Identifier	FT_ERR_EQ		8001931	0					
ANR	8002125	ArgumentList	error4		8001931	1					
ANR	8002126	Argument	error4		8001931	0					
ANR	8002127	Identifier	error4		8001931	0					
ANR	8002128	Argument	Unimplemented_Feature		8001931	1					
ANR	8002129	Identifier	Unimplemented_Feature		8001931	0					
ANR	8002130	GotoStatement	goto Fail ;	326:10:7894:7903	8001931	1	True				
ANR	8002131	Identifier	Fail		8001931	0					
ANR	8002132	ExpressionStatement	error = error4	328:8:7914:7928	8001931	4	True				
ANR	8002133	AssignmentExpression	error = error4		8001931	0		=			
ANR	8002134	Identifier	error		8001931	0					
ANR	8002135	Identifier	error4		8001931	1					
ANR	8002136	IfStatement	if ( error )		8001931	13					
ANR	8002137	Condition	error	332:11:7990:7994	8001931	0	True				
ANR	8002138	Identifier	error		8001931	0					
ANR	8002139	GotoStatement	goto Fail ;	333:8:8006:8015	8001931	1	True				
ANR	8002140	Identifier	Fail		8001931	0					
ANR	8002141	ExpressionStatement	face -> comp_source = stream	335:6:8024:8050	8001931	14	True				
ANR	8002142	AssignmentExpression	face -> comp_source = stream		8001931	0		=			
ANR	8002143	PtrMemberAccess	face -> comp_source		8001931	0					
ANR	8002144	Identifier	face		8001931	0					
ANR	8002145	Identifier	comp_source		8001931	1					
ANR	8002146	Identifier	stream		8001931	1					
ANR	8002147	ExpressionStatement	pcfface -> stream = & face -> comp_stream	336:6:8058:8096	8001931	15	True				
ANR	8002148	AssignmentExpression	pcfface -> stream = & face -> comp_stream		8001931	0		=			
ANR	8002149	PtrMemberAccess	pcfface -> stream		8001931	0					
ANR	8002150	Identifier	pcfface		8001931	0					
ANR	8002151	Identifier	stream		8001931	1					
ANR	8002152	UnaryOperationExpression	& face -> comp_stream		8001931	1					
ANR	8002153	UnaryOperator	&		8001931	0					
ANR	8002154	PtrMemberAccess	face -> comp_stream		8001931	1					
ANR	8002155	Identifier	face		8001931	0					
ANR	8002156	Identifier	comp_stream		8001931	1					
ANR	8002157	ExpressionStatement	stream = pcfface -> stream	338:6:8105:8129	8001931	16	True				
ANR	8002158	AssignmentExpression	stream = pcfface -> stream		8001931	0		=			
ANR	8002159	Identifier	stream		8001931	0					
ANR	8002160	PtrMemberAccess	pcfface -> stream		8001931	1					
ANR	8002161	Identifier	pcfface		8001931	0					
ANR	8002162	Identifier	stream		8001931	1					
ANR	8002163	ExpressionStatement	"error = pcf_load_font ( stream , face , face_index )"	340:6:8138:8187	8001931	17	True				
ANR	8002164	AssignmentExpression	"error = pcf_load_font ( stream , face , face_index )"		8001931	0		=			
ANR	8002165	Identifier	error		8001931	0					
ANR	8002166	CallExpression	"pcf_load_font ( stream , face , face_index )"		8001931	1					
ANR	8002167	Callee	pcf_load_font		8001931	0					
ANR	8002168	Identifier	pcf_load_font		8001931	0					
ANR	8002169	ArgumentList	stream		8001931	1					
ANR	8002170	Argument	stream		8001931	0					
ANR	8002171	Identifier	stream		8001931	0					
ANR	8002172	Argument	face		8001931	1					
ANR	8002173	Identifier	face		8001931	0					
ANR	8002174	Argument	face_index		8001931	2					
ANR	8002175	Identifier	face_index		8001931	0					
ANR	8002176	IfStatement	if ( error )		8001931	18					
ANR	8002177	Condition	error	341:11:8200:8204	8001931	0	True				
ANR	8002178	Identifier	error		8001931	0					
ANR	8002179	GotoStatement	goto Fail ;	342:8:8216:8225	8001931	1	True				
ANR	8002180	Identifier	Fail		8001931	0					
ANR	8002181	IfStatement	if ( face_index < 0 )		8001931	7					
ANR	8002182	Condition	face_index < 0	359:9:8697:8710	8001931	0	True				
ANR	8002183	RelationalExpression	face_index < 0		8001931	0		<			
ANR	8002184	Identifier	face_index		8001931	0					
ANR	8002185	PrimaryExpression	0		8001931	1					
ANR	8002186	GotoStatement	goto Exit ;	360:6:8720:8729	8001931	1	True				
ANR	8002187	Identifier	Exit		8001931	0					
ANR	8002188	ElseStatement	else		8001931	0					
ANR	8002189	IfStatement	if ( face_index > 0 && ( face_index & 0xFFFF ) > 0 )		8001931	0					
ANR	8002190	Condition	face_index > 0 && ( face_index & 0xFFFF ) > 0	361:14:8745:8789	8001931	0	True				
ANR	8002191	AndExpression	face_index > 0 && ( face_index & 0xFFFF ) > 0		8001931	0		&&			
ANR	8002192	RelationalExpression	face_index > 0		8001931	0		>			
ANR	8002193	Identifier	face_index		8001931	0					
ANR	8002194	PrimaryExpression	0		8001931	1					
ANR	8002195	RelationalExpression	( face_index & 0xFFFF ) > 0		8001931	1		>			
ANR	8002196	BitAndExpression	face_index & 0xFFFF		8001931	0		&			
ANR	8002197	Identifier	face_index		8001931	0					
ANR	8002198	PrimaryExpression	0xFFFF		8001931	1					
ANR	8002199	PrimaryExpression	0		8001931	1					
ANR	8002200	CompoundStatement		97:4:2424:2424	8001931	1					
ANR	8002201	ExpressionStatement	"FT_ERROR ( ( ""PCF_Face_Init: invalid face index\\n"" ) )"	363:6:8805:8856	8001931	0	True				
ANR	8002202	CallExpression	"FT_ERROR ( ( ""PCF_Face_Init: invalid face index\\n"" ) )"		8001931	0					
ANR	8002203	Callee	FT_ERROR		8001931	0					
ANR	8002204	Identifier	FT_ERROR		8001931	0					
ANR	8002205	ArgumentList	"""PCF_Face_Init: invalid face index\\n"""		8001931	1					
ANR	8002206	Argument	"""PCF_Face_Init: invalid face index\\n"""		8001931	0					
ANR	8002207	PrimaryExpression	"""PCF_Face_Init: invalid face index\\n"""		8001931	0					
ANR	8002208	ExpressionStatement	PCF_Face_Done ( pcfface )	364:6:8864:8888	8001931	1	True				
ANR	8002209	CallExpression	PCF_Face_Done ( pcfface )		8001931	0					
ANR	8002210	Callee	PCF_Face_Done		8001931	0					
ANR	8002211	Identifier	PCF_Face_Done		8001931	0					
ANR	8002212	ArgumentList	pcfface		8001931	1					
ANR	8002213	Argument	pcfface		8001931	0					
ANR	8002214	Identifier	pcfface		8001931	0					
ANR	8002215	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	365:6:8896:8931	8001931	2	True				
ANR	8002216	CallExpression	FT_THROW ( Invalid_Argument )		8001931	0					
ANR	8002217	Callee	FT_THROW		8001931	0					
ANR	8002218	Identifier	FT_THROW		8001931	0					
ANR	8002219	ArgumentList	Invalid_Argument		8001931	1					
ANR	8002220	Argument	Invalid_Argument		8001931	0					
ANR	8002221	Identifier	Invalid_Argument		8001931	0					
ANR	8002222	CompoundStatement		107:6:2726:2758	8001931	8					
ANR	8002223	IdentifierDeclStatement	FT_String * charset_registry = face -> charset_registry ;	370:6:8977:9030	8001931	0	True				
ANR	8002224	IdentifierDecl	* charset_registry = face -> charset_registry		8001931	0					
ANR	8002225	IdentifierDeclType	FT_String *		8001931	0					
ANR	8002226	Identifier	charset_registry		8001931	1					
ANR	8002227	AssignmentExpression	* charset_registry = face -> charset_registry		8001931	2		=			
ANR	8002228	Identifier	charset_registry		8001931	0					
ANR	8002229	PtrMemberAccess	face -> charset_registry		8001931	1					
ANR	8002230	Identifier	face		8001931	0					
ANR	8002231	Identifier	charset_registry		8001931	1					
ANR	8002232	IdentifierDeclStatement	FT_String * charset_encoding = face -> charset_encoding ;	371:6:9038:9091	8001931	1	True				
ANR	8002233	IdentifierDecl	* charset_encoding = face -> charset_encoding		8001931	0					
ANR	8002234	IdentifierDeclType	FT_String *		8001931	0					
ANR	8002235	Identifier	charset_encoding		8001931	1					
ANR	8002236	AssignmentExpression	* charset_encoding = face -> charset_encoding		8001931	2		=			
ANR	8002237	Identifier	charset_encoding		8001931	0					
ANR	8002238	PtrMemberAccess	face -> charset_encoding		8001931	1					
ANR	8002239	Identifier	face		8001931	0					
ANR	8002240	Identifier	charset_encoding		8001931	1					
ANR	8002241	IdentifierDeclStatement	FT_Bool unicode_charmap = 0 ;	372:6:9099:9131	8001931	2	True				
ANR	8002242	IdentifierDecl	unicode_charmap = 0		8001931	0					
ANR	8002243	IdentifierDeclType	FT_Bool		8001931	0					
ANR	8002244	Identifier	unicode_charmap		8001931	1					
ANR	8002245	AssignmentExpression	unicode_charmap = 0		8001931	2		=			
ANR	8002246	Identifier	unicode_charmap		8001931	0					
ANR	8002247	PrimaryExpression	0		8001931	1					
ANR	8002248	IfStatement	if ( charset_registry && charset_encoding )		8001931	3					
ANR	8002249	Condition	charset_registry && charset_encoding	375:11:9146:9181	8001931	0	True				
ANR	8002250	AndExpression	charset_registry && charset_encoding		8001931	0		&&			
ANR	8002251	Identifier	charset_registry		8001931	0					
ANR	8002252	Identifier	charset_encoding		8001931	1					
ANR	8002253	CompoundStatement		112:8:2828:2855	8001931	1					
ANR	8002254	IdentifierDeclStatement	char * s = charset_registry ;	377:8:9201:9228	8001931	0	True				
ANR	8002255	IdentifierDecl	* s = charset_registry		8001931	0					
ANR	8002256	IdentifierDeclType	char *		8001931	0					
ANR	8002257	Identifier	s		8001931	1					
ANR	8002258	AssignmentExpression	* s = charset_registry		8001931	2		=			
ANR	8002259	Identifier	charset_registry		8001931	0					
ANR	8002260	Identifier	charset_registry		8001931	1					
ANR	8002261	IfStatement	if ( ( s [ 0 ] == 'i' || s [ 0 ] == 'I' ) && ( s [ 1 ] == 's' || s [ 1 ] == 'S' ) && ( s [ 2 ] == 'o' || s [ 2 ] == 'O' ) )		8001931	1					
ANR	8002262	Condition	( s [ 0 ] == 'i' || s [ 0 ] == 'I' ) && ( s [ 1 ] == 's' || s [ 1 ] == 'S' ) && ( s [ 2 ] == 'o' || s [ 2 ] == 'O' )	382:13:9341:9464	8001931	0	True				
ANR	8002263	AndExpression	( s [ 0 ] == 'i' || s [ 0 ] == 'I' ) && ( s [ 1 ] == 's' || s [ 1 ] == 'S' ) && ( s [ 2 ] == 'o' || s [ 2 ] == 'O' )		8001931	0		&&			
ANR	8002264	OrExpression	s [ 0 ] == 'i' || s [ 0 ] == 'I'		8001931	0		||			
ANR	8002265	EqualityExpression	s [ 0 ] == 'i'		8001931	0		==			
ANR	8002266	ArrayIndexing	s [ 0 ]		8001931	0					
ANR	8002267	Identifier	s		8001931	0					
ANR	8002268	PrimaryExpression	0		8001931	1					
ANR	8002269	PrimaryExpression	'i'		8001931	1					
ANR	8002270	EqualityExpression	s [ 0 ] == 'I'		8001931	1		==			
ANR	8002271	ArrayIndexing	s [ 0 ]		8001931	0					
ANR	8002272	Identifier	s		8001931	0					
ANR	8002273	PrimaryExpression	0		8001931	1					
ANR	8002274	PrimaryExpression	'I'		8001931	1					
ANR	8002275	AndExpression	( s [ 1 ] == 's' || s [ 1 ] == 'S' ) && ( s [ 2 ] == 'o' || s [ 2 ] == 'O' )		8001931	1		&&			
ANR	8002276	OrExpression	s [ 1 ] == 's' || s [ 1 ] == 'S'		8001931	0		||			
ANR	8002277	EqualityExpression	s [ 1 ] == 's'		8001931	0		==			
ANR	8002278	ArrayIndexing	s [ 1 ]		8001931	0					
ANR	8002279	Identifier	s		8001931	0					
ANR	8002280	PrimaryExpression	1		8001931	1					
ANR	8002281	PrimaryExpression	's'		8001931	1					
ANR	8002282	EqualityExpression	s [ 1 ] == 'S'		8001931	1		==			
ANR	8002283	ArrayIndexing	s [ 1 ]		8001931	0					
ANR	8002284	Identifier	s		8001931	0					
ANR	8002285	PrimaryExpression	1		8001931	1					
ANR	8002286	PrimaryExpression	'S'		8001931	1					
ANR	8002287	OrExpression	s [ 2 ] == 'o' || s [ 2 ] == 'O'		8001931	1		||			
ANR	8002288	EqualityExpression	s [ 2 ] == 'o'		8001931	0		==			
ANR	8002289	ArrayIndexing	s [ 2 ]		8001931	0					
ANR	8002290	Identifier	s		8001931	0					
ANR	8002291	PrimaryExpression	2		8001931	1					
ANR	8002292	PrimaryExpression	'o'		8001931	1					
ANR	8002293	EqualityExpression	s [ 2 ] == 'O'		8001931	1		==			
ANR	8002294	ArrayIndexing	s [ 2 ]		8001931	0					
ANR	8002295	Identifier	s		8001931	0					
ANR	8002296	PrimaryExpression	2		8001931	1					
ANR	8002297	PrimaryExpression	'O'		8001931	1					
ANR	8002298	CompoundStatement		120:8:3103:3103	8001931	1					
ANR	8002299	ExpressionStatement	s += 3	386:10:9488:9494	8001931	0	True				
ANR	8002300	AssignmentExpression	s += 3		8001931	0		+=			
ANR	8002301	Identifier	s		8001931	0					
ANR	8002302	PrimaryExpression	3		8001931	1					
ANR	8002303	IfStatement	"if ( ! ft_strcmp ( s , ""10646"" ) || ( ! ft_strcmp ( s , ""8859"" ) && ! ft_strcmp ( face -> charset_encoding , ""1"" ) ) )"		8001931	1					
ANR	8002304	Condition	"! ft_strcmp ( s , ""10646"" ) || ( ! ft_strcmp ( s , ""8859"" ) && ! ft_strcmp ( face -> charset_encoding , ""1"" ) )"	387:15:9511:9663	8001931	0	True				
ANR	8002305	OrExpression	"! ft_strcmp ( s , ""10646"" ) || ( ! ft_strcmp ( s , ""8859"" ) && ! ft_strcmp ( face -> charset_encoding , ""1"" ) )"		8001931	0		||			
ANR	8002306	UnaryOperationExpression	"! ft_strcmp ( s , ""10646"" )"		8001931	0					
ANR	8002307	UnaryOperator	!		8001931	0					
ANR	8002308	CallExpression	"ft_strcmp ( s , ""10646"" )"		8001931	1					
ANR	8002309	Callee	ft_strcmp		8001931	0					
ANR	8002310	Identifier	ft_strcmp		8001931	0					
ANR	8002311	ArgumentList	s		8001931	1					
ANR	8002312	Argument	s		8001931	0					
ANR	8002313	Identifier	s		8001931	0					
ANR	8002314	Argument	"""10646"""		8001931	1					
ANR	8002315	PrimaryExpression	"""10646"""		8001931	0					
ANR	8002316	AndExpression	"! ft_strcmp ( s , ""8859"" ) && ! ft_strcmp ( face -> charset_encoding , ""1"" )"		8001931	1		&&			
ANR	8002317	UnaryOperationExpression	"! ft_strcmp ( s , ""8859"" )"		8001931	0					
ANR	8002318	UnaryOperator	!		8001931	0					
ANR	8002319	CallExpression	"ft_strcmp ( s , ""8859"" )"		8001931	1					
ANR	8002320	Callee	ft_strcmp		8001931	0					
ANR	8002321	Identifier	ft_strcmp		8001931	0					
ANR	8002322	ArgumentList	s		8001931	1					
ANR	8002323	Argument	s		8001931	0					
ANR	8002324	Identifier	s		8001931	0					
ANR	8002325	Argument	"""8859"""		8001931	1					
ANR	8002326	PrimaryExpression	"""8859"""		8001931	0					
ANR	8002327	UnaryOperationExpression	"! ft_strcmp ( face -> charset_encoding , ""1"" )"		8001931	1					
ANR	8002328	UnaryOperator	!		8001931	0					
ANR	8002329	CallExpression	"ft_strcmp ( face -> charset_encoding , ""1"" )"		8001931	1					
ANR	8002330	Callee	ft_strcmp		8001931	0					
ANR	8002331	Identifier	ft_strcmp		8001931	0					
ANR	8002332	ArgumentList	face -> charset_encoding		8001931	1					
ANR	8002333	Argument	face -> charset_encoding		8001931	0					
ANR	8002334	PtrMemberAccess	face -> charset_encoding		8001931	0					
ANR	8002335	Identifier	face		8001931	0					
ANR	8002336	Identifier	charset_encoding		8001931	1					
ANR	8002337	Argument	"""1"""		8001931	1					
ANR	8002338	PrimaryExpression	"""1"""		8001931	0					
ANR	8002339	ExpressionStatement	unicode_charmap = 1	390:12:9679:9698	8001931	1	True				
ANR	8002340	AssignmentExpression	unicode_charmap = 1		8001931	0		=			
ANR	8002341	Identifier	unicode_charmap		8001931	0					
ANR	8002342	PrimaryExpression	1		8001931	1					
ANR	8002343	ElseStatement	else		8001931	0					
ANR	8002344	IfStatement	"if ( ! ft_strcmp ( s , ""646.1991"" ) && ! ft_strcmp ( face -> charset_encoding , ""IRV"" ) )"		8001931	0					
ANR	8002345	Condition	"! ft_strcmp ( s , ""646.1991"" ) && ! ft_strcmp ( face -> charset_encoding , ""IRV"" )"	392:20:9759:9868	8001931	0	True				
ANR	8002346	AndExpression	"! ft_strcmp ( s , ""646.1991"" ) && ! ft_strcmp ( face -> charset_encoding , ""IRV"" )"		8001931	0		&&			
ANR	8002347	UnaryOperationExpression	"! ft_strcmp ( s , ""646.1991"" )"		8001931	0					
ANR	8002348	UnaryOperator	!		8001931	0					
ANR	8002349	CallExpression	"ft_strcmp ( s , ""646.1991"" )"		8001931	1					
ANR	8002350	Callee	ft_strcmp		8001931	0					
ANR	8002351	Identifier	ft_strcmp		8001931	0					
ANR	8002352	ArgumentList	s		8001931	1					
ANR	8002353	Argument	s		8001931	0					
ANR	8002354	Identifier	s		8001931	0					
ANR	8002355	Argument	"""646.1991"""		8001931	1					
ANR	8002356	PrimaryExpression	"""646.1991"""		8001931	0					
ANR	8002357	UnaryOperationExpression	"! ft_strcmp ( face -> charset_encoding , ""IRV"" )"		8001931	1					
ANR	8002358	UnaryOperator	!		8001931	0					
ANR	8002359	CallExpression	"ft_strcmp ( face -> charset_encoding , ""IRV"" )"		8001931	1					
ANR	8002360	Callee	ft_strcmp		8001931	0					
ANR	8002361	Identifier	ft_strcmp		8001931	0					
ANR	8002362	ArgumentList	face -> charset_encoding		8001931	1					
ANR	8002363	Argument	face -> charset_encoding		8001931	0					
ANR	8002364	PtrMemberAccess	face -> charset_encoding		8001931	0					
ANR	8002365	Identifier	face		8001931	0					
ANR	8002366	Identifier	charset_encoding		8001931	1					
ANR	8002367	Argument	"""IRV"""		8001931	1					
ANR	8002368	PrimaryExpression	"""IRV"""		8001931	0					
ANR	8002369	ExpressionStatement	unicode_charmap = 1	394:12:9884:9903	8001931	1	True				
ANR	8002370	AssignmentExpression	unicode_charmap = 1		8001931	0		=			
ANR	8002371	Identifier	unicode_charmap		8001931	0					
ANR	8002372	PrimaryExpression	1		8001931	1					
ANR	8002373	CompoundStatement		134:8:3567:3589	8001931	4					
ANR	8002374	IdentifierDeclStatement	FT_CharMapRec charmap ;	399:8:9940:9962	8001931	0	True				
ANR	8002375	IdentifierDecl	charmap		8001931	0					
ANR	8002376	IdentifierDeclType	FT_CharMapRec		8001931	0					
ANR	8002377	Identifier	charmap		8001931	1					
ANR	8002378	ExpressionStatement	charmap . face = FT_FACE ( face )	402:8:9974:10011	8001931	1	True				
ANR	8002379	AssignmentExpression	charmap . face = FT_FACE ( face )		8001931	0		=			
ANR	8002380	MemberAccess	charmap . face		8001931	0					
ANR	8002381	Identifier	charmap		8001931	0					
ANR	8002382	Identifier	face		8001931	1					
ANR	8002383	CallExpression	FT_FACE ( face )		8001931	1					
ANR	8002384	Callee	FT_FACE		8001931	0					
ANR	8002385	Identifier	FT_FACE		8001931	0					
ANR	8002386	ArgumentList	face		8001931	1					
ANR	8002387	Argument	face		8001931	0					
ANR	8002388	Identifier	face		8001931	0					
ANR	8002389	ExpressionStatement	charmap . encoding = FT_ENCODING_NONE	403:8:10021:10059	8001931	2	True				
ANR	8002390	AssignmentExpression	charmap . encoding = FT_ENCODING_NONE		8001931	0		=			
ANR	8002391	MemberAccess	charmap . encoding		8001931	0					
ANR	8002392	Identifier	charmap		8001931	0					
ANR	8002393	Identifier	encoding		8001931	1					
ANR	8002394	Identifier	FT_ENCODING_NONE		8001931	1					
ANR	8002395	ExpressionStatement	charmap . platform_id = TT_PLATFORM_APPLE_UNICODE	405:8:10139:10186	8001931	3	True				
ANR	8002396	AssignmentExpression	charmap . platform_id = TT_PLATFORM_APPLE_UNICODE		8001931	0		=			
ANR	8002397	MemberAccess	charmap . platform_id		8001931	0					
ANR	8002398	Identifier	charmap		8001931	0					
ANR	8002399	Identifier	platform_id		8001931	1					
ANR	8002400	Identifier	TT_PLATFORM_APPLE_UNICODE		8001931	1					
ANR	8002401	ExpressionStatement	charmap . encoding_id = TT_APPLE_ID_DEFAULT	406:8:10196:10237	8001931	4	True				
ANR	8002402	AssignmentExpression	charmap . encoding_id = TT_APPLE_ID_DEFAULT		8001931	0		=			
ANR	8002403	MemberAccess	charmap . encoding_id		8001931	0					
ANR	8002404	Identifier	charmap		8001931	0					
ANR	8002405	Identifier	encoding_id		8001931	1					
ANR	8002406	Identifier	TT_APPLE_ID_DEFAULT		8001931	1					
ANR	8002407	IfStatement	if ( unicode_charmap )		8001931	5					
ANR	8002408	Condition	unicode_charmap	408:13:10253:10267	8001931	0	True				
ANR	8002409	Identifier	unicode_charmap		8001931	0					
ANR	8002410	CompoundStatement		144:8:3906:3906	8001931	1					
ANR	8002411	ExpressionStatement	charmap . encoding = FT_ENCODING_UNICODE	410:10:10291:10332	8001931	0	True				
ANR	8002412	AssignmentExpression	charmap . encoding = FT_ENCODING_UNICODE		8001931	0		=			
ANR	8002413	MemberAccess	charmap . encoding		8001931	0					
ANR	8002414	Identifier	charmap		8001931	0					
ANR	8002415	Identifier	encoding		8001931	1					
ANR	8002416	Identifier	FT_ENCODING_UNICODE		8001931	1					
ANR	8002417	ExpressionStatement	charmap . platform_id = TT_PLATFORM_MICROSOFT	411:10:10344:10387	8001931	1	True				
ANR	8002418	AssignmentExpression	charmap . platform_id = TT_PLATFORM_MICROSOFT		8001931	0		=			
ANR	8002419	MemberAccess	charmap . platform_id		8001931	0					
ANR	8002420	Identifier	charmap		8001931	0					
ANR	8002421	Identifier	platform_id		8001931	1					
ANR	8002422	Identifier	TT_PLATFORM_MICROSOFT		8001931	1					
ANR	8002423	ExpressionStatement	charmap . encoding_id = TT_MS_ID_UNICODE_CS	412:10:10399:10440	8001931	2	True				
ANR	8002424	AssignmentExpression	charmap . encoding_id = TT_MS_ID_UNICODE_CS		8001931	0		=			
ANR	8002425	MemberAccess	charmap . encoding_id		8001931	0					
ANR	8002426	Identifier	charmap		8001931	0					
ANR	8002427	Identifier	encoding_id		8001931	1					
ANR	8002428	Identifier	TT_MS_ID_UNICODE_CS		8001931	1					
ANR	8002429	ExpressionStatement	"error = FT_CMap_New ( & pcf_cmap_class , NULL , & charmap , NULL )"	415:8:10461:10521	8001931	6	True				
ANR	8002430	AssignmentExpression	"error = FT_CMap_New ( & pcf_cmap_class , NULL , & charmap , NULL )"		8001931	0		=			
ANR	8002431	Identifier	error		8001931	0					
ANR	8002432	CallExpression	"FT_CMap_New ( & pcf_cmap_class , NULL , & charmap , NULL )"		8001931	1					
ANR	8002433	Callee	FT_CMap_New		8001931	0					
ANR	8002434	Identifier	FT_CMap_New		8001931	0					
ANR	8002435	ArgumentList	& pcf_cmap_class		8001931	1					
ANR	8002436	Argument	& pcf_cmap_class		8001931	0					
ANR	8002437	UnaryOperationExpression	& pcf_cmap_class		8001931	0					
ANR	8002438	UnaryOperator	&		8001931	0					
ANR	8002439	Identifier	pcf_cmap_class		8001931	1					
ANR	8002440	Argument	NULL		8001931	1					
ANR	8002441	Identifier	NULL		8001931	0					
ANR	8002442	Argument	& charmap		8001931	2					
ANR	8002443	UnaryOperationExpression	& charmap		8001931	0					
ANR	8002444	UnaryOperator	&		8001931	0					
ANR	8002445	Identifier	charmap		8001931	1					
ANR	8002446	Argument	NULL		8001931	3					
ANR	8002447	Identifier	NULL		8001931	0					
ANR	8002448	Label	Exit :	419:2:10540:10544	8001931	9	True				
ANR	8002449	Identifier	Exit		8001931	0					
ANR	8002450	ReturnStatement	return error ;	420:4:10550:10562	8001931	10	True				
ANR	8002451	Identifier	error		8001931	0					
ANR	8002452	Label	Fail :	422:2:10567:10571	8001931	11	True				
ANR	8002453	Identifier	Fail		8001931	0					
ANR	8002454	ExpressionStatement	"FT_TRACE2 ( ( ""  not a PCF file\\n"" ) )"	423:4:10577:10612	8001931	12	True				
ANR	8002455	CallExpression	"FT_TRACE2 ( ( ""  not a PCF file\\n"" ) )"		8001931	0					
ANR	8002456	Callee	FT_TRACE2		8001931	0					
ANR	8002457	Identifier	FT_TRACE2		8001931	0					
ANR	8002458	ArgumentList	"""  not a PCF file\\n"""		8001931	1					
ANR	8002459	Argument	"""  not a PCF file\\n"""		8001931	0					
ANR	8002460	PrimaryExpression	"""  not a PCF file\\n"""		8001931	0					
ANR	8002461	ExpressionStatement	PCF_Face_Done ( pcfface )	424:4:10618:10642	8001931	13	True				
ANR	8002462	CallExpression	PCF_Face_Done ( pcfface )		8001931	0					
ANR	8002463	Callee	PCF_Face_Done		8001931	0					
ANR	8002464	Identifier	PCF_Face_Done		8001931	0					
ANR	8002465	ArgumentList	pcfface		8001931	1					
ANR	8002466	Argument	pcfface		8001931	0					
ANR	8002467	Identifier	pcfface		8001931	0					
ANR	8002468	ExpressionStatement	error = FT_THROW ( Unknown_File_Format )	425:4:10648:10687	8001931	14	True				
ANR	8002469	AssignmentExpression	error = FT_THROW ( Unknown_File_Format )		8001931	0		=			
ANR	8002470	Identifier	error		8001931	0					
ANR	8002471	CallExpression	FT_THROW ( Unknown_File_Format )		8001931	1					
ANR	8002472	Callee	FT_THROW		8001931	0					
ANR	8002473	Identifier	FT_THROW		8001931	0					
ANR	8002474	ArgumentList	Unknown_File_Format		8001931	1					
ANR	8002475	Argument	Unknown_File_Format		8001931	0					
ANR	8002476	Identifier	Unknown_File_Format		8001931	0					
ANR	8002477	GotoStatement	goto Exit ;	426:4:10706:10715	8001931	15	True				
ANR	8002478	Identifier	Exit		8001931	0					
ANR	8002479	Identifier	PCF_Face_Init		8001931	1					
ANR	8002480	ParameterList	"FT_Stream stream , FT_Face pcfface , FT_Int face_index , FT_Int num_params , FT_Parameter * params"		8001931	2					
ANR	8002481	Parameter	FT_Stream stream	261:17:6155:6175	8001931	0	True				
ANR	8002482	ParameterType	FT_Stream		8001931	0					
ANR	8002483	Identifier	stream		8001931	1					
ANR	8002484	Parameter	FT_Face pcfface	262:17:6195:6216	8001931	1	True				
ANR	8002485	ParameterType	FT_Face		8001931	0					
ANR	8002486	Identifier	pcfface		8001931	1					
ANR	8002487	Parameter	FT_Int face_index	263:17:6258:6282	8001931	2	True				
ANR	8002488	ParameterType	FT_Int		8001931	0					
ANR	8002489	Identifier	face_index		8001931	1					
ANR	8002490	Parameter	FT_Int num_params	264:17:6302:6326	8001931	3	True				
ANR	8002491	ParameterType	FT_Int		8001931	0					
ANR	8002492	Identifier	num_params		8001931	1					
ANR	8002493	Parameter	FT_Parameter * params	265:17:6346:6366	8001931	4	True				
ANR	8002494	ParameterType	FT_Parameter *		8001931	0					
ANR	8002495	Identifier	params		8001931	1					
ANR	8002496	CFGEntryNode	ENTRY		8001931		True				
ANR	8002497	CFGExitNode	EXIT		8001931		True				
ANR	8002498	Symbol	charmap . platform_id		8001931						
ANR	8002499	Symbol	TT_PLATFORM_APPLE_UNICODE		8001931						
ANR	8002500	Symbol	face_index		8001931						
ANR	8002501	Symbol	charmap . encoding_id		8001931						
ANR	8002502	Symbol	FT_ENCODING_UNICODE		8001931						
ANR	8002503	Symbol	pcfface		8001931						
ANR	8002504	Symbol	FT_ERR_EQ		8001931						
ANR	8002505	Symbol	FT_ENCODING_NONE		8001931						
ANR	8002506	Symbol	charset_encoding		8001931						
ANR	8002507	Symbol	FT_FACE		8001931						
ANR	8002508	Symbol	charmap		8001931						
ANR	8002509	Symbol	error		8001931						
ANR	8002510	Symbol	* face		8001931						
ANR	8002511	Symbol	face -> comp_source		8001931						
ANR	8002512	Symbol	num_params		8001931						
ANR	8002513	Symbol	& face -> comp_stream		8001931						
ANR	8002514	Symbol	FT_Stream_OpenGzip		8001931						
ANR	8002515	Symbol	stream		8001931						
ANR	8002516	Symbol	charmap . encoding		8001931						
ANR	8002517	Symbol	ft_strcmp		8001931						
ANR	8002518	Symbol	& charmap		8001931						
ANR	8002519	Symbol	FT_Stream_OpenBzip2		8001931						
ANR	8002520	Symbol	FT_Stream_OpenLZW		8001931						
ANR	8002521	Symbol	unicode_charmap		8001931						
ANR	8002522	Symbol	NULL		8001931						
ANR	8002523	Symbol	face -> charset_encoding		8001931						
ANR	8002524	Symbol	Invalid_Argument		8001931						
ANR	8002525	Symbol	face -> charset_registry		8001931						
ANR	8002526	Symbol	params		8001931						
ANR	8002527	Symbol	* pcfface		8001931						
ANR	8002528	Symbol	pcfface -> stream		8001931						
ANR	8002529	Symbol	TT_APPLE_ID_DEFAULT		8001931						
ANR	8002530	Symbol	FT_THROW		8001931						
ANR	8002531	Symbol	charset_registry		8001931						
ANR	8002532	Symbol	pcf_load_font		8001931						
ANR	8002533	Symbol	TT_MS_ID_UNICODE_CS		8001931						
ANR	8002534	Symbol	face		8001931						
ANR	8002535	Symbol	s		8001931						
ANR	8002536	Symbol	TT_PLATFORM_MICROSOFT		8001931						
ANR	8002537	Symbol	Unknown_File_Format		8001931						
ANR	8002538	Symbol	Unimplemented_Feature		8001931						
ANR	8002539	Symbol	error4		8001931						
ANR	8002540	Symbol	FT_CMap_New		8001931						
ANR	8002541	Symbol	* s		8001931						
ANR	8002542	Symbol	error3		8001931						
ANR	8002543	Symbol	& pcf_cmap_class		8001931						
ANR	8002544	Symbol	error2		8001931						
ANR	8002545	Symbol	charmap . face		8001931						
ANR	8002546	Function	PCF_Size_Select	431:2:10755:11158							
ANR	8002547	FunctionDef	"PCF_Size_Select (FT_Size size , FT_ULong strike_index)"		8002546	0					
ANR	8002548	CompoundStatement		433:2:10834:11158	8002546	0					
ANR	8002549	IdentifierDeclStatement	PCF_Accel accel = & ( ( PCF_Face ) size -> face ) -> accel ;	434:4:10840:10891	8002546	0	True				
ANR	8002550	IdentifierDecl	accel = & ( ( PCF_Face ) size -> face ) -> accel		8002546	0					
ANR	8002551	IdentifierDeclType	PCF_Accel		8002546	0					
ANR	8002552	Identifier	accel		8002546	1					
ANR	8002553	AssignmentExpression	accel = & ( ( PCF_Face ) size -> face ) -> accel		8002546	2		=			
ANR	8002554	Identifier	accel		8002546	0					
ANR	8002555	UnaryOperationExpression	& ( ( PCF_Face ) size -> face ) -> accel		8002546	1					
ANR	8002556	UnaryOperator	&		8002546	0					
ANR	8002557	PtrMemberAccess	( ( PCF_Face ) size -> face ) -> accel		8002546	1					
ANR	8002558	CastExpression	( PCF_Face ) size -> face		8002546	0					
ANR	8002559	CastTarget	PCF_Face		8002546	0					
ANR	8002560	PtrMemberAccess	size -> face		8002546	1					
ANR	8002561	Identifier	size		8002546	0					
ANR	8002562	Identifier	face		8002546	1					
ANR	8002563	Identifier	accel		8002546	1					
ANR	8002564	ExpressionStatement	"FT_Select_Metrics ( size -> face , strike_index )"	437:4:10899:10944	8002546	1	True				
ANR	8002565	CallExpression	"FT_Select_Metrics ( size -> face , strike_index )"		8002546	0					
ANR	8002566	Callee	FT_Select_Metrics		8002546	0					
ANR	8002567	Identifier	FT_Select_Metrics		8002546	0					
ANR	8002568	ArgumentList	size -> face		8002546	1					
ANR	8002569	Argument	size -> face		8002546	0					
ANR	8002570	PtrMemberAccess	size -> face		8002546	0					
ANR	8002571	Identifier	size		8002546	0					
ANR	8002572	Identifier	face		8002546	1					
ANR	8002573	Argument	strike_index		8002546	1					
ANR	8002574	Identifier	strike_index		8002546	0					
ANR	8002575	ExpressionStatement	size -> metrics . ascender = accel -> fontAscent * 64	439:4:10951:11002	8002546	2	True				
ANR	8002576	AssignmentExpression	size -> metrics . ascender = accel -> fontAscent * 64		8002546	0		=			
ANR	8002577	MemberAccess	size -> metrics . ascender		8002546	0					
ANR	8002578	PtrMemberAccess	size -> metrics		8002546	0					
ANR	8002579	Identifier	size		8002546	0					
ANR	8002580	Identifier	metrics		8002546	1					
ANR	8002581	Identifier	ascender		8002546	1					
ANR	8002582	MultiplicativeExpression	accel -> fontAscent * 64		8002546	1		*			
ANR	8002583	PtrMemberAccess	accel -> fontAscent		8002546	0					
ANR	8002584	Identifier	accel		8002546	0					
ANR	8002585	Identifier	fontAscent		8002546	1					
ANR	8002586	PrimaryExpression	64		8002546	1					
ANR	8002587	ExpressionStatement	size -> metrics . descender = - accel -> fontDescent * 64	440:4:11008:11060	8002546	3	True				
ANR	8002588	AssignmentExpression	size -> metrics . descender = - accel -> fontDescent * 64		8002546	0		=			
ANR	8002589	MemberAccess	size -> metrics . descender		8002546	0					
ANR	8002590	PtrMemberAccess	size -> metrics		8002546	0					
ANR	8002591	Identifier	size		8002546	0					
ANR	8002592	Identifier	metrics		8002546	1					
ANR	8002593	Identifier	descender		8002546	1					
ANR	8002594	MultiplicativeExpression	- accel -> fontDescent * 64		8002546	1		*			
ANR	8002595	UnaryOperationExpression	- accel -> fontDescent		8002546	0					
ANR	8002596	UnaryOperator	-		8002546	0					
ANR	8002597	PtrMemberAccess	accel -> fontDescent		8002546	1					
ANR	8002598	Identifier	accel		8002546	0					
ANR	8002599	Identifier	fontDescent		8002546	1					
ANR	8002600	PrimaryExpression	64		8002546	1					
ANR	8002601	ExpressionStatement	size -> metrics . max_advance = accel -> maxbounds . characterWidth * 64	441:4:11066:11131	8002546	4	True				
ANR	8002602	AssignmentExpression	size -> metrics . max_advance = accel -> maxbounds . characterWidth * 64		8002546	0		=			
ANR	8002603	MemberAccess	size -> metrics . max_advance		8002546	0					
ANR	8002604	PtrMemberAccess	size -> metrics		8002546	0					
ANR	8002605	Identifier	size		8002546	0					
ANR	8002606	Identifier	metrics		8002546	1					
ANR	8002607	Identifier	max_advance		8002546	1					
ANR	8002608	MultiplicativeExpression	accel -> maxbounds . characterWidth * 64		8002546	1		*			
ANR	8002609	MemberAccess	accel -> maxbounds . characterWidth		8002546	0					
ANR	8002610	PtrMemberAccess	accel -> maxbounds		8002546	0					
ANR	8002611	Identifier	accel		8002546	0					
ANR	8002612	Identifier	maxbounds		8002546	1					
ANR	8002613	Identifier	characterWidth		8002546	1					
ANR	8002614	PrimaryExpression	64		8002546	1					
ANR	8002615	ReturnStatement	return FT_Err_Ok ;	443:4:11138:11154	8002546	5	True				
ANR	8002616	Identifier	FT_Err_Ok		8002546	0					
ANR	8002617	Identifier	PCF_Size_Select		8002546	1					
ANR	8002618	ParameterList	"FT_Size size , FT_ULong strike_index"		8002546	2					
ANR	8002619	Parameter	FT_Size size	431:19:10772:10785	8002546	0	True				
ANR	8002620	ParameterType	FT_Size		8002546	0					
ANR	8002621	Identifier	size		8002546	1					
ANR	8002622	Parameter	FT_ULong strike_index	432:19:10807:10828	8002546	1	True				
ANR	8002623	ParameterType	FT_ULong		8002546	0					
ANR	8002624	Identifier	strike_index		8002546	1					
ANR	8002625	CFGEntryNode	ENTRY		8002546		True				
ANR	8002626	CFGExitNode	EXIT		8002546		True				
ANR	8002627	Symbol	accel -> fontDescent		8002546						
ANR	8002628	Symbol	FT_Err_Ok		8002546						
ANR	8002629	Symbol	size -> metrics . descender		8002546						
ANR	8002630	Symbol	accel		8002546						
ANR	8002631	Symbol	& ( ( PCF_Face ) size -> face ) -> accel		8002546						
ANR	8002632	Symbol	* size		8002546						
ANR	8002633	Symbol	size -> metrics		8002546						
ANR	8002634	Symbol	size		8002546						
ANR	8002635	Symbol	* accel		8002546						
ANR	8002636	Symbol	accel -> fontAscent		8002546						
ANR	8002637	Symbol	size -> metrics . ascender		8002546						
ANR	8002638	Symbol	accel -> maxbounds . characterWidth		8002546						
ANR	8002639	Symbol	size -> face		8002546						
ANR	8002640	Symbol	size -> metrics . max_advance		8002546						
ANR	8002641	Symbol	strike_index		8002546						
ANR	8002642	Symbol	accel -> maxbounds		8002546						
ANR	8002643	Function	PCF_Size_Request	448:2:11194:12073							
ANR	8002644	FunctionDef	"PCF_Size_Request (FT_Size size , FT_Size_Request req)"		8002643	0					
ANR	8002645	CompoundStatement		450:2:11280:12073	8002643	0					
ANR	8002646	IdentifierDeclStatement	PCF_Face face = ( PCF_Face ) size -> face ;	451:4:11286:11331	8002643	0	True				
ANR	8002647	IdentifierDecl	face = ( PCF_Face ) size -> face		8002643	0					
ANR	8002648	IdentifierDeclType	PCF_Face		8002643	0					
ANR	8002649	Identifier	face		8002643	1					
ANR	8002650	AssignmentExpression	face = ( PCF_Face ) size -> face		8002643	2		=			
ANR	8002651	Identifier	face		8002643	0					
ANR	8002652	CastExpression	( PCF_Face ) size -> face		8002643	1					
ANR	8002653	CastTarget	PCF_Face		8002643	0					
ANR	8002654	PtrMemberAccess	size -> face		8002643	1					
ANR	8002655	Identifier	size		8002643	0					
ANR	8002656	Identifier	face		8002643	1					
ANR	8002657	IdentifierDeclStatement	FT_Bitmap_Size * bsize = size -> face -> available_sizes ;	452:4:11337:11389	8002643	1	True				
ANR	8002658	IdentifierDecl	* bsize = size -> face -> available_sizes		8002643	0					
ANR	8002659	IdentifierDeclType	FT_Bitmap_Size *		8002643	0					
ANR	8002660	Identifier	bsize		8002643	1					
ANR	8002661	AssignmentExpression	* bsize = size -> face -> available_sizes		8002643	2		=			
ANR	8002662	Identifier	bsize		8002643	0					
ANR	8002663	PtrMemberAccess	size -> face -> available_sizes		8002643	1					
ANR	8002664	PtrMemberAccess	size -> face		8002643	0					
ANR	8002665	Identifier	size		8002643	0					
ANR	8002666	Identifier	face		8002643	1					
ANR	8002667	Identifier	available_sizes		8002643	1					
ANR	8002668	IdentifierDeclStatement	FT_Error error = FT_ERR ( Invalid_Pixel_Size ) ;	453:4:11395:11448	8002643	2	True				
ANR	8002669	IdentifierDecl	error = FT_ERR ( Invalid_Pixel_Size )		8002643	0					
ANR	8002670	IdentifierDeclType	FT_Error		8002643	0					
ANR	8002671	Identifier	error		8002643	1					
ANR	8002672	AssignmentExpression	error = FT_ERR ( Invalid_Pixel_Size )		8002643	2		=			
ANR	8002673	Identifier	error		8002643	0					
ANR	8002674	CallExpression	FT_ERR ( Invalid_Pixel_Size )		8002643	1					
ANR	8002675	Callee	FT_ERR		8002643	0					
ANR	8002676	Identifier	FT_ERR		8002643	0					
ANR	8002677	ArgumentList	Invalid_Pixel_Size		8002643	1					
ANR	8002678	Argument	Invalid_Pixel_Size		8002643	0					
ANR	8002679	Identifier	Invalid_Pixel_Size		8002643	0					
ANR	8002680	IdentifierDeclStatement	FT_Long height ;	454:4:11454:11477	8002643	3	True				
ANR	8002681	IdentifierDecl	height		8002643	0					
ANR	8002682	IdentifierDeclType	FT_Long		8002643	0					
ANR	8002683	Identifier	height		8002643	1					
ANR	8002684	ExpressionStatement	height = FT_REQUEST_HEIGHT ( req )	457:4:11485:11518	8002643	4	True				
ANR	8002685	AssignmentExpression	height = FT_REQUEST_HEIGHT ( req )		8002643	0		=			
ANR	8002686	Identifier	height		8002643	0					
ANR	8002687	CallExpression	FT_REQUEST_HEIGHT ( req )		8002643	1					
ANR	8002688	Callee	FT_REQUEST_HEIGHT		8002643	0					
ANR	8002689	Identifier	FT_REQUEST_HEIGHT		8002643	0					
ANR	8002690	ArgumentList	req		8002643	1					
ANR	8002691	Argument	req		8002643	0					
ANR	8002692	Identifier	req		8002643	0					
ANR	8002693	ExpressionStatement	height = ( height + 32 ) >> 6	458:4:11524:11553	8002643	5	True				
ANR	8002694	AssignmentExpression	height = ( height + 32 ) >> 6		8002643	0		=			
ANR	8002695	Identifier	height		8002643	0					
ANR	8002696	ShiftExpression	( height + 32 ) >> 6		8002643	1		>>			
ANR	8002697	AdditiveExpression	height + 32		8002643	0		+			
ANR	8002698	Identifier	height		8002643	0					
ANR	8002699	PrimaryExpression	32		8002643	1					
ANR	8002700	PrimaryExpression	6		8002643	1					
ANR	8002701	SwitchStatement	switch ( req -> type )		8002643	6					
ANR	8002702	Condition	req -> type	460:13:11569:11577	8002643	0	True				
ANR	8002703	PtrMemberAccess	req -> type		8002643	0					
ANR	8002704	Identifier	req		8002643	0					
ANR	8002705	Identifier	type		8002643	1					
ANR	8002706	CompoundStatement		12:4:304:304	8002643	1					
ANR	8002707	Label	case FT_SIZE_REQUEST_TYPE_NOMINAL :	462:4:11591:11624	8002643	0	True				
ANR	8002708	Identifier	FT_SIZE_REQUEST_TYPE_NOMINAL		8002643	0					
ANR	8002709	IfStatement	if ( height == ( ( bsize -> y_ppem + 32 ) >> 6 ) )		8002643	1					
ANR	8002710	Condition	height == ( ( bsize -> y_ppem + 32 ) >> 6 )	463:11:11637:11677	8002643	0	True				
ANR	8002711	EqualityExpression	height == ( ( bsize -> y_ppem + 32 ) >> 6 )		8002643	0		==			
ANR	8002712	Identifier	height		8002643	0					
ANR	8002713	ShiftExpression	( bsize -> y_ppem + 32 ) >> 6		8002643	1		>>			
ANR	8002714	AdditiveExpression	bsize -> y_ppem + 32		8002643	0		+			
ANR	8002715	PtrMemberAccess	bsize -> y_ppem		8002643	0					
ANR	8002716	Identifier	bsize		8002643	0					
ANR	8002717	Identifier	y_ppem		8002643	1					
ANR	8002718	PrimaryExpression	32		8002643	1					
ANR	8002719	PrimaryExpression	6		8002643	1					
ANR	8002720	ExpressionStatement	error = FT_Err_Ok	464:8:11689:11706	8002643	1	True				
ANR	8002721	AssignmentExpression	error = FT_Err_Ok		8002643	0		=			
ANR	8002722	Identifier	error		8002643	0					
ANR	8002723	Identifier	FT_Err_Ok		8002643	1					
ANR	8002724	BreakStatement	break ;	465:6:11714:11719	8002643	2	True				
ANR	8002725	Label	case FT_SIZE_REQUEST_TYPE_REAL_DIM :	467:4:11726:11760	8002643	3	True				
ANR	8002726	Identifier	FT_SIZE_REQUEST_TYPE_REAL_DIM		8002643	0					
ANR	8002727	IfStatement	if ( height == ( face -> accel . fontAscent + face -> accel . fontDescent ) )		8002643	4					
ANR	8002728	Condition	height == ( face -> accel . fontAscent + face -> accel . fontDescent )	468:11:11773:11857	8002643	0	True				
ANR	8002729	EqualityExpression	height == ( face -> accel . fontAscent + face -> accel . fontDescent )		8002643	0		==			
ANR	8002730	Identifier	height		8002643	0					
ANR	8002731	AdditiveExpression	face -> accel . fontAscent + face -> accel . fontDescent		8002643	1		+			
ANR	8002732	MemberAccess	face -> accel . fontAscent		8002643	0					
ANR	8002733	PtrMemberAccess	face -> accel		8002643	0					
ANR	8002734	Identifier	face		8002643	0					
ANR	8002735	Identifier	accel		8002643	1					
ANR	8002736	Identifier	fontAscent		8002643	1					
ANR	8002737	MemberAccess	face -> accel . fontDescent		8002643	1					
ANR	8002738	PtrMemberAccess	face -> accel		8002643	0					
ANR	8002739	Identifier	face		8002643	0					
ANR	8002740	Identifier	accel		8002643	1					
ANR	8002741	Identifier	fontDescent		8002643	1					
ANR	8002742	ExpressionStatement	error = FT_Err_Ok	470:8:11869:11886	8002643	1	True				
ANR	8002743	AssignmentExpression	error = FT_Err_Ok		8002643	0		=			
ANR	8002744	Identifier	error		8002643	0					
ANR	8002745	Identifier	FT_Err_Ok		8002643	1					
ANR	8002746	BreakStatement	break ;	471:6:11894:11899	8002643	5	True				
ANR	8002747	Label	default :	473:4:11906:11913	8002643	6	True				
ANR	8002748	Identifier	default		8002643	0					
ANR	8002749	ExpressionStatement	error = FT_THROW ( Unimplemented_Feature )	474:6:11921:11962	8002643	7	True				
ANR	8002750	AssignmentExpression	error = FT_THROW ( Unimplemented_Feature )		8002643	0		=			
ANR	8002751	Identifier	error		8002643	0					
ANR	8002752	CallExpression	FT_THROW ( Unimplemented_Feature )		8002643	1					
ANR	8002753	Callee	FT_THROW		8002643	0					
ANR	8002754	Identifier	FT_THROW		8002643	0					
ANR	8002755	ArgumentList	Unimplemented_Feature		8002643	1					
ANR	8002756	Argument	Unimplemented_Feature		8002643	0					
ANR	8002757	Identifier	Unimplemented_Feature		8002643	0					
ANR	8002758	BreakStatement	break ;	475:6:11970:11975	8002643	8	True				
ANR	8002759	IfStatement	if ( error )		8002643	7					
ANR	8002760	Condition	error	478:9:11993:11997	8002643	0	True				
ANR	8002761	Identifier	error		8002643	0					
ANR	8002762	ReturnStatement	return error ;	479:6:12007:12019	8002643	1	True				
ANR	8002763	Identifier	error		8002643	0					
ANR	8002764	ElseStatement	else		8002643	0					
ANR	8002765	ReturnStatement	"return PCF_Size_Select ( size , 0 ) ;"	481:6:12036:12069	8002643	0	True				
ANR	8002766	CallExpression	"PCF_Size_Select ( size , 0 )"		8002643	0					
ANR	8002767	Callee	PCF_Size_Select		8002643	0					
ANR	8002768	Identifier	PCF_Size_Select		8002643	0					
ANR	8002769	ArgumentList	size		8002643	1					
ANR	8002770	Argument	size		8002643	0					
ANR	8002771	Identifier	size		8002643	0					
ANR	8002772	Argument	0		8002643	1					
ANR	8002773	PrimaryExpression	0		8002643	0					
ANR	8002774	Identifier	PCF_Size_Request		8002643	1					
ANR	8002775	ParameterList	"FT_Size size , FT_Size_Request req"		8002643	2					
ANR	8002776	Parameter	FT_Size size	448:20:11212:11232	8002643	0	True				
ANR	8002777	ParameterType	FT_Size		8002643	0					
ANR	8002778	Identifier	size		8002643	1					
ANR	8002779	Parameter	FT_Size_Request req	449:20:11255:11274	8002643	1	True				
ANR	8002780	ParameterType	FT_Size_Request		8002643	0					
ANR	8002781	Identifier	req		8002643	1					
ANR	8002782	CFGEntryNode	ENTRY		8002643		True				
ANR	8002783	CFGExitNode	EXIT		8002643		True				
ANR	8002784	Symbol	face -> accel . fontAscent		8002643						
ANR	8002785	Symbol	FT_Err_Ok		8002643						
ANR	8002786	Symbol	PCF_Size_Select		8002643						
ANR	8002787	Symbol	* req		8002643						
ANR	8002788	Symbol	error		8002643						
ANR	8002789	Symbol	* face		8002643						
ANR	8002790	Symbol	* size		8002643						
ANR	8002791	Symbol	* bsize		8002643						
ANR	8002792	Symbol	FT_REQUEST_HEIGHT		8002643						
ANR	8002793	Symbol	Invalid_Pixel_Size		8002643						
ANR	8002794	Symbol	req		8002643						
ANR	8002795	Symbol	height		8002643						
ANR	8002796	Symbol	size -> face -> available_sizes		8002643						
ANR	8002797	Symbol	face -> accel . fontDescent		8002643						
ANR	8002798	Symbol	face -> accel		8002643						
ANR	8002799	Symbol	FT_ERR		8002643						
ANR	8002800	Symbol	req -> type		8002643						
ANR	8002801	Symbol	FT_THROW		8002643						
ANR	8002802	Symbol	* * size		8002643						
ANR	8002803	Symbol	bsize -> y_ppem		8002643						
ANR	8002804	Symbol	face		8002643						
ANR	8002805	Symbol	size		8002643						
ANR	8002806	Symbol	Unimplemented_Feature		8002643						
ANR	8002807	Symbol	* size -> face		8002643						
ANR	8002808	Symbol	bsize		8002643						
ANR	8002809	Symbol	size -> face		8002643						
ANR	8002810	Function	PCF_Glyph_Load	486:2:12109:15400							
ANR	8002811	FunctionDef	"PCF_Glyph_Load (FT_GlyphSlot slot , FT_Size size , FT_UInt glyph_index , FT_Int32 load_flags)"		8002810	0					
ANR	8002812	CompoundStatement		490:2:12275:15400	8002810	0					
ANR	8002813	IdentifierDeclStatement	PCF_Face face = ( PCF_Face ) FT_SIZE_FACE ( size ) ;	491:4:12281:12332	8002810	0	True				
ANR	8002814	IdentifierDecl	face = ( PCF_Face ) FT_SIZE_FACE ( size )		8002810	0					
ANR	8002815	IdentifierDeclType	PCF_Face		8002810	0					
ANR	8002816	Identifier	face		8002810	1					
ANR	8002817	AssignmentExpression	face = ( PCF_Face ) FT_SIZE_FACE ( size )		8002810	2		=			
ANR	8002818	Identifier	face		8002810	0					
ANR	8002819	CastExpression	( PCF_Face ) FT_SIZE_FACE ( size )		8002810	1					
ANR	8002820	CastTarget	PCF_Face		8002810	0					
ANR	8002821	CallExpression	FT_SIZE_FACE ( size )		8002810	1					
ANR	8002822	Callee	FT_SIZE_FACE		8002810	0					
ANR	8002823	Identifier	FT_SIZE_FACE		8002810	0					
ANR	8002824	ArgumentList	size		8002810	1					
ANR	8002825	Argument	size		8002810	0					
ANR	8002826	Identifier	size		8002810	0					
ANR	8002827	IdentifierDeclStatement	FT_Stream stream ;	492:4:12338:12356	8002810	1	True				
ANR	8002828	IdentifierDecl	stream		8002810	0					
ANR	8002829	IdentifierDeclType	FT_Stream		8002810	0					
ANR	8002830	Identifier	stream		8002810	1					
ANR	8002831	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	493:4:12362:12392	8002810	2	True				
ANR	8002832	IdentifierDecl	error = FT_Err_Ok		8002810	0					
ANR	8002833	IdentifierDeclType	FT_Error		8002810	0					
ANR	8002834	Identifier	error		8002810	1					
ANR	8002835	AssignmentExpression	error = FT_Err_Ok		8002810	2		=			
ANR	8002836	Identifier	FT_Err_Ok		8002810	0					
ANR	8002837	Identifier	FT_Err_Ok		8002810	1					
ANR	8002838	IdentifierDeclStatement	FT_Bitmap * bitmap = & slot -> bitmap ;	494:4:12398:12432	8002810	3	True				
ANR	8002839	IdentifierDecl	* bitmap = & slot -> bitmap		8002810	0					
ANR	8002840	IdentifierDeclType	FT_Bitmap *		8002810	0					
ANR	8002841	Identifier	bitmap		8002810	1					
ANR	8002842	AssignmentExpression	* bitmap = & slot -> bitmap		8002810	2		=			
ANR	8002843	Identifier	bitmap		8002810	0					
ANR	8002844	UnaryOperationExpression	& slot -> bitmap		8002810	1					
ANR	8002845	UnaryOperator	&		8002810	0					
ANR	8002846	PtrMemberAccess	slot -> bitmap		8002810	1					
ANR	8002847	Identifier	slot		8002810	0					
ANR	8002848	Identifier	bitmap		8002810	1					
ANR	8002849	IdentifierDeclStatement	PCF_Metric metric ;	495:4:12438:12456	8002810	4	True				
ANR	8002850	IdentifierDecl	metric		8002810	0					
ANR	8002851	IdentifierDeclType	PCF_Metric		8002810	0					
ANR	8002852	Identifier	metric		8002810	1					
ANR	8002853	IdentifierDeclStatement	FT_ULong bytes ;	496:4:12462:12479	8002810	5	True				
ANR	8002854	IdentifierDecl	bytes		8002810	0					
ANR	8002855	IdentifierDeclType	FT_ULong		8002810	0					
ANR	8002856	Identifier	bytes		8002810	1					
ANR	8002857	ExpressionStatement	"FT_TRACE1 ( ( ""PCF_Glyph_Load: glyph index %d\\n"" , glyph_index ) )"	499:4:12487:12549	8002810	6	True				
ANR	8002858	CallExpression	"FT_TRACE1 ( ( ""PCF_Glyph_Load: glyph index %d\\n"" , glyph_index ) )"		8002810	0					
ANR	8002859	Callee	FT_TRACE1		8002810	0					
ANR	8002860	Identifier	FT_TRACE1		8002810	0					
ANR	8002861	ArgumentList	"""PCF_Glyph_Load: glyph index %d\\n"" , glyph_index"		8002810	1					
ANR	8002862	Argument	"""PCF_Glyph_Load: glyph index %d\\n"" , glyph_index"		8002810	0					
ANR	8002863	Expression	"""PCF_Glyph_Load: glyph index %d\\n"" , glyph_index"		8002810	0					
ANR	8002864	PrimaryExpression	"""PCF_Glyph_Load: glyph index %d\\n"""		8002810	0					
ANR	8002865	Identifier	glyph_index		8002810	1					
ANR	8002866	IfStatement	if ( ! face )		8002810	7					
ANR	8002867	Condition	! face	501:9:12561:12565	8002810	0	True				
ANR	8002868	UnaryOperationExpression	! face		8002810	0					
ANR	8002869	UnaryOperator	!		8002810	0					
ANR	8002870	Identifier	face		8002810	1					
ANR	8002871	CompoundStatement		13:4:297:297	8002810	1					
ANR	8002872	ExpressionStatement	error = FT_THROW ( Invalid_Face_Handle )	503:6:12581:12620	8002810	0	True				
ANR	8002873	AssignmentExpression	error = FT_THROW ( Invalid_Face_Handle )		8002810	0		=			
ANR	8002874	Identifier	error		8002810	0					
ANR	8002875	CallExpression	FT_THROW ( Invalid_Face_Handle )		8002810	1					
ANR	8002876	Callee	FT_THROW		8002810	0					
ANR	8002877	Identifier	FT_THROW		8002810	0					
ANR	8002878	ArgumentList	Invalid_Face_Handle		8002810	1					
ANR	8002879	Argument	Invalid_Face_Handle		8002810	0					
ANR	8002880	Identifier	Invalid_Face_Handle		8002810	0					
ANR	8002881	GotoStatement	goto Exit ;	504:6:12628:12637	8002810	1	True				
ANR	8002882	Identifier	Exit		8002810	0					
ANR	8002883	IfStatement	if ( glyph_index >= ( FT_UInt ) face -> root . num_glyphs )		8002810	8					
ANR	8002884	Condition	glyph_index >= ( FT_UInt ) face -> root . num_glyphs	507:9:12655:12699	8002810	0	True				
ANR	8002885	RelationalExpression	glyph_index >= ( FT_UInt ) face -> root . num_glyphs		8002810	0		>=			
ANR	8002886	Identifier	glyph_index		8002810	0					
ANR	8002887	CastExpression	( FT_UInt ) face -> root . num_glyphs		8002810	1					
ANR	8002888	CastTarget	FT_UInt		8002810	0					
ANR	8002889	MemberAccess	face -> root . num_glyphs		8002810	1					
ANR	8002890	PtrMemberAccess	face -> root		8002810	0					
ANR	8002891	Identifier	face		8002810	0					
ANR	8002892	Identifier	root		8002810	1					
ANR	8002893	Identifier	num_glyphs		8002810	1					
ANR	8002894	CompoundStatement		19:4:431:431	8002810	1					
ANR	8002895	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	509:6:12715:12751	8002810	0	True				
ANR	8002896	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		8002810	0		=			
ANR	8002897	Identifier	error		8002810	0					
ANR	8002898	CallExpression	FT_THROW ( Invalid_Argument )		8002810	1					
ANR	8002899	Callee	FT_THROW		8002810	0					
ANR	8002900	Identifier	FT_THROW		8002810	0					
ANR	8002901	ArgumentList	Invalid_Argument		8002810	1					
ANR	8002902	Argument	Invalid_Argument		8002810	0					
ANR	8002903	Identifier	Invalid_Argument		8002810	0					
ANR	8002904	GotoStatement	goto Exit ;	510:6:12759:12768	8002810	1	True				
ANR	8002905	Identifier	Exit		8002810	0					
ANR	8002906	ExpressionStatement	stream = face -> root . stream	513:4:12781:12807	8002810	9	True				
ANR	8002907	AssignmentExpression	stream = face -> root . stream		8002810	0		=			
ANR	8002908	Identifier	stream		8002810	0					
ANR	8002909	MemberAccess	face -> root . stream		8002810	1					
ANR	8002910	PtrMemberAccess	face -> root		8002810	0					
ANR	8002911	Identifier	face		8002810	0					
ANR	8002912	Identifier	root		8002810	1					
ANR	8002913	Identifier	stream		8002810	1					
ANR	8002914	IfStatement	if ( glyph_index > 0 )		8002810	10					
ANR	8002915	Condition	glyph_index > 0	515:9:12819:12833	8002810	0	True				
ANR	8002916	RelationalExpression	glyph_index > 0		8002810	0		>			
ANR	8002917	Identifier	glyph_index		8002810	0					
ANR	8002918	PrimaryExpression	0		8002810	1					
ANR	8002919	ExpressionStatement	glyph_index --	516:6:12843:12856	8002810	1	True				
ANR	8002920	PostIncDecOperationExpression	glyph_index --		8002810	0					
ANR	8002921	Identifier	glyph_index		8002810	0					
ANR	8002922	IncDec	--		8002810	1					
ANR	8002923	ExpressionStatement	metric = face -> metrics + glyph_index	518:4:12863:12899	8002810	11	True				
ANR	8002924	AssignmentExpression	metric = face -> metrics + glyph_index		8002810	0		=			
ANR	8002925	Identifier	metric		8002810	0					
ANR	8002926	AdditiveExpression	face -> metrics + glyph_index		8002810	1		+			
ANR	8002927	PtrMemberAccess	face -> metrics		8002810	0					
ANR	8002928	Identifier	face		8002810	0					
ANR	8002929	Identifier	metrics		8002810	1					
ANR	8002930	Identifier	glyph_index		8002810	1					
ANR	8002931	ExpressionStatement	bitmap -> rows = ( unsigned int ) ( metric -> ascent + metric -> descent )	520:4:12906:13018	8002810	12	True				
ANR	8002932	AssignmentExpression	bitmap -> rows = ( unsigned int ) ( metric -> ascent + metric -> descent )		8002810	0		=			
ANR	8002933	PtrMemberAccess	bitmap -> rows		8002810	0					
ANR	8002934	Identifier	bitmap		8002810	0					
ANR	8002935	Identifier	rows		8002810	1					
ANR	8002936	CastExpression	( unsigned int ) ( metric -> ascent + metric -> descent )		8002810	1					
ANR	8002937	CastTarget	unsigned int		8002810	0					
ANR	8002938	AdditiveExpression	metric -> ascent + metric -> descent		8002810	1		+			
ANR	8002939	PtrMemberAccess	metric -> ascent		8002810	0					
ANR	8002940	Identifier	metric		8002810	0					
ANR	8002941	Identifier	ascent		8002810	1					
ANR	8002942	PtrMemberAccess	metric -> descent		8002810	1					
ANR	8002943	Identifier	metric		8002810	0					
ANR	8002944	Identifier	descent		8002810	1					
ANR	8002945	ExpressionStatement	bitmap -> width = ( unsigned int ) ( metric -> rightSideBearing - metric -> leftSideBearing )	522:4:13024:13154	8002810	13	True				
ANR	8002946	AssignmentExpression	bitmap -> width = ( unsigned int ) ( metric -> rightSideBearing - metric -> leftSideBearing )		8002810	0		=			
ANR	8002947	PtrMemberAccess	bitmap -> width		8002810	0					
ANR	8002948	Identifier	bitmap		8002810	0					
ANR	8002949	Identifier	width		8002810	1					
ANR	8002950	CastExpression	( unsigned int ) ( metric -> rightSideBearing - metric -> leftSideBearing )		8002810	1					
ANR	8002951	CastTarget	unsigned int		8002810	0					
ANR	8002952	AdditiveExpression	metric -> rightSideBearing - metric -> leftSideBearing		8002810	1		-			
ANR	8002953	PtrMemberAccess	metric -> rightSideBearing		8002810	0					
ANR	8002954	Identifier	metric		8002810	0					
ANR	8002955	Identifier	rightSideBearing		8002810	1					
ANR	8002956	PtrMemberAccess	metric -> leftSideBearing		8002810	1					
ANR	8002957	Identifier	metric		8002810	0					
ANR	8002958	Identifier	leftSideBearing		8002810	1					
ANR	8002959	ExpressionStatement	bitmap -> num_grays = 1	524:4:13160:13182	8002810	14	True				
ANR	8002960	AssignmentExpression	bitmap -> num_grays = 1		8002810	0		=			
ANR	8002961	PtrMemberAccess	bitmap -> num_grays		8002810	0					
ANR	8002962	Identifier	bitmap		8002810	0					
ANR	8002963	Identifier	num_grays		8002810	1					
ANR	8002964	PrimaryExpression	1		8002810	1					
ANR	8002965	ExpressionStatement	bitmap -> pixel_mode = FT_PIXEL_MODE_MONO	525:4:13188:13227	8002810	15	True				
ANR	8002966	AssignmentExpression	bitmap -> pixel_mode = FT_PIXEL_MODE_MONO		8002810	0		=			
ANR	8002967	PtrMemberAccess	bitmap -> pixel_mode		8002810	0					
ANR	8002968	Identifier	bitmap		8002810	0					
ANR	8002969	Identifier	pixel_mode		8002810	1					
ANR	8002970	Identifier	FT_PIXEL_MODE_MONO		8002810	1					
ANR	8002971	SwitchStatement	switch ( PCF_GLYPH_PAD ( face -> bitmapsFormat ) )		8002810	16					
ANR	8002972	Condition	PCF_GLYPH_PAD ( face -> bitmapsFormat )	527:13:13243:13278	8002810	0	True				
ANR	8002973	CallExpression	PCF_GLYPH_PAD ( face -> bitmapsFormat )		8002810	0					
ANR	8002974	Callee	PCF_GLYPH_PAD		8002810	0					
ANR	8002975	Identifier	PCF_GLYPH_PAD		8002810	0					
ANR	8002976	ArgumentList	face -> bitmapsFormat		8002810	1					
ANR	8002977	Argument	face -> bitmapsFormat		8002810	0					
ANR	8002978	PtrMemberAccess	face -> bitmapsFormat		8002810	0					
ANR	8002979	Identifier	face		8002810	0					
ANR	8002980	Identifier	bitmapsFormat		8002810	1					
ANR	8002981	CompoundStatement		39:4:1010:1010	8002810	1					
ANR	8002982	Label	case 1 :	529:4:13292:13298	8002810	0	True				
ANR	8002983	ExpressionStatement	bitmap -> pitch = ( int ) ( ( bitmap -> width + 7 ) >> 3 )	530:6:13306:13357	8002810	1	True				
ANR	8002984	AssignmentExpression	bitmap -> pitch = ( int ) ( ( bitmap -> width + 7 ) >> 3 )		8002810	0		=			
ANR	8002985	PtrMemberAccess	bitmap -> pitch		8002810	0					
ANR	8002986	Identifier	bitmap		8002810	0					
ANR	8002987	Identifier	pitch		8002810	1					
ANR	8002988	CastExpression	( int ) ( ( bitmap -> width + 7 ) >> 3 )		8002810	1					
ANR	8002989	CastTarget	int		8002810	0					
ANR	8002990	ShiftExpression	( bitmap -> width + 7 ) >> 3		8002810	1		>>			
ANR	8002991	AdditiveExpression	bitmap -> width + 7		8002810	0		+			
ANR	8002992	PtrMemberAccess	bitmap -> width		8002810	0					
ANR	8002993	Identifier	bitmap		8002810	0					
ANR	8002994	Identifier	width		8002810	1					
ANR	8002995	PrimaryExpression	7		8002810	1					
ANR	8002996	PrimaryExpression	3		8002810	1					
ANR	8002997	BreakStatement	break ;	531:6:13365:13370	8002810	2	True				
ANR	8002998	Label	case 2 :	533:4:13377:13383	8002810	3	True				
ANR	8002999	ExpressionStatement	bitmap -> pitch = ( int ) ( ( ( bitmap -> width + 15 ) >> 4 ) << 1 )	534:6:13391:13452	8002810	4	True				
ANR	8003000	AssignmentExpression	bitmap -> pitch = ( int ) ( ( ( bitmap -> width + 15 ) >> 4 ) << 1 )		8002810	0		=			
ANR	8003001	PtrMemberAccess	bitmap -> pitch		8002810	0					
ANR	8003002	Identifier	bitmap		8002810	0					
ANR	8003003	Identifier	pitch		8002810	1					
ANR	8003004	CastExpression	( int ) ( ( ( bitmap -> width + 15 ) >> 4 ) << 1 )		8002810	1					
ANR	8003005	CastTarget	int		8002810	0					
ANR	8003006	ShiftExpression	( ( bitmap -> width + 15 ) >> 4 ) << 1		8002810	1		<<			
ANR	8003007	ShiftExpression	( bitmap -> width + 15 ) >> 4		8002810	0		>>			
ANR	8003008	AdditiveExpression	bitmap -> width + 15		8002810	0		+			
ANR	8003009	PtrMemberAccess	bitmap -> width		8002810	0					
ANR	8003010	Identifier	bitmap		8002810	0					
ANR	8003011	Identifier	width		8002810	1					
ANR	8003012	PrimaryExpression	15		8002810	1					
ANR	8003013	PrimaryExpression	4		8002810	1					
ANR	8003014	PrimaryExpression	1		8002810	1					
ANR	8003015	BreakStatement	break ;	535:6:13460:13465	8002810	5	True				
ANR	8003016	Label	case 4 :	537:4:13472:13478	8002810	6	True				
ANR	8003017	ExpressionStatement	bitmap -> pitch = ( int ) ( ( ( bitmap -> width + 31 ) >> 5 ) << 2 )	538:6:13486:13547	8002810	7	True				
ANR	8003018	AssignmentExpression	bitmap -> pitch = ( int ) ( ( ( bitmap -> width + 31 ) >> 5 ) << 2 )		8002810	0		=			
ANR	8003019	PtrMemberAccess	bitmap -> pitch		8002810	0					
ANR	8003020	Identifier	bitmap		8002810	0					
ANR	8003021	Identifier	pitch		8002810	1					
ANR	8003022	CastExpression	( int ) ( ( ( bitmap -> width + 31 ) >> 5 ) << 2 )		8002810	1					
ANR	8003023	CastTarget	int		8002810	0					
ANR	8003024	ShiftExpression	( ( bitmap -> width + 31 ) >> 5 ) << 2		8002810	1		<<			
ANR	8003025	ShiftExpression	( bitmap -> width + 31 ) >> 5		8002810	0		>>			
ANR	8003026	AdditiveExpression	bitmap -> width + 31		8002810	0		+			
ANR	8003027	PtrMemberAccess	bitmap -> width		8002810	0					
ANR	8003028	Identifier	bitmap		8002810	0					
ANR	8003029	Identifier	width		8002810	1					
ANR	8003030	PrimaryExpression	31		8002810	1					
ANR	8003031	PrimaryExpression	5		8002810	1					
ANR	8003032	PrimaryExpression	2		8002810	1					
ANR	8003033	BreakStatement	break ;	539:6:13555:13560	8002810	8	True				
ANR	8003034	Label	case 8 :	541:4:13567:13573	8002810	9	True				
ANR	8003035	ExpressionStatement	bitmap -> pitch = ( int ) ( ( ( bitmap -> width + 63 ) >> 6 ) << 3 )	542:6:13581:13642	8002810	10	True				
ANR	8003036	AssignmentExpression	bitmap -> pitch = ( int ) ( ( ( bitmap -> width + 63 ) >> 6 ) << 3 )		8002810	0		=			
ANR	8003037	PtrMemberAccess	bitmap -> pitch		8002810	0					
ANR	8003038	Identifier	bitmap		8002810	0					
ANR	8003039	Identifier	pitch		8002810	1					
ANR	8003040	CastExpression	( int ) ( ( ( bitmap -> width + 63 ) >> 6 ) << 3 )		8002810	1					
ANR	8003041	CastTarget	int		8002810	0					
ANR	8003042	ShiftExpression	( ( bitmap -> width + 63 ) >> 6 ) << 3		8002810	1		<<			
ANR	8003043	ShiftExpression	( bitmap -> width + 63 ) >> 6		8002810	0		>>			
ANR	8003044	AdditiveExpression	bitmap -> width + 63		8002810	0		+			
ANR	8003045	PtrMemberAccess	bitmap -> width		8002810	0					
ANR	8003046	Identifier	bitmap		8002810	0					
ANR	8003047	Identifier	width		8002810	1					
ANR	8003048	PrimaryExpression	63		8002810	1					
ANR	8003049	PrimaryExpression	6		8002810	1					
ANR	8003050	PrimaryExpression	3		8002810	1					
ANR	8003051	BreakStatement	break ;	543:6:13650:13655	8002810	11	True				
ANR	8003052	Label	default :	545:4:13662:13669	8002810	12	True				
ANR	8003053	Identifier	default		8002810	0					
ANR	8003054	ReturnStatement	return FT_THROW ( Invalid_File_Format ) ;	546:6:13677:13715	8002810	13	True				
ANR	8003055	CallExpression	FT_THROW ( Invalid_File_Format )		8002810	0					
ANR	8003056	Callee	FT_THROW		8002810	0					
ANR	8003057	Identifier	FT_THROW		8002810	0					
ANR	8003058	ArgumentList	Invalid_File_Format		8002810	1					
ANR	8003059	Argument	Invalid_File_Format		8002810	0					
ANR	8003060	Identifier	Invalid_File_Format		8002810	0					
ANR	8003061	ExpressionStatement	slot -> format = FT_GLYPH_FORMAT_BITMAP	549:4:13728:13770	8002810	17	True				
ANR	8003062	AssignmentExpression	slot -> format = FT_GLYPH_FORMAT_BITMAP		8002810	0		=			
ANR	8003063	PtrMemberAccess	slot -> format		8002810	0					
ANR	8003064	Identifier	slot		8002810	0					
ANR	8003065	Identifier	format		8002810	1					
ANR	8003066	Identifier	FT_GLYPH_FORMAT_BITMAP		8002810	1					
ANR	8003067	ExpressionStatement	slot -> bitmap_left = metric -> leftSideBearing	550:4:13776:13819	8002810	18	True				
ANR	8003068	AssignmentExpression	slot -> bitmap_left = metric -> leftSideBearing		8002810	0		=			
ANR	8003069	PtrMemberAccess	slot -> bitmap_left		8002810	0					
ANR	8003070	Identifier	slot		8002810	0					
ANR	8003071	Identifier	bitmap_left		8002810	1					
ANR	8003072	PtrMemberAccess	metric -> leftSideBearing		8002810	1					
ANR	8003073	Identifier	metric		8002810	0					
ANR	8003074	Identifier	leftSideBearing		8002810	1					
ANR	8003075	ExpressionStatement	slot -> bitmap_top = metric -> ascent	551:4:13825:13859	8002810	19	True				
ANR	8003076	AssignmentExpression	slot -> bitmap_top = metric -> ascent		8002810	0		=			
ANR	8003077	PtrMemberAccess	slot -> bitmap_top		8002810	0					
ANR	8003078	Identifier	slot		8002810	0					
ANR	8003079	Identifier	bitmap_top		8002810	1					
ANR	8003080	PtrMemberAccess	metric -> ascent		8002810	1					
ANR	8003081	Identifier	metric		8002810	0					
ANR	8003082	Identifier	ascent		8002810	1					
ANR	8003083	ExpressionStatement	slot -> metrics . horiAdvance = ( FT_Pos ) ( metric -> characterWidth * 64 )	553:4:13866:13934	8002810	20	True				
ANR	8003084	AssignmentExpression	slot -> metrics . horiAdvance = ( FT_Pos ) ( metric -> characterWidth * 64 )		8002810	0		=			
ANR	8003085	MemberAccess	slot -> metrics . horiAdvance		8002810	0					
ANR	8003086	PtrMemberAccess	slot -> metrics		8002810	0					
ANR	8003087	Identifier	slot		8002810	0					
ANR	8003088	Identifier	metrics		8002810	1					
ANR	8003089	Identifier	horiAdvance		8002810	1					
ANR	8003090	CastExpression	( FT_Pos ) ( metric -> characterWidth * 64 )		8002810	1					
ANR	8003091	CastTarget	FT_Pos		8002810	0					
ANR	8003092	MultiplicativeExpression	metric -> characterWidth * 64		8002810	1		*			
ANR	8003093	PtrMemberAccess	metric -> characterWidth		8002810	0					
ANR	8003094	Identifier	metric		8002810	0					
ANR	8003095	Identifier	characterWidth		8002810	1					
ANR	8003096	PrimaryExpression	64		8002810	1					
ANR	8003097	ExpressionStatement	slot -> metrics . horiBearingX = ( FT_Pos ) ( metric -> leftSideBearing * 64 )	554:4:13940:14009	8002810	21	True				
ANR	8003098	AssignmentExpression	slot -> metrics . horiBearingX = ( FT_Pos ) ( metric -> leftSideBearing * 64 )		8002810	0		=			
ANR	8003099	MemberAccess	slot -> metrics . horiBearingX		8002810	0					
ANR	8003100	PtrMemberAccess	slot -> metrics		8002810	0					
ANR	8003101	Identifier	slot		8002810	0					
ANR	8003102	Identifier	metrics		8002810	1					
ANR	8003103	Identifier	horiBearingX		8002810	1					
ANR	8003104	CastExpression	( FT_Pos ) ( metric -> leftSideBearing * 64 )		8002810	1					
ANR	8003105	CastTarget	FT_Pos		8002810	0					
ANR	8003106	MultiplicativeExpression	metric -> leftSideBearing * 64		8002810	1		*			
ANR	8003107	PtrMemberAccess	metric -> leftSideBearing		8002810	0					
ANR	8003108	Identifier	metric		8002810	0					
ANR	8003109	Identifier	leftSideBearing		8002810	1					
ANR	8003110	PrimaryExpression	64		8002810	1					
ANR	8003111	ExpressionStatement	slot -> metrics . horiBearingY = ( FT_Pos ) ( metric -> ascent * 64 )	555:4:14015:14075	8002810	22	True				
ANR	8003112	AssignmentExpression	slot -> metrics . horiBearingY = ( FT_Pos ) ( metric -> ascent * 64 )		8002810	0		=			
ANR	8003113	MemberAccess	slot -> metrics . horiBearingY		8002810	0					
ANR	8003114	PtrMemberAccess	slot -> metrics		8002810	0					
ANR	8003115	Identifier	slot		8002810	0					
ANR	8003116	Identifier	metrics		8002810	1					
ANR	8003117	Identifier	horiBearingY		8002810	1					
ANR	8003118	CastExpression	( FT_Pos ) ( metric -> ascent * 64 )		8002810	1					
ANR	8003119	CastTarget	FT_Pos		8002810	0					
ANR	8003120	MultiplicativeExpression	metric -> ascent * 64		8002810	1		*			
ANR	8003121	PtrMemberAccess	metric -> ascent		8002810	0					
ANR	8003122	Identifier	metric		8002810	0					
ANR	8003123	Identifier	ascent		8002810	1					
ANR	8003124	PrimaryExpression	64		8002810	1					
ANR	8003125	ExpressionStatement	slot -> metrics . width = ( FT_Pos ) ( ( metric -> rightSideBearing - metric -> leftSideBearing ) * 64 )	556:4:14081:14226	8002810	23	True				
ANR	8003126	AssignmentExpression	slot -> metrics . width = ( FT_Pos ) ( ( metric -> rightSideBearing - metric -> leftSideBearing ) * 64 )		8002810	0		=			
ANR	8003127	MemberAccess	slot -> metrics . width		8002810	0					
ANR	8003128	PtrMemberAccess	slot -> metrics		8002810	0					
ANR	8003129	Identifier	slot		8002810	0					
ANR	8003130	Identifier	metrics		8002810	1					
ANR	8003131	Identifier	width		8002810	1					
ANR	8003132	CastExpression	( FT_Pos ) ( ( metric -> rightSideBearing - metric -> leftSideBearing ) * 64 )		8002810	1					
ANR	8003133	CastTarget	FT_Pos		8002810	0					
ANR	8003134	MultiplicativeExpression	( metric -> rightSideBearing - metric -> leftSideBearing ) * 64		8002810	1		*			
ANR	8003135	AdditiveExpression	metric -> rightSideBearing - metric -> leftSideBearing		8002810	0		-			
ANR	8003136	PtrMemberAccess	metric -> rightSideBearing		8002810	0					
ANR	8003137	Identifier	metric		8002810	0					
ANR	8003138	Identifier	rightSideBearing		8002810	1					
ANR	8003139	PtrMemberAccess	metric -> leftSideBearing		8002810	1					
ANR	8003140	Identifier	metric		8002810	0					
ANR	8003141	Identifier	leftSideBearing		8002810	1					
ANR	8003142	PrimaryExpression	64		8002810	1					
ANR	8003143	ExpressionStatement	slot -> metrics . height = ( FT_Pos ) ( bitmap -> rows * 64 )	558:4:14232:14290	8002810	24	True				
ANR	8003144	AssignmentExpression	slot -> metrics . height = ( FT_Pos ) ( bitmap -> rows * 64 )		8002810	0		=			
ANR	8003145	MemberAccess	slot -> metrics . height		8002810	0					
ANR	8003146	PtrMemberAccess	slot -> metrics		8002810	0					
ANR	8003147	Identifier	slot		8002810	0					
ANR	8003148	Identifier	metrics		8002810	1					
ANR	8003149	Identifier	height		8002810	1					
ANR	8003150	CastExpression	( FT_Pos ) ( bitmap -> rows * 64 )		8002810	1					
ANR	8003151	CastTarget	FT_Pos		8002810	0					
ANR	8003152	MultiplicativeExpression	bitmap -> rows * 64		8002810	1		*			
ANR	8003153	PtrMemberAccess	bitmap -> rows		8002810	0					
ANR	8003154	Identifier	bitmap		8002810	0					
ANR	8003155	Identifier	rows		8002810	1					
ANR	8003156	PrimaryExpression	64		8002810	1					
ANR	8003157	ExpressionStatement	"ft_synthesize_vertical_metrics ( & slot -> metrics , ( face -> accel . fontAscent + face -> accel . fontDescent ) * 64 )"	560:4:14297:14478	8002810	25	True				
ANR	8003158	CallExpression	"ft_synthesize_vertical_metrics ( & slot -> metrics , ( face -> accel . fontAscent + face -> accel . fontDescent ) * 64 )"		8002810	0					
ANR	8003159	Callee	ft_synthesize_vertical_metrics		8002810	0					
ANR	8003160	Identifier	ft_synthesize_vertical_metrics		8002810	0					
ANR	8003161	ArgumentList	& slot -> metrics		8002810	1					
ANR	8003162	Argument	& slot -> metrics		8002810	0					
ANR	8003163	UnaryOperationExpression	& slot -> metrics		8002810	0					
ANR	8003164	UnaryOperator	&		8002810	0					
ANR	8003165	PtrMemberAccess	slot -> metrics		8002810	1					
ANR	8003166	Identifier	slot		8002810	0					
ANR	8003167	Identifier	metrics		8002810	1					
ANR	8003168	Argument	( face -> accel . fontAscent + face -> accel . fontDescent ) * 64		8002810	1					
ANR	8003169	MultiplicativeExpression	( face -> accel . fontAscent + face -> accel . fontDescent ) * 64		8002810	0		*			
ANR	8003170	AdditiveExpression	face -> accel . fontAscent + face -> accel . fontDescent		8002810	0		+			
ANR	8003171	MemberAccess	face -> accel . fontAscent		8002810	0					
ANR	8003172	PtrMemberAccess	face -> accel		8002810	0					
ANR	8003173	Identifier	face		8002810	0					
ANR	8003174	Identifier	accel		8002810	1					
ANR	8003175	Identifier	fontAscent		8002810	1					
ANR	8003176	MemberAccess	face -> accel . fontDescent		8002810	1					
ANR	8003177	PtrMemberAccess	face -> accel		8002810	0					
ANR	8003178	Identifier	face		8002810	0					
ANR	8003179	Identifier	accel		8002810	1					
ANR	8003180	Identifier	fontDescent		8002810	1					
ANR	8003181	PrimaryExpression	64		8002810	1					
ANR	8003182	IfStatement	if ( load_flags & FT_LOAD_BITMAP_METRICS_ONLY )		8002810	26					
ANR	8003183	Condition	load_flags & FT_LOAD_BITMAP_METRICS_ONLY	564:9:14490:14529	8002810	0	True				
ANR	8003184	BitAndExpression	load_flags & FT_LOAD_BITMAP_METRICS_ONLY		8002810	0		&			
ANR	8003185	Identifier	load_flags		8002810	0					
ANR	8003186	Identifier	FT_LOAD_BITMAP_METRICS_ONLY		8002810	1					
ANR	8003187	GotoStatement	goto Exit ;	565:6:14539:14548	8002810	1	True				
ANR	8003188	Identifier	Exit		8002810	0					
ANR	8003189	ExpressionStatement	bytes = ( FT_ULong ) bitmap -> pitch * bitmap -> rows	568:4:14625:14671	8002810	27	True				
ANR	8003190	AssignmentExpression	bytes = ( FT_ULong ) bitmap -> pitch * bitmap -> rows		8002810	0		=			
ANR	8003191	Identifier	bytes		8002810	0					
ANR	8003192	MultiplicativeExpression	( FT_ULong ) bitmap -> pitch * bitmap -> rows		8002810	1		*			
ANR	8003193	CastExpression	( FT_ULong ) bitmap -> pitch		8002810	0					
ANR	8003194	CastTarget	FT_ULong		8002810	0					
ANR	8003195	PtrMemberAccess	bitmap -> pitch		8002810	1					
ANR	8003196	Identifier	bitmap		8002810	0					
ANR	8003197	Identifier	pitch		8002810	1					
ANR	8003198	PtrMemberAccess	bitmap -> rows		8002810	1					
ANR	8003199	Identifier	bitmap		8002810	0					
ANR	8003200	Identifier	rows		8002810	1					
ANR	8003201	ExpressionStatement	"error = ft_glyphslot_alloc_bitmap ( slot , ( FT_ULong ) bytes )"	570:4:14678:14736	8002810	28	True				
ANR	8003202	AssignmentExpression	"error = ft_glyphslot_alloc_bitmap ( slot , ( FT_ULong ) bytes )"		8002810	0		=			
ANR	8003203	Identifier	error		8002810	0					
ANR	8003204	CallExpression	"ft_glyphslot_alloc_bitmap ( slot , ( FT_ULong ) bytes )"		8002810	1					
ANR	8003205	Callee	ft_glyphslot_alloc_bitmap		8002810	0					
ANR	8003206	Identifier	ft_glyphslot_alloc_bitmap		8002810	0					
ANR	8003207	ArgumentList	slot		8002810	1					
ANR	8003208	Argument	slot		8002810	0					
ANR	8003209	Identifier	slot		8002810	0					
ANR	8003210	Argument	( FT_ULong ) bytes		8002810	1					
ANR	8003211	CastExpression	( FT_ULong ) bytes		8002810	0					
ANR	8003212	CastTarget	FT_ULong		8002810	0					
ANR	8003213	Identifier	bytes		8002810	1					
ANR	8003214	IfStatement	if ( error )		8002810	29					
ANR	8003215	Condition	error	571:9:14747:14751	8002810	0	True				
ANR	8003216	Identifier	error		8002810	0					
ANR	8003217	GotoStatement	goto Exit ;	572:6:14761:14770	8002810	1	True				
ANR	8003218	Identifier	Exit		8002810	0					
ANR	8003219	IfStatement	"if ( FT_STREAM_SEEK ( metric -> bits ) || FT_STREAM_READ ( bitmap -> buffer , bytes ) )"		8002810	30					
ANR	8003220	Condition	"FT_STREAM_SEEK ( metric -> bits ) || FT_STREAM_READ ( bitmap -> buffer , bytes )"	574:9:14782:14872	8002810	0	True				
ANR	8003221	OrExpression	"FT_STREAM_SEEK ( metric -> bits ) || FT_STREAM_READ ( bitmap -> buffer , bytes )"		8002810	0		||			
ANR	8003222	CallExpression	FT_STREAM_SEEK ( metric -> bits )		8002810	0					
ANR	8003223	Callee	FT_STREAM_SEEK		8002810	0					
ANR	8003224	Identifier	FT_STREAM_SEEK		8002810	0					
ANR	8003225	ArgumentList	metric -> bits		8002810	1					
ANR	8003226	Argument	metric -> bits		8002810	0					
ANR	8003227	PtrMemberAccess	metric -> bits		8002810	0					
ANR	8003228	Identifier	metric		8002810	0					
ANR	8003229	Identifier	bits		8002810	1					
ANR	8003230	CallExpression	"FT_STREAM_READ ( bitmap -> buffer , bytes )"		8002810	1					
ANR	8003231	Callee	FT_STREAM_READ		8002810	0					
ANR	8003232	Identifier	FT_STREAM_READ		8002810	0					
ANR	8003233	ArgumentList	bitmap -> buffer		8002810	1					
ANR	8003234	Argument	bitmap -> buffer		8002810	0					
ANR	8003235	PtrMemberAccess	bitmap -> buffer		8002810	0					
ANR	8003236	Identifier	bitmap		8002810	0					
ANR	8003237	Identifier	buffer		8002810	1					
ANR	8003238	Argument	bytes		8002810	1					
ANR	8003239	Identifier	bytes		8002810	0					
ANR	8003240	GotoStatement	goto Exit ;	576:6:14882:14891	8002810	1	True				
ANR	8003241	Identifier	Exit		8002810	0					
ANR	8003242	IfStatement	if ( PCF_BIT_ORDER ( face -> bitmapsFormat ) != MSBFirst )		8002810	31					
ANR	8003243	Condition	PCF_BIT_ORDER ( face -> bitmapsFormat ) != MSBFirst	578:9:14903:14950	8002810	0	True				
ANR	8003244	EqualityExpression	PCF_BIT_ORDER ( face -> bitmapsFormat ) != MSBFirst		8002810	0		!=			
ANR	8003245	CallExpression	PCF_BIT_ORDER ( face -> bitmapsFormat )		8002810	0					
ANR	8003246	Callee	PCF_BIT_ORDER		8002810	0					
ANR	8003247	Identifier	PCF_BIT_ORDER		8002810	0					
ANR	8003248	ArgumentList	face -> bitmapsFormat		8002810	1					
ANR	8003249	Argument	face -> bitmapsFormat		8002810	0					
ANR	8003250	PtrMemberAccess	face -> bitmapsFormat		8002810	0					
ANR	8003251	Identifier	face		8002810	0					
ANR	8003252	Identifier	bitmapsFormat		8002810	1					
ANR	8003253	Identifier	MSBFirst		8002810	1					
ANR	8003254	ExpressionStatement	"BitOrderInvert ( bitmap -> buffer , bytes )"	579:6:14960:14999	8002810	1	True				
ANR	8003255	CallExpression	"BitOrderInvert ( bitmap -> buffer , bytes )"		8002810	0					
ANR	8003256	Callee	BitOrderInvert		8002810	0					
ANR	8003257	Identifier	BitOrderInvert		8002810	0					
ANR	8003258	ArgumentList	bitmap -> buffer		8002810	1					
ANR	8003259	Argument	bitmap -> buffer		8002810	0					
ANR	8003260	PtrMemberAccess	bitmap -> buffer		8002810	0					
ANR	8003261	Identifier	bitmap		8002810	0					
ANR	8003262	Identifier	buffer		8002810	1					
ANR	8003263	Argument	bytes		8002810	1					
ANR	8003264	Identifier	bytes		8002810	0					
ANR	8003265	IfStatement	if ( ( PCF_BYTE_ORDER ( face -> bitmapsFormat ) != PCF_BIT_ORDER ( face -> bitmapsFormat ) ) )		8002810	32					
ANR	8003266	Condition	PCF_BYTE_ORDER ( face -> bitmapsFormat ) != PCF_BIT_ORDER ( face -> bitmapsFormat )	581:9:15011:15103	8002810	0	True				
ANR	8003267	EqualityExpression	PCF_BYTE_ORDER ( face -> bitmapsFormat ) != PCF_BIT_ORDER ( face -> bitmapsFormat )		8002810	0		!=			
ANR	8003268	CallExpression	PCF_BYTE_ORDER ( face -> bitmapsFormat )		8002810	0					
ANR	8003269	Callee	PCF_BYTE_ORDER		8002810	0					
ANR	8003270	Identifier	PCF_BYTE_ORDER		8002810	0					
ANR	8003271	ArgumentList	face -> bitmapsFormat		8002810	1					
ANR	8003272	Argument	face -> bitmapsFormat		8002810	0					
ANR	8003273	PtrMemberAccess	face -> bitmapsFormat		8002810	0					
ANR	8003274	Identifier	face		8002810	0					
ANR	8003275	Identifier	bitmapsFormat		8002810	1					
ANR	8003276	CallExpression	PCF_BIT_ORDER ( face -> bitmapsFormat )		8002810	1					
ANR	8003277	Callee	PCF_BIT_ORDER		8002810	0					
ANR	8003278	Identifier	PCF_BIT_ORDER		8002810	0					
ANR	8003279	ArgumentList	face -> bitmapsFormat		8002810	1					
ANR	8003280	Argument	face -> bitmapsFormat		8002810	0					
ANR	8003281	PtrMemberAccess	face -> bitmapsFormat		8002810	0					
ANR	8003282	Identifier	face		8002810	0					
ANR	8003283	Identifier	bitmapsFormat		8002810	1					
ANR	8003284	CompoundStatement		94:4:2835:2835	8002810	1					
ANR	8003285	SwitchStatement	switch ( PCF_SCAN_UNIT ( face -> bitmapsFormat ) )		8002810	0					
ANR	8003286	Condition	PCF_SCAN_UNIT ( face -> bitmapsFormat )	584:15:15128:15163	8002810	0	True				
ANR	8003287	CallExpression	PCF_SCAN_UNIT ( face -> bitmapsFormat )		8002810	0					
ANR	8003288	Callee	PCF_SCAN_UNIT		8002810	0					
ANR	8003289	Identifier	PCF_SCAN_UNIT		8002810	0					
ANR	8003290	ArgumentList	face -> bitmapsFormat		8002810	1					
ANR	8003291	Argument	face -> bitmapsFormat		8002810	0					
ANR	8003292	PtrMemberAccess	face -> bitmapsFormat		8002810	0					
ANR	8003293	Identifier	face		8002810	0					
ANR	8003294	Identifier	bitmapsFormat		8002810	1					
ANR	8003295	CompoundStatement		96:6:2897:2897	8002810	1					
ANR	8003296	Label	case 1 :	586:6:15181:15187	8002810	0	True				
ANR	8003297	BreakStatement	break ;	587:8:15197:15202	8002810	1	True				
ANR	8003298	Label	case 2 :	589:6:15211:15217	8002810	2	True				
ANR	8003299	ExpressionStatement	"TwoByteSwap ( bitmap -> buffer , bytes )"	590:8:15227:15263	8002810	3	True				
ANR	8003300	CallExpression	"TwoByteSwap ( bitmap -> buffer , bytes )"		8002810	0					
ANR	8003301	Callee	TwoByteSwap		8002810	0					
ANR	8003302	Identifier	TwoByteSwap		8002810	0					
ANR	8003303	ArgumentList	bitmap -> buffer		8002810	1					
ANR	8003304	Argument	bitmap -> buffer		8002810	0					
ANR	8003305	PtrMemberAccess	bitmap -> buffer		8002810	0					
ANR	8003306	Identifier	bitmap		8002810	0					
ANR	8003307	Identifier	buffer		8002810	1					
ANR	8003308	Argument	bytes		8002810	1					
ANR	8003309	Identifier	bytes		8002810	0					
ANR	8003310	BreakStatement	break ;	591:8:15273:15278	8002810	4	True				
ANR	8003311	Label	case 4 :	593:6:15287:15293	8002810	5	True				
ANR	8003312	ExpressionStatement	"FourByteSwap ( bitmap -> buffer , bytes )"	594:8:15303:15340	8002810	6	True				
ANR	8003313	CallExpression	"FourByteSwap ( bitmap -> buffer , bytes )"		8002810	0					
ANR	8003314	Callee	FourByteSwap		8002810	0					
ANR	8003315	Identifier	FourByteSwap		8002810	0					
ANR	8003316	ArgumentList	bitmap -> buffer		8002810	1					
ANR	8003317	Argument	bitmap -> buffer		8002810	0					
ANR	8003318	PtrMemberAccess	bitmap -> buffer		8002810	0					
ANR	8003319	Identifier	bitmap		8002810	0					
ANR	8003320	Identifier	buffer		8002810	1					
ANR	8003321	Argument	bytes		8002810	1					
ANR	8003322	Identifier	bytes		8002810	0					
ANR	8003323	BreakStatement	break ;	595:8:15350:15355	8002810	7	True				
ANR	8003324	Label	Exit :	599:2:15374:15378	8002810	33	True				
ANR	8003325	Identifier	Exit		8002810	0					
ANR	8003326	ReturnStatement	return error ;	600:4:15384:15396	8002810	34	True				
ANR	8003327	Identifier	error		8002810	0					
ANR	8003328	Identifier	PCF_Glyph_Load		8002810	1					
ANR	8003329	ParameterList	"FT_GlyphSlot slot , FT_Size size , FT_UInt glyph_index , FT_Int32 load_flags"		8002810	2					
ANR	8003330	Parameter	FT_GlyphSlot slot	486:18:12125:12142	8002810	0	True				
ANR	8003331	ParameterType	FT_GlyphSlot		8002810	0					
ANR	8003332	Identifier	slot		8002810	1					
ANR	8003333	Parameter	FT_Size size	487:18:12163:12180	8002810	1	True				
ANR	8003334	ParameterType	FT_Size		8002810	0					
ANR	8003335	Identifier	size		8002810	1					
ANR	8003336	Parameter	FT_UInt glyph_index	488:18:12201:12225	8002810	2	True				
ANR	8003337	ParameterType	FT_UInt		8002810	0					
ANR	8003338	Identifier	glyph_index		8002810	1					
ANR	8003339	Parameter	FT_Int32 load_flags	489:18:12246:12269	8002810	3	True				
ANR	8003340	ParameterType	FT_Int32		8002810	0					
ANR	8003341	Identifier	load_flags		8002810	1					
ANR	8003342	CFGEntryNode	ENTRY		8002810		True				
ANR	8003343	CFGExitNode	EXIT		8002810		True				
ANR	8003344	Symbol	bitmap -> buffer		8002810						
ANR	8003345	Symbol	glyph_index		8002810						
ANR	8003346	Symbol	FT_Err_Ok		8002810						
ANR	8003347	Symbol	face -> root . stream		8002810						
ANR	8003348	Symbol	PCF_GLYPH_PAD		8002810						
ANR	8003349	Symbol	slot -> metrics . width		8002810						
ANR	8003350	Symbol	* face		8002810						
ANR	8003351	Symbol	FT_PIXEL_MODE_MONO		8002810						
ANR	8003352	Symbol	slot -> bitmap_left		8002810						
ANR	8003353	Symbol	face -> metrics		8002810						
ANR	8003354	Symbol	* slot		8002810						
ANR	8003355	Symbol	PCF_BYTE_ORDER		8002810						
ANR	8003356	Symbol	* bitmap		8002810						
ANR	8003357	Symbol	slot -> metrics . horiAdvance		8002810						
ANR	8003358	Symbol	bitmap		8002810						
ANR	8003359	Symbol	face -> root		8002810						
ANR	8003360	Symbol	FT_GLYPH_FORMAT_BITMAP		8002810						
ANR	8003361	Symbol	slot -> metrics		8002810						
ANR	8003362	Symbol	* metric		8002810						
ANR	8003363	Symbol	metric -> rightSideBearing		8002810						
ANR	8003364	Symbol	Invalid_Face_Handle		8002810						
ANR	8003365	Symbol	metric -> characterWidth		8002810						
ANR	8003366	Symbol	FT_STREAM_READ		8002810						
ANR	8003367	Symbol	slot -> bitmap_top		8002810						
ANR	8003368	Symbol	& slot -> metrics		8002810						
ANR	8003369	Symbol	PCF_SCAN_UNIT		8002810						
ANR	8003370	Symbol	size		8002810						
ANR	8003371	Symbol	ft_glyphslot_alloc_bitmap		8002810						
ANR	8003372	Symbol	load_flags		8002810						
ANR	8003373	Symbol	Invalid_File_Format		8002810						
ANR	8003374	Symbol	metric -> descent		8002810						
ANR	8003375	Symbol	MSBFirst		8002810						
ANR	8003376	Symbol	face -> accel . fontAscent		8002810						
ANR	8003377	Symbol	FT_STREAM_SEEK		8002810						
ANR	8003378	Symbol	bitmap -> num_grays		8002810						
ANR	8003379	Symbol	slot		8002810						
ANR	8003380	Symbol	error		8002810						
ANR	8003381	Symbol	metric -> bits		8002810						
ANR	8003382	Symbol	face -> root . num_glyphs		8002810						
ANR	8003383	Symbol	slot -> format		8002810						
ANR	8003384	Symbol	stream		8002810						
ANR	8003385	Symbol	metric -> ascent		8002810						
ANR	8003386	Symbol	bitmap -> rows		8002810						
ANR	8003387	Symbol	face -> accel . fontDescent		8002810						
ANR	8003388	Symbol	metric -> leftSideBearing		8002810						
ANR	8003389	Symbol	FT_SIZE_FACE		8002810						
ANR	8003390	Symbol	bitmap -> width		8002810						
ANR	8003391	Symbol	face -> accel		8002810						
ANR	8003392	Symbol	slot -> metrics . horiBearingX		8002810						
ANR	8003393	Symbol	Invalid_Argument		8002810						
ANR	8003394	Symbol	slot -> metrics . horiBearingY		8002810						
ANR	8003395	Symbol	PCF_BIT_ORDER		8002810						
ANR	8003396	Symbol	FT_THROW		8002810						
ANR	8003397	Symbol	bitmap -> pixel_mode		8002810						
ANR	8003398	Symbol	face -> bitmapsFormat		8002810						
ANR	8003399	Symbol	face		8002810						
ANR	8003400	Symbol	& slot -> bitmap		8002810						
ANR	8003401	Symbol	metric		8002810						
ANR	8003402	Symbol	bytes		8002810						
ANR	8003403	Symbol	FT_LOAD_BITMAP_METRICS_ONLY		8002810						
ANR	8003404	Symbol	slot -> metrics . height		8002810						
ANR	8003405	Symbol	bitmap -> pitch		8002810						
ANR	8003406	Function	pcf_get_bdf_property	610:2:15441:16525							
ANR	8003407	FunctionDef	"pcf_get_bdf_property (PCF_Face face , const char * prop_name , BDF_PropertyRec * aproperty)"		8003406	0					
ANR	8003408	CompoundStatement		614:2:15614:16525	8003406	0					
ANR	8003409	IdentifierDeclStatement	PCF_Property prop ;	615:4:15620:15638	8003406	0	True				
ANR	8003410	IdentifierDecl	prop		8003406	0					
ANR	8003411	IdentifierDeclType	PCF_Property		8003406	0					
ANR	8003412	Identifier	prop		8003406	1					
ANR	8003413	ExpressionStatement	"prop = pcf_find_property ( face , prop_name )"	618:4:15646:15689	8003406	1	True				
ANR	8003414	AssignmentExpression	"prop = pcf_find_property ( face , prop_name )"		8003406	0		=			
ANR	8003415	Identifier	prop		8003406	0					
ANR	8003416	CallExpression	"pcf_find_property ( face , prop_name )"		8003406	1					
ANR	8003417	Callee	pcf_find_property		8003406	0					
ANR	8003418	Identifier	pcf_find_property		8003406	0					
ANR	8003419	ArgumentList	face		8003406	1					
ANR	8003420	Argument	face		8003406	0					
ANR	8003421	Identifier	face		8003406	0					
ANR	8003422	Argument	prop_name		8003406	1					
ANR	8003423	Identifier	prop_name		8003406	0					
ANR	8003424	IfStatement	if ( prop )		8003406	2					
ANR	8003425	Condition	prop	619:9:15700:15703	8003406	0	True				
ANR	8003426	Identifier	prop		8003406	0					
ANR	8003427	CompoundStatement		7:4:96:96	8003406	1					
ANR	8003428	IfStatement	if ( prop -> isString )		8003406	0					
ANR	8003429	Condition	prop -> isString	621:11:15724:15737	8003406	0	True				
ANR	8003430	PtrMemberAccess	prop -> isString		8003406	0					
ANR	8003431	Identifier	prop		8003406	0					
ANR	8003432	Identifier	isString		8003406	1					
ANR	8003433	CompoundStatement		9:6:132:132	8003406	1					
ANR	8003434	ExpressionStatement	aproperty -> type = BDF_PROPERTY_TYPE_ATOM	623:8:15757:15799	8003406	0	True				
ANR	8003435	AssignmentExpression	aproperty -> type = BDF_PROPERTY_TYPE_ATOM		8003406	0		=			
ANR	8003436	PtrMemberAccess	aproperty -> type		8003406	0					
ANR	8003437	Identifier	aproperty		8003406	0					
ANR	8003438	Identifier	type		8003406	1					
ANR	8003439	Identifier	BDF_PROPERTY_TYPE_ATOM		8003406	1					
ANR	8003440	ExpressionStatement	aproperty -> u . atom = prop -> value . atom	624:8:15809:15845	8003406	1	True				
ANR	8003441	AssignmentExpression	aproperty -> u . atom = prop -> value . atom		8003406	0		=			
ANR	8003442	MemberAccess	aproperty -> u . atom		8003406	0					
ANR	8003443	PtrMemberAccess	aproperty -> u		8003406	0					
ANR	8003444	Identifier	aproperty		8003406	0					
ANR	8003445	Identifier	u		8003406	1					
ANR	8003446	Identifier	atom		8003406	1					
ANR	8003447	MemberAccess	prop -> value . atom		8003406	1					
ANR	8003448	PtrMemberAccess	prop -> value		8003406	0					
ANR	8003449	Identifier	prop		8003406	0					
ANR	8003450	Identifier	value		8003406	1					
ANR	8003451	Identifier	atom		8003406	1					
ANR	8003452	ElseStatement	else		8003406	0					
ANR	8003453	CompoundStatement		14:6:257:257	8003406	0					
ANR	8003454	IfStatement	if ( prop -> value . l > 0x7FFFFFFFL || prop -> value . l < ( - 1 - 0x7FFFFFFFL ) )		8003406	0					
ANR	8003455	Condition	prop -> value . l > 0x7FFFFFFFL || prop -> value . l < ( - 1 - 0x7FFFFFFFL )	628:13:15887:15975	8003406	0	True				
ANR	8003456	OrExpression	prop -> value . l > 0x7FFFFFFFL || prop -> value . l < ( - 1 - 0x7FFFFFFFL )		8003406	0		||			
ANR	8003457	RelationalExpression	prop -> value . l > 0x7FFFFFFFL		8003406	0		>			
ANR	8003458	MemberAccess	prop -> value . l		8003406	0					
ANR	8003459	PtrMemberAccess	prop -> value		8003406	0					
ANR	8003460	Identifier	prop		8003406	0					
ANR	8003461	Identifier	value		8003406	1					
ANR	8003462	Identifier	l		8003406	1					
ANR	8003463	PrimaryExpression	0x7FFFFFFFL		8003406	1					
ANR	8003464	RelationalExpression	prop -> value . l < ( - 1 - 0x7FFFFFFFL )		8003406	1		<			
ANR	8003465	MemberAccess	prop -> value . l		8003406	0					
ANR	8003466	PtrMemberAccess	prop -> value		8003406	0					
ANR	8003467	Identifier	prop		8003406	0					
ANR	8003468	Identifier	value		8003406	1					
ANR	8003469	Identifier	l		8003406	1					
ANR	8003470	AdditiveExpression	- 1 - 0x7FFFFFFFL		8003406	1		-			
ANR	8003471	UnaryOperationExpression	- 1		8003406	0					
ANR	8003472	UnaryOperator	-		8003406	0					
ANR	8003473	PrimaryExpression	1		8003406	1					
ANR	8003474	PrimaryExpression	0x7FFFFFFFL		8003406	1					
ANR	8003475	CompoundStatement		17:8:372:372	8003406	1					
ANR	8003476	ExpressionStatement	"FT_TRACE1 ( ( ""pcf_get_bdf_property:"" ) )"	631:10:15999:16037	8003406	0	True				
ANR	8003477	CallExpression	"FT_TRACE1 ( ( ""pcf_get_bdf_property:"" ) )"		8003406	0					
ANR	8003478	Callee	FT_TRACE1		8003406	0					
ANR	8003479	Identifier	FT_TRACE1		8003406	0					
ANR	8003480	ArgumentList	"""pcf_get_bdf_property:"""		8003406	1					
ANR	8003481	Argument	"""pcf_get_bdf_property:"""		8003406	0					
ANR	8003482	PrimaryExpression	"""pcf_get_bdf_property:"""		8003406	0					
ANR	8003483	ExpressionStatement	"FT_TRACE1 ( ( "" too large integer 0x%x is truncated\\n"" ) )"	632:10:16049:16104	8003406	1	True				
ANR	8003484	CallExpression	"FT_TRACE1 ( ( "" too large integer 0x%x is truncated\\n"" ) )"		8003406	0					
ANR	8003485	Callee	FT_TRACE1		8003406	0					
ANR	8003486	Identifier	FT_TRACE1		8003406	0					
ANR	8003487	ArgumentList	""" too large integer 0x%x is truncated\\n"""		8003406	1					
ANR	8003488	Argument	""" too large integer 0x%x is truncated\\n"""		8003406	0					
ANR	8003489	PrimaryExpression	""" too large integer 0x%x is truncated\\n"""		8003406	0					
ANR	8003490	ExpressionStatement	aproperty -> type = BDF_PROPERTY_TYPE_INTEGER	640:8:16336:16384	8003406	1	True				
ANR	8003491	AssignmentExpression	aproperty -> type = BDF_PROPERTY_TYPE_INTEGER		8003406	0		=			
ANR	8003492	PtrMemberAccess	aproperty -> type		8003406	0					
ANR	8003493	Identifier	aproperty		8003406	0					
ANR	8003494	Identifier	type		8003406	1					
ANR	8003495	Identifier	BDF_PROPERTY_TYPE_INTEGER		8003406	1					
ANR	8003496	ExpressionStatement	aproperty -> u . integer = ( FT_Int32 ) prop -> value . l	641:8:16394:16440	8003406	2	True				
ANR	8003497	AssignmentExpression	aproperty -> u . integer = ( FT_Int32 ) prop -> value . l		8003406	0		=			
ANR	8003498	MemberAccess	aproperty -> u . integer		8003406	0					
ANR	8003499	PtrMemberAccess	aproperty -> u		8003406	0					
ANR	8003500	Identifier	aproperty		8003406	0					
ANR	8003501	Identifier	u		8003406	1					
ANR	8003502	Identifier	integer		8003406	1					
ANR	8003503	CastExpression	( FT_Int32 ) prop -> value . l		8003406	1					
ANR	8003504	CastTarget	FT_Int32		8003406	0					
ANR	8003505	MemberAccess	prop -> value . l		8003406	1					
ANR	8003506	PtrMemberAccess	prop -> value		8003406	0					
ANR	8003507	Identifier	prop		8003406	0					
ANR	8003508	Identifier	value		8003406	1					
ANR	8003509	Identifier	l		8003406	1					
ANR	8003510	ReturnStatement	return FT_Err_Ok ;	644:6:16457:16473	8003406	1	True				
ANR	8003511	Identifier	FT_Err_Ok		8003406	0					
ANR	8003512	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	647:4:16486:16521	8003406	3	True				
ANR	8003513	CallExpression	FT_THROW ( Invalid_Argument )		8003406	0					
ANR	8003514	Callee	FT_THROW		8003406	0					
ANR	8003515	Identifier	FT_THROW		8003406	0					
ANR	8003516	ArgumentList	Invalid_Argument		8003406	1					
ANR	8003517	Argument	Invalid_Argument		8003406	0					
ANR	8003518	Identifier	Invalid_Argument		8003406	0					
ANR	8003519	ReturnType	static FT_Error		8003406	1					
ANR	8003520	Identifier	pcf_get_bdf_property		8003406	2					
ANR	8003521	ParameterList	"PCF_Face face , const char * prop_name , BDF_PropertyRec * aproperty"		8003406	3					
ANR	8003522	Parameter	PCF_Face face	611:24:15481:15502	8003406	0	True				
ANR	8003523	ParameterType	PCF_Face		8003406	0					
ANR	8003524	Identifier	face		8003406	1					
ANR	8003525	Parameter	const char * prop_name	612:24:15529:15555	8003406	1	True				
ANR	8003526	ParameterType	const char *		8003406	0					
ANR	8003527	Identifier	prop_name		8003406	1					
ANR	8003528	Parameter	BDF_PropertyRec * aproperty	613:24:15582:15608	8003406	2	True				
ANR	8003529	ParameterType	BDF_PropertyRec *		8003406	0					
ANR	8003530	Identifier	aproperty		8003406	1					
ANR	8003531	CFGEntryNode	ENTRY		8003406		True				
ANR	8003532	CFGExitNode	EXIT		8003406		True				
ANR	8003533	Symbol	pcf_find_property		8003406						
ANR	8003534	Symbol	FT_Err_Ok		8003406						
ANR	8003535	Symbol	prop -> isString		8003406						
ANR	8003536	Symbol	Invalid_Argument		8003406						
ANR	8003537	Symbol	aproperty		8003406						
ANR	8003538	Symbol	aproperty -> type		8003406						
ANR	8003539	Symbol	FT_THROW		8003406						
ANR	8003540	Symbol	* aproperty		8003406						
ANR	8003541	Symbol	prop_name		8003406						
ANR	8003542	Symbol	aproperty -> u . atom		8003406						
ANR	8003543	Symbol	BDF_PROPERTY_TYPE_INTEGER		8003406						
ANR	8003544	Symbol	face		8003406						
ANR	8003545	Symbol	prop		8003406						
ANR	8003546	Symbol	prop -> value . l		8003406						
ANR	8003547	Symbol	BDF_PROPERTY_TYPE_ATOM		8003406						
ANR	8003548	Symbol	prop -> value		8003406						
ANR	8003549	Symbol	* prop		8003406						
ANR	8003550	Symbol	prop -> value . atom		8003406						
ANR	8003551	Symbol	aproperty -> u . integer		8003406						
ANR	8003552	Symbol	aproperty -> u		8003406						
ANR	8003553	Function	pcf_get_charset_id	651:2:16531:16827							
ANR	8003554	FunctionDef	"pcf_get_charset_id (PCF_Face face , const char * * acharset_encoding , const char * * acharset_registry)"		8003553	0					
ANR	8003555	CompoundStatement		655:2:16702:16827	8003553	0					
ANR	8003556	ExpressionStatement	* acharset_encoding = face -> charset_encoding	656:4:16708:16751	8003553	0	True				
ANR	8003557	AssignmentExpression	* acharset_encoding = face -> charset_encoding		8003553	0		=			
ANR	8003558	UnaryOperationExpression	* acharset_encoding		8003553	0					
ANR	8003559	UnaryOperator	*		8003553	0					
ANR	8003560	Identifier	acharset_encoding		8003553	1					
ANR	8003561	PtrMemberAccess	face -> charset_encoding		8003553	1					
ANR	8003562	Identifier	face		8003553	0					
ANR	8003563	Identifier	charset_encoding		8003553	1					
ANR	8003564	ExpressionStatement	* acharset_registry = face -> charset_registry	657:4:16757:16800	8003553	1	True				
ANR	8003565	AssignmentExpression	* acharset_registry = face -> charset_registry		8003553	0		=			
ANR	8003566	UnaryOperationExpression	* acharset_registry		8003553	0					
ANR	8003567	UnaryOperator	*		8003553	0					
ANR	8003568	Identifier	acharset_registry		8003553	1					
ANR	8003569	PtrMemberAccess	face -> charset_registry		8003553	1					
ANR	8003570	Identifier	face		8003553	0					
ANR	8003571	Identifier	charset_registry		8003553	1					
ANR	8003572	ReturnStatement	return FT_Err_Ok ;	659:4:16807:16823	8003553	2	True				
ANR	8003573	Identifier	FT_Err_Ok		8003553	0					
ANR	8003574	ReturnType	static FT_Error		8003553	1					
ANR	8003575	Identifier	pcf_get_charset_id		8003553	2					
ANR	8003576	ParameterList	"PCF_Face face , const char * * acharset_encoding , const char * * acharset_registry"		8003553	3					
ANR	8003577	Parameter	PCF_Face face	652:22:16569:16586	8003553	0	True				
ANR	8003578	ParameterType	PCF_Face		8003553	0					
ANR	8003579	Identifier	face		8003553	1					
ANR	8003580	Parameter	const char * * acharset_encoding	653:22:16611:16641	8003553	1	True				
ANR	8003581	ParameterType	const char * *		8003553	0					
ANR	8003582	Identifier	acharset_encoding		8003553	1					
ANR	8003583	Parameter	const char * * acharset_registry	654:22:16666:16696	8003553	2	True				
ANR	8003584	ParameterType	const char * *		8003553	0					
ANR	8003585	Identifier	acharset_registry		8003553	1					
ANR	8003586	CFGEntryNode	ENTRY		8003553		True				
ANR	8003587	CFGExitNode	EXIT		8003553		True				
ANR	8003588	Symbol	face		8003553						
ANR	8003589	Symbol	FT_Err_Ok		8003553						
ANR	8003590	Symbol	* acharset_registry		8003553						
ANR	8003591	Symbol	face -> charset_encoding		8003553						
ANR	8003592	Symbol	acharset_encoding		8003553						
ANR	8003593	Symbol	acharset_registry		8003553						
ANR	8003594	Symbol	face -> charset_registry		8003553						
ANR	8003595	Symbol	* face		8003553						
ANR	8003596	Symbol	* acharset_encoding		8003553						
ANR	8003597	DeclStmt									
ANR	8003598	Decl							const FT_Service_BDFRec	const FT_Service_BDFRec	pcf_service_bdf
ANR	8003599	Function	pcf_property_set	674:2:17083:18564							
ANR	8003600	FunctionDef	"pcf_property_set (FT_Module module , const char * property_name , const void * value , FT_Bool value_is_string)"		8003599	0					
ANR	8003601	CompoundStatement		679:2:17306:18564	8003599	0					
ANR	8003602	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	682:4:17356:17386	8003599	0	True				
ANR	8003603	IdentifierDecl	error = FT_Err_Ok		8003599	0					
ANR	8003604	IdentifierDeclType	FT_Error		8003599	0					
ANR	8003605	Identifier	error		8003599	1					
ANR	8003606	AssignmentExpression	error = FT_Err_Ok		8003599	2		=			
ANR	8003607	Identifier	FT_Err_Ok		8003599	0					
ANR	8003608	Identifier	FT_Err_Ok		8003599	1					
ANR	8003609	IdentifierDeclStatement	PCF_Driver driver = ( PCF_Driver ) module ;	683:4:17392:17431	8003599	1	True				
ANR	8003610	IdentifierDecl	driver = ( PCF_Driver ) module		8003599	0					
ANR	8003611	IdentifierDeclType	PCF_Driver		8003599	0					
ANR	8003612	Identifier	driver		8003599	1					
ANR	8003613	AssignmentExpression	driver = ( PCF_Driver ) module		8003599	2		=			
ANR	8003614	Identifier	driver		8003599	0					
ANR	8003615	CastExpression	( PCF_Driver ) module		8003599	1					
ANR	8003616	CastTarget	PCF_Driver		8003599	0					
ANR	8003617	Identifier	module		8003599	1					
ANR	8003618	ExpressionStatement	FT_UNUSED ( value_is_string )	686:4:17486:17514	8003599	2	True				
ANR	8003619	CallExpression	FT_UNUSED ( value_is_string )		8003599	0					
ANR	8003620	Callee	FT_UNUSED		8003599	0					
ANR	8003621	Identifier	FT_UNUSED		8003599	0					
ANR	8003622	ArgumentList	value_is_string		8003599	1					
ANR	8003623	Argument	value_is_string		8003599	0					
ANR	8003624	Identifier	value_is_string		8003599	0					
ANR	8003625	IfStatement	"if ( ! ft_strcmp ( property_name , ""no-long-family-names"" ) )"		8003599	3					
ANR	8003626	Condition	"! ft_strcmp ( property_name , ""no-long-family-names"" )"	690:9:17534:17584	8003599	0	True				
ANR	8003627	UnaryOperationExpression	"! ft_strcmp ( property_name , ""no-long-family-names"" )"		8003599	0					
ANR	8003628	UnaryOperator	!		8003599	0					
ANR	8003629	CallExpression	"ft_strcmp ( property_name , ""no-long-family-names"" )"		8003599	1					
ANR	8003630	Callee	ft_strcmp		8003599	0					
ANR	8003631	Identifier	ft_strcmp		8003599	0					
ANR	8003632	ArgumentList	property_name		8003599	1					
ANR	8003633	Argument	property_name		8003599	0					
ANR	8003634	Identifier	property_name		8003599	0					
ANR	8003635	Argument	"""no-long-family-names"""		8003599	1					
ANR	8003636	PrimaryExpression	"""no-long-family-names"""		8003599	0					
ANR	8003637	CompoundStatement		13:4:285:285	8003599	1					
ANR	8003638	IfStatement	if ( value_is_string )		8003599	0					
ANR	8003639	Condition	value_is_string	693:11:17652:17666	8003599	0	True				
ANR	8003640	Identifier	value_is_string		8003599	0					
ANR	8003641	CompoundStatement		18:8:426:469	8003599	1					
ANR	8003642	IdentifierDeclStatement	const char * s = ( const char * ) value ;	695:8:17686:17723	8003599	0	True				
ANR	8003643	IdentifierDecl	* s = ( const char * ) value		8003599	0					
ANR	8003644	IdentifierDeclType	const char *		8003599	0					
ANR	8003645	Identifier	s		8003599	1					
ANR	8003646	AssignmentExpression	* s = ( const char * ) value		8003599	2		=			
ANR	8003647	Identifier	s		8003599	0					
ANR	8003648	CastExpression	( const char * ) value		8003599	1					
ANR	8003649	CastTarget	const char *		8003599	0					
ANR	8003650	Identifier	value		8003599	1					
ANR	8003651	IdentifierDeclStatement	"long lfn = ft_strtol ( s , NULL , 10 ) ;"	696:8:17733:17776	8003599	1	True				
ANR	8003652	IdentifierDecl	"lfn = ft_strtol ( s , NULL , 10 )"		8003599	0					
ANR	8003653	IdentifierDeclType	long		8003599	0					
ANR	8003654	Identifier	lfn		8003599	1					
ANR	8003655	AssignmentExpression	"lfn = ft_strtol ( s , NULL , 10 )"		8003599	2		=			
ANR	8003656	Identifier	lfn		8003599	0					
ANR	8003657	CallExpression	"ft_strtol ( s , NULL , 10 )"		8003599	1					
ANR	8003658	Callee	ft_strtol		8003599	0					
ANR	8003659	Identifier	ft_strtol		8003599	0					
ANR	8003660	ArgumentList	s		8003599	1					
ANR	8003661	Argument	s		8003599	0					
ANR	8003662	Identifier	s		8003599	0					
ANR	8003663	Argument	NULL		8003599	1					
ANR	8003664	Identifier	NULL		8003599	0					
ANR	8003665	Argument	10		8003599	2					
ANR	8003666	PrimaryExpression	10		8003599	0					
ANR	8003667	IfStatement	if ( lfn == 0 )		8003599	2					
ANR	8003668	Condition	lfn == 0	699:13:17793:17800	8003599	0	True				
ANR	8003669	EqualityExpression	lfn == 0		8003599	0		==			
ANR	8003670	Identifier	lfn		8003599	0					
ANR	8003671	PrimaryExpression	0		8003599	1					
ANR	8003672	ExpressionStatement	driver -> no_long_family_names = 0	700:10:17814:17846	8003599	1	True				
ANR	8003673	AssignmentExpression	driver -> no_long_family_names = 0		8003599	0		=			
ANR	8003674	PtrMemberAccess	driver -> no_long_family_names		8003599	0					
ANR	8003675	Identifier	driver		8003599	0					
ANR	8003676	Identifier	no_long_family_names		8003599	1					
ANR	8003677	PrimaryExpression	0		8003599	1					
ANR	8003678	ElseStatement	else		8003599	0					
ANR	8003679	IfStatement	if ( lfn == 1 )		8003599	0					
ANR	8003680	Condition	lfn == 1	701:18:17866:17873	8003599	0	True				
ANR	8003681	EqualityExpression	lfn == 1		8003599	0		==			
ANR	8003682	Identifier	lfn		8003599	0					
ANR	8003683	PrimaryExpression	1		8003599	1					
ANR	8003684	ExpressionStatement	driver -> no_long_family_names = 1	702:10:17887:17919	8003599	1	True				
ANR	8003685	AssignmentExpression	driver -> no_long_family_names = 1		8003599	0		=			
ANR	8003686	PtrMemberAccess	driver -> no_long_family_names		8003599	0					
ANR	8003687	Identifier	driver		8003599	0					
ANR	8003688	Identifier	no_long_family_names		8003599	1					
ANR	8003689	PrimaryExpression	1		8003599	1					
ANR	8003690	ElseStatement	else		8003599	0					
ANR	8003691	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	704:10:17944:17979	8003599	0	True				
ANR	8003692	CallExpression	FT_THROW ( Invalid_Argument )		8003599	0					
ANR	8003693	Callee	FT_THROW		8003599	0					
ANR	8003694	Identifier	FT_THROW		8003599	0					
ANR	8003695	ArgumentList	Invalid_Argument		8003599	1					
ANR	8003696	Argument	Invalid_Argument		8003599	0					
ANR	8003697	Identifier	Invalid_Argument		8003599	0					
ANR	8003698	ElseStatement	else		8003599	0					
ANR	8003699	CompoundStatement		31:8:716:764	8003599	0					
ANR	8003700	IdentifierDeclStatement	FT_Bool * no_long_family_names = ( FT_Bool * ) value ;	709:8:18023:18071	8003599	0	True				
ANR	8003701	IdentifierDecl	* no_long_family_names = ( FT_Bool * ) value		8003599	0					
ANR	8003702	IdentifierDeclType	FT_Bool *		8003599	0					
ANR	8003703	Identifier	no_long_family_names		8003599	1					
ANR	8003704	AssignmentExpression	* no_long_family_names = ( FT_Bool * ) value		8003599	2		=			
ANR	8003705	Identifier	no_long_family_names		8003599	0					
ANR	8003706	CastExpression	( FT_Bool * ) value		8003599	1					
ANR	8003707	CastTarget	FT_Bool *		8003599	0					
ANR	8003708	Identifier	value		8003599	1					
ANR	8003709	ExpressionStatement	driver -> no_long_family_names = * no_long_family_names	712:8:18083:18135	8003599	1	True				
ANR	8003710	AssignmentExpression	driver -> no_long_family_names = * no_long_family_names		8003599	0		=			
ANR	8003711	PtrMemberAccess	driver -> no_long_family_names		8003599	0					
ANR	8003712	Identifier	driver		8003599	0					
ANR	8003713	Identifier	no_long_family_names		8003599	1					
ANR	8003714	UnaryOperationExpression	* no_long_family_names		8003599	1					
ANR	8003715	UnaryOperator	*		8003599	0					
ANR	8003716	Identifier	no_long_family_names		8003599	1					
ANR	8003717	ReturnStatement	return error ;	715:6:18152:18164	8003599	1	True				
ANR	8003718	Identifier	error		8003599	0					
ANR	8003719	ExpressionStatement	"FT_TRACE0 ( ( ""pcf_property_set: missing property `%s'\\n"" , property_name ) )"	729:4:18430:18519	8003599	4	True				
ANR	8003720	CallExpression	"FT_TRACE0 ( ( ""pcf_property_set: missing property `%s'\\n"" , property_name ) )"		8003599	0					
ANR	8003721	Callee	FT_TRACE0		8003599	0					
ANR	8003722	Identifier	FT_TRACE0		8003599	0					
ANR	8003723	ArgumentList	"""pcf_property_set: missing property `%s'\\n"" , property_name"		8003599	1					
ANR	8003724	Argument	"""pcf_property_set: missing property `%s'\\n"" , property_name"		8003599	0					
ANR	8003725	Expression	"""pcf_property_set: missing property `%s'\\n"" , property_name"		8003599	0					
ANR	8003726	PrimaryExpression	"""pcf_property_set: missing property `%s'\\n"""		8003599	0					
ANR	8003727	Identifier	property_name		8003599	1					
ANR	8003728	ReturnStatement	return FT_THROW ( Missing_Property ) ;	731:4:18525:18560	8003599	5	True				
ANR	8003729	CallExpression	FT_THROW ( Missing_Property )		8003599	0					
ANR	8003730	Callee	FT_THROW		8003599	0					
ANR	8003731	Identifier	FT_THROW		8003599	0					
ANR	8003732	ArgumentList	Missing_Property		8003599	1					
ANR	8003733	Argument	Missing_Property		8003599	0					
ANR	8003734	Identifier	Missing_Property		8003599	0					
ANR	8003735	ReturnType	static FT_Error		8003599	1					
ANR	8003736	Identifier	pcf_property_set		8003599	2					
ANR	8003737	ParameterList	"FT_Module module , const char * property_name , const void * value , FT_Bool value_is_string"		8003599	3					
ANR	8003738	Parameter	FT_Module module	675:20:17119:17137	8003599	0	True				
ANR	8003739	ParameterType	FT_Module		8003599	0					
ANR	8003740	Identifier	module		8003599	1					
ANR	8003741	Parameter	const char * property_name	676:20:17185:17210	8003599	1	True				
ANR	8003742	ParameterType	const char *		8003599	0					
ANR	8003743	Identifier	property_name		8003599	1					
ANR	8003744	Parameter	const void * value	677:20:17233:17250	8003599	2	True				
ANR	8003745	ParameterType	const void *		8003599	0					
ANR	8003746	Identifier	value		8003599	1					
ANR	8003747	Parameter	FT_Bool value_is_string	678:20:17273:17300	8003599	3	True				
ANR	8003748	ParameterType	FT_Bool		8003599	0					
ANR	8003749	Identifier	value_is_string		8003599	1					
ANR	8003750	CFGEntryNode	ENTRY		8003599		True				
ANR	8003751	CFGExitNode	EXIT		8003599		True				
ANR	8003752	Symbol	ft_strtol		8003599						
ANR	8003753	Symbol	NULL		8003599						
ANR	8003754	Symbol	FT_Err_Ok		8003599						
ANR	8003755	Symbol	value_is_string		8003599						
ANR	8003756	Symbol	module		8003599						
ANR	8003757	Symbol	* driver		8003599						
ANR	8003758	Symbol	Invalid_Argument		8003599						
ANR	8003759	Symbol	error		8003599						
ANR	8003760	Symbol	FT_THROW		8003599						
ANR	8003761	Symbol	property_name		8003599						
ANR	8003762	Symbol	* no_long_family_names		8003599						
ANR	8003763	Symbol	s		8003599						
ANR	8003764	Symbol	driver		8003599						
ANR	8003765	Symbol	lfn		8003599						
ANR	8003766	Symbol	ft_strcmp		8003599						
ANR	8003767	Symbol	Missing_Property		8003599						
ANR	8003768	Symbol	no_long_family_names		8003599						
ANR	8003769	Symbol	driver -> no_long_family_names		8003599						
ANR	8003770	Symbol	value		8003599						
ANR	8003771	Function	pcf_property_get	735:2:18570:19488							
ANR	8003772	FunctionDef	"pcf_property_get (FT_Module module , const char * property_name , const void * value)"		8003771	0					
ANR	8003773	CompoundStatement		739:2:18743:19488	8003771	0					
ANR	8003774	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	742:4:18793:18823	8003771	0	True				
ANR	8003775	IdentifierDecl	error = FT_Err_Ok		8003771	0					
ANR	8003776	IdentifierDeclType	FT_Error		8003771	0					
ANR	8003777	Identifier	error		8003771	1					
ANR	8003778	AssignmentExpression	error = FT_Err_Ok		8003771	2		=			
ANR	8003779	Identifier	FT_Err_Ok		8003771	0					
ANR	8003780	Identifier	FT_Err_Ok		8003771	1					
ANR	8003781	IdentifierDeclStatement	PCF_Driver driver = ( PCF_Driver ) module ;	743:4:18829:18868	8003771	1	True				
ANR	8003782	IdentifierDecl	driver = ( PCF_Driver ) module		8003771	0					
ANR	8003783	IdentifierDeclType	PCF_Driver		8003771	0					
ANR	8003784	Identifier	driver		8003771	1					
ANR	8003785	AssignmentExpression	driver = ( PCF_Driver ) module		8003771	2		=			
ANR	8003786	Identifier	driver		8003771	0					
ANR	8003787	CastExpression	( PCF_Driver ) module		8003771	1					
ANR	8003788	CastTarget	PCF_Driver		8003771	0					
ANR	8003789	Identifier	module		8003771	1					
ANR	8003790	IfStatement	"if ( ! ft_strcmp ( property_name , ""no-long-family-names"" ) )"		8003771	2					
ANR	8003791	Condition	"! ft_strcmp ( property_name , ""no-long-family-names"" )"	746:9:18881:18931	8003771	0	True				
ANR	8003792	UnaryOperationExpression	"! ft_strcmp ( property_name , ""no-long-family-names"" )"		8003771	0					
ANR	8003793	UnaryOperator	!		8003771	0					
ANR	8003794	CallExpression	"ft_strcmp ( property_name , ""no-long-family-names"" )"		8003771	1					
ANR	8003795	Callee	ft_strcmp		8003771	0					
ANR	8003796	Identifier	ft_strcmp		8003771	0					
ANR	8003797	ArgumentList	property_name		8003771	1					
ANR	8003798	Argument	property_name		8003771	0					
ANR	8003799	Identifier	property_name		8003771	0					
ANR	8003800	Argument	"""no-long-family-names"""		8003771	1					
ANR	8003801	PrimaryExpression	"""no-long-family-names"""		8003771	0					
ANR	8003802	CompoundStatement		11:6:272:320	8003771	1					
ANR	8003803	IdentifierDeclStatement	FT_Bool no_long_family_names = driver -> no_long_family_names ;	748:6:18947:19008	8003771	0	True				
ANR	8003804	IdentifierDecl	no_long_family_names = driver -> no_long_family_names		8003771	0					
ANR	8003805	IdentifierDeclType	FT_Bool		8003771	0					
ANR	8003806	Identifier	no_long_family_names		8003771	1					
ANR	8003807	AssignmentExpression	no_long_family_names = driver -> no_long_family_names		8003771	2		=			
ANR	8003808	Identifier	no_long_family_names		8003771	0					
ANR	8003809	PtrMemberAccess	driver -> no_long_family_names		8003771	1					
ANR	8003810	Identifier	driver		8003771	0					
ANR	8003811	Identifier	no_long_family_names		8003771	1					
ANR	8003812	IdentifierDeclStatement	FT_Bool * val = ( FT_Bool * ) value ;	749:6:19016:19064	8003771	1	True				
ANR	8003813	IdentifierDecl	* val = ( FT_Bool * ) value		8003771	0					
ANR	8003814	IdentifierDeclType	FT_Bool *		8003771	0					
ANR	8003815	Identifier	val		8003771	1					
ANR	8003816	AssignmentExpression	* val = ( FT_Bool * ) value		8003771	2		=			
ANR	8003817	Identifier	val		8003771	0					
ANR	8003818	CastExpression	( FT_Bool * ) value		8003771	1					
ANR	8003819	CastTarget	FT_Bool *		8003771	0					
ANR	8003820	Identifier	value		8003771	1					
ANR	8003821	ExpressionStatement	* val = no_long_family_names	752:6:19074:19101	8003771	2	True				
ANR	8003822	AssignmentExpression	* val = no_long_family_names		8003771	0		=			
ANR	8003823	UnaryOperationExpression	* val		8003771	0					
ANR	8003824	UnaryOperator	*		8003771	0					
ANR	8003825	Identifier	val		8003771	1					
ANR	8003826	Identifier	no_long_family_names		8003771	1					
ANR	8003827	ReturnStatement	return error ;	754:6:19110:19122	8003771	3	True				
ANR	8003828	Identifier	error		8003771	0					
ANR	8003829	ExpressionStatement	"FT_TRACE0 ( ( ""pcf_property_get: missing property `%s'\\n"" , property_name ) )"	767:4:19354:19443	8003771	3	True				
ANR	8003830	CallExpression	"FT_TRACE0 ( ( ""pcf_property_get: missing property `%s'\\n"" , property_name ) )"		8003771	0					
ANR	8003831	Callee	FT_TRACE0		8003771	0					
ANR	8003832	Identifier	FT_TRACE0		8003771	0					
ANR	8003833	ArgumentList	"""pcf_property_get: missing property `%s'\\n"" , property_name"		8003771	1					
ANR	8003834	Argument	"""pcf_property_get: missing property `%s'\\n"" , property_name"		8003771	0					
ANR	8003835	Expression	"""pcf_property_get: missing property `%s'\\n"" , property_name"		8003771	0					
ANR	8003836	PrimaryExpression	"""pcf_property_get: missing property `%s'\\n"""		8003771	0					
ANR	8003837	Identifier	property_name		8003771	1					
ANR	8003838	ReturnStatement	return FT_THROW ( Missing_Property ) ;	769:4:19449:19484	8003771	4	True				
ANR	8003839	CallExpression	FT_THROW ( Missing_Property )		8003771	0					
ANR	8003840	Callee	FT_THROW		8003771	0					
ANR	8003841	Identifier	FT_THROW		8003771	0					
ANR	8003842	ArgumentList	Missing_Property		8003771	1					
ANR	8003843	Argument	Missing_Property		8003771	0					
ANR	8003844	Identifier	Missing_Property		8003771	0					
ANR	8003845	ReturnType	static FT_Error		8003771	1					
ANR	8003846	Identifier	pcf_property_get		8003771	2					
ANR	8003847	ParameterList	"FT_Module module , const char * property_name , const void * value"		8003771	3					
ANR	8003848	Parameter	FT_Module module	736:20:18606:18624	8003771	0	True				
ANR	8003849	ParameterType	FT_Module		8003771	0					
ANR	8003850	Identifier	module		8003771	1					
ANR	8003851	Parameter	const char * property_name	737:20:18672:18697	8003771	1	True				
ANR	8003852	ParameterType	const char *		8003771	0					
ANR	8003853	Identifier	property_name		8003771	1					
ANR	8003854	Parameter	const void * value	738:20:18720:18737	8003771	2	True				
ANR	8003855	ParameterType	const void *		8003771	0					
ANR	8003856	Identifier	value		8003771	1					
ANR	8003857	CFGEntryNode	ENTRY		8003771		True				
ANR	8003858	CFGExitNode	EXIT		8003771		True				
ANR	8003859	Symbol	val		8003771						
ANR	8003860	Symbol	FT_Err_Ok		8003771						
ANR	8003861	Symbol	module		8003771						
ANR	8003862	Symbol	* driver		8003771						
ANR	8003863	Symbol	* val		8003771						
ANR	8003864	Symbol	error		8003771						
ANR	8003865	Symbol	FT_THROW		8003771						
ANR	8003866	Symbol	property_name		8003771						
ANR	8003867	Symbol	driver		8003771						
ANR	8003868	Symbol	ft_strcmp		8003771						
ANR	8003869	Symbol	Missing_Property		8003771						
ANR	8003870	Symbol	no_long_family_names		8003771						
ANR	8003871	Symbol	driver -> no_long_family_names		8003771						
ANR	8003872	Symbol	value		8003771						
ANR	8003873	DeclStmt									
ANR	8003874	Decl							const FT_ServiceDescRec	const FT_ServiceDescRec [ ]	pcf_services
ANR	8003875	Function	pcf_driver_requester	796:2:20024:20200							
ANR	8003876	FunctionDef	"pcf_driver_requester (FT_Module module , const char * name)"		8003875	0					
ANR	8003877	CompoundStatement		798:2:20113:20200	8003875	0					
ANR	8003878	ExpressionStatement	FT_UNUSED ( module )	799:4:20119:20138	8003875	0	True				
ANR	8003879	CallExpression	FT_UNUSED ( module )		8003875	0					
ANR	8003880	Callee	FT_UNUSED		8003875	0					
ANR	8003881	Identifier	FT_UNUSED		8003875	0					
ANR	8003882	ArgumentList	module		8003875	1					
ANR	8003883	Argument	module		8003875	0					
ANR	8003884	Identifier	module		8003875	0					
ANR	8003885	ReturnStatement	"return ft_service_list_lookup ( pcf_services , name ) ;"	801:4:20145:20196	8003875	1	True				
ANR	8003886	CallExpression	"ft_service_list_lookup ( pcf_services , name )"		8003875	0					
ANR	8003887	Callee	ft_service_list_lookup		8003875	0					
ANR	8003888	Identifier	ft_service_list_lookup		8003875	0					
ANR	8003889	ArgumentList	pcf_services		8003875	1					
ANR	8003890	Argument	pcf_services		8003875	0					
ANR	8003891	Identifier	pcf_services		8003875	0					
ANR	8003892	Argument	name		8003875	1					
ANR	8003893	Identifier	name		8003875	0					
ANR	8003894	Identifier	pcf_driver_requester		8003875	1					
ANR	8003895	ParameterList	"FT_Module module , const char * name"		8003875	2					
ANR	8003896	Parameter	FT_Module module	796:24:20046:20064	8003875	0	True				
ANR	8003897	ParameterType	FT_Module		8003875	0					
ANR	8003898	Identifier	module		8003875	1					
ANR	8003899	Parameter	const char * name	797:24:20091:20107	8003875	1	True				
ANR	8003900	ParameterType	const char *		8003875	0					
ANR	8003901	Identifier	name		8003875	1					
ANR	8003902	CFGEntryNode	ENTRY		8003875		True				
ANR	8003903	CFGExitNode	EXIT		8003875		True				
ANR	8003904	Symbol	module		8003875						
ANR	8003905	Symbol	name		8003875						
ANR	8003906	Symbol	pcf_services		8003875						
ANR	8003907	Symbol	ft_service_list_lookup		8003875						
ANR	8003908	Function	pcf_driver_init	806:2:20236:20490							
ANR	8003909	FunctionDef	pcf_driver_init (FT_Module module)		8003908	0					
ANR	8003910	CompoundStatement		807:2:20297:20490	8003908	0					
ANR	8003911	IdentifierDeclStatement	PCF_Driver driver = ( PCF_Driver ) module ;	809:4:20346:20385	8003908	0	True				
ANR	8003912	IdentifierDecl	driver = ( PCF_Driver ) module		8003908	0					
ANR	8003913	IdentifierDeclType	PCF_Driver		8003908	0					
ANR	8003914	Identifier	driver		8003908	1					
ANR	8003915	AssignmentExpression	driver = ( PCF_Driver ) module		8003908	2		=			
ANR	8003916	Identifier	driver		8003908	0					
ANR	8003917	CastExpression	( PCF_Driver ) module		8003908	1					
ANR	8003918	CastTarget	PCF_Driver		8003908	0					
ANR	8003919	Identifier	module		8003908	1					
ANR	8003920	ExpressionStatement	driver -> no_long_family_names = 0	812:4:20393:20425	8003908	1	True				
ANR	8003921	AssignmentExpression	driver -> no_long_family_names = 0		8003908	0		=			
ANR	8003922	PtrMemberAccess	driver -> no_long_family_names		8003908	0					
ANR	8003923	Identifier	driver		8003908	0					
ANR	8003924	Identifier	no_long_family_names		8003908	1					
ANR	8003925	PrimaryExpression	0		8003908	1					
ANR	8003926	ReturnStatement	return FT_Err_Ok ;	817:4:20470:20486	8003908	2	True				
ANR	8003927	Identifier	FT_Err_Ok		8003908	0					
ANR	8003928	Identifier	pcf_driver_init		8003908	1					
ANR	8003929	ParameterList	FT_Module module		8003908	2					
ANR	8003930	Parameter	FT_Module module	806:19:20253:20269	8003908	0	True				
ANR	8003931	ParameterType	FT_Module		8003908	0					
ANR	8003932	Identifier	module		8003908	1					
ANR	8003933	CFGEntryNode	ENTRY		8003908		True				
ANR	8003934	CFGExitNode	EXIT		8003908		True				
ANR	8003935	Symbol	driver		8003908						
ANR	8003936	Symbol	FT_Err_Ok		8003908						
ANR	8003937	Symbol	module		8003908						
ANR	8003938	Symbol	* driver		8003908						
ANR	8003939	Symbol	driver -> no_long_family_names		8003908						
ANR	8003940	Function	pcf_driver_done	822:2:20522:20612							
ANR	8003941	FunctionDef	pcf_driver_done (FT_Module module)		8003940	0					
ANR	8003942	CompoundStatement		823:2:20583:20612	8003940	0					
ANR	8003943	ExpressionStatement	FT_UNUSED ( module )	824:4:20589:20608	8003940	0	True				
ANR	8003944	CallExpression	FT_UNUSED ( module )		8003940	0					
ANR	8003945	Callee	FT_UNUSED		8003940	0					
ANR	8003946	Identifier	FT_UNUSED		8003940	0					
ANR	8003947	ArgumentList	module		8003940	1					
ANR	8003948	Argument	module		8003940	0					
ANR	8003949	Identifier	module		8003940	0					
ANR	8003950	Identifier	pcf_driver_done		8003940	1					
ANR	8003951	ParameterList	FT_Module module		8003940	2					
ANR	8003952	Parameter	FT_Module module	822:19:20539:20555	8003940	0	True				
ANR	8003953	ParameterType	FT_Module		8003940	0					
ANR	8003954	Identifier	module		8003940	1					
ANR	8003955	CFGEntryNode	ENTRY		8003940		True				
ANR	8003956	CFGExitNode	EXIT		8003940		True				
ANR	8003957	Symbol	module		8003940						
ANR	8003958	DeclStmt									
ANR	8003959	Decl							const FT_Driver_ClassRec	const FT_Driver_ClassRec	pcf_driver_class
