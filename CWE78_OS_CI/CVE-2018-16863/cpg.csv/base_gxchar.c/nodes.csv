command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	843078	File	data/converged/CVE-2018-16863_ghostpdl/base_gxchar.c								
ANR	843079	DeclStmt									
ANR	843080	Decl							int	int ( gs_show_enum * )	continue_kshow
ANR	843081	DeclStmt									
ANR	843082	Decl							int	int ( gs_show_enum * )	continue_show
ANR	843083	DeclStmt									
ANR	843084	Decl							int	int ( gs_show_enum * )	continue_show_update
ANR	843085	DeclStmt									
ANR	843086	Decl							void	"void ( const gs_show_enum * , gs_log2_scale_point * log2_scale )"	show_set_scale
ANR	843087	DeclStmt									
ANR	843088	Decl							int	int ( gs_show_enum * )	show_cache_setup
ANR	843089	DeclStmt									
ANR	843090	Decl							int	int ( gs_show_enum * )	show_state_setup
ANR	843091	DeclStmt									
ANR	843092	Decl							int	"int ( gs_gstate * , fixed , fixed , gs_show_enum * penum )"	show_origin_setup
ANR	843093	Function	gs_show_enum_alloc	81:0:2727:3455							
ANR	843094	FunctionDef	"gs_show_enum_alloc (gs_memory_t * mem , gs_gstate * pgs , client_name_t cname)"		843093	0					
ANR	843095	CompoundStatement		83:0:2818:3455	843093	0					
ANR	843096	IdentifierDeclStatement	gs_show_enum * penum ;	84:4:2824:2843	843093	0	True				
ANR	843097	IdentifierDecl	* penum		843093	0					
ANR	843098	IdentifierDeclType	gs_show_enum *		843093	0					
ANR	843099	Identifier	penum		843093	1					
ANR	843100	Statement	rc_alloc_struct_1	86:4:2850:2866	843093	1	True				
ANR	843101	Statement	(	86:21:2867:2867	843093	2	True				
ANR	843102	Statement	penum	86:22:2868:2872	843093	3	True				
ANR	843103	Statement	","	86:27:2873:2873	843093	4	True				
ANR	843104	Statement	gs_show_enum	86:29:2875:2886	843093	5	True				
ANR	843105	Statement	","	86:41:2887:2887	843093	6	True				
ANR	843106	Statement	&	86:43:2889:2889	843093	7	True				
ANR	843107	Statement	st_gs_show_enum	86:44:2890:2904	843093	8	True				
ANR	843108	Statement	","	86:59:2905:2905	843093	9	True				
ANR	843109	Statement	mem	86:61:2907:2909	843093	10	True				
ANR	843110	Statement	","	86:64:2910:2910	843093	11	True				
ANR	843111	Statement	return	87:22:2934:2939	843093	12	True				
ANR	843112	Statement	0	87:29:2941:2941	843093	13	True				
ANR	843113	Statement	","	87:30:2942:2942	843093	14	True				
ANR	843114	Statement	cname	87:32:2944:2948	843093	15	True				
ANR	843115	Statement	)	87:37:2949:2949	843093	16	True				
ANR	843116	ExpressionStatement		87:38:2950:2950	843093	17	True				
ANR	843117	ExpressionStatement	penum -> rc . free = rc_free_text_enum	88:4:2956:2990	843093	18	True				
ANR	843118	AssignmentExpression	penum -> rc . free = rc_free_text_enum		843093	0		=			
ANR	843119	MemberAccess	penum -> rc . free		843093	0					
ANR	843120	PtrMemberAccess	penum -> rc		843093	0					
ANR	843121	Identifier	penum		843093	0					
ANR	843122	Identifier	rc		843093	1					
ANR	843123	Identifier	free		843093	1					
ANR	843124	Identifier	rc_free_text_enum		843093	1					
ANR	843125	ExpressionStatement	penum -> auto_release = true	89:4:2996:3022	843093	19	True				
ANR	843126	AssignmentExpression	penum -> auto_release = true		843093	0		=			
ANR	843127	PtrMemberAccess	penum -> auto_release		843093	0					
ANR	843128	Identifier	penum		843093	0					
ANR	843129	Identifier	auto_release		843093	1					
ANR	843130	Identifier	true		843093	1					
ANR	843131	ExpressionStatement	penum -> text . operation = 0	91:4:3079:3104	843093	20	True				
ANR	843132	AssignmentExpression	penum -> text . operation = 0		843093	0		=			
ANR	843133	MemberAccess	penum -> text . operation		843093	0					
ANR	843134	PtrMemberAccess	penum -> text		843093	0					
ANR	843135	Identifier	penum		843093	0					
ANR	843136	Identifier	text		843093	1					
ANR	843137	Identifier	operation		843093	1					
ANR	843138	PrimaryExpression	0		843093	1					
ANR	843139	ExpressionStatement	penum -> dev = 0	92:4:3138:3152	843093	21	True				
ANR	843140	AssignmentExpression	penum -> dev = 0		843093	0		=			
ANR	843141	PtrMemberAccess	penum -> dev		843093	0					
ANR	843142	Identifier	penum		843093	0					
ANR	843143	Identifier	dev		843093	1					
ANR	843144	PrimaryExpression	0		843093	1					
ANR	843145	ExpressionStatement	penum -> pgs = pgs	93:4:3158:3174	843093	22	True				
ANR	843146	AssignmentExpression	penum -> pgs = pgs		843093	0		=			
ANR	843147	PtrMemberAccess	penum -> pgs		843093	0					
ANR	843148	Identifier	penum		843093	0					
ANR	843149	Identifier	pgs		843093	1					
ANR	843150	Identifier	pgs		843093	1					
ANR	843151	ExpressionStatement	penum -> show_gstate = 0	94:4:3180:3202	843093	23	True				
ANR	843152	AssignmentExpression	penum -> show_gstate = 0		843093	0		=			
ANR	843153	PtrMemberAccess	penum -> show_gstate		843093	0					
ANR	843154	Identifier	penum		843093	0					
ANR	843155	Identifier	show_gstate		843093	1					
ANR	843156	PrimaryExpression	0		843093	1					
ANR	843157	ExpressionStatement	penum -> dev_cache = 0	95:4:3208:3228	843093	24	True				
ANR	843158	AssignmentExpression	penum -> dev_cache = 0		843093	0		=			
ANR	843159	PtrMemberAccess	penum -> dev_cache		843093	0					
ANR	843160	Identifier	penum		843093	0					
ANR	843161	Identifier	dev_cache		843093	1					
ANR	843162	PrimaryExpression	0		843093	1					
ANR	843163	ExpressionStatement	penum -> dev_cache2 = 0	96:4:3234:3255	843093	25	True				
ANR	843164	AssignmentExpression	penum -> dev_cache2 = 0		843093	0		=			
ANR	843165	PtrMemberAccess	penum -> dev_cache2		843093	0					
ANR	843166	Identifier	penum		843093	0					
ANR	843167	Identifier	dev_cache2		843093	1					
ANR	843168	PrimaryExpression	0		843093	1					
ANR	843169	ExpressionStatement	penum -> fapi_log2_scale . x = penum -> fapi_log2_scale . y = - 1	97:4:3261:3317	843093	26	True				
ANR	843170	AssignmentExpression	penum -> fapi_log2_scale . x = penum -> fapi_log2_scale . y = - 1		843093	0		=			
ANR	843171	MemberAccess	penum -> fapi_log2_scale . x		843093	0					
ANR	843172	PtrMemberAccess	penum -> fapi_log2_scale		843093	0					
ANR	843173	Identifier	penum		843093	0					
ANR	843174	Identifier	fapi_log2_scale		843093	1					
ANR	843175	Identifier	x		843093	1					
ANR	843176	AssignmentExpression	penum -> fapi_log2_scale . y = - 1		843093	1		=			
ANR	843177	MemberAccess	penum -> fapi_log2_scale . y		843093	0					
ANR	843178	PtrMemberAccess	penum -> fapi_log2_scale		843093	0					
ANR	843179	Identifier	penum		843093	0					
ANR	843180	Identifier	fapi_log2_scale		843093	1					
ANR	843181	Identifier	y		843093	1					
ANR	843182	UnaryOperationExpression	- 1		843093	1					
ANR	843183	UnaryOperator	-		843093	0					
ANR	843184	PrimaryExpression	1		843093	1					
ANR	843185	ExpressionStatement	penum -> fapi_glyph_shift . x = penum -> fapi_glyph_shift . y = 0	98:4:3323:3380	843093	27	True				
ANR	843186	AssignmentExpression	penum -> fapi_glyph_shift . x = penum -> fapi_glyph_shift . y = 0		843093	0		=			
ANR	843187	MemberAccess	penum -> fapi_glyph_shift . x		843093	0					
ANR	843188	PtrMemberAccess	penum -> fapi_glyph_shift		843093	0					
ANR	843189	Identifier	penum		843093	0					
ANR	843190	Identifier	fapi_glyph_shift		843093	1					
ANR	843191	Identifier	x		843093	1					
ANR	843192	AssignmentExpression	penum -> fapi_glyph_shift . y = 0		843093	1		=			
ANR	843193	MemberAccess	penum -> fapi_glyph_shift . y		843093	0					
ANR	843194	PtrMemberAccess	penum -> fapi_glyph_shift		843093	0					
ANR	843195	Identifier	penum		843093	0					
ANR	843196	Identifier	fapi_glyph_shift		843093	1					
ANR	843197	Identifier	y		843093	1					
ANR	843198	PrimaryExpression	0		843093	1					
ANR	843199	ExpressionStatement	penum -> dev_null = 0	99:4:3386:3405	843093	28	True				
ANR	843200	AssignmentExpression	penum -> dev_null = 0		843093	0		=			
ANR	843201	PtrMemberAccess	penum -> dev_null		843093	0					
ANR	843202	Identifier	penum		843093	0					
ANR	843203	Identifier	dev_null		843093	1					
ANR	843204	PrimaryExpression	0		843093	1					
ANR	843205	ExpressionStatement	penum -> fstack . depth = - 1	100:4:3411:3435	843093	29	True				
ANR	843206	AssignmentExpression	penum -> fstack . depth = - 1		843093	0		=			
ANR	843207	MemberAccess	penum -> fstack . depth		843093	0					
ANR	843208	PtrMemberAccess	penum -> fstack		843093	0					
ANR	843209	Identifier	penum		843093	0					
ANR	843210	Identifier	fstack		843093	1					
ANR	843211	Identifier	depth		843093	1					
ANR	843212	UnaryOperationExpression	- 1		843093	1					
ANR	843213	UnaryOperator	-		843093	0					
ANR	843214	PrimaryExpression	1		843093	1					
ANR	843215	ReturnStatement	return penum ;	101:4:3441:3453	843093	30	True				
ANR	843216	Identifier	penum		843093	0					
ANR	843217	ReturnType	gs_show_enum *		843093	1					
ANR	843218	Identifier	gs_show_enum_alloc		843093	2					
ANR	843219	ParameterList	"gs_memory_t * mem , gs_gstate * pgs , client_name_t cname"		843093	3					
ANR	843220	Parameter	gs_memory_t * mem	82:19:2761:2777	843093	0	True				
ANR	843221	ParameterType	gs_memory_t *		843093	0					
ANR	843222	Identifier	mem		843093	1					
ANR	843223	Parameter	gs_gstate * pgs	82:38:2780:2794	843093	1	True				
ANR	843224	ParameterType	gs_gstate *		843093	0					
ANR	843225	Identifier	pgs		843093	1					
ANR	843226	Parameter	client_name_t cname	82:55:2797:2815	843093	2	True				
ANR	843227	ParameterType	client_name_t		843093	0					
ANR	843228	Identifier	cname		843093	1					
ANR	843229	CFGEntryNode	ENTRY		843093		True				
ANR	843230	CFGExitNode	EXIT		843093		True				
ANR	843231	Symbol	* penum		843093						
ANR	843232	Symbol	penum -> fapi_glyph_shift		843093						
ANR	843233	Symbol	penum -> text . operation		843093						
ANR	843234	Symbol	penum -> rc		843093						
ANR	843235	Symbol	penum -> dev		843093						
ANR	843236	Symbol	cname		843093						
ANR	843237	Symbol	penum -> text		843093						
ANR	843238	Symbol	penum -> fstack . depth		843093						
ANR	843239	Symbol	penum -> pgs		843093						
ANR	843240	Symbol	penum -> dev_cache2		843093						
ANR	843241	Symbol	mem		843093						
ANR	843242	Symbol	penum -> show_gstate		843093						
ANR	843243	Symbol	pgs		843093						
ANR	843244	Symbol	penum -> fapi_glyph_shift . x		843093						
ANR	843245	Symbol	penum -> fapi_glyph_shift . y		843093						
ANR	843246	Symbol	penum -> rc . free		843093						
ANR	843247	Symbol	penum		843093						
ANR	843248	Symbol	penum -> fapi_log2_scale . x		843093						
ANR	843249	Symbol	penum -> fapi_log2_scale . y		843093						
ANR	843250	Symbol	rc_free_text_enum		843093						
ANR	843251	Symbol	penum -> auto_release		843093						
ANR	843252	Symbol	penum -> dev_cache		843093						
ANR	843253	Symbol	penum -> dev_null		843093						
ANR	843254	Symbol	penum -> fapi_log2_scale		843093						
ANR	843255	Symbol	true		843093						
ANR	843256	Symbol	penum -> fstack		843093						
ANR	843257	DeclStmt									
ANR	843258	Decl							const gs_text_enum_procs_t	const gs_text_enum_procs_t	default_text_procs
ANR	843259	Function	gx_default_text_begin	121:0:4149:7791							
ANR	843260	FunctionDef	"gx_default_text_begin (gx_device * dev , gs_gstate * pgs1 , const gs_text_params_t * text , gs_font * font , gx_path * path , const gx_device_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * mem , gs_text_enum_t * * ppte)"		843259	0					
ANR	843261	CompoundStatement		127:0:4466:7791	843259	0					
ANR	843262	IdentifierDeclStatement	uint operation = text -> operation ;	128:4:4472:4504	843259	0	True				
ANR	843263	IdentifierDecl	operation = text -> operation		843259	0					
ANR	843264	IdentifierDeclType	uint		843259	0					
ANR	843265	Identifier	operation		843259	1					
ANR	843266	AssignmentExpression	operation = text -> operation		843259	2		=			
ANR	843267	Identifier	operation		843259	0					
ANR	843268	PtrMemberAccess	text -> operation		843259	1					
ANR	843269	Identifier	text		843259	0					
ANR	843270	Identifier	operation		843259	1					
ANR	843271	IdentifierDeclStatement	bool propagate_charpath = ( operation & TEXT_DO_DRAW ) != 0 ;	129:4:4510:4567	843259	1	True				
ANR	843272	IdentifierDecl	propagate_charpath = ( operation & TEXT_DO_DRAW ) != 0		843259	0					
ANR	843273	IdentifierDeclType	bool		843259	0					
ANR	843274	Identifier	propagate_charpath		843259	1					
ANR	843275	AssignmentExpression	propagate_charpath = ( operation & TEXT_DO_DRAW ) != 0		843259	2		=			
ANR	843276	Identifier	propagate_charpath		843259	0					
ANR	843277	EqualityExpression	( operation & TEXT_DO_DRAW ) != 0		843259	1		!=			
ANR	843278	BitAndExpression	operation & TEXT_DO_DRAW		843259	0		&			
ANR	843279	Identifier	operation		843259	0					
ANR	843280	Identifier	TEXT_DO_DRAW		843259	1					
ANR	843281	PrimaryExpression	0		843259	1					
ANR	843282	IdentifierDeclStatement	int code ;	130:4:4573:4581	843259	2	True				
ANR	843283	IdentifierDecl	code		843259	0					
ANR	843284	IdentifierDeclType	int		843259	0					
ANR	843285	Identifier	code		843259	1					
ANR	843286	IdentifierDeclStatement	gs_gstate * pgs = ( gs_gstate * ) pgs1 ;	131:4:4587:4621	843259	3	True				
ANR	843287	IdentifierDecl	* pgs = ( gs_gstate * ) pgs1		843259	0					
ANR	843288	IdentifierDeclType	gs_gstate *		843259	0					
ANR	843289	Identifier	pgs		843259	1					
ANR	843290	AssignmentExpression	* pgs = ( gs_gstate * ) pgs1		843259	2		=			
ANR	843291	Identifier	pgs		843259	0					
ANR	843292	CastExpression	( gs_gstate * ) pgs1		843259	1					
ANR	843293	CastTarget	gs_gstate *		843259	0					
ANR	843294	Identifier	pgs1		843259	1					
ANR	843295	IdentifierDeclStatement	gs_show_enum * penum ;	132:4:4627:4646	843259	4	True				
ANR	843296	IdentifierDecl	* penum		843259	0					
ANR	843297	IdentifierDeclType	gs_show_enum *		843259	0					
ANR	843298	Identifier	penum		843259	1					
ANR	843299	IfStatement	"if ( gs_object_type ( mem , pgs ) != & st_gs_gstate )"		843259	5					
ANR	843300	Condition	"gs_object_type ( mem , pgs ) != & st_gs_gstate"	138:8:4795:4835	843259	0	True				
ANR	843301	EqualityExpression	"gs_object_type ( mem , pgs ) != & st_gs_gstate"		843259	0		!=			
ANR	843302	CallExpression	"gs_object_type ( mem , pgs )"		843259	0					
ANR	843303	Callee	gs_object_type		843259	0					
ANR	843304	Identifier	gs_object_type		843259	0					
ANR	843305	ArgumentList	mem		843259	1					
ANR	843306	Argument	mem		843259	0					
ANR	843307	Identifier	mem		843259	0					
ANR	843308	Argument	pgs		843259	1					
ANR	843309	Identifier	pgs		843259	0					
ANR	843310	UnaryOperationExpression	& st_gs_gstate		843259	1					
ANR	843311	UnaryOperator	&		843259	0					
ANR	843312	Identifier	st_gs_gstate		843259	1					
ANR	843313	ExpressionStatement	return_error ( gs_error_Fatal )	139:8:4846:4874	843259	1	True				
ANR	843314	CallExpression	return_error ( gs_error_Fatal )		843259	0					
ANR	843315	Callee	return_error		843259	0					
ANR	843316	Identifier	return_error		843259	0					
ANR	843317	ArgumentList	gs_error_Fatal		843259	1					
ANR	843318	Argument	gs_error_Fatal		843259	0					
ANR	843319	Identifier	gs_error_Fatal		843259	0					
ANR	843320	ExpressionStatement	"penum = gs_show_enum_alloc ( mem , pgs , ""gx_default_text_begin"" )"	140:4:4880:4941	843259	6	True				
ANR	843321	AssignmentExpression	"penum = gs_show_enum_alloc ( mem , pgs , ""gx_default_text_begin"" )"		843259	0		=			
ANR	843322	Identifier	penum		843259	0					
ANR	843323	CallExpression	"gs_show_enum_alloc ( mem , pgs , ""gx_default_text_begin"" )"		843259	1					
ANR	843324	Callee	gs_show_enum_alloc		843259	0					
ANR	843325	Identifier	gs_show_enum_alloc		843259	0					
ANR	843326	ArgumentList	mem		843259	1					
ANR	843327	Argument	mem		843259	0					
ANR	843328	Identifier	mem		843259	0					
ANR	843329	Argument	pgs		843259	1					
ANR	843330	Identifier	pgs		843259	0					
ANR	843331	Argument	"""gx_default_text_begin"""		843259	2					
ANR	843332	PrimaryExpression	"""gx_default_text_begin"""		843259	0					
ANR	843333	IfStatement	if ( ! penum )		843259	7					
ANR	843334	Condition	! penum	141:8:4951:4956	843259	0	True				
ANR	843335	UnaryOperationExpression	! penum		843259	0					
ANR	843336	UnaryOperator	!		843259	0					
ANR	843337	Identifier	penum		843259	1					
ANR	843338	ExpressionStatement	return_error ( gs_error_VMerror )	142:8:4967:4997	843259	1	True				
ANR	843339	CallExpression	return_error ( gs_error_VMerror )		843259	0					
ANR	843340	Callee	return_error		843259	0					
ANR	843341	Identifier	return_error		843259	0					
ANR	843342	ArgumentList	gs_error_VMerror		843259	1					
ANR	843343	Argument	gs_error_VMerror		843259	0					
ANR	843344	Identifier	gs_error_VMerror		843259	0					
ANR	843345	ExpressionStatement	"code = gs_text_enum_init ( ( gs_text_enum_t * ) penum , & default_text_procs , dev , pgs , text , font , path , pdcolor , pcpath , mem )"	143:4:5003:5152	843259	8	True				
ANR	843346	AssignmentExpression	"code = gs_text_enum_init ( ( gs_text_enum_t * ) penum , & default_text_procs , dev , pgs , text , font , path , pdcolor , pcpath , mem )"		843259	0		=			
ANR	843347	Identifier	code		843259	0					
ANR	843348	CallExpression	"gs_text_enum_init ( ( gs_text_enum_t * ) penum , & default_text_procs , dev , pgs , text , font , path , pdcolor , pcpath , mem )"		843259	1					
ANR	843349	Callee	gs_text_enum_init		843259	0					
ANR	843350	Identifier	gs_text_enum_init		843259	0					
ANR	843351	ArgumentList	( gs_text_enum_t * ) penum		843259	1					
ANR	843352	Argument	( gs_text_enum_t * ) penum		843259	0					
ANR	843353	CastExpression	( gs_text_enum_t * ) penum		843259	0					
ANR	843354	CastTarget	gs_text_enum_t *		843259	0					
ANR	843355	Identifier	penum		843259	1					
ANR	843356	Argument	& default_text_procs		843259	1					
ANR	843357	UnaryOperationExpression	& default_text_procs		843259	0					
ANR	843358	UnaryOperator	&		843259	0					
ANR	843359	Identifier	default_text_procs		843259	1					
ANR	843360	Argument	dev		843259	2					
ANR	843361	Identifier	dev		843259	0					
ANR	843362	Argument	pgs		843259	3					
ANR	843363	Identifier	pgs		843259	0					
ANR	843364	Argument	text		843259	4					
ANR	843365	Identifier	text		843259	0					
ANR	843366	Argument	font		843259	5					
ANR	843367	Identifier	font		843259	0					
ANR	843368	Argument	path		843259	6					
ANR	843369	Identifier	path		843259	0					
ANR	843370	Argument	pdcolor		843259	7					
ANR	843371	Identifier	pdcolor		843259	0					
ANR	843372	Argument	pcpath		843259	8					
ANR	843373	Identifier	pcpath		843259	0					
ANR	843374	Argument	mem		843259	9					
ANR	843375	Identifier	mem		843259	0					
ANR	843376	IfStatement	if ( code < 0 )		843259	9					
ANR	843377	Condition	code < 0	145:8:5162:5169	843259	0	True				
ANR	843378	RelationalExpression	code < 0		843259	0		<			
ANR	843379	Identifier	code		843259	0					
ANR	843380	PrimaryExpression	0		843259	1					
ANR	843381	CompoundStatement		19:18:705:705	843259	1					
ANR	843382	ExpressionStatement	"gs_free_object ( mem , penum , ""gx_default_text_begin"" )"	146:8:5182:5233	843259	0	True				
ANR	843383	CallExpression	"gs_free_object ( mem , penum , ""gx_default_text_begin"" )"		843259	0					
ANR	843384	Callee	gs_free_object		843259	0					
ANR	843385	Identifier	gs_free_object		843259	0					
ANR	843386	ArgumentList	mem		843259	1					
ANR	843387	Argument	mem		843259	0					
ANR	843388	Identifier	mem		843259	0					
ANR	843389	Argument	penum		843259	1					
ANR	843390	Identifier	penum		843259	0					
ANR	843391	Argument	"""gx_default_text_begin"""		843259	2					
ANR	843392	PrimaryExpression	"""gx_default_text_begin"""		843259	0					
ANR	843393	ReturnStatement	return code ;	147:8:5243:5254	843259	1	True				
ANR	843394	Identifier	code		843259	0					
ANR	843395	ExpressionStatement	penum -> auto_release = false	149:4:5266:5293	843259	10	True				
ANR	843396	AssignmentExpression	penum -> auto_release = false		843259	0		=			
ANR	843397	PtrMemberAccess	penum -> auto_release		843259	0					
ANR	843398	Identifier	penum		843259	0					
ANR	843399	Identifier	auto_release		843259	1					
ANR	843400	Identifier	false		843259	1					
ANR	843401	ExpressionStatement	penum -> level = pgs -> level	150:4:5313:5338	843259	11	True				
ANR	843402	AssignmentExpression	penum -> level = pgs -> level		843259	0		=			
ANR	843403	PtrMemberAccess	penum -> level		843259	0					
ANR	843404	Identifier	penum		843259	0					
ANR	843405	Identifier	level		843259	1					
ANR	843406	PtrMemberAccess	pgs -> level		843259	1					
ANR	843407	Identifier	pgs		843259	0					
ANR	843408	Identifier	level		843259	1					
ANR	843409	IfStatement	if ( operation & TEXT_DO_ANY_CHARPATH )		843259	12					
ANR	843410	Condition	operation & TEXT_DO_ANY_CHARPATH	151:8:5348:5379	843259	0	True				
ANR	843411	BitAndExpression	operation & TEXT_DO_ANY_CHARPATH		843259	0		&			
ANR	843412	Identifier	operation		843259	0					
ANR	843413	Identifier	TEXT_DO_ANY_CHARPATH		843259	1					
ANR	843414	ExpressionStatement	penum -> charpath_flag = ( operation & TEXT_DO_FALSE_CHARPATH ? cpm_false_charpath : operation & TEXT_DO_TRUE_CHARPATH ? cpm_true_charpath : operation & TEXT_DO_FALSE_CHARBOXPATH ? cpm_false_charboxpath : operation & TEXT_DO_TRUE_CHARBOXPATH ? cpm_true_charboxpath : operation & TEXT_DO_CHARWIDTH ? cpm_charwidth : cpm_show )	152:8:5390:5808	843259	1	True				
ANR	843415	AssignmentExpression	penum -> charpath_flag = ( operation & TEXT_DO_FALSE_CHARPATH ? cpm_false_charpath : operation & TEXT_DO_TRUE_CHARPATH ? cpm_true_charpath : operation & TEXT_DO_FALSE_CHARBOXPATH ? cpm_false_charboxpath : operation & TEXT_DO_TRUE_CHARBOXPATH ? cpm_true_charboxpath : operation & TEXT_DO_CHARWIDTH ? cpm_charwidth : cpm_show )		843259	0		=			
ANR	843416	PtrMemberAccess	penum -> charpath_flag		843259	0					
ANR	843417	Identifier	penum		843259	0					
ANR	843418	Identifier	charpath_flag		843259	1					
ANR	843419	ConditionalExpression	operation & TEXT_DO_FALSE_CHARPATH ? cpm_false_charpath : operation & TEXT_DO_TRUE_CHARPATH ? cpm_true_charpath : operation & TEXT_DO_FALSE_CHARBOXPATH ? cpm_false_charboxpath : operation & TEXT_DO_TRUE_CHARBOXPATH ? cpm_true_charboxpath : operation & TEXT_DO_CHARWIDTH ? cpm_charwidth : cpm_show		843259	1					
ANR	843420	Condition	operation & TEXT_DO_FALSE_CHARPATH		843259	0					
ANR	843421	BitAndExpression	operation & TEXT_DO_FALSE_CHARPATH		843259	0		&			
ANR	843422	Identifier	operation		843259	0					
ANR	843423	Identifier	TEXT_DO_FALSE_CHARPATH		843259	1					
ANR	843424	Identifier	cpm_false_charpath		843259	1					
ANR	843425	ConditionalExpression	operation & TEXT_DO_TRUE_CHARPATH ? cpm_true_charpath : operation & TEXT_DO_FALSE_CHARBOXPATH ? cpm_false_charboxpath : operation & TEXT_DO_TRUE_CHARBOXPATH ? cpm_true_charboxpath : operation & TEXT_DO_CHARWIDTH ? cpm_charwidth : cpm_show		843259	2					
ANR	843426	Condition	operation & TEXT_DO_TRUE_CHARPATH		843259	0					
ANR	843427	BitAndExpression	operation & TEXT_DO_TRUE_CHARPATH		843259	0		&			
ANR	843428	Identifier	operation		843259	0					
ANR	843429	Identifier	TEXT_DO_TRUE_CHARPATH		843259	1					
ANR	843430	Identifier	cpm_true_charpath		843259	1					
ANR	843431	ConditionalExpression	operation & TEXT_DO_FALSE_CHARBOXPATH ? cpm_false_charboxpath : operation & TEXT_DO_TRUE_CHARBOXPATH ? cpm_true_charboxpath : operation & TEXT_DO_CHARWIDTH ? cpm_charwidth : cpm_show		843259	2					
ANR	843432	Condition	operation & TEXT_DO_FALSE_CHARBOXPATH		843259	0					
ANR	843433	BitAndExpression	operation & TEXT_DO_FALSE_CHARBOXPATH		843259	0		&			
ANR	843434	Identifier	operation		843259	0					
ANR	843435	Identifier	TEXT_DO_FALSE_CHARBOXPATH		843259	1					
ANR	843436	Identifier	cpm_false_charboxpath		843259	1					
ANR	843437	ConditionalExpression	operation & TEXT_DO_TRUE_CHARBOXPATH ? cpm_true_charboxpath : operation & TEXT_DO_CHARWIDTH ? cpm_charwidth : cpm_show		843259	2					
ANR	843438	Condition	operation & TEXT_DO_TRUE_CHARBOXPATH		843259	0					
ANR	843439	BitAndExpression	operation & TEXT_DO_TRUE_CHARBOXPATH		843259	0		&			
ANR	843440	Identifier	operation		843259	0					
ANR	843441	Identifier	TEXT_DO_TRUE_CHARBOXPATH		843259	1					
ANR	843442	Identifier	cpm_true_charboxpath		843259	1					
ANR	843443	ConditionalExpression	operation & TEXT_DO_CHARWIDTH ? cpm_charwidth : cpm_show		843259	2					
ANR	843444	Condition	operation & TEXT_DO_CHARWIDTH		843259	0					
ANR	843445	BitAndExpression	operation & TEXT_DO_CHARWIDTH		843259	0		&			
ANR	843446	Identifier	operation		843259	0					
ANR	843447	Identifier	TEXT_DO_CHARWIDTH		843259	1					
ANR	843448	Identifier	cpm_charwidth		843259	1					
ANR	843449	Identifier	cpm_show		843259	2					
ANR	843450	ElseStatement	else		843259	0					
ANR	843451	ExpressionStatement	penum -> charpath_flag = ( propagate_charpath ? pgs -> in_charpath : cpm_show )	160:8:5827:5912	843259	0	True				
ANR	843452	AssignmentExpression	penum -> charpath_flag = ( propagate_charpath ? pgs -> in_charpath : cpm_show )		843259	0		=			
ANR	843453	PtrMemberAccess	penum -> charpath_flag		843259	0					
ANR	843454	Identifier	penum		843259	0					
ANR	843455	Identifier	charpath_flag		843259	1					
ANR	843456	ConditionalExpression	propagate_charpath ? pgs -> in_charpath : cpm_show		843259	1					
ANR	843457	Condition	propagate_charpath		843259	0					
ANR	843458	Identifier	propagate_charpath		843259	0					
ANR	843459	PtrMemberAccess	pgs -> in_charpath		843259	1					
ANR	843460	Identifier	pgs		843259	0					
ANR	843461	Identifier	in_charpath		843259	1					
ANR	843462	Identifier	cpm_show		843259	2					
ANR	843463	ExpressionStatement	penum -> cc = 0	162:4:5918:5931	843259	13	True				
ANR	843464	AssignmentExpression	penum -> cc = 0		843259	0		=			
ANR	843465	PtrMemberAccess	penum -> cc		843259	0					
ANR	843466	Identifier	penum		843259	0					
ANR	843467	Identifier	cc		843259	1					
ANR	843468	PrimaryExpression	0		843259	1					
ANR	843469	ExpressionStatement	penum -> continue_proc = continue_show	163:4:5937:5973	843259	14	True				
ANR	843470	AssignmentExpression	penum -> continue_proc = continue_show		843259	0		=			
ANR	843471	PtrMemberAccess	penum -> continue_proc		843259	0					
ANR	843472	Identifier	penum		843259	0					
ANR	843473	Identifier	continue_proc		843259	1					
ANR	843474	Identifier	continue_show		843259	1					
ANR	843475	SwitchStatement	switch ( penum -> charpath_flag )		843259	15					
ANR	843476	Condition	penum -> charpath_flag	164:12:5987:6006	843259	0	True				
ANR	843477	PtrMemberAccess	penum -> charpath_flag		843259	0					
ANR	843478	Identifier	penum		843259	0					
ANR	843479	Identifier	charpath_flag		843259	1					
ANR	843480	CompoundStatement		38:34:1542:1542	843259	1					
ANR	843481	Label	case cpm_false_charpath :	165:4:6015:6038	843259	0	True				
ANR	843482	Identifier	cpm_false_charpath		843259	0					
ANR	843483	Label	case cpm_true_charpath :	165:29:6040:6062	843259	1	True				
ANR	843484	Identifier	cpm_true_charpath		843259	0					
ANR	843485	ExpressionStatement	penum -> can_cache = - 1	166:8:6072:6093	843259	2	True				
ANR	843486	AssignmentExpression	penum -> can_cache = - 1		843259	0		=			
ANR	843487	PtrMemberAccess	penum -> can_cache		843259	0					
ANR	843488	Identifier	penum		843259	0					
ANR	843489	Identifier	can_cache		843259	1					
ANR	843490	UnaryOperationExpression	- 1		843259	1					
ANR	843491	UnaryOperator	-		843259	0					
ANR	843492	PrimaryExpression	1		843259	1					
ANR	843493	BreakStatement	break ;	166:31:6095:6100	843259	3	True				
ANR	843494	Label	case cpm_false_charboxpath :	167:4:6106:6132	843259	4	True				
ANR	843495	Identifier	cpm_false_charboxpath		843259	0					
ANR	843496	Label	case cpm_true_charboxpath :	167:32:6134:6159	843259	5	True				
ANR	843497	Identifier	cpm_true_charboxpath		843259	0					
ANR	843498	ExpressionStatement	penum -> can_cache = 0	168:8:6169:6189	843259	6	True				
ANR	843499	AssignmentExpression	penum -> can_cache = 0		843259	0		=			
ANR	843500	PtrMemberAccess	penum -> can_cache		843259	0					
ANR	843501	Identifier	penum		843259	0					
ANR	843502	Identifier	can_cache		843259	1					
ANR	843503	PrimaryExpression	0		843259	1					
ANR	843504	BreakStatement	break ;	168:30:6191:6196	843259	7	True				
ANR	843505	Label	case cpm_charwidth :	169:4:6202:6220	843259	8	True				
ANR	843506	Identifier	cpm_charwidth		843259	0					
ANR	843507	Label	default :	170:4:6226:6233	843259	9	True				
ANR	843508	Identifier	default		843259	0					
ANR	843509	ExpressionStatement	penum -> can_cache = 1	171:8:6277:6297	843259	10	True				
ANR	843510	AssignmentExpression	penum -> can_cache = 1		843259	0		=			
ANR	843511	PtrMemberAccess	penum -> can_cache		843259	0					
ANR	843512	Identifier	penum		843259	0					
ANR	843513	Identifier	can_cache		843259	1					
ANR	843514	PrimaryExpression	1		843259	1					
ANR	843515	BreakStatement	break ;	171:30:6299:6304	843259	11	True				
ANR	843516	ExpressionStatement	code = show_state_setup ( penum )	173:4:6316:6346	843259	16	True				
ANR	843517	AssignmentExpression	code = show_state_setup ( penum )		843259	0		=			
ANR	843518	Identifier	code		843259	0					
ANR	843519	CallExpression	show_state_setup ( penum )		843259	1					
ANR	843520	Callee	show_state_setup		843259	0					
ANR	843521	Identifier	show_state_setup		843259	0					
ANR	843522	ArgumentList	penum		843259	1					
ANR	843523	Argument	penum		843259	0					
ANR	843524	Identifier	penum		843259	0					
ANR	843525	IfStatement	if ( code < 0 )		843259	17					
ANR	843526	Condition	code < 0	174:8:6356:6363	843259	0	True				
ANR	843527	RelationalExpression	code < 0		843259	0		<			
ANR	843528	Identifier	code		843259	0					
ANR	843529	PrimaryExpression	0		843259	1					
ANR	843530	ReturnStatement	return code ;	175:8:6374:6385	843259	1	True				
ANR	843531	Identifier	code		843259	0					
ANR	843532	ExpressionStatement	penum -> show_gstate = ( propagate_charpath && ( pgs -> in_charpath != 0 ) ? pgs -> show_gstate : pgs )	176:4:6391:6501	843259	18	True				
ANR	843533	AssignmentExpression	penum -> show_gstate = ( propagate_charpath && ( pgs -> in_charpath != 0 ) ? pgs -> show_gstate : pgs )		843259	0		=			
ANR	843534	PtrMemberAccess	penum -> show_gstate		843259	0					
ANR	843535	Identifier	penum		843259	0					
ANR	843536	Identifier	show_gstate		843259	1					
ANR	843537	ConditionalExpression	propagate_charpath && ( pgs -> in_charpath != 0 ) ? pgs -> show_gstate : pgs		843259	1					
ANR	843538	Condition	propagate_charpath && ( pgs -> in_charpath != 0 )		843259	0					
ANR	843539	AndExpression	propagate_charpath && ( pgs -> in_charpath != 0 )		843259	0		&&			
ANR	843540	Identifier	propagate_charpath		843259	0					
ANR	843541	EqualityExpression	pgs -> in_charpath != 0		843259	1		!=			
ANR	843542	PtrMemberAccess	pgs -> in_charpath		843259	0					
ANR	843543	Identifier	pgs		843259	0					
ANR	843544	Identifier	in_charpath		843259	1					
ANR	843545	PrimaryExpression	0		843259	1					
ANR	843546	PtrMemberAccess	pgs -> show_gstate		843259	1					
ANR	843547	Identifier	pgs		843259	0					
ANR	843548	Identifier	show_gstate		843259	1					
ANR	843549	Identifier	pgs		843259	2					
ANR	843550	IfStatement	if ( ! ( ~operation & ( TEXT_DO_NONE | TEXT_RETURN_WIDTH ) ) )		843259	19					
ANR	843551	Condition	! ( ~operation & ( TEXT_DO_NONE | TEXT_RETURN_WIDTH ) )	179:8:6511:6560	843259	0	True				
ANR	843552	UnaryOperationExpression	! ( ~operation & ( TEXT_DO_NONE | TEXT_RETURN_WIDTH ) )		843259	0					
ANR	843553	UnaryOperator	!		843259	0					
ANR	843554	BitAndExpression	~operation & ( TEXT_DO_NONE | TEXT_RETURN_WIDTH )		843259	1		&			
ANR	843555	Identifier	~operation		843259	0					
ANR	843556	InclusiveOrExpression	TEXT_DO_NONE | TEXT_RETURN_WIDTH		843259	1		|			
ANR	843557	Identifier	TEXT_DO_NONE		843259	0					
ANR	843558	Identifier	TEXT_RETURN_WIDTH		843259	1					
ANR	843559	CompoundStatement		55:8:2183:2328	843259	1					
ANR	843560	IdentifierDeclStatement	"gx_device_null * dev_null = gs_alloc_struct ( mem , gx_device_null , & st_device_null , ""stringwidth(dev_null)"" ) ;"	181:8:6650:6795	843259	0	True				
ANR	843561	IdentifierDecl	"* dev_null = gs_alloc_struct ( mem , gx_device_null , & st_device_null , ""stringwidth(dev_null)"" )"		843259	0					
ANR	843562	IdentifierDeclType	gx_device_null *		843259	0					
ANR	843563	Identifier	dev_null		843259	1					
ANR	843564	AssignmentExpression	"* dev_null = gs_alloc_struct ( mem , gx_device_null , & st_device_null , ""stringwidth(dev_null)"" )"		843259	2		=			
ANR	843565	Identifier	dev_null		843259	0					
ANR	843566	CallExpression	"gs_alloc_struct ( mem , gx_device_null , & st_device_null , ""stringwidth(dev_null)"" )"		843259	1					
ANR	843567	Callee	gs_alloc_struct		843259	0					
ANR	843568	Identifier	gs_alloc_struct		843259	0					
ANR	843569	ArgumentList	mem		843259	1					
ANR	843570	Argument	mem		843259	0					
ANR	843571	Identifier	mem		843259	0					
ANR	843572	Argument	gx_device_null		843259	1					
ANR	843573	Identifier	gx_device_null		843259	0					
ANR	843574	Argument	& st_device_null		843259	2					
ANR	843575	UnaryOperationExpression	& st_device_null		843259	0					
ANR	843576	UnaryOperator	&		843259	0					
ANR	843577	Identifier	st_device_null		843259	1					
ANR	843578	Argument	"""stringwidth(dev_null)"""		843259	3					
ANR	843579	PrimaryExpression	"""stringwidth(dev_null)"""		843259	0					
ANR	843580	IfStatement	if ( dev_null == 0 )		843259	1					
ANR	843581	Condition	dev_null == 0	185:12:6810:6822	843259	0	True				
ANR	843582	EqualityExpression	dev_null == 0		843259	0		==			
ANR	843583	Identifier	dev_null		843259	0					
ANR	843584	PrimaryExpression	0		843259	1					
ANR	843585	ExpressionStatement	return_error ( gs_error_VMerror )	186:12:6837:6867	843259	1	True				
ANR	843586	CallExpression	return_error ( gs_error_VMerror )		843259	0					
ANR	843587	Callee	return_error		843259	0					
ANR	843588	Identifier	return_error		843259	0					
ANR	843589	ArgumentList	gs_error_VMerror		843259	1					
ANR	843590	Argument	gs_error_VMerror		843259	0					
ANR	843591	Identifier	gs_error_VMerror		843259	0					
ANR	843592	IfStatement	if ( ( code = gs_gsave ( pgs ) ) < 0 )		843259	2					
ANR	843593	Condition	( code = gs_gsave ( pgs ) ) < 0	188:12:6933:6958	843259	0	True				
ANR	843594	RelationalExpression	( code = gs_gsave ( pgs ) ) < 0		843259	0		<			
ANR	843595	AssignmentExpression	code = gs_gsave ( pgs )		843259	0		=			
ANR	843596	Identifier	code		843259	0					
ANR	843597	CallExpression	gs_gsave ( pgs )		843259	1					
ANR	843598	Callee	gs_gsave		843259	0					
ANR	843599	Identifier	gs_gsave		843259	0					
ANR	843600	ArgumentList	pgs		843259	1					
ANR	843601	Argument	pgs		843259	0					
ANR	843602	Identifier	pgs		843259	0					
ANR	843603	PrimaryExpression	0		843259	1					
ANR	843604	ReturnStatement	return code ;	189:12:6973:6984	843259	1	True				
ANR	843605	Identifier	code		843259	0					
ANR	843606	ExpressionStatement	penum -> level = pgs -> level	190:8:6994:7019	843259	3	True				
ANR	843607	AssignmentExpression	penum -> level = pgs -> level		843259	0		=			
ANR	843608	PtrMemberAccess	penum -> level		843259	0					
ANR	843609	Identifier	penum		843259	0					
ANR	843610	Identifier	level		843259	1					
ANR	843611	PtrMemberAccess	pgs -> level		843259	1					
ANR	843612	Identifier	pgs		843259	0					
ANR	843613	Identifier	level		843259	1					
ANR	843614	ExpressionStatement	"gs_make_null_device ( dev_null , gs_currentdevice_inline ( pgs ) , mem )"	192:8:7145:7209	843259	4	True				
ANR	843615	CallExpression	"gs_make_null_device ( dev_null , gs_currentdevice_inline ( pgs ) , mem )"		843259	0					
ANR	843616	Callee	gs_make_null_device		843259	0					
ANR	843617	Identifier	gs_make_null_device		843259	0					
ANR	843618	ArgumentList	dev_null		843259	1					
ANR	843619	Argument	dev_null		843259	0					
ANR	843620	Identifier	dev_null		843259	0					
ANR	843621	Argument	gs_currentdevice_inline ( pgs )		843259	1					
ANR	843622	CallExpression	gs_currentdevice_inline ( pgs )		843259	0					
ANR	843623	Callee	gs_currentdevice_inline		843259	0					
ANR	843624	Identifier	gs_currentdevice_inline		843259	0					
ANR	843625	ArgumentList	pgs		843259	1					
ANR	843626	Argument	pgs		843259	0					
ANR	843627	Identifier	pgs		843259	0					
ANR	843628	Argument	mem		843259	2					
ANR	843629	Identifier	mem		843259	0					
ANR	843630	ExpressionStatement	pgs -> ctm_default_set = false	193:8:7219:7247	843259	5	True				
ANR	843631	AssignmentExpression	pgs -> ctm_default_set = false		843259	0		=			
ANR	843632	PtrMemberAccess	pgs -> ctm_default_set		843259	0					
ANR	843633	Identifier	pgs		843259	0					
ANR	843634	Identifier	ctm_default_set		843259	1					
ANR	843635	Identifier	false		843259	1					
ANR	843636	ExpressionStatement	penum -> dev_null = dev_null	194:8:7257:7283	843259	6	True				
ANR	843637	AssignmentExpression	penum -> dev_null = dev_null		843259	0		=			
ANR	843638	PtrMemberAccess	penum -> dev_null		843259	0					
ANR	843639	Identifier	penum		843259	0					
ANR	843640	Identifier	dev_null		843259	1					
ANR	843641	Identifier	dev_null		843259	1					
ANR	843642	ExpressionStatement	"gx_device_retain ( ( gx_device * ) dev_null , true )"	196:8:7371:7416	843259	7	True				
ANR	843643	CallExpression	"gx_device_retain ( ( gx_device * ) dev_null , true )"		843259	0					
ANR	843644	Callee	gx_device_retain		843259	0					
ANR	843645	Identifier	gx_device_retain		843259	0					
ANR	843646	ArgumentList	( gx_device * ) dev_null		843259	1					
ANR	843647	Argument	( gx_device * ) dev_null		843259	0					
ANR	843648	CastExpression	( gx_device * ) dev_null		843259	0					
ANR	843649	CastTarget	gx_device *		843259	0					
ANR	843650	Identifier	dev_null		843259	1					
ANR	843651	Argument	true		843259	1					
ANR	843652	Identifier	true		843259	0					
ANR	843653	ExpressionStatement	"gs_setdevice_no_init ( pgs , ( gx_device * ) dev_null )"	197:8:7426:7475	843259	8	True				
ANR	843654	CallExpression	"gs_setdevice_no_init ( pgs , ( gx_device * ) dev_null )"		843259	0					
ANR	843655	Callee	gs_setdevice_no_init		843259	0					
ANR	843656	Identifier	gs_setdevice_no_init		843259	0					
ANR	843657	ArgumentList	pgs		843259	1					
ANR	843658	Argument	pgs		843259	0					
ANR	843659	Identifier	pgs		843259	0					
ANR	843660	Argument	( gx_device * ) dev_null		843259	1					
ANR	843661	CastExpression	( gx_device * ) dev_null		843259	0					
ANR	843662	CastTarget	gx_device *		843259	0					
ANR	843663	Identifier	dev_null		843259	1					
ANR	843664	ExpressionStatement	gs_newpath ( pgs )	199:8:7553:7568	843259	9	True				
ANR	843665	CallExpression	gs_newpath ( pgs )		843259	0					
ANR	843666	Callee	gs_newpath		843259	0					
ANR	843667	Identifier	gs_newpath		843259	0					
ANR	843668	ArgumentList	pgs		843259	1					
ANR	843669	Argument	pgs		843259	0					
ANR	843670	Identifier	pgs		843259	0					
ANR	843671	ExpressionStatement	"gx_translate_to_fixed ( pgs , fixed_0 , fixed_0 )"	200:8:7578:7622	843259	10	True				
ANR	843672	CallExpression	"gx_translate_to_fixed ( pgs , fixed_0 , fixed_0 )"		843259	0					
ANR	843673	Callee	gx_translate_to_fixed		843259	0					
ANR	843674	Identifier	gx_translate_to_fixed		843259	0					
ANR	843675	ArgumentList	pgs		843259	1					
ANR	843676	Argument	pgs		843259	0					
ANR	843677	Identifier	pgs		843259	0					
ANR	843678	Argument	fixed_0		843259	1					
ANR	843679	Identifier	fixed_0		843259	0					
ANR	843680	Argument	fixed_0		843259	2					
ANR	843681	Identifier	fixed_0		843259	0					
ANR	843682	ExpressionStatement	"code = gx_path_add_point ( pgs -> path , fixed_0 , fixed_0 )"	201:8:7632:7685	843259	11	True				
ANR	843683	AssignmentExpression	"code = gx_path_add_point ( pgs -> path , fixed_0 , fixed_0 )"		843259	0		=			
ANR	843684	Identifier	code		843259	0					
ANR	843685	CallExpression	"gx_path_add_point ( pgs -> path , fixed_0 , fixed_0 )"		843259	1					
ANR	843686	Callee	gx_path_add_point		843259	0					
ANR	843687	Identifier	gx_path_add_point		843259	0					
ANR	843688	ArgumentList	pgs -> path		843259	1					
ANR	843689	Argument	pgs -> path		843259	0					
ANR	843690	PtrMemberAccess	pgs -> path		843259	0					
ANR	843691	Identifier	pgs		843259	0					
ANR	843692	Identifier	path		843259	1					
ANR	843693	Argument	fixed_0		843259	1					
ANR	843694	Identifier	fixed_0		843259	0					
ANR	843695	Argument	fixed_0		843259	2					
ANR	843696	Identifier	fixed_0		843259	0					
ANR	843697	IfStatement	if ( code < 0 )		843259	12					
ANR	843698	Condition	code < 0	202:12:7699:7706	843259	0	True				
ANR	843699	RelationalExpression	code < 0		843259	0		<			
ANR	843700	Identifier	code		843259	0					
ANR	843701	PrimaryExpression	0		843259	1					
ANR	843702	ReturnStatement	return code ;	203:12:7721:7732	843259	1	True				
ANR	843703	Identifier	code		843259	0					
ANR	843704	ExpressionStatement	* ppte = ( gs_text_enum_t * ) penum	205:4:7744:7775	843259	20	True				
ANR	843705	AssignmentExpression	* ppte = ( gs_text_enum_t * ) penum		843259	0		=			
ANR	843706	UnaryOperationExpression	* ppte		843259	0					
ANR	843707	UnaryOperator	*		843259	0					
ANR	843708	Identifier	ppte		843259	1					
ANR	843709	CastExpression	( gs_text_enum_t * ) penum		843259	1					
ANR	843710	CastTarget	gs_text_enum_t *		843259	0					
ANR	843711	Identifier	penum		843259	1					
ANR	843712	ReturnStatement	return 0 ;	206:4:7781:7789	843259	21	True				
ANR	843713	PrimaryExpression	0		843259	0					
ANR	843714	ReturnType	int		843259	1					
ANR	843715	Identifier	gx_default_text_begin		843259	2					
ANR	843716	ParameterList	"gx_device * dev , gs_gstate * pgs1 , const gs_text_params_t * text , gs_font * font , gx_path * path , const gx_device_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * mem , gs_text_enum_t * * ppte"		843259	3					
ANR	843717	Parameter	gx_device * dev	122:22:4175:4189	843259	0	True				
ANR	843718	ParameterType	gx_device *		843259	0					
ANR	843719	Identifier	dev		843259	1					
ANR	843720	Parameter	gs_gstate * pgs1	122:39:4192:4207	843259	1	True				
ANR	843721	ParameterType	gs_gstate *		843259	0					
ANR	843722	Identifier	pgs1		843259	1					
ANR	843723	Parameter	const gs_text_params_t * text	123:22:4232:4260	843259	2	True				
ANR	843724	ParameterType	const gs_text_params_t *		843259	0					
ANR	843725	Identifier	text		843259	1					
ANR	843726	Parameter	gs_font * font	123:53:4263:4276	843259	3	True				
ANR	843727	ParameterType	gs_font *		843259	0					
ANR	843728	Identifier	font		843259	1					
ANR	843729	Parameter	gx_path * path	124:22:4301:4314	843259	4	True				
ANR	843730	ParameterType	gx_path *		843259	0					
ANR	843731	Identifier	path		843259	1					
ANR	843732	Parameter	const gx_device_color * pdcolor	124:38:4317:4347	843259	5	True				
ANR	843733	ParameterType	const gx_device_color *		843259	0					
ANR	843734	Identifier	pdcolor		843259	1					
ANR	843735	Parameter	const gx_clip_path * pcpath	125:22:4372:4398	843259	6	True				
ANR	843736	ParameterType	const gx_clip_path *		843259	0					
ANR	843737	Identifier	pcpath		843259	1					
ANR	843738	Parameter	gs_memory_t * mem	126:22:4423:4439	843259	7	True				
ANR	843739	ParameterType	gs_memory_t *		843259	0					
ANR	843740	Identifier	mem		843259	1					
ANR	843741	Parameter	gs_text_enum_t * * ppte	126:41:4442:4463	843259	8	True				
ANR	843742	ParameterType	gs_text_enum_t * *		843259	0					
ANR	843743	Identifier	ppte		843259	1					
ANR	843744	CFGEntryNode	ENTRY		843259		True				
ANR	843745	CFGExitNode	EXIT		843259		True				
ANR	843746	Symbol	continue_show		843259						
ANR	843747	Symbol	gs_object_type		843259						
ANR	843748	Symbol	cpm_show		843259						
ANR	843749	Symbol	* ppte		843259						
ANR	843750	Symbol	TEXT_DO_FALSE_CHARBOXPATH		843259						
ANR	843751	Symbol	* pgs		843259						
ANR	843752	Symbol	cpm_true_charboxpath		843259						
ANR	843753	Symbol	pgs -> ctm_default_set		843259						
ANR	843754	Symbol	path		843259						
ANR	843755	Symbol	dev		843259						
ANR	843756	Symbol	gs_currentdevice_inline		843259						
ANR	843757	Symbol	cpm_true_charpath		843259						
ANR	843758	Symbol	show_state_setup		843259						
ANR	843759	Symbol	fixed_0		843259						
ANR	843760	Symbol	penum -> charpath_flag		843259						
ANR	843761	Symbol	gx_device_null		843259						
ANR	843762	Symbol	text		843259						
ANR	843763	Symbol	gs_error_Fatal		843259						
ANR	843764	Symbol	gs_show_enum_alloc		843259						
ANR	843765	Symbol	TEXT_RETURN_WIDTH		843259						
ANR	843766	Symbol	& st_device_null		843259						
ANR	843767	Symbol	gs_text_enum_init		843259						
ANR	843768	Symbol	penum		843259						
ANR	843769	Symbol	cpm_charwidth		843259						
ANR	843770	Symbol	penum -> can_cache		843259						
ANR	843771	Symbol	gx_path_add_point		843259						
ANR	843772	Symbol	propagate_charpath		843259						
ANR	843773	Symbol	TEXT_DO_TRUE_CHARBOXPATH		843259						
ANR	843774	Symbol	true		843259						
ANR	843775	Symbol	penum -> continue_proc		843259						
ANR	843776	Symbol	pgs -> in_charpath		843259						
ANR	843777	Symbol	* penum		843259						
ANR	843778	Symbol	pgs -> level		843259						
ANR	843779	Symbol	code		843259						
ANR	843780	Symbol	ppte		843259						
ANR	843781	Symbol	* text		843259						
ANR	843782	Symbol	gs_alloc_struct		843259						
ANR	843783	Symbol	pgs -> path		843259						
ANR	843784	Symbol	TEXT_DO_FALSE_CHARPATH		843259						
ANR	843785	Symbol	penum -> cc		843259						
ANR	843786	Symbol	gs_gsave		843259						
ANR	843787	Symbol	mem		843259						
ANR	843788	Symbol	pgs -> show_gstate		843259						
ANR	843789	Symbol	penum -> show_gstate		843259						
ANR	843790	Symbol	pgs		843259						
ANR	843791	Symbol	TEXT_DO_NONE		843259						
ANR	843792	Symbol	pcpath		843259						
ANR	843793	Symbol	TEXT_DO_CHARWIDTH		843259						
ANR	843794	Symbol	penum -> level		843259						
ANR	843795	Symbol	pgs1		843259						
ANR	843796	Symbol	cpm_false_charboxpath		843259						
ANR	843797	Symbol	TEXT_DO_DRAW		843259						
ANR	843798	Symbol	dev_null		843259						
ANR	843799	Symbol	cpm_false_charpath		843259						
ANR	843800	Symbol	false		843259						
ANR	843801	Symbol	~operation		843259						
ANR	843802	Symbol	pdcolor		843259						
ANR	843803	Symbol	TEXT_DO_ANY_CHARPATH		843259						
ANR	843804	Symbol	text -> operation		843259						
ANR	843805	Symbol	penum -> auto_release		843259						
ANR	843806	Symbol	& st_gs_gstate		843259						
ANR	843807	Symbol	gs_error_VMerror		843259						
ANR	843808	Symbol	penum -> dev_null		843259						
ANR	843809	Symbol	TEXT_DO_TRUE_CHARPATH		843259						
ANR	843810	Symbol	& default_text_procs		843259						
ANR	843811	Symbol	operation		843259						
ANR	843812	Symbol	font		843259						
ANR	843813	Function	gs_text_count_chars	210:0:7844:8750							
ANR	843814	FunctionDef	"gs_text_count_chars (gs_gstate * pgs , gs_text_params_t * text , gs_memory_t * mem)"		843813	0					
ANR	843815	CompoundStatement		212:0:7928:8750	843813	0					
ANR	843816	ExpressionStatement	font_proc_next_char_glyph ( ( * next_proc ) ) = pgs -> font -> procs . next_char_glyph	213:4:7934:8008	843813	0	True				
ANR	843817	AssignmentExpression	font_proc_next_char_glyph ( ( * next_proc ) ) = pgs -> font -> procs . next_char_glyph		843813	0		=			
ANR	843818	CallExpression	font_proc_next_char_glyph ( ( * next_proc ) )		843813	0					
ANR	843819	Callee	font_proc_next_char_glyph		843813	0					
ANR	843820	Identifier	font_proc_next_char_glyph		843813	0					
ANR	843821	ArgumentList	* next_proc		843813	1					
ANR	843822	Argument	* next_proc		843813	0					
ANR	843823	UnaryOperationExpression	* next_proc		843813	0					
ANR	843824	UnaryOperator	*		843813	0					
ANR	843825	Identifier	next_proc		843813	1					
ANR	843826	MemberAccess	pgs -> font -> procs . next_char_glyph		843813	1					
ANR	843827	PtrMemberAccess	pgs -> font -> procs		843813	0					
ANR	843828	PtrMemberAccess	pgs -> font		843813	0					
ANR	843829	Identifier	pgs		843813	0					
ANR	843830	Identifier	font		843813	1					
ANR	843831	Identifier	procs		843813	1					
ANR	843832	Identifier	next_char_glyph		843813	1					
ANR	843833	IfStatement	if ( next_proc == gs_default_next_char_glyph )		843813	1					
ANR	843834	Condition	next_proc == gs_default_next_char_glyph	215:8:8019:8057	843813	0	True				
ANR	843835	EqualityExpression	next_proc == gs_default_next_char_glyph		843813	0		==			
ANR	843836	Identifier	next_proc		843813	0					
ANR	843837	Identifier	gs_default_next_char_glyph		843813	1					
ANR	843838	ReturnStatement	return text -> size ;	216:8:8068:8085	843813	1	True				
ANR	843839	PtrMemberAccess	text -> size		843813	0					
ANR	843840	Identifier	text		843813	0					
ANR	843841	Identifier	size		843813	1					
ANR	843842	ElseStatement	else		843813	0					
ANR	843843	CompoundStatement		12:8:344:352	843813	0					
ANR	843844	IdentifierDeclStatement	gs_text_enum_t tenum ;	219:8:8140:8160	843813	0	True				
ANR	843845	IdentifierDecl	tenum		843813	0					
ANR	843846	IdentifierDeclType	gs_text_enum_t		843813	0					
ANR	843847	Identifier	tenum		843813	1					
ANR	843848	IdentifierDeclStatement	gs_char tchr ;	220:8:8204:8216	843813	1	True				
ANR	843849	IdentifierDecl	tchr		843813	0					
ANR	843850	IdentifierDeclType	gs_char		843813	0					
ANR	843851	Identifier	tchr		843813	1					
ANR	843852	IdentifierDeclStatement	gs_glyph tglyph ;	221:8:8226:8241	843813	2	True				
ANR	843853	IdentifierDecl	tglyph		843813	0					
ANR	843854	IdentifierDeclType	gs_glyph		843813	0					
ANR	843855	Identifier	tglyph		843813	1					
ANR	843856	IdentifierDeclStatement	int size = 0 ;	222:8:8251:8263	843813	3	True				
ANR	843857	IdentifierDecl	size = 0		843813	0					
ANR	843858	IdentifierDeclType	int		843813	0					
ANR	843859	Identifier	size		843813	1					
ANR	843860	AssignmentExpression	size = 0		843813	2		=			
ANR	843861	Identifier	size		843813	0					
ANR	843862	PrimaryExpression	0		843813	1					
ANR	843863	IdentifierDeclStatement	int code ;	223:8:8273:8281	843813	4	True				
ANR	843864	IdentifierDecl	code		843813	0					
ANR	843865	IdentifierDeclType	int		843813	0					
ANR	843866	Identifier	code		843813	1					
ANR	843867	ExpressionStatement	size = 0	225:8:8292:8300	843813	5	True				
ANR	843868	AssignmentExpression	size = 0		843813	0		=			
ANR	843869	Identifier	size		843813	0					
ANR	843870	PrimaryExpression	0		843813	1					
ANR	843871	ExpressionStatement	"code = gs_text_enum_init ( & tenum , & default_text_procs , NULL , NULL , text , pgs -> root_font , NULL , NULL , NULL , mem )"	227:8:8311:8479	843813	6	True				
ANR	843872	AssignmentExpression	"code = gs_text_enum_init ( & tenum , & default_text_procs , NULL , NULL , text , pgs -> root_font , NULL , NULL , NULL , mem )"		843813	0		=			
ANR	843873	Identifier	code		843813	0					
ANR	843874	CallExpression	"gs_text_enum_init ( & tenum , & default_text_procs , NULL , NULL , text , pgs -> root_font , NULL , NULL , NULL , mem )"		843813	1					
ANR	843875	Callee	gs_text_enum_init		843813	0					
ANR	843876	Identifier	gs_text_enum_init		843813	0					
ANR	843877	ArgumentList	& tenum		843813	1					
ANR	843878	Argument	& tenum		843813	0					
ANR	843879	UnaryOperationExpression	& tenum		843813	0					
ANR	843880	UnaryOperator	&		843813	0					
ANR	843881	Identifier	tenum		843813	1					
ANR	843882	Argument	& default_text_procs		843813	1					
ANR	843883	UnaryOperationExpression	& default_text_procs		843813	0					
ANR	843884	UnaryOperator	&		843813	0					
ANR	843885	Identifier	default_text_procs		843813	1					
ANR	843886	Argument	NULL		843813	2					
ANR	843887	Identifier	NULL		843813	0					
ANR	843888	Argument	NULL		843813	3					
ANR	843889	Identifier	NULL		843813	0					
ANR	843890	Argument	text		843813	4					
ANR	843891	Identifier	text		843813	0					
ANR	843892	Argument	pgs -> root_font		843813	5					
ANR	843893	PtrMemberAccess	pgs -> root_font		843813	0					
ANR	843894	Identifier	pgs		843813	0					
ANR	843895	Identifier	root_font		843813	1					
ANR	843896	Argument	NULL		843813	6					
ANR	843897	Identifier	NULL		843813	0					
ANR	843898	Argument	NULL		843813	7					
ANR	843899	Identifier	NULL		843813	0					
ANR	843900	Argument	NULL		843813	8					
ANR	843901	Identifier	NULL		843813	0					
ANR	843902	Argument	mem		843813	9					
ANR	843903	Identifier	mem		843813	0					
ANR	843904	IfStatement	if ( code < 0 )		843813	7					
ANR	843905	Condition	code < 0	230:12:8493:8500	843813	0	True				
ANR	843906	RelationalExpression	code < 0		843813	0		<			
ANR	843907	Identifier	code		843813	0					
ANR	843908	PrimaryExpression	0		843813	1					
ANR	843909	ReturnStatement	return code ;	231:12:8515:8526	843813	1	True				
ANR	843910	Identifier	code		843813	0					
ANR	843911	WhileStatement	"while ( ( code = ( * next_proc ) ( & tenum , & tchr , & tglyph ) ) != 2 )"		843813	8					
ANR	843912	Condition	"( code = ( * next_proc ) ( & tenum , & tchr , & tglyph ) ) != 2"	232:15:8543:8592	843813	0	True				
ANR	843913	EqualityExpression	"( code = ( * next_proc ) ( & tenum , & tchr , & tglyph ) ) != 2"		843813	0		!=			
ANR	843914	AssignmentExpression	"code = ( * next_proc ) ( & tenum , & tchr , & tglyph )"		843813	0		=			
ANR	843915	Identifier	code		843813	0					
ANR	843916	CallExpression	"( * next_proc ) ( & tenum , & tchr , & tglyph )"		843813	1					
ANR	843917	Callee	* next_proc		843813	0					
ANR	843918	UnaryOperationExpression	* next_proc		843813	0					
ANR	843919	UnaryOperator	*		843813	0					
ANR	843920	Identifier	next_proc		843813	1					
ANR	843921	ArgumentList	& tenum		843813	1					
ANR	843922	Argument	& tenum		843813	0					
ANR	843923	UnaryOperationExpression	& tenum		843813	0					
ANR	843924	UnaryOperator	&		843813	0					
ANR	843925	Identifier	tenum		843813	1					
ANR	843926	Argument	& tchr		843813	1					
ANR	843927	UnaryOperationExpression	& tchr		843813	0					
ANR	843928	UnaryOperator	&		843813	0					
ANR	843929	Identifier	tchr		843813	1					
ANR	843930	Argument	& tglyph		843813	2					
ANR	843931	UnaryOperationExpression	& tglyph		843813	0					
ANR	843932	UnaryOperator	&		843813	0					
ANR	843933	Identifier	tglyph		843813	1					
ANR	843934	PrimaryExpression	2		843813	1					
ANR	843935	CompoundStatement		21:67:666:666	843813	1					
ANR	843936	IfStatement	if ( code < 0 )		843813	0					
ANR	843937	Condition	code < 0	233:16:8613:8620	843813	0	True				
ANR	843938	RelationalExpression	code < 0		843813	0		<			
ANR	843939	Identifier	code		843813	0					
ANR	843940	PrimaryExpression	0		843813	1					
ANR	843941	BreakStatement	break ;	234:16:8639:8644	843813	1	True				
ANR	843942	ExpressionStatement	++ size	235:12:8658:8664	843813	1	True				
ANR	843943	UnaryExpression	++ size		843813	0					
ANR	843944	IncDec	++		843813	0					
ANR	843945	Identifier	size		843813	1					
ANR	843946	IfStatement	if ( code < 0 )		843813	9					
ANR	843947	Condition	code < 0	237:12:8688:8695	843813	0	True				
ANR	843948	RelationalExpression	code < 0		843813	0		<			
ANR	843949	Identifier	code		843813	0					
ANR	843950	PrimaryExpression	0		843813	1					
ANR	843951	ReturnStatement	return code ;	238:12:8710:8721	843813	1	True				
ANR	843952	Identifier	code		843813	0					
ANR	843953	ReturnStatement	return size ;	239:8:8731:8742	843813	10	True				
ANR	843954	Identifier	size		843813	0					
ANR	843955	ReturnType	int		843813	1					
ANR	843956	Identifier	gs_text_count_chars		843813	2					
ANR	843957	ParameterList	"gs_gstate * pgs , gs_text_params_t * text , gs_memory_t * mem"		843813	3					
ANR	843958	Parameter	gs_gstate * pgs	211:20:7868:7882	843813	0	True				
ANR	843959	ParameterType	gs_gstate *		843813	0					
ANR	843960	Identifier	pgs		843813	1					
ANR	843961	Parameter	gs_text_params_t * text	211:37:7885:7906	843813	1	True				
ANR	843962	ParameterType	gs_text_params_t *		843813	0					
ANR	843963	Identifier	text		843813	1					
ANR	843964	Parameter	gs_memory_t * mem	211:61:7909:7925	843813	2	True				
ANR	843965	ParameterType	gs_memory_t *		843813	0					
ANR	843966	Identifier	mem		843813	1					
ANR	843967	CFGEntryNode	ENTRY		843813		True				
ANR	843968	CFGExitNode	EXIT		843813		True				
ANR	843969	Symbol	pgs -> font -> procs . next_char_glyph		843813						
ANR	843970	Symbol	code		843813						
ANR	843971	Symbol	* pgs		843813						
ANR	843972	Symbol	gs_default_next_char_glyph		843813						
ANR	843973	Symbol	* text		843813						
ANR	843974	Symbol	* pgs -> font		843813						
ANR	843975	Symbol	tchr		843813						
ANR	843976	Symbol	text -> size		843813						
ANR	843977	Symbol	pgs -> root_font		843813						
ANR	843978	Symbol	* next_proc		843813						
ANR	843979	Symbol	mem		843813						
ANR	843980	Symbol	text		843813						
ANR	843981	Symbol	pgs		843813						
ANR	843982	Symbol	& tenum		843813						
ANR	843983	Symbol	& tchr		843813						
ANR	843984	Symbol	NULL		843813						
ANR	843985	Symbol	gs_text_enum_init		843813						
ANR	843986	Symbol	tenum		843813						
ANR	843987	Symbol	tglyph		843813						
ANR	843988	Symbol	next_proc		843813						
ANR	843989	Symbol	pgs -> font		843813						
ANR	843990	Symbol	* * pgs		843813						
ANR	843991	Symbol	pgs -> font -> procs		843813						
ANR	843992	Symbol	size		843813						
ANR	843993	Symbol	& tglyph		843813						
ANR	843994	Symbol	font_proc_next_char_glyph		843813						
ANR	843995	Symbol	& default_text_procs		843813						
ANR	843996	Function	gx_hld_stringwidth_begin	244:0:8820:9250							
ANR	843997	FunctionDef	"gx_hld_stringwidth_begin (gs_gstate * pgs , gx_path * * path)"		843996	0					
ANR	843998	CompoundStatement		246:0:8882:9250	843996	0					
ANR	843999	ExpressionStatement	extern_st ( st_gs_gstate )	247:4:8888:8911	843996	0	True				
ANR	844000	CallExpression	extern_st ( st_gs_gstate )		843996	0					
ANR	844001	Callee	extern_st		843996	0					
ANR	844002	Identifier	extern_st		843996	0					
ANR	844003	ArgumentList	st_gs_gstate		843996	1					
ANR	844004	Argument	st_gs_gstate		843996	0					
ANR	844005	Identifier	st_gs_gstate		843996	0					
ANR	844006	IdentifierDeclStatement	int code ;	248:4:8917:8925	843996	1	True				
ANR	844007	IdentifierDecl	code		843996	0					
ANR	844008	IdentifierDeclType	int		843996	0					
ANR	844009	Identifier	code		843996	1					
ANR	844010	IfStatement	"if ( gs_object_type ( pgs -> memory , pgs ) != & st_gs_gstate )"		843996	2					
ANR	844011	Condition	"gs_object_type ( pgs -> memory , pgs ) != & st_gs_gstate"	250:8:8936:8984	843996	0	True				
ANR	844012	EqualityExpression	"gs_object_type ( pgs -> memory , pgs ) != & st_gs_gstate"		843996	0		!=			
ANR	844013	CallExpression	"gs_object_type ( pgs -> memory , pgs )"		843996	0					
ANR	844014	Callee	gs_object_type		843996	0					
ANR	844015	Identifier	gs_object_type		843996	0					
ANR	844016	ArgumentList	pgs -> memory		843996	1					
ANR	844017	Argument	pgs -> memory		843996	0					
ANR	844018	PtrMemberAccess	pgs -> memory		843996	0					
ANR	844019	Identifier	pgs		843996	0					
ANR	844020	Identifier	memory		843996	1					
ANR	844021	Argument	pgs		843996	1					
ANR	844022	Identifier	pgs		843996	0					
ANR	844023	UnaryOperationExpression	& st_gs_gstate		843996	1					
ANR	844024	UnaryOperator	&		843996	0					
ANR	844025	Identifier	st_gs_gstate		843996	1					
ANR	844026	ExpressionStatement	return_error ( gs_error_unregistered )	251:8:8995:9030	843996	1	True				
ANR	844027	CallExpression	return_error ( gs_error_unregistered )		843996	0					
ANR	844028	Callee	return_error		843996	0					
ANR	844029	Identifier	return_error		843996	0					
ANR	844030	ArgumentList	gs_error_unregistered		843996	1					
ANR	844031	Argument	gs_error_unregistered		843996	0					
ANR	844032	Identifier	gs_error_unregistered		843996	0					
ANR	844033	ExpressionStatement	code = gs_gsave ( pgs )	252:4:9036:9056	843996	3	True				
ANR	844034	AssignmentExpression	code = gs_gsave ( pgs )		843996	0		=			
ANR	844035	Identifier	code		843996	0					
ANR	844036	CallExpression	gs_gsave ( pgs )		843996	1					
ANR	844037	Callee	gs_gsave		843996	0					
ANR	844038	Identifier	gs_gsave		843996	0					
ANR	844039	ArgumentList	pgs		843996	1					
ANR	844040	Argument	pgs		843996	0					
ANR	844041	Identifier	pgs		843996	0					
ANR	844042	IfStatement	if ( code < 0 )		843996	4					
ANR	844043	Condition	code < 0	253:8:9066:9073	843996	0	True				
ANR	844044	RelationalExpression	code < 0		843996	0		<			
ANR	844045	Identifier	code		843996	0					
ANR	844046	PrimaryExpression	0		843996	1					
ANR	844047	ReturnStatement	return code ;	254:8:9084:9095	843996	1	True				
ANR	844048	Identifier	code		843996	0					
ANR	844049	ExpressionStatement	gs_newpath ( pgs )	255:4:9101:9116	843996	5	True				
ANR	844050	CallExpression	gs_newpath ( pgs )		843996	0					
ANR	844051	Callee	gs_newpath		843996	0					
ANR	844052	Identifier	gs_newpath		843996	0					
ANR	844053	ArgumentList	pgs		843996	1					
ANR	844054	Argument	pgs		843996	0					
ANR	844055	Identifier	pgs		843996	0					
ANR	844056	ExpressionStatement	* path = pgs -> path	256:4:9122:9139	843996	6	True				
ANR	844057	AssignmentExpression	* path = pgs -> path		843996	0		=			
ANR	844058	UnaryOperationExpression	* path		843996	0					
ANR	844059	UnaryOperator	*		843996	0					
ANR	844060	Identifier	path		843996	1					
ANR	844061	PtrMemberAccess	pgs -> path		843996	1					
ANR	844062	Identifier	pgs		843996	0					
ANR	844063	Identifier	path		843996	1					
ANR	844064	ExpressionStatement	"gx_translate_to_fixed ( pgs , fixed_0 , fixed_0 )"	257:4:9145:9189	843996	7	True				
ANR	844065	CallExpression	"gx_translate_to_fixed ( pgs , fixed_0 , fixed_0 )"		843996	0					
ANR	844066	Callee	gx_translate_to_fixed		843996	0					
ANR	844067	Identifier	gx_translate_to_fixed		843996	0					
ANR	844068	ArgumentList	pgs		843996	1					
ANR	844069	Argument	pgs		843996	0					
ANR	844070	Identifier	pgs		843996	0					
ANR	844071	Argument	fixed_0		843996	1					
ANR	844072	Identifier	fixed_0		843996	0					
ANR	844073	Argument	fixed_0		843996	2					
ANR	844074	Identifier	fixed_0		843996	0					
ANR	844075	ReturnStatement	"return gx_path_add_point ( pgs -> path , fixed_0 , fixed_0 ) ;"	258:4:9195:9248	843996	8	True				
ANR	844076	CallExpression	"gx_path_add_point ( pgs -> path , fixed_0 , fixed_0 )"		843996	0					
ANR	844077	Callee	gx_path_add_point		843996	0					
ANR	844078	Identifier	gx_path_add_point		843996	0					
ANR	844079	ArgumentList	pgs -> path		843996	1					
ANR	844080	Argument	pgs -> path		843996	0					
ANR	844081	PtrMemberAccess	pgs -> path		843996	0					
ANR	844082	Identifier	pgs		843996	0					
ANR	844083	Identifier	path		843996	1					
ANR	844084	Argument	fixed_0		843996	1					
ANR	844085	Identifier	fixed_0		843996	0					
ANR	844086	Argument	fixed_0		843996	2					
ANR	844087	Identifier	fixed_0		843996	0					
ANR	844088	ReturnType	int		843996	1					
ANR	844089	Identifier	gx_hld_stringwidth_begin		843996	2					
ANR	844090	ParameterList	"gs_gstate * pgs , gx_path * * path"		843996	3					
ANR	844091	Parameter	gs_gstate * pgs	245:25:8849:8863	843996	0	True				
ANR	844092	ParameterType	gs_gstate *		843996	0					
ANR	844093	Identifier	pgs		843996	1					
ANR	844094	Parameter	gx_path * * path	245:42:8866:8879	843996	1	True				
ANR	844095	ParameterType	gx_path * *		843996	0					
ANR	844096	Identifier	path		843996	1					
ANR	844097	CFGEntryNode	ENTRY		843996		True				
ANR	844098	CFGExitNode	EXIT		843996		True				
ANR	844099	Symbol	gs_error_unregistered		843996						
ANR	844100	Symbol	st_gs_gstate		843996						
ANR	844101	Symbol	code		843996						
ANR	844102	Symbol	gs_object_type		843996						
ANR	844103	Symbol	* pgs		843996						
ANR	844104	Symbol	pgs -> path		843996						
ANR	844105	Symbol	gx_path_add_point		843996						
ANR	844106	Symbol	& st_gs_gstate		843996						
ANR	844107	Symbol	path		843996						
ANR	844108	Symbol	gs_gsave		843996						
ANR	844109	Symbol	fixed_0		843996						
ANR	844110	Symbol	* path		843996						
ANR	844111	Symbol	pgs		843996						
ANR	844112	Symbol	pgs -> memory		843996						
ANR	844113	Function	gx_default_text_restore_state	261:0:9253:9494							
ANR	844114	FunctionDef	gx_default_text_restore_state (gs_text_enum_t * pte)		844113	0					
ANR	844115	CompoundStatement		263:0:9308:9494	844113	0					
ANR	844116	IdentifierDeclStatement	gs_show_enum * penum ;	264:4:9314:9333	844113	0	True				
ANR	844117	IdentifierDecl	* penum		844113	0					
ANR	844118	IdentifierDeclType	gs_show_enum *		844113	0					
ANR	844119	Identifier	penum		844113	1					
ANR	844120	IdentifierDeclStatement	gs_gstate * pgs ;	265:4:9339:9353	844113	1	True				
ANR	844121	IdentifierDecl	* pgs		844113	0					
ANR	844122	IdentifierDeclType	gs_gstate *		844113	0					
ANR	844123	Identifier	pgs		844113	1					
ANR	844124	IfStatement	"if ( SHOW_IS ( pte , TEXT_DO_NONE ) )"		844113	2					
ANR	844125	Condition	"SHOW_IS ( pte , TEXT_DO_NONE )"	267:8:9364:9389	844113	0	True				
ANR	844126	CallExpression	"SHOW_IS ( pte , TEXT_DO_NONE )"		844113	0					
ANR	844127	Callee	SHOW_IS		844113	0					
ANR	844128	Identifier	SHOW_IS		844113	0					
ANR	844129	ArgumentList	pte		844113	1					
ANR	844130	Argument	pte		844113	0					
ANR	844131	Identifier	pte		844113	0					
ANR	844132	Argument	TEXT_DO_NONE		844113	1					
ANR	844133	Identifier	TEXT_DO_NONE		844113	0					
ANR	844134	ReturnStatement	return 0 ;	268:8:9400:9408	844113	1	True				
ANR	844135	PrimaryExpression	0		844113	0					
ANR	844136	ExpressionStatement	penum = ( gs_show_enum * ) pte	269:4:9414:9441	844113	3	True				
ANR	844137	AssignmentExpression	penum = ( gs_show_enum * ) pte		844113	0		=			
ANR	844138	Identifier	penum		844113	0					
ANR	844139	CastExpression	( gs_show_enum * ) pte		844113	1					
ANR	844140	CastTarget	gs_show_enum *		844113	0					
ANR	844141	Identifier	pte		844113	1					
ANR	844142	ExpressionStatement	pgs = penum -> pgs	270:4:9447:9463	844113	4	True				
ANR	844143	AssignmentExpression	pgs = penum -> pgs		844113	0		=			
ANR	844144	Identifier	pgs		844113	0					
ANR	844145	PtrMemberAccess	penum -> pgs		844113	1					
ANR	844146	Identifier	penum		844113	0					
ANR	844147	Identifier	pgs		844113	1					
ANR	844148	ReturnStatement	return gs_grestore ( pgs ) ;	271:4:9469:9492	844113	5	True				
ANR	844149	CallExpression	gs_grestore ( pgs )		844113	0					
ANR	844150	Callee	gs_grestore		844113	0					
ANR	844151	Identifier	gs_grestore		844113	0					
ANR	844152	ArgumentList	pgs		844113	1					
ANR	844153	Argument	pgs		844113	0					
ANR	844154	Identifier	pgs		844113	0					
ANR	844155	ReturnType	int		844113	1					
ANR	844156	Identifier	gx_default_text_restore_state		844113	2					
ANR	844157	ParameterList	gs_text_enum_t * pte		844113	3					
ANR	844158	Parameter	gs_text_enum_t * pte	262:30:9287:9305	844113	0	True				
ANR	844159	ParameterType	gs_text_enum_t *		844113	0					
ANR	844160	Identifier	pte		844113	1					
ANR	844161	CFGEntryNode	ENTRY		844113		True				
ANR	844162	CFGExitNode	EXIT		844113		True				
ANR	844163	Symbol	pte		844113						
ANR	844164	Symbol	gs_grestore		844113						
ANR	844165	Symbol	* penum		844113						
ANR	844166	Symbol	penum		844113						
ANR	844167	Symbol	SHOW_IS		844113						
ANR	844168	Symbol	pgs		844113						
ANR	844169	Symbol	TEXT_DO_NONE		844113						
ANR	844170	Symbol	penum -> pgs		844113						
ANR	844171	DeclStmt									
ANR	844172	Decl							int	"int ( gs_show_enum * penum , gs_gstate * pgs , double llx , double lly , double urx , double ury )"	set_cache_device
ANR	844173	Function	gx_show_text_set_cache	280:0:9748:12926							
ANR	844174	FunctionDef	"gx_show_text_set_cache (gs_text_enum_t * pte , const double * pw , gs_text_cache_control_t control)"		844173	0					
ANR	844175	CompoundStatement		283:0:9880:12926	844173	0					
ANR	844176	Statement	gs_show_enum	284:4:9886:9897	844173	0	True				
ANR	844177	Statement	*	284:17:9899:9899	844173	1	True				
ANR	844178	Statement	const	284:18:9900:9904	844173	2	True				
ANR	844179	ExpressionStatement	penum = ( gs_show_enum * ) pte	284:24:9906:9933	844173	3	True				
ANR	844180	AssignmentExpression	penum = ( gs_show_enum * ) pte		844173	0		=			
ANR	844181	Identifier	penum		844173	0					
ANR	844182	CastExpression	( gs_show_enum * ) pte		844173	1					
ANR	844183	CastTarget	gs_show_enum *		844173	0					
ANR	844184	Identifier	pte		844173	1					
ANR	844185	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	285:4:9939:9966	844173	4	True				
ANR	844186	IdentifierDecl	* pgs = penum -> pgs		844173	0					
ANR	844187	IdentifierDeclType	gs_gstate *		844173	0					
ANR	844188	Identifier	pgs		844173	1					
ANR	844189	AssignmentExpression	* pgs = penum -> pgs		844173	2		=			
ANR	844190	Identifier	pgs		844173	0					
ANR	844191	PtrMemberAccess	penum -> pgs		844173	1					
ANR	844192	Identifier	penum		844173	0					
ANR	844193	Identifier	pgs		844173	1					
ANR	844194	IdentifierDeclStatement	gs_font * pfont = gs_rootfont ( pgs ) ;	286:4:9972:10005	844173	5	True				
ANR	844195	IdentifierDecl	* pfont = gs_rootfont ( pgs )		844173	0					
ANR	844196	IdentifierDeclType	gs_font *		844173	0					
ANR	844197	Identifier	pfont		844173	1					
ANR	844198	AssignmentExpression	* pfont = gs_rootfont ( pgs )		844173	2		=			
ANR	844199	Identifier	pfont		844173	0					
ANR	844200	CallExpression	gs_rootfont ( pgs )		844173	1					
ANR	844201	Callee	gs_rootfont		844173	0					
ANR	844202	Identifier	gs_rootfont		844173	0					
ANR	844203	ArgumentList	pgs		844173	1					
ANR	844204	Argument	pgs		844173	0					
ANR	844205	Identifier	pgs		844173	0					
ANR	844206	IfStatement	if ( pfont -> FontMatrix . xx == 0 && pfont -> FontMatrix . xy == 0 && pfont -> FontMatrix . yx == 0 && pfont -> FontMatrix . yy == 0 )		844173	6					
ANR	844207	Condition	pfont -> FontMatrix . xx == 0 && pfont -> FontMatrix . xy == 0 && pfont -> FontMatrix . yx == 0 && pfont -> FontMatrix . yy == 0	291:8:10223:10342	844173	0	True				
ANR	844208	AndExpression	pfont -> FontMatrix . xx == 0 && pfont -> FontMatrix . xy == 0 && pfont -> FontMatrix . yx == 0 && pfont -> FontMatrix . yy == 0		844173	0		&&			
ANR	844209	EqualityExpression	pfont -> FontMatrix . xx == 0		844173	0		==			
ANR	844210	MemberAccess	pfont -> FontMatrix . xx		844173	0					
ANR	844211	PtrMemberAccess	pfont -> FontMatrix		844173	0					
ANR	844212	Identifier	pfont		844173	0					
ANR	844213	Identifier	FontMatrix		844173	1					
ANR	844214	Identifier	xx		844173	1					
ANR	844215	PrimaryExpression	0		844173	1					
ANR	844216	AndExpression	pfont -> FontMatrix . xy == 0 && pfont -> FontMatrix . yx == 0 && pfont -> FontMatrix . yy == 0		844173	1		&&			
ANR	844217	EqualityExpression	pfont -> FontMatrix . xy == 0		844173	0		==			
ANR	844218	MemberAccess	pfont -> FontMatrix . xy		844173	0					
ANR	844219	PtrMemberAccess	pfont -> FontMatrix		844173	0					
ANR	844220	Identifier	pfont		844173	0					
ANR	844221	Identifier	FontMatrix		844173	1					
ANR	844222	Identifier	xy		844173	1					
ANR	844223	PrimaryExpression	0		844173	1					
ANR	844224	AndExpression	pfont -> FontMatrix . yx == 0 && pfont -> FontMatrix . yy == 0		844173	1		&&			
ANR	844225	EqualityExpression	pfont -> FontMatrix . yx == 0		844173	0		==			
ANR	844226	MemberAccess	pfont -> FontMatrix . yx		844173	0					
ANR	844227	PtrMemberAccess	pfont -> FontMatrix		844173	0					
ANR	844228	Identifier	pfont		844173	0					
ANR	844229	Identifier	FontMatrix		844173	1					
ANR	844230	Identifier	yx		844173	1					
ANR	844231	PrimaryExpression	0		844173	1					
ANR	844232	EqualityExpression	pfont -> FontMatrix . yy == 0		844173	1		==			
ANR	844233	MemberAccess	pfont -> FontMatrix . yy		844173	0					
ANR	844234	PtrMemberAccess	pfont -> FontMatrix		844173	0					
ANR	844235	Identifier	pfont		844173	0					
ANR	844236	Identifier	FontMatrix		844173	1					
ANR	844237	Identifier	yy		844173	1					
ANR	844238	PrimaryExpression	0		844173	1					
ANR	844239	ExpressionStatement	return_error ( gs_error_undefinedresult )	293:8:10353:10391	844173	1	True				
ANR	844240	CallExpression	return_error ( gs_error_undefinedresult )		844173	0					
ANR	844241	Callee	return_error		844173	0					
ANR	844242	Identifier	return_error		844173	0					
ANR	844243	ArgumentList	gs_error_undefinedresult		844173	1					
ANR	844244	Argument	gs_error_undefinedresult		844173	0					
ANR	844245	Identifier	gs_error_undefinedresult		844173	0					
ANR	844246	SwitchStatement	switch ( control )		844173	7					
ANR	844247	Condition	control	294:12:10437:10443	844173	0	True				
ANR	844248	Identifier	control		844173	0					
ANR	844249	CompoundStatement		12:21:565:565	844173	1					
ANR	844250	Label	case TEXT_SET_CHAR_WIDTH :	295:4:10452:10476	844173	0	True				
ANR	844251	Identifier	TEXT_SET_CHAR_WIDTH		844173	0					
ANR	844252	ReturnStatement	"return set_char_width ( penum , pgs , pw [ 0 ] , pw [ 1 ] ) ;"	296:8:10486:10533	844173	1	True				
ANR	844253	CallExpression	"set_char_width ( penum , pgs , pw [ 0 ] , pw [ 1 ] )"		844173	0					
ANR	844254	Callee	set_char_width		844173	0					
ANR	844255	Identifier	set_char_width		844173	0					
ANR	844256	ArgumentList	penum		844173	1					
ANR	844257	Argument	penum		844173	0					
ANR	844258	Identifier	penum		844173	0					
ANR	844259	Argument	pgs		844173	1					
ANR	844260	Identifier	pgs		844173	0					
ANR	844261	Argument	pw [ 0 ]		844173	2					
ANR	844262	ArrayIndexing	pw [ 0 ]		844173	0					
ANR	844263	Identifier	pw		844173	0					
ANR	844264	PrimaryExpression	0		844173	1					
ANR	844265	Argument	pw [ 1 ]		844173	3					
ANR	844266	ArrayIndexing	pw [ 1 ]		844173	0					
ANR	844267	Identifier	pw		844173	0					
ANR	844268	PrimaryExpression	1		844173	1					
ANR	844269	Label	case TEXT_SET_CACHE_DEVICE :	297:4:10539:10565	844173	2	True				
ANR	844270	Identifier	TEXT_SET_CACHE_DEVICE		844173	0					
ANR	844271	CompoundStatement		16:8:696:747	844173	3					
ANR	844272	IdentifierDeclStatement	"int code = set_char_width ( penum , pgs , pw [ 0 ] , pw [ 1 ] ) ;"	298:8:10577:10628	844173	0	True				
ANR	844273	IdentifierDecl	"code = set_char_width ( penum , pgs , pw [ 0 ] , pw [ 1 ] )"		844173	0					
ANR	844274	IdentifierDeclType	int		844173	0					
ANR	844275	Identifier	code		844173	1					
ANR	844276	AssignmentExpression	"code = set_char_width ( penum , pgs , pw [ 0 ] , pw [ 1 ] )"		844173	2		=			
ANR	844277	Identifier	code		844173	0					
ANR	844278	CallExpression	"set_char_width ( penum , pgs , pw [ 0 ] , pw [ 1 ] )"		844173	1					
ANR	844279	Callee	set_char_width		844173	0					
ANR	844280	Identifier	set_char_width		844173	0					
ANR	844281	ArgumentList	penum		844173	1					
ANR	844282	Argument	penum		844173	0					
ANR	844283	Identifier	penum		844173	0					
ANR	844284	Argument	pgs		844173	1					
ANR	844285	Identifier	pgs		844173	0					
ANR	844286	Argument	pw [ 0 ]		844173	2					
ANR	844287	ArrayIndexing	pw [ 0 ]		844173	0					
ANR	844288	Identifier	pw		844173	0					
ANR	844289	PrimaryExpression	0		844173	1					
ANR	844290	Argument	pw [ 1 ]		844173	3					
ANR	844291	ArrayIndexing	pw [ 1 ]		844173	0					
ANR	844292	Identifier	pw		844173	0					
ANR	844293	PrimaryExpression	1		844173	1					
ANR	844294	IfStatement	if ( code < 0 )		844173	1					
ANR	844295	Condition	code < 0	300:12:10675:10682	844173	0	True				
ANR	844296	RelationalExpression	code < 0		844173	0		<			
ANR	844297	Identifier	code		844173	0					
ANR	844298	PrimaryExpression	0		844173	1					
ANR	844299	ReturnStatement	return code ;	301:12:10697:10708	844173	1	True				
ANR	844300	Identifier	code		844173	0					
ANR	844301	IfStatement	"if ( SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE ) )"		844173	2					
ANR	844302	Condition	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"	302:12:10722:10773	844173	0	True				
ANR	844303	CallExpression	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"		844173	0					
ANR	844304	Callee	SHOW_IS_ALL_OF		844173	0					
ANR	844305	Identifier	SHOW_IS_ALL_OF		844173	0					
ANR	844306	ArgumentList	penum		844173	1					
ANR	844307	Argument	penum		844173	0					
ANR	844308	Identifier	penum		844173	0					
ANR	844309	Argument	TEXT_DO_NONE | TEXT_INTERVENE		844173	1					
ANR	844310	InclusiveOrExpression	TEXT_DO_NONE | TEXT_INTERVENE		844173	0		|			
ANR	844311	Identifier	TEXT_DO_NONE		844173	0					
ANR	844312	Identifier	TEXT_INTERVENE		844173	1					
ANR	844313	ReturnStatement	return code ;	303:12:10800:10811	844173	1	True				
ANR	844314	Identifier	code		844173	0					
ANR	844315	ReturnStatement	"return set_cache_device ( penum , pgs , pw [ 2 ] , pw [ 3 ] , pw [ 4 ] , pw [ 5 ] ) ;"	304:8:10821:10884	844173	3	True				
ANR	844316	CallExpression	"set_cache_device ( penum , pgs , pw [ 2 ] , pw [ 3 ] , pw [ 4 ] , pw [ 5 ] )"		844173	0					
ANR	844317	Callee	set_cache_device		844173	0					
ANR	844318	Identifier	set_cache_device		844173	0					
ANR	844319	ArgumentList	penum		844173	1					
ANR	844320	Argument	penum		844173	0					
ANR	844321	Identifier	penum		844173	0					
ANR	844322	Argument	pgs		844173	1					
ANR	844323	Identifier	pgs		844173	0					
ANR	844324	Argument	pw [ 2 ]		844173	2					
ANR	844325	ArrayIndexing	pw [ 2 ]		844173	0					
ANR	844326	Identifier	pw		844173	0					
ANR	844327	PrimaryExpression	2		844173	1					
ANR	844328	Argument	pw [ 3 ]		844173	3					
ANR	844329	ArrayIndexing	pw [ 3 ]		844173	0					
ANR	844330	Identifier	pw		844173	0					
ANR	844331	PrimaryExpression	3		844173	1					
ANR	844332	Argument	pw [ 4 ]		844173	4					
ANR	844333	ArrayIndexing	pw [ 4 ]		844173	0					
ANR	844334	Identifier	pw		844173	0					
ANR	844335	PrimaryExpression	4		844173	1					
ANR	844336	Argument	pw [ 5 ]		844173	5					
ANR	844337	ArrayIndexing	pw [ 5 ]		844173	0					
ANR	844338	Identifier	pw		844173	0					
ANR	844339	PrimaryExpression	5		844173	1					
ANR	844340	Label	case TEXT_SET_CACHE_DEVICE2 :	306:4:10896:10923	844173	4	True				
ANR	844341	Identifier	TEXT_SET_CACHE_DEVICE2		844173	0					
ANR	844342	CompoundStatement		26:8:1072:1119	844173	5					
ANR	844343	IdentifierDeclStatement	int code ;	307:8:10935:10943	844173	0	True				
ANR	844344	IdentifierDecl	code		844173	0					
ANR	844345	IdentifierDeclType	int		844173	0					
ANR	844346	Identifier	code		844173	1					
ANR	844347	IdentifierDeclStatement	bool retry = ( penum -> width_status == sws_retry ) ;	308:8:10953:11000	844173	1	True				
ANR	844348	IdentifierDecl	retry = ( penum -> width_status == sws_retry )		844173	0					
ANR	844349	IdentifierDeclType	bool		844173	0					
ANR	844350	Identifier	retry		844173	1					
ANR	844351	AssignmentExpression	retry = ( penum -> width_status == sws_retry )		844173	2		=			
ANR	844352	Identifier	retry		844173	0					
ANR	844353	EqualityExpression	penum -> width_status == sws_retry		844173	1		==			
ANR	844354	PtrMemberAccess	penum -> width_status		844173	0					
ANR	844355	Identifier	penum		844173	0					
ANR	844356	Identifier	width_status		844173	1					
ANR	844357	Identifier	sws_retry		844173	1					
ANR	844358	IfStatement	if ( pfont -> WMode )		844173	2					
ANR	844359	Condition	pfont -> WMode	310:12:11015:11026	844173	0	True				
ANR	844360	PtrMemberAccess	pfont -> WMode		844173	0					
ANR	844361	Identifier	pfont		844173	0					
ANR	844362	Identifier	WMode		844173	1					
ANR	844363	CompoundStatement		33:12:1284:1299	844173	1					
ANR	844364	IdentifierDeclStatement	"float vx = pw [ 8 ] , vy = pw [ 9 ] ;"	311:12:11043:11071	844173	0	True				
ANR	844365	IdentifierDecl	vx = pw [ 8 ]		844173	0					
ANR	844366	IdentifierDeclType	float		844173	0					
ANR	844367	Identifier	vx		844173	1					
ANR	844368	AssignmentExpression	vx = pw [ 8 ]		844173	2		=			
ANR	844369	Identifier	vx		844173	0					
ANR	844370	ArrayIndexing	pw [ 8 ]		844173	1					
ANR	844371	Identifier	pw		844173	0					
ANR	844372	PrimaryExpression	8		844173	1					
ANR	844373	IdentifierDecl	vy = pw [ 9 ]		844173	1					
ANR	844374	IdentifierDeclType	float		844173	0					
ANR	844375	Identifier	vy		844173	1					
ANR	844376	AssignmentExpression	vy = pw [ 9 ]		844173	2		=			
ANR	844377	Identifier	vy		844173	0					
ANR	844378	ArrayIndexing	pw [ 9 ]		844173	1					
ANR	844379	Identifier	pw		844173	0					
ANR	844380	PrimaryExpression	9		844173	1					
ANR	844381	IdentifierDeclStatement	"gs_fixed_point pvxy , dvxy ;"	312:12:11085:11110	844173	1	True				
ANR	844382	IdentifierDecl	pvxy		844173	0					
ANR	844383	IdentifierDeclType	gs_fixed_point		844173	0					
ANR	844384	Identifier	pvxy		844173	1					
ANR	844385	IdentifierDecl	dvxy		844173	1					
ANR	844386	IdentifierDeclType	gs_fixed_point		844173	0					
ANR	844387	Identifier	dvxy		844173	1					
ANR	844388	IdentifierDeclStatement	gs_fixed_point rewind_pvxy ;	314:12:11125:11151	844173	2	True				
ANR	844389	IdentifierDecl	rewind_pvxy		844173	0					
ANR	844390	IdentifierDeclType	gs_fixed_point		844173	0					
ANR	844391	Identifier	rewind_pvxy		844173	1					
ANR	844392	IdentifierDeclStatement	int rewind_code ;	315:12:11165:11180	844173	3	True				
ANR	844393	IdentifierDecl	rewind_code		844173	0					
ANR	844394	IdentifierDeclType	int		844173	0					
ANR	844395	Identifier	rewind_code		844173	1					
ANR	844396	IfStatement	"if ( ( code = gs_point_transform2fixed ( & pgs -> ctm , - vx , - vy , & pvxy ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , vx , vy , & dvxy ) ) < 0 )"		844173	4					
ANR	844397	Condition	"( code = gs_point_transform2fixed ( & pgs -> ctm , - vx , - vy , & pvxy ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , vx , vy , & dvxy ) ) < 0"	317:16:11199:11349	844173	0	True				
ANR	844398	OrExpression	"( code = gs_point_transform2fixed ( & pgs -> ctm , - vx , - vy , & pvxy ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , vx , vy , & dvxy ) ) < 0"		844173	0		||			
ANR	844399	RelationalExpression	"( code = gs_point_transform2fixed ( & pgs -> ctm , - vx , - vy , & pvxy ) ) < 0"		844173	0		<			
ANR	844400	AssignmentExpression	"code = gs_point_transform2fixed ( & pgs -> ctm , - vx , - vy , & pvxy )"		844173	0		=			
ANR	844401	Identifier	code		844173	0					
ANR	844402	CallExpression	"gs_point_transform2fixed ( & pgs -> ctm , - vx , - vy , & pvxy )"		844173	1					
ANR	844403	Callee	gs_point_transform2fixed		844173	0					
ANR	844404	Identifier	gs_point_transform2fixed		844173	0					
ANR	844405	ArgumentList	& pgs -> ctm		844173	1					
ANR	844406	Argument	& pgs -> ctm		844173	0					
ANR	844407	UnaryOperationExpression	& pgs -> ctm		844173	0					
ANR	844408	UnaryOperator	&		844173	0					
ANR	844409	PtrMemberAccess	pgs -> ctm		844173	1					
ANR	844410	Identifier	pgs		844173	0					
ANR	844411	Identifier	ctm		844173	1					
ANR	844412	Argument	- vx		844173	1					
ANR	844413	UnaryOperationExpression	- vx		844173	0					
ANR	844414	UnaryOperator	-		844173	0					
ANR	844415	Identifier	vx		844173	1					
ANR	844416	Argument	- vy		844173	2					
ANR	844417	UnaryOperationExpression	- vy		844173	0					
ANR	844418	UnaryOperator	-		844173	0					
ANR	844419	Identifier	vy		844173	1					
ANR	844420	Argument	& pvxy		844173	3					
ANR	844421	UnaryOperationExpression	& pvxy		844173	0					
ANR	844422	UnaryOperator	&		844173	0					
ANR	844423	Identifier	pvxy		844173	1					
ANR	844424	PrimaryExpression	0		844173	1					
ANR	844425	RelationalExpression	"( code = gs_distance_transform2fixed ( & pgs -> ctm , vx , vy , & dvxy ) ) < 0"		844173	1		<			
ANR	844426	AssignmentExpression	"code = gs_distance_transform2fixed ( & pgs -> ctm , vx , vy , & dvxy )"		844173	0		=			
ANR	844427	Identifier	code		844173	0					
ANR	844428	CallExpression	"gs_distance_transform2fixed ( & pgs -> ctm , vx , vy , & dvxy )"		844173	1					
ANR	844429	Callee	gs_distance_transform2fixed		844173	0					
ANR	844430	Identifier	gs_distance_transform2fixed		844173	0					
ANR	844431	ArgumentList	& pgs -> ctm		844173	1					
ANR	844432	Argument	& pgs -> ctm		844173	0					
ANR	844433	UnaryOperationExpression	& pgs -> ctm		844173	0					
ANR	844434	UnaryOperator	&		844173	0					
ANR	844435	PtrMemberAccess	pgs -> ctm		844173	1					
ANR	844436	Identifier	pgs		844173	0					
ANR	844437	Identifier	ctm		844173	1					
ANR	844438	Argument	vx		844173	1					
ANR	844439	Identifier	vx		844173	0					
ANR	844440	Argument	vy		844173	2					
ANR	844441	Identifier	vy		844173	0					
ANR	844442	Argument	& dvxy		844173	3					
ANR	844443	UnaryOperationExpression	& dvxy		844173	0					
ANR	844444	UnaryOperator	&		844173	0					
ANR	844445	Identifier	dvxy		844173	1					
ANR	844446	PrimaryExpression	0		844173	1					
ANR	844447	ReturnStatement	return 0 ;	320:16:11385:11393	844173	1	True				
ANR	844448	PrimaryExpression	0		844173	0					
ANR	844449	IfStatement	"if ( ( code = set_char_width ( penum , pgs , pw [ 6 ] , pw [ 7 ] ) ) < 0 )"		844173	5					
ANR	844450	Condition	"( code = set_char_width ( penum , pgs , pw [ 6 ] , pw [ 7 ] ) ) < 0"	321:16:11443:11495	844173	0	True				
ANR	844451	RelationalExpression	"( code = set_char_width ( penum , pgs , pw [ 6 ] , pw [ 7 ] ) ) < 0"		844173	0		<			
ANR	844452	AssignmentExpression	"code = set_char_width ( penum , pgs , pw [ 6 ] , pw [ 7 ] )"		844173	0		=			
ANR	844453	Identifier	code		844173	0					
ANR	844454	CallExpression	"set_char_width ( penum , pgs , pw [ 6 ] , pw [ 7 ] )"		844173	1					
ANR	844455	Callee	set_char_width		844173	0					
ANR	844456	Identifier	set_char_width		844173	0					
ANR	844457	ArgumentList	penum		844173	1					
ANR	844458	Argument	penum		844173	0					
ANR	844459	Identifier	penum		844173	0					
ANR	844460	Argument	pgs		844173	1					
ANR	844461	Identifier	pgs		844173	0					
ANR	844462	Argument	pw [ 6 ]		844173	2					
ANR	844463	ArrayIndexing	pw [ 6 ]		844173	0					
ANR	844464	Identifier	pw		844173	0					
ANR	844465	PrimaryExpression	6		844173	1					
ANR	844466	Argument	pw [ 7 ]		844173	3					
ANR	844467	ArrayIndexing	pw [ 7 ]		844173	0					
ANR	844468	Identifier	pw		844173	0					
ANR	844469	PrimaryExpression	7		844173	1					
ANR	844470	PrimaryExpression	0		844173	1					
ANR	844471	ReturnStatement	return code ;	322:16:11514:11525	844173	1	True				
ANR	844472	Identifier	code		844173	0					
ANR	844473	IfStatement	"if ( SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE ) )"		844173	6					
ANR	844474	Condition	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"	323:16:11543:11594	844173	0	True				
ANR	844475	CallExpression	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"		844173	0					
ANR	844476	Callee	SHOW_IS_ALL_OF		844173	0					
ANR	844477	Identifier	SHOW_IS_ALL_OF		844173	0					
ANR	844478	ArgumentList	penum		844173	1					
ANR	844479	Argument	penum		844173	0					
ANR	844480	Identifier	penum		844173	0					
ANR	844481	Argument	TEXT_DO_NONE | TEXT_INTERVENE		844173	1					
ANR	844482	InclusiveOrExpression	TEXT_DO_NONE | TEXT_INTERVENE		844173	0		|			
ANR	844483	Identifier	TEXT_DO_NONE		844173	0					
ANR	844484	Identifier	TEXT_INTERVENE		844173	1					
ANR	844485	ReturnStatement	return code ;	324:16:11613:11624	844173	1	True				
ANR	844486	Identifier	code		844173	0					
ANR	844487	ExpressionStatement	"gx_translate_to_fixed ( pgs , pvxy . x , pvxy . y )"	326:12:11687:11729	844173	7	True				
ANR	844488	CallExpression	"gx_translate_to_fixed ( pgs , pvxy . x , pvxy . y )"		844173	0					
ANR	844489	Callee	gx_translate_to_fixed		844173	0					
ANR	844490	Identifier	gx_translate_to_fixed		844173	0					
ANR	844491	ArgumentList	pgs		844173	1					
ANR	844492	Argument	pgs		844173	0					
ANR	844493	Identifier	pgs		844173	0					
ANR	844494	Argument	pvxy . x		844173	1					
ANR	844495	MemberAccess	pvxy . x		844173	0					
ANR	844496	Identifier	pvxy		844173	0					
ANR	844497	Identifier	x		844173	1					
ANR	844498	Argument	pvxy . y		844173	2					
ANR	844499	MemberAccess	pvxy . y		844173	0					
ANR	844500	Identifier	pvxy		844173	0					
ANR	844501	Identifier	y		844173	1					
ANR	844502	ExpressionStatement	"code = set_cache_device ( penum , pgs , pw [ 2 ] , pw [ 3 ] , pw [ 4 ] , pw [ 5 ] )"	327:12:11743:11806	844173	8	True				
ANR	844503	AssignmentExpression	"code = set_cache_device ( penum , pgs , pw [ 2 ] , pw [ 3 ] , pw [ 4 ] , pw [ 5 ] )"		844173	0		=			
ANR	844504	Identifier	code		844173	0					
ANR	844505	CallExpression	"set_cache_device ( penum , pgs , pw [ 2 ] , pw [ 3 ] , pw [ 4 ] , pw [ 5 ] )"		844173	1					
ANR	844506	Callee	set_cache_device		844173	0					
ANR	844507	Identifier	set_cache_device		844173	0					
ANR	844508	ArgumentList	penum		844173	1					
ANR	844509	Argument	penum		844173	0					
ANR	844510	Identifier	penum		844173	0					
ANR	844511	Argument	pgs		844173	1					
ANR	844512	Identifier	pgs		844173	0					
ANR	844513	Argument	pw [ 2 ]		844173	2					
ANR	844514	ArrayIndexing	pw [ 2 ]		844173	0					
ANR	844515	Identifier	pw		844173	0					
ANR	844516	PrimaryExpression	2		844173	1					
ANR	844517	Argument	pw [ 3 ]		844173	3					
ANR	844518	ArrayIndexing	pw [ 3 ]		844173	0					
ANR	844519	Identifier	pw		844173	0					
ANR	844520	PrimaryExpression	3		844173	1					
ANR	844521	Argument	pw [ 4 ]		844173	4					
ANR	844522	ArrayIndexing	pw [ 4 ]		844173	0					
ANR	844523	Identifier	pw		844173	0					
ANR	844524	PrimaryExpression	4		844173	1					
ANR	844525	Argument	pw [ 5 ]		844173	5					
ANR	844526	ArrayIndexing	pw [ 5 ]		844173	0					
ANR	844527	Identifier	pw		844173	0					
ANR	844528	PrimaryExpression	5		844173	1					
ANR	844529	IfStatement	if ( code != 1 )		844173	9					
ANR	844530	Condition	code != 1	328:16:11824:11832	844173	0	True				
ANR	844531	EqualityExpression	code != 1		844173	0		!=			
ANR	844532	Identifier	code		844173	0					
ANR	844533	PrimaryExpression	1		844173	1					
ANR	844534	CompoundStatement		46:27:1954:1954	844173	1					
ANR	844535	IfStatement	if ( retry )		844173	0					
ANR	844536	Condition	retry	329:20:11857:11861	844173	0	True				
ANR	844537	Identifier	retry		844173	0					
ANR	844538	CompoundStatement		47:27:1983:1983	844173	1					
ANR	844539	ExpressionStatement	"rewind_code = gs_point_transform2fixed ( & pgs -> ctm , vx , vy , & rewind_pvxy )"	330:19:11885:11956	844173	0	True				
ANR	844540	AssignmentExpression	"rewind_code = gs_point_transform2fixed ( & pgs -> ctm , vx , vy , & rewind_pvxy )"		844173	0		=			
ANR	844541	Identifier	rewind_code		844173	0					
ANR	844542	CallExpression	"gs_point_transform2fixed ( & pgs -> ctm , vx , vy , & rewind_pvxy )"		844173	1					
ANR	844543	Callee	gs_point_transform2fixed		844173	0					
ANR	844544	Identifier	gs_point_transform2fixed		844173	0					
ANR	844545	ArgumentList	& pgs -> ctm		844173	1					
ANR	844546	Argument	& pgs -> ctm		844173	0					
ANR	844547	UnaryOperationExpression	& pgs -> ctm		844173	0					
ANR	844548	UnaryOperator	&		844173	0					
ANR	844549	PtrMemberAccess	pgs -> ctm		844173	1					
ANR	844550	Identifier	pgs		844173	0					
ANR	844551	Identifier	ctm		844173	1					
ANR	844552	Argument	vx		844173	1					
ANR	844553	Identifier	vx		844173	0					
ANR	844554	Argument	vy		844173	2					
ANR	844555	Identifier	vy		844173	0					
ANR	844556	Argument	& rewind_pvxy		844173	3					
ANR	844557	UnaryOperationExpression	& rewind_pvxy		844173	0					
ANR	844558	UnaryOperator	&		844173	0					
ANR	844559	Identifier	rewind_pvxy		844173	1					
ANR	844560	IfStatement	if ( rewind_code < 0 )		844173	1					
ANR	844561	Condition	rewind_code < 0	331:23:11981:11995	844173	0	True				
ANR	844562	RelationalExpression	rewind_code < 0		844173	0		<			
ANR	844563	Identifier	rewind_code		844173	0					
ANR	844564	PrimaryExpression	0		844173	1					
ANR	844565	CompoundStatement		49:40:2117:2117	844173	1					
ANR	844566	ExpressionStatement	return_error ( gs_error_unregistered )	333:23:12100:12135	844173	0	True				
ANR	844567	CallExpression	return_error ( gs_error_unregistered )		844173	0					
ANR	844568	Callee	return_error		844173	0					
ANR	844569	Identifier	return_error		844173	0					
ANR	844570	ArgumentList	gs_error_unregistered		844173	1					
ANR	844571	Argument	gs_error_unregistered		844173	0					
ANR	844572	Identifier	gs_error_unregistered		844173	0					
ANR	844573	ExpressionStatement	"gx_translate_to_fixed ( pgs , rewind_pvxy . x , rewind_pvxy . y )"	336:19:12258:12314	844173	2	True				
ANR	844574	CallExpression	"gx_translate_to_fixed ( pgs , rewind_pvxy . x , rewind_pvxy . y )"		844173	0					
ANR	844575	Callee	gx_translate_to_fixed		844173	0					
ANR	844576	Identifier	gx_translate_to_fixed		844173	0					
ANR	844577	ArgumentList	pgs		844173	1					
ANR	844578	Argument	pgs		844173	0					
ANR	844579	Identifier	pgs		844173	0					
ANR	844580	Argument	rewind_pvxy . x		844173	1					
ANR	844581	MemberAccess	rewind_pvxy . x		844173	0					
ANR	844582	Identifier	rewind_pvxy		844173	0					
ANR	844583	Identifier	x		844173	1					
ANR	844584	Argument	rewind_pvxy . y		844173	2					
ANR	844585	MemberAccess	rewind_pvxy . y		844173	0					
ANR	844586	Identifier	rewind_pvxy		844173	0					
ANR	844587	Identifier	y		844173	1					
ANR	844588	ReturnStatement	return code ;	338:16:12350:12361	844173	1	True				
ANR	844589	Identifier	code		844173	0					
ANR	844590	ExpressionStatement	( penum -> cc ) -> offset . x += dvxy . x	341:12:12440:12471	844173	10	True				
ANR	844591	AssignmentExpression	( penum -> cc ) -> offset . x += dvxy . x		844173	0		+=			
ANR	844592	MemberAccess	( penum -> cc ) -> offset . x		844173	0					
ANR	844593	PtrMemberAccess	( penum -> cc ) -> offset		844173	0					
ANR	844594	PtrMemberAccess	penum -> cc		844173	0					
ANR	844595	Identifier	penum		844173	0					
ANR	844596	Identifier	cc		844173	1					
ANR	844597	Identifier	offset		844173	1					
ANR	844598	Identifier	x		844173	1					
ANR	844599	MemberAccess	dvxy . x		844173	1					
ANR	844600	Identifier	dvxy		844173	0					
ANR	844601	Identifier	x		844173	1					
ANR	844602	ExpressionStatement	( penum -> cc ) -> offset . y += dvxy . y	342:12:12485:12516	844173	11	True				
ANR	844603	AssignmentExpression	( penum -> cc ) -> offset . y += dvxy . y		844173	0		+=			
ANR	844604	MemberAccess	( penum -> cc ) -> offset . y		844173	0					
ANR	844605	PtrMemberAccess	( penum -> cc ) -> offset		844173	0					
ANR	844606	PtrMemberAccess	penum -> cc		844173	0					
ANR	844607	Identifier	penum		844173	0					
ANR	844608	Identifier	cc		844173	1					
ANR	844609	Identifier	offset		844173	1					
ANR	844610	Identifier	y		844173	1					
ANR	844611	MemberAccess	dvxy . y		844173	1					
ANR	844612	Identifier	dvxy		844173	0					
ANR	844613	Identifier	y		844173	1					
ANR	844614	ElseStatement	else		844173	0					
ANR	844615	CompoundStatement		61:15:2652:2652	844173	0					
ANR	844616	ExpressionStatement	"code = set_char_width ( penum , pgs , pw [ 0 ] , pw [ 1 ] )"	344:12:12547:12594	844173	0	True				
ANR	844617	AssignmentExpression	"code = set_char_width ( penum , pgs , pw [ 0 ] , pw [ 1 ] )"		844173	0		=			
ANR	844618	Identifier	code		844173	0					
ANR	844619	CallExpression	"set_char_width ( penum , pgs , pw [ 0 ] , pw [ 1 ] )"		844173	1					
ANR	844620	Callee	set_char_width		844173	0					
ANR	844621	Identifier	set_char_width		844173	0					
ANR	844622	ArgumentList	penum		844173	1					
ANR	844623	Argument	penum		844173	0					
ANR	844624	Identifier	penum		844173	0					
ANR	844625	Argument	pgs		844173	1					
ANR	844626	Identifier	pgs		844173	0					
ANR	844627	Argument	pw [ 0 ]		844173	2					
ANR	844628	ArrayIndexing	pw [ 0 ]		844173	0					
ANR	844629	Identifier	pw		844173	0					
ANR	844630	PrimaryExpression	0		844173	1					
ANR	844631	Argument	pw [ 1 ]		844173	3					
ANR	844632	ArrayIndexing	pw [ 1 ]		844173	0					
ANR	844633	Identifier	pw		844173	0					
ANR	844634	PrimaryExpression	1		844173	1					
ANR	844635	IfStatement	if ( code < 0 )		844173	1					
ANR	844636	Condition	code < 0	345:16:12612:12619	844173	0	True				
ANR	844637	RelationalExpression	code < 0		844173	0		<			
ANR	844638	Identifier	code		844173	0					
ANR	844639	PrimaryExpression	0		844173	1					
ANR	844640	ReturnStatement	return code ;	346:16:12638:12649	844173	1	True				
ANR	844641	Identifier	code		844173	0					
ANR	844642	IfStatement	"if ( SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE ) )"		844173	2					
ANR	844643	Condition	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"	347:16:12667:12718	844173	0	True				
ANR	844644	CallExpression	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"		844173	0					
ANR	844645	Callee	SHOW_IS_ALL_OF		844173	0					
ANR	844646	Identifier	SHOW_IS_ALL_OF		844173	0					
ANR	844647	ArgumentList	penum		844173	1					
ANR	844648	Argument	penum		844173	0					
ANR	844649	Identifier	penum		844173	0					
ANR	844650	Argument	TEXT_DO_NONE | TEXT_INTERVENE		844173	1					
ANR	844651	InclusiveOrExpression	TEXT_DO_NONE | TEXT_INTERVENE		844173	0		|			
ANR	844652	Identifier	TEXT_DO_NONE		844173	0					
ANR	844653	Identifier	TEXT_INTERVENE		844173	1					
ANR	844654	ReturnStatement	return code ;	348:16:12737:12748	844173	1	True				
ANR	844655	Identifier	code		844173	0					
ANR	844656	ExpressionStatement	"code = set_cache_device ( penum , pgs , pw [ 2 ] , pw [ 3 ] , pw [ 4 ] , pw [ 5 ] )"	349:12:12762:12825	844173	3	True				
ANR	844657	AssignmentExpression	"code = set_cache_device ( penum , pgs , pw [ 2 ] , pw [ 3 ] , pw [ 4 ] , pw [ 5 ] )"		844173	0		=			
ANR	844658	Identifier	code		844173	0					
ANR	844659	CallExpression	"set_cache_device ( penum , pgs , pw [ 2 ] , pw [ 3 ] , pw [ 4 ] , pw [ 5 ] )"		844173	1					
ANR	844660	Callee	set_cache_device		844173	0					
ANR	844661	Identifier	set_cache_device		844173	0					
ANR	844662	ArgumentList	penum		844173	1					
ANR	844663	Argument	penum		844173	0					
ANR	844664	Identifier	penum		844173	0					
ANR	844665	Argument	pgs		844173	1					
ANR	844666	Identifier	pgs		844173	0					
ANR	844667	Argument	pw [ 2 ]		844173	2					
ANR	844668	ArrayIndexing	pw [ 2 ]		844173	0					
ANR	844669	Identifier	pw		844173	0					
ANR	844670	PrimaryExpression	2		844173	1					
ANR	844671	Argument	pw [ 3 ]		844173	3					
ANR	844672	ArrayIndexing	pw [ 3 ]		844173	0					
ANR	844673	Identifier	pw		844173	0					
ANR	844674	PrimaryExpression	3		844173	1					
ANR	844675	Argument	pw [ 4 ]		844173	4					
ANR	844676	ArrayIndexing	pw [ 4 ]		844173	0					
ANR	844677	Identifier	pw		844173	0					
ANR	844678	PrimaryExpression	4		844173	1					
ANR	844679	Argument	pw [ 5 ]		844173	5					
ANR	844680	ArrayIndexing	pw [ 5 ]		844173	0					
ANR	844681	Identifier	pw		844173	0					
ANR	844682	PrimaryExpression	5		844173	1					
ANR	844683	ReturnStatement	return code ;	351:8:12845:12856	844173	3	True				
ANR	844684	Identifier	code		844173	0					
ANR	844685	Label	default :	353:4:12868:12875	844173	6	True				
ANR	844686	Identifier	default		844173	0					
ANR	844687	ExpressionStatement	return_error ( gs_error_rangecheck )	354:8:12885:12918	844173	7	True				
ANR	844688	CallExpression	return_error ( gs_error_rangecheck )		844173	0					
ANR	844689	Callee	return_error		844173	0					
ANR	844690	Identifier	return_error		844173	0					
ANR	844691	ArgumentList	gs_error_rangecheck		844173	1					
ANR	844692	Argument	gs_error_rangecheck		844173	0					
ANR	844693	Identifier	gs_error_rangecheck		844173	0					
ANR	844694	ReturnType	static int		844173	1					
ANR	844695	Identifier	gx_show_text_set_cache		844173	2					
ANR	844696	ParameterList	"gs_text_enum_t * pte , const double * pw , gs_text_cache_control_t control"		844173	3					
ANR	844697	Parameter	gs_text_enum_t * pte	281:23:9782:9800	844173	0	True				
ANR	844698	ParameterType	gs_text_enum_t *		844173	0					
ANR	844699	Identifier	pte		844173	1					
ANR	844700	Parameter	const double * pw	281:44:9803:9818	844173	1	True				
ANR	844701	ParameterType	const double *		844173	0					
ANR	844702	Identifier	pw		844173	1					
ANR	844703	Parameter	gs_text_cache_control_t control	282:26:9847:9877	844173	2	True				
ANR	844704	ParameterType	gs_text_cache_control_t		844173	0					
ANR	844705	Identifier	control		844173	1					
ANR	844706	CFGEntryNode	ENTRY		844173		True				
ANR	844707	CFGExitNode	EXIT		844173		True				
ANR	844708	Symbol	rewind_pvxy . x		844173						
ANR	844709	Symbol	gs_error_rangecheck		844173						
ANR	844710	Symbol	set_cache_device		844173						
ANR	844711	Symbol	rewind_code		844173						
ANR	844712	Symbol	pw		844173						
ANR	844713	Symbol	& dvxy		844173						
ANR	844714	Symbol	rewind_pvxy . y		844173						
ANR	844715	Symbol	SHOW_IS_ALL_OF		844173						
ANR	844716	Symbol	set_char_width		844173						
ANR	844717	Symbol	& pvxy		844173						
ANR	844718	Symbol	* penum -> cc		844173						
ANR	844719	Symbol	sws_retry		844173						
ANR	844720	Symbol	pfont -> WMode		844173						
ANR	844721	Symbol	( penum -> cc ) -> offset		844173						
ANR	844722	Symbol	* * penum		844173						
ANR	844723	Symbol	gs_point_transform2fixed		844173						
ANR	844724	Symbol	penum		844173						
ANR	844725	Symbol	* pw		844173						
ANR	844726	Symbol	pfont -> FontMatrix		844173						
ANR	844727	Symbol	pvxy		844173						
ANR	844728	Symbol	& rewind_pvxy		844173						
ANR	844729	Symbol	dvxy		844173						
ANR	844730	Symbol	pfont -> FontMatrix . yx		844173						
ANR	844731	Symbol	penum -> width_status		844173						
ANR	844732	Symbol	* penum		844173						
ANR	844733	Symbol	vx		844173						
ANR	844734	Symbol	gs_error_unregistered		844173						
ANR	844735	Symbol	code		844173						
ANR	844736	Symbol	vy		844173						
ANR	844737	Symbol	pfont -> FontMatrix . yy		844173						
ANR	844738	Symbol	gs_distance_transform2fixed		844173						
ANR	844739	Symbol	pvxy . x		844173						
ANR	844740	Symbol	pvxy . y		844173						
ANR	844741	Symbol	penum -> pgs		844173						
ANR	844742	Symbol	gs_error_undefinedresult		844173						
ANR	844743	Symbol	penum -> cc		844173						
ANR	844744	Symbol	TEXT_INTERVENE		844173						
ANR	844745	Symbol	gs_rootfont		844173						
ANR	844746	Symbol	pgs		844173						
ANR	844747	Symbol	TEXT_DO_NONE		844173						
ANR	844748	Symbol	( penum -> cc ) -> offset . x		844173						
ANR	844749	Symbol	retry		844173						
ANR	844750	Symbol	( penum -> cc ) -> offset . y		844173						
ANR	844751	Symbol	pte		844173						
ANR	844752	Symbol	pfont		844173						
ANR	844753	Symbol	pfont -> FontMatrix . xy		844173						
ANR	844754	Symbol	pfont -> FontMatrix . xx		844173						
ANR	844755	Symbol	dvxy . y		844173						
ANR	844756	Symbol	control		844173						
ANR	844757	Symbol	dvxy . x		844173						
ANR	844758	Symbol	* pfont		844173						
ANR	844759	Symbol	rewind_pvxy		844173						
ANR	844760	Symbol	& pgs -> ctm		844173						
ANR	844761	Function	set_char_width	361:0:13069:14168							
ANR	844762	FunctionDef	"set_char_width (gs_show_enum * penum , gs_gstate * pgs , double wx , double wy)"		844761	0					
ANR	844763	CompoundStatement		363:0:13147:14168	844761	0					
ANR	844764	IdentifierDeclStatement	int code ;	364:4:13153:13161	844761	0	True				
ANR	844765	IdentifierDecl	code		844761	0					
ANR	844766	IdentifierDeclType	int		844761	0					
ANR	844767	Identifier	code		844761	1					
ANR	844768	IfStatement	if ( penum -> width_status != sws_none && penum -> width_status != sws_retry )		844761	1					
ANR	844769	Condition	penum -> width_status != sws_none && penum -> width_status != sws_retry	366:8:13172:13238	844761	0	True				
ANR	844770	AndExpression	penum -> width_status != sws_none && penum -> width_status != sws_retry		844761	0		&&			
ANR	844771	EqualityExpression	penum -> width_status != sws_none		844761	0		!=			
ANR	844772	PtrMemberAccess	penum -> width_status		844761	0					
ANR	844773	Identifier	penum		844761	0					
ANR	844774	Identifier	width_status		844761	1					
ANR	844775	Identifier	sws_none		844761	1					
ANR	844776	EqualityExpression	penum -> width_status != sws_retry		844761	1		!=			
ANR	844777	PtrMemberAccess	penum -> width_status		844761	0					
ANR	844778	Identifier	penum		844761	0					
ANR	844779	Identifier	width_status		844761	1					
ANR	844780	Identifier	sws_retry		844761	1					
ANR	844781	ExpressionStatement	return_error ( gs_error_undefined )	367:8:13249:13281	844761	1	True				
ANR	844782	CallExpression	return_error ( gs_error_undefined )		844761	0					
ANR	844783	Callee	return_error		844761	0					
ANR	844784	Identifier	return_error		844761	0					
ANR	844785	ArgumentList	gs_error_undefined		844761	1					
ANR	844786	Argument	gs_error_undefined		844761	0					
ANR	844787	Identifier	gs_error_undefined		844761	0					
ANR	844788	ExpressionStatement	"code = gs_distance_transform2fixed ( & pgs -> ctm , wx , wy , & penum -> wxy )"	368:4:13287:13353	844761	2	True				
ANR	844789	AssignmentExpression	"code = gs_distance_transform2fixed ( & pgs -> ctm , wx , wy , & penum -> wxy )"		844761	0		=			
ANR	844790	Identifier	code		844761	0					
ANR	844791	CallExpression	"gs_distance_transform2fixed ( & pgs -> ctm , wx , wy , & penum -> wxy )"		844761	1					
ANR	844792	Callee	gs_distance_transform2fixed		844761	0					
ANR	844793	Identifier	gs_distance_transform2fixed		844761	0					
ANR	844794	ArgumentList	& pgs -> ctm		844761	1					
ANR	844795	Argument	& pgs -> ctm		844761	0					
ANR	844796	UnaryOperationExpression	& pgs -> ctm		844761	0					
ANR	844797	UnaryOperator	&		844761	0					
ANR	844798	PtrMemberAccess	pgs -> ctm		844761	1					
ANR	844799	Identifier	pgs		844761	0					
ANR	844800	Identifier	ctm		844761	1					
ANR	844801	Argument	wx		844761	1					
ANR	844802	Identifier	wx		844761	0					
ANR	844803	Argument	wy		844761	2					
ANR	844804	Identifier	wy		844761	0					
ANR	844805	Argument	& penum -> wxy		844761	3					
ANR	844806	UnaryOperationExpression	& penum -> wxy		844761	0					
ANR	844807	UnaryOperator	&		844761	0					
ANR	844808	PtrMemberAccess	penum -> wxy		844761	1					
ANR	844809	Identifier	penum		844761	0					
ANR	844810	Identifier	wxy		844761	1					
ANR	844811	IfStatement	if ( code < 0 && penum -> cc == 0 )		844761	3					
ANR	844812	Condition	code < 0 && penum -> cc == 0	369:8:13363:13388	844761	0	True				
ANR	844813	AndExpression	code < 0 && penum -> cc == 0		844761	0		&&			
ANR	844814	RelationalExpression	code < 0		844761	0		<			
ANR	844815	Identifier	code		844761	0					
ANR	844816	PrimaryExpression	0		844761	1					
ANR	844817	EqualityExpression	penum -> cc == 0		844761	1		==			
ANR	844818	PtrMemberAccess	penum -> cc		844761	0					
ANR	844819	Identifier	penum		844761	0					
ANR	844820	Identifier	cc		844761	1					
ANR	844821	PrimaryExpression	0		844761	1					
ANR	844822	CompoundStatement		7:36:243:243	844761	1					
ANR	844823	ExpressionStatement	"code = gs_distance_transform ( wx , wy , & ctm_only ( pgs ) , & penum -> wxy_float )"	371:8:13455:13526	844761	0	True				
ANR	844824	AssignmentExpression	"code = gs_distance_transform ( wx , wy , & ctm_only ( pgs ) , & penum -> wxy_float )"		844761	0		=			
ANR	844825	Identifier	code		844761	0					
ANR	844826	CallExpression	"gs_distance_transform ( wx , wy , & ctm_only ( pgs ) , & penum -> wxy_float )"		844761	1					
ANR	844827	Callee	gs_distance_transform		844761	0					
ANR	844828	Identifier	gs_distance_transform		844761	0					
ANR	844829	ArgumentList	wx		844761	1					
ANR	844830	Argument	wx		844761	0					
ANR	844831	Identifier	wx		844761	0					
ANR	844832	Argument	wy		844761	1					
ANR	844833	Identifier	wy		844761	0					
ANR	844834	Argument	& ctm_only ( pgs )		844761	2					
ANR	844835	UnaryOperationExpression	& ctm_only ( pgs )		844761	0					
ANR	844836	UnaryOperator	&		844761	0					
ANR	844837	CallExpression	ctm_only ( pgs )		844761	1					
ANR	844838	Callee	ctm_only		844761	0					
ANR	844839	Identifier	ctm_only		844761	0					
ANR	844840	ArgumentList	pgs		844761	1					
ANR	844841	Argument	pgs		844761	0					
ANR	844842	Identifier	pgs		844761	0					
ANR	844843	Argument	& penum -> wxy_float		844761	3					
ANR	844844	UnaryOperationExpression	& penum -> wxy_float		844761	0					
ANR	844845	UnaryOperator	&		844761	0					
ANR	844846	PtrMemberAccess	penum -> wxy_float		844761	1					
ANR	844847	Identifier	penum		844761	0					
ANR	844848	Identifier	wxy_float		844761	1					
ANR	844849	ExpressionStatement	penum -> wxy . x = penum -> wxy . y = 0	372:8:13536:13567	844761	1	True				
ANR	844850	AssignmentExpression	penum -> wxy . x = penum -> wxy . y = 0		844761	0		=			
ANR	844851	MemberAccess	penum -> wxy . x		844761	0					
ANR	844852	PtrMemberAccess	penum -> wxy		844761	0					
ANR	844853	Identifier	penum		844761	0					
ANR	844854	Identifier	wxy		844761	1					
ANR	844855	Identifier	x		844761	1					
ANR	844856	AssignmentExpression	penum -> wxy . y = 0		844761	1		=			
ANR	844857	MemberAccess	penum -> wxy . y		844761	0					
ANR	844858	PtrMemberAccess	penum -> wxy		844761	0					
ANR	844859	Identifier	penum		844761	0					
ANR	844860	Identifier	wxy		844761	1					
ANR	844861	Identifier	y		844761	1					
ANR	844862	PrimaryExpression	0		844761	1					
ANR	844863	ExpressionStatement	penum -> use_wxy_float = true	373:8:13577:13604	844761	2	True				
ANR	844864	AssignmentExpression	penum -> use_wxy_float = true		844761	0		=			
ANR	844865	PtrMemberAccess	penum -> use_wxy_float		844761	0					
ANR	844866	Identifier	penum		844761	0					
ANR	844867	Identifier	use_wxy_float		844761	1					
ANR	844868	Identifier	true		844761	1					
ANR	844869	ElseStatement	else		844761	0					
ANR	844870	CompoundStatement		12:11:469:469	844761	0					
ANR	844871	ExpressionStatement	penum -> use_wxy_float = false	375:8:13627:13655	844761	0	True				
ANR	844872	AssignmentExpression	penum -> use_wxy_float = false		844761	0		=			
ANR	844873	PtrMemberAccess	penum -> use_wxy_float		844761	0					
ANR	844874	Identifier	penum		844761	0					
ANR	844875	Identifier	use_wxy_float		844761	1					
ANR	844876	Identifier	false		844761	1					
ANR	844877	ExpressionStatement	penum -> wxy_float . x = penum -> wxy_float . y = 0	376:8:13665:13708	844761	1	True				
ANR	844878	AssignmentExpression	penum -> wxy_float . x = penum -> wxy_float . y = 0		844761	0		=			
ANR	844879	MemberAccess	penum -> wxy_float . x		844761	0					
ANR	844880	PtrMemberAccess	penum -> wxy_float		844761	0					
ANR	844881	Identifier	penum		844761	0					
ANR	844882	Identifier	wxy_float		844761	1					
ANR	844883	Identifier	x		844761	1					
ANR	844884	AssignmentExpression	penum -> wxy_float . y = 0		844761	1		=			
ANR	844885	MemberAccess	penum -> wxy_float . y		844761	0					
ANR	844886	PtrMemberAccess	penum -> wxy_float		844761	0					
ANR	844887	Identifier	penum		844761	0					
ANR	844888	Identifier	wxy_float		844761	1					
ANR	844889	Identifier	y		844761	1					
ANR	844890	PrimaryExpression	0		844761	1					
ANR	844891	IfStatement	if ( code < 0 )		844761	4					
ANR	844892	Condition	code < 0	378:8:13724:13731	844761	0	True				
ANR	844893	RelationalExpression	code < 0		844761	0		<			
ANR	844894	Identifier	code		844761	0					
ANR	844895	PrimaryExpression	0		844761	1					
ANR	844896	ReturnStatement	return code ;	379:8:13742:13753	844761	1	True				
ANR	844897	Identifier	code		844761	0					
ANR	844898	IfStatement	if ( penum -> cc != 0 )		844761	5					
ANR	844899	Condition	penum -> cc != 0	382:8:13860:13873	844761	0	True				
ANR	844900	EqualityExpression	penum -> cc != 0		844761	0		!=			
ANR	844901	PtrMemberAccess	penum -> cc		844761	0					
ANR	844902	Identifier	penum		844761	0					
ANR	844903	Identifier	cc		844761	1					
ANR	844904	PrimaryExpression	0		844761	1					
ANR	844905	CompoundStatement		20:24:728:728	844761	1					
ANR	844906	ExpressionStatement	penum -> cc -> wxy = penum -> wxy	383:8:13886:13913	844761	0	True				
ANR	844907	AssignmentExpression	penum -> cc -> wxy = penum -> wxy		844761	0		=			
ANR	844908	PtrMemberAccess	penum -> cc -> wxy		844761	0					
ANR	844909	PtrMemberAccess	penum -> cc		844761	0					
ANR	844910	Identifier	penum		844761	0					
ANR	844911	Identifier	cc		844761	1					
ANR	844912	Identifier	wxy		844761	1					
ANR	844913	PtrMemberAccess	penum -> wxy		844761	1					
ANR	844914	Identifier	penum		844761	0					
ANR	844915	Identifier	wxy		844761	1					
ANR	844916	ExpressionStatement	penum -> width_status = sws_cache_width_only	384:8:13923:13965	844761	1	True				
ANR	844917	AssignmentExpression	penum -> width_status = sws_cache_width_only		844761	0		=			
ANR	844918	PtrMemberAccess	penum -> width_status		844761	0					
ANR	844919	Identifier	penum		844761	0					
ANR	844920	Identifier	width_status		844761	1					
ANR	844921	Identifier	sws_cache_width_only		844761	1					
ANR	844922	ElseStatement	else		844761	0					
ANR	844923	CompoundStatement		23:11:830:830	844761	0					
ANR	844924	ExpressionStatement	penum -> width_status = sws_no_cache	386:8:13988:14022	844761	0	True				
ANR	844925	AssignmentExpression	penum -> width_status = sws_no_cache		844761	0		=			
ANR	844926	PtrMemberAccess	penum -> width_status		844761	0					
ANR	844927	Identifier	penum		844761	0					
ANR	844928	Identifier	width_status		844761	1					
ANR	844929	Identifier	sws_no_cache		844761	1					
ANR	844930	IfStatement	"if ( SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE ) )"		844761	6					
ANR	844931	Condition	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"	388:8:14038:14089	844761	0	True				
ANR	844932	CallExpression	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"		844761	0					
ANR	844933	Callee	SHOW_IS_ALL_OF		844761	0					
ANR	844934	Identifier	SHOW_IS_ALL_OF		844761	0					
ANR	844935	ArgumentList	penum		844761	1					
ANR	844936	Argument	penum		844761	0					
ANR	844937	Identifier	penum		844761	0					
ANR	844938	Argument	TEXT_DO_NONE | TEXT_INTERVENE		844761	1					
ANR	844939	InclusiveOrExpression	TEXT_DO_NONE | TEXT_INTERVENE		844761	0		|			
ANR	844940	Identifier	TEXT_DO_NONE		844761	0					
ANR	844941	Identifier	TEXT_INTERVENE		844761	1					
ANR	844942	ExpressionStatement	gs_nulldevice ( pgs )	389:8:14112:14130	844761	1	True				
ANR	844943	CallExpression	gs_nulldevice ( pgs )		844761	0					
ANR	844944	Callee	gs_nulldevice		844761	0					
ANR	844945	Identifier	gs_nulldevice		844761	0					
ANR	844946	ArgumentList	pgs		844761	1					
ANR	844947	Argument	pgs		844761	0					
ANR	844948	Identifier	pgs		844761	0					
ANR	844949	ReturnStatement	return ! SHOW_IS_DRAWING ( penum ) ;	390:4:14136:14166	844761	7	True				
ANR	844950	UnaryOperationExpression	! SHOW_IS_DRAWING ( penum )		844761	0					
ANR	844951	UnaryOperator	!		844761	0					
ANR	844952	CallExpression	SHOW_IS_DRAWING ( penum )		844761	1					
ANR	844953	Callee	SHOW_IS_DRAWING		844761	0					
ANR	844954	Identifier	SHOW_IS_DRAWING		844761	0					
ANR	844955	ArgumentList	penum		844761	1					
ANR	844956	Argument	penum		844761	0					
ANR	844957	Identifier	penum		844761	0					
ANR	844958	ReturnType	int		844761	1					
ANR	844959	Identifier	set_char_width		844761	2					
ANR	844960	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , double wx , double wy"		844761	3					
ANR	844961	Parameter	gs_show_enum * penum	362:15:13088:13106	844761	0	True				
ANR	844962	ParameterType	gs_show_enum *		844761	0					
ANR	844963	Identifier	penum		844761	1					
ANR	844964	Parameter	gs_gstate * pgs	362:36:13109:13122	844761	1	True				
ANR	844965	ParameterType	gs_gstate *		844761	0					
ANR	844966	Identifier	pgs		844761	1					
ANR	844967	Parameter	double wx	362:52:13125:13133	844761	2	True				
ANR	844968	ParameterType	double		844761	0					
ANR	844969	Identifier	wx		844761	1					
ANR	844970	Parameter	double wy	362:63:13136:13144	844761	3	True				
ANR	844971	ParameterType	double		844761	0					
ANR	844972	Identifier	wy		844761	1					
ANR	844973	CFGEntryNode	ENTRY		844761		True				
ANR	844974	CFGExitNode	EXIT		844761		True				
ANR	844975	Symbol	penum -> width_status		844761						
ANR	844976	Symbol	* penum		844761						
ANR	844977	Symbol	code		844761						
ANR	844978	Symbol	gs_distance_transform		844761						
ANR	844979	Symbol	gs_error_undefined		844761						
ANR	844980	Symbol	SHOW_IS_ALL_OF		844761						
ANR	844981	Symbol	gs_distance_transform2fixed		844761						
ANR	844982	Symbol	* penum -> cc		844761						
ANR	844983	Symbol	sws_cache_width_only		844761						
ANR	844984	Symbol	sws_retry		844761						
ANR	844985	Symbol	penum -> wxy . y		844761						
ANR	844986	Symbol	penum -> wxy . x		844761						
ANR	844987	Symbol	& penum -> wxy		844761						
ANR	844988	Symbol	penum -> cc		844761						
ANR	844989	Symbol	penum -> cc -> wxy		844761						
ANR	844990	Symbol	TEXT_INTERVENE		844761						
ANR	844991	Symbol	SHOW_IS_DRAWING		844761						
ANR	844992	Symbol	pgs		844761						
ANR	844993	Symbol	TEXT_DO_NONE		844761						
ANR	844994	Symbol	penum -> use_wxy_float		844761						
ANR	844995	Symbol	* * penum		844761						
ANR	844996	Symbol	wx		844761						
ANR	844997	Symbol	wy		844761						
ANR	844998	Symbol	& ctm_only		844761						
ANR	844999	Symbol	sws_no_cache		844761						
ANR	845000	Symbol	penum		844761						
ANR	845001	Symbol	false		844761						
ANR	845002	Symbol	penum -> wxy_float . x		844761						
ANR	845003	Symbol	penum -> wxy		844761						
ANR	845004	Symbol	penum -> wxy_float . y		844761						
ANR	845005	Symbol	sws_none		844761						
ANR	845006	Symbol	penum -> wxy_float		844761						
ANR	845007	Symbol	true		844761						
ANR	845008	Symbol	& pgs -> ctm		844761						
ANR	845009	Symbol	& penum -> wxy_float		844761						
ANR	845010	Function	gx_compute_text_oversampling	393:0:14171:15346							
ANR	845011	FunctionDef	"gx_compute_text_oversampling (const gs_show_enum * penum , const gs_font * pfont , int alpha_bits , gs_log2_scale_point * p_log2_scale)"		845010	0					
ANR	845012	CompoundStatement		396:0:14335:15346	845010	0					
ANR	845013	IdentifierDeclStatement	gs_log2_scale_point log2_scale ;	397:4:14341:14371	845010	0	True				
ANR	845014	IdentifierDecl	log2_scale		845010	0					
ANR	845015	IdentifierDeclType	gs_log2_scale_point		845010	0					
ANR	845016	Identifier	log2_scale		845010	1					
ANR	845017	IfStatement	if ( alpha_bits == 1 )		845010	1					
ANR	845018	Condition	alpha_bits == 1	399:8:14382:14396	845010	0	True				
ANR	845019	EqualityExpression	alpha_bits == 1		845010	0		==			
ANR	845020	Identifier	alpha_bits		845010	0					
ANR	845021	PrimaryExpression	1		845010	1					
ANR	845022	ExpressionStatement	log2_scale . x = log2_scale . y = 0	400:8:14407:14438	845010	1	True				
ANR	845023	AssignmentExpression	log2_scale . x = log2_scale . y = 0		845010	0		=			
ANR	845024	MemberAccess	log2_scale . x		845010	0					
ANR	845025	Identifier	log2_scale		845010	0					
ANR	845026	Identifier	x		845010	1					
ANR	845027	AssignmentExpression	log2_scale . y = 0		845010	1		=			
ANR	845028	MemberAccess	log2_scale . y		845010	0					
ANR	845029	Identifier	log2_scale		845010	0					
ANR	845030	Identifier	y		845010	1					
ANR	845031	PrimaryExpression	0		845010	1					
ANR	845032	ElseStatement	else		845010	0					
ANR	845033	IfStatement	if ( pfont -> PaintType != 0 )		845010	0					
ANR	845034	Condition	pfont -> PaintType != 0	401:13:14453:14473	845010	0	True				
ANR	845035	EqualityExpression	pfont -> PaintType != 0		845010	0		!=			
ANR	845036	PtrMemberAccess	pfont -> PaintType		845010	0					
ANR	845037	Identifier	pfont		845010	0					
ANR	845038	Identifier	PaintType		845010	1					
ANR	845039	PrimaryExpression	0		845010	1					
ANR	845040	CompoundStatement		6:36:140:140	845010	1					
ANR	845041	ExpressionStatement	log2_scale . x = log2_scale . y = 0	403:8:14545:14576	845010	0	True				
ANR	845042	AssignmentExpression	log2_scale . x = log2_scale . y = 0		845010	0		=			
ANR	845043	MemberAccess	log2_scale . x		845010	0					
ANR	845044	Identifier	log2_scale		845010	0					
ANR	845045	Identifier	x		845010	1					
ANR	845046	AssignmentExpression	log2_scale . y = 0		845010	1		=			
ANR	845047	MemberAccess	log2_scale . y		845010	0					
ANR	845048	Identifier	log2_scale		845010	0					
ANR	845049	Identifier	y		845010	1					
ANR	845050	PrimaryExpression	0		845010	1					
ANR	845051	ElseStatement	else		845010	0					
ANR	845052	IfStatement	if ( ! penum -> is_pure_color )		845010	0					
ANR	845053	Condition	! penum -> is_pure_color	404:15:14593:14613	845010	0	True				
ANR	845054	UnaryOperationExpression	! penum -> is_pure_color		845010	0					
ANR	845055	UnaryOperator	!		845010	0					
ANR	845056	PtrMemberAccess	penum -> is_pure_color		845010	1					
ANR	845057	Identifier	penum		845010	0					
ANR	845058	Identifier	is_pure_color		845010	1					
ANR	845059	CompoundStatement		9:38:280:280	845010	1					
ANR	845060	ExpressionStatement	log2_scale . x = log2_scale . y = 0	406:8:14701:14732	845010	0	True				
ANR	845061	AssignmentExpression	log2_scale . x = log2_scale . y = 0		845010	0		=			
ANR	845062	MemberAccess	log2_scale . x		845010	0					
ANR	845063	Identifier	log2_scale		845010	0					
ANR	845064	Identifier	x		845010	1					
ANR	845065	AssignmentExpression	log2_scale . y = 0		845010	1		=			
ANR	845066	MemberAccess	log2_scale . y		845010	0					
ANR	845067	Identifier	log2_scale		845010	0					
ANR	845068	Identifier	y		845010	1					
ANR	845069	PrimaryExpression	0		845010	1					
ANR	845070	ElseStatement	else		845010	0					
ANR	845071	CompoundStatement		13:8:419:429	845010	0					
ANR	845072	IdentifierDeclStatement	int excess ;	408:8:14755:14765	845010	0	True				
ANR	845073	IdentifierDecl	excess		845010	0					
ANR	845074	IdentifierDeclType	int		845010	0					
ANR	845075	Identifier	excess		845010	1					
ANR	845076	ExpressionStatement	"show_set_scale ( penum , & log2_scale )"	411:8:14841:14875	845010	1	True				
ANR	845077	CallExpression	"show_set_scale ( penum , & log2_scale )"		845010	0					
ANR	845078	Callee	show_set_scale		845010	0					
ANR	845079	Identifier	show_set_scale		845010	0					
ANR	845080	ArgumentList	penum		845010	1					
ANR	845081	Argument	penum		845010	0					
ANR	845082	Identifier	penum		845010	0					
ANR	845083	Argument	& log2_scale		845010	1					
ANR	845084	UnaryOperationExpression	& log2_scale		845010	0					
ANR	845085	UnaryOperator	&		845010	0					
ANR	845086	Identifier	log2_scale		845010	1					
ANR	845087	ExpressionStatement	excess = log2_scale . x + log2_scale . y - alpha_bits	413:8:14940:14989	845010	2	True				
ANR	845088	AssignmentExpression	excess = log2_scale . x + log2_scale . y - alpha_bits		845010	0		=			
ANR	845089	Identifier	excess		845010	0					
ANR	845090	AdditiveExpression	log2_scale . x + log2_scale . y - alpha_bits		845010	1		+			
ANR	845091	MemberAccess	log2_scale . x		845010	0					
ANR	845092	Identifier	log2_scale		845010	0					
ANR	845093	Identifier	x		845010	1					
ANR	845094	AdditiveExpression	log2_scale . y - alpha_bits		845010	1		-			
ANR	845095	MemberAccess	log2_scale . y		845010	0					
ANR	845096	Identifier	log2_scale		845010	0					
ANR	845097	Identifier	y		845010	1					
ANR	845098	Identifier	alpha_bits		845010	1					
ANR	845099	WhileStatement	while ( excess > 0 )		845010	3					
ANR	845100	Condition	excess > 0	414:15:15006:15015	845010	0	True				
ANR	845101	RelationalExpression	excess > 0		845010	0		>			
ANR	845102	Identifier	excess		845010	0					
ANR	845103	PrimaryExpression	0		845010	1					
ANR	845104	CompoundStatement		19:27:682:682	845010	1					
ANR	845105	IfStatement	if ( log2_scale . y > 0 )		845010	0					
ANR	845106	Condition	log2_scale . y > 0	415:16:15036:15051	845010	0	True				
ANR	845107	RelationalExpression	log2_scale . y > 0		845010	0		>			
ANR	845108	MemberAccess	log2_scale . y		845010	0					
ANR	845109	Identifier	log2_scale		845010	0					
ANR	845110	Identifier	y		845010	1					
ANR	845111	PrimaryExpression	0		845010	1					
ANR	845112	CompoundStatement		20:34:718:718	845010	1					
ANR	845113	ExpressionStatement	log2_scale . y --	416:16:15072:15087	845010	0	True				
ANR	845114	PostIncDecOperationExpression	log2_scale . y --		845010	0					
ANR	845115	MemberAccess	log2_scale . y		845010	0					
ANR	845116	Identifier	log2_scale		845010	0					
ANR	845117	Identifier	y		845010	1					
ANR	845118	IncDec	--		845010	1					
ANR	845119	ExpressionStatement	excess --	417:16:15105:15113	845010	1	True				
ANR	845120	PostIncDecOperationExpression	excess --		845010	0					
ANR	845121	Identifier	excess		845010	0					
ANR	845122	IncDec	--		845010	1					
ANR	845123	IfStatement	if ( excess == 0 )		845010	2					
ANR	845124	Condition	excess == 0	418:20:15135:15145	845010	0	True				
ANR	845125	EqualityExpression	excess == 0		845010	0		==			
ANR	845126	Identifier	excess		845010	0					
ANR	845127	PrimaryExpression	0		845010	1					
ANR	845128	BreakStatement	break ;	419:20:15168:15173	845010	1	True				
ANR	845129	IfStatement	if ( log2_scale . x > 0 )		845010	1					
ANR	845130	Condition	log2_scale . x > 0	421:16:15205:15220	845010	0	True				
ANR	845131	RelationalExpression	log2_scale . x > 0		845010	0		>			
ANR	845132	MemberAccess	log2_scale . x		845010	0					
ANR	845133	Identifier	log2_scale		845010	0					
ANR	845134	Identifier	x		845010	1					
ANR	845135	PrimaryExpression	0		845010	1					
ANR	845136	CompoundStatement		26:34:887:887	845010	1					
ANR	845137	ExpressionStatement	log2_scale . x --	422:16:15241:15256	845010	0	True				
ANR	845138	PostIncDecOperationExpression	log2_scale . x --		845010	0					
ANR	845139	MemberAccess	log2_scale . x		845010	0					
ANR	845140	Identifier	log2_scale		845010	0					
ANR	845141	Identifier	x		845010	1					
ANR	845142	IncDec	--		845010	1					
ANR	845143	ExpressionStatement	excess --	423:16:15274:15282	845010	1	True				
ANR	845144	PostIncDecOperationExpression	excess --		845010	0					
ANR	845145	Identifier	excess		845010	0					
ANR	845146	IncDec	--		845010	1					
ANR	845147	ExpressionStatement	* p_log2_scale = log2_scale	427:4:15318:15344	845010	2	True				
ANR	845148	AssignmentExpression	* p_log2_scale = log2_scale		845010	0		=			
ANR	845149	UnaryOperationExpression	* p_log2_scale		845010	0					
ANR	845150	UnaryOperator	*		845010	0					
ANR	845151	Identifier	p_log2_scale		845010	1					
ANR	845152	Identifier	log2_scale		845010	1					
ANR	845153	ReturnType	void		845010	1					
ANR	845154	Identifier	gx_compute_text_oversampling		845010	2					
ANR	845155	ParameterList	"const gs_show_enum * penum , const gs_font * pfont , int alpha_bits , gs_log2_scale_point * p_log2_scale"		845010	3					
ANR	845156	Parameter	const gs_show_enum * penum	394:29:14205:14230	845010	0	True				
ANR	845157	ParameterType	const gs_show_enum *		845010	0					
ANR	845158	Identifier	penum		845010	1					
ANR	845159	Parameter	const gs_font * pfont	394:57:14233:14252	845010	1	True				
ANR	845160	ParameterType	const gs_font *		845010	0					
ANR	845161	Identifier	pfont		845010	1					
ANR	845162	Parameter	int alpha_bits	395:29:14284:14297	845010	2	True				
ANR	845163	ParameterType	int		845010	0					
ANR	845164	Identifier	alpha_bits		845010	1					
ANR	845165	Parameter	gs_log2_scale_point * p_log2_scale	395:45:14300:14332	845010	3	True				
ANR	845166	ParameterType	gs_log2_scale_point *		845010	0					
ANR	845167	Identifier	p_log2_scale		845010	1					
ANR	845168	CFGEntryNode	ENTRY		845010		True				
ANR	845169	CFGExitNode	EXIT		845010		True				
ANR	845170	Symbol	log2_scale . x		845010						
ANR	845171	Symbol	* penum		845010						
ANR	845172	Symbol	pfont		845010						
ANR	845173	Symbol	p_log2_scale		845010						
ANR	845174	Symbol	penum		845010						
ANR	845175	Symbol	alpha_bits		845010						
ANR	845176	Symbol	* p_log2_scale		845010						
ANR	845177	Symbol	log2_scale		845010						
ANR	845178	Symbol	* pfont		845010						
ANR	845179	Symbol	excess		845010						
ANR	845180	Symbol	pfont -> PaintType		845010						
ANR	845181	Symbol	penum -> is_pure_color		845010						
ANR	845182	Symbol	log2_scale . y		845010						
ANR	845183	Symbol	& log2_scale		845010						
ANR	845184	Function	compute_glyph_raster_params	431:0:15387:17430							
ANR	845185	FunctionDef	"compute_glyph_raster_params (gs_show_enum * penum , bool in_setcachedevice , int * alpha_bits , int * depth , gs_fixed_point * subpix_origin , gs_log2_scale_point * log2_scale)"		845184	0					
ANR	845186	CompoundStatement		435:0:15604:17430	845184	0					
ANR	845187	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	436:4:15610:15637	845184	0	True				
ANR	845188	IdentifierDecl	* pgs = penum -> pgs		845184	0					
ANR	845189	IdentifierDeclType	gs_gstate *		845184	0					
ANR	845190	Identifier	pgs		845184	1					
ANR	845191	AssignmentExpression	* pgs = penum -> pgs		845184	2		=			
ANR	845192	Identifier	pgs		845184	0					
ANR	845193	PtrMemberAccess	penum -> pgs		845184	1					
ANR	845194	Identifier	penum		845184	0					
ANR	845195	Identifier	pgs		845184	1					
ANR	845196	IdentifierDeclStatement	gx_device * dev = gs_currentdevice_inline ( pgs ) ;	437:4:15643:15688	845184	1	True				
ANR	845197	IdentifierDecl	* dev = gs_currentdevice_inline ( pgs )		845184	0					
ANR	845198	IdentifierDeclType	gx_device *		845184	0					
ANR	845199	Identifier	dev		845184	1					
ANR	845200	AssignmentExpression	* dev = gs_currentdevice_inline ( pgs )		845184	2		=			
ANR	845201	Identifier	dev		845184	0					
ANR	845202	CallExpression	gs_currentdevice_inline ( pgs )		845184	1					
ANR	845203	Callee	gs_currentdevice_inline		845184	0					
ANR	845204	Identifier	gs_currentdevice_inline		845184	0					
ANR	845205	ArgumentList	pgs		845184	1					
ANR	845206	Argument	pgs		845184	0					
ANR	845207	Identifier	pgs		845184	0					
ANR	845208	IdentifierDeclStatement	int code ;	438:4:15694:15702	845184	2	True				
ANR	845209	IdentifierDecl	code		845184	0					
ANR	845210	IdentifierDeclType	int		845184	0					
ANR	845211	Identifier	code		845184	1					
ANR	845212	ExpressionStatement	"* alpha_bits = ( * dev_proc ( dev , get_alpha_bits ) ) ( dev , go_text )"	440:4:15709:15770	845184	3	True				
ANR	845213	AssignmentExpression	"* alpha_bits = ( * dev_proc ( dev , get_alpha_bits ) ) ( dev , go_text )"		845184	0		=			
ANR	845214	UnaryOperationExpression	* alpha_bits		845184	0					
ANR	845215	UnaryOperator	*		845184	0					
ANR	845216	Identifier	alpha_bits		845184	1					
ANR	845217	CallExpression	"( * dev_proc ( dev , get_alpha_bits ) ) ( dev , go_text )"		845184	1					
ANR	845218	Callee	"* dev_proc ( dev , get_alpha_bits )"		845184	0					
ANR	845219	UnaryOperationExpression	"* dev_proc ( dev , get_alpha_bits )"		845184	0					
ANR	845220	UnaryOperator	*		845184	0					
ANR	845221	CallExpression	"dev_proc ( dev , get_alpha_bits )"		845184	1					
ANR	845222	Callee	dev_proc		845184	0					
ANR	845223	Identifier	dev_proc		845184	0					
ANR	845224	ArgumentList	dev		845184	1					
ANR	845225	Argument	dev		845184	0					
ANR	845226	Identifier	dev		845184	0					
ANR	845227	Argument	get_alpha_bits		845184	1					
ANR	845228	Identifier	get_alpha_bits		845184	0					
ANR	845229	ArgumentList	dev		845184	1					
ANR	845230	Argument	dev		845184	0					
ANR	845231	Identifier	dev		845184	0					
ANR	845232	Argument	go_text		845184	1					
ANR	845233	Identifier	go_text		845184	0					
ANR	845234	IfStatement	if ( in_setcachedevice )		845184	4					
ANR	845235	Condition	in_setcachedevice	441:8:15780:15796	845184	0	True				
ANR	845236	Identifier	in_setcachedevice		845184	0					
ANR	845237	CompoundStatement		7:27:194:194	845184	1					
ANR	845238	ElseStatement	else		845184	0					
ANR	845239	CompoundStatement		9:11:270:270	845184	0					
ANR	845240	ExpressionStatement	"code = gx_path_current_point_inline ( pgs , & penum -> origin )"	444:8:15885:15941	845184	0	True				
ANR	845241	AssignmentExpression	"code = gx_path_current_point_inline ( pgs , & penum -> origin )"		845184	0		=			
ANR	845242	Identifier	code		845184	0					
ANR	845243	CallExpression	"gx_path_current_point_inline ( pgs , & penum -> origin )"		845184	1					
ANR	845244	Callee	gx_path_current_point_inline		845184	0					
ANR	845245	Identifier	gx_path_current_point_inline		845184	0					
ANR	845246	ArgumentList	pgs		845184	1					
ANR	845247	Argument	pgs		845184	0					
ANR	845248	Identifier	pgs		845184	0					
ANR	845249	Argument	& penum -> origin		845184	1					
ANR	845250	UnaryOperationExpression	& penum -> origin		845184	0					
ANR	845251	UnaryOperator	&		845184	0					
ANR	845252	PtrMemberAccess	penum -> origin		845184	1					
ANR	845253	Identifier	penum		845184	0					
ANR	845254	Identifier	origin		845184	1					
ANR	845255	IfStatement	if ( code < 0 )		845184	1					
ANR	845256	Condition	code < 0	445:12:15955:15962	845184	0	True				
ANR	845257	RelationalExpression	code < 0		845184	0		<			
ANR	845258	Identifier	code		845184	0					
ANR	845259	PrimaryExpression	0		845184	1					
ANR	845260	CompoundStatement		11:22:360:360	845184	1					
ANR	845261	IfStatement	"if ( ! SHOW_IS ( penum , TEXT_DO_NONE ) )"		845184	0					
ANR	845262	Condition	"! SHOW_IS ( penum , TEXT_DO_NONE )"	447:16:16051:16079	845184	0	True				
ANR	845263	UnaryOperationExpression	"! SHOW_IS ( penum , TEXT_DO_NONE )"		845184	0					
ANR	845264	UnaryOperator	!		845184	0					
ANR	845265	CallExpression	"SHOW_IS ( penum , TEXT_DO_NONE )"		845184	1					
ANR	845266	Callee	SHOW_IS		845184	0					
ANR	845267	Identifier	SHOW_IS		845184	0					
ANR	845268	ArgumentList	penum		845184	1					
ANR	845269	Argument	penum		845184	0					
ANR	845270	Identifier	penum		845184	0					
ANR	845271	Argument	TEXT_DO_NONE		845184	1					
ANR	845272	Identifier	TEXT_DO_NONE		845184	0					
ANR	845273	ReturnStatement	return code ;	448:16:16098:16109	845184	1	True				
ANR	845274	Identifier	code		845184	0					
ANR	845275	ExpressionStatement	penum -> origin . x = penum -> origin . y = 0	449:12:16123:16160	845184	1	True				
ANR	845276	AssignmentExpression	penum -> origin . x = penum -> origin . y = 0		845184	0		=			
ANR	845277	MemberAccess	penum -> origin . x		845184	0					
ANR	845278	PtrMemberAccess	penum -> origin		845184	0					
ANR	845279	Identifier	penum		845184	0					
ANR	845280	Identifier	origin		845184	1					
ANR	845281	Identifier	x		845184	1					
ANR	845282	AssignmentExpression	penum -> origin . y = 0		845184	1		=			
ANR	845283	MemberAccess	penum -> origin . y		845184	0					
ANR	845284	PtrMemberAccess	penum -> origin		845184	0					
ANR	845285	Identifier	penum		845184	0					
ANR	845286	Identifier	origin		845184	1					
ANR	845287	Identifier	y		845184	1					
ANR	845288	PrimaryExpression	0		845184	1					
ANR	845289	IfStatement	if ( penum -> fapi_log2_scale . x != - 1 )		845184	5					
ANR	845290	Condition	penum -> fapi_log2_scale . x != - 1	452:8:16207:16236	845184	0	True				
ANR	845291	EqualityExpression	penum -> fapi_log2_scale . x != - 1		845184	0		!=			
ANR	845292	MemberAccess	penum -> fapi_log2_scale . x		845184	0					
ANR	845293	PtrMemberAccess	penum -> fapi_log2_scale		845184	0					
ANR	845294	Identifier	penum		845184	0					
ANR	845295	Identifier	fapi_log2_scale		845184	1					
ANR	845296	Identifier	x		845184	1					
ANR	845297	UnaryOperationExpression	- 1		845184	1					
ANR	845298	UnaryOperator	-		845184	0					
ANR	845299	PrimaryExpression	1		845184	1					
ANR	845300	ExpressionStatement	* log2_scale = penum -> fapi_log2_scale	453:8:16247:16283	845184	1	True				
ANR	845301	AssignmentExpression	* log2_scale = penum -> fapi_log2_scale		845184	0		=			
ANR	845302	UnaryOperationExpression	* log2_scale		845184	0					
ANR	845303	UnaryOperator	*		845184	0					
ANR	845304	Identifier	log2_scale		845184	1					
ANR	845305	PtrMemberAccess	penum -> fapi_log2_scale		845184	1					
ANR	845306	Identifier	penum		845184	0					
ANR	845307	Identifier	fapi_log2_scale		845184	1					
ANR	845308	ElseStatement	else		845184	0					
ANR	845309	ExpressionStatement	"gx_compute_text_oversampling ( penum , penum -> current_font , * alpha_bits , log2_scale )"	455:8:16302:16383	845184	0	True				
ANR	845310	CallExpression	"gx_compute_text_oversampling ( penum , penum -> current_font , * alpha_bits , log2_scale )"		845184	0					
ANR	845311	Callee	gx_compute_text_oversampling		845184	0					
ANR	845312	Identifier	gx_compute_text_oversampling		845184	0					
ANR	845313	ArgumentList	penum		845184	1					
ANR	845314	Argument	penum		845184	0					
ANR	845315	Identifier	penum		845184	0					
ANR	845316	Argument	penum -> current_font		845184	1					
ANR	845317	PtrMemberAccess	penum -> current_font		845184	0					
ANR	845318	Identifier	penum		845184	0					
ANR	845319	Identifier	current_font		845184	1					
ANR	845320	Argument	* alpha_bits		845184	2					
ANR	845321	UnaryOperationExpression	* alpha_bits		845184	0					
ANR	845322	UnaryOperator	*		845184	0					
ANR	845323	Identifier	alpha_bits		845184	1					
ANR	845324	Argument	log2_scale		845184	3					
ANR	845325	Identifier	log2_scale		845184	0					
ANR	845326	ExpressionStatement	"* depth = ( log2_scale -> x + log2_scale -> y == 0 ? 1 : min ( log2_scale -> x + log2_scale -> y , * alpha_bits ) )"	461:4:16640:16747	845184	6	True				
ANR	845327	AssignmentExpression	"* depth = ( log2_scale -> x + log2_scale -> y == 0 ? 1 : min ( log2_scale -> x + log2_scale -> y , * alpha_bits ) )"		845184	0		=			
ANR	845328	UnaryOperationExpression	* depth		845184	0					
ANR	845329	UnaryOperator	*		845184	0					
ANR	845330	Identifier	depth		845184	1					
ANR	845331	ConditionalExpression	"log2_scale -> x + log2_scale -> y == 0 ? 1 : min ( log2_scale -> x + log2_scale -> y , * alpha_bits )"		845184	1					
ANR	845332	Condition	log2_scale -> x + log2_scale -> y == 0		845184	0					
ANR	845333	EqualityExpression	log2_scale -> x + log2_scale -> y == 0		845184	0		==			
ANR	845334	AdditiveExpression	log2_scale -> x + log2_scale -> y		845184	0		+			
ANR	845335	PtrMemberAccess	log2_scale -> x		845184	0					
ANR	845336	Identifier	log2_scale		845184	0					
ANR	845337	Identifier	x		845184	1					
ANR	845338	PtrMemberAccess	log2_scale -> y		845184	1					
ANR	845339	Identifier	log2_scale		845184	0					
ANR	845340	Identifier	y		845184	1					
ANR	845341	PrimaryExpression	0		845184	1					
ANR	845342	PrimaryExpression	1		845184	1					
ANR	845343	CallExpression	"min ( log2_scale -> x + log2_scale -> y , * alpha_bits )"		845184	2					
ANR	845344	Callee	min		845184	0					
ANR	845345	Identifier	min		845184	0					
ANR	845346	ArgumentList	log2_scale -> x + log2_scale -> y		845184	1					
ANR	845347	Argument	log2_scale -> x + log2_scale -> y		845184	0					
ANR	845348	AdditiveExpression	log2_scale -> x + log2_scale -> y		845184	0		+			
ANR	845349	PtrMemberAccess	log2_scale -> x		845184	0					
ANR	845350	Identifier	log2_scale		845184	0					
ANR	845351	Identifier	x		845184	1					
ANR	845352	PtrMemberAccess	log2_scale -> y		845184	1					
ANR	845353	Identifier	log2_scale		845184	0					
ANR	845354	Identifier	y		845184	1					
ANR	845355	Argument	* alpha_bits		845184	1					
ANR	845356	UnaryOperationExpression	* alpha_bits		845184	0					
ANR	845357	UnaryOperator	*		845184	0					
ANR	845358	Identifier	alpha_bits		845184	1					
ANR	845359	IfStatement	if ( gs_currentaligntopixels ( penum -> current_font -> dir ) == 0 )		845184	7					
ANR	845360	Condition	gs_currentaligntopixels ( penum -> current_font -> dir ) == 0	463:8:16757:16810	845184	0	True				
ANR	845361	EqualityExpression	gs_currentaligntopixels ( penum -> current_font -> dir ) == 0		845184	0		==			
ANR	845362	CallExpression	gs_currentaligntopixels ( penum -> current_font -> dir )		845184	0					
ANR	845363	Callee	gs_currentaligntopixels		845184	0					
ANR	845364	Identifier	gs_currentaligntopixels		845184	0					
ANR	845365	ArgumentList	penum -> current_font -> dir		845184	1					
ANR	845366	Argument	penum -> current_font -> dir		845184	0					
ANR	845367	PtrMemberAccess	penum -> current_font -> dir		845184	0					
ANR	845368	PtrMemberAccess	penum -> current_font		845184	0					
ANR	845369	Identifier	penum		845184	0					
ANR	845370	Identifier	current_font		845184	1					
ANR	845371	Identifier	dir		845184	1					
ANR	845372	PrimaryExpression	0		845184	1					
ANR	845373	CompoundStatement		37:12:1527:1578	845184	1					
ANR	845374	IdentifierDeclStatement	int scx = - 1L << ( _fixed_shift - log2_scale -> x ) ;	464:8:16823:16870	845184	0	True				
ANR	845375	IdentifierDecl	scx = - 1L << ( _fixed_shift - log2_scale -> x )		845184	0					
ANR	845376	IdentifierDeclType	int		845184	0					
ANR	845377	Identifier	scx		845184	1					
ANR	845378	AssignmentExpression	scx = - 1L << ( _fixed_shift - log2_scale -> x )		845184	2		=			
ANR	845379	Identifier	scx		845184	0					
ANR	845380	ShiftExpression	- 1L << ( _fixed_shift - log2_scale -> x )		845184	1		<<			
ANR	845381	UnaryOperationExpression	- 1L		845184	0					
ANR	845382	UnaryOperator	-		845184	0					
ANR	845383	PrimaryExpression	1L		845184	1					
ANR	845384	AdditiveExpression	_fixed_shift - log2_scale -> x		845184	1		-			
ANR	845385	Identifier	_fixed_shift		845184	0					
ANR	845386	PtrMemberAccess	log2_scale -> x		845184	1					
ANR	845387	Identifier	log2_scale		845184	0					
ANR	845388	Identifier	x		845184	1					
ANR	845389	IdentifierDeclStatement	int rdx = 1L << ( _fixed_shift - 1 - log2_scale -> x ) ;	465:8:16880:16931	845184	1	True				
ANR	845390	IdentifierDecl	rdx = 1L << ( _fixed_shift - 1 - log2_scale -> x )		845184	0					
ANR	845391	IdentifierDeclType	int		845184	0					
ANR	845392	Identifier	rdx		845184	1					
ANR	845393	AssignmentExpression	rdx = 1L << ( _fixed_shift - 1 - log2_scale -> x )		845184	2		=			
ANR	845394	Identifier	rdx		845184	0					
ANR	845395	ShiftExpression	1L << ( _fixed_shift - 1 - log2_scale -> x )		845184	1		<<			
ANR	845396	PrimaryExpression	1L		845184	0					
ANR	845397	AdditiveExpression	_fixed_shift - 1 - log2_scale -> x		845184	1		-			
ANR	845398	Identifier	_fixed_shift		845184	0					
ANR	845399	AdditiveExpression	1 - log2_scale -> x		845184	1		-			
ANR	845400	PrimaryExpression	1		845184	0					
ANR	845401	PtrMemberAccess	log2_scale -> x		845184	1					
ANR	845402	Identifier	log2_scale		845184	0					
ANR	845403	Identifier	x		845184	1					
ANR	845404	Statement	if	467:8:16942:16943	845184	2	True				
ANR	845405	Statement	1	467:11:16945:16945	845184	3	True				
ANR	845406	ExpressionStatement	subpix_origin -> y = 0	468:12:17024:17044	845184	4	True				
ANR	845407	AssignmentExpression	subpix_origin -> y = 0		845184	0		=			
ANR	845408	PtrMemberAccess	subpix_origin -> y		845184	0					
ANR	845409	Identifier	subpix_origin		845184	0					
ANR	845410	Identifier	y		845184	1					
ANR	845411	PrimaryExpression	0		845184	1					
ANR	845412	IdentifierDeclStatement	int rdy = 1L << ( _fixed_shift - 1 - log2_scale -> y ) ;	471:12:17132:17183	845184	5	True				
ANR	845413	IdentifierDecl	rdy = 1L << ( _fixed_shift - 1 - log2_scale -> y )		845184	0					
ANR	845414	IdentifierDeclType	int		845184	0					
ANR	845415	Identifier	rdy		845184	1					
ANR	845416	AssignmentExpression	rdy = 1L << ( _fixed_shift - 1 - log2_scale -> y )		845184	2		=			
ANR	845417	Identifier	rdy		845184	0					
ANR	845418	ShiftExpression	1L << ( _fixed_shift - 1 - log2_scale -> y )		845184	1		<<			
ANR	845419	PrimaryExpression	1L		845184	0					
ANR	845420	AdditiveExpression	_fixed_shift - 1 - log2_scale -> y		845184	1		-			
ANR	845421	Identifier	_fixed_shift		845184	0					
ANR	845422	AdditiveExpression	1 - log2_scale -> y		845184	1		-			
ANR	845423	PrimaryExpression	1		845184	0					
ANR	845424	PtrMemberAccess	log2_scale -> y		845184	1					
ANR	845425	Identifier	log2_scale		845184	0					
ANR	845426	Identifier	y		845184	1					
ANR	845427	ExpressionStatement	subpix_origin -> y = ( ( penum -> origin . y + rdy ) & scy ) & ( fixed_1 - 1 )	473:12:17198:17264	845184	6	True				
ANR	845428	AssignmentExpression	subpix_origin -> y = ( ( penum -> origin . y + rdy ) & scy ) & ( fixed_1 - 1 )		845184	0		=			
ANR	845429	PtrMemberAccess	subpix_origin -> y		845184	0					
ANR	845430	Identifier	subpix_origin		845184	0					
ANR	845431	Identifier	y		845184	1					
ANR	845432	BitAndExpression	( ( penum -> origin . y + rdy ) & scy ) & ( fixed_1 - 1 )		845184	1		&			
ANR	845433	BitAndExpression	( penum -> origin . y + rdy ) & scy		845184	0		&			
ANR	845434	AdditiveExpression	penum -> origin . y + rdy		845184	0		+			
ANR	845435	MemberAccess	penum -> origin . y		845184	0					
ANR	845436	PtrMemberAccess	penum -> origin		845184	0					
ANR	845437	Identifier	penum		845184	0					
ANR	845438	Identifier	origin		845184	1					
ANR	845439	Identifier	y		845184	1					
ANR	845440	Identifier	rdy		845184	1					
ANR	845441	Identifier	scy		845184	1					
ANR	845442	AdditiveExpression	fixed_1 - 1		845184	1		-			
ANR	845443	Identifier	fixed_1		845184	0					
ANR	845444	PrimaryExpression	1		845184	1					
ANR	845445	Statement	endif	474:8:17274:17278	845184	7	True				
ANR	845446	ExpressionStatement	subpix_origin -> x = ( ( penum -> origin . x + rdx ) & scx ) & ( fixed_1 - 1 )	475:8:17288:17354	845184	8	True				
ANR	845447	AssignmentExpression	subpix_origin -> x = ( ( penum -> origin . x + rdx ) & scx ) & ( fixed_1 - 1 )		845184	0		=			
ANR	845448	PtrMemberAccess	subpix_origin -> x		845184	0					
ANR	845449	Identifier	subpix_origin		845184	0					
ANR	845450	Identifier	x		845184	1					
ANR	845451	BitAndExpression	( ( penum -> origin . x + rdx ) & scx ) & ( fixed_1 - 1 )		845184	1		&			
ANR	845452	BitAndExpression	( penum -> origin . x + rdx ) & scx		845184	0		&			
ANR	845453	AdditiveExpression	penum -> origin . x + rdx		845184	0		+			
ANR	845454	MemberAccess	penum -> origin . x		845184	0					
ANR	845455	PtrMemberAccess	penum -> origin		845184	0					
ANR	845456	Identifier	penum		845184	0					
ANR	845457	Identifier	origin		845184	1					
ANR	845458	Identifier	x		845184	1					
ANR	845459	Identifier	rdx		845184	1					
ANR	845460	Identifier	scx		845184	1					
ANR	845461	AdditiveExpression	fixed_1 - 1		845184	1		-			
ANR	845462	Identifier	fixed_1		845184	0					
ANR	845463	PrimaryExpression	1		845184	1					
ANR	845464	ElseStatement	else		845184	0					
ANR	845465	IdentifierDeclStatement	int scy = - 1L << ( _fixed_shift - log2_scale -> y ) ;	470:12:17071:17118	845184	0	True				
ANR	845466	IdentifierDecl	scy = - 1L << ( _fixed_shift - log2_scale -> y )		845184	0					
ANR	845467	IdentifierDeclType	int		845184	0					
ANR	845468	Identifier	scy		845184	1					
ANR	845469	AssignmentExpression	scy = - 1L << ( _fixed_shift - log2_scale -> y )		845184	2		=			
ANR	845470	Identifier	scy		845184	0					
ANR	845471	ShiftExpression	- 1L << ( _fixed_shift - log2_scale -> y )		845184	1		<<			
ANR	845472	UnaryOperationExpression	- 1L		845184	0					
ANR	845473	UnaryOperator	-		845184	0					
ANR	845474	PrimaryExpression	1L		845184	1					
ANR	845475	AdditiveExpression	_fixed_shift - log2_scale -> y		845184	1		-			
ANR	845476	Identifier	_fixed_shift		845184	0					
ANR	845477	PtrMemberAccess	log2_scale -> y		845184	1					
ANR	845478	Identifier	log2_scale		845184	0					
ANR	845479	Identifier	y		845184	1					
ANR	845480	ReturnType	static int		845184	1					
ANR	845481	Identifier	compute_glyph_raster_params		845184	2					
ANR	845482	ParameterList	"gs_show_enum * penum , bool in_setcachedevice , int * alpha_bits , int * depth , gs_fixed_point * subpix_origin , gs_log2_scale_point * log2_scale"		845184	3					
ANR	845483	Parameter	gs_show_enum * penum	432:28:15426:15444	845184	0	True				
ANR	845484	ParameterType	gs_show_enum *		845184	0					
ANR	845485	Identifier	penum		845184	1					
ANR	845486	Parameter	bool in_setcachedevice	432:49:15447:15468	845184	1	True				
ANR	845487	ParameterType	bool		845184	0					
ANR	845488	Identifier	in_setcachedevice		845184	1					
ANR	845489	Parameter	int * alpha_bits	432:73:15471:15485	845184	2	True				
ANR	845490	ParameterType	int *		845184	0					
ANR	845491	Identifier	alpha_bits		845184	1					
ANR	845492	Parameter	int * depth	433:20:15508:15517	845184	3	True				
ANR	845493	ParameterType	int *		845184	0					
ANR	845494	Identifier	depth		845184	1					
ANR	845495	Parameter	gs_fixed_point * subpix_origin	434:20:15540:15568	845184	4	True				
ANR	845496	ParameterType	gs_fixed_point *		845184	0					
ANR	845497	Identifier	subpix_origin		845184	1					
ANR	845498	Parameter	gs_log2_scale_point * log2_scale	434:51:15571:15601	845184	5	True				
ANR	845499	ParameterType	gs_log2_scale_point *		845184	0					
ANR	845500	Identifier	log2_scale		845184	1					
ANR	845501	CFGEntryNode	ENTRY		845184		True				
ANR	845502	CFGExitNode	EXIT		845184		True				
ANR	845503	Symbol	* penum		845184						
ANR	845504	Symbol	penum -> origin		845184						
ANR	845505	Symbol	code		845184						
ANR	845506	Symbol	* dev_proc		845184						
ANR	845507	Symbol	gs_currentaligntopixels		845184						
ANR	845508	Symbol	rdy		845184						
ANR	845509	Symbol	rdx		845184						
ANR	845510	Symbol	log2_scale -> y		845184						
ANR	845511	Symbol	log2_scale -> x		845184						
ANR	845512	Symbol	penum -> origin . y		845184						
ANR	845513	Symbol	penum -> pgs		845184						
ANR	845514	Symbol	penum -> origin . x		845184						
ANR	845515	Symbol	"* dev_proc ( dev , get_alpha_bits )"		845184						
ANR	845516	Symbol	penum -> current_font		845184						
ANR	845517	Symbol	min		845184						
ANR	845518	Symbol	dev		845184						
ANR	845519	Symbol	gs_currentdevice_inline		845184						
ANR	845520	Symbol	fixed_1		845184						
ANR	845521	Symbol	* alpha_bits		845184						
ANR	845522	Symbol	dev_proc		845184						
ANR	845523	Symbol	go_text		845184						
ANR	845524	Symbol	* depth		845184						
ANR	845525	Symbol	pgs		845184						
ANR	845526	Symbol	TEXT_DO_NONE		845184						
ANR	845527	Symbol	in_setcachedevice		845184						
ANR	845528	Symbol	_fixed_shift		845184						
ANR	845529	Symbol	* * penum		845184						
ANR	845530	Symbol	gx_path_current_point_inline		845184						
ANR	845531	Symbol	penum -> current_font -> dir		845184						
ANR	845532	Symbol	penum		845184						
ANR	845533	Symbol	get_alpha_bits		845184						
ANR	845534	Symbol	SHOW_IS		845184						
ANR	845535	Symbol	penum -> fapi_log2_scale . x		845184						
ANR	845536	Symbol	scy		845184						
ANR	845537	Symbol	scx		845184						
ANR	845538	Symbol	alpha_bits		845184						
ANR	845539	Symbol	subpix_origin		845184						
ANR	845540	Symbol	log2_scale		845184						
ANR	845541	Symbol	subpix_origin -> x		845184						
ANR	845542	Symbol	depth		845184						
ANR	845543	Symbol	* subpix_origin		845184						
ANR	845544	Symbol	penum -> fapi_log2_scale		845184						
ANR	845545	Symbol	subpix_origin -> y		845184						
ANR	845546	Symbol	& penum -> origin		845184						
ANR	845547	Symbol	* log2_scale		845184						
ANR	845548	Symbol	* penum -> current_font		845184						
ANR	845549	Function	set_cache_device	484:0:17575:27110							
ANR	845550	FunctionDef	"set_cache_device (gs_show_enum * penum , gs_gstate * pgs , double llx , double lly , double urx , double ury)"		845549	0					
ANR	845551	CompoundStatement		487:0:17707:27110	845549	0					
ANR	845552	IdentifierDeclStatement	gs_glyph glyph ;	488:4:17713:17727	845549	0	True				
ANR	845553	IdentifierDecl	glyph		845549	0					
ANR	845554	IdentifierDeclType	gs_glyph		845549	0					
ANR	845555	Identifier	glyph		845549	1					
ANR	845556	IdentifierDeclStatement	int code = 0 ;	489:4:17733:17745	845549	1	True				
ANR	845557	IdentifierDecl	code = 0		845549	0					
ANR	845558	IdentifierDeclType	int		845549	0					
ANR	845559	Identifier	code		845549	1					
ANR	845560	AssignmentExpression	code = 0		845549	2		=			
ANR	845561	Identifier	code		845549	0					
ANR	845562	PrimaryExpression	0		845549	1					
ANR	845563	IfStatement	if ( pgs -> in_cachedevice )		845549	2					
ANR	845564	Condition	pgs -> in_cachedevice	492:8:17806:17824	845549	0	True				
ANR	845565	PtrMemberAccess	pgs -> in_cachedevice		845549	0					
ANR	845566	Identifier	pgs		845549	0					
ANR	845567	Identifier	in_cachedevice		845549	1					
ANR	845568	ReturnStatement	return 0 ;	493:8:17858:17866	845549	1	True				
ANR	845569	PrimaryExpression	0		845549	0					
ANR	845570	IfStatement	"if ( SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE ) )"		845549	3					
ANR	845571	Condition	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"	494:8:17876:17927	845549	0	True				
ANR	845572	CallExpression	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"		845549	0					
ANR	845573	Callee	SHOW_IS_ALL_OF		845549	0					
ANR	845574	Identifier	SHOW_IS_ALL_OF		845549	0					
ANR	845575	ArgumentList	penum		845549	1					
ANR	845576	Argument	penum		845549	0					
ANR	845577	Identifier	penum		845549	0					
ANR	845578	Argument	TEXT_DO_NONE | TEXT_INTERVENE		845549	1					
ANR	845579	InclusiveOrExpression	TEXT_DO_NONE | TEXT_INTERVENE		845549	0		|			
ANR	845580	Identifier	TEXT_DO_NONE		845549	0					
ANR	845581	Identifier	TEXT_INTERVENE		845549	1					
ANR	845582	CompoundStatement		8:62:222:222	845549	1					
ANR	845583	ExpressionStatement	"if_debug0m ( 'k' , penum -> memory , ""[k]no cache: cshow"" )"	495:8:17952:18004	845549	0	True				
ANR	845584	CallExpression	"if_debug0m ( 'k' , penum -> memory , ""[k]no cache: cshow"" )"		845549	0					
ANR	845585	Callee	if_debug0m		845549	0					
ANR	845586	Identifier	if_debug0m		845549	0					
ANR	845587	ArgumentList	'k'		845549	1					
ANR	845588	Argument	'k'		845549	0					
ANR	845589	PrimaryExpression	'k'		845549	0					
ANR	845590	Argument	penum -> memory		845549	1					
ANR	845591	PtrMemberAccess	penum -> memory		845549	0					
ANR	845592	Identifier	penum		845549	0					
ANR	845593	Identifier	memory		845549	1					
ANR	845594	Argument	"""[k]no cache: cshow"""		845549	2					
ANR	845595	PrimaryExpression	"""[k]no cache: cshow"""		845549	0					
ANR	845596	ExpressionStatement	code = gs_nulldevice ( pgs )	496:8:18014:18039	845549	1	True				
ANR	845597	AssignmentExpression	code = gs_nulldevice ( pgs )		845549	0		=			
ANR	845598	Identifier	code		845549	0					
ANR	845599	CallExpression	gs_nulldevice ( pgs )		845549	1					
ANR	845600	Callee	gs_nulldevice		845549	0					
ANR	845601	Identifier	gs_nulldevice		845549	0					
ANR	845602	ArgumentList	pgs		845549	1					
ANR	845603	Argument	pgs		845549	0					
ANR	845604	Identifier	pgs		845549	0					
ANR	845605	IfStatement	if ( code < 0 )		845549	2					
ANR	845606	Condition	code < 0	497:12:18053:18060	845549	0	True				
ANR	845607	RelationalExpression	code < 0		845549	0		<			
ANR	845608	Identifier	code		845549	0					
ANR	845609	PrimaryExpression	0		845549	1					
ANR	845610	ReturnStatement	return code ;	498:12:18075:18086	845549	1	True				
ANR	845611	Identifier	code		845549	0					
ANR	845612	ReturnStatement	return 0 ;	499:8:18096:18104	845549	3	True				
ANR	845613	PrimaryExpression	0		845549	0					
ANR	845614	ExpressionStatement	pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING	501:4:18116:18162	845549	4	True				
ANR	845615	AssignmentExpression	pgs -> in_cachedevice = CACHE_DEVICE_NOT_CACHING		845549	0		=			
ANR	845616	PtrMemberAccess	pgs -> in_cachedevice		845549	0					
ANR	845617	Identifier	pgs		845549	0					
ANR	845618	Identifier	in_cachedevice		845549	1					
ANR	845619	Identifier	CACHE_DEVICE_NOT_CACHING		845549	1					
ANR	845620	ExpressionStatement	glyph = CURRENT_GLYPH ( penum )	503:4:18271:18299	845549	5	True				
ANR	845621	AssignmentExpression	glyph = CURRENT_GLYPH ( penum )		845549	0		=			
ANR	845622	Identifier	glyph		845549	0					
ANR	845623	CallExpression	CURRENT_GLYPH ( penum )		845549	1					
ANR	845624	Callee	CURRENT_GLYPH		845549	0					
ANR	845625	Identifier	CURRENT_GLYPH		845549	0					
ANR	845626	ArgumentList	penum		845549	1					
ANR	845627	Argument	penum		845549	0					
ANR	845628	Identifier	penum		845549	0					
ANR	845629	IfStatement	if ( glyph == GS_NO_GLYPH )		845549	6					
ANR	845630	Condition	glyph == GS_NO_GLYPH	504:8:18309:18328	845549	0	True				
ANR	845631	EqualityExpression	glyph == GS_NO_GLYPH		845549	0		==			
ANR	845632	Identifier	glyph		845549	0					
ANR	845633	Identifier	GS_NO_GLYPH		845549	1					
ANR	845634	ReturnStatement	return 0 ;	505:8:18339:18347	845549	1	True				
ANR	845635	PrimaryExpression	0		845549	0					
ANR	845636	IfStatement	if ( penum -> can_cache <= 0 || ! pgs -> char_tm_valid )		845549	7					
ANR	845637	Condition	penum -> can_cache <= 0 || ! pgs -> char_tm_valid	508:8:18460:18503	845549	0	True				
ANR	845638	OrExpression	penum -> can_cache <= 0 || ! pgs -> char_tm_valid		845549	0		||			
ANR	845639	RelationalExpression	penum -> can_cache <= 0		845549	0		<=			
ANR	845640	PtrMemberAccess	penum -> can_cache		845549	0					
ANR	845641	Identifier	penum		845549	0					
ANR	845642	Identifier	can_cache		845549	1					
ANR	845643	PrimaryExpression	0		845549	1					
ANR	845644	UnaryOperationExpression	! pgs -> char_tm_valid		845549	1					
ANR	845645	UnaryOperator	!		845549	0					
ANR	845646	PtrMemberAccess	pgs -> char_tm_valid		845549	1					
ANR	845647	Identifier	pgs		845549	0					
ANR	845648	Identifier	char_tm_valid		845549	1					
ANR	845649	CompoundStatement		22:54:798:798	845549	1					
ANR	845650	ExpressionStatement	"if_debug2m ( 'k' , penum -> memory , ""[k]no cache: can_cache=%d, char_tm_valid=%d\\n"" , penum -> can_cache , ( int ) pgs -> char_tm_valid )"	509:8:18516:18657	845549	0	True				
ANR	845651	CallExpression	"if_debug2m ( 'k' , penum -> memory , ""[k]no cache: can_cache=%d, char_tm_valid=%d\\n"" , penum -> can_cache , ( int ) pgs -> char_tm_valid )"		845549	0					
ANR	845652	Callee	if_debug2m		845549	0					
ANR	845653	Identifier	if_debug2m		845549	0					
ANR	845654	ArgumentList	'k'		845549	1					
ANR	845655	Argument	'k'		845549	0					
ANR	845656	PrimaryExpression	'k'		845549	0					
ANR	845657	Argument	penum -> memory		845549	1					
ANR	845658	PtrMemberAccess	penum -> memory		845549	0					
ANR	845659	Identifier	penum		845549	0					
ANR	845660	Identifier	memory		845549	1					
ANR	845661	Argument	"""[k]no cache: can_cache=%d, char_tm_valid=%d\\n"""		845549	2					
ANR	845662	PrimaryExpression	"""[k]no cache: can_cache=%d, char_tm_valid=%d\\n"""		845549	0					
ANR	845663	Argument	penum -> can_cache		845549	3					
ANR	845664	PtrMemberAccess	penum -> can_cache		845549	0					
ANR	845665	Identifier	penum		845549	0					
ANR	845666	Identifier	can_cache		845549	1					
ANR	845667	Argument	( int ) pgs -> char_tm_valid		845549	4					
ANR	845668	CastExpression	( int ) pgs -> char_tm_valid		845549	0					
ANR	845669	CastTarget	int		845549	0					
ANR	845670	PtrMemberAccess	pgs -> char_tm_valid		845549	1					
ANR	845671	Identifier	pgs		845549	0					
ANR	845672	Identifier	char_tm_valid		845549	1					
ANR	845673	ReturnStatement	return 0 ;	511:8:18667:18675	845549	1	True				
ANR	845674	PrimaryExpression	0		845549	0					
ANR	845675	CompoundStatement		42:8:1477:1516	845549	8					
ANR	845676	IdentifierDeclStatement	const gs_font * pfont = pgs -> font ;	513:8:18693:18725	845549	0	True				
ANR	845677	IdentifierDecl	* pfont = pgs -> font		845549	0					
ANR	845678	IdentifierDeclType	const gs_font *		845549	0					
ANR	845679	Identifier	pfont		845549	1					
ANR	845680	AssignmentExpression	* pfont = pgs -> font		845549	2		=			
ANR	845681	Identifier	pfont		845549	0					
ANR	845682	PtrMemberAccess	pgs -> font		845549	1					
ANR	845683	Identifier	pgs		845549	0					
ANR	845684	Identifier	font		845549	1					
ANR	845685	IdentifierDeclStatement	gs_font_dir * dir = pfont -> dir ;	514:8:18735:18764	845549	1	True				
ANR	845686	IdentifierDecl	* dir = pfont -> dir		845549	0					
ANR	845687	IdentifierDeclType	gs_font_dir *		845549	0					
ANR	845688	Identifier	dir		845549	1					
ANR	845689	AssignmentExpression	* dir = pfont -> dir		845549	2		=			
ANR	845690	Identifier	dir		845549	0					
ANR	845691	PtrMemberAccess	pfont -> dir		845549	1					
ANR	845692	Identifier	pfont		845549	0					
ANR	845693	Identifier	dir		845549	1					
ANR	845694	IdentifierDeclStatement	"int alpha_bits , depth ;"	515:8:18774:18795	845549	2	True				
ANR	845695	IdentifierDecl	alpha_bits		845549	0					
ANR	845696	IdentifierDeclType	int		845549	0					
ANR	845697	Identifier	alpha_bits		845549	1					
ANR	845698	IdentifierDecl	depth		845549	1					
ANR	845699	IdentifierDeclType	int		845549	0					
ANR	845700	Identifier	depth		845549	1					
ANR	845701	IdentifierDeclStatement	gs_log2_scale_point log2_scale ;	516:8:18805:18835	845549	3	True				
ANR	845702	IdentifierDecl	log2_scale		845549	0					
ANR	845703	IdentifierDeclType	gs_log2_scale_point		845549	0					
ANR	845704	Identifier	log2_scale		845549	1					
ANR	845705	IdentifierDeclStatement	gs_fixed_point subpix_origin ;	517:8:18845:18873	845549	4	True				
ANR	845706	IdentifierDecl	subpix_origin		845549	0					
ANR	845707	IdentifierDeclType	gs_fixed_point		845549	0					
ANR	845708	Identifier	subpix_origin		845549	1					
ANR	845709	Statement	static	518:8:18883:18888	845549	5	True				
ANR	845710	Statement	const	518:15:18890:18894	845549	6	True				
ANR	845711	Statement	fixed	518:21:18896:18900	845549	7	True				
ANR	845712	Statement	max_cdim	518:27:18902:18909	845549	8	True				
ANR	845713	Statement	[	518:35:18910:18910	845549	9	True				
ANR	845714	Statement	3	518:36:18911:18911	845549	10	True				
ANR	845715	Statement	]	518:37:18912:18912	845549	11	True				
ANR	845716	Statement	=	518:39:18914:18914	845549	12	True				
ANR	845717	CompoundStatement		33:8:1216:1216	845549	13					
ANR	845718	Statement	define	520:1:18927:18932	845549	0	True				
ANR	845719	Statement	max_cd	520:8:18934:18939	845549	1	True				
ANR	845720	Statement	(	520:14:18940:18940	845549	2	True				
ANR	845721	Statement	n	520:15:18941:18941	845549	3	True				
ANR	845722	Statement	)	520:16:18942:18942	845549	4	True				
ANR	845723	Statement	(	521:12:18957:18957	845549	5	True				
ANR	845724	Statement	fixed_1	521:13:18958:18964	845549	6	True				
ANR	845725	Statement	<<	521:21:18966:18967	845549	7	True				
ANR	845726	Statement	(	521:24:18969:18969	845549	8	True				
ANR	845727	Statement	ARCH_SIZEOF_SHORT	521:25:18970:18986	845549	9	True				
ANR	845728	Statement	*	521:43:18988:18988	845549	10	True				
ANR	845729	Statement	8	521:45:18990:18990	845549	11	True				
ANR	845730	Statement	-	521:47:18992:18992	845549	12	True				
ANR	845731	Statement	n	521:49:18994:18994	845549	13	True				
ANR	845732	Statement	)	521:50:18995:18995	845549	14	True				
ANR	845733	Statement	)	521:51:18996:18996	845549	15	True				
ANR	845734	Statement	-	521:53:18998:18998	845549	16	True				
ANR	845735	Statement	(	521:55:19000:19000	845549	17	True				
ANR	845736	Statement	fixed_1	521:56:19001:19007	845549	18	True				
ANR	845737	Statement	>>	521:64:19009:19010	845549	19	True				
ANR	845738	Statement	n	521:67:19012:19012	845549	20	True				
ANR	845739	Statement	)	521:68:19013:19013	845549	21	True				
ANR	845740	Statement	*	521:70:19015:19015	845549	22	True				
ANR	845741	Statement	3	521:72:19017:19017	845549	23	True				
ANR	845742	Statement	max_cd	522:12:19031:19036	845549	24	True				
ANR	845743	Statement	(	522:18:19037:19037	845549	25	True				
ANR	845744	Statement	0	522:19:19038:19038	845549	26	True				
ANR	845745	Statement	)	522:20:19039:19039	845549	27	True				
ANR	845746	Statement	","	522:21:19040:19040	845549	28	True				
ANR	845747	Statement	max_cd	522:23:19042:19047	845549	29	True				
ANR	845748	Statement	(	522:29:19048:19048	845549	30	True				
ANR	845749	Statement	1	522:30:19049:19049	845549	31	True				
ANR	845750	Statement	)	522:31:19050:19050	845549	32	True				
ANR	845751	Statement	","	522:32:19051:19051	845549	33	True				
ANR	845752	Statement	max_cd	522:34:19053:19058	845549	34	True				
ANR	845753	Statement	(	522:40:19059:19059	845549	35	True				
ANR	845754	Statement	2	522:41:19060:19060	845549	36	True				
ANR	845755	Statement	)	522:42:19061:19061	845549	37	True				
ANR	845756	Statement	undef	523:1:19064:19068	845549	38	True				
ANR	845757	Statement	max_cd	523:7:19070:19075	845549	39	True				
ANR	845758	ExpressionStatement		524:9:19086:19086	845549	14	True				
ANR	845759	IdentifierDeclStatement	"ushort iwidth , iheight ;"	525:8:19096:19118	845549	15	True				
ANR	845760	IdentifierDecl	iwidth		845549	0					
ANR	845761	IdentifierDeclType	ushort		845549	0					
ANR	845762	Identifier	iwidth		845549	1					
ANR	845763	IdentifierDecl	iheight		845549	1					
ANR	845764	IdentifierDeclType	ushort		845549	0					
ANR	845765	Identifier	iheight		845549	1					
ANR	845766	IdentifierDeclStatement	cached_char * cc ;	526:8:19128:19143	845549	16	True				
ANR	845767	IdentifierDecl	* cc		845549	0					
ANR	845768	IdentifierDeclType	cached_char *		845549	0					
ANR	845769	Identifier	cc		845549	1					
ANR	845770	IdentifierDeclStatement	gs_fixed_rect clip_box ;	527:8:19153:19175	845549	17	True				
ANR	845771	IdentifierDecl	clip_box		845549	0					
ANR	845772	IdentifierDeclType	gs_fixed_rect		845549	0					
ANR	845773	Identifier	clip_box		845549	1					
ANR	845774	IdentifierDeclStatement	"gs_fixed_point cll , clr , cul , cur , cdim ;"	528:8:19185:19224	845549	18	True				
ANR	845775	IdentifierDecl	cll		845549	0					
ANR	845776	IdentifierDeclType	gs_fixed_point		845549	0					
ANR	845777	Identifier	cll		845549	1					
ANR	845778	IdentifierDecl	clr		845549	1					
ANR	845779	IdentifierDeclType	gs_fixed_point		845549	0					
ANR	845780	Identifier	clr		845549	1					
ANR	845781	IdentifierDecl	cul		845549	2					
ANR	845782	IdentifierDeclType	gs_fixed_point		845549	0					
ANR	845783	Identifier	cul		845549	1					
ANR	845784	IdentifierDecl	cur		845549	3					
ANR	845785	IdentifierDeclType	gs_fixed_point		845549	0					
ANR	845786	Identifier	cur		845549	1					
ANR	845787	IdentifierDecl	cdim		845549	4					
ANR	845788	IdentifierDeclType	gs_fixed_point		845549	0					
ANR	845789	Identifier	cdim		845549	1					
ANR	845790	IfStatement	if ( fabs ( llx ) > 32000. || fabs ( lly ) > 32000. || fabs ( urx ) > 32000. || fabs ( ury ) >= 32000. )		845549	19					
ANR	845791	Condition	fabs ( llx ) > 32000. || fabs ( lly ) > 32000. || fabs ( urx ) > 32000. || fabs ( ury ) >= 32000.	533:12:19462:19546	845549	0	True				
ANR	845792	OrExpression	fabs ( llx ) > 32000. || fabs ( lly ) > 32000. || fabs ( urx ) > 32000. || fabs ( ury ) >= 32000.		845549	0		||			
ANR	845793	RelationalExpression	fabs ( llx ) > 32000.		845549	0		>			
ANR	845794	CallExpression	fabs ( llx )		845549	0					
ANR	845795	Callee	fabs		845549	0					
ANR	845796	Identifier	fabs		845549	0					
ANR	845797	ArgumentList	llx		845549	1					
ANR	845798	Argument	llx		845549	0					
ANR	845799	Identifier	llx		845549	0					
ANR	845800	PrimaryExpression	32000.		845549	1					
ANR	845801	OrExpression	fabs ( lly ) > 32000. || fabs ( urx ) > 32000. || fabs ( ury ) >= 32000.		845549	1		||			
ANR	845802	RelationalExpression	fabs ( lly ) > 32000.		845549	0		>			
ANR	845803	CallExpression	fabs ( lly )		845549	0					
ANR	845804	Callee	fabs		845549	0					
ANR	845805	Identifier	fabs		845549	0					
ANR	845806	ArgumentList	lly		845549	1					
ANR	845807	Argument	lly		845549	0					
ANR	845808	Identifier	lly		845549	0					
ANR	845809	PrimaryExpression	32000.		845549	1					
ANR	845810	OrExpression	fabs ( urx ) > 32000. || fabs ( ury ) >= 32000.		845549	1		||			
ANR	845811	RelationalExpression	fabs ( urx ) > 32000.		845549	0		>			
ANR	845812	CallExpression	fabs ( urx )		845549	0					
ANR	845813	Callee	fabs		845549	0					
ANR	845814	Identifier	fabs		845549	0					
ANR	845815	ArgumentList	urx		845549	1					
ANR	845816	Argument	urx		845549	0					
ANR	845817	Identifier	urx		845549	0					
ANR	845818	PrimaryExpression	32000.		845549	1					
ANR	845819	RelationalExpression	fabs ( ury ) >= 32000.		845549	1		>=			
ANR	845820	CallExpression	fabs ( ury )		845549	0					
ANR	845821	Callee	fabs		845549	0					
ANR	845822	Identifier	fabs		845549	0					
ANR	845823	ArgumentList	ury		845549	1					
ANR	845824	Argument	ury		845549	0					
ANR	845825	Identifier	ury		845549	0					
ANR	845826	PrimaryExpression	32000.		845549	1					
ANR	845827	ReturnStatement	return 0 ;	534:12:19561:19569	845549	1	True				
ANR	845828	PrimaryExpression	0		845549	0					
ANR	845829	IfStatement	"if ( ( code = gs_distance_transform2fixed ( & pgs -> ctm , llx , lly , & cll ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , llx , ury , & clr ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , lly , & cul ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , ury , & cur ) ) < 0 )"		845549	20					
ANR	845830	Condition	"( code = gs_distance_transform2fixed ( & pgs -> ctm , llx , lly , & cll ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , llx , ury , & clr ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , lly , & cul ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , ury , & cur ) ) < 0"	542:12:19934:20246	845549	0	True				
ANR	845831	OrExpression	"( code = gs_distance_transform2fixed ( & pgs -> ctm , llx , lly , & cll ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , llx , ury , & clr ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , lly , & cul ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , ury , & cur ) ) < 0"		845549	0		||			
ANR	845832	RelationalExpression	"( code = gs_distance_transform2fixed ( & pgs -> ctm , llx , lly , & cll ) ) < 0"		845549	0		<			
ANR	845833	AssignmentExpression	"code = gs_distance_transform2fixed ( & pgs -> ctm , llx , lly , & cll )"		845549	0		=			
ANR	845834	Identifier	code		845549	0					
ANR	845835	CallExpression	"gs_distance_transform2fixed ( & pgs -> ctm , llx , lly , & cll )"		845549	1					
ANR	845836	Callee	gs_distance_transform2fixed		845549	0					
ANR	845837	Identifier	gs_distance_transform2fixed		845549	0					
ANR	845838	ArgumentList	& pgs -> ctm		845549	1					
ANR	845839	Argument	& pgs -> ctm		845549	0					
ANR	845840	UnaryOperationExpression	& pgs -> ctm		845549	0					
ANR	845841	UnaryOperator	&		845549	0					
ANR	845842	PtrMemberAccess	pgs -> ctm		845549	1					
ANR	845843	Identifier	pgs		845549	0					
ANR	845844	Identifier	ctm		845549	1					
ANR	845845	Argument	llx		845549	1					
ANR	845846	Identifier	llx		845549	0					
ANR	845847	Argument	lly		845549	2					
ANR	845848	Identifier	lly		845549	0					
ANR	845849	Argument	& cll		845549	3					
ANR	845850	UnaryOperationExpression	& cll		845549	0					
ANR	845851	UnaryOperator	&		845549	0					
ANR	845852	Identifier	cll		845549	1					
ANR	845853	PrimaryExpression	0		845549	1					
ANR	845854	OrExpression	"( code = gs_distance_transform2fixed ( & pgs -> ctm , llx , ury , & clr ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , lly , & cul ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , ury , & cur ) ) < 0"		845549	1		||			
ANR	845855	RelationalExpression	"( code = gs_distance_transform2fixed ( & pgs -> ctm , llx , ury , & clr ) ) < 0"		845549	0		<			
ANR	845856	AssignmentExpression	"code = gs_distance_transform2fixed ( & pgs -> ctm , llx , ury , & clr )"		845549	0		=			
ANR	845857	Identifier	code		845549	0					
ANR	845858	CallExpression	"gs_distance_transform2fixed ( & pgs -> ctm , llx , ury , & clr )"		845549	1					
ANR	845859	Callee	gs_distance_transform2fixed		845549	0					
ANR	845860	Identifier	gs_distance_transform2fixed		845549	0					
ANR	845861	ArgumentList	& pgs -> ctm		845549	1					
ANR	845862	Argument	& pgs -> ctm		845549	0					
ANR	845863	UnaryOperationExpression	& pgs -> ctm		845549	0					
ANR	845864	UnaryOperator	&		845549	0					
ANR	845865	PtrMemberAccess	pgs -> ctm		845549	1					
ANR	845866	Identifier	pgs		845549	0					
ANR	845867	Identifier	ctm		845549	1					
ANR	845868	Argument	llx		845549	1					
ANR	845869	Identifier	llx		845549	0					
ANR	845870	Argument	ury		845549	2					
ANR	845871	Identifier	ury		845549	0					
ANR	845872	Argument	& clr		845549	3					
ANR	845873	UnaryOperationExpression	& clr		845549	0					
ANR	845874	UnaryOperator	&		845549	0					
ANR	845875	Identifier	clr		845549	1					
ANR	845876	PrimaryExpression	0		845549	1					
ANR	845877	OrExpression	"( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , lly , & cul ) ) < 0 || ( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , ury , & cur ) ) < 0"		845549	1		||			
ANR	845878	RelationalExpression	"( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , lly , & cul ) ) < 0"		845549	0		<			
ANR	845879	AssignmentExpression	"code = gs_distance_transform2fixed ( & pgs -> ctm , urx , lly , & cul )"		845549	0		=			
ANR	845880	Identifier	code		845549	0					
ANR	845881	CallExpression	"gs_distance_transform2fixed ( & pgs -> ctm , urx , lly , & cul )"		845549	1					
ANR	845882	Callee	gs_distance_transform2fixed		845549	0					
ANR	845883	Identifier	gs_distance_transform2fixed		845549	0					
ANR	845884	ArgumentList	& pgs -> ctm		845549	1					
ANR	845885	Argument	& pgs -> ctm		845549	0					
ANR	845886	UnaryOperationExpression	& pgs -> ctm		845549	0					
ANR	845887	UnaryOperator	&		845549	0					
ANR	845888	PtrMemberAccess	pgs -> ctm		845549	1					
ANR	845889	Identifier	pgs		845549	0					
ANR	845890	Identifier	ctm		845549	1					
ANR	845891	Argument	urx		845549	1					
ANR	845892	Identifier	urx		845549	0					
ANR	845893	Argument	lly		845549	2					
ANR	845894	Identifier	lly		845549	0					
ANR	845895	Argument	& cul		845549	3					
ANR	845896	UnaryOperationExpression	& cul		845549	0					
ANR	845897	UnaryOperator	&		845549	0					
ANR	845898	Identifier	cul		845549	1					
ANR	845899	PrimaryExpression	0		845549	1					
ANR	845900	RelationalExpression	"( code = gs_distance_transform2fixed ( & pgs -> ctm , urx , ury , & cur ) ) < 0"		845549	1		<			
ANR	845901	AssignmentExpression	"code = gs_distance_transform2fixed ( & pgs -> ctm , urx , ury , & cur )"		845549	0		=			
ANR	845902	Identifier	code		845549	0					
ANR	845903	CallExpression	"gs_distance_transform2fixed ( & pgs -> ctm , urx , ury , & cur )"		845549	1					
ANR	845904	Callee	gs_distance_transform2fixed		845549	0					
ANR	845905	Identifier	gs_distance_transform2fixed		845549	0					
ANR	845906	ArgumentList	& pgs -> ctm		845549	1					
ANR	845907	Argument	& pgs -> ctm		845549	0					
ANR	845908	UnaryOperationExpression	& pgs -> ctm		845549	0					
ANR	845909	UnaryOperator	&		845549	0					
ANR	845910	PtrMemberAccess	pgs -> ctm		845549	1					
ANR	845911	Identifier	pgs		845549	0					
ANR	845912	Identifier	ctm		845549	1					
ANR	845913	Argument	urx		845549	1					
ANR	845914	Identifier	urx		845549	0					
ANR	845915	Argument	ury		845549	2					
ANR	845916	Identifier	ury		845549	0					
ANR	845917	Argument	& cur		845549	3					
ANR	845918	UnaryOperationExpression	& cur		845549	0					
ANR	845919	UnaryOperator	&		845549	0					
ANR	845920	Identifier	cur		845549	1					
ANR	845921	PrimaryExpression	0		845549	1					
ANR	845922	ReturnStatement	return 0 ;	547:12:20274:20282	845549	1	True				
ANR	845923	PrimaryExpression	0		845549	0					
ANR	845924	CompoundStatement		63:12:2626:2637	845549	21					
ANR	845925	IdentifierDeclStatement	fixed ctemp ;	549:12:20334:20345	845549	0	True				
ANR	845926	IdentifierDecl	ctemp		845549	0					
ANR	845927	IdentifierDeclType	fixed		845549	0					
ANR	845928	Identifier	ctemp		845549	1					
ANR	845929	Statement	define	551:1:20349:20354	845549	1	True				
ANR	845930	Statement	swap	551:8:20356:20359	845549	2	True				
ANR	845931	Statement	(	551:12:20360:20360	845549	3	True				
ANR	845932	Statement	a	551:13:20361:20361	845549	4	True				
ANR	845933	Statement	","	551:14:20362:20362	845549	5	True				
ANR	845934	Statement	b	551:16:20364:20364	845549	6	True				
ANR	845935	Statement	)	551:17:20365:20365	845549	7	True				
ANR	845936	Statement	ctemp	551:19:20367:20371	845549	8	True				
ANR	845937	Statement	=	551:25:20373:20373	845549	9	True				
ANR	845938	Statement	a	551:27:20375:20375	845549	10	True				
ANR	845939	Statement	","	551:28:20376:20376	845549	11	True				
ANR	845940	Statement	a	551:30:20378:20378	845549	12	True				
ANR	845941	Statement	=	551:32:20380:20380	845549	13	True				
ANR	845942	Statement	b	551:34:20382:20382	845549	14	True				
ANR	845943	Statement	","	551:35:20383:20383	845549	15	True				
ANR	845944	Statement	b	551:37:20385:20385	845549	16	True				
ANR	845945	Statement	=	551:39:20387:20387	845549	17	True				
ANR	845946	Statement	ctemp	551:41:20389:20393	845549	18	True				
ANR	845947	Statement	define	552:1:20396:20401	845549	19	True				
ANR	845948	Statement	make_min	552:8:20403:20410	845549	20	True				
ANR	845949	Statement	(	552:16:20411:20411	845549	21	True				
ANR	845950	Statement	a	552:17:20412:20412	845549	22	True				
ANR	845951	Statement	","	552:18:20413:20413	845549	23	True				
ANR	845952	Statement	b	552:20:20415:20415	845549	24	True				
ANR	845953	Statement	)	552:21:20416:20416	845549	25	True				
ANR	845954	IfStatement	if ( ( a ) > ( b ) )		845549	26					
ANR	845955	Condition	( a ) > ( b )	552:28:20423:20431	845549	0	True				
ANR	845956	RelationalExpression	( a ) > ( b )		845549	0		>			
ANR	845957	Identifier	a		845549	0					
ANR	845958	Identifier	b		845549	1					
ANR	845959	Statement	swap	552:40:20435:20438	845549	1	True				
ANR	845960	Statement	(	552:44:20439:20439	845549	27	True				
ANR	845961	Statement	a	552:45:20440:20440	845549	28	True				
ANR	845962	Statement	","	552:46:20441:20441	845549	29	True				
ANR	845963	Statement	b	552:48:20443:20443	845549	30	True				
ANR	845964	Statement	)	552:49:20444:20444	845549	31	True				
ANR	845965	ExpressionStatement	"make_min ( cll . x , cur . x )"	554:12:20459:20481	845549	32	True				
ANR	845966	CallExpression	"make_min ( cll . x , cur . x )"		845549	0					
ANR	845967	Callee	make_min		845549	0					
ANR	845968	Identifier	make_min		845549	0					
ANR	845969	ArgumentList	cll . x		845549	1					
ANR	845970	Argument	cll . x		845549	0					
ANR	845971	MemberAccess	cll . x		845549	0					
ANR	845972	Identifier	cll		845549	0					
ANR	845973	Identifier	x		845549	1					
ANR	845974	Argument	cur . x		845549	1					
ANR	845975	MemberAccess	cur . x		845549	0					
ANR	845976	Identifier	cur		845549	0					
ANR	845977	Identifier	x		845549	1					
ANR	845978	ExpressionStatement	"make_min ( cll . y , cur . y )"	555:12:20495:20517	845549	33	True				
ANR	845979	CallExpression	"make_min ( cll . y , cur . y )"		845549	0					
ANR	845980	Callee	make_min		845549	0					
ANR	845981	Identifier	make_min		845549	0					
ANR	845982	ArgumentList	cll . y		845549	1					
ANR	845983	Argument	cll . y		845549	0					
ANR	845984	MemberAccess	cll . y		845549	0					
ANR	845985	Identifier	cll		845549	0					
ANR	845986	Identifier	y		845549	1					
ANR	845987	Argument	cur . y		845549	1					
ANR	845988	MemberAccess	cur . y		845549	0					
ANR	845989	Identifier	cur		845549	0					
ANR	845990	Identifier	y		845549	1					
ANR	845991	ExpressionStatement	"make_min ( clr . x , cul . x )"	556:12:20531:20553	845549	34	True				
ANR	845992	CallExpression	"make_min ( clr . x , cul . x )"		845549	0					
ANR	845993	Callee	make_min		845549	0					
ANR	845994	Identifier	make_min		845549	0					
ANR	845995	ArgumentList	clr . x		845549	1					
ANR	845996	Argument	clr . x		845549	0					
ANR	845997	MemberAccess	clr . x		845549	0					
ANR	845998	Identifier	clr		845549	0					
ANR	845999	Identifier	x		845549	1					
ANR	846000	Argument	cul . x		845549	1					
ANR	846001	MemberAccess	cul . x		845549	0					
ANR	846002	Identifier	cul		845549	0					
ANR	846003	Identifier	x		845549	1					
ANR	846004	ExpressionStatement	"make_min ( clr . y , cul . y )"	557:12:20567:20589	845549	35	True				
ANR	846005	CallExpression	"make_min ( clr . y , cul . y )"		845549	0					
ANR	846006	Callee	make_min		845549	0					
ANR	846007	Identifier	make_min		845549	0					
ANR	846008	ArgumentList	clr . y		845549	1					
ANR	846009	Argument	clr . y		845549	0					
ANR	846010	MemberAccess	clr . y		845549	0					
ANR	846011	Identifier	clr		845549	0					
ANR	846012	Identifier	y		845549	1					
ANR	846013	Argument	cul . y		845549	1					
ANR	846014	MemberAccess	cul . y		845549	0					
ANR	846015	Identifier	cul		845549	0					
ANR	846016	Identifier	y		845549	1					
ANR	846017	Statement	undef	558:1:20592:20596	845549	36	True				
ANR	846018	Statement	make_min	558:7:20598:20605	845549	37	True				
ANR	846019	Statement	undef	559:1:20608:20612	845549	38	True				
ANR	846020	Statement	swap	559:7:20614:20617	845549	39	True				
ANR	846021	IfStatement	if ( clr . x < cll . x )		845549	22					
ANR	846022	Condition	clr . x < cll . x	562:12:20687:20699	845549	0	True				
ANR	846023	RelationalExpression	clr . x < cll . x		845549	0		<			
ANR	846024	MemberAccess	clr . x		845549	0					
ANR	846025	Identifier	clr		845549	0					
ANR	846026	Identifier	x		845549	1					
ANR	846027	MemberAccess	cll . x		845549	1					
ANR	846028	Identifier	cll		845549	0					
ANR	846029	Identifier	x		845549	1					
ANR	846030	ExpressionStatement	"cll . x = clr . x , cur . x = cul . x"	563:12:20714:20742	845549	1	True				
ANR	846031	Expression	"cll . x = clr . x , cur . x = cul . x"		845549	0					
ANR	846032	AssignmentExpression	cll . x = clr . x		845549	0		=			
ANR	846033	MemberAccess	cll . x		845549	0					
ANR	846034	Identifier	cll		845549	0					
ANR	846035	Identifier	x		845549	1					
ANR	846036	MemberAccess	clr . x		845549	1					
ANR	846037	Identifier	clr		845549	0					
ANR	846038	Identifier	x		845549	1					
ANR	846039	AssignmentExpression	cur . x = cul . x		845549	1		=			
ANR	846040	MemberAccess	cur . x		845549	0					
ANR	846041	Identifier	cur		845549	0					
ANR	846042	Identifier	x		845549	1					
ANR	846043	MemberAccess	cul . x		845549	1					
ANR	846044	Identifier	cul		845549	0					
ANR	846045	Identifier	x		845549	1					
ANR	846046	IfStatement	if ( clr . y < cll . y )		845549	23					
ANR	846047	Condition	clr . y < cll . y	564:12:20756:20768	845549	0	True				
ANR	846048	RelationalExpression	clr . y < cll . y		845549	0		<			
ANR	846049	MemberAccess	clr . y		845549	0					
ANR	846050	Identifier	clr		845549	0					
ANR	846051	Identifier	y		845549	1					
ANR	846052	MemberAccess	cll . y		845549	1					
ANR	846053	Identifier	cll		845549	0					
ANR	846054	Identifier	y		845549	1					
ANR	846055	ExpressionStatement	"cll . y = clr . y , cur . y = cul . y"	565:12:20783:20811	845549	1	True				
ANR	846056	Expression	"cll . y = clr . y , cur . y = cul . y"		845549	0					
ANR	846057	AssignmentExpression	cll . y = clr . y		845549	0		=			
ANR	846058	MemberAccess	cll . y		845549	0					
ANR	846059	Identifier	cll		845549	0					
ANR	846060	Identifier	y		845549	1					
ANR	846061	MemberAccess	clr . y		845549	1					
ANR	846062	Identifier	clr		845549	0					
ANR	846063	Identifier	y		845549	1					
ANR	846064	AssignmentExpression	cur . y = cul . y		845549	1		=			
ANR	846065	MemberAccess	cur . y		845549	0					
ANR	846066	Identifier	cur		845549	0					
ANR	846067	Identifier	y		845549	1					
ANR	846068	MemberAccess	cul . y		845549	1					
ANR	846069	Identifier	cul		845549	0					
ANR	846070	Identifier	y		845549	1					
ANR	846071	ExpressionStatement	"code = compute_glyph_raster_params ( penum , true , & alpha_bits , & depth , & subpix_origin , & log2_scale )"	567:8:20879:20987	845549	24	True				
ANR	846072	AssignmentExpression	"code = compute_glyph_raster_params ( penum , true , & alpha_bits , & depth , & subpix_origin , & log2_scale )"		845549	0		=			
ANR	846073	Identifier	code		845549	0					
ANR	846074	CallExpression	"compute_glyph_raster_params ( penum , true , & alpha_bits , & depth , & subpix_origin , & log2_scale )"		845549	1					
ANR	846075	Callee	compute_glyph_raster_params		845549	0					
ANR	846076	Identifier	compute_glyph_raster_params		845549	0					
ANR	846077	ArgumentList	penum		845549	1					
ANR	846078	Argument	penum		845549	0					
ANR	846079	Identifier	penum		845549	0					
ANR	846080	Argument	true		845549	1					
ANR	846081	Identifier	true		845549	0					
ANR	846082	Argument	& alpha_bits		845549	2					
ANR	846083	UnaryOperationExpression	& alpha_bits		845549	0					
ANR	846084	UnaryOperator	&		845549	0					
ANR	846085	Identifier	alpha_bits		845549	1					
ANR	846086	Argument	& depth		845549	3					
ANR	846087	UnaryOperationExpression	& depth		845549	0					
ANR	846088	UnaryOperator	&		845549	0					
ANR	846089	Identifier	depth		845549	1					
ANR	846090	Argument	& subpix_origin		845549	4					
ANR	846091	UnaryOperationExpression	& subpix_origin		845549	0					
ANR	846092	UnaryOperator	&		845549	0					
ANR	846093	Identifier	subpix_origin		845549	1					
ANR	846094	Argument	& log2_scale		845549	5					
ANR	846095	UnaryOperationExpression	& log2_scale		845549	0					
ANR	846096	UnaryOperator	&		845549	0					
ANR	846097	Identifier	log2_scale		845549	1					
ANR	846098	IfStatement	if ( code < 0 )		845549	25					
ANR	846099	Condition	code < 0	569:12:21001:21008	845549	0	True				
ANR	846100	RelationalExpression	code < 0		845549	0		<			
ANR	846101	Identifier	code		845549	0					
ANR	846102	PrimaryExpression	0		845549	1					
ANR	846103	ReturnStatement	return code ;	570:12:21023:21034	845549	1	True				
ANR	846104	Identifier	code		845549	0					
ANR	846105	IfStatement	if ( gs_debug_c ( 'k' ) )		845549	26					
ANR	846106	Condition	gs_debug_c ( 'k' )	572:12:21061:21075	845549	0	True				
ANR	846107	CallExpression	gs_debug_c ( 'k' )		845549	0					
ANR	846108	Callee	gs_debug_c		845549	0					
ANR	846109	Identifier	gs_debug_c		845549	0					
ANR	846110	ArgumentList	'k'		845549	1					
ANR	846111	Argument	'k'		845549	0					
ANR	846112	PrimaryExpression	'k'		845549	0					
ANR	846113	CompoundStatement		86:29:3370:3370	845549	1					
ANR	846114	ExpressionStatement	"dmlprintf6 ( pgs -> memory , ""[k]cbox=[%g %g %g %g] scale=%dx%d\\n"" , fixed2float ( cll . x ) , fixed2float ( cll . y ) , fixed2float ( cur . x ) , fixed2float ( cur . y ) , 1 << log2_scale . x , 1 << log2_scale . y )"	573:12:21092:21341	845549	0	True				
ANR	846115	CallExpression	"dmlprintf6 ( pgs -> memory , ""[k]cbox=[%g %g %g %g] scale=%dx%d\\n"" , fixed2float ( cll . x ) , fixed2float ( cll . y ) , fixed2float ( cur . x ) , fixed2float ( cur . y ) , 1 << log2_scale . x , 1 << log2_scale . y )"		845549	0					
ANR	846116	Callee	dmlprintf6		845549	0					
ANR	846117	Identifier	dmlprintf6		845549	0					
ANR	846118	ArgumentList	pgs -> memory		845549	1					
ANR	846119	Argument	pgs -> memory		845549	0					
ANR	846120	PtrMemberAccess	pgs -> memory		845549	0					
ANR	846121	Identifier	pgs		845549	0					
ANR	846122	Identifier	memory		845549	1					
ANR	846123	Argument	"""[k]cbox=[%g %g %g %g] scale=%dx%d\\n"""		845549	1					
ANR	846124	PrimaryExpression	"""[k]cbox=[%g %g %g %g] scale=%dx%d\\n"""		845549	0					
ANR	846125	Argument	fixed2float ( cll . x )		845549	2					
ANR	846126	CallExpression	fixed2float ( cll . x )		845549	0					
ANR	846127	Callee	fixed2float		845549	0					
ANR	846128	Identifier	fixed2float		845549	0					
ANR	846129	ArgumentList	cll . x		845549	1					
ANR	846130	Argument	cll . x		845549	0					
ANR	846131	MemberAccess	cll . x		845549	0					
ANR	846132	Identifier	cll		845549	0					
ANR	846133	Identifier	x		845549	1					
ANR	846134	Argument	fixed2float ( cll . y )		845549	3					
ANR	846135	CallExpression	fixed2float ( cll . y )		845549	0					
ANR	846136	Callee	fixed2float		845549	0					
ANR	846137	Identifier	fixed2float		845549	0					
ANR	846138	ArgumentList	cll . y		845549	1					
ANR	846139	Argument	cll . y		845549	0					
ANR	846140	MemberAccess	cll . y		845549	0					
ANR	846141	Identifier	cll		845549	0					
ANR	846142	Identifier	y		845549	1					
ANR	846143	Argument	fixed2float ( cur . x )		845549	4					
ANR	846144	CallExpression	fixed2float ( cur . x )		845549	0					
ANR	846145	Callee	fixed2float		845549	0					
ANR	846146	Identifier	fixed2float		845549	0					
ANR	846147	ArgumentList	cur . x		845549	1					
ANR	846148	Argument	cur . x		845549	0					
ANR	846149	MemberAccess	cur . x		845549	0					
ANR	846150	Identifier	cur		845549	0					
ANR	846151	Identifier	x		845549	1					
ANR	846152	Argument	fixed2float ( cur . y )		845549	5					
ANR	846153	CallExpression	fixed2float ( cur . y )		845549	0					
ANR	846154	Callee	fixed2float		845549	0					
ANR	846155	Identifier	fixed2float		845549	0					
ANR	846156	ArgumentList	cur . y		845549	1					
ANR	846157	Argument	cur . y		845549	0					
ANR	846158	MemberAccess	cur . y		845549	0					
ANR	846159	Identifier	cur		845549	0					
ANR	846160	Identifier	y		845549	1					
ANR	846161	Argument	1 << log2_scale . x		845549	6					
ANR	846162	ShiftExpression	1 << log2_scale . x		845549	0		<<			
ANR	846163	PrimaryExpression	1		845549	0					
ANR	846164	MemberAccess	log2_scale . x		845549	1					
ANR	846165	Identifier	log2_scale		845549	0					
ANR	846166	Identifier	x		845549	1					
ANR	846167	Argument	1 << log2_scale . y		845549	7					
ANR	846168	ShiftExpression	1 << log2_scale . y		845549	0		<<			
ANR	846169	PrimaryExpression	1		845549	0					
ANR	846170	MemberAccess	log2_scale . y		845549	1					
ANR	846171	Identifier	log2_scale		845549	0					
ANR	846172	Identifier	y		845549	1					
ANR	846173	ExpressionStatement	"dmlprintf6 ( pgs -> memory , ""[p]  ctm=[%g %g %g %g %g %g]\\n"" , pgs -> ctm . xx , pgs -> ctm . xy , pgs -> ctm . yx , pgs -> ctm . yy , pgs -> ctm . tx , pgs -> ctm . ty )"	577:12:21355:21536	845549	1	True				
ANR	846174	CallExpression	"dmlprintf6 ( pgs -> memory , ""[p]  ctm=[%g %g %g %g %g %g]\\n"" , pgs -> ctm . xx , pgs -> ctm . xy , pgs -> ctm . yx , pgs -> ctm . yy , pgs -> ctm . tx , pgs -> ctm . ty )"		845549	0					
ANR	846175	Callee	dmlprintf6		845549	0					
ANR	846176	Identifier	dmlprintf6		845549	0					
ANR	846177	ArgumentList	pgs -> memory		845549	1					
ANR	846178	Argument	pgs -> memory		845549	0					
ANR	846179	PtrMemberAccess	pgs -> memory		845549	0					
ANR	846180	Identifier	pgs		845549	0					
ANR	846181	Identifier	memory		845549	1					
ANR	846182	Argument	"""[p]  ctm=[%g %g %g %g %g %g]\\n"""		845549	1					
ANR	846183	PrimaryExpression	"""[p]  ctm=[%g %g %g %g %g %g]\\n"""		845549	0					
ANR	846184	Argument	pgs -> ctm . xx		845549	2					
ANR	846185	MemberAccess	pgs -> ctm . xx		845549	0					
ANR	846186	PtrMemberAccess	pgs -> ctm		845549	0					
ANR	846187	Identifier	pgs		845549	0					
ANR	846188	Identifier	ctm		845549	1					
ANR	846189	Identifier	xx		845549	1					
ANR	846190	Argument	pgs -> ctm . xy		845549	3					
ANR	846191	MemberAccess	pgs -> ctm . xy		845549	0					
ANR	846192	PtrMemberAccess	pgs -> ctm		845549	0					
ANR	846193	Identifier	pgs		845549	0					
ANR	846194	Identifier	ctm		845549	1					
ANR	846195	Identifier	xy		845549	1					
ANR	846196	Argument	pgs -> ctm . yx		845549	4					
ANR	846197	MemberAccess	pgs -> ctm . yx		845549	0					
ANR	846198	PtrMemberAccess	pgs -> ctm		845549	0					
ANR	846199	Identifier	pgs		845549	0					
ANR	846200	Identifier	ctm		845549	1					
ANR	846201	Identifier	yx		845549	1					
ANR	846202	Argument	pgs -> ctm . yy		845549	5					
ANR	846203	MemberAccess	pgs -> ctm . yy		845549	0					
ANR	846204	PtrMemberAccess	pgs -> ctm		845549	0					
ANR	846205	Identifier	pgs		845549	0					
ANR	846206	Identifier	ctm		845549	1					
ANR	846207	Identifier	yy		845549	1					
ANR	846208	Argument	pgs -> ctm . tx		845549	6					
ANR	846209	MemberAccess	pgs -> ctm . tx		845549	0					
ANR	846210	PtrMemberAccess	pgs -> ctm		845549	0					
ANR	846211	Identifier	pgs		845549	0					
ANR	846212	Identifier	ctm		845549	1					
ANR	846213	Identifier	tx		845549	1					
ANR	846214	Argument	pgs -> ctm . ty		845549	7					
ANR	846215	MemberAccess	pgs -> ctm . ty		845549	0					
ANR	846216	PtrMemberAccess	pgs -> ctm		845549	0					
ANR	846217	Identifier	pgs		845549	0					
ANR	846218	Identifier	ctm		845549	1					
ANR	846219	Identifier	ty		845549	1					
ANR	846220	ExpressionStatement	cdim . x = cur . x - cll . x	582:8:21563:21585	845549	27	True				
ANR	846221	AssignmentExpression	cdim . x = cur . x - cll . x		845549	0		=			
ANR	846222	MemberAccess	cdim . x		845549	0					
ANR	846223	Identifier	cdim		845549	0					
ANR	846224	Identifier	x		845549	1					
ANR	846225	AdditiveExpression	cur . x - cll . x		845549	1		-			
ANR	846226	MemberAccess	cur . x		845549	0					
ANR	846227	Identifier	cur		845549	0					
ANR	846228	Identifier	x		845549	1					
ANR	846229	MemberAccess	cll . x		845549	1					
ANR	846230	Identifier	cll		845549	0					
ANR	846231	Identifier	x		845549	1					
ANR	846232	ExpressionStatement	cdim . y = cur . y - cll . y	583:8:21595:21617	845549	28	True				
ANR	846233	AssignmentExpression	cdim . y = cur . y - cll . y		845549	0		=			
ANR	846234	MemberAccess	cdim . y		845549	0					
ANR	846235	Identifier	cdim		845549	0					
ANR	846236	Identifier	y		845549	1					
ANR	846237	AdditiveExpression	cur . y - cll . y		845549	1		-			
ANR	846238	MemberAccess	cur . y		845549	0					
ANR	846239	Identifier	cur		845549	0					
ANR	846240	Identifier	y		845549	1					
ANR	846241	MemberAccess	cll . y		845549	1					
ANR	846242	Identifier	cll		845549	0					
ANR	846243	Identifier	y		845549	1					
ANR	846244	IfStatement	if ( cdim . x > max_cdim [ log2_scale . x ] || cdim . y > max_cdim [ log2_scale . y ] )		845549	29					
ANR	846245	Condition	cdim . x > max_cdim [ log2_scale . x ] || cdim . y > max_cdim [ log2_scale . y ]	584:12:21631:21708	845549	0	True				
ANR	846246	OrExpression	cdim . x > max_cdim [ log2_scale . x ] || cdim . y > max_cdim [ log2_scale . y ]		845549	0		||			
ANR	846247	RelationalExpression	cdim . x > max_cdim [ log2_scale . x ]		845549	0		>			
ANR	846248	MemberAccess	cdim . x		845549	0					
ANR	846249	Identifier	cdim		845549	0					
ANR	846250	Identifier	x		845549	1					
ANR	846251	ArrayIndexing	max_cdim [ log2_scale . x ]		845549	1					
ANR	846252	Identifier	max_cdim		845549	0					
ANR	846253	MemberAccess	log2_scale . x		845549	1					
ANR	846254	Identifier	log2_scale		845549	0					
ANR	846255	Identifier	x		845549	1					
ANR	846256	RelationalExpression	cdim . y > max_cdim [ log2_scale . y ]		845549	1		>			
ANR	846257	MemberAccess	cdim . y		845549	0					
ANR	846258	Identifier	cdim		845549	0					
ANR	846259	Identifier	y		845549	1					
ANR	846260	ArrayIndexing	max_cdim [ log2_scale . y ]		845549	1					
ANR	846261	Identifier	max_cdim		845549	0					
ANR	846262	MemberAccess	log2_scale . y		845549	1					
ANR	846263	Identifier	log2_scale		845549	0					
ANR	846264	Identifier	y		845549	1					
ANR	846265	ReturnStatement	return 0 ;	587:12:21736:21744	845549	1	True				
ANR	846266	PrimaryExpression	0		845549	0					
ANR	846267	ExpressionStatement	iwidth = ( ( ushort ) fixed2int_var ( cdim . x ) + 3 ) << log2_scale . x	588:8:21783:21844	845549	30	True				
ANR	846268	AssignmentExpression	iwidth = ( ( ushort ) fixed2int_var ( cdim . x ) + 3 ) << log2_scale . x		845549	0		=			
ANR	846269	Identifier	iwidth		845549	0					
ANR	846270	ShiftExpression	( ( ushort ) fixed2int_var ( cdim . x ) + 3 ) << log2_scale . x		845549	1		<<			
ANR	846271	AdditiveExpression	( ushort ) fixed2int_var ( cdim . x ) + 3		845549	0		+			
ANR	846272	CastExpression	( ushort ) fixed2int_var ( cdim . x )		845549	0					
ANR	846273	CastTarget	ushort		845549	0					
ANR	846274	CallExpression	fixed2int_var ( cdim . x )		845549	1					
ANR	846275	Callee	fixed2int_var		845549	0					
ANR	846276	Identifier	fixed2int_var		845549	0					
ANR	846277	ArgumentList	cdim . x		845549	1					
ANR	846278	Argument	cdim . x		845549	0					
ANR	846279	MemberAccess	cdim . x		845549	0					
ANR	846280	Identifier	cdim		845549	0					
ANR	846281	Identifier	x		845549	1					
ANR	846282	PrimaryExpression	3		845549	1					
ANR	846283	MemberAccess	log2_scale . x		845549	1					
ANR	846284	Identifier	log2_scale		845549	0					
ANR	846285	Identifier	x		845549	1					
ANR	846286	ExpressionStatement	iheight = ( ( ushort ) fixed2int_var ( cdim . y ) + 3 ) << log2_scale . y	589:8:21854:21916	845549	31	True				
ANR	846287	AssignmentExpression	iheight = ( ( ushort ) fixed2int_var ( cdim . y ) + 3 ) << log2_scale . y		845549	0		=			
ANR	846288	Identifier	iheight		845549	0					
ANR	846289	ShiftExpression	( ( ushort ) fixed2int_var ( cdim . y ) + 3 ) << log2_scale . y		845549	1		<<			
ANR	846290	AdditiveExpression	( ushort ) fixed2int_var ( cdim . y ) + 3		845549	0		+			
ANR	846291	CastExpression	( ushort ) fixed2int_var ( cdim . y )		845549	0					
ANR	846292	CastTarget	ushort		845549	0					
ANR	846293	CallExpression	fixed2int_var ( cdim . y )		845549	1					
ANR	846294	Callee	fixed2int_var		845549	0					
ANR	846295	Identifier	fixed2int_var		845549	0					
ANR	846296	ArgumentList	cdim . y		845549	1					
ANR	846297	Argument	cdim . y		845549	0					
ANR	846298	MemberAccess	cdim . y		845549	0					
ANR	846299	Identifier	cdim		845549	0					
ANR	846300	Identifier	y		845549	1					
ANR	846301	PrimaryExpression	3		845549	1					
ANR	846302	MemberAccess	log2_scale . y		845549	1					
ANR	846303	Identifier	log2_scale		845549	0					
ANR	846304	Identifier	y		845549	1					
ANR	846305	ExpressionStatement	"if_debug3m ( 'k' , penum -> memory , ""[k]iwidth=%u iheight=%u dev_cache %s\\n"" , ( uint ) iwidth , ( uint ) iheight , ( penum -> dev_cache == 0 ? ""not set"" : ""set"" ) )"	590:8:21926:22112	845549	32	True				
ANR	846306	CallExpression	"if_debug3m ( 'k' , penum -> memory , ""[k]iwidth=%u iheight=%u dev_cache %s\\n"" , ( uint ) iwidth , ( uint ) iheight , ( penum -> dev_cache == 0 ? ""not set"" : ""set"" ) )"		845549	0					
ANR	846307	Callee	if_debug3m		845549	0					
ANR	846308	Identifier	if_debug3m		845549	0					
ANR	846309	ArgumentList	'k'		845549	1					
ANR	846310	Argument	'k'		845549	0					
ANR	846311	PrimaryExpression	'k'		845549	0					
ANR	846312	Argument	penum -> memory		845549	1					
ANR	846313	PtrMemberAccess	penum -> memory		845549	0					
ANR	846314	Identifier	penum		845549	0					
ANR	846315	Identifier	memory		845549	1					
ANR	846316	Argument	"""[k]iwidth=%u iheight=%u dev_cache %s\\n"""		845549	2					
ANR	846317	PrimaryExpression	"""[k]iwidth=%u iheight=%u dev_cache %s\\n"""		845549	0					
ANR	846318	Argument	( uint ) iwidth		845549	3					
ANR	846319	CastExpression	( uint ) iwidth		845549	0					
ANR	846320	CastTarget	uint		845549	0					
ANR	846321	Identifier	iwidth		845549	1					
ANR	846322	Argument	( uint ) iheight		845549	4					
ANR	846323	CastExpression	( uint ) iheight		845549	0					
ANR	846324	CastTarget	uint		845549	0					
ANR	846325	Identifier	iheight		845549	1					
ANR	846326	Argument	"penum -> dev_cache == 0 ? ""not set"" : ""set"""		845549	5					
ANR	846327	ConditionalExpression	"penum -> dev_cache == 0 ? ""not set"" : ""set"""		845549	0					
ANR	846328	Condition	penum -> dev_cache == 0		845549	0					
ANR	846329	EqualityExpression	penum -> dev_cache == 0		845549	0		==			
ANR	846330	PtrMemberAccess	penum -> dev_cache		845549	0					
ANR	846331	Identifier	penum		845549	0					
ANR	846332	Identifier	dev_cache		845549	1					
ANR	846333	PrimaryExpression	0		845549	1					
ANR	846334	PrimaryExpression	"""not set"""		845549	1					
ANR	846335	PrimaryExpression	"""set"""		845549	2					
ANR	846336	IfStatement	if ( penum -> dev_cache == 0 )		845549	33					
ANR	846337	Condition	penum -> dev_cache == 0	593:12:22126:22146	845549	0	True				
ANR	846338	EqualityExpression	penum -> dev_cache == 0		845549	0		==			
ANR	846339	PtrMemberAccess	penum -> dev_cache		845549	0					
ANR	846340	Identifier	penum		845549	0					
ANR	846341	Identifier	dev_cache		845549	1					
ANR	846342	PrimaryExpression	0		845549	1					
ANR	846343	CompoundStatement		107:35:4441:4441	845549	1					
ANR	846344	ExpressionStatement	code = show_cache_setup ( penum )	594:12:22163:22193	845549	0	True				
ANR	846345	AssignmentExpression	code = show_cache_setup ( penum )		845549	0		=			
ANR	846346	Identifier	code		845549	0					
ANR	846347	CallExpression	show_cache_setup ( penum )		845549	1					
ANR	846348	Callee	show_cache_setup		845549	0					
ANR	846349	Identifier	show_cache_setup		845549	0					
ANR	846350	ArgumentList	penum		845549	1					
ANR	846351	Argument	penum		845549	0					
ANR	846352	Identifier	penum		845549	0					
ANR	846353	IfStatement	if ( code < 0 )		845549	1					
ANR	846354	Condition	code < 0	595:16:22211:22218	845549	0	True				
ANR	846355	RelationalExpression	code < 0		845549	0		<			
ANR	846356	Identifier	code		845549	0					
ANR	846357	PrimaryExpression	0		845549	1					
ANR	846358	ReturnStatement	return code ;	596:16:22237:22248	845549	1	True				
ANR	846359	Identifier	code		845549	0					
ANR	846360	ExpressionStatement	"code = gx_alloc_char_bits ( dir , penum -> dev_cache , ( iwidth > MAX_CCACHE_TEMP_BITMAP_BITS / iheight && log2_scale . x + log2_scale . y > alpha_bits ? penum -> dev_cache2 : NULL ) , iwidth , iheight , & log2_scale , depth , & cc )"	605:8:22612:22953	845549	34	True				
ANR	846361	AssignmentExpression	"code = gx_alloc_char_bits ( dir , penum -> dev_cache , ( iwidth > MAX_CCACHE_TEMP_BITMAP_BITS / iheight && log2_scale . x + log2_scale . y > alpha_bits ? penum -> dev_cache2 : NULL ) , iwidth , iheight , & log2_scale , depth , & cc )"		845549	0		=			
ANR	846362	Identifier	code		845549	0					
ANR	846363	CallExpression	"gx_alloc_char_bits ( dir , penum -> dev_cache , ( iwidth > MAX_CCACHE_TEMP_BITMAP_BITS / iheight && log2_scale . x + log2_scale . y > alpha_bits ? penum -> dev_cache2 : NULL ) , iwidth , iheight , & log2_scale , depth , & cc )"		845549	1					
ANR	846364	Callee	gx_alloc_char_bits		845549	0					
ANR	846365	Identifier	gx_alloc_char_bits		845549	0					
ANR	846366	ArgumentList	dir		845549	1					
ANR	846367	Argument	dir		845549	0					
ANR	846368	Identifier	dir		845549	0					
ANR	846369	Argument	penum -> dev_cache		845549	1					
ANR	846370	PtrMemberAccess	penum -> dev_cache		845549	0					
ANR	846371	Identifier	penum		845549	0					
ANR	846372	Identifier	dev_cache		845549	1					
ANR	846373	Argument	iwidth > MAX_CCACHE_TEMP_BITMAP_BITS / iheight && log2_scale . x + log2_scale . y > alpha_bits ? penum -> dev_cache2 : NULL		845549	2					
ANR	846374	ConditionalExpression	iwidth > MAX_CCACHE_TEMP_BITMAP_BITS / iheight && log2_scale . x + log2_scale . y > alpha_bits ? penum -> dev_cache2 : NULL		845549	0					
ANR	846375	Condition	iwidth > MAX_CCACHE_TEMP_BITMAP_BITS / iheight && log2_scale . x + log2_scale . y > alpha_bits		845549	0					
ANR	846376	AndExpression	iwidth > MAX_CCACHE_TEMP_BITMAP_BITS / iheight && log2_scale . x + log2_scale . y > alpha_bits		845549	0		&&			
ANR	846377	RelationalExpression	iwidth > MAX_CCACHE_TEMP_BITMAP_BITS / iheight		845549	0		>			
ANR	846378	Identifier	iwidth		845549	0					
ANR	846379	MultiplicativeExpression	MAX_CCACHE_TEMP_BITMAP_BITS / iheight		845549	1		/			
ANR	846380	Identifier	MAX_CCACHE_TEMP_BITMAP_BITS		845549	0					
ANR	846381	Identifier	iheight		845549	1					
ANR	846382	RelationalExpression	log2_scale . x + log2_scale . y > alpha_bits		845549	1		>			
ANR	846383	AdditiveExpression	log2_scale . x + log2_scale . y		845549	0		+			
ANR	846384	MemberAccess	log2_scale . x		845549	0					
ANR	846385	Identifier	log2_scale		845549	0					
ANR	846386	Identifier	x		845549	1					
ANR	846387	MemberAccess	log2_scale . y		845549	1					
ANR	846388	Identifier	log2_scale		845549	0					
ANR	846389	Identifier	y		845549	1					
ANR	846390	Identifier	alpha_bits		845549	1					
ANR	846391	PtrMemberAccess	penum -> dev_cache2		845549	1					
ANR	846392	Identifier	penum		845549	0					
ANR	846393	Identifier	dev_cache2		845549	1					
ANR	846394	Identifier	NULL		845549	2					
ANR	846395	Argument	iwidth		845549	3					
ANR	846396	Identifier	iwidth		845549	0					
ANR	846397	Argument	iheight		845549	4					
ANR	846398	Identifier	iheight		845549	0					
ANR	846399	Argument	& log2_scale		845549	5					
ANR	846400	UnaryOperationExpression	& log2_scale		845549	0					
ANR	846401	UnaryOperator	&		845549	0					
ANR	846402	Identifier	log2_scale		845549	1					
ANR	846403	Argument	depth		845549	6					
ANR	846404	Identifier	depth		845549	0					
ANR	846405	Argument	& cc		845549	7					
ANR	846406	UnaryOperationExpression	& cc		845549	0					
ANR	846407	UnaryOperator	&		845549	0					
ANR	846408	Identifier	cc		845549	1					
ANR	846409	IfStatement	if ( code < 0 )		845549	35					
ANR	846410	Condition	code < 0	610:12:22967:22974	845549	0	True				
ANR	846411	RelationalExpression	code < 0		845549	0		<			
ANR	846412	Identifier	code		845549	0					
ANR	846413	PrimaryExpression	0		845549	1					
ANR	846414	ReturnStatement	return code ;	611:12:22989:23000	845549	1	True				
ANR	846415	Identifier	code		845549	0					
ANR	846416	IfStatement	if ( cc == 0 )		845549	36					
ANR	846417	Condition	cc == 0	613:12:23015:23021	845549	0	True				
ANR	846418	EqualityExpression	cc == 0		845549	0		==			
ANR	846419	Identifier	cc		845549	0					
ANR	846420	PrimaryExpression	0		845549	1					
ANR	846421	CompoundStatement		129:12:5378:5394	845549	1					
ANR	846422	IdentifierDeclStatement	gx_path box_path ;	615:12:23086:23102	845549	0	True				
ANR	846423	IdentifierDecl	box_path		845549	0					
ANR	846424	IdentifierDeclType	gx_path		845549	0					
ANR	846425	Identifier	box_path		845549	1					
ANR	846426	IfStatement	if ( penum -> current_font -> FontType != ft_user_defined && penum -> current_font -> FontType != ft_PCL_user_defined && penum -> current_font -> FontType != ft_GL2_stick_user_defined && penum -> current_font -> FontType != ft_CID_user_defined )		845549	1					
ANR	846427	Condition	penum -> current_font -> FontType != ft_user_defined && penum -> current_font -> FontType != ft_PCL_user_defined && penum -> current_font -> FontType != ft_GL2_stick_user_defined && penum -> current_font -> FontType != ft_CID_user_defined	617:16:23121:23390	845549	0	True				
ANR	846428	AndExpression	penum -> current_font -> FontType != ft_user_defined && penum -> current_font -> FontType != ft_PCL_user_defined && penum -> current_font -> FontType != ft_GL2_stick_user_defined && penum -> current_font -> FontType != ft_CID_user_defined		845549	0		&&			
ANR	846429	EqualityExpression	penum -> current_font -> FontType != ft_user_defined		845549	0		!=			
ANR	846430	PtrMemberAccess	penum -> current_font -> FontType		845549	0					
ANR	846431	PtrMemberAccess	penum -> current_font		845549	0					
ANR	846432	Identifier	penum		845549	0					
ANR	846433	Identifier	current_font		845549	1					
ANR	846434	Identifier	FontType		845549	1					
ANR	846435	Identifier	ft_user_defined		845549	1					
ANR	846436	AndExpression	penum -> current_font -> FontType != ft_PCL_user_defined && penum -> current_font -> FontType != ft_GL2_stick_user_defined && penum -> current_font -> FontType != ft_CID_user_defined		845549	1		&&			
ANR	846437	EqualityExpression	penum -> current_font -> FontType != ft_PCL_user_defined		845549	0		!=			
ANR	846438	PtrMemberAccess	penum -> current_font -> FontType		845549	0					
ANR	846439	PtrMemberAccess	penum -> current_font		845549	0					
ANR	846440	Identifier	penum		845549	0					
ANR	846441	Identifier	current_font		845549	1					
ANR	846442	Identifier	FontType		845549	1					
ANR	846443	Identifier	ft_PCL_user_defined		845549	1					
ANR	846444	AndExpression	penum -> current_font -> FontType != ft_GL2_stick_user_defined && penum -> current_font -> FontType != ft_CID_user_defined		845549	1		&&			
ANR	846445	EqualityExpression	penum -> current_font -> FontType != ft_GL2_stick_user_defined		845549	0		!=			
ANR	846446	PtrMemberAccess	penum -> current_font -> FontType		845549	0					
ANR	846447	PtrMemberAccess	penum -> current_font		845549	0					
ANR	846448	Identifier	penum		845549	0					
ANR	846449	Identifier	current_font		845549	1					
ANR	846450	Identifier	FontType		845549	1					
ANR	846451	Identifier	ft_GL2_stick_user_defined		845549	1					
ANR	846452	EqualityExpression	penum -> current_font -> FontType != ft_CID_user_defined		845549	1		!=			
ANR	846453	PtrMemberAccess	penum -> current_font -> FontType		845549	0					
ANR	846454	PtrMemberAccess	penum -> current_font		845549	0					
ANR	846455	Identifier	penum		845549	0					
ANR	846456	Identifier	current_font		845549	1					
ANR	846457	Identifier	FontType		845549	1					
ANR	846458	Identifier	ft_CID_user_defined		845549	1					
ANR	846459	CompoundStatement		134:70:5685:5685	845549	1					
ANR	846460	ReturnStatement	return 0 ;	623:16:23517:23525	845549	0	True				
ANR	846461	PrimaryExpression	0		845549	0					
ANR	846462	ExpressionStatement	pgs -> in_cachedevice = CACHE_DEVICE_NONE	627:12:23641:23680	845549	2	True				
ANR	846463	AssignmentExpression	pgs -> in_cachedevice = CACHE_DEVICE_NONE		845549	0		=			
ANR	846464	PtrMemberAccess	pgs -> in_cachedevice		845549	0					
ANR	846465	Identifier	pgs		845549	0					
ANR	846466	Identifier	in_cachedevice		845549	1					
ANR	846467	Identifier	CACHE_DEVICE_NONE		845549	1					
ANR	846468	ExpressionStatement	clip_box . p . x = penum -> origin . x - fixed_ceiling ( - cll . x )	628:12:23737:23791	845549	3	True				
ANR	846469	AssignmentExpression	clip_box . p . x = penum -> origin . x - fixed_ceiling ( - cll . x )		845549	0		=			
ANR	846470	MemberAccess	clip_box . p . x		845549	0					
ANR	846471	MemberAccess	clip_box . p		845549	0					
ANR	846472	Identifier	clip_box		845549	0					
ANR	846473	Identifier	p		845549	1					
ANR	846474	Identifier	x		845549	1					
ANR	846475	AdditiveExpression	penum -> origin . x - fixed_ceiling ( - cll . x )		845549	1		-			
ANR	846476	MemberAccess	penum -> origin . x		845549	0					
ANR	846477	PtrMemberAccess	penum -> origin		845549	0					
ANR	846478	Identifier	penum		845549	0					
ANR	846479	Identifier	origin		845549	1					
ANR	846480	Identifier	x		845549	1					
ANR	846481	CallExpression	fixed_ceiling ( - cll . x )		845549	1					
ANR	846482	Callee	fixed_ceiling		845549	0					
ANR	846483	Identifier	fixed_ceiling		845549	0					
ANR	846484	ArgumentList	- cll . x		845549	1					
ANR	846485	Argument	- cll . x		845549	0					
ANR	846486	UnaryOperationExpression	- cll . x		845549	0					
ANR	846487	UnaryOperator	-		845549	0					
ANR	846488	MemberAccess	cll . x		845549	1					
ANR	846489	Identifier	cll		845549	0					
ANR	846490	Identifier	x		845549	1					
ANR	846491	ExpressionStatement	clip_box . p . y = penum -> origin . y - fixed_ceiling ( - cll . y )	629:12:23805:23859	845549	4	True				
ANR	846492	AssignmentExpression	clip_box . p . y = penum -> origin . y - fixed_ceiling ( - cll . y )		845549	0		=			
ANR	846493	MemberAccess	clip_box . p . y		845549	0					
ANR	846494	MemberAccess	clip_box . p		845549	0					
ANR	846495	Identifier	clip_box		845549	0					
ANR	846496	Identifier	p		845549	1					
ANR	846497	Identifier	y		845549	1					
ANR	846498	AdditiveExpression	penum -> origin . y - fixed_ceiling ( - cll . y )		845549	1		-			
ANR	846499	MemberAccess	penum -> origin . y		845549	0					
ANR	846500	PtrMemberAccess	penum -> origin		845549	0					
ANR	846501	Identifier	penum		845549	0					
ANR	846502	Identifier	origin		845549	1					
ANR	846503	Identifier	y		845549	1					
ANR	846504	CallExpression	fixed_ceiling ( - cll . y )		845549	1					
ANR	846505	Callee	fixed_ceiling		845549	0					
ANR	846506	Identifier	fixed_ceiling		845549	0					
ANR	846507	ArgumentList	- cll . y		845549	1					
ANR	846508	Argument	- cll . y		845549	0					
ANR	846509	UnaryOperationExpression	- cll . y		845549	0					
ANR	846510	UnaryOperator	-		845549	0					
ANR	846511	MemberAccess	cll . y		845549	1					
ANR	846512	Identifier	cll		845549	0					
ANR	846513	Identifier	y		845549	1					
ANR	846514	ExpressionStatement	clip_box . q . x = clip_box . p . x + int2fixed ( iwidth )	630:12:23873:23920	845549	5	True				
ANR	846515	AssignmentExpression	clip_box . q . x = clip_box . p . x + int2fixed ( iwidth )		845549	0		=			
ANR	846516	MemberAccess	clip_box . q . x		845549	0					
ANR	846517	MemberAccess	clip_box . q		845549	0					
ANR	846518	Identifier	clip_box		845549	0					
ANR	846519	Identifier	q		845549	1					
ANR	846520	Identifier	x		845549	1					
ANR	846521	AdditiveExpression	clip_box . p . x + int2fixed ( iwidth )		845549	1		+			
ANR	846522	MemberAccess	clip_box . p . x		845549	0					
ANR	846523	MemberAccess	clip_box . p		845549	0					
ANR	846524	Identifier	clip_box		845549	0					
ANR	846525	Identifier	p		845549	1					
ANR	846526	Identifier	x		845549	1					
ANR	846527	CallExpression	int2fixed ( iwidth )		845549	1					
ANR	846528	Callee	int2fixed		845549	0					
ANR	846529	Identifier	int2fixed		845549	0					
ANR	846530	ArgumentList	iwidth		845549	1					
ANR	846531	Argument	iwidth		845549	0					
ANR	846532	Identifier	iwidth		845549	0					
ANR	846533	ExpressionStatement	clip_box . q . y = clip_box . p . y + int2fixed ( iheight )	631:12:23934:23982	845549	6	True				
ANR	846534	AssignmentExpression	clip_box . q . y = clip_box . p . y + int2fixed ( iheight )		845549	0		=			
ANR	846535	MemberAccess	clip_box . q . y		845549	0					
ANR	846536	MemberAccess	clip_box . q		845549	0					
ANR	846537	Identifier	clip_box		845549	0					
ANR	846538	Identifier	q		845549	1					
ANR	846539	Identifier	y		845549	1					
ANR	846540	AdditiveExpression	clip_box . p . y + int2fixed ( iheight )		845549	1		+			
ANR	846541	MemberAccess	clip_box . p . y		845549	0					
ANR	846542	MemberAccess	clip_box . p		845549	0					
ANR	846543	Identifier	clip_box		845549	0					
ANR	846544	Identifier	p		845549	1					
ANR	846545	Identifier	y		845549	1					
ANR	846546	CallExpression	int2fixed ( iheight )		845549	1					
ANR	846547	Callee	int2fixed		845549	0					
ANR	846548	Identifier	int2fixed		845549	0					
ANR	846549	ArgumentList	iheight		845549	1					
ANR	846550	Argument	iheight		845549	0					
ANR	846551	Identifier	iheight		845549	0					
ANR	846552	ExpressionStatement	"gx_path_init_local ( & box_path , pgs -> memory )"	632:12:23996:24038	845549	7	True				
ANR	846553	CallExpression	"gx_path_init_local ( & box_path , pgs -> memory )"		845549	0					
ANR	846554	Callee	gx_path_init_local		845549	0					
ANR	846555	Identifier	gx_path_init_local		845549	0					
ANR	846556	ArgumentList	& box_path		845549	1					
ANR	846557	Argument	& box_path		845549	0					
ANR	846558	UnaryOperationExpression	& box_path		845549	0					
ANR	846559	UnaryOperator	&		845549	0					
ANR	846560	Identifier	box_path		845549	1					
ANR	846561	Argument	pgs -> memory		845549	1					
ANR	846562	PtrMemberAccess	pgs -> memory		845549	0					
ANR	846563	Identifier	pgs		845549	0					
ANR	846564	Identifier	memory		845549	1					
ANR	846565	ExpressionStatement	"code = gx_path_add_rectangle ( & box_path , clip_box . p . x , clip_box . p . y , clip_box . q . x , clip_box . q . y )"	633:12:24052:24199	845549	8	True				
ANR	846566	AssignmentExpression	"code = gx_path_add_rectangle ( & box_path , clip_box . p . x , clip_box . p . y , clip_box . q . x , clip_box . q . y )"		845549	0		=			
ANR	846567	Identifier	code		845549	0					
ANR	846568	CallExpression	"gx_path_add_rectangle ( & box_path , clip_box . p . x , clip_box . p . y , clip_box . q . x , clip_box . q . y )"		845549	1					
ANR	846569	Callee	gx_path_add_rectangle		845549	0					
ANR	846570	Identifier	gx_path_add_rectangle		845549	0					
ANR	846571	ArgumentList	& box_path		845549	1					
ANR	846572	Argument	& box_path		845549	0					
ANR	846573	UnaryOperationExpression	& box_path		845549	0					
ANR	846574	UnaryOperator	&		845549	0					
ANR	846575	Identifier	box_path		845549	1					
ANR	846576	Argument	clip_box . p . x		845549	1					
ANR	846577	MemberAccess	clip_box . p . x		845549	0					
ANR	846578	MemberAccess	clip_box . p		845549	0					
ANR	846579	Identifier	clip_box		845549	0					
ANR	846580	Identifier	p		845549	1					
ANR	846581	Identifier	x		845549	1					
ANR	846582	Argument	clip_box . p . y		845549	2					
ANR	846583	MemberAccess	clip_box . p . y		845549	0					
ANR	846584	MemberAccess	clip_box . p		845549	0					
ANR	846585	Identifier	clip_box		845549	0					
ANR	846586	Identifier	p		845549	1					
ANR	846587	Identifier	y		845549	1					
ANR	846588	Argument	clip_box . q . x		845549	3					
ANR	846589	MemberAccess	clip_box . q . x		845549	0					
ANR	846590	MemberAccess	clip_box . q		845549	0					
ANR	846591	Identifier	clip_box		845549	0					
ANR	846592	Identifier	q		845549	1					
ANR	846593	Identifier	x		845549	1					
ANR	846594	Argument	clip_box . q . y		845549	4					
ANR	846595	MemberAccess	clip_box . q . y		845549	0					
ANR	846596	MemberAccess	clip_box . q		845549	0					
ANR	846597	Identifier	clip_box		845549	0					
ANR	846598	Identifier	q		845549	1					
ANR	846599	Identifier	y		845549	1					
ANR	846600	IfStatement	if ( code < 0 )		845549	9					
ANR	846601	Condition	code < 0	635:16:24217:24224	845549	0	True				
ANR	846602	RelationalExpression	code < 0		845549	0		<			
ANR	846603	Identifier	code		845549	0					
ANR	846604	PrimaryExpression	0		845549	1					
ANR	846605	ReturnStatement	return code ;	636:16:24243:24254	845549	1	True				
ANR	846606	Identifier	code		845549	0					
ANR	846607	ExpressionStatement	"code = gx_cpath_clip ( pgs , pgs -> clip_path , & box_path , gx_rule_winding_number )"	637:12:24268:24344	845549	10	True				
ANR	846608	AssignmentExpression	"code = gx_cpath_clip ( pgs , pgs -> clip_path , & box_path , gx_rule_winding_number )"		845549	0		=			
ANR	846609	Identifier	code		845549	0					
ANR	846610	CallExpression	"gx_cpath_clip ( pgs , pgs -> clip_path , & box_path , gx_rule_winding_number )"		845549	1					
ANR	846611	Callee	gx_cpath_clip		845549	0					
ANR	846612	Identifier	gx_cpath_clip		845549	0					
ANR	846613	ArgumentList	pgs		845549	1					
ANR	846614	Argument	pgs		845549	0					
ANR	846615	Identifier	pgs		845549	0					
ANR	846616	Argument	pgs -> clip_path		845549	1					
ANR	846617	PtrMemberAccess	pgs -> clip_path		845549	0					
ANR	846618	Identifier	pgs		845549	0					
ANR	846619	Identifier	clip_path		845549	1					
ANR	846620	Argument	& box_path		845549	2					
ANR	846621	UnaryOperationExpression	& box_path		845549	0					
ANR	846622	UnaryOperator	&		845549	0					
ANR	846623	Identifier	box_path		845549	1					
ANR	846624	Argument	gx_rule_winding_number		845549	3					
ANR	846625	Identifier	gx_rule_winding_number		845549	0					
ANR	846626	IfStatement	if ( code < 0 )		845549	11					
ANR	846627	Condition	code < 0	638:16:24362:24369	845549	0	True				
ANR	846628	RelationalExpression	code < 0		845549	0		<			
ANR	846629	Identifier	code		845549	0					
ANR	846630	PrimaryExpression	0		845549	1					
ANR	846631	ReturnStatement	return code ;	639:16:24388:24399	845549	1	True				
ANR	846632	Identifier	code		845549	0					
ANR	846633	ExpressionStatement	"gx_path_free ( & box_path , ""set_cache_device"" )"	640:12:24413:24456	845549	12	True				
ANR	846634	CallExpression	"gx_path_free ( & box_path , ""set_cache_device"" )"		845549	0					
ANR	846635	Callee	gx_path_free		845549	0					
ANR	846636	Identifier	gx_path_free		845549	0					
ANR	846637	ArgumentList	& box_path		845549	1					
ANR	846638	Argument	& box_path		845549	0					
ANR	846639	UnaryOperationExpression	& box_path		845549	0					
ANR	846640	UnaryOperator	&		845549	0					
ANR	846641	Identifier	box_path		845549	1					
ANR	846642	Argument	"""set_cache_device"""		845549	1					
ANR	846643	PrimaryExpression	"""set_cache_device"""		845549	0					
ANR	846644	ExpressionStatement	pgs -> in_cachedevice = CACHE_DEVICE_NONE_AND_CLIP	641:12:24470:24518	845549	13	True				
ANR	846645	AssignmentExpression	pgs -> in_cachedevice = CACHE_DEVICE_NONE_AND_CLIP		845549	0		=			
ANR	846646	PtrMemberAccess	pgs -> in_cachedevice		845549	0					
ANR	846647	Identifier	pgs		845549	0					
ANR	846648	Identifier	in_cachedevice		845549	1					
ANR	846649	Identifier	CACHE_DEVICE_NONE_AND_CLIP		845549	1					
ANR	846650	ReturnStatement	return 0 ;	642:12:24532:24540	845549	14	True				
ANR	846651	PrimaryExpression	0		845549	0					
ANR	846652	ExpressionStatement	cc -> offset . x = fixed_ceiling ( - cll . x ) + fixed_1	646:8:24685:24731	845549	37	True				
ANR	846653	AssignmentExpression	cc -> offset . x = fixed_ceiling ( - cll . x ) + fixed_1		845549	0		=			
ANR	846654	MemberAccess	cc -> offset . x		845549	0					
ANR	846655	PtrMemberAccess	cc -> offset		845549	0					
ANR	846656	Identifier	cc		845549	0					
ANR	846657	Identifier	offset		845549	1					
ANR	846658	Identifier	x		845549	1					
ANR	846659	AdditiveExpression	fixed_ceiling ( - cll . x ) + fixed_1		845549	1		+			
ANR	846660	CallExpression	fixed_ceiling ( - cll . x )		845549	0					
ANR	846661	Callee	fixed_ceiling		845549	0					
ANR	846662	Identifier	fixed_ceiling		845549	0					
ANR	846663	ArgumentList	- cll . x		845549	1					
ANR	846664	Argument	- cll . x		845549	0					
ANR	846665	UnaryOperationExpression	- cll . x		845549	0					
ANR	846666	UnaryOperator	-		845549	0					
ANR	846667	MemberAccess	cll . x		845549	1					
ANR	846668	Identifier	cll		845549	0					
ANR	846669	Identifier	x		845549	1					
ANR	846670	Identifier	fixed_1		845549	1					
ANR	846671	ExpressionStatement	cc -> offset . y = fixed_ceiling ( - cll . y ) + fixed_1	647:8:24741:24787	845549	38	True				
ANR	846672	AssignmentExpression	cc -> offset . y = fixed_ceiling ( - cll . y ) + fixed_1		845549	0		=			
ANR	846673	MemberAccess	cc -> offset . y		845549	0					
ANR	846674	PtrMemberAccess	cc -> offset		845549	0					
ANR	846675	Identifier	cc		845549	0					
ANR	846676	Identifier	offset		845549	1					
ANR	846677	Identifier	y		845549	1					
ANR	846678	AdditiveExpression	fixed_ceiling ( - cll . y ) + fixed_1		845549	1		+			
ANR	846679	CallExpression	fixed_ceiling ( - cll . y )		845549	0					
ANR	846680	Callee	fixed_ceiling		845549	0					
ANR	846681	Identifier	fixed_ceiling		845549	0					
ANR	846682	ArgumentList	- cll . y		845549	1					
ANR	846683	Argument	- cll . y		845549	0					
ANR	846684	UnaryOperationExpression	- cll . y		845549	0					
ANR	846685	UnaryOperator	-		845549	0					
ANR	846686	MemberAccess	cll . y		845549	1					
ANR	846687	Identifier	cll		845549	0					
ANR	846688	Identifier	y		845549	1					
ANR	846689	Identifier	fixed_1		845549	1					
ANR	846690	ExpressionStatement	"if_debug4m ( 'k' , penum -> memory , ""[k]width=%u, height=%u, offset=[%g %g]\\n"" , ( uint ) iwidth , ( uint ) iheight , fixed2float ( cc -> offset . x ) , fixed2float ( cc -> offset . y ) )"	648:8:24797:25013	845549	39	True				
ANR	846691	CallExpression	"if_debug4m ( 'k' , penum -> memory , ""[k]width=%u, height=%u, offset=[%g %g]\\n"" , ( uint ) iwidth , ( uint ) iheight , fixed2float ( cc -> offset . x ) , fixed2float ( cc -> offset . y ) )"		845549	0					
ANR	846692	Callee	if_debug4m		845549	0					
ANR	846693	Identifier	if_debug4m		845549	0					
ANR	846694	ArgumentList	'k'		845549	1					
ANR	846695	Argument	'k'		845549	0					
ANR	846696	PrimaryExpression	'k'		845549	0					
ANR	846697	Argument	penum -> memory		845549	1					
ANR	846698	PtrMemberAccess	penum -> memory		845549	0					
ANR	846699	Identifier	penum		845549	0					
ANR	846700	Identifier	memory		845549	1					
ANR	846701	Argument	"""[k]width=%u, height=%u, offset=[%g %g]\\n"""		845549	2					
ANR	846702	PrimaryExpression	"""[k]width=%u, height=%u, offset=[%g %g]\\n"""		845549	0					
ANR	846703	Argument	( uint ) iwidth		845549	3					
ANR	846704	CastExpression	( uint ) iwidth		845549	0					
ANR	846705	CastTarget	uint		845549	0					
ANR	846706	Identifier	iwidth		845549	1					
ANR	846707	Argument	( uint ) iheight		845549	4					
ANR	846708	CastExpression	( uint ) iheight		845549	0					
ANR	846709	CastTarget	uint		845549	0					
ANR	846710	Identifier	iheight		845549	1					
ANR	846711	Argument	fixed2float ( cc -> offset . x )		845549	5					
ANR	846712	CallExpression	fixed2float ( cc -> offset . x )		845549	0					
ANR	846713	Callee	fixed2float		845549	0					
ANR	846714	Identifier	fixed2float		845549	0					
ANR	846715	ArgumentList	cc -> offset . x		845549	1					
ANR	846716	Argument	cc -> offset . x		845549	0					
ANR	846717	MemberAccess	cc -> offset . x		845549	0					
ANR	846718	PtrMemberAccess	cc -> offset		845549	0					
ANR	846719	Identifier	cc		845549	0					
ANR	846720	Identifier	offset		845549	1					
ANR	846721	Identifier	x		845549	1					
ANR	846722	Argument	fixed2float ( cc -> offset . y )		845549	6					
ANR	846723	CallExpression	fixed2float ( cc -> offset . y )		845549	0					
ANR	846724	Callee	fixed2float		845549	0					
ANR	846725	Identifier	fixed2float		845549	0					
ANR	846726	ArgumentList	cc -> offset . y		845549	1					
ANR	846727	Argument	cc -> offset . y		845549	0					
ANR	846728	MemberAccess	cc -> offset . y		845549	0					
ANR	846729	PtrMemberAccess	cc -> offset		845549	0					
ANR	846730	Identifier	cc		845549	0					
ANR	846731	Identifier	offset		845549	1					
ANR	846732	Identifier	y		845549	1					
ANR	846733	ExpressionStatement	pgs -> in_cachedevice = CACHE_DEVICE_NONE	652:8:25023:25062	845549	40	True				
ANR	846734	AssignmentExpression	pgs -> in_cachedevice = CACHE_DEVICE_NONE		845549	0		=			
ANR	846735	PtrMemberAccess	pgs -> in_cachedevice		845549	0					
ANR	846736	Identifier	pgs		845549	0					
ANR	846737	Identifier	in_cachedevice		845549	1					
ANR	846738	Identifier	CACHE_DEVICE_NONE		845549	1					
ANR	846739	IfStatement	if ( ( code = gs_gsave ( pgs ) ) < 0 )		845549	41					
ANR	846740	Condition	( code = gs_gsave ( pgs ) ) < 0	653:12:25107:25132	845549	0	True				
ANR	846741	RelationalExpression	( code = gs_gsave ( pgs ) ) < 0		845549	0		<			
ANR	846742	AssignmentExpression	code = gs_gsave ( pgs )		845549	0		=			
ANR	846743	Identifier	code		845549	0					
ANR	846744	CallExpression	gs_gsave ( pgs )		845549	1					
ANR	846745	Callee	gs_gsave		845549	0					
ANR	846746	Identifier	gs_gsave		845549	0					
ANR	846747	ArgumentList	pgs		845549	1					
ANR	846748	Argument	pgs		845549	0					
ANR	846749	Identifier	pgs		845549	0					
ANR	846750	PrimaryExpression	0		845549	1					
ANR	846751	CompoundStatement		167:40:7427:7427	845549	1					
ANR	846752	ExpressionStatement	"gx_free_cached_char ( dir , cc )"	654:12:25149:25177	845549	0	True				
ANR	846753	CallExpression	"gx_free_cached_char ( dir , cc )"		845549	0					
ANR	846754	Callee	gx_free_cached_char		845549	0					
ANR	846755	Identifier	gx_free_cached_char		845549	0					
ANR	846756	ArgumentList	dir		845549	1					
ANR	846757	Argument	dir		845549	0					
ANR	846758	Identifier	dir		845549	0					
ANR	846759	Argument	cc		845549	1					
ANR	846760	Identifier	cc		845549	0					
ANR	846761	ReturnStatement	return code ;	655:12:25191:25202	845549	1	True				
ANR	846762	Identifier	code		845549	0					
ANR	846763	ExpressionStatement	penum -> cc = cc	658:8:25265:25279	845549	42	True				
ANR	846764	AssignmentExpression	penum -> cc = cc		845549	0		=			
ANR	846765	PtrMemberAccess	penum -> cc		845549	0					
ANR	846766	Identifier	penum		845549	0					
ANR	846767	Identifier	cc		845549	1					
ANR	846768	Identifier	cc		845549	1					
ANR	846769	ExpressionStatement	cc -> code = glyph	659:8:25289:25305	845549	43	True				
ANR	846770	AssignmentExpression	cc -> code = glyph		845549	0		=			
ANR	846771	PtrMemberAccess	cc -> code		845549	0					
ANR	846772	Identifier	cc		845549	0					
ANR	846773	Identifier	code		845549	1					
ANR	846774	Identifier	glyph		845549	1					
ANR	846775	ExpressionStatement	cc -> wmode = gs_rootfont ( pgs ) -> WMode	660:8:25315:25350	845549	44	True				
ANR	846776	AssignmentExpression	cc -> wmode = gs_rootfont ( pgs ) -> WMode		845549	0		=			
ANR	846777	PtrMemberAccess	cc -> wmode		845549	0					
ANR	846778	Identifier	cc		845549	0					
ANR	846779	Identifier	wmode		845549	1					
ANR	846780	PtrMemberAccess	gs_rootfont ( pgs ) -> WMode		845549	1					
ANR	846781	CallExpression	gs_rootfont ( pgs )		845549	0					
ANR	846782	Callee	gs_rootfont		845549	0					
ANR	846783	Identifier	gs_rootfont		845549	0					
ANR	846784	ArgumentList	pgs		845549	1					
ANR	846785	Argument	pgs		845549	0					
ANR	846786	Identifier	pgs		845549	0					
ANR	846787	Identifier	WMode		845549	1					
ANR	846788	ExpressionStatement	cc -> wxy = penum -> wxy	661:8:25360:25380	845549	45	True				
ANR	846789	AssignmentExpression	cc -> wxy = penum -> wxy		845549	0		=			
ANR	846790	PtrMemberAccess	cc -> wxy		845549	0					
ANR	846791	Identifier	cc		845549	0					
ANR	846792	Identifier	wxy		845549	1					
ANR	846793	PtrMemberAccess	penum -> wxy		845549	1					
ANR	846794	Identifier	penum		845549	0					
ANR	846795	Identifier	wxy		845549	1					
ANR	846796	ExpressionStatement	cc -> subpix_origin = subpix_origin	662:8:25390:25423	845549	46	True				
ANR	846797	AssignmentExpression	cc -> subpix_origin = subpix_origin		845549	0		=			
ANR	846798	PtrMemberAccess	cc -> subpix_origin		845549	0					
ANR	846799	Identifier	cc		845549	0					
ANR	846800	Identifier	subpix_origin		845549	1					
ANR	846801	Identifier	subpix_origin		845549	1					
ANR	846802	IfStatement	if ( penum -> pair != 0 )		845549	47					
ANR	846803	Condition	penum -> pair != 0	663:12:25437:25452	845549	0	True				
ANR	846804	EqualityExpression	penum -> pair != 0		845549	0		!=			
ANR	846805	PtrMemberAccess	penum -> pair		845549	0					
ANR	846806	Identifier	penum		845549	0					
ANR	846807	Identifier	pair		845549	1					
ANR	846808	PrimaryExpression	0		845549	1					
ANR	846809	ExpressionStatement	"cc_set_pair ( cc , penum -> pair )"	664:12:25467:25495	845549	1	True				
ANR	846810	CallExpression	"cc_set_pair ( cc , penum -> pair )"		845549	0					
ANR	846811	Callee	cc_set_pair		845549	0					
ANR	846812	Identifier	cc_set_pair		845549	0					
ANR	846813	ArgumentList	cc		845549	1					
ANR	846814	Argument	cc		845549	0					
ANR	846815	Identifier	cc		845549	0					
ANR	846816	Argument	penum -> pair		845549	1					
ANR	846817	PtrMemberAccess	penum -> pair		845549	0					
ANR	846818	Identifier	penum		845549	0					
ANR	846819	Identifier	pair		845549	1					
ANR	846820	ElseStatement	else		845549	0					
ANR	846821	ExpressionStatement	cc -> pair = 0	666:12:25522:25534	845549	0	True				
ANR	846822	AssignmentExpression	cc -> pair = 0		845549	0		=			
ANR	846823	PtrMemberAccess	cc -> pair		845549	0					
ANR	846824	Identifier	cc		845549	0					
ANR	846825	Identifier	pair		845549	1					
ANR	846826	PrimaryExpression	0		845549	1					
ANR	846827	ExpressionStatement	"gx_set_device_only ( pgs , ( gx_device * ) penum -> dev_cache )"	668:8:25577:25632	845549	48	True				
ANR	846828	CallExpression	"gx_set_device_only ( pgs , ( gx_device * ) penum -> dev_cache )"		845549	0					
ANR	846829	Callee	gx_set_device_only		845549	0					
ANR	846830	Identifier	gx_set_device_only		845549	0					
ANR	846831	ArgumentList	pgs		845549	1					
ANR	846832	Argument	pgs		845549	0					
ANR	846833	Identifier	pgs		845549	0					
ANR	846834	Argument	( gx_device * ) penum -> dev_cache		845549	1					
ANR	846835	CastExpression	( gx_device * ) penum -> dev_cache		845549	0					
ANR	846836	CastTarget	gx_device *		845549	0					
ANR	846837	PtrMemberAccess	penum -> dev_cache		845549	1					
ANR	846838	Identifier	penum		845549	0					
ANR	846839	Identifier	dev_cache		845549	1					
ANR	846840	ExpressionStatement	pgs -> ctm_default_set = false	669:8:25642:25670	845549	49	True				
ANR	846841	AssignmentExpression	pgs -> ctm_default_set = false		845549	0		=			
ANR	846842	PtrMemberAccess	pgs -> ctm_default_set		845549	0					
ANR	846843	Identifier	pgs		845549	0					
ANR	846844	Identifier	ctm_default_set		845549	1					
ANR	846845	Identifier	false		845549	1					
ANR	846846	ExpressionStatement	"gx_translate_to_fixed ( pgs , ( cc -> offset . x + subpix_origin . x ) << log2_scale . x , ( cc -> offset . y + subpix_origin . y ) << log2_scale . y )"	672:8:25805:25991	845549	50	True				
ANR	846847	CallExpression	"gx_translate_to_fixed ( pgs , ( cc -> offset . x + subpix_origin . x ) << log2_scale . x , ( cc -> offset . y + subpix_origin . y ) << log2_scale . y )"		845549	0					
ANR	846848	Callee	gx_translate_to_fixed		845549	0					
ANR	846849	Identifier	gx_translate_to_fixed		845549	0					
ANR	846850	ArgumentList	pgs		845549	1					
ANR	846851	Argument	pgs		845549	0					
ANR	846852	Identifier	pgs		845549	0					
ANR	846853	Argument	( cc -> offset . x + subpix_origin . x ) << log2_scale . x		845549	1					
ANR	846854	ShiftExpression	( cc -> offset . x + subpix_origin . x ) << log2_scale . x		845549	0		<<			
ANR	846855	AdditiveExpression	cc -> offset . x + subpix_origin . x		845549	0		+			
ANR	846856	MemberAccess	cc -> offset . x		845549	0					
ANR	846857	PtrMemberAccess	cc -> offset		845549	0					
ANR	846858	Identifier	cc		845549	0					
ANR	846859	Identifier	offset		845549	1					
ANR	846860	Identifier	x		845549	1					
ANR	846861	MemberAccess	subpix_origin . x		845549	1					
ANR	846862	Identifier	subpix_origin		845549	0					
ANR	846863	Identifier	x		845549	1					
ANR	846864	MemberAccess	log2_scale . x		845549	1					
ANR	846865	Identifier	log2_scale		845549	0					
ANR	846866	Identifier	x		845549	1					
ANR	846867	Argument	( cc -> offset . y + subpix_origin . y ) << log2_scale . y		845549	2					
ANR	846868	ShiftExpression	( cc -> offset . y + subpix_origin . y ) << log2_scale . y		845549	0		<<			
ANR	846869	AdditiveExpression	cc -> offset . y + subpix_origin . y		845549	0		+			
ANR	846870	MemberAccess	cc -> offset . y		845549	0					
ANR	846871	PtrMemberAccess	cc -> offset		845549	0					
ANR	846872	Identifier	cc		845549	0					
ANR	846873	Identifier	offset		845549	1					
ANR	846874	Identifier	y		845549	1					
ANR	846875	MemberAccess	subpix_origin . y		845549	1					
ANR	846876	Identifier	subpix_origin		845549	0					
ANR	846877	Identifier	y		845549	1					
ANR	846878	MemberAccess	log2_scale . y		845549	1					
ANR	846879	Identifier	log2_scale		845549	0					
ANR	846880	Identifier	y		845549	1					
ANR	846881	IfStatement	if ( ( log2_scale . x | log2_scale . y ) != 0 )		845549	51					
ANR	846882	Condition	( log2_scale . x | log2_scale . y ) != 0	675:12:26005:26038	845549	0	True				
ANR	846883	EqualityExpression	( log2_scale . x | log2_scale . y ) != 0		845549	0		!=			
ANR	846884	InclusiveOrExpression	log2_scale . x | log2_scale . y		845549	0		|			
ANR	846885	MemberAccess	log2_scale . x		845549	0					
ANR	846886	Identifier	log2_scale		845549	0					
ANR	846887	Identifier	x		845549	1					
ANR	846888	MemberAccess	log2_scale . y		845549	1					
ANR	846889	Identifier	log2_scale		845549	0					
ANR	846890	Identifier	y		845549	1					
ANR	846891	PrimaryExpression	0		845549	1					
ANR	846892	ExpressionStatement	"gx_scale_char_matrix ( pgs , 1 << log2_scale . x , 1 << log2_scale . y )"	676:12:26053:26149	845549	1	True				
ANR	846893	CallExpression	"gx_scale_char_matrix ( pgs , 1 << log2_scale . x , 1 << log2_scale . y )"		845549	0					
ANR	846894	Callee	gx_scale_char_matrix		845549	0					
ANR	846895	Identifier	gx_scale_char_matrix		845549	0					
ANR	846896	ArgumentList	pgs		845549	1					
ANR	846897	Argument	pgs		845549	0					
ANR	846898	Identifier	pgs		845549	0					
ANR	846899	Argument	1 << log2_scale . x		845549	1					
ANR	846900	ShiftExpression	1 << log2_scale . x		845549	0		<<			
ANR	846901	PrimaryExpression	1		845549	0					
ANR	846902	MemberAccess	log2_scale . x		845549	1					
ANR	846903	Identifier	log2_scale		845549	0					
ANR	846904	Identifier	x		845549	1					
ANR	846905	Argument	1 << log2_scale . y		845549	2					
ANR	846906	ShiftExpression	1 << log2_scale . y		845549	0		<<			
ANR	846907	PrimaryExpression	1		845549	0					
ANR	846908	MemberAccess	log2_scale . y		845549	1					
ANR	846909	Identifier	log2_scale		845549	0					
ANR	846910	Identifier	y		845549	1					
ANR	846911	ExpressionStatement	penum -> dev_cache -> initial_matrix = ctm_only ( pgs )	679:8:26218:26266	845549	52	True				
ANR	846912	AssignmentExpression	penum -> dev_cache -> initial_matrix = ctm_only ( pgs )		845549	0		=			
ANR	846913	PtrMemberAccess	penum -> dev_cache -> initial_matrix		845549	0					
ANR	846914	PtrMemberAccess	penum -> dev_cache		845549	0					
ANR	846915	Identifier	penum		845549	0					
ANR	846916	Identifier	dev_cache		845549	1					
ANR	846917	Identifier	initial_matrix		845549	1					
ANR	846918	CallExpression	ctm_only ( pgs )		845549	1					
ANR	846919	Callee	ctm_only		845549	0					
ANR	846920	Identifier	ctm_only		845549	0					
ANR	846921	ArgumentList	pgs		845549	1					
ANR	846922	Argument	pgs		845549	0					
ANR	846923	Identifier	pgs		845549	0					
ANR	846924	ExpressionStatement	penum -> log2_scale . x = log2_scale . x	681:8:26319:26353	845549	53	True				
ANR	846925	AssignmentExpression	penum -> log2_scale . x = log2_scale . x		845549	0		=			
ANR	846926	MemberAccess	penum -> log2_scale . x		845549	0					
ANR	846927	PtrMemberAccess	penum -> log2_scale		845549	0					
ANR	846928	Identifier	penum		845549	0					
ANR	846929	Identifier	log2_scale		845549	1					
ANR	846930	Identifier	x		845549	1					
ANR	846931	MemberAccess	log2_scale . x		845549	1					
ANR	846932	Identifier	log2_scale		845549	0					
ANR	846933	Identifier	x		845549	1					
ANR	846934	ExpressionStatement	penum -> log2_scale . y = log2_scale . y	682:8:26363:26397	845549	54	True				
ANR	846935	AssignmentExpression	penum -> log2_scale . y = log2_scale . y		845549	0		=			
ANR	846936	MemberAccess	penum -> log2_scale . y		845549	0					
ANR	846937	PtrMemberAccess	penum -> log2_scale		845549	0					
ANR	846938	Identifier	penum		845549	0					
ANR	846939	Identifier	log2_scale		845549	1					
ANR	846940	Identifier	y		845549	1					
ANR	846941	MemberAccess	log2_scale . y		845549	1					
ANR	846942	Identifier	log2_scale		845549	0					
ANR	846943	Identifier	y		845549	1					
ANR	846944	ExpressionStatement	clip_box . p . x = clip_box . p . y = 0	684:8:26467:26498	845549	55	True				
ANR	846945	AssignmentExpression	clip_box . p . x = clip_box . p . y = 0		845549	0		=			
ANR	846946	MemberAccess	clip_box . p . x		845549	0					
ANR	846947	MemberAccess	clip_box . p		845549	0					
ANR	846948	Identifier	clip_box		845549	0					
ANR	846949	Identifier	p		845549	1					
ANR	846950	Identifier	x		845549	1					
ANR	846951	AssignmentExpression	clip_box . p . y = 0		845549	1		=			
ANR	846952	MemberAccess	clip_box . p . y		845549	0					
ANR	846953	MemberAccess	clip_box . p		845549	0					
ANR	846954	Identifier	clip_box		845549	0					
ANR	846955	Identifier	p		845549	1					
ANR	846956	Identifier	y		845549	1					
ANR	846957	PrimaryExpression	0		845549	1					
ANR	846958	ExpressionStatement	clip_box . q . x = int2fixed ( iwidth )	685:8:26508:26540	845549	56	True				
ANR	846959	AssignmentExpression	clip_box . q . x = int2fixed ( iwidth )		845549	0		=			
ANR	846960	MemberAccess	clip_box . q . x		845549	0					
ANR	846961	MemberAccess	clip_box . q		845549	0					
ANR	846962	Identifier	clip_box		845549	0					
ANR	846963	Identifier	q		845549	1					
ANR	846964	Identifier	x		845549	1					
ANR	846965	CallExpression	int2fixed ( iwidth )		845549	1					
ANR	846966	Callee	int2fixed		845549	0					
ANR	846967	Identifier	int2fixed		845549	0					
ANR	846968	ArgumentList	iwidth		845549	1					
ANR	846969	Argument	iwidth		845549	0					
ANR	846970	Identifier	iwidth		845549	0					
ANR	846971	ExpressionStatement	clip_box . q . y = int2fixed ( iheight )	686:8:26550:26583	845549	57	True				
ANR	846972	AssignmentExpression	clip_box . q . y = int2fixed ( iheight )		845549	0		=			
ANR	846973	MemberAccess	clip_box . q . y		845549	0					
ANR	846974	MemberAccess	clip_box . q		845549	0					
ANR	846975	Identifier	clip_box		845549	0					
ANR	846976	Identifier	q		845549	1					
ANR	846977	Identifier	y		845549	1					
ANR	846978	CallExpression	int2fixed ( iheight )		845549	1					
ANR	846979	Callee	int2fixed		845549	0					
ANR	846980	Identifier	int2fixed		845549	0					
ANR	846981	ArgumentList	iheight		845549	1					
ANR	846982	Argument	iheight		845549	0					
ANR	846983	Identifier	iheight		845549	0					
ANR	846984	IfStatement	"if ( ( code = gx_clip_to_rectangle ( pgs , & clip_box ) ) < 0 )"		845549	58					
ANR	846985	Condition	"( code = gx_clip_to_rectangle ( pgs , & clip_box ) ) < 0"	687:12:26597:26645	845549	0	True				
ANR	846986	RelationalExpression	"( code = gx_clip_to_rectangle ( pgs , & clip_box ) ) < 0"		845549	0		<			
ANR	846987	AssignmentExpression	"code = gx_clip_to_rectangle ( pgs , & clip_box )"		845549	0		=			
ANR	846988	Identifier	code		845549	0					
ANR	846989	CallExpression	"gx_clip_to_rectangle ( pgs , & clip_box )"		845549	1					
ANR	846990	Callee	gx_clip_to_rectangle		845549	0					
ANR	846991	Identifier	gx_clip_to_rectangle		845549	0					
ANR	846992	ArgumentList	pgs		845549	1					
ANR	846993	Argument	pgs		845549	0					
ANR	846994	Identifier	pgs		845549	0					
ANR	846995	Argument	& clip_box		845549	1					
ANR	846996	UnaryOperationExpression	& clip_box		845549	0					
ANR	846997	UnaryOperator	&		845549	0					
ANR	846998	Identifier	clip_box		845549	1					
ANR	846999	PrimaryExpression	0		845549	1					
ANR	847000	GotoStatement	goto fail ;	688:12:26660:26669	845549	1	True				
ANR	847001	Identifier	fail		845549	0					
ANR	847002	ExpressionStatement	code = gx_set_device_color_1 ( pgs )	689:8:26679:26712	845549	59	True				
ANR	847003	AssignmentExpression	code = gx_set_device_color_1 ( pgs )		845549	0		=			
ANR	847004	Identifier	code		845549	0					
ANR	847005	CallExpression	gx_set_device_color_1 ( pgs )		845549	1					
ANR	847006	Callee	gx_set_device_color_1		845549	0					
ANR	847007	Identifier	gx_set_device_color_1		845549	0					
ANR	847008	ArgumentList	pgs		845549	1					
ANR	847009	Argument	pgs		845549	0					
ANR	847010	Identifier	pgs		845549	0					
ANR	847011	IfStatement	if ( code < 0 )		845549	60					
ANR	847012	Condition	code < 0	690:12:26746:26753	845549	0	True				
ANR	847013	RelationalExpression	code < 0		845549	0		<			
ANR	847014	Identifier	code		845549	0					
ANR	847015	PrimaryExpression	0		845549	1					
ANR	847016	GotoStatement	goto fail ;	691:12:26768:26777	845549	1	True				
ANR	847017	Identifier	fail		845549	0					
ANR	847018	ExpressionStatement	gs_swapcolors_quick ( pgs )	692:8:26787:26811	845549	61	True				
ANR	847019	CallExpression	gs_swapcolors_quick ( pgs )		845549	0					
ANR	847020	Callee	gs_swapcolors_quick		845549	0					
ANR	847021	Identifier	gs_swapcolors_quick		845549	0					
ANR	847022	ArgumentList	pgs		845549	1					
ANR	847023	Argument	pgs		845549	0					
ANR	847024	Identifier	pgs		845549	0					
ANR	847025	ExpressionStatement	code = gx_set_device_color_1 ( pgs )	693:8:26821:26854	845549	62	True				
ANR	847026	AssignmentExpression	code = gx_set_device_color_1 ( pgs )		845549	0		=			
ANR	847027	Identifier	code		845549	0					
ANR	847028	CallExpression	gx_set_device_color_1 ( pgs )		845549	1					
ANR	847029	Callee	gx_set_device_color_1		845549	0					
ANR	847030	Identifier	gx_set_device_color_1		845549	0					
ANR	847031	ArgumentList	pgs		845549	1					
ANR	847032	Argument	pgs		845549	0					
ANR	847033	Identifier	pgs		845549	0					
ANR	847034	IfStatement	if ( code < 0 )		845549	63					
ANR	847035	Condition	code < 0	694:12:26888:26895	845549	0	True				
ANR	847036	RelationalExpression	code < 0		845549	0		<			
ANR	847037	Identifier	code		845549	0					
ANR	847038	PrimaryExpression	0		845549	1					
ANR	847039	GotoStatement	goto fail ;	695:12:26910:26919	845549	1	True				
ANR	847040	Identifier	fail		845549	0					
ANR	847041	ExpressionStatement	gs_swapcolors_quick ( pgs )	696:8:26929:26953	845549	64	True				
ANR	847042	CallExpression	gs_swapcolors_quick ( pgs )		845549	0					
ANR	847043	Callee	gs_swapcolors_quick		845549	0					
ANR	847044	Identifier	gs_swapcolors_quick		845549	0					
ANR	847045	ArgumentList	pgs		845549	1					
ANR	847046	Argument	pgs		845549	0					
ANR	847047	Identifier	pgs		845549	0					
ANR	847048	ExpressionStatement	pgs -> in_cachedevice = CACHE_DEVICE_CACHING	697:8:26963:27005	845549	65	True				
ANR	847049	AssignmentExpression	pgs -> in_cachedevice = CACHE_DEVICE_CACHING		845549	0		=			
ANR	847050	PtrMemberAccess	pgs -> in_cachedevice		845549	0					
ANR	847051	Identifier	pgs		845549	0					
ANR	847052	Identifier	in_cachedevice		845549	1					
ANR	847053	Identifier	CACHE_DEVICE_CACHING		845549	1					
ANR	847054	ExpressionStatement	penum -> width_status = sws_cache	699:4:27017:27048	845549	9	True				
ANR	847055	AssignmentExpression	penum -> width_status = sws_cache		845549	0		=			
ANR	847056	PtrMemberAccess	penum -> width_status		845549	0					
ANR	847057	Identifier	penum		845549	0					
ANR	847058	Identifier	width_status		845549	1					
ANR	847059	Identifier	sws_cache		845549	1					
ANR	847060	ReturnStatement	return 1 ;	700:4:27054:27062	845549	10	True				
ANR	847061	PrimaryExpression	1		845549	0					
ANR	847062	Label	fail :	702:0:27065:27069	845549	11	True				
ANR	847063	Identifier	fail		845549	0					
ANR	847064	ExpressionStatement	gs_grestore ( pgs )	703:4:27075:27091	845549	12	True				
ANR	847065	CallExpression	gs_grestore ( pgs )		845549	0					
ANR	847066	Callee	gs_grestore		845549	0					
ANR	847067	Identifier	gs_grestore		845549	0					
ANR	847068	ArgumentList	pgs		845549	1					
ANR	847069	Argument	pgs		845549	0					
ANR	847070	Identifier	pgs		845549	0					
ANR	847071	ReturnStatement	return code ;	704:4:27097:27108	845549	13	True				
ANR	847072	Identifier	code		845549	0					
ANR	847073	ReturnType	static int		845549	1					
ANR	847074	Identifier	set_cache_device		845549	2					
ANR	847075	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , double llx , double lly , double urx , double ury"		845549	3					
ANR	847076	Parameter	gs_show_enum * penum	485:17:17603:17622	845549	0	True				
ANR	847077	ParameterType	gs_show_enum *		845549	0					
ANR	847078	Identifier	penum		845549	1					
ANR	847079	Parameter	gs_gstate * pgs	485:39:17625:17639	845549	1	True				
ANR	847080	ParameterType	gs_gstate *		845549	0					
ANR	847081	Identifier	pgs		845549	1					
ANR	847082	Parameter	double llx	485:56:17642:17651	845549	2	True				
ANR	847083	ParameterType	double		845549	0					
ANR	847084	Identifier	llx		845549	1					
ANR	847085	Parameter	double lly	485:68:17654:17663	845549	3	True				
ANR	847086	ParameterType	double		845549	0					
ANR	847087	Identifier	lly		845549	1					
ANR	847088	Parameter	double urx	486:17:17683:17692	845549	4	True				
ANR	847089	ParameterType	double		845549	0					
ANR	847090	Identifier	urx		845549	1					
ANR	847091	Parameter	double ury	486:29:17695:17704	845549	5	True				
ANR	847092	ParameterType	double		845549	0					
ANR	847093	Identifier	ury		845549	1					
ANR	847094	CFGEntryNode	ENTRY		845549		True				
ANR	847095	CFGExitNode	EXIT		845549		True				
ANR	847096	Symbol	penum -> dev_cache -> initial_matrix		845549						
ANR	847097	Symbol	* cc		845549						
ANR	847098	Symbol	cc -> code		845549						
ANR	847099	Symbol	* pgs		845549						
ANR	847100	Symbol	& clr		845549						
ANR	847101	Symbol	CACHE_DEVICE_NONE_AND_CLIP		845549						
ANR	847102	Symbol	max_cdim		845549						
ANR	847103	Symbol	& cll		845549						
ANR	847104	Symbol	penum -> current_font -> FontType		845549						
ANR	847105	Symbol	pgs -> ctm . tx		845549						
ANR	847106	Symbol	pgs -> clip_path		845549						
ANR	847107	Symbol	gs_nulldevice		845549						
ANR	847108	Symbol	pgs -> ctm . ty		845549						
ANR	847109	Symbol	fixed_ceiling		845549						
ANR	847110	Symbol	gx_path_add_rectangle		845549						
ANR	847111	Symbol	iwidth		845549						
ANR	847112	Symbol	cc -> pair		845549						
ANR	847113	Symbol	ctemp		845549						
ANR	847114	Symbol	log2_scale . y		845549						
ANR	847115	Symbol	* gs_rootfont		845549						
ANR	847116	Symbol	* * penum		845549						
ANR	847117	Symbol	cc -> wxy		845549						
ANR	847118	Symbol	clip_box . p . y		845549						
ANR	847119	Symbol	log2_scale . x		845549						
ANR	847120	Symbol	clip_box . p . x		845549						
ANR	847121	Symbol	cll		845549						
ANR	847122	Symbol	cur . y		845549						
ANR	847123	Symbol	box_path		845549						
ANR	847124	Symbol	cc -> subpix_origin		845549						
ANR	847125	Symbol	cur . x		845549						
ANR	847126	Symbol	& alpha_bits		845549						
ANR	847127	Symbol	clr . x		845549						
ANR	847128	Symbol	penum		845549						
ANR	847129	Symbol	penum -> can_cache		845549						
ANR	847130	Symbol	clr		845549						
ANR	847131	Symbol	ft_PCL_user_defined		845549						
ANR	847132	Symbol	pgs -> font		845549						
ANR	847133	Symbol	& depth		845549						
ANR	847134	Symbol	gx_alloc_char_bits		845549						
ANR	847135	Symbol	cc -> wmode		845549						
ANR	847136	Symbol	pfont -> dir		845549						
ANR	847137	Symbol	ctm_only		845549						
ANR	847138	Symbol	clr . y		845549						
ANR	847139	Symbol	CACHE_DEVICE_NOT_CACHING		845549						
ANR	847140	Symbol	cul		845549						
ANR	847141	Symbol	& clip_box		845549						
ANR	847142	Symbol	ft_GL2_stick_user_defined		845549						
ANR	847143	Symbol	clip_box . p		845549						
ANR	847144	Symbol	clip_box . q		845549						
ANR	847145	Symbol	penum -> width_status		845549						
ANR	847146	Symbol	* penum		845549						
ANR	847147	Symbol	cur		845549						
ANR	847148	Symbol	sws_cache		845549						
ANR	847149	Symbol	penum -> origin		845549						
ANR	847150	Symbol	penum -> log2_scale . y		845549						
ANR	847151	Symbol	gs_distance_transform2fixed		845549						
ANR	847152	Symbol	* log2_scale . y		845549						
ANR	847153	Symbol	penum -> origin . y		845549						
ANR	847154	Symbol	* log2_scale . x		845549						
ANR	847155	Symbol	penum -> origin . x		845549						
ANR	847156	Symbol	penum -> dev_cache2		845549						
ANR	847157	Symbol	gs_gsave		845549						
ANR	847158	Symbol	penum -> cc		845549						
ANR	847159	Symbol	TEXT_INTERVENE		845549						
ANR	847160	Symbol	gs_rootfont		845549						
ANR	847161	Symbol	pgs		845549						
ANR	847162	Symbol	pgs -> memory		845549						
ANR	847163	Symbol	MAX_CCACHE_TEMP_BITMAP_BITS		845549						
ANR	847164	Symbol	cc		845549						
ANR	847165	Symbol	& cur		845549						
ANR	847166	Symbol	a		845549						
ANR	847167	Symbol	b		845549						
ANR	847168	Symbol	fabs		845549						
ANR	847169	Symbol	& box_path		845549						
ANR	847170	Symbol	& cul		845549						
ANR	847171	Symbol	CURRENT_GLYPH		845549						
ANR	847172	Symbol	show_cache_setup		845549						
ANR	847173	Symbol	cdim		845549						
ANR	847174	Symbol	GS_NO_GLYPH		845549						
ANR	847175	Symbol	depth		845549						
ANR	847176	Symbol	iheight		845549						
ANR	847177	Symbol	int2fixed		845549						
ANR	847178	Symbol	& subpix_origin		845549						
ANR	847179	Symbol	urx		845549						
ANR	847180	Symbol	& pgs -> ctm		845549						
ANR	847181	Symbol	* log2_scale		845549						
ANR	847182	Symbol	ury		845549						
ANR	847183	Symbol	fixed2int_var		845549						
ANR	847184	Symbol	* penum -> current_font		845549						
ANR	847185	Symbol	* penum -> dev_cache		845549						
ANR	847186	Symbol	CACHE_DEVICE_NONE		845549						
ANR	847187	Symbol	pgs -> char_tm_valid		845549						
ANR	847188	Symbol	SHOW_IS_ALL_OF		845549						
ANR	847189	Symbol	& cc		845549						
ANR	847190	Symbol	gx_rule_winding_number		845549						
ANR	847191	Symbol	dir		845549						
ANR	847192	Symbol	gx_cpath_clip		845549						
ANR	847193	Symbol	pgs -> ctm_default_set		845549						
ANR	847194	Symbol	cul . y		845549						
ANR	847195	Symbol	gs_rootfont ( pgs ) -> WMode		845549						
ANR	847196	Symbol	cul . x		845549						
ANR	847197	Symbol	cdim . y		845549						
ANR	847198	Symbol	* max_cdim		845549						
ANR	847199	Symbol	pgs -> ctm . xx		845549						
ANR	847200	Symbol	cdim . x		845549						
ANR	847201	Symbol	fixed_1		845549						
ANR	847202	Symbol	CACHE_DEVICE_CACHING		845549						
ANR	847203	Symbol	subpix_origin . x		845549						
ANR	847204	Symbol	pgs -> ctm . xy		845549						
ANR	847205	Symbol	subpix_origin . y		845549						
ANR	847206	Symbol	gs_debug_c		845549						
ANR	847207	Symbol	compute_glyph_raster_params		845549						
ANR	847208	Symbol	NULL		845549						
ANR	847209	Symbol	cc -> offset . x		845549						
ANR	847210	Symbol	cc -> offset . y		845549						
ANR	847211	Symbol	subpix_origin		845549						
ANR	847212	Symbol	pgs -> ctm		845549						
ANR	847213	Symbol	clip_box . q . y		845549						
ANR	847214	Symbol	penum -> dev_cache		845549						
ANR	847215	Symbol	clip_box . q . x		845549						
ANR	847216	Symbol	gx_set_device_color_1		845549						
ANR	847217	Symbol	ft_CID_user_defined		845549						
ANR	847218	Symbol	pgs -> ctm . yy		845549						
ANR	847219	Symbol	pgs -> ctm . yx		845549						
ANR	847220	Symbol	penum -> log2_scale . x		845549						
ANR	847221	Symbol	true		845549						
ANR	847222	Symbol	& log2_scale		845549						
ANR	847223	Symbol	code		845549						
ANR	847224	Symbol	cc -> offset		845549						
ANR	847225	Symbol	penum -> memory		845549						
ANR	847226	Symbol	gx_clip_to_rectangle		845549						
ANR	847227	Symbol	penum -> current_font		845549						
ANR	847228	Symbol	pgs -> in_cachedevice		845549						
ANR	847229	Symbol	cll . x		845549						
ANR	847230	Symbol	TEXT_DO_NONE		845549						
ANR	847231	Symbol	cll . y		845549						
ANR	847232	Symbol	fixed2float		845549						
ANR	847233	Symbol	pfont		845549						
ANR	847234	Symbol	clip_box		845549						
ANR	847235	Symbol	false		845549						
ANR	847236	Symbol	alpha_bits		845549						
ANR	847237	Symbol	penum -> wxy		845549						
ANR	847238	Symbol	log2_scale		845549						
ANR	847239	Symbol	glyph		845549						
ANR	847240	Symbol	* pfont		845549						
ANR	847241	Symbol	ft_user_defined		845549						
ANR	847242	Symbol	lly		845549						
ANR	847243	Symbol	llx		845549						
ANR	847244	Symbol	penum -> pair		845549						
ANR	847245	Symbol	penum -> log2_scale		845549						
ANR	847246	Function	gs_incachedevice	708:0:27151:27245							
ANR	847247	FunctionDef	gs_incachedevice (const gs_gstate * pgs)		847246	0					
ANR	847248	CompoundStatement		710:0:27211:27245	847246	0					
ANR	847249	ReturnStatement	return pgs -> in_cachedevice ;	711:4:27217:27243	847246	0	True				
ANR	847250	PtrMemberAccess	pgs -> in_cachedevice		847246	0					
ANR	847251	Identifier	pgs		847246	0					
ANR	847252	Identifier	in_cachedevice		847246	1					
ANR	847253	ReturnType	gs_in_cache_device_t		847246	1					
ANR	847254	Identifier	gs_incachedevice		847246	2					
ANR	847255	ParameterList	const gs_gstate * pgs		847246	3					
ANR	847256	Parameter	const gs_gstate * pgs	709:17:27189:27208	847246	0	True				
ANR	847257	ParameterType	const gs_gstate *		847246	0					
ANR	847258	Identifier	pgs		847246	1					
ANR	847259	CFGEntryNode	ENTRY		847246		True				
ANR	847260	CFGExitNode	EXIT		847246		True				
ANR	847261	Symbol	* pgs		847246						
ANR	847262	Symbol	pgs -> in_cachedevice		847246						
ANR	847263	Symbol	pgs		847246						
ANR	847264	Function	show_set_encode_char	719:0:27338:27576							
ANR	847265	FunctionDef	show_set_encode_char (gs_show_enum * penum)		847264	0					
ANR	847266	CompoundStatement		721:0:27393:27576	847264	0					
ANR	847267	ExpressionStatement	"penum -> encode_char = ( SHOW_IS ( penum , TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH ) ? gs_no_encode_char : gs_show_current_font ( penum ) -> procs . encode_char )"	722:4:27399:27574	847264	0	True				
ANR	847268	AssignmentExpression	"penum -> encode_char = ( SHOW_IS ( penum , TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH ) ? gs_no_encode_char : gs_show_current_font ( penum ) -> procs . encode_char )"		847264	0		=			
ANR	847269	PtrMemberAccess	penum -> encode_char		847264	0					
ANR	847270	Identifier	penum		847264	0					
ANR	847271	Identifier	encode_char		847264	1					
ANR	847272	ConditionalExpression	"SHOW_IS ( penum , TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH ) ? gs_no_encode_char : gs_show_current_font ( penum ) -> procs . encode_char"		847264	1					
ANR	847273	Condition	"SHOW_IS ( penum , TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH )"		847264	0					
ANR	847274	CallExpression	"SHOW_IS ( penum , TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH )"		847264	0					
ANR	847275	Callee	SHOW_IS		847264	0					
ANR	847276	Identifier	SHOW_IS		847264	0					
ANR	847277	ArgumentList	penum		847264	1					
ANR	847278	Argument	penum		847264	0					
ANR	847279	Identifier	penum		847264	0					
ANR	847280	Argument	TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH		847264	1					
ANR	847281	InclusiveOrExpression	TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH		847264	0		|			
ANR	847282	Identifier	TEXT_FROM_GLYPHS		847264	0					
ANR	847283	Identifier	TEXT_FROM_SINGLE_GLYPH		847264	1					
ANR	847284	Identifier	gs_no_encode_char		847264	1					
ANR	847285	MemberAccess	gs_show_current_font ( penum ) -> procs . encode_char		847264	2					
ANR	847286	PtrMemberAccess	gs_show_current_font ( penum ) -> procs		847264	0					
ANR	847287	CallExpression	gs_show_current_font ( penum )		847264	0					
ANR	847288	Callee	gs_show_current_font		847264	0					
ANR	847289	Identifier	gs_show_current_font		847264	0					
ANR	847290	ArgumentList	penum		847264	1					
ANR	847291	Argument	penum		847264	0					
ANR	847292	Identifier	penum		847264	0					
ANR	847293	Identifier	procs		847264	1					
ANR	847294	Identifier	encode_char		847264	1					
ANR	847295	ReturnType	static void		847264	1					
ANR	847296	Identifier	show_set_encode_char		847264	2					
ANR	847297	ParameterList	gs_show_enum * penum		847264	3					
ANR	847298	Parameter	gs_show_enum * penum	720:21:27371:27390	847264	0	True				
ANR	847299	ParameterType	gs_show_enum *		847264	0					
ANR	847300	Identifier	penum		847264	1					
ANR	847301	CFGEntryNode	ENTRY		847264		True				
ANR	847302	CFGExitNode	EXIT		847264		True				
ANR	847303	Symbol	TEXT_FROM_SINGLE_GLYPH		847264						
ANR	847304	Symbol	* penum		847264						
ANR	847305	Symbol	gs_show_current_font ( penum ) -> procs		847264						
ANR	847306	Symbol	* gs_show_current_font		847264						
ANR	847307	Symbol	penum		847264						
ANR	847308	Symbol	SHOW_IS		847264						
ANR	847309	Symbol	gs_show_current_font		847264						
ANR	847310	Symbol	gs_show_current_font ( penum ) -> procs . encode_char		847264						
ANR	847311	Symbol	TEXT_FROM_GLYPHS		847264						
ANR	847312	Symbol	gs_no_encode_char		847264						
ANR	847313	Symbol	penum -> encode_char		847264						
ANR	847314	Function	gx_show_text_resync	732:0:27717:28171							
ANR	847315	FunctionDef	"gx_show_text_resync (gs_text_enum_t * pte , const gs_text_enum_t * pfrom)"		847314	0					
ANR	847316	CompoundStatement		734:0:27798:28171	847314	0					
ANR	847317	Statement	gs_show_enum	735:4:27804:27815	847314	0	True				
ANR	847318	Statement	*	735:17:27817:27817	847314	1	True				
ANR	847319	Statement	const	735:18:27818:27822	847314	2	True				
ANR	847320	ExpressionStatement	penum = ( gs_show_enum * ) pte	735:24:27824:27851	847314	3	True				
ANR	847321	AssignmentExpression	penum = ( gs_show_enum * ) pte		847314	0		=			
ANR	847322	Identifier	penum		847314	0					
ANR	847323	CastExpression	( gs_show_enum * ) pte		847314	1					
ANR	847324	CastTarget	gs_show_enum *		847314	0					
ANR	847325	Identifier	pte		847314	1					
ANR	847326	IdentifierDeclStatement	int old_index = pte -> index ;	736:4:27857:27883	847314	4	True				
ANR	847327	IdentifierDecl	old_index = pte -> index		847314	0					
ANR	847328	IdentifierDeclType	int		847314	0					
ANR	847329	Identifier	old_index		847314	1					
ANR	847330	AssignmentExpression	old_index = pte -> index		847314	2		=			
ANR	847331	Identifier	old_index		847314	0					
ANR	847332	PtrMemberAccess	pte -> index		847314	1					
ANR	847333	Identifier	pte		847314	0					
ANR	847334	Identifier	index		847314	1					
ANR	847335	IfStatement	if ( ( pte -> text . operation ^ pfrom -> text . operation ) & ~TEXT_FROM_ANY )		847314	5					
ANR	847336	Condition	( pte -> text . operation ^ pfrom -> text . operation ) & ~TEXT_FROM_ANY	738:8:27894:27955	847314	0	True				
ANR	847337	BitAndExpression	( pte -> text . operation ^ pfrom -> text . operation ) & ~TEXT_FROM_ANY		847314	0		&			
ANR	847338	ExclusiveOrExpression	pte -> text . operation ^ pfrom -> text . operation		847314	0		^			
ANR	847339	MemberAccess	pte -> text . operation		847314	0					
ANR	847340	PtrMemberAccess	pte -> text		847314	0					
ANR	847341	Identifier	pte		847314	0					
ANR	847342	Identifier	text		847314	1					
ANR	847343	Identifier	operation		847314	1					
ANR	847344	MemberAccess	pfrom -> text . operation		847314	1					
ANR	847345	PtrMemberAccess	pfrom -> text		847314	0					
ANR	847346	Identifier	pfrom		847314	0					
ANR	847347	Identifier	text		847314	1					
ANR	847348	Identifier	operation		847314	1					
ANR	847349	Identifier	~TEXT_FROM_ANY		847314	1					
ANR	847350	ExpressionStatement	return_error ( gs_error_rangecheck )	739:8:27966:27999	847314	1	True				
ANR	847351	CallExpression	return_error ( gs_error_rangecheck )		847314	0					
ANR	847352	Callee	return_error		847314	0					
ANR	847353	Identifier	return_error		847314	0					
ANR	847354	ArgumentList	gs_error_rangecheck		847314	1					
ANR	847355	Argument	gs_error_rangecheck		847314	0					
ANR	847356	Identifier	gs_error_rangecheck		847314	0					
ANR	847357	ExpressionStatement	pte -> text = pfrom -> text	740:4:28005:28028	847314	6	True				
ANR	847358	AssignmentExpression	pte -> text = pfrom -> text		847314	0		=			
ANR	847359	PtrMemberAccess	pte -> text		847314	0					
ANR	847360	Identifier	pte		847314	0					
ANR	847361	Identifier	text		847314	1					
ANR	847362	PtrMemberAccess	pfrom -> text		847314	1					
ANR	847363	Identifier	pfrom		847314	0					
ANR	847364	Identifier	text		847314	1					
ANR	847365	IfStatement	if ( pte -> index == old_index )		847314	7					
ANR	847366	Condition	pte -> index == old_index	741:8:28038:28060	847314	0	True				
ANR	847367	EqualityExpression	pte -> index == old_index		847314	0		==			
ANR	847368	PtrMemberAccess	pte -> index		847314	0					
ANR	847369	Identifier	pte		847314	0					
ANR	847370	Identifier	index		847314	1					
ANR	847371	Identifier	old_index		847314	1					
ANR	847372	CompoundStatement		8:33:264:264	847314	1					
ANR	847373	ExpressionStatement	show_set_encode_char ( penum )	742:8:28073:28100	847314	0	True				
ANR	847374	CallExpression	show_set_encode_char ( penum )		847314	0					
ANR	847375	Callee	show_set_encode_char		847314	0					
ANR	847376	Identifier	show_set_encode_char		847314	0					
ANR	847377	ArgumentList	penum		847314	1					
ANR	847378	Argument	penum		847314	0					
ANR	847379	Identifier	penum		847314	0					
ANR	847380	ReturnStatement	return 0 ;	743:8:28110:28118	847314	1	True				
ANR	847381	PrimaryExpression	0		847314	0					
ANR	847382	ElseStatement	else		847314	0					
ANR	847383	ReturnStatement	return show_state_setup ( penum ) ;	745:8:28139:28169	847314	0	True				
ANR	847384	CallExpression	show_state_setup ( penum )		847314	0					
ANR	847385	Callee	show_state_setup		847314	0					
ANR	847386	Identifier	show_state_setup		847314	0					
ANR	847387	ArgumentList	penum		847314	1					
ANR	847388	Argument	penum		847314	0					
ANR	847389	Identifier	penum		847314	0					
ANR	847390	ReturnType	static int		847314	1					
ANR	847391	Identifier	gx_show_text_resync		847314	2					
ANR	847392	ParameterList	"gs_text_enum_t * pte , const gs_text_enum_t * pfrom"		847314	3					
ANR	847393	Parameter	gs_text_enum_t * pte	733:20:27748:27766	847314	0	True				
ANR	847394	ParameterType	gs_text_enum_t *		847314	0					
ANR	847395	Identifier	pte		847314	1					
ANR	847396	Parameter	const gs_text_enum_t * pfrom	733:41:27769:27795	847314	1	True				
ANR	847397	ParameterType	const gs_text_enum_t *		847314	0					
ANR	847398	Identifier	pfrom		847314	1					
ANR	847399	CFGEntryNode	ENTRY		847314		True				
ANR	847400	CFGExitNode	EXIT		847314		True				
ANR	847401	Symbol	pte		847314						
ANR	847402	Symbol	pfrom		847314						
ANR	847403	Symbol	gs_error_rangecheck		847314						
ANR	847404	Symbol	pte -> text		847314						
ANR	847405	Symbol	~TEXT_FROM_ANY		847314						
ANR	847406	Symbol	pte -> text . operation		847314						
ANR	847407	Symbol	pfrom -> text		847314						
ANR	847408	Symbol	penum		847314						
ANR	847409	Symbol	* pte		847314						
ANR	847410	Symbol	old_index		847314						
ANR	847411	Symbol	pte -> index		847314						
ANR	847412	Symbol	pfrom -> text . operation		847314						
ANR	847413	Symbol	show_state_setup		847314						
ANR	847414	Symbol	* pfrom		847314						
ANR	847415	Function	gx_show_text_process	749:0:28234:28386							
ANR	847416	FunctionDef	gx_show_text_process (gs_text_enum_t * pte)		847415	0					
ANR	847417	CompoundStatement		751:0:28287:28386	847415	0					
ANR	847418	Statement	gs_show_enum	752:4:28293:28304	847415	0	True				
ANR	847419	Statement	*	752:17:28306:28306	847415	1	True				
ANR	847420	Statement	const	752:18:28307:28311	847415	2	True				
ANR	847421	ExpressionStatement	penum = ( gs_show_enum * ) pte	752:24:28313:28340	847415	3	True				
ANR	847422	AssignmentExpression	penum = ( gs_show_enum * ) pte		847415	0		=			
ANR	847423	Identifier	penum		847415	0					
ANR	847424	CastExpression	( gs_show_enum * ) pte		847415	1					
ANR	847425	CastTarget	gs_show_enum *		847415	0					
ANR	847426	Identifier	pte		847415	1					
ANR	847427	ReturnStatement	return ( * penum -> continue_proc ) ( penum ) ;	754:4:28347:28384	847415	4	True				
ANR	847428	CallExpression	( * penum -> continue_proc ) ( penum )		847415	0					
ANR	847429	Callee	* penum -> continue_proc		847415	0					
ANR	847430	UnaryOperationExpression	* penum -> continue_proc		847415	0					
ANR	847431	UnaryOperator	*		847415	0					
ANR	847432	PtrMemberAccess	penum -> continue_proc		847415	1					
ANR	847433	Identifier	penum		847415	0					
ANR	847434	Identifier	continue_proc		847415	1					
ANR	847435	ArgumentList	penum		847415	1					
ANR	847436	Argument	penum		847415	0					
ANR	847437	Identifier	penum		847415	0					
ANR	847438	ReturnType	static int		847415	1					
ANR	847439	Identifier	gx_show_text_process		847415	2					
ANR	847440	ParameterList	gs_text_enum_t * pte		847415	3					
ANR	847441	Parameter	gs_text_enum_t * pte	750:21:28266:28284	847415	0	True				
ANR	847442	ParameterType	gs_text_enum_t *		847415	0					
ANR	847443	Identifier	pte		847415	1					
ANR	847444	CFGEntryNode	ENTRY		847415		True				
ANR	847445	CFGExitNode	EXIT		847415		True				
ANR	847446	Symbol	pte		847415						
ANR	847447	Symbol	* penum -> continue_proc		847415						
ANR	847448	Symbol	* penum		847415						
ANR	847449	Symbol	penum		847415						
ANR	847450	Symbol	penum -> continue_proc		847415						
ANR	847451	Symbol	* * penum		847415						
ANR	847452	DeclStmt									
ANR	847453	Decl							int	int ( gs_show_enum * penum )	show_update
ANR	847454	DeclStmt									
ANR	847455	Decl							int	int ( gs_show_enum * penum )	show_move
ANR	847456	DeclStmt									
ANR	847457	Decl							int	int ( gs_show_enum * penum )	show_proceed
ANR	847458	DeclStmt									
ANR	847459	Decl							int	int ( gs_show_enum * penum )	show_finish
ANR	847460	Function	continue_show_update	762:0:28602:28834							
ANR	847461	FunctionDef	continue_show_update (gs_show_enum * penum)		847460	0					
ANR	847462	CompoundStatement		764:0:28656:28834	847460	0					
ANR	847463	IdentifierDeclStatement	int code = show_update ( penum ) ;	765:4:28662:28691	847460	0	True				
ANR	847464	IdentifierDecl	code = show_update ( penum )		847460	0					
ANR	847465	IdentifierDeclType	int		847460	0					
ANR	847466	Identifier	code		847460	1					
ANR	847467	AssignmentExpression	code = show_update ( penum )		847460	2		=			
ANR	847468	Identifier	code		847460	0					
ANR	847469	CallExpression	show_update ( penum )		847460	1					
ANR	847470	Callee	show_update		847460	0					
ANR	847471	Identifier	show_update		847460	0					
ANR	847472	ArgumentList	penum		847460	1					
ANR	847473	Argument	penum		847460	0					
ANR	847474	Identifier	penum		847460	0					
ANR	847475	IfStatement	if ( code < 0 )		847460	1					
ANR	847476	Condition	code < 0	767:8:28702:28709	847460	0	True				
ANR	847477	RelationalExpression	code < 0		847460	0		<			
ANR	847478	Identifier	code		847460	0					
ANR	847479	PrimaryExpression	0		847460	1					
ANR	847480	ReturnStatement	return code ;	768:8:28720:28731	847460	1	True				
ANR	847481	Identifier	code		847460	0					
ANR	847482	ExpressionStatement	code = show_move ( penum )	769:4:28737:28760	847460	2	True				
ANR	847483	AssignmentExpression	code = show_move ( penum )		847460	0		=			
ANR	847484	Identifier	code		847460	0					
ANR	847485	CallExpression	show_move ( penum )		847460	1					
ANR	847486	Callee	show_move		847460	0					
ANR	847487	Identifier	show_move		847460	0					
ANR	847488	ArgumentList	penum		847460	1					
ANR	847489	Argument	penum		847460	0					
ANR	847490	Identifier	penum		847460	0					
ANR	847491	IfStatement	if ( code != 0 )		847460	3					
ANR	847492	Condition	code != 0	770:8:28770:28778	847460	0	True				
ANR	847493	EqualityExpression	code != 0		847460	0		!=			
ANR	847494	Identifier	code		847460	0					
ANR	847495	PrimaryExpression	0		847460	1					
ANR	847496	ReturnStatement	return code ;	771:8:28789:28800	847460	1	True				
ANR	847497	Identifier	code		847460	0					
ANR	847498	ReturnStatement	return show_proceed ( penum ) ;	772:4:28806:28832	847460	4	True				
ANR	847499	CallExpression	show_proceed ( penum )		847460	0					
ANR	847500	Callee	show_proceed		847460	0					
ANR	847501	Identifier	show_proceed		847460	0					
ANR	847502	ArgumentList	penum		847460	1					
ANR	847503	Argument	penum		847460	0					
ANR	847504	Identifier	penum		847460	0					
ANR	847505	ReturnType	static int		847460	1					
ANR	847506	Identifier	continue_show_update		847460	2					
ANR	847507	ParameterList	gs_show_enum * penum		847460	3					
ANR	847508	Parameter	gs_show_enum * penum	763:21:28634:28653	847460	0	True				
ANR	847509	ParameterType	gs_show_enum *		847460	0					
ANR	847510	Identifier	penum		847460	1					
ANR	847511	CFGEntryNode	ENTRY		847460		True				
ANR	847512	CFGExitNode	EXIT		847460		True				
ANR	847513	Symbol	show_update		847460						
ANR	847514	Symbol	code		847460						
ANR	847515	Symbol	show_proceed		847460						
ANR	847516	Symbol	penum		847460						
ANR	847517	Symbol	show_move		847460						
ANR	847518	Function	continue_show	774:0:28836:28917							
ANR	847519	FunctionDef	continue_show (gs_show_enum * penum)		847518	0					
ANR	847520	CompoundStatement		776:0:28883:28917	847518	0					
ANR	847521	ReturnStatement	return show_proceed ( penum ) ;	777:4:28889:28915	847518	0	True				
ANR	847522	CallExpression	show_proceed ( penum )		847518	0					
ANR	847523	Callee	show_proceed		847518	0					
ANR	847524	Identifier	show_proceed		847518	0					
ANR	847525	ArgumentList	penum		847518	1					
ANR	847526	Argument	penum		847518	0					
ANR	847527	Identifier	penum		847518	0					
ANR	847528	ReturnType	static int		847518	1					
ANR	847529	Identifier	continue_show		847518	2					
ANR	847530	ParameterList	gs_show_enum * penum		847518	3					
ANR	847531	Parameter	gs_show_enum * penum	775:14:28861:28880	847518	0	True				
ANR	847532	ParameterType	gs_show_enum *		847518	0					
ANR	847533	Identifier	penum		847518	1					
ANR	847534	CFGEntryNode	ENTRY		847518		True				
ANR	847535	CFGExitNode	EXIT		847518		True				
ANR	847536	Symbol	show_proceed		847518						
ANR	847537	Symbol	penum		847518						
ANR	847538	Function	continue_kshow	781:0:29039:29326							
ANR	847539	FunctionDef	continue_kshow (gs_show_enum * penum)		847538	0					
ANR	847540	CompoundStatement		783:0:29087:29326	847538	0					
ANR	847541	IdentifierDeclStatement	int code ;	783:3:29091:29099	847538	0	True				
ANR	847542	IdentifierDecl	code		847538	0					
ANR	847543	IdentifierDeclType	int		847538	0					
ANR	847544	Identifier	code		847538	1					
ANR	847545	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	784:4:29105:29132	847538	1	True				
ANR	847546	IdentifierDecl	* pgs = penum -> pgs		847538	0					
ANR	847547	IdentifierDeclType	gs_gstate *		847538	0					
ANR	847548	Identifier	pgs		847538	1					
ANR	847549	AssignmentExpression	* pgs = penum -> pgs		847538	2		=			
ANR	847550	Identifier	pgs		847538	0					
ANR	847551	PtrMemberAccess	penum -> pgs		847538	1					
ANR	847552	Identifier	penum		847538	0					
ANR	847553	Identifier	pgs		847538	1					
ANR	847554	IfStatement	if ( pgs -> font != penum -> orig_font )		847538	2					
ANR	847555	Condition	pgs -> font != penum -> orig_font	786:8:29143:29171	847538	0	True				
ANR	847556	EqualityExpression	pgs -> font != penum -> orig_font		847538	0		!=			
ANR	847557	PtrMemberAccess	pgs -> font		847538	0					
ANR	847558	Identifier	pgs		847538	0					
ANR	847559	Identifier	font		847538	1					
ANR	847560	PtrMemberAccess	penum -> orig_font		847538	1					
ANR	847561	Identifier	penum		847538	0					
ANR	847562	Identifier	orig_font		847538	1					
ANR	847563	ExpressionStatement	"gs_setfont ( pgs , penum -> orig_font )"	787:8:29182:29215	847538	1	True				
ANR	847564	CallExpression	"gs_setfont ( pgs , penum -> orig_font )"		847538	0					
ANR	847565	Callee	gs_setfont		847538	0					
ANR	847566	Identifier	gs_setfont		847538	0					
ANR	847567	ArgumentList	pgs		847538	1					
ANR	847568	Argument	pgs		847538	0					
ANR	847569	Identifier	pgs		847538	0					
ANR	847570	Argument	penum -> orig_font		847538	1					
ANR	847571	PtrMemberAccess	penum -> orig_font		847538	0					
ANR	847572	Identifier	penum		847538	0					
ANR	847573	Identifier	orig_font		847538	1					
ANR	847574	ExpressionStatement	code = show_state_setup ( penum )	789:4:29222:29252	847538	3	True				
ANR	847575	AssignmentExpression	code = show_state_setup ( penum )		847538	0		=			
ANR	847576	Identifier	code		847538	0					
ANR	847577	CallExpression	show_state_setup ( penum )		847538	1					
ANR	847578	Callee	show_state_setup		847538	0					
ANR	847579	Identifier	show_state_setup		847538	0					
ANR	847580	ArgumentList	penum		847538	1					
ANR	847581	Argument	penum		847538	0					
ANR	847582	Identifier	penum		847538	0					
ANR	847583	IfStatement	if ( code < 0 )		847538	4					
ANR	847584	Condition	code < 0	791:8:29263:29270	847538	0	True				
ANR	847585	RelationalExpression	code < 0		847538	0		<			
ANR	847586	Identifier	code		847538	0					
ANR	847587	PrimaryExpression	0		847538	1					
ANR	847588	ReturnStatement	return code ;	792:8:29281:29292	847538	1	True				
ANR	847589	Identifier	code		847538	0					
ANR	847590	ReturnStatement	return show_proceed ( penum ) ;	793:4:29298:29324	847538	5	True				
ANR	847591	CallExpression	show_proceed ( penum )		847538	0					
ANR	847592	Callee	show_proceed		847538	0					
ANR	847593	Identifier	show_proceed		847538	0					
ANR	847594	ArgumentList	penum		847538	1					
ANR	847595	Argument	penum		847538	0					
ANR	847596	Identifier	penum		847538	0					
ANR	847597	ReturnType	static int		847538	1					
ANR	847598	Identifier	continue_kshow		847538	2					
ANR	847599	ParameterList	gs_show_enum * penum		847538	3					
ANR	847600	Parameter	gs_show_enum * penum	782:15:29065:29084	847538	0	True				
ANR	847601	ParameterType	gs_show_enum *		847538	0					
ANR	847602	Identifier	penum		847538	1					
ANR	847603	CFGEntryNode	ENTRY		847538		True				
ANR	847604	CFGExitNode	EXIT		847538		True				
ANR	847605	Symbol	* penum		847538						
ANR	847606	Symbol	code		847538						
ANR	847607	Symbol	show_state_setup		847538						
ANR	847608	Symbol	* pgs		847538						
ANR	847609	Symbol	show_proceed		847538						
ANR	847610	Symbol	penum		847538						
ANR	847611	Symbol	penum -> orig_font		847538						
ANR	847612	Symbol	pgs -> font		847538						
ANR	847613	Symbol	pgs		847538						
ANR	847614	Symbol	penum -> pgs		847538						
ANR	847615	Function	show_update	797:0:29351:32020							
ANR	847616	FunctionDef	show_update (gs_show_enum * penum)		847615	0					
ANR	847617	CompoundStatement		799:0:29396:32020	847615	0					
ANR	847618	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	800:4:29402:29429	847615	0	True				
ANR	847619	IdentifierDecl	* pgs = penum -> pgs		847615	0					
ANR	847620	IdentifierDeclType	gs_gstate *		847615	0					
ANR	847621	Identifier	pgs		847615	1					
ANR	847622	AssignmentExpression	* pgs = penum -> pgs		847615	2		=			
ANR	847623	Identifier	pgs		847615	0					
ANR	847624	PtrMemberAccess	penum -> pgs		847615	1					
ANR	847625	Identifier	penum		847615	0					
ANR	847626	Identifier	pgs		847615	1					
ANR	847627	IdentifierDeclStatement	cached_char * cc = penum -> cc ;	801:4:29435:29462	847615	1	True				
ANR	847628	IdentifierDecl	* cc = penum -> cc		847615	0					
ANR	847629	IdentifierDeclType	cached_char *		847615	0					
ANR	847630	Identifier	cc		847615	1					
ANR	847631	AssignmentExpression	* cc = penum -> cc		847615	2		=			
ANR	847632	Identifier	cc		847615	0					
ANR	847633	PtrMemberAccess	penum -> cc		847615	1					
ANR	847634	Identifier	penum		847615	0					
ANR	847635	Identifier	cc		847615	1					
ANR	847636	IdentifierDeclStatement	int code ;	802:4:29468:29476	847615	2	True				
ANR	847637	IdentifierDecl	code		847615	0					
ANR	847638	IdentifierDeclType	int		847615	0					
ANR	847639	Identifier	code		847615	1					
ANR	847640	SwitchStatement	switch ( penum -> width_status )		847615	3					
ANR	847641	Condition	penum -> width_status	805:12:29536:29554	847615	0	True				
ANR	847642	PtrMemberAccess	penum -> width_status		847615	0					
ANR	847643	Identifier	penum		847615	0					
ANR	847644	Identifier	width_status		847615	1					
ANR	847645	CompoundStatement		7:33:160:160	847615	1					
ANR	847646	Label	case sws_none :	806:8:29567:29580	847615	0	True				
ANR	847647	Identifier	sws_none		847615	0					
ANR	847648	Label	case sws_retry :	807:8:29590:29604	847615	1	True				
ANR	847649	Identifier	sws_retry		847615	0					
ANR	847650	ExpressionStatement	penum -> wxy . x = penum -> wxy . y = 0	810:12:29760:29791	847615	2	True				
ANR	847651	AssignmentExpression	penum -> wxy . x = penum -> wxy . y = 0		847615	0		=			
ANR	847652	MemberAccess	penum -> wxy . x		847615	0					
ANR	847653	PtrMemberAccess	penum -> wxy		847615	0					
ANR	847654	Identifier	penum		847615	0					
ANR	847655	Identifier	wxy		847615	1					
ANR	847656	Identifier	x		847615	1					
ANR	847657	AssignmentExpression	penum -> wxy . y = 0		847615	1		=			
ANR	847658	MemberAccess	penum -> wxy . y		847615	0					
ANR	847659	PtrMemberAccess	penum -> wxy		847615	0					
ANR	847660	Identifier	penum		847615	0					
ANR	847661	Identifier	wxy		847615	1					
ANR	847662	Identifier	y		847615	1					
ANR	847663	PrimaryExpression	0		847615	1					
ANR	847664	ExpressionStatement	penum -> wxy_float . x = penum -> wxy_float . y = 0	811:12:29805:29848	847615	3	True				
ANR	847665	AssignmentExpression	penum -> wxy_float . x = penum -> wxy_float . y = 0		847615	0		=			
ANR	847666	MemberAccess	penum -> wxy_float . x		847615	0					
ANR	847667	PtrMemberAccess	penum -> wxy_float		847615	0					
ANR	847668	Identifier	penum		847615	0					
ANR	847669	Identifier	wxy_float		847615	1					
ANR	847670	Identifier	x		847615	1					
ANR	847671	AssignmentExpression	penum -> wxy_float . y = 0		847615	1		=			
ANR	847672	MemberAccess	penum -> wxy_float . y		847615	0					
ANR	847673	PtrMemberAccess	penum -> wxy_float		847615	0					
ANR	847674	Identifier	penum		847615	0					
ANR	847675	Identifier	wxy_float		847615	1					
ANR	847676	Identifier	y		847615	1					
ANR	847677	PrimaryExpression	0		847615	1					
ANR	847678	ExpressionStatement	penum -> use_wxy_float = false	812:12:29862:29890	847615	4	True				
ANR	847679	AssignmentExpression	penum -> use_wxy_float = false		847615	0		=			
ANR	847680	PtrMemberAccess	penum -> use_wxy_float		847615	0					
ANR	847681	Identifier	penum		847615	0					
ANR	847682	Identifier	use_wxy_float		847615	1					
ANR	847683	Identifier	false		847615	1					
ANR	847684	BreakStatement	break ;	813:12:29904:29909	847615	5	True				
ANR	847685	Label	case sws_cache :	814:8:29919:29933	847615	6	True				
ANR	847686	Identifier	sws_cache		847615	0					
ANR	847687	SwitchStatement	switch ( pgs -> level - penum -> level )		847615	7					
ANR	847688	Condition	pgs -> level - penum -> level	819:20:30219:30243	847615	0	True				
ANR	847689	AdditiveExpression	pgs -> level - penum -> level		847615	0		-			
ANR	847690	PtrMemberAccess	pgs -> level		847615	0					
ANR	847691	Identifier	pgs		847615	0					
ANR	847692	Identifier	level		847615	1					
ANR	847693	PtrMemberAccess	penum -> level		847615	1					
ANR	847694	Identifier	penum		847615	0					
ANR	847695	Identifier	level		847615	1					
ANR	847696	CompoundStatement		21:47:849:849	847615	1					
ANR	847697	Label	default :	820:16:30264:30271	847615	0	True				
ANR	847698	Identifier	default		847615	0					
ANR	847699	ExpressionStatement	"gx_free_cached_char ( penum -> orig_font -> dir , penum -> cc )"	821:20:30293:30346	847615	1	True				
ANR	847700	CallExpression	"gx_free_cached_char ( penum -> orig_font -> dir , penum -> cc )"		847615	0					
ANR	847701	Callee	gx_free_cached_char		847615	0					
ANR	847702	Identifier	gx_free_cached_char		847615	0					
ANR	847703	ArgumentList	penum -> orig_font -> dir		847615	1					
ANR	847704	Argument	penum -> orig_font -> dir		847615	0					
ANR	847705	PtrMemberAccess	penum -> orig_font -> dir		847615	0					
ANR	847706	PtrMemberAccess	penum -> orig_font		847615	0					
ANR	847707	Identifier	penum		847615	0					
ANR	847708	Identifier	orig_font		847615	1					
ANR	847709	Identifier	dir		847615	1					
ANR	847710	Argument	penum -> cc		847615	1					
ANR	847711	PtrMemberAccess	penum -> cc		847615	0					
ANR	847712	Identifier	penum		847615	0					
ANR	847713	Identifier	cc		847615	1					
ANR	847714	ExpressionStatement	return_error ( gs_error_invalidfont )	822:20:30368:30402	847615	2	True				
ANR	847715	CallExpression	return_error ( gs_error_invalidfont )		847615	0					
ANR	847716	Callee	return_error		847615	0					
ANR	847717	Identifier	return_error		847615	0					
ANR	847718	ArgumentList	gs_error_invalidfont		847615	1					
ANR	847719	Argument	gs_error_invalidfont		847615	0					
ANR	847720	Identifier	gs_error_invalidfont		847615	0					
ANR	847721	Label	case 2 :	823:16:30440:30446	847615	3	True				
ANR	847722	ExpressionStatement	code = gs_grestore ( pgs )	824:20:30468:30491	847615	4	True				
ANR	847723	AssignmentExpression	code = gs_grestore ( pgs )		847615	0		=			
ANR	847724	Identifier	code		847615	0					
ANR	847725	CallExpression	gs_grestore ( pgs )		847615	1					
ANR	847726	Callee	gs_grestore		847615	0					
ANR	847727	Identifier	gs_grestore		847615	0					
ANR	847728	ArgumentList	pgs		847615	1					
ANR	847729	Argument	pgs		847615	0					
ANR	847730	Identifier	pgs		847615	0					
ANR	847731	IfStatement	if ( code < 0 )		847615	5					
ANR	847732	Condition	code < 0	825:24:30517:30524	847615	0	True				
ANR	847733	RelationalExpression	code < 0		847615	0		<			
ANR	847734	Identifier	code		847615	0					
ANR	847735	PrimaryExpression	0		847615	1					
ANR	847736	ReturnStatement	return code ;	826:24:30551:30562	847615	1	True				
ANR	847737	Identifier	code		847615	0					
ANR	847738	Label	case 1 :	827:16:30580:30586	847615	6	True				
ANR	847739	ExpressionStatement		828:20:30608:30608	847615	7	True				
ANR	847740	CompoundStatement		32:16:1243:1263	847615	8					
ANR	847741	IdentifierDeclStatement	cached_fm_pair * pair ;	830:16:30640:30660	847615	0	True				
ANR	847742	IdentifierDecl	* pair		847615	0					
ANR	847743	IdentifierDeclType	cached_fm_pair *		847615	0					
ANR	847744	Identifier	pair		847615	1					
ANR	847745	ExpressionStatement	"code = gx_lookup_fm_pair ( pgs -> font , & char_tm_only ( pgs ) , & penum -> log2_scale , penum -> charpath_flag != cpm_show , & pair )"	832:16:30679:30823	847615	1	True				
ANR	847746	AssignmentExpression	"code = gx_lookup_fm_pair ( pgs -> font , & char_tm_only ( pgs ) , & penum -> log2_scale , penum -> charpath_flag != cpm_show , & pair )"		847615	0		=			
ANR	847747	Identifier	code		847615	0					
ANR	847748	CallExpression	"gx_lookup_fm_pair ( pgs -> font , & char_tm_only ( pgs ) , & penum -> log2_scale , penum -> charpath_flag != cpm_show , & pair )"		847615	1					
ANR	847749	Callee	gx_lookup_fm_pair		847615	0					
ANR	847750	Identifier	gx_lookup_fm_pair		847615	0					
ANR	847751	ArgumentList	pgs -> font		847615	1					
ANR	847752	Argument	pgs -> font		847615	0					
ANR	847753	PtrMemberAccess	pgs -> font		847615	0					
ANR	847754	Identifier	pgs		847615	0					
ANR	847755	Identifier	font		847615	1					
ANR	847756	Argument	& char_tm_only ( pgs )		847615	1					
ANR	847757	UnaryOperationExpression	& char_tm_only ( pgs )		847615	0					
ANR	847758	UnaryOperator	&		847615	0					
ANR	847759	CallExpression	char_tm_only ( pgs )		847615	1					
ANR	847760	Callee	char_tm_only		847615	0					
ANR	847761	Identifier	char_tm_only		847615	0					
ANR	847762	ArgumentList	pgs		847615	1					
ANR	847763	Argument	pgs		847615	0					
ANR	847764	Identifier	pgs		847615	0					
ANR	847765	Argument	& penum -> log2_scale		847615	2					
ANR	847766	UnaryOperationExpression	& penum -> log2_scale		847615	0					
ANR	847767	UnaryOperator	&		847615	0					
ANR	847768	PtrMemberAccess	penum -> log2_scale		847615	1					
ANR	847769	Identifier	penum		847615	0					
ANR	847770	Identifier	log2_scale		847615	1					
ANR	847771	Argument	penum -> charpath_flag != cpm_show		847615	3					
ANR	847772	EqualityExpression	penum -> charpath_flag != cpm_show		847615	0		!=			
ANR	847773	PtrMemberAccess	penum -> charpath_flag		847615	0					
ANR	847774	Identifier	penum		847615	0					
ANR	847775	Identifier	charpath_flag		847615	1					
ANR	847776	Identifier	cpm_show		847615	1					
ANR	847777	Argument	& pair		847615	4					
ANR	847778	UnaryOperationExpression	& pair		847615	0					
ANR	847779	UnaryOperator	&		847615	0					
ANR	847780	Identifier	pair		847615	1					
ANR	847781	IfStatement	if ( code < 0 )		847615	2					
ANR	847782	Condition	code < 0	834:20:30845:30852	847615	0	True				
ANR	847783	RelationalExpression	code < 0		847615	0		<			
ANR	847784	Identifier	code		847615	0					
ANR	847785	PrimaryExpression	0		847615	1					
ANR	847786	ReturnStatement	return code ;	835:20:30875:30886	847615	1	True				
ANR	847787	Identifier	code		847615	0					
ANR	847788	ExpressionStatement	"code = gx_add_cached_char ( pgs -> font -> dir , penum -> dev_cache , cc , pair , & penum -> log2_scale )"	836:16:30904:31024	847615	3	True				
ANR	847789	AssignmentExpression	"code = gx_add_cached_char ( pgs -> font -> dir , penum -> dev_cache , cc , pair , & penum -> log2_scale )"		847615	0		=			
ANR	847790	Identifier	code		847615	0					
ANR	847791	CallExpression	"gx_add_cached_char ( pgs -> font -> dir , penum -> dev_cache , cc , pair , & penum -> log2_scale )"		847615	1					
ANR	847792	Callee	gx_add_cached_char		847615	0					
ANR	847793	Identifier	gx_add_cached_char		847615	0					
ANR	847794	ArgumentList	pgs -> font -> dir		847615	1					
ANR	847795	Argument	pgs -> font -> dir		847615	0					
ANR	847796	PtrMemberAccess	pgs -> font -> dir		847615	0					
ANR	847797	PtrMemberAccess	pgs -> font		847615	0					
ANR	847798	Identifier	pgs		847615	0					
ANR	847799	Identifier	font		847615	1					
ANR	847800	Identifier	dir		847615	1					
ANR	847801	Argument	penum -> dev_cache		847615	1					
ANR	847802	PtrMemberAccess	penum -> dev_cache		847615	0					
ANR	847803	Identifier	penum		847615	0					
ANR	847804	Identifier	dev_cache		847615	1					
ANR	847805	Argument	cc		847615	2					
ANR	847806	Identifier	cc		847615	0					
ANR	847807	Argument	pair		847615	3					
ANR	847808	Identifier	pair		847615	0					
ANR	847809	Argument	& penum -> log2_scale		847615	4					
ANR	847810	UnaryOperationExpression	& penum -> log2_scale		847615	0					
ANR	847811	UnaryOperator	&		847615	0					
ANR	847812	PtrMemberAccess	penum -> log2_scale		847615	1					
ANR	847813	Identifier	penum		847615	0					
ANR	847814	Identifier	log2_scale		847615	1					
ANR	847815	IfStatement	if ( code < 0 )		847615	4					
ANR	847816	Condition	code < 0	838:20:31046:31053	847615	0	True				
ANR	847817	RelationalExpression	code < 0		847615	0		<			
ANR	847818	Identifier	code		847615	0					
ANR	847819	PrimaryExpression	0		847615	1					
ANR	847820	ReturnStatement	return code ;	839:20:31076:31087	847615	1	True				
ANR	847821	Identifier	code		847615	0					
ANR	847822	IfStatement	if ( ! SHOW_USES_OUTLINE ( penum ) || penum -> charpath_flag != cpm_show )		847615	9					
ANR	847823	Condition	! SHOW_USES_OUTLINE ( penum ) || penum -> charpath_flag != cpm_show	841:16:31119:31195	847615	0	True				
ANR	847824	OrExpression	! SHOW_USES_OUTLINE ( penum ) || penum -> charpath_flag != cpm_show		847615	0		||			
ANR	847825	UnaryOperationExpression	! SHOW_USES_OUTLINE ( penum )		847615	0					
ANR	847826	UnaryOperator	!		847615	0					
ANR	847827	CallExpression	SHOW_USES_OUTLINE ( penum )		847615	1					
ANR	847828	Callee	SHOW_USES_OUTLINE		847615	0					
ANR	847829	Identifier	SHOW_USES_OUTLINE		847615	0					
ANR	847830	ArgumentList	penum		847615	1					
ANR	847831	Argument	penum		847615	0					
ANR	847832	Identifier	penum		847615	0					
ANR	847833	EqualityExpression	penum -> charpath_flag != cpm_show		847615	1		!=			
ANR	847834	PtrMemberAccess	penum -> charpath_flag		847615	0					
ANR	847835	Identifier	penum		847615	0					
ANR	847836	Identifier	charpath_flag		847615	1					
ANR	847837	Identifier	cpm_show		847615	1					
ANR	847838	BreakStatement	break ;	844:16:31231:31236	847615	1	True				
ANR	847839	Label	case sws_cache_width_only :	846:8:31278:31303	847615	10	True				
ANR	847840	Identifier	sws_cache_width_only		847615	0					
ANR	847841	ExpressionStatement	code = gs_grestore ( pgs )	848:12:31376:31399	847615	11	True				
ANR	847842	AssignmentExpression	code = gs_grestore ( pgs )		847615	0		=			
ANR	847843	Identifier	code		847615	0					
ANR	847844	CallExpression	gs_grestore ( pgs )		847615	1					
ANR	847845	Callee	gs_grestore		847615	0					
ANR	847846	Identifier	gs_grestore		847615	0					
ANR	847847	ArgumentList	pgs		847615	1					
ANR	847848	Argument	pgs		847615	0					
ANR	847849	Identifier	pgs		847615	0					
ANR	847850	IfStatement	if ( code < 0 )		847615	12					
ANR	847851	Condition	code < 0	849:16:31417:31424	847615	0	True				
ANR	847852	RelationalExpression	code < 0		847615	0		<			
ANR	847853	Identifier	code		847615	0					
ANR	847854	PrimaryExpression	0		847615	1					
ANR	847855	ReturnStatement	return code ;	850:16:31443:31454	847615	1	True				
ANR	847856	Identifier	code		847615	0					
ANR	847857	ExpressionStatement	code = gs_gstate_color_load ( pgs )	851:12:31468:31500	847615	13	True				
ANR	847858	AssignmentExpression	code = gs_gstate_color_load ( pgs )		847615	0		=			
ANR	847859	Identifier	code		847615	0					
ANR	847860	CallExpression	gs_gstate_color_load ( pgs )		847615	1					
ANR	847861	Callee	gs_gstate_color_load		847615	0					
ANR	847862	Identifier	gs_gstate_color_load		847615	0					
ANR	847863	ArgumentList	pgs		847615	1					
ANR	847864	Argument	pgs		847615	0					
ANR	847865	Identifier	pgs		847615	0					
ANR	847866	IfStatement	if ( code < 0 )		847615	14					
ANR	847867	Condition	code < 0	852:16:31518:31525	847615	0	True				
ANR	847868	RelationalExpression	code < 0		847615	0		<			
ANR	847869	Identifier	code		847615	0					
ANR	847870	PrimaryExpression	0		847615	1					
ANR	847871	ReturnStatement	return code ;	853:16:31544:31555	847615	1	True				
ANR	847872	Identifier	code		847615	0					
ANR	847873	ReturnStatement	"return gx_image_cached_char ( penum , cc ) ;"	854:12:31569:31607	847615	15	True				
ANR	847874	CallExpression	"gx_image_cached_char ( penum , cc )"		847615	0					
ANR	847875	Callee	gx_image_cached_char		847615	0					
ANR	847876	Identifier	gx_image_cached_char		847615	0					
ANR	847877	ArgumentList	penum		847615	1					
ANR	847878	Argument	penum		847615	0					
ANR	847879	Identifier	penum		847615	0					
ANR	847880	Argument	cc		847615	1					
ANR	847881	Identifier	cc		847615	0					
ANR	847882	Label	case sws_no_cache :	855:8:31617:31634	847615	16	True				
ANR	847883	Identifier	sws_no_cache		847615	0					
ANR	847884	ExpressionStatement		856:12:31648:31648	847615	17	True				
ANR	847885	IfStatement	if ( penum -> charpath_flag != cpm_show )		847615	4					
ANR	847886	Condition	penum -> charpath_flag != cpm_show	858:8:31664:31695	847615	0	True				
ANR	847887	EqualityExpression	penum -> charpath_flag != cpm_show		847615	0		!=			
ANR	847888	PtrMemberAccess	penum -> charpath_flag		847615	0					
ANR	847889	Identifier	penum		847615	0					
ANR	847890	Identifier	charpath_flag		847615	1					
ANR	847891	Identifier	cpm_show		847615	1					
ANR	847892	CompoundStatement		60:42:2301:2301	847615	1					
ANR	847893	ExpressionStatement	"code = gx_path_add_point ( pgs -> show_gstate -> path , penum -> origin . x , penum -> origin . y )"	861:8:31821:31936	847615	0	True				
ANR	847894	AssignmentExpression	"code = gx_path_add_point ( pgs -> show_gstate -> path , penum -> origin . x , penum -> origin . y )"		847615	0		=			
ANR	847895	Identifier	code		847615	0					
ANR	847896	CallExpression	"gx_path_add_point ( pgs -> show_gstate -> path , penum -> origin . x , penum -> origin . y )"		847615	1					
ANR	847897	Callee	gx_path_add_point		847615	0					
ANR	847898	Identifier	gx_path_add_point		847615	0					
ANR	847899	ArgumentList	pgs -> show_gstate -> path		847615	1					
ANR	847900	Argument	pgs -> show_gstate -> path		847615	0					
ANR	847901	PtrMemberAccess	pgs -> show_gstate -> path		847615	0					
ANR	847902	PtrMemberAccess	pgs -> show_gstate		847615	0					
ANR	847903	Identifier	pgs		847615	0					
ANR	847904	Identifier	show_gstate		847615	1					
ANR	847905	Identifier	path		847615	1					
ANR	847906	Argument	penum -> origin . x		847615	1					
ANR	847907	MemberAccess	penum -> origin . x		847615	0					
ANR	847908	PtrMemberAccess	penum -> origin		847615	0					
ANR	847909	Identifier	penum		847615	0					
ANR	847910	Identifier	origin		847615	1					
ANR	847911	Identifier	x		847615	1					
ANR	847912	Argument	penum -> origin . y		847615	2					
ANR	847913	MemberAccess	penum -> origin . y		847615	0					
ANR	847914	PtrMemberAccess	penum -> origin		847615	0					
ANR	847915	Identifier	penum		847615	0					
ANR	847916	Identifier	origin		847615	1					
ANR	847917	Identifier	y		847615	1					
ANR	847918	IfStatement	if ( code < 0 )		847615	1					
ANR	847919	Condition	code < 0	863:12:31950:31957	847615	0	True				
ANR	847920	RelationalExpression	code < 0		847615	0		<			
ANR	847921	Identifier	code		847615	0					
ANR	847922	PrimaryExpression	0		847615	1					
ANR	847923	ReturnStatement	return code ;	864:12:31972:31983	847615	1	True				
ANR	847924	Identifier	code		847615	0					
ANR	847925	ReturnStatement	return gs_grestore ( pgs ) ;	866:4:31995:32018	847615	5	True				
ANR	847926	CallExpression	gs_grestore ( pgs )		847615	0					
ANR	847927	Callee	gs_grestore		847615	0					
ANR	847928	Identifier	gs_grestore		847615	0					
ANR	847929	ArgumentList	pgs		847615	1					
ANR	847930	Argument	pgs		847615	0					
ANR	847931	Identifier	pgs		847615	0					
ANR	847932	ReturnType	static int		847615	1					
ANR	847933	Identifier	show_update		847615	2					
ANR	847934	ParameterList	gs_show_enum * penum		847615	3					
ANR	847935	Parameter	gs_show_enum * penum	798:12:29374:29393	847615	0	True				
ANR	847936	ParameterType	gs_show_enum *		847615	0					
ANR	847937	Identifier	penum		847615	1					
ANR	847938	CFGEntryNode	ENTRY		847615		True				
ANR	847939	CFGExitNode	EXIT		847615		True				
ANR	847940	Symbol	penum -> width_status		847615						
ANR	847941	Symbol	* penum		847615						
ANR	847942	Symbol	pgs -> level		847615						
ANR	847943	Symbol	penum -> origin		847615						
ANR	847944	Symbol	code		847615						
ANR	847945	Symbol	cpm_show		847615						
ANR	847946	Symbol	& char_tm_only		847615						
ANR	847947	Symbol	gx_lookup_fm_pair		847615						
ANR	847948	Symbol	* pgs		847615						
ANR	847949	Symbol	gs_gstate_color_load		847615						
ANR	847950	Symbol	gx_add_cached_char		847615						
ANR	847951	Symbol	* pgs -> font		847615						
ANR	847952	Symbol	& penum -> log2_scale		847615						
ANR	847953	Symbol	penum -> origin . y		847615						
ANR	847954	Symbol	penum -> pgs		847615						
ANR	847955	Symbol	penum -> origin . x		847615						
ANR	847956	Symbol	penum -> wxy . y		847615						
ANR	847957	Symbol	gs_grestore		847615						
ANR	847958	Symbol	penum -> wxy . x		847615						
ANR	847959	Symbol	penum -> cc		847615						
ANR	847960	Symbol	pgs -> show_gstate		847615						
ANR	847961	Symbol	penum -> orig_font		847615						
ANR	847962	Symbol	penum -> charpath_flag		847615						
ANR	847963	Symbol	pgs -> font -> dir		847615						
ANR	847964	Symbol	* pgs -> show_gstate		847615						
ANR	847965	Symbol	& pair		847615						
ANR	847966	Symbol	gs_error_invalidfont		847615						
ANR	847967	Symbol	pgs		847615						
ANR	847968	Symbol	gx_image_cached_char		847615						
ANR	847969	Symbol	penum -> use_wxy_float		847615						
ANR	847970	Symbol	penum -> level		847615						
ANR	847971	Symbol	* * penum		847615						
ANR	847972	Symbol	cc		847615						
ANR	847973	Symbol	SHOW_USES_OUTLINE		847615						
ANR	847974	Symbol	penum		847615						
ANR	847975	Symbol	penum -> wxy_float . x		847615						
ANR	847976	Symbol	false		847615						
ANR	847977	Symbol	penum -> wxy		847615						
ANR	847978	Symbol	* penum -> orig_font		847615						
ANR	847979	Symbol	pgs -> font		847615						
ANR	847980	Symbol	pair		847615						
ANR	847981	Symbol	penum -> dev_cache		847615						
ANR	847982	Symbol	gx_path_add_point		847615						
ANR	847983	Symbol	penum -> wxy_float . y		847615						
ANR	847984	Symbol	* * pgs		847615						
ANR	847985	Symbol	penum -> wxy_float		847615						
ANR	847986	Symbol	pgs -> show_gstate -> path		847615						
ANR	847987	Symbol	penum -> orig_font -> dir		847615						
ANR	847988	Function	show_fast_move	870:0:32052:32319							
ANR	847989	FunctionDef	"show_fast_move (gs_gstate * pgs , gs_fixed_point * pwxy)"		847988	0					
ANR	847990	CompoundStatement		872:0:32125:32319	847988	0					
ANR	847991	ReturnStatement	"return gs_moveto_aux ( pgs , pgs -> path , pgs -> current_point . x + fixed2float ( pwxy -> x ) , pgs -> current_point . y + fixed2float ( pwxy -> y ) ) ;"	873:4:32131:32317	847988	0	True				
ANR	847992	CallExpression	"gs_moveto_aux ( pgs , pgs -> path , pgs -> current_point . x + fixed2float ( pwxy -> x ) , pgs -> current_point . y + fixed2float ( pwxy -> y ) )"		847988	0					
ANR	847993	Callee	gs_moveto_aux		847988	0					
ANR	847994	Identifier	gs_moveto_aux		847988	0					
ANR	847995	ArgumentList	pgs		847988	1					
ANR	847996	Argument	pgs		847988	0					
ANR	847997	Identifier	pgs		847988	0					
ANR	847998	Argument	pgs -> path		847988	1					
ANR	847999	PtrMemberAccess	pgs -> path		847988	0					
ANR	848000	Identifier	pgs		847988	0					
ANR	848001	Identifier	path		847988	1					
ANR	848002	Argument	pgs -> current_point . x + fixed2float ( pwxy -> x )		847988	2					
ANR	848003	AdditiveExpression	pgs -> current_point . x + fixed2float ( pwxy -> x )		847988	0		+			
ANR	848004	MemberAccess	pgs -> current_point . x		847988	0					
ANR	848005	PtrMemberAccess	pgs -> current_point		847988	0					
ANR	848006	Identifier	pgs		847988	0					
ANR	848007	Identifier	current_point		847988	1					
ANR	848008	Identifier	x		847988	1					
ANR	848009	CallExpression	fixed2float ( pwxy -> x )		847988	1					
ANR	848010	Callee	fixed2float		847988	0					
ANR	848011	Identifier	fixed2float		847988	0					
ANR	848012	ArgumentList	pwxy -> x		847988	1					
ANR	848013	Argument	pwxy -> x		847988	0					
ANR	848014	PtrMemberAccess	pwxy -> x		847988	0					
ANR	848015	Identifier	pwxy		847988	0					
ANR	848016	Identifier	x		847988	1					
ANR	848017	Argument	pgs -> current_point . y + fixed2float ( pwxy -> y )		847988	3					
ANR	848018	AdditiveExpression	pgs -> current_point . y + fixed2float ( pwxy -> y )		847988	0		+			
ANR	848019	MemberAccess	pgs -> current_point . y		847988	0					
ANR	848020	PtrMemberAccess	pgs -> current_point		847988	0					
ANR	848021	Identifier	pgs		847988	0					
ANR	848022	Identifier	current_point		847988	1					
ANR	848023	Identifier	y		847988	1					
ANR	848024	CallExpression	fixed2float ( pwxy -> y )		847988	1					
ANR	848025	Callee	fixed2float		847988	0					
ANR	848026	Identifier	fixed2float		847988	0					
ANR	848027	ArgumentList	pwxy -> y		847988	1					
ANR	848028	Argument	pwxy -> y		847988	0					
ANR	848029	PtrMemberAccess	pwxy -> y		847988	0					
ANR	848030	Identifier	pwxy		847988	0					
ANR	848031	Identifier	y		847988	1					
ANR	848032	ReturnType	static inline int		847988	1					
ANR	848033	Identifier	show_fast_move		847988	2					
ANR	848034	ParameterList	"gs_gstate * pgs , gs_fixed_point * pwxy"		847988	3					
ANR	848035	Parameter	gs_gstate * pgs	871:15:32085:32099	847988	0	True				
ANR	848036	ParameterType	gs_gstate *		847988	0					
ANR	848037	Identifier	pgs		847988	1					
ANR	848038	Parameter	gs_fixed_point * pwxy	871:32:32102:32122	847988	1	True				
ANR	848039	ParameterType	gs_fixed_point *		847988	0					
ANR	848040	Identifier	pwxy		847988	1					
ANR	848041	CFGEntryNode	ENTRY		847988		True				
ANR	848042	CFGExitNode	EXIT		847988		True				
ANR	848043	Symbol	fixed2float		847988						
ANR	848044	Symbol	* pgs		847988						
ANR	848045	Symbol	pgs -> current_point		847988						
ANR	848046	Symbol	pwxy -> y		847988						
ANR	848047	Symbol	pgs -> current_point . x		847988						
ANR	848048	Symbol	pgs -> current_point . y		847988						
ANR	848049	Symbol	pgs -> path		847988						
ANR	848050	Symbol	gs_moveto_aux		847988						
ANR	848051	Symbol	pwxy -> x		847988						
ANR	848052	Symbol	pwxy		847988						
ANR	848053	Symbol	pgs		847988						
ANR	848054	Symbol	* pwxy		847988						
ANR	848055	Function	gx_current_char	879:0:32360:33128							
ANR	848056	FunctionDef	gx_current_char (const gs_text_enum_t * pte)		848055	0					
ANR	848057	CompoundStatement		880:0:32408:33128	848055	0					
ANR	848058	IdentifierDeclStatement	const gs_show_enum * penum = ( const gs_show_enum * ) pte ;	881:4:32414:32467	848055	0	True				
ANR	848059	IdentifierDecl	* penum = ( const gs_show_enum * ) pte		848055	0					
ANR	848060	IdentifierDeclType	const gs_show_enum *		848055	0					
ANR	848061	Identifier	penum		848055	1					
ANR	848062	AssignmentExpression	* penum = ( const gs_show_enum * ) pte		848055	2		=			
ANR	848063	Identifier	penum		848055	0					
ANR	848064	CastExpression	( const gs_show_enum * ) pte		848055	1					
ANR	848065	CastTarget	const gs_show_enum *		848055	0					
ANR	848066	Identifier	pte		848055	1					
ANR	848067	IdentifierDeclStatement	gs_char chr = CURRENT_CHAR ( penum ) & 0xff ;	882:4:32473:32513	848055	1	True				
ANR	848068	IdentifierDecl	chr = CURRENT_CHAR ( penum ) & 0xff		848055	0					
ANR	848069	IdentifierDeclType	gs_char		848055	0					
ANR	848070	Identifier	chr		848055	1					
ANR	848071	AssignmentExpression	chr = CURRENT_CHAR ( penum ) & 0xff		848055	2		=			
ANR	848072	Identifier	chr		848055	0					
ANR	848073	BitAndExpression	CURRENT_CHAR ( penum ) & 0xff		848055	1		&			
ANR	848074	CallExpression	CURRENT_CHAR ( penum )		848055	0					
ANR	848075	Callee	CURRENT_CHAR		848055	0					
ANR	848076	Identifier	CURRENT_CHAR		848055	0					
ANR	848077	ArgumentList	penum		848055	1					
ANR	848078	Argument	penum		848055	0					
ANR	848079	Identifier	penum		848055	0					
ANR	848080	PrimaryExpression	0xff		848055	1					
ANR	848081	IdentifierDeclStatement	int fdepth = penum -> fstack . depth ;	883:4:32519:32551	848055	2	True				
ANR	848082	IdentifierDecl	fdepth = penum -> fstack . depth		848055	0					
ANR	848083	IdentifierDeclType	int		848055	0					
ANR	848084	Identifier	fdepth		848055	1					
ANR	848085	AssignmentExpression	fdepth = penum -> fstack . depth		848055	2		=			
ANR	848086	Identifier	fdepth		848055	0					
ANR	848087	MemberAccess	penum -> fstack . depth		848055	1					
ANR	848088	PtrMemberAccess	penum -> fstack		848055	0					
ANR	848089	Identifier	penum		848055	0					
ANR	848090	Identifier	fstack		848055	1					
ANR	848091	Identifier	depth		848055	1					
ANR	848092	IfStatement	if ( fdepth > 0 )		848055	3					
ANR	848093	Condition	fdepth > 0	885:8:32562:32571	848055	0	True				
ANR	848094	RelationalExpression	fdepth > 0		848055	0		>			
ANR	848095	Identifier	fdepth		848055	0					
ANR	848096	PrimaryExpression	0		848055	1					
ANR	848097	CompoundStatement		8:8:221:270	848055	1					
ANR	848098	IdentifierDeclStatement	uint fidx = penum -> fstack . items [ fdepth - 1 ] . index ;	887:8:32630:32679	848055	0	True				
ANR	848099	IdentifierDecl	fidx = penum -> fstack . items [ fdepth - 1 ] . index		848055	0					
ANR	848100	IdentifierDeclType	uint		848055	0					
ANR	848101	Identifier	fidx		848055	1					
ANR	848102	AssignmentExpression	fidx = penum -> fstack . items [ fdepth - 1 ] . index		848055	2		=			
ANR	848103	Identifier	fidx		848055	0					
ANR	848104	MemberAccess	penum -> fstack . items [ fdepth - 1 ] . index		848055	1					
ANR	848105	ArrayIndexing	penum -> fstack . items [ fdepth - 1 ]		848055	0					
ANR	848106	MemberAccess	penum -> fstack . items		848055	0					
ANR	848107	PtrMemberAccess	penum -> fstack		848055	0					
ANR	848108	Identifier	penum		848055	0					
ANR	848109	Identifier	fstack		848055	1					
ANR	848110	Identifier	items		848055	1					
ANR	848111	AdditiveExpression	fdepth - 1		848055	1		-			
ANR	848112	Identifier	fdepth		848055	0					
ANR	848113	PrimaryExpression	1		848055	1					
ANR	848114	Identifier	index		848055	1					
ANR	848115	SwitchStatement	switch ( ( ( gs_font_type0 * ) ( penum -> fstack . items [ fdepth - 1 ] . font ) ) -> data . FMapType )		848055	1					
ANR	848116	Condition	( ( gs_font_type0 * ) ( penum -> fstack . items [ fdepth - 1 ] . font ) ) -> data . FMapType	889:16:32698:32770	848055	0	True				
ANR	848117	MemberAccess	( ( gs_font_type0 * ) ( penum -> fstack . items [ fdepth - 1 ] . font ) ) -> data . FMapType		848055	0					
ANR	848118	PtrMemberAccess	( ( gs_font_type0 * ) ( penum -> fstack . items [ fdepth - 1 ] . font ) ) -> data		848055	0					
ANR	848119	CastExpression	( gs_font_type0 * ) ( penum -> fstack . items [ fdepth - 1 ] . font )		848055	0					
ANR	848120	CastTarget	gs_font_type0 *		848055	0					
ANR	848121	MemberAccess	penum -> fstack . items [ fdepth - 1 ] . font		848055	1					
ANR	848122	ArrayIndexing	penum -> fstack . items [ fdepth - 1 ]		848055	0					
ANR	848123	MemberAccess	penum -> fstack . items		848055	0					
ANR	848124	PtrMemberAccess	penum -> fstack		848055	0					
ANR	848125	Identifier	penum		848055	0					
ANR	848126	Identifier	fstack		848055	1					
ANR	848127	Identifier	items		848055	1					
ANR	848128	AdditiveExpression	fdepth - 1		848055	1		-			
ANR	848129	Identifier	fdepth		848055	0					
ANR	848130	PrimaryExpression	1		848055	1					
ANR	848131	Identifier	font		848055	1					
ANR	848132	Identifier	data		848055	1					
ANR	848133	Identifier	FMapType		848055	1					
ANR	848134	CompoundStatement		10:91:364:364	848055	1					
ANR	848135	Label	case fmap_1_7 :	890:8:32783:32796	848055	0	True				
ANR	848136	Identifier	fmap_1_7		848055	0					
ANR	848137	Label	case fmap_9_7 :	891:8:32806:32819	848055	1	True				
ANR	848138	Identifier	fmap_9_7		848055	0					
ANR	848139	ExpressionStatement	chr += fidx << 7	892:12:32833:32849	848055	2	True				
ANR	848140	AssignmentExpression	chr += fidx << 7		848055	0		+=			
ANR	848141	Identifier	chr		848055	0					
ANR	848142	ShiftExpression	fidx << 7		848055	1		<<			
ANR	848143	Identifier	fidx		848055	0					
ANR	848144	PrimaryExpression	7		848055	1					
ANR	848145	BreakStatement	break ;	893:12:32863:32868	848055	3	True				
ANR	848146	Label	case fmap_CMap :	894:8:32878:32892	848055	4	True				
ANR	848147	Identifier	fmap_CMap		848055	0					
ANR	848148	ExpressionStatement	chr = CURRENT_CHAR ( penum )	895:12:32906:32931	848055	5	True				
ANR	848149	AssignmentExpression	chr = CURRENT_CHAR ( penum )		848055	0		=			
ANR	848150	Identifier	chr		848055	0					
ANR	848151	CallExpression	CURRENT_CHAR ( penum )		848055	1					
ANR	848152	Callee	CURRENT_CHAR		848055	0					
ANR	848153	Identifier	CURRENT_CHAR		848055	0					
ANR	848154	ArgumentList	penum		848055	1					
ANR	848155	Argument	penum		848055	0					
ANR	848156	Identifier	penum		848055	0					
ANR	848157	IfStatement	if ( ! penum -> cmap_code )		848055	6					
ANR	848158	Condition	! penum -> cmap_code	896:16:32975:32991	848055	0	True				
ANR	848159	UnaryOperationExpression	! penum -> cmap_code		848055	0					
ANR	848160	UnaryOperator	!		848055	0					
ANR	848161	PtrMemberAccess	penum -> cmap_code		848055	1					
ANR	848162	Identifier	penum		848055	0					
ANR	848163	Identifier	cmap_code		848055	1					
ANR	848164	BreakStatement	break ;	897:16:33010:33015	848055	1	True				
ANR	848165	Label	default :	899:8:33057:33064	848055	7	True				
ANR	848166	Identifier	default		848055	0					
ANR	848167	ExpressionStatement	chr += fidx << 8	900:12:33078:33094	848055	8	True				
ANR	848168	AssignmentExpression	chr += fidx << 8		848055	0		+=			
ANR	848169	Identifier	chr		848055	0					
ANR	848170	ShiftExpression	fidx << 8		848055	1		<<			
ANR	848171	Identifier	fidx		848055	0					
ANR	848172	PrimaryExpression	8		848055	1					
ANR	848173	ReturnStatement	return chr ;	903:4:33116:33126	848055	4	True				
ANR	848174	Identifier	chr		848055	0					
ANR	848175	ReturnType	int		848055	1					
ANR	848176	Identifier	gx_current_char		848055	2					
ANR	848177	ParameterList	const gs_text_enum_t * pte		848055	3					
ANR	848178	Parameter	const gs_text_enum_t * pte	879:20:32380:32405	848055	0	True				
ANR	848179	ParameterType	const gs_text_enum_t *		848055	0					
ANR	848180	Identifier	pte		848055	1					
ANR	848181	CFGEntryNode	ENTRY		848055		True				
ANR	848182	CFGExitNode	EXIT		848055		True				
ANR	848183	Symbol	pte		848055						
ANR	848184	Symbol	* penum		848055						
ANR	848185	Symbol	* penum -> fstack . items [ fdepth - 1 ] . font		848055						
ANR	848186	Symbol	fdepth		848055						
ANR	848187	Symbol	* * * penum		848055						
ANR	848188	Symbol	* fdepth		848055						
ANR	848189	Symbol	* * penum -> fstack . items		848055						
ANR	848190	Symbol	penum		848055						
ANR	848191	Symbol	( ( gs_font_type0 * ) ( penum -> fstack . items [ fdepth - 1 ] . font ) ) -> data		848055						
ANR	848192	Symbol	chr		848055						
ANR	848193	Symbol	penum -> fstack . depth		848055						
ANR	848194	Symbol	penum -> cmap_code		848055						
ANR	848195	Symbol	* penum -> fstack . items		848055						
ANR	848196	Symbol	* * penum -> fstack		848055						
ANR	848197	Symbol	( ( gs_font_type0 * ) ( penum -> fstack . items [ fdepth - 1 ] . font ) ) -> data . FMapType		848055						
ANR	848198	Symbol	penum -> fstack . items [ fdepth - 1 ] . index		848055						
ANR	848199	Symbol	penum -> fstack . items [ fdepth - 1 ] . font		848055						
ANR	848200	Symbol	fidx		848055						
ANR	848201	Symbol	penum -> fstack		848055						
ANR	848202	Symbol	* penum -> fstack		848055						
ANR	848203	Symbol	penum -> fstack . items		848055						
ANR	848204	Symbol	CURRENT_CHAR		848055						
ANR	848205	Symbol	* * fdepth		848055						
ANR	848206	Symbol	* * penum		848055						
ANR	848207	Function	show_move	906:0:33131:35512							
ANR	848208	FunctionDef	show_move (gs_show_enum * penum)		848207	0					
ANR	848209	CompoundStatement		908:0:33174:35512	848207	0					
ANR	848210	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	909:4:33180:33207	848207	0	True				
ANR	848211	IdentifierDecl	* pgs = penum -> pgs		848207	0					
ANR	848212	IdentifierDeclType	gs_gstate *		848207	0					
ANR	848213	Identifier	pgs		848207	1					
ANR	848214	AssignmentExpression	* pgs = penum -> pgs		848207	2		=			
ANR	848215	Identifier	pgs		848207	0					
ANR	848216	PtrMemberAccess	penum -> pgs		848207	1					
ANR	848217	Identifier	penum		848207	0					
ANR	848218	Identifier	pgs		848207	1					
ANR	848219	IdentifierDeclStatement	int code ;	910:4:33213:33221	848207	1	True				
ANR	848220	IdentifierDecl	code		848207	0					
ANR	848221	IdentifierDeclType	int		848207	0					
ANR	848222	Identifier	code		848207	1					
ANR	848223	IfStatement	"if ( SHOW_IS ( penum , TEXT_REPLACE_WIDTHS ) )"		848207	2					
ANR	848224	Condition	"SHOW_IS ( penum , TEXT_REPLACE_WIDTHS )"	912:8:33232:33266	848207	0	True				
ANR	848225	CallExpression	"SHOW_IS ( penum , TEXT_REPLACE_WIDTHS )"		848207	0					
ANR	848226	Callee	SHOW_IS		848207	0					
ANR	848227	Identifier	SHOW_IS		848207	0					
ANR	848228	ArgumentList	penum		848207	1					
ANR	848229	Argument	penum		848207	0					
ANR	848230	Identifier	penum		848207	0					
ANR	848231	Argument	TEXT_REPLACE_WIDTHS		848207	1					
ANR	848232	Identifier	TEXT_REPLACE_WIDTHS		848207	0					
ANR	848233	CompoundStatement		6:8:104:116	848207	1					
ANR	848234	IdentifierDeclStatement	gs_point dpt ;	913:8:33279:33291	848207	0	True				
ANR	848235	IdentifierDecl	dpt		848207	0					
ANR	848236	IdentifierDeclType	gs_point		848207	0					
ANR	848237	Identifier	dpt		848207	1					
ANR	848238	ExpressionStatement	"code = gs_text_replaced_width ( & penum -> text , penum -> xy_index - 1 , & dpt )"	915:8:33302:33372	848207	1	True				
ANR	848239	AssignmentExpression	"code = gs_text_replaced_width ( & penum -> text , penum -> xy_index - 1 , & dpt )"		848207	0		=			
ANR	848240	Identifier	code		848207	0					
ANR	848241	CallExpression	"gs_text_replaced_width ( & penum -> text , penum -> xy_index - 1 , & dpt )"		848207	1					
ANR	848242	Callee	gs_text_replaced_width		848207	0					
ANR	848243	Identifier	gs_text_replaced_width		848207	0					
ANR	848244	ArgumentList	& penum -> text		848207	1					
ANR	848245	Argument	& penum -> text		848207	0					
ANR	848246	UnaryOperationExpression	& penum -> text		848207	0					
ANR	848247	UnaryOperator	&		848207	0					
ANR	848248	PtrMemberAccess	penum -> text		848207	1					
ANR	848249	Identifier	penum		848207	0					
ANR	848250	Identifier	text		848207	1					
ANR	848251	Argument	penum -> xy_index - 1		848207	1					
ANR	848252	AdditiveExpression	penum -> xy_index - 1		848207	0		-			
ANR	848253	PtrMemberAccess	penum -> xy_index		848207	0					
ANR	848254	Identifier	penum		848207	0					
ANR	848255	Identifier	xy_index		848207	1					
ANR	848256	PrimaryExpression	1		848207	1					
ANR	848257	Argument	& dpt		848207	2					
ANR	848258	UnaryOperationExpression	& dpt		848207	0					
ANR	848259	UnaryOperator	&		848207	0					
ANR	848260	Identifier	dpt		848207	1					
ANR	848261	IfStatement	if ( code < 0 )		848207	2					
ANR	848262	Condition	code < 0	916:12:33386:33393	848207	0	True				
ANR	848263	RelationalExpression	code < 0		848207	0		<			
ANR	848264	Identifier	code		848207	0					
ANR	848265	PrimaryExpression	0		848207	1					
ANR	848266	ReturnStatement	return code ;	917:12:33408:33419	848207	1	True				
ANR	848267	Identifier	code		848207	0					
ANR	848268	ExpressionStatement	"code = gs_distance_transform2fixed ( & pgs -> ctm , dpt . x , dpt . y , & penum -> wxy )"	918:8:33429:33501	848207	3	True				
ANR	848269	AssignmentExpression	"code = gs_distance_transform2fixed ( & pgs -> ctm , dpt . x , dpt . y , & penum -> wxy )"		848207	0		=			
ANR	848270	Identifier	code		848207	0					
ANR	848271	CallExpression	"gs_distance_transform2fixed ( & pgs -> ctm , dpt . x , dpt . y , & penum -> wxy )"		848207	1					
ANR	848272	Callee	gs_distance_transform2fixed		848207	0					
ANR	848273	Identifier	gs_distance_transform2fixed		848207	0					
ANR	848274	ArgumentList	& pgs -> ctm		848207	1					
ANR	848275	Argument	& pgs -> ctm		848207	0					
ANR	848276	UnaryOperationExpression	& pgs -> ctm		848207	0					
ANR	848277	UnaryOperator	&		848207	0					
ANR	848278	PtrMemberAccess	pgs -> ctm		848207	1					
ANR	848279	Identifier	pgs		848207	0					
ANR	848280	Identifier	ctm		848207	1					
ANR	848281	Argument	dpt . x		848207	1					
ANR	848282	MemberAccess	dpt . x		848207	0					
ANR	848283	Identifier	dpt		848207	0					
ANR	848284	Identifier	x		848207	1					
ANR	848285	Argument	dpt . y		848207	2					
ANR	848286	MemberAccess	dpt . y		848207	0					
ANR	848287	Identifier	dpt		848207	0					
ANR	848288	Identifier	y		848207	1					
ANR	848289	Argument	& penum -> wxy		848207	3					
ANR	848290	UnaryOperationExpression	& penum -> wxy		848207	0					
ANR	848291	UnaryOperator	&		848207	0					
ANR	848292	PtrMemberAccess	penum -> wxy		848207	1					
ANR	848293	Identifier	penum		848207	0					
ANR	848294	Identifier	wxy		848207	1					
ANR	848295	IfStatement	if ( code < 0 )		848207	4					
ANR	848296	Condition	code < 0	919:12:33515:33522	848207	0	True				
ANR	848297	RelationalExpression	code < 0		848207	0		<			
ANR	848298	Identifier	code		848207	0					
ANR	848299	PrimaryExpression	0		848207	1					
ANR	848300	ReturnStatement	return code ;	920:12:33537:33548	848207	1	True				
ANR	848301	Identifier	code		848207	0					
ANR	848302	ElseStatement	else		848207	0					
ANR	848303	CompoundStatement		15:8:396:417	848207	0					
ANR	848304	IdentifierDeclStatement	"double dx = 0 , dy = 0 ;"	922:8:33571:33592	848207	0	True				
ANR	848305	IdentifierDecl	dx = 0		848207	0					
ANR	848306	IdentifierDeclType	double		848207	0					
ANR	848307	Identifier	dx		848207	1					
ANR	848308	AssignmentExpression	dx = 0		848207	2		=			
ANR	848309	Identifier	dx		848207	0					
ANR	848310	PrimaryExpression	0		848207	1					
ANR	848311	IdentifierDecl	dy = 0		848207	1					
ANR	848312	IdentifierDeclType	double		848207	0					
ANR	848313	Identifier	dy		848207	1					
ANR	848314	AssignmentExpression	dy = 0		848207	2		=			
ANR	848315	Identifier	dy		848207	0					
ANR	848316	PrimaryExpression	0		848207	1					
ANR	848317	IfStatement	if ( SHOW_IS_ADD_TO_SPACE ( penum ) && ( ! penum -> single_byte_space || penum -> bytes_decoded == 1 ) )		848207	1					
ANR	848318	Condition	SHOW_IS_ADD_TO_SPACE ( penum ) && ( ! penum -> single_byte_space || penum -> bytes_decoded == 1 )	927:12:33864:33974	848207	0	True				
ANR	848319	AndExpression	SHOW_IS_ADD_TO_SPACE ( penum ) && ( ! penum -> single_byte_space || penum -> bytes_decoded == 1 )		848207	0		&&			
ANR	848320	CallExpression	SHOW_IS_ADD_TO_SPACE ( penum )		848207	0					
ANR	848321	Callee	SHOW_IS_ADD_TO_SPACE		848207	0					
ANR	848322	Identifier	SHOW_IS_ADD_TO_SPACE		848207	0					
ANR	848323	ArgumentList	penum		848207	1					
ANR	848324	Argument	penum		848207	0					
ANR	848325	Identifier	penum		848207	0					
ANR	848326	OrExpression	! penum -> single_byte_space || penum -> bytes_decoded == 1		848207	1		||			
ANR	848327	UnaryOperationExpression	! penum -> single_byte_space		848207	0					
ANR	848328	UnaryOperator	!		848207	0					
ANR	848329	PtrMemberAccess	penum -> single_byte_space		848207	1					
ANR	848330	Identifier	penum		848207	0					
ANR	848331	Identifier	single_byte_space		848207	1					
ANR	848332	EqualityExpression	penum -> bytes_decoded == 1		848207	1		==			
ANR	848333	PtrMemberAccess	penum -> bytes_decoded		848207	0					
ANR	848334	Identifier	penum		848207	0					
ANR	848335	Identifier	bytes_decoded		848207	1					
ANR	848336	PrimaryExpression	1		848207	1					
ANR	848337	CompoundStatement		23:12:816:876	848207	1					
ANR	848338	IdentifierDeclStatement	gs_char chr = gx_current_char ( ( const gs_text_enum_t * ) penum ) ;	930:12:33991:34051	848207	0	True				
ANR	848339	IdentifierDecl	chr = gx_current_char ( ( const gs_text_enum_t * ) penum )		848207	0					
ANR	848340	IdentifierDeclType	gs_char		848207	0					
ANR	848341	Identifier	chr		848207	1					
ANR	848342	AssignmentExpression	chr = gx_current_char ( ( const gs_text_enum_t * ) penum )		848207	2		=			
ANR	848343	Identifier	chr		848207	0					
ANR	848344	CallExpression	gx_current_char ( ( const gs_text_enum_t * ) penum )		848207	1					
ANR	848345	Callee	gx_current_char		848207	0					
ANR	848346	Identifier	gx_current_char		848207	0					
ANR	848347	ArgumentList	( const gs_text_enum_t * ) penum		848207	1					
ANR	848348	Argument	( const gs_text_enum_t * ) penum		848207	0					
ANR	848349	CastExpression	( const gs_text_enum_t * ) penum		848207	0					
ANR	848350	CastTarget	const gs_text_enum_t *		848207	0					
ANR	848351	Identifier	penum		848207	1					
ANR	848352	IfStatement	if ( chr == penum -> text . space . s_char )		848207	1					
ANR	848353	Condition	chr == penum -> text . space . s_char	932:16:34070:34100	848207	0	True				
ANR	848354	EqualityExpression	chr == penum -> text . space . s_char		848207	0		==			
ANR	848355	Identifier	chr		848207	0					
ANR	848356	MemberAccess	penum -> text . space . s_char		848207	1					
ANR	848357	MemberAccess	penum -> text . space		848207	0					
ANR	848358	PtrMemberAccess	penum -> text		848207	0					
ANR	848359	Identifier	penum		848207	0					
ANR	848360	Identifier	text		848207	1					
ANR	848361	Identifier	space		848207	1					
ANR	848362	Identifier	s_char		848207	1					
ANR	848363	CompoundStatement		25:49:928:928	848207	1					
ANR	848364	ExpressionStatement	dx = penum -> text . delta_space . x	933:16:34121:34151	848207	0	True				
ANR	848365	AssignmentExpression	dx = penum -> text . delta_space . x		848207	0		=			
ANR	848366	Identifier	dx		848207	0					
ANR	848367	MemberAccess	penum -> text . delta_space . x		848207	1					
ANR	848368	MemberAccess	penum -> text . delta_space		848207	0					
ANR	848369	PtrMemberAccess	penum -> text		848207	0					
ANR	848370	Identifier	penum		848207	0					
ANR	848371	Identifier	text		848207	1					
ANR	848372	Identifier	delta_space		848207	1					
ANR	848373	Identifier	x		848207	1					
ANR	848374	ExpressionStatement	dy = penum -> text . delta_space . y	934:16:34169:34199	848207	1	True				
ANR	848375	AssignmentExpression	dy = penum -> text . delta_space . y		848207	0		=			
ANR	848376	Identifier	dy		848207	0					
ANR	848377	MemberAccess	penum -> text . delta_space . y		848207	1					
ANR	848378	MemberAccess	penum -> text . delta_space		848207	0					
ANR	848379	PtrMemberAccess	penum -> text		848207	0					
ANR	848380	Identifier	penum		848207	0					
ANR	848381	Identifier	text		848207	1					
ANR	848382	Identifier	delta_space		848207	1					
ANR	848383	Identifier	y		848207	1					
ANR	848384	IfStatement	if ( SHOW_IS_ADD_TO_ALL ( penum ) )		848207	2					
ANR	848385	Condition	SHOW_IS_ADD_TO_ALL ( penum )	937:12:34237:34261	848207	0	True				
ANR	848386	CallExpression	SHOW_IS_ADD_TO_ALL ( penum )		848207	0					
ANR	848387	Callee	SHOW_IS_ADD_TO_ALL		848207	0					
ANR	848388	Identifier	SHOW_IS_ADD_TO_ALL		848207	0					
ANR	848389	ArgumentList	penum		848207	1					
ANR	848390	Argument	penum		848207	0					
ANR	848391	Identifier	penum		848207	0					
ANR	848392	CompoundStatement		30:39:1089:1089	848207	1					
ANR	848393	ExpressionStatement	dx += penum -> text . delta_all . x	938:12:34278:34307	848207	0	True				
ANR	848394	AssignmentExpression	dx += penum -> text . delta_all . x		848207	0		+=			
ANR	848395	Identifier	dx		848207	0					
ANR	848396	MemberAccess	penum -> text . delta_all . x		848207	1					
ANR	848397	MemberAccess	penum -> text . delta_all		848207	0					
ANR	848398	PtrMemberAccess	penum -> text		848207	0					
ANR	848399	Identifier	penum		848207	0					
ANR	848400	Identifier	text		848207	1					
ANR	848401	Identifier	delta_all		848207	1					
ANR	848402	Identifier	x		848207	1					
ANR	848403	ExpressionStatement	dy += penum -> text . delta_all . y	939:12:34321:34350	848207	1	True				
ANR	848404	AssignmentExpression	dy += penum -> text . delta_all . y		848207	0		+=			
ANR	848405	Identifier	dy		848207	0					
ANR	848406	MemberAccess	penum -> text . delta_all . y		848207	1					
ANR	848407	MemberAccess	penum -> text . delta_all		848207	0					
ANR	848408	PtrMemberAccess	penum -> text		848207	0					
ANR	848409	Identifier	penum		848207	0					
ANR	848410	Identifier	text		848207	1					
ANR	848411	Identifier	delta_all		848207	1					
ANR	848412	Identifier	y		848207	1					
ANR	848413	IfStatement	"if ( ! is_fzero2 ( dx , dy ) )"		848207	3					
ANR	848414	Condition	"! is_fzero2 ( dx , dy )"	941:12:34374:34391	848207	0	True				
ANR	848415	UnaryOperationExpression	"! is_fzero2 ( dx , dy )"		848207	0					
ANR	848416	UnaryOperator	!		848207	0					
ANR	848417	CallExpression	"is_fzero2 ( dx , dy )"		848207	1					
ANR	848418	Callee	is_fzero2		848207	0					
ANR	848419	Identifier	is_fzero2		848207	0					
ANR	848420	ArgumentList	dx		848207	1					
ANR	848421	Argument	dx		848207	0					
ANR	848422	Identifier	dx		848207	0					
ANR	848423	Argument	dy		848207	1					
ANR	848424	Identifier	dy		848207	0					
ANR	848425	CompoundStatement		35:12:1233:1251	848207	1					
ANR	848426	IdentifierDeclStatement	gs_fixed_point dxy ;	942:12:34408:34426	848207	0	True				
ANR	848427	IdentifierDecl	dxy		848207	0					
ANR	848428	IdentifierDeclType	gs_fixed_point		848207	0					
ANR	848429	Identifier	dxy		848207	1					
ANR	848430	ExpressionStatement	"code = gs_distance_transform2fixed ( & pgs -> ctm , dx , dy , & dxy )"	944:12:34441:34500	848207	1	True				
ANR	848431	AssignmentExpression	"code = gs_distance_transform2fixed ( & pgs -> ctm , dx , dy , & dxy )"		848207	0		=			
ANR	848432	Identifier	code		848207	0					
ANR	848433	CallExpression	"gs_distance_transform2fixed ( & pgs -> ctm , dx , dy , & dxy )"		848207	1					
ANR	848434	Callee	gs_distance_transform2fixed		848207	0					
ANR	848435	Identifier	gs_distance_transform2fixed		848207	0					
ANR	848436	ArgumentList	& pgs -> ctm		848207	1					
ANR	848437	Argument	& pgs -> ctm		848207	0					
ANR	848438	UnaryOperationExpression	& pgs -> ctm		848207	0					
ANR	848439	UnaryOperator	&		848207	0					
ANR	848440	PtrMemberAccess	pgs -> ctm		848207	1					
ANR	848441	Identifier	pgs		848207	0					
ANR	848442	Identifier	ctm		848207	1					
ANR	848443	Argument	dx		848207	1					
ANR	848444	Identifier	dx		848207	0					
ANR	848445	Argument	dy		848207	2					
ANR	848446	Identifier	dy		848207	0					
ANR	848447	Argument	& dxy		848207	3					
ANR	848448	UnaryOperationExpression	& dxy		848207	0					
ANR	848449	UnaryOperator	&		848207	0					
ANR	848450	Identifier	dxy		848207	1					
ANR	848451	IfStatement	if ( code < 0 )		848207	2					
ANR	848452	Condition	code < 0	945:16:34518:34525	848207	0	True				
ANR	848453	RelationalExpression	code < 0		848207	0		<			
ANR	848454	Identifier	code		848207	0					
ANR	848455	PrimaryExpression	0		848207	1					
ANR	848456	ReturnStatement	return code ;	946:16:34544:34555	848207	1	True				
ANR	848457	Identifier	code		848207	0					
ANR	848458	ExpressionStatement	penum -> wxy . x += dxy . x	947:12:34569:34590	848207	3	True				
ANR	848459	AssignmentExpression	penum -> wxy . x += dxy . x		848207	0		+=			
ANR	848460	MemberAccess	penum -> wxy . x		848207	0					
ANR	848461	PtrMemberAccess	penum -> wxy		848207	0					
ANR	848462	Identifier	penum		848207	0					
ANR	848463	Identifier	wxy		848207	1					
ANR	848464	Identifier	x		848207	1					
ANR	848465	MemberAccess	dxy . x		848207	1					
ANR	848466	Identifier	dxy		848207	0					
ANR	848467	Identifier	x		848207	1					
ANR	848468	ExpressionStatement	penum -> wxy . y += dxy . y	948:12:34604:34625	848207	4	True				
ANR	848469	AssignmentExpression	penum -> wxy . y += dxy . y		848207	0		+=			
ANR	848470	MemberAccess	penum -> wxy . y		848207	0					
ANR	848471	PtrMemberAccess	penum -> wxy		848207	0					
ANR	848472	Identifier	penum		848207	0					
ANR	848473	Identifier	wxy		848207	1					
ANR	848474	Identifier	y		848207	1					
ANR	848475	MemberAccess	dxy . y		848207	1					
ANR	848476	Identifier	dxy		848207	0					
ANR	848477	Identifier	y		848207	1					
ANR	848478	IfStatement	"if ( SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE ) )"		848207	3					
ANR	848479	Condition	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"	951:8:34651:34702	848207	0	True				
ANR	848480	CallExpression	"SHOW_IS_ALL_OF ( penum , TEXT_DO_NONE | TEXT_INTERVENE )"		848207	0					
ANR	848481	Callee	SHOW_IS_ALL_OF		848207	0					
ANR	848482	Identifier	SHOW_IS_ALL_OF		848207	0					
ANR	848483	ArgumentList	penum		848207	1					
ANR	848484	Argument	penum		848207	0					
ANR	848485	Identifier	penum		848207	0					
ANR	848486	Argument	TEXT_DO_NONE | TEXT_INTERVENE		848207	1					
ANR	848487	InclusiveOrExpression	TEXT_DO_NONE | TEXT_INTERVENE		848207	0		|			
ANR	848488	Identifier	TEXT_DO_NONE		848207	0					
ANR	848489	Identifier	TEXT_INTERVENE		848207	1					
ANR	848490	CompoundStatement		44:62:1530:1530	848207	1					
ANR	848491	ExpressionStatement	penum -> continue_proc = continue_kshow	953:8:34744:34781	848207	0	True				
ANR	848492	AssignmentExpression	penum -> continue_proc = continue_kshow		848207	0		=			
ANR	848493	PtrMemberAccess	penum -> continue_proc		848207	0					
ANR	848494	Identifier	penum		848207	0					
ANR	848495	Identifier	continue_proc		848207	1					
ANR	848496	Identifier	continue_kshow		848207	1					
ANR	848497	ReturnStatement	return TEXT_PROCESS_INTERVENE ;	954:8:34791:34820	848207	1	True				
ANR	848498	Identifier	TEXT_PROCESS_INTERVENE		848207	0					
ANR	848499	CompoundStatement		51:8:1706:1714	848207	4					
ANR	848500	IdentifierDeclStatement	int code ;	958:8:34881:34889	848207	0	True				
ANR	848501	IdentifierDecl	code		848207	0					
ANR	848502	IdentifierDeclType	int		848207	0					
ANR	848503	Identifier	code		848207	1					
ANR	848504	IfStatement	if ( penum -> use_wxy_float )		848207	1					
ANR	848505	Condition	penum -> use_wxy_float	960:12:34904:34923	848207	0	True				
ANR	848506	PtrMemberAccess	penum -> use_wxy_float		848207	0					
ANR	848507	Identifier	penum		848207	0					
ANR	848508	Identifier	use_wxy_float		848207	1					
ANR	848509	ExpressionStatement	"code = gs_moveto_aux ( pgs , pgs -> path , pgs -> current_point . x + penum -> wxy_float . x + fixed2float ( penum -> wxy . x ) , pgs -> current_point . y + penum -> wxy_float . y + fixed2float ( penum -> wxy . y ) )"	961:12:34938:35156	848207	1	True				
ANR	848510	AssignmentExpression	"code = gs_moveto_aux ( pgs , pgs -> path , pgs -> current_point . x + penum -> wxy_float . x + fixed2float ( penum -> wxy . x ) , pgs -> current_point . y + penum -> wxy_float . y + fixed2float ( penum -> wxy . y ) )"		848207	0		=			
ANR	848511	Identifier	code		848207	0					
ANR	848512	CallExpression	"gs_moveto_aux ( pgs , pgs -> path , pgs -> current_point . x + penum -> wxy_float . x + fixed2float ( penum -> wxy . x ) , pgs -> current_point . y + penum -> wxy_float . y + fixed2float ( penum -> wxy . y ) )"		848207	1					
ANR	848513	Callee	gs_moveto_aux		848207	0					
ANR	848514	Identifier	gs_moveto_aux		848207	0					
ANR	848515	ArgumentList	pgs		848207	1					
ANR	848516	Argument	pgs		848207	0					
ANR	848517	Identifier	pgs		848207	0					
ANR	848518	Argument	pgs -> path		848207	1					
ANR	848519	PtrMemberAccess	pgs -> path		848207	0					
ANR	848520	Identifier	pgs		848207	0					
ANR	848521	Identifier	path		848207	1					
ANR	848522	Argument	pgs -> current_point . x + penum -> wxy_float . x + fixed2float ( penum -> wxy . x )		848207	2					
ANR	848523	AdditiveExpression	pgs -> current_point . x + penum -> wxy_float . x + fixed2float ( penum -> wxy . x )		848207	0		+			
ANR	848524	MemberAccess	pgs -> current_point . x		848207	0					
ANR	848525	PtrMemberAccess	pgs -> current_point		848207	0					
ANR	848526	Identifier	pgs		848207	0					
ANR	848527	Identifier	current_point		848207	1					
ANR	848528	Identifier	x		848207	1					
ANR	848529	AdditiveExpression	penum -> wxy_float . x + fixed2float ( penum -> wxy . x )		848207	1		+			
ANR	848530	MemberAccess	penum -> wxy_float . x		848207	0					
ANR	848531	PtrMemberAccess	penum -> wxy_float		848207	0					
ANR	848532	Identifier	penum		848207	0					
ANR	848533	Identifier	wxy_float		848207	1					
ANR	848534	Identifier	x		848207	1					
ANR	848535	CallExpression	fixed2float ( penum -> wxy . x )		848207	1					
ANR	848536	Callee	fixed2float		848207	0					
ANR	848537	Identifier	fixed2float		848207	0					
ANR	848538	ArgumentList	penum -> wxy . x		848207	1					
ANR	848539	Argument	penum -> wxy . x		848207	0					
ANR	848540	MemberAccess	penum -> wxy . x		848207	0					
ANR	848541	PtrMemberAccess	penum -> wxy		848207	0					
ANR	848542	Identifier	penum		848207	0					
ANR	848543	Identifier	wxy		848207	1					
ANR	848544	Identifier	x		848207	1					
ANR	848545	Argument	pgs -> current_point . y + penum -> wxy_float . y + fixed2float ( penum -> wxy . y )		848207	3					
ANR	848546	AdditiveExpression	pgs -> current_point . y + penum -> wxy_float . y + fixed2float ( penum -> wxy . y )		848207	0		+			
ANR	848547	MemberAccess	pgs -> current_point . y		848207	0					
ANR	848548	PtrMemberAccess	pgs -> current_point		848207	0					
ANR	848549	Identifier	pgs		848207	0					
ANR	848550	Identifier	current_point		848207	1					
ANR	848551	Identifier	y		848207	1					
ANR	848552	AdditiveExpression	penum -> wxy_float . y + fixed2float ( penum -> wxy . y )		848207	1		+			
ANR	848553	MemberAccess	penum -> wxy_float . y		848207	0					
ANR	848554	PtrMemberAccess	penum -> wxy_float		848207	0					
ANR	848555	Identifier	penum		848207	0					
ANR	848556	Identifier	wxy_float		848207	1					
ANR	848557	Identifier	y		848207	1					
ANR	848558	CallExpression	fixed2float ( penum -> wxy . y )		848207	1					
ANR	848559	Callee	fixed2float		848207	0					
ANR	848560	Identifier	fixed2float		848207	0					
ANR	848561	ArgumentList	penum -> wxy . y		848207	1					
ANR	848562	Argument	penum -> wxy . y		848207	0					
ANR	848563	MemberAccess	penum -> wxy . y		848207	0					
ANR	848564	PtrMemberAccess	penum -> wxy		848207	0					
ANR	848565	Identifier	penum		848207	0					
ANR	848566	Identifier	wxy		848207	1					
ANR	848567	Identifier	y		848207	1					
ANR	848568	ElseStatement	else		848207	0					
ANR	848569	ExpressionStatement	"code = show_fast_move ( pgs , & penum -> wxy )"	965:12:35183:35222	848207	0	True				
ANR	848570	AssignmentExpression	"code = show_fast_move ( pgs , & penum -> wxy )"		848207	0		=			
ANR	848571	Identifier	code		848207	0					
ANR	848572	CallExpression	"show_fast_move ( pgs , & penum -> wxy )"		848207	1					
ANR	848573	Callee	show_fast_move		848207	0					
ANR	848574	Identifier	show_fast_move		848207	0					
ANR	848575	ArgumentList	pgs		848207	1					
ANR	848576	Argument	pgs		848207	0					
ANR	848577	Identifier	pgs		848207	0					
ANR	848578	Argument	& penum -> wxy		848207	1					
ANR	848579	UnaryOperationExpression	& penum -> wxy		848207	0					
ANR	848580	UnaryOperator	&		848207	0					
ANR	848581	PtrMemberAccess	penum -> wxy		848207	1					
ANR	848582	Identifier	penum		848207	0					
ANR	848583	Identifier	wxy		848207	1					
ANR	848584	IfStatement	if ( code < 0 )		848207	2					
ANR	848585	Condition	code < 0	966:12:35236:35243	848207	0	True				
ANR	848586	RelationalExpression	code < 0		848207	0		<			
ANR	848587	Identifier	code		848207	0					
ANR	848588	PrimaryExpression	0		848207	1					
ANR	848589	ReturnStatement	return code ;	967:12:35258:35269	848207	1	True				
ANR	848590	Identifier	code		848207	0					
ANR	848591	IfStatement	if ( SHOW_IS_DO_KERN ( penum ) && penum -> index < penum -> text . size )		848207	5					
ANR	848592	Condition	SHOW_IS_DO_KERN ( penum ) && penum -> index < penum -> text . size	970:8:35345:35401	848207	0	True				
ANR	848593	AndExpression	SHOW_IS_DO_KERN ( penum ) && penum -> index < penum -> text . size		848207	0		&&			
ANR	848594	CallExpression	SHOW_IS_DO_KERN ( penum )		848207	0					
ANR	848595	Callee	SHOW_IS_DO_KERN		848207	0					
ANR	848596	Identifier	SHOW_IS_DO_KERN		848207	0					
ANR	848597	ArgumentList	penum		848207	1					
ANR	848598	Argument	penum		848207	0					
ANR	848599	Identifier	penum		848207	0					
ANR	848600	RelationalExpression	penum -> index < penum -> text . size		848207	1		<			
ANR	848601	PtrMemberAccess	penum -> index		848207	0					
ANR	848602	Identifier	penum		848207	0					
ANR	848603	Identifier	index		848207	1					
ANR	848604	MemberAccess	penum -> text . size		848207	1					
ANR	848605	PtrMemberAccess	penum -> text		848207	0					
ANR	848606	Identifier	penum		848207	0					
ANR	848607	Identifier	text		848207	1					
ANR	848608	Identifier	size		848207	1					
ANR	848609	CompoundStatement		63:67:2229:2229	848207	1					
ANR	848610	ExpressionStatement	penum -> continue_proc = continue_kshow	971:8:35414:35451	848207	0	True				
ANR	848611	AssignmentExpression	penum -> continue_proc = continue_kshow		848207	0		=			
ANR	848612	PtrMemberAccess	penum -> continue_proc		848207	0					
ANR	848613	Identifier	penum		848207	0					
ANR	848614	Identifier	continue_proc		848207	1					
ANR	848615	Identifier	continue_kshow		848207	1					
ANR	848616	ReturnStatement	return TEXT_PROCESS_INTERVENE ;	972:8:35461:35490	848207	1	True				
ANR	848617	Identifier	TEXT_PROCESS_INTERVENE		848207	0					
ANR	848618	ReturnStatement	return 0 ;	974:4:35502:35510	848207	6	True				
ANR	848619	PrimaryExpression	0		848207	0					
ANR	848620	ReturnType	static int		848207	1					
ANR	848621	Identifier	show_move		848207	2					
ANR	848622	ParameterList	gs_show_enum * penum		848207	3					
ANR	848623	Parameter	gs_show_enum * penum	907:10:33152:33171	848207	0	True				
ANR	848624	ParameterType	gs_show_enum *		848207	0					
ANR	848625	Identifier	penum		848207	1					
ANR	848626	CFGEntryNode	ENTRY		848207		True				
ANR	848627	CFGExitNode	EXIT		848207		True				
ANR	848628	Symbol	SHOW_IS_DO_KERN		848207						
ANR	848629	Symbol	& penum -> text		848207						
ANR	848630	Symbol	is_fzero2		848207						
ANR	848631	Symbol	* pgs		848207						
ANR	848632	Symbol	gx_current_char		848207						
ANR	848633	Symbol	SHOW_IS_ALL_OF		848207						
ANR	848634	Symbol	& penum -> wxy		848207						
ANR	848635	Symbol	penum -> text . delta_all . x		848207						
ANR	848636	Symbol	dx		848207						
ANR	848637	Symbol	dy		848207						
ANR	848638	Symbol	penum -> text . delta_all . y		848207						
ANR	848639	Symbol	penum -> bytes_decoded		848207						
ANR	848640	Symbol	SHOW_IS_ADD_TO_ALL		848207						
ANR	848641	Symbol	penum -> text . delta_space		848207						
ANR	848642	Symbol	penum -> use_wxy_float		848207						
ANR	848643	Symbol	dxy . y		848207						
ANR	848644	Symbol	dxy . x		848207						
ANR	848645	Symbol	penum -> index		848207						
ANR	848646	Symbol	penum		848207						
ANR	848647	Symbol	SHOW_IS		848207						
ANR	848648	Symbol	penum -> wxy_float . x		848207						
ANR	848649	Symbol	chr		848207						
ANR	848650	Symbol	penum -> wxy_float . y		848207						
ANR	848651	Symbol	dpt . y		848207						
ANR	848652	Symbol	dpt . x		848207						
ANR	848653	Symbol	penum -> text . space		848207						
ANR	848654	Symbol	SHOW_IS_ADD_TO_SPACE		848207						
ANR	848655	Symbol	penum -> text . space . s_char		848207						
ANR	848656	Symbol	penum -> wxy_float		848207						
ANR	848657	Symbol	penum -> text . delta_all		848207						
ANR	848658	Symbol	TEXT_REPLACE_WIDTHS		848207						
ANR	848659	Symbol	penum -> continue_proc		848207						
ANR	848660	Symbol	* penum		848207						
ANR	848661	Symbol	code		848207						
ANR	848662	Symbol	show_fast_move		848207						
ANR	848663	Symbol	penum -> text		848207						
ANR	848664	Symbol	pgs -> current_point		848207						
ANR	848665	Symbol	& dpt		848207						
ANR	848666	Symbol	gs_distance_transform2fixed		848207						
ANR	848667	Symbol	pgs -> path		848207						
ANR	848668	Symbol	& dxy		848207						
ANR	848669	Symbol	penum -> pgs		848207						
ANR	848670	Symbol	penum -> wxy . y		848207						
ANR	848671	Symbol	penum -> wxy . x		848207						
ANR	848672	Symbol	penum -> single_byte_space		848207						
ANR	848673	Symbol	continue_kshow		848207						
ANR	848674	Symbol	TEXT_INTERVENE		848207						
ANR	848675	Symbol	pgs		848207						
ANR	848676	Symbol	TEXT_DO_NONE		848207						
ANR	848677	Symbol	TEXT_PROCESS_INTERVENE		848207						
ANR	848678	Symbol	penum -> text . delta_space . x		848207						
ANR	848679	Symbol	dxy		848207						
ANR	848680	Symbol	fixed2float		848207						
ANR	848681	Symbol	penum -> text . delta_space . y		848207						
ANR	848682	Symbol	penum -> text . size		848207						
ANR	848683	Symbol	dpt		848207						
ANR	848684	Symbol	pgs -> current_point . x		848207						
ANR	848685	Symbol	pgs -> current_point . y		848207						
ANR	848686	Symbol	penum -> wxy		848207						
ANR	848687	Symbol	gs_moveto_aux		848207						
ANR	848688	Symbol	penum -> xy_index		848207						
ANR	848689	Symbol	gs_text_replaced_width		848207						
ANR	848690	Symbol	& pgs -> ctm		848207						
ANR	848691	Function	show_proceed	977:0:35543:48703							
ANR	848692	FunctionDef	show_proceed (gs_show_enum * penum)		848691	0					
ANR	848693	CompoundStatement		979:0:35589:48703	848691	0					
ANR	848694	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	980:4:35595:35622	848691	0	True				
ANR	848695	IdentifierDecl	* pgs = penum -> pgs		848691	0					
ANR	848696	IdentifierDeclType	gs_gstate *		848691	0					
ANR	848697	Identifier	pgs		848691	1					
ANR	848698	AssignmentExpression	* pgs = penum -> pgs		848691	2		=			
ANR	848699	Identifier	pgs		848691	0					
ANR	848700	PtrMemberAccess	penum -> pgs		848691	1					
ANR	848701	Identifier	penum		848691	0					
ANR	848702	Identifier	pgs		848691	1					
ANR	848703	IdentifierDeclStatement	gs_font * pfont ;	981:4:35628:35642	848691	1	True				
ANR	848704	IdentifierDecl	* pfont		848691	0					
ANR	848705	IdentifierDeclType	gs_font *		848691	0					
ANR	848706	Identifier	pfont		848691	1					
ANR	848707	IdentifierDeclStatement	cached_fm_pair * pair = 0 ;	982:4:35648:35672	848691	2	True				
ANR	848708	IdentifierDecl	* pair = 0		848691	0					
ANR	848709	IdentifierDeclType	cached_fm_pair *		848691	0					
ANR	848710	Identifier	pair		848691	1					
ANR	848711	AssignmentExpression	* pair = 0		848691	2		=			
ANR	848712	Identifier	pair		848691	0					
ANR	848713	PrimaryExpression	0		848691	1					
ANR	848714	IdentifierDeclStatement	gs_font * rfont = ( penum -> fstack . depth < 0 ? pgs -> font : penum -> fstack . items [ 0 ] . font ) ;	983:4:35678:35770	848691	3	True				
ANR	848715	IdentifierDecl	* rfont = ( penum -> fstack . depth < 0 ? pgs -> font : penum -> fstack . items [ 0 ] . font )		848691	0					
ANR	848716	IdentifierDeclType	gs_font *		848691	0					
ANR	848717	Identifier	rfont		848691	1					
ANR	848718	AssignmentExpression	* rfont = ( penum -> fstack . depth < 0 ? pgs -> font : penum -> fstack . items [ 0 ] . font )		848691	2		=			
ANR	848719	Identifier	rfont		848691	0					
ANR	848720	ConditionalExpression	penum -> fstack . depth < 0 ? pgs -> font : penum -> fstack . items [ 0 ] . font		848691	1					
ANR	848721	Condition	penum -> fstack . depth < 0		848691	0					
ANR	848722	RelationalExpression	penum -> fstack . depth < 0		848691	0		<			
ANR	848723	MemberAccess	penum -> fstack . depth		848691	0					
ANR	848724	PtrMemberAccess	penum -> fstack		848691	0					
ANR	848725	Identifier	penum		848691	0					
ANR	848726	Identifier	fstack		848691	1					
ANR	848727	Identifier	depth		848691	1					
ANR	848728	PrimaryExpression	0		848691	1					
ANR	848729	PtrMemberAccess	pgs -> font		848691	1					
ANR	848730	Identifier	pgs		848691	0					
ANR	848731	Identifier	font		848691	1					
ANR	848732	MemberAccess	penum -> fstack . items [ 0 ] . font		848691	2					
ANR	848733	ArrayIndexing	penum -> fstack . items [ 0 ]		848691	0					
ANR	848734	MemberAccess	penum -> fstack . items		848691	0					
ANR	848735	PtrMemberAccess	penum -> fstack		848691	0					
ANR	848736	Identifier	penum		848691	0					
ANR	848737	Identifier	fstack		848691	1					
ANR	848738	Identifier	items		848691	1					
ANR	848739	PrimaryExpression	0		848691	1					
ANR	848740	Identifier	font		848691	1					
ANR	848741	IdentifierDeclStatement	int wmode = rfont -> WMode ;	985:4:35776:35800	848691	4	True				
ANR	848742	IdentifierDecl	wmode = rfont -> WMode		848691	0					
ANR	848743	IdentifierDeclType	int		848691	0					
ANR	848744	Identifier	wmode		848691	1					
ANR	848745	AssignmentExpression	wmode = rfont -> WMode		848691	2		=			
ANR	848746	Identifier	wmode		848691	0					
ANR	848747	PtrMemberAccess	rfont -> WMode		848691	1					
ANR	848748	Identifier	rfont		848691	0					
ANR	848749	Identifier	WMode		848691	1					
ANR	848750	ExpressionStatement	font_proc_next_char_glyph ( ( * next_char_glyph ) ) = rfont -> procs . next_char_glyph	986:4:35806:35890	848691	5	True				
ANR	848751	AssignmentExpression	font_proc_next_char_glyph ( ( * next_char_glyph ) ) = rfont -> procs . next_char_glyph		848691	0		=			
ANR	848752	CallExpression	font_proc_next_char_glyph ( ( * next_char_glyph ) )		848691	0					
ANR	848753	Callee	font_proc_next_char_glyph		848691	0					
ANR	848754	Identifier	font_proc_next_char_glyph		848691	0					
ANR	848755	ArgumentList	* next_char_glyph		848691	1					
ANR	848756	Argument	* next_char_glyph		848691	0					
ANR	848757	UnaryOperationExpression	* next_char_glyph		848691	0					
ANR	848758	UnaryOperator	*		848691	0					
ANR	848759	Identifier	next_char_glyph		848691	1					
ANR	848760	MemberAccess	rfont -> procs . next_char_glyph		848691	1					
ANR	848761	PtrMemberAccess	rfont -> procs		848691	0					
ANR	848762	Identifier	rfont		848691	0					
ANR	848763	Identifier	procs		848691	1					
ANR	848764	Identifier	next_char_glyph		848691	1					
ANR	848765	Statement	define	988:1:35893:35898	848691	6	True				
ANR	848766	Statement	get_next_char_glyph	988:8:35900:35918	848691	7	True				
ANR	848767	Statement	(	988:27:35919:35919	848691	8	True				
ANR	848768	Statement	pte	988:28:35920:35922	848691	9	True				
ANR	848769	Statement	","	988:31:35923:35923	848691	10	True				
ANR	848770	Statement	pchr	988:33:35925:35928	848691	11	True				
ANR	848771	Statement	","	988:37:35929:35929	848691	12	True				
ANR	848772	Statement	pglyph	988:39:35931:35936	848691	13	True				
ANR	848773	Statement	)	988:45:35937:35937	848691	14	True				
ANR	848774	Statement	(	989:2:35942:35942	848691	15	True				
ANR	848775	Statement	++	989:3:35943:35944	848691	16	True				
ANR	848776	Statement	(	989:5:35945:35945	848691	17	True				
ANR	848777	Statement	penum	989:6:35946:35950	848691	18	True				
ANR	848778	Statement	->	989:11:35951:35952	848691	19	True				
ANR	848779	Statement	xy_index	989:13:35953:35960	848691	20	True				
ANR	848780	Statement	)	989:21:35961:35961	848691	21	True				
ANR	848781	Statement	","	989:22:35962:35962	848691	22	True				
ANR	848782	Statement	next_char_glyph	989:24:35964:35978	848691	23	True				
ANR	848783	Statement	(	989:39:35979:35979	848691	24	True				
ANR	848784	Statement	pte	989:40:35980:35982	848691	25	True				
ANR	848785	Statement	","	989:43:35983:35983	848691	26	True				
ANR	848786	Statement	pchr	989:45:35985:35988	848691	27	True				
ANR	848787	Statement	","	989:49:35989:35989	848691	28	True				
ANR	848788	Statement	pglyph	989:51:35991:35996	848691	29	True				
ANR	848789	Statement	)	989:57:35997:35997	848691	30	True				
ANR	848790	Statement	)	989:58:35998:35998	848691	31	True				
ANR	848791	IdentifierDeclStatement	gs_char chr ;	990:4:36004:36015	848691	32	True				
ANR	848792	IdentifierDecl	chr		848691	0					
ANR	848793	IdentifierDeclType	gs_char		848691	0					
ANR	848794	Identifier	chr		848691	1					
ANR	848795	IdentifierDeclStatement	gs_glyph glyph ;	991:4:36021:36035	848691	33	True				
ANR	848796	IdentifierDecl	glyph		848691	0					
ANR	848797	IdentifierDeclType	gs_glyph		848691	0					
ANR	848798	Identifier	glyph		848691	1					
ANR	848799	IdentifierDeclStatement	"int code , start ;"	992:4:36041:36056	848691	34	True				
ANR	848800	IdentifierDecl	code		848691	0					
ANR	848801	IdentifierDeclType	int		848691	0					
ANR	848802	Identifier	code		848691	1					
ANR	848803	IdentifierDecl	start		848691	1					
ANR	848804	IdentifierDeclType	int		848691	0					
ANR	848805	Identifier	start		848691	1					
ANR	848806	IdentifierDeclStatement	cached_char * cc ;	993:4:36062:36077	848691	35	True				
ANR	848807	IdentifierDecl	* cc		848691	0					
ANR	848808	IdentifierDeclType	cached_char *		848691	0					
ANR	848809	Identifier	cc		848691	1					
ANR	848810	IdentifierDeclStatement	gs_log2_scale_point log2_scale ;	994:4:36083:36113	848691	36	True				
ANR	848811	IdentifierDecl	log2_scale		848691	0					
ANR	848812	IdentifierDeclType	gs_log2_scale_point		848691	0					
ANR	848813	Identifier	log2_scale		848691	1					
ANR	848814	IfStatement	if ( penum -> charpath_flag == cpm_show && SHOW_USES_OUTLINE ( penum ) )		848691	37					
ANR	848815	Condition	penum -> charpath_flag == cpm_show && SHOW_USES_OUTLINE ( penum )	996:8:36124:36183	848691	0	True				
ANR	848816	AndExpression	penum -> charpath_flag == cpm_show && SHOW_USES_OUTLINE ( penum )		848691	0		&&			
ANR	848817	EqualityExpression	penum -> charpath_flag == cpm_show		848691	0		==			
ANR	848818	PtrMemberAccess	penum -> charpath_flag		848691	0					
ANR	848819	Identifier	penum		848691	0					
ANR	848820	Identifier	charpath_flag		848691	1					
ANR	848821	Identifier	cpm_show		848691	1					
ANR	848822	CallExpression	SHOW_USES_OUTLINE ( penum )		848691	1					
ANR	848823	Callee	SHOW_USES_OUTLINE		848691	0					
ANR	848824	Identifier	SHOW_USES_OUTLINE		848691	0					
ANR	848825	ArgumentList	penum		848691	1					
ANR	848826	Argument	penum		848691	0					
ANR	848827	Identifier	penum		848691	0					
ANR	848828	CompoundStatement		18:70:596:596	848691	1					
ANR	848829	ExpressionStatement	code = gs_gstate_color_load ( pgs )	997:8:36196:36228	848691	0	True				
ANR	848830	AssignmentExpression	code = gs_gstate_color_load ( pgs )		848691	0		=			
ANR	848831	Identifier	code		848691	0					
ANR	848832	CallExpression	gs_gstate_color_load ( pgs )		848691	1					
ANR	848833	Callee	gs_gstate_color_load		848691	0					
ANR	848834	Identifier	gs_gstate_color_load		848691	0					
ANR	848835	ArgumentList	pgs		848691	1					
ANR	848836	Argument	pgs		848691	0					
ANR	848837	Identifier	pgs		848691	0					
ANR	848838	IfStatement	if ( code < 0 )		848691	1					
ANR	848839	Condition	code < 0	998:12:36242:36249	848691	0	True				
ANR	848840	RelationalExpression	code < 0		848691	0		<			
ANR	848841	Identifier	code		848691	0					
ANR	848842	PrimaryExpression	0		848691	1					
ANR	848843	ReturnStatement	return code ;	999:12:36264:36275	848691	1	True				
ANR	848844	Identifier	code		848691	0					
ANR	848845	Label	more :	1001:2:36285:36289	848691	38	True				
ANR	848846	Identifier	more		848691	0					
ANR	848847	ExpressionStatement	pfont = ( penum -> fstack . depth < 0 ? pgs -> font : penum -> fstack . items [ penum -> fstack . depth ] . font )	1002:4:36343:36449	848691	39	True				
ANR	848848	AssignmentExpression	pfont = ( penum -> fstack . depth < 0 ? pgs -> font : penum -> fstack . items [ penum -> fstack . depth ] . font )		848691	0		=			
ANR	848849	Identifier	pfont		848691	0					
ANR	848850	ConditionalExpression	penum -> fstack . depth < 0 ? pgs -> font : penum -> fstack . items [ penum -> fstack . depth ] . font		848691	1					
ANR	848851	Condition	penum -> fstack . depth < 0		848691	0					
ANR	848852	RelationalExpression	penum -> fstack . depth < 0		848691	0		<			
ANR	848853	MemberAccess	penum -> fstack . depth		848691	0					
ANR	848854	PtrMemberAccess	penum -> fstack		848691	0					
ANR	848855	Identifier	penum		848691	0					
ANR	848856	Identifier	fstack		848691	1					
ANR	848857	Identifier	depth		848691	1					
ANR	848858	PrimaryExpression	0		848691	1					
ANR	848859	PtrMemberAccess	pgs -> font		848691	1					
ANR	848860	Identifier	pgs		848691	0					
ANR	848861	Identifier	font		848691	1					
ANR	848862	MemberAccess	penum -> fstack . items [ penum -> fstack . depth ] . font		848691	2					
ANR	848863	ArrayIndexing	penum -> fstack . items [ penum -> fstack . depth ]		848691	0					
ANR	848864	MemberAccess	penum -> fstack . items		848691	0					
ANR	848865	PtrMemberAccess	penum -> fstack		848691	0					
ANR	848866	Identifier	penum		848691	0					
ANR	848867	Identifier	fstack		848691	1					
ANR	848868	Identifier	items		848691	1					
ANR	848869	MemberAccess	penum -> fstack . depth		848691	1					
ANR	848870	PtrMemberAccess	penum -> fstack		848691	0					
ANR	848871	Identifier	penum		848691	0					
ANR	848872	Identifier	fstack		848691	1					
ANR	848873	Identifier	depth		848691	1					
ANR	848874	Identifier	font		848691	1					
ANR	848875	ExpressionStatement	penum -> current_font = pfont	1004:4:36455:36482	848691	40	True				
ANR	848876	AssignmentExpression	penum -> current_font = pfont		848691	0		=			
ANR	848877	PtrMemberAccess	penum -> current_font		848691	0					
ANR	848878	Identifier	penum		848691	0					
ANR	848879	Identifier	current_font		848691	1					
ANR	848880	Identifier	pfont		848691	1					
ANR	848881	IfStatement	if ( penum -> can_cache >= 0 )		848691	41					
ANR	848882	Condition	penum -> can_cache >= 0	1007:8:36604:36624	848691	0	True				
ANR	848883	RelationalExpression	penum -> can_cache >= 0		848691	0		>=			
ANR	848884	PtrMemberAccess	penum -> can_cache		848691	0					
ANR	848885	Identifier	penum		848691	0					
ANR	848886	Identifier	can_cache		848691	1					
ANR	848887	PrimaryExpression	0		848691	1					
ANR	848888	CompoundStatement		29:31:1037:1037	848691	1					
ANR	848889	ForStatement	for ( ; ; )		848691	0					
ANR	848890	CompoundStatement		31:17:1086:1086	848691	0					
ANR	848891	ExpressionStatement	start = penum -> index	1010:12:36690:36710	848691	0	True				
ANR	848892	AssignmentExpression	start = penum -> index		848691	0		=			
ANR	848893	Identifier	start		848691	0					
ANR	848894	PtrMemberAccess	penum -> index		848691	1					
ANR	848895	Identifier	penum		848691	0					
ANR	848896	Identifier	index		848691	1					
ANR	848897	SwitchStatement	"switch ( ( code = get_next_char_glyph ( ( gs_text_enum_t * ) penum , & chr , & glyph ) ) )"		848691	1					
ANR	848898	Condition	"code = get_next_char_glyph ( ( gs_text_enum_t * ) penum , & chr , & glyph )"	1011:20:36732:36846	848691	0	True				
ANR	848899	AssignmentExpression	"code = get_next_char_glyph ( ( gs_text_enum_t * ) penum , & chr , & glyph )"		848691	0		=			
ANR	848900	Identifier	code		848691	0					
ANR	848901	CallExpression	"get_next_char_glyph ( ( gs_text_enum_t * ) penum , & chr , & glyph )"		848691	1					
ANR	848902	Callee	get_next_char_glyph		848691	0					
ANR	848903	Identifier	get_next_char_glyph		848691	0					
ANR	848904	ArgumentList	( gs_text_enum_t * ) penum		848691	1					
ANR	848905	Argument	( gs_text_enum_t * ) penum		848691	0					
ANR	848906	CastExpression	( gs_text_enum_t * ) penum		848691	0					
ANR	848907	CastTarget	gs_text_enum_t *		848691	0					
ANR	848908	Identifier	penum		848691	1					
ANR	848909	Argument	& chr		848691	1					
ANR	848910	UnaryOperationExpression	& chr		848691	0					
ANR	848911	UnaryOperator	&		848691	0					
ANR	848912	Identifier	chr		848691	1					
ANR	848913	Argument	& glyph		848691	2					
ANR	848914	UnaryOperationExpression	& glyph		848691	0					
ANR	848915	UnaryOperator	&		848691	0					
ANR	848916	Identifier	glyph		848691	1					
ANR	848917	CompoundStatement		35:22:1280:1280	848691	1					
ANR	848918	Label	default :	1014:16:36888:36895	848691	0	True				
ANR	848919	Identifier	default		848691	0					
ANR	848920	ReturnStatement	return code ;	1015:20:36936:36947	848691	1	True				
ANR	848921	Identifier	code		848691	0					
ANR	848922	Label	case 2 :	1016:16:36965:36971	848691	2	True				
ANR	848923	ReturnStatement	return show_finish ( penum ) ;	1017:20:37004:37029	848691	3	True				
ANR	848924	CallExpression	show_finish ( penum )		848691	0					
ANR	848925	Callee	show_finish		848691	0					
ANR	848926	Identifier	show_finish		848691	0					
ANR	848927	ArgumentList	penum		848691	1					
ANR	848928	Argument	penum		848691	0					
ANR	848929	Identifier	penum		848691	0					
ANR	848930	Label	case 1 :	1018:16:37047:37053	848691	4	True				
ANR	848931	ExpressionStatement	pfont = penum -> fstack . items [ penum -> fstack . depth ] . font	1019:20:37093:37146	848691	5	True				
ANR	848932	AssignmentExpression	pfont = penum -> fstack . items [ penum -> fstack . depth ] . font		848691	0		=			
ANR	848933	Identifier	pfont		848691	0					
ANR	848934	MemberAccess	penum -> fstack . items [ penum -> fstack . depth ] . font		848691	1					
ANR	848935	ArrayIndexing	penum -> fstack . items [ penum -> fstack . depth ]		848691	0					
ANR	848936	MemberAccess	penum -> fstack . items		848691	0					
ANR	848937	PtrMemberAccess	penum -> fstack		848691	0					
ANR	848938	Identifier	penum		848691	0					
ANR	848939	Identifier	fstack		848691	1					
ANR	848940	Identifier	items		848691	1					
ANR	848941	MemberAccess	penum -> fstack . depth		848691	1					
ANR	848942	PtrMemberAccess	penum -> fstack		848691	0					
ANR	848943	Identifier	penum		848691	0					
ANR	848944	Identifier	fstack		848691	1					
ANR	848945	Identifier	depth		848691	1					
ANR	848946	Identifier	font		848691	1					
ANR	848947	ExpressionStatement	penum -> current_font = pfont	1020:20:37168:37195	848691	6	True				
ANR	848948	AssignmentExpression	penum -> current_font = pfont		848691	0		=			
ANR	848949	PtrMemberAccess	penum -> current_font		848691	0					
ANR	848950	Identifier	penum		848691	0					
ANR	848951	Identifier	current_font		848691	1					
ANR	848952	Identifier	pfont		848691	1					
ANR	848953	ExpressionStatement	pgs -> char_tm_valid = false	1021:20:37217:37243	848691	7	True				
ANR	848954	AssignmentExpression	pgs -> char_tm_valid = false		848691	0		=			
ANR	848955	PtrMemberAccess	pgs -> char_tm_valid		848691	0					
ANR	848956	Identifier	pgs		848691	0					
ANR	848957	Identifier	char_tm_valid		848691	1					
ANR	848958	Identifier	false		848691	1					
ANR	848959	ExpressionStatement	show_state_setup ( penum )	1022:20:37265:37288	848691	8	True				
ANR	848960	CallExpression	show_state_setup ( penum )		848691	0					
ANR	848961	Callee	show_state_setup		848691	0					
ANR	848962	Identifier	show_state_setup		848691	0					
ANR	848963	ArgumentList	penum		848691	1					
ANR	848964	Argument	penum		848691	0					
ANR	848965	Identifier	penum		848691	0					
ANR	848966	ExpressionStatement	pair = 0	1023:20:37310:37318	848691	9	True				
ANR	848967	AssignmentExpression	pair = 0		848691	0		=			
ANR	848968	Identifier	pair		848691	0					
ANR	848969	PrimaryExpression	0		848691	1					
ANR	848970	ExpressionStatement	penum -> pair = 0	1024:20:37340:37355	848691	10	True				
ANR	848971	AssignmentExpression	penum -> pair = 0		848691	0		=			
ANR	848972	PtrMemberAccess	penum -> pair		848691	0					
ANR	848973	Identifier	penum		848691	0					
ANR	848974	Identifier	pair		848691	1					
ANR	848975	PrimaryExpression	0		848691	1					
ANR	848976	Label	case 0 :	1026:16:37413:37419	848691	11	True				
ANR	848977	ExpressionStatement	"SET_CURRENT_CHAR ( penum , chr )"	1033:20:37751:37779	848691	12	True				
ANR	848978	CallExpression	"SET_CURRENT_CHAR ( penum , chr )"		848691	0					
ANR	848979	Callee	SET_CURRENT_CHAR		848691	0					
ANR	848980	Identifier	SET_CURRENT_CHAR		848691	0					
ANR	848981	ArgumentList	penum		848691	1					
ANR	848982	Argument	penum		848691	0					
ANR	848983	Identifier	penum		848691	0					
ANR	848984	Argument	chr		848691	1					
ANR	848985	Identifier	chr		848691	0					
ANR	848986	IfStatement	if ( glyph == GS_NO_GLYPH )		848691	13					
ANR	848987	Condition	glyph == GS_NO_GLYPH	1038:24:37997:38016	848691	0	True				
ANR	848988	EqualityExpression	glyph == GS_NO_GLYPH		848691	0		==			
ANR	848989	Identifier	glyph		848691	0					
ANR	848990	Identifier	GS_NO_GLYPH		848691	1					
ANR	848991	CompoundStatement		60:46:2429:2429	848691	1					
ANR	848992	ExpressionStatement	"glyph = ( * penum -> encode_char ) ( pfont , chr , GLYPH_SPACE_NAME )"	1039:24:38045:38158	848691	0	True				
ANR	848993	AssignmentExpression	"glyph = ( * penum -> encode_char ) ( pfont , chr , GLYPH_SPACE_NAME )"		848691	0		=			
ANR	848994	Identifier	glyph		848691	0					
ANR	848995	CallExpression	"( * penum -> encode_char ) ( pfont , chr , GLYPH_SPACE_NAME )"		848691	1					
ANR	848996	Callee	* penum -> encode_char		848691	0					
ANR	848997	UnaryOperationExpression	* penum -> encode_char		848691	0					
ANR	848998	UnaryOperator	*		848691	0					
ANR	848999	PtrMemberAccess	penum -> encode_char		848691	1					
ANR	849000	Identifier	penum		848691	0					
ANR	849001	Identifier	encode_char		848691	1					
ANR	849002	ArgumentList	pfont		848691	1					
ANR	849003	Argument	pfont		848691	0					
ANR	849004	Identifier	pfont		848691	0					
ANR	849005	Argument	chr		848691	1					
ANR	849006	Identifier	chr		848691	0					
ANR	849007	Argument	GLYPH_SPACE_NAME		848691	2					
ANR	849008	Identifier	GLYPH_SPACE_NAME		848691	0					
ANR	849009	ExpressionStatement	"SET_CURRENT_GLYPH ( penum , glyph )"	1041:24:38184:38215	848691	1	True				
ANR	849010	CallExpression	"SET_CURRENT_GLYPH ( penum , glyph )"		848691	0					
ANR	849011	Callee	SET_CURRENT_GLYPH		848691	0					
ANR	849012	Identifier	SET_CURRENT_GLYPH		848691	0					
ANR	849013	ArgumentList	penum		848691	1					
ANR	849014	Argument	penum		848691	0					
ANR	849015	Identifier	penum		848691	0					
ANR	849016	Argument	glyph		848691	1					
ANR	849017	Identifier	glyph		848691	0					
ANR	849018	ElseStatement	else		848691	0					
ANR	849019	ExpressionStatement	"SET_CURRENT_GLYPH ( penum , glyph )"	1043:24:38268:38299	848691	0	True				
ANR	849020	CallExpression	"SET_CURRENT_GLYPH ( penum , glyph )"		848691	0					
ANR	849021	Callee	SET_CURRENT_GLYPH		848691	0					
ANR	849022	Identifier	SET_CURRENT_GLYPH		848691	0					
ANR	849023	ArgumentList	penum		848691	1					
ANR	849024	Argument	penum		848691	0					
ANR	849025	Identifier	penum		848691	0					
ANR	849026	Argument	glyph		848691	1					
ANR	849027	Identifier	glyph		848691	0					
ANR	849028	ExpressionStatement	penum -> bytes_decoded = penum -> index - start	1044:20:38321:38364	848691	14	True				
ANR	849029	AssignmentExpression	penum -> bytes_decoded = penum -> index - start		848691	0		=			
ANR	849030	PtrMemberAccess	penum -> bytes_decoded		848691	0					
ANR	849031	Identifier	penum		848691	0					
ANR	849032	Identifier	bytes_decoded		848691	1					
ANR	849033	AdditiveExpression	penum -> index - start		848691	1		-			
ANR	849034	PtrMemberAccess	penum -> index		848691	0					
ANR	849035	Identifier	penum		848691	0					
ANR	849036	Identifier	index		848691	1					
ANR	849037	Identifier	start		848691	1					
ANR	849038	ExpressionStatement	penum -> is_pure_color = gs_color_writes_pure ( penum -> pgs )	1045:20:38386:38441	848691	15	True				
ANR	849039	AssignmentExpression	penum -> is_pure_color = gs_color_writes_pure ( penum -> pgs )		848691	0		=			
ANR	849040	PtrMemberAccess	penum -> is_pure_color		848691	0					
ANR	849041	Identifier	penum		848691	0					
ANR	849042	Identifier	is_pure_color		848691	1					
ANR	849043	CallExpression	gs_color_writes_pure ( penum -> pgs )		848691	1					
ANR	849044	Callee	gs_color_writes_pure		848691	0					
ANR	849045	Identifier	gs_color_writes_pure		848691	0					
ANR	849046	ArgumentList	penum -> pgs		848691	1					
ANR	849047	Argument	penum -> pgs		848691	0					
ANR	849048	PtrMemberAccess	penum -> pgs		848691	0					
ANR	849049	Identifier	penum		848691	0					
ANR	849050	Identifier	pgs		848691	1					
ANR	849051	CompoundStatement		75:24:3283:3311	848691	16					
ANR	849052	IdentifierDeclStatement	"int alpha_bits , depth ;"	1052:24:38826:38847	848691	0	True				
ANR	849053	IdentifierDecl	alpha_bits		848691	0					
ANR	849054	IdentifierDeclType	int		848691	0					
ANR	849055	Identifier	alpha_bits		848691	1					
ANR	849056	IdentifierDecl	depth		848691	1					
ANR	849057	IdentifierDeclType	int		848691	0					
ANR	849058	Identifier	depth		848691	1					
ANR	849059	IdentifierDeclStatement	gs_fixed_point subpix_origin ;	1053:24:38873:38901	848691	1	True				
ANR	849060	IdentifierDecl	subpix_origin		848691	0					
ANR	849061	IdentifierDeclType	gs_fixed_point		848691	0					
ANR	849062	Identifier	subpix_origin		848691	1					
ANR	849063	ExpressionStatement	"code = compute_glyph_raster_params ( penum , false , & alpha_bits , & depth , & subpix_origin , & log2_scale )"	1055:24:38928:39062	848691	2	True				
ANR	849064	AssignmentExpression	"code = compute_glyph_raster_params ( penum , false , & alpha_bits , & depth , & subpix_origin , & log2_scale )"		848691	0		=			
ANR	849065	Identifier	code		848691	0					
ANR	849066	CallExpression	"compute_glyph_raster_params ( penum , false , & alpha_bits , & depth , & subpix_origin , & log2_scale )"		848691	1					
ANR	849067	Callee	compute_glyph_raster_params		848691	0					
ANR	849068	Identifier	compute_glyph_raster_params		848691	0					
ANR	849069	ArgumentList	penum		848691	1					
ANR	849070	Argument	penum		848691	0					
ANR	849071	Identifier	penum		848691	0					
ANR	849072	Argument	false		848691	1					
ANR	849073	Identifier	false		848691	0					
ANR	849074	Argument	& alpha_bits		848691	2					
ANR	849075	UnaryOperationExpression	& alpha_bits		848691	0					
ANR	849076	UnaryOperator	&		848691	0					
ANR	849077	Identifier	alpha_bits		848691	1					
ANR	849078	Argument	& depth		848691	3					
ANR	849079	UnaryOperationExpression	& depth		848691	0					
ANR	849080	UnaryOperator	&		848691	0					
ANR	849081	Identifier	depth		848691	1					
ANR	849082	Argument	& subpix_origin		848691	4					
ANR	849083	UnaryOperationExpression	& subpix_origin		848691	0					
ANR	849084	UnaryOperator	&		848691	0					
ANR	849085	Identifier	subpix_origin		848691	1					
ANR	849086	Argument	& log2_scale		848691	5					
ANR	849087	UnaryOperationExpression	& log2_scale		848691	0					
ANR	849088	UnaryOperator	&		848691	0					
ANR	849089	Identifier	log2_scale		848691	1					
ANR	849090	IfStatement	if ( code < 0 )		848691	3					
ANR	849091	Condition	code < 0	1057:28:39092:39099	848691	0	True				
ANR	849092	RelationalExpression	code < 0		848691	0		<			
ANR	849093	Identifier	code		848691	0					
ANR	849094	PrimaryExpression	0		848691	1					
ANR	849095	ReturnStatement	return code ;	1058:28:39130:39141	848691	1	True				
ANR	849096	Identifier	code		848691	0					
ANR	849097	IfStatement	if ( pair == 0 )		848691	4					
ANR	849098	Condition	pair == 0	1059:28:39171:39179	848691	0	True				
ANR	849099	EqualityExpression	pair == 0		848691	0		==			
ANR	849100	Identifier	pair		848691	0					
ANR	849101	PrimaryExpression	0		848691	1					
ANR	849102	CompoundStatement		81:39:3592:3592	848691	1					
ANR	849103	ExpressionStatement	"code = gx_lookup_fm_pair ( pfont , & char_tm_only ( pgs ) , & log2_scale , penum -> charpath_flag != cpm_show , & pair )"	1060:28:39212:39349	848691	0	True				
ANR	849104	AssignmentExpression	"code = gx_lookup_fm_pair ( pfont , & char_tm_only ( pgs ) , & log2_scale , penum -> charpath_flag != cpm_show , & pair )"		848691	0		=			
ANR	849105	Identifier	code		848691	0					
ANR	849106	CallExpression	"gx_lookup_fm_pair ( pfont , & char_tm_only ( pgs ) , & log2_scale , penum -> charpath_flag != cpm_show , & pair )"		848691	1					
ANR	849107	Callee	gx_lookup_fm_pair		848691	0					
ANR	849108	Identifier	gx_lookup_fm_pair		848691	0					
ANR	849109	ArgumentList	pfont		848691	1					
ANR	849110	Argument	pfont		848691	0					
ANR	849111	Identifier	pfont		848691	0					
ANR	849112	Argument	& char_tm_only ( pgs )		848691	1					
ANR	849113	UnaryOperationExpression	& char_tm_only ( pgs )		848691	0					
ANR	849114	UnaryOperator	&		848691	0					
ANR	849115	CallExpression	char_tm_only ( pgs )		848691	1					
ANR	849116	Callee	char_tm_only		848691	0					
ANR	849117	Identifier	char_tm_only		848691	0					
ANR	849118	ArgumentList	pgs		848691	1					
ANR	849119	Argument	pgs		848691	0					
ANR	849120	Identifier	pgs		848691	0					
ANR	849121	Argument	& log2_scale		848691	2					
ANR	849122	UnaryOperationExpression	& log2_scale		848691	0					
ANR	849123	UnaryOperator	&		848691	0					
ANR	849124	Identifier	log2_scale		848691	1					
ANR	849125	Argument	penum -> charpath_flag != cpm_show		848691	3					
ANR	849126	EqualityExpression	penum -> charpath_flag != cpm_show		848691	0		!=			
ANR	849127	PtrMemberAccess	penum -> charpath_flag		848691	0					
ANR	849128	Identifier	penum		848691	0					
ANR	849129	Identifier	charpath_flag		848691	1					
ANR	849130	Identifier	cpm_show		848691	1					
ANR	849131	Argument	& pair		848691	4					
ANR	849132	UnaryOperationExpression	& pair		848691	0					
ANR	849133	UnaryOperator	&		848691	0					
ANR	849134	Identifier	pair		848691	1					
ANR	849135	IfStatement	if ( code < 0 )		848691	1					
ANR	849136	Condition	code < 0	1062:32:39383:39390	848691	0	True				
ANR	849137	RelationalExpression	code < 0		848691	0		<			
ANR	849138	Identifier	code		848691	0					
ANR	849139	PrimaryExpression	0		848691	1					
ANR	849140	ReturnStatement	return code ;	1063:32:39425:39436	848691	1	True				
ANR	849141	Identifier	code		848691	0					
ANR	849142	ExpressionStatement	penum -> pair = pair	1065:24:39488:39506	848691	5	True				
ANR	849143	AssignmentExpression	penum -> pair = pair		848691	0		=			
ANR	849144	PtrMemberAccess	penum -> pair		848691	0					
ANR	849145	Identifier	penum		848691	0					
ANR	849146	Identifier	pair		848691	1					
ANR	849147	Identifier	pair		848691	1					
ANR	849148	IfStatement	"if ( glyph == GS_NO_GLYPH || SHOW_IS_ALL_OF ( penum , TEXT_NO_CACHE ) )"		848691	6					
ANR	849149	Condition	"glyph == GS_NO_GLYPH || SHOW_IS_ALL_OF ( penum , TEXT_NO_CACHE )"	1066:28:39536:39595	848691	0	True				
ANR	849150	OrExpression	"glyph == GS_NO_GLYPH || SHOW_IS_ALL_OF ( penum , TEXT_NO_CACHE )"		848691	0		||			
ANR	849151	EqualityExpression	glyph == GS_NO_GLYPH		848691	0		==			
ANR	849152	Identifier	glyph		848691	0					
ANR	849153	Identifier	GS_NO_GLYPH		848691	1					
ANR	849154	CallExpression	"SHOW_IS_ALL_OF ( penum , TEXT_NO_CACHE )"		848691	1					
ANR	849155	Callee	SHOW_IS_ALL_OF		848691	0					
ANR	849156	Identifier	SHOW_IS_ALL_OF		848691	0					
ANR	849157	ArgumentList	penum		848691	1					
ANR	849158	Argument	penum		848691	0					
ANR	849159	Identifier	penum		848691	0					
ANR	849160	Argument	TEXT_NO_CACHE		848691	1					
ANR	849161	Identifier	TEXT_NO_CACHE		848691	0					
ANR	849162	CompoundStatement		88:90:4008:4008	848691	1					
ANR	849163	ExpressionStatement	cc = 0	1067:28:39628:39634	848691	0	True				
ANR	849164	AssignmentExpression	cc = 0		848691	0		=			
ANR	849165	Identifier	cc		848691	0					
ANR	849166	PrimaryExpression	0		848691	1					
ANR	849167	GotoStatement	goto no_cache ;	1068:28:39664:39677	848691	1	True				
ANR	849168	Identifier	no_cache		848691	0					
ANR	849169	ExpressionStatement	"cc = gx_lookup_cached_char ( pfont , pair , glyph , wmode , depth , & subpix_origin )"	1070:24:39729:39856	848691	7	True				
ANR	849170	AssignmentExpression	"cc = gx_lookup_cached_char ( pfont , pair , glyph , wmode , depth , & subpix_origin )"		848691	0		=			
ANR	849171	Identifier	cc		848691	0					
ANR	849172	CallExpression	"gx_lookup_cached_char ( pfont , pair , glyph , wmode , depth , & subpix_origin )"		848691	1					
ANR	849173	Callee	gx_lookup_cached_char		848691	0					
ANR	849174	Identifier	gx_lookup_cached_char		848691	0					
ANR	849175	ArgumentList	pfont		848691	1					
ANR	849176	Argument	pfont		848691	0					
ANR	849177	Identifier	pfont		848691	0					
ANR	849178	Argument	pair		848691	1					
ANR	849179	Identifier	pair		848691	0					
ANR	849180	Argument	glyph		848691	2					
ANR	849181	Identifier	glyph		848691	0					
ANR	849182	Argument	wmode		848691	3					
ANR	849183	Identifier	wmode		848691	0					
ANR	849184	Argument	depth		848691	4					
ANR	849185	Identifier	depth		848691	0					
ANR	849186	Argument	& subpix_origin		848691	5					
ANR	849187	UnaryOperationExpression	& subpix_origin		848691	0					
ANR	849188	UnaryOperator	&		848691	0					
ANR	849189	Identifier	subpix_origin		848691	1					
ANR	849190	IfStatement	if ( cc == 0 )		848691	17					
ANR	849191	Condition	cc == 0	1073:24:39904:39910	848691	0	True				
ANR	849192	EqualityExpression	cc == 0		848691	0		==			
ANR	849193	Identifier	cc		848691	0					
ANR	849194	PrimaryExpression	0		848691	1					
ANR	849195	CompoundStatement		95:33:4323:4323	848691	1					
ANR	849196	GotoStatement	goto no_cache ;	1074:24:39939:39952	848691	0	True				
ANR	849197	Identifier	no_cache		848691	0					
ANR	849198	IfStatement	if ( penum -> charpath_flag == cpm_charwidth )		848691	18					
ANR	849199	Condition	penum -> charpath_flag == cpm_charwidth	1079:24:40169:40205	848691	0	True				
ANR	849200	EqualityExpression	penum -> charpath_flag == cpm_charwidth		848691	0		==			
ANR	849201	PtrMemberAccess	penum -> charpath_flag		848691	0					
ANR	849202	Identifier	penum		848691	0					
ANR	849203	Identifier	charpath_flag		848691	1					
ANR	849204	Identifier	cpm_charwidth		848691	1					
ANR	849205	CompoundStatement		101:63:4618:4618	848691	1					
ANR	849206	ExpressionStatement	DO_NOTHING	1081:24:40308:40318	848691	0	True				
ANR	849207	Identifier	DO_NOTHING		848691	0					
ANR	849208	ElseStatement	else		848691	0					
ANR	849209	IfStatement	if ( penum -> charpath_flag != cpm_show )		848691	0					
ANR	849210	Condition	penum -> charpath_flag != cpm_show	1082:31:40351:40382	848691	0	True				
ANR	849211	EqualityExpression	penum -> charpath_flag != cpm_show		848691	0		!=			
ANR	849212	PtrMemberAccess	penum -> charpath_flag		848691	0					
ANR	849213	Identifier	penum		848691	0					
ANR	849214	Identifier	charpath_flag		848691	1					
ANR	849215	Identifier	cpm_show		848691	1					
ANR	849216	CompoundStatement		109:24:5034:5058	848691	1					
ANR	849217	IdentifierDeclStatement	gx_path box_path ;	1085:24:40539:40555	848691	0	True				
ANR	849218	IdentifierDecl	box_path		848691	0					
ANR	849219	IdentifierDeclType	gx_path		848691	0					
ANR	849220	Identifier	box_path		848691	1					
ANR	849221	IdentifierDeclStatement	gs_fixed_point pt ;	1086:24:40581:40598	848691	1	True				
ANR	849222	IdentifierDecl	pt		848691	0					
ANR	849223	IdentifierDeclType	gs_fixed_point		848691	0					
ANR	849224	Identifier	pt		848691	1					
ANR	849225	IdentifierDeclStatement	"fixed llx , lly , urx , ury ;"	1087:24:40624:40648	848691	2	True				
ANR	849226	IdentifierDecl	llx		848691	0					
ANR	849227	IdentifierDeclType	fixed		848691	0					
ANR	849228	Identifier	llx		848691	1					
ANR	849229	IdentifierDecl	lly		848691	1					
ANR	849230	IdentifierDeclType	fixed		848691	0					
ANR	849231	Identifier	lly		848691	1					
ANR	849232	IdentifierDecl	urx		848691	2					
ANR	849233	IdentifierDeclType	fixed		848691	0					
ANR	849234	Identifier	urx		848691	1					
ANR	849235	IdentifierDecl	ury		848691	3					
ANR	849236	IdentifierDeclType	fixed		848691	0					
ANR	849237	Identifier	ury		848691	1					
ANR	849238	ExpressionStatement	"code = gx_path_current_point ( pgs -> path , & pt )"	1089:24:40675:40719	848691	3	True				
ANR	849239	AssignmentExpression	"code = gx_path_current_point ( pgs -> path , & pt )"		848691	0		=			
ANR	849240	Identifier	code		848691	0					
ANR	849241	CallExpression	"gx_path_current_point ( pgs -> path , & pt )"		848691	1					
ANR	849242	Callee	gx_path_current_point		848691	0					
ANR	849243	Identifier	gx_path_current_point		848691	0					
ANR	849244	ArgumentList	pgs -> path		848691	1					
ANR	849245	Argument	pgs -> path		848691	0					
ANR	849246	PtrMemberAccess	pgs -> path		848691	0					
ANR	849247	Identifier	pgs		848691	0					
ANR	849248	Identifier	path		848691	1					
ANR	849249	Argument	& pt		848691	1					
ANR	849250	UnaryOperationExpression	& pt		848691	0					
ANR	849251	UnaryOperator	&		848691	0					
ANR	849252	Identifier	pt		848691	1					
ANR	849253	IfStatement	if ( code < 0 )		848691	4					
ANR	849254	Condition	code < 0	1090:28:40749:40756	848691	0	True				
ANR	849255	RelationalExpression	code < 0		848691	0		<			
ANR	849256	Identifier	code		848691	0					
ANR	849257	PrimaryExpression	0		848691	1					
ANR	849258	ReturnStatement	return code ;	1091:28:40787:40798	848691	1	True				
ANR	849259	Identifier	code		848691	0					
ANR	849260	ExpressionStatement	llx = fixed_rounded ( pt . x - cc -> offset . x ) + int2fixed ( penum -> ftx )	1092:24:40824:40916	848691	5	True				
ANR	849261	AssignmentExpression	llx = fixed_rounded ( pt . x - cc -> offset . x ) + int2fixed ( penum -> ftx )		848691	0		=			
ANR	849262	Identifier	llx		848691	0					
ANR	849263	AdditiveExpression	fixed_rounded ( pt . x - cc -> offset . x ) + int2fixed ( penum -> ftx )		848691	1		+			
ANR	849264	CallExpression	fixed_rounded ( pt . x - cc -> offset . x )		848691	0					
ANR	849265	Callee	fixed_rounded		848691	0					
ANR	849266	Identifier	fixed_rounded		848691	0					
ANR	849267	ArgumentList	pt . x - cc -> offset . x		848691	1					
ANR	849268	Argument	pt . x - cc -> offset . x		848691	0					
ANR	849269	AdditiveExpression	pt . x - cc -> offset . x		848691	0		-			
ANR	849270	MemberAccess	pt . x		848691	0					
ANR	849271	Identifier	pt		848691	0					
ANR	849272	Identifier	x		848691	1					
ANR	849273	MemberAccess	cc -> offset . x		848691	1					
ANR	849274	PtrMemberAccess	cc -> offset		848691	0					
ANR	849275	Identifier	cc		848691	0					
ANR	849276	Identifier	offset		848691	1					
ANR	849277	Identifier	x		848691	1					
ANR	849278	CallExpression	int2fixed ( penum -> ftx )		848691	1					
ANR	849279	Callee	int2fixed		848691	0					
ANR	849280	Identifier	int2fixed		848691	0					
ANR	849281	ArgumentList	penum -> ftx		848691	1					
ANR	849282	Argument	penum -> ftx		848691	0					
ANR	849283	PtrMemberAccess	penum -> ftx		848691	0					
ANR	849284	Identifier	penum		848691	0					
ANR	849285	Identifier	ftx		848691	1					
ANR	849286	ExpressionStatement	lly = fixed_rounded ( pt . y - cc -> offset . y ) + int2fixed ( penum -> fty )	1094:24:40942:41034	848691	6	True				
ANR	849287	AssignmentExpression	lly = fixed_rounded ( pt . y - cc -> offset . y ) + int2fixed ( penum -> fty )		848691	0		=			
ANR	849288	Identifier	lly		848691	0					
ANR	849289	AdditiveExpression	fixed_rounded ( pt . y - cc -> offset . y ) + int2fixed ( penum -> fty )		848691	1		+			
ANR	849290	CallExpression	fixed_rounded ( pt . y - cc -> offset . y )		848691	0					
ANR	849291	Callee	fixed_rounded		848691	0					
ANR	849292	Identifier	fixed_rounded		848691	0					
ANR	849293	ArgumentList	pt . y - cc -> offset . y		848691	1					
ANR	849294	Argument	pt . y - cc -> offset . y		848691	0					
ANR	849295	AdditiveExpression	pt . y - cc -> offset . y		848691	0		-			
ANR	849296	MemberAccess	pt . y		848691	0					
ANR	849297	Identifier	pt		848691	0					
ANR	849298	Identifier	y		848691	1					
ANR	849299	MemberAccess	cc -> offset . y		848691	1					
ANR	849300	PtrMemberAccess	cc -> offset		848691	0					
ANR	849301	Identifier	cc		848691	0					
ANR	849302	Identifier	offset		848691	1					
ANR	849303	Identifier	y		848691	1					
ANR	849304	CallExpression	int2fixed ( penum -> fty )		848691	1					
ANR	849305	Callee	int2fixed		848691	0					
ANR	849306	Identifier	int2fixed		848691	0					
ANR	849307	ArgumentList	penum -> fty		848691	1					
ANR	849308	Argument	penum -> fty		848691	0					
ANR	849309	PtrMemberAccess	penum -> fty		848691	0					
ANR	849310	Identifier	penum		848691	0					
ANR	849311	Identifier	fty		848691	1					
ANR	849312	ExpressionStatement	"urx = llx + int2fixed ( cc -> width ) , ury = lly + int2fixed ( cc -> height )"	1096:24:41060:41155	848691	7	True				
ANR	849313	Expression	"urx = llx + int2fixed ( cc -> width ) , ury = lly + int2fixed ( cc -> height )"		848691	0					
ANR	849314	AssignmentExpression	urx = llx + int2fixed ( cc -> width )		848691	0		=			
ANR	849315	Identifier	urx		848691	0					
ANR	849316	AdditiveExpression	llx + int2fixed ( cc -> width )		848691	1		+			
ANR	849317	Identifier	llx		848691	0					
ANR	849318	CallExpression	int2fixed ( cc -> width )		848691	1					
ANR	849319	Callee	int2fixed		848691	0					
ANR	849320	Identifier	int2fixed		848691	0					
ANR	849321	ArgumentList	cc -> width		848691	1					
ANR	849322	Argument	cc -> width		848691	0					
ANR	849323	PtrMemberAccess	cc -> width		848691	0					
ANR	849324	Identifier	cc		848691	0					
ANR	849325	Identifier	width		848691	1					
ANR	849326	AssignmentExpression	ury = lly + int2fixed ( cc -> height )		848691	1		=			
ANR	849327	Identifier	ury		848691	0					
ANR	849328	AdditiveExpression	lly + int2fixed ( cc -> height )		848691	1		+			
ANR	849329	Identifier	lly		848691	0					
ANR	849330	CallExpression	int2fixed ( cc -> height )		848691	1					
ANR	849331	Callee	int2fixed		848691	0					
ANR	849332	Identifier	int2fixed		848691	0					
ANR	849333	ArgumentList	cc -> height		848691	1					
ANR	849334	Argument	cc -> height		848691	0					
ANR	849335	PtrMemberAccess	cc -> height		848691	0					
ANR	849336	Identifier	cc		848691	0					
ANR	849337	Identifier	height		848691	1					
ANR	849338	ExpressionStatement	"gx_path_init_local ( & box_path , pgs -> memory )"	1098:24:41181:41223	848691	8	True				
ANR	849339	CallExpression	"gx_path_init_local ( & box_path , pgs -> memory )"		848691	0					
ANR	849340	Callee	gx_path_init_local		848691	0					
ANR	849341	Identifier	gx_path_init_local		848691	0					
ANR	849342	ArgumentList	& box_path		848691	1					
ANR	849343	Argument	& box_path		848691	0					
ANR	849344	UnaryOperationExpression	& box_path		848691	0					
ANR	849345	UnaryOperator	&		848691	0					
ANR	849346	Identifier	box_path		848691	1					
ANR	849347	Argument	pgs -> memory		848691	1					
ANR	849348	PtrMemberAccess	pgs -> memory		848691	0					
ANR	849349	Identifier	pgs		848691	0					
ANR	849350	Identifier	memory		848691	1					
ANR	849351	ExpressionStatement	"code = gx_path_add_rectangle ( & box_path , llx , lly , urx , ury )"	1099:24:41249:41386	848691	9	True				
ANR	849352	AssignmentExpression	"code = gx_path_add_rectangle ( & box_path , llx , lly , urx , ury )"		848691	0		=			
ANR	849353	Identifier	code		848691	0					
ANR	849354	CallExpression	"gx_path_add_rectangle ( & box_path , llx , lly , urx , ury )"		848691	1					
ANR	849355	Callee	gx_path_add_rectangle		848691	0					
ANR	849356	Identifier	gx_path_add_rectangle		848691	0					
ANR	849357	ArgumentList	& box_path		848691	1					
ANR	849358	Argument	& box_path		848691	0					
ANR	849359	UnaryOperationExpression	& box_path		848691	0					
ANR	849360	UnaryOperator	&		848691	0					
ANR	849361	Identifier	box_path		848691	1					
ANR	849362	Argument	llx		848691	1					
ANR	849363	Identifier	llx		848691	0					
ANR	849364	Argument	lly		848691	2					
ANR	849365	Identifier	lly		848691	0					
ANR	849366	Argument	urx		848691	3					
ANR	849367	Identifier	urx		848691	0					
ANR	849368	Argument	ury		848691	4					
ANR	849369	Identifier	ury		848691	0					
ANR	849370	IfStatement	if ( code >= 0 )		848691	10					
ANR	849371	Condition	code >= 0	1102:28:41416:41424	848691	0	True				
ANR	849372	RelationalExpression	code >= 0		848691	0		>=			
ANR	849373	Identifier	code		848691	0					
ANR	849374	PrimaryExpression	0		848691	1					
ANR	849375	ExpressionStatement	"code = gx_path_add_char_path ( pgs -> show_gstate -> path , & box_path , penum -> charpath_flag )"	1103:28:41455:41680	848691	1	True				
ANR	849376	AssignmentExpression	"code = gx_path_add_char_path ( pgs -> show_gstate -> path , & box_path , penum -> charpath_flag )"		848691	0		=			
ANR	849377	Identifier	code		848691	0					
ANR	849378	CallExpression	"gx_path_add_char_path ( pgs -> show_gstate -> path , & box_path , penum -> charpath_flag )"		848691	1					
ANR	849379	Callee	gx_path_add_char_path		848691	0					
ANR	849380	Identifier	gx_path_add_char_path		848691	0					
ANR	849381	ArgumentList	pgs -> show_gstate -> path		848691	1					
ANR	849382	Argument	pgs -> show_gstate -> path		848691	0					
ANR	849383	PtrMemberAccess	pgs -> show_gstate -> path		848691	0					
ANR	849384	PtrMemberAccess	pgs -> show_gstate		848691	0					
ANR	849385	Identifier	pgs		848691	0					
ANR	849386	Identifier	show_gstate		848691	1					
ANR	849387	Identifier	path		848691	1					
ANR	849388	Argument	& box_path		848691	1					
ANR	849389	UnaryOperationExpression	& box_path		848691	0					
ANR	849390	UnaryOperator	&		848691	0					
ANR	849391	Identifier	box_path		848691	1					
ANR	849392	Argument	penum -> charpath_flag		848691	2					
ANR	849393	PtrMemberAccess	penum -> charpath_flag		848691	0					
ANR	849394	Identifier	penum		848691	0					
ANR	849395	Identifier	charpath_flag		848691	1					
ANR	849396	IfStatement	if ( code >= 0 )		848691	11					
ANR	849397	Condition	code >= 0	1107:28:41710:41718	848691	0	True				
ANR	849398	RelationalExpression	code >= 0		848691	0		>=			
ANR	849399	Identifier	code		848691	0					
ANR	849400	PrimaryExpression	0		848691	1					
ANR	849401	ExpressionStatement	"code = gx_path_add_point ( pgs -> path , pt . x , pt . y )"	1108:28:41749:41796	848691	1	True				
ANR	849402	AssignmentExpression	"code = gx_path_add_point ( pgs -> path , pt . x , pt . y )"		848691	0		=			
ANR	849403	Identifier	code		848691	0					
ANR	849404	CallExpression	"gx_path_add_point ( pgs -> path , pt . x , pt . y )"		848691	1					
ANR	849405	Callee	gx_path_add_point		848691	0					
ANR	849406	Identifier	gx_path_add_point		848691	0					
ANR	849407	ArgumentList	pgs -> path		848691	1					
ANR	849408	Argument	pgs -> path		848691	0					
ANR	849409	PtrMemberAccess	pgs -> path		848691	0					
ANR	849410	Identifier	pgs		848691	0					
ANR	849411	Identifier	path		848691	1					
ANR	849412	Argument	pt . x		848691	1					
ANR	849413	MemberAccess	pt . x		848691	0					
ANR	849414	Identifier	pt		848691	0					
ANR	849415	Identifier	x		848691	1					
ANR	849416	Argument	pt . y		848691	2					
ANR	849417	MemberAccess	pt . y		848691	0					
ANR	849418	Identifier	pt		848691	0					
ANR	849419	Identifier	y		848691	1					
ANR	849420	ExpressionStatement	"gx_path_free ( & box_path , ""show_proceed(box path)"" )"	1109:24:41822:41871	848691	12	True				
ANR	849421	CallExpression	"gx_path_free ( & box_path , ""show_proceed(box path)"" )"		848691	0					
ANR	849422	Callee	gx_path_free		848691	0					
ANR	849423	Identifier	gx_path_free		848691	0					
ANR	849424	ArgumentList	& box_path		848691	1					
ANR	849425	Argument	& box_path		848691	0					
ANR	849426	UnaryOperationExpression	& box_path		848691	0					
ANR	849427	UnaryOperator	&		848691	0					
ANR	849428	Identifier	box_path		848691	1					
ANR	849429	Argument	"""show_proceed(box path)"""		848691	1					
ANR	849430	PrimaryExpression	"""show_proceed(box path)"""		848691	0					
ANR	849431	IfStatement	if ( code < 0 )		848691	13					
ANR	849432	Condition	code < 0	1110:28:41901:41908	848691	0	True				
ANR	849433	RelationalExpression	code < 0		848691	0		<			
ANR	849434	Identifier	code		848691	0					
ANR	849435	PrimaryExpression	0		848691	1					
ANR	849436	ReturnStatement	return code ;	1111:28:41939:41950	848691	1	True				
ANR	849437	Identifier	code		848691	0					
ANR	849438	ElseStatement	else		848691	0					
ANR	849439	IfStatement	if ( SHOW_IS_DRAWING ( penum ) )		848691	0					
ANR	849440	Condition	SHOW_IS_DRAWING ( penum )	1112:31:41983:42004	848691	0	True				
ANR	849441	CallExpression	SHOW_IS_DRAWING ( penum )		848691	0					
ANR	849442	Callee	SHOW_IS_DRAWING		848691	0					
ANR	849443	Identifier	SHOW_IS_DRAWING		848691	0					
ANR	849444	ArgumentList	penum		848691	1					
ANR	849445	Argument	penum		848691	0					
ANR	849446	Identifier	penum		848691	0					
ANR	849447	CompoundStatement		134:55:6417:6417	848691	1					
ANR	849448	ExpressionStatement	"code = gx_image_cached_char ( penum , cc )"	1113:24:42033:42071	848691	0	True				
ANR	849449	AssignmentExpression	"code = gx_image_cached_char ( penum , cc )"		848691	0		=			
ANR	849450	Identifier	code		848691	0					
ANR	849451	CallExpression	"gx_image_cached_char ( penum , cc )"		848691	1					
ANR	849452	Callee	gx_image_cached_char		848691	0					
ANR	849453	Identifier	gx_image_cached_char		848691	0					
ANR	849454	ArgumentList	penum		848691	1					
ANR	849455	Argument	penum		848691	0					
ANR	849456	Identifier	penum		848691	0					
ANR	849457	Argument	cc		848691	1					
ANR	849458	Identifier	cc		848691	0					
ANR	849459	IfStatement	if ( code < 0 )		848691	1					
ANR	849460	Condition	code < 0	1114:28:42101:42108	848691	0	True				
ANR	849461	RelationalExpression	code < 0		848691	0		<			
ANR	849462	Identifier	code		848691	0					
ANR	849463	PrimaryExpression	0		848691	1					
ANR	849464	ReturnStatement	return code ;	1115:28:42139:42150	848691	1	True				
ANR	849465	Identifier	code		848691	0					
ANR	849466	ElseStatement	else		848691	0					
ANR	849467	IfStatement	if ( code > 0 )		848691	0					
ANR	849468	Condition	code > 0	1116:33:42185:42192	848691	0	True				
ANR	849469	RelationalExpression	code > 0		848691	0		>			
ANR	849470	Identifier	code		848691	0					
ANR	849471	PrimaryExpression	0		848691	1					
ANR	849472	CompoundStatement		138:43:6605:6605	848691	1					
ANR	849473	ExpressionStatement	cc = 0	1117:28:42225:42231	848691	0	True				
ANR	849474	AssignmentExpression	cc = 0		848691	0		=			
ANR	849475	Identifier	cc		848691	0					
ANR	849476	PrimaryExpression	0		848691	1					
ANR	849477	GotoStatement	goto no_cache ;	1118:28:42261:42274	848691	1	True				
ANR	849478	Identifier	no_cache		848691	0					
ANR	849479	ExpressionStatement	penum -> use_wxy_float = false	1121:20:42344:42372	848691	19	True				
ANR	849480	AssignmentExpression	penum -> use_wxy_float = false		848691	0		=			
ANR	849481	PtrMemberAccess	penum -> use_wxy_float		848691	0					
ANR	849482	Identifier	penum		848691	0					
ANR	849483	Identifier	use_wxy_float		848691	1					
ANR	849484	Identifier	false		848691	1					
ANR	849485	ExpressionStatement	penum -> wxy_float . x = penum -> wxy_float . y = 0	1122:20:42394:42437	848691	20	True				
ANR	849486	AssignmentExpression	penum -> wxy_float . x = penum -> wxy_float . y = 0		848691	0		=			
ANR	849487	MemberAccess	penum -> wxy_float . x		848691	0					
ANR	849488	PtrMemberAccess	penum -> wxy_float		848691	0					
ANR	849489	Identifier	penum		848691	0					
ANR	849490	Identifier	wxy_float		848691	1					
ANR	849491	Identifier	x		848691	1					
ANR	849492	AssignmentExpression	penum -> wxy_float . y = 0		848691	1		=			
ANR	849493	MemberAccess	penum -> wxy_float . y		848691	0					
ANR	849494	PtrMemberAccess	penum -> wxy_float		848691	0					
ANR	849495	Identifier	penum		848691	0					
ANR	849496	Identifier	wxy_float		848691	1					
ANR	849497	Identifier	y		848691	1					
ANR	849498	PrimaryExpression	0		848691	1					
ANR	849499	IfStatement	if ( SHOW_IS_SLOW ( penum ) )		848691	21					
ANR	849500	Condition	SHOW_IS_SLOW ( penum )	1123:24:42463:42481	848691	0	True				
ANR	849501	CallExpression	SHOW_IS_SLOW ( penum )		848691	0					
ANR	849502	Callee	SHOW_IS_SLOW		848691	0					
ANR	849503	Identifier	SHOW_IS_SLOW		848691	0					
ANR	849504	ArgumentList	penum		848691	1					
ANR	849505	Argument	penum		848691	0					
ANR	849506	Identifier	penum		848691	0					
ANR	849507	CompoundStatement		145:45:6894:6894	848691	1					
ANR	849508	ExpressionStatement	penum -> wxy . x = cc -> wxy . x	1126:24:42645:42669	848691	0	True				
ANR	849509	AssignmentExpression	penum -> wxy . x = cc -> wxy . x		848691	0		=			
ANR	849510	MemberAccess	penum -> wxy . x		848691	0					
ANR	849511	PtrMemberAccess	penum -> wxy		848691	0					
ANR	849512	Identifier	penum		848691	0					
ANR	849513	Identifier	wxy		848691	1					
ANR	849514	Identifier	x		848691	1					
ANR	849515	MemberAccess	cc -> wxy . x		848691	1					
ANR	849516	PtrMemberAccess	cc -> wxy		848691	0					
ANR	849517	Identifier	cc		848691	0					
ANR	849518	Identifier	wxy		848691	1					
ANR	849519	Identifier	x		848691	1					
ANR	849520	ExpressionStatement	penum -> wxy . y = cc -> wxy . y	1127:24:42695:42719	848691	1	True				
ANR	849521	AssignmentExpression	penum -> wxy . y = cc -> wxy . y		848691	0		=			
ANR	849522	MemberAccess	penum -> wxy . y		848691	0					
ANR	849523	PtrMemberAccess	penum -> wxy		848691	0					
ANR	849524	Identifier	penum		848691	0					
ANR	849525	Identifier	wxy		848691	1					
ANR	849526	Identifier	y		848691	1					
ANR	849527	MemberAccess	cc -> wxy . y		848691	1					
ANR	849528	PtrMemberAccess	cc -> wxy		848691	0					
ANR	849529	Identifier	cc		848691	0					
ANR	849530	Identifier	wxy		848691	1					
ANR	849531	Identifier	y		848691	1					
ANR	849532	ExpressionStatement	code = show_move ( penum )	1128:24:42745:42768	848691	2	True				
ANR	849533	AssignmentExpression	code = show_move ( penum )		848691	0		=			
ANR	849534	Identifier	code		848691	0					
ANR	849535	CallExpression	show_move ( penum )		848691	1					
ANR	849536	Callee	show_move		848691	0					
ANR	849537	Identifier	show_move		848691	0					
ANR	849538	ArgumentList	penum		848691	1					
ANR	849539	Argument	penum		848691	0					
ANR	849540	Identifier	penum		848691	0					
ANR	849541	ElseStatement	else		848691	0					
ANR	849542	ExpressionStatement	"code = show_fast_move ( pgs , & cc -> wxy )"	1130:24:42821:42857	848691	0	True				
ANR	849543	AssignmentExpression	"code = show_fast_move ( pgs , & cc -> wxy )"		848691	0		=			
ANR	849544	Identifier	code		848691	0					
ANR	849545	CallExpression	"show_fast_move ( pgs , & cc -> wxy )"		848691	1					
ANR	849546	Callee	show_fast_move		848691	0					
ANR	849547	Identifier	show_fast_move		848691	0					
ANR	849548	ArgumentList	pgs		848691	1					
ANR	849549	Argument	pgs		848691	0					
ANR	849550	Identifier	pgs		848691	0					
ANR	849551	Argument	& cc -> wxy		848691	1					
ANR	849552	UnaryOperationExpression	& cc -> wxy		848691	0					
ANR	849553	UnaryOperator	&		848691	0					
ANR	849554	PtrMemberAccess	cc -> wxy		848691	1					
ANR	849555	Identifier	cc		848691	0					
ANR	849556	Identifier	wxy		848691	1					
ANR	849557	IfStatement	if ( code )		848691	22					
ANR	849558	Condition	code	1131:24:42883:42886	848691	0	True				
ANR	849559	Identifier	code		848691	0					
ANR	849560	CompoundStatement		153:30:7299:7299	848691	1					
ANR	849561	ReturnStatement	return code ;	1133:24:42984:42995	848691	0	True				
ANR	849562	Identifier	code		848691	0					
ANR	849563	ElseStatement	else		848691	0					
ANR	849564	CompoundStatement		159:11:7464:7464	848691	0					
ANR	849565	ExpressionStatement	start = penum -> index	1138:8:43064:43084	848691	0	True				
ANR	849566	AssignmentExpression	start = penum -> index		848691	0		=			
ANR	849567	Identifier	start		848691	0					
ANR	849568	PtrMemberAccess	penum -> index		848691	1					
ANR	849569	Identifier	penum		848691	0					
ANR	849570	Identifier	index		848691	1					
ANR	849571	SwitchStatement	"switch ( ( code = get_next_char_glyph ( ( gs_text_enum_t * ) penum , & chr , & glyph ) ) )"		848691	1					
ANR	849572	Condition	"code = get_next_char_glyph ( ( gs_text_enum_t * ) penum , & chr , & glyph )"	1140:16:43132:43242	848691	0	True				
ANR	849573	AssignmentExpression	"code = get_next_char_glyph ( ( gs_text_enum_t * ) penum , & chr , & glyph )"		848691	0		=			
ANR	849574	Identifier	code		848691	0					
ANR	849575	CallExpression	"get_next_char_glyph ( ( gs_text_enum_t * ) penum , & chr , & glyph )"		848691	1					
ANR	849576	Callee	get_next_char_glyph		848691	0					
ANR	849577	Identifier	get_next_char_glyph		848691	0					
ANR	849578	ArgumentList	( gs_text_enum_t * ) penum		848691	1					
ANR	849579	Argument	( gs_text_enum_t * ) penum		848691	0					
ANR	849580	CastExpression	( gs_text_enum_t * ) penum		848691	0					
ANR	849581	CastTarget	gs_text_enum_t *		848691	0					
ANR	849582	Identifier	penum		848691	1					
ANR	849583	Argument	& chr		848691	1					
ANR	849584	UnaryOperationExpression	& chr		848691	0					
ANR	849585	UnaryOperator	&		848691	0					
ANR	849586	Identifier	chr		848691	1					
ANR	849587	Argument	& glyph		848691	2					
ANR	849588	UnaryOperationExpression	& glyph		848691	0					
ANR	849589	UnaryOperator	&		848691	0					
ANR	849590	Identifier	glyph		848691	1					
ANR	849591	CompoundStatement		164:18:7672:7672	848691	1					
ANR	849592	Label	default :	1143:12:43276:43283	848691	0	True				
ANR	849593	Identifier	default		848691	0					
ANR	849594	ReturnStatement	return code ;	1144:16:43301:43312	848691	1	True				
ANR	849595	Identifier	code		848691	0					
ANR	849596	Label	case 2 :	1145:12:43326:43332	848691	2	True				
ANR	849597	ReturnStatement	return show_finish ( penum ) ;	1146:16:43350:43375	848691	3	True				
ANR	849598	CallExpression	show_finish ( penum )		848691	0					
ANR	849599	Callee	show_finish		848691	0					
ANR	849600	Identifier	show_finish		848691	0					
ANR	849601	ArgumentList	penum		848691	1					
ANR	849602	Argument	penum		848691	0					
ANR	849603	Identifier	penum		848691	0					
ANR	849604	Label	case 1 :	1147:12:43389:43395	848691	4	True				
ANR	849605	ExpressionStatement	pfont = penum -> fstack . items [ penum -> fstack . depth ] . font	1148:16:43413:43466	848691	5	True				
ANR	849606	AssignmentExpression	pfont = penum -> fstack . items [ penum -> fstack . depth ] . font		848691	0		=			
ANR	849607	Identifier	pfont		848691	0					
ANR	849608	MemberAccess	penum -> fstack . items [ penum -> fstack . depth ] . font		848691	1					
ANR	849609	ArrayIndexing	penum -> fstack . items [ penum -> fstack . depth ]		848691	0					
ANR	849610	MemberAccess	penum -> fstack . items		848691	0					
ANR	849611	PtrMemberAccess	penum -> fstack		848691	0					
ANR	849612	Identifier	penum		848691	0					
ANR	849613	Identifier	fstack		848691	1					
ANR	849614	Identifier	items		848691	1					
ANR	849615	MemberAccess	penum -> fstack . depth		848691	1					
ANR	849616	PtrMemberAccess	penum -> fstack		848691	0					
ANR	849617	Identifier	penum		848691	0					
ANR	849618	Identifier	fstack		848691	1					
ANR	849619	Identifier	depth		848691	1					
ANR	849620	Identifier	font		848691	1					
ANR	849621	ExpressionStatement	penum -> current_font = pfont	1149:16:43484:43511	848691	6	True				
ANR	849622	AssignmentExpression	penum -> current_font = pfont		848691	0		=			
ANR	849623	PtrMemberAccess	penum -> current_font		848691	0					
ANR	849624	Identifier	penum		848691	0					
ANR	849625	Identifier	current_font		848691	1					
ANR	849626	Identifier	pfont		848691	1					
ANR	849627	ExpressionStatement	show_state_setup ( penum )	1150:16:43529:43552	848691	7	True				
ANR	849628	CallExpression	show_state_setup ( penum )		848691	0					
ANR	849629	Callee	show_state_setup		848691	0					
ANR	849630	Identifier	show_state_setup		848691	0					
ANR	849631	ArgumentList	penum		848691	1					
ANR	849632	Argument	penum		848691	0					
ANR	849633	Identifier	penum		848691	0					
ANR	849634	ExpressionStatement	pair = 0	1151:16:43570:43578	848691	8	True				
ANR	849635	AssignmentExpression	pair = 0		848691	0		=			
ANR	849636	Identifier	pair		848691	0					
ANR	849637	PrimaryExpression	0		848691	1					
ANR	849638	Label	case 0 :	1152:12:43592:43598	848691	9	True				
ANR	849639	CompoundStatement		177:20:8125:8153	848691	10					
ANR	849640	IdentifierDeclStatement	"int alpha_bits , depth ;"	1153:20:43620:43641	848691	0	True				
ANR	849641	IdentifierDecl	alpha_bits		848691	0					
ANR	849642	IdentifierDeclType	int		848691	0					
ANR	849643	Identifier	alpha_bits		848691	1					
ANR	849644	IdentifierDecl	depth		848691	1					
ANR	849645	IdentifierDeclType	int		848691	0					
ANR	849646	Identifier	depth		848691	1					
ANR	849647	IdentifierDeclStatement	gs_log2_scale_point log2_scale ;	1154:20:43663:43693	848691	1	True				
ANR	849648	IdentifierDecl	log2_scale		848691	0					
ANR	849649	IdentifierDeclType	gs_log2_scale_point		848691	0					
ANR	849650	Identifier	log2_scale		848691	1					
ANR	849651	IdentifierDeclStatement	gs_fixed_point subpix_origin ;	1155:20:43715:43743	848691	2	True				
ANR	849652	IdentifierDecl	subpix_origin		848691	0					
ANR	849653	IdentifierDeclType	gs_fixed_point		848691	0					
ANR	849654	Identifier	subpix_origin		848691	1					
ANR	849655	ExpressionStatement	penum -> bytes_decoded = penum -> index - start	1157:20:43766:43809	848691	3	True				
ANR	849656	AssignmentExpression	penum -> bytes_decoded = penum -> index - start		848691	0		=			
ANR	849657	PtrMemberAccess	penum -> bytes_decoded		848691	0					
ANR	849658	Identifier	penum		848691	0					
ANR	849659	Identifier	bytes_decoded		848691	1					
ANR	849660	AdditiveExpression	penum -> index - start		848691	1		-			
ANR	849661	PtrMemberAccess	penum -> index		848691	0					
ANR	849662	Identifier	penum		848691	0					
ANR	849663	Identifier	index		848691	1					
ANR	849664	Identifier	start		848691	1					
ANR	849665	ExpressionStatement	"code = compute_glyph_raster_params ( penum , false , & alpha_bits , & depth , & subpix_origin , & log2_scale )"	1158:20:43831:43929	848691	4	True				
ANR	849666	AssignmentExpression	"code = compute_glyph_raster_params ( penum , false , & alpha_bits , & depth , & subpix_origin , & log2_scale )"		848691	0		=			
ANR	849667	Identifier	code		848691	0					
ANR	849668	CallExpression	"compute_glyph_raster_params ( penum , false , & alpha_bits , & depth , & subpix_origin , & log2_scale )"		848691	1					
ANR	849669	Callee	compute_glyph_raster_params		848691	0					
ANR	849670	Identifier	compute_glyph_raster_params		848691	0					
ANR	849671	ArgumentList	penum		848691	1					
ANR	849672	Argument	penum		848691	0					
ANR	849673	Identifier	penum		848691	0					
ANR	849674	Argument	false		848691	1					
ANR	849675	Identifier	false		848691	0					
ANR	849676	Argument	& alpha_bits		848691	2					
ANR	849677	UnaryOperationExpression	& alpha_bits		848691	0					
ANR	849678	UnaryOperator	&		848691	0					
ANR	849679	Identifier	alpha_bits		848691	1					
ANR	849680	Argument	& depth		848691	3					
ANR	849681	UnaryOperationExpression	& depth		848691	0					
ANR	849682	UnaryOperator	&		848691	0					
ANR	849683	Identifier	depth		848691	1					
ANR	849684	Argument	& subpix_origin		848691	4					
ANR	849685	UnaryOperationExpression	& subpix_origin		848691	0					
ANR	849686	UnaryOperator	&		848691	0					
ANR	849687	Identifier	subpix_origin		848691	1					
ANR	849688	Argument	& log2_scale		848691	5					
ANR	849689	UnaryOperationExpression	& log2_scale		848691	0					
ANR	849690	UnaryOperator	&		848691	0					
ANR	849691	Identifier	log2_scale		848691	1					
ANR	849692	IfStatement	if ( code < 0 )		848691	5					
ANR	849693	Condition	code < 0	1159:24:43955:43962	848691	0	True				
ANR	849694	RelationalExpression	code < 0		848691	0		<			
ANR	849695	Identifier	code		848691	0					
ANR	849696	PrimaryExpression	0		848691	1					
ANR	849697	ReturnStatement	return code ;	1160:24:43989:44000	848691	1	True				
ANR	849698	Identifier	code		848691	0					
ANR	849699	IfStatement	if ( pair == 0 )		848691	6					
ANR	849700	Condition	pair == 0	1161:24:44026:44034	848691	0	True				
ANR	849701	EqualityExpression	pair == 0		848691	0		==			
ANR	849702	Identifier	pair		848691	0					
ANR	849703	PrimaryExpression	0		848691	1					
ANR	849704	CompoundStatement		183:35:8447:8447	848691	1					
ANR	849705	ExpressionStatement	"code = gx_lookup_fm_pair ( pfont , & char_tm_only ( pgs ) , & log2_scale , penum -> charpath_flag != cpm_show , & pair )"	1162:24:44063:44200	848691	0	True				
ANR	849706	AssignmentExpression	"code = gx_lookup_fm_pair ( pfont , & char_tm_only ( pgs ) , & log2_scale , penum -> charpath_flag != cpm_show , & pair )"		848691	0		=			
ANR	849707	Identifier	code		848691	0					
ANR	849708	CallExpression	"gx_lookup_fm_pair ( pfont , & char_tm_only ( pgs ) , & log2_scale , penum -> charpath_flag != cpm_show , & pair )"		848691	1					
ANR	849709	Callee	gx_lookup_fm_pair		848691	0					
ANR	849710	Identifier	gx_lookup_fm_pair		848691	0					
ANR	849711	ArgumentList	pfont		848691	1					
ANR	849712	Argument	pfont		848691	0					
ANR	849713	Identifier	pfont		848691	0					
ANR	849714	Argument	& char_tm_only ( pgs )		848691	1					
ANR	849715	UnaryOperationExpression	& char_tm_only ( pgs )		848691	0					
ANR	849716	UnaryOperator	&		848691	0					
ANR	849717	CallExpression	char_tm_only ( pgs )		848691	1					
ANR	849718	Callee	char_tm_only		848691	0					
ANR	849719	Identifier	char_tm_only		848691	0					
ANR	849720	ArgumentList	pgs		848691	1					
ANR	849721	Argument	pgs		848691	0					
ANR	849722	Identifier	pgs		848691	0					
ANR	849723	Argument	& log2_scale		848691	2					
ANR	849724	UnaryOperationExpression	& log2_scale		848691	0					
ANR	849725	UnaryOperator	&		848691	0					
ANR	849726	Identifier	log2_scale		848691	1					
ANR	849727	Argument	penum -> charpath_flag != cpm_show		848691	3					
ANR	849728	EqualityExpression	penum -> charpath_flag != cpm_show		848691	0		!=			
ANR	849729	PtrMemberAccess	penum -> charpath_flag		848691	0					
ANR	849730	Identifier	penum		848691	0					
ANR	849731	Identifier	charpath_flag		848691	1					
ANR	849732	Identifier	cpm_show		848691	1					
ANR	849733	Argument	& pair		848691	4					
ANR	849734	UnaryOperationExpression	& pair		848691	0					
ANR	849735	UnaryOperator	&		848691	0					
ANR	849736	Identifier	pair		848691	1					
ANR	849737	IfStatement	if ( code < 0 )		848691	1					
ANR	849738	Condition	code < 0	1164:28:44230:44237	848691	0	True				
ANR	849739	RelationalExpression	code < 0		848691	0		<			
ANR	849740	Identifier	code		848691	0					
ANR	849741	PrimaryExpression	0		848691	1					
ANR	849742	ReturnStatement	return code ;	1165:28:44268:44279	848691	1	True				
ANR	849743	Identifier	code		848691	0					
ANR	849744	ExpressionStatement	penum -> pair = pair	1167:20:44323:44341	848691	7	True				
ANR	849745	AssignmentExpression	penum -> pair = pair		848691	0		=			
ANR	849746	PtrMemberAccess	penum -> pair		848691	0					
ANR	849747	Identifier	penum		848691	0					
ANR	849748	Identifier	pair		848691	1					
ANR	849749	Identifier	pair		848691	1					
ANR	849750	ExpressionStatement	"SET_CURRENT_CHAR ( penum , chr )"	1170:8:44379:44407	848691	2	True				
ANR	849751	CallExpression	"SET_CURRENT_CHAR ( penum , chr )"		848691	0					
ANR	849752	Callee	SET_CURRENT_CHAR		848691	0					
ANR	849753	Identifier	SET_CURRENT_CHAR		848691	0					
ANR	849754	ArgumentList	penum		848691	1					
ANR	849755	Argument	penum		848691	0					
ANR	849756	Identifier	penum		848691	0					
ANR	849757	Argument	chr		848691	1					
ANR	849758	Identifier	chr		848691	0					
ANR	849759	IfStatement	if ( glyph == GS_NO_GLYPH )		848691	3					
ANR	849760	Condition	glyph == GS_NO_GLYPH	1171:12:44421:44440	848691	0	True				
ANR	849761	EqualityExpression	glyph == GS_NO_GLYPH		848691	0		==			
ANR	849762	Identifier	glyph		848691	0					
ANR	849763	Identifier	GS_NO_GLYPH		848691	1					
ANR	849764	CompoundStatement		193:34:8853:8853	848691	1					
ANR	849765	ExpressionStatement	"glyph = ( * penum -> encode_char ) ( pfont , chr , GLYPH_SPACE_NAME )"	1172:12:44457:44516	848691	0	True				
ANR	849766	AssignmentExpression	"glyph = ( * penum -> encode_char ) ( pfont , chr , GLYPH_SPACE_NAME )"		848691	0		=			
ANR	849767	Identifier	glyph		848691	0					
ANR	849768	CallExpression	"( * penum -> encode_char ) ( pfont , chr , GLYPH_SPACE_NAME )"		848691	1					
ANR	849769	Callee	* penum -> encode_char		848691	0					
ANR	849770	UnaryOperationExpression	* penum -> encode_char		848691	0					
ANR	849771	UnaryOperator	*		848691	0					
ANR	849772	PtrMemberAccess	penum -> encode_char		848691	1					
ANR	849773	Identifier	penum		848691	0					
ANR	849774	Identifier	encode_char		848691	1					
ANR	849775	ArgumentList	pfont		848691	1					
ANR	849776	Argument	pfont		848691	0					
ANR	849777	Identifier	pfont		848691	0					
ANR	849778	Argument	chr		848691	1					
ANR	849779	Identifier	chr		848691	0					
ANR	849780	Argument	GLYPH_SPACE_NAME		848691	2					
ANR	849781	Identifier	GLYPH_SPACE_NAME		848691	0					
ANR	849782	ExpressionStatement	"SET_CURRENT_GLYPH ( penum , glyph )"	1174:8:44536:44567	848691	4	True				
ANR	849783	CallExpression	"SET_CURRENT_GLYPH ( penum , glyph )"		848691	0					
ANR	849784	Callee	SET_CURRENT_GLYPH		848691	0					
ANR	849785	Identifier	SET_CURRENT_GLYPH		848691	0					
ANR	849786	ArgumentList	penum		848691	1					
ANR	849787	Argument	penum		848691	0					
ANR	849788	Identifier	penum		848691	0					
ANR	849789	Argument	glyph		848691	1					
ANR	849790	Identifier	glyph		848691	0					
ANR	849791	ExpressionStatement	cc = 0	1175:8:44577:44583	848691	5	True				
ANR	849792	AssignmentExpression	cc = 0		848691	0		=			
ANR	849793	Identifier	cc		848691	0					
ANR	849794	PrimaryExpression	0		848691	1					
ANR	849795	Label	no_cache :	1177:2:44593:44601	848691	42	True				
ANR	849796	Identifier	no_cache		848691	0					
ANR	849797	IfStatement	if ( ( code = gs_gsave ( pgs ) ) < 0 )		848691	43					
ANR	849798	Condition	( code = gs_gsave ( pgs ) ) < 0	1186:8:44988:45013	848691	0	True				
ANR	849799	RelationalExpression	( code = gs_gsave ( pgs ) ) < 0		848691	0		<			
ANR	849800	AssignmentExpression	code = gs_gsave ( pgs )		848691	0		=			
ANR	849801	Identifier	code		848691	0					
ANR	849802	CallExpression	gs_gsave ( pgs )		848691	1					
ANR	849803	Callee	gs_gsave		848691	0					
ANR	849804	Identifier	gs_gsave		848691	0					
ANR	849805	ArgumentList	pgs		848691	1					
ANR	849806	Argument	pgs		848691	0					
ANR	849807	Identifier	pgs		848691	0					
ANR	849808	PrimaryExpression	0		848691	1					
ANR	849809	ReturnStatement	return code ;	1187:8:45024:45035	848691	1	True				
ANR	849810	Identifier	code		848691	0					
ANR	849811	ExpressionStatement	pgs -> font = pfont	1189:4:45096:45113	848691	44	True				
ANR	849812	AssignmentExpression	pgs -> font = pfont		848691	0		=			
ANR	849813	PtrMemberAccess	pgs -> font		848691	0					
ANR	849814	Identifier	pgs		848691	0					
ANR	849815	Identifier	font		848691	1					
ANR	849816	Identifier	pfont		848691	1					
ANR	849817	ExpressionStatement	pgs -> in_cachedevice = CACHE_DEVICE_NONE	1192:4:45224:45263	848691	45	True				
ANR	849818	AssignmentExpression	pgs -> in_cachedevice = CACHE_DEVICE_NONE		848691	0		=			
ANR	849819	PtrMemberAccess	pgs -> in_cachedevice		848691	0					
ANR	849820	Identifier	pgs		848691	0					
ANR	849821	Identifier	in_cachedevice		848691	1					
ANR	849822	Identifier	CACHE_DEVICE_NONE		848691	1					
ANR	849823	ExpressionStatement	pgs -> in_charpath = penum -> charpath_flag	1196:4:45443:45482	848691	46	True				
ANR	849824	AssignmentExpression	pgs -> in_charpath = penum -> charpath_flag		848691	0		=			
ANR	849825	PtrMemberAccess	pgs -> in_charpath		848691	0					
ANR	849826	Identifier	pgs		848691	0					
ANR	849827	Identifier	in_charpath		848691	1					
ANR	849828	PtrMemberAccess	penum -> charpath_flag		848691	1					
ANR	849829	Identifier	penum		848691	0					
ANR	849830	Identifier	charpath_flag		848691	1					
ANR	849831	ExpressionStatement	pgs -> show_gstate = ( penum -> show_gstate == pgs ? pgs -> saved : penum -> show_gstate )	1197:4:45488:45576	848691	47	True				
ANR	849832	AssignmentExpression	pgs -> show_gstate = ( penum -> show_gstate == pgs ? pgs -> saved : penum -> show_gstate )		848691	0		=			
ANR	849833	PtrMemberAccess	pgs -> show_gstate		848691	0					
ANR	849834	Identifier	pgs		848691	0					
ANR	849835	Identifier	show_gstate		848691	1					
ANR	849836	ConditionalExpression	penum -> show_gstate == pgs ? pgs -> saved : penum -> show_gstate		848691	1					
ANR	849837	Condition	penum -> show_gstate == pgs		848691	0					
ANR	849838	EqualityExpression	penum -> show_gstate == pgs		848691	0		==			
ANR	849839	PtrMemberAccess	penum -> show_gstate		848691	0					
ANR	849840	Identifier	penum		848691	0					
ANR	849841	Identifier	show_gstate		848691	1					
ANR	849842	Identifier	pgs		848691	1					
ANR	849843	PtrMemberAccess	pgs -> saved		848691	1					
ANR	849844	Identifier	pgs		848691	0					
ANR	849845	Identifier	saved		848691	1					
ANR	849846	PtrMemberAccess	penum -> show_gstate		848691	2					
ANR	849847	Identifier	penum		848691	0					
ANR	849848	Identifier	show_gstate		848691	1					
ANR	849849	ExpressionStatement	pgs -> stroke_adjust = false	1199:4:45582:45608	848691	48	True				
ANR	849850	AssignmentExpression	pgs -> stroke_adjust = false		848691	0		=			
ANR	849851	PtrMemberAccess	pgs -> stroke_adjust		848691	0					
ANR	849852	Identifier	pgs		848691	0					
ANR	849853	Identifier	stroke_adjust		848691	1					
ANR	849854	Identifier	false		848691	1					
ANR	849855	CompoundStatement		223:8:10058:10076	848691	49					
ANR	849856	IdentifierDeclStatement	gs_fixed_point cpt ;	1201:8:45648:45666	848691	0	True				
ANR	849857	IdentifierDecl	cpt		848691	0					
ANR	849858	IdentifierDeclType	gs_fixed_point		848691	0					
ANR	849859	Identifier	cpt		848691	1					
ANR	849860	IfStatement	"if ( ( code = gx_path_current_point_inline ( pgs , & cpt ) ) < 0 )"		848691	1					
ANR	849861	Condition	"( code = gx_path_current_point_inline ( pgs , & cpt ) ) < 0"	1203:12:45681:45732	848691	0	True				
ANR	849862	RelationalExpression	"( code = gx_path_current_point_inline ( pgs , & cpt ) ) < 0"		848691	0		<			
ANR	849863	AssignmentExpression	"code = gx_path_current_point_inline ( pgs , & cpt )"		848691	0		=			
ANR	849864	Identifier	code		848691	0					
ANR	849865	CallExpression	"gx_path_current_point_inline ( pgs , & cpt )"		848691	1					
ANR	849866	Callee	gx_path_current_point_inline		848691	0					
ANR	849867	Identifier	gx_path_current_point_inline		848691	0					
ANR	849868	ArgumentList	pgs		848691	1					
ANR	849869	Argument	pgs		848691	0					
ANR	849870	Identifier	pgs		848691	0					
ANR	849871	Argument	& cpt		848691	1					
ANR	849872	UnaryOperationExpression	& cpt		848691	0					
ANR	849873	UnaryOperator	&		848691	0					
ANR	849874	Identifier	cpt		848691	1					
ANR	849875	PrimaryExpression	0		848691	1					
ANR	849876	CompoundStatement		225:66:10145:10145	848691	1					
ANR	849877	IfStatement	"if ( ! SHOW_IS ( penum , TEXT_DO_NONE ) )"		848691	0					
ANR	849878	Condition	"! SHOW_IS ( penum , TEXT_DO_NONE )"	1205:16:45821:45849	848691	0	True				
ANR	849879	UnaryOperationExpression	"! SHOW_IS ( penum , TEXT_DO_NONE )"		848691	0					
ANR	849880	UnaryOperator	!		848691	0					
ANR	849881	CallExpression	"SHOW_IS ( penum , TEXT_DO_NONE )"		848691	1					
ANR	849882	Callee	SHOW_IS		848691	0					
ANR	849883	Identifier	SHOW_IS		848691	0					
ANR	849884	ArgumentList	penum		848691	1					
ANR	849885	Argument	penum		848691	0					
ANR	849886	Identifier	penum		848691	0					
ANR	849887	Argument	TEXT_DO_NONE		848691	1					
ANR	849888	Identifier	TEXT_DO_NONE		848691	0					
ANR	849889	GotoStatement	goto rret ;	1206:16:45868:45877	848691	1	True				
ANR	849890	Identifier	rret		848691	0					
ANR	849891	ExpressionStatement	cpt . x = cpt . y = 0	1207:12:45891:45908	848691	1	True				
ANR	849892	AssignmentExpression	cpt . x = cpt . y = 0		848691	0		=			
ANR	849893	MemberAccess	cpt . x		848691	0					
ANR	849894	Identifier	cpt		848691	0					
ANR	849895	Identifier	x		848691	1					
ANR	849896	AssignmentExpression	cpt . y = 0		848691	1		=			
ANR	849897	MemberAccess	cpt . y		848691	0					
ANR	849898	Identifier	cpt		848691	0					
ANR	849899	Identifier	y		848691	1					
ANR	849900	PrimaryExpression	0		848691	1					
ANR	849901	ExpressionStatement	penum -> origin . x = cpt . x	1209:8:45945:45968	848691	2	True				
ANR	849902	AssignmentExpression	penum -> origin . x = cpt . x		848691	0		=			
ANR	849903	MemberAccess	penum -> origin . x		848691	0					
ANR	849904	PtrMemberAccess	penum -> origin		848691	0					
ANR	849905	Identifier	penum		848691	0					
ANR	849906	Identifier	origin		848691	1					
ANR	849907	Identifier	x		848691	1					
ANR	849908	MemberAccess	cpt . x		848691	1					
ANR	849909	Identifier	cpt		848691	0					
ANR	849910	Identifier	x		848691	1					
ANR	849911	ExpressionStatement	penum -> origin . y = cpt . y	1210:8:45978:46001	848691	3	True				
ANR	849912	AssignmentExpression	penum -> origin . y = cpt . y		848691	0		=			
ANR	849913	MemberAccess	penum -> origin . y		848691	0					
ANR	849914	PtrMemberAccess	penum -> origin		848691	0					
ANR	849915	Identifier	penum		848691	0					
ANR	849916	Identifier	origin		848691	1					
ANR	849917	Identifier	y		848691	1					
ANR	849918	MemberAccess	cpt . y		848691	1					
ANR	849919	Identifier	cpt		848691	0					
ANR	849920	Identifier	y		848691	1					
ANR	849921	ExpressionStatement	"gs_currentcharmatrix ( pgs , NULL , true )"	1213:8:46135:46172	848691	4	True				
ANR	849922	CallExpression	"gs_currentcharmatrix ( pgs , NULL , true )"		848691	0					
ANR	849923	Callee	gs_currentcharmatrix		848691	0					
ANR	849924	Identifier	gs_currentcharmatrix		848691	0					
ANR	849925	ArgumentList	pgs		848691	1					
ANR	849926	Argument	pgs		848691	0					
ANR	849927	Identifier	pgs		848691	0					
ANR	849928	Argument	NULL		848691	1					
ANR	849929	Identifier	NULL		848691	0					
ANR	849930	Argument	true		848691	2					
ANR	849931	Identifier	true		848691	0					
ANR	849932	IfStatement	if ( pgs -> ctm . txy_fixed_valid && pgs -> char_tm . txy_fixed_valid )		848691	5					
ANR	849933	Condition	pgs -> ctm . txy_fixed_valid && pgs -> char_tm . txy_fixed_valid	1214:12:46186:46241	848691	0	True				
ANR	849934	AndExpression	pgs -> ctm . txy_fixed_valid && pgs -> char_tm . txy_fixed_valid		848691	0		&&			
ANR	849935	MemberAccess	pgs -> ctm . txy_fixed_valid		848691	0					
ANR	849936	PtrMemberAccess	pgs -> ctm		848691	0					
ANR	849937	Identifier	pgs		848691	0					
ANR	849938	Identifier	ctm		848691	1					
ANR	849939	Identifier	txy_fixed_valid		848691	1					
ANR	849940	MemberAccess	pgs -> char_tm . txy_fixed_valid		848691	1					
ANR	849941	PtrMemberAccess	pgs -> char_tm		848691	0					
ANR	849942	Identifier	pgs		848691	0					
ANR	849943	Identifier	char_tm		848691	1					
ANR	849944	Identifier	txy_fixed_valid		848691	1					
ANR	849945	CompoundStatement		238:12:10710:10738	848691	1					
ANR	849946	IdentifierDeclStatement	fixed tx = pgs -> ctm . tx_fixed ;	1215:12:46258:46286	848691	0	True				
ANR	849947	IdentifierDecl	tx = pgs -> ctm . tx_fixed		848691	0					
ANR	849948	IdentifierDeclType	fixed		848691	0					
ANR	849949	Identifier	tx		848691	1					
ANR	849950	AssignmentExpression	tx = pgs -> ctm . tx_fixed		848691	2		=			
ANR	849951	Identifier	tx		848691	0					
ANR	849952	MemberAccess	pgs -> ctm . tx_fixed		848691	1					
ANR	849953	PtrMemberAccess	pgs -> ctm		848691	0					
ANR	849954	Identifier	pgs		848691	0					
ANR	849955	Identifier	ctm		848691	1					
ANR	849956	Identifier	tx_fixed		848691	1					
ANR	849957	IdentifierDeclStatement	fixed ty = pgs -> ctm . ty_fixed ;	1216:12:46300:46328	848691	1	True				
ANR	849958	IdentifierDecl	ty = pgs -> ctm . ty_fixed		848691	0					
ANR	849959	IdentifierDeclType	fixed		848691	0					
ANR	849960	Identifier	ty		848691	1					
ANR	849961	AssignmentExpression	ty = pgs -> ctm . ty_fixed		848691	2		=			
ANR	849962	Identifier	ty		848691	0					
ANR	849963	MemberAccess	pgs -> ctm . ty_fixed		848691	1					
ANR	849964	PtrMemberAccess	pgs -> ctm		848691	0					
ANR	849965	Identifier	pgs		848691	0					
ANR	849966	Identifier	ctm		848691	1					
ANR	849967	Identifier	ty_fixed		848691	1					
ANR	849968	ExpressionStatement	gs_settocharmatrix ( pgs )	1218:12:46343:46366	848691	2	True				
ANR	849969	CallExpression	gs_settocharmatrix ( pgs )		848691	0					
ANR	849970	Callee	gs_settocharmatrix		848691	0					
ANR	849971	Identifier	gs_settocharmatrix		848691	0					
ANR	849972	ArgumentList	pgs		848691	1					
ANR	849973	Argument	pgs		848691	0					
ANR	849974	Identifier	pgs		848691	0					
ANR	849975	ExpressionStatement	cpt . x += pgs -> ctm . tx_fixed - tx	1219:12:46380:46411	848691	3	True				
ANR	849976	AssignmentExpression	cpt . x += pgs -> ctm . tx_fixed - tx		848691	0		+=			
ANR	849977	MemberAccess	cpt . x		848691	0					
ANR	849978	Identifier	cpt		848691	0					
ANR	849979	Identifier	x		848691	1					
ANR	849980	AdditiveExpression	pgs -> ctm . tx_fixed - tx		848691	1		-			
ANR	849981	MemberAccess	pgs -> ctm . tx_fixed		848691	0					
ANR	849982	PtrMemberAccess	pgs -> ctm		848691	0					
ANR	849983	Identifier	pgs		848691	0					
ANR	849984	Identifier	ctm		848691	1					
ANR	849985	Identifier	tx_fixed		848691	1					
ANR	849986	Identifier	tx		848691	1					
ANR	849987	ExpressionStatement	cpt . y += pgs -> ctm . ty_fixed - ty	1220:12:46425:46456	848691	4	True				
ANR	849988	AssignmentExpression	cpt . y += pgs -> ctm . ty_fixed - ty		848691	0		+=			
ANR	849989	MemberAccess	cpt . y		848691	0					
ANR	849990	Identifier	cpt		848691	0					
ANR	849991	Identifier	y		848691	1					
ANR	849992	AdditiveExpression	pgs -> ctm . ty_fixed - ty		848691	1		-			
ANR	849993	MemberAccess	pgs -> ctm . ty_fixed		848691	0					
ANR	849994	PtrMemberAccess	pgs -> ctm		848691	0					
ANR	849995	Identifier	pgs		848691	0					
ANR	849996	Identifier	ctm		848691	1					
ANR	849997	Identifier	ty_fixed		848691	1					
ANR	849998	Identifier	ty		848691	1					
ANR	849999	ElseStatement	else		848691	0					
ANR	850000	CompoundStatement		246:12:10972:10987	848691	0					
ANR	850001	IdentifierDeclStatement	double tx = pgs -> ctm . tx ;	1222:12:46488:46511	848691	0	True				
ANR	850002	IdentifierDecl	tx = pgs -> ctm . tx		848691	0					
ANR	850003	IdentifierDeclType	double		848691	0					
ANR	850004	Identifier	tx		848691	1					
ANR	850005	AssignmentExpression	tx = pgs -> ctm . tx		848691	2		=			
ANR	850006	Identifier	tx		848691	0					
ANR	850007	MemberAccess	pgs -> ctm . tx		848691	1					
ANR	850008	PtrMemberAccess	pgs -> ctm		848691	0					
ANR	850009	Identifier	pgs		848691	0					
ANR	850010	Identifier	ctm		848691	1					
ANR	850011	Identifier	tx		848691	1					
ANR	850012	IdentifierDeclStatement	double ty = pgs -> ctm . ty ;	1223:12:46525:46548	848691	1	True				
ANR	850013	IdentifierDecl	ty = pgs -> ctm . ty		848691	0					
ANR	850014	IdentifierDeclType	double		848691	0					
ANR	850015	Identifier	ty		848691	1					
ANR	850016	AssignmentExpression	ty = pgs -> ctm . ty		848691	2		=			
ANR	850017	Identifier	ty		848691	0					
ANR	850018	MemberAccess	pgs -> ctm . ty		848691	1					
ANR	850019	PtrMemberAccess	pgs -> ctm		848691	0					
ANR	850020	Identifier	pgs		848691	0					
ANR	850021	Identifier	ctm		848691	1					
ANR	850022	Identifier	ty		848691	1					
ANR	850023	IdentifierDeclStatement	"double fpx , fpy ;"	1224:12:46562:46577	848691	2	True				
ANR	850024	IdentifierDecl	fpx		848691	0					
ANR	850025	IdentifierDeclType	double		848691	0					
ANR	850026	Identifier	fpx		848691	1					
ANR	850027	IdentifierDecl	fpy		848691	1					
ANR	850028	IdentifierDeclType	double		848691	0					
ANR	850029	Identifier	fpy		848691	1					
ANR	850030	ExpressionStatement	gs_settocharmatrix ( pgs )	1226:12:46592:46615	848691	3	True				
ANR	850031	CallExpression	gs_settocharmatrix ( pgs )		848691	0					
ANR	850032	Callee	gs_settocharmatrix		848691	0					
ANR	850033	Identifier	gs_settocharmatrix		848691	0					
ANR	850034	ArgumentList	pgs		848691	1					
ANR	850035	Argument	pgs		848691	0					
ANR	850036	Identifier	pgs		848691	0					
ANR	850037	ExpressionStatement	fpx = fixed2float ( cpt . x ) + ( pgs -> ctm . tx - tx )	1227:12:46629:46674	848691	4	True				
ANR	850038	AssignmentExpression	fpx = fixed2float ( cpt . x ) + ( pgs -> ctm . tx - tx )		848691	0		=			
ANR	850039	Identifier	fpx		848691	0					
ANR	850040	AdditiveExpression	fixed2float ( cpt . x ) + ( pgs -> ctm . tx - tx )		848691	1		+			
ANR	850041	CallExpression	fixed2float ( cpt . x )		848691	0					
ANR	850042	Callee	fixed2float		848691	0					
ANR	850043	Identifier	fixed2float		848691	0					
ANR	850044	ArgumentList	cpt . x		848691	1					
ANR	850045	Argument	cpt . x		848691	0					
ANR	850046	MemberAccess	cpt . x		848691	0					
ANR	850047	Identifier	cpt		848691	0					
ANR	850048	Identifier	x		848691	1					
ANR	850049	AdditiveExpression	pgs -> ctm . tx - tx		848691	1		-			
ANR	850050	MemberAccess	pgs -> ctm . tx		848691	0					
ANR	850051	PtrMemberAccess	pgs -> ctm		848691	0					
ANR	850052	Identifier	pgs		848691	0					
ANR	850053	Identifier	ctm		848691	1					
ANR	850054	Identifier	tx		848691	1					
ANR	850055	Identifier	tx		848691	1					
ANR	850056	ExpressionStatement	fpy = fixed2float ( cpt . y ) + ( pgs -> ctm . ty - ty )	1228:12:46688:46733	848691	5	True				
ANR	850057	AssignmentExpression	fpy = fixed2float ( cpt . y ) + ( pgs -> ctm . ty - ty )		848691	0		=			
ANR	850058	Identifier	fpy		848691	0					
ANR	850059	AdditiveExpression	fixed2float ( cpt . y ) + ( pgs -> ctm . ty - ty )		848691	1		+			
ANR	850060	CallExpression	fixed2float ( cpt . y )		848691	0					
ANR	850061	Callee	fixed2float		848691	0					
ANR	850062	Identifier	fixed2float		848691	0					
ANR	850063	ArgumentList	cpt . y		848691	1					
ANR	850064	Argument	cpt . y		848691	0					
ANR	850065	MemberAccess	cpt . y		848691	0					
ANR	850066	Identifier	cpt		848691	0					
ANR	850067	Identifier	y		848691	1					
ANR	850068	AdditiveExpression	pgs -> ctm . ty - ty		848691	1		-			
ANR	850069	MemberAccess	pgs -> ctm . ty		848691	0					
ANR	850070	PtrMemberAccess	pgs -> ctm		848691	0					
ANR	850071	Identifier	pgs		848691	0					
ANR	850072	Identifier	ctm		848691	1					
ANR	850073	Identifier	ty		848691	1					
ANR	850074	Identifier	ty		848691	1					
ANR	850075	Statement	define	1229:1:46736:46741	848691	6	True				
ANR	850076	Statement	f_fits_in_fixed	1229:8:46743:46757	848691	7	True				
ANR	850077	Statement	(	1229:23:46758:46758	848691	8	True				
ANR	850078	Statement	f	1229:24:46759:46759	848691	9	True				
ANR	850079	Statement	)	1229:25:46760:46760	848691	10	True				
ANR	850080	Statement	f_fits_in_bits	1229:27:46762:46775	848691	11	True				
ANR	850081	Statement	(	1229:41:46776:46776	848691	12	True				
ANR	850082	Statement	f	1229:42:46777:46777	848691	13	True				
ANR	850083	Statement	","	1229:43:46778:46778	848691	14	True				
ANR	850084	Statement	fixed_int_bits	1229:45:46780:46793	848691	15	True				
ANR	850085	Statement	)	1229:59:46794:46794	848691	16	True				
ANR	850086	IfStatement	if ( ! ( f_fits_in_fixed ( fpx ) && f_fits_in_fixed ( fpy ) ) )		848691	17					
ANR	850087	Condition	! ( f_fits_in_fixed ( fpx ) && f_fits_in_fixed ( fpy ) )	1230:16:46812:46858	848691	0	True				
ANR	850088	UnaryOperationExpression	! ( f_fits_in_fixed ( fpx ) && f_fits_in_fixed ( fpy ) )		848691	0					
ANR	850089	UnaryOperator	!		848691	0					
ANR	850090	AndExpression	f_fits_in_fixed ( fpx ) && f_fits_in_fixed ( fpy )		848691	1		&&			
ANR	850091	CallExpression	f_fits_in_fixed ( fpx )		848691	0					
ANR	850092	Callee	f_fits_in_fixed		848691	0					
ANR	850093	Identifier	f_fits_in_fixed		848691	0					
ANR	850094	ArgumentList	fpx		848691	1					
ANR	850095	Argument	fpx		848691	0					
ANR	850096	Identifier	fpx		848691	0					
ANR	850097	CallExpression	f_fits_in_fixed ( fpy )		848691	1					
ANR	850098	Callee	f_fits_in_fixed		848691	0					
ANR	850099	Identifier	f_fits_in_fixed		848691	0					
ANR	850100	ArgumentList	fpy		848691	1					
ANR	850101	Argument	fpy		848691	0					
ANR	850102	Identifier	fpy		848691	0					
ANR	850103	CompoundStatement		252:65:11271:11271	848691	1					
ANR	850104	ExpressionStatement	gs_note_error ( code = gs_error_limitcheck )	1231:16:46879:46920	848691	0	True				
ANR	850105	CallExpression	gs_note_error ( code = gs_error_limitcheck )		848691	0					
ANR	850106	Callee	gs_note_error		848691	0					
ANR	850107	Identifier	gs_note_error		848691	0					
ANR	850108	ArgumentList	code = gs_error_limitcheck		848691	1					
ANR	850109	Argument	code = gs_error_limitcheck		848691	0					
ANR	850110	AssignmentExpression	code = gs_error_limitcheck		848691	0		=			
ANR	850111	Identifier	code		848691	0					
ANR	850112	Identifier	gs_error_limitcheck		848691	1					
ANR	850113	GotoStatement	goto rret ;	1232:16:46938:46947	848691	1	True				
ANR	850114	Identifier	rret		848691	0					
ANR	850115	ExpressionStatement	cpt . x = float2fixed ( fpx )	1234:12:46975:46999	848691	18	True				
ANR	850116	AssignmentExpression	cpt . x = float2fixed ( fpx )		848691	0		=			
ANR	850117	MemberAccess	cpt . x		848691	0					
ANR	850118	Identifier	cpt		848691	0					
ANR	850119	Identifier	x		848691	1					
ANR	850120	CallExpression	float2fixed ( fpx )		848691	1					
ANR	850121	Callee	float2fixed		848691	0					
ANR	850122	Identifier	float2fixed		848691	0					
ANR	850123	ArgumentList	fpx		848691	1					
ANR	850124	Argument	fpx		848691	0					
ANR	850125	Identifier	fpx		848691	0					
ANR	850126	ExpressionStatement	cpt . y = float2fixed ( fpy )	1235:12:47013:47037	848691	19	True				
ANR	850127	AssignmentExpression	cpt . y = float2fixed ( fpy )		848691	0		=			
ANR	850128	MemberAccess	cpt . y		848691	0					
ANR	850129	Identifier	cpt		848691	0					
ANR	850130	Identifier	y		848691	1					
ANR	850131	CallExpression	float2fixed ( fpy )		848691	1					
ANR	850132	Callee	float2fixed		848691	0					
ANR	850133	Identifier	float2fixed		848691	0					
ANR	850134	ArgumentList	fpy		848691	1					
ANR	850135	Argument	fpy		848691	0					
ANR	850136	Identifier	fpy		848691	0					
ANR	850137	IfStatement	"if ( ( ( code = gs_newpath ( pgs ) ) < 0 ) || ( ( code = show_origin_setup ( pgs , cpt . x , cpt . y , penum ) ) < 0 ) )"		848691	6					
ANR	850138	Condition	"( ( code = gs_newpath ( pgs ) ) < 0 ) || ( ( code = show_origin_setup ( pgs , cpt . x , cpt . y , penum ) ) < 0 )"	1237:12:47061:47164	848691	0	True				
ANR	850139	OrExpression	"( ( code = gs_newpath ( pgs ) ) < 0 ) || ( ( code = show_origin_setup ( pgs , cpt . x , cpt . y , penum ) ) < 0 )"		848691	0		||			
ANR	850140	RelationalExpression	( code = gs_newpath ( pgs ) ) < 0		848691	0		<			
ANR	850141	AssignmentExpression	code = gs_newpath ( pgs )		848691	0		=			
ANR	850142	Identifier	code		848691	0					
ANR	850143	CallExpression	gs_newpath ( pgs )		848691	1					
ANR	850144	Callee	gs_newpath		848691	0					
ANR	850145	Identifier	gs_newpath		848691	0					
ANR	850146	ArgumentList	pgs		848691	1					
ANR	850147	Argument	pgs		848691	0					
ANR	850148	Identifier	pgs		848691	0					
ANR	850149	PrimaryExpression	0		848691	1					
ANR	850150	RelationalExpression	"( code = show_origin_setup ( pgs , cpt . x , cpt . y , penum ) ) < 0"		848691	1		<			
ANR	850151	AssignmentExpression	"code = show_origin_setup ( pgs , cpt . x , cpt . y , penum )"		848691	0		=			
ANR	850152	Identifier	code		848691	0					
ANR	850153	CallExpression	"show_origin_setup ( pgs , cpt . x , cpt . y , penum )"		848691	1					
ANR	850154	Callee	show_origin_setup		848691	0					
ANR	850155	Identifier	show_origin_setup		848691	0					
ANR	850156	ArgumentList	pgs		848691	1					
ANR	850157	Argument	pgs		848691	0					
ANR	850158	Identifier	pgs		848691	0					
ANR	850159	Argument	cpt . x		848691	1					
ANR	850160	MemberAccess	cpt . x		848691	0					
ANR	850161	Identifier	cpt		848691	0					
ANR	850162	Identifier	x		848691	1					
ANR	850163	Argument	cpt . y		848691	2					
ANR	850164	MemberAccess	cpt . y		848691	0					
ANR	850165	Identifier	cpt		848691	0					
ANR	850166	Identifier	y		848691	1					
ANR	850167	Argument	penum		848691	3					
ANR	850168	Identifier	penum		848691	0					
ANR	850169	PrimaryExpression	0		848691	1					
ANR	850170	GotoStatement	goto rret ;	1239:12:47179:47188	848691	1	True				
ANR	850171	Identifier	rret		848691	0					
ANR	850172	ExpressionStatement	penum -> width_status = sws_none	1241:4:47200:47230	848691	50	True				
ANR	850173	AssignmentExpression	penum -> width_status = sws_none		848691	0		=			
ANR	850174	PtrMemberAccess	penum -> width_status		848691	0					
ANR	850175	Identifier	penum		848691	0					
ANR	850176	Identifier	width_status		848691	1					
ANR	850177	Identifier	sws_none		848691	1					
ANR	850178	ExpressionStatement	penum -> continue_proc = continue_show_update	1242:4:47236:47279	848691	51	True				
ANR	850179	AssignmentExpression	penum -> continue_proc = continue_show_update		848691	0		=			
ANR	850180	PtrMemberAccess	penum -> continue_proc		848691	0					
ANR	850181	Identifier	penum		848691	0					
ANR	850182	Identifier	continue_proc		848691	1					
ANR	850183	Identifier	continue_show_update		848691	1					
ANR	850184	ExpressionStatement	penum -> log2_scale . x = penum -> log2_scale . y = 0	1244:4:47321:47366	848691	52	True				
ANR	850185	AssignmentExpression	penum -> log2_scale . x = penum -> log2_scale . y = 0		848691	0		=			
ANR	850186	MemberAccess	penum -> log2_scale . x		848691	0					
ANR	850187	PtrMemberAccess	penum -> log2_scale		848691	0					
ANR	850188	Identifier	penum		848691	0					
ANR	850189	Identifier	log2_scale		848691	1					
ANR	850190	Identifier	x		848691	1					
ANR	850191	AssignmentExpression	penum -> log2_scale . y = 0		848691	1		=			
ANR	850192	MemberAccess	penum -> log2_scale . y		848691	0					
ANR	850193	PtrMemberAccess	penum -> log2_scale		848691	0					
ANR	850194	Identifier	penum		848691	0					
ANR	850195	Identifier	log2_scale		848691	1					
ANR	850196	Identifier	y		848691	1					
ANR	850197	PrimaryExpression	0		848691	1					
ANR	850198	ExpressionStatement	penum -> cc = cc	1247:4:47486:47500	848691	53	True				
ANR	850199	AssignmentExpression	penum -> cc = cc		848691	0		=			
ANR	850200	PtrMemberAccess	penum -> cc		848691	0					
ANR	850201	Identifier	penum		848691	0					
ANR	850202	Identifier	cc		848691	1					
ANR	850203	Identifier	cc		848691	1					
ANR	850204	ExpressionStatement	"code = ( * pfont -> procs . build_char ) ( penum , pgs , pfont , chr , glyph )"	1248:4:47557:47659	848691	54	True				
ANR	850205	AssignmentExpression	"code = ( * pfont -> procs . build_char ) ( penum , pgs , pfont , chr , glyph )"		848691	0		=			
ANR	850206	Identifier	code		848691	0					
ANR	850207	CallExpression	"( * pfont -> procs . build_char ) ( penum , pgs , pfont , chr , glyph )"		848691	1					
ANR	850208	Callee	* pfont -> procs . build_char		848691	0					
ANR	850209	UnaryOperationExpression	* pfont -> procs . build_char		848691	0					
ANR	850210	UnaryOperator	*		848691	0					
ANR	850211	MemberAccess	pfont -> procs . build_char		848691	1					
ANR	850212	PtrMemberAccess	pfont -> procs		848691	0					
ANR	850213	Identifier	pfont		848691	0					
ANR	850214	Identifier	procs		848691	1					
ANR	850215	Identifier	build_char		848691	1					
ANR	850216	ArgumentList	penum		848691	1					
ANR	850217	Argument	penum		848691	0					
ANR	850218	Identifier	penum		848691	0					
ANR	850219	Argument	pgs		848691	1					
ANR	850220	Identifier	pgs		848691	0					
ANR	850221	Argument	pfont		848691	2					
ANR	850222	Identifier	pfont		848691	0					
ANR	850223	Argument	chr		848691	3					
ANR	850224	Identifier	chr		848691	0					
ANR	850225	Argument	glyph		848691	4					
ANR	850226	Identifier	glyph		848691	0					
ANR	850227	IfStatement	if ( code < 0 )		848691	55					
ANR	850228	Condition	code < 0	1250:8:47669:47676	848691	0	True				
ANR	850229	RelationalExpression	code < 0		848691	0		<			
ANR	850230	Identifier	code		848691	0					
ANR	850231	PrimaryExpression	0		848691	1					
ANR	850232	CompoundStatement		272:18:12089:12089	848691	1					
ANR	850233	ExpressionStatement	discard ( gs_note_error ( code ) )	1251:8:47689:47717	848691	0	True				
ANR	850234	CallExpression	discard ( gs_note_error ( code ) )		848691	0					
ANR	850235	Callee	discard		848691	0					
ANR	850236	Identifier	discard		848691	0					
ANR	850237	ArgumentList	gs_note_error ( code )		848691	1					
ANR	850238	Argument	gs_note_error ( code )		848691	0					
ANR	850239	CallExpression	gs_note_error ( code )		848691	0					
ANR	850240	Callee	gs_note_error		848691	0					
ANR	850241	Identifier	gs_note_error		848691	0					
ANR	850242	ArgumentList	code		848691	1					
ANR	850243	Argument	code		848691	0					
ANR	850244	Identifier	code		848691	0					
ANR	850245	GotoStatement	goto rret ;	1252:8:47727:47736	848691	1	True				
ANR	850246	Identifier	rret		848691	0					
ANR	850247	IfStatement	if ( code == 0 )		848691	56					
ANR	850248	Condition	code == 0	1254:8:47752:47760	848691	0	True				
ANR	850249	EqualityExpression	code == 0		848691	0		==			
ANR	850250	Identifier	code		848691	0					
ANR	850251	PrimaryExpression	0		848691	1					
ANR	850252	CompoundStatement		276:19:12173:12173	848691	1					
ANR	850253	ExpressionStatement	code = show_update ( penum )	1255:8:47773:47798	848691	0	True				
ANR	850254	AssignmentExpression	code = show_update ( penum )		848691	0		=			
ANR	850255	Identifier	code		848691	0					
ANR	850256	CallExpression	show_update ( penum )		848691	1					
ANR	850257	Callee	show_update		848691	0					
ANR	850258	Identifier	show_update		848691	0					
ANR	850259	ArgumentList	penum		848691	1					
ANR	850260	Argument	penum		848691	0					
ANR	850261	Identifier	penum		848691	0					
ANR	850262	IfStatement	if ( code < 0 )		848691	1					
ANR	850263	Condition	code < 0	1256:12:47812:47819	848691	0	True				
ANR	850264	RelationalExpression	code < 0		848691	0		<			
ANR	850265	Identifier	code		848691	0					
ANR	850266	PrimaryExpression	0		848691	1					
ANR	850267	GotoStatement	goto rret ;	1257:12:47834:47843	848691	1	True				
ANR	850268	Identifier	rret		848691	0					
ANR	850269	ExpressionStatement	code = show_move ( penum )	1259:8:47909:47932	848691	2	True				
ANR	850270	AssignmentExpression	code = show_move ( penum )		848691	0		=			
ANR	850271	Identifier	code		848691	0					
ANR	850272	CallExpression	show_move ( penum )		848691	1					
ANR	850273	Callee	show_move		848691	0					
ANR	850274	Identifier	show_move		848691	0					
ANR	850275	ArgumentList	penum		848691	1					
ANR	850276	Argument	penum		848691	0					
ANR	850277	Identifier	penum		848691	0					
ANR	850278	IfStatement	if ( code )		848691	3					
ANR	850279	Condition	code	1260:12:47946:47949	848691	0	True				
ANR	850280	Identifier	code		848691	0					
ANR	850281	ReturnStatement	return code ;	1261:12:47964:47975	848691	1	True				
ANR	850282	Identifier	code		848691	0					
ANR	850283	GotoStatement	goto more ;	1262:8:48028:48037	848691	4	True				
ANR	850284	Identifier	more		848691	0					
ANR	850285	IfStatement	if ( penum -> dev_cache == 0 )		848691	57					
ANR	850286	Condition	penum -> dev_cache == 0	1270:8:48330:48350	848691	0	True				
ANR	850287	EqualityExpression	penum -> dev_cache == 0		848691	0		==			
ANR	850288	PtrMemberAccess	penum -> dev_cache		848691	0					
ANR	850289	Identifier	penum		848691	0					
ANR	850290	Identifier	dev_cache		848691	1					
ANR	850291	PrimaryExpression	0		848691	1					
ANR	850292	CompoundStatement		292:31:12763:12763	848691	1					
ANR	850293	ExpressionStatement	code = show_cache_setup ( penum )	1271:8:48363:48393	848691	0	True				
ANR	850294	AssignmentExpression	code = show_cache_setup ( penum )		848691	0		=			
ANR	850295	Identifier	code		848691	0					
ANR	850296	CallExpression	show_cache_setup ( penum )		848691	1					
ANR	850297	Callee	show_cache_setup		848691	0					
ANR	850298	Identifier	show_cache_setup		848691	0					
ANR	850299	ArgumentList	penum		848691	1					
ANR	850300	Argument	penum		848691	0					
ANR	850301	Identifier	penum		848691	0					
ANR	850302	IfStatement	if ( code < 0 )		848691	1					
ANR	850303	Condition	code < 0	1272:12:48407:48414	848691	0	True				
ANR	850304	RelationalExpression	code < 0		848691	0		<			
ANR	850305	Identifier	code		848691	0					
ANR	850306	PrimaryExpression	0		848691	1					
ANR	850307	GotoStatement	goto rret ;	1273:12:48429:48438	848691	1	True				
ANR	850308	Identifier	rret		848691	0					
ANR	850309	ReturnStatement	return TEXT_PROCESS_RENDER ;	1275:4:48450:48476	848691	58	True				
ANR	850310	Identifier	TEXT_PROCESS_RENDER		848691	0					
ANR	850311	Label	rret :	1278:0:48581:48585	848691	59	True				
ANR	850312	Identifier	rret		848691	0					
ANR	850313	WhileStatement	while ( pgs -> level > penum -> level )		848691	60					
ANR	850314	Condition	pgs -> level > penum -> level	1279:11:48598:48622	848691	0	True				
ANR	850315	RelationalExpression	pgs -> level > penum -> level		848691	0		>			
ANR	850316	PtrMemberAccess	pgs -> level		848691	0					
ANR	850317	Identifier	pgs		848691	0					
ANR	850318	Identifier	level		848691	1					
ANR	850319	PtrMemberAccess	penum -> level		848691	1					
ANR	850320	Identifier	penum		848691	0					
ANR	850321	Identifier	level		848691	1					
ANR	850322	CompoundStatement		301:38:13035:13035	848691	1					
ANR	850323	ExpressionStatement	gs_grestore ( pgs )	1280:8:48635:48651	848691	0	True				
ANR	850324	CallExpression	gs_grestore ( pgs )		848691	0					
ANR	850325	Callee	gs_grestore		848691	0					
ANR	850326	Identifier	gs_grestore		848691	0					
ANR	850327	ArgumentList	pgs		848691	1					
ANR	850328	Argument	pgs		848691	0					
ANR	850329	Identifier	pgs		848691	0					
ANR	850330	ReturnStatement	return code ;	1282:4:48663:48674	848691	61	True				
ANR	850331	Identifier	code		848691	0					
ANR	850332	Statement	undef	1283:1:48677:48681	848691	62	True				
ANR	850333	Statement	get_next_char_glyph	1283:7:48683:48701	848691	63	True				
ANR	850334	ReturnType	static int		848691	1					
ANR	850335	Identifier	show_proceed		848691	2					
ANR	850336	ParameterList	gs_show_enum * penum		848691	3					
ANR	850337	Parameter	gs_show_enum * penum	978:13:35567:35586	848691	0	True				
ANR	850338	ParameterType	gs_show_enum *		848691	0					
ANR	850339	Identifier	penum		848691	1					
ANR	850340	CFGEntryNode	ENTRY		848691		True				
ANR	850341	CFGExitNode	EXIT		848691		True				
ANR	850342	InfiniteForNode	true		848691		True				
ANR	850343	Symbol	rfont -> procs . next_char_glyph		848691						
ANR	850344	Symbol	cpm_show		848691						
ANR	850345	Symbol	& char_tm_only		848691						
ANR	850346	Symbol	pt		848691						
ANR	850347	Symbol	* cc		848691						
ANR	850348	Symbol	* pgs		848691						
ANR	850349	Symbol	pgs -> char_tm		848691						
ANR	850350	Symbol	pfont -> procs . build_char		848691						
ANR	850351	Symbol	rfont -> WMode		848691						
ANR	850352	Symbol	pgs -> ctm . tx		848691						
ANR	850353	Symbol	show_update		848691						
ANR	850354	Symbol	pgs -> ctm . ty		848691						
ANR	850355	Symbol	penum -> fstack . items [ 0 ] . font		848691						
ANR	850356	Symbol	& glyph		848691						
ANR	850357	Symbol	gx_path_add_rectangle		848691						
ANR	850358	Symbol	penum -> bytes_decoded		848691						
ANR	850359	Symbol	pgs -> ctm . txy_fixed_valid		848691						
ANR	850360	Symbol	penum -> encode_char		848691						
ANR	850361	Symbol	* * penum		848691						
ANR	850362	Symbol	cc -> wxy		848691						
ANR	850363	Symbol	pgs -> saved		848691						
ANR	850364	Symbol	box_path		848691						
ANR	850365	Symbol	& alpha_bits		848691						
ANR	850366	Symbol	penum -> index		848691						
ANR	850367	Symbol	penum		848691						
ANR	850368	Symbol	penum -> can_cache		848691						
ANR	850369	Symbol	cpm_charwidth		848691						
ANR	850370	Symbol	* pfont -> procs . build_char		848691						
ANR	850371	Symbol	get_next_char_glyph		848691						
ANR	850372	Symbol	pgs -> font		848691						
ANR	850373	Symbol	gs_color_writes_pure		848691						
ANR	850374	Symbol	gx_path_add_point		848691						
ANR	850375	Symbol	& pt		848691						
ANR	850376	Symbol	* * pgs		848691						
ANR	850377	Symbol	sws_none		848691						
ANR	850378	Symbol	& depth		848691						
ANR	850379	Symbol	penum -> wxy_float		848691						
ANR	850380	Symbol	penum -> fstack		848691						
ANR	850381	Symbol	font_proc_next_char_glyph		848691						
ANR	850382	Symbol	continue_show_update		848691						
ANR	850383	Symbol	penum -> width_status		848691						
ANR	850384	Symbol	pfont -> procs		848691						
ANR	850385	Symbol	* penum		848691						
ANR	850386	Symbol	cc -> width		848691						
ANR	850387	Symbol	penum -> origin		848691						
ANR	850388	Symbol	rfont -> procs		848691						
ANR	850389	Symbol	penum -> log2_scale . y		848691						
ANR	850390	Symbol	* * pfont		848691						
ANR	850391	Symbol	pgs -> stroke_adjust		848691						
ANR	850392	Symbol	penum -> origin . y		848691						
ANR	850393	Symbol	penum -> pgs		848691						
ANR	850394	Symbol	penum -> origin . x		848691						
ANR	850395	Symbol	* penum -> fstack . items		848691						
ANR	850396	Symbol	gs_gsave		848691						
ANR	850397	Symbol	penum -> cc		848691						
ANR	850398	Symbol	float2fixed		848691						
ANR	850399	Symbol	cc -> height		848691						
ANR	850400	Symbol	gs_error_limitcheck		848691						
ANR	850401	Symbol	next_char_glyph		848691						
ANR	850402	Symbol	show_move		848691						
ANR	850403	Symbol	wmode		848691						
ANR	850404	Symbol	& pair		848691						
ANR	850405	Symbol	pgs		848691						
ANR	850406	Symbol	pgs -> memory		848691						
ANR	850407	Symbol	gx_image_cached_char		848691						
ANR	850408	Symbol	penum -> level		848691						
ANR	850409	Symbol	cc		848691						
ANR	850410	Symbol	GLYPH_SPACE_NAME		848691						
ANR	850411	Symbol	gx_path_current_point_inline		848691						
ANR	850412	Symbol	gx_lookup_cached_char		848691						
ANR	850413	Symbol	& box_path		848691						
ANR	850414	Symbol	* next_char_glyph		848691						
ANR	850415	Symbol	show_cache_setup		848691						
ANR	850416	Symbol	GS_NO_GLYPH		848691						
ANR	850417	Symbol	depth		848691						
ANR	850418	Symbol	show_finish		848691						
ANR	850419	Symbol	int2fixed		848691						
ANR	850420	Symbol	& subpix_origin		848691						
ANR	850421	Symbol	penum -> fstack . items		848691						
ANR	850422	Symbol	urx		848691						
ANR	850423	Symbol	pt . x		848691						
ANR	850424	Symbol	pt . y		848691						
ANR	850425	Symbol	ury		848691						
ANR	850426	Symbol	CACHE_DEVICE_NONE		848691						
ANR	850427	Symbol	pgs -> char_tm_valid		848691						
ANR	850428	Symbol	tx		848691						
ANR	850429	Symbol	ty		848691						
ANR	850430	Symbol	SHOW_IS_ALL_OF		848691						
ANR	850431	Symbol	& cpt		848691						
ANR	850432	Symbol	gs_newpath		848691						
ANR	850433	Symbol	& chr		848691						
ANR	850434	Symbol	cpt . x		848691						
ANR	850435	Symbol	cpt . y		848691						
ANR	850436	Symbol	penum -> charpath_flag		848691						
ANR	850437	Symbol	* pgs -> show_gstate		848691						
ANR	850438	Symbol	* rfont		848691						
ANR	850439	Symbol	compute_glyph_raster_params		848691						
ANR	850440	Symbol	penum -> use_wxy_float		848691						
ANR	850441	Symbol	penum -> fstack . items [ penum -> fstack . depth ] . font		848691						
ANR	850442	Symbol	NULL		848691						
ANR	850443	Symbol	cc -> offset . x		848691						
ANR	850444	Symbol	SHOW_IS_SLOW		848691						
ANR	850445	Symbol	cc -> offset . y		848691						
ANR	850446	Symbol	* penum -> fstack . depth		848691						
ANR	850447	Symbol	cpt		848691						
ANR	850448	Symbol	penum -> wxy_float . x		848691						
ANR	850449	Symbol	SHOW_IS		848691						
ANR	850450	Symbol	chr		848691						
ANR	850451	Symbol	subpix_origin		848691						
ANR	850452	Symbol	pgs -> ctm		848691						
ANR	850453	Symbol	* pfont -> procs		848691						
ANR	850454	Symbol	penum -> dev_cache		848691						
ANR	850455	Symbol	penum -> wxy_float . y		848691						
ANR	850456	Symbol	pgs -> ctm . ty_fixed		848691						
ANR	850457	Symbol	penum -> log2_scale . x		848691						
ANR	850458	Symbol	rfont		848691						
ANR	850459	Symbol	TEXT_NO_CACHE		848691						
ANR	850460	Symbol	penum -> fty		848691						
ANR	850461	Symbol	& cc -> wxy		848691						
ANR	850462	Symbol	true		848691						
ANR	850463	Symbol	penum -> ftx		848691						
ANR	850464	Symbol	pgs -> show_gstate -> path		848691						
ANR	850465	Symbol	penum -> continue_proc		848691						
ANR	850466	Symbol	& log2_scale		848691						
ANR	850467	Symbol	pgs -> in_charpath		848691						
ANR	850468	Symbol	pgs -> level		848691						
ANR	850469	Symbol	code		848691						
ANR	850470	Symbol	cc -> offset		848691						
ANR	850471	Symbol	* penum -> encode_char		848691						
ANR	850472	Symbol	gx_lookup_fm_pair		848691						
ANR	850473	Symbol	show_fast_move		848691						
ANR	850474	Symbol	gs_gstate_color_load		848691						
ANR	850475	Symbol	pgs -> path		848691						
ANR	850476	Symbol	penum -> fstack . depth		848691						
ANR	850477	Symbol	penum -> wxy . y		848691						
ANR	850478	Symbol	penum -> wxy . x		848691						
ANR	850479	Symbol	penum -> current_font		848691						
ANR	850480	Symbol	pgs -> ctm . tx_fixed		848691						
ANR	850481	Symbol	pgs -> show_gstate		848691						
ANR	850482	Symbol	SHOW_IS_DRAWING		848691						
ANR	850483	Symbol	* penum -> fstack		848691						
ANR	850484	Symbol	penum -> show_gstate		848691						
ANR	850485	Symbol	pgs -> in_cachedevice		848691						
ANR	850486	Symbol	TEXT_DO_NONE		848691						
ANR	850487	Symbol	f_fits_in_fixed		848691						
ANR	850488	Symbol	fixed2float		848691						
ANR	850489	Symbol	pfont		848691						
ANR	850490	Symbol	gx_path_add_char_path		848691						
ANR	850491	Symbol	SHOW_USES_OUTLINE		848691						
ANR	850492	Symbol	start		848691						
ANR	850493	Symbol	false		848691						
ANR	850494	Symbol	cc -> wxy . y		848691						
ANR	850495	Symbol	pgs -> char_tm . txy_fixed_valid		848691						
ANR	850496	Symbol	alpha_bits		848691						
ANR	850497	Symbol	penum -> wxy		848691						
ANR	850498	Symbol	pair		848691						
ANR	850499	Symbol	log2_scale		848691						
ANR	850500	Symbol	fpy		848691						
ANR	850501	Symbol	gx_path_current_point		848691						
ANR	850502	Symbol	fpx		848691						
ANR	850503	Symbol	glyph		848691						
ANR	850504	Symbol	* pfont		848691						
ANR	850505	Symbol	gs_note_error		848691						
ANR	850506	Symbol	cc -> wxy . x		848691						
ANR	850507	Symbol	lly		848691						
ANR	850508	Symbol	penum -> pair		848691						
ANR	850509	Symbol	llx		848691						
ANR	850510	Symbol	penum -> log2_scale		848691						
ANR	850511	Symbol	penum -> is_pure_color		848691						
ANR	850512	Symbol	fixed_rounded		848691						
ANR	850513	Symbol	show_origin_setup		848691						
ANR	850514	Symbol	TEXT_PROCESS_RENDER		848691						
ANR	850515	Function	gx_show_text_retry	1290:0:48855:49263							
ANR	850516	FunctionDef	gx_show_text_retry (gs_text_enum_t * pte)		850515	0					
ANR	850517	CompoundStatement		1292:0:48906:49263	850515	0					
ANR	850518	Statement	gs_show_enum	1293:4:48912:48923	850515	0	True				
ANR	850519	Statement	*	1293:17:48925:48925	850515	1	True				
ANR	850520	Statement	const	1293:18:48926:48930	850515	2	True				
ANR	850521	ExpressionStatement	penum = ( gs_show_enum * ) pte	1293:24:48932:48959	850515	3	True				
ANR	850522	AssignmentExpression	penum = ( gs_show_enum * ) pte		850515	0		=			
ANR	850523	Identifier	penum		850515	0					
ANR	850524	CastExpression	( gs_show_enum * ) pte		850515	1					
ANR	850525	CastTarget	gs_show_enum *		850515	0					
ANR	850526	Identifier	pte		850515	1					
ANR	850527	IfStatement	if ( penum -> cc )		850515	4					
ANR	850528	Condition	penum -> cc	1295:8:48970:48978	850515	0	True				
ANR	850529	PtrMemberAccess	penum -> cc		850515	0					
ANR	850530	Identifier	penum		850515	0					
ANR	850531	Identifier	cc		850515	1					
ANR	850532	CompoundStatement		5:8:84:120	850515	1					
ANR	850533	IdentifierDeclStatement	gs_font * pfont = penum -> current_font ;	1296:8:48991:49027	850515	0	True				
ANR	850534	IdentifierDecl	* pfont = penum -> current_font		850515	0					
ANR	850535	IdentifierDeclType	gs_font *		850515	0					
ANR	850536	Identifier	pfont		850515	1					
ANR	850537	AssignmentExpression	* pfont = penum -> current_font		850515	2		=			
ANR	850538	Identifier	pfont		850515	0					
ANR	850539	PtrMemberAccess	penum -> current_font		850515	1					
ANR	850540	Identifier	penum		850515	0					
ANR	850541	Identifier	current_font		850515	1					
ANR	850542	ExpressionStatement	"gx_free_cached_char ( pfont -> dir , penum -> cc )"	1298:8:49038:49080	850515	1	True				
ANR	850543	CallExpression	"gx_free_cached_char ( pfont -> dir , penum -> cc )"		850515	0					
ANR	850544	Callee	gx_free_cached_char		850515	0					
ANR	850545	Identifier	gx_free_cached_char		850515	0					
ANR	850546	ArgumentList	pfont -> dir		850515	1					
ANR	850547	Argument	pfont -> dir		850515	0					
ANR	850548	PtrMemberAccess	pfont -> dir		850515	0					
ANR	850549	Identifier	pfont		850515	0					
ANR	850550	Identifier	dir		850515	1					
ANR	850551	Argument	penum -> cc		850515	1					
ANR	850552	PtrMemberAccess	penum -> cc		850515	0					
ANR	850553	Identifier	penum		850515	0					
ANR	850554	Identifier	cc		850515	1					
ANR	850555	ExpressionStatement	penum -> cc = 0	1299:8:49090:49103	850515	2	True				
ANR	850556	AssignmentExpression	penum -> cc = 0		850515	0		=			
ANR	850557	PtrMemberAccess	penum -> cc		850515	0					
ANR	850558	Identifier	penum		850515	0					
ANR	850559	Identifier	cc		850515	1					
ANR	850560	PrimaryExpression	0		850515	1					
ANR	850561	ExpressionStatement	gs_grestore ( penum -> pgs )	1301:4:49115:49138	850515	5	True				
ANR	850562	CallExpression	gs_grestore ( penum -> pgs )		850515	0					
ANR	850563	Callee	gs_grestore		850515	0					
ANR	850564	Identifier	gs_grestore		850515	0					
ANR	850565	ArgumentList	penum -> pgs		850515	1					
ANR	850566	Argument	penum -> pgs		850515	0					
ANR	850567	PtrMemberAccess	penum -> pgs		850515	0					
ANR	850568	Identifier	penum		850515	0					
ANR	850569	Identifier	pgs		850515	1					
ANR	850570	ExpressionStatement	penum -> width_status = sws_retry	1302:4:49144:49175	850515	6	True				
ANR	850571	AssignmentExpression	penum -> width_status = sws_retry		850515	0		=			
ANR	850572	PtrMemberAccess	penum -> width_status		850515	0					
ANR	850573	Identifier	penum		850515	0					
ANR	850574	Identifier	width_status		850515	1					
ANR	850575	Identifier	sws_retry		850515	1					
ANR	850576	ExpressionStatement	penum -> log2_scale . x = penum -> log2_scale . y = 0	1303:4:49181:49226	850515	7	True				
ANR	850577	AssignmentExpression	penum -> log2_scale . x = penum -> log2_scale . y = 0		850515	0		=			
ANR	850578	MemberAccess	penum -> log2_scale . x		850515	0					
ANR	850579	PtrMemberAccess	penum -> log2_scale		850515	0					
ANR	850580	Identifier	penum		850515	0					
ANR	850581	Identifier	log2_scale		850515	1					
ANR	850582	Identifier	x		850515	1					
ANR	850583	AssignmentExpression	penum -> log2_scale . y = 0		850515	1		=			
ANR	850584	MemberAccess	penum -> log2_scale . y		850515	0					
ANR	850585	PtrMemberAccess	penum -> log2_scale		850515	0					
ANR	850586	Identifier	penum		850515	0					
ANR	850587	Identifier	log2_scale		850515	1					
ANR	850588	Identifier	y		850515	1					
ANR	850589	PrimaryExpression	0		850515	1					
ANR	850590	ExpressionStatement	penum -> pair = 0	1304:4:49232:49247	850515	8	True				
ANR	850591	AssignmentExpression	penum -> pair = 0		850515	0		=			
ANR	850592	PtrMemberAccess	penum -> pair		850515	0					
ANR	850593	Identifier	penum		850515	0					
ANR	850594	Identifier	pair		850515	1					
ANR	850595	PrimaryExpression	0		850515	1					
ANR	850596	ReturnStatement	return 0 ;	1305:4:49253:49261	850515	9	True				
ANR	850597	PrimaryExpression	0		850515	0					
ANR	850598	ReturnType	static int		850515	1					
ANR	850599	Identifier	gx_show_text_retry		850515	2					
ANR	850600	ParameterList	gs_text_enum_t * pte		850515	3					
ANR	850601	Parameter	gs_text_enum_t * pte	1291:19:48885:48903	850515	0	True				
ANR	850602	ParameterType	gs_text_enum_t *		850515	0					
ANR	850603	Identifier	pte		850515	1					
ANR	850604	CFGEntryNode	ENTRY		850515		True				
ANR	850605	CFGExitNode	EXIT		850515		True				
ANR	850606	Symbol	pte		850515						
ANR	850607	Symbol	penum -> width_status		850515						
ANR	850608	Symbol	* penum		850515						
ANR	850609	Symbol	pfont		850515						
ANR	850610	Symbol	penum		850515						
ANR	850611	Symbol	penum -> log2_scale . y		850515						
ANR	850612	Symbol	penum -> pgs		850515						
ANR	850613	Symbol	sws_retry		850515						
ANR	850614	Symbol	penum -> cc		850515						
ANR	850615	Symbol	penum -> current_font		850515						
ANR	850616	Symbol	* pfont		850515						
ANR	850617	Symbol	pfont -> dir		850515						
ANR	850618	Symbol	penum -> log2_scale . x		850515						
ANR	850619	Symbol	penum -> pair		850515						
ANR	850620	Symbol	penum -> log2_scale		850515						
ANR	850621	Function	show_finish	1309:0:49299:50133							
ANR	850622	FunctionDef	show_finish (gs_show_enum * penum)		850621	0					
ANR	850623	CompoundStatement		1311:0:49344:50133	850621	0					
ANR	850624	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	1312:4:49350:49377	850621	0	True				
ANR	850625	IdentifierDecl	* pgs = penum -> pgs		850621	0					
ANR	850626	IdentifierDeclType	gs_gstate *		850621	0					
ANR	850627	Identifier	pgs		850621	1					
ANR	850628	AssignmentExpression	* pgs = penum -> pgs		850621	2		=			
ANR	850629	Identifier	pgs		850621	0					
ANR	850630	PtrMemberAccess	penum -> pgs		850621	1					
ANR	850631	Identifier	penum		850621	0					
ANR	850632	Identifier	pgs		850621	1					
ANR	850633	IdentifierDeclStatement	"int code = 0 , rcode ;"	1313:4:49383:49402	850621	1	True				
ANR	850634	IdentifierDecl	code = 0		850621	0					
ANR	850635	IdentifierDeclType	int		850621	0					
ANR	850636	Identifier	code		850621	1					
ANR	850637	AssignmentExpression	code = 0		850621	2		=			
ANR	850638	Identifier	code		850621	0					
ANR	850639	PrimaryExpression	0		850621	1					
ANR	850640	IdentifierDecl	rcode		850621	1					
ANR	850641	IdentifierDeclType	int		850621	0					
ANR	850642	Identifier	rcode		850621	1					
ANR	850643	IfStatement	if ( ( penum -> text . operation & TEXT_DO_FALSE_CHARPATH ) || ( penum -> text . operation & TEXT_DO_TRUE_CHARPATH ) )		850621	2					
ANR	850644	Condition	( penum -> text . operation & TEXT_DO_FALSE_CHARPATH ) || ( penum -> text . operation & TEXT_DO_TRUE_CHARPATH )	1315:8:49413:49519	850621	0	True				
ANR	850645	OrExpression	( penum -> text . operation & TEXT_DO_FALSE_CHARPATH ) || ( penum -> text . operation & TEXT_DO_TRUE_CHARPATH )		850621	0		||			
ANR	850646	BitAndExpression	penum -> text . operation & TEXT_DO_FALSE_CHARPATH		850621	0		&			
ANR	850647	MemberAccess	penum -> text . operation		850621	0					
ANR	850648	PtrMemberAccess	penum -> text		850621	0					
ANR	850649	Identifier	penum		850621	0					
ANR	850650	Identifier	text		850621	1					
ANR	850651	Identifier	operation		850621	1					
ANR	850652	Identifier	TEXT_DO_FALSE_CHARPATH		850621	1					
ANR	850653	BitAndExpression	penum -> text . operation & TEXT_DO_TRUE_CHARPATH		850621	1		&			
ANR	850654	MemberAccess	penum -> text . operation		850621	0					
ANR	850655	PtrMemberAccess	penum -> text		850621	0					
ANR	850656	Identifier	penum		850621	0					
ANR	850657	Identifier	text		850621	1					
ANR	850658	Identifier	operation		850621	1					
ANR	850659	Identifier	TEXT_DO_TRUE_CHARPATH		850621	1					
ANR	850660	CompoundStatement		6:57:177:177	850621	1					
ANR	850661	IfStatement	if ( pgs -> path -> current_subpath )		850621	0					
ANR	850662	Condition	pgs -> path -> current_subpath	1317:12:49536:49561	850621	0	True				
ANR	850663	PtrMemberAccess	pgs -> path -> current_subpath		850621	0					
ANR	850664	PtrMemberAccess	pgs -> path		850621	0					
ANR	850665	Identifier	pgs		850621	0					
ANR	850666	Identifier	path		850621	1					
ANR	850667	Identifier	current_subpath		850621	1					
ANR	850668	ExpressionStatement	pgs -> path -> last_charpath_segment = pgs -> path -> current_subpath -> last	1318:12:49576:49643	850621	1	True				
ANR	850669	AssignmentExpression	pgs -> path -> last_charpath_segment = pgs -> path -> current_subpath -> last		850621	0		=			
ANR	850670	PtrMemberAccess	pgs -> path -> last_charpath_segment		850621	0					
ANR	850671	PtrMemberAccess	pgs -> path		850621	0					
ANR	850672	Identifier	pgs		850621	0					
ANR	850673	Identifier	path		850621	1					
ANR	850674	Identifier	last_charpath_segment		850621	1					
ANR	850675	PtrMemberAccess	pgs -> path -> current_subpath -> last		850621	1					
ANR	850676	PtrMemberAccess	pgs -> path -> current_subpath		850621	0					
ANR	850677	PtrMemberAccess	pgs -> path		850621	0					
ANR	850678	Identifier	pgs		850621	0					
ANR	850679	Identifier	path		850621	1					
ANR	850680	Identifier	current_subpath		850621	1					
ANR	850681	Identifier	last		850621	1					
ANR	850682	IfStatement	if ( penum -> auto_release )		850621	3					
ANR	850683	Condition	penum -> auto_release	1320:8:49659:49677	850621	0	True				
ANR	850684	PtrMemberAccess	penum -> auto_release		850621	0					
ANR	850685	Identifier	penum		850621	0					
ANR	850686	Identifier	auto_release		850621	1					
ANR	850687	ExpressionStatement	"penum -> procs -> release ( ( gs_text_enum_t * ) penum , ""show_finish"" )"	1321:8:49688:49749	850621	1	True				
ANR	850688	CallExpression	"penum -> procs -> release ( ( gs_text_enum_t * ) penum , ""show_finish"" )"		850621	0					
ANR	850689	Callee	penum -> procs -> release		850621	0					
ANR	850690	PtrMemberAccess	penum -> procs -> release		850621	0					
ANR	850691	PtrMemberAccess	penum -> procs		850621	0					
ANR	850692	Identifier	penum		850621	0					
ANR	850693	Identifier	procs		850621	1					
ANR	850694	Identifier	release		850621	1					
ANR	850695	ArgumentList	( gs_text_enum_t * ) penum		850621	1					
ANR	850696	Argument	( gs_text_enum_t * ) penum		850621	0					
ANR	850697	CastExpression	( gs_text_enum_t * ) penum		850621	0					
ANR	850698	CastTarget	gs_text_enum_t *		850621	0					
ANR	850699	Identifier	penum		850621	1					
ANR	850700	Argument	"""show_finish"""		850621	1					
ANR	850701	PrimaryExpression	"""show_finish"""		850621	0					
ANR	850702	IfStatement	if ( ! SHOW_IS_STRINGWIDTH ( penum ) )		850621	4					
ANR	850703	Condition	! SHOW_IS_STRINGWIDTH ( penum )	1323:8:49760:49786	850621	0	True				
ANR	850704	UnaryOperationExpression	! SHOW_IS_STRINGWIDTH ( penum )		850621	0					
ANR	850705	UnaryOperator	!		850621	0					
ANR	850706	CallExpression	SHOW_IS_STRINGWIDTH ( penum )		850621	1					
ANR	850707	Callee	SHOW_IS_STRINGWIDTH		850621	0					
ANR	850708	Identifier	SHOW_IS_STRINGWIDTH		850621	0					
ANR	850709	ArgumentList	penum		850621	1					
ANR	850710	Argument	penum		850621	0					
ANR	850711	Identifier	penum		850621	0					
ANR	850712	ReturnStatement	return 0 ;	1324:7:49796:49804	850621	1	True				
ANR	850713	PrimaryExpression	0		850621	0					
ANR	850714	IfStatement	if ( ! ( penum -> text . operation & TEXT_RENDER_MODE_3 ) )		850621	5					
ANR	850715	Condition	! ( penum -> text . operation & TEXT_RENDER_MODE_3 )	1328:8:49950:49994	850621	0	True				
ANR	850716	UnaryOperationExpression	! ( penum -> text . operation & TEXT_RENDER_MODE_3 )		850621	0					
ANR	850717	UnaryOperator	!		850621	0					
ANR	850718	BitAndExpression	penum -> text . operation & TEXT_RENDER_MODE_3		850621	1		&			
ANR	850719	MemberAccess	penum -> text . operation		850621	0					
ANR	850720	PtrMemberAccess	penum -> text		850621	0					
ANR	850721	Identifier	penum		850621	0					
ANR	850722	Identifier	text		850621	1					
ANR	850723	Identifier	operation		850621	1					
ANR	850724	Identifier	TEXT_RENDER_MODE_3		850621	1					
ANR	850725	ExpressionStatement	"code = gs_currentpoint ( pgs , & penum -> returned . total_width )"	1329:8:50005:50062	850621	1	True				
ANR	850726	AssignmentExpression	"code = gs_currentpoint ( pgs , & penum -> returned . total_width )"		850621	0		=			
ANR	850727	Identifier	code		850621	0					
ANR	850728	CallExpression	"gs_currentpoint ( pgs , & penum -> returned . total_width )"		850621	1					
ANR	850729	Callee	gs_currentpoint		850621	0					
ANR	850730	Identifier	gs_currentpoint		850621	0					
ANR	850731	ArgumentList	pgs		850621	1					
ANR	850732	Argument	pgs		850621	0					
ANR	850733	Identifier	pgs		850621	0					
ANR	850734	Argument	& penum -> returned . total_width		850621	1					
ANR	850735	UnaryOperationExpression	& penum -> returned . total_width		850621	0					
ANR	850736	UnaryOperator	&		850621	0					
ANR	850737	MemberAccess	penum -> returned . total_width		850621	1					
ANR	850738	PtrMemberAccess	penum -> returned		850621	0					
ANR	850739	Identifier	penum		850621	0					
ANR	850740	Identifier	returned		850621	1					
ANR	850741	Identifier	total_width		850621	1					
ANR	850742	ExpressionStatement	rcode = gs_grestore ( pgs )	1330:4:50068:50092	850621	6	True				
ANR	850743	AssignmentExpression	rcode = gs_grestore ( pgs )		850621	0		=			
ANR	850744	Identifier	rcode		850621	0					
ANR	850745	CallExpression	gs_grestore ( pgs )		850621	1					
ANR	850746	Callee	gs_grestore		850621	0					
ANR	850747	Identifier	gs_grestore		850621	0					
ANR	850748	ArgumentList	pgs		850621	1					
ANR	850749	Argument	pgs		850621	0					
ANR	850750	Identifier	pgs		850621	0					
ANR	850751	ReturnStatement	return ( code < 0 ? code : rcode ) ;	1332:4:50099:50131	850621	7	True				
ANR	850752	ConditionalExpression	code < 0 ? code : rcode		850621	0					
ANR	850753	Condition	code < 0		850621	0					
ANR	850754	RelationalExpression	code < 0		850621	0		<			
ANR	850755	Identifier	code		850621	0					
ANR	850756	PrimaryExpression	0		850621	1					
ANR	850757	Identifier	code		850621	1					
ANR	850758	Identifier	rcode		850621	2					
ANR	850759	ReturnType	static int		850621	1					
ANR	850760	Identifier	show_finish		850621	2					
ANR	850761	ParameterList	gs_show_enum * penum		850621	3					
ANR	850762	Parameter	gs_show_enum * penum	1310:12:49322:49341	850621	0	True				
ANR	850763	ParameterType	gs_show_enum *		850621	0					
ANR	850764	Identifier	penum		850621	1					
ANR	850765	CFGEntryNode	ENTRY		850621		True				
ANR	850766	CFGExitNode	EXIT		850621		True				
ANR	850767	Symbol	* penum		850621						
ANR	850768	Symbol	penum -> text . operation		850621						
ANR	850769	Symbol	code		850621						
ANR	850770	Symbol	penum -> procs		850621						
ANR	850771	Symbol	* pgs		850621						
ANR	850772	Symbol	penum -> text		850621						
ANR	850773	Symbol	pgs -> path		850621						
ANR	850774	Symbol	TEXT_RENDER_MODE_3		850621						
ANR	850775	Symbol	TEXT_DO_FALSE_CHARPATH		850621						
ANR	850776	Symbol	penum -> pgs		850621						
ANR	850777	Symbol	penum -> returned		850621						
ANR	850778	Symbol	gs_grestore		850621						
ANR	850779	Symbol	SHOW_IS_STRINGWIDTH		850621						
ANR	850780	Symbol	* pgs -> path -> current_subpath		850621						
ANR	850781	Symbol	* pgs -> path		850621						
ANR	850782	Symbol	pgs -> path -> last_charpath_segment		850621						
ANR	850783	Symbol	* * * pgs		850621						
ANR	850784	Symbol	pgs		850621						
ANR	850785	Symbol	& penum -> returned . total_width		850621						
ANR	850786	Symbol	pgs -> path -> current_subpath		850621						
ANR	850787	Symbol	* * pgs -> path		850621						
ANR	850788	Symbol	penum		850621						
ANR	850789	Symbol	gs_currentpoint		850621						
ANR	850790	Symbol	rcode		850621						
ANR	850791	Symbol	pgs -> path -> current_subpath -> last		850621						
ANR	850792	Symbol	penum -> auto_release		850621						
ANR	850793	Symbol	* * pgs		850621						
ANR	850794	Symbol	& penum -> returned		850621						
ANR	850795	Symbol	TEXT_DO_TRUE_CHARPATH		850621						
ANR	850796	Function	gx_show_text_release	1336:0:50165:50740							
ANR	850797	FunctionDef	"gx_show_text_release (gs_text_enum_t * pte , client_name_t cname)"		850796	0					
ANR	850798	CompoundStatement		1338:0:50240:50740	850796	0					
ANR	850799	Statement	gs_show_enum	1339:4:50246:50257	850796	0	True				
ANR	850800	Statement	*	1339:17:50259:50259	850796	1	True				
ANR	850801	Statement	const	1339:18:50260:50264	850796	2	True				
ANR	850802	ExpressionStatement	penum = ( gs_show_enum * ) pte	1339:24:50266:50293	850796	3	True				
ANR	850803	AssignmentExpression	penum = ( gs_show_enum * ) pte		850796	0		=			
ANR	850804	Identifier	penum		850796	0					
ANR	850805	CastExpression	( gs_show_enum * ) pte		850796	1					
ANR	850806	CastTarget	gs_show_enum *		850796	0					
ANR	850807	Identifier	pte		850796	1					
ANR	850808	ExpressionStatement	penum -> cc = 0	1341:4:50300:50313	850796	4	True				
ANR	850809	AssignmentExpression	penum -> cc = 0		850796	0		=			
ANR	850810	PtrMemberAccess	penum -> cc		850796	0					
ANR	850811	Identifier	penum		850796	0					
ANR	850812	Identifier	cc		850796	1					
ANR	850813	PrimaryExpression	0		850796	1					
ANR	850814	IfStatement	if ( penum -> dev_cache2 )		850796	5					
ANR	850815	Condition	penum -> dev_cache2	1342:8:50323:50339	850796	0	True				
ANR	850816	PtrMemberAccess	penum -> dev_cache2		850796	0					
ANR	850817	Identifier	penum		850796	0					
ANR	850818	Identifier	dev_cache2		850796	1					
ANR	850819	CompoundStatement		5:27:101:101	850796	1					
ANR	850820	ExpressionStatement	"gx_device_retain ( ( gx_device * ) penum -> dev_cache2 , false )"	1343:8:50352:50407	850796	0	True				
ANR	850821	CallExpression	"gx_device_retain ( ( gx_device * ) penum -> dev_cache2 , false )"		850796	0					
ANR	850822	Callee	gx_device_retain		850796	0					
ANR	850823	Identifier	gx_device_retain		850796	0					
ANR	850824	ArgumentList	( gx_device * ) penum -> dev_cache2		850796	1					
ANR	850825	Argument	( gx_device * ) penum -> dev_cache2		850796	0					
ANR	850826	CastExpression	( gx_device * ) penum -> dev_cache2		850796	0					
ANR	850827	CastTarget	gx_device *		850796	0					
ANR	850828	PtrMemberAccess	penum -> dev_cache2		850796	1					
ANR	850829	Identifier	penum		850796	0					
ANR	850830	Identifier	dev_cache2		850796	1					
ANR	850831	Argument	false		850796	1					
ANR	850832	Identifier	false		850796	0					
ANR	850833	ExpressionStatement	penum -> dev_cache2 = 0	1344:8:50417:50438	850796	1	True				
ANR	850834	AssignmentExpression	penum -> dev_cache2 = 0		850796	0		=			
ANR	850835	PtrMemberAccess	penum -> dev_cache2		850796	0					
ANR	850836	Identifier	penum		850796	0					
ANR	850837	Identifier	dev_cache2		850796	1					
ANR	850838	PrimaryExpression	0		850796	1					
ANR	850839	IfStatement	if ( penum -> dev_cache )		850796	6					
ANR	850840	Condition	penum -> dev_cache	1346:8:50454:50469	850796	0	True				
ANR	850841	PtrMemberAccess	penum -> dev_cache		850796	0					
ANR	850842	Identifier	penum		850796	0					
ANR	850843	Identifier	dev_cache		850796	1					
ANR	850844	CompoundStatement		9:26:231:231	850796	1					
ANR	850845	ExpressionStatement	"gx_device_retain ( ( gx_device * ) penum -> dev_cache , false )"	1347:8:50482:50536	850796	0	True				
ANR	850846	CallExpression	"gx_device_retain ( ( gx_device * ) penum -> dev_cache , false )"		850796	0					
ANR	850847	Callee	gx_device_retain		850796	0					
ANR	850848	Identifier	gx_device_retain		850796	0					
ANR	850849	ArgumentList	( gx_device * ) penum -> dev_cache		850796	1					
ANR	850850	Argument	( gx_device * ) penum -> dev_cache		850796	0					
ANR	850851	CastExpression	( gx_device * ) penum -> dev_cache		850796	0					
ANR	850852	CastTarget	gx_device *		850796	0					
ANR	850853	PtrMemberAccess	penum -> dev_cache		850796	1					
ANR	850854	Identifier	penum		850796	0					
ANR	850855	Identifier	dev_cache		850796	1					
ANR	850856	Argument	false		850796	1					
ANR	850857	Identifier	false		850796	0					
ANR	850858	ExpressionStatement	penum -> dev_cache = 0	1348:8:50546:50566	850796	1	True				
ANR	850859	AssignmentExpression	penum -> dev_cache = 0		850796	0		=			
ANR	850860	PtrMemberAccess	penum -> dev_cache		850796	0					
ANR	850861	Identifier	penum		850796	0					
ANR	850862	Identifier	dev_cache		850796	1					
ANR	850863	PrimaryExpression	0		850796	1					
ANR	850864	IfStatement	if ( penum -> dev_null )		850796	7					
ANR	850865	Condition	penum -> dev_null	1350:8:50582:50596	850796	0	True				
ANR	850866	PtrMemberAccess	penum -> dev_null		850796	0					
ANR	850867	Identifier	penum		850796	0					
ANR	850868	Identifier	dev_null		850796	1					
ANR	850869	CompoundStatement		13:25:358:358	850796	1					
ANR	850870	ExpressionStatement	"gx_device_retain ( ( gx_device * ) penum -> dev_null , false )"	1351:8:50609:50662	850796	0	True				
ANR	850871	CallExpression	"gx_device_retain ( ( gx_device * ) penum -> dev_null , false )"		850796	0					
ANR	850872	Callee	gx_device_retain		850796	0					
ANR	850873	Identifier	gx_device_retain		850796	0					
ANR	850874	ArgumentList	( gx_device * ) penum -> dev_null		850796	1					
ANR	850875	Argument	( gx_device * ) penum -> dev_null		850796	0					
ANR	850876	CastExpression	( gx_device * ) penum -> dev_null		850796	0					
ANR	850877	CastTarget	gx_device *		850796	0					
ANR	850878	PtrMemberAccess	penum -> dev_null		850796	1					
ANR	850879	Identifier	penum		850796	0					
ANR	850880	Identifier	dev_null		850796	1					
ANR	850881	Argument	false		850796	1					
ANR	850882	Identifier	false		850796	0					
ANR	850883	ExpressionStatement	penum -> dev_null = 0	1352:8:50672:50691	850796	1	True				
ANR	850884	AssignmentExpression	penum -> dev_null = 0		850796	0		=			
ANR	850885	PtrMemberAccess	penum -> dev_null		850796	0					
ANR	850886	Identifier	penum		850796	0					
ANR	850887	Identifier	dev_null		850796	1					
ANR	850888	PrimaryExpression	0		850796	1					
ANR	850889	ExpressionStatement	"gx_default_text_release ( pte , cname )"	1354:4:50703:50738	850796	8	True				
ANR	850890	CallExpression	"gx_default_text_release ( pte , cname )"		850796	0					
ANR	850891	Callee	gx_default_text_release		850796	0					
ANR	850892	Identifier	gx_default_text_release		850796	0					
ANR	850893	ArgumentList	pte		850796	1					
ANR	850894	Argument	pte		850796	0					
ANR	850895	Identifier	pte		850796	0					
ANR	850896	Argument	cname		850796	1					
ANR	850897	Identifier	cname		850796	0					
ANR	850898	ReturnType	static void		850796	1					
ANR	850899	Identifier	gx_show_text_release		850796	2					
ANR	850900	ParameterList	"gs_text_enum_t * pte , client_name_t cname"		850796	3					
ANR	850901	Parameter	gs_text_enum_t * pte	1337:21:50198:50216	850796	0	True				
ANR	850902	ParameterType	gs_text_enum_t *		850796	0					
ANR	850903	Identifier	pte		850796	1					
ANR	850904	Parameter	client_name_t cname	1337:42:50219:50237	850796	1	True				
ANR	850905	ParameterType	client_name_t		850796	0					
ANR	850906	Identifier	cname		850796	1					
ANR	850907	CFGEntryNode	ENTRY		850796		True				
ANR	850908	CFGExitNode	EXIT		850796		True				
ANR	850909	Symbol	pte		850796						
ANR	850910	Symbol	penum -> dev_cache2		850796						
ANR	850911	Symbol	* penum		850796						
ANR	850912	Symbol	penum -> dev_null		850796						
ANR	850913	Symbol	penum -> cc		850796						
ANR	850914	Symbol	cname		850796						
ANR	850915	Symbol	penum		850796						
ANR	850916	Symbol	false		850796						
ANR	850917	Symbol	penum -> dev_cache		850796						
ANR	850918	Function	gs_show_in_charpath	1360:0:50820:50921							
ANR	850919	FunctionDef	gs_show_in_charpath (const gs_show_enum * penum)		850918	0					
ANR	850920	CompoundStatement		1362:0:50886:50921	850918	0					
ANR	850921	ReturnStatement	return penum -> charpath_flag ;	1363:4:50892:50919	850918	0	True				
ANR	850922	PtrMemberAccess	penum -> charpath_flag		850918	0					
ANR	850923	Identifier	penum		850918	0					
ANR	850924	Identifier	charpath_flag		850918	1					
ANR	850925	ReturnType	gs_char_path_mode		850918	1					
ANR	850926	Identifier	gs_show_in_charpath		850918	2					
ANR	850927	ParameterList	const gs_show_enum * penum		850918	3					
ANR	850928	Parameter	const gs_show_enum * penum	1361:20:50858:50883	850918	0	True				
ANR	850929	ParameterType	const gs_show_enum *		850918	0					
ANR	850930	Identifier	penum		850918	1					
ANR	850931	CFGEntryNode	ENTRY		850918		True				
ANR	850932	CFGExitNode	EXIT		850918		True				
ANR	850933	Symbol	* penum		850918						
ANR	850934	Symbol	penum		850918						
ANR	850935	Symbol	penum -> charpath_flag		850918						
ANR	850936	Function	gx_show_text_is_width_only	1372:0:51279:51639							
ANR	850937	FunctionDef	gx_show_text_is_width_only (const gs_text_enum_t * pte)		850936	0					
ANR	850938	CompoundStatement		1374:0:51345:51639	850936	0					
ANR	850939	Statement	const	1375:4:51351:51355	850936	0	True				
ANR	850940	Statement	gs_show_enum	1375:10:51357:51368	850936	1	True				
ANR	850941	Statement	*	1375:23:51370:51370	850936	2	True				
ANR	850942	Statement	const	1375:24:51371:51375	850936	3	True				
ANR	850943	ExpressionStatement	penum = ( const gs_show_enum * ) pte	1375:30:51377:51410	850936	4	True				
ANR	850944	AssignmentExpression	penum = ( const gs_show_enum * ) pte		850936	0		=			
ANR	850945	Identifier	penum		850936	0					
ANR	850946	CastExpression	( const gs_show_enum * ) pte		850936	1					
ANR	850947	CastTarget	const gs_show_enum *		850936	0					
ANR	850948	Identifier	pte		850936	1					
ANR	850949	ReturnStatement	return ( ( ! SHOW_USES_OUTLINE ( penum ) || penum -> cc != 0 ) && penum -> pgs -> level == penum -> level + 1 ) ;	1379:4:51530:51637	850936	5	True				
ANR	850950	AndExpression	( ! SHOW_USES_OUTLINE ( penum ) || penum -> cc != 0 ) && penum -> pgs -> level == penum -> level + 1		850936	0		&&			
ANR	850951	OrExpression	! SHOW_USES_OUTLINE ( penum ) || penum -> cc != 0		850936	0		||			
ANR	850952	UnaryOperationExpression	! SHOW_USES_OUTLINE ( penum )		850936	0					
ANR	850953	UnaryOperator	!		850936	0					
ANR	850954	CallExpression	SHOW_USES_OUTLINE ( penum )		850936	1					
ANR	850955	Callee	SHOW_USES_OUTLINE		850936	0					
ANR	850956	Identifier	SHOW_USES_OUTLINE		850936	0					
ANR	850957	ArgumentList	penum		850936	1					
ANR	850958	Argument	penum		850936	0					
ANR	850959	Identifier	penum		850936	0					
ANR	850960	EqualityExpression	penum -> cc != 0		850936	1		!=			
ANR	850961	PtrMemberAccess	penum -> cc		850936	0					
ANR	850962	Identifier	penum		850936	0					
ANR	850963	Identifier	cc		850936	1					
ANR	850964	PrimaryExpression	0		850936	1					
ANR	850965	EqualityExpression	penum -> pgs -> level == penum -> level + 1		850936	1		==			
ANR	850966	PtrMemberAccess	penum -> pgs -> level		850936	0					
ANR	850967	PtrMemberAccess	penum -> pgs		850936	0					
ANR	850968	Identifier	penum		850936	0					
ANR	850969	Identifier	pgs		850936	1					
ANR	850970	Identifier	level		850936	1					
ANR	850971	AdditiveExpression	penum -> level + 1		850936	1		+			
ANR	850972	PtrMemberAccess	penum -> level		850936	0					
ANR	850973	Identifier	penum		850936	0					
ANR	850974	Identifier	level		850936	1					
ANR	850975	PrimaryExpression	1		850936	1					
ANR	850976	ReturnType	static bool		850936	1					
ANR	850977	Identifier	gx_show_text_is_width_only		850936	2					
ANR	850978	ParameterList	const gs_text_enum_t * pte		850936	3					
ANR	850979	Parameter	const gs_text_enum_t * pte	1373:27:51318:51342	850936	0	True				
ANR	850980	ParameterType	const gs_text_enum_t *		850936	0					
ANR	850981	Identifier	pte		850936	1					
ANR	850982	CFGEntryNode	ENTRY		850936		True				
ANR	850983	CFGExitNode	EXIT		850936		True				
ANR	850984	Symbol	pte		850936						
ANR	850985	Symbol	* penum		850936						
ANR	850986	Symbol	penum -> pgs -> level		850936						
ANR	850987	Symbol	penum -> cc		850936						
ANR	850988	Symbol	* penum -> pgs		850936						
ANR	850989	Symbol	SHOW_USES_OUTLINE		850936						
ANR	850990	Symbol	penum		850936						
ANR	850991	Symbol	penum -> pgs		850936						
ANR	850992	Symbol	* * penum		850936						
ANR	850993	Symbol	penum -> level		850936						
ANR	850994	Function	gx_show_text_current_width	1384:0:51711:52015							
ANR	850995	FunctionDef	"gx_show_text_current_width (const gs_text_enum_t * pte , gs_point * pwidth)"		850994	0					
ANR	850996	CompoundStatement		1386:0:51794:52015	850994	0					
ANR	850997	Statement	const	1387:4:51800:51804	850994	0	True				
ANR	850998	Statement	gs_show_enum	1387:10:51806:51817	850994	1	True				
ANR	850999	Statement	*	1387:23:51819:51819	850994	2	True				
ANR	851000	Statement	const	1387:24:51820:51824	850994	3	True				
ANR	851001	ExpressionStatement	penum = ( const gs_show_enum * ) pte	1387:30:51826:51859	850994	4	True				
ANR	851002	AssignmentExpression	penum = ( const gs_show_enum * ) pte		850994	0		=			
ANR	851003	Identifier	penum		850994	0					
ANR	851004	CastExpression	( const gs_show_enum * ) pte		850994	1					
ANR	851005	CastTarget	const gs_show_enum *		850994	0					
ANR	851006	Identifier	pte		850994	1					
ANR	851007	ReturnStatement	"return gs_idtransform ( penum -> pgs , fixed2float ( penum -> wxy . x ) , fixed2float ( penum -> wxy . y ) , pwidth ) ;"	1389:4:51866:52013	850994	5	True				
ANR	851008	CallExpression	"gs_idtransform ( penum -> pgs , fixed2float ( penum -> wxy . x ) , fixed2float ( penum -> wxy . y ) , pwidth )"		850994	0					
ANR	851009	Callee	gs_idtransform		850994	0					
ANR	851010	Identifier	gs_idtransform		850994	0					
ANR	851011	ArgumentList	penum -> pgs		850994	1					
ANR	851012	Argument	penum -> pgs		850994	0					
ANR	851013	PtrMemberAccess	penum -> pgs		850994	0					
ANR	851014	Identifier	penum		850994	0					
ANR	851015	Identifier	pgs		850994	1					
ANR	851016	Argument	fixed2float ( penum -> wxy . x )		850994	1					
ANR	851017	CallExpression	fixed2float ( penum -> wxy . x )		850994	0					
ANR	851018	Callee	fixed2float		850994	0					
ANR	851019	Identifier	fixed2float		850994	0					
ANR	851020	ArgumentList	penum -> wxy . x		850994	1					
ANR	851021	Argument	penum -> wxy . x		850994	0					
ANR	851022	MemberAccess	penum -> wxy . x		850994	0					
ANR	851023	PtrMemberAccess	penum -> wxy		850994	0					
ANR	851024	Identifier	penum		850994	0					
ANR	851025	Identifier	wxy		850994	1					
ANR	851026	Identifier	x		850994	1					
ANR	851027	Argument	fixed2float ( penum -> wxy . y )		850994	2					
ANR	851028	CallExpression	fixed2float ( penum -> wxy . y )		850994	0					
ANR	851029	Callee	fixed2float		850994	0					
ANR	851030	Identifier	fixed2float		850994	0					
ANR	851031	ArgumentList	penum -> wxy . y		850994	1					
ANR	851032	Argument	penum -> wxy . y		850994	0					
ANR	851033	MemberAccess	penum -> wxy . y		850994	0					
ANR	851034	PtrMemberAccess	penum -> wxy		850994	0					
ANR	851035	Identifier	penum		850994	0					
ANR	851036	Identifier	wxy		850994	1					
ANR	851037	Identifier	y		850994	1					
ANR	851038	Argument	pwidth		850994	3					
ANR	851039	Identifier	pwidth		850994	0					
ANR	851040	ReturnType	static int		850994	1					
ANR	851041	Identifier	gx_show_text_current_width		850994	2					
ANR	851042	ParameterList	"const gs_text_enum_t * pte , gs_point * pwidth"		850994	3					
ANR	851043	Parameter	const gs_text_enum_t * pte	1385:27:51749:51773	850994	0	True				
ANR	851044	ParameterType	const gs_text_enum_t *		850994	0					
ANR	851045	Identifier	pte		850994	1					
ANR	851046	Parameter	gs_point * pwidth	1385:54:51776:51791	850994	1	True				
ANR	851047	ParameterType	gs_point *		850994	0					
ANR	851048	Identifier	pwidth		850994	1					
ANR	851049	CFGEntryNode	ENTRY		850994		True				
ANR	851050	CFGExitNode	EXIT		850994		True				
ANR	851051	Symbol	pte		850994						
ANR	851052	Symbol	penum -> wxy . y		850994						
ANR	851053	Symbol	* penum		850994						
ANR	851054	Symbol	penum -> wxy . x		850994						
ANR	851055	Symbol	fixed2float		850994						
ANR	851056	Symbol	penum		850994						
ANR	851057	Symbol	pwidth		850994						
ANR	851058	Symbol	penum -> wxy		850994						
ANR	851059	Symbol	gs_idtransform		850994						
ANR	851060	Symbol	penum -> pgs		850994						
ANR	851061	Function	gs_show_current_font	1395:0:52059:52237							
ANR	851062	FunctionDef	gs_show_current_font (const gs_show_enum * penum)		851061	0					
ANR	851063	CompoundStatement		1397:0:52118:52237	851061	0					
ANR	851064	ReturnStatement	return ( penum -> fstack . depth < 0 ? penum -> pgs -> font : penum -> fstack . items [ penum -> fstack . depth ] . font ) ;	1398:4:52124:52235	851061	0	True				
ANR	851065	ConditionalExpression	penum -> fstack . depth < 0 ? penum -> pgs -> font : penum -> fstack . items [ penum -> fstack . depth ] . font		851061	0					
ANR	851066	Condition	penum -> fstack . depth < 0		851061	0					
ANR	851067	RelationalExpression	penum -> fstack . depth < 0		851061	0		<			
ANR	851068	MemberAccess	penum -> fstack . depth		851061	0					
ANR	851069	PtrMemberAccess	penum -> fstack		851061	0					
ANR	851070	Identifier	penum		851061	0					
ANR	851071	Identifier	fstack		851061	1					
ANR	851072	Identifier	depth		851061	1					
ANR	851073	PrimaryExpression	0		851061	1					
ANR	851074	PtrMemberAccess	penum -> pgs -> font		851061	1					
ANR	851075	PtrMemberAccess	penum -> pgs		851061	0					
ANR	851076	Identifier	penum		851061	0					
ANR	851077	Identifier	pgs		851061	1					
ANR	851078	Identifier	font		851061	1					
ANR	851079	MemberAccess	penum -> fstack . items [ penum -> fstack . depth ] . font		851061	2					
ANR	851080	ArrayIndexing	penum -> fstack . items [ penum -> fstack . depth ]		851061	0					
ANR	851081	MemberAccess	penum -> fstack . items		851061	0					
ANR	851082	PtrMemberAccess	penum -> fstack		851061	0					
ANR	851083	Identifier	penum		851061	0					
ANR	851084	Identifier	fstack		851061	1					
ANR	851085	Identifier	items		851061	1					
ANR	851086	MemberAccess	penum -> fstack . depth		851061	1					
ANR	851087	PtrMemberAccess	penum -> fstack		851061	0					
ANR	851088	Identifier	penum		851061	0					
ANR	851089	Identifier	fstack		851061	1					
ANR	851090	Identifier	depth		851061	1					
ANR	851091	Identifier	font		851061	1					
ANR	851092	ReturnType	gs_font *		851061	1					
ANR	851093	Identifier	gs_show_current_font		851061	2					
ANR	851094	ParameterList	const gs_show_enum * penum		851061	3					
ANR	851095	Parameter	const gs_show_enum * penum	1396:21:52090:52115	851061	0	True				
ANR	851096	ParameterType	const gs_show_enum *		851061	0					
ANR	851097	Identifier	penum		851061	1					
ANR	851098	CFGEntryNode	ENTRY		851061		True				
ANR	851099	CFGExitNode	EXIT		851061		True				
ANR	851100	Symbol	* penum		851061						
ANR	851101	Symbol	* penum -> pgs		851061						
ANR	851102	Symbol	* penum -> fstack . depth		851061						
ANR	851103	Symbol	penum		851061						
ANR	851104	Symbol	penum -> fstack . depth		851061						
ANR	851105	Symbol	penum -> pgs		851061						
ANR	851106	Symbol	* penum -> fstack . items		851061						
ANR	851107	Symbol	penum -> fstack		851061						
ANR	851108	Symbol	* penum -> fstack		851061						
ANR	851109	Symbol	penum -> pgs -> font		851061						
ANR	851110	Symbol	penum -> fstack . items		851061						
ANR	851111	Symbol	penum -> fstack . items [ penum -> fstack . depth ] . font		851061						
ANR	851112	Symbol	* * penum		851061						
ANR	851113	Function	show_state_setup	1408:0:52491:55987							
ANR	851114	FunctionDef	show_state_setup (gs_show_enum * penum)		851113	0					
ANR	851115	CompoundStatement		1410:0:52541:55987	851113	0					
ANR	851116	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	1411:4:52547:52574	851113	0	True				
ANR	851117	IdentifierDecl	* pgs = penum -> pgs		851113	0					
ANR	851118	IdentifierDeclType	gs_gstate *		851113	0					
ANR	851119	Identifier	pgs		851113	1					
ANR	851120	AssignmentExpression	* pgs = penum -> pgs		851113	2		=			
ANR	851121	Identifier	pgs		851113	0					
ANR	851122	PtrMemberAccess	penum -> pgs		851113	1					
ANR	851123	Identifier	penum		851113	0					
ANR	851124	Identifier	pgs		851113	1					
ANR	851125	IdentifierDeclStatement	gx_clip_path * pcpath ;	1412:4:52580:52600	851113	1	True				
ANR	851126	IdentifierDecl	* pcpath		851113	0					
ANR	851127	IdentifierDeclType	gx_clip_path *		851113	0					
ANR	851128	Identifier	pcpath		851113	1					
ANR	851129	IdentifierDeclStatement	gs_font * pfont ;	1413:4:52606:52620	851113	2	True				
ANR	851130	IdentifierDecl	* pfont		851113	0					
ANR	851131	IdentifierDeclType	gs_font *		851113	0					
ANR	851132	Identifier	pfont		851113	1					
ANR	851133	IfStatement	if ( penum -> fstack . depth <= 0 )		851113	3					
ANR	851134	Condition	penum -> fstack . depth <= 0	1415:8:52631:52654	851113	0	True				
ANR	851135	RelationalExpression	penum -> fstack . depth <= 0		851113	0		<=			
ANR	851136	MemberAccess	penum -> fstack . depth		851113	0					
ANR	851137	PtrMemberAccess	penum -> fstack		851113	0					
ANR	851138	Identifier	penum		851113	0					
ANR	851139	Identifier	fstack		851113	1					
ANR	851140	Identifier	depth		851113	1					
ANR	851141	PrimaryExpression	0		851113	1					
ANR	851142	CompoundStatement		6:34:115:115	851113	1					
ANR	851143	ExpressionStatement	pfont = pgs -> font	1416:8:52667:52684	851113	0	True				
ANR	851144	AssignmentExpression	pfont = pgs -> font		851113	0		=			
ANR	851145	Identifier	pfont		851113	0					
ANR	851146	PtrMemberAccess	pgs -> font		851113	1					
ANR	851147	Identifier	pgs		851113	0					
ANR	851148	Identifier	font		851113	1					
ANR	851149	IfStatement	if ( pfont -> FontType == ft_CID_encrypted )		851113	1					
ANR	851150	Condition	pfont -> FontType == ft_CID_encrypted	1417:12:52698:52732	851113	0	True				
ANR	851151	EqualityExpression	pfont -> FontType == ft_CID_encrypted		851113	0		==			
ANR	851152	PtrMemberAccess	pfont -> FontType		851113	0					
ANR	851153	Identifier	pfont		851113	0					
ANR	851154	Identifier	FontType		851113	1					
ANR	851155	Identifier	ft_CID_encrypted		851113	1					
ANR	851156	CompoundStatement		13:12:365:512	851113	1					
ANR	851157	IdentifierDeclStatement	gs_matrix mat ;	1420:12:52858:52871	851113	0	True				
ANR	851158	IdentifierDecl	mat		851113	0					
ANR	851159	IdentifierDeclType	gs_matrix		851113	0					
ANR	851160	Identifier	mat		851113	1					
ANR	851161	IdentifierDeclStatement	int fidx ;	1421:12:52885:52893	851113	1	True				
ANR	851162	IdentifierDecl	fidx		851113	0					
ANR	851163	IdentifierDeclType	int		851113	0					
ANR	851164	Identifier	fidx		851113	1					
ANR	851165	IdentifierDeclStatement	"int code = ( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , penum -> text . data . d_glyph , NULL , & fidx ) ;"	1422:12:52907:53054	851113	2	True				
ANR	851166	IdentifierDecl	"code = ( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , penum -> text . data . d_glyph , NULL , & fidx )"		851113	0					
ANR	851167	IdentifierDeclType	int		851113	0					
ANR	851168	Identifier	code		851113	1					
ANR	851169	AssignmentExpression	"code = ( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , penum -> text . data . d_glyph , NULL , & fidx )"		851113	2		=			
ANR	851170	Identifier	code		851113	0					
ANR	851171	CallExpression	"( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , penum -> text . data . d_glyph , NULL , & fidx )"		851113	1					
ANR	851172	Callee	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		851113	0					
ANR	851173	MemberAccess	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		851113	0					
ANR	851174	PtrMemberAccess	( ( gs_font_cid0 * ) pfont ) -> cidata		851113	0					
ANR	851175	CastExpression	( gs_font_cid0 * ) pfont		851113	0					
ANR	851176	CastTarget	gs_font_cid0 *		851113	0					
ANR	851177	Identifier	pfont		851113	1					
ANR	851178	Identifier	cidata		851113	1					
ANR	851179	Identifier	glyph_data		851113	1					
ANR	851180	ArgumentList	( gs_font_base * ) pfont		851113	1					
ANR	851181	Argument	( gs_font_base * ) pfont		851113	0					
ANR	851182	CastExpression	( gs_font_base * ) pfont		851113	0					
ANR	851183	CastTarget	gs_font_base *		851113	0					
ANR	851184	Identifier	pfont		851113	1					
ANR	851185	Argument	penum -> text . data . d_glyph		851113	1					
ANR	851186	MemberAccess	penum -> text . data . d_glyph		851113	0					
ANR	851187	MemberAccess	penum -> text . data		851113	0					
ANR	851188	PtrMemberAccess	penum -> text		851113	0					
ANR	851189	Identifier	penum		851113	0					
ANR	851190	Identifier	text		851113	1					
ANR	851191	Identifier	data		851113	1					
ANR	851192	Identifier	d_glyph		851113	1					
ANR	851193	Argument	NULL		851113	2					
ANR	851194	Identifier	NULL		851113	0					
ANR	851195	Argument	& fidx		851113	3					
ANR	851196	UnaryOperationExpression	& fidx		851113	0					
ANR	851197	UnaryOperator	&		851113	0					
ANR	851198	Identifier	fidx		851113	1					
ANR	851199	IfStatement	if ( code < 0 )		851113	3					
ANR	851200	Condition	code < 0	1424:16:53072:53079	851113	0	True				
ANR	851201	RelationalExpression	code < 0		851113	0		<			
ANR	851202	Identifier	code		851113	0					
ANR	851203	PrimaryExpression	0		851113	1					
ANR	851204	CompoundStatement		15:26:540:540	851113	1					
ANR	851205	ExpressionStatement	"code = ( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , ( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 ) , NULL , & fidx )"	1425:15:53155:53302	851113	0	True				
ANR	851206	AssignmentExpression	"code = ( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , ( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 ) , NULL , & fidx )"		851113	0		=			
ANR	851207	Identifier	code		851113	0					
ANR	851208	CallExpression	"( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data ( ( gs_font_base * ) pfont , ( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 ) , NULL , & fidx )"		851113	1					
ANR	851209	Callee	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		851113	0					
ANR	851210	MemberAccess	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		851113	0					
ANR	851211	PtrMemberAccess	( ( gs_font_cid0 * ) pfont ) -> cidata		851113	0					
ANR	851212	CastExpression	( gs_font_cid0 * ) pfont		851113	0					
ANR	851213	CastTarget	gs_font_cid0 *		851113	0					
ANR	851214	Identifier	pfont		851113	1					
ANR	851215	Identifier	cidata		851113	1					
ANR	851216	Identifier	glyph_data		851113	1					
ANR	851217	ArgumentList	( gs_font_base * ) pfont		851113	1					
ANR	851218	Argument	( gs_font_base * ) pfont		851113	0					
ANR	851219	CastExpression	( gs_font_base * ) pfont		851113	0					
ANR	851220	CastTarget	gs_font_base *		851113	0					
ANR	851221	Identifier	pfont		851113	1					
ANR	851222	Argument	( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 )		851113	1					
ANR	851223	CastExpression	( gs_glyph ) ( GS_MIN_CID_GLYPH + 0 )		851113	0					
ANR	851224	CastTarget	gs_glyph		851113	0					
ANR	851225	AdditiveExpression	GS_MIN_CID_GLYPH + 0		851113	1		+			
ANR	851226	Identifier	GS_MIN_CID_GLYPH		851113	0					
ANR	851227	PrimaryExpression	0		851113	1					
ANR	851228	Argument	NULL		851113	2					
ANR	851229	Identifier	NULL		851113	0					
ANR	851230	Argument	& fidx		851113	3					
ANR	851231	UnaryOperationExpression	& fidx		851113	0					
ANR	851232	UnaryOperator	&		851113	0					
ANR	851233	Identifier	fidx		851113	1					
ANR	851234	IfStatement	if ( code < 0 )		851113	1					
ANR	851235	Condition	code < 0	1427:19:53323:53330	851113	0	True				
ANR	851236	RelationalExpression	code < 0		851113	0		<			
ANR	851237	Identifier	code		851113	0					
ANR	851238	PrimaryExpression	0		851113	1					
ANR	851239	ExpressionStatement	return_error ( gs_error_invalidfont )	1428:19:53352:53386	851113	1	True				
ANR	851240	CallExpression	return_error ( gs_error_invalidfont )		851113	0					
ANR	851241	Callee	return_error		851113	0					
ANR	851242	Identifier	return_error		851113	0					
ANR	851243	ArgumentList	gs_error_invalidfont		851113	1					
ANR	851244	Argument	gs_error_invalidfont		851113	0					
ANR	851245	Identifier	gs_error_invalidfont		851113	0					
ANR	851246	ExpressionStatement	"gs_matrix_multiply ( & ( gs_cid0_indexed_font ( pfont , fidx ) -> FontMatrix ) , & pfont -> FontMatrix , & mat )"	1430:12:53414:53540	851113	4	True				
ANR	851247	CallExpression	"gs_matrix_multiply ( & ( gs_cid0_indexed_font ( pfont , fidx ) -> FontMatrix ) , & pfont -> FontMatrix , & mat )"		851113	0					
ANR	851248	Callee	gs_matrix_multiply		851113	0					
ANR	851249	Identifier	gs_matrix_multiply		851113	0					
ANR	851250	ArgumentList	"& ( gs_cid0_indexed_font ( pfont , fidx ) -> FontMatrix )"		851113	1					
ANR	851251	Argument	"& ( gs_cid0_indexed_font ( pfont , fidx ) -> FontMatrix )"		851113	0					
ANR	851252	UnaryOperationExpression	"& ( gs_cid0_indexed_font ( pfont , fidx ) -> FontMatrix )"		851113	0					
ANR	851253	UnaryOperator	&		851113	0					
ANR	851254	PtrMemberAccess	"gs_cid0_indexed_font ( pfont , fidx ) -> FontMatrix"		851113	1					
ANR	851255	CallExpression	"gs_cid0_indexed_font ( pfont , fidx )"		851113	0					
ANR	851256	Callee	gs_cid0_indexed_font		851113	0					
ANR	851257	Identifier	gs_cid0_indexed_font		851113	0					
ANR	851258	ArgumentList	pfont		851113	1					
ANR	851259	Argument	pfont		851113	0					
ANR	851260	Identifier	pfont		851113	0					
ANR	851261	Argument	fidx		851113	1					
ANR	851262	Identifier	fidx		851113	0					
ANR	851263	Identifier	FontMatrix		851113	1					
ANR	851264	Argument	& pfont -> FontMatrix		851113	1					
ANR	851265	UnaryOperationExpression	& pfont -> FontMatrix		851113	0					
ANR	851266	UnaryOperator	&		851113	0					
ANR	851267	PtrMemberAccess	pfont -> FontMatrix		851113	1					
ANR	851268	Identifier	pfont		851113	0					
ANR	851269	Identifier	FontMatrix		851113	1					
ANR	851270	Argument	& mat		851113	2					
ANR	851271	UnaryOperationExpression	& mat		851113	0					
ANR	851272	UnaryOperator	&		851113	0					
ANR	851273	Identifier	mat		851113	1					
ANR	851274	ExpressionStatement	"gs_setcharmatrix ( pgs , & mat )"	1432:12:53554:53581	851113	5	True				
ANR	851275	CallExpression	"gs_setcharmatrix ( pgs , & mat )"		851113	0					
ANR	851276	Callee	gs_setcharmatrix		851113	0					
ANR	851277	Identifier	gs_setcharmatrix		851113	0					
ANR	851278	ArgumentList	pgs		851113	1					
ANR	851279	Argument	pgs		851113	0					
ANR	851280	Identifier	pgs		851113	0					
ANR	851281	Argument	& mat		851113	1					
ANR	851282	UnaryOperationExpression	& mat		851113	0					
ANR	851283	UnaryOperator	&		851113	0					
ANR	851284	Identifier	mat		851113	1					
ANR	851285	ElseStatement	else		851113	0					
ANR	851286	CompoundStatement		24:15:1056:1056	851113	0					
ANR	851287	ExpressionStatement	"gs_currentcharmatrix ( pgs , NULL , 1 )"	1434:12:53612:53646	851113	0	True				
ANR	851288	CallExpression	"gs_currentcharmatrix ( pgs , NULL , 1 )"		851113	0					
ANR	851289	Callee	gs_currentcharmatrix		851113	0					
ANR	851290	Identifier	gs_currentcharmatrix		851113	0					
ANR	851291	ArgumentList	pgs		851113	1					
ANR	851292	Argument	pgs		851113	0					
ANR	851293	Identifier	pgs		851113	0					
ANR	851294	Argument	NULL		851113	1					
ANR	851295	Identifier	NULL		851113	0					
ANR	851296	Argument	1		851113	2					
ANR	851297	PrimaryExpression	1		851113	0					
ANR	851298	ElseStatement	else		851113	0					
ANR	851299	CompoundStatement		30:8:1255:1343	851113	0					
ANR	851300	IdentifierDeclStatement	gs_matrix mat ;	1438:8:53774:53787	851113	0	True				
ANR	851301	IdentifierDecl	mat		851113	0					
ANR	851302	IdentifierDeclType	gs_matrix		851113	0					
ANR	851303	Identifier	mat		851113	1					
ANR	851304	IdentifierDeclStatement	const gx_font_stack_item_t * pfsi = & penum -> fstack . items [ penum -> fstack . depth ] ;	1439:8:53797:53885	851113	1	True				
ANR	851305	IdentifierDecl	* pfsi = & penum -> fstack . items [ penum -> fstack . depth ]		851113	0					
ANR	851306	IdentifierDeclType	const gx_font_stack_item_t *		851113	0					
ANR	851307	Identifier	pfsi		851113	1					
ANR	851308	AssignmentExpression	* pfsi = & penum -> fstack . items [ penum -> fstack . depth ]		851113	2		=			
ANR	851309	Identifier	pfsi		851113	0					
ANR	851310	UnaryOperationExpression	& penum -> fstack . items [ penum -> fstack . depth ]		851113	1					
ANR	851311	UnaryOperator	&		851113	0					
ANR	851312	ArrayIndexing	penum -> fstack . items [ penum -> fstack . depth ]		851113	1					
ANR	851313	MemberAccess	penum -> fstack . items		851113	0					
ANR	851314	PtrMemberAccess	penum -> fstack		851113	0					
ANR	851315	Identifier	penum		851113	0					
ANR	851316	Identifier	fstack		851113	1					
ANR	851317	Identifier	items		851113	1					
ANR	851318	MemberAccess	penum -> fstack . depth		851113	1					
ANR	851319	PtrMemberAccess	penum -> fstack		851113	0					
ANR	851320	Identifier	penum		851113	0					
ANR	851321	Identifier	fstack		851113	1					
ANR	851322	Identifier	depth		851113	1					
ANR	851323	ExpressionStatement	pfont = pfsi -> font	1442:8:53896:53914	851113	2	True				
ANR	851324	AssignmentExpression	pfont = pfsi -> font		851113	0		=			
ANR	851325	Identifier	pfont		851113	0					
ANR	851326	PtrMemberAccess	pfsi -> font		851113	1					
ANR	851327	Identifier	pfsi		851113	0					
ANR	851328	Identifier	font		851113	1					
ANR	851329	ExpressionStatement	"gs_matrix_multiply ( & pfont -> FontMatrix , & pfsi [ - 1 ] . font -> FontMatrix , & mat )"	1443:8:53924:54023	851113	3	True				
ANR	851330	CallExpression	"gs_matrix_multiply ( & pfont -> FontMatrix , & pfsi [ - 1 ] . font -> FontMatrix , & mat )"		851113	0					
ANR	851331	Callee	gs_matrix_multiply		851113	0					
ANR	851332	Identifier	gs_matrix_multiply		851113	0					
ANR	851333	ArgumentList	& pfont -> FontMatrix		851113	1					
ANR	851334	Argument	& pfont -> FontMatrix		851113	0					
ANR	851335	UnaryOperationExpression	& pfont -> FontMatrix		851113	0					
ANR	851336	UnaryOperator	&		851113	0					
ANR	851337	PtrMemberAccess	pfont -> FontMatrix		851113	1					
ANR	851338	Identifier	pfont		851113	0					
ANR	851339	Identifier	FontMatrix		851113	1					
ANR	851340	Argument	& pfsi [ - 1 ] . font -> FontMatrix		851113	1					
ANR	851341	UnaryOperationExpression	& pfsi [ - 1 ] . font -> FontMatrix		851113	0					
ANR	851342	UnaryOperator	&		851113	0					
ANR	851343	PtrMemberAccess	pfsi [ - 1 ] . font -> FontMatrix		851113	1					
ANR	851344	MemberAccess	pfsi [ - 1 ] . font		851113	0					
ANR	851345	ArrayIndexing	pfsi [ - 1 ]		851113	0					
ANR	851346	Identifier	pfsi		851113	0					
ANR	851347	UnaryOperationExpression	- 1		851113	1					
ANR	851348	UnaryOperator	-		851113	0					
ANR	851349	PrimaryExpression	1		851113	1					
ANR	851350	Identifier	font		851113	1					
ANR	851351	Identifier	FontMatrix		851113	1					
ANR	851352	Argument	& mat		851113	2					
ANR	851353	UnaryOperationExpression	& mat		851113	0					
ANR	851354	UnaryOperator	&		851113	0					
ANR	851355	Identifier	mat		851113	1					
ANR	851356	IfStatement	if ( pfont -> FontType == ft_CID_encrypted )		851113	4					
ANR	851357	Condition	pfont -> FontType == ft_CID_encrypted	1445:12:54037:54071	851113	0	True				
ANR	851358	EqualityExpression	pfont -> FontType == ft_CID_encrypted		851113	0		==			
ANR	851359	PtrMemberAccess	pfont -> FontType		851113	0					
ANR	851360	Identifier	pfont		851113	0					
ANR	851361	Identifier	FontType		851113	1					
ANR	851362	Identifier	ft_CID_encrypted		851113	1					
ANR	851363	CompoundStatement		36:49:1532:1532	851113	1					
ANR	851364	ExpressionStatement	"gs_matrix_multiply ( & ( gs_cid0_indexed_font ( pfont , pfsi -> index ) -> FontMatrix ) , & mat , & mat )"	1447:12:54142:54261	851113	0	True				
ANR	851365	CallExpression	"gs_matrix_multiply ( & ( gs_cid0_indexed_font ( pfont , pfsi -> index ) -> FontMatrix ) , & mat , & mat )"		851113	0					
ANR	851366	Callee	gs_matrix_multiply		851113	0					
ANR	851367	Identifier	gs_matrix_multiply		851113	0					
ANR	851368	ArgumentList	"& ( gs_cid0_indexed_font ( pfont , pfsi -> index ) -> FontMatrix )"		851113	1					
ANR	851369	Argument	"& ( gs_cid0_indexed_font ( pfont , pfsi -> index ) -> FontMatrix )"		851113	0					
ANR	851370	UnaryOperationExpression	"& ( gs_cid0_indexed_font ( pfont , pfsi -> index ) -> FontMatrix )"		851113	0					
ANR	851371	UnaryOperator	&		851113	0					
ANR	851372	PtrMemberAccess	"gs_cid0_indexed_font ( pfont , pfsi -> index ) -> FontMatrix"		851113	1					
ANR	851373	CallExpression	"gs_cid0_indexed_font ( pfont , pfsi -> index )"		851113	0					
ANR	851374	Callee	gs_cid0_indexed_font		851113	0					
ANR	851375	Identifier	gs_cid0_indexed_font		851113	0					
ANR	851376	ArgumentList	pfont		851113	1					
ANR	851377	Argument	pfont		851113	0					
ANR	851378	Identifier	pfont		851113	0					
ANR	851379	Argument	pfsi -> index		851113	1					
ANR	851380	PtrMemberAccess	pfsi -> index		851113	0					
ANR	851381	Identifier	pfsi		851113	0					
ANR	851382	Identifier	index		851113	1					
ANR	851383	Identifier	FontMatrix		851113	1					
ANR	851384	Argument	& mat		851113	1					
ANR	851385	UnaryOperationExpression	& mat		851113	0					
ANR	851386	UnaryOperator	&		851113	0					
ANR	851387	Identifier	mat		851113	1					
ANR	851388	Argument	& mat		851113	2					
ANR	851389	UnaryOperationExpression	& mat		851113	0					
ANR	851390	UnaryOperator	&		851113	0					
ANR	851391	Identifier	mat		851113	1					
ANR	851392	ExpressionStatement	"gs_setcharmatrix ( pgs , & mat )"	1450:8:54281:54308	851113	5	True				
ANR	851393	CallExpression	"gs_setcharmatrix ( pgs , & mat )"		851113	0					
ANR	851394	Callee	gs_setcharmatrix		851113	0					
ANR	851395	Identifier	gs_setcharmatrix		851113	0					
ANR	851396	ArgumentList	pgs		851113	1					
ANR	851397	Argument	pgs		851113	0					
ANR	851398	Identifier	pgs		851113	0					
ANR	851399	Argument	& mat		851113	1					
ANR	851400	UnaryOperationExpression	& mat		851113	0					
ANR	851401	UnaryOperator	&		851113	0					
ANR	851402	Identifier	mat		851113	1					
ANR	851403	ExpressionStatement	penum -> current_font = pfont	1452:4:54320:54347	851113	4	True				
ANR	851404	AssignmentExpression	penum -> current_font = pfont		851113	0		=			
ANR	851405	PtrMemberAccess	penum -> current_font		851113	0					
ANR	851406	Identifier	penum		851113	0					
ANR	851407	Identifier	current_font		851113	1					
ANR	851408	Identifier	pfont		851113	1					
ANR	851409	IfStatement	"if ( penum -> can_cache >= 0 && gx_effective_clip_path ( pgs , & pcpath ) >= 0 )"		851113	5					
ANR	851410	Condition	"penum -> can_cache >= 0 && gx_effective_clip_path ( pgs , & pcpath ) >= 0"	1453:8:54357:54430	851113	0	True				
ANR	851411	AndExpression	"penum -> can_cache >= 0 && gx_effective_clip_path ( pgs , & pcpath ) >= 0"		851113	0		&&			
ANR	851412	RelationalExpression	penum -> can_cache >= 0		851113	0		>=			
ANR	851413	PtrMemberAccess	penum -> can_cache		851113	0					
ANR	851414	Identifier	penum		851113	0					
ANR	851415	Identifier	can_cache		851113	1					
ANR	851416	PrimaryExpression	0		851113	1					
ANR	851417	RelationalExpression	"gx_effective_clip_path ( pgs , & pcpath ) >= 0"		851113	1		>=			
ANR	851418	CallExpression	"gx_effective_clip_path ( pgs , & pcpath )"		851113	0					
ANR	851419	Callee	gx_effective_clip_path		851113	0					
ANR	851420	Identifier	gx_effective_clip_path		851113	0					
ANR	851421	ArgumentList	pgs		851113	1					
ANR	851422	Argument	pgs		851113	0					
ANR	851423	Identifier	pgs		851113	0					
ANR	851424	Argument	& pcpath		851113	1					
ANR	851425	UnaryOperationExpression	& pcpath		851113	0					
ANR	851426	UnaryOperator	&		851113	0					
ANR	851427	Identifier	pcpath		851113	1					
ANR	851428	PrimaryExpression	0		851113	1					
ANR	851429	CompoundStatement		47:8:1910:1928	851113	1					
ANR	851430	IdentifierDeclStatement	gs_fixed_rect cbox ;	1456:8:54452:54470	851113	0	True				
ANR	851431	IdentifierDecl	cbox		851113	0					
ANR	851432	IdentifierDeclType	gs_fixed_rect		851113	0					
ANR	851433	Identifier	cbox		851113	1					
ANR	851434	ExpressionStatement	"gx_cpath_inner_box ( pcpath , & cbox )"	1458:8:54481:54514	851113	1	True				
ANR	851435	CallExpression	"gx_cpath_inner_box ( pcpath , & cbox )"		851113	0					
ANR	851436	Callee	gx_cpath_inner_box		851113	0					
ANR	851437	Identifier	gx_cpath_inner_box		851113	0					
ANR	851438	ArgumentList	pcpath		851113	1					
ANR	851439	Argument	pcpath		851113	0					
ANR	851440	Identifier	pcpath		851113	0					
ANR	851441	Argument	& cbox		851113	1					
ANR	851442	UnaryOperationExpression	& cbox		851113	0					
ANR	851443	UnaryOperator	&		851113	0					
ANR	851444	Identifier	cbox		851113	1					
ANR	851445	ExpressionStatement	penum -> ibox . p . x = fixed2int_var ( cbox . p . x )	1462:8:54697:54738	851113	2	True				
ANR	851446	AssignmentExpression	penum -> ibox . p . x = fixed2int_var ( cbox . p . x )		851113	0		=			
ANR	851447	MemberAccess	penum -> ibox . p . x		851113	0					
ANR	851448	MemberAccess	penum -> ibox . p		851113	0					
ANR	851449	PtrMemberAccess	penum -> ibox		851113	0					
ANR	851450	Identifier	penum		851113	0					
ANR	851451	Identifier	ibox		851113	1					
ANR	851452	Identifier	p		851113	1					
ANR	851453	Identifier	x		851113	1					
ANR	851454	CallExpression	fixed2int_var ( cbox . p . x )		851113	1					
ANR	851455	Callee	fixed2int_var		851113	0					
ANR	851456	Identifier	fixed2int_var		851113	0					
ANR	851457	ArgumentList	cbox . p . x		851113	1					
ANR	851458	Argument	cbox . p . x		851113	0					
ANR	851459	MemberAccess	cbox . p . x		851113	0					
ANR	851460	MemberAccess	cbox . p		851113	0					
ANR	851461	Identifier	cbox		851113	0					
ANR	851462	Identifier	p		851113	1					
ANR	851463	Identifier	x		851113	1					
ANR	851464	ExpressionStatement	penum -> ibox . p . y = fixed2int_var ( cbox . p . y )	1463:8:54748:54789	851113	3	True				
ANR	851465	AssignmentExpression	penum -> ibox . p . y = fixed2int_var ( cbox . p . y )		851113	0		=			
ANR	851466	MemberAccess	penum -> ibox . p . y		851113	0					
ANR	851467	MemberAccess	penum -> ibox . p		851113	0					
ANR	851468	PtrMemberAccess	penum -> ibox		851113	0					
ANR	851469	Identifier	penum		851113	0					
ANR	851470	Identifier	ibox		851113	1					
ANR	851471	Identifier	p		851113	1					
ANR	851472	Identifier	y		851113	1					
ANR	851473	CallExpression	fixed2int_var ( cbox . p . y )		851113	1					
ANR	851474	Callee	fixed2int_var		851113	0					
ANR	851475	Identifier	fixed2int_var		851113	0					
ANR	851476	ArgumentList	cbox . p . y		851113	1					
ANR	851477	Argument	cbox . p . y		851113	0					
ANR	851478	MemberAccess	cbox . p . y		851113	0					
ANR	851479	MemberAccess	cbox . p		851113	0					
ANR	851480	Identifier	cbox		851113	0					
ANR	851481	Identifier	p		851113	1					
ANR	851482	Identifier	y		851113	1					
ANR	851483	ExpressionStatement	penum -> ibox . q . x = fixed2int_var_ceiling ( cbox . q . x )	1464:8:54799:54848	851113	4	True				
ANR	851484	AssignmentExpression	penum -> ibox . q . x = fixed2int_var_ceiling ( cbox . q . x )		851113	0		=			
ANR	851485	MemberAccess	penum -> ibox . q . x		851113	0					
ANR	851486	MemberAccess	penum -> ibox . q		851113	0					
ANR	851487	PtrMemberAccess	penum -> ibox		851113	0					
ANR	851488	Identifier	penum		851113	0					
ANR	851489	Identifier	ibox		851113	1					
ANR	851490	Identifier	q		851113	1					
ANR	851491	Identifier	x		851113	1					
ANR	851492	CallExpression	fixed2int_var_ceiling ( cbox . q . x )		851113	1					
ANR	851493	Callee	fixed2int_var_ceiling		851113	0					
ANR	851494	Identifier	fixed2int_var_ceiling		851113	0					
ANR	851495	ArgumentList	cbox . q . x		851113	1					
ANR	851496	Argument	cbox . q . x		851113	0					
ANR	851497	MemberAccess	cbox . q . x		851113	0					
ANR	851498	MemberAccess	cbox . q		851113	0					
ANR	851499	Identifier	cbox		851113	0					
ANR	851500	Identifier	q		851113	1					
ANR	851501	Identifier	x		851113	1					
ANR	851502	ExpressionStatement	penum -> ibox . q . y = fixed2int_var_ceiling ( cbox . q . y )	1465:8:54858:54907	851113	5	True				
ANR	851503	AssignmentExpression	penum -> ibox . q . y = fixed2int_var_ceiling ( cbox . q . y )		851113	0		=			
ANR	851504	MemberAccess	penum -> ibox . q . y		851113	0					
ANR	851505	MemberAccess	penum -> ibox . q		851113	0					
ANR	851506	PtrMemberAccess	penum -> ibox		851113	0					
ANR	851507	Identifier	penum		851113	0					
ANR	851508	Identifier	ibox		851113	1					
ANR	851509	Identifier	q		851113	1					
ANR	851510	Identifier	y		851113	1					
ANR	851511	CallExpression	fixed2int_var_ceiling ( cbox . q . y )		851113	1					
ANR	851512	Callee	fixed2int_var_ceiling		851113	0					
ANR	851513	Identifier	fixed2int_var_ceiling		851113	0					
ANR	851514	ArgumentList	cbox . q . y		851113	1					
ANR	851515	Argument	cbox . q . y		851113	0					
ANR	851516	MemberAccess	cbox . q . y		851113	0					
ANR	851517	MemberAccess	cbox . q		851113	0					
ANR	851518	Identifier	cbox		851113	0					
ANR	851519	Identifier	q		851113	1					
ANR	851520	Identifier	y		851113	1					
ANR	851521	ExpressionStatement	"gx_cpath_outer_box ( pcpath , & cbox )"	1466:8:54917:54950	851113	6	True				
ANR	851522	CallExpression	"gx_cpath_outer_box ( pcpath , & cbox )"		851113	0					
ANR	851523	Callee	gx_cpath_outer_box		851113	0					
ANR	851524	Identifier	gx_cpath_outer_box		851113	0					
ANR	851525	ArgumentList	pcpath		851113	1					
ANR	851526	Argument	pcpath		851113	0					
ANR	851527	Identifier	pcpath		851113	0					
ANR	851528	Argument	& cbox		851113	1					
ANR	851529	UnaryOperationExpression	& cbox		851113	0					
ANR	851530	UnaryOperator	&		851113	0					
ANR	851531	Identifier	cbox		851113	1					
ANR	851532	ExpressionStatement	penum -> obox . p . x = fixed2int_var ( cbox . p . x )	1467:8:54960:55001	851113	7	True				
ANR	851533	AssignmentExpression	penum -> obox . p . x = fixed2int_var ( cbox . p . x )		851113	0		=			
ANR	851534	MemberAccess	penum -> obox . p . x		851113	0					
ANR	851535	MemberAccess	penum -> obox . p		851113	0					
ANR	851536	PtrMemberAccess	penum -> obox		851113	0					
ANR	851537	Identifier	penum		851113	0					
ANR	851538	Identifier	obox		851113	1					
ANR	851539	Identifier	p		851113	1					
ANR	851540	Identifier	x		851113	1					
ANR	851541	CallExpression	fixed2int_var ( cbox . p . x )		851113	1					
ANR	851542	Callee	fixed2int_var		851113	0					
ANR	851543	Identifier	fixed2int_var		851113	0					
ANR	851544	ArgumentList	cbox . p . x		851113	1					
ANR	851545	Argument	cbox . p . x		851113	0					
ANR	851546	MemberAccess	cbox . p . x		851113	0					
ANR	851547	MemberAccess	cbox . p		851113	0					
ANR	851548	Identifier	cbox		851113	0					
ANR	851549	Identifier	p		851113	1					
ANR	851550	Identifier	x		851113	1					
ANR	851551	ExpressionStatement	penum -> obox . p . y = fixed2int_var ( cbox . p . y )	1468:8:55011:55052	851113	8	True				
ANR	851552	AssignmentExpression	penum -> obox . p . y = fixed2int_var ( cbox . p . y )		851113	0		=			
ANR	851553	MemberAccess	penum -> obox . p . y		851113	0					
ANR	851554	MemberAccess	penum -> obox . p		851113	0					
ANR	851555	PtrMemberAccess	penum -> obox		851113	0					
ANR	851556	Identifier	penum		851113	0					
ANR	851557	Identifier	obox		851113	1					
ANR	851558	Identifier	p		851113	1					
ANR	851559	Identifier	y		851113	1					
ANR	851560	CallExpression	fixed2int_var ( cbox . p . y )		851113	1					
ANR	851561	Callee	fixed2int_var		851113	0					
ANR	851562	Identifier	fixed2int_var		851113	0					
ANR	851563	ArgumentList	cbox . p . y		851113	1					
ANR	851564	Argument	cbox . p . y		851113	0					
ANR	851565	MemberAccess	cbox . p . y		851113	0					
ANR	851566	MemberAccess	cbox . p		851113	0					
ANR	851567	Identifier	cbox		851113	0					
ANR	851568	Identifier	p		851113	1					
ANR	851569	Identifier	y		851113	1					
ANR	851570	ExpressionStatement	penum -> obox . q . x = fixed2int_var_ceiling ( cbox . q . x )	1469:8:55062:55111	851113	9	True				
ANR	851571	AssignmentExpression	penum -> obox . q . x = fixed2int_var_ceiling ( cbox . q . x )		851113	0		=			
ANR	851572	MemberAccess	penum -> obox . q . x		851113	0					
ANR	851573	MemberAccess	penum -> obox . q		851113	0					
ANR	851574	PtrMemberAccess	penum -> obox		851113	0					
ANR	851575	Identifier	penum		851113	0					
ANR	851576	Identifier	obox		851113	1					
ANR	851577	Identifier	q		851113	1					
ANR	851578	Identifier	x		851113	1					
ANR	851579	CallExpression	fixed2int_var_ceiling ( cbox . q . x )		851113	1					
ANR	851580	Callee	fixed2int_var_ceiling		851113	0					
ANR	851581	Identifier	fixed2int_var_ceiling		851113	0					
ANR	851582	ArgumentList	cbox . q . x		851113	1					
ANR	851583	Argument	cbox . q . x		851113	0					
ANR	851584	MemberAccess	cbox . q . x		851113	0					
ANR	851585	MemberAccess	cbox . q		851113	0					
ANR	851586	Identifier	cbox		851113	0					
ANR	851587	Identifier	q		851113	1					
ANR	851588	Identifier	x		851113	1					
ANR	851589	ExpressionStatement	penum -> obox . q . y = fixed2int_var_ceiling ( cbox . q . y )	1470:8:55121:55170	851113	10	True				
ANR	851590	AssignmentExpression	penum -> obox . q . y = fixed2int_var_ceiling ( cbox . q . y )		851113	0		=			
ANR	851591	MemberAccess	penum -> obox . q . y		851113	0					
ANR	851592	MemberAccess	penum -> obox . q		851113	0					
ANR	851593	PtrMemberAccess	penum -> obox		851113	0					
ANR	851594	Identifier	penum		851113	0					
ANR	851595	Identifier	obox		851113	1					
ANR	851596	Identifier	q		851113	1					
ANR	851597	Identifier	y		851113	1					
ANR	851598	CallExpression	fixed2int_var_ceiling ( cbox . q . y )		851113	1					
ANR	851599	Callee	fixed2int_var_ceiling		851113	0					
ANR	851600	Identifier	fixed2int_var_ceiling		851113	0					
ANR	851601	ArgumentList	cbox . q . y		851113	1					
ANR	851602	Argument	cbox . q . y		851113	0					
ANR	851603	MemberAccess	cbox . q . y		851113	0					
ANR	851604	MemberAccess	cbox . q		851113	0					
ANR	851605	Identifier	cbox		851113	0					
ANR	851606	Identifier	q		851113	1					
ANR	851607	Identifier	y		851113	1					
ANR	851608	IfStatement	if ( pgs -> ctm . txy_fixed_valid && pgs -> char_tm . txy_fixed_valid )		851113	11					
ANR	851609	Condition	pgs -> ctm . txy_fixed_valid && pgs -> char_tm . txy_fixed_valid	1471:12:55184:55239	851113	0	True				
ANR	851610	AndExpression	pgs -> ctm . txy_fixed_valid && pgs -> char_tm . txy_fixed_valid		851113	0		&&			
ANR	851611	MemberAccess	pgs -> ctm . txy_fixed_valid		851113	0					
ANR	851612	PtrMemberAccess	pgs -> ctm		851113	0					
ANR	851613	Identifier	pgs		851113	0					
ANR	851614	Identifier	ctm		851113	1					
ANR	851615	Identifier	txy_fixed_valid		851113	1					
ANR	851616	MemberAccess	pgs -> char_tm . txy_fixed_valid		851113	1					
ANR	851617	PtrMemberAccess	pgs -> char_tm		851113	0					
ANR	851618	Identifier	pgs		851113	0					
ANR	851619	Identifier	char_tm		851113	1					
ANR	851620	Identifier	txy_fixed_valid		851113	1					
ANR	851621	CompoundStatement		62:70:2700:2700	851113	1					
ANR	851622	ExpressionStatement	penum -> ftx = ( int ) fixed2long ( pgs -> char_tm . tx_fixed - pgs -> ctm . tx_fixed )	1472:12:55256:55368	851113	0	True				
ANR	851623	AssignmentExpression	penum -> ftx = ( int ) fixed2long ( pgs -> char_tm . tx_fixed - pgs -> ctm . tx_fixed )		851113	0		=			
ANR	851624	PtrMemberAccess	penum -> ftx		851113	0					
ANR	851625	Identifier	penum		851113	0					
ANR	851626	Identifier	ftx		851113	1					
ANR	851627	CastExpression	( int ) fixed2long ( pgs -> char_tm . tx_fixed - pgs -> ctm . tx_fixed )		851113	1					
ANR	851628	CastTarget	int		851113	0					
ANR	851629	CallExpression	fixed2long ( pgs -> char_tm . tx_fixed - pgs -> ctm . tx_fixed )		851113	1					
ANR	851630	Callee	fixed2long		851113	0					
ANR	851631	Identifier	fixed2long		851113	0					
ANR	851632	ArgumentList	pgs -> char_tm . tx_fixed - pgs -> ctm . tx_fixed		851113	1					
ANR	851633	Argument	pgs -> char_tm . tx_fixed - pgs -> ctm . tx_fixed		851113	0					
ANR	851634	AdditiveExpression	pgs -> char_tm . tx_fixed - pgs -> ctm . tx_fixed		851113	0		-			
ANR	851635	MemberAccess	pgs -> char_tm . tx_fixed		851113	0					
ANR	851636	PtrMemberAccess	pgs -> char_tm		851113	0					
ANR	851637	Identifier	pgs		851113	0					
ANR	851638	Identifier	char_tm		851113	1					
ANR	851639	Identifier	tx_fixed		851113	1					
ANR	851640	MemberAccess	pgs -> ctm . tx_fixed		851113	1					
ANR	851641	PtrMemberAccess	pgs -> ctm		851113	0					
ANR	851642	Identifier	pgs		851113	0					
ANR	851643	Identifier	ctm		851113	1					
ANR	851644	Identifier	tx_fixed		851113	1					
ANR	851645	ExpressionStatement	penum -> fty = ( int ) fixed2long ( pgs -> char_tm . ty_fixed - pgs -> ctm . ty_fixed )	1474:12:55382:55494	851113	1	True				
ANR	851646	AssignmentExpression	penum -> fty = ( int ) fixed2long ( pgs -> char_tm . ty_fixed - pgs -> ctm . ty_fixed )		851113	0		=			
ANR	851647	PtrMemberAccess	penum -> fty		851113	0					
ANR	851648	Identifier	penum		851113	0					
ANR	851649	Identifier	fty		851113	1					
ANR	851650	CastExpression	( int ) fixed2long ( pgs -> char_tm . ty_fixed - pgs -> ctm . ty_fixed )		851113	1					
ANR	851651	CastTarget	int		851113	0					
ANR	851652	CallExpression	fixed2long ( pgs -> char_tm . ty_fixed - pgs -> ctm . ty_fixed )		851113	1					
ANR	851653	Callee	fixed2long		851113	0					
ANR	851654	Identifier	fixed2long		851113	0					
ANR	851655	ArgumentList	pgs -> char_tm . ty_fixed - pgs -> ctm . ty_fixed		851113	1					
ANR	851656	Argument	pgs -> char_tm . ty_fixed - pgs -> ctm . ty_fixed		851113	0					
ANR	851657	AdditiveExpression	pgs -> char_tm . ty_fixed - pgs -> ctm . ty_fixed		851113	0		-			
ANR	851658	MemberAccess	pgs -> char_tm . ty_fixed		851113	0					
ANR	851659	PtrMemberAccess	pgs -> char_tm		851113	0					
ANR	851660	Identifier	pgs		851113	0					
ANR	851661	Identifier	char_tm		851113	1					
ANR	851662	Identifier	ty_fixed		851113	1					
ANR	851663	MemberAccess	pgs -> ctm . ty_fixed		851113	1					
ANR	851664	PtrMemberAccess	pgs -> ctm		851113	0					
ANR	851665	Identifier	pgs		851113	0					
ANR	851666	Identifier	ctm		851113	1					
ANR	851667	Identifier	ty_fixed		851113	1					
ANR	851668	ElseStatement	else		851113	0					
ANR	851669	CompoundStatement		69:12:3039:3081	851113	0					
ANR	851670	IdentifierDeclStatement	double fdx = pgs -> char_tm . tx - pgs -> ctm . tx ;	1477:12:55525:55567	851113	0	True				
ANR	851671	IdentifierDecl	fdx = pgs -> char_tm . tx - pgs -> ctm . tx		851113	0					
ANR	851672	IdentifierDeclType	double		851113	0					
ANR	851673	Identifier	fdx		851113	1					
ANR	851674	AssignmentExpression	fdx = pgs -> char_tm . tx - pgs -> ctm . tx		851113	2		=			
ANR	851675	Identifier	fdx		851113	0					
ANR	851676	AdditiveExpression	pgs -> char_tm . tx - pgs -> ctm . tx		851113	1		-			
ANR	851677	MemberAccess	pgs -> char_tm . tx		851113	0					
ANR	851678	PtrMemberAccess	pgs -> char_tm		851113	0					
ANR	851679	Identifier	pgs		851113	0					
ANR	851680	Identifier	char_tm		851113	1					
ANR	851681	Identifier	tx		851113	1					
ANR	851682	MemberAccess	pgs -> ctm . tx		851113	1					
ANR	851683	PtrMemberAccess	pgs -> ctm		851113	0					
ANR	851684	Identifier	pgs		851113	0					
ANR	851685	Identifier	ctm		851113	1					
ANR	851686	Identifier	tx		851113	1					
ANR	851687	IdentifierDeclStatement	double fdy = pgs -> char_tm . ty - pgs -> ctm . ty ;	1478:12:55581:55623	851113	1	True				
ANR	851688	IdentifierDecl	fdy = pgs -> char_tm . ty - pgs -> ctm . ty		851113	0					
ANR	851689	IdentifierDeclType	double		851113	0					
ANR	851690	Identifier	fdy		851113	1					
ANR	851691	AssignmentExpression	fdy = pgs -> char_tm . ty - pgs -> ctm . ty		851113	2		=			
ANR	851692	Identifier	fdy		851113	0					
ANR	851693	AdditiveExpression	pgs -> char_tm . ty - pgs -> ctm . ty		851113	1		-			
ANR	851694	MemberAccess	pgs -> char_tm . ty		851113	0					
ANR	851695	PtrMemberAccess	pgs -> char_tm		851113	0					
ANR	851696	Identifier	pgs		851113	0					
ANR	851697	Identifier	char_tm		851113	1					
ANR	851698	Identifier	ty		851113	1					
ANR	851699	MemberAccess	pgs -> ctm . ty		851113	1					
ANR	851700	PtrMemberAccess	pgs -> ctm		851113	0					
ANR	851701	Identifier	pgs		851113	0					
ANR	851702	Identifier	ctm		851113	1					
ANR	851703	Identifier	ty		851113	1					
ANR	851704	Statement	define	1480:1:55627:55632	851113	2	True				
ANR	851705	Statement	int_bits	1480:8:55634:55641	851113	3	True				
ANR	851706	Statement	(	1480:17:55643:55643	851113	4	True				
ANR	851707	Statement	ARCH_SIZEOF_INT	1480:18:55644:55658	851113	5	True				
ANR	851708	Statement	*	1480:34:55660:55660	851113	6	True				
ANR	851709	Statement	8	1480:36:55662:55662	851113	7	True				
ANR	851710	Statement	-	1480:38:55664:55664	851113	8	True				
ANR	851711	Statement	1	1480:40:55666:55666	851113	9	True				
ANR	851712	Statement	)	1480:41:55667:55667	851113	10	True				
ANR	851713	IfStatement	"if ( ! ( f_fits_in_bits ( fdx , int_bits ) && f_fits_in_bits ( fdy , int_bits ) ) )"		851113	11					
ANR	851714	Condition	"! ( f_fits_in_bits ( fdx , int_bits ) && f_fits_in_bits ( fdy , int_bits ) )"	1481:16:55685:55767	851113	0	True				
ANR	851715	UnaryOperationExpression	"! ( f_fits_in_bits ( fdx , int_bits ) && f_fits_in_bits ( fdy , int_bits ) )"		851113	0					
ANR	851716	UnaryOperator	!		851113	0					
ANR	851717	AndExpression	"f_fits_in_bits ( fdx , int_bits ) && f_fits_in_bits ( fdy , int_bits )"		851113	1		&&			
ANR	851718	CallExpression	"f_fits_in_bits ( fdx , int_bits )"		851113	0					
ANR	851719	Callee	f_fits_in_bits		851113	0					
ANR	851720	Identifier	f_fits_in_bits		851113	0					
ANR	851721	ArgumentList	fdx		851113	1					
ANR	851722	Argument	fdx		851113	0					
ANR	851723	Identifier	fdx		851113	0					
ANR	851724	Argument	int_bits		851113	1					
ANR	851725	Identifier	int_bits		851113	0					
ANR	851726	CallExpression	"f_fits_in_bits ( fdy , int_bits )"		851113	1					
ANR	851727	Callee	f_fits_in_bits		851113	0					
ANR	851728	Identifier	f_fits_in_bits		851113	0					
ANR	851729	ArgumentList	fdy		851113	1					
ANR	851730	Argument	fdy		851113	0					
ANR	851731	Identifier	fdy		851113	0					
ANR	851732	Argument	int_bits		851113	1					
ANR	851733	Identifier	int_bits		851113	0					
ANR	851734	ExpressionStatement	return_error ( gs_error_limitcheck )	1484:16:55803:55836	851113	1	True				
ANR	851735	CallExpression	return_error ( gs_error_limitcheck )		851113	0					
ANR	851736	Callee	return_error		851113	0					
ANR	851737	Identifier	return_error		851113	0					
ANR	851738	ArgumentList	gs_error_limitcheck		851113	1					
ANR	851739	Argument	gs_error_limitcheck		851113	0					
ANR	851740	Identifier	gs_error_limitcheck		851113	0					
ANR	851741	Statement	undef	1485:1:55839:55843	851113	12	True				
ANR	851742	Statement	int_bits	1485:7:55845:55852	851113	13	True				
ANR	851743	ExpressionStatement	penum -> ftx = ( int ) fdx	1486:12:55866:55887	851113	14	True				
ANR	851744	AssignmentExpression	penum -> ftx = ( int ) fdx		851113	0		=			
ANR	851745	PtrMemberAccess	penum -> ftx		851113	0					
ANR	851746	Identifier	penum		851113	0					
ANR	851747	Identifier	ftx		851113	1					
ANR	851748	CastExpression	( int ) fdx		851113	1					
ANR	851749	CastTarget	int		851113	0					
ANR	851750	Identifier	fdx		851113	1					
ANR	851751	ExpressionStatement	penum -> fty = ( int ) fdy	1487:12:55901:55922	851113	15	True				
ANR	851752	AssignmentExpression	penum -> fty = ( int ) fdy		851113	0		=			
ANR	851753	PtrMemberAccess	penum -> fty		851113	0					
ANR	851754	Identifier	penum		851113	0					
ANR	851755	Identifier	fty		851113	1					
ANR	851756	CastExpression	( int ) fdy		851113	1					
ANR	851757	CastTarget	int		851113	0					
ANR	851758	Identifier	fdy		851113	1					
ANR	851759	ExpressionStatement	show_set_encode_char ( penum )	1490:4:55944:55971	851113	6	True				
ANR	851760	CallExpression	show_set_encode_char ( penum )		851113	0					
ANR	851761	Callee	show_set_encode_char		851113	0					
ANR	851762	Identifier	show_set_encode_char		851113	0					
ANR	851763	ArgumentList	penum		851113	1					
ANR	851764	Argument	penum		851113	0					
ANR	851765	Identifier	penum		851113	0					
ANR	851766	ReturnStatement	return 0 ;	1491:4:55977:55985	851113	7	True				
ANR	851767	PrimaryExpression	0		851113	0					
ANR	851768	ReturnType	static int		851113	1					
ANR	851769	Identifier	show_state_setup		851113	2					
ANR	851770	ParameterList	gs_show_enum * penum		851113	3					
ANR	851771	Parameter	gs_show_enum * penum	1409:17:52519:52538	851113	0	True				
ANR	851772	ParameterType	gs_show_enum *		851113	0					
ANR	851773	Identifier	penum		851113	1					
ANR	851774	CFGEntryNode	ENTRY		851113		True				
ANR	851775	CFGExitNode	EXIT		851113		True				
ANR	851776	Symbol	* pgs		851113						
ANR	851777	Symbol	pfsi -> index		851113						
ANR	851778	Symbol	fixed2int_var_ceiling		851113						
ANR	851779	Symbol	pgs -> char_tm		851113						
ANR	851780	Symbol	& cbox		851113						
ANR	851781	Symbol	( ( gs_font_cid0 * ) pfont ) -> cidata . glyph_data		851113						
ANR	851782	Symbol	pgs -> ctm . tx		851113						
ANR	851783	Symbol	pgs -> ctm . ty		851113						
ANR	851784	Symbol	penum -> obox . p . y		851113						
ANR	851785	Symbol	penum -> obox . p . x		851113						
ANR	851786	Symbol	pgs -> ctm . txy_fixed_valid		851113						
ANR	851787	Symbol	& fidx		851113						
ANR	851788	Symbol	pfsi [ - 1 ] . font		851113						
ANR	851789	Symbol	"& gs_cid0_indexed_font ( pfont , pfsi -> index ) -> FontMatrix"		851113						
ANR	851790	Symbol	pgs -> char_tm . tx_fixed		851113						
ANR	851791	Symbol	penum -> ibox . q		851113						
ANR	851792	Symbol	penum -> ibox . p		851113						
ANR	851793	Symbol	GS_MIN_CID_GLYPH		851113						
ANR	851794	Symbol	penum -> obox		851113						
ANR	851795	Symbol	* pfsi		851113						
ANR	851796	Symbol	NULL		851113						
ANR	851797	Symbol	pgs -> char_tm . ty_fixed		851113						
ANR	851798	Symbol	cbox		851113						
ANR	851799	Symbol	penum		851113						
ANR	851800	Symbol	penum -> can_cache		851113						
ANR	851801	Symbol	& pcpath		851113						
ANR	851802	Symbol	pgs -> font		851113						
ANR	851803	Symbol	cbox . q		851113						
ANR	851804	Symbol	cbox . p		851113						
ANR	851805	Symbol	pgs -> ctm		851113						
ANR	851806	Symbol	pgs -> ctm . ty_fixed		851113						
ANR	851807	Symbol	fidx		851113						
ANR	851808	Symbol	penum -> fty		851113						
ANR	851809	Symbol	penum -> fstack		851113						
ANR	851810	Symbol	penum -> ftx		851113						
ANR	851811	Symbol	( ( gs_font_cid0 * ) pfont ) -> cidata		851113						
ANR	851812	Symbol	* penum		851113						
ANR	851813	Symbol	& mat		851113						
ANR	851814	Symbol	code		851113						
ANR	851815	Symbol	& pfont -> FontMatrix		851113						
ANR	851816	Symbol	gx_effective_clip_path		851113						
ANR	851817	Symbol	penum -> text		851113						
ANR	851818	Symbol	cbox . p . x		851113						
ANR	851819	Symbol	ft_CID_encrypted		851113						
ANR	851820	Symbol	cbox . p . y		851113						
ANR	851821	Symbol	gs_cid0_indexed_font		851113						
ANR	851822	Symbol	pgs -> char_tm . tx		851113						
ANR	851823	Symbol	"& gs_cid0_indexed_font ( pfont , fidx ) -> FontMatrix"		851113						
ANR	851824	Symbol	penum -> fstack . depth		851113						
ANR	851825	Symbol	pfsi -> font		851113						
ANR	851826	Symbol	penum -> pgs		851113						
ANR	851827	Symbol	penum -> current_font		851113						
ANR	851828	Symbol	pgs -> ctm . tx_fixed		851113						
ANR	851829	Symbol	pfont -> FontType		851113						
ANR	851830	Symbol	gs_error_limitcheck		851113						
ANR	851831	Symbol	gs_error_invalidfont		851113						
ANR	851832	Symbol	cbox . q . y		851113						
ANR	851833	Symbol	pgs		851113						
ANR	851834	Symbol	pcpath		851113						
ANR	851835	Symbol	penum -> obox . p		851113						
ANR	851836	Symbol	cbox . q . x		851113						
ANR	851837	Symbol	penum -> obox . q		851113						
ANR	851838	Symbol	mat		851113						
ANR	851839	Symbol	penum -> ibox		851113						
ANR	851840	Symbol	penum -> obox . q . y		851113						
ANR	851841	Symbol	pfont		851113						
ANR	851842	Symbol	penum -> obox . q . x		851113						
ANR	851843	Symbol	penum -> ibox . p . x		851113						
ANR	851844	Symbol	penum -> ibox . p . y		851113						
ANR	851845	Symbol	pgs -> char_tm . txy_fixed_valid		851113						
ANR	851846	Symbol	& pfsi [ - 1 ] . font -> FontMatrix		851113						
ANR	851847	Symbol	f_fits_in_bits		851113						
ANR	851848	Symbol	* pfont		851113						
ANR	851849	Symbol	penum -> text . data		851113						
ANR	851850	Symbol	penum -> ibox . q . y		851113						
ANR	851851	Symbol	fixed2long		851113						
ANR	851852	Symbol	pgs -> char_tm . ty		851113						
ANR	851853	Symbol	int_bits		851113						
ANR	851854	Symbol	penum -> text . data . d_glyph		851113						
ANR	851855	Symbol	pfsi		851113						
ANR	851856	Symbol	penum -> fstack . items		851113						
ANR	851857	Symbol	fdy		851113						
ANR	851858	Symbol	penum -> ibox . q . x		851113						
ANR	851859	Symbol	fdx		851113						
ANR	851860	Symbol	fixed2int_var		851113						
ANR	851861	Function	show_set_scale	1495:0:56058:57765							
ANR	851862	FunctionDef	"show_set_scale (const gs_show_enum * penum , gs_log2_scale_point * log2_scale)"		851861	0					
ANR	851863	CompoundStatement		1497:0:56146:57765	851861	0					
ANR	851864	IdentifierDeclStatement	const gs_gstate * pgs = NULL ;	1502:4:56270:56297	851861	0	True				
ANR	851865	IdentifierDecl	* pgs = NULL		851861	0					
ANR	851866	IdentifierDeclType	const gs_gstate *		851861	0					
ANR	851867	Identifier	pgs		851861	1					
ANR	851868	AssignmentExpression	* pgs = NULL		851861	2		=			
ANR	851869	Identifier	NULL		851861	0					
ANR	851870	Identifier	NULL		851861	1					
ANR	851871	IfStatement	"if ( gs_object_type ( penum -> pgs -> memory , penum ) == & st_gs_show_enum )"		851861	1					
ANR	851872	Condition	"gs_object_type ( penum -> pgs -> memory , penum ) == & st_gs_show_enum"	1504:8:56308:56368	851861	0	True				
ANR	851873	EqualityExpression	"gs_object_type ( penum -> pgs -> memory , penum ) == & st_gs_show_enum"		851861	0		==			
ANR	851874	CallExpression	"gs_object_type ( penum -> pgs -> memory , penum )"		851861	0					
ANR	851875	Callee	gs_object_type		851861	0					
ANR	851876	Identifier	gs_object_type		851861	0					
ANR	851877	ArgumentList	penum -> pgs -> memory		851861	1					
ANR	851878	Argument	penum -> pgs -> memory		851861	0					
ANR	851879	PtrMemberAccess	penum -> pgs -> memory		851861	0					
ANR	851880	PtrMemberAccess	penum -> pgs		851861	0					
ANR	851881	Identifier	penum		851861	0					
ANR	851882	Identifier	pgs		851861	1					
ANR	851883	Identifier	memory		851861	1					
ANR	851884	Argument	penum		851861	1					
ANR	851885	Identifier	penum		851861	0					
ANR	851886	UnaryOperationExpression	& st_gs_show_enum		851861	1					
ANR	851887	UnaryOperator	&		851861	0					
ANR	851888	Identifier	st_gs_show_enum		851861	1					
ANR	851889	CompoundStatement		8:71:224:224	851861	1					
ANR	851890	ExpressionStatement	pgs = penum -> pgs	1505:8:56381:56397	851861	0	True				
ANR	851891	AssignmentExpression	pgs = penum -> pgs		851861	0		=			
ANR	851892	Identifier	pgs		851861	0					
ANR	851893	PtrMemberAccess	penum -> pgs		851861	1					
ANR	851894	Identifier	penum		851861	0					
ANR	851895	Identifier	pgs		851861	1					
ANR	851896	ElseStatement	else		851861	0					
ANR	851897	CompoundStatement		10:11:263:263	851861	0					
ANR	851898	ExpressionStatement	pgs = ( gs_gstate * ) penum -> pgs	1507:12:56424:56453	851861	0	True				
ANR	851899	AssignmentExpression	pgs = ( gs_gstate * ) penum -> pgs		851861	0		=			
ANR	851900	Identifier	pgs		851861	0					
ANR	851901	CastExpression	( gs_gstate * ) penum -> pgs		851861	1					
ANR	851902	CastTarget	gs_gstate *		851861	0					
ANR	851903	PtrMemberAccess	penum -> pgs		851861	1					
ANR	851904	Identifier	penum		851861	0					
ANR	851905	Identifier	pgs		851861	1					
ANR	851906	IfStatement	if ( pgs != NULL && ( penum -> charpath_flag == cpm_show || penum -> charpath_flag == cpm_charwidth ) && SHOW_USES_OUTLINE ( penum ) )		851861	2					
ANR	851907	Condition	pgs != NULL && ( penum -> charpath_flag == cpm_show || penum -> charpath_flag == cpm_charwidth ) && SHOW_USES_OUTLINE ( penum )	1510:8:56470:56604	851861	0	True				
ANR	851908	AndExpression	pgs != NULL && ( penum -> charpath_flag == cpm_show || penum -> charpath_flag == cpm_charwidth ) && SHOW_USES_OUTLINE ( penum )		851861	0		&&			
ANR	851909	EqualityExpression	pgs != NULL		851861	0		!=			
ANR	851910	Identifier	pgs		851861	0					
ANR	851911	Identifier	NULL		851861	1					
ANR	851912	AndExpression	( penum -> charpath_flag == cpm_show || penum -> charpath_flag == cpm_charwidth ) && SHOW_USES_OUTLINE ( penum )		851861	1		&&			
ANR	851913	OrExpression	penum -> charpath_flag == cpm_show || penum -> charpath_flag == cpm_charwidth		851861	0		||			
ANR	851914	EqualityExpression	penum -> charpath_flag == cpm_show		851861	0		==			
ANR	851915	PtrMemberAccess	penum -> charpath_flag		851861	0					
ANR	851916	Identifier	penum		851861	0					
ANR	851917	Identifier	charpath_flag		851861	1					
ANR	851918	Identifier	cpm_show		851861	1					
ANR	851919	EqualityExpression	penum -> charpath_flag == cpm_charwidth		851861	1		==			
ANR	851920	PtrMemberAccess	penum -> charpath_flag		851861	0					
ANR	851921	Identifier	penum		851861	0					
ANR	851922	Identifier	charpath_flag		851861	1					
ANR	851923	Identifier	cpm_charwidth		851861	1					
ANR	851924	CallExpression	SHOW_USES_OUTLINE ( penum )		851861	1					
ANR	851925	Callee	SHOW_USES_OUTLINE		851861	0					
ANR	851926	Identifier	SHOW_USES_OUTLINE		851861	0					
ANR	851927	ArgumentList	penum		851861	1					
ANR	851928	Argument	penum		851861	0					
ANR	851929	Identifier	penum		851861	0					
ANR	851930	CompoundStatement		21:8:640:903	851861	1					
ANR	851931	IdentifierDeclStatement	const gs_font_base * pfont = ( const gs_font_base * ) penum -> current_font ;	1515:8:56677:56746	851861	0	True				
ANR	851932	IdentifierDecl	* pfont = ( const gs_font_base * ) penum -> current_font		851861	0					
ANR	851933	IdentifierDeclType	const gs_font_base *		851861	0					
ANR	851934	Identifier	pfont		851861	1					
ANR	851935	AssignmentExpression	* pfont = ( const gs_font_base * ) penum -> current_font		851861	2		=			
ANR	851936	Identifier	pfont		851861	0					
ANR	851937	CastExpression	( const gs_font_base * ) penum -> current_font		851861	1					
ANR	851938	CastTarget	const gs_font_base *		851861	0					
ANR	851939	PtrMemberAccess	penum -> current_font		851861	1					
ANR	851940	Identifier	penum		851861	0					
ANR	851941	Identifier	current_font		851861	1					
ANR	851942	IdentifierDeclStatement	gs_fixed_point extent ;	1516:8:56756:56777	851861	1	True				
ANR	851943	IdentifierDecl	extent		851861	0					
ANR	851944	IdentifierDeclType	gs_fixed_point		851861	0					
ANR	851945	Identifier	extent		851861	1					
ANR	851946	IdentifierDeclStatement	"int code = gs_distance_transform2fixed ( & pgs -> char_tm , pfont -> FontBBox . q . x - pfont -> FontBBox . p . x , pfont -> FontBBox . q . y - pfont -> FontBBox . p . y , & extent ) ;"	1517:8:56787:57050	851861	2	True				
ANR	851947	IdentifierDecl	"code = gs_distance_transform2fixed ( & pgs -> char_tm , pfont -> FontBBox . q . x - pfont -> FontBBox . p . x , pfont -> FontBBox . q . y - pfont -> FontBBox . p . y , & extent )"		851861	0					
ANR	851948	IdentifierDeclType	int		851861	0					
ANR	851949	Identifier	code		851861	1					
ANR	851950	AssignmentExpression	"code = gs_distance_transform2fixed ( & pgs -> char_tm , pfont -> FontBBox . q . x - pfont -> FontBBox . p . x , pfont -> FontBBox . q . y - pfont -> FontBBox . p . y , & extent )"		851861	2		=			
ANR	851951	Identifier	code		851861	0					
ANR	851952	CallExpression	"gs_distance_transform2fixed ( & pgs -> char_tm , pfont -> FontBBox . q . x - pfont -> FontBBox . p . x , pfont -> FontBBox . q . y - pfont -> FontBBox . p . y , & extent )"		851861	1					
ANR	851953	Callee	gs_distance_transform2fixed		851861	0					
ANR	851954	Identifier	gs_distance_transform2fixed		851861	0					
ANR	851955	ArgumentList	& pgs -> char_tm		851861	1					
ANR	851956	Argument	& pgs -> char_tm		851861	0					
ANR	851957	UnaryOperationExpression	& pgs -> char_tm		851861	0					
ANR	851958	UnaryOperator	&		851861	0					
ANR	851959	PtrMemberAccess	pgs -> char_tm		851861	1					
ANR	851960	Identifier	pgs		851861	0					
ANR	851961	Identifier	char_tm		851861	1					
ANR	851962	Argument	pfont -> FontBBox . q . x - pfont -> FontBBox . p . x		851861	1					
ANR	851963	AdditiveExpression	pfont -> FontBBox . q . x - pfont -> FontBBox . p . x		851861	0		-			
ANR	851964	MemberAccess	pfont -> FontBBox . q . x		851861	0					
ANR	851965	MemberAccess	pfont -> FontBBox . q		851861	0					
ANR	851966	PtrMemberAccess	pfont -> FontBBox		851861	0					
ANR	851967	Identifier	pfont		851861	0					
ANR	851968	Identifier	FontBBox		851861	1					
ANR	851969	Identifier	q		851861	1					
ANR	851970	Identifier	x		851861	1					
ANR	851971	MemberAccess	pfont -> FontBBox . p . x		851861	1					
ANR	851972	MemberAccess	pfont -> FontBBox . p		851861	0					
ANR	851973	PtrMemberAccess	pfont -> FontBBox		851861	0					
ANR	851974	Identifier	pfont		851861	0					
ANR	851975	Identifier	FontBBox		851861	1					
ANR	851976	Identifier	p		851861	1					
ANR	851977	Identifier	x		851861	1					
ANR	851978	Argument	pfont -> FontBBox . q . y - pfont -> FontBBox . p . y		851861	2					
ANR	851979	AdditiveExpression	pfont -> FontBBox . q . y - pfont -> FontBBox . p . y		851861	0		-			
ANR	851980	MemberAccess	pfont -> FontBBox . q . y		851861	0					
ANR	851981	MemberAccess	pfont -> FontBBox . q		851861	0					
ANR	851982	PtrMemberAccess	pfont -> FontBBox		851861	0					
ANR	851983	Identifier	pfont		851861	0					
ANR	851984	Identifier	FontBBox		851861	1					
ANR	851985	Identifier	q		851861	1					
ANR	851986	Identifier	y		851861	1					
ANR	851987	MemberAccess	pfont -> FontBBox . p . y		851861	1					
ANR	851988	MemberAccess	pfont -> FontBBox . p		851861	0					
ANR	851989	PtrMemberAccess	pfont -> FontBBox		851861	0					
ANR	851990	Identifier	pfont		851861	0					
ANR	851991	Identifier	FontBBox		851861	1					
ANR	851992	Identifier	p		851861	1					
ANR	851993	Identifier	y		851861	1					
ANR	851994	Argument	& extent		851861	3					
ANR	851995	UnaryOperationExpression	& extent		851861	0					
ANR	851996	UnaryOperator	&		851861	0					
ANR	851997	Identifier	extent		851861	1					
ANR	851998	IfStatement	if ( code >= 0 )		851861	3					
ANR	851999	Condition	code >= 0	1522:12:57065:57073	851861	0	True				
ANR	852000	RelationalExpression	code >= 0		851861	0		>=			
ANR	852001	Identifier	code		851861	0					
ANR	852002	PrimaryExpression	0		851861	1					
ANR	852003	CompoundStatement		31:12:1088:1219	851861	1					
ANR	852004	IdentifierDeclStatement	int sx = ( any_abs ( extent . x ) < int2fixed ( 60 ) ? 2 : any_abs ( extent . x ) < int2fixed ( 200 ) ? 1 : 0 ) ;	1523:12:57090:57221	851861	0	True				
ANR	852005	IdentifierDecl	sx = ( any_abs ( extent . x ) < int2fixed ( 60 ) ? 2 : any_abs ( extent . x ) < int2fixed ( 200 ) ? 1 : 0 )		851861	0					
ANR	852006	IdentifierDeclType	int		851861	0					
ANR	852007	Identifier	sx		851861	1					
ANR	852008	AssignmentExpression	sx = ( any_abs ( extent . x ) < int2fixed ( 60 ) ? 2 : any_abs ( extent . x ) < int2fixed ( 200 ) ? 1 : 0 )		851861	2		=			
ANR	852009	Identifier	sx		851861	0					
ANR	852010	ConditionalExpression	any_abs ( extent . x ) < int2fixed ( 60 ) ? 2 : any_abs ( extent . x ) < int2fixed ( 200 ) ? 1 : 0		851861	1					
ANR	852011	Condition	any_abs ( extent . x ) < int2fixed ( 60 )		851861	0					
ANR	852012	RelationalExpression	any_abs ( extent . x ) < int2fixed ( 60 )		851861	0		<			
ANR	852013	CallExpression	any_abs ( extent . x )		851861	0					
ANR	852014	Callee	any_abs		851861	0					
ANR	852015	Identifier	any_abs		851861	0					
ANR	852016	ArgumentList	extent . x		851861	1					
ANR	852017	Argument	extent . x		851861	0					
ANR	852018	MemberAccess	extent . x		851861	0					
ANR	852019	Identifier	extent		851861	0					
ANR	852020	Identifier	x		851861	1					
ANR	852021	CallExpression	int2fixed ( 60 )		851861	1					
ANR	852022	Callee	int2fixed		851861	0					
ANR	852023	Identifier	int2fixed		851861	0					
ANR	852024	ArgumentList	60		851861	1					
ANR	852025	Argument	60		851861	0					
ANR	852026	PrimaryExpression	60		851861	0					
ANR	852027	PrimaryExpression	2		851861	1					
ANR	852028	ConditionalExpression	any_abs ( extent . x ) < int2fixed ( 200 ) ? 1 : 0		851861	2					
ANR	852029	Condition	any_abs ( extent . x ) < int2fixed ( 200 )		851861	0					
ANR	852030	RelationalExpression	any_abs ( extent . x ) < int2fixed ( 200 )		851861	0		<			
ANR	852031	CallExpression	any_abs ( extent . x )		851861	0					
ANR	852032	Callee	any_abs		851861	0					
ANR	852033	Identifier	any_abs		851861	0					
ANR	852034	ArgumentList	extent . x		851861	1					
ANR	852035	Argument	extent . x		851861	0					
ANR	852036	MemberAccess	extent . x		851861	0					
ANR	852037	Identifier	extent		851861	0					
ANR	852038	Identifier	x		851861	1					
ANR	852039	CallExpression	int2fixed ( 200 )		851861	1					
ANR	852040	Callee	int2fixed		851861	0					
ANR	852041	Identifier	int2fixed		851861	0					
ANR	852042	ArgumentList	200		851861	1					
ANR	852043	Argument	200		851861	0					
ANR	852044	PrimaryExpression	200		851861	0					
ANR	852045	PrimaryExpression	1		851861	1					
ANR	852046	PrimaryExpression	0		851861	2					
ANR	852047	IdentifierDeclStatement	int sy = ( any_abs ( extent . y ) < int2fixed ( 60 ) ? 2 : any_abs ( extent . y ) < int2fixed ( 200 ) ? 1 : 0 ) ;	1527:12:57235:57366	851861	1	True				
ANR	852048	IdentifierDecl	sy = ( any_abs ( extent . y ) < int2fixed ( 60 ) ? 2 : any_abs ( extent . y ) < int2fixed ( 200 ) ? 1 : 0 )		851861	0					
ANR	852049	IdentifierDeclType	int		851861	0					
ANR	852050	Identifier	sy		851861	1					
ANR	852051	AssignmentExpression	sy = ( any_abs ( extent . y ) < int2fixed ( 60 ) ? 2 : any_abs ( extent . y ) < int2fixed ( 200 ) ? 1 : 0 )		851861	2		=			
ANR	852052	Identifier	sy		851861	0					
ANR	852053	ConditionalExpression	any_abs ( extent . y ) < int2fixed ( 60 ) ? 2 : any_abs ( extent . y ) < int2fixed ( 200 ) ? 1 : 0		851861	1					
ANR	852054	Condition	any_abs ( extent . y ) < int2fixed ( 60 )		851861	0					
ANR	852055	RelationalExpression	any_abs ( extent . y ) < int2fixed ( 60 )		851861	0		<			
ANR	852056	CallExpression	any_abs ( extent . y )		851861	0					
ANR	852057	Callee	any_abs		851861	0					
ANR	852058	Identifier	any_abs		851861	0					
ANR	852059	ArgumentList	extent . y		851861	1					
ANR	852060	Argument	extent . y		851861	0					
ANR	852061	MemberAccess	extent . y		851861	0					
ANR	852062	Identifier	extent		851861	0					
ANR	852063	Identifier	y		851861	1					
ANR	852064	CallExpression	int2fixed ( 60 )		851861	1					
ANR	852065	Callee	int2fixed		851861	0					
ANR	852066	Identifier	int2fixed		851861	0					
ANR	852067	ArgumentList	60		851861	1					
ANR	852068	Argument	60		851861	0					
ANR	852069	PrimaryExpression	60		851861	0					
ANR	852070	PrimaryExpression	2		851861	1					
ANR	852071	ConditionalExpression	any_abs ( extent . y ) < int2fixed ( 200 ) ? 1 : 0		851861	2					
ANR	852072	Condition	any_abs ( extent . y ) < int2fixed ( 200 )		851861	0					
ANR	852073	RelationalExpression	any_abs ( extent . y ) < int2fixed ( 200 )		851861	0		<			
ANR	852074	CallExpression	any_abs ( extent . y )		851861	0					
ANR	852075	Callee	any_abs		851861	0					
ANR	852076	Identifier	any_abs		851861	0					
ANR	852077	ArgumentList	extent . y		851861	1					
ANR	852078	Argument	extent . y		851861	0					
ANR	852079	MemberAccess	extent . y		851861	0					
ANR	852080	Identifier	extent		851861	0					
ANR	852081	Identifier	y		851861	1					
ANR	852082	CallExpression	int2fixed ( 200 )		851861	1					
ANR	852083	Callee	int2fixed		851861	0					
ANR	852084	Identifier	int2fixed		851861	0					
ANR	852085	ArgumentList	200		851861	1					
ANR	852086	Argument	200		851861	0					
ANR	852087	PrimaryExpression	200		851861	0					
ANR	852088	PrimaryExpression	1		851861	1					
ANR	852089	PrimaryExpression	0		851861	2					
ANR	852090	IfStatement	if ( sx == 0 && sy != 0 )		851861	2					
ANR	852091	Condition	sx == 0 && sy != 0	1534:16:57482:57499	851861	0	True				
ANR	852092	AndExpression	sx == 0 && sy != 0		851861	0		&&			
ANR	852093	EqualityExpression	sx == 0		851861	0		==			
ANR	852094	Identifier	sx		851861	0					
ANR	852095	PrimaryExpression	0		851861	1					
ANR	852096	EqualityExpression	sy != 0		851861	1		!=			
ANR	852097	Identifier	sy		851861	0					
ANR	852098	PrimaryExpression	0		851861	1					
ANR	852099	ExpressionStatement	sx = 1	1535:16:57518:57524	851861	1	True				
ANR	852100	AssignmentExpression	sx = 1		851861	0		=			
ANR	852101	Identifier	sx		851861	0					
ANR	852102	PrimaryExpression	1		851861	1					
ANR	852103	ElseStatement	else		851861	0					
ANR	852104	IfStatement	if ( sy == 0 && sx != 0 )		851861	0					
ANR	852105	Condition	sy == 0 && sx != 0	1536:21:57547:57564	851861	0	True				
ANR	852106	AndExpression	sy == 0 && sx != 0		851861	0		&&			
ANR	852107	EqualityExpression	sy == 0		851861	0		==			
ANR	852108	Identifier	sy		851861	0					
ANR	852109	PrimaryExpression	0		851861	1					
ANR	852110	EqualityExpression	sx != 0		851861	1		!=			
ANR	852111	Identifier	sx		851861	0					
ANR	852112	PrimaryExpression	0		851861	1					
ANR	852113	ExpressionStatement	sy = 1	1537:16:57583:57589	851861	1	True				
ANR	852114	AssignmentExpression	sy = 1		851861	0		=			
ANR	852115	Identifier	sy		851861	0					
ANR	852116	PrimaryExpression	1		851861	1					
ANR	852117	ExpressionStatement	log2_scale -> x = sx	1538:12:57603:57621	851861	3	True				
ANR	852118	AssignmentExpression	log2_scale -> x = sx		851861	0		=			
ANR	852119	PtrMemberAccess	log2_scale -> x		851861	0					
ANR	852120	Identifier	log2_scale		851861	0					
ANR	852121	Identifier	x		851861	1					
ANR	852122	Identifier	sx		851861	1					
ANR	852123	ExpressionStatement	log2_scale -> y = sy	1539:12:57635:57653	851861	4	True				
ANR	852124	AssignmentExpression	log2_scale -> y = sy		851861	0		=			
ANR	852125	PtrMemberAccess	log2_scale -> y		851861	0					
ANR	852126	Identifier	log2_scale		851861	0					
ANR	852127	Identifier	y		851861	1					
ANR	852128	Identifier	sy		851861	1					
ANR	852129	ReturnStatement	return ;	1540:12:57667:57673	851861	5	True				
ANR	852130	ExpressionStatement	log2_scale -> x = log2_scale -> y = 0	1544:4:57730:57763	851861	3	True				
ANR	852131	AssignmentExpression	log2_scale -> x = log2_scale -> y = 0		851861	0		=			
ANR	852132	PtrMemberAccess	log2_scale -> x		851861	0					
ANR	852133	Identifier	log2_scale		851861	0					
ANR	852134	Identifier	x		851861	1					
ANR	852135	AssignmentExpression	log2_scale -> y = 0		851861	1		=			
ANR	852136	PtrMemberAccess	log2_scale -> y		851861	0					
ANR	852137	Identifier	log2_scale		851861	0					
ANR	852138	Identifier	y		851861	1					
ANR	852139	PrimaryExpression	0		851861	1					
ANR	852140	ReturnType	static void		851861	1					
ANR	852141	Identifier	show_set_scale		851861	2					
ANR	852142	ParameterList	"const gs_show_enum * penum , gs_log2_scale_point * log2_scale"		851861	3					
ANR	852143	Parameter	const gs_show_enum * penum	1496:15:56085:56110	851861	0	True				
ANR	852144	ParameterType	const gs_show_enum *		851861	0					
ANR	852145	Identifier	penum		851861	1					
ANR	852146	Parameter	gs_log2_scale_point * log2_scale	1496:43:56113:56143	851861	1	True				
ANR	852147	ParameterType	gs_log2_scale_point *		851861	0					
ANR	852148	Identifier	log2_scale		851861	1					
ANR	852149	CFGEntryNode	ENTRY		851861		True				
ANR	852150	CFGExitNode	EXIT		851861		True				
ANR	852151	Symbol	extent		851861						
ANR	852152	Symbol	* penum		851861						
ANR	852153	Symbol	pfont -> FontBBox . q . y		851861						
ANR	852154	Symbol	penum -> pgs -> memory		851861						
ANR	852155	Symbol	extent . x		851861						
ANR	852156	Symbol	gs_object_type		851861						
ANR	852157	Symbol	cpm_show		851861						
ANR	852158	Symbol	code		851861						
ANR	852159	Symbol	extent . y		851861						
ANR	852160	Symbol	* penum -> pgs		851861						
ANR	852161	Symbol	pfont -> FontBBox . q . x		851861						
ANR	852162	Symbol	gs_distance_transform2fixed		851861						
ANR	852163	Symbol	& st_gs_show_enum		851861						
ANR	852164	Symbol	log2_scale -> y		851861						
ANR	852165	Symbol	log2_scale -> x		851861						
ANR	852166	Symbol	penum -> pgs		851861						
ANR	852167	Symbol	penum -> current_font		851861						
ANR	852168	Symbol	penum -> charpath_flag		851861						
ANR	852169	Symbol	any_abs		851861						
ANR	852170	Symbol	pfont -> FontBBox		851861						
ANR	852171	Symbol	pgs		851861						
ANR	852172	Symbol	* * penum		851861						
ANR	852173	Symbol	NULL		851861						
ANR	852174	Symbol	pfont		851861						
ANR	852175	Symbol	sx		851861						
ANR	852176	Symbol	sy		851861						
ANR	852177	Symbol	SHOW_USES_OUTLINE		851861						
ANR	852178	Symbol	penum		851861						
ANR	852179	Symbol	cpm_charwidth		851861						
ANR	852180	Symbol	log2_scale		851861						
ANR	852181	Symbol	* pfont		851861						
ANR	852182	Symbol	pfont -> FontBBox . p . x		851861						
ANR	852183	Symbol	pfont -> FontBBox . p . y		851861						
ANR	852184	Symbol	& pgs -> char_tm		851861						
ANR	852185	Symbol	int2fixed		851861						
ANR	852186	Symbol	pfont -> FontBBox . p		851861						
ANR	852187	Symbol	& extent		851861						
ANR	852188	Symbol	pfont -> FontBBox . q		851861						
ANR	852189	Symbol	* log2_scale		851861						
ANR	852190	Function	show_cache_setup	1550:0:57917:59530							
ANR	852191	FunctionDef	show_cache_setup (gs_show_enum * penum)		852190	0					
ANR	852192	CompoundStatement		1552:0:57967:59530	852190	0					
ANR	852193	IdentifierDeclStatement	gs_gstate * pgs = penum -> pgs ;	1553:4:57973:58000	852190	0	True				
ANR	852194	IdentifierDecl	* pgs = penum -> pgs		852190	0					
ANR	852195	IdentifierDeclType	gs_gstate *		852190	0					
ANR	852196	Identifier	pgs		852190	1					
ANR	852197	AssignmentExpression	* pgs = penum -> pgs		852190	2		=			
ANR	852198	Identifier	pgs		852190	0					
ANR	852199	PtrMemberAccess	penum -> pgs		852190	1					
ANR	852200	Identifier	penum		852190	0					
ANR	852201	Identifier	pgs		852190	1					
ANR	852202	IdentifierDeclStatement	gs_memory_t * mem = penum -> memory ;	1554:4:58006:58038	852190	1	True				
ANR	852203	IdentifierDecl	* mem = penum -> memory		852190	0					
ANR	852204	IdentifierDeclType	gs_memory_t *		852190	0					
ANR	852205	Identifier	mem		852190	1					
ANR	852206	AssignmentExpression	* mem = penum -> memory		852190	2		=			
ANR	852207	Identifier	mem		852190	0					
ANR	852208	PtrMemberAccess	penum -> memory		852190	1					
ANR	852209	Identifier	penum		852190	0					
ANR	852210	Identifier	memory		852190	1					
ANR	852211	IdentifierDeclStatement	"gx_device_memory * dev = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""show_cache_setup(dev_cache)"" ) ;"	1555:4:58044:58188	852190	2	True				
ANR	852212	IdentifierDecl	"* dev = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""show_cache_setup(dev_cache)"" )"		852190	0					
ANR	852213	IdentifierDeclType	gx_device_memory *		852190	0					
ANR	852214	Identifier	dev		852190	1					
ANR	852215	AssignmentExpression	"* dev = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""show_cache_setup(dev_cache)"" )"		852190	2		=			
ANR	852216	Identifier	dev		852190	0					
ANR	852217	CallExpression	"gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""show_cache_setup(dev_cache)"" )"		852190	1					
ANR	852218	Callee	gs_alloc_struct		852190	0					
ANR	852219	Identifier	gs_alloc_struct		852190	0					
ANR	852220	ArgumentList	mem		852190	1					
ANR	852221	Argument	mem		852190	0					
ANR	852222	Identifier	mem		852190	0					
ANR	852223	Argument	gx_device_memory		852190	1					
ANR	852224	Identifier	gx_device_memory		852190	0					
ANR	852225	Argument	& st_device_memory		852190	2					
ANR	852226	UnaryOperationExpression	& st_device_memory		852190	0					
ANR	852227	UnaryOperator	&		852190	0					
ANR	852228	Identifier	st_device_memory		852190	1					
ANR	852229	Argument	"""show_cache_setup(dev_cache)"""		852190	3					
ANR	852230	PrimaryExpression	"""show_cache_setup(dev_cache)"""		852190	0					
ANR	852231	IdentifierDeclStatement	"gx_device_memory * dev2 = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""show_cache_setup(dev_cache2)"" ) ;"	1558:4:58194:58340	852190	3	True				
ANR	852232	IdentifierDecl	"* dev2 = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""show_cache_setup(dev_cache2)"" )"		852190	0					
ANR	852233	IdentifierDeclType	gx_device_memory *		852190	0					
ANR	852234	Identifier	dev2		852190	1					
ANR	852235	AssignmentExpression	"* dev2 = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""show_cache_setup(dev_cache2)"" )"		852190	2		=			
ANR	852236	Identifier	dev2		852190	0					
ANR	852237	CallExpression	"gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""show_cache_setup(dev_cache2)"" )"		852190	1					
ANR	852238	Callee	gs_alloc_struct		852190	0					
ANR	852239	Identifier	gs_alloc_struct		852190	0					
ANR	852240	ArgumentList	mem		852190	1					
ANR	852241	Argument	mem		852190	0					
ANR	852242	Identifier	mem		852190	0					
ANR	852243	Argument	gx_device_memory		852190	1					
ANR	852244	Identifier	gx_device_memory		852190	0					
ANR	852245	Argument	& st_device_memory		852190	2					
ANR	852246	UnaryOperationExpression	& st_device_memory		852190	0					
ANR	852247	UnaryOperator	&		852190	0					
ANR	852248	Identifier	st_device_memory		852190	1					
ANR	852249	Argument	"""show_cache_setup(dev_cache2)"""		852190	3					
ANR	852250	PrimaryExpression	"""show_cache_setup(dev_cache2)"""		852190	0					
ANR	852251	IfStatement	if ( dev == 0 || dev2 == 0 )		852190	4					
ANR	852252	Condition	dev == 0 || dev2 == 0	1562:8:58351:58371	852190	0	True				
ANR	852253	OrExpression	dev == 0 || dev2 == 0		852190	0		||			
ANR	852254	EqualityExpression	dev == 0		852190	0		==			
ANR	852255	Identifier	dev		852190	0					
ANR	852256	PrimaryExpression	0		852190	1					
ANR	852257	EqualityExpression	dev2 == 0		852190	1		==			
ANR	852258	Identifier	dev2		852190	0					
ANR	852259	PrimaryExpression	0		852190	1					
ANR	852260	CompoundStatement		11:31:406:406	852190	1					
ANR	852261	ExpressionStatement	"gs_set_object_type ( mem , dev2 , NULL )"	1567:8:58536:58571	852190	0	True				
ANR	852262	CallExpression	"gs_set_object_type ( mem , dev2 , NULL )"		852190	0					
ANR	852263	Callee	gs_set_object_type		852190	0					
ANR	852264	Identifier	gs_set_object_type		852190	0					
ANR	852265	ArgumentList	mem		852190	1					
ANR	852266	Argument	mem		852190	0					
ANR	852267	Identifier	mem		852190	0					
ANR	852268	Argument	dev2		852190	1					
ANR	852269	Identifier	dev2		852190	0					
ANR	852270	Argument	NULL		852190	2					
ANR	852271	Identifier	NULL		852190	0					
ANR	852272	ExpressionStatement	"gs_set_object_type ( mem , dev , NULL )"	1568:8:58581:58615	852190	1	True				
ANR	852273	CallExpression	"gs_set_object_type ( mem , dev , NULL )"		852190	0					
ANR	852274	Callee	gs_set_object_type		852190	0					
ANR	852275	Identifier	gs_set_object_type		852190	0					
ANR	852276	ArgumentList	mem		852190	1					
ANR	852277	Argument	mem		852190	0					
ANR	852278	Identifier	mem		852190	0					
ANR	852279	Argument	dev		852190	1					
ANR	852280	Identifier	dev		852190	0					
ANR	852281	Argument	NULL		852190	2					
ANR	852282	Identifier	NULL		852190	0					
ANR	852283	ExpressionStatement	"gs_free_object ( mem , dev2 , ""show_cache_setup(dev_cache2)"" )"	1569:8:58625:58682	852190	2	True				
ANR	852284	CallExpression	"gs_free_object ( mem , dev2 , ""show_cache_setup(dev_cache2)"" )"		852190	0					
ANR	852285	Callee	gs_free_object		852190	0					
ANR	852286	Identifier	gs_free_object		852190	0					
ANR	852287	ArgumentList	mem		852190	1					
ANR	852288	Argument	mem		852190	0					
ANR	852289	Identifier	mem		852190	0					
ANR	852290	Argument	dev2		852190	1					
ANR	852291	Identifier	dev2		852190	0					
ANR	852292	Argument	"""show_cache_setup(dev_cache2)"""		852190	2					
ANR	852293	PrimaryExpression	"""show_cache_setup(dev_cache2)"""		852190	0					
ANR	852294	ExpressionStatement	"gs_free_object ( mem , dev , ""show_cache_setup(dev_cache)"" )"	1570:8:58692:58747	852190	3	True				
ANR	852295	CallExpression	"gs_free_object ( mem , dev , ""show_cache_setup(dev_cache)"" )"		852190	0					
ANR	852296	Callee	gs_free_object		852190	0					
ANR	852297	Identifier	gs_free_object		852190	0					
ANR	852298	ArgumentList	mem		852190	1					
ANR	852299	Argument	mem		852190	0					
ANR	852300	Identifier	mem		852190	0					
ANR	852301	Argument	dev		852190	1					
ANR	852302	Identifier	dev		852190	0					
ANR	852303	Argument	"""show_cache_setup(dev_cache)"""		852190	2					
ANR	852304	PrimaryExpression	"""show_cache_setup(dev_cache)"""		852190	0					
ANR	852305	ExpressionStatement	return_error ( gs_error_VMerror )	1571:8:58757:58787	852190	4	True				
ANR	852306	CallExpression	return_error ( gs_error_VMerror )		852190	0					
ANR	852307	Callee	return_error		852190	0					
ANR	852308	Identifier	return_error		852190	0					
ANR	852309	ArgumentList	gs_error_VMerror		852190	1					
ANR	852310	Argument	gs_error_VMerror		852190	0					
ANR	852311	Identifier	gs_error_VMerror		852190	0					
ANR	852312	ExpressionStatement	"gs_make_mem_mono_device ( dev , mem , gs_currentdevice_inline ( pgs ) )"	1579:4:59037:59100	852190	5	True				
ANR	852313	CallExpression	"gs_make_mem_mono_device ( dev , mem , gs_currentdevice_inline ( pgs ) )"		852190	0					
ANR	852314	Callee	gs_make_mem_mono_device		852190	0					
ANR	852315	Identifier	gs_make_mem_mono_device		852190	0					
ANR	852316	ArgumentList	dev		852190	1					
ANR	852317	Argument	dev		852190	0					
ANR	852318	Identifier	dev		852190	0					
ANR	852319	Argument	mem		852190	1					
ANR	852320	Identifier	mem		852190	0					
ANR	852321	Argument	gs_currentdevice_inline ( pgs )		852190	2					
ANR	852322	CallExpression	gs_currentdevice_inline ( pgs )		852190	0					
ANR	852323	Callee	gs_currentdevice_inline		852190	0					
ANR	852324	Identifier	gs_currentdevice_inline		852190	0					
ANR	852325	ArgumentList	pgs		852190	1					
ANR	852326	Argument	pgs		852190	0					
ANR	852327	Identifier	pgs		852190	0					
ANR	852328	ExpressionStatement	penum -> dev_cache = dev	1580:4:59106:59128	852190	6	True				
ANR	852329	AssignmentExpression	penum -> dev_cache = dev		852190	0		=			
ANR	852330	PtrMemberAccess	penum -> dev_cache		852190	0					
ANR	852331	Identifier	penum		852190	0					
ANR	852332	Identifier	dev_cache		852190	1					
ANR	852333	Identifier	dev		852190	1					
ANR	852334	ExpressionStatement	"gs_make_mem_mono_device ( dev2 , mem , gs_currentdevice_inline ( pgs ) )"	1581:4:59134:59198	852190	7	True				
ANR	852335	CallExpression	"gs_make_mem_mono_device ( dev2 , mem , gs_currentdevice_inline ( pgs ) )"		852190	0					
ANR	852336	Callee	gs_make_mem_mono_device		852190	0					
ANR	852337	Identifier	gs_make_mem_mono_device		852190	0					
ANR	852338	ArgumentList	dev2		852190	1					
ANR	852339	Argument	dev2		852190	0					
ANR	852340	Identifier	dev2		852190	0					
ANR	852341	Argument	mem		852190	1					
ANR	852342	Identifier	mem		852190	0					
ANR	852343	Argument	gs_currentdevice_inline ( pgs )		852190	2					
ANR	852344	CallExpression	gs_currentdevice_inline ( pgs )		852190	0					
ANR	852345	Callee	gs_currentdevice_inline		852190	0					
ANR	852346	Identifier	gs_currentdevice_inline		852190	0					
ANR	852347	ArgumentList	pgs		852190	1					
ANR	852348	Argument	pgs		852190	0					
ANR	852349	Identifier	pgs		852190	0					
ANR	852350	ExpressionStatement	penum -> dev_cache2 = dev2	1582:4:59204:59228	852190	8	True				
ANR	852351	AssignmentExpression	penum -> dev_cache2 = dev2		852190	0		=			
ANR	852352	PtrMemberAccess	penum -> dev_cache2		852190	0					
ANR	852353	Identifier	penum		852190	0					
ANR	852354	Identifier	dev_cache2		852190	1					
ANR	852355	Identifier	dev2		852190	1					
ANR	852356	ExpressionStatement	dev -> HWResolution [ 0 ] = pgs -> device -> HWResolution [ 0 ]	1583:4:59234:59285	852190	9	True				
ANR	852357	AssignmentExpression	dev -> HWResolution [ 0 ] = pgs -> device -> HWResolution [ 0 ]		852190	0		=			
ANR	852358	ArrayIndexing	dev -> HWResolution [ 0 ]		852190	0					
ANR	852359	PtrMemberAccess	dev -> HWResolution		852190	0					
ANR	852360	Identifier	dev		852190	0					
ANR	852361	Identifier	HWResolution		852190	1					
ANR	852362	PrimaryExpression	0		852190	1					
ANR	852363	ArrayIndexing	pgs -> device -> HWResolution [ 0 ]		852190	1					
ANR	852364	PtrMemberAccess	pgs -> device -> HWResolution		852190	0					
ANR	852365	PtrMemberAccess	pgs -> device		852190	0					
ANR	852366	Identifier	pgs		852190	0					
ANR	852367	Identifier	device		852190	1					
ANR	852368	Identifier	HWResolution		852190	1					
ANR	852369	PrimaryExpression	0		852190	1					
ANR	852370	ExpressionStatement	dev -> HWResolution [ 1 ] = pgs -> device -> HWResolution [ 1 ]	1584:4:59291:59342	852190	10	True				
ANR	852371	AssignmentExpression	dev -> HWResolution [ 1 ] = pgs -> device -> HWResolution [ 1 ]		852190	0		=			
ANR	852372	ArrayIndexing	dev -> HWResolution [ 1 ]		852190	0					
ANR	852373	PtrMemberAccess	dev -> HWResolution		852190	0					
ANR	852374	Identifier	dev		852190	0					
ANR	852375	Identifier	HWResolution		852190	1					
ANR	852376	PrimaryExpression	1		852190	1					
ANR	852377	ArrayIndexing	pgs -> device -> HWResolution [ 1 ]		852190	1					
ANR	852378	PtrMemberAccess	pgs -> device -> HWResolution		852190	0					
ANR	852379	PtrMemberAccess	pgs -> device		852190	0					
ANR	852380	Identifier	pgs		852190	0					
ANR	852381	Identifier	device		852190	1					
ANR	852382	Identifier	HWResolution		852190	1					
ANR	852383	PrimaryExpression	1		852190	1					
ANR	852384	ExpressionStatement	"gx_device_retain ( ( gx_device * ) dev , true )"	1586:4:59427:59467	852190	11	True				
ANR	852385	CallExpression	"gx_device_retain ( ( gx_device * ) dev , true )"		852190	0					
ANR	852386	Callee	gx_device_retain		852190	0					
ANR	852387	Identifier	gx_device_retain		852190	0					
ANR	852388	ArgumentList	( gx_device * ) dev		852190	1					
ANR	852389	Argument	( gx_device * ) dev		852190	0					
ANR	852390	CastExpression	( gx_device * ) dev		852190	0					
ANR	852391	CastTarget	gx_device *		852190	0					
ANR	852392	Identifier	dev		852190	1					
ANR	852393	Argument	true		852190	1					
ANR	852394	Identifier	true		852190	0					
ANR	852395	ExpressionStatement	"gx_device_retain ( ( gx_device * ) dev2 , true )"	1587:4:59473:59514	852190	12	True				
ANR	852396	CallExpression	"gx_device_retain ( ( gx_device * ) dev2 , true )"		852190	0					
ANR	852397	Callee	gx_device_retain		852190	0					
ANR	852398	Identifier	gx_device_retain		852190	0					
ANR	852399	ArgumentList	( gx_device * ) dev2		852190	1					
ANR	852400	Argument	( gx_device * ) dev2		852190	0					
ANR	852401	CastExpression	( gx_device * ) dev2		852190	0					
ANR	852402	CastTarget	gx_device *		852190	0					
ANR	852403	Identifier	dev2		852190	1					
ANR	852404	Argument	true		852190	1					
ANR	852405	Identifier	true		852190	0					
ANR	852406	ReturnStatement	return 0 ;	1588:4:59520:59528	852190	13	True				
ANR	852407	PrimaryExpression	0		852190	0					
ANR	852408	ReturnType	static int		852190	1					
ANR	852409	Identifier	show_cache_setup		852190	2					
ANR	852410	ParameterList	gs_show_enum * penum		852190	3					
ANR	852411	Parameter	gs_show_enum * penum	1551:17:57945:57964	852190	0	True				
ANR	852412	ParameterType	gs_show_enum *		852190	0					
ANR	852413	Identifier	penum		852190	1					
ANR	852414	CFGEntryNode	ENTRY		852190		True				
ANR	852415	CFGExitNode	EXIT		852190		True				
ANR	852416	Symbol	* dev		852190						
ANR	852417	Symbol	* penum		852190						
ANR	852418	Symbol	penum -> memory		852190						
ANR	852419	Symbol	* pgs		852190						
ANR	852420	Symbol	gs_alloc_struct		852190						
ANR	852421	Symbol	penum -> pgs		852190						
ANR	852422	Symbol	penum -> dev_cache2		852190						
ANR	852423	Symbol	pgs -> device -> HWResolution		852190						
ANR	852424	Symbol	dev2		852190						
ANR	852425	Symbol	mem		852190						
ANR	852426	Symbol	dev		852190						
ANR	852427	Symbol	& st_device_memory		852190						
ANR	852428	Symbol	gs_currentdevice_inline		852190						
ANR	852429	Symbol	pgs -> device		852190						
ANR	852430	Symbol	* pgs -> device		852190						
ANR	852431	Symbol	gx_device_memory		852190						
ANR	852432	Symbol	* * * pgs		852190						
ANR	852433	Symbol	pgs		852190						
ANR	852434	Symbol	NULL		852190						
ANR	852435	Symbol	penum		852190						
ANR	852436	Symbol	* * dev		852190						
ANR	852437	Symbol	* dev -> HWResolution		852190						
ANR	852438	Symbol	penum -> dev_cache		852190						
ANR	852439	Symbol	dev -> HWResolution		852190						
ANR	852440	Symbol	* * pgs		852190						
ANR	852441	Symbol	gs_error_VMerror		852190						
ANR	852442	Symbol	* pgs -> device -> HWResolution		852190						
ANR	852443	Symbol	true		852190						
ANR	852444	Symbol	* * pgs -> device		852190						
ANR	852445	Function	show_origin_setup	1594:0:59709:60710							
ANR	852446	FunctionDef	"show_origin_setup (gs_gstate * pgs , fixed cpt_x , fixed cpt_y , gs_show_enum * penum)"		852445	0					
ANR	852447	CompoundStatement		1596:0:59803:60710	852445	0					
ANR	852448	IfStatement	if ( penum -> charpath_flag == cpm_show )		852445	0					
ANR	852449	Condition	penum -> charpath_flag == cpm_show	1597:8:59813:59844	852445	0	True				
ANR	852450	EqualityExpression	penum -> charpath_flag == cpm_show		852445	0		==			
ANR	852451	PtrMemberAccess	penum -> charpath_flag		852445	0					
ANR	852452	Identifier	penum		852445	0					
ANR	852453	Identifier	charpath_flag		852445	1					
ANR	852454	Identifier	cpm_show		852445	1					
ANR	852455	CompoundStatement		2:42:43:43	852445	1					
ANR	852456	IfStatement	if ( gs_currentaligntopixels ( penum -> current_font -> dir ) == 0 )		852445	0					
ANR	852457	Condition	gs_currentaligntopixels ( penum -> current_font -> dir ) == 0	1600:12:59979:60032	852445	0	True				
ANR	852458	EqualityExpression	gs_currentaligntopixels ( penum -> current_font -> dir ) == 0		852445	0		==			
ANR	852459	CallExpression	gs_currentaligntopixels ( penum -> current_font -> dir )		852445	0					
ANR	852460	Callee	gs_currentaligntopixels		852445	0					
ANR	852461	Identifier	gs_currentaligntopixels		852445	0					
ANR	852462	ArgumentList	penum -> current_font -> dir		852445	1					
ANR	852463	Argument	penum -> current_font -> dir		852445	0					
ANR	852464	PtrMemberAccess	penum -> current_font -> dir		852445	0					
ANR	852465	PtrMemberAccess	penum -> current_font		852445	0					
ANR	852466	Identifier	penum		852445	0					
ANR	852467	Identifier	current_font		852445	1					
ANR	852468	Identifier	dir		852445	1					
ANR	852469	PrimaryExpression	0		852445	1					
ANR	852470	CompoundStatement		9:12:450:507	852445	1					
ANR	852471	IdentifierDeclStatement	int scx = - 1L << ( _fixed_shift - penum -> log2_scale . x ) ;	1601:12:60049:60102	852445	0	True				
ANR	852472	IdentifierDecl	scx = - 1L << ( _fixed_shift - penum -> log2_scale . x )		852445	0					
ANR	852473	IdentifierDeclType	int		852445	0					
ANR	852474	Identifier	scx		852445	1					
ANR	852475	AssignmentExpression	scx = - 1L << ( _fixed_shift - penum -> log2_scale . x )		852445	2		=			
ANR	852476	Identifier	scx		852445	0					
ANR	852477	ShiftExpression	- 1L << ( _fixed_shift - penum -> log2_scale . x )		852445	1		<<			
ANR	852478	UnaryOperationExpression	- 1L		852445	0					
ANR	852479	UnaryOperator	-		852445	0					
ANR	852480	PrimaryExpression	1L		852445	1					
ANR	852481	AdditiveExpression	_fixed_shift - penum -> log2_scale . x		852445	1		-			
ANR	852482	Identifier	_fixed_shift		852445	0					
ANR	852483	MemberAccess	penum -> log2_scale . x		852445	1					
ANR	852484	PtrMemberAccess	penum -> log2_scale		852445	0					
ANR	852485	Identifier	penum		852445	0					
ANR	852486	Identifier	log2_scale		852445	1					
ANR	852487	Identifier	x		852445	1					
ANR	852488	IdentifierDeclStatement	int scy = - 1L << ( _fixed_shift - penum -> log2_scale . y ) ;	1602:12:60116:60169	852445	1	True				
ANR	852489	IdentifierDecl	scy = - 1L << ( _fixed_shift - penum -> log2_scale . y )		852445	0					
ANR	852490	IdentifierDeclType	int		852445	0					
ANR	852491	Identifier	scy		852445	1					
ANR	852492	AssignmentExpression	scy = - 1L << ( _fixed_shift - penum -> log2_scale . y )		852445	2		=			
ANR	852493	Identifier	scy		852445	0					
ANR	852494	ShiftExpression	- 1L << ( _fixed_shift - penum -> log2_scale . y )		852445	1		<<			
ANR	852495	UnaryOperationExpression	- 1L		852445	0					
ANR	852496	UnaryOperator	-		852445	0					
ANR	852497	PrimaryExpression	1L		852445	1					
ANR	852498	AdditiveExpression	_fixed_shift - penum -> log2_scale . y		852445	1		-			
ANR	852499	Identifier	_fixed_shift		852445	0					
ANR	852500	MemberAccess	penum -> log2_scale . y		852445	1					
ANR	852501	PtrMemberAccess	penum -> log2_scale		852445	0					
ANR	852502	Identifier	penum		852445	0					
ANR	852503	Identifier	log2_scale		852445	1					
ANR	852504	Identifier	y		852445	1					
ANR	852505	IdentifierDeclStatement	int rdx = 1L << ( _fixed_shift - 1 - penum -> log2_scale . x ) ;	1603:12:60183:60240	852445	2	True				
ANR	852506	IdentifierDecl	rdx = 1L << ( _fixed_shift - 1 - penum -> log2_scale . x )		852445	0					
ANR	852507	IdentifierDeclType	int		852445	0					
ANR	852508	Identifier	rdx		852445	1					
ANR	852509	AssignmentExpression	rdx = 1L << ( _fixed_shift - 1 - penum -> log2_scale . x )		852445	2		=			
ANR	852510	Identifier	rdx		852445	0					
ANR	852511	ShiftExpression	1L << ( _fixed_shift - 1 - penum -> log2_scale . x )		852445	1		<<			
ANR	852512	PrimaryExpression	1L		852445	0					
ANR	852513	AdditiveExpression	_fixed_shift - 1 - penum -> log2_scale . x		852445	1		-			
ANR	852514	Identifier	_fixed_shift		852445	0					
ANR	852515	AdditiveExpression	1 - penum -> log2_scale . x		852445	1		-			
ANR	852516	PrimaryExpression	1		852445	0					
ANR	852517	MemberAccess	penum -> log2_scale . x		852445	1					
ANR	852518	PtrMemberAccess	penum -> log2_scale		852445	0					
ANR	852519	Identifier	penum		852445	0					
ANR	852520	Identifier	log2_scale		852445	1					
ANR	852521	Identifier	x		852445	1					
ANR	852522	IdentifierDeclStatement	int rdy = 1L << ( _fixed_shift - 1 - penum -> log2_scale . y ) ;	1604:12:60254:60311	852445	3	True				
ANR	852523	IdentifierDecl	rdy = 1L << ( _fixed_shift - 1 - penum -> log2_scale . y )		852445	0					
ANR	852524	IdentifierDeclType	int		852445	0					
ANR	852525	Identifier	rdy		852445	1					
ANR	852526	AssignmentExpression	rdy = 1L << ( _fixed_shift - 1 - penum -> log2_scale . y )		852445	2		=			
ANR	852527	Identifier	rdy		852445	0					
ANR	852528	ShiftExpression	1L << ( _fixed_shift - 1 - penum -> log2_scale . y )		852445	1		<<			
ANR	852529	PrimaryExpression	1L		852445	0					
ANR	852530	AdditiveExpression	_fixed_shift - 1 - penum -> log2_scale . y		852445	1		-			
ANR	852531	Identifier	_fixed_shift		852445	0					
ANR	852532	AdditiveExpression	1 - penum -> log2_scale . y		852445	1		-			
ANR	852533	PrimaryExpression	1		852445	0					
ANR	852534	MemberAccess	penum -> log2_scale . y		852445	1					
ANR	852535	PtrMemberAccess	penum -> log2_scale		852445	0					
ANR	852536	Identifier	penum		852445	0					
ANR	852537	Identifier	log2_scale		852445	1					
ANR	852538	Identifier	y		852445	1					
ANR	852539	ExpressionStatement	cpt_x = ( cpt_x + rdx ) & scx	1606:12:60326:60353	852445	4	True				
ANR	852540	AssignmentExpression	cpt_x = ( cpt_x + rdx ) & scx		852445	0		=			
ANR	852541	Identifier	cpt_x		852445	0					
ANR	852542	BitAndExpression	( cpt_x + rdx ) & scx		852445	1		&			
ANR	852543	AdditiveExpression	cpt_x + rdx		852445	0		+			
ANR	852544	Identifier	cpt_x		852445	0					
ANR	852545	Identifier	rdx		852445	1					
ANR	852546	Identifier	scx		852445	1					
ANR	852547	ExpressionStatement	cpt_y = ( cpt_y + rdy ) & scy	1607:12:60367:60394	852445	5	True				
ANR	852548	AssignmentExpression	cpt_y = ( cpt_y + rdy ) & scy		852445	0		=			
ANR	852549	Identifier	cpt_y		852445	0					
ANR	852550	BitAndExpression	( cpt_y + rdy ) & scy		852445	1		&			
ANR	852551	AdditiveExpression	cpt_y + rdy		852445	0		+			
ANR	852552	Identifier	cpt_y		852445	0					
ANR	852553	Identifier	rdy		852445	1					
ANR	852554	Identifier	scy		852445	1					
ANR	852555	ElseStatement	else		852445	0					
ANR	852556	CompoundStatement		13:15:607:607	852445	0					
ANR	852557	ExpressionStatement	cpt_x = fixed_rounded ( cpt_x )	1609:12:60425:60453	852445	0	True				
ANR	852558	AssignmentExpression	cpt_x = fixed_rounded ( cpt_x )		852445	0		=			
ANR	852559	Identifier	cpt_x		852445	0					
ANR	852560	CallExpression	fixed_rounded ( cpt_x )		852445	1					
ANR	852561	Callee	fixed_rounded		852445	0					
ANR	852562	Identifier	fixed_rounded		852445	0					
ANR	852563	ArgumentList	cpt_x		852445	1					
ANR	852564	Argument	cpt_x		852445	0					
ANR	852565	Identifier	cpt_x		852445	0					
ANR	852566	ExpressionStatement	cpt_y = fixed_rounded ( cpt_y )	1610:12:60467:60495	852445	1	True				
ANR	852567	AssignmentExpression	cpt_y = fixed_rounded ( cpt_y )		852445	0		=			
ANR	852568	Identifier	cpt_y		852445	0					
ANR	852569	CallExpression	fixed_rounded ( cpt_y )		852445	1					
ANR	852570	Callee	fixed_rounded		852445	0					
ANR	852571	Identifier	fixed_rounded		852445	0					
ANR	852572	ArgumentList	cpt_y		852445	1					
ANR	852573	Argument	cpt_y		852445	0					
ANR	852574	Identifier	cpt_y		852445	0					
ANR	852575	ReturnStatement	"return gx_translate_to_fixed ( pgs , cpt_x , cpt_y ) ;"	1617:4:60661:60708	852445	1	True				
ANR	852576	CallExpression	"gx_translate_to_fixed ( pgs , cpt_x , cpt_y )"		852445	0					
ANR	852577	Callee	gx_translate_to_fixed		852445	0					
ANR	852578	Identifier	gx_translate_to_fixed		852445	0					
ANR	852579	ArgumentList	pgs		852445	1					
ANR	852580	Argument	pgs		852445	0					
ANR	852581	Identifier	pgs		852445	0					
ANR	852582	Argument	cpt_x		852445	1					
ANR	852583	Identifier	cpt_x		852445	0					
ANR	852584	Argument	cpt_y		852445	2					
ANR	852585	Identifier	cpt_y		852445	0					
ANR	852586	ReturnType	static int		852445	1					
ANR	852587	Identifier	show_origin_setup		852445	2					
ANR	852588	ParameterList	"gs_gstate * pgs , fixed cpt_x , fixed cpt_y , gs_show_enum * penum"		852445	3					
ANR	852589	Parameter	gs_gstate * pgs	1595:18:59738:59752	852445	0	True				
ANR	852590	ParameterType	gs_gstate *		852445	0					
ANR	852591	Identifier	pgs		852445	1					
ANR	852592	Parameter	fixed cpt_x	1595:35:59755:59765	852445	1	True				
ANR	852593	ParameterType	fixed		852445	0					
ANR	852594	Identifier	cpt_x		852445	1					
ANR	852595	Parameter	fixed cpt_y	1595:48:59768:59778	852445	2	True				
ANR	852596	ParameterType	fixed		852445	0					
ANR	852597	Identifier	cpt_y		852445	1					
ANR	852598	Parameter	gs_show_enum * penum	1595:61:59781:59800	852445	3	True				
ANR	852599	ParameterType	gs_show_enum *		852445	0					
ANR	852600	Identifier	penum		852445	1					
ANR	852601	CFGEntryNode	ENTRY		852445		True				
ANR	852602	CFGExitNode	EXIT		852445		True				
ANR	852603	Symbol	* penum		852445						
ANR	852604	Symbol	cpm_show		852445						
ANR	852605	Symbol	gx_translate_to_fixed		852445						
ANR	852606	Symbol	cpt_y		852445						
ANR	852607	Symbol	gs_currentaligntopixels		852445						
ANR	852608	Symbol	rdy		852445						
ANR	852609	Symbol	cpt_x		852445						
ANR	852610	Symbol	penum -> current_font -> dir		852445						
ANR	852611	Symbol	rdx		852445						
ANR	852612	Symbol	penum		852445						
ANR	852613	Symbol	scy		852445						
ANR	852614	Symbol	scx		852445						
ANR	852615	Symbol	penum -> log2_scale . y		852445						
ANR	852616	Symbol	penum -> current_font		852445						
ANR	852617	Symbol	penum -> log2_scale . x		852445						
ANR	852618	Symbol	penum -> charpath_flag		852445						
ANR	852619	Symbol	penum -> log2_scale		852445						
ANR	852620	Symbol	fixed_rounded		852445						
ANR	852621	Symbol	pgs		852445						
ANR	852622	Symbol	* penum -> current_font		852445						
ANR	852623	Symbol	_fixed_shift		852445						
ANR	852624	Symbol	* * penum		852445						
