command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9533301	File	data/converged/CVE-2018-16863_ghostpdl/slzwe.c								
ANR	9533302	DeclStmt									
ANR	9533303	Decl							extern	extern ( s_LZW_release )	stream_proc_release
ANR	9533304	ClassDef	lzw_encode_s	37:8:1180:1325							
ANR	9533305	DeclStmt									
ANR	9533306	Decl							byte	byte	datum
ANR	9533307	DeclStmt									
ANR	9533308	Decl							ushort	ushort	prefix
ANR	9533309	DeclStmt									
ANR	9533310	Decl							lzw_encode_s	lzw_encode_s	lzw_encode
ANR	9533311	ClassDef	lzw_encode_table_s	46:0:1491:1592							
ANR	9533312	DeclStmt									
ANR	9533313	Decl							lzw_encode	lzw_encode [ encode_max ]	encode
ANR	9533314	DeclStmt									
ANR	9533315	Decl							ushort	ushort [ hash_size ]	hashed
ANR	9533316	Function	lzw_put_code	61:0:2103:2587							
ANR	9533317	FunctionDef	"lzw_put_code (register stream_LZW_state * ss , byte * q , uint code)"		9533316	0					
ANR	9533318	CompoundStatement		63:0:2181:2587	9533316	0					
ANR	9533319	IdentifierDeclStatement	uint size = ss -> code_size ;	63:1:2183:2208	9533316	0	True				
ANR	9533320	IdentifierDecl	size = ss -> code_size		9533316	0					
ANR	9533321	IdentifierDeclType	uint		9533316	0					
ANR	9533322	Identifier	size		9533316	1					
ANR	9533323	AssignmentExpression	size = ss -> code_size		9533316	2		=			
ANR	9533324	Identifier	size		9533316	0					
ANR	9533325	PtrMemberAccess	ss -> code_size		9533316	1					
ANR	9533326	Identifier	ss		9533316	0					
ANR	9533327	Identifier	code_size		9533316	1					
ANR	9533328	IdentifierDeclStatement	byte cb = ( ss -> bits << ss -> bits_left ) + ( code >> ( size - ss -> bits_left ) ) ;	64:8:2218:2306	9533316	1	True				
ANR	9533329	IdentifierDecl	cb = ( ss -> bits << ss -> bits_left ) + ( code >> ( size - ss -> bits_left ) )		9533316	0					
ANR	9533330	IdentifierDeclType	byte		9533316	0					
ANR	9533331	Identifier	cb		9533316	1					
ANR	9533332	AssignmentExpression	cb = ( ss -> bits << ss -> bits_left ) + ( code >> ( size - ss -> bits_left ) )		9533316	2		=			
ANR	9533333	Identifier	cb		9533316	0					
ANR	9533334	AdditiveExpression	( ss -> bits << ss -> bits_left ) + ( code >> ( size - ss -> bits_left ) )		9533316	1		+			
ANR	9533335	ShiftExpression	ss -> bits << ss -> bits_left		9533316	0		<<			
ANR	9533336	PtrMemberAccess	ss -> bits		9533316	0					
ANR	9533337	Identifier	ss		9533316	0					
ANR	9533338	Identifier	bits		9533316	1					
ANR	9533339	PtrMemberAccess	ss -> bits_left		9533316	1					
ANR	9533340	Identifier	ss		9533316	0					
ANR	9533341	Identifier	bits_left		9533316	1					
ANR	9533342	ShiftExpression	code >> ( size - ss -> bits_left )		9533316	1		>>			
ANR	9533343	Identifier	code		9533316	0					
ANR	9533344	AdditiveExpression	size - ss -> bits_left		9533316	1		-			
ANR	9533345	Identifier	size		9533316	0					
ANR	9533346	PtrMemberAccess	ss -> bits_left		9533316	1					
ANR	9533347	Identifier	ss		9533316	0					
ANR	9533348	Identifier	bits_left		9533316	1					
ANR	9533349	ExpressionStatement	"if_debug2m ( 'W' , ss -> memory , ""[w]writing 0x%x,%d\\n"" , code , ss -> code_size )"	66:8:2316:2388	9533316	2	True				
ANR	9533350	CallExpression	"if_debug2m ( 'W' , ss -> memory , ""[w]writing 0x%x,%d\\n"" , code , ss -> code_size )"		9533316	0					
ANR	9533351	Callee	if_debug2m		9533316	0					
ANR	9533352	Identifier	if_debug2m		9533316	0					
ANR	9533353	ArgumentList	'W'		9533316	1					
ANR	9533354	Argument	'W'		9533316	0					
ANR	9533355	PrimaryExpression	'W'		9533316	0					
ANR	9533356	Argument	ss -> memory		9533316	1					
ANR	9533357	PtrMemberAccess	ss -> memory		9533316	0					
ANR	9533358	Identifier	ss		9533316	0					
ANR	9533359	Identifier	memory		9533316	1					
ANR	9533360	Argument	"""[w]writing 0x%x,%d\\n"""		9533316	2					
ANR	9533361	PrimaryExpression	"""[w]writing 0x%x,%d\\n"""		9533316	0					
ANR	9533362	Argument	code		9533316	3					
ANR	9533363	Identifier	code		9533316	0					
ANR	9533364	Argument	ss -> code_size		9533316	4					
ANR	9533365	PtrMemberAccess	ss -> code_size		9533316	0					
ANR	9533366	Identifier	ss		9533316	0					
ANR	9533367	Identifier	code_size		9533316	1					
ANR	9533368	ExpressionStatement	* ++ q = cb	67:8:2398:2407	9533316	3	True				
ANR	9533369	AssignmentExpression	* ++ q = cb		9533316	0		=			
ANR	9533370	UnaryOperationExpression	* ++ q		9533316	0					
ANR	9533371	UnaryOperator	*		9533316	0					
ANR	9533372	UnaryExpression	++ q		9533316	1					
ANR	9533373	IncDec	++		9533316	0					
ANR	9533374	Identifier	q		9533316	1					
ANR	9533375	Identifier	cb		9533316	1					
ANR	9533376	IfStatement	if ( ( ss -> bits_left += 8 - size ) <= 0 )		9533316	4					
ANR	9533377	Condition	( ss -> bits_left += 8 - size ) <= 0	68:13:2422:2453	9533316	0	True				
ANR	9533378	RelationalExpression	( ss -> bits_left += 8 - size ) <= 0		9533316	0		<=			
ANR	9533379	AssignmentExpression	ss -> bits_left += 8 - size		9533316	0		+=			
ANR	9533380	PtrMemberAccess	ss -> bits_left		9533316	0					
ANR	9533381	Identifier	ss		9533316	0					
ANR	9533382	Identifier	bits_left		9533316	1					
ANR	9533383	AdditiveExpression	8 - size		9533316	1		-			
ANR	9533384	PrimaryExpression	8		9533316	0					
ANR	9533385	Identifier	size		9533316	1					
ANR	9533386	PrimaryExpression	0		9533316	1					
ANR	9533387	CompoundStatement		7:8:283:283	9533316	1					
ANR	9533388	ExpressionStatement	* ++ q = code >> - ss -> bits_left	69:10:2467:2496	9533316	0	True				
ANR	9533389	AssignmentExpression	* ++ q = code >> - ss -> bits_left		9533316	0		=			
ANR	9533390	UnaryOperationExpression	* ++ q		9533316	0					
ANR	9533391	UnaryOperator	*		9533316	0					
ANR	9533392	UnaryExpression	++ q		9533316	1					
ANR	9533393	IncDec	++		9533316	0					
ANR	9533394	Identifier	q		9533316	1					
ANR	9533395	ShiftExpression	code >> - ss -> bits_left		9533316	1		>>			
ANR	9533396	Identifier	code		9533316	0					
ANR	9533397	UnaryOperationExpression	- ss -> bits_left		9533316	1					
ANR	9533398	UnaryOperator	-		9533316	0					
ANR	9533399	PtrMemberAccess	ss -> bits_left		9533316	1					
ANR	9533400	Identifier	ss		9533316	0					
ANR	9533401	Identifier	bits_left		9533316	1					
ANR	9533402	ExpressionStatement	ss -> bits_left += 8	70:16:2514:2532	9533316	1	True				
ANR	9533403	AssignmentExpression	ss -> bits_left += 8		9533316	0		+=			
ANR	9533404	PtrMemberAccess	ss -> bits_left		9533316	0					
ANR	9533405	Identifier	ss		9533316	0					
ANR	9533406	Identifier	bits_left		9533316	1					
ANR	9533407	PrimaryExpression	8		9533316	1					
ANR	9533408	ExpressionStatement	ss -> bits = code	72:8:2552:2567	9533316	5	True				
ANR	9533409	AssignmentExpression	ss -> bits = code		9533316	0		=			
ANR	9533410	PtrMemberAccess	ss -> bits		9533316	0					
ANR	9533411	Identifier	ss		9533316	0					
ANR	9533412	Identifier	bits		9533316	1					
ANR	9533413	Identifier	code		9533316	1					
ANR	9533414	ReturnStatement	return q ;	73:8:2577:2585	9533316	6	True				
ANR	9533415	Identifier	q		9533316	0					
ANR	9533416	ReturnType	static byte *		9533316	1					
ANR	9533417	Identifier	lzw_put_code		9533316	2					
ANR	9533418	ParameterList	"register stream_LZW_state * ss , byte * q , uint code"		9533316	3					
ANR	9533419	Parameter	register stream_LZW_state * ss	62:13:2130:2158	9533316	0	True				
ANR	9533420	ParameterType	register stream_LZW_state *		9533316	0					
ANR	9533421	Identifier	ss		9533316	1					
ANR	9533422	Parameter	byte * q	62:44:2161:2167	9533316	1	True				
ANR	9533423	ParameterType	byte *		9533316	0					
ANR	9533424	Identifier	q		9533316	1					
ANR	9533425	Parameter	uint code	62:53:2170:2178	9533316	2	True				
ANR	9533426	ParameterType	uint		9533316	0					
ANR	9533427	Identifier	code		9533316	1					
ANR	9533428	CFGEntryNode	ENTRY		9533316		True				
ANR	9533429	CFGExitNode	EXIT		9533316		True				
ANR	9533430	Symbol	ss		9533316						
ANR	9533431	Symbol	q		9533316						
ANR	9533432	Symbol	ss -> bits		9533316						
ANR	9533433	Symbol	ss -> memory		9533316						
ANR	9533434	Symbol	code		9533316						
ANR	9533435	Symbol	size		9533316						
ANR	9533436	Symbol	* ss		9533316						
ANR	9533437	Symbol	ss -> code_size		9533316						
ANR	9533438	Symbol	* ++ q		9533316						
ANR	9533439	Symbol	ss -> bits_left		9533316						
ANR	9533440	Symbol	* q		9533316						
ANR	9533441	Symbol	cb		9533316						
ANR	9533442	Function	lzw_reset_encode	77:0:2641:3416							
ANR	9533443	FunctionDef	lzw_reset_encode (stream_LZW_state * ss)		9533442	0					
ANR	9533444	CompoundStatement		79:0:2692:3416	9533442	0					
ANR	9533445	Statement	register	79:1:2694:2701	9533442	0	True				
ANR	9533446	IdentifierDeclStatement	int c ;	79:10:2703:2708	9533442	1	True				
ANR	9533447	IdentifierDecl	c		9533442	0					
ANR	9533448	IdentifierDeclType	int		9533442	0					
ANR	9533449	Identifier	c		9533442	1					
ANR	9533450	IdentifierDeclStatement	lzw_encode_table * table = ss -> table . encode ;	80:8:2718:2760	9533442	2	True				
ANR	9533451	IdentifierDecl	* table = ss -> table . encode		9533442	0					
ANR	9533452	IdentifierDeclType	lzw_encode_table *		9533442	0					
ANR	9533453	Identifier	table		9533442	1					
ANR	9533454	AssignmentExpression	* table = ss -> table . encode		9533442	2		=			
ANR	9533455	Identifier	table		9533442	0					
ANR	9533456	MemberAccess	ss -> table . encode		9533442	1					
ANR	9533457	PtrMemberAccess	ss -> table		9533442	0					
ANR	9533458	Identifier	ss		9533442	0					
ANR	9533459	Identifier	table		9533442	1					
ANR	9533460	Identifier	encode		9533442	1					
ANR	9533461	ExpressionStatement	ss -> next_code = code_0	81:8:2770:2792	9533442	3	True				
ANR	9533462	AssignmentExpression	ss -> next_code = code_0		9533442	0		=			
ANR	9533463	PtrMemberAccess	ss -> next_code		9533442	0					
ANR	9533464	Identifier	ss		9533442	0					
ANR	9533465	Identifier	next_code		9533442	1					
ANR	9533466	Identifier	code_0		9533442	1					
ANR	9533467	ExpressionStatement	ss -> code_size = 9	82:8:2802:2819	9533442	4	True				
ANR	9533468	AssignmentExpression	ss -> code_size = 9		9533442	0		=			
ANR	9533469	PtrMemberAccess	ss -> code_size		9533442	0					
ANR	9533470	Identifier	ss		9533442	0					
ANR	9533471	Identifier	code_size		9533442	1					
ANR	9533472	PrimaryExpression	9		9533442	1					
ANR	9533473	ExpressionStatement	ss -> prev_code = code_eod	83:8:2829:2853	9533442	5	True				
ANR	9533474	AssignmentExpression	ss -> prev_code = code_eod		9533442	0		=			
ANR	9533475	PtrMemberAccess	ss -> prev_code		9533442	0					
ANR	9533476	Identifier	ss		9533442	0					
ANR	9533477	Identifier	prev_code		9533442	1					
ANR	9533478	Identifier	code_eod		9533442	1					
ANR	9533479	ForStatement	for ( c = 0 ; c < hash_size ; c ++ )		9533442	6					
ANR	9533480	ForInit	c = 0 ;	84:14:2869:2874	9533442	0	True				
ANR	9533481	AssignmentExpression	c = 0		9533442	0		=			
ANR	9533482	Identifier	c		9533442	0					
ANR	9533483	PrimaryExpression	0		9533442	1					
ANR	9533484	Condition	c < hash_size	84:21:2876:2888	9533442	1	True				
ANR	9533485	RelationalExpression	c < hash_size		9533442	0		<			
ANR	9533486	Identifier	c		9533442	0					
ANR	9533487	Identifier	hash_size		9533442	1					
ANR	9533488	PostIncDecOperationExpression	c ++	84:36:2891:2893	9533442	2	True				
ANR	9533489	Identifier	c		9533442	0					
ANR	9533490	IncDec	++		9533442	1					
ANR	9533491	ExpressionStatement	table -> hashed [ c ] = code_eod	85:16:2913:2940	9533442	3	True				
ANR	9533492	AssignmentExpression	table -> hashed [ c ] = code_eod		9533442	0		=			
ANR	9533493	ArrayIndexing	table -> hashed [ c ]		9533442	0					
ANR	9533494	PtrMemberAccess	table -> hashed		9533442	0					
ANR	9533495	Identifier	table		9533442	0					
ANR	9533496	Identifier	hashed		9533442	1					
ANR	9533497	Identifier	c		9533442	1					
ANR	9533498	Identifier	code_eod		9533442	1					
ANR	9533499	ForStatement	for ( c = 0 ; c < 256 ; c ++ )		9533442	7					
ANR	9533500	ForInit	c = 0 ;	86:14:2956:2961	9533442	0	True				
ANR	9533501	AssignmentExpression	c = 0		9533442	0		=			
ANR	9533502	Identifier	c		9533442	0					
ANR	9533503	PrimaryExpression	0		9533442	1					
ANR	9533504	Condition	c < 256	86:21:2963:2969	9533442	1	True				
ANR	9533505	RelationalExpression	c < 256		9533442	0		<			
ANR	9533506	Identifier	c		9533442	0					
ANR	9533507	PrimaryExpression	256		9533442	1					
ANR	9533508	PostIncDecOperationExpression	c ++	86:30:2972:2974	9533442	2	True				
ANR	9533509	Identifier	c		9533442	0					
ANR	9533510	IncDec	++		9533442	1					
ANR	9533511	CompoundStatement		10:25:356:409	9533442	3					
ANR	9533512	IdentifierDeclStatement	lzw_encode * ec = & table -> encode [ c ] ;	87:10:2988:3022	9533442	0	True				
ANR	9533513	IdentifierDecl	* ec = & table -> encode [ c ]		9533442	0					
ANR	9533514	IdentifierDeclType	lzw_encode *		9533442	0					
ANR	9533515	Identifier	ec		9533442	1					
ANR	9533516	AssignmentExpression	* ec = & table -> encode [ c ]		9533442	2		=			
ANR	9533517	Identifier	ec		9533442	0					
ANR	9533518	UnaryOperationExpression	& table -> encode [ c ]		9533442	1					
ANR	9533519	UnaryOperator	&		9533442	0					
ANR	9533520	ArrayIndexing	table -> encode [ c ]		9533442	1					
ANR	9533521	PtrMemberAccess	table -> encode		9533442	0					
ANR	9533522	Identifier	table		9533442	0					
ANR	9533523	Identifier	encode		9533442	1					
ANR	9533524	Identifier	c		9533442	1					
ANR	9533525	Statement	register	88:16:3040:3047	9533442	1	True				
ANR	9533526	IdentifierDeclStatement	"ushort * tc = & table -> hashed [ encode_hash ( code_eod , c ) ] ;"	88:25:3049:3102	9533442	2	True				
ANR	9533527	IdentifierDecl	"* tc = & table -> hashed [ encode_hash ( code_eod , c ) ]"		9533442	0					
ANR	9533528	IdentifierDeclType	ushort *		9533442	0					
ANR	9533529	Identifier	tc		9533442	1					
ANR	9533530	AssignmentExpression	"* tc = & table -> hashed [ encode_hash ( code_eod , c ) ]"		9533442	2		=			
ANR	9533531	Identifier	tc		9533442	0					
ANR	9533532	UnaryOperationExpression	"& table -> hashed [ encode_hash ( code_eod , c ) ]"		9533442	1					
ANR	9533533	UnaryOperator	&		9533442	0					
ANR	9533534	ArrayIndexing	"table -> hashed [ encode_hash ( code_eod , c ) ]"		9533442	1					
ANR	9533535	PtrMemberAccess	table -> hashed		9533442	0					
ANR	9533536	Identifier	table		9533442	0					
ANR	9533537	Identifier	hashed		9533442	1					
ANR	9533538	CallExpression	"encode_hash ( code_eod , c )"		9533442	1					
ANR	9533539	Callee	encode_hash		9533442	0					
ANR	9533540	Identifier	encode_hash		9533442	0					
ANR	9533541	ArgumentList	code_eod		9533442	1					
ANR	9533542	Argument	code_eod		9533442	0					
ANR	9533543	Identifier	code_eod		9533442	0					
ANR	9533544	Argument	c		9533442	1					
ANR	9533545	Identifier	c		9533442	0					
ANR	9533546	WhileStatement	while ( * tc != code_eod )		9533442	3					
ANR	9533547	Condition	* tc != code_eod	89:24:3128:3142	9533442	0	True				
ANR	9533548	EqualityExpression	* tc != code_eod		9533442	0		!=			
ANR	9533549	UnaryOperationExpression	* tc		9533442	0					
ANR	9533550	UnaryOperator	*		9533442	0					
ANR	9533551	Identifier	tc		9533442	1					
ANR	9533552	Identifier	code_eod		9533442	1					
ANR	9533553	IfStatement	if ( ++ tc == & table -> hashed [ hash_size ] )		9533442	1					
ANR	9533554	Condition	++ tc == & table -> hashed [ hash_size ]	90:23:3169:3201	9533442	0	True				
ANR	9533555	EqualityExpression	++ tc == & table -> hashed [ hash_size ]		9533442	0		==			
ANR	9533556	UnaryExpression	++ tc		9533442	0					
ANR	9533557	IncDec	++		9533442	0					
ANR	9533558	Identifier	tc		9533442	1					
ANR	9533559	UnaryOperationExpression	& table -> hashed [ hash_size ]		9533442	1					
ANR	9533560	UnaryOperator	&		9533442	0					
ANR	9533561	ArrayIndexing	table -> hashed [ hash_size ]		9533442	1					
ANR	9533562	PtrMemberAccess	table -> hashed		9533442	0					
ANR	9533563	Identifier	table		9533442	0					
ANR	9533564	Identifier	hashed		9533442	1					
ANR	9533565	Identifier	hash_size		9533442	1					
ANR	9533566	ExpressionStatement	tc = & table -> hashed [ 0 ]	91:20:3225:3247	9533442	1	True				
ANR	9533567	AssignmentExpression	tc = & table -> hashed [ 0 ]		9533442	0		=			
ANR	9533568	Identifier	tc		9533442	0					
ANR	9533569	UnaryOperationExpression	& table -> hashed [ 0 ]		9533442	1					
ANR	9533570	UnaryOperator	&		9533442	0					
ANR	9533571	ArrayIndexing	table -> hashed [ 0 ]		9533442	1					
ANR	9533572	PtrMemberAccess	table -> hashed		9533442	0					
ANR	9533573	Identifier	table		9533442	0					
ANR	9533574	Identifier	hashed		9533442	1					
ANR	9533575	PrimaryExpression	0		9533442	1					
ANR	9533576	ExpressionStatement	* tc = c	92:16:3265:3272	9533442	4	True				
ANR	9533577	AssignmentExpression	* tc = c		9533442	0		=			
ANR	9533578	UnaryOperationExpression	* tc		9533442	0					
ANR	9533579	UnaryOperator	*		9533442	0					
ANR	9533580	Identifier	tc		9533442	1					
ANR	9533581	Identifier	c		9533442	1					
ANR	9533582	ExpressionStatement	"ec -> datum = c , ec -> prefix = code_eod"	93:16:3290:3326	9533442	5	True				
ANR	9533583	Expression	"ec -> datum = c , ec -> prefix = code_eod"		9533442	0					
ANR	9533584	AssignmentExpression	ec -> datum = c		9533442	0		=			
ANR	9533585	PtrMemberAccess	ec -> datum		9533442	0					
ANR	9533586	Identifier	ec		9533442	0					
ANR	9533587	Identifier	datum		9533442	1					
ANR	9533588	Identifier	c		9533442	1					
ANR	9533589	AssignmentExpression	ec -> prefix = code_eod		9533442	1		=			
ANR	9533590	PtrMemberAccess	ec -> prefix		9533442	0					
ANR	9533591	Identifier	ec		9533442	0					
ANR	9533592	Identifier	prefix		9533442	1					
ANR	9533593	Identifier	code_eod		9533442	1					
ANR	9533594	ExpressionStatement	table -> encode [ code_eod ] . prefix = code_reset	95:8:3346:3389	9533442	8	True				
ANR	9533595	AssignmentExpression	table -> encode [ code_eod ] . prefix = code_reset		9533442	0		=			
ANR	9533596	MemberAccess	table -> encode [ code_eod ] . prefix		9533442	0					
ANR	9533597	ArrayIndexing	table -> encode [ code_eod ]		9533442	0					
ANR	9533598	PtrMemberAccess	table -> encode		9533442	0					
ANR	9533599	Identifier	table		9533442	0					
ANR	9533600	Identifier	encode		9533442	1					
ANR	9533601	Identifier	code_eod		9533442	1					
ANR	9533602	Identifier	prefix		9533442	1					
ANR	9533603	Identifier	code_reset		9533442	1					
ANR	9533604	ReturnType	static void		9533442	1					
ANR	9533605	Identifier	lzw_reset_encode		9533442	2					
ANR	9533606	ParameterList	stream_LZW_state * ss		9533442	3					
ANR	9533607	Parameter	stream_LZW_state * ss	78:17:2670:2689	9533442	0	True				
ANR	9533608	ParameterType	stream_LZW_state *		9533442	0					
ANR	9533609	Identifier	ss		9533442	1					
ANR	9533610	CFGEntryNode	ENTRY		9533442		True				
ANR	9533611	CFGExitNode	EXIT		9533442		True				
ANR	9533612	Symbol	encode_hash		9533442						
ANR	9533613	Symbol	* ss		9533442						
ANR	9533614	Symbol	* ec		9533442						
ANR	9533615	Symbol	code_reset		9533442						
ANR	9533616	Symbol	ec -> datum		9533442						
ANR	9533617	Symbol	table -> encode [ code_eod ] . prefix		9533442						
ANR	9533618	Symbol	ss -> table		9533442						
ANR	9533619	Symbol	ss -> code_size		9533442						
ANR	9533620	Symbol	* table -> hashed		9533442						
ANR	9533621	Symbol	* table -> encode		9533442						
ANR	9533622	Symbol	table		9533442						
ANR	9533623	Symbol	ec		9533442						
ANR	9533624	Symbol	ss		9533442						
ANR	9533625	Symbol	code_eod		9533442						
ANR	9533626	Symbol	c		9533442						
ANR	9533627	Symbol	code_0		9533442						
ANR	9533628	Symbol	ss -> prev_code		9533442						
ANR	9533629	Symbol	hash_size		9533442						
ANR	9533630	Symbol	* table		9533442						
ANR	9533631	Symbol	* c		9533442						
ANR	9533632	Symbol	ss -> next_code		9533442						
ANR	9533633	Symbol	tc		9533442						
ANR	9533634	Symbol	* * table		9533442						
ANR	9533635	Symbol	table -> encode		9533442						
ANR	9533636	Symbol	* tc		9533442						
ANR	9533637	Symbol	ss -> table . encode		9533442						
ANR	9533638	Symbol	* code_eod		9533442						
ANR	9533639	Symbol	ec -> prefix		9533442						
ANR	9533640	Symbol	table -> hashed		9533442						
ANR	9533641	Function	s_LZWE_init	101:0:3490:3935							
ANR	9533642	FunctionDef	s_LZWE_init (stream_state * st)		9533641	0					
ANR	9533643	CompoundStatement		103:0:3531:3935	9533641	0					
ANR	9533644	ExpressionStatement	ss -> bits_left = 8	103:1:3533:3550	9533641	0	True				
ANR	9533645	AssignmentExpression	ss -> bits_left = 8		9533641	0		=			
ANR	9533646	PtrMemberAccess	ss -> bits_left		9533641	0					
ANR	9533647	Identifier	ss		9533641	0					
ANR	9533648	Identifier	bits_left		9533641	1					
ANR	9533649	PrimaryExpression	8		9533641	1					
ANR	9533650	ExpressionStatement	ss -> bits = 0	104:8:3560:3572	9533641	1	True				
ANR	9533651	AssignmentExpression	ss -> bits = 0		9533641	0		=			
ANR	9533652	PtrMemberAccess	ss -> bits		9533641	0					
ANR	9533653	Identifier	ss		9533641	0					
ANR	9533654	Identifier	bits		9533641	1					
ANR	9533655	PrimaryExpression	0		9533641	1					
ANR	9533656	ExpressionStatement	"ss -> table . encode = gs_alloc_struct ( st -> memory , lzw_encode_table , & st_lzwe_table , ""LZWEncode init"" )"	105:8:3648:3770	9533641	2	True				
ANR	9533657	AssignmentExpression	"ss -> table . encode = gs_alloc_struct ( st -> memory , lzw_encode_table , & st_lzwe_table , ""LZWEncode init"" )"		9533641	0		=			
ANR	9533658	MemberAccess	ss -> table . encode		9533641	0					
ANR	9533659	PtrMemberAccess	ss -> table		9533641	0					
ANR	9533660	Identifier	ss		9533641	0					
ANR	9533661	Identifier	table		9533641	1					
ANR	9533662	Identifier	encode		9533641	1					
ANR	9533663	CallExpression	"gs_alloc_struct ( st -> memory , lzw_encode_table , & st_lzwe_table , ""LZWEncode init"" )"		9533641	1					
ANR	9533664	Callee	gs_alloc_struct		9533641	0					
ANR	9533665	Identifier	gs_alloc_struct		9533641	0					
ANR	9533666	ArgumentList	st -> memory		9533641	1					
ANR	9533667	Argument	st -> memory		9533641	0					
ANR	9533668	PtrMemberAccess	st -> memory		9533641	0					
ANR	9533669	Identifier	st		9533641	0					
ANR	9533670	Identifier	memory		9533641	1					
ANR	9533671	Argument	lzw_encode_table		9533641	1					
ANR	9533672	Identifier	lzw_encode_table		9533641	0					
ANR	9533673	Argument	& st_lzwe_table		9533641	2					
ANR	9533674	UnaryOperationExpression	& st_lzwe_table		9533641	0					
ANR	9533675	UnaryOperator	&		9533641	0					
ANR	9533676	Identifier	st_lzwe_table		9533641	1					
ANR	9533677	Argument	"""LZWEncode init"""		9533641	3					
ANR	9533678	PrimaryExpression	"""LZWEncode init"""		9533641	0					
ANR	9533679	IfStatement	if ( ss -> table . encode == 0 )		9533641	3					
ANR	9533680	Condition	ss -> table . encode == 0	107:13:3785:3805	9533641	0	True				
ANR	9533681	EqualityExpression	ss -> table . encode == 0		9533641	0		==			
ANR	9533682	MemberAccess	ss -> table . encode		9533641	0					
ANR	9533683	PtrMemberAccess	ss -> table		9533641	0					
ANR	9533684	Identifier	ss		9533641	0					
ANR	9533685	Identifier	table		9533641	1					
ANR	9533686	Identifier	encode		9533641	1					
ANR	9533687	PrimaryExpression	0		9533641	1					
ANR	9533688	ReturnStatement	return ERRC ;	108:16:3825:3836	9533641	1	True				
ANR	9533689	Identifier	ERRC		9533641	0					
ANR	9533690	ExpressionStatement	ss -> first = true	109:8:3869:3885	9533641	4	True				
ANR	9533691	AssignmentExpression	ss -> first = true		9533641	0		=			
ANR	9533692	PtrMemberAccess	ss -> first		9533641	0					
ANR	9533693	Identifier	ss		9533641	0					
ANR	9533694	Identifier	first		9533641	1					
ANR	9533695	Identifier	true		9533641	1					
ANR	9533696	ExpressionStatement	lzw_reset_encode ( ss )	110:8:3895:3915	9533641	5	True				
ANR	9533697	CallExpression	lzw_reset_encode ( ss )		9533641	0					
ANR	9533698	Callee	lzw_reset_encode		9533641	0					
ANR	9533699	Identifier	lzw_reset_encode		9533641	0					
ANR	9533700	ArgumentList	ss		9533641	1					
ANR	9533701	Argument	ss		9533641	0					
ANR	9533702	Identifier	ss		9533641	0					
ANR	9533703	ReturnStatement	return 0 ;	111:8:3925:3933	9533641	6	True				
ANR	9533704	PrimaryExpression	0		9533641	0					
ANR	9533705	ReturnType	static int		9533641	1					
ANR	9533706	Identifier	s_LZWE_init		9533641	2					
ANR	9533707	ParameterList	stream_state * st		9533641	3					
ANR	9533708	Parameter	stream_state * st	102:12:3513:3528	9533641	0	True				
ANR	9533709	ParameterType	stream_state *		9533641	0					
ANR	9533710	Identifier	st		9533641	1					
ANR	9533711	CFGEntryNode	ENTRY		9533641		True				
ANR	9533712	CFGExitNode	EXIT		9533641		True				
ANR	9533713	Symbol	ss		9533641						
ANR	9533714	Symbol	st		9533641						
ANR	9533715	Symbol	ss -> bits		9533641						
ANR	9533716	Symbol	* st		9533641						
ANR	9533717	Symbol	* ss		9533641						
ANR	9533718	Symbol	& st_lzwe_table		9533641						
ANR	9533719	Symbol	st -> memory		9533641						
ANR	9533720	Symbol	gs_alloc_struct		9533641						
ANR	9533721	Symbol	ss -> first		9533641						
ANR	9533722	Symbol	lzw_encode_table		9533641						
ANR	9533723	Symbol	ss -> table		9533641						
ANR	9533724	Symbol	true		9533641						
ANR	9533725	Symbol	ss -> table . encode		9533641						
ANR	9533726	Symbol	ss -> bits_left		9533641						
ANR	9533727	Symbol	ERRC		9533641						
ANR	9533728	Function	s_LZWE_process	115:0:3961:7722							
ANR	9533729	FunctionDef	"s_LZWE_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		9533728	0					
ANR	9533730	CompoundStatement		118:0:4067:7722	9533728	0					
ANR	9533731	Statement	register	118:1:4069:4076	9533728	0	True				
ANR	9533732	IdentifierDeclStatement	const byte * p = pr -> ptr ;	118:10:4078:4101	9533728	1	True				
ANR	9533733	IdentifierDecl	* p = pr -> ptr		9533728	0					
ANR	9533734	IdentifierDeclType	const byte *		9533728	0					
ANR	9533735	Identifier	p		9533728	1					
ANR	9533736	AssignmentExpression	* p = pr -> ptr		9533728	2		=			
ANR	9533737	Identifier	p		9533728	0					
ANR	9533738	PtrMemberAccess	pr -> ptr		9533728	1					
ANR	9533739	Identifier	pr		9533728	0					
ANR	9533740	Identifier	ptr		9533728	1					
ANR	9533741	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	119:8:4111:4141	9533728	2	True				
ANR	9533742	IdentifierDecl	* rlimit = pr -> limit		9533728	0					
ANR	9533743	IdentifierDeclType	const byte *		9533728	0					
ANR	9533744	Identifier	rlimit		9533728	1					
ANR	9533745	AssignmentExpression	* rlimit = pr -> limit		9533728	2		=			
ANR	9533746	Identifier	rlimit		9533728	0					
ANR	9533747	PtrMemberAccess	pr -> limit		9533728	1					
ANR	9533748	Identifier	pr		9533728	0					
ANR	9533749	Identifier	limit		9533728	1					
ANR	9533750	Statement	register	120:8:4151:4158	9533728	3	True				
ANR	9533751	IdentifierDeclStatement	byte * q = pw -> ptr ;	120:17:4160:4177	9533728	4	True				
ANR	9533752	IdentifierDecl	* q = pw -> ptr		9533728	0					
ANR	9533753	IdentifierDeclType	byte *		9533728	0					
ANR	9533754	Identifier	q		9533728	1					
ANR	9533755	AssignmentExpression	* q = pw -> ptr		9533728	2		=			
ANR	9533756	Identifier	q		9533728	0					
ANR	9533757	PtrMemberAccess	pw -> ptr		9533728	1					
ANR	9533758	Identifier	pw		9533728	0					
ANR	9533759	Identifier	ptr		9533728	1					
ANR	9533760	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	121:8:4187:4211	9533728	5	True				
ANR	9533761	IdentifierDecl	* wlimit = pw -> limit		9533728	0					
ANR	9533762	IdentifierDeclType	byte *		9533728	0					
ANR	9533763	Identifier	wlimit		9533728	1					
ANR	9533764	AssignmentExpression	* wlimit = pw -> limit		9533728	2		=			
ANR	9533765	Identifier	wlimit		9533728	0					
ANR	9533766	PtrMemberAccess	pw -> limit		9533728	1					
ANR	9533767	Identifier	pw		9533728	0					
ANR	9533768	Identifier	limit		9533728	1					
ANR	9533769	IdentifierDeclStatement	int code = ss -> prev_code ;	122:8:4221:4245	9533728	6	True				
ANR	9533770	IdentifierDecl	code = ss -> prev_code		9533728	0					
ANR	9533771	IdentifierDeclType	int		9533728	0					
ANR	9533772	Identifier	code		9533728	1					
ANR	9533773	AssignmentExpression	code = ss -> prev_code		9533728	2		=			
ANR	9533774	Identifier	code		9533728	0					
ANR	9533775	PtrMemberAccess	ss -> prev_code		9533728	1					
ANR	9533776	Identifier	ss		9533728	0					
ANR	9533777	Identifier	prev_code		9533728	1					
ANR	9533778	IdentifierDeclStatement	lzw_encode_table * table = ss -> table . encode ;	123:8:4255:4297	9533728	7	True				
ANR	9533779	IdentifierDecl	* table = ss -> table . encode		9533728	0					
ANR	9533780	IdentifierDeclType	lzw_encode_table *		9533728	0					
ANR	9533781	Identifier	table		9533728	1					
ANR	9533782	AssignmentExpression	* table = ss -> table . encode		9533728	2		=			
ANR	9533783	Identifier	table		9533728	0					
ANR	9533784	MemberAccess	ss -> table . encode		9533728	1					
ANR	9533785	PtrMemberAccess	ss -> table		9533728	0					
ANR	9533786	Identifier	ss		9533728	0					
ANR	9533787	Identifier	table		9533728	1					
ANR	9533788	Identifier	encode		9533728	1					
ANR	9533789	IdentifierDeclStatement	ushort * table_end = & table -> hashed [ hash_size ] ;	124:8:4307:4352	9533728	8	True				
ANR	9533790	IdentifierDecl	* table_end = & table -> hashed [ hash_size ]		9533728	0					
ANR	9533791	IdentifierDeclType	ushort *		9533728	0					
ANR	9533792	Identifier	table_end		9533728	1					
ANR	9533793	AssignmentExpression	* table_end = & table -> hashed [ hash_size ]		9533728	2		=			
ANR	9533794	Identifier	table_end		9533728	0					
ANR	9533795	UnaryOperationExpression	& table -> hashed [ hash_size ]		9533728	1					
ANR	9533796	UnaryOperator	&		9533728	0					
ANR	9533797	ArrayIndexing	table -> hashed [ hash_size ]		9533728	1					
ANR	9533798	PtrMemberAccess	table -> hashed		9533728	0					
ANR	9533799	Identifier	table		9533728	0					
ANR	9533800	Identifier	hashed		9533728	1					
ANR	9533801	Identifier	hash_size		9533728	1					
ANR	9533802	IdentifierDeclStatement	int status = 0 ;	125:8:4362:4376	9533728	9	True				
ANR	9533803	IdentifierDecl	status = 0		9533728	0					
ANR	9533804	IdentifierDeclType	int		9533728	0					
ANR	9533805	Identifier	status		9533728	1					
ANR	9533806	AssignmentExpression	status = 0		9533728	2		=			
ANR	9533807	Identifier	status		9533728	0					
ANR	9533808	PrimaryExpression	0		9533728	1					
ANR	9533809	IdentifierDeclStatement	int limit_code ;	126:8:4386:4400	9533728	10	True				
ANR	9533810	IdentifierDecl	limit_code		9533728	0					
ANR	9533811	IdentifierDeclType	int		9533728	0					
ANR	9533812	Identifier	limit_code		9533728	1					
ANR	9533813	Statement	define	127:1:4403:4408	9533728	11	True				
ANR	9533814	Statement	set_limit_code	127:8:4410:4423	9533728	12	True				
ANR	9533815	Statement	(	127:22:4424:4424	9533728	13	True				
ANR	9533816	Statement	)	127:23:4425:4425	9533728	14	True				
ANR	9533817	ExpressionStatement	limit_code = ( 1 << ss -> code_size ) - ss -> EarlyChange	128:2:4430:4481	9533728	15	True				
ANR	9533818	AssignmentExpression	limit_code = ( 1 << ss -> code_size ) - ss -> EarlyChange		9533728	0		=			
ANR	9533819	Identifier	limit_code		9533728	0					
ANR	9533820	AdditiveExpression	( 1 << ss -> code_size ) - ss -> EarlyChange		9533728	1		-			
ANR	9533821	ShiftExpression	1 << ss -> code_size		9533728	0		<<			
ANR	9533822	PrimaryExpression	1		9533728	0					
ANR	9533823	PtrMemberAccess	ss -> code_size		9533728	1					
ANR	9533824	Identifier	ss		9533728	0					
ANR	9533825	Identifier	code_size		9533728	1					
ANR	9533826	PtrMemberAccess	ss -> EarlyChange		9533728	1					
ANR	9533827	Identifier	ss		9533728	0					
ANR	9533828	Identifier	EarlyChange		9533728	1					
ANR	9533829	IfStatement	if ( limit_code > encode_max )		9533728	16					
ANR	9533830	Condition	limit_code > encode_max	129:7:4491:4513	9533728	0	True				
ANR	9533831	RelationalExpression	limit_code > encode_max		9533728	0		>			
ANR	9533832	Identifier	limit_code		9533728	0					
ANR	9533833	Identifier	encode_max		9533728	1					
ANR	9533834	Statement	limit_code	129:33:4517:4526	9533728	1	True				
ANR	9533835	Statement	=	129:44:4528:4528	9533728	17	True				
ANR	9533836	IdentifierDeclStatement	encode_max set_limit_code ( ) ;	129:46:4530:4565	9533728	18	True				
ANR	9533837	IdentifierDecl	set_limit_code ( )		9533728	0					
ANR	9533838	IdentifierDeclType	encode_max		9533728	0					
ANR	9533839	Identifier	set_limit_code		9533728	1					
ANR	9533840	IfStatement	if ( ss -> first )		9533728	19					
ANR	9533841	Condition	ss -> first	131:13:4580:4588	9533728	0	True				
ANR	9533842	PtrMemberAccess	ss -> first		9533728	0					
ANR	9533843	Identifier	ss		9533728	0					
ANR	9533844	Identifier	first		9533728	1					
ANR	9533845	CompoundStatement		15:8:532:532	9533728	1					
ANR	9533846	IfStatement	if ( wlimit - q < 2 )		9533728	0					
ANR	9533847	Condition	wlimit - q < 2	133:21:4658:4671	9533728	0	True				
ANR	9533848	RelationalExpression	wlimit - q < 2		9533728	0		<			
ANR	9533849	AdditiveExpression	wlimit - q		9533728	0		-			
ANR	9533850	Identifier	wlimit		9533728	0					
ANR	9533851	Identifier	q		9533728	1					
ANR	9533852	PrimaryExpression	2		9533728	1					
ANR	9533853	ReturnStatement	return 1 ;	134:24:4699:4707	9533728	1	True				
ANR	9533854	PrimaryExpression	1		9533728	0					
ANR	9533855	ExpressionStatement	"q = lzw_put_code ( ss , q , code_reset )"	135:16:4725:4760	9533728	1	True				
ANR	9533856	AssignmentExpression	"q = lzw_put_code ( ss , q , code_reset )"		9533728	0		=			
ANR	9533857	Identifier	q		9533728	0					
ANR	9533858	CallExpression	"lzw_put_code ( ss , q , code_reset )"		9533728	1					
ANR	9533859	Callee	lzw_put_code		9533728	0					
ANR	9533860	Identifier	lzw_put_code		9533728	0					
ANR	9533861	ArgumentList	ss		9533728	1					
ANR	9533862	Argument	ss		9533728	0					
ANR	9533863	Identifier	ss		9533728	0					
ANR	9533864	Argument	q		9533728	1					
ANR	9533865	Identifier	q		9533728	0					
ANR	9533866	Argument	code_reset		9533728	2					
ANR	9533867	Identifier	code_reset		9533728	0					
ANR	9533868	ExpressionStatement	ss -> first = false	136:16:4778:4795	9533728	2	True				
ANR	9533869	AssignmentExpression	ss -> first = false		9533728	0		=			
ANR	9533870	PtrMemberAccess	ss -> first		9533728	0					
ANR	9533871	Identifier	ss		9533728	0					
ANR	9533872	Identifier	first		9533728	1					
ANR	9533873	Identifier	false		9533728	1					
ANR	9533874	WhileStatement	while ( p < rlimit )		9533728	20					
ANR	9533875	Condition	p < rlimit	138:16:4823:4832	9533728	0	True				
ANR	9533876	RelationalExpression	p < rlimit		9533728	0		<			
ANR	9533877	Identifier	p		9533728	0					
ANR	9533878	Identifier	rlimit		9533728	1					
ANR	9533879	CompoundStatement		23:16:809:819	9533728	1					
ANR	9533880	IdentifierDeclStatement	byte c = p [ 1 ] ;	139:10:4846:4859	9533728	0	True				
ANR	9533881	IdentifierDecl	c = p [ 1 ]		9533728	0					
ANR	9533882	IdentifierDeclType	byte		9533728	0					
ANR	9533883	Identifier	c		9533728	1					
ANR	9533884	AssignmentExpression	c = p [ 1 ]		9533728	2		=			
ANR	9533885	Identifier	c		9533728	0					
ANR	9533886	ArrayIndexing	p [ 1 ]		9533728	1					
ANR	9533887	Identifier	p		9533728	0					
ANR	9533888	PrimaryExpression	1		9533728	1					
ANR	9533889	IdentifierDeclStatement	ushort * tp ;	140:16:4877:4887	9533728	1	True				
ANR	9533890	IdentifierDecl	* tp		9533728	0					
ANR	9533891	IdentifierDeclType	ushort *		9533728	0					
ANR	9533892	Identifier	tp		9533728	1					
ANR	9533893	ForStatement	"for ( tp = & table -> hashed [ encode_hash ( code , c ) ] ; ; )"		9533728	2					
ANR	9533894	ForInit	"tp = & table -> hashed [ encode_hash ( code , c ) ] ;"	141:22:4911:4952	9533728	0	True				
ANR	9533895	AssignmentExpression	"tp = & table -> hashed [ encode_hash ( code , c ) ]"		9533728	0		=			
ANR	9533896	Identifier	tp		9533728	0					
ANR	9533897	UnaryOperationExpression	"& table -> hashed [ encode_hash ( code , c ) ]"		9533728	1					
ANR	9533898	UnaryOperator	&		9533728	0					
ANR	9533899	ArrayIndexing	"table -> hashed [ encode_hash ( code , c ) ]"		9533728	1					
ANR	9533900	PtrMemberAccess	table -> hashed		9533728	0					
ANR	9533901	Identifier	table		9533728	0					
ANR	9533902	Identifier	hashed		9533728	1					
ANR	9533903	CallExpression	"encode_hash ( code , c )"		9533728	1					
ANR	9533904	Callee	encode_hash		9533728	0					
ANR	9533905	Identifier	encode_hash		9533728	0					
ANR	9533906	ArgumentList	code		9533728	1					
ANR	9533907	Argument	code		9533728	0					
ANR	9533908	Identifier	code		9533728	0					
ANR	9533909	Argument	c		9533728	1					
ANR	9533910	Identifier	c		9533728	0					
ANR	9533911	CompoundStatement		25:18:908:944	9533728	1					
ANR	9533912	IdentifierDeclStatement	lzw_encode * ep = & table -> encode [ * tp ] ;	142:18:4976:5012	9533728	0	True				
ANR	9533913	IdentifierDecl	* ep = & table -> encode [ * tp ]		9533728	0					
ANR	9533914	IdentifierDeclType	lzw_encode *		9533728	0					
ANR	9533915	Identifier	ep		9533728	1					
ANR	9533916	AssignmentExpression	* ep = & table -> encode [ * tp ]		9533728	2		=			
ANR	9533917	Identifier	ep		9533728	0					
ANR	9533918	UnaryOperationExpression	& table -> encode [ * tp ]		9533728	1					
ANR	9533919	UnaryOperator	&		9533728	0					
ANR	9533920	ArrayIndexing	table -> encode [ * tp ]		9533728	1					
ANR	9533921	PtrMemberAccess	table -> encode		9533728	0					
ANR	9533922	Identifier	table		9533728	0					
ANR	9533923	Identifier	encode		9533728	1					
ANR	9533924	UnaryOperationExpression	* tp		9533728	1					
ANR	9533925	UnaryOperator	*		9533728	0					
ANR	9533926	Identifier	tp		9533728	1					
ANR	9533927	IfStatement	if ( ep -> prefix == code && ep -> datum == c )		9533728	1					
ANR	9533928	Condition	ep -> prefix == code && ep -> datum == c	143:29:5043:5078	9533728	0	True				
ANR	9533929	AndExpression	ep -> prefix == code && ep -> datum == c		9533728	0		&&			
ANR	9533930	EqualityExpression	ep -> prefix == code		9533728	0		==			
ANR	9533931	PtrMemberAccess	ep -> prefix		9533728	0					
ANR	9533932	Identifier	ep		9533728	0					
ANR	9533933	Identifier	prefix		9533728	1					
ANR	9533934	Identifier	code		9533728	1					
ANR	9533935	EqualityExpression	ep -> datum == c		9533728	1		==			
ANR	9533936	PtrMemberAccess	ep -> datum		9533728	0					
ANR	9533937	Identifier	ep		9533728	0					
ANR	9533938	Identifier	datum		9533728	1					
ANR	9533939	Identifier	c		9533728	1					
ANR	9533940	CompoundStatement		27:24:1038:1038	9533728	1					
ANR	9533941	ExpressionStatement	code = * tp	144:26:5108:5118	9533728	0	True				
ANR	9533942	AssignmentExpression	code = * tp		9533728	0		=			
ANR	9533943	Identifier	code		9533728	0					
ANR	9533944	UnaryOperationExpression	* tp		9533728	1					
ANR	9533945	UnaryOperator	*		9533728	0					
ANR	9533946	Identifier	tp		9533728	1					
ANR	9533947	ExpressionStatement	p ++	145:32:5152:5155	9533728	1	True				
ANR	9533948	PostIncDecOperationExpression	p ++		9533728	0					
ANR	9533949	Identifier	p		9533728	0					
ANR	9533950	IncDec	++		9533728	1					
ANR	9533951	BreakStatement	break ;	146:32:5189:5194	9533728	2	True				
ANR	9533952	ElseStatement	else		9533728	0					
ANR	9533953	IfStatement	if ( * tp != code_eod )		9533728	0					
ANR	9533954	Condition	* tp != code_eod	148:34:5256:5270	9533728	0	True				
ANR	9533955	EqualityExpression	* tp != code_eod		9533728	0		!=			
ANR	9533956	UnaryOperationExpression	* tp		9533728	0					
ANR	9533957	UnaryOperator	*		9533728	0					
ANR	9533958	Identifier	tp		9533728	1					
ANR	9533959	Identifier	code_eod		9533728	1					
ANR	9533960	CompoundStatement		32:24:1230:1230	9533728	1					
ANR	9533961	IfStatement	if ( ++ tp == table_end )		9533728	0					
ANR	9533962	Condition	++ tp == table_end	149:31:5305:5321	9533728	0	True				
ANR	9533963	EqualityExpression	++ tp == table_end		9533728	0		==			
ANR	9533964	UnaryExpression	++ tp		9533728	0					
ANR	9533965	IncDec	++		9533728	0					
ANR	9533966	Identifier	tp		9533728	1					
ANR	9533967	Identifier	table_end		9533728	1					
ANR	9533968	ExpressionStatement	tp = & table -> hashed [ 0 ]	150:34:5359:5381	9533728	1	True				
ANR	9533969	AssignmentExpression	tp = & table -> hashed [ 0 ]		9533728	0		=			
ANR	9533970	Identifier	tp		9533728	0					
ANR	9533971	UnaryOperationExpression	& table -> hashed [ 0 ]		9533728	1					
ANR	9533972	UnaryOperator	&		9533728	0					
ANR	9533973	ArrayIndexing	table -> hashed [ 0 ]		9533728	1					
ANR	9533974	PtrMemberAccess	table -> hashed		9533728	0					
ANR	9533975	Identifier	table		9533728	0					
ANR	9533976	Identifier	hashed		9533728	1					
ANR	9533977	PrimaryExpression	0		9533728	1					
ANR	9533978	ElseStatement	else		9533728	0					
ANR	9533979	CompoundStatement		36:24:1412:1412	9533728	0					
ANR	9533980	IfStatement	if ( wlimit - q <= 4 )		9533728	0					
ANR	9533981	Condition	wlimit - q <= 4	154:37:5552:5566	9533728	0	True				
ANR	9533982	RelationalExpression	wlimit - q <= 4		9533728	0		<=			
ANR	9533983	AdditiveExpression	wlimit - q		9533728	0		-			
ANR	9533984	Identifier	wlimit		9533728	0					
ANR	9533985	Identifier	q		9533728	1					
ANR	9533986	PrimaryExpression	4		9533728	1					
ANR	9533987	CompoundStatement		38:32:1534:1534	9533728	1					
ANR	9533988	ExpressionStatement	status = 1	155:34:5604:5614	9533728	0	True				
ANR	9533989	AssignmentExpression	status = 1		9533728	0		=			
ANR	9533990	Identifier	status		9533728	0					
ANR	9533991	PrimaryExpression	1		9533728	1					
ANR	9533992	GotoStatement	goto out ;	156:40:5656:5664	9533728	1	True				
ANR	9533993	Identifier	out		9533728	0					
ANR	9533994	ExpressionStatement	"q = lzw_put_code ( ss , q , code )"	158:32:5732:5761	9533728	1	True				
ANR	9533995	AssignmentExpression	"q = lzw_put_code ( ss , q , code )"		9533728	0		=			
ANR	9533996	Identifier	q		9533728	0					
ANR	9533997	CallExpression	"lzw_put_code ( ss , q , code )"		9533728	1					
ANR	9533998	Callee	lzw_put_code		9533728	0					
ANR	9533999	Identifier	lzw_put_code		9533728	0					
ANR	9534000	ArgumentList	ss		9533728	1					
ANR	9534001	Argument	ss		9533728	0					
ANR	9534002	Identifier	ss		9533728	0					
ANR	9534003	Argument	q		9533728	1					
ANR	9534004	Identifier	q		9533728	0					
ANR	9534005	Argument	code		9533728	2					
ANR	9534006	Identifier	code		9533728	0					
ANR	9534007	IfStatement	if ( ss -> next_code == limit_code )		9533728	2					
ANR	9534008	Condition	ss -> next_code == limit_code	159:37:5800:5826	9533728	0	True				
ANR	9534009	EqualityExpression	ss -> next_code == limit_code		9533728	0		==			
ANR	9534010	PtrMemberAccess	ss -> next_code		9533728	0					
ANR	9534011	Identifier	ss		9533728	0					
ANR	9534012	Identifier	next_code		9533728	1					
ANR	9534013	Identifier	limit_code		9533728	1					
ANR	9534014	CompoundStatement		43:32:1794:1794	9533728	1					
ANR	9534015	IfStatement	if ( ss -> next_code == encode_max )		9533728	0					
ANR	9534016	Condition	ss -> next_code == encode_max	162:45:6007:6033	9533728	0	True				
ANR	9534017	EqualityExpression	ss -> next_code == encode_max		9533728	0		==			
ANR	9534018	PtrMemberAccess	ss -> next_code		9533728	0					
ANR	9534019	Identifier	ss		9533728	0					
ANR	9534020	Identifier	next_code		9533728	1					
ANR	9534021	Identifier	encode_max		9533728	1					
ANR	9534022	CompoundStatement		46:40:2009:2009	9533728	1					
ANR	9534023	ExpressionStatement	"q = lzw_put_code ( ss , q , code_reset )"	163:42:6079:6114	9533728	0	True				
ANR	9534024	AssignmentExpression	"q = lzw_put_code ( ss , q , code_reset )"		9533728	0		=			
ANR	9534025	Identifier	q		9533728	0					
ANR	9534026	CallExpression	"lzw_put_code ( ss , q , code_reset )"		9533728	1					
ANR	9534027	Callee	lzw_put_code		9533728	0					
ANR	9534028	Identifier	lzw_put_code		9533728	0					
ANR	9534029	ArgumentList	ss		9533728	1					
ANR	9534030	Argument	ss		9533728	0					
ANR	9534031	Identifier	ss		9533728	0					
ANR	9534032	Argument	q		9533728	1					
ANR	9534033	Identifier	q		9533728	0					
ANR	9534034	Argument	code_reset		9533728	2					
ANR	9534035	Identifier	code_reset		9533728	0					
ANR	9534036	ExpressionStatement	lzw_reset_encode ( ss )	164:48:6164:6184	9533728	1	True				
ANR	9534037	CallExpression	lzw_reset_encode ( ss )		9533728	0					
ANR	9534038	Callee	lzw_reset_encode		9533728	0					
ANR	9534039	Identifier	lzw_reset_encode		9533728	0					
ANR	9534040	ArgumentList	ss		9533728	1					
ANR	9534041	Argument	ss		9533728	0					
ANR	9534042	Identifier	ss		9533728	0					
ANR	9534043	ExpressionStatement	set_limit_code ( )	165:48:6234:6250	9533728	2	True				
ANR	9534044	CallExpression	set_limit_code ( )		9533728	0					
ANR	9534045	Callee	set_limit_code		9533728	0					
ANR	9534046	Identifier	set_limit_code		9533728	0					
ANR	9534047	ArgumentList			9533728	1					
ANR	9534048	GotoStatement	goto cx ;	166:48:6300:6307	9533728	3	True				
ANR	9534049	Identifier	cx		9533728	0					
ANR	9534050	ExpressionStatement	ss -> code_size ++	168:40:6391:6406	9533728	1	True				
ANR	9534051	PostIncDecOperationExpression	ss -> code_size ++		9533728	0					
ANR	9534052	PtrMemberAccess	ss -> code_size		9533728	0					
ANR	9534053	Identifier	ss		9533728	0					
ANR	9534054	Identifier	code_size		9533728	1					
ANR	9534055	IncDec	++		9533728	1					
ANR	9534056	ExpressionStatement	set_limit_code ( )	169:40:6448:6464	9533728	2	True				
ANR	9534057	CallExpression	set_limit_code ( )		9533728	0					
ANR	9534058	Callee	set_limit_code		9533728	0					
ANR	9534059	Identifier	set_limit_code		9533728	0					
ANR	9534060	ArgumentList			9533728	1					
ANR	9534061	ExpressionStatement	"if_debug3m ( 'W' , ss -> memory , ""[W]encoding 0x%x=0x%x+%c\\n"" , ss -> next_code , code , c )"	171:32:6532:6655	9533728	3	True				
ANR	9534062	CallExpression	"if_debug3m ( 'W' , ss -> memory , ""[W]encoding 0x%x=0x%x+%c\\n"" , ss -> next_code , code , c )"		9533728	0					
ANR	9534063	Callee	if_debug3m		9533728	0					
ANR	9534064	Identifier	if_debug3m		9533728	0					
ANR	9534065	ArgumentList	'W'		9533728	1					
ANR	9534066	Argument	'W'		9533728	0					
ANR	9534067	PrimaryExpression	'W'		9533728	0					
ANR	9534068	Argument	ss -> memory		9533728	1					
ANR	9534069	PtrMemberAccess	ss -> memory		9533728	0					
ANR	9534070	Identifier	ss		9533728	0					
ANR	9534071	Identifier	memory		9533728	1					
ANR	9534072	Argument	"""[W]encoding 0x%x=0x%x+%c\\n"""		9533728	2					
ANR	9534073	PrimaryExpression	"""[W]encoding 0x%x=0x%x+%c\\n"""		9533728	0					
ANR	9534074	Argument	ss -> next_code		9533728	3					
ANR	9534075	PtrMemberAccess	ss -> next_code		9533728	0					
ANR	9534076	Identifier	ss		9533728	0					
ANR	9534077	Identifier	next_code		9533728	1					
ANR	9534078	Argument	code		9533728	4					
ANR	9534079	Identifier	code		9533728	0					
ANR	9534080	Argument	c		9533728	5					
ANR	9534081	Identifier	c		9533728	0					
ANR	9534082	ExpressionStatement	* tp = ss -> next_code ++	173:32:6689:6710	9533728	4	True				
ANR	9534083	AssignmentExpression	* tp = ss -> next_code ++		9533728	0		=			
ANR	9534084	UnaryOperationExpression	* tp		9533728	0					
ANR	9534085	UnaryOperator	*		9533728	0					
ANR	9534086	Identifier	tp		9533728	1					
ANR	9534087	PostIncDecOperationExpression	ss -> next_code ++		9533728	1					
ANR	9534088	PtrMemberAccess	ss -> next_code		9533728	0					
ANR	9534089	Identifier	ss		9533728	0					
ANR	9534090	Identifier	next_code		9533728	1					
ANR	9534091	IncDec	++		9533728	1					
ANR	9534092	ExpressionStatement	ep = & table -> encode [ * tp ]	174:32:6744:6768	9533728	5	True				
ANR	9534093	AssignmentExpression	ep = & table -> encode [ * tp ]		9533728	0		=			
ANR	9534094	Identifier	ep		9533728	0					
ANR	9534095	UnaryOperationExpression	& table -> encode [ * tp ]		9533728	1					
ANR	9534096	UnaryOperator	&		9533728	0					
ANR	9534097	ArrayIndexing	table -> encode [ * tp ]		9533728	1					
ANR	9534098	PtrMemberAccess	table -> encode		9533728	0					
ANR	9534099	Identifier	table		9533728	0					
ANR	9534100	Identifier	encode		9533728	1					
ANR	9534101	UnaryOperationExpression	* tp		9533728	1					
ANR	9534102	UnaryOperator	*		9533728	0					
ANR	9534103	Identifier	tp		9533728	1					
ANR	9534104	ExpressionStatement	ep -> datum = c	175:32:6802:6815	9533728	6	True				
ANR	9534105	AssignmentExpression	ep -> datum = c		9533728	0		=			
ANR	9534106	PtrMemberAccess	ep -> datum		9533728	0					
ANR	9534107	Identifier	ep		9533728	0					
ANR	9534108	Identifier	datum		9533728	1					
ANR	9534109	Identifier	c		9533728	1					
ANR	9534110	ExpressionStatement	ep -> prefix = code	176:32:6849:6866	9533728	7	True				
ANR	9534111	AssignmentExpression	ep -> prefix = code		9533728	0		=			
ANR	9534112	PtrMemberAccess	ep -> prefix		9533728	0					
ANR	9534113	Identifier	ep		9533728	0					
ANR	9534114	Identifier	prefix		9533728	1					
ANR	9534115	Identifier	code		9533728	1					
ANR	9534116	Label	cx :	177:0:6868:6870	9533728	8	True				
ANR	9534117	Identifier	cx		9533728	0					
ANR	9534118	ExpressionStatement	code = code_eod	177:7:6875:6890	9533728	9	True				
ANR	9534119	AssignmentExpression	code = code_eod		9533728	0		=			
ANR	9534120	Identifier	code		9533728	0					
ANR	9534121	Identifier	code_eod		9533728	1					
ANR	9534122	BreakStatement	break ;	178:32:6924:6929	9533728	10	True				
ANR	9534123	IfStatement	if ( last && status == 0 )		9533728	21					
ANR	9534124	Condition	last && status == 0	182:13:6998:7016	9533728	0	True				
ANR	9534125	AndExpression	last && status == 0		9533728	0		&&			
ANR	9534126	Identifier	last		9533728	0					
ANR	9534127	EqualityExpression	status == 0		9533728	1		==			
ANR	9534128	Identifier	status		9533728	0					
ANR	9534129	PrimaryExpression	0		9533728	1					
ANR	9534130	CompoundStatement		66:8:2960:2960	9533728	1					
ANR	9534131	IfStatement	if ( wlimit - q < 4 )		9533728	0					
ANR	9534132	Condition	wlimit - q < 4	183:15:7035:7048	9533728	0	True				
ANR	9534133	RelationalExpression	wlimit - q < 4		9533728	0		<			
ANR	9534134	AdditiveExpression	wlimit - q		9533728	0		-			
ANR	9534135	Identifier	wlimit		9533728	0					
ANR	9534136	Identifier	q		9533728	1					
ANR	9534137	PrimaryExpression	4		9533728	1					
ANR	9534138	ExpressionStatement	status = 1	184:24:7076:7086	9533728	1	True				
ANR	9534139	AssignmentExpression	status = 1		9533728	0		=			
ANR	9534140	Identifier	status		9533728	0					
ANR	9534141	PrimaryExpression	1		9533728	1					
ANR	9534142	ElseStatement	else		9533728	0					
ANR	9534143	CompoundStatement		69:18:3059:3059	9533728	0					
ANR	9534144	IfStatement	if ( code != code_eod )		9533728	0					
ANR	9534145	Condition	code != code_eod	186:25:7134:7149	9533728	0	True				
ANR	9534146	EqualityExpression	code != code_eod		9533728	0		!=			
ANR	9534147	Identifier	code		9533728	0					
ANR	9534148	Identifier	code_eod		9533728	1					
ANR	9534149	CompoundStatement		70:26:3111:3111	9533728	1					
ANR	9534150	ExpressionStatement	"q = lzw_put_code ( ss , q , code )"	187:28:7181:7210	9533728	0	True				
ANR	9534151	AssignmentExpression	"q = lzw_put_code ( ss , q , code )"		9533728	0		=			
ANR	9534152	Identifier	q		9533728	0					
ANR	9534153	CallExpression	"lzw_put_code ( ss , q , code )"		9533728	1					
ANR	9534154	Callee	lzw_put_code		9533728	0					
ANR	9534155	Identifier	lzw_put_code		9533728	0					
ANR	9534156	ArgumentList	ss		9533728	1					
ANR	9534157	Argument	ss		9533728	0					
ANR	9534158	Identifier	ss		9533728	0					
ANR	9534159	Argument	q		9533728	1					
ANR	9534160	Identifier	q		9533728	0					
ANR	9534161	Argument	code		9533728	2					
ANR	9534162	Identifier	code		9533728	0					
ANR	9534163	IfStatement	if ( ss -> next_code == limit_code && ss -> next_code != encode_max )		9533728	1					
ANR	9534164	Condition	ss -> next_code == limit_code && ss -> next_code != encode_max	188:36:7273:7330	9533728	0	True				
ANR	9534165	AndExpression	ss -> next_code == limit_code && ss -> next_code != encode_max		9533728	0		&&			
ANR	9534166	EqualityExpression	ss -> next_code == limit_code		9533728	0		==			
ANR	9534167	PtrMemberAccess	ss -> next_code		9533728	0					
ANR	9534168	Identifier	ss		9533728	0					
ANR	9534169	Identifier	next_code		9533728	1					
ANR	9534170	Identifier	limit_code		9533728	1					
ANR	9534171	EqualityExpression	ss -> next_code != encode_max		9533728	1		!=			
ANR	9534172	PtrMemberAccess	ss -> next_code		9533728	0					
ANR	9534173	Identifier	ss		9533728	0					
ANR	9534174	Identifier	next_code		9533728	1					
ANR	9534175	Identifier	encode_max		9533728	1					
ANR	9534176	ExpressionStatement	ss -> code_size ++	189:36:7369:7384	9533728	1	True				
ANR	9534177	PostIncDecOperationExpression	ss -> code_size ++		9533728	0					
ANR	9534178	PtrMemberAccess	ss -> code_size		9533728	0					
ANR	9534179	Identifier	ss		9533728	0					
ANR	9534180	Identifier	code_size		9533728	1					
ANR	9534181	IncDec	++		9533728	1					
ANR	9534182	ExpressionStatement	"q = lzw_put_code ( ss , q , code_eod )"	191:24:7438:7471	9533728	1	True				
ANR	9534183	AssignmentExpression	"q = lzw_put_code ( ss , q , code_eod )"		9533728	0		=			
ANR	9534184	Identifier	q		9533728	0					
ANR	9534185	CallExpression	"lzw_put_code ( ss , q , code_eod )"		9533728	1					
ANR	9534186	Callee	lzw_put_code		9533728	0					
ANR	9534187	Identifier	lzw_put_code		9533728	0					
ANR	9534188	ArgumentList	ss		9533728	1					
ANR	9534189	Argument	ss		9533728	0					
ANR	9534190	Identifier	ss		9533728	0					
ANR	9534191	Argument	q		9533728	1					
ANR	9534192	Identifier	q		9533728	0					
ANR	9534193	Argument	code_eod		9533728	2					
ANR	9534194	Identifier	code_eod		9533728	0					
ANR	9534195	IfStatement	if ( ss -> bits_left < 8 )		9533728	2					
ANR	9534196	Condition	ss -> bits_left < 8	192:29:7502:7518	9533728	0	True				
ANR	9534197	RelationalExpression	ss -> bits_left < 8		9533728	0		<			
ANR	9534198	PtrMemberAccess	ss -> bits_left		9533728	0					
ANR	9534199	Identifier	ss		9533728	0					
ANR	9534200	Identifier	bits_left		9533728	1					
ANR	9534201	PrimaryExpression	8		9533728	1					
ANR	9534202	ExpressionStatement	* ++ q = ss -> bits << ss -> bits_left	193:26:7548:7580	9533728	1	True				
ANR	9534203	AssignmentExpression	* ++ q = ss -> bits << ss -> bits_left		9533728	0		=			
ANR	9534204	UnaryOperationExpression	* ++ q		9533728	0					
ANR	9534205	UnaryOperator	*		9533728	0					
ANR	9534206	UnaryExpression	++ q		9533728	1					
ANR	9534207	IncDec	++		9533728	0					
ANR	9534208	Identifier	q		9533728	1					
ANR	9534209	ShiftExpression	ss -> bits << ss -> bits_left		9533728	1		<<			
ANR	9534210	PtrMemberAccess	ss -> bits		9533728	0					
ANR	9534211	Identifier	ss		9533728	0					
ANR	9534212	Identifier	bits		9533728	1					
ANR	9534213	PtrMemberAccess	ss -> bits_left		9533728	1					
ANR	9534214	Identifier	ss		9533728	0					
ANR	9534215	Identifier	bits_left		9533728	1					
ANR	9534216	Label	out :	196:0:7630:7633	9533728	22	True				
ANR	9534217	Identifier	out		9533728	0					
ANR	9534218	ExpressionStatement	ss -> prev_code = code	196:5:7635:7655	9533728	23	True				
ANR	9534219	AssignmentExpression	ss -> prev_code = code		9533728	0		=			
ANR	9534220	PtrMemberAccess	ss -> prev_code		9533728	0					
ANR	9534221	Identifier	ss		9533728	0					
ANR	9534222	Identifier	prev_code		9533728	1					
ANR	9534223	Identifier	code		9533728	1					
ANR	9534224	ExpressionStatement	pr -> ptr = p	197:8:7665:7676	9533728	24	True				
ANR	9534225	AssignmentExpression	pr -> ptr = p		9533728	0		=			
ANR	9534226	PtrMemberAccess	pr -> ptr		9533728	0					
ANR	9534227	Identifier	pr		9533728	0					
ANR	9534228	Identifier	ptr		9533728	1					
ANR	9534229	Identifier	p		9533728	1					
ANR	9534230	ExpressionStatement	pw -> ptr = q	198:8:7686:7697	9533728	25	True				
ANR	9534231	AssignmentExpression	pw -> ptr = q		9533728	0		=			
ANR	9534232	PtrMemberAccess	pw -> ptr		9533728	0					
ANR	9534233	Identifier	pw		9533728	0					
ANR	9534234	Identifier	ptr		9533728	1					
ANR	9534235	Identifier	q		9533728	1					
ANR	9534236	ReturnStatement	return status ;	199:8:7707:7720	9533728	26	True				
ANR	9534237	Identifier	status		9533728	0					
ANR	9534238	ReturnType	static int		9533728	1					
ANR	9534239	Identifier	s_LZWE_process		9533728	2					
ANR	9534240	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		9533728	3					
ANR	9534241	Parameter	stream_state * st	116:15:3987:4002	9533728	0	True				
ANR	9534242	ParameterType	stream_state *		9533728	0					
ANR	9534243	Identifier	st		9533728	1					
ANR	9534244	Parameter	stream_cursor_read * pr	116:33:4005:4026	9533728	1	True				
ANR	9534245	ParameterType	stream_cursor_read *		9533728	0					
ANR	9534246	Identifier	pr		9533728	1					
ANR	9534247	Parameter	stream_cursor_write * pw	117:2:4031:4053	9533728	2	True				
ANR	9534248	ParameterType	stream_cursor_write *		9533728	0					
ANR	9534249	Identifier	pw		9533728	1					
ANR	9534250	Parameter	bool last	117:27:4056:4064	9533728	3	True				
ANR	9534251	ParameterType	bool		9533728	0					
ANR	9534252	Identifier	last		9533728	1					
ANR	9534253	CFGEntryNode	ENTRY		9533728		True				
ANR	9534254	CFGExitNode	EXIT		9533728		True				
ANR	9534255	InfiniteForNode	true		9533728		True				
ANR	9534256	Symbol	encode_hash		9533728						
ANR	9534257	Symbol	pr		9533728						
ANR	9534258	Symbol	* ss		9533728						
ANR	9534259	Symbol	pw		9533728						
ANR	9534260	Symbol	ss -> EarlyChange		9533728						
ANR	9534261	Symbol	set_limit_code		9533728						
ANR	9534262	Symbol	pr -> limit		9533728						
ANR	9534263	Symbol	code_reset		9533728						
ANR	9534264	Symbol	encode_max		9533728						
ANR	9534265	Symbol	ep -> prefix		9533728						
ANR	9534266	Symbol	table_end		9533728						
ANR	9534267	Symbol	ss -> table		9533728						
ANR	9534268	Symbol	ss -> code_size		9533728						
ANR	9534269	Symbol	wlimit		9533728						
ANR	9534270	Symbol	pr -> ptr		9533728						
ANR	9534271	Symbol	ep -> datum		9533728						
ANR	9534272	Symbol	pw -> ptr		9533728						
ANR	9534273	Symbol	* tp		9533728						
ANR	9534274	Symbol	rlimit		9533728						
ANR	9534275	Symbol	last		9533728						
ANR	9534276	Symbol	ss -> prev_code		9533728						
ANR	9534277	Symbol	* table		9533728						
ANR	9534278	Symbol	* pr		9533728						
ANR	9534279	Symbol	ep		9533728						
ANR	9534280	Symbol	* pw		9533728						
ANR	9534281	Symbol	ss -> next_code		9533728						
ANR	9534282	Symbol	status		9533728						
ANR	9534283	Symbol	ss -> memory		9533728						
ANR	9534284	Symbol	ss -> bits		9533728						
ANR	9534285	Symbol	code		9533728						
ANR	9534286	Symbol	limit_code		9533728						
ANR	9534287	Symbol	ss -> first		9533728						
ANR	9534288	Symbol	pw -> limit		9533728						
ANR	9534289	Symbol	ss -> bits_left		9533728						
ANR	9534290	Symbol	table		9533728						
ANR	9534291	Symbol	ss		9533728						
ANR	9534292	Symbol	code_eod		9533728						
ANR	9534293	Symbol	st		9533728						
ANR	9534294	Symbol	c		9533728						
ANR	9534295	Symbol	* ++ q		9533728						
ANR	9534296	Symbol	hash_size		9533728						
ANR	9534297	Symbol	false		9533728						
ANR	9534298	Symbol	p		9533728						
ANR	9534299	Symbol	q		9533728						
ANR	9534300	Symbol	* ep		9533728						
ANR	9534301	Symbol	table -> encode		9533728						
ANR	9534302	Symbol	ss -> table . encode		9533728						
ANR	9534303	Symbol	* p		9533728						
ANR	9534304	Symbol	* q		9533728						
ANR	9534305	Symbol	lzw_put_code		9533728						
ANR	9534306	Symbol	tp		9533728						
ANR	9534307	Symbol	table -> hashed		9533728						
ANR	9534308	DeclStmt									
ANR	9534309	Decl							const stream_template	const stream_template	s_LZWE_template
