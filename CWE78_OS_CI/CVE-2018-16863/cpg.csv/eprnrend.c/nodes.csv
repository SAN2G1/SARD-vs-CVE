command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3092116	File	data/converged/CVE-2018-16863_ghostpdl/eprnrend.c								
ANR	3092117	Function	eprn_number_of_bitplanes	115:0:4501:4593							
ANR	3092118	FunctionDef	eprn_number_of_bitplanes (eprn_Device * dev)		3092117	0					
ANR	3092119	CompoundStatement		116:0:4557:4593	3092117	0					
ANR	3092120	ReturnStatement	return dev -> eprn . output_planes ;	117:2:4561:4591	3092117	0	True				
ANR	3092121	MemberAccess	dev -> eprn . output_planes		3092117	0					
ANR	3092122	PtrMemberAccess	dev -> eprn		3092117	0					
ANR	3092123	Identifier	dev		3092117	0					
ANR	3092124	Identifier	eprn		3092117	1					
ANR	3092125	Identifier	output_planes		3092117	1					
ANR	3092126	ReturnType	unsigned int		3092117	1					
ANR	3092127	Identifier	eprn_number_of_bitplanes		3092117	2					
ANR	3092128	ParameterList	eprn_Device * dev		3092117	3					
ANR	3092129	Parameter	eprn_Device * dev	115:38:4539:4554	3092117	0	True				
ANR	3092130	ParameterType	eprn_Device *		3092117	0					
ANR	3092131	Identifier	dev		3092117	1					
ANR	3092132	CFGEntryNode	ENTRY		3092117		True				
ANR	3092133	CFGExitNode	EXIT		3092117		True				
ANR	3092134	Symbol	* dev		3092117						
ANR	3092135	Symbol	dev		3092117						
ANR	3092136	Symbol	dev -> eprn		3092117						
ANR	3092137	Symbol	dev -> eprn . output_planes		3092117						
ANR	3092138	Function	eprn_number_of_octets	130:0:4985:5523							
ANR	3092139	FunctionDef	"eprn_number_of_octets (eprn_Device * dev , unsigned int lenghts [ ])"		3092138	0					
ANR	3092140	CompoundStatement		131:0:5054:5523	3092138	0					
ANR	3092141	IdentifierDeclStatement	"unsigned int j , length ;"	132:2:5058:5080	3092138	0	True				
ANR	3092142	IdentifierDecl	j		3092138	0					
ANR	3092143	IdentifierDeclType	unsigned int		3092138	0					
ANR	3092144	Identifier	j		3092138	1					
ANR	3092145	IdentifierDecl	length		3092138	1					
ANR	3092146	IdentifierDeclType	unsigned int		3092138	0					
ANR	3092147	Identifier	length		3092138	1					
ANR	3092148	ExpressionStatement	length = ( dev -> eprn . octets_per_line + dev -> color_info . depth - 1 ) / dev -> color_info . depth	134:2:5085:5178	3092138	1	True				
ANR	3092149	AssignmentExpression	length = ( dev -> eprn . octets_per_line + dev -> color_info . depth - 1 ) / dev -> color_info . depth		3092138	0		=			
ANR	3092150	Identifier	length		3092138	0					
ANR	3092151	MultiplicativeExpression	( dev -> eprn . octets_per_line + dev -> color_info . depth - 1 ) / dev -> color_info . depth		3092138	1		/			
ANR	3092152	AdditiveExpression	dev -> eprn . octets_per_line + dev -> color_info . depth - 1		3092138	0		+			
ANR	3092153	MemberAccess	dev -> eprn . octets_per_line		3092138	0					
ANR	3092154	PtrMemberAccess	dev -> eprn		3092138	0					
ANR	3092155	Identifier	dev		3092138	0					
ANR	3092156	Identifier	eprn		3092138	1					
ANR	3092157	Identifier	octets_per_line		3092138	1					
ANR	3092158	AdditiveExpression	dev -> color_info . depth - 1		3092138	1		-			
ANR	3092159	MemberAccess	dev -> color_info . depth		3092138	0					
ANR	3092160	PtrMemberAccess	dev -> color_info		3092138	0					
ANR	3092161	Identifier	dev		3092138	0					
ANR	3092162	Identifier	color_info		3092138	1					
ANR	3092163	Identifier	depth		3092138	1					
ANR	3092164	PrimaryExpression	1		3092138	1					
ANR	3092165	MemberAccess	dev -> color_info . depth		3092138	1					
ANR	3092166	PtrMemberAccess	dev -> color_info		3092138	0					
ANR	3092167	Identifier	dev		3092138	0					
ANR	3092168	Identifier	color_info		3092138	1					
ANR	3092169	Identifier	depth		3092138	1					
ANR	3092170	ForStatement	for ( j = 0 ; j < dev -> eprn . output_planes ; j ++ )		3092138	2					
ANR	3092171	ForInit	j = 0 ;	143:7:5450:5455	3092138	0	True				
ANR	3092172	AssignmentExpression	j = 0		3092138	0		=			
ANR	3092173	Identifier	j		3092138	0					
ANR	3092174	PrimaryExpression	0		3092138	1					
ANR	3092175	Condition	j < dev -> eprn . output_planes	143:14:5457:5483	3092138	1	True				
ANR	3092176	RelationalExpression	j < dev -> eprn . output_planes		3092138	0		<			
ANR	3092177	Identifier	j		3092138	0					
ANR	3092178	MemberAccess	dev -> eprn . output_planes		3092138	1					
ANR	3092179	PtrMemberAccess	dev -> eprn		3092138	0					
ANR	3092180	Identifier	dev		3092138	0					
ANR	3092181	Identifier	eprn		3092138	1					
ANR	3092182	Identifier	output_planes		3092138	1					
ANR	3092183	PostIncDecOperationExpression	j ++	143:43:5486:5488	3092138	2	True				
ANR	3092184	Identifier	j		3092138	0					
ANR	3092185	IncDec	++		3092138	1					
ANR	3092186	ExpressionStatement	lenghts [ j ] = length	143:48:5491:5510	3092138	3	True				
ANR	3092187	AssignmentExpression	lenghts [ j ] = length		3092138	0		=			
ANR	3092188	ArrayIndexing	lenghts [ j ]		3092138	0					
ANR	3092189	Identifier	lenghts		3092138	0					
ANR	3092190	Identifier	j		3092138	1					
ANR	3092191	Identifier	length		3092138	1					
ANR	3092192	ReturnStatement	return ;	145:2:5515:5521	3092138	3	True				
ANR	3092193	ReturnType	void		3092138	1					
ANR	3092194	Identifier	eprn_number_of_octets		3092138	2					
ANR	3092195	ParameterList	"eprn_Device * dev , unsigned int lenghts [ ]"		3092138	3					
ANR	3092196	Parameter	eprn_Device * dev	130:27:5012:5027	3092138	0	True				
ANR	3092197	ParameterType	eprn_Device *		3092138	0					
ANR	3092198	Identifier	dev		3092138	1					
ANR	3092199	Parameter	unsigned int lenghts [ ]	130:45:5030:5051	3092138	1	True				
ANR	3092200	ParameterType	unsigned int [ ]		3092138	0					
ANR	3092201	Identifier	lenghts		3092138	1					
ANR	3092202	CFGEntryNode	ENTRY		3092138		True				
ANR	3092203	CFGExitNode	EXIT		3092138		True				
ANR	3092204	Symbol	* dev		3092138						
ANR	3092205	Symbol	dev -> eprn . octets_per_line		3092138						
ANR	3092206	Symbol	dev		3092138						
ANR	3092207	Symbol	* j		3092138						
ANR	3092208	Symbol	* lenghts		3092138						
ANR	3092209	Symbol	length		3092138						
ANR	3092210	Symbol	j		3092138						
ANR	3092211	Symbol	dev -> color_info . depth		3092138						
ANR	3092212	Symbol	dev -> eprn		3092138						
ANR	3092213	Symbol	dev -> color_info		3092138						
ANR	3092214	Symbol	dev -> eprn . output_planes		3092138						
ANR	3092215	Symbol	lenghts		3092138						
ANR	3092216	Function	eprn_map_rgb_color_for_RGB	157:0:5835:6534							
ANR	3092217	FunctionDef	"eprn_map_rgb_color_for_RGB (gx_device * device , const gx_color_value cv [ ])"		3092216	0					
ANR	3092218	CompoundStatement		159:0:5925:6534	3092216	0					
ANR	3092219	IdentifierDeclStatement	"gx_color_value red = cv [ 0 ] , green = cv [ 1 ] , blue = cv [ 2 ] ;"	160:2:5929:5984	3092216	0	True				
ANR	3092220	IdentifierDecl	red = cv [ 0 ]		3092216	0					
ANR	3092221	IdentifierDeclType	gx_color_value		3092216	0					
ANR	3092222	Identifier	red		3092216	1					
ANR	3092223	AssignmentExpression	red = cv [ 0 ]		3092216	2		=			
ANR	3092224	Identifier	red		3092216	0					
ANR	3092225	ArrayIndexing	cv [ 0 ]		3092216	1					
ANR	3092226	Identifier	cv		3092216	0					
ANR	3092227	PrimaryExpression	0		3092216	1					
ANR	3092228	IdentifierDecl	green = cv [ 1 ]		3092216	1					
ANR	3092229	IdentifierDeclType	gx_color_value		3092216	0					
ANR	3092230	Identifier	green		3092216	1					
ANR	3092231	AssignmentExpression	green = cv [ 1 ]		3092216	2		=			
ANR	3092232	Identifier	green		3092216	0					
ANR	3092233	ArrayIndexing	cv [ 1 ]		3092216	1					
ANR	3092234	Identifier	cv		3092216	0					
ANR	3092235	PrimaryExpression	1		3092216	1					
ANR	3092236	IdentifierDecl	blue = cv [ 2 ]		3092216	2					
ANR	3092237	IdentifierDeclType	gx_color_value		3092216	0					
ANR	3092238	Identifier	blue		3092216	1					
ANR	3092239	AssignmentExpression	blue = cv [ 2 ]		3092216	2		=			
ANR	3092240	Identifier	blue		3092216	0					
ANR	3092241	ArrayIndexing	cv [ 2 ]		3092216	1					
ANR	3092242	Identifier	cv		3092216	0					
ANR	3092243	PrimaryExpression	2		3092216	1					
ANR	3092244	Statement	static	161:2:5988:5993	3092216	1	True				
ANR	3092245	IdentifierDeclStatement	const gx_color_value half = gx_max_color_value / 2 ;	161:9:5995:6043	3092216	2	True				
ANR	3092246	IdentifierDecl	half = gx_max_color_value / 2		3092216	0					
ANR	3092247	IdentifierDeclType	const gx_color_value		3092216	0					
ANR	3092248	Identifier	half		3092216	1					
ANR	3092249	AssignmentExpression	half = gx_max_color_value / 2		3092216	2		=			
ANR	3092250	Identifier	half		3092216	0					
ANR	3092251	MultiplicativeExpression	gx_max_color_value / 2		3092216	1		/			
ANR	3092252	Identifier	gx_max_color_value		3092216	0					
ANR	3092253	PrimaryExpression	2		3092216	1					
ANR	3092254	IdentifierDeclStatement	gx_color_index value = 0 ;	162:2:6047:6071	3092216	3	True				
ANR	3092255	IdentifierDecl	value = 0		3092216	0					
ANR	3092256	IdentifierDeclType	gx_color_index		3092216	0					
ANR	3092257	Identifier	value		3092216	1					
ANR	3092258	AssignmentExpression	value = 0		3092216	2		=			
ANR	3092259	Identifier	value		3092216	0					
ANR	3092260	PrimaryExpression	0		3092216	1					
ANR	3092261	ExpressionStatement	"if_debug3 ( EPRN_TRACE_CHAR , ""! eprn_map_rgb_color_for_RGB() called for RGB = (%hu, %hu, %hu),\\n"" , red , green , blue )"	165:2:6094:6216	3092216	4	True				
ANR	3092262	CallExpression	"if_debug3 ( EPRN_TRACE_CHAR , ""! eprn_map_rgb_color_for_RGB() called for RGB = (%hu, %hu, %hu),\\n"" , red , green , blue )"		3092216	0					
ANR	3092263	Callee	if_debug3		3092216	0					
ANR	3092264	Identifier	if_debug3		3092216	0					
ANR	3092265	ArgumentList	EPRN_TRACE_CHAR		3092216	1					
ANR	3092266	Argument	EPRN_TRACE_CHAR		3092216	0					
ANR	3092267	Identifier	EPRN_TRACE_CHAR		3092216	0					
ANR	3092268	Argument	"""! eprn_map_rgb_color_for_RGB() called for RGB = (%hu, %hu, %hu),\\n"""		3092216	1					
ANR	3092269	PrimaryExpression	"""! eprn_map_rgb_color_for_RGB() called for RGB = (%hu, %hu, %hu),\\n"""		3092216	0					
ANR	3092270	Argument	red		3092216	2					
ANR	3092271	Identifier	red		3092216	0					
ANR	3092272	Argument	green		3092216	3					
ANR	3092273	Identifier	green		3092216	0					
ANR	3092274	Argument	blue		3092216	4					
ANR	3092275	Identifier	blue		3092216	0					
ANR	3092276	ExpressionStatement	assert ( ( ( eprn_Device * ) device ) -> eprn . colour_model == eprn_DeviceRGB )	170:2:6228:6296	3092216	5	True				
ANR	3092277	CallExpression	assert ( ( ( eprn_Device * ) device ) -> eprn . colour_model == eprn_DeviceRGB )		3092216	0					
ANR	3092278	Callee	assert		3092216	0					
ANR	3092279	Identifier	assert		3092216	0					
ANR	3092280	ArgumentList	( ( eprn_Device * ) device ) -> eprn . colour_model == eprn_DeviceRGB		3092216	1					
ANR	3092281	Argument	( ( eprn_Device * ) device ) -> eprn . colour_model == eprn_DeviceRGB		3092216	0					
ANR	3092282	EqualityExpression	( ( eprn_Device * ) device ) -> eprn . colour_model == eprn_DeviceRGB		3092216	0		==			
ANR	3092283	MemberAccess	( ( eprn_Device * ) device ) -> eprn . colour_model		3092216	0					
ANR	3092284	PtrMemberAccess	( ( eprn_Device * ) device ) -> eprn		3092216	0					
ANR	3092285	CastExpression	( eprn_Device * ) device		3092216	0					
ANR	3092286	CastTarget	eprn_Device *		3092216	0					
ANR	3092287	Identifier	device		3092216	1					
ANR	3092288	Identifier	eprn		3092216	1					
ANR	3092289	Identifier	colour_model		3092216	1					
ANR	3092290	Identifier	eprn_DeviceRGB		3092216	1					
ANR	3092291	IfStatement	if ( red > half )		3092216	6					
ANR	3092292	Condition	red > half	172:6:6305:6316	3092216	0	True				
ANR	3092293	RelationalExpression	red > half		3092216	0		>			
ANR	3092294	Identifier	red		3092216	0					
ANR	3092295	Identifier	half		3092216	1					
ANR	3092296	ExpressionStatement	value |= RED_BIT	172:20:6319:6335	3092216	1	True				
ANR	3092297	AssignmentExpression	value |= RED_BIT		3092216	0		|=			
ANR	3092298	Identifier	value		3092216	0					
ANR	3092299	Identifier	RED_BIT		3092216	1					
ANR	3092300	IfStatement	if ( green > half )		3092216	7					
ANR	3092301	Condition	green > half	173:6:6343:6354	3092216	0	True				
ANR	3092302	RelationalExpression	green > half		3092216	0		>			
ANR	3092303	Identifier	green		3092216	0					
ANR	3092304	Identifier	half		3092216	1					
ANR	3092305	ExpressionStatement	value |= GREEN_BIT	173:20:6357:6375	3092216	1	True				
ANR	3092306	AssignmentExpression	value |= GREEN_BIT		3092216	0		|=			
ANR	3092307	Identifier	value		3092216	0					
ANR	3092308	Identifier	GREEN_BIT		3092216	1					
ANR	3092309	IfStatement	if ( blue > half )		3092216	8					
ANR	3092310	Condition	blue > half	174:6:6383:6394	3092216	0	True				
ANR	3092311	RelationalExpression	blue > half		3092216	0		>			
ANR	3092312	Identifier	blue		3092216	0					
ANR	3092313	Identifier	half		3092216	1					
ANR	3092314	ExpressionStatement	value |= BLUE_BIT	174:20:6397:6414	3092216	1	True				
ANR	3092315	AssignmentExpression	value |= BLUE_BIT		3092216	0		|=			
ANR	3092316	Identifier	value		3092216	0					
ANR	3092317	Identifier	BLUE_BIT		3092216	1					
ANR	3092318	ExpressionStatement	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"	177:2:6437:6509	3092216	9	True				
ANR	3092319	CallExpression	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"		3092216	0					
ANR	3092320	Callee	if_debug1		3092216	0					
ANR	3092321	Identifier	if_debug1		3092216	0					
ANR	3092322	ArgumentList	EPRN_TRACE_CHAR		3092216	1					
ANR	3092323	Argument	EPRN_TRACE_CHAR		3092216	0					
ANR	3092324	Identifier	EPRN_TRACE_CHAR		3092216	0					
ANR	3092325	Argument	"""  returning 0x%lX.\\n"""		3092216	1					
ANR	3092326	PrimaryExpression	"""  returning 0x%lX.\\n"""		3092216	0					
ANR	3092327	Argument	( unsigned long ) value		3092216	2					
ANR	3092328	CastExpression	( unsigned long ) value		3092216	0					
ANR	3092329	CastTarget	unsigned long		3092216	0					
ANR	3092330	Identifier	value		3092216	1					
ANR	3092331	ReturnStatement	return value ;	179:2:6520:6532	3092216	10	True				
ANR	3092332	Identifier	value		3092216	0					
ANR	3092333	ReturnType	gx_color_index		3092216	1					
ANR	3092334	Identifier	eprn_map_rgb_color_for_RGB		3092216	2					
ANR	3092335	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3092216	3					
ANR	3092336	Parameter	gx_device * device	157:42:5877:5893	3092216	0	True				
ANR	3092337	ParameterType	gx_device *		3092216	0					
ANR	3092338	Identifier	device		3092216	1					
ANR	3092339	Parameter	const gx_color_value cv [ ]	158:2:5898:5922	3092216	1	True				
ANR	3092340	ParameterType	const gx_color_value [ ]		3092216	0					
ANR	3092341	Identifier	cv		3092216	1					
ANR	3092342	CFGEntryNode	ENTRY		3092216		True				
ANR	3092343	CFGExitNode	EXIT		3092216		True				
ANR	3092344	Symbol	green		3092216						
ANR	3092345	Symbol	half		3092216						
ANR	3092346	Symbol	BLUE_BIT		3092216						
ANR	3092347	Symbol	( ( eprn_Device * ) device ) -> eprn . colour_model		3092216						
ANR	3092348	Symbol	* device		3092216						
ANR	3092349	Symbol	GREEN_BIT		3092216						
ANR	3092350	Symbol	red		3092216						
ANR	3092351	Symbol	cv		3092216						
ANR	3092352	Symbol	blue		3092216						
ANR	3092353	Symbol	gx_max_color_value		3092216						
ANR	3092354	Symbol	( ( eprn_Device * ) device ) -> eprn		3092216						
ANR	3092355	Symbol	eprn_DeviceRGB		3092216						
ANR	3092356	Symbol	RED_BIT		3092216						
ANR	3092357	Symbol	* cv		3092216						
ANR	3092358	Symbol	EPRN_TRACE_CHAR		3092216						
ANR	3092359	Symbol	device		3092216						
ANR	3092360	Symbol	value		3092216						
ANR	3092361	Function	eprn_map_rgb_color_for_CMY_or_K	193:0:7033:8224							
ANR	3092362	FunctionDef	"eprn_map_rgb_color_for_CMY_or_K (gx_device * device , const gx_color_value cv [ ])"		3092361	0					
ANR	3092363	CompoundStatement		195:0:7128:8224	3092361	0					
ANR	3092364	IdentifierDeclStatement	"gx_color_value red = cv [ 0 ] , green = cv [ 1 ] , blue = cv [ 2 ] ;"	196:2:7132:7187	3092361	0	True				
ANR	3092365	IdentifierDecl	red = cv [ 0 ]		3092361	0					
ANR	3092366	IdentifierDeclType	gx_color_value		3092361	0					
ANR	3092367	Identifier	red		3092361	1					
ANR	3092368	AssignmentExpression	red = cv [ 0 ]		3092361	2		=			
ANR	3092369	Identifier	red		3092361	0					
ANR	3092370	ArrayIndexing	cv [ 0 ]		3092361	1					
ANR	3092371	Identifier	cv		3092361	0					
ANR	3092372	PrimaryExpression	0		3092361	1					
ANR	3092373	IdentifierDecl	green = cv [ 1 ]		3092361	1					
ANR	3092374	IdentifierDeclType	gx_color_value		3092361	0					
ANR	3092375	Identifier	green		3092361	1					
ANR	3092376	AssignmentExpression	green = cv [ 1 ]		3092361	2		=			
ANR	3092377	Identifier	green		3092361	0					
ANR	3092378	ArrayIndexing	cv [ 1 ]		3092361	1					
ANR	3092379	Identifier	cv		3092361	0					
ANR	3092380	PrimaryExpression	1		3092361	1					
ANR	3092381	IdentifierDecl	blue = cv [ 2 ]		3092361	2					
ANR	3092382	IdentifierDeclType	gx_color_value		3092361	0					
ANR	3092383	Identifier	blue		3092361	1					
ANR	3092384	AssignmentExpression	blue = cv [ 2 ]		3092361	2		=			
ANR	3092385	Identifier	blue		3092361	0					
ANR	3092386	ArrayIndexing	cv [ 2 ]		3092361	1					
ANR	3092387	Identifier	cv		3092361	0					
ANR	3092388	PrimaryExpression	2		3092361	1					
ANR	3092389	Statement	static	197:2:7191:7196	3092361	1	True				
ANR	3092390	IdentifierDeclStatement	const gx_color_value half = gx_max_color_value / 2 ;	197:9:7198:7246	3092361	2	True				
ANR	3092391	IdentifierDecl	half = gx_max_color_value / 2		3092361	0					
ANR	3092392	IdentifierDeclType	const gx_color_value		3092361	0					
ANR	3092393	Identifier	half		3092361	1					
ANR	3092394	AssignmentExpression	half = gx_max_color_value / 2		3092361	2		=			
ANR	3092395	Identifier	half		3092361	0					
ANR	3092396	MultiplicativeExpression	gx_max_color_value / 2		3092361	1		/			
ANR	3092397	Identifier	gx_max_color_value		3092361	0					
ANR	3092398	PrimaryExpression	2		3092361	1					
ANR	3092399	IdentifierDeclStatement	gx_color_index value = ( CYAN_BIT | MAGENTA_BIT | YELLOW_BIT ) ;	198:2:7250:7310	3092361	3	True				
ANR	3092400	IdentifierDecl	value = ( CYAN_BIT | MAGENTA_BIT | YELLOW_BIT )		3092361	0					
ANR	3092401	IdentifierDeclType	gx_color_index		3092361	0					
ANR	3092402	Identifier	value		3092361	1					
ANR	3092403	AssignmentExpression	value = ( CYAN_BIT | MAGENTA_BIT | YELLOW_BIT )		3092361	2		=			
ANR	3092404	Identifier	value		3092361	0					
ANR	3092405	InclusiveOrExpression	CYAN_BIT | MAGENTA_BIT | YELLOW_BIT		3092361	1		|			
ANR	3092406	Identifier	CYAN_BIT		3092361	0					
ANR	3092407	InclusiveOrExpression	MAGENTA_BIT | YELLOW_BIT		3092361	1		|			
ANR	3092408	Identifier	MAGENTA_BIT		3092361	0					
ANR	3092409	Identifier	YELLOW_BIT		3092361	1					
ANR	3092410	IdentifierDeclStatement	const eprn_Device * dev = ( eprn_Device * ) device ;	199:2:7314:7360	3092361	4	True				
ANR	3092411	IdentifierDecl	* dev = ( eprn_Device * ) device		3092361	0					
ANR	3092412	IdentifierDeclType	const eprn_Device *		3092361	0					
ANR	3092413	Identifier	dev		3092361	1					
ANR	3092414	AssignmentExpression	* dev = ( eprn_Device * ) device		3092361	2		=			
ANR	3092415	Identifier	dev		3092361	0					
ANR	3092416	CastExpression	( eprn_Device * ) device		3092361	1					
ANR	3092417	CastTarget	eprn_Device *		3092361	0					
ANR	3092418	Identifier	device		3092361	1					
ANR	3092419	ExpressionStatement	"if_debug3 ( EPRN_TRACE_CHAR , ""! eprn_map_rgb_color_for_CMY_or_K() called for RGB = (%hu, %hu, %hu),\\n"" , red , green , blue )"	202:2:7383:7510	3092361	5	True				
ANR	3092420	CallExpression	"if_debug3 ( EPRN_TRACE_CHAR , ""! eprn_map_rgb_color_for_CMY_or_K() called for RGB = (%hu, %hu, %hu),\\n"" , red , green , blue )"		3092361	0					
ANR	3092421	Callee	if_debug3		3092361	0					
ANR	3092422	Identifier	if_debug3		3092361	0					
ANR	3092423	ArgumentList	EPRN_TRACE_CHAR		3092361	1					
ANR	3092424	Argument	EPRN_TRACE_CHAR		3092361	0					
ANR	3092425	Identifier	EPRN_TRACE_CHAR		3092361	0					
ANR	3092426	Argument	"""! eprn_map_rgb_color_for_CMY_or_K() called for RGB = (%hu, %hu, %hu),\\n"""		3092361	1					
ANR	3092427	PrimaryExpression	"""! eprn_map_rgb_color_for_CMY_or_K() called for RGB = (%hu, %hu, %hu),\\n"""		3092361	0					
ANR	3092428	Argument	red		3092361	2					
ANR	3092429	Identifier	red		3092361	0					
ANR	3092430	Argument	green		3092361	3					
ANR	3092431	Identifier	green		3092361	0					
ANR	3092432	Argument	blue		3092361	4					
ANR	3092433	Identifier	blue		3092361	0					
ANR	3092434	ExpressionStatement	assert ( ( dev -> eprn . colour_model == eprn_DeviceGray && red == green && green == blue && ( blue == 0 || blue == gx_max_color_value ) ) || dev -> eprn . colour_model == eprn_DeviceCMY || dev -> eprn . colour_model == eprn_DeviceCMY_plus_K )	207:2:7522:7774	3092361	6	True				
ANR	3092435	CallExpression	assert ( ( dev -> eprn . colour_model == eprn_DeviceGray && red == green && green == blue && ( blue == 0 || blue == gx_max_color_value ) ) || dev -> eprn . colour_model == eprn_DeviceCMY || dev -> eprn . colour_model == eprn_DeviceCMY_plus_K )		3092361	0					
ANR	3092436	Callee	assert		3092361	0					
ANR	3092437	Identifier	assert		3092361	0					
ANR	3092438	ArgumentList	( dev -> eprn . colour_model == eprn_DeviceGray && red == green && green == blue && ( blue == 0 || blue == gx_max_color_value ) ) || dev -> eprn . colour_model == eprn_DeviceCMY || dev -> eprn . colour_model == eprn_DeviceCMY_plus_K		3092361	1					
ANR	3092439	Argument	( dev -> eprn . colour_model == eprn_DeviceGray && red == green && green == blue && ( blue == 0 || blue == gx_max_color_value ) ) || dev -> eprn . colour_model == eprn_DeviceCMY || dev -> eprn . colour_model == eprn_DeviceCMY_plus_K		3092361	0					
ANR	3092440	OrExpression	( dev -> eprn . colour_model == eprn_DeviceGray && red == green && green == blue && ( blue == 0 || blue == gx_max_color_value ) ) || dev -> eprn . colour_model == eprn_DeviceCMY || dev -> eprn . colour_model == eprn_DeviceCMY_plus_K		3092361	0		||			
ANR	3092441	AndExpression	dev -> eprn . colour_model == eprn_DeviceGray && red == green && green == blue && ( blue == 0 || blue == gx_max_color_value )		3092361	0		&&			
ANR	3092442	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceGray		3092361	0		==			
ANR	3092443	MemberAccess	dev -> eprn . colour_model		3092361	0					
ANR	3092444	PtrMemberAccess	dev -> eprn		3092361	0					
ANR	3092445	Identifier	dev		3092361	0					
ANR	3092446	Identifier	eprn		3092361	1					
ANR	3092447	Identifier	colour_model		3092361	1					
ANR	3092448	Identifier	eprn_DeviceGray		3092361	1					
ANR	3092449	AndExpression	red == green && green == blue && ( blue == 0 || blue == gx_max_color_value )		3092361	1		&&			
ANR	3092450	EqualityExpression	red == green		3092361	0		==			
ANR	3092451	Identifier	red		3092361	0					
ANR	3092452	Identifier	green		3092361	1					
ANR	3092453	AndExpression	green == blue && ( blue == 0 || blue == gx_max_color_value )		3092361	1		&&			
ANR	3092454	EqualityExpression	green == blue		3092361	0		==			
ANR	3092455	Identifier	green		3092361	0					
ANR	3092456	Identifier	blue		3092361	1					
ANR	3092457	OrExpression	blue == 0 || blue == gx_max_color_value		3092361	1		||			
ANR	3092458	EqualityExpression	blue == 0		3092361	0		==			
ANR	3092459	Identifier	blue		3092361	0					
ANR	3092460	PrimaryExpression	0		3092361	1					
ANR	3092461	EqualityExpression	blue == gx_max_color_value		3092361	1		==			
ANR	3092462	Identifier	blue		3092361	0					
ANR	3092463	Identifier	gx_max_color_value		3092361	1					
ANR	3092464	OrExpression	dev -> eprn . colour_model == eprn_DeviceCMY || dev -> eprn . colour_model == eprn_DeviceCMY_plus_K		3092361	1		||			
ANR	3092465	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceCMY		3092361	0		==			
ANR	3092466	MemberAccess	dev -> eprn . colour_model		3092361	0					
ANR	3092467	PtrMemberAccess	dev -> eprn		3092361	0					
ANR	3092468	Identifier	dev		3092361	0					
ANR	3092469	Identifier	eprn		3092361	1					
ANR	3092470	Identifier	colour_model		3092361	1					
ANR	3092471	Identifier	eprn_DeviceCMY		3092361	1					
ANR	3092472	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceCMY_plus_K		3092361	1		==			
ANR	3092473	MemberAccess	dev -> eprn . colour_model		3092361	0					
ANR	3092474	PtrMemberAccess	dev -> eprn		3092361	0					
ANR	3092475	Identifier	dev		3092361	0					
ANR	3092476	Identifier	eprn		3092361	1					
ANR	3092477	Identifier	colour_model		3092361	1					
ANR	3092478	Identifier	eprn_DeviceCMY_plus_K		3092361	1					
ANR	3092479	IfStatement	if ( red > half )		3092361	7					
ANR	3092480	Condition	red > half	213:6:7802:7813	3092361	0	True				
ANR	3092481	RelationalExpression	red > half		3092361	0		>			
ANR	3092482	Identifier	red		3092361	0					
ANR	3092483	Identifier	half		3092361	1					
ANR	3092484	ExpressionStatement	value &= ~CYAN_BIT	213:20:7816:7834	3092361	1	True				
ANR	3092485	AssignmentExpression	value &= ~CYAN_BIT		3092361	0		&=			
ANR	3092486	Identifier	value		3092361	0					
ANR	3092487	Identifier	~CYAN_BIT		3092361	1					
ANR	3092488	IfStatement	if ( green > half )		3092361	8					
ANR	3092489	Condition	green > half	214:6:7842:7853	3092361	0	True				
ANR	3092490	RelationalExpression	green > half		3092361	0		>			
ANR	3092491	Identifier	green		3092361	0					
ANR	3092492	Identifier	half		3092361	1					
ANR	3092493	ExpressionStatement	value &= ~MAGENTA_BIT	214:20:7856:7877	3092361	1	True				
ANR	3092494	AssignmentExpression	value &= ~MAGENTA_BIT		3092361	0		&=			
ANR	3092495	Identifier	value		3092361	0					
ANR	3092496	Identifier	~MAGENTA_BIT		3092361	1					
ANR	3092497	IfStatement	if ( blue > half )		3092361	9					
ANR	3092498	Condition	blue > half	215:6:7885:7896	3092361	0	True				
ANR	3092499	RelationalExpression	blue > half		3092361	0		>			
ANR	3092500	Identifier	blue		3092361	0					
ANR	3092501	Identifier	half		3092361	1					
ANR	3092502	ExpressionStatement	value &= ~YELLOW_BIT	215:20:7899:7919	3092361	1	True				
ANR	3092503	AssignmentExpression	value &= ~YELLOW_BIT		3092361	0		&=			
ANR	3092504	Identifier	value		3092361	0					
ANR	3092505	Identifier	~YELLOW_BIT		3092361	1					
ANR	3092506	IfStatement	if ( dev -> eprn . colour_model != eprn_DeviceCMY && value == ( CYAN_BIT | MAGENTA_BIT | YELLOW_BIT ) )		3092361	10					
ANR	3092507	Condition	dev -> eprn . colour_model != eprn_DeviceCMY && value == ( CYAN_BIT | MAGENTA_BIT | YELLOW_BIT )	218:6:7985:8080	3092361	0	True				
ANR	3092508	AndExpression	dev -> eprn . colour_model != eprn_DeviceCMY && value == ( CYAN_BIT | MAGENTA_BIT | YELLOW_BIT )		3092361	0		&&			
ANR	3092509	EqualityExpression	dev -> eprn . colour_model != eprn_DeviceCMY		3092361	0		!=			
ANR	3092510	MemberAccess	dev -> eprn . colour_model		3092361	0					
ANR	3092511	PtrMemberAccess	dev -> eprn		3092361	0					
ANR	3092512	Identifier	dev		3092361	0					
ANR	3092513	Identifier	eprn		3092361	1					
ANR	3092514	Identifier	colour_model		3092361	1					
ANR	3092515	Identifier	eprn_DeviceCMY		3092361	1					
ANR	3092516	EqualityExpression	value == ( CYAN_BIT | MAGENTA_BIT | YELLOW_BIT )		3092361	1		==			
ANR	3092517	Identifier	value		3092361	0					
ANR	3092518	InclusiveOrExpression	CYAN_BIT | MAGENTA_BIT | YELLOW_BIT		3092361	1		|			
ANR	3092519	Identifier	CYAN_BIT		3092361	0					
ANR	3092520	InclusiveOrExpression	MAGENTA_BIT | YELLOW_BIT		3092361	1		|			
ANR	3092521	Identifier	MAGENTA_BIT		3092361	0					
ANR	3092522	Identifier	YELLOW_BIT		3092361	1					
ANR	3092523	ExpressionStatement	value = BLACK_BIT	220:4:8087:8104	3092361	1	True				
ANR	3092524	AssignmentExpression	value = BLACK_BIT		3092361	0		=			
ANR	3092525	Identifier	value		3092361	0					
ANR	3092526	Identifier	BLACK_BIT		3092361	1					
ANR	3092527	ExpressionStatement	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"	223:2:8127:8199	3092361	11	True				
ANR	3092528	CallExpression	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"		3092361	0					
ANR	3092529	Callee	if_debug1		3092361	0					
ANR	3092530	Identifier	if_debug1		3092361	0					
ANR	3092531	ArgumentList	EPRN_TRACE_CHAR		3092361	1					
ANR	3092532	Argument	EPRN_TRACE_CHAR		3092361	0					
ANR	3092533	Identifier	EPRN_TRACE_CHAR		3092361	0					
ANR	3092534	Argument	"""  returning 0x%lX.\\n"""		3092361	1					
ANR	3092535	PrimaryExpression	"""  returning 0x%lX.\\n"""		3092361	0					
ANR	3092536	Argument	( unsigned long ) value		3092361	2					
ANR	3092537	CastExpression	( unsigned long ) value		3092361	0					
ANR	3092538	CastTarget	unsigned long		3092361	0					
ANR	3092539	Identifier	value		3092361	1					
ANR	3092540	ReturnStatement	return value ;	225:2:8210:8222	3092361	12	True				
ANR	3092541	Identifier	value		3092361	0					
ANR	3092542	ReturnType	gx_color_index		3092361	1					
ANR	3092543	Identifier	eprn_map_rgb_color_for_CMY_or_K		3092361	2					
ANR	3092544	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3092361	3					
ANR	3092545	Parameter	gx_device * device	193:47:7080:7096	3092361	0	True				
ANR	3092546	ParameterType	gx_device *		3092361	0					
ANR	3092547	Identifier	device		3092361	1					
ANR	3092548	Parameter	const gx_color_value cv [ ]	194:2:7101:7125	3092361	1	True				
ANR	3092549	ParameterType	const gx_color_value [ ]		3092361	0					
ANR	3092550	Identifier	cv		3092361	1					
ANR	3092551	CFGEntryNode	ENTRY		3092361		True				
ANR	3092552	CFGExitNode	EXIT		3092361		True				
ANR	3092553	Symbol	* dev		3092361						
ANR	3092554	Symbol	~YELLOW_BIT		3092361						
ANR	3092555	Symbol	green		3092361						
ANR	3092556	Symbol	half		3092361						
ANR	3092557	Symbol	~CYAN_BIT		3092361						
ANR	3092558	Symbol	eprn_DeviceCMY		3092361						
ANR	3092559	Symbol	eprn_DeviceCMY_plus_K		3092361						
ANR	3092560	Symbol	CYAN_BIT		3092361						
ANR	3092561	Symbol	dev -> eprn . colour_model		3092361						
ANR	3092562	Symbol	MAGENTA_BIT		3092361						
ANR	3092563	Symbol	red		3092361						
ANR	3092564	Symbol	YELLOW_BIT		3092361						
ANR	3092565	Symbol	eprn_DeviceGray		3092361						
ANR	3092566	Symbol	~MAGENTA_BIT		3092361						
ANR	3092567	Symbol	cv		3092361						
ANR	3092568	Symbol	blue		3092361						
ANR	3092569	Symbol	dev		3092361						
ANR	3092570	Symbol	gx_max_color_value		3092361						
ANR	3092571	Symbol	BLACK_BIT		3092361						
ANR	3092572	Symbol	* cv		3092361						
ANR	3092573	Symbol	EPRN_TRACE_CHAR		3092361						
ANR	3092574	Symbol	dev -> eprn		3092361						
ANR	3092575	Symbol	device		3092361						
ANR	3092576	Symbol	value		3092361						
ANR	3092577	Function	eprn_map_rgb_color_for_RGB_flex	237:0:8556:9728							
ANR	3092578	FunctionDef	"eprn_map_rgb_color_for_RGB_flex (gx_device * device , const gx_color_value cv [ ])"		3092577	0					
ANR	3092579	CompoundStatement		239:0:8651:9728	3092577	0					
ANR	3092580	IdentifierDeclStatement	"gx_color_value red = cv [ 0 ] , green = cv [ 1 ] , blue = cv [ 2 ] ;"	240:2:8655:8710	3092577	0	True				
ANR	3092581	IdentifierDecl	red = cv [ 0 ]		3092577	0					
ANR	3092582	IdentifierDeclType	gx_color_value		3092577	0					
ANR	3092583	Identifier	red		3092577	1					
ANR	3092584	AssignmentExpression	red = cv [ 0 ]		3092577	2		=			
ANR	3092585	Identifier	red		3092577	0					
ANR	3092586	ArrayIndexing	cv [ 0 ]		3092577	1					
ANR	3092587	Identifier	cv		3092577	0					
ANR	3092588	PrimaryExpression	0		3092577	1					
ANR	3092589	IdentifierDecl	green = cv [ 1 ]		3092577	1					
ANR	3092590	IdentifierDeclType	gx_color_value		3092577	0					
ANR	3092591	Identifier	green		3092577	1					
ANR	3092592	AssignmentExpression	green = cv [ 1 ]		3092577	2		=			
ANR	3092593	Identifier	green		3092577	0					
ANR	3092594	ArrayIndexing	cv [ 1 ]		3092577	1					
ANR	3092595	Identifier	cv		3092577	0					
ANR	3092596	PrimaryExpression	1		3092577	1					
ANR	3092597	IdentifierDecl	blue = cv [ 2 ]		3092577	2					
ANR	3092598	IdentifierDeclType	gx_color_value		3092577	0					
ANR	3092599	Identifier	blue		3092577	1					
ANR	3092600	AssignmentExpression	blue = cv [ 2 ]		3092577	2		=			
ANR	3092601	Identifier	blue		3092577	0					
ANR	3092602	ArrayIndexing	cv [ 2 ]		3092577	1					
ANR	3092603	Identifier	cv		3092577	0					
ANR	3092604	PrimaryExpression	2		3092577	1					
ANR	3092605	IdentifierDeclStatement	gx_color_index value = 0 ;	241:2:8714:8738	3092577	1	True				
ANR	3092606	IdentifierDecl	value = 0		3092577	0					
ANR	3092607	IdentifierDeclType	gx_color_index		3092577	0					
ANR	3092608	Identifier	value		3092577	1					
ANR	3092609	AssignmentExpression	value = 0		3092577	2		=			
ANR	3092610	Identifier	value		3092577	0					
ANR	3092611	PrimaryExpression	0		3092577	1					
ANR	3092612	IdentifierDeclStatement	gx_color_value step ;	242:2:8742:8761	3092577	2	True				
ANR	3092613	IdentifierDecl	step		3092577	0					
ANR	3092614	IdentifierDeclType	gx_color_value		3092577	0					
ANR	3092615	Identifier	step		3092577	1					
ANR	3092616	IdentifierDeclStatement	unsigned int level ;	243:2:8765:8783	3092577	3	True				
ANR	3092617	IdentifierDecl	level		3092577	0					
ANR	3092618	IdentifierDeclType	unsigned int		3092577	0					
ANR	3092619	Identifier	level		3092577	1					
ANR	3092620	IdentifierDeclStatement	const eprn_Eprn * eprn = & ( ( eprn_Device * ) device ) -> eprn ;	244:2:8787:8841	3092577	4	True				
ANR	3092621	IdentifierDecl	* eprn = & ( ( eprn_Device * ) device ) -> eprn		3092577	0					
ANR	3092622	IdentifierDeclType	const eprn_Eprn *		3092577	0					
ANR	3092623	Identifier	eprn		3092577	1					
ANR	3092624	AssignmentExpression	* eprn = & ( ( eprn_Device * ) device ) -> eprn		3092577	2		=			
ANR	3092625	Identifier	eprn		3092577	0					
ANR	3092626	UnaryOperationExpression	& ( ( eprn_Device * ) device ) -> eprn		3092577	1					
ANR	3092627	UnaryOperator	&		3092577	0					
ANR	3092628	PtrMemberAccess	( ( eprn_Device * ) device ) -> eprn		3092577	1					
ANR	3092629	CastExpression	( eprn_Device * ) device		3092577	0					
ANR	3092630	CastTarget	eprn_Device *		3092577	0					
ANR	3092631	Identifier	device		3092577	1					
ANR	3092632	Identifier	eprn		3092577	1					
ANR	3092633	ExpressionStatement	"if_debug3 ( EPRN_TRACE_CHAR , ""! eprn_map_rgb_color_for_RGB_flex() called for RGB = (%hu, %hu, %hu),\\n"" , red , green , blue )"	247:2:8864:8991	3092577	5	True				
ANR	3092634	CallExpression	"if_debug3 ( EPRN_TRACE_CHAR , ""! eprn_map_rgb_color_for_RGB_flex() called for RGB = (%hu, %hu, %hu),\\n"" , red , green , blue )"		3092577	0					
ANR	3092635	Callee	if_debug3		3092577	0					
ANR	3092636	Identifier	if_debug3		3092577	0					
ANR	3092637	ArgumentList	EPRN_TRACE_CHAR		3092577	1					
ANR	3092638	Argument	EPRN_TRACE_CHAR		3092577	0					
ANR	3092639	Identifier	EPRN_TRACE_CHAR		3092577	0					
ANR	3092640	Argument	"""! eprn_map_rgb_color_for_RGB_flex() called for RGB = (%hu, %hu, %hu),\\n"""		3092577	1					
ANR	3092641	PrimaryExpression	"""! eprn_map_rgb_color_for_RGB_flex() called for RGB = (%hu, %hu, %hu),\\n"""		3092577	0					
ANR	3092642	Argument	red		3092577	2					
ANR	3092643	Identifier	red		3092577	0					
ANR	3092644	Argument	green		3092577	3					
ANR	3092645	Identifier	green		3092577	0					
ANR	3092646	Argument	blue		3092577	4					
ANR	3092647	Identifier	blue		3092577	0					
ANR	3092648	ExpressionStatement	step = gx_max_color_value / eprn -> non_black_levels	254:2:9068:9116	3092577	6	True				
ANR	3092649	AssignmentExpression	step = gx_max_color_value / eprn -> non_black_levels		3092577	0		=			
ANR	3092650	Identifier	step		3092577	0					
ANR	3092651	MultiplicativeExpression	gx_max_color_value / eprn -> non_black_levels		3092577	1		/			
ANR	3092652	Identifier	gx_max_color_value		3092577	0					
ANR	3092653	PtrMemberAccess	eprn -> non_black_levels		3092577	1					
ANR	3092654	Identifier	eprn		3092577	0					
ANR	3092655	Identifier	non_black_levels		3092577	1					
ANR	3092656	ExpressionStatement	level = blue / step	257:2:9172:9189	3092577	7	True				
ANR	3092657	AssignmentExpression	level = blue / step		3092577	0		=			
ANR	3092658	Identifier	level		3092577	0					
ANR	3092659	MultiplicativeExpression	blue / step		3092577	1		/			
ANR	3092660	Identifier	blue		3092577	0					
ANR	3092661	Identifier	step		3092577	1					
ANR	3092662	IfStatement	if ( level >= eprn -> non_black_levels )		3092577	8					
ANR	3092663	Condition	level >= eprn -> non_black_levels	258:6:9197:9227	3092577	0	True				
ANR	3092664	RelationalExpression	level >= eprn -> non_black_levels		3092577	0		>=			
ANR	3092665	Identifier	level		3092577	0					
ANR	3092666	PtrMemberAccess	eprn -> non_black_levels		3092577	1					
ANR	3092667	Identifier	eprn		3092577	0					
ANR	3092668	Identifier	non_black_levels		3092577	1					
ANR	3092669	ExpressionStatement	level = eprn -> non_black_levels - 1	258:39:9230:9264	3092577	1	True				
ANR	3092670	AssignmentExpression	level = eprn -> non_black_levels - 1		3092577	0		=			
ANR	3092671	Identifier	level		3092577	0					
ANR	3092672	AdditiveExpression	eprn -> non_black_levels - 1		3092577	1		-			
ANR	3092673	PtrMemberAccess	eprn -> non_black_levels		3092577	0					
ANR	3092674	Identifier	eprn		3092577	0					
ANR	3092675	Identifier	non_black_levels		3092577	1					
ANR	3092676	PrimaryExpression	1		3092577	1					
ANR	3092677	ExpressionStatement	value = level << eprn -> bits_per_colorant	259:2:9268:9308	3092577	9	True				
ANR	3092678	AssignmentExpression	value = level << eprn -> bits_per_colorant		3092577	0		=			
ANR	3092679	Identifier	value		3092577	0					
ANR	3092680	ShiftExpression	level << eprn -> bits_per_colorant		3092577	1		<<			
ANR	3092681	Identifier	level		3092577	0					
ANR	3092682	PtrMemberAccess	eprn -> bits_per_colorant		3092577	1					
ANR	3092683	Identifier	eprn		3092577	0					
ANR	3092684	Identifier	bits_per_colorant		3092577	1					
ANR	3092685	ExpressionStatement	level = green / step	260:2:9312:9330	3092577	10	True				
ANR	3092686	AssignmentExpression	level = green / step		3092577	0		=			
ANR	3092687	Identifier	level		3092577	0					
ANR	3092688	MultiplicativeExpression	green / step		3092577	1		/			
ANR	3092689	Identifier	green		3092577	0					
ANR	3092690	Identifier	step		3092577	1					
ANR	3092691	IfStatement	if ( level >= eprn -> non_black_levels )		3092577	11					
ANR	3092692	Condition	level >= eprn -> non_black_levels	261:6:9338:9368	3092577	0	True				
ANR	3092693	RelationalExpression	level >= eprn -> non_black_levels		3092577	0		>=			
ANR	3092694	Identifier	level		3092577	0					
ANR	3092695	PtrMemberAccess	eprn -> non_black_levels		3092577	1					
ANR	3092696	Identifier	eprn		3092577	0					
ANR	3092697	Identifier	non_black_levels		3092577	1					
ANR	3092698	ExpressionStatement	level = eprn -> non_black_levels - 1	261:39:9371:9405	3092577	1	True				
ANR	3092699	AssignmentExpression	level = eprn -> non_black_levels - 1		3092577	0		=			
ANR	3092700	Identifier	level		3092577	0					
ANR	3092701	AdditiveExpression	eprn -> non_black_levels - 1		3092577	1		-			
ANR	3092702	PtrMemberAccess	eprn -> non_black_levels		3092577	0					
ANR	3092703	Identifier	eprn		3092577	0					
ANR	3092704	Identifier	non_black_levels		3092577	1					
ANR	3092705	PrimaryExpression	1		3092577	1					
ANR	3092706	ExpressionStatement	value = ( value | level ) << eprn -> bits_per_colorant	262:2:9409:9459	3092577	12	True				
ANR	3092707	AssignmentExpression	value = ( value | level ) << eprn -> bits_per_colorant		3092577	0		=			
ANR	3092708	Identifier	value		3092577	0					
ANR	3092709	ShiftExpression	( value | level ) << eprn -> bits_per_colorant		3092577	1		<<			
ANR	3092710	InclusiveOrExpression	value | level		3092577	0		|			
ANR	3092711	Identifier	value		3092577	0					
ANR	3092712	Identifier	level		3092577	1					
ANR	3092713	PtrMemberAccess	eprn -> bits_per_colorant		3092577	1					
ANR	3092714	Identifier	eprn		3092577	0					
ANR	3092715	Identifier	bits_per_colorant		3092577	1					
ANR	3092716	ExpressionStatement	level = red / step	263:2:9463:9479	3092577	13	True				
ANR	3092717	AssignmentExpression	level = red / step		3092577	0		=			
ANR	3092718	Identifier	level		3092577	0					
ANR	3092719	MultiplicativeExpression	red / step		3092577	1		/			
ANR	3092720	Identifier	red		3092577	0					
ANR	3092721	Identifier	step		3092577	1					
ANR	3092722	IfStatement	if ( level >= eprn -> non_black_levels )		3092577	14					
ANR	3092723	Condition	level >= eprn -> non_black_levels	264:6:9487:9517	3092577	0	True				
ANR	3092724	RelationalExpression	level >= eprn -> non_black_levels		3092577	0		>=			
ANR	3092725	Identifier	level		3092577	0					
ANR	3092726	PtrMemberAccess	eprn -> non_black_levels		3092577	1					
ANR	3092727	Identifier	eprn		3092577	0					
ANR	3092728	Identifier	non_black_levels		3092577	1					
ANR	3092729	ExpressionStatement	level = eprn -> non_black_levels - 1	264:39:9520:9554	3092577	1	True				
ANR	3092730	AssignmentExpression	level = eprn -> non_black_levels - 1		3092577	0		=			
ANR	3092731	Identifier	level		3092577	0					
ANR	3092732	AdditiveExpression	eprn -> non_black_levels - 1		3092577	1		-			
ANR	3092733	PtrMemberAccess	eprn -> non_black_levels		3092577	0					
ANR	3092734	Identifier	eprn		3092577	0					
ANR	3092735	Identifier	non_black_levels		3092577	1					
ANR	3092736	PrimaryExpression	1		3092577	1					
ANR	3092737	ExpressionStatement	value = ( value | level ) << eprn -> bits_per_colorant	265:2:9558:9608	3092577	15	True				
ANR	3092738	AssignmentExpression	value = ( value | level ) << eprn -> bits_per_colorant		3092577	0		=			
ANR	3092739	Identifier	value		3092577	0					
ANR	3092740	ShiftExpression	( value | level ) << eprn -> bits_per_colorant		3092577	1		<<			
ANR	3092741	InclusiveOrExpression	value | level		3092577	0		|			
ANR	3092742	Identifier	value		3092577	0					
ANR	3092743	Identifier	level		3092577	1					
ANR	3092744	PtrMemberAccess	eprn -> bits_per_colorant		3092577	1					
ANR	3092745	Identifier	eprn		3092577	0					
ANR	3092746	Identifier	bits_per_colorant		3092577	1					
ANR	3092747	ExpressionStatement	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"	268:2:9631:9703	3092577	16	True				
ANR	3092748	CallExpression	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"		3092577	0					
ANR	3092749	Callee	if_debug1		3092577	0					
ANR	3092750	Identifier	if_debug1		3092577	0					
ANR	3092751	ArgumentList	EPRN_TRACE_CHAR		3092577	1					
ANR	3092752	Argument	EPRN_TRACE_CHAR		3092577	0					
ANR	3092753	Identifier	EPRN_TRACE_CHAR		3092577	0					
ANR	3092754	Argument	"""  returning 0x%lX.\\n"""		3092577	1					
ANR	3092755	PrimaryExpression	"""  returning 0x%lX.\\n"""		3092577	0					
ANR	3092756	Argument	( unsigned long ) value		3092577	2					
ANR	3092757	CastExpression	( unsigned long ) value		3092577	0					
ANR	3092758	CastTarget	unsigned long		3092577	0					
ANR	3092759	Identifier	value		3092577	1					
ANR	3092760	ReturnStatement	return value ;	270:2:9714:9726	3092577	17	True				
ANR	3092761	Identifier	value		3092577	0					
ANR	3092762	ReturnType	gx_color_index		3092577	1					
ANR	3092763	Identifier	eprn_map_rgb_color_for_RGB_flex		3092577	2					
ANR	3092764	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3092577	3					
ANR	3092765	Parameter	gx_device * device	237:47:8603:8619	3092577	0	True				
ANR	3092766	ParameterType	gx_device *		3092577	0					
ANR	3092767	Identifier	device		3092577	1					
ANR	3092768	Parameter	const gx_color_value cv [ ]	238:2:8624:8648	3092577	1	True				
ANR	3092769	ParameterType	const gx_color_value [ ]		3092577	0					
ANR	3092770	Identifier	cv		3092577	1					
ANR	3092771	CFGEntryNode	ENTRY		3092577		True				
ANR	3092772	CFGExitNode	EXIT		3092577		True				
ANR	3092773	Symbol	green		3092577						
ANR	3092774	Symbol	* eprn		3092577						
ANR	3092775	Symbol	level		3092577						
ANR	3092776	Symbol	eprn		3092577						
ANR	3092777	Symbol	eprn -> non_black_levels		3092577						
ANR	3092778	Symbol	& ( ( eprn_Device * ) device ) -> eprn		3092577						
ANR	3092779	Symbol	red		3092577						
ANR	3092780	Symbol	cv		3092577						
ANR	3092781	Symbol	blue		3092577						
ANR	3092782	Symbol	gx_max_color_value		3092577						
ANR	3092783	Symbol	* cv		3092577						
ANR	3092784	Symbol	step		3092577						
ANR	3092785	Symbol	EPRN_TRACE_CHAR		3092577						
ANR	3092786	Symbol	device		3092577						
ANR	3092787	Symbol	value		3092577						
ANR	3092788	Symbol	eprn -> bits_per_colorant		3092577						
ANR	3092789	Function	eprn_map_rgb_color_for_CMY_or_K_flex	282:0:10073:11086							
ANR	3092790	FunctionDef	"eprn_map_rgb_color_for_CMY_or_K_flex (gx_device * device , const gx_color_value cv [ ])"		3092789	0					
ANR	3092791	CompoundStatement		284:0:10173:11086	3092789	0					
ANR	3092792	IdentifierDeclStatement	"gx_color_value red = cv [ 0 ] , green = cv [ 1 ] , blue = cv [ 2 ] ;"	285:2:10177:10232	3092789	0	True				
ANR	3092793	IdentifierDecl	red = cv [ 0 ]		3092789	0					
ANR	3092794	IdentifierDeclType	gx_color_value		3092789	0					
ANR	3092795	Identifier	red		3092789	1					
ANR	3092796	AssignmentExpression	red = cv [ 0 ]		3092789	2		=			
ANR	3092797	Identifier	red		3092789	0					
ANR	3092798	ArrayIndexing	cv [ 0 ]		3092789	1					
ANR	3092799	Identifier	cv		3092789	0					
ANR	3092800	PrimaryExpression	0		3092789	1					
ANR	3092801	IdentifierDecl	green = cv [ 1 ]		3092789	1					
ANR	3092802	IdentifierDeclType	gx_color_value		3092789	0					
ANR	3092803	Identifier	green		3092789	1					
ANR	3092804	AssignmentExpression	green = cv [ 1 ]		3092789	2		=			
ANR	3092805	Identifier	green		3092789	0					
ANR	3092806	ArrayIndexing	cv [ 1 ]		3092789	1					
ANR	3092807	Identifier	cv		3092789	0					
ANR	3092808	PrimaryExpression	1		3092789	1					
ANR	3092809	IdentifierDecl	blue = cv [ 2 ]		3092789	2					
ANR	3092810	IdentifierDeclType	gx_color_value		3092789	0					
ANR	3092811	Identifier	blue		3092789	1					
ANR	3092812	AssignmentExpression	blue = cv [ 2 ]		3092789	2		=			
ANR	3092813	Identifier	blue		3092789	0					
ANR	3092814	ArrayIndexing	cv [ 2 ]		3092789	1					
ANR	3092815	Identifier	cv		3092789	0					
ANR	3092816	PrimaryExpression	2		3092789	1					
ANR	3092817	IdentifierDeclStatement	const eprn_Device * dev = ( eprn_Device * ) device ;	286:2:10236:10282	3092789	1	True				
ANR	3092818	IdentifierDecl	* dev = ( eprn_Device * ) device		3092789	0					
ANR	3092819	IdentifierDeclType	const eprn_Device *		3092789	0					
ANR	3092820	Identifier	dev		3092789	1					
ANR	3092821	AssignmentExpression	* dev = ( eprn_Device * ) device		3092789	2		=			
ANR	3092822	Identifier	dev		3092789	0					
ANR	3092823	CastExpression	( eprn_Device * ) device		3092789	1					
ANR	3092824	CastTarget	eprn_Device *		3092789	0					
ANR	3092825	Identifier	device		3092789	1					
ANR	3092826	Statement	if_debug3	289:2:10305:10313	3092789	2	True				
ANR	3092827	Statement	(	289:11:10314:10314	3092789	3	True				
ANR	3092828	Statement	EPRN_TRACE_CHAR	289:12:10315:10329	3092789	4	True				
ANR	3092829	Statement	","	289:27:10330:10330	3092789	5	True				
ANR	3092830	Statement	"""! eprn_map_rgb_color_for_CMY_or_K_flex() called for """	290:4:10336:10389	3092789	6	True				
ANR	3092831	Statement	"""RGB = (%hu, %hu, %hu).\\n"""	291:6:10397:10422	3092789	7	True				
ANR	3092832	Statement	","	291:32:10423:10423	3092789	8	True				
ANR	3092833	Statement	red	292:4:10429:10431	3092789	9	True				
ANR	3092834	Statement	","	292:7:10432:10432	3092789	10	True				
ANR	3092835	Statement	green	292:9:10434:10438	3092789	11	True				
ANR	3092836	Statement	","	292:14:10439:10439	3092789	12	True				
ANR	3092837	Statement	blue	292:16:10441:10444	3092789	13	True				
ANR	3092838	Statement	)	292:20:10445:10445	3092789	14	True				
ANR	3092839	ExpressionStatement		292:21:10446:10446	3092789	15	True				
ANR	3092840	IdentifierDeclStatement	gx_color_value tmpcv [ 4 ] ;	298:2:10648:10671	3092789	16	True				
ANR	3092841	IdentifierDecl	tmpcv [ 4 ]		3092789	0					
ANR	3092842	IdentifierDeclType	gx_color_value [ 4 ]		3092789	0					
ANR	3092843	Identifier	tmpcv		3092789	1					
ANR	3092844	PrimaryExpression	4		3092789	2					
ANR	3092845	IfStatement	if ( dev -> eprn . colour_model != eprn_DeviceCMY && red == green && green == blue )		3092789	17					
ANR	3092846	Condition	dev -> eprn . colour_model != eprn_DeviceCMY && red == green && green == blue	299:6:10679:10751	3092789	0	True				
ANR	3092847	AndExpression	dev -> eprn . colour_model != eprn_DeviceCMY && red == green && green == blue		3092789	0		&&			
ANR	3092848	EqualityExpression	dev -> eprn . colour_model != eprn_DeviceCMY		3092789	0		!=			
ANR	3092849	MemberAccess	dev -> eprn . colour_model		3092789	0					
ANR	3092850	PtrMemberAccess	dev -> eprn		3092789	0					
ANR	3092851	Identifier	dev		3092789	0					
ANR	3092852	Identifier	eprn		3092789	1					
ANR	3092853	Identifier	colour_model		3092789	1					
ANR	3092854	Identifier	eprn_DeviceCMY		3092789	1					
ANR	3092855	AndExpression	red == green && green == blue		3092789	1		&&			
ANR	3092856	EqualityExpression	red == green		3092789	0		==			
ANR	3092857	Identifier	red		3092789	0					
ANR	3092858	Identifier	green		3092789	1					
ANR	3092859	EqualityExpression	green == blue		3092789	1		==			
ANR	3092860	Identifier	green		3092789	0					
ANR	3092861	Identifier	blue		3092789	1					
ANR	3092862	CompoundStatement		16:81:580:580	3092789	1					
ANR	3092863	ExpressionStatement	tmpcv [ 0 ] = 0	300:4:10760:10772	3092789	0	True				
ANR	3092864	AssignmentExpression	tmpcv [ 0 ] = 0		3092789	0		=			
ANR	3092865	ArrayIndexing	tmpcv [ 0 ]		3092789	0					
ANR	3092866	Identifier	tmpcv		3092789	0					
ANR	3092867	PrimaryExpression	0		3092789	1					
ANR	3092868	PrimaryExpression	0		3092789	1					
ANR	3092869	ExpressionStatement	tmpcv [ 1 ] = 0	300:18:10774:10786	3092789	1	True				
ANR	3092870	AssignmentExpression	tmpcv [ 1 ] = 0		3092789	0		=			
ANR	3092871	ArrayIndexing	tmpcv [ 1 ]		3092789	0					
ANR	3092872	Identifier	tmpcv		3092789	0					
ANR	3092873	PrimaryExpression	1		3092789	1					
ANR	3092874	PrimaryExpression	0		3092789	1					
ANR	3092875	ExpressionStatement	tmpcv [ 2 ] = 0	300:32:10788:10800	3092789	2	True				
ANR	3092876	AssignmentExpression	tmpcv [ 2 ] = 0		3092789	0		=			
ANR	3092877	ArrayIndexing	tmpcv [ 2 ]		3092789	0					
ANR	3092878	Identifier	tmpcv		3092789	0					
ANR	3092879	PrimaryExpression	2		3092789	1					
ANR	3092880	PrimaryExpression	0		3092789	1					
ANR	3092881	ExpressionStatement	tmpcv [ 3 ] = gx_max_color_value - red	301:4:10806:10841	3092789	3	True				
ANR	3092882	AssignmentExpression	tmpcv [ 3 ] = gx_max_color_value - red		3092789	0		=			
ANR	3092883	ArrayIndexing	tmpcv [ 3 ]		3092789	0					
ANR	3092884	Identifier	tmpcv		3092789	0					
ANR	3092885	PrimaryExpression	3		3092789	1					
ANR	3092886	AdditiveExpression	gx_max_color_value - red		3092789	1		-			
ANR	3092887	Identifier	gx_max_color_value		3092789	0					
ANR	3092888	Identifier	red		3092789	1					
ANR	3092889	ReturnStatement	"return eprn_map_cmyk_color_flex ( device , tmpcv ) ;"	302:4:10847:10893	3092789	4	True				
ANR	3092890	CallExpression	"eprn_map_cmyk_color_flex ( device , tmpcv )"		3092789	0					
ANR	3092891	Callee	eprn_map_cmyk_color_flex		3092789	0					
ANR	3092892	Identifier	eprn_map_cmyk_color_flex		3092789	0					
ANR	3092893	ArgumentList	device		3092789	1					
ANR	3092894	Argument	device		3092789	0					
ANR	3092895	Identifier	device		3092789	0					
ANR	3092896	Argument	tmpcv		3092789	1					
ANR	3092897	Identifier	tmpcv		3092789	0					
ANR	3092898	ExpressionStatement	tmpcv [ 0 ] = gx_max_color_value - red	305:2:10902:10937	3092789	18	True				
ANR	3092899	AssignmentExpression	tmpcv [ 0 ] = gx_max_color_value - red		3092789	0		=			
ANR	3092900	ArrayIndexing	tmpcv [ 0 ]		3092789	0					
ANR	3092901	Identifier	tmpcv		3092789	0					
ANR	3092902	PrimaryExpression	0		3092789	1					
ANR	3092903	AdditiveExpression	gx_max_color_value - red		3092789	1		-			
ANR	3092904	Identifier	gx_max_color_value		3092789	0					
ANR	3092905	Identifier	red		3092789	1					
ANR	3092906	ExpressionStatement	tmpcv [ 1 ] = gx_max_color_value - green	306:2:10941:10978	3092789	19	True				
ANR	3092907	AssignmentExpression	tmpcv [ 1 ] = gx_max_color_value - green		3092789	0		=			
ANR	3092908	ArrayIndexing	tmpcv [ 1 ]		3092789	0					
ANR	3092909	Identifier	tmpcv		3092789	0					
ANR	3092910	PrimaryExpression	1		3092789	1					
ANR	3092911	AdditiveExpression	gx_max_color_value - green		3092789	1		-			
ANR	3092912	Identifier	gx_max_color_value		3092789	0					
ANR	3092913	Identifier	green		3092789	1					
ANR	3092914	ExpressionStatement	tmpcv [ 2 ] = gx_max_color_value - blue	307:2:10982:11018	3092789	20	True				
ANR	3092915	AssignmentExpression	tmpcv [ 2 ] = gx_max_color_value - blue		3092789	0		=			
ANR	3092916	ArrayIndexing	tmpcv [ 2 ]		3092789	0					
ANR	3092917	Identifier	tmpcv		3092789	0					
ANR	3092918	PrimaryExpression	2		3092789	1					
ANR	3092919	AdditiveExpression	gx_max_color_value - blue		3092789	1		-			
ANR	3092920	Identifier	gx_max_color_value		3092789	0					
ANR	3092921	Identifier	blue		3092789	1					
ANR	3092922	ExpressionStatement	tmpcv [ 3 ] = 0	308:2:11022:11034	3092789	21	True				
ANR	3092923	AssignmentExpression	tmpcv [ 3 ] = 0		3092789	0		=			
ANR	3092924	ArrayIndexing	tmpcv [ 3 ]		3092789	0					
ANR	3092925	Identifier	tmpcv		3092789	0					
ANR	3092926	PrimaryExpression	3		3092789	1					
ANR	3092927	PrimaryExpression	0		3092789	1					
ANR	3092928	ReturnStatement	"return eprn_map_cmyk_color_flex ( device , tmpcv ) ;"	309:2:11038:11084	3092789	22	True				
ANR	3092929	CallExpression	"eprn_map_cmyk_color_flex ( device , tmpcv )"		3092789	0					
ANR	3092930	Callee	eprn_map_cmyk_color_flex		3092789	0					
ANR	3092931	Identifier	eprn_map_cmyk_color_flex		3092789	0					
ANR	3092932	ArgumentList	device		3092789	1					
ANR	3092933	Argument	device		3092789	0					
ANR	3092934	Identifier	device		3092789	0					
ANR	3092935	Argument	tmpcv		3092789	1					
ANR	3092936	Identifier	tmpcv		3092789	0					
ANR	3092937	ReturnType	gx_color_index		3092789	1					
ANR	3092938	Identifier	eprn_map_rgb_color_for_CMY_or_K_flex		3092789	2					
ANR	3092939	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3092789	3					
ANR	3092940	Parameter	gx_device * device	282:52:10125:10141	3092789	0	True				
ANR	3092941	ParameterType	gx_device *		3092789	0					
ANR	3092942	Identifier	device		3092789	1					
ANR	3092943	Parameter	const gx_color_value cv [ ]	283:2:10146:10170	3092789	1	True				
ANR	3092944	ParameterType	const gx_color_value [ ]		3092789	0					
ANR	3092945	Identifier	cv		3092789	1					
ANR	3092946	CFGEntryNode	ENTRY		3092789		True				
ANR	3092947	CFGExitNode	EXIT		3092789		True				
ANR	3092948	Symbol	* dev		3092789						
ANR	3092949	Symbol	* tmpcv		3092789						
ANR	3092950	Symbol	green		3092789						
ANR	3092951	Symbol	eprn_map_cmyk_color_flex		3092789						
ANR	3092952	Symbol	eprn_DeviceCMY		3092789						
ANR	3092953	Symbol	dev -> eprn . colour_model		3092789						
ANR	3092954	Symbol	red		3092789						
ANR	3092955	Symbol	cv		3092789						
ANR	3092956	Symbol	blue		3092789						
ANR	3092957	Symbol	dev		3092789						
ANR	3092958	Symbol	gx_max_color_value		3092789						
ANR	3092959	Symbol	* cv		3092789						
ANR	3092960	Symbol	dev -> eprn		3092789						
ANR	3092961	Symbol	device		3092789						
ANR	3092962	Symbol	tmpcv		3092789						
ANR	3092963	Function	eprn_map_rgb_color_for_RGB_max	321:0:11408:11984							
ANR	3092964	FunctionDef	"eprn_map_rgb_color_for_RGB_max (gx_device * device , const gx_color_value cv [ ])"		3092963	0					
ANR	3092965	CompoundStatement		323:0:11502:11984	3092963	0					
ANR	3092966	IdentifierDeclStatement	"gx_color_value red = cv [ 0 ] , green = cv [ 1 ] , blue = cv [ 2 ] ;"	324:2:11506:11561	3092963	0	True				
ANR	3092967	IdentifierDecl	red = cv [ 0 ]		3092963	0					
ANR	3092968	IdentifierDeclType	gx_color_value		3092963	0					
ANR	3092969	Identifier	red		3092963	1					
ANR	3092970	AssignmentExpression	red = cv [ 0 ]		3092963	2		=			
ANR	3092971	Identifier	red		3092963	0					
ANR	3092972	ArrayIndexing	cv [ 0 ]		3092963	1					
ANR	3092973	Identifier	cv		3092963	0					
ANR	3092974	PrimaryExpression	0		3092963	1					
ANR	3092975	IdentifierDecl	green = cv [ 1 ]		3092963	1					
ANR	3092976	IdentifierDeclType	gx_color_value		3092963	0					
ANR	3092977	Identifier	green		3092963	1					
ANR	3092978	AssignmentExpression	green = cv [ 1 ]		3092963	2		=			
ANR	3092979	Identifier	green		3092963	0					
ANR	3092980	ArrayIndexing	cv [ 1 ]		3092963	1					
ANR	3092981	Identifier	cv		3092963	0					
ANR	3092982	PrimaryExpression	1		3092963	1					
ANR	3092983	IdentifierDecl	blue = cv [ 2 ]		3092963	2					
ANR	3092984	IdentifierDeclType	gx_color_value		3092963	0					
ANR	3092985	Identifier	blue		3092963	1					
ANR	3092986	AssignmentExpression	blue = cv [ 2 ]		3092963	2		=			
ANR	3092987	Identifier	blue		3092963	0					
ANR	3092988	ArrayIndexing	cv [ 2 ]		3092963	1					
ANR	3092989	Identifier	cv		3092963	0					
ANR	3092990	PrimaryExpression	2		3092963	1					
ANR	3092991	IdentifierDeclStatement	gx_color_index value ;	325:2:11565:11585	3092963	1	True				
ANR	3092992	IdentifierDecl	value		3092963	0					
ANR	3092993	IdentifierDeclType	gx_color_index		3092963	0					
ANR	3092994	Identifier	value		3092963	1					
ANR	3092995	ExpressionStatement	"if_debug3 ( EPRN_TRACE_CHAR , ""! eprn_map_rgb_color_for_RGB_max() called for RGB = (%hu, %hu, %hu),\\n"" , red , green , blue )"	328:2:11608:11734	3092963	2	True				
ANR	3092996	CallExpression	"if_debug3 ( EPRN_TRACE_CHAR , ""! eprn_map_rgb_color_for_RGB_max() called for RGB = (%hu, %hu, %hu),\\n"" , red , green , blue )"		3092963	0					
ANR	3092997	Callee	if_debug3		3092963	0					
ANR	3092998	Identifier	if_debug3		3092963	0					
ANR	3092999	ArgumentList	EPRN_TRACE_CHAR		3092963	1					
ANR	3093000	Argument	EPRN_TRACE_CHAR		3092963	0					
ANR	3093001	Identifier	EPRN_TRACE_CHAR		3092963	0					
ANR	3093002	Argument	"""! eprn_map_rgb_color_for_RGB_max() called for RGB = (%hu, %hu, %hu),\\n"""		3092963	1					
ANR	3093003	PrimaryExpression	"""! eprn_map_rgb_color_for_RGB_max() called for RGB = (%hu, %hu, %hu),\\n"""		3092963	0					
ANR	3093004	Argument	red		3092963	2					
ANR	3093005	Identifier	red		3092963	0					
ANR	3093006	Argument	green		3092963	3					
ANR	3093007	Identifier	green		3092963	0					
ANR	3093008	Argument	blue		3092963	4					
ANR	3093009	Identifier	blue		3092963	0					
ANR	3093010	ExpressionStatement	value = dominant_8bits ( red ) << 8	333:2:11746:11782	3092963	3	True				
ANR	3093011	AssignmentExpression	value = dominant_8bits ( red ) << 8		3092963	0		=			
ANR	3093012	Identifier	value		3092963	0					
ANR	3093013	ShiftExpression	dominant_8bits ( red ) << 8		3092963	1		<<			
ANR	3093014	CallExpression	dominant_8bits ( red )		3092963	0					
ANR	3093015	Callee	dominant_8bits		3092963	0					
ANR	3093016	Identifier	dominant_8bits		3092963	0					
ANR	3093017	ArgumentList	red		3092963	1					
ANR	3093018	Argument	red		3092963	0					
ANR	3093019	Identifier	red		3092963	0					
ANR	3093020	PrimaryExpression	8		3092963	1					
ANR	3093021	ExpressionStatement	value |= dominant_8bits ( green ) << 16	334:2:11786:11822	3092963	4	True				
ANR	3093022	AssignmentExpression	value |= dominant_8bits ( green ) << 16		3092963	0		|=			
ANR	3093023	Identifier	value		3092963	0					
ANR	3093024	ShiftExpression	dominant_8bits ( green ) << 16		3092963	1		<<			
ANR	3093025	CallExpression	dominant_8bits ( green )		3092963	0					
ANR	3093026	Callee	dominant_8bits		3092963	0					
ANR	3093027	Identifier	dominant_8bits		3092963	0					
ANR	3093028	ArgumentList	green		3092963	1					
ANR	3093029	Argument	green		3092963	0					
ANR	3093030	Identifier	green		3092963	0					
ANR	3093031	PrimaryExpression	16		3092963	1					
ANR	3093032	ExpressionStatement	value |= dominant_8bits ( blue ) << 24	335:2:11826:11862	3092963	5	True				
ANR	3093033	AssignmentExpression	value |= dominant_8bits ( blue ) << 24		3092963	0		|=			
ANR	3093034	Identifier	value		3092963	0					
ANR	3093035	ShiftExpression	dominant_8bits ( blue ) << 24		3092963	1		<<			
ANR	3093036	CallExpression	dominant_8bits ( blue )		3092963	0					
ANR	3093037	Callee	dominant_8bits		3092963	0					
ANR	3093038	Identifier	dominant_8bits		3092963	0					
ANR	3093039	ArgumentList	blue		3092963	1					
ANR	3093040	Argument	blue		3092963	0					
ANR	3093041	Identifier	blue		3092963	0					
ANR	3093042	PrimaryExpression	24		3092963	1					
ANR	3093043	ExpressionStatement	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%08lX.\\n"" , ( unsigned long ) value )"	338:2:11885:11959	3092963	6	True				
ANR	3093044	CallExpression	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%08lX.\\n"" , ( unsigned long ) value )"		3092963	0					
ANR	3093045	Callee	if_debug1		3092963	0					
ANR	3093046	Identifier	if_debug1		3092963	0					
ANR	3093047	ArgumentList	EPRN_TRACE_CHAR		3092963	1					
ANR	3093048	Argument	EPRN_TRACE_CHAR		3092963	0					
ANR	3093049	Identifier	EPRN_TRACE_CHAR		3092963	0					
ANR	3093050	Argument	"""  returning 0x%08lX.\\n"""		3092963	1					
ANR	3093051	PrimaryExpression	"""  returning 0x%08lX.\\n"""		3092963	0					
ANR	3093052	Argument	( unsigned long ) value		3092963	2					
ANR	3093053	CastExpression	( unsigned long ) value		3092963	0					
ANR	3093054	CastTarget	unsigned long		3092963	0					
ANR	3093055	Identifier	value		3092963	1					
ANR	3093056	ReturnStatement	return value ;	340:2:11970:11982	3092963	7	True				
ANR	3093057	Identifier	value		3092963	0					
ANR	3093058	ReturnType	gx_color_index		3092963	1					
ANR	3093059	Identifier	eprn_map_rgb_color_for_RGB_max		3092963	2					
ANR	3093060	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3092963	3					
ANR	3093061	Parameter	gx_device * device	321:46:11454:11470	3092963	0	True				
ANR	3093062	ParameterType	gx_device *		3092963	0					
ANR	3093063	Identifier	device		3092963	1					
ANR	3093064	Parameter	const gx_color_value cv [ ]	322:2:11475:11499	3092963	1	True				
ANR	3093065	ParameterType	const gx_color_value [ ]		3092963	0					
ANR	3093066	Identifier	cv		3092963	1					
ANR	3093067	CFGEntryNode	ENTRY		3092963		True				
ANR	3093068	CFGExitNode	EXIT		3092963		True				
ANR	3093069	Symbol	red		3092963						
ANR	3093070	Symbol	cv		3092963						
ANR	3093071	Symbol	green		3092963						
ANR	3093072	Symbol	blue		3092963						
ANR	3093073	Symbol	* cv		3092963						
ANR	3093074	Symbol	EPRN_TRACE_CHAR		3092963						
ANR	3093075	Symbol	dominant_8bits		3092963						
ANR	3093076	Symbol	device		3092963						
ANR	3093077	Symbol	value		3092963						
ANR	3093078	Function	eprn_map_rgb_color_for_CMY_or_K_max	352:0:12307:13229							
ANR	3093079	FunctionDef	"eprn_map_rgb_color_for_CMY_or_K_max (gx_device * device , const gx_color_value cv [ ])"		3093078	0					
ANR	3093080	CompoundStatement		354:0:12406:13229	3093078	0					
ANR	3093081	IdentifierDeclStatement	"gx_color_value red = cv [ 0 ] , green = cv [ 1 ] , blue = cv [ 2 ] ;"	355:2:12410:12465	3093078	0	True				
ANR	3093082	IdentifierDecl	red = cv [ 0 ]		3093078	0					
ANR	3093083	IdentifierDeclType	gx_color_value		3093078	0					
ANR	3093084	Identifier	red		3093078	1					
ANR	3093085	AssignmentExpression	red = cv [ 0 ]		3093078	2		=			
ANR	3093086	Identifier	red		3093078	0					
ANR	3093087	ArrayIndexing	cv [ 0 ]		3093078	1					
ANR	3093088	Identifier	cv		3093078	0					
ANR	3093089	PrimaryExpression	0		3093078	1					
ANR	3093090	IdentifierDecl	green = cv [ 1 ]		3093078	1					
ANR	3093091	IdentifierDeclType	gx_color_value		3093078	0					
ANR	3093092	Identifier	green		3093078	1					
ANR	3093093	AssignmentExpression	green = cv [ 1 ]		3093078	2		=			
ANR	3093094	Identifier	green		3093078	0					
ANR	3093095	ArrayIndexing	cv [ 1 ]		3093078	1					
ANR	3093096	Identifier	cv		3093078	0					
ANR	3093097	PrimaryExpression	1		3093078	1					
ANR	3093098	IdentifierDecl	blue = cv [ 2 ]		3093078	2					
ANR	3093099	IdentifierDeclType	gx_color_value		3093078	0					
ANR	3093100	Identifier	blue		3093078	1					
ANR	3093101	AssignmentExpression	blue = cv [ 2 ]		3093078	2		=			
ANR	3093102	Identifier	blue		3093078	0					
ANR	3093103	ArrayIndexing	cv [ 2 ]		3093078	1					
ANR	3093104	Identifier	cv		3093078	0					
ANR	3093105	PrimaryExpression	2		3093078	1					
ANR	3093106	IdentifierDeclStatement	const eprn_Device * dev = ( eprn_Device * ) device ;	356:2:12469:12515	3093078	1	True				
ANR	3093107	IdentifierDecl	* dev = ( eprn_Device * ) device		3093078	0					
ANR	3093108	IdentifierDeclType	const eprn_Device *		3093078	0					
ANR	3093109	Identifier	dev		3093078	1					
ANR	3093110	AssignmentExpression	* dev = ( eprn_Device * ) device		3093078	2		=			
ANR	3093111	Identifier	dev		3093078	0					
ANR	3093112	CastExpression	( eprn_Device * ) device		3093078	1					
ANR	3093113	CastTarget	eprn_Device *		3093078	0					
ANR	3093114	Identifier	device		3093078	1					
ANR	3093115	Statement	if_debug3	359:2:12538:12546	3093078	2	True				
ANR	3093116	Statement	(	359:11:12547:12547	3093078	3	True				
ANR	3093117	Statement	EPRN_TRACE_CHAR	359:12:12548:12562	3093078	4	True				
ANR	3093118	Statement	","	359:27:12563:12563	3093078	5	True				
ANR	3093119	Statement	"""! eprn_map_rgb_color_for_CMY_or_K_max() called for """	360:4:12569:12621	3093078	6	True				
ANR	3093120	Statement	"""RGB = (%hu, %hu, %hu).\\n"""	361:6:12629:12654	3093078	7	True				
ANR	3093121	Statement	","	361:32:12655:12655	3093078	8	True				
ANR	3093122	Statement	red	362:4:12661:12663	3093078	9	True				
ANR	3093123	Statement	","	362:7:12664:12664	3093078	10	True				
ANR	3093124	Statement	green	362:9:12666:12670	3093078	11	True				
ANR	3093125	Statement	","	362:14:12671:12671	3093078	12	True				
ANR	3093126	Statement	blue	362:16:12673:12676	3093078	13	True				
ANR	3093127	Statement	)	362:20:12677:12677	3093078	14	True				
ANR	3093128	ExpressionStatement		362:21:12678:12678	3093078	15	True				
ANR	3093129	IdentifierDeclStatement	gx_color_value tmpcv [ 4 ] ;	365:2:12690:12713	3093078	16	True				
ANR	3093130	IdentifierDecl	tmpcv [ 4 ]		3093078	0					
ANR	3093131	IdentifierDeclType	gx_color_value [ 4 ]		3093078	0					
ANR	3093132	Identifier	tmpcv		3093078	1					
ANR	3093133	PrimaryExpression	4		3093078	2					
ANR	3093134	IfStatement	if ( dev -> eprn . colour_model == eprn_DeviceGray )		3093078	17					
ANR	3093135	Condition	dev -> eprn . colour_model == eprn_DeviceGray	366:6:12721:12761	3093078	0	True				
ANR	3093136	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceGray		3093078	0		==			
ANR	3093137	MemberAccess	dev -> eprn . colour_model		3093078	0					
ANR	3093138	PtrMemberAccess	dev -> eprn		3093078	0					
ANR	3093139	Identifier	dev		3093078	0					
ANR	3093140	Identifier	eprn		3093078	1					
ANR	3093141	Identifier	colour_model		3093078	1					
ANR	3093142	Identifier	eprn_DeviceGray		3093078	1					
ANR	3093143	CompoundStatement		13:49:357:357	3093078	1					
ANR	3093144	ExpressionStatement	tmpcv [ 0 ] = 0	367:4:12770:12782	3093078	0	True				
ANR	3093145	AssignmentExpression	tmpcv [ 0 ] = 0		3093078	0		=			
ANR	3093146	ArrayIndexing	tmpcv [ 0 ]		3093078	0					
ANR	3093147	Identifier	tmpcv		3093078	0					
ANR	3093148	PrimaryExpression	0		3093078	1					
ANR	3093149	PrimaryExpression	0		3093078	1					
ANR	3093150	ExpressionStatement	tmpcv [ 1 ] = 0	367:18:12784:12796	3093078	1	True				
ANR	3093151	AssignmentExpression	tmpcv [ 1 ] = 0		3093078	0		=			
ANR	3093152	ArrayIndexing	tmpcv [ 1 ]		3093078	0					
ANR	3093153	Identifier	tmpcv		3093078	0					
ANR	3093154	PrimaryExpression	1		3093078	1					
ANR	3093155	PrimaryExpression	0		3093078	1					
ANR	3093156	ExpressionStatement	tmpcv [ 2 ] = 0	367:32:12798:12810	3093078	2	True				
ANR	3093157	AssignmentExpression	tmpcv [ 2 ] = 0		3093078	0		=			
ANR	3093158	ArrayIndexing	tmpcv [ 2 ]		3093078	0					
ANR	3093159	Identifier	tmpcv		3093078	0					
ANR	3093160	PrimaryExpression	2		3093078	1					
ANR	3093161	PrimaryExpression	0		3093078	1					
ANR	3093162	ExpressionStatement	tmpcv [ 3 ] = gx_max_color_value - red	368:4:12816:12851	3093078	3	True				
ANR	3093163	AssignmentExpression	tmpcv [ 3 ] = gx_max_color_value - red		3093078	0		=			
ANR	3093164	ArrayIndexing	tmpcv [ 3 ]		3093078	0					
ANR	3093165	Identifier	tmpcv		3093078	0					
ANR	3093166	PrimaryExpression	3		3093078	1					
ANR	3093167	AdditiveExpression	gx_max_color_value - red		3093078	1		-			
ANR	3093168	Identifier	gx_max_color_value		3093078	0					
ANR	3093169	Identifier	red		3093078	1					
ANR	3093170	ReturnStatement	"return eprn_map_cmyk_color_max ( device , tmpcv ) ;"	369:4:12857:12902	3093078	4	True				
ANR	3093171	CallExpression	"eprn_map_cmyk_color_max ( device , tmpcv )"		3093078	0					
ANR	3093172	Callee	eprn_map_cmyk_color_max		3093078	0					
ANR	3093173	Identifier	eprn_map_cmyk_color_max		3093078	0					
ANR	3093174	ArgumentList	device		3093078	1					
ANR	3093175	Argument	device		3093078	0					
ANR	3093176	Identifier	device		3093078	0					
ANR	3093177	Argument	tmpcv		3093078	1					
ANR	3093178	Identifier	tmpcv		3093078	0					
ANR	3093179	ExpressionStatement	tmpcv [ 0 ] = gx_max_color_value - red	373:2:13046:13081	3093078	18	True				
ANR	3093180	AssignmentExpression	tmpcv [ 0 ] = gx_max_color_value - red		3093078	0		=			
ANR	3093181	ArrayIndexing	tmpcv [ 0 ]		3093078	0					
ANR	3093182	Identifier	tmpcv		3093078	0					
ANR	3093183	PrimaryExpression	0		3093078	1					
ANR	3093184	AdditiveExpression	gx_max_color_value - red		3093078	1		-			
ANR	3093185	Identifier	gx_max_color_value		3093078	0					
ANR	3093186	Identifier	red		3093078	1					
ANR	3093187	ExpressionStatement	tmpcv [ 1 ] = gx_max_color_value - green	374:2:13085:13122	3093078	19	True				
ANR	3093188	AssignmentExpression	tmpcv [ 1 ] = gx_max_color_value - green		3093078	0		=			
ANR	3093189	ArrayIndexing	tmpcv [ 1 ]		3093078	0					
ANR	3093190	Identifier	tmpcv		3093078	0					
ANR	3093191	PrimaryExpression	1		3093078	1					
ANR	3093192	AdditiveExpression	gx_max_color_value - green		3093078	1		-			
ANR	3093193	Identifier	gx_max_color_value		3093078	0					
ANR	3093194	Identifier	green		3093078	1					
ANR	3093195	ExpressionStatement	tmpcv [ 2 ] = gx_max_color_value - blue	375:2:13126:13162	3093078	20	True				
ANR	3093196	AssignmentExpression	tmpcv [ 2 ] = gx_max_color_value - blue		3093078	0		=			
ANR	3093197	ArrayIndexing	tmpcv [ 2 ]		3093078	0					
ANR	3093198	Identifier	tmpcv		3093078	0					
ANR	3093199	PrimaryExpression	2		3093078	1					
ANR	3093200	AdditiveExpression	gx_max_color_value - blue		3093078	1		-			
ANR	3093201	Identifier	gx_max_color_value		3093078	0					
ANR	3093202	Identifier	blue		3093078	1					
ANR	3093203	ExpressionStatement	tmpcv [ 3 ] = 0	376:2:13166:13178	3093078	21	True				
ANR	3093204	AssignmentExpression	tmpcv [ 3 ] = 0		3093078	0		=			
ANR	3093205	ArrayIndexing	tmpcv [ 3 ]		3093078	0					
ANR	3093206	Identifier	tmpcv		3093078	0					
ANR	3093207	PrimaryExpression	3		3093078	1					
ANR	3093208	PrimaryExpression	0		3093078	1					
ANR	3093209	ReturnStatement	"return eprn_map_cmyk_color_max ( device , tmpcv ) ;"	377:2:13182:13227	3093078	22	True				
ANR	3093210	CallExpression	"eprn_map_cmyk_color_max ( device , tmpcv )"		3093078	0					
ANR	3093211	Callee	eprn_map_cmyk_color_max		3093078	0					
ANR	3093212	Identifier	eprn_map_cmyk_color_max		3093078	0					
ANR	3093213	ArgumentList	device		3093078	1					
ANR	3093214	Argument	device		3093078	0					
ANR	3093215	Identifier	device		3093078	0					
ANR	3093216	Argument	tmpcv		3093078	1					
ANR	3093217	Identifier	tmpcv		3093078	0					
ANR	3093218	ReturnType	gx_color_index		3093078	1					
ANR	3093219	Identifier	eprn_map_rgb_color_for_CMY_or_K_max		3093078	2					
ANR	3093220	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3093078	3					
ANR	3093221	Parameter	gx_device * device	352:51:12358:12374	3093078	0	True				
ANR	3093222	ParameterType	gx_device *		3093078	0					
ANR	3093223	Identifier	device		3093078	1					
ANR	3093224	Parameter	const gx_color_value cv [ ]	353:2:12379:12403	3093078	1	True				
ANR	3093225	ParameterType	const gx_color_value [ ]		3093078	0					
ANR	3093226	Identifier	cv		3093078	1					
ANR	3093227	CFGEntryNode	ENTRY		3093078		True				
ANR	3093228	CFGExitNode	EXIT		3093078		True				
ANR	3093229	Symbol	* dev		3093078						
ANR	3093230	Symbol	eprn_map_cmyk_color_max		3093078						
ANR	3093231	Symbol	* tmpcv		3093078						
ANR	3093232	Symbol	green		3093078						
ANR	3093233	Symbol	dev -> eprn . colour_model		3093078						
ANR	3093234	Symbol	red		3093078						
ANR	3093235	Symbol	eprn_DeviceGray		3093078						
ANR	3093236	Symbol	cv		3093078						
ANR	3093237	Symbol	blue		3093078						
ANR	3093238	Symbol	dev		3093078						
ANR	3093239	Symbol	gx_max_color_value		3093078						
ANR	3093240	Symbol	* cv		3093078						
ANR	3093241	Symbol	dev -> eprn		3093078						
ANR	3093242	Symbol	device		3093078						
ANR	3093243	Symbol	tmpcv		3093078						
ANR	3093244	Function	eprn_map_color_rgb	403:0:14331:14780							
ANR	3093245	FunctionDef	"eprn_map_color_rgb (gx_device * device , gx_color_index color , gx_color_value rgb [ ])"		3093244	0					
ANR	3093246	CompoundStatement		405:0:14419:14780	3093244	0					
ANR	3093247	ExpressionStatement	"if_debug1 ( EPRN_TRACE_CHAR , ""! eprn_map_color_rgb() called for 0x%lX.\\n"" , ( unsigned long ) color )"	407:2:14441:14539	3093244	0	True				
ANR	3093248	CallExpression	"if_debug1 ( EPRN_TRACE_CHAR , ""! eprn_map_color_rgb() called for 0x%lX.\\n"" , ( unsigned long ) color )"		3093244	0					
ANR	3093249	Callee	if_debug1		3093244	0					
ANR	3093250	Identifier	if_debug1		3093244	0					
ANR	3093251	ArgumentList	EPRN_TRACE_CHAR		3093244	1					
ANR	3093252	Argument	EPRN_TRACE_CHAR		3093244	0					
ANR	3093253	Identifier	EPRN_TRACE_CHAR		3093244	0					
ANR	3093254	Argument	"""! eprn_map_color_rgb() called for 0x%lX.\\n"""		3093244	1					
ANR	3093255	PrimaryExpression	"""! eprn_map_color_rgb() called for 0x%lX.\\n"""		3093244	0					
ANR	3093256	Argument	( unsigned long ) color		3093244	2					
ANR	3093257	CastExpression	( unsigned long ) color		3093244	0					
ANR	3093258	CastTarget	unsigned long		3093244	0					
ANR	3093259	Identifier	color		3093244	1					
ANR	3093260	IfStatement	if ( ( ( eprn_Device * ) device ) -> eprn . colour_model == eprn_DeviceRGB )		3093244	1					
ANR	3093261	Condition	( ( eprn_Device * ) device ) -> eprn . colour_model == eprn_DeviceRGB	412:6:14612:14671	3093244	0	True				
ANR	3093262	EqualityExpression	( ( eprn_Device * ) device ) -> eprn . colour_model == eprn_DeviceRGB		3093244	0		==			
ANR	3093263	MemberAccess	( ( eprn_Device * ) device ) -> eprn . colour_model		3093244	0					
ANR	3093264	PtrMemberAccess	( ( eprn_Device * ) device ) -> eprn		3093244	0					
ANR	3093265	CastExpression	( eprn_Device * ) device		3093244	0					
ANR	3093266	CastTarget	eprn_Device *		3093244	0					
ANR	3093267	Identifier	device		3093244	1					
ANR	3093268	Identifier	eprn		3093244	1					
ANR	3093269	Identifier	colour_model		3093244	1					
ANR	3093270	Identifier	eprn_DeviceRGB		3093244	1					
ANR	3093271	ExpressionStatement	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = gx_max_color_value	413:4:14678:14723	3093244	1	True				
ANR	3093272	AssignmentExpression	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = gx_max_color_value		3093244	0		=			
ANR	3093273	ArrayIndexing	rgb [ 0 ]		3093244	0					
ANR	3093274	Identifier	rgb		3093244	0					
ANR	3093275	PrimaryExpression	0		3093244	1					
ANR	3093276	AssignmentExpression	rgb [ 1 ] = rgb [ 2 ] = gx_max_color_value		3093244	1		=			
ANR	3093277	ArrayIndexing	rgb [ 1 ]		3093244	0					
ANR	3093278	Identifier	rgb		3093244	0					
ANR	3093279	PrimaryExpression	1		3093244	1					
ANR	3093280	AssignmentExpression	rgb [ 2 ] = gx_max_color_value		3093244	1		=			
ANR	3093281	ArrayIndexing	rgb [ 2 ]		3093244	0					
ANR	3093282	Identifier	rgb		3093244	0					
ANR	3093283	PrimaryExpression	2		3093244	1					
ANR	3093284	Identifier	gx_max_color_value		3093244	1					
ANR	3093285	ElseStatement	else		3093244	0					
ANR	3093286	ExpressionStatement	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = 0	415:4:14736:14764	3093244	0	True				
ANR	3093287	AssignmentExpression	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = 0		3093244	0		=			
ANR	3093288	ArrayIndexing	rgb [ 0 ]		3093244	0					
ANR	3093289	Identifier	rgb		3093244	0					
ANR	3093290	PrimaryExpression	0		3093244	1					
ANR	3093291	AssignmentExpression	rgb [ 1 ] = rgb [ 2 ] = 0		3093244	1		=			
ANR	3093292	ArrayIndexing	rgb [ 1 ]		3093244	0					
ANR	3093293	Identifier	rgb		3093244	0					
ANR	3093294	PrimaryExpression	1		3093244	1					
ANR	3093295	AssignmentExpression	rgb [ 2 ] = 0		3093244	1		=			
ANR	3093296	ArrayIndexing	rgb [ 2 ]		3093244	0					
ANR	3093297	Identifier	rgb		3093244	0					
ANR	3093298	PrimaryExpression	2		3093244	1					
ANR	3093299	PrimaryExpression	0		3093244	1					
ANR	3093300	ReturnStatement	return - 1 ;	417:2:14769:14778	3093244	2	True				
ANR	3093301	UnaryOperationExpression	- 1		3093244	0					
ANR	3093302	UnaryOperator	-		3093244	0					
ANR	3093303	PrimaryExpression	1		3093244	1					
ANR	3093304	ReturnType	int		3093244	1					
ANR	3093305	Identifier	eprn_map_color_rgb		3093244	2					
ANR	3093306	ParameterList	"gx_device * device , gx_color_index color , gx_color_value rgb [ ]"		3093244	3					
ANR	3093307	Parameter	gx_device * device	403:23:14354:14370	3093244	0	True				
ANR	3093308	ParameterType	gx_device *		3093244	0					
ANR	3093309	Identifier	device		3093244	1					
ANR	3093310	Parameter	gx_color_index color	403:42:14373:14392	3093244	1	True				
ANR	3093311	ParameterType	gx_color_index		3093244	0					
ANR	3093312	Identifier	color		3093244	1					
ANR	3093313	Parameter	gx_color_value rgb [ ]	404:2:14397:14416	3093244	2	True				
ANR	3093314	ParameterType	gx_color_value [ ]		3093244	0					
ANR	3093315	Identifier	rgb		3093244	1					
ANR	3093316	CFGEntryNode	ENTRY		3093244		True				
ANR	3093317	CFGExitNode	EXIT		3093244		True				
ANR	3093318	Symbol	color		3093244						
ANR	3093319	Symbol	gx_max_color_value		3093244						
ANR	3093320	Symbol	( ( eprn_Device * ) device ) -> eprn		3093244						
ANR	3093321	Symbol	* rgb		3093244						
ANR	3093322	Symbol	eprn_DeviceRGB		3093244						
ANR	3093323	Symbol	( ( eprn_Device * ) device ) -> eprn . colour_model		3093244						
ANR	3093324	Symbol	rgb		3093244						
ANR	3093325	Symbol	EPRN_TRACE_CHAR		3093244						
ANR	3093326	Symbol	device		3093244						
ANR	3093327	Symbol	* device		3093244						
ANR	3093328	Function	eprn_map_cmyk_color	429:0:15093:15823							
ANR	3093329	FunctionDef	"eprn_map_cmyk_color (gx_device * device , const gx_color_value cv [ ])"		3093328	0					
ANR	3093330	CompoundStatement		431:0:15176:15823	3093328	0					
ANR	3093331	IdentifierDeclStatement	"gx_color_value cyan = cv [ 0 ] , magenta = cv [ 1 ] , yellow = cv [ 2 ] , black = cv [ 3 ] ;"	432:2:15180:15255	3093328	0	True				
ANR	3093332	IdentifierDecl	cyan = cv [ 0 ]		3093328	0					
ANR	3093333	IdentifierDeclType	gx_color_value		3093328	0					
ANR	3093334	Identifier	cyan		3093328	1					
ANR	3093335	AssignmentExpression	cyan = cv [ 0 ]		3093328	2		=			
ANR	3093336	Identifier	cyan		3093328	0					
ANR	3093337	ArrayIndexing	cv [ 0 ]		3093328	1					
ANR	3093338	Identifier	cv		3093328	0					
ANR	3093339	PrimaryExpression	0		3093328	1					
ANR	3093340	IdentifierDecl	magenta = cv [ 1 ]		3093328	1					
ANR	3093341	IdentifierDeclType	gx_color_value		3093328	0					
ANR	3093342	Identifier	magenta		3093328	1					
ANR	3093343	AssignmentExpression	magenta = cv [ 1 ]		3093328	2		=			
ANR	3093344	Identifier	magenta		3093328	0					
ANR	3093345	ArrayIndexing	cv [ 1 ]		3093328	1					
ANR	3093346	Identifier	cv		3093328	0					
ANR	3093347	PrimaryExpression	1		3093328	1					
ANR	3093348	IdentifierDecl	yellow = cv [ 2 ]		3093328	2					
ANR	3093349	IdentifierDeclType	gx_color_value		3093328	0					
ANR	3093350	Identifier	yellow		3093328	1					
ANR	3093351	AssignmentExpression	yellow = cv [ 2 ]		3093328	2		=			
ANR	3093352	Identifier	yellow		3093328	0					
ANR	3093353	ArrayIndexing	cv [ 2 ]		3093328	1					
ANR	3093354	Identifier	cv		3093328	0					
ANR	3093355	PrimaryExpression	2		3093328	1					
ANR	3093356	IdentifierDecl	black = cv [ 3 ]		3093328	3					
ANR	3093357	IdentifierDeclType	gx_color_value		3093328	0					
ANR	3093358	Identifier	black		3093328	1					
ANR	3093359	AssignmentExpression	black = cv [ 3 ]		3093328	2		=			
ANR	3093360	Identifier	black		3093328	0					
ANR	3093361	ArrayIndexing	cv [ 3 ]		3093328	1					
ANR	3093362	Identifier	cv		3093328	0					
ANR	3093363	PrimaryExpression	3		3093328	1					
ANR	3093364	IdentifierDeclStatement	gx_color_index value = 0 ;	433:2:15259:15283	3093328	1	True				
ANR	3093365	IdentifierDecl	value = 0		3093328	0					
ANR	3093366	IdentifierDeclType	gx_color_index		3093328	0					
ANR	3093367	Identifier	value		3093328	1					
ANR	3093368	AssignmentExpression	value = 0		3093328	2		=			
ANR	3093369	Identifier	value		3093328	0					
ANR	3093370	PrimaryExpression	0		3093328	1					
ANR	3093371	Statement	static	434:2:15287:15292	3093328	2	True				
ANR	3093372	IdentifierDeclStatement	const gx_color_value threshold = gx_max_color_value / 2 ;	434:9:15294:15347	3093328	3	True				
ANR	3093373	IdentifierDecl	threshold = gx_max_color_value / 2		3093328	0					
ANR	3093374	IdentifierDeclType	const gx_color_value		3093328	0					
ANR	3093375	Identifier	threshold		3093328	1					
ANR	3093376	AssignmentExpression	threshold = gx_max_color_value / 2		3093328	2		=			
ANR	3093377	Identifier	threshold		3093328	0					
ANR	3093378	MultiplicativeExpression	gx_max_color_value / 2		3093328	1		/			
ANR	3093379	Identifier	gx_max_color_value		3093328	0					
ANR	3093380	PrimaryExpression	2		3093328	1					
ANR	3093381	ExpressionStatement	"if_debug4 ( EPRN_TRACE_CHAR , ""! eprn_map_cmyk_color() called for CMYK = (%hu, %hu, %hu, %hu),\\n"" , cyan , magenta , yellow , black )"	437:2:15370:15505	3093328	4	True				
ANR	3093382	CallExpression	"if_debug4 ( EPRN_TRACE_CHAR , ""! eprn_map_cmyk_color() called for CMYK = (%hu, %hu, %hu, %hu),\\n"" , cyan , magenta , yellow , black )"		3093328	0					
ANR	3093383	Callee	if_debug4		3093328	0					
ANR	3093384	Identifier	if_debug4		3093328	0					
ANR	3093385	ArgumentList	EPRN_TRACE_CHAR		3093328	1					
ANR	3093386	Argument	EPRN_TRACE_CHAR		3093328	0					
ANR	3093387	Identifier	EPRN_TRACE_CHAR		3093328	0					
ANR	3093388	Argument	"""! eprn_map_cmyk_color() called for CMYK = (%hu, %hu, %hu, %hu),\\n"""		3093328	1					
ANR	3093389	PrimaryExpression	"""! eprn_map_cmyk_color() called for CMYK = (%hu, %hu, %hu, %hu),\\n"""		3093328	0					
ANR	3093390	Argument	cyan		3093328	2					
ANR	3093391	Identifier	cyan		3093328	0					
ANR	3093392	Argument	magenta		3093328	3					
ANR	3093393	Identifier	magenta		3093328	0					
ANR	3093394	Argument	yellow		3093328	4					
ANR	3093395	Identifier	yellow		3093328	0					
ANR	3093396	Argument	black		3093328	5					
ANR	3093397	Identifier	black		3093328	0					
ANR	3093398	IfStatement	if ( cyan > threshold )		3093328	5					
ANR	3093399	Condition	cyan > threshold	442:6:15521:15539	3093328	0	True				
ANR	3093400	RelationalExpression	cyan > threshold		3093328	0		>			
ANR	3093401	Identifier	cyan		3093328	0					
ANR	3093402	Identifier	threshold		3093328	1					
ANR	3093403	ExpressionStatement	value |= CYAN_BIT	442:27:15542:15559	3093328	1	True				
ANR	3093404	AssignmentExpression	value |= CYAN_BIT		3093328	0		|=			
ANR	3093405	Identifier	value		3093328	0					
ANR	3093406	Identifier	CYAN_BIT		3093328	1					
ANR	3093407	IfStatement	if ( magenta > threshold )		3093328	6					
ANR	3093408	Condition	magenta > threshold	443:6:15567:15585	3093328	0	True				
ANR	3093409	RelationalExpression	magenta > threshold		3093328	0		>			
ANR	3093410	Identifier	magenta		3093328	0					
ANR	3093411	Identifier	threshold		3093328	1					
ANR	3093412	ExpressionStatement	value |= MAGENTA_BIT	443:27:15588:15608	3093328	1	True				
ANR	3093413	AssignmentExpression	value |= MAGENTA_BIT		3093328	0		|=			
ANR	3093414	Identifier	value		3093328	0					
ANR	3093415	Identifier	MAGENTA_BIT		3093328	1					
ANR	3093416	IfStatement	if ( yellow > threshold )		3093328	7					
ANR	3093417	Condition	yellow > threshold	444:6:15616:15634	3093328	0	True				
ANR	3093418	RelationalExpression	yellow > threshold		3093328	0		>			
ANR	3093419	Identifier	yellow		3093328	0					
ANR	3093420	Identifier	threshold		3093328	1					
ANR	3093421	ExpressionStatement	value |= YELLOW_BIT	444:27:15637:15656	3093328	1	True				
ANR	3093422	AssignmentExpression	value |= YELLOW_BIT		3093328	0		|=			
ANR	3093423	Identifier	value		3093328	0					
ANR	3093424	Identifier	YELLOW_BIT		3093328	1					
ANR	3093425	IfStatement	if ( black > threshold )		3093328	8					
ANR	3093426	Condition	black > threshold	445:6:15664:15682	3093328	0	True				
ANR	3093427	RelationalExpression	black > threshold		3093328	0		>			
ANR	3093428	Identifier	black		3093328	0					
ANR	3093429	Identifier	threshold		3093328	1					
ANR	3093430	ExpressionStatement	value |= BLACK_BIT	445:27:15685:15703	3093328	1	True				
ANR	3093431	AssignmentExpression	value |= BLACK_BIT		3093328	0		|=			
ANR	3093432	Identifier	value		3093328	0					
ANR	3093433	Identifier	BLACK_BIT		3093328	1					
ANR	3093434	ExpressionStatement	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"	448:2:15726:15798	3093328	9	True				
ANR	3093435	CallExpression	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"		3093328	0					
ANR	3093436	Callee	if_debug1		3093328	0					
ANR	3093437	Identifier	if_debug1		3093328	0					
ANR	3093438	ArgumentList	EPRN_TRACE_CHAR		3093328	1					
ANR	3093439	Argument	EPRN_TRACE_CHAR		3093328	0					
ANR	3093440	Identifier	EPRN_TRACE_CHAR		3093328	0					
ANR	3093441	Argument	"""  returning 0x%lX.\\n"""		3093328	1					
ANR	3093442	PrimaryExpression	"""  returning 0x%lX.\\n"""		3093328	0					
ANR	3093443	Argument	( unsigned long ) value		3093328	2					
ANR	3093444	CastExpression	( unsigned long ) value		3093328	0					
ANR	3093445	CastTarget	unsigned long		3093328	0					
ANR	3093446	Identifier	value		3093328	1					
ANR	3093447	ReturnStatement	return value ;	450:2:15809:15821	3093328	10	True				
ANR	3093448	Identifier	value		3093328	0					
ANR	3093449	ReturnType	gx_color_index		3093328	1					
ANR	3093450	Identifier	eprn_map_cmyk_color		3093328	2					
ANR	3093451	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3093328	3					
ANR	3093452	Parameter	gx_device * device	429:35:15128:15144	3093328	0	True				
ANR	3093453	ParameterType	gx_device *		3093328	0					
ANR	3093454	Identifier	device		3093328	1					
ANR	3093455	Parameter	const gx_color_value cv [ ]	430:2:15149:15173	3093328	1	True				
ANR	3093456	ParameterType	const gx_color_value [ ]		3093328	0					
ANR	3093457	Identifier	cv		3093328	1					
ANR	3093458	CFGEntryNode	ENTRY		3093328		True				
ANR	3093459	CFGExitNode	EXIT		3093328		True				
ANR	3093460	Symbol	magenta		3093328						
ANR	3093461	Symbol	yellow		3093328						
ANR	3093462	Symbol	black		3093328						
ANR	3093463	Symbol	threshold		3093328						
ANR	3093464	Symbol	CYAN_BIT		3093328						
ANR	3093465	Symbol	cyan		3093328						
ANR	3093466	Symbol	MAGENTA_BIT		3093328						
ANR	3093467	Symbol	YELLOW_BIT		3093328						
ANR	3093468	Symbol	cv		3093328						
ANR	3093469	Symbol	gx_max_color_value		3093328						
ANR	3093470	Symbol	BLACK_BIT		3093328						
ANR	3093471	Symbol	* cv		3093328						
ANR	3093472	Symbol	EPRN_TRACE_CHAR		3093328						
ANR	3093473	Symbol	device		3093328						
ANR	3093474	Symbol	value		3093328						
ANR	3093475	Function	eprn_map_cmyk_color_flex	463:0:16227:19266							
ANR	3093476	FunctionDef	"eprn_map_cmyk_color_flex (gx_device * device , const gx_color_value cv [ ])"		3093475	0					
ANR	3093477	CompoundStatement		465:0:16315:19266	3093475	0					
ANR	3093478	IdentifierDeclStatement	"gx_color_value cyan = cv [ 0 ] , magenta = cv [ 1 ] , yellow = cv [ 2 ] , black = cv [ 3 ] ;"	466:2:16319:16394	3093475	0	True				
ANR	3093479	IdentifierDecl	cyan = cv [ 0 ]		3093475	0					
ANR	3093480	IdentifierDeclType	gx_color_value		3093475	0					
ANR	3093481	Identifier	cyan		3093475	1					
ANR	3093482	AssignmentExpression	cyan = cv [ 0 ]		3093475	2		=			
ANR	3093483	Identifier	cyan		3093475	0					
ANR	3093484	ArrayIndexing	cv [ 0 ]		3093475	1					
ANR	3093485	Identifier	cv		3093475	0					
ANR	3093486	PrimaryExpression	0		3093475	1					
ANR	3093487	IdentifierDecl	magenta = cv [ 1 ]		3093475	1					
ANR	3093488	IdentifierDeclType	gx_color_value		3093475	0					
ANR	3093489	Identifier	magenta		3093475	1					
ANR	3093490	AssignmentExpression	magenta = cv [ 1 ]		3093475	2		=			
ANR	3093491	Identifier	magenta		3093475	0					
ANR	3093492	ArrayIndexing	cv [ 1 ]		3093475	1					
ANR	3093493	Identifier	cv		3093475	0					
ANR	3093494	PrimaryExpression	1		3093475	1					
ANR	3093495	IdentifierDecl	yellow = cv [ 2 ]		3093475	2					
ANR	3093496	IdentifierDeclType	gx_color_value		3093475	0					
ANR	3093497	Identifier	yellow		3093475	1					
ANR	3093498	AssignmentExpression	yellow = cv [ 2 ]		3093475	2		=			
ANR	3093499	Identifier	yellow		3093475	0					
ANR	3093500	ArrayIndexing	cv [ 2 ]		3093475	1					
ANR	3093501	Identifier	cv		3093475	0					
ANR	3093502	PrimaryExpression	2		3093475	1					
ANR	3093503	IdentifierDecl	black = cv [ 3 ]		3093475	3					
ANR	3093504	IdentifierDeclType	gx_color_value		3093475	0					
ANR	3093505	Identifier	black		3093475	1					
ANR	3093506	AssignmentExpression	black = cv [ 3 ]		3093475	2		=			
ANR	3093507	Identifier	black		3093475	0					
ANR	3093508	ArrayIndexing	cv [ 3 ]		3093475	1					
ANR	3093509	Identifier	cv		3093475	0					
ANR	3093510	PrimaryExpression	3		3093475	1					
ANR	3093511	IdentifierDeclStatement	gx_color_index value = 0 ;	467:2:16398:16422	3093475	1	True				
ANR	3093512	IdentifierDecl	value = 0		3093475	0					
ANR	3093513	IdentifierDeclType	gx_color_index		3093475	0					
ANR	3093514	Identifier	value		3093475	1					
ANR	3093515	AssignmentExpression	value = 0		3093475	2		=			
ANR	3093516	Identifier	value		3093475	0					
ANR	3093517	PrimaryExpression	0		3093475	1					
ANR	3093518	IdentifierDeclStatement	gx_color_value step ;	468:2:16426:16445	3093475	2	True				
ANR	3093519	IdentifierDecl	step		3093475	0					
ANR	3093520	IdentifierDeclType	gx_color_value		3093475	0					
ANR	3093521	Identifier	step		3093475	1					
ANR	3093522	IdentifierDeclStatement	unsigned int level ;	469:2:16449:16467	3093475	3	True				
ANR	3093523	IdentifierDecl	level		3093475	0					
ANR	3093524	IdentifierDeclType	unsigned int		3093475	0					
ANR	3093525	Identifier	level		3093475	1					
ANR	3093526	IdentifierDeclStatement	const eprn_Eprn * eprn = & ( ( eprn_Device * ) device ) -> eprn ;	470:2:16471:16525	3093475	4	True				
ANR	3093527	IdentifierDecl	* eprn = & ( ( eprn_Device * ) device ) -> eprn		3093475	0					
ANR	3093528	IdentifierDeclType	const eprn_Eprn *		3093475	0					
ANR	3093529	Identifier	eprn		3093475	1					
ANR	3093530	AssignmentExpression	* eprn = & ( ( eprn_Device * ) device ) -> eprn		3093475	2		=			
ANR	3093531	Identifier	eprn		3093475	0					
ANR	3093532	UnaryOperationExpression	& ( ( eprn_Device * ) device ) -> eprn		3093475	1					
ANR	3093533	UnaryOperator	&		3093475	0					
ANR	3093534	PtrMemberAccess	( ( eprn_Device * ) device ) -> eprn		3093475	1					
ANR	3093535	CastExpression	( eprn_Device * ) device		3093475	0					
ANR	3093536	CastTarget	eprn_Device *		3093475	0					
ANR	3093537	Identifier	device		3093475	1					
ANR	3093538	Identifier	eprn		3093475	1					
ANR	3093539	ExpressionStatement	"if_debug4 ( EPRN_TRACE_CHAR , ""! eprn_map_cmyk_color_flex() called for CMYK = (%hu, %hu, %hu, %hu),\\n"" , cyan , magenta , yellow , black )"	473:2:16548:16688	3093475	5	True				
ANR	3093540	CallExpression	"if_debug4 ( EPRN_TRACE_CHAR , ""! eprn_map_cmyk_color_flex() called for CMYK = (%hu, %hu, %hu, %hu),\\n"" , cyan , magenta , yellow , black )"		3093475	0					
ANR	3093541	Callee	if_debug4		3093475	0					
ANR	3093542	Identifier	if_debug4		3093475	0					
ANR	3093543	ArgumentList	EPRN_TRACE_CHAR		3093475	1					
ANR	3093544	Argument	EPRN_TRACE_CHAR		3093475	0					
ANR	3093545	Identifier	EPRN_TRACE_CHAR		3093475	0					
ANR	3093546	Argument	"""! eprn_map_cmyk_color_flex() called for CMYK = (%hu, %hu, %hu, %hu),\\n"""		3093475	1					
ANR	3093547	PrimaryExpression	"""! eprn_map_cmyk_color_flex() called for CMYK = (%hu, %hu, %hu, %hu),\\n"""		3093475	0					
ANR	3093548	Argument	cyan		3093475	2					
ANR	3093549	Identifier	cyan		3093475	0					
ANR	3093550	Argument	magenta		3093475	3					
ANR	3093551	Identifier	magenta		3093475	0					
ANR	3093552	Argument	yellow		3093475	4					
ANR	3093553	Identifier	yellow		3093475	0					
ANR	3093554	Argument	black		3093475	5					
ANR	3093555	Identifier	black		3093475	0					
ANR	3093556	IfStatement	if ( eprn -> colour_model != eprn_DeviceGray )		3093475	6					
ANR	3093557	Condition	eprn -> colour_model != eprn_DeviceGray	508:6:18372:18408	3093475	0	True				
ANR	3093558	EqualityExpression	eprn -> colour_model != eprn_DeviceGray		3093475	0		!=			
ANR	3093559	PtrMemberAccess	eprn -> colour_model		3093475	0					
ANR	3093560	Identifier	eprn		3093475	0					
ANR	3093561	Identifier	colour_model		3093475	1					
ANR	3093562	Identifier	eprn_DeviceGray		3093475	1					
ANR	3093563	CompoundStatement		44:45:2095:2095	3093475	1					
ANR	3093564	ExpressionStatement	step = gx_max_color_value / eprn -> non_black_levels	509:4:18417:18465	3093475	0	True				
ANR	3093565	AssignmentExpression	step = gx_max_color_value / eprn -> non_black_levels		3093475	0		=			
ANR	3093566	Identifier	step		3093475	0					
ANR	3093567	MultiplicativeExpression	gx_max_color_value / eprn -> non_black_levels		3093475	1		/			
ANR	3093568	Identifier	gx_max_color_value		3093475	0					
ANR	3093569	PtrMemberAccess	eprn -> non_black_levels		3093475	1					
ANR	3093570	Identifier	eprn		3093475	0					
ANR	3093571	Identifier	non_black_levels		3093475	1					
ANR	3093572	ExpressionStatement	level = yellow / step	511:4:18472:18491	3093475	1	True				
ANR	3093573	AssignmentExpression	level = yellow / step		3093475	0		=			
ANR	3093574	Identifier	level		3093475	0					
ANR	3093575	MultiplicativeExpression	yellow / step		3093475	1		/			
ANR	3093576	Identifier	yellow		3093475	0					
ANR	3093577	Identifier	step		3093475	1					
ANR	3093578	IfStatement	if ( level >= eprn -> non_black_levels )		3093475	2					
ANR	3093579	Condition	level >= eprn -> non_black_levels	512:8:18501:18531	3093475	0	True				
ANR	3093580	RelationalExpression	level >= eprn -> non_black_levels		3093475	0		>=			
ANR	3093581	Identifier	level		3093475	0					
ANR	3093582	PtrMemberAccess	eprn -> non_black_levels		3093475	1					
ANR	3093583	Identifier	eprn		3093475	0					
ANR	3093584	Identifier	non_black_levels		3093475	1					
ANR	3093585	ExpressionStatement	level = eprn -> non_black_levels - 1	512:41:18534:18568	3093475	1	True				
ANR	3093586	AssignmentExpression	level = eprn -> non_black_levels - 1		3093475	0		=			
ANR	3093587	Identifier	level		3093475	0					
ANR	3093588	AdditiveExpression	eprn -> non_black_levels - 1		3093475	1		-			
ANR	3093589	PtrMemberAccess	eprn -> non_black_levels		3093475	0					
ANR	3093590	Identifier	eprn		3093475	0					
ANR	3093591	Identifier	non_black_levels		3093475	1					
ANR	3093592	PrimaryExpression	1		3093475	1					
ANR	3093593	ExpressionStatement	value = level << eprn -> bits_per_colorant	513:4:18574:18614	3093475	3	True				
ANR	3093594	AssignmentExpression	value = level << eprn -> bits_per_colorant		3093475	0		=			
ANR	3093595	Identifier	value		3093475	0					
ANR	3093596	ShiftExpression	level << eprn -> bits_per_colorant		3093475	1		<<			
ANR	3093597	Identifier	level		3093475	0					
ANR	3093598	PtrMemberAccess	eprn -> bits_per_colorant		3093475	1					
ANR	3093599	Identifier	eprn		3093475	0					
ANR	3093600	Identifier	bits_per_colorant		3093475	1					
ANR	3093601	ExpressionStatement	level = magenta / step	514:4:18620:18640	3093475	4	True				
ANR	3093602	AssignmentExpression	level = magenta / step		3093475	0		=			
ANR	3093603	Identifier	level		3093475	0					
ANR	3093604	MultiplicativeExpression	magenta / step		3093475	1		/			
ANR	3093605	Identifier	magenta		3093475	0					
ANR	3093606	Identifier	step		3093475	1					
ANR	3093607	IfStatement	if ( level >= eprn -> non_black_levels )		3093475	5					
ANR	3093608	Condition	level >= eprn -> non_black_levels	515:8:18650:18680	3093475	0	True				
ANR	3093609	RelationalExpression	level >= eprn -> non_black_levels		3093475	0		>=			
ANR	3093610	Identifier	level		3093475	0					
ANR	3093611	PtrMemberAccess	eprn -> non_black_levels		3093475	1					
ANR	3093612	Identifier	eprn		3093475	0					
ANR	3093613	Identifier	non_black_levels		3093475	1					
ANR	3093614	ExpressionStatement	level = eprn -> non_black_levels - 1	515:41:18683:18717	3093475	1	True				
ANR	3093615	AssignmentExpression	level = eprn -> non_black_levels - 1		3093475	0		=			
ANR	3093616	Identifier	level		3093475	0					
ANR	3093617	AdditiveExpression	eprn -> non_black_levels - 1		3093475	1		-			
ANR	3093618	PtrMemberAccess	eprn -> non_black_levels		3093475	0					
ANR	3093619	Identifier	eprn		3093475	0					
ANR	3093620	Identifier	non_black_levels		3093475	1					
ANR	3093621	PrimaryExpression	1		3093475	1					
ANR	3093622	ExpressionStatement	value = ( value | level ) << eprn -> bits_per_colorant	516:4:18723:18773	3093475	6	True				
ANR	3093623	AssignmentExpression	value = ( value | level ) << eprn -> bits_per_colorant		3093475	0		=			
ANR	3093624	Identifier	value		3093475	0					
ANR	3093625	ShiftExpression	( value | level ) << eprn -> bits_per_colorant		3093475	1		<<			
ANR	3093626	InclusiveOrExpression	value | level		3093475	0		|			
ANR	3093627	Identifier	value		3093475	0					
ANR	3093628	Identifier	level		3093475	1					
ANR	3093629	PtrMemberAccess	eprn -> bits_per_colorant		3093475	1					
ANR	3093630	Identifier	eprn		3093475	0					
ANR	3093631	Identifier	bits_per_colorant		3093475	1					
ANR	3093632	ExpressionStatement	level = cyan / step	517:4:18779:18796	3093475	7	True				
ANR	3093633	AssignmentExpression	level = cyan / step		3093475	0		=			
ANR	3093634	Identifier	level		3093475	0					
ANR	3093635	MultiplicativeExpression	cyan / step		3093475	1		/			
ANR	3093636	Identifier	cyan		3093475	0					
ANR	3093637	Identifier	step		3093475	1					
ANR	3093638	IfStatement	if ( level >= eprn -> non_black_levels )		3093475	8					
ANR	3093639	Condition	level >= eprn -> non_black_levels	518:8:18806:18836	3093475	0	True				
ANR	3093640	RelationalExpression	level >= eprn -> non_black_levels		3093475	0		>=			
ANR	3093641	Identifier	level		3093475	0					
ANR	3093642	PtrMemberAccess	eprn -> non_black_levels		3093475	1					
ANR	3093643	Identifier	eprn		3093475	0					
ANR	3093644	Identifier	non_black_levels		3093475	1					
ANR	3093645	ExpressionStatement	level = eprn -> non_black_levels - 1	518:41:18839:18873	3093475	1	True				
ANR	3093646	AssignmentExpression	level = eprn -> non_black_levels - 1		3093475	0		=			
ANR	3093647	Identifier	level		3093475	0					
ANR	3093648	AdditiveExpression	eprn -> non_black_levels - 1		3093475	1		-			
ANR	3093649	PtrMemberAccess	eprn -> non_black_levels		3093475	0					
ANR	3093650	Identifier	eprn		3093475	0					
ANR	3093651	Identifier	non_black_levels		3093475	1					
ANR	3093652	PrimaryExpression	1		3093475	1					
ANR	3093653	ExpressionStatement	value = ( value | level ) << eprn -> bits_per_colorant	519:4:18879:18929	3093475	9	True				
ANR	3093654	AssignmentExpression	value = ( value | level ) << eprn -> bits_per_colorant		3093475	0		=			
ANR	3093655	Identifier	value		3093475	0					
ANR	3093656	ShiftExpression	( value | level ) << eprn -> bits_per_colorant		3093475	1		<<			
ANR	3093657	InclusiveOrExpression	value | level		3093475	0		|			
ANR	3093658	Identifier	value		3093475	0					
ANR	3093659	Identifier	level		3093475	1					
ANR	3093660	PtrMemberAccess	eprn -> bits_per_colorant		3093475	1					
ANR	3093661	Identifier	eprn		3093475	0					
ANR	3093662	Identifier	bits_per_colorant		3093475	1					
ANR	3093663	IfStatement	if ( eprn -> colour_model != eprn_DeviceCMY )		3093475	7					
ANR	3093664	Condition	eprn -> colour_model != eprn_DeviceCMY	521:6:18941:18976	3093475	0	True				
ANR	3093665	EqualityExpression	eprn -> colour_model != eprn_DeviceCMY		3093475	0		!=			
ANR	3093666	PtrMemberAccess	eprn -> colour_model		3093475	0					
ANR	3093667	Identifier	eprn		3093475	0					
ANR	3093668	Identifier	colour_model		3093475	1					
ANR	3093669	Identifier	eprn_DeviceCMY		3093475	1					
ANR	3093670	CompoundStatement		57:44:2663:2663	3093475	1					
ANR	3093671	ExpressionStatement	step = gx_max_color_value / eprn -> black_levels	522:4:18985:19029	3093475	0	True				
ANR	3093672	AssignmentExpression	step = gx_max_color_value / eprn -> black_levels		3093475	0		=			
ANR	3093673	Identifier	step		3093475	0					
ANR	3093674	MultiplicativeExpression	gx_max_color_value / eprn -> black_levels		3093475	1		/			
ANR	3093675	Identifier	gx_max_color_value		3093475	0					
ANR	3093676	PtrMemberAccess	eprn -> black_levels		3093475	1					
ANR	3093677	Identifier	eprn		3093475	0					
ANR	3093678	Identifier	black_levels		3093475	1					
ANR	3093679	ExpressionStatement	level = black / step	523:4:19035:19053	3093475	1	True				
ANR	3093680	AssignmentExpression	level = black / step		3093475	0		=			
ANR	3093681	Identifier	level		3093475	0					
ANR	3093682	MultiplicativeExpression	black / step		3093475	1		/			
ANR	3093683	Identifier	black		3093475	0					
ANR	3093684	Identifier	step		3093475	1					
ANR	3093685	IfStatement	if ( level >= eprn -> black_levels )		3093475	2					
ANR	3093686	Condition	level >= eprn -> black_levels	524:8:19063:19089	3093475	0	True				
ANR	3093687	RelationalExpression	level >= eprn -> black_levels		3093475	0		>=			
ANR	3093688	Identifier	level		3093475	0					
ANR	3093689	PtrMemberAccess	eprn -> black_levels		3093475	1					
ANR	3093690	Identifier	eprn		3093475	0					
ANR	3093691	Identifier	black_levels		3093475	1					
ANR	3093692	ExpressionStatement	level = eprn -> black_levels - 1	524:37:19092:19122	3093475	1	True				
ANR	3093693	AssignmentExpression	level = eprn -> black_levels - 1		3093475	0		=			
ANR	3093694	Identifier	level		3093475	0					
ANR	3093695	AdditiveExpression	eprn -> black_levels - 1		3093475	1		-			
ANR	3093696	PtrMemberAccess	eprn -> black_levels		3093475	0					
ANR	3093697	Identifier	eprn		3093475	0					
ANR	3093698	Identifier	black_levels		3093475	1					
ANR	3093699	PrimaryExpression	1		3093475	1					
ANR	3093700	ExpressionStatement	value |= level	525:4:19128:19142	3093475	3	True				
ANR	3093701	AssignmentExpression	value |= level		3093475	0		|=			
ANR	3093702	Identifier	value		3093475	0					
ANR	3093703	Identifier	level		3093475	1					
ANR	3093704	ExpressionStatement	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"	529:2:19169:19241	3093475	8	True				
ANR	3093705	CallExpression	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%lX.\\n"" , ( unsigned long ) value )"		3093475	0					
ANR	3093706	Callee	if_debug1		3093475	0					
ANR	3093707	Identifier	if_debug1		3093475	0					
ANR	3093708	ArgumentList	EPRN_TRACE_CHAR		3093475	1					
ANR	3093709	Argument	EPRN_TRACE_CHAR		3093475	0					
ANR	3093710	Identifier	EPRN_TRACE_CHAR		3093475	0					
ANR	3093711	Argument	"""  returning 0x%lX.\\n"""		3093475	1					
ANR	3093712	PrimaryExpression	"""  returning 0x%lX.\\n"""		3093475	0					
ANR	3093713	Argument	( unsigned long ) value		3093475	2					
ANR	3093714	CastExpression	( unsigned long ) value		3093475	0					
ANR	3093715	CastTarget	unsigned long		3093475	0					
ANR	3093716	Identifier	value		3093475	1					
ANR	3093717	ReturnStatement	return value ;	531:2:19252:19264	3093475	9	True				
ANR	3093718	Identifier	value		3093475	0					
ANR	3093719	ReturnType	gx_color_index		3093475	1					
ANR	3093720	Identifier	eprn_map_cmyk_color_flex		3093475	2					
ANR	3093721	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3093475	3					
ANR	3093722	Parameter	gx_device * device	463:40:16267:16283	3093475	0	True				
ANR	3093723	ParameterType	gx_device *		3093475	0					
ANR	3093724	Identifier	device		3093475	1					
ANR	3093725	Parameter	const gx_color_value cv [ ]	464:2:16288:16312	3093475	1	True				
ANR	3093726	ParameterType	const gx_color_value [ ]		3093475	0					
ANR	3093727	Identifier	cv		3093475	1					
ANR	3093728	CFGEntryNode	ENTRY		3093475		True				
ANR	3093729	CFGExitNode	EXIT		3093475		True				
ANR	3093730	Symbol	magenta		3093475						
ANR	3093731	Symbol	eprn -> black_levels		3093475						
ANR	3093732	Symbol	* eprn		3093475						
ANR	3093733	Symbol	level		3093475						
ANR	3093734	Symbol	eprn_DeviceCMY		3093475						
ANR	3093735	Symbol	black		3093475						
ANR	3093736	Symbol	yellow		3093475						
ANR	3093737	Symbol	eprn		3093475						
ANR	3093738	Symbol	cyan		3093475						
ANR	3093739	Symbol	eprn -> colour_model		3093475						
ANR	3093740	Symbol	eprn -> non_black_levels		3093475						
ANR	3093741	Symbol	& ( ( eprn_Device * ) device ) -> eprn		3093475						
ANR	3093742	Symbol	eprn_DeviceGray		3093475						
ANR	3093743	Symbol	cv		3093475						
ANR	3093744	Symbol	gx_max_color_value		3093475						
ANR	3093745	Symbol	* cv		3093475						
ANR	3093746	Symbol	step		3093475						
ANR	3093747	Symbol	EPRN_TRACE_CHAR		3093475						
ANR	3093748	Symbol	device		3093475						
ANR	3093749	Symbol	value		3093475						
ANR	3093750	Symbol	eprn -> bits_per_colorant		3093475						
ANR	3093751	Function	eprn_map_cmyk_color_max	544:0:19638:20279							
ANR	3093752	FunctionDef	"eprn_map_cmyk_color_max (gx_device * device , const gx_color_value cv [ ])"		3093751	0					
ANR	3093753	CompoundStatement		546:0:19725:20279	3093751	0					
ANR	3093754	IdentifierDeclStatement	"gx_color_value cyan = cv [ 0 ] , magenta = cv [ 1 ] , yellow = cv [ 2 ] , black = cv [ 3 ] ;"	547:2:19729:19804	3093751	0	True				
ANR	3093755	IdentifierDecl	cyan = cv [ 0 ]		3093751	0					
ANR	3093756	IdentifierDeclType	gx_color_value		3093751	0					
ANR	3093757	Identifier	cyan		3093751	1					
ANR	3093758	AssignmentExpression	cyan = cv [ 0 ]		3093751	2		=			
ANR	3093759	Identifier	cyan		3093751	0					
ANR	3093760	ArrayIndexing	cv [ 0 ]		3093751	1					
ANR	3093761	Identifier	cv		3093751	0					
ANR	3093762	PrimaryExpression	0		3093751	1					
ANR	3093763	IdentifierDecl	magenta = cv [ 1 ]		3093751	1					
ANR	3093764	IdentifierDeclType	gx_color_value		3093751	0					
ANR	3093765	Identifier	magenta		3093751	1					
ANR	3093766	AssignmentExpression	magenta = cv [ 1 ]		3093751	2		=			
ANR	3093767	Identifier	magenta		3093751	0					
ANR	3093768	ArrayIndexing	cv [ 1 ]		3093751	1					
ANR	3093769	Identifier	cv		3093751	0					
ANR	3093770	PrimaryExpression	1		3093751	1					
ANR	3093771	IdentifierDecl	yellow = cv [ 2 ]		3093751	2					
ANR	3093772	IdentifierDeclType	gx_color_value		3093751	0					
ANR	3093773	Identifier	yellow		3093751	1					
ANR	3093774	AssignmentExpression	yellow = cv [ 2 ]		3093751	2		=			
ANR	3093775	Identifier	yellow		3093751	0					
ANR	3093776	ArrayIndexing	cv [ 2 ]		3093751	1					
ANR	3093777	Identifier	cv		3093751	0					
ANR	3093778	PrimaryExpression	2		3093751	1					
ANR	3093779	IdentifierDecl	black = cv [ 3 ]		3093751	3					
ANR	3093780	IdentifierDeclType	gx_color_value		3093751	0					
ANR	3093781	Identifier	black		3093751	1					
ANR	3093782	AssignmentExpression	black = cv [ 3 ]		3093751	2		=			
ANR	3093783	Identifier	black		3093751	0					
ANR	3093784	ArrayIndexing	cv [ 3 ]		3093751	1					
ANR	3093785	Identifier	cv		3093751	0					
ANR	3093786	PrimaryExpression	3		3093751	1					
ANR	3093787	IdentifierDeclStatement	gx_color_index value ;	548:2:19808:19828	3093751	1	True				
ANR	3093788	IdentifierDecl	value		3093751	0					
ANR	3093789	IdentifierDeclType	gx_color_index		3093751	0					
ANR	3093790	Identifier	value		3093751	1					
ANR	3093791	ExpressionStatement	"if_debug4 ( EPRN_TRACE_CHAR , ""! eprn_map_cmyk_color_max() called for CMYK = (%hu, %hu, %hu, %hu),\\n"" , cyan , magenta , yellow , black )"	551:2:19851:19990	3093751	2	True				
ANR	3093792	CallExpression	"if_debug4 ( EPRN_TRACE_CHAR , ""! eprn_map_cmyk_color_max() called for CMYK = (%hu, %hu, %hu, %hu),\\n"" , cyan , magenta , yellow , black )"		3093751	0					
ANR	3093793	Callee	if_debug4		3093751	0					
ANR	3093794	Identifier	if_debug4		3093751	0					
ANR	3093795	ArgumentList	EPRN_TRACE_CHAR		3093751	1					
ANR	3093796	Argument	EPRN_TRACE_CHAR		3093751	0					
ANR	3093797	Identifier	EPRN_TRACE_CHAR		3093751	0					
ANR	3093798	Argument	"""! eprn_map_cmyk_color_max() called for CMYK = (%hu, %hu, %hu, %hu),\\n"""		3093751	1					
ANR	3093799	PrimaryExpression	"""! eprn_map_cmyk_color_max() called for CMYK = (%hu, %hu, %hu, %hu),\\n"""		3093751	0					
ANR	3093800	Argument	cyan		3093751	2					
ANR	3093801	Identifier	cyan		3093751	0					
ANR	3093802	Argument	magenta		3093751	3					
ANR	3093803	Identifier	magenta		3093751	0					
ANR	3093804	Argument	yellow		3093751	4					
ANR	3093805	Identifier	yellow		3093751	0					
ANR	3093806	Argument	black		3093751	5					
ANR	3093807	Identifier	black		3093751	0					
ANR	3093808	ExpressionStatement	value = dominant_8bits ( black )	556:2:20002:20031	3093751	3	True				
ANR	3093809	AssignmentExpression	value = dominant_8bits ( black )		3093751	0		=			
ANR	3093810	Identifier	value		3093751	0					
ANR	3093811	CallExpression	dominant_8bits ( black )		3093751	1					
ANR	3093812	Callee	dominant_8bits		3093751	0					
ANR	3093813	Identifier	dominant_8bits		3093751	0					
ANR	3093814	ArgumentList	black		3093751	1					
ANR	3093815	Argument	black		3093751	0					
ANR	3093816	Identifier	black		3093751	0					
ANR	3093817	ExpressionStatement	value |= dominant_8bits ( cyan ) << 8	557:2:20035:20073	3093751	4	True				
ANR	3093818	AssignmentExpression	value |= dominant_8bits ( cyan ) << 8		3093751	0		|=			
ANR	3093819	Identifier	value		3093751	0					
ANR	3093820	ShiftExpression	dominant_8bits ( cyan ) << 8		3093751	1		<<			
ANR	3093821	CallExpression	dominant_8bits ( cyan )		3093751	0					
ANR	3093822	Callee	dominant_8bits		3093751	0					
ANR	3093823	Identifier	dominant_8bits		3093751	0					
ANR	3093824	ArgumentList	cyan		3093751	1					
ANR	3093825	Argument	cyan		3093751	0					
ANR	3093826	Identifier	cyan		3093751	0					
ANR	3093827	PrimaryExpression	8		3093751	1					
ANR	3093828	ExpressionStatement	value |= dominant_8bits ( magenta ) << 16	558:2:20077:20115	3093751	5	True				
ANR	3093829	AssignmentExpression	value |= dominant_8bits ( magenta ) << 16		3093751	0		|=			
ANR	3093830	Identifier	value		3093751	0					
ANR	3093831	ShiftExpression	dominant_8bits ( magenta ) << 16		3093751	1		<<			
ANR	3093832	CallExpression	dominant_8bits ( magenta )		3093751	0					
ANR	3093833	Callee	dominant_8bits		3093751	0					
ANR	3093834	Identifier	dominant_8bits		3093751	0					
ANR	3093835	ArgumentList	magenta		3093751	1					
ANR	3093836	Argument	magenta		3093751	0					
ANR	3093837	Identifier	magenta		3093751	0					
ANR	3093838	PrimaryExpression	16		3093751	1					
ANR	3093839	ExpressionStatement	value |= dominant_8bits ( yellow ) << 24	559:2:20119:20157	3093751	6	True				
ANR	3093840	AssignmentExpression	value |= dominant_8bits ( yellow ) << 24		3093751	0		|=			
ANR	3093841	Identifier	value		3093751	0					
ANR	3093842	ShiftExpression	dominant_8bits ( yellow ) << 24		3093751	1		<<			
ANR	3093843	CallExpression	dominant_8bits ( yellow )		3093751	0					
ANR	3093844	Callee	dominant_8bits		3093751	0					
ANR	3093845	Identifier	dominant_8bits		3093751	0					
ANR	3093846	ArgumentList	yellow		3093751	1					
ANR	3093847	Argument	yellow		3093751	0					
ANR	3093848	Identifier	yellow		3093751	0					
ANR	3093849	PrimaryExpression	24		3093751	1					
ANR	3093850	ExpressionStatement	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%08lX.\\n"" , ( unsigned long ) value )"	562:2:20180:20254	3093751	7	True				
ANR	3093851	CallExpression	"if_debug1 ( EPRN_TRACE_CHAR , ""  returning 0x%08lX.\\n"" , ( unsigned long ) value )"		3093751	0					
ANR	3093852	Callee	if_debug1		3093751	0					
ANR	3093853	Identifier	if_debug1		3093751	0					
ANR	3093854	ArgumentList	EPRN_TRACE_CHAR		3093751	1					
ANR	3093855	Argument	EPRN_TRACE_CHAR		3093751	0					
ANR	3093856	Identifier	EPRN_TRACE_CHAR		3093751	0					
ANR	3093857	Argument	"""  returning 0x%08lX.\\n"""		3093751	1					
ANR	3093858	PrimaryExpression	"""  returning 0x%08lX.\\n"""		3093751	0					
ANR	3093859	Argument	( unsigned long ) value		3093751	2					
ANR	3093860	CastExpression	( unsigned long ) value		3093751	0					
ANR	3093861	CastTarget	unsigned long		3093751	0					
ANR	3093862	Identifier	value		3093751	1					
ANR	3093863	ReturnStatement	return value ;	564:2:20265:20277	3093751	8	True				
ANR	3093864	Identifier	value		3093751	0					
ANR	3093865	ReturnType	gx_color_index		3093751	1					
ANR	3093866	Identifier	eprn_map_cmyk_color_max		3093751	2					
ANR	3093867	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3093751	3					
ANR	3093868	Parameter	gx_device * device	544:39:19677:19693	3093751	0	True				
ANR	3093869	ParameterType	gx_device *		3093751	0					
ANR	3093870	Identifier	device		3093751	1					
ANR	3093871	Parameter	const gx_color_value cv [ ]	545:2:19698:19722	3093751	1	True				
ANR	3093872	ParameterType	const gx_color_value [ ]		3093751	0					
ANR	3093873	Identifier	cv		3093751	1					
ANR	3093874	CFGEntryNode	ENTRY		3093751		True				
ANR	3093875	CFGExitNode	EXIT		3093751		True				
ANR	3093876	Symbol	magenta		3093751						
ANR	3093877	Symbol	cv		3093751						
ANR	3093878	Symbol	black		3093751						
ANR	3093879	Symbol	yellow		3093751						
ANR	3093880	Symbol	* cv		3093751						
ANR	3093881	Symbol	EPRN_TRACE_CHAR		3093751						
ANR	3093882	Symbol	dominant_8bits		3093751						
ANR	3093883	Symbol	device		3093751						
ANR	3093884	Symbol	cyan		3093751						
ANR	3093885	Symbol	value		3093751						
ANR	3093886	Function	eprn_map_cmyk_color_glob	575:0:20612:21045							
ANR	3093887	FunctionDef	"eprn_map_cmyk_color_glob (gx_device * device , const gx_color_value cv [ ])"		3093886	0					
ANR	3093888	CompoundStatement		576:0:20698:21045	3093886	0					
ANR	3093889	IdentifierDeclStatement	const eprn_Eprn * eprn = & ( ( eprn_Device * ) device ) -> eprn ;	577:2:20702:20756	3093886	0	True				
ANR	3093890	IdentifierDecl	* eprn = & ( ( eprn_Device * ) device ) -> eprn		3093886	0					
ANR	3093891	IdentifierDeclType	const eprn_Eprn *		3093886	0					
ANR	3093892	Identifier	eprn		3093886	1					
ANR	3093893	AssignmentExpression	* eprn = & ( ( eprn_Device * ) device ) -> eprn		3093886	2		=			
ANR	3093894	Identifier	eprn		3093886	0					
ANR	3093895	UnaryOperationExpression	& ( ( eprn_Device * ) device ) -> eprn		3093886	1					
ANR	3093896	UnaryOperator	&		3093886	0					
ANR	3093897	PtrMemberAccess	( ( eprn_Device * ) device ) -> eprn		3093886	1					
ANR	3093898	CastExpression	( eprn_Device * ) device		3093886	0					
ANR	3093899	CastTarget	eprn_Device *		3093886	0					
ANR	3093900	Identifier	device		3093886	1					
ANR	3093901	Identifier	eprn		3093886	1					
ANR	3093902	IfStatement	if ( eprn -> intensity_rendering == eprn_IR_FloydSteinberg )		3093886	1					
ANR	3093903	Condition	eprn -> intensity_rendering == eprn_IR_FloydSteinberg	578:6:20764:20814	3093886	0	True				
ANR	3093904	EqualityExpression	eprn -> intensity_rendering == eprn_IR_FloydSteinberg		3093886	0		==			
ANR	3093905	PtrMemberAccess	eprn -> intensity_rendering		3093886	0					
ANR	3093906	Identifier	eprn		3093886	0					
ANR	3093907	Identifier	intensity_rendering		3093886	1					
ANR	3093908	Identifier	eprn_IR_FloydSteinberg		3093886	1					
ANR	3093909	ReturnStatement	"return eprn_map_cmyk_color_max ( device , cv ) ;"	579:4:20821:20863	3093886	1	True				
ANR	3093910	CallExpression	"eprn_map_cmyk_color_max ( device , cv )"		3093886	0					
ANR	3093911	Callee	eprn_map_cmyk_color_max		3093886	0					
ANR	3093912	Identifier	eprn_map_cmyk_color_max		3093886	0					
ANR	3093913	ArgumentList	device		3093886	1					
ANR	3093914	Argument	device		3093886	0					
ANR	3093915	Identifier	device		3093886	0					
ANR	3093916	Argument	cv		3093886	1					
ANR	3093917	Identifier	cv		3093886	0					
ANR	3093918	ElseStatement	else		3093886	0					
ANR	3093919	IfStatement	if ( device -> color_info . max_gray > 1 || device -> color_info . max_color > 1 )		3093886	0					
ANR	3093920	Condition	device -> color_info . max_gray > 1 || device -> color_info . max_color > 1	580:11:20876:20942	3093886	0	True				
ANR	3093921	OrExpression	device -> color_info . max_gray > 1 || device -> color_info . max_color > 1		3093886	0		||			
ANR	3093922	RelationalExpression	device -> color_info . max_gray > 1		3093886	0		>			
ANR	3093923	MemberAccess	device -> color_info . max_gray		3093886	0					
ANR	3093924	PtrMemberAccess	device -> color_info		3093886	0					
ANR	3093925	Identifier	device		3093886	0					
ANR	3093926	Identifier	color_info		3093886	1					
ANR	3093927	Identifier	max_gray		3093886	1					
ANR	3093928	PrimaryExpression	1		3093886	1					
ANR	3093929	RelationalExpression	device -> color_info . max_color > 1		3093886	1		>			
ANR	3093930	MemberAccess	device -> color_info . max_color		3093886	0					
ANR	3093931	PtrMemberAccess	device -> color_info		3093886	0					
ANR	3093932	Identifier	device		3093886	0					
ANR	3093933	Identifier	color_info		3093886	1					
ANR	3093934	Identifier	max_color		3093886	1					
ANR	3093935	PrimaryExpression	1		3093886	1					
ANR	3093936	ReturnStatement	"return eprn_map_cmyk_color_flex ( device , cv ) ;"	581:4:20949:20992	3093886	1	True				
ANR	3093937	CallExpression	"eprn_map_cmyk_color_flex ( device , cv )"		3093886	0					
ANR	3093938	Callee	eprn_map_cmyk_color_flex		3093886	0					
ANR	3093939	Identifier	eprn_map_cmyk_color_flex		3093886	0					
ANR	3093940	ArgumentList	device		3093886	1					
ANR	3093941	Argument	device		3093886	0					
ANR	3093942	Identifier	device		3093886	0					
ANR	3093943	Argument	cv		3093886	1					
ANR	3093944	Identifier	cv		3093886	0					
ANR	3093945	ElseStatement	else		3093886	0					
ANR	3093946	ReturnStatement	"return eprn_map_cmyk_color ( device , cv ) ;"	583:4:21005:21043	3093886	0	True				
ANR	3093947	CallExpression	"eprn_map_cmyk_color ( device , cv )"		3093886	0					
ANR	3093948	Callee	eprn_map_cmyk_color		3093886	0					
ANR	3093949	Identifier	eprn_map_cmyk_color		3093886	0					
ANR	3093950	ArgumentList	device		3093886	1					
ANR	3093951	Argument	device		3093886	0					
ANR	3093952	Identifier	device		3093886	0					
ANR	3093953	Argument	cv		3093886	1					
ANR	3093954	Identifier	cv		3093886	0					
ANR	3093955	ReturnType	gx_color_index		3093886	1					
ANR	3093956	Identifier	eprn_map_cmyk_color_glob		3093886	2					
ANR	3093957	ParameterList	"gx_device * device , const gx_color_value cv [ ]"		3093886	3					
ANR	3093958	Parameter	gx_device * device	575:40:20652:20668	3093886	0	True				
ANR	3093959	ParameterType	gx_device *		3093886	0					
ANR	3093960	Identifier	device		3093886	1					
ANR	3093961	Parameter	const gx_color_value cv [ ]	575:59:20671:20695	3093886	1	True				
ANR	3093962	ParameterType	const gx_color_value [ ]		3093886	0					
ANR	3093963	Identifier	cv		3093886	1					
ANR	3093964	CFGEntryNode	ENTRY		3093886		True				
ANR	3093965	CFGExitNode	EXIT		3093886		True				
ANR	3093966	Symbol	eprn_map_cmyk_color_max		3093886						
ANR	3093967	Symbol	* eprn		3093886						
ANR	3093968	Symbol	device -> color_info		3093886						
ANR	3093969	Symbol	device -> color_info . max_gray		3093886						
ANR	3093970	Symbol	eprn_map_cmyk_color_flex		3093886						
ANR	3093971	Symbol	eprn		3093886						
ANR	3093972	Symbol	eprn_IR_FloydSteinberg		3093886						
ANR	3093973	Symbol	& ( ( eprn_Device * ) device ) -> eprn		3093886						
ANR	3093974	Symbol	* device		3093886						
ANR	3093975	Symbol	eprn_map_cmyk_color		3093886						
ANR	3093976	Symbol	cv		3093886						
ANR	3093977	Symbol	device -> color_info . max_color		3093886						
ANR	3093978	Symbol	device		3093886						
ANR	3093979	Symbol	eprn -> intensity_rendering		3093886						
ANR	3093980	Function	eprn_finalize	607:0:22003:23508							
ANR	3093981	FunctionDef	"eprn_finalize (bool is_RGB , unsigned int non_black_levels , int planes , eprn_OctetString * plane , eprn_Octet * * ptr , int pixels)"		3093980	0					
ANR	3093982	CompoundStatement		609:0:22135:23508	3093980	0					
ANR	3093983	IdentifierDeclStatement	int j ;	610:2:22139:22144	3093980	0	True				
ANR	3093984	IdentifierDecl	j		3093980	0					
ANR	3093985	IdentifierDeclType	int		3093980	0					
ANR	3093986	Identifier	j		3093980	1					
ANR	3093987	IfStatement	if ( pixels % 8 != 0 )		3093980	1					
ANR	3093988	Condition	pixels % 8 != 0	615:6:22323:22337	3093980	0	True				
ANR	3093989	EqualityExpression	pixels % 8 != 0		3093980	0		!=			
ANR	3093990	MultiplicativeExpression	pixels % 8		3093980	0		%			
ANR	3093991	Identifier	pixels		3093980	0					
ANR	3093992	PrimaryExpression	8		3093980	1					
ANR	3093993	PrimaryExpression	0		3093980	1					
ANR	3093994	CompoundStatement		8:4:210:236	3093980	1					
ANR	3093995	IdentifierDeclStatement	int shift = 8 - pixels % 8 ;	616:4:22346:22372	3093980	0	True				
ANR	3093996	IdentifierDecl	shift = 8 - pixels % 8		3093980	0					
ANR	3093997	IdentifierDeclType	int		3093980	0					
ANR	3093998	Identifier	shift		3093980	1					
ANR	3093999	AssignmentExpression	shift = 8 - pixels % 8		3093980	2		=			
ANR	3094000	Identifier	shift		3093980	0					
ANR	3094001	AdditiveExpression	8 - pixels % 8		3093980	1		-			
ANR	3094002	PrimaryExpression	8		3093980	0					
ANR	3094003	MultiplicativeExpression	pixels % 8		3093980	1		%			
ANR	3094004	Identifier	pixels		3093980	0					
ANR	3094005	PrimaryExpression	8		3093980	1					
ANR	3094006	IfStatement	if ( is_RGB )		3093980	1					
ANR	3094007	Condition	is_RGB	618:8:22383:22388	3093980	0	True				
ANR	3094008	Identifier	is_RGB		3093980	0					
ANR	3094009	CompoundStatement		14:6:423:481	3093980	1					
ANR	3094010	IdentifierDeclStatement	eprn_Octet imax = non_black_levels - 1 ;	621:6:22513:22551	3093980	0	True				
ANR	3094011	IdentifierDecl	imax = non_black_levels - 1		3093980	0					
ANR	3094012	IdentifierDeclType	eprn_Octet		3093980	0					
ANR	3094013	Identifier	imax		3093980	1					
ANR	3094014	AssignmentExpression	imax = non_black_levels - 1		3093980	2		=			
ANR	3094015	Identifier	imax		3093980	0					
ANR	3094016	AdditiveExpression	non_black_levels - 1		3093980	1		-			
ANR	3094017	Identifier	non_black_levels		3093980	0					
ANR	3094018	PrimaryExpression	1		3093980	1					
ANR	3094019	IdentifierDeclStatement	"int c , rgb_planes = eprn_bits_for_levels ( non_black_levels ) ;"	622:6:22559:22617	3093980	1	True				
ANR	3094020	IdentifierDecl	c		3093980	0					
ANR	3094021	IdentifierDeclType	int		3093980	0					
ANR	3094022	Identifier	c		3093980	1					
ANR	3094023	IdentifierDecl	rgb_planes = eprn_bits_for_levels ( non_black_levels )		3093980	1					
ANR	3094024	IdentifierDeclType	int		3093980	0					
ANR	3094025	Identifier	rgb_planes		3093980	1					
ANR	3094026	AssignmentExpression	rgb_planes = eprn_bits_for_levels ( non_black_levels )		3093980	2		=			
ANR	3094027	Identifier	rgb_planes		3093980	0					
ANR	3094028	CallExpression	eprn_bits_for_levels ( non_black_levels )		3093980	1					
ANR	3094029	Callee	eprn_bits_for_levels		3093980	0					
ANR	3094030	Identifier	eprn_bits_for_levels		3093980	0					
ANR	3094031	ArgumentList	non_black_levels		3093980	1					
ANR	3094032	Argument	non_black_levels		3093980	0					
ANR	3094033	Identifier	non_black_levels		3093980	0					
ANR	3094034	ExpressionStatement	j = 0	624:6:22626:22631	3093980	2	True				
ANR	3094035	AssignmentExpression	j = 0		3093980	0		=			
ANR	3094036	Identifier	j		3093980	0					
ANR	3094037	PrimaryExpression	0		3093980	1					
ANR	3094038	ForStatement	for ( c = 0 ; c < 3 ; c ++ )		3093980	3					
ANR	3094039	ForInit	c = 0 ;	627:11:22695:22700	3093980	0	True				
ANR	3094040	AssignmentExpression	c = 0		3093980	0		=			
ANR	3094041	Identifier	c		3093980	0					
ANR	3094042	PrimaryExpression	0		3093980	1					
ANR	3094043	Condition	c < 3	627:18:22702:22706	3093980	1	True				
ANR	3094044	RelationalExpression	c < 3		3093980	0		<			
ANR	3094045	Identifier	c		3093980	0					
ANR	3094046	PrimaryExpression	3		3093980	1					
ANR	3094047	PostIncDecOperationExpression	c ++	627:25:22709:22711	3093980	2	True				
ANR	3094048	Identifier	c		3093980	0					
ANR	3094049	IncDec	++		3093980	1					
ANR	3094050	CompoundStatement		21:8:621:626	3093980	3					
ANR	3094051	IdentifierDeclStatement	eprn_Octet value = imax ;	628:8:22724:22747	3093980	0	True				
ANR	3094052	IdentifierDecl	value = imax		3093980	0					
ANR	3094053	IdentifierDeclType	eprn_Octet		3093980	0					
ANR	3094054	Identifier	value		3093980	1					
ANR	3094055	AssignmentExpression	value = imax		3093980	2		=			
ANR	3094056	Identifier	imax		3093980	0					
ANR	3094057	Identifier	imax		3093980	1					
ANR	3094058	IdentifierDeclStatement	int m ;	629:8:22757:22762	3093980	1	True				
ANR	3094059	IdentifierDecl	m		3093980	0					
ANR	3094060	IdentifierDeclType	int		3093980	0					
ANR	3094061	Identifier	m		3093980	1					
ANR	3094062	ForStatement	"for ( m = 0 ; m < rgb_planes ; m ++ , j ++ )"		3093980	2					
ANR	3094063	ForInit	m = 0 ;	632:13:22831:22836	3093980	0	True				
ANR	3094064	AssignmentExpression	m = 0		3093980	0		=			
ANR	3094065	Identifier	m		3093980	0					
ANR	3094066	PrimaryExpression	0		3093980	1					
ANR	3094067	Condition	m < rgb_planes	632:20:22838:22851	3093980	1	True				
ANR	3094068	RelationalExpression	m < rgb_planes		3093980	0		<			
ANR	3094069	Identifier	m		3093980	0					
ANR	3094070	Identifier	rgb_planes		3093980	1					
ANR	3094071	Expression	"m ++ , j ++"	632:36:22854:22861	3093980	2	True				
ANR	3094072	PostIncDecOperationExpression	m ++		3093980	0					
ANR	3094073	Identifier	m		3093980	0					
ANR	3094074	IncDec	++		3093980	1					
ANR	3094075	PostIncDecOperationExpression	j ++		3093980	1					
ANR	3094076	Identifier	j		3093980	0					
ANR	3094077	IncDec	++		3093980	1					
ANR	3094078	CompoundStatement		26:10:778:783	3093980	3					
ANR	3094079	IdentifierDeclStatement	eprn_Octet bit = value & 1 ;	633:10:22876:22902	3093980	0	True				
ANR	3094080	IdentifierDecl	bit = value & 1		3093980	0					
ANR	3094081	IdentifierDeclType	eprn_Octet		3093980	0					
ANR	3094082	Identifier	bit		3093980	1					
ANR	3094083	AssignmentExpression	bit = value & 1		3093980	2		=			
ANR	3094084	Identifier	bit		3093980	0					
ANR	3094085	BitAndExpression	value & 1		3093980	1		&			
ANR	3094086	Identifier	value		3093980	0					
ANR	3094087	PrimaryExpression	1		3093980	1					
ANR	3094088	IdentifierDeclStatement	int p ;	634:10:22914:22919	3093980	1	True				
ANR	3094089	IdentifierDecl	p		3093980	0					
ANR	3094090	IdentifierDeclType	int		3093980	0					
ANR	3094091	Identifier	p		3093980	1					
ANR	3094092	ExpressionStatement	value = value >> 1	636:10:22932:22950	3093980	2	True				
ANR	3094093	AssignmentExpression	value = value >> 1		3093980	0		=			
ANR	3094094	Identifier	value		3093980	0					
ANR	3094095	ShiftExpression	value >> 1		3093980	1		>>			
ANR	3094096	Identifier	value		3093980	0					
ANR	3094097	PrimaryExpression	1		3093980	1					
ANR	3094098	ForStatement	for ( p = 0 ; p < shift ; p ++ )		3093980	3					
ANR	3094099	ForInit	p = 0 ;	639:15:23037:23042	3093980	0	True				
ANR	3094100	AssignmentExpression	p = 0		3093980	0		=			
ANR	3094101	Identifier	p		3093980	0					
ANR	3094102	PrimaryExpression	0		3093980	1					
ANR	3094103	Condition	p < shift	639:22:23044:23052	3093980	1	True				
ANR	3094104	RelationalExpression	p < shift		3093980	0		<			
ANR	3094105	Identifier	p		3093980	0					
ANR	3094106	Identifier	shift		3093980	1					
ANR	3094107	PostIncDecOperationExpression	p ++	639:33:23055:23057	3093980	2	True				
ANR	3094108	Identifier	p		3093980	0					
ANR	3094109	IncDec	++		3093980	1					
ANR	3094110	ExpressionStatement	* ptr [ j ] = ( * ptr [ j ] << 1 ) | bit	640:12:23072:23102	3093980	3	True				
ANR	3094111	AssignmentExpression	* ptr [ j ] = ( * ptr [ j ] << 1 ) | bit		3093980	0		=			
ANR	3094112	UnaryOperationExpression	* ptr [ j ]		3093980	0					
ANR	3094113	UnaryOperator	*		3093980	0					
ANR	3094114	ArrayIndexing	ptr [ j ]		3093980	1					
ANR	3094115	Identifier	ptr		3093980	0					
ANR	3094116	Identifier	j		3093980	1					
ANR	3094117	InclusiveOrExpression	( * ptr [ j ] << 1 ) | bit		3093980	1		|			
ANR	3094118	ShiftExpression	* ptr [ j ] << 1		3093980	0		<<			
ANR	3094119	UnaryOperationExpression	* ptr [ j ]		3093980	0					
ANR	3094120	UnaryOperator	*		3093980	0					
ANR	3094121	ArrayIndexing	ptr [ j ]		3093980	1					
ANR	3094122	Identifier	ptr		3093980	0					
ANR	3094123	Identifier	j		3093980	1					
ANR	3094124	PrimaryExpression	1		3093980	1					
ANR	3094125	Identifier	bit		3093980	1					
ANR	3094126	ElseStatement	else		3093980	0					
ANR	3094127	ForStatement	for ( j = 0 ; j < planes ; j ++ )		3093980	0					
ANR	3094128	ForInit	j = 0 ;	645:11:23168:23173	3093980	0	True				
ANR	3094129	AssignmentExpression	j = 0		3093980	0		=			
ANR	3094130	Identifier	j		3093980	0					
ANR	3094131	PrimaryExpression	0		3093980	1					
ANR	3094132	Condition	j < planes	645:18:23175:23184	3093980	1	True				
ANR	3094133	RelationalExpression	j < planes		3093980	0		<			
ANR	3094134	Identifier	j		3093980	0					
ANR	3094135	Identifier	planes		3093980	1					
ANR	3094136	PostIncDecOperationExpression	j ++	645:30:23187:23189	3093980	2	True				
ANR	3094137	Identifier	j		3093980	0					
ANR	3094138	IncDec	++		3093980	1					
ANR	3094139	ExpressionStatement	* ptr [ j ] = * ptr [ j ] << shift	646:8:23200:23226	3093980	3	True				
ANR	3094140	AssignmentExpression	* ptr [ j ] = * ptr [ j ] << shift		3093980	0		=			
ANR	3094141	UnaryOperationExpression	* ptr [ j ]		3093980	0					
ANR	3094142	UnaryOperator	*		3093980	0					
ANR	3094143	ArrayIndexing	ptr [ j ]		3093980	1					
ANR	3094144	Identifier	ptr		3093980	0					
ANR	3094145	Identifier	j		3093980	1					
ANR	3094146	ShiftExpression	* ptr [ j ] << shift		3093980	1		<<			
ANR	3094147	UnaryOperationExpression	* ptr [ j ]		3093980	0					
ANR	3094148	UnaryOperator	*		3093980	0					
ANR	3094149	ArrayIndexing	ptr [ j ]		3093980	1					
ANR	3094150	Identifier	ptr		3093980	0					
ANR	3094151	Identifier	j		3093980	1					
ANR	3094152	Identifier	shift		3093980	1					
ANR	3094153	ForStatement	for ( j = 0 ; j < planes ; j ++ )		3093980	2					
ANR	3094154	ForInit	j = 0 ;	649:9:23280:23285	3093980	0	True				
ANR	3094155	AssignmentExpression	j = 0		3093980	0		=			
ANR	3094156	Identifier	j		3093980	0					
ANR	3094157	PrimaryExpression	0		3093980	1					
ANR	3094158	Condition	j < planes	649:16:23287:23296	3093980	1	True				
ANR	3094159	RelationalExpression	j < planes		3093980	0		<			
ANR	3094160	Identifier	j		3093980	0					
ANR	3094161	Identifier	planes		3093980	1					
ANR	3094162	PostIncDecOperationExpression	j ++	649:28:23299:23301	3093980	2	True				
ANR	3094163	Identifier	j		3093980	0					
ANR	3094164	IncDec	++		3093980	1					
ANR	3094165	ExpressionStatement	ptr [ j ] ++	649:33:23304:23312	3093980	3	True				
ANR	3094166	PostIncDecOperationExpression	ptr [ j ] ++		3093980	0					
ANR	3094167	ArrayIndexing	ptr [ j ]		3093980	0					
ANR	3094168	Identifier	ptr		3093980	0					
ANR	3094169	Identifier	j		3093980	1					
ANR	3094170	IncDec	++		3093980	1					
ANR	3094171	ForStatement	for ( j = 0 ; j < planes ; j ++ )		3093980	2					
ANR	3094172	ForInit	j = 0 ;	653:7:23375:23380	3093980	0	True				
ANR	3094173	AssignmentExpression	j = 0		3093980	0		=			
ANR	3094174	Identifier	j		3093980	0					
ANR	3094175	PrimaryExpression	0		3093980	1					
ANR	3094176	Condition	j < planes	653:14:23382:23391	3093980	1	True				
ANR	3094177	RelationalExpression	j < planes		3093980	0		<			
ANR	3094178	Identifier	j		3093980	0					
ANR	3094179	Identifier	planes		3093980	1					
ANR	3094180	PostIncDecOperationExpression	j ++	653:26:23394:23396	3093980	2	True				
ANR	3094181	Identifier	j		3093980	0					
ANR	3094182	IncDec	++		3093980	1					
ANR	3094183	CompoundStatement		45:31:1263:1263	3093980	3					
ANR	3094184	IfStatement	if ( pixels == 0 )		3093980	0					
ANR	3094185	Condition	pixels == 0	654:8:23409:23419	3093980	0	True				
ANR	3094186	EqualityExpression	pixels == 0		3093980	0		==			
ANR	3094187	Identifier	pixels		3093980	0					
ANR	3094188	PrimaryExpression	0		3093980	1					
ANR	3094189	ExpressionStatement	plane [ j ] . length = 0	654:21:23422:23441	3093980	1	True				
ANR	3094190	AssignmentExpression	plane [ j ] . length = 0		3093980	0		=			
ANR	3094191	MemberAccess	plane [ j ] . length		3093980	0					
ANR	3094192	ArrayIndexing	plane [ j ]		3093980	0					
ANR	3094193	Identifier	plane		3093980	0					
ANR	3094194	Identifier	j		3093980	1					
ANR	3094195	Identifier	length		3093980	1					
ANR	3094196	PrimaryExpression	0		3093980	1					
ANR	3094197	ElseStatement	else		3093980	0					
ANR	3094198	ExpressionStatement	plane [ j ] . length = ptr [ j ] - plane [ j ] . str	655:9:23452:23491	3093980	0	True				
ANR	3094199	AssignmentExpression	plane [ j ] . length = ptr [ j ] - plane [ j ] . str		3093980	0		=			
ANR	3094200	MemberAccess	plane [ j ] . length		3093980	0					
ANR	3094201	ArrayIndexing	plane [ j ]		3093980	0					
ANR	3094202	Identifier	plane		3093980	0					
ANR	3094203	Identifier	j		3093980	1					
ANR	3094204	Identifier	length		3093980	1					
ANR	3094205	AdditiveExpression	ptr [ j ] - plane [ j ] . str		3093980	1		-			
ANR	3094206	ArrayIndexing	ptr [ j ]		3093980	0					
ANR	3094207	Identifier	ptr		3093980	0					
ANR	3094208	Identifier	j		3093980	1					
ANR	3094209	MemberAccess	plane [ j ] . str		3093980	1					
ANR	3094210	ArrayIndexing	plane [ j ]		3093980	0					
ANR	3094211	Identifier	plane		3093980	0					
ANR	3094212	Identifier	j		3093980	1					
ANR	3094213	Identifier	str		3093980	1					
ANR	3094214	ReturnStatement	return ;	658:2:23500:23506	3093980	3	True				
ANR	3094215	ReturnType	void		3093980	1					
ANR	3094216	Identifier	eprn_finalize		3093980	2					
ANR	3094217	ParameterList	"bool is_RGB , unsigned int non_black_levels , int planes , eprn_OctetString * plane , eprn_Octet * * ptr , int pixels"		3093980	3					
ANR	3094218	Parameter	bool is_RGB	607:19:22022:22032	3093980	0	True				
ANR	3094219	ParameterType	bool		3093980	0					
ANR	3094220	Identifier	is_RGB		3093980	1					
ANR	3094221	Parameter	unsigned int non_black_levels	607:32:22035:22063	3093980	1	True				
ANR	3094222	ParameterType	unsigned int		3093980	0					
ANR	3094223	Identifier	non_black_levels		3093980	1					
ANR	3094224	Parameter	int planes	608:2:22068:22077	3093980	2	True				
ANR	3094225	ParameterType	int		3093980	0					
ANR	3094226	Identifier	planes		3093980	1					
ANR	3094227	Parameter	eprn_OctetString * plane	608:14:22080:22102	3093980	3	True				
ANR	3094228	ParameterType	eprn_OctetString *		3093980	0					
ANR	3094229	Identifier	plane		3093980	1					
ANR	3094230	Parameter	eprn_Octet * * ptr	608:39:22105:22120	3093980	4	True				
ANR	3094231	ParameterType	eprn_Octet * *		3093980	0					
ANR	3094232	Identifier	ptr		3093980	1					
ANR	3094233	Parameter	int pixels	608:57:22123:22132	3093980	5	True				
ANR	3094234	ParameterType	int		3093980	0					
ANR	3094235	Identifier	pixels		3093980	1					
ANR	3094236	CFGEntryNode	ENTRY		3093980		True				
ANR	3094237	CFGExitNode	EXIT		3093980		True				
ANR	3094238	Symbol	plane		3093980						
ANR	3094239	Symbol	plane [ j ] . str		3093980						
ANR	3094240	Symbol	* * j		3093980						
ANR	3094241	Symbol	non_black_levels		3093980						
ANR	3094242	Symbol	* * ptr		3093980						
ANR	3094243	Symbol	c		3093980						
ANR	3094244	Symbol	shift		3093980						
ANR	3094245	Symbol	planes		3093980						
ANR	3094246	Symbol	j		3093980						
ANR	3094247	Symbol	imax		3093980						
ANR	3094248	Symbol	plane [ j ] . length		3093980						
ANR	3094249	Symbol	bit		3093980						
ANR	3094250	Symbol	m		3093980						
ANR	3094251	Symbol	ptr		3093980						
ANR	3094252	Symbol	p		3093980						
ANR	3094253	Symbol	pixels		3093980						
ANR	3094254	Symbol	* j		3093980						
ANR	3094255	Symbol	is_RGB		3093980						
ANR	3094256	Symbol	eprn_bits_for_levels		3093980						
ANR	3094257	Symbol	rgb_planes		3093980						
ANR	3094258	Symbol	* ptr		3093980						
ANR	3094259	Symbol	* ptr [ j ]		3093980						
ANR	3094260	Symbol	* plane		3093980						
ANR	3094261	Symbol	value		3093980						
ANR	3094262	Function	split_line_le8	673:0:23950:26510							
ANR	3094263	FunctionDef	"split_line_le8 (eprn_Device * dev , const eprn_Octet * line , int length , eprn_OctetString plane [ ])"		3094262	0					
ANR	3094264	CompoundStatement		675:0:24059:26510	3094262	0					
ANR	3094265	IdentifierDeclStatement	gx_color_index pixel ;	676:2:24063:24087	3094262	0	True				
ANR	3094266	IdentifierDecl	pixel		3094262	0					
ANR	3094267	IdentifierDeclType	gx_color_index		3094262	0					
ANR	3094268	Identifier	pixel		3094262	1					
ANR	3094269	IdentifierDeclStatement	"int black_planes , non_black_planes , j , k , pixels , planes ;"	678:2:24091:24313	3094262	1	True				
ANR	3094270	IdentifierDecl	black_planes		3094262	0					
ANR	3094271	IdentifierDeclType	int		3094262	0					
ANR	3094272	Identifier	black_planes		3094262	1					
ANR	3094273	IdentifierDecl	non_black_planes		3094262	1					
ANR	3094274	IdentifierDeclType	int		3094262	0					
ANR	3094275	Identifier	non_black_planes		3094262	1					
ANR	3094276	IdentifierDecl	j		3094262	2					
ANR	3094277	IdentifierDeclType	int		3094262	0					
ANR	3094278	Identifier	j		3094262	1					
ANR	3094279	IdentifierDecl	k		3094262	3					
ANR	3094280	IdentifierDeclType	int		3094262	0					
ANR	3094281	Identifier	k		3094262	1					
ANR	3094282	IdentifierDecl	pixels		3094262	4					
ANR	3094283	IdentifierDeclType	int		3094262	0					
ANR	3094284	Identifier	pixels		3094262	1					
ANR	3094285	IdentifierDecl	planes		3094262	5					
ANR	3094286	IdentifierDeclType	int		3094262	0					
ANR	3094287	Identifier	planes		3094262	1					
ANR	3094288	IdentifierDeclStatement	"eprn_Octet comp_mask = 0 , pixel_mask = 0 , * ptr [ 8 ] ;"	685:2:24349:24495	3094262	2	True				
ANR	3094289	IdentifierDecl	comp_mask = 0		3094262	0					
ANR	3094290	IdentifierDeclType	eprn_Octet		3094262	0					
ANR	3094291	Identifier	comp_mask		3094262	1					
ANR	3094292	AssignmentExpression	comp_mask = 0		3094262	2		=			
ANR	3094293	Identifier	comp_mask		3094262	0					
ANR	3094294	PrimaryExpression	0		3094262	1					
ANR	3094295	IdentifierDecl	pixel_mask = 0		3094262	1					
ANR	3094296	IdentifierDeclType	eprn_Octet		3094262	0					
ANR	3094297	Identifier	pixel_mask		3094262	1					
ANR	3094298	AssignmentExpression	pixel_mask = 0		3094262	2		=			
ANR	3094299	Identifier	pixel_mask		3094262	0					
ANR	3094300	PrimaryExpression	0		3094262	1					
ANR	3094301	IdentifierDecl	* ptr [ 8 ]		3094262	2					
ANR	3094302	IdentifierDeclType	eprn_Octet * [ 8 ]		3094262	0					
ANR	3094303	Identifier	ptr		3094262	1					
ANR	3094304	PrimaryExpression	8		3094262	2					
ANR	3094305	ExpressionStatement	black_planes = eprn_bits_for_levels ( dev -> eprn . black_levels )	691:2:24586:24645	3094262	3	True				
ANR	3094306	AssignmentExpression	black_planes = eprn_bits_for_levels ( dev -> eprn . black_levels )		3094262	0		=			
ANR	3094307	Identifier	black_planes		3094262	0					
ANR	3094308	CallExpression	eprn_bits_for_levels ( dev -> eprn . black_levels )		3094262	1					
ANR	3094309	Callee	eprn_bits_for_levels		3094262	0					
ANR	3094310	Identifier	eprn_bits_for_levels		3094262	0					
ANR	3094311	ArgumentList	dev -> eprn . black_levels		3094262	1					
ANR	3094312	Argument	dev -> eprn . black_levels		3094262	0					
ANR	3094313	MemberAccess	dev -> eprn . black_levels		3094262	0					
ANR	3094314	PtrMemberAccess	dev -> eprn		3094262	0					
ANR	3094315	Identifier	dev		3094262	0					
ANR	3094316	Identifier	eprn		3094262	1					
ANR	3094317	Identifier	black_levels		3094262	1					
ANR	3094318	ExpressionStatement	non_black_planes = eprn_bits_for_levels ( dev -> eprn . non_black_levels )	692:2:24649:24716	3094262	4	True				
ANR	3094319	AssignmentExpression	non_black_planes = eprn_bits_for_levels ( dev -> eprn . non_black_levels )		3094262	0		=			
ANR	3094320	Identifier	non_black_planes		3094262	0					
ANR	3094321	CallExpression	eprn_bits_for_levels ( dev -> eprn . non_black_levels )		3094262	1					
ANR	3094322	Callee	eprn_bits_for_levels		3094262	0					
ANR	3094323	Identifier	eprn_bits_for_levels		3094262	0					
ANR	3094324	ArgumentList	dev -> eprn . non_black_levels		3094262	1					
ANR	3094325	Argument	dev -> eprn . non_black_levels		3094262	0					
ANR	3094326	MemberAccess	dev -> eprn . non_black_levels		3094262	0					
ANR	3094327	PtrMemberAccess	dev -> eprn		3094262	0					
ANR	3094328	Identifier	dev		3094262	0					
ANR	3094329	Identifier	eprn		3094262	1					
ANR	3094330	Identifier	non_black_levels		3094262	1					
ANR	3094331	ExpressionStatement	planes = black_planes + 3 * non_black_planes	693:2:24720:24762	3094262	5	True				
ANR	3094332	AssignmentExpression	planes = black_planes + 3 * non_black_planes		3094262	0		=			
ANR	3094333	Identifier	planes		3094262	0					
ANR	3094334	AdditiveExpression	black_planes + 3 * non_black_planes		3094262	1		+			
ANR	3094335	Identifier	black_planes		3094262	0					
ANR	3094336	MultiplicativeExpression	3 * non_black_planes		3094262	1		*			
ANR	3094337	PrimaryExpression	3		3094262	0					
ANR	3094338	Identifier	non_black_planes		3094262	1					
ANR	3094339	ForStatement	for ( j = 0 ; j < planes ; j ++ )		3094262	6					
ANR	3094340	ForInit	j = 0 ;	696:7:24814:24819	3094262	0	True				
ANR	3094341	AssignmentExpression	j = 0		3094262	0		=			
ANR	3094342	Identifier	j		3094262	0					
ANR	3094343	PrimaryExpression	0		3094262	1					
ANR	3094344	Condition	j < planes	696:14:24821:24830	3094262	1	True				
ANR	3094345	RelationalExpression	j < planes		3094262	0		<			
ANR	3094346	Identifier	j		3094262	0					
ANR	3094347	Identifier	planes		3094262	1					
ANR	3094348	PostIncDecOperationExpression	j ++	696:26:24833:24835	3094262	2	True				
ANR	3094349	Identifier	j		3094262	0					
ANR	3094350	IncDec	++		3094262	1					
ANR	3094351	ExpressionStatement	ptr [ j ] = plane [ j ] . str	696:31:24838:24859	3094262	3	True				
ANR	3094352	AssignmentExpression	ptr [ j ] = plane [ j ] . str		3094262	0		=			
ANR	3094353	ArrayIndexing	ptr [ j ]		3094262	0					
ANR	3094354	Identifier	ptr		3094262	0					
ANR	3094355	Identifier	j		3094262	1					
ANR	3094356	MemberAccess	plane [ j ] . str		3094262	1					
ANR	3094357	ArrayIndexing	plane [ j ]		3094262	0					
ANR	3094358	Identifier	plane		3094262	0					
ANR	3094359	Identifier	j		3094262	1					
ANR	3094360	Identifier	str		3094262	1					
ANR	3094361	ForStatement	for ( j = 0 ; j < dev -> color_info . depth ; j ++ )		3094262	7					
ANR	3094362	ForInit	j = 0 ;	699:7:24902:24907	3094262	0	True				
ANR	3094363	AssignmentExpression	j = 0		3094262	0		=			
ANR	3094364	Identifier	j		3094262	0					
ANR	3094365	PrimaryExpression	0		3094262	1					
ANR	3094366	Condition	j < dev -> color_info . depth	699:14:24909:24933	3094262	1	True				
ANR	3094367	RelationalExpression	j < dev -> color_info . depth		3094262	0		<			
ANR	3094368	Identifier	j		3094262	0					
ANR	3094369	MemberAccess	dev -> color_info . depth		3094262	1					
ANR	3094370	PtrMemberAccess	dev -> color_info		3094262	0					
ANR	3094371	Identifier	dev		3094262	0					
ANR	3094372	Identifier	color_info		3094262	1					
ANR	3094373	Identifier	depth		3094262	1					
ANR	3094374	PostIncDecOperationExpression	j ++	699:41:24936:24938	3094262	2	True				
ANR	3094375	Identifier	j		3094262	0					
ANR	3094376	IncDec	++		3094262	1					
ANR	3094377	ExpressionStatement	pixel_mask = ( pixel_mask << 1 ) | 1	700:4:24945:24979	3094262	3	True				
ANR	3094378	AssignmentExpression	pixel_mask = ( pixel_mask << 1 ) | 1		3094262	0		=			
ANR	3094379	Identifier	pixel_mask		3094262	0					
ANR	3094380	InclusiveOrExpression	( pixel_mask << 1 ) | 1		3094262	1		|			
ANR	3094381	ShiftExpression	pixel_mask << 1		3094262	0		<<			
ANR	3094382	Identifier	pixel_mask		3094262	0					
ANR	3094383	PrimaryExpression	1		3094262	1					
ANR	3094384	PrimaryExpression	1		3094262	1					
ANR	3094385	ForStatement	for ( j = 0 ; j < dev -> eprn . bits_per_colorant ; j ++ )		3094262	8					
ANR	3094386	ForInit	j = 0 ;	701:7:24988:24993	3094262	0	True				
ANR	3094387	AssignmentExpression	j = 0		3094262	0		=			
ANR	3094388	Identifier	j		3094262	0					
ANR	3094389	PrimaryExpression	0		3094262	1					
ANR	3094390	Condition	j < dev -> eprn . bits_per_colorant	701:14:24995:25025	3094262	1	True				
ANR	3094391	RelationalExpression	j < dev -> eprn . bits_per_colorant		3094262	0		<			
ANR	3094392	Identifier	j		3094262	0					
ANR	3094393	MemberAccess	dev -> eprn . bits_per_colorant		3094262	1					
ANR	3094394	PtrMemberAccess	dev -> eprn		3094262	0					
ANR	3094395	Identifier	dev		3094262	0					
ANR	3094396	Identifier	eprn		3094262	1					
ANR	3094397	Identifier	bits_per_colorant		3094262	1					
ANR	3094398	PostIncDecOperationExpression	j ++	701:47:25028:25030	3094262	2	True				
ANR	3094399	Identifier	j		3094262	0					
ANR	3094400	IncDec	++		3094262	1					
ANR	3094401	ExpressionStatement	comp_mask = ( comp_mask << 1 ) | 1	702:4:25037:25069	3094262	3	True				
ANR	3094402	AssignmentExpression	comp_mask = ( comp_mask << 1 ) | 1		3094262	0		=			
ANR	3094403	Identifier	comp_mask		3094262	0					
ANR	3094404	InclusiveOrExpression	( comp_mask << 1 ) | 1		3094262	1		|			
ANR	3094405	ShiftExpression	comp_mask << 1		3094262	0		<<			
ANR	3094406	Identifier	comp_mask		3094262	0					
ANR	3094407	PrimaryExpression	1		3094262	1					
ANR	3094408	PrimaryExpression	1		3094262	1					
ANR	3094409	ExpressionStatement	pixels = 0	705:2:25146:25156	3094262	9	True				
ANR	3094410	AssignmentExpression	pixels = 0		3094262	0		=			
ANR	3094411	Identifier	pixels		3094262	0					
ANR	3094412	PrimaryExpression	0		3094262	1					
ANR	3094413	ExpressionStatement	k = 0	706:2:25160:25165	3094262	10	True				
ANR	3094414	AssignmentExpression	k = 0		3094262	0		=			
ANR	3094415	Identifier	k		3094262	0					
ANR	3094416	PrimaryExpression	0		3094262	1					
ANR	3094417	WhileStatement	while ( k < length )		3094262	11					
ANR	3094418	Condition	k < length	707:9:25217:25226	3094262	0	True				
ANR	3094419	RelationalExpression	k < length		3094262	0		<			
ANR	3094420	Identifier	k		3094262	0					
ANR	3094421	Identifier	length		3094262	1					
ANR	3094422	CompoundStatement		34:4:1175:1186	3094262	1					
ANR	3094423	IdentifierDeclStatement	"int l , m , p ;"	708:4:25235:25246	3094262	0	True				
ANR	3094424	IdentifierDecl	l		3094262	0					
ANR	3094425	IdentifierDeclType	int		3094262	0					
ANR	3094426	Identifier	l		3094262	1					
ANR	3094427	IdentifierDecl	m		3094262	1					
ANR	3094428	IdentifierDeclType	int		3094262	0					
ANR	3094429	Identifier	m		3094262	1					
ANR	3094430	IdentifierDecl	p		3094262	2					
ANR	3094431	IdentifierDeclType	int		3094262	0					
ANR	3094432	Identifier	p		3094262	1					
ANR	3094433	IfStatement	if ( pixels % 8 == 0 )		3094262	1					
ANR	3094434	Condition	pixels % 8 == 0	711:8:25319:25333	3094262	0	True				
ANR	3094435	EqualityExpression	pixels % 8 == 0		3094262	0		==			
ANR	3094436	MultiplicativeExpression	pixels % 8		3094262	0		%			
ANR	3094437	Identifier	pixels		3094262	0					
ANR	3094438	PrimaryExpression	8		3094262	1					
ANR	3094439	PrimaryExpression	0		3094262	1					
ANR	3094440	ForStatement	for ( j = 0 ; j < planes ; j ++ )		3094262	1					
ANR	3094441	ForInit	j = 0 ;	711:30:25341:25346	3094262	0	True				
ANR	3094442	AssignmentExpression	j = 0		3094262	0		=			
ANR	3094443	Identifier	j		3094262	0					
ANR	3094444	PrimaryExpression	0		3094262	1					
ANR	3094445	Condition	j < planes	711:37:25348:25357	3094262	1	True				
ANR	3094446	RelationalExpression	j < planes		3094262	0		<			
ANR	3094447	Identifier	j		3094262	0					
ANR	3094448	Identifier	planes		3094262	1					
ANR	3094449	PostIncDecOperationExpression	j ++	711:49:25360:25362	3094262	2	True				
ANR	3094450	Identifier	j		3094262	0					
ANR	3094451	IncDec	++		3094262	1					
ANR	3094452	ExpressionStatement	* ptr [ j ] = 0	711:54:25365:25376	3094262	3	True				
ANR	3094453	AssignmentExpression	* ptr [ j ] = 0		3094262	0		=			
ANR	3094454	UnaryOperationExpression	* ptr [ j ]		3094262	0					
ANR	3094455	UnaryOperator	*		3094262	0					
ANR	3094456	ArrayIndexing	ptr [ j ]		3094262	1					
ANR	3094457	Identifier	ptr		3094262	0					
ANR	3094458	Identifier	j		3094262	1					
ANR	3094459	PrimaryExpression	0		3094262	1					
ANR	3094460	ExpressionStatement	p = 8 / dev -> color_info . depth - 1	715:4:25493:25524	3094262	2	True				
ANR	3094461	AssignmentExpression	p = 8 / dev -> color_info . depth - 1		3094262	0		=			
ANR	3094462	Identifier	p		3094262	0					
ANR	3094463	AdditiveExpression	8 / dev -> color_info . depth - 1		3094262	1		-			
ANR	3094464	MultiplicativeExpression	8 / dev -> color_info . depth		3094262	0		/			
ANR	3094465	PrimaryExpression	8		3094262	0					
ANR	3094466	MemberAccess	dev -> color_info . depth		3094262	1					
ANR	3094467	PtrMemberAccess	dev -> color_info		3094262	0					
ANR	3094468	Identifier	dev		3094262	0					
ANR	3094469	Identifier	color_info		3094262	1					
ANR	3094470	Identifier	depth		3094262	1					
ANR	3094471	PrimaryExpression	1		3094262	1					
ANR	3094472	DoStatement	do		3094262	3					
ANR	3094473	CompoundStatement		43:6:1481:1496	3094262	0					
ANR	3094474	IdentifierDeclStatement	eprn_Octet comp ;	717:6:25541:25556	3094262	0	True				
ANR	3094475	IdentifierDecl	comp		3094262	0					
ANR	3094476	IdentifierDeclType	eprn_Octet		3094262	0					
ANR	3094477	Identifier	comp		3094262	1					
ANR	3094478	ExpressionStatement	pixel = ( line [ k ] >> p * dev -> color_info . depth ) & pixel_mask	720:6:25591:25648	3094262	1	True				
ANR	3094479	AssignmentExpression	pixel = ( line [ k ] >> p * dev -> color_info . depth ) & pixel_mask		3094262	0		=			
ANR	3094480	Identifier	pixel		3094262	0					
ANR	3094481	BitAndExpression	( line [ k ] >> p * dev -> color_info . depth ) & pixel_mask		3094262	1		&			
ANR	3094482	ShiftExpression	line [ k ] >> p * dev -> color_info . depth		3094262	0		>>			
ANR	3094483	ArrayIndexing	line [ k ]		3094262	0					
ANR	3094484	Identifier	line		3094262	0					
ANR	3094485	Identifier	k		3094262	1					
ANR	3094486	MultiplicativeExpression	p * dev -> color_info . depth		3094262	1		*			
ANR	3094487	Identifier	p		3094262	0					
ANR	3094488	MemberAccess	dev -> color_info . depth		3094262	1					
ANR	3094489	PtrMemberAccess	dev -> color_info		3094262	0					
ANR	3094490	Identifier	dev		3094262	0					
ANR	3094491	Identifier	color_info		3094262	1					
ANR	3094492	Identifier	depth		3094262	1					
ANR	3094493	Identifier	pixel_mask		3094262	1					
ANR	3094494	ExpressionStatement	comp = pixel & comp_mask	724:6:25746:25770	3094262	2	True				
ANR	3094495	AssignmentExpression	comp = pixel & comp_mask		3094262	0		=			
ANR	3094496	Identifier	comp		3094262	0					
ANR	3094497	BitAndExpression	pixel & comp_mask		3094262	1		&			
ANR	3094498	Identifier	pixel		3094262	0					
ANR	3094499	Identifier	comp_mask		3094262	1					
ANR	3094500	ForStatement	for ( j = 0 ; j < black_planes ; j ++ )		3094262	3					
ANR	3094501	ForInit	j = 0 ;	725:11:25795:25800	3094262	0	True				
ANR	3094502	AssignmentExpression	j = 0		3094262	0		=			
ANR	3094503	Identifier	j		3094262	0					
ANR	3094504	PrimaryExpression	0		3094262	1					
ANR	3094505	Condition	j < black_planes	725:18:25802:25817	3094262	1	True				
ANR	3094506	RelationalExpression	j < black_planes		3094262	0		<			
ANR	3094507	Identifier	j		3094262	0					
ANR	3094508	Identifier	black_planes		3094262	1					
ANR	3094509	PostIncDecOperationExpression	j ++	725:36:25820:25822	3094262	2	True				
ANR	3094510	Identifier	j		3094262	0					
ANR	3094511	IncDec	++		3094262	1					
ANR	3094512	CompoundStatement		51:41:1765:1765	3094262	3					
ANR	3094513	ExpressionStatement	* ptr [ j ] = ( * ptr [ j ] << 1 ) | ( comp & 1 )	726:8:25835:25872	3094262	0	True				
ANR	3094514	AssignmentExpression	* ptr [ j ] = ( * ptr [ j ] << 1 ) | ( comp & 1 )		3094262	0		=			
ANR	3094515	UnaryOperationExpression	* ptr [ j ]		3094262	0					
ANR	3094516	UnaryOperator	*		3094262	0					
ANR	3094517	ArrayIndexing	ptr [ j ]		3094262	1					
ANR	3094518	Identifier	ptr		3094262	0					
ANR	3094519	Identifier	j		3094262	1					
ANR	3094520	InclusiveOrExpression	( * ptr [ j ] << 1 ) | ( comp & 1 )		3094262	1		|			
ANR	3094521	ShiftExpression	* ptr [ j ] << 1		3094262	0		<<			
ANR	3094522	UnaryOperationExpression	* ptr [ j ]		3094262	0					
ANR	3094523	UnaryOperator	*		3094262	0					
ANR	3094524	ArrayIndexing	ptr [ j ]		3094262	1					
ANR	3094525	Identifier	ptr		3094262	0					
ANR	3094526	Identifier	j		3094262	1					
ANR	3094527	PrimaryExpression	1		3094262	1					
ANR	3094528	BitAndExpression	comp & 1		3094262	1		&			
ANR	3094529	Identifier	comp		3094262	0					
ANR	3094530	PrimaryExpression	1		3094262	1					
ANR	3094531	ExpressionStatement	comp >>= 1	727:8:25882:25892	3094262	1	True				
ANR	3094532	AssignmentExpression	comp >>= 1		3094262	0		>>=			
ANR	3094533	Identifier	comp		3094262	0					
ANR	3094534	PrimaryExpression	1		3094262	1					
ANR	3094535	IfStatement	if ( non_black_planes > 0 )		3094262	4					
ANR	3094536	Condition	non_black_planes > 0	729:10:25912:25931	3094262	0	True				
ANR	3094537	RelationalExpression	non_black_planes > 0		3094262	0		>			
ANR	3094538	Identifier	non_black_planes		3094262	0					
ANR	3094539	PrimaryExpression	0		3094262	1					
ANR	3094540	ForStatement	for ( l = 1 ; l < 4 ; l ++ )		3094262	1					
ANR	3094541	ForInit	l = 1 ;	729:37:25939:25944	3094262	0	True				
ANR	3094542	AssignmentExpression	l = 1		3094262	0		=			
ANR	3094543	Identifier	l		3094262	0					
ANR	3094544	PrimaryExpression	1		3094262	1					
ANR	3094545	Condition	l < 4	729:44:25946:25950	3094262	1	True				
ANR	3094546	RelationalExpression	l < 4		3094262	0		<			
ANR	3094547	Identifier	l		3094262	0					
ANR	3094548	PrimaryExpression	4		3094262	1					
ANR	3094549	PostIncDecOperationExpression	l ++	729:51:25953:25955	3094262	2	True				
ANR	3094550	Identifier	l		3094262	0					
ANR	3094551	IncDec	++		3094262	1					
ANR	3094552	CompoundStatement		55:56:1898:1898	3094262	3					
ANR	3094553	ExpressionStatement	comp = ( pixel >> l * dev -> eprn . bits_per_colorant ) & comp_mask	730:8:25968:26027	3094262	0	True				
ANR	3094554	AssignmentExpression	comp = ( pixel >> l * dev -> eprn . bits_per_colorant ) & comp_mask		3094262	0		=			
ANR	3094555	Identifier	comp		3094262	0					
ANR	3094556	BitAndExpression	( pixel >> l * dev -> eprn . bits_per_colorant ) & comp_mask		3094262	1		&			
ANR	3094557	ShiftExpression	pixel >> l * dev -> eprn . bits_per_colorant		3094262	0		>>			
ANR	3094558	Identifier	pixel		3094262	0					
ANR	3094559	MultiplicativeExpression	l * dev -> eprn . bits_per_colorant		3094262	1		*			
ANR	3094560	Identifier	l		3094262	0					
ANR	3094561	MemberAccess	dev -> eprn . bits_per_colorant		3094262	1					
ANR	3094562	PtrMemberAccess	dev -> eprn		3094262	0					
ANR	3094563	Identifier	dev		3094262	0					
ANR	3094564	Identifier	eprn		3094262	1					
ANR	3094565	Identifier	bits_per_colorant		3094262	1					
ANR	3094566	Identifier	comp_mask		3094262	1					
ANR	3094567	ForStatement	"for ( m = 0 ; m < non_black_planes ; m ++ , j ++ )"		3094262	1					
ANR	3094568	ForInit	m = 0 ;	731:13:26042:26047	3094262	0	True				
ANR	3094569	AssignmentExpression	m = 0		3094262	0		=			
ANR	3094570	Identifier	m		3094262	0					
ANR	3094571	PrimaryExpression	0		3094262	1					
ANR	3094572	Condition	m < non_black_planes	731:20:26049:26068	3094262	1	True				
ANR	3094573	RelationalExpression	m < non_black_planes		3094262	0		<			
ANR	3094574	Identifier	m		3094262	0					
ANR	3094575	Identifier	non_black_planes		3094262	1					
ANR	3094576	Expression	"m ++ , j ++"	731:42:26071:26078	3094262	2	True				
ANR	3094577	PostIncDecOperationExpression	m ++		3094262	0					
ANR	3094578	Identifier	m		3094262	0					
ANR	3094579	IncDec	++		3094262	1					
ANR	3094580	PostIncDecOperationExpression	j ++		3094262	1					
ANR	3094581	Identifier	j		3094262	0					
ANR	3094582	IncDec	++		3094262	1					
ANR	3094583	CompoundStatement		57:52:2021:2021	3094262	3					
ANR	3094584	ExpressionStatement	* ptr [ j ] = ( * ptr [ j ] << 1 ) | ( comp & 1 )	732:10:26093:26130	3094262	0	True				
ANR	3094585	AssignmentExpression	* ptr [ j ] = ( * ptr [ j ] << 1 ) | ( comp & 1 )		3094262	0		=			
ANR	3094586	UnaryOperationExpression	* ptr [ j ]		3094262	0					
ANR	3094587	UnaryOperator	*		3094262	0					
ANR	3094588	ArrayIndexing	ptr [ j ]		3094262	1					
ANR	3094589	Identifier	ptr		3094262	0					
ANR	3094590	Identifier	j		3094262	1					
ANR	3094591	InclusiveOrExpression	( * ptr [ j ] << 1 ) | ( comp & 1 )		3094262	1		|			
ANR	3094592	ShiftExpression	* ptr [ j ] << 1		3094262	0		<<			
ANR	3094593	UnaryOperationExpression	* ptr [ j ]		3094262	0					
ANR	3094594	UnaryOperator	*		3094262	0					
ANR	3094595	ArrayIndexing	ptr [ j ]		3094262	1					
ANR	3094596	Identifier	ptr		3094262	0					
ANR	3094597	Identifier	j		3094262	1					
ANR	3094598	PrimaryExpression	1		3094262	1					
ANR	3094599	BitAndExpression	comp & 1		3094262	1		&			
ANR	3094600	Identifier	comp		3094262	0					
ANR	3094601	PrimaryExpression	1		3094262	1					
ANR	3094602	ExpressionStatement	comp >>= 1	733:10:26142:26152	3094262	1	True				
ANR	3094603	AssignmentExpression	comp >>= 1		3094262	0		>>=			
ANR	3094604	Identifier	comp		3094262	0					
ANR	3094605	PrimaryExpression	1		3094262	1					
ANR	3094606	ExpressionStatement	pixels ++	737:6:26179:26187	3094262	5	True				
ANR	3094607	PostIncDecOperationExpression	pixels ++		3094262	0					
ANR	3094608	Identifier	pixels		3094262	0					
ANR	3094609	IncDec	++		3094262	1					
ANR	3094610	ExpressionStatement	p --	738:6:26195:26198	3094262	6	True				
ANR	3094611	PostIncDecOperationExpression	p --		3094262	0					
ANR	3094612	Identifier	p		3094262	0					
ANR	3094613	IncDec	--		3094262	1					
ANR	3094614	Condition	p >= 0	739:13:26213:26218	3094262	1	True				
ANR	3094615	RelationalExpression	p >= 0		3094262	0		>=			
ANR	3094616	Identifier	p		3094262	0					
ANR	3094617	PrimaryExpression	0		3094262	1					
ANR	3094618	ExpressionStatement	k ++	740:4:26226:26229	3094262	4	True				
ANR	3094619	PostIncDecOperationExpression	k ++		3094262	0					
ANR	3094620	Identifier	k		3094262	0					
ANR	3094621	IncDec	++		3094262	1					
ANR	3094622	IfStatement	if ( pixels % 8 == 0 )		3094262	5					
ANR	3094623	Condition	pixels % 8 == 0	743:8:26319:26333	3094262	0	True				
ANR	3094624	EqualityExpression	pixels % 8 == 0		3094262	0		==			
ANR	3094625	MultiplicativeExpression	pixels % 8		3094262	0		%			
ANR	3094626	Identifier	pixels		3094262	0					
ANR	3094627	PrimaryExpression	8		3094262	1					
ANR	3094628	PrimaryExpression	0		3094262	1					
ANR	3094629	ForStatement	for ( j = 0 ; j < planes ; j ++ )		3094262	1					
ANR	3094630	ForInit	j = 0 ;	743:30:26341:26346	3094262	0	True				
ANR	3094631	AssignmentExpression	j = 0		3094262	0		=			
ANR	3094632	Identifier	j		3094262	0					
ANR	3094633	PrimaryExpression	0		3094262	1					
ANR	3094634	Condition	j < planes	743:37:26348:26357	3094262	1	True				
ANR	3094635	RelationalExpression	j < planes		3094262	0		<			
ANR	3094636	Identifier	j		3094262	0					
ANR	3094637	Identifier	planes		3094262	1					
ANR	3094638	PostIncDecOperationExpression	j ++	743:49:26360:26362	3094262	2	True				
ANR	3094639	Identifier	j		3094262	0					
ANR	3094640	IncDec	++		3094262	1					
ANR	3094641	ExpressionStatement	ptr [ j ] ++	743:54:26365:26373	3094262	3	True				
ANR	3094642	PostIncDecOperationExpression	ptr [ j ] ++		3094262	0					
ANR	3094643	ArrayIndexing	ptr [ j ]		3094262	0					
ANR	3094644	Identifier	ptr		3094262	0					
ANR	3094645	Identifier	j		3094262	1					
ANR	3094646	IncDec	++		3094262	1					
ANR	3094647	ExpressionStatement	"eprn_finalize ( dev -> eprn . colour_model == eprn_DeviceRGB , dev -> eprn . non_black_levels , planes , plane , ptr , pixels )"	746:2:26382:26497	3094262	12	True				
ANR	3094648	CallExpression	"eprn_finalize ( dev -> eprn . colour_model == eprn_DeviceRGB , dev -> eprn . non_black_levels , planes , plane , ptr , pixels )"		3094262	0					
ANR	3094649	Callee	eprn_finalize		3094262	0					
ANR	3094650	Identifier	eprn_finalize		3094262	0					
ANR	3094651	ArgumentList	dev -> eprn . colour_model == eprn_DeviceRGB		3094262	1					
ANR	3094652	Argument	dev -> eprn . colour_model == eprn_DeviceRGB		3094262	0					
ANR	3094653	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceRGB		3094262	0		==			
ANR	3094654	MemberAccess	dev -> eprn . colour_model		3094262	0					
ANR	3094655	PtrMemberAccess	dev -> eprn		3094262	0					
ANR	3094656	Identifier	dev		3094262	0					
ANR	3094657	Identifier	eprn		3094262	1					
ANR	3094658	Identifier	colour_model		3094262	1					
ANR	3094659	Identifier	eprn_DeviceRGB		3094262	1					
ANR	3094660	Argument	dev -> eprn . non_black_levels		3094262	1					
ANR	3094661	MemberAccess	dev -> eprn . non_black_levels		3094262	0					
ANR	3094662	PtrMemberAccess	dev -> eprn		3094262	0					
ANR	3094663	Identifier	dev		3094262	0					
ANR	3094664	Identifier	eprn		3094262	1					
ANR	3094665	Identifier	non_black_levels		3094262	1					
ANR	3094666	Argument	planes		3094262	2					
ANR	3094667	Identifier	planes		3094262	0					
ANR	3094668	Argument	plane		3094262	3					
ANR	3094669	Identifier	plane		3094262	0					
ANR	3094670	Argument	ptr		3094262	4					
ANR	3094671	Identifier	ptr		3094262	0					
ANR	3094672	Argument	pixels		3094262	5					
ANR	3094673	Identifier	pixels		3094262	0					
ANR	3094674	ReturnStatement	return ;	749:2:26502:26508	3094262	13	True				
ANR	3094675	ReturnType	static void		3094262	1					
ANR	3094676	Identifier	split_line_le8		3094262	2					
ANR	3094677	ParameterList	"eprn_Device * dev , const eprn_Octet * line , int length , eprn_OctetString plane [ ]"		3094262	3					
ANR	3094678	Parameter	eprn_Device * dev	673:27:23977:23992	3094262	0	True				
ANR	3094679	ParameterType	eprn_Device *		3094262	0					
ANR	3094680	Identifier	dev		3094262	1					
ANR	3094681	Parameter	const eprn_Octet * line	673:45:23995:24016	3094262	1	True				
ANR	3094682	ParameterType	const eprn_Octet *		3094262	0					
ANR	3094683	Identifier	line		3094262	1					
ANR	3094684	Parameter	int length	674:2:24021:24030	3094262	2	True				
ANR	3094685	ParameterType	int		3094262	0					
ANR	3094686	Identifier	length		3094262	1					
ANR	3094687	Parameter	eprn_OctetString plane [ ]	674:14:24033:24056	3094262	3	True				
ANR	3094688	ParameterType	eprn_OctetString [ ]		3094262	0					
ANR	3094689	Identifier	plane		3094262	1					
ANR	3094690	CFGEntryNode	ENTRY		3094262		True				
ANR	3094691	CFGExitNode	EXIT		3094262		True				
ANR	3094692	Symbol	plane		3094262						
ANR	3094693	Symbol	* dev		3094262						
ANR	3094694	Symbol	dev -> eprn . non_black_levels		3094262						
ANR	3094695	Symbol	plane [ j ] . str		3094262						
ANR	3094696	Symbol	* * ptr		3094262						
ANR	3094697	Symbol	black_planes		3094262						
ANR	3094698	Symbol	line		3094262						
ANR	3094699	Symbol	pixel_mask		3094262						
ANR	3094700	Symbol	dev -> eprn . bits_per_colorant		3094262						
ANR	3094701	Symbol	* line		3094262						
ANR	3094702	Symbol	dev -> color_info		3094262						
ANR	3094703	Symbol	dev -> color_info . depth		3094262						
ANR	3094704	Symbol	dev -> eprn . colour_model		3094262						
ANR	3094705	Symbol	dev		3094262						
ANR	3094706	Symbol	eprn_bits_for_levels		3094262						
ANR	3094707	Symbol	* ptr		3094262						
ANR	3094708	Symbol	non_black_planes		3094262						
ANR	3094709	Symbol	* ptr [ j ]		3094262						
ANR	3094710	Symbol	* plane		3094262						
ANR	3094711	Symbol	dev -> eprn		3094262						
ANR	3094712	Symbol	pixel		3094262						
ANR	3094713	Symbol	* * j		3094262						
ANR	3094714	Symbol	comp		3094262						
ANR	3094715	Symbol	dev -> eprn . black_levels		3094262						
ANR	3094716	Symbol	length		3094262						
ANR	3094717	Symbol	planes		3094262						
ANR	3094718	Symbol	j		3094262						
ANR	3094719	Symbol	k		3094262						
ANR	3094720	Symbol	l		3094262						
ANR	3094721	Symbol	m		3094262						
ANR	3094722	Symbol	ptr		3094262						
ANR	3094723	Symbol	p		3094262						
ANR	3094724	Symbol	comp_mask		3094262						
ANR	3094725	Symbol	pixels		3094262						
ANR	3094726	Symbol	* j		3094262						
ANR	3094727	Symbol	* k		3094262						
ANR	3094728	Symbol	eprn_DeviceRGB		3094262						
ANR	3094729	Function	split_line_ge8	764:0:26935:29220							
ANR	3094730	FunctionDef	"split_line_ge8 (eprn_Device * dev , const eprn_Octet * line , int length , eprn_OctetString plane [ ])"		3094729	0					
ANR	3094731	CompoundStatement		766:0:27044:29220	3094729	0					
ANR	3094732	IdentifierDeclStatement	gx_color_index pixel ;	767:2:27048:27072	3094729	0	True				
ANR	3094733	IdentifierDecl	pixel		3094729	0					
ANR	3094734	IdentifierDeclType	gx_color_index		3094729	0					
ANR	3094735	Identifier	pixel		3094729	1					
ANR	3094736	IdentifierDeclStatement	"int black_planes , non_black_planes , j , k , octets_per_pixel = dev -> color_info . depth / 8 , pixels , planes ;"	769:2:27076:27346	3094729	1	True				
ANR	3094737	IdentifierDecl	black_planes		3094729	0					
ANR	3094738	IdentifierDeclType	int		3094729	0					
ANR	3094739	Identifier	black_planes		3094729	1					
ANR	3094740	IdentifierDecl	non_black_planes		3094729	1					
ANR	3094741	IdentifierDeclType	int		3094729	0					
ANR	3094742	Identifier	non_black_planes		3094729	1					
ANR	3094743	IdentifierDecl	j		3094729	2					
ANR	3094744	IdentifierDeclType	int		3094729	0					
ANR	3094745	Identifier	j		3094729	1					
ANR	3094746	IdentifierDecl	k		3094729	3					
ANR	3094747	IdentifierDeclType	int		3094729	0					
ANR	3094748	Identifier	k		3094729	1					
ANR	3094749	IdentifierDecl	octets_per_pixel = dev -> color_info . depth / 8		3094729	4					
ANR	3094750	IdentifierDeclType	int		3094729	0					
ANR	3094751	Identifier	octets_per_pixel		3094729	1					
ANR	3094752	AssignmentExpression	octets_per_pixel = dev -> color_info . depth / 8		3094729	2		=			
ANR	3094753	Identifier	octets_per_pixel		3094729	0					
ANR	3094754	MultiplicativeExpression	dev -> color_info . depth / 8		3094729	1		/			
ANR	3094755	MemberAccess	dev -> color_info . depth		3094729	0					
ANR	3094756	PtrMemberAccess	dev -> color_info		3094729	0					
ANR	3094757	Identifier	dev		3094729	0					
ANR	3094758	Identifier	color_info		3094729	1					
ANR	3094759	Identifier	depth		3094729	1					
ANR	3094760	PrimaryExpression	8		3094729	1					
ANR	3094761	IdentifierDecl	pixels		3094729	5					
ANR	3094762	IdentifierDeclType	int		3094729	0					
ANR	3094763	Identifier	pixels		3094729	1					
ANR	3094764	IdentifierDecl	planes		3094729	6					
ANR	3094765	IdentifierDeclType	int		3094729	0					
ANR	3094766	Identifier	planes		3094729	1					
ANR	3094767	IdentifierDeclStatement	"eprn_Octet comp_mask = 0 , * ptr [ 32 ] ;"	777:2:27382:27471	3094729	2	True				
ANR	3094768	IdentifierDecl	comp_mask = 0		3094729	0					
ANR	3094769	IdentifierDeclType	eprn_Octet		3094729	0					
ANR	3094770	Identifier	comp_mask		3094729	1					
ANR	3094771	AssignmentExpression	comp_mask = 0		3094729	2		=			
ANR	3094772	Identifier	comp_mask		3094729	0					
ANR	3094773	PrimaryExpression	0		3094729	1					
ANR	3094774	IdentifierDecl	* ptr [ 32 ]		3094729	1					
ANR	3094775	IdentifierDeclType	eprn_Octet * [ 32 ]		3094729	0					
ANR	3094776	Identifier	ptr		3094729	1					
ANR	3094777	PrimaryExpression	32		3094729	2					
ANR	3094778	ExpressionStatement	black_planes = eprn_bits_for_levels ( dev -> eprn . black_levels )	782:2:27562:27621	3094729	3	True				
ANR	3094779	AssignmentExpression	black_planes = eprn_bits_for_levels ( dev -> eprn . black_levels )		3094729	0		=			
ANR	3094780	Identifier	black_planes		3094729	0					
ANR	3094781	CallExpression	eprn_bits_for_levels ( dev -> eprn . black_levels )		3094729	1					
ANR	3094782	Callee	eprn_bits_for_levels		3094729	0					
ANR	3094783	Identifier	eprn_bits_for_levels		3094729	0					
ANR	3094784	ArgumentList	dev -> eprn . black_levels		3094729	1					
ANR	3094785	Argument	dev -> eprn . black_levels		3094729	0					
ANR	3094786	MemberAccess	dev -> eprn . black_levels		3094729	0					
ANR	3094787	PtrMemberAccess	dev -> eprn		3094729	0					
ANR	3094788	Identifier	dev		3094729	0					
ANR	3094789	Identifier	eprn		3094729	1					
ANR	3094790	Identifier	black_levels		3094729	1					
ANR	3094791	ExpressionStatement	non_black_planes = eprn_bits_for_levels ( dev -> eprn . non_black_levels )	783:2:27625:27692	3094729	4	True				
ANR	3094792	AssignmentExpression	non_black_planes = eprn_bits_for_levels ( dev -> eprn . non_black_levels )		3094729	0		=			
ANR	3094793	Identifier	non_black_planes		3094729	0					
ANR	3094794	CallExpression	eprn_bits_for_levels ( dev -> eprn . non_black_levels )		3094729	1					
ANR	3094795	Callee	eprn_bits_for_levels		3094729	0					
ANR	3094796	Identifier	eprn_bits_for_levels		3094729	0					
ANR	3094797	ArgumentList	dev -> eprn . non_black_levels		3094729	1					
ANR	3094798	Argument	dev -> eprn . non_black_levels		3094729	0					
ANR	3094799	MemberAccess	dev -> eprn . non_black_levels		3094729	0					
ANR	3094800	PtrMemberAccess	dev -> eprn		3094729	0					
ANR	3094801	Identifier	dev		3094729	0					
ANR	3094802	Identifier	eprn		3094729	1					
ANR	3094803	Identifier	non_black_levels		3094729	1					
ANR	3094804	ExpressionStatement	planes = black_planes + 3 * non_black_planes	784:2:27696:27738	3094729	5	True				
ANR	3094805	AssignmentExpression	planes = black_planes + 3 * non_black_planes		3094729	0		=			
ANR	3094806	Identifier	planes		3094729	0					
ANR	3094807	AdditiveExpression	black_planes + 3 * non_black_planes		3094729	1		+			
ANR	3094808	Identifier	black_planes		3094729	0					
ANR	3094809	MultiplicativeExpression	3 * non_black_planes		3094729	1		*			
ANR	3094810	PrimaryExpression	3		3094729	0					
ANR	3094811	Identifier	non_black_planes		3094729	1					
ANR	3094812	ForStatement	for ( j = 0 ; j < planes ; j ++ )		3094729	6					
ANR	3094813	ForInit	j = 0 ;	787:7:27790:27795	3094729	0	True				
ANR	3094814	AssignmentExpression	j = 0		3094729	0		=			
ANR	3094815	Identifier	j		3094729	0					
ANR	3094816	PrimaryExpression	0		3094729	1					
ANR	3094817	Condition	j < planes	787:14:27797:27806	3094729	1	True				
ANR	3094818	RelationalExpression	j < planes		3094729	0		<			
ANR	3094819	Identifier	j		3094729	0					
ANR	3094820	Identifier	planes		3094729	1					
ANR	3094821	PostIncDecOperationExpression	j ++	787:26:27809:27811	3094729	2	True				
ANR	3094822	Identifier	j		3094729	0					
ANR	3094823	IncDec	++		3094729	1					
ANR	3094824	ExpressionStatement	ptr [ j ] = plane [ j ] . str	787:31:27814:27835	3094729	3	True				
ANR	3094825	AssignmentExpression	ptr [ j ] = plane [ j ] . str		3094729	0		=			
ANR	3094826	ArrayIndexing	ptr [ j ]		3094729	0					
ANR	3094827	Identifier	ptr		3094729	0					
ANR	3094828	Identifier	j		3094729	1					
ANR	3094829	MemberAccess	plane [ j ] . str		3094729	1					
ANR	3094830	ArrayIndexing	plane [ j ]		3094729	0					
ANR	3094831	Identifier	plane		3094729	0					
ANR	3094832	Identifier	j		3094729	1					
ANR	3094833	Identifier	str		3094729	1					
ANR	3094834	ForStatement	for ( j = 0 ; j < dev -> eprn . bits_per_colorant ; j ++ )		3094729	7					
ANR	3094835	ForInit	j = 0 ;	790:7:27882:27887	3094729	0	True				
ANR	3094836	AssignmentExpression	j = 0		3094729	0		=			
ANR	3094837	Identifier	j		3094729	0					
ANR	3094838	PrimaryExpression	0		3094729	1					
ANR	3094839	Condition	j < dev -> eprn . bits_per_colorant	790:14:27889:27919	3094729	1	True				
ANR	3094840	RelationalExpression	j < dev -> eprn . bits_per_colorant		3094729	0		<			
ANR	3094841	Identifier	j		3094729	0					
ANR	3094842	MemberAccess	dev -> eprn . bits_per_colorant		3094729	1					
ANR	3094843	PtrMemberAccess	dev -> eprn		3094729	0					
ANR	3094844	Identifier	dev		3094729	0					
ANR	3094845	Identifier	eprn		3094729	1					
ANR	3094846	Identifier	bits_per_colorant		3094729	1					
ANR	3094847	PostIncDecOperationExpression	j ++	790:47:27922:27924	3094729	2	True				
ANR	3094848	Identifier	j		3094729	0					
ANR	3094849	IncDec	++		3094729	1					
ANR	3094850	ExpressionStatement	comp_mask = ( comp_mask << 1 ) | 1	791:4:27931:27963	3094729	3	True				
ANR	3094851	AssignmentExpression	comp_mask = ( comp_mask << 1 ) | 1		3094729	0		=			
ANR	3094852	Identifier	comp_mask		3094729	0					
ANR	3094853	InclusiveOrExpression	( comp_mask << 1 ) | 1		3094729	1		|			
ANR	3094854	ShiftExpression	comp_mask << 1		3094729	0		<<			
ANR	3094855	Identifier	comp_mask		3094729	0					
ANR	3094856	PrimaryExpression	1		3094729	1					
ANR	3094857	PrimaryExpression	1		3094729	1					
ANR	3094858	ExpressionStatement	pixels = 0	794:2:28040:28050	3094729	8	True				
ANR	3094859	AssignmentExpression	pixels = 0		3094729	0		=			
ANR	3094860	Identifier	pixels		3094729	0					
ANR	3094861	PrimaryExpression	0		3094729	1					
ANR	3094862	ExpressionStatement	k = 0	795:2:28054:28059	3094729	9	True				
ANR	3094863	AssignmentExpression	k = 0		3094729	0		=			
ANR	3094864	Identifier	k		3094729	0					
ANR	3094865	PrimaryExpression	0		3094729	1					
ANR	3094866	WhileStatement	while ( k < length )		3094729	10					
ANR	3094867	Condition	k < length	796:9:28111:28120	3094729	0	True				
ANR	3094868	RelationalExpression	k < length		3094729	0		<			
ANR	3094869	Identifier	k		3094729	0					
ANR	3094870	Identifier	length		3094729	1					
ANR	3094871	CompoundStatement		33:4:1105:1113	3094729	1					
ANR	3094872	IdentifierDeclStatement	eprn_Octet comp ;	797:4:28129:28144	3094729	0	True				
ANR	3094873	IdentifierDecl	comp		3094729	0					
ANR	3094874	IdentifierDeclType	eprn_Octet		3094729	0					
ANR	3094875	Identifier	comp		3094729	1					
ANR	3094876	IdentifierDeclStatement	"int l , m ;"	798:4:28150:28158	3094729	1	True				
ANR	3094877	IdentifierDecl	l		3094729	0					
ANR	3094878	IdentifierDeclType	int		3094729	0					
ANR	3094879	Identifier	l		3094729	1					
ANR	3094880	IdentifierDecl	m		3094729	1					
ANR	3094881	IdentifierDeclType	int		3094729	0					
ANR	3094882	Identifier	m		3094729	1					
ANR	3094883	IfStatement	if ( pixels % 8 == 0 )		3094729	2					
ANR	3094884	Condition	pixels % 8 == 0	801:8:28224:28238	3094729	0	True				
ANR	3094885	EqualityExpression	pixels % 8 == 0		3094729	0		==			
ANR	3094886	MultiplicativeExpression	pixels % 8		3094729	0		%			
ANR	3094887	Identifier	pixels		3094729	0					
ANR	3094888	PrimaryExpression	8		3094729	1					
ANR	3094889	PrimaryExpression	0		3094729	1					
ANR	3094890	ForStatement	for ( j = 0 ; j < planes ; j ++ )		3094729	1					
ANR	3094891	ForInit	j = 0 ;	801:30:28246:28251	3094729	0	True				
ANR	3094892	AssignmentExpression	j = 0		3094729	0		=			
ANR	3094893	Identifier	j		3094729	0					
ANR	3094894	PrimaryExpression	0		3094729	1					
ANR	3094895	Condition	j < planes	801:37:28253:28262	3094729	1	True				
ANR	3094896	RelationalExpression	j < planes		3094729	0		<			
ANR	3094897	Identifier	j		3094729	0					
ANR	3094898	Identifier	planes		3094729	1					
ANR	3094899	PostIncDecOperationExpression	j ++	801:49:28265:28267	3094729	2	True				
ANR	3094900	Identifier	j		3094729	0					
ANR	3094901	IncDec	++		3094729	1					
ANR	3094902	ExpressionStatement	* ptr [ j ] = 0	801:54:28270:28281	3094729	3	True				
ANR	3094903	AssignmentExpression	* ptr [ j ] = 0		3094729	0		=			
ANR	3094904	UnaryOperationExpression	* ptr [ j ]		3094729	0					
ANR	3094905	UnaryOperator	*		3094729	0					
ANR	3094906	ArrayIndexing	ptr [ j ]		3094729	1					
ANR	3094907	Identifier	ptr		3094729	0					
ANR	3094908	Identifier	j		3094729	1					
ANR	3094909	PrimaryExpression	0		3094729	1					
ANR	3094910	ExpressionStatement	j = 0	804:4:28336:28341	3094729	3	True				
ANR	3094911	AssignmentExpression	j = 0		3094729	0		=			
ANR	3094912	Identifier	j		3094729	0					
ANR	3094913	PrimaryExpression	0		3094729	1					
ANR	3094914	ExpressionStatement	pixel = line [ k ]	805:4:28347:28362	3094729	4	True				
ANR	3094915	AssignmentExpression	pixel = line [ k ]		3094729	0		=			
ANR	3094916	Identifier	pixel		3094729	0					
ANR	3094917	ArrayIndexing	line [ k ]		3094729	1					
ANR	3094918	Identifier	line		3094729	0					
ANR	3094919	Identifier	k		3094729	1					
ANR	3094920	DoStatement	do		3094729	5					
ANR	3094921	CompoundStatement		41:7:1326:1326	3094729	0					
ANR	3094922	ExpressionStatement	j ++	807:6:28379:28382	3094729	0	True				
ANR	3094923	PostIncDecOperationExpression	j ++		3094729	0					
ANR	3094924	Identifier	j		3094729	0					
ANR	3094925	IncDec	++		3094729	1					
ANR	3094926	ExpressionStatement	k ++	807:11:28384:28387	3094729	1	True				
ANR	3094927	PostIncDecOperationExpression	k ++		3094729	0					
ANR	3094928	Identifier	k		3094729	0					
ANR	3094929	IncDec	++		3094729	1					
ANR	3094930	IfStatement	if ( j >= octets_per_pixel )		3094729	2					
ANR	3094931	Condition	j >= octets_per_pixel	808:10:28399:28419	3094729	0	True				
ANR	3094932	RelationalExpression	j >= octets_per_pixel		3094729	0		>=			
ANR	3094933	Identifier	j		3094729	0					
ANR	3094934	Identifier	octets_per_pixel		3094729	1					
ANR	3094935	BreakStatement	break ;	808:33:28422:28427	3094729	1	True				
ANR	3094936	ExpressionStatement	pixel = ( pixel << 8 ) | line [ k ]	809:6:28435:28465	3094729	3	True				
ANR	3094937	AssignmentExpression	pixel = ( pixel << 8 ) | line [ k ]		3094729	0		=			
ANR	3094938	Identifier	pixel		3094729	0					
ANR	3094939	InclusiveOrExpression	( pixel << 8 ) | line [ k ]		3094729	1		|			
ANR	3094940	ShiftExpression	pixel << 8		3094729	0		<<			
ANR	3094941	Identifier	pixel		3094729	0					
ANR	3094942	PrimaryExpression	8		3094729	1					
ANR	3094943	ArrayIndexing	line [ k ]		3094729	1					
ANR	3094944	Identifier	line		3094729	0					
ANR	3094945	Identifier	k		3094729	1					
ANR	3094946	Condition	1	810:13:28503:28503	3094729	1	True				
ANR	3094947	PrimaryExpression	1		3094729	0					
ANR	3094948	ExpressionStatement	comp = pixel & comp_mask	813:4:28555:28579	3094729	6	True				
ANR	3094949	AssignmentExpression	comp = pixel & comp_mask		3094729	0		=			
ANR	3094950	Identifier	comp		3094729	0					
ANR	3094951	BitAndExpression	pixel & comp_mask		3094729	1		&			
ANR	3094952	Identifier	pixel		3094729	0					
ANR	3094953	Identifier	comp_mask		3094729	1					
ANR	3094954	ForStatement	for ( j = 0 ; j < black_planes ; j ++ )		3094729	7					
ANR	3094955	ForInit	j = 0 ;	814:9:28602:28607	3094729	0	True				
ANR	3094956	AssignmentExpression	j = 0		3094729	0		=			
ANR	3094957	Identifier	j		3094729	0					
ANR	3094958	PrimaryExpression	0		3094729	1					
ANR	3094959	Condition	j < black_planes	814:16:28609:28624	3094729	1	True				
ANR	3094960	RelationalExpression	j < black_planes		3094729	0		<			
ANR	3094961	Identifier	j		3094729	0					
ANR	3094962	Identifier	black_planes		3094729	1					
ANR	3094963	PostIncDecOperationExpression	j ++	814:34:28627:28629	3094729	2	True				
ANR	3094964	Identifier	j		3094729	0					
ANR	3094965	IncDec	++		3094729	1					
ANR	3094966	CompoundStatement		49:39:1587:1587	3094729	3					
ANR	3094967	ExpressionStatement	* ptr [ j ] = ( * ptr [ j ] << 1 ) | ( comp & 1 )	815:6:28640:28677	3094729	0	True				
ANR	3094968	AssignmentExpression	* ptr [ j ] = ( * ptr [ j ] << 1 ) | ( comp & 1 )		3094729	0		=			
ANR	3094969	UnaryOperationExpression	* ptr [ j ]		3094729	0					
ANR	3094970	UnaryOperator	*		3094729	0					
ANR	3094971	ArrayIndexing	ptr [ j ]		3094729	1					
ANR	3094972	Identifier	ptr		3094729	0					
ANR	3094973	Identifier	j		3094729	1					
ANR	3094974	InclusiveOrExpression	( * ptr [ j ] << 1 ) | ( comp & 1 )		3094729	1		|			
ANR	3094975	ShiftExpression	* ptr [ j ] << 1		3094729	0		<<			
ANR	3094976	UnaryOperationExpression	* ptr [ j ]		3094729	0					
ANR	3094977	UnaryOperator	*		3094729	0					
ANR	3094978	ArrayIndexing	ptr [ j ]		3094729	1					
ANR	3094979	Identifier	ptr		3094729	0					
ANR	3094980	Identifier	j		3094729	1					
ANR	3094981	PrimaryExpression	1		3094729	1					
ANR	3094982	BitAndExpression	comp & 1		3094729	1		&			
ANR	3094983	Identifier	comp		3094729	0					
ANR	3094984	PrimaryExpression	1		3094729	1					
ANR	3094985	ExpressionStatement	comp >>= 1	816:6:28685:28695	3094729	1	True				
ANR	3094986	AssignmentExpression	comp >>= 1		3094729	0		>>=			
ANR	3094987	Identifier	comp		3094729	0					
ANR	3094988	PrimaryExpression	1		3094729	1					
ANR	3094989	ForStatement	for ( l = 1 ; l < 4 ; l ++ )		3094729	8					
ANR	3094990	ForInit	l = 1 ;	818:9:28712:28717	3094729	0	True				
ANR	3094991	AssignmentExpression	l = 1		3094729	0		=			
ANR	3094992	Identifier	l		3094729	0					
ANR	3094993	PrimaryExpression	1		3094729	1					
ANR	3094994	Condition	l < 4	818:16:28719:28723	3094729	1	True				
ANR	3094995	RelationalExpression	l < 4		3094729	0		<			
ANR	3094996	Identifier	l		3094729	0					
ANR	3094997	PrimaryExpression	4		3094729	1					
ANR	3094998	PostIncDecOperationExpression	l ++	818:23:28726:28728	3094729	2	True				
ANR	3094999	Identifier	l		3094729	0					
ANR	3095000	IncDec	++		3094729	1					
ANR	3095001	CompoundStatement		53:28:1686:1686	3094729	3					
ANR	3095002	ExpressionStatement	comp = ( pixel >> l * dev -> eprn . bits_per_colorant ) & comp_mask	819:6:28739:28798	3094729	0	True				
ANR	3095003	AssignmentExpression	comp = ( pixel >> l * dev -> eprn . bits_per_colorant ) & comp_mask		3094729	0		=			
ANR	3095004	Identifier	comp		3094729	0					
ANR	3095005	BitAndExpression	( pixel >> l * dev -> eprn . bits_per_colorant ) & comp_mask		3094729	1		&			
ANR	3095006	ShiftExpression	pixel >> l * dev -> eprn . bits_per_colorant		3094729	0		>>			
ANR	3095007	Identifier	pixel		3094729	0					
ANR	3095008	MultiplicativeExpression	l * dev -> eprn . bits_per_colorant		3094729	1		*			
ANR	3095009	Identifier	l		3094729	0					
ANR	3095010	MemberAccess	dev -> eprn . bits_per_colorant		3094729	1					
ANR	3095011	PtrMemberAccess	dev -> eprn		3094729	0					
ANR	3095012	Identifier	dev		3094729	0					
ANR	3095013	Identifier	eprn		3094729	1					
ANR	3095014	Identifier	bits_per_colorant		3094729	1					
ANR	3095015	Identifier	comp_mask		3094729	1					
ANR	3095016	ForStatement	"for ( m = 0 ; m < non_black_planes ; m ++ , j ++ )"		3094729	1					
ANR	3095017	ForInit	m = 0 ;	820:11:28811:28816	3094729	0	True				
ANR	3095018	AssignmentExpression	m = 0		3094729	0		=			
ANR	3095019	Identifier	m		3094729	0					
ANR	3095020	PrimaryExpression	0		3094729	1					
ANR	3095021	Condition	m < non_black_planes	820:18:28818:28837	3094729	1	True				
ANR	3095022	RelationalExpression	m < non_black_planes		3094729	0		<			
ANR	3095023	Identifier	m		3094729	0					
ANR	3095024	Identifier	non_black_planes		3094729	1					
ANR	3095025	Expression	"m ++ , j ++"	820:40:28840:28847	3094729	2	True				
ANR	3095026	PostIncDecOperationExpression	m ++		3094729	0					
ANR	3095027	Identifier	m		3094729	0					
ANR	3095028	IncDec	++		3094729	1					
ANR	3095029	PostIncDecOperationExpression	j ++		3094729	1					
ANR	3095030	Identifier	j		3094729	0					
ANR	3095031	IncDec	++		3094729	1					
ANR	3095032	CompoundStatement		55:50:1805:1805	3094729	3					
ANR	3095033	ExpressionStatement	* ptr [ j ] = ( * ptr [ j ] << 1 ) | ( comp & 1 )	821:8:28860:28897	3094729	0	True				
ANR	3095034	AssignmentExpression	* ptr [ j ] = ( * ptr [ j ] << 1 ) | ( comp & 1 )		3094729	0		=			
ANR	3095035	UnaryOperationExpression	* ptr [ j ]		3094729	0					
ANR	3095036	UnaryOperator	*		3094729	0					
ANR	3095037	ArrayIndexing	ptr [ j ]		3094729	1					
ANR	3095038	Identifier	ptr		3094729	0					
ANR	3095039	Identifier	j		3094729	1					
ANR	3095040	InclusiveOrExpression	( * ptr [ j ] << 1 ) | ( comp & 1 )		3094729	1		|			
ANR	3095041	ShiftExpression	* ptr [ j ] << 1		3094729	0		<<			
ANR	3095042	UnaryOperationExpression	* ptr [ j ]		3094729	0					
ANR	3095043	UnaryOperator	*		3094729	0					
ANR	3095044	ArrayIndexing	ptr [ j ]		3094729	1					
ANR	3095045	Identifier	ptr		3094729	0					
ANR	3095046	Identifier	j		3094729	1					
ANR	3095047	PrimaryExpression	1		3094729	1					
ANR	3095048	BitAndExpression	comp & 1		3094729	1		&			
ANR	3095049	Identifier	comp		3094729	0					
ANR	3095050	PrimaryExpression	1		3094729	1					
ANR	3095051	ExpressionStatement	comp >>= 1	822:8:28907:28917	3094729	1	True				
ANR	3095052	AssignmentExpression	comp >>= 1		3094729	0		>>=			
ANR	3095053	Identifier	comp		3094729	0					
ANR	3095054	PrimaryExpression	1		3094729	1					
ANR	3095055	ExpressionStatement	pixels ++	826:4:28938:28946	3094729	9	True				
ANR	3095056	PostIncDecOperationExpression	pixels ++		3094729	0					
ANR	3095057	Identifier	pixels		3094729	0					
ANR	3095058	IncDec	++		3094729	1					
ANR	3095059	IfStatement	if ( pixels % 8 == 0 )		3094729	10					
ANR	3095060	Condition	pixels % 8 == 0	829:8:29029:29043	3094729	0	True				
ANR	3095061	EqualityExpression	pixels % 8 == 0		3094729	0		==			
ANR	3095062	MultiplicativeExpression	pixels % 8		3094729	0		%			
ANR	3095063	Identifier	pixels		3094729	0					
ANR	3095064	PrimaryExpression	8		3094729	1					
ANR	3095065	PrimaryExpression	0		3094729	1					
ANR	3095066	ForStatement	for ( j = 0 ; j < planes ; j ++ )		3094729	1					
ANR	3095067	ForInit	j = 0 ;	829:30:29051:29056	3094729	0	True				
ANR	3095068	AssignmentExpression	j = 0		3094729	0		=			
ANR	3095069	Identifier	j		3094729	0					
ANR	3095070	PrimaryExpression	0		3094729	1					
ANR	3095071	Condition	j < planes	829:37:29058:29067	3094729	1	True				
ANR	3095072	RelationalExpression	j < planes		3094729	0		<			
ANR	3095073	Identifier	j		3094729	0					
ANR	3095074	Identifier	planes		3094729	1					
ANR	3095075	PostIncDecOperationExpression	j ++	829:49:29070:29072	3094729	2	True				
ANR	3095076	Identifier	j		3094729	0					
ANR	3095077	IncDec	++		3094729	1					
ANR	3095078	ExpressionStatement	ptr [ j ] ++	829:54:29075:29083	3094729	3	True				
ANR	3095079	PostIncDecOperationExpression	ptr [ j ] ++		3094729	0					
ANR	3095080	ArrayIndexing	ptr [ j ]		3094729	0					
ANR	3095081	Identifier	ptr		3094729	0					
ANR	3095082	Identifier	j		3094729	1					
ANR	3095083	IncDec	++		3094729	1					
ANR	3095084	ExpressionStatement	"eprn_finalize ( dev -> eprn . colour_model == eprn_DeviceRGB , dev -> eprn . non_black_levels , planes , plane , ptr , pixels )"	832:2:29092:29207	3094729	11	True				
ANR	3095085	CallExpression	"eprn_finalize ( dev -> eprn . colour_model == eprn_DeviceRGB , dev -> eprn . non_black_levels , planes , plane , ptr , pixels )"		3094729	0					
ANR	3095086	Callee	eprn_finalize		3094729	0					
ANR	3095087	Identifier	eprn_finalize		3094729	0					
ANR	3095088	ArgumentList	dev -> eprn . colour_model == eprn_DeviceRGB		3094729	1					
ANR	3095089	Argument	dev -> eprn . colour_model == eprn_DeviceRGB		3094729	0					
ANR	3095090	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceRGB		3094729	0		==			
ANR	3095091	MemberAccess	dev -> eprn . colour_model		3094729	0					
ANR	3095092	PtrMemberAccess	dev -> eprn		3094729	0					
ANR	3095093	Identifier	dev		3094729	0					
ANR	3095094	Identifier	eprn		3094729	1					
ANR	3095095	Identifier	colour_model		3094729	1					
ANR	3095096	Identifier	eprn_DeviceRGB		3094729	1					
ANR	3095097	Argument	dev -> eprn . non_black_levels		3094729	1					
ANR	3095098	MemberAccess	dev -> eprn . non_black_levels		3094729	0					
ANR	3095099	PtrMemberAccess	dev -> eprn		3094729	0					
ANR	3095100	Identifier	dev		3094729	0					
ANR	3095101	Identifier	eprn		3094729	1					
ANR	3095102	Identifier	non_black_levels		3094729	1					
ANR	3095103	Argument	planes		3094729	2					
ANR	3095104	Identifier	planes		3094729	0					
ANR	3095105	Argument	plane		3094729	3					
ANR	3095106	Identifier	plane		3094729	0					
ANR	3095107	Argument	ptr		3094729	4					
ANR	3095108	Identifier	ptr		3094729	0					
ANR	3095109	Argument	pixels		3094729	5					
ANR	3095110	Identifier	pixels		3094729	0					
ANR	3095111	ReturnStatement	return ;	835:2:29212:29218	3094729	12	True				
ANR	3095112	ReturnType	static void		3094729	1					
ANR	3095113	Identifier	split_line_ge8		3094729	2					
ANR	3095114	ParameterList	"eprn_Device * dev , const eprn_Octet * line , int length , eprn_OctetString plane [ ]"		3094729	3					
ANR	3095115	Parameter	eprn_Device * dev	764:27:26962:26977	3094729	0	True				
ANR	3095116	ParameterType	eprn_Device *		3094729	0					
ANR	3095117	Identifier	dev		3094729	1					
ANR	3095118	Parameter	const eprn_Octet * line	764:45:26980:27001	3094729	1	True				
ANR	3095119	ParameterType	const eprn_Octet *		3094729	0					
ANR	3095120	Identifier	line		3094729	1					
ANR	3095121	Parameter	int length	765:2:27006:27015	3094729	2	True				
ANR	3095122	ParameterType	int		3094729	0					
ANR	3095123	Identifier	length		3094729	1					
ANR	3095124	Parameter	eprn_OctetString plane [ ]	765:14:27018:27041	3094729	3	True				
ANR	3095125	ParameterType	eprn_OctetString [ ]		3094729	0					
ANR	3095126	Identifier	plane		3094729	1					
ANR	3095127	CFGEntryNode	ENTRY		3094729		True				
ANR	3095128	CFGExitNode	EXIT		3094729		True				
ANR	3095129	Symbol	plane		3094729						
ANR	3095130	Symbol	* dev		3094729						
ANR	3095131	Symbol	dev -> eprn . non_black_levels		3094729						
ANR	3095132	Symbol	plane [ j ] . str		3094729						
ANR	3095133	Symbol	* * ptr		3094729						
ANR	3095134	Symbol	black_planes		3094729						
ANR	3095135	Symbol	line		3094729						
ANR	3095136	Symbol	dev -> eprn . bits_per_colorant		3094729						
ANR	3095137	Symbol	* line		3094729						
ANR	3095138	Symbol	dev -> color_info		3094729						
ANR	3095139	Symbol	dev -> color_info . depth		3094729						
ANR	3095140	Symbol	dev -> eprn . colour_model		3094729						
ANR	3095141	Symbol	dev		3094729						
ANR	3095142	Symbol	eprn_bits_for_levels		3094729						
ANR	3095143	Symbol	* ptr		3094729						
ANR	3095144	Symbol	non_black_planes		3094729						
ANR	3095145	Symbol	* ptr [ j ]		3094729						
ANR	3095146	Symbol	* plane		3094729						
ANR	3095147	Symbol	dev -> eprn		3094729						
ANR	3095148	Symbol	pixel		3094729						
ANR	3095149	Symbol	comp		3094729						
ANR	3095150	Symbol	* * j		3094729						
ANR	3095151	Symbol	octets_per_pixel		3094729						
ANR	3095152	Symbol	dev -> eprn . black_levels		3094729						
ANR	3095153	Symbol	length		3094729						
ANR	3095154	Symbol	planes		3094729						
ANR	3095155	Symbol	j		3094729						
ANR	3095156	Symbol	k		3094729						
ANR	3095157	Symbol	l		3094729						
ANR	3095158	Symbol	m		3094729						
ANR	3095159	Symbol	ptr		3094729						
ANR	3095160	Symbol	comp_mask		3094729						
ANR	3095161	Symbol	pixels		3094729						
ANR	3095162	Symbol	* j		3094729						
ANR	3095163	Symbol	* k		3094729						
ANR	3095164	Symbol	eprn_DeviceRGB		3094729						
ANR	3095165	Function	split_line_3or4x1	847:0:29548:31574							
ANR	3095166	FunctionDef	"split_line_3or4x1 (eprn_Device * dev , const eprn_Octet * line , int length , eprn_OctetString plane [ ])"		3095165	0					
ANR	3095167	CompoundStatement		849:0:29660:31574	3095165	0					
ANR	3095168	IdentifierDeclStatement	"int from = ( dev -> eprn . colour_model == eprn_DeviceRGB || dev -> eprn . colour_model == eprn_DeviceCMY ? 1 : 0 ) , j , k , l ;"	850:2:29664:29798	3095165	0	True				
ANR	3095169	IdentifierDecl	from = ( dev -> eprn . colour_model == eprn_DeviceRGB || dev -> eprn . colour_model == eprn_DeviceCMY ? 1 : 0 )		3095165	0					
ANR	3095170	IdentifierDeclType	int		3095165	0					
ANR	3095171	Identifier	from		3095165	1					
ANR	3095172	AssignmentExpression	from = ( dev -> eprn . colour_model == eprn_DeviceRGB || dev -> eprn . colour_model == eprn_DeviceCMY ? 1 : 0 )		3095165	2		=			
ANR	3095173	Identifier	from		3095165	0					
ANR	3095174	ConditionalExpression	dev -> eprn . colour_model == eprn_DeviceRGB || dev -> eprn . colour_model == eprn_DeviceCMY ? 1 : 0		3095165	1					
ANR	3095175	Condition	dev -> eprn . colour_model == eprn_DeviceRGB || dev -> eprn . colour_model == eprn_DeviceCMY		3095165	0					
ANR	3095176	OrExpression	dev -> eprn . colour_model == eprn_DeviceRGB || dev -> eprn . colour_model == eprn_DeviceCMY		3095165	0		||			
ANR	3095177	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceRGB		3095165	0		==			
ANR	3095178	MemberAccess	dev -> eprn . colour_model		3095165	0					
ANR	3095179	PtrMemberAccess	dev -> eprn		3095165	0					
ANR	3095180	Identifier	dev		3095165	0					
ANR	3095181	Identifier	eprn		3095165	1					
ANR	3095182	Identifier	colour_model		3095165	1					
ANR	3095183	Identifier	eprn_DeviceRGB		3095165	1					
ANR	3095184	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceCMY		3095165	1		==			
ANR	3095185	MemberAccess	dev -> eprn . colour_model		3095165	0					
ANR	3095186	PtrMemberAccess	dev -> eprn		3095165	0					
ANR	3095187	Identifier	dev		3095165	0					
ANR	3095188	Identifier	eprn		3095165	1					
ANR	3095189	Identifier	colour_model		3095165	1					
ANR	3095190	Identifier	eprn_DeviceCMY		3095165	1					
ANR	3095191	PrimaryExpression	1		3095165	1					
ANR	3095192	PrimaryExpression	0		3095165	2					
ANR	3095193	IdentifierDecl	j		3095165	1					
ANR	3095194	IdentifierDeclType	int		3095165	0					
ANR	3095195	Identifier	j		3095165	1					
ANR	3095196	IdentifierDecl	k		3095165	2					
ANR	3095197	IdentifierDeclType	int		3095165	0					
ANR	3095198	Identifier	k		3095165	1					
ANR	3095199	IdentifierDecl	l		3095165	3					
ANR	3095200	IdentifierDeclType	int		3095165	0					
ANR	3095201	Identifier	l		3095165	1					
ANR	3095202	IdentifierDeclStatement	eprn_Octet * ptr [ 4 ] ;	856:2:29802:29820	3095165	1	True				
ANR	3095203	IdentifierDecl	* ptr [ 4 ]		3095165	0					
ANR	3095204	IdentifierDeclType	eprn_Octet * [ 4 ]		3095165	0					
ANR	3095205	Identifier	ptr		3095165	1					
ANR	3095206	PrimaryExpression	4		3095165	2					
ANR	3095207	ExpressionStatement	ptr [ 0 ] = NULL	858:2:29871:29884	3095165	2	True				
ANR	3095208	AssignmentExpression	ptr [ 0 ] = NULL		3095165	0		=			
ANR	3095209	ArrayIndexing	ptr [ 0 ]		3095165	0					
ANR	3095210	Identifier	ptr		3095165	0					
ANR	3095211	PrimaryExpression	0		3095165	1					
ANR	3095212	Identifier	NULL		3095165	1					
ANR	3095213	ForStatement	for ( j = from ; j < 4 ; j ++ )		3095165	3					
ANR	3095214	ForInit	j = from ;	859:7:29921:29929	3095165	0	True				
ANR	3095215	AssignmentExpression	j = from		3095165	0		=			
ANR	3095216	Identifier	j		3095165	0					
ANR	3095217	Identifier	from		3095165	1					
ANR	3095218	Condition	j < 4	859:17:29931:29935	3095165	1	True				
ANR	3095219	RelationalExpression	j < 4		3095165	0		<			
ANR	3095220	Identifier	j		3095165	0					
ANR	3095221	PrimaryExpression	4		3095165	1					
ANR	3095222	PostIncDecOperationExpression	j ++	859:24:29938:29940	3095165	2	True				
ANR	3095223	Identifier	j		3095165	0					
ANR	3095224	IncDec	++		3095165	1					
ANR	3095225	ExpressionStatement	ptr [ j ] = plane [ j - from ] . str	859:29:29943:29969	3095165	3	True				
ANR	3095226	AssignmentExpression	ptr [ j ] = plane [ j - from ] . str		3095165	0		=			
ANR	3095227	ArrayIndexing	ptr [ j ]		3095165	0					
ANR	3095228	Identifier	ptr		3095165	0					
ANR	3095229	Identifier	j		3095165	1					
ANR	3095230	MemberAccess	plane [ j - from ] . str		3095165	1					
ANR	3095231	ArrayIndexing	plane [ j - from ]		3095165	0					
ANR	3095232	Identifier	plane		3095165	0					
ANR	3095233	AdditiveExpression	j - from		3095165	1		-			
ANR	3095234	Identifier	j		3095165	0					
ANR	3095235	Identifier	from		3095165	1					
ANR	3095236	Identifier	str		3095165	1					
ANR	3095237	ExpressionStatement	k = 0	865:2:30148:30153	3095165	4	True				
ANR	3095238	AssignmentExpression	k = 0		3095165	0		=			
ANR	3095239	Identifier	k		3095165	0					
ANR	3095240	PrimaryExpression	0		3095165	1					
ANR	3095241	WhileStatement	while ( k < length )		3095165	5					
ANR	3095242	Condition	k < length	866:9:30164:30173	3095165	0	True				
ANR	3095243	RelationalExpression	k < length		3095165	0		<			
ANR	3095244	Identifier	k		3095165	0					
ANR	3095245	Identifier	length		3095165	1					
ANR	3095246	CompoundStatement		19:4:521:555	3095165	1					
ANR	3095247	IdentifierDeclStatement	"eprn_Octet octet [ 4 ] = { 0 , 0 , 0 , 0 } ;"	867:4:30182:30216	3095165	0	True				
ANR	3095248	IdentifierDecl	"octet [ 4 ] = { 0 , 0 , 0 , 0 }"		3095165	0					
ANR	3095249	IdentifierDeclType	eprn_Octet [ 4 ]		3095165	0					
ANR	3095250	Identifier	octet		3095165	1					
ANR	3095251	PrimaryExpression	4		3095165	2					
ANR	3095252	AssignmentExpression	"octet [ 4 ] = { 0 , 0 , 0 , 0 }"		3095165	3		=			
ANR	3095253	Identifier	octet		3095165	0					
ANR	3095254	InitializerList	0		3095165	1					
ANR	3095255	PrimaryExpression	0		3095165	0					
ANR	3095256	PrimaryExpression	0		3095165	1					
ANR	3095257	PrimaryExpression	0		3095165	2					
ANR	3095258	PrimaryExpression	0		3095165	3					
ANR	3095259	ForStatement	"for ( l = 0 ; l < 4 && k < length ; l ++ , k ++ )"		3095165	1					
ANR	3095260	ForInit	l = 0 ;	869:9:30228:30233	3095165	0	True				
ANR	3095261	AssignmentExpression	l = 0		3095165	0		=			
ANR	3095262	Identifier	l		3095165	0					
ANR	3095263	PrimaryExpression	0		3095165	1					
ANR	3095264	Condition	l < 4 && k < length	869:16:30235:30253	3095165	1	True				
ANR	3095265	AndExpression	l < 4 && k < length		3095165	0		&&			
ANR	3095266	RelationalExpression	l < 4		3095165	0		<			
ANR	3095267	Identifier	l		3095165	0					
ANR	3095268	PrimaryExpression	4		3095165	1					
ANR	3095269	RelationalExpression	k < length		3095165	1		<			
ANR	3095270	Identifier	k		3095165	0					
ANR	3095271	Identifier	length		3095165	1					
ANR	3095272	Expression	"l ++ , k ++"	869:37:30256:30263	3095165	2	True				
ANR	3095273	PostIncDecOperationExpression	l ++		3095165	0					
ANR	3095274	Identifier	l		3095165	0					
ANR	3095275	IncDec	++		3095165	1					
ANR	3095276	PostIncDecOperationExpression	k ++		3095165	1					
ANR	3095277	Identifier	k		3095165	0					
ANR	3095278	IncDec	++		3095165	1					
ANR	3095279	CompoundStatement		22:6:613:628	3095165	3					
ANR	3095280	IdentifierDeclStatement	eprn_Octet part ;	870:6:30274:30289	3095165	0	True				
ANR	3095281	IdentifierDecl	part		3095165	0					
ANR	3095282	IdentifierDeclType	eprn_Octet		3095165	0					
ANR	3095283	Identifier	part		3095165	1					
ANR	3095284	Statement	define	871:1:30292:30297	3095165	1	True				
ANR	3095285	Statement	treat_quartet	871:8:30299:30311	3095165	2	True				
ANR	3095286	Statement	(	871:21:30312:30312	3095165	3	True				
ANR	3095287	Statement	)	871:22:30313:30313	3095165	4	True				
ANR	3095288	ExpressionStatement	octet [ COLORANT_0_INDEX ] <<= 1	872:6:30328:30357	3095165	5	True				
ANR	3095289	AssignmentExpression	octet [ COLORANT_0_INDEX ] <<= 1		3095165	0		<<=			
ANR	3095290	ArrayIndexing	octet [ COLORANT_0_INDEX ]		3095165	0					
ANR	3095291	Identifier	octet		3095165	0					
ANR	3095292	Identifier	COLORANT_0_INDEX		3095165	1					
ANR	3095293	PrimaryExpression	1		3095165	1					
ANR	3095294	IfStatement	if ( part & COLORANT_0_BIT )		3095165	6					
ANR	3095295	Condition	part & COLORANT_0_BIT	873:10:30374:30394	3095165	0	True				
ANR	3095296	BitAndExpression	part & COLORANT_0_BIT		3095165	0		&			
ANR	3095297	Identifier	part		3095165	0					
ANR	3095298	Identifier	COLORANT_0_BIT		3095165	1					
ANR	3095299	ExpressionStatement	octet [ COLORANT_0_INDEX ] |= 1	873:33:30397:30425	3095165	1	True				
ANR	3095300	AssignmentExpression	octet [ COLORANT_0_INDEX ] |= 1		3095165	0		|=			
ANR	3095301	ArrayIndexing	octet [ COLORANT_0_INDEX ]		3095165	0					
ANR	3095302	Identifier	octet		3095165	0					
ANR	3095303	Identifier	COLORANT_0_INDEX		3095165	1					
ANR	3095304	PrimaryExpression	1		3095165	1					
ANR	3095305	ExpressionStatement	octet [ COLORANT_1_INDEX ] <<= 1	874:6:30435:30464	3095165	7	True				
ANR	3095306	AssignmentExpression	octet [ COLORANT_1_INDEX ] <<= 1		3095165	0		<<=			
ANR	3095307	ArrayIndexing	octet [ COLORANT_1_INDEX ]		3095165	0					
ANR	3095308	Identifier	octet		3095165	0					
ANR	3095309	Identifier	COLORANT_1_INDEX		3095165	1					
ANR	3095310	PrimaryExpression	1		3095165	1					
ANR	3095311	IfStatement	if ( part & COLORANT_1_BIT )		3095165	8					
ANR	3095312	Condition	part & COLORANT_1_BIT	875:10:30481:30501	3095165	0	True				
ANR	3095313	BitAndExpression	part & COLORANT_1_BIT		3095165	0		&			
ANR	3095314	Identifier	part		3095165	0					
ANR	3095315	Identifier	COLORANT_1_BIT		3095165	1					
ANR	3095316	ExpressionStatement	octet [ COLORANT_1_INDEX ] |= 1	875:33:30504:30532	3095165	1	True				
ANR	3095317	AssignmentExpression	octet [ COLORANT_1_INDEX ] |= 1		3095165	0		|=			
ANR	3095318	ArrayIndexing	octet [ COLORANT_1_INDEX ]		3095165	0					
ANR	3095319	Identifier	octet		3095165	0					
ANR	3095320	Identifier	COLORANT_1_INDEX		3095165	1					
ANR	3095321	PrimaryExpression	1		3095165	1					
ANR	3095322	ExpressionStatement	octet [ COLORANT_2_INDEX ] <<= 1	876:6:30542:30571	3095165	9	True				
ANR	3095323	AssignmentExpression	octet [ COLORANT_2_INDEX ] <<= 1		3095165	0		<<=			
ANR	3095324	ArrayIndexing	octet [ COLORANT_2_INDEX ]		3095165	0					
ANR	3095325	Identifier	octet		3095165	0					
ANR	3095326	Identifier	COLORANT_2_INDEX		3095165	1					
ANR	3095327	PrimaryExpression	1		3095165	1					
ANR	3095328	IfStatement	if ( part & COLORANT_2_BIT )		3095165	10					
ANR	3095329	Condition	part & COLORANT_2_BIT	877:10:30588:30608	3095165	0	True				
ANR	3095330	BitAndExpression	part & COLORANT_2_BIT		3095165	0		&			
ANR	3095331	Identifier	part		3095165	0					
ANR	3095332	Identifier	COLORANT_2_BIT		3095165	1					
ANR	3095333	ExpressionStatement	octet [ COLORANT_2_INDEX ] |= 1	877:33:30611:30639	3095165	1	True				
ANR	3095334	AssignmentExpression	octet [ COLORANT_2_INDEX ] |= 1		3095165	0		|=			
ANR	3095335	ArrayIndexing	octet [ COLORANT_2_INDEX ]		3095165	0					
ANR	3095336	Identifier	octet		3095165	0					
ANR	3095337	Identifier	COLORANT_2_INDEX		3095165	1					
ANR	3095338	PrimaryExpression	1		3095165	1					
ANR	3095339	ExpressionStatement	octet [ COLORANT_3_INDEX ] <<= 1	878:6:30649:30678	3095165	11	True				
ANR	3095340	AssignmentExpression	octet [ COLORANT_3_INDEX ] <<= 1		3095165	0		<<=			
ANR	3095341	ArrayIndexing	octet [ COLORANT_3_INDEX ]		3095165	0					
ANR	3095342	Identifier	octet		3095165	0					
ANR	3095343	Identifier	COLORANT_3_INDEX		3095165	1					
ANR	3095344	PrimaryExpression	1		3095165	1					
ANR	3095345	IfStatement	if ( part & COLORANT_3_BIT )		3095165	12					
ANR	3095346	Condition	part & COLORANT_3_BIT	879:10:30695:30715	3095165	0	True				
ANR	3095347	BitAndExpression	part & COLORANT_3_BIT		3095165	0		&			
ANR	3095348	Identifier	part		3095165	0					
ANR	3095349	Identifier	COLORANT_3_BIT		3095165	1					
ANR	3095350	ExpressionStatement	octet [ COLORANT_3_INDEX ] |= 1	879:33:30718:30746	3095165	1	True				
ANR	3095351	AssignmentExpression	octet [ COLORANT_3_INDEX ] |= 1		3095165	0		|=			
ANR	3095352	ArrayIndexing	octet [ COLORANT_3_INDEX ]		3095165	0					
ANR	3095353	Identifier	octet		3095165	0					
ANR	3095354	Identifier	COLORANT_3_INDEX		3095165	1					
ANR	3095355	PrimaryExpression	1		3095165	1					
ANR	3095356	ExpressionStatement	part = ( line [ k ] >> 4 ) & 0x0F	882:6:30783:30811	3095165	13	True				
ANR	3095357	AssignmentExpression	part = ( line [ k ] >> 4 ) & 0x0F		3095165	0		=			
ANR	3095358	Identifier	part		3095165	0					
ANR	3095359	BitAndExpression	( line [ k ] >> 4 ) & 0x0F		3095165	1		&			
ANR	3095360	ShiftExpression	line [ k ] >> 4		3095165	0		>>			
ANR	3095361	ArrayIndexing	line [ k ]		3095165	0					
ANR	3095362	Identifier	line		3095165	0					
ANR	3095363	Identifier	k		3095165	1					
ANR	3095364	PrimaryExpression	4		3095165	1					
ANR	3095365	PrimaryExpression	0x0F		3095165	1					
ANR	3095366	Statement	treat_quartet	883:6:30819:30831	3095165	14	True				
ANR	3095367	Statement	(	883:19:30832:30832	3095165	15	True				
ANR	3095368	Statement	)	883:20:30833:30833	3095165	16	True				
ANR	3095369	ExpressionStatement	part = line [ k ] & 0x0F	886:6:30870:30891	3095165	17	True				
ANR	3095370	AssignmentExpression	part = line [ k ] & 0x0F		3095165	0		=			
ANR	3095371	Identifier	part		3095165	0					
ANR	3095372	BitAndExpression	line [ k ] & 0x0F		3095165	1		&			
ANR	3095373	ArrayIndexing	line [ k ]		3095165	0					
ANR	3095374	Identifier	line		3095165	0					
ANR	3095375	Identifier	k		3095165	1					
ANR	3095376	PrimaryExpression	0x0F		3095165	1					
ANR	3095377	Statement	treat_quartet	887:6:30899:30911	3095165	18	True				
ANR	3095378	Statement	(	887:19:30912:30912	3095165	19	True				
ANR	3095379	Statement	)	887:20:30913:30913	3095165	20	True				
ANR	3095380	Statement	undef	889:1:30917:30921	3095165	21	True				
ANR	3095381	Statement	treat_quartet	889:7:30923:30935	3095165	22	True				
ANR	3095382	IfStatement	if ( l < 4 )		3095165	2					
ANR	3095383	Condition	l < 4	891:8:30951:30955	3095165	0	True				
ANR	3095384	RelationalExpression	l < 4		3095165	0		<			
ANR	3095385	Identifier	l		3095165	0					
ANR	3095386	PrimaryExpression	4		3095165	1					
ANR	3095387	CompoundStatement		43:15:1297:1297	3095165	1					
ANR	3095388	ForStatement	for ( j = from ; j < 4 ; j ++ )		3095165	0					
ANR	3095389	ForInit	j = from ;	892:11:30971:30979	3095165	0	True				
ANR	3095390	AssignmentExpression	j = from		3095165	0		=			
ANR	3095391	Identifier	j		3095165	0					
ANR	3095392	Identifier	from		3095165	1					
ANR	3095393	Condition	j < 4	892:21:30981:30985	3095165	1	True				
ANR	3095394	RelationalExpression	j < 4		3095165	0		<			
ANR	3095395	Identifier	j		3095165	0					
ANR	3095396	PrimaryExpression	4		3095165	1					
ANR	3095397	PostIncDecOperationExpression	j ++	892:28:30988:30990	3095165	2	True				
ANR	3095398	Identifier	j		3095165	0					
ANR	3095399	IncDec	++		3095165	1					
ANR	3095400	ExpressionStatement	octet [ j ] <<= 8 - 2 * l	892:33:30993:31013	3095165	3	True				
ANR	3095401	AssignmentExpression	octet [ j ] <<= 8 - 2 * l		3095165	0		<<=			
ANR	3095402	ArrayIndexing	octet [ j ]		3095165	0					
ANR	3095403	Identifier	octet		3095165	0					
ANR	3095404	Identifier	j		3095165	1					
ANR	3095405	AdditiveExpression	8 - 2 * l		3095165	1		-			
ANR	3095406	PrimaryExpression	8		3095165	0					
ANR	3095407	MultiplicativeExpression	2 * l		3095165	1		*			
ANR	3095408	PrimaryExpression	2		3095165	0					
ANR	3095409	Identifier	l		3095165	1					
ANR	3095410	IfStatement	if ( dev -> eprn . colour_model == eprn_DeviceRGB )		3095165	1					
ANR	3095411	Condition	dev -> eprn . colour_model == eprn_DeviceRGB	893:10:31025:31064	3095165	0	True				
ANR	3095412	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceRGB		3095165	0		==			
ANR	3095413	MemberAccess	dev -> eprn . colour_model		3095165	0					
ANR	3095414	PtrMemberAccess	dev -> eprn		3095165	0					
ANR	3095415	Identifier	dev		3095165	0					
ANR	3095416	Identifier	eprn		3095165	1					
ANR	3095417	Identifier	colour_model		3095165	1					
ANR	3095418	Identifier	eprn_DeviceRGB		3095165	1					
ANR	3095419	CompoundStatement		45:52:1406:1406	3095165	1					
ANR	3095420	ForStatement	for ( j = 1 ; j < 4 ; j ++ )		3095165	0					
ANR	3095421	ForInit	j = 1 ;	895:13:31133:31138	3095165	0	True				
ANR	3095422	AssignmentExpression	j = 1		3095165	0		=			
ANR	3095423	Identifier	j		3095165	0					
ANR	3095424	PrimaryExpression	1		3095165	1					
ANR	3095425	Condition	j < 4	895:20:31140:31144	3095165	1	True				
ANR	3095426	RelationalExpression	j < 4		3095165	0		<			
ANR	3095427	Identifier	j		3095165	0					
ANR	3095428	PrimaryExpression	4		3095165	1					
ANR	3095429	PostIncDecOperationExpression	j ++	895:27:31147:31149	3095165	2	True				
ANR	3095430	Identifier	j		3095165	0					
ANR	3095431	IncDec	++		3095165	1					
ANR	3095432	CompoundStatement		48:10:1503:1508	3095165	3					
ANR	3095433	IdentifierDeclStatement	int k ;	896:10:31164:31169	3095165	0	True				
ANR	3095434	IdentifierDecl	k		3095165	0					
ANR	3095435	IdentifierDeclType	int		3095165	0					
ANR	3095436	Identifier	k		3095165	1					
ANR	3095437	ForStatement	for ( k = 3 - l ; k >= 0 ; k -- )		3095165	1					
ANR	3095438	ForInit	k = 3 - l ;	898:15:31230:31239	3095165	0	True				
ANR	3095439	AssignmentExpression	k = 3 - l		3095165	0		=			
ANR	3095440	Identifier	k		3095165	0					
ANR	3095441	AdditiveExpression	3 - l		3095165	1		-			
ANR	3095442	PrimaryExpression	3		3095165	0					
ANR	3095443	Identifier	l		3095165	1					
ANR	3095444	Condition	k >= 0	898:26:31241:31246	3095165	1	True				
ANR	3095445	RelationalExpression	k >= 0		3095165	0		>=			
ANR	3095446	Identifier	k		3095165	0					
ANR	3095447	PrimaryExpression	0		3095165	1					
ANR	3095448	PostIncDecOperationExpression	k --	898:34:31249:31251	3095165	2	True				
ANR	3095449	Identifier	k		3095165	0					
ANR	3095450	IncDec	--		3095165	1					
ANR	3095451	ExpressionStatement	octet [ j ] |= 0x03 << k	898:39:31254:31275	3095165	3	True				
ANR	3095452	AssignmentExpression	octet [ j ] |= 0x03 << k		3095165	0		|=			
ANR	3095453	ArrayIndexing	octet [ j ]		3095165	0					
ANR	3095454	Identifier	octet		3095165	0					
ANR	3095455	Identifier	j		3095165	1					
ANR	3095456	ShiftExpression	0x03 << k		3095165	1		<<			
ANR	3095457	PrimaryExpression	0x03		3095165	0					
ANR	3095458	Identifier	k		3095165	1					
ANR	3095459	ForStatement	for ( j = from ; j < 4 ; j ++ )		3095165	3					
ANR	3095460	ForInit	j = from ;	902:9:31310:31318	3095165	0	True				
ANR	3095461	AssignmentExpression	j = from		3095165	0		=			
ANR	3095462	Identifier	j		3095165	0					
ANR	3095463	Identifier	from		3095165	1					
ANR	3095464	Condition	j < 4	902:19:31320:31324	3095165	1	True				
ANR	3095465	RelationalExpression	j < 4		3095165	0		<			
ANR	3095466	Identifier	j		3095165	0					
ANR	3095467	PrimaryExpression	4		3095165	1					
ANR	3095468	PostIncDecOperationExpression	j ++	902:26:31327:31329	3095165	2	True				
ANR	3095469	Identifier	j		3095165	0					
ANR	3095470	IncDec	++		3095165	1					
ANR	3095471	ExpressionStatement	* ( ptr [ j ] ++ ) = octet [ j ]	902:31:31332:31354	3095165	3	True				
ANR	3095472	AssignmentExpression	* ( ptr [ j ] ++ ) = octet [ j ]		3095165	0		=			
ANR	3095473	UnaryOperationExpression	* ( ptr [ j ] ++ )		3095165	0					
ANR	3095474	UnaryOperator	*		3095165	0					
ANR	3095475	PostIncDecOperationExpression	ptr [ j ] ++		3095165	1					
ANR	3095476	ArrayIndexing	ptr [ j ]		3095165	0					
ANR	3095477	Identifier	ptr		3095165	0					
ANR	3095478	Identifier	j		3095165	1					
ANR	3095479	IncDec	++		3095165	1					
ANR	3095480	ArrayIndexing	octet [ j ]		3095165	1					
ANR	3095481	Identifier	octet		3095165	0					
ANR	3095482	Identifier	j		3095165	1					
ANR	3095483	ForStatement	for ( j = 0 ; j < dev -> eprn . output_planes ; j ++ )		3095165	6					
ANR	3095484	ForInit	j = 0 ;	906:7:31417:31422	3095165	0	True				
ANR	3095485	AssignmentExpression	j = 0		3095165	0		=			
ANR	3095486	Identifier	j		3095165	0					
ANR	3095487	PrimaryExpression	0		3095165	1					
ANR	3095488	Condition	j < dev -> eprn . output_planes	906:14:31424:31450	3095165	1	True				
ANR	3095489	RelationalExpression	j < dev -> eprn . output_planes		3095165	0		<			
ANR	3095490	Identifier	j		3095165	0					
ANR	3095491	MemberAccess	dev -> eprn . output_planes		3095165	1					
ANR	3095492	PtrMemberAccess	dev -> eprn		3095165	0					
ANR	3095493	Identifier	dev		3095165	0					
ANR	3095494	Identifier	eprn		3095165	1					
ANR	3095495	Identifier	output_planes		3095165	1					
ANR	3095496	PostIncDecOperationExpression	j ++	906:43:31453:31455	3095165	2	True				
ANR	3095497	Identifier	j		3095165	0					
ANR	3095498	IncDec	++		3095165	1					
ANR	3095499	CompoundStatement		58:48:1797:1797	3095165	3					
ANR	3095500	IfStatement	if ( length == 0 )		3095165	0					
ANR	3095501	Condition	length == 0	907:8:31468:31478	3095165	0	True				
ANR	3095502	EqualityExpression	length == 0		3095165	0		==			
ANR	3095503	Identifier	length		3095165	0					
ANR	3095504	PrimaryExpression	0		3095165	1					
ANR	3095505	ExpressionStatement	plane [ j ] . length = 0	907:21:31481:31500	3095165	1	True				
ANR	3095506	AssignmentExpression	plane [ j ] . length = 0		3095165	0		=			
ANR	3095507	MemberAccess	plane [ j ] . length		3095165	0					
ANR	3095508	ArrayIndexing	plane [ j ]		3095165	0					
ANR	3095509	Identifier	plane		3095165	0					
ANR	3095510	Identifier	j		3095165	1					
ANR	3095511	Identifier	length		3095165	1					
ANR	3095512	PrimaryExpression	0		3095165	1					
ANR	3095513	ElseStatement	else		3095165	0					
ANR	3095514	ExpressionStatement	plane [ j ] . length = ptr [ from + j ] - plane [ j ] . str	908:9:31511:31557	3095165	0	True				
ANR	3095515	AssignmentExpression	plane [ j ] . length = ptr [ from + j ] - plane [ j ] . str		3095165	0		=			
ANR	3095516	MemberAccess	plane [ j ] . length		3095165	0					
ANR	3095517	ArrayIndexing	plane [ j ]		3095165	0					
ANR	3095518	Identifier	plane		3095165	0					
ANR	3095519	Identifier	j		3095165	1					
ANR	3095520	Identifier	length		3095165	1					
ANR	3095521	AdditiveExpression	ptr [ from + j ] - plane [ j ] . str		3095165	1		-			
ANR	3095522	ArrayIndexing	ptr [ from + j ]		3095165	0					
ANR	3095523	Identifier	ptr		3095165	0					
ANR	3095524	AdditiveExpression	from + j		3095165	1		+			
ANR	3095525	Identifier	from		3095165	0					
ANR	3095526	Identifier	j		3095165	1					
ANR	3095527	MemberAccess	plane [ j ] . str		3095165	1					
ANR	3095528	ArrayIndexing	plane [ j ]		3095165	0					
ANR	3095529	Identifier	plane		3095165	0					
ANR	3095530	Identifier	j		3095165	1					
ANR	3095531	Identifier	str		3095165	1					
ANR	3095532	ReturnStatement	return ;	911:2:31566:31572	3095165	7	True				
ANR	3095533	ReturnType	static void		3095165	1					
ANR	3095534	Identifier	split_line_3or4x1		3095165	2					
ANR	3095535	ParameterList	"eprn_Device * dev , const eprn_Octet * line , int length , eprn_OctetString plane [ ]"		3095165	3					
ANR	3095536	Parameter	eprn_Device * dev	847:30:29578:29593	3095165	0	True				
ANR	3095537	ParameterType	eprn_Device *		3095165	0					
ANR	3095538	Identifier	dev		3095165	1					
ANR	3095539	Parameter	const eprn_Octet * line	847:48:29596:29617	3095165	1	True				
ANR	3095540	ParameterType	const eprn_Octet *		3095165	0					
ANR	3095541	Identifier	line		3095165	1					
ANR	3095542	Parameter	int length	848:2:29622:29631	3095165	2	True				
ANR	3095543	ParameterType	int		3095165	0					
ANR	3095544	Identifier	length		3095165	1					
ANR	3095545	Parameter	eprn_OctetString plane [ ]	848:14:29634:29657	3095165	3	True				
ANR	3095546	ParameterType	eprn_OctetString [ ]		3095165	0					
ANR	3095547	Identifier	plane		3095165	1					
ANR	3095548	CFGEntryNode	ENTRY		3095165		True				
ANR	3095549	CFGExitNode	EXIT		3095165		True				
ANR	3095550	Symbol	plane		3095165						
ANR	3095551	Symbol	* dev		3095165						
ANR	3095552	Symbol	plane [ j ] . str		3095165						
ANR	3095553	Symbol	octet		3095165						
ANR	3095554	Symbol	line		3095165						
ANR	3095555	Symbol	eprn_DeviceCMY		3095165						
ANR	3095556	Symbol	COLORANT_0_BIT		3095165						
ANR	3095557	Symbol	part		3095165						
ANR	3095558	Symbol	COLORANT_2_INDEX		3095165						
ANR	3095559	Symbol	plane [ j ] . length		3095165						
ANR	3095560	Symbol	* line		3095165						
ANR	3095561	Symbol	dev -> eprn . colour_model		3095165						
ANR	3095562	Symbol	dev		3095165						
ANR	3095563	Symbol	COLORANT_1_INDEX		3095165						
ANR	3095564	Symbol	* COLORANT_3_INDEX		3095165						
ANR	3095565	Symbol	COLORANT_1_BIT		3095165						
ANR	3095566	Symbol	* ptr		3095165						
ANR	3095567	Symbol	from		3095165						
ANR	3095568	Symbol	* plane		3095165						
ANR	3095569	Symbol	dev -> eprn		3095165						
ANR	3095570	Symbol	* COLORANT_0_INDEX		3095165						
ANR	3095571	Symbol	COLORANT_3_INDEX		3095165						
ANR	3095572	Symbol	NULL		3095165						
ANR	3095573	Symbol	COLORANT_2_BIT		3095165						
ANR	3095574	Symbol	length		3095165						
ANR	3095575	Symbol	COLORANT_3_BIT		3095165						
ANR	3095576	Symbol	j		3095165						
ANR	3095577	Symbol	k		3095165						
ANR	3095578	Symbol	l		3095165						
ANR	3095579	Symbol	* COLORANT_2_INDEX		3095165						
ANR	3095580	Symbol	ptr		3095165						
ANR	3095581	Symbol	* octet		3095165						
ANR	3095582	Symbol	* j		3095165						
ANR	3095583	Symbol	* k		3095165						
ANR	3095584	Symbol	* ( ptr [ j ] ++ )		3095165						
ANR	3095585	Symbol	* COLORANT_1_INDEX		3095165						
ANR	3095586	Symbol	eprn_DeviceRGB		3095165						
ANR	3095587	Symbol	dev -> eprn . output_planes		3095165						
ANR	3095588	Symbol	plane [ j - from ] . str		3095165						
ANR	3095589	Symbol	* from		3095165						
ANR	3095590	Symbol	COLORANT_0_INDEX		3095165						
ANR	3095591	Function	split_line_4x2	923:0:31914:33526							
ANR	3095592	FunctionDef	"split_line_4x2 (eprn_Device * dev , const eprn_Octet * line , int length , eprn_OctetString plane [ ])"		3095591	0					
ANR	3095593	CompoundStatement		925:0:32023:33526	3095591	0					
ANR	3095594	IdentifierDeclStatement	gx_color_index pixel ;	926:2:32027:32051	3095591	0	True				
ANR	3095595	IdentifierDecl	pixel		3095591	0					
ANR	3095596	IdentifierDeclType	gx_color_index		3095591	0					
ANR	3095597	Identifier	pixel		3095591	1					
ANR	3095598	IdentifierDeclStatement	"int j , k ;"	928:2:32055:32071	3095591	1	True				
ANR	3095599	IdentifierDecl	j		3095591	0					
ANR	3095600	IdentifierDeclType	int		3095591	0					
ANR	3095601	Identifier	j		3095591	1					
ANR	3095602	IdentifierDecl	k		3095591	1					
ANR	3095603	IdentifierDeclType	int		3095591	0					
ANR	3095604	Identifier	k		3095591	1					
ANR	3095605	IdentifierDeclStatement	eprn_Octet * ptr [ 8 ] ;	931:2:32075:32097	3095591	2	True				
ANR	3095606	IdentifierDecl	* ptr [ 8 ]		3095591	0					
ANR	3095607	IdentifierDeclType	eprn_Octet * [ 8 ]		3095591	0					
ANR	3095608	Identifier	ptr		3095591	1					
ANR	3095609	PrimaryExpression	8		3095591	2					
ANR	3095610	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		3095591	3					
ANR	3095611	ForInit	j = 0 ;	935:7:32202:32207	3095591	0	True				
ANR	3095612	AssignmentExpression	j = 0		3095591	0		=			
ANR	3095613	Identifier	j		3095591	0					
ANR	3095614	PrimaryExpression	0		3095591	1					
ANR	3095615	Condition	j < 8	935:14:32209:32213	3095591	1	True				
ANR	3095616	RelationalExpression	j < 8		3095591	0		<			
ANR	3095617	Identifier	j		3095591	0					
ANR	3095618	PrimaryExpression	8		3095591	1					
ANR	3095619	PostIncDecOperationExpression	j ++	935:21:32216:32218	3095591	2	True				
ANR	3095620	Identifier	j		3095591	0					
ANR	3095621	IncDec	++		3095591	1					
ANR	3095622	ExpressionStatement	ptr [ j ] = plane [ j ] . str	935:26:32221:32242	3095591	3	True				
ANR	3095623	AssignmentExpression	ptr [ j ] = plane [ j ] . str		3095591	0		=			
ANR	3095624	ArrayIndexing	ptr [ j ]		3095591	0					
ANR	3095625	Identifier	ptr		3095591	0					
ANR	3095626	Identifier	j		3095591	1					
ANR	3095627	MemberAccess	plane [ j ] . str		3095591	1					
ANR	3095628	ArrayIndexing	plane [ j ]		3095591	0					
ANR	3095629	Identifier	plane		3095591	0					
ANR	3095630	Identifier	j		3095591	1					
ANR	3095631	Identifier	str		3095591	1					
ANR	3095632	ForStatement	for ( k = 0 ; k < length ; k ++ )		3095591	4					
ANR	3095633	ForInit	k = 0 ;	938:7:32324:32329	3095591	0	True				
ANR	3095634	AssignmentExpression	k = 0		3095591	0		=			
ANR	3095635	Identifier	k		3095591	0					
ANR	3095636	PrimaryExpression	0		3095591	1					
ANR	3095637	Condition	k < length	938:14:32331:32340	3095591	1	True				
ANR	3095638	RelationalExpression	k < length		3095591	0		<			
ANR	3095639	Identifier	k		3095591	0					
ANR	3095640	Identifier	length		3095591	1					
ANR	3095641	PostIncDecOperationExpression	k ++	938:26:32343:32345	3095591	2	True				
ANR	3095642	Identifier	k		3095591	0					
ANR	3095643	IncDec	++		3095591	1					
ANR	3095644	CompoundStatement		14:31:324:324	3095591	3					
ANR	3095645	IfStatement	if ( k % 8 == 0 )		3095591	0					
ANR	3095646	Condition	k % 8 == 0	943:8:32525:32534	3095591	0	True				
ANR	3095647	EqualityExpression	k % 8 == 0		3095591	0		==			
ANR	3095648	MultiplicativeExpression	k % 8		3095591	0		%			
ANR	3095649	Identifier	k		3095591	0					
ANR	3095650	PrimaryExpression	8		3095591	1					
ANR	3095651	PrimaryExpression	0		3095591	1					
ANR	3095652	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		3095591	1					
ANR	3095653	ForInit	j = 0 ;	943:25:32542:32547	3095591	0	True				
ANR	3095654	AssignmentExpression	j = 0		3095591	0		=			
ANR	3095655	Identifier	j		3095591	0					
ANR	3095656	PrimaryExpression	0		3095591	1					
ANR	3095657	Condition	j < 8	943:32:32549:32553	3095591	1	True				
ANR	3095658	RelationalExpression	j < 8		3095591	0		<			
ANR	3095659	Identifier	j		3095591	0					
ANR	3095660	PrimaryExpression	8		3095591	1					
ANR	3095661	PostIncDecOperationExpression	j ++	943:39:32556:32558	3095591	2	True				
ANR	3095662	Identifier	j		3095591	0					
ANR	3095663	IncDec	++		3095591	1					
ANR	3095664	ExpressionStatement	* ptr [ j ] = 0	943:44:32561:32572	3095591	3	True				
ANR	3095665	AssignmentExpression	* ptr [ j ] = 0		3095591	0		=			
ANR	3095666	UnaryOperationExpression	* ptr [ j ]		3095591	0					
ANR	3095667	UnaryOperator	*		3095591	0					
ANR	3095668	ArrayIndexing	ptr [ j ]		3095591	1					
ANR	3095669	Identifier	ptr		3095591	0					
ANR	3095670	Identifier	j		3095591	1					
ANR	3095671	PrimaryExpression	0		3095591	1					
ANR	3095672	ExpressionStatement	pixel = line [ k ]	946:4:32601:32616	3095591	1	True				
ANR	3095673	AssignmentExpression	pixel = line [ k ]		3095591	0		=			
ANR	3095674	Identifier	pixel		3095591	0					
ANR	3095675	ArrayIndexing	line [ k ]		3095591	1					
ANR	3095676	Identifier	line		3095591	0					
ANR	3095677	Identifier	k		3095591	1					
ANR	3095678	ExpressionStatement	* ptr [ 0 ] = ( * ptr [ 0 ] << 1 ) | ( pixel & 0x01 )	949:4:32666:32707	3095591	2	True				
ANR	3095679	AssignmentExpression	* ptr [ 0 ] = ( * ptr [ 0 ] << 1 ) | ( pixel & 0x01 )		3095591	0		=			
ANR	3095680	UnaryOperationExpression	* ptr [ 0 ]		3095591	0					
ANR	3095681	UnaryOperator	*		3095591	0					
ANR	3095682	ArrayIndexing	ptr [ 0 ]		3095591	1					
ANR	3095683	Identifier	ptr		3095591	0					
ANR	3095684	PrimaryExpression	0		3095591	1					
ANR	3095685	InclusiveOrExpression	( * ptr [ 0 ] << 1 ) | ( pixel & 0x01 )		3095591	1		|			
ANR	3095686	ShiftExpression	* ptr [ 0 ] << 1		3095591	0		<<			
ANR	3095687	UnaryOperationExpression	* ptr [ 0 ]		3095591	0					
ANR	3095688	UnaryOperator	*		3095591	0					
ANR	3095689	ArrayIndexing	ptr [ 0 ]		3095591	1					
ANR	3095690	Identifier	ptr		3095591	0					
ANR	3095691	PrimaryExpression	0		3095591	1					
ANR	3095692	PrimaryExpression	1		3095591	1					
ANR	3095693	BitAndExpression	pixel & 0x01		3095591	1		&			
ANR	3095694	Identifier	pixel		3095591	0					
ANR	3095695	PrimaryExpression	0x01		3095591	1					
ANR	3095696	Statement	define	950:1:32710:32715	3095591	3	True				
ANR	3095697	Statement	assign_bit	950:8:32717:32726	3095591	4	True				
ANR	3095698	Statement	(	950:18:32727:32727	3095591	5	True				
ANR	3095699	Statement	index	950:19:32728:32732	3095591	6	True				
ANR	3095700	Statement	)	950:24:32733:32733	3095591	7	True				
ANR	3095701	Statement	*	951:4:32741:32741	3095591	8	True				
ANR	3095702	Statement	ptr	951:5:32742:32744	3095591	9	True				
ANR	3095703	Statement	[	951:8:32745:32745	3095591	10	True				
ANR	3095704	Statement	index	951:9:32746:32750	3095591	11	True				
ANR	3095705	Statement	]	951:14:32751:32751	3095591	12	True				
ANR	3095706	Statement	=	951:16:32753:32753	3095591	13	True				
ANR	3095707	Statement	(	951:18:32755:32755	3095591	14	True				
ANR	3095708	Statement	*	951:19:32756:32756	3095591	15	True				
ANR	3095709	Statement	ptr	951:20:32757:32759	3095591	16	True				
ANR	3095710	Statement	[	951:23:32760:32760	3095591	17	True				
ANR	3095711	Statement	index	951:24:32761:32765	3095591	18	True				
ANR	3095712	Statement	]	951:29:32766:32766	3095591	19	True				
ANR	3095713	Statement	<<	951:31:32768:32769	3095591	20	True				
ANR	3095714	Statement	1	951:34:32771:32771	3095591	21	True				
ANR	3095715	Statement	)	951:35:32772:32772	3095591	22	True				
ANR	3095716	Statement	|	951:37:32774:32774	3095591	23	True				
ANR	3095717	Statement	(	951:39:32776:32776	3095591	24	True				
ANR	3095718	Statement	(	951:40:32777:32777	3095591	25	True				
ANR	3095719	Statement	pixel	951:41:32778:32782	3095591	26	True				
ANR	3095720	Statement	>>	951:47:32784:32785	3095591	27	True				
ANR	3095721	Statement	index	951:50:32787:32791	3095591	28	True				
ANR	3095722	Statement	)	951:55:32792:32792	3095591	29	True				
ANR	3095723	Statement	&	951:57:32794:32794	3095591	30	True				
ANR	3095724	Statement	0x01	951:59:32796:32799	3095591	31	True				
ANR	3095725	Statement	)	951:63:32800:32800	3095591	32	True				
ANR	3095726	ExpressionStatement	assign_bit ( 1 )	952:4:32806:32819	3095591	33	True				
ANR	3095727	CallExpression	assign_bit ( 1 )		3095591	0					
ANR	3095728	Callee	assign_bit		3095591	0					
ANR	3095729	Identifier	assign_bit		3095591	0					
ANR	3095730	ArgumentList	1		3095591	1					
ANR	3095731	Argument	1		3095591	0					
ANR	3095732	PrimaryExpression	1		3095591	0					
ANR	3095733	ExpressionStatement	assign_bit ( 2 )	953:4:32825:32838	3095591	34	True				
ANR	3095734	CallExpression	assign_bit ( 2 )		3095591	0					
ANR	3095735	Callee	assign_bit		3095591	0					
ANR	3095736	Identifier	assign_bit		3095591	0					
ANR	3095737	ArgumentList	2		3095591	1					
ANR	3095738	Argument	2		3095591	0					
ANR	3095739	PrimaryExpression	2		3095591	0					
ANR	3095740	ExpressionStatement	assign_bit ( 3 )	954:4:32844:32857	3095591	35	True				
ANR	3095741	CallExpression	assign_bit ( 3 )		3095591	0					
ANR	3095742	Callee	assign_bit		3095591	0					
ANR	3095743	Identifier	assign_bit		3095591	0					
ANR	3095744	ArgumentList	3		3095591	1					
ANR	3095745	Argument	3		3095591	0					
ANR	3095746	PrimaryExpression	3		3095591	0					
ANR	3095747	ExpressionStatement	assign_bit ( 4 )	955:4:32863:32876	3095591	36	True				
ANR	3095748	CallExpression	assign_bit ( 4 )		3095591	0					
ANR	3095749	Callee	assign_bit		3095591	0					
ANR	3095750	Identifier	assign_bit		3095591	0					
ANR	3095751	ArgumentList	4		3095591	1					
ANR	3095752	Argument	4		3095591	0					
ANR	3095753	PrimaryExpression	4		3095591	0					
ANR	3095754	ExpressionStatement	assign_bit ( 5 )	956:4:32882:32895	3095591	37	True				
ANR	3095755	CallExpression	assign_bit ( 5 )		3095591	0					
ANR	3095756	Callee	assign_bit		3095591	0					
ANR	3095757	Identifier	assign_bit		3095591	0					
ANR	3095758	ArgumentList	5		3095591	1					
ANR	3095759	Argument	5		3095591	0					
ANR	3095760	PrimaryExpression	5		3095591	0					
ANR	3095761	ExpressionStatement	assign_bit ( 6 )	957:4:32901:32914	3095591	38	True				
ANR	3095762	CallExpression	assign_bit ( 6 )		3095591	0					
ANR	3095763	Callee	assign_bit		3095591	0					
ANR	3095764	Identifier	assign_bit		3095591	0					
ANR	3095765	ArgumentList	6		3095591	1					
ANR	3095766	Argument	6		3095591	0					
ANR	3095767	PrimaryExpression	6		3095591	0					
ANR	3095768	ExpressionStatement	assign_bit ( 7 )	958:4:32920:32933	3095591	39	True				
ANR	3095769	CallExpression	assign_bit ( 7 )		3095591	0					
ANR	3095770	Callee	assign_bit		3095591	0					
ANR	3095771	Identifier	assign_bit		3095591	0					
ANR	3095772	ArgumentList	7		3095591	1					
ANR	3095773	Argument	7		3095591	0					
ANR	3095774	PrimaryExpression	7		3095591	0					
ANR	3095775	Statement	undef	959:1:32936:32940	3095591	40	True				
ANR	3095776	Statement	assign_bit	959:7:32942:32951	3095591	41	True				
ANR	3095777	IfStatement	if ( k % 8 == 7 )		3095591	42					
ANR	3095778	Condition	k % 8 == 7	962:8:33041:33050	3095591	0	True				
ANR	3095779	EqualityExpression	k % 8 == 7		3095591	0		==			
ANR	3095780	MultiplicativeExpression	k % 8		3095591	0		%			
ANR	3095781	Identifier	k		3095591	0					
ANR	3095782	PrimaryExpression	8		3095591	1					
ANR	3095783	PrimaryExpression	7		3095591	1					
ANR	3095784	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		3095591	1					
ANR	3095785	ForInit	j = 0 ;	962:25:33058:33063	3095591	0	True				
ANR	3095786	AssignmentExpression	j = 0		3095591	0		=			
ANR	3095787	Identifier	j		3095591	0					
ANR	3095788	PrimaryExpression	0		3095591	1					
ANR	3095789	Condition	j < 8	962:32:33065:33069	3095591	1	True				
ANR	3095790	RelationalExpression	j < 8		3095591	0		<			
ANR	3095791	Identifier	j		3095591	0					
ANR	3095792	PrimaryExpression	8		3095591	1					
ANR	3095793	PostIncDecOperationExpression	j ++	962:39:33072:33074	3095591	2	True				
ANR	3095794	Identifier	j		3095591	0					
ANR	3095795	IncDec	++		3095591	1					
ANR	3095796	ExpressionStatement	ptr [ j ] ++	962:44:33077:33085	3095591	3	True				
ANR	3095797	PostIncDecOperationExpression	ptr [ j ] ++		3095591	0					
ANR	3095798	ArrayIndexing	ptr [ j ]		3095591	0					
ANR	3095799	Identifier	ptr		3095591	0					
ANR	3095800	Identifier	j		3095591	1					
ANR	3095801	IncDec	++		3095591	1					
ANR	3095802	ExpressionStatement	k = length % 8	967:2:33225:33239	3095591	5	True				
ANR	3095803	AssignmentExpression	k = length % 8		3095591	0		=			
ANR	3095804	Identifier	k		3095591	0					
ANR	3095805	MultiplicativeExpression	length % 8		3095591	1		%			
ANR	3095806	Identifier	length		3095591	0					
ANR	3095807	PrimaryExpression	8		3095591	1					
ANR	3095808	IfStatement	if ( k != 0 )		3095591	6					
ANR	3095809	Condition	k != 0	968:6:33247:33252	3095591	0	True				
ANR	3095810	EqualityExpression	k != 0		3095591	0		!=			
ANR	3095811	Identifier	k		3095591	0					
ANR	3095812	PrimaryExpression	0		3095591	1					
ANR	3095813	CompoundStatement		45:4:1237:1254	3095591	1					
ANR	3095814	IdentifierDeclStatement	int shift = 8 - k ;	969:4:33261:33278	3095591	0	True				
ANR	3095815	IdentifierDecl	shift = 8 - k		3095591	0					
ANR	3095816	IdentifierDeclType	int		3095591	0					
ANR	3095817	Identifier	shift		3095591	1					
ANR	3095818	AssignmentExpression	shift = 8 - k		3095591	2		=			
ANR	3095819	Identifier	shift		3095591	0					
ANR	3095820	AdditiveExpression	8 - k		3095591	1		-			
ANR	3095821	PrimaryExpression	8		3095591	0					
ANR	3095822	Identifier	k		3095591	1					
ANR	3095823	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		3095591	1					
ANR	3095824	ForInit	j = 0 ;	970:9:33289:33294	3095591	0	True				
ANR	3095825	AssignmentExpression	j = 0		3095591	0		=			
ANR	3095826	Identifier	j		3095591	0					
ANR	3095827	PrimaryExpression	0		3095591	1					
ANR	3095828	Condition	j < 8	970:16:33296:33300	3095591	1	True				
ANR	3095829	RelationalExpression	j < 8		3095591	0		<			
ANR	3095830	Identifier	j		3095591	0					
ANR	3095831	PrimaryExpression	8		3095591	1					
ANR	3095832	PostIncDecOperationExpression	j ++	970:23:33303:33305	3095591	2	True				
ANR	3095833	Identifier	j		3095591	0					
ANR	3095834	IncDec	++		3095591	1					
ANR	3095835	ExpressionStatement	* ( ptr [ j ] ++ ) <<= shift	971:6:33314:33335	3095591	3	True				
ANR	3095836	AssignmentExpression	* ( ptr [ j ] ++ ) <<= shift		3095591	0		<<=			
ANR	3095837	UnaryOperationExpression	* ( ptr [ j ] ++ )		3095591	0					
ANR	3095838	UnaryOperator	*		3095591	0					
ANR	3095839	PostIncDecOperationExpression	ptr [ j ] ++		3095591	1					
ANR	3095840	ArrayIndexing	ptr [ j ]		3095591	0					
ANR	3095841	Identifier	ptr		3095591	0					
ANR	3095842	Identifier	j		3095591	1					
ANR	3095843	IncDec	++		3095591	1					
ANR	3095844	Identifier	shift		3095591	1					
ANR	3095845	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		3095591	7					
ANR	3095846	ForInit	j = 0 ;	975:7:33398:33403	3095591	0	True				
ANR	3095847	AssignmentExpression	j = 0		3095591	0		=			
ANR	3095848	Identifier	j		3095591	0					
ANR	3095849	PrimaryExpression	0		3095591	1					
ANR	3095850	Condition	j < 8	975:14:33405:33409	3095591	1	True				
ANR	3095851	RelationalExpression	j < 8		3095591	0		<			
ANR	3095852	Identifier	j		3095591	0					
ANR	3095853	PrimaryExpression	8		3095591	1					
ANR	3095854	PostIncDecOperationExpression	j ++	975:21:33412:33414	3095591	2	True				
ANR	3095855	Identifier	j		3095591	0					
ANR	3095856	IncDec	++		3095591	1					
ANR	3095857	CompoundStatement		51:26:1393:1393	3095591	3					
ANR	3095858	IfStatement	if ( length == 0 )		3095591	0					
ANR	3095859	Condition	length == 0	976:8:33427:33437	3095591	0	True				
ANR	3095860	EqualityExpression	length == 0		3095591	0		==			
ANR	3095861	Identifier	length		3095591	0					
ANR	3095862	PrimaryExpression	0		3095591	1					
ANR	3095863	ExpressionStatement	plane [ j ] . length = 0	976:21:33440:33459	3095591	1	True				
ANR	3095864	AssignmentExpression	plane [ j ] . length = 0		3095591	0		=			
ANR	3095865	MemberAccess	plane [ j ] . length		3095591	0					
ANR	3095866	ArrayIndexing	plane [ j ]		3095591	0					
ANR	3095867	Identifier	plane		3095591	0					
ANR	3095868	Identifier	j		3095591	1					
ANR	3095869	Identifier	length		3095591	1					
ANR	3095870	PrimaryExpression	0		3095591	1					
ANR	3095871	ElseStatement	else		3095591	0					
ANR	3095872	ExpressionStatement	plane [ j ] . length = ptr [ j ] - plane [ j ] . str	977:9:33470:33509	3095591	0	True				
ANR	3095873	AssignmentExpression	plane [ j ] . length = ptr [ j ] - plane [ j ] . str		3095591	0		=			
ANR	3095874	MemberAccess	plane [ j ] . length		3095591	0					
ANR	3095875	ArrayIndexing	plane [ j ]		3095591	0					
ANR	3095876	Identifier	plane		3095591	0					
ANR	3095877	Identifier	j		3095591	1					
ANR	3095878	Identifier	length		3095591	1					
ANR	3095879	AdditiveExpression	ptr [ j ] - plane [ j ] . str		3095591	1		-			
ANR	3095880	ArrayIndexing	ptr [ j ]		3095591	0					
ANR	3095881	Identifier	ptr		3095591	0					
ANR	3095882	Identifier	j		3095591	1					
ANR	3095883	MemberAccess	plane [ j ] . str		3095591	1					
ANR	3095884	ArrayIndexing	plane [ j ]		3095591	0					
ANR	3095885	Identifier	plane		3095591	0					
ANR	3095886	Identifier	j		3095591	1					
ANR	3095887	Identifier	str		3095591	1					
ANR	3095888	ReturnStatement	return ;	980:2:33518:33524	3095591	8	True				
ANR	3095889	ReturnType	static void		3095591	1					
ANR	3095890	Identifier	split_line_4x2		3095591	2					
ANR	3095891	ParameterList	"eprn_Device * dev , const eprn_Octet * line , int length , eprn_OctetString plane [ ]"		3095591	3					
ANR	3095892	Parameter	eprn_Device * dev	923:27:31941:31956	3095591	0	True				
ANR	3095893	ParameterType	eprn_Device *		3095591	0					
ANR	3095894	Identifier	dev		3095591	1					
ANR	3095895	Parameter	const eprn_Octet * line	923:45:31959:31980	3095591	1	True				
ANR	3095896	ParameterType	const eprn_Octet *		3095591	0					
ANR	3095897	Identifier	line		3095591	1					
ANR	3095898	Parameter	int length	924:2:31985:31994	3095591	2	True				
ANR	3095899	ParameterType	int		3095591	0					
ANR	3095900	Identifier	length		3095591	1					
ANR	3095901	Parameter	eprn_OctetString plane [ ]	924:14:31997:32020	3095591	3	True				
ANR	3095902	ParameterType	eprn_OctetString [ ]		3095591	0					
ANR	3095903	Identifier	plane		3095591	1					
ANR	3095904	CFGEntryNode	ENTRY		3095591		True				
ANR	3095905	CFGExitNode	EXIT		3095591		True				
ANR	3095906	Symbol	plane		3095591						
ANR	3095907	Symbol	plane [ j ] . str		3095591						
ANR	3095908	Symbol	* * j		3095591						
ANR	3095909	Symbol	* * ptr		3095591						
ANR	3095910	Symbol	line		3095591						
ANR	3095911	Symbol	shift		3095591						
ANR	3095912	Symbol	length		3095591						
ANR	3095913	Symbol	j		3095591						
ANR	3095914	Symbol	plane [ j ] . length		3095591						
ANR	3095915	Symbol	k		3095591						
ANR	3095916	Symbol	* line		3095591						
ANR	3095917	Symbol	ptr		3095591						
ANR	3095918	Symbol	dev		3095591						
ANR	3095919	Symbol	* j		3095591						
ANR	3095920	Symbol	* k		3095591						
ANR	3095921	Symbol	* ( ptr [ j ] ++ )		3095591						
ANR	3095922	Symbol	* ptr		3095591						
ANR	3095923	Symbol	* ptr [ j ]		3095591						
ANR	3095924	Symbol	* plane		3095591						
ANR	3095925	Symbol	pixel		3095591						
ANR	3095926	Symbol	* ptr [ 0 ]		3095591						
ANR	3095927	Function	eprn_fetch_scan_line	999:0:34086:35604							
ANR	3095928	FunctionDef	"eprn_fetch_scan_line (eprn_Device * dev , eprn_OctetString * line)"		3095927	0					
ANR	3095929	CompoundStatement		1000:0:34153:35604	3095927	0					
ANR	3095930	IdentifierDeclStatement	int rc ;	1001:2:34157:34163	3095927	0	True				
ANR	3095931	IdentifierDecl	rc		3095927	0					
ANR	3095932	IdentifierDeclType	int		3095927	0					
ANR	3095933	Identifier	rc		3095927	1					
ANR	3095934	IdentifierDeclStatement	const eprn_Octet * str ;	1002:2:34167:34188	3095927	1	True				
ANR	3095935	IdentifierDecl	* str		3095927	0					
ANR	3095936	IdentifierDeclType	const eprn_Octet *		3095927	0					
ANR	3095937	Identifier	str		3095927	1					
ANR	3095938	ExpressionStatement	"rc = gdev_prn_copy_scan_lines ( ( gx_device_printer * ) dev , dev -> eprn . next_y , line -> str , dev -> eprn . octets_per_line )"	1004:2:34193:34308	3095927	2	True				
ANR	3095939	AssignmentExpression	"rc = gdev_prn_copy_scan_lines ( ( gx_device_printer * ) dev , dev -> eprn . next_y , line -> str , dev -> eprn . octets_per_line )"		3095927	0		=			
ANR	3095940	Identifier	rc		3095927	0					
ANR	3095941	CallExpression	"gdev_prn_copy_scan_lines ( ( gx_device_printer * ) dev , dev -> eprn . next_y , line -> str , dev -> eprn . octets_per_line )"		3095927	1					
ANR	3095942	Callee	gdev_prn_copy_scan_lines		3095927	0					
ANR	3095943	Identifier	gdev_prn_copy_scan_lines		3095927	0					
ANR	3095944	ArgumentList	( gx_device_printer * ) dev		3095927	1					
ANR	3095945	Argument	( gx_device_printer * ) dev		3095927	0					
ANR	3095946	CastExpression	( gx_device_printer * ) dev		3095927	0					
ANR	3095947	CastTarget	gx_device_printer *		3095927	0					
ANR	3095948	Identifier	dev		3095927	1					
ANR	3095949	Argument	dev -> eprn . next_y		3095927	1					
ANR	3095950	MemberAccess	dev -> eprn . next_y		3095927	0					
ANR	3095951	PtrMemberAccess	dev -> eprn		3095927	0					
ANR	3095952	Identifier	dev		3095927	0					
ANR	3095953	Identifier	eprn		3095927	1					
ANR	3095954	Identifier	next_y		3095927	1					
ANR	3095955	Argument	line -> str		3095927	2					
ANR	3095956	PtrMemberAccess	line -> str		3095927	0					
ANR	3095957	Identifier	line		3095927	0					
ANR	3095958	Identifier	str		3095927	1					
ANR	3095959	Argument	dev -> eprn . octets_per_line		3095927	3					
ANR	3095960	MemberAccess	dev -> eprn . octets_per_line		3095927	0					
ANR	3095961	PtrMemberAccess	dev -> eprn		3095927	0					
ANR	3095962	Identifier	dev		3095927	0					
ANR	3095963	Identifier	eprn		3095927	1					
ANR	3095964	Identifier	octets_per_line		3095927	1					
ANR	3095965	IfStatement	if ( rc != 1 )		3095927	3					
ANR	3095966	Condition	rc != 1	1010:6:34569:34575	3095927	0	True				
ANR	3095967	EqualityExpression	rc != 1		3095927	0		!=			
ANR	3095968	Identifier	rc		3095927	0					
ANR	3095969	PrimaryExpression	1		3095927	1					
ANR	3095970	ReturnStatement	return 1 ;	1010:15:34578:34586	3095927	1	True				
ANR	3095971	PrimaryExpression	1		3095927	0					
ANR	3095972	ExpressionStatement	str = line -> str + ( dev -> eprn . octets_per_line - 1 )	1013:2:34662:34711	3095927	4	True				
ANR	3095973	AssignmentExpression	str = line -> str + ( dev -> eprn . octets_per_line - 1 )		3095927	0		=			
ANR	3095974	Identifier	str		3095927	0					
ANR	3095975	AdditiveExpression	line -> str + ( dev -> eprn . octets_per_line - 1 )		3095927	1		+			
ANR	3095976	PtrMemberAccess	line -> str		3095927	0					
ANR	3095977	Identifier	line		3095927	0					
ANR	3095978	Identifier	str		3095927	1					
ANR	3095979	AdditiveExpression	dev -> eprn . octets_per_line - 1		3095927	1		-			
ANR	3095980	MemberAccess	dev -> eprn . octets_per_line		3095927	0					
ANR	3095981	PtrMemberAccess	dev -> eprn		3095927	0					
ANR	3095982	Identifier	dev		3095927	0					
ANR	3095983	Identifier	eprn		3095927	1					
ANR	3095984	Identifier	octets_per_line		3095927	1					
ANR	3095985	PrimaryExpression	1		3095927	1					
ANR	3095986	WhileStatement	while ( str > line -> str && * str == 0 )		3095927	5					
ANR	3095987	Condition	str > line -> str && * str == 0	1014:9:34722:34749	3095927	0	True				
ANR	3095988	AndExpression	str > line -> str && * str == 0		3095927	0		&&			
ANR	3095989	RelationalExpression	str > line -> str		3095927	0		>			
ANR	3095990	Identifier	str		3095927	0					
ANR	3095991	PtrMemberAccess	line -> str		3095927	1					
ANR	3095992	Identifier	line		3095927	0					
ANR	3095993	Identifier	str		3095927	1					
ANR	3095994	EqualityExpression	* str == 0		3095927	1		==			
ANR	3095995	UnaryOperationExpression	* str		3095927	0					
ANR	3095996	UnaryOperator	*		3095927	0					
ANR	3095997	Identifier	str		3095927	1					
ANR	3095998	PrimaryExpression	0		3095927	1					
ANR	3095999	ExpressionStatement	str --	1014:39:34752:34757	3095927	1	True				
ANR	3096000	PostIncDecOperationExpression	str --		3095927	0					
ANR	3096001	Identifier	str		3095927	0					
ANR	3096002	IncDec	--		3095927	1					
ANR	3096003	IfStatement	if ( * str == 0 )		3095927	6					
ANR	3096004	Condition	* str == 0	1015:6:34765:34773	3095927	0	True				
ANR	3096005	EqualityExpression	* str == 0		3095927	0		==			
ANR	3096006	UnaryOperationExpression	* str		3095927	0					
ANR	3096007	UnaryOperator	*		3095927	0					
ANR	3096008	Identifier	str		3095927	1					
ANR	3096009	PrimaryExpression	0		3095927	1					
ANR	3096010	ExpressionStatement	line -> length = 0	1015:17:34776:34792	3095927	1	True				
ANR	3096011	AssignmentExpression	line -> length = 0		3095927	0		=			
ANR	3096012	PtrMemberAccess	line -> length		3095927	0					
ANR	3096013	Identifier	line		3095927	0					
ANR	3096014	Identifier	length		3095927	1					
ANR	3096015	PrimaryExpression	0		3095927	1					
ANR	3096016	ElseStatement	else		3095927	0					
ANR	3096017	ExpressionStatement	line -> length = str - line -> str + 1	1016:7:34801:34835	3095927	0	True				
ANR	3096018	AssignmentExpression	line -> length = str - line -> str + 1		3095927	0		=			
ANR	3096019	PtrMemberAccess	line -> length		3095927	0					
ANR	3096020	Identifier	line		3095927	0					
ANR	3096021	Identifier	length		3095927	1					
ANR	3096022	AdditiveExpression	str - line -> str + 1		3095927	1		-			
ANR	3096023	Identifier	str		3095927	0					
ANR	3096024	AdditiveExpression	line -> str + 1		3095927	1		+			
ANR	3096025	PtrMemberAccess	line -> str		3095927	0					
ANR	3096026	Identifier	line		3095927	0					
ANR	3096027	Identifier	str		3095927	1					
ANR	3096028	PrimaryExpression	1		3095927	1					
ANR	3096029	IfStatement	if ( dev -> color_info . depth > 8 )		3095927	7					
ANR	3096030	Condition	dev -> color_info . depth > 8	1019:6:34908:34932	3095927	0	True				
ANR	3096031	RelationalExpression	dev -> color_info . depth > 8		3095927	0		>			
ANR	3096032	MemberAccess	dev -> color_info . depth		3095927	0					
ANR	3096033	PtrMemberAccess	dev -> color_info		3095927	0					
ANR	3096034	Identifier	dev		3095927	0					
ANR	3096035	Identifier	color_info		3095927	1					
ANR	3096036	Identifier	depth		3095927	1					
ANR	3096037	PrimaryExpression	8		3095927	1					
ANR	3096038	CompoundStatement		22:4:800:855	3095927	1					
ANR	3096039	IdentifierDeclStatement	int rem ;	1020:4:34941:34948	3095927	0	True				
ANR	3096040	IdentifierDecl	rem		3095927	0					
ANR	3096041	IdentifierDeclType	int		3095927	0					
ANR	3096042	Identifier	rem		3095927	1					
ANR	3096043	IdentifierDeclStatement	unsigned int octets_per_pixel = dev -> color_info . depth / 8 ;	1021:4:34954:35009	3095927	1	True				
ANR	3096044	IdentifierDecl	octets_per_pixel = dev -> color_info . depth / 8		3095927	0					
ANR	3096045	IdentifierDeclType	unsigned int		3095927	0					
ANR	3096046	Identifier	octets_per_pixel		3095927	1					
ANR	3096047	AssignmentExpression	octets_per_pixel = dev -> color_info . depth / 8		3095927	2		=			
ANR	3096048	Identifier	octets_per_pixel		3095927	0					
ANR	3096049	MultiplicativeExpression	dev -> color_info . depth / 8		3095927	1		/			
ANR	3096050	MemberAccess	dev -> color_info . depth		3095927	0					
ANR	3096051	PtrMemberAccess	dev -> color_info		3095927	0					
ANR	3096052	Identifier	dev		3095927	0					
ANR	3096053	Identifier	color_info		3095927	1					
ANR	3096054	Identifier	depth		3095927	1					
ANR	3096055	PrimaryExpression	8		3095927	1					
ANR	3096056	ExpressionStatement	rem = line -> length % octets_per_pixel	1023:4:35081:35118	3095927	2	True				
ANR	3096057	AssignmentExpression	rem = line -> length % octets_per_pixel		3095927	0		=			
ANR	3096058	Identifier	rem		3095927	0					
ANR	3096059	MultiplicativeExpression	line -> length % octets_per_pixel		3095927	1		%			
ANR	3096060	PtrMemberAccess	line -> length		3095927	0					
ANR	3096061	Identifier	line		3095927	0					
ANR	3096062	Identifier	length		3095927	1					
ANR	3096063	Identifier	octets_per_pixel		3095927	1					
ANR	3096064	IfStatement	if ( rem != 0 )		3095927	3					
ANR	3096065	Condition	rem != 0	1024:8:35128:35135	3095927	0	True				
ANR	3096066	EqualityExpression	rem != 0		3095927	0		!=			
ANR	3096067	Identifier	rem		3095927	0					
ANR	3096068	PrimaryExpression	0		3095927	1					
ANR	3096069	ExpressionStatement	line -> length += octets_per_pixel - rem	1024:18:35138:35176	3095927	1	True				
ANR	3096070	AssignmentExpression	line -> length += octets_per_pixel - rem		3095927	0		+=			
ANR	3096071	PtrMemberAccess	line -> length		3095927	0					
ANR	3096072	Identifier	line		3095927	0					
ANR	3096073	Identifier	length		3095927	1					
ANR	3096074	AdditiveExpression	octets_per_pixel - rem		3095927	1		-			
ANR	3096075	Identifier	octets_per_pixel		3095927	0					
ANR	3096076	Identifier	rem		3095927	1					
ANR	3096077	IfStatement	if ( gs_debug_c ( EPRN_TRACE_CHAR ) )		3095927	8					
ANR	3096078	Condition	gs_debug_c ( EPRN_TRACE_CHAR )	1028:6:35218:35244	3095927	0	True				
ANR	3096079	CallExpression	gs_debug_c ( EPRN_TRACE_CHAR )		3095927	0					
ANR	3096080	Callee	gs_debug_c		3095927	0					
ANR	3096081	Identifier	gs_debug_c		3095927	0					
ANR	3096082	ArgumentList	EPRN_TRACE_CHAR		3095927	1					
ANR	3096083	Argument	EPRN_TRACE_CHAR		3095927	0					
ANR	3096084	Identifier	EPRN_TRACE_CHAR		3095927	0					
ANR	3096085	CompoundStatement		30:4:1099:1104	3095927	1					
ANR	3096086	IdentifierDeclStatement	int j ;	1029:4:35253:35258	3095927	0	True				
ANR	3096087	IdentifierDecl	j		3095927	0					
ANR	3096088	IdentifierDeclType	int		3095927	0					
ANR	3096089	Identifier	j		3095927	1					
ANR	3096090	ExpressionStatement	"dmlprintf ( dev -> memory , ""! eprn_fetch_scan_line(): Fetched "" )"	1030:4:35264:35324	3095927	1	True				
ANR	3096091	CallExpression	"dmlprintf ( dev -> memory , ""! eprn_fetch_scan_line(): Fetched "" )"		3095927	0					
ANR	3096092	Callee	dmlprintf		3095927	0					
ANR	3096093	Identifier	dmlprintf		3095927	0					
ANR	3096094	ArgumentList	dev -> memory		3095927	1					
ANR	3096095	Argument	dev -> memory		3095927	0					
ANR	3096096	PtrMemberAccess	dev -> memory		3095927	0					
ANR	3096097	Identifier	dev		3095927	0					
ANR	3096098	Identifier	memory		3095927	1					
ANR	3096099	Argument	"""! eprn_fetch_scan_line(): Fetched """		3095927	1					
ANR	3096100	PrimaryExpression	"""! eprn_fetch_scan_line(): Fetched """		3095927	0					
ANR	3096101	IfStatement	if ( line -> length == 0 )		3095927	2					
ANR	3096102	Condition	line -> length == 0	1031:8:35334:35350	3095927	0	True				
ANR	3096103	EqualityExpression	line -> length == 0		3095927	0		==			
ANR	3096104	PtrMemberAccess	line -> length		3095927	0					
ANR	3096105	Identifier	line		3095927	0					
ANR	3096106	Identifier	length		3095927	1					
ANR	3096107	PrimaryExpression	0		3095927	1					
ANR	3096108	ExpressionStatement	"dmprintf ( dev -> memory , ""empty scan line."" )"	1031:27:35353:35394	3095927	1	True				
ANR	3096109	CallExpression	"dmprintf ( dev -> memory , ""empty scan line."" )"		3095927	0					
ANR	3096110	Callee	dmprintf		3095927	0					
ANR	3096111	Identifier	dmprintf		3095927	0					
ANR	3096112	ArgumentList	dev -> memory		3095927	1					
ANR	3096113	Argument	dev -> memory		3095927	0					
ANR	3096114	PtrMemberAccess	dev -> memory		3095927	0					
ANR	3096115	Identifier	dev		3095927	0					
ANR	3096116	Identifier	memory		3095927	1					
ANR	3096117	Argument	"""empty scan line."""		3095927	1					
ANR	3096118	PrimaryExpression	"""empty scan line."""		3095927	0					
ANR	3096119	ElseStatement	else		3095927	0					
ANR	3096120	CompoundStatement		33:9:1251:1251	3095927	0					
ANR	3096121	ExpressionStatement	"dmprintf ( dev -> memory , ""scan line: 0x"" )"	1033:6:35413:35451	3095927	0	True				
ANR	3096122	CallExpression	"dmprintf ( dev -> memory , ""scan line: 0x"" )"		3095927	0					
ANR	3096123	Callee	dmprintf		3095927	0					
ANR	3096124	Identifier	dmprintf		3095927	0					
ANR	3096125	ArgumentList	dev -> memory		3095927	1					
ANR	3096126	Argument	dev -> memory		3095927	0					
ANR	3096127	PtrMemberAccess	dev -> memory		3095927	0					
ANR	3096128	Identifier	dev		3095927	0					
ANR	3096129	Identifier	memory		3095927	1					
ANR	3096130	Argument	"""scan line: 0x"""		3095927	1					
ANR	3096131	PrimaryExpression	"""scan line: 0x"""		3095927	0					
ANR	3096132	ForStatement	for ( j = 0 ; j < line -> length ; j ++ )		3095927	1					
ANR	3096133	ForInit	j = 0 ;	1034:11:35464:35469	3095927	0	True				
ANR	3096134	AssignmentExpression	j = 0		3095927	0		=			
ANR	3096135	Identifier	j		3095927	0					
ANR	3096136	PrimaryExpression	0		3095927	1					
ANR	3096137	Condition	j < line -> length	1034:18:35471:35486	3095927	1	True				
ANR	3096138	RelationalExpression	j < line -> length		3095927	0		<			
ANR	3096139	Identifier	j		3095927	0					
ANR	3096140	PtrMemberAccess	line -> length		3095927	1					
ANR	3096141	Identifier	line		3095927	0					
ANR	3096142	Identifier	length		3095927	1					
ANR	3096143	PostIncDecOperationExpression	j ++	1034:36:35489:35491	3095927	2	True				
ANR	3096144	Identifier	j		3095927	0					
ANR	3096145	IncDec	++		3095927	1					
ANR	3096146	ExpressionStatement	"dmprintf1 ( dev -> memory , ""%02X"" , line -> str [ j ] )"	1034:41:35494:35538	3095927	3	True				
ANR	3096147	CallExpression	"dmprintf1 ( dev -> memory , ""%02X"" , line -> str [ j ] )"		3095927	0					
ANR	3096148	Callee	dmprintf1		3095927	0					
ANR	3096149	Identifier	dmprintf1		3095927	0					
ANR	3096150	ArgumentList	dev -> memory		3095927	1					
ANR	3096151	Argument	dev -> memory		3095927	0					
ANR	3096152	PtrMemberAccess	dev -> memory		3095927	0					
ANR	3096153	Identifier	dev		3095927	0					
ANR	3096154	Identifier	memory		3095927	1					
ANR	3096155	Argument	"""%02X"""		3095927	1					
ANR	3096156	PrimaryExpression	"""%02X"""		3095927	0					
ANR	3096157	Argument	line -> str [ j ]		3095927	2					
ANR	3096158	ArrayIndexing	line -> str [ j ]		3095927	0					
ANR	3096159	PtrMemberAccess	line -> str		3095927	0					
ANR	3096160	Identifier	line		3095927	0					
ANR	3096161	Identifier	str		3095927	1					
ANR	3096162	Identifier	j		3095927	1					
ANR	3096163	ExpressionStatement	"dmlprintf ( dev -> memory , ""\\n"" )"	1036:4:35550:35578	3095927	3	True				
ANR	3096164	CallExpression	"dmlprintf ( dev -> memory , ""\\n"" )"		3095927	0					
ANR	3096165	Callee	dmlprintf		3095927	0					
ANR	3096166	Identifier	dmlprintf		3095927	0					
ANR	3096167	ArgumentList	dev -> memory		3095927	1					
ANR	3096168	Argument	dev -> memory		3095927	0					
ANR	3096169	PtrMemberAccess	dev -> memory		3095927	0					
ANR	3096170	Identifier	dev		3095927	0					
ANR	3096171	Identifier	memory		3095927	1					
ANR	3096172	Argument	"""\\n"""		3095927	1					
ANR	3096173	PrimaryExpression	"""\\n"""		3095927	0					
ANR	3096174	ReturnStatement	return 0 ;	1040:2:35594:35602	3095927	9	True				
ANR	3096175	PrimaryExpression	0		3095927	0					
ANR	3096176	ReturnType	int		3095927	1					
ANR	3096177	Identifier	eprn_fetch_scan_line		3095927	2					
ANR	3096178	ParameterList	"eprn_Device * dev , eprn_OctetString * line"		3095927	3					
ANR	3096179	Parameter	eprn_Device * dev	999:25:34111:34126	3095927	0	True				
ANR	3096180	ParameterType	eprn_Device *		3095927	0					
ANR	3096181	Identifier	dev		3095927	1					
ANR	3096182	Parameter	eprn_OctetString * line	999:43:34129:34150	3095927	1	True				
ANR	3096183	ParameterType	eprn_OctetString *		3095927	0					
ANR	3096184	Identifier	line		3095927	1					
ANR	3096185	CFGEntryNode	ENTRY		3095927		True				
ANR	3096186	CFGExitNode	EXIT		3095927		True				
ANR	3096187	Symbol	dev -> eprn . octets_per_line		3095927						
ANR	3096188	Symbol	* dev		3095927						
ANR	3096189	Symbol	* line -> str		3095927						
ANR	3096190	Symbol	octets_per_pixel		3095927						
ANR	3096191	Symbol	line		3095927						
ANR	3096192	Symbol	line -> str		3095927						
ANR	3096193	Symbol	j		3095927						
ANR	3096194	Symbol	* line		3095927						
ANR	3096195	Symbol	dev -> color_info . depth		3095927						
ANR	3096196	Symbol	dev -> color_info		3095927						
ANR	3096197	Symbol	str		3095927						
ANR	3096198	Symbol	gdev_prn_copy_scan_lines		3095927						
ANR	3096199	Symbol	rc		3095927						
ANR	3096200	Symbol	dev -> memory		3095927						
ANR	3096201	Symbol	dev		3095927						
ANR	3096202	Symbol	* j		3095927						
ANR	3096203	Symbol	dev -> eprn . next_y		3095927						
ANR	3096204	Symbol	* * line		3095927						
ANR	3096205	Symbol	gs_debug_c		3095927						
ANR	3096206	Symbol	* str		3095927						
ANR	3096207	Symbol	line -> length		3095927						
ANR	3096208	Symbol	rem		3095927						
ANR	3096209	Symbol	dev -> eprn		3095927						
ANR	3096210	Symbol	EPRN_TRACE_CHAR		3095927						
ANR	3096211	Function	eprn_get_planes	1051:0:35855:39841							
ANR	3096212	FunctionDef	"eprn_get_planes (eprn_Device * dev , eprn_OctetString bitplanes [ ])"		3096211	0					
ANR	3096213	CompoundStatement		1052:0:35923:39841	3096211	0					
ANR	3096214	IdentifierDeclStatement	eprn_OctetString * line ;	1053:2:35927:35949	3096211	0	True				
ANR	3096215	IdentifierDecl	* line		3096211	0					
ANR	3096216	IdentifierDeclType	eprn_OctetString *		3096211	0					
ANR	3096217	Identifier	line		3096211	1					
ANR	3096218	IdentifierDeclStatement	"int j , rc ;"	1054:2:36007:36024	3096211	1	True				
ANR	3096219	IdentifierDecl	j		3096211	0					
ANR	3096220	IdentifierDeclType	int		3096211	0					
ANR	3096221	Identifier	j		3096211	1					
ANR	3096222	IdentifierDecl	rc		3096211	1					
ANR	3096223	IdentifierDeclType	int		3096211	0					
ANR	3096224	Identifier	rc		3096211	1					
ANR	3096225	IfStatement	if ( dev -> color_info . depth == 1 )		3096211	2					
ANR	3096226	Condition	dev -> color_info . depth == 1	1059:6:36079:36104	3096211	0	True				
ANR	3096227	EqualityExpression	dev -> color_info . depth == 1		3096211	0		==			
ANR	3096228	MemberAccess	dev -> color_info . depth		3096211	0					
ANR	3096229	PtrMemberAccess	dev -> color_info		3096211	0					
ANR	3096230	Identifier	dev		3096211	0					
ANR	3096231	Identifier	color_info		3096211	1					
ANR	3096232	Identifier	depth		3096211	1					
ANR	3096233	PrimaryExpression	1		3096211	1					
ANR	3096234	ExpressionStatement	line = bitplanes	1059:34:36107:36123	3096211	1	True				
ANR	3096235	AssignmentExpression	line = bitplanes		3096211	0		=			
ANR	3096236	Identifier	line		3096211	0					
ANR	3096237	Identifier	bitplanes		3096211	1					
ANR	3096238	ElseStatement	else		3096211	0					
ANR	3096239	ExpressionStatement	line = & dev -> eprn . scan_line	1060:7:36132:36159	3096211	0	True				
ANR	3096240	AssignmentExpression	line = & dev -> eprn . scan_line		3096211	0		=			
ANR	3096241	Identifier	line		3096211	0					
ANR	3096242	UnaryOperationExpression	& dev -> eprn . scan_line		3096211	1					
ANR	3096243	UnaryOperator	&		3096211	0					
ANR	3096244	MemberAccess	dev -> eprn . scan_line		3096211	1					
ANR	3096245	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096246	Identifier	dev		3096211	0					
ANR	3096247	Identifier	eprn		3096211	1					
ANR	3096248	Identifier	scan_line		3096211	1					
ANR	3096249	IfStatement	if ( dev -> eprn . intensity_rendering == eprn_IR_FloydSteinberg && dev -> eprn . next_y == 0 )		3096211	3					
ANR	3096250	Condition	dev -> eprn . intensity_rendering == eprn_IR_FloydSteinberg && dev -> eprn . next_y == 0	1063:6:36209:36294	3096211	0	True				
ANR	3096251	AndExpression	dev -> eprn . intensity_rendering == eprn_IR_FloydSteinberg && dev -> eprn . next_y == 0		3096211	0		&&			
ANR	3096252	EqualityExpression	dev -> eprn . intensity_rendering == eprn_IR_FloydSteinberg		3096211	0		==			
ANR	3096253	MemberAccess	dev -> eprn . intensity_rendering		3096211	0					
ANR	3096254	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096255	Identifier	dev		3096211	0					
ANR	3096256	Identifier	eprn		3096211	1					
ANR	3096257	Identifier	intensity_rendering		3096211	1					
ANR	3096258	Identifier	eprn_IR_FloydSteinberg		3096211	1					
ANR	3096259	EqualityExpression	dev -> eprn . next_y == 0		3096211	1		==			
ANR	3096260	MemberAccess	dev -> eprn . next_y		3096211	0					
ANR	3096261	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096262	Identifier	dev		3096211	0					
ANR	3096263	Identifier	eprn		3096211	1					
ANR	3096264	Identifier	next_y		3096211	1					
ANR	3096265	PrimaryExpression	0		3096211	1					
ANR	3096266	ReturnStatement	return 1 ;	1064:29:36297:36305	3096211	1	True				
ANR	3096267	PrimaryExpression	1		3096211	0					
ANR	3096268	ExpressionStatement	"rc = eprn_fetch_scan_line ( dev , line )"	1065:2:36309:36345	3096211	4	True				
ANR	3096269	AssignmentExpression	"rc = eprn_fetch_scan_line ( dev , line )"		3096211	0		=			
ANR	3096270	Identifier	rc		3096211	0					
ANR	3096271	CallExpression	"eprn_fetch_scan_line ( dev , line )"		3096211	1					
ANR	3096272	Callee	eprn_fetch_scan_line		3096211	0					
ANR	3096273	Identifier	eprn_fetch_scan_line		3096211	0					
ANR	3096274	ArgumentList	dev		3096211	1					
ANR	3096275	Argument	dev		3096211	0					
ANR	3096276	Identifier	dev		3096211	0					
ANR	3096277	Argument	line		3096211	1					
ANR	3096278	Identifier	line		3096211	0					
ANR	3096279	IfStatement	if ( rc == 0 )		3096211	5					
ANR	3096280	Condition	rc == 0	1066:6:36353:36359	3096211	0	True				
ANR	3096281	EqualityExpression	rc == 0		3096211	0		==			
ANR	3096282	Identifier	rc		3096211	0					
ANR	3096283	PrimaryExpression	0		3096211	1					
ANR	3096284	ExpressionStatement	dev -> eprn . next_y ++	1066:15:36362:36380	3096211	1	True				
ANR	3096285	PostIncDecOperationExpression	dev -> eprn . next_y ++		3096211	0					
ANR	3096286	MemberAccess	dev -> eprn . next_y		3096211	0					
ANR	3096287	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096288	Identifier	dev		3096211	0					
ANR	3096289	Identifier	eprn		3096211	1					
ANR	3096290	Identifier	next_y		3096211	1					
ANR	3096291	IncDec	++		3096211	1					
ANR	3096292	ElseStatement	else		3096211	0					
ANR	3096293	CompoundStatement		16:7:465:465	3096211	0					
ANR	3096294	IfStatement	if ( dev -> eprn . intensity_rendering != eprn_IR_FloydSteinberg )		3096211	0					
ANR	3096295	Condition	dev -> eprn . intensity_rendering != eprn_IR_FloydSteinberg	1068:8:36399:36453	3096211	0	True				
ANR	3096296	EqualityExpression	dev -> eprn . intensity_rendering != eprn_IR_FloydSteinberg		3096211	0		!=			
ANR	3096297	MemberAccess	dev -> eprn . intensity_rendering		3096211	0					
ANR	3096298	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096299	Identifier	dev		3096211	0					
ANR	3096300	Identifier	eprn		3096211	1					
ANR	3096301	Identifier	intensity_rendering		3096211	1					
ANR	3096302	Identifier	eprn_IR_FloydSteinberg		3096211	1					
ANR	3096303	ReturnStatement	return 1 ;	1068:65:36456:36464	3096211	1	True				
ANR	3096304	PrimaryExpression	1		3096211	0					
ANR	3096305	ExpressionStatement	dev -> eprn . next_y = 0	1069:4:36470:36490	3096211	1	True				
ANR	3096306	AssignmentExpression	dev -> eprn . next_y = 0		3096211	0		=			
ANR	3096307	MemberAccess	dev -> eprn . next_y		3096211	0					
ANR	3096308	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096309	Identifier	dev		3096211	0					
ANR	3096310	Identifier	eprn		3096211	1					
ANR	3096311	Identifier	next_y		3096211	1					
ANR	3096312	PrimaryExpression	0		3096211	1					
ANR	3096313	IfStatement	if ( dev -> color_info . depth == 1 )		3096211	6					
ANR	3096314	Condition	dev -> color_info . depth == 1	1072:6:36503:36528	3096211	0	True				
ANR	3096315	EqualityExpression	dev -> color_info . depth == 1		3096211	0		==			
ANR	3096316	MemberAccess	dev -> color_info . depth		3096211	0					
ANR	3096317	PtrMemberAccess	dev -> color_info		3096211	0					
ANR	3096318	Identifier	dev		3096211	0					
ANR	3096319	Identifier	color_info		3096211	1					
ANR	3096320	Identifier	depth		3096211	1					
ANR	3096321	PrimaryExpression	1		3096211	1					
ANR	3096322	ReturnStatement	return 0 ;	1072:34:36531:36539	3096211	1	True				
ANR	3096323	PrimaryExpression	0		3096211	0					
ANR	3096324	IfStatement	if ( dev -> eprn . intensity_rendering == eprn_IR_FloydSteinberg )		3096211	7					
ANR	3096325	Condition	dev -> eprn . intensity_rendering == eprn_IR_FloydSteinberg	1074:6:36548:36602	3096211	0	True				
ANR	3096326	EqualityExpression	dev -> eprn . intensity_rendering == eprn_IR_FloydSteinberg		3096211	0		==			
ANR	3096327	MemberAccess	dev -> eprn . intensity_rendering		3096211	0					
ANR	3096328	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096329	Identifier	dev		3096211	0					
ANR	3096330	Identifier	eprn		3096211	1					
ANR	3096331	Identifier	intensity_rendering		3096211	1					
ANR	3096332	Identifier	eprn_IR_FloydSteinberg		3096211	1					
ANR	3096333	CompoundStatement		24:4:687:707	3096211	1					
ANR	3096334	IdentifierDeclStatement	eprn_OctetString tmp ;	1075:4:36611:36631	3096211	0	True				
ANR	3096335	IdentifierDecl	tmp		3096211	0					
ANR	3096336	IdentifierDeclType	eprn_OctetString		3096211	0					
ANR	3096337	Identifier	tmp		3096211	1					
ANR	3096338	ExpressionStatement	"eprn_split_FS ( & dev -> eprn . next_scan_line , & dev -> eprn . scan_line , dev -> eprn . octets_per_line , dev -> eprn . colour_model , dev -> eprn . black_levels , dev -> eprn . non_black_levels , bitplanes )"	1077:4:36638:36838	3096211	1	True				
ANR	3096339	CallExpression	"eprn_split_FS ( & dev -> eprn . next_scan_line , & dev -> eprn . scan_line , dev -> eprn . octets_per_line , dev -> eprn . colour_model , dev -> eprn . black_levels , dev -> eprn . non_black_levels , bitplanes )"		3096211	0					
ANR	3096340	Callee	eprn_split_FS		3096211	0					
ANR	3096341	Identifier	eprn_split_FS		3096211	0					
ANR	3096342	ArgumentList	& dev -> eprn . next_scan_line		3096211	1					
ANR	3096343	Argument	& dev -> eprn . next_scan_line		3096211	0					
ANR	3096344	UnaryOperationExpression	& dev -> eprn . next_scan_line		3096211	0					
ANR	3096345	UnaryOperator	&		3096211	0					
ANR	3096346	MemberAccess	dev -> eprn . next_scan_line		3096211	1					
ANR	3096347	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096348	Identifier	dev		3096211	0					
ANR	3096349	Identifier	eprn		3096211	1					
ANR	3096350	Identifier	next_scan_line		3096211	1					
ANR	3096351	Argument	& dev -> eprn . scan_line		3096211	1					
ANR	3096352	UnaryOperationExpression	& dev -> eprn . scan_line		3096211	0					
ANR	3096353	UnaryOperator	&		3096211	0					
ANR	3096354	MemberAccess	dev -> eprn . scan_line		3096211	1					
ANR	3096355	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096356	Identifier	dev		3096211	0					
ANR	3096357	Identifier	eprn		3096211	1					
ANR	3096358	Identifier	scan_line		3096211	1					
ANR	3096359	Argument	dev -> eprn . octets_per_line		3096211	2					
ANR	3096360	MemberAccess	dev -> eprn . octets_per_line		3096211	0					
ANR	3096361	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096362	Identifier	dev		3096211	0					
ANR	3096363	Identifier	eprn		3096211	1					
ANR	3096364	Identifier	octets_per_line		3096211	1					
ANR	3096365	Argument	dev -> eprn . colour_model		3096211	3					
ANR	3096366	MemberAccess	dev -> eprn . colour_model		3096211	0					
ANR	3096367	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096368	Identifier	dev		3096211	0					
ANR	3096369	Identifier	eprn		3096211	1					
ANR	3096370	Identifier	colour_model		3096211	1					
ANR	3096371	Argument	dev -> eprn . black_levels		3096211	4					
ANR	3096372	MemberAccess	dev -> eprn . black_levels		3096211	0					
ANR	3096373	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096374	Identifier	dev		3096211	0					
ANR	3096375	Identifier	eprn		3096211	1					
ANR	3096376	Identifier	black_levels		3096211	1					
ANR	3096377	Argument	dev -> eprn . non_black_levels		3096211	5					
ANR	3096378	MemberAccess	dev -> eprn . non_black_levels		3096211	0					
ANR	3096379	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096380	Identifier	dev		3096211	0					
ANR	3096381	Identifier	eprn		3096211	1					
ANR	3096382	Identifier	non_black_levels		3096211	1					
ANR	3096383	Argument	bitplanes		3096211	6					
ANR	3096384	Identifier	bitplanes		3096211	0					
ANR	3096385	ExpressionStatement	tmp = dev -> eprn . next_scan_line	1084:4:36921:36951	3096211	2	True				
ANR	3096386	AssignmentExpression	tmp = dev -> eprn . next_scan_line		3096211	0		=			
ANR	3096387	Identifier	tmp		3096211	0					
ANR	3096388	MemberAccess	dev -> eprn . next_scan_line		3096211	1					
ANR	3096389	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096390	Identifier	dev		3096211	0					
ANR	3096391	Identifier	eprn		3096211	1					
ANR	3096392	Identifier	next_scan_line		3096211	1					
ANR	3096393	ExpressionStatement	dev -> eprn . next_scan_line = dev -> eprn . scan_line	1085:4:36957:37003	3096211	3	True				
ANR	3096394	AssignmentExpression	dev -> eprn . next_scan_line = dev -> eprn . scan_line		3096211	0		=			
ANR	3096395	MemberAccess	dev -> eprn . next_scan_line		3096211	0					
ANR	3096396	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096397	Identifier	dev		3096211	0					
ANR	3096398	Identifier	eprn		3096211	1					
ANR	3096399	Identifier	next_scan_line		3096211	1					
ANR	3096400	MemberAccess	dev -> eprn . scan_line		3096211	1					
ANR	3096401	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096402	Identifier	dev		3096211	0					
ANR	3096403	Identifier	eprn		3096211	1					
ANR	3096404	Identifier	scan_line		3096211	1					
ANR	3096405	ExpressionStatement	dev -> eprn . scan_line = tmp	1086:4:37009:37034	3096211	4	True				
ANR	3096406	AssignmentExpression	dev -> eprn . scan_line = tmp		3096211	0		=			
ANR	3096407	MemberAccess	dev -> eprn . scan_line		3096211	0					
ANR	3096408	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096409	Identifier	dev		3096211	0					
ANR	3096410	Identifier	eprn		3096211	1					
ANR	3096411	Identifier	scan_line		3096211	1					
ANR	3096412	Identifier	tmp		3096211	1					
ANR	3096413	ElseStatement	else		3096211	0					
ANR	3096414	CompoundStatement		37:7:1123:1123	3096211	0					
ANR	3096415	IfStatement	if ( dev -> eprn . colour_model == eprn_DeviceGray )		3096211	0					
ANR	3096416	Condition	dev -> eprn . colour_model == eprn_DeviceGray	1104:8:37734:37774	3096211	0	True				
ANR	3096417	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceGray		3096211	0		==			
ANR	3096418	MemberAccess	dev -> eprn . colour_model		3096211	0					
ANR	3096419	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096420	Identifier	dev		3096211	0					
ANR	3096421	Identifier	eprn		3096211	1					
ANR	3096422	Identifier	colour_model		3096211	1					
ANR	3096423	Identifier	eprn_DeviceGray		3096211	1					
ANR	3096424	ExpressionStatement	"split_line_le8 ( dev , line -> str , line -> length , bitplanes )"	1105:6:37783:37838	3096211	1	True				
ANR	3096425	CallExpression	"split_line_le8 ( dev , line -> str , line -> length , bitplanes )"		3096211	0					
ANR	3096426	Callee	split_line_le8		3096211	0					
ANR	3096427	Identifier	split_line_le8		3096211	0					
ANR	3096428	ArgumentList	dev		3096211	1					
ANR	3096429	Argument	dev		3096211	0					
ANR	3096430	Identifier	dev		3096211	0					
ANR	3096431	Argument	line -> str		3096211	1					
ANR	3096432	PtrMemberAccess	line -> str		3096211	0					
ANR	3096433	Identifier	line		3096211	0					
ANR	3096434	Identifier	str		3096211	1					
ANR	3096435	Argument	line -> length		3096211	2					
ANR	3096436	PtrMemberAccess	line -> length		3096211	0					
ANR	3096437	Identifier	line		3096211	0					
ANR	3096438	Identifier	length		3096211	1					
ANR	3096439	Argument	bitplanes		3096211	3					
ANR	3096440	Identifier	bitplanes		3096211	0					
ANR	3096441	ElseStatement	else		3096211	0					
ANR	3096442	CompoundStatement		55:9:1925:1925	3096211	0					
ANR	3096443	IfStatement	if ( dev -> eprn . bits_per_colorant == 1 )		3096211	0					
ANR	3096444	Condition	dev -> eprn . bits_per_colorant == 1	1107:10:37861:37892	3096211	0	True				
ANR	3096445	EqualityExpression	dev -> eprn . bits_per_colorant == 1		3096211	0		==			
ANR	3096446	MemberAccess	dev -> eprn . bits_per_colorant		3096211	0					
ANR	3096447	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096448	Identifier	dev		3096211	0					
ANR	3096449	Identifier	eprn		3096211	1					
ANR	3096450	Identifier	bits_per_colorant		3096211	1					
ANR	3096451	PrimaryExpression	1		3096211	1					
ANR	3096452	CompoundStatement		56:44:1971:1971	3096211	1					
ANR	3096453	IfStatement	if ( dev -> eprn . colour_model == eprn_DeviceRGB && line -> length == dev -> eprn . octets_per_line )		3096211	0					
ANR	3096454	Condition	dev -> eprn . colour_model == eprn_DeviceRGB && line -> length == dev -> eprn . octets_per_line	1109:12:37945:38041	3096211	0	True				
ANR	3096455	AndExpression	dev -> eprn . colour_model == eprn_DeviceRGB && line -> length == dev -> eprn . octets_per_line		3096211	0		&&			
ANR	3096456	EqualityExpression	dev -> eprn . colour_model == eprn_DeviceRGB		3096211	0		==			
ANR	3096457	MemberAccess	dev -> eprn . colour_model		3096211	0					
ANR	3096458	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096459	Identifier	dev		3096211	0					
ANR	3096460	Identifier	eprn		3096211	1					
ANR	3096461	Identifier	colour_model		3096211	1					
ANR	3096462	Identifier	eprn_DeviceRGB		3096211	1					
ANR	3096463	EqualityExpression	line -> length == dev -> eprn . octets_per_line		3096211	1		==			
ANR	3096464	PtrMemberAccess	line -> length		3096211	0					
ANR	3096465	Identifier	line		3096211	0					
ANR	3096466	Identifier	length		3096211	1					
ANR	3096467	MemberAccess	dev -> eprn . octets_per_line		3096211	1					
ANR	3096468	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096469	Identifier	dev		3096211	0					
ANR	3096470	Identifier	eprn		3096211	1					
ANR	3096471	Identifier	octets_per_line		3096211	1					
ANR	3096472	CompoundStatement		59:55:2120:2120	3096211	1					
ANR	3096473	IfStatement	if ( gs_debug_c ( EPRN_TRACE_CHAR ) )		3096211	0					
ANR	3096474	Condition	gs_debug_c ( EPRN_TRACE_CHAR )	1117:14:38402:38428	3096211	0	True				
ANR	3096475	CallExpression	gs_debug_c ( EPRN_TRACE_CHAR )		3096211	0					
ANR	3096476	Callee	gs_debug_c		3096211	0					
ANR	3096477	Identifier	gs_debug_c		3096211	0					
ANR	3096478	ArgumentList	EPRN_TRACE_CHAR		3096211	1					
ANR	3096479	Argument	EPRN_TRACE_CHAR		3096211	0					
ANR	3096480	Identifier	EPRN_TRACE_CHAR		3096211	0					
ANR	3096481	CompoundStatement		67:19:2528:2554	3096211	1					
ANR	3096482	Statement	static	1118:12:38445:38450	3096211	0	True				
ANR	3096483	IdentifierDeclStatement	bool already_noted = false ;	1118:19:38452:38478	3096211	1	True				
ANR	3096484	IdentifierDecl	already_noted = false		3096211	0					
ANR	3096485	IdentifierDeclType	bool		3096211	0					
ANR	3096486	Identifier	already_noted		3096211	1					
ANR	3096487	AssignmentExpression	already_noted = false		3096211	2		=			
ANR	3096488	Identifier	false		3096211	0					
ANR	3096489	Identifier	false		3096211	1					
ANR	3096490	IfStatement	if ( ! already_noted && line -> str [ line -> length - 1 ] != 0xEE )		3096211	2					
ANR	3096491	Condition	! already_noted && line -> str [ line -> length - 1 ] != 0xEE	1119:16:38496:38548	3096211	0	True				
ANR	3096492	AndExpression	! already_noted && line -> str [ line -> length - 1 ] != 0xEE		3096211	0		&&			
ANR	3096493	UnaryOperationExpression	! already_noted		3096211	0					
ANR	3096494	UnaryOperator	!		3096211	0					
ANR	3096495	Identifier	already_noted		3096211	1					
ANR	3096496	EqualityExpression	line -> str [ line -> length - 1 ] != 0xEE		3096211	1		!=			
ANR	3096497	ArrayIndexing	line -> str [ line -> length - 1 ]		3096211	0					
ANR	3096498	PtrMemberAccess	line -> str		3096211	0					
ANR	3096499	Identifier	line		3096211	0					
ANR	3096500	Identifier	str		3096211	1					
ANR	3096501	AdditiveExpression	line -> length - 1		3096211	1		-			
ANR	3096502	PtrMemberAccess	line -> length		3096211	0					
ANR	3096503	Identifier	line		3096211	0					
ANR	3096504	Identifier	length		3096211	1					
ANR	3096505	PrimaryExpression	1		3096211	1					
ANR	3096506	PrimaryExpression	0xEE		3096211	1					
ANR	3096507	CompoundStatement		68:71:2627:2627	3096211	1					
ANR	3096508	Statement	dmlprintf1	1120:14:38567:38576	3096211	0	True				
ANR	3096509	Statement	(	1120:24:38577:38577	3096211	1	True				
ANR	3096510	Statement	dev	1120:25:38578:38580	3096211	2	True				
ANR	3096511	Statement	->	1120:28:38581:38582	3096211	3	True				
ANR	3096512	Statement	memory	1120:30:38583:38588	3096211	4	True				
ANR	3096513	Statement	","	1120:36:38589:38589	3096211	5	True				
ANR	3096514	Statement	"""! eprn_get_planes(): """	1120:38:38591:38613	3096211	6	True				
ANR	3096515	Statement	"""Line-terminating octet is 0x%02X.\\n"""	1121:25:38640:38676	3096211	7	True				
ANR	3096516	Statement	","	1121:62:38677:38677	3096211	8	True				
ANR	3096517	Statement	line	1122:25:38704:38707	3096211	9	True				
ANR	3096518	Statement	->	1122:29:38708:38709	3096211	10	True				
ANR	3096519	Statement	str	1122:31:38710:38712	3096211	11	True				
ANR	3096520	Statement	[	1122:34:38713:38713	3096211	12	True				
ANR	3096521	Statement	line	1122:35:38714:38717	3096211	13	True				
ANR	3096522	Statement	->	1122:39:38718:38719	3096211	14	True				
ANR	3096523	Statement	length	1122:41:38720:38725	3096211	15	True				
ANR	3096524	Statement	-	1122:48:38727:38727	3096211	16	True				
ANR	3096525	Statement	1	1122:50:38729:38729	3096211	17	True				
ANR	3096526	Statement	]	1122:51:38730:38730	3096211	18	True				
ANR	3096527	Statement	)	1122:52:38731:38731	3096211	19	True				
ANR	3096528	ExpressionStatement		1122:53:38732:38732	3096211	20	True				
ANR	3096529	ExpressionStatement	already_noted = true	1123:14:38748:38768	3096211	21	True				
ANR	3096530	AssignmentExpression	already_noted = true		3096211	0		=			
ANR	3096531	Identifier	already_noted		3096211	0					
ANR	3096532	Identifier	true		3096211	1					
ANR	3096533	ExpressionStatement	line -> str [ line -> length - 1 ] |= RED_BIT | GREEN_BIT | BLUE_BIT	1127:10:38830:38891	3096211	1	True				
ANR	3096534	AssignmentExpression	line -> str [ line -> length - 1 ] |= RED_BIT | GREEN_BIT | BLUE_BIT		3096211	0		|=			
ANR	3096535	ArrayIndexing	line -> str [ line -> length - 1 ]		3096211	0					
ANR	3096536	PtrMemberAccess	line -> str		3096211	0					
ANR	3096537	Identifier	line		3096211	0					
ANR	3096538	Identifier	str		3096211	1					
ANR	3096539	AdditiveExpression	line -> length - 1		3096211	1		-			
ANR	3096540	PtrMemberAccess	line -> length		3096211	0					
ANR	3096541	Identifier	line		3096211	0					
ANR	3096542	Identifier	length		3096211	1					
ANR	3096543	PrimaryExpression	1		3096211	1					
ANR	3096544	InclusiveOrExpression	RED_BIT | GREEN_BIT | BLUE_BIT		3096211	1		|			
ANR	3096545	Identifier	RED_BIT		3096211	0					
ANR	3096546	InclusiveOrExpression	GREEN_BIT | BLUE_BIT		3096211	1		|			
ANR	3096547	Identifier	GREEN_BIT		3096211	0					
ANR	3096548	Identifier	BLUE_BIT		3096211	1					
ANR	3096549	ExpressionStatement	"split_line_3or4x1 ( dev , line -> str , line -> length , bitplanes )"	1130:8:38952:39010	3096211	1	True				
ANR	3096550	CallExpression	"split_line_3or4x1 ( dev , line -> str , line -> length , bitplanes )"		3096211	0					
ANR	3096551	Callee	split_line_3or4x1		3096211	0					
ANR	3096552	Identifier	split_line_3or4x1		3096211	0					
ANR	3096553	ArgumentList	dev		3096211	1					
ANR	3096554	Argument	dev		3096211	0					
ANR	3096555	Identifier	dev		3096211	0					
ANR	3096556	Argument	line -> str		3096211	1					
ANR	3096557	PtrMemberAccess	line -> str		3096211	0					
ANR	3096558	Identifier	line		3096211	0					
ANR	3096559	Identifier	str		3096211	1					
ANR	3096560	Argument	line -> length		3096211	2					
ANR	3096561	PtrMemberAccess	line -> length		3096211	0					
ANR	3096562	Identifier	line		3096211	0					
ANR	3096563	Identifier	length		3096211	1					
ANR	3096564	Argument	bitplanes		3096211	3					
ANR	3096565	Identifier	bitplanes		3096211	0					
ANR	3096566	ElseStatement	else		3096211	0					
ANR	3096567	IfStatement	if ( dev -> eprn . bits_per_colorant == 2 && dev -> eprn . black_levels > 2 && dev -> eprn . non_black_levels > 2 )		3096211	0					
ANR	3096568	Condition	dev -> eprn . bits_per_colorant == 2 && dev -> eprn . black_levels > 2 && dev -> eprn . non_black_levels > 2	1132:15:39035:39140	3096211	0	True				
ANR	3096569	AndExpression	dev -> eprn . bits_per_colorant == 2 && dev -> eprn . black_levels > 2 && dev -> eprn . non_black_levels > 2		3096211	0		&&			
ANR	3096570	EqualityExpression	dev -> eprn . bits_per_colorant == 2		3096211	0		==			
ANR	3096571	MemberAccess	dev -> eprn . bits_per_colorant		3096211	0					
ANR	3096572	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096573	Identifier	dev		3096211	0					
ANR	3096574	Identifier	eprn		3096211	1					
ANR	3096575	Identifier	bits_per_colorant		3096211	1					
ANR	3096576	PrimaryExpression	2		3096211	1					
ANR	3096577	AndExpression	dev -> eprn . black_levels > 2 && dev -> eprn . non_black_levels > 2		3096211	1		&&			
ANR	3096578	RelationalExpression	dev -> eprn . black_levels > 2		3096211	0		>			
ANR	3096579	MemberAccess	dev -> eprn . black_levels		3096211	0					
ANR	3096580	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096581	Identifier	dev		3096211	0					
ANR	3096582	Identifier	eprn		3096211	1					
ANR	3096583	Identifier	black_levels		3096211	1					
ANR	3096584	PrimaryExpression	2		3096211	1					
ANR	3096585	RelationalExpression	dev -> eprn . non_black_levels > 2		3096211	1		>			
ANR	3096586	MemberAccess	dev -> eprn . non_black_levels		3096211	0					
ANR	3096587	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096588	Identifier	dev		3096211	0					
ANR	3096589	Identifier	eprn		3096211	1					
ANR	3096590	Identifier	non_black_levels		3096211	1					
ANR	3096591	PrimaryExpression	2		3096211	1					
ANR	3096592	ExpressionStatement	"split_line_4x2 ( dev , line -> str , line -> length , bitplanes )"	1134:8:39151:39206	3096211	1	True				
ANR	3096593	CallExpression	"split_line_4x2 ( dev , line -> str , line -> length , bitplanes )"		3096211	0					
ANR	3096594	Callee	split_line_4x2		3096211	0					
ANR	3096595	Identifier	split_line_4x2		3096211	0					
ANR	3096596	ArgumentList	dev		3096211	1					
ANR	3096597	Argument	dev		3096211	0					
ANR	3096598	Identifier	dev		3096211	0					
ANR	3096599	Argument	line -> str		3096211	1					
ANR	3096600	PtrMemberAccess	line -> str		3096211	0					
ANR	3096601	Identifier	line		3096211	0					
ANR	3096602	Identifier	str		3096211	1					
ANR	3096603	Argument	line -> length		3096211	2					
ANR	3096604	PtrMemberAccess	line -> length		3096211	0					
ANR	3096605	Identifier	line		3096211	0					
ANR	3096606	Identifier	length		3096211	1					
ANR	3096607	Argument	bitplanes		3096211	3					
ANR	3096608	Identifier	bitplanes		3096211	0					
ANR	3096609	ElseStatement	else		3096211	0					
ANR	3096610	IfStatement	if ( dev -> color_info . depth < 8 )		3096211	0					
ANR	3096611	Condition	dev -> color_info . depth < 8	1135:15:39223:39247	3096211	0	True				
ANR	3096612	RelationalExpression	dev -> color_info . depth < 8		3096211	0		<			
ANR	3096613	MemberAccess	dev -> color_info . depth		3096211	0					
ANR	3096614	PtrMemberAccess	dev -> color_info		3096211	0					
ANR	3096615	Identifier	dev		3096211	0					
ANR	3096616	Identifier	color_info		3096211	1					
ANR	3096617	Identifier	depth		3096211	1					
ANR	3096618	PrimaryExpression	8		3096211	1					
ANR	3096619	ExpressionStatement	"split_line_le8 ( dev , line -> str , line -> length , bitplanes )"	1136:8:39258:39313	3096211	1	True				
ANR	3096620	CallExpression	"split_line_le8 ( dev , line -> str , line -> length , bitplanes )"		3096211	0					
ANR	3096621	Callee	split_line_le8		3096211	0					
ANR	3096622	Identifier	split_line_le8		3096211	0					
ANR	3096623	ArgumentList	dev		3096211	1					
ANR	3096624	Argument	dev		3096211	0					
ANR	3096625	Identifier	dev		3096211	0					
ANR	3096626	Argument	line -> str		3096211	1					
ANR	3096627	PtrMemberAccess	line -> str		3096211	0					
ANR	3096628	Identifier	line		3096211	0					
ANR	3096629	Identifier	str		3096211	1					
ANR	3096630	Argument	line -> length		3096211	2					
ANR	3096631	PtrMemberAccess	line -> length		3096211	0					
ANR	3096632	Identifier	line		3096211	0					
ANR	3096633	Identifier	length		3096211	1					
ANR	3096634	Argument	bitplanes		3096211	3					
ANR	3096635	Identifier	bitplanes		3096211	0					
ANR	3096636	ElseStatement	else		3096211	0					
ANR	3096637	ExpressionStatement	"split_line_ge8 ( dev , line -> str , line -> length , bitplanes )"	1137:11:39326:39381	3096211	0	True				
ANR	3096638	CallExpression	"split_line_ge8 ( dev , line -> str , line -> length , bitplanes )"		3096211	0					
ANR	3096639	Callee	split_line_ge8		3096211	0					
ANR	3096640	Identifier	split_line_ge8		3096211	0					
ANR	3096641	ArgumentList	dev		3096211	1					
ANR	3096642	Argument	dev		3096211	0					
ANR	3096643	Identifier	dev		3096211	0					
ANR	3096644	Argument	line -> str		3096211	1					
ANR	3096645	PtrMemberAccess	line -> str		3096211	0					
ANR	3096646	Identifier	line		3096211	0					
ANR	3096647	Identifier	str		3096211	1					
ANR	3096648	Argument	line -> length		3096211	2					
ANR	3096649	PtrMemberAccess	line -> length		3096211	0					
ANR	3096650	Identifier	line		3096211	0					
ANR	3096651	Identifier	length		3096211	1					
ANR	3096652	Argument	bitplanes		3096211	3					
ANR	3096653	Identifier	bitplanes		3096211	0					
ANR	3096654	ForStatement	for ( j = 0 ; j < dev -> eprn . output_planes ; j ++ )		3096211	8					
ANR	3096655	ForInit	j = 0 ;	1143:7:39498:39503	3096211	0	True				
ANR	3096656	AssignmentExpression	j = 0		3096211	0		=			
ANR	3096657	Identifier	j		3096211	0					
ANR	3096658	PrimaryExpression	0		3096211	1					
ANR	3096659	Condition	j < dev -> eprn . output_planes	1143:14:39505:39531	3096211	1	True				
ANR	3096660	RelationalExpression	j < dev -> eprn . output_planes		3096211	0		<			
ANR	3096661	Identifier	j		3096211	0					
ANR	3096662	MemberAccess	dev -> eprn . output_planes		3096211	1					
ANR	3096663	PtrMemberAccess	dev -> eprn		3096211	0					
ANR	3096664	Identifier	dev		3096211	0					
ANR	3096665	Identifier	eprn		3096211	1					
ANR	3096666	Identifier	output_planes		3096211	1					
ANR	3096667	PostIncDecOperationExpression	j ++	1143:43:39534:39536	3096211	2	True				
ANR	3096668	Identifier	j		3096211	0					
ANR	3096669	IncDec	++		3096211	1					
ANR	3096670	CompoundStatement		92:48:3615:3615	3096211	3					
ANR	3096671	IfStatement	if ( bitplanes [ j ] . length > 0 )		3096211	0					
ANR	3096672	Condition	bitplanes [ j ] . length > 0	1144:8:39549:39571	3096211	0	True				
ANR	3096673	RelationalExpression	bitplanes [ j ] . length > 0		3096211	0		>			
ANR	3096674	MemberAccess	bitplanes [ j ] . length		3096211	0					
ANR	3096675	ArrayIndexing	bitplanes [ j ]		3096211	0					
ANR	3096676	Identifier	bitplanes		3096211	0					
ANR	3096677	Identifier	j		3096211	1					
ANR	3096678	Identifier	length		3096211	1					
ANR	3096679	PrimaryExpression	0		3096211	1					
ANR	3096680	CompoundStatement		94:6:3658:3726	3096211	1					
ANR	3096681	IdentifierDeclStatement	const eprn_Octet * str = bitplanes [ j ] . str + ( bitplanes [ j ] . length - 1 ) ;	1145:6:39582:39650	3096211	0	True				
ANR	3096682	IdentifierDecl	* str = bitplanes [ j ] . str + ( bitplanes [ j ] . length - 1 )		3096211	0					
ANR	3096683	IdentifierDeclType	const eprn_Octet *		3096211	0					
ANR	3096684	Identifier	str		3096211	1					
ANR	3096685	AssignmentExpression	* str = bitplanes [ j ] . str + ( bitplanes [ j ] . length - 1 )		3096211	2		=			
ANR	3096686	Identifier	str		3096211	0					
ANR	3096687	AdditiveExpression	bitplanes [ j ] . str + ( bitplanes [ j ] . length - 1 )		3096211	1		+			
ANR	3096688	MemberAccess	bitplanes [ j ] . str		3096211	0					
ANR	3096689	ArrayIndexing	bitplanes [ j ]		3096211	0					
ANR	3096690	Identifier	bitplanes		3096211	0					
ANR	3096691	Identifier	j		3096211	1					
ANR	3096692	Identifier	str		3096211	1					
ANR	3096693	AdditiveExpression	bitplanes [ j ] . length - 1		3096211	1		-			
ANR	3096694	MemberAccess	bitplanes [ j ] . length		3096211	0					
ANR	3096695	ArrayIndexing	bitplanes [ j ]		3096211	0					
ANR	3096696	Identifier	bitplanes		3096211	0					
ANR	3096697	Identifier	j		3096211	1					
ANR	3096698	Identifier	length		3096211	1					
ANR	3096699	PrimaryExpression	1		3096211	1					
ANR	3096700	WhileStatement	while ( str > bitplanes [ j ] . str && * str == 0 )		3096211	1					
ANR	3096701	Condition	str > bitplanes [ j ] . str && * str == 0	1146:13:39665:39699	3096211	0	True				
ANR	3096702	AndExpression	str > bitplanes [ j ] . str && * str == 0		3096211	0		&&			
ANR	3096703	RelationalExpression	str > bitplanes [ j ] . str		3096211	0		>			
ANR	3096704	Identifier	str		3096211	0					
ANR	3096705	MemberAccess	bitplanes [ j ] . str		3096211	1					
ANR	3096706	ArrayIndexing	bitplanes [ j ]		3096211	0					
ANR	3096707	Identifier	bitplanes		3096211	0					
ANR	3096708	Identifier	j		3096211	1					
ANR	3096709	Identifier	str		3096211	1					
ANR	3096710	EqualityExpression	* str == 0		3096211	1		==			
ANR	3096711	UnaryOperationExpression	* str		3096211	0					
ANR	3096712	UnaryOperator	*		3096211	0					
ANR	3096713	Identifier	str		3096211	1					
ANR	3096714	PrimaryExpression	0		3096211	1					
ANR	3096715	ExpressionStatement	str --	1146:50:39702:39707	3096211	1	True				
ANR	3096716	PostIncDecOperationExpression	str --		3096211	0					
ANR	3096717	Identifier	str		3096211	0					
ANR	3096718	IncDec	--		3096211	1					
ANR	3096719	IfStatement	if ( * str == 0 )		3096211	2					
ANR	3096720	Condition	* str == 0	1147:10:39719:39727	3096211	0	True				
ANR	3096721	EqualityExpression	* str == 0		3096211	0		==			
ANR	3096722	UnaryOperationExpression	* str		3096211	0					
ANR	3096723	UnaryOperator	*		3096211	0					
ANR	3096724	Identifier	str		3096211	1					
ANR	3096725	PrimaryExpression	0		3096211	1					
ANR	3096726	ExpressionStatement	bitplanes [ j ] . length = 0	1147:21:39730:39753	3096211	1	True				
ANR	3096727	AssignmentExpression	bitplanes [ j ] . length = 0		3096211	0		=			
ANR	3096728	MemberAccess	bitplanes [ j ] . length		3096211	0					
ANR	3096729	ArrayIndexing	bitplanes [ j ]		3096211	0					
ANR	3096730	Identifier	bitplanes		3096211	0					
ANR	3096731	Identifier	j		3096211	1					
ANR	3096732	Identifier	length		3096211	1					
ANR	3096733	PrimaryExpression	0		3096211	1					
ANR	3096734	ElseStatement	else		3096211	0					
ANR	3096735	ExpressionStatement	bitplanes [ j ] . length = ( str - bitplanes [ j ] . str ) + 1	1148:11:39766:39816	3096211	0	True				
ANR	3096736	AssignmentExpression	bitplanes [ j ] . length = ( str - bitplanes [ j ] . str ) + 1		3096211	0		=			
ANR	3096737	MemberAccess	bitplanes [ j ] . length		3096211	0					
ANR	3096738	ArrayIndexing	bitplanes [ j ]		3096211	0					
ANR	3096739	Identifier	bitplanes		3096211	0					
ANR	3096740	Identifier	j		3096211	1					
ANR	3096741	Identifier	length		3096211	1					
ANR	3096742	AdditiveExpression	( str - bitplanes [ j ] . str ) + 1		3096211	1		+			
ANR	3096743	AdditiveExpression	str - bitplanes [ j ] . str		3096211	0		-			
ANR	3096744	Identifier	str		3096211	0					
ANR	3096745	MemberAccess	bitplanes [ j ] . str		3096211	1					
ANR	3096746	ArrayIndexing	bitplanes [ j ]		3096211	0					
ANR	3096747	Identifier	bitplanes		3096211	0					
ANR	3096748	Identifier	j		3096211	1					
ANR	3096749	Identifier	str		3096211	1					
ANR	3096750	PrimaryExpression	1		3096211	1					
ANR	3096751	ReturnStatement	return 0 ;	1152:2:39831:39839	3096211	9	True				
ANR	3096752	PrimaryExpression	0		3096211	0					
ANR	3096753	ReturnType	int		3096211	1					
ANR	3096754	Identifier	eprn_get_planes		3096211	2					
ANR	3096755	ParameterList	"eprn_Device * dev , eprn_OctetString bitplanes [ ]"		3096211	3					
ANR	3096756	Parameter	eprn_Device * dev	1051:20:35875:35890	3096211	0	True				
ANR	3096757	ParameterType	eprn_Device *		3096211	0					
ANR	3096758	Identifier	dev		3096211	1					
ANR	3096759	Parameter	eprn_OctetString bitplanes [ ]	1051:38:35893:35920	3096211	1	True				
ANR	3096760	ParameterType	eprn_OctetString [ ]		3096211	0					
ANR	3096761	Identifier	bitplanes		3096211	1					
ANR	3096762	CFGEntryNode	ENTRY		3096211		True				
ANR	3096763	CFGExitNode	EXIT		3096211		True				
ANR	3096764	Symbol	* dev		3096211						
ANR	3096765	Symbol	dev -> eprn . non_black_levels		3096211						
ANR	3096766	Symbol	line		3096211						
ANR	3096767	Symbol	bitplanes [ j ] . length		3096211						
ANR	3096768	Symbol	& dev -> eprn . next_scan_line		3096211						
ANR	3096769	Symbol	eprn_fetch_scan_line		3096211						
ANR	3096770	Symbol	line -> str		3096211						
ANR	3096771	Symbol	* line		3096211						
ANR	3096772	Symbol	dev -> eprn . bits_per_colorant		3096211						
ANR	3096773	Symbol	dev -> color_info		3096211						
ANR	3096774	Symbol	dev -> color_info . depth		3096211						
ANR	3096775	Symbol	dev -> eprn . colour_model		3096211						
ANR	3096776	Symbol	GREEN_BIT		3096211						
ANR	3096777	Symbol	bitplanes [ j ] . str		3096211						
ANR	3096778	Symbol	dev -> eprn . intensity_rendering		3096211						
ANR	3096779	Symbol	eprn_DeviceGray		3096211						
ANR	3096780	Symbol	& dev -> eprn . scan_line		3096211						
ANR	3096781	Symbol	dev		3096211						
ANR	3096782	Symbol	tmp		3096211						
ANR	3096783	Symbol	gs_debug_c		3096211						
ANR	3096784	Symbol	* str		3096211						
ANR	3096785	Symbol	dev -> eprn		3096211						
ANR	3096786	Symbol	dev -> eprn . octets_per_line		3096211						
ANR	3096787	Symbol	* line -> str		3096211						
ANR	3096788	Symbol	BLUE_BIT		3096211						
ANR	3096789	Symbol	dev -> eprn . black_levels		3096211						
ANR	3096790	Symbol	dev -> eprn . scan_line		3096211						
ANR	3096791	Symbol	false		3096211						
ANR	3096792	Symbol	j		3096211						
ANR	3096793	Symbol	eprn_IR_FloydSteinberg		3096211						
ANR	3096794	Symbol	& dev -> eprn		3096211						
ANR	3096795	Symbol	str		3096211						
ANR	3096796	Symbol	rc		3096211						
ANR	3096797	Symbol	* line -> length		3096211						
ANR	3096798	Symbol	* j		3096211						
ANR	3096799	Symbol	dev -> eprn . next_scan_line		3096211						
ANR	3096800	Symbol	dev -> eprn . next_y		3096211						
ANR	3096801	Symbol	already_noted		3096211						
ANR	3096802	Symbol	eprn_DeviceRGB		3096211						
ANR	3096803	Symbol	true		3096211						
ANR	3096804	Symbol	RED_BIT		3096211						
ANR	3096805	Symbol	* * line		3096211						
ANR	3096806	Symbol	bitplanes		3096211						
ANR	3096807	Symbol	line -> length		3096211						
ANR	3096808	Symbol	EPRN_TRACE_CHAR		3096211						
ANR	3096809	Symbol	dev -> eprn . output_planes		3096211						
ANR	3096810	Symbol	* bitplanes		3096211						
