command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3666431	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_smooth_ftsmooth.c								
ANR	3666432	Function	ft_smooth_init	31:2:1491:1642							
ANR	3666433	FunctionDef	ft_smooth_init (FT_Renderer render)		3666432	0					
ANR	3666434	CompoundStatement		33:2:1549:1642	3666432	0					
ANR	3666435	ExpressionStatement	"render -> clazz -> raster_class -> raster_reset ( render -> raster , NULL , 0 )"	34:4:1555:1623	3666432	0	True				
ANR	3666436	CallExpression	"render -> clazz -> raster_class -> raster_reset ( render -> raster , NULL , 0 )"		3666432	0					
ANR	3666437	Callee	render -> clazz -> raster_class -> raster_reset		3666432	0					
ANR	3666438	PtrMemberAccess	render -> clazz -> raster_class -> raster_reset		3666432	0					
ANR	3666439	PtrMemberAccess	render -> clazz -> raster_class		3666432	0					
ANR	3666440	PtrMemberAccess	render -> clazz		3666432	0					
ANR	3666441	Identifier	render		3666432	0					
ANR	3666442	Identifier	clazz		3666432	1					
ANR	3666443	Identifier	raster_class		3666432	1					
ANR	3666444	Identifier	raster_reset		3666432	1					
ANR	3666445	ArgumentList	render -> raster		3666432	1					
ANR	3666446	Argument	render -> raster		3666432	0					
ANR	3666447	PtrMemberAccess	render -> raster		3666432	0					
ANR	3666448	Identifier	render		3666432	0					
ANR	3666449	Identifier	raster		3666432	1					
ANR	3666450	Argument	NULL		3666432	1					
ANR	3666451	Identifier	NULL		3666432	0					
ANR	3666452	Argument	0		3666432	2					
ANR	3666453	PrimaryExpression	0		3666432	0					
ANR	3666454	ReturnStatement	return 0 ;	36:4:1630:1638	3666432	1	True				
ANR	3666455	PrimaryExpression	0		3666432	0					
ANR	3666456	ReturnType	static FT_Error		3666432	1					
ANR	3666457	Identifier	ft_smooth_init		3666432	2					
ANR	3666458	ParameterList	FT_Renderer render		3666432	3					
ANR	3666459	Parameter	FT_Renderer render	32:18:1525:1543	3666432	0	True				
ANR	3666460	ParameterType	FT_Renderer		3666432	0					
ANR	3666461	Identifier	render		3666432	1					
ANR	3666462	CFGEntryNode	ENTRY		3666432		True				
ANR	3666463	CFGExitNode	EXIT		3666432		True				
ANR	3666464	Symbol	NULL		3666432						
ANR	3666465	Symbol	render -> clazz -> raster_class		3666432						
ANR	3666466	Symbol	* render		3666432						
ANR	3666467	Symbol	render -> raster		3666432						
ANR	3666468	Symbol	* render -> clazz		3666432						
ANR	3666469	Symbol	* * render		3666432						
ANR	3666470	Symbol	render		3666432						
ANR	3666471	Symbol	render -> clazz		3666432						
ANR	3666472	Function	ft_smooth_set_mode	41:2:1682:2081							
ANR	3666473	FunctionDef	"ft_smooth_set_mode (FT_Renderer render , FT_ULong mode_tag , FT_Pointer data)"		3666472	0					
ANR	3666474	CompoundStatement		45:2:1830:2081	3666472	0					
ANR	3666475	ReturnStatement	"return render -> clazz -> raster_class -> raster_set_mode ( render -> raster , mode_tag , data ) ;"	47:4:1878:2077	3666472	0	True				
ANR	3666476	CallExpression	"render -> clazz -> raster_class -> raster_set_mode ( render -> raster , mode_tag , data )"		3666472	0					
ANR	3666477	Callee	render -> clazz -> raster_class -> raster_set_mode		3666472	0					
ANR	3666478	PtrMemberAccess	render -> clazz -> raster_class -> raster_set_mode		3666472	0					
ANR	3666479	PtrMemberAccess	render -> clazz -> raster_class		3666472	0					
ANR	3666480	PtrMemberAccess	render -> clazz		3666472	0					
ANR	3666481	Identifier	render		3666472	0					
ANR	3666482	Identifier	clazz		3666472	1					
ANR	3666483	Identifier	raster_class		3666472	1					
ANR	3666484	Identifier	raster_set_mode		3666472	1					
ANR	3666485	ArgumentList	render -> raster		3666472	1					
ANR	3666486	Argument	render -> raster		3666472	0					
ANR	3666487	PtrMemberAccess	render -> raster		3666472	0					
ANR	3666488	Identifier	render		3666472	0					
ANR	3666489	Identifier	raster		3666472	1					
ANR	3666490	Argument	mode_tag		3666472	1					
ANR	3666491	Identifier	mode_tag		3666472	0					
ANR	3666492	Argument	data		3666472	2					
ANR	3666493	Identifier	data		3666472	0					
ANR	3666494	ReturnType	static FT_Error		3666472	1					
ANR	3666495	Identifier	ft_smooth_set_mode		3666472	2					
ANR	3666496	ParameterList	"FT_Renderer render , FT_ULong mode_tag , FT_Pointer data"		3666472	3					
ANR	3666497	Parameter	FT_Renderer render	42:22:1720:1738	3666472	0	True				
ANR	3666498	ParameterType	FT_Renderer		3666472	0					
ANR	3666499	Identifier	render		3666472	1					
ANR	3666500	Parameter	FT_ULong mode_tag	43:22:1763:1783	3666472	1	True				
ANR	3666501	ParameterType	FT_ULong		3666472	0					
ANR	3666502	Identifier	mode_tag		3666472	1					
ANR	3666503	Parameter	FT_Pointer data	44:22:1808:1824	3666472	2	True				
ANR	3666504	ParameterType	FT_Pointer		3666472	0					
ANR	3666505	Identifier	data		3666472	1					
ANR	3666506	CFGEntryNode	ENTRY		3666472		True				
ANR	3666507	CFGExitNode	EXIT		3666472		True				
ANR	3666508	Symbol	* * * render		3666472						
ANR	3666509	Symbol	* * render -> clazz		3666472						
ANR	3666510	Symbol	data		3666472						
ANR	3666511	Symbol	render -> raster		3666472						
ANR	3666512	Symbol	* render		3666472						
ANR	3666513	Symbol	mode_tag		3666472						
ANR	3666514	Symbol	* render -> clazz		3666472						
ANR	3666515	Symbol	render -> clazz		3666472						
ANR	3666516	Symbol	render -> clazz -> raster_class		3666472						
ANR	3666517	Symbol	* render -> clazz -> raster_class		3666472						
ANR	3666518	Symbol	* * render		3666472						
ANR	3666519	Symbol	render -> clazz -> raster_class -> raster_set_mode		3666472						
ANR	3666520	Symbol	render		3666472						
ANR	3666521	Function	ft_smooth_transform	53:2:2124:2680							
ANR	3666522	FunctionDef	"ft_smooth_transform (FT_Renderer render , FT_GlyphSlot slot , const FT_Matrix * matrix , const FT_Vector * delta)"		3666521	0					
ANR	3666523	CompoundStatement		58:2:2336:2680	3666521	0					
ANR	3666524	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	59:4:2342:2369	3666521	0	True				
ANR	3666525	IdentifierDecl	error = FT_Err_Ok		3666521	0					
ANR	3666526	IdentifierDeclType	FT_Error		3666521	0					
ANR	3666527	Identifier	error		3666521	1					
ANR	3666528	AssignmentExpression	error = FT_Err_Ok		3666521	2		=			
ANR	3666529	Identifier	FT_Err_Ok		3666521	0					
ANR	3666530	Identifier	FT_Err_Ok		3666521	1					
ANR	3666531	IfStatement	if ( slot -> format != render -> glyph_format )		3666521	1					
ANR	3666532	Condition	slot -> format != render -> glyph_format	62:9:2382:2417	3666521	0	True				
ANR	3666533	EqualityExpression	slot -> format != render -> glyph_format		3666521	0		!=			
ANR	3666534	PtrMemberAccess	slot -> format		3666521	0					
ANR	3666535	Identifier	slot		3666521	0					
ANR	3666536	Identifier	format		3666521	1					
ANR	3666537	PtrMemberAccess	render -> glyph_format		3666521	1					
ANR	3666538	Identifier	render		3666521	0					
ANR	3666539	Identifier	glyph_format		3666521	1					
ANR	3666540	CompoundStatement		6:4:88:88	3666521	1					
ANR	3666541	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	64:6:2433:2469	3666521	0	True				
ANR	3666542	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3666521	0		=			
ANR	3666543	Identifier	error		3666521	0					
ANR	3666544	CallExpression	FT_THROW ( Invalid_Argument )		3666521	1					
ANR	3666545	Callee	FT_THROW		3666521	0					
ANR	3666546	Identifier	FT_THROW		3666521	0					
ANR	3666547	ArgumentList	Invalid_Argument		3666521	1					
ANR	3666548	Argument	Invalid_Argument		3666521	0					
ANR	3666549	Identifier	Invalid_Argument		3666521	0					
ANR	3666550	GotoStatement	goto Exit ;	65:6:2477:2486	3666521	1	True				
ANR	3666551	Identifier	Exit		3666521	0					
ANR	3666552	IfStatement	if ( matrix )		3666521	2					
ANR	3666553	Condition	matrix	68:9:2504:2509	3666521	0	True				
ANR	3666554	Identifier	matrix		3666521	0					
ANR	3666555	ExpressionStatement	"FT_Outline_Transform ( & slot -> outline , matrix )"	69:6:2519:2565	3666521	1	True				
ANR	3666556	CallExpression	"FT_Outline_Transform ( & slot -> outline , matrix )"		3666521	0					
ANR	3666557	Callee	FT_Outline_Transform		3666521	0					
ANR	3666558	Identifier	FT_Outline_Transform		3666521	0					
ANR	3666559	ArgumentList	& slot -> outline		3666521	1					
ANR	3666560	Argument	& slot -> outline		3666521	0					
ANR	3666561	UnaryOperationExpression	& slot -> outline		3666521	0					
ANR	3666562	UnaryOperator	&		3666521	0					
ANR	3666563	PtrMemberAccess	slot -> outline		3666521	1					
ANR	3666564	Identifier	slot		3666521	0					
ANR	3666565	Identifier	outline		3666521	1					
ANR	3666566	Argument	matrix		3666521	1					
ANR	3666567	Identifier	matrix		3666521	0					
ANR	3666568	IfStatement	if ( delta )		3666521	3					
ANR	3666569	Condition	delta	71:9:2577:2581	3666521	0	True				
ANR	3666570	Identifier	delta		3666521	0					
ANR	3666571	ExpressionStatement	"FT_Outline_Translate ( & slot -> outline , delta -> x , delta -> y )"	72:6:2591:2649	3666521	1	True				
ANR	3666572	CallExpression	"FT_Outline_Translate ( & slot -> outline , delta -> x , delta -> y )"		3666521	0					
ANR	3666573	Callee	FT_Outline_Translate		3666521	0					
ANR	3666574	Identifier	FT_Outline_Translate		3666521	0					
ANR	3666575	ArgumentList	& slot -> outline		3666521	1					
ANR	3666576	Argument	& slot -> outline		3666521	0					
ANR	3666577	UnaryOperationExpression	& slot -> outline		3666521	0					
ANR	3666578	UnaryOperator	&		3666521	0					
ANR	3666579	PtrMemberAccess	slot -> outline		3666521	1					
ANR	3666580	Identifier	slot		3666521	0					
ANR	3666581	Identifier	outline		3666521	1					
ANR	3666582	Argument	delta -> x		3666521	1					
ANR	3666583	PtrMemberAccess	delta -> x		3666521	0					
ANR	3666584	Identifier	delta		3666521	0					
ANR	3666585	Identifier	x		3666521	1					
ANR	3666586	Argument	delta -> y		3666521	2					
ANR	3666587	PtrMemberAccess	delta -> y		3666521	0					
ANR	3666588	Identifier	delta		3666521	0					
ANR	3666589	Identifier	y		3666521	1					
ANR	3666590	Label	Exit :	74:2:2654:2658	3666521	4	True				
ANR	3666591	Identifier	Exit		3666521	0					
ANR	3666592	ReturnStatement	return error ;	75:4:2664:2676	3666521	5	True				
ANR	3666593	Identifier	error		3666521	0					
ANR	3666594	ReturnType	static FT_Error		3666521	1					
ANR	3666595	Identifier	ft_smooth_transform		3666521	2					
ANR	3666596	ParameterList	"FT_Renderer render , FT_GlyphSlot slot , const FT_Matrix * matrix , const FT_Vector * delta"		3666521	3					
ANR	3666597	Parameter	FT_Renderer render	54:23:2163:2186	3666521	0	True				
ANR	3666598	ParameterType	FT_Renderer		3666521	0					
ANR	3666599	Identifier	render		3666521	1					
ANR	3666600	Parameter	FT_GlyphSlot slot	55:23:2212:2233	3666521	1	True				
ANR	3666601	ParameterType	FT_GlyphSlot		3666521	0					
ANR	3666602	Identifier	slot		3666521	1					
ANR	3666603	Parameter	const FT_Matrix * matrix	56:23:2259:2282	3666521	2	True				
ANR	3666604	ParameterType	const FT_Matrix *		3666521	0					
ANR	3666605	Identifier	matrix		3666521	1					
ANR	3666606	Parameter	const FT_Vector * delta	57:23:2308:2330	3666521	3	True				
ANR	3666607	ParameterType	const FT_Vector *		3666521	0					
ANR	3666608	Identifier	delta		3666521	1					
ANR	3666609	CFGEntryNode	ENTRY		3666521		True				
ANR	3666610	CFGExitNode	EXIT		3666521		True				
ANR	3666611	Symbol	FT_Err_Ok		3666521						
ANR	3666612	Symbol	delta		3666521						
ANR	3666613	Symbol	* render		3666521						
ANR	3666614	Symbol	slot		3666521						
ANR	3666615	Symbol	Invalid_Argument		3666521						
ANR	3666616	Symbol	matrix		3666521						
ANR	3666617	Symbol	error		3666521						
ANR	3666618	Symbol	FT_THROW		3666521						
ANR	3666619	Symbol	* slot		3666521						
ANR	3666620	Symbol	slot -> format		3666521						
ANR	3666621	Symbol	& slot -> outline		3666521						
ANR	3666622	Symbol	delta -> x		3666521						
ANR	3666623	Symbol	delta -> y		3666521						
ANR	3666624	Symbol	render -> glyph_format		3666521						
ANR	3666625	Symbol	* delta		3666521						
ANR	3666626	Symbol	render		3666521						
ANR	3666627	Function	ft_smooth_get_cbox	80:2:2725:2993							
ANR	3666628	FunctionDef	"ft_smooth_get_cbox (FT_Renderer render , FT_GlyphSlot slot , FT_BBox * cbox)"		3666627	0					
ANR	3666629	CompoundStatement		84:2:2868:2993	3666627	0					
ANR	3666630	ExpressionStatement	FT_ZERO ( cbox )	85:4:2874:2889	3666627	0	True				
ANR	3666631	CallExpression	FT_ZERO ( cbox )		3666627	0					
ANR	3666632	Callee	FT_ZERO		3666627	0					
ANR	3666633	Identifier	FT_ZERO		3666627	0					
ANR	3666634	ArgumentList	cbox		3666627	1					
ANR	3666635	Argument	cbox		3666627	0					
ANR	3666636	Identifier	cbox		3666627	0					
ANR	3666637	IfStatement	if ( slot -> format == render -> glyph_format )		3666627	1					
ANR	3666638	Condition	slot -> format == render -> glyph_format	87:9:2901:2936	3666627	0	True				
ANR	3666639	EqualityExpression	slot -> format == render -> glyph_format		3666627	0		==			
ANR	3666640	PtrMemberAccess	slot -> format		3666627	0					
ANR	3666641	Identifier	slot		3666627	0					
ANR	3666642	Identifier	format		3666627	1					
ANR	3666643	PtrMemberAccess	render -> glyph_format		3666627	1					
ANR	3666644	Identifier	render		3666627	0					
ANR	3666645	Identifier	glyph_format		3666627	1					
ANR	3666646	ExpressionStatement	"FT_Outline_Get_CBox ( & slot -> outline , cbox )"	88:6:2946:2989	3666627	1	True				
ANR	3666647	CallExpression	"FT_Outline_Get_CBox ( & slot -> outline , cbox )"		3666627	0					
ANR	3666648	Callee	FT_Outline_Get_CBox		3666627	0					
ANR	3666649	Identifier	FT_Outline_Get_CBox		3666627	0					
ANR	3666650	ArgumentList	& slot -> outline		3666627	1					
ANR	3666651	Argument	& slot -> outline		3666627	0					
ANR	3666652	UnaryOperationExpression	& slot -> outline		3666627	0					
ANR	3666653	UnaryOperator	&		3666627	0					
ANR	3666654	PtrMemberAccess	slot -> outline		3666627	1					
ANR	3666655	Identifier	slot		3666627	0					
ANR	3666656	Identifier	outline		3666627	1					
ANR	3666657	Argument	cbox		3666627	1					
ANR	3666658	Identifier	cbox		3666627	0					
ANR	3666659	ReturnType	static void		3666627	1					
ANR	3666660	Identifier	ft_smooth_get_cbox		3666627	2					
ANR	3666661	ParameterList	"FT_Renderer render , FT_GlyphSlot slot , FT_BBox * cbox"		3666627	3					
ANR	3666662	Parameter	FT_Renderer render	81:22:2759:2778	3666627	0	True				
ANR	3666663	ParameterType	FT_Renderer		3666627	0					
ANR	3666664	Identifier	render		3666627	1					
ANR	3666665	Parameter	FT_GlyphSlot slot	82:22:2803:2820	3666627	1	True				
ANR	3666666	ParameterType	FT_GlyphSlot		3666627	0					
ANR	3666667	Identifier	slot		3666627	1					
ANR	3666668	Parameter	FT_BBox * cbox	83:22:2845:2862	3666627	2	True				
ANR	3666669	ParameterType	FT_BBox *		3666627	0					
ANR	3666670	Identifier	cbox		3666627	1					
ANR	3666671	CFGEntryNode	ENTRY		3666627		True				
ANR	3666672	CFGExitNode	EXIT		3666627		True				
ANR	3666673	Symbol	* slot		3666627						
ANR	3666674	Symbol	slot -> format		3666627						
ANR	3666675	Symbol	& slot -> outline		3666627						
ANR	3666676	Symbol	render -> glyph_format		3666627						
ANR	3666677	Symbol	cbox		3666627						
ANR	3666678	Symbol	* render		3666627						
ANR	3666679	Symbol	slot		3666627						
ANR	3666680	Symbol	render		3666627						
ANR	3666681	Function	ft_smooth_render_generic	93:2:3050:9650							
ANR	3666682	FunctionDef	"ft_smooth_render_generic (FT_Renderer render , FT_GlyphSlot slot , FT_Render_Mode mode , const FT_Vector * origin , FT_Render_Mode required_mode)"		3666681	0					
ANR	3666683	CompoundStatement		99:2:3342:9650	3666681	0					
ANR	3666684	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	100:4:3348:3380	3666681	0	True				
ANR	3666685	IdentifierDecl	error = FT_Err_Ok		3666681	0					
ANR	3666686	IdentifierDeclType	FT_Error		3666681	0					
ANR	3666687	Identifier	error		3666681	1					
ANR	3666688	AssignmentExpression	error = FT_Err_Ok		3666681	2		=			
ANR	3666689	Identifier	FT_Err_Ok		3666681	0					
ANR	3666690	Identifier	FT_Err_Ok		3666681	1					
ANR	3666691	IdentifierDeclStatement	FT_Outline * outline = & slot -> outline ;	101:4:3386:3423	3666681	1	True				
ANR	3666692	IdentifierDecl	* outline = & slot -> outline		3666681	0					
ANR	3666693	IdentifierDeclType	FT_Outline *		3666681	0					
ANR	3666694	Identifier	outline		3666681	1					
ANR	3666695	AssignmentExpression	* outline = & slot -> outline		3666681	2		=			
ANR	3666696	Identifier	outline		3666681	0					
ANR	3666697	UnaryOperationExpression	& slot -> outline		3666681	1					
ANR	3666698	UnaryOperator	&		3666681	0					
ANR	3666699	PtrMemberAccess	slot -> outline		3666681	1					
ANR	3666700	Identifier	slot		3666681	0					
ANR	3666701	Identifier	outline		3666681	1					
ANR	3666702	IdentifierDeclStatement	FT_Bitmap * bitmap = & slot -> bitmap ;	102:4:3429:3465	3666681	2	True				
ANR	3666703	IdentifierDecl	* bitmap = & slot -> bitmap		3666681	0					
ANR	3666704	IdentifierDeclType	FT_Bitmap *		3666681	0					
ANR	3666705	Identifier	bitmap		3666681	1					
ANR	3666706	AssignmentExpression	* bitmap = & slot -> bitmap		3666681	2		=			
ANR	3666707	Identifier	bitmap		3666681	0					
ANR	3666708	UnaryOperationExpression	& slot -> bitmap		3666681	1					
ANR	3666709	UnaryOperator	&		3666681	0					
ANR	3666710	PtrMemberAccess	slot -> bitmap		3666681	1					
ANR	3666711	Identifier	slot		3666681	0					
ANR	3666712	Identifier	bitmap		3666681	1					
ANR	3666713	IdentifierDeclStatement	FT_Memory memory = render -> root . memory ;	103:4:3471:3513	3666681	3	True				
ANR	3666714	IdentifierDecl	memory = render -> root . memory		3666681	0					
ANR	3666715	IdentifierDeclType	FT_Memory		3666681	0					
ANR	3666716	Identifier	memory		3666681	1					
ANR	3666717	AssignmentExpression	memory = render -> root . memory		3666681	2		=			
ANR	3666718	Identifier	memory		3666681	0					
ANR	3666719	MemberAccess	render -> root . memory		3666681	1					
ANR	3666720	PtrMemberAccess	render -> root		3666681	0					
ANR	3666721	Identifier	render		3666681	0					
ANR	3666722	Identifier	root		3666681	1					
ANR	3666723	Identifier	memory		3666681	1					
ANR	3666724	IdentifierDeclStatement	FT_Pos x_shift = 0 ;	104:4:3519:3543	3666681	4	True				
ANR	3666725	IdentifierDecl	x_shift = 0		3666681	0					
ANR	3666726	IdentifierDeclType	FT_Pos		3666681	0					
ANR	3666727	Identifier	x_shift		3666681	1					
ANR	3666728	AssignmentExpression	x_shift = 0		3666681	2		=			
ANR	3666729	Identifier	x_shift		3666681	0					
ANR	3666730	PrimaryExpression	0		3666681	1					
ANR	3666731	IdentifierDeclStatement	FT_Pos y_shift = 0 ;	105:4:3549:3573	3666681	5	True				
ANR	3666732	IdentifierDecl	y_shift = 0		3666681	0					
ANR	3666733	IdentifierDeclType	FT_Pos		3666681	0					
ANR	3666734	Identifier	y_shift		3666681	1					
ANR	3666735	AssignmentExpression	y_shift = 0		3666681	2		=			
ANR	3666736	Identifier	y_shift		3666681	0					
ANR	3666737	PrimaryExpression	0		3666681	1					
ANR	3666738	IdentifierDeclStatement	FT_Int hmul = ( mode == FT_RENDER_MODE_LCD ) ;	106:4:3579:3632	3666681	6	True				
ANR	3666739	IdentifierDecl	hmul = ( mode == FT_RENDER_MODE_LCD )		3666681	0					
ANR	3666740	IdentifierDeclType	FT_Int		3666681	0					
ANR	3666741	Identifier	hmul		3666681	1					
ANR	3666742	AssignmentExpression	hmul = ( mode == FT_RENDER_MODE_LCD )		3666681	2		=			
ANR	3666743	Identifier	hmul		3666681	0					
ANR	3666744	EqualityExpression	mode == FT_RENDER_MODE_LCD		3666681	1		==			
ANR	3666745	Identifier	mode		3666681	0					
ANR	3666746	Identifier	FT_RENDER_MODE_LCD		3666681	1					
ANR	3666747	IdentifierDeclStatement	FT_Int vmul = ( mode == FT_RENDER_MODE_LCD_V ) ;	107:4:3638:3693	3666681	7	True				
ANR	3666748	IdentifierDecl	vmul = ( mode == FT_RENDER_MODE_LCD_V )		3666681	0					
ANR	3666749	IdentifierDeclType	FT_Int		3666681	0					
ANR	3666750	Identifier	vmul		3666681	1					
ANR	3666751	AssignmentExpression	vmul = ( mode == FT_RENDER_MODE_LCD_V )		3666681	2		=			
ANR	3666752	Identifier	vmul		3666681	0					
ANR	3666753	EqualityExpression	mode == FT_RENDER_MODE_LCD_V		3666681	1		==			
ANR	3666754	Identifier	mode		3666681	0					
ANR	3666755	Identifier	FT_RENDER_MODE_LCD_V		3666681	1					
ANR	3666756	IdentifierDeclStatement	FT_Raster_Params params ;	109:4:3700:3724	3666681	8	True				
ANR	3666757	IdentifierDecl	params		3666681	0					
ANR	3666758	IdentifierDeclType	FT_Raster_Params		3666681	0					
ANR	3666759	Identifier	params		3666681	1					
ANR	3666760	IfStatement	if ( slot -> format != render -> glyph_format )		3666681	9					
ANR	3666761	Condition	slot -> format != render -> glyph_format	113:9:3772:3807	3666681	0	True				
ANR	3666762	EqualityExpression	slot -> format != render -> glyph_format		3666681	0		!=			
ANR	3666763	PtrMemberAccess	slot -> format		3666681	0					
ANR	3666764	Identifier	slot		3666681	0					
ANR	3666765	Identifier	format		3666681	1					
ANR	3666766	PtrMemberAccess	render -> glyph_format		3666681	1					
ANR	3666767	Identifier	render		3666681	0					
ANR	3666768	Identifier	glyph_format		3666681	1					
ANR	3666769	CompoundStatement		16:4:472:472	3666681	1					
ANR	3666770	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	115:6:3823:3859	3666681	0	True				
ANR	3666771	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3666681	0		=			
ANR	3666772	Identifier	error		3666681	0					
ANR	3666773	CallExpression	FT_THROW ( Invalid_Argument )		3666681	1					
ANR	3666774	Callee	FT_THROW		3666681	0					
ANR	3666775	Identifier	FT_THROW		3666681	0					
ANR	3666776	ArgumentList	Invalid_Argument		3666681	1					
ANR	3666777	Argument	Invalid_Argument		3666681	0					
ANR	3666778	Identifier	Invalid_Argument		3666681	0					
ANR	3666779	GotoStatement	goto Exit ;	116:6:3867:3876	3666681	1	True				
ANR	3666780	Identifier	Exit		3666681	0					
ANR	3666781	IfStatement	if ( mode != required_mode )		3666681	10					
ANR	3666782	Condition	mode != required_mode	120:9:3915:3935	3666681	0	True				
ANR	3666783	EqualityExpression	mode != required_mode		3666681	0		!=			
ANR	3666784	Identifier	mode		3666681	0					
ANR	3666785	Identifier	required_mode		3666681	1					
ANR	3666786	CompoundStatement		23:4:600:600	3666681	1					
ANR	3666787	ExpressionStatement	error = FT_THROW ( Cannot_Render_Glyph )	122:6:3951:3990	3666681	0	True				
ANR	3666788	AssignmentExpression	error = FT_THROW ( Cannot_Render_Glyph )		3666681	0		=			
ANR	3666789	Identifier	error		3666681	0					
ANR	3666790	CallExpression	FT_THROW ( Cannot_Render_Glyph )		3666681	1					
ANR	3666791	Callee	FT_THROW		3666681	0					
ANR	3666792	Identifier	FT_THROW		3666681	0					
ANR	3666793	ArgumentList	Cannot_Render_Glyph		3666681	1					
ANR	3666794	Argument	Cannot_Render_Glyph		3666681	0					
ANR	3666795	Identifier	Cannot_Render_Glyph		3666681	0					
ANR	3666796	GotoStatement	goto Exit ;	123:6:3998:4007	3666681	1	True				
ANR	3666797	Identifier	Exit		3666681	0					
ANR	3666798	IfStatement	if ( slot -> internal -> flags & FT_GLYPH_OWN_BITMAP )		3666681	11					
ANR	3666799	Condition	slot -> internal -> flags & FT_GLYPH_OWN_BITMAP	127:9:4061:4103	3666681	0	True				
ANR	3666800	BitAndExpression	slot -> internal -> flags & FT_GLYPH_OWN_BITMAP		3666681	0		&			
ANR	3666801	PtrMemberAccess	slot -> internal -> flags		3666681	0					
ANR	3666802	PtrMemberAccess	slot -> internal		3666681	0					
ANR	3666803	Identifier	slot		3666681	0					
ANR	3666804	Identifier	internal		3666681	1					
ANR	3666805	Identifier	flags		3666681	1					
ANR	3666806	Identifier	FT_GLYPH_OWN_BITMAP		3666681	1					
ANR	3666807	CompoundStatement		30:4:768:768	3666681	1					
ANR	3666808	ExpressionStatement	FT_FREE ( bitmap -> buffer )	129:6:4119:4144	3666681	0	True				
ANR	3666809	CallExpression	FT_FREE ( bitmap -> buffer )		3666681	0					
ANR	3666810	Callee	FT_FREE		3666681	0					
ANR	3666811	Identifier	FT_FREE		3666681	0					
ANR	3666812	ArgumentList	bitmap -> buffer		3666681	1					
ANR	3666813	Argument	bitmap -> buffer		3666681	0					
ANR	3666814	PtrMemberAccess	bitmap -> buffer		3666681	0					
ANR	3666815	Identifier	bitmap		3666681	0					
ANR	3666816	Identifier	buffer		3666681	1					
ANR	3666817	ExpressionStatement	slot -> internal -> flags &= ~FT_GLYPH_OWN_BITMAP	130:6:4152:4197	3666681	1	True				
ANR	3666818	AssignmentExpression	slot -> internal -> flags &= ~FT_GLYPH_OWN_BITMAP		3666681	0		&=			
ANR	3666819	PtrMemberAccess	slot -> internal -> flags		3666681	0					
ANR	3666820	PtrMemberAccess	slot -> internal		3666681	0					
ANR	3666821	Identifier	slot		3666681	0					
ANR	3666822	Identifier	internal		3666681	1					
ANR	3666823	Identifier	flags		3666681	1					
ANR	3666824	Identifier	~FT_GLYPH_OWN_BITMAP		3666681	1					
ANR	3666825	ExpressionStatement	"ft_glyphslot_preset_bitmap ( slot , mode , origin )"	133:4:4210:4258	3666681	12	True				
ANR	3666826	CallExpression	"ft_glyphslot_preset_bitmap ( slot , mode , origin )"		3666681	0					
ANR	3666827	Callee	ft_glyphslot_preset_bitmap		3666681	0					
ANR	3666828	Identifier	ft_glyphslot_preset_bitmap		3666681	0					
ANR	3666829	ArgumentList	slot		3666681	1					
ANR	3666830	Argument	slot		3666681	0					
ANR	3666831	Identifier	slot		3666681	0					
ANR	3666832	Argument	mode		3666681	1					
ANR	3666833	Identifier	mode		3666681	0					
ANR	3666834	Argument	origin		3666681	2					
ANR	3666835	Identifier	origin		3666681	0					
ANR	3666836	IfStatement	"if ( FT_ALLOC_MULT ( bitmap -> buffer , bitmap -> rows , bitmap -> pitch ) )"		3666681	13					
ANR	3666837	Condition	"FT_ALLOC_MULT ( bitmap -> buffer , bitmap -> rows , bitmap -> pitch )"	136:9:4297:4356	3666681	0	True				
ANR	3666838	CallExpression	"FT_ALLOC_MULT ( bitmap -> buffer , bitmap -> rows , bitmap -> pitch )"		3666681	0					
ANR	3666839	Callee	FT_ALLOC_MULT		3666681	0					
ANR	3666840	Identifier	FT_ALLOC_MULT		3666681	0					
ANR	3666841	ArgumentList	bitmap -> buffer		3666681	1					
ANR	3666842	Argument	bitmap -> buffer		3666681	0					
ANR	3666843	PtrMemberAccess	bitmap -> buffer		3666681	0					
ANR	3666844	Identifier	bitmap		3666681	0					
ANR	3666845	Identifier	buffer		3666681	1					
ANR	3666846	Argument	bitmap -> rows		3666681	1					
ANR	3666847	PtrMemberAccess	bitmap -> rows		3666681	0					
ANR	3666848	Identifier	bitmap		3666681	0					
ANR	3666849	Identifier	rows		3666681	1					
ANR	3666850	Argument	bitmap -> pitch		3666681	2					
ANR	3666851	PtrMemberAccess	bitmap -> pitch		3666681	0					
ANR	3666852	Identifier	bitmap		3666681	0					
ANR	3666853	Identifier	pitch		3666681	1					
ANR	3666854	GotoStatement	goto Exit ;	137:6:4366:4375	3666681	1	True				
ANR	3666855	Identifier	Exit		3666681	0					
ANR	3666856	ExpressionStatement	slot -> internal -> flags |= FT_GLYPH_OWN_BITMAP	139:4:4382:4426	3666681	14	True				
ANR	3666857	AssignmentExpression	slot -> internal -> flags |= FT_GLYPH_OWN_BITMAP		3666681	0		|=			
ANR	3666858	PtrMemberAccess	slot -> internal -> flags		3666681	0					
ANR	3666859	PtrMemberAccess	slot -> internal		3666681	0					
ANR	3666860	Identifier	slot		3666681	0					
ANR	3666861	Identifier	internal		3666681	1					
ANR	3666862	Identifier	flags		3666681	1					
ANR	3666863	Identifier	FT_GLYPH_OWN_BITMAP		3666681	1					
ANR	3666864	ExpressionStatement	x_shift = 64 * - slot -> bitmap_left	141:4:4433:4466	3666681	15	True				
ANR	3666865	AssignmentExpression	x_shift = 64 * - slot -> bitmap_left		3666681	0		=			
ANR	3666866	Identifier	x_shift		3666681	0					
ANR	3666867	MultiplicativeExpression	64 * - slot -> bitmap_left		3666681	1		*			
ANR	3666868	PrimaryExpression	64		3666681	0					
ANR	3666869	UnaryOperationExpression	- slot -> bitmap_left		3666681	1					
ANR	3666870	UnaryOperator	-		3666681	0					
ANR	3666871	PtrMemberAccess	slot -> bitmap_left		3666681	1					
ANR	3666872	Identifier	slot		3666681	0					
ANR	3666873	Identifier	bitmap_left		3666681	1					
ANR	3666874	ExpressionStatement	y_shift = 64 * - slot -> bitmap_top	142:4:4472:4504	3666681	16	True				
ANR	3666875	AssignmentExpression	y_shift = 64 * - slot -> bitmap_top		3666681	0		=			
ANR	3666876	Identifier	y_shift		3666681	0					
ANR	3666877	MultiplicativeExpression	64 * - slot -> bitmap_top		3666681	1		*			
ANR	3666878	PrimaryExpression	64		3666681	0					
ANR	3666879	UnaryOperationExpression	- slot -> bitmap_top		3666681	1					
ANR	3666880	UnaryOperator	-		3666681	0					
ANR	3666881	PtrMemberAccess	slot -> bitmap_top		3666681	1					
ANR	3666882	Identifier	slot		3666681	0					
ANR	3666883	Identifier	bitmap_top		3666681	1					
ANR	3666884	IfStatement	if ( bitmap -> pixel_mode == FT_PIXEL_MODE_LCD_V )		3666681	17					
ANR	3666885	Condition	bitmap -> pixel_mode == FT_PIXEL_MODE_LCD_V	143:9:4515:4555	3666681	0	True				
ANR	3666886	EqualityExpression	bitmap -> pixel_mode == FT_PIXEL_MODE_LCD_V		3666681	0		==			
ANR	3666887	PtrMemberAccess	bitmap -> pixel_mode		3666681	0					
ANR	3666888	Identifier	bitmap		3666681	0					
ANR	3666889	Identifier	pixel_mode		3666681	1					
ANR	3666890	Identifier	FT_PIXEL_MODE_LCD_V		3666681	1					
ANR	3666891	ExpressionStatement	y_shift += 64 * ( FT_Int ) bitmap -> rows / 3	144:6:4565:4605	3666681	1	True				
ANR	3666892	AssignmentExpression	y_shift += 64 * ( FT_Int ) bitmap -> rows / 3		3666681	0		+=			
ANR	3666893	Identifier	y_shift		3666681	0					
ANR	3666894	MultiplicativeExpression	64 * ( FT_Int ) bitmap -> rows / 3		3666681	1		*			
ANR	3666895	PrimaryExpression	64		3666681	0					
ANR	3666896	MultiplicativeExpression	( FT_Int ) bitmap -> rows / 3		3666681	1		/			
ANR	3666897	CastExpression	( FT_Int ) bitmap -> rows		3666681	0					
ANR	3666898	CastTarget	FT_Int		3666681	0					
ANR	3666899	PtrMemberAccess	bitmap -> rows		3666681	1					
ANR	3666900	Identifier	bitmap		3666681	0					
ANR	3666901	Identifier	rows		3666681	1					
ANR	3666902	PrimaryExpression	3		3666681	1					
ANR	3666903	ElseStatement	else		3666681	0					
ANR	3666904	ExpressionStatement	y_shift += 64 * ( FT_Int ) bitmap -> rows	146:6:4622:4658	3666681	0	True				
ANR	3666905	AssignmentExpression	y_shift += 64 * ( FT_Int ) bitmap -> rows		3666681	0		+=			
ANR	3666906	Identifier	y_shift		3666681	0					
ANR	3666907	MultiplicativeExpression	64 * ( FT_Int ) bitmap -> rows		3666681	1		*			
ANR	3666908	PrimaryExpression	64		3666681	0					
ANR	3666909	CastExpression	( FT_Int ) bitmap -> rows		3666681	1					
ANR	3666910	CastTarget	FT_Int		3666681	0					
ANR	3666911	PtrMemberAccess	bitmap -> rows		3666681	1					
ANR	3666912	Identifier	bitmap		3666681	0					
ANR	3666913	Identifier	rows		3666681	1					
ANR	3666914	IfStatement	if ( origin )		3666681	18					
ANR	3666915	Condition	origin	148:9:4670:4675	3666681	0	True				
ANR	3666916	Identifier	origin		3666681	0					
ANR	3666917	CompoundStatement		51:4:1340:1340	3666681	1					
ANR	3666918	ExpressionStatement	x_shift += origin -> x	150:6:4691:4711	3666681	0	True				
ANR	3666919	AssignmentExpression	x_shift += origin -> x		3666681	0		+=			
ANR	3666920	Identifier	x_shift		3666681	0					
ANR	3666921	PtrMemberAccess	origin -> x		3666681	1					
ANR	3666922	Identifier	origin		3666681	0					
ANR	3666923	Identifier	x		3666681	1					
ANR	3666924	ExpressionStatement	y_shift += origin -> y	151:6:4719:4739	3666681	1	True				
ANR	3666925	AssignmentExpression	y_shift += origin -> y		3666681	0		+=			
ANR	3666926	Identifier	y_shift		3666681	0					
ANR	3666927	PtrMemberAccess	origin -> y		3666681	1					
ANR	3666928	Identifier	origin		3666681	0					
ANR	3666929	Identifier	y		3666681	1					
ANR	3666930	IfStatement	if ( x_shift || y_shift )		3666681	19					
ANR	3666931	Condition	x_shift || y_shift	155:9:4814:4831	3666681	0	True				
ANR	3666932	OrExpression	x_shift || y_shift		3666681	0		||			
ANR	3666933	Identifier	x_shift		3666681	0					
ANR	3666934	Identifier	y_shift		3666681	1					
ANR	3666935	ExpressionStatement	"FT_Outline_Translate ( outline , x_shift , y_shift )"	156:6:4841:4890	3666681	1	True				
ANR	3666936	CallExpression	"FT_Outline_Translate ( outline , x_shift , y_shift )"		3666681	0					
ANR	3666937	Callee	FT_Outline_Translate		3666681	0					
ANR	3666938	Identifier	FT_Outline_Translate		3666681	0					
ANR	3666939	ArgumentList	outline		3666681	1					
ANR	3666940	Argument	outline		3666681	0					
ANR	3666941	Identifier	outline		3666681	0					
ANR	3666942	Argument	x_shift		3666681	1					
ANR	3666943	Identifier	x_shift		3666681	0					
ANR	3666944	Argument	y_shift		3666681	2					
ANR	3666945	Identifier	y_shift		3666681	0					
ANR	3666946	ExpressionStatement	params . target = bitmap	159:4:4925:4947	3666681	20	True				
ANR	3666947	AssignmentExpression	params . target = bitmap		3666681	0		=			
ANR	3666948	MemberAccess	params . target		3666681	0					
ANR	3666949	Identifier	params		3666681	0					
ANR	3666950	Identifier	target		3666681	1					
ANR	3666951	Identifier	bitmap		3666681	1					
ANR	3666952	ExpressionStatement	params . source = outline	160:4:4953:4976	3666681	21	True				
ANR	3666953	AssignmentExpression	params . source = outline		3666681	0		=			
ANR	3666954	MemberAccess	params . source		3666681	0					
ANR	3666955	Identifier	params		3666681	0					
ANR	3666956	Identifier	source		3666681	1					
ANR	3666957	Identifier	outline		3666681	1					
ANR	3666958	ExpressionStatement	params . flags = FT_RASTER_FLAG_AA	161:4:4982:5015	3666681	22	True				
ANR	3666959	AssignmentExpression	params . flags = FT_RASTER_FLAG_AA		3666681	0		=			
ANR	3666960	MemberAccess	params . flags		3666681	0					
ANR	3666961	Identifier	params		3666681	0					
ANR	3666962	Identifier	flags		3666681	1					
ANR	3666963	Identifier	FT_RASTER_FLAG_AA		3666681	1					
ANR	3666964	CompoundStatement		71:6:1874:1889	3666681	23					
ANR	3666965	IdentifierDeclStatement	FT_Vector * points = outline -> points ;	167:6:5110:5150	3666681	0	True				
ANR	3666966	IdentifierDecl	* points = outline -> points		3666681	0					
ANR	3666967	IdentifierDeclType	FT_Vector *		3666681	0					
ANR	3666968	Identifier	points		3666681	1					
ANR	3666969	AssignmentExpression	* points = outline -> points		3666681	2		=			
ANR	3666970	Identifier	points		3666681	0					
ANR	3666971	PtrMemberAccess	outline -> points		3666681	1					
ANR	3666972	Identifier	outline		3666681	0					
ANR	3666973	Identifier	points		3666681	1					
ANR	3666974	IdentifierDeclStatement	FT_Vector * points_end = points + outline -> n_points ;	168:6:5158:5209	3666681	1	True				
ANR	3666975	IdentifierDecl	* points_end = points + outline -> n_points		3666681	0					
ANR	3666976	IdentifierDeclType	FT_Vector *		3666681	0					
ANR	3666977	Identifier	points_end		3666681	1					
ANR	3666978	AssignmentExpression	* points_end = points + outline -> n_points		3666681	2		=			
ANR	3666979	Identifier	points_end		3666681	0					
ANR	3666980	AdditiveExpression	points + outline -> n_points		3666681	1		+			
ANR	3666981	Identifier	points		3666681	0					
ANR	3666982	PtrMemberAccess	outline -> n_points		3666681	1					
ANR	3666983	Identifier	outline		3666681	0					
ANR	3666984	Identifier	n_points		3666681	1					
ANR	3666985	IdentifierDeclStatement	FT_Vector * vec ;	169:6:5217:5232	3666681	2	True				
ANR	3666986	IdentifierDecl	* vec		3666681	0					
ANR	3666987	IdentifierDeclType	FT_Vector *		3666681	0					
ANR	3666988	Identifier	vec		3666681	1					
ANR	3666989	IfStatement	if ( hmul )		3666681	3					
ANR	3666990	Condition	hmul	172:11:5247:5250	3666681	0	True				
ANR	3666991	Identifier	hmul		3666681	0					
ANR	3666992	ForStatement	for ( vec = points ; vec < points_end ; vec ++ )		3666681	1					
ANR	3666993	ForInit	vec = points ;	173:14:5268:5280	3666681	0	True				
ANR	3666994	AssignmentExpression	vec = points		3666681	0		=			
ANR	3666995	Identifier	vec		3666681	0					
ANR	3666996	Identifier	points		3666681	1					
ANR	3666997	Condition	vec < points_end	173:28:5282:5297	3666681	1	True				
ANR	3666998	RelationalExpression	vec < points_end		3666681	0		<			
ANR	3666999	Identifier	vec		3666681	0					
ANR	3667000	Identifier	points_end		3666681	1					
ANR	3667001	PostIncDecOperationExpression	vec ++	173:46:5300:5304	3666681	2	True				
ANR	3667002	Identifier	vec		3666681	0					
ANR	3667003	IncDec	++		3666681	1					
ANR	3667004	ExpressionStatement	vec -> x *= 3	174:10:5318:5329	3666681	3	True				
ANR	3667005	AssignmentExpression	vec -> x *= 3		3666681	0		*=			
ANR	3667006	PtrMemberAccess	vec -> x		3666681	0					
ANR	3667007	Identifier	vec		3666681	0					
ANR	3667008	Identifier	x		3666681	1					
ANR	3667009	PrimaryExpression	3		3666681	1					
ANR	3667010	IfStatement	if ( vmul )		3666681	4					
ANR	3667011	Condition	vmul	176:11:5343:5346	3666681	0	True				
ANR	3667012	Identifier	vmul		3666681	0					
ANR	3667013	ForStatement	for ( vec = points ; vec < points_end ; vec ++ )		3666681	1					
ANR	3667014	ForInit	vec = points ;	177:14:5364:5376	3666681	0	True				
ANR	3667015	AssignmentExpression	vec = points		3666681	0		=			
ANR	3667016	Identifier	vec		3666681	0					
ANR	3667017	Identifier	points		3666681	1					
ANR	3667018	Condition	vec < points_end	177:28:5378:5393	3666681	1	True				
ANR	3667019	RelationalExpression	vec < points_end		3666681	0		<			
ANR	3667020	Identifier	vec		3666681	0					
ANR	3667021	Identifier	points_end		3666681	1					
ANR	3667022	PostIncDecOperationExpression	vec ++	177:46:5396:5400	3666681	2	True				
ANR	3667023	Identifier	vec		3666681	0					
ANR	3667024	IncDec	++		3666681	1					
ANR	3667025	ExpressionStatement	vec -> y *= 3	178:10:5414:5425	3666681	3	True				
ANR	3667026	AssignmentExpression	vec -> y *= 3		3666681	0		*=			
ANR	3667027	PtrMemberAccess	vec -> y		3666681	0					
ANR	3667028	Identifier	vec		3666681	0					
ANR	3667029	Identifier	y		3666681	1					
ANR	3667030	PrimaryExpression	3		3666681	1					
ANR	3667031	ExpressionStatement	"error = render -> raster_render ( render -> raster , & params )"	182:4:5479:5535	3666681	24	True				
ANR	3667032	AssignmentExpression	"error = render -> raster_render ( render -> raster , & params )"		3666681	0		=			
ANR	3667033	Identifier	error		3666681	0					
ANR	3667034	CallExpression	"render -> raster_render ( render -> raster , & params )"		3666681	1					
ANR	3667035	Callee	render -> raster_render		3666681	0					
ANR	3667036	PtrMemberAccess	render -> raster_render		3666681	0					
ANR	3667037	Identifier	render		3666681	0					
ANR	3667038	Identifier	raster_render		3666681	1					
ANR	3667039	ArgumentList	render -> raster		3666681	1					
ANR	3667040	Argument	render -> raster		3666681	0					
ANR	3667041	PtrMemberAccess	render -> raster		3666681	0					
ANR	3667042	Identifier	render		3666681	0					
ANR	3667043	Identifier	raster		3666681	1					
ANR	3667044	Argument	& params		3666681	1					
ANR	3667045	UnaryOperationExpression	& params		3666681	0					
ANR	3667046	UnaryOperator	&		3666681	0					
ANR	3667047	Identifier	params		3666681	1					
ANR	3667048	CompoundStatement		90:6:2350:2365	3666681	25					
ANR	3667049	IdentifierDeclStatement	FT_Vector * points = outline -> points ;	186:6:5586:5626	3666681	0	True				
ANR	3667050	IdentifierDecl	* points = outline -> points		3666681	0					
ANR	3667051	IdentifierDeclType	FT_Vector *		3666681	0					
ANR	3667052	Identifier	points		3666681	1					
ANR	3667053	AssignmentExpression	* points = outline -> points		3666681	2		=			
ANR	3667054	Identifier	points		3666681	0					
ANR	3667055	PtrMemberAccess	outline -> points		3666681	1					
ANR	3667056	Identifier	outline		3666681	0					
ANR	3667057	Identifier	points		3666681	1					
ANR	3667058	IdentifierDeclStatement	FT_Vector * points_end = points + outline -> n_points ;	187:6:5634:5685	3666681	1	True				
ANR	3667059	IdentifierDecl	* points_end = points + outline -> n_points		3666681	0					
ANR	3667060	IdentifierDeclType	FT_Vector *		3666681	0					
ANR	3667061	Identifier	points_end		3666681	1					
ANR	3667062	AssignmentExpression	* points_end = points + outline -> n_points		3666681	2		=			
ANR	3667063	Identifier	points_end		3666681	0					
ANR	3667064	AdditiveExpression	points + outline -> n_points		3666681	1		+			
ANR	3667065	Identifier	points		3666681	0					
ANR	3667066	PtrMemberAccess	outline -> n_points		3666681	1					
ANR	3667067	Identifier	outline		3666681	0					
ANR	3667068	Identifier	n_points		3666681	1					
ANR	3667069	IdentifierDeclStatement	FT_Vector * vec ;	188:6:5693:5708	3666681	2	True				
ANR	3667070	IdentifierDecl	* vec		3666681	0					
ANR	3667071	IdentifierDeclType	FT_Vector *		3666681	0					
ANR	3667072	Identifier	vec		3666681	1					
ANR	3667073	IfStatement	if ( hmul )		3666681	3					
ANR	3667074	Condition	hmul	191:11:5723:5726	3666681	0	True				
ANR	3667075	Identifier	hmul		3666681	0					
ANR	3667076	ForStatement	for ( vec = points ; vec < points_end ; vec ++ )		3666681	1					
ANR	3667077	ForInit	vec = points ;	192:14:5744:5756	3666681	0	True				
ANR	3667078	AssignmentExpression	vec = points		3666681	0		=			
ANR	3667079	Identifier	vec		3666681	0					
ANR	3667080	Identifier	points		3666681	1					
ANR	3667081	Condition	vec < points_end	192:28:5758:5773	3666681	1	True				
ANR	3667082	RelationalExpression	vec < points_end		3666681	0		<			
ANR	3667083	Identifier	vec		3666681	0					
ANR	3667084	Identifier	points_end		3666681	1					
ANR	3667085	PostIncDecOperationExpression	vec ++	192:46:5776:5780	3666681	2	True				
ANR	3667086	Identifier	vec		3666681	0					
ANR	3667087	IncDec	++		3666681	1					
ANR	3667088	ExpressionStatement	vec -> x /= 3	193:10:5794:5805	3666681	3	True				
ANR	3667089	AssignmentExpression	vec -> x /= 3		3666681	0		/=			
ANR	3667090	PtrMemberAccess	vec -> x		3666681	0					
ANR	3667091	Identifier	vec		3666681	0					
ANR	3667092	Identifier	x		3666681	1					
ANR	3667093	PrimaryExpression	3		3666681	1					
ANR	3667094	IfStatement	if ( vmul )		3666681	4					
ANR	3667095	Condition	vmul	195:11:5819:5822	3666681	0	True				
ANR	3667096	Identifier	vmul		3666681	0					
ANR	3667097	ForStatement	for ( vec = points ; vec < points_end ; vec ++ )		3666681	1					
ANR	3667098	ForInit	vec = points ;	196:14:5840:5852	3666681	0	True				
ANR	3667099	AssignmentExpression	vec = points		3666681	0		=			
ANR	3667100	Identifier	vec		3666681	0					
ANR	3667101	Identifier	points		3666681	1					
ANR	3667102	Condition	vec < points_end	196:28:5854:5869	3666681	1	True				
ANR	3667103	RelationalExpression	vec < points_end		3666681	0		<			
ANR	3667104	Identifier	vec		3666681	0					
ANR	3667105	Identifier	points_end		3666681	1					
ANR	3667106	PostIncDecOperationExpression	vec ++	196:46:5872:5876	3666681	2	True				
ANR	3667107	Identifier	vec		3666681	0					
ANR	3667108	IncDec	++		3666681	1					
ANR	3667109	ExpressionStatement	vec -> y /= 3	197:10:5890:5901	3666681	3	True				
ANR	3667110	AssignmentExpression	vec -> y /= 3		3666681	0		/=			
ANR	3667111	PtrMemberAccess	vec -> y		3666681	0					
ANR	3667112	Identifier	vec		3666681	0					
ANR	3667113	Identifier	y		3666681	1					
ANR	3667114	PrimaryExpression	3		3666681	1					
ANR	3667115	IfStatement	if ( error )		3666681	26					
ANR	3667116	Condition	error	200:9:5919:5923	3666681	0	True				
ANR	3667117	Identifier	error		3666681	0					
ANR	3667118	GotoStatement	goto Exit ;	201:6:5933:5942	3666681	1	True				
ANR	3667119	Identifier	Exit		3666681	0					
ANR	3667120	IfStatement	if ( hmul || vmul )		3666681	27					
ANR	3667121	Condition	hmul || vmul	204:9:5988:5999	3666681	0	True				
ANR	3667122	OrExpression	hmul || vmul		3666681	0		||			
ANR	3667123	Identifier	hmul		3666681	0					
ANR	3667124	Identifier	vmul		3666681	1					
ANR	3667125	CompoundStatement		109:6:2716:2756	3666681	1					
ANR	3667126	IdentifierDeclStatement	FT_Byte * lcd_weights ;	206:6:6015:6051	3666681	0	True				
ANR	3667127	IdentifierDecl	* lcd_weights		3666681	0					
ANR	3667128	IdentifierDeclType	FT_Byte *		3666681	0					
ANR	3667129	Identifier	lcd_weights		3666681	1					
ANR	3667130	IdentifierDeclStatement	FT_Bitmap_LcdFilterFunc lcd_filter_func ;	207:6:6059:6099	3666681	1	True				
ANR	3667131	IdentifierDecl	lcd_filter_func		3666681	0					
ANR	3667132	IdentifierDeclType	FT_Bitmap_LcdFilterFunc		3666681	0					
ANR	3667133	Identifier	lcd_filter_func		3666681	1					
ANR	3667134	IfStatement	if ( slot -> face && slot -> face -> internal -> lcd_filter_func )		3666681	2					
ANR	3667135	Condition	slot -> face && slot -> face -> internal -> lcd_filter_func	211:11:6175:6225	3666681	0	True				
ANR	3667136	AndExpression	slot -> face && slot -> face -> internal -> lcd_filter_func		3666681	0		&&			
ANR	3667137	PtrMemberAccess	slot -> face		3666681	0					
ANR	3667138	Identifier	slot		3666681	0					
ANR	3667139	Identifier	face		3666681	1					
ANR	3667140	PtrMemberAccess	slot -> face -> internal -> lcd_filter_func		3666681	1					
ANR	3667141	PtrMemberAccess	slot -> face -> internal		3666681	0					
ANR	3667142	PtrMemberAccess	slot -> face		3666681	0					
ANR	3667143	Identifier	slot		3666681	0					
ANR	3667144	Identifier	face		3666681	1					
ANR	3667145	Identifier	internal		3666681	1					
ANR	3667146	Identifier	lcd_filter_func		3666681	1					
ANR	3667147	CompoundStatement		114:6:2892:2892	3666681	1					
ANR	3667148	ExpressionStatement	lcd_weights = slot -> face -> internal -> lcd_weights	213:8:6245:6296	3666681	0	True				
ANR	3667149	AssignmentExpression	lcd_weights = slot -> face -> internal -> lcd_weights		3666681	0		=			
ANR	3667150	Identifier	lcd_weights		3666681	0					
ANR	3667151	PtrMemberAccess	slot -> face -> internal -> lcd_weights		3666681	1					
ANR	3667152	PtrMemberAccess	slot -> face -> internal		3666681	0					
ANR	3667153	PtrMemberAccess	slot -> face		3666681	0					
ANR	3667154	Identifier	slot		3666681	0					
ANR	3667155	Identifier	face		3666681	1					
ANR	3667156	Identifier	internal		3666681	1					
ANR	3667157	Identifier	lcd_weights		3666681	1					
ANR	3667158	ExpressionStatement	lcd_filter_func = slot -> face -> internal -> lcd_filter_func	214:8:6306:6361	3666681	1	True				
ANR	3667159	AssignmentExpression	lcd_filter_func = slot -> face -> internal -> lcd_filter_func		3666681	0		=			
ANR	3667160	Identifier	lcd_filter_func		3666681	0					
ANR	3667161	PtrMemberAccess	slot -> face -> internal -> lcd_filter_func		3666681	1					
ANR	3667162	PtrMemberAccess	slot -> face -> internal		3666681	0					
ANR	3667163	PtrMemberAccess	slot -> face		3666681	0					
ANR	3667164	Identifier	slot		3666681	0					
ANR	3667165	Identifier	face		3666681	1					
ANR	3667166	Identifier	internal		3666681	1					
ANR	3667167	Identifier	lcd_filter_func		3666681	1					
ANR	3667168	ElseStatement	else		3666681	0					
ANR	3667169	CompoundStatement		119:6:3045:3045	3666681	0					
ANR	3667170	ExpressionStatement	lcd_weights = slot -> library -> lcd_weights	218:8:6398:6442	3666681	0	True				
ANR	3667171	AssignmentExpression	lcd_weights = slot -> library -> lcd_weights		3666681	0		=			
ANR	3667172	Identifier	lcd_weights		3666681	0					
ANR	3667173	PtrMemberAccess	slot -> library -> lcd_weights		3666681	1					
ANR	3667174	PtrMemberAccess	slot -> library		3666681	0					
ANR	3667175	Identifier	slot		3666681	0					
ANR	3667176	Identifier	library		3666681	1					
ANR	3667177	Identifier	lcd_weights		3666681	1					
ANR	3667178	ExpressionStatement	lcd_filter_func = slot -> library -> lcd_filter_func	219:8:6452:6500	3666681	1	True				
ANR	3667179	AssignmentExpression	lcd_filter_func = slot -> library -> lcd_filter_func		3666681	0		=			
ANR	3667180	Identifier	lcd_filter_func		3666681	0					
ANR	3667181	PtrMemberAccess	slot -> library -> lcd_filter_func		3666681	1					
ANR	3667182	PtrMemberAccess	slot -> library		3666681	0					
ANR	3667183	Identifier	slot		3666681	0					
ANR	3667184	Identifier	library		3666681	1					
ANR	3667185	Identifier	lcd_filter_func		3666681	1					
ANR	3667186	IfStatement	if ( lcd_filter_func )		3666681	3					
ANR	3667187	Condition	lcd_filter_func	222:11:6522:6536	3666681	0	True				
ANR	3667188	Identifier	lcd_filter_func		3666681	0					
ANR	3667189	ExpressionStatement	"lcd_filter_func ( bitmap , mode , lcd_weights )"	223:8:6548:6592	3666681	1	True				
ANR	3667190	CallExpression	"lcd_filter_func ( bitmap , mode , lcd_weights )"		3666681	0					
ANR	3667191	Callee	lcd_filter_func		3666681	0					
ANR	3667192	Identifier	lcd_filter_func		3666681	0					
ANR	3667193	ArgumentList	bitmap		3666681	1					
ANR	3667194	Argument	bitmap		3666681	0					
ANR	3667195	Identifier	bitmap		3666681	0					
ANR	3667196	Argument	mode		3666681	1					
ANR	3667197	Identifier	mode		3666681	0					
ANR	3667198	Argument	lcd_weights		3666681	2					
ANR	3667199	Identifier	lcd_weights		3666681	0					
ANR	3667200	Label	Exit :	325:2:9231:9235	3666681	28	True				
ANR	3667201	Identifier	Exit		3666681	0					
ANR	3667202	IfStatement	if ( ! error )		3666681	29					
ANR	3667203	Condition	! error	326:9:9246:9251	3666681	0	True				
ANR	3667204	UnaryOperationExpression	! error		3666681	0					
ANR	3667205	UnaryOperator	!		3666681	0					
ANR	3667206	Identifier	error		3666681	1					
ANR	3667207	CompoundStatement		229:4:5916:5916	3666681	1					
ANR	3667208	ExpressionStatement	slot -> format = FT_GLYPH_FORMAT_BITMAP	329:6:9336:9373	3666681	0	True				
ANR	3667209	AssignmentExpression	slot -> format = FT_GLYPH_FORMAT_BITMAP		3666681	0		=			
ANR	3667210	PtrMemberAccess	slot -> format		3666681	0					
ANR	3667211	Identifier	slot		3666681	0					
ANR	3667212	Identifier	format		3666681	1					
ANR	3667213	Identifier	FT_GLYPH_FORMAT_BITMAP		3666681	1					
ANR	3667214	ElseStatement	else		3666681	0					
ANR	3667215	IfStatement	if ( slot -> internal -> flags & FT_GLYPH_OWN_BITMAP )		3666681	0					
ANR	3667216	Condition	slot -> internal -> flags & FT_GLYPH_OWN_BITMAP	331:14:9395:9437	3666681	0	True				
ANR	3667217	BitAndExpression	slot -> internal -> flags & FT_GLYPH_OWN_BITMAP		3666681	0		&			
ANR	3667218	PtrMemberAccess	slot -> internal -> flags		3666681	0					
ANR	3667219	PtrMemberAccess	slot -> internal		3666681	0					
ANR	3667220	Identifier	slot		3666681	0					
ANR	3667221	Identifier	internal		3666681	1					
ANR	3667222	Identifier	flags		3666681	1					
ANR	3667223	Identifier	FT_GLYPH_OWN_BITMAP		3666681	1					
ANR	3667224	CompoundStatement		234:4:6102:6102	3666681	1					
ANR	3667225	ExpressionStatement	FT_FREE ( bitmap -> buffer )	333:6:9453:9478	3666681	0	True				
ANR	3667226	CallExpression	FT_FREE ( bitmap -> buffer )		3666681	0					
ANR	3667227	Callee	FT_FREE		3666681	0					
ANR	3667228	Identifier	FT_FREE		3666681	0					
ANR	3667229	ArgumentList	bitmap -> buffer		3666681	1					
ANR	3667230	Argument	bitmap -> buffer		3666681	0					
ANR	3667231	PtrMemberAccess	bitmap -> buffer		3666681	0					
ANR	3667232	Identifier	bitmap		3666681	0					
ANR	3667233	Identifier	buffer		3666681	1					
ANR	3667234	ExpressionStatement	slot -> internal -> flags &= ~FT_GLYPH_OWN_BITMAP	334:6:9486:9531	3666681	1	True				
ANR	3667235	AssignmentExpression	slot -> internal -> flags &= ~FT_GLYPH_OWN_BITMAP		3666681	0		&=			
ANR	3667236	PtrMemberAccess	slot -> internal -> flags		3666681	0					
ANR	3667237	PtrMemberAccess	slot -> internal		3666681	0					
ANR	3667238	Identifier	slot		3666681	0					
ANR	3667239	Identifier	internal		3666681	1					
ANR	3667240	Identifier	flags		3666681	1					
ANR	3667241	Identifier	~FT_GLYPH_OWN_BITMAP		3666681	1					
ANR	3667242	IfStatement	if ( x_shift || y_shift )		3666681	30					
ANR	3667243	Condition	x_shift || y_shift	337:9:9549:9566	3666681	0	True				
ANR	3667244	OrExpression	x_shift || y_shift		3666681	0		||			
ANR	3667245	Identifier	x_shift		3666681	0					
ANR	3667246	Identifier	y_shift		3666681	1					
ANR	3667247	ExpressionStatement	"FT_Outline_Translate ( outline , - x_shift , - y_shift )"	338:6:9576:9627	3666681	1	True				
ANR	3667248	CallExpression	"FT_Outline_Translate ( outline , - x_shift , - y_shift )"		3666681	0					
ANR	3667249	Callee	FT_Outline_Translate		3666681	0					
ANR	3667250	Identifier	FT_Outline_Translate		3666681	0					
ANR	3667251	ArgumentList	outline		3666681	1					
ANR	3667252	Argument	outline		3666681	0					
ANR	3667253	Identifier	outline		3666681	0					
ANR	3667254	Argument	- x_shift		3666681	1					
ANR	3667255	UnaryOperationExpression	- x_shift		3666681	0					
ANR	3667256	UnaryOperator	-		3666681	0					
ANR	3667257	Identifier	x_shift		3666681	1					
ANR	3667258	Argument	- y_shift		3666681	2					
ANR	3667259	UnaryOperationExpression	- y_shift		3666681	0					
ANR	3667260	UnaryOperator	-		3666681	0					
ANR	3667261	Identifier	y_shift		3666681	1					
ANR	3667262	ReturnStatement	return error ;	340:4:9634:9646	3666681	31	True				
ANR	3667263	Identifier	error		3666681	0					
ANR	3667264	ReturnType	static FT_Error		3666681	1					
ANR	3667265	Identifier	ft_smooth_render_generic		3666681	2					
ANR	3667266	ParameterList	"FT_Renderer render , FT_GlyphSlot slot , FT_Render_Mode mode , const FT_Vector * origin , FT_Render_Mode required_mode"		3666681	3					
ANR	3667267	Parameter	FT_Renderer render	94:28:3094:3117	3666681	0	True				
ANR	3667268	ParameterType	FT_Renderer		3666681	0					
ANR	3667269	Identifier	render		3666681	1					
ANR	3667270	Parameter	FT_GlyphSlot slot	95:28:3148:3169	3666681	1	True				
ANR	3667271	ParameterType	FT_GlyphSlot		3666681	0					
ANR	3667272	Identifier	slot		3666681	1					
ANR	3667273	Parameter	FT_Render_Mode mode	96:28:3200:3221	3666681	2	True				
ANR	3667274	ParameterType	FT_Render_Mode		3666681	0					
ANR	3667275	Identifier	mode		3666681	1					
ANR	3667276	Parameter	const FT_Vector * origin	97:28:3252:3275	3666681	3	True				
ANR	3667277	ParameterType	const FT_Vector *		3666681	0					
ANR	3667278	Identifier	origin		3666681	1					
ANR	3667279	Parameter	FT_Render_Mode required_mode	98:28:3306:3336	3666681	4	True				
ANR	3667280	ParameterType	FT_Render_Mode		3666681	0					
ANR	3667281	Identifier	required_mode		3666681	1					
ANR	3667282	CFGEntryNode	ENTRY		3666681		True				
ANR	3667283	CFGExitNode	EXIT		3666681		True				
ANR	3667284	Symbol	bitmap -> buffer		3666681						
ANR	3667285	Symbol	origin -> y		3666681						
ANR	3667286	Symbol	FT_Err_Ok		3666681						
ANR	3667287	Symbol	origin -> x		3666681						
ANR	3667288	Symbol	lcd_weights		3666681						
ANR	3667289	Symbol	slot -> bitmap_left		3666681						
ANR	3667290	Symbol	points		3666681						
ANR	3667291	Symbol	mode		3666681						
ANR	3667292	Symbol	* slot		3666681						
ANR	3667293	Symbol	& slot -> outline		3666681						
ANR	3667294	Symbol	render -> root		3666681						
ANR	3667295	Symbol	* slot -> library		3666681						
ANR	3667296	Symbol	render -> glyph_format		3666681						
ANR	3667297	Symbol	Cannot_Render_Glyph		3666681						
ANR	3667298	Symbol	* bitmap		3666681						
ANR	3667299	Symbol	vec		3666681						
ANR	3667300	Symbol	bitmap		3666681						
ANR	3667301	Symbol	FT_GLYPH_FORMAT_BITMAP		3666681						
ANR	3667302	Symbol	params . flags		3666681						
ANR	3667303	Symbol	slot -> face -> internal -> lcd_filter_func		3666681						
ANR	3667304	Symbol	FT_RENDER_MODE_LCD_V		3666681						
ANR	3667305	Symbol	& params		3666681						
ANR	3667306	Symbol	* outline		3666681						
ANR	3667307	Symbol	slot -> bitmap_top		3666681						
ANR	3667308	Symbol	FT_ALLOC_MULT		3666681						
ANR	3667309	Symbol	* * slot -> face		3666681						
ANR	3667310	Symbol	params		3666681						
ANR	3667311	Symbol	~FT_GLYPH_OWN_BITMAP		3666681						
ANR	3667312	Symbol	slot -> face -> internal -> lcd_weights		3666681						
ANR	3667313	Symbol	* * slot		3666681						
ANR	3667314	Symbol	FT_GLYPH_OWN_BITMAP		3666681						
ANR	3667315	Symbol	vmul		3666681						
ANR	3667316	Symbol	vec -> x		3666681						
ANR	3667317	Symbol	FT_PIXEL_MODE_LCD_V		3666681						
ANR	3667318	Symbol	vec -> y		3666681						
ANR	3667319	Symbol	slot -> library		3666681						
ANR	3667320	Symbol	memory		3666681						
ANR	3667321	Symbol	* slot -> face		3666681						
ANR	3667322	Symbol	params . target		3666681						
ANR	3667323	Symbol	* origin		3666681						
ANR	3667324	Symbol	origin		3666681						
ANR	3667325	Symbol	* render		3666681						
ANR	3667326	Symbol	render -> raster		3666681						
ANR	3667327	Symbol	slot -> library -> lcd_filter_func		3666681						
ANR	3667328	Symbol	slot -> internal		3666681						
ANR	3667329	Symbol	slot -> face		3666681						
ANR	3667330	Symbol	slot		3666681						
ANR	3667331	Symbol	error		3666681						
ANR	3667332	Symbol	params . source		3666681						
ANR	3667333	Symbol	y_shift		3666681						
ANR	3667334	Symbol	render -> raster_render		3666681						
ANR	3667335	Symbol	slot -> format		3666681						
ANR	3667336	Symbol	outline		3666681						
ANR	3667337	Symbol	slot -> face -> internal		3666681						
ANR	3667338	Symbol	* * * slot		3666681						
ANR	3667339	Symbol	render -> root . memory		3666681						
ANR	3667340	Symbol	slot -> library -> lcd_weights		3666681						
ANR	3667341	Symbol	outline -> points		3666681						
ANR	3667342	Symbol	bitmap -> rows		3666681						
ANR	3667343	Symbol	render		3666681						
ANR	3667344	Symbol	slot -> internal -> flags		3666681						
ANR	3667345	Symbol	lcd_filter_func		3666681						
ANR	3667346	Symbol	* slot -> internal		3666681						
ANR	3667347	Symbol	Invalid_Argument		3666681						
ANR	3667348	Symbol	hmul		3666681						
ANR	3667349	Symbol	FT_RENDER_MODE_LCD		3666681						
ANR	3667350	Symbol	FT_RASTER_FLAG_AA		3666681						
ANR	3667351	Symbol	outline -> n_points		3666681						
ANR	3667352	Symbol	FT_THROW		3666681						
ANR	3667353	Symbol	bitmap -> pixel_mode		3666681						
ANR	3667354	Symbol	required_mode		3666681						
ANR	3667355	Symbol	& slot -> bitmap		3666681						
ANR	3667356	Symbol	x_shift		3666681						
ANR	3667357	Symbol	points_end		3666681						
ANR	3667358	Symbol	* vec		3666681						
ANR	3667359	Symbol	* slot -> face -> internal		3666681						
ANR	3667360	Symbol	bitmap -> pitch		3666681						
ANR	3667361	Function	ft_smooth_render	345:2:9707:10114							
ANR	3667362	FunctionDef	"ft_smooth_render (FT_Renderer render , FT_GlyphSlot slot , FT_Render_Mode mode , const FT_Vector * origin)"		3667361	0					
ANR	3667363	CompoundStatement		350:2:9906:10114	3667361	0					
ANR	3667364	IfStatement	if ( mode == FT_RENDER_MODE_LIGHT )		3667361	0					
ANR	3667365	Condition	mode == FT_RENDER_MODE_LIGHT	351:9:9917:9944	3667361	0	True				
ANR	3667366	EqualityExpression	mode == FT_RENDER_MODE_LIGHT		3667361	0		==			
ANR	3667367	Identifier	mode		3667361	0					
ANR	3667368	Identifier	FT_RENDER_MODE_LIGHT		3667361	1					
ANR	3667369	ExpressionStatement	mode = FT_RENDER_MODE_NORMAL	352:6:9954:9982	3667361	1	True				
ANR	3667370	AssignmentExpression	mode = FT_RENDER_MODE_NORMAL		3667361	0		=			
ANR	3667371	Identifier	mode		3667361	0					
ANR	3667372	Identifier	FT_RENDER_MODE_NORMAL		3667361	1					
ANR	3667373	ReturnStatement	"return ft_smooth_render_generic ( render , slot , mode , origin , FT_RENDER_MODE_NORMAL ) ;"	354:4:9989:10110	3667361	1	True				
ANR	3667374	CallExpression	"ft_smooth_render_generic ( render , slot , mode , origin , FT_RENDER_MODE_NORMAL )"		3667361	0					
ANR	3667375	Callee	ft_smooth_render_generic		3667361	0					
ANR	3667376	Identifier	ft_smooth_render_generic		3667361	0					
ANR	3667377	ArgumentList	render		3667361	1					
ANR	3667378	Argument	render		3667361	0					
ANR	3667379	Identifier	render		3667361	0					
ANR	3667380	Argument	slot		3667361	1					
ANR	3667381	Identifier	slot		3667361	0					
ANR	3667382	Argument	mode		3667361	2					
ANR	3667383	Identifier	mode		3667361	0					
ANR	3667384	Argument	origin		3667361	3					
ANR	3667385	Identifier	origin		3667361	0					
ANR	3667386	Argument	FT_RENDER_MODE_NORMAL		3667361	4					
ANR	3667387	Identifier	FT_RENDER_MODE_NORMAL		3667361	0					
ANR	3667388	ReturnType	static FT_Error		3667361	1					
ANR	3667389	Identifier	ft_smooth_render		3667361	2					
ANR	3667390	ParameterList	"FT_Renderer render , FT_GlyphSlot slot , FT_Render_Mode mode , const FT_Vector * origin"		3667361	3					
ANR	3667391	Parameter	FT_Renderer render	346:20:9743:9766	3667361	0	True				
ANR	3667392	ParameterType	FT_Renderer		3667361	0					
ANR	3667393	Identifier	render		3667361	1					
ANR	3667394	Parameter	FT_GlyphSlot slot	347:20:9789:9810	3667361	1	True				
ANR	3667395	ParameterType	FT_GlyphSlot		3667361	0					
ANR	3667396	Identifier	slot		3667361	1					
ANR	3667397	Parameter	FT_Render_Mode mode	348:20:9833:9854	3667361	2	True				
ANR	3667398	ParameterType	FT_Render_Mode		3667361	0					
ANR	3667399	Identifier	mode		3667361	1					
ANR	3667400	Parameter	const FT_Vector * origin	349:20:9877:9900	3667361	3	True				
ANR	3667401	ParameterType	const FT_Vector *		3667361	0					
ANR	3667402	Identifier	origin		3667361	1					
ANR	3667403	CFGEntryNode	ENTRY		3667361		True				
ANR	3667404	CFGExitNode	EXIT		3667361		True				
ANR	3667405	Symbol	mode		3667361						
ANR	3667406	Symbol	FT_RENDER_MODE_LIGHT		3667361						
ANR	3667407	Symbol	ft_smooth_render_generic		3667361						
ANR	3667408	Symbol	origin		3667361						
ANR	3667409	Symbol	FT_RENDER_MODE_NORMAL		3667361						
ANR	3667410	Symbol	slot		3667361						
ANR	3667411	Symbol	render		3667361						
ANR	3667412	Function	ft_smooth_render_lcd	360:2:10186:10529							
ANR	3667413	FunctionDef	"ft_smooth_render_lcd (FT_Renderer render , FT_GlyphSlot slot , FT_Render_Mode mode , const FT_Vector * origin)"		3667412	0					
ANR	3667414	CompoundStatement		365:2:10401:10529	3667412	0					
ANR	3667415	ReturnStatement	"return ft_smooth_render_generic ( render , slot , mode , origin , FT_RENDER_MODE_LCD ) ;"	366:4:10407:10525	3667412	0	True				
ANR	3667416	CallExpression	"ft_smooth_render_generic ( render , slot , mode , origin , FT_RENDER_MODE_LCD )"		3667412	0					
ANR	3667417	Callee	ft_smooth_render_generic		3667412	0					
ANR	3667418	Identifier	ft_smooth_render_generic		3667412	0					
ANR	3667419	ArgumentList	render		3667412	1					
ANR	3667420	Argument	render		3667412	0					
ANR	3667421	Identifier	render		3667412	0					
ANR	3667422	Argument	slot		3667412	1					
ANR	3667423	Identifier	slot		3667412	0					
ANR	3667424	Argument	mode		3667412	2					
ANR	3667425	Identifier	mode		3667412	0					
ANR	3667426	Argument	origin		3667412	3					
ANR	3667427	Identifier	origin		3667412	0					
ANR	3667428	Argument	FT_RENDER_MODE_LCD		3667412	4					
ANR	3667429	Identifier	FT_RENDER_MODE_LCD		3667412	0					
ANR	3667430	ReturnType	static FT_Error		3667412	1					
ANR	3667431	Identifier	ft_smooth_render_lcd		3667412	2					
ANR	3667432	ParameterList	"FT_Renderer render , FT_GlyphSlot slot , FT_Render_Mode mode , const FT_Vector * origin"		3667412	3					
ANR	3667433	Parameter	FT_Renderer render	361:24:10226:10249	3667412	0	True				
ANR	3667434	ParameterType	FT_Renderer		3667412	0					
ANR	3667435	Identifier	render		3667412	1					
ANR	3667436	Parameter	FT_GlyphSlot slot	362:24:10276:10297	3667412	1	True				
ANR	3667437	ParameterType	FT_GlyphSlot		3667412	0					
ANR	3667438	Identifier	slot		3667412	1					
ANR	3667439	Parameter	FT_Render_Mode mode	363:24:10324:10345	3667412	2	True				
ANR	3667440	ParameterType	FT_Render_Mode		3667412	0					
ANR	3667441	Identifier	mode		3667412	1					
ANR	3667442	Parameter	const FT_Vector * origin	364:24:10372:10395	3667412	3	True				
ANR	3667443	ParameterType	const FT_Vector *		3667412	0					
ANR	3667444	Identifier	origin		3667412	1					
ANR	3667445	CFGEntryNode	ENTRY		3667412		True				
ANR	3667446	CFGExitNode	EXIT		3667412		True				
ANR	3667447	Symbol	mode		3667412						
ANR	3667448	Symbol	ft_smooth_render_generic		3667412						
ANR	3667449	Symbol	origin		3667412						
ANR	3667450	Symbol	slot		3667412						
ANR	3667451	Symbol	FT_RENDER_MODE_LCD		3667412						
ANR	3667452	Symbol	render		3667412						
ANR	3667453	Function	ft_smooth_render_lcd_v	372:2:10599:10952							
ANR	3667454	FunctionDef	"ft_smooth_render_lcd_v (FT_Renderer render , FT_GlyphSlot slot , FT_Render_Mode mode , const FT_Vector * origin)"		3667453	0					
ANR	3667455	CompoundStatement		377:2:10822:10952	3667453	0					
ANR	3667456	ReturnStatement	"return ft_smooth_render_generic ( render , slot , mode , origin , FT_RENDER_MODE_LCD_V ) ;"	378:4:10828:10948	3667453	0	True				
ANR	3667457	CallExpression	"ft_smooth_render_generic ( render , slot , mode , origin , FT_RENDER_MODE_LCD_V )"		3667453	0					
ANR	3667458	Callee	ft_smooth_render_generic		3667453	0					
ANR	3667459	Identifier	ft_smooth_render_generic		3667453	0					
ANR	3667460	ArgumentList	render		3667453	1					
ANR	3667461	Argument	render		3667453	0					
ANR	3667462	Identifier	render		3667453	0					
ANR	3667463	Argument	slot		3667453	1					
ANR	3667464	Identifier	slot		3667453	0					
ANR	3667465	Argument	mode		3667453	2					
ANR	3667466	Identifier	mode		3667453	0					
ANR	3667467	Argument	origin		3667453	3					
ANR	3667468	Identifier	origin		3667453	0					
ANR	3667469	Argument	FT_RENDER_MODE_LCD_V		3667453	4					
ANR	3667470	Identifier	FT_RENDER_MODE_LCD_V		3667453	0					
ANR	3667471	ReturnType	static FT_Error		3667453	1					
ANR	3667472	Identifier	ft_smooth_render_lcd_v		3667453	2					
ANR	3667473	ParameterList	"FT_Renderer render , FT_GlyphSlot slot , FT_Render_Mode mode , const FT_Vector * origin"		3667453	3					
ANR	3667474	Parameter	FT_Renderer render	373:26:10641:10664	3667453	0	True				
ANR	3667475	ParameterType	FT_Renderer		3667453	0					
ANR	3667476	Identifier	render		3667453	1					
ANR	3667477	Parameter	FT_GlyphSlot slot	374:26:10693:10714	3667453	1	True				
ANR	3667478	ParameterType	FT_GlyphSlot		3667453	0					
ANR	3667479	Identifier	slot		3667453	1					
ANR	3667480	Parameter	FT_Render_Mode mode	375:26:10743:10764	3667453	2	True				
ANR	3667481	ParameterType	FT_Render_Mode		3667453	0					
ANR	3667482	Identifier	mode		3667453	1					
ANR	3667483	Parameter	const FT_Vector * origin	376:26:10793:10816	3667453	3	True				
ANR	3667484	ParameterType	const FT_Vector *		3667453	0					
ANR	3667485	Identifier	origin		3667453	1					
ANR	3667486	CFGEntryNode	ENTRY		3667453		True				
ANR	3667487	CFGExitNode	EXIT		3667453		True				
ANR	3667488	Symbol	mode		3667453						
ANR	3667489	Symbol	ft_smooth_render_generic		3667453						
ANR	3667490	Symbol	origin		3667453						
ANR	3667491	Symbol	slot		3667453						
ANR	3667492	Symbol	render		3667453						
ANR	3667493	Symbol	FT_RENDER_MODE_LCD_V		3667453						
