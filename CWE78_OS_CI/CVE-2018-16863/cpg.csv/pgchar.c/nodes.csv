command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8364644	File	data/converged/CVE-2018-16863_ghostpdl/pgchar.c								
ANR	8364645	Function	hpgl_font_definition	34:0:969:5894							
ANR	8364646	FunctionDef	"hpgl_font_definition (hpgl_args_t * pargs , hpgl_state_t * pgls , int index)"		8364645	0					
ANR	8364647	CompoundStatement		36:0:1054:5894	8364645	0					
ANR	8364648	IdentifierDeclStatement	pcl_font_selection_t * pfs = & pgls -> g . font_selection [ index ] ;	45:4:1404:1462	8364645	0	True				
ANR	8364649	IdentifierDecl	* pfs = & pgls -> g . font_selection [ index ]		8364645	0					
ANR	8364650	IdentifierDeclType	pcl_font_selection_t *		8364645	0					
ANR	8364651	Identifier	pfs		8364645	1					
ANR	8364652	AssignmentExpression	* pfs = & pgls -> g . font_selection [ index ]		8364645	2		=			
ANR	8364653	Identifier	pfs		8364645	0					
ANR	8364654	UnaryOperationExpression	& pgls -> g . font_selection [ index ]		8364645	1					
ANR	8364655	UnaryOperator	&		8364645	0					
ANR	8364656	ArrayIndexing	pgls -> g . font_selection [ index ]		8364645	1					
ANR	8364657	MemberAccess	pgls -> g . font_selection		8364645	0					
ANR	8364658	PtrMemberAccess	pgls -> g		8364645	0					
ANR	8364659	Identifier	pgls		8364645	0					
ANR	8364660	Identifier	g		8364645	1					
ANR	8364661	Identifier	font_selection		8364645	1					
ANR	8364662	Identifier	index		8364645	1					
ANR	8364663	Statement	define	46:1:1465:1470	8364645	1	True				
ANR	8364664	Statement	pfp	46:8:1472:1474	8364645	2	True				
ANR	8364665	Statement	(	46:12:1476:1476	8364645	3	True				
ANR	8364666	Statement	&	46:13:1477:1477	8364645	4	True				
ANR	8364667	Statement	pfs	46:14:1478:1480	8364645	5	True				
ANR	8364668	Statement	->	46:17:1481:1482	8364645	6	True				
ANR	8364669	Statement	params	46:19:1483:1488	8364645	7	True				
ANR	8364670	Statement	)	46:25:1489:1489	8364645	8	True				
ANR	8364671	IdentifierDeclStatement	int kind ;	47:4:1495:1503	8364645	9	True				
ANR	8364672	IdentifierDecl	kind		8364645	0					
ANR	8364673	IdentifierDeclType	int		8364645	0					
ANR	8364674	Identifier	kind		8364645	1					
ANR	8364675	ExpressionStatement	pfs -> selected_id = ( uint ) - 1	49:4:1510:1539	8364645	10	True				
ANR	8364676	AssignmentExpression	pfs -> selected_id = ( uint ) - 1		8364645	0		=			
ANR	8364677	PtrMemberAccess	pfs -> selected_id		8364645	0					
ANR	8364678	Identifier	pfs		8364645	0					
ANR	8364679	Identifier	selected_id		8364645	1					
ANR	8364680	CastExpression	( uint ) - 1		8364645	1					
ANR	8364681	CastTarget	uint		8364645	0					
ANR	8364682	UnaryOperationExpression	- 1		8364645	1					
ANR	8364683	UnaryOperator	-		8364645	0					
ANR	8364684	PrimaryExpression	1		8364645	1					
ANR	8364685	ForStatement	"for ( ; hpgl_arg_c_int ( pgls -> memory , pargs , & kind ) ; pargs -> phase |= 1 )"		8364645	11					
ANR	8364686	Condition	"hpgl_arg_c_int ( pgls -> memory , pargs , & kind )"	50:11:1552:1593	8364645	0	True				
ANR	8364687	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & kind )"		8364645	0					
ANR	8364688	Callee	hpgl_arg_c_int		8364645	0					
ANR	8364689	Identifier	hpgl_arg_c_int		8364645	0					
ANR	8364690	ArgumentList	pgls -> memory		8364645	1					
ANR	8364691	Argument	pgls -> memory		8364645	0					
ANR	8364692	PtrMemberAccess	pgls -> memory		8364645	0					
ANR	8364693	Identifier	pgls		8364645	0					
ANR	8364694	Identifier	memory		8364645	1					
ANR	8364695	Argument	pargs		8364645	1					
ANR	8364696	Identifier	pargs		8364645	0					
ANR	8364697	Argument	& kind		8364645	2					
ANR	8364698	UnaryOperationExpression	& kind		8364645	0					
ANR	8364699	UnaryOperator	&		8364645	0					
ANR	8364700	Identifier	kind		8364645	1					
ANR	8364701	AssignmentExpression	pargs -> phase |= 1	50:55:1596:1612	8364645	1	True	|=			
ANR	8364702	PtrMemberAccess	pargs -> phase		8364645	0					
ANR	8364703	Identifier	pargs		8364645	0					
ANR	8364704	Identifier	phase		8364645	1					
ANR	8364705	PrimaryExpression	1		8364645	1					
ANR	8364706	SwitchStatement	switch ( kind )		8364645	2					
ANR	8364707	Condition	kind	51:16:1631:1634	8364645	0	True				
ANR	8364708	Identifier	kind		8364645	0					
ANR	8364709	CompoundStatement		16:22:582:582	8364645	1					
ANR	8364710	Label	case 1 :	52:12:1651:1657	8364645	0	True				
ANR	8364711	CompoundStatement		19:20:670:680	8364645	1					
ANR	8364712	IdentifierDeclStatement	int32 sset ;	54:20:1725:1735	8364645	0	True				
ANR	8364713	IdentifierDecl	sset		8364645	0					
ANR	8364714	IdentifierDeclType	int32		8364645	0					
ANR	8364715	Identifier	sset		8364645	1					
ANR	8364716	IfStatement	"if ( ! hpgl_arg_int ( pgls -> memory , pargs , & sset ) )"		8364645	1					
ANR	8364717	Condition	"! hpgl_arg_int ( pgls -> memory , pargs , & sset )"	56:24:1762:1802	8364645	0	True				
ANR	8364718	UnaryOperationExpression	"! hpgl_arg_int ( pgls -> memory , pargs , & sset )"		8364645	0					
ANR	8364719	UnaryOperator	!		8364645	0					
ANR	8364720	CallExpression	"hpgl_arg_int ( pgls -> memory , pargs , & sset )"		8364645	1					
ANR	8364721	Callee	hpgl_arg_int		8364645	0					
ANR	8364722	Identifier	hpgl_arg_int		8364645	0					
ANR	8364723	ArgumentList	pgls -> memory		8364645	1					
ANR	8364724	Argument	pgls -> memory		8364645	0					
ANR	8364725	PtrMemberAccess	pgls -> memory		8364645	0					
ANR	8364726	Identifier	pgls		8364645	0					
ANR	8364727	Identifier	memory		8364645	1					
ANR	8364728	Argument	pargs		8364645	1					
ANR	8364729	Identifier	pargs		8364645	0					
ANR	8364730	Argument	& sset		8364645	2					
ANR	8364731	UnaryOperationExpression	& sset		8364645	0					
ANR	8364732	UnaryOperator	&		8364645	0					
ANR	8364733	Identifier	sset		8364645	1					
ANR	8364734	ReturnStatement	return e_Range ;	57:24:1829:1843	8364645	1	True				
ANR	8364735	Identifier	e_Range		8364645	0					
ANR	8364736	IfStatement	if ( pfp -> symbol_set != ( uint ) sset )		8364645	2					
ANR	8364737	Condition	pfp -> symbol_set != ( uint ) sset	58:24:1869:1898	8364645	0	True				
ANR	8364738	EqualityExpression	pfp -> symbol_set != ( uint ) sset		8364645	0		!=			
ANR	8364739	PtrMemberAccess	pfp -> symbol_set		8364645	0					
ANR	8364740	Identifier	pfp		8364645	0					
ANR	8364741	Identifier	symbol_set		8364645	1					
ANR	8364742	CastExpression	( uint ) sset		8364645	1					
ANR	8364743	CastTarget	uint		8364645	0					
ANR	8364744	Identifier	sset		8364645	1					
ANR	8364745	ExpressionStatement	"pfp -> symbol_set = ( uint ) sset , pargs -> phase |= 2"	59:24:1925:1973	8364645	1	True				
ANR	8364746	Expression	"pfp -> symbol_set = ( uint ) sset , pargs -> phase |= 2"		8364645	0					
ANR	8364747	AssignmentExpression	pfp -> symbol_set = ( uint ) sset		8364645	0		=			
ANR	8364748	PtrMemberAccess	pfp -> symbol_set		8364645	0					
ANR	8364749	Identifier	pfp		8364645	0					
ANR	8364750	Identifier	symbol_set		8364645	1					
ANR	8364751	CastExpression	( uint ) sset		8364645	1					
ANR	8364752	CastTarget	uint		8364645	0					
ANR	8364753	Identifier	sset		8364645	1					
ANR	8364754	AssignmentExpression	pargs -> phase |= 2		8364645	1		|=			
ANR	8364755	PtrMemberAccess	pargs -> phase		8364645	0					
ANR	8364756	Identifier	pargs		8364645	0					
ANR	8364757	Identifier	phase		8364645	1					
ANR	8364758	PrimaryExpression	2		8364645	1					
ANR	8364759	BreakStatement	break ;	61:16:2009:2014	8364645	2	True				
ANR	8364760	Label	case 2 :	62:12:2028:2034	8364645	3	True				
ANR	8364761	CompoundStatement		29:20:1044:1055	8364645	4					
ANR	8364762	IdentifierDeclStatement	int spacing ;	64:20:2099:2110	8364645	0	True				
ANR	8364763	IdentifierDecl	spacing		8364645	0					
ANR	8364764	IdentifierDeclType	int		8364645	0					
ANR	8364765	Identifier	spacing		8364645	1					
ANR	8364766	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & spacing ) )"		8364645	1					
ANR	8364767	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & spacing )"	66:24:2137:2182	8364645	0	True				
ANR	8364768	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & spacing )"		8364645	0					
ANR	8364769	UnaryOperator	!		8364645	0					
ANR	8364770	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & spacing )"		8364645	1					
ANR	8364771	Callee	hpgl_arg_c_int		8364645	0					
ANR	8364772	Identifier	hpgl_arg_c_int		8364645	0					
ANR	8364773	ArgumentList	pgls -> memory		8364645	1					
ANR	8364774	Argument	pgls -> memory		8364645	0					
ANR	8364775	PtrMemberAccess	pgls -> memory		8364645	0					
ANR	8364776	Identifier	pgls		8364645	0					
ANR	8364777	Identifier	memory		8364645	1					
ANR	8364778	Argument	pargs		8364645	1					
ANR	8364779	Identifier	pargs		8364645	0					
ANR	8364780	Argument	& spacing		8364645	2					
ANR	8364781	UnaryOperationExpression	& spacing		8364645	0					
ANR	8364782	UnaryOperator	&		8364645	0					
ANR	8364783	Identifier	spacing		8364645	1					
ANR	8364784	ReturnStatement	return e_Range ;	67:24:2209:2223	8364645	1	True				
ANR	8364785	Identifier	e_Range		8364645	0					
ANR	8364786	IfStatement	if ( ( ( spacing == 1 ) || ( spacing == 0 ) ) && ( pfp -> proportional_spacing != spacing ) )		8364645	2					
ANR	8364787	Condition	( ( spacing == 1 ) || ( spacing == 0 ) ) && ( pfp -> proportional_spacing != spacing )	68:24:2249:2348	8364645	0	True				
ANR	8364788	AndExpression	( ( spacing == 1 ) || ( spacing == 0 ) ) && ( pfp -> proportional_spacing != spacing )		8364645	0		&&			
ANR	8364789	OrExpression	( spacing == 1 ) || ( spacing == 0 )		8364645	0		||			
ANR	8364790	EqualityExpression	spacing == 1		8364645	0		==			
ANR	8364791	Identifier	spacing		8364645	0					
ANR	8364792	PrimaryExpression	1		8364645	1					
ANR	8364793	EqualityExpression	spacing == 0		8364645	1		==			
ANR	8364794	Identifier	spacing		8364645	0					
ANR	8364795	PrimaryExpression	0		8364645	1					
ANR	8364796	EqualityExpression	pfp -> proportional_spacing != spacing		8364645	1		!=			
ANR	8364797	PtrMemberAccess	pfp -> proportional_spacing		8364645	0					
ANR	8364798	Identifier	pfp		8364645	0					
ANR	8364799	Identifier	proportional_spacing		8364645	1					
ANR	8364800	Identifier	spacing		8364645	1					
ANR	8364801	ExpressionStatement	"pfp -> proportional_spacing = spacing , pargs -> phase |= 2"	70:24:2375:2457	8364645	1	True				
ANR	8364802	Expression	"pfp -> proportional_spacing = spacing , pargs -> phase |= 2"		8364645	0					
ANR	8364803	AssignmentExpression	pfp -> proportional_spacing = spacing		8364645	0		=			
ANR	8364804	PtrMemberAccess	pfp -> proportional_spacing		8364645	0					
ANR	8364805	Identifier	pfp		8364645	0					
ANR	8364806	Identifier	proportional_spacing		8364645	1					
ANR	8364807	Identifier	spacing		8364645	1					
ANR	8364808	AssignmentExpression	pargs -> phase |= 2		8364645	1		|=			
ANR	8364809	PtrMemberAccess	pargs -> phase		8364645	0					
ANR	8364810	Identifier	pargs		8364645	0					
ANR	8364811	Identifier	phase		8364645	1					
ANR	8364812	PrimaryExpression	2		8364645	1					
ANR	8364813	BreakStatement	break ;	73:16:2493:2498	8364645	5	True				
ANR	8364814	Label	case 3 :	74:12:2512:2518	8364645	6	True				
ANR	8364815	CompoundStatement		41:20:1526:1543	8364645	7					
ANR	8364816	IdentifierDeclStatement	hpgl_real_t pitch ;	76:20:2581:2598	8364645	0	True				
ANR	8364817	IdentifierDecl	pitch		8364645	0					
ANR	8364818	IdentifierDeclType	hpgl_real_t		8364645	0					
ANR	8364819	Identifier	pitch		8364645	1					
ANR	8364820	IfStatement	"if ( ! hpgl_arg_c_real ( pgls -> memory , pargs , & pitch ) )"		8364645	1					
ANR	8364821	Condition	"! hpgl_arg_c_real ( pgls -> memory , pargs , & pitch )"	78:24:2625:2669	8364645	0	True				
ANR	8364822	UnaryOperationExpression	"! hpgl_arg_c_real ( pgls -> memory , pargs , & pitch )"		8364645	0					
ANR	8364823	UnaryOperator	!		8364645	0					
ANR	8364824	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & pitch )"		8364645	1					
ANR	8364825	Callee	hpgl_arg_c_real		8364645	0					
ANR	8364826	Identifier	hpgl_arg_c_real		8364645	0					
ANR	8364827	ArgumentList	pgls -> memory		8364645	1					
ANR	8364828	Argument	pgls -> memory		8364645	0					
ANR	8364829	PtrMemberAccess	pgls -> memory		8364645	0					
ANR	8364830	Identifier	pgls		8364645	0					
ANR	8364831	Identifier	memory		8364645	1					
ANR	8364832	Argument	pargs		8364645	1					
ANR	8364833	Identifier	pargs		8364645	0					
ANR	8364834	Argument	& pitch		8364645	2					
ANR	8364835	UnaryOperationExpression	& pitch		8364645	0					
ANR	8364836	UnaryOperator	&		8364645	0					
ANR	8364837	Identifier	pitch		8364645	1					
ANR	8364838	ReturnStatement	return e_Range ;	79:24:2696:2710	8364645	1	True				
ANR	8364839	Identifier	e_Range		8364645	0					
ANR	8364840	IfStatement	if ( ( pl_fp_pitch_per_inch ( pfp ) != pitch ) && ( pitch >= 0 ) && ( pitch < 32768.0 ) )		8364645	2					
ANR	8364841	Condition	( pl_fp_pitch_per_inch ( pfp ) != pitch ) && ( pitch >= 0 ) && ( pitch < 32768.0 )	80:24:2736:2832	8364645	0	True				
ANR	8364842	AndExpression	( pl_fp_pitch_per_inch ( pfp ) != pitch ) && ( pitch >= 0 ) && ( pitch < 32768.0 )		8364645	0		&&			
ANR	8364843	EqualityExpression	pl_fp_pitch_per_inch ( pfp ) != pitch		8364645	0		!=			
ANR	8364844	CallExpression	pl_fp_pitch_per_inch ( pfp )		8364645	0					
ANR	8364845	Callee	pl_fp_pitch_per_inch		8364645	0					
ANR	8364846	Identifier	pl_fp_pitch_per_inch		8364645	0					
ANR	8364847	ArgumentList	pfp		8364645	1					
ANR	8364848	Argument	pfp		8364645	0					
ANR	8364849	Identifier	pfp		8364645	0					
ANR	8364850	Identifier	pitch		8364645	1					
ANR	8364851	AndExpression	( pitch >= 0 ) && ( pitch < 32768.0 )		8364645	1		&&			
ANR	8364852	RelationalExpression	pitch >= 0		8364645	0		>=			
ANR	8364853	Identifier	pitch		8364645	0					
ANR	8364854	PrimaryExpression	0		8364645	1					
ANR	8364855	RelationalExpression	pitch < 32768.0		8364645	1		<			
ANR	8364856	Identifier	pitch		8364645	0					
ANR	8364857	PrimaryExpression	32768.0		8364645	1					
ANR	8364858	CompoundStatement		46:59:1780:1780	8364645	1					
ANR	8364859	ExpressionStatement	"pl_fp_set_pitch_per_inch ( pfp , pitch > 7200.0 ? 7200.0 : pitch )"	82:24:2861:3021	8364645	0	True				
ANR	8364860	CallExpression	"pl_fp_set_pitch_per_inch ( pfp , pitch > 7200.0 ? 7200.0 : pitch )"		8364645	0					
ANR	8364861	Callee	pl_fp_set_pitch_per_inch		8364645	0					
ANR	8364862	Identifier	pl_fp_set_pitch_per_inch		8364645	0					
ANR	8364863	ArgumentList	pfp		8364645	1					
ANR	8364864	Argument	pfp		8364645	0					
ANR	8364865	Identifier	pfp		8364645	0					
ANR	8364866	Argument	pitch > 7200.0 ? 7200.0 : pitch		8364645	1					
ANR	8364867	ConditionalExpression	pitch > 7200.0 ? 7200.0 : pitch		8364645	0					
ANR	8364868	Condition	pitch > 7200.0		8364645	0					
ANR	8364869	RelationalExpression	pitch > 7200.0		8364645	0		>			
ANR	8364870	Identifier	pitch		8364645	0					
ANR	8364871	PrimaryExpression	7200.0		8364645	1					
ANR	8364872	PrimaryExpression	7200.0		8364645	1					
ANR	8364873	Identifier	pitch		8364645	2					
ANR	8364874	ExpressionStatement	pargs -> phase |= 2	85:24:3047:3064	8364645	1	True				
ANR	8364875	AssignmentExpression	pargs -> phase |= 2		8364645	0		|=			
ANR	8364876	PtrMemberAccess	pargs -> phase		8364645	0					
ANR	8364877	Identifier	pargs		8364645	0					
ANR	8364878	Identifier	phase		8364645	1					
ANR	8364879	PrimaryExpression	2		8364645	1					
ANR	8364880	BreakStatement	break ;	89:16:3123:3128	8364645	8	True				
ANR	8364881	Label	case 4 :	90:12:3142:3148	8364645	9	True				
ANR	8364882	CompoundStatement		57:20:2157:2175	8364645	10					
ANR	8364883	IdentifierDeclStatement	hpgl_real_t height ;	92:20:3212:3230	8364645	0	True				
ANR	8364884	IdentifierDecl	height		8364645	0					
ANR	8364885	IdentifierDeclType	hpgl_real_t		8364645	0					
ANR	8364886	Identifier	height		8364645	1					
ANR	8364887	IfStatement	"if ( ! hpgl_arg_c_real ( pgls -> memory , pargs , & height ) )"		8364645	1					
ANR	8364888	Condition	"! hpgl_arg_c_real ( pgls -> memory , pargs , & height )"	94:24:3257:3302	8364645	0	True				
ANR	8364889	UnaryOperationExpression	"! hpgl_arg_c_real ( pgls -> memory , pargs , & height )"		8364645	0					
ANR	8364890	UnaryOperator	!		8364645	0					
ANR	8364891	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & height )"		8364645	1					
ANR	8364892	Callee	hpgl_arg_c_real		8364645	0					
ANR	8364893	Identifier	hpgl_arg_c_real		8364645	0					
ANR	8364894	ArgumentList	pgls -> memory		8364645	1					
ANR	8364895	Argument	pgls -> memory		8364645	0					
ANR	8364896	PtrMemberAccess	pgls -> memory		8364645	0					
ANR	8364897	Identifier	pgls		8364645	0					
ANR	8364898	Identifier	memory		8364645	1					
ANR	8364899	Argument	pargs		8364645	1					
ANR	8364900	Identifier	pargs		8364645	0					
ANR	8364901	Argument	& height		8364645	2					
ANR	8364902	UnaryOperationExpression	& height		8364645	0					
ANR	8364903	UnaryOperator	&		8364645	0					
ANR	8364904	Identifier	height		8364645	1					
ANR	8364905	ReturnStatement	return e_Range ;	95:24:3329:3343	8364645	1	True				
ANR	8364906	Identifier	e_Range		8364645	0					
ANR	8364907	IfStatement	if ( ( pfp -> height_4ths != ( uint ) ( height * 4 ) ) && ( height >= 0 ) )		8364645	2					
ANR	8364908	Condition	( pfp -> height_4ths != ( uint ) ( height * 4 ) ) && ( height >= 0 )	96:24:3369:3450	8364645	0	True				
ANR	8364909	AndExpression	( pfp -> height_4ths != ( uint ) ( height * 4 ) ) && ( height >= 0 )		8364645	0		&&			
ANR	8364910	EqualityExpression	pfp -> height_4ths != ( uint ) ( height * 4 )		8364645	0		!=			
ANR	8364911	PtrMemberAccess	pfp -> height_4ths		8364645	0					
ANR	8364912	Identifier	pfp		8364645	0					
ANR	8364913	Identifier	height_4ths		8364645	1					
ANR	8364914	CastExpression	( uint ) ( height * 4 )		8364645	1					
ANR	8364915	CastTarget	uint		8364645	0					
ANR	8364916	MultiplicativeExpression	height * 4		8364645	1		*			
ANR	8364917	Identifier	height		8364645	0					
ANR	8364918	PrimaryExpression	4		8364645	1					
ANR	8364919	RelationalExpression	height >= 0		8364645	1		>=			
ANR	8364920	Identifier	height		8364645	0					
ANR	8364921	PrimaryExpression	0		8364645	1					
ANR	8364922	CompoundStatement		70:24:2919:2963	8364645	1					
ANR	8364923	IdentifierDeclStatement	uint trunc_height_4ths = ( uint ) ( height * 4 ) ;	105:24:3974:4018	8364645	0	True				
ANR	8364924	IdentifierDecl	trunc_height_4ths = ( uint ) ( height * 4 )		8364645	0					
ANR	8364925	IdentifierDeclType	uint		8364645	0					
ANR	8364926	Identifier	trunc_height_4ths		8364645	1					
ANR	8364927	AssignmentExpression	trunc_height_4ths = ( uint ) ( height * 4 )		8364645	2		=			
ANR	8364928	Identifier	trunc_height_4ths		8364645	0					
ANR	8364929	CastExpression	( uint ) ( height * 4 )		8364645	1					
ANR	8364930	CastTarget	uint		8364645	0					
ANR	8364931	MultiplicativeExpression	height * 4		8364645	1		*			
ANR	8364932	Identifier	height		8364645	0					
ANR	8364933	PrimaryExpression	4		8364645	1					
ANR	8364934	ExpressionStatement	pfp -> height_4ths = ( trunc_height_4ths == 0 ? 1 : trunc_height_4ths )	107:24:4045:4140	8364645	1	True				
ANR	8364935	AssignmentExpression	pfp -> height_4ths = ( trunc_height_4ths == 0 ? 1 : trunc_height_4ths )		8364645	0		=			
ANR	8364936	PtrMemberAccess	pfp -> height_4ths		8364645	0					
ANR	8364937	Identifier	pfp		8364645	0					
ANR	8364938	Identifier	height_4ths		8364645	1					
ANR	8364939	ConditionalExpression	trunc_height_4ths == 0 ? 1 : trunc_height_4ths		8364645	1					
ANR	8364940	Condition	trunc_height_4ths == 0		8364645	0					
ANR	8364941	EqualityExpression	trunc_height_4ths == 0		8364645	0		==			
ANR	8364942	Identifier	trunc_height_4ths		8364645	0					
ANR	8364943	PrimaryExpression	0		8364645	1					
ANR	8364944	PrimaryExpression	1		8364645	1					
ANR	8364945	Identifier	trunc_height_4ths		8364645	2					
ANR	8364946	ExpressionStatement	pargs -> phase |= 2	109:24:4166:4183	8364645	2	True				
ANR	8364947	AssignmentExpression	pargs -> phase |= 2		8364645	0		|=			
ANR	8364948	PtrMemberAccess	pargs -> phase		8364645	0					
ANR	8364949	Identifier	pargs		8364645	0					
ANR	8364950	Identifier	phase		8364645	1					
ANR	8364951	PrimaryExpression	2		8364645	1					
ANR	8364952	BreakStatement	break ;	112:16:4241:4246	8364645	11	True				
ANR	8364953	Label	case 5 :	113:12:4260:4266	8364645	12	True				
ANR	8364954	CompoundStatement		80:20:3276:3287	8364645	13					
ANR	8364955	IdentifierDeclStatement	int posture ;	115:20:4331:4342	8364645	0	True				
ANR	8364956	IdentifierDecl	posture		8364645	0					
ANR	8364957	IdentifierDeclType	int		8364645	0					
ANR	8364958	Identifier	posture		8364645	1					
ANR	8364959	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & posture ) )"		8364645	1					
ANR	8364960	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & posture )"	117:24:4369:4414	8364645	0	True				
ANR	8364961	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & posture )"		8364645	0					
ANR	8364962	UnaryOperator	!		8364645	0					
ANR	8364963	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & posture )"		8364645	1					
ANR	8364964	Callee	hpgl_arg_c_int		8364645	0					
ANR	8364965	Identifier	hpgl_arg_c_int		8364645	0					
ANR	8364966	ArgumentList	pgls -> memory		8364645	1					
ANR	8364967	Argument	pgls -> memory		8364645	0					
ANR	8364968	PtrMemberAccess	pgls -> memory		8364645	0					
ANR	8364969	Identifier	pgls		8364645	0					
ANR	8364970	Identifier	memory		8364645	1					
ANR	8364971	Argument	pargs		8364645	1					
ANR	8364972	Identifier	pargs		8364645	0					
ANR	8364973	Argument	& posture		8364645	2					
ANR	8364974	UnaryOperationExpression	& posture		8364645	0					
ANR	8364975	UnaryOperator	&		8364645	0					
ANR	8364976	Identifier	posture		8364645	1					
ANR	8364977	ReturnStatement	return e_Range ;	118:24:4441:4455	8364645	1	True				
ANR	8364978	Identifier	e_Range		8364645	0					
ANR	8364979	IfStatement	if ( pfp -> style != posture )		8364645	2					
ANR	8364980	Condition	pfp -> style != posture	119:24:4481:4501	8364645	0	True				
ANR	8364981	EqualityExpression	pfp -> style != posture		8364645	0		!=			
ANR	8364982	PtrMemberAccess	pfp -> style		8364645	0					
ANR	8364983	Identifier	pfp		8364645	0					
ANR	8364984	Identifier	style		8364645	1					
ANR	8364985	Identifier	posture		8364645	1					
ANR	8364986	ExpressionStatement	"pfp -> style = posture , pargs -> phase |= 2"	120:24:4528:4567	8364645	1	True				
ANR	8364987	Expression	"pfp -> style = posture , pargs -> phase |= 2"		8364645	0					
ANR	8364988	AssignmentExpression	pfp -> style = posture		8364645	0		=			
ANR	8364989	PtrMemberAccess	pfp -> style		8364645	0					
ANR	8364990	Identifier	pfp		8364645	0					
ANR	8364991	Identifier	style		8364645	1					
ANR	8364992	Identifier	posture		8364645	1					
ANR	8364993	AssignmentExpression	pargs -> phase |= 2		8364645	1		|=			
ANR	8364994	PtrMemberAccess	pargs -> phase		8364645	0					
ANR	8364995	Identifier	pargs		8364645	0					
ANR	8364996	Identifier	phase		8364645	1					
ANR	8364997	PrimaryExpression	2		8364645	1					
ANR	8364998	BreakStatement	break ;	123:16:4604:4609	8364645	14	True				
ANR	8364999	Label	case 6 :	124:12:4623:4629	8364645	15	True				
ANR	8365000	CompoundStatement		91:20:3645:3655	8364645	16					
ANR	8365001	IdentifierDeclStatement	int weight ;	126:20:4700:4710	8364645	0	True				
ANR	8365002	IdentifierDecl	weight		8364645	0					
ANR	8365003	IdentifierDeclType	int		8364645	0					
ANR	8365004	Identifier	weight		8364645	1					
ANR	8365005	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & weight ) )"		8364645	1					
ANR	8365006	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & weight )"	128:24:4737:4781	8364645	0	True				
ANR	8365007	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & weight )"		8364645	0					
ANR	8365008	UnaryOperator	!		8364645	0					
ANR	8365009	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & weight )"		8364645	1					
ANR	8365010	Callee	hpgl_arg_c_int		8364645	0					
ANR	8365011	Identifier	hpgl_arg_c_int		8364645	0					
ANR	8365012	ArgumentList	pgls -> memory		8364645	1					
ANR	8365013	Argument	pgls -> memory		8364645	0					
ANR	8365014	PtrMemberAccess	pgls -> memory		8364645	0					
ANR	8365015	Identifier	pgls		8364645	0					
ANR	8365016	Identifier	memory		8364645	1					
ANR	8365017	Argument	pargs		8364645	1					
ANR	8365018	Identifier	pargs		8364645	0					
ANR	8365019	Argument	& weight		8364645	2					
ANR	8365020	UnaryOperationExpression	& weight		8364645	0					
ANR	8365021	UnaryOperator	&		8364645	0					
ANR	8365022	Identifier	weight		8364645	1					
ANR	8365023	ReturnStatement	return e_Range ;	129:24:4808:4822	8364645	1	True				
ANR	8365024	Identifier	e_Range		8364645	0					
ANR	8365025	IfStatement	if ( pfp -> stroke_weight != weight )		8364645	2					
ANR	8365026	Condition	pfp -> stroke_weight != weight	130:24:4848:4875	8364645	0	True				
ANR	8365027	EqualityExpression	pfp -> stroke_weight != weight		8364645	0		!=			
ANR	8365028	PtrMemberAccess	pfp -> stroke_weight		8364645	0					
ANR	8365029	Identifier	pfp		8364645	0					
ANR	8365030	Identifier	stroke_weight		8364645	1					
ANR	8365031	Identifier	weight		8364645	1					
ANR	8365032	IfStatement	if ( ( ( weight >= - 7 ) && ( weight <= 7 ) ) || ( weight == 9999 ) )		8364645	1					
ANR	8365033	Condition	( ( weight >= - 7 ) && ( weight <= 7 ) ) || ( weight == 9999 )	131:28:4906:4986	8364645	0	True				
ANR	8365034	OrExpression	( ( weight >= - 7 ) && ( weight <= 7 ) ) || ( weight == 9999 )		8364645	0		||			
ANR	8365035	AndExpression	( weight >= - 7 ) && ( weight <= 7 )		8364645	0		&&			
ANR	8365036	RelationalExpression	weight >= - 7		8364645	0		>=			
ANR	8365037	Identifier	weight		8364645	0					
ANR	8365038	UnaryOperationExpression	- 7		8364645	1					
ANR	8365039	UnaryOperator	-		8364645	0					
ANR	8365040	PrimaryExpression	7		8364645	1					
ANR	8365041	RelationalExpression	weight <= 7		8364645	1		<=			
ANR	8365042	Identifier	weight		8364645	0					
ANR	8365043	PrimaryExpression	7		8364645	1					
ANR	8365044	EqualityExpression	weight == 9999		8364645	1		==			
ANR	8365045	Identifier	weight		8364645	0					
ANR	8365046	PrimaryExpression	9999		8364645	1					
ANR	8365047	ExpressionStatement	"pfp -> stroke_weight = weight , pargs -> phase |= 2"	133:28:5017:5063	8364645	1	True				
ANR	8365048	Expression	"pfp -> stroke_weight = weight , pargs -> phase |= 2"		8364645	0					
ANR	8365049	AssignmentExpression	pfp -> stroke_weight = weight		8364645	0		=			
ANR	8365050	PtrMemberAccess	pfp -> stroke_weight		8364645	0					
ANR	8365051	Identifier	pfp		8364645	0					
ANR	8365052	Identifier	stroke_weight		8364645	1					
ANR	8365053	Identifier	weight		8364645	1					
ANR	8365054	AssignmentExpression	pargs -> phase |= 2		8364645	1		|=			
ANR	8365055	PtrMemberAccess	pargs -> phase		8364645	0					
ANR	8365056	Identifier	pargs		8364645	0					
ANR	8365057	Identifier	phase		8364645	1					
ANR	8365058	PrimaryExpression	2		8364645	1					
ANR	8365059	BreakStatement	break ;	135:16:5099:5104	8364645	17	True				
ANR	8365060	Label	case 7 :	136:12:5118:5124	8364645	18	True				
ANR	8365061	CompoundStatement		103:20:4135:4145	8364645	19					
ANR	8365062	IdentifierDeclStatement	int32 face ;	138:20:5190:5200	8364645	0	True				
ANR	8365063	IdentifierDecl	face		8364645	0					
ANR	8365064	IdentifierDeclType	int32		8364645	0					
ANR	8365065	Identifier	face		8364645	1					
ANR	8365066	IfStatement	"if ( ! hpgl_arg_int ( pgls -> memory , pargs , & face ) )"		8364645	1					
ANR	8365067	Condition	"! hpgl_arg_int ( pgls -> memory , pargs , & face )"	140:24:5227:5267	8364645	0	True				
ANR	8365068	UnaryOperationExpression	"! hpgl_arg_int ( pgls -> memory , pargs , & face )"		8364645	0					
ANR	8365069	UnaryOperator	!		8364645	0					
ANR	8365070	CallExpression	"hpgl_arg_int ( pgls -> memory , pargs , & face )"		8364645	1					
ANR	8365071	Callee	hpgl_arg_int		8364645	0					
ANR	8365072	Identifier	hpgl_arg_int		8364645	0					
ANR	8365073	ArgumentList	pgls -> memory		8364645	1					
ANR	8365074	Argument	pgls -> memory		8364645	0					
ANR	8365075	PtrMemberAccess	pgls -> memory		8364645	0					
ANR	8365076	Identifier	pgls		8364645	0					
ANR	8365077	Identifier	memory		8364645	1					
ANR	8365078	Argument	pargs		8364645	1					
ANR	8365079	Identifier	pargs		8364645	0					
ANR	8365080	Argument	& face		8364645	2					
ANR	8365081	UnaryOperationExpression	& face		8364645	0					
ANR	8365082	UnaryOperator	&		8364645	0					
ANR	8365083	Identifier	face		8364645	1					
ANR	8365084	ReturnStatement	return e_Range ;	141:24:5294:5308	8364645	1	True				
ANR	8365085	Identifier	e_Range		8364645	0					
ANR	8365086	IfStatement	if ( pfp -> typeface_family != ( uint ) face )		8364645	2					
ANR	8365087	Condition	pfp -> typeface_family != ( uint ) face	142:24:5334:5368	8364645	0	True				
ANR	8365088	EqualityExpression	pfp -> typeface_family != ( uint ) face		8364645	0		!=			
ANR	8365089	PtrMemberAccess	pfp -> typeface_family		8364645	0					
ANR	8365090	Identifier	pfp		8364645	0					
ANR	8365091	Identifier	typeface_family		8364645	1					
ANR	8365092	CastExpression	( uint ) face		8364645	1					
ANR	8365093	CastTarget	uint		8364645	0					
ANR	8365094	Identifier	face		8364645	1					
ANR	8365095	ExpressionStatement	"pfp -> typeface_family = ( uint ) face , pargs -> phase |= 2"	143:24:5395:5448	8364645	1	True				
ANR	8365096	Expression	"pfp -> typeface_family = ( uint ) face , pargs -> phase |= 2"		8364645	0					
ANR	8365097	AssignmentExpression	pfp -> typeface_family = ( uint ) face		8364645	0		=			
ANR	8365098	PtrMemberAccess	pfp -> typeface_family		8364645	0					
ANR	8365099	Identifier	pfp		8364645	0					
ANR	8365100	Identifier	typeface_family		8364645	1					
ANR	8365101	CastExpression	( uint ) face		8364645	1					
ANR	8365102	CastTarget	uint		8364645	0					
ANR	8365103	Identifier	face		8364645	1					
ANR	8365104	AssignmentExpression	pargs -> phase |= 2		8364645	1		|=			
ANR	8365105	PtrMemberAccess	pargs -> phase		8364645	0					
ANR	8365106	Identifier	pargs		8364645	0					
ANR	8365107	Identifier	phase		8364645	1					
ANR	8365108	PrimaryExpression	2		8364645	1					
ANR	8365109	BreakStatement	break ;	145:16:5484:5489	8364645	20	True				
ANR	8365110	Label	default :	146:12:5503:5510	8364645	21	True				
ANR	8365111	Identifier	default		8364645	0					
ANR	8365112	ReturnStatement	return e_Range ;	147:16:5528:5542	8364645	22	True				
ANR	8365113	Identifier	e_Range		8364645	0					
ANR	8365114	IfStatement	if ( ! pargs -> phase )		8364645	12					
ANR	8365115	Condition	! pargs -> phase	150:8:5627:5639	8364645	0	True				
ANR	8365116	UnaryOperationExpression	! pargs -> phase		8364645	0					
ANR	8365117	UnaryOperator	!		8364645	0					
ANR	8365118	PtrMemberAccess	pargs -> phase		8364645	1					
ANR	8365119	Identifier	pargs		8364645	0					
ANR	8365120	Identifier	phase		8364645	1					
ANR	8365121	ExpressionStatement	hpgl_default_font_params ( pfs )	151:8:5650:5679	8364645	1	True				
ANR	8365122	CallExpression	hpgl_default_font_params ( pfs )		8364645	0					
ANR	8365123	Callee	hpgl_default_font_params		8364645	0					
ANR	8365124	Identifier	hpgl_default_font_params		8364645	0					
ANR	8365125	ArgumentList	pfs		8364645	1					
ANR	8365126	Argument	pfs		8364645	0					
ANR	8365127	Identifier	pfs		8364645	0					
ANR	8365128	IfStatement	if ( pargs -> phase != 1 )		8364645	13					
ANR	8365129	Condition	pargs -> phase != 1	152:8:5689:5705	8364645	0	True				
ANR	8365130	EqualityExpression	pargs -> phase != 1		8364645	0		!=			
ANR	8365131	PtrMemberAccess	pargs -> phase		8364645	0					
ANR	8365132	Identifier	pargs		8364645	0					
ANR	8365133	Identifier	phase		8364645	1					
ANR	8365134	PrimaryExpression	1		8364645	1					
ANR	8365135	CompoundStatement		117:27:4653:4653	8364645	1					
ANR	8365136	ExpressionStatement	pfs -> font = 0	153:8:5785:5798	8364645	0	True				
ANR	8365137	AssignmentExpression	pfs -> font = 0		8364645	0		=			
ANR	8365138	PtrMemberAccess	pfs -> font		8364645	0					
ANR	8365139	Identifier	pfs		8364645	0					
ANR	8365140	Identifier	font		8364645	1					
ANR	8365141	PrimaryExpression	0		8364645	1					
ANR	8365142	IfStatement	if ( index == pgls -> g . font_selected )		8364645	1					
ANR	8365143	Condition	index == pgls -> g . font_selected	154:12:5812:5841	8364645	0	True				
ANR	8365144	EqualityExpression	index == pgls -> g . font_selected		8364645	0		==			
ANR	8365145	Identifier	index		8364645	0					
ANR	8365146	MemberAccess	pgls -> g . font_selected		8364645	1					
ANR	8365147	PtrMemberAccess	pgls -> g		8364645	0					
ANR	8365148	Identifier	pgls		8364645	0					
ANR	8365149	Identifier	g		8364645	1					
ANR	8365150	Identifier	font_selected		8364645	1					
ANR	8365151	ExpressionStatement	pgls -> g . font = 0	155:12:5856:5872	8364645	1	True				
ANR	8365152	AssignmentExpression	pgls -> g . font = 0		8364645	0		=			
ANR	8365153	MemberAccess	pgls -> g . font		8364645	0					
ANR	8365154	PtrMemberAccess	pgls -> g		8364645	0					
ANR	8365155	Identifier	pgls		8364645	0					
ANR	8365156	Identifier	g		8364645	1					
ANR	8365157	Identifier	font		8364645	1					
ANR	8365158	PrimaryExpression	0		8364645	1					
ANR	8365159	ReturnStatement	return 0 ;	157:4:5884:5892	8364645	14	True				
ANR	8365160	PrimaryExpression	0		8364645	0					
ANR	8365161	ReturnType	static int		8364645	1					
ANR	8365162	Identifier	hpgl_font_definition		8364645	2					
ANR	8365163	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls , int index"		8364645	3					
ANR	8365164	Parameter	hpgl_args_t * pargs	35:21:1001:1019	8364645	0	True				
ANR	8365165	ParameterType	hpgl_args_t *		8364645	0					
ANR	8365166	Identifier	pargs		8364645	1					
ANR	8365167	Parameter	hpgl_state_t * pgls	35:42:1022:1040	8364645	1	True				
ANR	8365168	ParameterType	hpgl_state_t *		8364645	0					
ANR	8365169	Identifier	pgls		8364645	1					
ANR	8365170	Parameter	int index	35:63:1043:1051	8364645	2	True				
ANR	8365171	ParameterType	int		8364645	0					
ANR	8365172	Identifier	index		8364645	1					
ANR	8365173	CFGEntryNode	ENTRY		8364645		True				
ANR	8365174	CFGExitNode	EXIT		8364645		True				
ANR	8365175	Symbol	& kind		8364645						
ANR	8365176	Symbol	pfp -> typeface_family		8364645						
ANR	8365177	Symbol	pfp -> symbol_set		8364645						
ANR	8365178	Symbol	pgls		8364645						
ANR	8365179	Symbol	& height		8364645						
ANR	8365180	Symbol	pgls -> g . font		8364645						
ANR	8365181	Symbol	spacing		8364645						
ANR	8365182	Symbol	pargs		8364645						
ANR	8365183	Symbol	pfs -> selected_id		8364645						
ANR	8365184	Symbol	* pgls		8364645						
ANR	8365185	Symbol	& spacing		8364645						
ANR	8365186	Symbol	pfs -> font		8364645						
ANR	8365187	Symbol	pgls -> memory		8364645						
ANR	8365188	Symbol	& sset		8364645						
ANR	8365189	Symbol	pargs -> phase		8364645						
ANR	8365190	Symbol	pfp -> proportional_spacing		8364645						
ANR	8365191	Symbol	pgls -> g		8364645						
ANR	8365192	Symbol	pitch		8364645						
ANR	8365193	Symbol	pfp -> height_4ths		8364645						
ANR	8365194	Symbol	& face		8364645						
ANR	8365195	Symbol	height		8364645						
ANR	8365196	Symbol	e_Range		8364645						
ANR	8365197	Symbol	pl_fp_pitch_per_inch		8364645						
ANR	8365198	Symbol	* pfp		8364645						
ANR	8365199	Symbol	trunc_height_4ths		8364645						
ANR	8365200	Symbol	hpgl_arg_int		8364645						
ANR	8365201	Symbol	& pitch		8364645						
ANR	8365202	Symbol	kind		8364645						
ANR	8365203	Symbol	posture		8364645						
ANR	8365204	Symbol	* pfs		8364645						
ANR	8365205	Symbol	index		8364645						
ANR	8365206	Symbol	weight		8364645						
ANR	8365207	Symbol	pfp -> stroke_weight		8364645						
ANR	8365208	Symbol	hpgl_arg_c_int		8364645						
ANR	8365209	Symbol	pfp -> style		8364645						
ANR	8365210	Symbol	pgls -> g . font_selected		8364645						
ANR	8365211	Symbol	pgls -> g . font_selection		8364645						
ANR	8365212	Symbol	* pargs		8364645						
ANR	8365213	Symbol	& posture		8364645						
ANR	8365214	Symbol	face		8364645						
ANR	8365215	Symbol	& weight		8364645						
ANR	8365216	Symbol	sset		8364645						
ANR	8365217	Symbol	pfp		8364645						
ANR	8365218	Symbol	pfs		8364645						
ANR	8365219	Symbol	hpgl_arg_c_real		8364645						
ANR	8365220	Function	hpgl_label_direction	160:0:5943:6572							
ANR	8365221	FunctionDef	"hpgl_label_direction (hpgl_args_t * pargs , hpgl_state_t * pgls , bool relative)"		8365220	0					
ANR	8365222	CompoundStatement		162:0:6032:6572	8365220	0					
ANR	8365223	IdentifierDeclStatement	"hpgl_real_t run = 1 , rise = 0 ;"	163:4:6038:6067	8365220	0	True				
ANR	8365224	IdentifierDecl	run = 1		8365220	0					
ANR	8365225	IdentifierDeclType	hpgl_real_t		8365220	0					
ANR	8365226	Identifier	run		8365220	1					
ANR	8365227	AssignmentExpression	run = 1		8365220	2		=			
ANR	8365228	Identifier	run		8365220	0					
ANR	8365229	PrimaryExpression	1		8365220	1					
ANR	8365230	IdentifierDecl	rise = 0		8365220	1					
ANR	8365231	IdentifierDeclType	hpgl_real_t		8365220	0					
ANR	8365232	Identifier	rise		8365220	1					
ANR	8365233	AssignmentExpression	rise = 0		8365220	2		=			
ANR	8365234	Identifier	rise		8365220	0					
ANR	8365235	PrimaryExpression	0		8365220	1					
ANR	8365236	IfStatement	"if ( hpgl_arg_c_real ( pgls -> memory , pargs , & run ) )"		8365220	1					
ANR	8365237	Condition	"hpgl_arg_c_real ( pgls -> memory , pargs , & run )"	165:8:6078:6119	8365220	0	True				
ANR	8365238	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & run )"		8365220	0					
ANR	8365239	Callee	hpgl_arg_c_real		8365220	0					
ANR	8365240	Identifier	hpgl_arg_c_real		8365220	0					
ANR	8365241	ArgumentList	pgls -> memory		8365220	1					
ANR	8365242	Argument	pgls -> memory		8365220	0					
ANR	8365243	PtrMemberAccess	pgls -> memory		8365220	0					
ANR	8365244	Identifier	pgls		8365220	0					
ANR	8365245	Identifier	memory		8365220	1					
ANR	8365246	Argument	pargs		8365220	1					
ANR	8365247	Identifier	pargs		8365220	0					
ANR	8365248	Argument	& run		8365220	2					
ANR	8365249	UnaryOperationExpression	& run		8365220	0					
ANR	8365250	UnaryOperator	&		8365220	0					
ANR	8365251	Identifier	run		8365220	1					
ANR	8365252	CompoundStatement		4:52:89:89	8365220	1					
ANR	8365253	IfStatement	"if ( ! hpgl_arg_c_real ( pgls -> memory , pargs , & rise ) || ( run == 0 && rise == 0 ) )"		8365220	0					
ANR	8365254	Condition	"! hpgl_arg_c_real ( pgls -> memory , pargs , & rise ) || ( run == 0 && rise == 0 )"	166:12:6136:6218	8365220	0	True				
ANR	8365255	OrExpression	"! hpgl_arg_c_real ( pgls -> memory , pargs , & rise ) || ( run == 0 && rise == 0 )"		8365220	0		||			
ANR	8365256	UnaryOperationExpression	"! hpgl_arg_c_real ( pgls -> memory , pargs , & rise )"		8365220	0					
ANR	8365257	UnaryOperator	!		8365220	0					
ANR	8365258	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & rise )"		8365220	1					
ANR	8365259	Callee	hpgl_arg_c_real		8365220	0					
ANR	8365260	Identifier	hpgl_arg_c_real		8365220	0					
ANR	8365261	ArgumentList	pgls -> memory		8365220	1					
ANR	8365262	Argument	pgls -> memory		8365220	0					
ANR	8365263	PtrMemberAccess	pgls -> memory		8365220	0					
ANR	8365264	Identifier	pgls		8365220	0					
ANR	8365265	Identifier	memory		8365220	1					
ANR	8365266	Argument	pargs		8365220	1					
ANR	8365267	Identifier	pargs		8365220	0					
ANR	8365268	Argument	& rise		8365220	2					
ANR	8365269	UnaryOperationExpression	& rise		8365220	0					
ANR	8365270	UnaryOperator	&		8365220	0					
ANR	8365271	Identifier	rise		8365220	1					
ANR	8365272	AndExpression	run == 0 && rise == 0		8365220	1		&&			
ANR	8365273	EqualityExpression	run == 0		8365220	0		==			
ANR	8365274	Identifier	run		8365220	0					
ANR	8365275	PrimaryExpression	0		8365220	1					
ANR	8365276	EqualityExpression	rise == 0		8365220	1		==			
ANR	8365277	Identifier	rise		8365220	0					
ANR	8365278	PrimaryExpression	0		8365220	1					
ANR	8365279	ReturnStatement	return e_Range ;	168:12:6233:6247	8365220	1	True				
ANR	8365280	Identifier	e_Range		8365220	0					
ANR	8365281	CompoundStatement		9:12:238:267	8365220	1					
ANR	8365282	IdentifierDeclStatement	"double hyp = hypot ( run , rise ) ;"	170:12:6271:6300	8365220	0	True				
ANR	8365283	IdentifierDecl	"hyp = hypot ( run , rise )"		8365220	0					
ANR	8365284	IdentifierDeclType	double		8365220	0					
ANR	8365285	Identifier	hyp		8365220	1					
ANR	8365286	AssignmentExpression	"hyp = hypot ( run , rise )"		8365220	2		=			
ANR	8365287	Identifier	hyp		8365220	0					
ANR	8365288	CallExpression	"hypot ( run , rise )"		8365220	1					
ANR	8365289	Callee	hypot		8365220	0					
ANR	8365290	Identifier	hypot		8365220	0					
ANR	8365291	ArgumentList	run		8365220	1					
ANR	8365292	Argument	run		8365220	0					
ANR	8365293	Identifier	run		8365220	0					
ANR	8365294	Argument	rise		8365220	1					
ANR	8365295	Identifier	rise		8365220	0					
ANR	8365296	ExpressionStatement	run /= hyp	172:12:6315:6325	8365220	1	True				
ANR	8365297	AssignmentExpression	run /= hyp		8365220	0		/=			
ANR	8365298	Identifier	run		8365220	0					
ANR	8365299	Identifier	hyp		8365220	1					
ANR	8365300	ExpressionStatement	rise /= hyp	173:12:6339:6350	8365220	2	True				
ANR	8365301	AssignmentExpression	rise /= hyp		8365220	0		/=			
ANR	8365302	Identifier	rise		8365220	0					
ANR	8365303	Identifier	hyp		8365220	1					
ANR	8365304	ExpressionStatement	pgls -> g . character . direction . x = run	176:4:6372:6407	8365220	2	True				
ANR	8365305	AssignmentExpression	pgls -> g . character . direction . x = run		8365220	0		=			
ANR	8365306	MemberAccess	pgls -> g . character . direction . x		8365220	0					
ANR	8365307	MemberAccess	pgls -> g . character . direction		8365220	0					
ANR	8365308	MemberAccess	pgls -> g . character		8365220	0					
ANR	8365309	PtrMemberAccess	pgls -> g		8365220	0					
ANR	8365310	Identifier	pgls		8365220	0					
ANR	8365311	Identifier	g		8365220	1					
ANR	8365312	Identifier	character		8365220	1					
ANR	8365313	Identifier	direction		8365220	1					
ANR	8365314	Identifier	x		8365220	1					
ANR	8365315	Identifier	run		8365220	1					
ANR	8365316	ExpressionStatement	pgls -> g . character . direction . y = rise	177:4:6413:6449	8365220	3	True				
ANR	8365317	AssignmentExpression	pgls -> g . character . direction . y = rise		8365220	0		=			
ANR	8365318	MemberAccess	pgls -> g . character . direction . y		8365220	0					
ANR	8365319	MemberAccess	pgls -> g . character . direction		8365220	0					
ANR	8365320	MemberAccess	pgls -> g . character		8365220	0					
ANR	8365321	PtrMemberAccess	pgls -> g		8365220	0					
ANR	8365322	Identifier	pgls		8365220	0					
ANR	8365323	Identifier	g		8365220	1					
ANR	8365324	Identifier	character		8365220	1					
ANR	8365325	Identifier	direction		8365220	1					
ANR	8365326	Identifier	y		8365220	1					
ANR	8365327	Identifier	rise		8365220	1					
ANR	8365328	ExpressionStatement	pgls -> g . character . direction_relative = relative	178:4:6455:6502	8365220	4	True				
ANR	8365329	AssignmentExpression	pgls -> g . character . direction_relative = relative		8365220	0		=			
ANR	8365330	MemberAccess	pgls -> g . character . direction_relative		8365220	0					
ANR	8365331	MemberAccess	pgls -> g . character		8365220	0					
ANR	8365332	PtrMemberAccess	pgls -> g		8365220	0					
ANR	8365333	Identifier	pgls		8365220	0					
ANR	8365334	Identifier	g		8365220	1					
ANR	8365335	Identifier	character		8365220	1					
ANR	8365336	Identifier	direction_relative		8365220	1					
ANR	8365337	Identifier	relative		8365220	1					
ANR	8365338	ExpressionStatement	hpgl_call ( hpgl_update_carriage_return_pos ( pgls ) )	179:4:6508:6556	8365220	5	True				
ANR	8365339	CallExpression	hpgl_call ( hpgl_update_carriage_return_pos ( pgls ) )		8365220	0					
ANR	8365340	Callee	hpgl_call		8365220	0					
ANR	8365341	Identifier	hpgl_call		8365220	0					
ANR	8365342	ArgumentList	hpgl_update_carriage_return_pos ( pgls )		8365220	1					
ANR	8365343	Argument	hpgl_update_carriage_return_pos ( pgls )		8365220	0					
ANR	8365344	CallExpression	hpgl_update_carriage_return_pos ( pgls )		8365220	0					
ANR	8365345	Callee	hpgl_update_carriage_return_pos		8365220	0					
ANR	8365346	Identifier	hpgl_update_carriage_return_pos		8365220	0					
ANR	8365347	ArgumentList	pgls		8365220	1					
ANR	8365348	Argument	pgls		8365220	0					
ANR	8365349	Identifier	pgls		8365220	0					
ANR	8365350	ReturnStatement	return 0 ;	180:4:6562:6570	8365220	6	True				
ANR	8365351	PrimaryExpression	0		8365220	0					
ANR	8365352	ReturnType	static int		8365220	1					
ANR	8365353	Identifier	hpgl_label_direction		8365220	2					
ANR	8365354	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls , bool relative"		8365220	3					
ANR	8365355	Parameter	hpgl_args_t * pargs	161:21:5975:5993	8365220	0	True				
ANR	8365356	ParameterType	hpgl_args_t *		8365220	0					
ANR	8365357	Identifier	pargs		8365220	1					
ANR	8365358	Parameter	hpgl_state_t * pgls	161:42:5996:6014	8365220	1	True				
ANR	8365359	ParameterType	hpgl_state_t *		8365220	0					
ANR	8365360	Identifier	pgls		8365220	1					
ANR	8365361	Parameter	bool relative	161:63:6017:6029	8365220	2	True				
ANR	8365362	ParameterType	bool		8365220	0					
ANR	8365363	Identifier	relative		8365220	1					
ANR	8365364	CFGEntryNode	ENTRY		8365220		True				
ANR	8365365	CFGExitNode	EXIT		8365220		True				
ANR	8365366	Symbol	e_Range		8365220						
ANR	8365367	Symbol	pgls -> g . character . direction_relative		8365220						
ANR	8365368	Symbol	pgls		8365220						
ANR	8365369	Symbol	run		8365220						
ANR	8365370	Symbol	pgls -> g . character		8365220						
ANR	8365371	Symbol	pgls -> g . character . direction . y		8365220						
ANR	8365372	Symbol	pgls -> g . character . direction . x		8365220						
ANR	8365373	Symbol	pgls -> g . character . direction		8365220						
ANR	8365374	Symbol	& rise		8365220						
ANR	8365375	Symbol	pargs		8365220						
ANR	8365376	Symbol	& run		8365220						
ANR	8365377	Symbol	* pgls		8365220						
ANR	8365378	Symbol	hypot		8365220						
ANR	8365379	Symbol	pgls -> memory		8365220						
ANR	8365380	Symbol	pgls -> g		8365220						
ANR	8365381	Symbol	rise		8365220						
ANR	8365382	Symbol	hpgl_arg_c_real		8365220						
ANR	8365383	Symbol	hyp		8365220						
ANR	8365384	Symbol	hpgl_update_carriage_return_pos		8365220						
ANR	8365385	Symbol	relative		8365220						
ANR	8365386	DeclStmt									
ANR	8365387	Decl							int	"int ( hpgl_state_t * pgls , int index )"	hpgl_select_font
ANR	8365388	Function	hpgl_select_font_by_id	187:0:6697:7926							
ANR	8365389	FunctionDef	"hpgl_select_font_by_id (hpgl_args_t * pargs , hpgl_state_t * pgls , int index)"		8365388	0					
ANR	8365390	CompoundStatement		189:0:6784:7926	8365388	0					
ANR	8365391	IdentifierDeclStatement	pcl_font_selection_t * pfs = & pgls -> g . font_selection [ index ] ;	190:4:6790:6848	8365388	0	True				
ANR	8365392	IdentifierDecl	* pfs = & pgls -> g . font_selection [ index ]		8365388	0					
ANR	8365393	IdentifierDeclType	pcl_font_selection_t *		8365388	0					
ANR	8365394	Identifier	pfs		8365388	1					
ANR	8365395	AssignmentExpression	* pfs = & pgls -> g . font_selection [ index ]		8365388	2		=			
ANR	8365396	Identifier	pfs		8365388	0					
ANR	8365397	UnaryOperationExpression	& pgls -> g . font_selection [ index ]		8365388	1					
ANR	8365398	UnaryOperator	&		8365388	0					
ANR	8365399	ArrayIndexing	pgls -> g . font_selection [ index ]		8365388	1					
ANR	8365400	MemberAccess	pgls -> g . font_selection		8365388	0					
ANR	8365401	PtrMemberAccess	pgls -> g		8365388	0					
ANR	8365402	Identifier	pgls		8365388	0					
ANR	8365403	Identifier	g		8365388	1					
ANR	8365404	Identifier	font_selection		8365388	1					
ANR	8365405	Identifier	index		8365388	1					
ANR	8365406	IdentifierDeclStatement	int32 id ;	191:4:6854:6862	8365388	1	True				
ANR	8365407	IdentifierDecl	id		8365388	0					
ANR	8365408	IdentifierDeclType	int32		8365388	0					
ANR	8365409	Identifier	id		8365388	1					
ANR	8365410	IdentifierDeclStatement	int code ;	192:4:6868:6876	8365388	2	True				
ANR	8365411	IdentifierDecl	code		8365388	0					
ANR	8365412	IdentifierDeclType	int		8365388	0					
ANR	8365413	Identifier	code		8365388	1					
ANR	8365414	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & id ) || id < 0 )"		8365388	3					
ANR	8365415	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & id ) || id < 0"	194:8:6887:6937	8365388	0	True				
ANR	8365416	OrExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & id ) || id < 0"		8365388	0		||			
ANR	8365417	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & id )"		8365388	0					
ANR	8365418	UnaryOperator	!		8365388	0					
ANR	8365419	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & id )"		8365388	1					
ANR	8365420	Callee	hpgl_arg_c_int		8365388	0					
ANR	8365421	Identifier	hpgl_arg_c_int		8365388	0					
ANR	8365422	ArgumentList	pgls -> memory		8365388	1					
ANR	8365423	Argument	pgls -> memory		8365388	0					
ANR	8365424	PtrMemberAccess	pgls -> memory		8365388	0					
ANR	8365425	Identifier	pgls		8365388	0					
ANR	8365426	Identifier	memory		8365388	1					
ANR	8365427	Argument	pargs		8365388	1					
ANR	8365428	Identifier	pargs		8365388	0					
ANR	8365429	Argument	& id		8365388	2					
ANR	8365430	UnaryOperationExpression	& id		8365388	0					
ANR	8365431	UnaryOperator	&		8365388	0					
ANR	8365432	Identifier	id		8365388	1					
ANR	8365433	RelationalExpression	id < 0		8365388	1		<			
ANR	8365434	Identifier	id		8365388	0					
ANR	8365435	PrimaryExpression	0		8365388	1					
ANR	8365436	ReturnStatement	return e_Range ;	195:8:6948:6962	8365388	1	True				
ANR	8365437	Identifier	e_Range		8365388	0					
ANR	8365438	ExpressionStatement	"code = pcl_select_font_by_id ( pfs , id , pgls )"	196:4:6968:7038	8365388	4	True				
ANR	8365439	AssignmentExpression	"code = pcl_select_font_by_id ( pfs , id , pgls )"		8365388	0		=			
ANR	8365440	Identifier	code		8365388	0					
ANR	8365441	CallExpression	"pcl_select_font_by_id ( pfs , id , pgls )"		8365388	1					
ANR	8365442	Callee	pcl_select_font_by_id		8365388	0					
ANR	8365443	Identifier	pcl_select_font_by_id		8365388	0					
ANR	8365444	ArgumentList	pfs		8365388	1					
ANR	8365445	Argument	pfs		8365388	0					
ANR	8365446	Identifier	pfs		8365388	0					
ANR	8365447	Argument	id		8365388	1					
ANR	8365448	Identifier	id		8365388	0					
ANR	8365449	Argument	pgls		8365388	2					
ANR	8365450	Identifier	pgls		8365388	0					
ANR	8365451	SwitchStatement	switch ( code )		8365388	5					
ANR	8365452	Condition	code	197:12:7052:7055	8365388	0	True				
ANR	8365453	Identifier	code		8365388	0					
ANR	8365454	CompoundStatement		9:18:273:273	8365388	1					
ANR	8365455	Label	default :	198:8:7068:7075	8365388	0	True				
ANR	8365456	Identifier	default		8365388	0					
ANR	8365457	ReturnStatement	return code ;	199:12:7115:7126	8365388	1	True				
ANR	8365458	Identifier	code		8365388	0					
ANR	8365459	Label	case 1 :	200:8:7136:7142	8365388	2	True				
ANR	8365460	ReturnStatement	return 0 ;	201:12:7201:7209	8365388	3	True				
ANR	8365461	PrimaryExpression	0		8365388	0					
ANR	8365462	Label	case 0 :	202:8:7219:7225	8365388	4	True				
ANR	8365463	BreakStatement	break ;	203:12:7269:7274	8365388	5	True				
ANR	8365464	ExpressionStatement	pgls -> g . font_selection [ index ] . font = pfs -> font	205:4:7286:7332	8365388	6	True				
ANR	8365465	AssignmentExpression	pgls -> g . font_selection [ index ] . font = pfs -> font		8365388	0		=			
ANR	8365466	MemberAccess	pgls -> g . font_selection [ index ] . font		8365388	0					
ANR	8365467	ArrayIndexing	pgls -> g . font_selection [ index ]		8365388	0					
ANR	8365468	MemberAccess	pgls -> g . font_selection		8365388	0					
ANR	8365469	PtrMemberAccess	pgls -> g		8365388	0					
ANR	8365470	Identifier	pgls		8365388	0					
ANR	8365471	Identifier	g		8365388	1					
ANR	8365472	Identifier	font_selection		8365388	1					
ANR	8365473	Identifier	index		8365388	1					
ANR	8365474	Identifier	font		8365388	1					
ANR	8365475	PtrMemberAccess	pfs -> font		8365388	1					
ANR	8365476	Identifier	pfs		8365388	0					
ANR	8365477	Identifier	font		8365388	1					
ANR	8365478	ExpressionStatement	pgls -> g . font_selection [ index ] . map = pfs -> map	206:4:7338:7382	8365388	7	True				
ANR	8365479	AssignmentExpression	pgls -> g . font_selection [ index ] . map = pfs -> map		8365388	0		=			
ANR	8365480	MemberAccess	pgls -> g . font_selection [ index ] . map		8365388	0					
ANR	8365481	ArrayIndexing	pgls -> g . font_selection [ index ]		8365388	0					
ANR	8365482	MemberAccess	pgls -> g . font_selection		8365388	0					
ANR	8365483	PtrMemberAccess	pgls -> g		8365388	0					
ANR	8365484	Identifier	pgls		8365388	0					
ANR	8365485	Identifier	g		8365388	1					
ANR	8365486	Identifier	font_selection		8365388	1					
ANR	8365487	Identifier	index		8365388	1					
ANR	8365488	Identifier	map		8365388	1					
ANR	8365489	PtrMemberAccess	pfs -> map		8365388	1					
ANR	8365490	Identifier	pfs		8365388	0					
ANR	8365491	Identifier	map		8365388	1					
ANR	8365492	IfStatement	if ( pfs -> font -> scaling_technology == plfst_bitmap )		8365388	8					
ANR	8365493	Condition	pfs -> font -> scaling_technology == plfst_bitmap	211:8:7510:7554	8365388	0	True				
ANR	8365494	EqualityExpression	pfs -> font -> scaling_technology == plfst_bitmap		8365388	0		==			
ANR	8365495	PtrMemberAccess	pfs -> font -> scaling_technology		8365388	0					
ANR	8365496	PtrMemberAccess	pfs -> font		8365388	0					
ANR	8365497	Identifier	pfs		8365388	0					
ANR	8365498	Identifier	font		8365388	1					
ANR	8365499	Identifier	scaling_technology		8365388	1					
ANR	8365500	Identifier	plfst_bitmap		8365388	1					
ANR	8365501	CompoundStatement		24:8:782:798	8365388	1					
ANR	8365502	IdentifierDeclStatement	hpgl_args_t args ;	212:8:7567:7583	8365388	0	True				
ANR	8365503	IdentifierDecl	args		8365388	0					
ANR	8365504	IdentifierDeclType	hpgl_args_t		8365388	0					
ANR	8365505	Identifier	args		8365388	1					
ANR	8365506	ExpressionStatement	hpgl_args_setup ( & args )	214:8:7594:7616	8365388	1	True				
ANR	8365507	CallExpression	hpgl_args_setup ( & args )		8365388	0					
ANR	8365508	Callee	hpgl_args_setup		8365388	0					
ANR	8365509	Identifier	hpgl_args_setup		8365388	0					
ANR	8365510	ArgumentList	& args		8365388	1					
ANR	8365511	Argument	& args		8365388	0					
ANR	8365512	UnaryOperationExpression	& args		8365388	0					
ANR	8365513	UnaryOperator	&		8365388	0					
ANR	8365514	Identifier	args		8365388	1					
ANR	8365515	ExpressionStatement	"hpgl_args_add_int ( & args , 1 )"	215:8:7626:7653	8365388	2	True				
ANR	8365516	CallExpression	"hpgl_args_add_int ( & args , 1 )"		8365388	0					
ANR	8365517	Callee	hpgl_args_add_int		8365388	0					
ANR	8365518	Identifier	hpgl_args_add_int		8365388	0					
ANR	8365519	ArgumentList	& args		8365388	1					
ANR	8365520	Argument	& args		8365388	0					
ANR	8365521	UnaryOperationExpression	& args		8365388	0					
ANR	8365522	UnaryOperator	&		8365388	0					
ANR	8365523	Identifier	args		8365388	1					
ANR	8365524	Argument	1		8365388	1					
ANR	8365525	PrimaryExpression	1		8365388	0					
ANR	8365526	ExpressionStatement	"hpgl_call ( hpgl_SB ( & args , pgls ) )"	216:8:7663:7694	8365388	3	True				
ANR	8365527	CallExpression	"hpgl_call ( hpgl_SB ( & args , pgls ) )"		8365388	0					
ANR	8365528	Callee	hpgl_call		8365388	0					
ANR	8365529	Identifier	hpgl_call		8365388	0					
ANR	8365530	ArgumentList	"hpgl_SB ( & args , pgls )"		8365388	1					
ANR	8365531	Argument	"hpgl_SB ( & args , pgls )"		8365388	0					
ANR	8365532	CallExpression	"hpgl_SB ( & args , pgls )"		8365388	0					
ANR	8365533	Callee	hpgl_SB		8365388	0					
ANR	8365534	Identifier	hpgl_SB		8365388	0					
ANR	8365535	ArgumentList	& args		8365388	1					
ANR	8365536	Argument	& args		8365388	0					
ANR	8365537	UnaryOperationExpression	& args		8365388	0					
ANR	8365538	UnaryOperator	&		8365388	0					
ANR	8365539	Identifier	args		8365388	1					
ANR	8365540	Argument	pgls		8365388	1					
ANR	8365541	Identifier	pgls		8365388	0					
ANR	8365542	IfStatement	if ( index == pgls -> g . font_selected )		8365388	9					
ANR	8365543	Condition	index == pgls -> g . font_selected	220:8:7833:7862	8365388	0	True				
ANR	8365544	EqualityExpression	index == pgls -> g . font_selected		8365388	0		==			
ANR	8365545	Identifier	index		8365388	0					
ANR	8365546	MemberAccess	pgls -> g . font_selected		8365388	1					
ANR	8365547	PtrMemberAccess	pgls -> g		8365388	0					
ANR	8365548	Identifier	pgls		8365388	0					
ANR	8365549	Identifier	g		8365388	1					
ANR	8365550	Identifier	font_selected		8365388	1					
ANR	8365551	CompoundStatement		32:40:1080:1080	8365388	1					
ANR	8365552	ExpressionStatement	"hpgl_select_font ( pgls , index )"	221:8:7875:7904	8365388	0	True				
ANR	8365553	CallExpression	"hpgl_select_font ( pgls , index )"		8365388	0					
ANR	8365554	Callee	hpgl_select_font		8365388	0					
ANR	8365555	Identifier	hpgl_select_font		8365388	0					
ANR	8365556	ArgumentList	pgls		8365388	1					
ANR	8365557	Argument	pgls		8365388	0					
ANR	8365558	Identifier	pgls		8365388	0					
ANR	8365559	Argument	index		8365388	1					
ANR	8365560	Identifier	index		8365388	0					
ANR	8365561	ReturnStatement	return 0 ;	223:4:7916:7924	8365388	10	True				
ANR	8365562	PrimaryExpression	0		8365388	0					
ANR	8365563	ReturnType	static int		8365388	1					
ANR	8365564	Identifier	hpgl_select_font_by_id		8365388	2					
ANR	8365565	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls , int index"		8365388	3					
ANR	8365566	Parameter	hpgl_args_t * pargs	188:23:6731:6749	8365388	0	True				
ANR	8365567	ParameterType	hpgl_args_t *		8365388	0					
ANR	8365568	Identifier	pargs		8365388	1					
ANR	8365569	Parameter	hpgl_state_t * pgls	188:44:6752:6770	8365388	1	True				
ANR	8365570	ParameterType	hpgl_state_t *		8365388	0					
ANR	8365571	Identifier	pgls		8365388	1					
ANR	8365572	Parameter	int index	188:65:6773:6781	8365388	2	True				
ANR	8365573	ParameterType	int		8365388	0					
ANR	8365574	Identifier	index		8365388	1					
ANR	8365575	CFGEntryNode	ENTRY		8365388		True				
ANR	8365576	CFGExitNode	EXIT		8365388		True				
ANR	8365577	Symbol	code		8365388						
ANR	8365578	Symbol	& id		8365388						
ANR	8365579	Symbol	plfst_bitmap		8365388						
ANR	8365580	Symbol	* index		8365388						
ANR	8365581	Symbol	pfs -> font -> scaling_technology		8365388						
ANR	8365582	Symbol	pgls		8365388						
ANR	8365583	Symbol	* * pfs		8365388						
ANR	8365584	Symbol	pargs		8365388						
ANR	8365585	Symbol	* pgls		8365388						
ANR	8365586	Symbol	* pgls -> g		8365388						
ANR	8365587	Symbol	pfs -> font		8365388						
ANR	8365588	Symbol	pgls -> memory		8365388						
ANR	8365589	Symbol	pgls -> g		8365388						
ANR	8365590	Symbol	id		8365388						
ANR	8365591	Symbol	& args		8365388						
ANR	8365592	Symbol	e_Range		8365388						
ANR	8365593	Symbol	pgls -> g . font_selection [ index ] . map		8365388						
ANR	8365594	Symbol	* pfs -> font		8365388						
ANR	8365595	Symbol	hpgl_SB		8365388						
ANR	8365596	Symbol	* pfs		8365388						
ANR	8365597	Symbol	pcl_select_font_by_id		8365388						
ANR	8365598	Symbol	pfs -> map		8365388						
ANR	8365599	Symbol	index		8365388						
ANR	8365600	Symbol	hpgl_arg_c_int		8365388						
ANR	8365601	Symbol	pgls -> g . font_selected		8365388						
ANR	8365602	Symbol	pgls -> g . font_selection [ index ] . font		8365388						
ANR	8365603	Symbol	* pgls -> g . font_selection		8365388						
ANR	8365604	Symbol	pgls -> g . font_selection		8365388						
ANR	8365605	Symbol	args		8365388						
ANR	8365606	Symbol	* * pgls		8365388						
ANR	8365607	Symbol	pfs		8365388						
ANR	8365608	Function	hpgl_select_font	227:0:7957:8176							
ANR	8365609	FunctionDef	"hpgl_select_font (hpgl_state_t * pgls , int index)"		8365608	0					
ANR	8365610	CompoundStatement		229:0:8017:8176	8365608	0					
ANR	8365611	ExpressionStatement	pgls -> g . font_selected = index	230:4:8023:8052	8365608	0	True				
ANR	8365612	AssignmentExpression	pgls -> g . font_selected = index		8365608	0		=			
ANR	8365613	MemberAccess	pgls -> g . font_selected		8365608	0					
ANR	8365614	PtrMemberAccess	pgls -> g		8365608	0					
ANR	8365615	Identifier	pgls		8365608	0					
ANR	8365616	Identifier	g		8365608	1					
ANR	8365617	Identifier	font_selected		8365608	1					
ANR	8365618	Identifier	index		8365608	1					
ANR	8365619	ExpressionStatement	pgls -> g . font = pgls -> g . font_selection [ index ] . font	231:4:8058:8107	8365608	1	True				
ANR	8365620	AssignmentExpression	pgls -> g . font = pgls -> g . font_selection [ index ] . font		8365608	0		=			
ANR	8365621	MemberAccess	pgls -> g . font		8365608	0					
ANR	8365622	PtrMemberAccess	pgls -> g		8365608	0					
ANR	8365623	Identifier	pgls		8365608	0					
ANR	8365624	Identifier	g		8365608	1					
ANR	8365625	Identifier	font		8365608	1					
ANR	8365626	MemberAccess	pgls -> g . font_selection [ index ] . font		8365608	1					
ANR	8365627	ArrayIndexing	pgls -> g . font_selection [ index ]		8365608	0					
ANR	8365628	MemberAccess	pgls -> g . font_selection		8365608	0					
ANR	8365629	PtrMemberAccess	pgls -> g		8365608	0					
ANR	8365630	Identifier	pgls		8365608	0					
ANR	8365631	Identifier	g		8365608	1					
ANR	8365632	Identifier	font_selection		8365608	1					
ANR	8365633	Identifier	index		8365608	1					
ANR	8365634	Identifier	font		8365608	1					
ANR	8365635	ExpressionStatement	pgls -> g . map = pgls -> g . font_selection [ index ] . map	232:4:8113:8160	8365608	2	True				
ANR	8365636	AssignmentExpression	pgls -> g . map = pgls -> g . font_selection [ index ] . map		8365608	0		=			
ANR	8365637	MemberAccess	pgls -> g . map		8365608	0					
ANR	8365638	PtrMemberAccess	pgls -> g		8365608	0					
ANR	8365639	Identifier	pgls		8365608	0					
ANR	8365640	Identifier	g		8365608	1					
ANR	8365641	Identifier	map		8365608	1					
ANR	8365642	MemberAccess	pgls -> g . font_selection [ index ] . map		8365608	1					
ANR	8365643	ArrayIndexing	pgls -> g . font_selection [ index ]		8365608	0					
ANR	8365644	MemberAccess	pgls -> g . font_selection		8365608	0					
ANR	8365645	PtrMemberAccess	pgls -> g		8365608	0					
ANR	8365646	Identifier	pgls		8365608	0					
ANR	8365647	Identifier	g		8365608	1					
ANR	8365648	Identifier	font_selection		8365608	1					
ANR	8365649	Identifier	index		8365608	1					
ANR	8365650	Identifier	map		8365608	1					
ANR	8365651	ReturnStatement	return 0 ;	233:4:8166:8174	8365608	3	True				
ANR	8365652	PrimaryExpression	0		8365608	0					
ANR	8365653	ReturnType	static int		8365608	1					
ANR	8365654	Identifier	hpgl_select_font		8365608	2					
ANR	8365655	ParameterList	"hpgl_state_t * pgls , int index"		8365608	3					
ANR	8365656	Parameter	hpgl_state_t * pgls	228:17:7985:8003	8365608	0	True				
ANR	8365657	ParameterType	hpgl_state_t *		8365608	0					
ANR	8365658	Identifier	pgls		8365608	1					
ANR	8365659	Parameter	int index	228:38:8006:8014	8365608	1	True				
ANR	8365660	ParameterType	int		8365608	0					
ANR	8365661	Identifier	index		8365608	1					
ANR	8365662	CFGEntryNode	ENTRY		8365608		True				
ANR	8365663	CFGExitNode	EXIT		8365608		True				
ANR	8365664	Symbol	pgls -> g . font_selection [ index ] . map		8365608						
ANR	8365665	Symbol	* index		8365608						
ANR	8365666	Symbol	index		8365608						
ANR	8365667	Symbol	pgls		8365608						
ANR	8365668	Symbol	pgls -> g . font_selected		8365608						
ANR	8365669	Symbol	* pgls -> g . font_selection		8365608						
ANR	8365670	Symbol	pgls -> g . font_selection [ index ] . font		8365608						
ANR	8365671	Symbol	pgls -> g . font_selection		8365608						
ANR	8365672	Symbol	pgls -> g . font		8365608						
ANR	8365673	Symbol	* * pgls		8365608						
ANR	8365674	Symbol	* pgls		8365608						
ANR	8365675	Symbol	* pgls -> g		8365608						
ANR	8365676	Symbol	pgls -> g		8365608						
ANR	8365677	Symbol	pgls -> g . map		8365608						
ANR	8365678	Function	hpgl_AD	239:0:8235:8340							
ANR	8365679	FunctionDef	"hpgl_AD (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8365678	0					
ANR	8365680	CompoundStatement		241:0:8289:8340	8365678	0					
ANR	8365681	ReturnStatement	"return hpgl_font_definition ( pargs , pgls , 1 ) ;"	242:4:8295:8338	8365678	0	True				
ANR	8365682	CallExpression	"hpgl_font_definition ( pargs , pgls , 1 )"		8365678	0					
ANR	8365683	Callee	hpgl_font_definition		8365678	0					
ANR	8365684	Identifier	hpgl_font_definition		8365678	0					
ANR	8365685	ArgumentList	pargs		8365678	1					
ANR	8365686	Argument	pargs		8365678	0					
ANR	8365687	Identifier	pargs		8365678	0					
ANR	8365688	Argument	pgls		8365678	1					
ANR	8365689	Identifier	pgls		8365678	0					
ANR	8365690	Argument	1		8365678	2					
ANR	8365691	PrimaryExpression	1		8365678	0					
ANR	8365692	ReturnType	int		8365678	1					
ANR	8365693	Identifier	hpgl_AD		8365678	2					
ANR	8365694	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8365678	3					
ANR	8365695	Parameter	hpgl_args_t * pargs	240:8:8247:8265	8365678	0	True				
ANR	8365696	ParameterType	hpgl_args_t *		8365678	0					
ANR	8365697	Identifier	pargs		8365678	1					
ANR	8365698	Parameter	hpgl_state_t * pgls	240:29:8268:8286	8365678	1	True				
ANR	8365699	ParameterType	hpgl_state_t *		8365678	0					
ANR	8365700	Identifier	pgls		8365678	1					
ANR	8365701	CFGEntryNode	ENTRY		8365678		True				
ANR	8365702	CFGExitNode	EXIT		8365678		True				
ANR	8365703	Symbol	hpgl_font_definition		8365678						
ANR	8365704	Symbol	pargs		8365678						
ANR	8365705	Symbol	pgls		8365678						
ANR	8365706	Function	hpgl_get_character_edge_pen	248:0:8475:8849							
ANR	8365707	FunctionDef	hpgl_get_character_edge_pen (hpgl_state_t * pgls)		8365706	0					
ANR	8365708	CompoundStatement		250:0:8530:8849	8365706	0					
ANR	8365709	ReturnStatement	return ( pgls -> g . character . edge_pen == CHAR_EDGE_PEN_UNSET ? hpgl_get_selected_pen ( pgls ) : pgls -> g . character . edge_pen ) ;	254:4:8717:8846	8365706	0	True				
ANR	8365710	ConditionalExpression	pgls -> g . character . edge_pen == CHAR_EDGE_PEN_UNSET ? hpgl_get_selected_pen ( pgls ) : pgls -> g . character . edge_pen		8365706	0					
ANR	8365711	Condition	pgls -> g . character . edge_pen == CHAR_EDGE_PEN_UNSET		8365706	0					
ANR	8365712	EqualityExpression	pgls -> g . character . edge_pen == CHAR_EDGE_PEN_UNSET		8365706	0		==			
ANR	8365713	MemberAccess	pgls -> g . character . edge_pen		8365706	0					
ANR	8365714	MemberAccess	pgls -> g . character		8365706	0					
ANR	8365715	PtrMemberAccess	pgls -> g		8365706	0					
ANR	8365716	Identifier	pgls		8365706	0					
ANR	8365717	Identifier	g		8365706	1					
ANR	8365718	Identifier	character		8365706	1					
ANR	8365719	Identifier	edge_pen		8365706	1					
ANR	8365720	Identifier	CHAR_EDGE_PEN_UNSET		8365706	1					
ANR	8365721	CallExpression	hpgl_get_selected_pen ( pgls )		8365706	1					
ANR	8365722	Callee	hpgl_get_selected_pen		8365706	0					
ANR	8365723	Identifier	hpgl_get_selected_pen		8365706	0					
ANR	8365724	ArgumentList	pgls		8365706	1					
ANR	8365725	Argument	pgls		8365706	0					
ANR	8365726	Identifier	pgls		8365706	0					
ANR	8365727	MemberAccess	pgls -> g . character . edge_pen		8365706	2					
ANR	8365728	MemberAccess	pgls -> g . character		8365706	0					
ANR	8365729	PtrMemberAccess	pgls -> g		8365706	0					
ANR	8365730	Identifier	pgls		8365706	0					
ANR	8365731	Identifier	g		8365706	1					
ANR	8365732	Identifier	character		8365706	1					
ANR	8365733	Identifier	edge_pen		8365706	1					
ANR	8365734	ReturnType	int32		8365706	1					
ANR	8365735	Identifier	hpgl_get_character_edge_pen		8365706	2					
ANR	8365736	ParameterList	hpgl_state_t * pgls		8365706	3					
ANR	8365737	Parameter	hpgl_state_t * pgls	249:28:8509:8527	8365706	0	True				
ANR	8365738	ParameterType	hpgl_state_t *		8365706	0					
ANR	8365739	Identifier	pgls		8365706	1					
ANR	8365740	CFGEntryNode	ENTRY		8365706		True				
ANR	8365741	CFGExitNode	EXIT		8365706		True				
ANR	8365742	Symbol	hpgl_get_selected_pen		8365706						
ANR	8365743	Symbol	* pgls		8365706						
ANR	8365744	Symbol	CHAR_EDGE_PEN_UNSET		8365706						
ANR	8365745	Symbol	pgls		8365706						
ANR	8365746	Symbol	pgls -> g		8365706						
ANR	8365747	Symbol	pgls -> g . character		8365706						
ANR	8365748	Symbol	pgls -> g . character . edge_pen		8365706						
ANR	8365749	Function	hpgl_CF	262:0:8879:9666							
ANR	8365750	FunctionDef	"hpgl_CF (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8365749	0					
ANR	8365751	CompoundStatement		264:0:8933:9666	8365749	0					
ANR	8365752	IdentifierDeclStatement	int mode = 0 ;	265:4:8939:8951	8365749	0	True				
ANR	8365753	IdentifierDecl	mode = 0		8365749	0					
ANR	8365754	IdentifierDeclType	int		8365749	0					
ANR	8365755	Identifier	mode		8365749	1					
ANR	8365756	AssignmentExpression	mode = 0		8365749	2		=			
ANR	8365757	Identifier	mode		8365749	0					
ANR	8365758	PrimaryExpression	0		8365749	1					
ANR	8365759	IdentifierDeclStatement	int npen = pcl_palette_get_num_entries ( pgls -> ppalet ) ;	266:4:8957:9009	8365749	1	True				
ANR	8365760	IdentifierDecl	npen = pcl_palette_get_num_entries ( pgls -> ppalet )		8365749	0					
ANR	8365761	IdentifierDeclType	int		8365749	0					
ANR	8365762	Identifier	npen		8365749	1					
ANR	8365763	AssignmentExpression	npen = pcl_palette_get_num_entries ( pgls -> ppalet )		8365749	2		=			
ANR	8365764	Identifier	npen		8365749	0					
ANR	8365765	CallExpression	pcl_palette_get_num_entries ( pgls -> ppalet )		8365749	1					
ANR	8365766	Callee	pcl_palette_get_num_entries		8365749	0					
ANR	8365767	Identifier	pcl_palette_get_num_entries		8365749	0					
ANR	8365768	ArgumentList	pgls -> ppalet		8365749	1					
ANR	8365769	Argument	pgls -> ppalet		8365749	0					
ANR	8365770	PtrMemberAccess	pgls -> ppalet		8365749	0					
ANR	8365771	Identifier	pgls		8365749	0					
ANR	8365772	Identifier	ppalet		8365749	1					
ANR	8365773	IdentifierDeclStatement	int32 pen = 0 ;	267:4:9015:9028	8365749	2	True				
ANR	8365774	IdentifierDecl	pen = 0		8365749	0					
ANR	8365775	IdentifierDeclType	int32		8365749	0					
ANR	8365776	Identifier	pen		8365749	1					
ANR	8365777	AssignmentExpression	pen = 0		8365749	2		=			
ANR	8365778	Identifier	pen		8365749	0					
ANR	8365779	PrimaryExpression	0		8365749	1					
ANR	8365780	IfStatement	"if ( hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) )"		8365749	3					
ANR	8365781	Condition	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode )"	269:8:9039:9080	8365749	0	True				
ANR	8365782	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode )"		8365749	0					
ANR	8365783	Callee	hpgl_arg_c_int		8365749	0					
ANR	8365784	Identifier	hpgl_arg_c_int		8365749	0					
ANR	8365785	ArgumentList	pgls -> memory		8365749	1					
ANR	8365786	Argument	pgls -> memory		8365749	0					
ANR	8365787	PtrMemberAccess	pgls -> memory		8365749	0					
ANR	8365788	Identifier	pgls		8365749	0					
ANR	8365789	Identifier	memory		8365749	1					
ANR	8365790	Argument	pargs		8365749	1					
ANR	8365791	Identifier	pargs		8365749	0					
ANR	8365792	Argument	& mode		8365749	2					
ANR	8365793	UnaryOperationExpression	& mode		8365749	0					
ANR	8365794	UnaryOperator	&		8365749	0					
ANR	8365795	Identifier	mode		8365749	1					
ANR	8365796	CompoundStatement		6:52:149:149	8365749	1					
ANR	8365797	IfStatement	if ( ( mode & ~3 ) != 0 )		8365749	0					
ANR	8365798	Condition	( mode & ~3 ) != 0	270:12:9097:9112	8365749	0	True				
ANR	8365799	EqualityExpression	( mode & ~3 ) != 0		8365749	0		!=			
ANR	8365800	BitAndExpression	mode & ~3		8365749	0		&			
ANR	8365801	Identifier	mode		8365749	0					
ANR	8365802	Identifier	~3		8365749	1					
ANR	8365803	PrimaryExpression	0		8365749	1					
ANR	8365804	ReturnStatement	return e_Range ;	271:12:9127:9141	8365749	1	True				
ANR	8365805	Identifier	e_Range		8365749	0					
ANR	8365806	IfStatement	"if ( hpgl_arg_int ( pgls -> memory , pargs , & pen ) )"		8365749	1					
ANR	8365807	Condition	"hpgl_arg_int ( pgls -> memory , pargs , & pen )"	276:12:9395:9433	8365749	0	True				
ANR	8365808	CallExpression	"hpgl_arg_int ( pgls -> memory , pargs , & pen )"		8365749	0					
ANR	8365809	Callee	hpgl_arg_int		8365749	0					
ANR	8365810	Identifier	hpgl_arg_int		8365749	0					
ANR	8365811	ArgumentList	pgls -> memory		8365749	1					
ANR	8365812	Argument	pgls -> memory		8365749	0					
ANR	8365813	PtrMemberAccess	pgls -> memory		8365749	0					
ANR	8365814	Identifier	pgls		8365749	0					
ANR	8365815	Identifier	memory		8365749	1					
ANR	8365816	Argument	pargs		8365749	1					
ANR	8365817	Identifier	pargs		8365749	0					
ANR	8365818	Argument	& pen		8365749	2					
ANR	8365819	UnaryOperationExpression	& pen		8365749	0					
ANR	8365820	UnaryOperator	&		8365749	0					
ANR	8365821	Identifier	pen		8365749	1					
ANR	8365822	CompoundStatement		13:53:502:502	8365749	1					
ANR	8365823	IfStatement	if ( ( pen < 0 ) || ( pen >= npen ) )		8365749	0					
ANR	8365824	Condition	( pen < 0 ) || ( pen >= npen )	277:16:9454:9479	8365749	0	True				
ANR	8365825	OrExpression	( pen < 0 ) || ( pen >= npen )		8365749	0		||			
ANR	8365826	RelationalExpression	pen < 0		8365749	0		<			
ANR	8365827	Identifier	pen		8365749	0					
ANR	8365828	PrimaryExpression	0		8365749	1					
ANR	8365829	RelationalExpression	pen >= npen		8365749	1		>=			
ANR	8365830	Identifier	pen		8365749	0					
ANR	8365831	Identifier	npen		8365749	1					
ANR	8365832	ReturnStatement	return e_Range ;	278:16:9498:9512	8365749	1	True				
ANR	8365833	Identifier	e_Range		8365749	0					
ANR	8365834	ElseStatement	else		8365749	0					
ANR	8365835	ExpressionStatement	pen = CHAR_EDGE_PEN_UNSET	280:12:9541:9566	8365749	0	True				
ANR	8365836	AssignmentExpression	pen = CHAR_EDGE_PEN_UNSET		8365749	0		=			
ANR	8365837	Identifier	pen		8365749	0					
ANR	8365838	Identifier	CHAR_EDGE_PEN_UNSET		8365749	1					
ANR	8365839	ExpressionStatement	pgls -> g . character . fill_mode = mode	282:4:9578:9612	8365749	4	True				
ANR	8365840	AssignmentExpression	pgls -> g . character . fill_mode = mode		8365749	0		=			
ANR	8365841	MemberAccess	pgls -> g . character . fill_mode		8365749	0					
ANR	8365842	MemberAccess	pgls -> g . character		8365749	0					
ANR	8365843	PtrMemberAccess	pgls -> g		8365749	0					
ANR	8365844	Identifier	pgls		8365749	0					
ANR	8365845	Identifier	g		8365749	1					
ANR	8365846	Identifier	character		8365749	1					
ANR	8365847	Identifier	fill_mode		8365749	1					
ANR	8365848	Identifier	mode		8365749	1					
ANR	8365849	ExpressionStatement	pgls -> g . character . edge_pen = pen	283:4:9618:9650	8365749	5	True				
ANR	8365850	AssignmentExpression	pgls -> g . character . edge_pen = pen		8365749	0		=			
ANR	8365851	MemberAccess	pgls -> g . character . edge_pen		8365749	0					
ANR	8365852	MemberAccess	pgls -> g . character		8365749	0					
ANR	8365853	PtrMemberAccess	pgls -> g		8365749	0					
ANR	8365854	Identifier	pgls		8365749	0					
ANR	8365855	Identifier	g		8365749	1					
ANR	8365856	Identifier	character		8365749	1					
ANR	8365857	Identifier	edge_pen		8365749	1					
ANR	8365858	Identifier	pen		8365749	1					
ANR	8365859	ReturnStatement	return 0 ;	284:4:9656:9664	8365749	6	True				
ANR	8365860	PrimaryExpression	0		8365749	0					
ANR	8365861	ReturnType	int		8365749	1					
ANR	8365862	Identifier	hpgl_CF		8365749	2					
ANR	8365863	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8365749	3					
ANR	8365864	Parameter	hpgl_args_t * pargs	263:8:8891:8909	8365749	0	True				
ANR	8365865	ParameterType	hpgl_args_t *		8365749	0					
ANR	8365866	Identifier	pargs		8365749	1					
ANR	8365867	Parameter	hpgl_state_t * pgls	263:29:8912:8930	8365749	1	True				
ANR	8365868	ParameterType	hpgl_state_t *		8365749	0					
ANR	8365869	Identifier	pgls		8365749	1					
ANR	8365870	CFGEntryNode	ENTRY		8365749		True				
ANR	8365871	CFGExitNode	EXIT		8365749		True				
ANR	8365872	Symbol	e_Range		8365749						
ANR	8365873	Symbol	hpgl_arg_int		8365749						
ANR	8365874	Symbol	CHAR_EDGE_PEN_UNSET		8365749						
ANR	8365875	Symbol	pgls		8365749						
ANR	8365876	Symbol	hpgl_arg_c_int		8365749						
ANR	8365877	Symbol	pgls -> g . character		8365749						
ANR	8365878	Symbol	pgls -> ppalet		8365749						
ANR	8365879	Symbol	pcl_palette_get_num_entries		8365749						
ANR	8365880	Symbol	mode		8365749						
ANR	8365881	Symbol	& mode		8365749						
ANR	8365882	Symbol	pargs		8365749						
ANR	8365883	Symbol	~3		8365749						
ANR	8365884	Symbol	* pgls		8365749						
ANR	8365885	Symbol	npen		8365749						
ANR	8365886	Symbol	pen		8365749						
ANR	8365887	Symbol	pgls -> memory		8365749						
ANR	8365888	Symbol	& pen		8365749						
ANR	8365889	Symbol	pgls -> g . character . fill_mode		8365749						
ANR	8365890	Symbol	pgls -> g		8365749						
ANR	8365891	Symbol	pgls -> g . character . edge_pen		8365749						
ANR	8365892	Function	hpgl_DI	287:1:9670:9827							
ANR	8365893	FunctionDef	"hpgl_DI (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8365892	0					
ANR	8365894	CompoundStatement		292:0:9772:9827	8365892	0					
ANR	8365895	ReturnStatement	"return hpgl_label_direction ( pargs , pgls , false ) ;"	293:4:9778:9825	8365892	0	True				
ANR	8365896	CallExpression	"hpgl_label_direction ( pargs , pgls , false )"		8365892	0					
ANR	8365897	Callee	hpgl_label_direction		8365892	0					
ANR	8365898	Identifier	hpgl_label_direction		8365892	0					
ANR	8365899	ArgumentList	pargs		8365892	1					
ANR	8365900	Argument	pargs		8365892	0					
ANR	8365901	Identifier	pargs		8365892	0					
ANR	8365902	Argument	pgls		8365892	1					
ANR	8365903	Identifier	pgls		8365892	0					
ANR	8365904	Argument	false		8365892	2					
ANR	8365905	Identifier	false		8365892	0					
ANR	8365906	ReturnType	undef CHAR_EDGE_PEN_UNSET int		8365892	1					
ANR	8365907	Identifier	hpgl_DI		8365892	2					
ANR	8365908	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8365892	3					
ANR	8365909	Parameter	hpgl_args_t * pargs	291:8:9730:9748	8365892	0	True				
ANR	8365910	ParameterType	hpgl_args_t *		8365892	0					
ANR	8365911	Identifier	pargs		8365892	1					
ANR	8365912	Parameter	hpgl_state_t * pgls	291:29:9751:9769	8365892	1	True				
ANR	8365913	ParameterType	hpgl_state_t *		8365892	0					
ANR	8365914	Identifier	pgls		8365892	1					
ANR	8365915	CFGEntryNode	ENTRY		8365892		True				
ANR	8365916	CFGExitNode	EXIT		8365892		True				
ANR	8365917	Symbol	pargs		8365892						
ANR	8365918	Symbol	false		8365892						
ANR	8365919	Symbol	pgls		8365892						
ANR	8365920	Symbol	hpgl_label_direction		8365892						
ANR	8365921	Function	hpgl_DR	297:0:9851:9959							
ANR	8365922	FunctionDef	"hpgl_DR (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8365921	0					
ANR	8365923	CompoundStatement		299:0:9905:9959	8365921	0					
ANR	8365924	ReturnStatement	"return hpgl_label_direction ( pargs , pgls , true ) ;"	300:4:9911:9957	8365921	0	True				
ANR	8365925	CallExpression	"hpgl_label_direction ( pargs , pgls , true )"		8365921	0					
ANR	8365926	Callee	hpgl_label_direction		8365921	0					
ANR	8365927	Identifier	hpgl_label_direction		8365921	0					
ANR	8365928	ArgumentList	pargs		8365921	1					
ANR	8365929	Argument	pargs		8365921	0					
ANR	8365930	Identifier	pargs		8365921	0					
ANR	8365931	Argument	pgls		8365921	1					
ANR	8365932	Identifier	pgls		8365921	0					
ANR	8365933	Argument	true		8365921	2					
ANR	8365934	Identifier	true		8365921	0					
ANR	8365935	ReturnType	int		8365921	1					
ANR	8365936	Identifier	hpgl_DR		8365921	2					
ANR	8365937	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8365921	3					
ANR	8365938	Parameter	hpgl_args_t * pargs	298:8:9863:9881	8365921	0	True				
ANR	8365939	ParameterType	hpgl_args_t *		8365921	0					
ANR	8365940	Identifier	pargs		8365921	1					
ANR	8365941	Parameter	hpgl_state_t * pgls	298:29:9884:9902	8365921	1	True				
ANR	8365942	ParameterType	hpgl_state_t *		8365921	0					
ANR	8365943	Identifier	pgls		8365921	1					
ANR	8365944	CFGEntryNode	ENTRY		8365921		True				
ANR	8365945	CFGExitNode	EXIT		8365921		True				
ANR	8365946	Symbol	pargs		8365921						
ANR	8365947	Symbol	true		8365921						
ANR	8365948	Symbol	pgls		8365921						
ANR	8365949	Symbol	hpgl_label_direction		8365921						
ANR	8365950	Function	hpgl_DT	304:0:9990:11165							
ANR	8365951	FunctionDef	"hpgl_DT (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8365950	0					
ANR	8365952	CompoundStatement		306:0:10044:11165	8365950	0					
ANR	8365953	IdentifierDeclStatement	const byte * p = pargs -> source . ptr ;	307:4:10050:10083	8365950	0	True				
ANR	8365954	IdentifierDecl	* p = pargs -> source . ptr		8365950	0					
ANR	8365955	IdentifierDeclType	const byte *		8365950	0					
ANR	8365956	Identifier	p		8365950	1					
ANR	8365957	AssignmentExpression	* p = pargs -> source . ptr		8365950	2		=			
ANR	8365958	Identifier	p		8365950	0					
ANR	8365959	MemberAccess	pargs -> source . ptr		8365950	1					
ANR	8365960	PtrMemberAccess	pargs -> source		8365950	0					
ANR	8365961	Identifier	pargs		8365950	0					
ANR	8365962	Identifier	source		8365950	1					
ANR	8365963	Identifier	ptr		8365950	1					
ANR	8365964	IdentifierDeclStatement	const byte * rlimit = pargs -> source . limit ;	308:4:10089:10129	8365950	1	True				
ANR	8365965	IdentifierDecl	* rlimit = pargs -> source . limit		8365950	0					
ANR	8365966	IdentifierDeclType	const byte *		8365950	0					
ANR	8365967	Identifier	rlimit		8365950	1					
ANR	8365968	AssignmentExpression	* rlimit = pargs -> source . limit		8365950	2		=			
ANR	8365969	Identifier	rlimit		8365950	0					
ANR	8365970	MemberAccess	pargs -> source . limit		8365950	1					
ANR	8365971	PtrMemberAccess	pargs -> source		8365950	0					
ANR	8365972	Identifier	pargs		8365950	0					
ANR	8365973	Identifier	source		8365950	1					
ANR	8365974	Identifier	limit		8365950	1					
ANR	8365975	IdentifierDeclStatement	byte ch = ( byte ) pargs -> phase ;	309:4:10135:10164	8365950	2	True				
ANR	8365976	IdentifierDecl	ch = ( byte ) pargs -> phase		8365950	0					
ANR	8365977	IdentifierDeclType	byte		8365950	0					
ANR	8365978	Identifier	ch		8365950	1					
ANR	8365979	AssignmentExpression	ch = ( byte ) pargs -> phase		8365950	2		=			
ANR	8365980	Identifier	ch		8365950	0					
ANR	8365981	CastExpression	( byte ) pargs -> phase		8365950	1					
ANR	8365982	CastTarget	byte		8365950	0					
ANR	8365983	PtrMemberAccess	pargs -> phase		8365950	1					
ANR	8365984	Identifier	pargs		8365950	0					
ANR	8365985	Identifier	phase		8365950	1					
ANR	8365986	IdentifierDeclStatement	int mode = 1 ;	310:4:10170:10182	8365950	3	True				
ANR	8365987	IdentifierDecl	mode = 1		8365950	0					
ANR	8365988	IdentifierDeclType	int		8365950	0					
ANR	8365989	Identifier	mode		8365950	1					
ANR	8365990	AssignmentExpression	mode = 1		8365950	2		=			
ANR	8365991	Identifier	mode		8365950	0					
ANR	8365992	PrimaryExpression	1		8365950	1					
ANR	8365993	IfStatement	if ( p >= rlimit )		8365950	4					
ANR	8365994	Condition	p >= rlimit	314:8:10300:10310	8365950	0	True				
ANR	8365995	RelationalExpression	p >= rlimit		8365950	0		>=			
ANR	8365996	Identifier	p		8365950	0					
ANR	8365997	Identifier	rlimit		8365950	1					
ANR	8365998	ReturnStatement	return gs_error_NeedInput ;	315:8:10321:10346	8365950	1	True				
ANR	8365999	Identifier	gs_error_NeedInput		8365950	0					
ANR	8366000	IfStatement	if ( ! ch )		8365950	5					
ANR	8366001	Condition	! ch	316:8:10356:10358	8365950	0	True				
ANR	8366002	UnaryOperationExpression	! ch		8365950	0					
ANR	8366003	UnaryOperator	!		8365950	0					
ANR	8366004	Identifier	ch		8365950	1					
ANR	8366005	SwitchStatement	switch ( ( ch = * ++ p ) )		8365950	1					
ANR	8366006	Condition	ch = * ++ p	317:16:10377:10387	8365950	0	True				
ANR	8366007	AssignmentExpression	ch = * ++ p		8365950	0		=			
ANR	8366008	Identifier	ch		8365950	0					
ANR	8366009	UnaryOperationExpression	* ++ p		8365950	1					
ANR	8366010	UnaryOperator	*		8365950	0					
ANR	8366011	UnaryExpression	++ p		8365950	1					
ANR	8366012	IncDec	++		8365950	0					
ANR	8366013	Identifier	p		8365950	1					
ANR	8366014	CompoundStatement		12:29:345:345	8365950	1					
ANR	8366015	Label	case ';' :	318:12:10404:10412	8365950	0	True				
ANR	8366016	ExpressionStatement	pargs -> source . ptr = p	319:16:10430:10451	8365950	1	True				
ANR	8366017	AssignmentExpression	pargs -> source . ptr = p		8365950	0		=			
ANR	8366018	MemberAccess	pargs -> source . ptr		8365950	0					
ANR	8366019	PtrMemberAccess	pargs -> source		8365950	0					
ANR	8366020	Identifier	pargs		8365950	0					
ANR	8366021	Identifier	source		8365950	1					
ANR	8366022	Identifier	ptr		8365950	1					
ANR	8366023	Identifier	p		8365950	1					
ANR	8366024	ExpressionStatement	pgls -> g . label . terminator = 3	320:16:10469:10497	8365950	2	True				
ANR	8366025	AssignmentExpression	pgls -> g . label . terminator = 3		8365950	0		=			
ANR	8366026	MemberAccess	pgls -> g . label . terminator		8365950	0					
ANR	8366027	MemberAccess	pgls -> g . label		8365950	0					
ANR	8366028	PtrMemberAccess	pgls -> g		8365950	0					
ANR	8366029	Identifier	pgls		8365950	0					
ANR	8366030	Identifier	g		8365950	1					
ANR	8366031	Identifier	label		8365950	1					
ANR	8366032	Identifier	terminator		8365950	1					
ANR	8366033	PrimaryExpression	3		8365950	1					
ANR	8366034	ExpressionStatement	pgls -> g . label . print_terminator = false	321:16:10515:10553	8365950	3	True				
ANR	8366035	AssignmentExpression	pgls -> g . label . print_terminator = false		8365950	0		=			
ANR	8366036	MemberAccess	pgls -> g . label . print_terminator		8365950	0					
ANR	8366037	MemberAccess	pgls -> g . label		8365950	0					
ANR	8366038	PtrMemberAccess	pgls -> g		8365950	0					
ANR	8366039	Identifier	pgls		8365950	0					
ANR	8366040	Identifier	g		8365950	1					
ANR	8366041	Identifier	label		8365950	1					
ANR	8366042	Identifier	print_terminator		8365950	1					
ANR	8366043	Identifier	false		8365950	1					
ANR	8366044	ReturnStatement	return 0 ;	322:16:10571:10579	8365950	4	True				
ANR	8366045	PrimaryExpression	0		8365950	0					
ANR	8366046	Label	case 0 :	323:12:10593:10599	8365950	5	True				
ANR	8366047	Label	case 5 :	324:12:10613:10619	8365950	6	True				
ANR	8366048	Label	case 27 :	325:12:10633:10640	8365950	7	True				
ANR	8366049	ReturnStatement	return e_Range ;	326:16:10658:10672	8365950	8	True				
ANR	8366050	Identifier	e_Range		8365950	0					
ANR	8366051	Label	default :	327:12:10686:10693	8365950	9	True				
ANR	8366052	Identifier	default		8365950	0					
ANR	8366053	IfStatement	if ( p >= rlimit )		8365950	10					
ANR	8366054	Condition	p >= rlimit	328:20:10715:10725	8365950	0	True				
ANR	8366055	RelationalExpression	p >= rlimit		8365950	0		>=			
ANR	8366056	Identifier	p		8365950	0					
ANR	8366057	Identifier	rlimit		8365950	1					
ANR	8366058	ReturnStatement	return gs_error_NeedInput ;	329:20:10748:10773	8365950	1	True				
ANR	8366059	Identifier	gs_error_NeedInput		8365950	0					
ANR	8366060	IfStatement	"if ( * ++ p == ',' )"		8365950	11					
ANR	8366061	Condition	"* ++ p == ','"	330:20:10795:10805	8365950	0	True				
ANR	8366062	EqualityExpression	"* ++ p == ','"		8365950	0		==			
ANR	8366063	UnaryOperationExpression	* ++ p		8365950	0					
ANR	8366064	UnaryOperator	*		8365950	0					
ANR	8366065	UnaryExpression	++ p		8365950	1					
ANR	8366066	IncDec	++		8365950	0					
ANR	8366067	Identifier	p		8365950	1					
ANR	8366068	PrimaryExpression	"','"		8365950	1					
ANR	8366069	CompoundStatement		25:33:763:763	8365950	1					
ANR	8366070	ExpressionStatement	pargs -> source . ptr = p	331:20:10830:10851	8365950	0	True				
ANR	8366071	AssignmentExpression	pargs -> source . ptr = p		8365950	0		=			
ANR	8366072	MemberAccess	pargs -> source . ptr		8365950	0					
ANR	8366073	PtrMemberAccess	pargs -> source		8365950	0					
ANR	8366074	Identifier	pargs		8365950	0					
ANR	8366075	Identifier	source		8365950	1					
ANR	8366076	Identifier	ptr		8365950	1					
ANR	8366077	Identifier	p		8365950	1					
ANR	8366078	ExpressionStatement	pargs -> phase = ch	332:20:10873:10890	8365950	1	True				
ANR	8366079	AssignmentExpression	pargs -> phase = ch		8365950	0		=			
ANR	8366080	PtrMemberAccess	pargs -> phase		8365950	0					
ANR	8366081	Identifier	pargs		8365950	0					
ANR	8366082	Identifier	phase		8365950	1					
ANR	8366083	Identifier	ch		8365950	1					
ANR	8366084	ExpressionStatement	"if_debug1m ( 'i' , pgls -> memory , ""%c"" , ch )"	333:20:10912:10951	8365950	2	True				
ANR	8366085	CallExpression	"if_debug1m ( 'i' , pgls -> memory , ""%c"" , ch )"		8365950	0					
ANR	8366086	Callee	if_debug1m		8365950	0					
ANR	8366087	Identifier	if_debug1m		8365950	0					
ANR	8366088	ArgumentList	'i'		8365950	1					
ANR	8366089	Argument	'i'		8365950	0					
ANR	8366090	PrimaryExpression	'i'		8365950	0					
ANR	8366091	Argument	pgls -> memory		8365950	1					
ANR	8366092	PtrMemberAccess	pgls -> memory		8365950	0					
ANR	8366093	Identifier	pgls		8365950	0					
ANR	8366094	Identifier	memory		8365950	1					
ANR	8366095	Argument	"""%c"""		8365950	2					
ANR	8366096	PrimaryExpression	"""%c"""		8365950	0					
ANR	8366097	Argument	ch		8365950	3					
ANR	8366098	Identifier	ch		8365950	0					
ANR	8366099	IfStatement	"if ( hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) && ( mode & ~1 ) )"		8365950	6					
ANR	8366100	Condition	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) && ( mode & ~1 )"	336:8:10989:11045	8365950	0	True				
ANR	8366101	AndExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) && ( mode & ~1 )"		8365950	0		&&			
ANR	8366102	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode )"		8365950	0					
ANR	8366103	Callee	hpgl_arg_c_int		8365950	0					
ANR	8366104	Identifier	hpgl_arg_c_int		8365950	0					
ANR	8366105	ArgumentList	pgls -> memory		8365950	1					
ANR	8366106	Argument	pgls -> memory		8365950	0					
ANR	8366107	PtrMemberAccess	pgls -> memory		8365950	0					
ANR	8366108	Identifier	pgls		8365950	0					
ANR	8366109	Identifier	memory		8365950	1					
ANR	8366110	Argument	pargs		8365950	1					
ANR	8366111	Identifier	pargs		8365950	0					
ANR	8366112	Argument	& mode		8365950	2					
ANR	8366113	UnaryOperationExpression	& mode		8365950	0					
ANR	8366114	UnaryOperator	&		8365950	0					
ANR	8366115	Identifier	mode		8365950	1					
ANR	8366116	BitAndExpression	mode & ~1		8365950	1		&			
ANR	8366117	Identifier	mode		8365950	0					
ANR	8366118	Identifier	~1		8365950	1					
ANR	8366119	ReturnStatement	return e_Range ;	337:8:11056:11070	8365950	1	True				
ANR	8366120	Identifier	e_Range		8365950	0					
ANR	8366121	ExpressionStatement	pgls -> g . label . terminator = ch	338:4:11076:11105	8365950	7	True				
ANR	8366122	AssignmentExpression	pgls -> g . label . terminator = ch		8365950	0		=			
ANR	8366123	MemberAccess	pgls -> g . label . terminator		8365950	0					
ANR	8366124	MemberAccess	pgls -> g . label		8365950	0					
ANR	8366125	PtrMemberAccess	pgls -> g		8365950	0					
ANR	8366126	Identifier	pgls		8365950	0					
ANR	8366127	Identifier	g		8365950	1					
ANR	8366128	Identifier	label		8365950	1					
ANR	8366129	Identifier	terminator		8365950	1					
ANR	8366130	Identifier	ch		8365950	1					
ANR	8366131	ExpressionStatement	pgls -> g . label . print_terminator = ! mode	339:4:11111:11149	8365950	8	True				
ANR	8366132	AssignmentExpression	pgls -> g . label . print_terminator = ! mode		8365950	0		=			
ANR	8366133	MemberAccess	pgls -> g . label . print_terminator		8365950	0					
ANR	8366134	MemberAccess	pgls -> g . label		8365950	0					
ANR	8366135	PtrMemberAccess	pgls -> g		8365950	0					
ANR	8366136	Identifier	pgls		8365950	0					
ANR	8366137	Identifier	g		8365950	1					
ANR	8366138	Identifier	label		8365950	1					
ANR	8366139	Identifier	print_terminator		8365950	1					
ANR	8366140	UnaryOperationExpression	! mode		8365950	1					
ANR	8366141	UnaryOperator	!		8365950	0					
ANR	8366142	Identifier	mode		8365950	1					
ANR	8366143	ReturnStatement	return 0 ;	340:4:11155:11163	8365950	9	True				
ANR	8366144	PrimaryExpression	0		8365950	0					
ANR	8366145	ReturnType	int		8365950	1					
ANR	8366146	Identifier	hpgl_DT		8365950	2					
ANR	8366147	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8365950	3					
ANR	8366148	Parameter	hpgl_args_t * pargs	305:8:10002:10020	8365950	0	True				
ANR	8366149	ParameterType	hpgl_args_t *		8365950	0					
ANR	8366150	Identifier	pargs		8365950	1					
ANR	8366151	Parameter	hpgl_state_t * pgls	305:29:10023:10041	8365950	1	True				
ANR	8366152	ParameterType	hpgl_state_t *		8365950	0					
ANR	8366153	Identifier	pgls		8365950	1					
ANR	8366154	CFGEntryNode	ENTRY		8365950		True				
ANR	8366155	CFGExitNode	EXIT		8365950		True				
ANR	8366156	Symbol	pgls		8365950						
ANR	8366157	Symbol	mode		8365950						
ANR	8366158	Symbol	pargs -> source . ptr		8365950						
ANR	8366159	Symbol	& mode		8365950						
ANR	8366160	Symbol	pargs		8365950						
ANR	8366161	Symbol	* pgls		8365950						
ANR	8366162	Symbol	pgls -> memory		8365950						
ANR	8366163	Symbol	pargs -> phase		8365950						
ANR	8366164	Symbol	pgls -> g		8365950						
ANR	8366165	Symbol	pgls -> g . label		8365950						
ANR	8366166	Symbol	pargs -> source . limit		8365950						
ANR	8366167	Symbol	e_Range		8365950						
ANR	8366168	Symbol	rlimit		8365950						
ANR	8366169	Symbol	* ++ p		8365950						
ANR	8366170	Symbol	ch		8365950						
ANR	8366171	Symbol	pgls -> g . label . print_terminator		8365950						
ANR	8366172	Symbol	false		8365950						
ANR	8366173	Symbol	pgls -> g . label . terminator		8365950						
ANR	8366174	Symbol	hpgl_arg_c_int		8365950						
ANR	8366175	Symbol	* pargs		8365950						
ANR	8366176	Symbol	p		8365950						
ANR	8366177	Symbol	~1		8365950						
ANR	8366178	Symbol	* p		8365950						
ANR	8366179	Symbol	pargs -> source		8365950						
ANR	8366180	Symbol	gs_error_NeedInput		8365950						
ANR	8366181	Function	hpgl_DV	344:0:11192:11653							
ANR	8366182	FunctionDef	"hpgl_DV (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366181	0					
ANR	8366183	CompoundStatement		346:0:11246:11653	8366181	0					
ANR	8366184	IdentifierDeclStatement	int path ;	347:4:11252:11260	8366181	0	True				
ANR	8366185	IdentifierDecl	path		8366181	0					
ANR	8366186	IdentifierDeclType	int		8366181	0					
ANR	8366187	Identifier	path		8366181	1					
ANR	8366188	IdentifierDeclStatement	int line ;	348:4:11266:11274	8366181	1	True				
ANR	8366189	IdentifierDecl	line		8366181	0					
ANR	8366190	IdentifierDeclType	int		8366181	0					
ANR	8366191	Identifier	line		8366181	1					
ANR	8366192	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & path ) )"		8366181	2					
ANR	8366193	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & path )"	350:8:11285:11327	8366181	0	True				
ANR	8366194	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & path )"		8366181	0					
ANR	8366195	UnaryOperator	!		8366181	0					
ANR	8366196	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & path )"		8366181	1					
ANR	8366197	Callee	hpgl_arg_c_int		8366181	0					
ANR	8366198	Identifier	hpgl_arg_c_int		8366181	0					
ANR	8366199	ArgumentList	pgls -> memory		8366181	1					
ANR	8366200	Argument	pgls -> memory		8366181	0					
ANR	8366201	PtrMemberAccess	pgls -> memory		8366181	0					
ANR	8366202	Identifier	pgls		8366181	0					
ANR	8366203	Identifier	memory		8366181	1					
ANR	8366204	Argument	pargs		8366181	1					
ANR	8366205	Identifier	pargs		8366181	0					
ANR	8366206	Argument	& path		8366181	2					
ANR	8366207	UnaryOperationExpression	& path		8366181	0					
ANR	8366208	UnaryOperator	&		8366181	0					
ANR	8366209	Identifier	path		8366181	1					
ANR	8366210	ExpressionStatement	path = 0	351:8:11338:11346	8366181	1	True				
ANR	8366211	AssignmentExpression	path = 0		8366181	0		=			
ANR	8366212	Identifier	path		8366181	0					
ANR	8366213	PrimaryExpression	0		8366181	1					
ANR	8366214	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & line ) )"		8366181	3					
ANR	8366215	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & line )"	353:8:11361:11403	8366181	0	True				
ANR	8366216	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & line )"		8366181	0					
ANR	8366217	UnaryOperator	!		8366181	0					
ANR	8366218	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & line )"		8366181	1					
ANR	8366219	Callee	hpgl_arg_c_int		8366181	0					
ANR	8366220	Identifier	hpgl_arg_c_int		8366181	0					
ANR	8366221	ArgumentList	pgls -> memory		8366181	1					
ANR	8366222	Argument	pgls -> memory		8366181	0					
ANR	8366223	PtrMemberAccess	pgls -> memory		8366181	0					
ANR	8366224	Identifier	pgls		8366181	0					
ANR	8366225	Identifier	memory		8366181	1					
ANR	8366226	Argument	pargs		8366181	1					
ANR	8366227	Identifier	pargs		8366181	0					
ANR	8366228	Argument	& line		8366181	2					
ANR	8366229	UnaryOperationExpression	& line		8366181	0					
ANR	8366230	UnaryOperator	&		8366181	0					
ANR	8366231	Identifier	line		8366181	1					
ANR	8366232	ExpressionStatement	line = 0	354:8:11414:11422	8366181	1	True				
ANR	8366233	AssignmentExpression	line = 0		8366181	0		=			
ANR	8366234	Identifier	line		8366181	0					
ANR	8366235	PrimaryExpression	0		8366181	1					
ANR	8366236	IfStatement	if ( ( path & ~3 ) | ( line & ~1 ) )		8366181	4					
ANR	8366237	Condition	( path & ~3 ) | ( line & ~1 )	356:8:11433:11457	8366181	0	True				
ANR	8366238	InclusiveOrExpression	( path & ~3 ) | ( line & ~1 )		8366181	0		|			
ANR	8366239	BitAndExpression	path & ~3		8366181	0		&			
ANR	8366240	Identifier	path		8366181	0					
ANR	8366241	Identifier	~3		8366181	1					
ANR	8366242	BitAndExpression	line & ~1		8366181	1		&			
ANR	8366243	Identifier	line		8366181	0					
ANR	8366244	Identifier	~1		8366181	1					
ANR	8366245	ReturnStatement	return e_Range ;	357:8:11468:11482	8366181	1	True				
ANR	8366246	Identifier	e_Range		8366181	0					
ANR	8366247	ExpressionStatement	pgls -> g . character . text_path = path	358:4:11488:11522	8366181	5	True				
ANR	8366248	AssignmentExpression	pgls -> g . character . text_path = path		8366181	0		=			
ANR	8366249	MemberAccess	pgls -> g . character . text_path		8366181	0					
ANR	8366250	MemberAccess	pgls -> g . character		8366181	0					
ANR	8366251	PtrMemberAccess	pgls -> g		8366181	0					
ANR	8366252	Identifier	pgls		8366181	0					
ANR	8366253	Identifier	g		8366181	1					
ANR	8366254	Identifier	character		8366181	1					
ANR	8366255	Identifier	text_path		8366181	1					
ANR	8366256	Identifier	path		8366181	1					
ANR	8366257	ExpressionStatement	pgls -> g . character . line_feed_direction = ( line ? - 1 : 1 )	359:4:11528:11583	8366181	6	True				
ANR	8366258	AssignmentExpression	pgls -> g . character . line_feed_direction = ( line ? - 1 : 1 )		8366181	0		=			
ANR	8366259	MemberAccess	pgls -> g . character . line_feed_direction		8366181	0					
ANR	8366260	MemberAccess	pgls -> g . character		8366181	0					
ANR	8366261	PtrMemberAccess	pgls -> g		8366181	0					
ANR	8366262	Identifier	pgls		8366181	0					
ANR	8366263	Identifier	g		8366181	1					
ANR	8366264	Identifier	character		8366181	1					
ANR	8366265	Identifier	line_feed_direction		8366181	1					
ANR	8366266	ConditionalExpression	line ? - 1 : 1		8366181	1					
ANR	8366267	Condition	line		8366181	0					
ANR	8366268	Identifier	line		8366181	0					
ANR	8366269	UnaryOperationExpression	- 1		8366181	1					
ANR	8366270	UnaryOperator	-		8366181	0					
ANR	8366271	PrimaryExpression	1		8366181	1					
ANR	8366272	PrimaryExpression	1		8366181	2					
ANR	8366273	ExpressionStatement	hpgl_call ( hpgl_update_carriage_return_pos ( pgls ) )	360:4:11589:11637	8366181	7	True				
ANR	8366274	CallExpression	hpgl_call ( hpgl_update_carriage_return_pos ( pgls ) )		8366181	0					
ANR	8366275	Callee	hpgl_call		8366181	0					
ANR	8366276	Identifier	hpgl_call		8366181	0					
ANR	8366277	ArgumentList	hpgl_update_carriage_return_pos ( pgls )		8366181	1					
ANR	8366278	Argument	hpgl_update_carriage_return_pos ( pgls )		8366181	0					
ANR	8366279	CallExpression	hpgl_update_carriage_return_pos ( pgls )		8366181	0					
ANR	8366280	Callee	hpgl_update_carriage_return_pos		8366181	0					
ANR	8366281	Identifier	hpgl_update_carriage_return_pos		8366181	0					
ANR	8366282	ArgumentList	pgls		8366181	1					
ANR	8366283	Argument	pgls		8366181	0					
ANR	8366284	Identifier	pgls		8366181	0					
ANR	8366285	ReturnStatement	return 0 ;	361:4:11643:11651	8366181	8	True				
ANR	8366286	PrimaryExpression	0		8366181	0					
ANR	8366287	ReturnType	int		8366181	1					
ANR	8366288	Identifier	hpgl_DV		8366181	2					
ANR	8366289	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366181	3					
ANR	8366290	Parameter	hpgl_args_t * pargs	345:8:11204:11222	8366181	0	True				
ANR	8366291	ParameterType	hpgl_args_t *		8366181	0					
ANR	8366292	Identifier	pargs		8366181	1					
ANR	8366293	Parameter	hpgl_state_t * pgls	345:29:11225:11243	8366181	1	True				
ANR	8366294	ParameterType	hpgl_state_t *		8366181	0					
ANR	8366295	Identifier	pgls		8366181	1					
ANR	8366296	CFGEntryNode	ENTRY		8366181		True				
ANR	8366297	CFGExitNode	EXIT		8366181		True				
ANR	8366298	Symbol	e_Range		8366181						
ANR	8366299	Symbol	& line		8366181						
ANR	8366300	Symbol	pgls -> g . character . text_path		8366181						
ANR	8366301	Symbol	line		8366181						
ANR	8366302	Symbol	pgls		8366181						
ANR	8366303	Symbol	hpgl_arg_c_int		8366181						
ANR	8366304	Symbol	pgls -> g . character		8366181						
ANR	8366305	Symbol	& path		8366181						
ANR	8366306	Symbol	path		8366181						
ANR	8366307	Symbol	~1		8366181						
ANR	8366308	Symbol	pargs		8366181						
ANR	8366309	Symbol	~3		8366181						
ANR	8366310	Symbol	* pgls		8366181						
ANR	8366311	Symbol	pgls -> g . character . line_feed_direction		8366181						
ANR	8366312	Symbol	pgls -> memory		8366181						
ANR	8366313	Symbol	pgls -> g		8366181						
ANR	8366314	Symbol	hpgl_update_carriage_return_pos		8366181						
ANR	8366315	Function	hpgl_ES	365:0:11683:11985							
ANR	8366316	FunctionDef	"hpgl_ES (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366315	0					
ANR	8366317	CompoundStatement		367:0:11737:11985	8366315	0					
ANR	8366318	IdentifierDeclStatement	"hpgl_real_t width = 0 , height = 0 ;"	368:4:11743:11776	8366315	0	True				
ANR	8366319	IdentifierDecl	width = 0		8366315	0					
ANR	8366320	IdentifierDeclType	hpgl_real_t		8366315	0					
ANR	8366321	Identifier	width		8366315	1					
ANR	8366322	AssignmentExpression	width = 0		8366315	2		=			
ANR	8366323	Identifier	width		8366315	0					
ANR	8366324	PrimaryExpression	0		8366315	1					
ANR	8366325	IdentifierDecl	height = 0		8366315	1					
ANR	8366326	IdentifierDeclType	hpgl_real_t		8366315	0					
ANR	8366327	Identifier	height		8366315	1					
ANR	8366328	AssignmentExpression	height = 0		8366315	2		=			
ANR	8366329	Identifier	height		8366315	0					
ANR	8366330	PrimaryExpression	0		8366315	1					
ANR	8366331	ExpressionStatement	"hpgl_arg_c_real ( pgls -> memory , pargs , & width )"	370:4:11783:11827	8366315	1	True				
ANR	8366332	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & width )"		8366315	0					
ANR	8366333	Callee	hpgl_arg_c_real		8366315	0					
ANR	8366334	Identifier	hpgl_arg_c_real		8366315	0					
ANR	8366335	ArgumentList	pgls -> memory		8366315	1					
ANR	8366336	Argument	pgls -> memory		8366315	0					
ANR	8366337	PtrMemberAccess	pgls -> memory		8366315	0					
ANR	8366338	Identifier	pgls		8366315	0					
ANR	8366339	Identifier	memory		8366315	1					
ANR	8366340	Argument	pargs		8366315	1					
ANR	8366341	Identifier	pargs		8366315	0					
ANR	8366342	Argument	& width		8366315	2					
ANR	8366343	UnaryOperationExpression	& width		8366315	0					
ANR	8366344	UnaryOperator	&		8366315	0					
ANR	8366345	Identifier	width		8366315	1					
ANR	8366346	ExpressionStatement	"hpgl_arg_c_real ( pgls -> memory , pargs , & height )"	371:4:11833:11878	8366315	2	True				
ANR	8366347	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & height )"		8366315	0					
ANR	8366348	Callee	hpgl_arg_c_real		8366315	0					
ANR	8366349	Identifier	hpgl_arg_c_real		8366315	0					
ANR	8366350	ArgumentList	pgls -> memory		8366315	1					
ANR	8366351	Argument	pgls -> memory		8366315	0					
ANR	8366352	PtrMemberAccess	pgls -> memory		8366315	0					
ANR	8366353	Identifier	pgls		8366315	0					
ANR	8366354	Identifier	memory		8366315	1					
ANR	8366355	Argument	pargs		8366315	1					
ANR	8366356	Identifier	pargs		8366315	0					
ANR	8366357	Argument	& height		8366315	2					
ANR	8366358	UnaryOperationExpression	& height		8366315	0					
ANR	8366359	UnaryOperator	&		8366315	0					
ANR	8366360	Identifier	height		8366315	1					
ANR	8366361	ExpressionStatement	pgls -> g . character . extra_space . x = width	372:4:11884:11923	8366315	3	True				
ANR	8366362	AssignmentExpression	pgls -> g . character . extra_space . x = width		8366315	0		=			
ANR	8366363	MemberAccess	pgls -> g . character . extra_space . x		8366315	0					
ANR	8366364	MemberAccess	pgls -> g . character . extra_space		8366315	0					
ANR	8366365	MemberAccess	pgls -> g . character		8366315	0					
ANR	8366366	PtrMemberAccess	pgls -> g		8366315	0					
ANR	8366367	Identifier	pgls		8366315	0					
ANR	8366368	Identifier	g		8366315	1					
ANR	8366369	Identifier	character		8366315	1					
ANR	8366370	Identifier	extra_space		8366315	1					
ANR	8366371	Identifier	x		8366315	1					
ANR	8366372	Identifier	width		8366315	1					
ANR	8366373	ExpressionStatement	pgls -> g . character . extra_space . y = height	373:4:11929:11969	8366315	4	True				
ANR	8366374	AssignmentExpression	pgls -> g . character . extra_space . y = height		8366315	0		=			
ANR	8366375	MemberAccess	pgls -> g . character . extra_space . y		8366315	0					
ANR	8366376	MemberAccess	pgls -> g . character . extra_space		8366315	0					
ANR	8366377	MemberAccess	pgls -> g . character		8366315	0					
ANR	8366378	PtrMemberAccess	pgls -> g		8366315	0					
ANR	8366379	Identifier	pgls		8366315	0					
ANR	8366380	Identifier	g		8366315	1					
ANR	8366381	Identifier	character		8366315	1					
ANR	8366382	Identifier	extra_space		8366315	1					
ANR	8366383	Identifier	y		8366315	1					
ANR	8366384	Identifier	height		8366315	1					
ANR	8366385	ReturnStatement	return 0 ;	374:4:11975:11983	8366315	5	True				
ANR	8366386	PrimaryExpression	0		8366315	0					
ANR	8366387	ReturnType	int		8366315	1					
ANR	8366388	Identifier	hpgl_ES		8366315	2					
ANR	8366389	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366315	3					
ANR	8366390	Parameter	hpgl_args_t * pargs	366:8:11695:11713	8366315	0	True				
ANR	8366391	ParameterType	hpgl_args_t *		8366315	0					
ANR	8366392	Identifier	pargs		8366315	1					
ANR	8366393	Parameter	hpgl_state_t * pgls	366:29:11716:11734	8366315	1	True				
ANR	8366394	ParameterType	hpgl_state_t *		8366315	0					
ANR	8366395	Identifier	pgls		8366315	1					
ANR	8366396	CFGEntryNode	ENTRY		8366315		True				
ANR	8366397	CFGExitNode	EXIT		8366315		True				
ANR	8366398	Symbol	pgls		8366315						
ANR	8366399	Symbol	& width		8366315						
ANR	8366400	Symbol	pgls -> g . character		8366315						
ANR	8366401	Symbol	& height		8366315						
ANR	8366402	Symbol	pgls -> g . character . extra_space . y		8366315						
ANR	8366403	Symbol	pgls -> g . character . extra_space . x		8366315						
ANR	8366404	Symbol	pargs		8366315						
ANR	8366405	Symbol	* pgls		8366315						
ANR	8366406	Symbol	width		8366315						
ANR	8366407	Symbol	pgls -> memory		8366315						
ANR	8366408	Symbol	pgls -> g		8366315						
ANR	8366409	Symbol	pgls -> g . character . extra_space		8366315						
ANR	8366410	Symbol	height		8366315						
ANR	8366411	Function	hpgl_FI	378:0:12005:12112							
ANR	8366412	FunctionDef	"hpgl_FI (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366411	0					
ANR	8366413	CompoundStatement		380:0:12059:12112	8366411	0					
ANR	8366414	ReturnStatement	"return hpgl_select_font_by_id ( pargs , pgls , 0 ) ;"	381:4:12065:12110	8366411	0	True				
ANR	8366415	CallExpression	"hpgl_select_font_by_id ( pargs , pgls , 0 )"		8366411	0					
ANR	8366416	Callee	hpgl_select_font_by_id		8366411	0					
ANR	8366417	Identifier	hpgl_select_font_by_id		8366411	0					
ANR	8366418	ArgumentList	pargs		8366411	1					
ANR	8366419	Argument	pargs		8366411	0					
ANR	8366420	Identifier	pargs		8366411	0					
ANR	8366421	Argument	pgls		8366411	1					
ANR	8366422	Identifier	pgls		8366411	0					
ANR	8366423	Argument	0		8366411	2					
ANR	8366424	PrimaryExpression	0		8366411	0					
ANR	8366425	ReturnType	int		8366411	1					
ANR	8366426	Identifier	hpgl_FI		8366411	2					
ANR	8366427	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366411	3					
ANR	8366428	Parameter	hpgl_args_t * pargs	379:8:12017:12035	8366411	0	True				
ANR	8366429	ParameterType	hpgl_args_t *		8366411	0					
ANR	8366430	Identifier	pargs		8366411	1					
ANR	8366431	Parameter	hpgl_state_t * pgls	379:29:12038:12056	8366411	1	True				
ANR	8366432	ParameterType	hpgl_state_t *		8366411	0					
ANR	8366433	Identifier	pgls		8366411	1					
ANR	8366434	CFGEntryNode	ENTRY		8366411		True				
ANR	8366435	CFGExitNode	EXIT		8366411		True				
ANR	8366436	Symbol	pargs		8366411						
ANR	8366437	Symbol	hpgl_select_font_by_id		8366411						
ANR	8366438	Symbol	pgls		8366411						
ANR	8366439	Function	hpgl_FN	385:0:12132:12239							
ANR	8366440	FunctionDef	"hpgl_FN (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366439	0					
ANR	8366441	CompoundStatement		387:0:12186:12239	8366439	0					
ANR	8366442	ReturnStatement	"return hpgl_select_font_by_id ( pargs , pgls , 1 ) ;"	388:4:12192:12237	8366439	0	True				
ANR	8366443	CallExpression	"hpgl_select_font_by_id ( pargs , pgls , 1 )"		8366439	0					
ANR	8366444	Callee	hpgl_select_font_by_id		8366439	0					
ANR	8366445	Identifier	hpgl_select_font_by_id		8366439	0					
ANR	8366446	ArgumentList	pargs		8366439	1					
ANR	8366447	Argument	pargs		8366439	0					
ANR	8366448	Identifier	pargs		8366439	0					
ANR	8366449	Argument	pgls		8366439	1					
ANR	8366450	Identifier	pgls		8366439	0					
ANR	8366451	Argument	1		8366439	2					
ANR	8366452	PrimaryExpression	1		8366439	0					
ANR	8366453	ReturnType	int		8366439	1					
ANR	8366454	Identifier	hpgl_FN		8366439	2					
ANR	8366455	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366439	3					
ANR	8366456	Parameter	hpgl_args_t * pargs	386:8:12144:12162	8366439	0	True				
ANR	8366457	ParameterType	hpgl_args_t *		8366439	0					
ANR	8366458	Identifier	pargs		8366439	1					
ANR	8366459	Parameter	hpgl_state_t * pgls	386:29:12165:12183	8366439	1	True				
ANR	8366460	ParameterType	hpgl_state_t *		8366439	0					
ANR	8366461	Identifier	pgls		8366439	1					
ANR	8366462	CFGEntryNode	ENTRY		8366439		True				
ANR	8366463	CFGExitNode	EXIT		8366439		True				
ANR	8366464	Symbol	pargs		8366439						
ANR	8366465	Symbol	hpgl_select_font_by_id		8366439						
ANR	8366466	Symbol	pgls		8366439						
ANR	8366467	Function	hpgl_LM	393:0:12345:13212							
ANR	8366468	FunctionDef	"hpgl_LM (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366467	0					
ANR	8366469	CompoundStatement		395:0:12399:13212	8366467	0					
ANR	8366470	IdentifierDeclStatement	int mode ;	396:4:12405:12413	8366467	0	True				
ANR	8366471	IdentifierDecl	mode		8366467	0					
ANR	8366472	IdentifierDeclType	int		8366467	0					
ANR	8366473	Identifier	mode		8366467	1					
ANR	8366474	IdentifierDeclStatement	int row_number ;	397:4:12419:12433	8366467	1	True				
ANR	8366475	IdentifierDecl	row_number		8366467	0					
ANR	8366476	IdentifierDeclType	int		8366467	0					
ANR	8366477	Identifier	row_number		8366467	1					
ANR	8366478	IdentifierDeclStatement	int old_mode = ( pgls -> g . label . double_byte ? 1 : 0 ) + ( pgls -> g . label . write_vertical ? 2 : 0 ) ;	398:4:12439:12546	8366467	2	True				
ANR	8366479	IdentifierDecl	old_mode = ( pgls -> g . label . double_byte ? 1 : 0 ) + ( pgls -> g . label . write_vertical ? 2 : 0 )		8366467	0					
ANR	8366480	IdentifierDeclType	int		8366467	0					
ANR	8366481	Identifier	old_mode		8366467	1					
ANR	8366482	AssignmentExpression	old_mode = ( pgls -> g . label . double_byte ? 1 : 0 ) + ( pgls -> g . label . write_vertical ? 2 : 0 )		8366467	2		=			
ANR	8366483	Identifier	old_mode		8366467	0					
ANR	8366484	AdditiveExpression	( pgls -> g . label . double_byte ? 1 : 0 ) + ( pgls -> g . label . write_vertical ? 2 : 0 )		8366467	1		+			
ANR	8366485	ConditionalExpression	pgls -> g . label . double_byte ? 1 : 0		8366467	0					
ANR	8366486	Condition	pgls -> g . label . double_byte		8366467	0					
ANR	8366487	MemberAccess	pgls -> g . label . double_byte		8366467	0					
ANR	8366488	MemberAccess	pgls -> g . label		8366467	0					
ANR	8366489	PtrMemberAccess	pgls -> g		8366467	0					
ANR	8366490	Identifier	pgls		8366467	0					
ANR	8366491	Identifier	g		8366467	1					
ANR	8366492	Identifier	label		8366467	1					
ANR	8366493	Identifier	double_byte		8366467	1					
ANR	8366494	PrimaryExpression	1		8366467	1					
ANR	8366495	PrimaryExpression	0		8366467	2					
ANR	8366496	ConditionalExpression	pgls -> g . label . write_vertical ? 2 : 0		8366467	1					
ANR	8366497	Condition	pgls -> g . label . write_vertical		8366467	0					
ANR	8366498	MemberAccess	pgls -> g . label . write_vertical		8366467	0					
ANR	8366499	MemberAccess	pgls -> g . label		8366467	0					
ANR	8366500	PtrMemberAccess	pgls -> g		8366467	0					
ANR	8366501	Identifier	pgls		8366467	0					
ANR	8366502	Identifier	g		8366467	1					
ANR	8366503	Identifier	label		8366467	1					
ANR	8366504	Identifier	write_vertical		8366467	1					
ANR	8366505	PrimaryExpression	2		8366467	1					
ANR	8366506	PrimaryExpression	0		8366467	2					
ANR	8366507	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) )"		8366467	3					
ANR	8366508	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & mode )"	402:8:12557:12599	8366467	0	True				
ANR	8366509	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & mode )"		8366467	0					
ANR	8366510	UnaryOperator	!		8366467	0					
ANR	8366511	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode )"		8366467	1					
ANR	8366512	Callee	hpgl_arg_c_int		8366467	0					
ANR	8366513	Identifier	hpgl_arg_c_int		8366467	0					
ANR	8366514	ArgumentList	pgls -> memory		8366467	1					
ANR	8366515	Argument	pgls -> memory		8366467	0					
ANR	8366516	PtrMemberAccess	pgls -> memory		8366467	0					
ANR	8366517	Identifier	pgls		8366467	0					
ANR	8366518	Identifier	memory		8366467	1					
ANR	8366519	Argument	pargs		8366467	1					
ANR	8366520	Identifier	pargs		8366467	0					
ANR	8366521	Argument	& mode		8366467	2					
ANR	8366522	UnaryOperationExpression	& mode		8366467	0					
ANR	8366523	UnaryOperator	&		8366467	0					
ANR	8366524	Identifier	mode		8366467	1					
ANR	8366525	ExpressionStatement	mode = 0	403:8:12610:12618	8366467	1	True				
ANR	8366526	AssignmentExpression	mode = 0		8366467	0		=			
ANR	8366527	Identifier	mode		8366467	0					
ANR	8366528	PrimaryExpression	0		8366467	1					
ANR	8366529	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & row_number ) )"		8366467	4					
ANR	8366530	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & row_number )"	405:8:12629:12677	8366467	0	True				
ANR	8366531	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & row_number )"		8366467	0					
ANR	8366532	UnaryOperator	!		8366467	0					
ANR	8366533	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & row_number )"		8366467	1					
ANR	8366534	Callee	hpgl_arg_c_int		8366467	0					
ANR	8366535	Identifier	hpgl_arg_c_int		8366467	0					
ANR	8366536	ArgumentList	pgls -> memory		8366467	1					
ANR	8366537	Argument	pgls -> memory		8366467	0					
ANR	8366538	PtrMemberAccess	pgls -> memory		8366467	0					
ANR	8366539	Identifier	pgls		8366467	0					
ANR	8366540	Identifier	memory		8366467	1					
ANR	8366541	Argument	pargs		8366467	1					
ANR	8366542	Identifier	pargs		8366467	0					
ANR	8366543	Argument	& row_number		8366467	2					
ANR	8366544	UnaryOperationExpression	& row_number		8366467	0					
ANR	8366545	UnaryOperator	&		8366467	0					
ANR	8366546	Identifier	row_number		8366467	1					
ANR	8366547	ExpressionStatement	row_number = 0	406:8:12688:12702	8366467	1	True				
ANR	8366548	AssignmentExpression	row_number = 0		8366467	0		=			
ANR	8366549	Identifier	row_number		8366467	0					
ANR	8366550	PrimaryExpression	0		8366467	1					
ANR	8366551	ExpressionStatement	pgls -> g . label . row_offset = ( row_number < 0 ? 0 : row_number > 255 ? 255 : row_number ) << 8	408:4:12709:12807	8366467	5	True				
ANR	8366552	AssignmentExpression	pgls -> g . label . row_offset = ( row_number < 0 ? 0 : row_number > 255 ? 255 : row_number ) << 8		8366467	0		=			
ANR	8366553	MemberAccess	pgls -> g . label . row_offset		8366467	0					
ANR	8366554	MemberAccess	pgls -> g . label		8366467	0					
ANR	8366555	PtrMemberAccess	pgls -> g		8366467	0					
ANR	8366556	Identifier	pgls		8366467	0					
ANR	8366557	Identifier	g		8366467	1					
ANR	8366558	Identifier	label		8366467	1					
ANR	8366559	Identifier	row_offset		8366467	1					
ANR	8366560	ShiftExpression	( row_number < 0 ? 0 : row_number > 255 ? 255 : row_number ) << 8		8366467	1		<<			
ANR	8366561	ConditionalExpression	row_number < 0 ? 0 : row_number > 255 ? 255 : row_number		8366467	0					
ANR	8366562	Condition	row_number < 0		8366467	0					
ANR	8366563	RelationalExpression	row_number < 0		8366467	0		<			
ANR	8366564	Identifier	row_number		8366467	0					
ANR	8366565	PrimaryExpression	0		8366467	1					
ANR	8366566	PrimaryExpression	0		8366467	1					
ANR	8366567	ConditionalExpression	row_number > 255 ? 255 : row_number		8366467	2					
ANR	8366568	Condition	row_number > 255		8366467	0					
ANR	8366569	RelationalExpression	row_number > 255		8366467	0		>			
ANR	8366570	Identifier	row_number		8366467	0					
ANR	8366571	PrimaryExpression	255		8366467	1					
ANR	8366572	PrimaryExpression	255		8366467	1					
ANR	8366573	Identifier	row_number		8366467	2					
ANR	8366574	PrimaryExpression	8		8366467	1					
ANR	8366575	ExpressionStatement	mode &= 3	410:4:12813:12822	8366467	6	True				
ANR	8366576	AssignmentExpression	mode &= 3		8366467	0		&=			
ANR	8366577	Identifier	mode		8366467	0					
ANR	8366578	PrimaryExpression	3		8366467	1					
ANR	8366579	ExpressionStatement	pgls -> g . label . double_byte = ( mode & 1 ) != 0	411:4:12828:12871	8366467	7	True				
ANR	8366580	AssignmentExpression	pgls -> g . label . double_byte = ( mode & 1 ) != 0		8366467	0		=			
ANR	8366581	MemberAccess	pgls -> g . label . double_byte		8366467	0					
ANR	8366582	MemberAccess	pgls -> g . label		8366467	0					
ANR	8366583	PtrMemberAccess	pgls -> g		8366467	0					
ANR	8366584	Identifier	pgls		8366467	0					
ANR	8366585	Identifier	g		8366467	1					
ANR	8366586	Identifier	label		8366467	1					
ANR	8366587	Identifier	double_byte		8366467	1					
ANR	8366588	EqualityExpression	( mode & 1 ) != 0		8366467	1		!=			
ANR	8366589	BitAndExpression	mode & 1		8366467	0		&			
ANR	8366590	Identifier	mode		8366467	0					
ANR	8366591	PrimaryExpression	1		8366467	1					
ANR	8366592	PrimaryExpression	0		8366467	1					
ANR	8366593	ExpressionStatement	pgls -> g . label . write_vertical = ( mode & 2 ) != 0	412:4:12877:12923	8366467	8	True				
ANR	8366594	AssignmentExpression	pgls -> g . label . write_vertical = ( mode & 2 ) != 0		8366467	0		=			
ANR	8366595	MemberAccess	pgls -> g . label . write_vertical		8366467	0					
ANR	8366596	MemberAccess	pgls -> g . label		8366467	0					
ANR	8366597	PtrMemberAccess	pgls -> g		8366467	0					
ANR	8366598	Identifier	pgls		8366467	0					
ANR	8366599	Identifier	g		8366467	1					
ANR	8366600	Identifier	label		8366467	1					
ANR	8366601	Identifier	write_vertical		8366467	1					
ANR	8366602	EqualityExpression	( mode & 2 ) != 0		8366467	1		!=			
ANR	8366603	BitAndExpression	mode & 2		8366467	0		&			
ANR	8366604	Identifier	mode		8366467	0					
ANR	8366605	PrimaryExpression	2		8366467	1					
ANR	8366606	PrimaryExpression	0		8366467	1					
ANR	8366607	IfStatement	if ( mode != old_mode )		8366467	9					
ANR	8366608	Condition	mode != old_mode	418:8:13147:13162	8366467	0	True				
ANR	8366609	EqualityExpression	mode != old_mode		8366467	0		!=			
ANR	8366610	Identifier	mode		8366467	0					
ANR	8366611	Identifier	old_mode		8366467	1					
ANR	8366612	ExpressionStatement	pgls -> g . symbol_mode = 0	419:8:13173:13196	8366467	1	True				
ANR	8366613	AssignmentExpression	pgls -> g . symbol_mode = 0		8366467	0		=			
ANR	8366614	MemberAccess	pgls -> g . symbol_mode		8366467	0					
ANR	8366615	PtrMemberAccess	pgls -> g		8366467	0					
ANR	8366616	Identifier	pgls		8366467	0					
ANR	8366617	Identifier	g		8366467	1					
ANR	8366618	Identifier	symbol_mode		8366467	1					
ANR	8366619	PrimaryExpression	0		8366467	1					
ANR	8366620	ReturnStatement	return 0 ;	420:4:13202:13210	8366467	10	True				
ANR	8366621	PrimaryExpression	0		8366467	0					
ANR	8366622	ReturnType	int		8366467	1					
ANR	8366623	Identifier	hpgl_LM		8366467	2					
ANR	8366624	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366467	3					
ANR	8366625	Parameter	hpgl_args_t * pargs	394:8:12357:12375	8366467	0	True				
ANR	8366626	ParameterType	hpgl_args_t *		8366467	0					
ANR	8366627	Identifier	pargs		8366467	1					
ANR	8366628	Parameter	hpgl_state_t * pgls	394:29:12378:12396	8366467	1	True				
ANR	8366629	ParameterType	hpgl_state_t *		8366467	0					
ANR	8366630	Identifier	pgls		8366467	1					
ANR	8366631	CFGEntryNode	ENTRY		8366467		True				
ANR	8366632	CFGExitNode	EXIT		8366467		True				
ANR	8366633	Symbol	& row_number		8366467						
ANR	8366634	Symbol	pgls -> g . label . row_offset		8366467						
ANR	8366635	Symbol	pgls		8366467						
ANR	8366636	Symbol	hpgl_arg_c_int		8366467						
ANR	8366637	Symbol	old_mode		8366467						
ANR	8366638	Symbol	mode		8366467						
ANR	8366639	Symbol	pgls -> g . symbol_mode		8366467						
ANR	8366640	Symbol	& mode		8366467						
ANR	8366641	Symbol	pgls -> g . label . write_vertical		8366467						
ANR	8366642	Symbol	pargs		8366467						
ANR	8366643	Symbol	* pgls		8366467						
ANR	8366644	Symbol	pgls -> memory		8366467						
ANR	8366645	Symbol	pgls -> g . label . double_byte		8366467						
ANR	8366646	Symbol	pgls -> g		8366467						
ANR	8366647	Symbol	row_number		8366467						
ANR	8366648	Symbol	pgls -> g . label		8366467						
ANR	8366649	Function	hpgl_LO	424:0:13234:13577							
ANR	8366650	FunctionDef	"hpgl_LO (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366649	0					
ANR	8366651	CompoundStatement		426:0:13288:13577	8366649	0					
ANR	8366652	IdentifierDeclStatement	int origin ;	427:4:13294:13304	8366649	0	True				
ANR	8366653	IdentifierDecl	origin		8366649	0					
ANR	8366654	IdentifierDeclType	int		8366649	0					
ANR	8366655	Identifier	origin		8366649	1					
ANR	8366656	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & origin ) )"		8366649	1					
ANR	8366657	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & origin )"	429:8:13315:13359	8366649	0	True				
ANR	8366658	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & origin )"		8366649	0					
ANR	8366659	UnaryOperator	!		8366649	0					
ANR	8366660	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & origin )"		8366649	1					
ANR	8366661	Callee	hpgl_arg_c_int		8366649	0					
ANR	8366662	Identifier	hpgl_arg_c_int		8366649	0					
ANR	8366663	ArgumentList	pgls -> memory		8366649	1					
ANR	8366664	Argument	pgls -> memory		8366649	0					
ANR	8366665	PtrMemberAccess	pgls -> memory		8366649	0					
ANR	8366666	Identifier	pgls		8366649	0					
ANR	8366667	Identifier	memory		8366649	1					
ANR	8366668	Argument	pargs		8366649	1					
ANR	8366669	Identifier	pargs		8366649	0					
ANR	8366670	Argument	& origin		8366649	2					
ANR	8366671	UnaryOperationExpression	& origin		8366649	0					
ANR	8366672	UnaryOperator	&		8366649	0					
ANR	8366673	Identifier	origin		8366649	1					
ANR	8366674	ExpressionStatement	origin = 1	430:8:13370:13380	8366649	1	True				
ANR	8366675	AssignmentExpression	origin = 1		8366649	0		=			
ANR	8366676	Identifier	origin		8366649	0					
ANR	8366677	PrimaryExpression	1		8366649	1					
ANR	8366678	IfStatement	if ( origin < 1 || origin == 10 || origin == 20 || origin > 21 )		8366649	2					
ANR	8366679	Condition	origin < 1 || origin == 10 || origin == 20 || origin > 21	432:8:13391:13447	8366649	0	True				
ANR	8366680	OrExpression	origin < 1 || origin == 10 || origin == 20 || origin > 21		8366649	0		||			
ANR	8366681	RelationalExpression	origin < 1		8366649	0		<			
ANR	8366682	Identifier	origin		8366649	0					
ANR	8366683	PrimaryExpression	1		8366649	1					
ANR	8366684	OrExpression	origin == 10 || origin == 20 || origin > 21		8366649	1		||			
ANR	8366685	EqualityExpression	origin == 10		8366649	0		==			
ANR	8366686	Identifier	origin		8366649	0					
ANR	8366687	PrimaryExpression	10		8366649	1					
ANR	8366688	OrExpression	origin == 20 || origin > 21		8366649	1		||			
ANR	8366689	EqualityExpression	origin == 20		8366649	0		==			
ANR	8366690	Identifier	origin		8366649	0					
ANR	8366691	PrimaryExpression	20		8366649	1					
ANR	8366692	RelationalExpression	origin > 21		8366649	1		>			
ANR	8366693	Identifier	origin		8366649	0					
ANR	8366694	PrimaryExpression	21		8366649	1					
ANR	8366695	ReturnStatement	return e_Range ;	433:8:13458:13472	8366649	1	True				
ANR	8366696	Identifier	e_Range		8366649	0					
ANR	8366697	ExpressionStatement	pgls -> g . label . origin = origin	434:4:13478:13507	8366649	3	True				
ANR	8366698	AssignmentExpression	pgls -> g . label . origin = origin		8366649	0		=			
ANR	8366699	MemberAccess	pgls -> g . label . origin		8366649	0					
ANR	8366700	MemberAccess	pgls -> g . label		8366649	0					
ANR	8366701	PtrMemberAccess	pgls -> g		8366649	0					
ANR	8366702	Identifier	pgls		8366649	0					
ANR	8366703	Identifier	g		8366649	1					
ANR	8366704	Identifier	label		8366649	1					
ANR	8366705	Identifier	origin		8366649	1					
ANR	8366706	Identifier	origin		8366649	1					
ANR	8366707	ExpressionStatement	hpgl_call ( hpgl_update_carriage_return_pos ( pgls ) )	435:4:13513:13561	8366649	4	True				
ANR	8366708	CallExpression	hpgl_call ( hpgl_update_carriage_return_pos ( pgls ) )		8366649	0					
ANR	8366709	Callee	hpgl_call		8366649	0					
ANR	8366710	Identifier	hpgl_call		8366649	0					
ANR	8366711	ArgumentList	hpgl_update_carriage_return_pos ( pgls )		8366649	1					
ANR	8366712	Argument	hpgl_update_carriage_return_pos ( pgls )		8366649	0					
ANR	8366713	CallExpression	hpgl_update_carriage_return_pos ( pgls )		8366649	0					
ANR	8366714	Callee	hpgl_update_carriage_return_pos		8366649	0					
ANR	8366715	Identifier	hpgl_update_carriage_return_pos		8366649	0					
ANR	8366716	ArgumentList	pgls		8366649	1					
ANR	8366717	Argument	pgls		8366649	0					
ANR	8366718	Identifier	pgls		8366649	0					
ANR	8366719	ReturnStatement	return 0 ;	436:4:13567:13575	8366649	5	True				
ANR	8366720	PrimaryExpression	0		8366649	0					
ANR	8366721	ReturnType	int		8366649	1					
ANR	8366722	Identifier	hpgl_LO		8366649	2					
ANR	8366723	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366649	3					
ANR	8366724	Parameter	hpgl_args_t * pargs	425:8:13246:13264	8366649	0	True				
ANR	8366725	ParameterType	hpgl_args_t *		8366649	0					
ANR	8366726	Identifier	pargs		8366649	1					
ANR	8366727	Parameter	hpgl_state_t * pgls	425:29:13267:13285	8366649	1	True				
ANR	8366728	ParameterType	hpgl_state_t *		8366649	0					
ANR	8366729	Identifier	pgls		8366649	1					
ANR	8366730	CFGEntryNode	ENTRY		8366649		True				
ANR	8366731	CFGExitNode	EXIT		8366649		True				
ANR	8366732	Symbol	e_Range		8366649						
ANR	8366733	Symbol	pgls -> g . label . origin		8366649						
ANR	8366734	Symbol	pargs		8366649						
ANR	8366735	Symbol	& origin		8366649						
ANR	8366736	Symbol	* pgls		8366649						
ANR	8366737	Symbol	origin		8366649						
ANR	8366738	Symbol	pgls -> memory		8366649						
ANR	8366739	Symbol	pgls		8366649						
ANR	8366740	Symbol	pgls -> g		8366649						
ANR	8366741	Symbol	pgls -> g . label		8366649						
ANR	8366742	Symbol	hpgl_arg_c_int		8366649						
ANR	8366743	Symbol	hpgl_update_carriage_return_pos		8366649						
ANR	8366744	Function	hpgl_SA	440:0:13590:13684							
ANR	8366745	FunctionDef	"hpgl_SA (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366744	0					
ANR	8366746	CompoundStatement		442:0:13644:13684	8366744	0					
ANR	8366747	ReturnStatement	"return hpgl_select_font ( pgls , 1 ) ;"	443:4:13650:13682	8366744	0	True				
ANR	8366748	CallExpression	"hpgl_select_font ( pgls , 1 )"		8366744	0					
ANR	8366749	Callee	hpgl_select_font		8366744	0					
ANR	8366750	Identifier	hpgl_select_font		8366744	0					
ANR	8366751	ArgumentList	pgls		8366744	1					
ANR	8366752	Argument	pgls		8366744	0					
ANR	8366753	Identifier	pgls		8366744	0					
ANR	8366754	Argument	1		8366744	1					
ANR	8366755	PrimaryExpression	1		8366744	0					
ANR	8366756	ReturnType	int		8366744	1					
ANR	8366757	Identifier	hpgl_SA		8366744	2					
ANR	8366758	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366744	3					
ANR	8366759	Parameter	hpgl_args_t * pargs	441:8:13602:13620	8366744	0	True				
ANR	8366760	ParameterType	hpgl_args_t *		8366744	0					
ANR	8366761	Identifier	pargs		8366744	1					
ANR	8366762	Parameter	hpgl_state_t * pgls	441:29:13623:13641	8366744	1	True				
ANR	8366763	ParameterType	hpgl_state_t *		8366744	0					
ANR	8366764	Identifier	pgls		8366744	1					
ANR	8366765	CFGEntryNode	ENTRY		8366744		True				
ANR	8366766	CFGExitNode	EXIT		8366744		True				
ANR	8366767	Symbol	hpgl_select_font		8366744						
ANR	8366768	Symbol	pargs		8366744						
ANR	8366769	Symbol	pgls		8366744						
ANR	8366770	Function	hpgl_SB	447:0:13704:14626							
ANR	8366771	FunctionDef	"hpgl_SB (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366770	0					
ANR	8366772	CompoundStatement		449:0:13758:14626	8366770	0					
ANR	8366773	IdentifierDeclStatement	int mode = 0 ;	450:4:13764:13776	8366770	0	True				
ANR	8366774	IdentifierDecl	mode = 0		8366770	0					
ANR	8366775	IdentifierDeclType	int		8366770	0					
ANR	8366776	Identifier	mode		8366770	1					
ANR	8366777	AssignmentExpression	mode = 0		8366770	2		=			
ANR	8366778	Identifier	mode		8366770	0					
ANR	8366779	PrimaryExpression	0		8366770	1					
ANR	8366780	IfStatement	"if ( hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) && ( mode & ~1 ) )"		8366770	1					
ANR	8366781	Condition	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) && ( mode & ~1 )"	452:8:13787:13843	8366770	0	True				
ANR	8366782	AndExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) && ( mode & ~1 )"		8366770	0		&&			
ANR	8366783	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode )"		8366770	0					
ANR	8366784	Callee	hpgl_arg_c_int		8366770	0					
ANR	8366785	Identifier	hpgl_arg_c_int		8366770	0					
ANR	8366786	ArgumentList	pgls -> memory		8366770	1					
ANR	8366787	Argument	pgls -> memory		8366770	0					
ANR	8366788	PtrMemberAccess	pgls -> memory		8366770	0					
ANR	8366789	Identifier	pgls		8366770	0					
ANR	8366790	Identifier	memory		8366770	1					
ANR	8366791	Argument	pargs		8366770	1					
ANR	8366792	Identifier	pargs		8366770	0					
ANR	8366793	Argument	& mode		8366770	2					
ANR	8366794	UnaryOperationExpression	& mode		8366770	0					
ANR	8366795	UnaryOperator	&		8366770	0					
ANR	8366796	Identifier	mode		8366770	1					
ANR	8366797	BitAndExpression	mode & ~1		8366770	1		&			
ANR	8366798	Identifier	mode		8366770	0					
ANR	8366799	Identifier	~1		8366770	1					
ANR	8366800	ReturnStatement	return e_Range ;	453:8:13854:13868	8366770	1	True				
ANR	8366801	Identifier	e_Range		8366770	0					
ANR	8366802	CompoundStatement		7:8:125:130	8366770	2					
ANR	8366803	IdentifierDeclStatement	int i ;	455:8:13884:13889	8366770	0	True				
ANR	8366804	IdentifierDecl	i		8366770	0					
ANR	8366805	IdentifierDeclType	int		8366770	0					
ANR	8366806	Identifier	i		8366770	1					
ANR	8366807	ExpressionStatement	pgls -> g . bitmap_fonts_allowed = mode	457:8:13900:13935	8366770	1	True				
ANR	8366808	AssignmentExpression	pgls -> g . bitmap_fonts_allowed = mode		8366770	0		=			
ANR	8366809	MemberAccess	pgls -> g . bitmap_fonts_allowed		8366770	0					
ANR	8366810	PtrMemberAccess	pgls -> g		8366770	0					
ANR	8366811	Identifier	pgls		8366770	0					
ANR	8366812	Identifier	g		8366770	1					
ANR	8366813	Identifier	bitmap_fonts_allowed		8366770	1					
ANR	8366814	Identifier	mode		8366770	1					
ANR	8366815	ForStatement	for ( i = 0 ; i < countof ( pgls -> g . font_selection ) ; ++ i )		8366770	2					
ANR	8366816	ForInit	i = 0 ;	464:13:14205:14210	8366770	0	True				
ANR	8366817	AssignmentExpression	i = 0		8366770	0		=			
ANR	8366818	Identifier	i		8366770	0					
ANR	8366819	PrimaryExpression	0		8366770	1					
ANR	8366820	Condition	i < countof ( pgls -> g . font_selection )	464:20:14212:14246	8366770	1	True				
ANR	8366821	RelationalExpression	i < countof ( pgls -> g . font_selection )		8366770	0		<			
ANR	8366822	Identifier	i		8366770	0					
ANR	8366823	CallExpression	countof ( pgls -> g . font_selection )		8366770	1					
ANR	8366824	Callee	countof		8366770	0					
ANR	8366825	Identifier	countof		8366770	0					
ANR	8366826	ArgumentList	pgls -> g . font_selection		8366770	1					
ANR	8366827	Argument	pgls -> g . font_selection		8366770	0					
ANR	8366828	MemberAccess	pgls -> g . font_selection		8366770	0					
ANR	8366829	PtrMemberAccess	pgls -> g		8366770	0					
ANR	8366830	Identifier	pgls		8366770	0					
ANR	8366831	Identifier	g		8366770	1					
ANR	8366832	Identifier	font_selection		8366770	1					
ANR	8366833	UnaryExpression	++ i	464:57:14249:14251	8366770	2	True				
ANR	8366834	IncDec	++		8366770	0					
ANR	8366835	Identifier	i		8366770	1					
ANR	8366836	CompoundStatement		17:12:509:563	8366770	3					
ANR	8366837	IdentifierDeclStatement	pcl_font_selection_t * pfs = & pgls -> g . font_selection [ i ] ;	465:12:14268:14322	8366770	0	True				
ANR	8366838	IdentifierDecl	* pfs = & pgls -> g . font_selection [ i ]		8366770	0					
ANR	8366839	IdentifierDeclType	pcl_font_selection_t *		8366770	0					
ANR	8366840	Identifier	pfs		8366770	1					
ANR	8366841	AssignmentExpression	* pfs = & pgls -> g . font_selection [ i ]		8366770	2		=			
ANR	8366842	Identifier	pfs		8366770	0					
ANR	8366843	UnaryOperationExpression	& pgls -> g . font_selection [ i ]		8366770	1					
ANR	8366844	UnaryOperator	&		8366770	0					
ANR	8366845	ArrayIndexing	pgls -> g . font_selection [ i ]		8366770	1					
ANR	8366846	MemberAccess	pgls -> g . font_selection		8366770	0					
ANR	8366847	PtrMemberAccess	pgls -> g		8366770	0					
ANR	8366848	Identifier	pgls		8366770	0					
ANR	8366849	Identifier	g		8366770	1					
ANR	8366850	Identifier	font_selection		8366770	1					
ANR	8366851	Identifier	i		8366770	1					
ANR	8366852	IfStatement	if ( ( ( int ) pfs -> selected_id < 0 ) || ( ! mode && pfs -> font != 0 && pfs -> font -> scaling_technology == plfst_bitmap ) )		8366770	1					
ANR	8366853	Condition	( ( int ) pfs -> selected_id < 0 ) || ( ! mode && pfs -> font != 0 && pfs -> font -> scaling_technology == plfst_bitmap )	467:16:14341:14478	8366770	0	True				
ANR	8366854	OrExpression	( ( int ) pfs -> selected_id < 0 ) || ( ! mode && pfs -> font != 0 && pfs -> font -> scaling_technology == plfst_bitmap )		8366770	0		||			
ANR	8366855	RelationalExpression	( int ) pfs -> selected_id < 0		8366770	0		<			
ANR	8366856	CastExpression	( int ) pfs -> selected_id		8366770	0					
ANR	8366857	CastTarget	int		8366770	0					
ANR	8366858	PtrMemberAccess	pfs -> selected_id		8366770	1					
ANR	8366859	Identifier	pfs		8366770	0					
ANR	8366860	Identifier	selected_id		8366770	1					
ANR	8366861	PrimaryExpression	0		8366770	1					
ANR	8366862	AndExpression	! mode && pfs -> font != 0 && pfs -> font -> scaling_technology == plfst_bitmap		8366770	1		&&			
ANR	8366863	UnaryOperationExpression	! mode		8366770	0					
ANR	8366864	UnaryOperator	!		8366770	0					
ANR	8366865	Identifier	mode		8366770	1					
ANR	8366866	AndExpression	pfs -> font != 0 && pfs -> font -> scaling_technology == plfst_bitmap		8366770	1		&&			
ANR	8366867	EqualityExpression	pfs -> font != 0		8366770	0		!=			
ANR	8366868	PtrMemberAccess	pfs -> font		8366770	0					
ANR	8366869	Identifier	pfs		8366770	0					
ANR	8366870	Identifier	font		8366770	1					
ANR	8366871	PrimaryExpression	0		8366770	1					
ANR	8366872	EqualityExpression	pfs -> font -> scaling_technology == plfst_bitmap		8366770	1		==			
ANR	8366873	PtrMemberAccess	pfs -> font -> scaling_technology		8366770	0					
ANR	8366874	PtrMemberAccess	pfs -> font		8366770	0					
ANR	8366875	Identifier	pfs		8366770	0					
ANR	8366876	Identifier	font		8366770	1					
ANR	8366877	Identifier	scaling_technology		8366770	1					
ANR	8366878	Identifier	plfst_bitmap		8366770	1					
ANR	8366879	CompoundStatement		22:18:739:739	8366770	1					
ANR	8366880	ExpressionStatement	pfs -> font = 0	471:16:14516:14529	8366770	0	True				
ANR	8366881	AssignmentExpression	pfs -> font = 0		8366770	0		=			
ANR	8366882	PtrMemberAccess	pfs -> font		8366770	0					
ANR	8366883	Identifier	pfs		8366770	0					
ANR	8366884	Identifier	font		8366770	1					
ANR	8366885	PrimaryExpression	0		8366770	1					
ANR	8366886	ExpressionStatement	pgls -> g . font = 0	474:8:14563:14579	8366770	3	True				
ANR	8366887	AssignmentExpression	pgls -> g . font = 0		8366770	0		=			
ANR	8366888	MemberAccess	pgls -> g . font		8366770	0					
ANR	8366889	PtrMemberAccess	pgls -> g		8366770	0					
ANR	8366890	Identifier	pgls		8366770	0					
ANR	8366891	Identifier	g		8366770	1					
ANR	8366892	Identifier	font		8366770	1					
ANR	8366893	PrimaryExpression	0		8366770	1					
ANR	8366894	ExpressionStatement	pgls -> g . map = 0	475:8:14589:14604	8366770	4	True				
ANR	8366895	AssignmentExpression	pgls -> g . map = 0		8366770	0		=			
ANR	8366896	MemberAccess	pgls -> g . map		8366770	0					
ANR	8366897	PtrMemberAccess	pgls -> g		8366770	0					
ANR	8366898	Identifier	pgls		8366770	0					
ANR	8366899	Identifier	g		8366770	1					
ANR	8366900	Identifier	map		8366770	1					
ANR	8366901	PrimaryExpression	0		8366770	1					
ANR	8366902	ReturnStatement	return 0 ;	477:4:14616:14624	8366770	3	True				
ANR	8366903	PrimaryExpression	0		8366770	0					
ANR	8366904	ReturnType	int		8366770	1					
ANR	8366905	Identifier	hpgl_SB		8366770	2					
ANR	8366906	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366770	3					
ANR	8366907	Parameter	hpgl_args_t * pargs	448:8:13716:13734	8366770	0	True				
ANR	8366908	ParameterType	hpgl_args_t *		8366770	0					
ANR	8366909	Identifier	pargs		8366770	1					
ANR	8366910	Parameter	hpgl_state_t * pgls	448:29:13737:13755	8366770	1	True				
ANR	8366911	ParameterType	hpgl_state_t *		8366770	0					
ANR	8366912	Identifier	pgls		8366770	1					
ANR	8366913	CFGEntryNode	ENTRY		8366770		True				
ANR	8366914	CFGExitNode	EXIT		8366770		True				
ANR	8366915	Symbol	e_Range		8366770						
ANR	8366916	Symbol	* pfs -> font		8366770						
ANR	8366917	Symbol	plfst_bitmap		8366770						
ANR	8366918	Symbol	* pfs		8366770						
ANR	8366919	Symbol	pfs -> font -> scaling_technology		8366770						
ANR	8366920	Symbol	i		8366770						
ANR	8366921	Symbol	pgls		8366770						
ANR	8366922	Symbol	pgls -> g . bitmap_fonts_allowed		8366770						
ANR	8366923	Symbol	hpgl_arg_c_int		8366770						
ANR	8366924	Symbol	pgls -> g . font_selection		8366770						
ANR	8366925	Symbol	mode		8366770						
ANR	8366926	Symbol	pgls -> g . font		8366770						
ANR	8366927	Symbol	countof		8366770						
ANR	8366928	Symbol	* * pfs		8366770						
ANR	8366929	Symbol	~1		8366770						
ANR	8366930	Symbol	& mode		8366770						
ANR	8366931	Symbol	pargs		8366770						
ANR	8366932	Symbol	pfs -> selected_id		8366770						
ANR	8366933	Symbol	* pgls		8366770						
ANR	8366934	Symbol	pfs -> font		8366770						
ANR	8366935	Symbol	pgls -> memory		8366770						
ANR	8366936	Symbol	pgls -> g		8366770						
ANR	8366937	Symbol	pfs		8366770						
ANR	8366938	Symbol	pgls -> g . map		8366770						
ANR	8366939	Function	hpgl_SD	481:0:14655:14760							
ANR	8366940	FunctionDef	"hpgl_SD (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366939	0					
ANR	8366941	CompoundStatement		483:0:14709:14760	8366939	0					
ANR	8366942	ReturnStatement	"return hpgl_font_definition ( pargs , pgls , 0 ) ;"	484:4:14715:14758	8366939	0	True				
ANR	8366943	CallExpression	"hpgl_font_definition ( pargs , pgls , 0 )"		8366939	0					
ANR	8366944	Callee	hpgl_font_definition		8366939	0					
ANR	8366945	Identifier	hpgl_font_definition		8366939	0					
ANR	8366946	ArgumentList	pargs		8366939	1					
ANR	8366947	Argument	pargs		8366939	0					
ANR	8366948	Identifier	pargs		8366939	0					
ANR	8366949	Argument	pgls		8366939	1					
ANR	8366950	Identifier	pgls		8366939	0					
ANR	8366951	Argument	0		8366939	2					
ANR	8366952	PrimaryExpression	0		8366939	0					
ANR	8366953	ReturnType	int		8366939	1					
ANR	8366954	Identifier	hpgl_SD		8366939	2					
ANR	8366955	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366939	3					
ANR	8366956	Parameter	hpgl_args_t * pargs	482:8:14667:14685	8366939	0	True				
ANR	8366957	ParameterType	hpgl_args_t *		8366939	0					
ANR	8366958	Identifier	pargs		8366939	1					
ANR	8366959	Parameter	hpgl_state_t * pgls	482:29:14688:14706	8366939	1	True				
ANR	8366960	ParameterType	hpgl_state_t *		8366939	0					
ANR	8366961	Identifier	pgls		8366939	1					
ANR	8366962	CFGEntryNode	ENTRY		8366939		True				
ANR	8366963	CFGExitNode	EXIT		8366939		True				
ANR	8366964	Symbol	hpgl_font_definition		8366939						
ANR	8366965	Symbol	pargs		8366939						
ANR	8366966	Symbol	pgls		8366939						
ANR	8366967	Function	hpgl_SI	488:0:14788:15565							
ANR	8366968	FunctionDef	"hpgl_SI (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8366967	0					
ANR	8366969	CompoundStatement		490:0:14842:15565	8366967	0					
ANR	8366970	IdentifierDeclStatement	"hpgl_real_t width_cm , height_cm ;"	491:4:14848:14879	8366967	0	True				
ANR	8366971	IdentifierDecl	width_cm		8366967	0					
ANR	8366972	IdentifierDeclType	hpgl_real_t		8366967	0					
ANR	8366973	Identifier	width_cm		8366967	1					
ANR	8366974	IdentifierDecl	height_cm		8366967	1					
ANR	8366975	IdentifierDeclType	hpgl_real_t		8366967	0					
ANR	8366976	Identifier	height_cm		8366967	1					
ANR	8366977	IfStatement	"if ( hpgl_arg_c_real ( pgls -> memory , pargs , & width_cm ) )"		8366967	1					
ANR	8366978	Condition	"hpgl_arg_c_real ( pgls -> memory , pargs , & width_cm )"	493:8:14890:14936	8366967	0	True				
ANR	8366979	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & width_cm )"		8366967	0					
ANR	8366980	Callee	hpgl_arg_c_real		8366967	0					
ANR	8366981	Identifier	hpgl_arg_c_real		8366967	0					
ANR	8366982	ArgumentList	pgls -> memory		8366967	1					
ANR	8366983	Argument	pgls -> memory		8366967	0					
ANR	8366984	PtrMemberAccess	pgls -> memory		8366967	0					
ANR	8366985	Identifier	pgls		8366967	0					
ANR	8366986	Identifier	memory		8366967	1					
ANR	8366987	Argument	pargs		8366967	1					
ANR	8366988	Identifier	pargs		8366967	0					
ANR	8366989	Argument	& width_cm		8366967	2					
ANR	8366990	UnaryOperationExpression	& width_cm		8366967	0					
ANR	8366991	UnaryOperator	&		8366967	0					
ANR	8366992	Identifier	width_cm		8366967	1					
ANR	8366993	CompoundStatement		4:57:96:96	8366967	1					
ANR	8366994	IfStatement	"if ( ! hpgl_arg_c_real ( pgls -> memory , pargs , & height_cm ) )"		8366967	0					
ANR	8366995	Condition	"! hpgl_arg_c_real ( pgls -> memory , pargs , & height_cm )"	494:12:14953:15001	8366967	0	True				
ANR	8366996	UnaryOperationExpression	"! hpgl_arg_c_real ( pgls -> memory , pargs , & height_cm )"		8366967	0					
ANR	8366997	UnaryOperator	!		8366967	0					
ANR	8366998	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & height_cm )"		8366967	1					
ANR	8366999	Callee	hpgl_arg_c_real		8366967	0					
ANR	8367000	Identifier	hpgl_arg_c_real		8366967	0					
ANR	8367001	ArgumentList	pgls -> memory		8366967	1					
ANR	8367002	Argument	pgls -> memory		8366967	0					
ANR	8367003	PtrMemberAccess	pgls -> memory		8366967	0					
ANR	8367004	Identifier	pgls		8366967	0					
ANR	8367005	Identifier	memory		8366967	1					
ANR	8367006	Argument	pargs		8366967	1					
ANR	8367007	Identifier	pargs		8366967	0					
ANR	8367008	Argument	& height_cm		8366967	2					
ANR	8367009	UnaryOperationExpression	& height_cm		8366967	0					
ANR	8367010	UnaryOperator	&		8366967	0					
ANR	8367011	Identifier	height_cm		8366967	1					
ANR	8367012	ReturnStatement	return e_Range ;	495:12:15016:15030	8366967	1	True				
ANR	8367013	Identifier	e_Range		8366967	0					
ANR	8367014	IfStatement	if ( width_cm == 0.0 || height_cm == 0.0 )		8366967	1					
ANR	8367015	Condition	width_cm == 0.0 || height_cm == 0.0	499:12:15239:15273	8366967	0	True				
ANR	8367016	OrExpression	width_cm == 0.0 || height_cm == 0.0		8366967	0		||			
ANR	8367017	EqualityExpression	width_cm == 0.0		8366967	0		==			
ANR	8367018	Identifier	width_cm		8366967	0					
ANR	8367019	PrimaryExpression	0.0		8366967	1					
ANR	8367020	EqualityExpression	height_cm == 0.0		8366967	1		==			
ANR	8367021	Identifier	height_cm		8366967	0					
ANR	8367022	PrimaryExpression	0.0		8366967	1					
ANR	8367023	ReturnStatement	return e_Range ;	500:12:15288:15302	8366967	1	True				
ANR	8367024	Identifier	e_Range		8366967	0					
ANR	8367025	ExpressionStatement	pgls -> g . character . size . x = mm_2_plu ( width_cm * 10 )	501:8:15312:15362	8366967	2	True				
ANR	8367026	AssignmentExpression	pgls -> g . character . size . x = mm_2_plu ( width_cm * 10 )		8366967	0		=			
ANR	8367027	MemberAccess	pgls -> g . character . size . x		8366967	0					
ANR	8367028	MemberAccess	pgls -> g . character . size		8366967	0					
ANR	8367029	MemberAccess	pgls -> g . character		8366967	0					
ANR	8367030	PtrMemberAccess	pgls -> g		8366967	0					
ANR	8367031	Identifier	pgls		8366967	0					
ANR	8367032	Identifier	g		8366967	1					
ANR	8367033	Identifier	character		8366967	1					
ANR	8367034	Identifier	size		8366967	1					
ANR	8367035	Identifier	x		8366967	1					
ANR	8367036	CallExpression	mm_2_plu ( width_cm * 10 )		8366967	1					
ANR	8367037	Callee	mm_2_plu		8366967	0					
ANR	8367038	Identifier	mm_2_plu		8366967	0					
ANR	8367039	ArgumentList	width_cm * 10		8366967	1					
ANR	8367040	Argument	width_cm * 10		8366967	0					
ANR	8367041	MultiplicativeExpression	width_cm * 10		8366967	0		*			
ANR	8367042	Identifier	width_cm		8366967	0					
ANR	8367043	PrimaryExpression	10		8366967	1					
ANR	8367044	ExpressionStatement	pgls -> g . character . size . y = mm_2_plu ( height_cm * 10 )	502:8:15372:15423	8366967	3	True				
ANR	8367045	AssignmentExpression	pgls -> g . character . size . y = mm_2_plu ( height_cm * 10 )		8366967	0		=			
ANR	8367046	MemberAccess	pgls -> g . character . size . y		8366967	0					
ANR	8367047	MemberAccess	pgls -> g . character . size		8366967	0					
ANR	8367048	MemberAccess	pgls -> g . character		8366967	0					
ANR	8367049	PtrMemberAccess	pgls -> g		8366967	0					
ANR	8367050	Identifier	pgls		8366967	0					
ANR	8367051	Identifier	g		8366967	1					
ANR	8367052	Identifier	character		8366967	1					
ANR	8367053	Identifier	size		8366967	1					
ANR	8367054	Identifier	y		8366967	1					
ANR	8367055	CallExpression	mm_2_plu ( height_cm * 10 )		8366967	1					
ANR	8367056	Callee	mm_2_plu		8366967	0					
ANR	8367057	Identifier	mm_2_plu		8366967	0					
ANR	8367058	ArgumentList	height_cm * 10		8366967	1					
ANR	8367059	Argument	height_cm * 10		8366967	0					
ANR	8367060	MultiplicativeExpression	height_cm * 10		8366967	0		*			
ANR	8367061	Identifier	height_cm		8366967	0					
ANR	8367062	PrimaryExpression	10		8366967	1					
ANR	8367063	ExpressionStatement	pgls -> g . character . size_mode = hpgl_size_absolute	503:8:15433:15481	8366967	4	True				
ANR	8367064	AssignmentExpression	pgls -> g . character . size_mode = hpgl_size_absolute		8366967	0		=			
ANR	8367065	MemberAccess	pgls -> g . character . size_mode		8366967	0					
ANR	8367066	MemberAccess	pgls -> g . character		8366967	0					
ANR	8367067	PtrMemberAccess	pgls -> g		8366967	0					
ANR	8367068	Identifier	pgls		8366967	0					
ANR	8367069	Identifier	g		8366967	1					
ANR	8367070	Identifier	character		8366967	1					
ANR	8367071	Identifier	size_mode		8366967	1					
ANR	8367072	Identifier	hpgl_size_absolute		8366967	1					
ANR	8367073	ElseStatement	else		8366967	0					
ANR	8367074	ExpressionStatement	pgls -> g . character . size_mode = hpgl_size_not_set	505:8:15502:15549	8366967	0	True				
ANR	8367075	AssignmentExpression	pgls -> g . character . size_mode = hpgl_size_not_set		8366967	0		=			
ANR	8367076	MemberAccess	pgls -> g . character . size_mode		8366967	0					
ANR	8367077	MemberAccess	pgls -> g . character		8366967	0					
ANR	8367078	PtrMemberAccess	pgls -> g		8366967	0					
ANR	8367079	Identifier	pgls		8366967	0					
ANR	8367080	Identifier	g		8366967	1					
ANR	8367081	Identifier	character		8366967	1					
ANR	8367082	Identifier	size_mode		8366967	1					
ANR	8367083	Identifier	hpgl_size_not_set		8366967	1					
ANR	8367084	ReturnStatement	return 0 ;	506:4:15555:15563	8366967	2	True				
ANR	8367085	PrimaryExpression	0		8366967	0					
ANR	8367086	ReturnType	int		8366967	1					
ANR	8367087	Identifier	hpgl_SI		8366967	2					
ANR	8367088	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8366967	3					
ANR	8367089	Parameter	hpgl_args_t * pargs	489:8:14800:14818	8366967	0	True				
ANR	8367090	ParameterType	hpgl_args_t *		8366967	0					
ANR	8367091	Identifier	pargs		8366967	1					
ANR	8367092	Parameter	hpgl_state_t * pgls	489:29:14821:14839	8366967	1	True				
ANR	8367093	ParameterType	hpgl_state_t *		8366967	0					
ANR	8367094	Identifier	pgls		8366967	1					
ANR	8367095	CFGEntryNode	ENTRY		8366967		True				
ANR	8367096	CFGExitNode	EXIT		8366967		True				
ANR	8367097	Symbol	e_Range		8366967						
ANR	8367098	Symbol	pgls -> g . character . size_mode		8366967						
ANR	8367099	Symbol	height_cm		8366967						
ANR	8367100	Symbol	pgls		8366967						
ANR	8367101	Symbol	pgls -> g . character		8366967						
ANR	8367102	Symbol	pgls -> g . character . size . y		8366967						
ANR	8367103	Symbol	& height_cm		8366967						
ANR	8367104	Symbol	pgls -> g . character . size . x		8366967						
ANR	8367105	Symbol	width_cm		8366967						
ANR	8367106	Symbol	pargs		8366967						
ANR	8367107	Symbol	* pgls		8366967						
ANR	8367108	Symbol	hpgl_size_not_set		8366967						
ANR	8367109	Symbol	pgls -> g . character . size		8366967						
ANR	8367110	Symbol	pgls -> memory		8366967						
ANR	8367111	Symbol	pgls -> g		8366967						
ANR	8367112	Symbol	hpgl_size_absolute		8366967						
ANR	8367113	Symbol	& width_cm		8366967						
ANR	8367114	Symbol	hpgl_arg_c_real		8366967						
ANR	8367115	Symbol	mm_2_plu		8366967						
ANR	8367116	Function	hpgl_SL	511:0:15618:16090							
ANR	8367117	FunctionDef	"hpgl_SL (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8367116	0					
ANR	8367118	CompoundStatement		513:0:15672:16090	8367116	0					
ANR	8367119	IdentifierDeclStatement	hpgl_real_t slant = 0 ;	514:4:15678:15699	8367116	0	True				
ANR	8367120	IdentifierDecl	slant = 0		8367116	0					
ANR	8367121	IdentifierDeclType	hpgl_real_t		8367116	0					
ANR	8367122	Identifier	slant		8367116	1					
ANR	8367123	AssignmentExpression	slant = 0		8367116	2		=			
ANR	8367124	Identifier	slant		8367116	0					
ANR	8367125	PrimaryExpression	0		8367116	1					
ANR	8367126	ExpressionStatement	"hpgl_arg_c_real ( pgls -> memory , pargs , & slant )"	516:4:15706:15750	8367116	1	True				
ANR	8367127	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & slant )"		8367116	0					
ANR	8367128	Callee	hpgl_arg_c_real		8367116	0					
ANR	8367129	Identifier	hpgl_arg_c_real		8367116	0					
ANR	8367130	ArgumentList	pgls -> memory		8367116	1					
ANR	8367131	Argument	pgls -> memory		8367116	0					
ANR	8367132	PtrMemberAccess	pgls -> memory		8367116	0					
ANR	8367133	Identifier	pgls		8367116	0					
ANR	8367134	Identifier	memory		8367116	1					
ANR	8367135	Argument	pargs		8367116	1					
ANR	8367136	Identifier	pargs		8367116	0					
ANR	8367137	Argument	& slant		8367116	2					
ANR	8367138	UnaryOperationExpression	& slant		8367116	0					
ANR	8367139	UnaryOperator	&		8367116	0					
ANR	8367140	Identifier	slant		8367116	1					
ANR	8367141	ExpressionStatement	pgls -> g . character . slant = slant > MAX_SL_TANGENT ? MAX_SL_TANGENT : slant < - MAX_SL_TANGENT ? - MAX_SL_TANGENT : slant	522:4:15949:16074	8367116	2	True				
ANR	8367142	AssignmentExpression	pgls -> g . character . slant = slant > MAX_SL_TANGENT ? MAX_SL_TANGENT : slant < - MAX_SL_TANGENT ? - MAX_SL_TANGENT : slant		8367116	0		=			
ANR	8367143	MemberAccess	pgls -> g . character . slant		8367116	0					
ANR	8367144	MemberAccess	pgls -> g . character		8367116	0					
ANR	8367145	PtrMemberAccess	pgls -> g		8367116	0					
ANR	8367146	Identifier	pgls		8367116	0					
ANR	8367147	Identifier	g		8367116	1					
ANR	8367148	Identifier	character		8367116	1					
ANR	8367149	Identifier	slant		8367116	1					
ANR	8367150	ConditionalExpression	slant > MAX_SL_TANGENT ? MAX_SL_TANGENT : slant < - MAX_SL_TANGENT ? - MAX_SL_TANGENT : slant		8367116	1					
ANR	8367151	Condition	slant > MAX_SL_TANGENT		8367116	0					
ANR	8367152	RelationalExpression	slant > MAX_SL_TANGENT		8367116	0		>			
ANR	8367153	Identifier	slant		8367116	0					
ANR	8367154	Identifier	MAX_SL_TANGENT		8367116	1					
ANR	8367155	Identifier	MAX_SL_TANGENT		8367116	1					
ANR	8367156	ConditionalExpression	slant < - MAX_SL_TANGENT ? - MAX_SL_TANGENT : slant		8367116	2					
ANR	8367157	Condition	slant < - MAX_SL_TANGENT		8367116	0					
ANR	8367158	RelationalExpression	slant < - MAX_SL_TANGENT		8367116	0		<			
ANR	8367159	Identifier	slant		8367116	0					
ANR	8367160	UnaryOperationExpression	- MAX_SL_TANGENT		8367116	1					
ANR	8367161	UnaryOperator	-		8367116	0					
ANR	8367162	Identifier	MAX_SL_TANGENT		8367116	1					
ANR	8367163	UnaryOperationExpression	- MAX_SL_TANGENT		8367116	1					
ANR	8367164	UnaryOperator	-		8367116	0					
ANR	8367165	Identifier	MAX_SL_TANGENT		8367116	1					
ANR	8367166	Identifier	slant		8367116	2					
ANR	8367167	ReturnStatement	return 0 ;	524:4:16080:16088	8367116	3	True				
ANR	8367168	PrimaryExpression	0		8367116	0					
ANR	8367169	ReturnType	int		8367116	1					
ANR	8367170	Identifier	hpgl_SL		8367116	2					
ANR	8367171	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8367116	3					
ANR	8367172	Parameter	hpgl_args_t * pargs	512:8:15630:15648	8367116	0	True				
ANR	8367173	ParameterType	hpgl_args_t *		8367116	0					
ANR	8367174	Identifier	pargs		8367116	1					
ANR	8367175	Parameter	hpgl_state_t * pgls	512:29:15651:15669	8367116	1	True				
ANR	8367176	ParameterType	hpgl_state_t *		8367116	0					
ANR	8367177	Identifier	pgls		8367116	1					
ANR	8367178	CFGEntryNode	ENTRY		8367116		True				
ANR	8367179	CFGExitNode	EXIT		8367116		True				
ANR	8367180	Symbol	pargs		8367116						
ANR	8367181	Symbol	* pgls		8367116						
ANR	8367182	Symbol	MAX_SL_TANGENT		8367116						
ANR	8367183	Symbol	pgls -> memory		8367116						
ANR	8367184	Symbol	slant		8367116						
ANR	8367185	Symbol	pgls		8367116						
ANR	8367186	Symbol	pgls -> g		8367116						
ANR	8367187	Symbol	pgls -> g . character . slant		8367116						
ANR	8367188	Symbol	& slant		8367116						
ANR	8367189	Symbol	pgls -> g . character		8367116						
ANR	8367190	Function	hpgl_SR	526:1:16093:16939							
ANR	8367191	FunctionDef	"hpgl_SR (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8367190	0					
ANR	8367192	CompoundStatement		531:0:16194:16939	8367190	0					
ANR	8367193	IdentifierDeclStatement	"hpgl_real_t width_pct , height_pct ;"	532:4:16200:16233	8367190	0	True				
ANR	8367194	IdentifierDecl	width_pct		8367190	0					
ANR	8367195	IdentifierDeclType	hpgl_real_t		8367190	0					
ANR	8367196	Identifier	width_pct		8367190	1					
ANR	8367197	IdentifierDecl	height_pct		8367190	1					
ANR	8367198	IdentifierDeclType	hpgl_real_t		8367190	0					
ANR	8367199	Identifier	height_pct		8367190	1					
ANR	8367200	IfStatement	"if ( hpgl_arg_c_real ( pgls -> memory , pargs , & width_pct ) )"		8367190	1					
ANR	8367201	Condition	"hpgl_arg_c_real ( pgls -> memory , pargs , & width_pct )"	534:8:16244:16291	8367190	0	True				
ANR	8367202	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & width_pct )"		8367190	0					
ANR	8367203	Callee	hpgl_arg_c_real		8367190	0					
ANR	8367204	Identifier	hpgl_arg_c_real		8367190	0					
ANR	8367205	ArgumentList	pgls -> memory		8367190	1					
ANR	8367206	Argument	pgls -> memory		8367190	0					
ANR	8367207	PtrMemberAccess	pgls -> memory		8367190	0					
ANR	8367208	Identifier	pgls		8367190	0					
ANR	8367209	Identifier	memory		8367190	1					
ANR	8367210	Argument	pargs		8367190	1					
ANR	8367211	Identifier	pargs		8367190	0					
ANR	8367212	Argument	& width_pct		8367190	2					
ANR	8367213	UnaryOperationExpression	& width_pct		8367190	0					
ANR	8367214	UnaryOperator	&		8367190	0					
ANR	8367215	Identifier	width_pct		8367190	1					
ANR	8367216	CompoundStatement		4:58:99:99	8367190	1					
ANR	8367217	IfStatement	"if ( ! hpgl_arg_c_real ( pgls -> memory , pargs , & height_pct ) )"		8367190	0					
ANR	8367218	Condition	"! hpgl_arg_c_real ( pgls -> memory , pargs , & height_pct )"	535:12:16308:16357	8367190	0	True				
ANR	8367219	UnaryOperationExpression	"! hpgl_arg_c_real ( pgls -> memory , pargs , & height_pct )"		8367190	0					
ANR	8367220	UnaryOperator	!		8367190	0					
ANR	8367221	CallExpression	"hpgl_arg_c_real ( pgls -> memory , pargs , & height_pct )"		8367190	1					
ANR	8367222	Callee	hpgl_arg_c_real		8367190	0					
ANR	8367223	Identifier	hpgl_arg_c_real		8367190	0					
ANR	8367224	ArgumentList	pgls -> memory		8367190	1					
ANR	8367225	Argument	pgls -> memory		8367190	0					
ANR	8367226	PtrMemberAccess	pgls -> memory		8367190	0					
ANR	8367227	Identifier	pgls		8367190	0					
ANR	8367228	Identifier	memory		8367190	1					
ANR	8367229	Argument	pargs		8367190	1					
ANR	8367230	Identifier	pargs		8367190	0					
ANR	8367231	Argument	& height_pct		8367190	2					
ANR	8367232	UnaryOperationExpression	& height_pct		8367190	0					
ANR	8367233	UnaryOperator	&		8367190	0					
ANR	8367234	Identifier	height_pct		8367190	1					
ANR	8367235	ReturnStatement	return e_Range ;	536:12:16372:16386	8367190	1	True				
ANR	8367236	Identifier	e_Range		8367190	0					
ANR	8367237	IfStatement	if ( width_pct == 0.0 || height_pct == 0.0 )		8367190	1					
ANR	8367238	Condition	width_pct == 0.0 || height_pct == 0.0	540:12:16595:16631	8367190	0	True				
ANR	8367239	OrExpression	width_pct == 0.0 || height_pct == 0.0		8367190	0		||			
ANR	8367240	EqualityExpression	width_pct == 0.0		8367190	0		==			
ANR	8367241	Identifier	width_pct		8367190	0					
ANR	8367242	PrimaryExpression	0.0		8367190	1					
ANR	8367243	EqualityExpression	height_pct == 0.0		8367190	1		==			
ANR	8367244	Identifier	height_pct		8367190	0					
ANR	8367245	PrimaryExpression	0.0		8367190	1					
ANR	8367246	ReturnStatement	return e_Range ;	541:12:16646:16660	8367190	1	True				
ANR	8367247	Identifier	e_Range		8367190	0					
ANR	8367248	ExpressionStatement	pgls -> g . character . size . x = width_pct / 100	542:8:16670:16712	8367190	2	True				
ANR	8367249	AssignmentExpression	pgls -> g . character . size . x = width_pct / 100		8367190	0		=			
ANR	8367250	MemberAccess	pgls -> g . character . size . x		8367190	0					
ANR	8367251	MemberAccess	pgls -> g . character . size		8367190	0					
ANR	8367252	MemberAccess	pgls -> g . character		8367190	0					
ANR	8367253	PtrMemberAccess	pgls -> g		8367190	0					
ANR	8367254	Identifier	pgls		8367190	0					
ANR	8367255	Identifier	g		8367190	1					
ANR	8367256	Identifier	character		8367190	1					
ANR	8367257	Identifier	size		8367190	1					
ANR	8367258	Identifier	x		8367190	1					
ANR	8367259	MultiplicativeExpression	width_pct / 100		8367190	1		/			
ANR	8367260	Identifier	width_pct		8367190	0					
ANR	8367261	PrimaryExpression	100		8367190	1					
ANR	8367262	ExpressionStatement	pgls -> g . character . size . y = height_pct / 100	543:8:16722:16765	8367190	3	True				
ANR	8367263	AssignmentExpression	pgls -> g . character . size . y = height_pct / 100		8367190	0		=			
ANR	8367264	MemberAccess	pgls -> g . character . size . y		8367190	0					
ANR	8367265	MemberAccess	pgls -> g . character . size		8367190	0					
ANR	8367266	MemberAccess	pgls -> g . character		8367190	0					
ANR	8367267	PtrMemberAccess	pgls -> g		8367190	0					
ANR	8367268	Identifier	pgls		8367190	0					
ANR	8367269	Identifier	g		8367190	1					
ANR	8367270	Identifier	character		8367190	1					
ANR	8367271	Identifier	size		8367190	1					
ANR	8367272	Identifier	y		8367190	1					
ANR	8367273	MultiplicativeExpression	height_pct / 100		8367190	1		/			
ANR	8367274	Identifier	height_pct		8367190	0					
ANR	8367275	PrimaryExpression	100		8367190	1					
ANR	8367276	ElseStatement	else		8367190	0					
ANR	8367277	CompoundStatement		14:11:583:583	8367190	0					
ANR	8367278	ExpressionStatement	pgls -> g . character . size . x = 0.0075	545:8:16788:16821	8367190	0	True				
ANR	8367279	AssignmentExpression	pgls -> g . character . size . x = 0.0075		8367190	0		=			
ANR	8367280	MemberAccess	pgls -> g . character . size . x		8367190	0					
ANR	8367281	MemberAccess	pgls -> g . character . size		8367190	0					
ANR	8367282	MemberAccess	pgls -> g . character		8367190	0					
ANR	8367283	PtrMemberAccess	pgls -> g		8367190	0					
ANR	8367284	Identifier	pgls		8367190	0					
ANR	8367285	Identifier	g		8367190	1					
ANR	8367286	Identifier	character		8367190	1					
ANR	8367287	Identifier	size		8367190	1					
ANR	8367288	Identifier	x		8367190	1					
ANR	8367289	PrimaryExpression	0.0075		8367190	1					
ANR	8367290	ExpressionStatement	pgls -> g . character . size . y = 0.015	546:8:16831:16863	8367190	1	True				
ANR	8367291	AssignmentExpression	pgls -> g . character . size . y = 0.015		8367190	0		=			
ANR	8367292	MemberAccess	pgls -> g . character . size . y		8367190	0					
ANR	8367293	MemberAccess	pgls -> g . character . size		8367190	0					
ANR	8367294	MemberAccess	pgls -> g . character		8367190	0					
ANR	8367295	PtrMemberAccess	pgls -> g		8367190	0					
ANR	8367296	Identifier	pgls		8367190	0					
ANR	8367297	Identifier	g		8367190	1					
ANR	8367298	Identifier	character		8367190	1					
ANR	8367299	Identifier	size		8367190	1					
ANR	8367300	Identifier	y		8367190	1					
ANR	8367301	PrimaryExpression	0.015		8367190	1					
ANR	8367302	ExpressionStatement	pgls -> g . character . size_mode = hpgl_size_relative	548:4:16875:16923	8367190	2	True				
ANR	8367303	AssignmentExpression	pgls -> g . character . size_mode = hpgl_size_relative		8367190	0		=			
ANR	8367304	MemberAccess	pgls -> g . character . size_mode		8367190	0					
ANR	8367305	MemberAccess	pgls -> g . character		8367190	0					
ANR	8367306	PtrMemberAccess	pgls -> g		8367190	0					
ANR	8367307	Identifier	pgls		8367190	0					
ANR	8367308	Identifier	g		8367190	1					
ANR	8367309	Identifier	character		8367190	1					
ANR	8367310	Identifier	size_mode		8367190	1					
ANR	8367311	Identifier	hpgl_size_relative		8367190	1					
ANR	8367312	ReturnStatement	return 0 ;	549:4:16929:16937	8367190	3	True				
ANR	8367313	PrimaryExpression	0		8367190	0					
ANR	8367314	ReturnType	undef MAX_SL_TANGENT int		8367190	1					
ANR	8367315	Identifier	hpgl_SR		8367190	2					
ANR	8367316	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8367190	3					
ANR	8367317	Parameter	hpgl_args_t * pargs	530:8:16152:16170	8367190	0	True				
ANR	8367318	ParameterType	hpgl_args_t *		8367190	0					
ANR	8367319	Identifier	pargs		8367190	1					
ANR	8367320	Parameter	hpgl_state_t * pgls	530:29:16173:16191	8367190	1	True				
ANR	8367321	ParameterType	hpgl_state_t *		8367190	0					
ANR	8367322	Identifier	pgls		8367190	1					
ANR	8367323	CFGEntryNode	ENTRY		8367190		True				
ANR	8367324	CFGExitNode	EXIT		8367190		True				
ANR	8367325	Symbol	e_Range		8367190						
ANR	8367326	Symbol	pgls -> g . character . size_mode		8367190						
ANR	8367327	Symbol	pgls		8367190						
ANR	8367328	Symbol	& height_pct		8367190						
ANR	8367329	Symbol	pgls -> g . character		8367190						
ANR	8367330	Symbol	pgls -> g . character . size . y		8367190						
ANR	8367331	Symbol	pgls -> g . character . size . x		8367190						
ANR	8367332	Symbol	height_pct		8367190						
ANR	8367333	Symbol	hpgl_size_relative		8367190						
ANR	8367334	Symbol	pargs		8367190						
ANR	8367335	Symbol	* pgls		8367190						
ANR	8367336	Symbol	pgls -> g . character . size		8367190						
ANR	8367337	Symbol	pgls -> memory		8367190						
ANR	8367338	Symbol	width_pct		8367190						
ANR	8367339	Symbol	pgls -> g		8367190						
ANR	8367340	Symbol	hpgl_arg_c_real		8367190						
ANR	8367341	Symbol	& width_pct		8367190						
ANR	8367342	Function	hpgl_SS	553:0:16952:17046							
ANR	8367343	FunctionDef	"hpgl_SS (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8367342	0					
ANR	8367344	CompoundStatement		555:0:17006:17046	8367342	0					
ANR	8367345	ReturnStatement	"return hpgl_select_font ( pgls , 0 ) ;"	556:4:17012:17044	8367342	0	True				
ANR	8367346	CallExpression	"hpgl_select_font ( pgls , 0 )"		8367342	0					
ANR	8367347	Callee	hpgl_select_font		8367342	0					
ANR	8367348	Identifier	hpgl_select_font		8367342	0					
ANR	8367349	ArgumentList	pgls		8367342	1					
ANR	8367350	Argument	pgls		8367342	0					
ANR	8367351	Identifier	pgls		8367342	0					
ANR	8367352	Argument	0		8367342	1					
ANR	8367353	PrimaryExpression	0		8367342	0					
ANR	8367354	ReturnType	int		8367342	1					
ANR	8367355	Identifier	hpgl_SS		8367342	2					
ANR	8367356	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8367342	3					
ANR	8367357	Parameter	hpgl_args_t * pargs	554:8:16964:16982	8367342	0	True				
ANR	8367358	ParameterType	hpgl_args_t *		8367342	0					
ANR	8367359	Identifier	pargs		8367342	1					
ANR	8367360	Parameter	hpgl_state_t * pgls	554:29:16985:17003	8367342	1	True				
ANR	8367361	ParameterType	hpgl_state_t *		8367342	0					
ANR	8367362	Identifier	pgls		8367342	1					
ANR	8367363	CFGEntryNode	ENTRY		8367342		True				
ANR	8367364	CFGExitNode	EXIT		8367342		True				
ANR	8367365	Symbol	hpgl_select_font		8367342						
ANR	8367366	Symbol	pargs		8367342						
ANR	8367367	Symbol	pgls		8367342						
ANR	8367368	Function	hpgl_TD	560:0:17066:17283							
ANR	8367369	FunctionDef	"hpgl_TD (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8367368	0					
ANR	8367370	CompoundStatement		562:0:17120:17283	8367368	0					
ANR	8367371	IdentifierDeclStatement	int mode = 0 ;	563:4:17126:17138	8367368	0	True				
ANR	8367372	IdentifierDecl	mode = 0		8367368	0					
ANR	8367373	IdentifierDeclType	int		8367368	0					
ANR	8367374	Identifier	mode		8367368	1					
ANR	8367375	AssignmentExpression	mode = 0		8367368	2		=			
ANR	8367376	Identifier	mode		8367368	0					
ANR	8367377	PrimaryExpression	0		8367368	1					
ANR	8367378	IfStatement	"if ( hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) && ( mode & ~1 ) )"		8367368	1					
ANR	8367379	Condition	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) && ( mode & ~1 )"	565:8:17149:17205	8367368	0	True				
ANR	8367380	AndExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode ) && ( mode & ~1 )"		8367368	0		&&			
ANR	8367381	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & mode )"		8367368	0					
ANR	8367382	Callee	hpgl_arg_c_int		8367368	0					
ANR	8367383	Identifier	hpgl_arg_c_int		8367368	0					
ANR	8367384	ArgumentList	pgls -> memory		8367368	1					
ANR	8367385	Argument	pgls -> memory		8367368	0					
ANR	8367386	PtrMemberAccess	pgls -> memory		8367368	0					
ANR	8367387	Identifier	pgls		8367368	0					
ANR	8367388	Identifier	memory		8367368	1					
ANR	8367389	Argument	pargs		8367368	1					
ANR	8367390	Identifier	pargs		8367368	0					
ANR	8367391	Argument	& mode		8367368	2					
ANR	8367392	UnaryOperationExpression	& mode		8367368	0					
ANR	8367393	UnaryOperator	&		8367368	0					
ANR	8367394	Identifier	mode		8367368	1					
ANR	8367395	BitAndExpression	mode & ~1		8367368	1		&			
ANR	8367396	Identifier	mode		8367368	0					
ANR	8367397	Identifier	~1		8367368	1					
ANR	8367398	ReturnStatement	return e_Range ;	566:8:17216:17230	8367368	1	True				
ANR	8367399	Identifier	e_Range		8367368	0					
ANR	8367400	ExpressionStatement	pgls -> g . transparent_data = mode	567:4:17236:17267	8367368	2	True				
ANR	8367401	AssignmentExpression	pgls -> g . transparent_data = mode		8367368	0		=			
ANR	8367402	MemberAccess	pgls -> g . transparent_data		8367368	0					
ANR	8367403	PtrMemberAccess	pgls -> g		8367368	0					
ANR	8367404	Identifier	pgls		8367368	0					
ANR	8367405	Identifier	g		8367368	1					
ANR	8367406	Identifier	transparent_data		8367368	1					
ANR	8367407	Identifier	mode		8367368	1					
ANR	8367408	ReturnStatement	return 0 ;	568:4:17273:17281	8367368	3	True				
ANR	8367409	PrimaryExpression	0		8367368	0					
ANR	8367410	ReturnType	int		8367368	1					
ANR	8367411	Identifier	hpgl_TD		8367368	2					
ANR	8367412	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8367368	3					
ANR	8367413	Parameter	hpgl_args_t * pargs	561:8:17078:17096	8367368	0	True				
ANR	8367414	ParameterType	hpgl_args_t *		8367368	0					
ANR	8367415	Identifier	pargs		8367368	1					
ANR	8367416	Parameter	hpgl_state_t * pgls	561:29:17099:17117	8367368	1	True				
ANR	8367417	ParameterType	hpgl_state_t *		8367368	0					
ANR	8367418	Identifier	pgls		8367368	1					
ANR	8367419	CFGEntryNode	ENTRY		8367368		True				
ANR	8367420	CFGExitNode	EXIT		8367368		True				
ANR	8367421	Symbol	mode		8367368						
ANR	8367422	Symbol	e_Range		8367368						
ANR	8367423	Symbol	~1		8367368						
ANR	8367424	Symbol	& mode		8367368						
ANR	8367425	Symbol	pargs		8367368						
ANR	8367426	Symbol	* pgls		8367368						
ANR	8367427	Symbol	pgls -> memory		8367368						
ANR	8367428	Symbol	pgls -> g . transparent_data		8367368						
ANR	8367429	Symbol	pgls		8367368						
ANR	8367430	Symbol	pgls -> g		8367368						
ANR	8367431	Symbol	hpgl_arg_c_int		8367368						
ANR	8367432	Function	hpgl_add_dl_char_data	573:0:17394:18414							
ANR	8367433	FunctionDef	"hpgl_add_dl_char_data (hpgl_state_t * pgls , hpgl_dl_cdata_t * pcdata , short cc_data)"		8367432	0					
ANR	8367434	CompoundStatement		576:0:17511:18414	8367432	0					
ANR	8367435	IdentifierDeclStatement	int csz = sizeof ( short ) ;	578:4:17554:17577	8367432	0	True				
ANR	8367436	IdentifierDecl	csz = sizeof ( short )		8367432	0					
ANR	8367437	IdentifierDeclType	int		8367432	0					
ANR	8367438	Identifier	csz		8367432	1					
ANR	8367439	AssignmentExpression	csz = sizeof ( short )		8367432	2		=			
ANR	8367440	Identifier	csz		8367432	0					
ANR	8367441	SizeofExpression	sizeof ( short )		8367432	1					
ANR	8367442	Sizeof	sizeof		8367432	0					
ANR	8367443	SizeofOperand	short		8367432	1					
ANR	8367444	IfStatement	if ( pcdata -> index == - 1 )		8367432	1					
ANR	8367445	Condition	pcdata -> index == - 1	580:8:17588:17606	8367432	0	True				
ANR	8367446	EqualityExpression	pcdata -> index == - 1		8367432	0		==			
ANR	8367447	PtrMemberAccess	pcdata -> index		8367432	0					
ANR	8367448	Identifier	pcdata		8367432	0					
ANR	8367449	Identifier	index		8367432	1					
ANR	8367450	UnaryOperationExpression	- 1		8367432	1					
ANR	8367451	UnaryOperator	-		8367432	0					
ANR	8367452	PrimaryExpression	1		8367432	1					
ANR	8367453	CompoundStatement		5:29:97:97	8367432	1					
ANR	8367454	ExpressionStatement	"pcdata -> data = ( short * ) gs_alloc_bytes ( pgls -> memory , 2 * csz , ""DL data"" )"	582:8:17704:17788	8367432	0	True				
ANR	8367455	AssignmentExpression	"pcdata -> data = ( short * ) gs_alloc_bytes ( pgls -> memory , 2 * csz , ""DL data"" )"		8367432	0		=			
ANR	8367456	PtrMemberAccess	pcdata -> data		8367432	0					
ANR	8367457	Identifier	pcdata		8367432	0					
ANR	8367458	Identifier	data		8367432	1					
ANR	8367459	CastExpression	"( short * ) gs_alloc_bytes ( pgls -> memory , 2 * csz , ""DL data"" )"		8367432	1					
ANR	8367460	CastTarget	short *		8367432	0					
ANR	8367461	CallExpression	"gs_alloc_bytes ( pgls -> memory , 2 * csz , ""DL data"" )"		8367432	1					
ANR	8367462	Callee	gs_alloc_bytes		8367432	0					
ANR	8367463	Identifier	gs_alloc_bytes		8367432	0					
ANR	8367464	ArgumentList	pgls -> memory		8367432	1					
ANR	8367465	Argument	pgls -> memory		8367432	0					
ANR	8367466	PtrMemberAccess	pgls -> memory		8367432	0					
ANR	8367467	Identifier	pgls		8367432	0					
ANR	8367468	Identifier	memory		8367432	1					
ANR	8367469	Argument	2 * csz		8367432	1					
ANR	8367470	MultiplicativeExpression	2 * csz		8367432	0		*			
ANR	8367471	PrimaryExpression	2		8367432	0					
ANR	8367472	Identifier	csz		8367432	1					
ANR	8367473	Argument	"""DL data"""		8367432	2					
ANR	8367474	PrimaryExpression	"""DL data"""		8367432	0					
ANR	8367475	IfStatement	if ( pcdata -> data == 0 )		8367432	1					
ANR	8367476	Condition	pcdata -> data == 0	584:12:17802:17818	8367432	0	True				
ANR	8367477	EqualityExpression	pcdata -> data == 0		8367432	0		==			
ANR	8367478	PtrMemberAccess	pcdata -> data		8367432	0					
ANR	8367479	Identifier	pcdata		8367432	0					
ANR	8367480	Identifier	data		8367432	1					
ANR	8367481	PrimaryExpression	0		8367432	1					
ANR	8367482	ReturnStatement	return e_Memory ;	585:12:17833:17848	8367432	1	True				
ANR	8367483	Identifier	e_Memory		8367432	0					
ANR	8367484	ElseStatement	else		8367432	0					
ANR	8367485	IfStatement	"if ( gs_object_size ( pgls -> memory , pcdata -> data ) == ( pcdata -> index + 1 ) * csz )"		8367432	0					
ANR	8367486	Condition	"gs_object_size ( pgls -> memory , pcdata -> data ) == ( pcdata -> index + 1 ) * csz"	586:15:17865:17950	8367432	0	True				
ANR	8367487	EqualityExpression	"gs_object_size ( pgls -> memory , pcdata -> data ) == ( pcdata -> index + 1 ) * csz"		8367432	0		==			
ANR	8367488	CallExpression	"gs_object_size ( pgls -> memory , pcdata -> data )"		8367432	0					
ANR	8367489	Callee	gs_object_size		8367432	0					
ANR	8367490	Identifier	gs_object_size		8367432	0					
ANR	8367491	ArgumentList	pgls -> memory		8367432	1					
ANR	8367492	Argument	pgls -> memory		8367432	0					
ANR	8367493	PtrMemberAccess	pgls -> memory		8367432	0					
ANR	8367494	Identifier	pgls		8367432	0					
ANR	8367495	Identifier	memory		8367432	1					
ANR	8367496	Argument	pcdata -> data		8367432	1					
ANR	8367497	PtrMemberAccess	pcdata -> data		8367432	0					
ANR	8367498	Identifier	pcdata		8367432	0					
ANR	8367499	Identifier	data		8367432	1					
ANR	8367500	MultiplicativeExpression	( pcdata -> index + 1 ) * csz		8367432	1		*			
ANR	8367501	AdditiveExpression	pcdata -> index + 1		8367432	0		+			
ANR	8367502	PtrMemberAccess	pcdata -> index		8367432	0					
ANR	8367503	Identifier	pcdata		8367432	0					
ANR	8367504	Identifier	index		8367432	1					
ANR	8367505	PrimaryExpression	1		8367432	1					
ANR	8367506	Identifier	csz		8367432	1					
ANR	8367507	CompoundStatement		14:8:522:731	8367432	1					
ANR	8367508	IdentifierDeclStatement	"short * new_cdata = ( short * ) gs_resize_object ( pgls -> memory , pcdata -> data , ( pcdata -> index + 1 ) * csz * 2 , ""DL data resize"" ) ;"	589:8:18034:18243	8367432	0	True				
ANR	8367509	IdentifierDecl	"* new_cdata = ( short * ) gs_resize_object ( pgls -> memory , pcdata -> data , ( pcdata -> index + 1 ) * csz * 2 , ""DL data resize"" )"		8367432	0					
ANR	8367510	IdentifierDeclType	short *		8367432	0					
ANR	8367511	Identifier	new_cdata		8367432	1					
ANR	8367512	AssignmentExpression	"* new_cdata = ( short * ) gs_resize_object ( pgls -> memory , pcdata -> data , ( pcdata -> index + 1 ) * csz * 2 , ""DL data resize"" )"		8367432	2		=			
ANR	8367513	Identifier	new_cdata		8367432	0					
ANR	8367514	CastExpression	"( short * ) gs_resize_object ( pgls -> memory , pcdata -> data , ( pcdata -> index + 1 ) * csz * 2 , ""DL data resize"" )"		8367432	1					
ANR	8367515	CastTarget	short *		8367432	0					
ANR	8367516	CallExpression	"gs_resize_object ( pgls -> memory , pcdata -> data , ( pcdata -> index + 1 ) * csz * 2 , ""DL data resize"" )"		8367432	1					
ANR	8367517	Callee	gs_resize_object		8367432	0					
ANR	8367518	Identifier	gs_resize_object		8367432	0					
ANR	8367519	ArgumentList	pgls -> memory		8367432	1					
ANR	8367520	Argument	pgls -> memory		8367432	0					
ANR	8367521	PtrMemberAccess	pgls -> memory		8367432	0					
ANR	8367522	Identifier	pgls		8367432	0					
ANR	8367523	Identifier	memory		8367432	1					
ANR	8367524	Argument	pcdata -> data		8367432	1					
ANR	8367525	PtrMemberAccess	pcdata -> data		8367432	0					
ANR	8367526	Identifier	pcdata		8367432	0					
ANR	8367527	Identifier	data		8367432	1					
ANR	8367528	Argument	( pcdata -> index + 1 ) * csz * 2		8367432	2					
ANR	8367529	MultiplicativeExpression	( pcdata -> index + 1 ) * csz * 2		8367432	0		*			
ANR	8367530	AdditiveExpression	pcdata -> index + 1		8367432	0		+			
ANR	8367531	PtrMemberAccess	pcdata -> index		8367432	0					
ANR	8367532	Identifier	pcdata		8367432	0					
ANR	8367533	Identifier	index		8367432	1					
ANR	8367534	PrimaryExpression	1		8367432	1					
ANR	8367535	MultiplicativeExpression	csz * 2		8367432	1		*			
ANR	8367536	Identifier	csz		8367432	0					
ANR	8367537	PrimaryExpression	2		8367432	1					
ANR	8367538	Argument	"""DL data resize"""		8367432	3					
ANR	8367539	PrimaryExpression	"""DL data resize"""		8367432	0					
ANR	8367540	IfStatement	if ( new_cdata == 0 )		8367432	1					
ANR	8367541	Condition	new_cdata == 0	594:12:18258:18271	8367432	0	True				
ANR	8367542	EqualityExpression	new_cdata == 0		8367432	0		==			
ANR	8367543	Identifier	new_cdata		8367432	0					
ANR	8367544	PrimaryExpression	0		8367432	1					
ANR	8367545	CompoundStatement		19:28:762:762	8367432	1					
ANR	8367546	ReturnStatement	return e_Memory ;	595:12:18288:18303	8367432	0	True				
ANR	8367547	Identifier	e_Memory		8367432	0					
ANR	8367548	ExpressionStatement	pcdata -> data = new_cdata	597:8:18323:18347	8367432	2	True				
ANR	8367549	AssignmentExpression	pcdata -> data = new_cdata		8367432	0		=			
ANR	8367550	PtrMemberAccess	pcdata -> data		8367432	0					
ANR	8367551	Identifier	pcdata		8367432	0					
ANR	8367552	Identifier	data		8367432	1					
ANR	8367553	Identifier	new_cdata		8367432	1					
ANR	8367554	ExpressionStatement	pcdata -> data [ ++ pcdata -> index ] = cc_data	599:4:18359:18398	8367432	2	True				
ANR	8367555	AssignmentExpression	pcdata -> data [ ++ pcdata -> index ] = cc_data		8367432	0		=			
ANR	8367556	ArrayIndexing	pcdata -> data [ ++ pcdata -> index ]		8367432	0					
ANR	8367557	PtrMemberAccess	pcdata -> data		8367432	0					
ANR	8367558	Identifier	pcdata		8367432	0					
ANR	8367559	Identifier	data		8367432	1					
ANR	8367560	UnaryExpression	++ pcdata -> index		8367432	1					
ANR	8367561	IncDec	++		8367432	0					
ANR	8367562	PtrMemberAccess	pcdata -> index		8367432	1					
ANR	8367563	Identifier	pcdata		8367432	0					
ANR	8367564	Identifier	index		8367432	1					
ANR	8367565	Identifier	cc_data		8367432	1					
ANR	8367566	ReturnStatement	return 0 ;	600:4:18404:18412	8367432	3	True				
ANR	8367567	PrimaryExpression	0		8367432	0					
ANR	8367568	ReturnType	static int		8367432	1					
ANR	8367569	Identifier	hpgl_add_dl_char_data		8367432	2					
ANR	8367570	ParameterList	"hpgl_state_t * pgls , hpgl_dl_cdata_t * pcdata , short cc_data"		8367432	3					
ANR	8367571	Parameter	hpgl_state_t * pgls	574:22:17427:17445	8367432	0	True				
ANR	8367572	ParameterType	hpgl_state_t *		8367432	0					
ANR	8367573	Identifier	pgls		8367432	1					
ANR	8367574	Parameter	hpgl_dl_cdata_t * pcdata	574:43:17448:17471	8367432	1	True				
ANR	8367575	ParameterType	hpgl_dl_cdata_t *		8367432	0					
ANR	8367576	Identifier	pcdata		8367432	1					
ANR	8367577	Parameter	short cc_data	575:22:17496:17508	8367432	2	True				
ANR	8367578	ParameterType	short		8367432	0					
ANR	8367579	Identifier	cc_data		8367432	1					
ANR	8367580	CFGEntryNode	ENTRY		8367432		True				
ANR	8367581	CFGExitNode	EXIT		8367432		True				
ANR	8367582	Symbol	* pcdata -> data		8367432						
ANR	8367583	Symbol	gs_alloc_bytes		8367432						
ANR	8367584	Symbol	pcdata -> data		8367432						
ANR	8367585	Symbol	pgls		8367432						
ANR	8367586	Symbol	* pcdata		8367432						
ANR	8367587	Symbol	gs_resize_object		8367432						
ANR	8367588	Symbol	cc_data		8367432						
ANR	8367589	Symbol	csz		8367432						
ANR	8367590	Symbol	new_cdata		8367432						
ANR	8367591	Symbol	gs_object_size		8367432						
ANR	8367592	Symbol	e_Memory		8367432						
ANR	8367593	Symbol	* pgls		8367432						
ANR	8367594	Symbol	pcdata -> index		8367432						
ANR	8367595	Symbol	pgls -> memory		8367432						
ANR	8367596	Symbol	* pcdata -> index		8367432						
ANR	8367597	Symbol	pcdata		8367432						
ANR	8367598	Symbol	* * pcdata		8367432						
ANR	8367599	Function	hpgl_dl_dict_free_value	603:0:18417:18674							
ANR	8367600	FunctionDef	"hpgl_dl_dict_free_value (gs_memory_t * mem , void * value , client_name_t cname)"		8367599	0					
ANR	8367601	CompoundStatement		605:0:18506:18674	8367599	0					
ANR	8367602	IdentifierDeclStatement	hpgl_dl_cdata_t * cdata = ( hpgl_dl_cdata_t * ) value ;	606:4:18512:18562	8367599	0	True				
ANR	8367603	IdentifierDecl	* cdata = ( hpgl_dl_cdata_t * ) value		8367599	0					
ANR	8367604	IdentifierDeclType	hpgl_dl_cdata_t *		8367599	0					
ANR	8367605	Identifier	cdata		8367599	1					
ANR	8367606	AssignmentExpression	* cdata = ( hpgl_dl_cdata_t * ) value		8367599	2		=			
ANR	8367607	Identifier	cdata		8367599	0					
ANR	8367608	CastExpression	( hpgl_dl_cdata_t * ) value		8367599	1					
ANR	8367609	CastTarget	hpgl_dl_cdata_t *		8367599	0					
ANR	8367610	Identifier	value		8367599	1					
ANR	8367611	IfStatement	if ( cdata -> data )		8367599	1					
ANR	8367612	Condition	cdata -> data	608:8:18573:18583	8367599	0	True				
ANR	8367613	PtrMemberAccess	cdata -> data		8367599	0					
ANR	8367614	Identifier	cdata		8367599	0					
ANR	8367615	Identifier	data		8367599	1					
ANR	8367616	ExpressionStatement	"gs_free_object ( mem , cdata -> data , cname )"	609:8:18594:18633	8367599	1	True				
ANR	8367617	CallExpression	"gs_free_object ( mem , cdata -> data , cname )"		8367599	0					
ANR	8367618	Callee	gs_free_object		8367599	0					
ANR	8367619	Identifier	gs_free_object		8367599	0					
ANR	8367620	ArgumentList	mem		8367599	1					
ANR	8367621	Argument	mem		8367599	0					
ANR	8367622	Identifier	mem		8367599	0					
ANR	8367623	Argument	cdata -> data		8367599	1					
ANR	8367624	PtrMemberAccess	cdata -> data		8367599	0					
ANR	8367625	Identifier	cdata		8367599	0					
ANR	8367626	Identifier	data		8367599	1					
ANR	8367627	Argument	cname		8367599	2					
ANR	8367628	Identifier	cname		8367599	0					
ANR	8367629	ExpressionStatement	"gs_free_object ( mem , cdata , cname )"	610:4:18639:18672	8367599	2	True				
ANR	8367630	CallExpression	"gs_free_object ( mem , cdata , cname )"		8367599	0					
ANR	8367631	Callee	gs_free_object		8367599	0					
ANR	8367632	Identifier	gs_free_object		8367599	0					
ANR	8367633	ArgumentList	mem		8367599	1					
ANR	8367634	Argument	mem		8367599	0					
ANR	8367635	Identifier	mem		8367599	0					
ANR	8367636	Argument	cdata		8367599	1					
ANR	8367637	Identifier	cdata		8367599	0					
ANR	8367638	Argument	cname		8367599	2					
ANR	8367639	Identifier	cname		8367599	0					
ANR	8367640	ReturnType	static void		8367599	1					
ANR	8367641	Identifier	hpgl_dl_dict_free_value		8367599	2					
ANR	8367642	ParameterList	"gs_memory_t * mem , void * value , client_name_t cname"		8367599	3					
ANR	8367643	Parameter	gs_memory_t * mem	604:24:18453:18469	8367599	0	True				
ANR	8367644	ParameterType	gs_memory_t *		8367599	0					
ANR	8367645	Identifier	mem		8367599	1					
ANR	8367646	Parameter	void * value	604:43:18472:18482	8367599	1	True				
ANR	8367647	ParameterType	void *		8367599	0					
ANR	8367648	Identifier	value		8367599	1					
ANR	8367649	Parameter	client_name_t cname	604:56:18485:18503	8367599	2	True				
ANR	8367650	ParameterType	client_name_t		8367599	0					
ANR	8367651	Identifier	cname		8367599	1					
ANR	8367652	CFGEntryNode	ENTRY		8367599		True				
ANR	8367653	CFGExitNode	EXIT		8367599		True				
ANR	8367654	Symbol	mem		8367599						
ANR	8367655	Symbol	* cdata		8367599						
ANR	8367656	Symbol	cname		8367599						
ANR	8367657	Symbol	value		8367599						
ANR	8367658	Symbol	cdata		8367599						
ANR	8367659	Symbol	cdata -> data		8367599						
ANR	8367660	Function	hpgl_clear_dl_chars	614:0:18678:18788							
ANR	8367661	FunctionDef	hpgl_clear_dl_chars (hpgl_state_t * pgls)		8367660	0					
ANR	8367662	CompoundStatement		616:0:18731:18788	8367660	0					
ANR	8367663	ReturnStatement	return ;	618:4:18780:18786	8367660	0	True				
ANR	8367664	ReturnType	static void		8367660	1					
ANR	8367665	Identifier	hpgl_clear_dl_chars		8367660	2					
ANR	8367666	ParameterList	hpgl_state_t * pgls		8367660	3					
ANR	8367667	Parameter	hpgl_state_t * pgls	615:20:18710:18728	8367660	0	True				
ANR	8367668	ParameterType	hpgl_state_t *		8367660	0					
ANR	8367669	Identifier	pgls		8367660	1					
ANR	8367670	CFGEntryNode	ENTRY		8367660		True				
ANR	8367671	CFGExitNode	EXIT		8367660		True				
ANR	8367672	Symbol	pgls		8367660						
ANR	8367673	Function	hpgl_DL	622:0:18825:20604							
ANR	8367674	FunctionDef	"hpgl_DL (hpgl_args_t * pargs , hpgl_state_t * pgls)"		8367673	0					
ANR	8367675	CompoundStatement		624:0:18879:20604	8367673	0					
ANR	8367676	IdentifierDeclStatement	int code ;	625:4:18885:18893	8367673	0	True				
ANR	8367677	IdentifierDecl	code		8367673	0					
ANR	8367678	IdentifierDeclType	int		8367673	0					
ANR	8367679	Identifier	code		8367673	1					
ANR	8367680	IdentifierDeclStatement	hpgl_dl_cdata_t * cdata ;	626:4:18899:18921	8367673	1	True				
ANR	8367681	IdentifierDecl	* cdata		8367673	0					
ANR	8367682	IdentifierDeclType	hpgl_dl_cdata_t *		8367673	0					
ANR	8367683	Identifier	cdata		8367673	1					
ANR	8367684	IfStatement	if ( pargs -> phase == 0 )		8367673	2					
ANR	8367685	Condition	pargs -> phase == 0	629:8:18953:18969	8367673	0	True				
ANR	8367686	EqualityExpression	pargs -> phase == 0		8367673	0		==			
ANR	8367687	PtrMemberAccess	pargs -> phase		8367673	0					
ANR	8367688	Identifier	pargs		8367673	0					
ANR	8367689	Identifier	phase		8367673	1					
ANR	8367690	PrimaryExpression	0		8367673	1					
ANR	8367691	CompoundStatement		7:8:102:110	8367673	1					
ANR	8367692	IdentifierDeclStatement	int32 cc ;	630:8:18982:18990	8367673	0	True				
ANR	8367693	IdentifierDecl	cc		8367673	0					
ANR	8367694	IdentifierDeclType	int32		8367673	0					
ANR	8367695	Identifier	cc		8367673	1					
ANR	8367696	IfStatement	if ( pgls -> g . label . double_byte )		8367673	1					
ANR	8367697	Condition	pgls -> g . label . double_byte	633:12:19064:19088	8367673	0	True				
ANR	8367698	MemberAccess	pgls -> g . label . double_byte		8367673	0					
ANR	8367699	MemberAccess	pgls -> g . label		8367673	0					
ANR	8367700	PtrMemberAccess	pgls -> g		8367673	0					
ANR	8367701	Identifier	pgls		8367673	0					
ANR	8367702	Identifier	g		8367673	1					
ANR	8367703	Identifier	label		8367673	1					
ANR	8367704	Identifier	double_byte		8367673	1					
ANR	8367705	ReturnStatement	return e_Unimplemented ;	634:12:19103:19125	8367673	1	True				
ANR	8367706	Identifier	e_Unimplemented		8367673	0					
ANR	8367707	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & cc ) )"		8367673	2					
ANR	8367708	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & cc )"	637:12:19233:19273	8367673	0	True				
ANR	8367709	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & cc )"		8367673	0					
ANR	8367710	UnaryOperator	!		8367673	0					
ANR	8367711	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & cc )"		8367673	1					
ANR	8367712	Callee	hpgl_arg_c_int		8367673	0					
ANR	8367713	Identifier	hpgl_arg_c_int		8367673	0					
ANR	8367714	ArgumentList	pgls -> memory		8367673	1					
ANR	8367715	Argument	pgls -> memory		8367673	0					
ANR	8367716	PtrMemberAccess	pgls -> memory		8367673	0					
ANR	8367717	Identifier	pgls		8367673	0					
ANR	8367718	Identifier	memory		8367673	1					
ANR	8367719	Argument	pargs		8367673	1					
ANR	8367720	Identifier	pargs		8367673	0					
ANR	8367721	Argument	& cc		8367673	2					
ANR	8367722	UnaryOperationExpression	& cc		8367673	0					
ANR	8367723	UnaryOperator	&		8367673	0					
ANR	8367724	Identifier	cc		8367673	1					
ANR	8367725	CompoundStatement		14:55:396:396	8367673	1					
ANR	8367726	ExpressionStatement	hpgl_clear_dl_chars ( pgls )	638:12:19290:19315	8367673	0	True				
ANR	8367727	CallExpression	hpgl_clear_dl_chars ( pgls )		8367673	0					
ANR	8367728	Callee	hpgl_clear_dl_chars		8367673	0					
ANR	8367729	Identifier	hpgl_clear_dl_chars		8367673	0					
ANR	8367730	ArgumentList	pgls		8367673	1					
ANR	8367731	Argument	pgls		8367673	0					
ANR	8367732	Identifier	pgls		8367673	0					
ANR	8367733	ReturnStatement	return 0 ;	639:12:19329:19337	8367673	1	True				
ANR	8367734	PrimaryExpression	0		8367673	0					
ANR	8367735	IfStatement	if ( cc < 0 || cc > 255 )		8367673	3					
ANR	8367736	Condition	cc < 0 || cc > 255	642:12:19362:19379	8367673	0	True				
ANR	8367737	OrExpression	cc < 0 || cc > 255		8367673	0		||			
ANR	8367738	RelationalExpression	cc < 0		8367673	0		<			
ANR	8367739	Identifier	cc		8367673	0					
ANR	8367740	PrimaryExpression	0		8367673	1					
ANR	8367741	RelationalExpression	cc > 255		8367673	1		>			
ANR	8367742	Identifier	cc		8367673	0					
ANR	8367743	PrimaryExpression	255		8367673	1					
ANR	8367744	ReturnStatement	return e_Range ;	643:12:19394:19408	8367673	1	True				
ANR	8367745	Identifier	e_Range		8367673	0					
ANR	8367746	ExpressionStatement	"cdata = ( hpgl_dl_cdata_t * ) gs_alloc_bytes ( pgls -> memory , sizeof ( hpgl_dl_cdata_t ) , ""DL header"" )"	645:8:19419:19619	8367673	4	True				
ANR	8367747	AssignmentExpression	"cdata = ( hpgl_dl_cdata_t * ) gs_alloc_bytes ( pgls -> memory , sizeof ( hpgl_dl_cdata_t ) , ""DL header"" )"		8367673	0		=			
ANR	8367748	Identifier	cdata		8367673	0					
ANR	8367749	CastExpression	"( hpgl_dl_cdata_t * ) gs_alloc_bytes ( pgls -> memory , sizeof ( hpgl_dl_cdata_t ) , ""DL header"" )"		8367673	1					
ANR	8367750	CastTarget	hpgl_dl_cdata_t *		8367673	0					
ANR	8367751	CallExpression	"gs_alloc_bytes ( pgls -> memory , sizeof ( hpgl_dl_cdata_t ) , ""DL header"" )"		8367673	1					
ANR	8367752	Callee	gs_alloc_bytes		8367673	0					
ANR	8367753	Identifier	gs_alloc_bytes		8367673	0					
ANR	8367754	ArgumentList	pgls -> memory		8367673	1					
ANR	8367755	Argument	pgls -> memory		8367673	0					
ANR	8367756	PtrMemberAccess	pgls -> memory		8367673	0					
ANR	8367757	Identifier	pgls		8367673	0					
ANR	8367758	Identifier	memory		8367673	1					
ANR	8367759	Argument	sizeof ( hpgl_dl_cdata_t )		8367673	1					
ANR	8367760	SizeofExpression	sizeof ( hpgl_dl_cdata_t )		8367673	0					
ANR	8367761	Sizeof	sizeof		8367673	0					
ANR	8367762	SizeofOperand	hpgl_dl_cdata_t		8367673	1					
ANR	8367763	Argument	"""DL header"""		8367673	2					
ANR	8367764	PrimaryExpression	"""DL header"""		8367673	0					
ANR	8367765	IfStatement	if ( cdata == 0 )		8367673	5					
ANR	8367766	Condition	cdata == 0	649:12:19633:19642	8367673	0	True				
ANR	8367767	EqualityExpression	cdata == 0		8367673	0		==			
ANR	8367768	Identifier	cdata		8367673	0					
ANR	8367769	PrimaryExpression	0		8367673	1					
ANR	8367770	ReturnStatement	return e_Memory ;	650:12:19657:19672	8367673	1	True				
ANR	8367771	Identifier	e_Memory		8367673	0					
ANR	8367772	ExpressionStatement	cdata -> index = - 1	651:8:19682:19699	8367673	6	True				
ANR	8367773	AssignmentExpression	cdata -> index = - 1		8367673	0		=			
ANR	8367774	PtrMemberAccess	cdata -> index		8367673	0					
ANR	8367775	Identifier	cdata		8367673	0					
ANR	8367776	Identifier	index		8367673	1					
ANR	8367777	UnaryOperationExpression	- 1		8367673	1					
ANR	8367778	UnaryOperator	-		8367673	0					
ANR	8367779	PrimaryExpression	1		8367673	1					
ANR	8367780	ExpressionStatement	cdata -> data = NULL	652:8:19709:19727	8367673	7	True				
ANR	8367781	AssignmentExpression	cdata -> data = NULL		8367673	0		=			
ANR	8367782	PtrMemberAccess	cdata -> data		8367673	0					
ANR	8367783	Identifier	cdata		8367673	0					
ANR	8367784	Identifier	data		8367673	1					
ANR	8367785	Identifier	NULL		8367673	1					
ANR	8367786	ExpressionStatement	"id_set_value ( pgls -> g . current_dl_char_id , ( ushort ) cc )"	653:8:19737:19790	8367673	8	True				
ANR	8367787	CallExpression	"id_set_value ( pgls -> g . current_dl_char_id , ( ushort ) cc )"		8367673	0					
ANR	8367788	Callee	id_set_value		8367673	0					
ANR	8367789	Identifier	id_set_value		8367673	0					
ANR	8367790	ArgumentList	pgls -> g . current_dl_char_id		8367673	1					
ANR	8367791	Argument	pgls -> g . current_dl_char_id		8367673	0					
ANR	8367792	MemberAccess	pgls -> g . current_dl_char_id		8367673	0					
ANR	8367793	PtrMemberAccess	pgls -> g		8367673	0					
ANR	8367794	Identifier	pgls		8367673	0					
ANR	8367795	Identifier	g		8367673	1					
ANR	8367796	Identifier	current_dl_char_id		8367673	1					
ANR	8367797	Argument	( ushort ) cc		8367673	1					
ANR	8367798	CastExpression	( ushort ) cc		8367673	0					
ANR	8367799	CastTarget	ushort		8367673	0					
ANR	8367800	Identifier	cc		8367673	1					
ANR	8367801	ExpressionStatement	"code = pl_dict_put ( & pgls -> g . dl_531_fontdict , id_key ( pgls -> g . current_dl_char_id ) , 2 , cdata )"	654:8:19800:19910	8367673	9	True				
ANR	8367802	AssignmentExpression	"code = pl_dict_put ( & pgls -> g . dl_531_fontdict , id_key ( pgls -> g . current_dl_char_id ) , 2 , cdata )"		8367673	0		=			
ANR	8367803	Identifier	code		8367673	0					
ANR	8367804	CallExpression	"pl_dict_put ( & pgls -> g . dl_531_fontdict , id_key ( pgls -> g . current_dl_char_id ) , 2 , cdata )"		8367673	1					
ANR	8367805	Callee	pl_dict_put		8367673	0					
ANR	8367806	Identifier	pl_dict_put		8367673	0					
ANR	8367807	ArgumentList	& pgls -> g . dl_531_fontdict		8367673	1					
ANR	8367808	Argument	& pgls -> g . dl_531_fontdict		8367673	0					
ANR	8367809	UnaryOperationExpression	& pgls -> g . dl_531_fontdict		8367673	0					
ANR	8367810	UnaryOperator	&		8367673	0					
ANR	8367811	MemberAccess	pgls -> g . dl_531_fontdict		8367673	1					
ANR	8367812	PtrMemberAccess	pgls -> g		8367673	0					
ANR	8367813	Identifier	pgls		8367673	0					
ANR	8367814	Identifier	g		8367673	1					
ANR	8367815	Identifier	dl_531_fontdict		8367673	1					
ANR	8367816	Argument	id_key ( pgls -> g . current_dl_char_id )		8367673	1					
ANR	8367817	CallExpression	id_key ( pgls -> g . current_dl_char_id )		8367673	0					
ANR	8367818	Callee	id_key		8367673	0					
ANR	8367819	Identifier	id_key		8367673	0					
ANR	8367820	ArgumentList	pgls -> g . current_dl_char_id		8367673	1					
ANR	8367821	Argument	pgls -> g . current_dl_char_id		8367673	0					
ANR	8367822	MemberAccess	pgls -> g . current_dl_char_id		8367673	0					
ANR	8367823	PtrMemberAccess	pgls -> g		8367673	0					
ANR	8367824	Identifier	pgls		8367673	0					
ANR	8367825	Identifier	g		8367673	1					
ANR	8367826	Identifier	current_dl_char_id		8367673	1					
ANR	8367827	Argument	2		8367673	2					
ANR	8367828	PrimaryExpression	2		8367673	0					
ANR	8367829	Argument	cdata		8367673	3					
ANR	8367830	Identifier	cdata		8367673	0					
ANR	8367831	IfStatement	if ( code < 0 )		8367673	10					
ANR	8367832	Condition	code < 0	656:12:19924:19931	8367673	0	True				
ANR	8367833	RelationalExpression	code < 0		8367673	0		<			
ANR	8367834	Identifier	code		8367673	0					
ANR	8367835	PrimaryExpression	0		8367673	1					
ANR	8367836	ReturnStatement	return code ;	657:12:19946:19957	8367673	1	True				
ANR	8367837	Identifier	code		8367673	0					
ANR	8367838	ExpressionStatement	hpgl_args_init ( pargs )	658:8:19967:19988	8367673	11	True				
ANR	8367839	CallExpression	hpgl_args_init ( pargs )		8367673	0					
ANR	8367840	Callee	hpgl_args_init		8367673	0					
ANR	8367841	Identifier	hpgl_args_init		8367673	0					
ANR	8367842	ArgumentList	pargs		8367673	1					
ANR	8367843	Argument	pargs		8367673	0					
ANR	8367844	Identifier	pargs		8367673	0					
ANR	8367845	ExpressionStatement	pargs -> phase = 1	659:8:19998:20014	8367673	12	True				
ANR	8367846	AssignmentExpression	pargs -> phase = 1		8367673	0		=			
ANR	8367847	PtrMemberAccess	pargs -> phase		8367673	0					
ANR	8367848	Identifier	pargs		8367673	0					
ANR	8367849	Identifier	phase		8367673	1					
ANR	8367850	PrimaryExpression	1		8367673	1					
ANR	8367851	IfStatement	"if ( ! pl_dict_find ( & pgls -> g . dl_531_fontdict , id_key ( pgls -> g . current_dl_char_id ) , 2 , ( void * * ) & cdata ) )"		8367673	3					
ANR	8367852	Condition	"! pl_dict_find ( & pgls -> g . dl_531_fontdict , id_key ( pgls -> g . current_dl_char_id ) , 2 , ( void * * ) & cdata )"	662:8:20031:20143	8367673	0	True				
ANR	8367853	UnaryOperationExpression	"! pl_dict_find ( & pgls -> g . dl_531_fontdict , id_key ( pgls -> g . current_dl_char_id ) , 2 , ( void * * ) & cdata )"		8367673	0					
ANR	8367854	UnaryOperator	!		8367673	0					
ANR	8367855	CallExpression	"pl_dict_find ( & pgls -> g . dl_531_fontdict , id_key ( pgls -> g . current_dl_char_id ) , 2 , ( void * * ) & cdata )"		8367673	1					
ANR	8367856	Callee	pl_dict_find		8367673	0					
ANR	8367857	Identifier	pl_dict_find		8367673	0					
ANR	8367858	ArgumentList	& pgls -> g . dl_531_fontdict		8367673	1					
ANR	8367859	Argument	& pgls -> g . dl_531_fontdict		8367673	0					
ANR	8367860	UnaryOperationExpression	& pgls -> g . dl_531_fontdict		8367673	0					
ANR	8367861	UnaryOperator	&		8367673	0					
ANR	8367862	MemberAccess	pgls -> g . dl_531_fontdict		8367673	1					
ANR	8367863	PtrMemberAccess	pgls -> g		8367673	0					
ANR	8367864	Identifier	pgls		8367673	0					
ANR	8367865	Identifier	g		8367673	1					
ANR	8367866	Identifier	dl_531_fontdict		8367673	1					
ANR	8367867	Argument	id_key ( pgls -> g . current_dl_char_id )		8367673	1					
ANR	8367868	CallExpression	id_key ( pgls -> g . current_dl_char_id )		8367673	0					
ANR	8367869	Callee	id_key		8367673	0					
ANR	8367870	Identifier	id_key		8367673	0					
ANR	8367871	ArgumentList	pgls -> g . current_dl_char_id		8367673	1					
ANR	8367872	Argument	pgls -> g . current_dl_char_id		8367673	0					
ANR	8367873	MemberAccess	pgls -> g . current_dl_char_id		8367673	0					
ANR	8367874	PtrMemberAccess	pgls -> g		8367673	0					
ANR	8367875	Identifier	pgls		8367673	0					
ANR	8367876	Identifier	g		8367673	1					
ANR	8367877	Identifier	current_dl_char_id		8367673	1					
ANR	8367878	Argument	2		8367673	2					
ANR	8367879	PrimaryExpression	2		8367673	0					
ANR	8367880	Argument	( void * * ) & cdata		8367673	3					
ANR	8367881	CastExpression	( void * * ) & cdata		8367673	0					
ANR	8367882	CastTarget	void * *		8367673	0					
ANR	8367883	UnaryOperationExpression	& cdata		8367673	1					
ANR	8367884	UnaryOperator	&		8367673	0					
ANR	8367885	Identifier	cdata		8367673	1					
ANR	8367886	ReturnStatement	return - 1 ;	666:8:20202:20211	8367673	1	True				
ANR	8367887	UnaryOperationExpression	- 1		8367673	0					
ANR	8367888	UnaryOperator	-		8367673	0					
ANR	8367889	PrimaryExpression	1		8367673	1					
ANR	8367890	DoStatement	do		8367673	4					
ANR	8367891	CompoundStatement		45:8:1350:1355	8367673	0					
ANR	8367892	IdentifierDeclStatement	int c ;	668:8:20230:20235	8367673	0	True				
ANR	8367893	IdentifierDecl	c		8367673	0					
ANR	8367894	IdentifierDeclType	int		8367673	0					
ANR	8367895	Identifier	c		8367673	1					
ANR	8367896	IfStatement	"if ( ! hpgl_arg_c_int ( pgls -> memory , pargs , & c ) )"		8367673	1					
ANR	8367897	Condition	"! hpgl_arg_c_int ( pgls -> memory , pargs , & c )"	670:12:20250:20289	8367673	0	True				
ANR	8367898	UnaryOperationExpression	"! hpgl_arg_c_int ( pgls -> memory , pargs , & c )"		8367673	0					
ANR	8367899	UnaryOperator	!		8367673	0					
ANR	8367900	CallExpression	"hpgl_arg_c_int ( pgls -> memory , pargs , & c )"		8367673	1					
ANR	8367901	Callee	hpgl_arg_c_int		8367673	0					
ANR	8367902	Identifier	hpgl_arg_c_int		8367673	0					
ANR	8367903	ArgumentList	pgls -> memory		8367673	1					
ANR	8367904	Argument	pgls -> memory		8367673	0					
ANR	8367905	PtrMemberAccess	pgls -> memory		8367673	0					
ANR	8367906	Identifier	pgls		8367673	0					
ANR	8367907	Identifier	memory		8367673	1					
ANR	8367908	Argument	pargs		8367673	1					
ANR	8367909	Identifier	pargs		8367673	0					
ANR	8367910	Argument	& c		8367673	2					
ANR	8367911	UnaryOperationExpression	& c		8367673	0					
ANR	8367912	UnaryOperator	&		8367673	0					
ANR	8367913	Identifier	c		8367673	1					
ANR	8367914	BreakStatement	break ;	671:12:20304:20309	8367673	1	True				
ANR	8367915	ExpressionStatement	"code = hpgl_add_dl_char_data ( pgls , cdata , c )"	672:8:20319:20363	8367673	2	True				
ANR	8367916	AssignmentExpression	"code = hpgl_add_dl_char_data ( pgls , cdata , c )"		8367673	0		=			
ANR	8367917	Identifier	code		8367673	0					
ANR	8367918	CallExpression	"hpgl_add_dl_char_data ( pgls , cdata , c )"		8367673	1					
ANR	8367919	Callee	hpgl_add_dl_char_data		8367673	0					
ANR	8367920	Identifier	hpgl_add_dl_char_data		8367673	0					
ANR	8367921	ArgumentList	pgls		8367673	1					
ANR	8367922	Argument	pgls		8367673	0					
ANR	8367923	Identifier	pgls		8367673	0					
ANR	8367924	Argument	cdata		8367673	1					
ANR	8367925	Identifier	cdata		8367673	0					
ANR	8367926	Argument	c		8367673	2					
ANR	8367927	Identifier	c		8367673	0					
ANR	8367928	IfStatement	if ( code < 0 )		8367673	3					
ANR	8367929	Condition	code < 0	673:12:20377:20384	8367673	0	True				
ANR	8367930	RelationalExpression	code < 0		8367673	0		<			
ANR	8367931	Identifier	code		8367673	0					
ANR	8367932	PrimaryExpression	0		8367673	1					
ANR	8367933	CompoundStatement		50:22:1507:1507	8367673	1					
ANR	8367934	ExpressionStatement	"pl_dict_undef ( & pgls -> g . dl_531_fontdict , id_key ( pgls -> g . current_dl_char_id ) , 2 )"	674:12:20401:20505	8367673	0	True				
ANR	8367935	CallExpression	"pl_dict_undef ( & pgls -> g . dl_531_fontdict , id_key ( pgls -> g . current_dl_char_id ) , 2 )"		8367673	0					
ANR	8367936	Callee	pl_dict_undef		8367673	0					
ANR	8367937	Identifier	pl_dict_undef		8367673	0					
ANR	8367938	ArgumentList	& pgls -> g . dl_531_fontdict		8367673	1					
ANR	8367939	Argument	& pgls -> g . dl_531_fontdict		8367673	0					
ANR	8367940	UnaryOperationExpression	& pgls -> g . dl_531_fontdict		8367673	0					
ANR	8367941	UnaryOperator	&		8367673	0					
ANR	8367942	MemberAccess	pgls -> g . dl_531_fontdict		8367673	1					
ANR	8367943	PtrMemberAccess	pgls -> g		8367673	0					
ANR	8367944	Identifier	pgls		8367673	0					
ANR	8367945	Identifier	g		8367673	1					
ANR	8367946	Identifier	dl_531_fontdict		8367673	1					
ANR	8367947	Argument	id_key ( pgls -> g . current_dl_char_id )		8367673	1					
ANR	8367948	CallExpression	id_key ( pgls -> g . current_dl_char_id )		8367673	0					
ANR	8367949	Callee	id_key		8367673	0					
ANR	8367950	Identifier	id_key		8367673	0					
ANR	8367951	ArgumentList	pgls -> g . current_dl_char_id		8367673	1					
ANR	8367952	Argument	pgls -> g . current_dl_char_id		8367673	0					
ANR	8367953	MemberAccess	pgls -> g . current_dl_char_id		8367673	0					
ANR	8367954	PtrMemberAccess	pgls -> g		8367673	0					
ANR	8367955	Identifier	pgls		8367673	0					
ANR	8367956	Identifier	g		8367673	1					
ANR	8367957	Identifier	current_dl_char_id		8367673	1					
ANR	8367958	Argument	2		8367673	2					
ANR	8367959	PrimaryExpression	2		8367673	0					
ANR	8367960	ReturnStatement	return code ;	676:12:20519:20530	8367673	1	True				
ANR	8367961	Identifier	code		8367673	0					
ANR	8367962	ExpressionStatement	hpgl_args_init ( pargs )	678:8:20550:20571	8367673	4	True				
ANR	8367963	CallExpression	hpgl_args_init ( pargs )		8367673	0					
ANR	8367964	Callee	hpgl_args_init		8367673	0					
ANR	8367965	Identifier	hpgl_args_init		8367673	0					
ANR	8367966	ArgumentList	pargs		8367673	1					
ANR	8367967	Argument	pargs		8367673	0					
ANR	8367968	Identifier	pargs		8367673	0					
ANR	8367969	Condition	1	679:13:20586:20586	8367673	1	True				
ANR	8367970	PrimaryExpression	1		8367673	0					
ANR	8367971	ReturnStatement	return 0 ;	680:4:20594:20602	8367673	5	True				
ANR	8367972	PrimaryExpression	0		8367673	0					
ANR	8367973	ReturnType	int		8367673	1					
ANR	8367974	Identifier	hpgl_DL		8367673	2					
ANR	8367975	ParameterList	"hpgl_args_t * pargs , hpgl_state_t * pgls"		8367673	3					
ANR	8367976	Parameter	hpgl_args_t * pargs	623:8:18837:18855	8367673	0	True				
ANR	8367977	ParameterType	hpgl_args_t *		8367673	0					
ANR	8367978	Identifier	pargs		8367673	1					
ANR	8367979	Parameter	hpgl_state_t * pgls	623:29:18858:18876	8367673	1	True				
ANR	8367980	ParameterType	hpgl_state_t *		8367673	0					
ANR	8367981	Identifier	pgls		8367673	1					
ANR	8367982	CFGEntryNode	ENTRY		8367673		True				
ANR	8367983	CFGExitNode	EXIT		8367673		True				
ANR	8367984	Symbol	e_Unimplemented		8367673						
ANR	8367985	Symbol	& pgls -> g		8367673						
ANR	8367986	Symbol	code		8367673						
ANR	8367987	Symbol	pgls		8367673						
ANR	8367988	Symbol	& cc		8367673						
ANR	8367989	Symbol	pgls -> g . current_dl_char_id		8367673						
ANR	8367990	Symbol	pargs		8367673						
ANR	8367991	Symbol	e_Memory		8367673						
ANR	8367992	Symbol	* cdata		8367673						
ANR	8367993	Symbol	* pgls		8367673						
ANR	8367994	Symbol	& pgls -> g . dl_531_fontdict		8367673						
ANR	8367995	Symbol	pgls -> memory		8367673						
ANR	8367996	Symbol	pargs -> phase		8367673						
ANR	8367997	Symbol	pgls -> g		8367673						
ANR	8367998	Symbol	pgls -> g . label		8367673						
ANR	8367999	Symbol	cc		8367673						
ANR	8368000	Symbol	e_Range		8367673						
ANR	8368001	Symbol	id_key		8367673						
ANR	8368002	Symbol	gs_alloc_bytes		8367673						
ANR	8368003	Symbol	NULL		8367673						
ANR	8368004	Symbol	c		8367673						
ANR	8368005	Symbol	cdata -> index		8367673						
ANR	8368006	Symbol	& c		8367673						
ANR	8368007	Symbol	hpgl_arg_c_int		8367673						
ANR	8368008	Symbol	pl_dict_find		8367673						
ANR	8368009	Symbol	cdata		8367673						
ANR	8368010	Symbol	* pargs		8367673						
ANR	8368011	Symbol	cdata -> data		8367673						
ANR	8368012	Symbol	pgls -> g . label . double_byte		8367673						
ANR	8368013	Symbol	& cdata		8367673						
ANR	8368014	Symbol	pl_dict_put		8367673						
ANR	8368015	Symbol	hpgl_add_dl_char_data		8367673						
ANR	8368016	Function	pgchar_do_registration	684:0:20628:22295							
ANR	8368017	FunctionDef	"pgchar_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8368016	0					
ANR	8368018	CompoundStatement		687:0:20743:22295	8368016	0					
ANR	8368019	Statement	DEFINE_HPGL_COMMANDS	688:4:20803:20822	8368016	0	True				
ANR	8368020	Statement	(	688:24:20823:20823	8368016	1	True				
ANR	8368021	Statement	mem	688:25:20824:20826	8368016	2	True				
ANR	8368022	Statement	)	688:28:20827:20827	8368016	3	True				
ANR	8368023	Statement	HPGL_COMMAND	689:8:20837:20848	8368016	4	True				
ANR	8368024	Statement	(	689:20:20849:20849	8368016	5	True				
ANR	8368025	Statement	'A'	689:21:20850:20852	8368016	6	True				
ANR	8368026	Statement	","	689:24:20853:20853	8368016	7	True				
ANR	8368027	Statement	'D'	689:26:20855:20857	8368016	8	True				
ANR	8368028	Statement	","	689:29:20858:20858	8368016	9	True				
ANR	8368029	Statement	hpgl_AD	689:31:20860:20866	8368016	10	True				
ANR	8368030	Statement	","	689:38:20867:20867	8368016	11	True				
ANR	8368031	Statement	hpgl_cdf_pcl_rtl_both	689:40:20869:20889	8368016	12	True				
ANR	8368032	Statement	)	689:61:20890:20890	8368016	13	True				
ANR	8368033	Statement	","	689:62:20891:20891	8368016	14	True				
ANR	8368034	Statement	HPGL_COMMAND	690:8:20924:20935	8368016	15	True				
ANR	8368035	Statement	(	690:20:20936:20936	8368016	16	True				
ANR	8368036	Statement	'C'	690:21:20937:20939	8368016	17	True				
ANR	8368037	Statement	","	690:24:20940:20940	8368016	18	True				
ANR	8368038	Statement	'F'	690:26:20942:20944	8368016	19	True				
ANR	8368039	Statement	","	690:29:20945:20945	8368016	20	True				
ANR	8368040	Statement	hpgl_CF	690:31:20947:20953	8368016	21	True				
ANR	8368041	Statement	","	690:38:20954:20954	8368016	22	True				
ANR	8368042	Statement	hpgl_cdf_pcl_rtl_both	690:40:20956:20976	8368016	23	True				
ANR	8368043	Statement	)	690:61:20977:20977	8368016	24	True				
ANR	8368044	Statement	","	690:62:20978:20978	8368016	25	True				
ANR	8368045	Statement	HPGL_COMMAND	691:8:20988:20999	8368016	26	True				
ANR	8368046	Statement	(	691:20:21000:21000	8368016	27	True				
ANR	8368047	Statement	'D'	691:21:21001:21003	8368016	28	True				
ANR	8368048	Statement	","	691:24:21004:21004	8368016	29	True				
ANR	8368049	Statement	'I'	691:26:21006:21008	8368016	30	True				
ANR	8368050	Statement	","	691:29:21009:21009	8368016	31	True				
ANR	8368051	Statement	hpgl_DI	691:31:21011:21017	8368016	32	True				
ANR	8368052	Statement	","	691:38:21018:21018	8368016	33	True				
ANR	8368053	Statement	hpgl_cdf_pcl_rtl_both	691:40:21020:21040	8368016	34	True				
ANR	8368054	Statement	)	691:61:21041:21041	8368016	35	True				
ANR	8368055	Statement	","	691:62:21042:21042	8368016	36	True				
ANR	8368056	Statement	HPGL_COMMAND	692:8:21052:21063	8368016	37	True				
ANR	8368057	Statement	(	692:20:21064:21064	8368016	38	True				
ANR	8368058	Statement	'D'	692:21:21065:21067	8368016	39	True				
ANR	8368059	Statement	","	692:24:21068:21068	8368016	40	True				
ANR	8368060	Statement	'L'	692:26:21070:21072	8368016	41	True				
ANR	8368061	Statement	","	692:29:21073:21073	8368016	42	True				
ANR	8368062	Statement	hpgl_DL	692:31:21075:21081	8368016	43	True				
ANR	8368063	Statement	","	692:38:21082:21082	8368016	44	True				
ANR	8368064	Statement	hpgl_cdf_pcl_rtl_both	692:40:21084:21104	8368016	45	True				
ANR	8368065	Statement	)	692:61:21105:21105	8368016	46	True				
ANR	8368066	Statement	","	692:62:21106:21106	8368016	47	True				
ANR	8368067	Statement	HPGL_COMMAND	693:8:21116:21127	8368016	48	True				
ANR	8368068	Statement	(	693:20:21128:21128	8368016	49	True				
ANR	8368069	Statement	'D'	693:21:21129:21131	8368016	50	True				
ANR	8368070	Statement	","	693:24:21132:21132	8368016	51	True				
ANR	8368071	Statement	'R'	693:26:21134:21136	8368016	52	True				
ANR	8368072	Statement	","	693:29:21137:21137	8368016	53	True				
ANR	8368073	Statement	hpgl_DR	693:31:21139:21145	8368016	54	True				
ANR	8368074	Statement	","	693:38:21146:21146	8368016	55	True				
ANR	8368075	Statement	hpgl_cdf_pcl_rtl_both	693:40:21148:21168	8368016	56	True				
ANR	8368076	Statement	)	693:61:21169:21169	8368016	57	True				
ANR	8368077	Statement	","	693:62:21170:21170	8368016	58	True				
ANR	8368078	Statement	HPGL_COMMAND	696:8:21292:21303	8368016	59	True				
ANR	8368079	Statement	(	696:20:21304:21304	8368016	60	True				
ANR	8368080	Statement	'D'	696:21:21305:21307	8368016	61	True				
ANR	8368081	Statement	","	696:24:21308:21308	8368016	62	True				
ANR	8368082	Statement	'T'	696:26:21310:21312	8368016	63	True				
ANR	8368083	Statement	","	696:29:21313:21313	8368016	64	True				
ANR	8368084	Statement	hpgl_DT	696:31:21315:21321	8368016	65	True				
ANR	8368085	Statement	","	696:38:21322:21322	8368016	66	True				
ANR	8368086	Statement	hpgl_cdf_polygon	696:40:21324:21339	8368016	67	True				
ANR	8368087	Statement	|	696:57:21341:21341	8368016	68	True				
ANR	8368088	Statement	hpgl_cdf_pcl_rtl_both	696:59:21343:21363	8368016	69	True				
ANR	8368089	Statement	)	696:80:21364:21364	8368016	70	True				
ANR	8368090	Statement	","	696:81:21365:21365	8368016	71	True				
ANR	8368091	Statement	HPGL_COMMAND	697:8:21375:21386	8368016	72	True				
ANR	8368092	Statement	(	697:20:21387:21387	8368016	73	True				
ANR	8368093	Statement	'D'	697:21:21388:21390	8368016	74	True				
ANR	8368094	Statement	","	697:24:21391:21391	8368016	75	True				
ANR	8368095	Statement	'V'	697:26:21393:21395	8368016	76	True				
ANR	8368096	Statement	","	697:29:21396:21396	8368016	77	True				
ANR	8368097	Statement	hpgl_DV	697:31:21398:21404	8368016	78	True				
ANR	8368098	Statement	","	697:38:21405:21405	8368016	79	True				
ANR	8368099	Statement	hpgl_cdf_pcl_rtl_both	697:40:21407:21427	8368016	80	True				
ANR	8368100	Statement	)	697:61:21428:21428	8368016	81	True				
ANR	8368101	Statement	","	697:62:21429:21429	8368016	82	True				
ANR	8368102	Statement	HPGL_COMMAND	698:8:21439:21450	8368016	83	True				
ANR	8368103	Statement	(	698:20:21451:21451	8368016	84	True				
ANR	8368104	Statement	'E'	698:21:21452:21454	8368016	85	True				
ANR	8368105	Statement	","	698:24:21455:21455	8368016	86	True				
ANR	8368106	Statement	'S'	698:26:21457:21459	8368016	87	True				
ANR	8368107	Statement	","	698:29:21460:21460	8368016	88	True				
ANR	8368108	Statement	hpgl_ES	698:31:21462:21468	8368016	89	True				
ANR	8368109	Statement	","	698:38:21469:21469	8368016	90	True				
ANR	8368110	Statement	hpgl_cdf_pcl_rtl_both	698:40:21471:21491	8368016	91	True				
ANR	8368111	Statement	)	698:61:21492:21492	8368016	92	True				
ANR	8368112	Statement	","	698:62:21493:21493	8368016	93	True				
ANR	8368113	Statement	HPGL_COMMAND	699:8:21503:21514	8368016	94	True				
ANR	8368114	Statement	(	699:20:21515:21515	8368016	95	True				
ANR	8368115	Statement	'F'	699:21:21516:21518	8368016	96	True				
ANR	8368116	Statement	","	699:24:21519:21519	8368016	97	True				
ANR	8368117	Statement	'I'	699:26:21521:21523	8368016	98	True				
ANR	8368118	Statement	","	699:29:21524:21524	8368016	99	True				
ANR	8368119	Statement	hpgl_FI	699:31:21526:21532	8368016	100	True				
ANR	8368120	Statement	","	699:38:21533:21533	8368016	101	True				
ANR	8368121	Statement	hpgl_cdf_pcl	699:40:21535:21546	8368016	102	True				
ANR	8368122	Statement	)	699:52:21547:21547	8368016	103	True				
ANR	8368123	Statement	","	699:53:21548:21548	8368016	104	True				
ANR	8368124	Statement	HPGL_COMMAND	700:8:21558:21569	8368016	105	True				
ANR	8368125	Statement	(	700:20:21570:21570	8368016	106	True				
ANR	8368126	Statement	'F'	700:21:21571:21573	8368016	107	True				
ANR	8368127	Statement	","	700:24:21574:21574	8368016	108	True				
ANR	8368128	Statement	'N'	700:26:21576:21578	8368016	109	True				
ANR	8368129	Statement	","	700:29:21579:21579	8368016	110	True				
ANR	8368130	Statement	hpgl_FN	700:31:21581:21587	8368016	111	True				
ANR	8368131	Statement	","	700:38:21588:21588	8368016	112	True				
ANR	8368132	Statement	hpgl_cdf_pcl	700:40:21590:21601	8368016	113	True				
ANR	8368133	Statement	)	700:52:21602:21602	8368016	114	True				
ANR	8368134	Statement	","	700:53:21603:21603	8368016	115	True				
ANR	8368135	Statement	HPGL_COMMAND	701:8:21613:21624	8368016	116	True				
ANR	8368136	Statement	(	701:20:21625:21625	8368016	117	True				
ANR	8368137	Statement	'L'	701:21:21626:21628	8368016	118	True				
ANR	8368138	Statement	","	701:24:21629:21629	8368016	119	True				
ANR	8368139	Statement	'M'	701:26:21631:21633	8368016	120	True				
ANR	8368140	Statement	","	701:29:21634:21634	8368016	121	True				
ANR	8368141	Statement	hpgl_LM	701:31:21636:21642	8368016	122	True				
ANR	8368142	Statement	","	701:38:21643:21643	8368016	123	True				
ANR	8368143	Statement	hpgl_cdf_pcl_rtl_both	701:40:21645:21665	8368016	124	True				
ANR	8368144	Statement	)	701:61:21666:21666	8368016	125	True				
ANR	8368145	Statement	","	701:62:21667:21667	8368016	126	True				
ANR	8368146	Statement	HPGL_COMMAND	702:8:21677:21688	8368016	127	True				
ANR	8368147	Statement	(	702:20:21689:21689	8368016	128	True				
ANR	8368148	Statement	'L'	702:21:21690:21692	8368016	129	True				
ANR	8368149	Statement	","	702:24:21693:21693	8368016	130	True				
ANR	8368150	Statement	'O'	702:26:21695:21697	8368016	131	True				
ANR	8368151	Statement	","	702:29:21698:21698	8368016	132	True				
ANR	8368152	Statement	hpgl_LO	702:31:21700:21706	8368016	133	True				
ANR	8368153	Statement	","	702:38:21707:21707	8368016	134	True				
ANR	8368154	Statement	hpgl_cdf_pcl_rtl_both	702:40:21709:21729	8368016	135	True				
ANR	8368155	Statement	)	702:61:21730:21730	8368016	136	True				
ANR	8368156	Statement	","	702:62:21731:21731	8368016	137	True				
ANR	8368157	Statement	HPGL_COMMAND	703:8:21741:21752	8368016	138	True				
ANR	8368158	Statement	(	703:20:21753:21753	8368016	139	True				
ANR	8368159	Statement	'S'	703:21:21754:21756	8368016	140	True				
ANR	8368160	Statement	","	703:24:21757:21757	8368016	141	True				
ANR	8368161	Statement	'A'	703:26:21759:21761	8368016	142	True				
ANR	8368162	Statement	","	703:29:21762:21762	8368016	143	True				
ANR	8368163	Statement	hpgl_SA	703:31:21764:21770	8368016	144	True				
ANR	8368164	Statement	","	703:38:21771:21771	8368016	145	True				
ANR	8368165	Statement	hpgl_cdf_pcl_rtl_both	703:40:21773:21793	8368016	146	True				
ANR	8368166	Statement	)	703:61:21794:21794	8368016	147	True				
ANR	8368167	Statement	","	703:62:21795:21795	8368016	148	True				
ANR	8368168	Statement	HPGL_COMMAND	704:8:21805:21816	8368016	149	True				
ANR	8368169	Statement	(	704:20:21817:21817	8368016	150	True				
ANR	8368170	Statement	'S'	704:21:21818:21820	8368016	151	True				
ANR	8368171	Statement	","	704:24:21821:21821	8368016	152	True				
ANR	8368172	Statement	'B'	704:26:21823:21825	8368016	153	True				
ANR	8368173	Statement	","	704:29:21826:21826	8368016	154	True				
ANR	8368174	Statement	hpgl_SB	704:31:21828:21834	8368016	155	True				
ANR	8368175	Statement	","	704:38:21835:21835	8368016	156	True				
ANR	8368176	Statement	hpgl_cdf_pcl	704:40:21837:21848	8368016	157	True				
ANR	8368177	Statement	)	704:52:21849:21849	8368016	158	True				
ANR	8368178	Statement	","	704:53:21850:21850	8368016	159	True				
ANR	8368179	Statement	HPGL_COMMAND	705:8:21860:21871	8368016	160	True				
ANR	8368180	Statement	(	705:20:21872:21872	8368016	161	True				
ANR	8368181	Statement	'S'	705:21:21873:21875	8368016	162	True				
ANR	8368182	Statement	","	705:24:21876:21876	8368016	163	True				
ANR	8368183	Statement	'D'	705:26:21878:21880	8368016	164	True				
ANR	8368184	Statement	","	705:29:21881:21881	8368016	165	True				
ANR	8368185	Statement	hpgl_SD	705:31:21883:21889	8368016	166	True				
ANR	8368186	Statement	","	705:38:21890:21890	8368016	167	True				
ANR	8368187	Statement	hpgl_cdf_pcl_rtl_both	705:40:21892:21912	8368016	168	True				
ANR	8368188	Statement	)	705:61:21913:21913	8368016	169	True				
ANR	8368189	Statement	","	705:62:21914:21914	8368016	170	True				
ANR	8368190	Statement	HPGL_COMMAND	706:8:21947:21958	8368016	171	True				
ANR	8368191	Statement	(	706:20:21959:21959	8368016	172	True				
ANR	8368192	Statement	'S'	706:21:21960:21962	8368016	173	True				
ANR	8368193	Statement	","	706:24:21963:21963	8368016	174	True				
ANR	8368194	Statement	'I'	706:26:21965:21967	8368016	175	True				
ANR	8368195	Statement	","	706:29:21968:21968	8368016	176	True				
ANR	8368196	Statement	hpgl_SI	706:31:21970:21976	8368016	177	True				
ANR	8368197	Statement	","	706:38:21977:21977	8368016	178	True				
ANR	8368198	Statement	hpgl_cdf_pcl_rtl_both	706:40:21979:21999	8368016	179	True				
ANR	8368199	Statement	)	706:61:22000:22000	8368016	180	True				
ANR	8368200	Statement	","	706:62:22001:22001	8368016	181	True				
ANR	8368201	Statement	HPGL_COMMAND	707:8:22011:22022	8368016	182	True				
ANR	8368202	Statement	(	707:20:22023:22023	8368016	183	True				
ANR	8368203	Statement	'S'	707:21:22024:22026	8368016	184	True				
ANR	8368204	Statement	","	707:24:22027:22027	8368016	185	True				
ANR	8368205	Statement	'L'	707:26:22029:22031	8368016	186	True				
ANR	8368206	Statement	","	707:29:22032:22032	8368016	187	True				
ANR	8368207	Statement	hpgl_SL	707:31:22034:22040	8368016	188	True				
ANR	8368208	Statement	","	707:38:22041:22041	8368016	189	True				
ANR	8368209	Statement	hpgl_cdf_pcl_rtl_both	707:40:22043:22063	8368016	190	True				
ANR	8368210	Statement	)	707:61:22064:22064	8368016	191	True				
ANR	8368211	Statement	","	707:62:22065:22065	8368016	192	True				
ANR	8368212	Statement	HPGL_COMMAND	708:8:22075:22086	8368016	193	True				
ANR	8368213	Statement	(	708:20:22087:22087	8368016	194	True				
ANR	8368214	Statement	'S'	708:21:22088:22090	8368016	195	True				
ANR	8368215	Statement	","	708:24:22091:22091	8368016	196	True				
ANR	8368216	Statement	'R'	708:26:22093:22095	8368016	197	True				
ANR	8368217	Statement	","	708:29:22096:22096	8368016	198	True				
ANR	8368218	Statement	hpgl_SR	708:31:22098:22104	8368016	199	True				
ANR	8368219	Statement	","	708:38:22105:22105	8368016	200	True				
ANR	8368220	Statement	hpgl_cdf_pcl_rtl_both	708:40:22107:22127	8368016	201	True				
ANR	8368221	Statement	)	708:61:22128:22128	8368016	202	True				
ANR	8368222	Statement	","	708:62:22129:22129	8368016	203	True				
ANR	8368223	Statement	HPGL_COMMAND	709:8:22139:22150	8368016	204	True				
ANR	8368224	Statement	(	709:20:22151:22151	8368016	205	True				
ANR	8368225	Statement	'S'	709:21:22152:22154	8368016	206	True				
ANR	8368226	Statement	","	709:24:22155:22155	8368016	207	True				
ANR	8368227	Statement	'S'	709:26:22157:22159	8368016	208	True				
ANR	8368228	Statement	","	709:29:22160:22160	8368016	209	True				
ANR	8368229	Statement	hpgl_SS	709:31:22162:22168	8368016	210	True				
ANR	8368230	Statement	","	709:38:22169:22169	8368016	211	True				
ANR	8368231	Statement	hpgl_cdf_pcl_rtl_both	709:40:22171:22191	8368016	212	True				
ANR	8368232	Statement	)	709:61:22192:22192	8368016	213	True				
ANR	8368233	Statement	","	709:62:22193:22193	8368016	214	True				
ANR	8368234	Statement	HPGL_COMMAND	710:8:22203:22214	8368016	215	True				
ANR	8368235	Statement	(	710:20:22215:22215	8368016	216	True				
ANR	8368236	Statement	'T'	710:21:22216:22218	8368016	217	True				
ANR	8368237	Statement	","	710:24:22219:22219	8368016	218	True				
ANR	8368238	Statement	'D'	710:26:22221:22223	8368016	219	True				
ANR	8368239	Statement	","	710:29:22224:22224	8368016	220	True				
ANR	8368240	Statement	hpgl_TD	710:31:22226:22232	8368016	221	True				
ANR	8368241	Statement	","	710:38:22233:22233	8368016	222	True				
ANR	8368242	Statement	hpgl_cdf_pcl_rtl_both	710:40:22235:22255	8368016	223	True				
ANR	8368243	Statement	)	710:61:22256:22256	8368016	224	True				
ANR	8368244	Statement	","	710:62:22257:22257	8368016	225	True				
ANR	8368245	Statement	END_HPGL_COMMANDS	711:4:22263:22279	8368016	226	True				
ANR	8368246	ReturnStatement	return 0 ;	712:4:22285:22293	8368016	227	True				
ANR	8368247	PrimaryExpression	0		8368016	0					
ANR	8368248	ReturnType	static int		8368016	1					
ANR	8368249	Identifier	pgchar_do_registration		8368016	2					
ANR	8368250	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8368016	3					
ANR	8368251	Parameter	pcl_parser_state_t * pcl_parser_state	685:23:20662:20698	8368016	0	True				
ANR	8368252	ParameterType	pcl_parser_state_t *		8368016	0					
ANR	8368253	Identifier	pcl_parser_state		8368016	1					
ANR	8368254	Parameter	gs_memory_t * mem	686:23:20724:20740	8368016	1	True				
ANR	8368255	ParameterType	gs_memory_t *		8368016	0					
ANR	8368256	Identifier	mem		8368016	1					
ANR	8368257	CFGEntryNode	ENTRY		8368016		True				
ANR	8368258	CFGExitNode	EXIT		8368016		True				
ANR	8368259	Symbol	mem		8368016						
ANR	8368260	Symbol	pcl_parser_state		8368016						
ANR	8368261	Function	pgchar_do_reset	715:0:22298:22609							
ANR	8368262	FunctionDef	"pgchar_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8368261	0					
ANR	8368263	CompoundStatement		717:0:22367:22609	8368261	0					
ANR	8368264	IfStatement	if ( type & pcl_reset_initial )		8368261	0					
ANR	8368265	Condition	type & pcl_reset_initial	718:8:22377:22400	8368261	0	True				
ANR	8368266	BitAndExpression	type & pcl_reset_initial		8368261	0		&			
ANR	8368267	Identifier	type		8368261	0					
ANR	8368268	Identifier	pcl_reset_initial		8368261	1					
ANR	8368269	ExpressionStatement	"pl_dict_init ( & pcs -> g . dl_531_fontdict , pcs -> memory , hpgl_dl_dict_free_value )"	719:8:22411:22507	8368261	1	True				
ANR	8368270	CallExpression	"pl_dict_init ( & pcs -> g . dl_531_fontdict , pcs -> memory , hpgl_dl_dict_free_value )"		8368261	0					
ANR	8368271	Callee	pl_dict_init		8368261	0					
ANR	8368272	Identifier	pl_dict_init		8368261	0					
ANR	8368273	ArgumentList	& pcs -> g . dl_531_fontdict		8368261	1					
ANR	8368274	Argument	& pcs -> g . dl_531_fontdict		8368261	0					
ANR	8368275	UnaryOperationExpression	& pcs -> g . dl_531_fontdict		8368261	0					
ANR	8368276	UnaryOperator	&		8368261	0					
ANR	8368277	MemberAccess	pcs -> g . dl_531_fontdict		8368261	1					
ANR	8368278	PtrMemberAccess	pcs -> g		8368261	0					
ANR	8368279	Identifier	pcs		8368261	0					
ANR	8368280	Identifier	g		8368261	1					
ANR	8368281	Identifier	dl_531_fontdict		8368261	1					
ANR	8368282	Argument	pcs -> memory		8368261	1					
ANR	8368283	PtrMemberAccess	pcs -> memory		8368261	0					
ANR	8368284	Identifier	pcs		8368261	0					
ANR	8368285	Identifier	memory		8368261	1					
ANR	8368286	Argument	hpgl_dl_dict_free_value		8368261	2					
ANR	8368287	Identifier	hpgl_dl_dict_free_value		8368261	0					
ANR	8368288	IfStatement	if ( type & pcl_reset_permanent )		8368261	1					
ANR	8368289	Condition	type & pcl_reset_permanent	721:8:22517:22542	8368261	0	True				
ANR	8368290	BitAndExpression	type & pcl_reset_permanent		8368261	0		&			
ANR	8368291	Identifier	type		8368261	0					
ANR	8368292	Identifier	pcl_reset_permanent		8368261	1					
ANR	8368293	ExpressionStatement	pl_dict_release ( & pcs -> g . dl_531_fontdict )	722:8:22553:22593	8368261	1	True				
ANR	8368294	CallExpression	pl_dict_release ( & pcs -> g . dl_531_fontdict )		8368261	0					
ANR	8368295	Callee	pl_dict_release		8368261	0					
ANR	8368296	Identifier	pl_dict_release		8368261	0					
ANR	8368297	ArgumentList	& pcs -> g . dl_531_fontdict		8368261	1					
ANR	8368298	Argument	& pcs -> g . dl_531_fontdict		8368261	0					
ANR	8368299	UnaryOperationExpression	& pcs -> g . dl_531_fontdict		8368261	0					
ANR	8368300	UnaryOperator	&		8368261	0					
ANR	8368301	MemberAccess	pcs -> g . dl_531_fontdict		8368261	1					
ANR	8368302	PtrMemberAccess	pcs -> g		8368261	0					
ANR	8368303	Identifier	pcs		8368261	0					
ANR	8368304	Identifier	g		8368261	1					
ANR	8368305	Identifier	dl_531_fontdict		8368261	1					
ANR	8368306	ReturnStatement	return 0 ;	723:4:22599:22607	8368261	2	True				
ANR	8368307	PrimaryExpression	0		8368261	0					
ANR	8368308	ReturnType	static int		8368261	1					
ANR	8368309	Identifier	pgchar_do_reset		8368261	2					
ANR	8368310	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8368261	3					
ANR	8368311	Parameter	pcl_state_t * pcs	716:16:22325:22341	8368261	0	True				
ANR	8368312	ParameterType	pcl_state_t *		8368261	0					
ANR	8368313	Identifier	pcs		8368261	1					
ANR	8368314	Parameter	pcl_reset_type_t type	716:35:22344:22364	8368261	1	True				
ANR	8368315	ParameterType	pcl_reset_type_t		8368261	0					
ANR	8368316	Identifier	type		8368261	1					
ANR	8368317	CFGEntryNode	ENTRY		8368261		True				
ANR	8368318	CFGExitNode	EXIT		8368261		True				
ANR	8368319	Symbol	hpgl_dl_dict_free_value		8368261						
ANR	8368320	Symbol	pcs		8368261						
ANR	8368321	Symbol	& pcs -> g		8368261						
ANR	8368322	Symbol	pcs -> memory		8368261						
ANR	8368323	Symbol	* pcs		8368261						
ANR	8368324	Symbol	pcs -> g		8368261						
ANR	8368325	Symbol	pcl_reset_permanent		8368261						
ANR	8368326	Symbol	type		8368261						
ANR	8368327	Symbol	pcl_reset_initial		8368261						
ANR	8368328	Symbol	& pcs -> g . dl_531_fontdict		8368261						
ANR	8368329	DeclStmt									
ANR	8368330	Decl							const pcl_init_t	const pcl_init_t	pgchar_init
