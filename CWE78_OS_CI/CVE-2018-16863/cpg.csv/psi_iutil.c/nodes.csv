command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8927287	File	data/converged/CVE-2018-16863_ghostpdl/psi_iutil.c								
ANR	8927288	DeclStmt									
ANR	8927289	Decl							const byte	const byte [ ]	ref_type_properties
ANR	8927290	Function	refcpy_to_old	54:0:1580:2167							
ANR	8927291	FunctionDef	"refcpy_to_old (ref * aref , uint index , const ref * from , uint size , gs_dual_memory_t * idmemory , client_name_t cname)"		8927290	0					
ANR	8927292	CompoundStatement		57:0:1714:2167	8927290	0					
ANR	8927293	IdentifierDeclStatement	ref * to = aref -> value . refs + index ;	58:4:1720:1754	8927290	0	True				
ANR	8927294	IdentifierDecl	* to = aref -> value . refs + index		8927290	0					
ANR	8927295	IdentifierDeclType	ref *		8927290	0					
ANR	8927296	Identifier	to		8927290	1					
ANR	8927297	AssignmentExpression	* to = aref -> value . refs + index		8927290	2		=			
ANR	8927298	Identifier	to		8927290	0					
ANR	8927299	AdditiveExpression	aref -> value . refs + index		8927290	1		+			
ANR	8927300	MemberAccess	aref -> value . refs		8927290	0					
ANR	8927301	PtrMemberAccess	aref -> value		8927290	0					
ANR	8927302	Identifier	aref		8927290	0					
ANR	8927303	Identifier	value		8927290	1					
ANR	8927304	Identifier	refs		8927290	1					
ANR	8927305	Identifier	index		8927290	1					
ANR	8927306	IdentifierDeclStatement	"int code = refs_check_space ( from , size , r_space ( aref ) ) ;"	59:4:1760:1814	8927290	1	True				
ANR	8927307	IdentifierDecl	"code = refs_check_space ( from , size , r_space ( aref ) )"		8927290	0					
ANR	8927308	IdentifierDeclType	int		8927290	0					
ANR	8927309	Identifier	code		8927290	1					
ANR	8927310	AssignmentExpression	"code = refs_check_space ( from , size , r_space ( aref ) )"		8927290	2		=			
ANR	8927311	Identifier	code		8927290	0					
ANR	8927312	CallExpression	"refs_check_space ( from , size , r_space ( aref ) )"		8927290	1					
ANR	8927313	Callee	refs_check_space		8927290	0					
ANR	8927314	Identifier	refs_check_space		8927290	0					
ANR	8927315	ArgumentList	from		8927290	1					
ANR	8927316	Argument	from		8927290	0					
ANR	8927317	Identifier	from		8927290	0					
ANR	8927318	Argument	size		8927290	1					
ANR	8927319	Identifier	size		8927290	0					
ANR	8927320	Argument	r_space ( aref )		8927290	2					
ANR	8927321	CallExpression	r_space ( aref )		8927290	0					
ANR	8927322	Callee	r_space		8927290	0					
ANR	8927323	Identifier	r_space		8927290	0					
ANR	8927324	ArgumentList	aref		8927290	1					
ANR	8927325	Argument	aref		8927290	0					
ANR	8927326	Identifier	aref		8927290	0					
ANR	8927327	IfStatement	if ( code < 0 )		8927290	2					
ANR	8927328	Condition	code < 0	61:8:1825:1832	8927290	0	True				
ANR	8927329	RelationalExpression	code < 0		8927290	0		<			
ANR	8927330	Identifier	code		8927290	0					
ANR	8927331	PrimaryExpression	0		8927290	1					
ANR	8927332	ReturnStatement	return code ;	62:8:1843:1854	8927290	1	True				
ANR	8927333	Identifier	code		8927290	0					
ANR	8927334	IfStatement	if ( to <= from || from + size <= to )		8927290	3					
ANR	8927335	Condition	to <= from || from + size <= to	64:8:1910:1940	8927290	0	True				
ANR	8927336	OrExpression	to <= from || from + size <= to		8927290	0		||			
ANR	8927337	RelationalExpression	to <= from		8927290	0		<=			
ANR	8927338	Identifier	to		8927290	0					
ANR	8927339	Identifier	from		8927290	1					
ANR	8927340	RelationalExpression	from + size <= to		8927290	1		<=			
ANR	8927341	AdditiveExpression	from + size		8927290	0		+			
ANR	8927342	Identifier	from		8927290	0					
ANR	8927343	Identifier	size		8927290	1					
ANR	8927344	Identifier	to		8927290	1					
ANR	8927345	WhileStatement	while ( size -- )		8927290	1					
ANR	8927346	Condition	size --	65:15:1958:1963	8927290	0	True				
ANR	8927347	PostIncDecOperationExpression	size --		8927290	0					
ANR	8927348	Identifier	size		8927290	0					
ANR	8927349	IncDec	--		8927290	1					
ANR	8927350	ExpressionStatement	"ref_assign_old ( aref , to , from , cname ) , to ++ , from ++"	66:12:1978:2029	8927290	1	True				
ANR	8927351	Expression	"ref_assign_old ( aref , to , from , cname ) , to ++ , from ++"		8927290	0					
ANR	8927352	CallExpression	"ref_assign_old ( aref , to , from , cname )"		8927290	0					
ANR	8927353	Callee	ref_assign_old		8927290	0					
ANR	8927354	Identifier	ref_assign_old		8927290	0					
ANR	8927355	ArgumentList	aref		8927290	1					
ANR	8927356	Argument	aref		8927290	0					
ANR	8927357	Identifier	aref		8927290	0					
ANR	8927358	Argument	to		8927290	1					
ANR	8927359	Identifier	to		8927290	0					
ANR	8927360	Argument	from		8927290	2					
ANR	8927361	Identifier	from		8927290	0					
ANR	8927362	Argument	cname		8927290	3					
ANR	8927363	Identifier	cname		8927290	0					
ANR	8927364	Expression	"to ++ , from ++"		8927290	1					
ANR	8927365	PostIncDecOperationExpression	to ++		8927290	0					
ANR	8927366	Identifier	to		8927290	0					
ANR	8927367	IncDec	++		8927290	1					
ANR	8927368	PostIncDecOperationExpression	from ++		8927290	1					
ANR	8927369	Identifier	from		8927290	0					
ANR	8927370	IncDec	++		8927290	1					
ANR	8927371	ElseStatement	else		8927290	0					
ANR	8927372	ForStatement	"for ( from += size , to += size ; size -- ; )"		8927290	0					
ANR	8927373	ForInit	"from += size , to += size ;"	68:13:2053:2077	8927290	0	True				
ANR	8927374	Expression	"from += size , to += size"		8927290	0					
ANR	8927375	AssignmentExpression	from += size		8927290	0		+=			
ANR	8927376	Identifier	from		8927290	0					
ANR	8927377	Identifier	size		8927290	1					
ANR	8927378	AssignmentExpression	to += size		8927290	1		+=			
ANR	8927379	Identifier	to		8927290	0					
ANR	8927380	Identifier	size		8927290	1					
ANR	8927381	Condition	size --	68:39:2079:2084	8927290	1	True				
ANR	8927382	PostIncDecOperationExpression	size --		8927290	0					
ANR	8927383	Identifier	size		8927290	0					
ANR	8927384	IncDec	--		8927290	1					
ANR	8927385	ExpressionStatement	"from -- , to -- , ref_assign_old ( aref , to , from , cname )"	69:12:2100:2151	8927290	2	True				
ANR	8927386	Expression	"from -- , to -- , ref_assign_old ( aref , to , from , cname )"		8927290	0					
ANR	8927387	PostIncDecOperationExpression	from --		8927290	0					
ANR	8927388	Identifier	from		8927290	0					
ANR	8927389	IncDec	--		8927290	1					
ANR	8927390	Expression	"to -- , ref_assign_old ( aref , to , from , cname )"		8927290	1					
ANR	8927391	PostIncDecOperationExpression	to --		8927290	0					
ANR	8927392	Identifier	to		8927290	0					
ANR	8927393	IncDec	--		8927290	1					
ANR	8927394	CallExpression	"ref_assign_old ( aref , to , from , cname )"		8927290	1					
ANR	8927395	Callee	ref_assign_old		8927290	0					
ANR	8927396	Identifier	ref_assign_old		8927290	0					
ANR	8927397	ArgumentList	aref		8927290	1					
ANR	8927398	Argument	aref		8927290	0					
ANR	8927399	Identifier	aref		8927290	0					
ANR	8927400	Argument	to		8927290	1					
ANR	8927401	Identifier	to		8927290	0					
ANR	8927402	Argument	from		8927290	2					
ANR	8927403	Identifier	from		8927290	0					
ANR	8927404	Argument	cname		8927290	3					
ANR	8927405	Identifier	cname		8927290	0					
ANR	8927406	ReturnStatement	return 0 ;	70:4:2157:2165	8927290	4	True				
ANR	8927407	PrimaryExpression	0		8927290	0					
ANR	8927408	ReturnType	int		8927290	1					
ANR	8927409	Identifier	refcpy_to_old		8927290	2					
ANR	8927410	ParameterList	"ref * aref , uint index , const ref * from , uint size , gs_dual_memory_t * idmemory , client_name_t cname"		8927290	3					
ANR	8927411	Parameter	ref * aref	55:14:1598:1607	8927290	0	True				
ANR	8927412	ParameterType	ref *		8927290	0					
ANR	8927413	Identifier	aref		8927290	1					
ANR	8927414	Parameter	uint index	55:26:1610:1619	8927290	1	True				
ANR	8927415	ParameterType	uint		8927290	0					
ANR	8927416	Identifier	index		8927290	1					
ANR	8927417	Parameter	const ref * from	55:38:1622:1637	8927290	2	True				
ANR	8927418	ParameterType	const ref *		8927290	0					
ANR	8927419	Identifier	from		8927290	1					
ANR	8927420	Parameter	uint size	56:14:1654:1662	8927290	3	True				
ANR	8927421	ParameterType	uint		8927290	0					
ANR	8927422	Identifier	size		8927290	1					
ANR	8927423	Parameter	gs_dual_memory_t * idmemory	56:25:1665:1690	8927290	4	True				
ANR	8927424	ParameterType	gs_dual_memory_t *		8927290	0					
ANR	8927425	Identifier	idmemory		8927290	1					
ANR	8927426	Parameter	client_name_t cname	56:53:1693:1711	8927290	5	True				
ANR	8927427	ParameterType	client_name_t		8927290	0					
ANR	8927428	Identifier	cname		8927290	1					
ANR	8927429	CFGEntryNode	ENTRY		8927290		True				
ANR	8927430	CFGExitNode	EXIT		8927290		True				
ANR	8927431	Symbol	code		8927290						
ANR	8927432	Symbol	cname		8927290						
ANR	8927433	Symbol	index		8927290						
ANR	8927434	Symbol	idmemory		8927290						
ANR	8927435	Symbol	r_space		8927290						
ANR	8927436	Symbol	size		8927290						
ANR	8927437	Symbol	* aref		8927290						
ANR	8927438	Symbol	aref -> value . refs		8927290						
ANR	8927439	Symbol	refs_check_space		8927290						
ANR	8927440	Symbol	from		8927290						
ANR	8927441	Symbol	aref -> value		8927290						
ANR	8927442	Symbol	to		8927290						
ANR	8927443	Symbol	aref		8927290						
ANR	8927444	Function	refcpy_to_new	72:0:2169:2338							
ANR	8927445	FunctionDef	"refcpy_to_new (ref * to , const ref * from , uint size , gs_dual_memory_t * idmemory)"		8927444	0					
ANR	8927446	CompoundStatement		75:0:2269:2338	8927444	0					
ANR	8927447	WhileStatement	while ( size -- )		8927444	0					
ANR	8927448	Condition	size --	76:11:2282:2287	8927444	0	True				
ANR	8927449	PostIncDecOperationExpression	size --		8927444	0					
ANR	8927450	Identifier	size		8927444	0					
ANR	8927451	IncDec	--		8927444	1					
ANR	8927452	ExpressionStatement	"ref_assign_new ( to , from ) , to ++ , from ++"	77:8:2298:2336	8927444	1	True				
ANR	8927453	Expression	"ref_assign_new ( to , from ) , to ++ , from ++"		8927444	0					
ANR	8927454	CallExpression	"ref_assign_new ( to , from )"		8927444	0					
ANR	8927455	Callee	ref_assign_new		8927444	0					
ANR	8927456	Identifier	ref_assign_new		8927444	0					
ANR	8927457	ArgumentList	to		8927444	1					
ANR	8927458	Argument	to		8927444	0					
ANR	8927459	Identifier	to		8927444	0					
ANR	8927460	Argument	from		8927444	1					
ANR	8927461	Identifier	from		8927444	0					
ANR	8927462	Expression	"to ++ , from ++"		8927444	1					
ANR	8927463	PostIncDecOperationExpression	to ++		8927444	0					
ANR	8927464	Identifier	to		8927444	0					
ANR	8927465	IncDec	++		8927444	1					
ANR	8927466	PostIncDecOperationExpression	from ++		8927444	1					
ANR	8927467	Identifier	from		8927444	0					
ANR	8927468	IncDec	++		8927444	1					
ANR	8927469	ReturnType	void		8927444	1					
ANR	8927470	Identifier	refcpy_to_new		8927444	2					
ANR	8927471	ParameterList	"ref * to , const ref * from , uint size , gs_dual_memory_t * idmemory"		8927444	3					
ANR	8927472	Parameter	ref * to	73:14:2188:2195	8927444	0	True				
ANR	8927473	ParameterType	ref *		8927444	0					
ANR	8927474	Identifier	to		8927444	1					
ANR	8927475	Parameter	const ref * from	73:24:2198:2213	8927444	1	True				
ANR	8927476	ParameterType	const ref *		8927444	0					
ANR	8927477	Identifier	from		8927444	1					
ANR	8927478	Parameter	uint size	73:42:2216:2224	8927444	2	True				
ANR	8927479	ParameterType	uint		8927444	0					
ANR	8927480	Identifier	size		8927444	1					
ANR	8927481	Parameter	gs_dual_memory_t * idmemory	74:14:2241:2266	8927444	3	True				
ANR	8927482	ParameterType	gs_dual_memory_t *		8927444	0					
ANR	8927483	Identifier	idmemory		8927444	1					
ANR	8927484	CFGEntryNode	ENTRY		8927444		True				
ANR	8927485	CFGExitNode	EXIT		8927444		True				
ANR	8927486	Symbol	idmemory		8927444						
ANR	8927487	Symbol	size		8927444						
ANR	8927488	Symbol	from		8927444						
ANR	8927489	Symbol	to		8927444						
ANR	8927490	Function	refset_null_new	81:0:2377:2500							
ANR	8927491	FunctionDef	"refset_null_new (ref * to , uint size , uint new_mask)"		8927490	0					
ANR	8927492	CompoundStatement		83:0:2434:2500	8927490	0					
ANR	8927493	ForStatement	for ( ; size -- ; ++ to )		8927490	0					
ANR	8927494	Condition	size --	84:11:2447:2452	8927490	0	True				
ANR	8927495	PostIncDecOperationExpression	size --		8927490	0					
ANR	8927496	Identifier	size		8927490	0					
ANR	8927497	IncDec	--		8927490	1					
ANR	8927498	UnaryExpression	++ to	84:19:2455:2458	8927490	1	True				
ANR	8927499	IncDec	++		8927490	0					
ANR	8927500	Identifier	to		8927490	1					
ANR	8927501	ExpressionStatement	"make_ta ( to , t_null , new_mask )"	85:8:2469:2498	8927490	2	True				
ANR	8927502	CallExpression	"make_ta ( to , t_null , new_mask )"		8927490	0					
ANR	8927503	Callee	make_ta		8927490	0					
ANR	8927504	Identifier	make_ta		8927490	0					
ANR	8927505	ArgumentList	to		8927490	1					
ANR	8927506	Argument	to		8927490	0					
ANR	8927507	Identifier	to		8927490	0					
ANR	8927508	Argument	t_null		8927490	1					
ANR	8927509	Identifier	t_null		8927490	0					
ANR	8927510	Argument	new_mask		8927490	2					
ANR	8927511	Identifier	new_mask		8927490	0					
ANR	8927512	ReturnType	void		8927490	1					
ANR	8927513	Identifier	refset_null_new		8927490	2					
ANR	8927514	ParameterList	"ref * to , uint size , uint new_mask"		8927490	3					
ANR	8927515	Parameter	ref * to	82:16:2398:2405	8927490	0	True				
ANR	8927516	ParameterType	ref *		8927490	0					
ANR	8927517	Identifier	to		8927490	1					
ANR	8927518	Parameter	uint size	82:26:2408:2416	8927490	1	True				
ANR	8927519	ParameterType	uint		8927490	0					
ANR	8927520	Identifier	size		8927490	1					
ANR	8927521	Parameter	uint new_mask	82:37:2419:2431	8927490	2	True				
ANR	8927522	ParameterType	uint		8927490	0					
ANR	8927523	Identifier	new_mask		8927490	1					
ANR	8927524	CFGEntryNode	ENTRY		8927490		True				
ANR	8927525	CFGExitNode	EXIT		8927490		True				
ANR	8927526	Symbol	t_null		8927490						
ANR	8927527	Symbol	size		8927490						
ANR	8927528	Symbol	to		8927490						
ANR	8927529	Symbol	new_mask		8927490						
ANR	8927530	DeclStmt									
ANR	8927531	Decl							bool	"bool ( const gs_memory_t * mem , const gs_font * pfont1 , const gs_font * pfont2 )"	fid_eq
ANR	8927532	Function	obj_eq	91:0:2653:6538							
ANR	8927533	FunctionDef	"obj_eq (const gs_memory_t * mem , const ref * pref1 , const ref * pref2)"		8927532	0					
ANR	8927534	CompoundStatement		93:0:2727:6538	8927532	0					
ANR	8927535	IdentifierDeclStatement	ref nref ;	94:4:2733:2741	8927532	0	True				
ANR	8927536	IdentifierDecl	nref		8927532	0					
ANR	8927537	IdentifierDeclType	ref		8927532	0					
ANR	8927538	Identifier	nref		8927532	1					
ANR	8927539	IfStatement	if ( r_type ( pref1 ) != r_type ( pref2 ) )		8927532	1					
ANR	8927540	Condition	r_type ( pref1 ) != r_type ( pref2 )	96:8:2752:2781	8927532	0	True				
ANR	8927541	EqualityExpression	r_type ( pref1 ) != r_type ( pref2 )		8927532	0		!=			
ANR	8927542	CallExpression	r_type ( pref1 )		8927532	0					
ANR	8927543	Callee	r_type		8927532	0					
ANR	8927544	Identifier	r_type		8927532	0					
ANR	8927545	ArgumentList	pref1		8927532	1					
ANR	8927546	Argument	pref1		8927532	0					
ANR	8927547	Identifier	pref1		8927532	0					
ANR	8927548	CallExpression	r_type ( pref2 )		8927532	1					
ANR	8927549	Callee	r_type		8927532	0					
ANR	8927550	Identifier	r_type		8927532	0					
ANR	8927551	ArgumentList	pref2		8927532	1					
ANR	8927552	Argument	pref2		8927532	0					
ANR	8927553	Identifier	pref2		8927532	0					
ANR	8927554	CompoundStatement		4:40:56:56	8927532	1					
ANR	8927555	SwitchStatement	switch ( r_type ( pref1 ) )		8927532	0					
ANR	8927556	Condition	r_type ( pref1 )	102:16:2993:3005	8927532	0	True				
ANR	8927557	CallExpression	r_type ( pref1 )		8927532	0					
ANR	8927558	Callee	r_type		8927532	0					
ANR	8927559	Identifier	r_type		8927532	0					
ANR	8927560	ArgumentList	pref1		8927532	1					
ANR	8927561	Argument	pref1		8927532	0					
ANR	8927562	Identifier	pref1		8927532	0					
ANR	8927563	CompoundStatement		10:31:280:280	8927532	1					
ANR	8927564	Label	case t_integer :	103:12:3022:3036	8927532	0	True				
ANR	8927565	Identifier	t_integer		8927532	0					
ANR	8927566	ReturnStatement	"return ( r_has_type ( pref2 , t_real ) && pref2 -> value . realval == pref1 -> value . intval ) ;"	104:16:3054:3159	8927532	1	True				
ANR	8927567	AndExpression	"r_has_type ( pref2 , t_real ) && pref2 -> value . realval == pref1 -> value . intval"		8927532	0		&&			
ANR	8927568	CallExpression	"r_has_type ( pref2 , t_real )"		8927532	0					
ANR	8927569	Callee	r_has_type		8927532	0					
ANR	8927570	Identifier	r_has_type		8927532	0					
ANR	8927571	ArgumentList	pref2		8927532	1					
ANR	8927572	Argument	pref2		8927532	0					
ANR	8927573	Identifier	pref2		8927532	0					
ANR	8927574	Argument	t_real		8927532	1					
ANR	8927575	Identifier	t_real		8927532	0					
ANR	8927576	EqualityExpression	pref2 -> value . realval == pref1 -> value . intval		8927532	1		==			
ANR	8927577	MemberAccess	pref2 -> value . realval		8927532	0					
ANR	8927578	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927579	Identifier	pref2		8927532	0					
ANR	8927580	Identifier	value		8927532	1					
ANR	8927581	Identifier	realval		8927532	1					
ANR	8927582	MemberAccess	pref1 -> value . intval		8927532	1					
ANR	8927583	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927584	Identifier	pref1		8927532	0					
ANR	8927585	Identifier	value		8927532	1					
ANR	8927586	Identifier	intval		8927532	1					
ANR	8927587	Label	case t_real :	106:12:3173:3184	8927532	2	True				
ANR	8927588	Identifier	t_real		8927532	0					
ANR	8927589	ReturnStatement	"return ( r_has_type ( pref2 , t_integer ) && pref2 -> value . intval == pref1 -> value . realval ) ;"	107:16:3202:3310	8927532	3	True				
ANR	8927590	AndExpression	"r_has_type ( pref2 , t_integer ) && pref2 -> value . intval == pref1 -> value . realval"		8927532	0		&&			
ANR	8927591	CallExpression	"r_has_type ( pref2 , t_integer )"		8927532	0					
ANR	8927592	Callee	r_has_type		8927532	0					
ANR	8927593	Identifier	r_has_type		8927532	0					
ANR	8927594	ArgumentList	pref2		8927532	1					
ANR	8927595	Argument	pref2		8927532	0					
ANR	8927596	Identifier	pref2		8927532	0					
ANR	8927597	Argument	t_integer		8927532	1					
ANR	8927598	Identifier	t_integer		8927532	0					
ANR	8927599	EqualityExpression	pref2 -> value . intval == pref1 -> value . realval		8927532	1		==			
ANR	8927600	MemberAccess	pref2 -> value . intval		8927532	0					
ANR	8927601	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927602	Identifier	pref2		8927532	0					
ANR	8927603	Identifier	value		8927532	1					
ANR	8927604	Identifier	intval		8927532	1					
ANR	8927605	MemberAccess	pref1 -> value . realval		8927532	1					
ANR	8927606	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927607	Identifier	pref1		8927532	0					
ANR	8927608	Identifier	value		8927532	1					
ANR	8927609	Identifier	realval		8927532	1					
ANR	8927610	Label	case t_name :	109:12:3324:3335	8927532	4	True				
ANR	8927611	Identifier	t_name		8927532	0					
ANR	8927612	IfStatement	"if ( ! r_has_type ( pref2 , t_string ) )"		8927532	5					
ANR	8927613	Condition	"! r_has_type ( pref2 , t_string )"	110:20:3357:3384	8927532	0	True				
ANR	8927614	UnaryOperationExpression	"! r_has_type ( pref2 , t_string )"		8927532	0					
ANR	8927615	UnaryOperator	!		8927532	0					
ANR	8927616	CallExpression	"r_has_type ( pref2 , t_string )"		8927532	1					
ANR	8927617	Callee	r_has_type		8927532	0					
ANR	8927618	Identifier	r_has_type		8927532	0					
ANR	8927619	ArgumentList	pref2		8927532	1					
ANR	8927620	Argument	pref2		8927532	0					
ANR	8927621	Identifier	pref2		8927532	0					
ANR	8927622	Argument	t_string		8927532	1					
ANR	8927623	Identifier	t_string		8927532	0					
ANR	8927624	ReturnStatement	return false ;	111:20:3407:3419	8927532	1	True				
ANR	8927625	Identifier	false		8927532	0					
ANR	8927626	ExpressionStatement	"name_string_ref ( mem , pref1 , & nref )"	112:16:3437:3471	8927532	6	True				
ANR	8927627	CallExpression	"name_string_ref ( mem , pref1 , & nref )"		8927532	0					
ANR	8927628	Callee	name_string_ref		8927532	0					
ANR	8927629	Identifier	name_string_ref		8927532	0					
ANR	8927630	ArgumentList	mem		8927532	1					
ANR	8927631	Argument	mem		8927532	0					
ANR	8927632	Identifier	mem		8927532	0					
ANR	8927633	Argument	pref1		8927532	1					
ANR	8927634	Identifier	pref1		8927532	0					
ANR	8927635	Argument	& nref		8927532	2					
ANR	8927636	UnaryOperationExpression	& nref		8927532	0					
ANR	8927637	UnaryOperator	&		8927532	0					
ANR	8927638	Identifier	nref		8927532	1					
ANR	8927639	ExpressionStatement	pref1 = & nref	113:16:3489:3502	8927532	7	True				
ANR	8927640	AssignmentExpression	pref1 = & nref		8927532	0		=			
ANR	8927641	Identifier	pref1		8927532	0					
ANR	8927642	UnaryOperationExpression	& nref		8927532	1					
ANR	8927643	UnaryOperator	&		8927532	0					
ANR	8927644	Identifier	nref		8927532	1					
ANR	8927645	BreakStatement	break ;	114:16:3520:3525	8927532	8	True				
ANR	8927646	Label	case t_string :	115:12:3539:3552	8927532	9	True				
ANR	8927647	Identifier	t_string		8927532	0					
ANR	8927648	IfStatement	"if ( ! r_has_type ( pref2 , t_name ) )"		8927532	10					
ANR	8927649	Condition	"! r_has_type ( pref2 , t_name )"	116:20:3574:3599	8927532	0	True				
ANR	8927650	UnaryOperationExpression	"! r_has_type ( pref2 , t_name )"		8927532	0					
ANR	8927651	UnaryOperator	!		8927532	0					
ANR	8927652	CallExpression	"r_has_type ( pref2 , t_name )"		8927532	1					
ANR	8927653	Callee	r_has_type		8927532	0					
ANR	8927654	Identifier	r_has_type		8927532	0					
ANR	8927655	ArgumentList	pref2		8927532	1					
ANR	8927656	Argument	pref2		8927532	0					
ANR	8927657	Identifier	pref2		8927532	0					
ANR	8927658	Argument	t_name		8927532	1					
ANR	8927659	Identifier	t_name		8927532	0					
ANR	8927660	ReturnStatement	return false ;	117:20:3622:3634	8927532	1	True				
ANR	8927661	Identifier	false		8927532	0					
ANR	8927662	ExpressionStatement	"name_string_ref ( mem , pref2 , & nref )"	118:16:3652:3686	8927532	11	True				
ANR	8927663	CallExpression	"name_string_ref ( mem , pref2 , & nref )"		8927532	0					
ANR	8927664	Callee	name_string_ref		8927532	0					
ANR	8927665	Identifier	name_string_ref		8927532	0					
ANR	8927666	ArgumentList	mem		8927532	1					
ANR	8927667	Argument	mem		8927532	0					
ANR	8927668	Identifier	mem		8927532	0					
ANR	8927669	Argument	pref2		8927532	1					
ANR	8927670	Identifier	pref2		8927532	0					
ANR	8927671	Argument	& nref		8927532	2					
ANR	8927672	UnaryOperationExpression	& nref		8927532	0					
ANR	8927673	UnaryOperator	&		8927532	0					
ANR	8927674	Identifier	nref		8927532	1					
ANR	8927675	ExpressionStatement	pref2 = & nref	119:16:3704:3717	8927532	12	True				
ANR	8927676	AssignmentExpression	pref2 = & nref		8927532	0		=			
ANR	8927677	Identifier	pref2		8927532	0					
ANR	8927678	UnaryOperationExpression	& nref		8927532	1					
ANR	8927679	UnaryOperator	&		8927532	0					
ANR	8927680	Identifier	nref		8927532	1					
ANR	8927681	BreakStatement	break ;	120:16:3735:3740	8927532	13	True				
ANR	8927682	Label	case t_mixedarray :	126:12:3968:3985	8927532	14	True				
ANR	8927683	Identifier	t_mixedarray		8927532	0					
ANR	8927684	Label	case t_shortarray :	127:12:3999:4016	8927532	15	True				
ANR	8927685	Identifier	t_shortarray		8927532	0					
ANR	8927686	ReturnStatement	return ( ( int ) r_type ( pref1 ) + ( int ) r_type ( pref2 ) == t_mixedarray + t_shortarray ) && r_size ( pref1 ) == 0 && r_size ( pref2 ) == 0 ;	132:16:4215:4382	8927532	16	True				
ANR	8927687	AndExpression	( ( int ) r_type ( pref1 ) + ( int ) r_type ( pref2 ) == t_mixedarray + t_shortarray ) && r_size ( pref1 ) == 0 && r_size ( pref2 ) == 0		8927532	0		&&			
ANR	8927688	EqualityExpression	( int ) r_type ( pref1 ) + ( int ) r_type ( pref2 ) == t_mixedarray + t_shortarray		8927532	0		==			
ANR	8927689	AdditiveExpression	( int ) r_type ( pref1 ) + ( int ) r_type ( pref2 )		8927532	0		+			
ANR	8927690	CastExpression	( int ) r_type ( pref1 )		8927532	0					
ANR	8927691	CastTarget	int		8927532	0					
ANR	8927692	CallExpression	r_type ( pref1 )		8927532	1					
ANR	8927693	Callee	r_type		8927532	0					
ANR	8927694	Identifier	r_type		8927532	0					
ANR	8927695	ArgumentList	pref1		8927532	1					
ANR	8927696	Argument	pref1		8927532	0					
ANR	8927697	Identifier	pref1		8927532	0					
ANR	8927698	CastExpression	( int ) r_type ( pref2 )		8927532	1					
ANR	8927699	CastTarget	int		8927532	0					
ANR	8927700	CallExpression	r_type ( pref2 )		8927532	1					
ANR	8927701	Callee	r_type		8927532	0					
ANR	8927702	Identifier	r_type		8927532	0					
ANR	8927703	ArgumentList	pref2		8927532	1					
ANR	8927704	Argument	pref2		8927532	0					
ANR	8927705	Identifier	pref2		8927532	0					
ANR	8927706	AdditiveExpression	t_mixedarray + t_shortarray		8927532	1		+			
ANR	8927707	Identifier	t_mixedarray		8927532	0					
ANR	8927708	Identifier	t_shortarray		8927532	1					
ANR	8927709	AndExpression	r_size ( pref1 ) == 0 && r_size ( pref2 ) == 0		8927532	1		&&			
ANR	8927710	EqualityExpression	r_size ( pref1 ) == 0		8927532	0		==			
ANR	8927711	CallExpression	r_size ( pref1 )		8927532	0					
ANR	8927712	Callee	r_size		8927532	0					
ANR	8927713	Identifier	r_size		8927532	0					
ANR	8927714	ArgumentList	pref1		8927532	1					
ANR	8927715	Argument	pref1		8927532	0					
ANR	8927716	Identifier	pref1		8927532	0					
ANR	8927717	PrimaryExpression	0		8927532	1					
ANR	8927718	EqualityExpression	r_size ( pref2 ) == 0		8927532	1		==			
ANR	8927719	CallExpression	r_size ( pref2 )		8927532	0					
ANR	8927720	Callee	r_size		8927532	0					
ANR	8927721	Identifier	r_size		8927532	0					
ANR	8927722	ArgumentList	pref2		8927532	1					
ANR	8927723	Argument	pref2		8927532	0					
ANR	8927724	Identifier	pref2		8927532	0					
ANR	8927725	PrimaryExpression	0		8927532	1					
ANR	8927726	Label	default :	135:12:4396:4403	8927532	17	True				
ANR	8927727	Identifier	default		8927532	0					
ANR	8927728	IfStatement	if ( r_btype ( pref1 ) != r_btype ( pref2 ) )		8927532	18					
ANR	8927729	Condition	r_btype ( pref1 ) != r_btype ( pref2 )	136:20:4425:4456	8927532	0	True				
ANR	8927730	EqualityExpression	r_btype ( pref1 ) != r_btype ( pref2 )		8927532	0		!=			
ANR	8927731	CallExpression	r_btype ( pref1 )		8927532	0					
ANR	8927732	Callee	r_btype		8927532	0					
ANR	8927733	Identifier	r_btype		8927532	0					
ANR	8927734	ArgumentList	pref1		8927532	1					
ANR	8927735	Argument	pref1		8927532	0					
ANR	8927736	Identifier	pref1		8927532	0					
ANR	8927737	CallExpression	r_btype ( pref2 )		8927532	1					
ANR	8927738	Callee	r_btype		8927532	0					
ANR	8927739	Identifier	r_btype		8927532	0					
ANR	8927740	ArgumentList	pref2		8927532	1					
ANR	8927741	Argument	pref2		8927532	0					
ANR	8927742	Identifier	pref2		8927532	0					
ANR	8927743	ReturnStatement	return false ;	137:20:4479:4491	8927532	1	True				
ANR	8927744	Identifier	false		8927532	0					
ANR	8927745	SwitchStatement	switch ( r_btype ( pref1 ) )		8927532	2					
ANR	8927746	Condition	r_btype ( pref1 )	144:12:4684:4697	8927532	0	True				
ANR	8927747	CallExpression	r_btype ( pref1 )		8927532	0					
ANR	8927748	Callee	r_btype		8927532	0					
ANR	8927749	Identifier	r_btype		8927532	0					
ANR	8927750	ArgumentList	pref1		8927532	1					
ANR	8927751	Argument	pref1		8927532	0					
ANR	8927752	Identifier	pref1		8927532	0					
ANR	8927753	CompoundStatement		52:28:1972:1972	8927532	1					
ANR	8927754	Label	case t_array :	145:8:4710:4722	8927532	0	True				
ANR	8927755	Identifier	t_array		8927532	0					
ANR	8927756	ReturnStatement	return ( ( pref1 -> value . refs == pref2 -> value . refs || r_size ( pref1 ) == 0 ) && r_size ( pref1 ) == r_size ( pref2 ) ) ;	146:12:4736:4882	8927532	1	True				
ANR	8927757	AndExpression	( pref1 -> value . refs == pref2 -> value . refs || r_size ( pref1 ) == 0 ) && r_size ( pref1 ) == r_size ( pref2 )		8927532	0		&&			
ANR	8927758	OrExpression	pref1 -> value . refs == pref2 -> value . refs || r_size ( pref1 ) == 0		8927532	0		||			
ANR	8927759	EqualityExpression	pref1 -> value . refs == pref2 -> value . refs		8927532	0		==			
ANR	8927760	MemberAccess	pref1 -> value . refs		8927532	0					
ANR	8927761	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927762	Identifier	pref1		8927532	0					
ANR	8927763	Identifier	value		8927532	1					
ANR	8927764	Identifier	refs		8927532	1					
ANR	8927765	MemberAccess	pref2 -> value . refs		8927532	1					
ANR	8927766	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927767	Identifier	pref2		8927532	0					
ANR	8927768	Identifier	value		8927532	1					
ANR	8927769	Identifier	refs		8927532	1					
ANR	8927770	EqualityExpression	r_size ( pref1 ) == 0		8927532	1		==			
ANR	8927771	CallExpression	r_size ( pref1 )		8927532	0					
ANR	8927772	Callee	r_size		8927532	0					
ANR	8927773	Identifier	r_size		8927532	0					
ANR	8927774	ArgumentList	pref1		8927532	1					
ANR	8927775	Argument	pref1		8927532	0					
ANR	8927776	Identifier	pref1		8927532	0					
ANR	8927777	PrimaryExpression	0		8927532	1					
ANR	8927778	EqualityExpression	r_size ( pref1 ) == r_size ( pref2 )		8927532	1		==			
ANR	8927779	CallExpression	r_size ( pref1 )		8927532	0					
ANR	8927780	Callee	r_size		8927532	0					
ANR	8927781	Identifier	r_size		8927532	0					
ANR	8927782	ArgumentList	pref1		8927532	1					
ANR	8927783	Argument	pref1		8927532	0					
ANR	8927784	Identifier	pref1		8927532	0					
ANR	8927785	CallExpression	r_size ( pref2 )		8927532	1					
ANR	8927786	Callee	r_size		8927532	0					
ANR	8927787	Identifier	r_size		8927532	0					
ANR	8927788	ArgumentList	pref2		8927532	1					
ANR	8927789	Argument	pref2		8927532	0					
ANR	8927790	Identifier	pref2		8927532	0					
ANR	8927791	Label	case t_mixedarray :	149:8:4892:4909	8927532	2	True				
ANR	8927792	Identifier	t_mixedarray		8927532	0					
ANR	8927793	Label	case t_shortarray :	150:8:4919:4936	8927532	3	True				
ANR	8927794	Identifier	t_shortarray		8927532	0					
ANR	8927795	ReturnStatement	return ( ( pref1 -> value . packed == pref2 -> value . packed || r_size ( pref1 ) == 0 ) && r_size ( pref1 ) == r_size ( pref2 ) ) ;	151:12:4950:5100	8927532	4	True				
ANR	8927796	AndExpression	( pref1 -> value . packed == pref2 -> value . packed || r_size ( pref1 ) == 0 ) && r_size ( pref1 ) == r_size ( pref2 )		8927532	0		&&			
ANR	8927797	OrExpression	pref1 -> value . packed == pref2 -> value . packed || r_size ( pref1 ) == 0		8927532	0		||			
ANR	8927798	EqualityExpression	pref1 -> value . packed == pref2 -> value . packed		8927532	0		==			
ANR	8927799	MemberAccess	pref1 -> value . packed		8927532	0					
ANR	8927800	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927801	Identifier	pref1		8927532	0					
ANR	8927802	Identifier	value		8927532	1					
ANR	8927803	Identifier	packed		8927532	1					
ANR	8927804	MemberAccess	pref2 -> value . packed		8927532	1					
ANR	8927805	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927806	Identifier	pref2		8927532	0					
ANR	8927807	Identifier	value		8927532	1					
ANR	8927808	Identifier	packed		8927532	1					
ANR	8927809	EqualityExpression	r_size ( pref1 ) == 0		8927532	1		==			
ANR	8927810	CallExpression	r_size ( pref1 )		8927532	0					
ANR	8927811	Callee	r_size		8927532	0					
ANR	8927812	Identifier	r_size		8927532	0					
ANR	8927813	ArgumentList	pref1		8927532	1					
ANR	8927814	Argument	pref1		8927532	0					
ANR	8927815	Identifier	pref1		8927532	0					
ANR	8927816	PrimaryExpression	0		8927532	1					
ANR	8927817	EqualityExpression	r_size ( pref1 ) == r_size ( pref2 )		8927532	1		==			
ANR	8927818	CallExpression	r_size ( pref1 )		8927532	0					
ANR	8927819	Callee	r_size		8927532	0					
ANR	8927820	Identifier	r_size		8927532	0					
ANR	8927821	ArgumentList	pref1		8927532	1					
ANR	8927822	Argument	pref1		8927532	0					
ANR	8927823	Identifier	pref1		8927532	0					
ANR	8927824	CallExpression	r_size ( pref2 )		8927532	1					
ANR	8927825	Callee	r_size		8927532	0					
ANR	8927826	Identifier	r_size		8927532	0					
ANR	8927827	ArgumentList	pref2		8927532	1					
ANR	8927828	Argument	pref2		8927532	0					
ANR	8927829	Identifier	pref2		8927532	0					
ANR	8927830	Label	case t_boolean :	154:8:5110:5124	8927532	5	True				
ANR	8927831	Identifier	t_boolean		8927532	0					
ANR	8927832	ReturnStatement	return ( pref1 -> value . boolval == pref2 -> value . boolval ) ;	155:12:5138:5191	8927532	6	True				
ANR	8927833	EqualityExpression	pref1 -> value . boolval == pref2 -> value . boolval		8927532	0		==			
ANR	8927834	MemberAccess	pref1 -> value . boolval		8927532	0					
ANR	8927835	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927836	Identifier	pref1		8927532	0					
ANR	8927837	Identifier	value		8927532	1					
ANR	8927838	Identifier	boolval		8927532	1					
ANR	8927839	MemberAccess	pref2 -> value . boolval		8927532	1					
ANR	8927840	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927841	Identifier	pref2		8927532	0					
ANR	8927842	Identifier	value		8927532	1					
ANR	8927843	Identifier	boolval		8927532	1					
ANR	8927844	Label	case t_dictionary :	156:8:5201:5218	8927532	7	True				
ANR	8927845	Identifier	t_dictionary		8927532	0					
ANR	8927846	ReturnStatement	return ( pref1 -> value . pdict == pref2 -> value . pdict ) ;	157:12:5232:5281	8927532	8	True				
ANR	8927847	EqualityExpression	pref1 -> value . pdict == pref2 -> value . pdict		8927532	0		==			
ANR	8927848	MemberAccess	pref1 -> value . pdict		8927532	0					
ANR	8927849	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927850	Identifier	pref1		8927532	0					
ANR	8927851	Identifier	value		8927532	1					
ANR	8927852	Identifier	pdict		8927532	1					
ANR	8927853	MemberAccess	pref2 -> value . pdict		8927532	1					
ANR	8927854	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927855	Identifier	pref2		8927532	0					
ANR	8927856	Identifier	value		8927532	1					
ANR	8927857	Identifier	pdict		8927532	1					
ANR	8927858	Label	case t_file :	158:8:5291:5302	8927532	9	True				
ANR	8927859	Identifier	t_file		8927532	0					
ANR	8927860	ReturnStatement	return ( pref1 -> value . pfile == pref2 -> value . pfile && r_size ( pref1 ) == r_size ( pref2 ) ) ;	159:12:5316:5419	8927532	10	True				
ANR	8927861	AndExpression	pref1 -> value . pfile == pref2 -> value . pfile && r_size ( pref1 ) == r_size ( pref2 )		8927532	0		&&			
ANR	8927862	EqualityExpression	pref1 -> value . pfile == pref2 -> value . pfile		8927532	0		==			
ANR	8927863	MemberAccess	pref1 -> value . pfile		8927532	0					
ANR	8927864	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927865	Identifier	pref1		8927532	0					
ANR	8927866	Identifier	value		8927532	1					
ANR	8927867	Identifier	pfile		8927532	1					
ANR	8927868	MemberAccess	pref2 -> value . pfile		8927532	1					
ANR	8927869	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927870	Identifier	pref2		8927532	0					
ANR	8927871	Identifier	value		8927532	1					
ANR	8927872	Identifier	pfile		8927532	1					
ANR	8927873	EqualityExpression	r_size ( pref1 ) == r_size ( pref2 )		8927532	1		==			
ANR	8927874	CallExpression	r_size ( pref1 )		8927532	0					
ANR	8927875	Callee	r_size		8927532	0					
ANR	8927876	Identifier	r_size		8927532	0					
ANR	8927877	ArgumentList	pref1		8927532	1					
ANR	8927878	Argument	pref1		8927532	0					
ANR	8927879	Identifier	pref1		8927532	0					
ANR	8927880	CallExpression	r_size ( pref2 )		8927532	1					
ANR	8927881	Callee	r_size		8927532	0					
ANR	8927882	Identifier	r_size		8927532	0					
ANR	8927883	ArgumentList	pref2		8927532	1					
ANR	8927884	Argument	pref2		8927532	0					
ANR	8927885	Identifier	pref2		8927532	0					
ANR	8927886	Label	case t_integer :	161:8:5429:5443	8927532	11	True				
ANR	8927887	Identifier	t_integer		8927532	0					
ANR	8927888	ReturnStatement	return ( pref1 -> value . intval == pref2 -> value . intval ) ;	162:12:5457:5508	8927532	12	True				
ANR	8927889	EqualityExpression	pref1 -> value . intval == pref2 -> value . intval		8927532	0		==			
ANR	8927890	MemberAccess	pref1 -> value . intval		8927532	0					
ANR	8927891	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927892	Identifier	pref1		8927532	0					
ANR	8927893	Identifier	value		8927532	1					
ANR	8927894	Identifier	intval		8927532	1					
ANR	8927895	MemberAccess	pref2 -> value . intval		8927532	1					
ANR	8927896	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927897	Identifier	pref2		8927532	0					
ANR	8927898	Identifier	value		8927532	1					
ANR	8927899	Identifier	intval		8927532	1					
ANR	8927900	Label	case t_mark :	163:8:5518:5529	8927532	13	True				
ANR	8927901	Identifier	t_mark		8927532	0					
ANR	8927902	Label	case t_null :	164:8:5539:5550	8927532	14	True				
ANR	8927903	Identifier	t_null		8927532	0					
ANR	8927904	ReturnStatement	return true ;	165:12:5564:5575	8927532	15	True				
ANR	8927905	Identifier	true		8927532	0					
ANR	8927906	Label	case t_name :	166:8:5585:5596	8927532	16	True				
ANR	8927907	Identifier	t_name		8927532	0					
ANR	8927908	ReturnStatement	return ( pref1 -> value . pname == pref2 -> value . pname ) ;	167:12:5610:5659	8927532	17	True				
ANR	8927909	EqualityExpression	pref1 -> value . pname == pref2 -> value . pname		8927532	0		==			
ANR	8927910	MemberAccess	pref1 -> value . pname		8927532	0					
ANR	8927911	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927912	Identifier	pref1		8927532	0					
ANR	8927913	Identifier	value		8927532	1					
ANR	8927914	Identifier	pname		8927532	1					
ANR	8927915	MemberAccess	pref2 -> value . pname		8927532	1					
ANR	8927916	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927917	Identifier	pref2		8927532	0					
ANR	8927918	Identifier	value		8927532	1					
ANR	8927919	Identifier	pname		8927532	1					
ANR	8927920	Label	case t_oparray :	168:8:5669:5683	8927532	18	True				
ANR	8927921	Identifier	t_oparray		8927532	0					
ANR	8927922	Label	case t_operator :	169:8:5693:5708	8927532	19	True				
ANR	8927923	Identifier	t_operator		8927532	0					
ANR	8927924	ReturnStatement	return ( op_index ( pref1 ) == op_index ( pref2 ) ) ;	170:12:5722:5765	8927532	20	True				
ANR	8927925	EqualityExpression	op_index ( pref1 ) == op_index ( pref2 )		8927532	0		==			
ANR	8927926	CallExpression	op_index ( pref1 )		8927532	0					
ANR	8927927	Callee	op_index		8927532	0					
ANR	8927928	Identifier	op_index		8927532	0					
ANR	8927929	ArgumentList	pref1		8927532	1					
ANR	8927930	Argument	pref1		8927532	0					
ANR	8927931	Identifier	pref1		8927532	0					
ANR	8927932	CallExpression	op_index ( pref2 )		8927532	1					
ANR	8927933	Callee	op_index		8927532	0					
ANR	8927934	Identifier	op_index		8927532	0					
ANR	8927935	ArgumentList	pref2		8927532	1					
ANR	8927936	Argument	pref2		8927532	0					
ANR	8927937	Identifier	pref2		8927532	0					
ANR	8927938	Label	case t_real :	171:8:5775:5786	8927532	21	True				
ANR	8927939	Identifier	t_real		8927532	0					
ANR	8927940	ReturnStatement	return ( pref1 -> value . realval == pref2 -> value . realval ) ;	172:12:5800:5853	8927532	22	True				
ANR	8927941	EqualityExpression	pref1 -> value . realval == pref2 -> value . realval		8927532	0		==			
ANR	8927942	MemberAccess	pref1 -> value . realval		8927532	0					
ANR	8927943	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927944	Identifier	pref1		8927532	0					
ANR	8927945	Identifier	value		8927532	1					
ANR	8927946	Identifier	realval		8927532	1					
ANR	8927947	MemberAccess	pref2 -> value . realval		8927532	1					
ANR	8927948	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927949	Identifier	pref2		8927532	0					
ANR	8927950	Identifier	value		8927532	1					
ANR	8927951	Identifier	realval		8927532	1					
ANR	8927952	Label	case t_save :	173:8:5863:5874	8927532	23	True				
ANR	8927953	Identifier	t_save		8927532	0					
ANR	8927954	ReturnStatement	return ( pref2 -> value . saveid == pref1 -> value . saveid ) ;	174:12:5888:5939	8927532	24	True				
ANR	8927955	EqualityExpression	pref2 -> value . saveid == pref1 -> value . saveid		8927532	0		==			
ANR	8927956	MemberAccess	pref2 -> value . saveid		8927532	0					
ANR	8927957	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927958	Identifier	pref2		8927532	0					
ANR	8927959	Identifier	value		8927532	1					
ANR	8927960	Identifier	saveid		8927532	1					
ANR	8927961	MemberAccess	pref1 -> value . saveid		8927532	1					
ANR	8927962	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927963	Identifier	pref1		8927532	0					
ANR	8927964	Identifier	value		8927532	1					
ANR	8927965	Identifier	saveid		8927532	1					
ANR	8927966	Label	case t_string :	175:8:5949:5962	8927532	25	True				
ANR	8927967	Identifier	t_string		8927532	0					
ANR	8927968	ReturnStatement	"return ( ! bytes_compare ( pref1 -> value . bytes , r_size ( pref1 ) , pref2 -> value . bytes , r_size ( pref2 ) ) ) ;"	176:12:5976:6104	8927532	26	True				
ANR	8927969	UnaryOperationExpression	"! bytes_compare ( pref1 -> value . bytes , r_size ( pref1 ) , pref2 -> value . bytes , r_size ( pref2 ) )"		8927532	0					
ANR	8927970	UnaryOperator	!		8927532	0					
ANR	8927971	CallExpression	"bytes_compare ( pref1 -> value . bytes , r_size ( pref1 ) , pref2 -> value . bytes , r_size ( pref2 ) )"		8927532	1					
ANR	8927972	Callee	bytes_compare		8927532	0					
ANR	8927973	Identifier	bytes_compare		8927532	0					
ANR	8927974	ArgumentList	pref1 -> value . bytes		8927532	1					
ANR	8927975	Argument	pref1 -> value . bytes		8927532	0					
ANR	8927976	MemberAccess	pref1 -> value . bytes		8927532	0					
ANR	8927977	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8927978	Identifier	pref1		8927532	0					
ANR	8927979	Identifier	value		8927532	1					
ANR	8927980	Identifier	bytes		8927532	1					
ANR	8927981	Argument	r_size ( pref1 )		8927532	1					
ANR	8927982	CallExpression	r_size ( pref1 )		8927532	0					
ANR	8927983	Callee	r_size		8927532	0					
ANR	8927984	Identifier	r_size		8927532	0					
ANR	8927985	ArgumentList	pref1		8927532	1					
ANR	8927986	Argument	pref1		8927532	0					
ANR	8927987	Identifier	pref1		8927532	0					
ANR	8927988	Argument	pref2 -> value . bytes		8927532	2					
ANR	8927989	MemberAccess	pref2 -> value . bytes		8927532	0					
ANR	8927990	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8927991	Identifier	pref2		8927532	0					
ANR	8927992	Identifier	value		8927532	1					
ANR	8927993	Identifier	bytes		8927532	1					
ANR	8927994	Argument	r_size ( pref2 )		8927532	3					
ANR	8927995	CallExpression	r_size ( pref2 )		8927532	0					
ANR	8927996	Callee	r_size		8927532	0					
ANR	8927997	Identifier	r_size		8927532	0					
ANR	8927998	ArgumentList	pref2		8927532	1					
ANR	8927999	Argument	pref2		8927532	0					
ANR	8928000	Identifier	pref2		8927532	0					
ANR	8928001	Label	case t_device :	178:8:6114:6127	8927532	27	True				
ANR	8928002	Identifier	t_device		8927532	0					
ANR	8928003	ReturnStatement	return ( pref1 -> value . pdevice == pref2 -> value . pdevice ) ;	179:12:6141:6194	8927532	28	True				
ANR	8928004	EqualityExpression	pref1 -> value . pdevice == pref2 -> value . pdevice		8927532	0		==			
ANR	8928005	MemberAccess	pref1 -> value . pdevice		8927532	0					
ANR	8928006	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8928007	Identifier	pref1		8927532	0					
ANR	8928008	Identifier	value		8927532	1					
ANR	8928009	Identifier	pdevice		8927532	1					
ANR	8928010	MemberAccess	pref2 -> value . pdevice		8927532	1					
ANR	8928011	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8928012	Identifier	pref2		8927532	0					
ANR	8928013	Identifier	value		8927532	1					
ANR	8928014	Identifier	pdevice		8927532	1					
ANR	8928015	Label	case t_struct :	180:8:6204:6217	8927532	29	True				
ANR	8928016	Identifier	t_struct		8927532	0					
ANR	8928017	Label	case t_astruct :	181:8:6227:6241	8927532	30	True				
ANR	8928018	Identifier	t_astruct		8927532	0					
ANR	8928019	ReturnStatement	return ( pref1 -> value . pstruct == pref2 -> value . pstruct ) ;	182:12:6255:6308	8927532	31	True				
ANR	8928020	EqualityExpression	pref1 -> value . pstruct == pref2 -> value . pstruct		8927532	0		==			
ANR	8928021	MemberAccess	pref1 -> value . pstruct		8927532	0					
ANR	8928022	PtrMemberAccess	pref1 -> value		8927532	0					
ANR	8928023	Identifier	pref1		8927532	0					
ANR	8928024	Identifier	value		8927532	1					
ANR	8928025	Identifier	pstruct		8927532	1					
ANR	8928026	MemberAccess	pref2 -> value . pstruct		8927532	1					
ANR	8928027	PtrMemberAccess	pref2 -> value		8927532	0					
ANR	8928028	Identifier	pref2		8927532	0					
ANR	8928029	Identifier	value		8927532	1					
ANR	8928030	Identifier	pstruct		8927532	1					
ANR	8928031	Label	case t_fontID :	183:8:6318:6331	8927532	32	True				
ANR	8928032	Identifier	t_fontID		8927532	0					
ANR	8928033	ReturnStatement	"return fid_eq ( mem , r_ptr ( pref1 , gs_font ) , r_ptr ( pref2 , gs_font ) ) ;"	185:12:6423:6487	8927532	33	True				
ANR	8928034	CallExpression	"fid_eq ( mem , r_ptr ( pref1 , gs_font ) , r_ptr ( pref2 , gs_font ) )"		8927532	0					
ANR	8928035	Callee	fid_eq		8927532	0					
ANR	8928036	Identifier	fid_eq		8927532	0					
ANR	8928037	ArgumentList	mem		8927532	1					
ANR	8928038	Argument	mem		8927532	0					
ANR	8928039	Identifier	mem		8927532	0					
ANR	8928040	Argument	"r_ptr ( pref1 , gs_font )"		8927532	1					
ANR	8928041	CallExpression	"r_ptr ( pref1 , gs_font )"		8927532	0					
ANR	8928042	Callee	r_ptr		8927532	0					
ANR	8928043	Identifier	r_ptr		8927532	0					
ANR	8928044	ArgumentList	pref1		8927532	1					
ANR	8928045	Argument	pref1		8927532	0					
ANR	8928046	Identifier	pref1		8927532	0					
ANR	8928047	Argument	gs_font		8927532	1					
ANR	8928048	Identifier	gs_font		8927532	0					
ANR	8928049	Argument	"r_ptr ( pref2 , gs_font )"		8927532	2					
ANR	8928050	CallExpression	"r_ptr ( pref2 , gs_font )"		8927532	0					
ANR	8928051	Callee	r_ptr		8927532	0					
ANR	8928052	Identifier	r_ptr		8927532	0					
ANR	8928053	ArgumentList	pref2		8927532	1					
ANR	8928054	Argument	pref2		8927532	0					
ANR	8928055	Identifier	pref2		8927532	0					
ANR	8928056	Argument	gs_font		8927532	1					
ANR	8928057	Identifier	gs_font		8927532	0					
ANR	8928058	ReturnStatement	return false ;	187:4:6499:6511	8927532	3	True				
ANR	8928059	Identifier	false		8927532	0					
ANR	8928060	ReturnType	bool		8927532	1					
ANR	8928061	Identifier	obj_eq		8927532	2					
ANR	8928062	ParameterList	"const gs_memory_t * mem , const ref * pref1 , const ref * pref2"		8927532	3					
ANR	8928063	Parameter	const gs_memory_t * mem	92:7:2665:2686	8927532	0	True				
ANR	8928064	ParameterType	const gs_memory_t *		8927532	0					
ANR	8928065	Identifier	mem		8927532	1					
ANR	8928066	Parameter	const ref * pref1	92:31:2689:2705	8927532	1	True				
ANR	8928067	ParameterType	const ref *		8927532	0					
ANR	8928068	Identifier	pref1		8927532	1					
ANR	8928069	Parameter	const ref * pref2	92:50:2708:2724	8927532	2	True				
ANR	8928070	ParameterType	const ref *		8927532	0					
ANR	8928071	Identifier	pref2		8927532	1					
ANR	8928072	CFGEntryNode	ENTRY		8927532		True				
ANR	8928073	CFGExitNode	EXIT		8927532		True				
ANR	8928074	Symbol	pref1 -> value . boolval		8927532						
ANR	8928075	Symbol	pref1 -> value . saveid		8927532						
ANR	8928076	Symbol	op_index		8927532						
ANR	8928077	Symbol	pref2 -> value . realval		8927532						
ANR	8928078	Symbol	gs_font		8927532						
ANR	8928079	Symbol	pref1 -> value . pdevice		8927532						
ANR	8928080	Symbol	pref1 -> value . bytes		8927532						
ANR	8928081	Symbol	r_has_type		8927532						
ANR	8928082	Symbol	t_name		8927532						
ANR	8928083	Symbol	pref2 -> value . refs		8927532						
ANR	8928084	Symbol	r_type		8927532						
ANR	8928085	Symbol	pref2 -> value . packed		8927532						
ANR	8928086	Symbol	pref2 -> value . pdict		8927532						
ANR	8928087	Symbol	pref2 -> value . saveid		8927532						
ANR	8928088	Symbol	t_mixedarray		8927532						
ANR	8928089	Symbol	fid_eq		8927532						
ANR	8928090	Symbol	pref2		8927532						
ANR	8928091	Symbol	pref1 -> value . pfile		8927532						
ANR	8928092	Symbol	pref1		8927532						
ANR	8928093	Symbol	r_btype		8927532						
ANR	8928094	Symbol	t_integer		8927532						
ANR	8928095	Symbol	pref2 -> value . pstruct		8927532						
ANR	8928096	Symbol	pref1 -> value . pstruct		8927532						
ANR	8928097	Symbol	* pref1		8927532						
ANR	8928098	Symbol	true		8927532						
ANR	8928099	Symbol	* pref2		8927532						
ANR	8928100	Symbol	bytes_compare		8927532						
ANR	8928101	Symbol	pref2 -> value . bytes		8927532						
ANR	8928102	Symbol	pref1 -> value . refs		8927532						
ANR	8928103	Symbol	t_shortarray		8927532						
ANR	8928104	Symbol	pref2 -> value . boolval		8927532						
ANR	8928105	Symbol	pref2 -> value		8927532						
ANR	8928106	Symbol	pref1 -> value . realval		8927532						
ANR	8928107	Symbol	pref2 -> value . pdevice		8927532						
ANR	8928108	Symbol	& nref		8927532						
ANR	8928109	Symbol	r_ptr		8927532						
ANR	8928110	Symbol	mem		8927532						
ANR	8928111	Symbol	nref		8927532						
ANR	8928112	Symbol	r_size		8927532						
ANR	8928113	Symbol	pref1 -> value . packed		8927532						
ANR	8928114	Symbol	pref1 -> value . pname		8927532						
ANR	8928115	Symbol	pref1 -> value		8927532						
ANR	8928116	Symbol	pref1 -> value . intval		8927532						
ANR	8928117	Symbol	false		8927532						
ANR	8928118	Symbol	pref2 -> value . pname		8927532						
ANR	8928119	Symbol	t_real		8927532						
ANR	8928120	Symbol	t_string		8927532						
ANR	8928121	Symbol	pref2 -> value . intval		8927532						
ANR	8928122	Symbol	pref1 -> value . pdict		8927532						
ANR	8928123	Symbol	pref2 -> value . pfile		8927532						
ANR	8928124	Function	fid_eq	200:0:7056:8628							
ANR	8928125	FunctionDef	"fid_eq (const gs_memory_t * mem , const gs_font * pfont1 , const gs_font * pfont2)"		8928124	0					
ANR	8928126	CompoundStatement		202:0:7145:8628	8928124	0					
ANR	8928127	WhileStatement	while ( pfont1 -> base != pfont1 )		8928124	0					
ANR	8928128	Condition	pfont1 -> base != pfont1	203:11:7158:7179	8928124	0	True				
ANR	8928129	EqualityExpression	pfont1 -> base != pfont1		8928124	0		!=			
ANR	8928130	PtrMemberAccess	pfont1 -> base		8928124	0					
ANR	8928131	Identifier	pfont1		8928124	0					
ANR	8928132	Identifier	base		8928124	1					
ANR	8928133	Identifier	pfont1		8928124	1					
ANR	8928134	ExpressionStatement	pfont1 = pfont1 -> base	204:8:7190:7211	8928124	1	True				
ANR	8928135	AssignmentExpression	pfont1 = pfont1 -> base		8928124	0		=			
ANR	8928136	Identifier	pfont1		8928124	0					
ANR	8928137	PtrMemberAccess	pfont1 -> base		8928124	1					
ANR	8928138	Identifier	pfont1		8928124	0					
ANR	8928139	Identifier	base		8928124	1					
ANR	8928140	WhileStatement	while ( pfont2 -> base != pfont2 )		8928124	1					
ANR	8928141	Condition	pfont2 -> base != pfont2	205:11:7224:7245	8928124	0	True				
ANR	8928142	EqualityExpression	pfont2 -> base != pfont2		8928124	0		!=			
ANR	8928143	PtrMemberAccess	pfont2 -> base		8928124	0					
ANR	8928144	Identifier	pfont2		8928124	0					
ANR	8928145	Identifier	base		8928124	1					
ANR	8928146	Identifier	pfont2		8928124	1					
ANR	8928147	ExpressionStatement	pfont2 = pfont2 -> base	206:8:7256:7277	8928124	1	True				
ANR	8928148	AssignmentExpression	pfont2 = pfont2 -> base		8928124	0		=			
ANR	8928149	Identifier	pfont2		8928124	0					
ANR	8928150	PtrMemberAccess	pfont2 -> base		8928124	1					
ANR	8928151	Identifier	pfont2		8928124	0					
ANR	8928152	Identifier	base		8928124	1					
ANR	8928153	IfStatement	if ( pfont1 == pfont2 )		8928124	2					
ANR	8928154	Condition	pfont1 == pfont2	207:8:7287:7302	8928124	0	True				
ANR	8928155	EqualityExpression	pfont1 == pfont2		8928124	0		==			
ANR	8928156	Identifier	pfont1		8928124	0					
ANR	8928157	Identifier	pfont2		8928124	1					
ANR	8928158	ReturnStatement	return true ;	208:8:7313:7324	8928124	1	True				
ANR	8928159	Identifier	true		8928124	0					
ANR	8928160	SwitchStatement	switch ( pfont1 -> FontType )		8928124	3					
ANR	8928161	Condition	pfont1 -> FontType	209:12:7338:7353	8928124	0	True				
ANR	8928162	PtrMemberAccess	pfont1 -> FontType		8928124	0					
ANR	8928163	Identifier	pfont1		8928124	0					
ANR	8928164	Identifier	FontType		8928124	1					
ANR	8928165	CompoundStatement		8:30:210:210	8928124	1					
ANR	8928166	Label	case 1 :	210:4:7362:7368	8928124	0	True				
ANR	8928167	Label	case 3 :	210:12:7370:7376	8928124	1	True				
ANR	8928168	IfStatement	if ( pfont1 -> FontType == pfont2 -> FontType )		8928124	2					
ANR	8928169	Condition	pfont1 -> FontType == pfont2 -> FontType	211:12:7390:7425	8928124	0	True				
ANR	8928170	EqualityExpression	pfont1 -> FontType == pfont2 -> FontType		8928124	0		==			
ANR	8928171	PtrMemberAccess	pfont1 -> FontType		8928124	0					
ANR	8928172	Identifier	pfont1		8928124	0					
ANR	8928173	Identifier	FontType		8928124	1					
ANR	8928174	PtrMemberAccess	pfont2 -> FontType		8928124	1					
ANR	8928175	Identifier	pfont2		8928124	0					
ANR	8928176	Identifier	FontType		8928124	1					
ANR	8928177	BreakStatement	break ;	212:12:7440:7445	8928124	1	True				
ANR	8928178	Label	default :	213:4:7451:7458	8928124	3	True				
ANR	8928179	Identifier	default		8928124	0					
ANR	8928180	ReturnStatement	return false ;	214:8:7468:7480	8928124	4	True				
ANR	8928181	Identifier	false		8928124	0					
ANR	8928182	CompoundStatement		18:8:488:546	8928124	4					
ANR	8928183	IdentifierDeclStatement	const gs_uid * puid1 = & ( ( const gs_font_base * ) pfont1 ) -> UID ;	218:8:7566:7624	8928124	0	True				
ANR	8928184	IdentifierDecl	* puid1 = & ( ( const gs_font_base * ) pfont1 ) -> UID		8928124	0					
ANR	8928185	IdentifierDeclType	const gs_uid *		8928124	0					
ANR	8928186	Identifier	puid1		8928124	1					
ANR	8928187	AssignmentExpression	* puid1 = & ( ( const gs_font_base * ) pfont1 ) -> UID		8928124	2		=			
ANR	8928188	Identifier	puid1		8928124	0					
ANR	8928189	UnaryOperationExpression	& ( ( const gs_font_base * ) pfont1 ) -> UID		8928124	1					
ANR	8928190	UnaryOperator	&		8928124	0					
ANR	8928191	PtrMemberAccess	( ( const gs_font_base * ) pfont1 ) -> UID		8928124	1					
ANR	8928192	CastExpression	( const gs_font_base * ) pfont1		8928124	0					
ANR	8928193	CastTarget	const gs_font_base *		8928124	0					
ANR	8928194	Identifier	pfont1		8928124	1					
ANR	8928195	Identifier	UID		8928124	1					
ANR	8928196	IdentifierDeclStatement	const gs_uid * puid2 = & ( ( const gs_font_base * ) pfont2 ) -> UID ;	219:8:7634:7692	8928124	1	True				
ANR	8928197	IdentifierDecl	* puid2 = & ( ( const gs_font_base * ) pfont2 ) -> UID		8928124	0					
ANR	8928198	IdentifierDeclType	const gs_uid *		8928124	0					
ANR	8928199	Identifier	puid2		8928124	1					
ANR	8928200	AssignmentExpression	* puid2 = & ( ( const gs_font_base * ) pfont2 ) -> UID		8928124	2		=			
ANR	8928201	Identifier	puid2		8928124	0					
ANR	8928202	UnaryOperationExpression	& ( ( const gs_font_base * ) pfont2 ) -> UID		8928124	1					
ANR	8928203	UnaryOperator	&		8928124	0					
ANR	8928204	PtrMemberAccess	( ( const gs_font_base * ) pfont2 ) -> UID		8928124	1					
ANR	8928205	CastExpression	( const gs_font_base * ) pfont2		8928124	0					
ANR	8928206	CastTarget	const gs_font_base *		8928124	0					
ANR	8928207	Identifier	pfont2		8928124	1					
ANR	8928208	Identifier	UID		8928124	1					
ANR	8928209	IfStatement	"if ( uid_is_UniqueID ( puid1 ) || uid_is_UniqueID ( puid2 ) || ( ( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 ) ) )"		8928124	2					
ANR	8928210	Condition	"uid_is_UniqueID ( puid1 ) || uid_is_UniqueID ( puid2 ) || ( ( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 ) )"	220:8:7702:7842	8928124	0	True				
ANR	8928211	OrExpression	"uid_is_UniqueID ( puid1 ) || uid_is_UniqueID ( puid2 ) || ( ( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 ) )"		8928124	0		||			
ANR	8928212	CallExpression	uid_is_UniqueID ( puid1 )		8928124	0					
ANR	8928213	Callee	uid_is_UniqueID		8928124	0					
ANR	8928214	Identifier	uid_is_UniqueID		8928124	0					
ANR	8928215	ArgumentList	puid1		8928124	1					
ANR	8928216	Argument	puid1		8928124	0					
ANR	8928217	Identifier	puid1		8928124	0					
ANR	8928218	OrExpression	"uid_is_UniqueID ( puid2 ) || ( ( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 ) )"		8928124	1		||			
ANR	8928219	CallExpression	uid_is_UniqueID ( puid2 )		8928124	0					
ANR	8928220	Callee	uid_is_UniqueID		8928124	0					
ANR	8928221	Identifier	uid_is_UniqueID		8928124	0					
ANR	8928222	ArgumentList	puid2		8928124	1					
ANR	8928223	Argument	puid2		8928124	0					
ANR	8928224	Identifier	puid2		8928124	0					
ANR	8928225	AndExpression	"( uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 ) ) && ! uid_equal ( puid1 , puid2 )"		8928124	1		&&			
ANR	8928226	OrExpression	uid_is_XUID ( puid1 ) || uid_is_XUID ( puid2 )		8928124	0		||			
ANR	8928227	CallExpression	uid_is_XUID ( puid1 )		8928124	0					
ANR	8928228	Callee	uid_is_XUID		8928124	0					
ANR	8928229	Identifier	uid_is_XUID		8928124	0					
ANR	8928230	ArgumentList	puid1		8928124	1					
ANR	8928231	Argument	puid1		8928124	0					
ANR	8928232	Identifier	puid1		8928124	0					
ANR	8928233	CallExpression	uid_is_XUID ( puid2 )		8928124	1					
ANR	8928234	Callee	uid_is_XUID		8928124	0					
ANR	8928235	Identifier	uid_is_XUID		8928124	0					
ANR	8928236	ArgumentList	puid2		8928124	1					
ANR	8928237	Argument	puid2		8928124	0					
ANR	8928238	Identifier	puid2		8928124	0					
ANR	8928239	UnaryOperationExpression	"! uid_equal ( puid1 , puid2 )"		8928124	1					
ANR	8928240	UnaryOperator	!		8928124	0					
ANR	8928241	CallExpression	"uid_equal ( puid1 , puid2 )"		8928124	1					
ANR	8928242	Callee	uid_equal		8928124	0					
ANR	8928243	Identifier	uid_equal		8928124	0					
ANR	8928244	ArgumentList	puid1		8928124	1					
ANR	8928245	Argument	puid1		8928124	0					
ANR	8928246	Identifier	puid1		8928124	0					
ANR	8928247	Argument	puid2		8928124	1					
ANR	8928248	Identifier	puid2		8928124	0					
ANR	8928249	ReturnStatement	return false ;	223:8:7853:7865	8928124	1	True				
ANR	8928250	Identifier	false		8928124	0					
ANR	8928251	CompoundStatement		26:8:813:875	8928124	5					
ANR	8928252	IdentifierDeclStatement	const font_data * pfd1 = ( const font_data * ) pfont1 -> client_data ;	226:8:7887:7949	8928124	0	True				
ANR	8928253	IdentifierDecl	* pfd1 = ( const font_data * ) pfont1 -> client_data		8928124	0					
ANR	8928254	IdentifierDeclType	const font_data *		8928124	0					
ANR	8928255	Identifier	pfd1		8928124	1					
ANR	8928256	AssignmentExpression	* pfd1 = ( const font_data * ) pfont1 -> client_data		8928124	2		=			
ANR	8928257	Identifier	pfd1		8928124	0					
ANR	8928258	CastExpression	( const font_data * ) pfont1 -> client_data		8928124	1					
ANR	8928259	CastTarget	const font_data *		8928124	0					
ANR	8928260	PtrMemberAccess	pfont1 -> client_data		8928124	1					
ANR	8928261	Identifier	pfont1		8928124	0					
ANR	8928262	Identifier	client_data		8928124	1					
ANR	8928263	IdentifierDeclStatement	const font_data * pfd2 = ( const font_data * ) pfont2 -> client_data ;	227:8:7959:8021	8928124	1	True				
ANR	8928264	IdentifierDecl	* pfd2 = ( const font_data * ) pfont2 -> client_data		8928124	0					
ANR	8928265	IdentifierDeclType	const font_data *		8928124	0					
ANR	8928266	Identifier	pfd2		8928124	1					
ANR	8928267	AssignmentExpression	* pfd2 = ( const font_data * ) pfont2 -> client_data		8928124	2		=			
ANR	8928268	Identifier	pfd2		8928124	0					
ANR	8928269	CastExpression	( const font_data * ) pfont2 -> client_data		8928124	1					
ANR	8928270	CastTarget	const font_data *		8928124	0					
ANR	8928271	PtrMemberAccess	pfont2 -> client_data		8928124	1					
ANR	8928272	Identifier	pfont2		8928124	0					
ANR	8928273	Identifier	client_data		8928124	1					
ANR	8928274	IfStatement	"if ( ! ( obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar ) && obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings ) ) )"		8928124	2					
ANR	8928275	Condition	"! ( obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar ) && obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings ) )"	229:12:8036:8284	8928124	0	True				
ANR	8928276	UnaryOperationExpression	"! ( obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar ) && obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings ) )"		8928124	0					
ANR	8928277	UnaryOperator	!		8928124	0					
ANR	8928278	AndExpression	"obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar ) && obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings )"		8928124	1		&&			
ANR	8928279	CallExpression	"obj_eq ( mem , & pfd1 -> BuildChar , & pfd2 -> BuildChar )"		8928124	0					
ANR	8928280	Callee	obj_eq		8928124	0					
ANR	8928281	Identifier	obj_eq		8928124	0					
ANR	8928282	ArgumentList	mem		8928124	1					
ANR	8928283	Argument	mem		8928124	0					
ANR	8928284	Identifier	mem		8928124	0					
ANR	8928285	Argument	& pfd1 -> BuildChar		8928124	1					
ANR	8928286	UnaryOperationExpression	& pfd1 -> BuildChar		8928124	0					
ANR	8928287	UnaryOperator	&		8928124	0					
ANR	8928288	PtrMemberAccess	pfd1 -> BuildChar		8928124	1					
ANR	8928289	Identifier	pfd1		8928124	0					
ANR	8928290	Identifier	BuildChar		8928124	1					
ANR	8928291	Argument	& pfd2 -> BuildChar		8928124	2					
ANR	8928292	UnaryOperationExpression	& pfd2 -> BuildChar		8928124	0					
ANR	8928293	UnaryOperator	&		8928124	0					
ANR	8928294	PtrMemberAccess	pfd2 -> BuildChar		8928124	1					
ANR	8928295	Identifier	pfd2		8928124	0					
ANR	8928296	Identifier	BuildChar		8928124	1					
ANR	8928297	AndExpression	"obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph ) && obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings )"		8928124	1		&&			
ANR	8928298	CallExpression	"obj_eq ( mem , & pfd1 -> BuildGlyph , & pfd2 -> BuildGlyph )"		8928124	0					
ANR	8928299	Callee	obj_eq		8928124	0					
ANR	8928300	Identifier	obj_eq		8928124	0					
ANR	8928301	ArgumentList	mem		8928124	1					
ANR	8928302	Argument	mem		8928124	0					
ANR	8928303	Identifier	mem		8928124	0					
ANR	8928304	Argument	& pfd1 -> BuildGlyph		8928124	1					
ANR	8928305	UnaryOperationExpression	& pfd1 -> BuildGlyph		8928124	0					
ANR	8928306	UnaryOperator	&		8928124	0					
ANR	8928307	PtrMemberAccess	pfd1 -> BuildGlyph		8928124	1					
ANR	8928308	Identifier	pfd1		8928124	0					
ANR	8928309	Identifier	BuildGlyph		8928124	1					
ANR	8928310	Argument	& pfd2 -> BuildGlyph		8928124	2					
ANR	8928311	UnaryOperationExpression	& pfd2 -> BuildGlyph		8928124	0					
ANR	8928312	UnaryOperator	&		8928124	0					
ANR	8928313	PtrMemberAccess	pfd2 -> BuildGlyph		8928124	1					
ANR	8928314	Identifier	pfd2		8928124	0					
ANR	8928315	Identifier	BuildGlyph		8928124	1					
ANR	8928316	AndExpression	"obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding ) && obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings )"		8928124	1		&&			
ANR	8928317	CallExpression	"obj_eq ( mem , & pfd1 -> Encoding , & pfd2 -> Encoding )"		8928124	0					
ANR	8928318	Callee	obj_eq		8928124	0					
ANR	8928319	Identifier	obj_eq		8928124	0					
ANR	8928320	ArgumentList	mem		8928124	1					
ANR	8928321	Argument	mem		8928124	0					
ANR	8928322	Identifier	mem		8928124	0					
ANR	8928323	Argument	& pfd1 -> Encoding		8928124	1					
ANR	8928324	UnaryOperationExpression	& pfd1 -> Encoding		8928124	0					
ANR	8928325	UnaryOperator	&		8928124	0					
ANR	8928326	PtrMemberAccess	pfd1 -> Encoding		8928124	1					
ANR	8928327	Identifier	pfd1		8928124	0					
ANR	8928328	Identifier	Encoding		8928124	1					
ANR	8928329	Argument	& pfd2 -> Encoding		8928124	2					
ANR	8928330	UnaryOperationExpression	& pfd2 -> Encoding		8928124	0					
ANR	8928331	UnaryOperator	&		8928124	0					
ANR	8928332	PtrMemberAccess	pfd2 -> Encoding		8928124	1					
ANR	8928333	Identifier	pfd2		8928124	0					
ANR	8928334	Identifier	Encoding		8928124	1					
ANR	8928335	CallExpression	"obj_eq ( mem , & pfd1 -> CharStrings , & pfd2 -> CharStrings )"		8928124	1					
ANR	8928336	Callee	obj_eq		8928124	0					
ANR	8928337	Identifier	obj_eq		8928124	0					
ANR	8928338	ArgumentList	mem		8928124	1					
ANR	8928339	Argument	mem		8928124	0					
ANR	8928340	Identifier	mem		8928124	0					
ANR	8928341	Argument	& pfd1 -> CharStrings		8928124	1					
ANR	8928342	UnaryOperationExpression	& pfd1 -> CharStrings		8928124	0					
ANR	8928343	UnaryOperator	&		8928124	0					
ANR	8928344	PtrMemberAccess	pfd1 -> CharStrings		8928124	1					
ANR	8928345	Identifier	pfd1		8928124	0					
ANR	8928346	Identifier	CharStrings		8928124	1					
ANR	8928347	Argument	& pfd2 -> CharStrings		8928124	2					
ANR	8928348	UnaryOperationExpression	& pfd2 -> CharStrings		8928124	0					
ANR	8928349	UnaryOperator	&		8928124	0					
ANR	8928350	PtrMemberAccess	pfd2 -> CharStrings		8928124	1					
ANR	8928351	Identifier	pfd2		8928124	0					
ANR	8928352	Identifier	CharStrings		8928124	1					
ANR	8928353	ReturnStatement	return false ;	233:12:8299:8311	8928124	1	True				
ANR	8928354	Identifier	false		8928124	0					
ANR	8928355	IfStatement	if ( pfont1 -> FontType == 1 )		8928124	3					
ANR	8928356	Condition	pfont1 -> FontType == 1	234:12:8325:8345	8928124	0	True				
ANR	8928357	EqualityExpression	pfont1 -> FontType == 1		8928124	0		==			
ANR	8928358	PtrMemberAccess	pfont1 -> FontType		8928124	0					
ANR	8928359	Identifier	pfont1		8928124	0					
ANR	8928360	Identifier	FontType		8928124	1					
ANR	8928361	PrimaryExpression	1		8928124	1					
ANR	8928362	CompoundStatement		34:12:1216:1232	8928124	1					
ANR	8928363	IdentifierDeclStatement	"ref * ppd1 , * ppd2 ;"	235:12:8362:8378	8928124	0	True				
ANR	8928364	IdentifierDecl	* ppd1		8928124	0					
ANR	8928365	IdentifierDeclType	ref *		8928124	0					
ANR	8928366	Identifier	ppd1		8928124	1					
ANR	8928367	IdentifierDecl	* ppd2		8928124	1					
ANR	8928368	IdentifierDeclType	ref *		8928124	0					
ANR	8928369	Identifier	ppd2		8928124	1					
ANR	8928370	IfStatement	"if ( dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 ) > 0 && dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0 && ! obj_eq ( mem , ppd1 , ppd2 ) )"		8928124	1					
ANR	8928371	Condition	"dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 ) > 0 && dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0 && ! obj_eq ( mem , ppd1 , ppd2 )"	237:16:8397:8562	8928124	0	True				
ANR	8928372	AndExpression	"dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 ) > 0 && dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0 && ! obj_eq ( mem , ppd1 , ppd2 )"		8928124	0		&&			
ANR	8928373	RelationalExpression	"dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 ) > 0"		8928124	0		>			
ANR	8928374	CallExpression	"dict_find_string ( & pfd1 -> dict , ""Private"" , & ppd1 )"		8928124	0					
ANR	8928375	Callee	dict_find_string		8928124	0					
ANR	8928376	Identifier	dict_find_string		8928124	0					
ANR	8928377	ArgumentList	& pfd1 -> dict		8928124	1					
ANR	8928378	Argument	& pfd1 -> dict		8928124	0					
ANR	8928379	UnaryOperationExpression	& pfd1 -> dict		8928124	0					
ANR	8928380	UnaryOperator	&		8928124	0					
ANR	8928381	PtrMemberAccess	pfd1 -> dict		8928124	1					
ANR	8928382	Identifier	pfd1		8928124	0					
ANR	8928383	Identifier	dict		8928124	1					
ANR	8928384	Argument	"""Private"""		8928124	1					
ANR	8928385	PrimaryExpression	"""Private"""		8928124	0					
ANR	8928386	Argument	& ppd1		8928124	2					
ANR	8928387	UnaryOperationExpression	& ppd1		8928124	0					
ANR	8928388	UnaryOperator	&		8928124	0					
ANR	8928389	Identifier	ppd1		8928124	1					
ANR	8928390	PrimaryExpression	0		8928124	1					
ANR	8928391	AndExpression	"dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0 && ! obj_eq ( mem , ppd1 , ppd2 )"		8928124	1		&&			
ANR	8928392	RelationalExpression	"dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 ) > 0"		8928124	0		>			
ANR	8928393	CallExpression	"dict_find_string ( & pfd2 -> dict , ""Private"" , & ppd2 )"		8928124	0					
ANR	8928394	Callee	dict_find_string		8928124	0					
ANR	8928395	Identifier	dict_find_string		8928124	0					
ANR	8928396	ArgumentList	& pfd2 -> dict		8928124	1					
ANR	8928397	Argument	& pfd2 -> dict		8928124	0					
ANR	8928398	UnaryOperationExpression	& pfd2 -> dict		8928124	0					
ANR	8928399	UnaryOperator	&		8928124	0					
ANR	8928400	PtrMemberAccess	pfd2 -> dict		8928124	1					
ANR	8928401	Identifier	pfd2		8928124	0					
ANR	8928402	Identifier	dict		8928124	1					
ANR	8928403	Argument	"""Private"""		8928124	1					
ANR	8928404	PrimaryExpression	"""Private"""		8928124	0					
ANR	8928405	Argument	& ppd2		8928124	2					
ANR	8928406	UnaryOperationExpression	& ppd2		8928124	0					
ANR	8928407	UnaryOperator	&		8928124	0					
ANR	8928408	Identifier	ppd2		8928124	1					
ANR	8928409	PrimaryExpression	0		8928124	1					
ANR	8928410	UnaryOperationExpression	"! obj_eq ( mem , ppd1 , ppd2 )"		8928124	1					
ANR	8928411	UnaryOperator	!		8928124	0					
ANR	8928412	CallExpression	"obj_eq ( mem , ppd1 , ppd2 )"		8928124	1					
ANR	8928413	Callee	obj_eq		8928124	0					
ANR	8928414	Identifier	obj_eq		8928124	0					
ANR	8928415	ArgumentList	mem		8928124	1					
ANR	8928416	Argument	mem		8928124	0					
ANR	8928417	Identifier	mem		8928124	0					
ANR	8928418	Argument	ppd1		8928124	1					
ANR	8928419	Identifier	ppd1		8928124	0					
ANR	8928420	Argument	ppd2		8928124	2					
ANR	8928421	Identifier	ppd2		8928124	0					
ANR	8928422	ReturnStatement	return false ;	240:16:8581:8593	8928124	1	True				
ANR	8928423	Identifier	false		8928124	0					
ANR	8928424	ReturnStatement	return true ;	243:4:8615:8626	8928124	6	True				
ANR	8928425	Identifier	true		8928124	0					
ANR	8928426	ReturnType	static bool		8928124	1					
ANR	8928427	Identifier	fid_eq		8928124	2					
ANR	8928428	ParameterList	"const gs_memory_t * mem , const gs_font * pfont1 , const gs_font * pfont2"		8928124	3					
ANR	8928429	Parameter	const gs_memory_t * mem	201:7:7075:7096	8928124	0	True				
ANR	8928430	ParameterType	const gs_memory_t *		8928124	0					
ANR	8928431	Identifier	mem		8928124	1					
ANR	8928432	Parameter	const gs_font * pfont1	201:31:7099:7119	8928124	1	True				
ANR	8928433	ParameterType	const gs_font *		8928124	0					
ANR	8928434	Identifier	pfont1		8928124	1					
ANR	8928435	Parameter	const gs_font * pfont2	201:54:7122:7142	8928124	2	True				
ANR	8928436	ParameterType	const gs_font *		8928124	0					
ANR	8928437	Identifier	pfont2		8928124	1					
ANR	8928438	CFGEntryNode	ENTRY		8928124		True				
ANR	8928439	CFGExitNode	EXIT		8928124		True				
ANR	8928440	Symbol	& ( ( const gs_font_base * ) pfont1 ) -> UID		8928124						
ANR	8928441	Symbol	uid_is_UniqueID		8928124						
ANR	8928442	Symbol	& ppd2		8928124						
ANR	8928443	Symbol	pfont2 -> FontType		8928124						
ANR	8928444	Symbol	& ppd1		8928124						
ANR	8928445	Symbol	pfont1 -> FontType		8928124						
ANR	8928446	Symbol	& pfd2 -> Encoding		8928124						
ANR	8928447	Symbol	& pfd2 -> BuildGlyph		8928124						
ANR	8928448	Symbol	mem		8928124						
ANR	8928449	Symbol	pfont1 -> base		8928124						
ANR	8928450	Symbol	pfont2 -> base		8928124						
ANR	8928451	Symbol	& pfd2 -> CharStrings		8928124						
ANR	8928452	Symbol	* pfont2		8928124						
ANR	8928453	Symbol	* pfont1		8928124						
ANR	8928454	Symbol	uid_is_XUID		8928124						
ANR	8928455	Symbol	pfont1		8928124						
ANR	8928456	Symbol	pfont2		8928124						
ANR	8928457	Symbol	dict_find_string		8928124						
ANR	8928458	Symbol	& pfd2 -> BuildChar		8928124						
ANR	8928459	Symbol	false		8928124						
ANR	8928460	Symbol	& pfd1 -> dict		8928124						
ANR	8928461	Symbol	& pfd1 -> BuildChar		8928124						
ANR	8928462	Symbol	& pfd2 -> dict		8928124						
ANR	8928463	Symbol	& pfd1 -> CharStrings		8928124						
ANR	8928464	Symbol	pfont1 -> client_data		8928124						
ANR	8928465	Symbol	& pfd1 -> Encoding		8928124						
ANR	8928466	Symbol	puid1		8928124						
ANR	8928467	Symbol	pfd2		8928124						
ANR	8928468	Symbol	puid2		8928124						
ANR	8928469	Symbol	obj_eq		8928124						
ANR	8928470	Symbol	uid_equal		8928124						
ANR	8928471	Symbol	pfd1		8928124						
ANR	8928472	Symbol	& pfd1 -> BuildGlyph		8928124						
ANR	8928473	Symbol	true		8928124						
ANR	8928474	Symbol	pfont2 -> client_data		8928124						
ANR	8928475	Symbol	& ( ( const gs_font_base * ) pfont2 ) -> UID		8928124						
ANR	8928476	Symbol	ppd1		8928124						
ANR	8928477	Symbol	ppd2		8928124						
ANR	8928478	Function	obj_ident_eq	247:0:8671:8999							
ANR	8928479	FunctionDef	"obj_ident_eq (const gs_memory_t * mem , const ref * pref1 , const ref * pref2)"		8928478	0					
ANR	8928480	CompoundStatement		249:0:8751:8999	8928478	0					
ANR	8928481	IfStatement	if ( r_type ( pref1 ) != r_type ( pref2 ) )		8928478	0					
ANR	8928482	Condition	r_type ( pref1 ) != r_type ( pref2 )	250:8:8761:8790	8928478	0	True				
ANR	8928483	EqualityExpression	r_type ( pref1 ) != r_type ( pref2 )		8928478	0		!=			
ANR	8928484	CallExpression	r_type ( pref1 )		8928478	0					
ANR	8928485	Callee	r_type		8928478	0					
ANR	8928486	Identifier	r_type		8928478	0					
ANR	8928487	ArgumentList	pref1		8928478	1					
ANR	8928488	Argument	pref1		8928478	0					
ANR	8928489	Identifier	pref1		8928478	0					
ANR	8928490	CallExpression	r_type ( pref2 )		8928478	1					
ANR	8928491	Callee	r_type		8928478	0					
ANR	8928492	Identifier	r_type		8928478	0					
ANR	8928493	ArgumentList	pref2		8928478	1					
ANR	8928494	Argument	pref2		8928478	0					
ANR	8928495	Identifier	pref2		8928478	0					
ANR	8928496	ReturnStatement	return false ;	251:8:8801:8813	8928478	1	True				
ANR	8928497	Identifier	false		8928478	0					
ANR	8928498	IfStatement	"if ( r_has_type ( pref1 , t_string ) )"		8928478	1					
ANR	8928499	Condition	"r_has_type ( pref1 , t_string )"	252:8:8823:8849	8928478	0	True				
ANR	8928500	CallExpression	"r_has_type ( pref1 , t_string )"		8928478	0					
ANR	8928501	Callee	r_has_type		8928478	0					
ANR	8928502	Identifier	r_has_type		8928478	0					
ANR	8928503	ArgumentList	pref1		8928478	1					
ANR	8928504	Argument	pref1		8928478	0					
ANR	8928505	Identifier	pref1		8928478	0					
ANR	8928506	Argument	t_string		8928478	1					
ANR	8928507	Identifier	t_string		8928478	0					
ANR	8928508	ReturnStatement	return ( pref1 -> value . bytes == pref2 -> value . bytes && r_size ( pref1 ) == r_size ( pref2 ) ) ;	253:8:8860:8959	8928478	1	True				
ANR	8928509	AndExpression	pref1 -> value . bytes == pref2 -> value . bytes && r_size ( pref1 ) == r_size ( pref2 )		8928478	0		&&			
ANR	8928510	EqualityExpression	pref1 -> value . bytes == pref2 -> value . bytes		8928478	0		==			
ANR	8928511	MemberAccess	pref1 -> value . bytes		8928478	0					
ANR	8928512	PtrMemberAccess	pref1 -> value		8928478	0					
ANR	8928513	Identifier	pref1		8928478	0					
ANR	8928514	Identifier	value		8928478	1					
ANR	8928515	Identifier	bytes		8928478	1					
ANR	8928516	MemberAccess	pref2 -> value . bytes		8928478	1					
ANR	8928517	PtrMemberAccess	pref2 -> value		8928478	0					
ANR	8928518	Identifier	pref2		8928478	0					
ANR	8928519	Identifier	value		8928478	1					
ANR	8928520	Identifier	bytes		8928478	1					
ANR	8928521	EqualityExpression	r_size ( pref1 ) == r_size ( pref2 )		8928478	1		==			
ANR	8928522	CallExpression	r_size ( pref1 )		8928478	0					
ANR	8928523	Callee	r_size		8928478	0					
ANR	8928524	Identifier	r_size		8928478	0					
ANR	8928525	ArgumentList	pref1		8928478	1					
ANR	8928526	Argument	pref1		8928478	0					
ANR	8928527	Identifier	pref1		8928478	0					
ANR	8928528	CallExpression	r_size ( pref2 )		8928478	1					
ANR	8928529	Callee	r_size		8928478	0					
ANR	8928530	Identifier	r_size		8928478	0					
ANR	8928531	ArgumentList	pref2		8928478	1					
ANR	8928532	Argument	pref2		8928478	0					
ANR	8928533	Identifier	pref2		8928478	0					
ANR	8928534	ReturnStatement	"return obj_eq ( mem , pref1 , pref2 ) ;"	255:4:8965:8997	8928478	2	True				
ANR	8928535	CallExpression	"obj_eq ( mem , pref1 , pref2 )"		8928478	0					
ANR	8928536	Callee	obj_eq		8928478	0					
ANR	8928537	Identifier	obj_eq		8928478	0					
ANR	8928538	ArgumentList	mem		8928478	1					
ANR	8928539	Argument	mem		8928478	0					
ANR	8928540	Identifier	mem		8928478	0					
ANR	8928541	Argument	pref1		8928478	1					
ANR	8928542	Identifier	pref1		8928478	0					
ANR	8928543	Argument	pref2		8928478	2					
ANR	8928544	Identifier	pref2		8928478	0					
ANR	8928545	ReturnType	bool		8928478	1					
ANR	8928546	Identifier	obj_ident_eq		8928478	2					
ANR	8928547	ParameterList	"const gs_memory_t * mem , const ref * pref1 , const ref * pref2"		8928478	3					
ANR	8928548	Parameter	const gs_memory_t * mem	248:13:8689:8710	8928478	0	True				
ANR	8928549	ParameterType	const gs_memory_t *		8928478	0					
ANR	8928550	Identifier	mem		8928478	1					
ANR	8928551	Parameter	const ref * pref1	248:37:8713:8729	8928478	1	True				
ANR	8928552	ParameterType	const ref *		8928478	0					
ANR	8928553	Identifier	pref1		8928478	1					
ANR	8928554	Parameter	const ref * pref2	248:56:8732:8748	8928478	2	True				
ANR	8928555	ParameterType	const ref *		8928478	0					
ANR	8928556	Identifier	pref2		8928478	1					
ANR	8928557	CFGEntryNode	ENTRY		8928478		True				
ANR	8928558	CFGExitNode	EXIT		8928478		True				
ANR	8928559	Symbol	pref1 -> value		8928478						
ANR	8928560	Symbol	false		8928478						
ANR	8928561	Symbol	pref2 -> value		8928478						
ANR	8928562	Symbol	pref1 -> value . bytes		8928478						
ANR	8928563	Symbol	pref2		8928478						
ANR	8928564	Symbol	pref1		8928478						
ANR	8928565	Symbol	t_string		8928478						
ANR	8928566	Symbol	r_has_type		8928478						
ANR	8928567	Symbol	mem		8928478						
ANR	8928568	Symbol	obj_eq		8928478						
ANR	8928569	Symbol	r_size		8928478						
ANR	8928570	Symbol	* pref1		8928478						
ANR	8928571	Symbol	* pref2		8928478						
ANR	8928572	Symbol	r_type		8928478						
ANR	8928573	Symbol	pref2 -> value . bytes		8928478						
ANR	8928574	Function	obj_string_data	263:0:9240:9716							
ANR	8928575	FunctionDef	"obj_string_data (const gs_memory_t * mem , const ref * op , const byte * * pchars , uint * plen)"		8928574	0					
ANR	8928576	CompoundStatement		265:0:9332:9716	8928574	0					
ANR	8928577	SwitchStatement	switch ( r_type ( op ) )		8928574	0					
ANR	8928578	Condition	r_type ( op )	266:12:9346:9355	8928574	0	True				
ANR	8928579	CallExpression	r_type ( op )		8928574	0					
ANR	8928580	Callee	r_type		8928574	0					
ANR	8928581	Identifier	r_type		8928574	0					
ANR	8928582	ArgumentList	op		8928574	1					
ANR	8928583	Argument	op		8928574	0					
ANR	8928584	Identifier	op		8928574	0					
ANR	8928585	CompoundStatement		2:24:25:25	8928574	1					
ANR	8928586	Label	case t_name :	267:4:9364:9375	8928574	0	True				
ANR	8928587	Identifier	t_name		8928574	0					
ANR	8928588	CompoundStatement		4:8:54:62	8928574	1					
ANR	8928589	IdentifierDeclStatement	ref nref ;	268:8:9387:9395	8928574	0	True				
ANR	8928590	IdentifierDecl	nref		8928574	0					
ANR	8928591	IdentifierDeclType	ref		8928574	0					
ANR	8928592	Identifier	nref		8928574	1					
ANR	8928593	ExpressionStatement	"name_string_ref ( mem , op , & nref )"	270:8:9406:9437	8928574	1	True				
ANR	8928594	CallExpression	"name_string_ref ( mem , op , & nref )"		8928574	0					
ANR	8928595	Callee	name_string_ref		8928574	0					
ANR	8928596	Identifier	name_string_ref		8928574	0					
ANR	8928597	ArgumentList	mem		8928574	1					
ANR	8928598	Argument	mem		8928574	0					
ANR	8928599	Identifier	mem		8928574	0					
ANR	8928600	Argument	op		8928574	1					
ANR	8928601	Identifier	op		8928574	0					
ANR	8928602	Argument	& nref		8928574	2					
ANR	8928603	UnaryOperationExpression	& nref		8928574	0					
ANR	8928604	UnaryOperator	&		8928574	0					
ANR	8928605	Identifier	nref		8928574	1					
ANR	8928606	ExpressionStatement	* pchars = nref . value . bytes	271:8:9447:9473	8928574	2	True				
ANR	8928607	AssignmentExpression	* pchars = nref . value . bytes		8928574	0		=			
ANR	8928608	UnaryOperationExpression	* pchars		8928574	0					
ANR	8928609	UnaryOperator	*		8928574	0					
ANR	8928610	Identifier	pchars		8928574	1					
ANR	8928611	MemberAccess	nref . value . bytes		8928574	1					
ANR	8928612	MemberAccess	nref . value		8928574	0					
ANR	8928613	Identifier	nref		8928574	0					
ANR	8928614	Identifier	value		8928574	1					
ANR	8928615	Identifier	bytes		8928574	1					
ANR	8928616	ExpressionStatement	* plen = r_size ( & nref )	272:8:9483:9504	8928574	3	True				
ANR	8928617	AssignmentExpression	* plen = r_size ( & nref )		8928574	0		=			
ANR	8928618	UnaryOperationExpression	* plen		8928574	0					
ANR	8928619	UnaryOperator	*		8928574	0					
ANR	8928620	Identifier	plen		8928574	1					
ANR	8928621	CallExpression	r_size ( & nref )		8928574	1					
ANR	8928622	Callee	r_size		8928574	0					
ANR	8928623	Identifier	r_size		8928574	0					
ANR	8928624	ArgumentList	& nref		8928574	1					
ANR	8928625	Argument	& nref		8928574	0					
ANR	8928626	UnaryOperationExpression	& nref		8928574	0					
ANR	8928627	UnaryOperator	&		8928574	0					
ANR	8928628	Identifier	nref		8928574	1					
ANR	8928629	ReturnStatement	return 0 ;	273:8:9514:9522	8928574	4	True				
ANR	8928630	PrimaryExpression	0		8928574	0					
ANR	8928631	Label	case t_string :	275:4:9534:9547	8928574	2	True				
ANR	8928632	Identifier	t_string		8928574	0					
ANR	8928633	ExpressionStatement	check_read ( * op )	276:8:9557:9572	8928574	3	True				
ANR	8928634	CallExpression	check_read ( * op )		8928574	0					
ANR	8928635	Callee	check_read		8928574	0					
ANR	8928636	Identifier	check_read		8928574	0					
ANR	8928637	ArgumentList	* op		8928574	1					
ANR	8928638	Argument	* op		8928574	0					
ANR	8928639	UnaryOperationExpression	* op		8928574	0					
ANR	8928640	UnaryOperator	*		8928574	0					
ANR	8928641	Identifier	op		8928574	1					
ANR	8928642	ExpressionStatement	* pchars = op -> value . bytes	277:8:9582:9607	8928574	4	True				
ANR	8928643	AssignmentExpression	* pchars = op -> value . bytes		8928574	0		=			
ANR	8928644	UnaryOperationExpression	* pchars		8928574	0					
ANR	8928645	UnaryOperator	*		8928574	0					
ANR	8928646	Identifier	pchars		8928574	1					
ANR	8928647	MemberAccess	op -> value . bytes		8928574	1					
ANR	8928648	PtrMemberAccess	op -> value		8928574	0					
ANR	8928649	Identifier	op		8928574	0					
ANR	8928650	Identifier	value		8928574	1					
ANR	8928651	Identifier	bytes		8928574	1					
ANR	8928652	ExpressionStatement	* plen = r_size ( op )	278:8:9617:9635	8928574	5	True				
ANR	8928653	AssignmentExpression	* plen = r_size ( op )		8928574	0		=			
ANR	8928654	UnaryOperationExpression	* plen		8928574	0					
ANR	8928655	UnaryOperator	*		8928574	0					
ANR	8928656	Identifier	plen		8928574	1					
ANR	8928657	CallExpression	r_size ( op )		8928574	1					
ANR	8928658	Callee	r_size		8928574	0					
ANR	8928659	Identifier	r_size		8928574	0					
ANR	8928660	ArgumentList	op		8928574	1					
ANR	8928661	Argument	op		8928574	0					
ANR	8928662	Identifier	op		8928574	0					
ANR	8928663	ReturnStatement	return 0 ;	279:8:9645:9653	8928574	6	True				
ANR	8928664	PrimaryExpression	0		8928574	0					
ANR	8928665	Label	default :	280:4:9659:9666	8928574	7	True				
ANR	8928666	Identifier	default		8928574	0					
ANR	8928667	ExpressionStatement	return_error ( gs_error_typecheck )	281:8:9676:9708	8928574	8	True				
ANR	8928668	CallExpression	return_error ( gs_error_typecheck )		8928574	0					
ANR	8928669	Callee	return_error		8928574	0					
ANR	8928670	Identifier	return_error		8928574	0					
ANR	8928671	ArgumentList	gs_error_typecheck		8928574	1					
ANR	8928672	Argument	gs_error_typecheck		8928574	0					
ANR	8928673	Identifier	gs_error_typecheck		8928574	0					
ANR	8928674	ReturnType	int		8928574	1					
ANR	8928675	Identifier	obj_string_data		8928574	2					
ANR	8928676	ParameterList	"const gs_memory_t * mem , const ref * op , const byte * * pchars , uint * plen"		8928574	3					
ANR	8928677	Parameter	const gs_memory_t * mem	264:16:9260:9281	8928574	0	True				
ANR	8928678	ParameterType	const gs_memory_t *		8928574	0					
ANR	8928679	Identifier	mem		8928574	1					
ANR	8928680	Parameter	const ref * op	264:40:9284:9296	8928574	1	True				
ANR	8928681	ParameterType	const ref *		8928574	0					
ANR	8928682	Identifier	op		8928574	1					
ANR	8928683	Parameter	const byte * * pchars	264:55:9299:9317	8928574	2	True				
ANR	8928684	ParameterType	const byte * *		8928574	0					
ANR	8928685	Identifier	pchars		8928574	1					
ANR	8928686	Parameter	uint * plen	264:76:9320:9329	8928574	3	True				
ANR	8928687	ParameterType	uint *		8928574	0					
ANR	8928688	Identifier	plen		8928574	1					
ANR	8928689	CFGEntryNode	ENTRY		8928574		True				
ANR	8928690	CFGExitNode	EXIT		8928574		True				
ANR	8928691	Symbol	op		8928574						
ANR	8928692	Symbol	* op		8928574						
ANR	8928693	Symbol	pchars		8928574						
ANR	8928694	Symbol	plen		8928574						
ANR	8928695	Symbol	& nref		8928574						
ANR	8928696	Symbol	nref . value		8928574						
ANR	8928697	Symbol	gs_error_typecheck		8928574						
ANR	8928698	Symbol	mem		8928574						
ANR	8928699	Symbol	nref		8928574						
ANR	8928700	Symbol	op -> value		8928574						
ANR	8928701	Symbol	r_size		8928574						
ANR	8928702	Symbol	op -> value . bytes		8928574						
ANR	8928703	Symbol	* pchars		8928574						
ANR	8928704	Symbol	nref . value . bytes		8928574						
ANR	8928705	Symbol	* plen		8928574						
ANR	8928706	Symbol	r_type		8928574						
ANR	8928707	DeclStmt									
ANR	8928708	Decl							void	void ( char * )	ensure_dot
ANR	8928709	Function	obj_cvp	307:0:10827:20001							
ANR	8928710	FunctionDef	"obj_cvp (const ref * op , byte * str , uint len , uint * prlen , int full_print , uint start_pos , const gs_memory_t * mem , bool restart)"		8928709	0					
ANR	8928711	CompoundStatement		310:0:10969:20001	8928709	0					
ANR	8928712	IdentifierDeclStatement	char buf [ 256 ] ;	311:4:10975:10988	8928709	0	True				
ANR	8928713	IdentifierDecl	buf [ 256 ]		8928709	0					
ANR	8928714	IdentifierDeclType	char [ 256 ]		8928709	0					
ANR	8928715	Identifier	buf		8928709	1					
ANR	8928716	PrimaryExpression	256		8928709	2					
ANR	8928717	IdentifierDeclStatement	const byte * data = ( const byte * ) buf ;	312:4:11050:11086	8928709	1	True				
ANR	8928718	IdentifierDecl	* data = ( const byte * ) buf		8928709	0					
ANR	8928719	IdentifierDeclType	const byte *		8928709	0					
ANR	8928720	Identifier	data		8928709	1					
ANR	8928721	AssignmentExpression	* data = ( const byte * ) buf		8928709	2		=			
ANR	8928722	Identifier	data		8928709	0					
ANR	8928723	CastExpression	( const byte * ) buf		8928709	1					
ANR	8928724	CastTarget	const byte *		8928709	0					
ANR	8928725	Identifier	buf		8928709	1					
ANR	8928726	IdentifierDeclStatement	uint size ;	313:4:11092:11101	8928709	2	True				
ANR	8928727	IdentifierDecl	size		8928709	0					
ANR	8928728	IdentifierDeclType	uint		8928709	0					
ANR	8928729	Identifier	size		8928709	1					
ANR	8928730	IdentifierDeclStatement	int code ;	314:4:11107:11115	8928709	3	True				
ANR	8928731	IdentifierDecl	code		8928709	0					
ANR	8928732	IdentifierDeclType	int		8928709	0					
ANR	8928733	Identifier	code		8928709	1					
ANR	8928734	IdentifierDeclStatement	ref nref ;	315:4:11121:11129	8928709	4	True				
ANR	8928735	IdentifierDecl	nref		8928709	0					
ANR	8928736	IdentifierDeclType	ref		8928709	0					
ANR	8928737	Identifier	nref		8928709	1					
ANR	8928738	IfStatement	if ( full_print )		8928709	5					
ANR	8928739	Condition	full_print	317:8:11140:11149	8928709	0	True				
ANR	8928740	Identifier	full_print		8928709	0					
ANR	8928741	CompoundStatement		8:20:182:182	8928709	1					
ANR	8928742	Statement	static	318:8:11162:11167	8928709	0	True				
ANR	8928743	Statement	const	318:15:11169:11173	8928709	1	True				
ANR	8928744	Statement	char	318:21:11175:11178	8928709	2	True				
ANR	8928745	Statement	*	318:26:11180:11180	8928709	3	True				
ANR	8928746	Statement	const	318:28:11182:11186	8928709	4	True				
ANR	8928747	Statement	type_strings	318:34:11188:11199	8928709	5	True				
ANR	8928748	Statement	[	318:46:11200:11200	8928709	6	True				
ANR	8928749	Statement	]	318:47:11201:11201	8928709	7	True				
ANR	8928750	Statement	=	318:49:11203:11203	8928709	8	True				
ANR	8928751	CompoundStatement		9:51:235:235	8928709	9					
ANR	8928752	Statement	REF_TYPE_PRINT_STRINGS	318:53:11207:11228	8928709	0	True				
ANR	8928753	ExpressionStatement		318:77:11231:11231	8928709	10	True				
ANR	8928754	SwitchStatement	switch ( r_btype ( op ) )		8928709	11					
ANR	8928755	Condition	r_btype ( op )	320:16:11250:11260	8928709	0	True				
ANR	8928756	CallExpression	r_btype ( op )		8928709	0					
ANR	8928757	Callee	r_btype		8928709	0					
ANR	8928758	Identifier	r_btype		8928709	0					
ANR	8928759	ArgumentList	op		8928709	1					
ANR	8928760	Argument	op		8928709	0					
ANR	8928761	Identifier	op		8928709	0					
ANR	8928762	CompoundStatement		11:29:293:293	8928709	1					
ANR	8928763	Label	case t_boolean :	321:8:11273:11287	8928709	0	True				
ANR	8928764	Identifier	t_boolean		8928709	0					
ANR	8928765	Label	case t_integer :	322:8:11297:11311	8928709	1	True				
ANR	8928766	Identifier	t_integer		8928709	0					
ANR	8928767	BreakStatement	break ;	323:12:11325:11330	8928709	2	True				
ANR	8928768	Label	case t_real :	324:8:11340:11351	8928709	3	True				
ANR	8928769	Identifier	t_real		8928709	0					
ANR	8928770	CompoundStatement		32:12:1374:1387	8928709	4					
ANR	8928771	IdentifierDeclStatement	float value = op -> value . realval ;	340:12:12299:12330	8928709	0	True				
ANR	8928772	IdentifierDecl	value = op -> value . realval		8928709	0					
ANR	8928773	IdentifierDeclType	float		8928709	0					
ANR	8928774	Identifier	value		8928709	1					
ANR	8928775	AssignmentExpression	value = op -> value . realval		8928709	2		=			
ANR	8928776	Identifier	value		8928709	0					
ANR	8928777	MemberAccess	op -> value . realval		8928709	1					
ANR	8928778	PtrMemberAccess	op -> value		8928709	0					
ANR	8928779	Identifier	op		8928709	0					
ANR	8928780	Identifier	value		8928709	1					
ANR	8928781	Identifier	realval		8928709	1					
ANR	8928782	IdentifierDeclStatement	float scanned ;	341:12:12344:12357	8928709	1	True				
ANR	8928783	IdentifierDecl	scanned		8928709	0					
ANR	8928784	IdentifierDeclType	float		8928709	0					
ANR	8928785	Identifier	scanned		8928709	1					
ANR	8928786	ExpressionStatement	"gs_sprintf ( buf , ""%g"" , value )"	343:12:12372:12400	8928709	2	True				
ANR	8928787	CallExpression	"gs_sprintf ( buf , ""%g"" , value )"		8928709	0					
ANR	8928788	Callee	gs_sprintf		8928709	0					
ANR	8928789	Identifier	gs_sprintf		8928709	0					
ANR	8928790	ArgumentList	buf		8928709	1					
ANR	8928791	Argument	buf		8928709	0					
ANR	8928792	Identifier	buf		8928709	0					
ANR	8928793	Argument	"""%g"""		8928709	1					
ANR	8928794	PrimaryExpression	"""%g"""		8928709	0					
ANR	8928795	Argument	value		8928709	2					
ANR	8928796	Identifier	value		8928709	0					
ANR	8928797	ExpressionStatement	"sscanf ( buf , ""%f"" , & scanned )"	344:12:12414:12441	8928709	3	True				
ANR	8928798	CallExpression	"sscanf ( buf , ""%f"" , & scanned )"		8928709	0					
ANR	8928799	Callee	sscanf		8928709	0					
ANR	8928800	Identifier	sscanf		8928709	0					
ANR	8928801	ArgumentList	buf		8928709	1					
ANR	8928802	Argument	buf		8928709	0					
ANR	8928803	Identifier	buf		8928709	0					
ANR	8928804	Argument	"""%f"""		8928709	1					
ANR	8928805	PrimaryExpression	"""%f"""		8928709	0					
ANR	8928806	Argument	& scanned		8928709	2					
ANR	8928807	UnaryOperationExpression	& scanned		8928709	0					
ANR	8928808	UnaryOperator	&		8928709	0					
ANR	8928809	Identifier	scanned		8928709	1					
ANR	8928810	IfStatement	if ( scanned != value )		8928709	4					
ANR	8928811	Condition	scanned != value	345:16:12459:12474	8928709	0	True				
ANR	8928812	EqualityExpression	scanned != value		8928709	0		!=			
ANR	8928813	Identifier	scanned		8928709	0					
ANR	8928814	Identifier	value		8928709	1					
ANR	8928815	ExpressionStatement	"gs_sprintf ( buf , ""%.9g"" , value )"	346:16:12493:12523	8928709	1	True				
ANR	8928816	CallExpression	"gs_sprintf ( buf , ""%.9g"" , value )"		8928709	0					
ANR	8928817	Callee	gs_sprintf		8928709	0					
ANR	8928818	Identifier	gs_sprintf		8928709	0					
ANR	8928819	ArgumentList	buf		8928709	1					
ANR	8928820	Argument	buf		8928709	0					
ANR	8928821	Identifier	buf		8928709	0					
ANR	8928822	Argument	"""%.9g"""		8928709	1					
ANR	8928823	PrimaryExpression	"""%.9g"""		8928709	0					
ANR	8928824	Argument	value		8928709	2					
ANR	8928825	Identifier	value		8928709	0					
ANR	8928826	ExpressionStatement	ensure_dot ( buf )	347:12:12537:12552	8928709	5	True				
ANR	8928827	CallExpression	ensure_dot ( buf )		8928709	0					
ANR	8928828	Callee	ensure_dot		8928709	0					
ANR	8928829	Identifier	ensure_dot		8928709	0					
ANR	8928830	ArgumentList	buf		8928709	1					
ANR	8928831	Argument	buf		8928709	0					
ANR	8928832	Identifier	buf		8928709	0					
ANR	8928833	GotoStatement	goto rs ;	348:12:12566:12573	8928709	6	True				
ANR	8928834	Identifier	rs		8928709	0					
ANR	8928835	Label	case t_operator :	350:8:12593:12608	8928709	5	True				
ANR	8928836	Identifier	t_operator		8928709	0					
ANR	8928837	Label	case t_oparray :	351:8:12618:12632	8928709	6	True				
ANR	8928838	Identifier	t_oparray		8928709	0					
ANR	8928839	ExpressionStatement	"code = obj_cvp ( op , ( byte * ) buf + 2 , sizeof ( buf ) - 4 , & size , 0 , 0 , mem , restart )"	352:12:12646:12725	8928709	7	True				
ANR	8928840	AssignmentExpression	"code = obj_cvp ( op , ( byte * ) buf + 2 , sizeof ( buf ) - 4 , & size , 0 , 0 , mem , restart )"		8928709	0		=			
ANR	8928841	Identifier	code		8928709	0					
ANR	8928842	CallExpression	"obj_cvp ( op , ( byte * ) buf + 2 , sizeof ( buf ) - 4 , & size , 0 , 0 , mem , restart )"		8928709	1					
ANR	8928843	Callee	obj_cvp		8928709	0					
ANR	8928844	Identifier	obj_cvp		8928709	0					
ANR	8928845	ArgumentList	op		8928709	1					
ANR	8928846	Argument	op		8928709	0					
ANR	8928847	Identifier	op		8928709	0					
ANR	8928848	Argument	( byte * ) buf + 2		8928709	1					
ANR	8928849	AdditiveExpression	( byte * ) buf + 2		8928709	0		+			
ANR	8928850	CastExpression	( byte * ) buf		8928709	0					
ANR	8928851	CastTarget	byte *		8928709	0					
ANR	8928852	Identifier	buf		8928709	1					
ANR	8928853	PrimaryExpression	2		8928709	1					
ANR	8928854	Argument	sizeof ( buf ) - 4		8928709	2					
ANR	8928855	AdditiveExpression	sizeof ( buf ) - 4		8928709	0		-			
ANR	8928856	SizeofExpression	sizeof ( buf )		8928709	0					
ANR	8928857	Sizeof	sizeof		8928709	0					
ANR	8928858	SizeofOperand	buf		8928709	1					
ANR	8928859	PrimaryExpression	4		8928709	1					
ANR	8928860	Argument	& size		8928709	3					
ANR	8928861	UnaryOperationExpression	& size		8928709	0					
ANR	8928862	UnaryOperator	&		8928709	0					
ANR	8928863	Identifier	size		8928709	1					
ANR	8928864	Argument	0		8928709	4					
ANR	8928865	PrimaryExpression	0		8928709	0					
ANR	8928866	Argument	0		8928709	5					
ANR	8928867	PrimaryExpression	0		8928709	0					
ANR	8928868	Argument	mem		8928709	6					
ANR	8928869	Identifier	mem		8928709	0					
ANR	8928870	Argument	restart		8928709	7					
ANR	8928871	Identifier	restart		8928709	0					
ANR	8928872	IfStatement	if ( code < 0 )		8928709	8					
ANR	8928873	Condition	code < 0	353:16:12743:12750	8928709	0	True				
ANR	8928874	RelationalExpression	code < 0		8928709	0		<			
ANR	8928875	Identifier	code		8928709	0					
ANR	8928876	PrimaryExpression	0		8928709	1					
ANR	8928877	ReturnStatement	return code ;	354:16:12769:12780	8928709	1	True				
ANR	8928878	Identifier	code		8928709	0					
ANR	8928879	ExpressionStatement	buf [ 0 ] = buf [ 1 ] = buf [ size + 2 ] = buf [ size + 3 ] = '-'	355:12:12794:12847	8928709	9	True				
ANR	8928880	AssignmentExpression	buf [ 0 ] = buf [ 1 ] = buf [ size + 2 ] = buf [ size + 3 ] = '-'		8928709	0		=			
ANR	8928881	ArrayIndexing	buf [ 0 ]		8928709	0					
ANR	8928882	Identifier	buf		8928709	0					
ANR	8928883	PrimaryExpression	0		8928709	1					
ANR	8928884	AssignmentExpression	buf [ 1 ] = buf [ size + 2 ] = buf [ size + 3 ] = '-'		8928709	1		=			
ANR	8928885	ArrayIndexing	buf [ 1 ]		8928709	0					
ANR	8928886	Identifier	buf		8928709	0					
ANR	8928887	PrimaryExpression	1		8928709	1					
ANR	8928888	AssignmentExpression	buf [ size + 2 ] = buf [ size + 3 ] = '-'		8928709	1		=			
ANR	8928889	ArrayIndexing	buf [ size + 2 ]		8928709	0					
ANR	8928890	Identifier	buf		8928709	0					
ANR	8928891	AdditiveExpression	size + 2		8928709	1		+			
ANR	8928892	Identifier	size		8928709	0					
ANR	8928893	PrimaryExpression	2		8928709	1					
ANR	8928894	AssignmentExpression	buf [ size + 3 ] = '-'		8928709	1		=			
ANR	8928895	ArrayIndexing	buf [ size + 3 ]		8928709	0					
ANR	8928896	Identifier	buf		8928709	0					
ANR	8928897	AdditiveExpression	size + 3		8928709	1		+			
ANR	8928898	Identifier	size		8928709	0					
ANR	8928899	PrimaryExpression	3		8928709	1					
ANR	8928900	PrimaryExpression	'-'		8928709	1					
ANR	8928901	ExpressionStatement	size += 4	356:12:12861:12870	8928709	10	True				
ANR	8928902	AssignmentExpression	size += 4		8928709	0		+=			
ANR	8928903	Identifier	size		8928709	0					
ANR	8928904	PrimaryExpression	4		8928709	1					
ANR	8928905	GotoStatement	goto nl ;	357:12:12884:12891	8928709	11	True				
ANR	8928906	Identifier	nl		8928709	0					
ANR	8928907	Label	case t_name :	358:8:12901:12912	8928709	12	True				
ANR	8928908	Identifier	t_name		8928709	0					
ANR	8928909	IfStatement	"if ( r_has_attr ( op , a_executable ) )"		8928709	13					
ANR	8928910	Condition	"r_has_attr ( op , a_executable )"	359:16:12930:12957	8928709	0	True				
ANR	8928911	CallExpression	"r_has_attr ( op , a_executable )"		8928709	0					
ANR	8928912	Callee	r_has_attr		8928709	0					
ANR	8928913	Identifier	r_has_attr		8928709	0					
ANR	8928914	ArgumentList	op		8928709	1					
ANR	8928915	Argument	op		8928709	0					
ANR	8928916	Identifier	op		8928709	0					
ANR	8928917	Argument	a_executable		8928709	1					
ANR	8928918	Identifier	a_executable		8928709	0					
ANR	8928919	CompoundStatement		50:46:1990:1990	8928709	1					
ANR	8928920	ExpressionStatement	"code = obj_string_data ( mem , op , & data , & size )"	360:16:12978:13023	8928709	0	True				
ANR	8928921	AssignmentExpression	"code = obj_string_data ( mem , op , & data , & size )"		8928709	0		=			
ANR	8928922	Identifier	code		8928709	0					
ANR	8928923	CallExpression	"obj_string_data ( mem , op , & data , & size )"		8928709	1					
ANR	8928924	Callee	obj_string_data		8928709	0					
ANR	8928925	Identifier	obj_string_data		8928709	0					
ANR	8928926	ArgumentList	mem		8928709	1					
ANR	8928927	Argument	mem		8928709	0					
ANR	8928928	Identifier	mem		8928709	0					
ANR	8928929	Argument	op		8928709	1					
ANR	8928930	Identifier	op		8928709	0					
ANR	8928931	Argument	& data		8928709	2					
ANR	8928932	UnaryOperationExpression	& data		8928709	0					
ANR	8928933	UnaryOperator	&		8928709	0					
ANR	8928934	Identifier	data		8928709	1					
ANR	8928935	Argument	& size		8928709	3					
ANR	8928936	UnaryOperationExpression	& size		8928709	0					
ANR	8928937	UnaryOperator	&		8928709	0					
ANR	8928938	Identifier	size		8928709	1					
ANR	8928939	IfStatement	if ( code < 0 )		8928709	1					
ANR	8928940	Condition	code < 0	361:20:13045:13052	8928709	0	True				
ANR	8928941	RelationalExpression	code < 0		8928709	0		<			
ANR	8928942	Identifier	code		8928709	0					
ANR	8928943	PrimaryExpression	0		8928709	1					
ANR	8928944	ReturnStatement	return code ;	362:20:13075:13086	8928709	1	True				
ANR	8928945	Identifier	code		8928709	0					
ANR	8928946	GotoStatement	goto nl ;	363:16:13104:13111	8928709	2	True				
ANR	8928947	Identifier	nl		8928709	0					
ANR	8928948	IfStatement	if ( start_pos > 0 )		8928709	14					
ANR	8928949	Condition	start_pos > 0	365:16:13143:13155	8928709	0	True				
ANR	8928950	RelationalExpression	start_pos > 0		8928709	0		>			
ANR	8928951	Identifier	start_pos		8928709	0					
ANR	8928952	PrimaryExpression	0		8928709	1					
ANR	8928953	ReturnStatement	"return obj_cvp ( op , str , len , prlen , 0 , start_pos - 1 , mem , restart ) ;"	366:16:13174:13241	8928709	1	True				
ANR	8928954	CallExpression	"obj_cvp ( op , str , len , prlen , 0 , start_pos - 1 , mem , restart )"		8928709	0					
ANR	8928955	Callee	obj_cvp		8928709	0					
ANR	8928956	Identifier	obj_cvp		8928709	0					
ANR	8928957	ArgumentList	op		8928709	1					
ANR	8928958	Argument	op		8928709	0					
ANR	8928959	Identifier	op		8928709	0					
ANR	8928960	Argument	str		8928709	1					
ANR	8928961	Identifier	str		8928709	0					
ANR	8928962	Argument	len		8928709	2					
ANR	8928963	Identifier	len		8928709	0					
ANR	8928964	Argument	prlen		8928709	3					
ANR	8928965	Identifier	prlen		8928709	0					
ANR	8928966	Argument	0		8928709	4					
ANR	8928967	PrimaryExpression	0		8928709	0					
ANR	8928968	Argument	start_pos - 1		8928709	5					
ANR	8928969	AdditiveExpression	start_pos - 1		8928709	0		-			
ANR	8928970	Identifier	start_pos		8928709	0					
ANR	8928971	PrimaryExpression	1		8928709	1					
ANR	8928972	Argument	mem		8928709	6					
ANR	8928973	Identifier	mem		8928709	0					
ANR	8928974	Argument	restart		8928709	7					
ANR	8928975	Identifier	restart		8928709	0					
ANR	8928976	IfStatement	if ( len < 1 )		8928709	15					
ANR	8928977	Condition	len < 1	367:16:13259:13265	8928709	0	True				
ANR	8928978	RelationalExpression	len < 1		8928709	0		<			
ANR	8928979	Identifier	len		8928709	0					
ANR	8928980	PrimaryExpression	1		8928709	1					
ANR	8928981	ExpressionStatement	return_error ( gs_error_rangecheck )	368:16:13284:13317	8928709	1	True				
ANR	8928982	CallExpression	return_error ( gs_error_rangecheck )		8928709	0					
ANR	8928983	Callee	return_error		8928709	0					
ANR	8928984	Identifier	return_error		8928709	0					
ANR	8928985	ArgumentList	gs_error_rangecheck		8928709	1					
ANR	8928986	Argument	gs_error_rangecheck		8928709	0					
ANR	8928987	Identifier	gs_error_rangecheck		8928709	0					
ANR	8928988	ExpressionStatement	"code = obj_cvp ( op , str + 1 , len - 1 , prlen , 0 , 0 , mem , restart )"	369:12:13331:13394	8928709	16	True				
ANR	8928989	AssignmentExpression	"code = obj_cvp ( op , str + 1 , len - 1 , prlen , 0 , 0 , mem , restart )"		8928709	0		=			
ANR	8928990	Identifier	code		8928709	0					
ANR	8928991	CallExpression	"obj_cvp ( op , str + 1 , len - 1 , prlen , 0 , 0 , mem , restart )"		8928709	1					
ANR	8928992	Callee	obj_cvp		8928709	0					
ANR	8928993	Identifier	obj_cvp		8928709	0					
ANR	8928994	ArgumentList	op		8928709	1					
ANR	8928995	Argument	op		8928709	0					
ANR	8928996	Identifier	op		8928709	0					
ANR	8928997	Argument	str + 1		8928709	1					
ANR	8928998	AdditiveExpression	str + 1		8928709	0		+			
ANR	8928999	Identifier	str		8928709	0					
ANR	8929000	PrimaryExpression	1		8928709	1					
ANR	8929001	Argument	len - 1		8928709	2					
ANR	8929002	AdditiveExpression	len - 1		8928709	0		-			
ANR	8929003	Identifier	len		8928709	0					
ANR	8929004	PrimaryExpression	1		8928709	1					
ANR	8929005	Argument	prlen		8928709	3					
ANR	8929006	Identifier	prlen		8928709	0					
ANR	8929007	Argument	0		8928709	4					
ANR	8929008	PrimaryExpression	0		8928709	0					
ANR	8929009	Argument	0		8928709	5					
ANR	8929010	PrimaryExpression	0		8928709	0					
ANR	8929011	Argument	mem		8928709	6					
ANR	8929012	Identifier	mem		8928709	0					
ANR	8929013	Argument	restart		8928709	7					
ANR	8929014	Identifier	restart		8928709	0					
ANR	8929015	IfStatement	if ( code < 0 )		8928709	17					
ANR	8929016	Condition	code < 0	370:16:13412:13419	8928709	0	True				
ANR	8929017	RelationalExpression	code < 0		8928709	0		<			
ANR	8929018	Identifier	code		8928709	0					
ANR	8929019	PrimaryExpression	0		8928709	1					
ANR	8929020	ReturnStatement	return code ;	371:16:13438:13449	8928709	1	True				
ANR	8929021	Identifier	code		8928709	0					
ANR	8929022	ExpressionStatement	str [ 0 ] = '/'	372:12:13463:13475	8928709	18	True				
ANR	8929023	AssignmentExpression	str [ 0 ] = '/'		8928709	0		=			
ANR	8929024	ArrayIndexing	str [ 0 ]		8928709	0					
ANR	8929025	Identifier	str		8928709	0					
ANR	8929026	PrimaryExpression	0		8928709	1					
ANR	8929027	PrimaryExpression	'/'		8928709	1					
ANR	8929028	ExpressionStatement	++ * prlen	373:12:13489:13497	8928709	19	True				
ANR	8929029	UnaryExpression	++ * prlen		8928709	0					
ANR	8929030	IncDec	++		8928709	0					
ANR	8929031	UnaryOperationExpression	* prlen		8928709	1					
ANR	8929032	UnaryOperator	*		8928709	0					
ANR	8929033	Identifier	prlen		8928709	1					
ANR	8929034	ReturnStatement	return code ;	374:12:13511:13522	8928709	20	True				
ANR	8929035	Identifier	code		8928709	0					
ANR	8929036	Label	case t_null :	375:8:13532:13543	8928709	21	True				
ANR	8929037	Identifier	t_null		8928709	0					
ANR	8929038	ExpressionStatement	"data = ( const byte * ) ""null"""	376:12:13557:13584	8928709	22	True				
ANR	8929039	AssignmentExpression	"data = ( const byte * ) ""null"""		8928709	0		=			
ANR	8929040	Identifier	data		8928709	0					
ANR	8929041	CastExpression	"( const byte * ) ""null"""		8928709	1					
ANR	8929042	CastTarget	const byte *		8928709	0					
ANR	8929043	PrimaryExpression	"""null"""		8928709	1					
ANR	8929044	GotoStatement	goto rs ;	377:12:13598:13605	8928709	23	True				
ANR	8929045	Identifier	rs		8928709	0					
ANR	8929046	Label	case t_string :	378:8:13615:13628	8928709	24	True				
ANR	8929047	Identifier	t_string		8928709	0					
ANR	8929048	IfStatement	"if ( ! r_has_attr ( op , a_read ) )"		8928709	25					
ANR	8929049	Condition	"! r_has_attr ( op , a_read )"	379:16:13646:13668	8928709	0	True				
ANR	8929050	UnaryOperationExpression	"! r_has_attr ( op , a_read )"		8928709	0					
ANR	8929051	UnaryOperator	!		8928709	0					
ANR	8929052	CallExpression	"r_has_attr ( op , a_read )"		8928709	1					
ANR	8929053	Callee	r_has_attr		8928709	0					
ANR	8929054	Identifier	r_has_attr		8928709	0					
ANR	8929055	ArgumentList	op		8928709	1					
ANR	8929056	Argument	op		8928709	0					
ANR	8929057	Identifier	op		8928709	0					
ANR	8929058	Argument	a_read		8928709	1					
ANR	8929059	Identifier	a_read		8928709	0					
ANR	8929060	GotoStatement	goto other ;	380:16:13687:13697	8928709	1	True				
ANR	8929061	Identifier	other		8928709	0					
ANR	8929062	ExpressionStatement	size = r_size ( op )	381:12:13711:13728	8928709	26	True				
ANR	8929063	AssignmentExpression	size = r_size ( op )		8928709	0		=			
ANR	8929064	Identifier	size		8928709	0					
ANR	8929065	CallExpression	r_size ( op )		8928709	1					
ANR	8929066	Callee	r_size		8928709	0					
ANR	8929067	Identifier	r_size		8928709	0					
ANR	8929068	ArgumentList	op		8928709	1					
ANR	8929069	Argument	op		8928709	0					
ANR	8929070	Identifier	op		8928709	0					
ANR	8929071	CompoundStatement		80:16:3025:3039	8928709	27					
ANR	8929072	IdentifierDeclStatement	bool truncate = ( full_print == 1 && size > CVP_MAX_STRING ) ;	383:16:13760:13818	8928709	0	True				
ANR	8929073	IdentifierDecl	truncate = ( full_print == 1 && size > CVP_MAX_STRING )		8928709	0					
ANR	8929074	IdentifierDeclType	bool		8928709	0					
ANR	8929075	Identifier	truncate		8928709	1					
ANR	8929076	AssignmentExpression	truncate = ( full_print == 1 && size > CVP_MAX_STRING )		8928709	2		=			
ANR	8929077	Identifier	truncate		8928709	0					
ANR	8929078	AndExpression	full_print == 1 && size > CVP_MAX_STRING		8928709	1		&&			
ANR	8929079	EqualityExpression	full_print == 1		8928709	0		==			
ANR	8929080	Identifier	full_print		8928709	0					
ANR	8929081	PrimaryExpression	1		8928709	1					
ANR	8929082	RelationalExpression	size > CVP_MAX_STRING		8928709	1		>			
ANR	8929083	Identifier	size		8928709	0					
ANR	8929084	Identifier	CVP_MAX_STRING		8928709	1					
ANR	8929085	IdentifierDeclStatement	stream_cursor_read r ;	384:16:13836:13856	8928709	1	True				
ANR	8929086	IdentifierDecl	r		8928709	0					
ANR	8929087	IdentifierDeclType	stream_cursor_read		8928709	0					
ANR	8929088	Identifier	r		8928709	1					
ANR	8929089	IdentifierDeclStatement	stream_cursor_write w ;	385:16:13874:13895	8928709	2	True				
ANR	8929090	IdentifierDecl	w		8928709	0					
ANR	8929091	IdentifierDeclType	stream_cursor_write		8928709	0					
ANR	8929092	Identifier	w		8928709	1					
ANR	8929093	IdentifierDeclStatement	uint skip ;	386:16:13913:13922	8928709	3	True				
ANR	8929094	IdentifierDecl	skip		8928709	0					
ANR	8929095	IdentifierDeclType	uint		8928709	0					
ANR	8929096	Identifier	skip		8928709	1					
ANR	8929097	IdentifierDeclStatement	byte * wstr ;	387:16:13940:13950	8928709	4	True				
ANR	8929098	IdentifierDecl	* wstr		8928709	0					
ANR	8929099	IdentifierDeclType	byte *		8928709	0					
ANR	8929100	Identifier	wstr		8928709	1					
ANR	8929101	IdentifierDeclStatement	uint len1 ;	388:16:13968:13977	8928709	5	True				
ANR	8929102	IdentifierDecl	len1		8928709	0					
ANR	8929103	IdentifierDeclType	uint		8928709	0					
ANR	8929104	Identifier	len1		8928709	1					
ANR	8929105	IdentifierDeclStatement	int status = 1 ;	389:16:13995:14009	8928709	6	True				
ANR	8929106	IdentifierDecl	status = 1		8928709	0					
ANR	8929107	IdentifierDeclType	int		8928709	0					
ANR	8929108	Identifier	status		8928709	1					
ANR	8929109	AssignmentExpression	status = 1		8928709	2		=			
ANR	8929110	Identifier	status		8928709	0					
ANR	8929111	PrimaryExpression	1		8928709	1					
ANR	8929112	IfStatement	if ( start_pos == 0 )		8928709	7					
ANR	8929113	Condition	start_pos == 0	391:20:14032:14045	8928709	0	True				
ANR	8929114	EqualityExpression	start_pos == 0		8928709	0		==			
ANR	8929115	Identifier	start_pos		8928709	0					
ANR	8929116	PrimaryExpression	0		8928709	1					
ANR	8929117	CompoundStatement		82:36:3078:3078	8928709	1					
ANR	8929118	IfStatement	if ( len < 1 )		8928709	0					
ANR	8929119	Condition	len < 1	392:24:14074:14080	8928709	0	True				
ANR	8929120	RelationalExpression	len < 1		8928709	0		<			
ANR	8929121	Identifier	len		8928709	0					
ANR	8929122	PrimaryExpression	1		8928709	1					
ANR	8929123	ExpressionStatement	return_error ( gs_error_rangecheck )	393:24:14107:14140	8928709	1	True				
ANR	8929124	CallExpression	return_error ( gs_error_rangecheck )		8928709	0					
ANR	8929125	Callee	return_error		8928709	0					
ANR	8929126	Identifier	return_error		8928709	0					
ANR	8929127	ArgumentList	gs_error_rangecheck		8928709	1					
ANR	8929128	Argument	gs_error_rangecheck		8928709	0					
ANR	8929129	Identifier	gs_error_rangecheck		8928709	0					
ANR	8929130	ExpressionStatement	str [ 0 ] = '('	394:20:14162:14174	8928709	1	True				
ANR	8929131	AssignmentExpression	str [ 0 ] = '('		8928709	0		=			
ANR	8929132	ArrayIndexing	str [ 0 ]		8928709	0					
ANR	8929133	Identifier	str		8928709	0					
ANR	8929134	PrimaryExpression	0		8928709	1					
ANR	8929135	PrimaryExpression	'('		8928709	1					
ANR	8929136	ExpressionStatement	skip = 0	395:20:14196:14204	8928709	2	True				
ANR	8929137	AssignmentExpression	skip = 0		8928709	0		=			
ANR	8929138	Identifier	skip		8928709	0					
ANR	8929139	PrimaryExpression	0		8928709	1					
ANR	8929140	ExpressionStatement	wstr = str + 1	396:20:14226:14240	8928709	3	True				
ANR	8929141	AssignmentExpression	wstr = str + 1		8928709	0		=			
ANR	8929142	Identifier	wstr		8928709	0					
ANR	8929143	AdditiveExpression	str + 1		8928709	1		+			
ANR	8929144	Identifier	str		8928709	0					
ANR	8929145	PrimaryExpression	1		8928709	1					
ANR	8929146	ElseStatement	else		8928709	0					
ANR	8929147	CompoundStatement		88:23:3295:3295	8928709	0					
ANR	8929148	ExpressionStatement	skip = start_pos - 1	398:20:14287:14307	8928709	0	True				
ANR	8929149	AssignmentExpression	skip = start_pos - 1		8928709	0		=			
ANR	8929150	Identifier	skip		8928709	0					
ANR	8929151	AdditiveExpression	start_pos - 1		8928709	1		-			
ANR	8929152	Identifier	start_pos		8928709	0					
ANR	8929153	PrimaryExpression	1		8928709	1					
ANR	8929154	ExpressionStatement	wstr = str	399:20:14329:14339	8928709	1	True				
ANR	8929155	AssignmentExpression	wstr = str		8928709	0		=			
ANR	8929156	Identifier	wstr		8928709	0					
ANR	8929157	Identifier	str		8928709	1					
ANR	8929158	ExpressionStatement	len1 = len + ( str - wstr )	401:16:14375:14400	8928709	8	True				
ANR	8929159	AssignmentExpression	len1 = len + ( str - wstr )		8928709	0		=			
ANR	8929160	Identifier	len1		8928709	0					
ANR	8929161	AdditiveExpression	len + ( str - wstr )		8928709	1		+			
ANR	8929162	Identifier	len		8928709	0					
ANR	8929163	AdditiveExpression	str - wstr		8928709	1		-			
ANR	8929164	Identifier	str		8928709	0					
ANR	8929165	Identifier	wstr		8928709	1					
ANR	8929166	ExpressionStatement	r . ptr = op -> value . const_bytes - 1	402:16:14418:14451	8928709	9	True				
ANR	8929167	AssignmentExpression	r . ptr = op -> value . const_bytes - 1		8928709	0		=			
ANR	8929168	MemberAccess	r . ptr		8928709	0					
ANR	8929169	Identifier	r		8928709	0					
ANR	8929170	Identifier	ptr		8928709	1					
ANR	8929171	AdditiveExpression	op -> value . const_bytes - 1		8928709	1		-			
ANR	8929172	MemberAccess	op -> value . const_bytes		8928709	0					
ANR	8929173	PtrMemberAccess	op -> value		8928709	0					
ANR	8929174	Identifier	op		8928709	0					
ANR	8929175	Identifier	value		8928709	1					
ANR	8929176	Identifier	const_bytes		8928709	1					
ANR	8929177	PrimaryExpression	1		8928709	1					
ANR	8929178	ExpressionStatement	r . limit = r . ptr + ( truncate ? CVP_MAX_STRING : size )	403:16:14469:14521	8928709	10	True				
ANR	8929179	AssignmentExpression	r . limit = r . ptr + ( truncate ? CVP_MAX_STRING : size )		8928709	0		=			
ANR	8929180	MemberAccess	r . limit		8928709	0					
ANR	8929181	Identifier	r		8928709	0					
ANR	8929182	Identifier	limit		8928709	1					
ANR	8929183	AdditiveExpression	r . ptr + ( truncate ? CVP_MAX_STRING : size )		8928709	1		+			
ANR	8929184	MemberAccess	r . ptr		8928709	0					
ANR	8929185	Identifier	r		8928709	0					
ANR	8929186	Identifier	ptr		8928709	1					
ANR	8929187	ConditionalExpression	truncate ? CVP_MAX_STRING : size		8928709	1					
ANR	8929188	Condition	truncate		8928709	0					
ANR	8929189	Identifier	truncate		8928709	0					
ANR	8929190	Identifier	CVP_MAX_STRING		8928709	1					
ANR	8929191	Identifier	size		8928709	2					
ANR	8929192	WhileStatement	while ( skip && status == 1 )		8928709	11					
ANR	8929193	Condition	skip && status == 1	404:23:14546:14564	8928709	0	True				
ANR	8929194	AndExpression	skip && status == 1		8928709	0		&&			
ANR	8929195	Identifier	skip		8928709	0					
ANR	8929196	EqualityExpression	status == 1		8928709	1		==			
ANR	8929197	Identifier	status		8928709	0					
ANR	8929198	PrimaryExpression	1		8928709	1					
ANR	8929199	CompoundStatement		96:20:3619:3631	8928709	1					
ANR	8929200	IdentifierDeclStatement	uint written ;	405:20:14589:14601	8928709	0	True				
ANR	8929201	IdentifierDecl	written		8928709	0					
ANR	8929202	IdentifierDeclType	uint		8928709	0					
ANR	8929203	Identifier	written		8928709	1					
ANR	8929204	ExpressionStatement	w . ptr = ( byte * ) buf - 1	407:20:14624:14647	8928709	1	True				
ANR	8929205	AssignmentExpression	w . ptr = ( byte * ) buf - 1		8928709	0		=			
ANR	8929206	MemberAccess	w . ptr		8928709	0					
ANR	8929207	Identifier	w		8928709	0					
ANR	8929208	Identifier	ptr		8928709	1					
ANR	8929209	AdditiveExpression	( byte * ) buf - 1		8928709	1		-			
ANR	8929210	CastExpression	( byte * ) buf		8928709	0					
ANR	8929211	CastTarget	byte *		8928709	0					
ANR	8929212	Identifier	buf		8928709	1					
ANR	8929213	PrimaryExpression	1		8928709	1					
ANR	8929214	ExpressionStatement	"w . limit = w . ptr + min ( skip + len1 , sizeof ( buf ) )"	408:20:14669:14716	8928709	2	True				
ANR	8929215	AssignmentExpression	"w . limit = w . ptr + min ( skip + len1 , sizeof ( buf ) )"		8928709	0		=			
ANR	8929216	MemberAccess	w . limit		8928709	0					
ANR	8929217	Identifier	w		8928709	0					
ANR	8929218	Identifier	limit		8928709	1					
ANR	8929219	AdditiveExpression	"w . ptr + min ( skip + len1 , sizeof ( buf ) )"		8928709	1		+			
ANR	8929220	MemberAccess	w . ptr		8928709	0					
ANR	8929221	Identifier	w		8928709	0					
ANR	8929222	Identifier	ptr		8928709	1					
ANR	8929223	CallExpression	"min ( skip + len1 , sizeof ( buf ) )"		8928709	1					
ANR	8929224	Callee	min		8928709	0					
ANR	8929225	Identifier	min		8928709	0					
ANR	8929226	ArgumentList	skip + len1		8928709	1					
ANR	8929227	Argument	skip + len1		8928709	0					
ANR	8929228	AdditiveExpression	skip + len1		8928709	0		+			
ANR	8929229	Identifier	skip		8928709	0					
ANR	8929230	Identifier	len1		8928709	1					
ANR	8929231	Argument	sizeof ( buf )		8928709	1					
ANR	8929232	SizeofExpression	sizeof ( buf )		8928709	0					
ANR	8929233	Sizeof	sizeof		8928709	0					
ANR	8929234	SizeofOperand	buf		8928709	1					
ANR	8929235	ExpressionStatement	"status = s_PSSE_template . process ( NULL , & r , & w , false )"	409:20:14738:14791	8928709	3	True				
ANR	8929236	AssignmentExpression	"status = s_PSSE_template . process ( NULL , & r , & w , false )"		8928709	0		=			
ANR	8929237	Identifier	status		8928709	0					
ANR	8929238	CallExpression	"s_PSSE_template . process ( NULL , & r , & w , false )"		8928709	1					
ANR	8929239	Callee	s_PSSE_template . process		8928709	0					
ANR	8929240	MemberAccess	s_PSSE_template . process		8928709	0					
ANR	8929241	Identifier	s_PSSE_template		8928709	0					
ANR	8929242	Identifier	process		8928709	1					
ANR	8929243	ArgumentList	NULL		8928709	1					
ANR	8929244	Argument	NULL		8928709	0					
ANR	8929245	Identifier	NULL		8928709	0					
ANR	8929246	Argument	& r		8928709	1					
ANR	8929247	UnaryOperationExpression	& r		8928709	0					
ANR	8929248	UnaryOperator	&		8928709	0					
ANR	8929249	Identifier	r		8928709	1					
ANR	8929250	Argument	& w		8928709	2					
ANR	8929251	UnaryOperationExpression	& w		8928709	0					
ANR	8929252	UnaryOperator	&		8928709	0					
ANR	8929253	Identifier	w		8928709	1					
ANR	8929254	Argument	false		8928709	3					
ANR	8929255	Identifier	false		8928709	0					
ANR	8929256	ExpressionStatement	written = w . ptr - ( ( byte * ) buf - 1 )	410:20:14813:14848	8928709	4	True				
ANR	8929257	AssignmentExpression	written = w . ptr - ( ( byte * ) buf - 1 )		8928709	0		=			
ANR	8929258	Identifier	written		8928709	0					
ANR	8929259	AdditiveExpression	w . ptr - ( ( byte * ) buf - 1 )		8928709	1		-			
ANR	8929260	MemberAccess	w . ptr		8928709	0					
ANR	8929261	Identifier	w		8928709	0					
ANR	8929262	Identifier	ptr		8928709	1					
ANR	8929263	AdditiveExpression	( byte * ) buf - 1		8928709	1		-			
ANR	8929264	CastExpression	( byte * ) buf		8928709	0					
ANR	8929265	CastTarget	byte *		8928709	0					
ANR	8929266	Identifier	buf		8928709	1					
ANR	8929267	PrimaryExpression	1		8928709	1					
ANR	8929268	IfStatement	if ( written > skip )		8928709	5					
ANR	8929269	Condition	written > skip	411:24:14874:14887	8928709	0	True				
ANR	8929270	RelationalExpression	written > skip		8928709	0		>			
ANR	8929271	Identifier	written		8928709	0					
ANR	8929272	Identifier	skip		8928709	1					
ANR	8929273	CompoundStatement		102:40:3920:3920	8928709	1					
ANR	8929274	ExpressionStatement	written -= skip	412:24:14916:14931	8928709	0	True				
ANR	8929275	AssignmentExpression	written -= skip		8928709	0		-=			
ANR	8929276	Identifier	written		8928709	0					
ANR	8929277	Identifier	skip		8928709	1					
ANR	8929278	ExpressionStatement	"memcpy ( wstr , buf + skip , written )"	413:24:14957:14990	8928709	1	True				
ANR	8929279	CallExpression	"memcpy ( wstr , buf + skip , written )"		8928709	0					
ANR	8929280	Callee	memcpy		8928709	0					
ANR	8929281	Identifier	memcpy		8928709	0					
ANR	8929282	ArgumentList	wstr		8928709	1					
ANR	8929283	Argument	wstr		8928709	0					
ANR	8929284	Identifier	wstr		8928709	0					
ANR	8929285	Argument	buf + skip		8928709	1					
ANR	8929286	AdditiveExpression	buf + skip		8928709	0		+			
ANR	8929287	Identifier	buf		8928709	0					
ANR	8929288	Identifier	skip		8928709	1					
ANR	8929289	Argument	written		8928709	2					
ANR	8929290	Identifier	written		8928709	0					
ANR	8929291	ExpressionStatement	wstr += written	414:24:15016:15031	8928709	2	True				
ANR	8929292	AssignmentExpression	wstr += written		8928709	0		+=			
ANR	8929293	Identifier	wstr		8928709	0					
ANR	8929294	Identifier	written		8928709	1					
ANR	8929295	ExpressionStatement	skip = 0	415:24:15057:15065	8928709	3	True				
ANR	8929296	AssignmentExpression	skip = 0		8928709	0		=			
ANR	8929297	Identifier	skip		8928709	0					
ANR	8929298	PrimaryExpression	0		8928709	1					
ANR	8929299	BreakStatement	break ;	416:24:15091:15096	8928709	4	True				
ANR	8929300	ExpressionStatement	skip -= written	418:20:15140:15155	8928709	6	True				
ANR	8929301	AssignmentExpression	skip -= written		8928709	0		-=			
ANR	8929302	Identifier	skip		8928709	0					
ANR	8929303	Identifier	written		8928709	1					
ANR	8929304	IfStatement	if ( status == 0 )		8928709	12					
ANR	8929305	Condition	status == 0	424:20:15377:15387	8928709	0	True				
ANR	8929306	EqualityExpression	status == 0		8928709	0		==			
ANR	8929307	Identifier	status		8928709	0					
ANR	8929308	PrimaryExpression	0		8928709	1					
ANR	8929309	CompoundStatement		115:33:4420:4420	8928709	1					
ANR	8929310	IfStatement	if ( skip > ( truncate ? 4 : 1 ) )		8928709	0					
ANR	8929311	Condition	skip > ( truncate ? 4 : 1 )	426:24:15429:15453	8928709	0	True				
ANR	8929312	RelationalExpression	skip > ( truncate ? 4 : 1 )		8928709	0		>			
ANR	8929313	Identifier	skip		8928709	0					
ANR	8929314	ConditionalExpression	truncate ? 4 : 1		8928709	1					
ANR	8929315	Condition	truncate		8928709	0					
ANR	8929316	Identifier	truncate		8928709	0					
ANR	8929317	PrimaryExpression	4		8928709	1					
ANR	8929318	PrimaryExpression	1		8928709	2					
ANR	8929319	CompoundStatement		117:51:4486:4486	8928709	1					
ANR	8929320	ExpressionStatement	return_error ( gs_error_Fatal )	427:24:15482:15510	8928709	0	True				
ANR	8929321	CallExpression	return_error ( gs_error_Fatal )		8928709	0					
ANR	8929322	Callee	return_error		8928709	0					
ANR	8929323	Identifier	return_error		8928709	0					
ANR	8929324	ArgumentList	gs_error_Fatal		8928709	1					
ANR	8929325	Argument	gs_error_Fatal		8928709	0					
ANR	8929326	Identifier	gs_error_Fatal		8928709	0					
ANR	8929327	ExpressionStatement	w . ptr = wstr - 1	431:16:15575:15591	8928709	13	True				
ANR	8929328	AssignmentExpression	w . ptr = wstr - 1		8928709	0		=			
ANR	8929329	MemberAccess	w . ptr		8928709	0					
ANR	8929330	Identifier	w		8928709	0					
ANR	8929331	Identifier	ptr		8928709	1					
ANR	8929332	AdditiveExpression	wstr - 1		8928709	1		-			
ANR	8929333	Identifier	wstr		8928709	0					
ANR	8929334	PrimaryExpression	1		8928709	1					
ANR	8929335	ExpressionStatement	w . limit = str - 1 + len	432:16:15609:15632	8928709	14	True				
ANR	8929336	AssignmentExpression	w . limit = str - 1 + len		8928709	0		=			
ANR	8929337	MemberAccess	w . limit		8928709	0					
ANR	8929338	Identifier	w		8928709	0					
ANR	8929339	Identifier	limit		8928709	1					
ANR	8929340	AdditiveExpression	str - 1 + len		8928709	1		-			
ANR	8929341	Identifier	str		8928709	0					
ANR	8929342	AdditiveExpression	1 + len		8928709	1		+			
ANR	8929343	PrimaryExpression	1		8928709	0					
ANR	8929344	Identifier	len		8928709	1					
ANR	8929345	IfStatement	if ( status == 1 )		8928709	15					
ANR	8929346	Condition	status == 1	433:20:15654:15664	8928709	0	True				
ANR	8929347	EqualityExpression	status == 1		8928709	0		==			
ANR	8929348	Identifier	status		8928709	0					
ANR	8929349	PrimaryExpression	1		8928709	1					
ANR	8929350	ExpressionStatement	"status = s_PSSE_template . process ( NULL , & r , & w , false )"	434:20:15687:15740	8928709	1	True				
ANR	8929351	AssignmentExpression	"status = s_PSSE_template . process ( NULL , & r , & w , false )"		8928709	0		=			
ANR	8929352	Identifier	status		8928709	0					
ANR	8929353	CallExpression	"s_PSSE_template . process ( NULL , & r , & w , false )"		8928709	1					
ANR	8929354	Callee	s_PSSE_template . process		8928709	0					
ANR	8929355	MemberAccess	s_PSSE_template . process		8928709	0					
ANR	8929356	Identifier	s_PSSE_template		8928709	0					
ANR	8929357	Identifier	process		8928709	1					
ANR	8929358	ArgumentList	NULL		8928709	1					
ANR	8929359	Argument	NULL		8928709	0					
ANR	8929360	Identifier	NULL		8928709	0					
ANR	8929361	Argument	& r		8928709	1					
ANR	8929362	UnaryOperationExpression	& r		8928709	0					
ANR	8929363	UnaryOperator	&		8928709	0					
ANR	8929364	Identifier	r		8928709	1					
ANR	8929365	Argument	& w		8928709	2					
ANR	8929366	UnaryOperationExpression	& w		8928709	0					
ANR	8929367	UnaryOperator	&		8928709	0					
ANR	8929368	Identifier	w		8928709	1					
ANR	8929369	Argument	false		8928709	3					
ANR	8929370	Identifier	false		8928709	0					
ANR	8929371	ExpressionStatement	* prlen = w . ptr - ( str - 1 )	435:16:15758:15784	8928709	16	True				
ANR	8929372	AssignmentExpression	* prlen = w . ptr - ( str - 1 )		8928709	0		=			
ANR	8929373	UnaryOperationExpression	* prlen		8928709	0					
ANR	8929374	UnaryOperator	*		8928709	0					
ANR	8929375	Identifier	prlen		8928709	1					
ANR	8929376	AdditiveExpression	w . ptr - ( str - 1 )		8928709	1		-			
ANR	8929377	MemberAccess	w . ptr		8928709	0					
ANR	8929378	Identifier	w		8928709	0					
ANR	8929379	Identifier	ptr		8928709	1					
ANR	8929380	AdditiveExpression	str - 1		8928709	1		-			
ANR	8929381	Identifier	str		8928709	0					
ANR	8929382	PrimaryExpression	1		8928709	1					
ANR	8929383	IfStatement	if ( status != 0 )		8928709	17					
ANR	8929384	Condition	status != 0	436:20:15806:15816	8928709	0	True				
ANR	8929385	EqualityExpression	status != 0		8928709	0		!=			
ANR	8929386	Identifier	status		8928709	0					
ANR	8929387	PrimaryExpression	0		8928709	1					
ANR	8929388	ReturnStatement	return 1 ;	437:20:15839:15847	8928709	1	True				
ANR	8929389	PrimaryExpression	1		8928709	0					
ANR	8929390	IfStatement	if ( truncate )		8928709	18					
ANR	8929391	Condition	truncate	438:20:15869:15876	8928709	0	True				
ANR	8929392	Identifier	truncate		8928709	0					
ANR	8929393	CompoundStatement		129:30:4909:4909	8928709	1					
ANR	8929394	IfStatement	if ( len - * prlen < 4 - skip )		8928709	0					
ANR	8929395	Condition	len - * prlen < 4 - skip	439:24:15905:15927	8928709	0	True				
ANR	8929396	RelationalExpression	len - * prlen < 4 - skip		8928709	0		<			
ANR	8929397	AdditiveExpression	len - * prlen		8928709	0		-			
ANR	8929398	Identifier	len		8928709	0					
ANR	8929399	UnaryOperationExpression	* prlen		8928709	1					
ANR	8929400	UnaryOperator	*		8928709	0					
ANR	8929401	Identifier	prlen		8928709	1					
ANR	8929402	AdditiveExpression	4 - skip		8928709	1		-			
ANR	8929403	PrimaryExpression	4		8928709	0					
ANR	8929404	Identifier	skip		8928709	1					
ANR	8929405	ReturnStatement	return 1 ;	440:24:15954:15962	8928709	1	True				
ANR	8929406	PrimaryExpression	1		8928709	0					
ANR	8929407	ExpressionStatement	"memcpy ( w . ptr + 1 , & ""...)"" [ skip ] , 4 - skip )"	441:20:15984:16026	8928709	1	True				
ANR	8929408	CallExpression	"memcpy ( w . ptr + 1 , & ""...)"" [ skip ] , 4 - skip )"		8928709	0					
ANR	8929409	Callee	memcpy		8928709	0					
ANR	8929410	Identifier	memcpy		8928709	0					
ANR	8929411	ArgumentList	w . ptr + 1		8928709	1					
ANR	8929412	Argument	w . ptr + 1		8928709	0					
ANR	8929413	AdditiveExpression	w . ptr + 1		8928709	0		+			
ANR	8929414	MemberAccess	w . ptr		8928709	0					
ANR	8929415	Identifier	w		8928709	0					
ANR	8929416	Identifier	ptr		8928709	1					
ANR	8929417	PrimaryExpression	1		8928709	1					
ANR	8929418	Argument	"& ""...)"" [ skip ]"		8928709	1					
ANR	8929419	UnaryOperationExpression	"& ""...)"" [ skip ]"		8928709	0					
ANR	8929420	UnaryOperator	&		8928709	0					
ANR	8929421	ArrayIndexing	"""...)"" [ skip ]"		8928709	1					
ANR	8929422	PrimaryExpression	"""...)"""		8928709	0					
ANR	8929423	Identifier	skip		8928709	1					
ANR	8929424	Argument	4 - skip		8928709	2					
ANR	8929425	AdditiveExpression	4 - skip		8928709	0		-			
ANR	8929426	PrimaryExpression	4		8928709	0					
ANR	8929427	Identifier	skip		8928709	1					
ANR	8929428	ExpressionStatement	* prlen += 4 - skip	442:20:16048:16066	8928709	2	True				
ANR	8929429	AssignmentExpression	* prlen += 4 - skip		8928709	0		+=			
ANR	8929430	UnaryOperationExpression	* prlen		8928709	0					
ANR	8929431	UnaryOperator	*		8928709	0					
ANR	8929432	Identifier	prlen		8928709	1					
ANR	8929433	AdditiveExpression	4 - skip		8928709	1		-			
ANR	8929434	PrimaryExpression	4		8928709	0					
ANR	8929435	Identifier	skip		8928709	1					
ANR	8929436	ElseStatement	else		8928709	0					
ANR	8929437	CompoundStatement		134:23:5121:5121	8928709	0					
ANR	8929438	IfStatement	if ( len - * prlen < 1 - skip )		8928709	0					
ANR	8929439	Condition	len - * prlen < 1 - skip	444:24:16117:16139	8928709	0	True				
ANR	8929440	RelationalExpression	len - * prlen < 1 - skip		8928709	0		<			
ANR	8929441	AdditiveExpression	len - * prlen		8928709	0		-			
ANR	8929442	Identifier	len		8928709	0					
ANR	8929443	UnaryOperationExpression	* prlen		8928709	1					
ANR	8929444	UnaryOperator	*		8928709	0					
ANR	8929445	Identifier	prlen		8928709	1					
ANR	8929446	AdditiveExpression	1 - skip		8928709	1		-			
ANR	8929447	PrimaryExpression	1		8928709	0					
ANR	8929448	Identifier	skip		8928709	1					
ANR	8929449	ReturnStatement	return 1 ;	445:24:16166:16174	8928709	1	True				
ANR	8929450	PrimaryExpression	1		8928709	0					
ANR	8929451	IfStatement	if ( ! skip )		8928709	1					
ANR	8929452	Condition	! skip	446:24:16200:16204	8928709	0	True				
ANR	8929453	UnaryOperationExpression	! skip		8928709	0					
ANR	8929454	UnaryOperator	!		8928709	0					
ANR	8929455	Identifier	skip		8928709	1					
ANR	8929456	CompoundStatement		137:31:5237:5237	8928709	1					
ANR	8929457	ExpressionStatement	w . ptr [ 1 ] = ')'	447:24:16233:16247	8928709	0	True				
ANR	8929458	AssignmentExpression	w . ptr [ 1 ] = ')'		8928709	0		=			
ANR	8929459	ArrayIndexing	w . ptr [ 1 ]		8928709	0					
ANR	8929460	MemberAccess	w . ptr		8928709	0					
ANR	8929461	Identifier	w		8928709	0					
ANR	8929462	Identifier	ptr		8928709	1					
ANR	8929463	PrimaryExpression	1		8928709	1					
ANR	8929464	PrimaryExpression	')'		8928709	1					
ANR	8929465	ExpressionStatement	* prlen += 1	448:24:16273:16284	8928709	1	True				
ANR	8929466	AssignmentExpression	* prlen += 1		8928709	0		+=			
ANR	8929467	UnaryOperationExpression	* prlen		8928709	0					
ANR	8929468	UnaryOperator	*		8928709	0					
ANR	8929469	Identifier	prlen		8928709	1					
ANR	8929470	PrimaryExpression	1		8928709	1					
ANR	8929471	ReturnStatement	return 0 ;	452:12:16352:16360	8928709	28	True				
ANR	8929472	PrimaryExpression	0		8928709	0					
ANR	8929473	Label	case t_astruct :	453:8:16370:16384	8928709	29	True				
ANR	8929474	Identifier	t_astruct		8928709	0					
ANR	8929475	Label	case t_struct :	454:8:16394:16407	8928709	30	True				
ANR	8929476	Identifier	t_struct		8928709	0					
ANR	8929477	IfStatement	if ( r_is_foreign ( op ) )		8928709	31					
ANR	8929478	Condition	r_is_foreign ( op )	455:16:16425:16440	8928709	0	True				
ANR	8929479	CallExpression	r_is_foreign ( op )		8928709	0					
ANR	8929480	Callee	r_is_foreign		8928709	0					
ANR	8929481	Identifier	r_is_foreign		8928709	0					
ANR	8929482	ArgumentList	op		8928709	1					
ANR	8929483	Argument	op		8928709	0					
ANR	8929484	Identifier	op		8928709	0					
ANR	8929485	CompoundStatement		146:34:5473:5473	8928709	1					
ANR	8929486	ExpressionStatement	"data = ( const byte * ) ""-foreign-struct-"""	457:16:16512:16551	8928709	0	True				
ANR	8929487	AssignmentExpression	"data = ( const byte * ) ""-foreign-struct-"""		8928709	0		=			
ANR	8929488	Identifier	data		8928709	0					
ANR	8929489	CastExpression	"( const byte * ) ""-foreign-struct-"""		8928709	1					
ANR	8929490	CastTarget	const byte *		8928709	0					
ANR	8929491	PrimaryExpression	"""-foreign-struct-"""		8928709	1					
ANR	8929492	GotoStatement	goto rs ;	458:16:16569:16576	8928709	1	True				
ANR	8929493	Identifier	rs		8928709	0					
ANR	8929494	IfStatement	if ( ! mem )		8928709	32					
ANR	8929495	Condition	! mem	460:16:16608:16611	8928709	0	True				
ANR	8929496	UnaryOperationExpression	! mem		8928709	0					
ANR	8929497	UnaryOperator	!		8928709	0					
ANR	8929498	Identifier	mem		8928709	1					
ANR	8929499	CompoundStatement		151:22:5644:5644	8928709	1					
ANR	8929500	ExpressionStatement	"data = ( const byte * ) ""-(struct)-"""	461:16:16632:16665	8928709	0	True				
ANR	8929501	AssignmentExpression	"data = ( const byte * ) ""-(struct)-"""		8928709	0		=			
ANR	8929502	Identifier	data		8928709	0					
ANR	8929503	CastExpression	"( const byte * ) ""-(struct)-"""		8928709	1					
ANR	8929504	CastTarget	const byte *		8928709	0					
ANR	8929505	PrimaryExpression	"""-(struct)-"""		8928709	1					
ANR	8929506	GotoStatement	goto rs ;	462:16:16683:16690	8928709	1	True				
ANR	8929507	Identifier	rs		8928709	0					
ANR	8929508	ExpressionStatement	"data = ( const byte * ) gs_struct_type_name_string ( gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct ) )"	464:12:16718:16913	8928709	33	True				
ANR	8929509	AssignmentExpression	"data = ( const byte * ) gs_struct_type_name_string ( gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct ) )"		8928709	0		=			
ANR	8929510	Identifier	data		8928709	0					
ANR	8929511	CastExpression	"( const byte * ) gs_struct_type_name_string ( gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct ) )"		8928709	1					
ANR	8929512	CastTarget	const byte *		8928709	0					
ANR	8929513	CallExpression	"gs_struct_type_name_string ( gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct ) )"		8928709	1					
ANR	8929514	Callee	gs_struct_type_name_string		8928709	0					
ANR	8929515	Identifier	gs_struct_type_name_string		8928709	0					
ANR	8929516	ArgumentList	"gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct )"		8928709	1					
ANR	8929517	Argument	"gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct )"		8928709	0					
ANR	8929518	CallExpression	"gs_object_type ( mem , ( const obj_header_t * ) op -> value . pstruct )"		8928709	0					
ANR	8929519	Callee	gs_object_type		8928709	0					
ANR	8929520	Identifier	gs_object_type		8928709	0					
ANR	8929521	ArgumentList	mem		8928709	1					
ANR	8929522	Argument	mem		8928709	0					
ANR	8929523	Identifier	mem		8928709	0					
ANR	8929524	Argument	( const obj_header_t * ) op -> value . pstruct		8928709	1					
ANR	8929525	CastExpression	( const obj_header_t * ) op -> value . pstruct		8928709	0					
ANR	8929526	CastTarget	const obj_header_t *		8928709	0					
ANR	8929527	MemberAccess	op -> value . pstruct		8928709	1					
ANR	8929528	PtrMemberAccess	op -> value		8928709	0					
ANR	8929529	Identifier	op		8928709	0					
ANR	8929530	Identifier	value		8928709	1					
ANR	8929531	Identifier	pstruct		8928709	1					
ANR	8929532	ExpressionStatement	size = strlen ( ( const char * ) data )	468:12:16927:16960	8928709	34	True				
ANR	8929533	AssignmentExpression	size = strlen ( ( const char * ) data )		8928709	0		=			
ANR	8929534	Identifier	size		8928709	0					
ANR	8929535	CallExpression	strlen ( ( const char * ) data )		8928709	1					
ANR	8929536	Callee	strlen		8928709	0					
ANR	8929537	Identifier	strlen		8928709	0					
ANR	8929538	ArgumentList	( const char * ) data		8928709	1					
ANR	8929539	Argument	( const char * ) data		8928709	0					
ANR	8929540	CastExpression	( const char * ) data		8928709	0					
ANR	8929541	CastTarget	const char *		8928709	0					
ANR	8929542	Identifier	data		8928709	1					
ANR	8929543	IfStatement	"if ( size > 4 && ! memcmp ( data + size - 4 , ""type"" , 4 ) )"		8928709	35					
ANR	8929544	Condition	"size > 4 && ! memcmp ( data + size - 4 , ""type"" , 4 )"	469:16:16978:17024	8928709	0	True				
ANR	8929545	AndExpression	"size > 4 && ! memcmp ( data + size - 4 , ""type"" , 4 )"		8928709	0		&&			
ANR	8929546	RelationalExpression	size > 4		8928709	0		>			
ANR	8929547	Identifier	size		8928709	0					
ANR	8929548	PrimaryExpression	4		8928709	1					
ANR	8929549	UnaryOperationExpression	"! memcmp ( data + size - 4 , ""type"" , 4 )"		8928709	1					
ANR	8929550	UnaryOperator	!		8928709	0					
ANR	8929551	CallExpression	"memcmp ( data + size - 4 , ""type"" , 4 )"		8928709	1					
ANR	8929552	Callee	memcmp		8928709	0					
ANR	8929553	Identifier	memcmp		8928709	0					
ANR	8929554	ArgumentList	data + size - 4		8928709	1					
ANR	8929555	Argument	data + size - 4		8928709	0					
ANR	8929556	AdditiveExpression	data + size - 4		8928709	0		+			
ANR	8929557	Identifier	data		8928709	0					
ANR	8929558	AdditiveExpression	size - 4		8928709	1		-			
ANR	8929559	Identifier	size		8928709	0					
ANR	8929560	PrimaryExpression	4		8928709	1					
ANR	8929561	Argument	"""type"""		8928709	1					
ANR	8929562	PrimaryExpression	"""type"""		8928709	0					
ANR	8929563	Argument	4		8928709	2					
ANR	8929564	PrimaryExpression	4		8928709	0					
ANR	8929565	ExpressionStatement	size -= 4	470:16:17043:17052	8928709	1	True				
ANR	8929566	AssignmentExpression	size -= 4		8928709	0		-=			
ANR	8929567	Identifier	size		8928709	0					
ANR	8929568	PrimaryExpression	4		8928709	1					
ANR	8929569	IfStatement	if ( size > sizeof ( buf ) - 3 )		8928709	36					
ANR	8929570	Condition	size > sizeof ( buf ) - 3	471:16:17070:17091	8928709	0	True				
ANR	8929571	RelationalExpression	size > sizeof ( buf ) - 3		8928709	0		>			
ANR	8929572	Identifier	size		8928709	0					
ANR	8929573	AdditiveExpression	sizeof ( buf ) - 3		8928709	1		-			
ANR	8929574	SizeofExpression	sizeof ( buf )		8928709	0					
ANR	8929575	Sizeof	sizeof		8928709	0					
ANR	8929576	SizeofOperand	buf		8928709	1					
ANR	8929577	PrimaryExpression	3		8928709	1					
ANR	8929578	ExpressionStatement	return_error ( gs_error_rangecheck )	472:16:17110:17143	8928709	1	True				
ANR	8929579	CallExpression	return_error ( gs_error_rangecheck )		8928709	0					
ANR	8929580	Callee	return_error		8928709	0					
ANR	8929581	Identifier	return_error		8928709	0					
ANR	8929582	ArgumentList	gs_error_rangecheck		8928709	1					
ANR	8929583	Argument	gs_error_rangecheck		8928709	0					
ANR	8929584	Identifier	gs_error_rangecheck		8928709	0					
ANR	8929585	ExpressionStatement	buf [ 0 ] = '-'	473:12:17157:17169	8928709	37	True				
ANR	8929586	AssignmentExpression	buf [ 0 ] = '-'		8928709	0		=			
ANR	8929587	ArrayIndexing	buf [ 0 ]		8928709	0					
ANR	8929588	Identifier	buf		8928709	0					
ANR	8929589	PrimaryExpression	0		8928709	1					
ANR	8929590	PrimaryExpression	'-'		8928709	1					
ANR	8929591	ExpressionStatement	"memcpy ( buf + 1 , data , size )"	474:12:17183:17210	8928709	38	True				
ANR	8929592	CallExpression	"memcpy ( buf + 1 , data , size )"		8928709	0					
ANR	8929593	Callee	memcpy		8928709	0					
ANR	8929594	Identifier	memcpy		8928709	0					
ANR	8929595	ArgumentList	buf + 1		8928709	1					
ANR	8929596	Argument	buf + 1		8928709	0					
ANR	8929597	AdditiveExpression	buf + 1		8928709	0		+			
ANR	8929598	Identifier	buf		8928709	0					
ANR	8929599	PrimaryExpression	1		8928709	1					
ANR	8929600	Argument	data		8928709	1					
ANR	8929601	Identifier	data		8928709	0					
ANR	8929602	Argument	size		8928709	2					
ANR	8929603	Identifier	size		8928709	0					
ANR	8929604	ExpressionStatement	buf [ size + 1 ] = '-'	475:12:17224:17243	8928709	39	True				
ANR	8929605	AssignmentExpression	buf [ size + 1 ] = '-'		8928709	0		=			
ANR	8929606	ArrayIndexing	buf [ size + 1 ]		8928709	0					
ANR	8929607	Identifier	buf		8928709	0					
ANR	8929608	AdditiveExpression	size + 1		8928709	1		+			
ANR	8929609	Identifier	size		8928709	0					
ANR	8929610	PrimaryExpression	1		8928709	1					
ANR	8929611	PrimaryExpression	'-'		8928709	1					
ANR	8929612	ExpressionStatement	size += 2	476:12:17257:17266	8928709	40	True				
ANR	8929613	AssignmentExpression	size += 2		8928709	0		+=			
ANR	8929614	Identifier	size		8928709	0					
ANR	8929615	PrimaryExpression	2		8928709	1					
ANR	8929616	ExpressionStatement	data = ( const byte * ) buf	477:12:17280:17304	8928709	41	True				
ANR	8929617	AssignmentExpression	data = ( const byte * ) buf		8928709	0		=			
ANR	8929618	Identifier	data		8928709	0					
ANR	8929619	CastExpression	( const byte * ) buf		8928709	1					
ANR	8929620	CastTarget	const byte *		8928709	0					
ANR	8929621	Identifier	buf		8928709	1					
ANR	8929622	GotoStatement	goto nl ;	478:12:17318:17325	8928709	42	True				
ANR	8929623	Identifier	nl		8928709	0					
ANR	8929624	Label	default :	479:8:17335:17342	8928709	43	True				
ANR	8929625	Identifier	default		8928709	0					
ANR	8929626	Label	other :	480:0:17344:17349	8928709	44	True				
ANR	8929627	Identifier	other		8928709	0					
ANR	8929628	CompoundStatement		173:16:6411:6434	8928709	45					
ANR	8929629	IdentifierDeclStatement	int rtype = r_btype ( op ) ;	482:16:17381:17404	8928709	0	True				
ANR	8929630	IdentifierDecl	rtype = r_btype ( op )		8928709	0					
ANR	8929631	IdentifierDeclType	int		8928709	0					
ANR	8929632	Identifier	rtype		8928709	1					
ANR	8929633	AssignmentExpression	rtype = r_btype ( op )		8928709	2		=			
ANR	8929634	Identifier	rtype		8928709	0					
ANR	8929635	CallExpression	r_btype ( op )		8928709	1					
ANR	8929636	Callee	r_btype		8928709	0					
ANR	8929637	Identifier	r_btype		8928709	0					
ANR	8929638	ArgumentList	op		8928709	1					
ANR	8929639	Argument	op		8928709	0					
ANR	8929640	Identifier	op		8928709	0					
ANR	8929641	IfStatement	if ( rtype >= countof ( type_strings ) )		8928709	1					
ANR	8929642	Condition	rtype >= countof ( type_strings )	484:20:17427:17456	8928709	0	True				
ANR	8929643	RelationalExpression	rtype >= countof ( type_strings )		8928709	0		>=			
ANR	8929644	Identifier	rtype		8928709	0					
ANR	8929645	CallExpression	countof ( type_strings )		8928709	1					
ANR	8929646	Callee	countof		8928709	0					
ANR	8929647	Identifier	countof		8928709	0					
ANR	8929648	ArgumentList	type_strings		8928709	1					
ANR	8929649	Argument	type_strings		8928709	0					
ANR	8929650	Identifier	type_strings		8928709	0					
ANR	8929651	ExpressionStatement	return_error ( gs_error_rangecheck )	485:20:17479:17512	8928709	1	True				
ANR	8929652	CallExpression	return_error ( gs_error_rangecheck )		8928709	0					
ANR	8929653	Callee	return_error		8928709	0					
ANR	8929654	Identifier	return_error		8928709	0					
ANR	8929655	ArgumentList	gs_error_rangecheck		8928709	1					
ANR	8929656	Argument	gs_error_rangecheck		8928709	0					
ANR	8929657	Identifier	gs_error_rangecheck		8928709	0					
ANR	8929658	ExpressionStatement	data = ( const byte * ) type_strings [ rtype ]	486:16:17530:17570	8928709	2	True				
ANR	8929659	AssignmentExpression	data = ( const byte * ) type_strings [ rtype ]		8928709	0		=			
ANR	8929660	Identifier	data		8928709	0					
ANR	8929661	CastExpression	( const byte * ) type_strings [ rtype ]		8928709	1					
ANR	8929662	CastTarget	const byte *		8928709	0					
ANR	8929663	ArrayIndexing	type_strings [ rtype ]		8928709	1					
ANR	8929664	Identifier	type_strings		8928709	0					
ANR	8929665	Identifier	rtype		8928709	1					
ANR	8929666	IfStatement	if ( data == 0 )		8928709	3					
ANR	8929667	Condition	data == 0	487:20:17592:17600	8928709	0	True				
ANR	8929668	EqualityExpression	data == 0		8928709	0		==			
ANR	8929669	Identifier	data		8928709	0					
ANR	8929670	PrimaryExpression	0		8928709	1					
ANR	8929671	ExpressionStatement	return_error ( gs_error_rangecheck )	488:20:17623:17656	8928709	1	True				
ANR	8929672	CallExpression	return_error ( gs_error_rangecheck )		8928709	0					
ANR	8929673	Callee	return_error		8928709	0					
ANR	8929674	Identifier	return_error		8928709	0					
ANR	8929675	ArgumentList	gs_error_rangecheck		8928709	1					
ANR	8929676	Argument	gs_error_rangecheck		8928709	0					
ANR	8929677	Identifier	gs_error_rangecheck		8928709	0					
ANR	8929678	GotoStatement	goto rs ;	490:12:17684:17691	8928709	46	True				
ANR	8929679	Identifier	rs		8928709	0					
ANR	8929680	SwitchStatement	switch ( r_btype ( op ) )		8928709	6					
ANR	8929681	Condition	r_btype ( op )	494:12:17746:17756	8928709	0	True				
ANR	8929682	CallExpression	r_btype ( op )		8928709	0					
ANR	8929683	Callee	r_btype		8928709	0					
ANR	8929684	Identifier	r_btype		8928709	0					
ANR	8929685	ArgumentList	op		8928709	1					
ANR	8929686	Argument	op		8928709	0					
ANR	8929687	Identifier	op		8928709	0					
ANR	8929688	CompoundStatement		185:25:6789:6789	8928709	1					
ANR	8929689	Label	case t_boolean :	495:4:17765:17779	8928709	0	True				
ANR	8929690	Identifier	t_boolean		8928709	0					
ANR	8929691	ExpressionStatement	"data = ( const byte * ) ( op -> value . boolval ? ""true"" : ""false"" )"	496:8:17789:17848	8928709	1	True				
ANR	8929692	AssignmentExpression	"data = ( const byte * ) ( op -> value . boolval ? ""true"" : ""false"" )"		8928709	0		=			
ANR	8929693	Identifier	data		8928709	0					
ANR	8929694	CastExpression	"( const byte * ) ( op -> value . boolval ? ""true"" : ""false"" )"		8928709	1					
ANR	8929695	CastTarget	const byte *		8928709	0					
ANR	8929696	ConditionalExpression	"op -> value . boolval ? ""true"" : ""false"""		8928709	1					
ANR	8929697	Condition	op -> value . boolval		8928709	0					
ANR	8929698	MemberAccess	op -> value . boolval		8928709	0					
ANR	8929699	PtrMemberAccess	op -> value		8928709	0					
ANR	8929700	Identifier	op		8928709	0					
ANR	8929701	Identifier	value		8928709	1					
ANR	8929702	Identifier	boolval		8928709	1					
ANR	8929703	PrimaryExpression	"""true"""		8928709	1					
ANR	8929704	PrimaryExpression	"""false"""		8928709	2					
ANR	8929705	BreakStatement	break ;	497:8:17858:17863	8928709	2	True				
ANR	8929706	Label	case t_integer :	498:4:17869:17883	8928709	3	True				
ANR	8929707	Identifier	t_integer		8928709	0					
ANR	8929708	Statement	gs_sprintf	499:8:17893:17902	8928709	4	True				
ANR	8929709	Statement	(	499:18:17903:17903	8928709	5	True				
ANR	8929710	Statement	buf	499:19:17904:17906	8928709	6	True				
ANR	8929711	Statement	","	499:22:17907:17907	8928709	7	True				
ANR	8929712	Statement	"""%"""	499:24:17909:17911	8928709	8	True				
ANR	8929713	Statement	PRIpsint	499:27:17912:17919	8928709	9	True				
ANR	8929714	Statement	","	499:35:17920:17920	8928709	10	True				
ANR	8929715	Statement	op	499:37:17922:17923	8928709	11	True				
ANR	8929716	Statement	->	499:39:17924:17925	8928709	12	True				
ANR	8929717	Statement	value	499:41:17926:17930	8928709	13	True				
ANR	8929718	Statement	.	499:46:17931:17931	8928709	14	True				
ANR	8929719	Statement	intval	499:47:17932:17937	8928709	15	True				
ANR	8929720	Statement	)	499:53:17938:17938	8928709	16	True				
ANR	8929721	ExpressionStatement		499:54:17939:17939	8928709	17	True				
ANR	8929722	BreakStatement	break ;	500:8:17949:17954	8928709	18	True				
ANR	8929723	Label	case t_string :	501:4:17960:17973	8928709	19	True				
ANR	8929724	Identifier	t_string		8928709	0					
ANR	8929725	ExpressionStatement	check_read ( * op )	502:8:17983:17998	8928709	20	True				
ANR	8929726	CallExpression	check_read ( * op )		8928709	0					
ANR	8929727	Callee	check_read		8928709	0					
ANR	8929728	Identifier	check_read		8928709	0					
ANR	8929729	ArgumentList	* op		8928709	1					
ANR	8929730	Argument	* op		8928709	0					
ANR	8929731	UnaryOperationExpression	* op		8928709	0					
ANR	8929732	UnaryOperator	*		8928709	0					
ANR	8929733	Identifier	op		8928709	1					
ANR	8929734	Label	case t_name :	504:4:18032:18043	8928709	21	True				
ANR	8929735	Identifier	t_name		8928709	0					
ANR	8929736	ExpressionStatement	"code = obj_string_data ( mem , op , & data , & size )"	505:8:18053:18098	8928709	22	True				
ANR	8929737	AssignmentExpression	"code = obj_string_data ( mem , op , & data , & size )"		8928709	0		=			
ANR	8929738	Identifier	code		8928709	0					
ANR	8929739	CallExpression	"obj_string_data ( mem , op , & data , & size )"		8928709	1					
ANR	8929740	Callee	obj_string_data		8928709	0					
ANR	8929741	Identifier	obj_string_data		8928709	0					
ANR	8929742	ArgumentList	mem		8928709	1					
ANR	8929743	Argument	mem		8928709	0					
ANR	8929744	Identifier	mem		8928709	0					
ANR	8929745	Argument	op		8928709	1					
ANR	8929746	Identifier	op		8928709	0					
ANR	8929747	Argument	& data		8928709	2					
ANR	8929748	UnaryOperationExpression	& data		8928709	0					
ANR	8929749	UnaryOperator	&		8928709	0					
ANR	8929750	Identifier	data		8928709	1					
ANR	8929751	Argument	& size		8928709	3					
ANR	8929752	UnaryOperationExpression	& size		8928709	0					
ANR	8929753	UnaryOperator	&		8928709	0					
ANR	8929754	Identifier	size		8928709	1					
ANR	8929755	IfStatement	if ( code < 0 )		8928709	23					
ANR	8929756	Condition	code < 0	506:12:18112:18119	8928709	0	True				
ANR	8929757	RelationalExpression	code < 0		8928709	0		<			
ANR	8929758	Identifier	code		8928709	0					
ANR	8929759	PrimaryExpression	0		8928709	1					
ANR	8929760	ReturnStatement	return code ;	507:12:18134:18145	8928709	1	True				
ANR	8929761	Identifier	code		8928709	0					
ANR	8929762	GotoStatement	goto nl ;	508:8:18155:18162	8928709	24	True				
ANR	8929763	Identifier	nl		8928709	0					
ANR	8929764	Label	case t_oparray :	509:4:18168:18182	8928709	25	True				
ANR	8929765	Identifier	t_oparray		8928709	0					
ANR	8929766	CompoundStatement		202:8:7259:7311	8928709	26					
ANR	8929767	IdentifierDeclStatement	uint index = op_index ( op ) ;	510:8:18194:18219	8928709	0	True				
ANR	8929768	IdentifierDecl	index = op_index ( op )		8928709	0					
ANR	8929769	IdentifierDeclType	uint		8928709	0					
ANR	8929770	Identifier	index		8928709	1					
ANR	8929771	AssignmentExpression	index = op_index ( op )		8928709	2		=			
ANR	8929772	Identifier	index		8928709	0					
ANR	8929773	CallExpression	op_index ( op )		8928709	1					
ANR	8929774	Callee	op_index		8928709	0					
ANR	8929775	Identifier	op_index		8928709	0					
ANR	8929776	ArgumentList	op		8928709	1					
ANR	8929777	Argument	op		8928709	0					
ANR	8929778	Identifier	op		8928709	0					
ANR	8929779	IdentifierDeclStatement	"const op_array_table * opt = get_op_array ( mem , index ) ;"	511:8:18229:18281	8928709	1	True				
ANR	8929780	IdentifierDecl	"* opt = get_op_array ( mem , index )"		8928709	0					
ANR	8929781	IdentifierDeclType	const op_array_table *		8928709	0					
ANR	8929782	Identifier	opt		8928709	1					
ANR	8929783	AssignmentExpression	"* opt = get_op_array ( mem , index )"		8928709	2		=			
ANR	8929784	Identifier	opt		8928709	0					
ANR	8929785	CallExpression	"get_op_array ( mem , index )"		8928709	1					
ANR	8929786	Callee	get_op_array		8928709	0					
ANR	8929787	Identifier	get_op_array		8928709	0					
ANR	8929788	ArgumentList	mem		8928709	1					
ANR	8929789	Argument	mem		8928709	0					
ANR	8929790	Identifier	mem		8928709	0					
ANR	8929791	Argument	index		8928709	1					
ANR	8929792	Identifier	index		8928709	0					
ANR	8929793	ExpressionStatement	"name_index_ref ( mem , opt -> nx_table [ index - opt -> base_index ] , & nref )"	513:8:18292:18358	8928709	2	True				
ANR	8929794	CallExpression	"name_index_ref ( mem , opt -> nx_table [ index - opt -> base_index ] , & nref )"		8928709	0					
ANR	8929795	Callee	name_index_ref		8928709	0					
ANR	8929796	Identifier	name_index_ref		8928709	0					
ANR	8929797	ArgumentList	mem		8928709	1					
ANR	8929798	Argument	mem		8928709	0					
ANR	8929799	Identifier	mem		8928709	0					
ANR	8929800	Argument	opt -> nx_table [ index - opt -> base_index ]		8928709	1					
ANR	8929801	ArrayIndexing	opt -> nx_table [ index - opt -> base_index ]		8928709	0					
ANR	8929802	PtrMemberAccess	opt -> nx_table		8928709	0					
ANR	8929803	Identifier	opt		8928709	0					
ANR	8929804	Identifier	nx_table		8928709	1					
ANR	8929805	AdditiveExpression	index - opt -> base_index		8928709	1		-			
ANR	8929806	Identifier	index		8928709	0					
ANR	8929807	PtrMemberAccess	opt -> base_index		8928709	1					
ANR	8929808	Identifier	opt		8928709	0					
ANR	8929809	Identifier	base_index		8928709	1					
ANR	8929810	Argument	& nref		8928709	2					
ANR	8929811	UnaryOperationExpression	& nref		8928709	0					
ANR	8929812	UnaryOperator	&		8928709	0					
ANR	8929813	Identifier	nref		8928709	1					
ANR	8929814	ExpressionStatement	"name_string_ref ( mem , & nref , & nref )"	514:8:18368:18402	8928709	3	True				
ANR	8929815	CallExpression	"name_string_ref ( mem , & nref , & nref )"		8928709	0					
ANR	8929816	Callee	name_string_ref		8928709	0					
ANR	8929817	Identifier	name_string_ref		8928709	0					
ANR	8929818	ArgumentList	mem		8928709	1					
ANR	8929819	Argument	mem		8928709	0					
ANR	8929820	Identifier	mem		8928709	0					
ANR	8929821	Argument	& nref		8928709	1					
ANR	8929822	UnaryOperationExpression	& nref		8928709	0					
ANR	8929823	UnaryOperator	&		8928709	0					
ANR	8929824	Identifier	nref		8928709	1					
ANR	8929825	Argument	& nref		8928709	2					
ANR	8929826	UnaryOperationExpression	& nref		8928709	0					
ANR	8929827	UnaryOperator	&		8928709	0					
ANR	8929828	Identifier	nref		8928709	1					
ANR	8929829	ExpressionStatement	"code = obj_string_data ( mem , & nref , & data , & size )"	515:8:18412:18460	8928709	4	True				
ANR	8929830	AssignmentExpression	"code = obj_string_data ( mem , & nref , & data , & size )"		8928709	0		=			
ANR	8929831	Identifier	code		8928709	0					
ANR	8929832	CallExpression	"obj_string_data ( mem , & nref , & data , & size )"		8928709	1					
ANR	8929833	Callee	obj_string_data		8928709	0					
ANR	8929834	Identifier	obj_string_data		8928709	0					
ANR	8929835	ArgumentList	mem		8928709	1					
ANR	8929836	Argument	mem		8928709	0					
ANR	8929837	Identifier	mem		8928709	0					
ANR	8929838	Argument	& nref		8928709	1					
ANR	8929839	UnaryOperationExpression	& nref		8928709	0					
ANR	8929840	UnaryOperator	&		8928709	0					
ANR	8929841	Identifier	nref		8928709	1					
ANR	8929842	Argument	& data		8928709	2					
ANR	8929843	UnaryOperationExpression	& data		8928709	0					
ANR	8929844	UnaryOperator	&		8928709	0					
ANR	8929845	Identifier	data		8928709	1					
ANR	8929846	Argument	& size		8928709	3					
ANR	8929847	UnaryOperationExpression	& size		8928709	0					
ANR	8929848	UnaryOperator	&		8928709	0					
ANR	8929849	Identifier	size		8928709	1					
ANR	8929850	IfStatement	if ( code < 0 )		8928709	5					
ANR	8929851	Condition	code < 0	516:12:18474:18481	8928709	0	True				
ANR	8929852	RelationalExpression	code < 0		8928709	0		<			
ANR	8929853	Identifier	code		8928709	0					
ANR	8929854	PrimaryExpression	0		8928709	1					
ANR	8929855	ReturnStatement	return code ;	517:12:18496:18507	8928709	1	True				
ANR	8929856	Identifier	code		8928709	0					
ANR	8929857	GotoStatement	goto nl ;	518:8:18517:18524	8928709	6	True				
ANR	8929858	Identifier	nl		8928709	0					
ANR	8929859	Label	case t_operator :	520:4:18536:18551	8928709	27	True				
ANR	8929860	Identifier	t_operator		8928709	0					
ANR	8929861	CompoundStatement		213:8:7655:7680	8928709	28					
ANR	8929862	IdentifierDeclStatement	uint index = op_index ( op ) ;	522:8:18625:18650	8928709	0	True				
ANR	8929863	IdentifierDecl	index = op_index ( op )		8928709	0					
ANR	8929864	IdentifierDeclType	uint		8928709	0					
ANR	8929865	Identifier	index		8928709	1					
ANR	8929866	AssignmentExpression	index = op_index ( op )		8928709	2		=			
ANR	8929867	Identifier	index		8928709	0					
ANR	8929868	CallExpression	op_index ( op )		8928709	1					
ANR	8929869	Callee	op_index		8928709	0					
ANR	8929870	Identifier	op_index		8928709	0					
ANR	8929871	ArgumentList	op		8928709	1					
ANR	8929872	Argument	op		8928709	0					
ANR	8929873	Identifier	op		8928709	0					
ANR	8929874	IfStatement	if ( index > 0 && index < op_def_count )		8928709	1					
ANR	8929875	Condition	index > 0 && index < op_def_count	529:12:18850:18882	8928709	0	True				
ANR	8929876	AndExpression	index > 0 && index < op_def_count		8928709	0		&&			
ANR	8929877	RelationalExpression	index > 0		8928709	0		>			
ANR	8929878	Identifier	index		8928709	0					
ANR	8929879	PrimaryExpression	0		8928709	1					
ANR	8929880	RelationalExpression	index < op_def_count		8928709	1		<			
ANR	8929881	Identifier	index		8928709	0					
ANR	8929882	Identifier	op_def_count		8928709	1					
ANR	8929883	CompoundStatement		220:47:7915:7915	8928709	1					
ANR	8929884	ExpressionStatement	data = ( const byte * ) ( op_index_def ( index ) -> oname + 1 )	530:12:18899:18952	8928709	0	True				
ANR	8929885	AssignmentExpression	data = ( const byte * ) ( op_index_def ( index ) -> oname + 1 )		8928709	0		=			
ANR	8929886	Identifier	data		8928709	0					
ANR	8929887	CastExpression	( const byte * ) ( op_index_def ( index ) -> oname + 1 )		8928709	1					
ANR	8929888	CastTarget	const byte *		8928709	0					
ANR	8929889	AdditiveExpression	op_index_def ( index ) -> oname + 1		8928709	1		+			
ANR	8929890	PtrMemberAccess	op_index_def ( index ) -> oname		8928709	0					
ANR	8929891	CallExpression	op_index_def ( index )		8928709	0					
ANR	8929892	Callee	op_index_def		8928709	0					
ANR	8929893	Identifier	op_index_def		8928709	0					
ANR	8929894	ArgumentList	index		8928709	1					
ANR	8929895	Argument	index		8928709	0					
ANR	8929896	Identifier	index		8928709	0					
ANR	8929897	Identifier	oname		8928709	1					
ANR	8929898	PrimaryExpression	1		8928709	1					
ANR	8929899	BreakStatement	break ;	531:12:18966:18971	8928709	1	True				
ANR	8929900	ExpressionStatement	"gs_sprintf ( buf , ""@0x%lx"" , ( ulong ) op -> value . opproc )"	534:8:19033:19084	8928709	2	True				
ANR	8929901	CallExpression	"gs_sprintf ( buf , ""@0x%lx"" , ( ulong ) op -> value . opproc )"		8928709	0					
ANR	8929902	Callee	gs_sprintf		8928709	0					
ANR	8929903	Identifier	gs_sprintf		8928709	0					
ANR	8929904	ArgumentList	buf		8928709	1					
ANR	8929905	Argument	buf		8928709	0					
ANR	8929906	Identifier	buf		8928709	0					
ANR	8929907	Argument	"""@0x%lx"""		8928709	1					
ANR	8929908	PrimaryExpression	"""@0x%lx"""		8928709	0					
ANR	8929909	Argument	( ulong ) op -> value . opproc		8928709	2					
ANR	8929910	CastExpression	( ulong ) op -> value . opproc		8928709	0					
ANR	8929911	CastTarget	ulong		8928709	0					
ANR	8929912	MemberAccess	op -> value . opproc		8928709	1					
ANR	8929913	PtrMemberAccess	op -> value		8928709	0					
ANR	8929914	Identifier	op		8928709	0					
ANR	8929915	Identifier	value		8928709	1					
ANR	8929916	Identifier	opproc		8928709	1					
ANR	8929917	BreakStatement	break ;	535:8:19094:19099	8928709	3	True				
ANR	8929918	Label	case t_real :	537:4:19111:19122	8928709	29	True				
ANR	8929919	Identifier	t_real		8928709	0					
ANR	8929920	IfStatement	if ( op -> value . realval == ( float ) 0.0001 )		8928709	30					
ANR	8929921	Condition	op -> value . realval == ( float ) 0.0001	544:12:19436:19469	8928709	0	True				
ANR	8929922	EqualityExpression	op -> value . realval == ( float ) 0.0001		8928709	0		==			
ANR	8929923	MemberAccess	op -> value . realval		8928709	0					
ANR	8929924	PtrMemberAccess	op -> value		8928709	0					
ANR	8929925	Identifier	op		8928709	0					
ANR	8929926	Identifier	value		8928709	1					
ANR	8929927	Identifier	realval		8928709	1					
ANR	8929928	CastExpression	( float ) 0.0001		8928709	1					
ANR	8929929	CastTarget	float		8928709	0					
ANR	8929930	PrimaryExpression	0.0001		8928709	1					
ANR	8929931	CompoundStatement		235:48:8502:8502	8928709	1					
ANR	8929932	ExpressionStatement	"strcpy ( buf , ""0.0001"" )"	545:12:19486:19507	8928709	0	True				
ANR	8929933	CallExpression	"strcpy ( buf , ""0.0001"" )"		8928709	0					
ANR	8929934	Callee	strcpy		8928709	0					
ANR	8929935	Identifier	strcpy		8928709	0					
ANR	8929936	ArgumentList	buf		8928709	1					
ANR	8929937	Argument	buf		8928709	0					
ANR	8929938	Identifier	buf		8928709	0					
ANR	8929939	Argument	"""0.0001"""		8928709	1					
ANR	8929940	PrimaryExpression	"""0.0001"""		8928709	0					
ANR	8929941	ElseStatement	else		8928709	0					
ANR	8929942	CompoundStatement		237:15:8554:8554	8928709	0					
ANR	8929943	ExpressionStatement	"gs_sprintf ( buf , ""%g"" , op -> value . realval )"	547:12:19538:19578	8928709	0	True				
ANR	8929944	CallExpression	"gs_sprintf ( buf , ""%g"" , op -> value . realval )"		8928709	0					
ANR	8929945	Callee	gs_sprintf		8928709	0					
ANR	8929946	Identifier	gs_sprintf		8928709	0					
ANR	8929947	ArgumentList	buf		8928709	1					
ANR	8929948	Argument	buf		8928709	0					
ANR	8929949	Identifier	buf		8928709	0					
ANR	8929950	Argument	"""%g"""		8928709	1					
ANR	8929951	PrimaryExpression	"""%g"""		8928709	0					
ANR	8929952	Argument	op -> value . realval		8928709	2					
ANR	8929953	MemberAccess	op -> value . realval		8928709	0					
ANR	8929954	PtrMemberAccess	op -> value		8928709	0					
ANR	8929955	Identifier	op		8928709	0					
ANR	8929956	Identifier	value		8928709	1					
ANR	8929957	Identifier	realval		8928709	1					
ANR	8929958	ExpressionStatement	ensure_dot ( buf )	549:8:19598:19613	8928709	31	True				
ANR	8929959	CallExpression	ensure_dot ( buf )		8928709	0					
ANR	8929960	Callee	ensure_dot		8928709	0					
ANR	8929961	Identifier	ensure_dot		8928709	0					
ANR	8929962	ArgumentList	buf		8928709	1					
ANR	8929963	Argument	buf		8928709	0					
ANR	8929964	Identifier	buf		8928709	0					
ANR	8929965	BreakStatement	break ;	550:8:19623:19628	8928709	32	True				
ANR	8929966	Label	default :	551:4:19634:19641	8928709	33	True				
ANR	8929967	Identifier	default		8928709	0					
ANR	8929968	ExpressionStatement	"data = ( const byte * ) ""--nostringval--"""	552:8:19651:19689	8928709	34	True				
ANR	8929969	AssignmentExpression	"data = ( const byte * ) ""--nostringval--"""		8928709	0		=			
ANR	8929970	Identifier	data		8928709	0					
ANR	8929971	CastExpression	"( const byte * ) ""--nostringval--"""		8928709	1					
ANR	8929972	CastTarget	const byte *		8928709	0					
ANR	8929973	PrimaryExpression	"""--nostringval--"""		8928709	1					
ANR	8929974	Label	rs :	554:0:19697:19699	8928709	7	True				
ANR	8929975	Identifier	rs		8928709	0					
ANR	8929976	ExpressionStatement	size = strlen ( ( const char * ) data )	554:4:19701:19734	8928709	8	True				
ANR	8929977	AssignmentExpression	size = strlen ( ( const char * ) data )		8928709	0		=			
ANR	8929978	Identifier	size		8928709	0					
ANR	8929979	CallExpression	strlen ( ( const char * ) data )		8928709	1					
ANR	8929980	Callee	strlen		8928709	0					
ANR	8929981	Identifier	strlen		8928709	0					
ANR	8929982	ArgumentList	( const char * ) data		8928709	1					
ANR	8929983	Argument	( const char * ) data		8928709	0					
ANR	8929984	CastExpression	( const char * ) data		8928709	0					
ANR	8929985	CastTarget	const char *		8928709	0					
ANR	8929986	Identifier	data		8928709	1					
ANR	8929987	Label	nl :	555:0:19736:19738	8928709	9	True				
ANR	8929988	Identifier	nl		8928709	0					
ANR	8929989	IfStatement	if ( size < start_pos )		8928709	10					
ANR	8929990	Condition	size < start_pos	555:8:19744:19759	8928709	0	True				
ANR	8929991	RelationalExpression	size < start_pos		8928709	0		<			
ANR	8929992	Identifier	size		8928709	0					
ANR	8929993	Identifier	start_pos		8928709	1					
ANR	8929994	ExpressionStatement	return_error ( gs_error_rangecheck )	556:8:19770:19803	8928709	1	True				
ANR	8929995	CallExpression	return_error ( gs_error_rangecheck )		8928709	0					
ANR	8929996	Callee	return_error		8928709	0					
ANR	8929997	Identifier	return_error		8928709	0					
ANR	8929998	ArgumentList	gs_error_rangecheck		8928709	1					
ANR	8929999	Argument	gs_error_rangecheck		8928709	0					
ANR	8930000	Identifier	gs_error_rangecheck		8928709	0					
ANR	8930001	IfStatement	if ( ! restart && size > len )		8928709	11					
ANR	8930002	Condition	! restart && size > len	557:8:19813:19834	8928709	0	True				
ANR	8930003	AndExpression	! restart && size > len		8928709	0		&&			
ANR	8930004	UnaryOperationExpression	! restart		8928709	0					
ANR	8930005	UnaryOperator	!		8928709	0					
ANR	8930006	Identifier	restart		8928709	1					
ANR	8930007	RelationalExpression	size > len		8928709	1		>			
ANR	8930008	Identifier	size		8928709	0					
ANR	8930009	Identifier	len		8928709	1					
ANR	8930010	ExpressionStatement	return_error ( gs_error_rangecheck )	558:8:19845:19878	8928709	1	True				
ANR	8930011	CallExpression	return_error ( gs_error_rangecheck )		8928709	0					
ANR	8930012	Callee	return_error		8928709	0					
ANR	8930013	Identifier	return_error		8928709	0					
ANR	8930014	ArgumentList	gs_error_rangecheck		8928709	1					
ANR	8930015	Argument	gs_error_rangecheck		8928709	0					
ANR	8930016	Identifier	gs_error_rangecheck		8928709	0					
ANR	8930017	ExpressionStatement	size -= start_pos	559:4:19884:19901	8928709	12	True				
ANR	8930018	AssignmentExpression	size -= start_pos		8928709	0		-=			
ANR	8930019	Identifier	size		8928709	0					
ANR	8930020	Identifier	start_pos		8928709	1					
ANR	8930021	ExpressionStatement	"* prlen = min ( size , len )"	560:4:19907:19930	8928709	13	True				
ANR	8930022	AssignmentExpression	"* prlen = min ( size , len )"		8928709	0		=			
ANR	8930023	UnaryOperationExpression	* prlen		8928709	0					
ANR	8930024	UnaryOperator	*		8928709	0					
ANR	8930025	Identifier	prlen		8928709	1					
ANR	8930026	CallExpression	"min ( size , len )"		8928709	1					
ANR	8930027	Callee	min		8928709	0					
ANR	8930028	Identifier	min		8928709	0					
ANR	8930029	ArgumentList	size		8928709	1					
ANR	8930030	Argument	size		8928709	0					
ANR	8930031	Identifier	size		8928709	0					
ANR	8930032	Argument	len		8928709	1					
ANR	8930033	Identifier	len		8928709	0					
ANR	8930034	ExpressionStatement	"memmove ( str , data + start_pos , * prlen )"	561:4:19936:19974	8928709	14	True				
ANR	8930035	CallExpression	"memmove ( str , data + start_pos , * prlen )"		8928709	0					
ANR	8930036	Callee	memmove		8928709	0					
ANR	8930037	Identifier	memmove		8928709	0					
ANR	8930038	ArgumentList	str		8928709	1					
ANR	8930039	Argument	str		8928709	0					
ANR	8930040	Identifier	str		8928709	0					
ANR	8930041	Argument	data + start_pos		8928709	1					
ANR	8930042	AdditiveExpression	data + start_pos		8928709	0		+			
ANR	8930043	Identifier	data		8928709	0					
ANR	8930044	Identifier	start_pos		8928709	1					
ANR	8930045	Argument	* prlen		8928709	2					
ANR	8930046	UnaryOperationExpression	* prlen		8928709	0					
ANR	8930047	UnaryOperator	*		8928709	0					
ANR	8930048	Identifier	prlen		8928709	1					
ANR	8930049	ReturnStatement	return ( size > len ) ;	562:4:19980:19999	8928709	15	True				
ANR	8930050	RelationalExpression	size > len		8928709	0		>			
ANR	8930051	Identifier	size		8928709	0					
ANR	8930052	Identifier	len		8928709	1					
ANR	8930053	ReturnType	int		8928709	1					
ANR	8930054	Identifier	obj_cvp		8928709	2					
ANR	8930055	ParameterList	"const ref * op , byte * str , uint len , uint * prlen , int full_print , uint start_pos , const gs_memory_t * mem , bool restart"		8928709	3					
ANR	8930056	Parameter	const ref * op	308:8:10839:10852	8928709	0	True				
ANR	8930057	ParameterType	const ref *		8928709	0					
ANR	8930058	Identifier	op		8928709	1					
ANR	8930059	Parameter	byte * str	308:24:10855:10864	8928709	1	True				
ANR	8930060	ParameterType	byte *		8928709	0					
ANR	8930061	Identifier	str		8928709	1					
ANR	8930062	Parameter	uint len	308:36:10867:10874	8928709	2	True				
ANR	8930063	ParameterType	uint		8928709	0					
ANR	8930064	Identifier	len		8928709	1					
ANR	8930065	Parameter	uint * prlen	308:46:10877:10888	8928709	3	True				
ANR	8930066	ParameterType	uint *		8928709	0					
ANR	8930067	Identifier	prlen		8928709	1					
ANR	8930068	Parameter	int full_print	309:8:10899:10912	8928709	4	True				
ANR	8930069	ParameterType	int		8928709	0					
ANR	8930070	Identifier	full_print		8928709	1					
ANR	8930071	Parameter	uint start_pos	309:24:10915:10928	8928709	5	True				
ANR	8930072	ParameterType	uint		8928709	0					
ANR	8930073	Identifier	start_pos		8928709	1					
ANR	8930074	Parameter	const gs_memory_t * mem	309:40:10931:10952	8928709	6	True				
ANR	8930075	ParameterType	const gs_memory_t *		8928709	0					
ANR	8930076	Identifier	mem		8928709	1					
ANR	8930077	Parameter	bool restart	309:64:10955:10966	8928709	7	True				
ANR	8930078	ParameterType	bool		8928709	0					
ANR	8930079	Identifier	restart		8928709	1					
ANR	8930080	CFGEntryNode	ENTRY		8928709		True				
ANR	8930081	CFGExitNode	EXIT		8928709		True				
ANR	8930082	Symbol	* w		8928709						
ANR	8930083	Symbol	* opt -> base_index		8928709						
ANR	8930084	Symbol	gs_object_type		8928709						
ANR	8930085	Symbol	op_index_def		8928709						
ANR	8930086	Symbol	data		8928709						
ANR	8930087	Symbol	* op		8928709						
ANR	8930088	Symbol	obj_cvp		8928709						
ANR	8930089	Symbol	gs_error_rangecheck		8928709						
ANR	8930090	Symbol	* w . ptr		8928709						
ANR	8930091	Symbol	CVP_MAX_STRING		8928709						
ANR	8930092	Symbol	op_index		8928709						
ANR	8930093	Symbol	* index		8928709						
ANR	8930094	Symbol	* * opt		8928709						
ANR	8930095	Symbol	op_index_def ( index ) -> oname		8928709						
ANR	8930096	Symbol	prlen		8928709						
ANR	8930097	Symbol	op -> value . boolval		8928709						
ANR	8930098	Symbol	* op_index_def		8928709						
ANR	8930099	Symbol	len1		8928709						
ANR	8930100	Symbol	op_def_count		8928709						
ANR	8930101	Symbol	strlen		8928709						
ANR	8930102	Symbol	* size		8928709						
ANR	8930103	Symbol	memcmp		8928709						
ANR	8930104	Symbol	len		8928709						
ANR	8930105	Symbol	truncate		8928709						
ANR	8930106	Symbol	scanned		8928709						
ANR	8930107	Symbol	opt -> nx_table		8928709						
ANR	8930108	Symbol	written		8928709						
ANR	8930109	Symbol	s_PSSE_template . process		8928709						
ANR	8930110	Symbol	* prlen		8928709						
ANR	8930111	Symbol	gs_error_Fatal		8928709						
ANR	8930112	Symbol	get_op_array		8928709						
ANR	8930113	Symbol	* buf		8928709						
ANR	8930114	Symbol	NULL		8928709						
ANR	8930115	Symbol	r . limit		8928709						
ANR	8930116	Symbol	index		8928709						
ANR	8930117	Symbol	w . ptr		8928709						
ANR	8930118	Symbol	& data		8928709						
ANR	8930119	Symbol	r_is_foreign		8928709						
ANR	8930120	Symbol	str		8928709						
ANR	8930121	Symbol	r_btype		8928709						
ANR	8930122	Symbol	countof		8928709						
ANR	8930123	Symbol	w . limit		8928709						
ANR	8930124	Symbol	opt		8928709						
ANR	8930125	Symbol	size		8928709						
ANR	8930126	Symbol	a_executable		8928709						
ANR	8930127	Symbol	status		8928709						
ANR	8930128	Symbol	a_read		8928709						
ANR	8930129	Symbol	code		8928709						
ANR	8930130	Symbol	& scanned		8928709						
ANR	8930131	Symbol	op -> value . realval		8928709						
ANR	8930132	Symbol	skip		8928709						
ANR	8930133	Symbol	rtype		8928709						
ANR	8930134	Symbol	* type_strings		8928709						
ANR	8930135	Symbol	& nref		8928709						
ANR	8930136	Symbol	min		8928709						
ANR	8930137	Symbol	mem		8928709						
ANR	8930138	Symbol	r_has_attr		8928709						
ANR	8930139	Symbol	nref		8928709						
ANR	8930140	Symbol	op -> value		8928709						
ANR	8930141	Symbol	r_size		8928709						
ANR	8930142	Symbol	full_print		8928709						
ANR	8930143	Symbol	* str		8928709						
ANR	8930144	Symbol	value		8928709						
ANR	8930145	Symbol	* opt		8928709						
ANR	8930146	Symbol	op		8928709						
ANR	8930147	Symbol	s_PSSE_template		8928709						
ANR	8930148	Symbol	type_strings		8928709						
ANR	8930149	Symbol	restart		8928709						
ANR	8930150	Symbol	opt -> base_index		8928709						
ANR	8930151	Symbol	false		8928709						
ANR	8930152	Symbol	gs_struct_type_name_string		8928709						
ANR	8930153	Symbol	op -> value . pstruct		8928709						
ANR	8930154	Symbol	& size		8928709						
ANR	8930155	Symbol	* rtype		8928709						
ANR	8930156	Symbol	start_pos		8928709						
ANR	8930157	Symbol	wstr		8928709						
ANR	8930158	Symbol	buf		8928709						
ANR	8930159	Symbol	r		8928709						
ANR	8930160	Symbol	op -> value . const_bytes		8928709						
ANR	8930161	Symbol	w		8928709						
ANR	8930162	Symbol	r . ptr		8928709						
ANR	8930163	Symbol	& r		8928709						
ANR	8930164	Symbol	* opt -> nx_table		8928709						
ANR	8930165	Symbol	obj_string_data		8928709						
ANR	8930166	Symbol	& w		8928709						
ANR	8930167	Symbol	op -> value . opproc		8928709						
ANR	8930168	Function	ensure_dot	569:0:20202:20593							
ANR	8930169	FunctionDef	ensure_dot (char * buf)		8930168	0					
ANR	8930170	CompoundStatement		571:0:20236:20593	8930168	0					
ANR	8930171	IdentifierDeclStatement	"char * pe = strchr ( buf , 'e' ) ;"	572:4:20242:20269	8930168	0	True				
ANR	8930172	IdentifierDecl	"* pe = strchr ( buf , 'e' )"		8930168	0					
ANR	8930173	IdentifierDeclType	char *		8930168	0					
ANR	8930174	Identifier	pe		8930168	1					
ANR	8930175	AssignmentExpression	"* pe = strchr ( buf , 'e' )"		8930168	2		=			
ANR	8930176	Identifier	pe		8930168	0					
ANR	8930177	CallExpression	"strchr ( buf , 'e' )"		8930168	1					
ANR	8930178	Callee	strchr		8930168	0					
ANR	8930179	Identifier	strchr		8930168	0					
ANR	8930180	ArgumentList	buf		8930168	1					
ANR	8930181	Argument	buf		8930168	0					
ANR	8930182	Identifier	buf		8930168	0					
ANR	8930183	Argument	'e'		8930168	1					
ANR	8930184	PrimaryExpression	'e'		8930168	0					
ANR	8930185	IfStatement	if ( pe )		8930168	1					
ANR	8930186	Condition	pe	573:8:20279:20280	8930168	0	True				
ANR	8930187	Identifier	pe		8930168	0					
ANR	8930188	CompoundStatement		4:8:56:61	8930168	1					
ANR	8930189	IdentifierDeclStatement	int i ;	574:8:20293:20298	8930168	0	True				
ANR	8930190	IdentifierDecl	i		8930168	0					
ANR	8930191	IdentifierDeclType	int		8930168	0					
ANR	8930192	Identifier	i		8930168	1					
ANR	8930193	ExpressionStatement	"sscanf ( pe + 1 , ""%d"" , & i )"	575:8:20308:20332	8930168	1	True				
ANR	8930194	CallExpression	"sscanf ( pe + 1 , ""%d"" , & i )"		8930168	0					
ANR	8930195	Callee	sscanf		8930168	0					
ANR	8930196	Identifier	sscanf		8930168	0					
ANR	8930197	ArgumentList	pe + 1		8930168	1					
ANR	8930198	Argument	pe + 1		8930168	0					
ANR	8930199	AdditiveExpression	pe + 1		8930168	0		+			
ANR	8930200	Identifier	pe		8930168	0					
ANR	8930201	PrimaryExpression	1		8930168	1					
ANR	8930202	Argument	"""%d"""		8930168	1					
ANR	8930203	PrimaryExpression	"""%d"""		8930168	0					
ANR	8930204	Argument	& i		8930168	2					
ANR	8930205	UnaryOperationExpression	& i		8930168	0					
ANR	8930206	UnaryOperator	&		8930168	0					
ANR	8930207	Identifier	i		8930168	1					
ANR	8930208	IfStatement	if ( i >= 0 )		8930168	2					
ANR	8930209	Condition	i >= 0	577:12:20407:20412	8930168	0	True				
ANR	8930210	RelationalExpression	i >= 0		8930168	0		>=			
ANR	8930211	Identifier	i		8930168	0					
ANR	8930212	PrimaryExpression	0		8930168	1					
ANR	8930213	ExpressionStatement	"gs_sprintf ( pe + 1 , ""+%02d"" , i )"	578:12:20427:20457	8930168	1	True				
ANR	8930214	CallExpression	"gs_sprintf ( pe + 1 , ""+%02d"" , i )"		8930168	0					
ANR	8930215	Callee	gs_sprintf		8930168	0					
ANR	8930216	Identifier	gs_sprintf		8930168	0					
ANR	8930217	ArgumentList	pe + 1		8930168	1					
ANR	8930218	Argument	pe + 1		8930168	0					
ANR	8930219	AdditiveExpression	pe + 1		8930168	0		+			
ANR	8930220	Identifier	pe		8930168	0					
ANR	8930221	PrimaryExpression	1		8930168	1					
ANR	8930222	Argument	"""+%02d"""		8930168	1					
ANR	8930223	PrimaryExpression	"""+%02d"""		8930168	0					
ANR	8930224	Argument	i		8930168	2					
ANR	8930225	Identifier	i		8930168	0					
ANR	8930226	ElseStatement	else		8930168	0					
ANR	8930227	ExpressionStatement	"gs_sprintf ( pe + 1 , ""-%02d"" , - i )"	580:12:20484:20515	8930168	0	True				
ANR	8930228	CallExpression	"gs_sprintf ( pe + 1 , ""-%02d"" , - i )"		8930168	0					
ANR	8930229	Callee	gs_sprintf		8930168	0					
ANR	8930230	Identifier	gs_sprintf		8930168	0					
ANR	8930231	ArgumentList	pe + 1		8930168	1					
ANR	8930232	Argument	pe + 1		8930168	0					
ANR	8930233	AdditiveExpression	pe + 1		8930168	0		+			
ANR	8930234	Identifier	pe		8930168	0					
ANR	8930235	PrimaryExpression	1		8930168	1					
ANR	8930236	Argument	"""-%02d"""		8930168	1					
ANR	8930237	PrimaryExpression	"""-%02d"""		8930168	0					
ANR	8930238	Argument	- i		8930168	2					
ANR	8930239	UnaryOperationExpression	- i		8930168	0					
ANR	8930240	UnaryOperator	-		8930168	0					
ANR	8930241	Identifier	i		8930168	1					
ANR	8930242	ElseStatement	else		8930168	0					
ANR	8930243	IfStatement	"if ( strchr ( buf , '.' ) == NULL )"		8930168	0					
ANR	8930244	Condition	"strchr ( buf , '.' ) == NULL"	581:15:20532:20555	8930168	0	True				
ANR	8930245	EqualityExpression	"strchr ( buf , '.' ) == NULL"		8930168	0		==			
ANR	8930246	CallExpression	"strchr ( buf , '.' )"		8930168	0					
ANR	8930247	Callee	strchr		8930168	0					
ANR	8930248	Identifier	strchr		8930168	0					
ANR	8930249	ArgumentList	buf		8930168	1					
ANR	8930250	Argument	buf		8930168	0					
ANR	8930251	Identifier	buf		8930168	0					
ANR	8930252	Argument	'.'		8930168	1					
ANR	8930253	PrimaryExpression	'.'		8930168	0					
ANR	8930254	Identifier	NULL		8930168	1					
ANR	8930255	CompoundStatement		11:41:321:321	8930168	1					
ANR	8930256	ExpressionStatement	"strcat ( buf , "".0"" )"	582:8:20568:20585	8930168	0	True				
ANR	8930257	CallExpression	"strcat ( buf , "".0"" )"		8930168	0					
ANR	8930258	Callee	strcat		8930168	0					
ANR	8930259	Identifier	strcat		8930168	0					
ANR	8930260	ArgumentList	buf		8930168	1					
ANR	8930261	Argument	buf		8930168	0					
ANR	8930262	Identifier	buf		8930168	0					
ANR	8930263	Argument	""".0"""		8930168	1					
ANR	8930264	PrimaryExpression	""".0"""		8930168	0					
ANR	8930265	ReturnType	static void		8930168	1					
ANR	8930266	Identifier	ensure_dot		8930168	2					
ANR	8930267	ParameterList	char * buf		8930168	3					
ANR	8930268	Parameter	char * buf	570:11:20225:20233	8930168	0	True				
ANR	8930269	ParameterType	char *		8930168	0					
ANR	8930270	Identifier	buf		8930168	1					
ANR	8930271	CFGEntryNode	ENTRY		8930168		True				
ANR	8930272	CFGExitNode	EXIT		8930168		True				
ANR	8930273	Symbol	buf		8930168						
ANR	8930274	Symbol	NULL		8930168						
ANR	8930275	Symbol	pe		8930168						
ANR	8930276	Symbol	strchr		8930168						
ANR	8930277	Symbol	i		8930168						
ANR	8930278	Symbol	& i		8930168						
ANR	8930279	Function	obj_cvs	594:0:21032:21469							
ANR	8930280	FunctionDef	"obj_cvs (const gs_memory_t * mem , const ref * op , byte * str , uint len , uint * prlen , const byte * * pchars)"		8930279	0					
ANR	8930281	CompoundStatement		597:0:21150:21469	8930279	0					
ANR	8930282	IdentifierDeclStatement	"int code = obj_cvp ( op , str , len , prlen , 0 , 0 , mem , false ) ;"	598:4:21156:21213	8930279	0	True				
ANR	8930283	IdentifierDecl	"code = obj_cvp ( op , str , len , prlen , 0 , 0 , mem , false )"		8930279	0					
ANR	8930284	IdentifierDeclType	int		8930279	0					
ANR	8930285	Identifier	code		8930279	1					
ANR	8930286	AssignmentExpression	"code = obj_cvp ( op , str , len , prlen , 0 , 0 , mem , false )"		8930279	2		=			
ANR	8930287	Identifier	code		8930279	0					
ANR	8930288	CallExpression	"obj_cvp ( op , str , len , prlen , 0 , 0 , mem , false )"		8930279	1					
ANR	8930289	Callee	obj_cvp		8930279	0					
ANR	8930290	Identifier	obj_cvp		8930279	0					
ANR	8930291	ArgumentList	op		8930279	1					
ANR	8930292	Argument	op		8930279	0					
ANR	8930293	Identifier	op		8930279	0					
ANR	8930294	Argument	str		8930279	1					
ANR	8930295	Identifier	str		8930279	0					
ANR	8930296	Argument	len		8930279	2					
ANR	8930297	Identifier	len		8930279	0					
ANR	8930298	Argument	prlen		8930279	3					
ANR	8930299	Identifier	prlen		8930279	0					
ANR	8930300	Argument	0		8930279	4					
ANR	8930301	PrimaryExpression	0		8930279	0					
ANR	8930302	Argument	0		8930279	5					
ANR	8930303	PrimaryExpression	0		8930279	0					
ANR	8930304	Argument	mem		8930279	6					
ANR	8930305	Identifier	mem		8930279	0					
ANR	8930306	Argument	false		8930279	7					
ANR	8930307	Identifier	false		8930279	0					
ANR	8930308	IfStatement	if ( code == 1 )		8930279	1					
ANR	8930309	Condition	code == 1	600:8:21247:21255	8930279	0	True				
ANR	8930310	EqualityExpression	code == 1		8930279	0		==			
ANR	8930311	Identifier	code		8930279	0					
ANR	8930312	PrimaryExpression	1		8930279	1					
ANR	8930313	CompoundStatement		4:19:107:107	8930279	1					
ANR	8930314	IfStatement	if ( pchars )		8930279	0					
ANR	8930315	Condition	pchars	601:12:21272:21277	8930279	0	True				
ANR	8930316	Identifier	pchars		8930279	0					
ANR	8930317	ExpressionStatement	"obj_string_data ( mem , op , pchars , prlen )"	602:12:21292:21331	8930279	1	True				
ANR	8930318	CallExpression	"obj_string_data ( mem , op , pchars , prlen )"		8930279	0					
ANR	8930319	Callee	obj_string_data		8930279	0					
ANR	8930320	Identifier	obj_string_data		8930279	0					
ANR	8930321	ArgumentList	mem		8930279	1					
ANR	8930322	Argument	mem		8930279	0					
ANR	8930323	Identifier	mem		8930279	0					
ANR	8930324	Argument	op		8930279	1					
ANR	8930325	Identifier	op		8930279	0					
ANR	8930326	Argument	pchars		8930279	2					
ANR	8930327	Identifier	pchars		8930279	0					
ANR	8930328	Argument	prlen		8930279	3					
ANR	8930329	Identifier	prlen		8930279	0					
ANR	8930330	ReturnStatement	return gs_note_error ( gs_error_rangecheck ) ;	603:8:21341:21382	8930279	1	True				
ANR	8930331	CallExpression	gs_note_error ( gs_error_rangecheck )		8930279	0					
ANR	8930332	Callee	gs_note_error		8930279	0					
ANR	8930333	Identifier	gs_note_error		8930279	0					
ANR	8930334	ArgumentList	gs_error_rangecheck		8930279	1					
ANR	8930335	Argument	gs_error_rangecheck		8930279	0					
ANR	8930336	Identifier	gs_error_rangecheck		8930279	0					
ANR	8930337	ElseStatement	else		8930279	0					
ANR	8930338	CompoundStatement		8:11:244:244	8930279	0					
ANR	8930339	IfStatement	if ( pchars )		8930279	0					
ANR	8930340	Condition	pchars	605:12:21409:21414	8930279	0	True				
ANR	8930341	Identifier	pchars		8930279	0					
ANR	8930342	ExpressionStatement	* pchars = str	606:10:21427:21440	8930279	1	True				
ANR	8930343	AssignmentExpression	* pchars = str		8930279	0		=			
ANR	8930344	UnaryOperationExpression	* pchars		8930279	0					
ANR	8930345	UnaryOperator	*		8930279	0					
ANR	8930346	Identifier	pchars		8930279	1					
ANR	8930347	Identifier	str		8930279	1					
ANR	8930348	ReturnStatement	return code ;	607:8:21450:21461	8930279	1	True				
ANR	8930349	Identifier	code		8930279	0					
ANR	8930350	ReturnType	int		8930279	1					
ANR	8930351	Identifier	obj_cvs		8930279	2					
ANR	8930352	ParameterList	"const gs_memory_t * mem , const ref * op , byte * str , uint len , uint * prlen , const byte * * pchars"		8930279	3					
ANR	8930353	Parameter	const gs_memory_t * mem	595:8:21044:21065	8930279	0	True				
ANR	8930354	ParameterType	const gs_memory_t *		8930279	0					
ANR	8930355	Identifier	mem		8930279	1					
ANR	8930356	Parameter	const ref * op	595:32:21068:21081	8930279	1	True				
ANR	8930357	ParameterType	const ref *		8930279	0					
ANR	8930358	Identifier	op		8930279	1					
ANR	8930359	Parameter	byte * str	595:48:21084:21093	8930279	2	True				
ANR	8930360	ParameterType	byte *		8930279	0					
ANR	8930361	Identifier	str		8930279	1					
ANR	8930362	Parameter	uint len	595:60:21096:21103	8930279	3	True				
ANR	8930363	ParameterType	uint		8930279	0					
ANR	8930364	Identifier	len		8930279	1					
ANR	8930365	Parameter	uint * prlen	595:70:21106:21117	8930279	4	True				
ANR	8930366	ParameterType	uint *		8930279	0					
ANR	8930367	Identifier	prlen		8930279	1					
ANR	8930368	Parameter	const byte * * pchars	596:8:21128:21147	8930279	5	True				
ANR	8930369	ParameterType	const byte * *		8930279	0					
ANR	8930370	Identifier	pchars		8930279	1					
ANR	8930371	CFGEntryNode	ENTRY		8930279		True				
ANR	8930372	CFGExitNode	EXIT		8930279		True				
ANR	8930373	Symbol	str		8930279						
ANR	8930374	Symbol	op		8930279						
ANR	8930375	Symbol	gs_note_error		8930279						
ANR	8930376	Symbol	code		8930279						
ANR	8930377	Symbol	mem		8930279						
ANR	8930378	Symbol	len		8930279						
ANR	8930379	Symbol	obj_cvp		8930279						
ANR	8930380	Symbol	gs_error_rangecheck		8930279						
ANR	8930381	Symbol	false		8930279						
ANR	8930382	Symbol	* pchars		8930279						
ANR	8930383	Symbol	prlen		8930279						
ANR	8930384	Symbol	pchars		8930279						
ANR	8930385	Function	op_find_index	612:0:21544:22052							
ANR	8930386	FunctionDef	op_find_index (const ref * pref)		8930385	0					
ANR	8930387	CompoundStatement		614:0:21601:22052	8930385	0					
ANR	8930388	IdentifierDeclStatement	op_proc_t proc = real_opproc ( pref ) ;	615:4:21607:21641	8930385	0	True				
ANR	8930389	IdentifierDecl	proc = real_opproc ( pref )		8930385	0					
ANR	8930390	IdentifierDeclType	op_proc_t		8930385	0					
ANR	8930391	Identifier	proc		8930385	1					
ANR	8930392	AssignmentExpression	proc = real_opproc ( pref )		8930385	2		=			
ANR	8930393	Identifier	proc		8930385	0					
ANR	8930394	CallExpression	real_opproc ( pref )		8930385	1					
ANR	8930395	Callee	real_opproc		8930385	0					
ANR	8930396	Identifier	real_opproc		8930385	0					
ANR	8930397	ArgumentList	pref		8930385	1					
ANR	8930398	Argument	pref		8930385	0					
ANR	8930399	Identifier	pref		8930385	0					
ANR	8930400	Statement	const	616:4:21647:21651	8930385	1	True				
ANR	8930401	Statement	op_def	616:10:21653:21658	8930385	2	True				
ANR	8930402	Statement	*	616:17:21660:21660	8930385	3	True				
ANR	8930403	Statement	const	616:18:21661:21665	8930385	4	True				
ANR	8930404	ExpressionStatement	* opp = op_defs_all	616:24:21667:21685	8930385	5	True				
ANR	8930405	AssignmentExpression	* opp = op_defs_all		8930385	0		=			
ANR	8930406	UnaryOperationExpression	* opp		8930385	0					
ANR	8930407	UnaryOperator	*		8930385	0					
ANR	8930408	Identifier	opp		8930385	1					
ANR	8930409	Identifier	op_defs_all		8930385	1					
ANR	8930410	Statement	const	617:4:21691:21695	8930385	6	True				
ANR	8930411	Statement	op_def	617:10:21697:21702	8930385	7	True				
ANR	8930412	Statement	*	617:17:21704:21704	8930385	8	True				
ANR	8930413	Statement	const	617:18:21705:21709	8930385	9	True				
ANR	8930414	ExpressionStatement	* opend = opp + ( op_def_count / OP_DEFS_MAX_SIZE )	617:24:21711:21759	8930385	10	True				
ANR	8930415	AssignmentExpression	* opend = opp + ( op_def_count / OP_DEFS_MAX_SIZE )		8930385	0		=			
ANR	8930416	UnaryOperationExpression	* opend		8930385	0					
ANR	8930417	UnaryOperator	*		8930385	0					
ANR	8930418	Identifier	opend		8930385	1					
ANR	8930419	AdditiveExpression	opp + ( op_def_count / OP_DEFS_MAX_SIZE )		8930385	1		+			
ANR	8930420	Identifier	opp		8930385	0					
ANR	8930421	MultiplicativeExpression	op_def_count / OP_DEFS_MAX_SIZE		8930385	1		/			
ANR	8930422	Identifier	op_def_count		8930385	0					
ANR	8930423	Identifier	OP_DEFS_MAX_SIZE		8930385	1					
ANR	8930424	ForStatement	for ( ; opp < opend ; ++ opp )		8930385	11					
ANR	8930425	Condition	opp < opend	619:11:21773:21783	8930385	0	True				
ANR	8930426	RelationalExpression	opp < opend		8930385	0		<			
ANR	8930427	Identifier	opp		8930385	0					
ANR	8930428	Identifier	opend		8930385	1					
ANR	8930429	UnaryExpression	++ opp	619:24:21786:21790	8930385	1	True				
ANR	8930430	IncDec	++		8930385	0					
ANR	8930431	Identifier	opp		8930385	1					
ANR	8930432	CompoundStatement		7:8:201:225	8930385	2					
ANR	8930433	IdentifierDeclStatement	const op_def * def = * opp ;	620:8:21803:21827	8930385	0	True				
ANR	8930434	IdentifierDecl	* def = * opp		8930385	0					
ANR	8930435	IdentifierDeclType	const op_def *		8930385	0					
ANR	8930436	Identifier	def		8930385	1					
ANR	8930437	AssignmentExpression	* def = * opp		8930385	2		=			
ANR	8930438	Identifier	def		8930385	0					
ANR	8930439	UnaryOperationExpression	* opp		8930385	1					
ANR	8930440	UnaryOperator	*		8930385	0					
ANR	8930441	Identifier	opp		8930385	1					
ANR	8930442	ForStatement	for ( ; def -> oname != 0 ; ++ def )		8930385	1					
ANR	8930443	Condition	def -> oname != 0	622:15:21845:21859	8930385	0	True				
ANR	8930444	EqualityExpression	def -> oname != 0		8930385	0		!=			
ANR	8930445	PtrMemberAccess	def -> oname		8930385	0					
ANR	8930446	Identifier	def		8930385	0					
ANR	8930447	Identifier	oname		8930385	1					
ANR	8930448	PrimaryExpression	0		8930385	1					
ANR	8930449	UnaryExpression	++ def	622:32:21862:21866	8930385	1	True				
ANR	8930450	IncDec	++		8930385	0					
ANR	8930451	Identifier	def		8930385	1					
ANR	8930452	IfStatement	if ( def -> proc == proc )		8930385	2					
ANR	8930453	Condition	def -> proc == proc	623:16:21885:21901	8930385	0	True				
ANR	8930454	EqualityExpression	def -> proc == proc		8930385	0		==			
ANR	8930455	PtrMemberAccess	def -> proc		8930385	0					
ANR	8930456	Identifier	def		8930385	0					
ANR	8930457	Identifier	proc		8930385	1					
ANR	8930458	Identifier	proc		8930385	1					
ANR	8930459	ReturnStatement	return ( opp - op_defs_all ) * OP_DEFS_MAX_SIZE + ( def - * opp ) ;	624:16:21920:21980	8930385	1	True				
ANR	8930460	AdditiveExpression	( opp - op_defs_all ) * OP_DEFS_MAX_SIZE + ( def - * opp )		8930385	0		+			
ANR	8930461	MultiplicativeExpression	( opp - op_defs_all ) * OP_DEFS_MAX_SIZE		8930385	0		*			
ANR	8930462	AdditiveExpression	opp - op_defs_all		8930385	0		-			
ANR	8930463	Identifier	opp		8930385	0					
ANR	8930464	Identifier	op_defs_all		8930385	1					
ANR	8930465	Identifier	OP_DEFS_MAX_SIZE		8930385	1					
ANR	8930466	AdditiveExpression	def - * opp		8930385	1		-			
ANR	8930467	Identifier	def		8930385	0					
ANR	8930468	UnaryOperationExpression	* opp		8930385	1					
ANR	8930469	UnaryOperator	*		8930385	0					
ANR	8930470	Identifier	opp		8930385	1					
ANR	8930471	ReturnStatement	return 0 ;	627:4:22042:22050	8930385	12	True				
ANR	8930472	PrimaryExpression	0		8930385	0					
ANR	8930473	ReturnType	ushort		8930385	1					
ANR	8930474	Identifier	op_find_index		8930385	2					
ANR	8930475	ParameterList	const ref * pref		8930385	3					
ANR	8930476	Parameter	const ref * pref	613:14:21565:21580	8930385	0	True				
ANR	8930477	ParameterType	const ref *		8930385	0					
ANR	8930478	Identifier	pref		8930385	1					
ANR	8930479	CFGEntryNode	ENTRY		8930385		True				
ANR	8930480	CFGExitNode	EXIT		8930385		True				
ANR	8930481	Symbol	proc		8930385						
ANR	8930482	Symbol	op_defs_all		8930385						
ANR	8930483	Symbol	OP_DEFS_MAX_SIZE		8930385						
ANR	8930484	Symbol	def		8930385						
ANR	8930485	Symbol	opend		8930385						
ANR	8930486	Symbol	opp		8930385						
ANR	8930487	Symbol	real_opproc		8930385						
ANR	8930488	Symbol	op_def_count		8930385						
ANR	8930489	Symbol	* def		8930385						
ANR	8930490	Symbol	def -> oname		8930385						
ANR	8930491	Symbol	* opend		8930385						
ANR	8930492	Symbol	pref		8930385						
ANR	8930493	Symbol	* opp		8930385						
ANR	8930494	Symbol	def -> proc		8930385						
ANR	8930495	Function	op_index_ref	635:0:22230:22642							
ANR	8930496	FunctionDef	"op_index_ref (const gs_memory_t * mem , uint index , ref * pref)"		8930495	0					
ANR	8930497	CompoundStatement		637:0:22296:22642	8930495	0					
ANR	8930498	IdentifierDeclStatement	const op_array_table * opt ;	638:4:22302:22327	8930495	0	True				
ANR	8930499	IdentifierDecl	* opt		8930495	0					
ANR	8930500	IdentifierDeclType	const op_array_table *		8930495	0					
ANR	8930501	Identifier	opt		8930495	1					
ANR	8930502	IfStatement	if ( op_index_is_operator ( index ) )		8930495	1					
ANR	8930503	Condition	op_index_is_operator ( index )	640:8:22338:22364	8930495	0	True				
ANR	8930504	CallExpression	op_index_is_operator ( index )		8930495	0					
ANR	8930505	Callee	op_index_is_operator		8930495	0					
ANR	8930506	Identifier	op_index_is_operator		8930495	0					
ANR	8930507	ArgumentList	index		8930495	1					
ANR	8930508	Argument	index		8930495	0					
ANR	8930509	Identifier	index		8930495	0					
ANR	8930510	CompoundStatement		4:37:70:70	8930495	1					
ANR	8930511	ExpressionStatement	"make_oper ( pref , index , op_index_proc ( index ) )"	641:8:22377:22421	8930495	0	True				
ANR	8930512	CallExpression	"make_oper ( pref , index , op_index_proc ( index ) )"		8930495	0					
ANR	8930513	Callee	make_oper		8930495	0					
ANR	8930514	Identifier	make_oper		8930495	0					
ANR	8930515	ArgumentList	pref		8930495	1					
ANR	8930516	Argument	pref		8930495	0					
ANR	8930517	Identifier	pref		8930495	0					
ANR	8930518	Argument	index		8930495	1					
ANR	8930519	Identifier	index		8930495	0					
ANR	8930520	Argument	op_index_proc ( index )		8930495	2					
ANR	8930521	CallExpression	op_index_proc ( index )		8930495	0					
ANR	8930522	Callee	op_index_proc		8930495	0					
ANR	8930523	Identifier	op_index_proc		8930495	0					
ANR	8930524	ArgumentList	index		8930495	1					
ANR	8930525	Argument	index		8930495	0					
ANR	8930526	Identifier	index		8930495	0					
ANR	8930527	ReturnStatement	return ;	642:8:22431:22437	8930495	1	True				
ANR	8930528	ExpressionStatement	"opt = get_op_array ( mem , index )"	644:4:22449:22479	8930495	2	True				
ANR	8930529	AssignmentExpression	"opt = get_op_array ( mem , index )"		8930495	0		=			
ANR	8930530	Identifier	opt		8930495	0					
ANR	8930531	CallExpression	"get_op_array ( mem , index )"		8930495	1					
ANR	8930532	Callee	get_op_array		8930495	0					
ANR	8930533	Identifier	get_op_array		8930495	0					
ANR	8930534	ArgumentList	mem		8930495	1					
ANR	8930535	Argument	mem		8930495	0					
ANR	8930536	Identifier	mem		8930495	0					
ANR	8930537	Argument	index		8930495	1					
ANR	8930538	Identifier	index		8930495	0					
ANR	8930539	ExpressionStatement	"make_tasv ( pref , t_oparray , opt -> attrs , index , const_refs , ( opt -> table . value . const_refs + index - opt -> base_index ) )"	645:4:22485:22640	8930495	3	True				
ANR	8930540	CallExpression	"make_tasv ( pref , t_oparray , opt -> attrs , index , const_refs , ( opt -> table . value . const_refs + index - opt -> base_index ) )"		8930495	0					
ANR	8930541	Callee	make_tasv		8930495	0					
ANR	8930542	Identifier	make_tasv		8930495	0					
ANR	8930543	ArgumentList	pref		8930495	1					
ANR	8930544	Argument	pref		8930495	0					
ANR	8930545	Identifier	pref		8930495	0					
ANR	8930546	Argument	t_oparray		8930495	1					
ANR	8930547	Identifier	t_oparray		8930495	0					
ANR	8930548	Argument	opt -> attrs		8930495	2					
ANR	8930549	PtrMemberAccess	opt -> attrs		8930495	0					
ANR	8930550	Identifier	opt		8930495	0					
ANR	8930551	Identifier	attrs		8930495	1					
ANR	8930552	Argument	index		8930495	3					
ANR	8930553	Identifier	index		8930495	0					
ANR	8930554	Argument	const_refs		8930495	4					
ANR	8930555	Identifier	const_refs		8930495	0					
ANR	8930556	Argument	opt -> table . value . const_refs + index - opt -> base_index		8930495	5					
ANR	8930557	AdditiveExpression	opt -> table . value . const_refs + index - opt -> base_index		8930495	0		+			
ANR	8930558	MemberAccess	opt -> table . value . const_refs		8930495	0					
ANR	8930559	MemberAccess	opt -> table . value		8930495	0					
ANR	8930560	PtrMemberAccess	opt -> table		8930495	0					
ANR	8930561	Identifier	opt		8930495	0					
ANR	8930562	Identifier	table		8930495	1					
ANR	8930563	Identifier	value		8930495	1					
ANR	8930564	Identifier	const_refs		8930495	1					
ANR	8930565	AdditiveExpression	index - opt -> base_index		8930495	1		-			
ANR	8930566	Identifier	index		8930495	0					
ANR	8930567	PtrMemberAccess	opt -> base_index		8930495	1					
ANR	8930568	Identifier	opt		8930495	0					
ANR	8930569	Identifier	base_index		8930495	1					
ANR	8930570	ReturnType	void		8930495	1					
ANR	8930571	Identifier	op_index_ref		8930495	2					
ANR	8930572	ParameterList	"const gs_memory_t * mem , uint index , ref * pref"		8930495	3					
ANR	8930573	Parameter	const gs_memory_t * mem	636:13:22248:22269	8930495	0	True				
ANR	8930574	ParameterType	const gs_memory_t *		8930495	0					
ANR	8930575	Identifier	mem		8930495	1					
ANR	8930576	Parameter	uint index	636:37:22272:22281	8930495	1	True				
ANR	8930577	ParameterType	uint		8930495	0					
ANR	8930578	Identifier	index		8930495	1					
ANR	8930579	Parameter	ref * pref	636:49:22284:22293	8930495	2	True				
ANR	8930580	ParameterType	ref *		8930495	0					
ANR	8930581	Identifier	pref		8930495	1					
ANR	8930582	CFGEntryNode	ENTRY		8930495		True				
ANR	8930583	CFGExitNode	EXIT		8930495		True				
ANR	8930584	Symbol	opt -> table		8930495						
ANR	8930585	Symbol	get_op_array		8930495						
ANR	8930586	Symbol	opt -> base_index		8930495						
ANR	8930587	Symbol	opt -> table . value . const_refs		8930495						
ANR	8930588	Symbol	index		8930495						
ANR	8930589	Symbol	opt -> attrs		8930495						
ANR	8930590	Symbol	op_index_proc		8930495						
ANR	8930591	Symbol	opt		8930495						
ANR	8930592	Symbol	mem		8930495						
ANR	8930593	Symbol	op_index_is_operator		8930495						
ANR	8930594	Symbol	pref		8930495						
ANR	8930595	Symbol	opt -> table . value		8930495						
ANR	8930596	Symbol	* opt		8930495						
ANR	8930597	Symbol	t_oparray		8930495						
ANR	8930598	Symbol	const_refs		8930495						
ANR	8930599	Function	array_get	653:0:22784:23760							
ANR	8930600	FunctionDef	"array_get (const gs_memory_t * mem , const ref * aref , long index_long , ref * pref)"		8930599	0					
ANR	8930601	CompoundStatement		655:0:22869:23760	8930599	0					
ANR	8930602	IfStatement	if ( ( ulong ) index_long >= r_size ( aref ) )		8930599	0					
ANR	8930603	Condition	( ulong ) index_long >= r_size ( aref )	656:8:22879:22911	8930599	0	True				
ANR	8930604	RelationalExpression	( ulong ) index_long >= r_size ( aref )		8930599	0		>=			
ANR	8930605	CastExpression	( ulong ) index_long		8930599	0					
ANR	8930606	CastTarget	ulong		8930599	0					
ANR	8930607	Identifier	index_long		8930599	1					
ANR	8930608	CallExpression	r_size ( aref )		8930599	1					
ANR	8930609	Callee	r_size		8930599	0					
ANR	8930610	Identifier	r_size		8930599	0					
ANR	8930611	ArgumentList	aref		8930599	1					
ANR	8930612	Argument	aref		8930599	0					
ANR	8930613	Identifier	aref		8930599	0					
ANR	8930614	ExpressionStatement	return_error ( gs_error_rangecheck )	657:8:22922:22955	8930599	1	True				
ANR	8930615	CallExpression	return_error ( gs_error_rangecheck )		8930599	0					
ANR	8930616	Callee	return_error		8930599	0					
ANR	8930617	Identifier	return_error		8930599	0					
ANR	8930618	ArgumentList	gs_error_rangecheck		8930599	1					
ANR	8930619	Argument	gs_error_rangecheck		8930599	0					
ANR	8930620	Identifier	gs_error_rangecheck		8930599	0					
ANR	8930621	SwitchStatement	switch ( r_type ( aref ) )		8930599	1					
ANR	8930622	Condition	r_type ( aref )	658:12:22969:22980	8930599	0	True				
ANR	8930623	CallExpression	r_type ( aref )		8930599	0					
ANR	8930624	Callee	r_type		8930599	0					
ANR	8930625	Identifier	r_type		8930599	0					
ANR	8930626	ArgumentList	aref		8930599	1					
ANR	8930627	Argument	aref		8930599	0					
ANR	8930628	Identifier	aref		8930599	0					
ANR	8930629	CompoundStatement		4:26:113:113	8930599	1					
ANR	8930630	Label	case t_array :	659:8:22993:23005	8930599	0	True				
ANR	8930631	Identifier	t_array		8930599	0					
ANR	8930632	CompoundStatement		7:16:167:216	8930599	1					
ANR	8930633	IdentifierDeclStatement	const ref * pvalue = aref -> value . refs + index_long ;	661:16:23037:23086	8930599	0	True				
ANR	8930634	IdentifierDecl	* pvalue = aref -> value . refs + index_long		8930599	0					
ANR	8930635	IdentifierDeclType	const ref *		8930599	0					
ANR	8930636	Identifier	pvalue		8930599	1					
ANR	8930637	AssignmentExpression	* pvalue = aref -> value . refs + index_long		8930599	2		=			
ANR	8930638	Identifier	pvalue		8930599	0					
ANR	8930639	AdditiveExpression	aref -> value . refs + index_long		8930599	1		+			
ANR	8930640	MemberAccess	aref -> value . refs		8930599	0					
ANR	8930641	PtrMemberAccess	aref -> value		8930599	0					
ANR	8930642	Identifier	aref		8930599	0					
ANR	8930643	Identifier	value		8930599	1					
ANR	8930644	Identifier	refs		8930599	1					
ANR	8930645	Identifier	index_long		8930599	1					
ANR	8930646	ExpressionStatement	"ref_assign ( pref , pvalue )"	663:16:23105:23129	8930599	1	True				
ANR	8930647	CallExpression	"ref_assign ( pref , pvalue )"		8930599	0					
ANR	8930648	Callee	ref_assign		8930599	0					
ANR	8930649	Identifier	ref_assign		8930599	0					
ANR	8930650	ArgumentList	pref		8930599	1					
ANR	8930651	Argument	pref		8930599	0					
ANR	8930652	Identifier	pref		8930599	0					
ANR	8930653	Argument	pvalue		8930599	1					
ANR	8930654	Identifier	pvalue		8930599	0					
ANR	8930655	BreakStatement	break ;	665:12:23157:23162	8930599	2	True				
ANR	8930656	Label	case t_mixedarray :	666:8:23172:23189	8930599	3	True				
ANR	8930657	Identifier	t_mixedarray		8930599	0					
ANR	8930658	CompoundStatement		15:16:414:443	8930599	4					
ANR	8930659	IdentifierDeclStatement	const ref_packed * packed = aref -> value . packed ;	668:16:23221:23266	8930599	0	True				
ANR	8930660	IdentifierDecl	* packed = aref -> value . packed		8930599	0					
ANR	8930661	IdentifierDeclType	const ref_packed *		8930599	0					
ANR	8930662	Identifier	packed		8930599	1					
ANR	8930663	AssignmentExpression	* packed = aref -> value . packed		8930599	2		=			
ANR	8930664	Identifier	packed		8930599	0					
ANR	8930665	MemberAccess	aref -> value . packed		8930599	1					
ANR	8930666	PtrMemberAccess	aref -> value		8930599	0					
ANR	8930667	Identifier	aref		8930599	0					
ANR	8930668	Identifier	value		8930599	1					
ANR	8930669	Identifier	packed		8930599	1					
ANR	8930670	IdentifierDeclStatement	uint index = ( uint ) index_long ;	669:16:23284:23313	8930599	1	True				
ANR	8930671	IdentifierDecl	index = ( uint ) index_long		8930599	0					
ANR	8930672	IdentifierDeclType	uint		8930599	0					
ANR	8930673	Identifier	index		8930599	1					
ANR	8930674	AssignmentExpression	index = ( uint ) index_long		8930599	2		=			
ANR	8930675	Identifier	index		8930599	0					
ANR	8930676	CastExpression	( uint ) index_long		8930599	1					
ANR	8930677	CastTarget	uint		8930599	0					
ANR	8930678	Identifier	index_long		8930599	1					
ANR	8930679	ForStatement	for ( ; index -- ; )		8930599	2					
ANR	8930680	Condition	index --	671:23:23339:23345	8930599	0	True				
ANR	8930681	PostIncDecOperationExpression	index --		8930599	0					
ANR	8930682	Identifier	index		8930599	0					
ANR	8930683	IncDec	--		8930599	1					
ANR	8930684	ExpressionStatement	packed = packed_next ( packed )	672:20:23369:23397	8930599	1	True				
ANR	8930685	AssignmentExpression	packed = packed_next ( packed )		8930599	0		=			
ANR	8930686	Identifier	packed		8930599	0					
ANR	8930687	CallExpression	packed_next ( packed )		8930599	1					
ANR	8930688	Callee	packed_next		8930599	0					
ANR	8930689	Identifier	packed_next		8930599	0					
ANR	8930690	ArgumentList	packed		8930599	1					
ANR	8930691	Argument	packed		8930599	0					
ANR	8930692	Identifier	packed		8930599	0					
ANR	8930693	ExpressionStatement	"packed_get ( mem , packed , pref )"	673:16:23415:23444	8930599	3	True				
ANR	8930694	CallExpression	"packed_get ( mem , packed , pref )"		8930599	0					
ANR	8930695	Callee	packed_get		8930599	0					
ANR	8930696	Identifier	packed_get		8930599	0					
ANR	8930697	ArgumentList	mem		8930599	1					
ANR	8930698	Argument	mem		8930599	0					
ANR	8930699	Identifier	mem		8930599	0					
ANR	8930700	Argument	packed		8930599	1					
ANR	8930701	Identifier	packed		8930599	0					
ANR	8930702	Argument	pref		8930599	2					
ANR	8930703	Identifier	pref		8930599	0					
ANR	8930704	BreakStatement	break ;	675:12:23472:23477	8930599	5	True				
ANR	8930705	Label	case t_shortarray :	676:8:23487:23504	8930599	6	True				
ANR	8930706	Identifier	t_shortarray		8930599	0					
ANR	8930707	CompoundStatement		24:16:666:724	8930599	7					
ANR	8930708	IdentifierDeclStatement	const ref_packed * packed = aref -> value . packed + index_long ;	678:16:23536:23594	8930599	0	True				
ANR	8930709	IdentifierDecl	* packed = aref -> value . packed + index_long		8930599	0					
ANR	8930710	IdentifierDeclType	const ref_packed *		8930599	0					
ANR	8930711	Identifier	packed		8930599	1					
ANR	8930712	AssignmentExpression	* packed = aref -> value . packed + index_long		8930599	2		=			
ANR	8930713	Identifier	packed		8930599	0					
ANR	8930714	AdditiveExpression	aref -> value . packed + index_long		8930599	1		+			
ANR	8930715	MemberAccess	aref -> value . packed		8930599	0					
ANR	8930716	PtrMemberAccess	aref -> value		8930599	0					
ANR	8930717	Identifier	aref		8930599	0					
ANR	8930718	Identifier	value		8930599	1					
ANR	8930719	Identifier	packed		8930599	1					
ANR	8930720	Identifier	index_long		8930599	1					
ANR	8930721	ExpressionStatement	"packed_get ( mem , packed , pref )"	680:16:23613:23642	8930599	1	True				
ANR	8930722	CallExpression	"packed_get ( mem , packed , pref )"		8930599	0					
ANR	8930723	Callee	packed_get		8930599	0					
ANR	8930724	Identifier	packed_get		8930599	0					
ANR	8930725	ArgumentList	mem		8930599	1					
ANR	8930726	Argument	mem		8930599	0					
ANR	8930727	Identifier	mem		8930599	0					
ANR	8930728	Argument	packed		8930599	1					
ANR	8930729	Identifier	packed		8930599	0					
ANR	8930730	Argument	pref		8930599	2					
ANR	8930731	Identifier	pref		8930599	0					
ANR	8930732	BreakStatement	break ;	682:12:23670:23675	8930599	8	True				
ANR	8930733	Label	default :	683:8:23685:23692	8930599	9	True				
ANR	8930734	Identifier	default		8930599	0					
ANR	8930735	ExpressionStatement	return_error ( gs_error_typecheck )	684:12:23706:23738	8930599	10	True				
ANR	8930736	CallExpression	return_error ( gs_error_typecheck )		8930599	0					
ANR	8930737	Callee	return_error		8930599	0					
ANR	8930738	Identifier	return_error		8930599	0					
ANR	8930739	ArgumentList	gs_error_typecheck		8930599	1					
ANR	8930740	Argument	gs_error_typecheck		8930599	0					
ANR	8930741	Identifier	gs_error_typecheck		8930599	0					
ANR	8930742	ReturnStatement	return 0 ;	686:4:23750:23758	8930599	2	True				
ANR	8930743	PrimaryExpression	0		8930599	0					
ANR	8930744	ReturnType	int		8930599	1					
ANR	8930745	Identifier	array_get		8930599	2					
ANR	8930746	ParameterList	"const gs_memory_t * mem , const ref * aref , long index_long , ref * pref"		8930599	3					
ANR	8930747	Parameter	const gs_memory_t * mem	654:10:22798:22819	8930599	0	True				
ANR	8930748	ParameterType	const gs_memory_t *		8930599	0					
ANR	8930749	Identifier	mem		8930599	1					
ANR	8930750	Parameter	const ref * aref	654:34:22822:22837	8930599	1	True				
ANR	8930751	ParameterType	const ref *		8930599	0					
ANR	8930752	Identifier	aref		8930599	1					
ANR	8930753	Parameter	long index_long	654:52:22840:22854	8930599	2	True				
ANR	8930754	ParameterType	long		8930599	0					
ANR	8930755	Identifier	index_long		8930599	1					
ANR	8930756	Parameter	ref * pref	654:69:22857:22866	8930599	3	True				
ANR	8930757	ParameterType	ref *		8930599	0					
ANR	8930758	Identifier	pref		8930599	1					
ANR	8930759	CFGEntryNode	ENTRY		8930599		True				
ANR	8930760	CFGExitNode	EXIT		8930599		True				
ANR	8930761	Symbol	gs_error_rangecheck		8930599						
ANR	8930762	Symbol	packed_next		8930599						
ANR	8930763	Symbol	index		8930599						
ANR	8930764	Symbol	pvalue		8930599						
ANR	8930765	Symbol	index_long		8930599						
ANR	8930766	Symbol	gs_error_typecheck		8930599						
ANR	8930767	Symbol	mem		8930599						
ANR	8930768	Symbol	* aref		8930599						
ANR	8930769	Symbol	pref		8930599						
ANR	8930770	Symbol	r_size		8930599						
ANR	8930771	Symbol	aref -> value . refs		8930599						
ANR	8930772	Symbol	aref -> value . packed		8930599						
ANR	8930773	Symbol	aref -> value		8930599						
ANR	8930774	Symbol	packed		8930599						
ANR	8930775	Symbol	r_type		8930599						
ANR	8930776	Symbol	aref		8930599						
ANR	8930777	Function	packed_get	693:0:23958:24809							
ANR	8930778	FunctionDef	"packed_get (const gs_memory_t * mem , const ref_packed * packed , ref * pref)"		8930777	0					
ANR	8930779	CompoundStatement		695:0:24037:24809	8930777	0					
ANR	8930780	IdentifierDeclStatement	const ref_packed elt = * packed ;	696:4:24043:24073	8930777	0	True				
ANR	8930781	IdentifierDecl	elt = * packed		8930777	0					
ANR	8930782	IdentifierDeclType	const ref_packed		8930777	0					
ANR	8930783	Identifier	elt		8930777	1					
ANR	8930784	AssignmentExpression	elt = * packed		8930777	2		=			
ANR	8930785	Identifier	elt		8930777	0					
ANR	8930786	UnaryOperationExpression	* packed		8930777	1					
ANR	8930787	UnaryOperator	*		8930777	0					
ANR	8930788	Identifier	packed		8930777	1					
ANR	8930789	IdentifierDeclStatement	uint value = elt & packed_value_mask ;	697:4:24079:24115	8930777	1	True				
ANR	8930790	IdentifierDecl	value = elt & packed_value_mask		8930777	0					
ANR	8930791	IdentifierDeclType	uint		8930777	0					
ANR	8930792	Identifier	value		8930777	1					
ANR	8930793	AssignmentExpression	value = elt & packed_value_mask		8930777	2		=			
ANR	8930794	Identifier	value		8930777	0					
ANR	8930795	BitAndExpression	elt & packed_value_mask		8930777	1		&			
ANR	8930796	Identifier	elt		8930777	0					
ANR	8930797	Identifier	packed_value_mask		8930777	1					
ANR	8930798	SwitchStatement	switch ( elt >> r_packed_type_shift )		8930777	2					
ANR	8930799	Condition	elt >> r_packed_type_shift	699:12:24130:24155	8930777	0	True				
ANR	8930800	ShiftExpression	elt >> r_packed_type_shift		8930777	0		>>			
ANR	8930801	Identifier	elt		8930777	0					
ANR	8930802	Identifier	r_packed_type_shift		8930777	1					
ANR	8930803	CompoundStatement		5:40:120:120	8930777	1					
ANR	8930804	Label	default :	700:8:24168:24175	8930777	0	True				
ANR	8930805	Identifier	default		8930777	0					
ANR	8930806	ExpressionStatement	make_null ( pref )	701:12:24215:24230	8930777	1	True				
ANR	8930807	CallExpression	make_null ( pref )		8930777	0					
ANR	8930808	Callee	make_null		8930777	0					
ANR	8930809	Identifier	make_null		8930777	0					
ANR	8930810	ArgumentList	pref		8930777	1					
ANR	8930811	Argument	pref		8930777	0					
ANR	8930812	Identifier	pref		8930777	0					
ANR	8930813	BreakStatement	break ;	702:12:24244:24249	8930777	2	True				
ANR	8930814	Label	case pt_executable_operator :	703:8:24259:24286	8930777	3	True				
ANR	8930815	Identifier	pt_executable_operator		8930777	0					
ANR	8930816	ExpressionStatement	"op_index_ref ( mem , value , pref )"	704:12:24300:24330	8930777	4	True				
ANR	8930817	CallExpression	"op_index_ref ( mem , value , pref )"		8930777	0					
ANR	8930818	Callee	op_index_ref		8930777	0					
ANR	8930819	Identifier	op_index_ref		8930777	0					
ANR	8930820	ArgumentList	mem		8930777	1					
ANR	8930821	Argument	mem		8930777	0					
ANR	8930822	Identifier	mem		8930777	0					
ANR	8930823	Argument	value		8930777	1					
ANR	8930824	Identifier	value		8930777	0					
ANR	8930825	Argument	pref		8930777	2					
ANR	8930826	Identifier	pref		8930777	0					
ANR	8930827	BreakStatement	break ;	705:12:24344:24349	8930777	5	True				
ANR	8930828	Label	case pt_integer :	706:8:24359:24374	8930777	6	True				
ANR	8930829	Identifier	pt_integer		8930777	0					
ANR	8930830	ExpressionStatement	"make_int ( pref , ( ps_int ) value + packed_min_intval )"	707:12:24388:24437	8930777	7	True				
ANR	8930831	CallExpression	"make_int ( pref , ( ps_int ) value + packed_min_intval )"		8930777	0					
ANR	8930832	Callee	make_int		8930777	0					
ANR	8930833	Identifier	make_int		8930777	0					
ANR	8930834	ArgumentList	pref		8930777	1					
ANR	8930835	Argument	pref		8930777	0					
ANR	8930836	Identifier	pref		8930777	0					
ANR	8930837	Argument	( ps_int ) value + packed_min_intval		8930777	1					
ANR	8930838	AdditiveExpression	( ps_int ) value + packed_min_intval		8930777	0		+			
ANR	8930839	CastExpression	( ps_int ) value		8930777	0					
ANR	8930840	CastTarget	ps_int		8930777	0					
ANR	8930841	Identifier	value		8930777	1					
ANR	8930842	Identifier	packed_min_intval		8930777	1					
ANR	8930843	BreakStatement	break ;	708:12:24451:24456	8930777	8	True				
ANR	8930844	Label	case pt_literal_name :	709:8:24466:24486	8930777	9	True				
ANR	8930845	Identifier	pt_literal_name		8930777	0					
ANR	8930846	ExpressionStatement	"name_index_ref ( mem , value , pref )"	710:12:24500:24532	8930777	10	True				
ANR	8930847	CallExpression	"name_index_ref ( mem , value , pref )"		8930777	0					
ANR	8930848	Callee	name_index_ref		8930777	0					
ANR	8930849	Identifier	name_index_ref		8930777	0					
ANR	8930850	ArgumentList	mem		8930777	1					
ANR	8930851	Argument	mem		8930777	0					
ANR	8930852	Identifier	mem		8930777	0					
ANR	8930853	Argument	value		8930777	1					
ANR	8930854	Identifier	value		8930777	0					
ANR	8930855	Argument	pref		8930777	2					
ANR	8930856	Identifier	pref		8930777	0					
ANR	8930857	BreakStatement	break ;	711:12:24546:24551	8930777	11	True				
ANR	8930858	Label	case pt_executable_name :	712:8:24561:24584	8930777	12	True				
ANR	8930859	Identifier	pt_executable_name		8930777	0					
ANR	8930860	ExpressionStatement	"name_index_ref ( mem , value , pref )"	713:12:24598:24630	8930777	13	True				
ANR	8930861	CallExpression	"name_index_ref ( mem , value , pref )"		8930777	0					
ANR	8930862	Callee	name_index_ref		8930777	0					
ANR	8930863	Identifier	name_index_ref		8930777	0					
ANR	8930864	ArgumentList	mem		8930777	1					
ANR	8930865	Argument	mem		8930777	0					
ANR	8930866	Identifier	mem		8930777	0					
ANR	8930867	Argument	value		8930777	1					
ANR	8930868	Identifier	value		8930777	0					
ANR	8930869	Argument	pref		8930777	2					
ANR	8930870	Identifier	pref		8930777	0					
ANR	8930871	ExpressionStatement	"r_set_attrs ( pref , a_executable )"	714:12:24644:24675	8930777	14	True				
ANR	8930872	CallExpression	"r_set_attrs ( pref , a_executable )"		8930777	0					
ANR	8930873	Callee	r_set_attrs		8930777	0					
ANR	8930874	Identifier	r_set_attrs		8930777	0					
ANR	8930875	ArgumentList	pref		8930777	1					
ANR	8930876	Argument	pref		8930777	0					
ANR	8930877	Identifier	pref		8930777	0					
ANR	8930878	Argument	a_executable		8930777	1					
ANR	8930879	Identifier	a_executable		8930777	0					
ANR	8930880	BreakStatement	break ;	715:12:24689:24694	8930777	15	True				
ANR	8930881	Label	case pt_full_ref :	716:8:24704:24720	8930777	16	True				
ANR	8930882	Identifier	pt_full_ref		8930777	0					
ANR	8930883	Statement	case	717:8:24730:24733	8930777	17	True				
ANR	8930884	Statement	pt_full_ref	717:13:24735:24745	8930777	18	True				
ANR	8930885	Statement	+	717:25:24747:24747	8930777	19	True				
ANR	8930886	Label	1 :	717:27:24749:24750	8930777	20	True				
ANR	8930887	ExpressionStatement	"ref_assign ( pref , ( const ref * ) packed )"	718:12:24764:24801	8930777	21	True				
ANR	8930888	CallExpression	"ref_assign ( pref , ( const ref * ) packed )"		8930777	0					
ANR	8930889	Callee	ref_assign		8930777	0					
ANR	8930890	Identifier	ref_assign		8930777	0					
ANR	8930891	ArgumentList	pref		8930777	1					
ANR	8930892	Argument	pref		8930777	0					
ANR	8930893	Identifier	pref		8930777	0					
ANR	8930894	Argument	( const ref * ) packed		8930777	1					
ANR	8930895	CastExpression	( const ref * ) packed		8930777	0					
ANR	8930896	CastTarget	const ref *		8930777	0					
ANR	8930897	Identifier	packed		8930777	1					
ANR	8930898	ReturnType	void		8930777	1					
ANR	8930899	Identifier	packed_get		8930777	2					
ANR	8930900	ParameterList	"const gs_memory_t * mem , const ref_packed * packed , ref * pref"		8930777	3					
ANR	8930901	Parameter	const gs_memory_t * mem	694:11:23974:23995	8930777	0	True				
ANR	8930902	ParameterType	const gs_memory_t *		8930777	0					
ANR	8930903	Identifier	mem		8930777	1					
ANR	8930904	Parameter	const ref_packed * packed	694:35:23998:24022	8930777	1	True				
ANR	8930905	ParameterType	const ref_packed *		8930777	0					
ANR	8930906	Identifier	packed		8930777	1					
ANR	8930907	Parameter	ref * pref	694:62:24025:24034	8930777	2	True				
ANR	8930908	ParameterType	ref *		8930777	0					
ANR	8930909	Identifier	pref		8930777	1					
ANR	8930910	CFGEntryNode	ENTRY		8930777		True				
ANR	8930911	CFGExitNode	EXIT		8930777		True				
ANR	8930912	Symbol	r_packed_type_shift		8930777						
ANR	8930913	Symbol	* packed		8930777						
ANR	8930914	Symbol	mem		8930777						
ANR	8930915	Symbol	pref		8930777						
ANR	8930916	Symbol	packed_min_intval		8930777						
ANR	8930917	Symbol	a_executable		8930777						
ANR	8930918	Symbol	packed		8930777						
ANR	8930919	Symbol	elt		8930777						
ANR	8930920	Symbol	value		8930777						
ANR	8930921	Symbol	packed_value_mask		8930777						
ANR	8930922	Function	refs_check_space	725:0:24964:25106							
ANR	8930923	FunctionDef	"refs_check_space (const ref * bot , uint size , uint space)"		8930922	0					
ANR	8930924	CompoundStatement		727:0:25025:25106	8930922	0					
ANR	8930925	ForStatement	for ( ; size -- ; bot ++ )		8930922	0					
ANR	8930926	Condition	size --	728:11:25038:25043	8930922	0	True				
ANR	8930927	PostIncDecOperationExpression	size --		8930922	0					
ANR	8930928	Identifier	size		8930922	0					
ANR	8930929	IncDec	--		8930922	1					
ANR	8930930	PostIncDecOperationExpression	bot ++	728:19:25046:25050	8930922	1	True				
ANR	8930931	Identifier	bot		8930922	0					
ANR	8930932	IncDec	++		8930922	1					
ANR	8930933	ExpressionStatement	"store_check_space ( space , bot )"	729:8:25061:25090	8930922	2	True				
ANR	8930934	CallExpression	"store_check_space ( space , bot )"		8930922	0					
ANR	8930935	Callee	store_check_space		8930922	0					
ANR	8930936	Identifier	store_check_space		8930922	0					
ANR	8930937	ArgumentList	space		8930922	1					
ANR	8930938	Argument	space		8930922	0					
ANR	8930939	Identifier	space		8930922	0					
ANR	8930940	Argument	bot		8930922	1					
ANR	8930941	Identifier	bot		8930922	0					
ANR	8930942	ReturnStatement	return 0 ;	730:4:25096:25104	8930922	1	True				
ANR	8930943	PrimaryExpression	0		8930922	0					
ANR	8930944	ReturnType	int		8930922	1					
ANR	8930945	Identifier	refs_check_space		8930922	2					
ANR	8930946	ParameterList	"const ref * bot , uint size , uint space"		8930922	3					
ANR	8930947	Parameter	const ref * bot	726:17:24985:24999	8930922	0	True				
ANR	8930948	ParameterType	const ref *		8930922	0					
ANR	8930949	Identifier	bot		8930922	1					
ANR	8930950	Parameter	uint size	726:34:25002:25010	8930922	1	True				
ANR	8930951	ParameterType	uint		8930922	0					
ANR	8930952	Identifier	size		8930922	1					
ANR	8930953	Parameter	uint space	726:45:25013:25022	8930922	2	True				
ANR	8930954	ParameterType	uint		8930922	0					
ANR	8930955	Identifier	space		8930922	1					
ANR	8930956	CFGEntryNode	ENTRY		8930922		True				
ANR	8930957	CFGExitNode	EXIT		8930922		True				
ANR	8930958	Symbol	size		8930922						
ANR	8930959	Symbol	bot		8930922						
ANR	8930960	Symbol	space		8930922						
ANR	8930961	Function	string_to_ref	736:0:25196:25498							
ANR	8930962	FunctionDef	"string_to_ref (const char * cstr , ref * pref , gs_ref_memory_t * mem , client_name_t cname)"		8930961	0					
ANR	8930963	CompoundStatement		739:0:25302:25498	8930961	0					
ANR	8930964	IdentifierDeclStatement	uint size = strlen ( cstr ) ;	740:4:25308:25332	8930961	0	True				
ANR	8930965	IdentifierDecl	size = strlen ( cstr )		8930961	0					
ANR	8930966	IdentifierDeclType	uint		8930961	0					
ANR	8930967	Identifier	size		8930961	1					
ANR	8930968	AssignmentExpression	size = strlen ( cstr )		8930961	2		=			
ANR	8930969	Identifier	size		8930961	0					
ANR	8930970	CallExpression	strlen ( cstr )		8930961	1					
ANR	8930971	Callee	strlen		8930961	0					
ANR	8930972	Identifier	strlen		8930961	0					
ANR	8930973	ArgumentList	cstr		8930961	1					
ANR	8930974	Argument	cstr		8930961	0					
ANR	8930975	Identifier	cstr		8930961	0					
ANR	8930976	IdentifierDeclStatement	"int code = gs_alloc_string_ref ( mem , pref , a_all , size , cname ) ;"	741:4:25338:25399	8930961	1	True				
ANR	8930977	IdentifierDecl	"code = gs_alloc_string_ref ( mem , pref , a_all , size , cname )"		8930961	0					
ANR	8930978	IdentifierDeclType	int		8930961	0					
ANR	8930979	Identifier	code		8930961	1					
ANR	8930980	AssignmentExpression	"code = gs_alloc_string_ref ( mem , pref , a_all , size , cname )"		8930961	2		=			
ANR	8930981	Identifier	code		8930961	0					
ANR	8930982	CallExpression	"gs_alloc_string_ref ( mem , pref , a_all , size , cname )"		8930961	1					
ANR	8930983	Callee	gs_alloc_string_ref		8930961	0					
ANR	8930984	Identifier	gs_alloc_string_ref		8930961	0					
ANR	8930985	ArgumentList	mem		8930961	1					
ANR	8930986	Argument	mem		8930961	0					
ANR	8930987	Identifier	mem		8930961	0					
ANR	8930988	Argument	pref		8930961	1					
ANR	8930989	Identifier	pref		8930961	0					
ANR	8930990	Argument	a_all		8930961	2					
ANR	8930991	Identifier	a_all		8930961	0					
ANR	8930992	Argument	size		8930961	3					
ANR	8930993	Identifier	size		8930961	0					
ANR	8930994	Argument	cname		8930961	4					
ANR	8930995	Identifier	cname		8930961	0					
ANR	8930996	IfStatement	if ( code < 0 )		8930961	2					
ANR	8930997	Condition	code < 0	743:8:25410:25417	8930961	0	True				
ANR	8930998	RelationalExpression	code < 0		8930961	0		<			
ANR	8930999	Identifier	code		8930961	0					
ANR	8931000	PrimaryExpression	0		8930961	1					
ANR	8931001	ReturnStatement	return code ;	744:8:25428:25439	8930961	1	True				
ANR	8931002	Identifier	code		8930961	0					
ANR	8931003	ExpressionStatement	"memcpy ( pref -> value . bytes , cstr , size )"	745:4:25445:25482	8930961	3	True				
ANR	8931004	CallExpression	"memcpy ( pref -> value . bytes , cstr , size )"		8930961	0					
ANR	8931005	Callee	memcpy		8930961	0					
ANR	8931006	Identifier	memcpy		8930961	0					
ANR	8931007	ArgumentList	pref -> value . bytes		8930961	1					
ANR	8931008	Argument	pref -> value . bytes		8930961	0					
ANR	8931009	MemberAccess	pref -> value . bytes		8930961	0					
ANR	8931010	PtrMemberAccess	pref -> value		8930961	0					
ANR	8931011	Identifier	pref		8930961	0					
ANR	8931012	Identifier	value		8930961	1					
ANR	8931013	Identifier	bytes		8930961	1					
ANR	8931014	Argument	cstr		8930961	1					
ANR	8931015	Identifier	cstr		8930961	0					
ANR	8931016	Argument	size		8930961	2					
ANR	8931017	Identifier	size		8930961	0					
ANR	8931018	ReturnStatement	return 0 ;	746:4:25488:25496	8930961	4	True				
ANR	8931019	PrimaryExpression	0		8930961	0					
ANR	8931020	ReturnType	int		8930961	1					
ANR	8931021	Identifier	string_to_ref		8930961	2					
ANR	8931022	ParameterList	"const char * cstr , ref * pref , gs_ref_memory_t * mem , client_name_t cname"		8930961	3					
ANR	8931023	Parameter	const char * cstr	737:14:25214:25229	8930961	0	True				
ANR	8931024	ParameterType	const char *		8930961	0					
ANR	8931025	Identifier	cstr		8930961	1					
ANR	8931026	Parameter	ref * pref	737:32:25232:25241	8930961	1	True				
ANR	8931027	ParameterType	ref *		8930961	0					
ANR	8931028	Identifier	pref		8930961	1					
ANR	8931029	Parameter	gs_ref_memory_t * mem	737:44:25244:25264	8930961	2	True				
ANR	8931030	ParameterType	gs_ref_memory_t *		8930961	0					
ANR	8931031	Identifier	mem		8930961	1					
ANR	8931032	Parameter	client_name_t cname	738:14:25281:25299	8930961	3	True				
ANR	8931033	ParameterType	client_name_t		8930961	0					
ANR	8931034	Identifier	cname		8930961	1					
ANR	8931035	CFGEntryNode	ENTRY		8930961		True				
ANR	8931036	CFGExitNode	EXIT		8930961		True				
ANR	8931037	Symbol	cstr		8930961						
ANR	8931038	Symbol	a_all		8930961						
ANR	8931039	Symbol	strlen		8930961						
ANR	8931040	Symbol	code		8930961						
ANR	8931041	Symbol	mem		8930961						
ANR	8931042	Symbol	size		8930961						
ANR	8931043	Symbol	pref		8930961						
ANR	8931044	Symbol	pref -> value		8930961						
ANR	8931045	Symbol	pref -> value . bytes		8930961						
ANR	8931046	Symbol	cname		8930961						
ANR	8931047	Symbol	* pref		8930961						
ANR	8931048	Symbol	gs_alloc_string_ref		8930961						
ANR	8931049	Function	ref_to_string	751:0:25601:25903							
ANR	8931050	FunctionDef	"ref_to_string (const ref * pref , gs_memory_t * mem , client_name_t cname)"		8931049	0					
ANR	8931051	CompoundStatement		753:0:25680:25903	8931049	0					
ANR	8931052	IdentifierDeclStatement	uint size = r_size ( pref ) ;	754:4:25686:25710	8931049	0	True				
ANR	8931053	IdentifierDecl	size = r_size ( pref )		8931049	0					
ANR	8931054	IdentifierDeclType	uint		8931049	0					
ANR	8931055	Identifier	size		8931049	1					
ANR	8931056	AssignmentExpression	size = r_size ( pref )		8931049	2		=			
ANR	8931057	Identifier	size		8931049	0					
ANR	8931058	CallExpression	r_size ( pref )		8931049	1					
ANR	8931059	Callee	r_size		8931049	0					
ANR	8931060	Identifier	r_size		8931049	0					
ANR	8931061	ArgumentList	pref		8931049	1					
ANR	8931062	Argument	pref		8931049	0					
ANR	8931063	Identifier	pref		8931049	0					
ANR	8931064	IdentifierDeclStatement	"char * str = ( char * ) gs_alloc_string ( mem , size + 1 , cname ) ;"	755:4:25716:25773	8931049	1	True				
ANR	8931065	IdentifierDecl	"* str = ( char * ) gs_alloc_string ( mem , size + 1 , cname )"		8931049	0					
ANR	8931066	IdentifierDeclType	char *		8931049	0					
ANR	8931067	Identifier	str		8931049	1					
ANR	8931068	AssignmentExpression	"* str = ( char * ) gs_alloc_string ( mem , size + 1 , cname )"		8931049	2		=			
ANR	8931069	Identifier	str		8931049	0					
ANR	8931070	CastExpression	"( char * ) gs_alloc_string ( mem , size + 1 , cname )"		8931049	1					
ANR	8931071	CastTarget	char *		8931049	0					
ANR	8931072	CallExpression	"gs_alloc_string ( mem , size + 1 , cname )"		8931049	1					
ANR	8931073	Callee	gs_alloc_string		8931049	0					
ANR	8931074	Identifier	gs_alloc_string		8931049	0					
ANR	8931075	ArgumentList	mem		8931049	1					
ANR	8931076	Argument	mem		8931049	0					
ANR	8931077	Identifier	mem		8931049	0					
ANR	8931078	Argument	size + 1		8931049	1					
ANR	8931079	AdditiveExpression	size + 1		8931049	0		+			
ANR	8931080	Identifier	size		8931049	0					
ANR	8931081	PrimaryExpression	1		8931049	1					
ANR	8931082	Argument	cname		8931049	2					
ANR	8931083	Identifier	cname		8931049	0					
ANR	8931084	IfStatement	if ( str == 0 )		8931049	2					
ANR	8931085	Condition	str == 0	757:8:25784:25791	8931049	0	True				
ANR	8931086	EqualityExpression	str == 0		8931049	0		==			
ANR	8931087	Identifier	str		8931049	0					
ANR	8931088	PrimaryExpression	0		8931049	1					
ANR	8931089	ReturnStatement	return 0 ;	758:8:25802:25810	8931049	1	True				
ANR	8931090	PrimaryExpression	0		8931049	0					
ANR	8931091	ExpressionStatement	"memcpy ( str , ( const char * ) pref -> value . bytes , size )"	759:4:25816:25866	8931049	3	True				
ANR	8931092	CallExpression	"memcpy ( str , ( const char * ) pref -> value . bytes , size )"		8931049	0					
ANR	8931093	Callee	memcpy		8931049	0					
ANR	8931094	Identifier	memcpy		8931049	0					
ANR	8931095	ArgumentList	str		8931049	1					
ANR	8931096	Argument	str		8931049	0					
ANR	8931097	Identifier	str		8931049	0					
ANR	8931098	Argument	( const char * ) pref -> value . bytes		8931049	1					
ANR	8931099	CastExpression	( const char * ) pref -> value . bytes		8931049	0					
ANR	8931100	CastTarget	const char *		8931049	0					
ANR	8931101	MemberAccess	pref -> value . bytes		8931049	1					
ANR	8931102	PtrMemberAccess	pref -> value		8931049	0					
ANR	8931103	Identifier	pref		8931049	0					
ANR	8931104	Identifier	value		8931049	1					
ANR	8931105	Identifier	bytes		8931049	1					
ANR	8931106	Argument	size		8931049	2					
ANR	8931107	Identifier	size		8931049	0					
ANR	8931108	ExpressionStatement	str [ size ] = 0	760:4:25872:25885	8931049	4	True				
ANR	8931109	AssignmentExpression	str [ size ] = 0		8931049	0		=			
ANR	8931110	ArrayIndexing	str [ size ]		8931049	0					
ANR	8931111	Identifier	str		8931049	0					
ANR	8931112	Identifier	size		8931049	1					
ANR	8931113	PrimaryExpression	0		8931049	1					
ANR	8931114	ReturnStatement	return str ;	761:4:25891:25901	8931049	5	True				
ANR	8931115	Identifier	str		8931049	0					
ANR	8931116	ReturnType	char *		8931049	1					
ANR	8931117	Identifier	ref_to_string		8931049	2					
ANR	8931118	ParameterList	"const ref * pref , gs_memory_t * mem , client_name_t cname"		8931049	3					
ANR	8931119	Parameter	const ref * pref	752:14:25622:25637	8931049	0	True				
ANR	8931120	ParameterType	const ref *		8931049	0					
ANR	8931121	Identifier	pref		8931049	1					
ANR	8931122	Parameter	gs_memory_t * mem	752:32:25640:25656	8931049	1	True				
ANR	8931123	ParameterType	gs_memory_t *		8931049	0					
ANR	8931124	Identifier	mem		8931049	1					
ANR	8931125	Parameter	client_name_t cname	752:51:25659:25677	8931049	2	True				
ANR	8931126	ParameterType	client_name_t		8931049	0					
ANR	8931127	Identifier	cname		8931049	1					
ANR	8931128	CFGEntryNode	ENTRY		8931049		True				
ANR	8931129	CFGExitNode	EXIT		8931049		True				
ANR	8931130	Symbol	str		8931049						
ANR	8931131	Symbol	* size		8931049						
ANR	8931132	Symbol	mem		8931049						
ANR	8931133	Symbol	size		8931049						
ANR	8931134	Symbol	pref		8931049						
ANR	8931135	Symbol	r_size		8931049						
ANR	8931136	Symbol	pref -> value		8931049						
ANR	8931137	Symbol	pref -> value . bytes		8931049						
ANR	8931138	Symbol	cname		8931049						
ANR	8931139	Symbol	* pref		8931049						
ANR	8931140	Symbol	gs_alloc_string		8931049						
ANR	8931141	Symbol	* str		8931049						
ANR	8931142	Function	num_params	773:0:26346:27083							
ANR	8931143	FunctionDef	"num_params (const ref * op , int count , double * pval)"		8931142	0					
ANR	8931144	CompoundStatement		775:0:26402:27083	8931142	0					
ANR	8931145	IdentifierDeclStatement	int mask = 0 ;	776:4:26408:26420	8931142	0	True				
ANR	8931146	IdentifierDecl	mask = 0		8931142	0					
ANR	8931147	IdentifierDeclType	int		8931142	0					
ANR	8931148	Identifier	mask		8931142	1					
ANR	8931149	AssignmentExpression	mask = 0		8931142	2		=			
ANR	8931150	Identifier	mask		8931142	0					
ANR	8931151	PrimaryExpression	0		8931142	1					
ANR	8931152	ExpressionStatement	pval += count	778:4:26427:26440	8931142	1	True				
ANR	8931153	AssignmentExpression	pval += count		8931142	0		+=			
ANR	8931154	Identifier	pval		8931142	0					
ANR	8931155	Identifier	count		8931142	1					
ANR	8931156	WhileStatement	while ( -- count >= 0 )		8931142	2					
ANR	8931157	Condition	-- count >= 0	779:11:26453:26464	8931142	0	True				
ANR	8931158	RelationalExpression	-- count >= 0		8931142	0		>=			
ANR	8931159	UnaryExpression	-- count		8931142	0					
ANR	8931160	IncDec	--		8931142	0					
ANR	8931161	Identifier	count		8931142	1					
ANR	8931162	PrimaryExpression	0		8931142	1					
ANR	8931163	CompoundStatement		5:25:64:64	8931142	1					
ANR	8931164	ExpressionStatement	mask <<= 1	780:8:26477:26487	8931142	0	True				
ANR	8931165	AssignmentExpression	mask <<= 1		8931142	0		<<=			
ANR	8931166	Identifier	mask		8931142	0					
ANR	8931167	PrimaryExpression	1		8931142	1					
ANR	8931168	SwitchStatement	switch ( r_type ( op ) )		8931142	1					
ANR	8931169	Condition	r_type ( op )	781:16:26505:26514	8931142	0	True				
ANR	8931170	CallExpression	r_type ( op )		8931142	0					
ANR	8931171	Callee	r_type		8931142	0					
ANR	8931172	Identifier	r_type		8931142	0					
ANR	8931173	ArgumentList	op		8931142	1					
ANR	8931174	Argument	op		8931142	0					
ANR	8931175	Identifier	op		8931142	0					
ANR	8931176	CompoundStatement		7:28:114:114	8931142	1					
ANR	8931177	Label	case t_real :	782:12:26531:26542	8931142	0	True				
ANR	8931178	Identifier	t_real		8931142	0					
ANR	8931179	ExpressionStatement	* -- pval = op -> value . realval	783:16:26560:26587	8931142	1	True				
ANR	8931180	AssignmentExpression	* -- pval = op -> value . realval		8931142	0		=			
ANR	8931181	UnaryOperationExpression	* -- pval		8931142	0					
ANR	8931182	UnaryOperator	*		8931142	0					
ANR	8931183	UnaryExpression	-- pval		8931142	1					
ANR	8931184	IncDec	--		8931142	0					
ANR	8931185	Identifier	pval		8931142	1					
ANR	8931186	MemberAccess	op -> value . realval		8931142	1					
ANR	8931187	PtrMemberAccess	op -> value		8931142	0					
ANR	8931188	Identifier	op		8931142	0					
ANR	8931189	Identifier	value		8931142	1					
ANR	8931190	Identifier	realval		8931142	1					
ANR	8931191	BreakStatement	break ;	784:16:26605:26610	8931142	2	True				
ANR	8931192	Label	case t_integer :	785:12:26624:26638	8931142	3	True				
ANR	8931193	Identifier	t_integer		8931142	0					
ANR	8931194	ExpressionStatement	* -- pval = ( double ) op -> value . intval	786:16:26656:26690	8931142	4	True				
ANR	8931195	AssignmentExpression	* -- pval = ( double ) op -> value . intval		8931142	0		=			
ANR	8931196	UnaryOperationExpression	* -- pval		8931142	0					
ANR	8931197	UnaryOperator	*		8931142	0					
ANR	8931198	UnaryExpression	-- pval		8931142	1					
ANR	8931199	IncDec	--		8931142	0					
ANR	8931200	Identifier	pval		8931142	1					
ANR	8931201	CastExpression	( double ) op -> value . intval		8931142	1					
ANR	8931202	CastTarget	double		8931142	0					
ANR	8931203	MemberAccess	op -> value . intval		8931142	1					
ANR	8931204	PtrMemberAccess	op -> value		8931142	0					
ANR	8931205	Identifier	op		8931142	0					
ANR	8931206	Identifier	value		8931142	1					
ANR	8931207	Identifier	intval		8931142	1					
ANR	8931208	ExpressionStatement	mask ++	787:16:26708:26714	8931142	5	True				
ANR	8931209	PostIncDecOperationExpression	mask ++		8931142	0					
ANR	8931210	Identifier	mask		8931142	0					
ANR	8931211	IncDec	++		8931142	1					
ANR	8931212	BreakStatement	break ;	788:16:26732:26737	8931142	6	True				
ANR	8931213	Label	case t__invalid :	789:12:26751:26766	8931142	7	True				
ANR	8931214	Identifier	t__invalid		8931142	0					
ANR	8931215	ExpressionStatement	return_error ( gs_error_stackunderflow )	790:16:26784:26821	8931142	8	True				
ANR	8931216	CallExpression	return_error ( gs_error_stackunderflow )		8931142	0					
ANR	8931217	Callee	return_error		8931142	0					
ANR	8931218	Identifier	return_error		8931142	0					
ANR	8931219	ArgumentList	gs_error_stackunderflow		8931142	1					
ANR	8931220	Argument	gs_error_stackunderflow		8931142	0					
ANR	8931221	Identifier	gs_error_stackunderflow		8931142	0					
ANR	8931222	Label	default :	791:12:26835:26842	8931142	9	True				
ANR	8931223	Identifier	default		8931142	0					
ANR	8931224	ExpressionStatement	return_error ( gs_error_typecheck )	792:16:26860:26892	8931142	10	True				
ANR	8931225	CallExpression	return_error ( gs_error_typecheck )		8931142	0					
ANR	8931226	Callee	return_error		8931142	0					
ANR	8931227	Identifier	return_error		8931142	0					
ANR	8931228	ArgumentList	gs_error_typecheck		8931142	1					
ANR	8931229	Argument	gs_error_typecheck		8931142	0					
ANR	8931230	Identifier	gs_error_typecheck		8931142	0					
ANR	8931231	ExpressionStatement	op --	794:8:26912:26916	8931142	2	True				
ANR	8931232	PostIncDecOperationExpression	op --		8931142	0					
ANR	8931233	Identifier	op		8931142	0					
ANR	8931234	IncDec	--		8931142	1					
ANR	8931235	ReturnStatement	return ( mask < 0 ? 0 : mask ) ;	798:4:27053:27081	8931142	3	True				
ANR	8931236	ConditionalExpression	mask < 0 ? 0 : mask		8931142	0					
ANR	8931237	Condition	mask < 0		8931142	0					
ANR	8931238	RelationalExpression	mask < 0		8931142	0		<			
ANR	8931239	Identifier	mask		8931142	0					
ANR	8931240	PrimaryExpression	0		8931142	1					
ANR	8931241	PrimaryExpression	0		8931142	1					
ANR	8931242	Identifier	mask		8931142	2					
ANR	8931243	ReturnType	int		8931142	1					
ANR	8931244	Identifier	num_params		8931142	2					
ANR	8931245	ParameterList	"const ref * op , int count , double * pval"		8931142	3					
ANR	8931246	Parameter	const ref * op	774:11:26361:26374	8931142	0	True				
ANR	8931247	ParameterType	const ref *		8931142	0					
ANR	8931248	Identifier	op		8931142	1					
ANR	8931249	Parameter	int count	774:27:26377:26385	8931142	1	True				
ANR	8931250	ParameterType	int		8931142	0					
ANR	8931251	Identifier	count		8931142	1					
ANR	8931252	Parameter	double * pval	774:38:26388:26399	8931142	2	True				
ANR	8931253	ParameterType	double *		8931142	0					
ANR	8931254	Identifier	pval		8931142	1					
ANR	8931255	CFGEntryNode	ENTRY		8931142		True				
ANR	8931256	CFGExitNode	EXIT		8931142		True				
ANR	8931257	Symbol	op		8931142						
ANR	8931258	Symbol	* -- pval		8931142						
ANR	8931259	Symbol	* op		8931142						
ANR	8931260	Symbol	* pval		8931142						
ANR	8931261	Symbol	pval		8931142						
ANR	8931262	Symbol	count		8931142						
ANR	8931263	Symbol	op -> value . realval		8931142						
ANR	8931264	Symbol	gs_error_typecheck		8931142						
ANR	8931265	Symbol	gs_error_stackunderflow		8931142						
ANR	8931266	Symbol	op -> value		8931142						
ANR	8931267	Symbol	op -> value . intval		8931142						
ANR	8931268	Symbol	r_type		8931142						
ANR	8931269	Symbol	mask		8931142						
ANR	8931270	Function	float_params	801:0:27146:27653							
ANR	8931271	FunctionDef	"float_params (const ref * op , int count , float * pval)"		8931270	0					
ANR	8931272	CompoundStatement		803:0:27203:27653	8931270	0					
ANR	8931273	ForStatement	for ( pval += count ; -- count >= 0 ; -- op )		8931270	0					
ANR	8931274	ForInit	pval += count ;	804:9:27214:27227	8931270	0	True				
ANR	8931275	AssignmentExpression	pval += count		8931270	0		+=			
ANR	8931276	Identifier	pval		8931270	0					
ANR	8931277	Identifier	count		8931270	1					
ANR	8931278	Condition	-- count >= 0	804:24:27229:27240	8931270	1	True				
ANR	8931279	RelationalExpression	-- count >= 0		8931270	0		>=			
ANR	8931280	UnaryExpression	-- count		8931270	0					
ANR	8931281	IncDec	--		8931270	0					
ANR	8931282	Identifier	count		8931270	1					
ANR	8931283	PrimaryExpression	0		8931270	1					
ANR	8931284	UnaryExpression	-- op	804:38:27243:27246	8931270	2	True				
ANR	8931285	IncDec	--		8931270	0					
ANR	8931286	Identifier	op		8931270	1					
ANR	8931287	SwitchStatement	switch ( r_type ( op ) )		8931270	3					
ANR	8931288	Condition	r_type ( op )	805:16:27265:27274	8931270	0	True				
ANR	8931289	CallExpression	r_type ( op )		8931270	0					
ANR	8931290	Callee	r_type		8931270	0					
ANR	8931291	Identifier	r_type		8931270	0					
ANR	8931292	ArgumentList	op		8931270	1					
ANR	8931293	Argument	op		8931270	0					
ANR	8931294	Identifier	op		8931270	0					
ANR	8931295	CompoundStatement		3:28:73:73	8931270	1					
ANR	8931296	Label	case t_real :	806:12:27291:27302	8931270	0	True				
ANR	8931297	Identifier	t_real		8931270	0					
ANR	8931298	ExpressionStatement	* -- pval = op -> value . realval	807:16:27320:27347	8931270	1	True				
ANR	8931299	AssignmentExpression	* -- pval = op -> value . realval		8931270	0		=			
ANR	8931300	UnaryOperationExpression	* -- pval		8931270	0					
ANR	8931301	UnaryOperator	*		8931270	0					
ANR	8931302	UnaryExpression	-- pval		8931270	1					
ANR	8931303	IncDec	--		8931270	0					
ANR	8931304	Identifier	pval		8931270	1					
ANR	8931305	MemberAccess	op -> value . realval		8931270	1					
ANR	8931306	PtrMemberAccess	op -> value		8931270	0					
ANR	8931307	Identifier	op		8931270	0					
ANR	8931308	Identifier	value		8931270	1					
ANR	8931309	Identifier	realval		8931270	1					
ANR	8931310	BreakStatement	break ;	808:16:27365:27370	8931270	2	True				
ANR	8931311	Label	case t_integer :	809:12:27384:27398	8931270	3	True				
ANR	8931312	Identifier	t_integer		8931270	0					
ANR	8931313	ExpressionStatement	* -- pval = ( float ) op -> value . intval	810:16:27416:27449	8931270	4	True				
ANR	8931314	AssignmentExpression	* -- pval = ( float ) op -> value . intval		8931270	0		=			
ANR	8931315	UnaryOperationExpression	* -- pval		8931270	0					
ANR	8931316	UnaryOperator	*		8931270	0					
ANR	8931317	UnaryExpression	-- pval		8931270	1					
ANR	8931318	IncDec	--		8931270	0					
ANR	8931319	Identifier	pval		8931270	1					
ANR	8931320	CastExpression	( float ) op -> value . intval		8931270	1					
ANR	8931321	CastTarget	float		8931270	0					
ANR	8931322	MemberAccess	op -> value . intval		8931270	1					
ANR	8931323	PtrMemberAccess	op -> value		8931270	0					
ANR	8931324	Identifier	op		8931270	0					
ANR	8931325	Identifier	value		8931270	1					
ANR	8931326	Identifier	intval		8931270	1					
ANR	8931327	BreakStatement	break ;	811:16:27467:27472	8931270	5	True				
ANR	8931328	Label	case t__invalid :	812:12:27486:27501	8931270	6	True				
ANR	8931329	Identifier	t__invalid		8931270	0					
ANR	8931330	ExpressionStatement	return_error ( gs_error_stackunderflow )	813:16:27519:27556	8931270	7	True				
ANR	8931331	CallExpression	return_error ( gs_error_stackunderflow )		8931270	0					
ANR	8931332	Callee	return_error		8931270	0					
ANR	8931333	Identifier	return_error		8931270	0					
ANR	8931334	ArgumentList	gs_error_stackunderflow		8931270	1					
ANR	8931335	Argument	gs_error_stackunderflow		8931270	0					
ANR	8931336	Identifier	gs_error_stackunderflow		8931270	0					
ANR	8931337	Label	default :	814:12:27570:27577	8931270	8	True				
ANR	8931338	Identifier	default		8931270	0					
ANR	8931339	ExpressionStatement	return_error ( gs_error_typecheck )	815:16:27595:27627	8931270	9	True				
ANR	8931340	CallExpression	return_error ( gs_error_typecheck )		8931270	0					
ANR	8931341	Callee	return_error		8931270	0					
ANR	8931342	Identifier	return_error		8931270	0					
ANR	8931343	ArgumentList	gs_error_typecheck		8931270	1					
ANR	8931344	Argument	gs_error_typecheck		8931270	0					
ANR	8931345	Identifier	gs_error_typecheck		8931270	0					
ANR	8931346	ReturnStatement	return 0 ;	817:4:27643:27651	8931270	1	True				
ANR	8931347	PrimaryExpression	0		8931270	0					
ANR	8931348	ReturnType	int		8931270	1					
ANR	8931349	Identifier	float_params		8931270	2					
ANR	8931350	ParameterList	"const ref * op , int count , float * pval"		8931270	3					
ANR	8931351	Parameter	const ref * op	802:13:27163:27176	8931270	0	True				
ANR	8931352	ParameterType	const ref *		8931270	0					
ANR	8931353	Identifier	op		8931270	1					
ANR	8931354	Parameter	int count	802:29:27179:27187	8931270	1	True				
ANR	8931355	ParameterType	int		8931270	0					
ANR	8931356	Identifier	count		8931270	1					
ANR	8931357	Parameter	float * pval	802:40:27190:27200	8931270	2	True				
ANR	8931358	ParameterType	float *		8931270	0					
ANR	8931359	Identifier	pval		8931270	1					
ANR	8931360	CFGEntryNode	ENTRY		8931270		True				
ANR	8931361	CFGExitNode	EXIT		8931270		True				
ANR	8931362	Symbol	op		8931270						
ANR	8931363	Symbol	* -- pval		8931270						
ANR	8931364	Symbol	gs_error_typecheck		8931270						
ANR	8931365	Symbol	* op		8931270						
ANR	8931366	Symbol	* pval		8931270						
ANR	8931367	Symbol	pval		8931270						
ANR	8931368	Symbol	gs_error_stackunderflow		8931270						
ANR	8931369	Symbol	op -> value		8931270						
ANR	8931370	Symbol	count		8931270						
ANR	8931371	Symbol	op -> value . realval		8931270						
ANR	8931372	Symbol	op -> value . intval		8931270						
ANR	8931373	Symbol	r_type		8931270						
ANR	8931374	Function	process_float_array	821:0:27729:28629							
ANR	8931375	FunctionDef	"process_float_array (const gs_memory_t * mem , const ref * parray , int count , float * pval)"		8931374	0					
ANR	8931376	CompoundStatement		823:0:27822:28629	8931374	0					
ANR	8931377	IdentifierDeclStatement	"int code = 0 , indx0 = 0 ;"	824:4:27828:27859	8931374	0	True				
ANR	8931378	IdentifierDecl	code = 0		8931374	0					
ANR	8931379	IdentifierDeclType	int		8931374	0					
ANR	8931380	Identifier	code		8931374	1					
ANR	8931381	AssignmentExpression	code = 0		8931374	2		=			
ANR	8931382	Identifier	code		8931374	0					
ANR	8931383	PrimaryExpression	0		8931374	1					
ANR	8931384	IdentifierDecl	indx0 = 0		8931374	1					
ANR	8931385	IdentifierDeclType	int		8931374	0					
ANR	8931386	Identifier	indx0		8931374	1					
ANR	8931387	AssignmentExpression	indx0 = 0		8931374	2		=			
ANR	8931388	Identifier	indx0		8931374	0					
ANR	8931389	PrimaryExpression	0		8931374	1					
ANR	8931390	IfStatement	"if ( r_has_type ( parray , t_array ) )"		8931374	1					
ANR	8931391	Condition	"r_has_type ( parray , t_array )"	827:8:27942:27968	8931374	0	True				
ANR	8931392	CallExpression	"r_has_type ( parray , t_array )"		8931374	0					
ANR	8931393	Callee	r_has_type		8931374	0					
ANR	8931394	Identifier	r_has_type		8931374	0					
ANR	8931395	ArgumentList	parray		8931374	1					
ANR	8931396	Argument	parray		8931374	0					
ANR	8931397	Identifier	parray		8931374	0					
ANR	8931398	Argument	t_array		8931374	1					
ANR	8931399	Identifier	t_array		8931374	0					
ANR	8931400	ReturnStatement	"return float_params ( parray -> value . refs + count - 1 , count , pval ) ;"	828:8:27979:28043	8931374	1	True				
ANR	8931401	CallExpression	"float_params ( parray -> value . refs + count - 1 , count , pval )"		8931374	0					
ANR	8931402	Callee	float_params		8931374	0					
ANR	8931403	Identifier	float_params		8931374	0					
ANR	8931404	ArgumentList	parray -> value . refs + count - 1		8931374	1					
ANR	8931405	Argument	parray -> value . refs + count - 1		8931374	0					
ANR	8931406	AdditiveExpression	parray -> value . refs + count - 1		8931374	0		+			
ANR	8931407	MemberAccess	parray -> value . refs		8931374	0					
ANR	8931408	PtrMemberAccess	parray -> value		8931374	0					
ANR	8931409	Identifier	parray		8931374	0					
ANR	8931410	Identifier	value		8931374	1					
ANR	8931411	Identifier	refs		8931374	1					
ANR	8931412	AdditiveExpression	count - 1		8931374	1		-			
ANR	8931413	Identifier	count		8931374	0					
ANR	8931414	PrimaryExpression	1		8931374	1					
ANR	8931415	Argument	count		8931374	1					
ANR	8931416	Identifier	count		8931374	0					
ANR	8931417	Argument	pval		8931374	2					
ANR	8931418	Identifier	pval		8931374	0					
ANR	8931419	WhileStatement	while ( count > 0 && code >= 0 )		8931374	2					
ANR	8931420	Condition	count > 0 && code >= 0	831:11:28114:28135	8931374	0	True				
ANR	8931421	AndExpression	count > 0 && code >= 0		8931374	0		&&			
ANR	8931422	RelationalExpression	count > 0		8931374	0		>			
ANR	8931423	Identifier	count		8931374	0					
ANR	8931424	PrimaryExpression	0		8931374	1					
ANR	8931425	RelationalExpression	code >= 0		8931374	1		>=			
ANR	8931426	Identifier	code		8931374	0					
ANR	8931427	PrimaryExpression	0		8931374	1					
ANR	8931428	CompoundStatement		11:8:354:374	8931374	1					
ANR	8931429	IdentifierDeclStatement	"int i , subcount ;"	832:8:28148:28167	8931374	0	True				
ANR	8931430	IdentifierDecl	i		8931374	0					
ANR	8931431	IdentifierDeclType	int		8931374	0					
ANR	8931432	Identifier	i		8931374	1					
ANR	8931433	IdentifierDecl	subcount		8931374	1					
ANR	8931434	IdentifierDeclType	int		8931374	0					
ANR	8931435	Identifier	subcount		8931374	1					
ANR	8931436	IdentifierDeclStatement	ref ref_buff [ 20 ] ;	833:8:28177:28197	8931374	1	True				
ANR	8931437	IdentifierDecl	ref_buff [ 20 ]		8931374	0					
ANR	8931438	IdentifierDeclType	ref [ 20 ]		8931374	0					
ANR	8931439	Identifier	ref_buff		8931374	1					
ANR	8931440	PrimaryExpression	20		8931374	2					
ANR	8931441	ExpressionStatement	subcount = ( count > countof ( ref_buff ) ? countof ( ref_buff ) : count )	835:8:28232:28298	8931374	2	True				
ANR	8931442	AssignmentExpression	subcount = ( count > countof ( ref_buff ) ? countof ( ref_buff ) : count )		8931374	0		=			
ANR	8931443	Identifier	subcount		8931374	0					
ANR	8931444	ConditionalExpression	count > countof ( ref_buff ) ? countof ( ref_buff ) : count		8931374	1					
ANR	8931445	Condition	count > countof ( ref_buff )		8931374	0					
ANR	8931446	RelationalExpression	count > countof ( ref_buff )		8931374	0		>			
ANR	8931447	Identifier	count		8931374	0					
ANR	8931448	CallExpression	countof ( ref_buff )		8931374	1					
ANR	8931449	Callee	countof		8931374	0					
ANR	8931450	Identifier	countof		8931374	0					
ANR	8931451	ArgumentList	ref_buff		8931374	1					
ANR	8931452	Argument	ref_buff		8931374	0					
ANR	8931453	Identifier	ref_buff		8931374	0					
ANR	8931454	CallExpression	countof ( ref_buff )		8931374	1					
ANR	8931455	Callee	countof		8931374	0					
ANR	8931456	Identifier	countof		8931374	0					
ANR	8931457	ArgumentList	ref_buff		8931374	1					
ANR	8931458	Argument	ref_buff		8931374	0					
ANR	8931459	Identifier	ref_buff		8931374	0					
ANR	8931460	Identifier	count		8931374	2					
ANR	8931461	ForStatement	for ( i = 0 ; i < subcount && code >= 0 ; i ++ )		8931374	3					
ANR	8931462	ForInit	i = 0 ;	836:13:28313:28318	8931374	0	True				
ANR	8931463	AssignmentExpression	i = 0		8931374	0		=			
ANR	8931464	Identifier	i		8931374	0					
ANR	8931465	PrimaryExpression	0		8931374	1					
ANR	8931466	Condition	i < subcount && code >= 0	836:20:28320:28344	8931374	1	True				
ANR	8931467	AndExpression	i < subcount && code >= 0		8931374	0		&&			
ANR	8931468	RelationalExpression	i < subcount		8931374	0		<			
ANR	8931469	Identifier	i		8931374	0					
ANR	8931470	Identifier	subcount		8931374	1					
ANR	8931471	RelationalExpression	code >= 0		8931374	1		>=			
ANR	8931472	Identifier	code		8931374	0					
ANR	8931473	PrimaryExpression	0		8931374	1					
ANR	8931474	PostIncDecOperationExpression	i ++	836:47:28347:28349	8931374	2	True				
ANR	8931475	Identifier	i		8931374	0					
ANR	8931476	IncDec	++		8931374	1					
ANR	8931477	ExpressionStatement	"code = array_get ( mem , parray , ( long ) ( i + indx0 ) , & ref_buff [ i ] )"	837:12:28364:28426	8931374	3	True				
ANR	8931478	AssignmentExpression	"code = array_get ( mem , parray , ( long ) ( i + indx0 ) , & ref_buff [ i ] )"		8931374	0		=			
ANR	8931479	Identifier	code		8931374	0					
ANR	8931480	CallExpression	"array_get ( mem , parray , ( long ) ( i + indx0 ) , & ref_buff [ i ] )"		8931374	1					
ANR	8931481	Callee	array_get		8931374	0					
ANR	8931482	Identifier	array_get		8931374	0					
ANR	8931483	ArgumentList	mem		8931374	1					
ANR	8931484	Argument	mem		8931374	0					
ANR	8931485	Identifier	mem		8931374	0					
ANR	8931486	Argument	parray		8931374	1					
ANR	8931487	Identifier	parray		8931374	0					
ANR	8931488	Argument	( long ) ( i + indx0 )		8931374	2					
ANR	8931489	CastExpression	( long ) ( i + indx0 )		8931374	0					
ANR	8931490	CastTarget	long		8931374	0					
ANR	8931491	AdditiveExpression	i + indx0		8931374	1		+			
ANR	8931492	Identifier	i		8931374	0					
ANR	8931493	Identifier	indx0		8931374	1					
ANR	8931494	Argument	& ref_buff [ i ]		8931374	3					
ANR	8931495	UnaryOperationExpression	& ref_buff [ i ]		8931374	0					
ANR	8931496	UnaryOperator	&		8931374	0					
ANR	8931497	ArrayIndexing	ref_buff [ i ]		8931374	1					
ANR	8931498	Identifier	ref_buff		8931374	0					
ANR	8931499	Identifier	i		8931374	1					
ANR	8931500	IfStatement	if ( code >= 0 )		8931374	4					
ANR	8931501	Condition	code >= 0	838:12:28440:28448	8931374	0	True				
ANR	8931502	RelationalExpression	code >= 0		8931374	0		>=			
ANR	8931503	Identifier	code		8931374	0					
ANR	8931504	PrimaryExpression	0		8931374	1					
ANR	8931505	ExpressionStatement	"code = float_params ( ref_buff + subcount - 1 , subcount , pval )"	839:12:28463:28523	8931374	1	True				
ANR	8931506	AssignmentExpression	"code = float_params ( ref_buff + subcount - 1 , subcount , pval )"		8931374	0		=			
ANR	8931507	Identifier	code		8931374	0					
ANR	8931508	CallExpression	"float_params ( ref_buff + subcount - 1 , subcount , pval )"		8931374	1					
ANR	8931509	Callee	float_params		8931374	0					
ANR	8931510	Identifier	float_params		8931374	0					
ANR	8931511	ArgumentList	ref_buff + subcount - 1		8931374	1					
ANR	8931512	Argument	ref_buff + subcount - 1		8931374	0					
ANR	8931513	AdditiveExpression	ref_buff + subcount - 1		8931374	0		+			
ANR	8931514	Identifier	ref_buff		8931374	0					
ANR	8931515	AdditiveExpression	subcount - 1		8931374	1		-			
ANR	8931516	Identifier	subcount		8931374	0					
ANR	8931517	PrimaryExpression	1		8931374	1					
ANR	8931518	Argument	subcount		8931374	1					
ANR	8931519	Identifier	subcount		8931374	0					
ANR	8931520	Argument	pval		8931374	2					
ANR	8931521	Identifier	pval		8931374	0					
ANR	8931522	ExpressionStatement	count -= subcount	840:8:28533:28550	8931374	5	True				
ANR	8931523	AssignmentExpression	count -= subcount		8931374	0		-=			
ANR	8931524	Identifier	count		8931374	0					
ANR	8931525	Identifier	subcount		8931374	1					
ANR	8931526	ExpressionStatement	pval += subcount	841:8:28560:28576	8931374	6	True				
ANR	8931527	AssignmentExpression	pval += subcount		8931374	0		+=			
ANR	8931528	Identifier	pval		8931374	0					
ANR	8931529	Identifier	subcount		8931374	1					
ANR	8931530	ExpressionStatement	indx0 += subcount	842:8:28586:28603	8931374	7	True				
ANR	8931531	AssignmentExpression	indx0 += subcount		8931374	0		+=			
ANR	8931532	Identifier	indx0		8931374	0					
ANR	8931533	Identifier	subcount		8931374	1					
ANR	8931534	ReturnStatement	return code ;	845:4:28616:28627	8931374	3	True				
ANR	8931535	Identifier	code		8931374	0					
ANR	8931536	ReturnType	int		8931374	1					
ANR	8931537	Identifier	process_float_array		8931374	2					
ANR	8931538	ParameterList	"const gs_memory_t * mem , const ref * parray , int count , float * pval"		8931374	3					
ANR	8931539	Parameter	const gs_memory_t * mem	822:20:27753:27774	8931374	0	True				
ANR	8931540	ParameterType	const gs_memory_t *		8931374	0					
ANR	8931541	Identifier	mem		8931374	1					
ANR	8931542	Parameter	const ref * parray	822:44:27777:27794	8931374	1	True				
ANR	8931543	ParameterType	const ref *		8931374	0					
ANR	8931544	Identifier	parray		8931374	1					
ANR	8931545	Parameter	int count	822:64:27797:27805	8931374	2	True				
ANR	8931546	ParameterType	int		8931374	0					
ANR	8931547	Identifier	count		8931374	1					
ANR	8931548	Parameter	float * pval	822:75:27808:27819	8931374	3	True				
ANR	8931549	ParameterType	float *		8931374	0					
ANR	8931550	Identifier	pval		8931374	1					
ANR	8931551	CFGEntryNode	ENTRY		8931374		True				
ANR	8931552	CFGExitNode	EXIT		8931374		True				
ANR	8931553	Symbol	parray		8931374						
ANR	8931554	Symbol	code		8931374						
ANR	8931555	Symbol	pval		8931374						
ANR	8931556	Symbol	float_params		8931374						
ANR	8931557	Symbol	parray -> value . refs		8931374						
ANR	8931558	Symbol	array_get		8931374						
ANR	8931559	Symbol	count		8931374						
ANR	8931560	Symbol	i		8931374						
ANR	8931561	Symbol	indx0		8931374						
ANR	8931562	Symbol	subcount		8931374						
ANR	8931563	Symbol	ref_buff		8931374						
ANR	8931564	Symbol	countof		8931374						
ANR	8931565	Symbol	r_has_type		8931374						
ANR	8931566	Symbol	mem		8931374						
ANR	8931567	Symbol	t_array		8931374						
ANR	8931568	Symbol	* parray		8931374						
ANR	8931569	Symbol	parray -> value		8931374						
ANR	8931570	Function	real_param	851:0:28814:29220							
ANR	8931571	FunctionDef	"real_param (const ref * op , double * pparam)"		8931570	0					
ANR	8931572	CompoundStatement		853:0:28861:29220	8931570	0					
ANR	8931573	SwitchStatement	switch ( r_type ( op ) )		8931570	0					
ANR	8931574	Condition	r_type ( op )	854:12:28875:28884	8931570	0	True				
ANR	8931575	CallExpression	r_type ( op )		8931570	0					
ANR	8931576	Callee	r_type		8931570	0					
ANR	8931577	Identifier	r_type		8931570	0					
ANR	8931578	ArgumentList	op		8931570	1					
ANR	8931579	Argument	op		8931570	0					
ANR	8931580	Identifier	op		8931570	0					
ANR	8931581	CompoundStatement		2:24:25:25	8931570	1					
ANR	8931582	Label	case t_integer :	855:8:28897:28911	8931570	0	True				
ANR	8931583	Identifier	t_integer		8931570	0					
ANR	8931584	ExpressionStatement	* pparam = ( double ) op -> value . intval	856:12:28925:28959	8931570	1	True				
ANR	8931585	AssignmentExpression	* pparam = ( double ) op -> value . intval		8931570	0		=			
ANR	8931586	UnaryOperationExpression	* pparam		8931570	0					
ANR	8931587	UnaryOperator	*		8931570	0					
ANR	8931588	Identifier	pparam		8931570	1					
ANR	8931589	CastExpression	( double ) op -> value . intval		8931570	1					
ANR	8931590	CastTarget	double		8931570	0					
ANR	8931591	MemberAccess	op -> value . intval		8931570	1					
ANR	8931592	PtrMemberAccess	op -> value		8931570	0					
ANR	8931593	Identifier	op		8931570	0					
ANR	8931594	Identifier	value		8931570	1					
ANR	8931595	Identifier	intval		8931570	1					
ANR	8931596	BreakStatement	break ;	857:12:28973:28978	8931570	2	True				
ANR	8931597	Label	case t_real :	858:8:28988:28999	8931570	3	True				
ANR	8931598	Identifier	t_real		8931570	0					
ANR	8931599	ExpressionStatement	* pparam = op -> value . realval	859:12:29013:29040	8931570	4	True				
ANR	8931600	AssignmentExpression	* pparam = op -> value . realval		8931570	0		=			
ANR	8931601	UnaryOperationExpression	* pparam		8931570	0					
ANR	8931602	UnaryOperator	*		8931570	0					
ANR	8931603	Identifier	pparam		8931570	1					
ANR	8931604	MemberAccess	op -> value . realval		8931570	1					
ANR	8931605	PtrMemberAccess	op -> value		8931570	0					
ANR	8931606	Identifier	op		8931570	0					
ANR	8931607	Identifier	value		8931570	1					
ANR	8931608	Identifier	realval		8931570	1					
ANR	8931609	BreakStatement	break ;	860:12:29054:29059	8931570	5	True				
ANR	8931610	Label	case t__invalid :	861:8:29069:29084	8931570	6	True				
ANR	8931611	Identifier	t__invalid		8931570	0					
ANR	8931612	ExpressionStatement	return_error ( gs_error_stackunderflow )	862:12:29098:29135	8931570	7	True				
ANR	8931613	CallExpression	return_error ( gs_error_stackunderflow )		8931570	0					
ANR	8931614	Callee	return_error		8931570	0					
ANR	8931615	Identifier	return_error		8931570	0					
ANR	8931616	ArgumentList	gs_error_stackunderflow		8931570	1					
ANR	8931617	Argument	gs_error_stackunderflow		8931570	0					
ANR	8931618	Identifier	gs_error_stackunderflow		8931570	0					
ANR	8931619	Label	default :	863:8:29145:29152	8931570	8	True				
ANR	8931620	Identifier	default		8931570	0					
ANR	8931621	ExpressionStatement	return_error ( gs_error_typecheck )	864:12:29166:29198	8931570	9	True				
ANR	8931622	CallExpression	return_error ( gs_error_typecheck )		8931570	0					
ANR	8931623	Callee	return_error		8931570	0					
ANR	8931624	Identifier	return_error		8931570	0					
ANR	8931625	ArgumentList	gs_error_typecheck		8931570	1					
ANR	8931626	Argument	gs_error_typecheck		8931570	0					
ANR	8931627	Identifier	gs_error_typecheck		8931570	0					
ANR	8931628	ReturnStatement	return 0 ;	866:4:29210:29218	8931570	1	True				
ANR	8931629	PrimaryExpression	0		8931570	0					
ANR	8931630	ReturnType	int		8931570	1					
ANR	8931631	Identifier	real_param		8931570	2					
ANR	8931632	ParameterList	"const ref * op , double * pparam"		8931570	3					
ANR	8931633	Parameter	const ref * op	852:11:28829:28842	8931570	0	True				
ANR	8931634	ParameterType	const ref *		8931570	0					
ANR	8931635	Identifier	op		8931570	1					
ANR	8931636	Parameter	double * pparam	852:27:28845:28858	8931570	1	True				
ANR	8931637	ParameterType	double *		8931570	0					
ANR	8931638	Identifier	pparam		8931570	1					
ANR	8931639	CFGEntryNode	ENTRY		8931570		True				
ANR	8931640	CFGExitNode	EXIT		8931570		True				
ANR	8931641	Symbol	op		8931570						
ANR	8931642	Symbol	gs_error_typecheck		8931570						
ANR	8931643	Symbol	* op		8931570						
ANR	8931644	Symbol	gs_error_stackunderflow		8931570						
ANR	8931645	Symbol	op -> value		8931570						
ANR	8931646	Symbol	op -> value . realval		8931570						
ANR	8931647	Symbol	pparam		8931570						
ANR	8931648	Symbol	* pparam		8931570						
ANR	8931649	Symbol	op -> value . intval		8931570						
ANR	8931650	Symbol	r_type		8931570						
ANR	8931651	Function	float_param	868:0:29222:29415							
ANR	8931652	FunctionDef	"float_param (const ref * op , float * pparam)"		8931651	0					
ANR	8931653	CompoundStatement		870:0:29269:29415	8931651	0					
ANR	8931654	IdentifierDeclStatement	double dval ;	871:4:29275:29286	8931651	0	True				
ANR	8931655	IdentifierDecl	dval		8931651	0					
ANR	8931656	IdentifierDeclType	double		8931651	0					
ANR	8931657	Identifier	dval		8931651	1					
ANR	8931658	IdentifierDeclStatement	"int code = real_param ( op , & dval ) ;"	872:4:29292:29324	8931651	1	True				
ANR	8931659	IdentifierDecl	"code = real_param ( op , & dval )"		8931651	0					
ANR	8931660	IdentifierDeclType	int		8931651	0					
ANR	8931661	Identifier	code		8931651	1					
ANR	8931662	AssignmentExpression	"code = real_param ( op , & dval )"		8931651	2		=			
ANR	8931663	Identifier	code		8931651	0					
ANR	8931664	CallExpression	"real_param ( op , & dval )"		8931651	1					
ANR	8931665	Callee	real_param		8931651	0					
ANR	8931666	Identifier	real_param		8931651	0					
ANR	8931667	ArgumentList	op		8931651	1					
ANR	8931668	Argument	op		8931651	0					
ANR	8931669	Identifier	op		8931651	0					
ANR	8931670	Argument	& dval		8931651	1					
ANR	8931671	UnaryOperationExpression	& dval		8931651	0					
ANR	8931672	UnaryOperator	&		8931651	0					
ANR	8931673	Identifier	dval		8931651	1					
ANR	8931674	IfStatement	if ( code >= 0 )		8931651	2					
ANR	8931675	Condition	code >= 0	874:8:29335:29343	8931651	0	True				
ANR	8931676	RelationalExpression	code >= 0		8931651	0		>=			
ANR	8931677	Identifier	code		8931651	0					
ANR	8931678	PrimaryExpression	0		8931651	1					
ANR	8931679	ExpressionStatement	* pparam = ( float ) dval	875:8:29354:29375	8931651	1	True				
ANR	8931680	AssignmentExpression	* pparam = ( float ) dval		8931651	0		=			
ANR	8931681	UnaryOperationExpression	* pparam		8931651	0					
ANR	8931682	UnaryOperator	*		8931651	0					
ANR	8931683	Identifier	pparam		8931651	1					
ANR	8931684	CastExpression	( float ) dval		8931651	1					
ANR	8931685	CastTarget	float		8931651	0					
ANR	8931686	Identifier	dval		8931651	1					
ANR	8931687	ReturnStatement	return code ;	876:4:29402:29413	8931651	3	True				
ANR	8931688	Identifier	code		8931651	0					
ANR	8931689	ReturnType	int		8931651	1					
ANR	8931690	Identifier	float_param		8931651	2					
ANR	8931691	ParameterList	"const ref * op , float * pparam"		8931651	3					
ANR	8931692	Parameter	const ref * op	869:12:29238:29251	8931651	0	True				
ANR	8931693	ParameterType	const ref *		8931651	0					
ANR	8931694	Identifier	op		8931651	1					
ANR	8931695	Parameter	float * pparam	869:28:29254:29266	8931651	1	True				
ANR	8931696	ParameterType	float *		8931651	0					
ANR	8931697	Identifier	pparam		8931651	1					
ANR	8931698	CFGEntryNode	ENTRY		8931651		True				
ANR	8931699	CFGExitNode	EXIT		8931651		True				
ANR	8931700	Symbol	op		8931651						
ANR	8931701	Symbol	dval		8931651						
ANR	8931702	Symbol	code		8931651						
ANR	8931703	Symbol	real_param		8931651						
ANR	8931704	Symbol	pparam		8931651						
ANR	8931705	Symbol	* pparam		8931651						
ANR	8931706	Symbol	& dval		8931651						
ANR	8931707	Function	int_param	880:0:29467:29613							
ANR	8931708	FunctionDef	"int_param (const ref * op , int max_value , int * pparam)"		8931707	0					
ANR	8931709	CompoundStatement		882:0:29525:29613	8931707	0					
ANR	8931710	ExpressionStatement	"check_int_leu ( * op , max_value )"	883:4:29531:29560	8931707	0	True				
ANR	8931711	CallExpression	"check_int_leu ( * op , max_value )"		8931707	0					
ANR	8931712	Callee	check_int_leu		8931707	0					
ANR	8931713	Identifier	check_int_leu		8931707	0					
ANR	8931714	ArgumentList	* op		8931707	1					
ANR	8931715	Argument	* op		8931707	0					
ANR	8931716	UnaryOperationExpression	* op		8931707	0					
ANR	8931717	UnaryOperator	*		8931707	0					
ANR	8931718	Identifier	op		8931707	1					
ANR	8931719	Argument	max_value		8931707	1					
ANR	8931720	Identifier	max_value		8931707	0					
ANR	8931721	ExpressionStatement	* pparam = ( int ) op -> value . intval	884:4:29566:29597	8931707	1	True				
ANR	8931722	AssignmentExpression	* pparam = ( int ) op -> value . intval		8931707	0		=			
ANR	8931723	UnaryOperationExpression	* pparam		8931707	0					
ANR	8931724	UnaryOperator	*		8931707	0					
ANR	8931725	Identifier	pparam		8931707	1					
ANR	8931726	CastExpression	( int ) op -> value . intval		8931707	1					
ANR	8931727	CastTarget	int		8931707	0					
ANR	8931728	MemberAccess	op -> value . intval		8931707	1					
ANR	8931729	PtrMemberAccess	op -> value		8931707	0					
ANR	8931730	Identifier	op		8931707	0					
ANR	8931731	Identifier	value		8931707	1					
ANR	8931732	Identifier	intval		8931707	1					
ANR	8931733	ReturnStatement	return 0 ;	885:4:29603:29611	8931707	2	True				
ANR	8931734	PrimaryExpression	0		8931707	0					
ANR	8931735	ReturnType	int		8931707	1					
ANR	8931736	Identifier	int_param		8931707	2					
ANR	8931737	ParameterList	"const ref * op , int max_value , int * pparam"		8931707	3					
ANR	8931738	Parameter	const ref * op	881:10:29481:29494	8931707	0	True				
ANR	8931739	ParameterType	const ref *		8931707	0					
ANR	8931740	Identifier	op		8931707	1					
ANR	8931741	Parameter	int max_value	881:26:29497:29509	8931707	1	True				
ANR	8931742	ParameterType	int		8931707	0					
ANR	8931743	Identifier	max_value		8931707	1					
ANR	8931744	Parameter	int * pparam	881:41:29512:29522	8931707	2	True				
ANR	8931745	ParameterType	int *		8931707	0					
ANR	8931746	Identifier	pparam		8931707	1					
ANR	8931747	CFGEntryNode	ENTRY		8931707		True				
ANR	8931748	CFGExitNode	EXIT		8931707		True				
ANR	8931749	Symbol	op		8931707						
ANR	8931750	Symbol	* op		8931707						
ANR	8931751	Symbol	op -> value		8931707						
ANR	8931752	Symbol	pparam		8931707						
ANR	8931753	Symbol	* pparam		8931707						
ANR	8931754	Symbol	op -> value . intval		8931707						
ANR	8931755	Symbol	max_value		8931707						
ANR	8931756	Function	make_reals	889:0:29661:29915							
ANR	8931757	FunctionDef	"make_reals (ref * op , const double * pval , int count)"		8931756	0					
ANR	8931758	CompoundStatement		891:0:29717:29915	8931756	0					
ANR	8931759	ForStatement	"for ( ; count -- ; op ++ , pval ++ )"		8931756	0					
ANR	8931760	Condition	count --	894:11:29848:29854	8931756	0	True				
ANR	8931761	PostIncDecOperationExpression	count --		8931756	0					
ANR	8931762	Identifier	count		8931756	0					
ANR	8931763	IncDec	--		8931756	1					
ANR	8931764	Expression	"op ++ , pval ++"	894:20:29857:29868	8931756	1	True				
ANR	8931765	PostIncDecOperationExpression	op ++		8931756	0					
ANR	8931766	Identifier	op		8931756	0					
ANR	8931767	IncDec	++		8931756	1					
ANR	8931768	PostIncDecOperationExpression	pval ++		8931756	1					
ANR	8931769	Identifier	pval		8931756	0					
ANR	8931770	IncDec	++		8931756	1					
ANR	8931771	ExpressionStatement	"make_real ( op , * pval )"	895:8:29879:29899	8931756	2	True				
ANR	8931772	CallExpression	"make_real ( op , * pval )"		8931756	0					
ANR	8931773	Callee	make_real		8931756	0					
ANR	8931774	Identifier	make_real		8931756	0					
ANR	8931775	ArgumentList	op		8931756	1					
ANR	8931776	Argument	op		8931756	0					
ANR	8931777	Identifier	op		8931756	0					
ANR	8931778	Argument	* pval		8931756	1					
ANR	8931779	UnaryOperationExpression	* pval		8931756	0					
ANR	8931780	UnaryOperator	*		8931756	0					
ANR	8931781	Identifier	pval		8931756	1					
ANR	8931782	ReturnStatement	return 0 ;	896:4:29905:29913	8931756	1	True				
ANR	8931783	PrimaryExpression	0		8931756	0					
ANR	8931784	ReturnType	int		8931756	1					
ANR	8931785	Identifier	make_reals		8931756	2					
ANR	8931786	ParameterList	"ref * op , const double * pval , int count"		8931756	3					
ANR	8931787	Parameter	ref * op	890:11:29676:29683	8931756	0	True				
ANR	8931788	ParameterType	ref *		8931756	0					
ANR	8931789	Identifier	op		8931756	1					
ANR	8931790	Parameter	const double * pval	890:21:29686:29703	8931756	1	True				
ANR	8931791	ParameterType	const double *		8931756	0					
ANR	8931792	Identifier	pval		8931756	1					
ANR	8931793	Parameter	int count	890:41:29706:29714	8931756	2	True				
ANR	8931794	ParameterType	int		8931756	0					
ANR	8931795	Identifier	count		8931756	1					
ANR	8931796	CFGEntryNode	ENTRY		8931756		True				
ANR	8931797	CFGExitNode	EXIT		8931756		True				
ANR	8931798	Symbol	op		8931756						
ANR	8931799	Symbol	* pval		8931756						
ANR	8931800	Symbol	pval		8931756						
ANR	8931801	Symbol	count		8931756						
ANR	8931802	Function	make_floats	898:0:29917:30123							
ANR	8931803	FunctionDef	"make_floats (ref * op , const float * pval , int count)"		8931802	0					
ANR	8931804	CompoundStatement		900:0:29973:30123	8931802	0					
ANR	8931805	ForStatement	"for ( ; count -- ; op ++ , pval ++ )"		8931802	0					
ANR	8931806	Condition	count --	902:11:30056:30062	8931802	0	True				
ANR	8931807	PostIncDecOperationExpression	count --		8931802	0					
ANR	8931808	Identifier	count		8931802	0					
ANR	8931809	IncDec	--		8931802	1					
ANR	8931810	Expression	"op ++ , pval ++"	902:20:30065:30076	8931802	1	True				
ANR	8931811	PostIncDecOperationExpression	op ++		8931802	0					
ANR	8931812	Identifier	op		8931802	0					
ANR	8931813	IncDec	++		8931802	1					
ANR	8931814	PostIncDecOperationExpression	pval ++		8931802	1					
ANR	8931815	Identifier	pval		8931802	0					
ANR	8931816	IncDec	++		8931802	1					
ANR	8931817	ExpressionStatement	"make_real ( op , * pval )"	903:8:30087:30107	8931802	2	True				
ANR	8931818	CallExpression	"make_real ( op , * pval )"		8931802	0					
ANR	8931819	Callee	make_real		8931802	0					
ANR	8931820	Identifier	make_real		8931802	0					
ANR	8931821	ArgumentList	op		8931802	1					
ANR	8931822	Argument	op		8931802	0					
ANR	8931823	Identifier	op		8931802	0					
ANR	8931824	Argument	* pval		8931802	1					
ANR	8931825	UnaryOperationExpression	* pval		8931802	0					
ANR	8931826	UnaryOperator	*		8931802	0					
ANR	8931827	Identifier	pval		8931802	1					
ANR	8931828	ReturnStatement	return 0 ;	904:4:30113:30121	8931802	1	True				
ANR	8931829	PrimaryExpression	0		8931802	0					
ANR	8931830	ReturnType	int		8931802	1					
ANR	8931831	Identifier	make_floats		8931802	2					
ANR	8931832	ParameterList	"ref * op , const float * pval , int count"		8931802	3					
ANR	8931833	Parameter	ref * op	899:12:29933:29940	8931802	0	True				
ANR	8931834	ParameterType	ref *		8931802	0					
ANR	8931835	Identifier	op		8931802	1					
ANR	8931836	Parameter	const float * pval	899:22:29943:29959	8931802	1	True				
ANR	8931837	ParameterType	const float *		8931802	0					
ANR	8931838	Identifier	pval		8931802	1					
ANR	8931839	Parameter	int count	899:41:29962:29970	8931802	2	True				
ANR	8931840	ParameterType	int		8931802	0					
ANR	8931841	Identifier	count		8931802	1					
ANR	8931842	CFGEntryNode	ENTRY		8931802		True				
ANR	8931843	CFGExitNode	EXIT		8931802		True				
ANR	8931844	Symbol	op		8931802						
ANR	8931845	Symbol	* pval		8931802						
ANR	8931846	Symbol	pval		8931802						
ANR	8931847	Symbol	count		8931802						
ANR	8931848	Function	check_proc_failed	910:0:30312:30678							
ANR	8931849	FunctionDef	check_proc_failed (const ref * pref)		8931848	0					
ANR	8931850	CompoundStatement		912:0:30352:30678	8931848	0					
ANR	8931851	IfStatement	if ( r_is_array ( pref ) )		8931848	0					
ANR	8931852	Condition	r_is_array ( pref )	913:8:30362:30377	8931848	0	True				
ANR	8931853	CallExpression	r_is_array ( pref )		8931848	0					
ANR	8931854	Callee	r_is_array		8931848	0					
ANR	8931855	Identifier	r_is_array		8931848	0					
ANR	8931856	ArgumentList	pref		8931848	1					
ANR	8931857	Argument	pref		8931848	0					
ANR	8931858	Identifier	pref		8931848	0					
ANR	8931859	CompoundStatement		2:26:27:27	8931848	1					
ANR	8931860	IfStatement	"if ( r_has_attr ( pref , a_executable ) )"		8931848	0					
ANR	8931861	Condition	"r_has_attr ( pref , a_executable )"	914:12:30394:30423	8931848	0	True				
ANR	8931862	CallExpression	"r_has_attr ( pref , a_executable )"		8931848	0					
ANR	8931863	Callee	r_has_attr		8931848	0					
ANR	8931864	Identifier	r_has_attr		8931848	0					
ANR	8931865	ArgumentList	pref		8931848	1					
ANR	8931866	Argument	pref		8931848	0					
ANR	8931867	Identifier	pref		8931848	0					
ANR	8931868	Argument	a_executable		8931848	1					
ANR	8931869	Identifier	a_executable		8931848	0					
ANR	8931870	ReturnStatement	return gs_error_invalidaccess ;	915:12:30438:30467	8931848	1	True				
ANR	8931871	Identifier	gs_error_invalidaccess		8931848	0					
ANR	8931872	ElseStatement	else		8931848	0					
ANR	8931873	ReturnStatement	return gs_error_typecheck ;	917:12:30494:30519	8931848	0	True				
ANR	8931874	Identifier	gs_error_typecheck		8931848	0					
ANR	8931875	ElseStatement	else		8931848	0					
ANR	8931876	CompoundStatement		7:11:179:179	8931848	0					
ANR	8931877	IfStatement	"if ( r_has_type ( pref , t__invalid ) )"		8931848	0					
ANR	8931878	Condition	"r_has_type ( pref , t__invalid )"	919:12:30546:30573	8931848	0	True				
ANR	8931879	CallExpression	"r_has_type ( pref , t__invalid )"		8931848	0					
ANR	8931880	Callee	r_has_type		8931848	0					
ANR	8931881	Identifier	r_has_type		8931848	0					
ANR	8931882	ArgumentList	pref		8931848	1					
ANR	8931883	Argument	pref		8931848	0					
ANR	8931884	Identifier	pref		8931848	0					
ANR	8931885	Argument	t__invalid		8931848	1					
ANR	8931886	Identifier	t__invalid		8931848	0					
ANR	8931887	ReturnStatement	return gs_error_stackunderflow ;	920:12:30588:30618	8931848	1	True				
ANR	8931888	Identifier	gs_error_stackunderflow		8931848	0					
ANR	8931889	ElseStatement	else		8931848	0					
ANR	8931890	ReturnStatement	return gs_error_typecheck ;	922:12:30645:30670	8931848	0	True				
ANR	8931891	Identifier	gs_error_typecheck		8931848	0					
ANR	8931892	ReturnType	int		8931848	1					
ANR	8931893	Identifier	check_proc_failed		8931848	2					
ANR	8931894	ParameterList	const ref * pref		8931848	3					
ANR	8931895	Parameter	const ref * pref	911:18:30334:30349	8931848	0	True				
ANR	8931896	ParameterType	const ref *		8931848	0					
ANR	8931897	Identifier	pref		8931848	1					
ANR	8931898	CFGEntryNode	ENTRY		8931848		True				
ANR	8931899	CFGExitNode	EXIT		8931848		True				
ANR	8931900	Symbol	gs_error_typecheck		8931848						
ANR	8931901	Symbol	r_has_type		8931848						
ANR	8931902	Symbol	r_has_attr		8931848						
ANR	8931903	Symbol	gs_error_stackunderflow		8931848						
ANR	8931904	Symbol	pref		8931848						
ANR	8931905	Symbol	a_executable		8931848						
ANR	8931906	Symbol	gs_error_invalidaccess		8931848						
ANR	8931907	Symbol	r_is_array		8931848						
ANR	8931908	Symbol	t__invalid		8931848						
ANR	8931909	Function	check_type_failed	928:0:30815:30943							
ANR	8931910	FunctionDef	check_type_failed (const ref * op)		8931909	0					
ANR	8931911	CompoundStatement		930:0:30853:30943	8931909	0					
ANR	8931912	ReturnStatement	"return ( r_has_type ( op , t__invalid ) ? gs_error_stackunderflow : gs_error_typecheck ) ;"	931:4:30859:30941	8931909	0	True				
ANR	8931913	ConditionalExpression	"r_has_type ( op , t__invalid ) ? gs_error_stackunderflow : gs_error_typecheck"		8931909	0					
ANR	8931914	Condition	"r_has_type ( op , t__invalid )"		8931909	0					
ANR	8931915	CallExpression	"r_has_type ( op , t__invalid )"		8931909	0					
ANR	8931916	Callee	r_has_type		8931909	0					
ANR	8931917	Identifier	r_has_type		8931909	0					
ANR	8931918	ArgumentList	op		8931909	1					
ANR	8931919	Argument	op		8931909	0					
ANR	8931920	Identifier	op		8931909	0					
ANR	8931921	Argument	t__invalid		8931909	1					
ANR	8931922	Identifier	t__invalid		8931909	0					
ANR	8931923	Identifier	gs_error_stackunderflow		8931909	1					
ANR	8931924	Identifier	gs_error_typecheck		8931909	2					
ANR	8931925	ReturnType	int		8931909	1					
ANR	8931926	Identifier	check_type_failed		8931909	2					
ANR	8931927	ParameterList	const ref * op		8931909	3					
ANR	8931928	Parameter	const ref * op	929:18:30837:30850	8931909	0	True				
ANR	8931929	ParameterType	const ref *		8931909	0					
ANR	8931930	Identifier	op		8931909	1					
ANR	8931931	CFGEntryNode	ENTRY		8931909		True				
ANR	8931932	CFGExitNode	EXIT		8931909		True				
ANR	8931933	Symbol	op		8931909						
ANR	8931934	Symbol	r_has_type		8931909						
ANR	8931935	Symbol	gs_error_typecheck		8931909						
ANR	8931936	Symbol	gs_error_stackunderflow		8931909						
ANR	8931937	Symbol	t__invalid		8931909						
ANR	8931938	Function	read_matrix	938:0:31054:31890							
ANR	8931939	FunctionDef	"read_matrix (const gs_memory_t * mem , const ref * op , gs_matrix * pmat)"		8931938	0					
ANR	8931940	CompoundStatement		940:0:31128:31890	8931938	0					
ANR	8931941	IdentifierDeclStatement	int code ;	941:4:31134:31142	8931938	0	True				
ANR	8931942	IdentifierDecl	code		8931938	0					
ANR	8931943	IdentifierDeclType	int		8931938	0					
ANR	8931944	Identifier	code		8931938	1					
ANR	8931945	IdentifierDeclStatement	ref values [ 6 ] ;	942:4:31148:31161	8931938	1	True				
ANR	8931946	IdentifierDecl	values [ 6 ]		8931938	0					
ANR	8931947	IdentifierDeclType	ref [ 6 ]		8931938	0					
ANR	8931948	Identifier	values		8931938	1					
ANR	8931949	PrimaryExpression	6		8931938	2					
ANR	8931950	IdentifierDeclStatement	const ref * pvalues ;	943:4:31167:31185	8931938	2	True				
ANR	8931951	IdentifierDecl	* pvalues		8931938	0					
ANR	8931952	IdentifierDeclType	const ref *		8931938	0					
ANR	8931953	Identifier	pvalues		8931938	1					
ANR	8931954	SwitchStatement	switch ( r_type ( op ) )		8931938	3					
ANR	8931955	Condition	r_type ( op )	945:12:31200:31209	8931938	0	True				
ANR	8931956	CallExpression	r_type ( op )		8931938	0					
ANR	8931957	Callee	r_type		8931938	0					
ANR	8931958	Identifier	r_type		8931938	0					
ANR	8931959	ArgumentList	op		8931938	1					
ANR	8931960	Argument	op		8931938	0					
ANR	8931961	Identifier	op		8931938	0					
ANR	8931962	CompoundStatement		6:24:83:83	8931938	1					
ANR	8931963	Label	case t_array :	946:8:31222:31234	8931938	0	True				
ANR	8931964	Identifier	t_array		8931938	0					
ANR	8931965	ExpressionStatement	pvalues = op -> value . refs	947:12:31248:31272	8931938	1	True				
ANR	8931966	AssignmentExpression	pvalues = op -> value . refs		8931938	0		=			
ANR	8931967	Identifier	pvalues		8931938	0					
ANR	8931968	MemberAccess	op -> value . refs		8931938	1					
ANR	8931969	PtrMemberAccess	op -> value		8931938	0					
ANR	8931970	Identifier	op		8931938	0					
ANR	8931971	Identifier	value		8931938	1					
ANR	8931972	Identifier	refs		8931938	1					
ANR	8931973	BreakStatement	break ;	948:12:31286:31291	8931938	2	True				
ANR	8931974	Label	case t_mixedarray :	949:8:31301:31318	8931938	3	True				
ANR	8931975	Identifier	t_mixedarray		8931938	0					
ANR	8931976	Label	case t_shortarray :	950:8:31328:31345	8931938	4	True				
ANR	8931977	Identifier	t_shortarray		8931938	0					
ANR	8931978	CompoundStatement		13:16:248:253	8931938	5					
ANR	8931979	IdentifierDeclStatement	int i ;	952:16:31377:31382	8931938	0	True				
ANR	8931980	IdentifierDecl	i		8931938	0					
ANR	8931981	IdentifierDeclType	int		8931938	0					
ANR	8931982	Identifier	i		8931938	1					
ANR	8931983	ForStatement	for ( i = 0 ; i < 6 ; ++ i )		8931938	1					
ANR	8931984	ForInit	i = 0 ;	954:21:31406:31411	8931938	0	True				
ANR	8931985	AssignmentExpression	i = 0		8931938	0		=			
ANR	8931986	Identifier	i		8931938	0					
ANR	8931987	PrimaryExpression	0		8931938	1					
ANR	8931988	Condition	i < 6	954:28:31413:31417	8931938	1	True				
ANR	8931989	RelationalExpression	i < 6		8931938	0		<			
ANR	8931990	Identifier	i		8931938	0					
ANR	8931991	PrimaryExpression	6		8931938	1					
ANR	8931992	UnaryExpression	++ i	954:35:31420:31422	8931938	2	True				
ANR	8931993	IncDec	++		8931938	0					
ANR	8931994	Identifier	i		8931938	1					
ANR	8931995	CompoundStatement		15:40:296:296	8931938	3					
ANR	8931996	ExpressionStatement	"code = array_get ( mem , op , ( long ) i , & values [ i ] )"	955:20:31447:31493	8931938	0	True				
ANR	8931997	AssignmentExpression	"code = array_get ( mem , op , ( long ) i , & values [ i ] )"		8931938	0		=			
ANR	8931998	Identifier	code		8931938	0					
ANR	8931999	CallExpression	"array_get ( mem , op , ( long ) i , & values [ i ] )"		8931938	1					
ANR	8932000	Callee	array_get		8931938	0					
ANR	8932001	Identifier	array_get		8931938	0					
ANR	8932002	ArgumentList	mem		8931938	1					
ANR	8932003	Argument	mem		8931938	0					
ANR	8932004	Identifier	mem		8931938	0					
ANR	8932005	Argument	op		8931938	1					
ANR	8932006	Identifier	op		8931938	0					
ANR	8932007	Argument	( long ) i		8931938	2					
ANR	8932008	CastExpression	( long ) i		8931938	0					
ANR	8932009	CastTarget	long		8931938	0					
ANR	8932010	Identifier	i		8931938	1					
ANR	8932011	Argument	& values [ i ]		8931938	3					
ANR	8932012	UnaryOperationExpression	& values [ i ]		8931938	0					
ANR	8932013	UnaryOperator	&		8931938	0					
ANR	8932014	ArrayIndexing	values [ i ]		8931938	1					
ANR	8932015	Identifier	values		8931938	0					
ANR	8932016	Identifier	i		8931938	1					
ANR	8932017	IfStatement	if ( code < 0 )		8931938	1					
ANR	8932018	Condition	code < 0	956:24:31519:31526	8931938	0	True				
ANR	8932019	RelationalExpression	code < 0		8931938	0		<			
ANR	8932020	Identifier	code		8931938	0					
ANR	8932021	PrimaryExpression	0		8931938	1					
ANR	8932022	ReturnStatement	return code ;	957:24:31553:31564	8931938	1	True				
ANR	8932023	Identifier	code		8931938	0					
ANR	8932024	ExpressionStatement	pvalues = values	959:16:31600:31616	8931938	2	True				
ANR	8932025	AssignmentExpression	pvalues = values		8931938	0		=			
ANR	8932026	Identifier	pvalues		8931938	0					
ANR	8932027	Identifier	values		8931938	1					
ANR	8932028	BreakStatement	break ;	961:12:31644:31649	8931938	6	True				
ANR	8932029	Label	default :	962:8:31659:31666	8931938	7	True				
ANR	8932030	Identifier	default		8931938	0					
ANR	8932031	ExpressionStatement	return_op_typecheck ( op )	963:12:31680:31703	8931938	8	True				
ANR	8932032	CallExpression	return_op_typecheck ( op )		8931938	0					
ANR	8932033	Callee	return_op_typecheck		8931938	0					
ANR	8932034	Identifier	return_op_typecheck		8931938	0					
ANR	8932035	ArgumentList	op		8931938	1					
ANR	8932036	Argument	op		8931938	0					
ANR	8932037	Identifier	op		8931938	0					
ANR	8932038	ExpressionStatement	check_read ( * op )	965:4:31715:31730	8931938	4	True				
ANR	8932039	CallExpression	check_read ( * op )		8931938	0					
ANR	8932040	Callee	check_read		8931938	0					
ANR	8932041	Identifier	check_read		8931938	0					
ANR	8932042	ArgumentList	* op		8931938	1					
ANR	8932043	Argument	* op		8931938	0					
ANR	8932044	UnaryOperationExpression	* op		8931938	0					
ANR	8932045	UnaryOperator	*		8931938	0					
ANR	8932046	Identifier	op		8931938	1					
ANR	8932047	IfStatement	if ( r_size ( op ) != 6 )		8931938	5					
ANR	8932048	Condition	r_size ( op ) != 6	966:8:31740:31754	8931938	0	True				
ANR	8932049	EqualityExpression	r_size ( op ) != 6		8931938	0		!=			
ANR	8932050	CallExpression	r_size ( op )		8931938	0					
ANR	8932051	Callee	r_size		8931938	0					
ANR	8932052	Identifier	r_size		8931938	0					
ANR	8932053	ArgumentList	op		8931938	1					
ANR	8932054	Argument	op		8931938	0					
ANR	8932055	Identifier	op		8931938	0					
ANR	8932056	PrimaryExpression	6		8931938	1					
ANR	8932057	ExpressionStatement	return_error ( gs_error_rangecheck )	967:8:31765:31798	8931938	1	True				
ANR	8932058	CallExpression	return_error ( gs_error_rangecheck )		8931938	0					
ANR	8932059	Callee	return_error		8931938	0					
ANR	8932060	Identifier	return_error		8931938	0					
ANR	8932061	ArgumentList	gs_error_rangecheck		8931938	1					
ANR	8932062	Argument	gs_error_rangecheck		8931938	0					
ANR	8932063	Identifier	gs_error_rangecheck		8931938	0					
ANR	8932064	ExpressionStatement	"code = float_params ( pvalues + 5 , 6 , ( float * ) pmat )"	968:4:31804:31854	8931938	6	True				
ANR	8932065	AssignmentExpression	"code = float_params ( pvalues + 5 , 6 , ( float * ) pmat )"		8931938	0		=			
ANR	8932066	Identifier	code		8931938	0					
ANR	8932067	CallExpression	"float_params ( pvalues + 5 , 6 , ( float * ) pmat )"		8931938	1					
ANR	8932068	Callee	float_params		8931938	0					
ANR	8932069	Identifier	float_params		8931938	0					
ANR	8932070	ArgumentList	pvalues + 5		8931938	1					
ANR	8932071	Argument	pvalues + 5		8931938	0					
ANR	8932072	AdditiveExpression	pvalues + 5		8931938	0		+			
ANR	8932073	Identifier	pvalues		8931938	0					
ANR	8932074	PrimaryExpression	5		8931938	1					
ANR	8932075	Argument	6		8931938	1					
ANR	8932076	PrimaryExpression	6		8931938	0					
ANR	8932077	Argument	( float * ) pmat		8931938	2					
ANR	8932078	CastExpression	( float * ) pmat		8931938	0					
ANR	8932079	CastTarget	float *		8931938	0					
ANR	8932080	Identifier	pmat		8931938	1					
ANR	8932081	ReturnStatement	return ( code < 0 ? code : 0 ) ;	969:4:31860:31888	8931938	7	True				
ANR	8932082	ConditionalExpression	code < 0 ? code : 0		8931938	0					
ANR	8932083	Condition	code < 0		8931938	0					
ANR	8932084	RelationalExpression	code < 0		8931938	0		<			
ANR	8932085	Identifier	code		8931938	0					
ANR	8932086	PrimaryExpression	0		8931938	1					
ANR	8932087	Identifier	code		8931938	1					
ANR	8932088	PrimaryExpression	0		8931938	2					
ANR	8932089	ReturnType	int		8931938	1					
ANR	8932090	Identifier	read_matrix		8931938	2					
ANR	8932091	ParameterList	"const gs_memory_t * mem , const ref * op , gs_matrix * pmat"		8931938	3					
ANR	8932092	Parameter	const gs_memory_t * mem	939:12:31070:31091	8931938	0	True				
ANR	8932093	ParameterType	const gs_memory_t *		8931938	0					
ANR	8932094	Identifier	mem		8931938	1					
ANR	8932095	Parameter	const ref * op	939:36:31094:31107	8931938	1	True				
ANR	8932096	ParameterType	const ref *		8931938	0					
ANR	8932097	Identifier	op		8931938	1					
ANR	8932098	Parameter	gs_matrix * pmat	939:52:31110:31125	8931938	2	True				
ANR	8932099	ParameterType	gs_matrix *		8931938	0					
ANR	8932100	Identifier	pmat		8931938	1					
ANR	8932101	CFGEntryNode	ENTRY		8931938		True				
ANR	8932102	CFGExitNode	EXIT		8931938		True				
ANR	8932103	Symbol	op		8931938						
ANR	8932104	Symbol	code		8931938						
ANR	8932105	Symbol	pmat		8931938						
ANR	8932106	Symbol	* op		8931938						
ANR	8932107	Symbol	gs_error_rangecheck		8931938						
ANR	8932108	Symbol	float_params		8931938						
ANR	8932109	Symbol	array_get		8931938						
ANR	8932110	Symbol	values		8931938						
ANR	8932111	Symbol	op -> value . refs		8931938						
ANR	8932112	Symbol	i		8931938						
ANR	8932113	Symbol	pvalues		8931938						
ANR	8932114	Symbol	mem		8931938						
ANR	8932115	Symbol	op -> value		8931938						
ANR	8932116	Symbol	r_size		8931938						
ANR	8932117	Symbol	r_type		8931938						
ANR	8932118	Function	write_matrix_in	974:0:31964:32577							
ANR	8932119	FunctionDef	"write_matrix_in (ref * op , const gs_matrix * pmat , gs_dual_memory_t * idmemory , gs_ref_memory_t * imem)"		8932118	0					
ANR	8932120	CompoundStatement		977:0:32085:32577	8932118	0					
ANR	8932121	IdentifierDeclStatement	ref * aptr ;	978:4:32091:32100	8932118	0	True				
ANR	8932122	IdentifierDecl	* aptr		8932118	0					
ANR	8932123	IdentifierDeclType	ref *		8932118	0					
ANR	8932124	Identifier	aptr		8932118	1					
ANR	8932125	IdentifierDeclStatement	const float * pel ;	979:4:32106:32122	8932118	1	True				
ANR	8932126	IdentifierDecl	* pel		8932118	0					
ANR	8932127	IdentifierDeclType	const float *		8932118	0					
ANR	8932128	Identifier	pel		8932118	1					
ANR	8932129	IdentifierDeclStatement	int i ;	980:4:32128:32133	8932118	2	True				
ANR	8932130	IdentifierDecl	i		8932118	0					
ANR	8932131	IdentifierDeclType	int		8932118	0					
ANR	8932132	Identifier	i		8932118	1					
ANR	8932133	ExpressionStatement	"check_write_type ( * op , t_array )"	982:4:32140:32170	8932118	3	True				
ANR	8932134	CallExpression	"check_write_type ( * op , t_array )"		8932118	0					
ANR	8932135	Callee	check_write_type		8932118	0					
ANR	8932136	Identifier	check_write_type		8932118	0					
ANR	8932137	ArgumentList	* op		8932118	1					
ANR	8932138	Argument	* op		8932118	0					
ANR	8932139	UnaryOperationExpression	* op		8932118	0					
ANR	8932140	UnaryOperator	*		8932118	0					
ANR	8932141	Identifier	op		8932118	1					
ANR	8932142	Argument	t_array		8932118	1					
ANR	8932143	Identifier	t_array		8932118	0					
ANR	8932144	IfStatement	if ( r_size ( op ) != 6 )		8932118	4					
ANR	8932145	Condition	r_size ( op ) != 6	983:8:32180:32194	8932118	0	True				
ANR	8932146	EqualityExpression	r_size ( op ) != 6		8932118	0		!=			
ANR	8932147	CallExpression	r_size ( op )		8932118	0					
ANR	8932148	Callee	r_size		8932118	0					
ANR	8932149	Identifier	r_size		8932118	0					
ANR	8932150	ArgumentList	op		8932118	1					
ANR	8932151	Argument	op		8932118	0					
ANR	8932152	Identifier	op		8932118	0					
ANR	8932153	PrimaryExpression	6		8932118	1					
ANR	8932154	ExpressionStatement	return_error ( gs_error_rangecheck )	984:8:32205:32238	8932118	1	True				
ANR	8932155	CallExpression	return_error ( gs_error_rangecheck )		8932118	0					
ANR	8932156	Callee	return_error		8932118	0					
ANR	8932157	Identifier	return_error		8932118	0					
ANR	8932158	ArgumentList	gs_error_rangecheck		8932118	1					
ANR	8932159	Argument	gs_error_rangecheck		8932118	0					
ANR	8932160	Identifier	gs_error_rangecheck		8932118	0					
ANR	8932161	ExpressionStatement	aptr = op -> value . refs	985:4:32244:32265	8932118	5	True				
ANR	8932162	AssignmentExpression	aptr = op -> value . refs		8932118	0		=			
ANR	8932163	Identifier	aptr		8932118	0					
ANR	8932164	MemberAccess	op -> value . refs		8932118	1					
ANR	8932165	PtrMemberAccess	op -> value		8932118	0					
ANR	8932166	Identifier	op		8932118	0					
ANR	8932167	Identifier	value		8932118	1					
ANR	8932168	Identifier	refs		8932118	1					
ANR	8932169	ExpressionStatement	pel = ( const float * ) pmat	986:4:32271:32296	8932118	6	True				
ANR	8932170	AssignmentExpression	pel = ( const float * ) pmat		8932118	0		=			
ANR	8932171	Identifier	pel		8932118	0					
ANR	8932172	CastExpression	( const float * ) pmat		8932118	1					
ANR	8932173	CastTarget	const float *		8932118	0					
ANR	8932174	Identifier	pmat		8932118	1					
ANR	8932175	ForStatement	"for ( i = 5 ; i >= 0 ; i -- , aptr ++ , pel ++ )"		8932118	7					
ANR	8932176	ForInit	i = 5 ;	987:9:32307:32312	8932118	0	True				
ANR	8932177	AssignmentExpression	i = 5		8932118	0		=			
ANR	8932178	Identifier	i		8932118	0					
ANR	8932179	PrimaryExpression	5		8932118	1					
ANR	8932180	Condition	i >= 0	987:16:32314:32319	8932118	1	True				
ANR	8932181	RelationalExpression	i >= 0		8932118	0		>=			
ANR	8932182	Identifier	i		8932118	0					
ANR	8932183	PrimaryExpression	0		8932118	1					
ANR	8932184	Expression	"i -- , aptr ++ , pel ++"	987:24:32322:32339	8932118	2	True				
ANR	8932185	PostIncDecOperationExpression	i --		8932118	0					
ANR	8932186	Identifier	i		8932118	0					
ANR	8932187	IncDec	--		8932118	1					
ANR	8932188	Expression	"aptr ++ , pel ++"		8932118	1					
ANR	8932189	PostIncDecOperationExpression	aptr ++		8932118	0					
ANR	8932190	Identifier	aptr		8932118	0					
ANR	8932191	IncDec	++		8932118	1					
ANR	8932192	PostIncDecOperationExpression	pel ++		8932118	1					
ANR	8932193	Identifier	pel		8932118	0					
ANR	8932194	IncDec	++		8932118	1					
ANR	8932195	CompoundStatement		11:44:256:256	8932118	3					
ANR	8932196	IfStatement	if ( idmemory )		8932118	0					
ANR	8932197	Condition	idmemory	988:12:32356:32363	8932118	0	True				
ANR	8932198	Identifier	idmemory		8932118	0					
ANR	8932199	CompoundStatement		12:22:280:280	8932118	1					
ANR	8932200	ExpressionStatement	"ref_save ( op , aptr , ""write_matrix"" )"	989:12:32380:32414	8932118	0	True				
ANR	8932201	CallExpression	"ref_save ( op , aptr , ""write_matrix"" )"		8932118	0					
ANR	8932202	Callee	ref_save		8932118	0					
ANR	8932203	Identifier	ref_save		8932118	0					
ANR	8932204	ArgumentList	op		8932118	1					
ANR	8932205	Argument	op		8932118	0					
ANR	8932206	Identifier	op		8932118	0					
ANR	8932207	Argument	aptr		8932118	1					
ANR	8932208	Identifier	aptr		8932118	0					
ANR	8932209	Argument	"""write_matrix"""		8932118	2					
ANR	8932210	PrimaryExpression	"""write_matrix"""		8932118	0					
ANR	8932211	ExpressionStatement	"make_real_new ( aptr , * pel )"	990:12:32428:32453	8932118	1	True				
ANR	8932212	CallExpression	"make_real_new ( aptr , * pel )"		8932118	0					
ANR	8932213	Callee	make_real_new		8932118	0					
ANR	8932214	Identifier	make_real_new		8932118	0					
ANR	8932215	ArgumentList	aptr		8932118	1					
ANR	8932216	Argument	aptr		8932118	0					
ANR	8932217	Identifier	aptr		8932118	0					
ANR	8932218	Argument	* pel		8932118	1					
ANR	8932219	UnaryOperationExpression	* pel		8932118	0					
ANR	8932220	UnaryOperator	*		8932118	0					
ANR	8932221	Identifier	pel		8932118	1					
ANR	8932222	ElseStatement	else		8932118	0					
ANR	8932223	CompoundStatement		15:15:384:384	8932118	0					
ANR	8932224	ExpressionStatement	"make_tav ( aptr , t_real , imemory_new_mask ( imem ) , realval , * pel )"	992:12:32484:32545	8932118	0	True				
ANR	8932225	CallExpression	"make_tav ( aptr , t_real , imemory_new_mask ( imem ) , realval , * pel )"		8932118	0					
ANR	8932226	Callee	make_tav		8932118	0					
ANR	8932227	Identifier	make_tav		8932118	0					
ANR	8932228	ArgumentList	aptr		8932118	1					
ANR	8932229	Argument	aptr		8932118	0					
ANR	8932230	Identifier	aptr		8932118	0					
ANR	8932231	Argument	t_real		8932118	1					
ANR	8932232	Identifier	t_real		8932118	0					
ANR	8932233	Argument	imemory_new_mask ( imem )		8932118	2					
ANR	8932234	CallExpression	imemory_new_mask ( imem )		8932118	0					
ANR	8932235	Callee	imemory_new_mask		8932118	0					
ANR	8932236	Identifier	imemory_new_mask		8932118	0					
ANR	8932237	ArgumentList	imem		8932118	1					
ANR	8932238	Argument	imem		8932118	0					
ANR	8932239	Identifier	imem		8932118	0					
ANR	8932240	Argument	realval		8932118	3					
ANR	8932241	Identifier	realval		8932118	0					
ANR	8932242	Argument	* pel		8932118	4					
ANR	8932243	UnaryOperationExpression	* pel		8932118	0					
ANR	8932244	UnaryOperator	*		8932118	0					
ANR	8932245	Identifier	pel		8932118	1					
ANR	8932246	ReturnStatement	return 0 ;	995:4:32567:32575	8932118	8	True				
ANR	8932247	PrimaryExpression	0		8932118	0					
ANR	8932248	ReturnType	int		8932118	1					
ANR	8932249	Identifier	write_matrix_in		8932118	2					
ANR	8932250	ParameterList	"ref * op , const gs_matrix * pmat , gs_dual_memory_t * idmemory , gs_ref_memory_t * imem"		8932118	3					
ANR	8932251	Parameter	ref * op	975:16:31984:31991	8932118	0	True				
ANR	8932252	ParameterType	ref *		8932118	0					
ANR	8932253	Identifier	op		8932118	1					
ANR	8932254	Parameter	const gs_matrix * pmat	975:26:31994:32015	8932118	1	True				
ANR	8932255	ParameterType	const gs_matrix *		8932118	0					
ANR	8932256	Identifier	pmat		8932118	1					
ANR	8932257	Parameter	gs_dual_memory_t * idmemory	975:50:32018:32043	8932118	2	True				
ANR	8932258	ParameterType	gs_dual_memory_t *		8932118	0					
ANR	8932259	Identifier	idmemory		8932118	1					
ANR	8932260	Parameter	gs_ref_memory_t * imem	976:16:32062:32082	8932118	3	True				
ANR	8932261	ParameterType	gs_ref_memory_t *		8932118	0					
ANR	8932262	Identifier	imem		8932118	1					
ANR	8932263	CFGEntryNode	ENTRY		8932118		True				
ANR	8932264	CFGExitNode	EXIT		8932118		True				
ANR	8932265	Symbol	aptr		8932118						
ANR	8932266	Symbol	op		8932118						
ANR	8932267	Symbol	* pel		8932118						
ANR	8932268	Symbol	pmat		8932118						
ANR	8932269	Symbol	* op		8932118						
ANR	8932270	Symbol	gs_error_rangecheck		8932118						
ANR	8932271	Symbol	i		8932118						
ANR	8932272	Symbol	op -> value . refs		8932118						
ANR	8932273	Symbol	realval		8932118						
ANR	8932274	Symbol	t_real		8932118						
ANR	8932275	Symbol	idmemory		8932118						
ANR	8932276	Symbol	t_array		8932118						
ANR	8932277	Symbol	pel		8932118						
ANR	8932278	Symbol	op -> value		8932118						
ANR	8932279	Symbol	r_size		8932118						
ANR	8932280	Symbol	imemory_new_mask		8932118						
ANR	8932281	Symbol	imem		8932118						
