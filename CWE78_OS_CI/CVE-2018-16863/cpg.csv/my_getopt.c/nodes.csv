command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7553835	File	data/converged/CVE-2018-16863_ghostpdl/my_getopt.c								
ANR	7553836	DeclStmt									
ANR	7553837	Decl							int	int	my_optind
ANR	7553838	Decl							int	int	my_opterr
ANR	7553839	Decl							int	int	my_optopt
ANR	7553840	DeclStmt									
ANR	7553841	Decl							char	char *	my_optarg
ANR	7553842	Function	my_getopt_reset	36:0:1391:1509							
ANR	7553843	FunctionDef	my_getopt_reset ()		7553842	0					
ANR	7553844	CompoundStatement		37:0:1417:1509	7553842	0					
ANR	7553845	ExpressionStatement	my_optind = 1	38:4:1423:1436	7553842	0	True				
ANR	7553846	AssignmentExpression	my_optind = 1		7553842	0		=			
ANR	7553847	Identifier	my_optind		7553842	0					
ANR	7553848	PrimaryExpression	1		7553842	1					
ANR	7553849	ExpressionStatement	my_opterr = 1	39:4:1442:1455	7553842	1	True				
ANR	7553850	AssignmentExpression	my_opterr = 1		7553842	0		=			
ANR	7553851	Identifier	my_opterr		7553842	0					
ANR	7553852	PrimaryExpression	1		7553842	1					
ANR	7553853	ExpressionStatement	my_optopt = 0	40:4:1461:1474	7553842	2	True				
ANR	7553854	AssignmentExpression	my_optopt = 0		7553842	0		=			
ANR	7553855	Identifier	my_optopt		7553842	0					
ANR	7553856	PrimaryExpression	0		7553842	1					
ANR	7553857	ExpressionStatement	my_optarg = 0	41:4:1480:1493	7553842	3	True				
ANR	7553858	AssignmentExpression	my_optarg = 0		7553842	0		=			
ANR	7553859	Identifier	my_optarg		7553842	0					
ANR	7553860	PrimaryExpression	0		7553842	1					
ANR	7553861	ReturnStatement	return 0 ;	42:4:1499:1507	7553842	4	True				
ANR	7553862	PrimaryExpression	0		7553842	0					
ANR	7553863	ReturnType	int		7553842	1					
ANR	7553864	Identifier	my_getopt_reset		7553842	2					
ANR	7553865	ParameterList			7553842	3					
ANR	7553866	CFGEntryNode	ENTRY		7553842		True				
ANR	7553867	CFGExitNode	EXIT		7553842		True				
ANR	7553868	Symbol	my_optind		7553842						
ANR	7553869	Symbol	my_optarg		7553842						
ANR	7553870	Symbol	my_opterr		7553842						
ANR	7553871	Symbol	my_optopt		7553842						
ANR	7553872	Function	my_getopt	49:0:1719:4732							
ANR	7553873	FunctionDef	"my_getopt (int argc , char * argv [ ] , const char * opts)"		7553872	0					
ANR	7553874	CompoundStatement		50:0:1776:4732	7553872	0					
ANR	7553875	Statement	static	51:4:1782:1787	7553872	0	True				
ANR	7553876	IdentifierDeclStatement	int charind = 0 ;	51:11:1789:1802	7553872	1	True				
ANR	7553877	IdentifierDecl	charind = 0		7553872	0					
ANR	7553878	IdentifierDeclType	int		7553872	0					
ANR	7553879	Identifier	charind		7553872	1					
ANR	7553880	AssignmentExpression	charind = 0		7553872	2		=			
ANR	7553881	Identifier	charind		7553872	0					
ANR	7553882	PrimaryExpression	0		7553872	1					
ANR	7553883	IdentifierDeclStatement	const char * s ;	52:4:1808:1821	7553872	2	True				
ANR	7553884	IdentifierDecl	* s		7553872	0					
ANR	7553885	IdentifierDeclType	const char *		7553872	0					
ANR	7553886	Identifier	s		7553872	1					
ANR	7553887	IdentifierDeclStatement	"char mode , colon_mode ;"	53:4:1827:1848	7553872	3	True				
ANR	7553888	IdentifierDecl	mode		7553872	0					
ANR	7553889	IdentifierDeclType	char		7553872	0					
ANR	7553890	Identifier	mode		7553872	1					
ANR	7553891	IdentifierDecl	colon_mode		7553872	1					
ANR	7553892	IdentifierDeclType	char		7553872	0					
ANR	7553893	Identifier	colon_mode		7553872	1					
ANR	7553894	IdentifierDeclStatement	"int off = 0 , opt = - 1 ;"	54:4:1854:1875	7553872	4	True				
ANR	7553895	IdentifierDecl	off = 0		7553872	0					
ANR	7553896	IdentifierDeclType	int		7553872	0					
ANR	7553897	Identifier	off		7553872	1					
ANR	7553898	AssignmentExpression	off = 0		7553872	2		=			
ANR	7553899	Identifier	off		7553872	0					
ANR	7553900	PrimaryExpression	0		7553872	1					
ANR	7553901	IdentifierDecl	opt = - 1		7553872	1					
ANR	7553902	IdentifierDeclType	int		7553872	0					
ANR	7553903	Identifier	opt		7553872	1					
ANR	7553904	AssignmentExpression	opt = - 1		7553872	2		=			
ANR	7553905	Identifier	opt		7553872	0					
ANR	7553906	UnaryOperationExpression	- 1		7553872	1					
ANR	7553907	UnaryOperator	-		7553872	0					
ANR	7553908	PrimaryExpression	1		7553872	1					
ANR	7553909	IfStatement	"if ( getenv ( ""POSIXLY_CORRECT"" ) )"		7553872	5					
ANR	7553910	Condition	"getenv ( ""POSIXLY_CORRECT"" )"	56:7:1885:1909	7553872	0	True				
ANR	7553911	CallExpression	"getenv ( ""POSIXLY_CORRECT"" )"		7553872	0					
ANR	7553912	Callee	getenv		7553872	0					
ANR	7553913	Identifier	getenv		7553872	0					
ANR	7553914	ArgumentList	"""POSIXLY_CORRECT"""		7553872	1					
ANR	7553915	Argument	"""POSIXLY_CORRECT"""		7553872	0					
ANR	7553916	PrimaryExpression	"""POSIXLY_CORRECT"""		7553872	0					
ANR	7553917	ExpressionStatement	colon_mode = mode = '+'	56:34:1912:1935	7553872	1	True				
ANR	7553918	AssignmentExpression	colon_mode = mode = '+'		7553872	0		=			
ANR	7553919	Identifier	colon_mode		7553872	0					
ANR	7553920	AssignmentExpression	mode = '+'		7553872	1		=			
ANR	7553921	Identifier	mode		7553872	0					
ANR	7553922	PrimaryExpression	'+'		7553872	1					
ANR	7553923	ElseStatement	else		7553872	0					
ANR	7553924	CompoundStatement		8:9:169:169	7553872	0					
ANR	7553925	IfStatement	if ( ( colon_mode = * opts ) == ':' )		7553872	0					
ANR	7553926	Condition	( colon_mode = * opts ) == ':'	58:11:1959:1985	7553872	0	True				
ANR	7553927	EqualityExpression	( colon_mode = * opts ) == ':'		7553872	0		==			
ANR	7553928	AssignmentExpression	colon_mode = * opts		7553872	0		=			
ANR	7553929	Identifier	colon_mode		7553872	0					
ANR	7553930	UnaryOperationExpression	* opts		7553872	1					
ANR	7553931	UnaryOperator	*		7553872	0					
ANR	7553932	Identifier	opts		7553872	1					
ANR	7553933	PrimaryExpression	':'		7553872	1					
ANR	7553934	ExpressionStatement	off ++	58:40:1988:1994	7553872	1	True				
ANR	7553935	PostIncDecOperationExpression	off ++		7553872	0					
ANR	7553936	Identifier	off		7553872	0					
ANR	7553937	IncDec	++		7553872	1					
ANR	7553938	IfStatement	if ( ( ( mode = opts [ off ] ) == '+' ) || ( mode == '-' ) )		7553872	1					
ANR	7553939	Condition	( ( mode = opts [ off ] ) == '+' ) || ( mode == '-' )	59:11:2007:2050	7553872	0	True				
ANR	7553940	OrExpression	( ( mode = opts [ off ] ) == '+' ) || ( mode == '-' )		7553872	0		||			
ANR	7553941	EqualityExpression	( mode = opts [ off ] ) == '+'		7553872	0		==			
ANR	7553942	AssignmentExpression	mode = opts [ off ]		7553872	0		=			
ANR	7553943	Identifier	mode		7553872	0					
ANR	7553944	ArrayIndexing	opts [ off ]		7553872	1					
ANR	7553945	Identifier	opts		7553872	0					
ANR	7553946	Identifier	off		7553872	1					
ANR	7553947	PrimaryExpression	'+'		7553872	1					
ANR	7553948	EqualityExpression	mode == '-'		7553872	1		==			
ANR	7553949	Identifier	mode		7553872	0					
ANR	7553950	PrimaryExpression	'-'		7553872	1					
ANR	7553951	CompoundStatement		10:57:276:276	7553872	1					
ANR	7553952	ExpressionStatement	off ++	60:12:2067:2072	7553872	0	True				
ANR	7553953	PostIncDecOperationExpression	off ++		7553872	0					
ANR	7553954	Identifier	off		7553872	0					
ANR	7553955	IncDec	++		7553872	1					
ANR	7553956	IfStatement	if ( ( colon_mode != ':' ) && ( ( colon_mode = opts [ off ] ) == ':' ) )		7553872	1					
ANR	7553957	Condition	( colon_mode != ':' ) && ( ( colon_mode = opts [ off ] ) == ':' )	61:15:2089:2144	7553872	0	True				
ANR	7553958	AndExpression	( colon_mode != ':' ) && ( ( colon_mode = opts [ off ] ) == ':' )		7553872	0		&&			
ANR	7553959	EqualityExpression	colon_mode != ':'		7553872	0		!=			
ANR	7553960	Identifier	colon_mode		7553872	0					
ANR	7553961	PrimaryExpression	':'		7553872	1					
ANR	7553962	EqualityExpression	( colon_mode = opts [ off ] ) == ':'		7553872	1		==			
ANR	7553963	AssignmentExpression	colon_mode = opts [ off ]		7553872	0		=			
ANR	7553964	Identifier	colon_mode		7553872	0					
ANR	7553965	ArrayIndexing	opts [ off ]		7553872	1					
ANR	7553966	Identifier	opts		7553872	0					
ANR	7553967	Identifier	off		7553872	1					
ANR	7553968	PrimaryExpression	':'		7553872	1					
ANR	7553969	ExpressionStatement	off ++	62:16:2163:2169	7553872	1	True				
ANR	7553970	PostIncDecOperationExpression	off ++		7553872	0					
ANR	7553971	Identifier	off		7553872	0					
ANR	7553972	IncDec	++		7553872	1					
ANR	7553973	ExpressionStatement	my_optarg = 0	65:4:2191:2204	7553872	6	True				
ANR	7553974	AssignmentExpression	my_optarg = 0		7553872	0		=			
ANR	7553975	Identifier	my_optarg		7553872	0					
ANR	7553976	PrimaryExpression	0		7553872	1					
ANR	7553977	IfStatement	if ( charind )		7553872	7					
ANR	7553978	Condition	charind	66:7:2213:2219	7553872	0	True				
ANR	7553979	Identifier	charind		7553872	0					
ANR	7553980	CompoundStatement		17:16:445:445	7553872	1					
ANR	7553981	ExpressionStatement	my_optopt = argv [ my_optind ] [ charind ]	67:8:2232:2268	7553872	0	True				
ANR	7553982	AssignmentExpression	my_optopt = argv [ my_optind ] [ charind ]		7553872	0		=			
ANR	7553983	Identifier	my_optopt		7553872	0					
ANR	7553984	ArrayIndexing	argv [ my_optind ] [ charind ]		7553872	1					
ANR	7553985	ArrayIndexing	argv [ my_optind ]		7553872	0					
ANR	7553986	Identifier	argv		7553872	0					
ANR	7553987	Identifier	my_optind		7553872	1					
ANR	7553988	Identifier	charind		7553872	1					
ANR	7553989	ForStatement	for ( s = opts + off ; * s ; s ++ )		7553872	1					
ANR	7553990	ForInit	s = opts + off ;	68:12:2282:2292	7553872	0	True				
ANR	7553991	AssignmentExpression	s = opts + off		7553872	0		=			
ANR	7553992	Identifier	s		7553872	0					
ANR	7553993	AdditiveExpression	opts + off		7553872	1		+			
ANR	7553994	Identifier	opts		7553872	0					
ANR	7553995	Identifier	off		7553872	1					
ANR	7553996	Condition	* s	68:24:2294:2295	7553872	1	True				
ANR	7553997	UnaryOperationExpression	* s		7553872	0					
ANR	7553998	UnaryOperator	*		7553872	0					
ANR	7553999	Identifier	s		7553872	1					
ANR	7554000	PostIncDecOperationExpression	s ++	68:28:2298:2300	7553872	2	True				
ANR	7554001	Identifier	s		7553872	0					
ANR	7554002	IncDec	++		7553872	1					
ANR	7554003	IfStatement	if ( my_optopt == * s )		7553872	3					
ANR	7554004	Condition	my_optopt == * s	68:36:2306:2320	7553872	0	True				
ANR	7554005	EqualityExpression	my_optopt == * s		7553872	0		==			
ANR	7554006	Identifier	my_optopt		7553872	0					
ANR	7554007	UnaryOperationExpression	* s		7553872	1					
ANR	7554008	UnaryOperator	*		7553872	0					
ANR	7554009	Identifier	s		7553872	1					
ANR	7554010	CompoundStatement		19:53:546:546	7553872	1					
ANR	7554011	ExpressionStatement	charind ++	69:12:2337:2346	7553872	0	True				
ANR	7554012	PostIncDecOperationExpression	charind ++		7553872	0					
ANR	7554013	Identifier	charind		7553872	0					
ANR	7554014	IncDec	++		7553872	1					
ANR	7554015	IfStatement	if ( ( * ( ++ s ) == ':' ) || ( ( my_optopt == 'W' ) && ( * s == ';' ) ) )		7553872	1					
ANR	7554016	Condition	( * ( ++ s ) == ':' ) || ( ( my_optopt == 'W' ) && ( * s == ';' ) )	70:15:2363:2416	7553872	0	True				
ANR	7554017	OrExpression	( * ( ++ s ) == ':' ) || ( ( my_optopt == 'W' ) && ( * s == ';' ) )		7553872	0		||			
ANR	7554018	EqualityExpression	* ( ++ s ) == ':'		7553872	0		==			
ANR	7554019	UnaryOperationExpression	* ( ++ s )		7553872	0					
ANR	7554020	UnaryOperator	*		7553872	0					
ANR	7554021	UnaryExpression	++ s		7553872	1					
ANR	7554022	IncDec	++		7553872	0					
ANR	7554023	Identifier	s		7553872	1					
ANR	7554024	PrimaryExpression	':'		7553872	1					
ANR	7554025	AndExpression	( my_optopt == 'W' ) && ( * s == ';' )		7553872	1		&&			
ANR	7554026	EqualityExpression	my_optopt == 'W'		7553872	0		==			
ANR	7554027	Identifier	my_optopt		7553872	0					
ANR	7554028	PrimaryExpression	'W'		7553872	1					
ANR	7554029	EqualityExpression	* s == ';'		7553872	1		==			
ANR	7554030	UnaryOperationExpression	* s		7553872	0					
ANR	7554031	UnaryOperator	*		7553872	0					
ANR	7554032	Identifier	s		7553872	1					
ANR	7554033	PrimaryExpression	';'		7553872	1					
ANR	7554034	CompoundStatement		21:71:642:642	7553872	1					
ANR	7554035	IfStatement	if ( argv [ my_optind ] [ charind ] )		7553872	0					
ANR	7554036	Condition	argv [ my_optind ] [ charind ]	71:19:2440:2463	7553872	0	True				
ANR	7554037	ArrayIndexing	argv [ my_optind ] [ charind ]		7553872	0					
ANR	7554038	ArrayIndexing	argv [ my_optind ]		7553872	0					
ANR	7554039	Identifier	argv		7553872	0					
ANR	7554040	Identifier	my_optind		7553872	1					
ANR	7554041	Identifier	charind		7553872	1					
ANR	7554042	CompoundStatement		22:45:689:689	7553872	1					
ANR	7554043	ExpressionStatement	my_optarg = & ( argv [ my_optind ++ ] [ charind ] )	72:20:2488:2529	7553872	0	True				
ANR	7554044	AssignmentExpression	my_optarg = & ( argv [ my_optind ++ ] [ charind ] )		7553872	0		=			
ANR	7554045	Identifier	my_optarg		7553872	0					
ANR	7554046	UnaryOperationExpression	& ( argv [ my_optind ++ ] [ charind ] )		7553872	1					
ANR	7554047	UnaryOperator	&		7553872	0					
ANR	7554048	ArrayIndexing	argv [ my_optind ++ ] [ charind ]		7553872	1					
ANR	7554049	ArrayIndexing	argv [ my_optind ++ ]		7553872	0					
ANR	7554050	Identifier	argv		7553872	0					
ANR	7554051	PostIncDecOperationExpression	my_optind ++		7553872	1					
ANR	7554052	Identifier	my_optind		7553872	0					
ANR	7554053	IncDec	++		7553872	1					
ANR	7554054	Identifier	charind		7553872	1					
ANR	7554055	ExpressionStatement	charind = 0	73:20:2551:2562	7553872	1	True				
ANR	7554056	AssignmentExpression	charind = 0		7553872	0		=			
ANR	7554057	Identifier	charind		7553872	0					
ANR	7554058	PrimaryExpression	0		7553872	1					
ANR	7554059	ElseStatement	else		7553872	0					
ANR	7554060	IfStatement	if ( * ( ++ s ) != ':' )		7553872	0					
ANR	7554061	Condition	* ( ++ s ) != ':'	74:26:2590:2602	7553872	0	True				
ANR	7554062	EqualityExpression	* ( ++ s ) != ':'		7553872	0		!=			
ANR	7554063	UnaryOperationExpression	* ( ++ s )		7553872	0					
ANR	7554064	UnaryOperator	*		7553872	0					
ANR	7554065	UnaryExpression	++ s		7553872	1					
ANR	7554066	IncDec	++		7553872	0					
ANR	7554067	Identifier	s		7553872	1					
ANR	7554068	PrimaryExpression	':'		7553872	1					
ANR	7554069	CompoundStatement		25:41:828:828	7553872	1					
ANR	7554070	ExpressionStatement	charind = 0	75:20:2627:2638	7553872	0	True				
ANR	7554071	AssignmentExpression	charind = 0		7553872	0		=			
ANR	7554072	Identifier	charind		7553872	0					
ANR	7554073	PrimaryExpression	0		7553872	1					
ANR	7554074	IfStatement	if ( ++ my_optind >= argc )		7553872	1					
ANR	7554075	Condition	++ my_optind >= argc	76:23:2663:2681	7553872	0	True				
ANR	7554076	RelationalExpression	++ my_optind >= argc		7553872	0		>=			
ANR	7554077	UnaryExpression	++ my_optind		7553872	0					
ANR	7554078	IncDec	++		7553872	0					
ANR	7554079	Identifier	my_optind		7553872	1					
ANR	7554080	Identifier	argc		7553872	1					
ANR	7554081	CompoundStatement		27:44:907:907	7553872	1					
ANR	7554082	IfStatement	if ( my_opterr )		7553872	0					
ANR	7554083	Condition	my_opterr	77:27:2713:2721	7553872	0	True				
ANR	7554084	Identifier	my_opterr		7553872	0					
ANR	7554085	ExpressionStatement	"fprintf ( stderr , ""%s: option requires an argument -- %c\\n"" , argv [ 0 ] , my_optopt )"	77:38:2724:2858	7553872	1	True				
ANR	7554086	CallExpression	"fprintf ( stderr , ""%s: option requires an argument -- %c\\n"" , argv [ 0 ] , my_optopt )"		7553872	0					
ANR	7554087	Callee	fprintf		7553872	0					
ANR	7554088	Identifier	fprintf		7553872	0					
ANR	7554089	ArgumentList	stderr		7553872	1					
ANR	7554090	Argument	stderr		7553872	0					
ANR	7554091	Identifier	stderr		7553872	0					
ANR	7554092	Argument	"""%s: option requires an argument -- %c\\n"""		7553872	1					
ANR	7554093	PrimaryExpression	"""%s: option requires an argument -- %c\\n"""		7553872	0					
ANR	7554094	Argument	argv [ 0 ]		7553872	2					
ANR	7554095	ArrayIndexing	argv [ 0 ]		7553872	0					
ANR	7554096	Identifier	argv		7553872	0					
ANR	7554097	PrimaryExpression	0		7553872	1					
ANR	7554098	Argument	my_optopt		7553872	3					
ANR	7554099	Identifier	my_optopt		7553872	0					
ANR	7554100	ExpressionStatement	opt = ( colon_mode == ':' ) ? ':' : '?'	80:24:2884:2921	7553872	1	True				
ANR	7554101	AssignmentExpression	opt = ( colon_mode == ':' ) ? ':' : '?'		7553872	0		=			
ANR	7554102	Identifier	opt		7553872	0					
ANR	7554103	ConditionalExpression	( colon_mode == ':' ) ? ':' : '?'		7553872	1					
ANR	7554104	Condition	colon_mode == ':'		7553872	0					
ANR	7554105	EqualityExpression	colon_mode == ':'		7553872	0		==			
ANR	7554106	Identifier	colon_mode		7553872	0					
ANR	7554107	PrimaryExpression	':'		7553872	1					
ANR	7554108	PrimaryExpression	':'		7553872	1					
ANR	7554109	PrimaryExpression	'?'		7553872	2					
ANR	7554110	GotoStatement	goto my_getopt_ok ;	81:24:2947:2964	7553872	2	True				
ANR	7554111	Identifier	my_getopt_ok		7553872	0					
ANR	7554112	ExpressionStatement	my_optarg = argv [ my_optind ++ ]	83:20:3008:3037	7553872	2	True				
ANR	7554113	AssignmentExpression	my_optarg = argv [ my_optind ++ ]		7553872	0		=			
ANR	7554114	Identifier	my_optarg		7553872	0					
ANR	7554115	ArrayIndexing	argv [ my_optind ++ ]		7553872	1					
ANR	7554116	Identifier	argv		7553872	0					
ANR	7554117	PostIncDecOperationExpression	my_optind ++		7553872	1					
ANR	7554118	Identifier	my_optind		7553872	0					
ANR	7554119	IncDec	++		7553872	1					
ANR	7554120	ExpressionStatement	opt = my_optopt	86:12:3083:3098	7553872	2	True				
ANR	7554121	AssignmentExpression	opt = my_optopt		7553872	0		=			
ANR	7554122	Identifier	opt		7553872	0					
ANR	7554123	Identifier	my_optopt		7553872	1					
ANR	7554124	GotoStatement	goto my_getopt_ok ;	87:12:3112:3129	7553872	3	True				
ANR	7554125	Identifier	my_getopt_ok		7553872	0					
ANR	7554126	IfStatement	if ( my_opterr )		7553872	2					
ANR	7554127	Condition	my_opterr	89:11:3152:3160	7553872	0	True				
ANR	7554128	Identifier	my_opterr		7553872	0					
ANR	7554129	ExpressionStatement	"fprintf ( stderr , ""%s: illegal option -- %c\\n"" , argv [ 0 ] , my_optopt )"	89:22:3163:3252	7553872	1	True				
ANR	7554130	CallExpression	"fprintf ( stderr , ""%s: illegal option -- %c\\n"" , argv [ 0 ] , my_optopt )"		7553872	0					
ANR	7554131	Callee	fprintf		7553872	0					
ANR	7554132	Identifier	fprintf		7553872	0					
ANR	7554133	ArgumentList	stderr		7553872	1					
ANR	7554134	Argument	stderr		7553872	0					
ANR	7554135	Identifier	stderr		7553872	0					
ANR	7554136	Argument	"""%s: illegal option -- %c\\n"""		7553872	1					
ANR	7554137	PrimaryExpression	"""%s: illegal option -- %c\\n"""		7553872	0					
ANR	7554138	Argument	argv [ 0 ]		7553872	2					
ANR	7554139	ArrayIndexing	argv [ 0 ]		7553872	0					
ANR	7554140	Identifier	argv		7553872	0					
ANR	7554141	PrimaryExpression	0		7553872	1					
ANR	7554142	Argument	my_optopt		7553872	3					
ANR	7554143	Identifier	my_optopt		7553872	0					
ANR	7554144	ExpressionStatement	opt = '?'	92:8:3262:3271	7553872	3	True				
ANR	7554145	AssignmentExpression	opt = '?'		7553872	0		=			
ANR	7554146	Identifier	opt		7553872	0					
ANR	7554147	PrimaryExpression	'?'		7553872	1					
ANR	7554148	IfStatement	if ( argv [ my_optind ] [ ++ charind ] == '\\0' )		7553872	4					
ANR	7554149	Condition	argv [ my_optind ] [ ++ charind ] == '\\0'	93:11:3284:3317	7553872	0	True				
ANR	7554150	EqualityExpression	argv [ my_optind ] [ ++ charind ] == '\\0'		7553872	0		==			
ANR	7554151	ArrayIndexing	argv [ my_optind ] [ ++ charind ]		7553872	0					
ANR	7554152	ArrayIndexing	argv [ my_optind ]		7553872	0					
ANR	7554153	Identifier	argv		7553872	0					
ANR	7554154	Identifier	my_optind		7553872	1					
ANR	7554155	UnaryExpression	++ charind		7553872	1					
ANR	7554156	IncDec	++		7553872	0					
ANR	7554157	Identifier	charind		7553872	1					
ANR	7554158	PrimaryExpression	'\\0'		7553872	1					
ANR	7554159	CompoundStatement		44:47:1543:1543	7553872	1					
ANR	7554160	ExpressionStatement	my_optind ++	94:12:3334:3345	7553872	0	True				
ANR	7554161	PostIncDecOperationExpression	my_optind ++		7553872	0					
ANR	7554162	Identifier	my_optind		7553872	0					
ANR	7554163	IncDec	++		7553872	1					
ANR	7554164	ExpressionStatement	charind = 0	95:12:3359:3370	7553872	1	True				
ANR	7554165	AssignmentExpression	charind = 0		7553872	0		=			
ANR	7554166	Identifier	charind		7553872	0					
ANR	7554167	PrimaryExpression	0		7553872	1					
ANR	7554168	Label	my_getopt_ok :	97:0:3382:3394	7553872	5	True				
ANR	7554169	Identifier	my_getopt_ok		7553872	0					
ANR	7554170	IfStatement	if ( charind && ! argv [ my_optind ] [ charind ] )		7553872	6					
ANR	7554171	Condition	charind && ! argv [ my_optind ] [ charind ]	98:11:3407:3443	7553872	0	True				
ANR	7554172	AndExpression	charind && ! argv [ my_optind ] [ charind ]		7553872	0		&&			
ANR	7554173	Identifier	charind		7553872	0					
ANR	7554174	UnaryOperationExpression	! argv [ my_optind ] [ charind ]		7553872	1					
ANR	7554175	UnaryOperator	!		7553872	0					
ANR	7554176	ArrayIndexing	argv [ my_optind ] [ charind ]		7553872	1					
ANR	7554177	ArrayIndexing	argv [ my_optind ]		7553872	0					
ANR	7554178	Identifier	argv		7553872	0					
ANR	7554179	Identifier	my_optind		7553872	1					
ANR	7554180	Identifier	charind		7553872	1					
ANR	7554181	CompoundStatement		49:50:1669:1669	7553872	1					
ANR	7554182	ExpressionStatement	my_optind ++	99:12:3460:3471	7553872	0	True				
ANR	7554183	PostIncDecOperationExpression	my_optind ++		7553872	0					
ANR	7554184	Identifier	my_optind		7553872	0					
ANR	7554185	IncDec	++		7553872	1					
ANR	7554186	ExpressionStatement	charind = 0	100:12:3485:3496	7553872	1	True				
ANR	7554187	AssignmentExpression	charind = 0		7553872	0		=			
ANR	7554188	Identifier	charind		7553872	0					
ANR	7554189	PrimaryExpression	0		7553872	1					
ANR	7554190	ElseStatement	else		7553872	0					
ANR	7554191	IfStatement	if ( ( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) ) )		7553872	0					
ANR	7554192	Condition	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )	102:14:3522:3660	7553872	0	True				
ANR	7554193	OrExpression	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )		7553872	0		||			
ANR	7554194	RelationalExpression	my_optind >= argc		7553872	0		>=			
ANR	7554195	Identifier	my_optind		7553872	0					
ANR	7554196	Identifier	argc		7553872	1					
ANR	7554197	AndExpression	( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		7553872	1		&&			
ANR	7554198	EqualityExpression	argv [ my_optind ] [ 0 ] == '-'		7553872	0		==			
ANR	7554199	ArrayIndexing	argv [ my_optind ] [ 0 ]		7553872	0					
ANR	7554200	ArrayIndexing	argv [ my_optind ]		7553872	0					
ANR	7554201	Identifier	argv		7553872	0					
ANR	7554202	Identifier	my_optind		7553872	1					
ANR	7554203	PrimaryExpression	0		7553872	1					
ANR	7554204	PrimaryExpression	'-'		7553872	1					
ANR	7554205	AndExpression	( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		7553872	1		&&			
ANR	7554206	EqualityExpression	argv [ my_optind ] [ 1 ] == '-'		7553872	0		==			
ANR	7554207	ArrayIndexing	argv [ my_optind ] [ 1 ]		7553872	0					
ANR	7554208	ArrayIndexing	argv [ my_optind ]		7553872	0					
ANR	7554209	Identifier	argv		7553872	0					
ANR	7554210	Identifier	my_optind		7553872	1					
ANR	7554211	PrimaryExpression	1		7553872	1					
ANR	7554212	PrimaryExpression	'-'		7553872	1					
ANR	7554213	EqualityExpression	argv [ my_optind ] [ 2 ] == '\\0'		7553872	1		==			
ANR	7554214	ArrayIndexing	argv [ my_optind ] [ 2 ]		7553872	0					
ANR	7554215	ArrayIndexing	argv [ my_optind ]		7553872	0					
ANR	7554216	Identifier	argv		7553872	0					
ANR	7554217	Identifier	my_optind		7553872	1					
ANR	7554218	PrimaryExpression	2		7553872	1					
ANR	7554219	PrimaryExpression	'\\0'		7553872	1					
ANR	7554220	CompoundStatement		56:39:1886:1886	7553872	1					
ANR	7554221	ExpressionStatement	my_optind ++	106:12:3677:3688	7553872	0	True				
ANR	7554222	PostIncDecOperationExpression	my_optind ++		7553872	0					
ANR	7554223	Identifier	my_optind		7553872	0					
ANR	7554224	IncDec	++		7553872	1					
ANR	7554225	ExpressionStatement	opt = - 1	107:12:3702:3710	7553872	1	True				
ANR	7554226	AssignmentExpression	opt = - 1		7553872	0		=			
ANR	7554227	Identifier	opt		7553872	0					
ANR	7554228	UnaryOperationExpression	- 1		7553872	1					
ANR	7554229	UnaryOperator	-		7553872	0					
ANR	7554230	PrimaryExpression	1		7553872	1					
ANR	7554231	ElseStatement	else		7553872	0					
ANR	7554232	IfStatement	if ( ( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' ) )		7553872	0					
ANR	7554233	Condition	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )	108:14:3726:3792	7553872	0	True				
ANR	7554234	OrExpression	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )		7553872	0		||			
ANR	7554235	EqualityExpression	argv [ my_optind ] [ 0 ] != '-'		7553872	0		!=			
ANR	7554236	ArrayIndexing	argv [ my_optind ] [ 0 ]		7553872	0					
ANR	7554237	ArrayIndexing	argv [ my_optind ]		7553872	0					
ANR	7554238	Identifier	argv		7553872	0					
ANR	7554239	Identifier	my_optind		7553872	1					
ANR	7554240	PrimaryExpression	0		7553872	1					
ANR	7554241	PrimaryExpression	'-'		7553872	1					
ANR	7554242	EqualityExpression	argv [ my_optind ] [ 1 ] == '\\0'		7553872	1		==			
ANR	7554243	ArrayIndexing	argv [ my_optind ] [ 1 ]		7553872	0					
ANR	7554244	ArrayIndexing	argv [ my_optind ]		7553872	0					
ANR	7554245	Identifier	argv		7553872	0					
ANR	7554246	Identifier	my_optind		7553872	1					
ANR	7554247	PrimaryExpression	1		7553872	1					
ANR	7554248	PrimaryExpression	'\\0'		7553872	1					
ANR	7554249	CompoundStatement		62:12:2055:2066	7553872	1					
ANR	7554250	IdentifierDeclStatement	char * tmp ;	110:12:3809:3818	7553872	0	True				
ANR	7554251	IdentifierDecl	* tmp		7553872	0					
ANR	7554252	IdentifierDeclType	char *		7553872	0					
ANR	7554253	Identifier	tmp		7553872	1					
ANR	7554254	IdentifierDeclStatement	"int i , j , k ;"	111:12:3832:3843	7553872	1	True				
ANR	7554255	IdentifierDecl	i		7553872	0					
ANR	7554256	IdentifierDeclType	int		7553872	0					
ANR	7554257	Identifier	i		7553872	1					
ANR	7554258	IdentifierDecl	j		7553872	1					
ANR	7554259	IdentifierDeclType	int		7553872	0					
ANR	7554260	Identifier	j		7553872	1					
ANR	7554261	IdentifierDecl	k		7553872	2					
ANR	7554262	IdentifierDeclType	int		7553872	0					
ANR	7554263	Identifier	k		7553872	1					
ANR	7554264	IfStatement	if ( mode == '+' )		7553872	2					
ANR	7554265	Condition	mode == '+'	113:15:3861:3871	7553872	0	True				
ANR	7554266	EqualityExpression	mode == '+'		7553872	0		==			
ANR	7554267	Identifier	mode		7553872	0					
ANR	7554268	PrimaryExpression	'+'		7553872	1					
ANR	7554269	ExpressionStatement	opt = - 1	113:28:3874:3882	7553872	1	True				
ANR	7554270	AssignmentExpression	opt = - 1		7553872	0		=			
ANR	7554271	Identifier	opt		7553872	0					
ANR	7554272	UnaryOperationExpression	- 1		7553872	1					
ANR	7554273	UnaryOperator	-		7553872	0					
ANR	7554274	PrimaryExpression	1		7553872	1					
ANR	7554275	ElseStatement	else		7553872	0					
ANR	7554276	IfStatement	if ( mode == '-' )		7553872	0					
ANR	7554277	Condition	mode == '-'	114:20:3904:3914	7553872	0	True				
ANR	7554278	EqualityExpression	mode == '-'		7553872	0		==			
ANR	7554279	Identifier	mode		7553872	0					
ANR	7554280	PrimaryExpression	'-'		7553872	1					
ANR	7554281	CompoundStatement		65:33:2140:2140	7553872	1					
ANR	7554282	ExpressionStatement	my_optarg = argv [ my_optind ++ ]	115:16:3935:3964	7553872	0	True				
ANR	7554283	AssignmentExpression	my_optarg = argv [ my_optind ++ ]		7553872	0		=			
ANR	7554284	Identifier	my_optarg		7553872	0					
ANR	7554285	ArrayIndexing	argv [ my_optind ++ ]		7553872	1					
ANR	7554286	Identifier	argv		7553872	0					
ANR	7554287	PostIncDecOperationExpression	my_optind ++		7553872	1					
ANR	7554288	Identifier	my_optind		7553872	0					
ANR	7554289	IncDec	++		7553872	1					
ANR	7554290	ExpressionStatement	charind = 0	116:16:3982:3993	7553872	1	True				
ANR	7554291	AssignmentExpression	charind = 0		7553872	0		=			
ANR	7554292	Identifier	charind		7553872	0					
ANR	7554293	PrimaryExpression	0		7553872	1					
ANR	7554294	ExpressionStatement	opt = 1	117:16:4011:4018	7553872	2	True				
ANR	7554295	AssignmentExpression	opt = 1		7553872	0		=			
ANR	7554296	Identifier	opt		7553872	0					
ANR	7554297	PrimaryExpression	1		7553872	1					
ANR	7554298	ElseStatement	else		7553872	0					
ANR	7554299	CompoundStatement		69:19:2262:2262	7553872	0					
ANR	7554300	ForStatement	for ( i = j = my_optind ; i < argc ; i ++ )		7553872	0					
ANR	7554301	ForInit	i = j = my_optind ;	119:20:4061:4074	7553872	0	True				
ANR	7554302	AssignmentExpression	i = j = my_optind		7553872	0		=			
ANR	7554303	Identifier	i		7553872	0					
ANR	7554304	AssignmentExpression	j = my_optind		7553872	1		=			
ANR	7554305	Identifier	j		7553872	0					
ANR	7554306	Identifier	my_optind		7553872	1					
ANR	7554307	Condition	i < argc	119:35:4076:4081	7553872	1	True				
ANR	7554308	RelationalExpression	i < argc		7553872	0		<			
ANR	7554309	Identifier	i		7553872	0					
ANR	7554310	Identifier	argc		7553872	1					
ANR	7554311	PostIncDecOperationExpression	i ++	119:43:4084:4086	7553872	2	True				
ANR	7554312	Identifier	i		7553872	0					
ANR	7554313	IncDec	++		7553872	1					
ANR	7554314	IfStatement	if ( ( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' ) )		7553872	3					
ANR	7554315	Condition	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )	119:51:4092:4154	7553872	0	True				
ANR	7554316	AndExpression	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )		7553872	0		&&			
ANR	7554317	EqualityExpression	argv [ i ] [ 0 ] == '-'		7553872	0		==			
ANR	7554318	ArrayIndexing	argv [ i ] [ 0 ]		7553872	0					
ANR	7554319	ArrayIndexing	argv [ i ]		7553872	0					
ANR	7554320	Identifier	argv		7553872	0					
ANR	7554321	Identifier	i		7553872	1					
ANR	7554322	PrimaryExpression	0		7553872	1					
ANR	7554323	PrimaryExpression	'-'		7553872	1					
ANR	7554324	EqualityExpression	argv [ i ] [ 1 ] != '\\0'		7553872	1		!=			
ANR	7554325	ArrayIndexing	argv [ i ] [ 1 ]		7553872	0					
ANR	7554326	ArrayIndexing	argv [ i ]		7553872	0					
ANR	7554327	Identifier	argv		7553872	0					
ANR	7554328	Identifier	i		7553872	1					
ANR	7554329	PrimaryExpression	1		7553872	1					
ANR	7554330	PrimaryExpression	'\\0'		7553872	1					
ANR	7554331	CompoundStatement		71:42:2380:2380	7553872	1					
ANR	7554332	ExpressionStatement	my_optind = i	121:24:4183:4194	7553872	0	True				
ANR	7554333	AssignmentExpression	my_optind = i		7553872	0		=			
ANR	7554334	Identifier	my_optind		7553872	0					
ANR	7554335	Identifier	i		7553872	1					
ANR	7554336	ExpressionStatement	"opt = my_getopt ( argc , argv , opts )"	122:24:4220:4251	7553872	1	True				
ANR	7554337	AssignmentExpression	"opt = my_getopt ( argc , argv , opts )"		7553872	0		=			
ANR	7554338	Identifier	opt		7553872	0					
ANR	7554339	CallExpression	"my_getopt ( argc , argv , opts )"		7553872	1					
ANR	7554340	Callee	my_getopt		7553872	0					
ANR	7554341	Identifier	my_getopt		7553872	0					
ANR	7554342	ArgumentList	argc		7553872	1					
ANR	7554343	Argument	argc		7553872	0					
ANR	7554344	Identifier	argc		7553872	0					
ANR	7554345	Argument	argv		7553872	1					
ANR	7554346	Identifier	argv		7553872	0					
ANR	7554347	Argument	opts		7553872	2					
ANR	7554348	Identifier	opts		7553872	0					
ANR	7554349	WhileStatement	while ( i > j )		7553872	2					
ANR	7554350	Condition	i > j	123:30:4283:4287	7553872	0	True				
ANR	7554351	RelationalExpression	i > j		7553872	0		>			
ANR	7554352	Identifier	i		7553872	0					
ANR	7554353	Identifier	j		7553872	1					
ANR	7554354	CompoundStatement		74:37:2513:2513	7553872	1					
ANR	7554355	ExpressionStatement	tmp = argv [ -- i ]	124:28:4320:4333	7553872	0	True				
ANR	7554356	AssignmentExpression	tmp = argv [ -- i ]		7553872	0		=			
ANR	7554357	Identifier	tmp		7553872	0					
ANR	7554358	ArrayIndexing	argv [ -- i ]		7553872	1					
ANR	7554359	Identifier	argv		7553872	0					
ANR	7554360	UnaryExpression	-- i		7553872	1					
ANR	7554361	IncDec	--		7553872	0					
ANR	7554362	Identifier	i		7553872	1					
ANR	7554363	ForStatement	for ( k = i ; k + 1 < my_optind ; k ++ )		7553872	1					
ANR	7554364	ForInit	k = i ;	125:32:4367:4370	7553872	0	True				
ANR	7554365	AssignmentExpression	k = i		7553872	0		=			
ANR	7554366	Identifier	k		7553872	0					
ANR	7554367	Identifier	i		7553872	1					
ANR	7554368	Condition	k + 1 < my_optind	125:37:4372:4384	7553872	1	True				
ANR	7554369	RelationalExpression	k + 1 < my_optind		7553872	0		<			
ANR	7554370	AdditiveExpression	k + 1		7553872	0		+			
ANR	7554371	Identifier	k		7553872	0					
ANR	7554372	PrimaryExpression	1		7553872	1					
ANR	7554373	Identifier	my_optind		7553872	1					
ANR	7554374	PostIncDecOperationExpression	k ++	125:52:4387:4389	7553872	2	True				
ANR	7554375	Identifier	k		7553872	0					
ANR	7554376	IncDec	++		7553872	1					
ANR	7554377	ExpressionStatement	argv [ k ] = argv [ k + 1 ]	125:57:4392:4409	7553872	3	True				
ANR	7554378	AssignmentExpression	argv [ k ] = argv [ k + 1 ]		7553872	0		=			
ANR	7554379	ArrayIndexing	argv [ k ]		7553872	0					
ANR	7554380	Identifier	argv		7553872	0					
ANR	7554381	Identifier	k		7553872	1					
ANR	7554382	ArrayIndexing	argv [ k + 1 ]		7553872	1					
ANR	7554383	Identifier	argv		7553872	0					
ANR	7554384	AdditiveExpression	k + 1		7553872	1		+			
ANR	7554385	Identifier	k		7553872	0					
ANR	7554386	PrimaryExpression	1		7553872	1					
ANR	7554387	ExpressionStatement	argv [ -- my_optind ] = tmp	126:28:4439:4460	7553872	2	True				
ANR	7554388	AssignmentExpression	argv [ -- my_optind ] = tmp		7553872	0		=			
ANR	7554389	ArrayIndexing	argv [ -- my_optind ]		7553872	0					
ANR	7554390	Identifier	argv		7553872	0					
ANR	7554391	UnaryExpression	-- my_optind		7553872	1					
ANR	7554392	IncDec	--		7553872	0					
ANR	7554393	Identifier	my_optind		7553872	1					
ANR	7554394	Identifier	tmp		7553872	1					
ANR	7554395	BreakStatement	break ;	128:24:4512:4517	7553872	3	True				
ANR	7554396	IfStatement	if ( i == argc )		7553872	1					
ANR	7554397	Condition	i == argc	130:19:4556:4564	7553872	0	True				
ANR	7554398	EqualityExpression	i == argc		7553872	0		==			
ANR	7554399	Identifier	i		7553872	0					
ANR	7554400	Identifier	argc		7553872	1					
ANR	7554401	ExpressionStatement	opt = - 1	130:30:4567:4575	7553872	1	True				
ANR	7554402	AssignmentExpression	opt = - 1		7553872	0		=			
ANR	7554403	Identifier	opt		7553872	0					
ANR	7554404	UnaryOperationExpression	- 1		7553872	1					
ANR	7554405	UnaryOperator	-		7553872	0					
ANR	7554406	PrimaryExpression	1		7553872	1					
ANR	7554407	ElseStatement	else		7553872	0					
ANR	7554408	CompoundStatement		83:11:2825:2825	7553872	0					
ANR	7554409	ExpressionStatement	charind ++	133:8:4612:4621	7553872	0	True				
ANR	7554410	PostIncDecOperationExpression	charind ++		7553872	0					
ANR	7554411	Identifier	charind		7553872	0					
ANR	7554412	IncDec	++		7553872	1					
ANR	7554413	ExpressionStatement	"opt = my_getopt ( argc , argv , opts )"	134:8:4631:4664	7553872	1	True				
ANR	7554414	AssignmentExpression	"opt = my_getopt ( argc , argv , opts )"		7553872	0		=			
ANR	7554415	Identifier	opt		7553872	0					
ANR	7554416	CallExpression	"my_getopt ( argc , argv , opts )"		7553872	1					
ANR	7554417	Callee	my_getopt		7553872	0					
ANR	7554418	Identifier	my_getopt		7553872	0					
ANR	7554419	ArgumentList	argc		7553872	1					
ANR	7554420	Argument	argc		7553872	0					
ANR	7554421	Identifier	argc		7553872	0					
ANR	7554422	Argument	argv		7553872	1					
ANR	7554423	Identifier	argv		7553872	0					
ANR	7554424	Argument	opts		7553872	2					
ANR	7554425	Identifier	opts		7553872	0					
ANR	7554426	IfStatement	if ( my_optind > argc )		7553872	8					
ANR	7554427	Condition	my_optind > argc	136:8:4680:4695	7553872	0	True				
ANR	7554428	RelationalExpression	my_optind > argc		7553872	0		>			
ANR	7554429	Identifier	my_optind		7553872	0					
ANR	7554430	Identifier	argc		7553872	1					
ANR	7554431	ExpressionStatement	my_optind = argc	136:26:4698:4714	7553872	1	True				
ANR	7554432	AssignmentExpression	my_optind = argc		7553872	0		=			
ANR	7554433	Identifier	my_optind		7553872	0					
ANR	7554434	Identifier	argc		7553872	1					
ANR	7554435	ReturnStatement	return opt ;	137:4:4720:4730	7553872	9	True				
ANR	7554436	Identifier	opt		7553872	0					
ANR	7554437	ReturnType	int		7553872	1					
ANR	7554438	Identifier	my_getopt		7553872	2					
ANR	7554439	ParameterList	"int argc , char * argv [ ] , const char * opts"		7553872	3					
ANR	7554440	Parameter	int argc	49:14:1733:1740	7553872	0	True				
ANR	7554441	ParameterType	int		7553872	0					
ANR	7554442	Identifier	argc		7553872	1					
ANR	7554443	Parameter	char * argv [ ]	49:24:1743:1755	7553872	1	True				
ANR	7554444	ParameterType	char * [ ]		7553872	0					
ANR	7554445	Identifier	argv		7553872	1					
ANR	7554446	Parameter	const char * opts	49:39:1758:1773	7553872	2	True				
ANR	7554447	ParameterType	const char *		7553872	0					
ANR	7554448	Identifier	opts		7553872	1					
ANR	7554449	CFGEntryNode	ENTRY		7553872		True				
ANR	7554450	CFGExitNode	EXIT		7553872		True				
ANR	7554451	Symbol	charind		7553872						
ANR	7554452	Symbol	* argv		7553872						
ANR	7554453	Symbol	colon_mode		7553872						
ANR	7554454	Symbol	argv		7553872						
ANR	7554455	Symbol	my_opterr		7553872						
ANR	7554456	Symbol	mode		7553872						
ANR	7554457	Symbol	opts		7553872						
ANR	7554458	Symbol	tmp		7553872						
ANR	7554459	Symbol	* off		7553872						
ANR	7554460	Symbol	* * argv		7553872						
ANR	7554461	Symbol	my_getopt		7553872						
ANR	7554462	Symbol	getenv		7553872						
ANR	7554463	Symbol	my_optopt		7553872						
ANR	7554464	Symbol	argc		7553872						
ANR	7554465	Symbol	* * my_optind		7553872						
ANR	7554466	Symbol	* * i		7553872						
ANR	7554467	Symbol	i		7553872						
ANR	7554468	Symbol	j		7553872						
ANR	7554469	Symbol	k		7553872						
ANR	7554470	Symbol	stderr		7553872						
ANR	7554471	Symbol	off		7553872						
ANR	7554472	Symbol	opt		7553872						
ANR	7554473	Symbol	s		7553872						
ANR	7554474	Symbol	* i		7553872						
ANR	7554475	Symbol	* opts		7553872						
ANR	7554476	Symbol	my_optind		7553872						
ANR	7554477	Symbol	* ( ++ s )		7553872						
ANR	7554478	Symbol	* k		7553872						
ANR	7554479	Symbol	* my_optind		7553872						
ANR	7554480	Symbol	my_optarg		7553872						
ANR	7554481	Symbol	* s		7553872						
ANR	7554482	Symbol	* charind		7553872						
ANR	7554483	Function	_my_getopt_internal	145:0:4903:9634							
ANR	7554484	FunctionDef	"_my_getopt_internal (int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind , int long_only)"		7554483	0					
ANR	7554485	CompoundStatement		148:0:5083:9634	7554483	0					
ANR	7554486	IdentifierDeclStatement	"char mode , colon_mode = * shortopts ;"	149:4:5089:5123	7554483	0	True				
ANR	7554487	IdentifierDecl	mode		7554483	0					
ANR	7554488	IdentifierDeclType	char		7554483	0					
ANR	7554489	Identifier	mode		7554483	1					
ANR	7554490	IdentifierDecl	colon_mode = * shortopts		7554483	1					
ANR	7554491	IdentifierDeclType	char		7554483	0					
ANR	7554492	Identifier	colon_mode		7554483	1					
ANR	7554493	AssignmentExpression	colon_mode = * shortopts		7554483	2		=			
ANR	7554494	Identifier	colon_mode		7554483	0					
ANR	7554495	UnaryOperationExpression	* shortopts		7554483	1					
ANR	7554496	UnaryOperator	*		7554483	0					
ANR	7554497	Identifier	shortopts		7554483	1					
ANR	7554498	IdentifierDeclStatement	"int shortoff = 0 , opt = - 1 ;"	150:4:5129:5155	7554483	1	True				
ANR	7554499	IdentifierDecl	shortoff = 0		7554483	0					
ANR	7554500	IdentifierDeclType	int		7554483	0					
ANR	7554501	Identifier	shortoff		7554483	1					
ANR	7554502	AssignmentExpression	shortoff = 0		7554483	2		=			
ANR	7554503	Identifier	shortoff		7554483	0					
ANR	7554504	PrimaryExpression	0		7554483	1					
ANR	7554505	IdentifierDecl	opt = - 1		7554483	1					
ANR	7554506	IdentifierDeclType	int		7554483	0					
ANR	7554507	Identifier	opt		7554483	1					
ANR	7554508	AssignmentExpression	opt = - 1		7554483	2		=			
ANR	7554509	Identifier	opt		7554483	0					
ANR	7554510	UnaryOperationExpression	- 1		7554483	1					
ANR	7554511	UnaryOperator	-		7554483	0					
ANR	7554512	PrimaryExpression	1		7554483	1					
ANR	7554513	IfStatement	"if ( getenv ( ""POSIXLY_CORRECT"" ) )"		7554483	2					
ANR	7554514	Condition	"getenv ( ""POSIXLY_CORRECT"" )"	152:7:5165:5189	7554483	0	True				
ANR	7554515	CallExpression	"getenv ( ""POSIXLY_CORRECT"" )"		7554483	0					
ANR	7554516	Callee	getenv		7554483	0					
ANR	7554517	Identifier	getenv		7554483	0					
ANR	7554518	ArgumentList	"""POSIXLY_CORRECT"""		7554483	1					
ANR	7554519	Argument	"""POSIXLY_CORRECT"""		7554483	0					
ANR	7554520	PrimaryExpression	"""POSIXLY_CORRECT"""		7554483	0					
ANR	7554521	ExpressionStatement	colon_mode = mode = '+'	152:34:5192:5215	7554483	1	True				
ANR	7554522	AssignmentExpression	colon_mode = mode = '+'		7554483	0		=			
ANR	7554523	Identifier	colon_mode		7554483	0					
ANR	7554524	AssignmentExpression	mode = '+'		7554483	1		=			
ANR	7554525	Identifier	mode		7554483	0					
ANR	7554526	PrimaryExpression	'+'		7554483	1					
ANR	7554527	ElseStatement	else		7554483	0					
ANR	7554528	CompoundStatement		6:9:142:142	7554483	0					
ANR	7554529	IfStatement	if ( ( colon_mode = * shortopts ) == ':' )		7554483	0					
ANR	7554530	Condition	( colon_mode = * shortopts ) == ':'	154:11:5239:5270	7554483	0	True				
ANR	7554531	EqualityExpression	( colon_mode = * shortopts ) == ':'		7554483	0		==			
ANR	7554532	AssignmentExpression	colon_mode = * shortopts		7554483	0		=			
ANR	7554533	Identifier	colon_mode		7554483	0					
ANR	7554534	UnaryOperationExpression	* shortopts		7554483	1					
ANR	7554535	UnaryOperator	*		7554483	0					
ANR	7554536	Identifier	shortopts		7554483	1					
ANR	7554537	PrimaryExpression	':'		7554483	1					
ANR	7554538	ExpressionStatement	shortoff ++	154:45:5273:5284	7554483	1	True				
ANR	7554539	PostIncDecOperationExpression	shortoff ++		7554483	0					
ANR	7554540	Identifier	shortoff		7554483	0					
ANR	7554541	IncDec	++		7554483	1					
ANR	7554542	IfStatement	if ( ( ( mode = shortopts [ shortoff ] ) == '+' ) || ( mode == '-' ) )		7554483	1					
ANR	7554543	Condition	( ( mode = shortopts [ shortoff ] ) == '+' ) || ( mode == '-' )	155:11:5297:5350	7554483	0	True				
ANR	7554544	OrExpression	( ( mode = shortopts [ shortoff ] ) == '+' ) || ( mode == '-' )		7554483	0		||			
ANR	7554545	EqualityExpression	( mode = shortopts [ shortoff ] ) == '+'		7554483	0		==			
ANR	7554546	AssignmentExpression	mode = shortopts [ shortoff ]		7554483	0		=			
ANR	7554547	Identifier	mode		7554483	0					
ANR	7554548	ArrayIndexing	shortopts [ shortoff ]		7554483	1					
ANR	7554549	Identifier	shortopts		7554483	0					
ANR	7554550	Identifier	shortoff		7554483	1					
ANR	7554551	PrimaryExpression	'+'		7554483	1					
ANR	7554552	EqualityExpression	mode == '-'		7554483	1		==			
ANR	7554553	Identifier	mode		7554483	0					
ANR	7554554	PrimaryExpression	'-'		7554483	1					
ANR	7554555	CompoundStatement		8:67:269:269	7554483	1					
ANR	7554556	ExpressionStatement	shortoff ++	156:12:5367:5377	7554483	0	True				
ANR	7554557	PostIncDecOperationExpression	shortoff ++		7554483	0					
ANR	7554558	Identifier	shortoff		7554483	0					
ANR	7554559	IncDec	++		7554483	1					
ANR	7554560	IfStatement	if ( ( colon_mode != ':' ) && ( ( colon_mode = shortopts [ shortoff ] ) == ':' ) )		7554483	1					
ANR	7554561	Condition	( colon_mode != ':' ) && ( ( colon_mode = shortopts [ shortoff ] ) == ':' )	157:15:5394:5459	7554483	0	True				
ANR	7554562	AndExpression	( colon_mode != ':' ) && ( ( colon_mode = shortopts [ shortoff ] ) == ':' )		7554483	0		&&			
ANR	7554563	EqualityExpression	colon_mode != ':'		7554483	0		!=			
ANR	7554564	Identifier	colon_mode		7554483	0					
ANR	7554565	PrimaryExpression	':'		7554483	1					
ANR	7554566	EqualityExpression	( colon_mode = shortopts [ shortoff ] ) == ':'		7554483	1		==			
ANR	7554567	AssignmentExpression	colon_mode = shortopts [ shortoff ]		7554483	0		=			
ANR	7554568	Identifier	colon_mode		7554483	0					
ANR	7554569	ArrayIndexing	shortopts [ shortoff ]		7554483	1					
ANR	7554570	Identifier	shortopts		7554483	0					
ANR	7554571	Identifier	shortoff		7554483	1					
ANR	7554572	PrimaryExpression	':'		7554483	1					
ANR	7554573	ExpressionStatement	shortoff ++	158:16:5478:5489	7554483	1	True				
ANR	7554574	PostIncDecOperationExpression	shortoff ++		7554483	0					
ANR	7554575	Identifier	shortoff		7554483	0					
ANR	7554576	IncDec	++		7554483	1					
ANR	7554577	ExpressionStatement	my_optarg = 0	161:4:5511:5524	7554483	3	True				
ANR	7554578	AssignmentExpression	my_optarg = 0		7554483	0		=			
ANR	7554579	Identifier	my_optarg		7554483	0					
ANR	7554580	PrimaryExpression	0		7554483	1					
ANR	7554581	IfStatement	if ( ( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) ) )		7554483	4					
ANR	7554582	Condition	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )	162:7:5533:5671	7554483	0	True				
ANR	7554583	OrExpression	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )		7554483	0		||			
ANR	7554584	RelationalExpression	my_optind >= argc		7554483	0		>=			
ANR	7554585	Identifier	my_optind		7554483	0					
ANR	7554586	Identifier	argc		7554483	1					
ANR	7554587	AndExpression	( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		7554483	1		&&			
ANR	7554588	EqualityExpression	argv [ my_optind ] [ 0 ] == '-'		7554483	0		==			
ANR	7554589	ArrayIndexing	argv [ my_optind ] [ 0 ]		7554483	0					
ANR	7554590	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554591	Identifier	argv		7554483	0					
ANR	7554592	Identifier	my_optind		7554483	1					
ANR	7554593	PrimaryExpression	0		7554483	1					
ANR	7554594	PrimaryExpression	'-'		7554483	1					
ANR	7554595	AndExpression	( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		7554483	1		&&			
ANR	7554596	EqualityExpression	argv [ my_optind ] [ 1 ] == '-'		7554483	0		==			
ANR	7554597	ArrayIndexing	argv [ my_optind ] [ 1 ]		7554483	0					
ANR	7554598	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554599	Identifier	argv		7554483	0					
ANR	7554600	Identifier	my_optind		7554483	1					
ANR	7554601	PrimaryExpression	1		7554483	1					
ANR	7554602	PrimaryExpression	'-'		7554483	1					
ANR	7554603	EqualityExpression	argv [ my_optind ] [ 2 ] == '\\0'		7554483	1		==			
ANR	7554604	ArrayIndexing	argv [ my_optind ] [ 2 ]		7554483	0					
ANR	7554605	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554606	Identifier	argv		7554483	0					
ANR	7554607	Identifier	my_optind		7554483	1					
ANR	7554608	PrimaryExpression	2		7554483	1					
ANR	7554609	PrimaryExpression	'\\0'		7554483	1					
ANR	7554610	CompoundStatement		18:39:590:590	7554483	1					
ANR	7554611	ExpressionStatement	my_optind ++	166:12:5688:5699	7554483	0	True				
ANR	7554612	PostIncDecOperationExpression	my_optind ++		7554483	0					
ANR	7554613	Identifier	my_optind		7554483	0					
ANR	7554614	IncDec	++		7554483	1					
ANR	7554615	ExpressionStatement	opt = - 1	167:12:5713:5721	7554483	1	True				
ANR	7554616	AssignmentExpression	opt = - 1		7554483	0		=			
ANR	7554617	Identifier	opt		7554483	0					
ANR	7554618	UnaryOperationExpression	- 1		7554483	1					
ANR	7554619	UnaryOperator	-		7554483	0					
ANR	7554620	PrimaryExpression	1		7554483	1					
ANR	7554621	ElseStatement	else		7554483	0					
ANR	7554622	IfStatement	if ( ( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' ) )		7554483	0					
ANR	7554623	Condition	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )	168:14:5737:5803	7554483	0	True				
ANR	7554624	OrExpression	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )		7554483	0		||			
ANR	7554625	EqualityExpression	argv [ my_optind ] [ 0 ] != '-'		7554483	0		!=			
ANR	7554626	ArrayIndexing	argv [ my_optind ] [ 0 ]		7554483	0					
ANR	7554627	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554628	Identifier	argv		7554483	0					
ANR	7554629	Identifier	my_optind		7554483	1					
ANR	7554630	PrimaryExpression	0		7554483	1					
ANR	7554631	PrimaryExpression	'-'		7554483	1					
ANR	7554632	EqualityExpression	argv [ my_optind ] [ 1 ] == '\\0'		7554483	1		==			
ANR	7554633	ArrayIndexing	argv [ my_optind ] [ 1 ]		7554483	0					
ANR	7554634	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554635	Identifier	argv		7554483	0					
ANR	7554636	Identifier	my_optind		7554483	1					
ANR	7554637	PrimaryExpression	1		7554483	1					
ANR	7554638	PrimaryExpression	'\\0'		7554483	1					
ANR	7554639	CompoundStatement		24:12:759:770	7554483	1					
ANR	7554640	IdentifierDeclStatement	char * tmp ;	170:12:5820:5829	7554483	0	True				
ANR	7554641	IdentifierDecl	* tmp		7554483	0					
ANR	7554642	IdentifierDeclType	char *		7554483	0					
ANR	7554643	Identifier	tmp		7554483	1					
ANR	7554644	IdentifierDeclStatement	"int i , j , k ;"	171:12:5843:5854	7554483	1	True				
ANR	7554645	IdentifierDecl	i		7554483	0					
ANR	7554646	IdentifierDeclType	int		7554483	0					
ANR	7554647	Identifier	i		7554483	1					
ANR	7554648	IdentifierDecl	j		7554483	1					
ANR	7554649	IdentifierDeclType	int		7554483	0					
ANR	7554650	Identifier	j		7554483	1					
ANR	7554651	IdentifierDecl	k		7554483	2					
ANR	7554652	IdentifierDeclType	int		7554483	0					
ANR	7554653	Identifier	k		7554483	1					
ANR	7554654	ExpressionStatement	opt = - 1	173:12:5869:5877	7554483	2	True				
ANR	7554655	AssignmentExpression	opt = - 1		7554483	0		=			
ANR	7554656	Identifier	opt		7554483	0					
ANR	7554657	UnaryOperationExpression	- 1		7554483	1					
ANR	7554658	UnaryOperator	-		7554483	0					
ANR	7554659	PrimaryExpression	1		7554483	1					
ANR	7554660	IfStatement	if ( mode == '+' )		7554483	3					
ANR	7554661	Condition	mode == '+'	174:15:5894:5904	7554483	0	True				
ANR	7554662	EqualityExpression	mode == '+'		7554483	0		==			
ANR	7554663	Identifier	mode		7554483	0					
ANR	7554664	PrimaryExpression	'+'		7554483	1					
ANR	7554665	ReturnStatement	return - 1 ;	174:28:5907:5916	7554483	1	True				
ANR	7554666	UnaryOperationExpression	- 1		7554483	0					
ANR	7554667	UnaryOperator	-		7554483	0					
ANR	7554668	PrimaryExpression	1		7554483	1					
ANR	7554669	ElseStatement	else		7554483	0					
ANR	7554670	IfStatement	if ( mode == '-' )		7554483	0					
ANR	7554671	Condition	mode == '-'	175:20:5938:5948	7554483	0	True				
ANR	7554672	EqualityExpression	mode == '-'		7554483	0		==			
ANR	7554673	Identifier	mode		7554483	0					
ANR	7554674	PrimaryExpression	'-'		7554483	1					
ANR	7554675	CompoundStatement		28:33:867:867	7554483	1					
ANR	7554676	ExpressionStatement	my_optarg = argv [ my_optind ++ ]	176:16:5969:5998	7554483	0	True				
ANR	7554677	AssignmentExpression	my_optarg = argv [ my_optind ++ ]		7554483	0		=			
ANR	7554678	Identifier	my_optarg		7554483	0					
ANR	7554679	ArrayIndexing	argv [ my_optind ++ ]		7554483	1					
ANR	7554680	Identifier	argv		7554483	0					
ANR	7554681	PostIncDecOperationExpression	my_optind ++		7554483	1					
ANR	7554682	Identifier	my_optind		7554483	0					
ANR	7554683	IncDec	++		7554483	1					
ANR	7554684	ReturnStatement	return 1 ;	177:16:6016:6024	7554483	1	True				
ANR	7554685	PrimaryExpression	1		7554483	0					
ANR	7554686	ForStatement	for ( i = j = my_optind ; i < argc ; i ++ )		7554483	4					
ANR	7554687	ForInit	i = j = my_optind ;	179:16:6056:6069	7554483	0	True				
ANR	7554688	AssignmentExpression	i = j = my_optind		7554483	0		=			
ANR	7554689	Identifier	i		7554483	0					
ANR	7554690	AssignmentExpression	j = my_optind		7554483	1		=			
ANR	7554691	Identifier	j		7554483	0					
ANR	7554692	Identifier	my_optind		7554483	1					
ANR	7554693	Condition	i < argc	179:31:6071:6076	7554483	1	True				
ANR	7554694	RelationalExpression	i < argc		7554483	0		<			
ANR	7554695	Identifier	i		7554483	0					
ANR	7554696	Identifier	argc		7554483	1					
ANR	7554697	PostIncDecOperationExpression	i ++	179:39:6079:6081	7554483	2	True				
ANR	7554698	Identifier	i		7554483	0					
ANR	7554699	IncDec	++		7554483	1					
ANR	7554700	IfStatement	if ( ( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' ) )		7554483	3					
ANR	7554701	Condition	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )	179:47:6087:6145	7554483	0	True				
ANR	7554702	AndExpression	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )		7554483	0		&&			
ANR	7554703	EqualityExpression	argv [ i ] [ 0 ] == '-'		7554483	0		==			
ANR	7554704	ArrayIndexing	argv [ i ] [ 0 ]		7554483	0					
ANR	7554705	ArrayIndexing	argv [ i ]		7554483	0					
ANR	7554706	Identifier	argv		7554483	0					
ANR	7554707	Identifier	i		7554483	1					
ANR	7554708	PrimaryExpression	0		7554483	1					
ANR	7554709	PrimaryExpression	'-'		7554483	1					
ANR	7554710	EqualityExpression	argv [ i ] [ 1 ] != '\\0'		7554483	1		!=			
ANR	7554711	ArrayIndexing	argv [ i ] [ 1 ]		7554483	0					
ANR	7554712	ArrayIndexing	argv [ i ]		7554483	0					
ANR	7554713	Identifier	argv		7554483	0					
ANR	7554714	Identifier	i		7554483	1					
ANR	7554715	PrimaryExpression	1		7554483	1					
ANR	7554716	PrimaryExpression	'\\0'		7554483	1					
ANR	7554717	CompoundStatement		33:38:1064:1064	7554483	1					
ANR	7554718	ExpressionStatement	my_optind = i	181:20:6170:6181	7554483	0	True				
ANR	7554719	AssignmentExpression	my_optind = i		7554483	0		=			
ANR	7554720	Identifier	my_optind		7554483	0					
ANR	7554721	Identifier	i		7554483	1					
ANR	7554722	ExpressionStatement	"opt = _my_getopt_internal ( argc , argv , shortopts , longopts , longind , long_only )"	182:20:6203:6327	7554483	1	True				
ANR	7554723	AssignmentExpression	"opt = _my_getopt_internal ( argc , argv , shortopts , longopts , longind , long_only )"		7554483	0		=			
ANR	7554724	Identifier	opt		7554483	0					
ANR	7554725	CallExpression	"_my_getopt_internal ( argc , argv , shortopts , longopts , longind , long_only )"		7554483	1					
ANR	7554726	Callee	_my_getopt_internal		7554483	0					
ANR	7554727	Identifier	_my_getopt_internal		7554483	0					
ANR	7554728	ArgumentList	argc		7554483	1					
ANR	7554729	Argument	argc		7554483	0					
ANR	7554730	Identifier	argc		7554483	0					
ANR	7554731	Argument	argv		7554483	1					
ANR	7554732	Identifier	argv		7554483	0					
ANR	7554733	Argument	shortopts		7554483	2					
ANR	7554734	Identifier	shortopts		7554483	0					
ANR	7554735	Argument	longopts		7554483	3					
ANR	7554736	Identifier	longopts		7554483	0					
ANR	7554737	Argument	longind		7554483	4					
ANR	7554738	Identifier	longind		7554483	0					
ANR	7554739	Argument	long_only		7554483	5					
ANR	7554740	Identifier	long_only		7554483	0					
ANR	7554741	WhileStatement	while ( i > j )		7554483	2					
ANR	7554742	Condition	i > j	185:26:6355:6359	7554483	0	True				
ANR	7554743	RelationalExpression	i > j		7554483	0		>			
ANR	7554744	Identifier	i		7554483	0					
ANR	7554745	Identifier	j		7554483	1					
ANR	7554746	CompoundStatement		38:33:1278:1278	7554483	1					
ANR	7554747	ExpressionStatement	tmp = argv [ -- i ]	186:24:6388:6401	7554483	0	True				
ANR	7554748	AssignmentExpression	tmp = argv [ -- i ]		7554483	0		=			
ANR	7554749	Identifier	tmp		7554483	0					
ANR	7554750	ArrayIndexing	argv [ -- i ]		7554483	1					
ANR	7554751	Identifier	argv		7554483	0					
ANR	7554752	UnaryExpression	-- i		7554483	1					
ANR	7554753	IncDec	--		7554483	0					
ANR	7554754	Identifier	i		7554483	1					
ANR	7554755	ForStatement	for ( k = i ; k + 1 < my_optind ; k ++ )		7554483	1					
ANR	7554756	ForInit	k = i ;	187:28:6431:6434	7554483	0	True				
ANR	7554757	AssignmentExpression	k = i		7554483	0		=			
ANR	7554758	Identifier	k		7554483	0					
ANR	7554759	Identifier	i		7554483	1					
ANR	7554760	Condition	k + 1 < my_optind	187:33:6436:6448	7554483	1	True				
ANR	7554761	RelationalExpression	k + 1 < my_optind		7554483	0		<			
ANR	7554762	AdditiveExpression	k + 1		7554483	0		+			
ANR	7554763	Identifier	k		7554483	0					
ANR	7554764	PrimaryExpression	1		7554483	1					
ANR	7554765	Identifier	my_optind		7554483	1					
ANR	7554766	PostIncDecOperationExpression	k ++	187:48:6451:6453	7554483	2	True				
ANR	7554767	Identifier	k		7554483	0					
ANR	7554768	IncDec	++		7554483	1					
ANR	7554769	ExpressionStatement	argv [ k ] = argv [ k + 1 ]	188:28:6484:6501	7554483	3	True				
ANR	7554770	AssignmentExpression	argv [ k ] = argv [ k + 1 ]		7554483	0		=			
ANR	7554771	ArrayIndexing	argv [ k ]		7554483	0					
ANR	7554772	Identifier	argv		7554483	0					
ANR	7554773	Identifier	k		7554483	1					
ANR	7554774	ArrayIndexing	argv [ k + 1 ]		7554483	1					
ANR	7554775	Identifier	argv		7554483	0					
ANR	7554776	AdditiveExpression	k + 1		7554483	1		+			
ANR	7554777	Identifier	k		7554483	0					
ANR	7554778	PrimaryExpression	1		7554483	1					
ANR	7554779	ExpressionStatement	argv [ -- my_optind ] = tmp	189:24:6527:6548	7554483	2	True				
ANR	7554780	AssignmentExpression	argv [ -- my_optind ] = tmp		7554483	0		=			
ANR	7554781	ArrayIndexing	argv [ -- my_optind ]		7554483	0					
ANR	7554782	Identifier	argv		7554483	0					
ANR	7554783	UnaryExpression	-- my_optind		7554483	1					
ANR	7554784	IncDec	--		7554483	0					
ANR	7554785	Identifier	my_optind		7554483	1					
ANR	7554786	Identifier	tmp		7554483	1					
ANR	7554787	BreakStatement	break ;	191:20:6592:6597	7554483	3	True				
ANR	7554788	ElseStatement	else		7554483	0					
ANR	7554789	IfStatement	if ( ( ! long_only ) && ( argv [ my_optind ] [ 1 ] != '-' ) )		7554483	0					
ANR	7554790	Condition	( ! long_only ) && ( argv [ my_optind ] [ 1 ] != '-' )	193:14:6627:6669	7554483	0	True				
ANR	7554791	AndExpression	( ! long_only ) && ( argv [ my_optind ] [ 1 ] != '-' )		7554483	0		&&			
ANR	7554792	UnaryOperationExpression	! long_only		7554483	0					
ANR	7554793	UnaryOperator	!		7554483	0					
ANR	7554794	Identifier	long_only		7554483	1					
ANR	7554795	EqualityExpression	argv [ my_optind ] [ 1 ] != '-'		7554483	1		!=			
ANR	7554796	ArrayIndexing	argv [ my_optind ] [ 1 ]		7554483	0					
ANR	7554797	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554798	Identifier	argv		7554483	0					
ANR	7554799	Identifier	my_optind		7554483	1					
ANR	7554800	PrimaryExpression	1		7554483	1					
ANR	7554801	PrimaryExpression	'-'		7554483	1					
ANR	7554802	ExpressionStatement	"opt = my_getopt ( argc , argv , shortopts )"	194:8:6680:6718	7554483	1	True				
ANR	7554803	AssignmentExpression	"opt = my_getopt ( argc , argv , shortopts )"		7554483	0		=			
ANR	7554804	Identifier	opt		7554483	0					
ANR	7554805	CallExpression	"my_getopt ( argc , argv , shortopts )"		7554483	1					
ANR	7554806	Callee	my_getopt		7554483	0					
ANR	7554807	Identifier	my_getopt		7554483	0					
ANR	7554808	ArgumentList	argc		7554483	1					
ANR	7554809	Argument	argc		7554483	0					
ANR	7554810	Identifier	argc		7554483	0					
ANR	7554811	Argument	argv		7554483	1					
ANR	7554812	Identifier	argv		7554483	0					
ANR	7554813	Argument	shortopts		7554483	2					
ANR	7554814	Identifier	shortopts		7554483	0					
ANR	7554815	ElseStatement	else		7554483	0					
ANR	7554816	CompoundStatement		50:8:1684:1712	7554483	0					
ANR	7554817	IdentifierDeclStatement	"int charind , offset ;"	196:8:6739:6758	7554483	0	True				
ANR	7554818	IdentifierDecl	charind		7554483	0					
ANR	7554819	IdentifierDeclType	int		7554483	0					
ANR	7554820	Identifier	charind		7554483	1					
ANR	7554821	IdentifierDecl	offset		7554483	1					
ANR	7554822	IdentifierDeclType	int		7554483	0					
ANR	7554823	Identifier	offset		7554483	1					
ANR	7554824	IdentifierDeclStatement	"int found = 0 , ind , hits = 0 ;"	197:8:6768:6796	7554483	1	True				
ANR	7554825	IdentifierDecl	found = 0		7554483	0					
ANR	7554826	IdentifierDeclType	int		7554483	0					
ANR	7554827	Identifier	found		7554483	1					
ANR	7554828	AssignmentExpression	found = 0		7554483	2		=			
ANR	7554829	Identifier	found		7554483	0					
ANR	7554830	PrimaryExpression	0		7554483	1					
ANR	7554831	IdentifierDecl	ind		7554483	1					
ANR	7554832	IdentifierDeclType	int		7554483	0					
ANR	7554833	Identifier	ind		7554483	1					
ANR	7554834	IdentifierDecl	hits = 0		7554483	2					
ANR	7554835	IdentifierDeclType	int		7554483	0					
ANR	7554836	Identifier	hits		7554483	1					
ANR	7554837	AssignmentExpression	hits = 0		7554483	2		=			
ANR	7554838	Identifier	hits		7554483	0					
ANR	7554839	PrimaryExpression	0		7554483	1					
ANR	7554840	IfStatement	if ( ( ( my_optopt = argv [ my_optind ] [ 1 ] ) != '-' ) && ! argv [ my_optind ] [ 2 ] )		7554483	2					
ANR	7554841	Condition	( ( my_optopt = argv [ my_optind ] [ 1 ] ) != '-' ) && ! argv [ my_optind ] [ 2 ]	199:11:6810:6874	7554483	0	True				
ANR	7554842	AndExpression	( ( my_optopt = argv [ my_optind ] [ 1 ] ) != '-' ) && ! argv [ my_optind ] [ 2 ]		7554483	0		&&			
ANR	7554843	EqualityExpression	( my_optopt = argv [ my_optind ] [ 1 ] ) != '-'		7554483	0		!=			
ANR	7554844	AssignmentExpression	my_optopt = argv [ my_optind ] [ 1 ]		7554483	0		=			
ANR	7554845	Identifier	my_optopt		7554483	0					
ANR	7554846	ArrayIndexing	argv [ my_optind ] [ 1 ]		7554483	1					
ANR	7554847	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554848	Identifier	argv		7554483	0					
ANR	7554849	Identifier	my_optind		7554483	1					
ANR	7554850	PrimaryExpression	1		7554483	1					
ANR	7554851	PrimaryExpression	'-'		7554483	1					
ANR	7554852	UnaryOperationExpression	! argv [ my_optind ] [ 2 ]		7554483	1					
ANR	7554853	UnaryOperator	!		7554483	0					
ANR	7554854	ArrayIndexing	argv [ my_optind ] [ 2 ]		7554483	1					
ANR	7554855	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554856	Identifier	argv		7554483	0					
ANR	7554857	Identifier	my_optind		7554483	1					
ANR	7554858	PrimaryExpression	2		7554483	1					
ANR	7554859	CompoundStatement		53:12:1807:1812	7554483	1					
ANR	7554860	IdentifierDeclStatement	int c ;	200:12:6891:6896	7554483	0	True				
ANR	7554861	IdentifierDecl	c		7554483	0					
ANR	7554862	IdentifierDeclType	int		7554483	0					
ANR	7554863	Identifier	c		7554483	1					
ANR	7554864	ExpressionStatement	ind = shortoff	202:12:6911:6925	7554483	1	True				
ANR	7554865	AssignmentExpression	ind = shortoff		7554483	0		=			
ANR	7554866	Identifier	ind		7554483	0					
ANR	7554867	Identifier	shortoff		7554483	1					
ANR	7554868	WhileStatement	while ( ( c = shortopts [ ind ++ ] ) )		7554483	2					
ANR	7554869	Condition	c = shortopts [ ind ++ ]	203:18:6945:6966	7554483	0	True				
ANR	7554870	AssignmentExpression	c = shortopts [ ind ++ ]		7554483	0		=			
ANR	7554871	Identifier	c		7554483	0					
ANR	7554872	ArrayIndexing	shortopts [ ind ++ ]		7554483	1					
ANR	7554873	Identifier	shortopts		7554483	0					
ANR	7554874	PostIncDecOperationExpression	ind ++		7554483	1					
ANR	7554875	Identifier	ind		7554483	0					
ANR	7554876	IncDec	++		7554483	1					
ANR	7554877	CompoundStatement		56:42:1885:1885	7554483	1					
ANR	7554878	IfStatement	if ( ( ( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) ) ) && ( shortopts [ ++ ind ] == ':' ) )		7554483	0					
ANR	7554879	Condition	( ( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) ) ) && ( shortopts [ ++ ind ] == ':' )	204:19:6990:7126	7554483	0	True				
ANR	7554880	AndExpression	( ( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) ) ) && ( shortopts [ ++ ind ] == ':' )		7554483	0		&&			
ANR	7554881	OrExpression	( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) )		7554483	0		||			
ANR	7554882	EqualityExpression	shortopts [ ind ] == ':'		7554483	0		==			
ANR	7554883	ArrayIndexing	shortopts [ ind ]		7554483	0					
ANR	7554884	Identifier	shortopts		7554483	0					
ANR	7554885	Identifier	ind		7554483	1					
ANR	7554886	PrimaryExpression	':'		7554483	1					
ANR	7554887	AndExpression	( c == 'W' ) && ( shortopts [ ind ] == ';' )		7554483	1		&&			
ANR	7554888	EqualityExpression	c == 'W'		7554483	0		==			
ANR	7554889	Identifier	c		7554483	0					
ANR	7554890	PrimaryExpression	'W'		7554483	1					
ANR	7554891	EqualityExpression	shortopts [ ind ] == ';'		7554483	1		==			
ANR	7554892	ArrayIndexing	shortopts [ ind ]		7554483	0					
ANR	7554893	Identifier	shortopts		7554483	0					
ANR	7554894	Identifier	ind		7554483	1					
ANR	7554895	PrimaryExpression	';'		7554483	1					
ANR	7554896	EqualityExpression	shortopts [ ++ ind ] == ':'		7554483	1		==			
ANR	7554897	ArrayIndexing	shortopts [ ++ ind ]		7554483	0					
ANR	7554898	Identifier	shortopts		7554483	0					
ANR	7554899	UnaryExpression	++ ind		7554483	1					
ANR	7554900	IncDec	++		7554483	0					
ANR	7554901	Identifier	ind		7554483	1					
ANR	7554902	PrimaryExpression	':'		7554483	1					
ANR	7554903	ExpressionStatement	ind ++	207:20:7149:7155	7554483	1	True				
ANR	7554904	PostIncDecOperationExpression	ind ++		7554483	0					
ANR	7554905	Identifier	ind		7554483	0					
ANR	7554906	IncDec	++		7554483	1					
ANR	7554907	IfStatement	if ( my_optopt == c )		7554483	1					
ANR	7554908	Condition	my_optopt == c	208:19:7176:7189	7554483	0	True				
ANR	7554909	EqualityExpression	my_optopt == c		7554483	0		==			
ANR	7554910	Identifier	my_optopt		7554483	0					
ANR	7554911	Identifier	c		7554483	1					
ANR	7554912	ReturnStatement	"return my_getopt ( argc , argv , shortopts ) ;"	208:35:7192:7231	7554483	1	True				
ANR	7554913	CallExpression	"my_getopt ( argc , argv , shortopts )"		7554483	0					
ANR	7554914	Callee	my_getopt		7554483	0					
ANR	7554915	Identifier	my_getopt		7554483	0					
ANR	7554916	ArgumentList	argc		7554483	1					
ANR	7554917	Argument	argc		7554483	0					
ANR	7554918	Identifier	argc		7554483	0					
ANR	7554919	Argument	argv		7554483	1					
ANR	7554920	Identifier	argv		7554483	0					
ANR	7554921	Argument	shortopts		7554483	2					
ANR	7554922	Identifier	shortopts		7554483	0					
ANR	7554923	ExpressionStatement	offset = 2 - ( argv [ my_optind ] [ 1 ] != '-' )	211:8:7265:7305	7554483	3	True				
ANR	7554924	AssignmentExpression	offset = 2 - ( argv [ my_optind ] [ 1 ] != '-' )		7554483	0		=			
ANR	7554925	Identifier	offset		7554483	0					
ANR	7554926	AdditiveExpression	2 - ( argv [ my_optind ] [ 1 ] != '-' )		7554483	1		-			
ANR	7554927	PrimaryExpression	2		7554483	0					
ANR	7554928	EqualityExpression	argv [ my_optind ] [ 1 ] != '-'		7554483	1		!=			
ANR	7554929	ArrayIndexing	argv [ my_optind ] [ 1 ]		7554483	0					
ANR	7554930	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554931	Identifier	argv		7554483	0					
ANR	7554932	Identifier	my_optind		7554483	1					
ANR	7554933	PrimaryExpression	1		7554483	1					
ANR	7554934	PrimaryExpression	'-'		7554483	1					
ANR	7554935	ForStatement	for ( charind = offset ; ( argv [ my_optind ] [ charind ] != '\\0' ) && ( argv [ my_optind ] [ charind ] != '=' ) ; charind ++ )		7554483	4					
ANR	7554936	ForInit	charind = offset ;	212:12:7319:7335	7554483	0	True				
ANR	7554937	AssignmentExpression	charind = offset		7554483	0		=			
ANR	7554938	Identifier	charind		7554483	0					
ANR	7554939	Identifier	offset		7554483	1					
ANR	7554940	Condition	( argv [ my_optind ] [ charind ] != '\\0' ) && ( argv [ my_optind ] [ charind ] != '=' )	213:12:7349:7431	7554483	1	True				
ANR	7554941	AndExpression	( argv [ my_optind ] [ charind ] != '\\0' ) && ( argv [ my_optind ] [ charind ] != '=' )		7554483	0		&&			
ANR	7554942	EqualityExpression	argv [ my_optind ] [ charind ] != '\\0'		7554483	0		!=			
ANR	7554943	ArrayIndexing	argv [ my_optind ] [ charind ]		7554483	0					
ANR	7554944	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554945	Identifier	argv		7554483	0					
ANR	7554946	Identifier	my_optind		7554483	1					
ANR	7554947	Identifier	charind		7554483	1					
ANR	7554948	PrimaryExpression	'\\0'		7554483	1					
ANR	7554949	EqualityExpression	argv [ my_optind ] [ charind ] != '='		7554483	1		!=			
ANR	7554950	ArrayIndexing	argv [ my_optind ] [ charind ]		7554483	0					
ANR	7554951	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7554952	Identifier	argv		7554483	0					
ANR	7554953	Identifier	my_optind		7554483	1					
ANR	7554954	Identifier	charind		7554483	1					
ANR	7554955	PrimaryExpression	'='		7554483	1					
ANR	7554956	PostIncDecOperationExpression	charind ++	215:8:7442:7450	7554483	2	True				
ANR	7554957	Identifier	charind		7554483	0					
ANR	7554958	IncDec	++		7554483	1					
ANR	7554959	ExpressionStatement		215:18:7452:7452	7554483	3	True				
ANR	7554960	ForStatement	for ( ind = 0 ; longopts [ ind ] . name && ! hits ; ind ++ )		7554483	5					
ANR	7554961	ForInit	ind = 0 ;	216:12:7466:7473	7554483	0	True				
ANR	7554962	AssignmentExpression	ind = 0		7554483	0		=			
ANR	7554963	Identifier	ind		7554483	0					
ANR	7554964	PrimaryExpression	0		7554483	1					
ANR	7554965	Condition	longopts [ ind ] . name && ! hits	216:21:7475:7501	7554483	1	True				
ANR	7554966	AndExpression	longopts [ ind ] . name && ! hits		7554483	0		&&			
ANR	7554967	MemberAccess	longopts [ ind ] . name		7554483	0					
ANR	7554968	ArrayIndexing	longopts [ ind ]		7554483	0					
ANR	7554969	Identifier	longopts		7554483	0					
ANR	7554970	Identifier	ind		7554483	1					
ANR	7554971	Identifier	name		7554483	1					
ANR	7554972	UnaryOperationExpression	! hits		7554483	1					
ANR	7554973	UnaryOperator	!		7554483	0					
ANR	7554974	Identifier	hits		7554483	1					
ANR	7554975	PostIncDecOperationExpression	ind ++	216:50:7504:7508	7554483	2	True				
ANR	7554976	Identifier	ind		7554483	0					
ANR	7554977	IncDec	++		7554483	1					
ANR	7554978	IfStatement	"if ( ( strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset ) ) && ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 ) )"		7554483	3					
ANR	7554979	Condition	"( strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset ) ) && ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 )"	217:15:7526:7698	7554483	0	True				
ANR	7554980	AndExpression	"( strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset ) ) && ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 )"		7554483	0		&&			
ANR	7554981	EqualityExpression	strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset )		7554483	0		==			
ANR	7554982	CallExpression	strlen ( longopts [ ind ] . name )		7554483	0					
ANR	7554983	Callee	strlen		7554483	0					
ANR	7554984	Identifier	strlen		7554483	0					
ANR	7554985	ArgumentList	longopts [ ind ] . name		7554483	1					
ANR	7554986	Argument	longopts [ ind ] . name		7554483	0					
ANR	7554987	MemberAccess	longopts [ ind ] . name		7554483	0					
ANR	7554988	ArrayIndexing	longopts [ ind ]		7554483	0					
ANR	7554989	Identifier	longopts		7554483	0					
ANR	7554990	Identifier	ind		7554483	1					
ANR	7554991	Identifier	name		7554483	1					
ANR	7554992	CastExpression	( size_t ) ( charind - offset )		7554483	1					
ANR	7554993	CastTarget	size_t		7554483	0					
ANR	7554994	AdditiveExpression	charind - offset		7554483	1		-			
ANR	7554995	Identifier	charind		7554483	0					
ANR	7554996	Identifier	offset		7554483	1					
ANR	7554997	EqualityExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0"		7554483	1		==			
ANR	7554998	CallExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset )"		7554483	0					
ANR	7554999	Callee	strncmp		7554483	0					
ANR	7555000	Identifier	strncmp		7554483	0					
ANR	7555001	ArgumentList	longopts [ ind ] . name		7554483	1					
ANR	7555002	Argument	longopts [ ind ] . name		7554483	0					
ANR	7555003	MemberAccess	longopts [ ind ] . name		7554483	0					
ANR	7555004	ArrayIndexing	longopts [ ind ]		7554483	0					
ANR	7555005	Identifier	longopts		7554483	0					
ANR	7555006	Identifier	ind		7554483	1					
ANR	7555007	Identifier	name		7554483	1					
ANR	7555008	Argument	argv [ my_optind ] + offset		7554483	1					
ANR	7555009	AdditiveExpression	argv [ my_optind ] + offset		7554483	0		+			
ANR	7555010	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7555011	Identifier	argv		7554483	0					
ANR	7555012	Identifier	my_optind		7554483	1					
ANR	7555013	Identifier	offset		7554483	1					
ANR	7555014	Argument	charind - offset		7554483	2					
ANR	7555015	AdditiveExpression	charind - offset		7554483	0		-			
ANR	7555016	Identifier	charind		7554483	0					
ANR	7555017	Identifier	offset		7554483	1					
ANR	7555018	PrimaryExpression	0		7554483	1					
ANR	7555019	ExpressionStatement	"found = ind , hits ++"	220:16:7717:7736	7554483	1	True				
ANR	7555020	Expression	"found = ind , hits ++"		7554483	0					
ANR	7555021	AssignmentExpression	found = ind		7554483	0		=			
ANR	7555022	Identifier	found		7554483	0					
ANR	7555023	Identifier	ind		7554483	1					
ANR	7555024	PostIncDecOperationExpression	hits ++		7554483	1					
ANR	7555025	Identifier	hits		7554483	0					
ANR	7555026	IncDec	++		7554483	1					
ANR	7555027	IfStatement	if ( ! hits )		7554483	6					
ANR	7555028	Condition	! hits	221:11:7749:7753	7554483	0	True				
ANR	7555029	UnaryOperationExpression	! hits		7554483	0					
ANR	7555030	UnaryOperator	!		7554483	0					
ANR	7555031	Identifier	hits		7554483	1					
ANR	7555032	ForStatement	for ( ind = 0 ; longopts [ ind ] . name ; ind ++ )		7554483	1					
ANR	7555033	ForInit	ind = 0 ;	221:22:7760:7767	7554483	0	True				
ANR	7555034	AssignmentExpression	ind = 0		7554483	0		=			
ANR	7555035	Identifier	ind		7554483	0					
ANR	7555036	PrimaryExpression	0		7554483	1					
ANR	7555037	Condition	longopts [ ind ] . name	221:31:7769:7786	7554483	1	True				
ANR	7555038	MemberAccess	longopts [ ind ] . name		7554483	0					
ANR	7555039	ArrayIndexing	longopts [ ind ]		7554483	0					
ANR	7555040	Identifier	longopts		7554483	0					
ANR	7555041	Identifier	ind		7554483	1					
ANR	7555042	Identifier	name		7554483	1					
ANR	7555043	PostIncDecOperationExpression	ind ++	221:51:7789:7793	7554483	2	True				
ANR	7555044	Identifier	ind		7554483	0					
ANR	7555045	IncDec	++		7554483	1					
ANR	7555046	IfStatement	"if ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 )"		7554483	3					
ANR	7555047	Condition	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0"	222:15:7811:7902	7554483	0	True				
ANR	7555048	EqualityExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0"		7554483	0		==			
ANR	7555049	CallExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset )"		7554483	0					
ANR	7555050	Callee	strncmp		7554483	0					
ANR	7555051	Identifier	strncmp		7554483	0					
ANR	7555052	ArgumentList	longopts [ ind ] . name		7554483	1					
ANR	7555053	Argument	longopts [ ind ] . name		7554483	0					
ANR	7555054	MemberAccess	longopts [ ind ] . name		7554483	0					
ANR	7555055	ArrayIndexing	longopts [ ind ]		7554483	0					
ANR	7555056	Identifier	longopts		7554483	0					
ANR	7555057	Identifier	ind		7554483	1					
ANR	7555058	Identifier	name		7554483	1					
ANR	7555059	Argument	argv [ my_optind ] + offset		7554483	1					
ANR	7555060	AdditiveExpression	argv [ my_optind ] + offset		7554483	0		+			
ANR	7555061	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7555062	Identifier	argv		7554483	0					
ANR	7555063	Identifier	my_optind		7554483	1					
ANR	7555064	Identifier	offset		7554483	1					
ANR	7555065	Argument	charind - offset		7554483	2					
ANR	7555066	AdditiveExpression	charind - offset		7554483	0		-			
ANR	7555067	Identifier	charind		7554483	0					
ANR	7555068	Identifier	offset		7554483	1					
ANR	7555069	PrimaryExpression	0		7554483	1					
ANR	7555070	ExpressionStatement	"found = ind , hits ++"	224:16:7921:7940	7554483	1	True				
ANR	7555071	Expression	"found = ind , hits ++"		7554483	0					
ANR	7555072	AssignmentExpression	found = ind		7554483	0		=			
ANR	7555073	Identifier	found		7554483	0					
ANR	7555074	Identifier	ind		7554483	1					
ANR	7555075	PostIncDecOperationExpression	hits ++		7554483	1					
ANR	7555076	Identifier	hits		7554483	0					
ANR	7555077	IncDec	++		7554483	1					
ANR	7555078	IfStatement	if ( hits == 1 )		7554483	7					
ANR	7555079	Condition	hits == 1	225:11:7953:7961	7554483	0	True				
ANR	7555080	EqualityExpression	hits == 1		7554483	0		==			
ANR	7555081	Identifier	hits		7554483	0					
ANR	7555082	PrimaryExpression	1		7554483	1					
ANR	7555083	CompoundStatement		78:22:2880:2880	7554483	1					
ANR	7555084	ExpressionStatement	opt = 0	226:12:7978:7985	7554483	0	True				
ANR	7555085	AssignmentExpression	opt = 0		7554483	0		=			
ANR	7555086	Identifier	opt		7554483	0					
ANR	7555087	PrimaryExpression	0		7554483	1					
ANR	7555088	IfStatement	if ( argv [ my_optind ] [ charind ] == '=' )		7554483	1					
ANR	7555089	Condition	argv [ my_optind ] [ charind ] == '='	228:15:8003:8033	7554483	0	True				
ANR	7555090	EqualityExpression	argv [ my_optind ] [ charind ] == '='		7554483	0		==			
ANR	7555091	ArrayIndexing	argv [ my_optind ] [ charind ]		7554483	0					
ANR	7555092	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7555093	Identifier	argv		7554483	0					
ANR	7555094	Identifier	my_optind		7554483	1					
ANR	7555095	Identifier	charind		7554483	1					
ANR	7555096	PrimaryExpression	'='		7554483	1					
ANR	7555097	CompoundStatement		81:48:2952:2952	7554483	1					
ANR	7555098	IfStatement	if ( longopts [ found ] . has_arg == 0 )		7554483	0					
ANR	7555099	Condition	longopts [ found ] . has_arg == 0	229:19:8057:8084	7554483	0	True				
ANR	7555100	EqualityExpression	longopts [ found ] . has_arg == 0		7554483	0		==			
ANR	7555101	MemberAccess	longopts [ found ] . has_arg		7554483	0					
ANR	7555102	ArrayIndexing	longopts [ found ]		7554483	0					
ANR	7555103	Identifier	longopts		7554483	0					
ANR	7555104	Identifier	found		7554483	1					
ANR	7555105	Identifier	has_arg		7554483	1					
ANR	7555106	PrimaryExpression	0		7554483	1					
ANR	7555107	CompoundStatement		82:49:3003:3003	7554483	1					
ANR	7555108	ExpressionStatement	opt = '?'	230:20:8109:8118	7554483	0	True				
ANR	7555109	AssignmentExpression	opt = '?'		7554483	0		=			
ANR	7555110	Identifier	opt		7554483	0					
ANR	7555111	PrimaryExpression	'?'		7554483	1					
ANR	7555112	IfStatement	if ( my_opterr )		7554483	1					
ANR	7555113	Condition	my_opterr	231:23:8143:8151	7554483	0	True				
ANR	7555114	Identifier	my_opterr		7554483	0					
ANR	7555115	ExpressionStatement	"fprintf ( stderr , ""%s: option `--%s' doesn't allow an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"	231:34:8154:8297	7554483	1	True				
ANR	7555116	CallExpression	"fprintf ( stderr , ""%s: option `--%s' doesn't allow an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"		7554483	0					
ANR	7555117	Callee	fprintf		7554483	0					
ANR	7555118	Identifier	fprintf		7554483	0					
ANR	7555119	ArgumentList	stderr		7554483	1					
ANR	7555120	Argument	stderr		7554483	0					
ANR	7555121	Identifier	stderr		7554483	0					
ANR	7555122	Argument	"""%s: option `--%s' doesn't allow an argument\\n"""		7554483	1					
ANR	7555123	PrimaryExpression	"""%s: option `--%s' doesn't allow an argument\\n"""		7554483	0					
ANR	7555124	Argument	argv [ 0 ]		7554483	2					
ANR	7555125	ArrayIndexing	argv [ 0 ]		7554483	0					
ANR	7555126	Identifier	argv		7554483	0					
ANR	7555127	PrimaryExpression	0		7554483	1					
ANR	7555128	Argument	longopts [ found ] . name		7554483	3					
ANR	7555129	MemberAccess	longopts [ found ] . name		7554483	0					
ANR	7555130	ArrayIndexing	longopts [ found ]		7554483	0					
ANR	7555131	Identifier	longopts		7554483	0					
ANR	7555132	Identifier	found		7554483	1					
ANR	7555133	Identifier	name		7554483	1					
ANR	7555134	ElseStatement	else		7554483	0					
ANR	7555135	CompoundStatement		87:23:3238:3238	7554483	0					
ANR	7555136	ExpressionStatement	my_optarg = argv [ my_optind ] + ++ charind	235:20:8344:8383	7554483	0	True				
ANR	7555137	AssignmentExpression	my_optarg = argv [ my_optind ] + ++ charind		7554483	0		=			
ANR	7555138	Identifier	my_optarg		7554483	0					
ANR	7555139	AdditiveExpression	argv [ my_optind ] + ++ charind		7554483	1		+			
ANR	7555140	ArrayIndexing	argv [ my_optind ]		7554483	0					
ANR	7555141	Identifier	argv		7554483	0					
ANR	7555142	Identifier	my_optind		7554483	1					
ANR	7555143	UnaryExpression	++ charind		7554483	1					
ANR	7555144	IncDec	++		7554483	0					
ANR	7555145	Identifier	charind		7554483	1					
ANR	7555146	ExpressionStatement	charind = 0	236:20:8405:8416	7554483	1	True				
ANR	7555147	AssignmentExpression	charind = 0		7554483	0		=			
ANR	7555148	Identifier	charind		7554483	0					
ANR	7555149	PrimaryExpression	0		7554483	1					
ANR	7555150	ElseStatement	else		7554483	0					
ANR	7555151	IfStatement	if ( longopts [ found ] . has_arg == 1 )		7554483	0					
ANR	7555152	Condition	longopts [ found ] . has_arg == 1	238:22:8458:8485	7554483	0	True				
ANR	7555153	EqualityExpression	longopts [ found ] . has_arg == 1		7554483	0		==			
ANR	7555154	MemberAccess	longopts [ found ] . has_arg		7554483	0					
ANR	7555155	ArrayIndexing	longopts [ found ]		7554483	0					
ANR	7555156	Identifier	longopts		7554483	0					
ANR	7555157	Identifier	found		7554483	1					
ANR	7555158	Identifier	has_arg		7554483	1					
ANR	7555159	PrimaryExpression	1		7554483	1					
ANR	7555160	CompoundStatement		91:52:3404:3404	7554483	1					
ANR	7555161	IfStatement	if ( ++ my_optind >= argc )		7554483	0					
ANR	7555162	Condition	++ my_optind >= argc	239:19:8509:8527	7554483	0	True				
ANR	7555163	RelationalExpression	++ my_optind >= argc		7554483	0		>=			
ANR	7555164	UnaryExpression	++ my_optind		7554483	0					
ANR	7555165	IncDec	++		7554483	0					
ANR	7555166	Identifier	my_optind		7554483	1					
ANR	7555167	Identifier	argc		7554483	1					
ANR	7555168	CompoundStatement		92:40:3446:3446	7554483	1					
ANR	7555169	ExpressionStatement	opt = ( colon_mode == ':' ) ? ':' : '?'	240:20:8552:8589	7554483	0	True				
ANR	7555170	AssignmentExpression	opt = ( colon_mode == ':' ) ? ':' : '?'		7554483	0		=			
ANR	7555171	Identifier	opt		7554483	0					
ANR	7555172	ConditionalExpression	( colon_mode == ':' ) ? ':' : '?'		7554483	1					
ANR	7555173	Condition	colon_mode == ':'		7554483	0					
ANR	7555174	EqualityExpression	colon_mode == ':'		7554483	0		==			
ANR	7555175	Identifier	colon_mode		7554483	0					
ANR	7555176	PrimaryExpression	':'		7554483	1					
ANR	7555177	PrimaryExpression	':'		7554483	1					
ANR	7555178	PrimaryExpression	'?'		7554483	2					
ANR	7555179	IfStatement	if ( my_opterr )		7554483	1					
ANR	7555180	Condition	my_opterr	241:23:8614:8622	7554483	0	True				
ANR	7555181	Identifier	my_opterr		7554483	0					
ANR	7555182	ExpressionStatement	"fprintf ( stderr , ""%s: option `--%s' requires an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"	241:34:8625:8763	7554483	1	True				
ANR	7555183	CallExpression	"fprintf ( stderr , ""%s: option `--%s' requires an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"		7554483	0					
ANR	7555184	Callee	fprintf		7554483	0					
ANR	7555185	Identifier	fprintf		7554483	0					
ANR	7555186	ArgumentList	stderr		7554483	1					
ANR	7555187	Argument	stderr		7554483	0					
ANR	7555188	Identifier	stderr		7554483	0					
ANR	7555189	Argument	"""%s: option `--%s' requires an argument\\n"""		7554483	1					
ANR	7555190	PrimaryExpression	"""%s: option `--%s' requires an argument\\n"""		7554483	0					
ANR	7555191	Argument	argv [ 0 ]		7554483	2					
ANR	7555192	ArrayIndexing	argv [ 0 ]		7554483	0					
ANR	7555193	Identifier	argv		7554483	0					
ANR	7555194	PrimaryExpression	0		7554483	1					
ANR	7555195	Argument	longopts [ found ] . name		7554483	3					
ANR	7555196	MemberAccess	longopts [ found ] . name		7554483	0					
ANR	7555197	ArrayIndexing	longopts [ found ]		7554483	0					
ANR	7555198	Identifier	longopts		7554483	0					
ANR	7555199	Identifier	found		7554483	1					
ANR	7555200	Identifier	name		7554483	1					
ANR	7555201	ElseStatement	else		7554483	0					
ANR	7555202	ExpressionStatement	my_optarg = argv [ my_optind ]	244:23:8788:8815	7554483	0	True				
ANR	7555203	AssignmentExpression	my_optarg = argv [ my_optind ]		7554483	0		=			
ANR	7555204	Identifier	my_optarg		7554483	0					
ANR	7555205	ArrayIndexing	argv [ my_optind ]		7554483	1					
ANR	7555206	Identifier	argv		7554483	0					
ANR	7555207	Identifier	my_optind		7554483	1					
ANR	7555208	IfStatement	if ( ! opt )		7554483	2					
ANR	7555209	Condition	! opt	246:15:8846:8849	7554483	0	True				
ANR	7555210	UnaryOperationExpression	! opt		7554483	0					
ANR	7555211	UnaryOperator	!		7554483	0					
ANR	7555212	Identifier	opt		7554483	1					
ANR	7555213	CompoundStatement		99:21:3768:3768	7554483	1					
ANR	7555214	IfStatement	if ( longind )		7554483	0					
ANR	7555215	Condition	longind	247:20:8874:8880	7554483	0	True				
ANR	7555216	Identifier	longind		7554483	0					
ANR	7555217	ExpressionStatement	* longind = found	247:29:8883:8899	7554483	1	True				
ANR	7555218	AssignmentExpression	* longind = found		7554483	0		=			
ANR	7555219	UnaryOperationExpression	* longind		7554483	0					
ANR	7555220	UnaryOperator	*		7554483	0					
ANR	7555221	Identifier	longind		7554483	1					
ANR	7555222	Identifier	found		7554483	1					
ANR	7555223	IfStatement	if ( ! longopts [ found ] . flag )		7554483	1					
ANR	7555224	Condition	! longopts [ found ] . flag	248:19:8920:8940	7554483	0	True				
ANR	7555225	UnaryOperationExpression	! longopts [ found ] . flag		7554483	0					
ANR	7555226	UnaryOperator	!		7554483	0					
ANR	7555227	MemberAccess	longopts [ found ] . flag		7554483	1					
ANR	7555228	ArrayIndexing	longopts [ found ]		7554483	0					
ANR	7555229	Identifier	longopts		7554483	0					
ANR	7555230	Identifier	found		7554483	1					
ANR	7555231	Identifier	flag		7554483	1					
ANR	7555232	ExpressionStatement	opt = longopts [ found ] . val	248:42:8943:8968	7554483	1	True				
ANR	7555233	AssignmentExpression	opt = longopts [ found ] . val		7554483	0		=			
ANR	7555234	Identifier	opt		7554483	0					
ANR	7555235	MemberAccess	longopts [ found ] . val		7554483	1					
ANR	7555236	ArrayIndexing	longopts [ found ]		7554483	0					
ANR	7555237	Identifier	longopts		7554483	0					
ANR	7555238	Identifier	found		7554483	1					
ANR	7555239	Identifier	val		7554483	1					
ANR	7555240	ElseStatement	else		7554483	0					
ANR	7555241	ExpressionStatement	* ( longopts [ found ] . flag ) = longopts [ found ] . val	249:21:8991:9036	7554483	0	True				
ANR	7555242	AssignmentExpression	* ( longopts [ found ] . flag ) = longopts [ found ] . val		7554483	0		=			
ANR	7555243	UnaryOperationExpression	* ( longopts [ found ] . flag )		7554483	0					
ANR	7555244	UnaryOperator	*		7554483	0					
ANR	7555245	MemberAccess	longopts [ found ] . flag		7554483	1					
ANR	7555246	ArrayIndexing	longopts [ found ]		7554483	0					
ANR	7555247	Identifier	longopts		7554483	0					
ANR	7555248	Identifier	found		7554483	1					
ANR	7555249	Identifier	flag		7554483	1					
ANR	7555250	MemberAccess	longopts [ found ] . val		7554483	1					
ANR	7555251	ArrayIndexing	longopts [ found ]		7554483	0					
ANR	7555252	Identifier	longopts		7554483	0					
ANR	7555253	Identifier	found		7554483	1					
ANR	7555254	Identifier	val		7554483	1					
ANR	7555255	ExpressionStatement	my_optind ++	251:12:9064:9075	7554483	3	True				
ANR	7555256	PostIncDecOperationExpression	my_optind ++		7554483	0					
ANR	7555257	Identifier	my_optind		7554483	0					
ANR	7555258	IncDec	++		7554483	1					
ANR	7555259	ElseStatement	else		7554483	0					
ANR	7555260	IfStatement	if ( ! hits )		7554483	0					
ANR	7555261	Condition	! hits	252:18:9095:9099	7554483	0	True				
ANR	7555262	UnaryOperationExpression	! hits		7554483	0					
ANR	7555263	UnaryOperator	!		7554483	0					
ANR	7555264	Identifier	hits		7554483	1					
ANR	7555265	CompoundStatement		105:25:4018:4018	7554483	1					
ANR	7555266	IfStatement	if ( offset == 1 )		7554483	0					
ANR	7555267	Condition	offset == 1	253:15:9119:9129	7554483	0	True				
ANR	7555268	EqualityExpression	offset == 1		7554483	0		==			
ANR	7555269	Identifier	offset		7554483	0					
ANR	7555270	PrimaryExpression	1		7554483	1					
ANR	7555271	ExpressionStatement	"opt = my_getopt ( argc , argv , shortopts )"	253:28:9132:9170	7554483	1	True				
ANR	7555272	AssignmentExpression	"opt = my_getopt ( argc , argv , shortopts )"		7554483	0		=			
ANR	7555273	Identifier	opt		7554483	0					
ANR	7555274	CallExpression	"my_getopt ( argc , argv , shortopts )"		7554483	1					
ANR	7555275	Callee	my_getopt		7554483	0					
ANR	7555276	Identifier	my_getopt		7554483	0					
ANR	7555277	ArgumentList	argc		7554483	1					
ANR	7555278	Argument	argc		7554483	0					
ANR	7555279	Identifier	argc		7554483	0					
ANR	7555280	Argument	argv		7554483	1					
ANR	7555281	Identifier	argv		7554483	0					
ANR	7555282	Argument	shortopts		7554483	2					
ANR	7555283	Identifier	shortopts		7554483	0					
ANR	7555284	ElseStatement	else		7554483	0					
ANR	7555285	CompoundStatement		107:17:4105:4105	7554483	0					
ANR	7555286	ExpressionStatement	opt = '?'	255:16:9207:9216	7554483	0	True				
ANR	7555287	AssignmentExpression	opt = '?'		7554483	0		=			
ANR	7555288	Identifier	opt		7554483	0					
ANR	7555289	PrimaryExpression	'?'		7554483	1					
ANR	7555290	IfStatement	if ( my_opterr )		7554483	1					
ANR	7555291	Condition	my_opterr	256:19:9237:9245	7554483	0	True				
ANR	7555292	Identifier	my_opterr		7554483	0					
ANR	7555293	ExpressionStatement	"fprintf ( stderr , ""%s: unrecognized option `%s'\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"	256:30:9248:9365	7554483	1	True				
ANR	7555294	CallExpression	"fprintf ( stderr , ""%s: unrecognized option `%s'\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"		7554483	0					
ANR	7555295	Callee	fprintf		7554483	0					
ANR	7555296	Identifier	fprintf		7554483	0					
ANR	7555297	ArgumentList	stderr		7554483	1					
ANR	7555298	Argument	stderr		7554483	0					
ANR	7555299	Identifier	stderr		7554483	0					
ANR	7555300	Argument	"""%s: unrecognized option `%s'\\n"""		7554483	1					
ANR	7555301	PrimaryExpression	"""%s: unrecognized option `%s'\\n"""		7554483	0					
ANR	7555302	Argument	argv [ 0 ]		7554483	2					
ANR	7555303	ArrayIndexing	argv [ 0 ]		7554483	0					
ANR	7555304	Identifier	argv		7554483	0					
ANR	7555305	PrimaryExpression	0		7554483	1					
ANR	7555306	Argument	argv [ my_optind ++ ]		7554483	3					
ANR	7555307	ArrayIndexing	argv [ my_optind ++ ]		7554483	0					
ANR	7555308	Identifier	argv		7554483	0					
ANR	7555309	PostIncDecOperationExpression	my_optind ++		7554483	1					
ANR	7555310	Identifier	my_optind		7554483	0					
ANR	7555311	IncDec	++		7554483	1					
ANR	7555312	ElseStatement	else		7554483	0					
ANR	7555313	CompoundStatement		113:15:4312:4312	7554483	0					
ANR	7555314	ExpressionStatement	opt = '?'	261:12:9410:9419	7554483	0	True				
ANR	7555315	AssignmentExpression	opt = '?'		7554483	0		=			
ANR	7555316	Identifier	opt		7554483	0					
ANR	7555317	PrimaryExpression	'?'		7554483	1					
ANR	7555318	IfStatement	if ( my_opterr )		7554483	1					
ANR	7555319	Condition	my_opterr	262:15:9436:9444	7554483	0	True				
ANR	7555320	Identifier	my_opterr		7554483	0					
ANR	7555321	ExpressionStatement	"fprintf ( stderr , ""%s: option `%s' is ambiguous\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"	262:26:9447:9556	7554483	1	True				
ANR	7555322	CallExpression	"fprintf ( stderr , ""%s: option `%s' is ambiguous\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"		7554483	0					
ANR	7555323	Callee	fprintf		7554483	0					
ANR	7555324	Identifier	fprintf		7554483	0					
ANR	7555325	ArgumentList	stderr		7554483	1					
ANR	7555326	Argument	stderr		7554483	0					
ANR	7555327	Identifier	stderr		7554483	0					
ANR	7555328	Argument	"""%s: option `%s' is ambiguous\\n"""		7554483	1					
ANR	7555329	PrimaryExpression	"""%s: option `%s' is ambiguous\\n"""		7554483	0					
ANR	7555330	Argument	argv [ 0 ]		7554483	2					
ANR	7555331	ArrayIndexing	argv [ 0 ]		7554483	0					
ANR	7555332	Identifier	argv		7554483	0					
ANR	7555333	PrimaryExpression	0		7554483	1					
ANR	7555334	Argument	argv [ my_optind ++ ]		7554483	3					
ANR	7555335	ArrayIndexing	argv [ my_optind ++ ]		7554483	0					
ANR	7555336	Identifier	argv		7554483	0					
ANR	7555337	PostIncDecOperationExpression	my_optind ++		7554483	1					
ANR	7555338	Identifier	my_optind		7554483	0					
ANR	7555339	IncDec	++		7554483	1					
ANR	7555340	IfStatement	if ( my_optind > argc )		7554483	5					
ANR	7555341	Condition	my_optind > argc	267:8:9582:9597	7554483	0	True				
ANR	7555342	RelationalExpression	my_optind > argc		7554483	0		>			
ANR	7555343	Identifier	my_optind		7554483	0					
ANR	7555344	Identifier	argc		7554483	1					
ANR	7555345	ExpressionStatement	my_optind = argc	267:26:9600:9616	7554483	1	True				
ANR	7555346	AssignmentExpression	my_optind = argc		7554483	0		=			
ANR	7555347	Identifier	my_optind		7554483	0					
ANR	7555348	Identifier	argc		7554483	1					
ANR	7555349	ReturnStatement	return opt ;	268:4:9622:9632	7554483	6	True				
ANR	7555350	Identifier	opt		7554483	0					
ANR	7555351	ReturnType	int		7554483	1					
ANR	7555352	Identifier	_my_getopt_internal		7554483	2					
ANR	7555353	ParameterList	"int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind , int long_only"		7554483	3					
ANR	7555354	Parameter	int argc	145:24:4927:4934	7554483	0	True				
ANR	7555355	ParameterType	int		7554483	0					
ANR	7555356	Identifier	argc		7554483	1					
ANR	7555357	Parameter	char * argv [ ]	145:34:4937:4949	7554483	1	True				
ANR	7555358	ParameterType	char * [ ]		7554483	0					
ANR	7555359	Identifier	argv		7554483	1					
ANR	7555360	Parameter	const char * shortopts	145:49:4952:4972	7554483	2	True				
ANR	7555361	ParameterType	const char *		7554483	0					
ANR	7555362	Identifier	shortopts		7554483	1					
ANR	7555363	Parameter	const struct option * longopts	146:24:4999:5027	7554483	3	True				
ANR	7555364	ParameterType	const struct option *		7554483	0					
ANR	7555365	Identifier	longopts		7554483	1					
ANR	7555366	Parameter	int * longind	146:55:5030:5041	7554483	4	True				
ANR	7555367	ParameterType	int *		7554483	0					
ANR	7555368	Identifier	longind		7554483	1					
ANR	7555369	Parameter	int long_only	147:24:5068:5080	7554483	5	True				
ANR	7555370	ParameterType	int		7554483	0					
ANR	7555371	Identifier	long_only		7554483	1					
ANR	7555372	CFGEntryNode	ENTRY		7554483		True				
ANR	7555373	CFGExitNode	EXIT		7554483		True				
ANR	7555374	Symbol	_my_getopt_internal		7554483						
ANR	7555375	Symbol	* * found		7554483						
ANR	7555376	Symbol	* argv		7554483						
ANR	7555377	Symbol	* ( longopts [ found ] . flag )		7554483						
ANR	7555378	Symbol	colon_mode		7554483						
ANR	7555379	Symbol	my_opterr		7554483						
ANR	7555380	Symbol	mode		7554483						
ANR	7555381	Symbol	longopts [ found ] . has_arg		7554483						
ANR	7555382	Symbol	strlen		7554483						
ANR	7555383	Symbol	strncmp		7554483						
ANR	7555384	Symbol	tmp		7554483						
ANR	7555385	Symbol	* shortoff		7554483						
ANR	7555386	Symbol	* * argv		7554483						
ANR	7555387	Symbol	my_getopt		7554483						
ANR	7555388	Symbol	* * i		7554483						
ANR	7555389	Symbol	offset		7554483						
ANR	7555390	Symbol	longind		7554483						
ANR	7555391	Symbol	longopts [ ind ] . name		7554483						
ANR	7555392	Symbol	stderr		7554483						
ANR	7555393	Symbol	long_only		7554483						
ANR	7555394	Symbol	opt		7554483						
ANR	7555395	Symbol	* * longopts		7554483						
ANR	7555396	Symbol	* my_optind		7554483						
ANR	7555397	Symbol	* ind		7554483						
ANR	7555398	Symbol	shortopts		7554483						
ANR	7555399	Symbol	* charind		7554483						
ANR	7555400	Symbol	* found		7554483						
ANR	7555401	Symbol	longopts [ found ] . val		7554483						
ANR	7555402	Symbol	charind		7554483						
ANR	7555403	Symbol	* longind		7554483						
ANR	7555404	Symbol	argv		7554483						
ANR	7555405	Symbol	longopts [ found ] . name		7554483						
ANR	7555406	Symbol	found		7554483						
ANR	7555407	Symbol	* longopts		7554483						
ANR	7555408	Symbol	ind		7554483						
ANR	7555409	Symbol	getenv		7554483						
ANR	7555410	Symbol	my_optopt		7554483						
ANR	7555411	Symbol	argc		7554483						
ANR	7555412	Symbol	* * my_optind		7554483						
ANR	7555413	Symbol	c		7554483						
ANR	7555414	Symbol	shortoff		7554483						
ANR	7555415	Symbol	i		7554483						
ANR	7555416	Symbol	j		7554483						
ANR	7555417	Symbol	k		7554483						
ANR	7555418	Symbol	hits		7554483						
ANR	7555419	Symbol	* i		7554483						
ANR	7555420	Symbol	my_optind		7554483						
ANR	7555421	Symbol	* k		7554483						
ANR	7555422	Symbol	* shortopts		7554483						
ANR	7555423	Symbol	* longopts [ found ] . flag		7554483						
ANR	7555424	Symbol	longopts		7554483						
ANR	7555425	Symbol	longopts [ found ] . flag		7554483						
ANR	7555426	Symbol	my_optarg		7554483						
ANR	7555427	Function	my_getopt_long	271:0:9637:9847							
ANR	7555428	FunctionDef	"my_getopt_long (int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind)"		7555427	0					
ANR	7555429	CompoundStatement		273:0:9768:9847	7555427	0					
ANR	7555430	ReturnStatement	"return _my_getopt_internal ( argc , argv , shortopts , longopts , longind , 0 ) ;"	274:4:9774:9845	7555427	0	True				
ANR	7555431	CallExpression	"_my_getopt_internal ( argc , argv , shortopts , longopts , longind , 0 )"		7555427	0					
ANR	7555432	Callee	_my_getopt_internal		7555427	0					
ANR	7555433	Identifier	_my_getopt_internal		7555427	0					
ANR	7555434	ArgumentList	argc		7555427	1					
ANR	7555435	Argument	argc		7555427	0					
ANR	7555436	Identifier	argc		7555427	0					
ANR	7555437	Argument	argv		7555427	1					
ANR	7555438	Identifier	argv		7555427	0					
ANR	7555439	Argument	shortopts		7555427	2					
ANR	7555440	Identifier	shortopts		7555427	0					
ANR	7555441	Argument	longopts		7555427	3					
ANR	7555442	Identifier	longopts		7555427	0					
ANR	7555443	Argument	longind		7555427	4					
ANR	7555444	Identifier	longind		7555427	0					
ANR	7555445	Argument	0		7555427	5					
ANR	7555446	PrimaryExpression	0		7555427	0					
ANR	7555447	ReturnType	int		7555427	1					
ANR	7555448	Identifier	my_getopt_long		7555427	2					
ANR	7555449	ParameterList	"int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind"		7555427	3					
ANR	7555450	Parameter	int argc	271:19:9656:9663	7555427	0	True				
ANR	7555451	ParameterType	int		7555427	0					
ANR	7555452	Identifier	argc		7555427	1					
ANR	7555453	Parameter	char * argv [ ]	271:29:9666:9678	7555427	1	True				
ANR	7555454	ParameterType	char * [ ]		7555427	0					
ANR	7555455	Identifier	argv		7555427	1					
ANR	7555456	Parameter	const char * shortopts	271:44:9681:9701	7555427	2	True				
ANR	7555457	ParameterType	const char *		7555427	0					
ANR	7555458	Identifier	shortopts		7555427	1					
ANR	7555459	Parameter	const struct option * longopts	272:19:9723:9751	7555427	3	True				
ANR	7555460	ParameterType	const struct option *		7555427	0					
ANR	7555461	Identifier	longopts		7555427	1					
ANR	7555462	Parameter	int * longind	272:50:9754:9765	7555427	4	True				
ANR	7555463	ParameterType	int *		7555427	0					
ANR	7555464	Identifier	longind		7555427	1					
ANR	7555465	CFGEntryNode	ENTRY		7555427		True				
ANR	7555466	CFGExitNode	EXIT		7555427		True				
ANR	7555467	Symbol	argc		7555427						
ANR	7555468	Symbol	_my_getopt_internal		7555427						
ANR	7555469	Symbol	shortopts		7555427						
ANR	7555470	Symbol	longind		7555427						
ANR	7555471	Symbol	longopts		7555427						
ANR	7555472	Symbol	argv		7555427						
ANR	7555473	Function	my_getopt_long_only	277:0:9850:10070							
ANR	7555474	FunctionDef	"my_getopt_long_only (int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind)"		7555473	0					
ANR	7555475	CompoundStatement		279:0:9991:10070	7555473	0					
ANR	7555476	ReturnStatement	"return _my_getopt_internal ( argc , argv , shortopts , longopts , longind , 1 ) ;"	280:4:9997:10068	7555473	0	True				
ANR	7555477	CallExpression	"_my_getopt_internal ( argc , argv , shortopts , longopts , longind , 1 )"		7555473	0					
ANR	7555478	Callee	_my_getopt_internal		7555473	0					
ANR	7555479	Identifier	_my_getopt_internal		7555473	0					
ANR	7555480	ArgumentList	argc		7555473	1					
ANR	7555481	Argument	argc		7555473	0					
ANR	7555482	Identifier	argc		7555473	0					
ANR	7555483	Argument	argv		7555473	1					
ANR	7555484	Identifier	argv		7555473	0					
ANR	7555485	Argument	shortopts		7555473	2					
ANR	7555486	Identifier	shortopts		7555473	0					
ANR	7555487	Argument	longopts		7555473	3					
ANR	7555488	Identifier	longopts		7555473	0					
ANR	7555489	Argument	longind		7555473	4					
ANR	7555490	Identifier	longind		7555473	0					
ANR	7555491	Argument	1		7555473	5					
ANR	7555492	PrimaryExpression	1		7555473	0					
ANR	7555493	ReturnType	int		7555473	1					
ANR	7555494	Identifier	my_getopt_long_only		7555473	2					
ANR	7555495	ParameterList	"int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind"		7555473	3					
ANR	7555496	Parameter	int argc	277:24:9874:9881	7555473	0	True				
ANR	7555497	ParameterType	int		7555473	0					
ANR	7555498	Identifier	argc		7555473	1					
ANR	7555499	Parameter	char * argv [ ]	277:34:9884:9896	7555473	1	True				
ANR	7555500	ParameterType	char * [ ]		7555473	0					
ANR	7555501	Identifier	argv		7555473	1					
ANR	7555502	Parameter	const char * shortopts	277:49:9899:9919	7555473	2	True				
ANR	7555503	ParameterType	const char *		7555473	0					
ANR	7555504	Identifier	shortopts		7555473	1					
ANR	7555505	Parameter	const struct option * longopts	278:24:9946:9974	7555473	3	True				
ANR	7555506	ParameterType	const struct option *		7555473	0					
ANR	7555507	Identifier	longopts		7555473	1					
ANR	7555508	Parameter	int * longind	278:55:9977:9988	7555473	4	True				
ANR	7555509	ParameterType	int *		7555473	0					
ANR	7555510	Identifier	longind		7555473	1					
ANR	7555511	CFGEntryNode	ENTRY		7555473		True				
ANR	7555512	CFGExitNode	EXIT		7555473		True				
ANR	7555513	Symbol	argc		7555473						
ANR	7555514	Symbol	_my_getopt_internal		7555473						
ANR	7555515	Symbol	shortopts		7555473						
ANR	7555516	Symbol	longind		7555473						
ANR	7555517	Symbol	longopts		7555473						
ANR	7555518	Symbol	argv		7555473						
