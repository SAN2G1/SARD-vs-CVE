command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1405176	File	data/converged/CVE-2018-16863_ghostpdl/base_slzwd.c								
ANR	1405177	ClassDef	lzw_decode_s	37:0:1264:1385							
ANR	1405178	DeclStmt									
ANR	1405179	Decl							byte	byte	datum
ANR	1405180	DeclStmt									
ANR	1405181	Decl							byte	byte	len
ANR	1405182	DeclStmt									
ANR	1405183	Decl							ushort	ushort	prefix
ANR	1405184	Function	s_LZWD_reset	51:0:1762:2330							
ANR	1405185	FunctionDef	s_LZWD_reset (stream_state * st)		1405184	0					
ANR	1405186	CompoundStatement		53:0:1805:2330	1405184	0					
ANR	1405187	Statement	stream_LZW_state	54:4:1811:1826	1405184	0	True				
ANR	1405188	Statement	*	54:21:1828:1828	1405184	1	True				
ANR	1405189	Statement	const	54:22:1829:1833	1405184	2	True				
ANR	1405190	ExpressionStatement	ss = ( stream_LZW_state * ) st	54:28:1835:1863	1405184	3	True				
ANR	1405191	AssignmentExpression	ss = ( stream_LZW_state * ) st		1405184	0		=			
ANR	1405192	Identifier	ss		1405184	0					
ANR	1405193	CastExpression	( stream_LZW_state * ) st		1405184	1					
ANR	1405194	CastTarget	stream_LZW_state *		1405184	0					
ANR	1405195	Identifier	st		1405184	1					
ANR	1405196	Statement	register	55:4:1869:1876	1405184	4	True				
ANR	1405197	IdentifierDeclStatement	lzw_decode * dc = ss -> table . decode ;	55:13:1878:1911	1405184	5	True				
ANR	1405198	IdentifierDecl	* dc = ss -> table . decode		1405184	0					
ANR	1405199	IdentifierDeclType	lzw_decode *		1405184	0					
ANR	1405200	Identifier	dc		1405184	1					
ANR	1405201	AssignmentExpression	* dc = ss -> table . decode		1405184	2		=			
ANR	1405202	Identifier	dc		1405184	0					
ANR	1405203	MemberAccess	ss -> table . decode		1405184	1					
ANR	1405204	PtrMemberAccess	ss -> table		1405184	0					
ANR	1405205	Identifier	ss		1405184	0					
ANR	1405206	Identifier	table		1405184	1					
ANR	1405207	Identifier	decode		1405184	1					
ANR	1405208	Statement	register	56:4:1917:1924	1405184	6	True				
ANR	1405209	IdentifierDeclStatement	int i ;	56:13:1926:1931	1405184	7	True				
ANR	1405210	IdentifierDecl	i		1405184	0					
ANR	1405211	IdentifierDeclType	int		1405184	0					
ANR	1405212	Identifier	i		1405184	1					
ANR	1405213	IdentifierDeclStatement	uint code_escape = 1 << ss -> InitialCodeLength ;	57:4:1937:1982	1405184	8	True				
ANR	1405214	IdentifierDecl	code_escape = 1 << ss -> InitialCodeLength		1405184	0					
ANR	1405215	IdentifierDeclType	uint		1405184	0					
ANR	1405216	Identifier	code_escape		1405184	1					
ANR	1405217	AssignmentExpression	code_escape = 1 << ss -> InitialCodeLength		1405184	2		=			
ANR	1405218	Identifier	code_escape		1405184	0					
ANR	1405219	ShiftExpression	1 << ss -> InitialCodeLength		1405184	1		<<			
ANR	1405220	PrimaryExpression	1		1405184	0					
ANR	1405221	PtrMemberAccess	ss -> InitialCodeLength		1405184	1					
ANR	1405222	Identifier	ss		1405184	0					
ANR	1405223	Identifier	InitialCodeLength		1405184	1					
ANR	1405224	ExpressionStatement	ss -> bits_left = 0	59:4:1989:2006	1405184	9	True				
ANR	1405225	AssignmentExpression	ss -> bits_left = 0		1405184	0		=			
ANR	1405226	PtrMemberAccess	ss -> bits_left		1405184	0					
ANR	1405227	Identifier	ss		1405184	0					
ANR	1405228	Identifier	bits_left		1405184	1					
ANR	1405229	PrimaryExpression	0		1405184	1					
ANR	1405230	ExpressionStatement	ss -> bytes_left = 0	60:4:2012:2030	1405184	10	True				
ANR	1405231	AssignmentExpression	ss -> bytes_left = 0		1405184	0		=			
ANR	1405232	PtrMemberAccess	ss -> bytes_left		1405184	0					
ANR	1405233	Identifier	ss		1405184	0					
ANR	1405234	Identifier	bytes_left		1405184	1					
ANR	1405235	PrimaryExpression	0		1405184	1					
ANR	1405236	ExpressionStatement	ss -> next_code = code_0	61:4:2036:2058	1405184	11	True				
ANR	1405237	AssignmentExpression	ss -> next_code = code_0		1405184	0		=			
ANR	1405238	PtrMemberAccess	ss -> next_code		1405184	0					
ANR	1405239	Identifier	ss		1405184	0					
ANR	1405240	Identifier	next_code		1405184	1					
ANR	1405241	Identifier	code_0		1405184	1					
ANR	1405242	ExpressionStatement	ss -> code_size = ss -> InitialCodeLength + 1	62:4:2064:2105	1405184	12	True				
ANR	1405243	AssignmentExpression	ss -> code_size = ss -> InitialCodeLength + 1		1405184	0		=			
ANR	1405244	PtrMemberAccess	ss -> code_size		1405184	0					
ANR	1405245	Identifier	ss		1405184	0					
ANR	1405246	Identifier	code_size		1405184	1					
ANR	1405247	AdditiveExpression	ss -> InitialCodeLength + 1		1405184	1		+			
ANR	1405248	PtrMemberAccess	ss -> InitialCodeLength		1405184	0					
ANR	1405249	Identifier	ss		1405184	0					
ANR	1405250	Identifier	InitialCodeLength		1405184	1					
ANR	1405251	PrimaryExpression	1		1405184	1					
ANR	1405252	ExpressionStatement	ss -> prev_code = - 1	63:4:2111:2129	1405184	13	True				
ANR	1405253	AssignmentExpression	ss -> prev_code = - 1		1405184	0		=			
ANR	1405254	PtrMemberAccess	ss -> prev_code		1405184	0					
ANR	1405255	Identifier	ss		1405184	0					
ANR	1405256	Identifier	prev_code		1405184	1					
ANR	1405257	UnaryOperationExpression	- 1		1405184	1					
ANR	1405258	UnaryOperator	-		1405184	0					
ANR	1405259	PrimaryExpression	1		1405184	1					
ANR	1405260	ExpressionStatement	ss -> copy_code = - 1	64:4:2135:2153	1405184	14	True				
ANR	1405261	AssignmentExpression	ss -> copy_code = - 1		1405184	0		=			
ANR	1405262	PtrMemberAccess	ss -> copy_code		1405184	0					
ANR	1405263	Identifier	ss		1405184	0					
ANR	1405264	Identifier	copy_code		1405184	1					
ANR	1405265	UnaryOperationExpression	- 1		1405184	1					
ANR	1405266	UnaryOperator	-		1405184	0					
ANR	1405267	PrimaryExpression	1		1405184	1					
ANR	1405268	ExpressionStatement	dc [ code_reset ] . len = 255	65:4:2159:2183	1405184	15	True				
ANR	1405269	AssignmentExpression	dc [ code_reset ] . len = 255		1405184	0		=			
ANR	1405270	MemberAccess	dc [ code_reset ] . len		1405184	0					
ANR	1405271	ArrayIndexing	dc [ code_reset ]		1405184	0					
ANR	1405272	Identifier	dc		1405184	0					
ANR	1405273	Identifier	code_reset		1405184	1					
ANR	1405274	Identifier	len		1405184	1					
ANR	1405275	PrimaryExpression	255		1405184	1					
ANR	1405276	ExpressionStatement	dc [ code_eod ] . len = 255	66:4:2189:2211	1405184	16	True				
ANR	1405277	AssignmentExpression	dc [ code_eod ] . len = 255		1405184	0		=			
ANR	1405278	MemberAccess	dc [ code_eod ] . len		1405184	0					
ANR	1405279	ArrayIndexing	dc [ code_eod ]		1405184	0					
ANR	1405280	Identifier	dc		1405184	0					
ANR	1405281	Identifier	code_eod		1405184	1					
ANR	1405282	Identifier	len		1405184	1					
ANR	1405283	PrimaryExpression	255		1405184	1					
ANR	1405284	ForStatement	"for ( i = 0 ; i < code_escape ; i ++ , dc ++ )"		1405184	17					
ANR	1405285	ForInit	i = 0 ;	67:9:2222:2227	1405184	0	True				
ANR	1405286	AssignmentExpression	i = 0		1405184	0		=			
ANR	1405287	Identifier	i		1405184	0					
ANR	1405288	PrimaryExpression	0		1405184	1					
ANR	1405289	Condition	i < code_escape	67:16:2229:2243	1405184	1	True				
ANR	1405290	RelationalExpression	i < code_escape		1405184	0		<			
ANR	1405291	Identifier	i		1405184	0					
ANR	1405292	Identifier	code_escape		1405184	1					
ANR	1405293	Expression	"i ++ , dc ++"	67:33:2246:2254	1405184	2	True				
ANR	1405294	PostIncDecOperationExpression	i ++		1405184	0					
ANR	1405295	Identifier	i		1405184	0					
ANR	1405296	IncDec	++		1405184	1					
ANR	1405297	PostIncDecOperationExpression	dc ++		1405184	1					
ANR	1405298	Identifier	dc		1405184	0					
ANR	1405299	IncDec	++		1405184	1					
ANR	1405300	ExpressionStatement	"dc -> datum = i , dc -> len = 1 , dc -> prefix = code_eod"	68:8:2265:2314	1405184	3	True				
ANR	1405301	Expression	"dc -> datum = i , dc -> len = 1 , dc -> prefix = code_eod"		1405184	0					
ANR	1405302	AssignmentExpression	dc -> datum = i		1405184	0		=			
ANR	1405303	PtrMemberAccess	dc -> datum		1405184	0					
ANR	1405304	Identifier	dc		1405184	0					
ANR	1405305	Identifier	datum		1405184	1					
ANR	1405306	Identifier	i		1405184	1					
ANR	1405307	Expression	"dc -> len = 1 , dc -> prefix = code_eod"		1405184	1					
ANR	1405308	AssignmentExpression	dc -> len = 1		1405184	0		=			
ANR	1405309	PtrMemberAccess	dc -> len		1405184	0					
ANR	1405310	Identifier	dc		1405184	0					
ANR	1405311	Identifier	len		1405184	1					
ANR	1405312	PrimaryExpression	1		1405184	1					
ANR	1405313	AssignmentExpression	dc -> prefix = code_eod		1405184	1		=			
ANR	1405314	PtrMemberAccess	dc -> prefix		1405184	0					
ANR	1405315	Identifier	dc		1405184	0					
ANR	1405316	Identifier	prefix		1405184	1					
ANR	1405317	Identifier	code_eod		1405184	1					
ANR	1405318	ReturnStatement	return 0 ;	69:4:2320:2328	1405184	18	True				
ANR	1405319	PrimaryExpression	0		1405184	0					
ANR	1405320	ReturnType	static int		1405184	1					
ANR	1405321	Identifier	s_LZWD_reset		1405184	2					
ANR	1405322	ParameterList	stream_state * st		1405184	3					
ANR	1405323	Parameter	stream_state * st	52:13:1786:1802	1405184	0	True				
ANR	1405324	ParameterType	stream_state *		1405184	0					
ANR	1405325	Identifier	st		1405184	1					
ANR	1405326	CFGEntryNode	ENTRY		1405184		True				
ANR	1405327	CFGExitNode	EXIT		1405184		True				
ANR	1405328	Symbol	* ss		1405184						
ANR	1405329	Symbol	code_reset		1405184						
ANR	1405330	Symbol	ss -> table		1405184						
ANR	1405331	Symbol	ss -> code_size		1405184						
ANR	1405332	Symbol	* code_reset		1405184						
ANR	1405333	Symbol	ss -> bytes_left		1405184						
ANR	1405334	Symbol	ss -> bits_left		1405184						
ANR	1405335	Symbol	ss -> copy_code		1405184						
ANR	1405336	Symbol	ss -> table . decode		1405184						
ANR	1405337	Symbol	dc [ code_eod ] . len		1405184						
ANR	1405338	Symbol	ss		1405184						
ANR	1405339	Symbol	code_eod		1405184						
ANR	1405340	Symbol	st		1405184						
ANR	1405341	Symbol	code_0		1405184						
ANR	1405342	Symbol	ss -> prev_code		1405184						
ANR	1405343	Symbol	* dc		1405184						
ANR	1405344	Symbol	i		1405184						
ANR	1405345	Symbol	dc -> datum		1405184						
ANR	1405346	Symbol	ss -> next_code		1405184						
ANR	1405347	Symbol	dc -> prefix		1405184						
ANR	1405348	Symbol	code_escape		1405184						
ANR	1405349	Symbol	ss -> InitialCodeLength		1405184						
ANR	1405350	Symbol	dc [ code_reset ] . len		1405184						
ANR	1405351	Symbol	dc -> len		1405184						
ANR	1405352	Symbol	* code_eod		1405184						
ANR	1405353	Symbol	dc		1405184						
ANR	1405354	Function	s_LZWD_init	71:0:2332:2760							
ANR	1405355	FunctionDef	s_LZWD_init (stream_state * st)		1405354	0					
ANR	1405356	CompoundStatement		73:0:2374:2760	1405354	0					
ANR	1405357	Statement	stream_LZW_state	74:4:2380:2395	1405354	0	True				
ANR	1405358	Statement	*	74:21:2397:2397	1405354	1	True				
ANR	1405359	Statement	const	74:22:2398:2402	1405354	2	True				
ANR	1405360	ExpressionStatement	ss = ( stream_LZW_state * ) st	74:28:2404:2432	1405354	3	True				
ANR	1405361	AssignmentExpression	ss = ( stream_LZW_state * ) st		1405354	0		=			
ANR	1405362	Identifier	ss		1405354	0					
ANR	1405363	CastExpression	( stream_LZW_state * ) st		1405354	1					
ANR	1405364	CastTarget	stream_LZW_state *		1405354	0					
ANR	1405365	Identifier	st		1405354	1					
ANR	1405366	IdentifierDeclStatement	"lzw_decode * dc = gs_alloc_struct_array ( st -> memory , lzw_decode_max + 1 , lzw_decode , & st_lzw_decode_element , ""LZWDecode(init)"" ) ;"	75:4:2438:2619	1405354	4	True				
ANR	1405367	IdentifierDecl	"* dc = gs_alloc_struct_array ( st -> memory , lzw_decode_max + 1 , lzw_decode , & st_lzw_decode_element , ""LZWDecode(init)"" )"		1405354	0					
ANR	1405368	IdentifierDeclType	lzw_decode *		1405354	0					
ANR	1405369	Identifier	dc		1405354	1					
ANR	1405370	AssignmentExpression	"* dc = gs_alloc_struct_array ( st -> memory , lzw_decode_max + 1 , lzw_decode , & st_lzw_decode_element , ""LZWDecode(init)"" )"		1405354	2		=			
ANR	1405371	Identifier	dc		1405354	0					
ANR	1405372	CallExpression	"gs_alloc_struct_array ( st -> memory , lzw_decode_max + 1 , lzw_decode , & st_lzw_decode_element , ""LZWDecode(init)"" )"		1405354	1					
ANR	1405373	Callee	gs_alloc_struct_array		1405354	0					
ANR	1405374	Identifier	gs_alloc_struct_array		1405354	0					
ANR	1405375	ArgumentList	st -> memory		1405354	1					
ANR	1405376	Argument	st -> memory		1405354	0					
ANR	1405377	PtrMemberAccess	st -> memory		1405354	0					
ANR	1405378	Identifier	st		1405354	0					
ANR	1405379	Identifier	memory		1405354	1					
ANR	1405380	Argument	lzw_decode_max + 1		1405354	1					
ANR	1405381	AdditiveExpression	lzw_decode_max + 1		1405354	0		+			
ANR	1405382	Identifier	lzw_decode_max		1405354	0					
ANR	1405383	PrimaryExpression	1		1405354	1					
ANR	1405384	Argument	lzw_decode		1405354	2					
ANR	1405385	Identifier	lzw_decode		1405354	0					
ANR	1405386	Argument	& st_lzw_decode_element		1405354	3					
ANR	1405387	UnaryOperationExpression	& st_lzw_decode_element		1405354	0					
ANR	1405388	UnaryOperator	&		1405354	0					
ANR	1405389	Identifier	st_lzw_decode_element		1405354	1					
ANR	1405390	Argument	"""LZWDecode(init)"""		1405354	4					
ANR	1405391	PrimaryExpression	"""LZWDecode(init)"""		1405354	0					
ANR	1405392	IfStatement	if ( dc == 0 )		1405354	5					
ANR	1405393	Condition	dc == 0	80:8:2630:2636	1405354	0	True				
ANR	1405394	EqualityExpression	dc == 0		1405354	0		==			
ANR	1405395	Identifier	dc		1405354	0					
ANR	1405396	PrimaryExpression	0		1405354	1					
ANR	1405397	ReturnStatement	return ERRC ;	81:8:2647:2658	1405354	1	True				
ANR	1405398	Identifier	ERRC		1405354	0					
ANR	1405399	ExpressionStatement	ss -> table . decode = dc	83:4:2686:2707	1405354	6	True				
ANR	1405400	AssignmentExpression	ss -> table . decode = dc		1405354	0		=			
ANR	1405401	MemberAccess	ss -> table . decode		1405354	0					
ANR	1405402	PtrMemberAccess	ss -> table		1405354	0					
ANR	1405403	Identifier	ss		1405354	0					
ANR	1405404	Identifier	table		1405354	1					
ANR	1405405	Identifier	decode		1405354	1					
ANR	1405406	Identifier	dc		1405354	1					
ANR	1405407	ExpressionStatement	ss -> min_left = 1	84:4:2713:2729	1405354	7	True				
ANR	1405408	AssignmentExpression	ss -> min_left = 1		1405354	0		=			
ANR	1405409	PtrMemberAccess	ss -> min_left		1405354	0					
ANR	1405410	Identifier	ss		1405354	0					
ANR	1405411	Identifier	min_left		1405354	1					
ANR	1405412	PrimaryExpression	1		1405354	1					
ANR	1405413	ReturnStatement	return s_LZWD_reset ( st ) ;	85:4:2735:2758	1405354	8	True				
ANR	1405414	CallExpression	s_LZWD_reset ( st )		1405354	0					
ANR	1405415	Callee	s_LZWD_reset		1405354	0					
ANR	1405416	Identifier	s_LZWD_reset		1405354	0					
ANR	1405417	ArgumentList	st		1405354	1					
ANR	1405418	Argument	st		1405354	0					
ANR	1405419	Identifier	st		1405354	0					
ANR	1405420	ReturnType	static int		1405354	1					
ANR	1405421	Identifier	s_LZWD_init		1405354	2					
ANR	1405422	ParameterList	stream_state * st		1405354	3					
ANR	1405423	Parameter	stream_state * st	72:12:2355:2371	1405354	0	True				
ANR	1405424	ParameterType	stream_state *		1405354	0					
ANR	1405425	Identifier	st		1405354	1					
ANR	1405426	CFGEntryNode	ENTRY		1405354		True				
ANR	1405427	CFGExitNode	EXIT		1405354		True				
ANR	1405428	Symbol	ss		1405354						
ANR	1405429	Symbol	st		1405354						
ANR	1405430	Symbol	& st_lzw_decode_element		1405354						
ANR	1405431	Symbol	lzw_decode_max		1405354						
ANR	1405432	Symbol	* st		1405354						
ANR	1405433	Symbol	* ss		1405354						
ANR	1405434	Symbol	st -> memory		1405354						
ANR	1405435	Symbol	ss -> min_left		1405354						
ANR	1405436	Symbol	lzw_decode		1405354						
ANR	1405437	Symbol	ss -> table		1405354						
ANR	1405438	Symbol	ERRC		1405354						
ANR	1405439	Symbol	ss -> table . decode		1405354						
ANR	1405440	Symbol	dc		1405354						
ANR	1405441	Symbol	gs_alloc_struct_array		1405354						
ANR	1405442	Symbol	s_LZWD_reset		1405354						
ANR	1405443	Function	s_LZWD_process	89:0:2786:13676							
ANR	1405444	FunctionDef	"s_LZWD_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1405443	0					
ANR	1405445	CompoundStatement		92:0:2908:13676	1405443	0					
ANR	1405446	Statement	stream_LZW_state	93:4:2914:2929	1405443	0	True				
ANR	1405447	Statement	*	93:21:2931:2931	1405443	1	True				
ANR	1405448	Statement	const	93:22:2932:2936	1405443	2	True				
ANR	1405449	ExpressionStatement	ss = ( stream_LZW_state * ) st	93:28:2938:2966	1405443	3	True				
ANR	1405450	AssignmentExpression	ss = ( stream_LZW_state * ) st		1405443	0		=			
ANR	1405451	Identifier	ss		1405443	0					
ANR	1405452	CastExpression	( stream_LZW_state * ) st		1405443	1					
ANR	1405453	CastTarget	stream_LZW_state *		1405443	0					
ANR	1405454	Identifier	st		1405443	1					
ANR	1405455	Statement	register	94:4:2972:2979	1405443	4	True				
ANR	1405456	IdentifierDeclStatement	const byte * p = pr -> ptr ;	94:13:2981:3004	1405443	5	True				
ANR	1405457	IdentifierDecl	* p = pr -> ptr		1405443	0					
ANR	1405458	IdentifierDeclType	const byte *		1405443	0					
ANR	1405459	Identifier	p		1405443	1					
ANR	1405460	AssignmentExpression	* p = pr -> ptr		1405443	2		=			
ANR	1405461	Identifier	p		1405443	0					
ANR	1405462	PtrMemberAccess	pr -> ptr		1405443	1					
ANR	1405463	Identifier	pr		1405443	0					
ANR	1405464	Identifier	ptr		1405443	1					
ANR	1405465	Statement	register	95:4:3010:3017	1405443	6	True				
ANR	1405466	IdentifierDeclStatement	byte * q = pw -> ptr ;	95:13:3019:3036	1405443	7	True				
ANR	1405467	IdentifierDecl	* q = pw -> ptr		1405443	0					
ANR	1405468	IdentifierDeclType	byte *		1405443	0					
ANR	1405469	Identifier	q		1405443	1					
ANR	1405470	AssignmentExpression	* q = pw -> ptr		1405443	2		=			
ANR	1405471	Identifier	q		1405443	0					
ANR	1405472	PtrMemberAccess	pw -> ptr		1405443	1					
ANR	1405473	Identifier	pw		1405443	0					
ANR	1405474	Identifier	ptr		1405443	1					
ANR	1405475	IdentifierDeclStatement	byte * q0 = q ;	98:4:3056:3068	1405443	8	True				
ANR	1405476	IdentifierDecl	* q0 = q		1405443	0					
ANR	1405477	IdentifierDeclType	byte *		1405443	0					
ANR	1405478	Identifier	q0		1405443	1					
ANR	1405479	AssignmentExpression	* q0 = q		1405443	2		=			
ANR	1405480	Identifier	q		1405443	0					
ANR	1405481	Identifier	q		1405443	1					
ANR	1405482	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	101:4:3082:3112	1405443	9	True				
ANR	1405483	IdentifierDecl	* rlimit = pr -> limit		1405443	0					
ANR	1405484	IdentifierDeclType	const byte *		1405443	0					
ANR	1405485	Identifier	rlimit		1405443	1					
ANR	1405486	AssignmentExpression	* rlimit = pr -> limit		1405443	2		=			
ANR	1405487	Identifier	rlimit		1405443	0					
ANR	1405488	PtrMemberAccess	pr -> limit		1405443	1					
ANR	1405489	Identifier	pr		1405443	0					
ANR	1405490	Identifier	limit		1405443	1					
ANR	1405491	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	102:4:3141:3165	1405443	10	True				
ANR	1405492	IdentifierDecl	* wlimit = pw -> limit		1405443	0					
ANR	1405493	IdentifierDeclType	byte *		1405443	0					
ANR	1405494	Identifier	wlimit		1405443	1					
ANR	1405495	AssignmentExpression	* wlimit = pw -> limit		1405443	2		=			
ANR	1405496	Identifier	wlimit		1405443	0					
ANR	1405497	PtrMemberAccess	pw -> limit		1405443	1					
ANR	1405498	Identifier	pw		1405443	0					
ANR	1405499	Identifier	limit		1405443	1					
ANR	1405500	IdentifierDeclStatement	int status = 0 ;	103:4:3194:3208	1405443	11	True				
ANR	1405501	IdentifierDecl	status = 0		1405443	0					
ANR	1405502	IdentifierDeclType	int		1405443	0					
ANR	1405503	Identifier	status		1405443	1					
ANR	1405504	AssignmentExpression	status = 0		1405443	2		=			
ANR	1405505	Identifier	status		1405443	0					
ANR	1405506	PrimaryExpression	0		1405443	1					
ANR	1405507	IdentifierDeclStatement	int code = ss -> copy_code ;	104:4:3214:3238	1405443	12	True				
ANR	1405508	IdentifierDecl	code = ss -> copy_code		1405443	0					
ANR	1405509	IdentifierDeclType	int		1405443	0					
ANR	1405510	Identifier	code		1405443	1					
ANR	1405511	AssignmentExpression	code = ss -> copy_code		1405443	2		=			
ANR	1405512	Identifier	code		1405443	0					
ANR	1405513	PtrMemberAccess	ss -> copy_code		1405443	1					
ANR	1405514	Identifier	ss		1405443	0					
ANR	1405515	Identifier	copy_code		1405443	1					
ANR	1405516	IdentifierDeclStatement	int prev_code = ss -> prev_code ;	105:4:3244:3273	1405443	13	True				
ANR	1405517	IdentifierDecl	prev_code = ss -> prev_code		1405443	0					
ANR	1405518	IdentifierDeclType	int		1405443	0					
ANR	1405519	Identifier	prev_code		1405443	1					
ANR	1405520	AssignmentExpression	prev_code = ss -> prev_code		1405443	2		=			
ANR	1405521	Identifier	prev_code		1405443	0					
ANR	1405522	PtrMemberAccess	ss -> prev_code		1405443	1					
ANR	1405523	Identifier	ss		1405443	0					
ANR	1405524	Identifier	prev_code		1405443	1					
ANR	1405525	IdentifierDeclStatement	uint prev_len = ss -> prev_len ;	106:4:3279:3307	1405443	14	True				
ANR	1405526	IdentifierDecl	prev_len = ss -> prev_len		1405443	0					
ANR	1405527	IdentifierDeclType	uint		1405443	0					
ANR	1405528	Identifier	prev_len		1405443	1					
ANR	1405529	AssignmentExpression	prev_len = ss -> prev_len		1405443	2		=			
ANR	1405530	Identifier	prev_len		1405443	0					
ANR	1405531	PtrMemberAccess	ss -> prev_len		1405443	1					
ANR	1405532	Identifier	ss		1405443	0					
ANR	1405533	Identifier	prev_len		1405443	1					
ANR	1405534	IdentifierDeclStatement	byte bits = ss -> bits ;	107:4:3313:3333	1405443	15	True				
ANR	1405535	IdentifierDecl	bits = ss -> bits		1405443	0					
ANR	1405536	IdentifierDeclType	byte		1405443	0					
ANR	1405537	Identifier	bits		1405443	1					
ANR	1405538	AssignmentExpression	bits = ss -> bits		1405443	2		=			
ANR	1405539	Identifier	bits		1405443	0					
ANR	1405540	PtrMemberAccess	ss -> bits		1405443	1					
ANR	1405541	Identifier	ss		1405443	0					
ANR	1405542	Identifier	bits		1405443	1					
ANR	1405543	IdentifierDeclStatement	int bits_left = ss -> bits_left ;	108:4:3339:3368	1405443	16	True				
ANR	1405544	IdentifierDecl	bits_left = ss -> bits_left		1405443	0					
ANR	1405545	IdentifierDeclType	int		1405443	0					
ANR	1405546	Identifier	bits_left		1405443	1					
ANR	1405547	AssignmentExpression	bits_left = ss -> bits_left		1405443	2		=			
ANR	1405548	Identifier	bits_left		1405443	0					
ANR	1405549	PtrMemberAccess	ss -> bits_left		1405443	1					
ANR	1405550	Identifier	ss		1405443	0					
ANR	1405551	Identifier	bits_left		1405443	1					
ANR	1405552	IdentifierDeclStatement	int bytes_left = ss -> bytes_left ;	109:4:3374:3405	1405443	17	True				
ANR	1405553	IdentifierDecl	bytes_left = ss -> bytes_left		1405443	0					
ANR	1405554	IdentifierDeclType	int		1405443	0					
ANR	1405555	Identifier	bytes_left		1405443	1					
ANR	1405556	AssignmentExpression	bytes_left = ss -> bytes_left		1405443	2		=			
ANR	1405557	Identifier	bytes_left		1405443	0					
ANR	1405558	PtrMemberAccess	ss -> bytes_left		1405443	1					
ANR	1405559	Identifier	ss		1405443	0					
ANR	1405560	Identifier	bytes_left		1405443	1					
ANR	1405561	IdentifierDeclStatement	int code_size = ss -> code_size ;	110:4:3411:3440	1405443	18	True				
ANR	1405562	IdentifierDecl	code_size = ss -> code_size		1405443	0					
ANR	1405563	IdentifierDeclType	int		1405443	0					
ANR	1405564	Identifier	code_size		1405443	1					
ANR	1405565	AssignmentExpression	code_size = ss -> code_size		1405443	2		=			
ANR	1405566	Identifier	code_size		1405443	0					
ANR	1405567	PtrMemberAccess	ss -> code_size		1405443	1					
ANR	1405568	Identifier	ss		1405443	0					
ANR	1405569	Identifier	code_size		1405443	1					
ANR	1405570	IdentifierDeclStatement	int code_mask ;	111:4:3446:3459	1405443	19	True				
ANR	1405571	IdentifierDecl	code_mask		1405443	0					
ANR	1405572	IdentifierDeclType	int		1405443	0					
ANR	1405573	Identifier	code_mask		1405443	1					
ANR	1405574	IdentifierDeclStatement	int switch_code ;	112:4:3465:3480	1405443	20	True				
ANR	1405575	IdentifierDecl	switch_code		1405443	0					
ANR	1405576	IdentifierDeclType	int		1405443	0					
ANR	1405577	Identifier	switch_code		1405443	1					
ANR	1405578	IdentifierDeclStatement	int next_code = ss -> next_code ;	113:4:3486:3515	1405443	21	True				
ANR	1405579	IdentifierDecl	next_code = ss -> next_code		1405443	0					
ANR	1405580	IdentifierDeclType	int		1405443	0					
ANR	1405581	Identifier	next_code		1405443	1					
ANR	1405582	AssignmentExpression	next_code = ss -> next_code		1405443	2		=			
ANR	1405583	Identifier	next_code		1405443	0					
ANR	1405584	PtrMemberAccess	ss -> next_code		1405443	1					
ANR	1405585	Identifier	ss		1405443	0					
ANR	1405586	Identifier	next_code		1405443	1					
ANR	1405587	IdentifierDeclStatement	lzw_decode * table = ss -> table . decode ;	114:4:3521:3557	1405443	22	True				
ANR	1405588	IdentifierDecl	* table = ss -> table . decode		1405443	0					
ANR	1405589	IdentifierDeclType	lzw_decode *		1405443	0					
ANR	1405590	Identifier	table		1405443	1					
ANR	1405591	AssignmentExpression	* table = ss -> table . decode		1405443	2		=			
ANR	1405592	Identifier	table		1405443	0					
ANR	1405593	MemberAccess	ss -> table . decode		1405443	1					
ANR	1405594	PtrMemberAccess	ss -> table		1405443	0					
ANR	1405595	Identifier	ss		1405443	0					
ANR	1405596	Identifier	table		1405443	1					
ANR	1405597	Identifier	decode		1405443	1					
ANR	1405598	IdentifierDeclStatement	lzw_decode * dc_next = table + next_code ;	115:4:3586:3625	1405443	23	True				
ANR	1405599	IdentifierDecl	* dc_next = table + next_code		1405443	0					
ANR	1405600	IdentifierDeclType	lzw_decode *		1405443	0					
ANR	1405601	Identifier	dc_next		1405443	1					
ANR	1405602	AssignmentExpression	* dc_next = table + next_code		1405443	2		=			
ANR	1405603	Identifier	dc_next		1405443	0					
ANR	1405604	AdditiveExpression	table + next_code		1405443	1		+			
ANR	1405605	Identifier	table		1405443	0					
ANR	1405606	Identifier	next_code		1405443	1					
ANR	1405607	IdentifierDeclStatement	lzw_decode * dc ;	116:4:3647:3661	1405443	24	True				
ANR	1405608	IdentifierDecl	* dc		1405443	0					
ANR	1405609	IdentifierDeclType	lzw_decode *		1405443	0					
ANR	1405610	Identifier	dc		1405443	1					
ANR	1405611	IdentifierDeclStatement	int code_escape = 1 << ss -> InitialCodeLength ;	117:4:3667:3711	1405443	25	True				
ANR	1405612	IdentifierDecl	code_escape = 1 << ss -> InitialCodeLength		1405443	0					
ANR	1405613	IdentifierDeclType	int		1405443	0					
ANR	1405614	Identifier	code_escape		1405443	1					
ANR	1405615	AssignmentExpression	code_escape = 1 << ss -> InitialCodeLength		1405443	2		=			
ANR	1405616	Identifier	code_escape		1405443	0					
ANR	1405617	ShiftExpression	1 << ss -> InitialCodeLength		1405443	1		<<			
ANR	1405618	PrimaryExpression	1		1405443	0					
ANR	1405619	PtrMemberAccess	ss -> InitialCodeLength		1405443	1					
ANR	1405620	Identifier	ss		1405443	0					
ANR	1405621	Identifier	InitialCodeLength		1405443	1					
ANR	1405622	IdentifierDeclStatement	int eod = code_eod ;	118:4:3717:3735	1405443	26	True				
ANR	1405623	IdentifierDecl	eod = code_eod		1405443	0					
ANR	1405624	IdentifierDeclType	int		1405443	0					
ANR	1405625	Identifier	eod		1405443	1					
ANR	1405626	AssignmentExpression	eod = code_eod		1405443	2		=			
ANR	1405627	Identifier	code_eod		1405443	0					
ANR	1405628	Identifier	code_eod		1405443	1					
ANR	1405629	IdentifierDeclStatement	bool low_order = ss -> FirstBitLowOrder ;	119:4:3741:3778	1405443	27	True				
ANR	1405630	IdentifierDecl	low_order = ss -> FirstBitLowOrder		1405443	0					
ANR	1405631	IdentifierDeclType	bool		1405443	0					
ANR	1405632	Identifier	low_order		1405443	1					
ANR	1405633	AssignmentExpression	low_order = ss -> FirstBitLowOrder		1405443	2		=			
ANR	1405634	Identifier	low_order		1405443	0					
ANR	1405635	PtrMemberAccess	ss -> FirstBitLowOrder		1405443	1					
ANR	1405636	Identifier	ss		1405443	0					
ANR	1405637	Identifier	FirstBitLowOrder		1405443	1					
ANR	1405638	IdentifierDeclStatement	bool old_tiff = ss -> OldTiff ;	120:4:3784:3811	1405443	28	True				
ANR	1405639	IdentifierDecl	old_tiff = ss -> OldTiff		1405443	0					
ANR	1405640	IdentifierDeclType	bool		1405443	0					
ANR	1405641	Identifier	old_tiff		1405443	1					
ANR	1405642	AssignmentExpression	old_tiff = ss -> OldTiff		1405443	2		=			
ANR	1405643	Identifier	old_tiff		1405443	0					
ANR	1405644	PtrMemberAccess	ss -> OldTiff		1405443	1					
ANR	1405645	Identifier	ss		1405443	0					
ANR	1405646	Identifier	OldTiff		1405443	1					
ANR	1405647	IdentifierDeclStatement	uint len ;	121:4:3817:3825	1405443	29	True				
ANR	1405648	IdentifierDecl	len		1405443	0					
ANR	1405649	IdentifierDeclType	uint		1405443	0					
ANR	1405650	Identifier	len		1405443	1					
ANR	1405651	IdentifierDeclStatement	int c ;	122:4:3831:3836	1405443	30	True				
ANR	1405652	IdentifierDecl	c		1405443	0					
ANR	1405653	IdentifierDeclType	int		1405443	0					
ANR	1405654	Identifier	c		1405443	1					
ANR	1405655	IdentifierDeclStatement	byte b ;	123:4:3842:3848	1405443	31	True				
ANR	1405656	IdentifierDecl	b		1405443	0					
ANR	1405657	IdentifierDeclType	byte		1405443	0					
ANR	1405658	Identifier	b		1405443	1					
ANR	1405659	IdentifierDeclStatement	byte * q1 ;	124:4:3854:3862	1405443	32	True				
ANR	1405660	IdentifierDecl	* q1		1405443	0					
ANR	1405661	IdentifierDeclType	byte *		1405443	0					
ANR	1405662	Identifier	q1		1405443	1					
ANR	1405663	ExpressionStatement	"if_debug2m ( 'w' , ss -> memory , ""[w]process decode: code_size=%d next_code=%d\\n"" , code_size , next_code )"	126:4:3869:3983	1405443	33	True				
ANR	1405664	CallExpression	"if_debug2m ( 'w' , ss -> memory , ""[w]process decode: code_size=%d next_code=%d\\n"" , code_size , next_code )"		1405443	0					
ANR	1405665	Callee	if_debug2m		1405443	0					
ANR	1405666	Identifier	if_debug2m		1405443	0					
ANR	1405667	ArgumentList	'w'		1405443	1					
ANR	1405668	Argument	'w'		1405443	0					
ANR	1405669	PrimaryExpression	'w'		1405443	0					
ANR	1405670	Argument	ss -> memory		1405443	1					
ANR	1405671	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1405672	Identifier	ss		1405443	0					
ANR	1405673	Identifier	memory		1405443	1					
ANR	1405674	Argument	"""[w]process decode: code_size=%d next_code=%d\\n"""		1405443	2					
ANR	1405675	PrimaryExpression	"""[w]process decode: code_size=%d next_code=%d\\n"""		1405443	0					
ANR	1405676	Argument	code_size		1405443	3					
ANR	1405677	Identifier	code_size		1405443	0					
ANR	1405678	Argument	next_code		1405443	4					
ANR	1405679	Identifier	next_code		1405443	0					
ANR	1405680	Statement	define	128:1:3986:3991	1405443	34	True				
ANR	1405681	Statement	set_code_size	128:8:3993:4005	1405443	35	True				
ANR	1405682	Statement	(	128:21:4006:4006	1405443	36	True				
ANR	1405683	Statement	)	128:22:4007:4007	1405443	37	True				
ANR	1405684	Statement	code_mask	129:2:4012:4020	1405443	38	True				
ANR	1405685	Statement	=	129:12:4022:4022	1405443	39	True				
ANR	1405686	Statement	(	129:14:4024:4024	1405443	40	True				
ANR	1405687	Statement	1	129:15:4025:4025	1405443	41	True				
ANR	1405688	Statement	<<	129:17:4027:4028	1405443	42	True				
ANR	1405689	Statement	code_size	129:20:4030:4038	1405443	43	True				
ANR	1405690	Statement	)	129:29:4039:4039	1405443	44	True				
ANR	1405691	Statement	-	129:31:4041:4041	1405443	45	True				
ANR	1405692	Statement	1	129:33:4043:4043	1405443	46	True				
ANR	1405693	Statement	","	129:34:4044:4044	1405443	47	True				
ANR	1405694	Statement	switch_code	130:2:4049:4059	1405443	48	True				
ANR	1405695	Statement	=	130:14:4061:4061	1405443	49	True				
ANR	1405696	Statement	code_mask	130:16:4063:4071	1405443	50	True				
ANR	1405697	Statement	+	130:26:4073:4073	1405443	51	True				
ANR	1405698	Statement	1	130:28:4075:4075	1405443	52	True				
ANR	1405699	Statement	-	130:30:4077:4077	1405443	53	True				
ANR	1405700	Statement	ss	130:32:4079:4080	1405443	54	True				
ANR	1405701	Statement	->	130:34:4081:4082	1405443	55	True				
ANR	1405702	IdentifierDeclStatement	EarlyChange set_code_size ( ) ;	130:36:4083:4114	1405443	56	True				
ANR	1405703	IdentifierDecl	set_code_size ( )		1405443	0					
ANR	1405704	IdentifierDeclType	EarlyChange		1405443	0					
ANR	1405705	Identifier	set_code_size		1405443	1					
ANR	1405706	IfStatement	if ( ! ss -> BlockData )		1405443	57					
ANR	1405707	Condition	! ss -> BlockData	132:8:4124:4137	1405443	0	True				
ANR	1405708	UnaryOperationExpression	! ss -> BlockData		1405443	0					
ANR	1405709	UnaryOperator	!		1405443	0					
ANR	1405710	PtrMemberAccess	ss -> BlockData		1405443	1					
ANR	1405711	Identifier	ss		1405443	0					
ANR	1405712	Identifier	BlockData		1405443	1					
ANR	1405713	ExpressionStatement	bytes_left = rlimit - p + 2	133:8:4148:4175	1405443	1	True				
ANR	1405714	AssignmentExpression	bytes_left = rlimit - p + 2		1405443	0		=			
ANR	1405715	Identifier	bytes_left		1405443	0					
ANR	1405716	AdditiveExpression	rlimit - p + 2		1405443	1		-			
ANR	1405717	Identifier	rlimit		1405443	0					
ANR	1405718	AdditiveExpression	p + 2		1405443	1		+			
ANR	1405719	Identifier	p		1405443	0					
ANR	1405720	PrimaryExpression	2		1405443	1					
ANR	1405721	IfStatement	if ( code >= 0 )		1405443	58					
ANR	1405722	Condition	code >= 0	136:8:4300:4308	1405443	0	True				
ANR	1405723	RelationalExpression	code >= 0		1405443	0		>=			
ANR	1405724	Identifier	code		1405443	0					
ANR	1405725	PrimaryExpression	0		1405443	1					
ANR	1405726	CompoundStatement		48:8:1477:1506	1405443	1					
ANR	1405727	IdentifierDeclStatement	int rlen = ss -> copy_left ;	137:8:4321:4345	1405443	0	True				
ANR	1405728	IdentifierDecl	rlen = ss -> copy_left		1405443	0					
ANR	1405729	IdentifierDeclType	int		1405443	0					
ANR	1405730	Identifier	rlen		1405443	1					
ANR	1405731	AssignmentExpression	rlen = ss -> copy_left		1405443	2		=			
ANR	1405732	Identifier	rlen		1405443	0					
ANR	1405733	PtrMemberAccess	ss -> copy_left		1405443	1					
ANR	1405734	Identifier	ss		1405443	0					
ANR	1405735	Identifier	copy_left		1405443	1					
ANR	1405736	IdentifierDeclStatement	int wlen = wlimit - q ;	138:8:4355:4376	1405443	1	True				
ANR	1405737	IdentifierDecl	wlen = wlimit - q		1405443	0					
ANR	1405738	IdentifierDeclType	int		1405443	0					
ANR	1405739	Identifier	wlen		1405443	1					
ANR	1405740	AssignmentExpression	wlen = wlimit - q		1405443	2		=			
ANR	1405741	Identifier	wlen		1405443	0					
ANR	1405742	AdditiveExpression	wlimit - q		1405443	1		-			
ANR	1405743	Identifier	wlimit		1405443	0					
ANR	1405744	Identifier	q		1405443	1					
ANR	1405745	IdentifierDeclStatement	"int n = len = min ( rlen , wlen ) ;"	139:8:4386:4415	1405443	2	True				
ANR	1405746	IdentifierDecl	"n = len = min ( rlen , wlen )"		1405443	0					
ANR	1405747	IdentifierDeclType	int		1405443	0					
ANR	1405748	Identifier	n		1405443	1					
ANR	1405749	AssignmentExpression	"n = len = min ( rlen , wlen )"		1405443	2		=			
ANR	1405750	Identifier	n		1405443	0					
ANR	1405751	AssignmentExpression	"len = min ( rlen , wlen )"		1405443	1		=			
ANR	1405752	Identifier	len		1405443	0					
ANR	1405753	CallExpression	"min ( rlen , wlen )"		1405443	1					
ANR	1405754	Callee	min		1405443	0					
ANR	1405755	Identifier	min		1405443	0					
ANR	1405756	ArgumentList	rlen		1405443	1					
ANR	1405757	Argument	rlen		1405443	0					
ANR	1405758	Identifier	rlen		1405443	0					
ANR	1405759	Argument	wlen		1405443	1					
ANR	1405760	Identifier	wlen		1405443	0					
ANR	1405761	ExpressionStatement	c = code	141:8:4426:4434	1405443	3	True				
ANR	1405762	AssignmentExpression	c = code		1405443	0		=			
ANR	1405763	Identifier	c		1405443	0					
ANR	1405764	Identifier	code		1405443	1					
ANR	1405765	ExpressionStatement	ss -> copy_left = rlen -= len	142:8:4444:4471	1405443	4	True				
ANR	1405766	AssignmentExpression	ss -> copy_left = rlen -= len		1405443	0		=			
ANR	1405767	PtrMemberAccess	ss -> copy_left		1405443	0					
ANR	1405768	Identifier	ss		1405443	0					
ANR	1405769	Identifier	copy_left		1405443	1					
ANR	1405770	AssignmentExpression	rlen -= len		1405443	1		-=			
ANR	1405771	Identifier	rlen		1405443	0					
ANR	1405772	Identifier	len		1405443	1					
ANR	1405773	ExpressionStatement	"if_debug3m ( 'W' , ss -> memory , ""[W]copying 0x%x, %d byte(s) out of %d left\\n"" , code , len , rlen + len )"	143:8:4481:4598	1405443	5	True				
ANR	1405774	CallExpression	"if_debug3m ( 'W' , ss -> memory , ""[W]copying 0x%x, %d byte(s) out of %d left\\n"" , code , len , rlen + len )"		1405443	0					
ANR	1405775	Callee	if_debug3m		1405443	0					
ANR	1405776	Identifier	if_debug3m		1405443	0					
ANR	1405777	ArgumentList	'W'		1405443	1					
ANR	1405778	Argument	'W'		1405443	0					
ANR	1405779	PrimaryExpression	'W'		1405443	0					
ANR	1405780	Argument	ss -> memory		1405443	1					
ANR	1405781	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1405782	Identifier	ss		1405443	0					
ANR	1405783	Identifier	memory		1405443	1					
ANR	1405784	Argument	"""[W]copying 0x%x, %d byte(s) out of %d left\\n"""		1405443	2					
ANR	1405785	PrimaryExpression	"""[W]copying 0x%x, %d byte(s) out of %d left\\n"""		1405443	0					
ANR	1405786	Argument	code		1405443	3					
ANR	1405787	Identifier	code		1405443	0					
ANR	1405788	Argument	len		1405443	4					
ANR	1405789	Identifier	len		1405443	0					
ANR	1405790	Argument	rlen + len		1405443	5					
ANR	1405791	AdditiveExpression	rlen + len		1405443	0		+			
ANR	1405792	Identifier	rlen		1405443	0					
ANR	1405793	Identifier	len		1405443	1					
ANR	1405794	WhileStatement	while ( rlen )		1405443	6					
ANR	1405795	Condition	rlen	145:15:4615:4618	1405443	0	True				
ANR	1405796	Identifier	rlen		1405443	0					
ANR	1405797	ExpressionStatement	"c = table [ c ] . prefix , rlen --"	146:12:4633:4676	1405443	1	True				
ANR	1405798	Expression	"c = table [ c ] . prefix , rlen --"		1405443	0					
ANR	1405799	AssignmentExpression	c = table [ c ] . prefix		1405443	0		=			
ANR	1405800	Identifier	c		1405443	0					
ANR	1405801	MemberAccess	table [ c ] . prefix		1405443	1					
ANR	1405802	ArrayIndexing	table [ c ]		1405443	0					
ANR	1405803	Identifier	table		1405443	0					
ANR	1405804	Identifier	c		1405443	1					
ANR	1405805	Identifier	prefix		1405443	1					
ANR	1405806	PostIncDecOperationExpression	rlen --		1405443	1					
ANR	1405807	Identifier	rlen		1405443	0					
ANR	1405808	IncDec	--		1405443	1					
ANR	1405809	ExpressionStatement	q1 = q += len	148:8:4686:4699	1405443	7	True				
ANR	1405810	AssignmentExpression	q1 = q += len		1405443	0		=			
ANR	1405811	Identifier	q1		1405443	0					
ANR	1405812	AssignmentExpression	q += len		1405443	1		+=			
ANR	1405813	Identifier	q		1405443	0					
ANR	1405814	Identifier	len		1405443	1					
ANR	1405815	ExpressionStatement	n = len	149:8:4709:4716	1405443	8	True				
ANR	1405816	AssignmentExpression	n = len		1405443	0		=			
ANR	1405817	Identifier	n		1405443	0					
ANR	1405818	Identifier	len		1405443	1					
ANR	1405819	WhileStatement	while ( -- n >= 0 )		1405443	9					
ANR	1405820	Condition	-- n >= 0	150:15:4733:4740	1405443	0	True				
ANR	1405821	RelationalExpression	-- n >= 0		1405443	0		>=			
ANR	1405822	UnaryExpression	-- n		1405443	0					
ANR	1405823	IncDec	--		1405443	0					
ANR	1405824	Identifier	n		1405443	1					
ANR	1405825	PrimaryExpression	0		1405443	1					
ANR	1405826	CompoundStatement		59:25:1834:1834	1405443	1					
ANR	1405827	ExpressionStatement	* q1 -- = ( dc = & table [ c ] ) -> datum	151:12:4757:4788	1405443	0	True				
ANR	1405828	AssignmentExpression	* q1 -- = ( dc = & table [ c ] ) -> datum		1405443	0		=			
ANR	1405829	UnaryOperationExpression	* q1 --		1405443	0					
ANR	1405830	UnaryOperator	*		1405443	0					
ANR	1405831	PostIncDecOperationExpression	q1 --		1405443	1					
ANR	1405832	Identifier	q1		1405443	0					
ANR	1405833	IncDec	--		1405443	1					
ANR	1405834	PtrMemberAccess	( dc = & table [ c ] ) -> datum		1405443	1					
ANR	1405835	AssignmentExpression	dc = & table [ c ]		1405443	0		=			
ANR	1405836	Identifier	dc		1405443	0					
ANR	1405837	UnaryOperationExpression	& table [ c ]		1405443	1					
ANR	1405838	UnaryOperator	&		1405443	0					
ANR	1405839	ArrayIndexing	table [ c ]		1405443	1					
ANR	1405840	Identifier	table		1405443	0					
ANR	1405841	Identifier	c		1405443	1					
ANR	1405842	Identifier	datum		1405443	1					
ANR	1405843	ExpressionStatement	c = dc -> prefix	152:12:4802:4816	1405443	1	True				
ANR	1405844	AssignmentExpression	c = dc -> prefix		1405443	0		=			
ANR	1405845	Identifier	c		1405443	0					
ANR	1405846	PtrMemberAccess	dc -> prefix		1405443	1					
ANR	1405847	Identifier	dc		1405443	0					
ANR	1405848	Identifier	prefix		1405443	1					
ANR	1405849	IfStatement	if ( ss -> copy_left )		1405443	10					
ANR	1405850	Condition	ss -> copy_left	154:12:4840:4852	1405443	0	True				
ANR	1405851	PtrMemberAccess	ss -> copy_left		1405443	0					
ANR	1405852	Identifier	ss		1405443	0					
ANR	1405853	Identifier	copy_left		1405443	1					
ANR	1405854	CompoundStatement		63:27:1946:1946	1405443	1					
ANR	1405855	ExpressionStatement	pw -> ptr = q	155:12:4886:4897	1405443	0	True				
ANR	1405856	AssignmentExpression	pw -> ptr = q		1405443	0		=			
ANR	1405857	PtrMemberAccess	pw -> ptr		1405443	0					
ANR	1405858	Identifier	pw		1405443	0					
ANR	1405859	Identifier	ptr		1405443	1					
ANR	1405860	Identifier	q		1405443	1					
ANR	1405861	ReturnStatement	return 1 ;	156:12:4911:4919	1405443	1	True				
ANR	1405862	PrimaryExpression	1		1405443	0					
ANR	1405863	ExpressionStatement	ss -> copy_code = - 1	158:8:4939:4957	1405443	11	True				
ANR	1405864	AssignmentExpression	ss -> copy_code = - 1		1405443	0		=			
ANR	1405865	PtrMemberAccess	ss -> copy_code		1405443	0					
ANR	1405866	Identifier	ss		1405443	0					
ANR	1405867	Identifier	copy_code		1405443	1					
ANR	1405868	UnaryOperationExpression	- 1		1405443	1					
ANR	1405869	UnaryOperator	-		1405443	0					
ANR	1405870	PrimaryExpression	1		1405443	1					
ANR	1405871	ExpressionStatement	len = ss -> copy_len	159:8:4967:4985	1405443	12	True				
ANR	1405872	AssignmentExpression	len = ss -> copy_len		1405443	0		=			
ANR	1405873	Identifier	len		1405443	0					
ANR	1405874	PtrMemberAccess	ss -> copy_len		1405443	1					
ANR	1405875	Identifier	ss		1405443	0					
ANR	1405876	Identifier	copy_len		1405443	1					
ANR	1405877	IfStatement	if ( c == eod )		1405443	13					
ANR	1405878	Condition	c == eod	161:12:5062:5069	1405443	0	True				
ANR	1405879	EqualityExpression	c == eod		1405443	0		==			
ANR	1405880	Identifier	c		1405443	0					
ANR	1405881	Identifier	eod		1405443	1					
ANR	1405882	CompoundStatement		70:22:2163:2163	1405443	1					
ANR	1405883	ExpressionStatement	b = q1 [ 1 ]	163:12:5189:5198	1405443	0	True				
ANR	1405884	AssignmentExpression	b = q1 [ 1 ]		1405443	0		=			
ANR	1405885	Identifier	b		1405443	0					
ANR	1405886	ArrayIndexing	q1 [ 1 ]		1405443	1					
ANR	1405887	Identifier	q1		1405443	0					
ANR	1405888	PrimaryExpression	1		1405443	1					
ANR	1405889	ElseStatement	else		1405443	0					
ANR	1405890	CompoundStatement		73:15:2306:2306	1405443	0					
ANR	1405891	ForStatement	for ( ; c != eod ; c = table [ c ] . prefix )		1405443	0					
ANR	1405892	Condition	c != eod	165:19:5289:5296	1405443	0	True				
ANR	1405893	EqualityExpression	c != eod		1405443	0		!=			
ANR	1405894	Identifier	c		1405443	0					
ANR	1405895	Identifier	eod		1405443	1					
ANR	1405896	AssignmentExpression	c = table [ c ] . prefix	165:29:5299:5317	1405443	1	True	=			
ANR	1405897	Identifier	c		1405443	0					
ANR	1405898	MemberAccess	table [ c ] . prefix		1405443	1					
ANR	1405899	ArrayIndexing	table [ c ]		1405443	0					
ANR	1405900	Identifier	table		1405443	0					
ANR	1405901	Identifier	c		1405443	1					
ANR	1405902	Identifier	prefix		1405443	1					
ANR	1405903	ExpressionStatement	b = ( byte ) c	166:16:5336:5348	1405443	2	True				
ANR	1405904	AssignmentExpression	b = ( byte ) c		1405443	0		=			
ANR	1405905	Identifier	b		1405443	0					
ANR	1405906	CastExpression	( byte ) c		1405443	1					
ANR	1405907	CastTarget	byte		1405443	0					
ANR	1405908	Identifier	c		1405443	1					
ANR	1405909	GotoStatement	goto add ;	168:8:5368:5376	1405443	14	True				
ANR	1405910	Identifier	add		1405443	0					
ANR	1405911	Label	top :	170:2:5386:5389	1405443	59	True				
ANR	1405912	Identifier	top		1405443	0					
ANR	1405913	IfStatement	if ( code_size > bits_left )		1405443	60					
ANR	1405914	Condition	code_size > bits_left	170:10:5394:5414	1405443	0	True				
ANR	1405915	RelationalExpression	code_size > bits_left		1405443	0		>			
ANR	1405916	Identifier	code_size		1405443	0					
ANR	1405917	Identifier	bits_left		1405443	1					
ANR	1405918	CompoundStatement		79:33:2508:2508	1405443	1					
ANR	1405919	IfStatement	if ( bytes_left == 0 )		1405443	0					
ANR	1405920	Condition	bytes_left == 0	171:12:5431:5445	1405443	0	True				
ANR	1405921	EqualityExpression	bytes_left == 0		1405443	0		==			
ANR	1405922	Identifier	bytes_left		1405443	0					
ANR	1405923	PrimaryExpression	0		1405443	1					
ANR	1405924	CompoundStatement		80:29:2539:2539	1405443	1					
ANR	1405925	IfStatement	if ( p == rlimit )		1405443	0					
ANR	1405926	Condition	p == rlimit	172:16:5466:5476	1405443	0	True				
ANR	1405927	EqualityExpression	p == rlimit		1405443	0		==			
ANR	1405928	Identifier	p		1405443	0					
ANR	1405929	Identifier	rlimit		1405443	1					
ANR	1405930	GotoStatement	goto out ;	173:16:5495:5503	1405443	1	True				
ANR	1405931	Identifier	out		1405443	0					
ANR	1405932	ExpressionStatement	bytes_left = * ++ p	174:12:5517:5534	1405443	1	True				
ANR	1405933	AssignmentExpression	bytes_left = * ++ p		1405443	0		=			
ANR	1405934	Identifier	bytes_left		1405443	0					
ANR	1405935	UnaryOperationExpression	* ++ p		1405443	1					
ANR	1405936	UnaryOperator	*		1405443	0					
ANR	1405937	UnaryExpression	++ p		1405443	1					
ANR	1405938	IncDec	++		1405443	0					
ANR	1405939	Identifier	p		1405443	1					
ANR	1405940	ExpressionStatement	"if_debug1m ( 'W' , ss -> memory , ""[W]block count %d\\n"" , bytes_left )"	175:12:5548:5610	1405443	2	True				
ANR	1405941	CallExpression	"if_debug1m ( 'W' , ss -> memory , ""[W]block count %d\\n"" , bytes_left )"		1405443	0					
ANR	1405942	Callee	if_debug1m		1405443	0					
ANR	1405943	Identifier	if_debug1m		1405443	0					
ANR	1405944	ArgumentList	'W'		1405443	1					
ANR	1405945	Argument	'W'		1405443	0					
ANR	1405946	PrimaryExpression	'W'		1405443	0					
ANR	1405947	Argument	ss -> memory		1405443	1					
ANR	1405948	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1405949	Identifier	ss		1405443	0					
ANR	1405950	Identifier	memory		1405443	1					
ANR	1405951	Argument	"""[W]block count %d\\n"""		1405443	2					
ANR	1405952	PrimaryExpression	"""[W]block count %d\\n"""		1405443	0					
ANR	1405953	Argument	bytes_left		1405443	3					
ANR	1405954	Identifier	bytes_left		1405443	0					
ANR	1405955	IfStatement	if ( bytes_left == 0 )		1405443	3					
ANR	1405956	Condition	bytes_left == 0	176:16:5628:5642	1405443	0	True				
ANR	1405957	EqualityExpression	bytes_left == 0		1405443	0		==			
ANR	1405958	Identifier	bytes_left		1405443	0					
ANR	1405959	PrimaryExpression	0		1405443	1					
ANR	1405960	CompoundStatement		85:33:2736:2736	1405443	1					
ANR	1405961	ExpressionStatement	status = EOFC	177:16:5663:5676	1405443	0	True				
ANR	1405962	AssignmentExpression	status = EOFC		1405443	0		=			
ANR	1405963	Identifier	status		1405443	0					
ANR	1405964	Identifier	EOFC		1405443	1					
ANR	1405965	GotoStatement	goto out ;	178:16:5694:5702	1405443	1	True				
ANR	1405966	Identifier	out		1405443	0					
ANR	1405967	GotoStatement	goto top ;	180:12:5730:5738	1405443	4	True				
ANR	1405968	Identifier	top		1405443	0					
ANR	1405969	IfStatement	if ( low_order )		1405443	1					
ANR	1405970	Condition	low_order	182:12:5762:5770	1405443	0	True				
ANR	1405971	Identifier	low_order		1405443	0					
ANR	1405972	ExpressionStatement	code = bits >> ( 8 - bits_left )	183:12:5785:5815	1405443	1	True				
ANR	1405973	AssignmentExpression	code = bits >> ( 8 - bits_left )		1405443	0		=			
ANR	1405974	Identifier	code		1405443	0					
ANR	1405975	ShiftExpression	bits >> ( 8 - bits_left )		1405443	1		>>			
ANR	1405976	Identifier	bits		1405443	0					
ANR	1405977	AdditiveExpression	8 - bits_left		1405443	1		-			
ANR	1405978	PrimaryExpression	8		1405443	0					
ANR	1405979	Identifier	bits_left		1405443	1					
ANR	1405980	ElseStatement	else		1405443	0					
ANR	1405981	ExpressionStatement	code = ( uint ) bits << ( code_size - bits_left )	185:12:5842:5887	1405443	0	True				
ANR	1405982	AssignmentExpression	code = ( uint ) bits << ( code_size - bits_left )		1405443	0		=			
ANR	1405983	Identifier	code		1405443	0					
ANR	1405984	ShiftExpression	( uint ) bits << ( code_size - bits_left )		1405443	1		<<			
ANR	1405985	CastExpression	( uint ) bits		1405443	0					
ANR	1405986	CastTarget	uint		1405443	0					
ANR	1405987	Identifier	bits		1405443	1					
ANR	1405988	AdditiveExpression	code_size - bits_left		1405443	1		-			
ANR	1405989	Identifier	code_size		1405443	0					
ANR	1405990	Identifier	bits_left		1405443	1					
ANR	1405991	IfStatement	if ( bits_left + 8 < code_size )		1405443	2					
ANR	1405992	Condition	bits_left + 8 < code_size	186:12:5901:5925	1405443	0	True				
ANR	1405993	RelationalExpression	bits_left + 8 < code_size		1405443	0		<			
ANR	1405994	AdditiveExpression	bits_left + 8		1405443	0		+			
ANR	1405995	Identifier	bits_left		1405443	0					
ANR	1405996	PrimaryExpression	8		1405443	1					
ANR	1405997	Identifier	code_size		1405443	1					
ANR	1405998	CompoundStatement		95:39:3019:3019	1405443	1					
ANR	1405999	IfStatement	if ( bytes_left == 1 )		1405443	0					
ANR	1406000	Condition	bytes_left == 1	187:16:5975:5989	1405443	0	True				
ANR	1406001	EqualityExpression	bytes_left == 1		1405443	0		==			
ANR	1406002	Identifier	bytes_left		1405443	0					
ANR	1406003	PrimaryExpression	1		1405443	1					
ANR	1406004	CompoundStatement		96:33:3083:3083	1405443	1					
ANR	1406005	IfStatement	if ( rlimit - p < 3 )		1405443	0					
ANR	1406006	Condition	rlimit - p < 3	188:20:6014:6027	1405443	0	True				
ANR	1406007	RelationalExpression	rlimit - p < 3		1405443	0		<			
ANR	1406008	AdditiveExpression	rlimit - p		1405443	0		-			
ANR	1406009	Identifier	rlimit		1405443	0					
ANR	1406010	Identifier	p		1405443	1					
ANR	1406011	PrimaryExpression	3		1405443	1					
ANR	1406012	GotoStatement	goto out ;	189:20:6050:6058	1405443	1	True				
ANR	1406013	Identifier	out		1405443	0					
ANR	1406014	ExpressionStatement	bytes_left = p [ 2 ]	190:16:6076:6093	1405443	1	True				
ANR	1406015	AssignmentExpression	bytes_left = p [ 2 ]		1405443	0		=			
ANR	1406016	Identifier	bytes_left		1405443	0					
ANR	1406017	ArrayIndexing	p [ 2 ]		1405443	1					
ANR	1406018	Identifier	p		1405443	0					
ANR	1406019	PrimaryExpression	2		1405443	1					
ANR	1406020	ExpressionStatement	"if_debug1m ( 'W' , ss -> memory , ""[W]block count %d\\n"" , bytes_left )"	191:16:6111:6200	1405443	2	True				
ANR	1406021	CallExpression	"if_debug1m ( 'W' , ss -> memory , ""[W]block count %d\\n"" , bytes_left )"		1405443	0					
ANR	1406022	Callee	if_debug1m		1405443	0					
ANR	1406023	Identifier	if_debug1m		1405443	0					
ANR	1406024	ArgumentList	'W'		1405443	1					
ANR	1406025	Argument	'W'		1405443	0					
ANR	1406026	PrimaryExpression	'W'		1405443	0					
ANR	1406027	Argument	ss -> memory		1405443	1					
ANR	1406028	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1406029	Identifier	ss		1405443	0					
ANR	1406030	Identifier	memory		1405443	1					
ANR	1406031	Argument	"""[W]block count %d\\n"""		1405443	2					
ANR	1406032	PrimaryExpression	"""[W]block count %d\\n"""		1405443	0					
ANR	1406033	Argument	bytes_left		1405443	3					
ANR	1406034	Identifier	bytes_left		1405443	0					
ANR	1406035	IfStatement	if ( bytes_left == 0 )		1405443	3					
ANR	1406036	Condition	bytes_left == 0	193:20:6222:6236	1405443	0	True				
ANR	1406037	EqualityExpression	bytes_left == 0		1405443	0		==			
ANR	1406038	Identifier	bytes_left		1405443	0					
ANR	1406039	PrimaryExpression	0		1405443	1					
ANR	1406040	CompoundStatement		102:37:3330:3330	1405443	1					
ANR	1406041	ExpressionStatement	status = EOFC	194:20:6261:6274	1405443	0	True				
ANR	1406042	AssignmentExpression	status = EOFC		1405443	0		=			
ANR	1406043	Identifier	status		1405443	0					
ANR	1406044	Identifier	EOFC		1405443	1					
ANR	1406045	GotoStatement	goto out ;	195:20:6296:6304	1405443	1	True				
ANR	1406046	Identifier	out		1405443	0					
ANR	1406047	ExpressionStatement	bytes_left ++	197:16:6340:6352	1405443	4	True				
ANR	1406048	PostIncDecOperationExpression	bytes_left ++		1405443	0					
ANR	1406049	Identifier	bytes_left		1405443	0					
ANR	1406050	IncDec	++		1405443	1					
ANR	1406051	ExpressionStatement	bits = p [ 1 ]	198:16:6370:6381	1405443	5	True				
ANR	1406052	AssignmentExpression	bits = p [ 1 ]		1405443	0		=			
ANR	1406053	Identifier	bits		1405443	0					
ANR	1406054	ArrayIndexing	p [ 1 ]		1405443	1					
ANR	1406055	Identifier	p		1405443	0					
ANR	1406056	PrimaryExpression	1		1405443	1					
ANR	1406057	ExpressionStatement	p ++	199:16:6399:6402	1405443	6	True				
ANR	1406058	PostIncDecOperationExpression	p ++		1405443	0					
ANR	1406059	Identifier	p		1405443	0					
ANR	1406060	IncDec	++		1405443	1					
ANR	1406061	ElseStatement	else		1405443	0					
ANR	1406062	CompoundStatement		109:19:3514:3514	1405443	0					
ANR	1406063	IfStatement	if ( rlimit - p < 2 )		1405443	0					
ANR	1406064	Condition	rlimit - p < 2	201:20:6445:6458	1405443	0	True				
ANR	1406065	RelationalExpression	rlimit - p < 2		1405443	0		<			
ANR	1406066	AdditiveExpression	rlimit - p		1405443	0		-			
ANR	1406067	Identifier	rlimit		1405443	0					
ANR	1406068	Identifier	p		1405443	1					
ANR	1406069	PrimaryExpression	2		1405443	1					
ANR	1406070	GotoStatement	goto out ;	202:20:6481:6489	1405443	1	True				
ANR	1406071	Identifier	out		1405443	0					
ANR	1406072	ExpressionStatement	bits = p [ 1 ]	203:16:6507:6518	1405443	1	True				
ANR	1406073	AssignmentExpression	bits = p [ 1 ]		1405443	0		=			
ANR	1406074	Identifier	bits		1405443	0					
ANR	1406075	ArrayIndexing	p [ 1 ]		1405443	1					
ANR	1406076	Identifier	p		1405443	0					
ANR	1406077	PrimaryExpression	1		1405443	1					
ANR	1406078	IfStatement	if ( low_order )		1405443	1					
ANR	1406079	Condition	low_order	205:16:6550:6558	1405443	0	True				
ANR	1406080	Identifier	low_order		1405443	0					
ANR	1406081	ExpressionStatement	code += ( uint ) bits << bits_left	206:16:6577:6609	1405443	1	True				
ANR	1406082	AssignmentExpression	code += ( uint ) bits << bits_left		1405443	0		+=			
ANR	1406083	Identifier	code		1405443	0					
ANR	1406084	ShiftExpression	( uint ) bits << bits_left		1405443	1		<<			
ANR	1406085	CastExpression	( uint ) bits		1405443	0					
ANR	1406086	CastTarget	uint		1405443	0					
ANR	1406087	Identifier	bits		1405443	1					
ANR	1406088	Identifier	bits_left		1405443	1					
ANR	1406089	ElseStatement	else		1405443	0					
ANR	1406090	ExpressionStatement	code += ( uint ) bits << ( code_size - 8 - bits_left )	208:16:6644:6694	1405443	0	True				
ANR	1406091	AssignmentExpression	code += ( uint ) bits << ( code_size - 8 - bits_left )		1405443	0		+=			
ANR	1406092	Identifier	code		1405443	0					
ANR	1406093	ShiftExpression	( uint ) bits << ( code_size - 8 - bits_left )		1405443	1		<<			
ANR	1406094	CastExpression	( uint ) bits		1405443	0					
ANR	1406095	CastTarget	uint		1405443	0					
ANR	1406096	Identifier	bits		1405443	1					
ANR	1406097	AdditiveExpression	code_size - 8 - bits_left		1405443	1		-			
ANR	1406098	Identifier	code_size		1405443	0					
ANR	1406099	AdditiveExpression	8 - bits_left		1405443	1		-			
ANR	1406100	PrimaryExpression	8		1405443	0					
ANR	1406101	Identifier	bits_left		1405443	1					
ANR	1406102	ExpressionStatement	bits_left += 8	209:12:6708:6722	1405443	2	True				
ANR	1406103	AssignmentExpression	bits_left += 8		1405443	0		+=			
ANR	1406104	Identifier	bits_left		1405443	0					
ANR	1406105	PrimaryExpression	8		1405443	1					
ANR	1406106	ExpressionStatement	bits = p [ 2 ]	210:12:6736:6747	1405443	3	True				
ANR	1406107	AssignmentExpression	bits = p [ 2 ]		1405443	0		=			
ANR	1406108	Identifier	bits		1405443	0					
ANR	1406109	ArrayIndexing	p [ 2 ]		1405443	1					
ANR	1406110	Identifier	p		1405443	0					
ANR	1406111	PrimaryExpression	2		1405443	1					
ANR	1406112	ExpressionStatement	p += 2	211:12:6761:6767	1405443	4	True				
ANR	1406113	AssignmentExpression	p += 2		1405443	0		+=			
ANR	1406114	Identifier	p		1405443	0					
ANR	1406115	PrimaryExpression	2		1405443	1					
ANR	1406116	ExpressionStatement	bytes_left -= 2	212:12:6781:6796	1405443	5	True				
ANR	1406117	AssignmentExpression	bytes_left -= 2		1405443	0		-=			
ANR	1406118	Identifier	bytes_left		1405443	0					
ANR	1406119	PrimaryExpression	2		1405443	1					
ANR	1406120	ElseStatement	else		1405443	0					
ANR	1406121	CompoundStatement		122:15:3904:3904	1405443	0					
ANR	1406122	IfStatement	if ( p == rlimit )		1405443	0					
ANR	1406123	Condition	p == rlimit	214:16:6831:6841	1405443	0	True				
ANR	1406124	EqualityExpression	p == rlimit		1405443	0		==			
ANR	1406125	Identifier	p		1405443	0					
ANR	1406126	Identifier	rlimit		1405443	1					
ANR	1406127	GotoStatement	goto out ;	215:16:6860:6868	1405443	1	True				
ANR	1406128	Identifier	out		1405443	0					
ANR	1406129	ExpressionStatement	bits = * ++ p	216:12:6882:6893	1405443	1	True				
ANR	1406130	AssignmentExpression	bits = * ++ p		1405443	0		=			
ANR	1406131	Identifier	bits		1405443	0					
ANR	1406132	UnaryOperationExpression	* ++ p		1405443	1					
ANR	1406133	UnaryOperator	*		1405443	0					
ANR	1406134	UnaryExpression	++ p		1405443	1					
ANR	1406135	IncDec	++		1405443	0					
ANR	1406136	Identifier	p		1405443	1					
ANR	1406137	ExpressionStatement	bytes_left --	217:12:6907:6919	1405443	2	True				
ANR	1406138	PostIncDecOperationExpression	bytes_left --		1405443	0					
ANR	1406139	Identifier	bytes_left		1405443	0					
ANR	1406140	IncDec	--		1405443	1					
ANR	1406141	IfStatement	if ( low_order )		1405443	3					
ANR	1406142	Condition	low_order	219:12:6943:6951	1405443	0	True				
ANR	1406143	Identifier	low_order		1405443	0					
ANR	1406144	ExpressionStatement	"code += ( uint ) bits << bits_left , bits_left += 8 - code_size"	220:12:6966:7042	1405443	1	True				
ANR	1406145	Expression	"code += ( uint ) bits << bits_left , bits_left += 8 - code_size"		1405443	0					
ANR	1406146	AssignmentExpression	code += ( uint ) bits << bits_left		1405443	0		+=			
ANR	1406147	Identifier	code		1405443	0					
ANR	1406148	ShiftExpression	( uint ) bits << bits_left		1405443	1		<<			
ANR	1406149	CastExpression	( uint ) bits		1405443	0					
ANR	1406150	CastTarget	uint		1405443	0					
ANR	1406151	Identifier	bits		1405443	1					
ANR	1406152	Identifier	bits_left		1405443	1					
ANR	1406153	AssignmentExpression	bits_left += 8 - code_size		1405443	1		+=			
ANR	1406154	Identifier	bits_left		1405443	0					
ANR	1406155	AdditiveExpression	8 - code_size		1405443	1		-			
ANR	1406156	PrimaryExpression	8		1405443	0					
ANR	1406157	Identifier	code_size		1405443	1					
ANR	1406158	ElseStatement	else		1405443	0					
ANR	1406159	ExpressionStatement	"bits_left += 8 - code_size , code += bits >> bits_left"	223:12:7069:7138	1405443	0	True				
ANR	1406160	Expression	"bits_left += 8 - code_size , code += bits >> bits_left"		1405443	0					
ANR	1406161	AssignmentExpression	bits_left += 8 - code_size		1405443	0		+=			
ANR	1406162	Identifier	bits_left		1405443	0					
ANR	1406163	AdditiveExpression	8 - code_size		1405443	1		-			
ANR	1406164	PrimaryExpression	8		1405443	0					
ANR	1406165	Identifier	code_size		1405443	1					
ANR	1406166	AssignmentExpression	code += bits >> bits_left		1405443	1		+=			
ANR	1406167	Identifier	code		1405443	0					
ANR	1406168	ShiftExpression	bits >> bits_left		1405443	1		>>			
ANR	1406169	Identifier	bits		1405443	0					
ANR	1406170	Identifier	bits_left		1405443	1					
ANR	1406171	ElseStatement	else		1405443	0					
ANR	1406172	CompoundStatement		134:11:4242:4242	1405443	0					
ANR	1406173	IfStatement	if ( low_order )		1405443	0					
ANR	1406174	Condition	low_order	226:12:7165:7173	1405443	0	True				
ANR	1406175	Identifier	low_order		1405443	0					
ANR	1406176	ExpressionStatement	"code = bits >> ( 8 - bits_left ) , bits_left -= code_size"	227:12:7188:7258	1405443	1	True				
ANR	1406177	Expression	"code = bits >> ( 8 - bits_left ) , bits_left -= code_size"		1405443	0					
ANR	1406178	AssignmentExpression	code = bits >> ( 8 - bits_left )		1405443	0		=			
ANR	1406179	Identifier	code		1405443	0					
ANR	1406180	ShiftExpression	bits >> ( 8 - bits_left )		1405443	1		>>			
ANR	1406181	Identifier	bits		1405443	0					
ANR	1406182	AdditiveExpression	8 - bits_left		1405443	1		-			
ANR	1406183	PrimaryExpression	8		1405443	0					
ANR	1406184	Identifier	bits_left		1405443	1					
ANR	1406185	AssignmentExpression	bits_left -= code_size		1405443	1		-=			
ANR	1406186	Identifier	bits_left		1405443	0					
ANR	1406187	Identifier	code_size		1405443	1					
ANR	1406188	ElseStatement	else		1405443	0					
ANR	1406189	ExpressionStatement	"bits_left -= code_size , code = bits >> bits_left"	230:12:7285:7349	1405443	0	True				
ANR	1406190	Expression	"bits_left -= code_size , code = bits >> bits_left"		1405443	0					
ANR	1406191	AssignmentExpression	bits_left -= code_size		1405443	0		-=			
ANR	1406192	Identifier	bits_left		1405443	0					
ANR	1406193	Identifier	code_size		1405443	1					
ANR	1406194	AssignmentExpression	code = bits >> bits_left		1405443	1		=			
ANR	1406195	Identifier	code		1405443	0					
ANR	1406196	ShiftExpression	bits >> bits_left		1405443	1		>>			
ANR	1406197	Identifier	bits		1405443	0					
ANR	1406198	Identifier	bits_left		1405443	1					
ANR	1406199	ExpressionStatement	code &= code_mask	233:4:7361:7378	1405443	61	True				
ANR	1406200	AssignmentExpression	code &= code_mask		1405443	0		&=			
ANR	1406201	Identifier	code		1405443	0					
ANR	1406202	Identifier	code_mask		1405443	1					
ANR	1406203	ExpressionStatement	"if_debug2m ( 'W' , ss -> memory , ""[W]reading 0x%x,%d\\n"" , code , code_size )"	234:4:7384:7452	1405443	62	True				
ANR	1406204	CallExpression	"if_debug2m ( 'W' , ss -> memory , ""[W]reading 0x%x,%d\\n"" , code , code_size )"		1405443	0					
ANR	1406205	Callee	if_debug2m		1405443	0					
ANR	1406206	Identifier	if_debug2m		1405443	0					
ANR	1406207	ArgumentList	'W'		1405443	1					
ANR	1406208	Argument	'W'		1405443	0					
ANR	1406209	PrimaryExpression	'W'		1405443	0					
ANR	1406210	Argument	ss -> memory		1405443	1					
ANR	1406211	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1406212	Identifier	ss		1405443	0					
ANR	1406213	Identifier	memory		1405443	1					
ANR	1406214	Argument	"""[W]reading 0x%x,%d\\n"""		1405443	2					
ANR	1406215	PrimaryExpression	"""[W]reading 0x%x,%d\\n"""		1405443	0					
ANR	1406216	Argument	code		1405443	3					
ANR	1406217	Identifier	code		1405443	0					
ANR	1406218	Argument	code_size		1405443	4					
ANR	1406219	Identifier	code_size		1405443	0					
ANR	1406220	IfStatement	if ( code >= next_code )		1405443	63					
ANR	1406221	Condition	code >= next_code	244:8:7868:7884	1405443	0	True				
ANR	1406222	RelationalExpression	code >= next_code		1405443	0		>=			
ANR	1406223	Identifier	code		1405443	0					
ANR	1406224	Identifier	next_code		1405443	1					
ANR	1406225	CompoundStatement		153:27:4978:4978	1405443	1					
ANR	1406226	IfStatement	if ( ( code > next_code ) || ( prev_code < 0 ) )		1405443	0					
ANR	1406227	Condition	( code > next_code ) || ( prev_code < 0 )	245:12:7901:7937	1405443	0	True				
ANR	1406228	OrExpression	( code > next_code ) || ( prev_code < 0 )		1405443	0		||			
ANR	1406229	RelationalExpression	code > next_code		1405443	0		>			
ANR	1406230	Identifier	code		1405443	0					
ANR	1406231	Identifier	next_code		1405443	1					
ANR	1406232	RelationalExpression	prev_code < 0		1405443	1		<			
ANR	1406233	Identifier	prev_code		1405443	0					
ANR	1406234	PrimaryExpression	0		1405443	1					
ANR	1406235	CompoundStatement		154:51:5031:5031	1405443	1					
ANR	1406236	ExpressionStatement	"mlprintf3 ( ss -> memory , ""[W]code = %d > next_code = %d  or prev_code = %d < 0\\n"" , code , next_code , prev_code )"	247:12:7967:8095	1405443	0	True				
ANR	1406237	CallExpression	"mlprintf3 ( ss -> memory , ""[W]code = %d > next_code = %d  or prev_code = %d < 0\\n"" , code , next_code , prev_code )"		1405443	0					
ANR	1406238	Callee	mlprintf3		1405443	0					
ANR	1406239	Identifier	mlprintf3		1405443	0					
ANR	1406240	ArgumentList	ss -> memory		1405443	1					
ANR	1406241	Argument	ss -> memory		1405443	0					
ANR	1406242	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1406243	Identifier	ss		1405443	0					
ANR	1406244	Identifier	memory		1405443	1					
ANR	1406245	Argument	"""[W]code = %d > next_code = %d  or prev_code = %d < 0\\n"""		1405443	1					
ANR	1406246	PrimaryExpression	"""[W]code = %d > next_code = %d  or prev_code = %d < 0\\n"""		1405443	0					
ANR	1406247	Argument	code		1405443	2					
ANR	1406248	Identifier	code		1405443	0					
ANR	1406249	Argument	next_code		1405443	3					
ANR	1406250	Identifier	next_code		1405443	0					
ANR	1406251	Argument	prev_code		1405443	4					
ANR	1406252	Identifier	prev_code		1405443	0					
ANR	1406253	ExpressionStatement	status = ERRC	250:12:8116:8129	1405443	1	True				
ANR	1406254	AssignmentExpression	status = ERRC		1405443	0		=			
ANR	1406255	Identifier	status		1405443	0					
ANR	1406256	Identifier	ERRC		1405443	1					
ANR	1406257	GotoStatement	goto out ;	251:12:8143:8151	1405443	2	True				
ANR	1406258	Identifier	out		1405443	0					
ANR	1406259	ForStatement	for ( c = prev_code ; c != eod ; c = table [ c ] . prefix )		1405443	1					
ANR	1406260	ForInit	c = prev_code ;	255:13:8286:8299	1405443	0	True				
ANR	1406261	AssignmentExpression	c = prev_code		1405443	0		=			
ANR	1406262	Identifier	c		1405443	0					
ANR	1406263	Identifier	prev_code		1405443	1					
ANR	1406264	Condition	c != eod	255:28:8301:8308	1405443	1	True				
ANR	1406265	EqualityExpression	c != eod		1405443	0		!=			
ANR	1406266	Identifier	c		1405443	0					
ANR	1406267	Identifier	eod		1405443	1					
ANR	1406268	AssignmentExpression	c = table [ c ] . prefix	255:38:8311:8329	1405443	2	True	=			
ANR	1406269	Identifier	c		1405443	0					
ANR	1406270	MemberAccess	table [ c ] . prefix		1405443	1					
ANR	1406271	ArrayIndexing	table [ c ]		1405443	0					
ANR	1406272	Identifier	table		1405443	0					
ANR	1406273	Identifier	c		1405443	1					
ANR	1406274	Identifier	prefix		1405443	1					
ANR	1406275	ExpressionStatement	dc_next -> datum = c	256:12:8344:8362	1405443	3	True				
ANR	1406276	AssignmentExpression	dc_next -> datum = c		1405443	0		=			
ANR	1406277	PtrMemberAccess	dc_next -> datum		1405443	0					
ANR	1406278	Identifier	dc_next		1405443	0					
ANR	1406279	Identifier	datum		1405443	1					
ANR	1406280	Identifier	c		1405443	1					
ANR	1406281	ExpressionStatement	len = prev_len + 1	257:8:8372:8390	1405443	2	True				
ANR	1406282	AssignmentExpression	len = prev_len + 1		1405443	0		=			
ANR	1406283	Identifier	len		1405443	0					
ANR	1406284	AdditiveExpression	prev_len + 1		1405443	1		+			
ANR	1406285	Identifier	prev_len		1405443	0					
ANR	1406286	PrimaryExpression	1		1405443	1					
ANR	1406287	ExpressionStatement	"dc_next -> len = min ( len , 255 )"	258:8:8400:8428	1405443	3	True				
ANR	1406288	AssignmentExpression	"dc_next -> len = min ( len , 255 )"		1405443	0		=			
ANR	1406289	PtrMemberAccess	dc_next -> len		1405443	0					
ANR	1406290	Identifier	dc_next		1405443	0					
ANR	1406291	Identifier	len		1405443	1					
ANR	1406292	CallExpression	"min ( len , 255 )"		1405443	1					
ANR	1406293	Callee	min		1405443	0					
ANR	1406294	Identifier	min		1405443	0					
ANR	1406295	ArgumentList	len		1405443	1					
ANR	1406296	Argument	len		1405443	0					
ANR	1406297	Identifier	len		1405443	0					
ANR	1406298	Argument	255		1405443	1					
ANR	1406299	PrimaryExpression	255		1405443	0					
ANR	1406300	ExpressionStatement	dc_next -> prefix = prev_code	259:8:8438:8465	1405443	4	True				
ANR	1406301	AssignmentExpression	dc_next -> prefix = prev_code		1405443	0		=			
ANR	1406302	PtrMemberAccess	dc_next -> prefix		1405443	0					
ANR	1406303	Identifier	dc_next		1405443	0					
ANR	1406304	Identifier	prefix		1405443	1					
ANR	1406305	Identifier	prev_code		1405443	1					
ANR	1406306	ExpressionStatement	"if_debug3m ( 'w' , ss -> memory , ""[w]decoding anomalous 0x%x=0x%x+%c\\n"" , next_code , prev_code , dc_next -> datum )"	260:8:8475:8599	1405443	5	True				
ANR	1406307	CallExpression	"if_debug3m ( 'w' , ss -> memory , ""[w]decoding anomalous 0x%x=0x%x+%c\\n"" , next_code , prev_code , dc_next -> datum )"		1405443	0					
ANR	1406308	Callee	if_debug3m		1405443	0					
ANR	1406309	Identifier	if_debug3m		1405443	0					
ANR	1406310	ArgumentList	'w'		1405443	1					
ANR	1406311	Argument	'w'		1405443	0					
ANR	1406312	PrimaryExpression	'w'		1405443	0					
ANR	1406313	Argument	ss -> memory		1405443	1					
ANR	1406314	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1406315	Identifier	ss		1405443	0					
ANR	1406316	Identifier	memory		1405443	1					
ANR	1406317	Argument	"""[w]decoding anomalous 0x%x=0x%x+%c\\n"""		1405443	2					
ANR	1406318	PrimaryExpression	"""[w]decoding anomalous 0x%x=0x%x+%c\\n"""		1405443	0					
ANR	1406319	Argument	next_code		1405443	3					
ANR	1406320	Identifier	next_code		1405443	0					
ANR	1406321	Argument	prev_code		1405443	4					
ANR	1406322	Identifier	prev_code		1405443	0					
ANR	1406323	Argument	dc_next -> datum		1405443	5					
ANR	1406324	PtrMemberAccess	dc_next -> datum		1405443	0					
ANR	1406325	Identifier	dc_next		1405443	0					
ANR	1406326	Identifier	datum		1405443	1					
ANR	1406327	Label	reset :	264:0:8659:8664	1405443	64	True				
ANR	1406328	Identifier	reset		1405443	0					
ANR	1406329	ExpressionStatement	len = table [ code ] . len	265:4:8670:8691	1405443	65	True				
ANR	1406330	AssignmentExpression	len = table [ code ] . len		1405443	0		=			
ANR	1406331	Identifier	len		1405443	0					
ANR	1406332	MemberAccess	table [ code ] . len		1405443	1					
ANR	1406333	ArrayIndexing	table [ code ]		1405443	0					
ANR	1406334	Identifier	table		1405443	0					
ANR	1406335	Identifier	code		1405443	1					
ANR	1406336	Identifier	len		1405443	1					
ANR	1406337	IfStatement	if ( len == 255 )		1405443	66					
ANR	1406338	Condition	len == 255	266:8:8701:8710	1405443	0	True				
ANR	1406339	EqualityExpression	len == 255		1405443	0		==			
ANR	1406340	Identifier	len		1405443	0					
ANR	1406341	PrimaryExpression	255		1405443	1					
ANR	1406342	CompoundStatement		175:20:5804:5804	1405443	1					
ANR	1406343	IfStatement	if ( code == code_reset )		1405443	0					
ANR	1406344	Condition	code == code_reset	269:12:8879:8896	1405443	0	True				
ANR	1406345	EqualityExpression	code == code_reset		1405443	0		==			
ANR	1406346	Identifier	code		1405443	0					
ANR	1406347	Identifier	code_reset		1405443	1					
ANR	1406348	CompoundStatement		178:32:5990:5990	1405443	1					
ANR	1406349	ExpressionStatement	"if_debug1m ( 'w' , ss -> memory , ""[w]reset: next_code was %d\\n"" , next_code )"	270:12:8913:9006	1405443	0	True				
ANR	1406350	CallExpression	"if_debug1m ( 'w' , ss -> memory , ""[w]reset: next_code was %d\\n"" , next_code )"		1405443	0					
ANR	1406351	Callee	if_debug1m		1405443	0					
ANR	1406352	Identifier	if_debug1m		1405443	0					
ANR	1406353	ArgumentList	'w'		1405443	1					
ANR	1406354	Argument	'w'		1405443	0					
ANR	1406355	PrimaryExpression	'w'		1405443	0					
ANR	1406356	Argument	ss -> memory		1405443	1					
ANR	1406357	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1406358	Identifier	ss		1405443	0					
ANR	1406359	Identifier	memory		1405443	1					
ANR	1406360	Argument	"""[w]reset: next_code was %d\\n"""		1405443	2					
ANR	1406361	PrimaryExpression	"""[w]reset: next_code was %d\\n"""		1405443	0					
ANR	1406362	Argument	next_code		1405443	3					
ANR	1406363	Identifier	next_code		1405443	0					
ANR	1406364	ExpressionStatement	next_code = code_0	272:12:9020:9038	1405443	1	True				
ANR	1406365	AssignmentExpression	next_code = code_0		1405443	0		=			
ANR	1406366	Identifier	next_code		1405443	0					
ANR	1406367	Identifier	code_0		1405443	1					
ANR	1406368	ExpressionStatement	dc_next = table + code_0	273:12:9052:9076	1405443	2	True				
ANR	1406369	AssignmentExpression	dc_next = table + code_0		1405443	0		=			
ANR	1406370	Identifier	dc_next		1405443	0					
ANR	1406371	AdditiveExpression	table + code_0		1405443	1		+			
ANR	1406372	Identifier	table		1405443	0					
ANR	1406373	Identifier	code_0		1405443	1					
ANR	1406374	ExpressionStatement	code_size = ss -> InitialCodeLength + 1	274:12:9090:9127	1405443	3	True				
ANR	1406375	AssignmentExpression	code_size = ss -> InitialCodeLength + 1		1405443	0		=			
ANR	1406376	Identifier	code_size		1405443	0					
ANR	1406377	AdditiveExpression	ss -> InitialCodeLength + 1		1405443	1		+			
ANR	1406378	PtrMemberAccess	ss -> InitialCodeLength		1405443	0					
ANR	1406379	Identifier	ss		1405443	0					
ANR	1406380	Identifier	InitialCodeLength		1405443	1					
ANR	1406381	PrimaryExpression	1		1405443	1					
ANR	1406382	ExpressionStatement	set_code_size ( )	275:12:9141:9156	1405443	4	True				
ANR	1406383	CallExpression	set_code_size ( )		1405443	0					
ANR	1406384	Callee	set_code_size		1405443	0					
ANR	1406385	Identifier	set_code_size		1405443	0					
ANR	1406386	ArgumentList			1405443	1					
ANR	1406387	ExpressionStatement	prev_code = - 1	276:12:9170:9184	1405443	5	True				
ANR	1406388	AssignmentExpression	prev_code = - 1		1405443	0		=			
ANR	1406389	Identifier	prev_code		1405443	0					
ANR	1406390	UnaryOperationExpression	- 1		1405443	1					
ANR	1406391	UnaryOperator	-		1405443	0					
ANR	1406392	PrimaryExpression	1		1405443	1					
ANR	1406393	GotoStatement	goto top ;	277:12:9198:9206	1405443	6	True				
ANR	1406394	Identifier	top		1405443	0					
ANR	1406395	ElseStatement	else		1405443	0					
ANR	1406396	IfStatement	if ( code == eod )		1405443	0					
ANR	1406397	Condition	code == eod	278:19:9227:9237	1405443	0	True				
ANR	1406398	EqualityExpression	code == eod		1405443	0		==			
ANR	1406399	Identifier	code		1405443	0					
ANR	1406400	Identifier	eod		1405443	1					
ANR	1406401	CompoundStatement		187:32:6331:6331	1405443	1					
ANR	1406402	ExpressionStatement	status = EOFC	279:12:9254:9267	1405443	0	True				
ANR	1406403	AssignmentExpression	status = EOFC		1405443	0		=			
ANR	1406404	Identifier	status		1405443	0					
ANR	1406405	Identifier	EOFC		1405443	1					
ANR	1406406	GotoStatement	goto out ;	280:12:9281:9289	1405443	1	True				
ANR	1406407	Identifier	out		1405443	0					
ANR	1406408	ForStatement	"for ( c = code , len = 0 ; c != eod ; len ++ )"		1405443	1					
ANR	1406409	ForInit	"c = code , len = 0 ;"	284:13:9404:9421	1405443	0	True				
ANR	1406410	Expression	"c = code , len = 0"		1405443	0					
ANR	1406411	AssignmentExpression	c = code		1405443	0		=			
ANR	1406412	Identifier	c		1405443	0					
ANR	1406413	Identifier	code		1405443	1					
ANR	1406414	AssignmentExpression	len = 0		1405443	1		=			
ANR	1406415	Identifier	len		1405443	0					
ANR	1406416	PrimaryExpression	0		1405443	1					
ANR	1406417	Condition	c != eod	284:32:9423:9430	1405443	1	True				
ANR	1406418	EqualityExpression	c != eod		1405443	0		!=			
ANR	1406419	Identifier	c		1405443	0					
ANR	1406420	Identifier	eod		1405443	1					
ANR	1406421	PostIncDecOperationExpression	len ++	284:42:9433:9437	1405443	2	True				
ANR	1406422	Identifier	len		1405443	0					
ANR	1406423	IncDec	++		1405443	1					
ANR	1406424	ExpressionStatement	c = table [ c ] . prefix	285:12:9452:9471	1405443	3	True				
ANR	1406425	AssignmentExpression	c = table [ c ] . prefix		1405443	0		=			
ANR	1406426	Identifier	c		1405443	0					
ANR	1406427	MemberAccess	table [ c ] . prefix		1405443	1					
ANR	1406428	ArrayIndexing	table [ c ]		1405443	0					
ANR	1406429	Identifier	table		1405443	0					
ANR	1406430	Identifier	c		1405443	1					
ANR	1406431	Identifier	prefix		1405443	1					
ANR	1406432	ExpressionStatement	"if_debug2m ( 'w' , ss -> memory , ""[w]long code %d, length=%d\\n"" , code , len )"	286:8:9481:9551	1405443	2	True				
ANR	1406433	CallExpression	"if_debug2m ( 'w' , ss -> memory , ""[w]long code %d, length=%d\\n"" , code , len )"		1405443	0					
ANR	1406434	Callee	if_debug2m		1405443	0					
ANR	1406435	Identifier	if_debug2m		1405443	0					
ANR	1406436	ArgumentList	'w'		1405443	1					
ANR	1406437	Argument	'w'		1405443	0					
ANR	1406438	PrimaryExpression	'w'		1405443	0					
ANR	1406439	Argument	ss -> memory		1405443	1					
ANR	1406440	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1406441	Identifier	ss		1405443	0					
ANR	1406442	Identifier	memory		1405443	1					
ANR	1406443	Argument	"""[w]long code %d, length=%d\\n"""		1405443	2					
ANR	1406444	PrimaryExpression	"""[w]long code %d, length=%d\\n"""		1405443	0					
ANR	1406445	Argument	code		1405443	3					
ANR	1406446	Identifier	code		1405443	0					
ANR	1406447	Argument	len		1405443	4					
ANR	1406448	Identifier	len		1405443	0					
ANR	1406449	IfStatement	if ( wlimit - q < len )		1405443	67					
ANR	1406450	Condition	wlimit - q < len	288:8:9567:9582	1405443	0	True				
ANR	1406451	RelationalExpression	wlimit - q < len		1405443	0		<			
ANR	1406452	AdditiveExpression	wlimit - q		1405443	0		-			
ANR	1406453	Identifier	wlimit		1405443	0					
ANR	1406454	Identifier	q		1405443	1					
ANR	1406455	Identifier	len		1405443	1					
ANR	1406456	CompoundStatement		197:26:6676:6676	1405443	1					
ANR	1406457	ExpressionStatement	ss -> copy_code = code	289:8:9595:9615	1405443	0	True				
ANR	1406458	AssignmentExpression	ss -> copy_code = code		1405443	0		=			
ANR	1406459	PtrMemberAccess	ss -> copy_code		1405443	0					
ANR	1406460	Identifier	ss		1405443	0					
ANR	1406461	Identifier	copy_code		1405443	1					
ANR	1406462	Identifier	code		1405443	1					
ANR	1406463	ExpressionStatement	ss -> copy_left = ss -> copy_len = len	290:8:9625:9659	1405443	1	True				
ANR	1406464	AssignmentExpression	ss -> copy_left = ss -> copy_len = len		1405443	0		=			
ANR	1406465	PtrMemberAccess	ss -> copy_left		1405443	0					
ANR	1406466	Identifier	ss		1405443	0					
ANR	1406467	Identifier	copy_left		1405443	1					
ANR	1406468	AssignmentExpression	ss -> copy_len = len		1405443	1		=			
ANR	1406469	PtrMemberAccess	ss -> copy_len		1405443	0					
ANR	1406470	Identifier	ss		1405443	0					
ANR	1406471	Identifier	copy_len		1405443	1					
ANR	1406472	Identifier	len		1405443	1					
ANR	1406473	ExpressionStatement	status = 1	291:8:9669:9679	1405443	2	True				
ANR	1406474	AssignmentExpression	status = 1		1405443	0		=			
ANR	1406475	Identifier	status		1405443	0					
ANR	1406476	PrimaryExpression	1		1405443	1					
ANR	1406477	GotoStatement	goto out ;	292:8:9689:9697	1405443	3	True				
ANR	1406478	Identifier	out		1405443	0					
ANR	1406479	ExpressionStatement	dc = & table [ code ]	296:4:9831:9848	1405443	68	True				
ANR	1406480	AssignmentExpression	dc = & table [ code ]		1405443	0		=			
ANR	1406481	Identifier	dc		1405443	0					
ANR	1406482	UnaryOperationExpression	& table [ code ]		1405443	1					
ANR	1406483	UnaryOperator	&		1405443	0					
ANR	1406484	ArrayIndexing	table [ code ]		1405443	1					
ANR	1406485	Identifier	table		1405443	0					
ANR	1406486	Identifier	code		1405443	1					
ANR	1406487	SwitchStatement	switch ( len )		1405443	69					
ANR	1406488	Condition	len	297:12:9862:9864	1405443	0	True				
ANR	1406489	Identifier	len		1405443	0					
ANR	1406490	CompoundStatement		206:17:6958:6958	1405443	1					
ANR	1406491	Label	default :	298:8:9877:9884	1405443	0	True				
ANR	1406492	Identifier	default		1405443	0					
ANR	1406493	CompoundStatement		209:16:7007:7026	1405443	1					
ANR	1406494	IdentifierDeclStatement	byte * q1 = q += len ;	300:16:9916:9935	1405443	0	True				
ANR	1406495	IdentifierDecl	* q1 = q += len		1405443	0					
ANR	1406496	IdentifierDeclType	byte *		1405443	0					
ANR	1406497	Identifier	q1		1405443	1					
ANR	1406498	AssignmentExpression	* q1 = q += len		1405443	2		=			
ANR	1406499	Identifier	q1		1405443	0					
ANR	1406500	AssignmentExpression	q += len		1405443	1		+=			
ANR	1406501	Identifier	q		1405443	0					
ANR	1406502	Identifier	len		1405443	1					
ANR	1406503	ExpressionStatement	c = code	302:16:9954:9962	1405443	1	True				
ANR	1406504	AssignmentExpression	c = code		1405443	0		=			
ANR	1406505	Identifier	c		1405443	0					
ANR	1406506	Identifier	code		1405443	1					
ANR	1406507	DoStatement	do		1405443	2					
ANR	1406508	CompoundStatement		212:19:7074:7074	1405443	0					
ANR	1406509	ExpressionStatement	* q1 -- = ( dc = & table [ c ] ) -> datum	304:20:10005:10036	1405443	0	True				
ANR	1406510	AssignmentExpression	* q1 -- = ( dc = & table [ c ] ) -> datum		1405443	0		=			
ANR	1406511	UnaryOperationExpression	* q1 --		1405443	0					
ANR	1406512	UnaryOperator	*		1405443	0					
ANR	1406513	PostIncDecOperationExpression	q1 --		1405443	1					
ANR	1406514	Identifier	q1		1405443	0					
ANR	1406515	IncDec	--		1405443	1					
ANR	1406516	PtrMemberAccess	( dc = & table [ c ] ) -> datum		1405443	1					
ANR	1406517	AssignmentExpression	dc = & table [ c ]		1405443	0		=			
ANR	1406518	Identifier	dc		1405443	0					
ANR	1406519	UnaryOperationExpression	& table [ c ]		1405443	1					
ANR	1406520	UnaryOperator	&		1405443	0					
ANR	1406521	ArrayIndexing	table [ c ]		1405443	1					
ANR	1406522	Identifier	table		1405443	0					
ANR	1406523	Identifier	c		1405443	1					
ANR	1406524	Identifier	datum		1405443	1					
ANR	1406525	Condition	( c = dc -> prefix ) != eod	306:23:10079:10101	1405443	1	True				
ANR	1406526	EqualityExpression	( c = dc -> prefix ) != eod		1405443	0		!=			
ANR	1406527	AssignmentExpression	c = dc -> prefix		1405443	0		=			
ANR	1406528	Identifier	c		1405443	0					
ANR	1406529	PtrMemberAccess	dc -> prefix		1405443	1					
ANR	1406530	Identifier	dc		1405443	0					
ANR	1406531	Identifier	prefix		1405443	1					
ANR	1406532	Identifier	eod		1405443	1					
ANR	1406533	ExpressionStatement	b = q1 [ 1 ]	307:16:10121:10130	1405443	3	True				
ANR	1406534	AssignmentExpression	b = q1 [ 1 ]		1405443	0		=			
ANR	1406535	Identifier	b		1405443	0					
ANR	1406536	ArrayIndexing	q1 [ 1 ]		1405443	1					
ANR	1406537	Identifier	q1		1405443	0					
ANR	1406538	PrimaryExpression	1		1405443	1					
ANR	1406539	BreakStatement	break ;	309:12:10158:10163	1405443	2	True				
ANR	1406540	Label	case 3 :	310:8:10173:10179	1405443	3	True				
ANR	1406541	ExpressionStatement	q [ 3 ] = dc -> datum	311:12:10193:10209	1405443	4	True				
ANR	1406542	AssignmentExpression	q [ 3 ] = dc -> datum		1405443	0		=			
ANR	1406543	ArrayIndexing	q [ 3 ]		1405443	0					
ANR	1406544	Identifier	q		1405443	0					
ANR	1406545	PrimaryExpression	3		1405443	1					
ANR	1406546	PtrMemberAccess	dc -> datum		1405443	1					
ANR	1406547	Identifier	dc		1405443	0					
ANR	1406548	Identifier	datum		1405443	1					
ANR	1406549	ExpressionStatement	dc = & table [ dc -> prefix ]	312:12:10223:10246	1405443	5	True				
ANR	1406550	AssignmentExpression	dc = & table [ dc -> prefix ]		1405443	0		=			
ANR	1406551	Identifier	dc		1405443	0					
ANR	1406552	UnaryOperationExpression	& table [ dc -> prefix ]		1405443	1					
ANR	1406553	UnaryOperator	&		1405443	0					
ANR	1406554	ArrayIndexing	table [ dc -> prefix ]		1405443	1					
ANR	1406555	Identifier	table		1405443	0					
ANR	1406556	PtrMemberAccess	dc -> prefix		1405443	1					
ANR	1406557	Identifier	dc		1405443	0					
ANR	1406558	Identifier	prefix		1405443	1					
ANR	1406559	Label	case 2 :	313:8:10256:10262	1405443	6	True				
ANR	1406560	ExpressionStatement	q [ 2 ] = dc -> datum	314:12:10276:10292	1405443	7	True				
ANR	1406561	AssignmentExpression	q [ 2 ] = dc -> datum		1405443	0		=			
ANR	1406562	ArrayIndexing	q [ 2 ]		1405443	0					
ANR	1406563	Identifier	q		1405443	0					
ANR	1406564	PrimaryExpression	2		1405443	1					
ANR	1406565	PtrMemberAccess	dc -> datum		1405443	1					
ANR	1406566	Identifier	dc		1405443	0					
ANR	1406567	Identifier	datum		1405443	1					
ANR	1406568	ExpressionStatement	dc = & table [ dc -> prefix ]	315:12:10306:10329	1405443	8	True				
ANR	1406569	AssignmentExpression	dc = & table [ dc -> prefix ]		1405443	0		=			
ANR	1406570	Identifier	dc		1405443	0					
ANR	1406571	UnaryOperationExpression	& table [ dc -> prefix ]		1405443	1					
ANR	1406572	UnaryOperator	&		1405443	0					
ANR	1406573	ArrayIndexing	table [ dc -> prefix ]		1405443	1					
ANR	1406574	Identifier	table		1405443	0					
ANR	1406575	PtrMemberAccess	dc -> prefix		1405443	1					
ANR	1406576	Identifier	dc		1405443	0					
ANR	1406577	Identifier	prefix		1405443	1					
ANR	1406578	Label	case 1 :	316:8:10339:10345	1405443	9	True				
ANR	1406579	ExpressionStatement	q [ 1 ] = b = dc -> datum	317:12:10359:10379	1405443	10	True				
ANR	1406580	AssignmentExpression	q [ 1 ] = b = dc -> datum		1405443	0		=			
ANR	1406581	ArrayIndexing	q [ 1 ]		1405443	0					
ANR	1406582	Identifier	q		1405443	0					
ANR	1406583	PrimaryExpression	1		1405443	1					
ANR	1406584	AssignmentExpression	b = dc -> datum		1405443	1		=			
ANR	1406585	Identifier	b		1405443	0					
ANR	1406586	PtrMemberAccess	dc -> datum		1405443	1					
ANR	1406587	Identifier	dc		1405443	0					
ANR	1406588	Identifier	datum		1405443	1					
ANR	1406589	ExpressionStatement	q += len	318:12:10393:10401	1405443	11	True				
ANR	1406590	AssignmentExpression	q += len		1405443	0		+=			
ANR	1406591	Identifier	q		1405443	0					
ANR	1406592	Identifier	len		1405443	1					
ANR	1406593	Label	add :	320:2:10411:10414	1405443	70	True				
ANR	1406594	Identifier	add		1405443	0					
ANR	1406595	IfStatement	if ( prev_code >= 0 )		1405443	71					
ANR	1406596	Condition	prev_code >= 0	321:8:10462:10475	1405443	0	True				
ANR	1406597	RelationalExpression	prev_code >= 0		1405443	0		>=			
ANR	1406598	Identifier	prev_code		1405443	0					
ANR	1406599	PrimaryExpression	0		1405443	1					
ANR	1406600	CompoundStatement		230:24:7569:7569	1405443	1					
ANR	1406601	IfStatement	if ( ! old_tiff && next_code == lzw_decode_max )		1405443	0					
ANR	1406602	Condition	! old_tiff && next_code == lzw_decode_max	327:12:10691:10730	1405443	0	True				
ANR	1406603	AndExpression	! old_tiff && next_code == lzw_decode_max		1405443	0		&&			
ANR	1406604	UnaryOperationExpression	! old_tiff		1405443	0					
ANR	1406605	UnaryOperator	!		1405443	0					
ANR	1406606	Identifier	old_tiff		1405443	1					
ANR	1406607	EqualityExpression	next_code == lzw_decode_max		1405443	1		==			
ANR	1406608	Identifier	next_code		1405443	0					
ANR	1406609	Identifier	lzw_decode_max		1405443	1					
ANR	1406610	CompoundStatement		236:54:7824:7824	1405443	1					
ANR	1406611	IfStatement	if ( ! ss -> BlockData )		1405443	0					
ANR	1406612	Condition	! ss -> BlockData	334:16:11028:11041	1405443	0	True				
ANR	1406613	UnaryOperationExpression	! ss -> BlockData		1405443	0					
ANR	1406614	UnaryOperator	!		1405443	0					
ANR	1406615	PtrMemberAccess	ss -> BlockData		1405443	1					
ANR	1406616	Identifier	ss		1405443	0					
ANR	1406617	Identifier	BlockData		1405443	1					
ANR	1406618	CompoundStatement		243:32:8135:8135	1405443	1					
ANR	1406619	IfStatement	if ( bits_left < 8 && p >= rlimit && last )		1405443	0					
ANR	1406620	Condition	bits_left < 8 && p >= rlimit && last	335:20:11094:11129	1405443	0	True				
ANR	1406621	AndExpression	bits_left < 8 && p >= rlimit && last		1405443	0		&&			
ANR	1406622	RelationalExpression	bits_left < 8		1405443	0		<			
ANR	1406623	Identifier	bits_left		1405443	0					
ANR	1406624	PrimaryExpression	8		1405443	1					
ANR	1406625	AndExpression	p >= rlimit && last		1405443	1		&&			
ANR	1406626	RelationalExpression	p >= rlimit		1405443	0		>=			
ANR	1406627	Identifier	p		1405443	0					
ANR	1406628	Identifier	rlimit		1405443	1					
ANR	1406629	Identifier	last		1405443	1					
ANR	1406630	CompoundStatement		244:58:8223:8223	1405443	1					
ANR	1406631	GotoStatement	goto out ;	337:20:11194:11202	1405443	0	True				
ANR	1406632	Identifier	out		1405443	0					
ANR	1406633	IfStatement	if ( bits_left + ( ( rlimit - p ) << 3 ) < code_size )		1405443	1					
ANR	1406634	Condition	bits_left + ( ( rlimit - p ) << 3 ) < code_size	339:20:11242:11284	1405443	0	True				
ANR	1406635	RelationalExpression	bits_left + ( ( rlimit - p ) << 3 ) < code_size		1405443	0		<			
ANR	1406636	AdditiveExpression	bits_left + ( ( rlimit - p ) << 3 )		1405443	0		+			
ANR	1406637	Identifier	bits_left		1405443	0					
ANR	1406638	ShiftExpression	( rlimit - p ) << 3		1405443	1		<<			
ANR	1406639	AdditiveExpression	rlimit - p		1405443	0		-			
ANR	1406640	Identifier	rlimit		1405443	0					
ANR	1406641	Identifier	p		1405443	1					
ANR	1406642	PrimaryExpression	3		1405443	1					
ANR	1406643	Identifier	code_size		1405443	1					
ANR	1406644	CompoundStatement		248:65:8378:8378	1405443	1					
ANR	1406645	IfStatement	if ( last )		1405443	0					
ANR	1406646	Condition	last	344:24:11498:11501	1405443	0	True				
ANR	1406647	Identifier	last		1405443	0					
ANR	1406648	ExpressionStatement	status = ERRC	345:24:11528:11541	1405443	1	True				
ANR	1406649	AssignmentExpression	status = ERRC		1405443	0		=			
ANR	1406650	Identifier	status		1405443	0					
ANR	1406651	Identifier	ERRC		1405443	1					
ANR	1406652	GotoStatement	goto out ;	346:20:11563:11571	1405443	1	True				
ANR	1406653	Identifier	out		1405443	0					
ANR	1406654	IfStatement	if ( low_order )		1405443	2					
ANR	1406655	Condition	low_order	348:20:11611:11619	1405443	0	True				
ANR	1406656	Identifier	low_order		1405443	0					
ANR	1406657	CompoundStatement		257:31:8713:8713	1405443	1					
ANR	1406658	ExpressionStatement	code = bits >> ( 8 - bits_left )	349:20:11644:11674	1405443	0	True				
ANR	1406659	AssignmentExpression	code = bits >> ( 8 - bits_left )		1405443	0		=			
ANR	1406660	Identifier	code		1405443	0					
ANR	1406661	ShiftExpression	bits >> ( 8 - bits_left )		1405443	1		>>			
ANR	1406662	Identifier	bits		1405443	0					
ANR	1406663	AdditiveExpression	8 - bits_left		1405443	1		-			
ANR	1406664	PrimaryExpression	8		1405443	0					
ANR	1406665	Identifier	bits_left		1405443	1					
ANR	1406666	ExpressionStatement	code += ( bits = * ++ p ) << bits_left	350:20:11696:11730	1405443	1	True				
ANR	1406667	AssignmentExpression	code += ( bits = * ++ p ) << bits_left		1405443	0		+=			
ANR	1406668	Identifier	code		1405443	0					
ANR	1406669	ShiftExpression	( bits = * ++ p ) << bits_left		1405443	1		<<			
ANR	1406670	AssignmentExpression	bits = * ++ p		1405443	0		=			
ANR	1406671	Identifier	bits		1405443	0					
ANR	1406672	UnaryOperationExpression	* ++ p		1405443	1					
ANR	1406673	UnaryOperator	*		1405443	0					
ANR	1406674	UnaryExpression	++ p		1405443	1					
ANR	1406675	IncDec	++		1405443	0					
ANR	1406676	Identifier	p		1405443	1					
ANR	1406677	Identifier	bits_left		1405443	1					
ANR	1406678	IfStatement	if ( bits_left + 8 < code_size )		1405443	2					
ANR	1406679	Condition	bits_left + 8 < code_size	351:24:11756:11780	1405443	0	True				
ANR	1406680	RelationalExpression	bits_left + 8 < code_size		1405443	0		<			
ANR	1406681	AdditiveExpression	bits_left + 8		1405443	0		+			
ANR	1406682	Identifier	bits_left		1405443	0					
ANR	1406683	PrimaryExpression	8		1405443	1					
ANR	1406684	Identifier	code_size		1405443	1					
ANR	1406685	ExpressionStatement	code += ( bits = * ++ p ) << ( bits_left + 8 )	352:24:11807:11847	1405443	1	True				
ANR	1406686	AssignmentExpression	code += ( bits = * ++ p ) << ( bits_left + 8 )		1405443	0		+=			
ANR	1406687	Identifier	code		1405443	0					
ANR	1406688	ShiftExpression	( bits = * ++ p ) << ( bits_left + 8 )		1405443	1		<<			
ANR	1406689	AssignmentExpression	bits = * ++ p		1405443	0		=			
ANR	1406690	Identifier	bits		1405443	0					
ANR	1406691	UnaryOperationExpression	* ++ p		1405443	1					
ANR	1406692	UnaryOperator	*		1405443	0					
ANR	1406693	UnaryExpression	++ p		1405443	1					
ANR	1406694	IncDec	++		1405443	0					
ANR	1406695	Identifier	p		1405443	1					
ANR	1406696	AdditiveExpression	bits_left + 8		1405443	1		+			
ANR	1406697	Identifier	bits_left		1405443	0					
ANR	1406698	PrimaryExpression	8		1405443	1					
ANR	1406699	ElseStatement	else		1405443	0					
ANR	1406700	CompoundStatement		262:23:8963:8963	1405443	0					
ANR	1406701	ExpressionStatement	code = bits & ( ( 1 << bits_left ) - 1 )	354:20:11894:11930	1405443	0	True				
ANR	1406702	AssignmentExpression	code = bits & ( ( 1 << bits_left ) - 1 )		1405443	0		=			
ANR	1406703	Identifier	code		1405443	0					
ANR	1406704	BitAndExpression	bits & ( ( 1 << bits_left ) - 1 )		1405443	1		&			
ANR	1406705	Identifier	bits		1405443	0					
ANR	1406706	AdditiveExpression	( 1 << bits_left ) - 1		1405443	1		-			
ANR	1406707	ShiftExpression	1 << bits_left		1405443	0		<<			
ANR	1406708	PrimaryExpression	1		1405443	0					
ANR	1406709	Identifier	bits_left		1405443	1					
ANR	1406710	PrimaryExpression	1		1405443	1					
ANR	1406711	ExpressionStatement	code = ( code << 8 ) + ( bits = * ++ p )	355:20:11952:11986	1405443	1	True				
ANR	1406712	AssignmentExpression	code = ( code << 8 ) + ( bits = * ++ p )		1405443	0		=			
ANR	1406713	Identifier	code		1405443	0					
ANR	1406714	AdditiveExpression	( code << 8 ) + ( bits = * ++ p )		1405443	1		+			
ANR	1406715	ShiftExpression	code << 8		1405443	0		<<			
ANR	1406716	Identifier	code		1405443	0					
ANR	1406717	PrimaryExpression	8		1405443	1					
ANR	1406718	AssignmentExpression	bits = * ++ p		1405443	1		=			
ANR	1406719	Identifier	bits		1405443	0					
ANR	1406720	UnaryOperationExpression	* ++ p		1405443	1					
ANR	1406721	UnaryOperator	*		1405443	0					
ANR	1406722	UnaryExpression	++ p		1405443	1					
ANR	1406723	IncDec	++		1405443	0					
ANR	1406724	Identifier	p		1405443	1					
ANR	1406725	IfStatement	if ( bits_left + 8 < code_size )		1405443	2					
ANR	1406726	Condition	bits_left + 8 < code_size	356:24:12012:12036	1405443	0	True				
ANR	1406727	RelationalExpression	bits_left + 8 < code_size		1405443	0		<			
ANR	1406728	AdditiveExpression	bits_left + 8		1405443	0		+			
ANR	1406729	Identifier	bits_left		1405443	0					
ANR	1406730	PrimaryExpression	8		1405443	1					
ANR	1406731	Identifier	code_size		1405443	1					
ANR	1406732	ExpressionStatement	code = ( code << 8 ) + ( bits = * ++ p )	357:24:12063:12097	1405443	1	True				
ANR	1406733	AssignmentExpression	code = ( code << 8 ) + ( bits = * ++ p )		1405443	0		=			
ANR	1406734	Identifier	code		1405443	0					
ANR	1406735	AdditiveExpression	( code << 8 ) + ( bits = * ++ p )		1405443	1		+			
ANR	1406736	ShiftExpression	code << 8		1405443	0		<<			
ANR	1406737	Identifier	code		1405443	0					
ANR	1406738	PrimaryExpression	8		1405443	1					
ANR	1406739	AssignmentExpression	bits = * ++ p		1405443	1		=			
ANR	1406740	Identifier	bits		1405443	0					
ANR	1406741	UnaryOperationExpression	* ++ p		1405443	1					
ANR	1406742	UnaryOperator	*		1405443	0					
ANR	1406743	UnaryExpression	++ p		1405443	1					
ANR	1406744	IncDec	++		1405443	0					
ANR	1406745	Identifier	p		1405443	1					
ANR	1406746	ExpressionStatement	code >>= ( bits_left - code_size ) & 7	358:20:12119:12155	1405443	3	True				
ANR	1406747	AssignmentExpression	code >>= ( bits_left - code_size ) & 7		1405443	0		>>=			
ANR	1406748	Identifier	code		1405443	0					
ANR	1406749	BitAndExpression	( bits_left - code_size ) & 7		1405443	1		&			
ANR	1406750	AdditiveExpression	bits_left - code_size		1405443	0		-			
ANR	1406751	Identifier	bits_left		1405443	0					
ANR	1406752	Identifier	code_size		1405443	1					
ANR	1406753	PrimaryExpression	7		1405443	1					
ANR	1406754	ExpressionStatement	bits_left = ( bits_left - code_size ) & 7	360:16:12191:12230	1405443	3	True				
ANR	1406755	AssignmentExpression	bits_left = ( bits_left - code_size ) & 7		1405443	0		=			
ANR	1406756	Identifier	bits_left		1405443	0					
ANR	1406757	BitAndExpression	( bits_left - code_size ) & 7		1405443	1		&			
ANR	1406758	AdditiveExpression	bits_left - code_size		1405443	0		-			
ANR	1406759	Identifier	bits_left		1405443	0					
ANR	1406760	Identifier	code_size		1405443	1					
ANR	1406761	PrimaryExpression	7		1405443	1					
ANR	1406762	IfStatement	if ( code == code_reset )		1405443	4					
ANR	1406763	Condition	code == code_reset	361:20:12252:12269	1405443	0	True				
ANR	1406764	EqualityExpression	code == code_reset		1405443	0		==			
ANR	1406765	Identifier	code		1405443	0					
ANR	1406766	Identifier	code_reset		1405443	1					
ANR	1406767	GotoStatement	goto reset ;	362:20:12292:12302	1405443	1	True				
ANR	1406768	Identifier	reset		1405443	0					
ANR	1406769	ExpressionStatement	status = ERRC	364:12:12330:12343	1405443	1	True				
ANR	1406770	AssignmentExpression	status = ERRC		1405443	0		=			
ANR	1406771	Identifier	status		1405443	0					
ANR	1406772	Identifier	ERRC		1405443	1					
ANR	1406773	GotoStatement	goto out ;	365:12:12357:12365	1405443	2	True				
ANR	1406774	Identifier	out		1405443	0					
ANR	1406775	IfStatement	if ( next_code < lzw_decode_max )		1405443	1					
ANR	1406776	Condition	next_code < lzw_decode_max	367:12:12389:12414	1405443	0	True				
ANR	1406777	RelationalExpression	next_code < lzw_decode_max		1405443	0		<			
ANR	1406778	Identifier	next_code		1405443	0					
ANR	1406779	Identifier	lzw_decode_max		1405443	1					
ANR	1406780	CompoundStatement		276:40:9508:9508	1405443	1					
ANR	1406781	ExpressionStatement	dc_next -> datum = b	368:12:12431:12449	1405443	0	True				
ANR	1406782	AssignmentExpression	dc_next -> datum = b		1405443	0		=			
ANR	1406783	PtrMemberAccess	dc_next -> datum		1405443	0					
ANR	1406784	Identifier	dc_next		1405443	0					
ANR	1406785	Identifier	datum		1405443	1					
ANR	1406786	Identifier	b		1405443	1					
ANR	1406787	ExpressionStatement	"dc_next -> len = min ( prev_len , 254 ) + 1"	369:12:12490:12527	1405443	1	True				
ANR	1406788	AssignmentExpression	"dc_next -> len = min ( prev_len , 254 ) + 1"		1405443	0		=			
ANR	1406789	PtrMemberAccess	dc_next -> len		1405443	0					
ANR	1406790	Identifier	dc_next		1405443	0					
ANR	1406791	Identifier	len		1405443	1					
ANR	1406792	AdditiveExpression	"min ( prev_len , 254 ) + 1"		1405443	1		+			
ANR	1406793	CallExpression	"min ( prev_len , 254 )"		1405443	0					
ANR	1406794	Callee	min		1405443	0					
ANR	1406795	Identifier	min		1405443	0					
ANR	1406796	ArgumentList	prev_len		1405443	1					
ANR	1406797	Argument	prev_len		1405443	0					
ANR	1406798	Identifier	prev_len		1405443	0					
ANR	1406799	Argument	254		1405443	1					
ANR	1406800	PrimaryExpression	254		1405443	0					
ANR	1406801	PrimaryExpression	1		1405443	1					
ANR	1406802	ExpressionStatement	dc_next -> prefix = prev_code	370:12:12541:12568	1405443	2	True				
ANR	1406803	AssignmentExpression	dc_next -> prefix = prev_code		1405443	0		=			
ANR	1406804	PtrMemberAccess	dc_next -> prefix		1405443	0					
ANR	1406805	Identifier	dc_next		1405443	0					
ANR	1406806	Identifier	prefix		1405443	1					
ANR	1406807	Identifier	prev_code		1405443	1					
ANR	1406808	ExpressionStatement	dc_next ++	371:12:12582:12591	1405443	3	True				
ANR	1406809	PostIncDecOperationExpression	dc_next ++		1405443	0					
ANR	1406810	Identifier	dc_next		1405443	0					
ANR	1406811	IncDec	++		1405443	1					
ANR	1406812	ExpressionStatement	"if_debug4m ( 'W' , ss -> memory , ""[W]adding 0x%x=0x%x+%c(%d)\\n"" , next_code , prev_code , b , min ( len , 255 ) )"	372:12:12605:12727	1405443	4	True				
ANR	1406813	CallExpression	"if_debug4m ( 'W' , ss -> memory , ""[W]adding 0x%x=0x%x+%c(%d)\\n"" , next_code , prev_code , b , min ( len , 255 ) )"		1405443	0					
ANR	1406814	Callee	if_debug4m		1405443	0					
ANR	1406815	Identifier	if_debug4m		1405443	0					
ANR	1406816	ArgumentList	'W'		1405443	1					
ANR	1406817	Argument	'W'		1405443	0					
ANR	1406818	PrimaryExpression	'W'		1405443	0					
ANR	1406819	Argument	ss -> memory		1405443	1					
ANR	1406820	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1406821	Identifier	ss		1405443	0					
ANR	1406822	Identifier	memory		1405443	1					
ANR	1406823	Argument	"""[W]adding 0x%x=0x%x+%c(%d)\\n"""		1405443	2					
ANR	1406824	PrimaryExpression	"""[W]adding 0x%x=0x%x+%c(%d)\\n"""		1405443	0					
ANR	1406825	Argument	next_code		1405443	3					
ANR	1406826	Identifier	next_code		1405443	0					
ANR	1406827	Argument	prev_code		1405443	4					
ANR	1406828	Identifier	prev_code		1405443	0					
ANR	1406829	Argument	b		1405443	5					
ANR	1406830	Identifier	b		1405443	0					
ANR	1406831	Argument	"min ( len , 255 )"		1405443	6					
ANR	1406832	CallExpression	"min ( len , 255 )"		1405443	0					
ANR	1406833	Callee	min		1405443	0					
ANR	1406834	Identifier	min		1405443	0					
ANR	1406835	ArgumentList	len		1405443	1					
ANR	1406836	Argument	len		1405443	0					
ANR	1406837	Identifier	len		1405443	0					
ANR	1406838	Argument	255		1405443	1					
ANR	1406839	PrimaryExpression	255		1405443	0					
ANR	1406840	IfStatement	if ( ++ next_code == switch_code )		1405443	2					
ANR	1406841	Condition	++ next_code == switch_code	375:12:12751:12776	1405443	0	True				
ANR	1406842	EqualityExpression	++ next_code == switch_code		1405443	0		==			
ANR	1406843	UnaryExpression	++ next_code		1405443	0					
ANR	1406844	IncDec	++		1405443	0					
ANR	1406845	Identifier	next_code		1405443	1					
ANR	1406846	Identifier	switch_code		1405443	1					
ANR	1406847	CompoundStatement		284:40:9870:9870	1405443	1					
ANR	1406848	IfStatement	if ( next_code < lzw_decode_max - 1 )		1405443	0					
ANR	1406849	Condition	next_code < lzw_decode_max - 1	378:16:12941:12970	1405443	0	True				
ANR	1406850	RelationalExpression	next_code < lzw_decode_max - 1		1405443	0		<			
ANR	1406851	Identifier	next_code		1405443	0					
ANR	1406852	AdditiveExpression	lzw_decode_max - 1		1405443	1		-			
ANR	1406853	Identifier	lzw_decode_max		1405443	0					
ANR	1406854	PrimaryExpression	1		1405443	1					
ANR	1406855	CompoundStatement		287:48:10064:10064	1405443	1					
ANR	1406856	ExpressionStatement	code_size ++	379:16:12991:13002	1405443	0	True				
ANR	1406857	PostIncDecOperationExpression	code_size ++		1405443	0					
ANR	1406858	Identifier	code_size		1405443	0					
ANR	1406859	IncDec	++		1405443	1					
ANR	1406860	ExpressionStatement	set_code_size ( )	380:16:13020:13035	1405443	1	True				
ANR	1406861	CallExpression	set_code_size ( )		1405443	0					
ANR	1406862	Callee	set_code_size		1405443	0					
ANR	1406863	Identifier	set_code_size		1405443	0					
ANR	1406864	ArgumentList			1405443	1					
ANR	1406865	ExpressionStatement	"if_debug2m ( 'w' , ss -> memory , ""[w]crossed power of 2: new code_size=%d, next_code=%d\\n"" , code_size , next_code )"	381:16:13053:13188	1405443	2	True				
ANR	1406866	CallExpression	"if_debug2m ( 'w' , ss -> memory , ""[w]crossed power of 2: new code_size=%d, next_code=%d\\n"" , code_size , next_code )"		1405443	0					
ANR	1406867	Callee	if_debug2m		1405443	0					
ANR	1406868	Identifier	if_debug2m		1405443	0					
ANR	1406869	ArgumentList	'w'		1405443	1					
ANR	1406870	Argument	'w'		1405443	0					
ANR	1406871	PrimaryExpression	'w'		1405443	0					
ANR	1406872	Argument	ss -> memory		1405443	1					
ANR	1406873	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1406874	Identifier	ss		1405443	0					
ANR	1406875	Identifier	memory		1405443	1					
ANR	1406876	Argument	"""[w]crossed power of 2: new code_size=%d, next_code=%d\\n"""		1405443	2					
ANR	1406877	PrimaryExpression	"""[w]crossed power of 2: new code_size=%d, next_code=%d\\n"""		1405443	0					
ANR	1406878	Argument	code_size		1405443	3					
ANR	1406879	Identifier	code_size		1405443	0					
ANR	1406880	Argument	next_code		1405443	4					
ANR	1406881	Identifier	next_code		1405443	0					
ANR	1406882	ExpressionStatement	prev_code = code	386:4:13224:13240	1405443	72	True				
ANR	1406883	AssignmentExpression	prev_code = code		1405443	0		=			
ANR	1406884	Identifier	prev_code		1405443	0					
ANR	1406885	Identifier	code		1405443	1					
ANR	1406886	ExpressionStatement	prev_len = len	387:4:13246:13260	1405443	73	True				
ANR	1406887	AssignmentExpression	prev_len = len		1405443	0		=			
ANR	1406888	Identifier	prev_len		1405443	0					
ANR	1406889	Identifier	len		1405443	1					
ANR	1406890	GotoStatement	goto top ;	388:4:13266:13274	1405443	74	True				
ANR	1406891	Identifier	top		1405443	0					
ANR	1406892	Label	out :	389:2:13278:13281	1405443	75	True				
ANR	1406893	Identifier	out		1405443	0					
ANR	1406894	ExpressionStatement	pr -> ptr = p	389:6:13282:13293	1405443	76	True				
ANR	1406895	AssignmentExpression	pr -> ptr = p		1405443	0		=			
ANR	1406896	PtrMemberAccess	pr -> ptr		1405443	0					
ANR	1406897	Identifier	pr		1405443	0					
ANR	1406898	Identifier	ptr		1405443	1					
ANR	1406899	Identifier	p		1405443	1					
ANR	1406900	ExpressionStatement	pw -> ptr = q	390:4:13299:13310	1405443	77	True				
ANR	1406901	AssignmentExpression	pw -> ptr = q		1405443	0		=			
ANR	1406902	PtrMemberAccess	pw -> ptr		1405443	0					
ANR	1406903	Identifier	pw		1405443	0					
ANR	1406904	Identifier	ptr		1405443	1					
ANR	1406905	Identifier	q		1405443	1					
ANR	1406906	ExpressionStatement	ss -> code_size = code_size	391:4:13316:13341	1405443	78	True				
ANR	1406907	AssignmentExpression	ss -> code_size = code_size		1405443	0		=			
ANR	1406908	PtrMemberAccess	ss -> code_size		1405443	0					
ANR	1406909	Identifier	ss		1405443	0					
ANR	1406910	Identifier	code_size		1405443	1					
ANR	1406911	Identifier	code_size		1405443	1					
ANR	1406912	ExpressionStatement	ss -> prev_code = prev_code	392:4:13347:13372	1405443	79	True				
ANR	1406913	AssignmentExpression	ss -> prev_code = prev_code		1405443	0		=			
ANR	1406914	PtrMemberAccess	ss -> prev_code		1405443	0					
ANR	1406915	Identifier	ss		1405443	0					
ANR	1406916	Identifier	prev_code		1405443	1					
ANR	1406917	Identifier	prev_code		1405443	1					
ANR	1406918	ExpressionStatement	ss -> prev_len = prev_len	393:4:13378:13401	1405443	80	True				
ANR	1406919	AssignmentExpression	ss -> prev_len = prev_len		1405443	0		=			
ANR	1406920	PtrMemberAccess	ss -> prev_len		1405443	0					
ANR	1406921	Identifier	ss		1405443	0					
ANR	1406922	Identifier	prev_len		1405443	1					
ANR	1406923	Identifier	prev_len		1405443	1					
ANR	1406924	ExpressionStatement	ss -> bits = bits	394:4:13407:13422	1405443	81	True				
ANR	1406925	AssignmentExpression	ss -> bits = bits		1405443	0		=			
ANR	1406926	PtrMemberAccess	ss -> bits		1405443	0					
ANR	1406927	Identifier	ss		1405443	0					
ANR	1406928	Identifier	bits		1405443	1					
ANR	1406929	Identifier	bits		1405443	1					
ANR	1406930	ExpressionStatement	ss -> bits_left = bits_left	395:4:13428:13453	1405443	82	True				
ANR	1406931	AssignmentExpression	ss -> bits_left = bits_left		1405443	0		=			
ANR	1406932	PtrMemberAccess	ss -> bits_left		1405443	0					
ANR	1406933	Identifier	ss		1405443	0					
ANR	1406934	Identifier	bits_left		1405443	1					
ANR	1406935	Identifier	bits_left		1405443	1					
ANR	1406936	ExpressionStatement	ss -> bytes_left = bytes_left	396:4:13459:13486	1405443	83	True				
ANR	1406937	AssignmentExpression	ss -> bytes_left = bytes_left		1405443	0		=			
ANR	1406938	PtrMemberAccess	ss -> bytes_left		1405443	0					
ANR	1406939	Identifier	ss		1405443	0					
ANR	1406940	Identifier	bytes_left		1405443	1					
ANR	1406941	Identifier	bytes_left		1405443	1					
ANR	1406942	ExpressionStatement	ss -> next_code = next_code	397:4:13492:13517	1405443	84	True				
ANR	1406943	AssignmentExpression	ss -> next_code = next_code		1405443	0		=			
ANR	1406944	PtrMemberAccess	ss -> next_code		1405443	0					
ANR	1406945	Identifier	ss		1405443	0					
ANR	1406946	Identifier	next_code		1405443	1					
ANR	1406947	Identifier	next_code		1405443	1					
ANR	1406948	ExpressionStatement	"if_debug3m ( 'w' , ss -> memory , ""[w]decoded %d bytes, prev_code=%d, next_code=%d\\n"" , ( int ) ( q - q0 ) , prev_code , next_code )"	398:4:13523:13655	1405443	85	True				
ANR	1406949	CallExpression	"if_debug3m ( 'w' , ss -> memory , ""[w]decoded %d bytes, prev_code=%d, next_code=%d\\n"" , ( int ) ( q - q0 ) , prev_code , next_code )"		1405443	0					
ANR	1406950	Callee	if_debug3m		1405443	0					
ANR	1406951	Identifier	if_debug3m		1405443	0					
ANR	1406952	ArgumentList	'w'		1405443	1					
ANR	1406953	Argument	'w'		1405443	0					
ANR	1406954	PrimaryExpression	'w'		1405443	0					
ANR	1406955	Argument	ss -> memory		1405443	1					
ANR	1406956	PtrMemberAccess	ss -> memory		1405443	0					
ANR	1406957	Identifier	ss		1405443	0					
ANR	1406958	Identifier	memory		1405443	1					
ANR	1406959	Argument	"""[w]decoded %d bytes, prev_code=%d, next_code=%d\\n"""		1405443	2					
ANR	1406960	PrimaryExpression	"""[w]decoded %d bytes, prev_code=%d, next_code=%d\\n"""		1405443	0					
ANR	1406961	Argument	( int ) ( q - q0 )		1405443	3					
ANR	1406962	CastExpression	( int ) ( q - q0 )		1405443	0					
ANR	1406963	CastTarget	int		1405443	0					
ANR	1406964	AdditiveExpression	q - q0		1405443	1		-			
ANR	1406965	Identifier	q		1405443	0					
ANR	1406966	Identifier	q0		1405443	1					
ANR	1406967	Argument	prev_code		1405443	4					
ANR	1406968	Identifier	prev_code		1405443	0					
ANR	1406969	Argument	next_code		1405443	5					
ANR	1406970	Identifier	next_code		1405443	0					
ANR	1406971	ReturnStatement	return status ;	400:4:13661:13674	1405443	86	True				
ANR	1406972	Identifier	status		1405443	0					
ANR	1406973	ReturnType	static int		1405443	1					
ANR	1406974	Identifier	s_LZWD_process		1405443	2					
ANR	1406975	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1405443	3					
ANR	1406976	Parameter	stream_state * st	90:15:2812:2828	1405443	0	True				
ANR	1406977	ParameterType	stream_state *		1405443	0					
ANR	1406978	Identifier	st		1405443	1					
ANR	1406979	Parameter	stream_cursor_read * pr	90:34:2831:2853	1405443	1	True				
ANR	1406980	ParameterType	stream_cursor_read *		1405443	0					
ANR	1406981	Identifier	pr		1405443	1					
ANR	1406982	Parameter	stream_cursor_write * pw	91:15:2871:2894	1405443	2	True				
ANR	1406983	ParameterType	stream_cursor_write *		1405443	0					
ANR	1406984	Identifier	pw		1405443	1					
ANR	1406985	Parameter	bool last	91:41:2897:2905	1405443	3	True				
ANR	1406986	ParameterType	bool		1405443	0					
ANR	1406987	Identifier	last		1405443	1					
ANR	1406988	CFGEntryNode	ENTRY		1405443		True				
ANR	1406989	CFGExitNode	EXIT		1405443		True				
ANR	1406990	Symbol	ss -> BlockData		1405443						
ANR	1406991	Symbol	pr		1405443						
ANR	1406992	Symbol	ss -> copy_len		1405443						
ANR	1406993	Symbol	table [ code ] . len		1405443						
ANR	1406994	Symbol	lzw_decode_max		1405443						
ANR	1406995	Symbol	* ss		1405443						
ANR	1406996	Symbol	* q1		1405443						
ANR	1406997	Symbol	prev_len		1405443						
ANR	1406998	Symbol	pw		1405443						
ANR	1406999	Symbol	wlen		1405443						
ANR	1407000	Symbol	pr -> limit		1405443						
ANR	1407001	Symbol	ss -> OldTiff		1405443						
ANR	1407002	Symbol	code_reset		1405443						
ANR	1407003	Symbol	* dc_next		1405443						
ANR	1407004	Symbol	ss -> prev_len		1405443						
ANR	1407005	Symbol	dc_next -> len		1405443						
ANR	1407006	Symbol	len		1405443						
ANR	1407007	Symbol	ss -> code_size		1405443						
ANR	1407008	Symbol	ss -> table		1405443						
ANR	1407009	Symbol	wlimit		1405443						
ANR	1407010	Symbol	ss -> bytes_left		1405443						
ANR	1407011	Symbol	( dc = & table [ c ] ) -> datum		1405443						
ANR	1407012	Symbol	dc_next -> prefix		1405443						
ANR	1407013	Symbol	pr -> ptr		1405443						
ANR	1407014	Symbol	ss -> copy_code		1405443						
ANR	1407015	Symbol	ss -> table . decode		1405443						
ANR	1407016	Symbol	pw -> ptr		1405443						
ANR	1407017	Symbol	rlimit		1405443						
ANR	1407018	Symbol	dc_next -> datum		1405443						
ANR	1407019	Symbol	last		1405443						
ANR	1407020	Symbol	ss -> prev_code		1405443						
ANR	1407021	Symbol	bytes_left		1405443						
ANR	1407022	Symbol	* dc		1405443						
ANR	1407023	Symbol	prev_code		1405443						
ANR	1407024	Symbol	bits		1405443						
ANR	1407025	Symbol	* table		1405443						
ANR	1407026	Symbol	dc -> datum		1405443						
ANR	1407027	Symbol	* pr		1405443						
ANR	1407028	Symbol	bits_left		1405443						
ANR	1407029	Symbol	* pw		1405443						
ANR	1407030	Symbol	ss -> next_code		1405443						
ANR	1407031	Symbol	code_mask		1405443						
ANR	1407032	Symbol	code_escape		1405443						
ANR	1407033	Symbol	ss -> InitialCodeLength		1405443						
ANR	1407034	Symbol	ss -> copy_left		1405443						
ANR	1407035	Symbol	next_code		1405443						
ANR	1407036	Symbol	ERRC		1405443						
ANR	1407037	Symbol	* code		1405443						
ANR	1407038	Symbol	status		1405443						
ANR	1407039	Symbol	code_size		1405443						
ANR	1407040	Symbol	ss -> bits		1405443						
ANR	1407041	Symbol	ss -> memory		1405443						
ANR	1407042	Symbol	code		1405443						
ANR	1407043	Symbol	* q1 --		1405443						
ANR	1407044	Symbol	EOFC		1405443						
ANR	1407045	Symbol	ss -> FirstBitLowOrder		1405443						
ANR	1407046	Symbol	pw -> limit		1405443						
ANR	1407047	Symbol	set_code_size		1405443						
ANR	1407048	Symbol	min		1405443						
ANR	1407049	Symbol	old_tiff		1405443						
ANR	1407050	Symbol	table [ c ] . prefix		1405443						
ANR	1407051	Symbol	rlen		1405443						
ANR	1407052	Symbol	low_order		1405443						
ANR	1407053	Symbol	ss -> bits_left		1405443						
ANR	1407054	Symbol	table		1405443						
ANR	1407055	Symbol	q0		1405443						
ANR	1407056	Symbol	ss		1405443						
ANR	1407057	Symbol	code_eod		1405443						
ANR	1407058	Symbol	q1		1405443						
ANR	1407059	Symbol	st		1405443						
ANR	1407060	Symbol	b		1405443						
ANR	1407061	Symbol	c		1405443						
ANR	1407062	Symbol	* ++ p		1405443						
ANR	1407063	Symbol	code_0		1405443						
ANR	1407064	Symbol	* c		1405443						
ANR	1407065	Symbol	n		1405443						
ANR	1407066	Symbol	p		1405443						
ANR	1407067	Symbol	dc -> prefix		1405443						
ANR	1407068	Symbol	q		1405443						
ANR	1407069	Symbol	* p		1405443						
ANR	1407070	Symbol	eod		1405443						
ANR	1407071	Symbol	* q		1405443						
ANR	1407072	Symbol	switch_code		1405443						
ANR	1407073	Symbol	dc_next		1405443						
ANR	1407074	Symbol	dc		1405443						
ANR	1407075	DeclStmt									
ANR	1407076	Decl							const stream_template	const stream_template	s_LZWD_template
