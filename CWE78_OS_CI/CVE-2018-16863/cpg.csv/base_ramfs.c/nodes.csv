command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1346090	File	data/converged/CVE-2018-16863_ghostpdl/base_ramfs.c								
ANR	1346091	ClassDef	_ramfs	32:8:847:1005							
ANR	1346092	DeclStmt									
ANR	1346093	Decl							struct _ramdirent	struct _ramdirent *	files
ANR	1346094	DeclStmt									
ANR	1346095	Decl							struct _ramfs_enum	struct _ramfs_enum *	active_enums
ANR	1346096	DeclStmt									
ANR	1346097	Decl							gs_memory_t	gs_memory_t *	memory
ANR	1346098	DeclStmt									
ANR	1346099	Decl							int	int	blocksfree
ANR	1346100	DeclStmt									
ANR	1346101	Decl							int	int	last_error
ANR	1346102	DeclStmt									
ANR	1346103	Decl							_ramfs	_ramfs	__ramfs
ANR	1346104	ClassDef	_ramdirent	42:0:1071:1168							
ANR	1346105	DeclStmt									
ANR	1346106	Decl							char	char *	filename
ANR	1346107	DeclStmt									
ANR	1346108	Decl							struct _ramfile	struct _ramfile *	inode
ANR	1346109	DeclStmt									
ANR	1346110	Decl							struct _ramdirent	struct _ramdirent *	next
ANR	1346111	ClassDef	_ramfile	50:8:1255:1386							
ANR	1346112	DeclStmt									
ANR	1346113	Decl							ramfs	ramfs *	fs
ANR	1346114	DeclStmt									
ANR	1346115	Decl							int	int	refcount
ANR	1346116	DeclStmt									
ANR	1346117	Decl							int	int	size
ANR	1346118	DeclStmt									
ANR	1346119	Decl							int	int	blocks
ANR	1346120	DeclStmt									
ANR	1346121	Decl							int	int	blocklist_size
ANR	1346122	DeclStmt									
ANR	1346123	Decl							char	char * *	data
ANR	1346124	DeclStmt									
ANR	1346125	Decl							_ramfile	_ramfile	ramfile
ANR	1346126	ClassDef	_ramhandle	61:0:1458:1549							
ANR	1346127	DeclStmt									
ANR	1346128	Decl							ramfile	ramfile *	file
ANR	1346129	DeclStmt									
ANR	1346130	Decl							int	int	last_error
ANR	1346131	DeclStmt									
ANR	1346132	Decl							int	int	filepos
ANR	1346133	DeclStmt									
ANR	1346134	Decl							int	int	mode
ANR	1346135	ClassDef	_ramfs_enum	70:0:1628:1719							
ANR	1346136	DeclStmt									
ANR	1346137	Decl							ramfs	ramfs *	fs
ANR	1346138	DeclStmt									
ANR	1346139	Decl							ramdirent	ramdirent *	current
ANR	1346140	DeclStmt									
ANR	1346141	Decl							struct _ramfs_enum	struct _ramfs_enum *	next
ANR	1346142	DeclStmt									
ANR	1346143	Decl							void	void ( ramfile * inode )	unlink_node
ANR	1346144	DeclStmt									
ANR	1346145	Decl							int	"int ( ramhandle * handle , int size )"	ramfile_truncate
ANR	1346146	Function	ramfs_new	81:0:1902:2279							
ANR	1346147	FunctionDef	"ramfs_new (gs_memory_t * mem , int size)"		1346146	0					
ANR	1346148	CompoundStatement		82:0:1948:2279	1346146	0					
ANR	1346149	IdentifierDeclStatement	"ramfs * fs = gs_alloc_struct ( mem -> non_gc_memory , ramfs , & st_ramfs , ""ramfs_new"" ) ;"	83:4:1954:2033	1346146	0	True				
ANR	1346150	IdentifierDecl	"* fs = gs_alloc_struct ( mem -> non_gc_memory , ramfs , & st_ramfs , ""ramfs_new"" )"		1346146	0					
ANR	1346151	IdentifierDeclType	ramfs *		1346146	0					
ANR	1346152	Identifier	fs		1346146	1					
ANR	1346153	AssignmentExpression	"* fs = gs_alloc_struct ( mem -> non_gc_memory , ramfs , & st_ramfs , ""ramfs_new"" )"		1346146	2		=			
ANR	1346154	Identifier	fs		1346146	0					
ANR	1346155	CallExpression	"gs_alloc_struct ( mem -> non_gc_memory , ramfs , & st_ramfs , ""ramfs_new"" )"		1346146	1					
ANR	1346156	Callee	gs_alloc_struct		1346146	0					
ANR	1346157	Identifier	gs_alloc_struct		1346146	0					
ANR	1346158	ArgumentList	mem -> non_gc_memory		1346146	1					
ANR	1346159	Argument	mem -> non_gc_memory		1346146	0					
ANR	1346160	PtrMemberAccess	mem -> non_gc_memory		1346146	0					
ANR	1346161	Identifier	mem		1346146	0					
ANR	1346162	Identifier	non_gc_memory		1346146	1					
ANR	1346163	Argument	ramfs		1346146	1					
ANR	1346164	Identifier	ramfs		1346146	0					
ANR	1346165	Argument	& st_ramfs		1346146	2					
ANR	1346166	UnaryOperationExpression	& st_ramfs		1346146	0					
ANR	1346167	UnaryOperator	&		1346146	0					
ANR	1346168	Identifier	st_ramfs		1346146	1					
ANR	1346169	Argument	"""ramfs_new"""		1346146	3					
ANR	1346170	PrimaryExpression	"""ramfs_new"""		1346146	0					
ANR	1346171	IfStatement	if ( fs == NULL )		1346146	1					
ANR	1346172	Condition	fs == NULL	85:8:2044:2053	1346146	0	True				
ANR	1346173	EqualityExpression	fs == NULL		1346146	0		==			
ANR	1346174	Identifier	fs		1346146	0					
ANR	1346175	Identifier	NULL		1346146	1					
ANR	1346176	CompoundStatement		4:20:107:107	1346146	1					
ANR	1346177	ReturnStatement	return NULL ;	86:8:2066:2077	1346146	0	True				
ANR	1346178	Identifier	NULL		1346146	0					
ANR	1346179	ExpressionStatement	size = size / ( RAMFS_BLOCKSIZE / 1024 )	88:4:2089:2123	1346146	2	True				
ANR	1346180	AssignmentExpression	size = size / ( RAMFS_BLOCKSIZE / 1024 )		1346146	0		=			
ANR	1346181	Identifier	size		1346146	0					
ANR	1346182	MultiplicativeExpression	size / ( RAMFS_BLOCKSIZE / 1024 )		1346146	1		/			
ANR	1346183	Identifier	size		1346146	0					
ANR	1346184	MultiplicativeExpression	RAMFS_BLOCKSIZE / 1024		1346146	1		/			
ANR	1346185	Identifier	RAMFS_BLOCKSIZE		1346146	0					
ANR	1346186	PrimaryExpression	1024		1346146	1					
ANR	1346187	ExpressionStatement	fs -> files = NULL	89:4:2129:2145	1346146	3	True				
ANR	1346188	AssignmentExpression	fs -> files = NULL		1346146	0		=			
ANR	1346189	PtrMemberAccess	fs -> files		1346146	0					
ANR	1346190	Identifier	fs		1346146	0					
ANR	1346191	Identifier	files		1346146	1					
ANR	1346192	Identifier	NULL		1346146	1					
ANR	1346193	ExpressionStatement	fs -> active_enums = NULL	90:4:2151:2174	1346146	4	True				
ANR	1346194	AssignmentExpression	fs -> active_enums = NULL		1346146	0		=			
ANR	1346195	PtrMemberAccess	fs -> active_enums		1346146	0					
ANR	1346196	Identifier	fs		1346146	0					
ANR	1346197	Identifier	active_enums		1346146	1					
ANR	1346198	Identifier	NULL		1346146	1					
ANR	1346199	ExpressionStatement	fs -> blocksfree = size	91:4:2180:2201	1346146	5	True				
ANR	1346200	AssignmentExpression	fs -> blocksfree = size		1346146	0		=			
ANR	1346201	PtrMemberAccess	fs -> blocksfree		1346146	0					
ANR	1346202	Identifier	fs		1346146	0					
ANR	1346203	Identifier	blocksfree		1346146	1					
ANR	1346204	Identifier	size		1346146	1					
ANR	1346205	ExpressionStatement	fs -> last_error = 0	92:4:2207:2225	1346146	6	True				
ANR	1346206	AssignmentExpression	fs -> last_error = 0		1346146	0		=			
ANR	1346207	PtrMemberAccess	fs -> last_error		1346146	0					
ANR	1346208	Identifier	fs		1346146	0					
ANR	1346209	Identifier	last_error		1346146	1					
ANR	1346210	PrimaryExpression	0		1346146	1					
ANR	1346211	ExpressionStatement	fs -> memory = mem -> non_gc_memory	93:4:2231:2262	1346146	7	True				
ANR	1346212	AssignmentExpression	fs -> memory = mem -> non_gc_memory		1346146	0		=			
ANR	1346213	PtrMemberAccess	fs -> memory		1346146	0					
ANR	1346214	Identifier	fs		1346146	0					
ANR	1346215	Identifier	memory		1346146	1					
ANR	1346216	PtrMemberAccess	mem -> non_gc_memory		1346146	1					
ANR	1346217	Identifier	mem		1346146	0					
ANR	1346218	Identifier	non_gc_memory		1346146	1					
ANR	1346219	ReturnStatement	return fs ;	94:4:2268:2277	1346146	8	True				
ANR	1346220	Identifier	fs		1346146	0					
ANR	1346221	ReturnType	ramfs *		1346146	1					
ANR	1346222	Identifier	ramfs_new		1346146	2					
ANR	1346223	ParameterList	"gs_memory_t * mem , int size"		1346146	3					
ANR	1346224	Parameter	gs_memory_t * mem	81:18:1920:1935	1346146	0	True				
ANR	1346225	ParameterType	gs_memory_t *		1346146	0					
ANR	1346226	Identifier	mem		1346146	1					
ANR	1346227	Parameter	int size	81:36:1938:1945	1346146	1	True				
ANR	1346228	ParameterType	int		1346146	0					
ANR	1346229	Identifier	size		1346146	1					
ANR	1346230	CFGEntryNode	ENTRY		1346146		True				
ANR	1346231	CFGExitNode	EXIT		1346146		True				
ANR	1346232	Symbol	fs -> blocksfree		1346146						
ANR	1346233	Symbol	NULL		1346146						
ANR	1346234	Symbol	gs_alloc_struct		1346146						
ANR	1346235	Symbol	fs -> last_error		1346146						
ANR	1346236	Symbol	fs		1346146						
ANR	1346237	Symbol	mem -> non_gc_memory		1346146						
ANR	1346238	Symbol	* fs		1346146						
ANR	1346239	Symbol	fs -> files		1346146						
ANR	1346240	Symbol	fs -> memory		1346146						
ANR	1346241	Symbol	mem		1346146						
ANR	1346242	Symbol	size		1346146						
ANR	1346243	Symbol	& st_ramfs		1346146						
ANR	1346244	Symbol	fs -> active_enums		1346146						
ANR	1346245	Symbol	RAMFS_BLOCKSIZE		1346146						
ANR	1346246	Symbol	* mem		1346146						
ANR	1346247	Symbol	ramfs		1346146						
ANR	1346248	Function	ramfs_destroy	102:0:2563:3008							
ANR	1346249	FunctionDef	"ramfs_destroy (gs_memory_t * mem , ramfs * fs)"		1346248	0					
ANR	1346250	CompoundStatement		103:0:2612:3008	1346248	0					
ANR	1346251	IdentifierDeclStatement	ramdirent * ent ;	104:4:2618:2633	1346248	0	True				
ANR	1346252	IdentifierDecl	* ent		1346248	0					
ANR	1346253	IdentifierDeclType	ramdirent *		1346248	0					
ANR	1346254	Identifier	ent		1346248	1					
ANR	1346255	IfStatement	if ( fs == NULL )		1346248	1					
ANR	1346256	Condition	fs == NULL	106:7:2643:2652	1346248	0	True				
ANR	1346257	EqualityExpression	fs == NULL		1346248	0		==			
ANR	1346258	Identifier	fs		1346248	0					
ANR	1346259	Identifier	NULL		1346248	1					
ANR	1346260	ReturnStatement	return ;	106:19:2655:2661	1346248	1	True				
ANR	1346261	ExpressionStatement	ent = fs -> files	108:4:2668:2683	1346248	2	True				
ANR	1346262	AssignmentExpression	ent = fs -> files		1346248	0		=			
ANR	1346263	Identifier	ent		1346248	0					
ANR	1346264	PtrMemberAccess	fs -> files		1346248	1					
ANR	1346265	Identifier	fs		1346248	0					
ANR	1346266	Identifier	files		1346248	1					
ANR	1346267	WhileStatement	while ( ent )		1346248	3					
ANR	1346268	Condition	ent	109:10:2695:2697	1346248	0	True				
ANR	1346269	Identifier	ent		1346248	0					
ANR	1346270	CompoundStatement		8:8:97:112	1346248	1					
ANR	1346271	IdentifierDeclStatement	ramdirent * prev ;	110:8:2710:2725	1346248	0	True				
ANR	1346272	IdentifierDecl	* prev		1346248	0					
ANR	1346273	IdentifierDeclType	ramdirent *		1346248	0					
ANR	1346274	Identifier	prev		1346248	1					
ANR	1346275	ExpressionStatement	"gs_free_object ( fs -> memory , ent -> filename , ""ramfs_destroy, filename"" )"	111:8:2735:2803	1346248	1	True				
ANR	1346276	CallExpression	"gs_free_object ( fs -> memory , ent -> filename , ""ramfs_destroy, filename"" )"		1346248	0					
ANR	1346277	Callee	gs_free_object		1346248	0					
ANR	1346278	Identifier	gs_free_object		1346248	0					
ANR	1346279	ArgumentList	fs -> memory		1346248	1					
ANR	1346280	Argument	fs -> memory		1346248	0					
ANR	1346281	PtrMemberAccess	fs -> memory		1346248	0					
ANR	1346282	Identifier	fs		1346248	0					
ANR	1346283	Identifier	memory		1346248	1					
ANR	1346284	Argument	ent -> filename		1346248	1					
ANR	1346285	PtrMemberAccess	ent -> filename		1346248	0					
ANR	1346286	Identifier	ent		1346248	0					
ANR	1346287	Identifier	filename		1346248	1					
ANR	1346288	Argument	"""ramfs_destroy, filename"""		1346248	2					
ANR	1346289	PrimaryExpression	"""ramfs_destroy, filename"""		1346248	0					
ANR	1346290	ExpressionStatement	unlink_node ( ent -> inode )	112:8:2813:2836	1346248	2	True				
ANR	1346291	CallExpression	unlink_node ( ent -> inode )		1346248	0					
ANR	1346292	Callee	unlink_node		1346248	0					
ANR	1346293	Identifier	unlink_node		1346248	0					
ANR	1346294	ArgumentList	ent -> inode		1346248	1					
ANR	1346295	Argument	ent -> inode		1346248	0					
ANR	1346296	PtrMemberAccess	ent -> inode		1346248	0					
ANR	1346297	Identifier	ent		1346248	0					
ANR	1346298	Identifier	inode		1346248	1					
ANR	1346299	ExpressionStatement	prev = ent	113:8:2846:2856	1346248	3	True				
ANR	1346300	AssignmentExpression	prev = ent		1346248	0		=			
ANR	1346301	Identifier	prev		1346248	0					
ANR	1346302	Identifier	ent		1346248	1					
ANR	1346303	ExpressionStatement	ent = ent -> next	114:8:2866:2881	1346248	4	True				
ANR	1346304	AssignmentExpression	ent = ent -> next		1346248	0		=			
ANR	1346305	Identifier	ent		1346248	0					
ANR	1346306	PtrMemberAccess	ent -> next		1346248	1					
ANR	1346307	Identifier	ent		1346248	0					
ANR	1346308	Identifier	next		1346248	1					
ANR	1346309	ExpressionStatement	"gs_free_object ( fs -> memory , prev , ""ramfs_destroy, entry"" )"	115:8:2891:2947	1346248	5	True				
ANR	1346310	CallExpression	"gs_free_object ( fs -> memory , prev , ""ramfs_destroy, entry"" )"		1346248	0					
ANR	1346311	Callee	gs_free_object		1346248	0					
ANR	1346312	Identifier	gs_free_object		1346248	0					
ANR	1346313	ArgumentList	fs -> memory		1346248	1					
ANR	1346314	Argument	fs -> memory		1346248	0					
ANR	1346315	PtrMemberAccess	fs -> memory		1346248	0					
ANR	1346316	Identifier	fs		1346248	0					
ANR	1346317	Identifier	memory		1346248	1					
ANR	1346318	Argument	prev		1346248	1					
ANR	1346319	Identifier	prev		1346248	0					
ANR	1346320	Argument	"""ramfs_destroy, entry"""		1346248	2					
ANR	1346321	PrimaryExpression	"""ramfs_destroy, entry"""		1346248	0					
ANR	1346322	ExpressionStatement	"gs_free_object ( fs -> memory , fs , ""ramfs_destroy"" )"	117:4:2959:3006	1346248	4	True				
ANR	1346323	CallExpression	"gs_free_object ( fs -> memory , fs , ""ramfs_destroy"" )"		1346248	0					
ANR	1346324	Callee	gs_free_object		1346248	0					
ANR	1346325	Identifier	gs_free_object		1346248	0					
ANR	1346326	ArgumentList	fs -> memory		1346248	1					
ANR	1346327	Argument	fs -> memory		1346248	0					
ANR	1346328	PtrMemberAccess	fs -> memory		1346248	0					
ANR	1346329	Identifier	fs		1346248	0					
ANR	1346330	Identifier	memory		1346248	1					
ANR	1346331	Argument	fs		1346248	1					
ANR	1346332	Identifier	fs		1346248	0					
ANR	1346333	Argument	"""ramfs_destroy"""		1346248	2					
ANR	1346334	PrimaryExpression	"""ramfs_destroy"""		1346248	0					
ANR	1346335	ReturnType	void		1346248	1					
ANR	1346336	Identifier	ramfs_destroy		1346248	2					
ANR	1346337	ParameterList	"gs_memory_t * mem , ramfs * fs"		1346248	3					
ANR	1346338	Parameter	gs_memory_t * mem	102:19:2582:2597	1346248	0	True				
ANR	1346339	ParameterType	gs_memory_t *		1346248	0					
ANR	1346340	Identifier	mem		1346248	1					
ANR	1346341	Parameter	ramfs * fs	102:37:2600:2609	1346248	1	True				
ANR	1346342	ParameterType	ramfs *		1346248	0					
ANR	1346343	Identifier	fs		1346248	1					
ANR	1346344	CFGEntryNode	ENTRY		1346248		True				
ANR	1346345	CFGExitNode	EXIT		1346248		True				
ANR	1346346	Symbol	fs -> files		1346248						
ANR	1346347	Symbol	* fs		1346248						
ANR	1346348	Symbol	ent -> filename		1346248						
ANR	1346349	Symbol	fs -> memory		1346248						
ANR	1346350	Symbol	ent -> next		1346248						
ANR	1346351	Symbol	NULL		1346248						
ANR	1346352	Symbol	mem		1346248						
ANR	1346353	Symbol	prev		1346248						
ANR	1346354	Symbol	ent		1346248						
ANR	1346355	Symbol	* ent		1346248						
ANR	1346356	Symbol	ent -> inode		1346248						
ANR	1346357	Symbol	fs		1346248						
ANR	1346358	Function	ramfs_error	120:0:3011:3069							
ANR	1346359	FunctionDef	ramfs_error (const ramfs * fs)		1346358	0					
ANR	1346360	CompoundStatement		120:33:3044:3069	1346358	0					
ANR	1346361	ReturnStatement	return fs -> last_error ;	120:1:3046:3067	1346358	0	True				
ANR	1346362	PtrMemberAccess	fs -> last_error		1346358	0					
ANR	1346363	Identifier	fs		1346358	0					
ANR	1346364	Identifier	last_error		1346358	1					
ANR	1346365	ReturnType	int		1346358	1					
ANR	1346366	Identifier	ramfs_error		1346358	2					
ANR	1346367	ParameterList	const ramfs * fs		1346358	3					
ANR	1346368	Parameter	const ramfs * fs	120:16:3027:3041	1346358	0	True				
ANR	1346369	ParameterType	const ramfs *		1346358	0					
ANR	1346370	Identifier	fs		1346358	1					
ANR	1346371	CFGEntryNode	ENTRY		1346358		True				
ANR	1346372	CFGExitNode	EXIT		1346358		True				
ANR	1346373	Symbol	* fs		1346358						
ANR	1346374	Symbol	fs -> last_error		1346358						
ANR	1346375	Symbol	fs		1346358						
ANR	1346376	Function	resize	122:0:3072:4906							
ANR	1346377	FunctionDef	"resize (ramfile * file , int size)"		1346376	0					
ANR	1346378	CompoundStatement		123:0:3115:4906	1346376	0					
ANR	1346379	IdentifierDeclStatement	int newblocks = ( size + RAMFS_BLOCKSIZE - 1 ) / RAMFS_BLOCKSIZE ;	124:4:3121:3177	1346376	0	True				
ANR	1346380	IdentifierDecl	newblocks = ( size + RAMFS_BLOCKSIZE - 1 ) / RAMFS_BLOCKSIZE		1346376	0					
ANR	1346381	IdentifierDeclType	int		1346376	0					
ANR	1346382	Identifier	newblocks		1346376	1					
ANR	1346383	AssignmentExpression	newblocks = ( size + RAMFS_BLOCKSIZE - 1 ) / RAMFS_BLOCKSIZE		1346376	2		=			
ANR	1346384	Identifier	newblocks		1346376	0					
ANR	1346385	MultiplicativeExpression	( size + RAMFS_BLOCKSIZE - 1 ) / RAMFS_BLOCKSIZE		1346376	1		/			
ANR	1346386	AdditiveExpression	size + RAMFS_BLOCKSIZE - 1		1346376	0		+			
ANR	1346387	Identifier	size		1346376	0					
ANR	1346388	AdditiveExpression	RAMFS_BLOCKSIZE - 1		1346376	1		-			
ANR	1346389	Identifier	RAMFS_BLOCKSIZE		1346376	0					
ANR	1346390	PrimaryExpression	1		1346376	1					
ANR	1346391	Identifier	RAMFS_BLOCKSIZE		1346376	1					
ANR	1346392	IdentifierDeclStatement	void * buf ;	125:4:3183:3192	1346376	1	True				
ANR	1346393	IdentifierDecl	* buf		1346376	0					
ANR	1346394	IdentifierDeclType	void *		1346376	0					
ANR	1346395	Identifier	buf		1346376	1					
ANR	1346396	IfStatement	if ( newblocks > file -> blocks )		1346376	2					
ANR	1346397	Condition	newblocks > file -> blocks	127:7:3202:3225	1346376	0	True				
ANR	1346398	RelationalExpression	newblocks > file -> blocks		1346376	0		>			
ANR	1346399	Identifier	newblocks		1346376	0					
ANR	1346400	PtrMemberAccess	file -> blocks		1346376	1					
ANR	1346401	Identifier	file		1346376	0					
ANR	1346402	Identifier	blocks		1346376	1					
ANR	1346403	CompoundStatement		5:33:112:112	1346376	1					
ANR	1346404	IfStatement	if ( newblocks - file -> blocks > file -> fs -> blocksfree )		1346376	0					
ANR	1346405	Condition	newblocks - file -> blocks > file -> fs -> blocksfree	130:11:3294:3338	1346376	0	True				
ANR	1346406	RelationalExpression	newblocks - file -> blocks > file -> fs -> blocksfree		1346376	0		>			
ANR	1346407	AdditiveExpression	newblocks - file -> blocks		1346376	0		-			
ANR	1346408	Identifier	newblocks		1346376	0					
ANR	1346409	PtrMemberAccess	file -> blocks		1346376	1					
ANR	1346410	Identifier	file		1346376	0					
ANR	1346411	Identifier	blocks		1346376	1					
ANR	1346412	PtrMemberAccess	file -> fs -> blocksfree		1346376	1					
ANR	1346413	PtrMemberAccess	file -> fs		1346376	0					
ANR	1346414	Identifier	file		1346376	0					
ANR	1346415	Identifier	fs		1346376	1					
ANR	1346416	Identifier	blocksfree		1346376	1					
ANR	1346417	CompoundStatement		8:58:225:225	1346376	1					
ANR	1346418	ReturnStatement	return - RAMFS_NOSPACE ;	131:12:3355:3376	1346376	0	True				
ANR	1346419	UnaryOperationExpression	- RAMFS_NOSPACE		1346376	0					
ANR	1346420	UnaryOperator	-		1346376	0					
ANR	1346421	Identifier	RAMFS_NOSPACE		1346376	1					
ANR	1346422	IfStatement	if ( file -> blocklist_size < newblocks )		1346376	1					
ANR	1346423	Condition	file -> blocklist_size < newblocks	133:11:3399:3430	1346376	0	True				
ANR	1346424	RelationalExpression	file -> blocklist_size < newblocks		1346376	0		<			
ANR	1346425	PtrMemberAccess	file -> blocklist_size		1346376	0					
ANR	1346426	Identifier	file		1346376	0					
ANR	1346427	Identifier	blocklist_size		1346376	1					
ANR	1346428	Identifier	newblocks		1346376	1					
ANR	1346429	CompoundStatement		12:12:331:365	1346376	1					
ANR	1346430	IdentifierDeclStatement	int newsize = file -> blocklist_size ;	134:12:3447:3481	1346376	0	True				
ANR	1346431	IdentifierDecl	newsize = file -> blocklist_size		1346376	0					
ANR	1346432	IdentifierDeclType	int		1346376	0					
ANR	1346433	Identifier	newsize		1346376	1					
ANR	1346434	AssignmentExpression	newsize = file -> blocklist_size		1346376	2		=			
ANR	1346435	Identifier	newsize		1346376	0					
ANR	1346436	PtrMemberAccess	file -> blocklist_size		1346376	1					
ANR	1346437	Identifier	file		1346376	0					
ANR	1346438	Identifier	blocklist_size		1346376	1					
ANR	1346439	IfStatement	if ( newsize > MACROBLOCK_REALLOC_MAX )		1346376	1					
ANR	1346440	Condition	newsize > MACROBLOCK_REALLOC_MAX	135:16:3499:3530	1346376	0	True				
ANR	1346441	RelationalExpression	newsize > MACROBLOCK_REALLOC_MAX		1346376	0		>			
ANR	1346442	Identifier	newsize		1346376	0					
ANR	1346443	Identifier	MACROBLOCK_REALLOC_MAX		1346376	1					
ANR	1346444	CompoundStatement		13:50:417:417	1346376	1					
ANR	1346445	ExpressionStatement	newsize = ( ( newblocks + MACROBLOCK_REALLOC_MAX - 1 ) / MACROBLOCK_REALLOC_MAX ) * MACROBLOCK_REALLOC_MAX	136:16:3551:3668	1346376	0	True				
ANR	1346446	AssignmentExpression	newsize = ( ( newblocks + MACROBLOCK_REALLOC_MAX - 1 ) / MACROBLOCK_REALLOC_MAX ) * MACROBLOCK_REALLOC_MAX		1346376	0		=			
ANR	1346447	Identifier	newsize		1346376	0					
ANR	1346448	MultiplicativeExpression	( ( newblocks + MACROBLOCK_REALLOC_MAX - 1 ) / MACROBLOCK_REALLOC_MAX ) * MACROBLOCK_REALLOC_MAX		1346376	1		*			
ANR	1346449	MultiplicativeExpression	( newblocks + MACROBLOCK_REALLOC_MAX - 1 ) / MACROBLOCK_REALLOC_MAX		1346376	0		/			
ANR	1346450	AdditiveExpression	newblocks + MACROBLOCK_REALLOC_MAX - 1		1346376	0		+			
ANR	1346451	Identifier	newblocks		1346376	0					
ANR	1346452	AdditiveExpression	MACROBLOCK_REALLOC_MAX - 1		1346376	1		-			
ANR	1346453	Identifier	MACROBLOCK_REALLOC_MAX		1346376	0					
ANR	1346454	PrimaryExpression	1		1346376	1					
ANR	1346455	Identifier	MACROBLOCK_REALLOC_MAX		1346376	1					
ANR	1346456	Identifier	MACROBLOCK_REALLOC_MAX		1346376	1					
ANR	1346457	ElseStatement	else		1346376	0					
ANR	1346458	CompoundStatement		16:19:573:573	1346376	0					
ANR	1346459	IfStatement	if ( ! newsize )		1346376	0					
ANR	1346460	Condition	! newsize	139:19:3710:3717	1346376	0	True				
ANR	1346461	UnaryOperationExpression	! newsize		1346376	0					
ANR	1346462	UnaryOperator	!		1346376	0					
ANR	1346463	Identifier	newsize		1346376	1					
ANR	1346464	ExpressionStatement	newsize = 1	139:29:3720:3731	1346376	1	True				
ANR	1346465	AssignmentExpression	newsize = 1		1346376	0		=			
ANR	1346466	Identifier	newsize		1346376	0					
ANR	1346467	PrimaryExpression	1		1346376	1					
ANR	1346468	WhileStatement	while ( newsize < newblocks )		1346376	1					
ANR	1346469	Condition	newsize < newblocks	140:22:3755:3773	1346376	0	True				
ANR	1346470	RelationalExpression	newsize < newblocks		1346376	0		<			
ANR	1346471	Identifier	newsize		1346376	0					
ANR	1346472	Identifier	newblocks		1346376	1					
ANR	1346473	ExpressionStatement	newsize *= 2	140:43:3776:3788	1346376	1	True				
ANR	1346474	AssignmentExpression	newsize *= 2		1346376	0		*=			
ANR	1346475	Identifier	newsize		1346376	0					
ANR	1346476	PrimaryExpression	2		1346376	1					
ANR	1346477	ExpressionStatement	"buf = gs_alloc_bytes ( file -> fs -> memory , newsize * sizeof ( char * ) , ""ramfs resize"" )"	142:12:3816:3895	1346376	2	True				
ANR	1346478	AssignmentExpression	"buf = gs_alloc_bytes ( file -> fs -> memory , newsize * sizeof ( char * ) , ""ramfs resize"" )"		1346376	0		=			
ANR	1346479	Identifier	buf		1346376	0					
ANR	1346480	CallExpression	"gs_alloc_bytes ( file -> fs -> memory , newsize * sizeof ( char * ) , ""ramfs resize"" )"		1346376	1					
ANR	1346481	Callee	gs_alloc_bytes		1346376	0					
ANR	1346482	Identifier	gs_alloc_bytes		1346376	0					
ANR	1346483	ArgumentList	file -> fs -> memory		1346376	1					
ANR	1346484	Argument	file -> fs -> memory		1346376	0					
ANR	1346485	PtrMemberAccess	file -> fs -> memory		1346376	0					
ANR	1346486	PtrMemberAccess	file -> fs		1346376	0					
ANR	1346487	Identifier	file		1346376	0					
ANR	1346488	Identifier	fs		1346376	1					
ANR	1346489	Identifier	memory		1346376	1					
ANR	1346490	Argument	newsize * sizeof ( char * )		1346376	1					
ANR	1346491	MultiplicativeExpression	newsize * sizeof ( char * )		1346376	0		*			
ANR	1346492	Identifier	newsize		1346376	0					
ANR	1346493	SizeofExpression	sizeof ( char * )		1346376	1					
ANR	1346494	Sizeof	sizeof		1346376	0					
ANR	1346495	SizeofOperand	char *		1346376	1					
ANR	1346496	Argument	"""ramfs resize"""		1346376	2					
ANR	1346497	PrimaryExpression	"""ramfs resize"""		1346376	0					
ANR	1346498	IfStatement	if ( ! buf )		1346376	3					
ANR	1346499	Condition	! buf	143:16:3913:3916	1346376	0	True				
ANR	1346500	UnaryOperationExpression	! buf		1346376	0					
ANR	1346501	UnaryOperator	!		1346376	0					
ANR	1346502	Identifier	buf		1346376	1					
ANR	1346503	ReturnStatement	return gs_note_error ( gs_error_VMerror ) ;	144:16:3935:3973	1346376	1	True				
ANR	1346504	CallExpression	gs_note_error ( gs_error_VMerror )		1346376	0					
ANR	1346505	Callee	gs_note_error		1346376	0					
ANR	1346506	Identifier	gs_note_error		1346376	0					
ANR	1346507	ArgumentList	gs_error_VMerror		1346376	1					
ANR	1346508	Argument	gs_error_VMerror		1346376	0					
ANR	1346509	Identifier	gs_error_VMerror		1346376	0					
ANR	1346510	ExpressionStatement	"memcpy ( buf , file -> data , file -> blocklist_size * sizeof ( char * ) )"	145:12:3987:4049	1346376	4	True				
ANR	1346511	CallExpression	"memcpy ( buf , file -> data , file -> blocklist_size * sizeof ( char * ) )"		1346376	0					
ANR	1346512	Callee	memcpy		1346376	0					
ANR	1346513	Identifier	memcpy		1346376	0					
ANR	1346514	ArgumentList	buf		1346376	1					
ANR	1346515	Argument	buf		1346376	0					
ANR	1346516	Identifier	buf		1346376	0					
ANR	1346517	Argument	file -> data		1346376	1					
ANR	1346518	PtrMemberAccess	file -> data		1346376	0					
ANR	1346519	Identifier	file		1346376	0					
ANR	1346520	Identifier	data		1346376	1					
ANR	1346521	Argument	file -> blocklist_size * sizeof ( char * )		1346376	2					
ANR	1346522	MultiplicativeExpression	file -> blocklist_size * sizeof ( char * )		1346376	0		*			
ANR	1346523	PtrMemberAccess	file -> blocklist_size		1346376	0					
ANR	1346524	Identifier	file		1346376	0					
ANR	1346525	Identifier	blocklist_size		1346376	1					
ANR	1346526	SizeofExpression	sizeof ( char * )		1346376	1					
ANR	1346527	Sizeof	sizeof		1346376	0					
ANR	1346528	SizeofOperand	char *		1346376	1					
ANR	1346529	ExpressionStatement	"gs_free_object ( file -> fs -> memory , file -> data , ""ramfs resize, free buffer"" )"	146:12:4063:4136	1346376	5	True				
ANR	1346530	CallExpression	"gs_free_object ( file -> fs -> memory , file -> data , ""ramfs resize, free buffer"" )"		1346376	0					
ANR	1346531	Callee	gs_free_object		1346376	0					
ANR	1346532	Identifier	gs_free_object		1346376	0					
ANR	1346533	ArgumentList	file -> fs -> memory		1346376	1					
ANR	1346534	Argument	file -> fs -> memory		1346376	0					
ANR	1346535	PtrMemberAccess	file -> fs -> memory		1346376	0					
ANR	1346536	PtrMemberAccess	file -> fs		1346376	0					
ANR	1346537	Identifier	file		1346376	0					
ANR	1346538	Identifier	fs		1346376	1					
ANR	1346539	Identifier	memory		1346376	1					
ANR	1346540	Argument	file -> data		1346376	1					
ANR	1346541	PtrMemberAccess	file -> data		1346376	0					
ANR	1346542	Identifier	file		1346376	0					
ANR	1346543	Identifier	data		1346376	1					
ANR	1346544	Argument	"""ramfs resize, free buffer"""		1346376	2					
ANR	1346545	PrimaryExpression	"""ramfs resize, free buffer"""		1346376	0					
ANR	1346546	ExpressionStatement	file -> data = buf	147:12:4150:4166	1346376	6	True				
ANR	1346547	AssignmentExpression	file -> data = buf		1346376	0		=			
ANR	1346548	PtrMemberAccess	file -> data		1346376	0					
ANR	1346549	Identifier	file		1346376	0					
ANR	1346550	Identifier	data		1346376	1					
ANR	1346551	Identifier	buf		1346376	1					
ANR	1346552	ExpressionStatement	file -> blocklist_size = newsize	148:12:4180:4210	1346376	7	True				
ANR	1346553	AssignmentExpression	file -> blocklist_size = newsize		1346376	0		=			
ANR	1346554	PtrMemberAccess	file -> blocklist_size		1346376	0					
ANR	1346555	Identifier	file		1346376	0					
ANR	1346556	Identifier	blocklist_size		1346376	1					
ANR	1346557	Identifier	newsize		1346376	1					
ANR	1346558	WhileStatement	while ( file -> blocks < newblocks )		1346376	2					
ANR	1346559	Condition	file -> blocks < newblocks	150:14:4236:4257	1346376	0	True				
ANR	1346560	RelationalExpression	file -> blocks < newblocks		1346376	0		<			
ANR	1346561	PtrMemberAccess	file -> blocks		1346376	0					
ANR	1346562	Identifier	file		1346376	0					
ANR	1346563	Identifier	blocks		1346376	1					
ANR	1346564	Identifier	newblocks		1346376	1					
ANR	1346565	CompoundStatement		29:12:1158:1299	1346376	1					
ANR	1346566	IdentifierDeclStatement	"char * block = file -> data [ file -> blocks ] = ( char * ) gs_alloc_bytes_immovable ( file -> fs -> memory , RAMFS_BLOCKSIZE , ""ramfs resize"" ) ;"	151:12:4274:4415	1346376	0	True				
ANR	1346567	IdentifierDecl	"* block = file -> data [ file -> blocks ] = ( char * ) gs_alloc_bytes_immovable ( file -> fs -> memory , RAMFS_BLOCKSIZE , ""ramfs resize"" )"		1346376	0					
ANR	1346568	IdentifierDeclType	char *		1346376	0					
ANR	1346569	Identifier	block		1346376	1					
ANR	1346570	AssignmentExpression	"* block = file -> data [ file -> blocks ] = ( char * ) gs_alloc_bytes_immovable ( file -> fs -> memory , RAMFS_BLOCKSIZE , ""ramfs resize"" )"		1346376	2		=			
ANR	1346571	Identifier	block		1346376	0					
ANR	1346572	AssignmentExpression	"file -> data [ file -> blocks ] = ( char * ) gs_alloc_bytes_immovable ( file -> fs -> memory , RAMFS_BLOCKSIZE , ""ramfs resize"" )"		1346376	1		=			
ANR	1346573	ArrayIndexing	file -> data [ file -> blocks ]		1346376	0					
ANR	1346574	PtrMemberAccess	file -> data		1346376	0					
ANR	1346575	Identifier	file		1346376	0					
ANR	1346576	Identifier	data		1346376	1					
ANR	1346577	PtrMemberAccess	file -> blocks		1346376	1					
ANR	1346578	Identifier	file		1346376	0					
ANR	1346579	Identifier	blocks		1346376	1					
ANR	1346580	CastExpression	"( char * ) gs_alloc_bytes_immovable ( file -> fs -> memory , RAMFS_BLOCKSIZE , ""ramfs resize"" )"		1346376	1					
ANR	1346581	CastTarget	char *		1346376	0					
ANR	1346582	CallExpression	"gs_alloc_bytes_immovable ( file -> fs -> memory , RAMFS_BLOCKSIZE , ""ramfs resize"" )"		1346376	1					
ANR	1346583	Callee	gs_alloc_bytes_immovable		1346376	0					
ANR	1346584	Identifier	gs_alloc_bytes_immovable		1346376	0					
ANR	1346585	ArgumentList	file -> fs -> memory		1346376	1					
ANR	1346586	Argument	file -> fs -> memory		1346376	0					
ANR	1346587	PtrMemberAccess	file -> fs -> memory		1346376	0					
ANR	1346588	PtrMemberAccess	file -> fs		1346376	0					
ANR	1346589	Identifier	file		1346376	0					
ANR	1346590	Identifier	fs		1346376	1					
ANR	1346591	Identifier	memory		1346376	1					
ANR	1346592	Argument	RAMFS_BLOCKSIZE		1346376	1					
ANR	1346593	Identifier	RAMFS_BLOCKSIZE		1346376	0					
ANR	1346594	Argument	"""ramfs resize"""		1346376	2					
ANR	1346595	PrimaryExpression	"""ramfs resize"""		1346376	0					
ANR	1346596	IfStatement	if ( ! block )		1346376	1					
ANR	1346597	Condition	! block	153:15:4432:4437	1346376	0	True				
ANR	1346598	UnaryOperationExpression	! block		1346376	0					
ANR	1346599	UnaryOperator	!		1346376	0					
ANR	1346600	Identifier	block		1346376	1					
ANR	1346601	CompoundStatement		31:23:1324:1324	1346376	1					
ANR	1346602	ReturnStatement	return - RAMFS_NOMEM ;	154:16:4458:4477	1346376	0	True				
ANR	1346603	UnaryOperationExpression	- RAMFS_NOMEM		1346376	0					
ANR	1346604	UnaryOperator	-		1346376	0					
ANR	1346605	Identifier	RAMFS_NOMEM		1346376	1					
ANR	1346606	ExpressionStatement	file -> blocks ++	156:12:4505:4519	1346376	2	True				
ANR	1346607	PostIncDecOperationExpression	file -> blocks ++		1346376	0					
ANR	1346608	PtrMemberAccess	file -> blocks		1346376	0					
ANR	1346609	Identifier	file		1346376	0					
ANR	1346610	Identifier	blocks		1346376	1					
ANR	1346611	IncDec	++		1346376	1					
ANR	1346612	ExpressionStatement	file -> fs -> blocksfree --	157:12:4533:4555	1346376	3	True				
ANR	1346613	PostIncDecOperationExpression	file -> fs -> blocksfree --		1346376	0					
ANR	1346614	PtrMemberAccess	file -> fs -> blocksfree		1346376	0					
ANR	1346615	PtrMemberAccess	file -> fs		1346376	0					
ANR	1346616	Identifier	file		1346376	0					
ANR	1346617	Identifier	fs		1346376	1					
ANR	1346618	Identifier	blocksfree		1346376	1					
ANR	1346619	IncDec	--		1346376	1					
ANR	1346620	ElseStatement	else		1346376	0					
ANR	1346621	IfStatement	if ( newblocks < file -> blocks )		1346376	0					
ANR	1346622	Condition	newblocks < file -> blocks	159:15:4582:4605	1346376	0	True				
ANR	1346623	RelationalExpression	newblocks < file -> blocks		1346376	0		<			
ANR	1346624	Identifier	newblocks		1346376	0					
ANR	1346625	PtrMemberAccess	file -> blocks		1346376	1					
ANR	1346626	Identifier	file		1346376	0					
ANR	1346627	Identifier	blocks		1346376	1					
ANR	1346628	CompoundStatement		37:41:1492:1492	1346376	1					
ANR	1346629	ExpressionStatement	file -> fs -> blocksfree += ( file -> blocks - newblocks )	161:8:4671:4719	1346376	0	True				
ANR	1346630	AssignmentExpression	file -> fs -> blocksfree += ( file -> blocks - newblocks )		1346376	0		+=			
ANR	1346631	PtrMemberAccess	file -> fs -> blocksfree		1346376	0					
ANR	1346632	PtrMemberAccess	file -> fs		1346376	0					
ANR	1346633	Identifier	file		1346376	0					
ANR	1346634	Identifier	fs		1346376	1					
ANR	1346635	Identifier	blocksfree		1346376	1					
ANR	1346636	AdditiveExpression	file -> blocks - newblocks		1346376	1		-			
ANR	1346637	PtrMemberAccess	file -> blocks		1346376	0					
ANR	1346638	Identifier	file		1346376	0					
ANR	1346639	Identifier	blocks		1346376	1					
ANR	1346640	Identifier	newblocks		1346376	1					
ANR	1346641	WhileStatement	while ( file -> blocks > newblocks )		1346376	1					
ANR	1346642	Condition	file -> blocks > newblocks	162:14:4735:4758	1346376	0	True				
ANR	1346643	RelationalExpression	file -> blocks > newblocks		1346376	0		>			
ANR	1346644	PtrMemberAccess	file -> blocks		1346376	0					
ANR	1346645	Identifier	file		1346376	0					
ANR	1346646	Identifier	blocks		1346376	1					
ANR	1346647	Identifier	newblocks		1346376	1					
ANR	1346648	CompoundStatement		40:40:1645:1645	1346376	1					
ANR	1346649	ExpressionStatement	"gs_free_object ( file -> fs -> memory , file -> data [ -- file -> blocks ] , ""ramfs resize"" )"	163:12:4775:4851	1346376	0	True				
ANR	1346650	CallExpression	"gs_free_object ( file -> fs -> memory , file -> data [ -- file -> blocks ] , ""ramfs resize"" )"		1346376	0					
ANR	1346651	Callee	gs_free_object		1346376	0					
ANR	1346652	Identifier	gs_free_object		1346376	0					
ANR	1346653	ArgumentList	file -> fs -> memory		1346376	1					
ANR	1346654	Argument	file -> fs -> memory		1346376	0					
ANR	1346655	PtrMemberAccess	file -> fs -> memory		1346376	0					
ANR	1346656	PtrMemberAccess	file -> fs		1346376	0					
ANR	1346657	Identifier	file		1346376	0					
ANR	1346658	Identifier	fs		1346376	1					
ANR	1346659	Identifier	memory		1346376	1					
ANR	1346660	Argument	file -> data [ -- file -> blocks ]		1346376	1					
ANR	1346661	ArrayIndexing	file -> data [ -- file -> blocks ]		1346376	0					
ANR	1346662	PtrMemberAccess	file -> data		1346376	0					
ANR	1346663	Identifier	file		1346376	0					
ANR	1346664	Identifier	data		1346376	1					
ANR	1346665	UnaryExpression	-- file -> blocks		1346376	1					
ANR	1346666	IncDec	--		1346376	0					
ANR	1346667	PtrMemberAccess	file -> blocks		1346376	1					
ANR	1346668	Identifier	file		1346376	0					
ANR	1346669	Identifier	blocks		1346376	1					
ANR	1346670	Argument	"""ramfs resize"""		1346376	2					
ANR	1346671	PrimaryExpression	"""ramfs resize"""		1346376	0					
ANR	1346672	ExpressionStatement	file -> size = size	166:4:4873:4890	1346376	3	True				
ANR	1346673	AssignmentExpression	file -> size = size		1346376	0		=			
ANR	1346674	PtrMemberAccess	file -> size		1346376	0					
ANR	1346675	Identifier	file		1346376	0					
ANR	1346676	Identifier	size		1346376	1					
ANR	1346677	Identifier	size		1346376	1					
ANR	1346678	ReturnStatement	return 0 ;	167:4:4896:4904	1346376	4	True				
ANR	1346679	PrimaryExpression	0		1346376	0					
ANR	1346680	ReturnType	static int		1346376	1					
ANR	1346681	Identifier	resize		1346376	2					
ANR	1346682	ParameterList	"ramfile * file , int size"		1346376	3					
ANR	1346683	Parameter	ramfile * file	122:18:3090:3103	1346376	0	True				
ANR	1346684	ParameterType	ramfile *		1346376	0					
ANR	1346685	Identifier	file		1346376	1					
ANR	1346686	Parameter	int size	122:33:3105:3112	1346376	1	True				
ANR	1346687	ParameterType	int		1346376	0					
ANR	1346688	Identifier	size		1346376	1					
ANR	1346689	CFGEntryNode	ENTRY		1346376		True				
ANR	1346690	CFGExitNode	EXIT		1346376		True				
ANR	1346691	Symbol	newblocks		1346376						
ANR	1346692	Symbol	RAMFS_NOSPACE		1346376						
ANR	1346693	Symbol	file -> fs -> blocksfree		1346376						
ANR	1346694	Symbol	file		1346376						
ANR	1346695	Symbol	gs_alloc_bytes_immovable		1346376						
ANR	1346696	Symbol	file -> size		1346376						
ANR	1346697	Symbol	block		1346376						
ANR	1346698	Symbol	RAMFS_BLOCKSIZE		1346376						
ANR	1346699	Symbol	file -> blocks		1346376						
ANR	1346700	Symbol	RAMFS_NOMEM		1346376						
ANR	1346701	Symbol	file -> fs		1346376						
ANR	1346702	Symbol	gs_alloc_bytes		1346376						
ANR	1346703	Symbol	newsize		1346376						
ANR	1346704	Symbol	* file		1346376						
ANR	1346705	Symbol	* file -> blocks		1346376						
ANR	1346706	Symbol	gs_error_VMerror		1346376						
ANR	1346707	Symbol	buf		1346376						
ANR	1346708	Symbol	gs_note_error		1346376						
ANR	1346709	Symbol	size		1346376						
ANR	1346710	Symbol	file -> fs -> memory		1346376						
ANR	1346711	Symbol	* file -> fs		1346376						
ANR	1346712	Symbol	file -> data		1346376						
ANR	1346713	Symbol	* file -> data		1346376						
ANR	1346714	Symbol	MACROBLOCK_REALLOC_MAX		1346376						
ANR	1346715	Symbol	* * file		1346376						
ANR	1346716	Symbol	file -> blocklist_size		1346376						
ANR	1346717	Function	ramfs_findfile	170:0:4909:5177							
ANR	1346718	FunctionDef	"ramfs_findfile (const ramfs * fs , const char * filename)"		1346717	0					
ANR	1346719	CompoundStatement		171:0:4981:5177	1346717	0					
ANR	1346720	IdentifierDeclStatement	ramdirent * thisdirent = fs -> files ;	172:4:4987:5021	1346717	0	True				
ANR	1346721	IdentifierDecl	* thisdirent = fs -> files		1346717	0					
ANR	1346722	IdentifierDeclType	ramdirent *		1346717	0					
ANR	1346723	Identifier	thisdirent		1346717	1					
ANR	1346724	AssignmentExpression	* thisdirent = fs -> files		1346717	2		=			
ANR	1346725	Identifier	thisdirent		1346717	0					
ANR	1346726	PtrMemberAccess	fs -> files		1346717	1					
ANR	1346727	Identifier	fs		1346717	0					
ANR	1346728	Identifier	files		1346717	1					
ANR	1346729	WhileStatement	while ( thisdirent )		1346717	1					
ANR	1346730	Condition	thisdirent	173:10:5033:5042	1346717	0	True				
ANR	1346731	Identifier	thisdirent		1346717	0					
ANR	1346732	CompoundStatement		3:22:63:63	1346717	1					
ANR	1346733	IfStatement	"if ( strcmp ( thisdirent -> filename , filename ) == 0 )"		1346717	0					
ANR	1346734	Condition	"strcmp ( thisdirent -> filename , filename ) == 0"	174:11:5058:5099	1346717	0	True				
ANR	1346735	EqualityExpression	"strcmp ( thisdirent -> filename , filename ) == 0"		1346717	0		==			
ANR	1346736	CallExpression	"strcmp ( thisdirent -> filename , filename )"		1346717	0					
ANR	1346737	Callee	strcmp		1346717	0					
ANR	1346738	Identifier	strcmp		1346717	0					
ANR	1346739	ArgumentList	thisdirent -> filename		1346717	1					
ANR	1346740	Argument	thisdirent -> filename		1346717	0					
ANR	1346741	PtrMemberAccess	thisdirent -> filename		1346717	0					
ANR	1346742	Identifier	thisdirent		1346717	0					
ANR	1346743	Identifier	filename		1346717	1					
ANR	1346744	Argument	filename		1346717	1					
ANR	1346745	Identifier	filename		1346717	0					
ANR	1346746	PrimaryExpression	0		1346717	1					
ANR	1346747	BreakStatement	break ;	174:55:5102:5107	1346717	1	True				
ANR	1346748	ExpressionStatement	thisdirent = thisdirent -> next	175:8:5117:5146	1346717	1	True				
ANR	1346749	AssignmentExpression	thisdirent = thisdirent -> next		1346717	0		=			
ANR	1346750	Identifier	thisdirent		1346717	0					
ANR	1346751	PtrMemberAccess	thisdirent -> next		1346717	1					
ANR	1346752	Identifier	thisdirent		1346717	0					
ANR	1346753	Identifier	next		1346717	1					
ANR	1346754	ReturnStatement	return thisdirent ;	177:4:5158:5175	1346717	2	True				
ANR	1346755	Identifier	thisdirent		1346717	0					
ANR	1346756	ReturnType	static ramdirent *		1346717	1					
ANR	1346757	Identifier	ramfs_findfile		1346717	2					
ANR	1346758	ParameterList	"const ramfs * fs , const char * filename"		1346717	3					
ANR	1346759	Parameter	const ramfs * fs	170:34:4943:4957	1346717	0	True				
ANR	1346760	ParameterType	const ramfs *		1346717	0					
ANR	1346761	Identifier	fs		1346717	1					
ANR	1346762	Parameter	const char * filename	170:50:4959:4978	1346717	1	True				
ANR	1346763	ParameterType	const char *		1346717	0					
ANR	1346764	Identifier	filename		1346717	1					
ANR	1346765	CFGEntryNode	ENTRY		1346717		True				
ANR	1346766	CFGExitNode	EXIT		1346717		True				
ANR	1346767	Symbol	* fs		1346717						
ANR	1346768	Symbol	fs -> files		1346717						
ANR	1346769	Symbol	strcmp		1346717						
ANR	1346770	Symbol	thisdirent		1346717						
ANR	1346771	Symbol	filename		1346717						
ANR	1346772	Symbol	thisdirent -> filename		1346717						
ANR	1346773	Symbol	thisdirent -> next		1346717						
ANR	1346774	Symbol	* thisdirent		1346717						
ANR	1346775	Symbol	fs		1346717						
ANR	1346776	Function	ramfs_open	180:0:5180:7089							
ANR	1346777	FunctionDef	"ramfs_open (gs_memory_t * mem , ramfs * fs , const char * filename , int mode)"		1346776	0					
ANR	1346778	CompoundStatement		181:0:5263:7089	1346776	0					
ANR	1346779	IdentifierDeclStatement	ramdirent * thisdirent ;	182:4:5269:5291	1346776	0	True				
ANR	1346780	IdentifierDecl	* thisdirent		1346776	0					
ANR	1346781	IdentifierDeclType	ramdirent *		1346776	0					
ANR	1346782	Identifier	thisdirent		1346776	1					
ANR	1346783	IdentifierDeclStatement	ramfile * file ;	183:4:5297:5310	1346776	1	True				
ANR	1346784	IdentifierDecl	* file		1346776	0					
ANR	1346785	IdentifierDeclType	ramfile *		1346776	0					
ANR	1346786	Identifier	file		1346776	1					
ANR	1346787	IdentifierDeclStatement	ramhandle * handle ;	184:4:5316:5333	1346776	2	True				
ANR	1346788	IdentifierDecl	* handle		1346776	0					
ANR	1346789	IdentifierDeclType	ramhandle *		1346776	0					
ANR	1346790	Identifier	handle		1346776	1					
ANR	1346791	IfStatement	if ( mode & ( RAMFS_CREATE | RAMFS_APPEND ) )		1346776	3					
ANR	1346792	Condition	mode & ( RAMFS_CREATE | RAMFS_APPEND )	186:7:5343:5376	1346776	0	True				
ANR	1346793	BitAndExpression	mode & ( RAMFS_CREATE | RAMFS_APPEND )		1346776	0		&			
ANR	1346794	Identifier	mode		1346776	0					
ANR	1346795	InclusiveOrExpression	RAMFS_CREATE | RAMFS_APPEND		1346776	1		|			
ANR	1346796	Identifier	RAMFS_CREATE		1346776	0					
ANR	1346797	Identifier	RAMFS_APPEND		1346776	1					
ANR	1346798	ExpressionStatement	mode |= RAMFS_WRITE	186:43:5379:5398	1346776	1	True				
ANR	1346799	AssignmentExpression	mode |= RAMFS_WRITE		1346776	0		|=			
ANR	1346800	Identifier	mode		1346776	0					
ANR	1346801	Identifier	RAMFS_WRITE		1346776	1					
ANR	1346802	ExpressionStatement	"thisdirent = ramfs_findfile ( fs , filename )"	188:4:5405:5445	1346776	4	True				
ANR	1346803	AssignmentExpression	"thisdirent = ramfs_findfile ( fs , filename )"		1346776	0		=			
ANR	1346804	Identifier	thisdirent		1346776	0					
ANR	1346805	CallExpression	"ramfs_findfile ( fs , filename )"		1346776	1					
ANR	1346806	Callee	ramfs_findfile		1346776	0					
ANR	1346807	Identifier	ramfs_findfile		1346776	0					
ANR	1346808	ArgumentList	fs		1346776	1					
ANR	1346809	Argument	fs		1346776	0					
ANR	1346810	Identifier	fs		1346776	0					
ANR	1346811	Argument	filename		1346776	1					
ANR	1346812	Identifier	filename		1346776	0					
ANR	1346813	IfStatement	if ( ! thisdirent )		1346776	5					
ANR	1346814	Condition	! thisdirent	190:7:5455:5465	1346776	0	True				
ANR	1346815	UnaryOperationExpression	! thisdirent		1346776	0					
ANR	1346816	UnaryOperator	!		1346776	0					
ANR	1346817	Identifier	thisdirent		1346776	1					
ANR	1346818	CompoundStatement		12:8:241:263	1346776	1					
ANR	1346819	IdentifierDeclStatement	char * dirent_filename ;	192:8:5505:5527	1346776	0	True				
ANR	1346820	IdentifierDecl	* dirent_filename		1346776	0					
ANR	1346821	IdentifierDeclType	char *		1346776	0					
ANR	1346822	Identifier	dirent_filename		1346776	1					
ANR	1346823	IfStatement	if ( ! ( mode & RAMFS_CREATE ) )		1346776	1					
ANR	1346824	Condition	! ( mode & RAMFS_CREATE )	194:11:5541:5562	1346776	0	True				
ANR	1346825	UnaryOperationExpression	! ( mode & RAMFS_CREATE )		1346776	0					
ANR	1346826	UnaryOperator	!		1346776	0					
ANR	1346827	BitAndExpression	mode & RAMFS_CREATE		1346776	1		&			
ANR	1346828	Identifier	mode		1346776	0					
ANR	1346829	Identifier	RAMFS_CREATE		1346776	1					
ANR	1346830	CompoundStatement		14:35:301:301	1346776	1					
ANR	1346831	ExpressionStatement	fs -> last_error = RAMFS_NOTFOUND	195:12:5579:5610	1346776	0	True				
ANR	1346832	AssignmentExpression	fs -> last_error = RAMFS_NOTFOUND		1346776	0		=			
ANR	1346833	PtrMemberAccess	fs -> last_error		1346776	0					
ANR	1346834	Identifier	fs		1346776	0					
ANR	1346835	Identifier	last_error		1346776	1					
ANR	1346836	Identifier	RAMFS_NOTFOUND		1346776	1					
ANR	1346837	ReturnStatement	return NULL ;	196:12:5624:5635	1346776	1	True				
ANR	1346838	Identifier	NULL		1346776	0					
ANR	1346839	ExpressionStatement	"thisdirent = gs_alloc_struct ( fs -> memory , ramdirent , & st_ramdirent , ""new ram directory entry"" )"	199:8:5656:5749	1346776	2	True				
ANR	1346840	AssignmentExpression	"thisdirent = gs_alloc_struct ( fs -> memory , ramdirent , & st_ramdirent , ""new ram directory entry"" )"		1346776	0		=			
ANR	1346841	Identifier	thisdirent		1346776	0					
ANR	1346842	CallExpression	"gs_alloc_struct ( fs -> memory , ramdirent , & st_ramdirent , ""new ram directory entry"" )"		1346776	1					
ANR	1346843	Callee	gs_alloc_struct		1346776	0					
ANR	1346844	Identifier	gs_alloc_struct		1346776	0					
ANR	1346845	ArgumentList	fs -> memory		1346776	1					
ANR	1346846	Argument	fs -> memory		1346776	0					
ANR	1346847	PtrMemberAccess	fs -> memory		1346776	0					
ANR	1346848	Identifier	fs		1346776	0					
ANR	1346849	Identifier	memory		1346776	1					
ANR	1346850	Argument	ramdirent		1346776	1					
ANR	1346851	Identifier	ramdirent		1346776	0					
ANR	1346852	Argument	& st_ramdirent		1346776	2					
ANR	1346853	UnaryOperationExpression	& st_ramdirent		1346776	0					
ANR	1346854	UnaryOperator	&		1346776	0					
ANR	1346855	Identifier	st_ramdirent		1346776	1					
ANR	1346856	Argument	"""new ram directory entry"""		1346776	3					
ANR	1346857	PrimaryExpression	"""new ram directory entry"""		1346776	0					
ANR	1346858	ExpressionStatement	"file = gs_alloc_struct ( fs -> memory , ramfile , & st_ramfile , ""new ram file"" )"	200:8:5759:5831	1346776	3	True				
ANR	1346859	AssignmentExpression	"file = gs_alloc_struct ( fs -> memory , ramfile , & st_ramfile , ""new ram file"" )"		1346776	0		=			
ANR	1346860	Identifier	file		1346776	0					
ANR	1346861	CallExpression	"gs_alloc_struct ( fs -> memory , ramfile , & st_ramfile , ""new ram file"" )"		1346776	1					
ANR	1346862	Callee	gs_alloc_struct		1346776	0					
ANR	1346863	Identifier	gs_alloc_struct		1346776	0					
ANR	1346864	ArgumentList	fs -> memory		1346776	1					
ANR	1346865	Argument	fs -> memory		1346776	0					
ANR	1346866	PtrMemberAccess	fs -> memory		1346776	0					
ANR	1346867	Identifier	fs		1346776	0					
ANR	1346868	Identifier	memory		1346776	1					
ANR	1346869	Argument	ramfile		1346776	1					
ANR	1346870	Identifier	ramfile		1346776	0					
ANR	1346871	Argument	& st_ramfile		1346776	2					
ANR	1346872	UnaryOperationExpression	& st_ramfile		1346776	0					
ANR	1346873	UnaryOperator	&		1346776	0					
ANR	1346874	Identifier	st_ramfile		1346776	1					
ANR	1346875	Argument	"""new ram file"""		1346776	3					
ANR	1346876	PrimaryExpression	"""new ram file"""		1346776	0					
ANR	1346877	ExpressionStatement	"dirent_filename = ( char * ) gs_alloc_bytes ( fs -> memory , strlen ( filename ) + 1 , ""ramfs filename"" )"	201:8:5841:5933	1346776	4	True				
ANR	1346878	AssignmentExpression	"dirent_filename = ( char * ) gs_alloc_bytes ( fs -> memory , strlen ( filename ) + 1 , ""ramfs filename"" )"		1346776	0		=			
ANR	1346879	Identifier	dirent_filename		1346776	0					
ANR	1346880	CastExpression	"( char * ) gs_alloc_bytes ( fs -> memory , strlen ( filename ) + 1 , ""ramfs filename"" )"		1346776	1					
ANR	1346881	CastTarget	char *		1346776	0					
ANR	1346882	CallExpression	"gs_alloc_bytes ( fs -> memory , strlen ( filename ) + 1 , ""ramfs filename"" )"		1346776	1					
ANR	1346883	Callee	gs_alloc_bytes		1346776	0					
ANR	1346884	Identifier	gs_alloc_bytes		1346776	0					
ANR	1346885	ArgumentList	fs -> memory		1346776	1					
ANR	1346886	Argument	fs -> memory		1346776	0					
ANR	1346887	PtrMemberAccess	fs -> memory		1346776	0					
ANR	1346888	Identifier	fs		1346776	0					
ANR	1346889	Identifier	memory		1346776	1					
ANR	1346890	Argument	strlen ( filename ) + 1		1346776	1					
ANR	1346891	AdditiveExpression	strlen ( filename ) + 1		1346776	0		+			
ANR	1346892	CallExpression	strlen ( filename )		1346776	0					
ANR	1346893	Callee	strlen		1346776	0					
ANR	1346894	Identifier	strlen		1346776	0					
ANR	1346895	ArgumentList	filename		1346776	1					
ANR	1346896	Argument	filename		1346776	0					
ANR	1346897	Identifier	filename		1346776	0					
ANR	1346898	PrimaryExpression	1		1346776	1					
ANR	1346899	Argument	"""ramfs filename"""		1346776	2					
ANR	1346900	PrimaryExpression	"""ramfs filename"""		1346776	0					
ANR	1346901	IfStatement	if ( ! ( thisdirent && file && dirent_filename ) )		1346776	5					
ANR	1346902	Condition	! ( thisdirent && file && dirent_filename )	202:11:5946:5985	1346776	0	True				
ANR	1346903	UnaryOperationExpression	! ( thisdirent && file && dirent_filename )		1346776	0					
ANR	1346904	UnaryOperator	!		1346776	0					
ANR	1346905	AndExpression	thisdirent && file && dirent_filename		1346776	1		&&			
ANR	1346906	Identifier	thisdirent		1346776	0					
ANR	1346907	AndExpression	file && dirent_filename		1346776	1		&&			
ANR	1346908	Identifier	file		1346776	0					
ANR	1346909	Identifier	dirent_filename		1346776	1					
ANR	1346910	CompoundStatement		22:53:724:724	1346776	1					
ANR	1346911	ExpressionStatement	"gs_free_object ( fs -> memory , thisdirent , ""error, cleanup directory entry"" )"	203:12:6002:6074	1346776	0	True				
ANR	1346912	CallExpression	"gs_free_object ( fs -> memory , thisdirent , ""error, cleanup directory entry"" )"		1346776	0					
ANR	1346913	Callee	gs_free_object		1346776	0					
ANR	1346914	Identifier	gs_free_object		1346776	0					
ANR	1346915	ArgumentList	fs -> memory		1346776	1					
ANR	1346916	Argument	fs -> memory		1346776	0					
ANR	1346917	PtrMemberAccess	fs -> memory		1346776	0					
ANR	1346918	Identifier	fs		1346776	0					
ANR	1346919	Identifier	memory		1346776	1					
ANR	1346920	Argument	thisdirent		1346776	1					
ANR	1346921	Identifier	thisdirent		1346776	0					
ANR	1346922	Argument	"""error, cleanup directory entry"""		1346776	2					
ANR	1346923	PrimaryExpression	"""error, cleanup directory entry"""		1346776	0					
ANR	1346924	ExpressionStatement	"gs_free_object ( fs -> memory , file , ""error, cleanup ram file"" )"	204:12:6088:6147	1346776	1	True				
ANR	1346925	CallExpression	"gs_free_object ( fs -> memory , file , ""error, cleanup ram file"" )"		1346776	0					
ANR	1346926	Callee	gs_free_object		1346776	0					
ANR	1346927	Identifier	gs_free_object		1346776	0					
ANR	1346928	ArgumentList	fs -> memory		1346776	1					
ANR	1346929	Argument	fs -> memory		1346776	0					
ANR	1346930	PtrMemberAccess	fs -> memory		1346776	0					
ANR	1346931	Identifier	fs		1346776	0					
ANR	1346932	Identifier	memory		1346776	1					
ANR	1346933	Argument	file		1346776	1					
ANR	1346934	Identifier	file		1346776	0					
ANR	1346935	Argument	"""error, cleanup ram file"""		1346776	2					
ANR	1346936	PrimaryExpression	"""error, cleanup ram file"""		1346776	0					
ANR	1346937	ExpressionStatement	"gs_free_object ( fs -> memory , dirent_filename , ""error, cleanup ram filename"" )"	205:12:6161:6235	1346776	2	True				
ANR	1346938	CallExpression	"gs_free_object ( fs -> memory , dirent_filename , ""error, cleanup ram filename"" )"		1346776	0					
ANR	1346939	Callee	gs_free_object		1346776	0					
ANR	1346940	Identifier	gs_free_object		1346776	0					
ANR	1346941	ArgumentList	fs -> memory		1346776	1					
ANR	1346942	Argument	fs -> memory		1346776	0					
ANR	1346943	PtrMemberAccess	fs -> memory		1346776	0					
ANR	1346944	Identifier	fs		1346776	0					
ANR	1346945	Identifier	memory		1346776	1					
ANR	1346946	Argument	dirent_filename		1346776	1					
ANR	1346947	Identifier	dirent_filename		1346776	0					
ANR	1346948	Argument	"""error, cleanup ram filename"""		1346776	2					
ANR	1346949	PrimaryExpression	"""error, cleanup ram filename"""		1346776	0					
ANR	1346950	ExpressionStatement	fs -> last_error = RAMFS_NOMEM	206:12:6249:6277	1346776	3	True				
ANR	1346951	AssignmentExpression	fs -> last_error = RAMFS_NOMEM		1346776	0		=			
ANR	1346952	PtrMemberAccess	fs -> last_error		1346776	0					
ANR	1346953	Identifier	fs		1346776	0					
ANR	1346954	Identifier	last_error		1346776	1					
ANR	1346955	Identifier	RAMFS_NOMEM		1346776	1					
ANR	1346956	ReturnStatement	return NULL ;	207:12:6291:6302	1346776	4	True				
ANR	1346957	Identifier	NULL		1346776	0					
ANR	1346958	ExpressionStatement	"strcpy ( dirent_filename , filename )"	209:8:6322:6354	1346776	6	True				
ANR	1346959	CallExpression	"strcpy ( dirent_filename , filename )"		1346776	0					
ANR	1346960	Callee	strcpy		1346776	0					
ANR	1346961	Identifier	strcpy		1346776	0					
ANR	1346962	ArgumentList	dirent_filename		1346776	1					
ANR	1346963	Argument	dirent_filename		1346776	0					
ANR	1346964	Identifier	dirent_filename		1346776	0					
ANR	1346965	Argument	filename		1346776	1					
ANR	1346966	Identifier	filename		1346776	0					
ANR	1346967	ExpressionStatement	thisdirent -> filename = dirent_filename	210:8:6364:6402	1346776	7	True				
ANR	1346968	AssignmentExpression	thisdirent -> filename = dirent_filename		1346776	0		=			
ANR	1346969	PtrMemberAccess	thisdirent -> filename		1346776	0					
ANR	1346970	Identifier	thisdirent		1346776	0					
ANR	1346971	Identifier	filename		1346776	1					
ANR	1346972	Identifier	dirent_filename		1346776	1					
ANR	1346973	ExpressionStatement	file -> refcount = 1	211:8:6412:6430	1346776	8	True				
ANR	1346974	AssignmentExpression	file -> refcount = 1		1346776	0		=			
ANR	1346975	PtrMemberAccess	file -> refcount		1346776	0					
ANR	1346976	Identifier	file		1346776	0					
ANR	1346977	Identifier	refcount		1346776	1					
ANR	1346978	PrimaryExpression	1		1346776	1					
ANR	1346979	ExpressionStatement	file -> size = 0	212:8:6440:6454	1346776	9	True				
ANR	1346980	AssignmentExpression	file -> size = 0		1346776	0		=			
ANR	1346981	PtrMemberAccess	file -> size		1346776	0					
ANR	1346982	Identifier	file		1346776	0					
ANR	1346983	Identifier	size		1346776	1					
ANR	1346984	PrimaryExpression	0		1346776	1					
ANR	1346985	ExpressionStatement	file -> blocks = 0	213:8:6464:6480	1346776	10	True				
ANR	1346986	AssignmentExpression	file -> blocks = 0		1346776	0		=			
ANR	1346987	PtrMemberAccess	file -> blocks		1346776	0					
ANR	1346988	Identifier	file		1346776	0					
ANR	1346989	Identifier	blocks		1346776	1					
ANR	1346990	PrimaryExpression	0		1346776	1					
ANR	1346991	ExpressionStatement	file -> blocklist_size = 0	214:8:6490:6514	1346776	11	True				
ANR	1346992	AssignmentExpression	file -> blocklist_size = 0		1346776	0		=			
ANR	1346993	PtrMemberAccess	file -> blocklist_size		1346776	0					
ANR	1346994	Identifier	file		1346776	0					
ANR	1346995	Identifier	blocklist_size		1346776	1					
ANR	1346996	PrimaryExpression	0		1346776	1					
ANR	1346997	ExpressionStatement	file -> data = NULL	215:8:6524:6541	1346776	12	True				
ANR	1346998	AssignmentExpression	file -> data = NULL		1346776	0		=			
ANR	1346999	PtrMemberAccess	file -> data		1346776	0					
ANR	1347000	Identifier	file		1346776	0					
ANR	1347001	Identifier	data		1346776	1					
ANR	1347002	Identifier	NULL		1346776	1					
ANR	1347003	ExpressionStatement	file -> fs = fs	216:8:6551:6564	1346776	13	True				
ANR	1347004	AssignmentExpression	file -> fs = fs		1346776	0		=			
ANR	1347005	PtrMemberAccess	file -> fs		1346776	0					
ANR	1347006	Identifier	file		1346776	0					
ANR	1347007	Identifier	fs		1346776	1					
ANR	1347008	Identifier	fs		1346776	1					
ANR	1347009	ExpressionStatement	thisdirent -> inode = file	217:8:6574:6598	1346776	14	True				
ANR	1347010	AssignmentExpression	thisdirent -> inode = file		1346776	0		=			
ANR	1347011	PtrMemberAccess	thisdirent -> inode		1346776	0					
ANR	1347012	Identifier	thisdirent		1346776	0					
ANR	1347013	Identifier	inode		1346776	1					
ANR	1347014	Identifier	file		1346776	1					
ANR	1347015	ExpressionStatement	thisdirent -> next = fs -> files	218:8:6608:6636	1346776	15	True				
ANR	1347016	AssignmentExpression	thisdirent -> next = fs -> files		1346776	0		=			
ANR	1347017	PtrMemberAccess	thisdirent -> next		1346776	0					
ANR	1347018	Identifier	thisdirent		1346776	0					
ANR	1347019	Identifier	next		1346776	1					
ANR	1347020	PtrMemberAccess	fs -> files		1346776	1					
ANR	1347021	Identifier	fs		1346776	0					
ANR	1347022	Identifier	files		1346776	1					
ANR	1347023	ExpressionStatement	fs -> files = thisdirent	219:8:6646:6668	1346776	16	True				
ANR	1347024	AssignmentExpression	fs -> files = thisdirent		1346776	0		=			
ANR	1347025	PtrMemberAccess	fs -> files		1346776	0					
ANR	1347026	Identifier	fs		1346776	0					
ANR	1347027	Identifier	files		1346776	1					
ANR	1347028	Identifier	thisdirent		1346776	1					
ANR	1347029	ExpressionStatement	file = thisdirent -> inode	221:4:6680:6704	1346776	6	True				
ANR	1347030	AssignmentExpression	file = thisdirent -> inode		1346776	0		=			
ANR	1347031	Identifier	file		1346776	0					
ANR	1347032	PtrMemberAccess	thisdirent -> inode		1346776	1					
ANR	1347033	Identifier	thisdirent		1346776	0					
ANR	1347034	Identifier	inode		1346776	1					
ANR	1347035	ExpressionStatement	file -> refcount ++	222:4:6710:6726	1346776	7	True				
ANR	1347036	PostIncDecOperationExpression	file -> refcount ++		1346776	0					
ANR	1347037	PtrMemberAccess	file -> refcount		1346776	0					
ANR	1347038	Identifier	file		1346776	0					
ANR	1347039	Identifier	refcount		1346776	1					
ANR	1347040	IncDec	++		1346776	1					
ANR	1347041	ExpressionStatement	"handle = gs_alloc_struct ( fs -> memory , ramhandle , & st_ramhandle , ""new ram directory entry"" )"	224:4:6733:6822	1346776	8	True				
ANR	1347042	AssignmentExpression	"handle = gs_alloc_struct ( fs -> memory , ramhandle , & st_ramhandle , ""new ram directory entry"" )"		1346776	0		=			
ANR	1347043	Identifier	handle		1346776	0					
ANR	1347044	CallExpression	"gs_alloc_struct ( fs -> memory , ramhandle , & st_ramhandle , ""new ram directory entry"" )"		1346776	1					
ANR	1347045	Callee	gs_alloc_struct		1346776	0					
ANR	1347046	Identifier	gs_alloc_struct		1346776	0					
ANR	1347047	ArgumentList	fs -> memory		1346776	1					
ANR	1347048	Argument	fs -> memory		1346776	0					
ANR	1347049	PtrMemberAccess	fs -> memory		1346776	0					
ANR	1347050	Identifier	fs		1346776	0					
ANR	1347051	Identifier	memory		1346776	1					
ANR	1347052	Argument	ramhandle		1346776	1					
ANR	1347053	Identifier	ramhandle		1346776	0					
ANR	1347054	Argument	& st_ramhandle		1346776	2					
ANR	1347055	UnaryOperationExpression	& st_ramhandle		1346776	0					
ANR	1347056	UnaryOperator	&		1346776	0					
ANR	1347057	Identifier	st_ramhandle		1346776	1					
ANR	1347058	Argument	"""new ram directory entry"""		1346776	3					
ANR	1347059	PrimaryExpression	"""new ram directory entry"""		1346776	0					
ANR	1347060	IfStatement	if ( ! handle )		1346776	9					
ANR	1347061	Condition	! handle	225:7:6831:6837	1346776	0	True				
ANR	1347062	UnaryOperationExpression	! handle		1346776	0					
ANR	1347063	UnaryOperator	!		1346776	0					
ANR	1347064	Identifier	handle		1346776	1					
ANR	1347065	CompoundStatement		45:16:1576:1576	1346776	1					
ANR	1347066	ExpressionStatement	fs -> last_error = RAMFS_NOMEM	226:8:6850:6878	1346776	0	True				
ANR	1347067	AssignmentExpression	fs -> last_error = RAMFS_NOMEM		1346776	0		=			
ANR	1347068	PtrMemberAccess	fs -> last_error		1346776	0					
ANR	1347069	Identifier	fs		1346776	0					
ANR	1347070	Identifier	last_error		1346776	1					
ANR	1347071	Identifier	RAMFS_NOMEM		1346776	1					
ANR	1347072	ReturnStatement	return NULL ;	227:8:6888:6899	1346776	1	True				
ANR	1347073	Identifier	NULL		1346776	0					
ANR	1347074	ExpressionStatement	handle -> file = file	229:4:6911:6930	1346776	10	True				
ANR	1347075	AssignmentExpression	handle -> file = file		1346776	0		=			
ANR	1347076	PtrMemberAccess	handle -> file		1346776	0					
ANR	1347077	Identifier	handle		1346776	0					
ANR	1347078	Identifier	file		1346776	1					
ANR	1347079	Identifier	file		1346776	1					
ANR	1347080	ExpressionStatement	handle -> last_error = 0	230:4:6936:6958	1346776	11	True				
ANR	1347081	AssignmentExpression	handle -> last_error = 0		1346776	0		=			
ANR	1347082	PtrMemberAccess	handle -> last_error		1346776	0					
ANR	1347083	Identifier	handle		1346776	0					
ANR	1347084	Identifier	last_error		1346776	1					
ANR	1347085	PrimaryExpression	0		1346776	1					
ANR	1347086	ExpressionStatement	handle -> filepos = 0	231:4:6964:6983	1346776	12	True				
ANR	1347087	AssignmentExpression	handle -> filepos = 0		1346776	0		=			
ANR	1347088	PtrMemberAccess	handle -> filepos		1346776	0					
ANR	1347089	Identifier	handle		1346776	0					
ANR	1347090	Identifier	filepos		1346776	1					
ANR	1347091	PrimaryExpression	0		1346776	1					
ANR	1347092	ExpressionStatement	handle -> mode = mode	232:4:6989:7008	1346776	13	True				
ANR	1347093	AssignmentExpression	handle -> mode = mode		1346776	0		=			
ANR	1347094	PtrMemberAccess	handle -> mode		1346776	0					
ANR	1347095	Identifier	handle		1346776	0					
ANR	1347096	Identifier	mode		1346776	1					
ANR	1347097	Identifier	mode		1346776	1					
ANR	1347098	IfStatement	if ( mode & RAMFS_TRUNC )		1346776	14					
ANR	1347099	Condition	mode & RAMFS_TRUNC	234:7:7018:7035	1346776	0	True				
ANR	1347100	BitAndExpression	mode & RAMFS_TRUNC		1346776	0		&			
ANR	1347101	Identifier	mode		1346776	0					
ANR	1347102	Identifier	RAMFS_TRUNC		1346776	1					
ANR	1347103	CompoundStatement		54:27:1774:1774	1346776	1					
ANR	1347104	ExpressionStatement	"resize ( file , 0 )"	235:8:7048:7062	1346776	0	True				
ANR	1347105	CallExpression	"resize ( file , 0 )"		1346776	0					
ANR	1347106	Callee	resize		1346776	0					
ANR	1347107	Identifier	resize		1346776	0					
ANR	1347108	ArgumentList	file		1346776	1					
ANR	1347109	Argument	file		1346776	0					
ANR	1347110	Identifier	file		1346776	0					
ANR	1347111	Argument	0		1346776	1					
ANR	1347112	PrimaryExpression	0		1346776	0					
ANR	1347113	ReturnStatement	return handle ;	237:4:7074:7087	1346776	15	True				
ANR	1347114	Identifier	handle		1346776	0					
ANR	1347115	ReturnType	ramhandle *		1346776	1					
ANR	1347116	Identifier	ramfs_open		1346776	2					
ANR	1347117	ParameterList	"gs_memory_t * mem , ramfs * fs , const char * filename , int mode"		1346776	3					
ANR	1347118	Parameter	gs_memory_t * mem	180:23:5203:5218	1346776	0	True				
ANR	1347119	ParameterType	gs_memory_t *		1346776	0					
ANR	1347120	Identifier	mem		1346776	1					
ANR	1347121	Parameter	ramfs * fs	180:41:5221:5229	1346776	1	True				
ANR	1347122	ParameterType	ramfs *		1346776	0					
ANR	1347123	Identifier	fs		1346776	1					
ANR	1347124	Parameter	const char * filename	180:51:5231:5251	1346776	2	True				
ANR	1347125	ParameterType	const char *		1346776	0					
ANR	1347126	Identifier	filename		1346776	1					
ANR	1347127	Parameter	int mode	180:73:5253:5260	1346776	3	True				
ANR	1347128	ParameterType	int		1346776	0					
ANR	1347129	Identifier	mode		1346776	1					
ANR	1347130	CFGEntryNode	ENTRY		1346776		True				
ANR	1347131	CFGExitNode	EXIT		1346776		True				
ANR	1347132	Symbol	gs_alloc_struct		1346776						
ANR	1347133	Symbol	& st_ramdirent		1346776						
ANR	1347134	Symbol	fs -> last_error		1346776						
ANR	1347135	Symbol	RAMFS_WRITE		1346776						
ANR	1347136	Symbol	fs		1346776						
ANR	1347137	Symbol	thisdirent -> inode		1346776						
ANR	1347138	Symbol	RAMFS_TRUNC		1346776						
ANR	1347139	Symbol	mode		1346776						
ANR	1347140	Symbol	* fs		1346776						
ANR	1347141	Symbol	fs -> files		1346776						
ANR	1347142	Symbol	handle -> file		1346776						
ANR	1347143	Symbol	strlen		1346776						
ANR	1347144	Symbol	ramfs_findfile		1346776						
ANR	1347145	Symbol	file		1346776						
ANR	1347146	Symbol	ramhandle		1346776						
ANR	1347147	Symbol	mem		1346776						
ANR	1347148	Symbol	thisdirent -> next		1346776						
ANR	1347149	Symbol	file -> size		1346776						
ANR	1347150	Symbol	file -> blocks		1346776						
ANR	1347151	Symbol	RAMFS_CREATE		1346776						
ANR	1347152	Symbol	RAMFS_NOMEM		1346776						
ANR	1347153	Symbol	thisdirent		1346776						
ANR	1347154	Symbol	RAMFS_APPEND		1346776						
ANR	1347155	Symbol	gs_alloc_bytes		1346776						
ANR	1347156	Symbol	file -> fs		1346776						
ANR	1347157	Symbol	NULL		1346776						
ANR	1347158	Symbol	handle -> last_error		1346776						
ANR	1347159	Symbol	* handle		1346776						
ANR	1347160	Symbol	ramfile		1346776						
ANR	1347161	Symbol	thisdirent -> filename		1346776						
ANR	1347162	Symbol	ramdirent		1346776						
ANR	1347163	Symbol	file -> refcount		1346776						
ANR	1347164	Symbol	dirent_filename		1346776						
ANR	1347165	Symbol	handle		1346776						
ANR	1347166	Symbol	* thisdirent		1346776						
ANR	1347167	Symbol	* file		1346776						
ANR	1347168	Symbol	fs -> memory		1346776						
ANR	1347169	Symbol	handle -> filepos		1346776						
ANR	1347170	Symbol	filename		1346776						
ANR	1347171	Symbol	& st_ramhandle		1346776						
ANR	1347172	Symbol	& st_ramfile		1346776						
ANR	1347173	Symbol	file -> data		1346776						
ANR	1347174	Symbol	RAMFS_NOTFOUND		1346776						
ANR	1347175	Symbol	handle -> mode		1346776						
ANR	1347176	Symbol	file -> blocklist_size		1346776						
ANR	1347177	Function	ramfs_blocksize	240:0:7092:7150							
ANR	1347178	FunctionDef	ramfs_blocksize (ramfs * fs)		1347177	0					
ANR	1347179	CompoundStatement		240:32:7124:7150	1347177	0					
ANR	1347180	ReturnStatement	return RAMFS_BLOCKSIZE ;	240:1:7126:7148	1347177	0	True				
ANR	1347181	Identifier	RAMFS_BLOCKSIZE		1347177	0					
ANR	1347182	ReturnType	int		1347177	1					
ANR	1347183	Identifier	ramfs_blocksize		1347177	2					
ANR	1347184	ParameterList	ramfs * fs		1347177	3					
ANR	1347185	Parameter	ramfs * fs	240:20:7112:7121	1347177	0	True				
ANR	1347186	ParameterType	ramfs *		1347177	0					
ANR	1347187	Identifier	fs		1347177	1					
ANR	1347188	CFGEntryNode	ENTRY		1347177		True				
ANR	1347189	CFGExitNode	EXIT		1347177		True				
ANR	1347190	Symbol	RAMFS_BLOCKSIZE		1347177						
ANR	1347191	Symbol	fs		1347177						
ANR	1347192	Function	ramfs_blocksfree	241:0:7152:7210							
ANR	1347193	FunctionDef	ramfs_blocksfree (ramfs * fs)		1347192	0					
ANR	1347194	CompoundStatement		241:33:7185:7210	1347192	0					
ANR	1347195	ReturnStatement	return fs -> blocksfree ;	241:1:7187:7208	1347192	0	True				
ANR	1347196	PtrMemberAccess	fs -> blocksfree		1347192	0					
ANR	1347197	Identifier	fs		1347192	0					
ANR	1347198	Identifier	blocksfree		1347192	1					
ANR	1347199	ReturnType	int		1347192	1					
ANR	1347200	Identifier	ramfs_blocksfree		1347192	2					
ANR	1347201	ParameterList	ramfs * fs		1347192	3					
ANR	1347202	Parameter	ramfs * fs	241:21:7173:7182	1347192	0	True				
ANR	1347203	ParameterType	ramfs *		1347192	0					
ANR	1347204	Identifier	fs		1347192	1					
ANR	1347205	CFGEntryNode	ENTRY		1347192		True				
ANR	1347206	CFGExitNode	EXIT		1347192		True				
ANR	1347207	Symbol	* fs		1347192						
ANR	1347208	Symbol	fs -> blocksfree		1347192						
ANR	1347209	Symbol	fs		1347192						
ANR	1347210	Function	ramfile_error	242:0:7212:7279							
ANR	1347211	FunctionDef	ramfile_error (ramhandle * handle)		1347210	0					
ANR	1347212	CompoundStatement		242:38:7250:7279	1347210	0					
ANR	1347213	ReturnStatement	return handle -> last_error ;	242:1:7252:7277	1347210	0	True				
ANR	1347214	PtrMemberAccess	handle -> last_error		1347210	0					
ANR	1347215	Identifier	handle		1347210	0					
ANR	1347216	Identifier	last_error		1347210	1					
ANR	1347217	ReturnType	int		1347210	1					
ANR	1347218	Identifier	ramfile_error		1347210	2					
ANR	1347219	ParameterList	ramhandle * handle		1347210	3					
ANR	1347220	Parameter	ramhandle * handle	242:18:7230:7247	1347210	0	True				
ANR	1347221	ParameterType	ramhandle *		1347210	0					
ANR	1347222	Identifier	handle		1347210	1					
ANR	1347223	CFGEntryNode	ENTRY		1347210		True				
ANR	1347224	CFGExitNode	EXIT		1347210		True				
ANR	1347225	Symbol	handle -> last_error		1347210						
ANR	1347226	Symbol	* handle		1347210						
ANR	1347227	Symbol	handle		1347210						
ANR	1347228	Function	unlink_node	244:0:7282:7707							
ANR	1347229	FunctionDef	unlink_node (ramfile * inode)		1347228	0					
ANR	1347230	CompoundStatement		245:0:7323:7707	1347228	0					
ANR	1347231	IdentifierDeclStatement	int c ;	246:4:7329:7334	1347228	0	True				
ANR	1347232	IdentifierDecl	c		1347228	0					
ANR	1347233	IdentifierDeclType	int		1347228	0					
ANR	1347234	Identifier	c		1347228	1					
ANR	1347235	ExpressionStatement	-- inode -> refcount	248:4:7341:7358	1347228	1	True				
ANR	1347236	UnaryExpression	-- inode -> refcount		1347228	0					
ANR	1347237	IncDec	--		1347228	0					
ANR	1347238	PtrMemberAccess	inode -> refcount		1347228	1					
ANR	1347239	Identifier	inode		1347228	0					
ANR	1347240	Identifier	refcount		1347228	1					
ANR	1347241	IfStatement	if ( inode -> refcount )		1347228	2					
ANR	1347242	Condition	inode -> refcount	249:7:7367:7381	1347228	0	True				
ANR	1347243	PtrMemberAccess	inode -> refcount		1347228	0					
ANR	1347244	Identifier	inode		1347228	0					
ANR	1347245	Identifier	refcount		1347228	1					
ANR	1347246	ReturnStatement	return ;	249:24:7384:7390	1347228	1	True				
ANR	1347247	ForStatement	for ( c = 0 ; c < inode -> blocks ; c ++ )		1347228	3					
ANR	1347248	ForInit	c = 0 ;	252:8:7440:7443	1347228	0	True				
ANR	1347249	AssignmentExpression	c = 0		1347228	0		=			
ANR	1347250	Identifier	c		1347228	0					
ANR	1347251	PrimaryExpression	0		1347228	1					
ANR	1347252	Condition	c < inode -> blocks	252:12:7444:7458	1347228	1	True				
ANR	1347253	RelationalExpression	c < inode -> blocks		1347228	0		<			
ANR	1347254	Identifier	c		1347228	0					
ANR	1347255	PtrMemberAccess	inode -> blocks		1347228	1					
ANR	1347256	Identifier	inode		1347228	0					
ANR	1347257	Identifier	blocks		1347228	1					
ANR	1347258	PostIncDecOperationExpression	c ++	252:28:7460:7462	1347228	2	True				
ANR	1347259	Identifier	c		1347228	0					
ANR	1347260	IncDec	++		1347228	1					
ANR	1347261	CompoundStatement		8:33:141:141	1347228	3					
ANR	1347262	ExpressionStatement	"gs_free_object ( inode -> fs -> memory , inode -> data [ c ] , ""unlink node"" )"	253:8:7475:7539	1347228	0	True				
ANR	1347263	CallExpression	"gs_free_object ( inode -> fs -> memory , inode -> data [ c ] , ""unlink node"" )"		1347228	0					
ANR	1347264	Callee	gs_free_object		1347228	0					
ANR	1347265	Identifier	gs_free_object		1347228	0					
ANR	1347266	ArgumentList	inode -> fs -> memory		1347228	1					
ANR	1347267	Argument	inode -> fs -> memory		1347228	0					
ANR	1347268	PtrMemberAccess	inode -> fs -> memory		1347228	0					
ANR	1347269	PtrMemberAccess	inode -> fs		1347228	0					
ANR	1347270	Identifier	inode		1347228	0					
ANR	1347271	Identifier	fs		1347228	1					
ANR	1347272	Identifier	memory		1347228	1					
ANR	1347273	Argument	inode -> data [ c ]		1347228	1					
ANR	1347274	ArrayIndexing	inode -> data [ c ]		1347228	0					
ANR	1347275	PtrMemberAccess	inode -> data		1347228	0					
ANR	1347276	Identifier	inode		1347228	0					
ANR	1347277	Identifier	data		1347228	1					
ANR	1347278	Identifier	c		1347228	1					
ANR	1347279	Argument	"""unlink node"""		1347228	2					
ANR	1347280	PrimaryExpression	"""unlink node"""		1347228	0					
ANR	1347281	ExpressionStatement	inode -> fs -> blocksfree += c	255:4:7551:7577	1347228	4	True				
ANR	1347282	AssignmentExpression	inode -> fs -> blocksfree += c		1347228	0		+=			
ANR	1347283	PtrMemberAccess	inode -> fs -> blocksfree		1347228	0					
ANR	1347284	PtrMemberAccess	inode -> fs		1347228	0					
ANR	1347285	Identifier	inode		1347228	0					
ANR	1347286	Identifier	fs		1347228	1					
ANR	1347287	Identifier	blocksfree		1347228	1					
ANR	1347288	Identifier	c		1347228	1					
ANR	1347289	ExpressionStatement	"gs_free_object ( inode -> fs -> memory , inode -> data , ""unlink node"" )"	256:4:7583:7644	1347228	5	True				
ANR	1347290	CallExpression	"gs_free_object ( inode -> fs -> memory , inode -> data , ""unlink node"" )"		1347228	0					
ANR	1347291	Callee	gs_free_object		1347228	0					
ANR	1347292	Identifier	gs_free_object		1347228	0					
ANR	1347293	ArgumentList	inode -> fs -> memory		1347228	1					
ANR	1347294	Argument	inode -> fs -> memory		1347228	0					
ANR	1347295	PtrMemberAccess	inode -> fs -> memory		1347228	0					
ANR	1347296	PtrMemberAccess	inode -> fs		1347228	0					
ANR	1347297	Identifier	inode		1347228	0					
ANR	1347298	Identifier	fs		1347228	1					
ANR	1347299	Identifier	memory		1347228	1					
ANR	1347300	Argument	inode -> data		1347228	1					
ANR	1347301	PtrMemberAccess	inode -> data		1347228	0					
ANR	1347302	Identifier	inode		1347228	0					
ANR	1347303	Identifier	data		1347228	1					
ANR	1347304	Argument	"""unlink node"""		1347228	2					
ANR	1347305	PrimaryExpression	"""unlink node"""		1347228	0					
ANR	1347306	ExpressionStatement	"gs_free_object ( inode -> fs -> memory , inode , ""unlink node"" )"	257:4:7650:7705	1347228	6	True				
ANR	1347307	CallExpression	"gs_free_object ( inode -> fs -> memory , inode , ""unlink node"" )"		1347228	0					
ANR	1347308	Callee	gs_free_object		1347228	0					
ANR	1347309	Identifier	gs_free_object		1347228	0					
ANR	1347310	ArgumentList	inode -> fs -> memory		1347228	1					
ANR	1347311	Argument	inode -> fs -> memory		1347228	0					
ANR	1347312	PtrMemberAccess	inode -> fs -> memory		1347228	0					
ANR	1347313	PtrMemberAccess	inode -> fs		1347228	0					
ANR	1347314	Identifier	inode		1347228	0					
ANR	1347315	Identifier	fs		1347228	1					
ANR	1347316	Identifier	memory		1347228	1					
ANR	1347317	Argument	inode		1347228	1					
ANR	1347318	Identifier	inode		1347228	0					
ANR	1347319	Argument	"""unlink node"""		1347228	2					
ANR	1347320	PrimaryExpression	"""unlink node"""		1347228	0					
ANR	1347321	ReturnType	static void		1347228	1					
ANR	1347322	Identifier	unlink_node		1347228	2					
ANR	1347323	ParameterList	ramfile * inode		1347228	3					
ANR	1347324	Parameter	ramfile * inode	244:24:7306:7320	1347228	0	True				
ANR	1347325	ParameterType	ramfile *		1347228	0					
ANR	1347326	Identifier	inode		1347228	1					
ANR	1347327	CFGEntryNode	ENTRY		1347228		True				
ANR	1347328	CFGExitNode	EXIT		1347228		True				
ANR	1347329	Symbol	inode -> blocks		1347228						
ANR	1347330	Symbol	c		1347228						
ANR	1347331	Symbol	inode -> fs		1347228						
ANR	1347332	Symbol	* * inode		1347228						
ANR	1347333	Symbol	inode -> fs -> blocksfree		1347228						
ANR	1347334	Symbol	* inode		1347228						
ANR	1347335	Symbol	* inode -> fs		1347228						
ANR	1347336	Symbol	inode -> data		1347228						
ANR	1347337	Symbol	* c		1347228						
ANR	1347338	Symbol	inode -> fs -> memory		1347228						
ANR	1347339	Symbol	* inode -> data		1347228						
ANR	1347340	Symbol	inode		1347228						
ANR	1347341	Symbol	inode -> refcount		1347228						
ANR	1347342	Function	ramfs_unlink	260:0:7710:8494							
ANR	1347343	FunctionDef	"ramfs_unlink (ramfs * fs , const char * filename)"		1347342	0					
ANR	1347344	CompoundStatement		261:0:7760:8494	1347342	0					
ANR	1347345	IdentifierDeclStatement	ramdirent * * last ;	262:4:7766:7783	1347342	0	True				
ANR	1347346	IdentifierDecl	* * last		1347342	0					
ANR	1347347	IdentifierDeclType	ramdirent * *		1347342	0					
ANR	1347348	Identifier	last		1347342	1					
ANR	1347349	IdentifierDeclStatement	ramdirent * thisdirent ;	263:4:7789:7811	1347342	1	True				
ANR	1347350	IdentifierDecl	* thisdirent		1347342	0					
ANR	1347351	IdentifierDeclType	ramdirent *		1347342	0					
ANR	1347352	Identifier	thisdirent		1347342	1					
ANR	1347353	IdentifierDeclStatement	ramfs_enum * e ;	264:4:7817:7830	1347342	2	True				
ANR	1347354	IdentifierDecl	* e		1347342	0					
ANR	1347355	IdentifierDeclType	ramfs_enum *		1347342	0					
ANR	1347356	Identifier	e		1347342	1					
ANR	1347357	ExpressionStatement	last = & fs -> files	266:4:7837:7854	1347342	3	True				
ANR	1347358	AssignmentExpression	last = & fs -> files		1347342	0		=			
ANR	1347359	Identifier	last		1347342	0					
ANR	1347360	UnaryOperationExpression	& fs -> files		1347342	1					
ANR	1347361	UnaryOperator	&		1347342	0					
ANR	1347362	PtrMemberAccess	fs -> files		1347342	1					
ANR	1347363	Identifier	fs		1347342	0					
ANR	1347364	Identifier	files		1347342	1					
ANR	1347365	WhileStatement	while ( 1 )		1347342	4					
ANR	1347366	Condition	1	267:10:7866:7866	1347342	0	True				
ANR	1347367	PrimaryExpression	1		1347342	0					
ANR	1347368	CompoundStatement		7:13:108:108	1347342	1					
ANR	1347369	IfStatement	if ( ! ( thisdirent = * last ) )		1347342	0					
ANR	1347370	Condition	! ( thisdirent = * last )	268:11:7882:7902	1347342	0	True				
ANR	1347371	UnaryOperationExpression	! ( thisdirent = * last )		1347342	0					
ANR	1347372	UnaryOperator	!		1347342	0					
ANR	1347373	AssignmentExpression	thisdirent = * last		1347342	1		=			
ANR	1347374	Identifier	thisdirent		1347342	0					
ANR	1347375	UnaryOperationExpression	* last		1347342	1					
ANR	1347376	UnaryOperator	*		1347342	0					
ANR	1347377	Identifier	last		1347342	1					
ANR	1347378	CompoundStatement		8:34:144:144	1347342	1					
ANR	1347379	ExpressionStatement	fs -> last_error = RAMFS_NOTFOUND	269:12:7919:7950	1347342	0	True				
ANR	1347380	AssignmentExpression	fs -> last_error = RAMFS_NOTFOUND		1347342	0		=			
ANR	1347381	PtrMemberAccess	fs -> last_error		1347342	0					
ANR	1347382	Identifier	fs		1347342	0					
ANR	1347383	Identifier	last_error		1347342	1					
ANR	1347384	Identifier	RAMFS_NOTFOUND		1347342	1					
ANR	1347385	ReturnStatement	return - 1 ;	270:12:7964:7973	1347342	1	True				
ANR	1347386	UnaryOperationExpression	- 1		1347342	0					
ANR	1347387	UnaryOperator	-		1347342	0					
ANR	1347388	PrimaryExpression	1		1347342	1					
ANR	1347389	IfStatement	"if ( strcmp ( thisdirent -> filename , filename ) == 0 )"		1347342	1					
ANR	1347390	Condition	"strcmp ( thisdirent -> filename , filename ) == 0"	272:11:7996:8037	1347342	0	True				
ANR	1347391	EqualityExpression	"strcmp ( thisdirent -> filename , filename ) == 0"		1347342	0		==			
ANR	1347392	CallExpression	"strcmp ( thisdirent -> filename , filename )"		1347342	0					
ANR	1347393	Callee	strcmp		1347342	0					
ANR	1347394	Identifier	strcmp		1347342	0					
ANR	1347395	ArgumentList	thisdirent -> filename		1347342	1					
ANR	1347396	Argument	thisdirent -> filename		1347342	0					
ANR	1347397	PtrMemberAccess	thisdirent -> filename		1347342	0					
ANR	1347398	Identifier	thisdirent		1347342	0					
ANR	1347399	Identifier	filename		1347342	1					
ANR	1347400	Argument	filename		1347342	1					
ANR	1347401	Identifier	filename		1347342	0					
ANR	1347402	PrimaryExpression	0		1347342	1					
ANR	1347403	BreakStatement	break ;	272:55:8040:8045	1347342	1	True				
ANR	1347404	ExpressionStatement	last = & ( thisdirent -> next )	273:8:8055:8081	1347342	2	True				
ANR	1347405	AssignmentExpression	last = & ( thisdirent -> next )		1347342	0		=			
ANR	1347406	Identifier	last		1347342	0					
ANR	1347407	UnaryOperationExpression	& ( thisdirent -> next )		1347342	1					
ANR	1347408	UnaryOperator	&		1347342	0					
ANR	1347409	PtrMemberAccess	thisdirent -> next		1347342	1					
ANR	1347410	Identifier	thisdirent		1347342	0					
ANR	1347411	Identifier	next		1347342	1					
ANR	1347412	ExpressionStatement	unlink_node ( thisdirent -> inode )	276:4:8094:8124	1347342	5	True				
ANR	1347413	CallExpression	unlink_node ( thisdirent -> inode )		1347342	0					
ANR	1347414	Callee	unlink_node		1347342	0					
ANR	1347415	Identifier	unlink_node		1347342	0					
ANR	1347416	ArgumentList	thisdirent -> inode		1347342	1					
ANR	1347417	Argument	thisdirent -> inode		1347342	0					
ANR	1347418	PtrMemberAccess	thisdirent -> inode		1347342	0					
ANR	1347419	Identifier	thisdirent		1347342	0					
ANR	1347420	Identifier	inode		1347342	1					
ANR	1347421	ExpressionStatement	"gs_free_object ( fs -> memory , thisdirent -> filename , ""unlink"" )"	277:4:8130:8188	1347342	6	True				
ANR	1347422	CallExpression	"gs_free_object ( fs -> memory , thisdirent -> filename , ""unlink"" )"		1347342	0					
ANR	1347423	Callee	gs_free_object		1347342	0					
ANR	1347424	Identifier	gs_free_object		1347342	0					
ANR	1347425	ArgumentList	fs -> memory		1347342	1					
ANR	1347426	Argument	fs -> memory		1347342	0					
ANR	1347427	PtrMemberAccess	fs -> memory		1347342	0					
ANR	1347428	Identifier	fs		1347342	0					
ANR	1347429	Identifier	memory		1347342	1					
ANR	1347430	Argument	thisdirent -> filename		1347342	1					
ANR	1347431	PtrMemberAccess	thisdirent -> filename		1347342	0					
ANR	1347432	Identifier	thisdirent		1347342	0					
ANR	1347433	Identifier	filename		1347342	1					
ANR	1347434	Argument	"""unlink"""		1347342	2					
ANR	1347435	PrimaryExpression	"""unlink"""		1347342	0					
ANR	1347436	ExpressionStatement	( * last ) = thisdirent -> next	278:4:8194:8220	1347342	7	True				
ANR	1347437	AssignmentExpression	( * last ) = thisdirent -> next		1347342	0		=			
ANR	1347438	UnaryOperationExpression	* last		1347342	0					
ANR	1347439	UnaryOperator	*		1347342	0					
ANR	1347440	Identifier	last		1347342	1					
ANR	1347441	PtrMemberAccess	thisdirent -> next		1347342	1					
ANR	1347442	Identifier	thisdirent		1347342	0					
ANR	1347443	Identifier	next		1347342	1					
ANR	1347444	ExpressionStatement	e = fs -> active_enums	280:4:8227:8247	1347342	8	True				
ANR	1347445	AssignmentExpression	e = fs -> active_enums		1347342	0		=			
ANR	1347446	Identifier	e		1347342	0					
ANR	1347447	PtrMemberAccess	fs -> active_enums		1347342	1					
ANR	1347448	Identifier	fs		1347342	0					
ANR	1347449	Identifier	active_enums		1347342	1					
ANR	1347450	WhileStatement	while ( e )		1347342	9					
ANR	1347451	Condition	e	282:10:8326:8326	1347342	0	True				
ANR	1347452	Identifier	e		1347342	0					
ANR	1347453	CompoundStatement		22:13:568:568	1347342	1					
ANR	1347454	IfStatement	if ( e -> current == thisdirent )		1347342	0					
ANR	1347455	Condition	e -> current == thisdirent	283:11:8342:8365	1347342	0	True				
ANR	1347456	EqualityExpression	e -> current == thisdirent		1347342	0		==			
ANR	1347457	PtrMemberAccess	e -> current		1347342	0					
ANR	1347458	Identifier	e		1347342	0					
ANR	1347459	Identifier	current		1347342	1					
ANR	1347460	Identifier	thisdirent		1347342	1					
ANR	1347461	ExpressionStatement	e -> current = thisdirent -> next	283:37:8368:8397	1347342	1	True				
ANR	1347462	AssignmentExpression	e -> current = thisdirent -> next		1347342	0		=			
ANR	1347463	PtrMemberAccess	e -> current		1347342	0					
ANR	1347464	Identifier	e		1347342	0					
ANR	1347465	Identifier	current		1347342	1					
ANR	1347466	PtrMemberAccess	thisdirent -> next		1347342	1					
ANR	1347467	Identifier	thisdirent		1347342	0					
ANR	1347468	Identifier	next		1347342	1					
ANR	1347469	ExpressionStatement	e = e -> next	284:8:8407:8418	1347342	1	True				
ANR	1347470	AssignmentExpression	e = e -> next		1347342	0		=			
ANR	1347471	Identifier	e		1347342	0					
ANR	1347472	PtrMemberAccess	e -> next		1347342	1					
ANR	1347473	Identifier	e		1347342	0					
ANR	1347474	Identifier	next		1347342	1					
ANR	1347475	ExpressionStatement	"gs_free_object ( fs -> memory , thisdirent , ""unlink"" )"	286:4:8430:8478	1347342	10	True				
ANR	1347476	CallExpression	"gs_free_object ( fs -> memory , thisdirent , ""unlink"" )"		1347342	0					
ANR	1347477	Callee	gs_free_object		1347342	0					
ANR	1347478	Identifier	gs_free_object		1347342	0					
ANR	1347479	ArgumentList	fs -> memory		1347342	1					
ANR	1347480	Argument	fs -> memory		1347342	0					
ANR	1347481	PtrMemberAccess	fs -> memory		1347342	0					
ANR	1347482	Identifier	fs		1347342	0					
ANR	1347483	Identifier	memory		1347342	1					
ANR	1347484	Argument	thisdirent		1347342	1					
ANR	1347485	Identifier	thisdirent		1347342	0					
ANR	1347486	Argument	"""unlink"""		1347342	2					
ANR	1347487	PrimaryExpression	"""unlink"""		1347342	0					
ANR	1347488	ReturnStatement	return 0 ;	287:4:8484:8492	1347342	11	True				
ANR	1347489	PrimaryExpression	0		1347342	0					
ANR	1347490	ReturnType	int		1347342	1					
ANR	1347491	Identifier	ramfs_unlink		1347342	2					
ANR	1347492	ParameterList	"ramfs * fs , const char * filename"		1347342	3					
ANR	1347493	Parameter	ramfs * fs	260:17:7727:7736	1347342	0	True				
ANR	1347494	ParameterType	ramfs *		1347342	0					
ANR	1347495	Identifier	fs		1347342	1					
ANR	1347496	Parameter	const char * filename	260:28:7738:7757	1347342	1	True				
ANR	1347497	ParameterType	const char *		1347342	0					
ANR	1347498	Identifier	filename		1347342	1					
ANR	1347499	CFGEntryNode	ENTRY		1347342		True				
ANR	1347500	CFGExitNode	EXIT		1347342		True				
ANR	1347501	Symbol	strcmp		1347342						
ANR	1347502	Symbol	thisdirent		1347342						
ANR	1347503	Symbol	& thisdirent -> next		1347342						
ANR	1347504	Symbol	last		1347342						
ANR	1347505	Symbol	e		1347342						
ANR	1347506	Symbol	thisdirent -> filename		1347342						
ANR	1347507	Symbol	e -> next		1347342						
ANR	1347508	Symbol	fs -> last_error		1347342						
ANR	1347509	Symbol	* thisdirent		1347342						
ANR	1347510	Symbol	fs		1347342						
ANR	1347511	Symbol	* last		1347342						
ANR	1347512	Symbol	thisdirent -> inode		1347342						
ANR	1347513	Symbol	* e		1347342						
ANR	1347514	Symbol	* fs		1347342						
ANR	1347515	Symbol	fs -> memory		1347342						
ANR	1347516	Symbol	& fs -> files		1347342						
ANR	1347517	Symbol	filename		1347342						
ANR	1347518	Symbol	thisdirent -> next		1347342						
ANR	1347519	Symbol	RAMFS_NOTFOUND		1347342						
ANR	1347520	Symbol	fs -> active_enums		1347342						
ANR	1347521	Symbol	e -> current		1347342						
ANR	1347522	Function	ramfs_rename	290:0:8497:9250							
ANR	1347523	FunctionDef	"ramfs_rename (ramfs * fs , const char * oldname , const char * newname)"		1347522	0					
ANR	1347524	CompoundStatement		291:0:8566:9250	1347522	0					
ANR	1347525	IdentifierDeclStatement	ramdirent * thisdirent ;	292:4:8572:8594	1347522	0	True				
ANR	1347526	IdentifierDecl	* thisdirent		1347522	0					
ANR	1347527	IdentifierDeclType	ramdirent *		1347522	0					
ANR	1347528	Identifier	thisdirent		1347522	1					
ANR	1347529	IdentifierDeclStatement	char * newnamebuf ;	293:4:8600:8617	1347522	1	True				
ANR	1347530	IdentifierDecl	* newnamebuf		1347522	0					
ANR	1347531	IdentifierDeclType	char *		1347522	0					
ANR	1347532	Identifier	newnamebuf		1347522	1					
ANR	1347533	ExpressionStatement	"thisdirent = ramfs_findfile ( fs , oldname )"	295:4:8624:8663	1347522	2	True				
ANR	1347534	AssignmentExpression	"thisdirent = ramfs_findfile ( fs , oldname )"		1347522	0		=			
ANR	1347535	Identifier	thisdirent		1347522	0					
ANR	1347536	CallExpression	"ramfs_findfile ( fs , oldname )"		1347522	1					
ANR	1347537	Callee	ramfs_findfile		1347522	0					
ANR	1347538	Identifier	ramfs_findfile		1347522	0					
ANR	1347539	ArgumentList	fs		1347522	1					
ANR	1347540	Argument	fs		1347522	0					
ANR	1347541	Identifier	fs		1347522	0					
ANR	1347542	Argument	oldname		1347522	1					
ANR	1347543	Identifier	oldname		1347522	0					
ANR	1347544	IfStatement	if ( ! thisdirent )		1347522	3					
ANR	1347545	Condition	! thisdirent	297:7:8673:8683	1347522	0	True				
ANR	1347546	UnaryOperationExpression	! thisdirent		1347522	0					
ANR	1347547	UnaryOperator	!		1347522	0					
ANR	1347548	Identifier	thisdirent		1347522	1					
ANR	1347549	CompoundStatement		7:20:119:119	1347522	1					
ANR	1347550	ExpressionStatement	fs -> last_error = RAMFS_NOTFOUND	298:8:8696:8727	1347522	0	True				
ANR	1347551	AssignmentExpression	fs -> last_error = RAMFS_NOTFOUND		1347522	0		=			
ANR	1347552	PtrMemberAccess	fs -> last_error		1347522	0					
ANR	1347553	Identifier	fs		1347522	0					
ANR	1347554	Identifier	last_error		1347522	1					
ANR	1347555	Identifier	RAMFS_NOTFOUND		1347522	1					
ANR	1347556	ReturnStatement	return - 1 ;	299:8:8737:8746	1347522	1	True				
ANR	1347557	UnaryOperationExpression	- 1		1347522	0					
ANR	1347558	UnaryOperator	-		1347522	0					
ANR	1347559	PrimaryExpression	1		1347522	1					
ANR	1347560	IfStatement	"if ( strcmp ( oldname , newname ) == 0 )"		1347522	4					
ANR	1347561	Condition	"strcmp ( oldname , newname ) == 0"	303:7:8785:8812	1347522	0	True				
ANR	1347562	EqualityExpression	"strcmp ( oldname , newname ) == 0"		1347522	0		==			
ANR	1347563	CallExpression	"strcmp ( oldname , newname )"		1347522	0					
ANR	1347564	Callee	strcmp		1347522	0					
ANR	1347565	Identifier	strcmp		1347522	0					
ANR	1347566	ArgumentList	oldname		1347522	1					
ANR	1347567	Argument	oldname		1347522	0					
ANR	1347568	Identifier	oldname		1347522	0					
ANR	1347569	Argument	newname		1347522	1					
ANR	1347570	Identifier	newname		1347522	0					
ANR	1347571	PrimaryExpression	0		1347522	1					
ANR	1347572	ReturnStatement	return 0 ;	303:37:8815:8823	1347522	1	True				
ANR	1347573	PrimaryExpression	0		1347522	0					
ANR	1347574	ExpressionStatement	"newnamebuf = ( char * ) gs_alloc_bytes ( fs -> memory , strlen ( newname ) + 1 , ""ramfs rename"" )"	305:4:8830:8912	1347522	5	True				
ANR	1347575	AssignmentExpression	"newnamebuf = ( char * ) gs_alloc_bytes ( fs -> memory , strlen ( newname ) + 1 , ""ramfs rename"" )"		1347522	0		=			
ANR	1347576	Identifier	newnamebuf		1347522	0					
ANR	1347577	CastExpression	"( char * ) gs_alloc_bytes ( fs -> memory , strlen ( newname ) + 1 , ""ramfs rename"" )"		1347522	1					
ANR	1347578	CastTarget	char *		1347522	0					
ANR	1347579	CallExpression	"gs_alloc_bytes ( fs -> memory , strlen ( newname ) + 1 , ""ramfs rename"" )"		1347522	1					
ANR	1347580	Callee	gs_alloc_bytes		1347522	0					
ANR	1347581	Identifier	gs_alloc_bytes		1347522	0					
ANR	1347582	ArgumentList	fs -> memory		1347522	1					
ANR	1347583	Argument	fs -> memory		1347522	0					
ANR	1347584	PtrMemberAccess	fs -> memory		1347522	0					
ANR	1347585	Identifier	fs		1347522	0					
ANR	1347586	Identifier	memory		1347522	1					
ANR	1347587	Argument	strlen ( newname ) + 1		1347522	1					
ANR	1347588	AdditiveExpression	strlen ( newname ) + 1		1347522	0		+			
ANR	1347589	CallExpression	strlen ( newname )		1347522	0					
ANR	1347590	Callee	strlen		1347522	0					
ANR	1347591	Identifier	strlen		1347522	0					
ANR	1347592	ArgumentList	newname		1347522	1					
ANR	1347593	Argument	newname		1347522	0					
ANR	1347594	Identifier	newname		1347522	0					
ANR	1347595	PrimaryExpression	1		1347522	1					
ANR	1347596	Argument	"""ramfs rename"""		1347522	2					
ANR	1347597	PrimaryExpression	"""ramfs rename"""		1347522	0					
ANR	1347598	IfStatement	if ( ! newnamebuf )		1347522	6					
ANR	1347599	Condition	! newnamebuf	306:7:8921:8931	1347522	0	True				
ANR	1347600	UnaryOperationExpression	! newnamebuf		1347522	0					
ANR	1347601	UnaryOperator	!		1347522	0					
ANR	1347602	Identifier	newnamebuf		1347522	1					
ANR	1347603	CompoundStatement		16:20:367:367	1347522	1					
ANR	1347604	ExpressionStatement	fs -> last_error = RAMFS_NOMEM	307:8:8944:8972	1347522	0	True				
ANR	1347605	AssignmentExpression	fs -> last_error = RAMFS_NOMEM		1347522	0		=			
ANR	1347606	PtrMemberAccess	fs -> last_error		1347522	0					
ANR	1347607	Identifier	fs		1347522	0					
ANR	1347608	Identifier	last_error		1347522	1					
ANR	1347609	Identifier	RAMFS_NOMEM		1347522	1					
ANR	1347610	ReturnStatement	return - 1 ;	308:8:8982:8991	1347522	1	True				
ANR	1347611	UnaryOperationExpression	- 1		1347522	0					
ANR	1347612	UnaryOperator	-		1347522	0					
ANR	1347613	PrimaryExpression	1		1347522	1					
ANR	1347614	ExpressionStatement	"ramfs_unlink ( fs , newname )"	312:4:9068:9092	1347522	7	True				
ANR	1347615	CallExpression	"ramfs_unlink ( fs , newname )"		1347522	0					
ANR	1347616	Callee	ramfs_unlink		1347522	0					
ANR	1347617	Identifier	ramfs_unlink		1347522	0					
ANR	1347618	ArgumentList	fs		1347522	1					
ANR	1347619	Argument	fs		1347522	0					
ANR	1347620	Identifier	fs		1347522	0					
ANR	1347621	Argument	newname		1347522	1					
ANR	1347622	Identifier	newname		1347522	0					
ANR	1347623	ExpressionStatement	"strcpy ( newnamebuf , newname )"	314:4:9099:9125	1347522	8	True				
ANR	1347624	CallExpression	"strcpy ( newnamebuf , newname )"		1347522	0					
ANR	1347625	Callee	strcpy		1347522	0					
ANR	1347626	Identifier	strcpy		1347522	0					
ANR	1347627	ArgumentList	newnamebuf		1347522	1					
ANR	1347628	Argument	newnamebuf		1347522	0					
ANR	1347629	Identifier	newnamebuf		1347522	0					
ANR	1347630	Argument	newname		1347522	1					
ANR	1347631	Identifier	newname		1347522	0					
ANR	1347632	ExpressionStatement	"gs_free_object ( fs -> memory , thisdirent -> filename , ""ramfs rename"" )"	315:4:9131:9195	1347522	9	True				
ANR	1347633	CallExpression	"gs_free_object ( fs -> memory , thisdirent -> filename , ""ramfs rename"" )"		1347522	0					
ANR	1347634	Callee	gs_free_object		1347522	0					
ANR	1347635	Identifier	gs_free_object		1347522	0					
ANR	1347636	ArgumentList	fs -> memory		1347522	1					
ANR	1347637	Argument	fs -> memory		1347522	0					
ANR	1347638	PtrMemberAccess	fs -> memory		1347522	0					
ANR	1347639	Identifier	fs		1347522	0					
ANR	1347640	Identifier	memory		1347522	1					
ANR	1347641	Argument	thisdirent -> filename		1347522	1					
ANR	1347642	PtrMemberAccess	thisdirent -> filename		1347522	0					
ANR	1347643	Identifier	thisdirent		1347522	0					
ANR	1347644	Identifier	filename		1347522	1					
ANR	1347645	Argument	"""ramfs rename"""		1347522	2					
ANR	1347646	PrimaryExpression	"""ramfs rename"""		1347522	0					
ANR	1347647	ExpressionStatement	thisdirent -> filename = newnamebuf	316:4:9201:9234	1347522	10	True				
ANR	1347648	AssignmentExpression	thisdirent -> filename = newnamebuf		1347522	0		=			
ANR	1347649	PtrMemberAccess	thisdirent -> filename		1347522	0					
ANR	1347650	Identifier	thisdirent		1347522	0					
ANR	1347651	Identifier	filename		1347522	1					
ANR	1347652	Identifier	newnamebuf		1347522	1					
ANR	1347653	ReturnStatement	return 0 ;	317:4:9240:9248	1347522	11	True				
ANR	1347654	PrimaryExpression	0		1347522	0					
ANR	1347655	ReturnType	int		1347522	1					
ANR	1347656	Identifier	ramfs_rename		1347522	2					
ANR	1347657	ParameterList	"ramfs * fs , const char * oldname , const char * newname"		1347522	3					
ANR	1347658	Parameter	ramfs * fs	290:17:8514:8523	1347522	0	True				
ANR	1347659	ParameterType	ramfs *		1347522	0					
ANR	1347660	Identifier	fs		1347522	1					
ANR	1347661	Parameter	const char * oldname	290:28:8525:8543	1347522	1	True				
ANR	1347662	ParameterType	const char *		1347522	0					
ANR	1347663	Identifier	oldname		1347522	1					
ANR	1347664	Parameter	const char * newname	290:48:8545:8563	1347522	2	True				
ANR	1347665	ParameterType	const char *		1347522	0					
ANR	1347666	Identifier	newname		1347522	1					
ANR	1347667	CFGEntryNode	ENTRY		1347522		True				
ANR	1347668	CFGExitNode	EXIT		1347522		True				
ANR	1347669	Symbol	strcmp		1347522						
ANR	1347670	Symbol	RAMFS_NOMEM		1347522						
ANR	1347671	Symbol	oldname		1347522						
ANR	1347672	Symbol	thisdirent		1347522						
ANR	1347673	Symbol	gs_alloc_bytes		1347522						
ANR	1347674	Symbol	thisdirent -> filename		1347522						
ANR	1347675	Symbol	fs -> last_error		1347522						
ANR	1347676	Symbol	* thisdirent		1347522						
ANR	1347677	Symbol	newname		1347522						
ANR	1347678	Symbol	fs		1347522						
ANR	1347679	Symbol	* fs		1347522						
ANR	1347680	Symbol	strlen		1347522						
ANR	1347681	Symbol	fs -> memory		1347522						
ANR	1347682	Symbol	ramfs_findfile		1347522						
ANR	1347683	Symbol	newnamebuf		1347522						
ANR	1347684	Symbol	RAMFS_NOTFOUND		1347522						
ANR	1347685	Function	ramfs_enum_new	320:0:9253:9599							
ANR	1347686	FunctionDef	ramfs_enum_new (ramfs * fs)		1347685	0					
ANR	1347687	CompoundStatement		321:0:9293:9599	1347685	0					
ANR	1347688	IdentifierDeclStatement	ramfs_enum * e ;	322:4:9299:9313	1347685	0	True				
ANR	1347689	IdentifierDecl	* e		1347685	0					
ANR	1347690	IdentifierDeclType	ramfs_enum *		1347685	0					
ANR	1347691	Identifier	e		1347685	1					
ANR	1347692	ExpressionStatement	"e = gs_alloc_struct ( fs -> memory , ramfs_enum , & st_ramfs_enum , ""new ramfs enumerator"" )"	324:4:9320:9403	1347685	1	True				
ANR	1347693	AssignmentExpression	"e = gs_alloc_struct ( fs -> memory , ramfs_enum , & st_ramfs_enum , ""new ramfs enumerator"" )"		1347685	0		=			
ANR	1347694	Identifier	e		1347685	0					
ANR	1347695	CallExpression	"gs_alloc_struct ( fs -> memory , ramfs_enum , & st_ramfs_enum , ""new ramfs enumerator"" )"		1347685	1					
ANR	1347696	Callee	gs_alloc_struct		1347685	0					
ANR	1347697	Identifier	gs_alloc_struct		1347685	0					
ANR	1347698	ArgumentList	fs -> memory		1347685	1					
ANR	1347699	Argument	fs -> memory		1347685	0					
ANR	1347700	PtrMemberAccess	fs -> memory		1347685	0					
ANR	1347701	Identifier	fs		1347685	0					
ANR	1347702	Identifier	memory		1347685	1					
ANR	1347703	Argument	ramfs_enum		1347685	1					
ANR	1347704	Identifier	ramfs_enum		1347685	0					
ANR	1347705	Argument	& st_ramfs_enum		1347685	2					
ANR	1347706	UnaryOperationExpression	& st_ramfs_enum		1347685	0					
ANR	1347707	UnaryOperator	&		1347685	0					
ANR	1347708	Identifier	st_ramfs_enum		1347685	1					
ANR	1347709	Argument	"""new ramfs enumerator"""		1347685	3					
ANR	1347710	PrimaryExpression	"""new ramfs enumerator"""		1347685	0					
ANR	1347711	IfStatement	if ( ! e )		1347685	2					
ANR	1347712	Condition	! e	325:7:9412:9413	1347685	0	True				
ANR	1347713	UnaryOperationExpression	! e		1347685	0					
ANR	1347714	UnaryOperator	!		1347685	0					
ANR	1347715	Identifier	e		1347685	1					
ANR	1347716	CompoundStatement		5:11:122:122	1347685	1					
ANR	1347717	ExpressionStatement	fs -> last_error = RAMFS_NOMEM	326:8:9426:9454	1347685	0	True				
ANR	1347718	AssignmentExpression	fs -> last_error = RAMFS_NOMEM		1347685	0		=			
ANR	1347719	PtrMemberAccess	fs -> last_error		1347685	0					
ANR	1347720	Identifier	fs		1347685	0					
ANR	1347721	Identifier	last_error		1347685	1					
ANR	1347722	Identifier	RAMFS_NOMEM		1347685	1					
ANR	1347723	ReturnStatement	return NULL ;	327:8:9464:9475	1347685	1	True				
ANR	1347724	Identifier	NULL		1347685	0					
ANR	1347725	ExpressionStatement	e -> current = fs -> files	329:4:9487:9509	1347685	3	True				
ANR	1347726	AssignmentExpression	e -> current = fs -> files		1347685	0		=			
ANR	1347727	PtrMemberAccess	e -> current		1347685	0					
ANR	1347728	Identifier	e		1347685	0					
ANR	1347729	Identifier	current		1347685	1					
ANR	1347730	PtrMemberAccess	fs -> files		1347685	1					
ANR	1347731	Identifier	fs		1347685	0					
ANR	1347732	Identifier	files		1347685	1					
ANR	1347733	ExpressionStatement	e -> next = fs -> active_enums	330:4:9515:9541	1347685	4	True				
ANR	1347734	AssignmentExpression	e -> next = fs -> active_enums		1347685	0		=			
ANR	1347735	PtrMemberAccess	e -> next		1347685	0					
ANR	1347736	Identifier	e		1347685	0					
ANR	1347737	Identifier	next		1347685	1					
ANR	1347738	PtrMemberAccess	fs -> active_enums		1347685	1					
ANR	1347739	Identifier	fs		1347685	0					
ANR	1347740	Identifier	active_enums		1347685	1					
ANR	1347741	ExpressionStatement	e -> fs = fs	331:4:9547:9557	1347685	5	True				
ANR	1347742	AssignmentExpression	e -> fs = fs		1347685	0		=			
ANR	1347743	PtrMemberAccess	e -> fs		1347685	0					
ANR	1347744	Identifier	e		1347685	0					
ANR	1347745	Identifier	fs		1347685	1					
ANR	1347746	Identifier	fs		1347685	1					
ANR	1347747	ExpressionStatement	fs -> active_enums = e	332:4:9563:9583	1347685	6	True				
ANR	1347748	AssignmentExpression	fs -> active_enums = e		1347685	0		=			
ANR	1347749	PtrMemberAccess	fs -> active_enums		1347685	0					
ANR	1347750	Identifier	fs		1347685	0					
ANR	1347751	Identifier	active_enums		1347685	1					
ANR	1347752	Identifier	e		1347685	1					
ANR	1347753	ReturnStatement	return e ;	333:4:9589:9597	1347685	7	True				
ANR	1347754	Identifier	e		1347685	0					
ANR	1347755	ReturnType	ramfs_enum *		1347685	1					
ANR	1347756	Identifier	ramfs_enum_new		1347685	2					
ANR	1347757	ParameterList	ramfs * fs		1347685	3					
ANR	1347758	Parameter	ramfs * fs	320:28:9281:9290	1347685	0	True				
ANR	1347759	ParameterType	ramfs *		1347685	0					
ANR	1347760	Identifier	fs		1347685	1					
ANR	1347761	CFGEntryNode	ENTRY		1347685		True				
ANR	1347762	CFGExitNode	EXIT		1347685		True				
ANR	1347763	Symbol	RAMFS_NOMEM		1347685						
ANR	1347764	Symbol	NULL		1347685						
ANR	1347765	Symbol	e		1347685						
ANR	1347766	Symbol	e -> fs		1347685						
ANR	1347767	Symbol	gs_alloc_struct		1347685						
ANR	1347768	Symbol	e -> next		1347685						
ANR	1347769	Symbol	fs -> last_error		1347685						
ANR	1347770	Symbol	fs		1347685						
ANR	1347771	Symbol	* e		1347685						
ANR	1347772	Symbol	& st_ramfs_enum		1347685						
ANR	1347773	Symbol	ramfs_enum		1347685						
ANR	1347774	Symbol	* fs		1347685						
ANR	1347775	Symbol	fs -> files		1347685						
ANR	1347776	Symbol	fs -> memory		1347685						
ANR	1347777	Symbol	fs -> active_enums		1347685						
ANR	1347778	Symbol	e -> current		1347685						
ANR	1347779	Function	ramfs_enum_next	336:0:9602:9798							
ANR	1347780	FunctionDef	ramfs_enum_next (ramfs_enum * e)		1347779	0					
ANR	1347781	CompoundStatement		337:0:9640:9798	1347779	0					
ANR	1347782	IdentifierDeclStatement	char * filename = NULL ;	338:4:9646:9668	1347779	0	True				
ANR	1347783	IdentifierDecl	* filename = NULL		1347779	0					
ANR	1347784	IdentifierDeclType	char *		1347779	0					
ANR	1347785	Identifier	filename		1347779	1					
ANR	1347786	AssignmentExpression	* filename = NULL		1347779	2		=			
ANR	1347787	Identifier	NULL		1347779	0					
ANR	1347788	Identifier	NULL		1347779	1					
ANR	1347789	IfStatement	if ( e -> current )		1347779	1					
ANR	1347790	Condition	e -> current	339:7:9677:9686	1347779	0	True				
ANR	1347791	PtrMemberAccess	e -> current		1347779	0					
ANR	1347792	Identifier	e		1347779	0					
ANR	1347793	Identifier	current		1347779	1					
ANR	1347794	CompoundStatement		3:19:48:48	1347779	1					
ANR	1347795	ExpressionStatement	filename = e -> current -> filename	340:8:9699:9730	1347779	0	True				
ANR	1347796	AssignmentExpression	filename = e -> current -> filename		1347779	0		=			
ANR	1347797	Identifier	filename		1347779	0					
ANR	1347798	PtrMemberAccess	e -> current -> filename		1347779	1					
ANR	1347799	PtrMemberAccess	e -> current		1347779	0					
ANR	1347800	Identifier	e		1347779	0					
ANR	1347801	Identifier	current		1347779	1					
ANR	1347802	Identifier	filename		1347779	1					
ANR	1347803	ExpressionStatement	e -> current = e -> current -> next	341:8:9740:9769	1347779	1	True				
ANR	1347804	AssignmentExpression	e -> current = e -> current -> next		1347779	0		=			
ANR	1347805	PtrMemberAccess	e -> current		1347779	0					
ANR	1347806	Identifier	e		1347779	0					
ANR	1347807	Identifier	current		1347779	1					
ANR	1347808	PtrMemberAccess	e -> current -> next		1347779	1					
ANR	1347809	PtrMemberAccess	e -> current		1347779	0					
ANR	1347810	Identifier	e		1347779	0					
ANR	1347811	Identifier	current		1347779	1					
ANR	1347812	Identifier	next		1347779	1					
ANR	1347813	ReturnStatement	return filename ;	343:4:9781:9796	1347779	2	True				
ANR	1347814	Identifier	filename		1347779	0					
ANR	1347815	ReturnType	char *		1347779	1					
ANR	1347816	Identifier	ramfs_enum_next		1347779	2					
ANR	1347817	ParameterList	ramfs_enum * e		1347779	3					
ANR	1347818	Parameter	ramfs_enum * e	336:22:9624:9637	1347779	0	True				
ANR	1347819	ParameterType	ramfs_enum *		1347779	0					
ANR	1347820	Identifier	e		1347779	1					
ANR	1347821	CFGEntryNode	ENTRY		1347779		True				
ANR	1347822	CFGExitNode	EXIT		1347779		True				
ANR	1347823	Symbol	filename		1347779						
ANR	1347824	Symbol	NULL		1347779						
ANR	1347825	Symbol	e		1347779						
ANR	1347826	Symbol	e -> current -> next		1347779						
ANR	1347827	Symbol	* * e		1347779						
ANR	1347828	Symbol	* e -> current		1347779						
ANR	1347829	Symbol	e -> current -> filename		1347779						
ANR	1347830	Symbol	e -> current		1347779						
ANR	1347831	Symbol	* e		1347779						
ANR	1347832	Function	ramfs_enum_end	346:0:9801:10083							
ANR	1347833	FunctionDef	ramfs_enum_end (ramfs_enum * e)		1347832	0					
ANR	1347834	CompoundStatement		347:0:9837:10083	1347832	0					
ANR	1347835	IdentifierDeclStatement	ramfs_enum * * last = & e -> fs -> active_enums ;	348:4:9843:9883	1347832	0	True				
ANR	1347836	IdentifierDecl	* * last = & e -> fs -> active_enums		1347832	0					
ANR	1347837	IdentifierDeclType	ramfs_enum * *		1347832	0					
ANR	1347838	Identifier	last		1347832	1					
ANR	1347839	AssignmentExpression	* * last = & e -> fs -> active_enums		1347832	2		=			
ANR	1347840	Identifier	last		1347832	0					
ANR	1347841	UnaryOperationExpression	& e -> fs -> active_enums		1347832	1					
ANR	1347842	UnaryOperator	&		1347832	0					
ANR	1347843	PtrMemberAccess	e -> fs -> active_enums		1347832	1					
ANR	1347844	PtrMemberAccess	e -> fs		1347832	0					
ANR	1347845	Identifier	e		1347832	0					
ANR	1347846	Identifier	fs		1347832	1					
ANR	1347847	Identifier	active_enums		1347832	1					
ANR	1347848	WhileStatement	while ( * last )		1347832	1					
ANR	1347849	Condition	* last	349:10:9895:9899	1347832	0	True				
ANR	1347850	UnaryOperationExpression	* last		1347832	0					
ANR	1347851	UnaryOperator	*		1347832	0					
ANR	1347852	Identifier	last		1347832	1					
ANR	1347853	CompoundStatement		3:17:64:64	1347832	1					
ANR	1347854	IfStatement	if ( * last == e )		1347832	0					
ANR	1347855	Condition	* last == e	350:11:9915:9924	1347832	0	True				
ANR	1347856	EqualityExpression	* last == e		1347832	0		==			
ANR	1347857	UnaryOperationExpression	* last		1347832	0					
ANR	1347858	UnaryOperator	*		1347832	0					
ANR	1347859	Identifier	last		1347832	1					
ANR	1347860	Identifier	e		1347832	1					
ANR	1347861	CompoundStatement		4:23:89:89	1347832	1					
ANR	1347862	ExpressionStatement	* last = e -> next	351:12:9941:9956	1347832	0	True				
ANR	1347863	AssignmentExpression	* last = e -> next		1347832	0		=			
ANR	1347864	UnaryOperationExpression	* last		1347832	0					
ANR	1347865	UnaryOperator	*		1347832	0					
ANR	1347866	Identifier	last		1347832	1					
ANR	1347867	PtrMemberAccess	e -> next		1347832	1					
ANR	1347868	Identifier	e		1347832	0					
ANR	1347869	Identifier	next		1347832	1					
ANR	1347870	BreakStatement	break ;	352:12:9970:9975	1347832	1	True				
ANR	1347871	ExpressionStatement	last = & ( e -> next )	354:8:9995:10012	1347832	1	True				
ANR	1347872	AssignmentExpression	last = & ( e -> next )		1347832	0		=			
ANR	1347873	Identifier	last		1347832	0					
ANR	1347874	UnaryOperationExpression	& ( e -> next )		1347832	1					
ANR	1347875	UnaryOperator	&		1347832	0					
ANR	1347876	PtrMemberAccess	e -> next		1347832	1					
ANR	1347877	Identifier	e		1347832	0					
ANR	1347878	Identifier	next		1347832	1					
ANR	1347879	ExpressionStatement	"gs_free_object ( e -> fs -> memory , e , ""free ramfs enumerator"" )"	356:4:10024:10081	1347832	2	True				
ANR	1347880	CallExpression	"gs_free_object ( e -> fs -> memory , e , ""free ramfs enumerator"" )"		1347832	0					
ANR	1347881	Callee	gs_free_object		1347832	0					
ANR	1347882	Identifier	gs_free_object		1347832	0					
ANR	1347883	ArgumentList	e -> fs -> memory		1347832	1					
ANR	1347884	Argument	e -> fs -> memory		1347832	0					
ANR	1347885	PtrMemberAccess	e -> fs -> memory		1347832	0					
ANR	1347886	PtrMemberAccess	e -> fs		1347832	0					
ANR	1347887	Identifier	e		1347832	0					
ANR	1347888	Identifier	fs		1347832	1					
ANR	1347889	Identifier	memory		1347832	1					
ANR	1347890	Argument	e		1347832	1					
ANR	1347891	Identifier	e		1347832	0					
ANR	1347892	Argument	"""free ramfs enumerator"""		1347832	2					
ANR	1347893	PrimaryExpression	"""free ramfs enumerator"""		1347832	0					
ANR	1347894	ReturnType	void		1347832	1					
ANR	1347895	Identifier	ramfs_enum_end		1347832	2					
ANR	1347896	ParameterList	ramfs_enum * e		1347832	3					
ANR	1347897	Parameter	ramfs_enum * e	346:20:9821:9834	1347832	0	True				
ANR	1347898	ParameterType	ramfs_enum *		1347832	0					
ANR	1347899	Identifier	e		1347832	1					
ANR	1347900	CFGEntryNode	ENTRY		1347832		True				
ANR	1347901	CFGExitNode	EXIT		1347832		True				
ANR	1347902	Symbol	last		1347832						
ANR	1347903	Symbol	e		1347832						
ANR	1347904	Symbol	e -> fs		1347832						
ANR	1347905	Symbol	* * e		1347832						
ANR	1347906	Symbol	e -> next		1347832						
ANR	1347907	Symbol	e -> fs -> memory		1347832						
ANR	1347908	Symbol	& e -> fs -> active_enums		1347832						
ANR	1347909	Symbol	& e -> next		1347832						
ANR	1347910	Symbol	* e -> fs		1347832						
ANR	1347911	Symbol	* last		1347832						
ANR	1347912	Symbol	* e		1347832						
ANR	1347913	Function	ramfile_read	359:0:10086:10656							
ANR	1347914	FunctionDef	"ramfile_read (ramhandle * handle , void * buf , int len)"		1347913	0					
ANR	1347915	CompoundStatement		360:0:10142:10656	1347913	0					
ANR	1347916	IdentifierDeclStatement	ramfile * file = handle -> file ;	361:4:10148:10177	1347913	0	True				
ANR	1347917	IdentifierDecl	* file = handle -> file		1347913	0					
ANR	1347918	IdentifierDeclType	ramfile *		1347913	0					
ANR	1347919	Identifier	file		1347913	1					
ANR	1347920	AssignmentExpression	* file = handle -> file		1347913	2		=			
ANR	1347921	Identifier	file		1347913	0					
ANR	1347922	PtrMemberAccess	handle -> file		1347913	1					
ANR	1347923	Identifier	handle		1347913	0					
ANR	1347924	Identifier	file		1347913	1					
ANR	1347925	IdentifierDeclStatement	int left ;	362:4:10183:10191	1347913	1	True				
ANR	1347926	IdentifierDecl	left		1347913	0					
ANR	1347927	IdentifierDeclType	int		1347913	0					
ANR	1347928	Identifier	left		1347913	1					
ANR	1347929	IdentifierDeclStatement	char * t = ( char * ) buf ;	363:4:10197:10218	1347913	2	True				
ANR	1347930	IdentifierDecl	* t = ( char * ) buf		1347913	0					
ANR	1347931	IdentifierDeclType	char *		1347913	0					
ANR	1347932	Identifier	t		1347913	1					
ANR	1347933	AssignmentExpression	* t = ( char * ) buf		1347913	2		=			
ANR	1347934	Identifier	t		1347913	0					
ANR	1347935	CastExpression	( char * ) buf		1347913	1					
ANR	1347936	CastTarget	char *		1347913	0					
ANR	1347937	Identifier	buf		1347913	1					
ANR	1347938	IfStatement	if ( len > file -> size - handle -> filepos )		1347913	3					
ANR	1347939	Condition	len > file -> size - handle -> filepos	365:7:10228:10259	1347913	0	True				
ANR	1347940	RelationalExpression	len > file -> size - handle -> filepos		1347913	0		>			
ANR	1347941	Identifier	len		1347913	0					
ANR	1347942	AdditiveExpression	file -> size - handle -> filepos		1347913	1		-			
ANR	1347943	PtrMemberAccess	file -> size		1347913	0					
ANR	1347944	Identifier	file		1347913	0					
ANR	1347945	Identifier	size		1347913	1					
ANR	1347946	PtrMemberAccess	handle -> filepos		1347913	1					
ANR	1347947	Identifier	handle		1347913	0					
ANR	1347948	Identifier	filepos		1347913	1					
ANR	1347949	ExpressionStatement	len = file -> size - handle -> filepos	365:41:10262:10294	1347913	1	True				
ANR	1347950	AssignmentExpression	len = file -> size - handle -> filepos		1347913	0		=			
ANR	1347951	Identifier	len		1347913	0					
ANR	1347952	AdditiveExpression	file -> size - handle -> filepos		1347913	1		-			
ANR	1347953	PtrMemberAccess	file -> size		1347913	0					
ANR	1347954	Identifier	file		1347913	0					
ANR	1347955	Identifier	size		1347913	1					
ANR	1347956	PtrMemberAccess	handle -> filepos		1347913	1					
ANR	1347957	Identifier	handle		1347913	0					
ANR	1347958	Identifier	filepos		1347913	1					
ANR	1347959	IfStatement	if ( len < 0 )		1347913	4					
ANR	1347960	Condition	len < 0	366:7:10303:10307	1347913	0	True				
ANR	1347961	RelationalExpression	len < 0		1347913	0		<			
ANR	1347962	Identifier	len		1347913	0					
ANR	1347963	PrimaryExpression	0		1347913	1					
ANR	1347964	ReturnStatement	return 0 ;	366:14:10310:10318	1347913	1	True				
ANR	1347965	PrimaryExpression	0		1347913	0					
ANR	1347966	ExpressionStatement	left = len	368:4:10325:10335	1347913	5	True				
ANR	1347967	AssignmentExpression	left = len		1347913	0		=			
ANR	1347968	Identifier	left		1347913	0					
ANR	1347969	Identifier	len		1347913	1					
ANR	1347970	WhileStatement	while ( left )		1347913	6					
ANR	1347971	Condition	left	369:10:10347:10350	1347913	0	True				
ANR	1347972	Identifier	left		1347913	0					
ANR	1347973	CompoundStatement		12:8:316:371	1347913	1					
ANR	1347974	IdentifierDeclStatement	char * p = file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ] + handle -> filepos % RAMFS_BLOCKSIZE ;	370:8:10363:10449	1347913	0	True				
ANR	1347975	IdentifierDecl	* p = file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ] + handle -> filepos % RAMFS_BLOCKSIZE		1347913	0					
ANR	1347976	IdentifierDeclType	char *		1347913	0					
ANR	1347977	Identifier	p		1347913	1					
ANR	1347978	AssignmentExpression	* p = file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ] + handle -> filepos % RAMFS_BLOCKSIZE		1347913	2		=			
ANR	1347979	Identifier	p		1347913	0					
ANR	1347980	AdditiveExpression	file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ] + handle -> filepos % RAMFS_BLOCKSIZE		1347913	1		+			
ANR	1347981	ArrayIndexing	file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ]		1347913	0					
ANR	1347982	PtrMemberAccess	file -> data		1347913	0					
ANR	1347983	Identifier	file		1347913	0					
ANR	1347984	Identifier	data		1347913	1					
ANR	1347985	MultiplicativeExpression	handle -> filepos / RAMFS_BLOCKSIZE		1347913	1		/			
ANR	1347986	PtrMemberAccess	handle -> filepos		1347913	0					
ANR	1347987	Identifier	handle		1347913	0					
ANR	1347988	Identifier	filepos		1347913	1					
ANR	1347989	Identifier	RAMFS_BLOCKSIZE		1347913	1					
ANR	1347990	MultiplicativeExpression	handle -> filepos % RAMFS_BLOCKSIZE		1347913	1		%			
ANR	1347991	PtrMemberAccess	handle -> filepos		1347913	0					
ANR	1347992	Identifier	handle		1347913	0					
ANR	1347993	Identifier	filepos		1347913	1					
ANR	1347994	Identifier	RAMFS_BLOCKSIZE		1347913	1					
ANR	1347995	IdentifierDeclStatement	int x = RAMFS_BLOCKSIZE - handle -> filepos % RAMFS_BLOCKSIZE ;	371:8:10459:10514	1347913	1	True				
ANR	1347996	IdentifierDecl	x = RAMFS_BLOCKSIZE - handle -> filepos % RAMFS_BLOCKSIZE		1347913	0					
ANR	1347997	IdentifierDeclType	int		1347913	0					
ANR	1347998	Identifier	x		1347913	1					
ANR	1347999	AssignmentExpression	x = RAMFS_BLOCKSIZE - handle -> filepos % RAMFS_BLOCKSIZE		1347913	2		=			
ANR	1348000	Identifier	x		1347913	0					
ANR	1348001	AdditiveExpression	RAMFS_BLOCKSIZE - handle -> filepos % RAMFS_BLOCKSIZE		1347913	1		-			
ANR	1348002	Identifier	RAMFS_BLOCKSIZE		1347913	0					
ANR	1348003	MultiplicativeExpression	handle -> filepos % RAMFS_BLOCKSIZE		1347913	1		%			
ANR	1348004	PtrMemberAccess	handle -> filepos		1347913	0					
ANR	1348005	Identifier	handle		1347913	0					
ANR	1348006	Identifier	filepos		1347913	1					
ANR	1348007	Identifier	RAMFS_BLOCKSIZE		1347913	1					
ANR	1348008	IfStatement	if ( x > left )		1347913	2					
ANR	1348009	Condition	x > left	372:11:10527:10532	1347913	0	True				
ANR	1348010	RelationalExpression	x > left		1347913	0		>			
ANR	1348011	Identifier	x		1347913	0					
ANR	1348012	Identifier	left		1347913	1					
ANR	1348013	ExpressionStatement	x = left	372:19:10535:10543	1347913	1	True				
ANR	1348014	AssignmentExpression	x = left		1347913	0		=			
ANR	1348015	Identifier	x		1347913	0					
ANR	1348016	Identifier	left		1347913	1					
ANR	1348017	ExpressionStatement	"memcpy ( t , p , x )"	374:8:10554:10567	1347913	3	True				
ANR	1348018	CallExpression	"memcpy ( t , p , x )"		1347913	0					
ANR	1348019	Callee	memcpy		1347913	0					
ANR	1348020	Identifier	memcpy		1347913	0					
ANR	1348021	ArgumentList	t		1347913	1					
ANR	1348022	Argument	t		1347913	0					
ANR	1348023	Identifier	t		1347913	0					
ANR	1348024	Argument	p		1347913	1					
ANR	1348025	Identifier	p		1347913	0					
ANR	1348026	Argument	x		1347913	2					
ANR	1348027	Identifier	x		1347913	0					
ANR	1348028	ExpressionStatement	handle -> filepos += x	375:8:10577:10597	1347913	4	True				
ANR	1348029	AssignmentExpression	handle -> filepos += x		1347913	0		+=			
ANR	1348030	PtrMemberAccess	handle -> filepos		1347913	0					
ANR	1348031	Identifier	handle		1347913	0					
ANR	1348032	Identifier	filepos		1347913	1					
ANR	1348033	Identifier	x		1347913	1					
ANR	1348034	ExpressionStatement	left -= x	376:8:10607:10616	1347913	5	True				
ANR	1348035	AssignmentExpression	left -= x		1347913	0		-=			
ANR	1348036	Identifier	left		1347913	0					
ANR	1348037	Identifier	x		1347913	1					
ANR	1348038	ExpressionStatement	t += x	377:8:10626:10632	1347913	6	True				
ANR	1348039	AssignmentExpression	t += x		1347913	0		+=			
ANR	1348040	Identifier	t		1347913	0					
ANR	1348041	Identifier	x		1347913	1					
ANR	1348042	ReturnStatement	return len ;	379:4:10644:10654	1347913	7	True				
ANR	1348043	Identifier	len		1347913	0					
ANR	1348044	ReturnType	int		1347913	1					
ANR	1348045	Identifier	ramfile_read		1347913	2					
ANR	1348046	ParameterList	"ramhandle * handle , void * buf , int len"		1347913	3					
ANR	1348047	Parameter	ramhandle * handle	359:17:10103:10120	1347913	0	True				
ANR	1348048	ParameterType	ramhandle *		1347913	0					
ANR	1348049	Identifier	handle		1347913	1					
ANR	1348050	Parameter	void * buf	359:36:10122:10131	1347913	1	True				
ANR	1348051	ParameterType	void *		1347913	0					
ANR	1348052	Identifier	buf		1347913	1					
ANR	1348053	Parameter	int len	359:47:10133:10139	1347913	2	True				
ANR	1348054	ParameterType	int		1347913	0					
ANR	1348055	Identifier	len		1347913	1					
ANR	1348056	CFGEntryNode	ENTRY		1347913		True				
ANR	1348057	CFGExitNode	EXIT		1347913		True				
ANR	1348058	Symbol	* * handle		1347913						
ANR	1348059	Symbol	* handle		1347913						
ANR	1348060	Symbol	handle		1347913						
ANR	1348061	Symbol	* handle -> filepos		1347913						
ANR	1348062	Symbol	* file		1347913						
ANR	1348063	Symbol	handle -> file		1347913						
ANR	1348064	Symbol	p		1347913						
ANR	1348065	Symbol	handle -> filepos		1347913						
ANR	1348066	Symbol	buf		1347913						
ANR	1348067	Symbol	file		1347913						
ANR	1348068	Symbol	len		1347913						
ANR	1348069	Symbol	t		1347913						
ANR	1348070	Symbol	left		1347913						
ANR	1348071	Symbol	file -> size		1347913						
ANR	1348072	Symbol	file -> data		1347913						
ANR	1348073	Symbol	* RAMFS_BLOCKSIZE		1347913						
ANR	1348074	Symbol	x		1347913						
ANR	1348075	Symbol	* file -> data		1347913						
ANR	1348076	Symbol	RAMFS_BLOCKSIZE		1347913						
ANR	1348077	Symbol	* * file		1347913						
ANR	1348078	Function	ramfile_write	382:0:10659:11796							
ANR	1348079	FunctionDef	"ramfile_write (ramhandle * handle , const void * buf , int len)"		1348078	0					
ANR	1348080	CompoundStatement		383:0:10722:11796	1348078	0					
ANR	1348081	IdentifierDeclStatement	ramfile * file = handle -> file ;	384:4:10728:10757	1348078	0	True				
ANR	1348082	IdentifierDecl	* file = handle -> file		1348078	0					
ANR	1348083	IdentifierDeclType	ramfile *		1348078	0					
ANR	1348084	Identifier	file		1348078	1					
ANR	1348085	AssignmentExpression	* file = handle -> file		1348078	2		=			
ANR	1348086	Identifier	file		1348078	0					
ANR	1348087	PtrMemberAccess	handle -> file		1348078	1					
ANR	1348088	Identifier	handle		1348078	0					
ANR	1348089	Identifier	file		1348078	1					
ANR	1348090	IdentifierDeclStatement	int left ;	385:4:10763:10771	1348078	1	True				
ANR	1348091	IdentifierDecl	left		1348078	0					
ANR	1348092	IdentifierDeclType	int		1348078	0					
ANR	1348093	Identifier	left		1348078	1					
ANR	1348094	IdentifierDeclStatement	char * t = ( char * ) buf ;	386:4:10777:10798	1348078	2	True				
ANR	1348095	IdentifierDecl	* t = ( char * ) buf		1348078	0					
ANR	1348096	IdentifierDeclType	char *		1348078	0					
ANR	1348097	Identifier	t		1348078	1					
ANR	1348098	AssignmentExpression	* t = ( char * ) buf		1348078	2		=			
ANR	1348099	Identifier	t		1348078	0					
ANR	1348100	CastExpression	( char * ) buf		1348078	1					
ANR	1348101	CastTarget	char *		1348078	0					
ANR	1348102	Identifier	buf		1348078	1					
ANR	1348103	IfStatement	if ( ! ( handle -> mode & RAMFS_WRITE ) )		1348078	3					
ANR	1348104	Condition	! ( handle -> mode & RAMFS_WRITE )	388:7:10808:10836	1348078	0	True				
ANR	1348105	UnaryOperationExpression	! ( handle -> mode & RAMFS_WRITE )		1348078	0					
ANR	1348106	UnaryOperator	!		1348078	0					
ANR	1348107	BitAndExpression	handle -> mode & RAMFS_WRITE		1348078	1		&			
ANR	1348108	PtrMemberAccess	handle -> mode		1348078	0					
ANR	1348109	Identifier	handle		1348078	0					
ANR	1348110	Identifier	mode		1348078	1					
ANR	1348111	Identifier	RAMFS_WRITE		1348078	1					
ANR	1348112	CompoundStatement		6:38:116:116	1348078	1					
ANR	1348113	ExpressionStatement	handle -> last_error = RAMFS_NOACCESS	389:8:10849:10884	1348078	0	True				
ANR	1348114	AssignmentExpression	handle -> last_error = RAMFS_NOACCESS		1348078	0		=			
ANR	1348115	PtrMemberAccess	handle -> last_error		1348078	0					
ANR	1348116	Identifier	handle		1348078	0					
ANR	1348117	Identifier	last_error		1348078	1					
ANR	1348118	Identifier	RAMFS_NOACCESS		1348078	1					
ANR	1348119	ReturnStatement	return - 1 ;	390:8:10894:10903	1348078	1	True				
ANR	1348120	UnaryOperationExpression	- 1		1348078	0					
ANR	1348121	UnaryOperator	-		1348078	0					
ANR	1348122	PrimaryExpression	1		1348078	1					
ANR	1348123	IfStatement	if ( handle -> mode & RAMFS_APPEND )		1348078	4					
ANR	1348124	Condition	handle -> mode & RAMFS_APPEND	393:7:10919:10945	1348078	0	True				
ANR	1348125	BitAndExpression	handle -> mode & RAMFS_APPEND		1348078	0		&			
ANR	1348126	PtrMemberAccess	handle -> mode		1348078	0					
ANR	1348127	Identifier	handle		1348078	0					
ANR	1348128	Identifier	mode		1348078	1					
ANR	1348129	Identifier	RAMFS_APPEND		1348078	1					
ANR	1348130	CompoundStatement		11:36:225:225	1348078	1					
ANR	1348131	ExpressionStatement	handle -> filepos = file -> size	394:8:10958:10986	1348078	0	True				
ANR	1348132	AssignmentExpression	handle -> filepos = file -> size		1348078	0		=			
ANR	1348133	PtrMemberAccess	handle -> filepos		1348078	0					
ANR	1348134	Identifier	handle		1348078	0					
ANR	1348135	Identifier	filepos		1348078	1					
ANR	1348136	PtrMemberAccess	file -> size		1348078	1					
ANR	1348137	Identifier	file		1348078	0					
ANR	1348138	Identifier	size		1348078	1					
ANR	1348139	IfStatement	if ( file -> size < handle -> filepos )		1348078	5					
ANR	1348140	Condition	file -> size < handle -> filepos	397:7:11002:11029	1348078	0	True				
ANR	1348141	RelationalExpression	file -> size < handle -> filepos		1348078	0		<			
ANR	1348142	PtrMemberAccess	file -> size		1348078	0					
ANR	1348143	Identifier	file		1348078	0					
ANR	1348144	Identifier	size		1348078	1					
ANR	1348145	PtrMemberAccess	handle -> filepos		1348078	1					
ANR	1348146	Identifier	handle		1348078	0					
ANR	1348147	Identifier	filepos		1348078	1					
ANR	1348148	CompoundStatement		15:37:309:309	1348078	1					
ANR	1348149	IfStatement	"if ( ramfile_truncate ( handle , handle -> filepos ) == - 1 )"		1348078	0					
ANR	1348150	Condition	"ramfile_truncate ( handle , handle -> filepos ) == - 1"	399:11:11096:11141	1348078	0	True				
ANR	1348151	EqualityExpression	"ramfile_truncate ( handle , handle -> filepos ) == - 1"		1348078	0		==			
ANR	1348152	CallExpression	"ramfile_truncate ( handle , handle -> filepos )"		1348078	0					
ANR	1348153	Callee	ramfile_truncate		1348078	0					
ANR	1348154	Identifier	ramfile_truncate		1348078	0					
ANR	1348155	ArgumentList	handle		1348078	1					
ANR	1348156	Argument	handle		1348078	0					
ANR	1348157	Identifier	handle		1348078	0					
ANR	1348158	Argument	handle -> filepos		1348078	1					
ANR	1348159	PtrMemberAccess	handle -> filepos		1348078	0					
ANR	1348160	Identifier	handle		1348078	0					
ANR	1348161	Identifier	filepos		1348078	1					
ANR	1348162	UnaryOperationExpression	- 1		1348078	1					
ANR	1348163	UnaryOperator	-		1348078	0					
ANR	1348164	PrimaryExpression	1		1348078	1					
ANR	1348165	ReturnStatement	return - 1 ;	399:59:11144:11153	1348078	1	True				
ANR	1348166	UnaryOperationExpression	- 1		1348078	0					
ANR	1348167	UnaryOperator	-		1348078	0					
ANR	1348168	PrimaryExpression	1		1348078	1					
ANR	1348169	IfStatement	if ( file -> size < handle -> filepos + len )		1348078	6					
ANR	1348170	Condition	file -> size < handle -> filepos + len	402:7:11169:11200	1348078	0	True				
ANR	1348171	RelationalExpression	file -> size < handle -> filepos + len		1348078	0		<			
ANR	1348172	PtrMemberAccess	file -> size		1348078	0					
ANR	1348173	Identifier	file		1348078	0					
ANR	1348174	Identifier	size		1348078	1					
ANR	1348175	AdditiveExpression	handle -> filepos + len		1348078	1		+			
ANR	1348176	PtrMemberAccess	handle -> filepos		1348078	0					
ANR	1348177	Identifier	handle		1348078	0					
ANR	1348178	Identifier	filepos		1348078	1					
ANR	1348179	Identifier	len		1348078	1					
ANR	1348180	CompoundStatement		21:8:490:530	1348078	1					
ANR	1348181	IdentifierDeclStatement	"int x = resize ( file , handle -> filepos + len ) ;"	403:8:11213:11253	1348078	0	True				
ANR	1348182	IdentifierDecl	"x = resize ( file , handle -> filepos + len )"		1348078	0					
ANR	1348183	IdentifierDeclType	int		1348078	0					
ANR	1348184	Identifier	x		1348078	1					
ANR	1348185	AssignmentExpression	"x = resize ( file , handle -> filepos + len )"		1348078	2		=			
ANR	1348186	Identifier	x		1348078	0					
ANR	1348187	CallExpression	"resize ( file , handle -> filepos + len )"		1348078	1					
ANR	1348188	Callee	resize		1348078	0					
ANR	1348189	Identifier	resize		1348078	0					
ANR	1348190	ArgumentList	file		1348078	1					
ANR	1348191	Argument	file		1348078	0					
ANR	1348192	Identifier	file		1348078	0					
ANR	1348193	Argument	handle -> filepos + len		1348078	1					
ANR	1348194	AdditiveExpression	handle -> filepos + len		1348078	0		+			
ANR	1348195	PtrMemberAccess	handle -> filepos		1348078	0					
ANR	1348196	Identifier	handle		1348078	0					
ANR	1348197	Identifier	filepos		1348078	1					
ANR	1348198	Identifier	len		1348078	1					
ANR	1348199	IfStatement	if ( x )		1348078	1					
ANR	1348200	Condition	x	404:11:11266:11266	1348078	0	True				
ANR	1348201	Identifier	x		1348078	0					
ANR	1348202	CompoundStatement		22:14:546:546	1348078	1					
ANR	1348203	ExpressionStatement	handle -> last_error = - x	405:12:11283:11306	1348078	0	True				
ANR	1348204	AssignmentExpression	handle -> last_error = - x		1348078	0		=			
ANR	1348205	PtrMemberAccess	handle -> last_error		1348078	0					
ANR	1348206	Identifier	handle		1348078	0					
ANR	1348207	Identifier	last_error		1348078	1					
ANR	1348208	UnaryOperationExpression	- x		1348078	1					
ANR	1348209	UnaryOperator	-		1348078	0					
ANR	1348210	Identifier	x		1348078	1					
ANR	1348211	ReturnStatement	return - 1 ;	406:12:11320:11329	1348078	1	True				
ANR	1348212	UnaryOperationExpression	- 1		1348078	0					
ANR	1348213	UnaryOperator	-		1348078	0					
ANR	1348214	PrimaryExpression	1		1348078	1					
ANR	1348215	ExpressionStatement	left = len	412:4:11451:11461	1348078	7	True				
ANR	1348216	AssignmentExpression	left = len		1348078	0		=			
ANR	1348217	Identifier	left		1348078	0					
ANR	1348218	Identifier	len		1348078	1					
ANR	1348219	WhileStatement	while ( left )		1348078	8					
ANR	1348220	Condition	left	413:10:11473:11476	1348078	0	True				
ANR	1348221	Identifier	left		1348078	0					
ANR	1348222	CompoundStatement		34:8:876:931	1348078	1					
ANR	1348223	IdentifierDeclStatement	char * p = file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ] + handle -> filepos % RAMFS_BLOCKSIZE ;	414:8:11489:11589	1348078	0	True				
ANR	1348224	IdentifierDecl	* p = file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ] + handle -> filepos % RAMFS_BLOCKSIZE		1348078	0					
ANR	1348225	IdentifierDeclType	char *		1348078	0					
ANR	1348226	Identifier	p		1348078	1					
ANR	1348227	AssignmentExpression	* p = file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ] + handle -> filepos % RAMFS_BLOCKSIZE		1348078	2		=			
ANR	1348228	Identifier	p		1348078	0					
ANR	1348229	AdditiveExpression	file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ] + handle -> filepos % RAMFS_BLOCKSIZE		1348078	1		+			
ANR	1348230	ArrayIndexing	file -> data [ handle -> filepos / RAMFS_BLOCKSIZE ]		1348078	0					
ANR	1348231	PtrMemberAccess	file -> data		1348078	0					
ANR	1348232	Identifier	file		1348078	0					
ANR	1348233	Identifier	data		1348078	1					
ANR	1348234	MultiplicativeExpression	handle -> filepos / RAMFS_BLOCKSIZE		1348078	1		/			
ANR	1348235	PtrMemberAccess	handle -> filepos		1348078	0					
ANR	1348236	Identifier	handle		1348078	0					
ANR	1348237	Identifier	filepos		1348078	1					
ANR	1348238	Identifier	RAMFS_BLOCKSIZE		1348078	1					
ANR	1348239	MultiplicativeExpression	handle -> filepos % RAMFS_BLOCKSIZE		1348078	1		%			
ANR	1348240	PtrMemberAccess	handle -> filepos		1348078	0					
ANR	1348241	Identifier	handle		1348078	0					
ANR	1348242	Identifier	filepos		1348078	1					
ANR	1348243	Identifier	RAMFS_BLOCKSIZE		1348078	1					
ANR	1348244	IdentifierDeclStatement	int x = RAMFS_BLOCKSIZE - handle -> filepos % RAMFS_BLOCKSIZE ;	416:8:11599:11654	1348078	1	True				
ANR	1348245	IdentifierDecl	x = RAMFS_BLOCKSIZE - handle -> filepos % RAMFS_BLOCKSIZE		1348078	0					
ANR	1348246	IdentifierDeclType	int		1348078	0					
ANR	1348247	Identifier	x		1348078	1					
ANR	1348248	AssignmentExpression	x = RAMFS_BLOCKSIZE - handle -> filepos % RAMFS_BLOCKSIZE		1348078	2		=			
ANR	1348249	Identifier	x		1348078	0					
ANR	1348250	AdditiveExpression	RAMFS_BLOCKSIZE - handle -> filepos % RAMFS_BLOCKSIZE		1348078	1		-			
ANR	1348251	Identifier	RAMFS_BLOCKSIZE		1348078	0					
ANR	1348252	MultiplicativeExpression	handle -> filepos % RAMFS_BLOCKSIZE		1348078	1		%			
ANR	1348253	PtrMemberAccess	handle -> filepos		1348078	0					
ANR	1348254	Identifier	handle		1348078	0					
ANR	1348255	Identifier	filepos		1348078	1					
ANR	1348256	Identifier	RAMFS_BLOCKSIZE		1348078	1					
ANR	1348257	IfStatement	if ( x > left )		1348078	2					
ANR	1348258	Condition	x > left	417:11:11667:11672	1348078	0	True				
ANR	1348259	RelationalExpression	x > left		1348078	0		>			
ANR	1348260	Identifier	x		1348078	0					
ANR	1348261	Identifier	left		1348078	1					
ANR	1348262	ExpressionStatement	x = left	417:19:11675:11683	1348078	1	True				
ANR	1348263	AssignmentExpression	x = left		1348078	0		=			
ANR	1348264	Identifier	x		1348078	0					
ANR	1348265	Identifier	left		1348078	1					
ANR	1348266	ExpressionStatement	"memcpy ( p , t , x )"	419:8:11694:11707	1348078	3	True				
ANR	1348267	CallExpression	"memcpy ( p , t , x )"		1348078	0					
ANR	1348268	Callee	memcpy		1348078	0					
ANR	1348269	Identifier	memcpy		1348078	0					
ANR	1348270	ArgumentList	p		1348078	1					
ANR	1348271	Argument	p		1348078	0					
ANR	1348272	Identifier	p		1348078	0					
ANR	1348273	Argument	t		1348078	1					
ANR	1348274	Identifier	t		1348078	0					
ANR	1348275	Argument	x		1348078	2					
ANR	1348276	Identifier	x		1348078	0					
ANR	1348277	ExpressionStatement	handle -> filepos += x	420:8:11717:11737	1348078	4	True				
ANR	1348278	AssignmentExpression	handle -> filepos += x		1348078	0		+=			
ANR	1348279	PtrMemberAccess	handle -> filepos		1348078	0					
ANR	1348280	Identifier	handle		1348078	0					
ANR	1348281	Identifier	filepos		1348078	1					
ANR	1348282	Identifier	x		1348078	1					
ANR	1348283	ExpressionStatement	left -= x	421:8:11747:11756	1348078	5	True				
ANR	1348284	AssignmentExpression	left -= x		1348078	0		-=			
ANR	1348285	Identifier	left		1348078	0					
ANR	1348286	Identifier	x		1348078	1					
ANR	1348287	ExpressionStatement	t += x	422:8:11766:11772	1348078	6	True				
ANR	1348288	AssignmentExpression	t += x		1348078	0		+=			
ANR	1348289	Identifier	t		1348078	0					
ANR	1348290	Identifier	x		1348078	1					
ANR	1348291	ReturnStatement	return len ;	424:4:11784:11794	1348078	9	True				
ANR	1348292	Identifier	len		1348078	0					
ANR	1348293	ReturnType	int		1348078	1					
ANR	1348294	Identifier	ramfile_write		1348078	2					
ANR	1348295	ParameterList	"ramhandle * handle , const void * buf , int len"		1348078	3					
ANR	1348296	Parameter	ramhandle * handle	382:18:10677:10694	1348078	0	True				
ANR	1348297	ParameterType	ramhandle *		1348078	0					
ANR	1348298	Identifier	handle		1348078	1					
ANR	1348299	Parameter	const void * buf	382:37:10696:10711	1348078	1	True				
ANR	1348300	ParameterType	const void *		1348078	0					
ANR	1348301	Identifier	buf		1348078	1					
ANR	1348302	Parameter	int len	382:54:10713:10719	1348078	2	True				
ANR	1348303	ParameterType	int		1348078	0					
ANR	1348304	Identifier	len		1348078	1					
ANR	1348305	CFGEntryNode	ENTRY		1348078		True				
ANR	1348306	CFGExitNode	EXIT		1348078		True				
ANR	1348307	Symbol	* * handle		1348078						
ANR	1348308	Symbol	RAMFS_NOACCESS		1348078						
ANR	1348309	Symbol	RAMFS_WRITE		1348078						
ANR	1348310	Symbol	ramfile_truncate		1348078						
ANR	1348311	Symbol	handle -> file		1348078						
ANR	1348312	Symbol	file		1348078						
ANR	1348313	Symbol	len		1348078						
ANR	1348314	Symbol	file -> size		1348078						
ANR	1348315	Symbol	RAMFS_BLOCKSIZE		1348078						
ANR	1348316	Symbol	RAMFS_APPEND		1348078						
ANR	1348317	Symbol	handle -> last_error		1348078						
ANR	1348318	Symbol	* handle		1348078						
ANR	1348319	Symbol	handle		1348078						
ANR	1348320	Symbol	* handle -> filepos		1348078						
ANR	1348321	Symbol	* file		1348078						
ANR	1348322	Symbol	p		1348078						
ANR	1348323	Symbol	handle -> filepos		1348078						
ANR	1348324	Symbol	buf		1348078						
ANR	1348325	Symbol	t		1348078						
ANR	1348326	Symbol	left		1348078						
ANR	1348327	Symbol	x		1348078						
ANR	1348328	Symbol	* RAMFS_BLOCKSIZE		1348078						
ANR	1348329	Symbol	file -> data		1348078						
ANR	1348330	Symbol	resize		1348078						
ANR	1348331	Symbol	* file -> data		1348078						
ANR	1348332	Symbol	handle -> mode		1348078						
ANR	1348333	Symbol	* * file		1348078						
ANR	1348334	Function	ramfile_seek	427:0:11799:12196							
ANR	1348335	FunctionDef	"ramfile_seek (ramhandle * handle , int pos , int whence)"		1348334	0					
ANR	1348336	CompoundStatement		428:0:11855:12196	1348334	0					
ANR	1348337	IfStatement	if ( whence == RAMFS_SEEK_CUR )		1348334	0					
ANR	1348338	Condition	whence == RAMFS_SEEK_CUR	432:7:11980:12003	1348334	0	True				
ANR	1348339	EqualityExpression	whence == RAMFS_SEEK_CUR		1348334	0		==			
ANR	1348340	Identifier	whence		1348334	0					
ANR	1348341	Identifier	RAMFS_SEEK_CUR		1348334	1					
ANR	1348342	CompoundStatement		5:33:150:150	1348334	1					
ANR	1348343	ExpressionStatement	handle -> filepos += pos	433:8:12016:12038	1348334	0	True				
ANR	1348344	AssignmentExpression	handle -> filepos += pos		1348334	0		+=			
ANR	1348345	PtrMemberAccess	handle -> filepos		1348334	0					
ANR	1348346	Identifier	handle		1348334	0					
ANR	1348347	Identifier	filepos		1348334	1					
ANR	1348348	Identifier	pos		1348334	1					
ANR	1348349	ElseStatement	else		1348334	0					
ANR	1348350	IfStatement	if ( whence == RAMFS_SEEK_END )		1348334	0					
ANR	1348351	Condition	whence == RAMFS_SEEK_END	434:14:12054:12077	1348334	0	True				
ANR	1348352	EqualityExpression	whence == RAMFS_SEEK_END		1348334	0		==			
ANR	1348353	Identifier	whence		1348334	0					
ANR	1348354	Identifier	RAMFS_SEEK_END		1348334	1					
ANR	1348355	CompoundStatement		7:40:224:224	1348334	1					
ANR	1348356	ExpressionStatement	handle -> filepos = handle -> file -> size + pos	435:8:12090:12130	1348334	0	True				
ANR	1348357	AssignmentExpression	handle -> filepos = handle -> file -> size + pos		1348334	0		=			
ANR	1348358	PtrMemberAccess	handle -> filepos		1348334	0					
ANR	1348359	Identifier	handle		1348334	0					
ANR	1348360	Identifier	filepos		1348334	1					
ANR	1348361	AdditiveExpression	handle -> file -> size + pos		1348334	1		+			
ANR	1348362	PtrMemberAccess	handle -> file -> size		1348334	0					
ANR	1348363	PtrMemberAccess	handle -> file		1348334	0					
ANR	1348364	Identifier	handle		1348334	0					
ANR	1348365	Identifier	file		1348334	1					
ANR	1348366	Identifier	size		1348334	1					
ANR	1348367	Identifier	pos		1348334	1					
ANR	1348368	ElseStatement	else		1348334	0					
ANR	1348369	CompoundStatement		9:11:287:287	1348334	0					
ANR	1348370	ExpressionStatement	handle -> filepos = pos	437:8:12153:12174	1348334	0	True				
ANR	1348371	AssignmentExpression	handle -> filepos = pos		1348334	0		=			
ANR	1348372	PtrMemberAccess	handle -> filepos		1348334	0					
ANR	1348373	Identifier	handle		1348334	0					
ANR	1348374	Identifier	filepos		1348334	1					
ANR	1348375	Identifier	pos		1348334	1					
ANR	1348376	ReturnStatement	return 0 ;	439:4:12186:12194	1348334	1	True				
ANR	1348377	PrimaryExpression	0		1348334	0					
ANR	1348378	ReturnType	int		1348334	1					
ANR	1348379	Identifier	ramfile_seek		1348334	2					
ANR	1348380	ParameterList	"ramhandle * handle , int pos , int whence"		1348334	3					
ANR	1348381	Parameter	ramhandle * handle	427:17:11816:11833	1348334	0	True				
ANR	1348382	ParameterType	ramhandle *		1348334	0					
ANR	1348383	Identifier	handle		1348334	1					
ANR	1348384	Parameter	int pos	427:36:11835:11841	1348334	1	True				
ANR	1348385	ParameterType	int		1348334	0					
ANR	1348386	Identifier	pos		1348334	1					
ANR	1348387	Parameter	int whence	427:44:11843:11852	1348334	2	True				
ANR	1348388	ParameterType	int		1348334	0					
ANR	1348389	Identifier	whence		1348334	1					
ANR	1348390	CFGEntryNode	ENTRY		1348334		True				
ANR	1348391	CFGExitNode	EXIT		1348334		True				
ANR	1348392	Symbol	handle -> file		1348334						
ANR	1348393	Symbol	handle -> filepos		1348334						
ANR	1348394	Symbol	* * handle		1348334						
ANR	1348395	Symbol	pos		1348334						
ANR	1348396	Symbol	whence		1348334						
ANR	1348397	Symbol	* handle		1348334						
ANR	1348398	Symbol	* handle -> file		1348334						
ANR	1348399	Symbol	handle -> file -> size		1348334						
ANR	1348400	Symbol	handle		1348334						
ANR	1348401	Symbol	RAMFS_SEEK_CUR		1348334						
ANR	1348402	Symbol	RAMFS_SEEK_END		1348334						
ANR	1348403	Function	ramfile_size	442:0:12199:12269							
ANR	1348404	FunctionDef	ramfile_size (ramhandle * handle)		1348403	0					
ANR	1348405	CompoundStatement		443:0:12236:12269	1348403	0					
ANR	1348406	ReturnStatement	return handle -> file -> size ;	444:4:12242:12267	1348403	0	True				
ANR	1348407	PtrMemberAccess	handle -> file -> size		1348403	0					
ANR	1348408	PtrMemberAccess	handle -> file		1348403	0					
ANR	1348409	Identifier	handle		1348403	0					
ANR	1348410	Identifier	file		1348403	1					
ANR	1348411	Identifier	size		1348403	1					
ANR	1348412	ReturnType	int		1348403	1					
ANR	1348413	Identifier	ramfile_size		1348403	2					
ANR	1348414	ParameterList	ramhandle * handle		1348403	3					
ANR	1348415	Parameter	ramhandle * handle	442:17:12216:12233	1348403	0	True				
ANR	1348416	ParameterType	ramhandle *		1348403	0					
ANR	1348417	Identifier	handle		1348403	1					
ANR	1348418	CFGEntryNode	ENTRY		1348403		True				
ANR	1348419	CFGExitNode	EXIT		1348403		True				
ANR	1348420	Symbol	handle -> file		1348403						
ANR	1348421	Symbol	* * handle		1348403						
ANR	1348422	Symbol	* handle		1348403						
ANR	1348423	Symbol	* handle -> file		1348403						
ANR	1348424	Symbol	handle -> file -> size		1348403						
ANR	1348425	Symbol	handle		1348403						
ANR	1348426	Function	ramfile_truncate	447:0:12272:12898							
ANR	1348427	FunctionDef	"ramfile_truncate (ramhandle * handle , int size)"		1348426	0					
ANR	1348428	CompoundStatement		448:0:12329:12898	1348426	0					
ANR	1348429	IdentifierDeclStatement	ramfile * file = handle -> file ;	449:4:12335:12364	1348426	0	True				
ANR	1348430	IdentifierDecl	* file = handle -> file		1348426	0					
ANR	1348431	IdentifierDeclType	ramfile *		1348426	0					
ANR	1348432	Identifier	file		1348426	1					
ANR	1348433	AssignmentExpression	* file = handle -> file		1348426	2		=			
ANR	1348434	Identifier	file		1348426	0					
ANR	1348435	PtrMemberAccess	handle -> file		1348426	1					
ANR	1348436	Identifier	handle		1348426	0					
ANR	1348437	Identifier	file		1348426	1					
ANR	1348438	IdentifierDeclStatement	int oldsize = file -> size ;	450:4:12370:12394	1348426	1	True				
ANR	1348439	IdentifierDecl	oldsize = file -> size		1348426	0					
ANR	1348440	IdentifierDeclType	int		1348426	0					
ANR	1348441	Identifier	oldsize		1348426	1					
ANR	1348442	AssignmentExpression	oldsize = file -> size		1348426	2		=			
ANR	1348443	Identifier	oldsize		1348426	0					
ANR	1348444	PtrMemberAccess	file -> size		1348426	1					
ANR	1348445	Identifier	file		1348426	0					
ANR	1348446	Identifier	size		1348426	1					
ANR	1348447	IdentifierDeclStatement	"int x = resize ( file , size ) ;"	451:4:12400:12425	1348426	2	True				
ANR	1348448	IdentifierDecl	"x = resize ( file , size )"		1348426	0					
ANR	1348449	IdentifierDeclType	int		1348426	0					
ANR	1348450	Identifier	x		1348426	1					
ANR	1348451	AssignmentExpression	"x = resize ( file , size )"		1348426	2		=			
ANR	1348452	Identifier	x		1348426	0					
ANR	1348453	CallExpression	"resize ( file , size )"		1348426	1					
ANR	1348454	Callee	resize		1348426	0					
ANR	1348455	Identifier	resize		1348426	0					
ANR	1348456	ArgumentList	file		1348426	1					
ANR	1348457	Argument	file		1348426	0					
ANR	1348458	Identifier	file		1348426	0					
ANR	1348459	Argument	size		1348426	1					
ANR	1348460	Identifier	size		1348426	0					
ANR	1348461	IfStatement	if ( x )		1348426	3					
ANR	1348462	Condition	x	453:7:12435:12435	1348426	0	True				
ANR	1348463	Identifier	x		1348426	0					
ANR	1348464	CompoundStatement		6:10:108:108	1348426	1					
ANR	1348465	ExpressionStatement	handle -> last_error = - x	454:8:12448:12471	1348426	0	True				
ANR	1348466	AssignmentExpression	handle -> last_error = - x		1348426	0		=			
ANR	1348467	PtrMemberAccess	handle -> last_error		1348426	0					
ANR	1348468	Identifier	handle		1348426	0					
ANR	1348469	Identifier	last_error		1348426	1					
ANR	1348470	UnaryOperationExpression	- x		1348426	1					
ANR	1348471	UnaryOperator	-		1348426	0					
ANR	1348472	Identifier	x		1348426	1					
ANR	1348473	ReturnStatement	return - 1 ;	455:8:12481:12490	1348426	1	True				
ANR	1348474	UnaryOperationExpression	- 1		1348426	0					
ANR	1348475	UnaryOperator	-		1348426	0					
ANR	1348476	PrimaryExpression	1		1348426	1					
ANR	1348477	IfStatement	if ( oldsize >= size )		1348426	4					
ANR	1348478	Condition	oldsize >= size	457:7:12505:12519	1348426	0	True				
ANR	1348479	RelationalExpression	oldsize >= size		1348426	0		>=			
ANR	1348480	Identifier	oldsize		1348426	0					
ANR	1348481	Identifier	size		1348426	1					
ANR	1348482	ReturnStatement	return 0 ;	457:24:12522:12530	1348426	1	True				
ANR	1348483	PrimaryExpression	0		1348426	0					
ANR	1348484	WhileStatement	while ( oldsize < file -> size )		1348426	5					
ANR	1348485	Condition	oldsize < file -> size	460:10:12603:12622	1348426	0	True				
ANR	1348486	RelationalExpression	oldsize < file -> size		1348426	0		<			
ANR	1348487	Identifier	oldsize		1348426	0					
ANR	1348488	PtrMemberAccess	file -> size		1348426	1					
ANR	1348489	Identifier	file		1348426	0					
ANR	1348490	Identifier	size		1348426	1					
ANR	1348491	CompoundStatement		15:8:385:436	1348426	1					
ANR	1348492	IdentifierDeclStatement	char * p = file -> data [ oldsize / RAMFS_BLOCKSIZE ] + oldsize % RAMFS_BLOCKSIZE ;	461:8:12635:12705	1348426	0	True				
ANR	1348493	IdentifierDecl	* p = file -> data [ oldsize / RAMFS_BLOCKSIZE ] + oldsize % RAMFS_BLOCKSIZE		1348426	0					
ANR	1348494	IdentifierDeclType	char *		1348426	0					
ANR	1348495	Identifier	p		1348426	1					
ANR	1348496	AssignmentExpression	* p = file -> data [ oldsize / RAMFS_BLOCKSIZE ] + oldsize % RAMFS_BLOCKSIZE		1348426	2		=			
ANR	1348497	Identifier	p		1348426	0					
ANR	1348498	AdditiveExpression	file -> data [ oldsize / RAMFS_BLOCKSIZE ] + oldsize % RAMFS_BLOCKSIZE		1348426	1		+			
ANR	1348499	ArrayIndexing	file -> data [ oldsize / RAMFS_BLOCKSIZE ]		1348426	0					
ANR	1348500	PtrMemberAccess	file -> data		1348426	0					
ANR	1348501	Identifier	file		1348426	0					
ANR	1348502	Identifier	data		1348426	1					
ANR	1348503	MultiplicativeExpression	oldsize / RAMFS_BLOCKSIZE		1348426	1		/			
ANR	1348504	Identifier	oldsize		1348426	0					
ANR	1348505	Identifier	RAMFS_BLOCKSIZE		1348426	1					
ANR	1348506	MultiplicativeExpression	oldsize % RAMFS_BLOCKSIZE		1348426	1		%			
ANR	1348507	Identifier	oldsize		1348426	0					
ANR	1348508	Identifier	RAMFS_BLOCKSIZE		1348426	1					
ANR	1348509	IdentifierDeclStatement	int len = RAMFS_BLOCKSIZE - oldsize % RAMFS_BLOCKSIZE ;	462:8:12715:12766	1348426	1	True				
ANR	1348510	IdentifierDecl	len = RAMFS_BLOCKSIZE - oldsize % RAMFS_BLOCKSIZE		1348426	0					
ANR	1348511	IdentifierDeclType	int		1348426	0					
ANR	1348512	Identifier	len		1348426	1					
ANR	1348513	AssignmentExpression	len = RAMFS_BLOCKSIZE - oldsize % RAMFS_BLOCKSIZE		1348426	2		=			
ANR	1348514	Identifier	len		1348426	0					
ANR	1348515	AdditiveExpression	RAMFS_BLOCKSIZE - oldsize % RAMFS_BLOCKSIZE		1348426	1		-			
ANR	1348516	Identifier	RAMFS_BLOCKSIZE		1348426	0					
ANR	1348517	MultiplicativeExpression	oldsize % RAMFS_BLOCKSIZE		1348426	1		%			
ANR	1348518	Identifier	oldsize		1348426	0					
ANR	1348519	Identifier	RAMFS_BLOCKSIZE		1348426	1					
ANR	1348520	IfStatement	if ( len > file -> size - oldsize )		1348426	2					
ANR	1348521	Condition	len > file -> size - oldsize	463:11:12779:12800	1348426	0	True				
ANR	1348522	RelationalExpression	len > file -> size - oldsize		1348426	0		>			
ANR	1348523	Identifier	len		1348426	0					
ANR	1348524	AdditiveExpression	file -> size - oldsize		1348426	1		-			
ANR	1348525	PtrMemberAccess	file -> size		1348426	0					
ANR	1348526	Identifier	file		1348426	0					
ANR	1348527	Identifier	size		1348426	1					
ANR	1348528	Identifier	oldsize		1348426	1					
ANR	1348529	ExpressionStatement	len = file -> size - oldsize	463:35:12803:12827	1348426	1	True				
ANR	1348530	AssignmentExpression	len = file -> size - oldsize		1348426	0		=			
ANR	1348531	Identifier	len		1348426	0					
ANR	1348532	AdditiveExpression	file -> size - oldsize		1348426	1		-			
ANR	1348533	PtrMemberAccess	file -> size		1348426	0					
ANR	1348534	Identifier	file		1348426	0					
ANR	1348535	Identifier	size		1348426	1					
ANR	1348536	Identifier	oldsize		1348426	1					
ANR	1348537	ExpressionStatement	oldsize += len	464:8:12837:12851	1348426	3	True				
ANR	1348538	AssignmentExpression	oldsize += len		1348426	0		+=			
ANR	1348539	Identifier	oldsize		1348426	0					
ANR	1348540	Identifier	len		1348426	1					
ANR	1348541	ExpressionStatement	"memset ( p , 0 , len )"	465:8:12861:12876	1348426	4	True				
ANR	1348542	CallExpression	"memset ( p , 0 , len )"		1348426	0					
ANR	1348543	Callee	memset		1348426	0					
ANR	1348544	Identifier	memset		1348426	0					
ANR	1348545	ArgumentList	p		1348426	1					
ANR	1348546	Argument	p		1348426	0					
ANR	1348547	Identifier	p		1348426	0					
ANR	1348548	Argument	0		1348426	1					
ANR	1348549	PrimaryExpression	0		1348426	0					
ANR	1348550	Argument	len		1348426	2					
ANR	1348551	Identifier	len		1348426	0					
ANR	1348552	ReturnStatement	return 0 ;	467:4:12888:12896	1348426	6	True				
ANR	1348553	PrimaryExpression	0		1348426	0					
ANR	1348554	ReturnType	static int		1348426	1					
ANR	1348555	Identifier	ramfile_truncate		1348426	2					
ANR	1348556	ParameterList	"ramhandle * handle , int size"		1348426	3					
ANR	1348557	Parameter	ramhandle * handle	447:28:12300:12317	1348426	0	True				
ANR	1348558	ParameterType	ramhandle *		1348426	0					
ANR	1348559	Identifier	handle		1348426	1					
ANR	1348560	Parameter	int size	447:47:12319:12326	1348426	1	True				
ANR	1348561	ParameterType	int		1348426	0					
ANR	1348562	Identifier	size		1348426	1					
ANR	1348563	CFGEntryNode	ENTRY		1348426		True				
ANR	1348564	CFGExitNode	EXIT		1348426		True				
ANR	1348565	Symbol	handle -> last_error		1348426						
ANR	1348566	Symbol	* handle		1348426						
ANR	1348567	Symbol	* oldsize		1348426						
ANR	1348568	Symbol	handle		1348426						
ANR	1348569	Symbol	* file		1348426						
ANR	1348570	Symbol	handle -> file		1348426						
ANR	1348571	Symbol	p		1348426						
ANR	1348572	Symbol	file		1348426						
ANR	1348573	Symbol	size		1348426						
ANR	1348574	Symbol	len		1348426						
ANR	1348575	Symbol	file -> size		1348426						
ANR	1348576	Symbol	x		1348426						
ANR	1348577	Symbol	* RAMFS_BLOCKSIZE		1348426						
ANR	1348578	Symbol	file -> data		1348426						
ANR	1348579	Symbol	resize		1348426						
ANR	1348580	Symbol	RAMFS_BLOCKSIZE		1348426						
ANR	1348581	Symbol	* file -> data		1348426						
ANR	1348582	Symbol	oldsize		1348426						
ANR	1348583	Symbol	* * file		1348426						
ANR	1348584	Function	ramfile_close	470:0:12901:13069							
ANR	1348585	FunctionDef	ramfile_close (ramhandle * handle)		1348584	0					
ANR	1348586	CompoundStatement		471:0:12940:13069	1348584	0					
ANR	1348587	IdentifierDeclStatement	ramfile * file = handle -> file ;	472:4:12946:12975	1348584	0	True				
ANR	1348588	IdentifierDecl	* file = handle -> file		1348584	0					
ANR	1348589	IdentifierDeclType	ramfile *		1348584	0					
ANR	1348590	Identifier	file		1348584	1					
ANR	1348591	AssignmentExpression	* file = handle -> file		1348584	2		=			
ANR	1348592	Identifier	file		1348584	0					
ANR	1348593	PtrMemberAccess	handle -> file		1348584	1					
ANR	1348594	Identifier	handle		1348584	0					
ANR	1348595	Identifier	file		1348584	1					
ANR	1348596	ExpressionStatement	unlink_node ( file )	473:4:12981:12998	1348584	1	True				
ANR	1348597	CallExpression	unlink_node ( file )		1348584	0					
ANR	1348598	Callee	unlink_node		1348584	0					
ANR	1348599	Identifier	unlink_node		1348584	0					
ANR	1348600	ArgumentList	file		1348584	1					
ANR	1348601	Argument	file		1348584	0					
ANR	1348602	Identifier	file		1348584	0					
ANR	1348603	ExpressionStatement	"gs_free_object ( handle -> file -> fs -> memory , handle , ""ramfs close"" )"	474:4:13004:13067	1348584	2	True				
ANR	1348604	CallExpression	"gs_free_object ( handle -> file -> fs -> memory , handle , ""ramfs close"" )"		1348584	0					
ANR	1348605	Callee	gs_free_object		1348584	0					
ANR	1348606	Identifier	gs_free_object		1348584	0					
ANR	1348607	ArgumentList	handle -> file -> fs -> memory		1348584	1					
ANR	1348608	Argument	handle -> file -> fs -> memory		1348584	0					
ANR	1348609	PtrMemberAccess	handle -> file -> fs -> memory		1348584	0					
ANR	1348610	PtrMemberAccess	handle -> file -> fs		1348584	0					
ANR	1348611	PtrMemberAccess	handle -> file		1348584	0					
ANR	1348612	Identifier	handle		1348584	0					
ANR	1348613	Identifier	file		1348584	1					
ANR	1348614	Identifier	fs		1348584	1					
ANR	1348615	Identifier	memory		1348584	1					
ANR	1348616	Argument	handle		1348584	1					
ANR	1348617	Identifier	handle		1348584	0					
ANR	1348618	Argument	"""ramfs close"""		1348584	2					
ANR	1348619	PrimaryExpression	"""ramfs close"""		1348584	0					
ANR	1348620	ReturnType	void		1348584	1					
ANR	1348621	Identifier	ramfile_close		1348584	2					
ANR	1348622	ParameterList	ramhandle * handle		1348584	3					
ANR	1348623	Parameter	ramhandle * handle	470:19:12920:12937	1348584	0	True				
ANR	1348624	ParameterType	ramhandle *		1348584	0					
ANR	1348625	Identifier	handle		1348584	1					
ANR	1348626	CFGEntryNode	ENTRY		1348584		True				
ANR	1348627	CFGExitNode	EXIT		1348584		True				
ANR	1348628	Symbol	handle -> file		1348584						
ANR	1348629	Symbol	handle -> file -> fs -> memory		1348584						
ANR	1348630	Symbol	* * handle		1348584						
ANR	1348631	Symbol	file		1348584						
ANR	1348632	Symbol	handle -> file -> fs		1348584						
ANR	1348633	Symbol	* handle		1348584						
ANR	1348634	Symbol	* * handle -> file		1348584						
ANR	1348635	Symbol	* handle -> file		1348584						
ANR	1348636	Symbol	handle		1348584						
ANR	1348637	Symbol	* * * handle		1348584						
ANR	1348638	Symbol	* handle -> file -> fs		1348584						
ANR	1348639	Function	ramfile_tell	477:0:13072:13138							
ANR	1348640	FunctionDef	ramfile_tell (ramhandle * handle)		1348639	0					
ANR	1348641	CompoundStatement		478:0:13108:13138	1348639	0					
ANR	1348642	ReturnStatement	return handle -> filepos ;	479:4:13114:13136	1348639	0	True				
ANR	1348643	PtrMemberAccess	handle -> filepos		1348639	0					
ANR	1348644	Identifier	handle		1348639	0					
ANR	1348645	Identifier	filepos		1348639	1					
ANR	1348646	ReturnType	int		1348639	1					
ANR	1348647	Identifier	ramfile_tell		1348639	2					
ANR	1348648	ParameterList	ramhandle * handle		1348639	3					
ANR	1348649	Parameter	ramhandle * handle	477:17:13089:13105	1348639	0	True				
ANR	1348650	ParameterType	ramhandle *		1348639	0					
ANR	1348651	Identifier	handle		1348639	1					
ANR	1348652	CFGEntryNode	ENTRY		1348639		True				
ANR	1348653	CFGExitNode	EXIT		1348639		True				
ANR	1348654	Symbol	handle -> filepos		1348639						
ANR	1348655	Symbol	* handle		1348639						
ANR	1348656	Symbol	handle		1348639						
ANR	1348657	Function	ramfile_eof	482:0:13141:13230							
ANR	1348658	FunctionDef	ramfile_eof (ramhandle * handle)		1348657	0					
ANR	1348659	CompoundStatement		483:0:13176:13230	1348657	0					
ANR	1348660	ReturnStatement	return ( handle -> filepos >= handle -> file -> size ) ;	484:4:13182:13228	1348657	0	True				
ANR	1348661	RelationalExpression	handle -> filepos >= handle -> file -> size		1348657	0		>=			
ANR	1348662	PtrMemberAccess	handle -> filepos		1348657	0					
ANR	1348663	Identifier	handle		1348657	0					
ANR	1348664	Identifier	filepos		1348657	1					
ANR	1348665	PtrMemberAccess	handle -> file -> size		1348657	1					
ANR	1348666	PtrMemberAccess	handle -> file		1348657	0					
ANR	1348667	Identifier	handle		1348657	0					
ANR	1348668	Identifier	file		1348657	1					
ANR	1348669	Identifier	size		1348657	1					
ANR	1348670	ReturnType	int		1348657	1					
ANR	1348671	Identifier	ramfile_eof		1348657	2					
ANR	1348672	ParameterList	ramhandle * handle		1348657	3					
ANR	1348673	Parameter	ramhandle * handle	482:16:13157:13173	1348657	0	True				
ANR	1348674	ParameterType	ramhandle *		1348657	0					
ANR	1348675	Identifier	handle		1348657	1					
ANR	1348676	CFGEntryNode	ENTRY		1348657		True				
ANR	1348677	CFGExitNode	EXIT		1348657		True				
ANR	1348678	Symbol	handle -> file		1348657						
ANR	1348679	Symbol	handle -> filepos		1348657						
ANR	1348680	Symbol	* * handle		1348657						
ANR	1348681	Symbol	* handle		1348657						
ANR	1348682	Symbol	* handle -> file		1348657						
ANR	1348683	Symbol	handle -> file -> size		1348657						
ANR	1348684	Symbol	handle		1348657						
