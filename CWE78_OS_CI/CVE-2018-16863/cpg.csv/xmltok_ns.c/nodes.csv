command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10803134	File	data/converged/CVE-2018-16863_ghostpdl/xmltok_ns.c								
ANR	10803135	Function	XmlGetUtf8InternalEncoding	36:0:1645:1726							
ANR	10803136	FunctionDef	XmlGetUtf8InternalEncoding ()		10803135	0					
ANR	10803137	CompoundStatement		37:0:1682:1726	10803135	0					
ANR	10803138	ReturnStatement	return & ns ( internal_utf8_encoding ) . enc ;	38:2:1686:1724	10803135	0	True				
ANR	10803139	UnaryOperationExpression	& ns ( internal_utf8_encoding ) . enc		10803135	0					
ANR	10803140	UnaryOperator	&		10803135	0					
ANR	10803141	MemberAccess	ns ( internal_utf8_encoding ) . enc		10803135	1					
ANR	10803142	CallExpression	ns ( internal_utf8_encoding )		10803135	0					
ANR	10803143	Callee	ns		10803135	0					
ANR	10803144	Identifier	ns		10803135	0					
ANR	10803145	ArgumentList	internal_utf8_encoding		10803135	1					
ANR	10803146	Argument	internal_utf8_encoding		10803135	0					
ANR	10803147	Identifier	internal_utf8_encoding		10803135	0					
ANR	10803148	Identifier	enc		10803135	1					
ANR	10803149	ReturnType	NS		10803135	1					
ANR	10803150	Identifier	( XmlGetUtf8InternalEncoding )		10803135	2					
ANR	10803151	Identifier	XmlGetUtf8InternalEncoding		10803135	3					
ANR	10803152	ParameterList			10803135	4					
ANR	10803153	CFGEntryNode	ENTRY		10803135		True				
ANR	10803154	CFGExitNode	EXIT		10803135		True				
ANR	10803155	Symbol	internal_utf8_encoding		10803135						
ANR	10803156	Symbol	ns		10803135						
ANR	10803157	Symbol	& ns ( internal_utf8_encoding ) . enc		10803135						
ANR	10803158	Symbol	& ns		10803135						
ANR	10803159	Function	XmlGetUtf16InternalEncoding	42:0:1746:2074							
ANR	10803160	FunctionDef	XmlGetUtf16InternalEncoding ()		10803159	0					
ANR	10803161	CompoundStatement		43:0:1784:2074	10803159	0					
ANR	10803162	ReturnStatement	return & ns ( internal_little2_encoding ) . enc ;	45:2:1810:1851	10803159	0	True				
ANR	10803163	UnaryOperationExpression	& ns ( internal_little2_encoding ) . enc		10803159	0					
ANR	10803164	UnaryOperator	&		10803159	0					
ANR	10803165	MemberAccess	ns ( internal_little2_encoding ) . enc		10803159	1					
ANR	10803166	CallExpression	ns ( internal_little2_encoding )		10803159	0					
ANR	10803167	Callee	ns		10803159	0					
ANR	10803168	Identifier	ns		10803159	0					
ANR	10803169	ArgumentList	internal_little2_encoding		10803159	1					
ANR	10803170	Argument	internal_little2_encoding		10803159	0					
ANR	10803171	Identifier	internal_little2_encoding		10803159	0					
ANR	10803172	Identifier	enc		10803159	1					
ANR	10803173	ReturnType	NS		10803159	1					
ANR	10803174	Identifier	( XmlGetUtf16InternalEncoding )		10803159	2					
ANR	10803175	Identifier	XmlGetUtf16InternalEncoding		10803159	3					
ANR	10803176	ParameterList			10803159	4					
ANR	10803177	CFGEntryNode	ENTRY		10803159		True				
ANR	10803178	CFGExitNode	EXIT		10803159		True				
ANR	10803179	Symbol	& ns ( internal_little2_encoding ) . enc		10803159						
ANR	10803180	Symbol	ns		10803159						
ANR	10803181	Symbol	internal_little2_encoding		10803159						
ANR	10803182	Symbol	& ns		10803159						
ANR	10803183	Function	initScanProlog	66:0:2331:2590							
ANR	10803184	FunctionDef	"initScanProlog (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10803183	0					
ANR	10803185	CompoundStatement		69:0:2468:2590	10803183	0					
ANR	10803186	ReturnStatement	"return initScan ( NS ( encodings ) , ( const INIT_ENCODING * ) enc , XML_PROLOG_STATE , ptr , end , nextTokPtr ) ;"	70:2:2472:2588	10803183	0	True				
ANR	10803187	CallExpression	"initScan ( NS ( encodings ) , ( const INIT_ENCODING * ) enc , XML_PROLOG_STATE , ptr , end , nextTokPtr )"		10803183	0					
ANR	10803188	Callee	initScan		10803183	0					
ANR	10803189	Identifier	initScan		10803183	0					
ANR	10803190	ArgumentList	NS ( encodings )		10803183	1					
ANR	10803191	Argument	NS ( encodings )		10803183	0					
ANR	10803192	CallExpression	NS ( encodings )		10803183	0					
ANR	10803193	Callee	NS		10803183	0					
ANR	10803194	Identifier	NS		10803183	0					
ANR	10803195	ArgumentList	encodings		10803183	1					
ANR	10803196	Argument	encodings		10803183	0					
ANR	10803197	Identifier	encodings		10803183	0					
ANR	10803198	Argument	( const INIT_ENCODING * ) enc		10803183	1					
ANR	10803199	CastExpression	( const INIT_ENCODING * ) enc		10803183	0					
ANR	10803200	CastTarget	const INIT_ENCODING *		10803183	0					
ANR	10803201	Identifier	enc		10803183	1					
ANR	10803202	Argument	XML_PROLOG_STATE		10803183	2					
ANR	10803203	Identifier	XML_PROLOG_STATE		10803183	0					
ANR	10803204	Argument	ptr		10803183	3					
ANR	10803205	Identifier	ptr		10803183	0					
ANR	10803206	Argument	end		10803183	4					
ANR	10803207	Identifier	end		10803183	0					
ANR	10803208	Argument	nextTokPtr		10803183	5					
ANR	10803209	Identifier	nextTokPtr		10803183	0					
ANR	10803210	ReturnType	static int PTRCALL NS		10803183	1					
ANR	10803211	Identifier	( initScanProlog )		10803183	2					
ANR	10803212	Identifier	initScanProlog		10803183	3					
ANR	10803213	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10803183	4					
ANR	10803214	Parameter	const ENCODING * enc	67:19:2369:2387	10803183	0	True				
ANR	10803215	ParameterType	const ENCODING *		10803183	0					
ANR	10803216	Identifier	enc		10803183	1					
ANR	10803217	Parameter	const char * ptr	67:40:2390:2404	10803183	1	True				
ANR	10803218	ParameterType	const char *		10803183	0					
ANR	10803219	Identifier	ptr		10803183	1					
ANR	10803220	Parameter	const char * end	67:57:2407:2421	10803183	2	True				
ANR	10803221	ParameterType	const char *		10803183	0					
ANR	10803222	Identifier	end		10803183	1					
ANR	10803223	Parameter	const char * * nextTokPtr	68:19:2443:2465	10803183	3	True				
ANR	10803224	ParameterType	const char * *		10803183	0					
ANR	10803225	Identifier	nextTokPtr		10803183	1					
ANR	10803226	CFGEntryNode	ENTRY		10803183		True				
ANR	10803227	CFGExitNode	EXIT		10803183		True				
ANR	10803228	Symbol	nextTokPtr		10803183						
ANR	10803229	Symbol	initScan		10803183						
ANR	10803230	Symbol	NS		10803183						
ANR	10803231	Symbol	encodings		10803183						
ANR	10803232	Symbol	XML_PROLOG_STATE		10803183						
ANR	10803233	Symbol	end		10803183						
ANR	10803234	Symbol	enc		10803183						
ANR	10803235	Symbol	ptr		10803183						
ANR	10803236	Function	initScanContent	74:0:2593:2855							
ANR	10803237	FunctionDef	"initScanContent (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		10803236	0					
ANR	10803238	CompoundStatement		77:0:2732:2855	10803236	0					
ANR	10803239	ReturnStatement	"return initScan ( NS ( encodings ) , ( const INIT_ENCODING * ) enc , XML_CONTENT_STATE , ptr , end , nextTokPtr ) ;"	78:2:2736:2853	10803236	0	True				
ANR	10803240	CallExpression	"initScan ( NS ( encodings ) , ( const INIT_ENCODING * ) enc , XML_CONTENT_STATE , ptr , end , nextTokPtr )"		10803236	0					
ANR	10803241	Callee	initScan		10803236	0					
ANR	10803242	Identifier	initScan		10803236	0					
ANR	10803243	ArgumentList	NS ( encodings )		10803236	1					
ANR	10803244	Argument	NS ( encodings )		10803236	0					
ANR	10803245	CallExpression	NS ( encodings )		10803236	0					
ANR	10803246	Callee	NS		10803236	0					
ANR	10803247	Identifier	NS		10803236	0					
ANR	10803248	ArgumentList	encodings		10803236	1					
ANR	10803249	Argument	encodings		10803236	0					
ANR	10803250	Identifier	encodings		10803236	0					
ANR	10803251	Argument	( const INIT_ENCODING * ) enc		10803236	1					
ANR	10803252	CastExpression	( const INIT_ENCODING * ) enc		10803236	0					
ANR	10803253	CastTarget	const INIT_ENCODING *		10803236	0					
ANR	10803254	Identifier	enc		10803236	1					
ANR	10803255	Argument	XML_CONTENT_STATE		10803236	2					
ANR	10803256	Identifier	XML_CONTENT_STATE		10803236	0					
ANR	10803257	Argument	ptr		10803236	3					
ANR	10803258	Identifier	ptr		10803236	0					
ANR	10803259	Argument	end		10803236	4					
ANR	10803260	Identifier	end		10803236	0					
ANR	10803261	Argument	nextTokPtr		10803236	5					
ANR	10803262	Identifier	nextTokPtr		10803236	0					
ANR	10803263	ReturnType	static int PTRCALL NS		10803236	1					
ANR	10803264	Identifier	( initScanContent )		10803236	2					
ANR	10803265	Identifier	initScanContent		10803236	3					
ANR	10803266	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		10803236	4					
ANR	10803267	Parameter	const ENCODING * enc	75:20:2632:2650	10803236	0	True				
ANR	10803268	ParameterType	const ENCODING *		10803236	0					
ANR	10803269	Identifier	enc		10803236	1					
ANR	10803270	Parameter	const char * ptr	75:41:2653:2667	10803236	1	True				
ANR	10803271	ParameterType	const char *		10803236	0					
ANR	10803272	Identifier	ptr		10803236	1					
ANR	10803273	Parameter	const char * end	75:58:2670:2684	10803236	2	True				
ANR	10803274	ParameterType	const char *		10803236	0					
ANR	10803275	Identifier	end		10803236	1					
ANR	10803276	Parameter	const char * * nextTokPtr	76:20:2707:2729	10803236	3	True				
ANR	10803277	ParameterType	const char * *		10803236	0					
ANR	10803278	Identifier	nextTokPtr		10803236	1					
ANR	10803279	CFGEntryNode	ENTRY		10803236		True				
ANR	10803280	CFGExitNode	EXIT		10803236		True				
ANR	10803281	Symbol	nextTokPtr		10803236						
ANR	10803282	Symbol	initScan		10803236						
ANR	10803283	Symbol	XML_CONTENT_STATE		10803236						
ANR	10803284	Symbol	NS		10803236						
ANR	10803285	Symbol	encodings		10803236						
ANR	10803286	Symbol	end		10803236						
ANR	10803287	Symbol	enc		10803236						
ANR	10803288	Symbol	ptr		10803236						
ANR	10803289	Function	XmlInitEncoding	82:0:2858:3302							
ANR	10803290	FunctionDef	"XmlInitEncoding (INIT_ENCODING * p , const ENCODING * * encPtr , const char * name)"		10803289	0					
ANR	10803291	CompoundStatement		85:0:2963:3302	10803289	0					
ANR	10803292	IdentifierDeclStatement	int i = getEncodingIndex ( name ) ;	86:2:2967:2997	10803289	0	True				
ANR	10803293	IdentifierDecl	i = getEncodingIndex ( name )		10803289	0					
ANR	10803294	IdentifierDeclType	int		10803289	0					
ANR	10803295	Identifier	i		10803289	1					
ANR	10803296	AssignmentExpression	i = getEncodingIndex ( name )		10803289	2		=			
ANR	10803297	Identifier	i		10803289	0					
ANR	10803298	CallExpression	getEncodingIndex ( name )		10803289	1					
ANR	10803299	Callee	getEncodingIndex		10803289	0					
ANR	10803300	Identifier	getEncodingIndex		10803289	0					
ANR	10803301	ArgumentList	name		10803289	1					
ANR	10803302	Argument	name		10803289	0					
ANR	10803303	Identifier	name		10803289	0					
ANR	10803304	IfStatement	if ( i == UNKNOWN_ENC )		10803289	1					
ANR	10803305	Condition	i == UNKNOWN_ENC	87:6:3005:3020	10803289	0	True				
ANR	10803306	EqualityExpression	i == UNKNOWN_ENC		10803289	0		==			
ANR	10803307	Identifier	i		10803289	0					
ANR	10803308	Identifier	UNKNOWN_ENC		10803289	1					
ANR	10803309	ReturnStatement	return 0 ;	88:4:3027:3035	10803289	1	True				
ANR	10803310	PrimaryExpression	0		10803289	0					
ANR	10803311	ExpressionStatement	"SET_INIT_ENC_INDEX ( p , i )"	89:2:3039:3063	10803289	2	True				
ANR	10803312	CallExpression	"SET_INIT_ENC_INDEX ( p , i )"		10803289	0					
ANR	10803313	Callee	SET_INIT_ENC_INDEX		10803289	0					
ANR	10803314	Identifier	SET_INIT_ENC_INDEX		10803289	0					
ANR	10803315	ArgumentList	p		10803289	1					
ANR	10803316	Argument	p		10803289	0					
ANR	10803317	Identifier	p		10803289	0					
ANR	10803318	Argument	i		10803289	1					
ANR	10803319	Identifier	i		10803289	0					
ANR	10803320	ExpressionStatement	p -> initEnc . scanners [ XML_PROLOG_STATE ] = NS ( initScanProlog )	90:2:3067:3125	10803289	3	True				
ANR	10803321	AssignmentExpression	p -> initEnc . scanners [ XML_PROLOG_STATE ] = NS ( initScanProlog )		10803289	0		=			
ANR	10803322	ArrayIndexing	p -> initEnc . scanners [ XML_PROLOG_STATE ]		10803289	0					
ANR	10803323	MemberAccess	p -> initEnc . scanners		10803289	0					
ANR	10803324	PtrMemberAccess	p -> initEnc		10803289	0					
ANR	10803325	Identifier	p		10803289	0					
ANR	10803326	Identifier	initEnc		10803289	1					
ANR	10803327	Identifier	scanners		10803289	1					
ANR	10803328	Identifier	XML_PROLOG_STATE		10803289	1					
ANR	10803329	CallExpression	NS ( initScanProlog )		10803289	1					
ANR	10803330	Callee	NS		10803289	0					
ANR	10803331	Identifier	NS		10803289	0					
ANR	10803332	ArgumentList	initScanProlog		10803289	1					
ANR	10803333	Argument	initScanProlog		10803289	0					
ANR	10803334	Identifier	initScanProlog		10803289	0					
ANR	10803335	ExpressionStatement	p -> initEnc . scanners [ XML_CONTENT_STATE ] = NS ( initScanContent )	91:2:3129:3189	10803289	4	True				
ANR	10803336	AssignmentExpression	p -> initEnc . scanners [ XML_CONTENT_STATE ] = NS ( initScanContent )		10803289	0		=			
ANR	10803337	ArrayIndexing	p -> initEnc . scanners [ XML_CONTENT_STATE ]		10803289	0					
ANR	10803338	MemberAccess	p -> initEnc . scanners		10803289	0					
ANR	10803339	PtrMemberAccess	p -> initEnc		10803289	0					
ANR	10803340	Identifier	p		10803289	0					
ANR	10803341	Identifier	initEnc		10803289	1					
ANR	10803342	Identifier	scanners		10803289	1					
ANR	10803343	Identifier	XML_CONTENT_STATE		10803289	1					
ANR	10803344	CallExpression	NS ( initScanContent )		10803289	1					
ANR	10803345	Callee	NS		10803289	0					
ANR	10803346	Identifier	NS		10803289	0					
ANR	10803347	ArgumentList	initScanContent		10803289	1					
ANR	10803348	Argument	initScanContent		10803289	0					
ANR	10803349	Identifier	initScanContent		10803289	0					
ANR	10803350	ExpressionStatement	p -> initEnc . updatePosition = initUpdatePosition	92:2:3193:3239	10803289	5	True				
ANR	10803351	AssignmentExpression	p -> initEnc . updatePosition = initUpdatePosition		10803289	0		=			
ANR	10803352	MemberAccess	p -> initEnc . updatePosition		10803289	0					
ANR	10803353	PtrMemberAccess	p -> initEnc		10803289	0					
ANR	10803354	Identifier	p		10803289	0					
ANR	10803355	Identifier	initEnc		10803289	1					
ANR	10803356	Identifier	updatePosition		10803289	1					
ANR	10803357	Identifier	initUpdatePosition		10803289	1					
ANR	10803358	ExpressionStatement	p -> encPtr = encPtr	93:2:3243:3261	10803289	6	True				
ANR	10803359	AssignmentExpression	p -> encPtr = encPtr		10803289	0		=			
ANR	10803360	PtrMemberAccess	p -> encPtr		10803289	0					
ANR	10803361	Identifier	p		10803289	0					
ANR	10803362	Identifier	encPtr		10803289	1					
ANR	10803363	Identifier	encPtr		10803289	1					
ANR	10803364	ExpressionStatement	* encPtr = & ( p -> initEnc )	94:2:3265:3288	10803289	7	True				
ANR	10803365	AssignmentExpression	* encPtr = & ( p -> initEnc )		10803289	0		=			
ANR	10803366	UnaryOperationExpression	* encPtr		10803289	0					
ANR	10803367	UnaryOperator	*		10803289	0					
ANR	10803368	Identifier	encPtr		10803289	1					
ANR	10803369	UnaryOperationExpression	& ( p -> initEnc )		10803289	1					
ANR	10803370	UnaryOperator	&		10803289	0					
ANR	10803371	PtrMemberAccess	p -> initEnc		10803289	1					
ANR	10803372	Identifier	p		10803289	0					
ANR	10803373	Identifier	initEnc		10803289	1					
ANR	10803374	ReturnStatement	return 1 ;	95:2:3292:3300	10803289	8	True				
ANR	10803375	PrimaryExpression	1		10803289	0					
ANR	10803376	ReturnType	int NS		10803289	1					
ANR	10803377	Identifier	( XmlInitEncoding )		10803289	2					
ANR	10803378	Identifier	XmlInitEncoding		10803289	3					
ANR	10803379	ParameterList	"INIT_ENCODING * p , const ENCODING * * encPtr , const char * name"		10803289	4					
ANR	10803380	Parameter	INIT_ENCODING * p	83:20:2882:2897	10803289	0	True				
ANR	10803381	ParameterType	INIT_ENCODING *		10803289	0					
ANR	10803382	Identifier	p		10803289	1					
ANR	10803383	Parameter	const ENCODING * * encPtr	83:38:2900:2922	10803289	1	True				
ANR	10803384	ParameterType	const ENCODING * *		10803289	0					
ANR	10803385	Identifier	encPtr		10803289	1					
ANR	10803386	Parameter	const char * name	84:20:2945:2960	10803289	2	True				
ANR	10803387	ParameterType	const char *		10803289	0					
ANR	10803388	Identifier	name		10803289	1					
ANR	10803389	CFGEntryNode	ENTRY		10803289		True				
ANR	10803390	CFGExitNode	EXIT		10803289		True				
ANR	10803391	Symbol	encPtr		10803289						
ANR	10803392	Symbol	initScanProlog		10803289						
ANR	10803393	Symbol	XML_CONTENT_STATE		10803289						
ANR	10803394	Symbol	* encPtr		10803289						
ANR	10803395	Symbol	NS		10803289						
ANR	10803396	Symbol	getEncodingIndex		10803289						
ANR	10803397	Symbol	p -> initEnc . scanners		10803289						
ANR	10803398	Symbol	initUpdatePosition		10803289						
ANR	10803399	Symbol	i		10803289						
ANR	10803400	Symbol	p		10803289						
ANR	10803401	Symbol	p -> initEnc . updatePosition		10803289						
ANR	10803402	Symbol	UNKNOWN_ENC		10803289						
ANR	10803403	Symbol	* p -> initEnc . scanners		10803289						
ANR	10803404	Symbol	* p -> initEnc		10803289						
ANR	10803405	Symbol	* XML_CONTENT_STATE		10803289						
ANR	10803406	Symbol	* XML_PROLOG_STATE		10803289						
ANR	10803407	Symbol	XML_PROLOG_STATE		10803289						
ANR	10803408	Symbol	name		10803289						
ANR	10803409	Symbol	& p -> initEnc		10803289						
ANR	10803410	Symbol	* p		10803289						
ANR	10803411	Symbol	p -> encPtr		10803289						
ANR	10803412	Symbol	* * p		10803289						
ANR	10803413	Symbol	p -> initEnc		10803289						
ANR	10803414	Symbol	initScanContent		10803289						
ANR	10803415	Function	findEncoding	99:0:3329:3752							
ANR	10803416	FunctionDef	"findEncoding (const ENCODING * enc , const char * ptr , const char * end)"		10803415	0					
ANR	10803417	CompoundStatement		100:0:3401:3752	10803415	0					
ANR	10803418	Statement	define	101:1:3404:3409	10803415	0	True				
ANR	10803419	Statement	ENCODING_MAX	101:8:3411:3422	10803415	1	True				
ANR	10803420	Statement	128	101:21:3424:3426	10803415	2	True				
ANR	10803421	IdentifierDeclStatement	char buf [ ENCODING_MAX ] ;	102:2:3430:3452	10803415	3	True				
ANR	10803422	IdentifierDecl	buf [ ENCODING_MAX ]		10803415	0					
ANR	10803423	IdentifierDeclType	char [ ENCODING_MAX ]		10803415	0					
ANR	10803424	Identifier	buf		10803415	1					
ANR	10803425	Identifier	ENCODING_MAX		10803415	2					
ANR	10803426	IdentifierDeclStatement	char * p = buf ;	103:2:3456:3469	10803415	4	True				
ANR	10803427	IdentifierDecl	* p = buf		10803415	0					
ANR	10803428	IdentifierDeclType	char *		10803415	0					
ANR	10803429	Identifier	p		10803415	1					
ANR	10803430	AssignmentExpression	* p = buf		10803415	2		=			
ANR	10803431	Identifier	buf		10803415	0					
ANR	10803432	Identifier	buf		10803415	1					
ANR	10803433	IdentifierDeclStatement	int i ;	104:2:3473:3478	10803415	5	True				
ANR	10803434	IdentifierDecl	i		10803415	0					
ANR	10803435	IdentifierDeclType	int		10803415	0					
ANR	10803436	Identifier	i		10803415	1					
ANR	10803437	ExpressionStatement	"XmlUtf8Convert ( enc , & ptr , end , & p , p + ENCODING_MAX - 1 )"	105:2:3482:3538	10803415	6	True				
ANR	10803438	CallExpression	"XmlUtf8Convert ( enc , & ptr , end , & p , p + ENCODING_MAX - 1 )"		10803415	0					
ANR	10803439	Callee	XmlUtf8Convert		10803415	0					
ANR	10803440	Identifier	XmlUtf8Convert		10803415	0					
ANR	10803441	ArgumentList	enc		10803415	1					
ANR	10803442	Argument	enc		10803415	0					
ANR	10803443	Identifier	enc		10803415	0					
ANR	10803444	Argument	& ptr		10803415	1					
ANR	10803445	UnaryOperationExpression	& ptr		10803415	0					
ANR	10803446	UnaryOperator	&		10803415	0					
ANR	10803447	Identifier	ptr		10803415	1					
ANR	10803448	Argument	end		10803415	2					
ANR	10803449	Identifier	end		10803415	0					
ANR	10803450	Argument	& p		10803415	3					
ANR	10803451	UnaryOperationExpression	& p		10803415	0					
ANR	10803452	UnaryOperator	&		10803415	0					
ANR	10803453	Identifier	p		10803415	1					
ANR	10803454	Argument	p + ENCODING_MAX - 1		10803415	4					
ANR	10803455	AdditiveExpression	p + ENCODING_MAX - 1		10803415	0		+			
ANR	10803456	Identifier	p		10803415	0					
ANR	10803457	AdditiveExpression	ENCODING_MAX - 1		10803415	1		-			
ANR	10803458	Identifier	ENCODING_MAX		10803415	0					
ANR	10803459	PrimaryExpression	1		10803415	1					
ANR	10803460	IfStatement	if ( ptr != end )		10803415	7					
ANR	10803461	Condition	ptr != end	106:6:3546:3555	10803415	0	True				
ANR	10803462	EqualityExpression	ptr != end		10803415	0		!=			
ANR	10803463	Identifier	ptr		10803415	0					
ANR	10803464	Identifier	end		10803415	1					
ANR	10803465	ReturnStatement	return 0 ;	107:4:3562:3570	10803415	1	True				
ANR	10803466	PrimaryExpression	0		10803415	0					
ANR	10803467	ExpressionStatement	* p = 0	108:2:3574:3580	10803415	8	True				
ANR	10803468	AssignmentExpression	* p = 0		10803415	0		=			
ANR	10803469	UnaryOperationExpression	* p		10803415	0					
ANR	10803470	UnaryOperator	*		10803415	0					
ANR	10803471	Identifier	p		10803415	1					
ANR	10803472	PrimaryExpression	0		10803415	1					
ANR	10803473	IfStatement	"if ( streqci ( buf , KW_UTF_16 ) && enc -> minBytesPerChar == 2 )"		10803415	9					
ANR	10803474	Condition	"streqci ( buf , KW_UTF_16 ) && enc -> minBytesPerChar == 2"	109:6:3588:3639	10803415	0	True				
ANR	10803475	AndExpression	"streqci ( buf , KW_UTF_16 ) && enc -> minBytesPerChar == 2"		10803415	0		&&			
ANR	10803476	CallExpression	"streqci ( buf , KW_UTF_16 )"		10803415	0					
ANR	10803477	Callee	streqci		10803415	0					
ANR	10803478	Identifier	streqci		10803415	0					
ANR	10803479	ArgumentList	buf		10803415	1					
ANR	10803480	Argument	buf		10803415	0					
ANR	10803481	Identifier	buf		10803415	0					
ANR	10803482	Argument	KW_UTF_16		10803415	1					
ANR	10803483	Identifier	KW_UTF_16		10803415	0					
ANR	10803484	EqualityExpression	enc -> minBytesPerChar == 2		10803415	1		==			
ANR	10803485	PtrMemberAccess	enc -> minBytesPerChar		10803415	0					
ANR	10803486	Identifier	enc		10803415	0					
ANR	10803487	Identifier	minBytesPerChar		10803415	1					
ANR	10803488	PrimaryExpression	2		10803415	1					
ANR	10803489	ReturnStatement	return enc ;	110:4:3646:3656	10803415	1	True				
ANR	10803490	Identifier	enc		10803415	0					
ANR	10803491	ExpressionStatement	i = getEncodingIndex ( buf )	111:2:3660:3685	10803415	10	True				
ANR	10803492	AssignmentExpression	i = getEncodingIndex ( buf )		10803415	0		=			
ANR	10803493	Identifier	i		10803415	0					
ANR	10803494	CallExpression	getEncodingIndex ( buf )		10803415	1					
ANR	10803495	Callee	getEncodingIndex		10803415	0					
ANR	10803496	Identifier	getEncodingIndex		10803415	0					
ANR	10803497	ArgumentList	buf		10803415	1					
ANR	10803498	Argument	buf		10803415	0					
ANR	10803499	Identifier	buf		10803415	0					
ANR	10803500	IfStatement	if ( i == UNKNOWN_ENC )		10803415	11					
ANR	10803501	Condition	i == UNKNOWN_ENC	112:6:3693:3708	10803415	0	True				
ANR	10803502	EqualityExpression	i == UNKNOWN_ENC		10803415	0		==			
ANR	10803503	Identifier	i		10803415	0					
ANR	10803504	Identifier	UNKNOWN_ENC		10803415	1					
ANR	10803505	ReturnStatement	return 0 ;	113:4:3715:3723	10803415	1	True				
ANR	10803506	PrimaryExpression	0		10803415	0					
ANR	10803507	ReturnStatement	return NS ( encodings ) [ i ] ;	114:2:3727:3750	10803415	12	True				
ANR	10803508	ArrayIndexing	NS ( encodings ) [ i ]		10803415	0					
ANR	10803509	CallExpression	NS ( encodings )		10803415	0					
ANR	10803510	Callee	NS		10803415	0					
ANR	10803511	Identifier	NS		10803415	0					
ANR	10803512	ArgumentList	encodings		10803415	1					
ANR	10803513	Argument	encodings		10803415	0					
ANR	10803514	Identifier	encodings		10803415	0					
ANR	10803515	Identifier	i		10803415	1					
ANR	10803516	ReturnType	NS		10803415	1					
ANR	10803517	Identifier	( findEncoding )		10803415	2					
ANR	10803518	Identifier	findEncoding		10803415	3					
ANR	10803519	ParameterList	"const ENCODING * enc , const char * ptr , const char * end"		10803415	4					
ANR	10803520	Parameter	const ENCODING * enc	99:17:3346:3364	10803415	0	True				
ANR	10803521	ParameterType	const ENCODING *		10803415	0					
ANR	10803522	Identifier	enc		10803415	1					
ANR	10803523	Parameter	const char * ptr	99:38:3367:3381	10803415	1	True				
ANR	10803524	ParameterType	const char *		10803415	0					
ANR	10803525	Identifier	ptr		10803415	1					
ANR	10803526	Parameter	const char * end	99:55:3384:3398	10803415	2	True				
ANR	10803527	ParameterType	const char *		10803415	0					
ANR	10803528	Identifier	end		10803415	1					
ANR	10803529	CFGEntryNode	ENTRY		10803415		True				
ANR	10803530	CFGExitNode	EXIT		10803415		True				
ANR	10803531	Symbol	NS		10803415						
ANR	10803532	Symbol	getEncodingIndex		10803415						
ANR	10803533	Symbol	encodings		10803415						
ANR	10803534	Symbol	enc -> minBytesPerChar		10803415						
ANR	10803535	Symbol	* NS		10803415						
ANR	10803536	Symbol	i		10803415						
ANR	10803537	Symbol	ptr		10803415						
ANR	10803538	Symbol	p		10803415						
ANR	10803539	Symbol	buf		10803415						
ANR	10803540	Symbol	& ptr		10803415						
ANR	10803541	Symbol	* i		10803415						
ANR	10803542	Symbol	ENCODING_MAX		10803415						
ANR	10803543	Symbol	UNKNOWN_ENC		10803415						
ANR	10803544	Symbol	& p		10803415						
ANR	10803545	Symbol	streqci		10803415						
ANR	10803546	Symbol	end		10803415						
ANR	10803547	Symbol	* p		10803415						
ANR	10803548	Symbol	enc		10803415						
ANR	10803549	Symbol	* enc		10803415						
ANR	10803550	Symbol	KW_UTF_16		10803415						
ANR	10803551	Function	XmlParseXmlDecl	117:0:3755:4576							
ANR	10803552	FunctionDef	"XmlParseXmlDecl (int isGeneralTextEntity , const ENCODING * enc , const char * ptr , const char * end , const char * * badPtr , const char * * versionPtr , const char * * versionEndPtr , const char * * encodingName , const ENCODING * * encoding , int * standalone)"		10803551	0					
ANR	10803553	CompoundStatement		128:0:4184:4576	10803551	0					
ANR	10803554	ReturnStatement	"return doParseXmlDecl ( NS ( findEncoding ) , isGeneralTextEntity , enc , ptr , end , badPtr , versionPtr , versionEndPtr , encodingName , encoding , standalone ) ;"	129:2:4188:4574	10803551	0	True				
ANR	10803555	CallExpression	"doParseXmlDecl ( NS ( findEncoding ) , isGeneralTextEntity , enc , ptr , end , badPtr , versionPtr , versionEndPtr , encodingName , encoding , standalone )"		10803551	0					
ANR	10803556	Callee	doParseXmlDecl		10803551	0					
ANR	10803557	Identifier	doParseXmlDecl		10803551	0					
ANR	10803558	ArgumentList	NS ( findEncoding )		10803551	1					
ANR	10803559	Argument	NS ( findEncoding )		10803551	0					
ANR	10803560	CallExpression	NS ( findEncoding )		10803551	0					
ANR	10803561	Callee	NS		10803551	0					
ANR	10803562	Identifier	NS		10803551	0					
ANR	10803563	ArgumentList	findEncoding		10803551	1					
ANR	10803564	Argument	findEncoding		10803551	0					
ANR	10803565	Identifier	findEncoding		10803551	0					
ANR	10803566	Argument	isGeneralTextEntity		10803551	1					
ANR	10803567	Identifier	isGeneralTextEntity		10803551	0					
ANR	10803568	Argument	enc		10803551	2					
ANR	10803569	Identifier	enc		10803551	0					
ANR	10803570	Argument	ptr		10803551	3					
ANR	10803571	Identifier	ptr		10803551	0					
ANR	10803572	Argument	end		10803551	4					
ANR	10803573	Identifier	end		10803551	0					
ANR	10803574	Argument	badPtr		10803551	5					
ANR	10803575	Identifier	badPtr		10803551	0					
ANR	10803576	Argument	versionPtr		10803551	6					
ANR	10803577	Identifier	versionPtr		10803551	0					
ANR	10803578	Argument	versionEndPtr		10803551	7					
ANR	10803579	Identifier	versionEndPtr		10803551	0					
ANR	10803580	Argument	encodingName		10803551	8					
ANR	10803581	Identifier	encodingName		10803551	0					
ANR	10803582	Argument	encoding		10803551	9					
ANR	10803583	Identifier	encoding		10803551	0					
ANR	10803584	Argument	standalone		10803551	10					
ANR	10803585	Identifier	standalone		10803551	0					
ANR	10803586	ReturnType	int NS		10803551	1					
ANR	10803587	Identifier	( XmlParseXmlDecl )		10803551	2					
ANR	10803588	Identifier	XmlParseXmlDecl		10803551	3					
ANR	10803589	ParameterList	"int isGeneralTextEntity , const ENCODING * enc , const char * ptr , const char * end , const char * * badPtr , const char * * versionPtr , const char * * versionEndPtr , const char * * encodingName , const ENCODING * * encoding , int * standalone"		10803551	4					
ANR	10803590	Parameter	int isGeneralTextEntity	118:20:3779:3801	10803551	0	True				
ANR	10803591	ParameterType	int		10803551	0					
ANR	10803592	Identifier	isGeneralTextEntity		10803551	1					
ANR	10803593	Parameter	const ENCODING * enc	119:20:3824:3842	10803551	1	True				
ANR	10803594	ParameterType	const ENCODING *		10803551	0					
ANR	10803595	Identifier	enc		10803551	1					
ANR	10803596	Parameter	const char * ptr	120:20:3865:3879	10803551	2	True				
ANR	10803597	ParameterType	const char *		10803551	0					
ANR	10803598	Identifier	ptr		10803551	1					
ANR	10803599	Parameter	const char * end	121:20:3902:3916	10803551	3	True				
ANR	10803600	ParameterType	const char *		10803551	0					
ANR	10803601	Identifier	end		10803551	1					
ANR	10803602	Parameter	const char * * badPtr	122:20:3939:3957	10803551	4	True				
ANR	10803603	ParameterType	const char * *		10803551	0					
ANR	10803604	Identifier	badPtr		10803551	1					
ANR	10803605	Parameter	const char * * versionPtr	123:20:3980:4002	10803551	5	True				
ANR	10803606	ParameterType	const char * *		10803551	0					
ANR	10803607	Identifier	versionPtr		10803551	1					
ANR	10803608	Parameter	const char * * versionEndPtr	124:20:4025:4050	10803551	6	True				
ANR	10803609	ParameterType	const char * *		10803551	0					
ANR	10803610	Identifier	versionEndPtr		10803551	1					
ANR	10803611	Parameter	const char * * encodingName	125:20:4073:4097	10803551	7	True				
ANR	10803612	ParameterType	const char * *		10803551	0					
ANR	10803613	Identifier	encodingName		10803551	1					
ANR	10803614	Parameter	const ENCODING * * encoding	126:20:4120:4144	10803551	8	True				
ANR	10803615	ParameterType	const ENCODING * *		10803551	0					
ANR	10803616	Identifier	encoding		10803551	1					
ANR	10803617	Parameter	int * standalone	127:20:4167:4181	10803551	9	True				
ANR	10803618	ParameterType	int *		10803551	0					
ANR	10803619	Identifier	standalone		10803551	1					
ANR	10803620	CFGEntryNode	ENTRY		10803551		True				
ANR	10803621	CFGExitNode	EXIT		10803551		True				
ANR	10803622	Symbol	doParseXmlDecl		10803551						
ANR	10803623	Symbol	NS		10803551						
ANR	10803624	Symbol	versionEndPtr		10803551						
ANR	10803625	Symbol	standalone		10803551						
ANR	10803626	Symbol	badPtr		10803551						
ANR	10803627	Symbol	encodingName		10803551						
ANR	10803628	Symbol	encoding		10803551						
ANR	10803629	Symbol	ptr		10803551						
ANR	10803630	Symbol	findEncoding		10803551						
ANR	10803631	Symbol	isGeneralTextEntity		10803551						
ANR	10803632	Symbol	end		10803551						
ANR	10803633	Symbol	enc		10803551						
ANR	10803634	Symbol	versionPtr		10803551						
