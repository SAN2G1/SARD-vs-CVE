command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9475773	File	data/converged/CVE-2018-16863_ghostpdl/seexec.c								
ANR	9475774	Function	s_exE_process	33:0:982:1554							
ANR	9475775	FunctionDef	"s_exE_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		9475774	0					
ANR	9475776	CompoundStatement		36:0:1102:1554	9475774	0					
ANR	9475777	Statement	stream_exE_state	37:4:1108:1123	9475774	0	True				
ANR	9475778	Statement	*	37:21:1125:1125	9475774	1	True				
ANR	9475779	Statement	const	37:22:1126:1130	9475774	2	True				
ANR	9475780	ExpressionStatement	ss = ( stream_exE_state * ) st	37:28:1132:1160	9475774	3	True				
ANR	9475781	AssignmentExpression	ss = ( stream_exE_state * ) st		9475774	0		=			
ANR	9475782	Identifier	ss		9475774	0					
ANR	9475783	CastExpression	( stream_exE_state * ) st		9475774	1					
ANR	9475784	CastTarget	stream_exE_state *		9475774	0					
ANR	9475785	Identifier	st		9475774	1					
ANR	9475786	IdentifierDeclStatement	const byte * p = pr -> ptr ;	38:4:1166:1189	9475774	4	True				
ANR	9475787	IdentifierDecl	* p = pr -> ptr		9475774	0					
ANR	9475788	IdentifierDeclType	const byte *		9475774	0					
ANR	9475789	Identifier	p		9475774	1					
ANR	9475790	AssignmentExpression	* p = pr -> ptr		9475774	2		=			
ANR	9475791	Identifier	p		9475774	0					
ANR	9475792	PtrMemberAccess	pr -> ptr		9475774	1					
ANR	9475793	Identifier	pr		9475774	0					
ANR	9475794	Identifier	ptr		9475774	1					
ANR	9475795	IdentifierDeclStatement	byte * q = pw -> ptr ;	39:4:1195:1212	9475774	5	True				
ANR	9475796	IdentifierDecl	* q = pw -> ptr		9475774	0					
ANR	9475797	IdentifierDeclType	byte *		9475774	0					
ANR	9475798	Identifier	q		9475774	1					
ANR	9475799	AssignmentExpression	* q = pw -> ptr		9475774	2		=			
ANR	9475800	Identifier	q		9475774	0					
ANR	9475801	PtrMemberAccess	pw -> ptr		9475774	1					
ANR	9475802	Identifier	pw		9475774	0					
ANR	9475803	Identifier	ptr		9475774	1					
ANR	9475804	IdentifierDeclStatement	uint rcount = pr -> limit - p ;	40:4:1218:1245	9475774	6	True				
ANR	9475805	IdentifierDecl	rcount = pr -> limit - p		9475774	0					
ANR	9475806	IdentifierDeclType	uint		9475774	0					
ANR	9475807	Identifier	rcount		9475774	1					
ANR	9475808	AssignmentExpression	rcount = pr -> limit - p		9475774	2		=			
ANR	9475809	Identifier	rcount		9475774	0					
ANR	9475810	AdditiveExpression	pr -> limit - p		9475774	1		-			
ANR	9475811	PtrMemberAccess	pr -> limit		9475774	0					
ANR	9475812	Identifier	pr		9475774	0					
ANR	9475813	Identifier	limit		9475774	1					
ANR	9475814	Identifier	p		9475774	1					
ANR	9475815	IdentifierDeclStatement	uint wcount = pw -> limit - q ;	41:4:1251:1278	9475774	7	True				
ANR	9475816	IdentifierDecl	wcount = pw -> limit - q		9475774	0					
ANR	9475817	IdentifierDeclType	uint		9475774	0					
ANR	9475818	Identifier	wcount		9475774	1					
ANR	9475819	AssignmentExpression	wcount = pw -> limit - q		9475774	2		=			
ANR	9475820	Identifier	wcount		9475774	0					
ANR	9475821	AdditiveExpression	pw -> limit - q		9475774	1		-			
ANR	9475822	PtrMemberAccess	pw -> limit		9475774	0					
ANR	9475823	Identifier	pw		9475774	0					
ANR	9475824	Identifier	limit		9475774	1					
ANR	9475825	Identifier	q		9475774	1					
ANR	9475826	IdentifierDeclStatement	uint count ;	42:4:1284:1294	9475774	8	True				
ANR	9475827	IdentifierDecl	count		9475774	0					
ANR	9475828	IdentifierDeclType	uint		9475774	0					
ANR	9475829	Identifier	count		9475774	1					
ANR	9475830	IdentifierDeclStatement	int status ;	43:4:1300:1310	9475774	9	True				
ANR	9475831	IdentifierDecl	status		9475774	0					
ANR	9475832	IdentifierDeclType	int		9475774	0					
ANR	9475833	Identifier	status		9475774	1					
ANR	9475834	IfStatement	if ( rcount <= wcount )		9475774	10					
ANR	9475835	Condition	rcount <= wcount	45:8:1321:1336	9475774	0	True				
ANR	9475836	RelationalExpression	rcount <= wcount		9475774	0		<=			
ANR	9475837	Identifier	rcount		9475774	0					
ANR	9475838	Identifier	wcount		9475774	1					
ANR	9475839	ExpressionStatement	"count = rcount , status = 0"	46:8:1347:1373	9475774	1	True				
ANR	9475840	Expression	"count = rcount , status = 0"		9475774	0					
ANR	9475841	AssignmentExpression	count = rcount		9475774	0		=			
ANR	9475842	Identifier	count		9475774	0					
ANR	9475843	Identifier	rcount		9475774	1					
ANR	9475844	AssignmentExpression	status = 0		9475774	1		=			
ANR	9475845	Identifier	status		9475774	0					
ANR	9475846	PrimaryExpression	0		9475774	1					
ANR	9475847	ElseStatement	else		9475774	0					
ANR	9475848	ExpressionStatement	"count = wcount , status = 1"	48:8:1392:1418	9475774	0	True				
ANR	9475849	Expression	"count = wcount , status = 1"		9475774	0					
ANR	9475850	AssignmentExpression	count = wcount		9475774	0		=			
ANR	9475851	Identifier	count		9475774	0					
ANR	9475852	Identifier	wcount		9475774	1					
ANR	9475853	AssignmentExpression	status = 1		9475774	1		=			
ANR	9475854	Identifier	status		9475774	0					
ANR	9475855	PrimaryExpression	1		9475774	1					
ANR	9475856	ExpressionStatement	"gs_type1_encrypt ( q + 1 , p + 1 , count , ( crypt_state * ) & ss -> cstate )"	49:4:1424:1489	9475774	11	True				
ANR	9475857	CallExpression	"gs_type1_encrypt ( q + 1 , p + 1 , count , ( crypt_state * ) & ss -> cstate )"		9475774	0					
ANR	9475858	Callee	gs_type1_encrypt		9475774	0					
ANR	9475859	Identifier	gs_type1_encrypt		9475774	0					
ANR	9475860	ArgumentList	q + 1		9475774	1					
ANR	9475861	Argument	q + 1		9475774	0					
ANR	9475862	AdditiveExpression	q + 1		9475774	0		+			
ANR	9475863	Identifier	q		9475774	0					
ANR	9475864	PrimaryExpression	1		9475774	1					
ANR	9475865	Argument	p + 1		9475774	1					
ANR	9475866	AdditiveExpression	p + 1		9475774	0		+			
ANR	9475867	Identifier	p		9475774	0					
ANR	9475868	PrimaryExpression	1		9475774	1					
ANR	9475869	Argument	count		9475774	2					
ANR	9475870	Identifier	count		9475774	0					
ANR	9475871	Argument	( crypt_state * ) & ss -> cstate		9475774	3					
ANR	9475872	CastExpression	( crypt_state * ) & ss -> cstate		9475774	0					
ANR	9475873	CastTarget	crypt_state *		9475774	0					
ANR	9475874	UnaryOperationExpression	& ss -> cstate		9475774	1					
ANR	9475875	UnaryOperator	&		9475774	0					
ANR	9475876	PtrMemberAccess	ss -> cstate		9475774	1					
ANR	9475877	Identifier	ss		9475774	0					
ANR	9475878	Identifier	cstate		9475774	1					
ANR	9475879	ExpressionStatement	pr -> ptr += count	50:4:1495:1511	9475774	12	True				
ANR	9475880	AssignmentExpression	pr -> ptr += count		9475774	0		+=			
ANR	9475881	PtrMemberAccess	pr -> ptr		9475774	0					
ANR	9475882	Identifier	pr		9475774	0					
ANR	9475883	Identifier	ptr		9475774	1					
ANR	9475884	Identifier	count		9475774	1					
ANR	9475885	ExpressionStatement	pw -> ptr += count	51:4:1517:1533	9475774	13	True				
ANR	9475886	AssignmentExpression	pw -> ptr += count		9475774	0		+=			
ANR	9475887	PtrMemberAccess	pw -> ptr		9475774	0					
ANR	9475888	Identifier	pw		9475774	0					
ANR	9475889	Identifier	ptr		9475774	1					
ANR	9475890	Identifier	count		9475774	1					
ANR	9475891	ReturnStatement	return status ;	52:4:1539:1552	9475774	14	True				
ANR	9475892	Identifier	status		9475774	0					
ANR	9475893	ReturnType	static int		9475774	1					
ANR	9475894	Identifier	s_exE_process		9475774	2					
ANR	9475895	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		9475774	3					
ANR	9475896	Parameter	stream_state * st	34:14:1007:1023	9475774	0	True				
ANR	9475897	ParameterType	stream_state *		9475774	0					
ANR	9475898	Identifier	st		9475774	1					
ANR	9475899	Parameter	stream_cursor_read * pr	34:33:1026:1048	9475774	1	True				
ANR	9475900	ParameterType	stream_cursor_read *		9475774	0					
ANR	9475901	Identifier	pr		9475774	1					
ANR	9475902	Parameter	stream_cursor_write * pw	35:14:1065:1088	9475774	2	True				
ANR	9475903	ParameterType	stream_cursor_write *		9475774	0					
ANR	9475904	Identifier	pw		9475774	1					
ANR	9475905	Parameter	bool last	35:40:1091:1099	9475774	3	True				
ANR	9475906	ParameterType	bool		9475774	0					
ANR	9475907	Identifier	last		9475774	1					
ANR	9475908	CFGEntryNode	ENTRY		9475774		True				
ANR	9475909	CFGExitNode	EXIT		9475774		True				
ANR	9475910	Symbol	ss		9475774						
ANR	9475911	Symbol	wcount		9475774						
ANR	9475912	Symbol	st		9475774						
ANR	9475913	Symbol	& ss -> cstate		9475774						
ANR	9475914	Symbol	pr		9475774						
ANR	9475915	Symbol	last		9475774						
ANR	9475916	Symbol	pw		9475774						
ANR	9475917	Symbol	count		9475774						
ANR	9475918	Symbol	* pr		9475774						
ANR	9475919	Symbol	pr -> limit		9475774						
ANR	9475920	Symbol	* pw		9475774						
ANR	9475921	Symbol	p		9475774						
ANR	9475922	Symbol	pw -> limit		9475774						
ANR	9475923	Symbol	q		9475774						
ANR	9475924	Symbol	rcount		9475774						
ANR	9475925	Symbol	pr -> ptr		9475774						
ANR	9475926	Symbol	pw -> ptr		9475774						
ANR	9475927	Symbol	status		9475774						
ANR	9475928	DeclStmt									
ANR	9475929	Decl							const stream_template	const stream_template	s_exE_template
ANR	9475930	Function	s_exD_set_defaults	65:0:1747:2076							
ANR	9475931	FunctionDef	s_exD_set_defaults (stream_state * st)		9475930	0					
ANR	9475932	CompoundStatement		67:0:1797:2076	9475930	0					
ANR	9475933	Statement	stream_exD_state	68:4:1803:1818	9475930	0	True				
ANR	9475934	Statement	*	68:21:1820:1820	9475930	1	True				
ANR	9475935	Statement	const	68:22:1821:1825	9475930	2	True				
ANR	9475936	ExpressionStatement	ss = ( stream_exD_state * ) st	68:28:1827:1855	9475930	3	True				
ANR	9475937	AssignmentExpression	ss = ( stream_exD_state * ) st		9475930	0		=			
ANR	9475938	Identifier	ss		9475930	0					
ANR	9475939	CastExpression	( stream_exD_state * ) st		9475930	1					
ANR	9475940	CastTarget	stream_exD_state *		9475930	0					
ANR	9475941	Identifier	st		9475930	1					
ANR	9475942	ExpressionStatement	ss -> binary = - 1	70:4:1862:1877	9475930	4	True				
ANR	9475943	AssignmentExpression	ss -> binary = - 1		9475930	0		=			
ANR	9475944	PtrMemberAccess	ss -> binary		9475930	0					
ANR	9475945	Identifier	ss		9475930	0					
ANR	9475946	Identifier	binary		9475930	1					
ANR	9475947	UnaryOperationExpression	- 1		9475930	1					
ANR	9475948	UnaryOperator	-		9475930	0					
ANR	9475949	PrimaryExpression	1		9475930	1					
ANR	9475950	ExpressionStatement	ss -> lenIV = 4	71:4:1898:1911	9475930	5	True				
ANR	9475951	AssignmentExpression	ss -> lenIV = 4		9475930	0		=			
ANR	9475952	PtrMemberAccess	ss -> lenIV		9475930	0					
ANR	9475953	Identifier	ss		9475930	0					
ANR	9475954	Identifier	lenIV		9475930	1					
ANR	9475955	PrimaryExpression	4		9475930	1					
ANR	9475956	ExpressionStatement	ss -> hex_left = max_long	72:4:1917:1940	9475930	6	True				
ANR	9475957	AssignmentExpression	ss -> hex_left = max_long		9475930	0		=			
ANR	9475958	PtrMemberAccess	ss -> hex_left		9475930	0					
ANR	9475959	Identifier	ss		9475930	0					
ANR	9475960	Identifier	hex_left		9475930	1					
ANR	9475961	Identifier	max_long		9475930	1					
ANR	9475962	ExpressionStatement	ss -> pfb_state = 0	74:4:1978:1995	9475930	7	True				
ANR	9475963	AssignmentExpression	ss -> pfb_state = 0		9475930	0		=			
ANR	9475964	PtrMemberAccess	ss -> pfb_state		9475930	0					
ANR	9475965	Identifier	ss		9475930	0					
ANR	9475966	Identifier	pfb_state		9475930	1					
ANR	9475967	PrimaryExpression	0		9475930	1					
ANR	9475968	ExpressionStatement	ss -> keep_spaces = false	75:4:2001:2024	9475930	8	True				
ANR	9475969	AssignmentExpression	ss -> keep_spaces = false		9475930	0		=			
ANR	9475970	PtrMemberAccess	ss -> keep_spaces		9475930	0					
ANR	9475971	Identifier	ss		9475930	0					
ANR	9475972	Identifier	keep_spaces		9475930	1					
ANR	9475973	Identifier	false		9475930	1					
ANR	9475974	ExpressionStatement	ss -> is_leading_space = true	76:4:2047:2074	9475930	9	True				
ANR	9475975	AssignmentExpression	ss -> is_leading_space = true		9475930	0		=			
ANR	9475976	PtrMemberAccess	ss -> is_leading_space		9475930	0					
ANR	9475977	Identifier	ss		9475930	0					
ANR	9475978	Identifier	is_leading_space		9475930	1					
ANR	9475979	Identifier	true		9475930	1					
ANR	9475980	ReturnType	static void		9475930	1					
ANR	9475981	Identifier	s_exD_set_defaults		9475930	2					
ANR	9475982	ParameterList	stream_state * st		9475930	3					
ANR	9475983	Parameter	stream_state * st	66:19:1778:1794	9475930	0	True				
ANR	9475984	ParameterType	stream_state *		9475930	0					
ANR	9475985	Identifier	st		9475930	1					
ANR	9475986	CFGEntryNode	ENTRY		9475930		True				
ANR	9475987	CFGExitNode	EXIT		9475930		True				
ANR	9475988	Symbol	ss		9475930						
ANR	9475989	Symbol	ss -> keep_spaces		9475930						
ANR	9475990	Symbol	st		9475930						
ANR	9475991	Symbol	ss -> binary		9475930						
ANR	9475992	Symbol	* ss		9475930						
ANR	9475993	Symbol	ss -> hex_left		9475930						
ANR	9475994	Symbol	ss -> lenIV		9475930						
ANR	9475995	Symbol	max_long		9475930						
ANR	9475996	Symbol	false		9475930						
ANR	9475997	Symbol	true		9475930						
ANR	9475998	Symbol	ss -> is_leading_space		9475930						
ANR	9475999	Symbol	ss -> pfb_state		9475930						
ANR	9476000	Function	s_exD_init	81:0:2181:2341							
ANR	9476001	FunctionDef	s_exD_init (stream_state * st)		9476000	0					
ANR	9476002	CompoundStatement		83:0:2222:2341	9476000	0					
ANR	9476003	Statement	stream_exD_state	84:4:2228:2243	9476000	0	True				
ANR	9476004	Statement	*	84:21:2245:2245	9476000	1	True				
ANR	9476005	Statement	const	84:22:2246:2250	9476000	2	True				
ANR	9476006	ExpressionStatement	ss = ( stream_exD_state * ) st	84:28:2252:2280	9476000	3	True				
ANR	9476007	AssignmentExpression	ss = ( stream_exD_state * ) st		9476000	0		=			
ANR	9476008	Identifier	ss		9476000	0					
ANR	9476009	CastExpression	( stream_exD_state * ) st		9476000	1					
ANR	9476010	CastTarget	stream_exD_state *		9476000	0					
ANR	9476011	Identifier	st		9476000	1					
ANR	9476012	ExpressionStatement	ss -> odd = - 1	86:4:2287:2299	9476000	4	True				
ANR	9476013	AssignmentExpression	ss -> odd = - 1		9476000	0		=			
ANR	9476014	PtrMemberAccess	ss -> odd		9476000	0					
ANR	9476015	Identifier	ss		9476000	0					
ANR	9476016	Identifier	odd		9476000	1					
ANR	9476017	UnaryOperationExpression	- 1		9476000	1					
ANR	9476018	UnaryOperator	-		9476000	0					
ANR	9476019	PrimaryExpression	1		9476000	1					
ANR	9476020	ExpressionStatement	ss -> skip = ss -> lenIV	87:4:2305:2325	9476000	5	True				
ANR	9476021	AssignmentExpression	ss -> skip = ss -> lenIV		9476000	0		=			
ANR	9476022	PtrMemberAccess	ss -> skip		9476000	0					
ANR	9476023	Identifier	ss		9476000	0					
ANR	9476024	Identifier	skip		9476000	1					
ANR	9476025	PtrMemberAccess	ss -> lenIV		9476000	1					
ANR	9476026	Identifier	ss		9476000	0					
ANR	9476027	Identifier	lenIV		9476000	1					
ANR	9476028	ReturnStatement	return 0 ;	88:4:2331:2339	9476000	6	True				
ANR	9476029	PrimaryExpression	0		9476000	0					
ANR	9476030	ReturnType	static int		9476000	1					
ANR	9476031	Identifier	s_exD_init		9476000	2					
ANR	9476032	ParameterList	stream_state * st		9476000	3					
ANR	9476033	Parameter	stream_state * st	82:11:2203:2219	9476000	0	True				
ANR	9476034	ParameterType	stream_state *		9476000	0					
ANR	9476035	Identifier	st		9476000	1					
ANR	9476036	CFGEntryNode	ENTRY		9476000		True				
ANR	9476037	CFGExitNode	EXIT		9476000		True				
ANR	9476038	Symbol	ss		9476000						
ANR	9476039	Symbol	ss -> odd		9476000						
ANR	9476040	Symbol	st		9476000						
ANR	9476041	Symbol	ss -> skip		9476000						
ANR	9476042	Symbol	* ss		9476000						
ANR	9476043	Symbol	ss -> lenIV		9476000						
ANR	9476044	Function	s_exD_process	92:0:2368:6331							
ANR	9476045	FunctionDef	"s_exD_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		9476044	0					
ANR	9476046	CompoundStatement		95:0:2488:6331	9476044	0					
ANR	9476047	Statement	stream_exD_state	96:4:2494:2509	9476044	0	True				
ANR	9476048	Statement	*	96:21:2511:2511	9476044	1	True				
ANR	9476049	Statement	const	96:22:2512:2516	9476044	2	True				
ANR	9476050	ExpressionStatement	ss = ( stream_exD_state * ) st	96:28:2518:2546	9476044	3	True				
ANR	9476051	AssignmentExpression	ss = ( stream_exD_state * ) st		9476044	0		=			
ANR	9476052	Identifier	ss		9476044	0					
ANR	9476053	CastExpression	( stream_exD_state * ) st		9476044	1					
ANR	9476054	CastTarget	stream_exD_state *		9476044	0					
ANR	9476055	Identifier	st		9476044	1					
ANR	9476056	IdentifierDeclStatement	const byte * p = pr -> ptr ;	97:4:2552:2575	9476044	4	True				
ANR	9476057	IdentifierDecl	* p = pr -> ptr		9476044	0					
ANR	9476058	IdentifierDeclType	const byte *		9476044	0					
ANR	9476059	Identifier	p		9476044	1					
ANR	9476060	AssignmentExpression	* p = pr -> ptr		9476044	2		=			
ANR	9476061	Identifier	p		9476044	0					
ANR	9476062	PtrMemberAccess	pr -> ptr		9476044	1					
ANR	9476063	Identifier	pr		9476044	0					
ANR	9476064	Identifier	ptr		9476044	1					
ANR	9476065	IdentifierDeclStatement	byte * q = pw -> ptr ;	98:4:2581:2598	9476044	5	True				
ANR	9476066	IdentifierDecl	* q = pw -> ptr		9476044	0					
ANR	9476067	IdentifierDeclType	byte *		9476044	0					
ANR	9476068	Identifier	q		9476044	1					
ANR	9476069	AssignmentExpression	* q = pw -> ptr		9476044	2		=			
ANR	9476070	Identifier	q		9476044	0					
ANR	9476071	PtrMemberAccess	pw -> ptr		9476044	1					
ANR	9476072	Identifier	pw		9476044	0					
ANR	9476073	Identifier	ptr		9476044	1					
ANR	9476074	IdentifierDeclStatement	int skip = ss -> skip ;	99:4:2604:2623	9476044	6	True				
ANR	9476075	IdentifierDecl	skip = ss -> skip		9476044	0					
ANR	9476076	IdentifierDeclType	int		9476044	0					
ANR	9476077	Identifier	skip		9476044	1					
ANR	9476078	AssignmentExpression	skip = ss -> skip		9476044	2		=			
ANR	9476079	Identifier	skip		9476044	0					
ANR	9476080	PtrMemberAccess	ss -> skip		9476044	1					
ANR	9476081	Identifier	ss		9476044	0					
ANR	9476082	Identifier	skip		9476044	1					
ANR	9476083	IdentifierDeclStatement	int rcount = pr -> limit - p ;	100:4:2629:2655	9476044	7	True				
ANR	9476084	IdentifierDecl	rcount = pr -> limit - p		9476044	0					
ANR	9476085	IdentifierDeclType	int		9476044	0					
ANR	9476086	Identifier	rcount		9476044	1					
ANR	9476087	AssignmentExpression	rcount = pr -> limit - p		9476044	2		=			
ANR	9476088	Identifier	rcount		9476044	0					
ANR	9476089	AdditiveExpression	pr -> limit - p		9476044	1		-			
ANR	9476090	PtrMemberAccess	pr -> limit		9476044	0					
ANR	9476091	Identifier	pr		9476044	0					
ANR	9476092	Identifier	limit		9476044	1					
ANR	9476093	Identifier	p		9476044	1					
ANR	9476094	IdentifierDeclStatement	int wcount = pw -> limit - q ;	101:4:2661:2687	9476044	8	True				
ANR	9476095	IdentifierDecl	wcount = pw -> limit - q		9476044	0					
ANR	9476096	IdentifierDeclType	int		9476044	0					
ANR	9476097	Identifier	wcount		9476044	1					
ANR	9476098	AssignmentExpression	wcount = pw -> limit - q		9476044	2		=			
ANR	9476099	Identifier	wcount		9476044	0					
ANR	9476100	AdditiveExpression	pw -> limit - q		9476044	1		-			
ANR	9476101	PtrMemberAccess	pw -> limit		9476044	0					
ANR	9476102	Identifier	pw		9476044	0					
ANR	9476103	Identifier	limit		9476044	1					
ANR	9476104	Identifier	q		9476044	1					
ANR	9476105	IdentifierDeclStatement	int status = 0 ;	102:4:2693:2707	9476044	9	True				
ANR	9476106	IdentifierDecl	status = 0		9476044	0					
ANR	9476107	IdentifierDeclType	int		9476044	0					
ANR	9476108	Identifier	status		9476044	1					
ANR	9476109	AssignmentExpression	status = 0		9476044	2		=			
ANR	9476110	Identifier	status		9476044	0					
ANR	9476111	PrimaryExpression	0		9476044	1					
ANR	9476112	IdentifierDeclStatement	"int count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount ) ;"	103:4:2713:2774	9476044	10	True				
ANR	9476113	IdentifierDecl	"count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount )"		9476044	0					
ANR	9476114	IdentifierDeclType	int		9476044	0					
ANR	9476115	Identifier	count		9476044	1					
ANR	9476116	AssignmentExpression	"count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount )"		9476044	2		=			
ANR	9476117	Identifier	count		9476044	0					
ANR	9476118	ConditionalExpression	"wcount < rcount ? ( status = 1 , wcount ) : rcount"		9476044	1					
ANR	9476119	Condition	wcount < rcount		9476044	0					
ANR	9476120	RelationalExpression	wcount < rcount		9476044	0		<			
ANR	9476121	Identifier	wcount		9476044	0					
ANR	9476122	Identifier	rcount		9476044	1					
ANR	9476123	Expression	"status = 1 , wcount"		9476044	1					
ANR	9476124	AssignmentExpression	status = 1		9476044	0		=			
ANR	9476125	Identifier	status		9476044	0					
ANR	9476126	PrimaryExpression	1		9476044	1					
ANR	9476127	Identifier	wcount		9476044	1					
ANR	9476128	Identifier	rcount		9476044	2					
ANR	9476129	IfStatement	if ( ss -> binary < 0 )		9476044	11					
ANR	9476130	Condition	ss -> binary < 0	105:8:2785:2798	9476044	0	True				
ANR	9476131	RelationalExpression	ss -> binary < 0		9476044	0		<			
ANR	9476132	PtrMemberAccess	ss -> binary		9476044	0					
ANR	9476133	Identifier	ss		9476044	0					
ANR	9476134	Identifier	binary		9476044	1					
ANR	9476135	PrimaryExpression	0		9476044	1					
ANR	9476136	CompoundStatement		16:8:465:470	9476044	1					
ANR	9476137	Statement	const	109:8:2899:2903	9476044	0	True				
ANR	9476138	Statement	byte	109:14:2905:2908	9476044	1	True				
ANR	9476139	Statement	*	109:19:2910:2910	9476044	2	True				
ANR	9476140	Statement	const	109:20:2911:2915	9476044	3	True				
ANR	9476141	ExpressionStatement	decoder = scan_char_decoder	109:26:2917:2944	9476044	4	True				
ANR	9476142	AssignmentExpression	decoder = scan_char_decoder		9476044	0		=			
ANR	9476143	Identifier	decoder		9476044	0					
ANR	9476144	Identifier	scan_char_decoder		9476044	1					
ANR	9476145	IdentifierDeclStatement	int i ;	110:8:2954:2959	9476044	5	True				
ANR	9476146	IdentifierDecl	i		9476044	0					
ANR	9476147	IdentifierDeclType	int		9476044	0					
ANR	9476148	Identifier	i		9476044	1					
ANR	9476149	IfStatement	if ( ss -> pfb_state == 0 && ! ss -> keep_spaces )		9476044	6					
ANR	9476150	Condition	ss -> pfb_state == 0 && ! ss -> keep_spaces	112:12:2974:3011	9476044	0	True				
ANR	9476151	AndExpression	ss -> pfb_state == 0 && ! ss -> keep_spaces		9476044	0		&&			
ANR	9476152	EqualityExpression	ss -> pfb_state == 0		9476044	0		==			
ANR	9476153	PtrMemberAccess	ss -> pfb_state		9476044	0					
ANR	9476154	Identifier	ss		9476044	0					
ANR	9476155	Identifier	pfb_state		9476044	1					
ANR	9476156	PrimaryExpression	0		9476044	1					
ANR	9476157	UnaryOperationExpression	! ss -> keep_spaces		9476044	1					
ANR	9476158	UnaryOperator	!		9476044	0					
ANR	9476159	PtrMemberAccess	ss -> keep_spaces		9476044	1					
ANR	9476160	Identifier	ss		9476044	0					
ANR	9476161	Identifier	keep_spaces		9476044	1					
ANR	9476162	CompoundStatement		18:52:525:525	9476044	1					
ANR	9476163	ForStatement	"for ( ; rcount ; rcount -- , p ++ )"		9476044	0					
ANR	9476164	Condition	rcount	118:19:3283:3288	9476044	0	True				
ANR	9476165	Identifier	rcount		9476044	0					
ANR	9476166	Expression	"rcount -- , p ++"	118:27:3291:3303	9476044	1	True				
ANR	9476167	PostIncDecOperationExpression	rcount --		9476044	0					
ANR	9476168	Identifier	rcount		9476044	0					
ANR	9476169	IncDec	--		9476044	1					
ANR	9476170	PostIncDecOperationExpression	p ++		9476044	1					
ANR	9476171	Identifier	p		9476044	0					
ANR	9476172	IncDec	++		9476044	1					
ANR	9476173	CompoundStatement		25:16:835:848	9476044	2					
ANR	9476174	IdentifierDeclStatement	byte c = p [ 1 ] ;	119:16:3324:3337	9476044	0	True				
ANR	9476175	IdentifierDecl	c = p [ 1 ]		9476044	0					
ANR	9476176	IdentifierDeclType	byte		9476044	0					
ANR	9476177	Identifier	c		9476044	1					
ANR	9476178	AssignmentExpression	c = p [ 1 ]		9476044	2		=			
ANR	9476179	Identifier	c		9476044	0					
ANR	9476180	ArrayIndexing	p [ 1 ]		9476044	1					
ANR	9476181	Identifier	p		9476044	0					
ANR	9476182	PrimaryExpression	1		9476044	1					
ANR	9476183	IfStatement	if ( c != '\\t' && c != char_CR && c != char_EOL && c != ' ' )		9476044	1					
ANR	9476184	Condition	c != '\\t' && c != char_CR && c != char_EOL && c != ' '	120:19:3358:3411	9476044	0	True				
ANR	9476185	AndExpression	c != '\\t' && c != char_CR && c != char_EOL && c != ' '		9476044	0		&&			
ANR	9476186	EqualityExpression	c != '\\t'		9476044	0		!=			
ANR	9476187	Identifier	c		9476044	0					
ANR	9476188	PrimaryExpression	'\\t'		9476044	1					
ANR	9476189	AndExpression	c != char_CR && c != char_EOL && c != ' '		9476044	1		&&			
ANR	9476190	EqualityExpression	c != char_CR		9476044	0		!=			
ANR	9476191	Identifier	c		9476044	0					
ANR	9476192	Identifier	char_CR		9476044	1					
ANR	9476193	AndExpression	c != char_EOL && c != ' '		9476044	1		&&			
ANR	9476194	EqualityExpression	c != char_EOL		9476044	0		!=			
ANR	9476195	Identifier	c		9476044	0					
ANR	9476196	Identifier	char_EOL		9476044	1					
ANR	9476197	EqualityExpression	c != ' '		9476044	1		!=			
ANR	9476198	Identifier	c		9476044	0					
ANR	9476199	PrimaryExpression	' '		9476044	1					
ANR	9476200	BreakStatement	break ;	121:20:3434:3439	9476044	1	True				
ANR	9476201	ExpressionStatement	pr -> ptr = p	123:12:3467:3478	9476044	1	True				
ANR	9476202	AssignmentExpression	pr -> ptr = p		9476044	0		=			
ANR	9476203	PtrMemberAccess	pr -> ptr		9476044	0					
ANR	9476204	Identifier	pr		9476044	0					
ANR	9476205	Identifier	ptr		9476044	1					
ANR	9476206	Identifier	p		9476044	1					
ANR	9476207	ExpressionStatement	"count = min ( wcount , rcount )"	124:12:3492:3519	9476044	2	True				
ANR	9476208	AssignmentExpression	"count = min ( wcount , rcount )"		9476044	0		=			
ANR	9476209	Identifier	count		9476044	0					
ANR	9476210	CallExpression	"min ( wcount , rcount )"		9476044	1					
ANR	9476211	Callee	min		9476044	0					
ANR	9476212	Identifier	min		9476044	0					
ANR	9476213	ArgumentList	wcount		9476044	1					
ANR	9476214	Argument	wcount		9476044	0					
ANR	9476215	Identifier	wcount		9476044	0					
ANR	9476216	Argument	rcount		9476044	1					
ANR	9476217	Identifier	rcount		9476044	0					
ANR	9476218	IfStatement	if ( rcount < 8 && ! last )		9476044	7					
ANR	9476219	Condition	rcount < 8 && ! last	134:12:3874:3892	9476044	0	True				
ANR	9476220	AndExpression	rcount < 8 && ! last		9476044	0		&&			
ANR	9476221	RelationalExpression	rcount < 8		9476044	0		<			
ANR	9476222	Identifier	rcount		9476044	0					
ANR	9476223	PrimaryExpression	8		9476044	1					
ANR	9476224	UnaryOperationExpression	! last		9476044	1					
ANR	9476225	UnaryOperator	!		9476044	0					
ANR	9476226	Identifier	last		9476044	1					
ANR	9476227	ReturnStatement	return 0 ;	135:12:3907:3915	9476044	1	True				
ANR	9476228	PrimaryExpression	0		9476044	0					
ANR	9476229	ExpressionStatement	ss -> binary = 0	137:8:3926:3940	9476044	8	True				
ANR	9476230	AssignmentExpression	ss -> binary = 0		9476044	0		=			
ANR	9476231	PtrMemberAccess	ss -> binary		9476044	0					
ANR	9476232	Identifier	ss		9476044	0					
ANR	9476233	Identifier	binary		9476044	1					
ANR	9476234	PrimaryExpression	0		9476044	1					
ANR	9476235	ForStatement	"for ( i = min ( 8 , rcount ) ; i > 0 ; i -- )"		9476044	9					
ANR	9476236	ForInit	"i = min ( 8 , rcount ) ;"	138:13:3955:3973	9476044	0	True				
ANR	9476237	AssignmentExpression	"i = min ( 8 , rcount )"		9476044	0		=			
ANR	9476238	Identifier	i		9476044	0					
ANR	9476239	CallExpression	"min ( 8 , rcount )"		9476044	1					
ANR	9476240	Callee	min		9476044	0					
ANR	9476241	Identifier	min		9476044	0					
ANR	9476242	ArgumentList	8		9476044	1					
ANR	9476243	Argument	8		9476044	0					
ANR	9476244	PrimaryExpression	8		9476044	0					
ANR	9476245	Argument	rcount		9476044	1					
ANR	9476246	Identifier	rcount		9476044	0					
ANR	9476247	Condition	i > 0	138:33:3975:3979	9476044	1	True				
ANR	9476248	RelationalExpression	i > 0		9476044	0		>			
ANR	9476249	Identifier	i		9476044	0					
ANR	9476250	PrimaryExpression	0		9476044	1					
ANR	9476251	PostIncDecOperationExpression	i --	138:40:3982:3984	9476044	2	True				
ANR	9476252	Identifier	i		9476044	0					
ANR	9476253	IncDec	--		9476044	1					
ANR	9476254	IfStatement	if ( ! ( decoder [ p [ i ] ] <= 0xf || decoder [ p [ i ] ] == ctype_space ) )		9476044	3					
ANR	9476255	Condition	! ( decoder [ p [ i ] ] <= 0xf || decoder [ p [ i ] ] == ctype_space )	139:16:4003:4075	9476044	0	True				
ANR	9476256	UnaryOperationExpression	! ( decoder [ p [ i ] ] <= 0xf || decoder [ p [ i ] ] == ctype_space )		9476044	0					
ANR	9476257	UnaryOperator	!		9476044	0					
ANR	9476258	OrExpression	decoder [ p [ i ] ] <= 0xf || decoder [ p [ i ] ] == ctype_space		9476044	1		||			
ANR	9476259	RelationalExpression	decoder [ p [ i ] ] <= 0xf		9476044	0		<=			
ANR	9476260	ArrayIndexing	decoder [ p [ i ] ]		9476044	0					
ANR	9476261	Identifier	decoder		9476044	0					
ANR	9476262	ArrayIndexing	p [ i ]		9476044	1					
ANR	9476263	Identifier	p		9476044	0					
ANR	9476264	Identifier	i		9476044	1					
ANR	9476265	PrimaryExpression	0xf		9476044	1					
ANR	9476266	EqualityExpression	decoder [ p [ i ] ] == ctype_space		9476044	1		==			
ANR	9476267	ArrayIndexing	decoder [ p [ i ] ]		9476044	0					
ANR	9476268	Identifier	decoder		9476044	0					
ANR	9476269	ArrayIndexing	p [ i ]		9476044	1					
ANR	9476270	Identifier	p		9476044	0					
ANR	9476271	Identifier	i		9476044	1					
ANR	9476272	Identifier	ctype_space		9476044	1					
ANR	9476273	CompoundStatement		47:18:1606:1606	9476044	1					
ANR	9476274	ExpressionStatement	ss -> binary = 1	142:16:4113:4127	9476044	0	True				
ANR	9476275	AssignmentExpression	ss -> binary = 1		9476044	0		=			
ANR	9476276	PtrMemberAccess	ss -> binary		9476044	0					
ANR	9476277	Identifier	ss		9476044	0					
ANR	9476278	Identifier	binary		9476044	1					
ANR	9476279	PrimaryExpression	1		9476044	1					
ANR	9476280	BreakStatement	break ;	143:16:4145:4150	9476044	1	True				
ANR	9476281	IfStatement	if ( ss -> binary )		9476044	12					
ANR	9476282	Condition	ss -> binary	146:8:4180:4189	9476044	0	True				
ANR	9476283	PtrMemberAccess	ss -> binary		9476044	0					
ANR	9476284	Identifier	ss		9476044	0					
ANR	9476285	Identifier	binary		9476044	1					
ANR	9476286	CompoundStatement		52:20:1703:1703	9476044	1					
ANR	9476287	ExpressionStatement	pr -> ptr = p + count	154:8:4556:4575	9476044	0	True				
ANR	9476288	AssignmentExpression	pr -> ptr = p + count		9476044	0		=			
ANR	9476289	PtrMemberAccess	pr -> ptr		9476044	0					
ANR	9476290	Identifier	pr		9476044	0					
ANR	9476291	Identifier	ptr		9476044	1					
ANR	9476292	AdditiveExpression	p + count		9476044	1		+			
ANR	9476293	Identifier	p		9476044	0					
ANR	9476294	Identifier	count		9476044	1					
ANR	9476295	ElseStatement	else		9476044	0					
ANR	9476296	CompoundStatement		68:8:2359:2376	9476044	0					
ANR	9476297	IdentifierDeclStatement	stream_cursor_read r ;	161:8:4818:4838	9476044	0	True				
ANR	9476298	IdentifierDecl	r		9476044	0					
ANR	9476299	IdentifierDeclType	stream_cursor_read		9476044	0					
ANR	9476300	Identifier	r		9476044	1					
ANR	9476301	IdentifierDeclStatement	const byte * start ;	162:8:4848:4865	9476044	1	True				
ANR	9476302	IdentifierDecl	* start		9476044	0					
ANR	9476303	IdentifierDeclType	const byte *		9476044	0					
ANR	9476304	Identifier	start		9476044	1					
ANR	9476305	Label	hp :	164:0:4868:4870	9476044	2	True				
ANR	9476306	Identifier	hp		9476044	0					
ANR	9476307	ExpressionStatement	r = * pr	164:4:4872:4879	9476044	3	True				
ANR	9476308	AssignmentExpression	r = * pr		9476044	0		=			
ANR	9476309	Identifier	r		9476044	0					
ANR	9476310	UnaryOperationExpression	* pr		9476044	1					
ANR	9476311	UnaryOperator	*		9476044	0					
ANR	9476312	Identifier	pr		9476044	1					
ANR	9476313	ExpressionStatement	start = r . ptr	165:8:4889:4902	9476044	4	True				
ANR	9476314	AssignmentExpression	start = r . ptr		9476044	0		=			
ANR	9476315	Identifier	start		9476044	0					
ANR	9476316	MemberAccess	r . ptr		9476044	1					
ANR	9476317	Identifier	r		9476044	0					
ANR	9476318	Identifier	ptr		9476044	1					
ANR	9476319	IfStatement	if ( r . limit - r . ptr > ss -> hex_left )		9476044	5					
ANR	9476320	Condition	r . limit - r . ptr > ss -> hex_left	166:12:4916:4945	9476044	0	True				
ANR	9476321	RelationalExpression	r . limit - r . ptr > ss -> hex_left		9476044	0		>			
ANR	9476322	AdditiveExpression	r . limit - r . ptr		9476044	0		-			
ANR	9476323	MemberAccess	r . limit		9476044	0					
ANR	9476324	Identifier	r		9476044	0					
ANR	9476325	Identifier	limit		9476044	1					
ANR	9476326	MemberAccess	r . ptr		9476044	1					
ANR	9476327	Identifier	r		9476044	0					
ANR	9476328	Identifier	ptr		9476044	1					
ANR	9476329	PtrMemberAccess	ss -> hex_left		9476044	1					
ANR	9476330	Identifier	ss		9476044	0					
ANR	9476331	Identifier	hex_left		9476044	1					
ANR	9476332	ExpressionStatement	r . limit = r . ptr + ss -> hex_left	167:12:4960:4990	9476044	1	True				
ANR	9476333	AssignmentExpression	r . limit = r . ptr + ss -> hex_left		9476044	0		=			
ANR	9476334	MemberAccess	r . limit		9476044	0					
ANR	9476335	Identifier	r		9476044	0					
ANR	9476336	Identifier	limit		9476044	1					
ANR	9476337	AdditiveExpression	r . ptr + ss -> hex_left		9476044	1		+			
ANR	9476338	MemberAccess	r . ptr		9476044	0					
ANR	9476339	Identifier	r		9476044	0					
ANR	9476340	Identifier	ptr		9476044	1					
ANR	9476341	PtrMemberAccess	ss -> hex_left		9476044	1					
ANR	9476342	Identifier	ss		9476044	0					
ANR	9476343	Identifier	hex_left		9476044	1					
ANR	9476344	ExpressionStatement	"status = s_hex_process ( & r , pw , & ss -> odd , ( ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace ) )"	168:8:5000:5132	9476044	6	True				
ANR	9476345	AssignmentExpression	"status = s_hex_process ( & r , pw , & ss -> odd , ( ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace ) )"		9476044	0		=			
ANR	9476346	Identifier	status		9476044	0					
ANR	9476347	CallExpression	"s_hex_process ( & r , pw , & ss -> odd , ( ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace ) )"		9476044	1					
ANR	9476348	Callee	s_hex_process		9476044	0					
ANR	9476349	Identifier	s_hex_process		9476044	0					
ANR	9476350	ArgumentList	& r		9476044	1					
ANR	9476351	Argument	& r		9476044	0					
ANR	9476352	UnaryOperationExpression	& r		9476044	0					
ANR	9476353	UnaryOperator	&		9476044	0					
ANR	9476354	Identifier	r		9476044	1					
ANR	9476355	Argument	pw		9476044	1					
ANR	9476356	Identifier	pw		9476044	0					
ANR	9476357	Argument	& ss -> odd		9476044	2					
ANR	9476358	UnaryOperationExpression	& ss -> odd		9476044	0					
ANR	9476359	UnaryOperator	&		9476044	0					
ANR	9476360	PtrMemberAccess	ss -> odd		9476044	1					
ANR	9476361	Identifier	ss		9476044	0					
ANR	9476362	Identifier	odd		9476044	1					
ANR	9476363	Argument	ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace		9476044	3					
ANR	9476364	ConditionalExpression	ss -> is_leading_space ? hex_ignore_leading_whitespace : hex_break_on_whitespace		9476044	0					
ANR	9476365	Condition	ss -> is_leading_space		9476044	0					
ANR	9476366	PtrMemberAccess	ss -> is_leading_space		9476044	0					
ANR	9476367	Identifier	ss		9476044	0					
ANR	9476368	Identifier	is_leading_space		9476044	1					
ANR	9476369	Identifier	hex_ignore_leading_whitespace		9476044	1					
ANR	9476370	Identifier	hex_break_on_whitespace		9476044	2					
ANR	9476371	IfStatement	if ( status == 2 )		9476044	7					
ANR	9476372	Condition	status == 2	170:12:5146:5156	9476044	0	True				
ANR	9476373	EqualityExpression	status == 2		9476044	0		==			
ANR	9476374	Identifier	status		9476044	0					
ANR	9476375	PrimaryExpression	2		9476044	1					
ANR	9476376	CompoundStatement		76:25:2670:2670	9476044	1					
ANR	9476377	ExpressionStatement	ss -> is_leading_space = true	171:12:5173:5200	9476044	0	True				
ANR	9476378	AssignmentExpression	ss -> is_leading_space = true		9476044	0		=			
ANR	9476379	PtrMemberAccess	ss -> is_leading_space		9476044	0					
ANR	9476380	Identifier	ss		9476044	0					
ANR	9476381	Identifier	is_leading_space		9476044	1					
ANR	9476382	Identifier	true		9476044	1					
ANR	9476383	ExpressionStatement	status = 1	172:12:5214:5224	9476044	1	True				
ANR	9476384	AssignmentExpression	status = 1		9476044	0		=			
ANR	9476385	Identifier	status		9476044	0					
ANR	9476386	PrimaryExpression	1		9476044	1					
ANR	9476387	ElseStatement	else		9476044	0					
ANR	9476388	ExpressionStatement	ss -> is_leading_space = false	174:12:5253:5281	9476044	0	True				
ANR	9476389	AssignmentExpression	ss -> is_leading_space = false		9476044	0		=			
ANR	9476390	PtrMemberAccess	ss -> is_leading_space		9476044	0					
ANR	9476391	Identifier	ss		9476044	0					
ANR	9476392	Identifier	is_leading_space		9476044	1					
ANR	9476393	Identifier	false		9476044	1					
ANR	9476394	ExpressionStatement	pr -> ptr = r . ptr	175:8:5291:5306	9476044	8	True				
ANR	9476395	AssignmentExpression	pr -> ptr = r . ptr		9476044	0		=			
ANR	9476396	PtrMemberAccess	pr -> ptr		9476044	0					
ANR	9476397	Identifier	pr		9476044	0					
ANR	9476398	Identifier	ptr		9476044	1					
ANR	9476399	MemberAccess	r . ptr		9476044	1					
ANR	9476400	Identifier	r		9476044	0					
ANR	9476401	Identifier	ptr		9476044	1					
ANR	9476402	ExpressionStatement	ss -> hex_left -= r . ptr - start	176:8:5316:5345	9476044	9	True				
ANR	9476403	AssignmentExpression	ss -> hex_left -= r . ptr - start		9476044	0		-=			
ANR	9476404	PtrMemberAccess	ss -> hex_left		9476044	0					
ANR	9476405	Identifier	ss		9476044	0					
ANR	9476406	Identifier	hex_left		9476044	1					
ANR	9476407	AdditiveExpression	r . ptr - start		9476044	1		-			
ANR	9476408	MemberAccess	r . ptr		9476044	0					
ANR	9476409	Identifier	r		9476044	0					
ANR	9476410	Identifier	ptr		9476044	1					
ANR	9476411	Identifier	start		9476044	1					
ANR	9476412	IfStatement	if ( ss -> hex_left == 0 )		9476044	10					
ANR	9476413	Condition	ss -> hex_left == 0	181:12:5479:5495	9476044	0	True				
ANR	9476414	EqualityExpression	ss -> hex_left == 0		9476044	0		==			
ANR	9476415	PtrMemberAccess	ss -> hex_left		9476044	0					
ANR	9476416	Identifier	ss		9476044	0					
ANR	9476417	Identifier	hex_left		9476044	1					
ANR	9476418	PrimaryExpression	0		9476044	1					
ANR	9476419	ExpressionStatement	ss -> binary = 1	182:12:5510:5524	9476044	1	True				
ANR	9476420	AssignmentExpression	ss -> binary = 1		9476044	0		=			
ANR	9476421	PtrMemberAccess	ss -> binary		9476044	0					
ANR	9476422	Identifier	ss		9476044	0					
ANR	9476423	Identifier	binary		9476044	1					
ANR	9476424	PrimaryExpression	1		9476044	1					
ANR	9476425	ExpressionStatement	count = pw -> ptr - q	183:8:5534:5553	9476044	11	True				
ANR	9476426	AssignmentExpression	count = pw -> ptr - q		9476044	0		=			
ANR	9476427	Identifier	count		9476044	0					
ANR	9476428	AdditiveExpression	pw -> ptr - q		9476044	1		-			
ANR	9476429	PtrMemberAccess	pw -> ptr		9476044	0					
ANR	9476430	Identifier	pw		9476044	0					
ANR	9476431	Identifier	ptr		9476044	1					
ANR	9476432	Identifier	q		9476044	1					
ANR	9476433	IfStatement	if ( status < 0 && ss -> odd < 0 )		9476044	12					
ANR	9476434	Condition	status < 0 && ss -> odd < 0	184:12:5567:5591	9476044	0	True				
ANR	9476435	AndExpression	status < 0 && ss -> odd < 0		9476044	0		&&			
ANR	9476436	RelationalExpression	status < 0		9476044	0		<			
ANR	9476437	Identifier	status		9476044	0					
ANR	9476438	PrimaryExpression	0		9476044	1					
ANR	9476439	RelationalExpression	ss -> odd < 0		9476044	1		<			
ANR	9476440	PtrMemberAccess	ss -> odd		9476044	0					
ANR	9476441	Identifier	ss		9476044	0					
ANR	9476442	Identifier	odd		9476044	1					
ANR	9476443	PrimaryExpression	0		9476044	1					
ANR	9476444	CompoundStatement		90:39:3105:3105	9476044	1					
ANR	9476445	IfStatement	if ( count )		9476044	0					
ANR	9476446	Condition	count	185:16:5612:5616	9476044	0	True				
ANR	9476447	Identifier	count		9476044	0					
ANR	9476448	CompoundStatement		91:23:3130:3130	9476044	1					
ANR	9476449	ExpressionStatement	-- p	186:16:5637:5640	9476044	0	True				
ANR	9476450	UnaryExpression	-- p		9476044	0					
ANR	9476451	IncDec	--		9476044	0					
ANR	9476452	Identifier	p		9476044	1					
ANR	9476453	ExpressionStatement	status = 0	187:16:5658:5668	9476044	1	True				
ANR	9476454	AssignmentExpression	status = 0		9476044	0		=			
ANR	9476455	Identifier	status		9476044	0					
ANR	9476456	PrimaryExpression	0		9476044	1					
ANR	9476457	ElseStatement	else		9476044	0					
ANR	9476458	IfStatement	if ( * p == '%' )		9476044	0					
ANR	9476459	Condition	* p == '%'	188:23:5725:5733	9476044	0	True				
ANR	9476460	EqualityExpression	* p == '%'		9476044	0		==			
ANR	9476461	UnaryOperationExpression	* p		9476044	0					
ANR	9476462	UnaryOperator	*		9476044	0					
ANR	9476463	Identifier	p		9476044	1					
ANR	9476464	PrimaryExpression	'%'		9476044	1					
ANR	9476465	GotoStatement	goto hp ;	189:16:5752:5759	9476044	1	True				
ANR	9476466	Identifier	hp		9476044	0					
ANR	9476467	ExpressionStatement	p = q	191:8:5794:5799	9476044	13	True				
ANR	9476468	AssignmentExpression	p = q		9476044	0		=			
ANR	9476469	Identifier	p		9476044	0					
ANR	9476470	Identifier	q		9476044	1					
ANR	9476471	IfStatement	if ( skip >= count && skip != 0 )		9476044	13					
ANR	9476472	Condition	skip >= count && skip != 0	193:8:5815:5840	9476044	0	True				
ANR	9476473	AndExpression	skip >= count && skip != 0		9476044	0		&&			
ANR	9476474	RelationalExpression	skip >= count		9476044	0		>=			
ANR	9476475	Identifier	skip		9476044	0					
ANR	9476476	Identifier	count		9476044	1					
ANR	9476477	EqualityExpression	skip != 0		9476044	1		!=			
ANR	9476478	Identifier	skip		9476044	0					
ANR	9476479	PrimaryExpression	0		9476044	1					
ANR	9476480	CompoundStatement		99:36:3354:3354	9476044	1					
ANR	9476481	ExpressionStatement	"gs_type1_decrypt ( q + 1 , p + 1 , count , ( crypt_state * ) & ss -> cstate )"	194:8:5853:5945	9476044	0	True				
ANR	9476482	CallExpression	"gs_type1_decrypt ( q + 1 , p + 1 , count , ( crypt_state * ) & ss -> cstate )"		9476044	0					
ANR	9476483	Callee	gs_type1_decrypt		9476044	0					
ANR	9476484	Identifier	gs_type1_decrypt		9476044	0					
ANR	9476485	ArgumentList	q + 1		9476044	1					
ANR	9476486	Argument	q + 1		9476044	0					
ANR	9476487	AdditiveExpression	q + 1		9476044	0		+			
ANR	9476488	Identifier	q		9476044	0					
ANR	9476489	PrimaryExpression	1		9476044	1					
ANR	9476490	Argument	p + 1		9476044	1					
ANR	9476491	AdditiveExpression	p + 1		9476044	0		+			
ANR	9476492	Identifier	p		9476044	0					
ANR	9476493	PrimaryExpression	1		9476044	1					
ANR	9476494	Argument	count		9476044	2					
ANR	9476495	Identifier	count		9476044	0					
ANR	9476496	Argument	( crypt_state * ) & ss -> cstate		9476044	3					
ANR	9476497	CastExpression	( crypt_state * ) & ss -> cstate		9476044	0					
ANR	9476498	CastTarget	crypt_state *		9476044	0					
ANR	9476499	UnaryOperationExpression	& ss -> cstate		9476044	1					
ANR	9476500	UnaryOperator	&		9476044	0					
ANR	9476501	PtrMemberAccess	ss -> cstate		9476044	1					
ANR	9476502	Identifier	ss		9476044	0					
ANR	9476503	Identifier	cstate		9476044	1					
ANR	9476504	ExpressionStatement	ss -> skip -= count	196:8:5955:5972	9476044	1	True				
ANR	9476505	AssignmentExpression	ss -> skip -= count		9476044	0		-=			
ANR	9476506	PtrMemberAccess	ss -> skip		9476044	0					
ANR	9476507	Identifier	ss		9476044	0					
ANR	9476508	Identifier	skip		9476044	1					
ANR	9476509	Identifier	count		9476044	1					
ANR	9476510	ExpressionStatement	count = 0	197:8:5982:5991	9476044	2	True				
ANR	9476511	AssignmentExpression	count = 0		9476044	0		=			
ANR	9476512	Identifier	count		9476044	0					
ANR	9476513	PrimaryExpression	0		9476044	1					
ANR	9476514	ExpressionStatement	status = 0	198:8:6001:6011	9476044	3	True				
ANR	9476515	AssignmentExpression	status = 0		9476044	0		=			
ANR	9476516	Identifier	status		9476044	0					
ANR	9476517	PrimaryExpression	0		9476044	1					
ANR	9476518	ElseStatement	else		9476044	0					
ANR	9476519	CompoundStatement		105:11:3535:3535	9476044	0					
ANR	9476520	ExpressionStatement	"gs_type1_decrypt ( q + 1 , p + 1 , skip , ( crypt_state * ) & ss -> cstate )"	200:8:6034:6125	9476044	0	True				
ANR	9476521	CallExpression	"gs_type1_decrypt ( q + 1 , p + 1 , skip , ( crypt_state * ) & ss -> cstate )"		9476044	0					
ANR	9476522	Callee	gs_type1_decrypt		9476044	0					
ANR	9476523	Identifier	gs_type1_decrypt		9476044	0					
ANR	9476524	ArgumentList	q + 1		9476044	1					
ANR	9476525	Argument	q + 1		9476044	0					
ANR	9476526	AdditiveExpression	q + 1		9476044	0		+			
ANR	9476527	Identifier	q		9476044	0					
ANR	9476528	PrimaryExpression	1		9476044	1					
ANR	9476529	Argument	p + 1		9476044	1					
ANR	9476530	AdditiveExpression	p + 1		9476044	0		+			
ANR	9476531	Identifier	p		9476044	0					
ANR	9476532	PrimaryExpression	1		9476044	1					
ANR	9476533	Argument	skip		9476044	2					
ANR	9476534	Identifier	skip		9476044	0					
ANR	9476535	Argument	( crypt_state * ) & ss -> cstate		9476044	3					
ANR	9476536	CastExpression	( crypt_state * ) & ss -> cstate		9476044	0					
ANR	9476537	CastTarget	crypt_state *		9476044	0					
ANR	9476538	UnaryOperationExpression	& ss -> cstate		9476044	1					
ANR	9476539	UnaryOperator	&		9476044	0					
ANR	9476540	PtrMemberAccess	ss -> cstate		9476044	1					
ANR	9476541	Identifier	ss		9476044	0					
ANR	9476542	Identifier	cstate		9476044	1					
ANR	9476543	ExpressionStatement	count -= skip	202:8:6135:6148	9476044	1	True				
ANR	9476544	AssignmentExpression	count -= skip		9476044	0		-=			
ANR	9476545	Identifier	count		9476044	0					
ANR	9476546	Identifier	skip		9476044	1					
ANR	9476547	ExpressionStatement	"gs_type1_decrypt ( q + 1 , p + 1 + skip , count , ( crypt_state * ) & ss -> cstate )"	203:8:6158:6257	9476044	2	True				
ANR	9476548	CallExpression	"gs_type1_decrypt ( q + 1 , p + 1 + skip , count , ( crypt_state * ) & ss -> cstate )"		9476044	0					
ANR	9476549	Callee	gs_type1_decrypt		9476044	0					
ANR	9476550	Identifier	gs_type1_decrypt		9476044	0					
ANR	9476551	ArgumentList	q + 1		9476044	1					
ANR	9476552	Argument	q + 1		9476044	0					
ANR	9476553	AdditiveExpression	q + 1		9476044	0		+			
ANR	9476554	Identifier	q		9476044	0					
ANR	9476555	PrimaryExpression	1		9476044	1					
ANR	9476556	Argument	p + 1 + skip		9476044	1					
ANR	9476557	AdditiveExpression	p + 1 + skip		9476044	0		+			
ANR	9476558	Identifier	p		9476044	0					
ANR	9476559	AdditiveExpression	1 + skip		9476044	1		+			
ANR	9476560	PrimaryExpression	1		9476044	0					
ANR	9476561	Identifier	skip		9476044	1					
ANR	9476562	Argument	count		9476044	2					
ANR	9476563	Identifier	count		9476044	0					
ANR	9476564	Argument	( crypt_state * ) & ss -> cstate		9476044	3					
ANR	9476565	CastExpression	( crypt_state * ) & ss -> cstate		9476044	0					
ANR	9476566	CastTarget	crypt_state *		9476044	0					
ANR	9476567	UnaryOperationExpression	& ss -> cstate		9476044	1					
ANR	9476568	UnaryOperator	&		9476044	0					
ANR	9476569	PtrMemberAccess	ss -> cstate		9476044	1					
ANR	9476570	Identifier	ss		9476044	0					
ANR	9476571	Identifier	cstate		9476044	1					
ANR	9476572	ExpressionStatement	ss -> skip = 0	205:8:6267:6279	9476044	3	True				
ANR	9476573	AssignmentExpression	ss -> skip = 0		9476044	0		=			
ANR	9476574	PtrMemberAccess	ss -> skip		9476044	0					
ANR	9476575	Identifier	ss		9476044	0					
ANR	9476576	Identifier	skip		9476044	1					
ANR	9476577	PrimaryExpression	0		9476044	1					
ANR	9476578	ExpressionStatement	pw -> ptr = q + count	207:4:6291:6310	9476044	14	True				
ANR	9476579	AssignmentExpression	pw -> ptr = q + count		9476044	0		=			
ANR	9476580	PtrMemberAccess	pw -> ptr		9476044	0					
ANR	9476581	Identifier	pw		9476044	0					
ANR	9476582	Identifier	ptr		9476044	1					
ANR	9476583	AdditiveExpression	q + count		9476044	1		+			
ANR	9476584	Identifier	q		9476044	0					
ANR	9476585	Identifier	count		9476044	1					
ANR	9476586	ReturnStatement	return status ;	208:4:6316:6329	9476044	15	True				
ANR	9476587	Identifier	status		9476044	0					
ANR	9476588	ReturnType	static int		9476044	1					
ANR	9476589	Identifier	s_exD_process		9476044	2					
ANR	9476590	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		9476044	3					
ANR	9476591	Parameter	stream_state * st	93:14:2393:2409	9476044	0	True				
ANR	9476592	ParameterType	stream_state *		9476044	0					
ANR	9476593	Identifier	st		9476044	1					
ANR	9476594	Parameter	stream_cursor_read * pr	93:33:2412:2434	9476044	1	True				
ANR	9476595	ParameterType	stream_cursor_read *		9476044	0					
ANR	9476596	Identifier	pr		9476044	1					
ANR	9476597	Parameter	stream_cursor_write * pw	94:14:2451:2474	9476044	2	True				
ANR	9476598	ParameterType	stream_cursor_write *		9476044	0					
ANR	9476599	Identifier	pw		9476044	1					
ANR	9476600	Parameter	bool last	94:40:2477:2485	9476044	3	True				
ANR	9476601	ParameterType	bool		9476044	0					
ANR	9476602	Identifier	last		9476044	1					
ANR	9476603	CFGEntryNode	ENTRY		9476044		True				
ANR	9476604	CFGExitNode	EXIT		9476044		True				
ANR	9476605	Symbol	* decoder		9476044						
ANR	9476606	Symbol	& ss -> cstate		9476044						
ANR	9476607	Symbol	pr		9476044						
ANR	9476608	Symbol	* ss		9476044						
ANR	9476609	Symbol	pw		9476044						
ANR	9476610	Symbol	pr -> limit		9476044						
ANR	9476611	Symbol	ss -> is_leading_space		9476044						
ANR	9476612	Symbol	& ss -> odd		9476044						
ANR	9476613	Symbol	hex_ignore_leading_whitespace		9476044						
ANR	9476614	Symbol	pr -> ptr		9476044						
ANR	9476615	Symbol	pw -> ptr		9476044						
ANR	9476616	Symbol	ss -> pfb_state		9476044						
ANR	9476617	Symbol	* * i		9476044						
ANR	9476618	Symbol	last		9476044						
ANR	9476619	Symbol	s_hex_process		9476044						
ANR	9476620	Symbol	r . limit		9476044						
ANR	9476621	Symbol	count		9476044						
ANR	9476622	Symbol	* pr		9476044						
ANR	9476623	Symbol	decoder		9476044						
ANR	9476624	Symbol	* pw		9476044						
ANR	9476625	Symbol	ss -> keep_spaces		9476044						
ANR	9476626	Symbol	true		9476044						
ANR	9476627	Symbol	status		9476044						
ANR	9476628	Symbol	wcount		9476044						
ANR	9476629	Symbol	ss -> hex_left		9476044						
ANR	9476630	Symbol	skip		9476044						
ANR	9476631	Symbol	pw -> limit		9476044						
ANR	9476632	Symbol	ss -> skip		9476044						
ANR	9476633	Symbol	min		9476044						
ANR	9476634	Symbol	ss -> binary		9476044						
ANR	9476635	Symbol	hex_break_on_whitespace		9476044						
ANR	9476636	Symbol	* * p		9476044						
ANR	9476637	Symbol	ss		9476044						
ANR	9476638	Symbol	st		9476044						
ANR	9476639	Symbol	c		9476044						
ANR	9476640	Symbol	start		9476044						
ANR	9476641	Symbol	false		9476044						
ANR	9476642	Symbol	i		9476044						
ANR	9476643	Symbol	ctype_space		9476044						
ANR	9476644	Symbol	char_EOL		9476044						
ANR	9476645	Symbol	p		9476044						
ANR	9476646	Symbol	ss -> odd		9476044						
ANR	9476647	Symbol	q		9476044						
ANR	9476648	Symbol	rcount		9476044						
ANR	9476649	Symbol	scan_char_decoder		9476044						
ANR	9476650	Symbol	r		9476044						
ANR	9476651	Symbol	* i		9476044						
ANR	9476652	Symbol	char_CR		9476044						
ANR	9476653	Symbol	r . ptr		9476044						
ANR	9476654	Symbol	& r		9476044						
ANR	9476655	Symbol	* p		9476044						
ANR	9476656	DeclStmt									
ANR	9476657	Decl							const stream_template	const stream_template	s_exD_template
