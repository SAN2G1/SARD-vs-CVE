command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1964903	File	data/converged/CVE-2018-16863_ghostpdl/contrib_pcl3_src_pclscan.c								
ANR	1964904	DeclStmt									
ANR	1964905	Decl							nl_catd	nl_catd	catd
ANR	1964906	Function	message	37:0:1123:1536							
ANR	1964907	FunctionDef	"message (int id , const char * s)"		1964906	0					
ANR	1964908	CompoundStatement		38:0:1166:1536	1964906	0					
ANR	1964909	IfStatement	if ( catd != ( nl_catd ) - 1 )		1964906	0					
ANR	1964910	Condition	catd != ( nl_catd ) - 1	39:6:1174:1192	1964906	0	True				
ANR	1964911	EqualityExpression	catd != ( nl_catd ) - 1		1964906	0		!=			
ANR	1964912	Identifier	catd		1964906	0					
ANR	1964913	CastExpression	( nl_catd ) - 1		1964906	1					
ANR	1964914	CastTarget	nl_catd		1964906	0					
ANR	1964915	UnaryOperationExpression	- 1		1964906	1					
ANR	1964916	UnaryOperator	-		1964906	0					
ANR	1964917	PrimaryExpression	1		1964906	1					
ANR	1964918	ExpressionStatement	"s = catgets ( catd , 1 , id , s )"	39:27:1195:1222	1964906	1	True				
ANR	1964919	AssignmentExpression	"s = catgets ( catd , 1 , id , s )"		1964906	0		=			
ANR	1964920	Identifier	s		1964906	0					
ANR	1964921	CallExpression	"catgets ( catd , 1 , id , s )"		1964906	1					
ANR	1964922	Callee	catgets		1964906	0					
ANR	1964923	Identifier	catgets		1964906	0					
ANR	1964924	ArgumentList	catd		1964906	1					
ANR	1964925	Argument	catd		1964906	0					
ANR	1964926	Identifier	catd		1964906	0					
ANR	1964927	Argument	1		1964906	1					
ANR	1964928	PrimaryExpression	1		1964906	0					
ANR	1964929	Argument	id		1964906	2					
ANR	1964930	Identifier	id		1964906	0					
ANR	1964931	Argument	s		1964906	3					
ANR	1964932	Identifier	s		1964906	0					
ANR	1964933	ExpressionStatement	"fputs ( ""? pclscan: "" , stderr )"	44:2:1450:1478	1964906	1	True				
ANR	1964934	CallExpression	"fputs ( ""? pclscan: "" , stderr )"		1964906	0					
ANR	1964935	Callee	fputs		1964906	0					
ANR	1964936	Identifier	fputs		1964906	0					
ANR	1964937	ArgumentList	"""? pclscan: """		1964906	1					
ANR	1964938	Argument	"""? pclscan: """		1964906	0					
ANR	1964939	PrimaryExpression	"""? pclscan: """		1964906	0					
ANR	1964940	Argument	stderr		1964906	1					
ANR	1964941	Identifier	stderr		1964906	0					
ANR	1964942	ExpressionStatement	"fprintf ( stderr , s )"	45:2:1482:1500	1964906	2	True				
ANR	1964943	CallExpression	"fprintf ( stderr , s )"		1964906	0					
ANR	1964944	Callee	fprintf		1964906	0					
ANR	1964945	Identifier	fprintf		1964906	0					
ANR	1964946	ArgumentList	stderr		1964906	1					
ANR	1964947	Argument	stderr		1964906	0					
ANR	1964948	Identifier	stderr		1964906	0					
ANR	1964949	Argument	s		1964906	1					
ANR	1964950	Identifier	s		1964906	0					
ANR	1964951	ExpressionStatement	"fputc ( '\\n' , stderr )"	46:2:1504:1523	1964906	3	True				
ANR	1964952	CallExpression	"fputc ( '\\n' , stderr )"		1964906	0					
ANR	1964953	Callee	fputc		1964906	0					
ANR	1964954	Identifier	fputc		1964906	0					
ANR	1964955	ArgumentList	'\\n'		1964906	1					
ANR	1964956	Argument	'\\n'		1964906	0					
ANR	1964957	PrimaryExpression	'\\n'		1964906	0					
ANR	1964958	Argument	stderr		1964906	1					
ANR	1964959	Identifier	stderr		1964906	0					
ANR	1964960	ReturnStatement	return ;	48:2:1528:1534	1964906	4	True				
ANR	1964961	ReturnType	static void		1964906	1					
ANR	1964962	Identifier	message		1964906	2					
ANR	1964963	ParameterList	"int id , const char * s"		1964906	3					
ANR	1964964	Parameter	int id	37:20:1143:1148	1964906	0	True				
ANR	1964965	ParameterType	int		1964906	0					
ANR	1964966	Identifier	id		1964906	1					
ANR	1964967	Parameter	const char * s	37:28:1151:1163	1964906	1	True				
ANR	1964968	ParameterType	const char *		1964906	0					
ANR	1964969	Identifier	s		1964906	1					
ANR	1964970	CFGEntryNode	ENTRY		1964906		True				
ANR	1964971	CFGExitNode	EXIT		1964906		True				
ANR	1964972	Symbol	catd		1964906						
ANR	1964973	Symbol	catgets		1964906						
ANR	1964974	Symbol	s		1964906						
ANR	1964975	Symbol	id		1964906						
ANR	1964976	Symbol	stderr		1964906						
ANR	1964977	DeclStmt									
ANR	1964978	Decl							const pcl_Octet	const pcl_Octet	ESC
ANR	1964979	Function	pcl_is_control_code	64:0:1978:2405							
ANR	1964980	FunctionDef	pcl_is_control_code (int c)		1964979	0					
ANR	1964981	CompoundStatement		65:0:2009:2405	1964979	0					
ANR	1964982	ReturnStatement	return c <= ' ' && ( c == '\\0' || c == '\\b' || c == '\\t' || c == '\\n' || c == '\\f' || c == '\\r' || c == x0E || c == x0F || c == x11 || c == x13 || c == ESC || c == ' ' ) ;	66:2:2013:2403	1964979	0	True				
ANR	1964983	AndExpression	c <= ' ' && ( c == '\\0' || c == '\\b' || c == '\\t' || c == '\\n' || c == '\\f' || c == '\\r' || c == x0E || c == x0F || c == x11 || c == x13 || c == ESC || c == ' ' )		1964979	0		&&			
ANR	1964984	RelationalExpression	c <= ' '		1964979	0		<=			
ANR	1964985	Identifier	c		1964979	0					
ANR	1964986	PrimaryExpression	' '		1964979	1					
ANR	1964987	OrExpression	c == '\\0' || c == '\\b' || c == '\\t' || c == '\\n' || c == '\\f' || c == '\\r' || c == x0E || c == x0F || c == x11 || c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1964988	EqualityExpression	c == '\\0'		1964979	0		==			
ANR	1964989	Identifier	c		1964979	0					
ANR	1964990	PrimaryExpression	'\\0'		1964979	1					
ANR	1964991	OrExpression	c == '\\b' || c == '\\t' || c == '\\n' || c == '\\f' || c == '\\r' || c == x0E || c == x0F || c == x11 || c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1964992	EqualityExpression	c == '\\b'		1964979	0		==			
ANR	1964993	Identifier	c		1964979	0					
ANR	1964994	PrimaryExpression	'\\b'		1964979	1					
ANR	1964995	OrExpression	c == '\\t' || c == '\\n' || c == '\\f' || c == '\\r' || c == x0E || c == x0F || c == x11 || c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1964996	EqualityExpression	c == '\\t'		1964979	0		==			
ANR	1964997	Identifier	c		1964979	0					
ANR	1964998	PrimaryExpression	'\\t'		1964979	1					
ANR	1964999	OrExpression	c == '\\n' || c == '\\f' || c == '\\r' || c == x0E || c == x0F || c == x11 || c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1965000	EqualityExpression	c == '\\n'		1964979	0		==			
ANR	1965001	Identifier	c		1964979	0					
ANR	1965002	PrimaryExpression	'\\n'		1964979	1					
ANR	1965003	OrExpression	c == '\\f' || c == '\\r' || c == x0E || c == x0F || c == x11 || c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1965004	EqualityExpression	c == '\\f'		1964979	0		==			
ANR	1965005	Identifier	c		1964979	0					
ANR	1965006	PrimaryExpression	'\\f'		1964979	1					
ANR	1965007	OrExpression	c == '\\r' || c == x0E || c == x0F || c == x11 || c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1965008	EqualityExpression	c == '\\r'		1964979	0		==			
ANR	1965009	Identifier	c		1964979	0					
ANR	1965010	PrimaryExpression	'\\r'		1964979	1					
ANR	1965011	OrExpression	c == x0E || c == x0F || c == x11 || c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1965012	EqualityExpression	c == x0E		1964979	0		==			
ANR	1965013	Identifier	c		1964979	0					
ANR	1965014	Identifier	x0E		1964979	1					
ANR	1965015	OrExpression	c == x0F || c == x11 || c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1965016	EqualityExpression	c == x0F		1964979	0		==			
ANR	1965017	Identifier	c		1964979	0					
ANR	1965018	Identifier	x0F		1964979	1					
ANR	1965019	OrExpression	c == x11 || c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1965020	EqualityExpression	c == x11		1964979	0		==			
ANR	1965021	Identifier	c		1964979	0					
ANR	1965022	Identifier	x11		1964979	1					
ANR	1965023	OrExpression	c == x13 || c == ESC || c == ' '		1964979	1		||			
ANR	1965024	EqualityExpression	c == x13		1964979	0		==			
ANR	1965025	Identifier	c		1964979	0					
ANR	1965026	Identifier	x13		1964979	1					
ANR	1965027	OrExpression	c == ESC || c == ' '		1964979	1		||			
ANR	1965028	EqualityExpression	c == ESC		1964979	0		==			
ANR	1965029	Identifier	c		1964979	0					
ANR	1965030	Identifier	ESC		1964979	1					
ANR	1965031	EqualityExpression	c == ' '		1964979	1		==			
ANR	1965032	Identifier	c		1964979	0					
ANR	1965033	PrimaryExpression	' '		1964979	1					
ANR	1965034	ReturnType	int		1964979	1					
ANR	1965035	Identifier	pcl_is_control_code		1964979	2					
ANR	1965036	ParameterList	int c		1964979	3					
ANR	1965037	Parameter	int c	64:24:2002:2006	1964979	0	True				
ANR	1965038	ParameterType	int		1964979	0					
ANR	1965039	Identifier	c		1964979	1					
ANR	1965040	CFGEntryNode	ENTRY		1964979		True				
ANR	1965041	CFGExitNode	EXIT		1964979		True				
ANR	1965042	Symbol	c		1964979						
ANR	1965043	Symbol	ESC		1964979						
ANR	1965044	Symbol	x11		1964979						
ANR	1965045	Symbol	x13		1964979						
ANR	1965046	Symbol	x0E		1964979						
ANR	1965047	Symbol	x0F		1964979						
ANR	1965048	Function	cmp_strings	81:0:2489:2599							
ANR	1965049	FunctionDef	"cmp_strings (const void * a , const void * b)"		1965048	0					
ANR	1965050	CompoundStatement		82:0:2542:2599	1965048	0					
ANR	1965051	ReturnStatement	"return strncmp ( ( const char * ) a , ( const char * ) b , 3 ) ;"	83:2:2546:2597	1965048	0	True				
ANR	1965052	CallExpression	"strncmp ( ( const char * ) a , ( const char * ) b , 3 )"		1965048	0					
ANR	1965053	Callee	strncmp		1965048	0					
ANR	1965054	Identifier	strncmp		1965048	0					
ANR	1965055	ArgumentList	( const char * ) a		1965048	1					
ANR	1965056	Argument	( const char * ) a		1965048	0					
ANR	1965057	CastExpression	( const char * ) a		1965048	0					
ANR	1965058	CastTarget	const char *		1965048	0					
ANR	1965059	Identifier	a		1965048	1					
ANR	1965060	Argument	( const char * ) b		1965048	1					
ANR	1965061	CastExpression	( const char * ) b		1965048	0					
ANR	1965062	CastTarget	const char *		1965048	0					
ANR	1965063	Identifier	b		1965048	1					
ANR	1965064	Argument	3		1965048	2					
ANR	1965065	PrimaryExpression	3		1965048	0					
ANR	1965066	ReturnType	static int		1965048	1					
ANR	1965067	Identifier	cmp_strings		1965048	2					
ANR	1965068	ParameterList	"const void * a , const void * b"		1965048	3					
ANR	1965069	Parameter	const void * a	81:23:2512:2524	1965048	0	True				
ANR	1965070	ParameterType	const void *		1965048	0					
ANR	1965071	Identifier	a		1965048	1					
ANR	1965072	Parameter	const void * b	81:38:2527:2539	1965048	1	True				
ANR	1965073	ParameterType	const void *		1965048	0					
ANR	1965074	Identifier	b		1965048	1					
ANR	1965075	CFGEntryNode	ENTRY		1965048		True				
ANR	1965076	CFGExitNode	EXIT		1965048		True				
ANR	1965077	Symbol	a		1965048						
ANR	1965078	Symbol	strncmp		1965048						
ANR	1965079	Symbol	b		1965048						
ANR	1965080	Function	default_interpreter	86:0:2602:4347							
ANR	1965081	FunctionDef	"default_interpreter (FILE * in , const pcl_Command * cmd)"		1965080	0					
ANR	1965082	CompoundStatement		87:0:2667:4347	1965080	0					
ANR	1965083	IfStatement	if ( cmd -> kind >= 3 )		1965080	0					
ANR	1965084	Condition	cmd -> kind >= 3	89:6:2751:2764	1965080	0	True				
ANR	1965085	RelationalExpression	cmd -> kind >= 3		1965080	0		>=			
ANR	1965086	PtrMemberAccess	cmd -> kind		1965080	0					
ANR	1965087	Identifier	cmd		1965080	0					
ANR	1965088	Identifier	kind		1965080	1					
ANR	1965089	PrimaryExpression	3		1965080	1					
ANR	1965090	CompoundStatement		3:22:99:99	1965080	1					
ANR	1965091	IfStatement	"if ( strncmp ( ( const char * ) cmd -> chars , ""%-X"" , 3 ) == 0 && cmd -> i == 12345 )"		1965080	0					
ANR	1965092	Condition	"strncmp ( ( const char * ) cmd -> chars , ""%-X"" , 3 ) == 0 && cmd -> i == 12345"	90:8:2777:2843	1965080	0	True				
ANR	1965093	AndExpression	"strncmp ( ( const char * ) cmd -> chars , ""%-X"" , 3 ) == 0 && cmd -> i == 12345"		1965080	0		&&			
ANR	1965094	EqualityExpression	"strncmp ( ( const char * ) cmd -> chars , ""%-X"" , 3 ) == 0"		1965080	0		==			
ANR	1965095	CallExpression	"strncmp ( ( const char * ) cmd -> chars , ""%-X"" , 3 )"		1965080	0					
ANR	1965096	Callee	strncmp		1965080	0					
ANR	1965097	Identifier	strncmp		1965080	0					
ANR	1965098	ArgumentList	( const char * ) cmd -> chars		1965080	1					
ANR	1965099	Argument	( const char * ) cmd -> chars		1965080	0					
ANR	1965100	CastExpression	( const char * ) cmd -> chars		1965080	0					
ANR	1965101	CastTarget	const char *		1965080	0					
ANR	1965102	PtrMemberAccess	cmd -> chars		1965080	1					
ANR	1965103	Identifier	cmd		1965080	0					
ANR	1965104	Identifier	chars		1965080	1					
ANR	1965105	Argument	"""%-X"""		1965080	1					
ANR	1965106	PrimaryExpression	"""%-X"""		1965080	0					
ANR	1965107	Argument	3		1965080	2					
ANR	1965108	PrimaryExpression	3		1965080	0					
ANR	1965109	PrimaryExpression	0		1965080	1					
ANR	1965110	EqualityExpression	cmd -> i == 12345		1965080	1		==			
ANR	1965111	PtrMemberAccess	cmd -> i		1965080	0					
ANR	1965112	Identifier	cmd		1965080	0					
ANR	1965113	Identifier	i		1965080	1					
ANR	1965114	PrimaryExpression	12345		1965080	1					
ANR	1965115	CompoundStatement		6:6:241:246	1965080	1					
ANR	1965116	IdentifierDeclStatement	int c ;	92:6:2909:2914	1965080	0	True				
ANR	1965117	IdentifierDecl	c		1965080	0					
ANR	1965118	IdentifierDeclType	int		1965080	0					
ANR	1965119	Identifier	c		1965080	1					
ANR	1965120	DoStatement	do		1965080	1					
ANR	1965121	CompoundStatement		8:9:258:258	1965080	0					
ANR	1965122	ExpressionStatement	c = fgetc ( in )	95:8:2936:2949	1965080	0	True				
ANR	1965123	AssignmentExpression	c = fgetc ( in )		1965080	0		=			
ANR	1965124	Identifier	c		1965080	0					
ANR	1965125	CallExpression	fgetc ( in )		1965080	1					
ANR	1965126	Callee	fgetc		1965080	0					
ANR	1965127	Identifier	fgetc		1965080	0					
ANR	1965128	ArgumentList	in		1965080	1					
ANR	1965129	Argument	in		1965080	0					
ANR	1965130	Identifier	in		1965080	0					
ANR	1965131	IfStatement	if ( c != '@' )		1965080	1					
ANR	1965132	Condition	c != '@'	96:12:2963:2970	1965080	0	True				
ANR	1965133	EqualityExpression	c != '@'		1965080	0		!=			
ANR	1965134	Identifier	c		1965080	0					
ANR	1965135	PrimaryExpression	'@'		1965080	1					
ANR	1965136	BreakStatement	break ;	96:22:2973:2978	1965080	1	True				
ANR	1965137	DoStatement	do		1965080	2					
ANR	1965138	ExpressionStatement	c = fgetc ( in )	97:11:2991:3004	1965080	0	True				
ANR	1965139	AssignmentExpression	c = fgetc ( in )		1965080	0		=			
ANR	1965140	Identifier	c		1965080	0					
ANR	1965141	CallExpression	fgetc ( in )		1965080	1					
ANR	1965142	Callee	fgetc		1965080	0					
ANR	1965143	Identifier	fgetc		1965080	0					
ANR	1965144	ArgumentList	in		1965080	1					
ANR	1965145	Argument	in		1965080	0					
ANR	1965146	Identifier	in		1965080	0					
ANR	1965147	Condition	c != EOF && c != '\\n'	97:33:3013:3033	1965080	1	True				
ANR	1965148	AndExpression	c != EOF && c != '\\n'		1965080	0		&&			
ANR	1965149	EqualityExpression	c != EOF		1965080	0		!=			
ANR	1965150	Identifier	c		1965080	0					
ANR	1965151	Identifier	EOF		1965080	1					
ANR	1965152	EqualityExpression	c != '\\n'		1965080	1		!=			
ANR	1965153	Identifier	c		1965080	0					
ANR	1965154	PrimaryExpression	'\\n'		1965080	1					
ANR	1965155	Condition	c != EOF	98:15:3052:3059	1965080	1	True				
ANR	1965156	EqualityExpression	c != EOF		1965080	0		!=			
ANR	1965157	Identifier	c		1965080	0					
ANR	1965158	Identifier	EOF		1965080	1					
ANR	1965159	IfStatement	if ( c != EOF )		1965080	2					
ANR	1965160	Condition	c != EOF	99:10:3073:3080	1965080	0	True				
ANR	1965161	EqualityExpression	c != EOF		1965080	0		!=			
ANR	1965162	Identifier	c		1965080	0					
ANR	1965163	Identifier	EOF		1965080	1					
ANR	1965164	ExpressionStatement	"ungetc ( c , in )"	99:20:3083:3096	1965080	1	True				
ANR	1965165	CallExpression	"ungetc ( c , in )"		1965080	0					
ANR	1965166	Callee	ungetc		1965080	0					
ANR	1965167	Identifier	ungetc		1965080	0					
ANR	1965168	ArgumentList	c		1965080	1					
ANR	1965169	Argument	c		1965080	0					
ANR	1965170	Identifier	c		1965080	0					
ANR	1965171	Argument	in		1965080	1					
ANR	1965172	Identifier	in		1965080	0					
ANR	1965173	ElseStatement	else		1965080	0					
ANR	1965174	IfStatement	if ( cmd -> i > 0 )		1965080	0					
ANR	1965175	Condition	cmd -> i > 0	101:13:3117:3126	1965080	0	True				
ANR	1965176	RelationalExpression	cmd -> i > 0		1965080	0		>			
ANR	1965177	PtrMemberAccess	cmd -> i		1965080	0					
ANR	1965178	Identifier	cmd		1965080	0					
ANR	1965179	Identifier	i		1965080	1					
ANR	1965180	PrimaryExpression	0		1965080	1					
ANR	1965181	CompoundStatement		15:25:461:461	1965080	1					
ANR	1965182	Statement	static	102:6:3137:3142	1965080	0	True				
ANR	1965183	Statement	const	102:13:3144:3148	1965080	1	True				
ANR	1965184	Statement	char	102:19:3150:3153	1965080	2	True				
ANR	1965185	Statement	with_args	102:24:3155:3163	1965080	3	True				
ANR	1965186	Statement	[	102:33:3164:3164	1965080	4	True				
ANR	1965187	Statement	]	102:34:3165:3165	1965080	5	True				
ANR	1965188	Statement	[	102:35:3166:3166	1965080	6	True				
ANR	1965189	Statement	4	102:36:3167:3167	1965080	7	True				
ANR	1965190	Statement	]	102:37:3168:3168	1965080	8	True				
ANR	1965191	Statement	=	102:39:3170:3170	1965080	9	True				
ANR	1965192	CompoundStatement		16:41:504:504	1965080	10					
ANR	1965193	Statement	"""&bW"""	104:8:3241:3245	1965080	0	True				
ANR	1965194	Statement	","	104:13:3246:3246	1965080	1	True				
ANR	1965195	Statement	"""&iW"""	105:8:3256:3260	1965080	2	True				
ANR	1965196	Statement	","	105:13:3261:3261	1965080	3	True				
ANR	1965197	Statement	"""&pX"""	106:8:3271:3275	1965080	4	True				
ANR	1965198	Statement	","	106:13:3276:3276	1965080	5	True				
ANR	1965199	Statement	"""(sW"""	107:8:3315:3319	1965080	6	True				
ANR	1965200	Statement	","	107:13:3320:3320	1965080	7	True				
ANR	1965201	Statement	""")sW"""	108:8:3355:3359	1965080	8	True				
ANR	1965202	Statement	","	108:13:3360:3360	1965080	9	True				
ANR	1965203	Statement	"""*bV"""	109:8:3388:3392	1965080	10	True				
ANR	1965204	Statement	","	109:13:3393:3393	1965080	11	True				
ANR	1965205	Statement	"""*bW"""	110:8:3448:3452	1965080	12	True				
ANR	1965206	Statement	","	110:13:3453:3453	1965080	13	True				
ANR	1965207	Statement	"""*dW"""	111:8:3506:3510	1965080	14	True				
ANR	1965208	Statement	","	111:13:3511:3511	1965080	15	True				
ANR	1965209	Statement	"""*gW"""	112:8:3549:3553	1965080	16	True				
ANR	1965210	Statement	","	112:13:3554:3554	1965080	17	True				
ANR	1965211	Statement	"""*oW"""	113:8:3592:3596	1965080	18	True				
ANR	1965212	ExpressionStatement		113:14:3598:3598	1965080	11	True				
ANR	1965213	IfStatement	"if ( bsearch ( cmd -> chars , with_args , sizeof ( with_args ) / sizeof ( with_args [ 0 ] ) , sizeof ( with_args [ 0 ] ) , & cmp_strings ) != NULL )"		1965080	12					
ANR	1965214	Condition	"bsearch ( cmd -> chars , with_args , sizeof ( with_args ) / sizeof ( with_args [ 0 ] ) , sizeof ( with_args [ 0 ] ) , & cmp_strings ) != NULL"	115:10:3611:3744	1965080	0	True				
ANR	1965215	EqualityExpression	"bsearch ( cmd -> chars , with_args , sizeof ( with_args ) / sizeof ( with_args [ 0 ] ) , sizeof ( with_args [ 0 ] ) , & cmp_strings ) != NULL"		1965080	0		!=			
ANR	1965216	CallExpression	"bsearch ( cmd -> chars , with_args , sizeof ( with_args ) / sizeof ( with_args [ 0 ] ) , sizeof ( with_args [ 0 ] ) , & cmp_strings )"		1965080	0					
ANR	1965217	Callee	bsearch		1965080	0					
ANR	1965218	Identifier	bsearch		1965080	0					
ANR	1965219	ArgumentList	cmd -> chars		1965080	1					
ANR	1965220	Argument	cmd -> chars		1965080	0					
ANR	1965221	PtrMemberAccess	cmd -> chars		1965080	0					
ANR	1965222	Identifier	cmd		1965080	0					
ANR	1965223	Identifier	chars		1965080	1					
ANR	1965224	Argument	with_args		1965080	1					
ANR	1965225	Identifier	with_args		1965080	0					
ANR	1965226	Argument	sizeof ( with_args ) / sizeof ( with_args [ 0 ] )		1965080	2					
ANR	1965227	MultiplicativeExpression	sizeof ( with_args ) / sizeof ( with_args [ 0 ] )		1965080	0		/			
ANR	1965228	SizeofExpression	sizeof ( with_args )		1965080	0					
ANR	1965229	Sizeof	sizeof		1965080	0					
ANR	1965230	SizeofOperand	with_args		1965080	1					
ANR	1965231	SizeofExpression	sizeof ( with_args [ 0 ] )		1965080	1					
ANR	1965232	Sizeof	sizeof		1965080	0					
ANR	1965233	ArrayIndexing	with_args [ 0 ]		1965080	1					
ANR	1965234	Identifier	with_args		1965080	0					
ANR	1965235	PrimaryExpression	0		1965080	1					
ANR	1965236	Argument	sizeof ( with_args [ 0 ] )		1965080	3					
ANR	1965237	SizeofExpression	sizeof ( with_args [ 0 ] )		1965080	0					
ANR	1965238	Sizeof	sizeof		1965080	0					
ANR	1965239	ArrayIndexing	with_args [ 0 ]		1965080	1					
ANR	1965240	Identifier	with_args		1965080	0					
ANR	1965241	PrimaryExpression	0		1965080	1					
ANR	1965242	Argument	& cmp_strings		1965080	4					
ANR	1965243	UnaryOperationExpression	& cmp_strings		1965080	0					
ANR	1965244	UnaryOperator	&		1965080	0					
ANR	1965245	Identifier	cmp_strings		1965080	1					
ANR	1965246	Identifier	NULL		1965080	1					
ANR	1965247	CompoundStatement		32:8:1089:1094	1965080	1					
ANR	1965248	IdentifierDeclStatement	int j ;	118:8:3757:3762	1965080	0	True				
ANR	1965249	IdentifierDecl	j		1965080	0					
ANR	1965250	IdentifierDeclType	int		1965080	0					
ANR	1965251	Identifier	j		1965080	1					
ANR	1965252	ExpressionStatement	j = cmd -> i	120:8:3773:3783	1965080	1	True				
ANR	1965253	AssignmentExpression	j = cmd -> i		1965080	0		=			
ANR	1965254	Identifier	j		1965080	0					
ANR	1965255	PtrMemberAccess	cmd -> i		1965080	1					
ANR	1965256	Identifier	cmd		1965080	0					
ANR	1965257	Identifier	i		1965080	1					
ANR	1965258	WhileStatement	while ( j > 0 && fgetc ( in ) != EOF )		1965080	2					
ANR	1965259	Condition	j > 0 && fgetc ( in ) != EOF	121:15:3800:3824	1965080	0	True				
ANR	1965260	AndExpression	j > 0 && fgetc ( in ) != EOF		1965080	0		&&			
ANR	1965261	RelationalExpression	j > 0		1965080	0		>			
ANR	1965262	Identifier	j		1965080	0					
ANR	1965263	PrimaryExpression	0		1965080	1					
ANR	1965264	EqualityExpression	fgetc ( in ) != EOF		1965080	1		!=			
ANR	1965265	CallExpression	fgetc ( in )		1965080	0					
ANR	1965266	Callee	fgetc		1965080	0					
ANR	1965267	Identifier	fgetc		1965080	0					
ANR	1965268	ArgumentList	in		1965080	1					
ANR	1965269	Argument	in		1965080	0					
ANR	1965270	Identifier	in		1965080	0					
ANR	1965271	Identifier	EOF		1965080	1					
ANR	1965272	ExpressionStatement	j --	121:42:3827:3830	1965080	1	True				
ANR	1965273	PostIncDecOperationExpression	j --		1965080	0					
ANR	1965274	Identifier	j		1965080	0					
ANR	1965275	IncDec	--		1965080	1					
ANR	1965276	IfStatement	if ( j > 0 )		1965080	3					
ANR	1965277	Condition	j > 0	122:12:3844:3848	1965080	0	True				
ANR	1965278	RelationalExpression	j > 0		1965080	0		>			
ANR	1965279	Identifier	j		1965080	0					
ANR	1965280	PrimaryExpression	0		1965080	1					
ANR	1965281	CompoundStatement		36:19:1183:1183	1965080	1					
ANR	1965282	ExpressionStatement	"message ( 1 , ""Premature EOF on input."" )"	123:10:3863:3900	1965080	0	True				
ANR	1965283	CallExpression	"message ( 1 , ""Premature EOF on input."" )"		1965080	0					
ANR	1965284	Callee	message		1965080	0					
ANR	1965285	Identifier	message		1965080	0					
ANR	1965286	ArgumentList	1		1965080	1					
ANR	1965287	Argument	1		1965080	0					
ANR	1965288	PrimaryExpression	1		1965080	0					
ANR	1965289	Argument	"""Premature EOF on input."""		1965080	1					
ANR	1965290	PrimaryExpression	"""Premature EOF on input."""		1965080	0					
ANR	1965291	ReturnStatement	return - 1 ;	124:10:3912:3921	1965080	1	True				
ANR	1965292	UnaryOperationExpression	- 1		1965080	0					
ANR	1965293	UnaryOperator	-		1965080	0					
ANR	1965294	PrimaryExpression	1		1965080	1					
ANR	1965295	ElseStatement	else		1965080	0					
ANR	1965296	IfStatement	if ( cmd -> kind == 2 && cmd -> chars [ 0 ] == 'Y' )		1965080	0					
ANR	1965297	Condition	cmd -> kind == 2 && cmd -> chars [ 0 ] == 'Y'	129:11:3962:3999	1965080	0	True				
ANR	1965298	AndExpression	cmd -> kind == 2 && cmd -> chars [ 0 ] == 'Y'		1965080	0		&&			
ANR	1965299	EqualityExpression	cmd -> kind == 2		1965080	0		==			
ANR	1965300	PtrMemberAccess	cmd -> kind		1965080	0					
ANR	1965301	Identifier	cmd		1965080	0					
ANR	1965302	Identifier	kind		1965080	1					
ANR	1965303	PrimaryExpression	2		1965080	1					
ANR	1965304	EqualityExpression	cmd -> chars [ 0 ] == 'Y'		1965080	1		==			
ANR	1965305	ArrayIndexing	cmd -> chars [ 0 ]		1965080	0					
ANR	1965306	PtrMemberAccess	cmd -> chars		1965080	0					
ANR	1965307	Identifier	cmd		1965080	0					
ANR	1965308	Identifier	chars		1965080	1					
ANR	1965309	PrimaryExpression	0		1965080	1					
ANR	1965310	PrimaryExpression	'Y'		1965080	1					
ANR	1965311	CompoundStatement		45:4:1376:1381	1965080	1					
ANR	1965312	IdentifierDeclStatement	int c ;	131:4:4044:4049	1965080	0	True				
ANR	1965313	IdentifierDecl	c		1965080	0					
ANR	1965314	IdentifierDeclType	int		1965080	0					
ANR	1965315	Identifier	c		1965080	1					
ANR	1965316	DoStatement	do		1965080	1					
ANR	1965317	CompoundStatement		48:7:1446:1446	1965080	0					
ANR	1965318	DoStatement	do		1965080	0					
ANR	1965319	ExpressionStatement	c = fgetc ( in )	135:9:4125:4138	1965080	0	True				
ANR	1965320	AssignmentExpression	c = fgetc ( in )		1965080	0		=			
ANR	1965321	Identifier	c		1965080	0					
ANR	1965322	CallExpression	fgetc ( in )		1965080	1					
ANR	1965323	Callee	fgetc		1965080	0					
ANR	1965324	Identifier	fgetc		1965080	0					
ANR	1965325	ArgumentList	in		1965080	1					
ANR	1965326	Argument	in		1965080	0					
ANR	1965327	Identifier	in		1965080	0					
ANR	1965328	Condition	c != EOF && c != ESC	135:31:4147:4166	1965080	1	True				
ANR	1965329	AndExpression	c != EOF && c != ESC		1965080	0		&&			
ANR	1965330	EqualityExpression	c != EOF		1965080	0		!=			
ANR	1965331	Identifier	c		1965080	0					
ANR	1965332	Identifier	EOF		1965080	1					
ANR	1965333	EqualityExpression	c != ESC		1965080	1		!=			
ANR	1965334	Identifier	c		1965080	0					
ANR	1965335	Identifier	ESC		1965080	1					
ANR	1965336	IfStatement	if ( c != EOF )		1965080	1					
ANR	1965337	Condition	c != EOF	136:10:4180:4187	1965080	0	True				
ANR	1965338	EqualityExpression	c != EOF		1965080	0		!=			
ANR	1965339	Identifier	c		1965080	0					
ANR	1965340	Identifier	EOF		1965080	1					
ANR	1965341	ExpressionStatement	c = fgetc ( in )	136:20:4190:4203	1965080	1	True				
ANR	1965342	AssignmentExpression	c = fgetc ( in )		1965080	0		=			
ANR	1965343	Identifier	c		1965080	0					
ANR	1965344	CallExpression	fgetc ( in )		1965080	1					
ANR	1965345	Callee	fgetc		1965080	0					
ANR	1965346	Identifier	fgetc		1965080	0					
ANR	1965347	ArgumentList	in		1965080	1					
ANR	1965348	Argument	in		1965080	0					
ANR	1965349	Identifier	in		1965080	0					
ANR	1965350	Condition	c != EOF && c != 'Z'	137:13:4218:4237	1965080	1	True				
ANR	1965351	AndExpression	c != EOF && c != 'Z'		1965080	0		&&			
ANR	1965352	EqualityExpression	c != EOF		1965080	0		!=			
ANR	1965353	Identifier	c		1965080	0					
ANR	1965354	Identifier	EOF		1965080	1					
ANR	1965355	EqualityExpression	c != 'Z'		1965080	1		!=			
ANR	1965356	Identifier	c		1965080	0					
ANR	1965357	PrimaryExpression	'Z'		1965080	1					
ANR	1965358	IfStatement	if ( c != 'Z' )		1965080	2					
ANR	1965359	Condition	c != 'Z'	139:8:4250:4257	1965080	0	True				
ANR	1965360	EqualityExpression	c != 'Z'		1965080	0		!=			
ANR	1965361	Identifier	c		1965080	0					
ANR	1965362	PrimaryExpression	'Z'		1965080	1					
ANR	1965363	CompoundStatement		53:18:1592:1592	1965080	1					
ANR	1965364	ExpressionStatement	"message ( 1 , ""Premature EOF on input."" )"	140:6:4268:4305	1965080	0	True				
ANR	1965365	CallExpression	"message ( 1 , ""Premature EOF on input."" )"		1965080	0					
ANR	1965366	Callee	message		1965080	0					
ANR	1965367	Identifier	message		1965080	0					
ANR	1965368	ArgumentList	1		1965080	1					
ANR	1965369	Argument	1		1965080	0					
ANR	1965370	PrimaryExpression	1		1965080	0					
ANR	1965371	Argument	"""Premature EOF on input."""		1965080	1					
ANR	1965372	PrimaryExpression	"""Premature EOF on input."""		1965080	0					
ANR	1965373	ReturnStatement	return - 1 ;	141:6:4313:4322	1965080	1	True				
ANR	1965374	UnaryOperationExpression	- 1		1965080	0					
ANR	1965375	UnaryOperator	-		1965080	0					
ANR	1965376	PrimaryExpression	1		1965080	1					
ANR	1965377	ReturnStatement	return 0 ;	145:2:4337:4345	1965080	1	True				
ANR	1965378	PrimaryExpression	0		1965080	0					
ANR	1965379	ReturnType	static int		1965080	1					
ANR	1965380	Identifier	default_interpreter		1965080	2					
ANR	1965381	ParameterList	"FILE * in , const pcl_Command * cmd"		1965080	3					
ANR	1965382	Parameter	FILE * in	86:31:2633:2640	1965080	0	True				
ANR	1965383	ParameterType	FILE *		1965080	0					
ANR	1965384	Identifier	in		1965080	1					
ANR	1965385	Parameter	const pcl_Command * cmd	86:41:2643:2664	1965080	1	True				
ANR	1965386	ParameterType	const pcl_Command *		1965080	0					
ANR	1965387	Identifier	cmd		1965080	1					
ANR	1965388	CFGEntryNode	ENTRY		1965080		True				
ANR	1965389	CFGExitNode	EXIT		1965080		True				
ANR	1965390	Symbol	* cmd -> chars		1965080						
ANR	1965391	Symbol	c		1965080						
ANR	1965392	Symbol	NULL		1965080						
ANR	1965393	Symbol	in		1965080						
ANR	1965394	Symbol	with_args		1965080						
ANR	1965395	Symbol	j		1965080						
ANR	1965396	Symbol	cmd -> kind		1965080						
ANR	1965397	Symbol	* * cmd		1965080						
ANR	1965398	Symbol	strncmp		1965080						
ANR	1965399	Symbol	* with_args		1965080						
ANR	1965400	Symbol	cmd -> chars		1965080						
ANR	1965401	Symbol	ESC		1965080						
ANR	1965402	Symbol	bsearch		1965080						
ANR	1965403	Symbol	cmd -> i		1965080						
ANR	1965404	Symbol	cmd		1965080						
ANR	1965405	Symbol	* cmd		1965080						
ANR	1965406	Symbol	& cmp_strings		1965080						
ANR	1965407	Symbol	EOF		1965080						
ANR	1965408	Symbol	fgetc		1965080						
ANR	1965409	Function	default_handler	150:0:4431:4599							
ANR	1965410	FunctionDef	default_handler (FILE * in)		1965409	0					
ANR	1965411	CompoundStatement		151:0:4468:4599	1965409	0					
ANR	1965412	IdentifierDeclStatement	int c ;	152:2:4472:4477	1965409	0	True				
ANR	1965413	IdentifierDecl	c		1965409	0					
ANR	1965414	IdentifierDeclType	int		1965409	0					
ANR	1965415	Identifier	c		1965409	1					
ANR	1965416	DoStatement	do		1965409	1					
ANR	1965417	CompoundStatement		4:5:16:16	1965409	0					
ANR	1965418	ExpressionStatement	c = fgetc ( in )	155:4:4491:4504	1965409	0	True				
ANR	1965419	AssignmentExpression	c = fgetc ( in )		1965409	0		=			
ANR	1965420	Identifier	c		1965409	0					
ANR	1965421	CallExpression	fgetc ( in )		1965409	1					
ANR	1965422	Callee	fgetc		1965409	0					
ANR	1965423	Identifier	fgetc		1965409	0					
ANR	1965424	ArgumentList	in		1965409	1					
ANR	1965425	Argument	in		1965409	0					
ANR	1965426	Identifier	in		1965409	0					
ANR	1965427	Condition	c != EOF && ! pcl_is_control_code ( c )	156:11:4517:4551	1965409	1	True				
ANR	1965428	AndExpression	c != EOF && ! pcl_is_control_code ( c )		1965409	0		&&			
ANR	1965429	EqualityExpression	c != EOF		1965409	0		!=			
ANR	1965430	Identifier	c		1965409	0					
ANR	1965431	Identifier	EOF		1965409	1					
ANR	1965432	UnaryOperationExpression	! pcl_is_control_code ( c )		1965409	1					
ANR	1965433	UnaryOperator	!		1965409	0					
ANR	1965434	CallExpression	pcl_is_control_code ( c )		1965409	1					
ANR	1965435	Callee	pcl_is_control_code		1965409	0					
ANR	1965436	Identifier	pcl_is_control_code		1965409	0					
ANR	1965437	ArgumentList	c		1965409	1					
ANR	1965438	Argument	c		1965409	0					
ANR	1965439	Identifier	c		1965409	0					
ANR	1965440	IfStatement	if ( c != EOF )		1965409	2					
ANR	1965441	Condition	c != EOF	157:6:4561:4568	1965409	0	True				
ANR	1965442	EqualityExpression	c != EOF		1965409	0		!=			
ANR	1965443	Identifier	c		1965409	0					
ANR	1965444	Identifier	EOF		1965409	1					
ANR	1965445	ExpressionStatement	"ungetc ( c , in )"	157:16:4571:4584	1965409	1	True				
ANR	1965446	CallExpression	"ungetc ( c , in )"		1965409	0					
ANR	1965447	Callee	ungetc		1965409	0					
ANR	1965448	Identifier	ungetc		1965409	0					
ANR	1965449	ArgumentList	c		1965409	1					
ANR	1965450	Argument	c		1965409	0					
ANR	1965451	Identifier	c		1965409	0					
ANR	1965452	Argument	in		1965409	1					
ANR	1965453	Identifier	in		1965409	0					
ANR	1965454	ReturnStatement	return 0 ;	159:2:4589:4597	1965409	3	True				
ANR	1965455	PrimaryExpression	0		1965409	0					
ANR	1965456	ReturnType	static int		1965409	1					
ANR	1965457	Identifier	default_handler		1965409	2					
ANR	1965458	ParameterList	FILE * in		1965409	3					
ANR	1965459	Parameter	FILE * in	150:27:4458:4465	1965409	0	True				
ANR	1965460	ParameterType	FILE *		1965409	0					
ANR	1965461	Identifier	in		1965409	1					
ANR	1965462	CFGEntryNode	ENTRY		1965409		True				
ANR	1965463	CFGExitNode	EXIT		1965409		True				
ANR	1965464	Symbol	c		1965409						
ANR	1965465	Symbol	in		1965409						
ANR	1965466	Symbol	pcl_is_control_code		1965409						
ANR	1965467	Symbol	EOF		1965409						
ANR	1965468	Symbol	fgetc		1965409						
ANR	1965469	Function	pcl_scan	183:0:5521:9798							
ANR	1965470	FunctionDef	"pcl_scan (FILE * in , pcl_CommandInterpreter interpreter , void * idata , pcl_UnknownDataHandler handler , void * hdata)"		1965469	0					
ANR	1965471	CompoundStatement		185:0:5640:9798	1965469	0					
ANR	1965472	IdentifierDeclStatement	"int c , rc = 0 ;"	186:2:5644:5665	1965469	0	True				
ANR	1965473	IdentifierDecl	c		1965469	0					
ANR	1965474	IdentifierDeclType	int		1965469	0					
ANR	1965475	Identifier	c		1965469	1					
ANR	1965476	IdentifierDecl	rc = 0		1965469	1					
ANR	1965477	IdentifierDeclType	int		1965469	0					
ANR	1965478	Identifier	rc		1965469	1					
ANR	1965479	AssignmentExpression	rc = 0		1965469	2		=			
ANR	1965480	Identifier	rc		1965469	0					
ANR	1965481	PrimaryExpression	0		1965469	1					
ANR	1965482	ExpressionStatement	"catd = catopen ( ""pcltools"" , 0 )"	191:2:5704:5733	1965469	1	True				
ANR	1965483	AssignmentExpression	"catd = catopen ( ""pcltools"" , 0 )"		1965469	0		=			
ANR	1965484	Identifier	catd		1965469	0					
ANR	1965485	CallExpression	"catopen ( ""pcltools"" , 0 )"		1965469	1					
ANR	1965486	Callee	catopen		1965469	0					
ANR	1965487	Identifier	catopen		1965469	0					
ANR	1965488	ArgumentList	"""pcltools"""		1965469	1					
ANR	1965489	Argument	"""pcltools"""		1965469	0					
ANR	1965490	PrimaryExpression	"""pcltools"""		1965469	0					
ANR	1965491	Argument	0		1965469	1					
ANR	1965492	PrimaryExpression	0		1965469	0					
ANR	1965493	IfStatement	if ( catd == ( nl_catd ) ( - 1 ) && errno != ENOENT )		1965469	2					
ANR	1965494	Condition	catd == ( nl_catd ) ( - 1 ) && errno != ENOENT	192:6:5741:5780	1965469	0	True				
ANR	1965495	AndExpression	catd == ( nl_catd ) ( - 1 ) && errno != ENOENT		1965469	0		&&			
ANR	1965496	EqualityExpression	catd == ( nl_catd ) ( - 1 )		1965469	0		==			
ANR	1965497	Identifier	catd		1965469	0					
ANR	1965498	CastExpression	( nl_catd ) ( - 1 )		1965469	1					
ANR	1965499	CastTarget	nl_catd		1965469	0					
ANR	1965500	UnaryOperationExpression	- 1		1965469	1					
ANR	1965501	UnaryOperator	-		1965469	0					
ANR	1965502	PrimaryExpression	1		1965469	1					
ANR	1965503	EqualityExpression	errno != ENOENT		1965469	1		!=			
ANR	1965504	Identifier	errno		1965469	0					
ANR	1965505	Identifier	ENOENT		1965469	1					
ANR	1965506	ExpressionStatement	"fprintf ( stderr , ""?-W pclscan: Error trying to open message catalogue: %s.\\n"" , strerror ( errno ) )"	195:4:5893:5999	1965469	1	True				
ANR	1965507	CallExpression	"fprintf ( stderr , ""?-W pclscan: Error trying to open message catalogue: %s.\\n"" , strerror ( errno ) )"		1965469	0					
ANR	1965508	Callee	fprintf		1965469	0					
ANR	1965509	Identifier	fprintf		1965469	0					
ANR	1965510	ArgumentList	stderr		1965469	1					
ANR	1965511	Argument	stderr		1965469	0					
ANR	1965512	Identifier	stderr		1965469	0					
ANR	1965513	Argument	"""?-W pclscan: Error trying to open message catalogue: %s.\\n"""		1965469	1					
ANR	1965514	PrimaryExpression	"""?-W pclscan: Error trying to open message catalogue: %s.\\n"""		1965469	0					
ANR	1965515	Argument	strerror ( errno )		1965469	2					
ANR	1965516	CallExpression	strerror ( errno )		1965469	0					
ANR	1965517	Callee	strerror		1965469	0					
ANR	1965518	Identifier	strerror		1965469	0					
ANR	1965519	ArgumentList	errno		1965469	1					
ANR	1965520	Argument	errno		1965469	0					
ANR	1965521	Identifier	errno		1965469	0					
ANR	1965522	WhileStatement	while ( rc >= 0 && ( c = fgetc ( in ) ) != EOF )		1965469	3					
ANR	1965523	Condition	rc >= 0 && ( c = fgetc ( in ) ) != EOF	200:9:6035:6067	1965469	0	True				
ANR	1965524	AndExpression	rc >= 0 && ( c = fgetc ( in ) ) != EOF		1965469	0		&&			
ANR	1965525	RelationalExpression	rc >= 0		1965469	0		>=			
ANR	1965526	Identifier	rc		1965469	0					
ANR	1965527	PrimaryExpression	0		1965469	1					
ANR	1965528	EqualityExpression	( c = fgetc ( in ) ) != EOF		1965469	1		!=			
ANR	1965529	AssignmentExpression	c = fgetc ( in )		1965469	0		=			
ANR	1965530	Identifier	c		1965469	0					
ANR	1965531	CallExpression	fgetc ( in )		1965469	1					
ANR	1965532	Callee	fgetc		1965469	0					
ANR	1965533	Identifier	fgetc		1965469	0					
ANR	1965534	ArgumentList	in		1965469	1					
ANR	1965535	Argument	in		1965469	0					
ANR	1965536	Identifier	in		1965469	0					
ANR	1965537	Identifier	EOF		1965469	1					
ANR	1965538	CompoundStatement		16:44:429:429	1965469	1					
ANR	1965539	IfStatement	if ( c == ESC )		1965469	0					
ANR	1965540	Condition	c == ESC	201:8:6080:6087	1965469	0	True				
ANR	1965541	EqualityExpression	c == ESC		1965469	0		==			
ANR	1965542	Identifier	c		1965469	0					
ANR	1965543	Identifier	ESC		1965469	1					
ANR	1965544	CompoundStatement		18:6:457:476	1965469	1					
ANR	1965545	IdentifierDeclStatement	pcl_Command command ;	202:6:6098:6117	1965469	0	True				
ANR	1965546	IdentifierDecl	command		1965469	0					
ANR	1965547	IdentifierDeclType	pcl_Command		1965469	0					
ANR	1965548	Identifier	command		1965469	1					
ANR	1965549	IfStatement	if ( ( c = fgetc ( in ) ) == EOF )		1965469	1					
ANR	1965550	Condition	( c = fgetc ( in ) ) == EOF	204:10:6130:6151	1965469	0	True				
ANR	1965551	EqualityExpression	( c = fgetc ( in ) ) == EOF		1965469	0		==			
ANR	1965552	AssignmentExpression	c = fgetc ( in )		1965469	0		=			
ANR	1965553	Identifier	c		1965469	0					
ANR	1965554	CallExpression	fgetc ( in )		1965469	1					
ANR	1965555	Callee	fgetc		1965469	0					
ANR	1965556	Identifier	fgetc		1965469	0					
ANR	1965557	ArgumentList	in		1965469	1					
ANR	1965558	Argument	in		1965469	0					
ANR	1965559	Identifier	in		1965469	0					
ANR	1965560	Identifier	EOF		1965469	1					
ANR	1965561	CompoundStatement		20:34:513:513	1965469	1					
ANR	1965562	ExpressionStatement	rc = - 1	205:8:6164:6171	1965469	0	True				
ANR	1965563	AssignmentExpression	rc = - 1		1965469	0		=			
ANR	1965564	Identifier	rc		1965469	0					
ANR	1965565	UnaryOperationExpression	- 1		1965469	1					
ANR	1965566	UnaryOperator	-		1965469	0					
ANR	1965567	PrimaryExpression	1		1965469	1					
ANR	1965568	ExpressionStatement	"message ( 1 , ""Premature EOF on input."" )"	206:8:6181:6218	1965469	1	True				
ANR	1965569	CallExpression	"message ( 1 , ""Premature EOF on input."" )"		1965469	0					
ANR	1965570	Callee	message		1965469	0					
ANR	1965571	Identifier	message		1965469	0					
ANR	1965572	ArgumentList	1		1965469	1					
ANR	1965573	Argument	1		1965469	0					
ANR	1965574	PrimaryExpression	1		1965469	0					
ANR	1965575	Argument	"""Premature EOF on input."""		1965469	1					
ANR	1965576	PrimaryExpression	"""Premature EOF on input."""		1965469	0					
ANR	1965577	BreakStatement	break ;	207:8:6228:6233	1965469	2	True				
ANR	1965578	ExpressionStatement	command . chars [ 0 ] = c	209:6:6249:6269	1965469	2	True				
ANR	1965579	AssignmentExpression	command . chars [ 0 ] = c		1965469	0		=			
ANR	1965580	ArrayIndexing	command . chars [ 0 ]		1965469	0					
ANR	1965581	MemberAccess	command . chars		1965469	0					
ANR	1965582	Identifier	command		1965469	0					
ANR	1965583	Identifier	chars		1965469	1					
ANR	1965584	PrimaryExpression	0		1965469	1					
ANR	1965585	Identifier	c		1965469	1					
ANR	1965586	IfStatement	if ( 48 <= c && c <= 126 )		1965469	3					
ANR	1965587	Condition	48 <= c && c <= 126	210:10:6281:6299	1965469	0	True				
ANR	1965588	AndExpression	48 <= c && c <= 126		1965469	0		&&			
ANR	1965589	RelationalExpression	48 <= c		1965469	0		<=			
ANR	1965590	PrimaryExpression	48		1965469	0					
ANR	1965591	Identifier	c		1965469	1					
ANR	1965592	RelationalExpression	c <= 126		1965469	1		<=			
ANR	1965593	Identifier	c		1965469	0					
ANR	1965594	PrimaryExpression	126		1965469	1					
ANR	1965595	CompoundStatement		26:31:661:661	1965469	1					
ANR	1965596	ExpressionStatement	command . kind = 2	212:8:6356:6372	1965469	0	True				
ANR	1965597	AssignmentExpression	command . kind = 2		1965469	0		=			
ANR	1965598	MemberAccess	command . kind		1965469	0					
ANR	1965599	Identifier	command		1965469	0					
ANR	1965600	Identifier	kind		1965469	1					
ANR	1965601	PrimaryExpression	2		1965469	1					
ANR	1965602	IfStatement	"if ( interpreter == NULL || ( rc = ( * interpreter ) ( in , & command , idata ) ) > 0 )"		1965469	1					
ANR	1965603	Condition	"interpreter == NULL || ( rc = ( * interpreter ) ( in , & command , idata ) ) > 0"	213:12:6386:6466	1965469	0	True				
ANR	1965604	OrExpression	"interpreter == NULL || ( rc = ( * interpreter ) ( in , & command , idata ) ) > 0"		1965469	0		||			
ANR	1965605	EqualityExpression	interpreter == NULL		1965469	0		==			
ANR	1965606	Identifier	interpreter		1965469	0					
ANR	1965607	Identifier	NULL		1965469	1					
ANR	1965608	RelationalExpression	"( rc = ( * interpreter ) ( in , & command , idata ) ) > 0"		1965469	1		>			
ANR	1965609	AssignmentExpression	"rc = ( * interpreter ) ( in , & command , idata )"		1965469	0		=			
ANR	1965610	Identifier	rc		1965469	0					
ANR	1965611	CallExpression	"( * interpreter ) ( in , & command , idata )"		1965469	1					
ANR	1965612	Callee	* interpreter		1965469	0					
ANR	1965613	UnaryOperationExpression	* interpreter		1965469	0					
ANR	1965614	UnaryOperator	*		1965469	0					
ANR	1965615	Identifier	interpreter		1965469	1					
ANR	1965616	ArgumentList	in		1965469	1					
ANR	1965617	Argument	in		1965469	0					
ANR	1965618	Identifier	in		1965469	0					
ANR	1965619	Argument	& command		1965469	1					
ANR	1965620	UnaryOperationExpression	& command		1965469	0					
ANR	1965621	UnaryOperator	&		1965469	0					
ANR	1965622	Identifier	command		1965469	1					
ANR	1965623	Argument	idata		1965469	2					
ANR	1965624	Identifier	idata		1965469	0					
ANR	1965625	PrimaryExpression	0		1965469	1					
ANR	1965626	ExpressionStatement	"rc = default_interpreter ( in , & command )"	215:10:6479:6517	1965469	1	True				
ANR	1965627	AssignmentExpression	"rc = default_interpreter ( in , & command )"		1965469	0		=			
ANR	1965628	Identifier	rc		1965469	0					
ANR	1965629	CallExpression	"default_interpreter ( in , & command )"		1965469	1					
ANR	1965630	Callee	default_interpreter		1965469	0					
ANR	1965631	Identifier	default_interpreter		1965469	0					
ANR	1965632	ArgumentList	in		1965469	1					
ANR	1965633	Argument	in		1965469	0					
ANR	1965634	Identifier	in		1965469	0					
ANR	1965635	Argument	& command		1965469	1					
ANR	1965636	UnaryOperationExpression	& command		1965469	0					
ANR	1965637	UnaryOperator	&		1965469	0					
ANR	1965638	Identifier	command		1965469	1					
ANR	1965639	ElseStatement	else		1965469	0					
ANR	1965640	CompoundStatement		34:8:907:920	1965469	0					
ANR	1965641	IdentifierDeclStatement	int continued ;	218:8:6548:6561	1965469	0	True				
ANR	1965642	IdentifierDecl	continued		1965469	0					
ANR	1965643	IdentifierDeclType	int		1965469	0					
ANR	1965644	Identifier	continued		1965469	1					
ANR	1965645	IfStatement	if ( ( c = fgetc ( in ) ) == EOF )		1965469	1					
ANR	1965646	Condition	( c = fgetc ( in ) ) == EOF	226:12:6896:6917	1965469	0	True				
ANR	1965647	EqualityExpression	( c = fgetc ( in ) ) == EOF		1965469	0		==			
ANR	1965648	AssignmentExpression	c = fgetc ( in )		1965469	0		=			
ANR	1965649	Identifier	c		1965469	0					
ANR	1965650	CallExpression	fgetc ( in )		1965469	1					
ANR	1965651	Callee	fgetc		1965469	0					
ANR	1965652	Identifier	fgetc		1965469	0					
ANR	1965653	ArgumentList	in		1965469	1					
ANR	1965654	Argument	in		1965469	0					
ANR	1965655	Identifier	in		1965469	0					
ANR	1965656	Identifier	EOF		1965469	1					
ANR	1965657	CompoundStatement		42:36:1279:1279	1965469	1					
ANR	1965658	ExpressionStatement	rc = - 1	227:10:6932:6939	1965469	0	True				
ANR	1965659	AssignmentExpression	rc = - 1		1965469	0		=			
ANR	1965660	Identifier	rc		1965469	0					
ANR	1965661	UnaryOperationExpression	- 1		1965469	1					
ANR	1965662	UnaryOperator	-		1965469	0					
ANR	1965663	PrimaryExpression	1		1965469	1					
ANR	1965664	ExpressionStatement	"message ( 1 , ""Premature EOF on input."" )"	228:10:6951:6988	1965469	1	True				
ANR	1965665	CallExpression	"message ( 1 , ""Premature EOF on input."" )"		1965469	0					
ANR	1965666	Callee	message		1965469	0					
ANR	1965667	Identifier	message		1965469	0					
ANR	1965668	ArgumentList	1		1965469	1					
ANR	1965669	Argument	1		1965469	0					
ANR	1965670	PrimaryExpression	1		1965469	0					
ANR	1965671	Argument	"""Premature EOF on input."""		1965469	1					
ANR	1965672	PrimaryExpression	"""Premature EOF on input."""		1965469	0					
ANR	1965673	BreakStatement	break ;	229:10:7000:7005	1965469	2	True				
ANR	1965674	ExpressionStatement	command . chars [ 1 ] = c	231:8:7025:7045	1965469	2	True				
ANR	1965675	AssignmentExpression	command . chars [ 1 ] = c		1965469	0		=			
ANR	1965676	ArrayIndexing	command . chars [ 1 ]		1965469	0					
ANR	1965677	MemberAccess	command . chars		1965469	0					
ANR	1965678	Identifier	command		1965469	0					
ANR	1965679	Identifier	chars		1965469	1					
ANR	1965680	PrimaryExpression	1		1965469	1					
ANR	1965681	Identifier	c		1965469	1					
ANR	1965682	ExpressionStatement	continued = 0	233:8:7056:7069	1965469	3	True				
ANR	1965683	AssignmentExpression	continued = 0		1965469	0		=			
ANR	1965684	Identifier	continued		1965469	0					
ANR	1965685	PrimaryExpression	0		1965469	1					
ANR	1965686	DoStatement	do		1965469	4					
ANR	1965687	CompoundStatement		50:11:1441:1441	1965469	0					
ANR	1965688	IfStatement	if ( ( c = fgetc ( in ) ) == EOF )		1965469	0					
ANR	1965689	Condition	( c = fgetc ( in ) ) == EOF	236:14:7132:7153	1965469	0	True				
ANR	1965690	EqualityExpression	( c = fgetc ( in ) ) == EOF		1965469	0		==			
ANR	1965691	AssignmentExpression	c = fgetc ( in )		1965469	0		=			
ANR	1965692	Identifier	c		1965469	0					
ANR	1965693	CallExpression	fgetc ( in )		1965469	1					
ANR	1965694	Callee	fgetc		1965469	0					
ANR	1965695	Identifier	fgetc		1965469	0					
ANR	1965696	ArgumentList	in		1965469	1					
ANR	1965697	Argument	in		1965469	0					
ANR	1965698	Identifier	in		1965469	0					
ANR	1965699	Identifier	EOF		1965469	1					
ANR	1965700	CompoundStatement		52:38:1515:1515	1965469	1					
ANR	1965701	ExpressionStatement	rc = - 1	237:12:7170:7177	1965469	0	True				
ANR	1965702	AssignmentExpression	rc = - 1		1965469	0		=			
ANR	1965703	Identifier	rc		1965469	0					
ANR	1965704	UnaryOperationExpression	- 1		1965469	1					
ANR	1965705	UnaryOperator	-		1965469	0					
ANR	1965706	PrimaryExpression	1		1965469	1					
ANR	1965707	ExpressionStatement	"message ( 1 , ""Premature EOF on input."" )"	238:12:7191:7228	1965469	1	True				
ANR	1965708	CallExpression	"message ( 1 , ""Premature EOF on input."" )"		1965469	0					
ANR	1965709	Callee	message		1965469	0					
ANR	1965710	Identifier	message		1965469	0					
ANR	1965711	ArgumentList	1		1965469	1					
ANR	1965712	Argument	1		1965469	0					
ANR	1965713	PrimaryExpression	1		1965469	0					
ANR	1965714	Argument	"""Premature EOF on input."""		1965469	1					
ANR	1965715	PrimaryExpression	"""Premature EOF on input."""		1965469	0					
ANR	1965716	BreakStatement	break ;	239:12:7242:7247	1965469	2	True				
ANR	1965717	IfStatement	if ( c == '+' || c == '-' || '0' <= c && c <= '9' )		1965469	1					
ANR	1965718	Condition	c == '+' || c == '-' || '0' <= c && c <= '9'	241:14:7275:7318	1965469	0	True				
ANR	1965719	OrExpression	c == '+' || c == '-' || '0' <= c && c <= '9'		1965469	0		||			
ANR	1965720	EqualityExpression	c == '+'		1965469	0		==			
ANR	1965721	Identifier	c		1965469	0					
ANR	1965722	PrimaryExpression	'+'		1965469	1					
ANR	1965723	OrExpression	c == '-' || '0' <= c && c <= '9'		1965469	1		||			
ANR	1965724	EqualityExpression	c == '-'		1965469	0		==			
ANR	1965725	Identifier	c		1965469	0					
ANR	1965726	PrimaryExpression	'-'		1965469	1					
ANR	1965727	AndExpression	'0' <= c && c <= '9'		1965469	1		&&			
ANR	1965728	RelationalExpression	'0' <= c		1965469	0		<=			
ANR	1965729	PrimaryExpression	'0'		1965469	0					
ANR	1965730	Identifier	c		1965469	1					
ANR	1965731	RelationalExpression	c <= '9'		1965469	1		<=			
ANR	1965732	Identifier	c		1965469	0					
ANR	1965733	PrimaryExpression	'9'		1965469	1					
ANR	1965734	CompoundStatement		57:60:1680:1680	1965469	1					
ANR	1965735	IfStatement	if ( c == '+' || c == '-' )		1965469	0					
ANR	1965736	Condition	c == '+' || c == '-'	242:16:7339:7358	1965469	0	True				
ANR	1965737	OrExpression	c == '+' || c == '-'		1965469	0		||			
ANR	1965738	EqualityExpression	c == '+'		1965469	0		==			
ANR	1965739	Identifier	c		1965469	0					
ANR	1965740	PrimaryExpression	'+'		1965469	1					
ANR	1965741	EqualityExpression	c == '-'		1965469	1		==			
ANR	1965742	Identifier	c		1965469	0					
ANR	1965743	PrimaryExpression	'-'		1965469	1					
ANR	1965744	ExpressionStatement	command . prefix = c	242:38:7361:7379	1965469	1	True				
ANR	1965745	AssignmentExpression	command . prefix = c		1965469	0		=			
ANR	1965746	MemberAccess	command . prefix		1965469	0					
ANR	1965747	Identifier	command		1965469	0					
ANR	1965748	Identifier	prefix		1965469	1					
ANR	1965749	Identifier	c		1965469	1					
ANR	1965750	ElseStatement	else		1965469	0					
ANR	1965751	ExpressionStatement	command . prefix = ' '	243:17:7398:7418	1965469	0	True				
ANR	1965752	AssignmentExpression	command . prefix = ' '		1965469	0		=			
ANR	1965753	MemberAccess	command . prefix		1965469	0					
ANR	1965754	Identifier	command		1965469	0					
ANR	1965755	Identifier	prefix		1965469	1					
ANR	1965756	PrimaryExpression	' '		1965469	1					
ANR	1965757	ExpressionStatement	"ungetc ( c , in )"	244:12:7432:7445	1965469	1	True				
ANR	1965758	CallExpression	"ungetc ( c , in )"		1965469	0					
ANR	1965759	Callee	ungetc		1965469	0					
ANR	1965760	Identifier	ungetc		1965469	0					
ANR	1965761	ArgumentList	c		1965469	1					
ANR	1965762	Argument	c		1965469	0					
ANR	1965763	Identifier	c		1965469	0					
ANR	1965764	Argument	in		1965469	1					
ANR	1965765	Identifier	in		1965469	0					
ANR	1965766	IfStatement	"if ( fscanf ( in , ""%d"" , & command . i ) != 1 )"		1965469	2					
ANR	1965767	Condition	"fscanf ( in , ""%d"" , & command . i ) != 1"	245:16:7463:7495	1965469	0	True				
ANR	1965768	EqualityExpression	"fscanf ( in , ""%d"" , & command . i ) != 1"		1965469	0		!=			
ANR	1965769	CallExpression	"fscanf ( in , ""%d"" , & command . i )"		1965469	0					
ANR	1965770	Callee	fscanf		1965469	0					
ANR	1965771	Identifier	fscanf		1965469	0					
ANR	1965772	ArgumentList	in		1965469	1					
ANR	1965773	Argument	in		1965469	0					
ANR	1965774	Identifier	in		1965469	0					
ANR	1965775	Argument	"""%d"""		1965469	1					
ANR	1965776	PrimaryExpression	"""%d"""		1965469	0					
ANR	1965777	Argument	& command . i		1965469	2					
ANR	1965778	UnaryOperationExpression	& command . i		1965469	0					
ANR	1965779	UnaryOperator	&		1965469	0					
ANR	1965780	MemberAccess	command . i		1965469	1					
ANR	1965781	Identifier	command		1965469	0					
ANR	1965782	Identifier	i		1965469	1					
ANR	1965783	PrimaryExpression	1		1965469	1					
ANR	1965784	CompoundStatement		61:51:1857:1857	1965469	1					
ANR	1965785	ExpressionStatement	rc = - 1	246:14:7514:7521	1965469	0	True				
ANR	1965786	AssignmentExpression	rc = - 1		1965469	0		=			
ANR	1965787	Identifier	rc		1965469	0					
ANR	1965788	UnaryOperationExpression	- 1		1965469	1					
ANR	1965789	UnaryOperator	-		1965469	0					
ANR	1965790	PrimaryExpression	1		1965469	1					
ANR	1965791	ExpressionStatement	"message ( 2 , ""Syntax error in value field."" )"	247:14:7537:7579	1965469	1	True				
ANR	1965792	CallExpression	"message ( 2 , ""Syntax error in value field."" )"		1965469	0					
ANR	1965793	Callee	message		1965469	0					
ANR	1965794	Identifier	message		1965469	0					
ANR	1965795	ArgumentList	2		1965469	1					
ANR	1965796	Argument	2		1965469	0					
ANR	1965797	PrimaryExpression	2		1965469	0					
ANR	1965798	Argument	"""Syntax error in value field."""		1965469	1					
ANR	1965799	PrimaryExpression	"""Syntax error in value field."""		1965469	0					
ANR	1965800	BreakStatement	break ;	248:14:7595:7600	1965469	2	True				
ANR	1965801	IfStatement	if ( ( c = fgetc ( in ) ) == EOF )		1965469	3					
ANR	1965802	Condition	( c = fgetc ( in ) ) == EOF	252:16:7666:7687	1965469	0	True				
ANR	1965803	EqualityExpression	( c = fgetc ( in ) ) == EOF		1965469	0		==			
ANR	1965804	AssignmentExpression	c = fgetc ( in )		1965469	0		=			
ANR	1965805	Identifier	c		1965469	0					
ANR	1965806	CallExpression	fgetc ( in )		1965469	1					
ANR	1965807	Callee	fgetc		1965469	0					
ANR	1965808	Identifier	fgetc		1965469	0					
ANR	1965809	ArgumentList	in		1965469	1					
ANR	1965810	Argument	in		1965469	0					
ANR	1965811	Identifier	in		1965469	0					
ANR	1965812	Identifier	EOF		1965469	1					
ANR	1965813	CompoundStatement		68:40:2049:2049	1965469	1					
ANR	1965814	ExpressionStatement	rc = - 1	253:14:7706:7713	1965469	0	True				
ANR	1965815	AssignmentExpression	rc = - 1		1965469	0		=			
ANR	1965816	Identifier	rc		1965469	0					
ANR	1965817	UnaryOperationExpression	- 1		1965469	1					
ANR	1965818	UnaryOperator	-		1965469	0					
ANR	1965819	PrimaryExpression	1		1965469	1					
ANR	1965820	ExpressionStatement	"message ( 1 , ""Premature EOF on input."" )"	254:14:7729:7766	1965469	1	True				
ANR	1965821	CallExpression	"message ( 1 , ""Premature EOF on input."" )"		1965469	0					
ANR	1965822	Callee	message		1965469	0					
ANR	1965823	Identifier	message		1965469	0					
ANR	1965824	ArgumentList	1		1965469	1					
ANR	1965825	Argument	1		1965469	0					
ANR	1965826	PrimaryExpression	1		1965469	0					
ANR	1965827	Argument	"""Premature EOF on input."""		1965469	1					
ANR	1965828	PrimaryExpression	"""Premature EOF on input."""		1965469	0					
ANR	1965829	BreakStatement	break ;	255:14:7782:7787	1965469	2	True				
ANR	1965830	ExpressionStatement	command . scale = 0	257:12:7815:7832	1965469	4	True				
ANR	1965831	AssignmentExpression	command . scale = 0		1965469	0		=			
ANR	1965832	MemberAccess	command . scale		1965469	0					
ANR	1965833	Identifier	command		1965469	0					
ANR	1965834	Identifier	scale		1965469	1					
ANR	1965835	PrimaryExpression	0		1965469	1					
ANR	1965836	ExpressionStatement	command . fraction = 0	258:12:7846:7866	1965469	5	True				
ANR	1965837	AssignmentExpression	command . fraction = 0		1965469	0		=			
ANR	1965838	MemberAccess	command . fraction		1965469	0					
ANR	1965839	Identifier	command		1965469	0					
ANR	1965840	Identifier	fraction		1965469	1					
ANR	1965841	PrimaryExpression	0		1965469	1					
ANR	1965842	IfStatement	if ( c == '.' )		1965469	6					
ANR	1965843	Condition	c == '.'	259:16:7884:7891	1965469	0	True				
ANR	1965844	EqualityExpression	c == '.'		1965469	0		==			
ANR	1965845	Identifier	c		1965469	0					
ANR	1965846	PrimaryExpression	'.'		1965469	1					
ANR	1965847	CompoundStatement		75:26:2253:2253	1965469	1					
ANR	1965848	ExpressionStatement	command . scale = 1	260:14:7910:7927	1965469	0	True				
ANR	1965849	AssignmentExpression	command . scale = 1		1965469	0		=			
ANR	1965850	MemberAccess	command . scale		1965469	0					
ANR	1965851	Identifier	command		1965469	0					
ANR	1965852	Identifier	scale		1965469	1					
ANR	1965853	PrimaryExpression	1		1965469	1					
ANR	1965854	WhileStatement	while ( ( c = fgetc ( in ) ) != EOF && '0' <= c && c <= '9' )		1965469	1					
ANR	1965855	Condition	( c = fgetc ( in ) ) != EOF && '0' <= c && c <= '9'	261:21:7950:7995	1965469	0	True				
ANR	1965856	AndExpression	( c = fgetc ( in ) ) != EOF && '0' <= c && c <= '9'		1965469	0		&&			
ANR	1965857	EqualityExpression	( c = fgetc ( in ) ) != EOF		1965469	0		!=			
ANR	1965858	AssignmentExpression	c = fgetc ( in )		1965469	0		=			
ANR	1965859	Identifier	c		1965469	0					
ANR	1965860	CallExpression	fgetc ( in )		1965469	1					
ANR	1965861	Callee	fgetc		1965469	0					
ANR	1965862	Identifier	fgetc		1965469	0					
ANR	1965863	ArgumentList	in		1965469	1					
ANR	1965864	Argument	in		1965469	0					
ANR	1965865	Identifier	in		1965469	0					
ANR	1965866	Identifier	EOF		1965469	1					
ANR	1965867	AndExpression	'0' <= c && c <= '9'		1965469	1		&&			
ANR	1965868	RelationalExpression	'0' <= c		1965469	0		<=			
ANR	1965869	PrimaryExpression	'0'		1965469	0					
ANR	1965870	Identifier	c		1965469	1					
ANR	1965871	RelationalExpression	c <= '9'		1965469	1		<=			
ANR	1965872	Identifier	c		1965469	0					
ANR	1965873	PrimaryExpression	'9'		1965469	1					
ANR	1965874	CompoundStatement		77:69:2357:2357	1965469	1					
ANR	1965875	ExpressionStatement	command . fraction = command . fraction * 10 + ( c - '0' )	262:16:8016:8066	1965469	0	True				
ANR	1965876	AssignmentExpression	command . fraction = command . fraction * 10 + ( c - '0' )		1965469	0		=			
ANR	1965877	MemberAccess	command . fraction		1965469	0					
ANR	1965878	Identifier	command		1965469	0					
ANR	1965879	Identifier	fraction		1965469	1					
ANR	1965880	AdditiveExpression	command . fraction * 10 + ( c - '0' )		1965469	1		+			
ANR	1965881	MultiplicativeExpression	command . fraction * 10		1965469	0		*			
ANR	1965882	MemberAccess	command . fraction		1965469	0					
ANR	1965883	Identifier	command		1965469	0					
ANR	1965884	Identifier	fraction		1965469	1					
ANR	1965885	PrimaryExpression	10		1965469	1					
ANR	1965886	AdditiveExpression	c - '0'		1965469	1		-			
ANR	1965887	Identifier	c		1965469	0					
ANR	1965888	PrimaryExpression	'0'		1965469	1					
ANR	1965889	ExpressionStatement	command . scale *= 10	263:16:8084:8103	1965469	1	True				
ANR	1965890	AssignmentExpression	command . scale *= 10		1965469	0		*=			
ANR	1965891	MemberAccess	command . scale		1965469	0					
ANR	1965892	Identifier	command		1965469	0					
ANR	1965893	Identifier	scale		1965469	1					
ANR	1965894	PrimaryExpression	10		1965469	1					
ANR	1965895	IfStatement	if ( c == EOF )		1965469	2					
ANR	1965896	Condition	c == EOF	265:18:8139:8146	1965469	0	True				
ANR	1965897	EqualityExpression	c == EOF		1965469	0		==			
ANR	1965898	Identifier	c		1965469	0					
ANR	1965899	Identifier	EOF		1965469	1					
ANR	1965900	CompoundStatement		81:28:2508:2508	1965469	1					
ANR	1965901	ExpressionStatement	rc = - 1	266:16:8167:8174	1965469	0	True				
ANR	1965902	AssignmentExpression	rc = - 1		1965469	0		=			
ANR	1965903	Identifier	rc		1965469	0					
ANR	1965904	UnaryOperationExpression	- 1		1965469	1					
ANR	1965905	UnaryOperator	-		1965469	0					
ANR	1965906	PrimaryExpression	1		1965469	1					
ANR	1965907	ExpressionStatement	"message ( 1 , ""Premature EOF on input."" )"	267:16:8192:8229	1965469	1	True				
ANR	1965908	CallExpression	"message ( 1 , ""Premature EOF on input."" )"		1965469	0					
ANR	1965909	Callee	message		1965469	0					
ANR	1965910	Identifier	message		1965469	0					
ANR	1965911	ArgumentList	1		1965469	1					
ANR	1965912	Argument	1		1965469	0					
ANR	1965913	PrimaryExpression	1		1965469	0					
ANR	1965914	Argument	"""Premature EOF on input."""		1965469	1					
ANR	1965915	PrimaryExpression	"""Premature EOF on input."""		1965469	0					
ANR	1965916	BreakStatement	break ;	268:16:8247:8252	1965469	2	True				
ANR	1965917	IfStatement	if ( command . prefix == '-' )		1965469	3					
ANR	1965918	Condition	command . prefix == '-'	270:18:8288:8308	1965469	0	True				
ANR	1965919	EqualityExpression	command . prefix == '-'		1965469	0		==			
ANR	1965920	MemberAccess	command . prefix		1965469	0					
ANR	1965921	Identifier	command		1965469	0					
ANR	1965922	Identifier	prefix		1965469	1					
ANR	1965923	PrimaryExpression	'-'		1965469	1					
ANR	1965924	ExpressionStatement	command . fraction = - command . fraction	270:41:8311:8347	1965469	1	True				
ANR	1965925	AssignmentExpression	command . fraction = - command . fraction		1965469	0		=			
ANR	1965926	MemberAccess	command . fraction		1965469	0					
ANR	1965927	Identifier	command		1965469	0					
ANR	1965928	Identifier	fraction		1965469	1					
ANR	1965929	UnaryOperationExpression	- command . fraction		1965469	1					
ANR	1965930	UnaryOperator	-		1965469	0					
ANR	1965931	MemberAccess	command . fraction		1965469	1					
ANR	1965932	Identifier	command		1965469	0					
ANR	1965933	Identifier	fraction		1965469	1					
ANR	1965934	ElseStatement	else		1965469	0					
ANR	1965935	CompoundStatement		89:15:2749:2749	1965469	0					
ANR	1965936	ExpressionStatement	command . prefix = '\\0'	274:12:8404:8425	1965469	0	True				
ANR	1965937	AssignmentExpression	command . prefix = '\\0'		1965469	0		=			
ANR	1965938	MemberAccess	command . prefix		1965469	0					
ANR	1965939	Identifier	command		1965469	0					
ANR	1965940	Identifier	prefix		1965469	1					
ANR	1965941	PrimaryExpression	'\\0'		1965469	1					
ANR	1965942	ExpressionStatement	command . i = 0	275:12:8460:8473	1965469	1	True				
ANR	1965943	AssignmentExpression	command . i = 0		1965469	0		=			
ANR	1965944	MemberAccess	command . i		1965469	0					
ANR	1965945	Identifier	command		1965469	0					
ANR	1965946	Identifier	i		1965469	1					
ANR	1965947	PrimaryExpression	0		1965469	1					
ANR	1965948	IfStatement	if ( 96 <= c && c <= 126 )		1965469	2					
ANR	1965949	Condition	96 <= c && c <= 126	279:14:8534:8552	1965469	0	True				
ANR	1965950	AndExpression	96 <= c && c <= 126		1965469	0		&&			
ANR	1965951	RelationalExpression	96 <= c		1965469	0		<=			
ANR	1965952	PrimaryExpression	96		1965469	0					
ANR	1965953	Identifier	c		1965469	1					
ANR	1965954	RelationalExpression	c <= 126		1965469	1		<=			
ANR	1965955	Identifier	c		1965469	0					
ANR	1965956	PrimaryExpression	126		1965469	1					
ANR	1965957	CompoundStatement		95:35:2914:2914	1965469	1					
ANR	1965958	ExpressionStatement	command . chars [ 2 ] = c - ( 'a' - 'A' )	281:12:8607:8641	1965469	0	True				
ANR	1965959	AssignmentExpression	command . chars [ 2 ] = c - ( 'a' - 'A' )		1965469	0		=			
ANR	1965960	ArrayIndexing	command . chars [ 2 ]		1965469	0					
ANR	1965961	MemberAccess	command . chars		1965469	0					
ANR	1965962	Identifier	command		1965469	0					
ANR	1965963	Identifier	chars		1965469	1					
ANR	1965964	PrimaryExpression	2		1965469	1					
ANR	1965965	AdditiveExpression	c - ( 'a' - 'A' )		1965469	1		-			
ANR	1965966	Identifier	c		1965469	0					
ANR	1965967	AdditiveExpression	'a' - 'A'		1965469	1		-			
ANR	1965968	PrimaryExpression	'a'		1965469	0					
ANR	1965969	PrimaryExpression	'A'		1965469	1					
ANR	1965970	ExpressionStatement	command . kind = ( continued ? 6 : 4 )	282:12:8655:8687	1965469	1	True				
ANR	1965971	AssignmentExpression	command . kind = ( continued ? 6 : 4 )		1965469	0		=			
ANR	1965972	MemberAccess	command . kind		1965469	0					
ANR	1965973	Identifier	command		1965469	0					
ANR	1965974	Identifier	kind		1965469	1					
ANR	1965975	ConditionalExpression	continued ? 6 : 4		1965469	1					
ANR	1965976	Condition	continued		1965469	0					
ANR	1965977	Identifier	continued		1965469	0					
ANR	1965978	PrimaryExpression	6		1965469	1					
ANR	1965979	PrimaryExpression	4		1965469	2					
ANR	1965980	ExpressionStatement	continued = 1	283:12:8701:8714	1965469	2	True				
ANR	1965981	AssignmentExpression	continued = 1		1965469	0		=			
ANR	1965982	Identifier	continued		1965469	0					
ANR	1965983	PrimaryExpression	1		1965469	1					
ANR	1965984	ElseStatement	else		1965469	0					
ANR	1965985	CompoundStatement		101:15:3102:3102	1965469	0					
ANR	1965986	ExpressionStatement	command . chars [ 2 ] = c	287:12:8828:8848	1965469	0	True				
ANR	1965987	AssignmentExpression	command . chars [ 2 ] = c		1965469	0		=			
ANR	1965988	ArrayIndexing	command . chars [ 2 ]		1965469	0					
ANR	1965989	MemberAccess	command . chars		1965469	0					
ANR	1965990	Identifier	command		1965469	0					
ANR	1965991	Identifier	chars		1965469	1					
ANR	1965992	PrimaryExpression	2		1965469	1					
ANR	1965993	Identifier	c		1965469	1					
ANR	1965994	ExpressionStatement	command . kind = ( continued ? 5 : 3 )	288:12:8862:8894	1965469	1	True				
ANR	1965995	AssignmentExpression	command . kind = ( continued ? 5 : 3 )		1965469	0		=			
ANR	1965996	MemberAccess	command . kind		1965469	0					
ANR	1965997	Identifier	command		1965469	0					
ANR	1965998	Identifier	kind		1965469	1					
ANR	1965999	ConditionalExpression	continued ? 5 : 3		1965469	1					
ANR	1966000	Condition	continued		1965469	0					
ANR	1966001	Identifier	continued		1965469	0					
ANR	1966002	PrimaryExpression	5		1965469	1					
ANR	1966003	PrimaryExpression	3		1965469	2					
ANR	1966004	ExpressionStatement	continued = 0	289:12:8908:8921	1965469	2	True				
ANR	1966005	AssignmentExpression	continued = 0		1965469	0		=			
ANR	1966006	Identifier	continued		1965469	0					
ANR	1966007	PrimaryExpression	0		1965469	1					
ANR	1966008	IfStatement	"if ( interpreter == NULL || ( rc = ( * interpreter ) ( in , & command , idata ) ) > 0 )"		1965469	3					
ANR	1966009	Condition	"interpreter == NULL || ( rc = ( * interpreter ) ( in , & command , idata ) ) > 0"	292:14:8950:9032	1965469	0	True				
ANR	1966010	OrExpression	"interpreter == NULL || ( rc = ( * interpreter ) ( in , & command , idata ) ) > 0"		1965469	0		||			
ANR	1966011	EqualityExpression	interpreter == NULL		1965469	0		==			
ANR	1966012	Identifier	interpreter		1965469	0					
ANR	1966013	Identifier	NULL		1965469	1					
ANR	1966014	RelationalExpression	"( rc = ( * interpreter ) ( in , & command , idata ) ) > 0"		1965469	1		>			
ANR	1966015	AssignmentExpression	"rc = ( * interpreter ) ( in , & command , idata )"		1965469	0		=			
ANR	1966016	Identifier	rc		1965469	0					
ANR	1966017	CallExpression	"( * interpreter ) ( in , & command , idata )"		1965469	1					
ANR	1966018	Callee	* interpreter		1965469	0					
ANR	1966019	UnaryOperationExpression	* interpreter		1965469	0					
ANR	1966020	UnaryOperator	*		1965469	0					
ANR	1966021	Identifier	interpreter		1965469	1					
ANR	1966022	ArgumentList	in		1965469	1					
ANR	1966023	Argument	in		1965469	0					
ANR	1966024	Identifier	in		1965469	0					
ANR	1966025	Argument	& command		1965469	1					
ANR	1966026	UnaryOperationExpression	& command		1965469	0					
ANR	1966027	UnaryOperator	&		1965469	0					
ANR	1966028	Identifier	command		1965469	1					
ANR	1966029	Argument	idata		1965469	2					
ANR	1966030	Identifier	idata		1965469	0					
ANR	1966031	PrimaryExpression	0		1965469	1					
ANR	1966032	ExpressionStatement	"rc = default_interpreter ( in , & command )"	294:12:9047:9085	1965469	1	True				
ANR	1966033	AssignmentExpression	"rc = default_interpreter ( in , & command )"		1965469	0		=			
ANR	1966034	Identifier	rc		1965469	0					
ANR	1966035	CallExpression	"default_interpreter ( in , & command )"		1965469	1					
ANR	1966036	Callee	default_interpreter		1965469	0					
ANR	1966037	Identifier	default_interpreter		1965469	0					
ANR	1966038	ArgumentList	in		1965469	1					
ANR	1966039	Argument	in		1965469	0					
ANR	1966040	Identifier	in		1965469	0					
ANR	1966041	Argument	& command		1965469	1					
ANR	1966042	UnaryOperationExpression	& command		1965469	0					
ANR	1966043	UnaryOperator	&		1965469	0					
ANR	1966044	Identifier	command		1965469	1					
ANR	1966045	Condition	rc == 0 && continued	295:17:9104:9123	1965469	1	True				
ANR	1966046	AndExpression	rc == 0 && continued		1965469	0		&&			
ANR	1966047	EqualityExpression	rc == 0		1965469	0		==			
ANR	1966048	Identifier	rc		1965469	0					
ANR	1966049	PrimaryExpression	0		1965469	1					
ANR	1966050	Identifier	continued		1965469	1					
ANR	1966051	ElseStatement	else		1965469	0					
ANR	1966052	IfStatement	if ( pcl_is_control_code ( c ) )		1965469	0					
ANR	1966053	Condition	pcl_is_control_code ( c )	298:13:9154:9175	1965469	0	True				
ANR	1966054	CallExpression	pcl_is_control_code ( c )		1965469	0					
ANR	1966055	Callee	pcl_is_control_code		1965469	0					
ANR	1966056	Identifier	pcl_is_control_code		1965469	0					
ANR	1966057	ArgumentList	c		1965469	1					
ANR	1966058	Argument	c		1965469	0					
ANR	1966059	Identifier	c		1965469	0					
ANR	1966060	CompoundStatement		115:6:3545:3564	1965469	1					
ANR	1966061	IdentifierDeclStatement	pcl_Command command ;	299:6:9186:9205	1965469	0	True				
ANR	1966062	IdentifierDecl	command		1965469	0					
ANR	1966063	IdentifierDeclType	pcl_Command		1965469	0					
ANR	1966064	Identifier	command		1965469	1					
ANR	1966065	ExpressionStatement	command . chars [ 0 ] = c	301:6:9214:9234	1965469	1	True				
ANR	1966066	AssignmentExpression	command . chars [ 0 ] = c		1965469	0		=			
ANR	1966067	ArrayIndexing	command . chars [ 0 ]		1965469	0					
ANR	1966068	MemberAccess	command . chars		1965469	0					
ANR	1966069	Identifier	command		1965469	0					
ANR	1966070	Identifier	chars		1965469	1					
ANR	1966071	PrimaryExpression	0		1965469	1					
ANR	1966072	Identifier	c		1965469	1					
ANR	1966073	ExpressionStatement	command . kind = 1	302:6:9242:9258	1965469	2	True				
ANR	1966074	AssignmentExpression	command . kind = 1		1965469	0		=			
ANR	1966075	MemberAccess	command . kind		1965469	0					
ANR	1966076	Identifier	command		1965469	0					
ANR	1966077	Identifier	kind		1965469	1					
ANR	1966078	PrimaryExpression	1		1965469	1					
ANR	1966079	ExpressionStatement	command . i = 1	303:6:9266:9279	1965469	3	True				
ANR	1966080	AssignmentExpression	command . i = 1		1965469	0		=			
ANR	1966081	MemberAccess	command . i		1965469	0					
ANR	1966082	Identifier	command		1965469	0					
ANR	1966083	Identifier	i		1965469	1					
ANR	1966084	PrimaryExpression	1		1965469	1					
ANR	1966085	WhileStatement	while ( ( c = fgetc ( in ) ) != EOF && c == command . chars [ 0 ] )		1965469	4					
ANR	1966086	Condition	( c = fgetc ( in ) ) != EOF && c == command . chars [ 0 ]	305:13:9323:9369	1965469	0	True				
ANR	1966087	AndExpression	( c = fgetc ( in ) ) != EOF && c == command . chars [ 0 ]		1965469	0		&&			
ANR	1966088	EqualityExpression	( c = fgetc ( in ) ) != EOF		1965469	0		!=			
ANR	1966089	AssignmentExpression	c = fgetc ( in )		1965469	0		=			
ANR	1966090	Identifier	c		1965469	0					
ANR	1966091	CallExpression	fgetc ( in )		1965469	1					
ANR	1966092	Callee	fgetc		1965469	0					
ANR	1966093	Identifier	fgetc		1965469	0					
ANR	1966094	ArgumentList	in		1965469	1					
ANR	1966095	Argument	in		1965469	0					
ANR	1966096	Identifier	in		1965469	0					
ANR	1966097	Identifier	EOF		1965469	1					
ANR	1966098	EqualityExpression	c == command . chars [ 0 ]		1965469	1		==			
ANR	1966099	Identifier	c		1965469	0					
ANR	1966100	ArrayIndexing	command . chars [ 0 ]		1965469	1					
ANR	1966101	MemberAccess	command . chars		1965469	0					
ANR	1966102	Identifier	command		1965469	0					
ANR	1966103	Identifier	chars		1965469	1					
ANR	1966104	PrimaryExpression	0		1965469	1					
ANR	1966105	ExpressionStatement	command . i ++	305:62:9372:9383	1965469	1	True				
ANR	1966106	PostIncDecOperationExpression	command . i ++		1965469	0					
ANR	1966107	MemberAccess	command . i		1965469	0					
ANR	1966108	Identifier	command		1965469	0					
ANR	1966109	Identifier	i		1965469	1					
ANR	1966110	IncDec	++		1965469	1					
ANR	1966111	IfStatement	if ( c != EOF )		1965469	5					
ANR	1966112	Condition	c != EOF	306:10:9395:9402	1965469	0	True				
ANR	1966113	EqualityExpression	c != EOF		1965469	0		!=			
ANR	1966114	Identifier	c		1965469	0					
ANR	1966115	Identifier	EOF		1965469	1					
ANR	1966116	ExpressionStatement	"ungetc ( c , in )"	306:20:9405:9418	1965469	1	True				
ANR	1966117	CallExpression	"ungetc ( c , in )"		1965469	0					
ANR	1966118	Callee	ungetc		1965469	0					
ANR	1966119	Identifier	ungetc		1965469	0					
ANR	1966120	ArgumentList	c		1965469	1					
ANR	1966121	Argument	c		1965469	0					
ANR	1966122	Identifier	c		1965469	0					
ANR	1966123	Argument	in		1965469	1					
ANR	1966124	Identifier	in		1965469	0					
ANR	1966125	IfStatement	"if ( interpreter == NULL || ( rc = ( * interpreter ) ( in , & command , idata ) ) > 0 )"		1965469	6					
ANR	1966126	Condition	"interpreter == NULL || ( rc = ( * interpreter ) ( in , & command , idata ) ) > 0"	308:10:9431:9509	1965469	0	True				
ANR	1966127	OrExpression	"interpreter == NULL || ( rc = ( * interpreter ) ( in , & command , idata ) ) > 0"		1965469	0		||			
ANR	1966128	EqualityExpression	interpreter == NULL		1965469	0		==			
ANR	1966129	Identifier	interpreter		1965469	0					
ANR	1966130	Identifier	NULL		1965469	1					
ANR	1966131	RelationalExpression	"( rc = ( * interpreter ) ( in , & command , idata ) ) > 0"		1965469	1		>			
ANR	1966132	AssignmentExpression	"rc = ( * interpreter ) ( in , & command , idata )"		1965469	0		=			
ANR	1966133	Identifier	rc		1965469	0					
ANR	1966134	CallExpression	"( * interpreter ) ( in , & command , idata )"		1965469	1					
ANR	1966135	Callee	* interpreter		1965469	0					
ANR	1966136	UnaryOperationExpression	* interpreter		1965469	0					
ANR	1966137	UnaryOperator	*		1965469	0					
ANR	1966138	Identifier	interpreter		1965469	1					
ANR	1966139	ArgumentList	in		1965469	1					
ANR	1966140	Argument	in		1965469	0					
ANR	1966141	Identifier	in		1965469	0					
ANR	1966142	Argument	& command		1965469	1					
ANR	1966143	UnaryOperationExpression	& command		1965469	0					
ANR	1966144	UnaryOperator	&		1965469	0					
ANR	1966145	Identifier	command		1965469	1					
ANR	1966146	Argument	idata		1965469	2					
ANR	1966147	Identifier	idata		1965469	0					
ANR	1966148	PrimaryExpression	0		1965469	1					
ANR	1966149	ExpressionStatement	"rc = default_interpreter ( in , & command )"	310:8:9520:9558	1965469	1	True				
ANR	1966150	AssignmentExpression	"rc = default_interpreter ( in , & command )"		1965469	0		=			
ANR	1966151	Identifier	rc		1965469	0					
ANR	1966152	CallExpression	"default_interpreter ( in , & command )"		1965469	1					
ANR	1966153	Callee	default_interpreter		1965469	0					
ANR	1966154	Identifier	default_interpreter		1965469	0					
ANR	1966155	ArgumentList	in		1965469	1					
ANR	1966156	Argument	in		1965469	0					
ANR	1966157	Identifier	in		1965469	0					
ANR	1966158	Argument	& command		1965469	1					
ANR	1966159	UnaryOperationExpression	& command		1965469	0					
ANR	1966160	UnaryOperator	&		1965469	0					
ANR	1966161	Identifier	command		1965469	1					
ANR	1966162	ElseStatement	else		1965469	0					
ANR	1966163	CompoundStatement		128:9:3934:3934	1965469	0					
ANR	1966164	ExpressionStatement	"ungetc ( c , in )"	313:6:9583:9596	1965469	0	True				
ANR	1966165	CallExpression	"ungetc ( c , in )"		1965469	0					
ANR	1966166	Callee	ungetc		1965469	0					
ANR	1966167	Identifier	ungetc		1965469	0					
ANR	1966168	ArgumentList	c		1965469	1					
ANR	1966169	Argument	c		1965469	0					
ANR	1966170	Identifier	c		1965469	0					
ANR	1966171	Argument	in		1965469	1					
ANR	1966172	Identifier	in		1965469	0					
ANR	1966173	IfStatement	"if ( handler == NULL || ( rc = ( * handler ) ( in , hdata ) ) > 0 )"		1965469	1					
ANR	1966174	Condition	"handler == NULL || ( rc = ( * handler ) ( in , hdata ) ) > 0"	314:10:9608:9658	1965469	0	True				
ANR	1966175	OrExpression	"handler == NULL || ( rc = ( * handler ) ( in , hdata ) ) > 0"		1965469	0		||			
ANR	1966176	EqualityExpression	handler == NULL		1965469	0		==			
ANR	1966177	Identifier	handler		1965469	0					
ANR	1966178	Identifier	NULL		1965469	1					
ANR	1966179	RelationalExpression	"( rc = ( * handler ) ( in , hdata ) ) > 0"		1965469	1		>			
ANR	1966180	AssignmentExpression	"rc = ( * handler ) ( in , hdata )"		1965469	0		=			
ANR	1966181	Identifier	rc		1965469	0					
ANR	1966182	CallExpression	"( * handler ) ( in , hdata )"		1965469	1					
ANR	1966183	Callee	* handler		1965469	0					
ANR	1966184	UnaryOperationExpression	* handler		1965469	0					
ANR	1966185	UnaryOperator	*		1965469	0					
ANR	1966186	Identifier	handler		1965469	1					
ANR	1966187	ArgumentList	in		1965469	1					
ANR	1966188	Argument	in		1965469	0					
ANR	1966189	Identifier	in		1965469	0					
ANR	1966190	Argument	hdata		1965469	1					
ANR	1966191	Identifier	hdata		1965469	0					
ANR	1966192	PrimaryExpression	0		1965469	1					
ANR	1966193	ExpressionStatement	rc = default_handler ( in )	315:8:9669:9693	1965469	1	True				
ANR	1966194	AssignmentExpression	rc = default_handler ( in )		1965469	0		=			
ANR	1966195	Identifier	rc		1965469	0					
ANR	1966196	CallExpression	default_handler ( in )		1965469	1					
ANR	1966197	Callee	default_handler		1965469	0					
ANR	1966198	Identifier	default_handler		1965469	0					
ANR	1966199	ArgumentList	in		1965469	1					
ANR	1966200	Argument	in		1965469	0					
ANR	1966201	Identifier	in		1965469	0					
ANR	1966202	IfStatement	if ( catd != ( nl_catd ) - 1 )		1965469	4					
ANR	1966203	Condition	catd != ( nl_catd ) - 1	320:6:9747:9765	1965469	0	True				
ANR	1966204	EqualityExpression	catd != ( nl_catd ) - 1		1965469	0		!=			
ANR	1966205	Identifier	catd		1965469	0					
ANR	1966206	CastExpression	( nl_catd ) - 1		1965469	1					
ANR	1966207	CastTarget	nl_catd		1965469	0					
ANR	1966208	UnaryOperationExpression	- 1		1965469	1					
ANR	1966209	UnaryOperator	-		1965469	0					
ANR	1966210	PrimaryExpression	1		1965469	1					
ANR	1966211	ExpressionStatement	catclose ( catd )	320:27:9768:9782	1965469	1	True				
ANR	1966212	CallExpression	catclose ( catd )		1965469	0					
ANR	1966213	Callee	catclose		1965469	0					
ANR	1966214	Identifier	catclose		1965469	0					
ANR	1966215	ArgumentList	catd		1965469	1					
ANR	1966216	Argument	catd		1965469	0					
ANR	1966217	Identifier	catd		1965469	0					
ANR	1966218	ReturnStatement	return rc ;	322:2:9787:9796	1965469	5	True				
ANR	1966219	Identifier	rc		1965469	0					
ANR	1966220	ReturnType	int		1965469	1					
ANR	1966221	Identifier	pcl_scan		1965469	2					
ANR	1966222	ParameterList	"FILE * in , pcl_CommandInterpreter interpreter , void * idata , pcl_UnknownDataHandler handler , void * hdata"		1965469	3					
ANR	1966223	Parameter	FILE * in	183:13:5534:5541	1965469	0	True				
ANR	1966224	ParameterType	FILE *		1965469	0					
ANR	1966225	Identifier	in		1965469	1					
ANR	1966226	Parameter	pcl_CommandInterpreter interpreter	183:23:5544:5577	1965469	1	True				
ANR	1966227	ParameterType	pcl_CommandInterpreter		1965469	0					
ANR	1966228	Identifier	interpreter		1965469	1					
ANR	1966229	Parameter	void * idata	183:59:5580:5590	1965469	2	True				
ANR	1966230	ParameterType	void *		1965469	0					
ANR	1966231	Identifier	idata		1965469	1					
ANR	1966232	Parameter	pcl_UnknownDataHandler handler	184:2:5595:5624	1965469	3	True				
ANR	1966233	ParameterType	pcl_UnknownDataHandler		1965469	0					
ANR	1966234	Identifier	handler		1965469	1					
ANR	1966235	Parameter	void * hdata	184:34:5627:5637	1965469	4	True				
ANR	1966236	ParameterType	void *		1965469	0					
ANR	1966237	Identifier	hdata		1965469	1					
ANR	1966238	CFGEntryNode	ENTRY		1965469		True				
ANR	1966239	CFGExitNode	EXIT		1965469		True				
ANR	1966240	Symbol	handler		1965469						
ANR	1966241	Symbol	catopen		1965469						
ANR	1966242	Symbol	command . scale		1965469						
ANR	1966243	Symbol	* interpreter		1965469						
ANR	1966244	Symbol	* command		1965469						
ANR	1966245	Symbol	command . prefix		1965469						
ANR	1966246	Symbol	ESC		1965469						
ANR	1966247	Symbol	default_handler		1965469						
ANR	1966248	Symbol	EOF		1965469						
ANR	1966249	Symbol	& command . i		1965469						
ANR	1966250	Symbol	catd		1965469						
ANR	1966251	Symbol	* command . chars		1965469						
ANR	1966252	Symbol	errno		1965469						
ANR	1966253	Symbol	& command		1965469						
ANR	1966254	Symbol	c		1965469						
ANR	1966255	Symbol	NULL		1965469						
ANR	1966256	Symbol	in		1965469						
ANR	1966257	Symbol	idata		1965469						
ANR	1966258	Symbol	pcl_is_control_code		1965469						
ANR	1966259	Symbol	continued		1965469						
ANR	1966260	Symbol	interpreter		1965469						
ANR	1966261	Symbol	ENOENT		1965469						
ANR	1966262	Symbol	stderr		1965469						
ANR	1966263	Symbol	command . i		1965469						
ANR	1966264	Symbol	command		1965469						
ANR	1966265	Symbol	strerror		1965469						
ANR	1966266	Symbol	command . chars		1965469						
ANR	1966267	Symbol	rc		1965469						
ANR	1966268	Symbol	command . fraction		1965469						
ANR	1966269	Symbol	fscanf		1965469						
ANR	1966270	Symbol	default_interpreter		1965469						
ANR	1966271	Symbol	hdata		1965469						
ANR	1966272	Symbol	fgetc		1965469						
ANR	1966273	Symbol	command . kind		1965469						
ANR	1966274	Symbol	* handler		1965469						
