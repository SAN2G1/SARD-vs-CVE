command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6782431	File	data/converged/CVE-2018-16863_ghostpdl/jpegxr_my_getopt-1.5_my_getopt.c								
ANR	6782432	DeclStmt									
ANR	6782433	Decl							int	int	my_optind
ANR	6782434	Decl							int	int	my_opterr
ANR	6782435	Decl							int	int	my_optopt
ANR	6782436	DeclStmt									
ANR	6782437	Decl							char	char *	my_optarg
ANR	6782438	Function	my_getopt_reset	36:0:1391:1509							
ANR	6782439	FunctionDef	my_getopt_reset ()		6782438	0					
ANR	6782440	CompoundStatement		37:0:1417:1509	6782438	0					
ANR	6782441	ExpressionStatement	my_optind = 1	38:4:1423:1436	6782438	0	True				
ANR	6782442	AssignmentExpression	my_optind = 1		6782438	0		=			
ANR	6782443	Identifier	my_optind		6782438	0					
ANR	6782444	PrimaryExpression	1		6782438	1					
ANR	6782445	ExpressionStatement	my_opterr = 1	39:4:1442:1455	6782438	1	True				
ANR	6782446	AssignmentExpression	my_opterr = 1		6782438	0		=			
ANR	6782447	Identifier	my_opterr		6782438	0					
ANR	6782448	PrimaryExpression	1		6782438	1					
ANR	6782449	ExpressionStatement	my_optopt = 0	40:4:1461:1474	6782438	2	True				
ANR	6782450	AssignmentExpression	my_optopt = 0		6782438	0		=			
ANR	6782451	Identifier	my_optopt		6782438	0					
ANR	6782452	PrimaryExpression	0		6782438	1					
ANR	6782453	ExpressionStatement	my_optarg = 0	41:4:1480:1493	6782438	3	True				
ANR	6782454	AssignmentExpression	my_optarg = 0		6782438	0		=			
ANR	6782455	Identifier	my_optarg		6782438	0					
ANR	6782456	PrimaryExpression	0		6782438	1					
ANR	6782457	ReturnStatement	return 0 ;	42:4:1499:1507	6782438	4	True				
ANR	6782458	PrimaryExpression	0		6782438	0					
ANR	6782459	ReturnType	int		6782438	1					
ANR	6782460	Identifier	my_getopt_reset		6782438	2					
ANR	6782461	ParameterList			6782438	3					
ANR	6782462	CFGEntryNode	ENTRY		6782438		True				
ANR	6782463	CFGExitNode	EXIT		6782438		True				
ANR	6782464	Symbol	my_optind		6782438						
ANR	6782465	Symbol	my_optarg		6782438						
ANR	6782466	Symbol	my_opterr		6782438						
ANR	6782467	Symbol	my_optopt		6782438						
ANR	6782468	Function	my_getopt	49:0:1719:4732							
ANR	6782469	FunctionDef	"my_getopt (int argc , char * argv [ ] , const char * opts)"		6782468	0					
ANR	6782470	CompoundStatement		50:0:1776:4732	6782468	0					
ANR	6782471	Statement	static	51:4:1782:1787	6782468	0	True				
ANR	6782472	IdentifierDeclStatement	int charind = 0 ;	51:11:1789:1802	6782468	1	True				
ANR	6782473	IdentifierDecl	charind = 0		6782468	0					
ANR	6782474	IdentifierDeclType	int		6782468	0					
ANR	6782475	Identifier	charind		6782468	1					
ANR	6782476	AssignmentExpression	charind = 0		6782468	2		=			
ANR	6782477	Identifier	charind		6782468	0					
ANR	6782478	PrimaryExpression	0		6782468	1					
ANR	6782479	IdentifierDeclStatement	const char * s ;	52:4:1808:1821	6782468	2	True				
ANR	6782480	IdentifierDecl	* s		6782468	0					
ANR	6782481	IdentifierDeclType	const char *		6782468	0					
ANR	6782482	Identifier	s		6782468	1					
ANR	6782483	IdentifierDeclStatement	"char mode , colon_mode ;"	53:4:1827:1848	6782468	3	True				
ANR	6782484	IdentifierDecl	mode		6782468	0					
ANR	6782485	IdentifierDeclType	char		6782468	0					
ANR	6782486	Identifier	mode		6782468	1					
ANR	6782487	IdentifierDecl	colon_mode		6782468	1					
ANR	6782488	IdentifierDeclType	char		6782468	0					
ANR	6782489	Identifier	colon_mode		6782468	1					
ANR	6782490	IdentifierDeclStatement	"int off = 0 , opt = - 1 ;"	54:4:1854:1875	6782468	4	True				
ANR	6782491	IdentifierDecl	off = 0		6782468	0					
ANR	6782492	IdentifierDeclType	int		6782468	0					
ANR	6782493	Identifier	off		6782468	1					
ANR	6782494	AssignmentExpression	off = 0		6782468	2		=			
ANR	6782495	Identifier	off		6782468	0					
ANR	6782496	PrimaryExpression	0		6782468	1					
ANR	6782497	IdentifierDecl	opt = - 1		6782468	1					
ANR	6782498	IdentifierDeclType	int		6782468	0					
ANR	6782499	Identifier	opt		6782468	1					
ANR	6782500	AssignmentExpression	opt = - 1		6782468	2		=			
ANR	6782501	Identifier	opt		6782468	0					
ANR	6782502	UnaryOperationExpression	- 1		6782468	1					
ANR	6782503	UnaryOperator	-		6782468	0					
ANR	6782504	PrimaryExpression	1		6782468	1					
ANR	6782505	IfStatement	"if ( getenv ( ""POSIXLY_CORRECT"" ) )"		6782468	5					
ANR	6782506	Condition	"getenv ( ""POSIXLY_CORRECT"" )"	56:7:1885:1909	6782468	0	True				
ANR	6782507	CallExpression	"getenv ( ""POSIXLY_CORRECT"" )"		6782468	0					
ANR	6782508	Callee	getenv		6782468	0					
ANR	6782509	Identifier	getenv		6782468	0					
ANR	6782510	ArgumentList	"""POSIXLY_CORRECT"""		6782468	1					
ANR	6782511	Argument	"""POSIXLY_CORRECT"""		6782468	0					
ANR	6782512	PrimaryExpression	"""POSIXLY_CORRECT"""		6782468	0					
ANR	6782513	ExpressionStatement	colon_mode = mode = '+'	56:34:1912:1935	6782468	1	True				
ANR	6782514	AssignmentExpression	colon_mode = mode = '+'		6782468	0		=			
ANR	6782515	Identifier	colon_mode		6782468	0					
ANR	6782516	AssignmentExpression	mode = '+'		6782468	1		=			
ANR	6782517	Identifier	mode		6782468	0					
ANR	6782518	PrimaryExpression	'+'		6782468	1					
ANR	6782519	ElseStatement	else		6782468	0					
ANR	6782520	CompoundStatement		8:9:169:169	6782468	0					
ANR	6782521	IfStatement	if ( ( colon_mode = * opts ) == ':' )		6782468	0					
ANR	6782522	Condition	( colon_mode = * opts ) == ':'	58:11:1959:1985	6782468	0	True				
ANR	6782523	EqualityExpression	( colon_mode = * opts ) == ':'		6782468	0		==			
ANR	6782524	AssignmentExpression	colon_mode = * opts		6782468	0		=			
ANR	6782525	Identifier	colon_mode		6782468	0					
ANR	6782526	UnaryOperationExpression	* opts		6782468	1					
ANR	6782527	UnaryOperator	*		6782468	0					
ANR	6782528	Identifier	opts		6782468	1					
ANR	6782529	PrimaryExpression	':'		6782468	1					
ANR	6782530	ExpressionStatement	off ++	58:40:1988:1994	6782468	1	True				
ANR	6782531	PostIncDecOperationExpression	off ++		6782468	0					
ANR	6782532	Identifier	off		6782468	0					
ANR	6782533	IncDec	++		6782468	1					
ANR	6782534	IfStatement	if ( ( ( mode = opts [ off ] ) == '+' ) || ( mode == '-' ) )		6782468	1					
ANR	6782535	Condition	( ( mode = opts [ off ] ) == '+' ) || ( mode == '-' )	59:11:2007:2050	6782468	0	True				
ANR	6782536	OrExpression	( ( mode = opts [ off ] ) == '+' ) || ( mode == '-' )		6782468	0		||			
ANR	6782537	EqualityExpression	( mode = opts [ off ] ) == '+'		6782468	0		==			
ANR	6782538	AssignmentExpression	mode = opts [ off ]		6782468	0		=			
ANR	6782539	Identifier	mode		6782468	0					
ANR	6782540	ArrayIndexing	opts [ off ]		6782468	1					
ANR	6782541	Identifier	opts		6782468	0					
ANR	6782542	Identifier	off		6782468	1					
ANR	6782543	PrimaryExpression	'+'		6782468	1					
ANR	6782544	EqualityExpression	mode == '-'		6782468	1		==			
ANR	6782545	Identifier	mode		6782468	0					
ANR	6782546	PrimaryExpression	'-'		6782468	1					
ANR	6782547	CompoundStatement		10:57:276:276	6782468	1					
ANR	6782548	ExpressionStatement	off ++	60:12:2067:2072	6782468	0	True				
ANR	6782549	PostIncDecOperationExpression	off ++		6782468	0					
ANR	6782550	Identifier	off		6782468	0					
ANR	6782551	IncDec	++		6782468	1					
ANR	6782552	IfStatement	if ( ( colon_mode != ':' ) && ( ( colon_mode = opts [ off ] ) == ':' ) )		6782468	1					
ANR	6782553	Condition	( colon_mode != ':' ) && ( ( colon_mode = opts [ off ] ) == ':' )	61:15:2089:2144	6782468	0	True				
ANR	6782554	AndExpression	( colon_mode != ':' ) && ( ( colon_mode = opts [ off ] ) == ':' )		6782468	0		&&			
ANR	6782555	EqualityExpression	colon_mode != ':'		6782468	0		!=			
ANR	6782556	Identifier	colon_mode		6782468	0					
ANR	6782557	PrimaryExpression	':'		6782468	1					
ANR	6782558	EqualityExpression	( colon_mode = opts [ off ] ) == ':'		6782468	1		==			
ANR	6782559	AssignmentExpression	colon_mode = opts [ off ]		6782468	0		=			
ANR	6782560	Identifier	colon_mode		6782468	0					
ANR	6782561	ArrayIndexing	opts [ off ]		6782468	1					
ANR	6782562	Identifier	opts		6782468	0					
ANR	6782563	Identifier	off		6782468	1					
ANR	6782564	PrimaryExpression	':'		6782468	1					
ANR	6782565	ExpressionStatement	off ++	62:16:2163:2169	6782468	1	True				
ANR	6782566	PostIncDecOperationExpression	off ++		6782468	0					
ANR	6782567	Identifier	off		6782468	0					
ANR	6782568	IncDec	++		6782468	1					
ANR	6782569	ExpressionStatement	my_optarg = 0	65:4:2191:2204	6782468	6	True				
ANR	6782570	AssignmentExpression	my_optarg = 0		6782468	0		=			
ANR	6782571	Identifier	my_optarg		6782468	0					
ANR	6782572	PrimaryExpression	0		6782468	1					
ANR	6782573	IfStatement	if ( charind )		6782468	7					
ANR	6782574	Condition	charind	66:7:2213:2219	6782468	0	True				
ANR	6782575	Identifier	charind		6782468	0					
ANR	6782576	CompoundStatement		17:16:445:445	6782468	1					
ANR	6782577	ExpressionStatement	my_optopt = argv [ my_optind ] [ charind ]	67:8:2232:2268	6782468	0	True				
ANR	6782578	AssignmentExpression	my_optopt = argv [ my_optind ] [ charind ]		6782468	0		=			
ANR	6782579	Identifier	my_optopt		6782468	0					
ANR	6782580	ArrayIndexing	argv [ my_optind ] [ charind ]		6782468	1					
ANR	6782581	ArrayIndexing	argv [ my_optind ]		6782468	0					
ANR	6782582	Identifier	argv		6782468	0					
ANR	6782583	Identifier	my_optind		6782468	1					
ANR	6782584	Identifier	charind		6782468	1					
ANR	6782585	ForStatement	for ( s = opts + off ; * s ; s ++ )		6782468	1					
ANR	6782586	ForInit	s = opts + off ;	68:12:2282:2292	6782468	0	True				
ANR	6782587	AssignmentExpression	s = opts + off		6782468	0		=			
ANR	6782588	Identifier	s		6782468	0					
ANR	6782589	AdditiveExpression	opts + off		6782468	1		+			
ANR	6782590	Identifier	opts		6782468	0					
ANR	6782591	Identifier	off		6782468	1					
ANR	6782592	Condition	* s	68:24:2294:2295	6782468	1	True				
ANR	6782593	UnaryOperationExpression	* s		6782468	0					
ANR	6782594	UnaryOperator	*		6782468	0					
ANR	6782595	Identifier	s		6782468	1					
ANR	6782596	PostIncDecOperationExpression	s ++	68:28:2298:2300	6782468	2	True				
ANR	6782597	Identifier	s		6782468	0					
ANR	6782598	IncDec	++		6782468	1					
ANR	6782599	IfStatement	if ( my_optopt == * s )		6782468	3					
ANR	6782600	Condition	my_optopt == * s	68:36:2306:2320	6782468	0	True				
ANR	6782601	EqualityExpression	my_optopt == * s		6782468	0		==			
ANR	6782602	Identifier	my_optopt		6782468	0					
ANR	6782603	UnaryOperationExpression	* s		6782468	1					
ANR	6782604	UnaryOperator	*		6782468	0					
ANR	6782605	Identifier	s		6782468	1					
ANR	6782606	CompoundStatement		19:53:546:546	6782468	1					
ANR	6782607	ExpressionStatement	charind ++	69:12:2337:2346	6782468	0	True				
ANR	6782608	PostIncDecOperationExpression	charind ++		6782468	0					
ANR	6782609	Identifier	charind		6782468	0					
ANR	6782610	IncDec	++		6782468	1					
ANR	6782611	IfStatement	if ( ( * ( ++ s ) == ':' ) || ( ( my_optopt == 'W' ) && ( * s == ';' ) ) )		6782468	1					
ANR	6782612	Condition	( * ( ++ s ) == ':' ) || ( ( my_optopt == 'W' ) && ( * s == ';' ) )	70:15:2363:2416	6782468	0	True				
ANR	6782613	OrExpression	( * ( ++ s ) == ':' ) || ( ( my_optopt == 'W' ) && ( * s == ';' ) )		6782468	0		||			
ANR	6782614	EqualityExpression	* ( ++ s ) == ':'		6782468	0		==			
ANR	6782615	UnaryOperationExpression	* ( ++ s )		6782468	0					
ANR	6782616	UnaryOperator	*		6782468	0					
ANR	6782617	UnaryExpression	++ s		6782468	1					
ANR	6782618	IncDec	++		6782468	0					
ANR	6782619	Identifier	s		6782468	1					
ANR	6782620	PrimaryExpression	':'		6782468	1					
ANR	6782621	AndExpression	( my_optopt == 'W' ) && ( * s == ';' )		6782468	1		&&			
ANR	6782622	EqualityExpression	my_optopt == 'W'		6782468	0		==			
ANR	6782623	Identifier	my_optopt		6782468	0					
ANR	6782624	PrimaryExpression	'W'		6782468	1					
ANR	6782625	EqualityExpression	* s == ';'		6782468	1		==			
ANR	6782626	UnaryOperationExpression	* s		6782468	0					
ANR	6782627	UnaryOperator	*		6782468	0					
ANR	6782628	Identifier	s		6782468	1					
ANR	6782629	PrimaryExpression	';'		6782468	1					
ANR	6782630	CompoundStatement		21:71:642:642	6782468	1					
ANR	6782631	IfStatement	if ( argv [ my_optind ] [ charind ] )		6782468	0					
ANR	6782632	Condition	argv [ my_optind ] [ charind ]	71:19:2440:2463	6782468	0	True				
ANR	6782633	ArrayIndexing	argv [ my_optind ] [ charind ]		6782468	0					
ANR	6782634	ArrayIndexing	argv [ my_optind ]		6782468	0					
ANR	6782635	Identifier	argv		6782468	0					
ANR	6782636	Identifier	my_optind		6782468	1					
ANR	6782637	Identifier	charind		6782468	1					
ANR	6782638	CompoundStatement		22:45:689:689	6782468	1					
ANR	6782639	ExpressionStatement	my_optarg = & ( argv [ my_optind ++ ] [ charind ] )	72:20:2488:2529	6782468	0	True				
ANR	6782640	AssignmentExpression	my_optarg = & ( argv [ my_optind ++ ] [ charind ] )		6782468	0		=			
ANR	6782641	Identifier	my_optarg		6782468	0					
ANR	6782642	UnaryOperationExpression	& ( argv [ my_optind ++ ] [ charind ] )		6782468	1					
ANR	6782643	UnaryOperator	&		6782468	0					
ANR	6782644	ArrayIndexing	argv [ my_optind ++ ] [ charind ]		6782468	1					
ANR	6782645	ArrayIndexing	argv [ my_optind ++ ]		6782468	0					
ANR	6782646	Identifier	argv		6782468	0					
ANR	6782647	PostIncDecOperationExpression	my_optind ++		6782468	1					
ANR	6782648	Identifier	my_optind		6782468	0					
ANR	6782649	IncDec	++		6782468	1					
ANR	6782650	Identifier	charind		6782468	1					
ANR	6782651	ExpressionStatement	charind = 0	73:20:2551:2562	6782468	1	True				
ANR	6782652	AssignmentExpression	charind = 0		6782468	0		=			
ANR	6782653	Identifier	charind		6782468	0					
ANR	6782654	PrimaryExpression	0		6782468	1					
ANR	6782655	ElseStatement	else		6782468	0					
ANR	6782656	IfStatement	if ( * ( ++ s ) != ':' )		6782468	0					
ANR	6782657	Condition	* ( ++ s ) != ':'	74:26:2590:2602	6782468	0	True				
ANR	6782658	EqualityExpression	* ( ++ s ) != ':'		6782468	0		!=			
ANR	6782659	UnaryOperationExpression	* ( ++ s )		6782468	0					
ANR	6782660	UnaryOperator	*		6782468	0					
ANR	6782661	UnaryExpression	++ s		6782468	1					
ANR	6782662	IncDec	++		6782468	0					
ANR	6782663	Identifier	s		6782468	1					
ANR	6782664	PrimaryExpression	':'		6782468	1					
ANR	6782665	CompoundStatement		25:41:828:828	6782468	1					
ANR	6782666	ExpressionStatement	charind = 0	75:20:2627:2638	6782468	0	True				
ANR	6782667	AssignmentExpression	charind = 0		6782468	0		=			
ANR	6782668	Identifier	charind		6782468	0					
ANR	6782669	PrimaryExpression	0		6782468	1					
ANR	6782670	IfStatement	if ( ++ my_optind >= argc )		6782468	1					
ANR	6782671	Condition	++ my_optind >= argc	76:23:2663:2681	6782468	0	True				
ANR	6782672	RelationalExpression	++ my_optind >= argc		6782468	0		>=			
ANR	6782673	UnaryExpression	++ my_optind		6782468	0					
ANR	6782674	IncDec	++		6782468	0					
ANR	6782675	Identifier	my_optind		6782468	1					
ANR	6782676	Identifier	argc		6782468	1					
ANR	6782677	CompoundStatement		27:44:907:907	6782468	1					
ANR	6782678	IfStatement	if ( my_opterr )		6782468	0					
ANR	6782679	Condition	my_opterr	77:27:2713:2721	6782468	0	True				
ANR	6782680	Identifier	my_opterr		6782468	0					
ANR	6782681	ExpressionStatement	"fprintf ( stderr , ""%s: option requires an argument -- %c\\n"" , argv [ 0 ] , my_optopt )"	77:38:2724:2858	6782468	1	True				
ANR	6782682	CallExpression	"fprintf ( stderr , ""%s: option requires an argument -- %c\\n"" , argv [ 0 ] , my_optopt )"		6782468	0					
ANR	6782683	Callee	fprintf		6782468	0					
ANR	6782684	Identifier	fprintf		6782468	0					
ANR	6782685	ArgumentList	stderr		6782468	1					
ANR	6782686	Argument	stderr		6782468	0					
ANR	6782687	Identifier	stderr		6782468	0					
ANR	6782688	Argument	"""%s: option requires an argument -- %c\\n"""		6782468	1					
ANR	6782689	PrimaryExpression	"""%s: option requires an argument -- %c\\n"""		6782468	0					
ANR	6782690	Argument	argv [ 0 ]		6782468	2					
ANR	6782691	ArrayIndexing	argv [ 0 ]		6782468	0					
ANR	6782692	Identifier	argv		6782468	0					
ANR	6782693	PrimaryExpression	0		6782468	1					
ANR	6782694	Argument	my_optopt		6782468	3					
ANR	6782695	Identifier	my_optopt		6782468	0					
ANR	6782696	ExpressionStatement	opt = ( colon_mode == ':' ) ? ':' : '?'	80:24:2884:2921	6782468	1	True				
ANR	6782697	AssignmentExpression	opt = ( colon_mode == ':' ) ? ':' : '?'		6782468	0		=			
ANR	6782698	Identifier	opt		6782468	0					
ANR	6782699	ConditionalExpression	( colon_mode == ':' ) ? ':' : '?'		6782468	1					
ANR	6782700	Condition	colon_mode == ':'		6782468	0					
ANR	6782701	EqualityExpression	colon_mode == ':'		6782468	0		==			
ANR	6782702	Identifier	colon_mode		6782468	0					
ANR	6782703	PrimaryExpression	':'		6782468	1					
ANR	6782704	PrimaryExpression	':'		6782468	1					
ANR	6782705	PrimaryExpression	'?'		6782468	2					
ANR	6782706	GotoStatement	goto my_getopt_ok ;	81:24:2947:2964	6782468	2	True				
ANR	6782707	Identifier	my_getopt_ok		6782468	0					
ANR	6782708	ExpressionStatement	my_optarg = argv [ my_optind ++ ]	83:20:3008:3037	6782468	2	True				
ANR	6782709	AssignmentExpression	my_optarg = argv [ my_optind ++ ]		6782468	0		=			
ANR	6782710	Identifier	my_optarg		6782468	0					
ANR	6782711	ArrayIndexing	argv [ my_optind ++ ]		6782468	1					
ANR	6782712	Identifier	argv		6782468	0					
ANR	6782713	PostIncDecOperationExpression	my_optind ++		6782468	1					
ANR	6782714	Identifier	my_optind		6782468	0					
ANR	6782715	IncDec	++		6782468	1					
ANR	6782716	ExpressionStatement	opt = my_optopt	86:12:3083:3098	6782468	2	True				
ANR	6782717	AssignmentExpression	opt = my_optopt		6782468	0		=			
ANR	6782718	Identifier	opt		6782468	0					
ANR	6782719	Identifier	my_optopt		6782468	1					
ANR	6782720	GotoStatement	goto my_getopt_ok ;	87:12:3112:3129	6782468	3	True				
ANR	6782721	Identifier	my_getopt_ok		6782468	0					
ANR	6782722	IfStatement	if ( my_opterr )		6782468	2					
ANR	6782723	Condition	my_opterr	89:11:3152:3160	6782468	0	True				
ANR	6782724	Identifier	my_opterr		6782468	0					
ANR	6782725	ExpressionStatement	"fprintf ( stderr , ""%s: illegal option -- %c\\n"" , argv [ 0 ] , my_optopt )"	89:22:3163:3252	6782468	1	True				
ANR	6782726	CallExpression	"fprintf ( stderr , ""%s: illegal option -- %c\\n"" , argv [ 0 ] , my_optopt )"		6782468	0					
ANR	6782727	Callee	fprintf		6782468	0					
ANR	6782728	Identifier	fprintf		6782468	0					
ANR	6782729	ArgumentList	stderr		6782468	1					
ANR	6782730	Argument	stderr		6782468	0					
ANR	6782731	Identifier	stderr		6782468	0					
ANR	6782732	Argument	"""%s: illegal option -- %c\\n"""		6782468	1					
ANR	6782733	PrimaryExpression	"""%s: illegal option -- %c\\n"""		6782468	0					
ANR	6782734	Argument	argv [ 0 ]		6782468	2					
ANR	6782735	ArrayIndexing	argv [ 0 ]		6782468	0					
ANR	6782736	Identifier	argv		6782468	0					
ANR	6782737	PrimaryExpression	0		6782468	1					
ANR	6782738	Argument	my_optopt		6782468	3					
ANR	6782739	Identifier	my_optopt		6782468	0					
ANR	6782740	ExpressionStatement	opt = '?'	92:8:3262:3271	6782468	3	True				
ANR	6782741	AssignmentExpression	opt = '?'		6782468	0		=			
ANR	6782742	Identifier	opt		6782468	0					
ANR	6782743	PrimaryExpression	'?'		6782468	1					
ANR	6782744	IfStatement	if ( argv [ my_optind ] [ ++ charind ] == '\\0' )		6782468	4					
ANR	6782745	Condition	argv [ my_optind ] [ ++ charind ] == '\\0'	93:11:3284:3317	6782468	0	True				
ANR	6782746	EqualityExpression	argv [ my_optind ] [ ++ charind ] == '\\0'		6782468	0		==			
ANR	6782747	ArrayIndexing	argv [ my_optind ] [ ++ charind ]		6782468	0					
ANR	6782748	ArrayIndexing	argv [ my_optind ]		6782468	0					
ANR	6782749	Identifier	argv		6782468	0					
ANR	6782750	Identifier	my_optind		6782468	1					
ANR	6782751	UnaryExpression	++ charind		6782468	1					
ANR	6782752	IncDec	++		6782468	0					
ANR	6782753	Identifier	charind		6782468	1					
ANR	6782754	PrimaryExpression	'\\0'		6782468	1					
ANR	6782755	CompoundStatement		44:47:1543:1543	6782468	1					
ANR	6782756	ExpressionStatement	my_optind ++	94:12:3334:3345	6782468	0	True				
ANR	6782757	PostIncDecOperationExpression	my_optind ++		6782468	0					
ANR	6782758	Identifier	my_optind		6782468	0					
ANR	6782759	IncDec	++		6782468	1					
ANR	6782760	ExpressionStatement	charind = 0	95:12:3359:3370	6782468	1	True				
ANR	6782761	AssignmentExpression	charind = 0		6782468	0		=			
ANR	6782762	Identifier	charind		6782468	0					
ANR	6782763	PrimaryExpression	0		6782468	1					
ANR	6782764	Label	my_getopt_ok :	97:0:3382:3394	6782468	5	True				
ANR	6782765	Identifier	my_getopt_ok		6782468	0					
ANR	6782766	IfStatement	if ( charind && ! argv [ my_optind ] [ charind ] )		6782468	6					
ANR	6782767	Condition	charind && ! argv [ my_optind ] [ charind ]	98:11:3407:3443	6782468	0	True				
ANR	6782768	AndExpression	charind && ! argv [ my_optind ] [ charind ]		6782468	0		&&			
ANR	6782769	Identifier	charind		6782468	0					
ANR	6782770	UnaryOperationExpression	! argv [ my_optind ] [ charind ]		6782468	1					
ANR	6782771	UnaryOperator	!		6782468	0					
ANR	6782772	ArrayIndexing	argv [ my_optind ] [ charind ]		6782468	1					
ANR	6782773	ArrayIndexing	argv [ my_optind ]		6782468	0					
ANR	6782774	Identifier	argv		6782468	0					
ANR	6782775	Identifier	my_optind		6782468	1					
ANR	6782776	Identifier	charind		6782468	1					
ANR	6782777	CompoundStatement		49:50:1669:1669	6782468	1					
ANR	6782778	ExpressionStatement	my_optind ++	99:12:3460:3471	6782468	0	True				
ANR	6782779	PostIncDecOperationExpression	my_optind ++		6782468	0					
ANR	6782780	Identifier	my_optind		6782468	0					
ANR	6782781	IncDec	++		6782468	1					
ANR	6782782	ExpressionStatement	charind = 0	100:12:3485:3496	6782468	1	True				
ANR	6782783	AssignmentExpression	charind = 0		6782468	0		=			
ANR	6782784	Identifier	charind		6782468	0					
ANR	6782785	PrimaryExpression	0		6782468	1					
ANR	6782786	ElseStatement	else		6782468	0					
ANR	6782787	IfStatement	if ( ( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) ) )		6782468	0					
ANR	6782788	Condition	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )	102:14:3522:3660	6782468	0	True				
ANR	6782789	OrExpression	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )		6782468	0		||			
ANR	6782790	RelationalExpression	my_optind >= argc		6782468	0		>=			
ANR	6782791	Identifier	my_optind		6782468	0					
ANR	6782792	Identifier	argc		6782468	1					
ANR	6782793	AndExpression	( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		6782468	1		&&			
ANR	6782794	EqualityExpression	argv [ my_optind ] [ 0 ] == '-'		6782468	0		==			
ANR	6782795	ArrayIndexing	argv [ my_optind ] [ 0 ]		6782468	0					
ANR	6782796	ArrayIndexing	argv [ my_optind ]		6782468	0					
ANR	6782797	Identifier	argv		6782468	0					
ANR	6782798	Identifier	my_optind		6782468	1					
ANR	6782799	PrimaryExpression	0		6782468	1					
ANR	6782800	PrimaryExpression	'-'		6782468	1					
ANR	6782801	AndExpression	( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		6782468	1		&&			
ANR	6782802	EqualityExpression	argv [ my_optind ] [ 1 ] == '-'		6782468	0		==			
ANR	6782803	ArrayIndexing	argv [ my_optind ] [ 1 ]		6782468	0					
ANR	6782804	ArrayIndexing	argv [ my_optind ]		6782468	0					
ANR	6782805	Identifier	argv		6782468	0					
ANR	6782806	Identifier	my_optind		6782468	1					
ANR	6782807	PrimaryExpression	1		6782468	1					
ANR	6782808	PrimaryExpression	'-'		6782468	1					
ANR	6782809	EqualityExpression	argv [ my_optind ] [ 2 ] == '\\0'		6782468	1		==			
ANR	6782810	ArrayIndexing	argv [ my_optind ] [ 2 ]		6782468	0					
ANR	6782811	ArrayIndexing	argv [ my_optind ]		6782468	0					
ANR	6782812	Identifier	argv		6782468	0					
ANR	6782813	Identifier	my_optind		6782468	1					
ANR	6782814	PrimaryExpression	2		6782468	1					
ANR	6782815	PrimaryExpression	'\\0'		6782468	1					
ANR	6782816	CompoundStatement		56:39:1886:1886	6782468	1					
ANR	6782817	ExpressionStatement	my_optind ++	106:12:3677:3688	6782468	0	True				
ANR	6782818	PostIncDecOperationExpression	my_optind ++		6782468	0					
ANR	6782819	Identifier	my_optind		6782468	0					
ANR	6782820	IncDec	++		6782468	1					
ANR	6782821	ExpressionStatement	opt = - 1	107:12:3702:3710	6782468	1	True				
ANR	6782822	AssignmentExpression	opt = - 1		6782468	0		=			
ANR	6782823	Identifier	opt		6782468	0					
ANR	6782824	UnaryOperationExpression	- 1		6782468	1					
ANR	6782825	UnaryOperator	-		6782468	0					
ANR	6782826	PrimaryExpression	1		6782468	1					
ANR	6782827	ElseStatement	else		6782468	0					
ANR	6782828	IfStatement	if ( ( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' ) )		6782468	0					
ANR	6782829	Condition	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )	108:14:3726:3792	6782468	0	True				
ANR	6782830	OrExpression	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )		6782468	0		||			
ANR	6782831	EqualityExpression	argv [ my_optind ] [ 0 ] != '-'		6782468	0		!=			
ANR	6782832	ArrayIndexing	argv [ my_optind ] [ 0 ]		6782468	0					
ANR	6782833	ArrayIndexing	argv [ my_optind ]		6782468	0					
ANR	6782834	Identifier	argv		6782468	0					
ANR	6782835	Identifier	my_optind		6782468	1					
ANR	6782836	PrimaryExpression	0		6782468	1					
ANR	6782837	PrimaryExpression	'-'		6782468	1					
ANR	6782838	EqualityExpression	argv [ my_optind ] [ 1 ] == '\\0'		6782468	1		==			
ANR	6782839	ArrayIndexing	argv [ my_optind ] [ 1 ]		6782468	0					
ANR	6782840	ArrayIndexing	argv [ my_optind ]		6782468	0					
ANR	6782841	Identifier	argv		6782468	0					
ANR	6782842	Identifier	my_optind		6782468	1					
ANR	6782843	PrimaryExpression	1		6782468	1					
ANR	6782844	PrimaryExpression	'\\0'		6782468	1					
ANR	6782845	CompoundStatement		62:12:2055:2066	6782468	1					
ANR	6782846	IdentifierDeclStatement	char * tmp ;	110:12:3809:3818	6782468	0	True				
ANR	6782847	IdentifierDecl	* tmp		6782468	0					
ANR	6782848	IdentifierDeclType	char *		6782468	0					
ANR	6782849	Identifier	tmp		6782468	1					
ANR	6782850	IdentifierDeclStatement	"int i , j , k ;"	111:12:3832:3843	6782468	1	True				
ANR	6782851	IdentifierDecl	i		6782468	0					
ANR	6782852	IdentifierDeclType	int		6782468	0					
ANR	6782853	Identifier	i		6782468	1					
ANR	6782854	IdentifierDecl	j		6782468	1					
ANR	6782855	IdentifierDeclType	int		6782468	0					
ANR	6782856	Identifier	j		6782468	1					
ANR	6782857	IdentifierDecl	k		6782468	2					
ANR	6782858	IdentifierDeclType	int		6782468	0					
ANR	6782859	Identifier	k		6782468	1					
ANR	6782860	IfStatement	if ( mode == '+' )		6782468	2					
ANR	6782861	Condition	mode == '+'	113:15:3861:3871	6782468	0	True				
ANR	6782862	EqualityExpression	mode == '+'		6782468	0		==			
ANR	6782863	Identifier	mode		6782468	0					
ANR	6782864	PrimaryExpression	'+'		6782468	1					
ANR	6782865	ExpressionStatement	opt = - 1	113:28:3874:3882	6782468	1	True				
ANR	6782866	AssignmentExpression	opt = - 1		6782468	0		=			
ANR	6782867	Identifier	opt		6782468	0					
ANR	6782868	UnaryOperationExpression	- 1		6782468	1					
ANR	6782869	UnaryOperator	-		6782468	0					
ANR	6782870	PrimaryExpression	1		6782468	1					
ANR	6782871	ElseStatement	else		6782468	0					
ANR	6782872	IfStatement	if ( mode == '-' )		6782468	0					
ANR	6782873	Condition	mode == '-'	114:20:3904:3914	6782468	0	True				
ANR	6782874	EqualityExpression	mode == '-'		6782468	0		==			
ANR	6782875	Identifier	mode		6782468	0					
ANR	6782876	PrimaryExpression	'-'		6782468	1					
ANR	6782877	CompoundStatement		65:33:2140:2140	6782468	1					
ANR	6782878	ExpressionStatement	my_optarg = argv [ my_optind ++ ]	115:16:3935:3964	6782468	0	True				
ANR	6782879	AssignmentExpression	my_optarg = argv [ my_optind ++ ]		6782468	0		=			
ANR	6782880	Identifier	my_optarg		6782468	0					
ANR	6782881	ArrayIndexing	argv [ my_optind ++ ]		6782468	1					
ANR	6782882	Identifier	argv		6782468	0					
ANR	6782883	PostIncDecOperationExpression	my_optind ++		6782468	1					
ANR	6782884	Identifier	my_optind		6782468	0					
ANR	6782885	IncDec	++		6782468	1					
ANR	6782886	ExpressionStatement	charind = 0	116:16:3982:3993	6782468	1	True				
ANR	6782887	AssignmentExpression	charind = 0		6782468	0		=			
ANR	6782888	Identifier	charind		6782468	0					
ANR	6782889	PrimaryExpression	0		6782468	1					
ANR	6782890	ExpressionStatement	opt = 1	117:16:4011:4018	6782468	2	True				
ANR	6782891	AssignmentExpression	opt = 1		6782468	0		=			
ANR	6782892	Identifier	opt		6782468	0					
ANR	6782893	PrimaryExpression	1		6782468	1					
ANR	6782894	ElseStatement	else		6782468	0					
ANR	6782895	CompoundStatement		69:19:2262:2262	6782468	0					
ANR	6782896	ForStatement	for ( i = j = my_optind ; i < argc ; i ++ )		6782468	0					
ANR	6782897	ForInit	i = j = my_optind ;	119:20:4061:4074	6782468	0	True				
ANR	6782898	AssignmentExpression	i = j = my_optind		6782468	0		=			
ANR	6782899	Identifier	i		6782468	0					
ANR	6782900	AssignmentExpression	j = my_optind		6782468	1		=			
ANR	6782901	Identifier	j		6782468	0					
ANR	6782902	Identifier	my_optind		6782468	1					
ANR	6782903	Condition	i < argc	119:35:4076:4081	6782468	1	True				
ANR	6782904	RelationalExpression	i < argc		6782468	0		<			
ANR	6782905	Identifier	i		6782468	0					
ANR	6782906	Identifier	argc		6782468	1					
ANR	6782907	PostIncDecOperationExpression	i ++	119:43:4084:4086	6782468	2	True				
ANR	6782908	Identifier	i		6782468	0					
ANR	6782909	IncDec	++		6782468	1					
ANR	6782910	IfStatement	if ( ( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' ) )		6782468	3					
ANR	6782911	Condition	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )	119:51:4092:4154	6782468	0	True				
ANR	6782912	AndExpression	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )		6782468	0		&&			
ANR	6782913	EqualityExpression	argv [ i ] [ 0 ] == '-'		6782468	0		==			
ANR	6782914	ArrayIndexing	argv [ i ] [ 0 ]		6782468	0					
ANR	6782915	ArrayIndexing	argv [ i ]		6782468	0					
ANR	6782916	Identifier	argv		6782468	0					
ANR	6782917	Identifier	i		6782468	1					
ANR	6782918	PrimaryExpression	0		6782468	1					
ANR	6782919	PrimaryExpression	'-'		6782468	1					
ANR	6782920	EqualityExpression	argv [ i ] [ 1 ] != '\\0'		6782468	1		!=			
ANR	6782921	ArrayIndexing	argv [ i ] [ 1 ]		6782468	0					
ANR	6782922	ArrayIndexing	argv [ i ]		6782468	0					
ANR	6782923	Identifier	argv		6782468	0					
ANR	6782924	Identifier	i		6782468	1					
ANR	6782925	PrimaryExpression	1		6782468	1					
ANR	6782926	PrimaryExpression	'\\0'		6782468	1					
ANR	6782927	CompoundStatement		71:42:2380:2380	6782468	1					
ANR	6782928	ExpressionStatement	my_optind = i	121:24:4183:4194	6782468	0	True				
ANR	6782929	AssignmentExpression	my_optind = i		6782468	0		=			
ANR	6782930	Identifier	my_optind		6782468	0					
ANR	6782931	Identifier	i		6782468	1					
ANR	6782932	ExpressionStatement	"opt = my_getopt ( argc , argv , opts )"	122:24:4220:4251	6782468	1	True				
ANR	6782933	AssignmentExpression	"opt = my_getopt ( argc , argv , opts )"		6782468	0		=			
ANR	6782934	Identifier	opt		6782468	0					
ANR	6782935	CallExpression	"my_getopt ( argc , argv , opts )"		6782468	1					
ANR	6782936	Callee	my_getopt		6782468	0					
ANR	6782937	Identifier	my_getopt		6782468	0					
ANR	6782938	ArgumentList	argc		6782468	1					
ANR	6782939	Argument	argc		6782468	0					
ANR	6782940	Identifier	argc		6782468	0					
ANR	6782941	Argument	argv		6782468	1					
ANR	6782942	Identifier	argv		6782468	0					
ANR	6782943	Argument	opts		6782468	2					
ANR	6782944	Identifier	opts		6782468	0					
ANR	6782945	WhileStatement	while ( i > j )		6782468	2					
ANR	6782946	Condition	i > j	123:30:4283:4287	6782468	0	True				
ANR	6782947	RelationalExpression	i > j		6782468	0		>			
ANR	6782948	Identifier	i		6782468	0					
ANR	6782949	Identifier	j		6782468	1					
ANR	6782950	CompoundStatement		74:37:2513:2513	6782468	1					
ANR	6782951	ExpressionStatement	tmp = argv [ -- i ]	124:28:4320:4333	6782468	0	True				
ANR	6782952	AssignmentExpression	tmp = argv [ -- i ]		6782468	0		=			
ANR	6782953	Identifier	tmp		6782468	0					
ANR	6782954	ArrayIndexing	argv [ -- i ]		6782468	1					
ANR	6782955	Identifier	argv		6782468	0					
ANR	6782956	UnaryExpression	-- i		6782468	1					
ANR	6782957	IncDec	--		6782468	0					
ANR	6782958	Identifier	i		6782468	1					
ANR	6782959	ForStatement	for ( k = i ; k + 1 < my_optind ; k ++ )		6782468	1					
ANR	6782960	ForInit	k = i ;	125:32:4367:4370	6782468	0	True				
ANR	6782961	AssignmentExpression	k = i		6782468	0		=			
ANR	6782962	Identifier	k		6782468	0					
ANR	6782963	Identifier	i		6782468	1					
ANR	6782964	Condition	k + 1 < my_optind	125:37:4372:4384	6782468	1	True				
ANR	6782965	RelationalExpression	k + 1 < my_optind		6782468	0		<			
ANR	6782966	AdditiveExpression	k + 1		6782468	0		+			
ANR	6782967	Identifier	k		6782468	0					
ANR	6782968	PrimaryExpression	1		6782468	1					
ANR	6782969	Identifier	my_optind		6782468	1					
ANR	6782970	PostIncDecOperationExpression	k ++	125:52:4387:4389	6782468	2	True				
ANR	6782971	Identifier	k		6782468	0					
ANR	6782972	IncDec	++		6782468	1					
ANR	6782973	ExpressionStatement	argv [ k ] = argv [ k + 1 ]	125:57:4392:4409	6782468	3	True				
ANR	6782974	AssignmentExpression	argv [ k ] = argv [ k + 1 ]		6782468	0		=			
ANR	6782975	ArrayIndexing	argv [ k ]		6782468	0					
ANR	6782976	Identifier	argv		6782468	0					
ANR	6782977	Identifier	k		6782468	1					
ANR	6782978	ArrayIndexing	argv [ k + 1 ]		6782468	1					
ANR	6782979	Identifier	argv		6782468	0					
ANR	6782980	AdditiveExpression	k + 1		6782468	1		+			
ANR	6782981	Identifier	k		6782468	0					
ANR	6782982	PrimaryExpression	1		6782468	1					
ANR	6782983	ExpressionStatement	argv [ -- my_optind ] = tmp	126:28:4439:4460	6782468	2	True				
ANR	6782984	AssignmentExpression	argv [ -- my_optind ] = tmp		6782468	0		=			
ANR	6782985	ArrayIndexing	argv [ -- my_optind ]		6782468	0					
ANR	6782986	Identifier	argv		6782468	0					
ANR	6782987	UnaryExpression	-- my_optind		6782468	1					
ANR	6782988	IncDec	--		6782468	0					
ANR	6782989	Identifier	my_optind		6782468	1					
ANR	6782990	Identifier	tmp		6782468	1					
ANR	6782991	BreakStatement	break ;	128:24:4512:4517	6782468	3	True				
ANR	6782992	IfStatement	if ( i == argc )		6782468	1					
ANR	6782993	Condition	i == argc	130:19:4556:4564	6782468	0	True				
ANR	6782994	EqualityExpression	i == argc		6782468	0		==			
ANR	6782995	Identifier	i		6782468	0					
ANR	6782996	Identifier	argc		6782468	1					
ANR	6782997	ExpressionStatement	opt = - 1	130:30:4567:4575	6782468	1	True				
ANR	6782998	AssignmentExpression	opt = - 1		6782468	0		=			
ANR	6782999	Identifier	opt		6782468	0					
ANR	6783000	UnaryOperationExpression	- 1		6782468	1					
ANR	6783001	UnaryOperator	-		6782468	0					
ANR	6783002	PrimaryExpression	1		6782468	1					
ANR	6783003	ElseStatement	else		6782468	0					
ANR	6783004	CompoundStatement		83:11:2825:2825	6782468	0					
ANR	6783005	ExpressionStatement	charind ++	133:8:4612:4621	6782468	0	True				
ANR	6783006	PostIncDecOperationExpression	charind ++		6782468	0					
ANR	6783007	Identifier	charind		6782468	0					
ANR	6783008	IncDec	++		6782468	1					
ANR	6783009	ExpressionStatement	"opt = my_getopt ( argc , argv , opts )"	134:8:4631:4664	6782468	1	True				
ANR	6783010	AssignmentExpression	"opt = my_getopt ( argc , argv , opts )"		6782468	0		=			
ANR	6783011	Identifier	opt		6782468	0					
ANR	6783012	CallExpression	"my_getopt ( argc , argv , opts )"		6782468	1					
ANR	6783013	Callee	my_getopt		6782468	0					
ANR	6783014	Identifier	my_getopt		6782468	0					
ANR	6783015	ArgumentList	argc		6782468	1					
ANR	6783016	Argument	argc		6782468	0					
ANR	6783017	Identifier	argc		6782468	0					
ANR	6783018	Argument	argv		6782468	1					
ANR	6783019	Identifier	argv		6782468	0					
ANR	6783020	Argument	opts		6782468	2					
ANR	6783021	Identifier	opts		6782468	0					
ANR	6783022	IfStatement	if ( my_optind > argc )		6782468	8					
ANR	6783023	Condition	my_optind > argc	136:8:4680:4695	6782468	0	True				
ANR	6783024	RelationalExpression	my_optind > argc		6782468	0		>			
ANR	6783025	Identifier	my_optind		6782468	0					
ANR	6783026	Identifier	argc		6782468	1					
ANR	6783027	ExpressionStatement	my_optind = argc	136:26:4698:4714	6782468	1	True				
ANR	6783028	AssignmentExpression	my_optind = argc		6782468	0		=			
ANR	6783029	Identifier	my_optind		6782468	0					
ANR	6783030	Identifier	argc		6782468	1					
ANR	6783031	ReturnStatement	return opt ;	137:4:4720:4730	6782468	9	True				
ANR	6783032	Identifier	opt		6782468	0					
ANR	6783033	ReturnType	int		6782468	1					
ANR	6783034	Identifier	my_getopt		6782468	2					
ANR	6783035	ParameterList	"int argc , char * argv [ ] , const char * opts"		6782468	3					
ANR	6783036	Parameter	int argc	49:14:1733:1740	6782468	0	True				
ANR	6783037	ParameterType	int		6782468	0					
ANR	6783038	Identifier	argc		6782468	1					
ANR	6783039	Parameter	char * argv [ ]	49:24:1743:1755	6782468	1	True				
ANR	6783040	ParameterType	char * [ ]		6782468	0					
ANR	6783041	Identifier	argv		6782468	1					
ANR	6783042	Parameter	const char * opts	49:39:1758:1773	6782468	2	True				
ANR	6783043	ParameterType	const char *		6782468	0					
ANR	6783044	Identifier	opts		6782468	1					
ANR	6783045	CFGEntryNode	ENTRY		6782468		True				
ANR	6783046	CFGExitNode	EXIT		6782468		True				
ANR	6783047	Symbol	charind		6782468						
ANR	6783048	Symbol	* argv		6782468						
ANR	6783049	Symbol	colon_mode		6782468						
ANR	6783050	Symbol	argv		6782468						
ANR	6783051	Symbol	my_opterr		6782468						
ANR	6783052	Symbol	mode		6782468						
ANR	6783053	Symbol	opts		6782468						
ANR	6783054	Symbol	tmp		6782468						
ANR	6783055	Symbol	* off		6782468						
ANR	6783056	Symbol	* * argv		6782468						
ANR	6783057	Symbol	my_getopt		6782468						
ANR	6783058	Symbol	getenv		6782468						
ANR	6783059	Symbol	my_optopt		6782468						
ANR	6783060	Symbol	argc		6782468						
ANR	6783061	Symbol	* * my_optind		6782468						
ANR	6783062	Symbol	* * i		6782468						
ANR	6783063	Symbol	i		6782468						
ANR	6783064	Symbol	j		6782468						
ANR	6783065	Symbol	k		6782468						
ANR	6783066	Symbol	stderr		6782468						
ANR	6783067	Symbol	off		6782468						
ANR	6783068	Symbol	opt		6782468						
ANR	6783069	Symbol	s		6782468						
ANR	6783070	Symbol	* i		6782468						
ANR	6783071	Symbol	* opts		6782468						
ANR	6783072	Symbol	my_optind		6782468						
ANR	6783073	Symbol	* ( ++ s )		6782468						
ANR	6783074	Symbol	* k		6782468						
ANR	6783075	Symbol	* my_optind		6782468						
ANR	6783076	Symbol	my_optarg		6782468						
ANR	6783077	Symbol	* s		6782468						
ANR	6783078	Symbol	* charind		6782468						
ANR	6783079	Function	_my_getopt_internal	145:0:4903:9634							
ANR	6783080	FunctionDef	"_my_getopt_internal (int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind , int long_only)"		6783079	0					
ANR	6783081	CompoundStatement		148:0:5083:9634	6783079	0					
ANR	6783082	IdentifierDeclStatement	"char mode , colon_mode = * shortopts ;"	149:4:5089:5123	6783079	0	True				
ANR	6783083	IdentifierDecl	mode		6783079	0					
ANR	6783084	IdentifierDeclType	char		6783079	0					
ANR	6783085	Identifier	mode		6783079	1					
ANR	6783086	IdentifierDecl	colon_mode = * shortopts		6783079	1					
ANR	6783087	IdentifierDeclType	char		6783079	0					
ANR	6783088	Identifier	colon_mode		6783079	1					
ANR	6783089	AssignmentExpression	colon_mode = * shortopts		6783079	2		=			
ANR	6783090	Identifier	colon_mode		6783079	0					
ANR	6783091	UnaryOperationExpression	* shortopts		6783079	1					
ANR	6783092	UnaryOperator	*		6783079	0					
ANR	6783093	Identifier	shortopts		6783079	1					
ANR	6783094	IdentifierDeclStatement	"int shortoff = 0 , opt = - 1 ;"	150:4:5129:5155	6783079	1	True				
ANR	6783095	IdentifierDecl	shortoff = 0		6783079	0					
ANR	6783096	IdentifierDeclType	int		6783079	0					
ANR	6783097	Identifier	shortoff		6783079	1					
ANR	6783098	AssignmentExpression	shortoff = 0		6783079	2		=			
ANR	6783099	Identifier	shortoff		6783079	0					
ANR	6783100	PrimaryExpression	0		6783079	1					
ANR	6783101	IdentifierDecl	opt = - 1		6783079	1					
ANR	6783102	IdentifierDeclType	int		6783079	0					
ANR	6783103	Identifier	opt		6783079	1					
ANR	6783104	AssignmentExpression	opt = - 1		6783079	2		=			
ANR	6783105	Identifier	opt		6783079	0					
ANR	6783106	UnaryOperationExpression	- 1		6783079	1					
ANR	6783107	UnaryOperator	-		6783079	0					
ANR	6783108	PrimaryExpression	1		6783079	1					
ANR	6783109	IfStatement	"if ( getenv ( ""POSIXLY_CORRECT"" ) )"		6783079	2					
ANR	6783110	Condition	"getenv ( ""POSIXLY_CORRECT"" )"	152:7:5165:5189	6783079	0	True				
ANR	6783111	CallExpression	"getenv ( ""POSIXLY_CORRECT"" )"		6783079	0					
ANR	6783112	Callee	getenv		6783079	0					
ANR	6783113	Identifier	getenv		6783079	0					
ANR	6783114	ArgumentList	"""POSIXLY_CORRECT"""		6783079	1					
ANR	6783115	Argument	"""POSIXLY_CORRECT"""		6783079	0					
ANR	6783116	PrimaryExpression	"""POSIXLY_CORRECT"""		6783079	0					
ANR	6783117	ExpressionStatement	colon_mode = mode = '+'	152:34:5192:5215	6783079	1	True				
ANR	6783118	AssignmentExpression	colon_mode = mode = '+'		6783079	0		=			
ANR	6783119	Identifier	colon_mode		6783079	0					
ANR	6783120	AssignmentExpression	mode = '+'		6783079	1		=			
ANR	6783121	Identifier	mode		6783079	0					
ANR	6783122	PrimaryExpression	'+'		6783079	1					
ANR	6783123	ElseStatement	else		6783079	0					
ANR	6783124	CompoundStatement		6:9:142:142	6783079	0					
ANR	6783125	IfStatement	if ( ( colon_mode = * shortopts ) == ':' )		6783079	0					
ANR	6783126	Condition	( colon_mode = * shortopts ) == ':'	154:11:5239:5270	6783079	0	True				
ANR	6783127	EqualityExpression	( colon_mode = * shortopts ) == ':'		6783079	0		==			
ANR	6783128	AssignmentExpression	colon_mode = * shortopts		6783079	0		=			
ANR	6783129	Identifier	colon_mode		6783079	0					
ANR	6783130	UnaryOperationExpression	* shortopts		6783079	1					
ANR	6783131	UnaryOperator	*		6783079	0					
ANR	6783132	Identifier	shortopts		6783079	1					
ANR	6783133	PrimaryExpression	':'		6783079	1					
ANR	6783134	ExpressionStatement	shortoff ++	154:45:5273:5284	6783079	1	True				
ANR	6783135	PostIncDecOperationExpression	shortoff ++		6783079	0					
ANR	6783136	Identifier	shortoff		6783079	0					
ANR	6783137	IncDec	++		6783079	1					
ANR	6783138	IfStatement	if ( ( ( mode = shortopts [ shortoff ] ) == '+' ) || ( mode == '-' ) )		6783079	1					
ANR	6783139	Condition	( ( mode = shortopts [ shortoff ] ) == '+' ) || ( mode == '-' )	155:11:5297:5350	6783079	0	True				
ANR	6783140	OrExpression	( ( mode = shortopts [ shortoff ] ) == '+' ) || ( mode == '-' )		6783079	0		||			
ANR	6783141	EqualityExpression	( mode = shortopts [ shortoff ] ) == '+'		6783079	0		==			
ANR	6783142	AssignmentExpression	mode = shortopts [ shortoff ]		6783079	0		=			
ANR	6783143	Identifier	mode		6783079	0					
ANR	6783144	ArrayIndexing	shortopts [ shortoff ]		6783079	1					
ANR	6783145	Identifier	shortopts		6783079	0					
ANR	6783146	Identifier	shortoff		6783079	1					
ANR	6783147	PrimaryExpression	'+'		6783079	1					
ANR	6783148	EqualityExpression	mode == '-'		6783079	1		==			
ANR	6783149	Identifier	mode		6783079	0					
ANR	6783150	PrimaryExpression	'-'		6783079	1					
ANR	6783151	CompoundStatement		8:67:269:269	6783079	1					
ANR	6783152	ExpressionStatement	shortoff ++	156:12:5367:5377	6783079	0	True				
ANR	6783153	PostIncDecOperationExpression	shortoff ++		6783079	0					
ANR	6783154	Identifier	shortoff		6783079	0					
ANR	6783155	IncDec	++		6783079	1					
ANR	6783156	IfStatement	if ( ( colon_mode != ':' ) && ( ( colon_mode = shortopts [ shortoff ] ) == ':' ) )		6783079	1					
ANR	6783157	Condition	( colon_mode != ':' ) && ( ( colon_mode = shortopts [ shortoff ] ) == ':' )	157:15:5394:5459	6783079	0	True				
ANR	6783158	AndExpression	( colon_mode != ':' ) && ( ( colon_mode = shortopts [ shortoff ] ) == ':' )		6783079	0		&&			
ANR	6783159	EqualityExpression	colon_mode != ':'		6783079	0		!=			
ANR	6783160	Identifier	colon_mode		6783079	0					
ANR	6783161	PrimaryExpression	':'		6783079	1					
ANR	6783162	EqualityExpression	( colon_mode = shortopts [ shortoff ] ) == ':'		6783079	1		==			
ANR	6783163	AssignmentExpression	colon_mode = shortopts [ shortoff ]		6783079	0		=			
ANR	6783164	Identifier	colon_mode		6783079	0					
ANR	6783165	ArrayIndexing	shortopts [ shortoff ]		6783079	1					
ANR	6783166	Identifier	shortopts		6783079	0					
ANR	6783167	Identifier	shortoff		6783079	1					
ANR	6783168	PrimaryExpression	':'		6783079	1					
ANR	6783169	ExpressionStatement	shortoff ++	158:16:5478:5489	6783079	1	True				
ANR	6783170	PostIncDecOperationExpression	shortoff ++		6783079	0					
ANR	6783171	Identifier	shortoff		6783079	0					
ANR	6783172	IncDec	++		6783079	1					
ANR	6783173	ExpressionStatement	my_optarg = 0	161:4:5511:5524	6783079	3	True				
ANR	6783174	AssignmentExpression	my_optarg = 0		6783079	0		=			
ANR	6783175	Identifier	my_optarg		6783079	0					
ANR	6783176	PrimaryExpression	0		6783079	1					
ANR	6783177	IfStatement	if ( ( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) ) )		6783079	4					
ANR	6783178	Condition	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )	162:7:5533:5671	6783079	0	True				
ANR	6783179	OrExpression	( my_optind >= argc ) || ( ( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' ) )		6783079	0		||			
ANR	6783180	RelationalExpression	my_optind >= argc		6783079	0		>=			
ANR	6783181	Identifier	my_optind		6783079	0					
ANR	6783182	Identifier	argc		6783079	1					
ANR	6783183	AndExpression	( argv [ my_optind ] [ 0 ] == '-' ) && ( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		6783079	1		&&			
ANR	6783184	EqualityExpression	argv [ my_optind ] [ 0 ] == '-'		6783079	0		==			
ANR	6783185	ArrayIndexing	argv [ my_optind ] [ 0 ]		6783079	0					
ANR	6783186	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783187	Identifier	argv		6783079	0					
ANR	6783188	Identifier	my_optind		6783079	1					
ANR	6783189	PrimaryExpression	0		6783079	1					
ANR	6783190	PrimaryExpression	'-'		6783079	1					
ANR	6783191	AndExpression	( argv [ my_optind ] [ 1 ] == '-' ) && ( argv [ my_optind ] [ 2 ] == '\\0' )		6783079	1		&&			
ANR	6783192	EqualityExpression	argv [ my_optind ] [ 1 ] == '-'		6783079	0		==			
ANR	6783193	ArrayIndexing	argv [ my_optind ] [ 1 ]		6783079	0					
ANR	6783194	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783195	Identifier	argv		6783079	0					
ANR	6783196	Identifier	my_optind		6783079	1					
ANR	6783197	PrimaryExpression	1		6783079	1					
ANR	6783198	PrimaryExpression	'-'		6783079	1					
ANR	6783199	EqualityExpression	argv [ my_optind ] [ 2 ] == '\\0'		6783079	1		==			
ANR	6783200	ArrayIndexing	argv [ my_optind ] [ 2 ]		6783079	0					
ANR	6783201	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783202	Identifier	argv		6783079	0					
ANR	6783203	Identifier	my_optind		6783079	1					
ANR	6783204	PrimaryExpression	2		6783079	1					
ANR	6783205	PrimaryExpression	'\\0'		6783079	1					
ANR	6783206	CompoundStatement		18:39:590:590	6783079	1					
ANR	6783207	ExpressionStatement	my_optind ++	166:12:5688:5699	6783079	0	True				
ANR	6783208	PostIncDecOperationExpression	my_optind ++		6783079	0					
ANR	6783209	Identifier	my_optind		6783079	0					
ANR	6783210	IncDec	++		6783079	1					
ANR	6783211	ExpressionStatement	opt = - 1	167:12:5713:5721	6783079	1	True				
ANR	6783212	AssignmentExpression	opt = - 1		6783079	0		=			
ANR	6783213	Identifier	opt		6783079	0					
ANR	6783214	UnaryOperationExpression	- 1		6783079	1					
ANR	6783215	UnaryOperator	-		6783079	0					
ANR	6783216	PrimaryExpression	1		6783079	1					
ANR	6783217	ElseStatement	else		6783079	0					
ANR	6783218	IfStatement	if ( ( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' ) )		6783079	0					
ANR	6783219	Condition	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )	168:14:5737:5803	6783079	0	True				
ANR	6783220	OrExpression	( argv [ my_optind ] [ 0 ] != '-' ) || ( argv [ my_optind ] [ 1 ] == '\\0' )		6783079	0		||			
ANR	6783221	EqualityExpression	argv [ my_optind ] [ 0 ] != '-'		6783079	0		!=			
ANR	6783222	ArrayIndexing	argv [ my_optind ] [ 0 ]		6783079	0					
ANR	6783223	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783224	Identifier	argv		6783079	0					
ANR	6783225	Identifier	my_optind		6783079	1					
ANR	6783226	PrimaryExpression	0		6783079	1					
ANR	6783227	PrimaryExpression	'-'		6783079	1					
ANR	6783228	EqualityExpression	argv [ my_optind ] [ 1 ] == '\\0'		6783079	1		==			
ANR	6783229	ArrayIndexing	argv [ my_optind ] [ 1 ]		6783079	0					
ANR	6783230	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783231	Identifier	argv		6783079	0					
ANR	6783232	Identifier	my_optind		6783079	1					
ANR	6783233	PrimaryExpression	1		6783079	1					
ANR	6783234	PrimaryExpression	'\\0'		6783079	1					
ANR	6783235	CompoundStatement		24:12:759:770	6783079	1					
ANR	6783236	IdentifierDeclStatement	char * tmp ;	170:12:5820:5829	6783079	0	True				
ANR	6783237	IdentifierDecl	* tmp		6783079	0					
ANR	6783238	IdentifierDeclType	char *		6783079	0					
ANR	6783239	Identifier	tmp		6783079	1					
ANR	6783240	IdentifierDeclStatement	"int i , j , k ;"	171:12:5843:5854	6783079	1	True				
ANR	6783241	IdentifierDecl	i		6783079	0					
ANR	6783242	IdentifierDeclType	int		6783079	0					
ANR	6783243	Identifier	i		6783079	1					
ANR	6783244	IdentifierDecl	j		6783079	1					
ANR	6783245	IdentifierDeclType	int		6783079	0					
ANR	6783246	Identifier	j		6783079	1					
ANR	6783247	IdentifierDecl	k		6783079	2					
ANR	6783248	IdentifierDeclType	int		6783079	0					
ANR	6783249	Identifier	k		6783079	1					
ANR	6783250	ExpressionStatement	opt = - 1	173:12:5869:5877	6783079	2	True				
ANR	6783251	AssignmentExpression	opt = - 1		6783079	0		=			
ANR	6783252	Identifier	opt		6783079	0					
ANR	6783253	UnaryOperationExpression	- 1		6783079	1					
ANR	6783254	UnaryOperator	-		6783079	0					
ANR	6783255	PrimaryExpression	1		6783079	1					
ANR	6783256	IfStatement	if ( mode == '+' )		6783079	3					
ANR	6783257	Condition	mode == '+'	174:15:5894:5904	6783079	0	True				
ANR	6783258	EqualityExpression	mode == '+'		6783079	0		==			
ANR	6783259	Identifier	mode		6783079	0					
ANR	6783260	PrimaryExpression	'+'		6783079	1					
ANR	6783261	ReturnStatement	return - 1 ;	174:28:5907:5916	6783079	1	True				
ANR	6783262	UnaryOperationExpression	- 1		6783079	0					
ANR	6783263	UnaryOperator	-		6783079	0					
ANR	6783264	PrimaryExpression	1		6783079	1					
ANR	6783265	ElseStatement	else		6783079	0					
ANR	6783266	IfStatement	if ( mode == '-' )		6783079	0					
ANR	6783267	Condition	mode == '-'	175:20:5938:5948	6783079	0	True				
ANR	6783268	EqualityExpression	mode == '-'		6783079	0		==			
ANR	6783269	Identifier	mode		6783079	0					
ANR	6783270	PrimaryExpression	'-'		6783079	1					
ANR	6783271	CompoundStatement		28:33:867:867	6783079	1					
ANR	6783272	ExpressionStatement	my_optarg = argv [ my_optind ++ ]	176:16:5969:5998	6783079	0	True				
ANR	6783273	AssignmentExpression	my_optarg = argv [ my_optind ++ ]		6783079	0		=			
ANR	6783274	Identifier	my_optarg		6783079	0					
ANR	6783275	ArrayIndexing	argv [ my_optind ++ ]		6783079	1					
ANR	6783276	Identifier	argv		6783079	0					
ANR	6783277	PostIncDecOperationExpression	my_optind ++		6783079	1					
ANR	6783278	Identifier	my_optind		6783079	0					
ANR	6783279	IncDec	++		6783079	1					
ANR	6783280	ReturnStatement	return 1 ;	177:16:6016:6024	6783079	1	True				
ANR	6783281	PrimaryExpression	1		6783079	0					
ANR	6783282	ForStatement	for ( i = j = my_optind ; i < argc ; i ++ )		6783079	4					
ANR	6783283	ForInit	i = j = my_optind ;	179:16:6056:6069	6783079	0	True				
ANR	6783284	AssignmentExpression	i = j = my_optind		6783079	0		=			
ANR	6783285	Identifier	i		6783079	0					
ANR	6783286	AssignmentExpression	j = my_optind		6783079	1		=			
ANR	6783287	Identifier	j		6783079	0					
ANR	6783288	Identifier	my_optind		6783079	1					
ANR	6783289	Condition	i < argc	179:31:6071:6076	6783079	1	True				
ANR	6783290	RelationalExpression	i < argc		6783079	0		<			
ANR	6783291	Identifier	i		6783079	0					
ANR	6783292	Identifier	argc		6783079	1					
ANR	6783293	PostIncDecOperationExpression	i ++	179:39:6079:6081	6783079	2	True				
ANR	6783294	Identifier	i		6783079	0					
ANR	6783295	IncDec	++		6783079	1					
ANR	6783296	IfStatement	if ( ( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' ) )		6783079	3					
ANR	6783297	Condition	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )	179:47:6087:6145	6783079	0	True				
ANR	6783298	AndExpression	( argv [ i ] [ 0 ] == '-' ) && ( argv [ i ] [ 1 ] != '\\0' )		6783079	0		&&			
ANR	6783299	EqualityExpression	argv [ i ] [ 0 ] == '-'		6783079	0		==			
ANR	6783300	ArrayIndexing	argv [ i ] [ 0 ]		6783079	0					
ANR	6783301	ArrayIndexing	argv [ i ]		6783079	0					
ANR	6783302	Identifier	argv		6783079	0					
ANR	6783303	Identifier	i		6783079	1					
ANR	6783304	PrimaryExpression	0		6783079	1					
ANR	6783305	PrimaryExpression	'-'		6783079	1					
ANR	6783306	EqualityExpression	argv [ i ] [ 1 ] != '\\0'		6783079	1		!=			
ANR	6783307	ArrayIndexing	argv [ i ] [ 1 ]		6783079	0					
ANR	6783308	ArrayIndexing	argv [ i ]		6783079	0					
ANR	6783309	Identifier	argv		6783079	0					
ANR	6783310	Identifier	i		6783079	1					
ANR	6783311	PrimaryExpression	1		6783079	1					
ANR	6783312	PrimaryExpression	'\\0'		6783079	1					
ANR	6783313	CompoundStatement		33:38:1064:1064	6783079	1					
ANR	6783314	ExpressionStatement	my_optind = i	181:20:6170:6181	6783079	0	True				
ANR	6783315	AssignmentExpression	my_optind = i		6783079	0		=			
ANR	6783316	Identifier	my_optind		6783079	0					
ANR	6783317	Identifier	i		6783079	1					
ANR	6783318	ExpressionStatement	"opt = _my_getopt_internal ( argc , argv , shortopts , longopts , longind , long_only )"	182:20:6203:6327	6783079	1	True				
ANR	6783319	AssignmentExpression	"opt = _my_getopt_internal ( argc , argv , shortopts , longopts , longind , long_only )"		6783079	0		=			
ANR	6783320	Identifier	opt		6783079	0					
ANR	6783321	CallExpression	"_my_getopt_internal ( argc , argv , shortopts , longopts , longind , long_only )"		6783079	1					
ANR	6783322	Callee	_my_getopt_internal		6783079	0					
ANR	6783323	Identifier	_my_getopt_internal		6783079	0					
ANR	6783324	ArgumentList	argc		6783079	1					
ANR	6783325	Argument	argc		6783079	0					
ANR	6783326	Identifier	argc		6783079	0					
ANR	6783327	Argument	argv		6783079	1					
ANR	6783328	Identifier	argv		6783079	0					
ANR	6783329	Argument	shortopts		6783079	2					
ANR	6783330	Identifier	shortopts		6783079	0					
ANR	6783331	Argument	longopts		6783079	3					
ANR	6783332	Identifier	longopts		6783079	0					
ANR	6783333	Argument	longind		6783079	4					
ANR	6783334	Identifier	longind		6783079	0					
ANR	6783335	Argument	long_only		6783079	5					
ANR	6783336	Identifier	long_only		6783079	0					
ANR	6783337	WhileStatement	while ( i > j )		6783079	2					
ANR	6783338	Condition	i > j	185:26:6355:6359	6783079	0	True				
ANR	6783339	RelationalExpression	i > j		6783079	0		>			
ANR	6783340	Identifier	i		6783079	0					
ANR	6783341	Identifier	j		6783079	1					
ANR	6783342	CompoundStatement		38:33:1278:1278	6783079	1					
ANR	6783343	ExpressionStatement	tmp = argv [ -- i ]	186:24:6388:6401	6783079	0	True				
ANR	6783344	AssignmentExpression	tmp = argv [ -- i ]		6783079	0		=			
ANR	6783345	Identifier	tmp		6783079	0					
ANR	6783346	ArrayIndexing	argv [ -- i ]		6783079	1					
ANR	6783347	Identifier	argv		6783079	0					
ANR	6783348	UnaryExpression	-- i		6783079	1					
ANR	6783349	IncDec	--		6783079	0					
ANR	6783350	Identifier	i		6783079	1					
ANR	6783351	ForStatement	for ( k = i ; k + 1 < my_optind ; k ++ )		6783079	1					
ANR	6783352	ForInit	k = i ;	187:28:6431:6434	6783079	0	True				
ANR	6783353	AssignmentExpression	k = i		6783079	0		=			
ANR	6783354	Identifier	k		6783079	0					
ANR	6783355	Identifier	i		6783079	1					
ANR	6783356	Condition	k + 1 < my_optind	187:33:6436:6448	6783079	1	True				
ANR	6783357	RelationalExpression	k + 1 < my_optind		6783079	0		<			
ANR	6783358	AdditiveExpression	k + 1		6783079	0		+			
ANR	6783359	Identifier	k		6783079	0					
ANR	6783360	PrimaryExpression	1		6783079	1					
ANR	6783361	Identifier	my_optind		6783079	1					
ANR	6783362	PostIncDecOperationExpression	k ++	187:48:6451:6453	6783079	2	True				
ANR	6783363	Identifier	k		6783079	0					
ANR	6783364	IncDec	++		6783079	1					
ANR	6783365	ExpressionStatement	argv [ k ] = argv [ k + 1 ]	188:28:6484:6501	6783079	3	True				
ANR	6783366	AssignmentExpression	argv [ k ] = argv [ k + 1 ]		6783079	0		=			
ANR	6783367	ArrayIndexing	argv [ k ]		6783079	0					
ANR	6783368	Identifier	argv		6783079	0					
ANR	6783369	Identifier	k		6783079	1					
ANR	6783370	ArrayIndexing	argv [ k + 1 ]		6783079	1					
ANR	6783371	Identifier	argv		6783079	0					
ANR	6783372	AdditiveExpression	k + 1		6783079	1		+			
ANR	6783373	Identifier	k		6783079	0					
ANR	6783374	PrimaryExpression	1		6783079	1					
ANR	6783375	ExpressionStatement	argv [ -- my_optind ] = tmp	189:24:6527:6548	6783079	2	True				
ANR	6783376	AssignmentExpression	argv [ -- my_optind ] = tmp		6783079	0		=			
ANR	6783377	ArrayIndexing	argv [ -- my_optind ]		6783079	0					
ANR	6783378	Identifier	argv		6783079	0					
ANR	6783379	UnaryExpression	-- my_optind		6783079	1					
ANR	6783380	IncDec	--		6783079	0					
ANR	6783381	Identifier	my_optind		6783079	1					
ANR	6783382	Identifier	tmp		6783079	1					
ANR	6783383	BreakStatement	break ;	191:20:6592:6597	6783079	3	True				
ANR	6783384	ElseStatement	else		6783079	0					
ANR	6783385	IfStatement	if ( ( ! long_only ) && ( argv [ my_optind ] [ 1 ] != '-' ) )		6783079	0					
ANR	6783386	Condition	( ! long_only ) && ( argv [ my_optind ] [ 1 ] != '-' )	193:14:6627:6669	6783079	0	True				
ANR	6783387	AndExpression	( ! long_only ) && ( argv [ my_optind ] [ 1 ] != '-' )		6783079	0		&&			
ANR	6783388	UnaryOperationExpression	! long_only		6783079	0					
ANR	6783389	UnaryOperator	!		6783079	0					
ANR	6783390	Identifier	long_only		6783079	1					
ANR	6783391	EqualityExpression	argv [ my_optind ] [ 1 ] != '-'		6783079	1		!=			
ANR	6783392	ArrayIndexing	argv [ my_optind ] [ 1 ]		6783079	0					
ANR	6783393	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783394	Identifier	argv		6783079	0					
ANR	6783395	Identifier	my_optind		6783079	1					
ANR	6783396	PrimaryExpression	1		6783079	1					
ANR	6783397	PrimaryExpression	'-'		6783079	1					
ANR	6783398	ExpressionStatement	"opt = my_getopt ( argc , argv , shortopts )"	194:8:6680:6718	6783079	1	True				
ANR	6783399	AssignmentExpression	"opt = my_getopt ( argc , argv , shortopts )"		6783079	0		=			
ANR	6783400	Identifier	opt		6783079	0					
ANR	6783401	CallExpression	"my_getopt ( argc , argv , shortopts )"		6783079	1					
ANR	6783402	Callee	my_getopt		6783079	0					
ANR	6783403	Identifier	my_getopt		6783079	0					
ANR	6783404	ArgumentList	argc		6783079	1					
ANR	6783405	Argument	argc		6783079	0					
ANR	6783406	Identifier	argc		6783079	0					
ANR	6783407	Argument	argv		6783079	1					
ANR	6783408	Identifier	argv		6783079	0					
ANR	6783409	Argument	shortopts		6783079	2					
ANR	6783410	Identifier	shortopts		6783079	0					
ANR	6783411	ElseStatement	else		6783079	0					
ANR	6783412	CompoundStatement		50:8:1684:1712	6783079	0					
ANR	6783413	IdentifierDeclStatement	"int charind , offset ;"	196:8:6739:6758	6783079	0	True				
ANR	6783414	IdentifierDecl	charind		6783079	0					
ANR	6783415	IdentifierDeclType	int		6783079	0					
ANR	6783416	Identifier	charind		6783079	1					
ANR	6783417	IdentifierDecl	offset		6783079	1					
ANR	6783418	IdentifierDeclType	int		6783079	0					
ANR	6783419	Identifier	offset		6783079	1					
ANR	6783420	IdentifierDeclStatement	"int found = 0 , ind , hits = 0 ;"	197:8:6768:6796	6783079	1	True				
ANR	6783421	IdentifierDecl	found = 0		6783079	0					
ANR	6783422	IdentifierDeclType	int		6783079	0					
ANR	6783423	Identifier	found		6783079	1					
ANR	6783424	AssignmentExpression	found = 0		6783079	2		=			
ANR	6783425	Identifier	found		6783079	0					
ANR	6783426	PrimaryExpression	0		6783079	1					
ANR	6783427	IdentifierDecl	ind		6783079	1					
ANR	6783428	IdentifierDeclType	int		6783079	0					
ANR	6783429	Identifier	ind		6783079	1					
ANR	6783430	IdentifierDecl	hits = 0		6783079	2					
ANR	6783431	IdentifierDeclType	int		6783079	0					
ANR	6783432	Identifier	hits		6783079	1					
ANR	6783433	AssignmentExpression	hits = 0		6783079	2		=			
ANR	6783434	Identifier	hits		6783079	0					
ANR	6783435	PrimaryExpression	0		6783079	1					
ANR	6783436	IfStatement	if ( ( ( my_optopt = argv [ my_optind ] [ 1 ] ) != '-' ) && ! argv [ my_optind ] [ 2 ] )		6783079	2					
ANR	6783437	Condition	( ( my_optopt = argv [ my_optind ] [ 1 ] ) != '-' ) && ! argv [ my_optind ] [ 2 ]	199:11:6810:6874	6783079	0	True				
ANR	6783438	AndExpression	( ( my_optopt = argv [ my_optind ] [ 1 ] ) != '-' ) && ! argv [ my_optind ] [ 2 ]		6783079	0		&&			
ANR	6783439	EqualityExpression	( my_optopt = argv [ my_optind ] [ 1 ] ) != '-'		6783079	0		!=			
ANR	6783440	AssignmentExpression	my_optopt = argv [ my_optind ] [ 1 ]		6783079	0		=			
ANR	6783441	Identifier	my_optopt		6783079	0					
ANR	6783442	ArrayIndexing	argv [ my_optind ] [ 1 ]		6783079	1					
ANR	6783443	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783444	Identifier	argv		6783079	0					
ANR	6783445	Identifier	my_optind		6783079	1					
ANR	6783446	PrimaryExpression	1		6783079	1					
ANR	6783447	PrimaryExpression	'-'		6783079	1					
ANR	6783448	UnaryOperationExpression	! argv [ my_optind ] [ 2 ]		6783079	1					
ANR	6783449	UnaryOperator	!		6783079	0					
ANR	6783450	ArrayIndexing	argv [ my_optind ] [ 2 ]		6783079	1					
ANR	6783451	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783452	Identifier	argv		6783079	0					
ANR	6783453	Identifier	my_optind		6783079	1					
ANR	6783454	PrimaryExpression	2		6783079	1					
ANR	6783455	CompoundStatement		53:12:1807:1812	6783079	1					
ANR	6783456	IdentifierDeclStatement	int c ;	200:12:6891:6896	6783079	0	True				
ANR	6783457	IdentifierDecl	c		6783079	0					
ANR	6783458	IdentifierDeclType	int		6783079	0					
ANR	6783459	Identifier	c		6783079	1					
ANR	6783460	ExpressionStatement	ind = shortoff	202:12:6911:6925	6783079	1	True				
ANR	6783461	AssignmentExpression	ind = shortoff		6783079	0		=			
ANR	6783462	Identifier	ind		6783079	0					
ANR	6783463	Identifier	shortoff		6783079	1					
ANR	6783464	WhileStatement	while ( ( c = shortopts [ ind ++ ] ) )		6783079	2					
ANR	6783465	Condition	c = shortopts [ ind ++ ]	203:18:6945:6966	6783079	0	True				
ANR	6783466	AssignmentExpression	c = shortopts [ ind ++ ]		6783079	0		=			
ANR	6783467	Identifier	c		6783079	0					
ANR	6783468	ArrayIndexing	shortopts [ ind ++ ]		6783079	1					
ANR	6783469	Identifier	shortopts		6783079	0					
ANR	6783470	PostIncDecOperationExpression	ind ++		6783079	1					
ANR	6783471	Identifier	ind		6783079	0					
ANR	6783472	IncDec	++		6783079	1					
ANR	6783473	CompoundStatement		56:42:1885:1885	6783079	1					
ANR	6783474	IfStatement	if ( ( ( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) ) ) && ( shortopts [ ++ ind ] == ':' ) )		6783079	0					
ANR	6783475	Condition	( ( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) ) ) && ( shortopts [ ++ ind ] == ':' )	204:19:6990:7126	6783079	0	True				
ANR	6783476	AndExpression	( ( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) ) ) && ( shortopts [ ++ ind ] == ':' )		6783079	0		&&			
ANR	6783477	OrExpression	( shortopts [ ind ] == ':' ) || ( ( c == 'W' ) && ( shortopts [ ind ] == ';' ) )		6783079	0		||			
ANR	6783478	EqualityExpression	shortopts [ ind ] == ':'		6783079	0		==			
ANR	6783479	ArrayIndexing	shortopts [ ind ]		6783079	0					
ANR	6783480	Identifier	shortopts		6783079	0					
ANR	6783481	Identifier	ind		6783079	1					
ANR	6783482	PrimaryExpression	':'		6783079	1					
ANR	6783483	AndExpression	( c == 'W' ) && ( shortopts [ ind ] == ';' )		6783079	1		&&			
ANR	6783484	EqualityExpression	c == 'W'		6783079	0		==			
ANR	6783485	Identifier	c		6783079	0					
ANR	6783486	PrimaryExpression	'W'		6783079	1					
ANR	6783487	EqualityExpression	shortopts [ ind ] == ';'		6783079	1		==			
ANR	6783488	ArrayIndexing	shortopts [ ind ]		6783079	0					
ANR	6783489	Identifier	shortopts		6783079	0					
ANR	6783490	Identifier	ind		6783079	1					
ANR	6783491	PrimaryExpression	';'		6783079	1					
ANR	6783492	EqualityExpression	shortopts [ ++ ind ] == ':'		6783079	1		==			
ANR	6783493	ArrayIndexing	shortopts [ ++ ind ]		6783079	0					
ANR	6783494	Identifier	shortopts		6783079	0					
ANR	6783495	UnaryExpression	++ ind		6783079	1					
ANR	6783496	IncDec	++		6783079	0					
ANR	6783497	Identifier	ind		6783079	1					
ANR	6783498	PrimaryExpression	':'		6783079	1					
ANR	6783499	ExpressionStatement	ind ++	207:20:7149:7155	6783079	1	True				
ANR	6783500	PostIncDecOperationExpression	ind ++		6783079	0					
ANR	6783501	Identifier	ind		6783079	0					
ANR	6783502	IncDec	++		6783079	1					
ANR	6783503	IfStatement	if ( my_optopt == c )		6783079	1					
ANR	6783504	Condition	my_optopt == c	208:19:7176:7189	6783079	0	True				
ANR	6783505	EqualityExpression	my_optopt == c		6783079	0		==			
ANR	6783506	Identifier	my_optopt		6783079	0					
ANR	6783507	Identifier	c		6783079	1					
ANR	6783508	ReturnStatement	"return my_getopt ( argc , argv , shortopts ) ;"	208:35:7192:7231	6783079	1	True				
ANR	6783509	CallExpression	"my_getopt ( argc , argv , shortopts )"		6783079	0					
ANR	6783510	Callee	my_getopt		6783079	0					
ANR	6783511	Identifier	my_getopt		6783079	0					
ANR	6783512	ArgumentList	argc		6783079	1					
ANR	6783513	Argument	argc		6783079	0					
ANR	6783514	Identifier	argc		6783079	0					
ANR	6783515	Argument	argv		6783079	1					
ANR	6783516	Identifier	argv		6783079	0					
ANR	6783517	Argument	shortopts		6783079	2					
ANR	6783518	Identifier	shortopts		6783079	0					
ANR	6783519	ExpressionStatement	offset = 2 - ( argv [ my_optind ] [ 1 ] != '-' )	211:8:7265:7305	6783079	3	True				
ANR	6783520	AssignmentExpression	offset = 2 - ( argv [ my_optind ] [ 1 ] != '-' )		6783079	0		=			
ANR	6783521	Identifier	offset		6783079	0					
ANR	6783522	AdditiveExpression	2 - ( argv [ my_optind ] [ 1 ] != '-' )		6783079	1		-			
ANR	6783523	PrimaryExpression	2		6783079	0					
ANR	6783524	EqualityExpression	argv [ my_optind ] [ 1 ] != '-'		6783079	1		!=			
ANR	6783525	ArrayIndexing	argv [ my_optind ] [ 1 ]		6783079	0					
ANR	6783526	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783527	Identifier	argv		6783079	0					
ANR	6783528	Identifier	my_optind		6783079	1					
ANR	6783529	PrimaryExpression	1		6783079	1					
ANR	6783530	PrimaryExpression	'-'		6783079	1					
ANR	6783531	ForStatement	for ( charind = offset ; ( argv [ my_optind ] [ charind ] != '\\0' ) && ( argv [ my_optind ] [ charind ] != '=' ) ; charind ++ )		6783079	4					
ANR	6783532	ForInit	charind = offset ;	212:12:7319:7335	6783079	0	True				
ANR	6783533	AssignmentExpression	charind = offset		6783079	0		=			
ANR	6783534	Identifier	charind		6783079	0					
ANR	6783535	Identifier	offset		6783079	1					
ANR	6783536	Condition	( argv [ my_optind ] [ charind ] != '\\0' ) && ( argv [ my_optind ] [ charind ] != '=' )	213:12:7349:7431	6783079	1	True				
ANR	6783537	AndExpression	( argv [ my_optind ] [ charind ] != '\\0' ) && ( argv [ my_optind ] [ charind ] != '=' )		6783079	0		&&			
ANR	6783538	EqualityExpression	argv [ my_optind ] [ charind ] != '\\0'		6783079	0		!=			
ANR	6783539	ArrayIndexing	argv [ my_optind ] [ charind ]		6783079	0					
ANR	6783540	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783541	Identifier	argv		6783079	0					
ANR	6783542	Identifier	my_optind		6783079	1					
ANR	6783543	Identifier	charind		6783079	1					
ANR	6783544	PrimaryExpression	'\\0'		6783079	1					
ANR	6783545	EqualityExpression	argv [ my_optind ] [ charind ] != '='		6783079	1		!=			
ANR	6783546	ArrayIndexing	argv [ my_optind ] [ charind ]		6783079	0					
ANR	6783547	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783548	Identifier	argv		6783079	0					
ANR	6783549	Identifier	my_optind		6783079	1					
ANR	6783550	Identifier	charind		6783079	1					
ANR	6783551	PrimaryExpression	'='		6783079	1					
ANR	6783552	PostIncDecOperationExpression	charind ++	215:8:7442:7450	6783079	2	True				
ANR	6783553	Identifier	charind		6783079	0					
ANR	6783554	IncDec	++		6783079	1					
ANR	6783555	ExpressionStatement		215:18:7452:7452	6783079	3	True				
ANR	6783556	ForStatement	for ( ind = 0 ; longopts [ ind ] . name && ! hits ; ind ++ )		6783079	5					
ANR	6783557	ForInit	ind = 0 ;	216:12:7466:7473	6783079	0	True				
ANR	6783558	AssignmentExpression	ind = 0		6783079	0		=			
ANR	6783559	Identifier	ind		6783079	0					
ANR	6783560	PrimaryExpression	0		6783079	1					
ANR	6783561	Condition	longopts [ ind ] . name && ! hits	216:21:7475:7501	6783079	1	True				
ANR	6783562	AndExpression	longopts [ ind ] . name && ! hits		6783079	0		&&			
ANR	6783563	MemberAccess	longopts [ ind ] . name		6783079	0					
ANR	6783564	ArrayIndexing	longopts [ ind ]		6783079	0					
ANR	6783565	Identifier	longopts		6783079	0					
ANR	6783566	Identifier	ind		6783079	1					
ANR	6783567	Identifier	name		6783079	1					
ANR	6783568	UnaryOperationExpression	! hits		6783079	1					
ANR	6783569	UnaryOperator	!		6783079	0					
ANR	6783570	Identifier	hits		6783079	1					
ANR	6783571	PostIncDecOperationExpression	ind ++	216:50:7504:7508	6783079	2	True				
ANR	6783572	Identifier	ind		6783079	0					
ANR	6783573	IncDec	++		6783079	1					
ANR	6783574	IfStatement	"if ( ( strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset ) ) && ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 ) )"		6783079	3					
ANR	6783575	Condition	"( strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset ) ) && ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 )"	217:15:7526:7698	6783079	0	True				
ANR	6783576	AndExpression	"( strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset ) ) && ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 )"		6783079	0		&&			
ANR	6783577	EqualityExpression	strlen ( longopts [ ind ] . name ) == ( size_t ) ( charind - offset )		6783079	0		==			
ANR	6783578	CallExpression	strlen ( longopts [ ind ] . name )		6783079	0					
ANR	6783579	Callee	strlen		6783079	0					
ANR	6783580	Identifier	strlen		6783079	0					
ANR	6783581	ArgumentList	longopts [ ind ] . name		6783079	1					
ANR	6783582	Argument	longopts [ ind ] . name		6783079	0					
ANR	6783583	MemberAccess	longopts [ ind ] . name		6783079	0					
ANR	6783584	ArrayIndexing	longopts [ ind ]		6783079	0					
ANR	6783585	Identifier	longopts		6783079	0					
ANR	6783586	Identifier	ind		6783079	1					
ANR	6783587	Identifier	name		6783079	1					
ANR	6783588	CastExpression	( size_t ) ( charind - offset )		6783079	1					
ANR	6783589	CastTarget	size_t		6783079	0					
ANR	6783590	AdditiveExpression	charind - offset		6783079	1		-			
ANR	6783591	Identifier	charind		6783079	0					
ANR	6783592	Identifier	offset		6783079	1					
ANR	6783593	EqualityExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0"		6783079	1		==			
ANR	6783594	CallExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset )"		6783079	0					
ANR	6783595	Callee	strncmp		6783079	0					
ANR	6783596	Identifier	strncmp		6783079	0					
ANR	6783597	ArgumentList	longopts [ ind ] . name		6783079	1					
ANR	6783598	Argument	longopts [ ind ] . name		6783079	0					
ANR	6783599	MemberAccess	longopts [ ind ] . name		6783079	0					
ANR	6783600	ArrayIndexing	longopts [ ind ]		6783079	0					
ANR	6783601	Identifier	longopts		6783079	0					
ANR	6783602	Identifier	ind		6783079	1					
ANR	6783603	Identifier	name		6783079	1					
ANR	6783604	Argument	argv [ my_optind ] + offset		6783079	1					
ANR	6783605	AdditiveExpression	argv [ my_optind ] + offset		6783079	0		+			
ANR	6783606	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783607	Identifier	argv		6783079	0					
ANR	6783608	Identifier	my_optind		6783079	1					
ANR	6783609	Identifier	offset		6783079	1					
ANR	6783610	Argument	charind - offset		6783079	2					
ANR	6783611	AdditiveExpression	charind - offset		6783079	0		-			
ANR	6783612	Identifier	charind		6783079	0					
ANR	6783613	Identifier	offset		6783079	1					
ANR	6783614	PrimaryExpression	0		6783079	1					
ANR	6783615	ExpressionStatement	"found = ind , hits ++"	220:16:7717:7736	6783079	1	True				
ANR	6783616	Expression	"found = ind , hits ++"		6783079	0					
ANR	6783617	AssignmentExpression	found = ind		6783079	0		=			
ANR	6783618	Identifier	found		6783079	0					
ANR	6783619	Identifier	ind		6783079	1					
ANR	6783620	PostIncDecOperationExpression	hits ++		6783079	1					
ANR	6783621	Identifier	hits		6783079	0					
ANR	6783622	IncDec	++		6783079	1					
ANR	6783623	IfStatement	if ( ! hits )		6783079	6					
ANR	6783624	Condition	! hits	221:11:7749:7753	6783079	0	True				
ANR	6783625	UnaryOperationExpression	! hits		6783079	0					
ANR	6783626	UnaryOperator	!		6783079	0					
ANR	6783627	Identifier	hits		6783079	1					
ANR	6783628	ForStatement	for ( ind = 0 ; longopts [ ind ] . name ; ind ++ )		6783079	1					
ANR	6783629	ForInit	ind = 0 ;	221:22:7760:7767	6783079	0	True				
ANR	6783630	AssignmentExpression	ind = 0		6783079	0		=			
ANR	6783631	Identifier	ind		6783079	0					
ANR	6783632	PrimaryExpression	0		6783079	1					
ANR	6783633	Condition	longopts [ ind ] . name	221:31:7769:7786	6783079	1	True				
ANR	6783634	MemberAccess	longopts [ ind ] . name		6783079	0					
ANR	6783635	ArrayIndexing	longopts [ ind ]		6783079	0					
ANR	6783636	Identifier	longopts		6783079	0					
ANR	6783637	Identifier	ind		6783079	1					
ANR	6783638	Identifier	name		6783079	1					
ANR	6783639	PostIncDecOperationExpression	ind ++	221:51:7789:7793	6783079	2	True				
ANR	6783640	Identifier	ind		6783079	0					
ANR	6783641	IncDec	++		6783079	1					
ANR	6783642	IfStatement	"if ( strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0 )"		6783079	3					
ANR	6783643	Condition	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0"	222:15:7811:7902	6783079	0	True				
ANR	6783644	EqualityExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset ) == 0"		6783079	0		==			
ANR	6783645	CallExpression	"strncmp ( longopts [ ind ] . name , argv [ my_optind ] + offset , charind - offset )"		6783079	0					
ANR	6783646	Callee	strncmp		6783079	0					
ANR	6783647	Identifier	strncmp		6783079	0					
ANR	6783648	ArgumentList	longopts [ ind ] . name		6783079	1					
ANR	6783649	Argument	longopts [ ind ] . name		6783079	0					
ANR	6783650	MemberAccess	longopts [ ind ] . name		6783079	0					
ANR	6783651	ArrayIndexing	longopts [ ind ]		6783079	0					
ANR	6783652	Identifier	longopts		6783079	0					
ANR	6783653	Identifier	ind		6783079	1					
ANR	6783654	Identifier	name		6783079	1					
ANR	6783655	Argument	argv [ my_optind ] + offset		6783079	1					
ANR	6783656	AdditiveExpression	argv [ my_optind ] + offset		6783079	0		+			
ANR	6783657	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783658	Identifier	argv		6783079	0					
ANR	6783659	Identifier	my_optind		6783079	1					
ANR	6783660	Identifier	offset		6783079	1					
ANR	6783661	Argument	charind - offset		6783079	2					
ANR	6783662	AdditiveExpression	charind - offset		6783079	0		-			
ANR	6783663	Identifier	charind		6783079	0					
ANR	6783664	Identifier	offset		6783079	1					
ANR	6783665	PrimaryExpression	0		6783079	1					
ANR	6783666	ExpressionStatement	"found = ind , hits ++"	224:16:7921:7940	6783079	1	True				
ANR	6783667	Expression	"found = ind , hits ++"		6783079	0					
ANR	6783668	AssignmentExpression	found = ind		6783079	0		=			
ANR	6783669	Identifier	found		6783079	0					
ANR	6783670	Identifier	ind		6783079	1					
ANR	6783671	PostIncDecOperationExpression	hits ++		6783079	1					
ANR	6783672	Identifier	hits		6783079	0					
ANR	6783673	IncDec	++		6783079	1					
ANR	6783674	IfStatement	if ( hits == 1 )		6783079	7					
ANR	6783675	Condition	hits == 1	225:11:7953:7961	6783079	0	True				
ANR	6783676	EqualityExpression	hits == 1		6783079	0		==			
ANR	6783677	Identifier	hits		6783079	0					
ANR	6783678	PrimaryExpression	1		6783079	1					
ANR	6783679	CompoundStatement		78:22:2880:2880	6783079	1					
ANR	6783680	ExpressionStatement	opt = 0	226:12:7978:7985	6783079	0	True				
ANR	6783681	AssignmentExpression	opt = 0		6783079	0		=			
ANR	6783682	Identifier	opt		6783079	0					
ANR	6783683	PrimaryExpression	0		6783079	1					
ANR	6783684	IfStatement	if ( argv [ my_optind ] [ charind ] == '=' )		6783079	1					
ANR	6783685	Condition	argv [ my_optind ] [ charind ] == '='	228:15:8003:8033	6783079	0	True				
ANR	6783686	EqualityExpression	argv [ my_optind ] [ charind ] == '='		6783079	0		==			
ANR	6783687	ArrayIndexing	argv [ my_optind ] [ charind ]		6783079	0					
ANR	6783688	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783689	Identifier	argv		6783079	0					
ANR	6783690	Identifier	my_optind		6783079	1					
ANR	6783691	Identifier	charind		6783079	1					
ANR	6783692	PrimaryExpression	'='		6783079	1					
ANR	6783693	CompoundStatement		81:48:2952:2952	6783079	1					
ANR	6783694	IfStatement	if ( longopts [ found ] . has_arg == 0 )		6783079	0					
ANR	6783695	Condition	longopts [ found ] . has_arg == 0	229:19:8057:8084	6783079	0	True				
ANR	6783696	EqualityExpression	longopts [ found ] . has_arg == 0		6783079	0		==			
ANR	6783697	MemberAccess	longopts [ found ] . has_arg		6783079	0					
ANR	6783698	ArrayIndexing	longopts [ found ]		6783079	0					
ANR	6783699	Identifier	longopts		6783079	0					
ANR	6783700	Identifier	found		6783079	1					
ANR	6783701	Identifier	has_arg		6783079	1					
ANR	6783702	PrimaryExpression	0		6783079	1					
ANR	6783703	CompoundStatement		82:49:3003:3003	6783079	1					
ANR	6783704	ExpressionStatement	opt = '?'	230:20:8109:8118	6783079	0	True				
ANR	6783705	AssignmentExpression	opt = '?'		6783079	0		=			
ANR	6783706	Identifier	opt		6783079	0					
ANR	6783707	PrimaryExpression	'?'		6783079	1					
ANR	6783708	IfStatement	if ( my_opterr )		6783079	1					
ANR	6783709	Condition	my_opterr	231:23:8143:8151	6783079	0	True				
ANR	6783710	Identifier	my_opterr		6783079	0					
ANR	6783711	ExpressionStatement	"fprintf ( stderr , ""%s: option `--%s' doesn't allow an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"	231:34:8154:8297	6783079	1	True				
ANR	6783712	CallExpression	"fprintf ( stderr , ""%s: option `--%s' doesn't allow an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"		6783079	0					
ANR	6783713	Callee	fprintf		6783079	0					
ANR	6783714	Identifier	fprintf		6783079	0					
ANR	6783715	ArgumentList	stderr		6783079	1					
ANR	6783716	Argument	stderr		6783079	0					
ANR	6783717	Identifier	stderr		6783079	0					
ANR	6783718	Argument	"""%s: option `--%s' doesn't allow an argument\\n"""		6783079	1					
ANR	6783719	PrimaryExpression	"""%s: option `--%s' doesn't allow an argument\\n"""		6783079	0					
ANR	6783720	Argument	argv [ 0 ]		6783079	2					
ANR	6783721	ArrayIndexing	argv [ 0 ]		6783079	0					
ANR	6783722	Identifier	argv		6783079	0					
ANR	6783723	PrimaryExpression	0		6783079	1					
ANR	6783724	Argument	longopts [ found ] . name		6783079	3					
ANR	6783725	MemberAccess	longopts [ found ] . name		6783079	0					
ANR	6783726	ArrayIndexing	longopts [ found ]		6783079	0					
ANR	6783727	Identifier	longopts		6783079	0					
ANR	6783728	Identifier	found		6783079	1					
ANR	6783729	Identifier	name		6783079	1					
ANR	6783730	ElseStatement	else		6783079	0					
ANR	6783731	CompoundStatement		87:23:3238:3238	6783079	0					
ANR	6783732	ExpressionStatement	my_optarg = argv [ my_optind ] + ++ charind	235:20:8344:8383	6783079	0	True				
ANR	6783733	AssignmentExpression	my_optarg = argv [ my_optind ] + ++ charind		6783079	0		=			
ANR	6783734	Identifier	my_optarg		6783079	0					
ANR	6783735	AdditiveExpression	argv [ my_optind ] + ++ charind		6783079	1		+			
ANR	6783736	ArrayIndexing	argv [ my_optind ]		6783079	0					
ANR	6783737	Identifier	argv		6783079	0					
ANR	6783738	Identifier	my_optind		6783079	1					
ANR	6783739	UnaryExpression	++ charind		6783079	1					
ANR	6783740	IncDec	++		6783079	0					
ANR	6783741	Identifier	charind		6783079	1					
ANR	6783742	ExpressionStatement	charind = 0	236:20:8405:8416	6783079	1	True				
ANR	6783743	AssignmentExpression	charind = 0		6783079	0		=			
ANR	6783744	Identifier	charind		6783079	0					
ANR	6783745	PrimaryExpression	0		6783079	1					
ANR	6783746	ElseStatement	else		6783079	0					
ANR	6783747	IfStatement	if ( longopts [ found ] . has_arg == 1 )		6783079	0					
ANR	6783748	Condition	longopts [ found ] . has_arg == 1	238:22:8458:8485	6783079	0	True				
ANR	6783749	EqualityExpression	longopts [ found ] . has_arg == 1		6783079	0		==			
ANR	6783750	MemberAccess	longopts [ found ] . has_arg		6783079	0					
ANR	6783751	ArrayIndexing	longopts [ found ]		6783079	0					
ANR	6783752	Identifier	longopts		6783079	0					
ANR	6783753	Identifier	found		6783079	1					
ANR	6783754	Identifier	has_arg		6783079	1					
ANR	6783755	PrimaryExpression	1		6783079	1					
ANR	6783756	CompoundStatement		91:52:3404:3404	6783079	1					
ANR	6783757	IfStatement	if ( ++ my_optind >= argc )		6783079	0					
ANR	6783758	Condition	++ my_optind >= argc	239:19:8509:8527	6783079	0	True				
ANR	6783759	RelationalExpression	++ my_optind >= argc		6783079	0		>=			
ANR	6783760	UnaryExpression	++ my_optind		6783079	0					
ANR	6783761	IncDec	++		6783079	0					
ANR	6783762	Identifier	my_optind		6783079	1					
ANR	6783763	Identifier	argc		6783079	1					
ANR	6783764	CompoundStatement		92:40:3446:3446	6783079	1					
ANR	6783765	ExpressionStatement	opt = ( colon_mode == ':' ) ? ':' : '?'	240:20:8552:8589	6783079	0	True				
ANR	6783766	AssignmentExpression	opt = ( colon_mode == ':' ) ? ':' : '?'		6783079	0		=			
ANR	6783767	Identifier	opt		6783079	0					
ANR	6783768	ConditionalExpression	( colon_mode == ':' ) ? ':' : '?'		6783079	1					
ANR	6783769	Condition	colon_mode == ':'		6783079	0					
ANR	6783770	EqualityExpression	colon_mode == ':'		6783079	0		==			
ANR	6783771	Identifier	colon_mode		6783079	0					
ANR	6783772	PrimaryExpression	':'		6783079	1					
ANR	6783773	PrimaryExpression	':'		6783079	1					
ANR	6783774	PrimaryExpression	'?'		6783079	2					
ANR	6783775	IfStatement	if ( my_opterr )		6783079	1					
ANR	6783776	Condition	my_opterr	241:23:8614:8622	6783079	0	True				
ANR	6783777	Identifier	my_opterr		6783079	0					
ANR	6783778	ExpressionStatement	"fprintf ( stderr , ""%s: option `--%s' requires an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"	241:34:8625:8763	6783079	1	True				
ANR	6783779	CallExpression	"fprintf ( stderr , ""%s: option `--%s' requires an argument\\n"" , argv [ 0 ] , longopts [ found ] . name )"		6783079	0					
ANR	6783780	Callee	fprintf		6783079	0					
ANR	6783781	Identifier	fprintf		6783079	0					
ANR	6783782	ArgumentList	stderr		6783079	1					
ANR	6783783	Argument	stderr		6783079	0					
ANR	6783784	Identifier	stderr		6783079	0					
ANR	6783785	Argument	"""%s: option `--%s' requires an argument\\n"""		6783079	1					
ANR	6783786	PrimaryExpression	"""%s: option `--%s' requires an argument\\n"""		6783079	0					
ANR	6783787	Argument	argv [ 0 ]		6783079	2					
ANR	6783788	ArrayIndexing	argv [ 0 ]		6783079	0					
ANR	6783789	Identifier	argv		6783079	0					
ANR	6783790	PrimaryExpression	0		6783079	1					
ANR	6783791	Argument	longopts [ found ] . name		6783079	3					
ANR	6783792	MemberAccess	longopts [ found ] . name		6783079	0					
ANR	6783793	ArrayIndexing	longopts [ found ]		6783079	0					
ANR	6783794	Identifier	longopts		6783079	0					
ANR	6783795	Identifier	found		6783079	1					
ANR	6783796	Identifier	name		6783079	1					
ANR	6783797	ElseStatement	else		6783079	0					
ANR	6783798	ExpressionStatement	my_optarg = argv [ my_optind ]	244:23:8788:8815	6783079	0	True				
ANR	6783799	AssignmentExpression	my_optarg = argv [ my_optind ]		6783079	0		=			
ANR	6783800	Identifier	my_optarg		6783079	0					
ANR	6783801	ArrayIndexing	argv [ my_optind ]		6783079	1					
ANR	6783802	Identifier	argv		6783079	0					
ANR	6783803	Identifier	my_optind		6783079	1					
ANR	6783804	IfStatement	if ( ! opt )		6783079	2					
ANR	6783805	Condition	! opt	246:15:8846:8849	6783079	0	True				
ANR	6783806	UnaryOperationExpression	! opt		6783079	0					
ANR	6783807	UnaryOperator	!		6783079	0					
ANR	6783808	Identifier	opt		6783079	1					
ANR	6783809	CompoundStatement		99:21:3768:3768	6783079	1					
ANR	6783810	IfStatement	if ( longind )		6783079	0					
ANR	6783811	Condition	longind	247:20:8874:8880	6783079	0	True				
ANR	6783812	Identifier	longind		6783079	0					
ANR	6783813	ExpressionStatement	* longind = found	247:29:8883:8899	6783079	1	True				
ANR	6783814	AssignmentExpression	* longind = found		6783079	0		=			
ANR	6783815	UnaryOperationExpression	* longind		6783079	0					
ANR	6783816	UnaryOperator	*		6783079	0					
ANR	6783817	Identifier	longind		6783079	1					
ANR	6783818	Identifier	found		6783079	1					
ANR	6783819	IfStatement	if ( ! longopts [ found ] . flag )		6783079	1					
ANR	6783820	Condition	! longopts [ found ] . flag	248:19:8920:8940	6783079	0	True				
ANR	6783821	UnaryOperationExpression	! longopts [ found ] . flag		6783079	0					
ANR	6783822	UnaryOperator	!		6783079	0					
ANR	6783823	MemberAccess	longopts [ found ] . flag		6783079	1					
ANR	6783824	ArrayIndexing	longopts [ found ]		6783079	0					
ANR	6783825	Identifier	longopts		6783079	0					
ANR	6783826	Identifier	found		6783079	1					
ANR	6783827	Identifier	flag		6783079	1					
ANR	6783828	ExpressionStatement	opt = longopts [ found ] . val	248:42:8943:8968	6783079	1	True				
ANR	6783829	AssignmentExpression	opt = longopts [ found ] . val		6783079	0		=			
ANR	6783830	Identifier	opt		6783079	0					
ANR	6783831	MemberAccess	longopts [ found ] . val		6783079	1					
ANR	6783832	ArrayIndexing	longopts [ found ]		6783079	0					
ANR	6783833	Identifier	longopts		6783079	0					
ANR	6783834	Identifier	found		6783079	1					
ANR	6783835	Identifier	val		6783079	1					
ANR	6783836	ElseStatement	else		6783079	0					
ANR	6783837	ExpressionStatement	* ( longopts [ found ] . flag ) = longopts [ found ] . val	249:21:8991:9036	6783079	0	True				
ANR	6783838	AssignmentExpression	* ( longopts [ found ] . flag ) = longopts [ found ] . val		6783079	0		=			
ANR	6783839	UnaryOperationExpression	* ( longopts [ found ] . flag )		6783079	0					
ANR	6783840	UnaryOperator	*		6783079	0					
ANR	6783841	MemberAccess	longopts [ found ] . flag		6783079	1					
ANR	6783842	ArrayIndexing	longopts [ found ]		6783079	0					
ANR	6783843	Identifier	longopts		6783079	0					
ANR	6783844	Identifier	found		6783079	1					
ANR	6783845	Identifier	flag		6783079	1					
ANR	6783846	MemberAccess	longopts [ found ] . val		6783079	1					
ANR	6783847	ArrayIndexing	longopts [ found ]		6783079	0					
ANR	6783848	Identifier	longopts		6783079	0					
ANR	6783849	Identifier	found		6783079	1					
ANR	6783850	Identifier	val		6783079	1					
ANR	6783851	ExpressionStatement	my_optind ++	251:12:9064:9075	6783079	3	True				
ANR	6783852	PostIncDecOperationExpression	my_optind ++		6783079	0					
ANR	6783853	Identifier	my_optind		6783079	0					
ANR	6783854	IncDec	++		6783079	1					
ANR	6783855	ElseStatement	else		6783079	0					
ANR	6783856	IfStatement	if ( ! hits )		6783079	0					
ANR	6783857	Condition	! hits	252:18:9095:9099	6783079	0	True				
ANR	6783858	UnaryOperationExpression	! hits		6783079	0					
ANR	6783859	UnaryOperator	!		6783079	0					
ANR	6783860	Identifier	hits		6783079	1					
ANR	6783861	CompoundStatement		105:25:4018:4018	6783079	1					
ANR	6783862	IfStatement	if ( offset == 1 )		6783079	0					
ANR	6783863	Condition	offset == 1	253:15:9119:9129	6783079	0	True				
ANR	6783864	EqualityExpression	offset == 1		6783079	0		==			
ANR	6783865	Identifier	offset		6783079	0					
ANR	6783866	PrimaryExpression	1		6783079	1					
ANR	6783867	ExpressionStatement	"opt = my_getopt ( argc , argv , shortopts )"	253:28:9132:9170	6783079	1	True				
ANR	6783868	AssignmentExpression	"opt = my_getopt ( argc , argv , shortopts )"		6783079	0		=			
ANR	6783869	Identifier	opt		6783079	0					
ANR	6783870	CallExpression	"my_getopt ( argc , argv , shortopts )"		6783079	1					
ANR	6783871	Callee	my_getopt		6783079	0					
ANR	6783872	Identifier	my_getopt		6783079	0					
ANR	6783873	ArgumentList	argc		6783079	1					
ANR	6783874	Argument	argc		6783079	0					
ANR	6783875	Identifier	argc		6783079	0					
ANR	6783876	Argument	argv		6783079	1					
ANR	6783877	Identifier	argv		6783079	0					
ANR	6783878	Argument	shortopts		6783079	2					
ANR	6783879	Identifier	shortopts		6783079	0					
ANR	6783880	ElseStatement	else		6783079	0					
ANR	6783881	CompoundStatement		107:17:4105:4105	6783079	0					
ANR	6783882	ExpressionStatement	opt = '?'	255:16:9207:9216	6783079	0	True				
ANR	6783883	AssignmentExpression	opt = '?'		6783079	0		=			
ANR	6783884	Identifier	opt		6783079	0					
ANR	6783885	PrimaryExpression	'?'		6783079	1					
ANR	6783886	IfStatement	if ( my_opterr )		6783079	1					
ANR	6783887	Condition	my_opterr	256:19:9237:9245	6783079	0	True				
ANR	6783888	Identifier	my_opterr		6783079	0					
ANR	6783889	ExpressionStatement	"fprintf ( stderr , ""%s: unrecognized option `%s'\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"	256:30:9248:9365	6783079	1	True				
ANR	6783890	CallExpression	"fprintf ( stderr , ""%s: unrecognized option `%s'\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"		6783079	0					
ANR	6783891	Callee	fprintf		6783079	0					
ANR	6783892	Identifier	fprintf		6783079	0					
ANR	6783893	ArgumentList	stderr		6783079	1					
ANR	6783894	Argument	stderr		6783079	0					
ANR	6783895	Identifier	stderr		6783079	0					
ANR	6783896	Argument	"""%s: unrecognized option `%s'\\n"""		6783079	1					
ANR	6783897	PrimaryExpression	"""%s: unrecognized option `%s'\\n"""		6783079	0					
ANR	6783898	Argument	argv [ 0 ]		6783079	2					
ANR	6783899	ArrayIndexing	argv [ 0 ]		6783079	0					
ANR	6783900	Identifier	argv		6783079	0					
ANR	6783901	PrimaryExpression	0		6783079	1					
ANR	6783902	Argument	argv [ my_optind ++ ]		6783079	3					
ANR	6783903	ArrayIndexing	argv [ my_optind ++ ]		6783079	0					
ANR	6783904	Identifier	argv		6783079	0					
ANR	6783905	PostIncDecOperationExpression	my_optind ++		6783079	1					
ANR	6783906	Identifier	my_optind		6783079	0					
ANR	6783907	IncDec	++		6783079	1					
ANR	6783908	ElseStatement	else		6783079	0					
ANR	6783909	CompoundStatement		113:15:4312:4312	6783079	0					
ANR	6783910	ExpressionStatement	opt = '?'	261:12:9410:9419	6783079	0	True				
ANR	6783911	AssignmentExpression	opt = '?'		6783079	0		=			
ANR	6783912	Identifier	opt		6783079	0					
ANR	6783913	PrimaryExpression	'?'		6783079	1					
ANR	6783914	IfStatement	if ( my_opterr )		6783079	1					
ANR	6783915	Condition	my_opterr	262:15:9436:9444	6783079	0	True				
ANR	6783916	Identifier	my_opterr		6783079	0					
ANR	6783917	ExpressionStatement	"fprintf ( stderr , ""%s: option `%s' is ambiguous\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"	262:26:9447:9556	6783079	1	True				
ANR	6783918	CallExpression	"fprintf ( stderr , ""%s: option `%s' is ambiguous\\n"" , argv [ 0 ] , argv [ my_optind ++ ] )"		6783079	0					
ANR	6783919	Callee	fprintf		6783079	0					
ANR	6783920	Identifier	fprintf		6783079	0					
ANR	6783921	ArgumentList	stderr		6783079	1					
ANR	6783922	Argument	stderr		6783079	0					
ANR	6783923	Identifier	stderr		6783079	0					
ANR	6783924	Argument	"""%s: option `%s' is ambiguous\\n"""		6783079	1					
ANR	6783925	PrimaryExpression	"""%s: option `%s' is ambiguous\\n"""		6783079	0					
ANR	6783926	Argument	argv [ 0 ]		6783079	2					
ANR	6783927	ArrayIndexing	argv [ 0 ]		6783079	0					
ANR	6783928	Identifier	argv		6783079	0					
ANR	6783929	PrimaryExpression	0		6783079	1					
ANR	6783930	Argument	argv [ my_optind ++ ]		6783079	3					
ANR	6783931	ArrayIndexing	argv [ my_optind ++ ]		6783079	0					
ANR	6783932	Identifier	argv		6783079	0					
ANR	6783933	PostIncDecOperationExpression	my_optind ++		6783079	1					
ANR	6783934	Identifier	my_optind		6783079	0					
ANR	6783935	IncDec	++		6783079	1					
ANR	6783936	IfStatement	if ( my_optind > argc )		6783079	5					
ANR	6783937	Condition	my_optind > argc	267:8:9582:9597	6783079	0	True				
ANR	6783938	RelationalExpression	my_optind > argc		6783079	0		>			
ANR	6783939	Identifier	my_optind		6783079	0					
ANR	6783940	Identifier	argc		6783079	1					
ANR	6783941	ExpressionStatement	my_optind = argc	267:26:9600:9616	6783079	1	True				
ANR	6783942	AssignmentExpression	my_optind = argc		6783079	0		=			
ANR	6783943	Identifier	my_optind		6783079	0					
ANR	6783944	Identifier	argc		6783079	1					
ANR	6783945	ReturnStatement	return opt ;	268:4:9622:9632	6783079	6	True				
ANR	6783946	Identifier	opt		6783079	0					
ANR	6783947	ReturnType	int		6783079	1					
ANR	6783948	Identifier	_my_getopt_internal		6783079	2					
ANR	6783949	ParameterList	"int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind , int long_only"		6783079	3					
ANR	6783950	Parameter	int argc	145:24:4927:4934	6783079	0	True				
ANR	6783951	ParameterType	int		6783079	0					
ANR	6783952	Identifier	argc		6783079	1					
ANR	6783953	Parameter	char * argv [ ]	145:34:4937:4949	6783079	1	True				
ANR	6783954	ParameterType	char * [ ]		6783079	0					
ANR	6783955	Identifier	argv		6783079	1					
ANR	6783956	Parameter	const char * shortopts	145:49:4952:4972	6783079	2	True				
ANR	6783957	ParameterType	const char *		6783079	0					
ANR	6783958	Identifier	shortopts		6783079	1					
ANR	6783959	Parameter	const struct option * longopts	146:24:4999:5027	6783079	3	True				
ANR	6783960	ParameterType	const struct option *		6783079	0					
ANR	6783961	Identifier	longopts		6783079	1					
ANR	6783962	Parameter	int * longind	146:55:5030:5041	6783079	4	True				
ANR	6783963	ParameterType	int *		6783079	0					
ANR	6783964	Identifier	longind		6783079	1					
ANR	6783965	Parameter	int long_only	147:24:5068:5080	6783079	5	True				
ANR	6783966	ParameterType	int		6783079	0					
ANR	6783967	Identifier	long_only		6783079	1					
ANR	6783968	CFGEntryNode	ENTRY		6783079		True				
ANR	6783969	CFGExitNode	EXIT		6783079		True				
ANR	6783970	Symbol	_my_getopt_internal		6783079						
ANR	6783971	Symbol	* * found		6783079						
ANR	6783972	Symbol	* argv		6783079						
ANR	6783973	Symbol	* ( longopts [ found ] . flag )		6783079						
ANR	6783974	Symbol	colon_mode		6783079						
ANR	6783975	Symbol	my_opterr		6783079						
ANR	6783976	Symbol	mode		6783079						
ANR	6783977	Symbol	longopts [ found ] . has_arg		6783079						
ANR	6783978	Symbol	strncmp		6783079						
ANR	6783979	Symbol	strlen		6783079						
ANR	6783980	Symbol	tmp		6783079						
ANR	6783981	Symbol	* shortoff		6783079						
ANR	6783982	Symbol	* * argv		6783079						
ANR	6783983	Symbol	my_getopt		6783079						
ANR	6783984	Symbol	* * i		6783079						
ANR	6783985	Symbol	offset		6783079						
ANR	6783986	Symbol	longind		6783079						
ANR	6783987	Symbol	longopts [ ind ] . name		6783079						
ANR	6783988	Symbol	stderr		6783079						
ANR	6783989	Symbol	long_only		6783079						
ANR	6783990	Symbol	opt		6783079						
ANR	6783991	Symbol	* * longopts		6783079						
ANR	6783992	Symbol	* my_optind		6783079						
ANR	6783993	Symbol	* ind		6783079						
ANR	6783994	Symbol	shortopts		6783079						
ANR	6783995	Symbol	* charind		6783079						
ANR	6783996	Symbol	* found		6783079						
ANR	6783997	Symbol	longopts [ found ] . val		6783079						
ANR	6783998	Symbol	charind		6783079						
ANR	6783999	Symbol	* longind		6783079						
ANR	6784000	Symbol	argv		6783079						
ANR	6784001	Symbol	longopts [ found ] . name		6783079						
ANR	6784002	Symbol	found		6783079						
ANR	6784003	Symbol	* longopts		6783079						
ANR	6784004	Symbol	ind		6783079						
ANR	6784005	Symbol	getenv		6783079						
ANR	6784006	Symbol	my_optopt		6783079						
ANR	6784007	Symbol	argc		6783079						
ANR	6784008	Symbol	* * my_optind		6783079						
ANR	6784009	Symbol	c		6783079						
ANR	6784010	Symbol	shortoff		6783079						
ANR	6784011	Symbol	i		6783079						
ANR	6784012	Symbol	j		6783079						
ANR	6784013	Symbol	k		6783079						
ANR	6784014	Symbol	hits		6783079						
ANR	6784015	Symbol	* i		6783079						
ANR	6784016	Symbol	my_optind		6783079						
ANR	6784017	Symbol	* k		6783079						
ANR	6784018	Symbol	* shortopts		6783079						
ANR	6784019	Symbol	* longopts [ found ] . flag		6783079						
ANR	6784020	Symbol	longopts		6783079						
ANR	6784021	Symbol	longopts [ found ] . flag		6783079						
ANR	6784022	Symbol	my_optarg		6783079						
ANR	6784023	Function	my_getopt_long	271:0:9637:9847							
ANR	6784024	FunctionDef	"my_getopt_long (int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind)"		6784023	0					
ANR	6784025	CompoundStatement		273:0:9768:9847	6784023	0					
ANR	6784026	ReturnStatement	"return _my_getopt_internal ( argc , argv , shortopts , longopts , longind , 0 ) ;"	274:4:9774:9845	6784023	0	True				
ANR	6784027	CallExpression	"_my_getopt_internal ( argc , argv , shortopts , longopts , longind , 0 )"		6784023	0					
ANR	6784028	Callee	_my_getopt_internal		6784023	0					
ANR	6784029	Identifier	_my_getopt_internal		6784023	0					
ANR	6784030	ArgumentList	argc		6784023	1					
ANR	6784031	Argument	argc		6784023	0					
ANR	6784032	Identifier	argc		6784023	0					
ANR	6784033	Argument	argv		6784023	1					
ANR	6784034	Identifier	argv		6784023	0					
ANR	6784035	Argument	shortopts		6784023	2					
ANR	6784036	Identifier	shortopts		6784023	0					
ANR	6784037	Argument	longopts		6784023	3					
ANR	6784038	Identifier	longopts		6784023	0					
ANR	6784039	Argument	longind		6784023	4					
ANR	6784040	Identifier	longind		6784023	0					
ANR	6784041	Argument	0		6784023	5					
ANR	6784042	PrimaryExpression	0		6784023	0					
ANR	6784043	ReturnType	int		6784023	1					
ANR	6784044	Identifier	my_getopt_long		6784023	2					
ANR	6784045	ParameterList	"int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind"		6784023	3					
ANR	6784046	Parameter	int argc	271:19:9656:9663	6784023	0	True				
ANR	6784047	ParameterType	int		6784023	0					
ANR	6784048	Identifier	argc		6784023	1					
ANR	6784049	Parameter	char * argv [ ]	271:29:9666:9678	6784023	1	True				
ANR	6784050	ParameterType	char * [ ]		6784023	0					
ANR	6784051	Identifier	argv		6784023	1					
ANR	6784052	Parameter	const char * shortopts	271:44:9681:9701	6784023	2	True				
ANR	6784053	ParameterType	const char *		6784023	0					
ANR	6784054	Identifier	shortopts		6784023	1					
ANR	6784055	Parameter	const struct option * longopts	272:19:9723:9751	6784023	3	True				
ANR	6784056	ParameterType	const struct option *		6784023	0					
ANR	6784057	Identifier	longopts		6784023	1					
ANR	6784058	Parameter	int * longind	272:50:9754:9765	6784023	4	True				
ANR	6784059	ParameterType	int *		6784023	0					
ANR	6784060	Identifier	longind		6784023	1					
ANR	6784061	CFGEntryNode	ENTRY		6784023		True				
ANR	6784062	CFGExitNode	EXIT		6784023		True				
ANR	6784063	Symbol	argc		6784023						
ANR	6784064	Symbol	_my_getopt_internal		6784023						
ANR	6784065	Symbol	shortopts		6784023						
ANR	6784066	Symbol	longind		6784023						
ANR	6784067	Symbol	longopts		6784023						
ANR	6784068	Symbol	argv		6784023						
ANR	6784069	Function	my_getopt_long_only	277:0:9850:10070							
ANR	6784070	FunctionDef	"my_getopt_long_only (int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind)"		6784069	0					
ANR	6784071	CompoundStatement		279:0:9991:10070	6784069	0					
ANR	6784072	ReturnStatement	"return _my_getopt_internal ( argc , argv , shortopts , longopts , longind , 1 ) ;"	280:4:9997:10068	6784069	0	True				
ANR	6784073	CallExpression	"_my_getopt_internal ( argc , argv , shortopts , longopts , longind , 1 )"		6784069	0					
ANR	6784074	Callee	_my_getopt_internal		6784069	0					
ANR	6784075	Identifier	_my_getopt_internal		6784069	0					
ANR	6784076	ArgumentList	argc		6784069	1					
ANR	6784077	Argument	argc		6784069	0					
ANR	6784078	Identifier	argc		6784069	0					
ANR	6784079	Argument	argv		6784069	1					
ANR	6784080	Identifier	argv		6784069	0					
ANR	6784081	Argument	shortopts		6784069	2					
ANR	6784082	Identifier	shortopts		6784069	0					
ANR	6784083	Argument	longopts		6784069	3					
ANR	6784084	Identifier	longopts		6784069	0					
ANR	6784085	Argument	longind		6784069	4					
ANR	6784086	Identifier	longind		6784069	0					
ANR	6784087	Argument	1		6784069	5					
ANR	6784088	PrimaryExpression	1		6784069	0					
ANR	6784089	ReturnType	int		6784069	1					
ANR	6784090	Identifier	my_getopt_long_only		6784069	2					
ANR	6784091	ParameterList	"int argc , char * argv [ ] , const char * shortopts , const struct option * longopts , int * longind"		6784069	3					
ANR	6784092	Parameter	int argc	277:24:9874:9881	6784069	0	True				
ANR	6784093	ParameterType	int		6784069	0					
ANR	6784094	Identifier	argc		6784069	1					
ANR	6784095	Parameter	char * argv [ ]	277:34:9884:9896	6784069	1	True				
ANR	6784096	ParameterType	char * [ ]		6784069	0					
ANR	6784097	Identifier	argv		6784069	1					
ANR	6784098	Parameter	const char * shortopts	277:49:9899:9919	6784069	2	True				
ANR	6784099	ParameterType	const char *		6784069	0					
ANR	6784100	Identifier	shortopts		6784069	1					
ANR	6784101	Parameter	const struct option * longopts	278:24:9946:9974	6784069	3	True				
ANR	6784102	ParameterType	const struct option *		6784069	0					
ANR	6784103	Identifier	longopts		6784069	1					
ANR	6784104	Parameter	int * longind	278:55:9977:9988	6784069	4	True				
ANR	6784105	ParameterType	int *		6784069	0					
ANR	6784106	Identifier	longind		6784069	1					
ANR	6784107	CFGEntryNode	ENTRY		6784069		True				
ANR	6784108	CFGExitNode	EXIT		6784069		True				
ANR	6784109	Symbol	argc		6784069						
ANR	6784110	Symbol	_my_getopt_internal		6784069						
ANR	6784111	Symbol	shortopts		6784069						
ANR	6784112	Symbol	longind		6784069						
ANR	6784113	Symbol	longopts		6784069						
ANR	6784114	Symbol	argv		6784069						
