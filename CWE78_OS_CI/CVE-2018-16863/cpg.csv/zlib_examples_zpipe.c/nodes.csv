command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11230459	File	data/converged/CVE-2018-16863_ghostpdl/zlib_examples_zpipe.c								
ANR	11230460	Function	def	36:0:1343:2877							
ANR	11230461	FunctionDef	"def (FILE * source , FILE * dest , int level)"		11230460	0					
ANR	11230462	CompoundStatement		37:0:1388:2877	11230460	0					
ANR	11230463	IdentifierDeclStatement	"int ret , flush ;"	38:4:1394:1408	11230460	0	True				
ANR	11230464	IdentifierDecl	ret		11230460	0					
ANR	11230465	IdentifierDeclType	int		11230460	0					
ANR	11230466	Identifier	ret		11230460	1					
ANR	11230467	IdentifierDecl	flush		11230460	1					
ANR	11230468	IdentifierDeclType	int		11230460	0					
ANR	11230469	Identifier	flush		11230460	1					
ANR	11230470	IdentifierDeclStatement	unsigned have ;	39:4:1414:1427	11230460	1	True				
ANR	11230471	IdentifierDecl	have		11230460	0					
ANR	11230472	IdentifierDeclType	unsigned		11230460	0					
ANR	11230473	Identifier	have		11230460	1					
ANR	11230474	IdentifierDeclStatement	z_stream strm ;	40:4:1433:1446	11230460	2	True				
ANR	11230475	IdentifierDecl	strm		11230460	0					
ANR	11230476	IdentifierDeclType	z_stream		11230460	0					
ANR	11230477	Identifier	strm		11230460	1					
ANR	11230478	IdentifierDeclStatement	unsigned char in [ CHUNK ] ;	41:4:1452:1475	11230460	3	True				
ANR	11230479	IdentifierDecl	in [ CHUNK ]		11230460	0					
ANR	11230480	IdentifierDeclType	unsigned char [ CHUNK ]		11230460	0					
ANR	11230481	Identifier	in		11230460	1					
ANR	11230482	Identifier	CHUNK		11230460	2					
ANR	11230483	IdentifierDeclStatement	unsigned char out [ CHUNK ] ;	42:4:1481:1505	11230460	4	True				
ANR	11230484	IdentifierDecl	out [ CHUNK ]		11230460	0					
ANR	11230485	IdentifierDeclType	unsigned char [ CHUNK ]		11230460	0					
ANR	11230486	Identifier	out		11230460	1					
ANR	11230487	Identifier	CHUNK		11230460	2					
ANR	11230488	ExpressionStatement	strm . zalloc = Z_NULL	45:4:1545:1565	11230460	5	True				
ANR	11230489	AssignmentExpression	strm . zalloc = Z_NULL		11230460	0		=			
ANR	11230490	MemberAccess	strm . zalloc		11230460	0					
ANR	11230491	Identifier	strm		11230460	0					
ANR	11230492	Identifier	zalloc		11230460	1					
ANR	11230493	Identifier	Z_NULL		11230460	1					
ANR	11230494	ExpressionStatement	strm . zfree = Z_NULL	46:4:1571:1590	11230460	6	True				
ANR	11230495	AssignmentExpression	strm . zfree = Z_NULL		11230460	0		=			
ANR	11230496	MemberAccess	strm . zfree		11230460	0					
ANR	11230497	Identifier	strm		11230460	0					
ANR	11230498	Identifier	zfree		11230460	1					
ANR	11230499	Identifier	Z_NULL		11230460	1					
ANR	11230500	ExpressionStatement	strm . opaque = Z_NULL	47:4:1596:1616	11230460	7	True				
ANR	11230501	AssignmentExpression	strm . opaque = Z_NULL		11230460	0		=			
ANR	11230502	MemberAccess	strm . opaque		11230460	0					
ANR	11230503	Identifier	strm		11230460	0					
ANR	11230504	Identifier	opaque		11230460	1					
ANR	11230505	Identifier	Z_NULL		11230460	1					
ANR	11230506	ExpressionStatement	"ret = deflateInit ( & strm , level )"	48:4:1622:1653	11230460	8	True				
ANR	11230507	AssignmentExpression	"ret = deflateInit ( & strm , level )"		11230460	0		=			
ANR	11230508	Identifier	ret		11230460	0					
ANR	11230509	CallExpression	"deflateInit ( & strm , level )"		11230460	1					
ANR	11230510	Callee	deflateInit		11230460	0					
ANR	11230511	Identifier	deflateInit		11230460	0					
ANR	11230512	ArgumentList	& strm		11230460	1					
ANR	11230513	Argument	& strm		11230460	0					
ANR	11230514	UnaryOperationExpression	& strm		11230460	0					
ANR	11230515	UnaryOperator	&		11230460	0					
ANR	11230516	Identifier	strm		11230460	1					
ANR	11230517	Argument	level		11230460	1					
ANR	11230518	Identifier	level		11230460	0					
ANR	11230519	IfStatement	if ( ret != Z_OK )		11230460	9					
ANR	11230520	Condition	ret != Z_OK	49:8:1663:1673	11230460	0	True				
ANR	11230521	EqualityExpression	ret != Z_OK		11230460	0		!=			
ANR	11230522	Identifier	ret		11230460	0					
ANR	11230523	Identifier	Z_OK		11230460	1					
ANR	11230524	ReturnStatement	return ret ;	50:8:1684:1694	11230460	1	True				
ANR	11230525	Identifier	ret		11230460	0					
ANR	11230526	DoStatement	do		11230460	10					
ANR	11230527	CompoundStatement		17:7:352:352	11230460	0					
ANR	11230528	ExpressionStatement	"strm . avail_in = fread ( in , 1 , CHUNK , source )"	54:8:1751:1794	11230460	0	True				
ANR	11230529	AssignmentExpression	"strm . avail_in = fread ( in , 1 , CHUNK , source )"		11230460	0		=			
ANR	11230530	MemberAccess	strm . avail_in		11230460	0					
ANR	11230531	Identifier	strm		11230460	0					
ANR	11230532	Identifier	avail_in		11230460	1					
ANR	11230533	CallExpression	"fread ( in , 1 , CHUNK , source )"		11230460	1					
ANR	11230534	Callee	fread		11230460	0					
ANR	11230535	Identifier	fread		11230460	0					
ANR	11230536	ArgumentList	in		11230460	1					
ANR	11230537	Argument	in		11230460	0					
ANR	11230538	Identifier	in		11230460	0					
ANR	11230539	Argument	1		11230460	1					
ANR	11230540	PrimaryExpression	1		11230460	0					
ANR	11230541	Argument	CHUNK		11230460	2					
ANR	11230542	Identifier	CHUNK		11230460	0					
ANR	11230543	Argument	source		11230460	3					
ANR	11230544	Identifier	source		11230460	0					
ANR	11230545	IfStatement	if ( ferror ( source ) )		11230460	1					
ANR	11230546	Condition	ferror ( source )	55:12:1808:1821	11230460	0	True				
ANR	11230547	CallExpression	ferror ( source )		11230460	0					
ANR	11230548	Callee	ferror		11230460	0					
ANR	11230549	Identifier	ferror		11230460	0					
ANR	11230550	ArgumentList	source		11230460	1					
ANR	11230551	Argument	source		11230460	0					
ANR	11230552	Identifier	source		11230460	0					
ANR	11230553	CompoundStatement		19:28:435:435	11230460	1					
ANR	11230554	ExpressionStatement	( void ) deflateEnd ( & strm )	56:12:1838:1861	11230460	0	True				
ANR	11230555	CastExpression	( void ) deflateEnd ( & strm )		11230460	0					
ANR	11230556	CastTarget	void		11230460	0					
ANR	11230557	CallExpression	deflateEnd ( & strm )		11230460	1					
ANR	11230558	Callee	deflateEnd		11230460	0					
ANR	11230559	Identifier	deflateEnd		11230460	0					
ANR	11230560	ArgumentList	& strm		11230460	1					
ANR	11230561	Argument	& strm		11230460	0					
ANR	11230562	UnaryOperationExpression	& strm		11230460	0					
ANR	11230563	UnaryOperator	&		11230460	0					
ANR	11230564	Identifier	strm		11230460	1					
ANR	11230565	ReturnStatement	return Z_ERRNO ;	57:12:1875:1889	11230460	1	True				
ANR	11230566	Identifier	Z_ERRNO		11230460	0					
ANR	11230567	ExpressionStatement	flush = feof ( source ) ? Z_FINISH : Z_NO_FLUSH	59:8:1909:1953	11230460	2	True				
ANR	11230568	AssignmentExpression	flush = feof ( source ) ? Z_FINISH : Z_NO_FLUSH		11230460	0		=			
ANR	11230569	Identifier	flush		11230460	0					
ANR	11230570	ConditionalExpression	feof ( source ) ? Z_FINISH : Z_NO_FLUSH		11230460	1					
ANR	11230571	Condition	feof ( source )		11230460	0					
ANR	11230572	CallExpression	feof ( source )		11230460	0					
ANR	11230573	Callee	feof		11230460	0					
ANR	11230574	Identifier	feof		11230460	0					
ANR	11230575	ArgumentList	source		11230460	1					
ANR	11230576	Argument	source		11230460	0					
ANR	11230577	Identifier	source		11230460	0					
ANR	11230578	Identifier	Z_FINISH		11230460	1					
ANR	11230579	Identifier	Z_NO_FLUSH		11230460	2					
ANR	11230580	ExpressionStatement	strm . next_in = in	60:8:1963:1980	11230460	3	True				
ANR	11230581	AssignmentExpression	strm . next_in = in		11230460	0		=			
ANR	11230582	MemberAccess	strm . next_in		11230460	0					
ANR	11230583	Identifier	strm		11230460	0					
ANR	11230584	Identifier	next_in		11230460	1					
ANR	11230585	Identifier	in		11230460	1					
ANR	11230586	DoStatement	do		11230460	4					
ANR	11230587	CompoundStatement		28:11:736:736	11230460	0					
ANR	11230588	ExpressionStatement	strm . avail_out = CHUNK	65:12:2139:2161	11230460	0	True				
ANR	11230589	AssignmentExpression	strm . avail_out = CHUNK		11230460	0		=			
ANR	11230590	MemberAccess	strm . avail_out		11230460	0					
ANR	11230591	Identifier	strm		11230460	0					
ANR	11230592	Identifier	avail_out		11230460	1					
ANR	11230593	Identifier	CHUNK		11230460	1					
ANR	11230594	ExpressionStatement	strm . next_out = out	66:12:2175:2194	11230460	1	True				
ANR	11230595	AssignmentExpression	strm . next_out = out		11230460	0		=			
ANR	11230596	MemberAccess	strm . next_out		11230460	0					
ANR	11230597	Identifier	strm		11230460	0					
ANR	11230598	Identifier	next_out		11230460	1					
ANR	11230599	Identifier	out		11230460	1					
ANR	11230600	ExpressionStatement	"ret = deflate ( & strm , flush )"	67:12:2208:2235	11230460	2	True				
ANR	11230601	AssignmentExpression	"ret = deflate ( & strm , flush )"		11230460	0		=			
ANR	11230602	Identifier	ret		11230460	0					
ANR	11230603	CallExpression	"deflate ( & strm , flush )"		11230460	1					
ANR	11230604	Callee	deflate		11230460	0					
ANR	11230605	Identifier	deflate		11230460	0					
ANR	11230606	ArgumentList	& strm		11230460	1					
ANR	11230607	Argument	& strm		11230460	0					
ANR	11230608	UnaryOperationExpression	& strm		11230460	0					
ANR	11230609	UnaryOperator	&		11230460	0					
ANR	11230610	Identifier	strm		11230460	1					
ANR	11230611	Argument	flush		11230460	1					
ANR	11230612	Identifier	flush		11230460	0					
ANR	11230613	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	68:12:2278:2307	11230460	3	True				
ANR	11230614	CallExpression	assert ( ret != Z_STREAM_ERROR )		11230460	0					
ANR	11230615	Callee	assert		11230460	0					
ANR	11230616	Identifier	assert		11230460	0					
ANR	11230617	ArgumentList	ret != Z_STREAM_ERROR		11230460	1					
ANR	11230618	Argument	ret != Z_STREAM_ERROR		11230460	0					
ANR	11230619	EqualityExpression	ret != Z_STREAM_ERROR		11230460	0		!=			
ANR	11230620	Identifier	ret		11230460	0					
ANR	11230621	Identifier	Z_STREAM_ERROR		11230460	1					
ANR	11230622	ExpressionStatement	have = CHUNK - strm . avail_out	69:12:2348:2377	11230460	4	True				
ANR	11230623	AssignmentExpression	have = CHUNK - strm . avail_out		11230460	0		=			
ANR	11230624	Identifier	have		11230460	0					
ANR	11230625	AdditiveExpression	CHUNK - strm . avail_out		11230460	1		-			
ANR	11230626	Identifier	CHUNK		11230460	0					
ANR	11230627	MemberAccess	strm . avail_out		11230460	1					
ANR	11230628	Identifier	strm		11230460	0					
ANR	11230629	Identifier	avail_out		11230460	1					
ANR	11230630	IfStatement	"if ( fwrite ( out , 1 , have , dest ) != have || ferror ( dest ) )"		11230460	5					
ANR	11230631	Condition	"fwrite ( out , 1 , have , dest ) != have || ferror ( dest )"	70:16:2395:2444	11230460	0	True				
ANR	11230632	OrExpression	"fwrite ( out , 1 , have , dest ) != have || ferror ( dest )"		11230460	0		||			
ANR	11230633	EqualityExpression	"fwrite ( out , 1 , have , dest ) != have"		11230460	0		!=			
ANR	11230634	CallExpression	"fwrite ( out , 1 , have , dest )"		11230460	0					
ANR	11230635	Callee	fwrite		11230460	0					
ANR	11230636	Identifier	fwrite		11230460	0					
ANR	11230637	ArgumentList	out		11230460	1					
ANR	11230638	Argument	out		11230460	0					
ANR	11230639	Identifier	out		11230460	0					
ANR	11230640	Argument	1		11230460	1					
ANR	11230641	PrimaryExpression	1		11230460	0					
ANR	11230642	Argument	have		11230460	2					
ANR	11230643	Identifier	have		11230460	0					
ANR	11230644	Argument	dest		11230460	3					
ANR	11230645	Identifier	dest		11230460	0					
ANR	11230646	Identifier	have		11230460	1					
ANR	11230647	CallExpression	ferror ( dest )		11230460	1					
ANR	11230648	Callee	ferror		11230460	0					
ANR	11230649	Identifier	ferror		11230460	0					
ANR	11230650	ArgumentList	dest		11230460	1					
ANR	11230651	Argument	dest		11230460	0					
ANR	11230652	Identifier	dest		11230460	0					
ANR	11230653	CompoundStatement		34:68:1058:1058	11230460	1					
ANR	11230654	ExpressionStatement	( void ) deflateEnd ( & strm )	71:16:2465:2488	11230460	0	True				
ANR	11230655	CastExpression	( void ) deflateEnd ( & strm )		11230460	0					
ANR	11230656	CastTarget	void		11230460	0					
ANR	11230657	CallExpression	deflateEnd ( & strm )		11230460	1					
ANR	11230658	Callee	deflateEnd		11230460	0					
ANR	11230659	Identifier	deflateEnd		11230460	0					
ANR	11230660	ArgumentList	& strm		11230460	1					
ANR	11230661	Argument	& strm		11230460	0					
ANR	11230662	UnaryOperationExpression	& strm		11230460	0					
ANR	11230663	UnaryOperator	&		11230460	0					
ANR	11230664	Identifier	strm		11230460	1					
ANR	11230665	ReturnStatement	return Z_ERRNO ;	72:16:2506:2520	11230460	1	True				
ANR	11230666	Identifier	Z_ERRNO		11230460	0					
ANR	11230667	Condition	strm . avail_out == 0	74:17:2553:2571	11230460	1	True				
ANR	11230668	EqualityExpression	strm . avail_out == 0		11230460	0		==			
ANR	11230669	MemberAccess	strm . avail_out		11230460	0					
ANR	11230670	Identifier	strm		11230460	0					
ANR	11230671	Identifier	avail_out		11230460	1					
ANR	11230672	PrimaryExpression	0		11230460	1					
ANR	11230673	ExpressionStatement	assert ( strm . avail_in == 0 )	75:8:2583:2609	11230460	5	True				
ANR	11230674	CallExpression	assert ( strm . avail_in == 0 )		11230460	0					
ANR	11230675	Callee	assert		11230460	0					
ANR	11230676	Identifier	assert		11230460	0					
ANR	11230677	ArgumentList	strm . avail_in == 0		11230460	1					
ANR	11230678	Argument	strm . avail_in == 0		11230460	0					
ANR	11230679	EqualityExpression	strm . avail_in == 0		11230460	0		==			
ANR	11230680	MemberAccess	strm . avail_in		11230460	0					
ANR	11230681	Identifier	strm		11230460	0					
ANR	11230682	Identifier	avail_in		11230460	1					
ANR	11230683	PrimaryExpression	0		11230460	1					
ANR	11230684	Condition	flush != Z_FINISH	78:13:2710:2726	11230460	1	True				
ANR	11230685	EqualityExpression	flush != Z_FINISH		11230460	0		!=			
ANR	11230686	Identifier	flush		11230460	0					
ANR	11230687	Identifier	Z_FINISH		11230460	1					
ANR	11230688	ExpressionStatement	assert ( ret == Z_STREAM_END )	79:4:2734:2761	11230460	11	True				
ANR	11230689	CallExpression	assert ( ret == Z_STREAM_END )		11230460	0					
ANR	11230690	Callee	assert		11230460	0					
ANR	11230691	Identifier	assert		11230460	0					
ANR	11230692	ArgumentList	ret == Z_STREAM_END		11230460	1					
ANR	11230693	Argument	ret == Z_STREAM_END		11230460	0					
ANR	11230694	EqualityExpression	ret == Z_STREAM_END		11230460	0		==			
ANR	11230695	Identifier	ret		11230460	0					
ANR	11230696	Identifier	Z_STREAM_END		11230460	1					
ANR	11230697	ExpressionStatement	( void ) deflateEnd ( & strm )	82:4:2835:2858	11230460	12	True				
ANR	11230698	CastExpression	( void ) deflateEnd ( & strm )		11230460	0					
ANR	11230699	CastTarget	void		11230460	0					
ANR	11230700	CallExpression	deflateEnd ( & strm )		11230460	1					
ANR	11230701	Callee	deflateEnd		11230460	0					
ANR	11230702	Identifier	deflateEnd		11230460	0					
ANR	11230703	ArgumentList	& strm		11230460	1					
ANR	11230704	Argument	& strm		11230460	0					
ANR	11230705	UnaryOperationExpression	& strm		11230460	0					
ANR	11230706	UnaryOperator	&		11230460	0					
ANR	11230707	Identifier	strm		11230460	1					
ANR	11230708	ReturnStatement	return Z_OK ;	83:4:2864:2875	11230460	13	True				
ANR	11230709	Identifier	Z_OK		11230460	0					
ANR	11230710	ReturnType	int		11230460	1					
ANR	11230711	Identifier	def		11230460	2					
ANR	11230712	ParameterList	"FILE * source , FILE * dest , int level"		11230460	3					
ANR	11230713	Parameter	FILE * source	36:8:1351:1362	11230460	0	True				
ANR	11230714	ParameterType	FILE *		11230460	0					
ANR	11230715	Identifier	source		11230460	1					
ANR	11230716	Parameter	FILE * dest	36:22:1365:1374	11230460	1	True				
ANR	11230717	ParameterType	FILE *		11230460	0					
ANR	11230718	Identifier	dest		11230460	1					
ANR	11230719	Parameter	int level	36:34:1377:1385	11230460	2	True				
ANR	11230720	ParameterType	int		11230460	0					
ANR	11230721	Identifier	level		11230460	1					
ANR	11230722	CFGEntryNode	ENTRY		11230460		True				
ANR	11230723	CFGExitNode	EXIT		11230460		True				
ANR	11230724	Symbol	Z_STREAM_ERROR		11230460						
ANR	11230725	Symbol	& strm		11230460						
ANR	11230726	Symbol	strm . zalloc		11230460						
ANR	11230727	Symbol	source		11230460						
ANR	11230728	Symbol	Z_OK		11230460						
ANR	11230729	Symbol	dest		11230460						
ANR	11230730	Symbol	out		11230460						
ANR	11230731	Symbol	strm . next_in		11230460						
ANR	11230732	Symbol	Z_NO_FLUSH		11230460						
ANR	11230733	Symbol	strm . opaque		11230460						
ANR	11230734	Symbol	flush		11230460						
ANR	11230735	Symbol	have		11230460						
ANR	11230736	Symbol	Z_STREAM_END		11230460						
ANR	11230737	Symbol	CHUNK		11230460						
ANR	11230738	Symbol	ret		11230460						
ANR	11230739	Symbol	Z_ERRNO		11230460						
ANR	11230740	Symbol	level		11230460						
ANR	11230741	Symbol	in		11230460						
ANR	11230742	Symbol	deflateInit		11230460						
ANR	11230743	Symbol	fwrite		11230460						
ANR	11230744	Symbol	strm		11230460						
ANR	11230745	Symbol	Z_FINISH		11230460						
ANR	11230746	Symbol	fread		11230460						
ANR	11230747	Symbol	ferror		11230460						
ANR	11230748	Symbol	deflate		11230460						
ANR	11230749	Symbol	strm . avail_out		11230460						
ANR	11230750	Symbol	strm . next_out		11230460						
ANR	11230751	Symbol	feof		11230460						
ANR	11230752	Symbol	strm . zfree		11230460						
ANR	11230753	Symbol	Z_NULL		11230460						
ANR	11230754	Symbol	strm . avail_in		11230460						
ANR	11230755	Function	inf	92:0:3274:4927							
ANR	11230756	FunctionDef	"inf (FILE * source , FILE * dest)"		11230755	0					
ANR	11230757	CompoundStatement		93:0:3308:4927	11230755	0					
ANR	11230758	IdentifierDeclStatement	int ret ;	94:4:3314:3321	11230755	0	True				
ANR	11230759	IdentifierDecl	ret		11230755	0					
ANR	11230760	IdentifierDeclType	int		11230755	0					
ANR	11230761	Identifier	ret		11230755	1					
ANR	11230762	IdentifierDeclStatement	unsigned have ;	95:4:3327:3340	11230755	1	True				
ANR	11230763	IdentifierDecl	have		11230755	0					
ANR	11230764	IdentifierDeclType	unsigned		11230755	0					
ANR	11230765	Identifier	have		11230755	1					
ANR	11230766	IdentifierDeclStatement	z_stream strm ;	96:4:3346:3359	11230755	2	True				
ANR	11230767	IdentifierDecl	strm		11230755	0					
ANR	11230768	IdentifierDeclType	z_stream		11230755	0					
ANR	11230769	Identifier	strm		11230755	1					
ANR	11230770	IdentifierDeclStatement	unsigned char in [ CHUNK ] ;	97:4:3365:3388	11230755	3	True				
ANR	11230771	IdentifierDecl	in [ CHUNK ]		11230755	0					
ANR	11230772	IdentifierDeclType	unsigned char [ CHUNK ]		11230755	0					
ANR	11230773	Identifier	in		11230755	1					
ANR	11230774	Identifier	CHUNK		11230755	2					
ANR	11230775	IdentifierDeclStatement	unsigned char out [ CHUNK ] ;	98:4:3394:3418	11230755	4	True				
ANR	11230776	IdentifierDecl	out [ CHUNK ]		11230755	0					
ANR	11230777	IdentifierDeclType	unsigned char [ CHUNK ]		11230755	0					
ANR	11230778	Identifier	out		11230755	1					
ANR	11230779	Identifier	CHUNK		11230755	2					
ANR	11230780	ExpressionStatement	strm . zalloc = Z_NULL	101:4:3458:3478	11230755	5	True				
ANR	11230781	AssignmentExpression	strm . zalloc = Z_NULL		11230755	0		=			
ANR	11230782	MemberAccess	strm . zalloc		11230755	0					
ANR	11230783	Identifier	strm		11230755	0					
ANR	11230784	Identifier	zalloc		11230755	1					
ANR	11230785	Identifier	Z_NULL		11230755	1					
ANR	11230786	ExpressionStatement	strm . zfree = Z_NULL	102:4:3484:3503	11230755	6	True				
ANR	11230787	AssignmentExpression	strm . zfree = Z_NULL		11230755	0		=			
ANR	11230788	MemberAccess	strm . zfree		11230755	0					
ANR	11230789	Identifier	strm		11230755	0					
ANR	11230790	Identifier	zfree		11230755	1					
ANR	11230791	Identifier	Z_NULL		11230755	1					
ANR	11230792	ExpressionStatement	strm . opaque = Z_NULL	103:4:3509:3529	11230755	7	True				
ANR	11230793	AssignmentExpression	strm . opaque = Z_NULL		11230755	0		=			
ANR	11230794	MemberAccess	strm . opaque		11230755	0					
ANR	11230795	Identifier	strm		11230755	0					
ANR	11230796	Identifier	opaque		11230755	1					
ANR	11230797	Identifier	Z_NULL		11230755	1					
ANR	11230798	ExpressionStatement	strm . avail_in = 0	104:4:3535:3552	11230755	8	True				
ANR	11230799	AssignmentExpression	strm . avail_in = 0		11230755	0		=			
ANR	11230800	MemberAccess	strm . avail_in		11230755	0					
ANR	11230801	Identifier	strm		11230755	0					
ANR	11230802	Identifier	avail_in		11230755	1					
ANR	11230803	PrimaryExpression	0		11230755	1					
ANR	11230804	ExpressionStatement	strm . next_in = Z_NULL	105:4:3558:3579	11230755	9	True				
ANR	11230805	AssignmentExpression	strm . next_in = Z_NULL		11230755	0		=			
ANR	11230806	MemberAccess	strm . next_in		11230755	0					
ANR	11230807	Identifier	strm		11230755	0					
ANR	11230808	Identifier	next_in		11230755	1					
ANR	11230809	Identifier	Z_NULL		11230755	1					
ANR	11230810	ExpressionStatement	ret = inflateInit ( & strm )	106:4:3585:3609	11230755	10	True				
ANR	11230811	AssignmentExpression	ret = inflateInit ( & strm )		11230755	0		=			
ANR	11230812	Identifier	ret		11230755	0					
ANR	11230813	CallExpression	inflateInit ( & strm )		11230755	1					
ANR	11230814	Callee	inflateInit		11230755	0					
ANR	11230815	Identifier	inflateInit		11230755	0					
ANR	11230816	ArgumentList	& strm		11230755	1					
ANR	11230817	Argument	& strm		11230755	0					
ANR	11230818	UnaryOperationExpression	& strm		11230755	0					
ANR	11230819	UnaryOperator	&		11230755	0					
ANR	11230820	Identifier	strm		11230755	1					
ANR	11230821	IfStatement	if ( ret != Z_OK )		11230755	11					
ANR	11230822	Condition	ret != Z_OK	107:8:3619:3629	11230755	0	True				
ANR	11230823	EqualityExpression	ret != Z_OK		11230755	0		!=			
ANR	11230824	Identifier	ret		11230755	0					
ANR	11230825	Identifier	Z_OK		11230755	1					
ANR	11230826	ReturnStatement	return ret ;	108:8:3640:3650	11230755	1	True				
ANR	11230827	Identifier	ret		11230755	0					
ANR	11230828	DoStatement	do		11230755	12					
ANR	11230829	CompoundStatement		19:7:413:413	11230755	0					
ANR	11230830	ExpressionStatement	"strm . avail_in = fread ( in , 1 , CHUNK , source )"	112:8:3732:3775	11230755	0	True				
ANR	11230831	AssignmentExpression	"strm . avail_in = fread ( in , 1 , CHUNK , source )"		11230755	0		=			
ANR	11230832	MemberAccess	strm . avail_in		11230755	0					
ANR	11230833	Identifier	strm		11230755	0					
ANR	11230834	Identifier	avail_in		11230755	1					
ANR	11230835	CallExpression	"fread ( in , 1 , CHUNK , source )"		11230755	1					
ANR	11230836	Callee	fread		11230755	0					
ANR	11230837	Identifier	fread		11230755	0					
ANR	11230838	ArgumentList	in		11230755	1					
ANR	11230839	Argument	in		11230755	0					
ANR	11230840	Identifier	in		11230755	0					
ANR	11230841	Argument	1		11230755	1					
ANR	11230842	PrimaryExpression	1		11230755	0					
ANR	11230843	Argument	CHUNK		11230755	2					
ANR	11230844	Identifier	CHUNK		11230755	0					
ANR	11230845	Argument	source		11230755	3					
ANR	11230846	Identifier	source		11230755	0					
ANR	11230847	IfStatement	if ( ferror ( source ) )		11230755	1					
ANR	11230848	Condition	ferror ( source )	113:12:3789:3802	11230755	0	True				
ANR	11230849	CallExpression	ferror ( source )		11230755	0					
ANR	11230850	Callee	ferror		11230755	0					
ANR	11230851	Identifier	ferror		11230755	0					
ANR	11230852	ArgumentList	source		11230755	1					
ANR	11230853	Argument	source		11230755	0					
ANR	11230854	Identifier	source		11230755	0					
ANR	11230855	CompoundStatement		21:28:496:496	11230755	1					
ANR	11230856	ExpressionStatement	( void ) inflateEnd ( & strm )	114:12:3819:3842	11230755	0	True				
ANR	11230857	CastExpression	( void ) inflateEnd ( & strm )		11230755	0					
ANR	11230858	CastTarget	void		11230755	0					
ANR	11230859	CallExpression	inflateEnd ( & strm )		11230755	1					
ANR	11230860	Callee	inflateEnd		11230755	0					
ANR	11230861	Identifier	inflateEnd		11230755	0					
ANR	11230862	ArgumentList	& strm		11230755	1					
ANR	11230863	Argument	& strm		11230755	0					
ANR	11230864	UnaryOperationExpression	& strm		11230755	0					
ANR	11230865	UnaryOperator	&		11230755	0					
ANR	11230866	Identifier	strm		11230755	1					
ANR	11230867	ReturnStatement	return Z_ERRNO ;	115:12:3856:3870	11230755	1	True				
ANR	11230868	Identifier	Z_ERRNO		11230755	0					
ANR	11230869	IfStatement	if ( strm . avail_in == 0 )		11230755	2					
ANR	11230870	Condition	strm . avail_in == 0	117:12:3894:3911	11230755	0	True				
ANR	11230871	EqualityExpression	strm . avail_in == 0		11230755	0		==			
ANR	11230872	MemberAccess	strm . avail_in		11230755	0					
ANR	11230873	Identifier	strm		11230755	0					
ANR	11230874	Identifier	avail_in		11230755	1					
ANR	11230875	PrimaryExpression	0		11230755	1					
ANR	11230876	BreakStatement	break ;	118:12:3926:3931	11230755	1	True				
ANR	11230877	ExpressionStatement	strm . next_in = in	119:8:3941:3958	11230755	3	True				
ANR	11230878	AssignmentExpression	strm . next_in = in		11230755	0		=			
ANR	11230879	MemberAccess	strm . next_in		11230755	0					
ANR	11230880	Identifier	strm		11230755	0					
ANR	11230881	Identifier	next_in		11230755	1					
ANR	11230882	Identifier	in		11230755	1					
ANR	11230883	DoStatement	do		11230755	4					
ANR	11230884	CompoundStatement		30:11:729:729	11230755	0					
ANR	11230885	ExpressionStatement	strm . avail_out = CHUNK	123:12:4052:4074	11230755	0	True				
ANR	11230886	AssignmentExpression	strm . avail_out = CHUNK		11230755	0		=			
ANR	11230887	MemberAccess	strm . avail_out		11230755	0					
ANR	11230888	Identifier	strm		11230755	0					
ANR	11230889	Identifier	avail_out		11230755	1					
ANR	11230890	Identifier	CHUNK		11230755	1					
ANR	11230891	ExpressionStatement	strm . next_out = out	124:12:4088:4107	11230755	1	True				
ANR	11230892	AssignmentExpression	strm . next_out = out		11230755	0		=			
ANR	11230893	MemberAccess	strm . next_out		11230755	0					
ANR	11230894	Identifier	strm		11230755	0					
ANR	11230895	Identifier	next_out		11230755	1					
ANR	11230896	Identifier	out		11230755	1					
ANR	11230897	ExpressionStatement	"ret = inflate ( & strm , Z_NO_FLUSH )"	125:12:4121:4153	11230755	2	True				
ANR	11230898	AssignmentExpression	"ret = inflate ( & strm , Z_NO_FLUSH )"		11230755	0		=			
ANR	11230899	Identifier	ret		11230755	0					
ANR	11230900	CallExpression	"inflate ( & strm , Z_NO_FLUSH )"		11230755	1					
ANR	11230901	Callee	inflate		11230755	0					
ANR	11230902	Identifier	inflate		11230755	0					
ANR	11230903	ArgumentList	& strm		11230755	1					
ANR	11230904	Argument	& strm		11230755	0					
ANR	11230905	UnaryOperationExpression	& strm		11230755	0					
ANR	11230906	UnaryOperator	&		11230755	0					
ANR	11230907	Identifier	strm		11230755	1					
ANR	11230908	Argument	Z_NO_FLUSH		11230755	1					
ANR	11230909	Identifier	Z_NO_FLUSH		11230755	0					
ANR	11230910	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	126:12:4167:4196	11230755	3	True				
ANR	11230911	CallExpression	assert ( ret != Z_STREAM_ERROR )		11230755	0					
ANR	11230912	Callee	assert		11230755	0					
ANR	11230913	Identifier	assert		11230755	0					
ANR	11230914	ArgumentList	ret != Z_STREAM_ERROR		11230755	1					
ANR	11230915	Argument	ret != Z_STREAM_ERROR		11230755	0					
ANR	11230916	EqualityExpression	ret != Z_STREAM_ERROR		11230755	0		!=			
ANR	11230917	Identifier	ret		11230755	0					
ANR	11230918	Identifier	Z_STREAM_ERROR		11230755	1					
ANR	11230919	SwitchStatement	switch ( ret )		11230755	4					
ANR	11230920	Condition	ret	127:20:4245:4247	11230755	0	True				
ANR	11230921	Identifier	ret		11230755	0					
ANR	11230922	CompoundStatement		35:25:941:941	11230755	1					
ANR	11230923	Label	case Z_NEED_DICT :	128:12:4264:4280	11230755	0	True				
ANR	11230924	Identifier	Z_NEED_DICT		11230755	0					
ANR	11230925	ExpressionStatement	ret = Z_DATA_ERROR	129:16:4298:4316	11230755	1	True				
ANR	11230926	AssignmentExpression	ret = Z_DATA_ERROR		11230755	0		=			
ANR	11230927	Identifier	ret		11230755	0					
ANR	11230928	Identifier	Z_DATA_ERROR		11230755	1					
ANR	11230929	Label	case Z_DATA_ERROR :	130:12:4357:4374	11230755	2	True				
ANR	11230930	Identifier	Z_DATA_ERROR		11230755	0					
ANR	11230931	Label	case Z_MEM_ERROR :	131:12:4388:4404	11230755	3	True				
ANR	11230932	Identifier	Z_MEM_ERROR		11230755	0					
ANR	11230933	ExpressionStatement	( void ) inflateEnd ( & strm )	132:16:4422:4445	11230755	4	True				
ANR	11230934	CastExpression	( void ) inflateEnd ( & strm )		11230755	0					
ANR	11230935	CastTarget	void		11230755	0					
ANR	11230936	CallExpression	inflateEnd ( & strm )		11230755	1					
ANR	11230937	Callee	inflateEnd		11230755	0					
ANR	11230938	Identifier	inflateEnd		11230755	0					
ANR	11230939	ArgumentList	& strm		11230755	1					
ANR	11230940	Argument	& strm		11230755	0					
ANR	11230941	UnaryOperationExpression	& strm		11230755	0					
ANR	11230942	UnaryOperator	&		11230755	0					
ANR	11230943	Identifier	strm		11230755	1					
ANR	11230944	ReturnStatement	return ret ;	133:16:4463:4473	11230755	5	True				
ANR	11230945	Identifier	ret		11230755	0					
ANR	11230946	ExpressionStatement	have = CHUNK - strm . avail_out	135:12:4501:4530	11230755	5	True				
ANR	11230947	AssignmentExpression	have = CHUNK - strm . avail_out		11230755	0		=			
ANR	11230948	Identifier	have		11230755	0					
ANR	11230949	AdditiveExpression	CHUNK - strm . avail_out		11230755	1		-			
ANR	11230950	Identifier	CHUNK		11230755	0					
ANR	11230951	MemberAccess	strm . avail_out		11230755	1					
ANR	11230952	Identifier	strm		11230755	0					
ANR	11230953	Identifier	avail_out		11230755	1					
ANR	11230954	IfStatement	"if ( fwrite ( out , 1 , have , dest ) != have || ferror ( dest ) )"		11230755	6					
ANR	11230955	Condition	"fwrite ( out , 1 , have , dest ) != have || ferror ( dest )"	136:16:4548:4597	11230755	0	True				
ANR	11230956	OrExpression	"fwrite ( out , 1 , have , dest ) != have || ferror ( dest )"		11230755	0		||			
ANR	11230957	EqualityExpression	"fwrite ( out , 1 , have , dest ) != have"		11230755	0		!=			
ANR	11230958	CallExpression	"fwrite ( out , 1 , have , dest )"		11230755	0					
ANR	11230959	Callee	fwrite		11230755	0					
ANR	11230960	Identifier	fwrite		11230755	0					
ANR	11230961	ArgumentList	out		11230755	1					
ANR	11230962	Argument	out		11230755	0					
ANR	11230963	Identifier	out		11230755	0					
ANR	11230964	Argument	1		11230755	1					
ANR	11230965	PrimaryExpression	1		11230755	0					
ANR	11230966	Argument	have		11230755	2					
ANR	11230967	Identifier	have		11230755	0					
ANR	11230968	Argument	dest		11230755	3					
ANR	11230969	Identifier	dest		11230755	0					
ANR	11230970	Identifier	have		11230755	1					
ANR	11230971	CallExpression	ferror ( dest )		11230755	1					
ANR	11230972	Callee	ferror		11230755	0					
ANR	11230973	Identifier	ferror		11230755	0					
ANR	11230974	ArgumentList	dest		11230755	1					
ANR	11230975	Argument	dest		11230755	0					
ANR	11230976	Identifier	dest		11230755	0					
ANR	11230977	CompoundStatement		44:68:1291:1291	11230755	1					
ANR	11230978	ExpressionStatement	( void ) inflateEnd ( & strm )	137:16:4618:4641	11230755	0	True				
ANR	11230979	CastExpression	( void ) inflateEnd ( & strm )		11230755	0					
ANR	11230980	CastTarget	void		11230755	0					
ANR	11230981	CallExpression	inflateEnd ( & strm )		11230755	1					
ANR	11230982	Callee	inflateEnd		11230755	0					
ANR	11230983	Identifier	inflateEnd		11230755	0					
ANR	11230984	ArgumentList	& strm		11230755	1					
ANR	11230985	Argument	& strm		11230755	0					
ANR	11230986	UnaryOperationExpression	& strm		11230755	0					
ANR	11230987	UnaryOperator	&		11230755	0					
ANR	11230988	Identifier	strm		11230755	1					
ANR	11230989	ReturnStatement	return Z_ERRNO ;	138:16:4659:4673	11230755	1	True				
ANR	11230990	Identifier	Z_ERRNO		11230755	0					
ANR	11230991	Condition	strm . avail_out == 0	140:17:4706:4724	11230755	1	True				
ANR	11230992	EqualityExpression	strm . avail_out == 0		11230755	0		==			
ANR	11230993	MemberAccess	strm . avail_out		11230755	0					
ANR	11230994	Identifier	strm		11230755	0					
ANR	11230995	Identifier	avail_out		11230755	1					
ANR	11230996	PrimaryExpression	0		11230755	1					
ANR	11230997	Condition	ret != Z_STREAM_END	143:13:4791:4809	11230755	1	True				
ANR	11230998	EqualityExpression	ret != Z_STREAM_END		11230755	0		!=			
ANR	11230999	Identifier	ret		11230755	0					
ANR	11231000	Identifier	Z_STREAM_END		11230755	1					
ANR	11231001	ExpressionStatement	( void ) inflateEnd ( & strm )	146:4:4848:4871	11230755	13	True				
ANR	11231002	CastExpression	( void ) inflateEnd ( & strm )		11230755	0					
ANR	11231003	CastTarget	void		11230755	0					
ANR	11231004	CallExpression	inflateEnd ( & strm )		11230755	1					
ANR	11231005	Callee	inflateEnd		11230755	0					
ANR	11231006	Identifier	inflateEnd		11230755	0					
ANR	11231007	ArgumentList	& strm		11230755	1					
ANR	11231008	Argument	& strm		11230755	0					
ANR	11231009	UnaryOperationExpression	& strm		11230755	0					
ANR	11231010	UnaryOperator	&		11230755	0					
ANR	11231011	Identifier	strm		11230755	1					
ANR	11231012	ReturnStatement	return ret == Z_STREAM_END ? Z_OK : Z_DATA_ERROR ;	147:4:4877:4925	11230755	14	True				
ANR	11231013	ConditionalExpression	ret == Z_STREAM_END ? Z_OK : Z_DATA_ERROR		11230755	0					
ANR	11231014	Condition	ret == Z_STREAM_END		11230755	0					
ANR	11231015	EqualityExpression	ret == Z_STREAM_END		11230755	0		==			
ANR	11231016	Identifier	ret		11230755	0					
ANR	11231017	Identifier	Z_STREAM_END		11230755	1					
ANR	11231018	Identifier	Z_OK		11230755	1					
ANR	11231019	Identifier	Z_DATA_ERROR		11230755	2					
ANR	11231020	ReturnType	int		11230755	1					
ANR	11231021	Identifier	inf		11230755	2					
ANR	11231022	ParameterList	"FILE * source , FILE * dest"		11230755	3					
ANR	11231023	Parameter	FILE * source	92:8:3282:3293	11230755	0	True				
ANR	11231024	ParameterType	FILE *		11230755	0					
ANR	11231025	Identifier	source		11230755	1					
ANR	11231026	Parameter	FILE * dest	92:22:3296:3305	11230755	1	True				
ANR	11231027	ParameterType	FILE *		11230755	0					
ANR	11231028	Identifier	dest		11230755	1					
ANR	11231029	CFGEntryNode	ENTRY		11230755		True				
ANR	11231030	CFGExitNode	EXIT		11230755		True				
ANR	11231031	Symbol	Z_STREAM_ERROR		11230755						
ANR	11231032	Symbol	Z_DATA_ERROR		11230755						
ANR	11231033	Symbol	& strm		11230755						
ANR	11231034	Symbol	inflateInit		11230755						
ANR	11231035	Symbol	strm . zalloc		11230755						
ANR	11231036	Symbol	source		11230755						
ANR	11231037	Symbol	Z_OK		11230755						
ANR	11231038	Symbol	dest		11230755						
ANR	11231039	Symbol	out		11230755						
ANR	11231040	Symbol	strm . next_in		11230755						
ANR	11231041	Symbol	Z_NO_FLUSH		11230755						
ANR	11231042	Symbol	strm . opaque		11230755						
ANR	11231043	Symbol	have		11230755						
ANR	11231044	Symbol	Z_STREAM_END		11230755						
ANR	11231045	Symbol	CHUNK		11230755						
ANR	11231046	Symbol	ret		11230755						
ANR	11231047	Symbol	Z_ERRNO		11230755						
ANR	11231048	Symbol	in		11230755						
ANR	11231049	Symbol	fwrite		11230755						
ANR	11231050	Symbol	strm		11230755						
ANR	11231051	Symbol	fread		11230755						
ANR	11231052	Symbol	ferror		11230755						
ANR	11231053	Symbol	strm . avail_out		11230755						
ANR	11231054	Symbol	inflate		11230755						
ANR	11231055	Symbol	strm . next_out		11230755						
ANR	11231056	Symbol	strm . zfree		11230755						
ANR	11231057	Symbol	Z_NULL		11230755						
ANR	11231058	Symbol	strm . avail_in		11230755						
ANR	11231059	Function	zerr	151:0:4963:5583							
ANR	11231060	FunctionDef	zerr (int ret)		11231059	0					
ANR	11231061	CompoundStatement		152:0:4982:5583	11231059	0					
ANR	11231062	ExpressionStatement	"fputs ( ""zpipe: "" , stderr )"	153:4:4988:5012	11231059	0	True				
ANR	11231063	CallExpression	"fputs ( ""zpipe: "" , stderr )"		11231059	0					
ANR	11231064	Callee	fputs		11231059	0					
ANR	11231065	Identifier	fputs		11231059	0					
ANR	11231066	ArgumentList	"""zpipe: """		11231059	1					
ANR	11231067	Argument	"""zpipe: """		11231059	0					
ANR	11231068	PrimaryExpression	"""zpipe: """		11231059	0					
ANR	11231069	Argument	stderr		11231059	1					
ANR	11231070	Identifier	stderr		11231059	0					
ANR	11231071	SwitchStatement	switch ( ret )		11231059	1					
ANR	11231072	Condition	ret	154:12:5026:5028	11231059	0	True				
ANR	11231073	Identifier	ret		11231059	0					
ANR	11231074	CompoundStatement		3:17:48:48	11231059	1					
ANR	11231075	Label	case Z_ERRNO :	155:4:5037:5049	11231059	0	True				
ANR	11231076	Identifier	Z_ERRNO		11231059	0					
ANR	11231077	IfStatement	if ( ferror ( stdin ) )		11231059	1					
ANR	11231078	Condition	ferror ( stdin )	156:12:5063:5075	11231059	0	True				
ANR	11231079	CallExpression	ferror ( stdin )		11231059	0					
ANR	11231080	Callee	ferror		11231059	0					
ANR	11231081	Identifier	ferror		11231059	0					
ANR	11231082	ArgumentList	stdin		11231059	1					
ANR	11231083	Argument	stdin		11231059	0					
ANR	11231084	Identifier	stdin		11231059	0					
ANR	11231085	ExpressionStatement	"fputs ( ""error reading stdin\\n"" , stderr )"	157:12:5090:5128	11231059	1	True				
ANR	11231086	CallExpression	"fputs ( ""error reading stdin\\n"" , stderr )"		11231059	0					
ANR	11231087	Callee	fputs		11231059	0					
ANR	11231088	Identifier	fputs		11231059	0					
ANR	11231089	ArgumentList	"""error reading stdin\\n"""		11231059	1					
ANR	11231090	Argument	"""error reading stdin\\n"""		11231059	0					
ANR	11231091	PrimaryExpression	"""error reading stdin\\n"""		11231059	0					
ANR	11231092	Argument	stderr		11231059	1					
ANR	11231093	Identifier	stderr		11231059	0					
ANR	11231094	IfStatement	if ( ferror ( stdout ) )		11231059	2					
ANR	11231095	Condition	ferror ( stdout )	158:12:5142:5155	11231059	0	True				
ANR	11231096	CallExpression	ferror ( stdout )		11231059	0					
ANR	11231097	Callee	ferror		11231059	0					
ANR	11231098	Identifier	ferror		11231059	0					
ANR	11231099	ArgumentList	stdout		11231059	1					
ANR	11231100	Argument	stdout		11231059	0					
ANR	11231101	Identifier	stdout		11231059	0					
ANR	11231102	ExpressionStatement	"fputs ( ""error writing stdout\\n"" , stderr )"	159:12:5170:5209	11231059	1	True				
ANR	11231103	CallExpression	"fputs ( ""error writing stdout\\n"" , stderr )"		11231059	0					
ANR	11231104	Callee	fputs		11231059	0					
ANR	11231105	Identifier	fputs		11231059	0					
ANR	11231106	ArgumentList	"""error writing stdout\\n"""		11231059	1					
ANR	11231107	Argument	"""error writing stdout\\n"""		11231059	0					
ANR	11231108	PrimaryExpression	"""error writing stdout\\n"""		11231059	0					
ANR	11231109	Argument	stderr		11231059	1					
ANR	11231110	Identifier	stderr		11231059	0					
ANR	11231111	BreakStatement	break ;	160:8:5219:5224	11231059	3	True				
ANR	11231112	Label	case Z_STREAM_ERROR :	161:4:5230:5249	11231059	4	True				
ANR	11231113	Identifier	Z_STREAM_ERROR		11231059	0					
ANR	11231114	ExpressionStatement	"fputs ( ""invalid compression level\\n"" , stderr )"	162:8:5259:5303	11231059	5	True				
ANR	11231115	CallExpression	"fputs ( ""invalid compression level\\n"" , stderr )"		11231059	0					
ANR	11231116	Callee	fputs		11231059	0					
ANR	11231117	Identifier	fputs		11231059	0					
ANR	11231118	ArgumentList	"""invalid compression level\\n"""		11231059	1					
ANR	11231119	Argument	"""invalid compression level\\n"""		11231059	0					
ANR	11231120	PrimaryExpression	"""invalid compression level\\n"""		11231059	0					
ANR	11231121	Argument	stderr		11231059	1					
ANR	11231122	Identifier	stderr		11231059	0					
ANR	11231123	BreakStatement	break ;	163:8:5313:5318	11231059	6	True				
ANR	11231124	Label	case Z_DATA_ERROR :	164:4:5324:5341	11231059	7	True				
ANR	11231125	Identifier	Z_DATA_ERROR		11231059	0					
ANR	11231126	ExpressionStatement	"fputs ( ""invalid or incomplete deflate data\\n"" , stderr )"	165:8:5351:5404	11231059	8	True				
ANR	11231127	CallExpression	"fputs ( ""invalid or incomplete deflate data\\n"" , stderr )"		11231059	0					
ANR	11231128	Callee	fputs		11231059	0					
ANR	11231129	Identifier	fputs		11231059	0					
ANR	11231130	ArgumentList	"""invalid or incomplete deflate data\\n"""		11231059	1					
ANR	11231131	Argument	"""invalid or incomplete deflate data\\n"""		11231059	0					
ANR	11231132	PrimaryExpression	"""invalid or incomplete deflate data\\n"""		11231059	0					
ANR	11231133	Argument	stderr		11231059	1					
ANR	11231134	Identifier	stderr		11231059	0					
ANR	11231135	BreakStatement	break ;	166:8:5414:5419	11231059	9	True				
ANR	11231136	Label	case Z_MEM_ERROR :	167:4:5425:5441	11231059	10	True				
ANR	11231137	Identifier	Z_MEM_ERROR		11231059	0					
ANR	11231138	ExpressionStatement	"fputs ( ""out of memory\\n"" , stderr )"	168:8:5451:5483	11231059	11	True				
ANR	11231139	CallExpression	"fputs ( ""out of memory\\n"" , stderr )"		11231059	0					
ANR	11231140	Callee	fputs		11231059	0					
ANR	11231141	Identifier	fputs		11231059	0					
ANR	11231142	ArgumentList	"""out of memory\\n"""		11231059	1					
ANR	11231143	Argument	"""out of memory\\n"""		11231059	0					
ANR	11231144	PrimaryExpression	"""out of memory\\n"""		11231059	0					
ANR	11231145	Argument	stderr		11231059	1					
ANR	11231146	Identifier	stderr		11231059	0					
ANR	11231147	BreakStatement	break ;	169:8:5493:5498	11231059	12	True				
ANR	11231148	Label	case Z_VERSION_ERROR :	170:4:5504:5524	11231059	13	True				
ANR	11231149	Identifier	Z_VERSION_ERROR		11231059	0					
ANR	11231150	ExpressionStatement	"fputs ( ""zlib version mismatch!\\n"" , stderr )"	171:8:5534:5575	11231059	14	True				
ANR	11231151	CallExpression	"fputs ( ""zlib version mismatch!\\n"" , stderr )"		11231059	0					
ANR	11231152	Callee	fputs		11231059	0					
ANR	11231153	Identifier	fputs		11231059	0					
ANR	11231154	ArgumentList	"""zlib version mismatch!\\n"""		11231059	1					
ANR	11231155	Argument	"""zlib version mismatch!\\n"""		11231059	0					
ANR	11231156	PrimaryExpression	"""zlib version mismatch!\\n"""		11231059	0					
ANR	11231157	Argument	stderr		11231059	1					
ANR	11231158	Identifier	stderr		11231059	0					
ANR	11231159	ReturnType	void		11231059	1					
ANR	11231160	Identifier	zerr		11231059	2					
ANR	11231161	ParameterList	int ret		11231059	3					
ANR	11231162	Parameter	int ret	151:10:4973:4979	11231059	0	True				
ANR	11231163	ParameterType	int		11231059	0					
ANR	11231164	Identifier	ret		11231059	1					
ANR	11231165	CFGEntryNode	ENTRY		11231059		True				
ANR	11231166	CFGExitNode	EXIT		11231059		True				
ANR	11231167	Symbol	ret		11231059						
ANR	11231168	Symbol	ferror		11231059						
ANR	11231169	Symbol	stdin		11231059						
ANR	11231170	Symbol	stdout		11231059						
ANR	11231171	Symbol	stderr		11231059						
ANR	11231172	Function	main	176:0:5636:6321							
ANR	11231173	FunctionDef	"main (int argc , char * * argv)"		11231172	0					
ANR	11231174	CompoundStatement		177:0:5668:6321	11231172	0					
ANR	11231175	IdentifierDeclStatement	int ret ;	178:4:5674:5681	11231172	0	True				
ANR	11231176	IdentifierDecl	ret		11231172	0					
ANR	11231177	IdentifierDeclType	int		11231172	0					
ANR	11231178	Identifier	ret		11231172	1					
ANR	11231179	ExpressionStatement	SET_BINARY_MODE ( stdin )	181:4:5728:5750	11231172	1	True				
ANR	11231180	CallExpression	SET_BINARY_MODE ( stdin )		11231172	0					
ANR	11231181	Callee	SET_BINARY_MODE		11231172	0					
ANR	11231182	Identifier	SET_BINARY_MODE		11231172	0					
ANR	11231183	ArgumentList	stdin		11231172	1					
ANR	11231184	Argument	stdin		11231172	0					
ANR	11231185	Identifier	stdin		11231172	0					
ANR	11231186	ExpressionStatement	SET_BINARY_MODE ( stdout )	182:4:5756:5779	11231172	2	True				
ANR	11231187	CallExpression	SET_BINARY_MODE ( stdout )		11231172	0					
ANR	11231188	Callee	SET_BINARY_MODE		11231172	0					
ANR	11231189	Identifier	SET_BINARY_MODE		11231172	0					
ANR	11231190	ArgumentList	stdout		11231172	1					
ANR	11231191	Argument	stdout		11231172	0					
ANR	11231192	Identifier	stdout		11231172	0					
ANR	11231193	IfStatement	if ( argc == 1 )		11231172	3					
ANR	11231194	Condition	argc == 1	185:8:5831:5839	11231172	0	True				
ANR	11231195	EqualityExpression	argc == 1		11231172	0		==			
ANR	11231196	Identifier	argc		11231172	0					
ANR	11231197	PrimaryExpression	1		11231172	1					
ANR	11231198	CompoundStatement		9:19:173:173	11231172	1					
ANR	11231199	ExpressionStatement	"ret = def ( stdin , stdout , Z_DEFAULT_COMPRESSION )"	186:8:5852:5899	11231172	0	True				
ANR	11231200	AssignmentExpression	"ret = def ( stdin , stdout , Z_DEFAULT_COMPRESSION )"		11231172	0		=			
ANR	11231201	Identifier	ret		11231172	0					
ANR	11231202	CallExpression	"def ( stdin , stdout , Z_DEFAULT_COMPRESSION )"		11231172	1					
ANR	11231203	Callee	def		11231172	0					
ANR	11231204	Identifier	def		11231172	0					
ANR	11231205	ArgumentList	stdin		11231172	1					
ANR	11231206	Argument	stdin		11231172	0					
ANR	11231207	Identifier	stdin		11231172	0					
ANR	11231208	Argument	stdout		11231172	1					
ANR	11231209	Identifier	stdout		11231172	0					
ANR	11231210	Argument	Z_DEFAULT_COMPRESSION		11231172	2					
ANR	11231211	Identifier	Z_DEFAULT_COMPRESSION		11231172	0					
ANR	11231212	IfStatement	if ( ret != Z_OK )		11231172	1					
ANR	11231213	Condition	ret != Z_OK	187:12:5913:5923	11231172	0	True				
ANR	11231214	EqualityExpression	ret != Z_OK		11231172	0		!=			
ANR	11231215	Identifier	ret		11231172	0					
ANR	11231216	Identifier	Z_OK		11231172	1					
ANR	11231217	ExpressionStatement	zerr ( ret )	188:12:5938:5947	11231172	1	True				
ANR	11231218	CallExpression	zerr ( ret )		11231172	0					
ANR	11231219	Callee	zerr		11231172	0					
ANR	11231220	Identifier	zerr		11231172	0					
ANR	11231221	ArgumentList	ret		11231172	1					
ANR	11231222	Argument	ret		11231172	0					
ANR	11231223	Identifier	ret		11231172	0					
ANR	11231224	ReturnStatement	return ret ;	189:8:5957:5967	11231172	2	True				
ANR	11231225	Identifier	ret		11231172	0					
ANR	11231226	ElseStatement	else		11231172	0					
ANR	11231227	IfStatement	"if ( argc == 2 && strcmp ( argv [ 1 ] , ""-d"" ) == 0 )"		11231172	0					
ANR	11231228	Condition	"argc == 2 && strcmp ( argv [ 1 ] , ""-d"" ) == 0"	193:13:6032:6070	11231172	0	True				
ANR	11231229	AndExpression	"argc == 2 && strcmp ( argv [ 1 ] , ""-d"" ) == 0"		11231172	0		&&			
ANR	11231230	EqualityExpression	argc == 2		11231172	0		==			
ANR	11231231	Identifier	argc		11231172	0					
ANR	11231232	PrimaryExpression	2		11231172	1					
ANR	11231233	EqualityExpression	"strcmp ( argv [ 1 ] , ""-d"" ) == 0"		11231172	1		==			
ANR	11231234	CallExpression	"strcmp ( argv [ 1 ] , ""-d"" )"		11231172	0					
ANR	11231235	Callee	strcmp		11231172	0					
ANR	11231236	Identifier	strcmp		11231172	0					
ANR	11231237	ArgumentList	argv [ 1 ]		11231172	1					
ANR	11231238	Argument	argv [ 1 ]		11231172	0					
ANR	11231239	ArrayIndexing	argv [ 1 ]		11231172	0					
ANR	11231240	Identifier	argv		11231172	0					
ANR	11231241	PrimaryExpression	1		11231172	1					
ANR	11231242	Argument	"""-d"""		11231172	1					
ANR	11231243	PrimaryExpression	"""-d"""		11231172	0					
ANR	11231244	PrimaryExpression	0		11231172	1					
ANR	11231245	CompoundStatement		17:54:404:404	11231172	1					
ANR	11231246	ExpressionStatement	"ret = inf ( stdin , stdout )"	194:8:6083:6107	11231172	0	True				
ANR	11231247	AssignmentExpression	"ret = inf ( stdin , stdout )"		11231172	0		=			
ANR	11231248	Identifier	ret		11231172	0					
ANR	11231249	CallExpression	"inf ( stdin , stdout )"		11231172	1					
ANR	11231250	Callee	inf		11231172	0					
ANR	11231251	Identifier	inf		11231172	0					
ANR	11231252	ArgumentList	stdin		11231172	1					
ANR	11231253	Argument	stdin		11231172	0					
ANR	11231254	Identifier	stdin		11231172	0					
ANR	11231255	Argument	stdout		11231172	1					
ANR	11231256	Identifier	stdout		11231172	0					
ANR	11231257	IfStatement	if ( ret != Z_OK )		11231172	1					
ANR	11231258	Condition	ret != Z_OK	195:12:6121:6131	11231172	0	True				
ANR	11231259	EqualityExpression	ret != Z_OK		11231172	0		!=			
ANR	11231260	Identifier	ret		11231172	0					
ANR	11231261	Identifier	Z_OK		11231172	1					
ANR	11231262	ExpressionStatement	zerr ( ret )	196:12:6146:6155	11231172	1	True				
ANR	11231263	CallExpression	zerr ( ret )		11231172	0					
ANR	11231264	Callee	zerr		11231172	0					
ANR	11231265	Identifier	zerr		11231172	0					
ANR	11231266	ArgumentList	ret		11231172	1					
ANR	11231267	Argument	ret		11231172	0					
ANR	11231268	Identifier	ret		11231172	0					
ANR	11231269	ReturnStatement	return ret ;	197:8:6165:6175	11231172	2	True				
ANR	11231270	Identifier	ret		11231172	0					
ANR	11231271	ElseStatement	else		11231172	0					
ANR	11231272	CompoundStatement		25:9:558:558	11231172	0					
ANR	11231273	ExpressionStatement	"fputs ( ""zpipe usage: zpipe [-d] < source > dest\\n"" , stderr )"	202:8:6237:6295	11231172	0	True				
ANR	11231274	CallExpression	"fputs ( ""zpipe usage: zpipe [-d] < source > dest\\n"" , stderr )"		11231172	0					
ANR	11231275	Callee	fputs		11231172	0					
ANR	11231276	Identifier	fputs		11231172	0					
ANR	11231277	ArgumentList	"""zpipe usage: zpipe [-d] < source > dest\\n"""		11231172	1					
ANR	11231278	Argument	"""zpipe usage: zpipe [-d] < source > dest\\n"""		11231172	0					
ANR	11231279	PrimaryExpression	"""zpipe usage: zpipe [-d] < source > dest\\n"""		11231172	0					
ANR	11231280	Argument	stderr		11231172	1					
ANR	11231281	Identifier	stderr		11231172	0					
ANR	11231282	ReturnStatement	return 1 ;	203:8:6305:6313	11231172	1	True				
ANR	11231283	PrimaryExpression	1		11231172	0					
ANR	11231284	ReturnType	int		11231172	1					
ANR	11231285	Identifier	main		11231172	2					
ANR	11231286	ParameterList	"int argc , char * * argv"		11231172	3					
ANR	11231287	Parameter	int argc	176:9:5645:5652	11231172	0	True				
ANR	11231288	ParameterType	int		11231172	0					
ANR	11231289	Identifier	argc		11231172	1					
ANR	11231290	Parameter	char * * argv	176:19:5655:5665	11231172	1	True				
ANR	11231291	ParameterType	char * *		11231172	0					
ANR	11231292	Identifier	argv		11231172	1					
ANR	11231293	CFGEntryNode	ENTRY		11231172		True				
ANR	11231294	CFGExitNode	EXIT		11231172		True				
ANR	11231295	Symbol	argc		11231172						
ANR	11231296	Symbol	ret		11231172						
ANR	11231297	Symbol	strcmp		11231172						
ANR	11231298	Symbol	inf		11231172						
ANR	11231299	Symbol	stdin		11231172						
ANR	11231300	Symbol	stdout		11231172						
ANR	11231301	Symbol	def		11231172						
ANR	11231302	Symbol	* argv		11231172						
ANR	11231303	Symbol	Z_OK		11231172						
ANR	11231304	Symbol	Z_DEFAULT_COMPRESSION		11231172						
ANR	11231305	Symbol	stderr		11231172						
ANR	11231306	Symbol	argv		11231172						
