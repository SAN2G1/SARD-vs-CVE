command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4915603	File	data/converged/CVE-2018-16863_ghostpdl/gendev.c								
ANR	4915604	ClassDef	config_s	40:8:1202:1599							
ANR	4915605	DeclStmt									
ANR	4915606	Decl							FILE	FILE *	out
ANR	4915607	DeclStmt									
ANR	4915608	Decl							bool	bool	debug
ANR	4915609	DeclStmt									
ANR	4915610	Decl							const char	const char *	name_prefix
ANR	4915611	DeclStmt									
ANR	4915612	Decl							const char	const char *	file_prefix
ANR	4915613	DeclStmt									
ANR	4915614	Decl							ulong	ulong	file_id
ANR	4915615	DeclStmt									
ANR	4915616	Decl							uint	uint	item_id
ANR	4915617	DeclStmt									
ANR	4915618	Decl							bool	bool	any_scan_items
ANR	4915619	DeclStmt									
ANR	4915620	Decl							bool	bool	in_res_scan
ANR	4915621	DeclStmt									
ANR	4915622	Decl							bool	bool	in_category
ANR	4915623	DeclStmt									
ANR	4915624	Decl							const char	const char *	current_category
ANR	4915625	DeclStmt									
ANR	4915626	Decl							config_s	config_s	config
ANR	4915627	DeclStmt									
ANR	4915628	Decl							const config	const config	init_config
ANR	4915629	DeclStmt									
ANR	4915630	Decl							const char	const char *	indent_INCLUDED
ANR	4915631	DeclStmt									
ANR	4915632	Decl							const char	const char *	indent_RES_SCAN
ANR	4915633	DeclStmt									
ANR	4915634	Decl							const char	const char *	indent_category
ANR	4915635	DeclStmt									
ANR	4915636	Decl							const char	const char *	indent_SEEN
ANR	4915637	DeclStmt									
ANR	4915638	Decl							const char	const char *	indent_include
ANR	4915639	DeclStmt									
ANR	4915640	Decl							const char	const char *	indent_scan_item
ANR	4915641	DeclStmt									
ANR	4915642	Decl							const char	const char *	indent_item
ANR	4915643	DeclStmt									
ANR	4915644	Decl							void	"void ( config * , const char * , const char * , bool )"	add_entry
ANR	4915645	Function	main	80:0:2314:6005							
ANR	4915646	FunctionDef	"main (int argc , char * argv [ ])"		4915645	0					
ANR	4915647	CompoundStatement		81:0:2343:6005	4915645	0					
ANR	4915648	IdentifierDeclStatement	config conf ;	82:4:2349:2360	4915645	0	True				
ANR	4915649	IdentifierDecl	conf		4915645	0					
ANR	4915650	IdentifierDeclType	config		4915645	0					
ANR	4915651	Identifier	conf		4915645	1					
ANR	4915652	IdentifierDeclStatement	"int i , j ;"	83:4:2366:2374	4915645	1	True				
ANR	4915653	IdentifierDecl	i		4915645	0					
ANR	4915654	IdentifierDeclType	int		4915645	0					
ANR	4915655	Identifier	i		4915645	1					
ANR	4915656	IdentifierDecl	j		4915645	1					
ANR	4915657	IdentifierDeclType	int		4915645	0					
ANR	4915658	Identifier	j		4915645	1					
ANR	4915659	IdentifierDeclStatement	"bool dev , append ;"	84:4:2380:2396	4915645	2	True				
ANR	4915660	IdentifierDecl	dev		4915645	0					
ANR	4915661	IdentifierDeclType	bool		4915645	0					
ANR	4915662	Identifier	dev		4915645	1					
ANR	4915663	IdentifierDecl	append		4915645	1					
ANR	4915664	IdentifierDeclType	bool		4915645	0					
ANR	4915665	Identifier	append		4915645	1					
ANR	4915666	IdentifierDeclStatement	const char * category = INITIAL_CATEGORY ;	85:4:2402:2441	4915645	3	True				
ANR	4915667	IdentifierDecl	* category = INITIAL_CATEGORY		4915645	0					
ANR	4915668	IdentifierDeclType	const char *		4915645	0					
ANR	4915669	Identifier	category		4915645	1					
ANR	4915670	AssignmentExpression	* category = INITIAL_CATEGORY		4915645	2		=			
ANR	4915671	Identifier	INITIAL_CATEGORY		4915645	0					
ANR	4915672	Identifier	INITIAL_CATEGORY		4915645	1					
ANR	4915673	IdentifierDeclStatement	const char * fnarg ;	86:4:2447:2464	4915645	4	True				
ANR	4915674	IdentifierDecl	* fnarg		4915645	0					
ANR	4915675	IdentifierDeclType	const char *		4915645	0					
ANR	4915676	Identifier	fnarg		4915645	1					
ANR	4915677	IdentifierDeclStatement	FILE * out ;	87:4:2470:2479	4915645	5	True				
ANR	4915678	IdentifierDecl	* out		4915645	0					
ANR	4915679	IdentifierDeclType	FILE *		4915645	0					
ANR	4915680	Identifier	out		4915645	1					
ANR	4915681	IdentifierDeclStatement	long pos ;	88:4:2485:2493	4915645	6	True				
ANR	4915682	IdentifierDecl	pos		4915645	0					
ANR	4915683	IdentifierDeclType	long		4915645	0					
ANR	4915684	Identifier	pos		4915645	1					
ANR	4915685	ExpressionStatement	conf = init_config	90:4:2500:2518	4915645	7	True				
ANR	4915686	AssignmentExpression	conf = init_config		4915645	0		=			
ANR	4915687	Identifier	conf		4915645	0					
ANR	4915688	Identifier	init_config		4915645	1					
ANR	4915689	ForStatement	for ( i = 1 ; i < argc ; i ++ )		4915645	8					
ANR	4915690	ForInit	i = 1 ;	92:9:2571:2576	4915645	0	True				
ANR	4915691	AssignmentExpression	i = 1		4915645	0		=			
ANR	4915692	Identifier	i		4915645	0					
ANR	4915693	PrimaryExpression	1		4915645	1					
ANR	4915694	Condition	i < argc	92:16:2578:2585	4915645	1	True				
ANR	4915695	RelationalExpression	i < argc		4915645	0		<			
ANR	4915696	Identifier	i		4915645	0					
ANR	4915697	Identifier	argc		4915645	1					
ANR	4915698	PostIncDecOperationExpression	i ++	92:26:2588:2590	4915645	2	True				
ANR	4915699	Identifier	i		4915645	0					
ANR	4915700	IncDec	++		4915645	1					
ANR	4915701	CompoundStatement		13:8:259:284	4915645	3					
ANR	4915702	IdentifierDeclStatement	const char * arg = argv [ i ] ;	93:8:2603:2628	4915645	0	True				
ANR	4915703	IdentifierDecl	* arg = argv [ i ]		4915645	0					
ANR	4915704	IdentifierDeclType	const char *		4915645	0					
ANR	4915705	Identifier	arg		4915645	1					
ANR	4915706	AssignmentExpression	* arg = argv [ i ]		4915645	2		=			
ANR	4915707	Identifier	arg		4915645	0					
ANR	4915708	ArrayIndexing	argv [ i ]		4915645	1					
ANR	4915709	Identifier	argv		4915645	0					
ANR	4915710	Identifier	i		4915645	1					
ANR	4915711	IfStatement	if ( * arg != '-' )		4915645	1					
ANR	4915712	Condition	* arg != '-'	95:12:2643:2653	4915645	0	True				
ANR	4915713	EqualityExpression	* arg != '-'		4915645	0		!=			
ANR	4915714	UnaryOperationExpression	* arg		4915645	0					
ANR	4915715	UnaryOperator	*		4915645	0					
ANR	4915716	Identifier	arg		4915645	1					
ANR	4915717	PrimaryExpression	'-'		4915645	1					
ANR	4915718	CompoundStatement		15:25:312:312	4915645	1					
ANR	4915719	ExpressionStatement	"fprintf ( stderr , ""-d|m|a must precede non-switches.\\n"" , arg )"	96:12:2670:2729	4915645	0	True				
ANR	4915720	CallExpression	"fprintf ( stderr , ""-d|m|a must precede non-switches.\\n"" , arg )"		4915645	0					
ANR	4915721	Callee	fprintf		4915645	0					
ANR	4915722	Identifier	fprintf		4915645	0					
ANR	4915723	ArgumentList	stderr		4915645	1					
ANR	4915724	Argument	stderr		4915645	0					
ANR	4915725	Identifier	stderr		4915645	0					
ANR	4915726	Argument	"""-d|m|a must precede non-switches.\\n"""		4915645	1					
ANR	4915727	PrimaryExpression	"""-d|m|a must precede non-switches.\\n"""		4915645	0					
ANR	4915728	Argument	arg		4915645	2					
ANR	4915729	Identifier	arg		4915645	0					
ANR	4915730	ExpressionStatement	exit ( 1 )	97:12:2743:2750	4915645	1	True				
ANR	4915731	CallExpression	exit ( 1 )		4915645	0					
ANR	4915732	Callee	exit		4915645	0					
ANR	4915733	Identifier	exit		4915645	0					
ANR	4915734	ArgumentList	1		4915645	1					
ANR	4915735	Argument	1		4915645	0					
ANR	4915736	PrimaryExpression	1		4915645	0					
ANR	4915737	SwitchStatement	switch ( arg [ 1 ] )		4915645	2					
ANR	4915738	Condition	arg [ 1 ]	99:16:2778:2783	4915645	0	True				
ANR	4915739	ArrayIndexing	arg [ 1 ]		4915645	0					
ANR	4915740	Identifier	arg		4915645	0					
ANR	4915741	PrimaryExpression	1		4915645	1					
ANR	4915742	CompoundStatement		19:24:442:442	4915645	1					
ANR	4915743	Label	case 'C' :	100:12:2800:2808	4915645	0	True				
ANR	4915744	ExpressionStatement	"conf . file_prefix = ( argv [ i + 1 ] [ 0 ] == '-' ? """" : argv [ i + 1 ] )"	101:16:2872:2953	4915645	1	True				
ANR	4915745	AssignmentExpression	"conf . file_prefix = ( argv [ i + 1 ] [ 0 ] == '-' ? """" : argv [ i + 1 ] )"		4915645	0		=			
ANR	4915746	MemberAccess	conf . file_prefix		4915645	0					
ANR	4915747	Identifier	conf		4915645	0					
ANR	4915748	Identifier	file_prefix		4915645	1					
ANR	4915749	ConditionalExpression	"argv [ i + 1 ] [ 0 ] == '-' ? """" : argv [ i + 1 ]"		4915645	1					
ANR	4915750	Condition	argv [ i + 1 ] [ 0 ] == '-'		4915645	0					
ANR	4915751	EqualityExpression	argv [ i + 1 ] [ 0 ] == '-'		4915645	0		==			
ANR	4915752	ArrayIndexing	argv [ i + 1 ] [ 0 ]		4915645	0					
ANR	4915753	ArrayIndexing	argv [ i + 1 ]		4915645	0					
ANR	4915754	Identifier	argv		4915645	0					
ANR	4915755	AdditiveExpression	i + 1		4915645	1		+			
ANR	4915756	Identifier	i		4915645	0					
ANR	4915757	PrimaryExpression	1		4915645	1					
ANR	4915758	PrimaryExpression	0		4915645	1					
ANR	4915759	PrimaryExpression	'-'		4915645	1					
ANR	4915760	PrimaryExpression	""""""		4915645	1					
ANR	4915761	ArrayIndexing	argv [ i + 1 ]		4915645	2					
ANR	4915762	Identifier	argv		4915645	0					
ANR	4915763	AdditiveExpression	i + 1		4915645	1		+			
ANR	4915764	Identifier	i		4915645	0					
ANR	4915765	PrimaryExpression	1		4915645	1					
ANR	4915766	ExpressionStatement	++ i	103:16:2971:2974	4915645	2	True				
ANR	4915767	UnaryExpression	++ i		4915645	0					
ANR	4915768	IncDec	++		4915645	0					
ANR	4915769	Identifier	i		4915645	1					
ANR	4915770	ContinueStatement	continue ;	104:16:2992:3000	4915645	3	True				
ANR	4915771	Label	case 'n' :	105:12:3014:3022	4915645	4	True				
ANR	4915772	ExpressionStatement	"conf . name_prefix = ( argv [ i + 1 ] [ 0 ] == '-' ? """" : argv [ i + 1 ] )"	106:16:3040:3121	4915645	5	True				
ANR	4915773	AssignmentExpression	"conf . name_prefix = ( argv [ i + 1 ] [ 0 ] == '-' ? """" : argv [ i + 1 ] )"		4915645	0		=			
ANR	4915774	MemberAccess	conf . name_prefix		4915645	0					
ANR	4915775	Identifier	conf		4915645	0					
ANR	4915776	Identifier	name_prefix		4915645	1					
ANR	4915777	ConditionalExpression	"argv [ i + 1 ] [ 0 ] == '-' ? """" : argv [ i + 1 ]"		4915645	1					
ANR	4915778	Condition	argv [ i + 1 ] [ 0 ] == '-'		4915645	0					
ANR	4915779	EqualityExpression	argv [ i + 1 ] [ 0 ] == '-'		4915645	0		==			
ANR	4915780	ArrayIndexing	argv [ i + 1 ] [ 0 ]		4915645	0					
ANR	4915781	ArrayIndexing	argv [ i + 1 ]		4915645	0					
ANR	4915782	Identifier	argv		4915645	0					
ANR	4915783	AdditiveExpression	i + 1		4915645	1		+			
ANR	4915784	Identifier	i		4915645	0					
ANR	4915785	PrimaryExpression	1		4915645	1					
ANR	4915786	PrimaryExpression	0		4915645	1					
ANR	4915787	PrimaryExpression	'-'		4915645	1					
ANR	4915788	PrimaryExpression	""""""		4915645	1					
ANR	4915789	ArrayIndexing	argv [ i + 1 ]		4915645	2					
ANR	4915790	Identifier	argv		4915645	0					
ANR	4915791	AdditiveExpression	i + 1		4915645	1		+			
ANR	4915792	Identifier	i		4915645	0					
ANR	4915793	PrimaryExpression	1		4915645	1					
ANR	4915794	ExpressionStatement	++ i	108:16:3139:3142	4915645	6	True				
ANR	4915795	UnaryExpression	++ i		4915645	0					
ANR	4915796	IncDec	++		4915645	0					
ANR	4915797	Identifier	i		4915645	1					
ANR	4915798	ContinueStatement	continue ;	109:16:3160:3168	4915645	7	True				
ANR	4915799	Label	case 'a' :	110:12:3182:3190	4915645	8	True				
ANR	4915800	ExpressionStatement	"dev = false , append = true"	111:16:3208:3234	4915645	9	True				
ANR	4915801	Expression	"dev = false , append = true"		4915645	0					
ANR	4915802	AssignmentExpression	dev = false		4915645	0		=			
ANR	4915803	Identifier	dev		4915645	0					
ANR	4915804	Identifier	false		4915645	1					
ANR	4915805	AssignmentExpression	append = true		4915645	1		=			
ANR	4915806	Identifier	append		4915645	0					
ANR	4915807	Identifier	true		4915645	1					
ANR	4915808	BreakStatement	break ;	112:16:3252:3257	4915645	10	True				
ANR	4915809	Label	case 'd' :	113:12:3271:3279	4915645	11	True				
ANR	4915810	ExpressionStatement	"dev = true , append = false"	114:16:3297:3323	4915645	12	True				
ANR	4915811	Expression	"dev = true , append = false"		4915645	0					
ANR	4915812	AssignmentExpression	dev = true		4915645	0		=			
ANR	4915813	Identifier	dev		4915645	0					
ANR	4915814	Identifier	true		4915645	1					
ANR	4915815	AssignmentExpression	append = false		4915645	1		=			
ANR	4915816	Identifier	append		4915645	0					
ANR	4915817	Identifier	false		4915645	1					
ANR	4915818	BreakStatement	break ;	115:16:3341:3346	4915645	13	True				
ANR	4915819	Label	case 'm' :	116:12:3360:3368	4915645	14	True				
ANR	4915820	ExpressionStatement	"dev = false , append = false"	117:16:3386:3413	4915645	15	True				
ANR	4915821	Expression	"dev = false , append = false"		4915645	0					
ANR	4915822	AssignmentExpression	dev = false		4915645	0		=			
ANR	4915823	Identifier	dev		4915645	0					
ANR	4915824	Identifier	false		4915645	1					
ANR	4915825	AssignmentExpression	append = false		4915645	1		=			
ANR	4915826	Identifier	append		4915645	0					
ANR	4915827	Identifier	false		4915645	1					
ANR	4915828	BreakStatement	break ;	118:16:3431:3436	4915645	16	True				
ANR	4915829	Label	case 'Z' :	119:12:3450:3458	4915645	17	True				
ANR	4915830	ExpressionStatement	conf . debug = true	120:16:3476:3493	4915645	18	True				
ANR	4915831	AssignmentExpression	conf . debug = true		4915645	0		=			
ANR	4915832	MemberAccess	conf . debug		4915645	0					
ANR	4915833	Identifier	conf		4915645	0					
ANR	4915834	Identifier	debug		4915645	1					
ANR	4915835	Identifier	true		4915645	1					
ANR	4915836	ContinueStatement	continue ;	121:16:3511:3519	4915645	19	True				
ANR	4915837	Label	default :	122:12:3533:3540	4915645	20	True				
ANR	4915838	Identifier	default		4915645	0					
ANR	4915839	ExpressionStatement	"fprintf ( stderr , ""Unknown switch %s.\\n"" , argv [ i ] )"	123:16:3558:3606	4915645	21	True				
ANR	4915840	CallExpression	"fprintf ( stderr , ""Unknown switch %s.\\n"" , argv [ i ] )"		4915645	0					
ANR	4915841	Callee	fprintf		4915645	0					
ANR	4915842	Identifier	fprintf		4915645	0					
ANR	4915843	ArgumentList	stderr		4915645	1					
ANR	4915844	Argument	stderr		4915645	0					
ANR	4915845	Identifier	stderr		4915645	0					
ANR	4915846	Argument	"""Unknown switch %s.\\n"""		4915645	1					
ANR	4915847	PrimaryExpression	"""Unknown switch %s.\\n"""		4915645	0					
ANR	4915848	Argument	argv [ i ]		4915645	2					
ANR	4915849	ArrayIndexing	argv [ i ]		4915645	0					
ANR	4915850	Identifier	argv		4915645	0					
ANR	4915851	Identifier	i		4915645	1					
ANR	4915852	ExpressionStatement	exit ( 1 )	124:16:3624:3631	4915645	22	True				
ANR	4915853	CallExpression	exit ( 1 )		4915645	0					
ANR	4915854	Callee	exit		4915645	0					
ANR	4915855	Identifier	exit		4915645	0					
ANR	4915856	ArgumentList	1		4915645	1					
ANR	4915857	Argument	1		4915645	0					
ANR	4915858	PrimaryExpression	1		4915645	0					
ANR	4915859	BreakStatement	break ;	126:8:3651:3656	4915645	3	True				
ANR	4915860	IfStatement	if ( i == argc - 1 )		4915645	9					
ANR	4915861	Condition	i == argc - 1	128:8:3672:3684	4915645	0	True				
ANR	4915862	EqualityExpression	i == argc - 1		4915645	0		==			
ANR	4915863	Identifier	i		4915645	0					
ANR	4915864	AdditiveExpression	argc - 1		4915645	1		-			
ANR	4915865	Identifier	argc		4915645	0					
ANR	4915866	PrimaryExpression	1		4915645	1					
ANR	4915867	CompoundStatement		48:23:1343:1343	4915645	1					
ANR	4915868	ExpressionStatement	"fprintf ( stderr , ""No output file name given, last argument is %s.\\n"" , argv [ i ] )"	129:8:3697:3790	4915645	0	True				
ANR	4915869	CallExpression	"fprintf ( stderr , ""No output file name given, last argument is %s.\\n"" , argv [ i ] )"		4915645	0					
ANR	4915870	Callee	fprintf		4915645	0					
ANR	4915871	Identifier	fprintf		4915645	0					
ANR	4915872	ArgumentList	stderr		4915645	1					
ANR	4915873	Argument	stderr		4915645	0					
ANR	4915874	Identifier	stderr		4915645	0					
ANR	4915875	Argument	"""No output file name given, last argument is %s.\\n"""		4915645	1					
ANR	4915876	PrimaryExpression	"""No output file name given, last argument is %s.\\n"""		4915645	0					
ANR	4915877	Argument	argv [ i ]		4915645	2					
ANR	4915878	ArrayIndexing	argv [ i ]		4915645	0					
ANR	4915879	Identifier	argv		4915645	0					
ANR	4915880	Identifier	i		4915645	1					
ANR	4915881	ExpressionStatement	exit ( 1 )	131:8:3800:3807	4915645	1	True				
ANR	4915882	CallExpression	exit ( 1 )		4915645	0					
ANR	4915883	Callee	exit		4915645	0					
ANR	4915884	Identifier	exit		4915645	0					
ANR	4915885	ArgumentList	1		4915645	1					
ANR	4915886	Argument	1		4915645	0					
ANR	4915887	PrimaryExpression	1		4915645	0					
ANR	4915888	ExpressionStatement	fnarg = argv [ ++ i ]	134:4:3854:3871	4915645	10	True				
ANR	4915889	AssignmentExpression	fnarg = argv [ ++ i ]		4915645	0		=			
ANR	4915890	Identifier	fnarg		4915645	0					
ANR	4915891	ArrayIndexing	argv [ ++ i ]		4915645	1					
ANR	4915892	Identifier	argv		4915645	0					
ANR	4915893	UnaryExpression	++ i		4915645	1					
ANR	4915894	IncDec	++		4915645	0					
ANR	4915895	Identifier	i		4915645	1					
ANR	4915896	CompoundStatement		56:8:1543:1558	4915645	11					
ANR	4915897	IdentifierDeclStatement	char fname [ 100 ] ;	136:8:3887:3902	4915645	0	True				
ANR	4915898	IdentifierDecl	fname [ 100 ]		4915645	0					
ANR	4915899	IdentifierDeclType	char [ 100 ]		4915645	0					
ANR	4915900	Identifier	fname		4915645	1					
ANR	4915901	PrimaryExpression	100		4915645	2					
ANR	4915902	ExpressionStatement	"strcpy ( fname , fnarg )"	138:8:3913:3933	4915645	1	True				
ANR	4915903	CallExpression	"strcpy ( fname , fnarg )"		4915645	0					
ANR	4915904	Callee	strcpy		4915645	0					
ANR	4915905	Identifier	strcpy		4915645	0					
ANR	4915906	ArgumentList	fname		4915645	1					
ANR	4915907	Argument	fname		4915645	0					
ANR	4915908	Identifier	fname		4915645	0					
ANR	4915909	Argument	fnarg		4915645	1					
ANR	4915910	Identifier	fnarg		4915645	0					
ANR	4915911	ExpressionStatement	"strcat ( fname , "".dev"" )"	139:8:3943:3964	4915645	2	True				
ANR	4915912	CallExpression	"strcat ( fname , "".dev"" )"		4915645	0					
ANR	4915913	Callee	strcat		4915645	0					
ANR	4915914	Identifier	strcat		4915645	0					
ANR	4915915	ArgumentList	fname		4915645	1					
ANR	4915916	Argument	fname		4915645	0					
ANR	4915917	Identifier	fname		4915645	0					
ANR	4915918	Argument	""".dev"""		4915645	1					
ANR	4915919	PrimaryExpression	""".dev"""		4915645	0					
ANR	4915920	ExpressionStatement	"out = fopen ( fname , ( append ? ""a"" : ""w"" ) )"	140:8:3974:4014	4915645	3	True				
ANR	4915921	AssignmentExpression	"out = fopen ( fname , ( append ? ""a"" : ""w"" ) )"		4915645	0		=			
ANR	4915922	Identifier	out		4915645	0					
ANR	4915923	CallExpression	"fopen ( fname , ( append ? ""a"" : ""w"" ) )"		4915645	1					
ANR	4915924	Callee	fopen		4915645	0					
ANR	4915925	Identifier	fopen		4915645	0					
ANR	4915926	ArgumentList	fname		4915645	1					
ANR	4915927	Argument	fname		4915645	0					
ANR	4915928	Identifier	fname		4915645	0					
ANR	4915929	Argument	"append ? ""a"" : ""w"""		4915645	1					
ANR	4915930	ConditionalExpression	"append ? ""a"" : ""w"""		4915645	0					
ANR	4915931	Condition	append		4915645	0					
ANR	4915932	Identifier	append		4915645	0					
ANR	4915933	PrimaryExpression	"""a"""		4915645	1					
ANR	4915934	PrimaryExpression	"""w"""		4915645	2					
ANR	4915935	IfStatement	if ( out == 0 )		4915645	4					
ANR	4915936	Condition	out == 0	141:12:4028:4035	4915645	0	True				
ANR	4915937	EqualityExpression	out == 0		4915645	0		==			
ANR	4915938	Identifier	out		4915645	0					
ANR	4915939	PrimaryExpression	0		4915645	1					
ANR	4915940	CompoundStatement		61:22:1694:1694	4915645	1					
ANR	4915941	ExpressionStatement	"fprintf ( stderr , ""Can't open %s for output.\\n"" , fname )"	142:12:4052:4105	4915645	0	True				
ANR	4915942	CallExpression	"fprintf ( stderr , ""Can't open %s for output.\\n"" , fname )"		4915645	0					
ANR	4915943	Callee	fprintf		4915645	0					
ANR	4915944	Identifier	fprintf		4915645	0					
ANR	4915945	ArgumentList	stderr		4915645	1					
ANR	4915946	Argument	stderr		4915645	0					
ANR	4915947	Identifier	stderr		4915645	0					
ANR	4915948	Argument	"""Can't open %s for output.\\n"""		4915645	1					
ANR	4915949	PrimaryExpression	"""Can't open %s for output.\\n"""		4915645	0					
ANR	4915950	Argument	fname		4915645	2					
ANR	4915951	Identifier	fname		4915645	0					
ANR	4915952	ExpressionStatement	exit ( 1 )	143:12:4119:4126	4915645	1	True				
ANR	4915953	CallExpression	exit ( 1 )		4915645	0					
ANR	4915954	Callee	exit		4915645	0					
ANR	4915955	Identifier	exit		4915645	0					
ANR	4915956	ArgumentList	1		4915645	1					
ANR	4915957	Argument	1		4915645	0					
ANR	4915958	PrimaryExpression	1		4915645	0					
ANR	4915959	IfStatement	if ( ! append )		4915645	5					
ANR	4915960	Condition	! append	145:12:4150:4156	4915645	0	True				
ANR	4915961	UnaryOperationExpression	! append		4915645	0					
ANR	4915962	UnaryOperator	!		4915645	0					
ANR	4915963	Identifier	append		4915645	1					
ANR	4915964	ExpressionStatement	"fprintf ( out , ""/*\\n * File %s created automatically by gendev.\\n */\\n"" , fname )"	146:12:4171:4288	4915645	1	True				
ANR	4915965	CallExpression	"fprintf ( out , ""/*\\n * File %s created automatically by gendev.\\n */\\n"" , fname )"		4915645	0					
ANR	4915966	Callee	fprintf		4915645	0					
ANR	4915967	Identifier	fprintf		4915645	0					
ANR	4915968	ArgumentList	out		4915645	1					
ANR	4915969	Argument	out		4915645	0					
ANR	4915970	Identifier	out		4915645	0					
ANR	4915971	Argument	"""/*\\n * File %s created automatically by gendev.\\n */\\n"""		4915645	1					
ANR	4915972	PrimaryExpression	"""/*\\n * File %s created automatically by gendev.\\n */\\n"""		4915645	0					
ANR	4915973	Argument	fname		4915645	2					
ANR	4915974	Identifier	fname		4915645	0					
ANR	4915975	ExpressionStatement	conf . out = out	150:4:4300:4314	4915645	12	True				
ANR	4915976	AssignmentExpression	conf . out = out		4915645	0		=			
ANR	4915977	MemberAccess	conf . out		4915645	0					
ANR	4915978	Identifier	conf		4915645	0					
ANR	4915979	Identifier	out		4915645	1					
ANR	4915980	Identifier	out		4915645	1					
ANR	4915981	ExpressionStatement	pos = ftell ( out )	151:4:4320:4336	4915645	13	True				
ANR	4915982	AssignmentExpression	pos = ftell ( out )		4915645	0		=			
ANR	4915983	Identifier	pos		4915645	0					
ANR	4915984	CallExpression	ftell ( out )		4915645	1					
ANR	4915985	Callee	ftell		4915645	0					
ANR	4915986	Identifier	ftell		4915645	0					
ANR	4915987	ArgumentList	out		4915645	1					
ANR	4915988	Argument	out		4915645	0					
ANR	4915989	Identifier	out		4915645	0					
ANR	4915990	ExpressionStatement	"fprintf ( out , ""\\n#%sifndef %s_%ld_INCLUDED\\n"" , indent_INCLUDED , fnarg , pos )"	153:4:4417:4503	4915645	14	True				
ANR	4915991	CallExpression	"fprintf ( out , ""\\n#%sifndef %s_%ld_INCLUDED\\n"" , indent_INCLUDED , fnarg , pos )"		4915645	0					
ANR	4915992	Callee	fprintf		4915645	0					
ANR	4915993	Identifier	fprintf		4915645	0					
ANR	4915994	ArgumentList	out		4915645	1					
ANR	4915995	Argument	out		4915645	0					
ANR	4915996	Identifier	out		4915645	0					
ANR	4915997	Argument	"""\\n#%sifndef %s_%ld_INCLUDED\\n"""		4915645	1					
ANR	4915998	PrimaryExpression	"""\\n#%sifndef %s_%ld_INCLUDED\\n"""		4915645	0					
ANR	4915999	Argument	indent_INCLUDED		4915645	2					
ANR	4916000	Identifier	indent_INCLUDED		4915645	0					
ANR	4916001	Argument	fnarg		4915645	3					
ANR	4916002	Identifier	fnarg		4915645	0					
ANR	4916003	Argument	pos		4915645	4					
ANR	4916004	Identifier	pos		4915645	0					
ANR	4916005	ExpressionStatement	"fprintf ( out , ""#%s  define %s_%ld_INCLUDED\\n"" , indent_INCLUDED , fnarg , pos )"	155:4:4509:4595	4915645	15	True				
ANR	4916006	CallExpression	"fprintf ( out , ""#%s  define %s_%ld_INCLUDED\\n"" , indent_INCLUDED , fnarg , pos )"		4915645	0					
ANR	4916007	Callee	fprintf		4915645	0					
ANR	4916008	Identifier	fprintf		4915645	0					
ANR	4916009	ArgumentList	out		4915645	1					
ANR	4916010	Argument	out		4915645	0					
ANR	4916011	Identifier	out		4915645	0					
ANR	4916012	Argument	"""#%s  define %s_%ld_INCLUDED\\n"""		4915645	1					
ANR	4916013	PrimaryExpression	"""#%s  define %s_%ld_INCLUDED\\n"""		4915645	0					
ANR	4916014	Argument	indent_INCLUDED		4915645	2					
ANR	4916015	Identifier	indent_INCLUDED		4915645	0					
ANR	4916016	Argument	fnarg		4915645	3					
ANR	4916017	Identifier	fnarg		4915645	0					
ANR	4916018	Argument	pos		4915645	4					
ANR	4916019	Identifier	pos		4915645	0					
ANR	4916020	ForStatement	for ( j = 0 ; fnarg [ j ] != 0 ; ++ j )		4915645	16					
ANR	4916021	ForInit	j = 0 ;	158:9:4660:4665	4915645	0	True				
ANR	4916022	AssignmentExpression	j = 0		4915645	0		=			
ANR	4916023	Identifier	j		4915645	0					
ANR	4916024	PrimaryExpression	0		4915645	1					
ANR	4916025	Condition	fnarg [ j ] != 0	158:16:4667:4679	4915645	1	True				
ANR	4916026	EqualityExpression	fnarg [ j ] != 0		4915645	0		!=			
ANR	4916027	ArrayIndexing	fnarg [ j ]		4915645	0					
ANR	4916028	Identifier	fnarg		4915645	0					
ANR	4916029	Identifier	j		4915645	1					
ANR	4916030	PrimaryExpression	0		4915645	1					
ANR	4916031	UnaryExpression	++ j	158:31:4682:4684	4915645	2	True				
ANR	4916032	IncDec	++		4915645	0					
ANR	4916033	Identifier	j		4915645	1					
ANR	4916034	ExpressionStatement	conf . file_id = conf . file_id * 41 + fnarg [ j ]	159:8:4695:4738	4915645	3	True				
ANR	4916035	AssignmentExpression	conf . file_id = conf . file_id * 41 + fnarg [ j ]		4915645	0		=			
ANR	4916036	MemberAccess	conf . file_id		4915645	0					
ANR	4916037	Identifier	conf		4915645	0					
ANR	4916038	Identifier	file_id		4915645	1					
ANR	4916039	AdditiveExpression	conf . file_id * 41 + fnarg [ j ]		4915645	1		+			
ANR	4916040	MultiplicativeExpression	conf . file_id * 41		4915645	0		*			
ANR	4916041	MemberAccess	conf . file_id		4915645	0					
ANR	4916042	Identifier	conf		4915645	0					
ANR	4916043	Identifier	file_id		4915645	1					
ANR	4916044	PrimaryExpression	41		4915645	1					
ANR	4916045	ArrayIndexing	fnarg [ j ]		4915645	1					
ANR	4916046	Identifier	fnarg		4915645	0					
ANR	4916047	Identifier	j		4915645	1					
ANR	4916048	ExpressionStatement	conf . item_id <<= ITEM_ID_BITS	160:4:4744:4773	4915645	17	True				
ANR	4916049	AssignmentExpression	conf . item_id <<= ITEM_ID_BITS		4915645	0		<<=			
ANR	4916050	MemberAccess	conf . item_id		4915645	0					
ANR	4916051	Identifier	conf		4915645	0					
ANR	4916052	Identifier	item_id		4915645	1					
ANR	4916053	Identifier	ITEM_ID_BITS		4915645	1					
ANR	4916054	IfStatement	if ( dev )		4915645	18					
ANR	4916055	Condition	dev	162:8:4815:4817	4915645	0	True				
ANR	4916056	Identifier	dev		4915645	0					
ANR	4916057	ExpressionStatement	"add_entry ( & conf , ""dev"" , fnarg , false )"	163:8:4828:4865	4915645	1	True				
ANR	4916058	CallExpression	"add_entry ( & conf , ""dev"" , fnarg , false )"		4915645	0					
ANR	4916059	Callee	add_entry		4915645	0					
ANR	4916060	Identifier	add_entry		4915645	0					
ANR	4916061	ArgumentList	& conf		4915645	1					
ANR	4916062	Argument	& conf		4915645	0					
ANR	4916063	UnaryOperationExpression	& conf		4915645	0					
ANR	4916064	UnaryOperator	&		4915645	0					
ANR	4916065	Identifier	conf		4915645	1					
ANR	4916066	Argument	"""dev"""		4915645	1					
ANR	4916067	PrimaryExpression	"""dev"""		4915645	0					
ANR	4916068	Argument	fnarg		4915645	2					
ANR	4916069	Identifier	fnarg		4915645	0					
ANR	4916070	Argument	false		4915645	3					
ANR	4916071	Identifier	false		4915645	0					
ANR	4916072	ForStatement	for ( j = i + 1 ; j < argc ; ++ j )		4915645	19					
ANR	4916073	ForInit	j = i + 1 ;	164:9:4876:4885	4915645	0	True				
ANR	4916074	AssignmentExpression	j = i + 1		4915645	0		=			
ANR	4916075	Identifier	j		4915645	0					
ANR	4916076	AdditiveExpression	i + 1		4915645	1		+			
ANR	4916077	Identifier	i		4915645	0					
ANR	4916078	PrimaryExpression	1		4915645	1					
ANR	4916079	Condition	j < argc	164:20:4887:4894	4915645	1	True				
ANR	4916080	RelationalExpression	j < argc		4915645	0		<			
ANR	4916081	Identifier	j		4915645	0					
ANR	4916082	Identifier	argc		4915645	1					
ANR	4916083	UnaryExpression	++ j	164:30:4897:4899	4915645	2	True				
ANR	4916084	IncDec	++		4915645	0					
ANR	4916085	Identifier	j		4915645	1					
ANR	4916086	CompoundStatement		85:8:2568:2593	4915645	3					
ANR	4916087	IdentifierDeclStatement	const char * arg = argv [ j ] ;	165:8:4912:4937	4915645	0	True				
ANR	4916088	IdentifierDecl	* arg = argv [ j ]		4915645	0					
ANR	4916089	IdentifierDeclType	const char *		4915645	0					
ANR	4916090	Identifier	arg		4915645	1					
ANR	4916091	AssignmentExpression	* arg = argv [ j ]		4915645	2		=			
ANR	4916092	Identifier	arg		4915645	0					
ANR	4916093	ArrayIndexing	argv [ j ]		4915645	1					
ANR	4916094	Identifier	argv		4915645	0					
ANR	4916095	Identifier	j		4915645	1					
ANR	4916096	IfStatement	if ( arg [ 0 ] == '-' )		4915645	1					
ANR	4916097	Condition	arg [ 0 ] == '-'	167:12:4952:4964	4915645	0	True				
ANR	4916098	EqualityExpression	arg [ 0 ] == '-'		4915645	0		==			
ANR	4916099	ArrayIndexing	arg [ 0 ]		4915645	0					
ANR	4916100	Identifier	arg		4915645	0					
ANR	4916101	PrimaryExpression	0		4915645	1					
ANR	4916102	PrimaryExpression	'-'		4915645	1					
ANR	4916103	ExpressionStatement	category = arg + 1	168:12:4979:4997	4915645	1	True				
ANR	4916104	AssignmentExpression	category = arg + 1		4915645	0		=			
ANR	4916105	Identifier	category		4915645	0					
ANR	4916106	AdditiveExpression	arg + 1		4915645	1		+			
ANR	4916107	Identifier	arg		4915645	0					
ANR	4916108	PrimaryExpression	1		4915645	1					
ANR	4916109	ElseStatement	else		4915645	0					
ANR	4916110	ExpressionStatement	"add_entry ( & conf , category , arg , false )"	170:12:5024:5062	4915645	0	True				
ANR	4916111	CallExpression	"add_entry ( & conf , category , arg , false )"		4915645	0					
ANR	4916112	Callee	add_entry		4915645	0					
ANR	4916113	Identifier	add_entry		4915645	0					
ANR	4916114	ArgumentList	& conf		4915645	1					
ANR	4916115	Argument	& conf		4915645	0					
ANR	4916116	UnaryOperationExpression	& conf		4915645	0					
ANR	4916117	UnaryOperator	&		4915645	0					
ANR	4916118	Identifier	conf		4915645	1					
ANR	4916119	Argument	category		4915645	1					
ANR	4916120	Identifier	category		4915645	0					
ANR	4916121	Argument	arg		4915645	2					
ANR	4916122	Identifier	arg		4915645	0					
ANR	4916123	Argument	false		4915645	3					
ANR	4916124	Identifier	false		4915645	0					
ANR	4916125	IfStatement	if ( conf . in_category )		4915645	20					
ANR	4916126	Condition	conf . in_category	172:8:5078:5093	4915645	0	True				
ANR	4916127	MemberAccess	conf . in_category		4915645	0					
ANR	4916128	Identifier	conf		4915645	0					
ANR	4916129	Identifier	in_category		4915645	1					
ANR	4916130	ExpressionStatement	"fprintf ( out , ""#%sendif /* -%s */\\n"" , indent_category , conf . current_category )"	173:8:5104:5196	4915645	1	True				
ANR	4916131	CallExpression	"fprintf ( out , ""#%sendif /* -%s */\\n"" , indent_category , conf . current_category )"		4915645	0					
ANR	4916132	Callee	fprintf		4915645	0					
ANR	4916133	Identifier	fprintf		4915645	0					
ANR	4916134	ArgumentList	out		4915645	1					
ANR	4916135	Argument	out		4915645	0					
ANR	4916136	Identifier	out		4915645	0					
ANR	4916137	Argument	"""#%sendif /* -%s */\\n"""		4915645	1					
ANR	4916138	PrimaryExpression	"""#%sendif /* -%s */\\n"""		4915645	0					
ANR	4916139	Argument	indent_category		4915645	2					
ANR	4916140	Identifier	indent_category		4915645	0					
ANR	4916141	Argument	conf . current_category		4915645	3					
ANR	4916142	MemberAccess	conf . current_category		4915645	0					
ANR	4916143	Identifier	conf		4915645	0					
ANR	4916144	Identifier	current_category		4915645	1					
ANR	4916145	IfStatement	if ( conf . any_scan_items )		4915645	21					
ANR	4916146	Condition	conf . any_scan_items	176:8:5250:5268	4915645	0	True				
ANR	4916147	MemberAccess	conf . any_scan_items		4915645	0					
ANR	4916148	Identifier	conf		4915645	0					
ANR	4916149	Identifier	any_scan_items		4915645	1					
ANR	4916150	CompoundStatement		96:29:2927:2927	4915645	1					
ANR	4916151	IfStatement	if ( conf . in_res_scan )		4915645	0					
ANR	4916152	Condition	conf . in_res_scan	177:12:5285:5300	4915645	0	True				
ANR	4916153	MemberAccess	conf . in_res_scan		4915645	0					
ANR	4916154	Identifier	conf		4915645	0					
ANR	4916155	Identifier	in_res_scan		4915645	1					
ANR	4916156	ExpressionStatement	"fprintf ( out , ""#%selse /* RES_SCAN */\\n"" , indent_RES_SCAN )"	178:12:5315:5372	4915645	1	True				
ANR	4916157	CallExpression	"fprintf ( out , ""#%selse /* RES_SCAN */\\n"" , indent_RES_SCAN )"		4915645	0					
ANR	4916158	Callee	fprintf		4915645	0					
ANR	4916159	Identifier	fprintf		4915645	0					
ANR	4916160	ArgumentList	out		4915645	1					
ANR	4916161	Argument	out		4915645	0					
ANR	4916162	Identifier	out		4915645	0					
ANR	4916163	Argument	"""#%selse /* RES_SCAN */\\n"""		4915645	1					
ANR	4916164	PrimaryExpression	"""#%selse /* RES_SCAN */\\n"""		4915645	0					
ANR	4916165	Argument	indent_RES_SCAN		4915645	2					
ANR	4916166	Identifier	indent_RES_SCAN		4915645	0					
ANR	4916167	ElseStatement	else		4915645	0					
ANR	4916168	ExpressionStatement	"fprintf ( out , ""#%sifdef RES_SCAN\\n"" , indent_RES_SCAN )"	180:12:5399:5451	4915645	0	True				
ANR	4916169	CallExpression	"fprintf ( out , ""#%sifdef RES_SCAN\\n"" , indent_RES_SCAN )"		4915645	0					
ANR	4916170	Callee	fprintf		4915645	0					
ANR	4916171	Identifier	fprintf		4915645	0					
ANR	4916172	ArgumentList	out		4915645	1					
ANR	4916173	Argument	out		4915645	0					
ANR	4916174	Identifier	out		4915645	0					
ANR	4916175	Argument	"""#%sifdef RES_SCAN\\n"""		4915645	1					
ANR	4916176	PrimaryExpression	"""#%sifdef RES_SCAN\\n"""		4915645	0					
ANR	4916177	Argument	indent_RES_SCAN		4915645	2					
ANR	4916178	Identifier	indent_RES_SCAN		4915645	0					
ANR	4916179	ExpressionStatement	conf . in_res_scan = true	181:8:5461:5484	4915645	1	True				
ANR	4916180	AssignmentExpression	conf . in_res_scan = true		4915645	0		=			
ANR	4916181	MemberAccess	conf . in_res_scan		4915645	0					
ANR	4916182	Identifier	conf		4915645	0					
ANR	4916183	Identifier	in_res_scan		4915645	1					
ANR	4916184	Identifier	true		4915645	1					
ANR	4916185	ExpressionStatement	category = INITIAL_CATEGORY	182:8:5494:5521	4915645	2	True				
ANR	4916186	AssignmentExpression	category = INITIAL_CATEGORY		4915645	0		=			
ANR	4916187	Identifier	category		4915645	0					
ANR	4916188	Identifier	INITIAL_CATEGORY		4915645	1					
ANR	4916189	ExpressionStatement	conf . item_id = 0	183:8:5531:5547	4915645	3	True				
ANR	4916190	AssignmentExpression	conf . item_id = 0		4915645	0		=			
ANR	4916191	MemberAccess	conf . item_id		4915645	0					
ANR	4916192	Identifier	conf		4915645	0					
ANR	4916193	Identifier	item_id		4915645	1					
ANR	4916194	PrimaryExpression	0		4915645	1					
ANR	4916195	ForStatement	for ( j = i + 1 ; j < argc ; ++ j )		4915645	4					
ANR	4916196	ForInit	j = i + 1 ;	184:13:5562:5571	4915645	0	True				
ANR	4916197	AssignmentExpression	j = i + 1		4915645	0		=			
ANR	4916198	Identifier	j		4915645	0					
ANR	4916199	AdditiveExpression	i + 1		4915645	1		+			
ANR	4916200	Identifier	i		4915645	0					
ANR	4916201	PrimaryExpression	1		4915645	1					
ANR	4916202	Condition	j < argc	184:24:5573:5580	4915645	1	True				
ANR	4916203	RelationalExpression	j < argc		4915645	0		<			
ANR	4916204	Identifier	j		4915645	0					
ANR	4916205	Identifier	argc		4915645	1					
ANR	4916206	UnaryExpression	++ j	184:34:5583:5585	4915645	2	True				
ANR	4916207	IncDec	++		4915645	0					
ANR	4916208	Identifier	j		4915645	1					
ANR	4916209	CompoundStatement		105:12:3258:3283	4915645	3					
ANR	4916210	IdentifierDeclStatement	const char * arg = argv [ j ] ;	185:12:5602:5627	4915645	0	True				
ANR	4916211	IdentifierDecl	* arg = argv [ j ]		4915645	0					
ANR	4916212	IdentifierDeclType	const char *		4915645	0					
ANR	4916213	Identifier	arg		4915645	1					
ANR	4916214	AssignmentExpression	* arg = argv [ j ]		4915645	2		=			
ANR	4916215	Identifier	arg		4915645	0					
ANR	4916216	ArrayIndexing	argv [ j ]		4915645	1					
ANR	4916217	Identifier	argv		4915645	0					
ANR	4916218	Identifier	j		4915645	1					
ANR	4916219	IfStatement	if ( arg [ 0 ] == '-' )		4915645	1					
ANR	4916220	Condition	arg [ 0 ] == '-'	187:16:5646:5658	4915645	0	True				
ANR	4916221	EqualityExpression	arg [ 0 ] == '-'		4915645	0		==			
ANR	4916222	ArrayIndexing	arg [ 0 ]		4915645	0					
ANR	4916223	Identifier	arg		4915645	0					
ANR	4916224	PrimaryExpression	0		4915645	1					
ANR	4916225	PrimaryExpression	'-'		4915645	1					
ANR	4916226	ExpressionStatement	category = arg + 1	188:16:5677:5695	4915645	1	True				
ANR	4916227	AssignmentExpression	category = arg + 1		4915645	0		=			
ANR	4916228	Identifier	category		4915645	0					
ANR	4916229	AdditiveExpression	arg + 1		4915645	1		+			
ANR	4916230	Identifier	arg		4915645	0					
ANR	4916231	PrimaryExpression	1		4915645	1					
ANR	4916232	ElseStatement	else		4915645	0					
ANR	4916233	ExpressionStatement	"add_entry ( & conf , category , arg , true )"	190:16:5730:5767	4915645	0	True				
ANR	4916234	CallExpression	"add_entry ( & conf , category , arg , true )"		4915645	0					
ANR	4916235	Callee	add_entry		4915645	0					
ANR	4916236	Identifier	add_entry		4915645	0					
ANR	4916237	ArgumentList	& conf		4915645	1					
ANR	4916238	Argument	& conf		4915645	0					
ANR	4916239	UnaryOperationExpression	& conf		4915645	0					
ANR	4916240	UnaryOperator	&		4915645	0					
ANR	4916241	Identifier	conf		4915645	1					
ANR	4916242	Argument	category		4915645	1					
ANR	4916243	Identifier	category		4915645	0					
ANR	4916244	Argument	arg		4915645	2					
ANR	4916245	Identifier	arg		4915645	0					
ANR	4916246	Argument	true		4915645	3					
ANR	4916247	Identifier	true		4915645	0					
ANR	4916248	IfStatement	if ( conf . in_res_scan )		4915645	22					
ANR	4916249	Condition	conf . in_res_scan	193:8:5793:5808	4915645	0	True				
ANR	4916250	MemberAccess	conf . in_res_scan		4915645	0					
ANR	4916251	Identifier	conf		4915645	0					
ANR	4916252	Identifier	in_res_scan		4915645	1					
ANR	4916253	ExpressionStatement	"fprintf ( out , ""#%sendif /* RES_SCAN */\\n"" , indent_RES_SCAN )"	194:8:5819:5877	4915645	1	True				
ANR	4916254	CallExpression	"fprintf ( out , ""#%sendif /* RES_SCAN */\\n"" , indent_RES_SCAN )"		4915645	0					
ANR	4916255	Callee	fprintf		4915645	0					
ANR	4916256	Identifier	fprintf		4915645	0					
ANR	4916257	ArgumentList	out		4915645	1					
ANR	4916258	Argument	out		4915645	0					
ANR	4916259	Identifier	out		4915645	0					
ANR	4916260	Argument	"""#%sendif /* RES_SCAN */\\n"""		4915645	1					
ANR	4916261	PrimaryExpression	"""#%sendif /* RES_SCAN */\\n"""		4915645	0					
ANR	4916262	Argument	indent_RES_SCAN		4915645	2					
ANR	4916263	Identifier	indent_RES_SCAN		4915645	0					
ANR	4916264	ExpressionStatement	"fprintf ( out , ""#%sendif /* !%s_%ld_INCLUDED */\\n"" , indent_INCLUDED , fnarg , pos )"	195:4:5883:5973	4915645	23	True				
ANR	4916265	CallExpression	"fprintf ( out , ""#%sendif /* !%s_%ld_INCLUDED */\\n"" , indent_INCLUDED , fnarg , pos )"		4915645	0					
ANR	4916266	Callee	fprintf		4915645	0					
ANR	4916267	Identifier	fprintf		4915645	0					
ANR	4916268	ArgumentList	out		4915645	1					
ANR	4916269	Argument	out		4915645	0					
ANR	4916270	Identifier	out		4915645	0					
ANR	4916271	Argument	"""#%sendif /* !%s_%ld_INCLUDED */\\n"""		4915645	1					
ANR	4916272	PrimaryExpression	"""#%sendif /* !%s_%ld_INCLUDED */\\n"""		4915645	0					
ANR	4916273	Argument	indent_INCLUDED		4915645	2					
ANR	4916274	Identifier	indent_INCLUDED		4915645	0					
ANR	4916275	Argument	fnarg		4915645	3					
ANR	4916276	Identifier	fnarg		4915645	0					
ANR	4916277	Argument	pos		4915645	4					
ANR	4916278	Identifier	pos		4915645	0					
ANR	4916279	ExpressionStatement	fclose ( out )	197:4:5979:5990	4915645	24	True				
ANR	4916280	CallExpression	fclose ( out )		4915645	0					
ANR	4916281	Callee	fclose		4915645	0					
ANR	4916282	Identifier	fclose		4915645	0					
ANR	4916283	ArgumentList	out		4915645	1					
ANR	4916284	Argument	out		4915645	0					
ANR	4916285	Identifier	out		4915645	0					
ANR	4916286	ExpressionStatement	exit ( 0 )	198:4:5996:6003	4915645	25	True				
ANR	4916287	CallExpression	exit ( 0 )		4915645	0					
ANR	4916288	Callee	exit		4915645	0					
ANR	4916289	Identifier	exit		4915645	0					
ANR	4916290	ArgumentList	0		4915645	1					
ANR	4916291	Argument	0		4915645	0					
ANR	4916292	PrimaryExpression	0		4915645	0					
ANR	4916293	Identifier	main		4915645	1					
ANR	4916294	ParameterList	"int argc , char * argv [ ]"		4915645	2					
ANR	4916295	Parameter	int argc	80:5:2319:2326	4915645	0	True				
ANR	4916296	ParameterType	int		4915645	0					
ANR	4916297	Identifier	argc		4915645	1					
ANR	4916298	Parameter	char * argv [ ]	80:15:2329:2340	4915645	1	True				
ANR	4916299	ParameterType	char * [ ]		4915645	0					
ANR	4916300	Identifier	argv		4915645	1					
ANR	4916301	CFGEntryNode	ENTRY		4915645		True				
ANR	4916302	CFGExitNode	EXIT		4915645		True				
ANR	4916303	Symbol	conf . in_category		4915645						
ANR	4916304	Symbol	ftell		4915645						
ANR	4916305	Symbol	conf . current_category		4915645						
ANR	4916306	Symbol	conf . in_res_scan		4915645						
ANR	4916307	Symbol	conf		4915645						
ANR	4916308	Symbol	* argv		4915645						
ANR	4916309	Symbol	argv		4915645						
ANR	4916310	Symbol	out		4915645						
ANR	4916311	Symbol	conf . item_id		4915645						
ANR	4916312	Symbol	ITEM_ID_BITS		4915645						
ANR	4916313	Symbol	dev		4915645						
ANR	4916314	Symbol	pos		4915645						
ANR	4916315	Symbol	arg		4915645						
ANR	4916316	Symbol	& conf		4915645						
ANR	4916317	Symbol	* * argv		4915645						
ANR	4916318	Symbol	conf . file_prefix		4915645						
ANR	4916319	Symbol	conf . debug		4915645						
ANR	4916320	Symbol	conf . any_scan_items		4915645						
ANR	4916321	Symbol	fnarg		4915645						
ANR	4916322	Symbol	argc		4915645						
ANR	4916323	Symbol	fname		4915645						
ANR	4916324	Symbol	fopen		4915645						
ANR	4916325	Symbol	* * i		4915645						
ANR	4916326	Symbol	conf . file_id		4915645						
ANR	4916327	Symbol	conf . name_prefix		4915645						
ANR	4916328	Symbol	conf . out		4915645						
ANR	4916329	Symbol	indent_INCLUDED		4915645						
ANR	4916330	Symbol	false		4915645						
ANR	4916331	Symbol	i		4915645						
ANR	4916332	Symbol	* fnarg		4915645						
ANR	4916333	Symbol	j		4915645						
ANR	4916334	Symbol	stderr		4915645						
ANR	4916335	Symbol	indent_category		4915645						
ANR	4916336	Symbol	* i		4915645						
ANR	4916337	Symbol	init_config		4915645						
ANR	4916338	Symbol	* j		4915645						
ANR	4916339	Symbol	true		4915645						
ANR	4916340	Symbol	category		4915645						
ANR	4916341	Symbol	indent_RES_SCAN		4915645						
ANR	4916342	Symbol	INITIAL_CATEGORY		4915645						
ANR	4916343	Symbol	append		4915645						
ANR	4916344	Symbol	* arg		4915645						
ANR	4916345	ClassDef	<unnamed>	202:8:6050:6117							
ANR	4916346	DeclStmt									
ANR	4916347	Decl									uniq_mode
ANR	4916348	Function	write_item	207:0:6119:7685							
ANR	4916349	FunctionDef	"write_item (config * pconf , const char * str , const char * category , const char * item , uniq_mode mode)"		4916348	0					
ANR	4916350	CompoundStatement		210:0:6235:7685	4916348	0					
ANR	4916351	IdentifierDeclStatement	FILE * out = pconf -> out ;	211:4:6241:6263	4916348	0	True				
ANR	4916352	IdentifierDecl	* out = pconf -> out		4916348	0					
ANR	4916353	IdentifierDeclType	FILE *		4916348	0					
ANR	4916354	Identifier	out		4916348	1					
ANR	4916355	AssignmentExpression	* out = pconf -> out		4916348	2		=			
ANR	4916356	Identifier	out		4916348	0					
ANR	4916357	PtrMemberAccess	pconf -> out		4916348	1					
ANR	4916358	Identifier	pconf		4916348	0					
ANR	4916359	Identifier	out		4916348	1					
ANR	4916360	IdentifierDeclStatement	char cati [ 80 ] ;	212:4:6269:6282	4916348	1	True				
ANR	4916361	IdentifierDecl	cati [ 80 ]		4916348	0					
ANR	4916362	IdentifierDeclType	char [ 80 ]		4916348	0					
ANR	4916363	Identifier	cati		4916348	1					
ANR	4916364	PrimaryExpression	80		4916348	2					
ANR	4916365	IfStatement	if ( ! pconf -> in_res_scan )		4916348	2					
ANR	4916366	Condition	! pconf -> in_res_scan	214:8:6293:6311	4916348	0	True				
ANR	4916367	UnaryOperationExpression	! pconf -> in_res_scan		4916348	0					
ANR	4916368	UnaryOperator	!		4916348	0					
ANR	4916369	PtrMemberAccess	pconf -> in_res_scan		4916348	1					
ANR	4916370	Identifier	pconf		4916348	0					
ANR	4916371	Identifier	in_res_scan		4916348	1					
ANR	4916372	CompoundStatement		5:29:78:78	4916348	1					
ANR	4916373	ExpressionStatement	"fprintf ( out , ""#%sifndef RES_SCAN\\n"" , indent_RES_SCAN )"	215:8:6324:6377	4916348	0	True				
ANR	4916374	CallExpression	"fprintf ( out , ""#%sifndef RES_SCAN\\n"" , indent_RES_SCAN )"		4916348	0					
ANR	4916375	Callee	fprintf		4916348	0					
ANR	4916376	Identifier	fprintf		4916348	0					
ANR	4916377	ArgumentList	out		4916348	1					
ANR	4916378	Argument	out		4916348	0					
ANR	4916379	Identifier	out		4916348	0					
ANR	4916380	Argument	"""#%sifndef RES_SCAN\\n"""		4916348	1					
ANR	4916381	PrimaryExpression	"""#%sifndef RES_SCAN\\n"""		4916348	0					
ANR	4916382	Argument	indent_RES_SCAN		4916348	2					
ANR	4916383	Identifier	indent_RES_SCAN		4916348	0					
ANR	4916384	ExpressionStatement	pconf -> in_res_scan = true	216:8:6387:6412	4916348	1	True				
ANR	4916385	AssignmentExpression	pconf -> in_res_scan = true		4916348	0		=			
ANR	4916386	PtrMemberAccess	pconf -> in_res_scan		4916348	0					
ANR	4916387	Identifier	pconf		4916348	0					
ANR	4916388	Identifier	in_res_scan		4916348	1					
ANR	4916389	Identifier	true		4916348	1					
ANR	4916390	IfStatement	"if ( strcmp ( pconf -> current_category , category ) )"		4916348	3					
ANR	4916391	Condition	"strcmp ( pconf -> current_category , category )"	218:8:6428:6468	4916348	0	True				
ANR	4916392	CallExpression	"strcmp ( pconf -> current_category , category )"		4916348	0					
ANR	4916393	Callee	strcmp		4916348	0					
ANR	4916394	Identifier	strcmp		4916348	0					
ANR	4916395	ArgumentList	pconf -> current_category		4916348	1					
ANR	4916396	Argument	pconf -> current_category		4916348	0					
ANR	4916397	PtrMemberAccess	pconf -> current_category		4916348	0					
ANR	4916398	Identifier	pconf		4916348	0					
ANR	4916399	Identifier	current_category		4916348	1					
ANR	4916400	Argument	category		4916348	1					
ANR	4916401	Identifier	category		4916348	0					
ANR	4916402	CompoundStatement		10:8:245:281	4916348	1					
ANR	4916403	IdentifierDeclStatement	"const char * paren = strchr ( str , '(' ) ;"	219:8:6481:6517	4916348	0	True				
ANR	4916404	IdentifierDecl	"* paren = strchr ( str , '(' )"		4916348	0					
ANR	4916405	IdentifierDeclType	const char *		4916348	0					
ANR	4916406	Identifier	paren		4916348	1					
ANR	4916407	AssignmentExpression	"* paren = strchr ( str , '(' )"		4916348	2		=			
ANR	4916408	Identifier	paren		4916348	0					
ANR	4916409	CallExpression	"strchr ( str , '(' )"		4916348	1					
ANR	4916410	Callee	strchr		4916348	0					
ANR	4916411	Identifier	strchr		4916348	0					
ANR	4916412	ArgumentList	str		4916348	1					
ANR	4916413	Argument	str		4916348	0					
ANR	4916414	Identifier	str		4916348	0					
ANR	4916415	Argument	'('		4916348	1					
ANR	4916416	PrimaryExpression	'('		4916348	0					
ANR	4916417	IfStatement	if ( pconf -> in_category )		4916348	1					
ANR	4916418	Condition	pconf -> in_category	221:12:6532:6549	4916348	0	True				
ANR	4916419	PtrMemberAccess	pconf -> in_category		4916348	0					
ANR	4916420	Identifier	pconf		4916348	0					
ANR	4916421	Identifier	in_category		4916348	1					
ANR	4916422	ExpressionStatement	"fprintf ( out , ""#%sendif /* -%s */\\n"" , indent_category , pconf -> current_category )"	222:12:6564:6662	4916348	1	True				
ANR	4916423	CallExpression	"fprintf ( out , ""#%sendif /* -%s */\\n"" , indent_category , pconf -> current_category )"		4916348	0					
ANR	4916424	Callee	fprintf		4916348	0					
ANR	4916425	Identifier	fprintf		4916348	0					
ANR	4916426	ArgumentList	out		4916348	1					
ANR	4916427	Argument	out		4916348	0					
ANR	4916428	Identifier	out		4916348	0					
ANR	4916429	Argument	"""#%sendif /* -%s */\\n"""		4916348	1					
ANR	4916430	PrimaryExpression	"""#%sendif /* -%s */\\n"""		4916348	0					
ANR	4916431	Argument	indent_category		4916348	2					
ANR	4916432	Identifier	indent_category		4916348	0					
ANR	4916433	Argument	pconf -> current_category		4916348	3					
ANR	4916434	PtrMemberAccess	pconf -> current_category		4916348	0					
ANR	4916435	Identifier	pconf		4916348	0					
ANR	4916436	Identifier	current_category		4916348	1					
ANR	4916437	ExpressionStatement	"fprintf ( out , ""#%sifdef "" , indent_category )"	224:8:6672:6714	4916348	2	True				
ANR	4916438	CallExpression	"fprintf ( out , ""#%sifdef "" , indent_category )"		4916348	0					
ANR	4916439	Callee	fprintf		4916348	0					
ANR	4916440	Identifier	fprintf		4916348	0					
ANR	4916441	ArgumentList	out		4916348	1					
ANR	4916442	Argument	out		4916348	0					
ANR	4916443	Identifier	out		4916348	0					
ANR	4916444	Argument	"""#%sifdef """		4916348	1					
ANR	4916445	PrimaryExpression	"""#%sifdef """		4916348	0					
ANR	4916446	Argument	indent_category		4916348	2					
ANR	4916447	Identifier	indent_category		4916348	0					
ANR	4916448	ExpressionStatement	"fwrite ( str , sizeof ( char ) , paren - str , out )"	225:8:6724:6767	4916348	3	True				
ANR	4916449	CallExpression	"fwrite ( str , sizeof ( char ) , paren - str , out )"		4916348	0					
ANR	4916450	Callee	fwrite		4916348	0					
ANR	4916451	Identifier	fwrite		4916348	0					
ANR	4916452	ArgumentList	str		4916348	1					
ANR	4916453	Argument	str		4916348	0					
ANR	4916454	Identifier	str		4916348	0					
ANR	4916455	Argument	sizeof ( char )		4916348	1					
ANR	4916456	SizeofExpression	sizeof ( char )		4916348	0					
ANR	4916457	Sizeof	sizeof		4916348	0					
ANR	4916458	SizeofOperand	char		4916348	1					
ANR	4916459	Argument	paren - str		4916348	2					
ANR	4916460	AdditiveExpression	paren - str		4916348	0		-			
ANR	4916461	Identifier	paren		4916348	0					
ANR	4916462	Identifier	str		4916348	1					
ANR	4916463	Argument	out		4916348	3					
ANR	4916464	Identifier	out		4916348	0					
ANR	4916465	ExpressionStatement	"fprintf ( out , ""\\n"" )"	227:8:6778:6796	4916348	4	True				
ANR	4916466	CallExpression	"fprintf ( out , ""\\n"" )"		4916348	0					
ANR	4916467	Callee	fprintf		4916348	0					
ANR	4916468	Identifier	fprintf		4916348	0					
ANR	4916469	ArgumentList	out		4916348	1					
ANR	4916470	Argument	out		4916348	0					
ANR	4916471	Identifier	out		4916348	0					
ANR	4916472	Argument	"""\\n"""		4916348	1					
ANR	4916473	PrimaryExpression	"""\\n"""		4916348	0					
ANR	4916474	ExpressionStatement	pconf -> current_category = category	228:8:6806:6840	4916348	5	True				
ANR	4916475	AssignmentExpression	pconf -> current_category = category		4916348	0		=			
ANR	4916476	PtrMemberAccess	pconf -> current_category		4916348	0					
ANR	4916477	Identifier	pconf		4916348	0					
ANR	4916478	Identifier	current_category		4916348	1					
ANR	4916479	Identifier	category		4916348	1					
ANR	4916480	ExpressionStatement	pconf -> in_category = true	229:8:6850:6875	4916348	6	True				
ANR	4916481	AssignmentExpression	pconf -> in_category = true		4916348	0		=			
ANR	4916482	PtrMemberAccess	pconf -> in_category		4916348	0					
ANR	4916483	Identifier	pconf		4916348	0					
ANR	4916484	Identifier	in_category		4916348	1					
ANR	4916485	Identifier	true		4916348	1					
ANR	4916486	ExpressionStatement	"sprintf ( cati , ""%s_%s_"" , category , item )"	231:4:6887:6926	4916348	4	True				
ANR	4916487	CallExpression	"sprintf ( cati , ""%s_%s_"" , category , item )"		4916348	0					
ANR	4916488	Callee	sprintf		4916348	0					
ANR	4916489	Identifier	sprintf		4916348	0					
ANR	4916490	ArgumentList	cati		4916348	1					
ANR	4916491	Argument	cati		4916348	0					
ANR	4916492	Identifier	cati		4916348	0					
ANR	4916493	Argument	"""%s_%s_"""		4916348	1					
ANR	4916494	PrimaryExpression	"""%s_%s_"""		4916348	0					
ANR	4916495	Argument	category		4916348	2					
ANR	4916496	Identifier	category		4916348	0					
ANR	4916497	Argument	item		4916348	3					
ANR	4916498	Identifier	item		4916348	0					
ANR	4916499	SwitchStatement	switch ( mode )		4916348	5					
ANR	4916500	Condition	mode	232:12:6940:6943	4916348	0	True				
ANR	4916501	Identifier	mode		4916348	0					
ANR	4916502	CompoundStatement		23:18:710:710	4916348	1					
ANR	4916503	Label	case uniq_none :	233:8:6956:6970	4916348	0	True				
ANR	4916504	Identifier	uniq_none		4916348	0					
ANR	4916505	ExpressionStatement	"fprintf ( out , ""%s%s\\n"" , indent_item , str )"	234:12:6984:7024	4916348	1	True				
ANR	4916506	CallExpression	"fprintf ( out , ""%s%s\\n"" , indent_item , str )"		4916348	0					
ANR	4916507	Callee	fprintf		4916348	0					
ANR	4916508	Identifier	fprintf		4916348	0					
ANR	4916509	ArgumentList	out		4916348	1					
ANR	4916510	Argument	out		4916348	0					
ANR	4916511	Identifier	out		4916348	0					
ANR	4916512	Argument	"""%s%s\\n"""		4916348	1					
ANR	4916513	PrimaryExpression	"""%s%s\\n"""		4916348	0					
ANR	4916514	Argument	indent_item		4916348	2					
ANR	4916515	Identifier	indent_item		4916348	0					
ANR	4916516	Argument	str		4916348	3					
ANR	4916517	Identifier	str		4916348	0					
ANR	4916518	BreakStatement	break ;	235:12:7038:7043	4916348	2	True				
ANR	4916519	Label	case uniq_first :	236:8:7053:7068	4916348	3	True				
ANR	4916520	Identifier	uniq_first		4916348	0					
ANR	4916521	ExpressionStatement	"fprintf ( out , ""#%sifndef %sSEEN\\n"" , indent_SEEN , cati )"	237:12:7082:7135	4916348	4	True				
ANR	4916522	CallExpression	"fprintf ( out , ""#%sifndef %sSEEN\\n"" , indent_SEEN , cati )"		4916348	0					
ANR	4916523	Callee	fprintf		4916348	0					
ANR	4916524	Identifier	fprintf		4916348	0					
ANR	4916525	ArgumentList	out		4916348	1					
ANR	4916526	Argument	out		4916348	0					
ANR	4916527	Identifier	out		4916348	0					
ANR	4916528	Argument	"""#%sifndef %sSEEN\\n"""		4916348	1					
ANR	4916529	PrimaryExpression	"""#%sifndef %sSEEN\\n"""		4916348	0					
ANR	4916530	Argument	indent_SEEN		4916348	2					
ANR	4916531	Identifier	indent_SEEN		4916348	0					
ANR	4916532	Argument	cati		4916348	3					
ANR	4916533	Identifier	cati		4916348	0					
ANR	4916534	ExpressionStatement	"fprintf ( out , ""#%s  define %sSEEN\\n"" , indent_SEEN , cati )"	238:12:7149:7204	4916348	5	True				
ANR	4916535	CallExpression	"fprintf ( out , ""#%s  define %sSEEN\\n"" , indent_SEEN , cati )"		4916348	0					
ANR	4916536	Callee	fprintf		4916348	0					
ANR	4916537	Identifier	fprintf		4916348	0					
ANR	4916538	ArgumentList	out		4916348	1					
ANR	4916539	Argument	out		4916348	0					
ANR	4916540	Identifier	out		4916348	0					
ANR	4916541	Argument	"""#%s  define %sSEEN\\n"""		4916348	1					
ANR	4916542	PrimaryExpression	"""#%s  define %sSEEN\\n"""		4916348	0					
ANR	4916543	Argument	indent_SEEN		4916348	2					
ANR	4916544	Identifier	indent_SEEN		4916348	0					
ANR	4916545	Argument	cati		4916348	3					
ANR	4916546	Identifier	cati		4916348	0					
ANR	4916547	ExpressionStatement	"write_item ( pconf , str , category , item , uniq_none )"	239:12:7218:7267	4916348	6	True				
ANR	4916548	CallExpression	"write_item ( pconf , str , category , item , uniq_none )"		4916348	0					
ANR	4916549	Callee	write_item		4916348	0					
ANR	4916550	Identifier	write_item		4916348	0					
ANR	4916551	ArgumentList	pconf		4916348	1					
ANR	4916552	Argument	pconf		4916348	0					
ANR	4916553	Identifier	pconf		4916348	0					
ANR	4916554	Argument	str		4916348	1					
ANR	4916555	Identifier	str		4916348	0					
ANR	4916556	Argument	category		4916348	2					
ANR	4916557	Identifier	category		4916348	0					
ANR	4916558	Argument	item		4916348	3					
ANR	4916559	Identifier	item		4916348	0					
ANR	4916560	Argument	uniq_none		4916348	4					
ANR	4916561	Identifier	uniq_none		4916348	0					
ANR	4916562	ExpressionStatement	"fprintf ( out , ""#%sendif\\n"" , indent_SEEN , cati )"	240:12:7281:7326	4916348	7	True				
ANR	4916563	CallExpression	"fprintf ( out , ""#%sendif\\n"" , indent_SEEN , cati )"		4916348	0					
ANR	4916564	Callee	fprintf		4916348	0					
ANR	4916565	Identifier	fprintf		4916348	0					
ANR	4916566	ArgumentList	out		4916348	1					
ANR	4916567	Argument	out		4916348	0					
ANR	4916568	Identifier	out		4916348	0					
ANR	4916569	Argument	"""#%sendif\\n"""		4916348	1					
ANR	4916570	PrimaryExpression	"""#%sendif\\n"""		4916348	0					
ANR	4916571	Argument	indent_SEEN		4916348	2					
ANR	4916572	Identifier	indent_SEEN		4916348	0					
ANR	4916573	Argument	cati		4916348	3					
ANR	4916574	Identifier	cati		4916348	0					
ANR	4916575	BreakStatement	break ;	241:12:7340:7345	4916348	8	True				
ANR	4916576	Label	case uniq_last :	242:8:7355:7369	4916348	9	True				
ANR	4916577	Identifier	uniq_last		4916348	0					
ANR	4916578	ExpressionStatement	"fprintf ( out , ""#%sif %sSEEN == %lu\\n"" , indent_SEEN , cati , pconf -> file_id + pconf -> item_id ++ )"	243:12:7383:7494	4916348	10	True				
ANR	4916579	CallExpression	"fprintf ( out , ""#%sif %sSEEN == %lu\\n"" , indent_SEEN , cati , pconf -> file_id + pconf -> item_id ++ )"		4916348	0					
ANR	4916580	Callee	fprintf		4916348	0					
ANR	4916581	Identifier	fprintf		4916348	0					
ANR	4916582	ArgumentList	out		4916348	1					
ANR	4916583	Argument	out		4916348	0					
ANR	4916584	Identifier	out		4916348	0					
ANR	4916585	Argument	"""#%sif %sSEEN == %lu\\n"""		4916348	1					
ANR	4916586	PrimaryExpression	"""#%sif %sSEEN == %lu\\n"""		4916348	0					
ANR	4916587	Argument	indent_SEEN		4916348	2					
ANR	4916588	Identifier	indent_SEEN		4916348	0					
ANR	4916589	Argument	cati		4916348	3					
ANR	4916590	Identifier	cati		4916348	0					
ANR	4916591	Argument	pconf -> file_id + pconf -> item_id ++		4916348	4					
ANR	4916592	AdditiveExpression	pconf -> file_id + pconf -> item_id ++		4916348	0		+			
ANR	4916593	PtrMemberAccess	pconf -> file_id		4916348	0					
ANR	4916594	Identifier	pconf		4916348	0					
ANR	4916595	Identifier	file_id		4916348	1					
ANR	4916596	PostIncDecOperationExpression	pconf -> item_id ++		4916348	1					
ANR	4916597	PtrMemberAccess	pconf -> item_id		4916348	0					
ANR	4916598	Identifier	pconf		4916348	0					
ANR	4916599	Identifier	item_id		4916348	1					
ANR	4916600	IncDec	++		4916348	1					
ANR	4916601	ExpressionStatement	"write_item ( pconf , str , category , item , uniq_none )"	245:12:7508:7557	4916348	11	True				
ANR	4916602	CallExpression	"write_item ( pconf , str , category , item , uniq_none )"		4916348	0					
ANR	4916603	Callee	write_item		4916348	0					
ANR	4916604	Identifier	write_item		4916348	0					
ANR	4916605	ArgumentList	pconf		4916348	1					
ANR	4916606	Argument	pconf		4916348	0					
ANR	4916607	Identifier	pconf		4916348	0					
ANR	4916608	Argument	str		4916348	1					
ANR	4916609	Identifier	str		4916348	0					
ANR	4916610	Argument	category		4916348	2					
ANR	4916611	Identifier	category		4916348	0					
ANR	4916612	Argument	item		4916348	3					
ANR	4916613	Identifier	item		4916348	0					
ANR	4916614	Argument	uniq_none		4916348	4					
ANR	4916615	Identifier	uniq_none		4916348	0					
ANR	4916616	ExpressionStatement	"fprintf ( out , ""#%sendif\\n"" , indent_SEEN , cati )"	246:12:7571:7616	4916348	12	True				
ANR	4916617	CallExpression	"fprintf ( out , ""#%sendif\\n"" , indent_SEEN , cati )"		4916348	0					
ANR	4916618	Callee	fprintf		4916348	0					
ANR	4916619	Identifier	fprintf		4916348	0					
ANR	4916620	ArgumentList	out		4916348	1					
ANR	4916621	Argument	out		4916348	0					
ANR	4916622	Identifier	out		4916348	0					
ANR	4916623	Argument	"""#%sendif\\n"""		4916348	1					
ANR	4916624	PrimaryExpression	"""#%sendif\\n"""		4916348	0					
ANR	4916625	Argument	indent_SEEN		4916348	2					
ANR	4916626	Identifier	indent_SEEN		4916348	0					
ANR	4916627	Argument	cati		4916348	3					
ANR	4916628	Identifier	cati		4916348	0					
ANR	4916629	ExpressionStatement	pconf -> any_scan_items = true	247:12:7630:7658	4916348	13	True				
ANR	4916630	AssignmentExpression	pconf -> any_scan_items = true		4916348	0		=			
ANR	4916631	PtrMemberAccess	pconf -> any_scan_items		4916348	0					
ANR	4916632	Identifier	pconf		4916348	0					
ANR	4916633	Identifier	any_scan_items		4916348	1					
ANR	4916634	Identifier	true		4916348	1					
ANR	4916635	BreakStatement	break ;	248:12:7672:7677	4916348	14	True				
ANR	4916636	ReturnType	void		4916348	1					
ANR	4916637	Identifier	write_item		4916348	2					
ANR	4916638	ParameterList	"config * pconf , const char * str , const char * category , const char * item , uniq_mode mode"		4916348	3					
ANR	4916639	Parameter	config * pconf	208:11:6135:6148	4916348	0	True				
ANR	4916640	ParameterType	config *		4916348	0					
ANR	4916641	Identifier	pconf		4916348	1					
ANR	4916642	Parameter	const char * str	208:27:6151:6165	4916348	1	True				
ANR	4916643	ParameterType	const char *		4916348	0					
ANR	4916644	Identifier	str		4916348	1					
ANR	4916645	Parameter	const char * category	208:44:6168:6187	4916348	2	True				
ANR	4916646	ParameterType	const char *		4916348	0					
ANR	4916647	Identifier	category		4916348	1					
ANR	4916648	Parameter	const char * item	209:11:6201:6216	4916348	3	True				
ANR	4916649	ParameterType	const char *		4916348	0					
ANR	4916650	Identifier	item		4916348	1					
ANR	4916651	Parameter	uniq_mode mode	209:29:6219:6232	4916348	4	True				
ANR	4916652	ParameterType	uniq_mode		4916348	0					
ANR	4916653	Identifier	mode		4916348	1					
ANR	4916654	CFGEntryNode	ENTRY		4916348		True				
ANR	4916655	CFGExitNode	EXIT		4916348		True				
ANR	4916656	Symbol	strcmp		4916348						
ANR	4916657	Symbol	pconf -> item_id		4916348						
ANR	4916658	Symbol	pconf -> in_res_scan		4916348						
ANR	4916659	Symbol	indent_SEEN		4916348						
ANR	4916660	Symbol	item		4916348						
ANR	4916661	Symbol	pconf -> out		4916348						
ANR	4916662	Symbol	* pconf		4916348						
ANR	4916663	Symbol	strchr		4916348						
ANR	4916664	Symbol	pconf -> any_scan_items		4916348						
ANR	4916665	Symbol	pconf		4916348						
ANR	4916666	Symbol	uniq_none		4916348						
ANR	4916667	Symbol	out		4916348						
ANR	4916668	Symbol	str		4916348						
ANR	4916669	Symbol	mode		4916348						
ANR	4916670	Symbol	pconf -> file_id		4916348						
ANR	4916671	Symbol	paren		4916348						
ANR	4916672	Symbol	indent_category		4916348						
ANR	4916673	Symbol	true		4916348						
ANR	4916674	Symbol	pconf -> in_category		4916348						
ANR	4916675	Symbol	category		4916348						
ANR	4916676	Symbol	indent_RES_SCAN		4916348						
ANR	4916677	Symbol	pconf -> current_category		4916348						
ANR	4916678	Symbol	cati		4916348						
ANR	4916679	Symbol	indent_item		4916348						
ANR	4916680	Function	write_scan_item	251:0:7687:8249							
ANR	4916681	FunctionDef	"write_scan_item (config * pconf , const char * str , const char * category , const char * item , uniq_mode mode)"		4916680	0					
ANR	4916682	CompoundStatement		254:0:7813:8249	4916680	0					
ANR	4916683	IdentifierDeclStatement	FILE * out = pconf -> out ;	255:4:7819:7841	4916680	0	True				
ANR	4916684	IdentifierDecl	* out = pconf -> out		4916680	0					
ANR	4916685	IdentifierDeclType	FILE *		4916680	0					
ANR	4916686	Identifier	out		4916680	1					
ANR	4916687	AssignmentExpression	* out = pconf -> out		4916680	2		=			
ANR	4916688	Identifier	out		4916680	0					
ANR	4916689	PtrMemberAccess	pconf -> out		4916680	1					
ANR	4916690	Identifier	pconf		4916680	0					
ANR	4916691	Identifier	out		4916680	1					
ANR	4916692	IdentifierDeclStatement	char cati [ 80 ] ;	256:4:7847:7860	4916680	1	True				
ANR	4916693	IdentifierDecl	cati [ 80 ]		4916680	0					
ANR	4916694	IdentifierDeclType	char [ 80 ]		4916680	0					
ANR	4916695	Identifier	cati		4916680	1					
ANR	4916696	PrimaryExpression	80		4916680	2					
ANR	4916697	ExpressionStatement	"sprintf ( cati , ""%s_%s_"" , category , item )"	258:4:7867:7906	4916680	2	True				
ANR	4916698	CallExpression	"sprintf ( cati , ""%s_%s_"" , category , item )"		4916680	0					
ANR	4916699	Callee	sprintf		4916680	0					
ANR	4916700	Identifier	sprintf		4916680	0					
ANR	4916701	ArgumentList	cati		4916680	1					
ANR	4916702	Argument	cati		4916680	0					
ANR	4916703	Identifier	cati		4916680	0					
ANR	4916704	Argument	"""%s_%s_"""		4916680	1					
ANR	4916705	PrimaryExpression	"""%s_%s_"""		4916680	0					
ANR	4916706	Argument	category		4916680	2					
ANR	4916707	Identifier	category		4916680	0					
ANR	4916708	Argument	item		4916680	3					
ANR	4916709	Identifier	item		4916680	0					
ANR	4916710	SwitchStatement	switch ( mode )		4916680	3					
ANR	4916711	Condition	mode	259:12:7920:7923	4916680	0	True				
ANR	4916712	Identifier	mode		4916680	0					
ANR	4916713	CompoundStatement		6:18:112:112	4916680	1					
ANR	4916714	Label	case uniq_none :	260:8:7936:7950	4916680	0	True				
ANR	4916715	Identifier	uniq_none		4916680	0					
ANR	4916716	BreakStatement	break ;	261:12:7964:7969	4916680	1	True				
ANR	4916717	Label	case uniq_first :	262:8:7979:7994	4916680	2	True				
ANR	4916718	Identifier	uniq_first		4916680	0					
ANR	4916719	BreakStatement	break ;	263:12:8008:8013	4916680	3	True				
ANR	4916720	Label	case uniq_last :	264:8:8023:8037	4916680	4	True				
ANR	4916721	Identifier	uniq_last		4916680	0					
ANR	4916722	ExpressionStatement	"fprintf ( out , ""#%sundef %sSEEN\\n"" , indent_scan_item , cati )"	265:12:8051:8108	4916680	5	True				
ANR	4916723	CallExpression	"fprintf ( out , ""#%sundef %sSEEN\\n"" , indent_scan_item , cati )"		4916680	0					
ANR	4916724	Callee	fprintf		4916680	0					
ANR	4916725	Identifier	fprintf		4916680	0					
ANR	4916726	ArgumentList	out		4916680	1					
ANR	4916727	Argument	out		4916680	0					
ANR	4916728	Identifier	out		4916680	0					
ANR	4916729	Argument	"""#%sundef %sSEEN\\n"""		4916680	1					
ANR	4916730	PrimaryExpression	"""#%sundef %sSEEN\\n"""		4916680	0					
ANR	4916731	Argument	indent_scan_item		4916680	2					
ANR	4916732	Identifier	indent_scan_item		4916680	0					
ANR	4916733	Argument	cati		4916680	3					
ANR	4916734	Identifier	cati		4916680	0					
ANR	4916735	ExpressionStatement	"fprintf ( out , ""#%s  define %sSEEN %lu\\n"" , indent_scan_item , cati , pconf -> file_id + pconf -> item_id ++ )"	266:12:8122:8241	4916680	6	True				
ANR	4916736	CallExpression	"fprintf ( out , ""#%s  define %sSEEN %lu\\n"" , indent_scan_item , cati , pconf -> file_id + pconf -> item_id ++ )"		4916680	0					
ANR	4916737	Callee	fprintf		4916680	0					
ANR	4916738	Identifier	fprintf		4916680	0					
ANR	4916739	ArgumentList	out		4916680	1					
ANR	4916740	Argument	out		4916680	0					
ANR	4916741	Identifier	out		4916680	0					
ANR	4916742	Argument	"""#%s  define %sSEEN %lu\\n"""		4916680	1					
ANR	4916743	PrimaryExpression	"""#%s  define %sSEEN %lu\\n"""		4916680	0					
ANR	4916744	Argument	indent_scan_item		4916680	2					
ANR	4916745	Identifier	indent_scan_item		4916680	0					
ANR	4916746	Argument	cati		4916680	3					
ANR	4916747	Identifier	cati		4916680	0					
ANR	4916748	Argument	pconf -> file_id + pconf -> item_id ++		4916680	4					
ANR	4916749	AdditiveExpression	pconf -> file_id + pconf -> item_id ++		4916680	0		+			
ANR	4916750	PtrMemberAccess	pconf -> file_id		4916680	0					
ANR	4916751	Identifier	pconf		4916680	0					
ANR	4916752	Identifier	file_id		4916680	1					
ANR	4916753	PostIncDecOperationExpression	pconf -> item_id ++		4916680	1					
ANR	4916754	PtrMemberAccess	pconf -> item_id		4916680	0					
ANR	4916755	Identifier	pconf		4916680	0					
ANR	4916756	Identifier	item_id		4916680	1					
ANR	4916757	IncDec	++		4916680	1					
ANR	4916758	ReturnType	void		4916680	1					
ANR	4916759	Identifier	write_scan_item		4916680	2					
ANR	4916760	ParameterList	"config * pconf , const char * str , const char * category , const char * item , uniq_mode mode"		4916680	3					
ANR	4916761	Parameter	config * pconf	252:16:7708:7721	4916680	0	True				
ANR	4916762	ParameterType	config *		4916680	0					
ANR	4916763	Identifier	pconf		4916680	1					
ANR	4916764	Parameter	const char * str	252:32:7724:7738	4916680	1	True				
ANR	4916765	ParameterType	const char *		4916680	0					
ANR	4916766	Identifier	str		4916680	1					
ANR	4916767	Parameter	const char * category	252:49:7741:7760	4916680	2	True				
ANR	4916768	ParameterType	const char *		4916680	0					
ANR	4916769	Identifier	category		4916680	1					
ANR	4916770	Parameter	const char * item	253:16:7779:7794	4916680	3	True				
ANR	4916771	ParameterType	const char *		4916680	0					
ANR	4916772	Identifier	item		4916680	1					
ANR	4916773	Parameter	uniq_mode mode	253:34:7797:7810	4916680	4	True				
ANR	4916774	ParameterType	uniq_mode		4916680	0					
ANR	4916775	Identifier	mode		4916680	1					
ANR	4916776	CFGEntryNode	ENTRY		4916680		True				
ANR	4916777	CFGExitNode	EXIT		4916680		True				
ANR	4916778	Symbol	str		4916680						
ANR	4916779	Symbol	mode		4916680						
ANR	4916780	Symbol	pconf -> item_id		4916680						
ANR	4916781	Symbol	pconf -> file_id		4916680						
ANR	4916782	Symbol	item		4916680						
ANR	4916783	Symbol	indent_scan_item		4916680						
ANR	4916784	Symbol	* pconf		4916680						
ANR	4916785	Symbol	pconf -> out		4916680						
ANR	4916786	Symbol	pconf		4916680						
ANR	4916787	Symbol	category		4916680						
ANR	4916788	Symbol	cati		4916680						
ANR	4916789	Symbol	out		4916680						
ANR	4916790	Function	add_entry	270:0:8251:11499							
ANR	4916791	FunctionDef	"add_entry (config * pconf , const char * category , const char * item , bool scan)"		4916790	0					
ANR	4916792	CompoundStatement		272:0:8333:11499	4916790	0					
ANR	4916793	IdentifierDeclStatement	char str [ 80 ] ;	273:4:8339:8351	4916790	0	True				
ANR	4916794	IdentifierDecl	str [ 80 ]		4916790	0					
ANR	4916795	IdentifierDeclType	char [ 80 ]		4916790	0					
ANR	4916796	Identifier	str		4916790	1					
ANR	4916797	PrimaryExpression	80		4916790	2					
ANR	4916798	IdentifierDeclStatement	uniq_mode mode = uniq_first ;	274:4:8357:8384	4916790	1	True				
ANR	4916799	IdentifierDecl	mode = uniq_first		4916790	0					
ANR	4916800	IdentifierDeclType	uniq_mode		4916790	0					
ANR	4916801	Identifier	mode		4916790	1					
ANR	4916802	AssignmentExpression	mode = uniq_first		4916790	2		=			
ANR	4916803	Identifier	uniq_first		4916790	0					
ANR	4916804	Identifier	uniq_first		4916790	1					
ANR	4916805	IfStatement	if ( pconf -> debug && ! scan )		4916790	2					
ANR	4916806	Condition	pconf -> debug && ! scan	276:8:8395:8415	4916790	0	True				
ANR	4916807	AndExpression	pconf -> debug && ! scan		4916790	0		&&			
ANR	4916808	PtrMemberAccess	pconf -> debug		4916790	0					
ANR	4916809	Identifier	pconf		4916790	0					
ANR	4916810	Identifier	debug		4916790	1					
ANR	4916811	UnaryOperationExpression	! scan		4916790	1					
ANR	4916812	UnaryOperator	!		4916790	0					
ANR	4916813	Identifier	scan		4916790	1					
ANR	4916814	ExpressionStatement	"printf ( ""Adding %s %s;\\n"" , category , item )"	277:8:8426:8467	4916790	1	True				
ANR	4916815	CallExpression	"printf ( ""Adding %s %s;\\n"" , category , item )"		4916790	0					
ANR	4916816	Callee	printf		4916790	0					
ANR	4916817	Identifier	printf		4916790	0					
ANR	4916818	ArgumentList	"""Adding %s %s;\\n"""		4916790	1					
ANR	4916819	Argument	"""Adding %s %s;\\n"""		4916790	0					
ANR	4916820	PrimaryExpression	"""Adding %s %s;\\n"""		4916790	0					
ANR	4916821	Argument	category		4916790	1					
ANR	4916822	Identifier	category		4916790	0					
ANR	4916823	Argument	item		4916790	2					
ANR	4916824	Identifier	item		4916790	0					
ANR	4916825	ExpressionStatement	str [ 0 ] = 0	278:4:8473:8483	4916790	3	True				
ANR	4916826	AssignmentExpression	str [ 0 ] = 0		4916790	0		=			
ANR	4916827	ArrayIndexing	str [ 0 ]		4916790	0					
ANR	4916828	Identifier	str		4916790	0					
ANR	4916829	PrimaryExpression	0		4916790	1					
ANR	4916830	PrimaryExpression	0		4916790	1					
ANR	4916831	SwitchStatement	switch ( category [ 0 ] )		4916790	4					
ANR	4916832	Condition	category [ 0 ]	279:12:8497:8507	4916790	0	True				
ANR	4916833	ArrayIndexing	category [ 0 ]		4916790	0					
ANR	4916834	Identifier	category		4916790	0					
ANR	4916835	PrimaryExpression	0		4916790	1					
ANR	4916836	CompoundStatement		8:25:176:176	4916790	1					
ANR	4916837	Statement	define	280:1:8539:8544	4916790	0	True				
ANR	4916838	Statement	is_cat	280:8:8546:8551	4916790	1	True				
ANR	4916839	Statement	(	280:14:8552:8552	4916790	2	True				
ANR	4916840	Statement	str	280:15:8553:8555	4916790	3	True				
ANR	4916841	Statement	)	280:18:8556:8556	4916790	4	True				
ANR	4916842	Statement	!	280:20:8558:8558	4916790	5	True				
ANR	4916843	Statement	strcmp	280:21:8559:8564	4916790	6	True				
ANR	4916844	Statement	(	280:27:8565:8565	4916790	7	True				
ANR	4916845	Statement	category	280:28:8566:8573	4916790	8	True				
ANR	4916846	Statement	","	280:36:8574:8574	4916790	9	True				
ANR	4916847	Statement	str	280:38:8576:8578	4916790	10	True				
ANR	4916848	Statement	)	280:41:8579:8579	4916790	11	True				
ANR	4916849	Label	case 'd' :	281:8:8589:8597	4916790	12	True				
ANR	4916850	IfStatement	"if ( is_cat ( ""dev"" ) )"		4916790	13					
ANR	4916851	Condition	"is_cat ( ""dev"" )"	282:16:8615:8627	4916790	0	True				
ANR	4916852	CallExpression	"is_cat ( ""dev"" )"		4916790	0					
ANR	4916853	Callee	is_cat		4916790	0					
ANR	4916854	Identifier	is_cat		4916790	0					
ANR	4916855	ArgumentList	"""dev"""		4916790	1					
ANR	4916856	Argument	"""dev"""		4916790	0					
ANR	4916857	PrimaryExpression	"""dev"""		4916790	0					
ANR	4916858	ExpressionStatement	"sprintf ( str , ""device_(%s%s_device)\\n"" , pconf -> name_prefix , item )"	283:16:8646:8734	4916790	1	True				
ANR	4916859	CallExpression	"sprintf ( str , ""device_(%s%s_device)\\n"" , pconf -> name_prefix , item )"		4916790	0					
ANR	4916860	Callee	sprintf		4916790	0					
ANR	4916861	Identifier	sprintf		4916790	0					
ANR	4916862	ArgumentList	str		4916790	1					
ANR	4916863	Argument	str		4916790	0					
ANR	4916864	Identifier	str		4916790	0					
ANR	4916865	Argument	"""device_(%s%s_device)\\n"""		4916790	1					
ANR	4916866	PrimaryExpression	"""device_(%s%s_device)\\n"""		4916790	0					
ANR	4916867	Argument	pconf -> name_prefix		4916790	2					
ANR	4916868	PtrMemberAccess	pconf -> name_prefix		4916790	0					
ANR	4916869	Identifier	pconf		4916790	0					
ANR	4916870	Identifier	name_prefix		4916790	1					
ANR	4916871	Argument	item		4916790	3					
ANR	4916872	Identifier	item		4916790	0					
ANR	4916873	ElseStatement	else		4916790	0					
ANR	4916874	IfStatement	"if ( is_cat ( ""dev2"" ) )"		4916790	0					
ANR	4916875	Condition	"is_cat ( ""dev2"" )"	285:21:8757:8770	4916790	0	True				
ANR	4916876	CallExpression	"is_cat ( ""dev2"" )"		4916790	0					
ANR	4916877	Callee	is_cat		4916790	0					
ANR	4916878	Identifier	is_cat		4916790	0					
ANR	4916879	ArgumentList	"""dev2"""		4916790	1					
ANR	4916880	Argument	"""dev2"""		4916790	0					
ANR	4916881	PrimaryExpression	"""dev2"""		4916790	0					
ANR	4916882	ExpressionStatement	"sprintf ( str , ""device2_(%s%s_device)\\n"" , pconf -> name_prefix , item )"	286:16:8789:8878	4916790	1	True				
ANR	4916883	CallExpression	"sprintf ( str , ""device2_(%s%s_device)\\n"" , pconf -> name_prefix , item )"		4916790	0					
ANR	4916884	Callee	sprintf		4916790	0					
ANR	4916885	Identifier	sprintf		4916790	0					
ANR	4916886	ArgumentList	str		4916790	1					
ANR	4916887	Argument	str		4916790	0					
ANR	4916888	Identifier	str		4916790	0					
ANR	4916889	Argument	"""device2_(%s%s_device)\\n"""		4916790	1					
ANR	4916890	PrimaryExpression	"""device2_(%s%s_device)\\n"""		4916790	0					
ANR	4916891	Argument	pconf -> name_prefix		4916790	2					
ANR	4916892	PtrMemberAccess	pconf -> name_prefix		4916790	0					
ANR	4916893	Identifier	pconf		4916790	0					
ANR	4916894	Identifier	name_prefix		4916790	1					
ANR	4916895	Argument	item		4916790	3					
ANR	4916896	Identifier	item		4916790	0					
ANR	4916897	BreakStatement	break ;	288:12:8892:8897	4916790	14	True				
ANR	4916898	Label	case 'e' :	289:8:8907:8915	4916790	15	True				
ANR	4916899	IfStatement	"if ( is_cat ( ""emulator"" ) )"		4916790	16					
ANR	4916900	Condition	"is_cat ( ""emulator"" )"	290:16:8933:8950	4916790	0	True				
ANR	4916901	CallExpression	"is_cat ( ""emulator"" )"		4916790	0					
ANR	4916902	Callee	is_cat		4916790	0					
ANR	4916903	Identifier	is_cat		4916790	0					
ANR	4916904	ArgumentList	"""emulator"""		4916790	1					
ANR	4916905	Argument	"""emulator"""		4916790	0					
ANR	4916906	PrimaryExpression	"""emulator"""		4916790	0					
ANR	4916907	ExpressionStatement	"sprintf ( str , ""emulator_(\\""%s\\"",%d)"" , item , strlen ( item ) )"	291:16:8969:9049	4916790	1	True				
ANR	4916908	CallExpression	"sprintf ( str , ""emulator_(\\""%s\\"",%d)"" , item , strlen ( item ) )"		4916790	0					
ANR	4916909	Callee	sprintf		4916790	0					
ANR	4916910	Identifier	sprintf		4916790	0					
ANR	4916911	ArgumentList	str		4916790	1					
ANR	4916912	Argument	str		4916790	0					
ANR	4916913	Identifier	str		4916790	0					
ANR	4916914	Argument	"""emulator_(\\""%s\\"",%d)"""		4916790	1					
ANR	4916915	PrimaryExpression	"""emulator_(\\""%s\\"",%d)"""		4916790	0					
ANR	4916916	Argument	item		4916790	2					
ANR	4916917	Identifier	item		4916790	0					
ANR	4916918	Argument	strlen ( item )		4916790	3					
ANR	4916919	CallExpression	strlen ( item )		4916790	0					
ANR	4916920	Callee	strlen		4916790	0					
ANR	4916921	Identifier	strlen		4916790	0					
ANR	4916922	ArgumentList	item		4916790	1					
ANR	4916923	Argument	item		4916790	0					
ANR	4916924	Identifier	item		4916790	0					
ANR	4916925	BreakStatement	break ;	293:12:9063:9068	4916790	17	True				
ANR	4916926	Label	case 'f' :	294:8:9078:9086	4916790	18	True				
ANR	4916927	IfStatement	"if ( is_cat ( ""font"" ) )"		4916790	19					
ANR	4916928	Condition	"is_cat ( ""font"" )"	295:16:9104:9117	4916790	0	True				
ANR	4916929	CallExpression	"is_cat ( ""font"" )"		4916790	0					
ANR	4916930	Callee	is_cat		4916790	0					
ANR	4916931	Identifier	is_cat		4916790	0					
ANR	4916932	ArgumentList	"""font"""		4916790	1					
ANR	4916933	Argument	"""font"""		4916790	0					
ANR	4916934	PrimaryExpression	"""font"""		4916790	0					
ANR	4916935	ExpressionStatement	"sprintf ( str , ""font_(\\""0.font_%s\\"",%sf_%s,zf_%s)"" , item , pconf -> name_prefix , item , item )"	296:16:9136:9247	4916790	1	True				
ANR	4916936	CallExpression	"sprintf ( str , ""font_(\\""0.font_%s\\"",%sf_%s,zf_%s)"" , item , pconf -> name_prefix , item , item )"		4916790	0					
ANR	4916937	Callee	sprintf		4916790	0					
ANR	4916938	Identifier	sprintf		4916790	0					
ANR	4916939	ArgumentList	str		4916790	1					
ANR	4916940	Argument	str		4916790	0					
ANR	4916941	Identifier	str		4916790	0					
ANR	4916942	Argument	"""font_(\\""0.font_%s\\"",%sf_%s,zf_%s)"""		4916790	1					
ANR	4916943	PrimaryExpression	"""font_(\\""0.font_%s\\"",%sf_%s,zf_%s)"""		4916790	0					
ANR	4916944	Argument	item		4916790	2					
ANR	4916945	Identifier	item		4916790	0					
ANR	4916946	Argument	pconf -> name_prefix		4916790	3					
ANR	4916947	PtrMemberAccess	pconf -> name_prefix		4916790	0					
ANR	4916948	Identifier	pconf		4916790	0					
ANR	4916949	Identifier	name_prefix		4916790	1					
ANR	4916950	Argument	item		4916790	4					
ANR	4916951	Identifier	item		4916790	0					
ANR	4916952	Argument	item		4916790	5					
ANR	4916953	Identifier	item		4916790	0					
ANR	4916954	BreakStatement	break ;	298:12:9261:9266	4916790	20	True				
ANR	4916955	Label	case 'i' :	299:8:9276:9284	4916790	21	True				
ANR	4916956	IfStatement	"if ( is_cat ( ""include"" ) )"		4916790	22					
ANR	4916957	Condition	"is_cat ( ""include"" )"	300:16:9302:9318	4916790	0	True				
ANR	4916958	CallExpression	"is_cat ( ""include"" )"		4916790	0					
ANR	4916959	Callee	is_cat		4916790	0					
ANR	4916960	Identifier	is_cat		4916790	0					
ANR	4916961	ArgumentList	"""include"""		4916790	1					
ANR	4916962	Argument	"""include"""		4916790	0					
ANR	4916963	PrimaryExpression	"""include"""		4916790	0					
ANR	4916964	CompoundStatement		30:16:1005:1027	4916790	1					
ANR	4916965	IdentifierDeclStatement	int len = strlen ( item ) ;	301:16:9339:9361	4916790	0	True				
ANR	4916966	IdentifierDecl	len = strlen ( item )		4916790	0					
ANR	4916967	IdentifierDeclType	int		4916790	0					
ANR	4916968	Identifier	len		4916790	1					
ANR	4916969	AssignmentExpression	len = strlen ( item )		4916790	2		=			
ANR	4916970	Identifier	len		4916790	0					
ANR	4916971	CallExpression	strlen ( item )		4916790	1					
ANR	4916972	Callee	strlen		4916790	0					
ANR	4916973	Identifier	strlen		4916790	0					
ANR	4916974	ArgumentList	item		4916790	1					
ANR	4916975	Argument	item		4916790	0					
ANR	4916976	Identifier	item		4916790	0					
ANR	4916977	IfStatement	if ( scan )		4916790	1					
ANR	4916978	Condition	scan	303:20:9384:9387	4916790	0	True				
ANR	4916979	Identifier	scan		4916790	0					
ANR	4916980	ReturnStatement	return ;	304:20:9410:9416	4916790	1	True				
ANR	4916981	IfStatement	"if ( strcmp ( pconf -> current_category , category ) )"		4916790	2					
ANR	4916982	Condition	"strcmp ( pconf -> current_category , category )"	305:20:9438:9478	4916790	0	True				
ANR	4916983	CallExpression	"strcmp ( pconf -> current_category , category )"		4916790	0					
ANR	4916984	Callee	strcmp		4916790	0					
ANR	4916985	Identifier	strcmp		4916790	0					
ANR	4916986	ArgumentList	pconf -> current_category		4916790	1					
ANR	4916987	Argument	pconf -> current_category		4916790	0					
ANR	4916988	PtrMemberAccess	pconf -> current_category		4916790	0					
ANR	4916989	Identifier	pconf		4916790	0					
ANR	4916990	Identifier	current_category		4916790	1					
ANR	4916991	Argument	category		4916790	1					
ANR	4916992	Identifier	category		4916790	0					
ANR	4916993	CompoundStatement		34:63:1147:1147	4916790	1					
ANR	4916994	IfStatement	if ( pconf -> in_category )		4916790	0					
ANR	4916995	Condition	pconf -> in_category	306:24:9507:9524	4916790	0	True				
ANR	4916996	PtrMemberAccess	pconf -> in_category		4916790	0					
ANR	4916997	Identifier	pconf		4916790	0					
ANR	4916998	Identifier	in_category		4916790	1					
ANR	4916999	CompoundStatement		35:44:1193:1193	4916790	1					
ANR	4917000	ExpressionStatement	"fprintf ( pconf -> out , ""#%sendif /* -%s */\\n"" , indent_category , pconf -> current_category )"	307:24:9553:9670	4916790	0	True				
ANR	4917001	CallExpression	"fprintf ( pconf -> out , ""#%sendif /* -%s */\\n"" , indent_category , pconf -> current_category )"		4916790	0					
ANR	4917002	Callee	fprintf		4916790	0					
ANR	4917003	Identifier	fprintf		4916790	0					
ANR	4917004	ArgumentList	pconf -> out		4916790	1					
ANR	4917005	Argument	pconf -> out		4916790	0					
ANR	4917006	PtrMemberAccess	pconf -> out		4916790	0					
ANR	4917007	Identifier	pconf		4916790	0					
ANR	4917008	Identifier	out		4916790	1					
ANR	4917009	Argument	"""#%sendif /* -%s */\\n"""		4916790	1					
ANR	4917010	PrimaryExpression	"""#%sendif /* -%s */\\n"""		4916790	0					
ANR	4917011	Argument	indent_category		4916790	2					
ANR	4917012	Identifier	indent_category		4916790	0					
ANR	4917013	Argument	pconf -> current_category		4916790	3					
ANR	4917014	PtrMemberAccess	pconf -> current_category		4916790	0					
ANR	4917015	Identifier	pconf		4916790	0					
ANR	4917016	Identifier	current_category		4916790	1					
ANR	4917017	ExpressionStatement	pconf -> in_category = false	309:24:9696:9722	4916790	1	True				
ANR	4917018	AssignmentExpression	pconf -> in_category = false		4916790	0		=			
ANR	4917019	PtrMemberAccess	pconf -> in_category		4916790	0					
ANR	4917020	Identifier	pconf		4916790	0					
ANR	4917021	Identifier	in_category		4916790	1					
ANR	4917022	Identifier	false		4916790	1					
ANR	4917023	ExpressionStatement	pconf -> current_category = category	311:20:9766:9800	4916790	1	True				
ANR	4917024	AssignmentExpression	pconf -> current_category = category		4916790	0		=			
ANR	4917025	PtrMemberAccess	pconf -> current_category		4916790	0					
ANR	4917026	Identifier	pconf		4916790	0					
ANR	4917027	Identifier	current_category		4916790	1					
ANR	4917028	Identifier	category		4916790	1					
ANR	4917029	IfStatement	if ( pconf -> in_res_scan )		4916790	3					
ANR	4917030	Condition	pconf -> in_res_scan	313:20:9840:9857	4916790	0	True				
ANR	4917031	PtrMemberAccess	pconf -> in_res_scan		4916790	0					
ANR	4917032	Identifier	pconf		4916790	0					
ANR	4917033	Identifier	in_res_scan		4916790	1					
ANR	4917034	CompoundStatement		42:40:1526:1526	4916790	1					
ANR	4917035	ExpressionStatement	"fprintf ( pconf -> out , ""#%sendif /* RES_SCAN */\\n"" , indent_RES_SCAN )"	314:20:9882:9975	4916790	0	True				
ANR	4917036	CallExpression	"fprintf ( pconf -> out , ""#%sendif /* RES_SCAN */\\n"" , indent_RES_SCAN )"		4916790	0					
ANR	4917037	Callee	fprintf		4916790	0					
ANR	4917038	Identifier	fprintf		4916790	0					
ANR	4917039	ArgumentList	pconf -> out		4916790	1					
ANR	4917040	Argument	pconf -> out		4916790	0					
ANR	4917041	PtrMemberAccess	pconf -> out		4916790	0					
ANR	4917042	Identifier	pconf		4916790	0					
ANR	4917043	Identifier	out		4916790	1					
ANR	4917044	Argument	"""#%sendif /* RES_SCAN */\\n"""		4916790	1					
ANR	4917045	PrimaryExpression	"""#%sendif /* RES_SCAN */\\n"""		4916790	0					
ANR	4917046	Argument	indent_RES_SCAN		4916790	2					
ANR	4917047	Identifier	indent_RES_SCAN		4916790	0					
ANR	4917048	ExpressionStatement	pconf -> in_res_scan = false	316:20:9997:10023	4916790	1	True				
ANR	4917049	AssignmentExpression	pconf -> in_res_scan = false		4916790	0		=			
ANR	4917050	PtrMemberAccess	pconf -> in_res_scan		4916790	0					
ANR	4917051	Identifier	pconf		4916790	0					
ANR	4917052	Identifier	in_res_scan		4916790	1					
ANR	4917053	Identifier	false		4916790	1					
ANR	4917054	IfStatement	"if ( len < 5 || strcmp ( item + len - 4 , "".dev"" ) )"		4916790	4					
ANR	4917055	Condition	"len < 5 || strcmp ( item + len - 4 , "".dev"" )"	318:20:10063:10103	4916790	0	True				
ANR	4917056	OrExpression	"len < 5 || strcmp ( item + len - 4 , "".dev"" )"		4916790	0		||			
ANR	4917057	RelationalExpression	len < 5		4916790	0		<			
ANR	4917058	Identifier	len		4916790	0					
ANR	4917059	PrimaryExpression	5		4916790	1					
ANR	4917060	CallExpression	"strcmp ( item + len - 4 , "".dev"" )"		4916790	1					
ANR	4917061	Callee	strcmp		4916790	0					
ANR	4917062	Identifier	strcmp		4916790	0					
ANR	4917063	ArgumentList	item + len - 4		4916790	1					
ANR	4917064	Argument	item + len - 4		4916790	0					
ANR	4917065	AdditiveExpression	item + len - 4		4916790	0		+			
ANR	4917066	Identifier	item		4916790	0					
ANR	4917067	AdditiveExpression	len - 4		4916790	1		-			
ANR	4917068	Identifier	len		4916790	0					
ANR	4917069	PrimaryExpression	4		4916790	1					
ANR	4917070	Argument	""".dev"""		4916790	1					
ANR	4917071	PrimaryExpression	""".dev"""		4916790	0					
ANR	4917072	ExpressionStatement	"fprintf ( pconf -> out , ""#%sinclude \\""%s.dev\\""\\n"" , indent_include , item )"	319:20:10126:10222	4916790	1	True				
ANR	4917073	CallExpression	"fprintf ( pconf -> out , ""#%sinclude \\""%s.dev\\""\\n"" , indent_include , item )"		4916790	0					
ANR	4917074	Callee	fprintf		4916790	0					
ANR	4917075	Identifier	fprintf		4916790	0					
ANR	4917076	ArgumentList	pconf -> out		4916790	1					
ANR	4917077	Argument	pconf -> out		4916790	0					
ANR	4917078	PtrMemberAccess	pconf -> out		4916790	0					
ANR	4917079	Identifier	pconf		4916790	0					
ANR	4917080	Identifier	out		4916790	1					
ANR	4917081	Argument	"""#%sinclude \\""%s.dev\\""\\n"""		4916790	1					
ANR	4917082	PrimaryExpression	"""#%sinclude \\""%s.dev\\""\\n"""		4916790	0					
ANR	4917083	Argument	indent_include		4916790	2					
ANR	4917084	Identifier	indent_include		4916790	0					
ANR	4917085	Argument	item		4916790	3					
ANR	4917086	Identifier	item		4916790	0					
ANR	4917087	ElseStatement	else		4916790	0					
ANR	4917088	ExpressionStatement	"fprintf ( pconf -> out , ""#%sinclude \\""%s\\""\\n"" , indent_include , item )"	322:20:10265:10357	4916790	0	True				
ANR	4917089	CallExpression	"fprintf ( pconf -> out , ""#%sinclude \\""%s\\""\\n"" , indent_include , item )"		4916790	0					
ANR	4917090	Callee	fprintf		4916790	0					
ANR	4917091	Identifier	fprintf		4916790	0					
ANR	4917092	ArgumentList	pconf -> out		4916790	1					
ANR	4917093	Argument	pconf -> out		4916790	0					
ANR	4917094	PtrMemberAccess	pconf -> out		4916790	0					
ANR	4917095	Identifier	pconf		4916790	0					
ANR	4917096	Identifier	out		4916790	1					
ANR	4917097	Argument	"""#%sinclude \\""%s\\""\\n"""		4916790	1					
ANR	4917098	PrimaryExpression	"""#%sinclude \\""%s\\""\\n"""		4916790	0					
ANR	4917099	Argument	indent_include		4916790	2					
ANR	4917100	Identifier	indent_include		4916790	0					
ANR	4917101	Argument	item		4916790	3					
ANR	4917102	Identifier	item		4916790	0					
ANR	4917103	ReturnStatement	return ;	324:16:10375:10381	4916790	5	True				
ANR	4917104	ElseStatement	else		4916790	0					
ANR	4917105	IfStatement	"if ( is_cat ( ""init"" ) )"		4916790	0					
ANR	4917106	Condition	"is_cat ( ""init"" )"	325:23:10406:10419	4916790	0	True				
ANR	4917107	CallExpression	"is_cat ( ""init"" )"		4916790	0					
ANR	4917108	Callee	is_cat		4916790	0					
ANR	4917109	Identifier	is_cat		4916790	0					
ANR	4917110	ArgumentList	"""init"""		4916790	1					
ANR	4917111	Argument	"""init"""		4916790	0					
ANR	4917112	PrimaryExpression	"""init"""		4916790	0					
ANR	4917113	ExpressionStatement	"sprintf ( str , ""init_(%s%s_init)"" , pconf -> name_prefix , item )"	326:16:10438:10496	4916790	1	True				
ANR	4917114	CallExpression	"sprintf ( str , ""init_(%s%s_init)"" , pconf -> name_prefix , item )"		4916790	0					
ANR	4917115	Callee	sprintf		4916790	0					
ANR	4917116	Identifier	sprintf		4916790	0					
ANR	4917117	ArgumentList	str		4916790	1					
ANR	4917118	Argument	str		4916790	0					
ANR	4917119	Identifier	str		4916790	0					
ANR	4917120	Argument	"""init_(%s%s_init)"""		4916790	1					
ANR	4917121	PrimaryExpression	"""init_(%s%s_init)"""		4916790	0					
ANR	4917122	Argument	pconf -> name_prefix		4916790	2					
ANR	4917123	PtrMemberAccess	pconf -> name_prefix		4916790	0					
ANR	4917124	Identifier	pconf		4916790	0					
ANR	4917125	Identifier	name_prefix		4916790	1					
ANR	4917126	Argument	item		4916790	3					
ANR	4917127	Identifier	item		4916790	0					
ANR	4917128	ElseStatement	else		4916790	0					
ANR	4917129	IfStatement	"if ( is_cat ( ""iodev"" ) )"		4916790	0					
ANR	4917130	Condition	"is_cat ( ""iodev"" )"	327:21:10519:10533	4916790	0	True				
ANR	4917131	CallExpression	"is_cat ( ""iodev"" )"		4916790	0					
ANR	4917132	Callee	is_cat		4916790	0					
ANR	4917133	Identifier	is_cat		4916790	0					
ANR	4917134	ArgumentList	"""iodev"""		4916790	1					
ANR	4917135	Argument	"""iodev"""		4916790	0					
ANR	4917136	PrimaryExpression	"""iodev"""		4916790	0					
ANR	4917137	ExpressionStatement	"sprintf ( str , ""io_device_(%siodev_%s)"" , pconf -> name_prefix , item )"	328:16:10552:10616	4916790	1	True				
ANR	4917138	CallExpression	"sprintf ( str , ""io_device_(%siodev_%s)"" , pconf -> name_prefix , item )"		4916790	0					
ANR	4917139	Callee	sprintf		4916790	0					
ANR	4917140	Identifier	sprintf		4916790	0					
ANR	4917141	ArgumentList	str		4916790	1					
ANR	4917142	Argument	str		4916790	0					
ANR	4917143	Identifier	str		4916790	0					
ANR	4917144	Argument	"""io_device_(%siodev_%s)"""		4916790	1					
ANR	4917145	PrimaryExpression	"""io_device_(%siodev_%s)"""		4916790	0					
ANR	4917146	Argument	pconf -> name_prefix		4916790	2					
ANR	4917147	PtrMemberAccess	pconf -> name_prefix		4916790	0					
ANR	4917148	Identifier	pconf		4916790	0					
ANR	4917149	Identifier	name_prefix		4916790	1					
ANR	4917150	Argument	item		4916790	3					
ANR	4917151	Identifier	item		4916790	0					
ANR	4917152	BreakStatement	break ;	329:12:10630:10635	4916790	23	True				
ANR	4917153	Label	case 'l' :	330:8:10645:10653	4916790	24	True				
ANR	4917154	IfStatement	"if ( is_cat ( ""lib"" ) )"		4916790	25					
ANR	4917155	Condition	"is_cat ( ""lib"" )"	331:16:10671:10683	4916790	0	True				
ANR	4917156	CallExpression	"is_cat ( ""lib"" )"		4916790	0					
ANR	4917157	Callee	is_cat		4916790	0					
ANR	4917158	Identifier	is_cat		4916790	0					
ANR	4917159	ArgumentList	"""lib"""		4916790	1					
ANR	4917160	Argument	"""lib"""		4916790	0					
ANR	4917161	PrimaryExpression	"""lib"""		4916790	0					
ANR	4917162	CompoundStatement		60:31:2352:2352	4916790	1					
ANR	4917163	ExpressionStatement	"sprintf ( str , ""lib_(%s)"" , item )"	332:16:10704:10734	4916790	0	True				
ANR	4917164	CallExpression	"sprintf ( str , ""lib_(%s)"" , item )"		4916790	0					
ANR	4917165	Callee	sprintf		4916790	0					
ANR	4917166	Identifier	sprintf		4916790	0					
ANR	4917167	ArgumentList	str		4916790	1					
ANR	4917168	Argument	str		4916790	0					
ANR	4917169	Identifier	str		4916790	0					
ANR	4917170	Argument	"""lib_(%s)"""		4916790	1					
ANR	4917171	PrimaryExpression	"""lib_(%s)"""		4916790	0					
ANR	4917172	Argument	item		4916790	2					
ANR	4917173	Identifier	item		4916790	0					
ANR	4917174	ExpressionStatement	mode = uniq_last	333:16:10752:10768	4916790	1	True				
ANR	4917175	AssignmentExpression	mode = uniq_last		4916790	0		=			
ANR	4917176	Identifier	mode		4916790	0					
ANR	4917177	Identifier	uniq_last		4916790	1					
ANR	4917178	BreakStatement	break ;	335:12:10796:10801	4916790	26	True				
ANR	4917179	Label	case 'o' :	336:8:10811:10819	4916790	27	True				
ANR	4917180	IfStatement	"if ( is_cat ( ""obj"" ) )"		4916790	28					
ANR	4917181	Condition	"is_cat ( ""obj"" )"	337:16:10837:10849	4916790	0	True				
ANR	4917182	CallExpression	"is_cat ( ""obj"" )"		4916790	0					
ANR	4917183	Callee	is_cat		4916790	0					
ANR	4917184	Identifier	is_cat		4916790	0					
ANR	4917185	ArgumentList	"""obj"""		4916790	1					
ANR	4917186	Argument	"""obj"""		4916790	0					
ANR	4917187	PrimaryExpression	"""obj"""		4916790	0					
ANR	4917188	ExpressionStatement	"sprintf ( str , ""obj_(%s%s)"" , pconf -> file_prefix , item )"	338:16:10868:10920	4916790	1	True				
ANR	4917189	CallExpression	"sprintf ( str , ""obj_(%s%s)"" , pconf -> file_prefix , item )"		4916790	0					
ANR	4917190	Callee	sprintf		4916790	0					
ANR	4917191	Identifier	sprintf		4916790	0					
ANR	4917192	ArgumentList	str		4916790	1					
ANR	4917193	Argument	str		4916790	0					
ANR	4917194	Identifier	str		4916790	0					
ANR	4917195	Argument	"""obj_(%s%s)"""		4916790	1					
ANR	4917196	PrimaryExpression	"""obj_(%s%s)"""		4916790	0					
ANR	4917197	Argument	pconf -> file_prefix		4916790	2					
ANR	4917198	PtrMemberAccess	pconf -> file_prefix		4916790	0					
ANR	4917199	Identifier	pconf		4916790	0					
ANR	4917200	Identifier	file_prefix		4916790	1					
ANR	4917201	Argument	item		4916790	3					
ANR	4917202	Identifier	item		4916790	0					
ANR	4917203	ElseStatement	else		4916790	0					
ANR	4917204	IfStatement	"if ( is_cat ( ""oper"" ) )"		4916790	0					
ANR	4917205	Condition	"is_cat ( ""oper"" )"	339:21:10943:10956	4916790	0	True				
ANR	4917206	CallExpression	"is_cat ( ""oper"" )"		4916790	0					
ANR	4917207	Callee	is_cat		4916790	0					
ANR	4917208	Identifier	is_cat		4916790	0					
ANR	4917209	ArgumentList	"""oper"""		4916790	1					
ANR	4917210	Argument	"""oper"""		4916790	0					
ANR	4917211	PrimaryExpression	"""oper"""		4916790	0					
ANR	4917212	ExpressionStatement	"sprintf ( str , ""oper_(%s_op_defs)"" , item )"	340:16:10975:11014	4916790	1	True				
ANR	4917213	CallExpression	"sprintf ( str , ""oper_(%s_op_defs)"" , item )"		4916790	0					
ANR	4917214	Callee	sprintf		4916790	0					
ANR	4917215	Identifier	sprintf		4916790	0					
ANR	4917216	ArgumentList	str		4916790	1					
ANR	4917217	Argument	str		4916790	0					
ANR	4917218	Identifier	str		4916790	0					
ANR	4917219	Argument	"""oper_(%s_op_defs)"""		4916790	1					
ANR	4917220	PrimaryExpression	"""oper_(%s_op_defs)"""		4916790	0					
ANR	4917221	Argument	item		4916790	2					
ANR	4917222	Identifier	item		4916790	0					
ANR	4917223	BreakStatement	break ;	341:12:11028:11033	4916790	29	True				
ANR	4917224	Label	case 'p' :	342:8:11043:11051	4916790	30	True				
ANR	4917225	IfStatement	"if ( is_cat ( ""ps"" ) )"		4916790	31					
ANR	4917226	Condition	"is_cat ( ""ps"" )"	343:16:11069:11080	4916790	0	True				
ANR	4917227	CallExpression	"is_cat ( ""ps"" )"		4916790	0					
ANR	4917228	Callee	is_cat		4916790	0					
ANR	4917229	Identifier	is_cat		4916790	0					
ANR	4917230	ArgumentList	"""ps"""		4916790	1					
ANR	4917231	Argument	"""ps"""		4916790	0					
ANR	4917232	PrimaryExpression	"""ps"""		4916790	0					
ANR	4917233	ExpressionStatement	"sprintf ( str , ""psfile_(\\""%s.ps\\"",%d)"" , item , strlen ( item ) + 3 )"	344:16:11099:11184	4916790	1	True				
ANR	4917234	CallExpression	"sprintf ( str , ""psfile_(\\""%s.ps\\"",%d)"" , item , strlen ( item ) + 3 )"		4916790	0					
ANR	4917235	Callee	sprintf		4916790	0					
ANR	4917236	Identifier	sprintf		4916790	0					
ANR	4917237	ArgumentList	str		4916790	1					
ANR	4917238	Argument	str		4916790	0					
ANR	4917239	Identifier	str		4916790	0					
ANR	4917240	Argument	"""psfile_(\\""%s.ps\\"",%d)"""		4916790	1					
ANR	4917241	PrimaryExpression	"""psfile_(\\""%s.ps\\"",%d)"""		4916790	0					
ANR	4917242	Argument	item		4916790	2					
ANR	4917243	Identifier	item		4916790	0					
ANR	4917244	Argument	strlen ( item ) + 3		4916790	3					
ANR	4917245	AdditiveExpression	strlen ( item ) + 3		4916790	0		+			
ANR	4917246	CallExpression	strlen ( item )		4916790	0					
ANR	4917247	Callee	strlen		4916790	0					
ANR	4917248	Identifier	strlen		4916790	0					
ANR	4917249	ArgumentList	item		4916790	1					
ANR	4917250	Argument	item		4916790	0					
ANR	4917251	Identifier	item		4916790	0					
ANR	4917252	PrimaryExpression	3		4916790	1					
ANR	4917253	BreakStatement	break ;	346:12:11198:11203	4916790	32	True				
ANR	4917254	Statement	undef	347:1:11206:11210	4916790	33	True				
ANR	4917255	Statement	is_cat	347:7:11212:11217	4916790	34	True				
ANR	4917256	Label	default :	348:8:11227:11234	4916790	35	True				
ANR	4917257	Identifier	default		4916790	0					
ANR	4917258	ExpressionStatement		349:12:11248:11248	4916790	36	True				
ANR	4917259	IfStatement	if ( str [ 0 ] == 0 )		4916790	5					
ANR	4917260	Condition	str [ 0 ] == 0	351:8:11264:11274	4916790	0	True				
ANR	4917261	EqualityExpression	str [ 0 ] == 0		4916790	0		==			
ANR	4917262	ArrayIndexing	str [ 0 ]		4916790	0					
ANR	4917263	Identifier	str		4916790	0					
ANR	4917264	PrimaryExpression	0		4916790	1					
ANR	4917265	PrimaryExpression	0		4916790	1					
ANR	4917266	CompoundStatement		80:21:2943:2943	4916790	1					
ANR	4917267	ExpressionStatement	"fprintf ( stderr , ""Unknown category %s.\\n"" , category )"	352:8:11287:11338	4916790	0	True				
ANR	4917268	CallExpression	"fprintf ( stderr , ""Unknown category %s.\\n"" , category )"		4916790	0					
ANR	4917269	Callee	fprintf		4916790	0					
ANR	4917270	Identifier	fprintf		4916790	0					
ANR	4917271	ArgumentList	stderr		4916790	1					
ANR	4917272	Argument	stderr		4916790	0					
ANR	4917273	Identifier	stderr		4916790	0					
ANR	4917274	Argument	"""Unknown category %s.\\n"""		4916790	1					
ANR	4917275	PrimaryExpression	"""Unknown category %s.\\n"""		4916790	0					
ANR	4917276	Argument	category		4916790	2					
ANR	4917277	Identifier	category		4916790	0					
ANR	4917278	ExpressionStatement	exit ( 1 )	353:8:11348:11355	4916790	1	True				
ANR	4917279	CallExpression	exit ( 1 )		4916790	0					
ANR	4917280	Callee	exit		4916790	0					
ANR	4917281	Identifier	exit		4916790	0					
ANR	4917282	ArgumentList	1		4916790	1					
ANR	4917283	Argument	1		4916790	0					
ANR	4917284	PrimaryExpression	1		4916790	0					
ANR	4917285	IfStatement	if ( scan )		4916790	6					
ANR	4917286	Condition	scan	355:8:11371:11374	4916790	0	True				
ANR	4917287	Identifier	scan		4916790	0					
ANR	4917288	ExpressionStatement	"write_scan_item ( pconf , str , category , item , mode )"	356:8:11385:11434	4916790	1	True				
ANR	4917289	CallExpression	"write_scan_item ( pconf , str , category , item , mode )"		4916790	0					
ANR	4917290	Callee	write_scan_item		4916790	0					
ANR	4917291	Identifier	write_scan_item		4916790	0					
ANR	4917292	ArgumentList	pconf		4916790	1					
ANR	4917293	Argument	pconf		4916790	0					
ANR	4917294	Identifier	pconf		4916790	0					
ANR	4917295	Argument	str		4916790	1					
ANR	4917296	Identifier	str		4916790	0					
ANR	4917297	Argument	category		4916790	2					
ANR	4917298	Identifier	category		4916790	0					
ANR	4917299	Argument	item		4916790	3					
ANR	4917300	Identifier	item		4916790	0					
ANR	4917301	Argument	mode		4916790	4					
ANR	4917302	Identifier	mode		4916790	0					
ANR	4917303	ElseStatement	else		4916790	0					
ANR	4917304	ExpressionStatement	"write_item ( pconf , str , category , item , mode )"	358:8:11453:11497	4916790	0	True				
ANR	4917305	CallExpression	"write_item ( pconf , str , category , item , mode )"		4916790	0					
ANR	4917306	Callee	write_item		4916790	0					
ANR	4917307	Identifier	write_item		4916790	0					
ANR	4917308	ArgumentList	pconf		4916790	1					
ANR	4917309	Argument	pconf		4916790	0					
ANR	4917310	Identifier	pconf		4916790	0					
ANR	4917311	Argument	str		4916790	1					
ANR	4917312	Identifier	str		4916790	0					
ANR	4917313	Argument	category		4916790	2					
ANR	4917314	Identifier	category		4916790	0					
ANR	4917315	Argument	item		4916790	3					
ANR	4917316	Identifier	item		4916790	0					
ANR	4917317	Argument	mode		4916790	4					
ANR	4917318	Identifier	mode		4916790	0					
ANR	4917319	ReturnType	void		4916790	1					
ANR	4917320	Identifier	add_entry		4916790	2					
ANR	4917321	ParameterList	"config * pconf , const char * category , const char * item , bool scan"		4916790	3					
ANR	4917322	Parameter	config * pconf	271:10:8266:8279	4916790	0	True				
ANR	4917323	ParameterType	config *		4916790	0					
ANR	4917324	Identifier	pconf		4916790	1					
ANR	4917325	Parameter	const char * category	271:26:8282:8301	4916790	1	True				
ANR	4917326	ParameterType	const char *		4916790	0					
ANR	4917327	Identifier	category		4916790	1					
ANR	4917328	Parameter	const char * item	271:48:8304:8319	4916790	2	True				
ANR	4917329	ParameterType	const char *		4916790	0					
ANR	4917330	Identifier	item		4916790	1					
ANR	4917331	Parameter	bool scan	271:66:8322:8330	4916790	3	True				
ANR	4917332	ParameterType	bool		4916790	0					
ANR	4917333	Identifier	scan		4916790	1					
ANR	4917334	CFGEntryNode	ENTRY		4916790		True				
ANR	4917335	CFGExitNode	EXIT		4916790		True				
ANR	4917336	Symbol	pconf -> in_res_scan		4916790						
ANR	4917337	Symbol	pconf -> debug		4916790						
ANR	4917338	Symbol	pconf -> out		4916790						
ANR	4917339	Symbol	scan		4916790						
ANR	4917340	Symbol	pconf		4916790						
ANR	4917341	Symbol	mode		4916790						
ANR	4917342	Symbol	strlen		4916790						
ANR	4917343	Symbol	len		4916790						
ANR	4917344	Symbol	indent_include		4916790						
ANR	4917345	Symbol	pconf -> in_category		4916790						
ANR	4917346	Symbol	* str		4916790						
ANR	4917347	Symbol	pconf -> name_prefix		4916790						
ANR	4917348	Symbol	strcmp		4916790						
ANR	4917349	Symbol	item		4916790						
ANR	4917350	Symbol	uniq_last		4916790						
ANR	4917351	Symbol	* pconf		4916790						
ANR	4917352	Symbol	false		4916790						
ANR	4917353	Symbol	* category		4916790						
ANR	4917354	Symbol	stderr		4916790						
ANR	4917355	Symbol	uniq_first		4916790						
ANR	4917356	Symbol	is_cat		4916790						
ANR	4917357	Symbol	str		4916790						
ANR	4917358	Symbol	indent_category		4916790						
ANR	4917359	Symbol	pconf -> file_prefix		4916790						
ANR	4917360	Symbol	category		4916790						
ANR	4917361	Symbol	pconf -> current_category		4916790						
ANR	4917362	Symbol	indent_RES_SCAN		4916790						
