command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11026652	File	data/converged/CVE-2018-16863_ghostpdl/zcontext.c								
ANR	11026653	ClassDef	<unnamed>	52:0:1761:1845							
ANR	11026654	DeclStmt									
ANR	11026655	Decl							int	int	reschedule_interval
ANR	11026656	ClassDef	<unnamed>	60:8:1944:1992							
ANR	11026657	DeclStmt									
ANR	11026658	Decl									ctx_status_t
ANR	11026659	DeclStmt									
ANR	11026660	Decl							long	long	ctx_index_t
ANR	11026661	DeclStmt									
ANR	11026662	Decl							struct gs_context_s	struct gs_context_s	gs_context_t
ANR	11026663	DeclStmt									
ANR	11026664	Decl							struct gs_scheduler_s	struct gs_scheduler_s	gs_scheduler_t
ANR	11026665	ClassDef	gs_context_s	82:0:2883:3878							
ANR	11026666	DeclStmt									
ANR	11026667	Decl							gs_context_state_t	gs_context_state_t	state
ANR	11026668	DeclStmt									
ANR	11026669	Decl							gs_scheduler_t	gs_scheduler_t *	scheduler
ANR	11026670	DeclStmt									
ANR	11026671	Decl							ctx_status_t	ctx_status_t	status
ANR	11026672	DeclStmt									
ANR	11026673	Decl							ctx_index_t	ctx_index_t	index
ANR	11026674	DeclStmt									
ANR	11026675	Decl							bool	bool	detach
ANR	11026676	DeclStmt									
ANR	11026677	Decl							bool	bool	saved_local_vm
ANR	11026678	DeclStmt									
ANR	11026679	Decl							bool	bool	visible
ANR	11026680	DeclStmt									
ANR	11026681	Decl							ctx_index_t	ctx_index_t	next_index
ANR	11026682	DeclStmt									
ANR	11026683	Decl							ctx_index_t	ctx_index_t	joiner_index
ANR	11026684	DeclStmt									
ANR	11026685	Decl							gs_context_t	gs_context_t *	table_next
ANR	11026686	Function	visible_context	102:0:3881:4011							
ANR	11026687	FunctionDef	visible_context (gs_context_t * pctx)		11026686	0					
ANR	11026688	CompoundStatement		104:0:3946:4011	11026686	0					
ANR	11026689	ReturnStatement	return ( pctx && pctx -> visible ? pctx : ( gs_context_t * ) 0 ) ;	105:4:3952:4009	11026686	0	True				
ANR	11026690	ConditionalExpression	pctx && pctx -> visible ? pctx : ( gs_context_t * ) 0		11026686	0					
ANR	11026691	Condition	pctx && pctx -> visible		11026686	0					
ANR	11026692	AndExpression	pctx && pctx -> visible		11026686	0		&&			
ANR	11026693	Identifier	pctx		11026686	0					
ANR	11026694	PtrMemberAccess	pctx -> visible		11026686	1					
ANR	11026695	Identifier	pctx		11026686	0					
ANR	11026696	Identifier	visible		11026686	1					
ANR	11026697	Identifier	pctx		11026686	1					
ANR	11026698	CastExpression	( gs_context_t * ) 0		11026686	2					
ANR	11026699	CastTarget	gs_context_t *		11026686	0					
ANR	11026700	PrimaryExpression	0		11026686	1					
ANR	11026701	ReturnType	static inline gs_context_t *		11026686	1					
ANR	11026702	Identifier	visible_context		11026686	2					
ANR	11026703	ParameterList	gs_context_t * pctx		11026686	3					
ANR	11026704	Parameter	gs_context_t * pctx	103:16:3926:3943	11026686	0	True				
ANR	11026705	ParameterType	gs_context_t *		11026686	0					
ANR	11026706	Identifier	pctx		11026686	1					
ANR	11026707	CFGEntryNode	ENTRY		11026686		True				
ANR	11026708	CFGExitNode	EXIT		11026686		True				
ANR	11026709	Symbol	pctx		11026686						
ANR	11026710	Symbol	pctx -> visible		11026686						
ANR	11026711	Symbol	* pctx		11026686						
ANR	11026712	DeclStmt									
ANR	11026713	Decl							const gs_context_t	const gs_context_t *	next
ANR	11026714	DeclStmt									
ANR	11026715	Decl							RELOC_PTRS_END	RELOC_PTRS_END	gs_private_st_complex_only
ANR	11026716	ClassDef	ctx_list_s	142:8:5103:5191							
ANR	11026717	DeclStmt									
ANR	11026718	Decl							ctx_index_t	ctx_index_t	head_index
ANR	11026719	DeclStmt									
ANR	11026720	Decl							ctx_index_t	ctx_index_t	tail_index
ANR	11026721	DeclStmt									
ANR	11026722	Decl							ctx_list_s	ctx_list_s	ctx_list_t
ANR	11026723	ClassDef	gs_condition_s	148:8:5228:5333							
ANR	11026724	DeclStmt									
ANR	11026725	Decl							ctx_list_t	ctx_list_t	waiting
ANR	11026726	DeclStmt									
ANR	11026727	Decl							gs_condition_s	gs_condition_s	gs_condition_t
ANR	11026728	ClassDef	gs_lock_s	154:8:5434:5695							
ANR	11026729	DeclStmt									
ANR	11026730	Decl							ctx_list_t	ctx_list_t	waiting
ANR	11026731	DeclStmt									
ANR	11026732	Decl							ctx_index_t	ctx_index_t	holder_index
ANR	11026733	DeclStmt									
ANR	11026734	Decl							gs_scheduler_t	gs_scheduler_t *	scheduler
ANR	11026735	DeclStmt									
ANR	11026736	Decl							gs_lock_s	gs_lock_s	gs_lock_t
ANR	11026737	ClassDef	gs_scheduler_s	165:0:5898:6179							
ANR	11026738	DeclStmt									
ANR	11026739	Decl							gs_context_t	gs_context_t *	current
ANR	11026740	DeclStmt									
ANR	11026741	Decl							long	long	usertime_initial
ANR	11026742	DeclStmt									
ANR	11026743	Decl							ctx_list_t	ctx_list_t	active
ANR	11026744	DeclStmt									
ANR	11026745	Decl							ctx_index_t	ctx_index_t	dead_index
ANR	11026746	DeclStmt									
ANR	11026747	Decl							gs_context_t	gs_context_t * [ CTX_TABLE_SIZE ]	table
ANR	11026748	Function	index_context	176:0:6235:6530							
ANR	11026749	FunctionDef	"index_context (const gs_scheduler_t * psched , long index)"		11026748	0					
ANR	11026750	CompoundStatement		178:0:6313:6530	11026748	0					
ANR	11026751	IdentifierDeclStatement	gs_context_t * pctx ;	179:4:6319:6337	11026748	0	True				
ANR	11026752	IdentifierDecl	* pctx		11026748	0					
ANR	11026753	IdentifierDeclType	gs_context_t *		11026748	0					
ANR	11026754	Identifier	pctx		11026748	1					
ANR	11026755	IfStatement	if ( index <= 0 )		11026748	1					
ANR	11026756	Condition	index <= 0	181:8:6348:6357	11026748	0	True				
ANR	11026757	RelationalExpression	index <= 0		11026748	0		<=			
ANR	11026758	Identifier	index		11026748	0					
ANR	11026759	PrimaryExpression	0		11026748	1					
ANR	11026760	ReturnStatement	return NULL ;	182:8:6368:6379	11026748	1	True				
ANR	11026761	Identifier	NULL		11026748	0					
ANR	11026762	ExpressionStatement	pctx = psched -> table [ index % CTX_TABLE_SIZE ]	183:4:6385:6429	11026748	2	True				
ANR	11026763	AssignmentExpression	pctx = psched -> table [ index % CTX_TABLE_SIZE ]		11026748	0		=			
ANR	11026764	Identifier	pctx		11026748	0					
ANR	11026765	ArrayIndexing	psched -> table [ index % CTX_TABLE_SIZE ]		11026748	1					
ANR	11026766	PtrMemberAccess	psched -> table		11026748	0					
ANR	11026767	Identifier	psched		11026748	0					
ANR	11026768	Identifier	table		11026748	1					
ANR	11026769	MultiplicativeExpression	index % CTX_TABLE_SIZE		11026748	1		%			
ANR	11026770	Identifier	index		11026748	0					
ANR	11026771	Identifier	CTX_TABLE_SIZE		11026748	1					
ANR	11026772	WhileStatement	while ( pctx != NULL && pctx -> index != index )		11026748	3					
ANR	11026773	Condition	pctx != NULL && pctx -> index != index	184:11:6442:6477	11026748	0	True				
ANR	11026774	AndExpression	pctx != NULL && pctx -> index != index		11026748	0		&&			
ANR	11026775	EqualityExpression	pctx != NULL		11026748	0		!=			
ANR	11026776	Identifier	pctx		11026748	0					
ANR	11026777	Identifier	NULL		11026748	1					
ANR	11026778	EqualityExpression	pctx -> index != index		11026748	1		!=			
ANR	11026779	PtrMemberAccess	pctx -> index		11026748	0					
ANR	11026780	Identifier	pctx		11026748	0					
ANR	11026781	Identifier	index		11026748	1					
ANR	11026782	Identifier	index		11026748	1					
ANR	11026783	ExpressionStatement	pctx = pctx -> table_next	185:8:6488:6511	11026748	1	True				
ANR	11026784	AssignmentExpression	pctx = pctx -> table_next		11026748	0		=			
ANR	11026785	Identifier	pctx		11026748	0					
ANR	11026786	PtrMemberAccess	pctx -> table_next		11026748	1					
ANR	11026787	Identifier	pctx		11026748	0					
ANR	11026788	Identifier	table_next		11026748	1					
ANR	11026789	ReturnStatement	return pctx ;	186:4:6517:6528	11026748	4	True				
ANR	11026790	Identifier	pctx		11026748	0					
ANR	11026791	ReturnType	static gs_context_t *		11026748	1					
ANR	11026792	Identifier	index_context		11026748	2					
ANR	11026793	ParameterList	"const gs_scheduler_t * psched , long index"		11026748	3					
ANR	11026794	Parameter	const gs_scheduler_t * psched	177:14:6271:6298	11026748	0	True				
ANR	11026795	ParameterType	const gs_scheduler_t *		11026748	0					
ANR	11026796	Identifier	psched		11026748	1					
ANR	11026797	Parameter	long index	177:44:6301:6310	11026748	1	True				
ANR	11026798	ParameterType	long		11026748	0					
ANR	11026799	Identifier	index		11026748	1					
ANR	11026800	CFGEntryNode	ENTRY		11026748		True				
ANR	11026801	CFGExitNode	EXIT		11026748		True				
ANR	11026802	Symbol	pctx		11026748						
ANR	11026803	Symbol	NULL		11026748						
ANR	11026804	Symbol	pctx -> index		11026748						
ANR	11026805	Symbol	psched		11026748						
ANR	11026806	Symbol	* * psched		11026748						
ANR	11026807	Symbol	* psched		11026748						
ANR	11026808	Symbol	* index		11026748						
ANR	11026809	Symbol	index		11026748						
ANR	11026810	Symbol	psched -> table		11026748						
ANR	11026811	Symbol	* psched -> table		11026748						
ANR	11026812	Symbol	* pctx		11026748						
ANR	11026813	Symbol	pctx -> table_next		11026748						
ANR	11026814	Symbol	CTX_TABLE_SIZE		11026748						
ANR	11026815	Symbol	* CTX_TABLE_SIZE		11026748						
ANR	11026816	DeclStmt									
ANR	11026817	Decl							gs_context_t	gs_context_t *	pctx
ANR	11026818	DeclStmt									
ANR	11026819	Decl							int	int	i
ANR	11026820	DeclStmt									
ANR	11026821	Decl							gs_context_t	gs_context_t * *	ppctx
ANR	11026822	DeclStmt									
ANR	11026823	Decl							gs_context_t	gs_context_t * *	pnext
ANR	11026824	Function	context_reclaim	240:0:8192:10051							
ANR	11026825	FunctionDef	"context_reclaim (vm_spaces * pspaces , bool global)"		11026824	0					
ANR	11026826	CompoundStatement		242:0:8254:10051	11026824	0					
ANR	11026827	IdentifierDeclStatement	int i ;	247:4:8401:8406	11026824	0	True				
ANR	11026828	IdentifierDecl	i		11026824	0					
ANR	11026829	IdentifierDeclType	int		11026824	0					
ANR	11026830	Identifier	i		11026824	1					
ANR	11026831	IdentifierDeclStatement	gs_context_t * pctx = 0 ;	248:4:8412:8434	11026824	1	True				
ANR	11026832	IdentifierDecl	* pctx = 0		11026824	0					
ANR	11026833	IdentifierDeclType	gs_context_t *		11026824	0					
ANR	11026834	Identifier	pctx		11026824	1					
ANR	11026835	AssignmentExpression	* pctx = 0		11026824	2		=			
ANR	11026836	Identifier	pctx		11026824	0					
ANR	11026837	PrimaryExpression	0		11026824	1					
ANR	11026838	IdentifierDeclStatement	gs_scheduler_t * psched = 0 ;	249:4:8479:8505	11026824	2	True				
ANR	11026839	IdentifierDecl	* psched = 0		11026824	0					
ANR	11026840	IdentifierDeclType	gs_scheduler_t *		11026824	0					
ANR	11026841	Identifier	psched		11026824	1					
ANR	11026842	AssignmentExpression	* psched = 0		11026824	2		=			
ANR	11026843	Identifier	psched		11026824	0					
ANR	11026844	PrimaryExpression	0		11026824	1					
ANR	11026845	IdentifierDeclStatement	gs_ref_memory_t * lmem = 0 ;	250:4:8511:8536	11026824	3	True				
ANR	11026846	IdentifierDecl	* lmem = 0		11026824	0					
ANR	11026847	IdentifierDeclType	gs_ref_memory_t *		11026824	0					
ANR	11026848	Identifier	lmem		11026824	1					
ANR	11026849	AssignmentExpression	* lmem = 0		11026824	2		=			
ANR	11026850	Identifier	lmem		11026824	0					
ANR	11026851	PrimaryExpression	0		11026824	1					
ANR	11026852	IdentifierDeclStatement	clump_locator_t loc ;	251:4:8581:8600	11026824	4	True				
ANR	11026853	IdentifierDecl	loc		11026824	0					
ANR	11026854	IdentifierDeclType	clump_locator_t		11026824	0					
ANR	11026855	Identifier	loc		11026824	1					
ANR	11026856	ForStatement	for ( i = countof ( pspaces -> memories . indexed ) - 1 ; psched == 0 && i > 0 ; -- i )		11026824	5					
ANR	11026857	ForInit	i = countof ( pspaces -> memories . indexed ) - 1 ;	253:9:8612:8654	11026824	0	True				
ANR	11026858	AssignmentExpression	i = countof ( pspaces -> memories . indexed ) - 1		11026824	0		=			
ANR	11026859	Identifier	i		11026824	0					
ANR	11026860	AdditiveExpression	countof ( pspaces -> memories . indexed ) - 1		11026824	1		-			
ANR	11026861	CallExpression	countof ( pspaces -> memories . indexed )		11026824	0					
ANR	11026862	Callee	countof		11026824	0					
ANR	11026863	Identifier	countof		11026824	0					
ANR	11026864	ArgumentList	pspaces -> memories . indexed		11026824	1					
ANR	11026865	Argument	pspaces -> memories . indexed		11026824	0					
ANR	11026866	MemberAccess	pspaces -> memories . indexed		11026824	0					
ANR	11026867	PtrMemberAccess	pspaces -> memories		11026824	0					
ANR	11026868	Identifier	pspaces		11026824	0					
ANR	11026869	Identifier	memories		11026824	1					
ANR	11026870	Identifier	indexed		11026824	1					
ANR	11026871	PrimaryExpression	1		11026824	1					
ANR	11026872	Condition	psched == 0 && i > 0	253:53:8656:8675	11026824	1	True				
ANR	11026873	AndExpression	psched == 0 && i > 0		11026824	0		&&			
ANR	11026874	EqualityExpression	psched == 0		11026824	0		==			
ANR	11026875	Identifier	psched		11026824	0					
ANR	11026876	PrimaryExpression	0		11026824	1					
ANR	11026877	RelationalExpression	i > 0		11026824	1		>			
ANR	11026878	Identifier	i		11026824	0					
ANR	11026879	PrimaryExpression	0		11026824	1					
ANR	11026880	UnaryExpression	-- i	253:75:8678:8680	11026824	2	True				
ANR	11026881	IncDec	--		11026824	0					
ANR	11026882	Identifier	i		11026824	1					
ANR	11026883	CompoundStatement		14:8:499:536	11026824	3					
ANR	11026884	IdentifierDeclStatement	gs_ref_memory_t * mem = pspaces -> memories . indexed [ i ] ;	254:8:8693:8744	11026824	0	True				
ANR	11026885	IdentifierDecl	* mem = pspaces -> memories . indexed [ i ]		11026824	0					
ANR	11026886	IdentifierDeclType	gs_ref_memory_t *		11026824	0					
ANR	11026887	Identifier	mem		11026824	1					
ANR	11026888	AssignmentExpression	* mem = pspaces -> memories . indexed [ i ]		11026824	2		=			
ANR	11026889	Identifier	mem		11026824	0					
ANR	11026890	ArrayIndexing	pspaces -> memories . indexed [ i ]		11026824	1					
ANR	11026891	MemberAccess	pspaces -> memories . indexed		11026824	0					
ANR	11026892	PtrMemberAccess	pspaces -> memories		11026824	0					
ANR	11026893	Identifier	pspaces		11026824	0					
ANR	11026894	Identifier	memories		11026824	1					
ANR	11026895	Identifier	indexed		11026824	1					
ANR	11026896	Identifier	i		11026824	1					
ANR	11026897	IdentifierDeclStatement	const gs_gc_root_t * root = mem -> roots ;	255:8:8754:8791	11026824	1	True				
ANR	11026898	IdentifierDecl	* root = mem -> roots		11026824	0					
ANR	11026899	IdentifierDeclType	const gs_gc_root_t *		11026824	0					
ANR	11026900	Identifier	root		11026824	1					
ANR	11026901	AssignmentExpression	* root = mem -> roots		11026824	2		=			
ANR	11026902	Identifier	root		11026824	0					
ANR	11026903	PtrMemberAccess	mem -> roots		11026824	1					
ANR	11026904	Identifier	mem		11026824	0					
ANR	11026905	Identifier	roots		11026824	1					
ANR	11026906	ForStatement	for ( ; root ; root = root -> next )		11026824	2					
ANR	11026907	Condition	root	257:15:8809:8812	11026824	0	True				
ANR	11026908	Identifier	root		11026824	0					
ANR	11026909	AssignmentExpression	root = root -> next	257:21:8815:8831	11026824	1	True	=			
ANR	11026910	Identifier	root		11026824	0					
ANR	11026911	PtrMemberAccess	root -> next		11026824	1					
ANR	11026912	Identifier	root		11026824	0					
ANR	11026913	Identifier	next		11026824	1					
ANR	11026914	CompoundStatement		16:40:579:579	11026824	2					
ANR	11026915	IfStatement	"if ( gs_object_type ( ( gs_memory_t * ) mem , * root -> p ) == & st_context )"		11026824	0					
ANR	11026916	Condition	"gs_object_type ( ( gs_memory_t * ) mem , * root -> p ) == & st_context"	258:16:8852:8910	11026824	0	True				
ANR	11026917	EqualityExpression	"gs_object_type ( ( gs_memory_t * ) mem , * root -> p ) == & st_context"		11026824	0		==			
ANR	11026918	CallExpression	"gs_object_type ( ( gs_memory_t * ) mem , * root -> p )"		11026824	0					
ANR	11026919	Callee	gs_object_type		11026824	0					
ANR	11026920	Identifier	gs_object_type		11026824	0					
ANR	11026921	ArgumentList	( gs_memory_t * ) mem		11026824	1					
ANR	11026922	Argument	( gs_memory_t * ) mem		11026824	0					
ANR	11026923	CastExpression	( gs_memory_t * ) mem		11026824	0					
ANR	11026924	CastTarget	gs_memory_t *		11026824	0					
ANR	11026925	Identifier	mem		11026824	1					
ANR	11026926	Argument	* root -> p		11026824	1					
ANR	11026927	UnaryOperationExpression	* root -> p		11026824	0					
ANR	11026928	UnaryOperator	*		11026824	0					
ANR	11026929	PtrMemberAccess	root -> p		11026824	1					
ANR	11026930	Identifier	root		11026824	0					
ANR	11026931	Identifier	p		11026824	1					
ANR	11026932	UnaryOperationExpression	& st_context		11026824	1					
ANR	11026933	UnaryOperator	&		11026824	0					
ANR	11026934	Identifier	st_context		11026824	1					
ANR	11026935	CompoundStatement		17:77:658:658	11026824	1					
ANR	11026936	ExpressionStatement	pctx = * root -> p	259:16:8931:8946	11026824	0	True				
ANR	11026937	AssignmentExpression	pctx = * root -> p		11026824	0		=			
ANR	11026938	Identifier	pctx		11026824	0					
ANR	11026939	UnaryOperationExpression	* root -> p		11026824	1					
ANR	11026940	UnaryOperator	*		11026824	0					
ANR	11026941	PtrMemberAccess	root -> p		11026824	1					
ANR	11026942	Identifier	root		11026824	0					
ANR	11026943	Identifier	p		11026824	1					
ANR	11026944	ExpressionStatement	psched = pctx -> scheduler	260:16:8964:8988	11026824	1	True				
ANR	11026945	AssignmentExpression	psched = pctx -> scheduler		11026824	0		=			
ANR	11026946	Identifier	psched		11026824	0					
ANR	11026947	PtrMemberAccess	pctx -> scheduler		11026824	1					
ANR	11026948	Identifier	pctx		11026824	0					
ANR	11026949	Identifier	scheduler		11026824	1					
ANR	11026950	ExpressionStatement	lmem = mem	261:16:9006:9016	11026824	2	True				
ANR	11026951	AssignmentExpression	lmem = mem		11026824	0		=			
ANR	11026952	Identifier	lmem		11026824	0					
ANR	11026953	Identifier	mem		11026824	1					
ANR	11026954	BreakStatement	break ;	262:16:9034:9039	11026824	3	True				
ANR	11026955	IfStatement	if ( ! psched )		11026824	6					
ANR	11026956	Condition	! psched	268:8:9178:9184	11026824	0	True				
ANR	11026957	UnaryOperationExpression	! psched		11026824	0					
ANR	11026958	UnaryOperator	!		11026824	0					
ANR	11026959	Identifier	psched		11026824	1					
ANR	11026960	ReturnStatement	return ;	269:8:9195:9201	11026824	1	True				
ANR	11026961	ExpressionStatement	loc . memory = ( gs_ref_memory_t * ) gs_memory_stable ( ( gs_memory_t * ) lmem )	276:4:9362:9431	11026824	7	True				
ANR	11026962	AssignmentExpression	loc . memory = ( gs_ref_memory_t * ) gs_memory_stable ( ( gs_memory_t * ) lmem )		11026824	0		=			
ANR	11026963	MemberAccess	loc . memory		11026824	0					
ANR	11026964	Identifier	loc		11026824	0					
ANR	11026965	Identifier	memory		11026824	1					
ANR	11026966	CastExpression	( gs_ref_memory_t * ) gs_memory_stable ( ( gs_memory_t * ) lmem )		11026824	1					
ANR	11026967	CastTarget	gs_ref_memory_t *		11026824	0					
ANR	11026968	CallExpression	gs_memory_stable ( ( gs_memory_t * ) lmem )		11026824	1					
ANR	11026969	Callee	gs_memory_stable		11026824	0					
ANR	11026970	Identifier	gs_memory_stable		11026824	0					
ANR	11026971	ArgumentList	( gs_memory_t * ) lmem		11026824	1					
ANR	11026972	Argument	( gs_memory_t * ) lmem		11026824	0					
ANR	11026973	CastExpression	( gs_memory_t * ) lmem		11026824	0					
ANR	11026974	CastTarget	gs_memory_t *		11026824	0					
ANR	11026975	Identifier	lmem		11026824	1					
ANR	11026976	ExpressionStatement	loc . cp = 0	277:4:9437:9447	11026824	8	True				
ANR	11026977	AssignmentExpression	loc . cp = 0		11026824	0		=			
ANR	11026978	MemberAccess	loc . cp		11026824	0					
ANR	11026979	Identifier	loc		11026824	0					
ANR	11026980	Identifier	cp		11026824	1					
ANR	11026981	PrimaryExpression	0		11026824	1					
ANR	11026982	ForStatement	for ( i = 0 ; i < CTX_TABLE_SIZE ; ++ i )		11026824	9					
ANR	11026983	ForInit	i = 0 ;	278:9:9458:9463	11026824	0	True				
ANR	11026984	AssignmentExpression	i = 0		11026824	0		=			
ANR	11026985	Identifier	i		11026824	0					
ANR	11026986	PrimaryExpression	0		11026824	1					
ANR	11026987	Condition	i < CTX_TABLE_SIZE	278:16:9465:9482	11026824	1	True				
ANR	11026988	RelationalExpression	i < CTX_TABLE_SIZE		11026824	0		<			
ANR	11026989	Identifier	i		11026824	0					
ANR	11026990	Identifier	CTX_TABLE_SIZE		11026824	1					
ANR	11026991	UnaryExpression	++ i	278:36:9485:9487	11026824	2	True				
ANR	11026992	IncDec	++		11026824	0					
ANR	11026993	Identifier	i		11026824	1					
ANR	11026994	ForStatement	for ( pctx = psched -> table [ i ] ; pctx ; pctx = pctx -> table_next )		11026824	3					
ANR	11026995	ForInit	pctx = psched -> table [ i ] ;	279:13:9503:9526	11026824	0	True				
ANR	11026996	AssignmentExpression	pctx = psched -> table [ i ]		11026824	0		=			
ANR	11026997	Identifier	pctx		11026824	0					
ANR	11026998	ArrayIndexing	psched -> table [ i ]		11026824	1					
ANR	11026999	PtrMemberAccess	psched -> table		11026824	0					
ANR	11027000	Identifier	psched		11026824	0					
ANR	11027001	Identifier	table		11026824	1					
ANR	11027002	Identifier	i		11026824	1					
ANR	11027003	Condition	pctx	279:38:9528:9531	11026824	1	True				
ANR	11027004	Identifier	pctx		11026824	0					
ANR	11027005	AssignmentExpression	pctx = pctx -> table_next	279:44:9534:9556	11026824	2	True	=			
ANR	11027006	Identifier	pctx		11026824	0					
ANR	11027007	PtrMemberAccess	pctx -> table_next		11026824	1					
ANR	11027008	Identifier	pctx		11026824	0					
ANR	11027009	Identifier	table_next		11026824	1					
ANR	11027010	ExpressionStatement	"pctx -> visible = clump_locate_ptr ( pctx , & loc )"	280:12:9571:9615	11026824	3	True				
ANR	11027011	AssignmentExpression	"pctx -> visible = clump_locate_ptr ( pctx , & loc )"		11026824	0		=			
ANR	11027012	PtrMemberAccess	pctx -> visible		11026824	0					
ANR	11027013	Identifier	pctx		11026824	0					
ANR	11027014	Identifier	visible		11026824	1					
ANR	11027015	CallExpression	"clump_locate_ptr ( pctx , & loc )"		11026824	1					
ANR	11027016	Callee	clump_locate_ptr		11026824	0					
ANR	11027017	Identifier	clump_locate_ptr		11026824	0					
ANR	11027018	ArgumentList	pctx		11026824	1					
ANR	11027019	Argument	pctx		11026824	0					
ANR	11027020	Identifier	pctx		11026824	0					
ANR	11027021	Argument	& loc		11026824	1					
ANR	11027022	UnaryOperationExpression	& loc		11026824	0					
ANR	11027023	UnaryOperator	&		11026824	0					
ANR	11027024	Identifier	loc		11026824	1					
ANR	11027025	IfStatement	if ( ! psched -> current -> visible )		11026824	10					
ANR	11027026	Condition	! psched -> current -> visible	283:8:9639:9663	11026824	0	True				
ANR	11027027	UnaryOperationExpression	! psched -> current -> visible		11026824	0					
ANR	11027028	UnaryOperator	!		11026824	0					
ANR	11027029	PtrMemberAccess	psched -> current -> visible		11026824	1					
ANR	11027030	PtrMemberAccess	psched -> current		11026824	0					
ANR	11027031	Identifier	psched		11026824	0					
ANR	11027032	Identifier	current		11026824	1					
ANR	11027033	Identifier	visible		11026824	1					
ANR	11027034	CompoundStatement		42:35:1411:1411	11026824	1					
ANR	11027035	ExpressionStatement	"lprintf ( ""Current context is invisible!\\n"" )"	284:8:9676:9718	11026824	0	True				
ANR	11027036	CallExpression	"lprintf ( ""Current context is invisible!\\n"" )"		11026824	0					
ANR	11027037	Callee	lprintf		11026824	0					
ANR	11027038	Identifier	lprintf		11026824	0					
ANR	11027039	ArgumentList	"""Current context is invisible!\\n"""		11026824	1					
ANR	11027040	Argument	"""Current context is invisible!\\n"""		11026824	0					
ANR	11027041	PrimaryExpression	"""Current context is invisible!\\n"""		11026824	0					
ANR	11027042	ExpressionStatement	gs_abort ( ( gs_memory_t * ) lmem )	285:8:9728:9757	11026824	1	True				
ANR	11027043	CallExpression	gs_abort ( ( gs_memory_t * ) lmem )		11026824	0					
ANR	11027044	Callee	gs_abort		11026824	0					
ANR	11027045	Identifier	gs_abort		11026824	0					
ANR	11027046	ArgumentList	( gs_memory_t * ) lmem		11026824	1					
ANR	11027047	Argument	( gs_memory_t * ) lmem		11026824	0					
ANR	11027048	CastExpression	( gs_memory_t * ) lmem		11026824	0					
ANR	11027049	CastTarget	gs_memory_t *		11026824	0					
ANR	11027050	Identifier	lmem		11026824	1					
ANR	11027051	ExpressionStatement	"psched -> save_vm_reclaim ( pspaces , global )"	290:4:9821:9861	11026824	11	True				
ANR	11027052	CallExpression	"psched -> save_vm_reclaim ( pspaces , global )"		11026824	0					
ANR	11027053	Callee	psched -> save_vm_reclaim		11026824	0					
ANR	11027054	PtrMemberAccess	psched -> save_vm_reclaim		11026824	0					
ANR	11027055	Identifier	psched		11026824	0					
ANR	11027056	Identifier	save_vm_reclaim		11026824	1					
ANR	11027057	ArgumentList	pspaces		11026824	1					
ANR	11027058	Argument	pspaces		11026824	0					
ANR	11027059	Identifier	pspaces		11026824	0					
ANR	11027060	Argument	global		11026824	1					
ANR	11027061	Identifier	global		11026824	0					
ANR	11027062	ForStatement	for ( i = 0 ; i < CTX_TABLE_SIZE ; ++ i )		11026824	12					
ANR	11027063	ForInit	i = 0 ;	293:9:9916:9921	11026824	0	True				
ANR	11027064	AssignmentExpression	i = 0		11026824	0		=			
ANR	11027065	Identifier	i		11026824	0					
ANR	11027066	PrimaryExpression	0		11026824	1					
ANR	11027067	Condition	i < CTX_TABLE_SIZE	293:16:9923:9940	11026824	1	True				
ANR	11027068	RelationalExpression	i < CTX_TABLE_SIZE		11026824	0		<			
ANR	11027069	Identifier	i		11026824	0					
ANR	11027070	Identifier	CTX_TABLE_SIZE		11026824	1					
ANR	11027071	UnaryExpression	++ i	293:36:9943:9945	11026824	2	True				
ANR	11027072	IncDec	++		11026824	0					
ANR	11027073	Identifier	i		11026824	1					
ANR	11027074	ForStatement	for ( pctx = psched -> table [ i ] ; pctx ; pctx = pctx -> table_next )		11026824	3					
ANR	11027075	ForInit	pctx = psched -> table [ i ] ;	294:13:9961:9984	11026824	0	True				
ANR	11027076	AssignmentExpression	pctx = psched -> table [ i ]		11026824	0		=			
ANR	11027077	Identifier	pctx		11026824	0					
ANR	11027078	ArrayIndexing	psched -> table [ i ]		11026824	1					
ANR	11027079	PtrMemberAccess	psched -> table		11026824	0					
ANR	11027080	Identifier	psched		11026824	0					
ANR	11027081	Identifier	table		11026824	1					
ANR	11027082	Identifier	i		11026824	1					
ANR	11027083	Condition	pctx	294:38:9986:9989	11026824	1	True				
ANR	11027084	Identifier	pctx		11026824	0					
ANR	11027085	AssignmentExpression	pctx = pctx -> table_next	294:44:9992:10014	11026824	2	True	=			
ANR	11027086	Identifier	pctx		11026824	0					
ANR	11027087	PtrMemberAccess	pctx -> table_next		11026824	1					
ANR	11027088	Identifier	pctx		11026824	0					
ANR	11027089	Identifier	table_next		11026824	1					
ANR	11027090	ExpressionStatement	pctx -> visible = true	295:12:10029:10049	11026824	3	True				
ANR	11027091	AssignmentExpression	pctx -> visible = true		11026824	0		=			
ANR	11027092	PtrMemberAccess	pctx -> visible		11026824	0					
ANR	11027093	Identifier	pctx		11026824	0					
ANR	11027094	Identifier	visible		11026824	1					
ANR	11027095	Identifier	true		11026824	1					
ANR	11027096	ReturnType	static void		11026824	1					
ANR	11027097	Identifier	context_reclaim		11026824	2					
ANR	11027098	ParameterList	"vm_spaces * pspaces , bool global"		11026824	3					
ANR	11027099	Parameter	vm_spaces * pspaces	241:16:8220:8238	11026824	0	True				
ANR	11027100	ParameterType	vm_spaces *		11026824	0					
ANR	11027101	Identifier	pspaces		11026824	1					
ANR	11027102	Parameter	bool global	241:37:8241:8251	11026824	1	True				
ANR	11027103	ParameterType	bool		11026824	0					
ANR	11027104	Identifier	global		11026824	1					
ANR	11027105	CFGEntryNode	ENTRY		11026824		True				
ANR	11027106	CFGExitNode	EXIT		11026824		True				
ANR	11027107	Symbol	loc		11026824						
ANR	11027108	Symbol	pctx		11026824						
ANR	11027109	Symbol	gs_object_type		11026824						
ANR	11027110	Symbol	loc . memory		11026824						
ANR	11027111	Symbol	root -> next		11026824						
ANR	11027112	Symbol	root -> p		11026824						
ANR	11027113	Symbol	* * psched		11026824						
ANR	11027114	Symbol	psched -> current		11026824						
ANR	11027115	Symbol	* pspaces		11026824						
ANR	11027116	Symbol	global		11026824						
ANR	11027117	Symbol	* pspaces -> memories		11026824						
ANR	11027118	Symbol	pspaces -> memories		11026824						
ANR	11027119	Symbol	* pctx		11026824						
ANR	11027120	Symbol	pctx -> table_next		11026824						
ANR	11027121	Symbol	* pspaces -> memories . indexed		11026824						
ANR	11027122	Symbol	mem -> roots		11026824						
ANR	11027123	Symbol	pspaces		11026824						
ANR	11027124	Symbol	* * root		11026824						
ANR	11027125	Symbol	* * pspaces		11026824						
ANR	11027126	Symbol	CTX_TABLE_SIZE		11026824						
ANR	11027127	Symbol	mem		11026824						
ANR	11027128	Symbol	root		11026824						
ANR	11027129	Symbol	lmem		11026824						
ANR	11027130	Symbol	pctx -> scheduler		11026824						
ANR	11027131	Symbol	& loc		11026824						
ANR	11027132	Symbol	* root -> p		11026824						
ANR	11027133	Symbol	loc . cp		11026824						
ANR	11027134	Symbol	psched		11026824						
ANR	11027135	Symbol	* psched		11026824						
ANR	11027136	Symbol	i		11026824						
ANR	11027137	Symbol	psched -> table		11026824						
ANR	11027138	Symbol	gs_memory_stable		11026824						
ANR	11027139	Symbol	psched -> current -> visible		11026824						
ANR	11027140	Symbol	* psched -> table		11026824						
ANR	11027141	Symbol	clump_locate_ptr		11026824						
ANR	11027142	Symbol	& st_context		11026824						
ANR	11027143	Symbol	countof		11026824						
ANR	11027144	Symbol	* i		11026824						
ANR	11027145	Symbol	pspaces -> memories . indexed		11026824						
ANR	11027146	Symbol	* psched -> current		11026824						
ANR	11027147	Symbol	true		11026824						
ANR	11027148	Symbol	* root		11026824						
ANR	11027149	Symbol	pctx -> visible		11026824						
ANR	11027150	Symbol	* mem		11026824						
ANR	11027151	DeclStmt									
ANR	11027152	Decl							int	"int ( gs_scheduler_t * , gs_context_t * * , const gs_dual_memory_t * , const gs_context_state_t * , bool )"	context_create
ANR	11027153	DeclStmt									
ANR	11027154	Decl							long	long ( void )	context_usertime
ANR	11027155	DeclStmt									
ANR	11027156	Decl							int	"int ( const gs_scheduler_t * , os_ptr , gs_context_t * * )"	context_param
ANR	11027157	DeclStmt									
ANR	11027158	Decl							void	void ( gs_context_t * )	context_destroy
ANR	11027159	DeclStmt									
ANR	11027160	Decl							void	"void ( ref_stack_t * , const ref_stack_t * , uint , uint )"	stack_copy
ANR	11027161	DeclStmt									
ANR	11027162	Decl							int	"int ( os_ptr , gs_context_t * )"	lock_acquire
ANR	11027163	DeclStmt									
ANR	11027164	Decl							int	int ( ref * )	lock_release
ANR	11027165	Function	context_load	310:0:10591:10844							
ANR	11027166	FunctionDef	"context_load (gs_scheduler_t * psched , gs_context_t * pctx)"		11027165	0					
ANR	11027167	CompoundStatement		312:0:10660:10844	11027165	0					
ANR	11027168	ExpressionStatement	"if_debug1 ( '""' , ""[\\""]loading %ld\\n"" , pctx -> index )"	313:4:10666:10714	11027165	0	True				
ANR	11027169	CallExpression	"if_debug1 ( '""' , ""[\\""]loading %ld\\n"" , pctx -> index )"		11027165	0					
ANR	11027170	Callee	if_debug1		11027165	0					
ANR	11027171	Identifier	if_debug1		11027165	0					
ANR	11027172	ArgumentList	"'""'"		11027165	1					
ANR	11027173	Argument	"'""'"		11027165	0					
ANR	11027174	PrimaryExpression	"'""'"		11027165	0					
ANR	11027175	Argument	"""[\\""]loading %ld\\n"""		11027165	1					
ANR	11027176	PrimaryExpression	"""[\\""]loading %ld\\n"""		11027165	0					
ANR	11027177	Argument	pctx -> index		11027165	2					
ANR	11027178	PtrMemberAccess	pctx -> index		11027165	0					
ANR	11027179	Identifier	pctx		11027165	0					
ANR	11027180	Identifier	index		11027165	1					
ANR	11027181	IfStatement	if ( pctx -> state . keep_usertime )		11027165	1					
ANR	11027182	Condition	pctx -> state . keep_usertime	314:9:10725:10749	11027165	0	True				
ANR	11027183	MemberAccess	pctx -> state . keep_usertime		11027165	0					
ANR	11027184	PtrMemberAccess	pctx -> state		11027165	0					
ANR	11027185	Identifier	pctx		11027165	0					
ANR	11027186	Identifier	state		11027165	1					
ANR	11027187	Identifier	keep_usertime		11027165	1					
ANR	11027188	ExpressionStatement	psched -> usertime_initial = context_usertime ( )	315:6:10759:10804	11027165	1	True				
ANR	11027189	AssignmentExpression	psched -> usertime_initial = context_usertime ( )		11027165	0		=			
ANR	11027190	PtrMemberAccess	psched -> usertime_initial		11027165	0					
ANR	11027191	Identifier	psched		11027165	0					
ANR	11027192	Identifier	usertime_initial		11027165	1					
ANR	11027193	CallExpression	context_usertime ( )		11027165	1					
ANR	11027194	Callee	context_usertime		11027165	0					
ANR	11027195	Identifier	context_usertime		11027165	0					
ANR	11027196	ArgumentList			11027165	1					
ANR	11027197	ExpressionStatement	context_state_load ( & pctx -> state )	316:4:10810:10842	11027165	2	True				
ANR	11027198	CallExpression	context_state_load ( & pctx -> state )		11027165	0					
ANR	11027199	Callee	context_state_load		11027165	0					
ANR	11027200	Identifier	context_state_load		11027165	0					
ANR	11027201	ArgumentList	& pctx -> state		11027165	1					
ANR	11027202	Argument	& pctx -> state		11027165	0					
ANR	11027203	UnaryOperationExpression	& pctx -> state		11027165	0					
ANR	11027204	UnaryOperator	&		11027165	0					
ANR	11027205	PtrMemberAccess	pctx -> state		11027165	1					
ANR	11027206	Identifier	pctx		11027165	0					
ANR	11027207	Identifier	state		11027165	1					
ANR	11027208	ReturnType	static void		11027165	1					
ANR	11027209	Identifier	context_load		11027165	2					
ANR	11027210	ParameterList	"gs_scheduler_t * psched , gs_context_t * pctx"		11027165	3					
ANR	11027211	Parameter	gs_scheduler_t * psched	311:13:10616:10637	11027165	0	True				
ANR	11027212	ParameterType	gs_scheduler_t *		11027165	0					
ANR	11027213	Identifier	psched		11027165	1					
ANR	11027214	Parameter	gs_context_t * pctx	311:37:10640:10657	11027165	1	True				
ANR	11027215	ParameterType	gs_context_t *		11027165	0					
ANR	11027216	Identifier	pctx		11027165	1					
ANR	11027217	CFGEntryNode	ENTRY		11027165		True				
ANR	11027218	CFGExitNode	EXIT		11027165		True				
ANR	11027219	Symbol	context_usertime		11027165						
ANR	11027220	Symbol	pctx		11027165						
ANR	11027221	Symbol	pctx -> index		11027165						
ANR	11027222	Symbol	pctx -> state		11027165						
ANR	11027223	Symbol	psched		11027165						
ANR	11027224	Symbol	* psched		11027165						
ANR	11027225	Symbol	& pctx -> state		11027165						
ANR	11027226	Symbol	pctx -> state . keep_usertime		11027165						
ANR	11027227	Symbol	psched -> usertime_initial		11027165						
ANR	11027228	Symbol	* pctx		11027165						
ANR	11027229	Function	context_store	318:0:10846:11139							
ANR	11027230	FunctionDef	"context_store (gs_scheduler_t * psched , gs_context_t * pctx)"		11027229	0					
ANR	11027231	CompoundStatement		320:0:10916:11139	11027229	0					
ANR	11027232	ExpressionStatement	"if_debug1 ( '""' , ""[\\""]storing %ld\\n"" , pctx -> index )"	321:4:10922:10970	11027229	0	True				
ANR	11027233	CallExpression	"if_debug1 ( '""' , ""[\\""]storing %ld\\n"" , pctx -> index )"		11027229	0					
ANR	11027234	Callee	if_debug1		11027229	0					
ANR	11027235	Identifier	if_debug1		11027229	0					
ANR	11027236	ArgumentList	"'""'"		11027229	1					
ANR	11027237	Argument	"'""'"		11027229	0					
ANR	11027238	PrimaryExpression	"'""'"		11027229	0					
ANR	11027239	Argument	"""[\\""]storing %ld\\n"""		11027229	1					
ANR	11027240	PrimaryExpression	"""[\\""]storing %ld\\n"""		11027229	0					
ANR	11027241	Argument	pctx -> index		11027229	2					
ANR	11027242	PtrMemberAccess	pctx -> index		11027229	0					
ANR	11027243	Identifier	pctx		11027229	0					
ANR	11027244	Identifier	index		11027229	1					
ANR	11027245	ExpressionStatement	context_state_store ( & pctx -> state )	322:4:10976:11009	11027229	1	True				
ANR	11027246	CallExpression	context_state_store ( & pctx -> state )		11027229	0					
ANR	11027247	Callee	context_state_store		11027229	0					
ANR	11027248	Identifier	context_state_store		11027229	0					
ANR	11027249	ArgumentList	& pctx -> state		11027229	1					
ANR	11027250	Argument	& pctx -> state		11027229	0					
ANR	11027251	UnaryOperationExpression	& pctx -> state		11027229	0					
ANR	11027252	UnaryOperator	&		11027229	0					
ANR	11027253	PtrMemberAccess	pctx -> state		11027229	1					
ANR	11027254	Identifier	pctx		11027229	0					
ANR	11027255	Identifier	state		11027229	1					
ANR	11027256	IfStatement	if ( pctx -> state . keep_usertime )		11027229	2					
ANR	11027257	Condition	pctx -> state . keep_usertime	323:9:11020:11044	11027229	0	True				
ANR	11027258	MemberAccess	pctx -> state . keep_usertime		11027229	0					
ANR	11027259	PtrMemberAccess	pctx -> state		11027229	0					
ANR	11027260	Identifier	pctx		11027229	0					
ANR	11027261	Identifier	state		11027229	1					
ANR	11027262	Identifier	keep_usertime		11027229	1					
ANR	11027263	ExpressionStatement	pctx -> state . usertime_total += context_usertime ( ) - psched -> usertime_initial	324:6:11054:11137	11027229	1	True				
ANR	11027264	AssignmentExpression	pctx -> state . usertime_total += context_usertime ( ) - psched -> usertime_initial		11027229	0		+=			
ANR	11027265	MemberAccess	pctx -> state . usertime_total		11027229	0					
ANR	11027266	PtrMemberAccess	pctx -> state		11027229	0					
ANR	11027267	Identifier	pctx		11027229	0					
ANR	11027268	Identifier	state		11027229	1					
ANR	11027269	Identifier	usertime_total		11027229	1					
ANR	11027270	AdditiveExpression	context_usertime ( ) - psched -> usertime_initial		11027229	1		-			
ANR	11027271	CallExpression	context_usertime ( )		11027229	0					
ANR	11027272	Callee	context_usertime		11027229	0					
ANR	11027273	Identifier	context_usertime		11027229	0					
ANR	11027274	ArgumentList			11027229	1					
ANR	11027275	PtrMemberAccess	psched -> usertime_initial		11027229	1					
ANR	11027276	Identifier	psched		11027229	0					
ANR	11027277	Identifier	usertime_initial		11027229	1					
ANR	11027278	ReturnType	static void		11027229	1					
ANR	11027279	Identifier	context_store		11027229	2					
ANR	11027280	ParameterList	"gs_scheduler_t * psched , gs_context_t * pctx"		11027229	3					
ANR	11027281	Parameter	gs_scheduler_t * psched	319:14:10872:10893	11027229	0	True				
ANR	11027282	ParameterType	gs_scheduler_t *		11027229	0					
ANR	11027283	Identifier	psched		11027229	1					
ANR	11027284	Parameter	gs_context_t * pctx	319:38:10896:10913	11027229	1	True				
ANR	11027285	ParameterType	gs_context_t *		11027229	0					
ANR	11027286	Identifier	pctx		11027229	1					
ANR	11027287	CFGEntryNode	ENTRY		11027229		True				
ANR	11027288	CFGExitNode	EXIT		11027229		True				
ANR	11027289	Symbol	context_usertime		11027229						
ANR	11027290	Symbol	pctx		11027229						
ANR	11027291	Symbol	pctx -> index		11027229						
ANR	11027292	Symbol	pctx -> state		11027229						
ANR	11027293	Symbol	pctx -> state . usertime_total		11027229						
ANR	11027294	Symbol	psched		11027229						
ANR	11027295	Symbol	* psched		11027229						
ANR	11027296	Symbol	& pctx -> state		11027229						
ANR	11027297	Symbol	pctx -> state . keep_usertime		11027229						
ANR	11027298	Symbol	psched -> usertime_initial		11027229						
ANR	11027299	Symbol	* pctx		11027229						
ANR	11027300	Function	add_last	329:0:11166:11612							
ANR	11027301	FunctionDef	"add_last (const gs_scheduler_t * psched , ctx_list_t * pl , gs_context_t * pc)"		11027300	0					
ANR	11027302	CompoundStatement		331:0:11251:11612	11027300	0					
ANR	11027303	ExpressionStatement	pc -> next_index = 0	332:4:11257:11275	11027300	0	True				
ANR	11027304	AssignmentExpression	pc -> next_index = 0		11027300	0		=			
ANR	11027305	PtrMemberAccess	pc -> next_index		11027300	0					
ANR	11027306	Identifier	pc		11027300	0					
ANR	11027307	Identifier	next_index		11027300	1					
ANR	11027308	PrimaryExpression	0		11027300	1					
ANR	11027309	IfStatement	if ( pl -> head_index == 0 )		11027300	1					
ANR	11027310	Condition	pl -> head_index == 0	333:8:11285:11303	11027300	0	True				
ANR	11027311	EqualityExpression	pl -> head_index == 0		11027300	0		==			
ANR	11027312	PtrMemberAccess	pl -> head_index		11027300	0					
ANR	11027313	Identifier	pl		11027300	0					
ANR	11027314	Identifier	head_index		11027300	1					
ANR	11027315	PrimaryExpression	0		11027300	1					
ANR	11027316	ExpressionStatement	pl -> head_index = pc -> index	334:8:11314:11340	11027300	1	True				
ANR	11027317	AssignmentExpression	pl -> head_index = pc -> index		11027300	0		=			
ANR	11027318	PtrMemberAccess	pl -> head_index		11027300	0					
ANR	11027319	Identifier	pl		11027300	0					
ANR	11027320	Identifier	head_index		11027300	1					
ANR	11027321	PtrMemberAccess	pc -> index		11027300	1					
ANR	11027322	Identifier	pc		11027300	0					
ANR	11027323	Identifier	index		11027300	1					
ANR	11027324	ElseStatement	else		11027300	0					
ANR	11027325	CompoundStatement		6:8:109:168	11027300	0					
ANR	11027326	IdentifierDeclStatement	"gs_context_t * ready = index_context ( psched , pl -> tail_index ) ;"	336:8:11361:11420	11027300	0	True				
ANR	11027327	IdentifierDecl	"* ready = index_context ( psched , pl -> tail_index )"		11027300	0					
ANR	11027328	IdentifierDeclType	gs_context_t *		11027300	0					
ANR	11027329	Identifier	ready		11027300	1					
ANR	11027330	AssignmentExpression	"* ready = index_context ( psched , pl -> tail_index )"		11027300	2		=			
ANR	11027331	Identifier	ready		11027300	0					
ANR	11027332	CallExpression	"index_context ( psched , pl -> tail_index )"		11027300	1					
ANR	11027333	Callee	index_context		11027300	0					
ANR	11027334	Identifier	index_context		11027300	0					
ANR	11027335	ArgumentList	psched		11027300	1					
ANR	11027336	Argument	psched		11027300	0					
ANR	11027337	Identifier	psched		11027300	0					
ANR	11027338	Argument	pl -> tail_index		11027300	1					
ANR	11027339	PtrMemberAccess	pl -> tail_index		11027300	0					
ANR	11027340	Identifier	pl		11027300	0					
ANR	11027341	Identifier	tail_index		11027300	1					
ANR	11027342	IfStatement	if ( ready )		11027300	1					
ANR	11027343	Condition	ready	337:12:11434:11438	11027300	0	True				
ANR	11027344	Identifier	ready		11027300	0					
ANR	11027345	ExpressionStatement	ready -> next_index = pc -> index	338:12:11453:11482	11027300	1	True				
ANR	11027346	AssignmentExpression	ready -> next_index = pc -> index		11027300	0		=			
ANR	11027347	PtrMemberAccess	ready -> next_index		11027300	0					
ANR	11027348	Identifier	ready		11027300	0					
ANR	11027349	Identifier	next_index		11027300	1					
ANR	11027350	PtrMemberAccess	pc -> index		11027300	1					
ANR	11027351	Identifier	pc		11027300	0					
ANR	11027352	Identifier	index		11027300	1					
ANR	11027353	ExpressionStatement	pl -> tail_index = pc -> index	341:4:11584:11610	11027300	2	True				
ANR	11027354	AssignmentExpression	pl -> tail_index = pc -> index		11027300	0		=			
ANR	11027355	PtrMemberAccess	pl -> tail_index		11027300	0					
ANR	11027356	Identifier	pl		11027300	0					
ANR	11027357	Identifier	tail_index		11027300	1					
ANR	11027358	PtrMemberAccess	pc -> index		11027300	1					
ANR	11027359	Identifier	pc		11027300	0					
ANR	11027360	Identifier	index		11027300	1					
ANR	11027361	ReturnType	static void		11027300	1					
ANR	11027362	Identifier	add_last		11027300	2					
ANR	11027363	ParameterList	"const gs_scheduler_t * psched , ctx_list_t * pl , gs_context_t * pc"		11027300	3					
ANR	11027364	Parameter	const gs_scheduler_t * psched	330:9:11187:11214	11027300	0	True				
ANR	11027365	ParameterType	const gs_scheduler_t *		11027300	0					
ANR	11027366	Identifier	psched		11027300	1					
ANR	11027367	Parameter	ctx_list_t * pl	330:39:11217:11230	11027300	1	True				
ANR	11027368	ParameterType	ctx_list_t *		11027300	0					
ANR	11027369	Identifier	pl		11027300	1					
ANR	11027370	Parameter	gs_context_t * pc	330:55:11233:11248	11027300	2	True				
ANR	11027371	ParameterType	gs_context_t *		11027300	0					
ANR	11027372	Identifier	pc		11027300	1					
ANR	11027373	CFGEntryNode	ENTRY		11027300		True				
ANR	11027374	CFGExitNode	EXIT		11027300		True				
ANR	11027375	Symbol	pc -> index		11027300						
ANR	11027376	Symbol	* pl		11027300						
ANR	11027377	Symbol	psched		11027300						
ANR	11027378	Symbol	pc -> next_index		11027300						
ANR	11027379	Symbol	pl -> tail_index		11027300						
ANR	11027380	Symbol	ready -> next_index		11027300						
ANR	11027381	Symbol	pl -> head_index		11027300						
ANR	11027382	Symbol	pc		11027300						
ANR	11027383	Symbol	ready		11027300						
ANR	11027384	Symbol	* pc		11027300						
ANR	11027385	Symbol	* ready		11027300						
ANR	11027386	Symbol	pl		11027300						
ANR	11027387	Symbol	index_context		11027300						
ANR	11027388	DeclStmt									
ANR	11027389	Decl							int	int ( i_ctx_t * * )	ctx_initialize
ANR	11027390	DeclStmt									
ANR	11027391	Decl							int	int ( i_ctx_t * * )	ctx_reschedule
ANR	11027392	DeclStmt									
ANR	11027393	Decl							int	int ( i_ctx_t * * )	ctx_time_slice
ANR	11027394	Function	zcontext_init	349:0:11768:12024							
ANR	11027395	FunctionDef	zcontext_init (i_ctx_t * i_ctx_p)		11027394	0					
ANR	11027396	CompoundStatement		351:0:11811:12024	11027394	0					
ANR	11027397	ExpressionStatement	i_ctx_p -> reschedule_proc = ctx_initialize	353:4:11885:11926	11027394	0	True				
ANR	11027398	AssignmentExpression	i_ctx_p -> reschedule_proc = ctx_initialize		11027394	0		=			
ANR	11027399	PtrMemberAccess	i_ctx_p -> reschedule_proc		11027394	0					
ANR	11027400	Identifier	i_ctx_p		11027394	0					
ANR	11027401	Identifier	reschedule_proc		11027394	1					
ANR	11027402	Identifier	ctx_initialize		11027394	1					
ANR	11027403	ExpressionStatement	i_ctx_p -> time_slice_proc = ctx_initialize	354:4:11932:11973	11027394	1	True				
ANR	11027404	AssignmentExpression	i_ctx_p -> time_slice_proc = ctx_initialize		11027394	0		=			
ANR	11027405	PtrMemberAccess	i_ctx_p -> time_slice_proc		11027394	0					
ANR	11027406	Identifier	i_ctx_p		11027394	0					
ANR	11027407	Identifier	time_slice_proc		11027394	1					
ANR	11027408	Identifier	ctx_initialize		11027394	1					
ANR	11027409	ExpressionStatement	i_ctx_p -> time_slice_ticks = 0	355:4:11979:12008	11027394	2	True				
ANR	11027410	AssignmentExpression	i_ctx_p -> time_slice_ticks = 0		11027394	0		=			
ANR	11027411	PtrMemberAccess	i_ctx_p -> time_slice_ticks		11027394	0					
ANR	11027412	Identifier	i_ctx_p		11027394	0					
ANR	11027413	Identifier	time_slice_ticks		11027394	1					
ANR	11027414	PrimaryExpression	0		11027394	1					
ANR	11027415	ReturnStatement	return 0 ;	356:4:12014:12022	11027394	3	True				
ANR	11027416	PrimaryExpression	0		11027394	0					
ANR	11027417	ReturnType	static int		11027394	1					
ANR	11027418	Identifier	zcontext_init		11027394	2					
ANR	11027419	ParameterList	i_ctx_t * i_ctx_p		11027394	3					
ANR	11027420	Parameter	i_ctx_t * i_ctx_p	350:14:11793:11808	11027394	0	True				
ANR	11027421	ParameterType	i_ctx_t *		11027394	0					
ANR	11027422	Identifier	i_ctx_p		11027394	1					
ANR	11027423	CFGEntryNode	ENTRY		11027394		True				
ANR	11027424	CFGExitNode	EXIT		11027394		True				
ANR	11027425	Symbol	i_ctx_p -> time_slice_ticks		11027394						
ANR	11027426	Symbol	i_ctx_p -> reschedule_proc		11027394						
ANR	11027427	Symbol	i_ctx_p -> time_slice_proc		11027394						
ANR	11027428	Symbol	i_ctx_p		11027394						
ANR	11027429	Symbol	* i_ctx_p		11027394						
ANR	11027430	Symbol	ctx_initialize		11027394						
ANR	11027431	Function	ctx_initialize	362:0:12144:13469							
ANR	11027432	FunctionDef	ctx_initialize (i_ctx_t * * pi_ctx_p)		11027431	0					
ANR	11027433	CompoundStatement		364:0:12190:13469	11027431	0					
ANR	11027434	IdentifierDeclStatement	int interval = reschedule_interval ;	365:4:12196:12230	11027431	0	True				
ANR	11027435	IdentifierDecl	interval = reschedule_interval		11027431	0					
ANR	11027436	IdentifierDeclType	int		11027431	0					
ANR	11027437	Identifier	interval		11027431	1					
ANR	11027438	AssignmentExpression	interval = reschedule_interval		11027431	2		=			
ANR	11027439	Identifier	reschedule_interval		11027431	0					
ANR	11027440	Identifier	reschedule_interval		11027431	1					
ANR	11027441	IdentifierDeclStatement	i_ctx_t * i_ctx_p = * pi_ctx_p ;	366:4:12236:12264	11027431	1	True				
ANR	11027442	IdentifierDecl	* i_ctx_p = * pi_ctx_p		11027431	0					
ANR	11027443	IdentifierDeclType	i_ctx_t *		11027431	0					
ANR	11027444	Identifier	i_ctx_p		11027431	1					
ANR	11027445	AssignmentExpression	* i_ctx_p = * pi_ctx_p		11027431	2		=			
ANR	11027446	Identifier	i_ctx_p		11027431	0					
ANR	11027447	UnaryOperationExpression	* pi_ctx_p		11027431	1					
ANR	11027448	UnaryOperator	*		11027431	0					
ANR	11027449	Identifier	pi_ctx_p		11027431	1					
ANR	11027450	IdentifierDeclStatement	gs_ref_memory_t * imem = iimemory_system ;	367:4:12291:12330	11027431	2	True				
ANR	11027451	IdentifierDecl	* imem = iimemory_system		11027431	0					
ANR	11027452	IdentifierDeclType	gs_ref_memory_t *		11027431	0					
ANR	11027453	Identifier	imem		11027431	1					
ANR	11027454	AssignmentExpression	* imem = iimemory_system		11027431	2		=			
ANR	11027455	Identifier	iimemory_system		11027431	0					
ANR	11027456	Identifier	iimemory_system		11027431	1					
ANR	11027457	IdentifierDeclStatement	"gs_scheduler_t * psched = gs_alloc_struct_immovable ( ( gs_memory_t * ) imem , gs_scheduler_t , & st_scheduler , ""gs_scheduler"" ) ;"	368:4:12336:12497	11027431	3	True				
ANR	11027458	IdentifierDecl	"* psched = gs_alloc_struct_immovable ( ( gs_memory_t * ) imem , gs_scheduler_t , & st_scheduler , ""gs_scheduler"" )"		11027431	0					
ANR	11027459	IdentifierDeclType	gs_scheduler_t *		11027431	0					
ANR	11027460	Identifier	psched		11027431	1					
ANR	11027461	AssignmentExpression	"* psched = gs_alloc_struct_immovable ( ( gs_memory_t * ) imem , gs_scheduler_t , & st_scheduler , ""gs_scheduler"" )"		11027431	2		=			
ANR	11027462	Identifier	psched		11027431	0					
ANR	11027463	CallExpression	"gs_alloc_struct_immovable ( ( gs_memory_t * ) imem , gs_scheduler_t , & st_scheduler , ""gs_scheduler"" )"		11027431	1					
ANR	11027464	Callee	gs_alloc_struct_immovable		11027431	0					
ANR	11027465	Identifier	gs_alloc_struct_immovable		11027431	0					
ANR	11027466	ArgumentList	( gs_memory_t * ) imem		11027431	1					
ANR	11027467	Argument	( gs_memory_t * ) imem		11027431	0					
ANR	11027468	CastExpression	( gs_memory_t * ) imem		11027431	0					
ANR	11027469	CastTarget	gs_memory_t *		11027431	0					
ANR	11027470	Identifier	imem		11027431	1					
ANR	11027471	Argument	gs_scheduler_t		11027431	1					
ANR	11027472	Identifier	gs_scheduler_t		11027431	0					
ANR	11027473	Argument	& st_scheduler		11027431	2					
ANR	11027474	UnaryOperationExpression	& st_scheduler		11027431	0					
ANR	11027475	UnaryOperator	&		11027431	0					
ANR	11027476	Identifier	st_scheduler		11027431	1					
ANR	11027477	Argument	"""gs_scheduler"""		11027431	3					
ANR	11027478	PrimaryExpression	"""gs_scheduler"""		11027431	0					
ANR	11027479	IfStatement	if ( psched == NULL )		11027431	4					
ANR	11027480	Condition	psched == NULL	371:8:12507:12520	11027431	0	True				
ANR	11027481	EqualityExpression	psched == NULL		11027431	0		==			
ANR	11027482	Identifier	psched		11027431	0					
ANR	11027483	Identifier	NULL		11027431	1					
ANR	11027484	ExpressionStatement	return_error ( gs_error_VMerror )	372:8:12531:12561	11027431	1	True				
ANR	11027485	CallExpression	return_error ( gs_error_VMerror )		11027431	0					
ANR	11027486	Callee	return_error		11027431	0					
ANR	11027487	Identifier	return_error		11027431	0					
ANR	11027488	ArgumentList	gs_error_VMerror		11027431	1					
ANR	11027489	Argument	gs_error_VMerror		11027431	0					
ANR	11027490	Identifier	gs_error_VMerror		11027431	0					
ANR	11027491	ExpressionStatement	psched -> current = 0	374:4:12568:12587	11027431	5	True				
ANR	11027492	AssignmentExpression	psched -> current = 0		11027431	0		=			
ANR	11027493	PtrMemberAccess	psched -> current		11027431	0					
ANR	11027494	Identifier	psched		11027431	0					
ANR	11027495	Identifier	current		11027431	1					
ANR	11027496	PrimaryExpression	0		11027431	1					
ANR	11027497	ExpressionStatement	psched -> active . head_index = psched -> active . tail_index = 0	375:4:12593:12650	11027431	6	True				
ANR	11027498	AssignmentExpression	psched -> active . head_index = psched -> active . tail_index = 0		11027431	0		=			
ANR	11027499	MemberAccess	psched -> active . head_index		11027431	0					
ANR	11027500	PtrMemberAccess	psched -> active		11027431	0					
ANR	11027501	Identifier	psched		11027431	0					
ANR	11027502	Identifier	active		11027431	1					
ANR	11027503	Identifier	head_index		11027431	1					
ANR	11027504	AssignmentExpression	psched -> active . tail_index = 0		11027431	1		=			
ANR	11027505	MemberAccess	psched -> active . tail_index		11027431	0					
ANR	11027506	PtrMemberAccess	psched -> active		11027431	0					
ANR	11027507	Identifier	psched		11027431	0					
ANR	11027508	Identifier	active		11027431	1					
ANR	11027509	Identifier	tail_index		11027431	1					
ANR	11027510	PrimaryExpression	0		11027431	1					
ANR	11027511	ExpressionStatement	psched -> save_vm_reclaim = i_ctx_p -> memory . spaces . vm_reclaim	376:4:12656:12715	11027431	7	True				
ANR	11027512	AssignmentExpression	psched -> save_vm_reclaim = i_ctx_p -> memory . spaces . vm_reclaim		11027431	0		=			
ANR	11027513	PtrMemberAccess	psched -> save_vm_reclaim		11027431	0					
ANR	11027514	Identifier	psched		11027431	0					
ANR	11027515	Identifier	save_vm_reclaim		11027431	1					
ANR	11027516	MemberAccess	i_ctx_p -> memory . spaces . vm_reclaim		11027431	1					
ANR	11027517	MemberAccess	i_ctx_p -> memory . spaces		11027431	0					
ANR	11027518	PtrMemberAccess	i_ctx_p -> memory		11027431	0					
ANR	11027519	Identifier	i_ctx_p		11027431	0					
ANR	11027520	Identifier	memory		11027431	1					
ANR	11027521	Identifier	spaces		11027431	1					
ANR	11027522	Identifier	vm_reclaim		11027431	1					
ANR	11027523	ExpressionStatement	i_ctx_p -> memory . spaces . vm_reclaim = context_reclaim	377:4:12721:12772	11027431	8	True				
ANR	11027524	AssignmentExpression	i_ctx_p -> memory . spaces . vm_reclaim = context_reclaim		11027431	0		=			
ANR	11027525	MemberAccess	i_ctx_p -> memory . spaces . vm_reclaim		11027431	0					
ANR	11027526	MemberAccess	i_ctx_p -> memory . spaces		11027431	0					
ANR	11027527	PtrMemberAccess	i_ctx_p -> memory		11027431	0					
ANR	11027528	Identifier	i_ctx_p		11027431	0					
ANR	11027529	Identifier	memory		11027431	1					
ANR	11027530	Identifier	spaces		11027431	1					
ANR	11027531	Identifier	vm_reclaim		11027431	1					
ANR	11027532	Identifier	context_reclaim		11027431	1					
ANR	11027533	ExpressionStatement	psched -> dead_index = 0	378:4:12778:12800	11027431	9	True				
ANR	11027534	AssignmentExpression	psched -> dead_index = 0		11027431	0		=			
ANR	11027535	PtrMemberAccess	psched -> dead_index		11027431	0					
ANR	11027536	Identifier	psched		11027431	0					
ANR	11027537	Identifier	dead_index		11027431	1					
ANR	11027538	PrimaryExpression	0		11027431	1					
ANR	11027539	ExpressionStatement	"memset ( psched -> table , 0 , sizeof ( psched -> table ) )"	379:4:12806:12853	11027431	10	True				
ANR	11027540	CallExpression	"memset ( psched -> table , 0 , sizeof ( psched -> table ) )"		11027431	0					
ANR	11027541	Callee	memset		11027431	0					
ANR	11027542	Identifier	memset		11027431	0					
ANR	11027543	ArgumentList	psched -> table		11027431	1					
ANR	11027544	Argument	psched -> table		11027431	0					
ANR	11027545	PtrMemberAccess	psched -> table		11027431	0					
ANR	11027546	Identifier	psched		11027431	0					
ANR	11027547	Identifier	table		11027431	1					
ANR	11027548	Argument	0		11027431	1					
ANR	11027549	PrimaryExpression	0		11027431	0					
ANR	11027550	Argument	sizeof ( psched -> table )		11027431	2					
ANR	11027551	SizeofExpression	sizeof ( psched -> table )		11027431	0					
ANR	11027552	Sizeof	sizeof		11027431	0					
ANR	11027553	PtrMemberAccess	psched -> table		11027431	1					
ANR	11027554	Identifier	psched		11027431	0					
ANR	11027555	Identifier	table		11027431	1					
ANR	11027556	IfStatement	"if ( context_create ( psched , & psched -> current , & gs_imemory , * pi_ctx_p , true ) < 0 )"		11027431	11					
ANR	11027557	Condition	"context_create ( psched , & psched -> current , & gs_imemory , * pi_ctx_p , true ) < 0"	381:8:12900:12973	11027431	0	True				
ANR	11027558	RelationalExpression	"context_create ( psched , & psched -> current , & gs_imemory , * pi_ctx_p , true ) < 0"		11027431	0		<			
ANR	11027559	CallExpression	"context_create ( psched , & psched -> current , & gs_imemory , * pi_ctx_p , true )"		11027431	0					
ANR	11027560	Callee	context_create		11027431	0					
ANR	11027561	Identifier	context_create		11027431	0					
ANR	11027562	ArgumentList	psched		11027431	1					
ANR	11027563	Argument	psched		11027431	0					
ANR	11027564	Identifier	psched		11027431	0					
ANR	11027565	Argument	& psched -> current		11027431	1					
ANR	11027566	UnaryOperationExpression	& psched -> current		11027431	0					
ANR	11027567	UnaryOperator	&		11027431	0					
ANR	11027568	PtrMemberAccess	psched -> current		11027431	1					
ANR	11027569	Identifier	psched		11027431	0					
ANR	11027570	Identifier	current		11027431	1					
ANR	11027571	Argument	& gs_imemory		11027431	2					
ANR	11027572	UnaryOperationExpression	& gs_imemory		11027431	0					
ANR	11027573	UnaryOperator	&		11027431	0					
ANR	11027574	Identifier	gs_imemory		11027431	1					
ANR	11027575	Argument	* pi_ctx_p		11027431	3					
ANR	11027576	UnaryOperationExpression	* pi_ctx_p		11027431	0					
ANR	11027577	UnaryOperator	*		11027431	0					
ANR	11027578	Identifier	pi_ctx_p		11027431	1					
ANR	11027579	Argument	true		11027431	4					
ANR	11027580	Identifier	true		11027431	0					
ANR	11027581	PrimaryExpression	0		11027431	1					
ANR	11027582	CompoundStatement		18:84:785:785	11027431	1					
ANR	11027583	ExpressionStatement	"lprintf ( ""Can't create initial context!"" )"	382:8:12986:13026	11027431	0	True				
ANR	11027584	CallExpression	"lprintf ( ""Can't create initial context!"" )"		11027431	0					
ANR	11027585	Callee	lprintf		11027431	0					
ANR	11027586	Identifier	lprintf		11027431	0					
ANR	11027587	ArgumentList	"""Can't create initial context!"""		11027431	1					
ANR	11027588	Argument	"""Can't create initial context!"""		11027431	0					
ANR	11027589	PrimaryExpression	"""Can't create initial context!"""		11027431	0					
ANR	11027590	ExpressionStatement	gs_abort ( imemory )	383:8:13036:13053	11027431	1	True				
ANR	11027591	CallExpression	gs_abort ( imemory )		11027431	0					
ANR	11027592	Callee	gs_abort		11027431	0					
ANR	11027593	Identifier	gs_abort		11027431	0					
ANR	11027594	ArgumentList	imemory		11027431	1					
ANR	11027595	Argument	imemory		11027431	0					
ANR	11027596	Identifier	imemory		11027431	0					
ANR	11027597	ExpressionStatement	psched -> current -> scheduler = psched	385:4:13065:13100	11027431	12	True				
ANR	11027598	AssignmentExpression	psched -> current -> scheduler = psched		11027431	0		=			
ANR	11027599	PtrMemberAccess	psched -> current -> scheduler		11027431	0					
ANR	11027600	PtrMemberAccess	psched -> current		11027431	0					
ANR	11027601	Identifier	psched		11027431	0					
ANR	11027602	Identifier	current		11027431	1					
ANR	11027603	Identifier	scheduler		11027431	1					
ANR	11027604	Identifier	psched		11027431	1					
ANR	11027605	ExpressionStatement	* pi_ctx_p = & psched -> current -> state	387:4:13143:13178	11027431	13	True				
ANR	11027606	AssignmentExpression	* pi_ctx_p = & psched -> current -> state		11027431	0		=			
ANR	11027607	UnaryOperationExpression	* pi_ctx_p		11027431	0					
ANR	11027608	UnaryOperator	*		11027431	0					
ANR	11027609	Identifier	pi_ctx_p		11027431	1					
ANR	11027610	UnaryOperationExpression	& psched -> current -> state		11027431	1					
ANR	11027611	UnaryOperator	&		11027431	0					
ANR	11027612	PtrMemberAccess	psched -> current -> state		11027431	1					
ANR	11027613	PtrMemberAccess	psched -> current		11027431	0					
ANR	11027614	Identifier	psched		11027431	0					
ANR	11027615	Identifier	current		11027431	1					
ANR	11027616	Identifier	state		11027431	1					
ANR	11027617	IfStatement	if ( interval < minimum_reschedule_interval )		11027431	14					
ANR	11027618	Condition	interval < minimum_reschedule_interval	389:8:13189:13226	11027431	0	True				
ANR	11027619	RelationalExpression	interval < minimum_reschedule_interval		11027431	0		<			
ANR	11027620	Identifier	interval		11027431	0					
ANR	11027621	Identifier	minimum_reschedule_interval		11027431	1					
ANR	11027622	ExpressionStatement	interval = minimum_reschedule_interval	390:8:13237:13275	11027431	1	True				
ANR	11027623	AssignmentExpression	interval = minimum_reschedule_interval		11027431	0		=			
ANR	11027624	Identifier	interval		11027431	0					
ANR	11027625	Identifier	minimum_reschedule_interval		11027431	1					
ANR	11027626	ExpressionStatement	psched -> current -> state . reschedule_proc = ctx_reschedule	391:4:13281:13336	11027431	15	True				
ANR	11027627	AssignmentExpression	psched -> current -> state . reschedule_proc = ctx_reschedule		11027431	0		=			
ANR	11027628	MemberAccess	psched -> current -> state . reschedule_proc		11027431	0					
ANR	11027629	PtrMemberAccess	psched -> current -> state		11027431	0					
ANR	11027630	PtrMemberAccess	psched -> current		11027431	0					
ANR	11027631	Identifier	psched		11027431	0					
ANR	11027632	Identifier	current		11027431	1					
ANR	11027633	Identifier	state		11027431	1					
ANR	11027634	Identifier	reschedule_proc		11027431	1					
ANR	11027635	Identifier	ctx_reschedule		11027431	1					
ANR	11027636	ExpressionStatement	psched -> current -> state . time_slice_proc = ctx_time_slice	392:4:13342:13397	11027431	16	True				
ANR	11027637	AssignmentExpression	psched -> current -> state . time_slice_proc = ctx_time_slice		11027431	0		=			
ANR	11027638	MemberAccess	psched -> current -> state . time_slice_proc		11027431	0					
ANR	11027639	PtrMemberAccess	psched -> current -> state		11027431	0					
ANR	11027640	PtrMemberAccess	psched -> current		11027431	0					
ANR	11027641	Identifier	psched		11027431	0					
ANR	11027642	Identifier	current		11027431	1					
ANR	11027643	Identifier	state		11027431	1					
ANR	11027644	Identifier	time_slice_proc		11027431	1					
ANR	11027645	Identifier	ctx_time_slice		11027431	1					
ANR	11027646	ExpressionStatement	psched -> current -> state . time_slice_ticks = interval	393:4:13403:13453	11027431	17	True				
ANR	11027647	AssignmentExpression	psched -> current -> state . time_slice_ticks = interval		11027431	0		=			
ANR	11027648	MemberAccess	psched -> current -> state . time_slice_ticks		11027431	0					
ANR	11027649	PtrMemberAccess	psched -> current -> state		11027431	0					
ANR	11027650	PtrMemberAccess	psched -> current		11027431	0					
ANR	11027651	Identifier	psched		11027431	0					
ANR	11027652	Identifier	current		11027431	1					
ANR	11027653	Identifier	state		11027431	1					
ANR	11027654	Identifier	time_slice_ticks		11027431	1					
ANR	11027655	Identifier	interval		11027431	1					
ANR	11027656	ReturnStatement	return 0 ;	394:4:13459:13467	11027431	18	True				
ANR	11027657	PrimaryExpression	0		11027431	0					
ANR	11027658	ReturnType	static int		11027431	1					
ANR	11027659	Identifier	ctx_initialize		11027431	2					
ANR	11027660	ParameterList	i_ctx_t * * pi_ctx_p		11027431	3					
ANR	11027661	Parameter	i_ctx_t * * pi_ctx_p	363:15:12170:12187	11027431	0	True				
ANR	11027662	ParameterType	i_ctx_t * *		11027431	0					
ANR	11027663	Identifier	pi_ctx_p		11027431	1					
ANR	11027664	CFGEntryNode	ENTRY		11027431		True				
ANR	11027665	CFGExitNode	EXIT		11027431		True				
ANR	11027666	Symbol	ctx_reschedule		11027431						
ANR	11027667	Symbol	psched -> active . tail_index		11027431						
ANR	11027668	Symbol	psched -> dead_index		11027431						
ANR	11027669	Symbol	ctx_time_slice		11027431						
ANR	11027670	Symbol	& psched -> current		11027431						
ANR	11027671	Symbol	psched -> current		11027431						
ANR	11027672	Symbol	* * psched		11027431						
ANR	11027673	Symbol	gs_alloc_struct_immovable		11027431						
ANR	11027674	Symbol	iimemory_system		11027431						
ANR	11027675	Symbol	psched -> current -> state . reschedule_proc		11027431						
ANR	11027676	Symbol	psched -> current -> state . time_slice_proc		11027431						
ANR	11027677	Symbol	minimum_reschedule_interval		11027431						
ANR	11027678	Symbol	psched -> save_vm_reclaim		11027431						
ANR	11027679	Symbol	psched -> active . head_index		11027431						
ANR	11027680	Symbol	context_reclaim		11027431						
ANR	11027681	Symbol	psched -> current -> state . time_slice_ticks		11027431						
ANR	11027682	Symbol	reschedule_interval		11027431						
ANR	11027683	Symbol	* i_ctx_p		11027431						
ANR	11027684	Symbol	* pi_ctx_p		11027431						
ANR	11027685	Symbol	imemory		11027431						
ANR	11027686	Symbol	psched -> current -> state		11027431						
ANR	11027687	Symbol	gs_scheduler_t		11027431						
ANR	11027688	Symbol	NULL		11027431						
ANR	11027689	Symbol	pi_ctx_p		11027431						
ANR	11027690	Symbol	psched		11027431						
ANR	11027691	Symbol	* psched		11027431						
ANR	11027692	Symbol	i_ctx_p -> memory		11027431						
ANR	11027693	Symbol	psched -> table		11027431						
ANR	11027694	Symbol	i_ctx_p -> memory . spaces		11027431						
ANR	11027695	Symbol	& gs_imemory		11027431						
ANR	11027696	Symbol	& st_scheduler		11027431						
ANR	11027697	Symbol	gs_error_VMerror		11027431						
ANR	11027698	Symbol	& psched -> current -> state		11027431						
ANR	11027699	Symbol	i_ctx_p -> memory . spaces . vm_reclaim		11027431						
ANR	11027700	Symbol	i_ctx_p		11027431						
ANR	11027701	Symbol	true		11027431						
ANR	11027702	Symbol	* psched -> current		11027431						
ANR	11027703	Symbol	interval		11027431						
ANR	11027704	Symbol	context_create		11027431						
ANR	11027705	Symbol	imem		11027431						
ANR	11027706	Symbol	psched -> active		11027431						
ANR	11027707	Symbol	psched -> current -> scheduler		11027431						
ANR	11027708	Function	ctx_reschedule	402:0:13737:16545							
ANR	11027709	FunctionDef	ctx_reschedule (i_ctx_t * * pi_ctx_p)		11027708	0					
ANR	11027710	CompoundStatement		404:0:13783:16545	11027708	0					
ANR	11027711	IdentifierDeclStatement	gs_context_t * current = ( gs_context_t * ) * pi_ctx_p ;	405:4:13789:13838	11027708	0	True				
ANR	11027712	IdentifierDecl	* current = ( gs_context_t * ) * pi_ctx_p		11027708	0					
ANR	11027713	IdentifierDeclType	gs_context_t *		11027708	0					
ANR	11027714	Identifier	current		11027708	1					
ANR	11027715	AssignmentExpression	* current = ( gs_context_t * ) * pi_ctx_p		11027708	2		=			
ANR	11027716	Identifier	current		11027708	0					
ANR	11027717	CastExpression	( gs_context_t * ) * pi_ctx_p		11027708	1					
ANR	11027718	CastTarget	gs_context_t *		11027708	0					
ANR	11027719	UnaryOperationExpression	* pi_ctx_p		11027708	1					
ANR	11027720	UnaryOperator	*		11027708	0					
ANR	11027721	Identifier	pi_ctx_p		11027708	1					
ANR	11027722	IdentifierDeclStatement	gs_scheduler_t * psched = current -> scheduler ;	406:4:13844:13887	11027708	1	True				
ANR	11027723	IdentifierDecl	* psched = current -> scheduler		11027708	0					
ANR	11027724	IdentifierDeclType	gs_scheduler_t *		11027708	0					
ANR	11027725	Identifier	psched		11027708	1					
ANR	11027726	AssignmentExpression	* psched = current -> scheduler		11027708	2		=			
ANR	11027727	Identifier	psched		11027708	0					
ANR	11027728	PtrMemberAccess	current -> scheduler		11027708	1					
ANR	11027729	Identifier	current		11027708	0					
ANR	11027730	Identifier	scheduler		11027708	1					
ANR	11027731	IfStatement	if ( * pi_ctx_p != & current -> state )		11027708	2					
ANR	11027732	Condition	* pi_ctx_p != & current -> state	409:8:13911:13938	11027708	0	True				
ANR	11027733	EqualityExpression	* pi_ctx_p != & current -> state		11027708	0		!=			
ANR	11027734	UnaryOperationExpression	* pi_ctx_p		11027708	0					
ANR	11027735	UnaryOperator	*		11027708	0					
ANR	11027736	Identifier	pi_ctx_p		11027708	1					
ANR	11027737	UnaryOperationExpression	& current -> state		11027708	1					
ANR	11027738	UnaryOperator	&		11027708	0					
ANR	11027739	PtrMemberAccess	current -> state		11027708	1					
ANR	11027740	Identifier	current		11027708	0					
ANR	11027741	Identifier	state		11027708	1					
ANR	11027742	CompoundStatement		6:38:157:157	11027708	1					
ANR	11027743	ExpressionStatement	"lprintf2 ( ""current->state = 0x%lx, != i_ctx_p = 0x%lx!\\n"" , ( ulong ) & current -> state , ( ulong ) * pi_ctx_p )"	410:8:13951:14067	11027708	0	True				
ANR	11027744	CallExpression	"lprintf2 ( ""current->state = 0x%lx, != i_ctx_p = 0x%lx!\\n"" , ( ulong ) & current -> state , ( ulong ) * pi_ctx_p )"		11027708	0					
ANR	11027745	Callee	lprintf2		11027708	0					
ANR	11027746	Identifier	lprintf2		11027708	0					
ANR	11027747	ArgumentList	"""current->state = 0x%lx, != i_ctx_p = 0x%lx!\\n"""		11027708	1					
ANR	11027748	Argument	"""current->state = 0x%lx, != i_ctx_p = 0x%lx!\\n"""		11027708	0					
ANR	11027749	PrimaryExpression	"""current->state = 0x%lx, != i_ctx_p = 0x%lx!\\n"""		11027708	0					
ANR	11027750	Argument	( ulong ) & current -> state		11027708	1					
ANR	11027751	CastExpression	( ulong ) & current -> state		11027708	0					
ANR	11027752	CastTarget	ulong		11027708	0					
ANR	11027753	UnaryOperationExpression	& current -> state		11027708	1					
ANR	11027754	UnaryOperator	&		11027708	0					
ANR	11027755	PtrMemberAccess	current -> state		11027708	1					
ANR	11027756	Identifier	current		11027708	0					
ANR	11027757	Identifier	state		11027708	1					
ANR	11027758	Argument	( ulong ) * pi_ctx_p		11027708	2					
ANR	11027759	CastExpression	( ulong ) * pi_ctx_p		11027708	0					
ANR	11027760	CastTarget	ulong		11027708	0					
ANR	11027761	UnaryOperationExpression	* pi_ctx_p		11027708	1					
ANR	11027762	UnaryOperator	*		11027708	0					
ANR	11027763	Identifier	pi_ctx_p		11027708	1					
ANR	11027764	WhileStatement	while ( psched -> dead_index != 0 )		11027708	3					
ANR	11027765	Condition	psched -> dead_index != 0	416:11:14191:14213	11027708	0	True				
ANR	11027766	EqualityExpression	psched -> dead_index != 0		11027708	0		!=			
ANR	11027767	PtrMemberAccess	psched -> dead_index		11027708	0					
ANR	11027768	Identifier	psched		11027708	0					
ANR	11027769	Identifier	dead_index		11027708	1					
ANR	11027770	PrimaryExpression	0		11027708	1					
ANR	11027771	CompoundStatement		15:8:514:529	11027708	1					
ANR	11027772	IdentifierDeclStatement	"gs_context_t * dead = index_context ( psched , psched -> dead_index ) ;"	417:8:14226:14288	11027708	0	True				
ANR	11027773	IdentifierDecl	"* dead = index_context ( psched , psched -> dead_index )"		11027708	0					
ANR	11027774	IdentifierDeclType	gs_context_t *		11027708	0					
ANR	11027775	Identifier	dead		11027708	1					
ANR	11027776	AssignmentExpression	"* dead = index_context ( psched , psched -> dead_index )"		11027708	2		=			
ANR	11027777	Identifier	dead		11027708	0					
ANR	11027778	CallExpression	"index_context ( psched , psched -> dead_index )"		11027708	1					
ANR	11027779	Callee	index_context		11027708	0					
ANR	11027780	Identifier	index_context		11027708	0					
ANR	11027781	ArgumentList	psched		11027708	1					
ANR	11027782	Argument	psched		11027708	0					
ANR	11027783	Identifier	psched		11027708	0					
ANR	11027784	Argument	psched -> dead_index		11027708	1					
ANR	11027785	PtrMemberAccess	psched -> dead_index		11027708	0					
ANR	11027786	Identifier	psched		11027708	0					
ANR	11027787	Identifier	dead_index		11027708	1					
ANR	11027788	IdentifierDeclStatement	long next_index ;	418:8:14298:14313	11027708	1	True				
ANR	11027789	IdentifierDecl	next_index		11027708	0					
ANR	11027790	IdentifierDeclType	long		11027708	0					
ANR	11027791	Identifier	next_index		11027708	1					
ANR	11027792	IfStatement	if ( dead )		11027708	2					
ANR	11027793	Condition	dead	420:12:14328:14331	11027708	0	True				
ANR	11027794	Identifier	dead		11027708	0					
ANR	11027795	CompoundStatement		17:18:550:550	11027708	1					
ANR	11027796	ExpressionStatement	next_index = dead -> next_index	421:12:14348:14377	11027708	0	True				
ANR	11027797	AssignmentExpression	next_index = dead -> next_index		11027708	0		=			
ANR	11027798	Identifier	next_index		11027708	0					
ANR	11027799	PtrMemberAccess	dead -> next_index		11027708	1					
ANR	11027800	Identifier	dead		11027708	0					
ANR	11027801	Identifier	next_index		11027708	1					
ANR	11027802	IfStatement	if ( current == dead )		11027708	1					
ANR	11027803	Condition	current == dead	423:16:14396:14410	11027708	0	True				
ANR	11027804	EqualityExpression	current == dead		11027708	0		==			
ANR	11027805	Identifier	current		11027708	0					
ANR	11027806	Identifier	dead		11027708	1					
ANR	11027807	CompoundStatement		20:33:629:629	11027708	1					
ANR	11027808	ExpressionStatement	"if_debug1 ( '""' , ""[\\""]storing dead %ld\\n"" , current -> index )"	424:16:14431:14487	11027708	0	True				
ANR	11027809	CallExpression	"if_debug1 ( '""' , ""[\\""]storing dead %ld\\n"" , current -> index )"		11027708	0					
ANR	11027810	Callee	if_debug1		11027708	0					
ANR	11027811	Identifier	if_debug1		11027708	0					
ANR	11027812	ArgumentList	"'""'"		11027708	1					
ANR	11027813	Argument	"'""'"		11027708	0					
ANR	11027814	PrimaryExpression	"'""'"		11027708	0					
ANR	11027815	Argument	"""[\\""]storing dead %ld\\n"""		11027708	1					
ANR	11027816	PrimaryExpression	"""[\\""]storing dead %ld\\n"""		11027708	0					
ANR	11027817	Argument	current -> index		11027708	2					
ANR	11027818	PtrMemberAccess	current -> index		11027708	0					
ANR	11027819	Identifier	current		11027708	0					
ANR	11027820	Identifier	index		11027708	1					
ANR	11027821	ExpressionStatement	context_state_store ( & current -> state )	425:16:14505:14541	11027708	1	True				
ANR	11027822	CallExpression	context_state_store ( & current -> state )		11027708	0					
ANR	11027823	Callee	context_state_store		11027708	0					
ANR	11027824	Identifier	context_state_store		11027708	0					
ANR	11027825	ArgumentList	& current -> state		11027708	1					
ANR	11027826	Argument	& current -> state		11027708	0					
ANR	11027827	UnaryOperationExpression	& current -> state		11027708	0					
ANR	11027828	UnaryOperator	&		11027708	0					
ANR	11027829	PtrMemberAccess	current -> state		11027708	1					
ANR	11027830	Identifier	current		11027708	0					
ANR	11027831	Identifier	state		11027708	1					
ANR	11027832	ExpressionStatement	current = 0	426:16:14559:14570	11027708	2	True				
ANR	11027833	AssignmentExpression	current = 0		11027708	0		=			
ANR	11027834	Identifier	current		11027708	0					
ANR	11027835	PrimaryExpression	0		11027708	1					
ANR	11027836	ExpressionStatement	context_destroy ( dead )	428:12:14598:14619	11027708	2	True				
ANR	11027837	CallExpression	context_destroy ( dead )		11027708	0					
ANR	11027838	Callee	context_destroy		11027708	0					
ANR	11027839	Identifier	context_destroy		11027708	0					
ANR	11027840	ArgumentList	dead		11027708	1					
ANR	11027841	Argument	dead		11027708	0					
ANR	11027842	Identifier	dead		11027708	0					
ANR	11027843	ExpressionStatement	psched -> dead_index = next_index	429:12:14633:14664	11027708	3	True				
ANR	11027844	AssignmentExpression	psched -> dead_index = next_index		11027708	0		=			
ANR	11027845	PtrMemberAccess	psched -> dead_index		11027708	0					
ANR	11027846	Identifier	psched		11027708	0					
ANR	11027847	Identifier	dead_index		11027708	1					
ANR	11027848	Identifier	next_index		11027708	1					
ANR	11027849	IfStatement	if ( current != 0 )		11027708	4					
ANR	11027850	Condition	current != 0	433:8:14753:14764	11027708	0	True				
ANR	11027851	EqualityExpression	current != 0		11027708	0		!=			
ANR	11027852	Identifier	current		11027708	0					
ANR	11027853	PrimaryExpression	0		11027708	1					
ANR	11027854	ExpressionStatement	current -> saved_local_vm = current -> state . memory . space_local -> saved != 0	434:8:14775:14858	11027708	1	True				
ANR	11027855	AssignmentExpression	current -> saved_local_vm = current -> state . memory . space_local -> saved != 0		11027708	0		=			
ANR	11027856	PtrMemberAccess	current -> saved_local_vm		11027708	0					
ANR	11027857	Identifier	current		11027708	0					
ANR	11027858	Identifier	saved_local_vm		11027708	1					
ANR	11027859	EqualityExpression	current -> state . memory . space_local -> saved != 0		11027708	1		!=			
ANR	11027860	PtrMemberAccess	current -> state . memory . space_local -> saved		11027708	0					
ANR	11027861	MemberAccess	current -> state . memory . space_local		11027708	0					
ANR	11027862	MemberAccess	current -> state . memory		11027708	0					
ANR	11027863	PtrMemberAccess	current -> state		11027708	0					
ANR	11027864	Identifier	current		11027708	0					
ANR	11027865	Identifier	state		11027708	1					
ANR	11027866	Identifier	memory		11027708	1					
ANR	11027867	Identifier	space_local		11027708	1					
ANR	11027868	Identifier	saved		11027708	1					
ANR	11027869	PrimaryExpression	0		11027708	1					
ANR	11027870	CompoundStatement		36:8:1198:1217	11027708	5					
ANR	11027871	IdentifierDeclStatement	gs_context_t * prev = 0 ;	438:8:14950:14972	11027708	0	True				
ANR	11027872	IdentifierDecl	* prev = 0		11027708	0					
ANR	11027873	IdentifierDeclType	gs_context_t *		11027708	0					
ANR	11027874	Identifier	prev		11027708	1					
ANR	11027875	AssignmentExpression	* prev = 0		11027708	2		=			
ANR	11027876	Identifier	prev		11027708	0					
ANR	11027877	PrimaryExpression	0		11027708	1					
ANR	11027878	IdentifierDeclStatement	gs_context_t * ready ;	439:8:14982:15001	11027708	1	True				
ANR	11027879	IdentifierDecl	* ready		11027708	0					
ANR	11027880	IdentifierDeclType	gs_context_t *		11027708	0					
ANR	11027881	Identifier	ready		11027708	1					
ANR	11027882	ForStatement	"for ( ready = index_context ( psched , psched -> active . head_index ) ; ; prev = ready , ready = index_context ( psched , ready -> next_index ) )"		11027708	2					
ANR	11027883	ForInit	"ready = index_context ( psched , psched -> active . head_index ) ;"	441:13:15017:15073	11027708	0	True				
ANR	11027884	AssignmentExpression	"ready = index_context ( psched , psched -> active . head_index )"		11027708	0		=			
ANR	11027885	Identifier	ready		11027708	0					
ANR	11027886	CallExpression	"index_context ( psched , psched -> active . head_index )"		11027708	1					
ANR	11027887	Callee	index_context		11027708	0					
ANR	11027888	Identifier	index_context		11027708	0					
ANR	11027889	ArgumentList	psched		11027708	1					
ANR	11027890	Argument	psched		11027708	0					
ANR	11027891	Identifier	psched		11027708	0					
ANR	11027892	Argument	psched -> active . head_index		11027708	1					
ANR	11027893	MemberAccess	psched -> active . head_index		11027708	0					
ANR	11027894	PtrMemberAccess	psched -> active		11027708	0					
ANR	11027895	Identifier	psched		11027708	0					
ANR	11027896	Identifier	active		11027708	1					
ANR	11027897	Identifier	head_index		11027708	1					
ANR	11027898	Expression	"prev = ready , ready = index_context ( psched , ready -> next_index )"	442:13:15089:15150	11027708	1	True				
ANR	11027899	AssignmentExpression	prev = ready		11027708	0		=			
ANR	11027900	Identifier	prev		11027708	0					
ANR	11027901	Identifier	ready		11027708	1					
ANR	11027902	AssignmentExpression	"ready = index_context ( psched , ready -> next_index )"		11027708	1		=			
ANR	11027903	Identifier	ready		11027708	0					
ANR	11027904	CallExpression	"index_context ( psched , ready -> next_index )"		11027708	1					
ANR	11027905	Callee	index_context		11027708	0					
ANR	11027906	Identifier	index_context		11027708	0					
ANR	11027907	ArgumentList	psched		11027708	1					
ANR	11027908	Argument	psched		11027708	0					
ANR	11027909	Identifier	psched		11027708	0					
ANR	11027910	Argument	ready -> next_index		11027708	1					
ANR	11027911	PtrMemberAccess	ready -> next_index		11027708	0					
ANR	11027912	Identifier	ready		11027708	0					
ANR	11027913	Identifier	next_index		11027708	1					
ANR	11027914	CompoundStatement		40:14:1382:1382	11027708	2					
ANR	11027915	IfStatement	if ( ready == 0 )		11027708	0					
ANR	11027916	Condition	ready == 0	444:16:15184:15193	11027708	0	True				
ANR	11027917	EqualityExpression	ready == 0		11027708	0		==			
ANR	11027918	Identifier	ready		11027708	0					
ANR	11027919	PrimaryExpression	0		11027708	1					
ANR	11027920	CompoundStatement		41:28:1412:1412	11027708	1					
ANR	11027921	IfStatement	if ( current != 0 )		11027708	0					
ANR	11027922	Condition	current != 0	445:20:15218:15229	11027708	0	True				
ANR	11027923	EqualityExpression	current != 0		11027708	0		!=			
ANR	11027924	Identifier	current		11027708	0					
ANR	11027925	PrimaryExpression	0		11027708	1					
ANR	11027926	ExpressionStatement	"context_store ( psched , current )"	446:20:15252:15282	11027708	1	True				
ANR	11027927	CallExpression	"context_store ( psched , current )"		11027708	0					
ANR	11027928	Callee	context_store		11027708	0					
ANR	11027929	Identifier	context_store		11027708	0					
ANR	11027930	ArgumentList	psched		11027708	1					
ANR	11027931	Argument	psched		11027708	0					
ANR	11027932	Identifier	psched		11027708	0					
ANR	11027933	Argument	current		11027708	1					
ANR	11027934	Identifier	current		11027708	0					
ANR	11027935	ExpressionStatement	"lprintf ( ""No context to run!"" )"	447:16:15300:15329	11027708	1	True				
ANR	11027936	CallExpression	"lprintf ( ""No context to run!"" )"		11027708	0					
ANR	11027937	Callee	lprintf		11027708	0					
ANR	11027938	Identifier	lprintf		11027708	0					
ANR	11027939	ArgumentList	"""No context to run!"""		11027708	1					
ANR	11027940	Argument	"""No context to run!"""		11027708	0					
ANR	11027941	PrimaryExpression	"""No context to run!"""		11027708	0					
ANR	11027942	ExpressionStatement	return_error ( gs_error_Fatal )	448:16:15347:15375	11027708	2	True				
ANR	11027943	CallExpression	return_error ( gs_error_Fatal )		11027708	0					
ANR	11027944	Callee	return_error		11027708	0					
ANR	11027945	Identifier	return_error		11027708	0					
ANR	11027946	ArgumentList	gs_error_Fatal		11027708	1					
ANR	11027947	Argument	gs_error_Fatal		11027708	0					
ANR	11027948	Identifier	gs_error_Fatal		11027708	0					
ANR	11027949	IfStatement	if ( ready -> state . memory . space_local -> saved != 0 && ! ready -> saved_local_vm )		11027708	1					
ANR	11027950	Condition	ready -> state . memory . space_local -> saved != 0 && ! ready -> saved_local_vm	451:16:15477:15561	11027708	0	True				
ANR	11027951	AndExpression	ready -> state . memory . space_local -> saved != 0 && ! ready -> saved_local_vm		11027708	0		&&			
ANR	11027952	EqualityExpression	ready -> state . memory . space_local -> saved != 0		11027708	0		!=			
ANR	11027953	PtrMemberAccess	ready -> state . memory . space_local -> saved		11027708	0					
ANR	11027954	MemberAccess	ready -> state . memory . space_local		11027708	0					
ANR	11027955	MemberAccess	ready -> state . memory		11027708	0					
ANR	11027956	PtrMemberAccess	ready -> state		11027708	0					
ANR	11027957	Identifier	ready		11027708	0					
ANR	11027958	Identifier	state		11027708	1					
ANR	11027959	Identifier	memory		11027708	1					
ANR	11027960	Identifier	space_local		11027708	1					
ANR	11027961	Identifier	saved		11027708	1					
ANR	11027962	PrimaryExpression	0		11027708	1					
ANR	11027963	UnaryOperationExpression	! ready -> saved_local_vm		11027708	1					
ANR	11027964	UnaryOperator	!		11027708	0					
ANR	11027965	PtrMemberAccess	ready -> saved_local_vm		11027708	1					
ANR	11027966	Identifier	ready		11027708	0					
ANR	11027967	Identifier	saved_local_vm		11027708	1					
ANR	11027968	ContinueStatement	continue ;	454:16:15597:15605	11027708	1	True				
ANR	11027969	CompoundStatement		54:16:1895:1937	11027708	2					
ANR	11027970	IdentifierDeclStatement	ctx_index_t next_index = ready -> next_index ;	457:16:15679:15721	11027708	0	True				
ANR	11027971	IdentifierDecl	next_index = ready -> next_index		11027708	0					
ANR	11027972	IdentifierDeclType	ctx_index_t		11027708	0					
ANR	11027973	Identifier	next_index		11027708	1					
ANR	11027974	AssignmentExpression	next_index = ready -> next_index		11027708	2		=			
ANR	11027975	Identifier	next_index		11027708	0					
ANR	11027976	PtrMemberAccess	ready -> next_index		11027708	1					
ANR	11027977	Identifier	ready		11027708	0					
ANR	11027978	Identifier	next_index		11027708	1					
ANR	11027979	IfStatement	if ( prev )		11027708	1					
ANR	11027980	Condition	prev	459:20:15744:15747	11027708	0	True				
ANR	11027981	Identifier	prev		11027708	0					
ANR	11027982	ExpressionStatement	prev -> next_index = next_index	460:20:15770:15799	11027708	1	True				
ANR	11027983	AssignmentExpression	prev -> next_index = next_index		11027708	0		=			
ANR	11027984	PtrMemberAccess	prev -> next_index		11027708	0					
ANR	11027985	Identifier	prev		11027708	0					
ANR	11027986	Identifier	next_index		11027708	1					
ANR	11027987	Identifier	next_index		11027708	1					
ANR	11027988	ElseStatement	else		11027708	0					
ANR	11027989	ExpressionStatement	psched -> active . head_index = next_index	462:20:15842:15880	11027708	0	True				
ANR	11027990	AssignmentExpression	psched -> active . head_index = next_index		11027708	0		=			
ANR	11027991	MemberAccess	psched -> active . head_index		11027708	0					
ANR	11027992	PtrMemberAccess	psched -> active		11027708	0					
ANR	11027993	Identifier	psched		11027708	0					
ANR	11027994	Identifier	active		11027708	1					
ANR	11027995	Identifier	head_index		11027708	1					
ANR	11027996	Identifier	next_index		11027708	1					
ANR	11027997	IfStatement	if ( ! next_index )		11027708	2					
ANR	11027998	Condition	! next_index	463:20:15902:15912	11027708	0	True				
ANR	11027999	UnaryOperationExpression	! next_index		11027708	0					
ANR	11028000	UnaryOperator	!		11027708	0					
ANR	11028001	Identifier	next_index		11027708	1					
ANR	11028002	ExpressionStatement	psched -> active . tail_index = ( prev ? prev -> index : 0 )	464:20:15935:15987	11027708	1	True				
ANR	11028003	AssignmentExpression	psched -> active . tail_index = ( prev ? prev -> index : 0 )		11027708	0		=			
ANR	11028004	MemberAccess	psched -> active . tail_index		11027708	0					
ANR	11028005	PtrMemberAccess	psched -> active		11027708	0					
ANR	11028006	Identifier	psched		11027708	0					
ANR	11028007	Identifier	active		11027708	1					
ANR	11028008	Identifier	tail_index		11027708	1					
ANR	11028009	ConditionalExpression	prev ? prev -> index : 0		11027708	1					
ANR	11028010	Condition	prev		11027708	0					
ANR	11028011	Identifier	prev		11027708	0					
ANR	11028012	PtrMemberAccess	prev -> index		11027708	1					
ANR	11028013	Identifier	prev		11027708	0					
ANR	11028014	Identifier	index		11027708	1					
ANR	11028015	PrimaryExpression	0		11027708	2					
ANR	11028016	BreakStatement	break ;	466:12:16015:16020	11027708	3	True				
ANR	11028017	IfStatement	if ( ready == current )		11027708	3					
ANR	11028018	Condition	ready == current	468:12:16044:16059	11027708	0	True				
ANR	11028019	EqualityExpression	ready == current		11027708	0		==			
ANR	11028020	Identifier	ready		11027708	0					
ANR	11028021	Identifier	current		11027708	1					
ANR	11028022	ReturnStatement	return 0 ;	469:12:16074:16082	11027708	1	True				
ANR	11028023	PrimaryExpression	0		11027708	0					
ANR	11028024	IfStatement	if ( current != 0 )		11027708	4					
ANR	11028025	Condition	current != 0	474:12:16243:16254	11027708	0	True				
ANR	11028026	EqualityExpression	current != 0		11027708	0		!=			
ANR	11028027	Identifier	current		11027708	0					
ANR	11028028	PrimaryExpression	0		11027708	1					
ANR	11028029	ExpressionStatement	"context_store ( psched , current )"	475:12:16269:16299	11027708	1	True				
ANR	11028030	CallExpression	"context_store ( psched , current )"		11027708	0					
ANR	11028031	Callee	context_store		11027708	0					
ANR	11028032	Identifier	context_store		11027708	0					
ANR	11028033	ArgumentList	psched		11027708	1					
ANR	11028034	Argument	psched		11027708	0					
ANR	11028035	Identifier	psched		11027708	0					
ANR	11028036	Argument	current		11027708	1					
ANR	11028037	Identifier	current		11027708	0					
ANR	11028038	ExpressionStatement	psched -> current = ready	476:8:16309:16332	11027708	5	True				
ANR	11028039	AssignmentExpression	psched -> current = ready		11027708	0		=			
ANR	11028040	PtrMemberAccess	psched -> current		11027708	0					
ANR	11028041	Identifier	psched		11027708	0					
ANR	11028042	Identifier	current		11027708	1					
ANR	11028043	Identifier	ready		11027708	1					
ANR	11028044	ExpressionStatement	"context_load ( psched , ready )"	478:8:16399:16426	11027708	6	True				
ANR	11028045	CallExpression	"context_load ( psched , ready )"		11027708	0					
ANR	11028046	Callee	context_load		11027708	0					
ANR	11028047	Identifier	context_load		11027708	0					
ANR	11028048	ArgumentList	psched		11027708	1					
ANR	11028049	Argument	psched		11027708	0					
ANR	11028050	Identifier	psched		11027708	0					
ANR	11028051	Argument	ready		11027708	1					
ANR	11028052	Identifier	ready		11027708	0					
ANR	11028053	ExpressionStatement	* pi_ctx_p = & ready -> state	480:8:16498:16523	11027708	7	True				
ANR	11028054	AssignmentExpression	* pi_ctx_p = & ready -> state		11027708	0		=			
ANR	11028055	UnaryOperationExpression	* pi_ctx_p		11027708	0					
ANR	11028056	UnaryOperator	*		11027708	0					
ANR	11028057	Identifier	pi_ctx_p		11027708	1					
ANR	11028058	UnaryOperationExpression	& ready -> state		11027708	1					
ANR	11028059	UnaryOperator	&		11027708	0					
ANR	11028060	PtrMemberAccess	ready -> state		11027708	1					
ANR	11028061	Identifier	ready		11027708	0					
ANR	11028062	Identifier	state		11027708	1					
ANR	11028063	ReturnStatement	return 0 ;	482:4:16535:16543	11027708	6	True				
ANR	11028064	PrimaryExpression	0		11027708	0					
ANR	11028065	ReturnType	static int		11027708	1					
ANR	11028066	Identifier	ctx_reschedule		11027708	2					
ANR	11028067	ParameterList	i_ctx_t * * pi_ctx_p		11027708	3					
ANR	11028068	Parameter	i_ctx_t * * pi_ctx_p	403:15:13763:13780	11027708	0	True				
ANR	11028069	ParameterType	i_ctx_t * *		11027708	0					
ANR	11028070	Identifier	pi_ctx_p		11027708	1					
ANR	11028071	CFGEntryNode	ENTRY		11027708		True				
ANR	11028072	CFGExitNode	EXIT		11027708		True				
ANR	11028073	InfiniteForNode	true		11027708		True				
ANR	11028074	Symbol	current -> index		11027708						
ANR	11028075	Symbol	* ready -> state . memory		11027708						
ANR	11028076	Symbol	psched -> dead_index		11027708						
ANR	11028077	Symbol	* * ready		11027708						
ANR	11028078	Symbol	psched -> active . tail_index		11027708						
ANR	11028079	Symbol	* ready -> state		11027708						
ANR	11028080	Symbol	next_index		11027708						
ANR	11028081	Symbol	dead -> next_index		11027708						
ANR	11028082	Symbol	ready -> next_index		11027708						
ANR	11028083	Symbol	psched -> current		11027708						
ANR	11028084	Symbol	* dead		11027708						
ANR	11028085	Symbol	prev		11027708						
ANR	11028086	Symbol	* current		11027708						
ANR	11028087	Symbol	& ready -> state		11027708						
ANR	11028088	Symbol	dead		11027708						
ANR	11028089	Symbol	* prev		11027708						
ANR	11028090	Symbol	prev -> index		11027708						
ANR	11028091	Symbol	ready -> state . memory . space_local		11027708						
ANR	11028092	Symbol	current		11027708						
ANR	11028093	Symbol	current -> state		11027708						
ANR	11028094	Symbol	psched -> active . head_index		11027708						
ANR	11028095	Symbol	ready -> state . memory		11027708						
ANR	11028096	Symbol	current -> saved_local_vm		11027708						
ANR	11028097	Symbol	ready		11027708						
ANR	11028098	Symbol	* pi_ctx_p		11027708						
ANR	11028099	Symbol	* ready -> state . memory . space_local		11027708						
ANR	11028100	Symbol	gs_error_Fatal		11027708						
ANR	11028101	Symbol	prev -> next_index		11027708						
ANR	11028102	Symbol	ready -> state		11027708						
ANR	11028103	Symbol	pi_ctx_p		11027708						
ANR	11028104	Symbol	psched		11027708						
ANR	11028105	Symbol	* psched		11027708						
ANR	11028106	Symbol	current -> scheduler		11027708						
ANR	11028107	Symbol	current -> state . memory . space_local		11027708						
ANR	11028108	Symbol	ready -> state . memory . space_local -> saved		11027708						
ANR	11028109	Symbol	* * current		11027708						
ANR	11028110	Symbol	ready -> saved_local_vm		11027708						
ANR	11028111	Symbol	current -> state . memory . space_local -> saved		11027708						
ANR	11028112	Symbol	current -> state . memory		11027708						
ANR	11028113	Symbol	* current -> state		11027708						
ANR	11028114	Symbol	* ready		11027708						
ANR	11028115	Symbol	* current -> state . memory		11027708						
ANR	11028116	Symbol	& current -> state		11027708						
ANR	11028117	Symbol	* current -> state . memory . space_local		11027708						
ANR	11028118	Symbol	psched -> active		11027708						
ANR	11028119	Symbol	index_context		11027708						
ANR	11028120	Function	ctx_time_slice	487:0:16665:17035							
ANR	11028121	FunctionDef	ctx_time_slice (i_ctx_t * * pi_ctx_p)		11028120	0					
ANR	11028122	CompoundStatement		489:0:16711:17035	11028120	0					
ANR	11028123	IdentifierDeclStatement	gs_scheduler_t * psched = ( ( gs_context_t * ) * pi_ctx_p ) -> scheduler ;	490:4:16717:16780	11028120	0	True				
ANR	11028124	IdentifierDecl	* psched = ( ( gs_context_t * ) * pi_ctx_p ) -> scheduler		11028120	0					
ANR	11028125	IdentifierDeclType	gs_scheduler_t *		11028120	0					
ANR	11028126	Identifier	psched		11028120	1					
ANR	11028127	AssignmentExpression	* psched = ( ( gs_context_t * ) * pi_ctx_p ) -> scheduler		11028120	2		=			
ANR	11028128	Identifier	psched		11028120	0					
ANR	11028129	PtrMemberAccess	( ( gs_context_t * ) * pi_ctx_p ) -> scheduler		11028120	1					
ANR	11028130	CastExpression	( gs_context_t * ) * pi_ctx_p		11028120	0					
ANR	11028131	CastTarget	gs_context_t *		11028120	0					
ANR	11028132	UnaryOperationExpression	* pi_ctx_p		11028120	1					
ANR	11028133	UnaryOperator	*		11028120	0					
ANR	11028134	Identifier	pi_ctx_p		11028120	1					
ANR	11028135	Identifier	scheduler		11028120	1					
ANR	11028136	IfStatement	if ( psched -> active . head_index == 0 || reschedule_interval < minimum_reschedule_interval )		11028120	1					
ANR	11028137	Condition	psched -> active . head_index == 0 || reschedule_interval < minimum_reschedule_interval	492:8:16791:16881	11028120	0	True				
ANR	11028138	OrExpression	psched -> active . head_index == 0 || reschedule_interval < minimum_reschedule_interval		11028120	0		||			
ANR	11028139	EqualityExpression	psched -> active . head_index == 0		11028120	0		==			
ANR	11028140	MemberAccess	psched -> active . head_index		11028120	0					
ANR	11028141	PtrMemberAccess	psched -> active		11028120	0					
ANR	11028142	Identifier	psched		11028120	0					
ANR	11028143	Identifier	active		11028120	1					
ANR	11028144	Identifier	head_index		11028120	1					
ANR	11028145	PrimaryExpression	0		11028120	1					
ANR	11028146	RelationalExpression	reschedule_interval < minimum_reschedule_interval		11028120	1		<			
ANR	11028147	Identifier	reschedule_interval		11028120	0					
ANR	11028148	Identifier	minimum_reschedule_interval		11028120	1					
ANR	11028149	ReturnStatement	return 0 ;	494:8:16892:16900	11028120	1	True				
ANR	11028150	PrimaryExpression	0		11028120	0					
ANR	11028151	ExpressionStatement	"if_debug0 ( '""' , ""[\\""]time-slice\\n"" )"	495:4:16906:16940	11028120	2	True				
ANR	11028152	CallExpression	"if_debug0 ( '""' , ""[\\""]time-slice\\n"" )"		11028120	0					
ANR	11028153	Callee	if_debug0		11028120	0					
ANR	11028154	Identifier	if_debug0		11028120	0					
ANR	11028155	ArgumentList	"'""'"		11028120	1					
ANR	11028156	Argument	"'""'"		11028120	0					
ANR	11028157	PrimaryExpression	"'""'"		11028120	0					
ANR	11028158	Argument	"""[\\""]time-slice\\n"""		11028120	1					
ANR	11028159	PrimaryExpression	"""[\\""]time-slice\\n"""		11028120	0					
ANR	11028160	ExpressionStatement	"add_last ( psched , & psched -> active , psched -> current )"	496:4:16946:16996	11028120	3	True				
ANR	11028161	CallExpression	"add_last ( psched , & psched -> active , psched -> current )"		11028120	0					
ANR	11028162	Callee	add_last		11028120	0					
ANR	11028163	Identifier	add_last		11028120	0					
ANR	11028164	ArgumentList	psched		11028120	1					
ANR	11028165	Argument	psched		11028120	0					
ANR	11028166	Identifier	psched		11028120	0					
ANR	11028167	Argument	& psched -> active		11028120	1					
ANR	11028168	UnaryOperationExpression	& psched -> active		11028120	0					
ANR	11028169	UnaryOperator	&		11028120	0					
ANR	11028170	PtrMemberAccess	psched -> active		11028120	1					
ANR	11028171	Identifier	psched		11028120	0					
ANR	11028172	Identifier	active		11028120	1					
ANR	11028173	Argument	psched -> current		11028120	2					
ANR	11028174	PtrMemberAccess	psched -> current		11028120	0					
ANR	11028175	Identifier	psched		11028120	0					
ANR	11028176	Identifier	current		11028120	1					
ANR	11028177	ReturnStatement	return ctx_reschedule ( pi_ctx_p ) ;	497:4:17002:17033	11028120	4	True				
ANR	11028178	CallExpression	ctx_reschedule ( pi_ctx_p )		11028120	0					
ANR	11028179	Callee	ctx_reschedule		11028120	0					
ANR	11028180	Identifier	ctx_reschedule		11028120	0					
ANR	11028181	ArgumentList	pi_ctx_p		11028120	1					
ANR	11028182	Argument	pi_ctx_p		11028120	0					
ANR	11028183	Identifier	pi_ctx_p		11028120	0					
ANR	11028184	ReturnType	static int		11028120	1					
ANR	11028185	Identifier	ctx_time_slice		11028120	2					
ANR	11028186	ParameterList	i_ctx_t * * pi_ctx_p		11028120	3					
ANR	11028187	Parameter	i_ctx_t * * pi_ctx_p	488:15:16691:16708	11028120	0	True				
ANR	11028188	ParameterType	i_ctx_t * *		11028120	0					
ANR	11028189	Identifier	pi_ctx_p		11028120	1					
ANR	11028190	CFGEntryNode	ENTRY		11028120		True				
ANR	11028191	CFGExitNode	EXIT		11028120		True				
ANR	11028192	Symbol	ctx_reschedule		11028120						
ANR	11028193	Symbol	pi_ctx_p		11028120						
ANR	11028194	Symbol	psched		11028120						
ANR	11028195	Symbol	psched -> current		11028120						
ANR	11028196	Symbol	* psched		11028120						
ANR	11028197	Symbol	( ( gs_context_t * ) * pi_ctx_p ) -> scheduler		11028120						
ANR	11028198	Symbol	minimum_reschedule_interval		11028120						
ANR	11028199	Symbol	& psched -> active		11028120						
ANR	11028200	Symbol	* * pi_ctx_p		11028120						
ANR	11028201	Symbol	psched -> active . head_index		11028120						
ANR	11028202	Symbol	reschedule_interval		11028120						
ANR	11028203	Symbol	* pi_ctx_p		11028120						
ANR	11028204	Symbol	psched -> active		11028120						
ANR	11028205	Function	zcurrentcontext	503:0:17110:17305							
ANR	11028206	FunctionDef	zcurrentcontext (i_ctx_t * i_ctx_p)		11028205	0					
ANR	11028207	CompoundStatement		505:0:17155:17305	11028205	0					
ANR	11028208	IdentifierDeclStatement	os_ptr op = osp ;	506:4:17161:17176	11028205	0	True				
ANR	11028209	IdentifierDecl	op = osp		11028205	0					
ANR	11028210	IdentifierDeclType	os_ptr		11028205	0					
ANR	11028211	Identifier	op		11028205	1					
ANR	11028212	AssignmentExpression	op = osp		11028205	2		=			
ANR	11028213	Identifier	osp		11028205	0					
ANR	11028214	Identifier	osp		11028205	1					
ANR	11028215	IdentifierDeclStatement	const gs_context_t * current = ( const gs_context_t * ) i_ctx_p ;	507:4:17182:17241	11028205	1	True				
ANR	11028216	IdentifierDecl	* current = ( const gs_context_t * ) i_ctx_p		11028205	0					
ANR	11028217	IdentifierDeclType	const gs_context_t *		11028205	0					
ANR	11028218	Identifier	current		11028205	1					
ANR	11028219	AssignmentExpression	* current = ( const gs_context_t * ) i_ctx_p		11028205	2		=			
ANR	11028220	Identifier	current		11028205	0					
ANR	11028221	CastExpression	( const gs_context_t * ) i_ctx_p		11028205	1					
ANR	11028222	CastTarget	const gs_context_t *		11028205	0					
ANR	11028223	Identifier	i_ctx_p		11028205	1					
ANR	11028224	ExpressionStatement	push ( 1 )	509:4:17248:17255	11028205	2	True				
ANR	11028225	CallExpression	push ( 1 )		11028205	0					
ANR	11028226	Callee	push		11028205	0					
ANR	11028227	Identifier	push		11028205	0					
ANR	11028228	ArgumentList	1		11028205	1					
ANR	11028229	Argument	1		11028205	0					
ANR	11028230	PrimaryExpression	1		11028205	0					
ANR	11028231	ExpressionStatement	"make_int ( op , current -> index )"	510:4:17261:17289	11028205	3	True				
ANR	11028232	CallExpression	"make_int ( op , current -> index )"		11028205	0					
ANR	11028233	Callee	make_int		11028205	0					
ANR	11028234	Identifier	make_int		11028205	0					
ANR	11028235	ArgumentList	op		11028205	1					
ANR	11028236	Argument	op		11028205	0					
ANR	11028237	Identifier	op		11028205	0					
ANR	11028238	Argument	current -> index		11028205	1					
ANR	11028239	PtrMemberAccess	current -> index		11028205	0					
ANR	11028240	Identifier	current		11028205	0					
ANR	11028241	Identifier	index		11028205	1					
ANR	11028242	ReturnStatement	return 0 ;	511:4:17295:17303	11028205	4	True				
ANR	11028243	PrimaryExpression	0		11028205	0					
ANR	11028244	ReturnType	static int		11028205	1					
ANR	11028245	Identifier	zcurrentcontext		11028205	2					
ANR	11028246	ParameterList	i_ctx_t * i_ctx_p		11028205	3					
ANR	11028247	Parameter	i_ctx_t * i_ctx_p	504:16:17137:17152	11028205	0	True				
ANR	11028248	ParameterType	i_ctx_t *		11028205	0					
ANR	11028249	Identifier	i_ctx_p		11028205	1					
ANR	11028250	CFGEntryNode	ENTRY		11028205		True				
ANR	11028251	CFGExitNode	EXIT		11028205		True				
ANR	11028252	Symbol	current -> index		11028205						
ANR	11028253	Symbol	op		11028205						
ANR	11028254	Symbol	current		11028205						
ANR	11028255	Symbol	i_ctx_p		11028205						
ANR	11028256	Symbol	* current		11028205						
ANR	11028257	Symbol	osp		11028205						
ANR	11028258	Function	zdetach	515:0:17333:17964							
ANR	11028259	FunctionDef	zdetach (i_ctx_t * i_ctx_p)		11028258	0					
ANR	11028260	CompoundStatement		517:0:17370:17964	11028258	0					
ANR	11028261	IdentifierDeclStatement	os_ptr op = osp ;	518:4:17376:17391	11028258	0	True				
ANR	11028262	IdentifierDecl	op = osp		11028258	0					
ANR	11028263	IdentifierDeclType	os_ptr		11028258	0					
ANR	11028264	Identifier	op		11028258	1					
ANR	11028265	AssignmentExpression	op = osp		11028258	2		=			
ANR	11028266	Identifier	osp		11028258	0					
ANR	11028267	Identifier	osp		11028258	1					
ANR	11028268	IdentifierDeclStatement	const gs_scheduler_t * psched = ( ( gs_context_t * ) i_ctx_p ) -> scheduler ;	519:4:17397:17464	11028258	1	True				
ANR	11028269	IdentifierDecl	* psched = ( ( gs_context_t * ) i_ctx_p ) -> scheduler		11028258	0					
ANR	11028270	IdentifierDeclType	const gs_scheduler_t *		11028258	0					
ANR	11028271	Identifier	psched		11028258	1					
ANR	11028272	AssignmentExpression	* psched = ( ( gs_context_t * ) i_ctx_p ) -> scheduler		11028258	2		=			
ANR	11028273	Identifier	psched		11028258	0					
ANR	11028274	PtrMemberAccess	( ( gs_context_t * ) i_ctx_p ) -> scheduler		11028258	1					
ANR	11028275	CastExpression	( gs_context_t * ) i_ctx_p		11028258	0					
ANR	11028276	CastTarget	gs_context_t *		11028258	0					
ANR	11028277	Identifier	i_ctx_p		11028258	1					
ANR	11028278	Identifier	scheduler		11028258	1					
ANR	11028279	IdentifierDeclStatement	gs_context_t * pctx ;	520:4:17470:17488	11028258	2	True				
ANR	11028280	IdentifierDecl	* pctx		11028258	0					
ANR	11028281	IdentifierDeclType	gs_context_t *		11028258	0					
ANR	11028282	Identifier	pctx		11028258	1					
ANR	11028283	IdentifierDeclStatement	int code ;	521:4:17494:17502	11028258	3	True				
ANR	11028284	IdentifierDecl	code		11028258	0					
ANR	11028285	IdentifierDeclType	int		11028258	0					
ANR	11028286	Identifier	code		11028258	1					
ANR	11028287	IfStatement	"if ( ( code = context_param ( psched , op , & pctx ) ) < 0 )"		11028258	4					
ANR	11028288	Condition	"( code = context_param ( psched , op , & pctx ) ) < 0"	523:8:17513:17557	11028258	0	True				
ANR	11028289	RelationalExpression	"( code = context_param ( psched , op , & pctx ) ) < 0"		11028258	0		<			
ANR	11028290	AssignmentExpression	"code = context_param ( psched , op , & pctx )"		11028258	0		=			
ANR	11028291	Identifier	code		11028258	0					
ANR	11028292	CallExpression	"context_param ( psched , op , & pctx )"		11028258	1					
ANR	11028293	Callee	context_param		11028258	0					
ANR	11028294	Identifier	context_param		11028258	0					
ANR	11028295	ArgumentList	psched		11028258	1					
ANR	11028296	Argument	psched		11028258	0					
ANR	11028297	Identifier	psched		11028258	0					
ANR	11028298	Argument	op		11028258	1					
ANR	11028299	Identifier	op		11028258	0					
ANR	11028300	Argument	& pctx		11028258	2					
ANR	11028301	UnaryOperationExpression	& pctx		11028258	0					
ANR	11028302	UnaryOperator	&		11028258	0					
ANR	11028303	Identifier	pctx		11028258	1					
ANR	11028304	PrimaryExpression	0		11028258	1					
ANR	11028305	ReturnStatement	return code ;	524:8:17568:17579	11028258	1	True				
ANR	11028306	Identifier	code		11028258	0					
ANR	11028307	ExpressionStatement	"if_debug2 ( '\\'' , ""[']detach %ld, status = %d\\n"" , pctx -> index , pctx -> status )"	525:4:17585:17673	11028258	5	True				
ANR	11028308	CallExpression	"if_debug2 ( '\\'' , ""[']detach %ld, status = %d\\n"" , pctx -> index , pctx -> status )"		11028258	0					
ANR	11028309	Callee	if_debug2		11028258	0					
ANR	11028310	Identifier	if_debug2		11028258	0					
ANR	11028311	ArgumentList	'\\''		11028258	1					
ANR	11028312	Argument	'\\''		11028258	0					
ANR	11028313	PrimaryExpression	'\\''		11028258	0					
ANR	11028314	Argument	"""[']detach %ld, status = %d\\n"""		11028258	1					
ANR	11028315	PrimaryExpression	"""[']detach %ld, status = %d\\n"""		11028258	0					
ANR	11028316	Argument	pctx -> index		11028258	2					
ANR	11028317	PtrMemberAccess	pctx -> index		11028258	0					
ANR	11028318	Identifier	pctx		11028258	0					
ANR	11028319	Identifier	index		11028258	1					
ANR	11028320	Argument	pctx -> status		11028258	3					
ANR	11028321	PtrMemberAccess	pctx -> status		11028258	0					
ANR	11028322	Identifier	pctx		11028258	0					
ANR	11028323	Identifier	status		11028258	1					
ANR	11028324	IfStatement	if ( pctx -> joiner_index != 0 || pctx -> detach )		11028258	6					
ANR	11028325	Condition	pctx -> joiner_index != 0 || pctx -> detach	527:8:17683:17721	11028258	0	True				
ANR	11028326	OrExpression	pctx -> joiner_index != 0 || pctx -> detach		11028258	0		||			
ANR	11028327	EqualityExpression	pctx -> joiner_index != 0		11028258	0		!=			
ANR	11028328	PtrMemberAccess	pctx -> joiner_index		11028258	0					
ANR	11028329	Identifier	pctx		11028258	0					
ANR	11028330	Identifier	joiner_index		11028258	1					
ANR	11028331	PrimaryExpression	0		11028258	1					
ANR	11028332	PtrMemberAccess	pctx -> detach		11028258	1					
ANR	11028333	Identifier	pctx		11028258	0					
ANR	11028334	Identifier	detach		11028258	1					
ANR	11028335	ExpressionStatement	return_error ( gs_error_invalidcontext )	528:8:17732:17769	11028258	1	True				
ANR	11028336	CallExpression	return_error ( gs_error_invalidcontext )		11028258	0					
ANR	11028337	Callee	return_error		11028258	0					
ANR	11028338	Identifier	return_error		11028258	0					
ANR	11028339	ArgumentList	gs_error_invalidcontext		11028258	1					
ANR	11028340	Argument	gs_error_invalidcontext		11028258	0					
ANR	11028341	Identifier	gs_error_invalidcontext		11028258	0					
ANR	11028342	SwitchStatement	switch ( pctx -> status )		11028258	7					
ANR	11028343	Condition	pctx -> status	529:12:17783:17794	11028258	0	True				
ANR	11028344	PtrMemberAccess	pctx -> status		11028258	0					
ANR	11028345	Identifier	pctx		11028258	0					
ANR	11028346	Identifier	status		11028258	1					
ANR	11028347	CompoundStatement		13:26:426:426	11028258	1					
ANR	11028348	Label	case cs_active :	530:8:17807:17821	11028258	0	True				
ANR	11028349	Identifier	cs_active		11028258	0					
ANR	11028350	ExpressionStatement	pctx -> detach = true	531:12:17835:17854	11028258	1	True				
ANR	11028351	AssignmentExpression	pctx -> detach = true		11028258	0		=			
ANR	11028352	PtrMemberAccess	pctx -> detach		11028258	0					
ANR	11028353	Identifier	pctx		11028258	0					
ANR	11028354	Identifier	detach		11028258	1					
ANR	11028355	Identifier	true		11028258	1					
ANR	11028356	BreakStatement	break ;	532:12:17868:17873	11028258	2	True				
ANR	11028357	Label	case cs_done :	533:8:17883:17895	11028258	3	True				
ANR	11028358	Identifier	cs_done		11028258	0					
ANR	11028359	ExpressionStatement	context_destroy ( pctx )	534:12:17909:17930	11028258	4	True				
ANR	11028360	CallExpression	context_destroy ( pctx )		11028258	0					
ANR	11028361	Callee	context_destroy		11028258	0					
ANR	11028362	Identifier	context_destroy		11028258	0					
ANR	11028363	ArgumentList	pctx		11028258	1					
ANR	11028364	Argument	pctx		11028258	0					
ANR	11028365	Identifier	pctx		11028258	0					
ANR	11028366	ExpressionStatement	pop ( 1 )	536:4:17942:17948	11028258	8	True				
ANR	11028367	CallExpression	pop ( 1 )		11028258	0					
ANR	11028368	Callee	pop		11028258	0					
ANR	11028369	Identifier	pop		11028258	0					
ANR	11028370	ArgumentList	1		11028258	1					
ANR	11028371	Argument	1		11028258	0					
ANR	11028372	PrimaryExpression	1		11028258	0					
ANR	11028373	ReturnStatement	return 0 ;	537:4:17954:17962	11028258	9	True				
ANR	11028374	PrimaryExpression	0		11028258	0					
ANR	11028375	ReturnType	static int		11028258	1					
ANR	11028376	Identifier	zdetach		11028258	2					
ANR	11028377	ParameterList	i_ctx_t * i_ctx_p		11028258	3					
ANR	11028378	Parameter	i_ctx_t * i_ctx_p	516:8:17352:17367	11028258	0	True				
ANR	11028379	ParameterType	i_ctx_t *		11028258	0					
ANR	11028380	Identifier	i_ctx_p		11028258	1					
ANR	11028381	CFGEntryNode	ENTRY		11028258		True				
ANR	11028382	CFGExitNode	EXIT		11028258		True				
ANR	11028383	Symbol	op		11028258						
ANR	11028384	Symbol	pctx -> status		11028258						
ANR	11028385	Symbol	pctx		11028258						
ANR	11028386	Symbol	code		11028258						
ANR	11028387	Symbol	pctx -> index		11028258						
ANR	11028388	Symbol	psched		11028258						
ANR	11028389	Symbol	gs_error_invalidcontext		11028258						
ANR	11028390	Symbol	osp		11028258						
ANR	11028391	Symbol	context_param		11028258						
ANR	11028392	Symbol	* pctx		11028258						
ANR	11028393	Symbol	pctx -> detach		11028258						
ANR	11028394	Symbol	pctx -> joiner_index		11028258						
ANR	11028395	Symbol	i_ctx_p		11028258						
ANR	11028396	Symbol	* i_ctx_p		11028258						
ANR	11028397	Symbol	true		11028258						
ANR	11028398	Symbol	( ( gs_context_t * ) i_ctx_p ) -> scheduler		11028258						
ANR	11028399	Symbol	& pctx		11028258						
ANR	11028400	DeclStmt									
ANR	11028401	Decl							int	"int ( i_ctx_t * i_ctx_p , os_ptr op , const ref * pstdin , const ref * pstdout , uint mcount , bool local )"	do_fork
ANR	11028402	Decl							int	"int ( const ref_stack_t * pstack , uint first , uint last , int max_space )"	values_older_than
ANR	11028403	DeclStmt									
ANR	11028404	Decl							int	int ( i_ctx_t * )	fork_done
ANR	11028405	Decl							int	int ( i_ctx_t * )	fork_done_with_error
ANR	11028406	Decl							int	int ( i_ctx_t * )	finish_join
ANR	11028407	Decl							int	int ( i_ctx_t * )	reschedule_now
ANR	11028408	Function	zfork	554:0:18491:18770							
ANR	11028409	FunctionDef	zfork (i_ctx_t * i_ctx_p)		11028408	0					
ANR	11028410	CompoundStatement		556:0:18526:18770	11028408	0					
ANR	11028411	IdentifierDeclStatement	os_ptr op = osp ;	557:4:18532:18547	11028408	0	True				
ANR	11028412	IdentifierDecl	op = osp		11028408	0					
ANR	11028413	IdentifierDeclType	os_ptr		11028408	0					
ANR	11028414	Identifier	op		11028408	1					
ANR	11028415	AssignmentExpression	op = osp		11028408	2		=			
ANR	11028416	Identifier	osp		11028408	0					
ANR	11028417	Identifier	osp		11028408	1					
ANR	11028418	IdentifierDeclStatement	uint mcount = ref_stack_counttomark ( & o_stack ) ;	558:4:18553:18598	11028408	1	True				
ANR	11028419	IdentifierDecl	mcount = ref_stack_counttomark ( & o_stack )		11028408	0					
ANR	11028420	IdentifierDeclType	uint		11028408	0					
ANR	11028421	Identifier	mcount		11028408	1					
ANR	11028422	AssignmentExpression	mcount = ref_stack_counttomark ( & o_stack )		11028408	2		=			
ANR	11028423	Identifier	mcount		11028408	0					
ANR	11028424	CallExpression	ref_stack_counttomark ( & o_stack )		11028408	1					
ANR	11028425	Callee	ref_stack_counttomark		11028408	0					
ANR	11028426	Identifier	ref_stack_counttomark		11028408	0					
ANR	11028427	ArgumentList	& o_stack		11028408	1					
ANR	11028428	Argument	& o_stack		11028408	0					
ANR	11028429	UnaryOperationExpression	& o_stack		11028408	0					
ANR	11028430	UnaryOperator	&		11028408	0					
ANR	11028431	Identifier	o_stack		11028408	1					
ANR	11028432	IdentifierDeclStatement	ref rnull ;	559:4:18604:18613	11028408	2	True				
ANR	11028433	IdentifierDecl	rnull		11028408	0					
ANR	11028434	IdentifierDeclType	ref		11028408	0					
ANR	11028435	Identifier	rnull		11028408	1					
ANR	11028436	IfStatement	if ( mcount == 0 )		11028408	3					
ANR	11028437	Condition	mcount == 0	561:8:18624:18634	11028408	0	True				
ANR	11028438	EqualityExpression	mcount == 0		11028408	0		==			
ANR	11028439	Identifier	mcount		11028408	0					
ANR	11028440	PrimaryExpression	0		11028408	1					
ANR	11028441	ExpressionStatement	return_error ( gs_error_unmatchedmark )	562:8:18645:18681	11028408	1	True				
ANR	11028442	CallExpression	return_error ( gs_error_unmatchedmark )		11028408	0					
ANR	11028443	Callee	return_error		11028408	0					
ANR	11028444	Identifier	return_error		11028408	0					
ANR	11028445	ArgumentList	gs_error_unmatchedmark		11028408	1					
ANR	11028446	Argument	gs_error_unmatchedmark		11028408	0					
ANR	11028447	Identifier	gs_error_unmatchedmark		11028408	0					
ANR	11028448	ExpressionStatement	make_null ( & rnull )	563:4:18687:18704	11028408	4	True				
ANR	11028449	CallExpression	make_null ( & rnull )		11028408	0					
ANR	11028450	Callee	make_null		11028408	0					
ANR	11028451	Identifier	make_null		11028408	0					
ANR	11028452	ArgumentList	& rnull		11028408	1					
ANR	11028453	Argument	& rnull		11028408	0					
ANR	11028454	UnaryOperationExpression	& rnull		11028408	0					
ANR	11028455	UnaryOperator	&		11028408	0					
ANR	11028456	Identifier	rnull		11028408	1					
ANR	11028457	ReturnStatement	"return do_fork ( i_ctx_p , op , & rnull , & rnull , mcount , false ) ;"	564:4:18710:18768	11028408	5	True				
ANR	11028458	CallExpression	"do_fork ( i_ctx_p , op , & rnull , & rnull , mcount , false )"		11028408	0					
ANR	11028459	Callee	do_fork		11028408	0					
ANR	11028460	Identifier	do_fork		11028408	0					
ANR	11028461	ArgumentList	i_ctx_p		11028408	1					
ANR	11028462	Argument	i_ctx_p		11028408	0					
ANR	11028463	Identifier	i_ctx_p		11028408	0					
ANR	11028464	Argument	op		11028408	1					
ANR	11028465	Identifier	op		11028408	0					
ANR	11028466	Argument	& rnull		11028408	2					
ANR	11028467	UnaryOperationExpression	& rnull		11028408	0					
ANR	11028468	UnaryOperator	&		11028408	0					
ANR	11028469	Identifier	rnull		11028408	1					
ANR	11028470	Argument	& rnull		11028408	3					
ANR	11028471	UnaryOperationExpression	& rnull		11028408	0					
ANR	11028472	UnaryOperator	&		11028408	0					
ANR	11028473	Identifier	rnull		11028408	1					
ANR	11028474	Argument	mcount		11028408	4					
ANR	11028475	Identifier	mcount		11028408	0					
ANR	11028476	Argument	false		11028408	5					
ANR	11028477	Identifier	false		11028408	0					
ANR	11028478	ReturnType	static int		11028408	1					
ANR	11028479	Identifier	zfork		11028408	2					
ANR	11028480	ParameterList	i_ctx_t * i_ctx_p		11028408	3					
ANR	11028481	Parameter	i_ctx_t * i_ctx_p	555:6:18508:18523	11028408	0	True				
ANR	11028482	ParameterType	i_ctx_t *		11028408	0					
ANR	11028483	Identifier	i_ctx_p		11028408	1					
ANR	11028484	CFGEntryNode	ENTRY		11028408		True				
ANR	11028485	CFGExitNode	EXIT		11028408		True				
ANR	11028486	Symbol	op		11028408						
ANR	11028487	Symbol	rnull		11028408						
ANR	11028488	Symbol	ref_stack_counttomark		11028408						
ANR	11028489	Symbol	mcount		11028408						
ANR	11028490	Symbol	do_fork		11028408						
ANR	11028491	Symbol	i_ctx_p		11028408						
ANR	11028492	Symbol	& o_stack		11028408						
ANR	11028493	Symbol	false		11028408						
ANR	11028494	Symbol	osp		11028408						
ANR	11028495	Symbol	& rnull		11028408						
ANR	11028496	Symbol	gs_error_unmatchedmark		11028408						
ANR	11028497	Function	zlocalfork	566:0:18772:19240							
ANR	11028498	FunctionDef	zlocalfork (i_ctx_t * i_ctx_p)		11028497	0					
ANR	11028499	CompoundStatement		568:0:18812:19240	11028497	0					
ANR	11028500	IdentifierDeclStatement	os_ptr op = osp ;	569:4:18818:18833	11028497	0	True				
ANR	11028501	IdentifierDecl	op = osp		11028497	0					
ANR	11028502	IdentifierDeclType	os_ptr		11028497	0					
ANR	11028503	Identifier	op		11028497	1					
ANR	11028504	AssignmentExpression	op = osp		11028497	2		=			
ANR	11028505	Identifier	osp		11028497	0					
ANR	11028506	Identifier	osp		11028497	1					
ANR	11028507	IdentifierDeclStatement	uint mcount = ref_stack_counttomark ( & o_stack ) ;	570:4:18839:18884	11028497	1	True				
ANR	11028508	IdentifierDecl	mcount = ref_stack_counttomark ( & o_stack )		11028497	0					
ANR	11028509	IdentifierDeclType	uint		11028497	0					
ANR	11028510	Identifier	mcount		11028497	1					
ANR	11028511	AssignmentExpression	mcount = ref_stack_counttomark ( & o_stack )		11028497	2		=			
ANR	11028512	Identifier	mcount		11028497	0					
ANR	11028513	CallExpression	ref_stack_counttomark ( & o_stack )		11028497	1					
ANR	11028514	Callee	ref_stack_counttomark		11028497	0					
ANR	11028515	Identifier	ref_stack_counttomark		11028497	0					
ANR	11028516	ArgumentList	& o_stack		11028497	1					
ANR	11028517	Argument	& o_stack		11028497	0					
ANR	11028518	UnaryOperationExpression	& o_stack		11028497	0					
ANR	11028519	UnaryOperator	&		11028497	0					
ANR	11028520	Identifier	o_stack		11028497	1					
ANR	11028521	IdentifierDeclStatement	int code ;	571:4:18890:18898	11028497	2	True				
ANR	11028522	IdentifierDecl	code		11028497	0					
ANR	11028523	IdentifierDeclType	int		11028497	0					
ANR	11028524	Identifier	code		11028497	1					
ANR	11028525	IfStatement	if ( mcount == 0 )		11028497	3					
ANR	11028526	Condition	mcount == 0	573:8:18909:18919	11028497	0	True				
ANR	11028527	EqualityExpression	mcount == 0		11028497	0		==			
ANR	11028528	Identifier	mcount		11028497	0					
ANR	11028529	PrimaryExpression	0		11028497	1					
ANR	11028530	ExpressionStatement	return_error ( gs_error_unmatchedmark )	574:8:18930:18966	11028497	1	True				
ANR	11028531	CallExpression	return_error ( gs_error_unmatchedmark )		11028497	0					
ANR	11028532	Callee	return_error		11028497	0					
ANR	11028533	Identifier	return_error		11028497	0					
ANR	11028534	ArgumentList	gs_error_unmatchedmark		11028497	1					
ANR	11028535	Argument	gs_error_unmatchedmark		11028497	0					
ANR	11028536	Identifier	gs_error_unmatchedmark		11028497	0					
ANR	11028537	ExpressionStatement	"code = values_older_than ( & o_stack , 1 , mcount - 1 , avm_local )"	575:4:18972:19032	11028497	4	True				
ANR	11028538	AssignmentExpression	"code = values_older_than ( & o_stack , 1 , mcount - 1 , avm_local )"		11028497	0		=			
ANR	11028539	Identifier	code		11028497	0					
ANR	11028540	CallExpression	"values_older_than ( & o_stack , 1 , mcount - 1 , avm_local )"		11028497	1					
ANR	11028541	Callee	values_older_than		11028497	0					
ANR	11028542	Identifier	values_older_than		11028497	0					
ANR	11028543	ArgumentList	& o_stack		11028497	1					
ANR	11028544	Argument	& o_stack		11028497	0					
ANR	11028545	UnaryOperationExpression	& o_stack		11028497	0					
ANR	11028546	UnaryOperator	&		11028497	0					
ANR	11028547	Identifier	o_stack		11028497	1					
ANR	11028548	Argument	1		11028497	1					
ANR	11028549	PrimaryExpression	1		11028497	0					
ANR	11028550	Argument	mcount - 1		11028497	2					
ANR	11028551	AdditiveExpression	mcount - 1		11028497	0		-			
ANR	11028552	Identifier	mcount		11028497	0					
ANR	11028553	PrimaryExpression	1		11028497	1					
ANR	11028554	Argument	avm_local		11028497	3					
ANR	11028555	Identifier	avm_local		11028497	0					
ANR	11028556	IfStatement	if ( code < 0 )		11028497	5					
ANR	11028557	Condition	code < 0	576:8:19042:19049	11028497	0	True				
ANR	11028558	RelationalExpression	code < 0		11028497	0		<			
ANR	11028559	Identifier	code		11028497	0					
ANR	11028560	PrimaryExpression	0		11028497	1					
ANR	11028561	ReturnStatement	return code ;	577:8:19060:19071	11028497	1	True				
ANR	11028562	Identifier	code		11028497	0					
ANR	11028563	ExpressionStatement	"code = do_fork ( i_ctx_p , op - 2 , op - 1 , op , mcount - 2 , true )"	578:4:19077:19138	11028497	6	True				
ANR	11028564	AssignmentExpression	"code = do_fork ( i_ctx_p , op - 2 , op - 1 , op , mcount - 2 , true )"		11028497	0		=			
ANR	11028565	Identifier	code		11028497	0					
ANR	11028566	CallExpression	"do_fork ( i_ctx_p , op - 2 , op - 1 , op , mcount - 2 , true )"		11028497	1					
ANR	11028567	Callee	do_fork		11028497	0					
ANR	11028568	Identifier	do_fork		11028497	0					
ANR	11028569	ArgumentList	i_ctx_p		11028497	1					
ANR	11028570	Argument	i_ctx_p		11028497	0					
ANR	11028571	Identifier	i_ctx_p		11028497	0					
ANR	11028572	Argument	op - 2		11028497	1					
ANR	11028573	AdditiveExpression	op - 2		11028497	0		-			
ANR	11028574	Identifier	op		11028497	0					
ANR	11028575	PrimaryExpression	2		11028497	1					
ANR	11028576	Argument	op - 1		11028497	2					
ANR	11028577	AdditiveExpression	op - 1		11028497	0		-			
ANR	11028578	Identifier	op		11028497	0					
ANR	11028579	PrimaryExpression	1		11028497	1					
ANR	11028580	Argument	op		11028497	3					
ANR	11028581	Identifier	op		11028497	0					
ANR	11028582	Argument	mcount - 2		11028497	4					
ANR	11028583	AdditiveExpression	mcount - 2		11028497	0		-			
ANR	11028584	Identifier	mcount		11028497	0					
ANR	11028585	PrimaryExpression	2		11028497	1					
ANR	11028586	Argument	true		11028497	5					
ANR	11028587	Identifier	true		11028497	0					
ANR	11028588	IfStatement	if ( code < 0 )		11028497	7					
ANR	11028589	Condition	code < 0	579:8:19148:19155	11028497	0	True				
ANR	11028590	RelationalExpression	code < 0		11028497	0		<			
ANR	11028591	Identifier	code		11028497	0					
ANR	11028592	PrimaryExpression	0		11028497	1					
ANR	11028593	ReturnStatement	return code ;	580:8:19166:19177	11028497	1	True				
ANR	11028594	Identifier	code		11028497	0					
ANR	11028595	ExpressionStatement	op = osp	581:4:19183:19191	11028497	8	True				
ANR	11028596	AssignmentExpression	op = osp		11028497	0		=			
ANR	11028597	Identifier	op		11028497	0					
ANR	11028598	Identifier	osp		11028497	1					
ANR	11028599	ExpressionStatement	op [ - 2 ] = * op	582:4:19197:19209	11028497	9	True				
ANR	11028600	AssignmentExpression	op [ - 2 ] = * op		11028497	0		=			
ANR	11028601	ArrayIndexing	op [ - 2 ]		11028497	0					
ANR	11028602	Identifier	op		11028497	0					
ANR	11028603	UnaryOperationExpression	- 2		11028497	1					
ANR	11028604	UnaryOperator	-		11028497	0					
ANR	11028605	PrimaryExpression	2		11028497	1					
ANR	11028606	UnaryOperationExpression	* op		11028497	1					
ANR	11028607	UnaryOperator	*		11028497	0					
ANR	11028608	Identifier	op		11028497	1					
ANR	11028609	ExpressionStatement	pop ( 2 )	583:4:19215:19221	11028497	10	True				
ANR	11028610	CallExpression	pop ( 2 )		11028497	0					
ANR	11028611	Callee	pop		11028497	0					
ANR	11028612	Identifier	pop		11028497	0					
ANR	11028613	ArgumentList	2		11028497	1					
ANR	11028614	Argument	2		11028497	0					
ANR	11028615	PrimaryExpression	2		11028497	0					
ANR	11028616	ReturnStatement	return code ;	584:4:19227:19238	11028497	11	True				
ANR	11028617	Identifier	code		11028497	0					
ANR	11028618	ReturnType	static int		11028497	1					
ANR	11028619	Identifier	zlocalfork		11028497	2					
ANR	11028620	ParameterList	i_ctx_t * i_ctx_p		11028497	3					
ANR	11028621	Parameter	i_ctx_t * i_ctx_p	567:11:18794:18809	11028497	0	True				
ANR	11028622	ParameterType	i_ctx_t *		11028497	0					
ANR	11028623	Identifier	i_ctx_p		11028497	1					
ANR	11028624	CFGEntryNode	ENTRY		11028497		True				
ANR	11028625	CFGExitNode	EXIT		11028497		True				
ANR	11028626	Symbol	op		11028497						
ANR	11028627	Symbol	code		11028497						
ANR	11028628	Symbol	* op		11028497						
ANR	11028629	Symbol	mcount		11028497						
ANR	11028630	Symbol	avm_local		11028497						
ANR	11028631	Symbol	osp		11028497						
ANR	11028632	Symbol	gs_error_unmatchedmark		11028497						
ANR	11028633	Symbol	ref_stack_counttomark		11028497						
ANR	11028634	Symbol	do_fork		11028497						
ANR	11028635	Symbol	i_ctx_p		11028497						
ANR	11028636	Symbol	& o_stack		11028497						
ANR	11028637	Symbol	true		11028497						
ANR	11028638	Symbol	values_older_than		11028497						
ANR	11028639	Function	do_fork	588:0:19303:25174							
ANR	11028640	FunctionDef	"do_fork (i_ctx_t * i_ctx_p , os_ptr op , const ref * pstdin , const ref * pstdout , uint mcount , bool local)"		11028639	0					
ANR	11028641	CompoundStatement		591:0:19425:25174	11028639	0					
ANR	11028642	IdentifierDeclStatement	gs_context_t * pcur = ( gs_context_t * ) i_ctx_p ;	592:4:19431:19475	11028639	0	True				
ANR	11028643	IdentifierDecl	* pcur = ( gs_context_t * ) i_ctx_p		11028639	0					
ANR	11028644	IdentifierDeclType	gs_context_t *		11028639	0					
ANR	11028645	Identifier	pcur		11028639	1					
ANR	11028646	AssignmentExpression	* pcur = ( gs_context_t * ) i_ctx_p		11028639	2		=			
ANR	11028647	Identifier	pcur		11028639	0					
ANR	11028648	CastExpression	( gs_context_t * ) i_ctx_p		11028639	1					
ANR	11028649	CastTarget	gs_context_t *		11028639	0					
ANR	11028650	Identifier	i_ctx_p		11028639	1					
ANR	11028651	IdentifierDeclStatement	gs_scheduler_t * psched = pcur -> scheduler ;	593:4:19481:19521	11028639	1	True				
ANR	11028652	IdentifierDecl	* psched = pcur -> scheduler		11028639	0					
ANR	11028653	IdentifierDeclType	gs_scheduler_t *		11028639	0					
ANR	11028654	Identifier	psched		11028639	1					
ANR	11028655	AssignmentExpression	* psched = pcur -> scheduler		11028639	2		=			
ANR	11028656	Identifier	psched		11028639	0					
ANR	11028657	PtrMemberAccess	pcur -> scheduler		11028639	1					
ANR	11028658	Identifier	pcur		11028639	0					
ANR	11028659	Identifier	scheduler		11028639	1					
ANR	11028660	IdentifierDeclStatement	stream * s ;	594:4:19527:19536	11028639	2	True				
ANR	11028661	IdentifierDecl	* s		11028639	0					
ANR	11028662	IdentifierDeclType	stream *		11028639	0					
ANR	11028663	Identifier	s		11028639	1					
ANR	11028664	IdentifierDeclStatement	gs_dual_memory_t dmem ;	595:4:19542:19563	11028639	3	True				
ANR	11028665	IdentifierDecl	dmem		11028639	0					
ANR	11028666	IdentifierDeclType	gs_dual_memory_t		11028639	0					
ANR	11028667	Identifier	dmem		11028639	1					
ANR	11028668	IdentifierDeclStatement	gs_context_t * pctx ;	596:4:19569:19587	11028639	4	True				
ANR	11028669	IdentifierDecl	* pctx		11028639	0					
ANR	11028670	IdentifierDeclType	gs_context_t *		11028639	0					
ANR	11028671	Identifier	pctx		11028639	1					
ANR	11028672	IdentifierDeclStatement	"ref old_userdict , new_userdict ;"	597:4:19593:19623	11028639	5	True				
ANR	11028673	IdentifierDecl	old_userdict		11028639	0					
ANR	11028674	IdentifierDeclType	ref		11028639	0					
ANR	11028675	Identifier	old_userdict		11028639	1					
ANR	11028676	IdentifierDecl	new_userdict		11028639	1					
ANR	11028677	IdentifierDeclType	ref		11028639	0					
ANR	11028678	Identifier	new_userdict		11028639	1					
ANR	11028679	IdentifierDeclStatement	"int code , interval ;"	598:4:19629:19647	11028639	6	True				
ANR	11028680	IdentifierDecl	code		11028639	0					
ANR	11028681	IdentifierDeclType	int		11028639	0					
ANR	11028682	Identifier	code		11028639	1					
ANR	11028683	IdentifierDecl	interval		11028639	1					
ANR	11028684	IdentifierDeclType	int		11028639	0					
ANR	11028685	Identifier	interval		11028639	1					
ANR	11028686	ExpressionStatement	check_proc ( * op )	600:4:19654:19669	11028639	7	True				
ANR	11028687	CallExpression	check_proc ( * op )		11028639	0					
ANR	11028688	Callee	check_proc		11028639	0					
ANR	11028689	Identifier	check_proc		11028639	0					
ANR	11028690	ArgumentList	* op		11028639	1					
ANR	11028691	Argument	* op		11028639	0					
ANR	11028692	UnaryOperationExpression	* op		11028639	0					
ANR	11028693	UnaryOperator	*		11028639	0					
ANR	11028694	Identifier	op		11028639	1					
ANR	11028695	IfStatement	if ( iimemory_local -> save_level )		11028639	8					
ANR	11028696	Condition	iimemory_local -> save_level	601:8:19679:19704	11028639	0	True				
ANR	11028697	PtrMemberAccess	iimemory_local -> save_level		11028639	0					
ANR	11028698	Identifier	iimemory_local		11028639	0					
ANR	11028699	Identifier	save_level		11028639	1					
ANR	11028700	ExpressionStatement	return_error ( gs_error_invalidcontext )	602:8:19715:19752	11028639	1	True				
ANR	11028701	CallExpression	return_error ( gs_error_invalidcontext )		11028639	0					
ANR	11028702	Callee	return_error		11028639	0					
ANR	11028703	Identifier	return_error		11028639	0					
ANR	11028704	ArgumentList	gs_error_invalidcontext		11028639	1					
ANR	11028705	Argument	gs_error_invalidcontext		11028639	0					
ANR	11028706	Identifier	gs_error_invalidcontext		11028639	0					
ANR	11028707	IfStatement	"if ( r_has_type ( pstdout , t_null ) )"		11028639	9					
ANR	11028708	Condition	"r_has_type ( pstdout , t_null )"	603:8:19762:19788	11028639	0	True				
ANR	11028709	CallExpression	"r_has_type ( pstdout , t_null )"		11028639	0					
ANR	11028710	Callee	r_has_type		11028639	0					
ANR	11028711	Identifier	r_has_type		11028639	0					
ANR	11028712	ArgumentList	pstdout		11028639	1					
ANR	11028713	Argument	pstdout		11028639	0					
ANR	11028714	Identifier	pstdout		11028639	0					
ANR	11028715	Argument	t_null		11028639	1					
ANR	11028716	Identifier	t_null		11028639	0					
ANR	11028717	CompoundStatement		13:37:365:365	11028639	1					
ANR	11028718	ExpressionStatement	"code = zget_stdout ( i_ctx_p , & s )"	604:8:19801:19832	11028639	0	True				
ANR	11028719	AssignmentExpression	"code = zget_stdout ( i_ctx_p , & s )"		11028639	0		=			
ANR	11028720	Identifier	code		11028639	0					
ANR	11028721	CallExpression	"zget_stdout ( i_ctx_p , & s )"		11028639	1					
ANR	11028722	Callee	zget_stdout		11028639	0					
ANR	11028723	Identifier	zget_stdout		11028639	0					
ANR	11028724	ArgumentList	i_ctx_p		11028639	1					
ANR	11028725	Argument	i_ctx_p		11028639	0					
ANR	11028726	Identifier	i_ctx_p		11028639	0					
ANR	11028727	Argument	& s		11028639	1					
ANR	11028728	UnaryOperationExpression	& s		11028639	0					
ANR	11028729	UnaryOperator	&		11028639	0					
ANR	11028730	Identifier	s		11028639	1					
ANR	11028731	IfStatement	if ( code < 0 )		11028639	1					
ANR	11028732	Condition	code < 0	605:12:19846:19853	11028639	0	True				
ANR	11028733	RelationalExpression	code < 0		11028639	0		<			
ANR	11028734	Identifier	code		11028639	0					
ANR	11028735	PrimaryExpression	0		11028639	1					
ANR	11028736	ReturnStatement	return code ;	606:12:19868:19879	11028639	1	True				
ANR	11028737	Identifier	code		11028639	0					
ANR	11028738	ExpressionStatement	pstdout = & ref_stdio [ 1 ]	607:8:19889:19912	11028639	2	True				
ANR	11028739	AssignmentExpression	pstdout = & ref_stdio [ 1 ]		11028639	0		=			
ANR	11028740	Identifier	pstdout		11028639	0					
ANR	11028741	UnaryOperationExpression	& ref_stdio [ 1 ]		11028639	1					
ANR	11028742	UnaryOperator	&		11028639	0					
ANR	11028743	ArrayIndexing	ref_stdio [ 1 ]		11028639	1					
ANR	11028744	Identifier	ref_stdio		11028639	0					
ANR	11028745	PrimaryExpression	1		11028639	1					
ANR	11028746	ElseStatement	else		11028639	0					
ANR	11028747	ExpressionStatement	"check_read_file ( i_ctx_p , s , pstdout )"	609:8:19933:19969	11028639	0	True				
ANR	11028748	CallExpression	"check_read_file ( i_ctx_p , s , pstdout )"		11028639	0					
ANR	11028749	Callee	check_read_file		11028639	0					
ANR	11028750	Identifier	check_read_file		11028639	0					
ANR	11028751	ArgumentList	i_ctx_p		11028639	1					
ANR	11028752	Argument	i_ctx_p		11028639	0					
ANR	11028753	Identifier	i_ctx_p		11028639	0					
ANR	11028754	Argument	s		11028639	1					
ANR	11028755	Identifier	s		11028639	0					
ANR	11028756	Argument	pstdout		11028639	2					
ANR	11028757	Identifier	pstdout		11028639	0					
ANR	11028758	IfStatement	"if ( r_has_type ( pstdin , t_null ) )"		11028639	10					
ANR	11028759	Condition	"r_has_type ( pstdin , t_null )"	610:8:19979:20004	11028639	0	True				
ANR	11028760	CallExpression	"r_has_type ( pstdin , t_null )"		11028639	0					
ANR	11028761	Callee	r_has_type		11028639	0					
ANR	11028762	Identifier	r_has_type		11028639	0					
ANR	11028763	ArgumentList	pstdin		11028639	1					
ANR	11028764	Argument	pstdin		11028639	0					
ANR	11028765	Identifier	pstdin		11028639	0					
ANR	11028766	Argument	t_null		11028639	1					
ANR	11028767	Identifier	t_null		11028639	0					
ANR	11028768	CompoundStatement		20:36:581:581	11028639	1					
ANR	11028769	ExpressionStatement	"code = zget_stdin ( i_ctx_p , & s )"	611:8:20017:20047	11028639	0	True				
ANR	11028770	AssignmentExpression	"code = zget_stdin ( i_ctx_p , & s )"		11028639	0		=			
ANR	11028771	Identifier	code		11028639	0					
ANR	11028772	CallExpression	"zget_stdin ( i_ctx_p , & s )"		11028639	1					
ANR	11028773	Callee	zget_stdin		11028639	0					
ANR	11028774	Identifier	zget_stdin		11028639	0					
ANR	11028775	ArgumentList	i_ctx_p		11028639	1					
ANR	11028776	Argument	i_ctx_p		11028639	0					
ANR	11028777	Identifier	i_ctx_p		11028639	0					
ANR	11028778	Argument	& s		11028639	1					
ANR	11028779	UnaryOperationExpression	& s		11028639	0					
ANR	11028780	UnaryOperator	&		11028639	0					
ANR	11028781	Identifier	s		11028639	1					
ANR	11028782	IfStatement	if ( code < 0 )		11028639	1					
ANR	11028783	Condition	code < 0	612:12:20061:20068	11028639	0	True				
ANR	11028784	RelationalExpression	code < 0		11028639	0		<			
ANR	11028785	Identifier	code		11028639	0					
ANR	11028786	PrimaryExpression	0		11028639	1					
ANR	11028787	ReturnStatement	return code ;	613:12:20083:20094	11028639	1	True				
ANR	11028788	Identifier	code		11028639	0					
ANR	11028789	ExpressionStatement	pstdin = & ref_stdio [ 0 ]	614:8:20104:20126	11028639	2	True				
ANR	11028790	AssignmentExpression	pstdin = & ref_stdio [ 0 ]		11028639	0		=			
ANR	11028791	Identifier	pstdin		11028639	0					
ANR	11028792	UnaryOperationExpression	& ref_stdio [ 0 ]		11028639	1					
ANR	11028793	UnaryOperator	&		11028639	0					
ANR	11028794	ArrayIndexing	ref_stdio [ 0 ]		11028639	1					
ANR	11028795	Identifier	ref_stdio		11028639	0					
ANR	11028796	PrimaryExpression	0		11028639	1					
ANR	11028797	ElseStatement	else		11028639	0					
ANR	11028798	ExpressionStatement	"check_read_file ( i_ctx_p , s , pstdin )"	616:8:20147:20182	11028639	0	True				
ANR	11028799	CallExpression	"check_read_file ( i_ctx_p , s , pstdin )"		11028639	0					
ANR	11028800	Callee	check_read_file		11028639	0					
ANR	11028801	Identifier	check_read_file		11028639	0					
ANR	11028802	ArgumentList	i_ctx_p		11028639	1					
ANR	11028803	Argument	i_ctx_p		11028639	0					
ANR	11028804	Identifier	i_ctx_p		11028639	0					
ANR	11028805	Argument	s		11028639	1					
ANR	11028806	Identifier	s		11028639	0					
ANR	11028807	Argument	pstdin		11028639	2					
ANR	11028808	Identifier	pstdin		11028639	0					
ANR	11028809	ExpressionStatement	dmem = gs_imemory	617:4:20188:20205	11028639	11	True				
ANR	11028810	AssignmentExpression	dmem = gs_imemory		11028639	0		=			
ANR	11028811	Identifier	dmem		11028639	0					
ANR	11028812	Identifier	gs_imemory		11028639	1					
ANR	11028813	IfStatement	if ( local )		11028639	12					
ANR	11028814	Condition	local	618:8:20215:20219	11028639	0	True				
ANR	11028815	Identifier	local		11028639	0					
ANR	11028816	CompoundStatement		34:8:999:1027	11028639	1					
ANR	11028817	IdentifierDeclStatement	ref * puserdict ;	620:8:20281:20295	11028639	0	True				
ANR	11028818	IdentifierDecl	* puserdict		11028639	0					
ANR	11028819	IdentifierDeclType	ref *		11028639	0					
ANR	11028820	Identifier	puserdict		11028639	1					
ANR	11028821	IdentifierDeclStatement	uint userdict_size ;	621:8:20305:20323	11028639	1	True				
ANR	11028822	IdentifierDecl	userdict_size		11028639	0					
ANR	11028823	IdentifierDeclType	uint		11028639	0					
ANR	11028824	Identifier	userdict_size		11028639	1					
ANR	11028825	IdentifierDeclStatement	gs_memory_t * parent = iimemory_local -> non_gc_memory ;	622:8:20333:20384	11028639	2	True				
ANR	11028826	IdentifierDecl	* parent = iimemory_local -> non_gc_memory		11028639	0					
ANR	11028827	IdentifierDeclType	gs_memory_t *		11028639	0					
ANR	11028828	Identifier	parent		11028639	1					
ANR	11028829	AssignmentExpression	* parent = iimemory_local -> non_gc_memory		11028639	2		=			
ANR	11028830	Identifier	parent		11028639	0					
ANR	11028831	PtrMemberAccess	iimemory_local -> non_gc_memory		11028639	1					
ANR	11028832	Identifier	iimemory_local		11028639	0					
ANR	11028833	Identifier	non_gc_memory		11028639	1					
ANR	11028834	IdentifierDeclStatement	gs_ref_memory_t * lmem ;	623:8:20394:20415	11028639	3	True				
ANR	11028835	IdentifierDecl	* lmem		11028639	0					
ANR	11028836	IdentifierDeclType	gs_ref_memory_t *		11028639	0					
ANR	11028837	Identifier	lmem		11028639	1					
ANR	11028838	IdentifierDeclStatement	gs_ref_memory_t * lmem_stable ;	624:8:20425:20453	11028639	4	True				
ANR	11028839	IdentifierDecl	* lmem_stable		11028639	0					
ANR	11028840	IdentifierDeclType	gs_ref_memory_t *		11028639	0					
ANR	11028841	Identifier	lmem_stable		11028639	1					
ANR	11028842	IfStatement	"if ( dict_find_string ( systemdict , ""userdict"" , & puserdict ) <= 0 || ! r_has_type ( puserdict , t_dictionary ) )"		11028639	5					
ANR	11028843	Condition	"dict_find_string ( systemdict , ""userdict"" , & puserdict ) <= 0 || ! r_has_type ( puserdict , t_dictionary )"	626:12:20468:20576	11028639	0	True				
ANR	11028844	OrExpression	"dict_find_string ( systemdict , ""userdict"" , & puserdict ) <= 0 || ! r_has_type ( puserdict , t_dictionary )"		11028639	0		||			
ANR	11028845	RelationalExpression	"dict_find_string ( systemdict , ""userdict"" , & puserdict ) <= 0"		11028639	0		<=			
ANR	11028846	CallExpression	"dict_find_string ( systemdict , ""userdict"" , & puserdict )"		11028639	0					
ANR	11028847	Callee	dict_find_string		11028639	0					
ANR	11028848	Identifier	dict_find_string		11028639	0					
ANR	11028849	ArgumentList	systemdict		11028639	1					
ANR	11028850	Argument	systemdict		11028639	0					
ANR	11028851	Identifier	systemdict		11028639	0					
ANR	11028852	Argument	"""userdict"""		11028639	1					
ANR	11028853	PrimaryExpression	"""userdict"""		11028639	0					
ANR	11028854	Argument	& puserdict		11028639	2					
ANR	11028855	UnaryOperationExpression	& puserdict		11028639	0					
ANR	11028856	UnaryOperator	&		11028639	0					
ANR	11028857	Identifier	puserdict		11028639	1					
ANR	11028858	PrimaryExpression	0		11028639	1					
ANR	11028859	UnaryOperationExpression	"! r_has_type ( puserdict , t_dictionary )"		11028639	1					
ANR	11028860	UnaryOperator	!		11028639	0					
ANR	11028861	CallExpression	"r_has_type ( puserdict , t_dictionary )"		11028639	1					
ANR	11028862	Callee	r_has_type		11028639	0					
ANR	11028863	Identifier	r_has_type		11028639	0					
ANR	11028864	ArgumentList	puserdict		11028639	1					
ANR	11028865	Argument	puserdict		11028639	0					
ANR	11028866	Identifier	puserdict		11028639	0					
ANR	11028867	Argument	t_dictionary		11028639	1					
ANR	11028868	Identifier	t_dictionary		11028639	0					
ANR	11028869	ExpressionStatement	return_error ( gs_error_Fatal )	629:12:20604:20632	11028639	1	True				
ANR	11028870	CallExpression	return_error ( gs_error_Fatal )		11028639	0					
ANR	11028871	Callee	return_error		11028639	0					
ANR	11028872	Identifier	return_error		11028639	0					
ANR	11028873	ArgumentList	gs_error_Fatal		11028639	1					
ANR	11028874	Argument	gs_error_Fatal		11028639	0					
ANR	11028875	Identifier	gs_error_Fatal		11028639	0					
ANR	11028876	ExpressionStatement	old_userdict = * puserdict	630:8:20642:20667	11028639	6	True				
ANR	11028877	AssignmentExpression	old_userdict = * puserdict		11028639	0		=			
ANR	11028878	Identifier	old_userdict		11028639	0					
ANR	11028879	UnaryOperationExpression	* puserdict		11028639	1					
ANR	11028880	UnaryOperator	*		11028639	0					
ANR	11028881	Identifier	puserdict		11028639	1					
ANR	11028882	ExpressionStatement	userdict_size = dict_maxlength ( & old_userdict )	631:8:20677:20722	11028639	7	True				
ANR	11028883	AssignmentExpression	userdict_size = dict_maxlength ( & old_userdict )		11028639	0		=			
ANR	11028884	Identifier	userdict_size		11028639	0					
ANR	11028885	CallExpression	dict_maxlength ( & old_userdict )		11028639	1					
ANR	11028886	Callee	dict_maxlength		11028639	0					
ANR	11028887	Identifier	dict_maxlength		11028639	0					
ANR	11028888	ArgumentList	& old_userdict		11028639	1					
ANR	11028889	Argument	& old_userdict		11028639	0					
ANR	11028890	UnaryOperationExpression	& old_userdict		11028639	0					
ANR	11028891	UnaryOperator	&		11028639	0					
ANR	11028892	Identifier	old_userdict		11028639	1					
ANR	11028893	ExpressionStatement	"lmem = ialloc_alloc_state ( parent , iimemory_local -> clump_size )"	632:8:20732:20793	11028639	8	True				
ANR	11028894	AssignmentExpression	"lmem = ialloc_alloc_state ( parent , iimemory_local -> clump_size )"		11028639	0		=			
ANR	11028895	Identifier	lmem		11028639	0					
ANR	11028896	CallExpression	"ialloc_alloc_state ( parent , iimemory_local -> clump_size )"		11028639	1					
ANR	11028897	Callee	ialloc_alloc_state		11028639	0					
ANR	11028898	Identifier	ialloc_alloc_state		11028639	0					
ANR	11028899	ArgumentList	parent		11028639	1					
ANR	11028900	Argument	parent		11028639	0					
ANR	11028901	Identifier	parent		11028639	0					
ANR	11028902	Argument	iimemory_local -> clump_size		11028639	1					
ANR	11028903	PtrMemberAccess	iimemory_local -> clump_size		11028639	0					
ANR	11028904	Identifier	iimemory_local		11028639	0					
ANR	11028905	Identifier	clump_size		11028639	1					
ANR	11028906	ExpressionStatement	"lmem_stable = ialloc_alloc_state ( parent , iimemory_local -> clump_size )"	633:8:20803:20871	11028639	9	True				
ANR	11028907	AssignmentExpression	"lmem_stable = ialloc_alloc_state ( parent , iimemory_local -> clump_size )"		11028639	0		=			
ANR	11028908	Identifier	lmem_stable		11028639	0					
ANR	11028909	CallExpression	"ialloc_alloc_state ( parent , iimemory_local -> clump_size )"		11028639	1					
ANR	11028910	Callee	ialloc_alloc_state		11028639	0					
ANR	11028911	Identifier	ialloc_alloc_state		11028639	0					
ANR	11028912	ArgumentList	parent		11028639	1					
ANR	11028913	Argument	parent		11028639	0					
ANR	11028914	Identifier	parent		11028639	0					
ANR	11028915	Argument	iimemory_local -> clump_size		11028639	1					
ANR	11028916	PtrMemberAccess	iimemory_local -> clump_size		11028639	0					
ANR	11028917	Identifier	iimemory_local		11028639	0					
ANR	11028918	Identifier	clump_size		11028639	1					
ANR	11028919	IfStatement	if ( lmem == 0 || lmem_stable == 0 )		11028639	10					
ANR	11028920	Condition	lmem == 0 || lmem_stable == 0	634:12:20885:20913	11028639	0	True				
ANR	11028921	OrExpression	lmem == 0 || lmem_stable == 0		11028639	0		||			
ANR	11028922	EqualityExpression	lmem == 0		11028639	0		==			
ANR	11028923	Identifier	lmem		11028639	0					
ANR	11028924	PrimaryExpression	0		11028639	1					
ANR	11028925	EqualityExpression	lmem_stable == 0		11028639	1		==			
ANR	11028926	Identifier	lmem_stable		11028639	0					
ANR	11028927	PrimaryExpression	0		11028639	1					
ANR	11028928	CompoundStatement		44:43:1490:1490	11028639	1					
ANR	11028929	ExpressionStatement	"gs_free_object ( parent , lmem_stable , ""do_fork"" )"	635:12:20930:20976	11028639	0	True				
ANR	11028930	CallExpression	"gs_free_object ( parent , lmem_stable , ""do_fork"" )"		11028639	0					
ANR	11028931	Callee	gs_free_object		11028639	0					
ANR	11028932	Identifier	gs_free_object		11028639	0					
ANR	11028933	ArgumentList	parent		11028639	1					
ANR	11028934	Argument	parent		11028639	0					
ANR	11028935	Identifier	parent		11028639	0					
ANR	11028936	Argument	lmem_stable		11028639	1					
ANR	11028937	Identifier	lmem_stable		11028639	0					
ANR	11028938	Argument	"""do_fork"""		11028639	2					
ANR	11028939	PrimaryExpression	"""do_fork"""		11028639	0					
ANR	11028940	ExpressionStatement	"gs_free_object ( parent , lmem , ""do_fork"" )"	636:12:20990:21029	11028639	1	True				
ANR	11028941	CallExpression	"gs_free_object ( parent , lmem , ""do_fork"" )"		11028639	0					
ANR	11028942	Callee	gs_free_object		11028639	0					
ANR	11028943	Identifier	gs_free_object		11028639	0					
ANR	11028944	ArgumentList	parent		11028639	1					
ANR	11028945	Argument	parent		11028639	0					
ANR	11028946	Identifier	parent		11028639	0					
ANR	11028947	Argument	lmem		11028639	1					
ANR	11028948	Identifier	lmem		11028639	0					
ANR	11028949	Argument	"""do_fork"""		11028639	2					
ANR	11028950	PrimaryExpression	"""do_fork"""		11028639	0					
ANR	11028951	ExpressionStatement	return_error ( gs_error_VMerror )	637:12:21043:21073	11028639	2	True				
ANR	11028952	CallExpression	return_error ( gs_error_VMerror )		11028639	0					
ANR	11028953	Callee	return_error		11028639	0					
ANR	11028954	Identifier	return_error		11028639	0					
ANR	11028955	ArgumentList	gs_error_VMerror		11028639	1					
ANR	11028956	Argument	gs_error_VMerror		11028639	0					
ANR	11028957	Identifier	gs_error_VMerror		11028639	0					
ANR	11028958	ExpressionStatement	lmem -> space = avm_local	639:8:21093:21116	11028639	11	True				
ANR	11028959	AssignmentExpression	lmem -> space = avm_local		11028639	0		=			
ANR	11028960	PtrMemberAccess	lmem -> space		11028639	0					
ANR	11028961	Identifier	lmem		11028639	0					
ANR	11028962	Identifier	space		11028639	1					
ANR	11028963	Identifier	avm_local		11028639	1					
ANR	11028964	ExpressionStatement	lmem_stable -> space = avm_local	640:8:21126:21156	11028639	12	True				
ANR	11028965	AssignmentExpression	lmem_stable -> space = avm_local		11028639	0		=			
ANR	11028966	PtrMemberAccess	lmem_stable -> space		11028639	0					
ANR	11028967	Identifier	lmem_stable		11028639	0					
ANR	11028968	Identifier	space		11028639	1					
ANR	11028969	Identifier	avm_local		11028639	1					
ANR	11028970	ExpressionStatement	lmem -> stable_memory = ( gs_memory_t * ) lmem_stable	641:8:21166:21214	11028639	13	True				
ANR	11028971	AssignmentExpression	lmem -> stable_memory = ( gs_memory_t * ) lmem_stable		11028639	0		=			
ANR	11028972	PtrMemberAccess	lmem -> stable_memory		11028639	0					
ANR	11028973	Identifier	lmem		11028639	0					
ANR	11028974	Identifier	stable_memory		11028639	1					
ANR	11028975	CastExpression	( gs_memory_t * ) lmem_stable		11028639	1					
ANR	11028976	CastTarget	gs_memory_t *		11028639	0					
ANR	11028977	Identifier	lmem_stable		11028639	1					
ANR	11028978	ExpressionStatement	dmem . space_local = lmem	642:8:21224:21247	11028639	14	True				
ANR	11028979	AssignmentExpression	dmem . space_local = lmem		11028639	0		=			
ANR	11028980	MemberAccess	dmem . space_local		11028639	0					
ANR	11028981	Identifier	dmem		11028639	0					
ANR	11028982	Identifier	space_local		11028639	1					
ANR	11028983	Identifier	lmem		11028639	1					
ANR	11028984	ExpressionStatement	"code = context_create ( psched , & pctx , & dmem , & pcur -> state , false )"	643:8:21257:21321	11028639	15	True				
ANR	11028985	AssignmentExpression	"code = context_create ( psched , & pctx , & dmem , & pcur -> state , false )"		11028639	0		=			
ANR	11028986	Identifier	code		11028639	0					
ANR	11028987	CallExpression	"context_create ( psched , & pctx , & dmem , & pcur -> state , false )"		11028639	1					
ANR	11028988	Callee	context_create		11028639	0					
ANR	11028989	Identifier	context_create		11028639	0					
ANR	11028990	ArgumentList	psched		11028639	1					
ANR	11028991	Argument	psched		11028639	0					
ANR	11028992	Identifier	psched		11028639	0					
ANR	11028993	Argument	& pctx		11028639	1					
ANR	11028994	UnaryOperationExpression	& pctx		11028639	0					
ANR	11028995	UnaryOperator	&		11028639	0					
ANR	11028996	Identifier	pctx		11028639	1					
ANR	11028997	Argument	& dmem		11028639	2					
ANR	11028998	UnaryOperationExpression	& dmem		11028639	0					
ANR	11028999	UnaryOperator	&		11028639	0					
ANR	11029000	Identifier	dmem		11028639	1					
ANR	11029001	Argument	& pcur -> state		11028639	3					
ANR	11029002	UnaryOperationExpression	& pcur -> state		11028639	0					
ANR	11029003	UnaryOperator	&		11028639	0					
ANR	11029004	PtrMemberAccess	pcur -> state		11028639	1					
ANR	11029005	Identifier	pcur		11028639	0					
ANR	11029006	Identifier	state		11028639	1					
ANR	11029007	Argument	false		11028639	4					
ANR	11029008	Identifier	false		11028639	0					
ANR	11029009	IfStatement	if ( code < 0 )		11028639	16					
ANR	11029010	Condition	code < 0	644:12:21335:21342	11028639	0	True				
ANR	11029011	RelationalExpression	code < 0		11028639	0		<			
ANR	11029012	Identifier	code		11028639	0					
ANR	11029013	PrimaryExpression	0		11028639	1					
ANR	11029014	CompoundStatement		54:22:1919:1919	11028639	1					
ANR	11029015	ReturnStatement	return code ;	646:12:21397:21408	11028639	0	True				
ANR	11029016	Identifier	code		11028639	0					
ANR	11029017	ExpressionStatement	"code = dict_alloc ( lmem , userdict_size , & new_userdict )"	652:8:21582:21635	11028639	17	True				
ANR	11029018	AssignmentExpression	"code = dict_alloc ( lmem , userdict_size , & new_userdict )"		11028639	0		=			
ANR	11029019	Identifier	code		11028639	0					
ANR	11029020	CallExpression	"dict_alloc ( lmem , userdict_size , & new_userdict )"		11028639	1					
ANR	11029021	Callee	dict_alloc		11028639	0					
ANR	11029022	Identifier	dict_alloc		11028639	0					
ANR	11029023	ArgumentList	lmem		11028639	1					
ANR	11029024	Argument	lmem		11028639	0					
ANR	11029025	Identifier	lmem		11028639	0					
ANR	11029026	Argument	userdict_size		11028639	1					
ANR	11029027	Identifier	userdict_size		11028639	0					
ANR	11029028	Argument	& new_userdict		11028639	2					
ANR	11029029	UnaryOperationExpression	& new_userdict		11028639	0					
ANR	11029030	UnaryOperator	&		11028639	0					
ANR	11029031	Identifier	new_userdict		11028639	1					
ANR	11029032	IfStatement	if ( code < 0 )		11028639	18					
ANR	11029033	Condition	code < 0	653:12:21649:21656	11028639	0	True				
ANR	11029034	RelationalExpression	code < 0		11028639	0		<			
ANR	11029035	Identifier	code		11028639	0					
ANR	11029036	PrimaryExpression	0		11028639	1					
ANR	11029037	CompoundStatement		63:22:2233:2233	11028639	1					
ANR	11029038	ExpressionStatement	context_destroy ( pctx )	654:12:21673:21694	11028639	0	True				
ANR	11029039	CallExpression	context_destroy ( pctx )		11028639	0					
ANR	11029040	Callee	context_destroy		11028639	0					
ANR	11029041	Identifier	context_destroy		11028639	0					
ANR	11029042	ArgumentList	pctx		11028639	1					
ANR	11029043	Argument	pctx		11028639	0					
ANR	11029044	Identifier	pctx		11028639	0					
ANR	11029045	ReturnStatement	return code ;	656:12:21746:21757	11028639	1	True				
ANR	11029046	Identifier	code		11028639	0					
ANR	11029047	ElseStatement	else		11028639	0					
ANR	11029048	CompoundStatement		68:11:2354:2354	11028639	0					
ANR	11029049	ExpressionStatement	"code = context_create ( psched , & pctx , & dmem , & pcur -> state , false )"	660:8:21831:21895	11028639	0	True				
ANR	11029050	AssignmentExpression	"code = context_create ( psched , & pctx , & dmem , & pcur -> state , false )"		11028639	0		=			
ANR	11029051	Identifier	code		11028639	0					
ANR	11029052	CallExpression	"context_create ( psched , & pctx , & dmem , & pcur -> state , false )"		11028639	1					
ANR	11029053	Callee	context_create		11028639	0					
ANR	11029054	Identifier	context_create		11028639	0					
ANR	11029055	ArgumentList	psched		11028639	1					
ANR	11029056	Argument	psched		11028639	0					
ANR	11029057	Identifier	psched		11028639	0					
ANR	11029058	Argument	& pctx		11028639	1					
ANR	11029059	UnaryOperationExpression	& pctx		11028639	0					
ANR	11029060	UnaryOperator	&		11028639	0					
ANR	11029061	Identifier	pctx		11028639	1					
ANR	11029062	Argument	& dmem		11028639	2					
ANR	11029063	UnaryOperationExpression	& dmem		11028639	0					
ANR	11029064	UnaryOperator	&		11028639	0					
ANR	11029065	Identifier	dmem		11028639	1					
ANR	11029066	Argument	& pcur -> state		11028639	3					
ANR	11029067	UnaryOperationExpression	& pcur -> state		11028639	0					
ANR	11029068	UnaryOperator	&		11028639	0					
ANR	11029069	PtrMemberAccess	pcur -> state		11028639	1					
ANR	11029070	Identifier	pcur		11028639	0					
ANR	11029071	Identifier	state		11028639	1					
ANR	11029072	Argument	false		11028639	4					
ANR	11029073	Identifier	false		11028639	0					
ANR	11029074	IfStatement	if ( code < 0 )		11028639	1					
ANR	11029075	Condition	code < 0	661:12:21909:21916	11028639	0	True				
ANR	11029076	RelationalExpression	code < 0		11028639	0		<			
ANR	11029077	Identifier	code		11028639	0					
ANR	11029078	PrimaryExpression	0		11028639	1					
ANR	11029079	CompoundStatement		71:22:2493:2493	11028639	1					
ANR	11029080	ReturnStatement	return code ;	663:12:21971:21982	11028639	0	True				
ANR	11029081	Identifier	code		11028639	0					
ANR	11029082	CompoundStatement		81:12:2754:2774	11028639	2					
ANR	11029083	IdentifierDeclStatement	int n ;	670:12:22161:22166	11028639	0	True				
ANR	11029084	IdentifierDecl	n		11028639	0					
ANR	11029085	IdentifierDeclType	int		11028639	0					
ANR	11029086	Identifier	n		11028639	1					
ANR	11029087	IdentifierDeclStatement	const gs_gstate * old ;	671:12:22180:22200	11028639	1	True				
ANR	11029088	IdentifierDecl	* old		11028639	0					
ANR	11029089	IdentifierDeclType	const gs_gstate *		11028639	0					
ANR	11029090	Identifier	old		11028639	1					
ANR	11029091	Statement	gs_gstate	672:12:22214:22222	11028639	2	True				
ANR	11029092	Statement	*	672:22:22224:22224	11028639	3	True				
ANR	11029093	Statement	new	672:23:22225:22227	11028639	4	True				
ANR	11029094	ExpressionStatement		672:26:22228:22228	11028639	5	True				
ANR	11029095	ForStatement	"for ( n = 0 , old = igs ; old != 0 ; old = gs_gstate_saved ( old ) )"		11028639	6					
ANR	11029096	ForInit	"n = 0 , old = igs ;"	674:17:22248:22264	11028639	0	True				
ANR	11029097	Expression	"n = 0 , old = igs"		11028639	0					
ANR	11029098	AssignmentExpression	n = 0		11028639	0		=			
ANR	11029099	Identifier	n		11028639	0					
ANR	11029100	PrimaryExpression	0		11028639	1					
ANR	11029101	AssignmentExpression	old = igs		11028639	1		=			
ANR	11029102	Identifier	old		11028639	0					
ANR	11029103	Identifier	igs		11028639	1					
ANR	11029104	Condition	old != 0	674:35:22266:22273	11028639	1	True				
ANR	11029105	EqualityExpression	old != 0		11028639	0		!=			
ANR	11029106	Identifier	old		11028639	0					
ANR	11029107	PrimaryExpression	0		11028639	1					
ANR	11029108	AssignmentExpression	old = gs_gstate_saved ( old )	674:45:22276:22301	11028639	2	True	=			
ANR	11029109	Identifier	old		11028639	0					
ANR	11029110	CallExpression	gs_gstate_saved ( old )		11028639	1					
ANR	11029111	Callee	gs_gstate_saved		11028639	0					
ANR	11029112	Identifier	gs_gstate_saved		11028639	0					
ANR	11029113	ArgumentList	old		11028639	1					
ANR	11029114	Argument	old		11028639	0					
ANR	11029115	Identifier	old		11028639	0					
ANR	11029116	ExpressionStatement	++ n	675:16:22320:22323	11028639	3	True				
ANR	11029117	UnaryExpression	++ n		11028639	0					
ANR	11029118	IncDec	++		11028639	0					
ANR	11029119	Identifier	n		11028639	1					
ANR	11029120	ForStatement	for ( old = pctx -> state . pgs ; old != 0 ; old = gs_gstate_saved ( old ) )		11028639	7					
ANR	11029121	ForInit	old = pctx -> state . pgs ;	676:17:22342:22363	11028639	0	True				
ANR	11029122	AssignmentExpression	old = pctx -> state . pgs		11028639	0		=			
ANR	11029123	Identifier	old		11028639	0					
ANR	11029124	MemberAccess	pctx -> state . pgs		11028639	1					
ANR	11029125	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029126	Identifier	pctx		11028639	0					
ANR	11029127	Identifier	state		11028639	1					
ANR	11029128	Identifier	pgs		11028639	1					
ANR	11029129	Condition	old != 0	676:40:22365:22372	11028639	1	True				
ANR	11029130	EqualityExpression	old != 0		11028639	0		!=			
ANR	11029131	Identifier	old		11028639	0					
ANR	11029132	PrimaryExpression	0		11028639	1					
ANR	11029133	AssignmentExpression	old = gs_gstate_saved ( old )	676:50:22375:22400	11028639	2	True	=			
ANR	11029134	Identifier	old		11028639	0					
ANR	11029135	CallExpression	gs_gstate_saved ( old )		11028639	1					
ANR	11029136	Callee	gs_gstate_saved		11028639	0					
ANR	11029137	Identifier	gs_gstate_saved		11028639	0					
ANR	11029138	ArgumentList	old		11028639	1					
ANR	11029139	Argument	old		11028639	0					
ANR	11029140	Identifier	old		11028639	0					
ANR	11029141	ExpressionStatement	-- n	677:16:22419:22422	11028639	3	True				
ANR	11029142	UnaryExpression	-- n		11028639	0					
ANR	11029143	IncDec	--		11028639	0					
ANR	11029144	Identifier	n		11028639	1					
ANR	11029145	ForStatement	for ( ; n > 0 && code >= 0 ; -- n )		11028639	8					
ANR	11029146	Condition	n > 0 && code >= 0	678:19:22443:22460	11028639	0	True				
ANR	11029147	AndExpression	n > 0 && code >= 0		11028639	0		&&			
ANR	11029148	RelationalExpression	n > 0		11028639	0		>			
ANR	11029149	Identifier	n		11028639	0					
ANR	11029150	PrimaryExpression	0		11028639	1					
ANR	11029151	RelationalExpression	code >= 0		11028639	1		>=			
ANR	11029152	Identifier	code		11028639	0					
ANR	11029153	PrimaryExpression	0		11028639	1					
ANR	11029154	UnaryExpression	-- n	678:39:22463:22465	11028639	1	True				
ANR	11029155	IncDec	--		11028639	0					
ANR	11029156	Identifier	n		11028639	1					
ANR	11029157	ExpressionStatement	code = gs_gsave ( pctx -> state . pgs )	679:16:22484:22516	11028639	2	True				
ANR	11029158	AssignmentExpression	code = gs_gsave ( pctx -> state . pgs )		11028639	0		=			
ANR	11029159	Identifier	code		11028639	0					
ANR	11029160	CallExpression	gs_gsave ( pctx -> state . pgs )		11028639	1					
ANR	11029161	Callee	gs_gsave		11028639	0					
ANR	11029162	Identifier	gs_gsave		11028639	0					
ANR	11029163	ArgumentList	pctx -> state . pgs		11028639	1					
ANR	11029164	Argument	pctx -> state . pgs		11028639	0					
ANR	11029165	MemberAccess	pctx -> state . pgs		11028639	0					
ANR	11029166	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029167	Identifier	pctx		11028639	0					
ANR	11029168	Identifier	state		11028639	1					
ANR	11029169	Identifier	pgs		11028639	1					
ANR	11029170	IfStatement	if ( code < 0 )		11028639	9					
ANR	11029171	Condition	code < 0	680:16:22534:22541	11028639	0	True				
ANR	11029172	RelationalExpression	code < 0		11028639	0		<			
ANR	11029173	Identifier	code		11028639	0					
ANR	11029174	PrimaryExpression	0		11028639	1					
ANR	11029175	CompoundStatement		90:26:3118:3118	11028639	1					
ANR	11029176	ReturnStatement	return code ;	682:16:22598:22609	11028639	0	True				
ANR	11029177	Identifier	code		11028639	0					
ANR	11029178	Statement	for	684:12:22637:22639	11028639	10	True				
ANR	11029179	Statement	(	684:16:22641:22641	11028639	11	True				
ANR	11029180	Statement	old	684:17:22642:22644	11028639	12	True				
ANR	11029181	Statement	=	684:21:22646:22646	11028639	13	True				
ANR	11029182	Statement	igs	684:23:22648:22650	11028639	14	True				
ANR	11029183	Statement	","	684:26:22651:22651	11028639	15	True				
ANR	11029184	Statement	new	684:28:22653:22655	11028639	16	True				
ANR	11029185	Statement	=	684:32:22657:22657	11028639	17	True				
ANR	11029186	ExpressionStatement	pctx -> state . pgs	684:34:22659:22674	11028639	18	True				
ANR	11029187	MemberAccess	pctx -> state . pgs		11028639	0					
ANR	11029188	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029189	Identifier	pctx		11028639	0					
ANR	11029190	Identifier	state		11028639	1					
ANR	11029191	Identifier	pgs		11028639	1					
ANR	11029192	ExpressionStatement	old != 0 && code >= 0	685:17:22693:22735	11028639	19	True				
ANR	11029193	AndExpression	old != 0 && code >= 0		11028639	0		&&			
ANR	11029194	EqualityExpression	old != 0		11028639	0		!=			
ANR	11029195	Identifier	old		11028639	0					
ANR	11029196	PrimaryExpression	0		11028639	1					
ANR	11029197	RelationalExpression	code >= 0		11028639	1		>=			
ANR	11029198	Identifier	code		11028639	0					
ANR	11029199	PrimaryExpression	0		11028639	1					
ANR	11029200	Statement	old	686:17:22754:22756	11028639	20	True				
ANR	11029201	Statement	=	686:21:22758:22758	11028639	21	True				
ANR	11029202	Statement	gs_gstate_saved	686:23:22760:22774	11028639	22	True				
ANR	11029203	Statement	(	686:38:22775:22775	11028639	23	True				
ANR	11029204	Statement	old	686:39:22776:22778	11028639	24	True				
ANR	11029205	Statement	)	686:42:22779:22779	11028639	25	True				
ANR	11029206	Statement	","	686:43:22780:22780	11028639	26	True				
ANR	11029207	Statement	new	686:45:22782:22784	11028639	27	True				
ANR	11029208	Statement	=	686:49:22786:22786	11028639	28	True				
ANR	11029209	Statement	gs_gstate_saved	686:51:22788:22802	11028639	29	True				
ANR	11029210	Statement	(	686:66:22803:22803	11028639	30	True				
ANR	11029211	Statement	new	686:67:22804:22806	11028639	31	True				
ANR	11029212	Statement	)	686:70:22807:22807	11028639	32	True				
ANR	11029213	Statement	)	687:16:22825:22825	11028639	33	True				
ANR	11029214	Statement	code	688:16:22843:22846	11028639	34	True				
ANR	11029215	Statement	=	688:21:22848:22848	11028639	35	True				
ANR	11029216	Statement	gs_setgstate	688:23:22850:22861	11028639	36	True				
ANR	11029217	Statement	(	688:35:22862:22862	11028639	37	True				
ANR	11029218	Statement	new	688:36:22863:22865	11028639	38	True				
ANR	11029219	Statement	","	688:39:22866:22866	11028639	39	True				
ANR	11029220	Statement	old	688:41:22868:22870	11028639	40	True				
ANR	11029221	Statement	)	688:44:22871:22871	11028639	41	True				
ANR	11029222	ExpressionStatement		688:45:22872:22872	11028639	42	True				
ANR	11029223	IfStatement	if ( code < 0 )		11028639	43					
ANR	11029224	Condition	code < 0	689:16:22890:22897	11028639	0	True				
ANR	11029225	RelationalExpression	code < 0		11028639	0		<			
ANR	11029226	Identifier	code		11028639	0					
ANR	11029227	PrimaryExpression	0		11028639	1					
ANR	11029228	CompoundStatement		99:26:3474:3474	11028639	1					
ANR	11029229	ReturnStatement	return code ;	691:16:22954:22965	11028639	0	True				
ANR	11029230	Identifier	code		11028639	0					
ANR	11029231	ExpressionStatement	zcontext_init ( & pctx -> state )	695:4:23001:23028	11028639	13	True				
ANR	11029232	CallExpression	zcontext_init ( & pctx -> state )		11028639	0					
ANR	11029233	Callee	zcontext_init		11028639	0					
ANR	11029234	Identifier	zcontext_init		11028639	0					
ANR	11029235	ArgumentList	& pctx -> state		11028639	1					
ANR	11029236	Argument	& pctx -> state		11028639	0					
ANR	11029237	UnaryOperationExpression	& pctx -> state		11028639	0					
ANR	11029238	UnaryOperator	&		11028639	0					
ANR	11029239	PtrMemberAccess	pctx -> state		11028639	1					
ANR	11029240	Identifier	pctx		11028639	0					
ANR	11029241	Identifier	state		11028639	1					
ANR	11029242	ExpressionStatement	interval = reschedule_interval	697:4:23035:23065	11028639	14	True				
ANR	11029243	AssignmentExpression	interval = reschedule_interval		11028639	0		=			
ANR	11029244	Identifier	interval		11028639	0					
ANR	11029245	Identifier	reschedule_interval		11028639	1					
ANR	11029246	IfStatement	if ( interval < minimum_reschedule_interval )		11028639	15					
ANR	11029247	Condition	interval < minimum_reschedule_interval	698:8:23075:23112	11028639	0	True				
ANR	11029248	RelationalExpression	interval < minimum_reschedule_interval		11028639	0		<			
ANR	11029249	Identifier	interval		11028639	0					
ANR	11029250	Identifier	minimum_reschedule_interval		11028639	1					
ANR	11029251	ExpressionStatement	interval = default_reschedule_interval	699:8:23123:23161	11028639	1	True				
ANR	11029252	AssignmentExpression	interval = default_reschedule_interval		11028639	0		=			
ANR	11029253	Identifier	interval		11028639	0					
ANR	11029254	Identifier	default_reschedule_interval		11028639	1					
ANR	11029255	ExpressionStatement	pctx -> state . reschedule_proc = ctx_reschedule	701:4:23172:23216	11028639	16	True				
ANR	11029256	AssignmentExpression	pctx -> state . reschedule_proc = ctx_reschedule		11028639	0		=			
ANR	11029257	MemberAccess	pctx -> state . reschedule_proc		11028639	0					
ANR	11029258	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029259	Identifier	pctx		11028639	0					
ANR	11029260	Identifier	state		11028639	1					
ANR	11029261	Identifier	reschedule_proc		11028639	1					
ANR	11029262	Identifier	ctx_reschedule		11028639	1					
ANR	11029263	ExpressionStatement	pctx -> state . time_slice_proc = ctx_time_slice	702:4:23222:23266	11028639	17	True				
ANR	11029264	AssignmentExpression	pctx -> state . time_slice_proc = ctx_time_slice		11028639	0		=			
ANR	11029265	MemberAccess	pctx -> state . time_slice_proc		11028639	0					
ANR	11029266	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029267	Identifier	pctx		11028639	0					
ANR	11029268	Identifier	state		11028639	1					
ANR	11029269	Identifier	time_slice_proc		11028639	1					
ANR	11029270	Identifier	ctx_time_slice		11028639	1					
ANR	11029271	ExpressionStatement	pctx -> state . time_slice_ticks = interval	703:4:23272:23311	11028639	18	True				
ANR	11029272	AssignmentExpression	pctx -> state . time_slice_ticks = interval		11028639	0		=			
ANR	11029273	MemberAccess	pctx -> state . time_slice_ticks		11028639	0					
ANR	11029274	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029275	Identifier	pctx		11028639	0					
ANR	11029276	Identifier	state		11028639	1					
ANR	11029277	Identifier	time_slice_ticks		11028639	1					
ANR	11029278	Identifier	interval		11028639	1					
ANR	11029279	ExpressionStatement	pctx -> state . op_array_table_global = i_ctx_p -> op_array_table_global	705:4:23318:23384	11028639	19	True				
ANR	11029280	AssignmentExpression	pctx -> state . op_array_table_global = i_ctx_p -> op_array_table_global		11028639	0		=			
ANR	11029281	MemberAccess	pctx -> state . op_array_table_global		11028639	0					
ANR	11029282	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029283	Identifier	pctx		11028639	0					
ANR	11029284	Identifier	state		11028639	1					
ANR	11029285	Identifier	op_array_table_global		11028639	1					
ANR	11029286	PtrMemberAccess	i_ctx_p -> op_array_table_global		11028639	1					
ANR	11029287	Identifier	i_ctx_p		11028639	0					
ANR	11029288	Identifier	op_array_table_global		11028639	1					
ANR	11029289	ExpressionStatement	pctx -> state . op_array_table_local = i_ctx_p -> op_array_table_local	706:4:23390:23455	11028639	20	True				
ANR	11029290	AssignmentExpression	pctx -> state . op_array_table_local = i_ctx_p -> op_array_table_local		11028639	0		=			
ANR	11029291	MemberAccess	pctx -> state . op_array_table_local		11028639	0					
ANR	11029292	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029293	Identifier	pctx		11028639	0					
ANR	11029294	Identifier	state		11028639	1					
ANR	11029295	Identifier	op_array_table_local		11028639	1					
ANR	11029296	PtrMemberAccess	i_ctx_p -> op_array_table_local		11028639	1					
ANR	11029297	Identifier	i_ctx_p		11028639	0					
ANR	11029298	Identifier	op_array_table_local		11028639	1					
ANR	11029299	ExpressionStatement	pctx -> state . language_level = i_ctx_p -> language_level	707:4:23461:23513	11028639	21	True				
ANR	11029300	AssignmentExpression	pctx -> state . language_level = i_ctx_p -> language_level		11028639	0		=			
ANR	11029301	MemberAccess	pctx -> state . language_level		11028639	0					
ANR	11029302	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029303	Identifier	pctx		11028639	0					
ANR	11029304	Identifier	state		11028639	1					
ANR	11029305	Identifier	language_level		11028639	1					
ANR	11029306	PtrMemberAccess	i_ctx_p -> language_level		11028639	1					
ANR	11029307	Identifier	i_ctx_p		11028639	0					
ANR	11029308	Identifier	language_level		11028639	1					
ANR	11029309	ExpressionStatement	pctx -> state . dict_stack . min_size = idict_stack . min_size	708:4:23519:23573	11028639	22	True				
ANR	11029310	AssignmentExpression	pctx -> state . dict_stack . min_size = idict_stack . min_size		11028639	0		=			
ANR	11029311	MemberAccess	pctx -> state . dict_stack . min_size		11028639	0					
ANR	11029312	MemberAccess	pctx -> state . dict_stack		11028639	0					
ANR	11029313	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029314	Identifier	pctx		11028639	0					
ANR	11029315	Identifier	state		11028639	1					
ANR	11029316	Identifier	dict_stack		11028639	1					
ANR	11029317	Identifier	min_size		11028639	1					
ANR	11029318	MemberAccess	idict_stack . min_size		11028639	1					
ANR	11029319	Identifier	idict_stack		11028639	0					
ANR	11029320	Identifier	min_size		11028639	1					
ANR	11029321	ExpressionStatement	pctx -> state . dict_stack . userdict_index = idict_stack . userdict_index	709:4:23579:23645	11028639	23	True				
ANR	11029322	AssignmentExpression	pctx -> state . dict_stack . userdict_index = idict_stack . userdict_index		11028639	0		=			
ANR	11029323	MemberAccess	pctx -> state . dict_stack . userdict_index		11028639	0					
ANR	11029324	MemberAccess	pctx -> state . dict_stack		11028639	0					
ANR	11029325	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029326	Identifier	pctx		11028639	0					
ANR	11029327	Identifier	state		11028639	1					
ANR	11029328	Identifier	dict_stack		11028639	1					
ANR	11029329	Identifier	userdict_index		11028639	1					
ANR	11029330	MemberAccess	idict_stack . userdict_index		11028639	1					
ANR	11029331	Identifier	idict_stack		11028639	0					
ANR	11029332	Identifier	userdict_index		11028639	1					
ANR	11029333	ExpressionStatement	pctx -> state . stdio [ 0 ] = * pstdin	710:4:23651:23681	11028639	24	True				
ANR	11029334	AssignmentExpression	pctx -> state . stdio [ 0 ] = * pstdin		11028639	0		=			
ANR	11029335	ArrayIndexing	pctx -> state . stdio [ 0 ]		11028639	0					
ANR	11029336	MemberAccess	pctx -> state . stdio		11028639	0					
ANR	11029337	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029338	Identifier	pctx		11028639	0					
ANR	11029339	Identifier	state		11028639	1					
ANR	11029340	Identifier	stdio		11028639	1					
ANR	11029341	PrimaryExpression	0		11028639	1					
ANR	11029342	UnaryOperationExpression	* pstdin		11028639	1					
ANR	11029343	UnaryOperator	*		11028639	0					
ANR	11029344	Identifier	pstdin		11028639	1					
ANR	11029345	ExpressionStatement	pctx -> state . stdio [ 1 ] = * pstdout	711:4:23687:23718	11028639	25	True				
ANR	11029346	AssignmentExpression	pctx -> state . stdio [ 1 ] = * pstdout		11028639	0		=			
ANR	11029347	ArrayIndexing	pctx -> state . stdio [ 1 ]		11028639	0					
ANR	11029348	MemberAccess	pctx -> state . stdio		11028639	0					
ANR	11029349	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029350	Identifier	pctx		11028639	0					
ANR	11029351	Identifier	state		11028639	1					
ANR	11029352	Identifier	stdio		11028639	1					
ANR	11029353	PrimaryExpression	1		11028639	1					
ANR	11029354	UnaryOperationExpression	* pstdout		11028639	1					
ANR	11029355	UnaryOperator	*		11028639	0					
ANR	11029356	Identifier	pstdout		11028639	1					
ANR	11029357	ExpressionStatement	pctx -> state . stdio [ 2 ] = pcur -> state . stdio [ 2 ]	712:4:23724:23767	11028639	26	True				
ANR	11029358	AssignmentExpression	pctx -> state . stdio [ 2 ] = pcur -> state . stdio [ 2 ]		11028639	0		=			
ANR	11029359	ArrayIndexing	pctx -> state . stdio [ 2 ]		11028639	0					
ANR	11029360	MemberAccess	pctx -> state . stdio		11028639	0					
ANR	11029361	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029362	Identifier	pctx		11028639	0					
ANR	11029363	Identifier	state		11028639	1					
ANR	11029364	Identifier	stdio		11028639	1					
ANR	11029365	PrimaryExpression	2		11028639	1					
ANR	11029366	ArrayIndexing	pcur -> state . stdio [ 2 ]		11028639	1					
ANR	11029367	MemberAccess	pcur -> state . stdio		11028639	0					
ANR	11029368	PtrMemberAccess	pcur -> state		11028639	0					
ANR	11029369	Identifier	pcur		11028639	0					
ANR	11029370	Identifier	state		11028639	1					
ANR	11029371	Identifier	stdio		11028639	1					
ANR	11029372	PrimaryExpression	2		11028639	1					
ANR	11029373	CompoundStatement		127:8:4520:4565	11028639	27					
ANR	11029374	IdentifierDeclStatement	ref_stack_t * dstack = ( ref_stack_t * ) & pctx -> state . dict_stack ;	715:8:23828:23888	11028639	0	True				
ANR	11029375	IdentifierDecl	* dstack = ( ref_stack_t * ) & pctx -> state . dict_stack		11028639	0					
ANR	11029376	IdentifierDeclType	ref_stack_t *		11028639	0					
ANR	11029377	Identifier	dstack		11028639	1					
ANR	11029378	AssignmentExpression	* dstack = ( ref_stack_t * ) & pctx -> state . dict_stack		11028639	2		=			
ANR	11029379	Identifier	dstack		11028639	0					
ANR	11029380	CastExpression	( ref_stack_t * ) & pctx -> state . dict_stack		11028639	1					
ANR	11029381	CastTarget	ref_stack_t *		11028639	0					
ANR	11029382	UnaryOperationExpression	& pctx -> state . dict_stack		11028639	1					
ANR	11029383	UnaryOperator	&		11028639	0					
ANR	11029384	MemberAccess	pctx -> state . dict_stack		11028639	1					
ANR	11029385	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029386	Identifier	pctx		11028639	0					
ANR	11029387	Identifier	state		11028639	1					
ANR	11029388	Identifier	dict_stack		11028639	1					
ANR	11029389	IdentifierDeclStatement	uint count = ref_stack_count ( & d_stack ) ;	716:8:23898:23936	11028639	1	True				
ANR	11029390	IdentifierDecl	count = ref_stack_count ( & d_stack )		11028639	0					
ANR	11029391	IdentifierDeclType	uint		11028639	0					
ANR	11029392	Identifier	count		11028639	1					
ANR	11029393	AssignmentExpression	count = ref_stack_count ( & d_stack )		11028639	2		=			
ANR	11029394	Identifier	count		11028639	0					
ANR	11029395	CallExpression	ref_stack_count ( & d_stack )		11028639	1					
ANR	11029396	Callee	ref_stack_count		11028639	0					
ANR	11029397	Identifier	ref_stack_count		11028639	0					
ANR	11029398	ArgumentList	& d_stack		11028639	1					
ANR	11029399	Argument	& d_stack		11028639	0					
ANR	11029400	UnaryOperationExpression	& d_stack		11028639	0					
ANR	11029401	UnaryOperator	&		11028639	0					
ANR	11029402	Identifier	d_stack		11028639	1					
ANR	11029403	IdentifierDeclStatement	uint copy = ( local ? min_dstack_size : count ) ;	717:8:23946:23991	11028639	2	True				
ANR	11029404	IdentifierDecl	copy = ( local ? min_dstack_size : count )		11028639	0					
ANR	11029405	IdentifierDeclType	uint		11028639	0					
ANR	11029406	Identifier	copy		11028639	1					
ANR	11029407	AssignmentExpression	copy = ( local ? min_dstack_size : count )		11028639	2		=			
ANR	11029408	Identifier	copy		11028639	0					
ANR	11029409	ConditionalExpression	local ? min_dstack_size : count		11028639	1					
ANR	11029410	Condition	local		11028639	0					
ANR	11029411	Identifier	local		11028639	0					
ANR	11029412	Identifier	min_dstack_size		11028639	1					
ANR	11029413	Identifier	count		11028639	2					
ANR	11029414	ExpressionStatement	"ref_stack_push ( dstack , copy )"	719:8:24002:24030	11028639	3	True				
ANR	11029415	CallExpression	"ref_stack_push ( dstack , copy )"		11028639	0					
ANR	11029416	Callee	ref_stack_push		11028639	0					
ANR	11029417	Identifier	ref_stack_push		11028639	0					
ANR	11029418	ArgumentList	dstack		11028639	1					
ANR	11029419	Argument	dstack		11028639	0					
ANR	11029420	Identifier	dstack		11028639	0					
ANR	11029421	Argument	copy		11028639	1					
ANR	11029422	Identifier	copy		11028639	0					
ANR	11029423	ExpressionStatement	"stack_copy ( dstack , & d_stack , copy , count - copy )"	720:8:24040:24088	11028639	4	True				
ANR	11029424	CallExpression	"stack_copy ( dstack , & d_stack , copy , count - copy )"		11028639	0					
ANR	11029425	Callee	stack_copy		11028639	0					
ANR	11029426	Identifier	stack_copy		11028639	0					
ANR	11029427	ArgumentList	dstack		11028639	1					
ANR	11029428	Argument	dstack		11028639	0					
ANR	11029429	Identifier	dstack		11028639	0					
ANR	11029430	Argument	& d_stack		11028639	1					
ANR	11029431	UnaryOperationExpression	& d_stack		11028639	0					
ANR	11029432	UnaryOperator	&		11028639	0					
ANR	11029433	Identifier	d_stack		11028639	1					
ANR	11029434	Argument	copy		11028639	2					
ANR	11029435	Identifier	copy		11028639	0					
ANR	11029436	Argument	count - copy		11028639	3					
ANR	11029437	AdditiveExpression	count - copy		11028639	0		-			
ANR	11029438	Identifier	count		11028639	0					
ANR	11029439	Identifier	copy		11028639	1					
ANR	11029440	IfStatement	if ( local )		11028639	5					
ANR	11029441	Condition	local	721:12:24102:24106	11028639	0	True				
ANR	11029442	Identifier	local		11028639	0					
ANR	11029443	CompoundStatement		133:12:4760:4766	11028639	1					
ANR	11029444	IdentifierDeclStatement	long i ;	723:12:24186:24192	11028639	0	True				
ANR	11029445	IdentifierDecl	i		11028639	0					
ANR	11029446	IdentifierDeclType	long		11028639	0					
ANR	11029447	Identifier	i		11028639	1					
ANR	11029448	ForStatement	for ( i = 0 ; i < copy ; ++ i )		11028639	1					
ANR	11029449	ForInit	i = 0 ;	725:17:24212:24217	11028639	0	True				
ANR	11029450	AssignmentExpression	i = 0		11028639	0		=			
ANR	11029451	Identifier	i		11028639	0					
ANR	11029452	PrimaryExpression	0		11028639	1					
ANR	11029453	Condition	i < copy	725:24:24219:24226	11028639	1	True				
ANR	11029454	RelationalExpression	i < copy		11028639	0		<			
ANR	11029455	Identifier	i		11028639	0					
ANR	11029456	Identifier	copy		11028639	1					
ANR	11029457	UnaryExpression	++ i	725:34:24229:24231	11028639	2	True				
ANR	11029458	IncDec	++		11028639	0					
ANR	11029459	Identifier	i		11028639	1					
ANR	11029460	CompoundStatement		136:16:4826:4865	11028639	3					
ANR	11029461	IdentifierDeclStatement	"ref * pdref = ref_stack_index ( dstack , i ) ;"	726:16:24252:24291	11028639	0	True				
ANR	11029462	IdentifierDecl	"* pdref = ref_stack_index ( dstack , i )"		11028639	0					
ANR	11029463	IdentifierDeclType	ref *		11028639	0					
ANR	11029464	Identifier	pdref		11028639	1					
ANR	11029465	AssignmentExpression	"* pdref = ref_stack_index ( dstack , i )"		11028639	2		=			
ANR	11029466	Identifier	pdref		11028639	0					
ANR	11029467	CallExpression	"ref_stack_index ( dstack , i )"		11028639	1					
ANR	11029468	Callee	ref_stack_index		11028639	0					
ANR	11029469	Identifier	ref_stack_index		11028639	0					
ANR	11029470	ArgumentList	dstack		11028639	1					
ANR	11029471	Argument	dstack		11028639	0					
ANR	11029472	Identifier	dstack		11028639	0					
ANR	11029473	Argument	i		11028639	1					
ANR	11029474	Identifier	i		11028639	0					
ANR	11029475	IfStatement	"if ( obj_eq ( imemory , pdref , & old_userdict ) )"		11028639	1					
ANR	11029476	Condition	"obj_eq ( imemory , pdref , & old_userdict )"	728:20:24314:24350	11028639	0	True				
ANR	11029477	CallExpression	"obj_eq ( imemory , pdref , & old_userdict )"		11028639	0					
ANR	11029478	Callee	obj_eq		11028639	0					
ANR	11029479	Identifier	obj_eq		11028639	0					
ANR	11029480	ArgumentList	imemory		11028639	1					
ANR	11029481	Argument	imemory		11028639	0					
ANR	11029482	Identifier	imemory		11028639	0					
ANR	11029483	Argument	pdref		11028639	1					
ANR	11029484	Identifier	pdref		11028639	0					
ANR	11029485	Argument	& old_userdict		11028639	2					
ANR	11029486	UnaryOperationExpression	& old_userdict		11028639	0					
ANR	11029487	UnaryOperator	&		11028639	0					
ANR	11029488	Identifier	old_userdict		11028639	1					
ANR	11029489	ExpressionStatement	* pdref = new_userdict	729:20:24373:24394	11028639	1	True				
ANR	11029490	AssignmentExpression	* pdref = new_userdict		11028639	0		=			
ANR	11029491	UnaryOperationExpression	* pdref		11028639	0					
ANR	11029492	UnaryOperator	*		11028639	0					
ANR	11029493	Identifier	pdref		11028639	1					
ANR	11029494	Identifier	new_userdict		11028639	1					
ANR	11029495	CompoundStatement		144:8:5014:5074	11028639	28					
ANR	11029496	IdentifierDeclStatement	ref_stack_t * estack = ( ref_stack_t * ) & pctx -> state . exec_stack ;	734:8:24440:24500	11028639	0	True				
ANR	11029497	IdentifierDecl	* estack = ( ref_stack_t * ) & pctx -> state . exec_stack		11028639	0					
ANR	11029498	IdentifierDeclType	ref_stack_t *		11028639	0					
ANR	11029499	Identifier	estack		11028639	1					
ANR	11029500	AssignmentExpression	* estack = ( ref_stack_t * ) & pctx -> state . exec_stack		11028639	2		=			
ANR	11029501	Identifier	estack		11028639	0					
ANR	11029502	CastExpression	( ref_stack_t * ) & pctx -> state . exec_stack		11028639	1					
ANR	11029503	CastTarget	ref_stack_t *		11028639	0					
ANR	11029504	UnaryOperationExpression	& pctx -> state . exec_stack		11028639	1					
ANR	11029505	UnaryOperator	&		11028639	0					
ANR	11029506	MemberAccess	pctx -> state . exec_stack		11028639	1					
ANR	11029507	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029508	Identifier	pctx		11028639	0					
ANR	11029509	Identifier	state		11028639	1					
ANR	11029510	Identifier	exec_stack		11028639	1					
ANR	11029511	ExpressionStatement	"ref_stack_push ( estack , 3 )"	736:8:24511:24536	11028639	1	True				
ANR	11029512	CallExpression	"ref_stack_push ( estack , 3 )"		11028639	0					
ANR	11029513	Callee	ref_stack_push		11028639	0					
ANR	11029514	Identifier	ref_stack_push		11028639	0					
ANR	11029515	ArgumentList	estack		11028639	1					
ANR	11029516	Argument	estack		11028639	0					
ANR	11029517	Identifier	estack		11028639	0					
ANR	11029518	Argument	3		11028639	1					
ANR	11029519	PrimaryExpression	3		11028639	0					
ANR	11029520	ExpressionStatement	"make_mark_estack ( estack -> p - 2 , es_other , fork_done_with_error )"	738:8:24619:24682	11028639	2	True				
ANR	11029521	CallExpression	"make_mark_estack ( estack -> p - 2 , es_other , fork_done_with_error )"		11028639	0					
ANR	11029522	Callee	make_mark_estack		11028639	0					
ANR	11029523	Identifier	make_mark_estack		11028639	0					
ANR	11029524	ArgumentList	estack -> p - 2		11028639	1					
ANR	11029525	Argument	estack -> p - 2		11028639	0					
ANR	11029526	AdditiveExpression	estack -> p - 2		11028639	0		-			
ANR	11029527	PtrMemberAccess	estack -> p		11028639	0					
ANR	11029528	Identifier	estack		11028639	0					
ANR	11029529	Identifier	p		11028639	1					
ANR	11029530	PrimaryExpression	2		11028639	1					
ANR	11029531	Argument	es_other		11028639	1					
ANR	11029532	Identifier	es_other		11028639	0					
ANR	11029533	Argument	fork_done_with_error		11028639	2					
ANR	11029534	Identifier	fork_done_with_error		11028639	0					
ANR	11029535	ExpressionStatement	"make_oper ( estack -> p - 1 , 0 , fork_done )"	739:8:24692:24730	11028639	3	True				
ANR	11029536	CallExpression	"make_oper ( estack -> p - 1 , 0 , fork_done )"		11028639	0					
ANR	11029537	Callee	make_oper		11028639	0					
ANR	11029538	Identifier	make_oper		11028639	0					
ANR	11029539	ArgumentList	estack -> p - 1		11028639	1					
ANR	11029540	Argument	estack -> p - 1		11028639	0					
ANR	11029541	AdditiveExpression	estack -> p - 1		11028639	0		-			
ANR	11029542	PtrMemberAccess	estack -> p		11028639	0					
ANR	11029543	Identifier	estack		11028639	0					
ANR	11029544	Identifier	p		11028639	1					
ANR	11029545	PrimaryExpression	1		11028639	1					
ANR	11029546	Argument	0		11028639	1					
ANR	11029547	PrimaryExpression	0		11028639	0					
ANR	11029548	Argument	fork_done		11028639	2					
ANR	11029549	Identifier	fork_done		11028639	0					
ANR	11029550	ExpressionStatement	* estack -> p = * op	740:8:24740:24756	11028639	4	True				
ANR	11029551	AssignmentExpression	* estack -> p = * op		11028639	0		=			
ANR	11029552	UnaryOperationExpression	* estack -> p		11028639	0					
ANR	11029553	UnaryOperator	*		11028639	0					
ANR	11029554	PtrMemberAccess	estack -> p		11028639	1					
ANR	11029555	Identifier	estack		11028639	0					
ANR	11029556	Identifier	p		11028639	1					
ANR	11029557	UnaryOperationExpression	* op		11028639	1					
ANR	11029558	UnaryOperator	*		11028639	0					
ANR	11029559	Identifier	op		11028639	1					
ANR	11029560	CompoundStatement		154:8:5420:5443	11028639	29					
ANR	11029561	IdentifierDeclStatement	ref_stack_t * ostack = ( ref_stack_t * ) & pctx -> state . op_stack ;	743:8:24778:24836	11028639	0	True				
ANR	11029562	IdentifierDecl	* ostack = ( ref_stack_t * ) & pctx -> state . op_stack		11028639	0					
ANR	11029563	IdentifierDeclType	ref_stack_t *		11028639	0					
ANR	11029564	Identifier	ostack		11028639	1					
ANR	11029565	AssignmentExpression	* ostack = ( ref_stack_t * ) & pctx -> state . op_stack		11028639	2		=			
ANR	11029566	Identifier	ostack		11028639	0					
ANR	11029567	CastExpression	( ref_stack_t * ) & pctx -> state . op_stack		11028639	1					
ANR	11029568	CastTarget	ref_stack_t *		11028639	0					
ANR	11029569	UnaryOperationExpression	& pctx -> state . op_stack		11028639	1					
ANR	11029570	UnaryOperator	&		11028639	0					
ANR	11029571	MemberAccess	pctx -> state . op_stack		11028639	1					
ANR	11029572	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029573	Identifier	pctx		11028639	0					
ANR	11029574	Identifier	state		11028639	1					
ANR	11029575	Identifier	op_stack		11028639	1					
ANR	11029576	IdentifierDeclStatement	uint count = mcount - 2 ;	744:8:24846:24869	11028639	1	True				
ANR	11029577	IdentifierDecl	count = mcount - 2		11028639	0					
ANR	11029578	IdentifierDeclType	uint		11028639	0					
ANR	11029579	Identifier	count		11028639	1					
ANR	11029580	AssignmentExpression	count = mcount - 2		11028639	2		=			
ANR	11029581	Identifier	count		11028639	0					
ANR	11029582	AdditiveExpression	mcount - 2		11028639	1		-			
ANR	11029583	Identifier	mcount		11028639	0					
ANR	11029584	PrimaryExpression	2		11028639	1					
ANR	11029585	ExpressionStatement	"ref_stack_push ( ostack , count )"	746:8:24880:24909	11028639	2	True				
ANR	11029586	CallExpression	"ref_stack_push ( ostack , count )"		11028639	0					
ANR	11029587	Callee	ref_stack_push		11028639	0					
ANR	11029588	Identifier	ref_stack_push		11028639	0					
ANR	11029589	ArgumentList	ostack		11028639	1					
ANR	11029590	Argument	ostack		11028639	0					
ANR	11029591	Identifier	ostack		11028639	0					
ANR	11029592	Argument	count		11028639	1					
ANR	11029593	Identifier	count		11028639	0					
ANR	11029594	ExpressionStatement	"stack_copy ( ostack , & o_stack , count , osp - op + 1 )"	747:8:24919:24968	11028639	3	True				
ANR	11029595	CallExpression	"stack_copy ( ostack , & o_stack , count , osp - op + 1 )"		11028639	0					
ANR	11029596	Callee	stack_copy		11028639	0					
ANR	11029597	Identifier	stack_copy		11028639	0					
ANR	11029598	ArgumentList	ostack		11028639	1					
ANR	11029599	Argument	ostack		11028639	0					
ANR	11029600	Identifier	ostack		11028639	0					
ANR	11029601	Argument	& o_stack		11028639	1					
ANR	11029602	UnaryOperationExpression	& o_stack		11028639	0					
ANR	11029603	UnaryOperator	&		11028639	0					
ANR	11029604	Identifier	o_stack		11028639	1					
ANR	11029605	Argument	count		11028639	2					
ANR	11029606	Identifier	count		11028639	0					
ANR	11029607	Argument	osp - op + 1		11028639	3					
ANR	11029608	AdditiveExpression	osp - op + 1		11028639	0		-			
ANR	11029609	Identifier	osp		11028639	0					
ANR	11029610	AdditiveExpression	op + 1		11028639	1		+			
ANR	11029611	Identifier	op		11028639	0					
ANR	11029612	PrimaryExpression	1		11028639	1					
ANR	11029613	ExpressionStatement	pctx -> state . binary_object_format = pcur -> state . binary_object_format	749:4:24980:25047	11028639	30	True				
ANR	11029614	AssignmentExpression	pctx -> state . binary_object_format = pcur -> state . binary_object_format		11028639	0		=			
ANR	11029615	MemberAccess	pctx -> state . binary_object_format		11028639	0					
ANR	11029616	PtrMemberAccess	pctx -> state		11028639	0					
ANR	11029617	Identifier	pctx		11028639	0					
ANR	11029618	Identifier	state		11028639	1					
ANR	11029619	Identifier	binary_object_format		11028639	1					
ANR	11029620	MemberAccess	pcur -> state . binary_object_format		11028639	1					
ANR	11029621	PtrMemberAccess	pcur -> state		11028639	0					
ANR	11029622	Identifier	pcur		11028639	0					
ANR	11029623	Identifier	state		11028639	1					
ANR	11029624	Identifier	binary_object_format		11028639	1					
ANR	11029625	ExpressionStatement	"add_last ( psched , & psched -> active , pctx )"	750:4:25053:25092	11028639	31	True				
ANR	11029626	CallExpression	"add_last ( psched , & psched -> active , pctx )"		11028639	0					
ANR	11029627	Callee	add_last		11028639	0					
ANR	11029628	Identifier	add_last		11028639	0					
ANR	11029629	ArgumentList	psched		11028639	1					
ANR	11029630	Argument	psched		11028639	0					
ANR	11029631	Identifier	psched		11028639	0					
ANR	11029632	Argument	& psched -> active		11028639	1					
ANR	11029633	UnaryOperationExpression	& psched -> active		11028639	0					
ANR	11029634	UnaryOperator	&		11028639	0					
ANR	11029635	PtrMemberAccess	psched -> active		11028639	1					
ANR	11029636	Identifier	psched		11028639	0					
ANR	11029637	Identifier	active		11028639	1					
ANR	11029638	Argument	pctx		11028639	2					
ANR	11029639	Identifier	pctx		11028639	0					
ANR	11029640	ExpressionStatement	pop ( mcount - 1 )	751:4:25098:25113	11028639	32	True				
ANR	11029641	CallExpression	pop ( mcount - 1 )		11028639	0					
ANR	11029642	Callee	pop		11028639	0					
ANR	11029643	Identifier	pop		11028639	0					
ANR	11029644	ArgumentList	mcount - 1		11028639	1					
ANR	11029645	Argument	mcount - 1		11028639	0					
ANR	11029646	AdditiveExpression	mcount - 1		11028639	0		-			
ANR	11029647	Identifier	mcount		11028639	0					
ANR	11029648	PrimaryExpression	1		11028639	1					
ANR	11029649	ExpressionStatement	op = osp	752:4:25119:25127	11028639	33	True				
ANR	11029650	AssignmentExpression	op = osp		11028639	0		=			
ANR	11029651	Identifier	op		11028639	0					
ANR	11029652	Identifier	osp		11028639	1					
ANR	11029653	ExpressionStatement	"make_int ( op , pctx -> index )"	753:4:25133:25158	11028639	34	True				
ANR	11029654	CallExpression	"make_int ( op , pctx -> index )"		11028639	0					
ANR	11029655	Callee	make_int		11028639	0					
ANR	11029656	Identifier	make_int		11028639	0					
ANR	11029657	ArgumentList	op		11028639	1					
ANR	11029658	Argument	op		11028639	0					
ANR	11029659	Identifier	op		11028639	0					
ANR	11029660	Argument	pctx -> index		11028639	1					
ANR	11029661	PtrMemberAccess	pctx -> index		11028639	0					
ANR	11029662	Identifier	pctx		11028639	0					
ANR	11029663	Identifier	index		11028639	1					
ANR	11029664	ReturnStatement	return 0 ;	754:4:25164:25172	11028639	35	True				
ANR	11029665	PrimaryExpression	0		11028639	0					
ANR	11029666	ReturnType	static int		11028639	1					
ANR	11029667	Identifier	do_fork		11028639	2					
ANR	11029668	ParameterList	"i_ctx_t * i_ctx_p , os_ptr op , const ref * pstdin , const ref * pstdout , uint mcount , bool local"		11028639	3					
ANR	11029669	Parameter	i_ctx_t * i_ctx_p	589:8:19322:19337	11028639	0	True				
ANR	11029670	ParameterType	i_ctx_t *		11028639	0					
ANR	11029671	Identifier	i_ctx_p		11028639	1					
ANR	11029672	Parameter	os_ptr op	589:26:19340:19348	11028639	1	True				
ANR	11029673	ParameterType	os_ptr		11028639	0					
ANR	11029674	Identifier	op		11028639	1					
ANR	11029675	Parameter	const ref * pstdin	589:37:19351:19368	11028639	2	True				
ANR	11029676	ParameterType	const ref *		11028639	0					
ANR	11029677	Identifier	pstdin		11028639	1					
ANR	11029678	Parameter	const ref * pstdout	589:57:19371:19389	11028639	3	True				
ANR	11029679	ParameterType	const ref *		11028639	0					
ANR	11029680	Identifier	pstdout		11028639	1					
ANR	11029681	Parameter	uint mcount	590:8:19400:19410	11028639	4	True				
ANR	11029682	ParameterType	uint		11028639	0					
ANR	11029683	Identifier	mcount		11028639	1					
ANR	11029684	Parameter	bool local	590:21:19413:19422	11028639	5	True				
ANR	11029685	ParameterType	bool		11028639	0					
ANR	11029686	Identifier	local		11028639	1					
ANR	11029687	CFGEntryNode	ENTRY		11028639		True				
ANR	11029688	CFGExitNode	EXIT		11028639		True				
ANR	11029689	Symbol	ref_stack_index		11028639						
ANR	11029690	Symbol	pcur -> scheduler		11028639						
ANR	11029691	Symbol	parent		11028639						
ANR	11029692	Symbol	i_ctx_p -> op_array_table_local		11028639						
ANR	11029693	Symbol	idict_stack . min_size		11028639						
ANR	11029694	Symbol	osp		11028639						
ANR	11029695	Symbol	& psched -> active		11028639						
ANR	11029696	Symbol	t_null		11028639						
ANR	11029697	Symbol	iimemory_local		11028639						
ANR	11029698	Symbol	* pdref		11028639						
ANR	11029699	Symbol	igs		11028639						
ANR	11029700	Symbol	& d_stack		11028639						
ANR	11029701	Symbol	* * estack		11028639						
ANR	11029702	Symbol	pctx -> state . reschedule_proc		11028639						
ANR	11029703	Symbol	min_dstack_size		11028639						
ANR	11029704	Symbol	pctx -> state . pgs		11028639						
ANR	11029705	Symbol	old		11028639						
ANR	11029706	Symbol	lmem -> stable_memory		11028639						
ANR	11029707	Symbol	* pstdout		11028639						
ANR	11029708	Symbol	default_reschedule_interval		11028639						
ANR	11029709	Symbol	* estack -> p		11028639						
ANR	11029710	Symbol	pstdout		11028639						
ANR	11029711	Symbol	* puserdict		11028639						
ANR	11029712	Symbol	i_ctx_p		11028639						
ANR	11029713	Symbol	& pctx -> state . exec_stack		11028639						
ANR	11029714	Symbol	interval		11028639						
ANR	11029715	Symbol	pctx -> state . binary_object_format		11028639						
ANR	11029716	Symbol	systemdict		11028639						
ANR	11029717	Symbol	* pcur -> state		11028639						
ANR	11029718	Symbol	ctx_time_slice		11028639						
ANR	11029719	Symbol	t_dictionary		11028639						
ANR	11029720	Symbol	avm_local		11028639						
ANR	11029721	Symbol	pdref		11028639						
ANR	11029722	Symbol	local		11028639						
ANR	11029723	Symbol	* pctx		11028639						
ANR	11029724	Symbol	ialloc_alloc_state		11028639						
ANR	11029725	Symbol	gs_gsave		11028639						
ANR	11029726	Symbol	idict_stack . userdict_index		11028639						
ANR	11029727	Symbol	& pctx -> state . op_stack		11028639						
ANR	11029728	Symbol	pcur -> state . binary_object_format		11028639						
ANR	11029729	Symbol	& pctx -> state		11028639						
ANR	11029730	Symbol	copy		11028639						
ANR	11029731	Symbol	gs_imemory		11028639						
ANR	11029732	Symbol	lmem -> space		11028639						
ANR	11029733	Symbol	userdict_size		11028639						
ANR	11029734	Symbol	iimemory_local -> clump_size		11028639						
ANR	11029735	Symbol	& dmem		11028639						
ANR	11029736	Symbol	pctx -> index		11028639						
ANR	11029737	Symbol	puserdict		11028639						
ANR	11029738	Symbol	mcount		11028639						
ANR	11029739	Symbol	dict_maxlength		11028639						
ANR	11029740	Symbol	* estack		11028639						
ANR	11029741	Symbol	gs_error_invalidcontext		11028639						
ANR	11029742	Symbol	i		11028639						
ANR	11029743	Symbol	pctx -> state . stdio		11028639						
ANR	11029744	Symbol	n		11028639						
ANR	11029745	Symbol	ref_stdio		11028639						
ANR	11029746	Symbol	pctx -> state . dict_stack . min_size		11028639						
ANR	11029747	Symbol	s		11028639						
ANR	11029748	Symbol	pctx -> state . dict_stack		11028639						
ANR	11029749	Symbol	gs_gstate_saved		11028639						
ANR	11029750	Symbol	idict_stack		11028639						
ANR	11029751	Symbol	& o_stack		11028639						
ANR	11029752	Symbol	pctx -> state . time_slice_ticks		11028639						
ANR	11029753	Symbol	estack -> p		11028639						
ANR	11029754	Symbol	zget_stdin		11028639						
ANR	11029755	Symbol	ctx_reschedule		11028639						
ANR	11029756	Symbol	pctx		11028639						
ANR	11029757	Symbol	* op		11028639						
ANR	11029758	Symbol	i_ctx_p -> language_level		11028639						
ANR	11029759	Symbol	iimemory_local -> save_level		11028639						
ANR	11029760	Symbol	dstack		11028639						
ANR	11029761	Symbol	es_other		11028639						
ANR	11029762	Symbol	ostack		11028639						
ANR	11029763	Symbol	* pctx -> state . stdio		11028639						
ANR	11029764	Symbol	lmem_stable		11028639						
ANR	11029765	Symbol	minimum_reschedule_interval		11028639						
ANR	11029766	Symbol	r_has_type		11028639						
ANR	11029767	Symbol	fork_done_with_error		11028639						
ANR	11029768	Symbol	iimemory_local -> non_gc_memory		11028639						
ANR	11029769	Symbol	pctx -> state . language_level		11028639						
ANR	11029770	Symbol	reschedule_interval		11028639						
ANR	11029771	Symbol	* i_ctx_p		11028639						
ANR	11029772	Symbol	imemory		11028639						
ANR	11029773	Symbol	zget_stdout		11028639						
ANR	11029774	Symbol	gs_error_Fatal		11028639						
ANR	11029775	Symbol	dict_alloc		11028639						
ANR	11029776	Symbol	* pcur		11028639						
ANR	11029777	Symbol	dict_find_string		11028639						
ANR	11029778	Symbol	old_userdict		11028639						
ANR	11029779	Symbol	pctx -> state . op_array_table_global		11028639						
ANR	11029780	Symbol	pctx -> state . dict_stack . userdict_index		11028639						
ANR	11029781	Symbol	estack		11028639						
ANR	11029782	Symbol	dmem . space_local		11028639						
ANR	11029783	Symbol	count		11028639						
ANR	11029784	Symbol	pctx -> state . op_array_table_local		11028639						
ANR	11029785	Symbol	* pstdin		11028639						
ANR	11029786	Symbol	& pcur -> state		11028639						
ANR	11029787	Symbol	pcur -> state . stdio		11028639						
ANR	11029788	Symbol	pstdin		11028639						
ANR	11029789	Symbol	fork_done		11028639						
ANR	11029790	Symbol	pctx -> state		11028639						
ANR	11029791	Symbol	ref_stack_count		11028639						
ANR	11029792	Symbol	* iimemory_local		11028639						
ANR	11029793	Symbol	* lmem		11028639						
ANR	11029794	Symbol	& pctx		11028639						
ANR	11029795	Symbol	& puserdict		11028639						
ANR	11029796	Symbol	code		11028639						
ANR	11029797	Symbol	* lmem_stable		11028639						
ANR	11029798	Symbol	lmem_stable -> space		11028639						
ANR	11029799	Symbol	* pcur -> state . stdio		11028639						
ANR	11029800	Symbol	& old_userdict		11028639						
ANR	11029801	Symbol	lmem		11028639						
ANR	11029802	Symbol	dmem		11028639						
ANR	11029803	Symbol	i_ctx_p -> op_array_table_global		11028639						
ANR	11029804	Symbol	& pctx -> state . dict_stack		11028639						
ANR	11029805	Symbol	op		11028639						
ANR	11029806	Symbol	* pctx -> state		11028639						
ANR	11029807	Symbol	pcur		11028639						
ANR	11029808	Symbol	psched		11028639						
ANR	11029809	Symbol	* * pcur		11028639						
ANR	11029810	Symbol	false		11028639						
ANR	11029811	Symbol	& new_userdict		11028639						
ANR	11029812	Symbol	gs_error_VMerror		11028639						
ANR	11029813	Symbol	obj_eq		11028639						
ANR	11029814	Symbol	* * pctx		11028639						
ANR	11029815	Symbol	pcur -> state		11028639						
ANR	11029816	Symbol	& s		11028639						
ANR	11029817	Symbol	context_create		11028639						
ANR	11029818	Symbol	pctx -> state . time_slice_proc		11028639						
ANR	11029819	Symbol	new_userdict		11028639						
ANR	11029820	Function	values_older_than	761:0:25324:25622							
ANR	11029821	FunctionDef	"values_older_than (const ref_stack_t * pstack , uint first , uint last , int next_space)"		11029820	0					
ANR	11029822	CompoundStatement		764:0:25438:25622	11029820	0					
ANR	11029823	IdentifierDeclStatement	uint i ;	765:4:25444:25450	11029820	0	True				
ANR	11029824	IdentifierDecl	i		11029820	0					
ANR	11029825	IdentifierDeclType	uint		11029820	0					
ANR	11029826	Identifier	i		11029820	1					
ANR	11029827	ForStatement	for ( i = first ; i <= last ; ++ i )		11029820	1					
ANR	11029828	ForInit	i = first ;	767:9:25462:25471	11029820	0	True				
ANR	11029829	AssignmentExpression	i = first		11029820	0		=			
ANR	11029830	Identifier	i		11029820	0					
ANR	11029831	Identifier	first		11029820	1					
ANR	11029832	Condition	i <= last	767:20:25473:25481	11029820	1	True				
ANR	11029833	RelationalExpression	i <= last		11029820	0		<=			
ANR	11029834	Identifier	i		11029820	0					
ANR	11029835	Identifier	last		11029820	1					
ANR	11029836	UnaryExpression	++ i	767:31:25484:25486	11029820	2	True				
ANR	11029837	IncDec	++		11029820	0					
ANR	11029838	Identifier	i		11029820	1					
ANR	11029839	IfStatement	"if ( r_space ( ref_stack_index ( pstack , ( long ) i ) ) >= next_space )"		11029820	3					
ANR	11029840	Condition	"r_space ( ref_stack_index ( pstack , ( long ) i ) ) >= next_space"	768:12:25501:25555	11029820	0	True				
ANR	11029841	RelationalExpression	"r_space ( ref_stack_index ( pstack , ( long ) i ) ) >= next_space"		11029820	0		>=			
ANR	11029842	CallExpression	"r_space ( ref_stack_index ( pstack , ( long ) i ) )"		11029820	0					
ANR	11029843	Callee	r_space		11029820	0					
ANR	11029844	Identifier	r_space		11029820	0					
ANR	11029845	ArgumentList	"ref_stack_index ( pstack , ( long ) i )"		11029820	1					
ANR	11029846	Argument	"ref_stack_index ( pstack , ( long ) i )"		11029820	0					
ANR	11029847	CallExpression	"ref_stack_index ( pstack , ( long ) i )"		11029820	0					
ANR	11029848	Callee	ref_stack_index		11029820	0					
ANR	11029849	Identifier	ref_stack_index		11029820	0					
ANR	11029850	ArgumentList	pstack		11029820	1					
ANR	11029851	Argument	pstack		11029820	0					
ANR	11029852	Identifier	pstack		11029820	0					
ANR	11029853	Argument	( long ) i		11029820	1					
ANR	11029854	CastExpression	( long ) i		11029820	0					
ANR	11029855	CastTarget	long		11029820	0					
ANR	11029856	Identifier	i		11029820	1					
ANR	11029857	Identifier	next_space		11029820	1					
ANR	11029858	ExpressionStatement	return_error ( gs_error_invalidaccess )	769:12:25570:25606	11029820	1	True				
ANR	11029859	CallExpression	return_error ( gs_error_invalidaccess )		11029820	0					
ANR	11029860	Callee	return_error		11029820	0					
ANR	11029861	Identifier	return_error		11029820	0					
ANR	11029862	ArgumentList	gs_error_invalidaccess		11029820	1					
ANR	11029863	Argument	gs_error_invalidaccess		11029820	0					
ANR	11029864	Identifier	gs_error_invalidaccess		11029820	0					
ANR	11029865	ReturnStatement	return 0 ;	770:4:25612:25620	11029820	2	True				
ANR	11029866	PrimaryExpression	0		11029820	0					
ANR	11029867	ReturnType	static int		11029820	1					
ANR	11029868	Identifier	values_older_than		11029820	2					
ANR	11029869	ParameterList	"const ref_stack_t * pstack , uint first , uint last , int next_space"		11029820	3					
ANR	11029870	Parameter	const ref_stack_t * pstack	762:18:25353:25378	11029820	0	True				
ANR	11029871	ParameterType	const ref_stack_t *		11029820	0					
ANR	11029872	Identifier	pstack		11029820	1					
ANR	11029873	Parameter	uint first	762:46:25381:25390	11029820	1	True				
ANR	11029874	ParameterType	uint		11029820	0					
ANR	11029875	Identifier	first		11029820	1					
ANR	11029876	Parameter	uint last	762:58:25393:25401	11029820	2	True				
ANR	11029877	ParameterType	uint		11029820	0					
ANR	11029878	Identifier	last		11029820	1					
ANR	11029879	Parameter	int next_space	763:18:25422:25435	11029820	3	True				
ANR	11029880	ParameterType	int		11029820	0					
ANR	11029881	Identifier	next_space		11029820	1					
ANR	11029882	CFGEntryNode	ENTRY		11029820		True				
ANR	11029883	CFGExitNode	EXIT		11029820		True				
ANR	11029884	Symbol	ref_stack_index		11029820						
ANR	11029885	Symbol	pstack		11029820						
ANR	11029886	Symbol	r_space		11029820						
ANR	11029887	Symbol	last		11029820						
ANR	11029888	Symbol	next_space		11029820						
ANR	11029889	Symbol	i		11029820						
ANR	11029890	Symbol	gs_error_invalidaccess		11029820						
ANR	11029891	Symbol	first		11029820						
ANR	11029892	Function	fork_done	776:0:25763:28006							
ANR	11029893	FunctionDef	fork_done (i_ctx_t * i_ctx_p)		11029892	0					
ANR	11029894	CompoundStatement		778:0:25802:28006	11029892	0					
ANR	11029895	IdentifierDeclStatement	os_ptr op = osp ;	779:4:25808:25823	11029892	0	True				
ANR	11029896	IdentifierDecl	op = osp		11029892	0					
ANR	11029897	IdentifierDeclType	os_ptr		11029892	0					
ANR	11029898	Identifier	op		11029892	1					
ANR	11029899	AssignmentExpression	op = osp		11029892	2		=			
ANR	11029900	Identifier	osp		11029892	0					
ANR	11029901	Identifier	osp		11029892	1					
ANR	11029902	IdentifierDeclStatement	gs_context_t * pcur = ( gs_context_t * ) i_ctx_p ;	780:4:25829:25873	11029892	1	True				
ANR	11029903	IdentifierDecl	* pcur = ( gs_context_t * ) i_ctx_p		11029892	0					
ANR	11029904	IdentifierDeclType	gs_context_t *		11029892	0					
ANR	11029905	Identifier	pcur		11029892	1					
ANR	11029906	AssignmentExpression	* pcur = ( gs_context_t * ) i_ctx_p		11029892	2		=			
ANR	11029907	Identifier	pcur		11029892	0					
ANR	11029908	CastExpression	( gs_context_t * ) i_ctx_p		11029892	1					
ANR	11029909	CastTarget	gs_context_t *		11029892	0					
ANR	11029910	Identifier	i_ctx_p		11029892	1					
ANR	11029911	IdentifierDeclStatement	gs_scheduler_t * psched = pcur -> scheduler ;	781:4:25879:25919	11029892	2	True				
ANR	11029912	IdentifierDecl	* psched = pcur -> scheduler		11029892	0					
ANR	11029913	IdentifierDeclType	gs_scheduler_t *		11029892	0					
ANR	11029914	Identifier	psched		11029892	1					
ANR	11029915	AssignmentExpression	* psched = pcur -> scheduler		11029892	2		=			
ANR	11029916	Identifier	psched		11029892	0					
ANR	11029917	PtrMemberAccess	pcur -> scheduler		11029892	1					
ANR	11029918	Identifier	pcur		11029892	0					
ANR	11029919	Identifier	scheduler		11029892	1					
ANR	11029920	ExpressionStatement	"if_debug2 ( '\\'' , ""[']done %ld%s\\n"" , pcur -> index , ( pcur -> detach ? "", detached"" : """" ) )"	783:4:25926:26023	11029892	3	True				
ANR	11029921	CallExpression	"if_debug2 ( '\\'' , ""[']done %ld%s\\n"" , pcur -> index , ( pcur -> detach ? "", detached"" : """" ) )"		11029892	0					
ANR	11029922	Callee	if_debug2		11029892	0					
ANR	11029923	Identifier	if_debug2		11029892	0					
ANR	11029924	ArgumentList	'\\''		11029892	1					
ANR	11029925	Argument	'\\''		11029892	0					
ANR	11029926	PrimaryExpression	'\\''		11029892	0					
ANR	11029927	Argument	"""[']done %ld%s\\n"""		11029892	1					
ANR	11029928	PrimaryExpression	"""[']done %ld%s\\n"""		11029892	0					
ANR	11029929	Argument	pcur -> index		11029892	2					
ANR	11029930	PtrMemberAccess	pcur -> index		11029892	0					
ANR	11029931	Identifier	pcur		11029892	0					
ANR	11029932	Identifier	index		11029892	1					
ANR	11029933	Argument	"pcur -> detach ? "", detached"" : """""		11029892	3					
ANR	11029934	ConditionalExpression	"pcur -> detach ? "", detached"" : """""		11029892	0					
ANR	11029935	Condition	pcur -> detach		11029892	0					
ANR	11029936	PtrMemberAccess	pcur -> detach		11029892	0					
ANR	11029937	Identifier	pcur		11029892	0					
ANR	11029938	Identifier	detach		11029892	1					
ANR	11029939	PrimaryExpression	""", detached"""		11029892	1					
ANR	11029940	PrimaryExpression	""""""		11029892	2					
ANR	11029941	ExpressionStatement	"ref_stack_pop_to ( & d_stack , min_dstack_size )"	791:4:26291:26334	11029892	4	True				
ANR	11029942	CallExpression	"ref_stack_pop_to ( & d_stack , min_dstack_size )"		11029892	0					
ANR	11029943	Callee	ref_stack_pop_to		11029892	0					
ANR	11029944	Identifier	ref_stack_pop_to		11029892	0					
ANR	11029945	ArgumentList	& d_stack		11029892	1					
ANR	11029946	Argument	& d_stack		11029892	0					
ANR	11029947	UnaryOperationExpression	& d_stack		11029892	0					
ANR	11029948	UnaryOperator	&		11029892	0					
ANR	11029949	Identifier	d_stack		11029892	1					
ANR	11029950	Argument	min_dstack_size		11029892	1					
ANR	11029951	Identifier	min_dstack_size		11029892	0					
ANR	11029952	ExpressionStatement	"pop_estack ( & pcur -> state , ref_stack_count ( & e_stack ) - 1 )"	792:4:26340:26395	11029892	5	True				
ANR	11029953	CallExpression	"pop_estack ( & pcur -> state , ref_stack_count ( & e_stack ) - 1 )"		11029892	0					
ANR	11029954	Callee	pop_estack		11029892	0					
ANR	11029955	Identifier	pop_estack		11029892	0					
ANR	11029956	ArgumentList	& pcur -> state		11029892	1					
ANR	11029957	Argument	& pcur -> state		11029892	0					
ANR	11029958	UnaryOperationExpression	& pcur -> state		11029892	0					
ANR	11029959	UnaryOperator	&		11029892	0					
ANR	11029960	PtrMemberAccess	pcur -> state		11029892	1					
ANR	11029961	Identifier	pcur		11029892	0					
ANR	11029962	Identifier	state		11029892	1					
ANR	11029963	Argument	ref_stack_count ( & e_stack ) - 1		11029892	1					
ANR	11029964	AdditiveExpression	ref_stack_count ( & e_stack ) - 1		11029892	0		-			
ANR	11029965	CallExpression	ref_stack_count ( & e_stack )		11029892	0					
ANR	11029966	Callee	ref_stack_count		11029892	0					
ANR	11029967	Identifier	ref_stack_count		11029892	0					
ANR	11029968	ArgumentList	& e_stack		11029892	1					
ANR	11029969	Argument	& e_stack		11029892	0					
ANR	11029970	UnaryOperationExpression	& e_stack		11029892	0					
ANR	11029971	UnaryOperator	&		11029892	0					
ANR	11029972	Identifier	e_stack		11029892	1					
ANR	11029973	PrimaryExpression	1		11029892	1					
ANR	11029974	ExpressionStatement	gs_grestoreall ( igs )	793:4:26401:26420	11029892	6	True				
ANR	11029975	CallExpression	gs_grestoreall ( igs )		11029892	0					
ANR	11029976	Callee	gs_grestoreall		11029892	0					
ANR	11029977	Identifier	gs_grestoreall		11029892	0					
ANR	11029978	ArgumentList	igs		11029892	1					
ANR	11029979	Argument	igs		11029892	0					
ANR	11029980	Identifier	igs		11029892	0					
ANR	11029981	IfStatement	if ( iimemory_local -> save_level )		11029892	7					
ANR	11029982	Condition	iimemory_local -> save_level	799:8:26620:26645	11029892	0	True				
ANR	11029983	PtrMemberAccess	iimemory_local -> save_level		11029892	0					
ANR	11029984	Identifier	iimemory_local		11029892	0					
ANR	11029985	Identifier	save_level		11029892	1					
ANR	11029986	CompoundStatement		23:8:855:868	11029892	1					
ANR	11029987	IdentifierDeclStatement	ref * prestore ;	800:8:26658:26671	11029892	0	True				
ANR	11029988	IdentifierDecl	* prestore		11029892	0					
ANR	11029989	IdentifierDeclType	ref *		11029892	0					
ANR	11029990	Identifier	prestore		11029892	1					
ANR	11029991	IfStatement	"if ( dict_find_string ( systemdict , ""restore"" , & prestore ) <= 0 )"		11029892	1					
ANR	11029992	Condition	"dict_find_string ( systemdict , ""restore"" , & prestore ) <= 0"	802:12:26686:26740	11029892	0	True				
ANR	11029993	RelationalExpression	"dict_find_string ( systemdict , ""restore"" , & prestore ) <= 0"		11029892	0		<=			
ANR	11029994	CallExpression	"dict_find_string ( systemdict , ""restore"" , & prestore )"		11029892	0					
ANR	11029995	Callee	dict_find_string		11029892	0					
ANR	11029996	Identifier	dict_find_string		11029892	0					
ANR	11029997	ArgumentList	systemdict		11029892	1					
ANR	11029998	Argument	systemdict		11029892	0					
ANR	11029999	Identifier	systemdict		11029892	0					
ANR	11030000	Argument	"""restore"""		11029892	1					
ANR	11030001	PrimaryExpression	"""restore"""		11029892	0					
ANR	11030002	Argument	& prestore		11029892	2					
ANR	11030003	UnaryOperationExpression	& prestore		11029892	0					
ANR	11030004	UnaryOperator	&		11029892	0					
ANR	11030005	Identifier	prestore		11029892	1					
ANR	11030006	PrimaryExpression	0		11029892	1					
ANR	11030007	CompoundStatement		25:69:940:940	11029892	1					
ANR	11030008	ExpressionStatement	"lprintf ( ""restore not found in systemdict!"" )"	803:12:26757:26800	11029892	0	True				
ANR	11030009	CallExpression	"lprintf ( ""restore not found in systemdict!"" )"		11029892	0					
ANR	11030010	Callee	lprintf		11029892	0					
ANR	11030011	Identifier	lprintf		11029892	0					
ANR	11030012	ArgumentList	"""restore not found in systemdict!"""		11029892	1					
ANR	11030013	Argument	"""restore not found in systemdict!"""		11029892	0					
ANR	11030014	PrimaryExpression	"""restore not found in systemdict!"""		11029892	0					
ANR	11030015	ExpressionStatement	return_error ( gs_error_Fatal )	804:12:26814:26842	11029892	1	True				
ANR	11030016	CallExpression	return_error ( gs_error_Fatal )		11029892	0					
ANR	11030017	Callee	return_error		11029892	0					
ANR	11030018	Identifier	return_error		11029892	0					
ANR	11030019	ArgumentList	gs_error_Fatal		11029892	1					
ANR	11030020	Argument	gs_error_Fatal		11029892	0					
ANR	11030021	Identifier	gs_error_Fatal		11029892	0					
ANR	11030022	IfStatement	if ( pcur -> detach )		11029892	2					
ANR	11030023	Condition	pcur -> detach	806:12:26866:26877	11029892	0	True				
ANR	11030024	PtrMemberAccess	pcur -> detach		11029892	0					
ANR	11030025	Identifier	pcur		11029892	0					
ANR	11030026	Identifier	detach		11029892	1					
ANR	11030027	CompoundStatement		29:26:1077:1077	11029892	1					
ANR	11030028	ExpressionStatement	ref_stack_clear ( & o_stack )	807:12:26894:26919	11029892	0	True				
ANR	11030029	CallExpression	ref_stack_clear ( & o_stack )		11029892	0					
ANR	11030030	Callee	ref_stack_clear		11029892	0					
ANR	11030031	Identifier	ref_stack_clear		11029892	0					
ANR	11030032	ArgumentList	& o_stack		11029892	1					
ANR	11030033	Argument	& o_stack		11029892	0					
ANR	11030034	UnaryOperationExpression	& o_stack		11029892	0					
ANR	11030035	UnaryOperator	&		11029892	0					
ANR	11030036	Identifier	o_stack		11029892	1					
ANR	11030037	ExpressionStatement	op = osp	808:12:26965:26973	11029892	1	True				
ANR	11030038	AssignmentExpression	op = osp		11029892	0		=			
ANR	11030039	Identifier	op		11029892	0					
ANR	11030040	Identifier	osp		11029892	1					
ANR	11030041	ExpressionStatement	push ( 1 )	810:8:26993:27000	11029892	3	True				
ANR	11030042	CallExpression	push ( 1 )		11029892	0					
ANR	11030043	Callee	push		11029892	0					
ANR	11030044	Identifier	push		11029892	0					
ANR	11030045	ArgumentList	1		11029892	1					
ANR	11030046	Argument	1		11029892	0					
ANR	11030047	PrimaryExpression	1		11029892	0					
ANR	11030048	ExpressionStatement	"make_tv ( op , t_save , saveid , alloc_save_current_id ( & gs_imemory ) )"	811:8:27010:27073	11029892	4	True				
ANR	11030049	CallExpression	"make_tv ( op , t_save , saveid , alloc_save_current_id ( & gs_imemory ) )"		11029892	0					
ANR	11030050	Callee	make_tv		11029892	0					
ANR	11030051	Identifier	make_tv		11029892	0					
ANR	11030052	ArgumentList	op		11029892	1					
ANR	11030053	Argument	op		11029892	0					
ANR	11030054	Identifier	op		11029892	0					
ANR	11030055	Argument	t_save		11029892	1					
ANR	11030056	Identifier	t_save		11029892	0					
ANR	11030057	Argument	saveid		11029892	2					
ANR	11030058	Identifier	saveid		11029892	0					
ANR	11030059	Argument	alloc_save_current_id ( & gs_imemory )		11029892	3					
ANR	11030060	CallExpression	alloc_save_current_id ( & gs_imemory )		11029892	0					
ANR	11030061	Callee	alloc_save_current_id		11029892	0					
ANR	11030062	Identifier	alloc_save_current_id		11029892	0					
ANR	11030063	ArgumentList	& gs_imemory		11029892	1					
ANR	11030064	Argument	& gs_imemory		11029892	0					
ANR	11030065	UnaryOperationExpression	& gs_imemory		11029892	0					
ANR	11030066	UnaryOperator	&		11029892	0					
ANR	11030067	Identifier	gs_imemory		11029892	1					
ANR	11030068	ExpressionStatement	push_op_estack ( fork_done )	812:8:27083:27108	11029892	5	True				
ANR	11030069	CallExpression	push_op_estack ( fork_done )		11029892	0					
ANR	11030070	Callee	push_op_estack		11029892	0					
ANR	11030071	Identifier	push_op_estack		11029892	0					
ANR	11030072	ArgumentList	fork_done		11029892	1					
ANR	11030073	Argument	fork_done		11029892	0					
ANR	11030074	Identifier	fork_done		11029892	0					
ANR	11030075	ExpressionStatement	++ esp	813:8:27118:27123	11029892	6	True				
ANR	11030076	UnaryExpression	++ esp		11029892	0					
ANR	11030077	IncDec	++		11029892	0					
ANR	11030078	Identifier	esp		11029892	1					
ANR	11030079	ExpressionStatement	"ref_assign ( esp , prestore )"	814:8:27133:27158	11029892	7	True				
ANR	11030080	CallExpression	"ref_assign ( esp , prestore )"		11029892	0					
ANR	11030081	Callee	ref_assign		11029892	0					
ANR	11030082	Identifier	ref_assign		11029892	0					
ANR	11030083	ArgumentList	esp		11029892	1					
ANR	11030084	Argument	esp		11029892	0					
ANR	11030085	Identifier	esp		11029892	0					
ANR	11030086	Argument	prestore		11029892	1					
ANR	11030087	Identifier	prestore		11029892	0					
ANR	11030088	ReturnStatement	return o_push_estack ;	815:8:27168:27188	11029892	8	True				
ANR	11030089	Identifier	o_push_estack		11029892	0					
ANR	11030090	IfStatement	if ( pcur -> detach )		11029892	8					
ANR	11030091	Condition	pcur -> detach	817:8:27204:27215	11029892	0	True				
ANR	11030092	PtrMemberAccess	pcur -> detach		11029892	0					
ANR	11030093	Identifier	pcur		11029892	0					
ANR	11030094	Identifier	detach		11029892	1					
ANR	11030095	CompoundStatement		40:22:1415:1415	11029892	1					
ANR	11030096	ExpressionStatement	ref_stack_clear ( & o_stack )	824:8:27530:27555	11029892	0	True				
ANR	11030097	CallExpression	ref_stack_clear ( & o_stack )		11029892	0					
ANR	11030098	Callee	ref_stack_clear		11029892	0					
ANR	11030099	Identifier	ref_stack_clear		11029892	0					
ANR	11030100	ArgumentList	& o_stack		11029892	1					
ANR	11030101	Argument	& o_stack		11029892	0					
ANR	11030102	UnaryOperationExpression	& o_stack		11029892	0					
ANR	11030103	UnaryOperator	&		11029892	0					
ANR	11030104	Identifier	o_stack		11029892	1					
ANR	11030105	ExpressionStatement	"context_store ( psched , pcur )"	825:8:27565:27592	11029892	1	True				
ANR	11030106	CallExpression	"context_store ( psched , pcur )"		11029892	0					
ANR	11030107	Callee	context_store		11029892	0					
ANR	11030108	Identifier	context_store		11029892	0					
ANR	11030109	ArgumentList	psched		11029892	1					
ANR	11030110	Argument	psched		11029892	0					
ANR	11030111	Identifier	psched		11029892	0					
ANR	11030112	Argument	pcur		11029892	1					
ANR	11030113	Identifier	pcur		11029892	0					
ANR	11030114	ExpressionStatement	pcur -> next_index = psched -> dead_index	826:8:27602:27639	11029892	2	True				
ANR	11030115	AssignmentExpression	pcur -> next_index = psched -> dead_index		11029892	0		=			
ANR	11030116	PtrMemberAccess	pcur -> next_index		11029892	0					
ANR	11030117	Identifier	pcur		11029892	0					
ANR	11030118	Identifier	next_index		11029892	1					
ANR	11030119	PtrMemberAccess	psched -> dead_index		11029892	1					
ANR	11030120	Identifier	psched		11029892	0					
ANR	11030121	Identifier	dead_index		11029892	1					
ANR	11030122	ExpressionStatement	psched -> dead_index = pcur -> index	827:8:27649:27681	11029892	3	True				
ANR	11030123	AssignmentExpression	psched -> dead_index = pcur -> index		11029892	0		=			
ANR	11030124	PtrMemberAccess	psched -> dead_index		11029892	0					
ANR	11030125	Identifier	psched		11029892	0					
ANR	11030126	Identifier	dead_index		11029892	1					
ANR	11030127	PtrMemberAccess	pcur -> index		11029892	1					
ANR	11030128	Identifier	pcur		11029892	0					
ANR	11030129	Identifier	index		11029892	1					
ANR	11030130	ExpressionStatement	psched -> current = 0	828:8:27691:27710	11029892	4	True				
ANR	11030131	AssignmentExpression	psched -> current = 0		11029892	0		=			
ANR	11030132	PtrMemberAccess	psched -> current		11029892	0					
ANR	11030133	Identifier	psched		11029892	0					
ANR	11030134	Identifier	current		11029892	1					
ANR	11030135	PrimaryExpression	0		11029892	1					
ANR	11030136	ElseStatement	else		11029892	0					
ANR	11030137	CompoundStatement		53:8:1930:1992	11029892	0					
ANR	11030138	IdentifierDeclStatement	"gs_context_t * pctx = index_context ( psched , pcur -> joiner_index ) ;"	830:8:27733:27795	11029892	0	True				
ANR	11030139	IdentifierDecl	"* pctx = index_context ( psched , pcur -> joiner_index )"		11029892	0					
ANR	11030140	IdentifierDeclType	gs_context_t *		11029892	0					
ANR	11030141	Identifier	pctx		11029892	1					
ANR	11030142	AssignmentExpression	"* pctx = index_context ( psched , pcur -> joiner_index )"		11029892	2		=			
ANR	11030143	Identifier	pctx		11029892	0					
ANR	11030144	CallExpression	"index_context ( psched , pcur -> joiner_index )"		11029892	1					
ANR	11030145	Callee	index_context		11029892	0					
ANR	11030146	Identifier	index_context		11029892	0					
ANR	11030147	ArgumentList	psched		11029892	1					
ANR	11030148	Argument	psched		11029892	0					
ANR	11030149	Identifier	psched		11029892	0					
ANR	11030150	Argument	pcur -> joiner_index		11029892	1					
ANR	11030151	PtrMemberAccess	pcur -> joiner_index		11029892	0					
ANR	11030152	Identifier	pcur		11029892	0					
ANR	11030153	Identifier	joiner_index		11029892	1					
ANR	11030154	ExpressionStatement	pcur -> status = cs_done	832:8:27806:27828	11029892	1	True				
ANR	11030155	AssignmentExpression	pcur -> status = cs_done		11029892	0		=			
ANR	11030156	PtrMemberAccess	pcur -> status		11029892	0					
ANR	11030157	Identifier	pcur		11029892	0					
ANR	11030158	Identifier	status		11029892	1					
ANR	11030159	Identifier	cs_done		11029892	1					
ANR	11030160	IfStatement	if ( pctx != 0 )		11029892	2					
ANR	11030161	Condition	pctx != 0	834:12:27911:27919	11029892	0	True				
ANR	11030162	EqualityExpression	pctx != 0		11029892	0		!=			
ANR	11030163	Identifier	pctx		11029892	0					
ANR	11030164	PrimaryExpression	0		11029892	1					
ANR	11030165	ExpressionStatement	"add_last ( psched , & psched -> active , pctx )"	835:12:27934:27973	11029892	1	True				
ANR	11030166	CallExpression	"add_last ( psched , & psched -> active , pctx )"		11029892	0					
ANR	11030167	Callee	add_last		11029892	0					
ANR	11030168	Identifier	add_last		11029892	0					
ANR	11030169	ArgumentList	psched		11029892	1					
ANR	11030170	Argument	psched		11029892	0					
ANR	11030171	Identifier	psched		11029892	0					
ANR	11030172	Argument	& psched -> active		11029892	1					
ANR	11030173	UnaryOperationExpression	& psched -> active		11029892	0					
ANR	11030174	UnaryOperator	&		11029892	0					
ANR	11030175	PtrMemberAccess	psched -> active		11029892	1					
ANR	11030176	Identifier	psched		11029892	0					
ANR	11030177	Identifier	active		11029892	1					
ANR	11030178	Argument	pctx		11029892	2					
ANR	11030179	Identifier	pctx		11029892	0					
ANR	11030180	ReturnStatement	return o_reschedule ;	837:4:27985:28004	11029892	9	True				
ANR	11030181	Identifier	o_reschedule		11029892	0					
ANR	11030182	ReturnType	static int		11029892	1					
ANR	11030183	Identifier	fork_done		11029892	2					
ANR	11030184	ParameterList	i_ctx_t * i_ctx_p		11029892	3					
ANR	11030185	Parameter	i_ctx_t * i_ctx_p	777:10:25784:25799	11029892	0	True				
ANR	11030186	ParameterType	i_ctx_t *		11029892	0					
ANR	11030187	Identifier	i_ctx_p		11029892	1					
ANR	11030188	CFGEntryNode	ENTRY		11029892		True				
ANR	11030189	CFGExitNode	EXIT		11029892		True				
ANR	11030190	Symbol	pcur -> scheduler		11029892						
ANR	11030191	Symbol	psched -> dead_index		11029892						
ANR	11030192	Symbol	cs_done		11029892						
ANR	11030193	Symbol	pcur -> next_index		11029892						
ANR	11030194	Symbol	esp		11029892						
ANR	11030195	Symbol	pctx		11029892						
ANR	11030196	Symbol	psched -> current		11029892						
ANR	11030197	Symbol	pcur -> index		11029892						
ANR	11030198	Symbol	iimemory_local -> save_level		11029892						
ANR	11030199	Symbol	t_save		11029892						
ANR	11030200	Symbol	osp		11029892						
ANR	11030201	Symbol	& psched -> active		11029892						
ANR	11030202	Symbol	iimemory_local		11029892						
ANR	11030203	Symbol	saveid		11029892						
ANR	11030204	Symbol	igs		11029892						
ANR	11030205	Symbol	& d_stack		11029892						
ANR	11030206	Symbol	min_dstack_size		11029892						
ANR	11030207	Symbol	o_push_estack		11029892						
ANR	11030208	Symbol	gs_error_Fatal		11029892						
ANR	11030209	Symbol	op		11029892						
ANR	11030210	Symbol	alloc_save_current_id		11029892						
ANR	11030211	Symbol	pcur		11029892						
ANR	11030212	Symbol	* pcur		11029892						
ANR	11030213	Symbol	dict_find_string		11029892						
ANR	11030214	Symbol	o_reschedule		11029892						
ANR	11030215	Symbol	psched		11029892						
ANR	11030216	Symbol	* psched		11029892						
ANR	11030217	Symbol	& pcur -> state		11029892						
ANR	11030218	Symbol	& gs_imemory		11029892						
ANR	11030219	Symbol	prestore		11029892						
ANR	11030220	Symbol	fork_done		11029892						
ANR	11030221	Symbol	pcur -> joiner_index		11029892						
ANR	11030222	Symbol	i_ctx_p		11029892						
ANR	11030223	Symbol	& o_stack		11029892						
ANR	11030224	Symbol	ref_stack_count		11029892						
ANR	11030225	Symbol	pcur -> detach		11029892						
ANR	11030226	Symbol	* iimemory_local		11029892						
ANR	11030227	Symbol	& prestore		11029892						
ANR	11030228	Symbol	systemdict		11029892						
ANR	11030229	Symbol	& e_stack		11029892						
ANR	11030230	Symbol	pcur -> status		11029892						
ANR	11030231	Symbol	index_context		11029892						
ANR	11030232	Function	fork_done_with_error	843:0:28098:28209							
ANR	11030233	FunctionDef	fork_done_with_error (i_ctx_t * i_ctx_p)		11030232	0					
ANR	11030234	CompoundStatement		845:0:28148:28209	11030232	0					
ANR	11030235	ReturnStatement	return fork_done ( i_ctx_p ) ;	847:4:28182:28207	11030232	0	True				
ANR	11030236	CallExpression	fork_done ( i_ctx_p )		11030232	0					
ANR	11030237	Callee	fork_done		11030232	0					
ANR	11030238	Identifier	fork_done		11030232	0					
ANR	11030239	ArgumentList	i_ctx_p		11030232	1					
ANR	11030240	Argument	i_ctx_p		11030232	0					
ANR	11030241	Identifier	i_ctx_p		11030232	0					
ANR	11030242	ReturnType	static int		11030232	1					
ANR	11030243	Identifier	fork_done_with_error		11030232	2					
ANR	11030244	ParameterList	i_ctx_t * i_ctx_p		11030232	3					
ANR	11030245	Parameter	i_ctx_t * i_ctx_p	844:21:28130:28145	11030232	0	True				
ANR	11030246	ParameterType	i_ctx_t *		11030232	0					
ANR	11030247	Identifier	i_ctx_p		11030232	1					
ANR	11030248	CFGEntryNode	ENTRY		11030232		True				
ANR	11030249	CFGExitNode	EXIT		11030232		True				
ANR	11030250	Symbol	fork_done		11030232						
ANR	11030251	Symbol	i_ctx_p		11030232						
ANR	11030252	Function	zjoin	851:0:28258:30176							
ANR	11030253	FunctionDef	zjoin (i_ctx_t * i_ctx_p)		11030252	0					
ANR	11030254	CompoundStatement		853:0:28293:30176	11030252	0					
ANR	11030255	IdentifierDeclStatement	os_ptr op = osp ;	854:4:28299:28314	11030252	0	True				
ANR	11030256	IdentifierDecl	op = osp		11030252	0					
ANR	11030257	IdentifierDeclType	os_ptr		11030252	0					
ANR	11030258	Identifier	op		11030252	1					
ANR	11030259	AssignmentExpression	op = osp		11030252	2		=			
ANR	11030260	Identifier	osp		11030252	0					
ANR	11030261	Identifier	osp		11030252	1					
ANR	11030262	IdentifierDeclStatement	gs_context_t * current = ( gs_context_t * ) i_ctx_p ;	855:4:28320:28367	11030252	1	True				
ANR	11030263	IdentifierDecl	* current = ( gs_context_t * ) i_ctx_p		11030252	0					
ANR	11030264	IdentifierDeclType	gs_context_t *		11030252	0					
ANR	11030265	Identifier	current		11030252	1					
ANR	11030266	AssignmentExpression	* current = ( gs_context_t * ) i_ctx_p		11030252	2		=			
ANR	11030267	Identifier	current		11030252	0					
ANR	11030268	CastExpression	( gs_context_t * ) i_ctx_p		11030252	1					
ANR	11030269	CastTarget	gs_context_t *		11030252	0					
ANR	11030270	Identifier	i_ctx_p		11030252	1					
ANR	11030271	IdentifierDeclStatement	gs_scheduler_t * psched = current -> scheduler ;	856:4:28373:28416	11030252	2	True				
ANR	11030272	IdentifierDecl	* psched = current -> scheduler		11030252	0					
ANR	11030273	IdentifierDeclType	gs_scheduler_t *		11030252	0					
ANR	11030274	Identifier	psched		11030252	1					
ANR	11030275	AssignmentExpression	* psched = current -> scheduler		11030252	2		=			
ANR	11030276	Identifier	psched		11030252	0					
ANR	11030277	PtrMemberAccess	current -> scheduler		11030252	1					
ANR	11030278	Identifier	current		11030252	0					
ANR	11030279	Identifier	scheduler		11030252	1					
ANR	11030280	IdentifierDeclStatement	gs_context_t * pctx ;	857:4:28422:28440	11030252	3	True				
ANR	11030281	IdentifierDecl	* pctx		11030252	0					
ANR	11030282	IdentifierDeclType	gs_context_t *		11030252	0					
ANR	11030283	Identifier	pctx		11030252	1					
ANR	11030284	IdentifierDeclStatement	int code ;	858:4:28446:28454	11030252	4	True				
ANR	11030285	IdentifierDecl	code		11030252	0					
ANR	11030286	IdentifierDeclType	int		11030252	0					
ANR	11030287	Identifier	code		11030252	1					
ANR	11030288	IfStatement	"if ( ( code = context_param ( psched , op , & pctx ) ) < 0 )"		11030252	5					
ANR	11030289	Condition	"( code = context_param ( psched , op , & pctx ) ) < 0"	860:8:28465:28509	11030252	0	True				
ANR	11030290	RelationalExpression	"( code = context_param ( psched , op , & pctx ) ) < 0"		11030252	0		<			
ANR	11030291	AssignmentExpression	"code = context_param ( psched , op , & pctx )"		11030252	0		=			
ANR	11030292	Identifier	code		11030252	0					
ANR	11030293	CallExpression	"context_param ( psched , op , & pctx )"		11030252	1					
ANR	11030294	Callee	context_param		11030252	0					
ANR	11030295	Identifier	context_param		11030252	0					
ANR	11030296	ArgumentList	psched		11030252	1					
ANR	11030297	Argument	psched		11030252	0					
ANR	11030298	Identifier	psched		11030252	0					
ANR	11030299	Argument	op		11030252	1					
ANR	11030300	Identifier	op		11030252	0					
ANR	11030301	Argument	& pctx		11030252	2					
ANR	11030302	UnaryOperationExpression	& pctx		11030252	0					
ANR	11030303	UnaryOperator	&		11030252	0					
ANR	11030304	Identifier	pctx		11030252	1					
ANR	11030305	PrimaryExpression	0		11030252	1					
ANR	11030306	ReturnStatement	return code ;	861:8:28520:28531	11030252	1	True				
ANR	11030307	Identifier	code		11030252	0					
ANR	11030308	ExpressionStatement	"if_debug2 ( '\\'' , ""[']join %ld, status = %d\\n"" , pctx -> index , pctx -> status )"	862:4:28537:28623	11030252	6	True				
ANR	11030309	CallExpression	"if_debug2 ( '\\'' , ""[']join %ld, status = %d\\n"" , pctx -> index , pctx -> status )"		11030252	0					
ANR	11030310	Callee	if_debug2		11030252	0					
ANR	11030311	Identifier	if_debug2		11030252	0					
ANR	11030312	ArgumentList	'\\''		11030252	1					
ANR	11030313	Argument	'\\''		11030252	0					
ANR	11030314	PrimaryExpression	'\\''		11030252	0					
ANR	11030315	Argument	"""[']join %ld, status = %d\\n"""		11030252	1					
ANR	11030316	PrimaryExpression	"""[']join %ld, status = %d\\n"""		11030252	0					
ANR	11030317	Argument	pctx -> index		11030252	2					
ANR	11030318	PtrMemberAccess	pctx -> index		11030252	0					
ANR	11030319	Identifier	pctx		11030252	0					
ANR	11030320	Identifier	index		11030252	1					
ANR	11030321	Argument	pctx -> status		11030252	3					
ANR	11030322	PtrMemberAccess	pctx -> status		11030252	0					
ANR	11030323	Identifier	pctx		11030252	0					
ANR	11030324	Identifier	status		11030252	1					
ANR	11030325	IfStatement	if ( pctx -> joiner_index != 0 || pctx -> detach || pctx == current || pctx -> state . memory . space_global != current -> state . memory . space_global || pctx -> state . memory . space_local != current -> state . memory . space_local || iimemory_local -> save_level != 0 )		11030252	7					
ANR	11030326	Condition	pctx -> joiner_index != 0 || pctx -> detach || pctx == current || pctx -> state . memory . space_global != current -> state . memory . space_global || pctx -> state . memory . space_local != current -> state . memory . space_local || iimemory_local -> save_level != 0	869:8:28820:29100	11030252	0	True				
ANR	11030327	OrExpression	pctx -> joiner_index != 0 || pctx -> detach || pctx == current || pctx -> state . memory . space_global != current -> state . memory . space_global || pctx -> state . memory . space_local != current -> state . memory . space_local || iimemory_local -> save_level != 0		11030252	0		||			
ANR	11030328	EqualityExpression	pctx -> joiner_index != 0		11030252	0		!=			
ANR	11030329	PtrMemberAccess	pctx -> joiner_index		11030252	0					
ANR	11030330	Identifier	pctx		11030252	0					
ANR	11030331	Identifier	joiner_index		11030252	1					
ANR	11030332	PrimaryExpression	0		11030252	1					
ANR	11030333	OrExpression	pctx -> detach || pctx == current || pctx -> state . memory . space_global != current -> state . memory . space_global || pctx -> state . memory . space_local != current -> state . memory . space_local || iimemory_local -> save_level != 0		11030252	1		||			
ANR	11030334	PtrMemberAccess	pctx -> detach		11030252	0					
ANR	11030335	Identifier	pctx		11030252	0					
ANR	11030336	Identifier	detach		11030252	1					
ANR	11030337	OrExpression	pctx == current || pctx -> state . memory . space_global != current -> state . memory . space_global || pctx -> state . memory . space_local != current -> state . memory . space_local || iimemory_local -> save_level != 0		11030252	1		||			
ANR	11030338	EqualityExpression	pctx == current		11030252	0		==			
ANR	11030339	Identifier	pctx		11030252	0					
ANR	11030340	Identifier	current		11030252	1					
ANR	11030341	OrExpression	pctx -> state . memory . space_global != current -> state . memory . space_global || pctx -> state . memory . space_local != current -> state . memory . space_local || iimemory_local -> save_level != 0		11030252	1		||			
ANR	11030342	EqualityExpression	pctx -> state . memory . space_global != current -> state . memory . space_global		11030252	0		!=			
ANR	11030343	MemberAccess	pctx -> state . memory . space_global		11030252	0					
ANR	11030344	MemberAccess	pctx -> state . memory		11030252	0					
ANR	11030345	PtrMemberAccess	pctx -> state		11030252	0					
ANR	11030346	Identifier	pctx		11030252	0					
ANR	11030347	Identifier	state		11030252	1					
ANR	11030348	Identifier	memory		11030252	1					
ANR	11030349	Identifier	space_global		11030252	1					
ANR	11030350	MemberAccess	current -> state . memory . space_global		11030252	1					
ANR	11030351	MemberAccess	current -> state . memory		11030252	0					
ANR	11030352	PtrMemberAccess	current -> state		11030252	0					
ANR	11030353	Identifier	current		11030252	0					
ANR	11030354	Identifier	state		11030252	1					
ANR	11030355	Identifier	memory		11030252	1					
ANR	11030356	Identifier	space_global		11030252	1					
ANR	11030357	OrExpression	pctx -> state . memory . space_local != current -> state . memory . space_local || iimemory_local -> save_level != 0		11030252	1		||			
ANR	11030358	EqualityExpression	pctx -> state . memory . space_local != current -> state . memory . space_local		11030252	0		!=			
ANR	11030359	MemberAccess	pctx -> state . memory . space_local		11030252	0					
ANR	11030360	MemberAccess	pctx -> state . memory		11030252	0					
ANR	11030361	PtrMemberAccess	pctx -> state		11030252	0					
ANR	11030362	Identifier	pctx		11030252	0					
ANR	11030363	Identifier	state		11030252	1					
ANR	11030364	Identifier	memory		11030252	1					
ANR	11030365	Identifier	space_local		11030252	1					
ANR	11030366	MemberAccess	current -> state . memory . space_local		11030252	1					
ANR	11030367	MemberAccess	current -> state . memory		11030252	0					
ANR	11030368	PtrMemberAccess	current -> state		11030252	0					
ANR	11030369	Identifier	current		11030252	0					
ANR	11030370	Identifier	state		11030252	1					
ANR	11030371	Identifier	memory		11030252	1					
ANR	11030372	Identifier	space_local		11030252	1					
ANR	11030373	EqualityExpression	iimemory_local -> save_level != 0		11030252	1		!=			
ANR	11030374	PtrMemberAccess	iimemory_local -> save_level		11030252	0					
ANR	11030375	Identifier	iimemory_local		11030252	0					
ANR	11030376	Identifier	save_level		11030252	1					
ANR	11030377	PrimaryExpression	0		11030252	1					
ANR	11030378	ExpressionStatement	return_error ( gs_error_invalidcontext )	876:8:29120:29157	11030252	1	True				
ANR	11030379	CallExpression	return_error ( gs_error_invalidcontext )		11030252	0					
ANR	11030380	Callee	return_error		11030252	0					
ANR	11030381	Identifier	return_error		11030252	0					
ANR	11030382	ArgumentList	gs_error_invalidcontext		11030252	1					
ANR	11030383	Argument	gs_error_invalidcontext		11030252	0					
ANR	11030384	Identifier	gs_error_invalidcontext		11030252	0					
ANR	11030385	SwitchStatement	switch ( pctx -> status )		11030252	8					
ANR	11030386	Condition	pctx -> status	877:12:29171:29182	11030252	0	True				
ANR	11030387	PtrMemberAccess	pctx -> status		11030252	0					
ANR	11030388	Identifier	pctx		11030252	0					
ANR	11030389	Identifier	status		11030252	1					
ANR	11030390	CompoundStatement		25:26:891:891	11030252	1					
ANR	11030391	Label	case cs_active :	878:8:29195:29209	11030252	0	True				
ANR	11030392	Identifier	cs_active		11030252	0					
ANR	11030393	ExpressionStatement	check_estack ( 2 )	885:12:29504:29519	11030252	1	True				
ANR	11030394	CallExpression	check_estack ( 2 )		11030252	0					
ANR	11030395	Callee	check_estack		11030252	0					
ANR	11030396	Identifier	check_estack		11030252	0					
ANR	11030397	ArgumentList	2		11030252	1					
ANR	11030398	Argument	2		11030252	0					
ANR	11030399	PrimaryExpression	2		11030252	0					
ANR	11030400	ExpressionStatement	push_op_estack ( finish_join )	886:12:29533:29560	11030252	2	True				
ANR	11030401	CallExpression	push_op_estack ( finish_join )		11030252	0					
ANR	11030402	Callee	push_op_estack		11030252	0					
ANR	11030403	Identifier	push_op_estack		11030252	0					
ANR	11030404	ArgumentList	finish_join		11030252	1					
ANR	11030405	Argument	finish_join		11030252	0					
ANR	11030406	Identifier	finish_join		11030252	0					
ANR	11030407	ExpressionStatement	push_op_estack ( reschedule_now )	887:12:29574:29604	11030252	3	True				
ANR	11030408	CallExpression	push_op_estack ( reschedule_now )		11030252	0					
ANR	11030409	Callee	push_op_estack		11030252	0					
ANR	11030410	Identifier	push_op_estack		11030252	0					
ANR	11030411	ArgumentList	reschedule_now		11030252	1					
ANR	11030412	Argument	reschedule_now		11030252	0					
ANR	11030413	Identifier	reschedule_now		11030252	0					
ANR	11030414	ExpressionStatement	pctx -> joiner_index = current -> index	888:12:29618:29653	11030252	4	True				
ANR	11030415	AssignmentExpression	pctx -> joiner_index = current -> index		11030252	0		=			
ANR	11030416	PtrMemberAccess	pctx -> joiner_index		11030252	0					
ANR	11030417	Identifier	pctx		11030252	0					
ANR	11030418	Identifier	joiner_index		11030252	1					
ANR	11030419	PtrMemberAccess	current -> index		11030252	1					
ANR	11030420	Identifier	current		11030252	0					
ANR	11030421	Identifier	index		11030252	1					
ANR	11030422	ReturnStatement	return o_push_estack ;	889:12:29667:29687	11030252	5	True				
ANR	11030423	Identifier	o_push_estack		11030252	0					
ANR	11030424	Label	case cs_done :	890:8:29697:29709	11030252	6	True				
ANR	11030425	Identifier	cs_done		11030252	0					
ANR	11030426	CompoundStatement		42:16:1549:1585	11030252	7					
ANR	11030427	IdentifierDeclStatement	const ref_stack_t * ostack = ( ref_stack_t * ) & pctx -> state . op_stack ;	892:16:29741:29825	11030252	0	True				
ANR	11030428	IdentifierDecl	* ostack = ( ref_stack_t * ) & pctx -> state . op_stack		11030252	0					
ANR	11030429	IdentifierDeclType	const ref_stack_t *		11030252	0					
ANR	11030430	Identifier	ostack		11030252	1					
ANR	11030431	AssignmentExpression	* ostack = ( ref_stack_t * ) & pctx -> state . op_stack		11030252	2		=			
ANR	11030432	Identifier	ostack		11030252	0					
ANR	11030433	CastExpression	( ref_stack_t * ) & pctx -> state . op_stack		11030252	1					
ANR	11030434	CastTarget	ref_stack_t *		11030252	0					
ANR	11030435	UnaryOperationExpression	& pctx -> state . op_stack		11030252	1					
ANR	11030436	UnaryOperator	&		11030252	0					
ANR	11030437	MemberAccess	pctx -> state . op_stack		11030252	1					
ANR	11030438	PtrMemberAccess	pctx -> state		11030252	0					
ANR	11030439	Identifier	pctx		11030252	0					
ANR	11030440	Identifier	state		11030252	1					
ANR	11030441	Identifier	op_stack		11030252	1					
ANR	11030442	IdentifierDeclStatement	uint count = ref_stack_count ( ostack ) ;	894:16:29843:29879	11030252	1	True				
ANR	11030443	IdentifierDecl	count = ref_stack_count ( ostack )		11030252	0					
ANR	11030444	IdentifierDeclType	uint		11030252	0					
ANR	11030445	Identifier	count		11030252	1					
ANR	11030446	AssignmentExpression	count = ref_stack_count ( ostack )		11030252	2		=			
ANR	11030447	Identifier	count		11030252	0					
ANR	11030448	CallExpression	ref_stack_count ( ostack )		11030252	1					
ANR	11030449	Callee	ref_stack_count		11030252	0					
ANR	11030450	Identifier	ref_stack_count		11030252	0					
ANR	11030451	ArgumentList	ostack		11030252	1					
ANR	11030452	Argument	ostack		11030252	0					
ANR	11030453	Identifier	ostack		11030252	0					
ANR	11030454	ExpressionStatement	push ( count )	896:16:29898:29909	11030252	2	True				
ANR	11030455	CallExpression	push ( count )		11030252	0					
ANR	11030456	Callee	push		11030252	0					
ANR	11030457	Identifier	push		11030252	0					
ANR	11030458	ArgumentList	count		11030252	1					
ANR	11030459	Argument	count		11030252	0					
ANR	11030460	Identifier	count		11030252	0					
ANR	11030461	CompoundStatement		46:20:1655:1697	11030252	3					
ANR	11030462	IdentifierDeclStatement	"ref * rp = ref_stack_index ( & o_stack , count ) ;"	898:20:29949:29991	11030252	0	True				
ANR	11030463	IdentifierDecl	"* rp = ref_stack_index ( & o_stack , count )"		11030252	0					
ANR	11030464	IdentifierDeclType	ref *		11030252	0					
ANR	11030465	Identifier	rp		11030252	1					
ANR	11030466	AssignmentExpression	"* rp = ref_stack_index ( & o_stack , count )"		11030252	2		=			
ANR	11030467	Identifier	rp		11030252	0					
ANR	11030468	CallExpression	"ref_stack_index ( & o_stack , count )"		11030252	1					
ANR	11030469	Callee	ref_stack_index		11030252	0					
ANR	11030470	Identifier	ref_stack_index		11030252	0					
ANR	11030471	ArgumentList	& o_stack		11030252	1					
ANR	11030472	Argument	& o_stack		11030252	0					
ANR	11030473	UnaryOperationExpression	& o_stack		11030252	0					
ANR	11030474	UnaryOperator	&		11030252	0					
ANR	11030475	Identifier	o_stack		11030252	1					
ANR	11030476	Argument	count		11030252	1					
ANR	11030477	Identifier	count		11030252	0					
ANR	11030478	ExpressionStatement	make_mark ( rp )	900:20:30014:30027	11030252	1	True				
ANR	11030479	CallExpression	make_mark ( rp )		11030252	0					
ANR	11030480	Callee	make_mark		11030252	0					
ANR	11030481	Identifier	make_mark		11030252	0					
ANR	11030482	ArgumentList	rp		11030252	1					
ANR	11030483	Argument	rp		11030252	0					
ANR	11030484	Identifier	rp		11030252	0					
ANR	11030485	ExpressionStatement	"stack_copy ( & o_stack , ostack , count , 0 )"	902:16:30063:30101	11030252	4	True				
ANR	11030486	CallExpression	"stack_copy ( & o_stack , ostack , count , 0 )"		11030252	0					
ANR	11030487	Callee	stack_copy		11030252	0					
ANR	11030488	Identifier	stack_copy		11030252	0					
ANR	11030489	ArgumentList	& o_stack		11030252	1					
ANR	11030490	Argument	& o_stack		11030252	0					
ANR	11030491	UnaryOperationExpression	& o_stack		11030252	0					
ANR	11030492	UnaryOperator	&		11030252	0					
ANR	11030493	Identifier	o_stack		11030252	1					
ANR	11030494	Argument	ostack		11030252	1					
ANR	11030495	Identifier	ostack		11030252	0					
ANR	11030496	Argument	count		11030252	2					
ANR	11030497	Identifier	count		11030252	0					
ANR	11030498	Argument	0		11030252	3					
ANR	11030499	PrimaryExpression	0		11030252	0					
ANR	11030500	ExpressionStatement	context_destroy ( pctx )	903:16:30119:30140	11030252	5	True				
ANR	11030501	CallExpression	context_destroy ( pctx )		11030252	0					
ANR	11030502	Callee	context_destroy		11030252	0					
ANR	11030503	Identifier	context_destroy		11030252	0					
ANR	11030504	ArgumentList	pctx		11030252	1					
ANR	11030505	Argument	pctx		11030252	0					
ANR	11030506	Identifier	pctx		11030252	0					
ANR	11030507	ReturnStatement	return 0 ;	906:4:30166:30174	11030252	9	True				
ANR	11030508	PrimaryExpression	0		11030252	0					
ANR	11030509	ReturnType	static int		11030252	1					
ANR	11030510	Identifier	zjoin		11030252	2					
ANR	11030511	ParameterList	i_ctx_t * i_ctx_p		11030252	3					
ANR	11030512	Parameter	i_ctx_t * i_ctx_p	852:6:28275:28290	11030252	0	True				
ANR	11030513	ParameterType	i_ctx_t *		11030252	0					
ANR	11030514	Identifier	i_ctx_p		11030252	1					
ANR	11030515	CFGEntryNode	ENTRY		11030252		True				
ANR	11030516	CFGExitNode	EXIT		11030252		True				
ANR	11030517	Symbol	current -> index		11030252						
ANR	11030518	Symbol	ref_stack_index		11030252						
ANR	11030519	Symbol	pctx		11030252						
ANR	11030520	Symbol	code		11030252						
ANR	11030521	Symbol	finish_join		11030252						
ANR	11030522	Symbol	* current		11030252						
ANR	11030523	Symbol	iimemory_local -> save_level		11030252						
ANR	11030524	Symbol	osp		11030252						
ANR	11030525	Symbol	ostack		11030252						
ANR	11030526	Symbol	* pctx		11030252						
ANR	11030527	Symbol	current		11030252						
ANR	11030528	Symbol	current -> state		11030252						
ANR	11030529	Symbol	iimemory_local		11030252						
ANR	11030530	Symbol	pctx -> joiner_index		11030252						
ANR	11030531	Symbol	& pctx -> state . op_stack		11030252						
ANR	11030532	Symbol	& pctx -> state		11030252						
ANR	11030533	Symbol	reschedule_now		11030252						
ANR	11030534	Symbol	o_push_estack		11030252						
ANR	11030535	Symbol	op		11030252						
ANR	11030536	Symbol	pctx -> status		11030252						
ANR	11030537	Symbol	pctx -> index		11030252						
ANR	11030538	Symbol	pctx -> state . memory		11030252						
ANR	11030539	Symbol	psched		11030252						
ANR	11030540	Symbol	current -> scheduler		11030252						
ANR	11030541	Symbol	count		11030252						
ANR	11030542	Symbol	gs_error_invalidcontext		11030252						
ANR	11030543	Symbol	pctx -> state . memory . space_global		11030252						
ANR	11030544	Symbol	context_param		11030252						
ANR	11030545	Symbol	current -> state . memory . space_local		11030252						
ANR	11030546	Symbol	pctx -> detach		11030252						
ANR	11030547	Symbol	current -> state . memory . space_global		11030252						
ANR	11030548	Symbol	pctx -> state		11030252						
ANR	11030549	Symbol	i_ctx_p		11030252						
ANR	11030550	Symbol	& o_stack		11030252						
ANR	11030551	Symbol	ref_stack_count		11030252						
ANR	11030552	Symbol	* iimemory_local		11030252						
ANR	11030553	Symbol	current -> state . memory		11030252						
ANR	11030554	Symbol	pctx -> state . memory . space_local		11030252						
ANR	11030555	Symbol	& pctx		11030252						
ANR	11030556	Symbol	rp		11030252						
ANR	11030557	Function	finish_join	910:0:30209:30737							
ANR	11030558	FunctionDef	finish_join (i_ctx_t * i_ctx_p)		11030557	0					
ANR	11030559	CompoundStatement		912:0:30250:30737	11030557	0					
ANR	11030560	IdentifierDeclStatement	os_ptr op = osp ;	913:4:30256:30271	11030557	0	True				
ANR	11030561	IdentifierDecl	op = osp		11030557	0					
ANR	11030562	IdentifierDeclType	os_ptr		11030557	0					
ANR	11030563	Identifier	op		11030557	1					
ANR	11030564	AssignmentExpression	op = osp		11030557	2		=			
ANR	11030565	Identifier	osp		11030557	0					
ANR	11030566	Identifier	osp		11030557	1					
ANR	11030567	IdentifierDeclStatement	gs_context_t * current = ( gs_context_t * ) i_ctx_p ;	914:4:30277:30324	11030557	1	True				
ANR	11030568	IdentifierDecl	* current = ( gs_context_t * ) i_ctx_p		11030557	0					
ANR	11030569	IdentifierDeclType	gs_context_t *		11030557	0					
ANR	11030570	Identifier	current		11030557	1					
ANR	11030571	AssignmentExpression	* current = ( gs_context_t * ) i_ctx_p		11030557	2		=			
ANR	11030572	Identifier	current		11030557	0					
ANR	11030573	CastExpression	( gs_context_t * ) i_ctx_p		11030557	1					
ANR	11030574	CastTarget	gs_context_t *		11030557	0					
ANR	11030575	Identifier	i_ctx_p		11030557	1					
ANR	11030576	IdentifierDeclStatement	gs_scheduler_t * psched = current -> scheduler ;	915:4:30330:30373	11030557	2	True				
ANR	11030577	IdentifierDecl	* psched = current -> scheduler		11030557	0					
ANR	11030578	IdentifierDeclType	gs_scheduler_t *		11030557	0					
ANR	11030579	Identifier	psched		11030557	1					
ANR	11030580	AssignmentExpression	* psched = current -> scheduler		11030557	2		=			
ANR	11030581	Identifier	psched		11030557	0					
ANR	11030582	PtrMemberAccess	current -> scheduler		11030557	1					
ANR	11030583	Identifier	current		11030557	0					
ANR	11030584	Identifier	scheduler		11030557	1					
ANR	11030585	IdentifierDeclStatement	gs_context_t * pctx ;	916:4:30379:30397	11030557	3	True				
ANR	11030586	IdentifierDecl	* pctx		11030557	0					
ANR	11030587	IdentifierDeclType	gs_context_t *		11030557	0					
ANR	11030588	Identifier	pctx		11030557	1					
ANR	11030589	IdentifierDeclStatement	int code ;	917:4:30403:30411	11030557	4	True				
ANR	11030590	IdentifierDecl	code		11030557	0					
ANR	11030591	IdentifierDeclType	int		11030557	0					
ANR	11030592	Identifier	code		11030557	1					
ANR	11030593	IfStatement	"if ( ( code = context_param ( psched , op , & pctx ) ) < 0 )"		11030557	5					
ANR	11030594	Condition	"( code = context_param ( psched , op , & pctx ) ) < 0"	919:8:30422:30466	11030557	0	True				
ANR	11030595	RelationalExpression	"( code = context_param ( psched , op , & pctx ) ) < 0"		11030557	0		<			
ANR	11030596	AssignmentExpression	"code = context_param ( psched , op , & pctx )"		11030557	0		=			
ANR	11030597	Identifier	code		11030557	0					
ANR	11030598	CallExpression	"context_param ( psched , op , & pctx )"		11030557	1					
ANR	11030599	Callee	context_param		11030557	0					
ANR	11030600	Identifier	context_param		11030557	0					
ANR	11030601	ArgumentList	psched		11030557	1					
ANR	11030602	Argument	psched		11030557	0					
ANR	11030603	Identifier	psched		11030557	0					
ANR	11030604	Argument	op		11030557	1					
ANR	11030605	Identifier	op		11030557	0					
ANR	11030606	Argument	& pctx		11030557	2					
ANR	11030607	UnaryOperationExpression	& pctx		11030557	0					
ANR	11030608	UnaryOperator	&		11030557	0					
ANR	11030609	Identifier	pctx		11030557	1					
ANR	11030610	PrimaryExpression	0		11030557	1					
ANR	11030611	ReturnStatement	return code ;	920:8:30477:30488	11030557	1	True				
ANR	11030612	Identifier	code		11030557	0					
ANR	11030613	ExpressionStatement	"if_debug2 ( '\\'' , ""[']finish_join %ld, status = %d\\n"" , pctx -> index , pctx -> status )"	921:4:30494:30587	11030557	6	True				
ANR	11030614	CallExpression	"if_debug2 ( '\\'' , ""[']finish_join %ld, status = %d\\n"" , pctx -> index , pctx -> status )"		11030557	0					
ANR	11030615	Callee	if_debug2		11030557	0					
ANR	11030616	Identifier	if_debug2		11030557	0					
ANR	11030617	ArgumentList	'\\''		11030557	1					
ANR	11030618	Argument	'\\''		11030557	0					
ANR	11030619	PrimaryExpression	'\\''		11030557	0					
ANR	11030620	Argument	"""[']finish_join %ld, status = %d\\n"""		11030557	1					
ANR	11030621	PrimaryExpression	"""[']finish_join %ld, status = %d\\n"""		11030557	0					
ANR	11030622	Argument	pctx -> index		11030557	2					
ANR	11030623	PtrMemberAccess	pctx -> index		11030557	0					
ANR	11030624	Identifier	pctx		11030557	0					
ANR	11030625	Identifier	index		11030557	1					
ANR	11030626	Argument	pctx -> status		11030557	3					
ANR	11030627	PtrMemberAccess	pctx -> status		11030557	0					
ANR	11030628	Identifier	pctx		11030557	0					
ANR	11030629	Identifier	status		11030557	1					
ANR	11030630	IfStatement	if ( pctx -> joiner_index != current -> index )		11030557	7					
ANR	11030631	Condition	pctx -> joiner_index != current -> index	923:8:30597:30632	11030557	0	True				
ANR	11030632	EqualityExpression	pctx -> joiner_index != current -> index		11030557	0		!=			
ANR	11030633	PtrMemberAccess	pctx -> joiner_index		11030557	0					
ANR	11030634	Identifier	pctx		11030557	0					
ANR	11030635	Identifier	joiner_index		11030557	1					
ANR	11030636	PtrMemberAccess	current -> index		11030557	1					
ANR	11030637	Identifier	current		11030557	0					
ANR	11030638	Identifier	index		11030557	1					
ANR	11030639	ExpressionStatement	return_error ( gs_error_invalidcontext )	924:8:30643:30680	11030557	1	True				
ANR	11030640	CallExpression	return_error ( gs_error_invalidcontext )		11030557	0					
ANR	11030641	Callee	return_error		11030557	0					
ANR	11030642	Identifier	return_error		11030557	0					
ANR	11030643	ArgumentList	gs_error_invalidcontext		11030557	1					
ANR	11030644	Argument	gs_error_invalidcontext		11030557	0					
ANR	11030645	Identifier	gs_error_invalidcontext		11030557	0					
ANR	11030646	ExpressionStatement	pctx -> joiner_index = 0	925:4:30686:30708	11030557	8	True				
ANR	11030647	AssignmentExpression	pctx -> joiner_index = 0		11030557	0		=			
ANR	11030648	PtrMemberAccess	pctx -> joiner_index		11030557	0					
ANR	11030649	Identifier	pctx		11030557	0					
ANR	11030650	Identifier	joiner_index		11030557	1					
ANR	11030651	PrimaryExpression	0		11030557	1					
ANR	11030652	ReturnStatement	return zjoin ( i_ctx_p ) ;	926:4:30714:30735	11030557	9	True				
ANR	11030653	CallExpression	zjoin ( i_ctx_p )		11030557	0					
ANR	11030654	Callee	zjoin		11030557	0					
ANR	11030655	Identifier	zjoin		11030557	0					
ANR	11030656	ArgumentList	i_ctx_p		11030557	1					
ANR	11030657	Argument	i_ctx_p		11030557	0					
ANR	11030658	Identifier	i_ctx_p		11030557	0					
ANR	11030659	ReturnType	static int		11030557	1					
ANR	11030660	Identifier	finish_join		11030557	2					
ANR	11030661	ParameterList	i_ctx_t * i_ctx_p		11030557	3					
ANR	11030662	Parameter	i_ctx_t * i_ctx_p	911:12:30232:30247	11030557	0	True				
ANR	11030663	ParameterType	i_ctx_t *		11030557	0					
ANR	11030664	Identifier	i_ctx_p		11030557	1					
ANR	11030665	CFGEntryNode	ENTRY		11030557		True				
ANR	11030666	CFGExitNode	EXIT		11030557		True				
ANR	11030667	Symbol	current -> index		11030557						
ANR	11030668	Symbol	op		11030557						
ANR	11030669	Symbol	pctx -> status		11030557						
ANR	11030670	Symbol	pctx		11030557						
ANR	11030671	Symbol	code		11030557						
ANR	11030672	Symbol	pctx -> index		11030557						
ANR	11030673	Symbol	psched		11030557						
ANR	11030674	Symbol	current -> scheduler		11030557						
ANR	11030675	Symbol	* current		11030557						
ANR	11030676	Symbol	gs_error_invalidcontext		11030557						
ANR	11030677	Symbol	osp		11030557						
ANR	11030678	Symbol	zjoin		11030557						
ANR	11030679	Symbol	context_param		11030557						
ANR	11030680	Symbol	* pctx		11030557						
ANR	11030681	Symbol	current		11030557						
ANR	11030682	Symbol	pctx -> joiner_index		11030557						
ANR	11030683	Symbol	i_ctx_p		11030557						
ANR	11030684	Symbol	& pctx		11030557						
ANR	11030685	Function	reschedule_now	930:0:30762:30833							
ANR	11030686	FunctionDef	reschedule_now (i_ctx_t * i_ctx_p)		11030685	0					
ANR	11030687	CompoundStatement		932:0:30806:30833	11030685	0					
ANR	11030688	ReturnStatement	return o_reschedule ;	933:4:30812:30831	11030685	0	True				
ANR	11030689	Identifier	o_reschedule		11030685	0					
ANR	11030690	ReturnType	static int		11030685	1					
ANR	11030691	Identifier	reschedule_now		11030685	2					
ANR	11030692	ParameterList	i_ctx_t * i_ctx_p		11030685	3					
ANR	11030693	Parameter	i_ctx_t * i_ctx_p	931:15:30788:30803	11030685	0	True				
ANR	11030694	ParameterType	i_ctx_t *		11030685	0					
ANR	11030695	Identifier	i_ctx_p		11030685	1					
ANR	11030696	CFGEntryNode	ENTRY		11030685		True				
ANR	11030697	CFGExitNode	EXIT		11030685		True				
ANR	11030698	Symbol	o_reschedule		11030685						
ANR	11030699	Symbol	i_ctx_p		11030685						
ANR	11030700	Function	zyield	937:0:30852:31159							
ANR	11030701	FunctionDef	zyield (i_ctx_t * i_ctx_p)		11030700	0					
ANR	11030702	CompoundStatement		939:0:30888:31159	11030700	0					
ANR	11030703	IdentifierDeclStatement	gs_context_t * current = ( gs_context_t * ) i_ctx_p ;	940:4:30894:30941	11030700	0	True				
ANR	11030704	IdentifierDecl	* current = ( gs_context_t * ) i_ctx_p		11030700	0					
ANR	11030705	IdentifierDeclType	gs_context_t *		11030700	0					
ANR	11030706	Identifier	current		11030700	1					
ANR	11030707	AssignmentExpression	* current = ( gs_context_t * ) i_ctx_p		11030700	2		=			
ANR	11030708	Identifier	current		11030700	0					
ANR	11030709	CastExpression	( gs_context_t * ) i_ctx_p		11030700	1					
ANR	11030710	CastTarget	gs_context_t *		11030700	0					
ANR	11030711	Identifier	i_ctx_p		11030700	1					
ANR	11030712	IdentifierDeclStatement	gs_scheduler_t * psched = current -> scheduler ;	941:4:30947:30990	11030700	1	True				
ANR	11030713	IdentifierDecl	* psched = current -> scheduler		11030700	0					
ANR	11030714	IdentifierDeclType	gs_scheduler_t *		11030700	0					
ANR	11030715	Identifier	psched		11030700	1					
ANR	11030716	AssignmentExpression	* psched = current -> scheduler		11030700	2		=			
ANR	11030717	Identifier	psched		11030700	0					
ANR	11030718	PtrMemberAccess	current -> scheduler		11030700	1					
ANR	11030719	Identifier	current		11030700	0					
ANR	11030720	Identifier	scheduler		11030700	1					
ANR	11030721	IfStatement	if ( psched -> active . head_index == 0 )		11030700	2					
ANR	11030722	Condition	psched -> active . head_index == 0	943:8:31001:31030	11030700	0	True				
ANR	11030723	EqualityExpression	psched -> active . head_index == 0		11030700	0		==			
ANR	11030724	MemberAccess	psched -> active . head_index		11030700	0					
ANR	11030725	PtrMemberAccess	psched -> active		11030700	0					
ANR	11030726	Identifier	psched		11030700	0					
ANR	11030727	Identifier	active		11030700	1					
ANR	11030728	Identifier	head_index		11030700	1					
ANR	11030729	PrimaryExpression	0		11030700	1					
ANR	11030730	ReturnStatement	return 0 ;	944:8:31041:31049	11030700	1	True				
ANR	11030731	PrimaryExpression	0		11030700	0					
ANR	11030732	ExpressionStatement	"if_debug0 ( '""' , ""[\\""]yield\\n"" )"	945:4:31055:31084	11030700	3	True				
ANR	11030733	CallExpression	"if_debug0 ( '""' , ""[\\""]yield\\n"" )"		11030700	0					
ANR	11030734	Callee	if_debug0		11030700	0					
ANR	11030735	Identifier	if_debug0		11030700	0					
ANR	11030736	ArgumentList	"'""'"		11030700	1					
ANR	11030737	Argument	"'""'"		11030700	0					
ANR	11030738	PrimaryExpression	"'""'"		11030700	0					
ANR	11030739	Argument	"""[\\""]yield\\n"""		11030700	1					
ANR	11030740	PrimaryExpression	"""[\\""]yield\\n"""		11030700	0					
ANR	11030741	ExpressionStatement	"add_last ( psched , & psched -> active , current )"	946:4:31090:31132	11030700	4	True				
ANR	11030742	CallExpression	"add_last ( psched , & psched -> active , current )"		11030700	0					
ANR	11030743	Callee	add_last		11030700	0					
ANR	11030744	Identifier	add_last		11030700	0					
ANR	11030745	ArgumentList	psched		11030700	1					
ANR	11030746	Argument	psched		11030700	0					
ANR	11030747	Identifier	psched		11030700	0					
ANR	11030748	Argument	& psched -> active		11030700	1					
ANR	11030749	UnaryOperationExpression	& psched -> active		11030700	0					
ANR	11030750	UnaryOperator	&		11030700	0					
ANR	11030751	PtrMemberAccess	psched -> active		11030700	1					
ANR	11030752	Identifier	psched		11030700	0					
ANR	11030753	Identifier	active		11030700	1					
ANR	11030754	Argument	current		11030700	2					
ANR	11030755	Identifier	current		11030700	0					
ANR	11030756	ReturnStatement	return o_reschedule ;	947:4:31138:31157	11030700	5	True				
ANR	11030757	Identifier	o_reschedule		11030700	0					
ANR	11030758	ReturnType	static int		11030700	1					
ANR	11030759	Identifier	zyield		11030700	2					
ANR	11030760	ParameterList	i_ctx_t * i_ctx_p		11030700	3					
ANR	11030761	Parameter	i_ctx_t * i_ctx_p	938:7:30870:30885	11030700	0	True				
ANR	11030762	ParameterType	i_ctx_t *		11030700	0					
ANR	11030763	Identifier	i_ctx_p		11030700	1					
ANR	11030764	CFGEntryNode	ENTRY		11030700		True				
ANR	11030765	CFGExitNode	EXIT		11030700		True				
ANR	11030766	Symbol	& psched -> active		11030700						
ANR	11030767	Symbol	current		11030700						
ANR	11030768	Symbol	psched -> active . head_index		11030700						
ANR	11030769	Symbol	o_reschedule		11030700						
ANR	11030770	Symbol	i_ctx_p		11030700						
ANR	11030771	Symbol	psched		11030700						
ANR	11030772	Symbol	* psched		11030700						
ANR	11030773	Symbol	current -> scheduler		11030700						
ANR	11030774	Symbol	* current		11030700						
ANR	11030775	Symbol	psched -> active		11030700						
ANR	11030776	DeclStmt									
ANR	11030777	Decl							int	int ( i_ctx_t * )	monitor_cleanup
ANR	11030778	Decl							int	int ( i_ctx_t * )	monitor_release
ANR	11030779	Decl							int	int ( i_ctx_t * )	await_lock
ANR	11030780	DeclStmt									
ANR	11030781	Decl							void	"void ( gs_scheduler_t * , ctx_list_t * pcl )"	activate_waiting
ANR	11030782	Function	zcondition	960:0:31416:31762							
ANR	11030783	FunctionDef	zcondition (i_ctx_t * i_ctx_p)		11030782	0					
ANR	11030784	CompoundStatement		962:0:31456:31762	11030782	0					
ANR	11030785	IdentifierDeclStatement	os_ptr op = osp ;	963:4:31462:31477	11030782	0	True				
ANR	11030786	IdentifierDecl	op = osp		11030782	0					
ANR	11030787	IdentifierDeclType	os_ptr		11030782	0					
ANR	11030788	Identifier	op		11030782	1					
ANR	11030789	AssignmentExpression	op = osp		11030782	2		=			
ANR	11030790	Identifier	osp		11030782	0					
ANR	11030791	Identifier	osp		11030782	1					
ANR	11030792	IdentifierDeclStatement	"gs_condition_t * pcond = ialloc_struct ( gs_condition_t , & st_condition , ""zcondition"" ) ;"	964:4:31483:31573	11030782	1	True				
ANR	11030793	IdentifierDecl	"* pcond = ialloc_struct ( gs_condition_t , & st_condition , ""zcondition"" )"		11030782	0					
ANR	11030794	IdentifierDeclType	gs_condition_t *		11030782	0					
ANR	11030795	Identifier	pcond		11030782	1					
ANR	11030796	AssignmentExpression	"* pcond = ialloc_struct ( gs_condition_t , & st_condition , ""zcondition"" )"		11030782	2		=			
ANR	11030797	Identifier	pcond		11030782	0					
ANR	11030798	CallExpression	"ialloc_struct ( gs_condition_t , & st_condition , ""zcondition"" )"		11030782	1					
ANR	11030799	Callee	ialloc_struct		11030782	0					
ANR	11030800	Identifier	ialloc_struct		11030782	0					
ANR	11030801	ArgumentList	gs_condition_t		11030782	1					
ANR	11030802	Argument	gs_condition_t		11030782	0					
ANR	11030803	Identifier	gs_condition_t		11030782	0					
ANR	11030804	Argument	& st_condition		11030782	1					
ANR	11030805	UnaryOperationExpression	& st_condition		11030782	0					
ANR	11030806	UnaryOperator	&		11030782	0					
ANR	11030807	Identifier	st_condition		11030782	1					
ANR	11030808	Argument	"""zcondition"""		11030782	2					
ANR	11030809	PrimaryExpression	"""zcondition"""		11030782	0					
ANR	11030810	IfStatement	if ( pcond == 0 )		11030782	2					
ANR	11030811	Condition	pcond == 0	967:8:31584:31593	11030782	0	True				
ANR	11030812	EqualityExpression	pcond == 0		11030782	0		==			
ANR	11030813	Identifier	pcond		11030782	0					
ANR	11030814	PrimaryExpression	0		11030782	1					
ANR	11030815	ExpressionStatement	return_error ( gs_error_VMerror )	968:8:31604:31634	11030782	1	True				
ANR	11030816	CallExpression	return_error ( gs_error_VMerror )		11030782	0					
ANR	11030817	Callee	return_error		11030782	0					
ANR	11030818	Identifier	return_error		11030782	0					
ANR	11030819	ArgumentList	gs_error_VMerror		11030782	1					
ANR	11030820	Argument	gs_error_VMerror		11030782	0					
ANR	11030821	Identifier	gs_error_VMerror		11030782	0					
ANR	11030822	ExpressionStatement	pcond -> waiting . head_index = pcond -> waiting . tail_index = 0	969:4:31640:31697	11030782	3	True				
ANR	11030823	AssignmentExpression	pcond -> waiting . head_index = pcond -> waiting . tail_index = 0		11030782	0		=			
ANR	11030824	MemberAccess	pcond -> waiting . head_index		11030782	0					
ANR	11030825	PtrMemberAccess	pcond -> waiting		11030782	0					
ANR	11030826	Identifier	pcond		11030782	0					
ANR	11030827	Identifier	waiting		11030782	1					
ANR	11030828	Identifier	head_index		11030782	1					
ANR	11030829	AssignmentExpression	pcond -> waiting . tail_index = 0		11030782	1		=			
ANR	11030830	MemberAccess	pcond -> waiting . tail_index		11030782	0					
ANR	11030831	PtrMemberAccess	pcond -> waiting		11030782	0					
ANR	11030832	Identifier	pcond		11030782	0					
ANR	11030833	Identifier	waiting		11030782	1					
ANR	11030834	Identifier	tail_index		11030782	1					
ANR	11030835	PrimaryExpression	0		11030782	1					
ANR	11030836	ExpressionStatement	push ( 1 )	970:4:31703:31710	11030782	4	True				
ANR	11030837	CallExpression	push ( 1 )		11030782	0					
ANR	11030838	Callee	push		11030782	0					
ANR	11030839	Identifier	push		11030782	0					
ANR	11030840	ArgumentList	1		11030782	1					
ANR	11030841	Argument	1		11030782	0					
ANR	11030842	PrimaryExpression	1		11030782	0					
ANR	11030843	ExpressionStatement	"make_istruct ( op , a_all , pcond )"	971:4:31716:31746	11030782	5	True				
ANR	11030844	CallExpression	"make_istruct ( op , a_all , pcond )"		11030782	0					
ANR	11030845	Callee	make_istruct		11030782	0					
ANR	11030846	Identifier	make_istruct		11030782	0					
ANR	11030847	ArgumentList	op		11030782	1					
ANR	11030848	Argument	op		11030782	0					
ANR	11030849	Identifier	op		11030782	0					
ANR	11030850	Argument	a_all		11030782	1					
ANR	11030851	Identifier	a_all		11030782	0					
ANR	11030852	Argument	pcond		11030782	2					
ANR	11030853	Identifier	pcond		11030782	0					
ANR	11030854	ReturnStatement	return 0 ;	972:4:31752:31760	11030782	6	True				
ANR	11030855	PrimaryExpression	0		11030782	0					
ANR	11030856	ReturnType	static int		11030782	1					
ANR	11030857	Identifier	zcondition		11030782	2					
ANR	11030858	ParameterList	i_ctx_t * i_ctx_p		11030782	3					
ANR	11030859	Parameter	i_ctx_t * i_ctx_p	961:11:31438:31453	11030782	0	True				
ANR	11030860	ParameterType	i_ctx_t *		11030782	0					
ANR	11030861	Identifier	i_ctx_p		11030782	1					
ANR	11030862	CFGEntryNode	ENTRY		11030782		True				
ANR	11030863	CFGExitNode	EXIT		11030782		True				
ANR	11030864	Symbol	a_all		11030782						
ANR	11030865	Symbol	op		11030782						
ANR	11030866	Symbol	ialloc_struct		11030782						
ANR	11030867	Symbol	pcond -> waiting		11030782						
ANR	11030868	Symbol	* pcond		11030782						
ANR	11030869	Symbol	pcond -> waiting . head_index		11030782						
ANR	11030870	Symbol	pcond		11030782						
ANR	11030871	Symbol	osp		11030782						
ANR	11030872	Symbol	gs_error_VMerror		11030782						
ANR	11030873	Symbol	& st_condition		11030782						
ANR	11030874	Symbol	i_ctx_p		11030782						
ANR	11030875	Symbol	gs_condition_t		11030782						
ANR	11030876	Symbol	pcond -> waiting . tail_index		11030782						
ANR	11030877	Function	zlock	976:0:31785:32156							
ANR	11030878	FunctionDef	zlock (i_ctx_t * i_ctx_p)		11030877	0					
ANR	11030879	CompoundStatement		978:0:31820:32156	11030877	0					
ANR	11030880	IdentifierDeclStatement	os_ptr op = osp ;	979:4:31826:31841	11030877	0	True				
ANR	11030881	IdentifierDecl	op = osp		11030877	0					
ANR	11030882	IdentifierDeclType	os_ptr		11030877	0					
ANR	11030883	Identifier	op		11030877	1					
ANR	11030884	AssignmentExpression	op = osp		11030877	2		=			
ANR	11030885	Identifier	osp		11030877	0					
ANR	11030886	Identifier	osp		11030877	1					
ANR	11030887	IdentifierDeclStatement	"gs_lock_t * plock = ialloc_struct ( gs_lock_t , & st_lock , ""zlock"" ) ;"	980:4:31847:31909	11030877	1	True				
ANR	11030888	IdentifierDecl	"* plock = ialloc_struct ( gs_lock_t , & st_lock , ""zlock"" )"		11030877	0					
ANR	11030889	IdentifierDeclType	gs_lock_t *		11030877	0					
ANR	11030890	Identifier	plock		11030877	1					
ANR	11030891	AssignmentExpression	"* plock = ialloc_struct ( gs_lock_t , & st_lock , ""zlock"" )"		11030877	2		=			
ANR	11030892	Identifier	plock		11030877	0					
ANR	11030893	CallExpression	"ialloc_struct ( gs_lock_t , & st_lock , ""zlock"" )"		11030877	1					
ANR	11030894	Callee	ialloc_struct		11030877	0					
ANR	11030895	Identifier	ialloc_struct		11030877	0					
ANR	11030896	ArgumentList	gs_lock_t		11030877	1					
ANR	11030897	Argument	gs_lock_t		11030877	0					
ANR	11030898	Identifier	gs_lock_t		11030877	0					
ANR	11030899	Argument	& st_lock		11030877	1					
ANR	11030900	UnaryOperationExpression	& st_lock		11030877	0					
ANR	11030901	UnaryOperator	&		11030877	0					
ANR	11030902	Identifier	st_lock		11030877	1					
ANR	11030903	Argument	"""zlock"""		11030877	2					
ANR	11030904	PrimaryExpression	"""zlock"""		11030877	0					
ANR	11030905	IfStatement	if ( plock == 0 )		11030877	2					
ANR	11030906	Condition	plock == 0	982:8:31920:31929	11030877	0	True				
ANR	11030907	EqualityExpression	plock == 0		11030877	0		==			
ANR	11030908	Identifier	plock		11030877	0					
ANR	11030909	PrimaryExpression	0		11030877	1					
ANR	11030910	ExpressionStatement	return_error ( gs_error_VMerror )	983:8:31940:31970	11030877	1	True				
ANR	11030911	CallExpression	return_error ( gs_error_VMerror )		11030877	0					
ANR	11030912	Callee	return_error		11030877	0					
ANR	11030913	Identifier	return_error		11030877	0					
ANR	11030914	ArgumentList	gs_error_VMerror		11030877	1					
ANR	11030915	Argument	gs_error_VMerror		11030877	0					
ANR	11030916	Identifier	gs_error_VMerror		11030877	0					
ANR	11030917	ExpressionStatement	plock -> holder_index = 0	984:4:31976:31999	11030877	3	True				
ANR	11030918	AssignmentExpression	plock -> holder_index = 0		11030877	0		=			
ANR	11030919	PtrMemberAccess	plock -> holder_index		11030877	0					
ANR	11030920	Identifier	plock		11030877	0					
ANR	11030921	Identifier	holder_index		11030877	1					
ANR	11030922	PrimaryExpression	0		11030877	1					
ANR	11030923	ExpressionStatement	plock -> waiting . head_index = plock -> waiting . tail_index = 0	985:4:32005:32062	11030877	4	True				
ANR	11030924	AssignmentExpression	plock -> waiting . head_index = plock -> waiting . tail_index = 0		11030877	0		=			
ANR	11030925	MemberAccess	plock -> waiting . head_index		11030877	0					
ANR	11030926	PtrMemberAccess	plock -> waiting		11030877	0					
ANR	11030927	Identifier	plock		11030877	0					
ANR	11030928	Identifier	waiting		11030877	1					
ANR	11030929	Identifier	head_index		11030877	1					
ANR	11030930	AssignmentExpression	plock -> waiting . tail_index = 0		11030877	1		=			
ANR	11030931	MemberAccess	plock -> waiting . tail_index		11030877	0					
ANR	11030932	PtrMemberAccess	plock -> waiting		11030877	0					
ANR	11030933	Identifier	plock		11030877	0					
ANR	11030934	Identifier	waiting		11030877	1					
ANR	11030935	Identifier	tail_index		11030877	1					
ANR	11030936	PrimaryExpression	0		11030877	1					
ANR	11030937	ExpressionStatement	plock -> scheduler = NULL	986:4:32068:32091	11030877	5	True				
ANR	11030938	AssignmentExpression	plock -> scheduler = NULL		11030877	0		=			
ANR	11030939	PtrMemberAccess	plock -> scheduler		11030877	0					
ANR	11030940	Identifier	plock		11030877	0					
ANR	11030941	Identifier	scheduler		11030877	1					
ANR	11030942	Identifier	NULL		11030877	1					
ANR	11030943	ExpressionStatement	push ( 1 )	987:4:32097:32104	11030877	6	True				
ANR	11030944	CallExpression	push ( 1 )		11030877	0					
ANR	11030945	Callee	push		11030877	0					
ANR	11030946	Identifier	push		11030877	0					
ANR	11030947	ArgumentList	1		11030877	1					
ANR	11030948	Argument	1		11030877	0					
ANR	11030949	PrimaryExpression	1		11030877	0					
ANR	11030950	ExpressionStatement	"make_istruct ( op , a_all , plock )"	988:4:32110:32140	11030877	7	True				
ANR	11030951	CallExpression	"make_istruct ( op , a_all , plock )"		11030877	0					
ANR	11030952	Callee	make_istruct		11030877	0					
ANR	11030953	Identifier	make_istruct		11030877	0					
ANR	11030954	ArgumentList	op		11030877	1					
ANR	11030955	Argument	op		11030877	0					
ANR	11030956	Identifier	op		11030877	0					
ANR	11030957	Argument	a_all		11030877	1					
ANR	11030958	Identifier	a_all		11030877	0					
ANR	11030959	Argument	plock		11030877	2					
ANR	11030960	Identifier	plock		11030877	0					
ANR	11030961	ReturnStatement	return 0 ;	989:4:32146:32154	11030877	8	True				
ANR	11030962	PrimaryExpression	0		11030877	0					
ANR	11030963	ReturnType	static int		11030877	1					
ANR	11030964	Identifier	zlock		11030877	2					
ANR	11030965	ParameterList	i_ctx_t * i_ctx_p		11030877	3					
ANR	11030966	Parameter	i_ctx_t * i_ctx_p	977:6:31802:31817	11030877	0	True				
ANR	11030967	ParameterType	i_ctx_t *		11030877	0					
ANR	11030968	Identifier	i_ctx_p		11030877	1					
ANR	11030969	CFGEntryNode	ENTRY		11030877		True				
ANR	11030970	CFGExitNode	EXIT		11030877		True				
ANR	11030971	Symbol	a_all		11030877						
ANR	11030972	Symbol	op		11030877						
ANR	11030973	Symbol	ialloc_struct		11030877						
ANR	11030974	Symbol	NULL		11030877						
ANR	11030975	Symbol	gs_lock_t		11030877						
ANR	11030976	Symbol	plock		11030877						
ANR	11030977	Symbol	plock -> holder_index		11030877						
ANR	11030978	Symbol	osp		11030877						
ANR	11030979	Symbol	plock -> scheduler		11030877						
ANR	11030980	Symbol	gs_error_VMerror		11030877						
ANR	11030981	Symbol	plock -> waiting . head_index		11030877						
ANR	11030982	Symbol	& st_lock		11030877						
ANR	11030983	Symbol	i_ctx_p		11030877						
ANR	11030984	Symbol	* plock		11030877						
ANR	11030985	Symbol	plock -> waiting		11030877						
ANR	11030986	Symbol	plock -> waiting . tail_index		11030877						
ANR	11030987	Function	zmonitor	993:0:32189:33518							
ANR	11030988	FunctionDef	zmonitor (i_ctx_t * i_ctx_p)		11030987	0					
ANR	11030989	CompoundStatement		995:0:32227:33518	11030987	0					
ANR	11030990	IdentifierDeclStatement	gs_context_t * current = ( gs_context_t * ) i_ctx_p ;	996:4:32233:32280	11030987	0	True				
ANR	11030991	IdentifierDecl	* current = ( gs_context_t * ) i_ctx_p		11030987	0					
ANR	11030992	IdentifierDeclType	gs_context_t *		11030987	0					
ANR	11030993	Identifier	current		11030987	1					
ANR	11030994	AssignmentExpression	* current = ( gs_context_t * ) i_ctx_p		11030987	2		=			
ANR	11030995	Identifier	current		11030987	0					
ANR	11030996	CastExpression	( gs_context_t * ) i_ctx_p		11030987	1					
ANR	11030997	CastTarget	gs_context_t *		11030987	0					
ANR	11030998	Identifier	i_ctx_p		11030987	1					
ANR	11030999	IdentifierDeclStatement	os_ptr op = osp ;	997:4:32286:32301	11030987	1	True				
ANR	11031000	IdentifierDecl	op = osp		11030987	0					
ANR	11031001	IdentifierDeclType	os_ptr		11030987	0					
ANR	11031002	Identifier	op		11030987	1					
ANR	11031003	AssignmentExpression	op = osp		11030987	2		=			
ANR	11031004	Identifier	osp		11030987	0					
ANR	11031005	Identifier	osp		11030987	1					
ANR	11031006	IdentifierDeclStatement	gs_lock_t * plock ;	998:4:32307:32323	11030987	2	True				
ANR	11031007	IdentifierDecl	* plock		11030987	0					
ANR	11031008	IdentifierDeclType	gs_lock_t *		11030987	0					
ANR	11031009	Identifier	plock		11030987	1					
ANR	11031010	IdentifierDeclStatement	gs_context_t * pctx ;	999:4:32329:32347	11030987	3	True				
ANR	11031011	IdentifierDecl	* pctx		11030987	0					
ANR	11031012	IdentifierDeclType	gs_context_t *		11030987	0					
ANR	11031013	Identifier	pctx		11030987	1					
ANR	11031014	IdentifierDeclStatement	int code ;	1000:4:32353:32361	11030987	4	True				
ANR	11031015	IdentifierDecl	code		11030987	0					
ANR	11031016	IdentifierDeclType	int		11030987	0					
ANR	11031017	Identifier	code		11030987	1					
ANR	11031018	ExpressionStatement	"check_stype ( op [ - 1 ] , st_lock )"	1002:4:32368:32396	11030987	5	True				
ANR	11031019	CallExpression	"check_stype ( op [ - 1 ] , st_lock )"		11030987	0					
ANR	11031020	Callee	check_stype		11030987	0					
ANR	11031021	Identifier	check_stype		11030987	0					
ANR	11031022	ArgumentList	op [ - 1 ]		11030987	1					
ANR	11031023	Argument	op [ - 1 ]		11030987	0					
ANR	11031024	ArrayIndexing	op [ - 1 ]		11030987	0					
ANR	11031025	Identifier	op		11030987	0					
ANR	11031026	UnaryOperationExpression	- 1		11030987	1					
ANR	11031027	UnaryOperator	-		11030987	0					
ANR	11031028	PrimaryExpression	1		11030987	1					
ANR	11031029	Argument	st_lock		11030987	1					
ANR	11031030	Identifier	st_lock		11030987	0					
ANR	11031031	ExpressionStatement	check_proc ( * op )	1003:4:32402:32417	11030987	6	True				
ANR	11031032	CallExpression	check_proc ( * op )		11030987	0					
ANR	11031033	Callee	check_proc		11030987	0					
ANR	11031034	Identifier	check_proc		11030987	0					
ANR	11031035	ArgumentList	* op		11030987	1					
ANR	11031036	Argument	* op		11030987	0					
ANR	11031037	UnaryOperationExpression	* op		11030987	0					
ANR	11031038	UnaryOperator	*		11030987	0					
ANR	11031039	Identifier	op		11030987	1					
ANR	11031040	ExpressionStatement	"plock = r_ptr ( op - 1 , gs_lock_t )"	1004:4:32423:32455	11030987	7	True				
ANR	11031041	AssignmentExpression	"plock = r_ptr ( op - 1 , gs_lock_t )"		11030987	0		=			
ANR	11031042	Identifier	plock		11030987	0					
ANR	11031043	CallExpression	"r_ptr ( op - 1 , gs_lock_t )"		11030987	1					
ANR	11031044	Callee	r_ptr		11030987	0					
ANR	11031045	Identifier	r_ptr		11030987	0					
ANR	11031046	ArgumentList	op - 1		11030987	1					
ANR	11031047	Argument	op - 1		11030987	0					
ANR	11031048	AdditiveExpression	op - 1		11030987	0		-			
ANR	11031049	Identifier	op		11030987	0					
ANR	11031050	PrimaryExpression	1		11030987	1					
ANR	11031051	Argument	gs_lock_t		11030987	1					
ANR	11031052	Identifier	gs_lock_t		11030987	0					
ANR	11031053	ExpressionStatement	"pctx = index_context ( current -> scheduler , plock -> holder_index )"	1005:4:32461:32522	11030987	8	True				
ANR	11031054	AssignmentExpression	"pctx = index_context ( current -> scheduler , plock -> holder_index )"		11030987	0		=			
ANR	11031055	Identifier	pctx		11030987	0					
ANR	11031056	CallExpression	"index_context ( current -> scheduler , plock -> holder_index )"		11030987	1					
ANR	11031057	Callee	index_context		11030987	0					
ANR	11031058	Identifier	index_context		11030987	0					
ANR	11031059	ArgumentList	current -> scheduler		11030987	1					
ANR	11031060	Argument	current -> scheduler		11030987	0					
ANR	11031061	PtrMemberAccess	current -> scheduler		11030987	0					
ANR	11031062	Identifier	current		11030987	0					
ANR	11031063	Identifier	scheduler		11030987	1					
ANR	11031064	Argument	plock -> holder_index		11030987	1					
ANR	11031065	PtrMemberAccess	plock -> holder_index		11030987	0					
ANR	11031066	Identifier	plock		11030987	0					
ANR	11031067	Identifier	holder_index		11030987	1					
ANR	11031068	ExpressionStatement	"if_debug1 ( '\\'' , ""[']monitor 0x%lx\\n"" , ( ulong ) plock )"	1006:4:32528:32580	11030987	9	True				
ANR	11031069	CallExpression	"if_debug1 ( '\\'' , ""[']monitor 0x%lx\\n"" , ( ulong ) plock )"		11030987	0					
ANR	11031070	Callee	if_debug1		11030987	0					
ANR	11031071	Identifier	if_debug1		11030987	0					
ANR	11031072	ArgumentList	'\\''		11030987	1					
ANR	11031073	Argument	'\\''		11030987	0					
ANR	11031074	PrimaryExpression	'\\''		11030987	0					
ANR	11031075	Argument	"""[']monitor 0x%lx\\n"""		11030987	1					
ANR	11031076	PrimaryExpression	"""[']monitor 0x%lx\\n"""		11030987	0					
ANR	11031077	Argument	( ulong ) plock		11030987	2					
ANR	11031078	CastExpression	( ulong ) plock		11030987	0					
ANR	11031079	CastTarget	ulong		11030987	0					
ANR	11031080	Identifier	plock		11030987	1					
ANR	11031081	IfStatement	if ( pctx != 0 )		11030987	10					
ANR	11031082	Condition	pctx != 0	1007:8:32590:32598	11030987	0	True				
ANR	11031083	EqualityExpression	pctx != 0		11030987	0		!=			
ANR	11031084	Identifier	pctx		11030987	0					
ANR	11031085	PrimaryExpression	0		11030987	1					
ANR	11031086	CompoundStatement		13:19:373:373	11030987	1					
ANR	11031087	IfStatement	if ( pctx == current || ( iimemory_local -> save_level != 0 && pctx -> state . memory . space_local == current -> state . memory . space_local ) )		11030987	0					
ANR	11031088	Condition	pctx == current || ( iimemory_local -> save_level != 0 && pctx -> state . memory . space_local == current -> state . memory . space_local )	1008:12:32615:32775	11030987	0	True				
ANR	11031089	OrExpression	pctx == current || ( iimemory_local -> save_level != 0 && pctx -> state . memory . space_local == current -> state . memory . space_local )		11030987	0		||			
ANR	11031090	EqualityExpression	pctx == current		11030987	0		==			
ANR	11031091	Identifier	pctx		11030987	0					
ANR	11031092	Identifier	current		11030987	1					
ANR	11031093	AndExpression	iimemory_local -> save_level != 0 && pctx -> state . memory . space_local == current -> state . memory . space_local		11030987	1		&&			
ANR	11031094	EqualityExpression	iimemory_local -> save_level != 0		11030987	0		!=			
ANR	11031095	PtrMemberAccess	iimemory_local -> save_level		11030987	0					
ANR	11031096	Identifier	iimemory_local		11030987	0					
ANR	11031097	Identifier	save_level		11030987	1					
ANR	11031098	PrimaryExpression	0		11030987	1					
ANR	11031099	EqualityExpression	pctx -> state . memory . space_local == current -> state . memory . space_local		11030987	1		==			
ANR	11031100	MemberAccess	pctx -> state . memory . space_local		11030987	0					
ANR	11031101	MemberAccess	pctx -> state . memory		11030987	0					
ANR	11031102	PtrMemberAccess	pctx -> state		11030987	0					
ANR	11031103	Identifier	pctx		11030987	0					
ANR	11031104	Identifier	state		11030987	1					
ANR	11031105	Identifier	memory		11030987	1					
ANR	11031106	Identifier	space_local		11030987	1					
ANR	11031107	MemberAccess	current -> state . memory . space_local		11030987	1					
ANR	11031108	MemberAccess	current -> state . memory		11030987	0					
ANR	11031109	PtrMemberAccess	current -> state		11030987	0					
ANR	11031110	Identifier	current		11030987	0					
ANR	11031111	Identifier	state		11030987	1					
ANR	11031112	Identifier	memory		11030987	1					
ANR	11031113	Identifier	space_local		11030987	1					
ANR	11031114	ExpressionStatement	return_error ( gs_error_invalidcontext )	1013:12:32803:32840	11030987	1	True				
ANR	11031115	CallExpression	return_error ( gs_error_invalidcontext )		11030987	0					
ANR	11031116	Callee	return_error		11030987	0					
ANR	11031117	Identifier	return_error		11030987	0					
ANR	11031118	ArgumentList	gs_error_invalidcontext		11030987	1					
ANR	11031119	Argument	gs_error_invalidcontext		11030987	0					
ANR	11031120	Identifier	gs_error_invalidcontext		11030987	0					
ANR	11031121	ExpressionStatement	check_estack ( 4 )	1023:4:33135:33150	11030987	11	True				
ANR	11031122	CallExpression	check_estack ( 4 )		11030987	0					
ANR	11031123	Callee	check_estack		11030987	0					
ANR	11031124	Identifier	check_estack		11030987	0					
ANR	11031125	ArgumentList	4		11030987	1					
ANR	11031126	Argument	4		11030987	0					
ANR	11031127	PrimaryExpression	4		11030987	0					
ANR	11031128	ExpressionStatement	"code = lock_acquire ( op - 1 , current )"	1024:4:33156:33192	11030987	12	True				
ANR	11031129	AssignmentExpression	"code = lock_acquire ( op - 1 , current )"		11030987	0		=			
ANR	11031130	Identifier	code		11030987	0					
ANR	11031131	CallExpression	"lock_acquire ( op - 1 , current )"		11030987	1					
ANR	11031132	Callee	lock_acquire		11030987	0					
ANR	11031133	Identifier	lock_acquire		11030987	0					
ANR	11031134	ArgumentList	op - 1		11030987	1					
ANR	11031135	Argument	op - 1		11030987	0					
ANR	11031136	AdditiveExpression	op - 1		11030987	0		-			
ANR	11031137	Identifier	op		11030987	0					
ANR	11031138	PrimaryExpression	1		11030987	1					
ANR	11031139	Argument	current		11030987	1					
ANR	11031140	Identifier	current		11030987	0					
ANR	11031141	IfStatement	if ( code != 0 )		11030987	13					
ANR	11031142	Condition	code != 0	1025:8:33202:33210	11030987	0	True				
ANR	11031143	EqualityExpression	code != 0		11030987	0		!=			
ANR	11031144	Identifier	code		11030987	0					
ANR	11031145	PrimaryExpression	0		11030987	1					
ANR	11031146	CompoundStatement		31:19:985:985	11030987	1					
ANR	11031147	ExpressionStatement	push_op_estack ( zmonitor )	1026:8:33282:33306	11030987	0	True				
ANR	11031148	CallExpression	push_op_estack ( zmonitor )		11030987	0					
ANR	11031149	Callee	push_op_estack		11030987	0					
ANR	11031150	Identifier	push_op_estack		11030987	0					
ANR	11031151	ArgumentList	zmonitor		11030987	1					
ANR	11031152	Argument	zmonitor		11030987	0					
ANR	11031153	Identifier	zmonitor		11030987	0					
ANR	11031154	ReturnStatement	return code ;	1027:8:33316:33327	11030987	1	True				
ANR	11031155	Identifier	code		11030987	0					
ANR	11031156	ExpressionStatement	* ++ esp = op [ - 1 ]	1029:4:33359:33374	11030987	14	True				
ANR	11031157	AssignmentExpression	* ++ esp = op [ - 1 ]		11030987	0		=			
ANR	11031158	UnaryOperationExpression	* ++ esp		11030987	0					
ANR	11031159	UnaryOperator	*		11030987	0					
ANR	11031160	UnaryExpression	++ esp		11030987	1					
ANR	11031161	IncDec	++		11030987	0					
ANR	11031162	Identifier	esp		11030987	1					
ANR	11031163	ArrayIndexing	op [ - 1 ]		11030987	1					
ANR	11031164	Identifier	op		11030987	0					
ANR	11031165	UnaryOperationExpression	- 1		11030987	1					
ANR	11031166	UnaryOperator	-		11030987	0					
ANR	11031167	PrimaryExpression	1		11030987	1					
ANR	11031168	ExpressionStatement	"push_mark_estack ( es_other , monitor_cleanup )"	1030:4:33380:33423	11030987	15	True				
ANR	11031169	CallExpression	"push_mark_estack ( es_other , monitor_cleanup )"		11030987	0					
ANR	11031170	Callee	push_mark_estack		11030987	0					
ANR	11031171	Identifier	push_mark_estack		11030987	0					
ANR	11031172	ArgumentList	es_other		11030987	1					
ANR	11031173	Argument	es_other		11030987	0					
ANR	11031174	Identifier	es_other		11030987	0					
ANR	11031175	Argument	monitor_cleanup		11030987	1					
ANR	11031176	Identifier	monitor_cleanup		11030987	0					
ANR	11031177	ExpressionStatement	push_op_estack ( monitor_release )	1031:4:33429:33460	11030987	16	True				
ANR	11031178	CallExpression	push_op_estack ( monitor_release )		11030987	0					
ANR	11031179	Callee	push_op_estack		11030987	0					
ANR	11031180	Identifier	push_op_estack		11030987	0					
ANR	11031181	ArgumentList	monitor_release		11030987	1					
ANR	11031182	Argument	monitor_release		11030987	0					
ANR	11031183	Identifier	monitor_release		11030987	0					
ANR	11031184	ExpressionStatement	* ++ esp = * op	1032:4:33466:33478	11030987	17	True				
ANR	11031185	AssignmentExpression	* ++ esp = * op		11030987	0		=			
ANR	11031186	UnaryOperationExpression	* ++ esp		11030987	0					
ANR	11031187	UnaryOperator	*		11030987	0					
ANR	11031188	UnaryExpression	++ esp		11030987	1					
ANR	11031189	IncDec	++		11030987	0					
ANR	11031190	Identifier	esp		11030987	1					
ANR	11031191	UnaryOperationExpression	* op		11030987	1					
ANR	11031192	UnaryOperator	*		11030987	0					
ANR	11031193	Identifier	op		11030987	1					
ANR	11031194	ExpressionStatement	pop ( 2 )	1033:4:33484:33490	11030987	18	True				
ANR	11031195	CallExpression	pop ( 2 )		11030987	0					
ANR	11031196	Callee	pop		11030987	0					
ANR	11031197	Identifier	pop		11030987	0					
ANR	11031198	ArgumentList	2		11030987	1					
ANR	11031199	Argument	2		11030987	0					
ANR	11031200	PrimaryExpression	2		11030987	0					
ANR	11031201	ReturnStatement	return o_push_estack ;	1034:4:33496:33516	11030987	19	True				
ANR	11031202	Identifier	o_push_estack		11030987	0					
ANR	11031203	ReturnType	static int		11030987	1					
ANR	11031204	Identifier	zmonitor		11030987	2					
ANR	11031205	ParameterList	i_ctx_t * i_ctx_p		11030987	3					
ANR	11031206	Parameter	i_ctx_t * i_ctx_p	994:9:32209:32224	11030987	0	True				
ANR	11031207	ParameterType	i_ctx_t *		11030987	0					
ANR	11031208	Identifier	i_ctx_p		11030987	1					
ANR	11031209	CFGEntryNode	ENTRY		11030987		True				
ANR	11031210	CFGExitNode	EXIT		11030987		True				
ANR	11031211	Symbol	pctx		11030987						
ANR	11031212	Symbol	code		11030987						
ANR	11031213	Symbol	esp		11030987						
ANR	11031214	Symbol	* op		11030987						
ANR	11031215	Symbol	st_lock		11030987						
ANR	11031216	Symbol	lock_acquire		11030987						
ANR	11031217	Symbol	plock		11030987						
ANR	11031218	Symbol	* current		11030987						
ANR	11031219	Symbol	iimemory_local -> save_level		11030987						
ANR	11031220	Symbol	osp		11030987						
ANR	11031221	Symbol	es_other		11030987						
ANR	11031222	Symbol	* pctx		11030987						
ANR	11031223	Symbol	current		11030987						
ANR	11031224	Symbol	r_ptr		11030987						
ANR	11031225	Symbol	current -> state		11030987						
ANR	11031226	Symbol	iimemory_local		11030987						
ANR	11031227	Symbol	* esp		11030987						
ANR	11031228	Symbol	* plock		11030987						
ANR	11031229	Symbol	o_push_estack		11030987						
ANR	11031230	Symbol	zmonitor		11030987						
ANR	11031231	Symbol	op		11030987						
ANR	11031232	Symbol	monitor_release		11030987						
ANR	11031233	Symbol	gs_lock_t		11030987						
ANR	11031234	Symbol	pctx -> state . memory		11030987						
ANR	11031235	Symbol	plock -> holder_index		11030987						
ANR	11031236	Symbol	current -> scheduler		11030987						
ANR	11031237	Symbol	gs_error_invalidcontext		11030987						
ANR	11031238	Symbol	monitor_cleanup		11030987						
ANR	11031239	Symbol	current -> state . memory . space_local		11030987						
ANR	11031240	Symbol	pctx -> state		11030987						
ANR	11031241	Symbol	i_ctx_p		11030987						
ANR	11031242	Symbol	* iimemory_local		11030987						
ANR	11031243	Symbol	current -> state . memory		11030987						
ANR	11031244	Symbol	pctx -> state . memory . space_local		11030987						
ANR	11031245	Symbol	index_context		11030987						
ANR	11031246	Symbol	* ++ esp		11030987						
ANR	11031247	Function	monitor_cleanup	1037:0:33588:33745							
ANR	11031248	FunctionDef	monitor_cleanup (i_ctx_t * i_ctx_p)		11031247	0					
ANR	11031249	CompoundStatement		1039:0:33633:33745	11031247	0					
ANR	11031250	IdentifierDeclStatement	int code = lock_release ( esp ) ;	1040:4:33639:33667	11031247	0	True				
ANR	11031251	IdentifierDecl	code = lock_release ( esp )		11031247	0					
ANR	11031252	IdentifierDeclType	int		11031247	0					
ANR	11031253	Identifier	code		11031247	1					
ANR	11031254	AssignmentExpression	code = lock_release ( esp )		11031247	2		=			
ANR	11031255	Identifier	code		11031247	0					
ANR	11031256	CallExpression	lock_release ( esp )		11031247	1					
ANR	11031257	Callee	lock_release		11031247	0					
ANR	11031258	Identifier	lock_release		11031247	0					
ANR	11031259	ArgumentList	esp		11031247	1					
ANR	11031260	Argument	esp		11031247	0					
ANR	11031261	Identifier	esp		11031247	0					
ANR	11031262	IfStatement	if ( code < 0 )		11031247	1					
ANR	11031263	Condition	code < 0	1042:8:33678:33685	11031247	0	True				
ANR	11031264	RelationalExpression	code < 0		11031247	0		<			
ANR	11031265	Identifier	code		11031247	0					
ANR	11031266	PrimaryExpression	0		11031247	1					
ANR	11031267	ReturnStatement	return code ;	1043:8:33696:33707	11031247	1	True				
ANR	11031268	Identifier	code		11031247	0					
ANR	11031269	ExpressionStatement	-- esp	1044:4:33713:33718	11031247	2	True				
ANR	11031270	UnaryExpression	-- esp		11031247	0					
ANR	11031271	IncDec	--		11031247	0					
ANR	11031272	Identifier	esp		11031247	1					
ANR	11031273	ReturnStatement	return o_pop_estack ;	1045:4:33724:33743	11031247	3	True				
ANR	11031274	Identifier	o_pop_estack		11031247	0					
ANR	11031275	ReturnType	static int		11031247	1					
ANR	11031276	Identifier	monitor_cleanup		11031247	2					
ANR	11031277	ParameterList	i_ctx_t * i_ctx_p		11031247	3					
ANR	11031278	Parameter	i_ctx_t * i_ctx_p	1038:16:33615:33630	11031247	0	True				
ANR	11031279	ParameterType	i_ctx_t *		11031247	0					
ANR	11031280	Identifier	i_ctx_p		11031247	1					
ANR	11031281	CFGEntryNode	ENTRY		11031247		True				
ANR	11031282	CFGExitNode	EXIT		11031247		True				
ANR	11031283	Symbol	code		11031247						
ANR	11031284	Symbol	esp		11031247						
ANR	11031285	Symbol	i_ctx_p		11031247						
ANR	11031286	Symbol	o_pop_estack		11031247						
ANR	11031287	Symbol	lock_release		11031247						
ANR	11031288	Function	monitor_release	1048:0:33808:33972							
ANR	11031289	FunctionDef	monitor_release (i_ctx_t * i_ctx_p)		11031288	0					
ANR	11031290	CompoundStatement		1050:0:33853:33972	11031288	0					
ANR	11031291	IdentifierDeclStatement	int code = lock_release ( esp - 1 ) ;	1051:4:33859:33891	11031288	0	True				
ANR	11031292	IdentifierDecl	code = lock_release ( esp - 1 )		11031288	0					
ANR	11031293	IdentifierDeclType	int		11031288	0					
ANR	11031294	Identifier	code		11031288	1					
ANR	11031295	AssignmentExpression	code = lock_release ( esp - 1 )		11031288	2		=			
ANR	11031296	Identifier	code		11031288	0					
ANR	11031297	CallExpression	lock_release ( esp - 1 )		11031288	1					
ANR	11031298	Callee	lock_release		11031288	0					
ANR	11031299	Identifier	lock_release		11031288	0					
ANR	11031300	ArgumentList	esp - 1		11031288	1					
ANR	11031301	Argument	esp - 1		11031288	0					
ANR	11031302	AdditiveExpression	esp - 1		11031288	0		-			
ANR	11031303	Identifier	esp		11031288	0					
ANR	11031304	PrimaryExpression	1		11031288	1					
ANR	11031305	IfStatement	if ( code < 0 )		11031288	1					
ANR	11031306	Condition	code < 0	1053:8:33902:33909	11031288	0	True				
ANR	11031307	RelationalExpression	code < 0		11031288	0		<			
ANR	11031308	Identifier	code		11031288	0					
ANR	11031309	PrimaryExpression	0		11031288	1					
ANR	11031310	ReturnStatement	return code ;	1054:8:33920:33931	11031288	1	True				
ANR	11031311	Identifier	code		11031288	0					
ANR	11031312	ExpressionStatement	esp -= 2	1055:4:33937:33945	11031288	2	True				
ANR	11031313	AssignmentExpression	esp -= 2		11031288	0		-=			
ANR	11031314	Identifier	esp		11031288	0					
ANR	11031315	PrimaryExpression	2		11031288	1					
ANR	11031316	ReturnStatement	return o_pop_estack ;	1056:4:33951:33970	11031288	3	True				
ANR	11031317	Identifier	o_pop_estack		11031288	0					
ANR	11031318	ReturnType	static int		11031288	1					
ANR	11031319	Identifier	monitor_release		11031288	2					
ANR	11031320	ParameterList	i_ctx_t * i_ctx_p		11031288	3					
ANR	11031321	Parameter	i_ctx_t * i_ctx_p	1049:16:33835:33850	11031288	0	True				
ANR	11031322	ParameterType	i_ctx_t *		11031288	0					
ANR	11031323	Identifier	i_ctx_p		11031288	1					
ANR	11031324	CFGEntryNode	ENTRY		11031288		True				
ANR	11031325	CFGExitNode	EXIT		11031288		True				
ANR	11031326	Symbol	esp		11031288						
ANR	11031327	Symbol	code		11031288						
ANR	11031328	Symbol	i_ctx_p		11031288						
ANR	11031329	Symbol	o_pop_estack		11031288						
ANR	11031330	Symbol	lock_release		11031288						
ANR	11031331	Function	znotify	1060:0:34002:34462							
ANR	11031332	FunctionDef	znotify (i_ctx_t * i_ctx_p)		11031331	0					
ANR	11031333	CompoundStatement		1062:0:34039:34462	11031331	0					
ANR	11031334	IdentifierDeclStatement	os_ptr op = osp ;	1063:4:34045:34060	11031331	0	True				
ANR	11031335	IdentifierDecl	op = osp		11031331	0					
ANR	11031336	IdentifierDeclType	os_ptr		11031331	0					
ANR	11031337	Identifier	op		11031331	1					
ANR	11031338	AssignmentExpression	op = osp		11031331	2		=			
ANR	11031339	Identifier	osp		11031331	0					
ANR	11031340	Identifier	osp		11031331	1					
ANR	11031341	IdentifierDeclStatement	gs_context_t * current = ( gs_context_t * ) i_ctx_p ;	1064:4:34066:34113	11031331	1	True				
ANR	11031342	IdentifierDecl	* current = ( gs_context_t * ) i_ctx_p		11031331	0					
ANR	11031343	IdentifierDeclType	gs_context_t *		11031331	0					
ANR	11031344	Identifier	current		11031331	1					
ANR	11031345	AssignmentExpression	* current = ( gs_context_t * ) i_ctx_p		11031331	2		=			
ANR	11031346	Identifier	current		11031331	0					
ANR	11031347	CastExpression	( gs_context_t * ) i_ctx_p		11031331	1					
ANR	11031348	CastTarget	gs_context_t *		11031331	0					
ANR	11031349	Identifier	i_ctx_p		11031331	1					
ANR	11031350	IdentifierDeclStatement	gs_condition_t * pcond ;	1065:4:34119:34140	11031331	2	True				
ANR	11031351	IdentifierDecl	* pcond		11031331	0					
ANR	11031352	IdentifierDeclType	gs_condition_t *		11031331	0					
ANR	11031353	Identifier	pcond		11031331	1					
ANR	11031354	ExpressionStatement	"check_stype ( * op , st_condition )"	1067:4:34147:34177	11031331	3	True				
ANR	11031355	CallExpression	"check_stype ( * op , st_condition )"		11031331	0					
ANR	11031356	Callee	check_stype		11031331	0					
ANR	11031357	Identifier	check_stype		11031331	0					
ANR	11031358	ArgumentList	* op		11031331	1					
ANR	11031359	Argument	* op		11031331	0					
ANR	11031360	UnaryOperationExpression	* op		11031331	0					
ANR	11031361	UnaryOperator	*		11031331	0					
ANR	11031362	Identifier	op		11031331	1					
ANR	11031363	Argument	st_condition		11031331	1					
ANR	11031364	Identifier	st_condition		11031331	0					
ANR	11031365	ExpressionStatement	"pcond = r_ptr ( op , gs_condition_t )"	1068:4:34183:34216	11031331	4	True				
ANR	11031366	AssignmentExpression	"pcond = r_ptr ( op , gs_condition_t )"		11031331	0		=			
ANR	11031367	Identifier	pcond		11031331	0					
ANR	11031368	CallExpression	"r_ptr ( op , gs_condition_t )"		11031331	1					
ANR	11031369	Callee	r_ptr		11031331	0					
ANR	11031370	Identifier	r_ptr		11031331	0					
ANR	11031371	ArgumentList	op		11031331	1					
ANR	11031372	Argument	op		11031331	0					
ANR	11031373	Identifier	op		11031331	0					
ANR	11031374	Argument	gs_condition_t		11031331	1					
ANR	11031375	Identifier	gs_condition_t		11031331	0					
ANR	11031376	ExpressionStatement	"if_debug1 ( '""' , ""[\\""]notify 0x%lx\\n"" , ( ulong ) pcond )"	1069:4:34222:34273	11031331	5	True				
ANR	11031377	CallExpression	"if_debug1 ( '""' , ""[\\""]notify 0x%lx\\n"" , ( ulong ) pcond )"		11031331	0					
ANR	11031378	Callee	if_debug1		11031331	0					
ANR	11031379	Identifier	if_debug1		11031331	0					
ANR	11031380	ArgumentList	"'""'"		11031331	1					
ANR	11031381	Argument	"'""'"		11031331	0					
ANR	11031382	PrimaryExpression	"'""'"		11031331	0					
ANR	11031383	Argument	"""[\\""]notify 0x%lx\\n"""		11031331	1					
ANR	11031384	PrimaryExpression	"""[\\""]notify 0x%lx\\n"""		11031331	0					
ANR	11031385	Argument	( ulong ) pcond		11031331	2					
ANR	11031386	CastExpression	( ulong ) pcond		11031331	0					
ANR	11031387	CastTarget	ulong		11031331	0					
ANR	11031388	Identifier	pcond		11031331	1					
ANR	11031389	ExpressionStatement	pop ( 1 )	1070:4:34279:34285	11031331	6	True				
ANR	11031390	CallExpression	pop ( 1 )		11031331	0					
ANR	11031391	Callee	pop		11031331	0					
ANR	11031392	Identifier	pop		11031331	0					
ANR	11031393	ArgumentList	1		11031331	1					
ANR	11031394	Argument	1		11031331	0					
ANR	11031395	PrimaryExpression	1		11031331	0					
ANR	11031396	ExpressionStatement	op --	1071:4:34291:34295	11031331	7	True				
ANR	11031397	PostIncDecOperationExpression	op --		11031331	0					
ANR	11031398	Identifier	op		11031331	0					
ANR	11031399	IncDec	--		11031331	1					
ANR	11031400	IfStatement	if ( pcond -> waiting . head_index == 0 )		11031331	8					
ANR	11031401	Condition	pcond -> waiting . head_index == 0	1072:8:34305:34334	11031331	0	True				
ANR	11031402	EqualityExpression	pcond -> waiting . head_index == 0		11031331	0		==			
ANR	11031403	MemberAccess	pcond -> waiting . head_index		11031331	0					
ANR	11031404	PtrMemberAccess	pcond -> waiting		11031331	0					
ANR	11031405	Identifier	pcond		11031331	0					
ANR	11031406	Identifier	waiting		11031331	1					
ANR	11031407	Identifier	head_index		11031331	1					
ANR	11031408	PrimaryExpression	0		11031331	1					
ANR	11031409	ReturnStatement	return 0 ;	1073:8:34365:34373	11031331	1	True				
ANR	11031410	PrimaryExpression	0		11031331	0					
ANR	11031411	ExpressionStatement	"activate_waiting ( current -> scheduler , & pcond -> waiting )"	1074:4:34379:34432	11031331	9	True				
ANR	11031412	CallExpression	"activate_waiting ( current -> scheduler , & pcond -> waiting )"		11031331	0					
ANR	11031413	Callee	activate_waiting		11031331	0					
ANR	11031414	Identifier	activate_waiting		11031331	0					
ANR	11031415	ArgumentList	current -> scheduler		11031331	1					
ANR	11031416	Argument	current -> scheduler		11031331	0					
ANR	11031417	PtrMemberAccess	current -> scheduler		11031331	0					
ANR	11031418	Identifier	current		11031331	0					
ANR	11031419	Identifier	scheduler		11031331	1					
ANR	11031420	Argument	& pcond -> waiting		11031331	1					
ANR	11031421	UnaryOperationExpression	& pcond -> waiting		11031331	0					
ANR	11031422	UnaryOperator	&		11031331	0					
ANR	11031423	PtrMemberAccess	pcond -> waiting		11031331	1					
ANR	11031424	Identifier	pcond		11031331	0					
ANR	11031425	Identifier	waiting		11031331	1					
ANR	11031426	ReturnStatement	return zyield ( i_ctx_p ) ;	1075:4:34438:34460	11031331	10	True				
ANR	11031427	CallExpression	zyield ( i_ctx_p )		11031331	0					
ANR	11031428	Callee	zyield		11031331	0					
ANR	11031429	Identifier	zyield		11031331	0					
ANR	11031430	ArgumentList	i_ctx_p		11031331	1					
ANR	11031431	Argument	i_ctx_p		11031331	0					
ANR	11031432	Identifier	i_ctx_p		11031331	0					
ANR	11031433	ReturnType	static int		11031331	1					
ANR	11031434	Identifier	znotify		11031331	2					
ANR	11031435	ParameterList	i_ctx_t * i_ctx_p		11031331	3					
ANR	11031436	Parameter	i_ctx_t * i_ctx_p	1061:8:34021:34036	11031331	0	True				
ANR	11031437	ParameterType	i_ctx_t *		11031331	0					
ANR	11031438	Identifier	i_ctx_p		11031331	1					
ANR	11031439	CFGEntryNode	ENTRY		11031331		True				
ANR	11031440	CFGExitNode	EXIT		11031331		True				
ANR	11031441	Symbol	op		11031331						
ANR	11031442	Symbol	* op		11031331						
ANR	11031443	Symbol	pcond -> waiting		11031331						
ANR	11031444	Symbol	st_condition		11031331						
ANR	11031445	Symbol	* pcond		11031331						
ANR	11031446	Symbol	pcond -> waiting . head_index		11031331						
ANR	11031447	Symbol	* current		11031331						
ANR	11031448	Symbol	current -> scheduler		11031331						
ANR	11031449	Symbol	pcond		11031331						
ANR	11031450	Symbol	osp		11031331						
ANR	11031451	Symbol	& pcond -> waiting		11031331						
ANR	11031452	Symbol	current		11031331						
ANR	11031453	Symbol	r_ptr		11031331						
ANR	11031454	Symbol	i_ctx_p		11031331						
ANR	11031455	Symbol	gs_condition_t		11031331						
ANR	11031456	Symbol	zyield		11031331						
ANR	11031457	Function	zwait	1079:0:34497:35406							
ANR	11031458	FunctionDef	zwait (i_ctx_t * i_ctx_p)		11031457	0					
ANR	11031459	CompoundStatement		1081:0:34532:35406	11031457	0					
ANR	11031460	IdentifierDeclStatement	os_ptr op = osp ;	1082:4:34538:34553	11031457	0	True				
ANR	11031461	IdentifierDecl	op = osp		11031457	0					
ANR	11031462	IdentifierDeclType	os_ptr		11031457	0					
ANR	11031463	Identifier	op		11031457	1					
ANR	11031464	AssignmentExpression	op = osp		11031457	2		=			
ANR	11031465	Identifier	osp		11031457	0					
ANR	11031466	Identifier	osp		11031457	1					
ANR	11031467	IdentifierDeclStatement	gs_context_t * current = ( gs_context_t * ) i_ctx_p ;	1083:4:34559:34606	11031457	1	True				
ANR	11031468	IdentifierDecl	* current = ( gs_context_t * ) i_ctx_p		11031457	0					
ANR	11031469	IdentifierDeclType	gs_context_t *		11031457	0					
ANR	11031470	Identifier	current		11031457	1					
ANR	11031471	AssignmentExpression	* current = ( gs_context_t * ) i_ctx_p		11031457	2		=			
ANR	11031472	Identifier	current		11031457	0					
ANR	11031473	CastExpression	( gs_context_t * ) i_ctx_p		11031457	1					
ANR	11031474	CastTarget	gs_context_t *		11031457	0					
ANR	11031475	Identifier	i_ctx_p		11031457	1					
ANR	11031476	IdentifierDeclStatement	gs_scheduler_t * psched = current -> scheduler ;	1084:4:34612:34655	11031457	2	True				
ANR	11031477	IdentifierDecl	* psched = current -> scheduler		11031457	0					
ANR	11031478	IdentifierDeclType	gs_scheduler_t *		11031457	0					
ANR	11031479	Identifier	psched		11031457	1					
ANR	11031480	AssignmentExpression	* psched = current -> scheduler		11031457	2		=			
ANR	11031481	Identifier	psched		11031457	0					
ANR	11031482	PtrMemberAccess	current -> scheduler		11031457	1					
ANR	11031483	Identifier	current		11031457	0					
ANR	11031484	Identifier	scheduler		11031457	1					
ANR	11031485	IdentifierDeclStatement	gs_lock_t * plock ;	1085:4:34661:34677	11031457	3	True				
ANR	11031486	IdentifierDecl	* plock		11031457	0					
ANR	11031487	IdentifierDeclType	gs_lock_t *		11031457	0					
ANR	11031488	Identifier	plock		11031457	1					
ANR	11031489	IdentifierDeclStatement	gs_context_t * pctx ;	1086:4:34683:34701	11031457	4	True				
ANR	11031490	IdentifierDecl	* pctx		11031457	0					
ANR	11031491	IdentifierDeclType	gs_context_t *		11031457	0					
ANR	11031492	Identifier	pctx		11031457	1					
ANR	11031493	IdentifierDeclStatement	gs_condition_t * pcond ;	1087:4:34707:34728	11031457	5	True				
ANR	11031494	IdentifierDecl	* pcond		11031457	0					
ANR	11031495	IdentifierDeclType	gs_condition_t *		11031457	0					
ANR	11031496	Identifier	pcond		11031457	1					
ANR	11031497	ExpressionStatement	"check_stype ( op [ - 1 ] , st_lock )"	1089:4:34735:34763	11031457	6	True				
ANR	11031498	CallExpression	"check_stype ( op [ - 1 ] , st_lock )"		11031457	0					
ANR	11031499	Callee	check_stype		11031457	0					
ANR	11031500	Identifier	check_stype		11031457	0					
ANR	11031501	ArgumentList	op [ - 1 ]		11031457	1					
ANR	11031502	Argument	op [ - 1 ]		11031457	0					
ANR	11031503	ArrayIndexing	op [ - 1 ]		11031457	0					
ANR	11031504	Identifier	op		11031457	0					
ANR	11031505	UnaryOperationExpression	- 1		11031457	1					
ANR	11031506	UnaryOperator	-		11031457	0					
ANR	11031507	PrimaryExpression	1		11031457	1					
ANR	11031508	Argument	st_lock		11031457	1					
ANR	11031509	Identifier	st_lock		11031457	0					
ANR	11031510	ExpressionStatement	"plock = r_ptr ( op - 1 , gs_lock_t )"	1090:4:34769:34801	11031457	7	True				
ANR	11031511	AssignmentExpression	"plock = r_ptr ( op - 1 , gs_lock_t )"		11031457	0		=			
ANR	11031512	Identifier	plock		11031457	0					
ANR	11031513	CallExpression	"r_ptr ( op - 1 , gs_lock_t )"		11031457	1					
ANR	11031514	Callee	r_ptr		11031457	0					
ANR	11031515	Identifier	r_ptr		11031457	0					
ANR	11031516	ArgumentList	op - 1		11031457	1					
ANR	11031517	Argument	op - 1		11031457	0					
ANR	11031518	AdditiveExpression	op - 1		11031457	0		-			
ANR	11031519	Identifier	op		11031457	0					
ANR	11031520	PrimaryExpression	1		11031457	1					
ANR	11031521	Argument	gs_lock_t		11031457	1					
ANR	11031522	Identifier	gs_lock_t		11031457	0					
ANR	11031523	ExpressionStatement	"check_stype ( * op , st_condition )"	1091:4:34807:34837	11031457	8	True				
ANR	11031524	CallExpression	"check_stype ( * op , st_condition )"		11031457	0					
ANR	11031525	Callee	check_stype		11031457	0					
ANR	11031526	Identifier	check_stype		11031457	0					
ANR	11031527	ArgumentList	* op		11031457	1					
ANR	11031528	Argument	* op		11031457	0					
ANR	11031529	UnaryOperationExpression	* op		11031457	0					
ANR	11031530	UnaryOperator	*		11031457	0					
ANR	11031531	Identifier	op		11031457	1					
ANR	11031532	Argument	st_condition		11031457	1					
ANR	11031533	Identifier	st_condition		11031457	0					
ANR	11031534	ExpressionStatement	"pcond = r_ptr ( op , gs_condition_t )"	1092:4:34843:34876	11031457	9	True				
ANR	11031535	AssignmentExpression	"pcond = r_ptr ( op , gs_condition_t )"		11031457	0		=			
ANR	11031536	Identifier	pcond		11031457	0					
ANR	11031537	CallExpression	"r_ptr ( op , gs_condition_t )"		11031457	1					
ANR	11031538	Callee	r_ptr		11031457	0					
ANR	11031539	Identifier	r_ptr		11031457	0					
ANR	11031540	ArgumentList	op		11031457	1					
ANR	11031541	Argument	op		11031457	0					
ANR	11031542	Identifier	op		11031457	0					
ANR	11031543	Argument	gs_condition_t		11031457	1					
ANR	11031544	Identifier	gs_condition_t		11031457	0					
ANR	11031545	ExpressionStatement	"if_debug2 ( '""' , ""[\\""]wait lock 0x%lx, condition 0x%lx\\n"" , ( ulong ) plock , ( ulong ) pcond )"	1093:4:34882:34982	11031457	10	True				
ANR	11031546	CallExpression	"if_debug2 ( '""' , ""[\\""]wait lock 0x%lx, condition 0x%lx\\n"" , ( ulong ) plock , ( ulong ) pcond )"		11031457	0					
ANR	11031547	Callee	if_debug2		11031457	0					
ANR	11031548	Identifier	if_debug2		11031457	0					
ANR	11031549	ArgumentList	"'""'"		11031457	1					
ANR	11031550	Argument	"'""'"		11031457	0					
ANR	11031551	PrimaryExpression	"'""'"		11031457	0					
ANR	11031552	Argument	"""[\\""]wait lock 0x%lx, condition 0x%lx\\n"""		11031457	1					
ANR	11031553	PrimaryExpression	"""[\\""]wait lock 0x%lx, condition 0x%lx\\n"""		11031457	0					
ANR	11031554	Argument	( ulong ) plock		11031457	2					
ANR	11031555	CastExpression	( ulong ) plock		11031457	0					
ANR	11031556	CastTarget	ulong		11031457	0					
ANR	11031557	Identifier	plock		11031457	1					
ANR	11031558	Argument	( ulong ) pcond		11031457	3					
ANR	11031559	CastExpression	( ulong ) pcond		11031457	0					
ANR	11031560	CastTarget	ulong		11031457	0					
ANR	11031561	Identifier	pcond		11031457	1					
ANR	11031562	ExpressionStatement	"pctx = index_context ( psched , plock -> holder_index )"	1095:4:34988:35037	11031457	11	True				
ANR	11031563	AssignmentExpression	"pctx = index_context ( psched , plock -> holder_index )"		11031457	0		=			
ANR	11031564	Identifier	pctx		11031457	0					
ANR	11031565	CallExpression	"index_context ( psched , plock -> holder_index )"		11031457	1					
ANR	11031566	Callee	index_context		11031457	0					
ANR	11031567	Identifier	index_context		11031457	0					
ANR	11031568	ArgumentList	psched		11031457	1					
ANR	11031569	Argument	psched		11031457	0					
ANR	11031570	Identifier	psched		11031457	0					
ANR	11031571	Argument	plock -> holder_index		11031457	1					
ANR	11031572	PtrMemberAccess	plock -> holder_index		11031457	0					
ANR	11031573	Identifier	plock		11031457	0					
ANR	11031574	Identifier	holder_index		11031457	1					
ANR	11031575	IfStatement	if ( pctx == 0 || pctx != psched -> current || ( iimemory_local -> save_level != 0 && ( r_space ( op - 1 ) == avm_local || r_space ( op ) == avm_local ) ) )		11031457	12					
ANR	11031576	Condition	pctx == 0 || pctx != psched -> current || ( iimemory_local -> save_level != 0 && ( r_space ( op - 1 ) == avm_local || r_space ( op ) == avm_local ) )	1096:8:35047:35198	11031457	0	True				
ANR	11031577	OrExpression	pctx == 0 || pctx != psched -> current || ( iimemory_local -> save_level != 0 && ( r_space ( op - 1 ) == avm_local || r_space ( op ) == avm_local ) )		11031457	0		||			
ANR	11031578	EqualityExpression	pctx == 0		11031457	0		==			
ANR	11031579	Identifier	pctx		11031457	0					
ANR	11031580	PrimaryExpression	0		11031457	1					
ANR	11031581	OrExpression	pctx != psched -> current || ( iimemory_local -> save_level != 0 && ( r_space ( op - 1 ) == avm_local || r_space ( op ) == avm_local ) )		11031457	1		||			
ANR	11031582	EqualityExpression	pctx != psched -> current		11031457	0		!=			
ANR	11031583	Identifier	pctx		11031457	0					
ANR	11031584	PtrMemberAccess	psched -> current		11031457	1					
ANR	11031585	Identifier	psched		11031457	0					
ANR	11031586	Identifier	current		11031457	1					
ANR	11031587	AndExpression	iimemory_local -> save_level != 0 && ( r_space ( op - 1 ) == avm_local || r_space ( op ) == avm_local )		11031457	1		&&			
ANR	11031588	EqualityExpression	iimemory_local -> save_level != 0		11031457	0		!=			
ANR	11031589	PtrMemberAccess	iimemory_local -> save_level		11031457	0					
ANR	11031590	Identifier	iimemory_local		11031457	0					
ANR	11031591	Identifier	save_level		11031457	1					
ANR	11031592	PrimaryExpression	0		11031457	1					
ANR	11031593	OrExpression	r_space ( op - 1 ) == avm_local || r_space ( op ) == avm_local		11031457	1		||			
ANR	11031594	EqualityExpression	r_space ( op - 1 ) == avm_local		11031457	0		==			
ANR	11031595	CallExpression	r_space ( op - 1 )		11031457	0					
ANR	11031596	Callee	r_space		11031457	0					
ANR	11031597	Identifier	r_space		11031457	0					
ANR	11031598	ArgumentList	op - 1		11031457	1					
ANR	11031599	Argument	op - 1		11031457	0					
ANR	11031600	AdditiveExpression	op - 1		11031457	0		-			
ANR	11031601	Identifier	op		11031457	0					
ANR	11031602	PrimaryExpression	1		11031457	1					
ANR	11031603	Identifier	avm_local		11031457	1					
ANR	11031604	EqualityExpression	r_space ( op ) == avm_local		11031457	1		==			
ANR	11031605	CallExpression	r_space ( op )		11031457	0					
ANR	11031606	Callee	r_space		11031457	0					
ANR	11031607	Identifier	r_space		11031457	0					
ANR	11031608	ArgumentList	op		11031457	1					
ANR	11031609	Argument	op		11031457	0					
ANR	11031610	Identifier	op		11031457	0					
ANR	11031611	Identifier	avm_local		11031457	1					
ANR	11031612	ExpressionStatement	return_error ( gs_error_invalidcontext )	1100:8:35218:35255	11031457	1	True				
ANR	11031613	CallExpression	return_error ( gs_error_invalidcontext )		11031457	0					
ANR	11031614	Callee	return_error		11031457	0					
ANR	11031615	Identifier	return_error		11031457	0					
ANR	11031616	ArgumentList	gs_error_invalidcontext		11031457	1					
ANR	11031617	Argument	gs_error_invalidcontext		11031457	0					
ANR	11031618	Identifier	gs_error_invalidcontext		11031457	0					
ANR	11031619	ExpressionStatement	check_estack ( 1 )	1101:4:35261:35276	11031457	13	True				
ANR	11031620	CallExpression	check_estack ( 1 )		11031457	0					
ANR	11031621	Callee	check_estack		11031457	0					
ANR	11031622	Identifier	check_estack		11031457	0					
ANR	11031623	ArgumentList	1		11031457	1					
ANR	11031624	Argument	1		11031457	0					
ANR	11031625	PrimaryExpression	1		11031457	0					
ANR	11031626	ExpressionStatement	lock_release ( op - 1 )	1102:4:35282:35302	11031457	14	True				
ANR	11031627	CallExpression	lock_release ( op - 1 )		11031457	0					
ANR	11031628	Callee	lock_release		11031457	0					
ANR	11031629	Identifier	lock_release		11031457	0					
ANR	11031630	ArgumentList	op - 1		11031457	1					
ANR	11031631	Argument	op - 1		11031457	0					
ANR	11031632	AdditiveExpression	op - 1		11031457	0		-			
ANR	11031633	Identifier	op		11031457	0					
ANR	11031634	PrimaryExpression	1		11031457	1					
ANR	11031635	ExpressionStatement	"add_last ( psched , & pcond -> waiting , pctx )"	1103:4:35308:35347	11031457	15	True				
ANR	11031636	CallExpression	"add_last ( psched , & pcond -> waiting , pctx )"		11031457	0					
ANR	11031637	Callee	add_last		11031457	0					
ANR	11031638	Identifier	add_last		11031457	0					
ANR	11031639	ArgumentList	psched		11031457	1					
ANR	11031640	Argument	psched		11031457	0					
ANR	11031641	Identifier	psched		11031457	0					
ANR	11031642	Argument	& pcond -> waiting		11031457	1					
ANR	11031643	UnaryOperationExpression	& pcond -> waiting		11031457	0					
ANR	11031644	UnaryOperator	&		11031457	0					
ANR	11031645	PtrMemberAccess	pcond -> waiting		11031457	1					
ANR	11031646	Identifier	pcond		11031457	0					
ANR	11031647	Identifier	waiting		11031457	1					
ANR	11031648	Argument	pctx		11031457	2					
ANR	11031649	Identifier	pctx		11031457	0					
ANR	11031650	ExpressionStatement	push_op_estack ( await_lock )	1104:4:35353:35379	11031457	16	True				
ANR	11031651	CallExpression	push_op_estack ( await_lock )		11031457	0					
ANR	11031652	Callee	push_op_estack		11031457	0					
ANR	11031653	Identifier	push_op_estack		11031457	0					
ANR	11031654	ArgumentList	await_lock		11031457	1					
ANR	11031655	Argument	await_lock		11031457	0					
ANR	11031656	Identifier	await_lock		11031457	0					
ANR	11031657	ReturnStatement	return o_reschedule ;	1105:4:35385:35404	11031457	17	True				
ANR	11031658	Identifier	o_reschedule		11031457	0					
ANR	11031659	ReturnType	static int		11031457	1					
ANR	11031660	Identifier	zwait		11031457	2					
ANR	11031661	ParameterList	i_ctx_t * i_ctx_p		11031457	3					
ANR	11031662	Parameter	i_ctx_t * i_ctx_p	1080:6:34514:34529	11031457	0	True				
ANR	11031663	ParameterType	i_ctx_t *		11031457	0					
ANR	11031664	Identifier	i_ctx_p		11031457	1					
ANR	11031665	CFGEntryNode	ENTRY		11031457		True				
ANR	11031666	CFGExitNode	EXIT		11031457		True				
ANR	11031667	Symbol	pctx		11031457						
ANR	11031668	Symbol	* op		11031457						
ANR	11031669	Symbol	st_lock		11031457						
ANR	11031670	Symbol	plock		11031457						
ANR	11031671	Symbol	psched -> current		11031457						
ANR	11031672	Symbol	avm_local		11031457						
ANR	11031673	Symbol	* current		11031457						
ANR	11031674	Symbol	iimemory_local -> save_level		11031457						
ANR	11031675	Symbol	pcond		11031457						
ANR	11031676	Symbol	osp		11031457						
ANR	11031677	Symbol	& pcond -> waiting		11031457						
ANR	11031678	Symbol	current		11031457						
ANR	11031679	Symbol	r_ptr		11031457						
ANR	11031680	Symbol	r_space		11031457						
ANR	11031681	Symbol	iimemory_local		11031457						
ANR	11031682	Symbol	* plock		11031457						
ANR	11031683	Symbol	op		11031457						
ANR	11031684	Symbol	gs_lock_t		11031457						
ANR	11031685	Symbol	st_condition		11031457						
ANR	11031686	Symbol	o_reschedule		11031457						
ANR	11031687	Symbol	psched		11031457						
ANR	11031688	Symbol	* psched		11031457						
ANR	11031689	Symbol	current -> scheduler		11031457						
ANR	11031690	Symbol	plock -> holder_index		11031457						
ANR	11031691	Symbol	gs_error_invalidcontext		11031457						
ANR	11031692	Symbol	i_ctx_p		11031457						
ANR	11031693	Symbol	await_lock		11031457						
ANR	11031694	Symbol	* iimemory_local		11031457						
ANR	11031695	Symbol	gs_condition_t		11031457						
ANR	11031696	Symbol	index_context		11031457						
ANR	11031697	Function	await_lock	1108:0:35475:35828							
ANR	11031698	FunctionDef	await_lock (i_ctx_t * i_ctx_p)		11031697	0					
ANR	11031699	CompoundStatement		1110:0:35515:35828	11031697	0					
ANR	11031700	IdentifierDeclStatement	gs_context_t * current = ( gs_context_t * ) i_ctx_p ;	1111:4:35521:35568	11031697	0	True				
ANR	11031701	IdentifierDecl	* current = ( gs_context_t * ) i_ctx_p		11031697	0					
ANR	11031702	IdentifierDeclType	gs_context_t *		11031697	0					
ANR	11031703	Identifier	current		11031697	1					
ANR	11031704	AssignmentExpression	* current = ( gs_context_t * ) i_ctx_p		11031697	2		=			
ANR	11031705	Identifier	current		11031697	0					
ANR	11031706	CastExpression	( gs_context_t * ) i_ctx_p		11031697	1					
ANR	11031707	CastTarget	gs_context_t *		11031697	0					
ANR	11031708	Identifier	i_ctx_p		11031697	1					
ANR	11031709	IdentifierDeclStatement	os_ptr op = osp ;	1112:4:35574:35589	11031697	1	True				
ANR	11031710	IdentifierDecl	op = osp		11031697	0					
ANR	11031711	IdentifierDeclType	os_ptr		11031697	0					
ANR	11031712	Identifier	op		11031697	1					
ANR	11031713	AssignmentExpression	op = osp		11031697	2		=			
ANR	11031714	Identifier	osp		11031697	0					
ANR	11031715	Identifier	osp		11031697	1					
ANR	11031716	IdentifierDeclStatement	"int code = lock_acquire ( op - 1 , current ) ;"	1113:4:35595:35635	11031697	2	True				
ANR	11031717	IdentifierDecl	"code = lock_acquire ( op - 1 , current )"		11031697	0					
ANR	11031718	IdentifierDeclType	int		11031697	0					
ANR	11031719	Identifier	code		11031697	1					
ANR	11031720	AssignmentExpression	"code = lock_acquire ( op - 1 , current )"		11031697	2		=			
ANR	11031721	Identifier	code		11031697	0					
ANR	11031722	CallExpression	"lock_acquire ( op - 1 , current )"		11031697	1					
ANR	11031723	Callee	lock_acquire		11031697	0					
ANR	11031724	Identifier	lock_acquire		11031697	0					
ANR	11031725	ArgumentList	op - 1		11031697	1					
ANR	11031726	Argument	op - 1		11031697	0					
ANR	11031727	AdditiveExpression	op - 1		11031697	0		-			
ANR	11031728	Identifier	op		11031697	0					
ANR	11031729	PrimaryExpression	1		11031697	1					
ANR	11031730	Argument	current		11031697	1					
ANR	11031731	Identifier	current		11031697	0					
ANR	11031732	IfStatement	if ( code == 0 )		11031697	3					
ANR	11031733	Condition	code == 0	1115:8:35646:35654	11031697	0	True				
ANR	11031734	EqualityExpression	code == 0		11031697	0		==			
ANR	11031735	Identifier	code		11031697	0					
ANR	11031736	PrimaryExpression	0		11031697	1					
ANR	11031737	CompoundStatement		6:19:141:141	11031697	1					
ANR	11031738	ExpressionStatement	pop ( 2 )	1116:8:35667:35673	11031697	0	True				
ANR	11031739	CallExpression	pop ( 2 )		11031697	0					
ANR	11031740	Callee	pop		11031697	0					
ANR	11031741	Identifier	pop		11031697	0					
ANR	11031742	ArgumentList	2		11031697	1					
ANR	11031743	Argument	2		11031697	0					
ANR	11031744	PrimaryExpression	2		11031697	0					
ANR	11031745	ReturnStatement	return 0 ;	1117:8:35683:35691	11031697	1	True				
ANR	11031746	PrimaryExpression	0		11031697	0					
ANR	11031747	ExpressionStatement	push_op_estack ( await_lock )	1120:4:35763:35789	11031697	4	True				
ANR	11031748	CallExpression	push_op_estack ( await_lock )		11031697	0					
ANR	11031749	Callee	push_op_estack		11031697	0					
ANR	11031750	Identifier	push_op_estack		11031697	0					
ANR	11031751	ArgumentList	await_lock		11031697	1					
ANR	11031752	Argument	await_lock		11031697	0					
ANR	11031753	Identifier	await_lock		11031697	0					
ANR	11031754	ReturnStatement	return code ;	1121:4:35795:35806	11031697	5	True				
ANR	11031755	Identifier	code		11031697	0					
ANR	11031756	ReturnType	static int		11031697	1					
ANR	11031757	Identifier	await_lock		11031697	2					
ANR	11031758	ParameterList	i_ctx_t * i_ctx_p		11031697	3					
ANR	11031759	Parameter	i_ctx_t * i_ctx_p	1109:11:35497:35512	11031697	0	True				
ANR	11031760	ParameterType	i_ctx_t *		11031697	0					
ANR	11031761	Identifier	i_ctx_p		11031697	1					
ANR	11031762	CFGEntryNode	ENTRY		11031697		True				
ANR	11031763	CFGExitNode	EXIT		11031697		True				
ANR	11031764	Symbol	op		11031697						
ANR	11031765	Symbol	current		11031697						
ANR	11031766	Symbol	code		11031697						
ANR	11031767	Symbol	lock_acquire		11031697						
ANR	11031768	Symbol	i_ctx_p		11031697						
ANR	11031769	Symbol	await_lock		11031697						
ANR	11031770	Symbol	osp		11031697						
ANR	11031771	Function	activate_waiting	1125:0:35894:36248							
ANR	11031772	FunctionDef	"activate_waiting (gs_scheduler_t * psched , ctx_list_t * pcl)"		11031771	0					
ANR	11031773	CompoundStatement		1127:0:35965:36248	11031771	0					
ANR	11031774	IdentifierDeclStatement	"gs_context_t * pctx = index_context ( psched , pcl -> head_index ) ;"	1128:4:35971:36030	11031771	0	True				
ANR	11031775	IdentifierDecl	"* pctx = index_context ( psched , pcl -> head_index )"		11031771	0					
ANR	11031776	IdentifierDeclType	gs_context_t *		11031771	0					
ANR	11031777	Identifier	pctx		11031771	1					
ANR	11031778	AssignmentExpression	"* pctx = index_context ( psched , pcl -> head_index )"		11031771	2		=			
ANR	11031779	Identifier	pctx		11031771	0					
ANR	11031780	CallExpression	"index_context ( psched , pcl -> head_index )"		11031771	1					
ANR	11031781	Callee	index_context		11031771	0					
ANR	11031782	Identifier	index_context		11031771	0					
ANR	11031783	ArgumentList	psched		11031771	1					
ANR	11031784	Argument	psched		11031771	0					
ANR	11031785	Identifier	psched		11031771	0					
ANR	11031786	Argument	pcl -> head_index		11031771	1					
ANR	11031787	PtrMemberAccess	pcl -> head_index		11031771	0					
ANR	11031788	Identifier	pcl		11031771	0					
ANR	11031789	Identifier	head_index		11031771	1					
ANR	11031790	IdentifierDeclStatement	gs_context_t * next ;	1129:4:36036:36054	11031771	1	True				
ANR	11031791	IdentifierDecl	* next		11031771	0					
ANR	11031792	IdentifierDeclType	gs_context_t *		11031771	0					
ANR	11031793	Identifier	next		11031771	1					
ANR	11031794	ForStatement	for ( ; pctx != 0 ; pctx = next )		11031771	2					
ANR	11031795	Condition	pctx != 0	1131:11:36068:36076	11031771	0	True				
ANR	11031796	EqualityExpression	pctx != 0		11031771	0		!=			
ANR	11031797	Identifier	pctx		11031771	0					
ANR	11031798	PrimaryExpression	0		11031771	1					
ANR	11031799	AssignmentExpression	pctx = next	1131:22:36079:36089	11031771	1	True	=			
ANR	11031800	Identifier	pctx		11031771	0					
ANR	11031801	Identifier	next		11031771	1					
ANR	11031802	CompoundStatement		5:35:126:126	11031771	2					
ANR	11031803	ExpressionStatement	"next = index_context ( psched , pctx -> next_index )"	1132:8:36102:36148	11031771	0	True				
ANR	11031804	AssignmentExpression	"next = index_context ( psched , pctx -> next_index )"		11031771	0		=			
ANR	11031805	Identifier	next		11031771	0					
ANR	11031806	CallExpression	"index_context ( psched , pctx -> next_index )"		11031771	1					
ANR	11031807	Callee	index_context		11031771	0					
ANR	11031808	Identifier	index_context		11031771	0					
ANR	11031809	ArgumentList	psched		11031771	1					
ANR	11031810	Argument	psched		11031771	0					
ANR	11031811	Identifier	psched		11031771	0					
ANR	11031812	Argument	pctx -> next_index		11031771	1					
ANR	11031813	PtrMemberAccess	pctx -> next_index		11031771	0					
ANR	11031814	Identifier	pctx		11031771	0					
ANR	11031815	Identifier	next_index		11031771	1					
ANR	11031816	ExpressionStatement	"add_last ( psched , & psched -> active , pctx )"	1133:8:36158:36197	11031771	1	True				
ANR	11031817	CallExpression	"add_last ( psched , & psched -> active , pctx )"		11031771	0					
ANR	11031818	Callee	add_last		11031771	0					
ANR	11031819	Identifier	add_last		11031771	0					
ANR	11031820	ArgumentList	psched		11031771	1					
ANR	11031821	Argument	psched		11031771	0					
ANR	11031822	Identifier	psched		11031771	0					
ANR	11031823	Argument	& psched -> active		11031771	1					
ANR	11031824	UnaryOperationExpression	& psched -> active		11031771	0					
ANR	11031825	UnaryOperator	&		11031771	0					
ANR	11031826	PtrMemberAccess	psched -> active		11031771	1					
ANR	11031827	Identifier	psched		11031771	0					
ANR	11031828	Identifier	active		11031771	1					
ANR	11031829	Argument	pctx		11031771	2					
ANR	11031830	Identifier	pctx		11031771	0					
ANR	11031831	ExpressionStatement	pcl -> head_index = pcl -> tail_index = 0	1135:4:36209:36246	11031771	3	True				
ANR	11031832	AssignmentExpression	pcl -> head_index = pcl -> tail_index = 0		11031771	0		=			
ANR	11031833	PtrMemberAccess	pcl -> head_index		11031771	0					
ANR	11031834	Identifier	pcl		11031771	0					
ANR	11031835	Identifier	head_index		11031771	1					
ANR	11031836	AssignmentExpression	pcl -> tail_index = 0		11031771	1		=			
ANR	11031837	PtrMemberAccess	pcl -> tail_index		11031771	0					
ANR	11031838	Identifier	pcl		11031771	0					
ANR	11031839	Identifier	tail_index		11031771	1					
ANR	11031840	PrimaryExpression	0		11031771	1					
ANR	11031841	ReturnType	static void		11031771	1					
ANR	11031842	Identifier	activate_waiting		11031771	2					
ANR	11031843	ParameterList	"gs_scheduler_t * psched , ctx_list_t * pcl"		11031771	3					
ANR	11031844	Parameter	gs_scheduler_t * psched	1126:17:35923:35944	11031771	0	True				
ANR	11031845	ParameterType	gs_scheduler_t *		11031771	0					
ANR	11031846	Identifier	psched		11031771	1					
ANR	11031847	Parameter	ctx_list_t * pcl	1126:41:35947:35962	11031771	1	True				
ANR	11031848	ParameterType	ctx_list_t *		11031771	0					
ANR	11031849	Identifier	pcl		11031771	1					
ANR	11031850	CFGEntryNode	ENTRY		11031771		True				
ANR	11031851	CFGExitNode	EXIT		11031771		True				
ANR	11031852	Symbol	next		11031771						
ANR	11031853	Symbol	& psched -> active		11031771						
ANR	11031854	Symbol	* pcl		11031771						
ANR	11031855	Symbol	pctx		11031771						
ANR	11031856	Symbol	pctx -> next_index		11031771						
ANR	11031857	Symbol	psched		11031771						
ANR	11031858	Symbol	pcl		11031771						
ANR	11031859	Symbol	pcl -> tail_index		11031771						
ANR	11031860	Symbol	pcl -> head_index		11031771						
ANR	11031861	Symbol	index_context		11031771						
ANR	11031862	Symbol	* pctx		11031771						
ANR	11031863	Function	zusertime_context	1141:0:36319:36937							
ANR	11031864	FunctionDef	zusertime_context (i_ctx_t * i_ctx_p)		11031863	0					
ANR	11031865	CompoundStatement		1143:0:36366:36937	11031863	0					
ANR	11031866	IdentifierDeclStatement	gs_context_t * current = ( gs_context_t * ) i_ctx_p ;	1144:4:36372:36419	11031863	0	True				
ANR	11031867	IdentifierDecl	* current = ( gs_context_t * ) i_ctx_p		11031863	0					
ANR	11031868	IdentifierDeclType	gs_context_t *		11031863	0					
ANR	11031869	Identifier	current		11031863	1					
ANR	11031870	AssignmentExpression	* current = ( gs_context_t * ) i_ctx_p		11031863	2		=			
ANR	11031871	Identifier	current		11031863	0					
ANR	11031872	CastExpression	( gs_context_t * ) i_ctx_p		11031863	1					
ANR	11031873	CastTarget	gs_context_t *		11031863	0					
ANR	11031874	Identifier	i_ctx_p		11031863	1					
ANR	11031875	IdentifierDeclStatement	gs_scheduler_t * psched = current -> scheduler ;	1145:4:36425:36468	11031863	1	True				
ANR	11031876	IdentifierDecl	* psched = current -> scheduler		11031863	0					
ANR	11031877	IdentifierDeclType	gs_scheduler_t *		11031863	0					
ANR	11031878	Identifier	psched		11031863	1					
ANR	11031879	AssignmentExpression	* psched = current -> scheduler		11031863	2		=			
ANR	11031880	Identifier	psched		11031863	0					
ANR	11031881	PtrMemberAccess	current -> scheduler		11031863	1					
ANR	11031882	Identifier	current		11031863	0					
ANR	11031883	Identifier	scheduler		11031863	1					
ANR	11031884	IdentifierDeclStatement	os_ptr op = osp ;	1146:4:36474:36489	11031863	2	True				
ANR	11031885	IdentifierDecl	op = osp		11031863	0					
ANR	11031886	IdentifierDeclType	os_ptr		11031863	0					
ANR	11031887	Identifier	op		11031863	1					
ANR	11031888	AssignmentExpression	op = osp		11031863	2		=			
ANR	11031889	Identifier	osp		11031863	0					
ANR	11031890	Identifier	osp		11031863	1					
ANR	11031891	IdentifierDeclStatement	long utime = context_usertime ( ) ;	1147:4:36495:36526	11031863	3	True				
ANR	11031892	IdentifierDecl	utime = context_usertime ( )		11031863	0					
ANR	11031893	IdentifierDeclType	long		11031863	0					
ANR	11031894	Identifier	utime		11031863	1					
ANR	11031895	AssignmentExpression	utime = context_usertime ( )		11031863	2		=			
ANR	11031896	Identifier	utime		11031863	0					
ANR	11031897	CallExpression	context_usertime ( )		11031863	1					
ANR	11031898	Callee	context_usertime		11031863	0					
ANR	11031899	Identifier	context_usertime		11031863	0					
ANR	11031900	ArgumentList			11031863	1					
ANR	11031901	ExpressionStatement	push ( 1 )	1149:4:36533:36540	11031863	4	True				
ANR	11031902	CallExpression	push ( 1 )		11031863	0					
ANR	11031903	Callee	push		11031863	0					
ANR	11031904	Identifier	push		11031863	0					
ANR	11031905	ArgumentList	1		11031863	1					
ANR	11031906	Argument	1		11031863	0					
ANR	11031907	PrimaryExpression	1		11031863	0					
ANR	11031908	IfStatement	if ( ! current -> state . keep_usertime )		11031863	5					
ANR	11031909	Condition	! current -> state . keep_usertime	1150:8:36550:36578	11031863	0	True				
ANR	11031910	UnaryOperationExpression	! current -> state . keep_usertime		11031863	0					
ANR	11031911	UnaryOperator	!		11031863	0					
ANR	11031912	MemberAccess	current -> state . keep_usertime		11031863	1					
ANR	11031913	PtrMemberAccess	current -> state		11031863	0					
ANR	11031914	Identifier	current		11031863	0					
ANR	11031915	Identifier	state		11031863	1					
ANR	11031916	Identifier	keep_usertime		11031863	1					
ANR	11031917	CompoundStatement		8:39:214:214	11031863	1					
ANR	11031918	ExpressionStatement	psched -> usertime_initial = utime	1155:8:36741:36773	11031863	0	True				
ANR	11031919	AssignmentExpression	psched -> usertime_initial = utime		11031863	0		=			
ANR	11031920	PtrMemberAccess	psched -> usertime_initial		11031863	0					
ANR	11031921	Identifier	psched		11031863	0					
ANR	11031922	Identifier	usertime_initial		11031863	1					
ANR	11031923	Identifier	utime		11031863	1					
ANR	11031924	ExpressionStatement	current -> state . keep_usertime = true	1156:8:36783:36818	11031863	1	True				
ANR	11031925	AssignmentExpression	current -> state . keep_usertime = true		11031863	0		=			
ANR	11031926	MemberAccess	current -> state . keep_usertime		11031863	0					
ANR	11031927	PtrMemberAccess	current -> state		11031863	0					
ANR	11031928	Identifier	current		11031863	0					
ANR	11031929	Identifier	state		11031863	1					
ANR	11031930	Identifier	keep_usertime		11031863	1					
ANR	11031931	Identifier	true		11031863	1					
ANR	11031932	ExpressionStatement	"make_int ( op , current -> state . usertime_total + utime - psched -> usertime_initial )"	1158:4:36830:36921	11031863	6	True				
ANR	11031933	CallExpression	"make_int ( op , current -> state . usertime_total + utime - psched -> usertime_initial )"		11031863	0					
ANR	11031934	Callee	make_int		11031863	0					
ANR	11031935	Identifier	make_int		11031863	0					
ANR	11031936	ArgumentList	op		11031863	1					
ANR	11031937	Argument	op		11031863	0					
ANR	11031938	Identifier	op		11031863	0					
ANR	11031939	Argument	current -> state . usertime_total + utime - psched -> usertime_initial		11031863	1					
ANR	11031940	AdditiveExpression	current -> state . usertime_total + utime - psched -> usertime_initial		11031863	0		+			
ANR	11031941	MemberAccess	current -> state . usertime_total		11031863	0					
ANR	11031942	PtrMemberAccess	current -> state		11031863	0					
ANR	11031943	Identifier	current		11031863	0					
ANR	11031944	Identifier	state		11031863	1					
ANR	11031945	Identifier	usertime_total		11031863	1					
ANR	11031946	AdditiveExpression	utime - psched -> usertime_initial		11031863	1		-			
ANR	11031947	Identifier	utime		11031863	0					
ANR	11031948	PtrMemberAccess	psched -> usertime_initial		11031863	1					
ANR	11031949	Identifier	psched		11031863	0					
ANR	11031950	Identifier	usertime_initial		11031863	1					
ANR	11031951	ReturnStatement	return 0 ;	1160:4:36927:36935	11031863	7	True				
ANR	11031952	PrimaryExpression	0		11031863	0					
ANR	11031953	ReturnType	static int		11031863	1					
ANR	11031954	Identifier	zusertime_context		11031863	2					
ANR	11031955	ParameterList	i_ctx_t * i_ctx_p		11031863	3					
ANR	11031956	Parameter	i_ctx_t * i_ctx_p	1142:18:36348:36363	11031863	0	True				
ANR	11031957	ParameterType	i_ctx_t *		11031863	0					
ANR	11031958	Identifier	i_ctx_p		11031863	1					
ANR	11031959	CFGEntryNode	ENTRY		11031863		True				
ANR	11031960	CFGExitNode	EXIT		11031863		True				
ANR	11031961	Symbol	op		11031863						
ANR	11031962	Symbol	utime		11031863						
ANR	11031963	Symbol	psched		11031863						
ANR	11031964	Symbol	* psched		11031863						
ANR	11031965	Symbol	* current		11031863						
ANR	11031966	Symbol	current -> scheduler		11031863						
ANR	11031967	Symbol	psched -> usertime_initial		11031863						
ANR	11031968	Symbol	osp		11031863						
ANR	11031969	Symbol	current -> state . keep_usertime		11031863						
ANR	11031970	Symbol	current		11031863						
ANR	11031971	Symbol	context_usertime		11031863						
ANR	11031972	Symbol	current -> state . usertime_total		11031863						
ANR	11031973	Symbol	current -> state		11031863						
ANR	11031974	Symbol	i_ctx_p		11031863						
ANR	11031975	Symbol	true		11031863						
ANR	11031976	Function	context_create	1166:0:37005:38894							
ANR	11031977	FunctionDef	"context_create (gs_scheduler_t * psched , gs_context_t * * ppctx , const gs_dual_memory_t * dmem , const gs_context_state_t * i_ctx_p , bool copy_state)"		11031976	0					
ANR	11031978	CompoundStatement		1170:0:37192:38894	11031976	0					
ANR	11031979	IdentifierDeclStatement	gs_memory_t * mem = gs_memory_stable ( ( gs_memory_t * ) dmem -> space_local ) ;	1179:4:37610:37679	11031976	0	True				
ANR	11031980	IdentifierDecl	* mem = gs_memory_stable ( ( gs_memory_t * ) dmem -> space_local )		11031976	0					
ANR	11031981	IdentifierDeclType	gs_memory_t *		11031976	0					
ANR	11031982	Identifier	mem		11031976	1					
ANR	11031983	AssignmentExpression	* mem = gs_memory_stable ( ( gs_memory_t * ) dmem -> space_local )		11031976	2		=			
ANR	11031984	Identifier	mem		11031976	0					
ANR	11031985	CallExpression	gs_memory_stable ( ( gs_memory_t * ) dmem -> space_local )		11031976	1					
ANR	11031986	Callee	gs_memory_stable		11031976	0					
ANR	11031987	Identifier	gs_memory_stable		11031976	0					
ANR	11031988	ArgumentList	( gs_memory_t * ) dmem -> space_local		11031976	1					
ANR	11031989	Argument	( gs_memory_t * ) dmem -> space_local		11031976	0					
ANR	11031990	CastExpression	( gs_memory_t * ) dmem -> space_local		11031976	0					
ANR	11031991	CastTarget	gs_memory_t *		11031976	0					
ANR	11031992	PtrMemberAccess	dmem -> space_local		11031976	1					
ANR	11031993	Identifier	dmem		11031976	0					
ANR	11031994	Identifier	space_local		11031976	1					
ANR	11031995	IdentifierDeclStatement	gs_context_t * pctx ;	1180:4:37685:37703	11031976	1	True				
ANR	11031996	IdentifierDecl	* pctx		11031976	0					
ANR	11031997	IdentifierDeclType	gs_context_t *		11031976	0					
ANR	11031998	Identifier	pctx		11031976	1					
ANR	11031999	IdentifierDeclStatement	int code ;	1181:4:37709:37717	11031976	2	True				
ANR	11032000	IdentifierDecl	code		11031976	0					
ANR	11032001	IdentifierDeclType	int		11031976	0					
ANR	11032002	Identifier	code		11031976	1					
ANR	11032003	IdentifierDeclStatement	long ctx_index ;	1182:4:37723:37737	11031976	3	True				
ANR	11032004	IdentifierDecl	ctx_index		11031976	0					
ANR	11032005	IdentifierDeclType	long		11031976	0					
ANR	11032006	Identifier	ctx_index		11031976	1					
ANR	11032007	IdentifierDeclStatement	gs_context_t * * pte ;	1183:4:37743:37761	11031976	4	True				
ANR	11032008	IdentifierDecl	* * pte		11031976	0					
ANR	11032009	IdentifierDeclType	gs_context_t * *		11031976	0					
ANR	11032010	Identifier	pte		11031976	1					
ANR	11032011	IdentifierDeclStatement	ref * slice_ref ;	1184:4:37767:37781	11031976	5	True				
ANR	11032012	IdentifierDecl	* slice_ref		11031976	0					
ANR	11032013	IdentifierDeclType	ref *		11031976	0					
ANR	11032014	Identifier	slice_ref		11031976	1					
ANR	11032015	ExpressionStatement	"pctx = gs_alloc_struct ( mem , gs_context_t , & st_context , ""context_create"" )"	1186:4:37788:37860	11031976	6	True				
ANR	11032016	AssignmentExpression	"pctx = gs_alloc_struct ( mem , gs_context_t , & st_context , ""context_create"" )"		11031976	0		=			
ANR	11032017	Identifier	pctx		11031976	0					
ANR	11032018	CallExpression	"gs_alloc_struct ( mem , gs_context_t , & st_context , ""context_create"" )"		11031976	1					
ANR	11032019	Callee	gs_alloc_struct		11031976	0					
ANR	11032020	Identifier	gs_alloc_struct		11031976	0					
ANR	11032021	ArgumentList	mem		11031976	1					
ANR	11032022	Argument	mem		11031976	0					
ANR	11032023	Identifier	mem		11031976	0					
ANR	11032024	Argument	gs_context_t		11031976	1					
ANR	11032025	Identifier	gs_context_t		11031976	0					
ANR	11032026	Argument	& st_context		11031976	2					
ANR	11032027	UnaryOperationExpression	& st_context		11031976	0					
ANR	11032028	UnaryOperator	&		11031976	0					
ANR	11032029	Identifier	st_context		11031976	1					
ANR	11032030	Argument	"""context_create"""		11031976	3					
ANR	11032031	PrimaryExpression	"""context_create"""		11031976	0					
ANR	11032032	IfStatement	if ( pctx == 0 )		11031976	7					
ANR	11032033	Condition	pctx == 0	1187:8:37870:37878	11031976	0	True				
ANR	11032034	EqualityExpression	pctx == 0		11031976	0		==			
ANR	11032035	Identifier	pctx		11031976	0					
ANR	11032036	PrimaryExpression	0		11031976	1					
ANR	11032037	ExpressionStatement	return_error ( gs_error_VMerror )	1188:8:37889:37919	11031976	1	True				
ANR	11032038	CallExpression	return_error ( gs_error_VMerror )		11031976	0					
ANR	11032039	Callee	return_error		11031976	0					
ANR	11032040	Identifier	return_error		11031976	0					
ANR	11032041	ArgumentList	gs_error_VMerror		11031976	1					
ANR	11032042	Argument	gs_error_VMerror		11031976	0					
ANR	11032043	Identifier	gs_error_VMerror		11031976	0					
ANR	11032044	IfStatement	if ( copy_state )		11031976	8					
ANR	11032045	Condition	copy_state	1189:8:37929:37938	11031976	0	True				
ANR	11032046	Identifier	copy_state		11031976	0					
ANR	11032047	CompoundStatement		20:20:748:748	11031976	1					
ANR	11032048	ExpressionStatement	pctx -> state = * i_ctx_p	1190:8:37951:37973	11031976	0	True				
ANR	11032049	AssignmentExpression	pctx -> state = * i_ctx_p		11031976	0		=			
ANR	11032050	PtrMemberAccess	pctx -> state		11031976	0					
ANR	11032051	Identifier	pctx		11031976	0					
ANR	11032052	Identifier	state		11031976	1					
ANR	11032053	UnaryOperationExpression	* i_ctx_p		11031976	1					
ANR	11032054	UnaryOperator	*		11031976	0					
ANR	11032055	Identifier	i_ctx_p		11031976	1					
ANR	11032056	ElseStatement	else		11031976	0					
ANR	11032057	CompoundStatement		23:8:803:845	11031976	0					
ANR	11032058	IdentifierDeclStatement	gs_context_state_t * pctx_st = & pctx -> state ;	1192:8:37996:38038	11031976	0	True				
ANR	11032059	IdentifierDecl	* pctx_st = & pctx -> state		11031976	0					
ANR	11032060	IdentifierDeclType	gs_context_state_t *		11031976	0					
ANR	11032061	Identifier	pctx_st		11031976	1					
ANR	11032062	AssignmentExpression	* pctx_st = & pctx -> state		11031976	2		=			
ANR	11032063	Identifier	pctx_st		11031976	0					
ANR	11032064	UnaryOperationExpression	& pctx -> state		11031976	1					
ANR	11032065	UnaryOperator	&		11031976	0					
ANR	11032066	PtrMemberAccess	pctx -> state		11031976	1					
ANR	11032067	Identifier	pctx		11031976	0					
ANR	11032068	Identifier	state		11031976	1					
ANR	11032069	ExpressionStatement	"code = context_state_alloc ( & pctx_st , systemdict , dmem )"	1194:8:38049:38103	11031976	1	True				
ANR	11032070	AssignmentExpression	"code = context_state_alloc ( & pctx_st , systemdict , dmem )"		11031976	0		=			
ANR	11032071	Identifier	code		11031976	0					
ANR	11032072	CallExpression	"context_state_alloc ( & pctx_st , systemdict , dmem )"		11031976	1					
ANR	11032073	Callee	context_state_alloc		11031976	0					
ANR	11032074	Identifier	context_state_alloc		11031976	0					
ANR	11032075	ArgumentList	& pctx_st		11031976	1					
ANR	11032076	Argument	& pctx_st		11031976	0					
ANR	11032077	UnaryOperationExpression	& pctx_st		11031976	0					
ANR	11032078	UnaryOperator	&		11031976	0					
ANR	11032079	Identifier	pctx_st		11031976	1					
ANR	11032080	Argument	systemdict		11031976	1					
ANR	11032081	Identifier	systemdict		11031976	0					
ANR	11032082	Argument	dmem		11031976	2					
ANR	11032083	Identifier	dmem		11031976	0					
ANR	11032084	IfStatement	if ( code < 0 )		11031976	2					
ANR	11032085	Condition	code < 0	1195:12:38117:38124	11031976	0	True				
ANR	11032086	RelationalExpression	code < 0		11031976	0		<			
ANR	11032087	Identifier	code		11031976	0					
ANR	11032088	PrimaryExpression	0		11031976	1					
ANR	11032089	CompoundStatement		26:22:934:934	11031976	1					
ANR	11032090	ExpressionStatement	"gs_free_object ( mem , pctx , ""context_create"" )"	1196:12:38141:38184	11031976	0	True				
ANR	11032091	CallExpression	"gs_free_object ( mem , pctx , ""context_create"" )"		11031976	0					
ANR	11032092	Callee	gs_free_object		11031976	0					
ANR	11032093	Identifier	gs_free_object		11031976	0					
ANR	11032094	ArgumentList	mem		11031976	1					
ANR	11032095	Argument	mem		11031976	0					
ANR	11032096	Identifier	mem		11031976	0					
ANR	11032097	Argument	pctx		11031976	1					
ANR	11032098	Identifier	pctx		11031976	0					
ANR	11032099	Argument	"""context_create"""		11031976	2					
ANR	11032100	PrimaryExpression	"""context_create"""		11031976	0					
ANR	11032101	ReturnStatement	return code ;	1197:12:38198:38209	11031976	1	True				
ANR	11032102	Identifier	code		11031976	0					
ANR	11032103	IfStatement	"if ( dict_find_string ( systemdict , ""TIME_SLICE_INTERVAL"" , & slice_ref ) > 0 )"		11031976	9					
ANR	11032104	Condition	"dict_find_string ( systemdict , ""TIME_SLICE_INTERVAL"" , & slice_ref ) > 0"	1201:8:38236:38302	11031976	0	True				
ANR	11032105	RelationalExpression	"dict_find_string ( systemdict , ""TIME_SLICE_INTERVAL"" , & slice_ref ) > 0"		11031976	0		>			
ANR	11032106	CallExpression	"dict_find_string ( systemdict , ""TIME_SLICE_INTERVAL"" , & slice_ref )"		11031976	0					
ANR	11032107	Callee	dict_find_string		11031976	0					
ANR	11032108	Identifier	dict_find_string		11031976	0					
ANR	11032109	ArgumentList	systemdict		11031976	1					
ANR	11032110	Argument	systemdict		11031976	0					
ANR	11032111	Identifier	systemdict		11031976	0					
ANR	11032112	Argument	"""TIME_SLICE_INTERVAL"""		11031976	1					
ANR	11032113	PrimaryExpression	"""TIME_SLICE_INTERVAL"""		11031976	0					
ANR	11032114	Argument	& slice_ref		11031976	2					
ANR	11032115	UnaryOperationExpression	& slice_ref		11031976	0					
ANR	11032116	UnaryOperator	&		11031976	0					
ANR	11032117	Identifier	slice_ref		11031976	1					
ANR	11032118	PrimaryExpression	0		11031976	1					
ANR	11032119	CompoundStatement		32:77:1112:1112	11031976	1					
ANR	11032120	ExpressionStatement	reschedule_interval = slice_ref -> value . intval	1202:8:38315:38360	11031976	0	True				
ANR	11032121	AssignmentExpression	reschedule_interval = slice_ref -> value . intval		11031976	0		=			
ANR	11032122	Identifier	reschedule_interval		11031976	0					
ANR	11032123	MemberAccess	slice_ref -> value . intval		11031976	1					
ANR	11032124	PtrMemberAccess	slice_ref -> value		11031976	0					
ANR	11032125	Identifier	slice_ref		11031976	0					
ANR	11032126	Identifier	value		11031976	1					
ANR	11032127	Identifier	intval		11031976	1					
ANR	11032128	ExpressionStatement	"ctx_index = gs_next_ids ( mem , 1 )"	1205:4:38373:38404	11031976	10	True				
ANR	11032129	AssignmentExpression	"ctx_index = gs_next_ids ( mem , 1 )"		11031976	0		=			
ANR	11032130	Identifier	ctx_index		11031976	0					
ANR	11032131	CallExpression	"gs_next_ids ( mem , 1 )"		11031976	1					
ANR	11032132	Callee	gs_next_ids		11031976	0					
ANR	11032133	Identifier	gs_next_ids		11031976	0					
ANR	11032134	ArgumentList	mem		11031976	1					
ANR	11032135	Argument	mem		11031976	0					
ANR	11032136	Identifier	mem		11031976	0					
ANR	11032137	Argument	1		11031976	1					
ANR	11032138	PrimaryExpression	1		11031976	0					
ANR	11032139	ExpressionStatement	pctx -> scheduler = psched	1206:4:38410:38434	11031976	11	True				
ANR	11032140	AssignmentExpression	pctx -> scheduler = psched		11031976	0		=			
ANR	11032141	PtrMemberAccess	pctx -> scheduler		11031976	0					
ANR	11032142	Identifier	pctx		11031976	0					
ANR	11032143	Identifier	scheduler		11031976	1					
ANR	11032144	Identifier	psched		11031976	1					
ANR	11032145	ExpressionStatement	pctx -> status = cs_active	1207:4:38440:38464	11031976	12	True				
ANR	11032146	AssignmentExpression	pctx -> status = cs_active		11031976	0		=			
ANR	11032147	PtrMemberAccess	pctx -> status		11031976	0					
ANR	11032148	Identifier	pctx		11031976	0					
ANR	11032149	Identifier	status		11031976	1					
ANR	11032150	Identifier	cs_active		11031976	1					
ANR	11032151	ExpressionStatement	pctx -> index = ctx_index	1208:4:38470:38493	11031976	13	True				
ANR	11032152	AssignmentExpression	pctx -> index = ctx_index		11031976	0		=			
ANR	11032153	PtrMemberAccess	pctx -> index		11031976	0					
ANR	11032154	Identifier	pctx		11031976	0					
ANR	11032155	Identifier	index		11031976	1					
ANR	11032156	Identifier	ctx_index		11031976	1					
ANR	11032157	ExpressionStatement	pctx -> detach = false	1209:4:38499:38519	11031976	14	True				
ANR	11032158	AssignmentExpression	pctx -> detach = false		11031976	0		=			
ANR	11032159	PtrMemberAccess	pctx -> detach		11031976	0					
ANR	11032160	Identifier	pctx		11031976	0					
ANR	11032161	Identifier	detach		11031976	1					
ANR	11032162	Identifier	false		11031976	1					
ANR	11032163	ExpressionStatement	pctx -> saved_local_vm = false	1210:4:38525:38553	11031976	15	True				
ANR	11032164	AssignmentExpression	pctx -> saved_local_vm = false		11031976	0		=			
ANR	11032165	PtrMemberAccess	pctx -> saved_local_vm		11031976	0					
ANR	11032166	Identifier	pctx		11031976	0					
ANR	11032167	Identifier	saved_local_vm		11031976	1					
ANR	11032168	Identifier	false		11031976	1					
ANR	11032169	ExpressionStatement	pctx -> visible = true	1211:4:38559:38579	11031976	16	True				
ANR	11032170	AssignmentExpression	pctx -> visible = true		11031976	0		=			
ANR	11032171	PtrMemberAccess	pctx -> visible		11031976	0					
ANR	11032172	Identifier	pctx		11031976	0					
ANR	11032173	Identifier	visible		11031976	1					
ANR	11032174	Identifier	true		11031976	1					
ANR	11032175	ExpressionStatement	pctx -> next_index = 0	1212:4:38585:38605	11031976	17	True				
ANR	11032176	AssignmentExpression	pctx -> next_index = 0		11031976	0		=			
ANR	11032177	PtrMemberAccess	pctx -> next_index		11031976	0					
ANR	11032178	Identifier	pctx		11031976	0					
ANR	11032179	Identifier	next_index		11031976	1					
ANR	11032180	PrimaryExpression	0		11031976	1					
ANR	11032181	ExpressionStatement	pctx -> joiner_index = 0	1213:4:38611:38633	11031976	18	True				
ANR	11032182	AssignmentExpression	pctx -> joiner_index = 0		11031976	0		=			
ANR	11032183	PtrMemberAccess	pctx -> joiner_index		11031976	0					
ANR	11032184	Identifier	pctx		11031976	0					
ANR	11032185	Identifier	joiner_index		11031976	1					
ANR	11032186	PrimaryExpression	0		11031976	1					
ANR	11032187	ExpressionStatement	pte = & psched -> table [ ctx_index % CTX_TABLE_SIZE ]	1214:4:38639:38687	11031976	19	True				
ANR	11032188	AssignmentExpression	pte = & psched -> table [ ctx_index % CTX_TABLE_SIZE ]		11031976	0		=			
ANR	11032189	Identifier	pte		11031976	0					
ANR	11032190	UnaryOperationExpression	& psched -> table [ ctx_index % CTX_TABLE_SIZE ]		11031976	1					
ANR	11032191	UnaryOperator	&		11031976	0					
ANR	11032192	ArrayIndexing	psched -> table [ ctx_index % CTX_TABLE_SIZE ]		11031976	1					
ANR	11032193	PtrMemberAccess	psched -> table		11031976	0					
ANR	11032194	Identifier	psched		11031976	0					
ANR	11032195	Identifier	table		11031976	1					
ANR	11032196	MultiplicativeExpression	ctx_index % CTX_TABLE_SIZE		11031976	1		%			
ANR	11032197	Identifier	ctx_index		11031976	0					
ANR	11032198	Identifier	CTX_TABLE_SIZE		11031976	1					
ANR	11032199	ExpressionStatement	pctx -> table_next = * pte	1215:4:38693:38716	11031976	20	True				
ANR	11032200	AssignmentExpression	pctx -> table_next = * pte		11031976	0		=			
ANR	11032201	PtrMemberAccess	pctx -> table_next		11031976	0					
ANR	11032202	Identifier	pctx		11031976	0					
ANR	11032203	Identifier	table_next		11031976	1					
ANR	11032204	UnaryOperationExpression	* pte		11031976	1					
ANR	11032205	UnaryOperator	*		11031976	0					
ANR	11032206	Identifier	pte		11031976	1					
ANR	11032207	ExpressionStatement	* pte = pctx	1216:4:38722:38733	11031976	21	True				
ANR	11032208	AssignmentExpression	* pte = pctx		11031976	0		=			
ANR	11032209	UnaryOperationExpression	* pte		11031976	0					
ANR	11032210	UnaryOperator	*		11031976	0					
ANR	11032211	Identifier	pte		11031976	1					
ANR	11032212	Identifier	pctx		11031976	1					
ANR	11032213	ExpressionStatement	* ppctx = pctx	1217:4:38739:38752	11031976	22	True				
ANR	11032214	AssignmentExpression	* ppctx = pctx		11031976	0		=			
ANR	11032215	UnaryOperationExpression	* ppctx		11031976	0					
ANR	11032216	UnaryOperator	*		11031976	0					
ANR	11032217	Identifier	ppctx		11031976	1					
ANR	11032218	Identifier	pctx		11031976	1					
ANR	11032219	IfStatement	"if ( gs_debug_c ( '\\'' ) | gs_debug_c ( '""' ) )"		11031976	23					
ANR	11032220	Condition	"gs_debug_c ( '\\'' ) | gs_debug_c ( '""' )"	1218:8:38762:38795	11031976	0	True				
ANR	11032221	InclusiveOrExpression	"gs_debug_c ( '\\'' ) | gs_debug_c ( '""' )"		11031976	0		|			
ANR	11032222	CallExpression	gs_debug_c ( '\\'' )		11031976	0					
ANR	11032223	Callee	gs_debug_c		11031976	0					
ANR	11032224	Identifier	gs_debug_c		11031976	0					
ANR	11032225	ArgumentList	'\\''		11031976	1					
ANR	11032226	Argument	'\\''		11031976	0					
ANR	11032227	PrimaryExpression	'\\''		11031976	0					
ANR	11032228	CallExpression	"gs_debug_c ( '""' )"		11031976	1					
ANR	11032229	Callee	gs_debug_c		11031976	0					
ANR	11032230	Identifier	gs_debug_c		11031976	0					
ANR	11032231	ArgumentList	"'""'"		11031976	1					
ANR	11032232	Argument	"'""'"		11031976	0					
ANR	11032233	PrimaryExpression	"'""'"		11031976	0					
ANR	11032234	ExpressionStatement	"dmlprintf2 ( imemory , ""[']create %ld at 0x%lx\\n"" , ctx_index , ( ulong ) pctx )"	1219:8:38806:38878	11031976	1	True				
ANR	11032235	CallExpression	"dmlprintf2 ( imemory , ""[']create %ld at 0x%lx\\n"" , ctx_index , ( ulong ) pctx )"		11031976	0					
ANR	11032236	Callee	dmlprintf2		11031976	0					
ANR	11032237	Identifier	dmlprintf2		11031976	0					
ANR	11032238	ArgumentList	imemory		11031976	1					
ANR	11032239	Argument	imemory		11031976	0					
ANR	11032240	Identifier	imemory		11031976	0					
ANR	11032241	Argument	"""[']create %ld at 0x%lx\\n"""		11031976	1					
ANR	11032242	PrimaryExpression	"""[']create %ld at 0x%lx\\n"""		11031976	0					
ANR	11032243	Argument	ctx_index		11031976	2					
ANR	11032244	Identifier	ctx_index		11031976	0					
ANR	11032245	Argument	( ulong ) pctx		11031976	3					
ANR	11032246	CastExpression	( ulong ) pctx		11031976	0					
ANR	11032247	CastTarget	ulong		11031976	0					
ANR	11032248	Identifier	pctx		11031976	1					
ANR	11032249	ReturnStatement	return 0 ;	1220:4:38884:38892	11031976	24	True				
ANR	11032250	PrimaryExpression	0		11031976	0					
ANR	11032251	ReturnType	static int		11031976	1					
ANR	11032252	Identifier	context_create		11031976	2					
ANR	11032253	ParameterList	"gs_scheduler_t * psched , gs_context_t * * ppctx , const gs_dual_memory_t * dmem , const gs_context_state_t * i_ctx_p , bool copy_state"		11031976	3					
ANR	11032254	Parameter	gs_scheduler_t * psched	1167:15:37031:37053	11031976	0	True				
ANR	11032255	ParameterType	gs_scheduler_t *		11031976	0					
ANR	11032256	Identifier	psched		11031976	1					
ANR	11032257	Parameter	gs_context_t * * ppctx	1167:40:37056:37076	11031976	1	True				
ANR	11032258	ParameterType	gs_context_t * *		11031976	0					
ANR	11032259	Identifier	ppctx		11031976	1					
ANR	11032260	Parameter	const gs_dual_memory_t * dmem	1168:15:37094:37122	11031976	2	True				
ANR	11032261	ParameterType	const gs_dual_memory_t *		11031976	0					
ANR	11032262	Identifier	dmem		11031976	1					
ANR	11032263	Parameter	const gs_context_state_t * i_ctx_p	1169:15:37140:37172	11031976	3	True				
ANR	11032264	ParameterType	const gs_context_state_t *		11031976	0					
ANR	11032265	Identifier	i_ctx_p		11031976	1					
ANR	11032266	Parameter	bool copy_state	1169:50:37175:37189	11031976	4	True				
ANR	11032267	ParameterType	bool		11031976	0					
ANR	11032268	Identifier	copy_state		11031976	1					
ANR	11032269	CFGEntryNode	ENTRY		11031976		True				
ANR	11032270	CFGExitNode	EXIT		11031976		True				
ANR	11032271	Symbol	pctx		11031976						
ANR	11032272	Symbol	cs_active		11031976						
ANR	11032273	Symbol	* pte		11031976						
ANR	11032274	Symbol	gs_next_ids		11031976						
ANR	11032275	Symbol	* ppctx		11031976						
ANR	11032276	Symbol	dmem -> space_local		11031976						
ANR	11032277	Symbol	pctx -> saved_local_vm		11031976						
ANR	11032278	Symbol	pctx -> joiner_index		11031976						
ANR	11032279	Symbol	* i_ctx_p		11031976						
ANR	11032280	Symbol	reschedule_interval		11031976						
ANR	11032281	Symbol	gs_debug_c		11031976						
ANR	11032282	Symbol	& slice_ref		11031976						
ANR	11032283	Symbol	imemory		11031976						
ANR	11032284	Symbol	slice_ref -> value . intval		11031976						
ANR	11032285	Symbol	pctx -> status		11031976						
ANR	11032286	Symbol	dict_find_string		11031976						
ANR	11032287	Symbol	* psched		11031976						
ANR	11032288	Symbol	psched -> table		11031976						
ANR	11032289	Symbol	pctx_st		11031976						
ANR	11032290	Symbol	& st_context		11031976						
ANR	11032291	Symbol	slice_ref		11031976						
ANR	11032292	Symbol	pctx -> state		11031976						
ANR	11032293	Symbol	i_ctx_p		11031976						
ANR	11032294	Symbol	ctx_index		11031976						
ANR	11032295	Symbol	true		11031976						
ANR	11032296	Symbol	* dmem		11031976						
ANR	11032297	Symbol	systemdict		11031976						
ANR	11032298	Symbol	code		11031976						
ANR	11032299	Symbol	gs_alloc_struct		11031976						
ANR	11032300	Symbol	copy_state		11031976						
ANR	11032301	Symbol	* pctx		11031976						
ANR	11032302	Symbol	pctx -> table_next		11031976						
ANR	11032303	Symbol	CTX_TABLE_SIZE		11031976						
ANR	11032304	Symbol	mem		11031976						
ANR	11032305	Symbol	& pctx -> state		11031976						
ANR	11032306	Symbol	dmem		11031976						
ANR	11032307	Symbol	pte		11031976						
ANR	11032308	Symbol	pctx -> scheduler		11031976						
ANR	11032309	Symbol	pctx -> index		11031976						
ANR	11032310	Symbol	psched		11031976						
ANR	11032311	Symbol	gs_context_t		11031976						
ANR	11032312	Symbol	false		11031976						
ANR	11032313	Symbol	gs_memory_stable		11031976						
ANR	11032314	Symbol	pctx -> detach		11031976						
ANR	11032315	Symbol	gs_error_VMerror		11031976						
ANR	11032316	Symbol	context_state_alloc		11031976						
ANR	11032317	Symbol	pctx -> next_index		11031976						
ANR	11032318	Symbol	ppctx		11031976						
ANR	11032319	Symbol	* slice_ref		11031976						
ANR	11032320	Symbol	slice_ref -> value		11031976						
ANR	11032321	Symbol	& pctx_st		11031976						
ANR	11032322	Symbol	pctx -> visible		11031976						
ANR	11032323	Function	context_param	1224:0:38972:39272							
ANR	11032324	FunctionDef	"context_param (const gs_scheduler_t * psched , os_ptr op , gs_context_t * * ppctx)"		11032323	0					
ANR	11032325	CompoundStatement		1226:0:39062:39272	11032323	0					
ANR	11032326	IdentifierDeclStatement	gs_context_t * pctx ;	1227:4:39068:39086	11032323	0	True				
ANR	11032327	IdentifierDecl	* pctx		11032323	0					
ANR	11032328	IdentifierDeclType	gs_context_t *		11032323	0					
ANR	11032329	Identifier	pctx		11032323	1					
ANR	11032330	ExpressionStatement	"check_type ( * op , t_integer )"	1229:4:39093:39119	11032323	1	True				
ANR	11032331	CallExpression	"check_type ( * op , t_integer )"		11032323	0					
ANR	11032332	Callee	check_type		11032323	0					
ANR	11032333	Identifier	check_type		11032323	0					
ANR	11032334	ArgumentList	* op		11032323	1					
ANR	11032335	Argument	* op		11032323	0					
ANR	11032336	UnaryOperationExpression	* op		11032323	0					
ANR	11032337	UnaryOperator	*		11032323	0					
ANR	11032338	Identifier	op		11032323	1					
ANR	11032339	Argument	t_integer		11032323	1					
ANR	11032340	Identifier	t_integer		11032323	0					
ANR	11032341	ExpressionStatement	"pctx = index_context ( psched , op -> value . intval )"	1230:4:39125:39171	11032323	2	True				
ANR	11032342	AssignmentExpression	"pctx = index_context ( psched , op -> value . intval )"		11032323	0		=			
ANR	11032343	Identifier	pctx		11032323	0					
ANR	11032344	CallExpression	"index_context ( psched , op -> value . intval )"		11032323	1					
ANR	11032345	Callee	index_context		11032323	0					
ANR	11032346	Identifier	index_context		11032323	0					
ANR	11032347	ArgumentList	psched		11032323	1					
ANR	11032348	Argument	psched		11032323	0					
ANR	11032349	Identifier	psched		11032323	0					
ANR	11032350	Argument	op -> value . intval		11032323	1					
ANR	11032351	MemberAccess	op -> value . intval		11032323	0					
ANR	11032352	PtrMemberAccess	op -> value		11032323	0					
ANR	11032353	Identifier	op		11032323	0					
ANR	11032354	Identifier	value		11032323	1					
ANR	11032355	Identifier	intval		11032323	1					
ANR	11032356	IfStatement	if ( pctx == 0 )		11032323	3					
ANR	11032357	Condition	pctx == 0	1231:8:39181:39189	11032323	0	True				
ANR	11032358	EqualityExpression	pctx == 0		11032323	0		==			
ANR	11032359	Identifier	pctx		11032323	0					
ANR	11032360	PrimaryExpression	0		11032323	1					
ANR	11032361	ExpressionStatement	return_error ( gs_error_invalidcontext )	1232:8:39200:39237	11032323	1	True				
ANR	11032362	CallExpression	return_error ( gs_error_invalidcontext )		11032323	0					
ANR	11032363	Callee	return_error		11032323	0					
ANR	11032364	Identifier	return_error		11032323	0					
ANR	11032365	ArgumentList	gs_error_invalidcontext		11032323	1					
ANR	11032366	Argument	gs_error_invalidcontext		11032323	0					
ANR	11032367	Identifier	gs_error_invalidcontext		11032323	0					
ANR	11032368	ExpressionStatement	* ppctx = pctx	1233:4:39243:39256	11032323	4	True				
ANR	11032369	AssignmentExpression	* ppctx = pctx		11032323	0		=			
ANR	11032370	UnaryOperationExpression	* ppctx		11032323	0					
ANR	11032371	UnaryOperator	*		11032323	0					
ANR	11032372	Identifier	ppctx		11032323	1					
ANR	11032373	Identifier	pctx		11032323	1					
ANR	11032374	ReturnStatement	return 0 ;	1234:4:39262:39270	11032323	5	True				
ANR	11032375	PrimaryExpression	0		11032323	0					
ANR	11032376	ReturnType	static int		11032323	1					
ANR	11032377	Identifier	context_param		11032323	2					
ANR	11032378	ParameterList	"const gs_scheduler_t * psched , os_ptr op , gs_context_t * * ppctx"		11032323	3					
ANR	11032379	Parameter	const gs_scheduler_t * psched	1225:14:38997:39025	11032323	0	True				
ANR	11032380	ParameterType	const gs_scheduler_t *		11032323	0					
ANR	11032381	Identifier	psched		11032323	1					
ANR	11032382	Parameter	os_ptr op	1225:45:39028:39036	11032323	1	True				
ANR	11032383	ParameterType	os_ptr		11032323	0					
ANR	11032384	Identifier	op		11032323	1					
ANR	11032385	Parameter	gs_context_t * * ppctx	1225:56:39039:39059	11032323	2	True				
ANR	11032386	ParameterType	gs_context_t * *		11032323	0					
ANR	11032387	Identifier	ppctx		11032323	1					
ANR	11032388	CFGEntryNode	ENTRY		11032323		True				
ANR	11032389	CFGExitNode	EXIT		11032323		True				
ANR	11032390	Symbol	op		11032323						
ANR	11032391	Symbol	pctx		11032323						
ANR	11032392	Symbol	t_integer		11032323						
ANR	11032393	Symbol	* op		11032323						
ANR	11032394	Symbol	psched		11032323						
ANR	11032395	Symbol	op -> value		11032323						
ANR	11032396	Symbol	ppctx		11032323						
ANR	11032397	Symbol	gs_error_invalidcontext		11032323						
ANR	11032398	Symbol	op -> value . intval		11032323						
ANR	11032399	Symbol	* ppctx		11032323						
ANR	11032400	Symbol	index_context		11032323						
ANR	11032401	Function	context_usertime	1238:0:39318:39460							
ANR	11032402	FunctionDef	context_usertime ()		11032401	0					
ANR	11032403	CompoundStatement		1240:0:39353:39460	11032401	0					
ANR	11032404	IdentifierDeclStatement	long secs_ns [ 2 ] ;	1241:4:39359:39374	11032401	0	True				
ANR	11032405	IdentifierDecl	secs_ns [ 2 ]		11032401	0					
ANR	11032406	IdentifierDeclType	long [ 2 ]		11032401	0					
ANR	11032407	Identifier	secs_ns		11032401	1					
ANR	11032408	PrimaryExpression	2		11032401	2					
ANR	11032409	ExpressionStatement	gp_get_usertime ( secs_ns )	1243:4:39381:39405	11032401	1	True				
ANR	11032410	CallExpression	gp_get_usertime ( secs_ns )		11032401	0					
ANR	11032411	Callee	gp_get_usertime		11032401	0					
ANR	11032412	Identifier	gp_get_usertime		11032401	0					
ANR	11032413	ArgumentList	secs_ns		11032401	1					
ANR	11032414	Argument	secs_ns		11032401	0					
ANR	11032415	Identifier	secs_ns		11032401	0					
ANR	11032416	ReturnStatement	return secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000 ;	1244:4:39411:39458	11032401	2	True				
ANR	11032417	AdditiveExpression	secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000		11032401	0		+			
ANR	11032418	MultiplicativeExpression	secs_ns [ 0 ] * 1000		11032401	0		*			
ANR	11032419	ArrayIndexing	secs_ns [ 0 ]		11032401	0					
ANR	11032420	Identifier	secs_ns		11032401	0					
ANR	11032421	PrimaryExpression	0		11032401	1					
ANR	11032422	PrimaryExpression	1000		11032401	1					
ANR	11032423	MultiplicativeExpression	secs_ns [ 1 ] / 1000000		11032401	1		/			
ANR	11032424	ArrayIndexing	secs_ns [ 1 ]		11032401	0					
ANR	11032425	Identifier	secs_ns		11032401	0					
ANR	11032426	PrimaryExpression	1		11032401	1					
ANR	11032427	PrimaryExpression	1000000		11032401	1					
ANR	11032428	ReturnType	static long		11032401	1					
ANR	11032429	Identifier	context_usertime		11032401	2					
ANR	11032430	ParameterList			11032401	3					
ANR	11032431	CFGEntryNode	ENTRY		11032401		True				
ANR	11032432	CFGExitNode	EXIT		11032401		True				
ANR	11032433	Symbol	* secs_ns		11032401						
ANR	11032434	Symbol	secs_ns		11032401						
ANR	11032435	Function	context_destroy	1248:0:39488:40143							
ANR	11032436	FunctionDef	context_destroy (gs_context_t * pctx)		11032435	0					
ANR	11032437	CompoundStatement		1250:0:39537:40143	11032435	0					
ANR	11032438	IdentifierDeclStatement	gs_ref_memory_t * mem = pctx -> state . memory . space_local ;	1251:4:39543:39596	11032435	0	True				
ANR	11032439	IdentifierDecl	* mem = pctx -> state . memory . space_local		11032435	0					
ANR	11032440	IdentifierDeclType	gs_ref_memory_t *		11032435	0					
ANR	11032441	Identifier	mem		11032435	1					
ANR	11032442	AssignmentExpression	* mem = pctx -> state . memory . space_local		11032435	2		=			
ANR	11032443	Identifier	mem		11032435	0					
ANR	11032444	MemberAccess	pctx -> state . memory . space_local		11032435	1					
ANR	11032445	MemberAccess	pctx -> state . memory		11032435	0					
ANR	11032446	PtrMemberAccess	pctx -> state		11032435	0					
ANR	11032447	Identifier	pctx		11032435	0					
ANR	11032448	Identifier	state		11032435	1					
ANR	11032449	Identifier	memory		11032435	1					
ANR	11032450	Identifier	space_local		11032435	1					
ANR	11032451	IdentifierDeclStatement	gs_scheduler_t * psched = pctx -> scheduler ;	1252:4:39602:39642	11032435	1	True				
ANR	11032452	IdentifierDecl	* psched = pctx -> scheduler		11032435	0					
ANR	11032453	IdentifierDeclType	gs_scheduler_t *		11032435	0					
ANR	11032454	Identifier	psched		11032435	1					
ANR	11032455	AssignmentExpression	* psched = pctx -> scheduler		11032435	2		=			
ANR	11032456	Identifier	psched		11032435	0					
ANR	11032457	PtrMemberAccess	pctx -> scheduler		11032435	1					
ANR	11032458	Identifier	pctx		11032435	0					
ANR	11032459	Identifier	scheduler		11032435	1					
ANR	11032460	IdentifierDeclStatement	gs_context_t * * ppctx = & psched -> table [ pctx -> index % CTX_TABLE_SIZE ] ;	1253:4:39648:39715	11032435	2	True				
ANR	11032461	IdentifierDecl	* * ppctx = & psched -> table [ pctx -> index % CTX_TABLE_SIZE ]		11032435	0					
ANR	11032462	IdentifierDeclType	gs_context_t * *		11032435	0					
ANR	11032463	Identifier	ppctx		11032435	1					
ANR	11032464	AssignmentExpression	* * ppctx = & psched -> table [ pctx -> index % CTX_TABLE_SIZE ]		11032435	2		=			
ANR	11032465	Identifier	ppctx		11032435	0					
ANR	11032466	UnaryOperationExpression	& psched -> table [ pctx -> index % CTX_TABLE_SIZE ]		11032435	1					
ANR	11032467	UnaryOperator	&		11032435	0					
ANR	11032468	ArrayIndexing	psched -> table [ pctx -> index % CTX_TABLE_SIZE ]		11032435	1					
ANR	11032469	PtrMemberAccess	psched -> table		11032435	0					
ANR	11032470	Identifier	psched		11032435	0					
ANR	11032471	Identifier	table		11032435	1					
ANR	11032472	MultiplicativeExpression	pctx -> index % CTX_TABLE_SIZE		11032435	1		%			
ANR	11032473	PtrMemberAccess	pctx -> index		11032435	0					
ANR	11032474	Identifier	pctx		11032435	0					
ANR	11032475	Identifier	index		11032435	1					
ANR	11032476	Identifier	CTX_TABLE_SIZE		11032435	1					
ANR	11032477	WhileStatement	while ( * ppctx != pctx )		11032435	3					
ANR	11032478	Condition	* ppctx != pctx	1255:11:39729:39742	11032435	0	True				
ANR	11032479	EqualityExpression	* ppctx != pctx		11032435	0		!=			
ANR	11032480	UnaryOperationExpression	* ppctx		11032435	0					
ANR	11032481	UnaryOperator	*		11032435	0					
ANR	11032482	Identifier	ppctx		11032435	1					
ANR	11032483	Identifier	pctx		11032435	1					
ANR	11032484	ExpressionStatement	ppctx = & ( * ppctx ) -> table_next	1256:8:39753:39782	11032435	1	True				
ANR	11032485	AssignmentExpression	ppctx = & ( * ppctx ) -> table_next		11032435	0		=			
ANR	11032486	Identifier	ppctx		11032435	0					
ANR	11032487	UnaryOperationExpression	& ( * ppctx ) -> table_next		11032435	1					
ANR	11032488	UnaryOperator	&		11032435	0					
ANR	11032489	PtrMemberAccess	( * ppctx ) -> table_next		11032435	1					
ANR	11032490	UnaryOperationExpression	* ppctx		11032435	0					
ANR	11032491	UnaryOperator	*		11032435	0					
ANR	11032492	Identifier	ppctx		11032435	1					
ANR	11032493	Identifier	table_next		11032435	1					
ANR	11032494	ExpressionStatement	* ppctx = ( * ppctx ) -> table_next	1257:4:39788:39817	11032435	4	True				
ANR	11032495	AssignmentExpression	* ppctx = ( * ppctx ) -> table_next		11032435	0		=			
ANR	11032496	UnaryOperationExpression	* ppctx		11032435	0					
ANR	11032497	UnaryOperator	*		11032435	0					
ANR	11032498	Identifier	ppctx		11032435	1					
ANR	11032499	PtrMemberAccess	( * ppctx ) -> table_next		11032435	1					
ANR	11032500	UnaryOperationExpression	* ppctx		11032435	0					
ANR	11032501	UnaryOperator	*		11032435	0					
ANR	11032502	Identifier	ppctx		11032435	1					
ANR	11032503	Identifier	table_next		11032435	1					
ANR	11032504	IfStatement	"if ( gs_debug_c ( '\\'' ) | gs_debug_c ( '""' ) )"		11032435	5					
ANR	11032505	Condition	"gs_debug_c ( '\\'' ) | gs_debug_c ( '""' )"	1258:8:39827:39860	11032435	0	True				
ANR	11032506	InclusiveOrExpression	"gs_debug_c ( '\\'' ) | gs_debug_c ( '""' )"		11032435	0		|			
ANR	11032507	CallExpression	gs_debug_c ( '\\'' )		11032435	0					
ANR	11032508	Callee	gs_debug_c		11032435	0					
ANR	11032509	Identifier	gs_debug_c		11032435	0					
ANR	11032510	ArgumentList	'\\''		11032435	1					
ANR	11032511	Argument	'\\''		11032435	0					
ANR	11032512	PrimaryExpression	'\\''		11032435	0					
ANR	11032513	CallExpression	"gs_debug_c ( '""' )"		11032435	1					
ANR	11032514	Callee	gs_debug_c		11032435	0					
ANR	11032515	Identifier	gs_debug_c		11032435	0					
ANR	11032516	ArgumentList	"'""'"		11032435	1					
ANR	11032517	Argument	"'""'"		11032435	0					
ANR	11032518	PrimaryExpression	"'""'"		11032435	0					
ANR	11032519	ExpressionStatement	"dmlprintf3 ( ( const gs_memory_t * ) mem , ""[']destroy %ld at 0x%lx, status = %d\\n"" , pctx -> index , ( ulong ) pctx , pctx -> status )"	1259:8:39871:40028	11032435	1	True				
ANR	11032520	CallExpression	"dmlprintf3 ( ( const gs_memory_t * ) mem , ""[']destroy %ld at 0x%lx, status = %d\\n"" , pctx -> index , ( ulong ) pctx , pctx -> status )"		11032435	0					
ANR	11032521	Callee	dmlprintf3		11032435	0					
ANR	11032522	Identifier	dmlprintf3		11032435	0					
ANR	11032523	ArgumentList	( const gs_memory_t * ) mem		11032435	1					
ANR	11032524	Argument	( const gs_memory_t * ) mem		11032435	0					
ANR	11032525	CastExpression	( const gs_memory_t * ) mem		11032435	0					
ANR	11032526	CastTarget	const gs_memory_t *		11032435	0					
ANR	11032527	Identifier	mem		11032435	1					
ANR	11032528	Argument	"""[']destroy %ld at 0x%lx, status = %d\\n"""		11032435	1					
ANR	11032529	PrimaryExpression	"""[']destroy %ld at 0x%lx, status = %d\\n"""		11032435	0					
ANR	11032530	Argument	pctx -> index		11032435	2					
ANR	11032531	PtrMemberAccess	pctx -> index		11032435	0					
ANR	11032532	Identifier	pctx		11032435	0					
ANR	11032533	Identifier	index		11032435	1					
ANR	11032534	Argument	( ulong ) pctx		11032435	3					
ANR	11032535	CastExpression	( ulong ) pctx		11032435	0					
ANR	11032536	CastTarget	ulong		11032435	0					
ANR	11032537	Identifier	pctx		11032435	1					
ANR	11032538	Argument	pctx -> status		11032435	4					
ANR	11032539	PtrMemberAccess	pctx -> status		11032435	0					
ANR	11032540	Identifier	pctx		11032435	0					
ANR	11032541	Identifier	status		11032435	1					
ANR	11032542	IfStatement	if ( ! context_state_free ( & pctx -> state ) )		11032435	6					
ANR	11032543	Condition	! context_state_free ( & pctx -> state )	1262:8:40038:40070	11032435	0	True				
ANR	11032544	UnaryOperationExpression	! context_state_free ( & pctx -> state )		11032435	0					
ANR	11032545	UnaryOperator	!		11032435	0					
ANR	11032546	CallExpression	context_state_free ( & pctx -> state )		11032435	1					
ANR	11032547	Callee	context_state_free		11032435	0					
ANR	11032548	Identifier	context_state_free		11032435	0					
ANR	11032549	ArgumentList	& pctx -> state		11032435	1					
ANR	11032550	Argument	& pctx -> state		11032435	0					
ANR	11032551	UnaryOperationExpression	& pctx -> state		11032435	0					
ANR	11032552	UnaryOperator	&		11032435	0					
ANR	11032553	PtrMemberAccess	pctx -> state		11032435	1					
ANR	11032554	Identifier	pctx		11032435	0					
ANR	11032555	Identifier	state		11032435	1					
ANR	11032556	ExpressionStatement	"gs_free_object ( ( gs_memory_t * ) mem , pctx , ""context_destroy"" )"	1263:8:40081:40141	11032435	1	True				
ANR	11032557	CallExpression	"gs_free_object ( ( gs_memory_t * ) mem , pctx , ""context_destroy"" )"		11032435	0					
ANR	11032558	Callee	gs_free_object		11032435	0					
ANR	11032559	Identifier	gs_free_object		11032435	0					
ANR	11032560	ArgumentList	( gs_memory_t * ) mem		11032435	1					
ANR	11032561	Argument	( gs_memory_t * ) mem		11032435	0					
ANR	11032562	CastExpression	( gs_memory_t * ) mem		11032435	0					
ANR	11032563	CastTarget	gs_memory_t *		11032435	0					
ANR	11032564	Identifier	mem		11032435	1					
ANR	11032565	Argument	pctx		11032435	1					
ANR	11032566	Identifier	pctx		11032435	0					
ANR	11032567	Argument	"""context_destroy"""		11032435	2					
ANR	11032568	PrimaryExpression	"""context_destroy"""		11032435	0					
ANR	11032569	ReturnType	static void		11032435	1					
ANR	11032570	Identifier	context_destroy		11032435	2					
ANR	11032571	ParameterList	gs_context_t * pctx		11032435	3					
ANR	11032572	Parameter	gs_context_t * pctx	1249:16:39516:39534	11032435	0	True				
ANR	11032573	ParameterType	gs_context_t *		11032435	0					
ANR	11032574	Identifier	pctx		11032435	1					
ANR	11032575	CFGEntryNode	ENTRY		11032435		True				
ANR	11032576	CFGExitNode	EXIT		11032435		True				
ANR	11032577	Symbol	pctx -> scheduler		11032435						
ANR	11032578	Symbol	pctx -> status		11032435						
ANR	11032579	Symbol	pctx		11032435						
ANR	11032580	Symbol	pctx -> index		11032435						
ANR	11032581	Symbol	* * ppctx		11032435						
ANR	11032582	Symbol	pctx -> state . memory		11032435						
ANR	11032583	Symbol	psched		11032435						
ANR	11032584	Symbol	* psched		11032435						
ANR	11032585	Symbol	psched -> table		11032435						
ANR	11032586	Symbol	& ( * ppctx ) -> table_next		11032435						
ANR	11032587	Symbol	( * ppctx ) -> table_next		11032435						
ANR	11032588	Symbol	* ppctx		11032435						
ANR	11032589	Symbol	* pctx		11032435						
ANR	11032590	Symbol	CTX_TABLE_SIZE		11032435						
ANR	11032591	Symbol	mem		11032435						
ANR	11032592	Symbol	pctx -> state		11032435						
ANR	11032593	Symbol	context_state_free		11032435						
ANR	11032594	Symbol	& pctx -> state		11032435						
ANR	11032595	Symbol	ppctx		11032435						
ANR	11032596	Symbol	gs_debug_c		11032435						
ANR	11032597	Symbol	pctx -> state . memory . space_local		11032435						
ANR	11032598	Function	stack_copy	1269:0:40313:40552							
ANR	11032599	FunctionDef	"stack_copy (ref_stack_t * to , const ref_stack_t * from , uint count , uint from_index)"		11032598	0					
ANR	11032600	CompoundStatement		1272:0:40420:40552	11032598	0					
ANR	11032601	IdentifierDeclStatement	long i ;	1273:4:40426:40432	11032598	0	True				
ANR	11032602	IdentifierDecl	i		11032598	0					
ANR	11032603	IdentifierDeclType	long		11032598	0					
ANR	11032604	Identifier	i		11032598	1					
ANR	11032605	ForStatement	for ( i = ( long ) count - 1 ; i >= 0 ; -- i )		11032598	1					
ANR	11032606	ForInit	i = ( long ) count - 1 ;	1275:9:40444:40463	11032598	0	True				
ANR	11032607	AssignmentExpression	i = ( long ) count - 1		11032598	0		=			
ANR	11032608	Identifier	i		11032598	0					
ANR	11032609	AdditiveExpression	( long ) count - 1		11032598	1		-			
ANR	11032610	CastExpression	( long ) count		11032598	0					
ANR	11032611	CastTarget	long		11032598	0					
ANR	11032612	Identifier	count		11032598	1					
ANR	11032613	PrimaryExpression	1		11032598	1					
ANR	11032614	Condition	i >= 0	1275:30:40465:40470	11032598	1	True				
ANR	11032615	RelationalExpression	i >= 0		11032598	0		>=			
ANR	11032616	Identifier	i		11032598	0					
ANR	11032617	PrimaryExpression	0		11032598	1					
ANR	11032618	UnaryExpression	-- i	1275:38:40473:40475	11032598	2	True				
ANR	11032619	IncDec	--		11032598	0					
ANR	11032620	Identifier	i		11032598	1					
ANR	11032621	ExpressionStatement	"* ref_stack_index ( to , i ) = * ref_stack_index ( from , i + from_index )"	1276:8:40486:40550	11032598	3	True				
ANR	11032622	AssignmentExpression	"* ref_stack_index ( to , i ) = * ref_stack_index ( from , i + from_index )"		11032598	0		=			
ANR	11032623	UnaryOperationExpression	"* ref_stack_index ( to , i )"		11032598	0					
ANR	11032624	UnaryOperator	*		11032598	0					
ANR	11032625	CallExpression	"ref_stack_index ( to , i )"		11032598	1					
ANR	11032626	Callee	ref_stack_index		11032598	0					
ANR	11032627	Identifier	ref_stack_index		11032598	0					
ANR	11032628	ArgumentList	to		11032598	1					
ANR	11032629	Argument	to		11032598	0					
ANR	11032630	Identifier	to		11032598	0					
ANR	11032631	Argument	i		11032598	1					
ANR	11032632	Identifier	i		11032598	0					
ANR	11032633	UnaryOperationExpression	"* ref_stack_index ( from , i + from_index )"		11032598	1					
ANR	11032634	UnaryOperator	*		11032598	0					
ANR	11032635	CallExpression	"ref_stack_index ( from , i + from_index )"		11032598	1					
ANR	11032636	Callee	ref_stack_index		11032598	0					
ANR	11032637	Identifier	ref_stack_index		11032598	0					
ANR	11032638	ArgumentList	from		11032598	1					
ANR	11032639	Argument	from		11032598	0					
ANR	11032640	Identifier	from		11032598	0					
ANR	11032641	Argument	i + from_index		11032598	1					
ANR	11032642	AdditiveExpression	i + from_index		11032598	0		+			
ANR	11032643	Identifier	i		11032598	0					
ANR	11032644	Identifier	from_index		11032598	1					
ANR	11032645	ReturnType	static void		11032598	1					
ANR	11032646	Identifier	stack_copy		11032598	2					
ANR	11032647	ParameterList	"ref_stack_t * to , const ref_stack_t * from , uint count , uint from_index"		11032598	3					
ANR	11032648	Parameter	ref_stack_t * to	1270:11:40336:40351	11032598	0	True				
ANR	11032649	ParameterType	ref_stack_t *		11032598	0					
ANR	11032650	Identifier	to		11032598	1					
ANR	11032651	Parameter	const ref_stack_t * from	1270:29:40354:40377	11032598	1	True				
ANR	11032652	ParameterType	const ref_stack_t *		11032598	0					
ANR	11032653	Identifier	from		11032598	1					
ANR	11032654	Parameter	uint count	1270:55:40380:40389	11032598	2	True				
ANR	11032655	ParameterType	uint		11032598	0					
ANR	11032656	Identifier	count		11032598	1					
ANR	11032657	Parameter	uint from_index	1271:11:40403:40417	11032598	3	True				
ANR	11032658	ParameterType	uint		11032598	0					
ANR	11032659	Identifier	from_index		11032598	1					
ANR	11032660	CFGEntryNode	ENTRY		11032598		True				
ANR	11032661	CFGExitNode	EXIT		11032598		True				
ANR	11032662	Symbol	from_index		11032598						
ANR	11032663	Symbol	* ref_stack_index		11032598						
ANR	11032664	Symbol	ref_stack_index		11032598						
ANR	11032665	Symbol	"* ref_stack_index ( from , i + from_index )"		11032598						
ANR	11032666	Symbol	"* ref_stack_index ( to , i )"		11032598						
ANR	11032667	Symbol	count		11032598						
ANR	11032668	Symbol	i		11032598						
ANR	11032669	Symbol	from		11032598						
ANR	11032670	Symbol	to		11032598						
ANR	11032671	Function	lock_acquire	1280:0:40621:40951							
ANR	11032672	FunctionDef	"lock_acquire (os_ptr op , gs_context_t * pctx)"		11032671	0					
ANR	11032673	CompoundStatement		1282:0:40677:40951	11032671	0					
ANR	11032674	IdentifierDeclStatement	"gs_lock_t * plock = r_ptr ( op , gs_lock_t ) ;"	1283:4:40683:40722	11032671	0	True				
ANR	11032675	IdentifierDecl	"* plock = r_ptr ( op , gs_lock_t )"		11032671	0					
ANR	11032676	IdentifierDeclType	gs_lock_t *		11032671	0					
ANR	11032677	Identifier	plock		11032671	1					
ANR	11032678	AssignmentExpression	"* plock = r_ptr ( op , gs_lock_t )"		11032671	2		=			
ANR	11032679	Identifier	plock		11032671	0					
ANR	11032680	CallExpression	"r_ptr ( op , gs_lock_t )"		11032671	1					
ANR	11032681	Callee	r_ptr		11032671	0					
ANR	11032682	Identifier	r_ptr		11032671	0					
ANR	11032683	ArgumentList	op		11032671	1					
ANR	11032684	Argument	op		11032671	0					
ANR	11032685	Identifier	op		11032671	0					
ANR	11032686	Argument	gs_lock_t		11032671	1					
ANR	11032687	Identifier	gs_lock_t		11032671	0					
ANR	11032688	IfStatement	if ( plock -> holder_index == 0 )		11032671	1					
ANR	11032689	Condition	plock -> holder_index == 0	1285:8:40733:40756	11032671	0	True				
ANR	11032690	EqualityExpression	plock -> holder_index == 0		11032671	0		==			
ANR	11032691	PtrMemberAccess	plock -> holder_index		11032671	0					
ANR	11032692	Identifier	plock		11032671	0					
ANR	11032693	Identifier	holder_index		11032671	1					
ANR	11032694	PrimaryExpression	0		11032671	1					
ANR	11032695	CompoundStatement		4:34:81:81	11032671	1					
ANR	11032696	ExpressionStatement	plock -> holder_index = pctx -> index	1286:8:40769:40802	11032671	0	True				
ANR	11032697	AssignmentExpression	plock -> holder_index = pctx -> index		11032671	0		=			
ANR	11032698	PtrMemberAccess	plock -> holder_index		11032671	0					
ANR	11032699	Identifier	plock		11032671	0					
ANR	11032700	Identifier	holder_index		11032671	1					
ANR	11032701	PtrMemberAccess	pctx -> index		11032671	1					
ANR	11032702	Identifier	pctx		11032671	0					
ANR	11032703	Identifier	index		11032671	1					
ANR	11032704	ExpressionStatement	plock -> scheduler = pctx -> scheduler	1287:8:40812:40846	11032671	1	True				
ANR	11032705	AssignmentExpression	plock -> scheduler = pctx -> scheduler		11032671	0		=			
ANR	11032706	PtrMemberAccess	plock -> scheduler		11032671	0					
ANR	11032707	Identifier	plock		11032671	0					
ANR	11032708	Identifier	scheduler		11032671	1					
ANR	11032709	PtrMemberAccess	pctx -> scheduler		11032671	1					
ANR	11032710	Identifier	pctx		11032671	0					
ANR	11032711	Identifier	scheduler		11032671	1					
ANR	11032712	ReturnStatement	return 0 ;	1288:8:40856:40864	11032671	2	True				
ANR	11032713	PrimaryExpression	0		11032671	0					
ANR	11032714	ExpressionStatement	"add_last ( pctx -> scheduler , & plock -> waiting , pctx )"	1290:4:40876:40924	11032671	2	True				
ANR	11032715	CallExpression	"add_last ( pctx -> scheduler , & plock -> waiting , pctx )"		11032671	0					
ANR	11032716	Callee	add_last		11032671	0					
ANR	11032717	Identifier	add_last		11032671	0					
ANR	11032718	ArgumentList	pctx -> scheduler		11032671	1					
ANR	11032719	Argument	pctx -> scheduler		11032671	0					
ANR	11032720	PtrMemberAccess	pctx -> scheduler		11032671	0					
ANR	11032721	Identifier	pctx		11032671	0					
ANR	11032722	Identifier	scheduler		11032671	1					
ANR	11032723	Argument	& plock -> waiting		11032671	1					
ANR	11032724	UnaryOperationExpression	& plock -> waiting		11032671	0					
ANR	11032725	UnaryOperator	&		11032671	0					
ANR	11032726	PtrMemberAccess	plock -> waiting		11032671	1					
ANR	11032727	Identifier	plock		11032671	0					
ANR	11032728	Identifier	waiting		11032671	1					
ANR	11032729	Argument	pctx		11032671	2					
ANR	11032730	Identifier	pctx		11032671	0					
ANR	11032731	ReturnStatement	return o_reschedule ;	1291:4:40930:40949	11032671	3	True				
ANR	11032732	Identifier	o_reschedule		11032671	0					
ANR	11032733	ReturnType	static int		11032671	1					
ANR	11032734	Identifier	lock_acquire		11032671	2					
ANR	11032735	ParameterList	"os_ptr op , gs_context_t * pctx"		11032671	3					
ANR	11032736	Parameter	os_ptr op	1281:13:40645:40653	11032671	0	True				
ANR	11032737	ParameterType	os_ptr		11032671	0					
ANR	11032738	Identifier	op		11032671	1					
ANR	11032739	Parameter	gs_context_t * pctx	1281:24:40656:40674	11032671	1	True				
ANR	11032740	ParameterType	gs_context_t *		11032671	0					
ANR	11032741	Identifier	pctx		11032671	1					
ANR	11032742	CFGEntryNode	ENTRY		11032671		True				
ANR	11032743	CFGExitNode	EXIT		11032671		True				
ANR	11032744	Symbol	op		11032671						
ANR	11032745	Symbol	pctx -> scheduler		11032671						
ANR	11032746	Symbol	& plock -> waiting		11032671						
ANR	11032747	Symbol	pctx		11032671						
ANR	11032748	Symbol	pctx -> index		11032671						
ANR	11032749	Symbol	gs_lock_t		11032671						
ANR	11032750	Symbol	o_reschedule		11032671						
ANR	11032751	Symbol	plock		11032671						
ANR	11032752	Symbol	plock -> holder_index		11032671						
ANR	11032753	Symbol	* pctx		11032671						
ANR	11032754	Symbol	plock -> scheduler		11032671						
ANR	11032755	Symbol	r_ptr		11032671						
ANR	11032756	Symbol	* plock		11032671						
ANR	11032757	Function	lock_release	1295:0:41025:41422							
ANR	11032758	FunctionDef	lock_release (ref * op)		11032757	0					
ANR	11032759	CompoundStatement		1297:0:41059:41422	11032757	0					
ANR	11032760	IdentifierDeclStatement	"gs_lock_t * plock = r_ptr ( op , gs_lock_t ) ;"	1298:4:41065:41104	11032757	0	True				
ANR	11032761	IdentifierDecl	"* plock = r_ptr ( op , gs_lock_t )"		11032757	0					
ANR	11032762	IdentifierDeclType	gs_lock_t *		11032757	0					
ANR	11032763	Identifier	plock		11032757	1					
ANR	11032764	AssignmentExpression	"* plock = r_ptr ( op , gs_lock_t )"		11032757	2		=			
ANR	11032765	Identifier	plock		11032757	0					
ANR	11032766	CallExpression	"r_ptr ( op , gs_lock_t )"		11032757	1					
ANR	11032767	Callee	r_ptr		11032757	0					
ANR	11032768	Identifier	r_ptr		11032757	0					
ANR	11032769	ArgumentList	op		11032757	1					
ANR	11032770	Argument	op		11032757	0					
ANR	11032771	Identifier	op		11032757	0					
ANR	11032772	Argument	gs_lock_t		11032757	1					
ANR	11032773	Identifier	gs_lock_t		11032757	0					
ANR	11032774	IdentifierDeclStatement	gs_scheduler_t * psched = plock -> scheduler ;	1299:4:41110:41151	11032757	1	True				
ANR	11032775	IdentifierDecl	* psched = plock -> scheduler		11032757	0					
ANR	11032776	IdentifierDeclType	gs_scheduler_t *		11032757	0					
ANR	11032777	Identifier	psched		11032757	1					
ANR	11032778	AssignmentExpression	* psched = plock -> scheduler		11032757	2		=			
ANR	11032779	Identifier	psched		11032757	0					
ANR	11032780	PtrMemberAccess	plock -> scheduler		11032757	1					
ANR	11032781	Identifier	plock		11032757	0					
ANR	11032782	Identifier	scheduler		11032757	1					
ANR	11032783	IdentifierDeclStatement	"gs_context_t * pctx = index_context ( psched , plock -> holder_index ) ;"	1300:4:41157:41220	11032757	2	True				
ANR	11032784	IdentifierDecl	"* pctx = index_context ( psched , plock -> holder_index )"		11032757	0					
ANR	11032785	IdentifierDeclType	gs_context_t *		11032757	0					
ANR	11032786	Identifier	pctx		11032757	1					
ANR	11032787	AssignmentExpression	"* pctx = index_context ( psched , plock -> holder_index )"		11032757	2		=			
ANR	11032788	Identifier	pctx		11032757	0					
ANR	11032789	CallExpression	"index_context ( psched , plock -> holder_index )"		11032757	1					
ANR	11032790	Callee	index_context		11032757	0					
ANR	11032791	Identifier	index_context		11032757	0					
ANR	11032792	ArgumentList	psched		11032757	1					
ANR	11032793	Argument	psched		11032757	0					
ANR	11032794	Identifier	psched		11032757	0					
ANR	11032795	Argument	plock -> holder_index		11032757	1					
ANR	11032796	PtrMemberAccess	plock -> holder_index		11032757	0					
ANR	11032797	Identifier	plock		11032757	0					
ANR	11032798	Identifier	holder_index		11032757	1					
ANR	11032799	IfStatement	if ( pctx != 0 && pctx == psched -> current )		11032757	3					
ANR	11032800	Condition	pctx != 0 && pctx == psched -> current	1302:8:41231:41266	11032757	0	True				
ANR	11032801	AndExpression	pctx != 0 && pctx == psched -> current		11032757	0		&&			
ANR	11032802	EqualityExpression	pctx != 0		11032757	0		!=			
ANR	11032803	Identifier	pctx		11032757	0					
ANR	11032804	PrimaryExpression	0		11032757	1					
ANR	11032805	EqualityExpression	pctx == psched -> current		11032757	1		==			
ANR	11032806	Identifier	pctx		11032757	0					
ANR	11032807	PtrMemberAccess	psched -> current		11032757	1					
ANR	11032808	Identifier	psched		11032757	0					
ANR	11032809	Identifier	current		11032757	1					
ANR	11032810	CompoundStatement		6:46:209:209	11032757	1					
ANR	11032811	ExpressionStatement	plock -> holder_index = 0	1303:8:41279:41302	11032757	0	True				
ANR	11032812	AssignmentExpression	plock -> holder_index = 0		11032757	0		=			
ANR	11032813	PtrMemberAccess	plock -> holder_index		11032757	0					
ANR	11032814	Identifier	plock		11032757	0					
ANR	11032815	Identifier	holder_index		11032757	1					
ANR	11032816	PrimaryExpression	0		11032757	1					
ANR	11032817	ExpressionStatement	"activate_waiting ( psched , & plock -> waiting )"	1304:8:41312:41353	11032757	1	True				
ANR	11032818	CallExpression	"activate_waiting ( psched , & plock -> waiting )"		11032757	0					
ANR	11032819	Callee	activate_waiting		11032757	0					
ANR	11032820	Identifier	activate_waiting		11032757	0					
ANR	11032821	ArgumentList	psched		11032757	1					
ANR	11032822	Argument	psched		11032757	0					
ANR	11032823	Identifier	psched		11032757	0					
ANR	11032824	Argument	& plock -> waiting		11032757	1					
ANR	11032825	UnaryOperationExpression	& plock -> waiting		11032757	0					
ANR	11032826	UnaryOperator	&		11032757	0					
ANR	11032827	PtrMemberAccess	plock -> waiting		11032757	1					
ANR	11032828	Identifier	plock		11032757	0					
ANR	11032829	Identifier	waiting		11032757	1					
ANR	11032830	ReturnStatement	return 0 ;	1305:8:41363:41371	11032757	2	True				
ANR	11032831	PrimaryExpression	0		11032757	0					
ANR	11032832	ExpressionStatement	return_error ( gs_error_invalidcontext )	1307:4:41383:41420	11032757	4	True				
ANR	11032833	CallExpression	return_error ( gs_error_invalidcontext )		11032757	0					
ANR	11032834	Callee	return_error		11032757	0					
ANR	11032835	Identifier	return_error		11032757	0					
ANR	11032836	ArgumentList	gs_error_invalidcontext		11032757	1					
ANR	11032837	Argument	gs_error_invalidcontext		11032757	0					
ANR	11032838	Identifier	gs_error_invalidcontext		11032757	0					
ANR	11032839	ReturnType	static int		11032757	1					
ANR	11032840	Identifier	lock_release		11032757	2					
ANR	11032841	ParameterList	ref * op		11032757	3					
ANR	11032842	Parameter	ref * op	1296:13:41049:41056	11032757	0	True				
ANR	11032843	ParameterType	ref *		11032757	0					
ANR	11032844	Identifier	op		11032757	1					
ANR	11032845	CFGEntryNode	ENTRY		11032757		True				
ANR	11032846	CFGExitNode	EXIT		11032757		True				
ANR	11032847	Symbol	op		11032757						
ANR	11032848	Symbol	& plock -> waiting		11032757						
ANR	11032849	Symbol	pctx		11032757						
ANR	11032850	Symbol	gs_lock_t		11032757						
ANR	11032851	Symbol	plock		11032757						
ANR	11032852	Symbol	psched		11032757						
ANR	11032853	Symbol	psched -> current		11032757						
ANR	11032854	Symbol	* psched		11032757						
ANR	11032855	Symbol	plock -> holder_index		11032757						
ANR	11032856	Symbol	gs_error_invalidcontext		11032757						
ANR	11032857	Symbol	plock -> scheduler		11032757						
ANR	11032858	Symbol	r_ptr		11032757						
ANR	11032859	Symbol	* plock		11032757						
ANR	11032860	Symbol	index_context		11032757						
ANR	11032861	DeclStmt									
ANR	11032862	Decl							const op_def	const op_def [ ]	zcontext1_op_defs
ANR	11032863	DeclStmt									
ANR	11032864	Decl							const op_def	const op_def [ ]	zcontext2_op_defs
