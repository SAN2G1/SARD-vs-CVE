command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7502492	File	data/converged/CVE-2018-16863_ghostpdl/memcheck.c								
ANR	7502493	ClassDef	allocation_entry	43:8:1886:2046							
ANR	7502494	DeclStmt									
ANR	7502495	Decl							struct allocation_entry	struct allocation_entry *	next
ANR	7502496	DeclStmt									
ANR	7502497	Decl							struct allocation_entry	struct allocation_entry *	prev
ANR	7502498	DeclStmt									
ANR	7502499	Decl							void	void *	allocation
ANR	7502500	DeclStmt									
ANR	7502501	Decl							size_t	size_t	num_bytes
ANR	7502502	DeclStmt									
ANR	7502503	Decl							allocation_entry	allocation_entry	AllocationEntry
ANR	7502504	DeclStmt									
ANR	7502505	Decl							AllocationEntry	AllocationEntry *	alloc_head
ANR	7502506	DeclStmt									
ANR	7502507	Decl							AllocationEntry	AllocationEntry *	alloc_tail
ANR	7502508	DeclStmt									
ANR	7502509	Decl							AllocationEntry	AllocationEntry * ( void * ptr )	find_allocation
ANR	7502510	Function	tracking_malloc	57:0:2239:2894							
ANR	7502511	FunctionDef	tracking_malloc (size_t size)		7502510	0					
ANR	7502512	CompoundStatement		59:0:2275:2894	7502510	0					
ANR	7502513	IdentifierDeclStatement	AllocationEntry * entry = malloc ( sizeof ( AllocationEntry ) ) ;	60:4:2281:2337	7502510	0	True				
ANR	7502514	IdentifierDecl	* entry = malloc ( sizeof ( AllocationEntry ) )		7502510	0					
ANR	7502515	IdentifierDeclType	AllocationEntry *		7502510	0					
ANR	7502516	Identifier	entry		7502510	1					
ANR	7502517	AssignmentExpression	* entry = malloc ( sizeof ( AllocationEntry ) )		7502510	2		=			
ANR	7502518	Identifier	entry		7502510	0					
ANR	7502519	CallExpression	malloc ( sizeof ( AllocationEntry ) )		7502510	1					
ANR	7502520	Callee	malloc		7502510	0					
ANR	7502521	Identifier	malloc		7502510	0					
ANR	7502522	ArgumentList	sizeof ( AllocationEntry )		7502510	1					
ANR	7502523	Argument	sizeof ( AllocationEntry )		7502510	0					
ANR	7502524	SizeofExpression	sizeof ( AllocationEntry )		7502510	0					
ANR	7502525	Sizeof	sizeof		7502510	0					
ANR	7502526	SizeofOperand	AllocationEntry		7502510	1					
ANR	7502527	IfStatement	if ( entry == NULL )		7502510	1					
ANR	7502528	Condition	entry == NULL	62:8:2348:2360	7502510	0	True				
ANR	7502529	EqualityExpression	entry == NULL		7502510	0		==			
ANR	7502530	Identifier	entry		7502510	0					
ANR	7502531	Identifier	NULL		7502510	1					
ANR	7502532	CompoundStatement		4:23:87:87	7502510	1					
ANR	7502533	ExpressionStatement	"printf ( ""Allocator failure\\n"" )"	63:8:2373:2402	7502510	0	True				
ANR	7502534	CallExpression	"printf ( ""Allocator failure\\n"" )"		7502510	0					
ANR	7502535	Callee	printf		7502510	0					
ANR	7502536	Identifier	printf		7502510	0					
ANR	7502537	ArgumentList	"""Allocator failure\\n"""		7502510	1					
ANR	7502538	Argument	"""Allocator failure\\n"""		7502510	0					
ANR	7502539	PrimaryExpression	"""Allocator failure\\n"""		7502510	0					
ANR	7502540	ReturnStatement	return NULL ;	64:8:2412:2423	7502510	1	True				
ANR	7502541	Identifier	NULL		7502510	0					
ANR	7502542	ExpressionStatement	entry -> num_bytes = size	66:4:2435:2458	7502510	2	True				
ANR	7502543	AssignmentExpression	entry -> num_bytes = size		7502510	0		=			
ANR	7502544	PtrMemberAccess	entry -> num_bytes		7502510	0					
ANR	7502545	Identifier	entry		7502510	0					
ANR	7502546	Identifier	num_bytes		7502510	1					
ANR	7502547	Identifier	size		7502510	1					
ANR	7502548	ExpressionStatement	entry -> allocation = malloc ( size )	67:4:2464:2496	7502510	3	True				
ANR	7502549	AssignmentExpression	entry -> allocation = malloc ( size )		7502510	0		=			
ANR	7502550	PtrMemberAccess	entry -> allocation		7502510	0					
ANR	7502551	Identifier	entry		7502510	0					
ANR	7502552	Identifier	allocation		7502510	1					
ANR	7502553	CallExpression	malloc ( size )		7502510	1					
ANR	7502554	Callee	malloc		7502510	0					
ANR	7502555	Identifier	malloc		7502510	0					
ANR	7502556	ArgumentList	size		7502510	1					
ANR	7502557	Argument	size		7502510	0					
ANR	7502558	Identifier	size		7502510	0					
ANR	7502559	IfStatement	if ( entry -> allocation == NULL )		7502510	4					
ANR	7502560	Condition	entry -> allocation == NULL	68:8:2506:2530	7502510	0	True				
ANR	7502561	EqualityExpression	entry -> allocation == NULL		7502510	0		==			
ANR	7502562	PtrMemberAccess	entry -> allocation		7502510	0					
ANR	7502563	Identifier	entry		7502510	0					
ANR	7502564	Identifier	allocation		7502510	1					
ANR	7502565	Identifier	NULL		7502510	1					
ANR	7502566	CompoundStatement		10:35:257:257	7502510	1					
ANR	7502567	ExpressionStatement	free ( entry )	69:8:2543:2554	7502510	0	True				
ANR	7502568	CallExpression	free ( entry )		7502510	0					
ANR	7502569	Callee	free		7502510	0					
ANR	7502570	Identifier	free		7502510	0					
ANR	7502571	ArgumentList	entry		7502510	1					
ANR	7502572	Argument	entry		7502510	0					
ANR	7502573	Identifier	entry		7502510	0					
ANR	7502574	ReturnStatement	return NULL ;	70:8:2564:2575	7502510	1	True				
ANR	7502575	Identifier	NULL		7502510	0					
ANR	7502576	ExpressionStatement	entry -> next = NULL	72:4:2587:2605	7502510	5	True				
ANR	7502577	AssignmentExpression	entry -> next = NULL		7502510	0		=			
ANR	7502578	PtrMemberAccess	entry -> next		7502510	0					
ANR	7502579	Identifier	entry		7502510	0					
ANR	7502580	Identifier	next		7502510	1					
ANR	7502581	Identifier	NULL		7502510	1					
ANR	7502582	IfStatement	if ( alloc_head == NULL )		7502510	6					
ANR	7502583	Condition	alloc_head == NULL	75:8:2657:2674	7502510	0	True				
ANR	7502584	EqualityExpression	alloc_head == NULL		7502510	0		==			
ANR	7502585	Identifier	alloc_head		7502510	0					
ANR	7502586	Identifier	NULL		7502510	1					
ANR	7502587	CompoundStatement		17:28:401:401	7502510	1					
ANR	7502588	ExpressionStatement	entry -> prev = NULL	76:8:2687:2705	7502510	0	True				
ANR	7502589	AssignmentExpression	entry -> prev = NULL		7502510	0		=			
ANR	7502590	PtrMemberAccess	entry -> prev		7502510	0					
ANR	7502591	Identifier	entry		7502510	0					
ANR	7502592	Identifier	prev		7502510	1					
ANR	7502593	Identifier	NULL		7502510	1					
ANR	7502594	ExpressionStatement	alloc_head = alloc_tail = entry	77:8:2715:2746	7502510	1	True				
ANR	7502595	AssignmentExpression	alloc_head = alloc_tail = entry		7502510	0		=			
ANR	7502596	Identifier	alloc_head		7502510	0					
ANR	7502597	AssignmentExpression	alloc_tail = entry		7502510	1		=			
ANR	7502598	Identifier	alloc_tail		7502510	0					
ANR	7502599	Identifier	entry		7502510	1					
ANR	7502600	ElseStatement	else		7502510	0					
ANR	7502601	CompoundStatement		20:11:483:483	7502510	0					
ANR	7502602	ExpressionStatement	entry -> prev = alloc_tail	79:8:2769:2793	7502510	0	True				
ANR	7502603	AssignmentExpression	entry -> prev = alloc_tail		7502510	0		=			
ANR	7502604	PtrMemberAccess	entry -> prev		7502510	0					
ANR	7502605	Identifier	entry		7502510	0					
ANR	7502606	Identifier	prev		7502510	1					
ANR	7502607	Identifier	alloc_tail		7502510	1					
ANR	7502608	ExpressionStatement	alloc_tail -> next = entry	80:8:2803:2827	7502510	1	True				
ANR	7502609	AssignmentExpression	alloc_tail -> next = entry		7502510	0		=			
ANR	7502610	PtrMemberAccess	alloc_tail -> next		7502510	0					
ANR	7502611	Identifier	alloc_tail		7502510	0					
ANR	7502612	Identifier	next		7502510	1					
ANR	7502613	Identifier	entry		7502510	1					
ANR	7502614	ExpressionStatement	alloc_tail = entry	81:8:2837:2855	7502510	2	True				
ANR	7502615	AssignmentExpression	alloc_tail = entry		7502510	0		=			
ANR	7502616	Identifier	alloc_tail		7502510	0					
ANR	7502617	Identifier	entry		7502510	1					
ANR	7502618	ReturnStatement	return entry -> allocation ;	84:4:2868:2892	7502510	7	True				
ANR	7502619	PtrMemberAccess	entry -> allocation		7502510	0					
ANR	7502620	Identifier	entry		7502510	0					
ANR	7502621	Identifier	allocation		7502510	1					
ANR	7502622	ReturnType	void *		7502510	1					
ANR	7502623	Identifier	tracking_malloc		7502510	2					
ANR	7502624	ParameterList	size_t size		7502510	3					
ANR	7502625	Parameter	size_t size	58:16:2262:2272	7502510	0	True				
ANR	7502626	ParameterType	size_t		7502510	0					
ANR	7502627	Identifier	size		7502510	1					
ANR	7502628	CFGEntryNode	ENTRY		7502510		True				
ANR	7502629	CFGExitNode	EXIT		7502510		True				
ANR	7502630	Symbol	malloc		7502510						
ANR	7502631	Symbol	entry -> next		7502510						
ANR	7502632	Symbol	entry -> prev		7502510						
ANR	7502633	Symbol	NULL		7502510						
ANR	7502634	Symbol	alloc_head		7502510						
ANR	7502635	Symbol	entry -> allocation		7502510						
ANR	7502636	Symbol	entry		7502510						
ANR	7502637	Symbol	* alloc_tail		7502510						
ANR	7502638	Symbol	size		7502510						
ANR	7502639	Symbol	alloc_tail -> next		7502510						
ANR	7502640	Symbol	alloc_tail		7502510						
ANR	7502641	Symbol	entry -> num_bytes		7502510						
ANR	7502642	Symbol	* entry		7502510						
ANR	7502643	Function	find_allocation	87:0:2897:3146							
ANR	7502644	FunctionDef	find_allocation (void * ptr)		7502643	0					
ANR	7502645	CompoundStatement		89:0:2949:3146	7502643	0					
ANR	7502646	IdentifierDeclStatement	AllocationEntry * entry ;	90:4:2955:2977	7502643	0	True				
ANR	7502647	IdentifierDecl	* entry		7502643	0					
ANR	7502648	IdentifierDeclType	AllocationEntry *		7502643	0					
ANR	7502649	Identifier	entry		7502643	1					
ANR	7502650	ForStatement	for ( entry = alloc_head ; entry != NULL ; entry = entry -> next )		7502643	1					
ANR	7502651	ForInit	entry = alloc_head ;	92:9:2989:3007	7502643	0	True				
ANR	7502652	AssignmentExpression	entry = alloc_head		7502643	0		=			
ANR	7502653	Identifier	entry		7502643	0					
ANR	7502654	Identifier	alloc_head		7502643	1					
ANR	7502655	Condition	entry != NULL	92:29:3009:3021	7502643	1	True				
ANR	7502656	EqualityExpression	entry != NULL		7502643	0		!=			
ANR	7502657	Identifier	entry		7502643	0					
ANR	7502658	Identifier	NULL		7502643	1					
ANR	7502659	AssignmentExpression	entry = entry -> next	92:44:3024:3042	7502643	2	True	=			
ANR	7502660	Identifier	entry		7502643	0					
ANR	7502661	PtrMemberAccess	entry -> next		7502643	1					
ANR	7502662	Identifier	entry		7502643	0					
ANR	7502663	Identifier	next		7502643	1					
ANR	7502664	CompoundStatement		4:65:95:95	7502643	3					
ANR	7502665	IfStatement	if ( entry -> allocation == ptr )		7502643	0					
ANR	7502666	Condition	entry -> allocation == ptr	93:12:3059:3082	7502643	0	True				
ANR	7502667	EqualityExpression	entry -> allocation == ptr		7502643	0		==			
ANR	7502668	PtrMemberAccess	entry -> allocation		7502643	0					
ANR	7502669	Identifier	entry		7502643	0					
ANR	7502670	Identifier	allocation		7502643	1					
ANR	7502671	Identifier	ptr		7502643	1					
ANR	7502672	CompoundStatement		5:38:135:135	7502643	1					
ANR	7502673	ReturnStatement	return entry ;	94:12:3099:3111	7502643	0	True				
ANR	7502674	Identifier	entry		7502643	0					
ANR	7502675	ReturnStatement	return NULL ;	97:4:3133:3144	7502643	2	True				
ANR	7502676	Identifier	NULL		7502643	0					
ANR	7502677	ReturnType	static AllocationEntry *		7502643	1					
ANR	7502678	Identifier	find_allocation		7502643	2					
ANR	7502679	ParameterList	void * ptr		7502643	3					
ANR	7502680	Parameter	void * ptr	88:16:2938:2946	7502643	0	True				
ANR	7502681	ParameterType	void *		7502643	0					
ANR	7502682	Identifier	ptr		7502643	1					
ANR	7502683	CFGEntryNode	ENTRY		7502643		True				
ANR	7502684	CFGExitNode	EXIT		7502643		True				
ANR	7502685	Symbol	entry		7502643						
ANR	7502686	Symbol	entry -> next		7502643						
ANR	7502687	Symbol	NULL		7502643						
ANR	7502688	Symbol	alloc_head		7502643						
ANR	7502689	Symbol	entry -> allocation		7502643						
ANR	7502690	Symbol	ptr		7502643						
ANR	7502691	Symbol	* entry		7502643						
ANR	7502692	Function	tracking_free	101:0:3203:3857							
ANR	7502693	FunctionDef	tracking_free (void * ptr)		7502692	0					
ANR	7502694	CompoundStatement		103:0:3233:3857	7502692	0					
ANR	7502695	IdentifierDeclStatement	AllocationEntry * entry ;	104:4:3239:3261	7502692	0	True				
ANR	7502696	IdentifierDecl	* entry		7502692	0					
ANR	7502697	IdentifierDeclType	AllocationEntry *		7502692	0					
ANR	7502698	Identifier	entry		7502692	1					
ANR	7502699	IfStatement	if ( ptr == NULL )		7502692	1					
ANR	7502700	Condition	ptr == NULL	106:8:3272:3282	7502692	0	True				
ANR	7502701	EqualityExpression	ptr == NULL		7502692	0		==			
ANR	7502702	Identifier	ptr		7502692	0					
ANR	7502703	Identifier	NULL		7502692	1					
ANR	7502704	CompoundStatement		4:21:51:51	7502692	1					
ANR	7502705	ReturnStatement	return ;	108:8:3342:3348	7502692	0	True				
ANR	7502706	ExpressionStatement	entry = find_allocation ( ptr )	111:4:3361:3389	7502692	2	True				
ANR	7502707	AssignmentExpression	entry = find_allocation ( ptr )		7502692	0		=			
ANR	7502708	Identifier	entry		7502692	0					
ANR	7502709	CallExpression	find_allocation ( ptr )		7502692	1					
ANR	7502710	Callee	find_allocation		7502692	0					
ANR	7502711	Identifier	find_allocation		7502692	0					
ANR	7502712	ArgumentList	ptr		7502692	1					
ANR	7502713	Argument	ptr		7502692	0					
ANR	7502714	Identifier	ptr		7502692	0					
ANR	7502715	IfStatement	if ( entry != NULL )		7502692	3					
ANR	7502716	Condition	entry != NULL	112:8:3399:3411	7502692	0	True				
ANR	7502717	EqualityExpression	entry != NULL		7502692	0		!=			
ANR	7502718	Identifier	entry		7502692	0					
ANR	7502719	Identifier	NULL		7502692	1					
ANR	7502720	CompoundStatement		10:23:180:180	7502692	1					
ANR	7502721	IfStatement	if ( entry -> prev != NULL )		7502692	0					
ANR	7502722	Condition	entry -> prev != NULL	114:12:3486:3504	7502692	0	True				
ANR	7502723	EqualityExpression	entry -> prev != NULL		7502692	0		!=			
ANR	7502724	PtrMemberAccess	entry -> prev		7502692	0					
ANR	7502725	Identifier	entry		7502692	0					
ANR	7502726	Identifier	prev		7502692	1					
ANR	7502727	Identifier	NULL		7502692	1					
ANR	7502728	ExpressionStatement	entry -> prev -> next = entry -> next	115:12:3519:3550	7502692	1	True				
ANR	7502729	AssignmentExpression	entry -> prev -> next = entry -> next		7502692	0		=			
ANR	7502730	PtrMemberAccess	entry -> prev -> next		7502692	0					
ANR	7502731	PtrMemberAccess	entry -> prev		7502692	0					
ANR	7502732	Identifier	entry		7502692	0					
ANR	7502733	Identifier	prev		7502692	1					
ANR	7502734	Identifier	next		7502692	1					
ANR	7502735	PtrMemberAccess	entry -> next		7502692	1					
ANR	7502736	Identifier	entry		7502692	0					
ANR	7502737	Identifier	next		7502692	1					
ANR	7502738	ElseStatement	else		7502692	0					
ANR	7502739	ExpressionStatement	alloc_head = entry -> next	117:12:3577:3601	7502692	0	True				
ANR	7502740	AssignmentExpression	alloc_head = entry -> next		7502692	0		=			
ANR	7502741	Identifier	alloc_head		7502692	0					
ANR	7502742	PtrMemberAccess	entry -> next		7502692	1					
ANR	7502743	Identifier	entry		7502692	0					
ANR	7502744	Identifier	next		7502692	1					
ANR	7502745	IfStatement	if ( entry -> next != NULL )		7502692	1					
ANR	7502746	Condition	entry -> next != NULL	118:12:3615:3633	7502692	0	True				
ANR	7502747	EqualityExpression	entry -> next != NULL		7502692	0		!=			
ANR	7502748	PtrMemberAccess	entry -> next		7502692	0					
ANR	7502749	Identifier	entry		7502692	0					
ANR	7502750	Identifier	next		7502692	1					
ANR	7502751	Identifier	NULL		7502692	1					
ANR	7502752	ExpressionStatement	entry -> next -> prev = entry -> prev	119:12:3648:3679	7502692	1	True				
ANR	7502753	AssignmentExpression	entry -> next -> prev = entry -> prev		7502692	0		=			
ANR	7502754	PtrMemberAccess	entry -> next -> prev		7502692	0					
ANR	7502755	PtrMemberAccess	entry -> next		7502692	0					
ANR	7502756	Identifier	entry		7502692	0					
ANR	7502757	Identifier	next		7502692	1					
ANR	7502758	Identifier	prev		7502692	1					
ANR	7502759	PtrMemberAccess	entry -> prev		7502692	1					
ANR	7502760	Identifier	entry		7502692	0					
ANR	7502761	Identifier	prev		7502692	1					
ANR	7502762	ElseStatement	else		7502692	0					
ANR	7502763	ExpressionStatement	alloc_tail = entry -> next	121:12:3706:3730	7502692	0	True				
ANR	7502764	AssignmentExpression	alloc_tail = entry -> next		7502692	0		=			
ANR	7502765	Identifier	alloc_tail		7502692	0					
ANR	7502766	PtrMemberAccess	entry -> next		7502692	1					
ANR	7502767	Identifier	entry		7502692	0					
ANR	7502768	Identifier	next		7502692	1					
ANR	7502769	ExpressionStatement	free ( entry )	122:8:3740:3751	7502692	2	True				
ANR	7502770	CallExpression	free ( entry )		7502692	0					
ANR	7502771	Callee	free		7502692	0					
ANR	7502772	Identifier	free		7502692	0					
ANR	7502773	ArgumentList	entry		7502692	1					
ANR	7502774	Argument	entry		7502692	0					
ANR	7502775	Identifier	entry		7502692	0					
ANR	7502776	ElseStatement	else		7502692	0					
ANR	7502777	CompoundStatement		21:11:530:530	7502692	0					
ANR	7502778	ExpressionStatement	"printf ( ""Attempting to free unallocated memory at %p\\n"" , ptr )"	124:8:3774:3834	7502692	0	True				
ANR	7502779	CallExpression	"printf ( ""Attempting to free unallocated memory at %p\\n"" , ptr )"		7502692	0					
ANR	7502780	Callee	printf		7502692	0					
ANR	7502781	Identifier	printf		7502692	0					
ANR	7502782	ArgumentList	"""Attempting to free unallocated memory at %p\\n"""		7502692	1					
ANR	7502783	Argument	"""Attempting to free unallocated memory at %p\\n"""		7502692	0					
ANR	7502784	PrimaryExpression	"""Attempting to free unallocated memory at %p\\n"""		7502692	0					
ANR	7502785	Argument	ptr		7502692	1					
ANR	7502786	Identifier	ptr		7502692	0					
ANR	7502787	ExpressionStatement	free ( ptr )	126:4:3846:3855	7502692	4	True				
ANR	7502788	CallExpression	free ( ptr )		7502692	0					
ANR	7502789	Callee	free		7502692	0					
ANR	7502790	Identifier	free		7502692	0					
ANR	7502791	ArgumentList	ptr		7502692	1					
ANR	7502792	Argument	ptr		7502692	0					
ANR	7502793	Identifier	ptr		7502692	0					
ANR	7502794	ReturnType	void		7502692	1					
ANR	7502795	Identifier	tracking_free		7502692	2					
ANR	7502796	ParameterList	void * ptr		7502692	3					
ANR	7502797	Parameter	void * ptr	102:14:3222:3230	7502692	0	True				
ANR	7502798	ParameterType	void *		7502692	0					
ANR	7502799	Identifier	ptr		7502692	1					
ANR	7502800	CFGEntryNode	ENTRY		7502692		True				
ANR	7502801	CFGExitNode	EXIT		7502692		True				
ANR	7502802	Symbol	entry -> next		7502692						
ANR	7502803	Symbol	entry -> prev		7502692						
ANR	7502804	Symbol	NULL		7502692						
ANR	7502805	Symbol	entry -> prev -> next		7502692						
ANR	7502806	Symbol	* * entry		7502692						
ANR	7502807	Symbol	alloc_head		7502692						
ANR	7502808	Symbol	entry -> next -> prev		7502692						
ANR	7502809	Symbol	ptr		7502692						
ANR	7502810	Symbol	find_allocation		7502692						
ANR	7502811	Symbol	* entry -> next		7502692						
ANR	7502812	Symbol	entry		7502692						
ANR	7502813	Symbol	* entry -> prev		7502692						
ANR	7502814	Symbol	alloc_tail		7502692						
ANR	7502815	Symbol	* entry		7502692						
ANR	7502816	Function	tracking_realloc	130:0:3910:5381							
ANR	7502817	FunctionDef	"tracking_realloc (void * ptr , size_t size)"		7502816	0					
ANR	7502818	CompoundStatement		132:0:3958:5381	7502816	0					
ANR	7502819	IdentifierDeclStatement	AllocationEntry * entry ;	133:4:3964:3986	7502816	0	True				
ANR	7502820	IdentifierDecl	* entry		7502816	0					
ANR	7502821	IdentifierDeclType	AllocationEntry *		7502816	0					
ANR	7502822	Identifier	entry		7502816	1					
ANR	7502823	IfStatement	if ( ptr == NULL )		7502816	1					
ANR	7502824	Condition	ptr == NULL	135:8:3997:4007	7502816	0	True				
ANR	7502825	EqualityExpression	ptr == NULL		7502816	0		==			
ANR	7502826	Identifier	ptr		7502816	0					
ANR	7502827	Identifier	NULL		7502816	1					
ANR	7502828	CompoundStatement		4:21:51:51	7502816	1					
ANR	7502829	ReturnStatement	return tracking_malloc ( size ) ;	137:8:4084:4112	7502816	0	True				
ANR	7502830	CallExpression	tracking_malloc ( size )		7502816	0					
ANR	7502831	Callee	tracking_malloc		7502816	0					
ANR	7502832	Identifier	tracking_malloc		7502816	0					
ANR	7502833	ArgumentList	size		7502816	1					
ANR	7502834	Argument	size		7502816	0					
ANR	7502835	Identifier	size		7502816	0					
ANR	7502836	IfStatement	if ( size == 0 )		7502816	2					
ANR	7502837	Condition	size == 0	139:8:4128:4136	7502816	0	True				
ANR	7502838	EqualityExpression	size == 0		7502816	0		==			
ANR	7502839	Identifier	size		7502816	0					
ANR	7502840	PrimaryExpression	0		7502816	1					
ANR	7502841	CompoundStatement		8:19:180:180	7502816	1					
ANR	7502842	ExpressionStatement	tracking_free ( ptr )	141:8:4210:4228	7502816	0	True				
ANR	7502843	CallExpression	tracking_free ( ptr )		7502816	0					
ANR	7502844	Callee	tracking_free		7502816	0					
ANR	7502845	Identifier	tracking_free		7502816	0					
ANR	7502846	ArgumentList	ptr		7502816	1					
ANR	7502847	Argument	ptr		7502816	0					
ANR	7502848	Identifier	ptr		7502816	0					
ANR	7502849	ReturnStatement	return NULL ;	142:8:4238:4249	7502816	1	True				
ANR	7502850	Identifier	NULL		7502816	0					
ANR	7502851	ExpressionStatement	entry = find_allocation ( ptr )	146:4:4314:4342	7502816	3	True				
ANR	7502852	AssignmentExpression	entry = find_allocation ( ptr )		7502816	0		=			
ANR	7502853	Identifier	entry		7502816	0					
ANR	7502854	CallExpression	find_allocation ( ptr )		7502816	1					
ANR	7502855	Callee	find_allocation		7502816	0					
ANR	7502856	Identifier	find_allocation		7502816	0					
ANR	7502857	ArgumentList	ptr		7502816	1					
ANR	7502858	Argument	ptr		7502816	0					
ANR	7502859	Identifier	ptr		7502816	0					
ANR	7502860	IfStatement	if ( entry == NULL )		7502816	4					
ANR	7502861	Condition	entry == NULL	147:8:4352:4364	7502816	0	True				
ANR	7502862	EqualityExpression	entry == NULL		7502816	0		==			
ANR	7502863	Identifier	entry		7502816	0					
ANR	7502864	Identifier	NULL		7502816	1					
ANR	7502865	CompoundStatement		16:23:408:408	7502816	1					
ANR	7502866	ExpressionStatement	"printf ( ""Attempting to realloc unallocated memory at %p\\n"" , ptr )"	148:8:4377:4440	7502816	0	True				
ANR	7502867	CallExpression	"printf ( ""Attempting to realloc unallocated memory at %p\\n"" , ptr )"		7502816	0					
ANR	7502868	Callee	printf		7502816	0					
ANR	7502869	Identifier	printf		7502816	0					
ANR	7502870	ArgumentList	"""Attempting to realloc unallocated memory at %p\\n"""		7502816	1					
ANR	7502871	Argument	"""Attempting to realloc unallocated memory at %p\\n"""		7502816	0					
ANR	7502872	PrimaryExpression	"""Attempting to realloc unallocated memory at %p\\n"""		7502816	0					
ANR	7502873	Argument	ptr		7502816	1					
ANR	7502874	Identifier	ptr		7502816	0					
ANR	7502875	ExpressionStatement	entry = malloc ( sizeof ( AllocationEntry ) )	149:8:4450:4489	7502816	1	True				
ANR	7502876	AssignmentExpression	entry = malloc ( sizeof ( AllocationEntry ) )		7502816	0		=			
ANR	7502877	Identifier	entry		7502816	0					
ANR	7502878	CallExpression	malloc ( sizeof ( AllocationEntry ) )		7502816	1					
ANR	7502879	Callee	malloc		7502816	0					
ANR	7502880	Identifier	malloc		7502816	0					
ANR	7502881	ArgumentList	sizeof ( AllocationEntry )		7502816	1					
ANR	7502882	Argument	sizeof ( AllocationEntry )		7502816	0					
ANR	7502883	SizeofExpression	sizeof ( AllocationEntry )		7502816	0					
ANR	7502884	Sizeof	sizeof		7502816	0					
ANR	7502885	SizeofOperand	AllocationEntry		7502816	1					
ANR	7502886	IfStatement	if ( entry == NULL )		7502816	2					
ANR	7502887	Condition	entry == NULL	150:12:4503:4515	7502816	0	True				
ANR	7502888	EqualityExpression	entry == NULL		7502816	0		==			
ANR	7502889	Identifier	entry		7502816	0					
ANR	7502890	Identifier	NULL		7502816	1					
ANR	7502891	CompoundStatement		19:27:559:559	7502816	1					
ANR	7502892	ExpressionStatement	"printf ( ""Reallocator failure\\n"" )"	151:12:4532:4563	7502816	0	True				
ANR	7502893	CallExpression	"printf ( ""Reallocator failure\\n"" )"		7502816	0					
ANR	7502894	Callee	printf		7502816	0					
ANR	7502895	Identifier	printf		7502816	0					
ANR	7502896	ArgumentList	"""Reallocator failure\\n"""		7502816	1					
ANR	7502897	Argument	"""Reallocator failure\\n"""		7502816	0					
ANR	7502898	PrimaryExpression	"""Reallocator failure\\n"""		7502816	0					
ANR	7502899	ReturnStatement	return NULL ;	152:12:4577:4588	7502816	1	True				
ANR	7502900	Identifier	NULL		7502816	0					
ANR	7502901	ExpressionStatement	"entry -> allocation = realloc ( ptr , size )"	154:8:4608:4646	7502816	3	True				
ANR	7502902	AssignmentExpression	"entry -> allocation = realloc ( ptr , size )"		7502816	0		=			
ANR	7502903	PtrMemberAccess	entry -> allocation		7502816	0					
ANR	7502904	Identifier	entry		7502816	0					
ANR	7502905	Identifier	allocation		7502816	1					
ANR	7502906	CallExpression	"realloc ( ptr , size )"		7502816	1					
ANR	7502907	Callee	realloc		7502816	0					
ANR	7502908	Identifier	realloc		7502816	0					
ANR	7502909	ArgumentList	ptr		7502816	1					
ANR	7502910	Argument	ptr		7502816	0					
ANR	7502911	Identifier	ptr		7502816	0					
ANR	7502912	Argument	size		7502816	1					
ANR	7502913	Identifier	size		7502816	0					
ANR	7502914	IfStatement	if ( entry -> allocation == NULL )		7502816	4					
ANR	7502915	Condition	entry -> allocation == NULL	155:12:4660:4684	7502816	0	True				
ANR	7502916	EqualityExpression	entry -> allocation == NULL		7502816	0		==			
ANR	7502917	PtrMemberAccess	entry -> allocation		7502816	0					
ANR	7502918	Identifier	entry		7502816	0					
ANR	7502919	Identifier	allocation		7502816	1					
ANR	7502920	Identifier	NULL		7502816	1					
ANR	7502921	CompoundStatement		24:39:728:728	7502816	1					
ANR	7502922	ExpressionStatement	free ( entry )	156:12:4701:4712	7502816	0	True				
ANR	7502923	CallExpression	free ( entry )		7502816	0					
ANR	7502924	Callee	free		7502816	0					
ANR	7502925	Identifier	free		7502816	0					
ANR	7502926	ArgumentList	entry		7502816	1					
ANR	7502927	Argument	entry		7502816	0					
ANR	7502928	Identifier	entry		7502816	0					
ANR	7502929	ReturnStatement	return NULL ;	157:12:4726:4737	7502816	1	True				
ANR	7502930	Identifier	NULL		7502816	0					
ANR	7502931	ExpressionStatement	entry -> next = NULL	161:8:4803:4821	7502816	5	True				
ANR	7502932	AssignmentExpression	entry -> next = NULL		7502816	0		=			
ANR	7502933	PtrMemberAccess	entry -> next		7502816	0					
ANR	7502934	Identifier	entry		7502816	0					
ANR	7502935	Identifier	next		7502816	1					
ANR	7502936	Identifier	NULL		7502816	1					
ANR	7502937	IfStatement	if ( alloc_head == NULL )		7502816	6					
ANR	7502938	Condition	alloc_head == NULL	162:12:4835:4852	7502816	0	True				
ANR	7502939	EqualityExpression	alloc_head == NULL		7502816	0		==			
ANR	7502940	Identifier	alloc_head		7502816	0					
ANR	7502941	Identifier	NULL		7502816	1					
ANR	7502942	CompoundStatement		31:32:896:896	7502816	1					
ANR	7502943	ExpressionStatement	entry -> prev = NULL	163:12:4869:4887	7502816	0	True				
ANR	7502944	AssignmentExpression	entry -> prev = NULL		7502816	0		=			
ANR	7502945	PtrMemberAccess	entry -> prev		7502816	0					
ANR	7502946	Identifier	entry		7502816	0					
ANR	7502947	Identifier	prev		7502816	1					
ANR	7502948	Identifier	NULL		7502816	1					
ANR	7502949	ExpressionStatement	alloc_head = alloc_tail = entry	164:12:4901:4932	7502816	1	True				
ANR	7502950	AssignmentExpression	alloc_head = alloc_tail = entry		7502816	0		=			
ANR	7502951	Identifier	alloc_head		7502816	0					
ANR	7502952	AssignmentExpression	alloc_tail = entry		7502816	1		=			
ANR	7502953	Identifier	alloc_tail		7502816	0					
ANR	7502954	Identifier	entry		7502816	1					
ANR	7502955	ElseStatement	else		7502816	0					
ANR	7502956	CompoundStatement		34:15:990:990	7502816	0					
ANR	7502957	ExpressionStatement	entry -> prev = alloc_tail	166:12:4963:4987	7502816	0	True				
ANR	7502958	AssignmentExpression	entry -> prev = alloc_tail		7502816	0		=			
ANR	7502959	PtrMemberAccess	entry -> prev		7502816	0					
ANR	7502960	Identifier	entry		7502816	0					
ANR	7502961	Identifier	prev		7502816	1					
ANR	7502962	Identifier	alloc_tail		7502816	1					
ANR	7502963	ExpressionStatement	alloc_tail -> next = entry	167:12:5001:5025	7502816	1	True				
ANR	7502964	AssignmentExpression	alloc_tail -> next = entry		7502816	0		=			
ANR	7502965	PtrMemberAccess	alloc_tail -> next		7502816	0					
ANR	7502966	Identifier	alloc_tail		7502816	0					
ANR	7502967	Identifier	next		7502816	1					
ANR	7502968	Identifier	entry		7502816	1					
ANR	7502969	ExpressionStatement	alloc_tail = entry	168:12:5039:5057	7502816	2	True				
ANR	7502970	AssignmentExpression	alloc_tail = entry		7502816	0		=			
ANR	7502971	Identifier	alloc_tail		7502816	0					
ANR	7502972	Identifier	entry		7502816	1					
ANR	7502973	ElseStatement	else		7502816	0					
ANR	7502974	CompoundStatement		39:11:1121:1121	7502816	0					
ANR	7502975	ExpressionStatement	"entry -> allocation = realloc ( ptr , size )"	171:8:5090:5128	7502816	0	True				
ANR	7502976	AssignmentExpression	"entry -> allocation = realloc ( ptr , size )"		7502816	0		=			
ANR	7502977	PtrMemberAccess	entry -> allocation		7502816	0					
ANR	7502978	Identifier	entry		7502816	0					
ANR	7502979	Identifier	allocation		7502816	1					
ANR	7502980	CallExpression	"realloc ( ptr , size )"		7502816	1					
ANR	7502981	Callee	realloc		7502816	0					
ANR	7502982	Identifier	realloc		7502816	0					
ANR	7502983	ArgumentList	ptr		7502816	1					
ANR	7502984	Argument	ptr		7502816	0					
ANR	7502985	Identifier	ptr		7502816	0					
ANR	7502986	Argument	size		7502816	1					
ANR	7502987	Identifier	size		7502816	0					
ANR	7502988	IfStatement	if ( entry -> allocation == NULL )		7502816	1					
ANR	7502989	Condition	entry -> allocation == NULL	172:12:5142:5166	7502816	0	True				
ANR	7502990	EqualityExpression	entry -> allocation == NULL		7502816	0		==			
ANR	7502991	PtrMemberAccess	entry -> allocation		7502816	0					
ANR	7502992	Identifier	entry		7502816	0					
ANR	7502993	Identifier	allocation		7502816	1					
ANR	7502994	Identifier	NULL		7502816	1					
ANR	7502995	CompoundStatement		41:39:1210:1210	7502816	1					
ANR	7502996	ExpressionStatement	entry -> allocation = ptr	174:12:5255:5278	7502816	0	True				
ANR	7502997	AssignmentExpression	entry -> allocation = ptr		7502816	0		=			
ANR	7502998	PtrMemberAccess	entry -> allocation		7502816	0					
ANR	7502999	Identifier	entry		7502816	0					
ANR	7503000	Identifier	allocation		7502816	1					
ANR	7503001	Identifier	ptr		7502816	1					
ANR	7503002	ReturnStatement	return NULL ;	175:12:5292:5303	7502816	1	True				
ANR	7503003	Identifier	NULL		7502816	0					
ANR	7503004	ExpressionStatement	entry -> num_bytes = size	179:4:5326:5349	7502816	5	True				
ANR	7503005	AssignmentExpression	entry -> num_bytes = size		7502816	0		=			
ANR	7503006	PtrMemberAccess	entry -> num_bytes		7502816	0					
ANR	7503007	Identifier	entry		7502816	0					
ANR	7503008	Identifier	num_bytes		7502816	1					
ANR	7503009	Identifier	size		7502816	1					
ANR	7503010	ReturnStatement	return entry -> allocation ;	180:4:5355:5379	7502816	6	True				
ANR	7503011	PtrMemberAccess	entry -> allocation		7502816	0					
ANR	7503012	Identifier	entry		7502816	0					
ANR	7503013	Identifier	allocation		7502816	1					
ANR	7503014	ReturnType	void *		7502816	1					
ANR	7503015	Identifier	tracking_realloc		7502816	2					
ANR	7503016	ParameterList	"void * ptr , size_t size"		7502816	3					
ANR	7503017	Parameter	void * ptr	131:17:3934:3942	7502816	0	True				
ANR	7503018	ParameterType	void *		7502816	0					
ANR	7503019	Identifier	ptr		7502816	1					
ANR	7503020	Parameter	size_t size	131:28:3945:3955	7502816	1	True				
ANR	7503021	ParameterType	size_t		7502816	0					
ANR	7503022	Identifier	size		7502816	1					
ANR	7503023	CFGEntryNode	ENTRY		7502816		True				
ANR	7503024	CFGExitNode	EXIT		7502816		True				
ANR	7503025	Symbol	malloc		7502816						
ANR	7503026	Symbol	entry -> next		7502816						
ANR	7503027	Symbol	entry -> prev		7502816						
ANR	7503028	Symbol	NULL		7502816						
ANR	7503029	Symbol	tracking_malloc		7502816						
ANR	7503030	Symbol	alloc_head		7502816						
ANR	7503031	Symbol	realloc		7502816						
ANR	7503032	Symbol	entry -> allocation		7502816						
ANR	7503033	Symbol	ptr		7502816						
ANR	7503034	Symbol	find_allocation		7502816						
ANR	7503035	Symbol	entry		7502816						
ANR	7503036	Symbol	* alloc_tail		7502816						
ANR	7503037	Symbol	size		7502816						
ANR	7503038	Symbol	alloc_tail -> next		7502816						
ANR	7503039	Symbol	alloc_tail		7502816						
ANR	7503040	Symbol	entry -> num_bytes		7502816						
ANR	7503041	Symbol	* entry		7502816						
ANR	7503042	Function	tracking_report	183:0:5384:5758							
ANR	7503043	FunctionDef	tracking_report ()		7503042	0					
ANR	7503044	CompoundStatement		185:0:5410:5758	7503042	0					
ANR	7503045	IdentifierDeclStatement	AllocationEntry * entry ;	186:4:5416:5438	7503042	0	True				
ANR	7503046	IdentifierDecl	* entry		7503042	0					
ANR	7503047	IdentifierDeclType	AllocationEntry *		7503042	0					
ANR	7503048	Identifier	entry		7503042	1					
ANR	7503049	IfStatement	if ( alloc_head == NULL )		7503042	1					
ANR	7503050	Condition	alloc_head == NULL	188:8:5449:5466	7503042	0	True				
ANR	7503051	EqualityExpression	alloc_head == NULL		7503042	0		==			
ANR	7503052	Identifier	alloc_head		7503042	0					
ANR	7503053	Identifier	NULL		7503042	1					
ANR	7503054	ReturnStatement	return 1 ;	189:8:5477:5485	7503042	1	True				
ANR	7503055	PrimaryExpression	1		7503042	0					
ANR	7503056	ForStatement	for ( entry = alloc_head ; entry != NULL ; entry = entry -> next )		7503042	2					
ANR	7503057	ForInit	entry = alloc_head ;	192:9:5561:5579	7503042	0	True				
ANR	7503058	AssignmentExpression	entry = alloc_head		7503042	0		=			
ANR	7503059	Identifier	entry		7503042	0					
ANR	7503060	Identifier	alloc_head		7503042	1					
ANR	7503061	Condition	entry != NULL	192:29:5581:5593	7503042	1	True				
ANR	7503062	EqualityExpression	entry != NULL		7503042	0		!=			
ANR	7503063	Identifier	entry		7503042	0					
ANR	7503064	Identifier	NULL		7503042	1					
ANR	7503065	AssignmentExpression	entry = entry -> next	192:44:5596:5614	7503042	2	True	=			
ANR	7503066	Identifier	entry		7503042	0					
ANR	7503067	PtrMemberAccess	entry -> next		7503042	1					
ANR	7503068	Identifier	entry		7503042	0					
ANR	7503069	Identifier	next		7503042	1					
ANR	7503070	CompoundStatement		9:4:210:210	7503042	3					
ANR	7503071	Statement	printf	194:8:5631:5636	7503042	0	True				
ANR	7503072	Statement	(	194:14:5637:5637	7503042	1	True				
ANR	7503073	Statement	"""Allocated %lu bytes at %p\\n"""	194:15:5638:5666	7503042	2	True				
ANR	7503074	Statement	","	194:44:5667:5667	7503042	3	True				
ANR	7503075	Statement	(	195:16:5685:5685	7503042	4	True				
ANR	7503076	Statement	long	195:17:5686:5689	7503042	5	True				
ANR	7503077	Statement	unsigned	195:22:5691:5698	7503042	6	True				
ANR	7503078	Statement	)	195:30:5699:5699	7503042	7	True				
ANR	7503079	Statement	entry	195:31:5700:5704	7503042	8	True				
ANR	7503080	Statement	->	195:36:5705:5706	7503042	9	True				
ANR	7503081	Statement	num_bytes	195:38:5707:5715	7503042	10	True				
ANR	7503082	Statement	","	195:47:5716:5716	7503042	11	True				
ANR	7503083	Statement	entry	195:49:5718:5722	7503042	12	True				
ANR	7503084	Statement	->	195:54:5723:5724	7503042	13	True				
ANR	7503085	Statement	allocation	195:56:5725:5734	7503042	14	True				
ANR	7503086	Statement	)	195:66:5735:5735	7503042	15	True				
ANR	7503087	ExpressionStatement		195:67:5736:5736	7503042	16	True				
ANR	7503088	ReturnStatement	return 0 ;	197:4:5748:5756	7503042	3	True				
ANR	7503089	PrimaryExpression	0		7503042	0					
ANR	7503090	ReturnType	int		7503042	1					
ANR	7503091	Identifier	tracking_report		7503042	2					
ANR	7503092	ParameterList			7503042	3					
ANR	7503093	CFGEntryNode	ENTRY		7503042		True				
ANR	7503094	CFGExitNode	EXIT		7503042		True				
ANR	7503095	Symbol	entry		7503042						
ANR	7503096	Symbol	entry -> next		7503042						
ANR	7503097	Symbol	NULL		7503042						
ANR	7503098	Symbol	alloc_head		7503042						
ANR	7503099	Symbol	* entry		7503042						
