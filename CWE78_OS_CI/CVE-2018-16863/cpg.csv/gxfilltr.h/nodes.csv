command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5609951	File	data/converged/CVE-2018-16863_ghostpdl/gxfilltr.h								
ANR	5609952	Function	TEMPLATE_spot_into_trapezoids	38:0:1570:11891							
ANR	5609953	FunctionDef	"TEMPLATE_spot_into_trapezoids (line_list * ll , fixed band_mask)"		5609952	0					
ANR	5609954	CompoundStatement		40:0:1644:11891	5609952	0					
ANR	5609955	IdentifierDeclStatement	const fill_options fo = * ll -> fo ;	41:4:1650:1681	5609952	0	True				
ANR	5609956	IdentifierDecl	fo = * ll -> fo		5609952	0					
ANR	5609957	IdentifierDeclType	const fill_options		5609952	0					
ANR	5609958	Identifier	fo		5609952	1					
ANR	5609959	AssignmentExpression	fo = * ll -> fo		5609952	2		=			
ANR	5609960	Identifier	fo		5609952	0					
ANR	5609961	UnaryOperationExpression	* ll -> fo		5609952	1					
ANR	5609962	UnaryOperator	*		5609952	0					
ANR	5609963	PtrMemberAccess	ll -> fo		5609952	1					
ANR	5609964	Identifier	ll		5609952	0					
ANR	5609965	Identifier	fo		5609952	1					
ANR	5609966	IdentifierDeclStatement	int rule = fo . rule ;	42:4:1687:1705	5609952	1	True				
ANR	5609967	IdentifierDecl	rule = fo . rule		5609952	0					
ANR	5609968	IdentifierDeclType	int		5609952	0					
ANR	5609969	Identifier	rule		5609952	1					
ANR	5609970	AssignmentExpression	rule = fo . rule		5609952	2		=			
ANR	5609971	Identifier	rule		5609952	0					
ANR	5609972	MemberAccess	fo . rule		5609952	1					
ANR	5609973	Identifier	fo		5609952	0					
ANR	5609974	Identifier	rule		5609952	1					
ANR	5609975	IdentifierDeclStatement	const fixed y_limit = fo . ymax ;	43:4:1711:1740	5609952	2	True				
ANR	5609976	IdentifierDecl	y_limit = fo . ymax		5609952	0					
ANR	5609977	IdentifierDeclType	const fixed		5609952	0					
ANR	5609978	Identifier	y_limit		5609952	1					
ANR	5609979	AssignmentExpression	y_limit = fo . ymax		5609952	2		=			
ANR	5609980	Identifier	y_limit		5609952	0					
ANR	5609981	MemberAccess	fo . ymax		5609952	1					
ANR	5609982	Identifier	fo		5609952	0					
ANR	5609983	Identifier	ymax		5609952	1					
ANR	5609984	IdentifierDeclStatement	active_line * yll = ll -> y_list ;	44:4:1746:1775	5609952	3	True				
ANR	5609985	IdentifierDecl	* yll = ll -> y_list		5609952	0					
ANR	5609986	IdentifierDeclType	active_line *		5609952	0					
ANR	5609987	Identifier	yll		5609952	1					
ANR	5609988	AssignmentExpression	* yll = ll -> y_list		5609952	2		=			
ANR	5609989	Identifier	yll		5609952	0					
ANR	5609990	PtrMemberAccess	ll -> y_list		5609952	1					
ANR	5609991	Identifier	ll		5609952	0					
ANR	5609992	Identifier	y_list		5609952	1					
ANR	5609993	IdentifierDeclStatement	fixed y ;	45:4:1781:1788	5609952	4	True				
ANR	5609994	IdentifierDecl	y		5609952	0					
ANR	5609995	IdentifierDeclType	fixed		5609952	0					
ANR	5609996	Identifier	y		5609952	1					
ANR	5609997	IdentifierDeclStatement	int code ;	46:4:1794:1802	5609952	5	True				
ANR	5609998	IdentifierDecl	code		5609952	0					
ANR	5609999	IdentifierDeclType	int		5609952	0					
ANR	5610000	Identifier	code		5609952	1					
ANR	5610001	IdentifierDeclStatement	const bool all_bands = fo . is_spotan ;	47:4:1808:1843	5609952	6	True				
ANR	5610002	IdentifierDecl	all_bands = fo . is_spotan		5609952	0					
ANR	5610003	IdentifierDeclType	const bool		5609952	0					
ANR	5610004	Identifier	all_bands		5609952	1					
ANR	5610005	AssignmentExpression	all_bands = fo . is_spotan		5609952	2		=			
ANR	5610006	Identifier	all_bands		5609952	0					
ANR	5610007	MemberAccess	fo . is_spotan		5609952	1					
ANR	5610008	Identifier	fo		5609952	0					
ANR	5610009	Identifier	is_spotan		5609952	1					
ANR	5610010	IfStatement	if ( yll == 0 )		5609952	7					
ANR	5610011	Condition	yll == 0	49:8:1854:1861	5609952	0	True				
ANR	5610012	EqualityExpression	yll == 0		5609952	0		==			
ANR	5610013	Identifier	yll		5609952	0					
ANR	5610014	PrimaryExpression	0		5609952	1					
ANR	5610015	ReturnStatement	return 0 ;	50:8:1872:1880	5609952	1	True				
ANR	5610016	PrimaryExpression	0		5609952	0					
ANR	5610017	ExpressionStatement	y = yll -> start . y	51:4:1904:1920	5609952	8	True				
ANR	5610018	AssignmentExpression	y = yll -> start . y		5609952	0		=			
ANR	5610019	Identifier	y		5609952	0					
ANR	5610020	MemberAccess	yll -> start . y		5609952	1					
ANR	5610021	PtrMemberAccess	yll -> start		5609952	0					
ANR	5610022	Identifier	yll		5609952	0					
ANR	5610023	Identifier	start		5609952	1					
ANR	5610024	Identifier	y		5609952	1					
ANR	5610025	ExpressionStatement	ll -> x_list = 0	52:4:1947:1961	5609952	9	True				
ANR	5610026	AssignmentExpression	ll -> x_list = 0		5609952	0		=			
ANR	5610027	PtrMemberAccess	ll -> x_list		5609952	0					
ANR	5610028	Identifier	ll		5609952	0					
ANR	5610029	Identifier	x_list		5609952	1					
ANR	5610030	PrimaryExpression	0		5609952	1					
ANR	5610031	ExpressionStatement	ll -> x_head . x_current = min_fixed	53:4:1967:1999	5609952	10	True				
ANR	5610032	AssignmentExpression	ll -> x_head . x_current = min_fixed		5609952	0		=			
ANR	5610033	MemberAccess	ll -> x_head . x_current		5609952	0					
ANR	5610034	PtrMemberAccess	ll -> x_head		5609952	0					
ANR	5610035	Identifier	ll		5609952	0					
ANR	5610036	Identifier	x_head		5609952	1					
ANR	5610037	Identifier	x_current		5609952	1					
ANR	5610038	Identifier	min_fixed		5609952	1					
ANR	5610039	WhileStatement	while ( 1 )		5609952	11					
ANR	5610040	Condition	1	54:11:2037:2037	5609952	0	True				
ANR	5610041	PrimaryExpression	1		5609952	0					
ANR	5610042	CompoundStatement		18:8:449:476	5609952	1					
ANR	5610043	IdentifierDeclStatement	fixed y1 ;	55:8:2050:2058	5609952	0	True				
ANR	5610044	IdentifierDecl	y1		5609952	0					
ANR	5610045	IdentifierDeclType	fixed		5609952	0					
ANR	5610046	Identifier	y1		5609952	1					
ANR	5610047	IdentifierDeclStatement	active_line * alp ;	56:8:2068:2084	5609952	1	True				
ANR	5610048	IdentifierDecl	* alp		5609952	0					
ANR	5610049	IdentifierDeclType	active_line *		5609952	0					
ANR	5610050	Identifier	alp		5609952	1					
ANR	5610051	IdentifierDeclStatement	bool covering_pixel_centers ;	57:8:2094:2121	5609952	2	True				
ANR	5610052	IdentifierDecl	covering_pixel_centers		5609952	0					
ANR	5610053	IdentifierDeclType	bool		5609952	0					
ANR	5610054	Identifier	covering_pixel_centers		5609952	1					
ANR	5610055	ExpressionStatement	INCR ( iter )	59:8:2132:2142	5609952	3	True				
ANR	5610056	CallExpression	INCR ( iter )		5609952	0					
ANR	5610057	Callee	INCR		5609952	0					
ANR	5610058	Identifier	INCR		5609952	0					
ANR	5610059	ArgumentList	iter		5609952	1					
ANR	5610060	Argument	iter		5609952	0					
ANR	5610061	Identifier	iter		5609952	0					
ANR	5610062	WhileStatement	while ( yll != 0 && yll -> start . y == y )		5609952	4					
ANR	5610063	Condition	yll != 0 && yll -> start . y == y	61:15:2215:2243	5609952	0	True				
ANR	5610064	AndExpression	yll != 0 && yll -> start . y == y		5609952	0		&&			
ANR	5610065	EqualityExpression	yll != 0		5609952	0		!=			
ANR	5610066	Identifier	yll		5609952	0					
ANR	5610067	PrimaryExpression	0		5609952	1					
ANR	5610068	EqualityExpression	yll -> start . y == y		5609952	1		==			
ANR	5610069	MemberAccess	yll -> start . y		5609952	0					
ANR	5610070	PtrMemberAccess	yll -> start		5609952	0					
ANR	5610071	Identifier	yll		5609952	0					
ANR	5610072	Identifier	start		5609952	1					
ANR	5610073	Identifier	y		5609952	1					
ANR	5610074	Identifier	y		5609952	1					
ANR	5610075	CompoundStatement		23:12:615:645	5609952	1					
ANR	5610076	IdentifierDeclStatement	active_line * ynext = yll -> next ;	62:12:2260:2290	5609952	0	True				
ANR	5610077	IdentifierDecl	* ynext = yll -> next		5609952	0					
ANR	5610078	IdentifierDeclType	active_line *		5609952	0					
ANR	5610079	Identifier	ynext		5609952	1					
ANR	5610080	AssignmentExpression	* ynext = yll -> next		5609952	2		=			
ANR	5610081	Identifier	ynext		5609952	0					
ANR	5610082	PtrMemberAccess	yll -> next		5609952	1					
ANR	5610083	Identifier	yll		5609952	0					
ANR	5610084	Identifier	next		5609952	1					
ANR	5610085	ExpressionStatement	ll -> y_list = ynext	64:12:2342:2360	5609952	1	True				
ANR	5610086	AssignmentExpression	ll -> y_list = ynext		5609952	0		=			
ANR	5610087	PtrMemberAccess	ll -> y_list		5609952	0					
ANR	5610088	Identifier	ll		5609952	0					
ANR	5610089	Identifier	y_list		5609952	1					
ANR	5610090	Identifier	ynext		5609952	1					
ANR	5610091	IfStatement	if ( ll -> y_line == yll )		5609952	2					
ANR	5610092	Condition	ll -> y_line == yll	65:16:2378:2394	5609952	0	True				
ANR	5610093	EqualityExpression	ll -> y_line == yll		5609952	0		==			
ANR	5610094	PtrMemberAccess	ll -> y_line		5609952	0					
ANR	5610095	Identifier	ll		5609952	0					
ANR	5610096	Identifier	y_line		5609952	1					
ANR	5610097	Identifier	yll		5609952	1					
ANR	5610098	ExpressionStatement	ll -> y_line = ynext	66:16:2413:2431	5609952	1	True				
ANR	5610099	AssignmentExpression	ll -> y_line = ynext		5609952	0		=			
ANR	5610100	PtrMemberAccess	ll -> y_line		5609952	0					
ANR	5610101	Identifier	ll		5609952	0					
ANR	5610102	Identifier	y_line		5609952	1					
ANR	5610103	Identifier	ynext		5609952	1					
ANR	5610104	IfStatement	if ( ynext != NULL )		5609952	3					
ANR	5610105	Condition	ynext != NULL	67:16:2449:2461	5609952	0	True				
ANR	5610106	EqualityExpression	ynext != NULL		5609952	0		!=			
ANR	5610107	Identifier	ynext		5609952	0					
ANR	5610108	Identifier	NULL		5609952	1					
ANR	5610109	ExpressionStatement	ynext -> prev = NULL	68:16:2480:2498	5609952	1	True				
ANR	5610110	AssignmentExpression	ynext -> prev = NULL		5609952	0		=			
ANR	5610111	PtrMemberAccess	ynext -> prev		5609952	0					
ANR	5610112	Identifier	ynext		5609952	0					
ANR	5610113	Identifier	prev		5609952	1					
ANR	5610114	Identifier	NULL		5609952	1					
ANR	5610115	IfStatement	if ( yll -> direction == DIR_HORIZONTAL )		5609952	4					
ANR	5610116	Condition	yll -> direction == DIR_HORIZONTAL	69:16:2516:2547	5609952	0	True				
ANR	5610117	EqualityExpression	yll -> direction == DIR_HORIZONTAL		5609952	0		==			
ANR	5610118	PtrMemberAccess	yll -> direction		5609952	0					
ANR	5610119	Identifier	yll		5609952	0					
ANR	5610120	Identifier	direction		5609952	1					
ANR	5610121	Identifier	DIR_HORIZONTAL		5609952	1					
ANR	5610122	CompoundStatement		36:16:1159:1169	5609952	1					
ANR	5610123	IdentifierDeclStatement	int yi = fixed2int_pixround ( y - ( ! FILL_ADJUST ? 0 : fo . adjust_below ) ) ;	74:16:2717:2786	5609952	0	True				
ANR	5610124	IdentifierDecl	yi = fixed2int_pixround ( y - ( ! FILL_ADJUST ? 0 : fo . adjust_below ) )		5609952	0					
ANR	5610125	IdentifierDeclType	int		5609952	0					
ANR	5610126	Identifier	yi		5609952	1					
ANR	5610127	AssignmentExpression	yi = fixed2int_pixround ( y - ( ! FILL_ADJUST ? 0 : fo . adjust_below ) )		5609952	2		=			
ANR	5610128	Identifier	yi		5609952	0					
ANR	5610129	CallExpression	fixed2int_pixround ( y - ( ! FILL_ADJUST ? 0 : fo . adjust_below ) )		5609952	1					
ANR	5610130	Callee	fixed2int_pixround		5609952	0					
ANR	5610131	Identifier	fixed2int_pixround		5609952	0					
ANR	5610132	ArgumentList	y - ( ! FILL_ADJUST ? 0 : fo . adjust_below )		5609952	1					
ANR	5610133	Argument	y - ( ! FILL_ADJUST ? 0 : fo . adjust_below )		5609952	0					
ANR	5610134	AdditiveExpression	y - ( ! FILL_ADJUST ? 0 : fo . adjust_below )		5609952	0		-			
ANR	5610135	Identifier	y		5609952	0					
ANR	5610136	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_below		5609952	1					
ANR	5610137	Condition	! FILL_ADJUST		5609952	0					
ANR	5610138	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5610139	UnaryOperator	!		5609952	0					
ANR	5610140	Identifier	FILL_ADJUST		5609952	1					
ANR	5610141	PrimaryExpression	0		5609952	1					
ANR	5610142	MemberAccess	fo . adjust_below		5609952	2					
ANR	5610143	Identifier	fo		5609952	0					
ANR	5610144	Identifier	adjust_below		5609952	1					
ANR	5610145	IdentifierDeclStatement	"int xi , wi ;"	75:16:2804:2814	5609952	1	True				
ANR	5610146	IdentifierDecl	xi		5609952	0					
ANR	5610147	IdentifierDeclType	int		5609952	0					
ANR	5610148	Identifier	xi		5609952	1					
ANR	5610149	IdentifierDecl	wi		5609952	1					
ANR	5610150	IdentifierDeclType	int		5609952	0					
ANR	5610151	Identifier	wi		5609952	1					
ANR	5610152	IfStatement	if ( yll -> start . x <= yll -> end . x )		5609952	2					
ANR	5610153	Condition	yll -> start . x <= yll -> end . x	77:20:2837:2862	5609952	0	True				
ANR	5610154	RelationalExpression	yll -> start . x <= yll -> end . x		5609952	0		<=			
ANR	5610155	MemberAccess	yll -> start . x		5609952	0					
ANR	5610156	PtrMemberAccess	yll -> start		5609952	0					
ANR	5610157	Identifier	yll		5609952	0					
ANR	5610158	Identifier	start		5609952	1					
ANR	5610159	Identifier	x		5609952	1					
ANR	5610160	MemberAccess	yll -> end . x		5609952	1					
ANR	5610161	PtrMemberAccess	yll -> end		5609952	0					
ANR	5610162	Identifier	yll		5609952	0					
ANR	5610163	Identifier	end		5609952	1					
ANR	5610164	Identifier	x		5609952	1					
ANR	5610165	CompoundStatement		38:48:1220:1220	5609952	1					
ANR	5610166	ExpressionStatement	xi = fixed2int_pixround ( yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )	78:20:2887:2962	5609952	0	True				
ANR	5610167	AssignmentExpression	xi = fixed2int_pixround ( yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		5609952	0		=			
ANR	5610168	Identifier	xi		5609952	0					
ANR	5610169	CallExpression	fixed2int_pixround ( yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		5609952	1					
ANR	5610170	Callee	fixed2int_pixround		5609952	0					
ANR	5610171	Identifier	fixed2int_pixround		5609952	0					
ANR	5610172	ArgumentList	yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		5609952	1					
ANR	5610173	Argument	yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		5609952	0					
ANR	5610174	AdditiveExpression	yll -> start . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		5609952	0		-			
ANR	5610175	MemberAccess	yll -> start . x		5609952	0					
ANR	5610176	PtrMemberAccess	yll -> start		5609952	0					
ANR	5610177	Identifier	yll		5609952	0					
ANR	5610178	Identifier	start		5609952	1					
ANR	5610179	Identifier	x		5609952	1					
ANR	5610180	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_left		5609952	1					
ANR	5610181	Condition	! FILL_ADJUST		5609952	0					
ANR	5610182	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5610183	UnaryOperator	!		5609952	0					
ANR	5610184	Identifier	FILL_ADJUST		5609952	1					
ANR	5610185	PrimaryExpression	0		5609952	1					
ANR	5610186	MemberAccess	fo . adjust_left		5609952	2					
ANR	5610187	Identifier	fo		5609952	0					
ANR	5610188	Identifier	adjust_left		5609952	1					
ANR	5610189	ExpressionStatement	wi = fixed2int_pixround ( yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi	79:20:2984:3063	5609952	1	True				
ANR	5610190	AssignmentExpression	wi = fixed2int_pixround ( yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi		5609952	0		=			
ANR	5610191	Identifier	wi		5609952	0					
ANR	5610192	AdditiveExpression	fixed2int_pixround ( yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi		5609952	1		-			
ANR	5610193	CallExpression	fixed2int_pixround ( yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		5609952	0					
ANR	5610194	Callee	fixed2int_pixround		5609952	0					
ANR	5610195	Identifier	fixed2int_pixround		5609952	0					
ANR	5610196	ArgumentList	yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		5609952	1					
ANR	5610197	Argument	yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		5609952	0					
ANR	5610198	AdditiveExpression	yll -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		5609952	0		+			
ANR	5610199	MemberAccess	yll -> end . x		5609952	0					
ANR	5610200	PtrMemberAccess	yll -> end		5609952	0					
ANR	5610201	Identifier	yll		5609952	0					
ANR	5610202	Identifier	end		5609952	1					
ANR	5610203	Identifier	x		5609952	1					
ANR	5610204	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_right		5609952	1					
ANR	5610205	Condition	! FILL_ADJUST		5609952	0					
ANR	5610206	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5610207	UnaryOperator	!		5609952	0					
ANR	5610208	Identifier	FILL_ADJUST		5609952	1					
ANR	5610209	PrimaryExpression	0		5609952	1					
ANR	5610210	MemberAccess	fo . adjust_right		5609952	2					
ANR	5610211	Identifier	fo		5609952	0					
ANR	5610212	Identifier	adjust_right		5609952	1					
ANR	5610213	Identifier	xi		5609952	1					
ANR	5610214	ElseStatement	else		5609952	0					
ANR	5610215	CompoundStatement		41:23:1443:1443	5609952	0					
ANR	5610216	ExpressionStatement	xi = fixed2int_pixround ( yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )	81:20:3110:3183	5609952	0	True				
ANR	5610217	AssignmentExpression	xi = fixed2int_pixround ( yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		5609952	0		=			
ANR	5610218	Identifier	xi		5609952	0					
ANR	5610219	CallExpression	fixed2int_pixround ( yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		5609952	1					
ANR	5610220	Callee	fixed2int_pixround		5609952	0					
ANR	5610221	Identifier	fixed2int_pixround		5609952	0					
ANR	5610222	ArgumentList	yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		5609952	1					
ANR	5610223	Argument	yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		5609952	0					
ANR	5610224	AdditiveExpression	yll -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		5609952	0		-			
ANR	5610225	MemberAccess	yll -> end . x		5609952	0					
ANR	5610226	PtrMemberAccess	yll -> end		5609952	0					
ANR	5610227	Identifier	yll		5609952	0					
ANR	5610228	Identifier	end		5609952	1					
ANR	5610229	Identifier	x		5609952	1					
ANR	5610230	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_left		5609952	1					
ANR	5610231	Condition	! FILL_ADJUST		5609952	0					
ANR	5610232	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5610233	UnaryOperator	!		5609952	0					
ANR	5610234	Identifier	FILL_ADJUST		5609952	1					
ANR	5610235	PrimaryExpression	0		5609952	1					
ANR	5610236	MemberAccess	fo . adjust_left		5609952	2					
ANR	5610237	Identifier	fo		5609952	0					
ANR	5610238	Identifier	adjust_left		5609952	1					
ANR	5610239	ExpressionStatement	wi = fixed2int_pixround ( yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi	82:20:3205:3286	5609952	1	True				
ANR	5610240	AssignmentExpression	wi = fixed2int_pixround ( yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi		5609952	0		=			
ANR	5610241	Identifier	wi		5609952	0					
ANR	5610242	AdditiveExpression	fixed2int_pixround ( yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) - xi		5609952	1		-			
ANR	5610243	CallExpression	fixed2int_pixround ( yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		5609952	0					
ANR	5610244	Callee	fixed2int_pixround		5609952	0					
ANR	5610245	Identifier	fixed2int_pixround		5609952	0					
ANR	5610246	ArgumentList	yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		5609952	1					
ANR	5610247	Argument	yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		5609952	0					
ANR	5610248	AdditiveExpression	yll -> start . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		5609952	0		+			
ANR	5610249	MemberAccess	yll -> start . x		5609952	0					
ANR	5610250	PtrMemberAccess	yll -> start		5609952	0					
ANR	5610251	Identifier	yll		5609952	0					
ANR	5610252	Identifier	start		5609952	1					
ANR	5610253	Identifier	x		5609952	1					
ANR	5610254	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_right		5609952	1					
ANR	5610255	Condition	! FILL_ADJUST		5609952	0					
ANR	5610256	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5610257	UnaryOperator	!		5609952	0					
ANR	5610258	Identifier	FILL_ADJUST		5609952	1					
ANR	5610259	PrimaryExpression	0		5609952	1					
ANR	5610260	MemberAccess	fo . adjust_right		5609952	2					
ANR	5610261	Identifier	fo		5609952	0					
ANR	5610262	Identifier	adjust_right		5609952	1					
ANR	5610263	Identifier	xi		5609952	1					
ANR	5610264	ExpressionStatement	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , xi , yi , wi , 1 )"	84:16:3322:3375	5609952	3	True				
ANR	5610265	AssignmentExpression	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , xi , yi , wi , 1 )"		5609952	0		=			
ANR	5610266	Identifier	code		5609952	0					
ANR	5610267	CallExpression	"LOOP_FILL_RECTANGLE_DIRECT ( & fo , xi , yi , wi , 1 )"		5609952	1					
ANR	5610268	Callee	LOOP_FILL_RECTANGLE_DIRECT		5609952	0					
ANR	5610269	Identifier	LOOP_FILL_RECTANGLE_DIRECT		5609952	0					
ANR	5610270	ArgumentList	& fo		5609952	1					
ANR	5610271	Argument	& fo		5609952	0					
ANR	5610272	UnaryOperationExpression	& fo		5609952	0					
ANR	5610273	UnaryOperator	&		5609952	0					
ANR	5610274	Identifier	fo		5609952	1					
ANR	5610275	Argument	xi		5609952	1					
ANR	5610276	Identifier	xi		5609952	0					
ANR	5610277	Argument	yi		5609952	2					
ANR	5610278	Identifier	yi		5609952	0					
ANR	5610279	Argument	wi		5609952	3					
ANR	5610280	Identifier	wi		5609952	0					
ANR	5610281	Argument	1		5609952	4					
ANR	5610282	PrimaryExpression	1		5609952	0					
ANR	5610283	IfStatement	if ( code < 0 )		5609952	4					
ANR	5610284	Condition	code < 0	85:20:3397:3404	5609952	0	True				
ANR	5610285	RelationalExpression	code < 0		5609952	0		<			
ANR	5610286	Identifier	code		5609952	0					
ANR	5610287	PrimaryExpression	0		5609952	1					
ANR	5610288	ReturnStatement	return code ;	86:20:3427:3438	5609952	1	True				
ANR	5610289	Identifier	code		5609952	0					
ANR	5610290	ElseStatement	else		5609952	0					
ANR	5610291	ExpressionStatement	"insert_x_new ( yll , ll )"	88:16:3475:3496	5609952	0	True				
ANR	5610292	CallExpression	"insert_x_new ( yll , ll )"		5609952	0					
ANR	5610293	Callee	insert_x_new		5609952	0					
ANR	5610294	Identifier	insert_x_new		5609952	0					
ANR	5610295	ArgumentList	yll		5609952	1					
ANR	5610296	Argument	yll		5609952	0					
ANR	5610297	Identifier	yll		5609952	0					
ANR	5610298	Argument	ll		5609952	1					
ANR	5610299	Identifier	ll		5609952	0					
ANR	5610300	ExpressionStatement	yll = ynext	89:12:3510:3521	5609952	5	True				
ANR	5610301	AssignmentExpression	yll = ynext		5609952	0		=			
ANR	5610302	Identifier	yll		5609952	0					
ANR	5610303	Identifier	ynext		5609952	1					
ANR	5610304	IfStatement	if ( ll -> x_list == 0 )		5609952	5					
ANR	5610305	Condition	ll -> x_list == 0	92:12:3605:3619	5609952	0	True				
ANR	5610306	EqualityExpression	ll -> x_list == 0		5609952	0		==			
ANR	5610307	PtrMemberAccess	ll -> x_list		5609952	0					
ANR	5610308	Identifier	ll		5609952	0					
ANR	5610309	Identifier	x_list		5609952	1					
ANR	5610310	PrimaryExpression	0		5609952	1					
ANR	5610311	CompoundStatement		53:29:1977:1977	5609952	1					
ANR	5610312	IfStatement	if ( yll == 0 )		5609952	0					
ANR	5610313	Condition	yll == 0	93:16:3682:3689	5609952	0	True				
ANR	5610314	EqualityExpression	yll == 0		5609952	0		==			
ANR	5610315	Identifier	yll		5609952	0					
ANR	5610316	PrimaryExpression	0		5609952	1					
ANR	5610317	BreakStatement	break ;	94:16:3708:3713	5609952	1	True				
ANR	5610318	ExpressionStatement	y = yll -> start . y	97:12:3860:3876	5609952	1	True				
ANR	5610319	AssignmentExpression	y = yll -> start . y		5609952	0		=			
ANR	5610320	Identifier	y		5609952	0					
ANR	5610321	MemberAccess	yll -> start . y		5609952	1					
ANR	5610322	PtrMemberAccess	yll -> start		5609952	0					
ANR	5610323	Identifier	yll		5609952	0					
ANR	5610324	Identifier	start		5609952	1					
ANR	5610325	Identifier	y		5609952	1					
ANR	5610326	ExpressionStatement	ll -> h_list1 = ll -> h_list0	98:12:3890:3915	5609952	2	True				
ANR	5610327	AssignmentExpression	ll -> h_list1 = ll -> h_list0		5609952	0		=			
ANR	5610328	PtrMemberAccess	ll -> h_list1		5609952	0					
ANR	5610329	Identifier	ll		5609952	0					
ANR	5610330	Identifier	h_list1		5609952	1					
ANR	5610331	PtrMemberAccess	ll -> h_list0		5609952	1					
ANR	5610332	Identifier	ll		5609952	0					
ANR	5610333	Identifier	h_list0		5609952	1					
ANR	5610334	ExpressionStatement	ll -> h_list0 = 0	99:12:3929:3944	5609952	3	True				
ANR	5610335	AssignmentExpression	ll -> h_list0 = 0		5609952	0		=			
ANR	5610336	PtrMemberAccess	ll -> h_list0		5609952	0					
ANR	5610337	Identifier	ll		5609952	0					
ANR	5610338	Identifier	h_list0		5609952	1					
ANR	5610339	PrimaryExpression	0		5609952	1					
ANR	5610340	ContinueStatement	continue ;	100:12:3958:3966	5609952	4	True				
ANR	5610341	ExpressionStatement	y1 = ( yll != 0 ? yll -> start . y : ll -> y_break )	106:8:4192:4236	5609952	6	True				
ANR	5610342	AssignmentExpression	y1 = ( yll != 0 ? yll -> start . y : ll -> y_break )		5609952	0		=			
ANR	5610343	Identifier	y1		5609952	0					
ANR	5610344	ConditionalExpression	yll != 0 ? yll -> start . y : ll -> y_break		5609952	1					
ANR	5610345	Condition	yll != 0		5609952	0					
ANR	5610346	EqualityExpression	yll != 0		5609952	0		!=			
ANR	5610347	Identifier	yll		5609952	0					
ANR	5610348	PrimaryExpression	0		5609952	1					
ANR	5610349	MemberAccess	yll -> start . y		5609952	1					
ANR	5610350	PtrMemberAccess	yll -> start		5609952	0					
ANR	5610351	Identifier	yll		5609952	0					
ANR	5610352	Identifier	start		5609952	1					
ANR	5610353	Identifier	y		5609952	1					
ANR	5610354	PtrMemberAccess	ll -> y_break		5609952	2					
ANR	5610355	Identifier	ll		5609952	0					
ANR	5610356	Identifier	y_break		5609952	1					
ANR	5610357	CompoundStatement		70:12:2680:2709	5609952	7					
ANR	5610358	IdentifierDeclStatement	fixed y_band = y | ~band_mask ;	109:12:4325:4354	5609952	0	True				
ANR	5610359	IdentifierDecl	y_band = y | ~band_mask		5609952	0					
ANR	5610360	IdentifierDeclType	fixed		5609952	0					
ANR	5610361	Identifier	y_band		5609952	1					
ANR	5610362	AssignmentExpression	y_band = y | ~band_mask		5609952	2		=			
ANR	5610363	Identifier	y_band		5609952	0					
ANR	5610364	InclusiveOrExpression	y | ~band_mask		5609952	1		|			
ANR	5610365	Identifier	y		5609952	0					
ANR	5610366	Identifier	~band_mask		5609952	1					
ANR	5610367	IfStatement	if ( y1 > y_band )		5609952	1					
ANR	5610368	Condition	y1 > y_band	111:16:4373:4383	5609952	0	True				
ANR	5610369	RelationalExpression	y1 > y_band		5609952	0		>			
ANR	5610370	Identifier	y1		5609952	0					
ANR	5610371	Identifier	y_band		5609952	1					
ANR	5610372	ExpressionStatement	y1 = y_band + 1	112:16:4402:4417	5609952	1	True				
ANR	5610373	AssignmentExpression	y1 = y_band + 1		5609952	0		=			
ANR	5610374	Identifier	y1		5609952	0					
ANR	5610375	AdditiveExpression	y_band + 1		5609952	1		+			
ANR	5610376	Identifier	y_band		5609952	0					
ANR	5610377	PrimaryExpression	1		5609952	1					
ANR	5610378	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = alp -> next )		5609952	8					
ANR	5610379	ForInit	alp = ll -> x_list ;	114:13:4442:4458	5609952	0	True				
ANR	5610380	AssignmentExpression	alp = ll -> x_list		5609952	0		=			
ANR	5610381	Identifier	alp		5609952	0					
ANR	5610382	PtrMemberAccess	ll -> x_list		5609952	1					
ANR	5610383	Identifier	ll		5609952	0					
ANR	5610384	Identifier	x_list		5609952	1					
ANR	5610385	Condition	alp != 0	114:31:4460:4467	5609952	1	True				
ANR	5610386	EqualityExpression	alp != 0		5609952	0		!=			
ANR	5610387	Identifier	alp		5609952	0					
ANR	5610388	PrimaryExpression	0		5609952	1					
ANR	5610389	AssignmentExpression	alp = alp -> next	114:41:4470:4484	5609952	2	True	=			
ANR	5610390	Identifier	alp		5609952	0					
ANR	5610391	PtrMemberAccess	alp -> next		5609952	1					
ANR	5610392	Identifier	alp		5609952	0					
ANR	5610393	Identifier	next		5609952	1					
ANR	5610394	CompoundStatement		75:58:2842:2842	5609952	3					
ANR	5610395	IfStatement	if ( alp -> end . y < y1 )		5609952	0					
ANR	5610396	Condition	alp -> end . y < y1	115:16:4505:4519	5609952	0	True				
ANR	5610397	RelationalExpression	alp -> end . y < y1		5609952	0		<			
ANR	5610398	MemberAccess	alp -> end . y		5609952	0					
ANR	5610399	PtrMemberAccess	alp -> end		5609952	0					
ANR	5610400	Identifier	alp		5609952	0					
ANR	5610401	Identifier	end		5609952	1					
ANR	5610402	Identifier	y		5609952	1					
ANR	5610403	Identifier	y1		5609952	1					
ANR	5610404	ExpressionStatement	y1 = alp -> end . y	116:16:4538:4553	5609952	1	True				
ANR	5610405	AssignmentExpression	y1 = alp -> end . y		5609952	0		=			
ANR	5610406	Identifier	y1		5609952	0					
ANR	5610407	MemberAccess	alp -> end . y		5609952	1					
ANR	5610408	PtrMemberAccess	alp -> end		5609952	0					
ANR	5610409	Identifier	alp		5609952	0					
ANR	5610410	Identifier	end		5609952	1					
ANR	5610411	Identifier	y		5609952	1					
ANR	5610412	Statement	ifdef	118:2:4567:4571	5609952	9	True				
ANR	5610413	Statement	DEBUG	118:8:4573:4577	5609952	10	True				
ANR	5610414	IfStatement	if ( gs_debug_c ( 'F' ) )		5609952	11					
ANR	5610415	Condition	gs_debug_c ( 'F' )	119:16:4595:4609	5609952	0	True				
ANR	5610416	CallExpression	gs_debug_c ( 'F' )		5609952	0					
ANR	5610417	Callee	gs_debug_c		5609952	0					
ANR	5610418	Identifier	gs_debug_c		5609952	0					
ANR	5610419	ArgumentList	'F'		5609952	1					
ANR	5610420	Argument	'F'		5609952	0					
ANR	5610421	PrimaryExpression	'F'		5609952	0					
ANR	5610422	CompoundStatement		80:33:2967:2967	5609952	1					
ANR	5610423	ExpressionStatement	"dmlprintf2 ( ll -> memory , ""[F]before loop: y=%f y1=%f:\\n"" , fixed2float ( y ) , fixed2float ( y1 ) )"	120:16:4630:4744	5609952	0	True				
ANR	5610424	CallExpression	"dmlprintf2 ( ll -> memory , ""[F]before loop: y=%f y1=%f:\\n"" , fixed2float ( y ) , fixed2float ( y1 ) )"		5609952	0					
ANR	5610425	Callee	dmlprintf2		5609952	0					
ANR	5610426	Identifier	dmlprintf2		5609952	0					
ANR	5610427	ArgumentList	ll -> memory		5609952	1					
ANR	5610428	Argument	ll -> memory		5609952	0					
ANR	5610429	PtrMemberAccess	ll -> memory		5609952	0					
ANR	5610430	Identifier	ll		5609952	0					
ANR	5610431	Identifier	memory		5609952	1					
ANR	5610432	Argument	"""[F]before loop: y=%f y1=%f:\\n"""		5609952	1					
ANR	5610433	PrimaryExpression	"""[F]before loop: y=%f y1=%f:\\n"""		5609952	0					
ANR	5610434	Argument	fixed2float ( y )		5609952	2					
ANR	5610435	CallExpression	fixed2float ( y )		5609952	0					
ANR	5610436	Callee	fixed2float		5609952	0					
ANR	5610437	Identifier	fixed2float		5609952	0					
ANR	5610438	ArgumentList	y		5609952	1					
ANR	5610439	Argument	y		5609952	0					
ANR	5610440	Identifier	y		5609952	0					
ANR	5610441	Argument	fixed2float ( y1 )		5609952	3					
ANR	5610442	CallExpression	fixed2float ( y1 )		5609952	0					
ANR	5610443	Callee	fixed2float		5609952	0					
ANR	5610444	Identifier	fixed2float		5609952	0					
ANR	5610445	ArgumentList	y1		5609952	1					
ANR	5610446	Argument	y1		5609952	0					
ANR	5610447	Identifier	y1		5609952	0					
ANR	5610448	ExpressionStatement	"print_line_list ( ll -> memory , ll -> x_list )"	122:16:4762:4801	5609952	1	True				
ANR	5610449	CallExpression	"print_line_list ( ll -> memory , ll -> x_list )"		5609952	0					
ANR	5610450	Callee	print_line_list		5609952	0					
ANR	5610451	Identifier	print_line_list		5609952	0					
ANR	5610452	ArgumentList	ll -> memory		5609952	1					
ANR	5610453	Argument	ll -> memory		5609952	0					
ANR	5610454	PtrMemberAccess	ll -> memory		5609952	0					
ANR	5610455	Identifier	ll		5609952	0					
ANR	5610456	Identifier	memory		5609952	1					
ANR	5610457	Argument	ll -> x_list		5609952	1					
ANR	5610458	PtrMemberAccess	ll -> x_list		5609952	0					
ANR	5610459	Identifier	ll		5609952	0					
ANR	5610460	Identifier	x_list		5609952	1					
ANR	5610461	Statement	endif	124:2:4819:4823	5609952	12	True				
ANR	5610462	IfStatement	if ( y == y1 )		5609952	13					
ANR	5610463	Condition	y == y1	125:12:4837:4843	5609952	0	True				
ANR	5610464	EqualityExpression	y == y1		5609952	0		==			
ANR	5610465	Identifier	y		5609952	0					
ANR	5610466	Identifier	y1		5609952	1					
ANR	5610467	CompoundStatement		86:21:3201:3201	5609952	1					
ANR	5610468	ExpressionStatement	"code = process_h_segments ( ll , y )"	126:12:4860:4892	5609952	0	True				
ANR	5610469	AssignmentExpression	"code = process_h_segments ( ll , y )"		5609952	0		=			
ANR	5610470	Identifier	code		5609952	0					
ANR	5610471	CallExpression	"process_h_segments ( ll , y )"		5609952	1					
ANR	5610472	Callee	process_h_segments		5609952	0					
ANR	5610473	Identifier	process_h_segments		5609952	0					
ANR	5610474	ArgumentList	ll		5609952	1					
ANR	5610475	Argument	ll		5609952	0					
ANR	5610476	Identifier	ll		5609952	0					
ANR	5610477	Argument	y		5609952	1					
ANR	5610478	Identifier	y		5609952	0					
ANR	5610479	IfStatement	if ( code < 0 )		5609952	1					
ANR	5610480	Condition	code < 0	127:16:4910:4917	5609952	0	True				
ANR	5610481	RelationalExpression	code < 0		5609952	0		<			
ANR	5610482	Identifier	code		5609952	0					
ANR	5610483	PrimaryExpression	0		5609952	1					
ANR	5610484	ReturnStatement	return code ;	128:16:4936:4947	5609952	1	True				
ANR	5610485	Identifier	code		5609952	0					
ANR	5610486	CompoundStatement		90:14:3318:3350	5609952	2					
ANR	5610487	IdentifierDeclStatement	"int code1 = move_al_by_y ( ll , y1 ) ;"	129:14:4963:4995	5609952	0	True				
ANR	5610488	IdentifierDecl	"code1 = move_al_by_y ( ll , y1 )"		5609952	0					
ANR	5610489	IdentifierDeclType	int		5609952	0					
ANR	5610490	Identifier	code1		5609952	1					
ANR	5610491	AssignmentExpression	"code1 = move_al_by_y ( ll , y1 )"		5609952	2		=			
ANR	5610492	Identifier	code1		5609952	0					
ANR	5610493	CallExpression	"move_al_by_y ( ll , y1 )"		5609952	1					
ANR	5610494	Callee	move_al_by_y		5609952	0					
ANR	5610495	Identifier	move_al_by_y		5609952	0					
ANR	5610496	ArgumentList	ll		5609952	1					
ANR	5610497	Argument	ll		5609952	0					
ANR	5610498	Identifier	ll		5609952	0					
ANR	5610499	Argument	y1		5609952	1					
ANR	5610500	Identifier	y1		5609952	0					
ANR	5610501	IfStatement	if ( code1 < 0 )		5609952	1					
ANR	5610502	Condition	code1 < 0	130:20:5017:5025	5609952	0	True				
ANR	5610503	RelationalExpression	code1 < 0		5609952	0		<			
ANR	5610504	Identifier	code1		5609952	0					
ANR	5610505	PrimaryExpression	0		5609952	1					
ANR	5610506	ReturnStatement	return code1 ;	131:20:5048:5060	5609952	1	True				
ANR	5610507	Identifier	code1		5609952	0					
ANR	5610508	IfStatement	if ( code > 0 )		5609952	3					
ANR	5610509	Condition	code > 0	133:16:5092:5099	5609952	0	True				
ANR	5610510	RelationalExpression	code > 0		5609952	0		>			
ANR	5610511	Identifier	code		5609952	0					
ANR	5610512	PrimaryExpression	0		5609952	1					
ANR	5610513	CompoundStatement		94:26:3457:3457	5609952	1					
ANR	5610514	ExpressionStatement	yll = ll -> y_list	134:16:5120:5136	5609952	0	True				
ANR	5610515	AssignmentExpression	yll = ll -> y_list		5609952	0		=			
ANR	5610516	Identifier	yll		5609952	0					
ANR	5610517	PtrMemberAccess	ll -> y_list		5609952	1					
ANR	5610518	Identifier	ll		5609952	0					
ANR	5610519	Identifier	y_list		5609952	1					
ANR	5610520	ContinueStatement	continue ;	135:16:5209:5217	5609952	1	True				
ANR	5610521	IfStatement	if ( y >= y_limit )		5609952	14					
ANR	5610522	Condition	y >= y_limit	139:12:5256:5267	5609952	0	True				
ANR	5610523	RelationalExpression	y >= y_limit		5609952	0		>=			
ANR	5610524	Identifier	y		5609952	0					
ANR	5610525	Identifier	y_limit		5609952	1					
ANR	5610526	BreakStatement	break ;	140:12:5282:5287	5609952	1	True				
ANR	5610527	ExpressionStatement	"covering_pixel_centers = COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"	142:8:5354:5540	5609952	15	True				
ANR	5610528	AssignmentExpression	"covering_pixel_centers = COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"		5609952	0		=			
ANR	5610529	Identifier	covering_pixel_centers		5609952	0					
ANR	5610530	CallExpression	"COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"		5609952	1					
ANR	5610531	Callee	COVERING_PIXEL_CENTERS		5609952	0					
ANR	5610532	Identifier	COVERING_PIXEL_CENTERS		5609952	0					
ANR	5610533	ArgumentList	y		5609952	1					
ANR	5610534	Argument	y		5609952	0					
ANR	5610535	Identifier	y		5609952	0					
ANR	5610536	Argument	y1		5609952	1					
ANR	5610537	Identifier	y1		5609952	0					
ANR	5610538	Argument	! FILL_ADJUST ? 0 : fo . adjust_below		5609952	2					
ANR	5610539	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_below		5609952	0					
ANR	5610540	Condition	! FILL_ADJUST		5609952	0					
ANR	5610541	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5610542	UnaryOperator	!		5609952	0					
ANR	5610543	Identifier	FILL_ADJUST		5609952	1					
ANR	5610544	PrimaryExpression	0		5609952	1					
ANR	5610545	MemberAccess	fo . adjust_below		5609952	2					
ANR	5610546	Identifier	fo		5609952	0					
ANR	5610547	Identifier	adjust_below		5609952	1					
ANR	5610548	Argument	! FILL_ADJUST ? 0 : fo . adjust_above		5609952	3					
ANR	5610549	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_above		5609952	0					
ANR	5610550	Condition	! FILL_ADJUST		5609952	0					
ANR	5610551	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5610552	UnaryOperator	!		5609952	0					
ANR	5610553	Identifier	FILL_ADJUST		5609952	1					
ANR	5610554	PrimaryExpression	0		5609952	1					
ANR	5610555	MemberAccess	fo . adjust_above		5609952	2					
ANR	5610556	Identifier	fo		5609952	0					
ANR	5610557	Identifier	adjust_above		5609952	1					
ANR	5610558	IfStatement	if ( y != y1 )		5609952	16					
ANR	5610559	Condition	y != y1	145:12:5554:5560	5609952	0	True				
ANR	5610560	EqualityExpression	y != y1		5609952	0		!=			
ANR	5610561	Identifier	y		5609952	0					
ANR	5610562	Identifier	y1		5609952	1					
ANR	5610563	CompoundStatement		106:21:3918:3918	5609952	1					
ANR	5610564	ExpressionStatement	"intersect_al ( ll , y , & y1 , ( covering_pixel_centers ? 1 : - 1 ) , all_bands )"	146:12:5577:5647	5609952	0	True				
ANR	5610565	CallExpression	"intersect_al ( ll , y , & y1 , ( covering_pixel_centers ? 1 : - 1 ) , all_bands )"		5609952	0					
ANR	5610566	Callee	intersect_al		5609952	0					
ANR	5610567	Identifier	intersect_al		5609952	0					
ANR	5610568	ArgumentList	ll		5609952	1					
ANR	5610569	Argument	ll		5609952	0					
ANR	5610570	Identifier	ll		5609952	0					
ANR	5610571	Argument	y		5609952	1					
ANR	5610572	Identifier	y		5609952	0					
ANR	5610573	Argument	& y1		5609952	2					
ANR	5610574	UnaryOperationExpression	& y1		5609952	0					
ANR	5610575	UnaryOperator	&		5609952	0					
ANR	5610576	Identifier	y1		5609952	1					
ANR	5610577	Argument	covering_pixel_centers ? 1 : - 1		5609952	3					
ANR	5610578	ConditionalExpression	covering_pixel_centers ? 1 : - 1		5609952	0					
ANR	5610579	Condition	covering_pixel_centers		5609952	0					
ANR	5610580	Identifier	covering_pixel_centers		5609952	0					
ANR	5610581	PrimaryExpression	1		5609952	1					
ANR	5610582	UnaryOperationExpression	- 1		5609952	2					
ANR	5610583	UnaryOperator	-		5609952	0					
ANR	5610584	PrimaryExpression	1		5609952	1					
ANR	5610585	Argument	all_bands		5609952	4					
ANR	5610586	Identifier	all_bands		5609952	0					
ANR	5610587	ExpressionStatement	"covering_pixel_centers = COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"	147:12:5682:5868	5609952	1	True				
ANR	5610588	AssignmentExpression	"covering_pixel_centers = COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"		5609952	0		=			
ANR	5610589	Identifier	covering_pixel_centers		5609952	0					
ANR	5610590	CallExpression	"COVERING_PIXEL_CENTERS ( y , y1 , ( ! FILL_ADJUST ? 0 : fo . adjust_below ) , ( ! FILL_ADJUST ? 0 : fo . adjust_above ) )"		5609952	1					
ANR	5610591	Callee	COVERING_PIXEL_CENTERS		5609952	0					
ANR	5610592	Identifier	COVERING_PIXEL_CENTERS		5609952	0					
ANR	5610593	ArgumentList	y		5609952	1					
ANR	5610594	Argument	y		5609952	0					
ANR	5610595	Identifier	y		5609952	0					
ANR	5610596	Argument	y1		5609952	1					
ANR	5610597	Identifier	y1		5609952	0					
ANR	5610598	Argument	! FILL_ADJUST ? 0 : fo . adjust_below		5609952	2					
ANR	5610599	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_below		5609952	0					
ANR	5610600	Condition	! FILL_ADJUST		5609952	0					
ANR	5610601	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5610602	UnaryOperator	!		5609952	0					
ANR	5610603	Identifier	FILL_ADJUST		5609952	1					
ANR	5610604	PrimaryExpression	0		5609952	1					
ANR	5610605	MemberAccess	fo . adjust_below		5609952	2					
ANR	5610606	Identifier	fo		5609952	0					
ANR	5610607	Identifier	adjust_below		5609952	1					
ANR	5610608	Argument	! FILL_ADJUST ? 0 : fo . adjust_above		5609952	3					
ANR	5610609	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_above		5609952	0					
ANR	5610610	Condition	! FILL_ADJUST		5609952	0					
ANR	5610611	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5610612	UnaryOperator	!		5609952	0					
ANR	5610613	Identifier	FILL_ADJUST		5609952	1					
ANR	5610614	PrimaryExpression	0		5609952	1					
ANR	5610615	MemberAccess	fo . adjust_above		5609952	2					
ANR	5610616	Identifier	fo		5609952	0					
ANR	5610617	Identifier	adjust_above		5609952	1					
ANR	5610618	IfStatement	if ( covering_pixel_centers || all_bands )		5609952	17					
ANR	5610619	Condition	covering_pixel_centers || all_bands	152:12:5956:5990	5609952	0	True				
ANR	5610620	OrExpression	covering_pixel_centers || all_bands		5609952	0		||			
ANR	5610621	Identifier	covering_pixel_centers		5609952	0					
ANR	5610622	Identifier	all_bands		5609952	1					
ANR	5610623	CompoundStatement		115:12:4390:4413	5609952	1					
ANR	5610624	IdentifierDeclStatement	int inside = 0 ;	153:12:6007:6021	5609952	0	True				
ANR	5610625	IdentifierDecl	inside = 0		5609952	0					
ANR	5610626	IdentifierDeclType	int		5609952	0					
ANR	5610627	Identifier	inside		5609952	1					
ANR	5610628	AssignmentExpression	inside = 0		5609952	2		=			
ANR	5610629	Identifier	inside		5609952	0					
ANR	5610630	PrimaryExpression	0		5609952	1					
ANR	5610631	IdentifierDeclStatement	active_line * flp = NULL ;	154:12:6035:6058	5609952	1	True				
ANR	5610632	IdentifierDecl	* flp = NULL		5609952	0					
ANR	5610633	IdentifierDeclType	active_line *		5609952	0					
ANR	5610634	Identifier	flp		5609952	1					
ANR	5610635	AssignmentExpression	* flp = NULL		5609952	2		=			
ANR	5610636	Identifier	NULL		5609952	0					
ANR	5610637	Identifier	NULL		5609952	1					
ANR	5610638	IfStatement	if ( SMART_WINDING )		5609952	2					
ANR	5610639	Condition	SMART_WINDING	156:16:6077:6089	5609952	0	True				
ANR	5610640	Identifier	SMART_WINDING		5609952	0					
ANR	5610641	ExpressionStatement	"memset ( ll -> windings , 0 , sizeof ( ll -> windings [ 0 ] ) * ll -> contour_count )"	157:16:6108:6176	5609952	1	True				
ANR	5610642	CallExpression	"memset ( ll -> windings , 0 , sizeof ( ll -> windings [ 0 ] ) * ll -> contour_count )"		5609952	0					
ANR	5610643	Callee	memset		5609952	0					
ANR	5610644	Identifier	memset		5609952	0					
ANR	5610645	ArgumentList	ll -> windings		5609952	1					
ANR	5610646	Argument	ll -> windings		5609952	0					
ANR	5610647	PtrMemberAccess	ll -> windings		5609952	0					
ANR	5610648	Identifier	ll		5609952	0					
ANR	5610649	Identifier	windings		5609952	1					
ANR	5610650	Argument	0		5609952	1					
ANR	5610651	PrimaryExpression	0		5609952	0					
ANR	5610652	Argument	sizeof ( ll -> windings [ 0 ] ) * ll -> contour_count		5609952	2					
ANR	5610653	MultiplicativeExpression	sizeof ( ll -> windings [ 0 ] ) * ll -> contour_count		5609952	0		*			
ANR	5610654	SizeofExpression	sizeof ( ll -> windings [ 0 ] )		5609952	0					
ANR	5610655	Sizeof	sizeof		5609952	0					
ANR	5610656	ArrayIndexing	ll -> windings [ 0 ]		5609952	1					
ANR	5610657	PtrMemberAccess	ll -> windings		5609952	0					
ANR	5610658	Identifier	ll		5609952	0					
ANR	5610659	Identifier	windings		5609952	1					
ANR	5610660	PrimaryExpression	0		5609952	1					
ANR	5610661	PtrMemberAccess	ll -> contour_count		5609952	1					
ANR	5610662	Identifier	ll		5609952	0					
ANR	5610663	Identifier	contour_count		5609952	1					
ANR	5610664	ExpressionStatement	INCR ( band )	158:12:6190:6200	5609952	3	True				
ANR	5610665	CallExpression	INCR ( band )		5609952	0					
ANR	5610666	Callee	INCR		5609952	0					
ANR	5610667	Identifier	INCR		5609952	0					
ANR	5610668	ArgumentList	band		5609952	1					
ANR	5610669	Argument	band		5609952	0					
ANR	5610670	Identifier	band		5609952	0					
ANR	5610671	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = alp -> next )		5609952	4					
ANR	5610672	ForInit	alp = ll -> x_list ;	160:17:6257:6273	5609952	0	True				
ANR	5610673	AssignmentExpression	alp = ll -> x_list		5609952	0		=			
ANR	5610674	Identifier	alp		5609952	0					
ANR	5610675	PtrMemberAccess	ll -> x_list		5609952	1					
ANR	5610676	Identifier	ll		5609952	0					
ANR	5610677	Identifier	x_list		5609952	1					
ANR	5610678	Condition	alp != 0	160:35:6275:6282	5609952	1	True				
ANR	5610679	EqualityExpression	alp != 0		5609952	0		!=			
ANR	5610680	Identifier	alp		5609952	0					
ANR	5610681	PrimaryExpression	0		5609952	1					
ANR	5610682	AssignmentExpression	alp = alp -> next	160:45:6285:6299	5609952	2	True	=			
ANR	5610683	Identifier	alp		5609952	0					
ANR	5610684	PtrMemberAccess	alp -> next		5609952	1					
ANR	5610685	Identifier	alp		5609952	0					
ANR	5610686	Identifier	next		5609952	1					
ANR	5610687	CompoundStatement		122:16:4675:4683	5609952	3					
ANR	5610688	IdentifierDeclStatement	int code ;	161:16:6320:6328	5609952	0	True				
ANR	5610689	IdentifierDecl	code		5609952	0					
ANR	5610690	IdentifierDeclType	int		5609952	0					
ANR	5610691	Identifier	code		5609952	1					
ANR	5610692	ExpressionStatement	"print_al ( ll -> memory , ""step"" , alp )"	163:16:6347:6380	5609952	1	True				
ANR	5610693	CallExpression	"print_al ( ll -> memory , ""step"" , alp )"		5609952	0					
ANR	5610694	Callee	print_al		5609952	0					
ANR	5610695	Identifier	print_al		5609952	0					
ANR	5610696	ArgumentList	ll -> memory		5609952	1					
ANR	5610697	Argument	ll -> memory		5609952	0					
ANR	5610698	PtrMemberAccess	ll -> memory		5609952	0					
ANR	5610699	Identifier	ll		5609952	0					
ANR	5610700	Identifier	memory		5609952	1					
ANR	5610701	Argument	"""step"""		5609952	1					
ANR	5610702	PrimaryExpression	"""step"""		5609952	0					
ANR	5610703	Argument	alp		5609952	2					
ANR	5610704	Identifier	alp		5609952	0					
ANR	5610705	ExpressionStatement	INCR ( band_step )	164:16:6398:6413	5609952	2	True				
ANR	5610706	CallExpression	INCR ( band_step )		5609952	0					
ANR	5610707	Callee	INCR		5609952	0					
ANR	5610708	Identifier	INCR		5609952	0					
ANR	5610709	ArgumentList	band_step		5609952	1					
ANR	5610710	Argument	band_step		5609952	0					
ANR	5610711	Identifier	band_step		5609952	0					
ANR	5610712	IfStatement	"if ( ! INSIDE_PATH_P ( inside , rule ) )"		5609952	3					
ANR	5610713	Condition	"! INSIDE_PATH_P ( inside , rule )"	165:20:6435:6462	5609952	0	True				
ANR	5610714	UnaryOperationExpression	"! INSIDE_PATH_P ( inside , rule )"		5609952	0					
ANR	5610715	UnaryOperator	!		5609952	0					
ANR	5610716	CallExpression	"INSIDE_PATH_P ( inside , rule )"		5609952	1					
ANR	5610717	Callee	INSIDE_PATH_P		5609952	0					
ANR	5610718	Identifier	INSIDE_PATH_P		5609952	0					
ANR	5610719	ArgumentList	inside		5609952	1					
ANR	5610720	Argument	inside		5609952	0					
ANR	5610721	Identifier	inside		5609952	0					
ANR	5610722	Argument	rule		5609952	1					
ANR	5610723	Identifier	rule		5609952	0					
ANR	5610724	CompoundStatement		126:50:4820:4820	5609952	1					
ANR	5610725	ExpressionStatement	"ADVANCE_WINDING ( inside , alp , ll )"	166:20:6508:6540	5609952	0	True				
ANR	5610726	CallExpression	"ADVANCE_WINDING ( inside , alp , ll )"		5609952	0					
ANR	5610727	Callee	ADVANCE_WINDING		5609952	0					
ANR	5610728	Identifier	ADVANCE_WINDING		5609952	0					
ANR	5610729	ArgumentList	inside		5609952	1					
ANR	5610730	Argument	inside		5609952	0					
ANR	5610731	Identifier	inside		5609952	0					
ANR	5610732	Argument	alp		5609952	1					
ANR	5610733	Identifier	alp		5609952	0					
ANR	5610734	Argument	ll		5609952	2					
ANR	5610735	Identifier	ll		5609952	0					
ANR	5610736	IfStatement	"if ( INSIDE_PATH_P ( inside , rule ) )"		5609952	1					
ANR	5610737	Condition	"INSIDE_PATH_P ( inside , rule )"	167:24:6566:6592	5609952	0	True				
ANR	5610738	CallExpression	"INSIDE_PATH_P ( inside , rule )"		5609952	0					
ANR	5610739	Callee	INSIDE_PATH_P		5609952	0					
ANR	5610740	Identifier	INSIDE_PATH_P		5609952	0					
ANR	5610741	ArgumentList	inside		5609952	1					
ANR	5610742	Argument	inside		5609952	0					
ANR	5610743	Identifier	inside		5609952	0					
ANR	5610744	Argument	rule		5609952	1					
ANR	5610745	Identifier	rule		5609952	0					
ANR	5610746	ExpressionStatement	flp = alp	168:24:6640:6649	5609952	1	True				
ANR	5610747	AssignmentExpression	flp = alp		5609952	0		=			
ANR	5610748	Identifier	flp		5609952	0					
ANR	5610749	Identifier	alp		5609952	1					
ANR	5610750	ContinueStatement	continue ;	169:20:6671:6679	5609952	2	True				
ANR	5610751	ExpressionStatement	"ADVANCE_WINDING ( inside , alp , ll )"	172:16:6773:6805	5609952	4	True				
ANR	5610752	CallExpression	"ADVANCE_WINDING ( inside , alp , ll )"		5609952	0					
ANR	5610753	Callee	ADVANCE_WINDING		5609952	0					
ANR	5610754	Identifier	ADVANCE_WINDING		5609952	0					
ANR	5610755	ArgumentList	inside		5609952	1					
ANR	5610756	Argument	inside		5609952	0					
ANR	5610757	Identifier	inside		5609952	0					
ANR	5610758	Argument	alp		5609952	1					
ANR	5610759	Identifier	alp		5609952	0					
ANR	5610760	Argument	ll		5609952	2					
ANR	5610761	Identifier	ll		5609952	0					
ANR	5610762	IfStatement	"if ( INSIDE_PATH_P ( inside , rule ) )"		5609952	5					
ANR	5610763	Condition	"INSIDE_PATH_P ( inside , rule )"	173:20:6827:6853	5609952	0	True				
ANR	5610764	CallExpression	"INSIDE_PATH_P ( inside , rule )"		5609952	0					
ANR	5610765	Callee	INSIDE_PATH_P		5609952	0					
ANR	5610766	Identifier	INSIDE_PATH_P		5609952	0					
ANR	5610767	ArgumentList	inside		5609952	1					
ANR	5610768	Argument	inside		5609952	0					
ANR	5610769	Identifier	inside		5609952	0					
ANR	5610770	Argument	rule		5609952	1					
ANR	5610771	Identifier	rule		5609952	0					
ANR	5610772	ContinueStatement	continue ;	174:20:6902:6910	5609952	1	True				
ANR	5610773	IfStatement	if ( alp -> next != NULL && alp -> x_current == alp -> next -> x_current && alp -> x_next == alp -> next -> x_next )		5609952	6					
ANR	5610774	Condition	alp -> next != NULL && alp -> x_current == alp -> next -> x_current && alp -> x_next == alp -> next -> x_next	177:20:7053:7187	5609952	0	True				
ANR	5610775	AndExpression	alp -> next != NULL && alp -> x_current == alp -> next -> x_current && alp -> x_next == alp -> next -> x_next		5609952	0		&&			
ANR	5610776	EqualityExpression	alp -> next != NULL		5609952	0		!=			
ANR	5610777	PtrMemberAccess	alp -> next		5609952	0					
ANR	5610778	Identifier	alp		5609952	0					
ANR	5610779	Identifier	next		5609952	1					
ANR	5610780	Identifier	NULL		5609952	1					
ANR	5610781	AndExpression	alp -> x_current == alp -> next -> x_current && alp -> x_next == alp -> next -> x_next		5609952	1		&&			
ANR	5610782	EqualityExpression	alp -> x_current == alp -> next -> x_current		5609952	0		==			
ANR	5610783	PtrMemberAccess	alp -> x_current		5609952	0					
ANR	5610784	Identifier	alp		5609952	0					
ANR	5610785	Identifier	x_current		5609952	1					
ANR	5610786	PtrMemberAccess	alp -> next -> x_current		5609952	1					
ANR	5610787	PtrMemberAccess	alp -> next		5609952	0					
ANR	5610788	Identifier	alp		5609952	0					
ANR	5610789	Identifier	next		5609952	1					
ANR	5610790	Identifier	x_current		5609952	1					
ANR	5610791	EqualityExpression	alp -> x_next == alp -> next -> x_next		5609952	1		==			
ANR	5610792	PtrMemberAccess	alp -> x_next		5609952	0					
ANR	5610793	Identifier	alp		5609952	0					
ANR	5610794	Identifier	x_next		5609952	1					
ANR	5610795	PtrMemberAccess	alp -> next -> x_next		5609952	1					
ANR	5610796	PtrMemberAccess	alp -> next		5609952	0					
ANR	5610797	Identifier	alp		5609952	0					
ANR	5610798	Identifier	next		5609952	1					
ANR	5610799	Identifier	x_next		5609952	1					
ANR	5610800	CompoundStatement		140:54:5545:5545	5609952	1					
ANR	5610801	ExpressionStatement	alp = alp -> next	193:20:8070:8085	5609952	0	True				
ANR	5610802	AssignmentExpression	alp = alp -> next		5609952	0		=			
ANR	5610803	Identifier	alp		5609952	0					
ANR	5610804	PtrMemberAccess	alp -> next		5609952	1					
ANR	5610805	Identifier	alp		5609952	0					
ANR	5610806	Identifier	next		5609952	1					
ANR	5610807	ExpressionStatement	"ADVANCE_WINDING ( inside , alp , ll )"	194:20:8107:8139	5609952	1	True				
ANR	5610808	CallExpression	"ADVANCE_WINDING ( inside , alp , ll )"		5609952	0					
ANR	5610809	Callee	ADVANCE_WINDING		5609952	0					
ANR	5610810	Identifier	ADVANCE_WINDING		5609952	0					
ANR	5610811	ArgumentList	inside		5609952	1					
ANR	5610812	Argument	inside		5609952	0					
ANR	5610813	Identifier	inside		5609952	0					
ANR	5610814	Argument	alp		5609952	1					
ANR	5610815	Identifier	alp		5609952	0					
ANR	5610816	Argument	ll		5609952	2					
ANR	5610817	Identifier	ll		5609952	0					
ANR	5610818	ContinueStatement	continue ;	195:20:8161:8169	5609952	2	True				
ANR	5610819	ExpressionStatement	INCR ( band_fill )	198:16:8284:8299	5609952	7	True				
ANR	5610820	CallExpression	INCR ( band_fill )		5609952	0					
ANR	5610821	Callee	INCR		5609952	0					
ANR	5610822	Identifier	INCR		5609952	0					
ANR	5610823	ArgumentList	band_fill		5609952	1					
ANR	5610824	Argument	band_fill		5609952	0					
ANR	5610825	Identifier	band_fill		5609952	0					
ANR	5610826	IfStatement	if ( FILL_ADJUST && ! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x ) && ( fo . adjust_below | fo . adjust_above ) != 0 )		5609952	8					
ANR	5610827	Condition	FILL_ADJUST && ! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x ) && ( fo . adjust_below | fo . adjust_above ) != 0	199:20:8321:8458	5609952	0	True				
ANR	5610828	AndExpression	FILL_ADJUST && ! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x ) && ( fo . adjust_below | fo . adjust_above ) != 0		5609952	0		&&			
ANR	5610829	Identifier	FILL_ADJUST		5609952	0					
ANR	5610830	AndExpression	! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x ) && ( fo . adjust_below | fo . adjust_above ) != 0		5609952	1		&&			
ANR	5610831	UnaryOperationExpression	! ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x )		5609952	0					
ANR	5610832	UnaryOperator	!		5609952	0					
ANR	5610833	AndExpression	flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x		5609952	1		&&			
ANR	5610834	EqualityExpression	flp -> end . x == flp -> start . x		5609952	0		==			
ANR	5610835	MemberAccess	flp -> end . x		5609952	0					
ANR	5610836	PtrMemberAccess	flp -> end		5609952	0					
ANR	5610837	Identifier	flp		5609952	0					
ANR	5610838	Identifier	end		5609952	1					
ANR	5610839	Identifier	x		5609952	1					
ANR	5610840	MemberAccess	flp -> start . x		5609952	1					
ANR	5610841	PtrMemberAccess	flp -> start		5609952	0					
ANR	5610842	Identifier	flp		5609952	0					
ANR	5610843	Identifier	start		5609952	1					
ANR	5610844	Identifier	x		5609952	1					
ANR	5610845	EqualityExpression	alp -> end . x == alp -> start . x		5609952	1		==			
ANR	5610846	MemberAccess	alp -> end . x		5609952	0					
ANR	5610847	PtrMemberAccess	alp -> end		5609952	0					
ANR	5610848	Identifier	alp		5609952	0					
ANR	5610849	Identifier	end		5609952	1					
ANR	5610850	Identifier	x		5609952	1					
ANR	5610851	MemberAccess	alp -> start . x		5609952	1					
ANR	5610852	PtrMemberAccess	alp -> start		5609952	0					
ANR	5610853	Identifier	alp		5609952	0					
ANR	5610854	Identifier	start		5609952	1					
ANR	5610855	Identifier	x		5609952	1					
ANR	5610856	EqualityExpression	( fo . adjust_below | fo . adjust_above ) != 0		5609952	1		!=			
ANR	5610857	InclusiveOrExpression	fo . adjust_below | fo . adjust_above		5609952	0		|			
ANR	5610858	MemberAccess	fo . adjust_below		5609952	0					
ANR	5610859	Identifier	fo		5609952	0					
ANR	5610860	Identifier	adjust_below		5609952	1					
ANR	5610861	MemberAccess	fo . adjust_above		5609952	1					
ANR	5610862	Identifier	fo		5609952	0					
ANR	5610863	Identifier	adjust_above		5609952	1					
ANR	5610864	PrimaryExpression	0		5609952	1					
ANR	5610865	CompoundStatement		161:62:6816:6816	5609952	1					
ANR	5610866	IfStatement	if ( FILL_DIRECT )		5609952	0					
ANR	5610867	Condition	FILL_DIRECT	201:24:8487:8497	5609952	0	True				
ANR	5610868	Identifier	FILL_DIRECT		5609952	0					
ANR	5610869	ExpressionStatement	"code = slant_into_trapezoids__fd ( ll , flp , alp , y , y1 )"	202:24:8524:8577	5609952	1	True				
ANR	5610870	AssignmentExpression	"code = slant_into_trapezoids__fd ( ll , flp , alp , y , y1 )"		5609952	0		=			
ANR	5610871	Identifier	code		5609952	0					
ANR	5610872	CallExpression	"slant_into_trapezoids__fd ( ll , flp , alp , y , y1 )"		5609952	1					
ANR	5610873	Callee	slant_into_trapezoids__fd		5609952	0					
ANR	5610874	Identifier	slant_into_trapezoids__fd		5609952	0					
ANR	5610875	ArgumentList	ll		5609952	1					
ANR	5610876	Argument	ll		5609952	0					
ANR	5610877	Identifier	ll		5609952	0					
ANR	5610878	Argument	flp		5609952	1					
ANR	5610879	Identifier	flp		5609952	0					
ANR	5610880	Argument	alp		5609952	2					
ANR	5610881	Identifier	alp		5609952	0					
ANR	5610882	Argument	y		5609952	3					
ANR	5610883	Identifier	y		5609952	0					
ANR	5610884	Argument	y1		5609952	4					
ANR	5610885	Identifier	y1		5609952	0					
ANR	5610886	ElseStatement	else		5609952	0					
ANR	5610887	ExpressionStatement	"code = slant_into_trapezoids__nd ( ll , flp , alp , y , y1 )"	204:24:8628:8681	5609952	0	True				
ANR	5610888	AssignmentExpression	"code = slant_into_trapezoids__nd ( ll , flp , alp , y , y1 )"		5609952	0		=			
ANR	5610889	Identifier	code		5609952	0					
ANR	5610890	CallExpression	"slant_into_trapezoids__nd ( ll , flp , alp , y , y1 )"		5609952	1					
ANR	5610891	Callee	slant_into_trapezoids__nd		5609952	0					
ANR	5610892	Identifier	slant_into_trapezoids__nd		5609952	0					
ANR	5610893	ArgumentList	ll		5609952	1					
ANR	5610894	Argument	ll		5609952	0					
ANR	5610895	Identifier	ll		5609952	0					
ANR	5610896	Argument	flp		5609952	1					
ANR	5610897	Identifier	flp		5609952	0					
ANR	5610898	Argument	alp		5609952	2					
ANR	5610899	Identifier	alp		5609952	0					
ANR	5610900	Argument	y		5609952	3					
ANR	5610901	Identifier	y		5609952	0					
ANR	5610902	Argument	y1		5609952	4					
ANR	5610903	Identifier	y1		5609952	0					
ANR	5610904	ElseStatement	else		5609952	0					
ANR	5610905	CompoundStatement		168:20:7138:7172	5609952	0					
ANR	5610906	IdentifierDeclStatement	"fixed ybot = max ( y , fo . pbox -> p . y ) ;"	206:20:8728:8761	5609952	0	True				
ANR	5610907	IdentifierDecl	"ybot = max ( y , fo . pbox -> p . y )"		5609952	0					
ANR	5610908	IdentifierDeclType	fixed		5609952	0					
ANR	5610909	Identifier	ybot		5609952	1					
ANR	5610910	AssignmentExpression	"ybot = max ( y , fo . pbox -> p . y )"		5609952	2		=			
ANR	5610911	Identifier	ybot		5609952	0					
ANR	5610912	CallExpression	"max ( y , fo . pbox -> p . y )"		5609952	1					
ANR	5610913	Callee	max		5609952	0					
ANR	5610914	Identifier	max		5609952	0					
ANR	5610915	ArgumentList	y		5609952	1					
ANR	5610916	Argument	y		5609952	0					
ANR	5610917	Identifier	y		5609952	0					
ANR	5610918	Argument	fo . pbox -> p . y		5609952	1					
ANR	5610919	MemberAccess	fo . pbox -> p . y		5609952	0					
ANR	5610920	PtrMemberAccess	fo . pbox -> p		5609952	0					
ANR	5610921	MemberAccess	fo . pbox		5609952	0					
ANR	5610922	Identifier	fo		5609952	0					
ANR	5610923	Identifier	pbox		5609952	1					
ANR	5610924	Identifier	p		5609952	1					
ANR	5610925	Identifier	y		5609952	1					
ANR	5610926	IdentifierDeclStatement	"fixed ytop = min ( y1 , fo . pbox -> q . y ) ;"	207:20:8783:8817	5609952	1	True				
ANR	5610927	IdentifierDecl	"ytop = min ( y1 , fo . pbox -> q . y )"		5609952	0					
ANR	5610928	IdentifierDeclType	fixed		5609952	0					
ANR	5610929	Identifier	ytop		5609952	1					
ANR	5610930	AssignmentExpression	"ytop = min ( y1 , fo . pbox -> q . y )"		5609952	2		=			
ANR	5610931	Identifier	ytop		5609952	0					
ANR	5610932	CallExpression	"min ( y1 , fo . pbox -> q . y )"		5609952	1					
ANR	5610933	Callee	min		5609952	0					
ANR	5610934	Identifier	min		5609952	0					
ANR	5610935	ArgumentList	y1		5609952	1					
ANR	5610936	Argument	y1		5609952	0					
ANR	5610937	Identifier	y1		5609952	0					
ANR	5610938	Argument	fo . pbox -> q . y		5609952	1					
ANR	5610939	MemberAccess	fo . pbox -> q . y		5609952	0					
ANR	5610940	PtrMemberAccess	fo . pbox -> q		5609952	0					
ANR	5610941	MemberAccess	fo . pbox		5609952	0					
ANR	5610942	Identifier	fo		5609952	0					
ANR	5610943	Identifier	pbox		5609952	1					
ANR	5610944	Identifier	q		5609952	1					
ANR	5610945	Identifier	y		5609952	1					
ANR	5610946	IfStatement	if ( IS_SPOTAN )		5609952	2					
ANR	5610947	Condition	IS_SPOTAN	209:24:8844:8852	5609952	0	True				
ANR	5610948	Identifier	IS_SPOTAN		5609952	0					
ANR	5610949	CompoundStatement		170:35:7210:7210	5609952	1					
ANR	5610950	ExpressionStatement	"code = gx_san_trap_store ( ( gx_device_spot_analyzer * ) fo . dev , y , y1 , flp -> x_current , alp -> x_current , flp -> x_next , alp -> x_next , flp -> pseg , alp -> pseg , flp -> direction , alp -> direction )"	212:24:9051:9285	5609952	0	True				
ANR	5610951	AssignmentExpression	"code = gx_san_trap_store ( ( gx_device_spot_analyzer * ) fo . dev , y , y1 , flp -> x_current , alp -> x_current , flp -> x_next , alp -> x_next , flp -> pseg , alp -> pseg , flp -> direction , alp -> direction )"		5609952	0		=			
ANR	5610952	Identifier	code		5609952	0					
ANR	5610953	CallExpression	"gx_san_trap_store ( ( gx_device_spot_analyzer * ) fo . dev , y , y1 , flp -> x_current , alp -> x_current , flp -> x_next , alp -> x_next , flp -> pseg , alp -> pseg , flp -> direction , alp -> direction )"		5609952	1					
ANR	5610954	Callee	gx_san_trap_store		5609952	0					
ANR	5610955	Identifier	gx_san_trap_store		5609952	0					
ANR	5610956	ArgumentList	( gx_device_spot_analyzer * ) fo . dev		5609952	1					
ANR	5610957	Argument	( gx_device_spot_analyzer * ) fo . dev		5609952	0					
ANR	5610958	CastExpression	( gx_device_spot_analyzer * ) fo . dev		5609952	0					
ANR	5610959	CastTarget	gx_device_spot_analyzer *		5609952	0					
ANR	5610960	MemberAccess	fo . dev		5609952	1					
ANR	5610961	Identifier	fo		5609952	0					
ANR	5610962	Identifier	dev		5609952	1					
ANR	5610963	Argument	y		5609952	1					
ANR	5610964	Identifier	y		5609952	0					
ANR	5610965	Argument	y1		5609952	2					
ANR	5610966	Identifier	y1		5609952	0					
ANR	5610967	Argument	flp -> x_current		5609952	3					
ANR	5610968	PtrMemberAccess	flp -> x_current		5609952	0					
ANR	5610969	Identifier	flp		5609952	0					
ANR	5610970	Identifier	x_current		5609952	1					
ANR	5610971	Argument	alp -> x_current		5609952	4					
ANR	5610972	PtrMemberAccess	alp -> x_current		5609952	0					
ANR	5610973	Identifier	alp		5609952	0					
ANR	5610974	Identifier	x_current		5609952	1					
ANR	5610975	Argument	flp -> x_next		5609952	5					
ANR	5610976	PtrMemberAccess	flp -> x_next		5609952	0					
ANR	5610977	Identifier	flp		5609952	0					
ANR	5610978	Identifier	x_next		5609952	1					
ANR	5610979	Argument	alp -> x_next		5609952	6					
ANR	5610980	PtrMemberAccess	alp -> x_next		5609952	0					
ANR	5610981	Identifier	alp		5609952	0					
ANR	5610982	Identifier	x_next		5609952	1					
ANR	5610983	Argument	flp -> pseg		5609952	7					
ANR	5610984	PtrMemberAccess	flp -> pseg		5609952	0					
ANR	5610985	Identifier	flp		5609952	0					
ANR	5610986	Identifier	pseg		5609952	1					
ANR	5610987	Argument	alp -> pseg		5609952	8					
ANR	5610988	PtrMemberAccess	alp -> pseg		5609952	0					
ANR	5610989	Identifier	alp		5609952	0					
ANR	5610990	Identifier	pseg		5609952	1					
ANR	5610991	Argument	flp -> direction		5609952	9					
ANR	5610992	PtrMemberAccess	flp -> direction		5609952	0					
ANR	5610993	Identifier	flp		5609952	0					
ANR	5610994	Identifier	direction		5609952	1					
ANR	5610995	Argument	alp -> direction		5609952	10					
ANR	5610996	PtrMemberAccess	alp -> direction		5609952	0					
ANR	5610997	Identifier	alp		5609952	0					
ANR	5610998	Identifier	direction		5609952	1					
ANR	5610999	ElseStatement	else		5609952	0					
ANR	5611000	CompoundStatement		176:27:7669:7669	5609952	0					
ANR	5611001	IfStatement	if ( flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x )		5609952	0					
ANR	5611002	Condition	flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x	216:28:9344:9399	5609952	0	True				
ANR	5611003	AndExpression	flp -> end . x == flp -> start . x && alp -> end . x == alp -> start . x		5609952	0		&&			
ANR	5611004	EqualityExpression	flp -> end . x == flp -> start . x		5609952	0		==			
ANR	5611005	MemberAccess	flp -> end . x		5609952	0					
ANR	5611006	PtrMemberAccess	flp -> end		5609952	0					
ANR	5611007	Identifier	flp		5609952	0					
ANR	5611008	Identifier	end		5609952	1					
ANR	5611009	Identifier	x		5609952	1					
ANR	5611010	MemberAccess	flp -> start . x		5609952	1					
ANR	5611011	PtrMemberAccess	flp -> start		5609952	0					
ANR	5611012	Identifier	flp		5609952	0					
ANR	5611013	Identifier	start		5609952	1					
ANR	5611014	Identifier	x		5609952	1					
ANR	5611015	EqualityExpression	alp -> end . x == alp -> start . x		5609952	1		==			
ANR	5611016	MemberAccess	alp -> end . x		5609952	0					
ANR	5611017	PtrMemberAccess	alp -> end		5609952	0					
ANR	5611018	Identifier	alp		5609952	0					
ANR	5611019	Identifier	end		5609952	1					
ANR	5611020	Identifier	x		5609952	1					
ANR	5611021	MemberAccess	alp -> start . x		5609952	1					
ANR	5611022	PtrMemberAccess	alp -> start		5609952	0					
ANR	5611023	Identifier	alp		5609952	0					
ANR	5611024	Identifier	start		5609952	1					
ANR	5611025	Identifier	x		5609952	1					
ANR	5611026	CompoundStatement		177:86:7757:7757	5609952	1					
ANR	5611027	IfStatement	if ( FILL_ADJUST )		5609952	0					
ANR	5611028	Condition	FILL_ADJUST	217:32:9436:9446	5609952	0	True				
ANR	5611029	Identifier	FILL_ADJUST		5609952	0					
ANR	5611030	CompoundStatement		178:45:7804:7804	5609952	1					
ANR	5611031	ExpressionStatement	"ybot = max ( y - fo . adjust_below , fo . pbox -> p . y )"	218:32:9483:9529	5609952	0	True				
ANR	5611032	AssignmentExpression	"ybot = max ( y - fo . adjust_below , fo . pbox -> p . y )"		5609952	0		=			
ANR	5611033	Identifier	ybot		5609952	0					
ANR	5611034	CallExpression	"max ( y - fo . adjust_below , fo . pbox -> p . y )"		5609952	1					
ANR	5611035	Callee	max		5609952	0					
ANR	5611036	Identifier	max		5609952	0					
ANR	5611037	ArgumentList	y - fo . adjust_below		5609952	1					
ANR	5611038	Argument	y - fo . adjust_below		5609952	0					
ANR	5611039	AdditiveExpression	y - fo . adjust_below		5609952	0		-			
ANR	5611040	Identifier	y		5609952	0					
ANR	5611041	MemberAccess	fo . adjust_below		5609952	1					
ANR	5611042	Identifier	fo		5609952	0					
ANR	5611043	Identifier	adjust_below		5609952	1					
ANR	5611044	Argument	fo . pbox -> p . y		5609952	1					
ANR	5611045	MemberAccess	fo . pbox -> p . y		5609952	0					
ANR	5611046	PtrMemberAccess	fo . pbox -> p		5609952	0					
ANR	5611047	MemberAccess	fo . pbox		5609952	0					
ANR	5611048	Identifier	fo		5609952	0					
ANR	5611049	Identifier	pbox		5609952	1					
ANR	5611050	Identifier	p		5609952	1					
ANR	5611051	Identifier	y		5609952	1					
ANR	5611052	ExpressionStatement	"ytop = min ( y1 + fo . adjust_above , fo . pbox -> q . y )"	219:32:9563:9609	5609952	1	True				
ANR	5611053	AssignmentExpression	"ytop = min ( y1 + fo . adjust_above , fo . pbox -> q . y )"		5609952	0		=			
ANR	5611054	Identifier	ytop		5609952	0					
ANR	5611055	CallExpression	"min ( y1 + fo . adjust_above , fo . pbox -> q . y )"		5609952	1					
ANR	5611056	Callee	min		5609952	0					
ANR	5611057	Identifier	min		5609952	0					
ANR	5611058	ArgumentList	y1 + fo . adjust_above		5609952	1					
ANR	5611059	Argument	y1 + fo . adjust_above		5609952	0					
ANR	5611060	AdditiveExpression	y1 + fo . adjust_above		5609952	0		+			
ANR	5611061	Identifier	y1		5609952	0					
ANR	5611062	MemberAccess	fo . adjust_above		5609952	1					
ANR	5611063	Identifier	fo		5609952	0					
ANR	5611064	Identifier	adjust_above		5609952	1					
ANR	5611065	Argument	fo . pbox -> q . y		5609952	1					
ANR	5611066	MemberAccess	fo . pbox -> q . y		5609952	0					
ANR	5611067	PtrMemberAccess	fo . pbox -> q		5609952	0					
ANR	5611068	MemberAccess	fo . pbox		5609952	0					
ANR	5611069	Identifier	fo		5609952	0					
ANR	5611070	Identifier	pbox		5609952	1					
ANR	5611071	Identifier	q		5609952	1					
ANR	5611072	Identifier	y		5609952	1					
ANR	5611073	IfStatement	if ( ytop > ybot )		5609952	1					
ANR	5611074	Condition	ytop > ybot	221:32:9673:9683	5609952	0	True				
ANR	5611075	RelationalExpression	ytop > ybot		5609952	0		>			
ANR	5611076	Identifier	ytop		5609952	0					
ANR	5611077	Identifier	ybot		5609952	1					
ANR	5611078	CompoundStatement		186:32:8330:8413	5609952	1					
ANR	5611079	IdentifierDeclStatement	int yi = fixed2int_pixround ( ybot ) ;	222:32:9720:9753	5609952	0	True				
ANR	5611080	IdentifierDecl	yi = fixed2int_pixround ( ybot )		5609952	0					
ANR	5611081	IdentifierDeclType	int		5609952	0					
ANR	5611082	Identifier	yi		5609952	1					
ANR	5611083	AssignmentExpression	yi = fixed2int_pixround ( ybot )		5609952	2		=			
ANR	5611084	Identifier	yi		5609952	0					
ANR	5611085	CallExpression	fixed2int_pixround ( ybot )		5609952	1					
ANR	5611086	Callee	fixed2int_pixround		5609952	0					
ANR	5611087	Identifier	fixed2int_pixround		5609952	0					
ANR	5611088	ArgumentList	ybot		5609952	1					
ANR	5611089	Argument	ybot		5609952	0					
ANR	5611090	Identifier	ybot		5609952	0					
ANR	5611091	IdentifierDeclStatement	int hi = fixed2int_pixround ( ytop ) - yi ;	223:32:9787:9825	5609952	1	True				
ANR	5611092	IdentifierDecl	hi = fixed2int_pixround ( ytop ) - yi		5609952	0					
ANR	5611093	IdentifierDeclType	int		5609952	0					
ANR	5611094	Identifier	hi		5609952	1					
ANR	5611095	AssignmentExpression	hi = fixed2int_pixround ( ytop ) - yi		5609952	2		=			
ANR	5611096	Identifier	hi		5609952	0					
ANR	5611097	AdditiveExpression	fixed2int_pixround ( ytop ) - yi		5609952	1		-			
ANR	5611098	CallExpression	fixed2int_pixround ( ytop )		5609952	0					
ANR	5611099	Callee	fixed2int_pixround		5609952	0					
ANR	5611100	Identifier	fixed2int_pixround		5609952	0					
ANR	5611101	ArgumentList	ytop		5609952	1					
ANR	5611102	Argument	ytop		5609952	0					
ANR	5611103	Identifier	ytop		5609952	0					
ANR	5611104	Identifier	yi		5609952	1					
ANR	5611105	IdentifierDeclStatement	int xli = fixed2int_var_pixround ( flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) ) ;	224:32:9859:9941	5609952	2	True				
ANR	5611106	IdentifierDecl	xli = fixed2int_var_pixround ( flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		5609952	0					
ANR	5611107	IdentifierDeclType	int		5609952	0					
ANR	5611108	Identifier	xli		5609952	1					
ANR	5611109	AssignmentExpression	xli = fixed2int_var_pixround ( flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		5609952	2		=			
ANR	5611110	Identifier	xli		5609952	0					
ANR	5611111	CallExpression	fixed2int_var_pixround ( flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left ) )		5609952	1					
ANR	5611112	Callee	fixed2int_var_pixround		5609952	0					
ANR	5611113	Identifier	fixed2int_var_pixround		5609952	0					
ANR	5611114	ArgumentList	flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		5609952	1					
ANR	5611115	Argument	flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		5609952	0					
ANR	5611116	AdditiveExpression	flp -> end . x - ( ! FILL_ADJUST ? 0 : fo . adjust_left )		5609952	0		-			
ANR	5611117	MemberAccess	flp -> end . x		5609952	0					
ANR	5611118	PtrMemberAccess	flp -> end		5609952	0					
ANR	5611119	Identifier	flp		5609952	0					
ANR	5611120	Identifier	end		5609952	1					
ANR	5611121	Identifier	x		5609952	1					
ANR	5611122	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_left		5609952	1					
ANR	5611123	Condition	! FILL_ADJUST		5609952	0					
ANR	5611124	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5611125	UnaryOperator	!		5609952	0					
ANR	5611126	Identifier	FILL_ADJUST		5609952	1					
ANR	5611127	PrimaryExpression	0		5609952	1					
ANR	5611128	MemberAccess	fo . adjust_left		5609952	2					
ANR	5611129	Identifier	fo		5609952	0					
ANR	5611130	Identifier	adjust_left		5609952	1					
ANR	5611131	IdentifierDeclStatement	int xi = fixed2int_var_pixround ( alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) ) ;	225:32:9975:10058	5609952	3	True				
ANR	5611132	IdentifierDecl	xi = fixed2int_var_pixround ( alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		5609952	0					
ANR	5611133	IdentifierDeclType	int		5609952	0					
ANR	5611134	Identifier	xi		5609952	1					
ANR	5611135	AssignmentExpression	xi = fixed2int_var_pixround ( alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		5609952	2		=			
ANR	5611136	Identifier	xi		5609952	0					
ANR	5611137	CallExpression	fixed2int_var_pixround ( alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right ) )		5609952	1					
ANR	5611138	Callee	fixed2int_var_pixround		5609952	0					
ANR	5611139	Identifier	fixed2int_var_pixround		5609952	0					
ANR	5611140	ArgumentList	alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		5609952	1					
ANR	5611141	Argument	alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		5609952	0					
ANR	5611142	AdditiveExpression	alp -> end . x + ( ! FILL_ADJUST ? 0 : fo . adjust_right )		5609952	0		+			
ANR	5611143	MemberAccess	alp -> end . x		5609952	0					
ANR	5611144	PtrMemberAccess	alp -> end		5609952	0					
ANR	5611145	Identifier	alp		5609952	0					
ANR	5611146	Identifier	end		5609952	1					
ANR	5611147	Identifier	x		5609952	1					
ANR	5611148	ConditionalExpression	! FILL_ADJUST ? 0 : fo . adjust_right		5609952	1					
ANR	5611149	Condition	! FILL_ADJUST		5609952	0					
ANR	5611150	UnaryOperationExpression	! FILL_ADJUST		5609952	0					
ANR	5611151	UnaryOperator	!		5609952	0					
ANR	5611152	Identifier	FILL_ADJUST		5609952	1					
ANR	5611153	PrimaryExpression	0		5609952	1					
ANR	5611154	MemberAccess	fo . adjust_right		5609952	2					
ANR	5611155	Identifier	fo		5609952	0					
ANR	5611156	Identifier	adjust_right		5609952	1					
ANR	5611157	IfStatement	if ( xli == xi && FILL_ADJUST && ( fo . adjust_right | fo . adjust_left ) != 0 )		5609952	4					
ANR	5611158	Condition	xli == xi && FILL_ADJUST && ( fo . adjust_right | fo . adjust_left ) != 0	228:37:10121:10224	5609952	0	True				
ANR	5611159	AndExpression	xli == xi && FILL_ADJUST && ( fo . adjust_right | fo . adjust_left ) != 0		5609952	0		&&			
ANR	5611160	EqualityExpression	xli == xi		5609952	0		==			
ANR	5611161	Identifier	xli		5609952	0					
ANR	5611162	Identifier	xi		5609952	1					
ANR	5611163	AndExpression	FILL_ADJUST && ( fo . adjust_right | fo . adjust_left ) != 0		5609952	1		&&			
ANR	5611164	Identifier	FILL_ADJUST		5609952	0					
ANR	5611165	EqualityExpression	( fo . adjust_right | fo . adjust_left ) != 0		5609952	1		!=			
ANR	5611166	InclusiveOrExpression	fo . adjust_right | fo . adjust_left		5609952	0		|			
ANR	5611167	MemberAccess	fo . adjust_right		5609952	0					
ANR	5611168	Identifier	fo		5609952	0					
ANR	5611169	Identifier	adjust_right		5609952	1					
ANR	5611170	MemberAccess	fo . adjust_left		5609952	1					
ANR	5611171	Identifier	fo		5609952	0					
ANR	5611172	Identifier	adjust_left		5609952	1					
ANR	5611173	PrimaryExpression	0		5609952	1					
ANR	5611174	CompoundStatement		199:36:8990:9015	5609952	1					
ANR	5611175	IdentifierDeclStatement	fixed xx = int2fixed ( xli ) ;	238:36:10635:10660	5609952	0	True				
ANR	5611176	IdentifierDecl	xx = int2fixed ( xli )		5609952	0					
ANR	5611177	IdentifierDeclType	fixed		5609952	0					
ANR	5611178	Identifier	xx		5609952	1					
ANR	5611179	AssignmentExpression	xx = int2fixed ( xli )		5609952	2		=			
ANR	5611180	Identifier	xx		5609952	0					
ANR	5611181	CallExpression	int2fixed ( xli )		5609952	1					
ANR	5611182	Callee	int2fixed		5609952	0					
ANR	5611183	Identifier	int2fixed		5609952	0					
ANR	5611184	ArgumentList	xli		5609952	1					
ANR	5611185	Argument	xli		5609952	0					
ANR	5611186	Identifier	xli		5609952	0					
ANR	5611187	IfStatement	if ( xx - flp -> end . x < alp -> end . x - xx )		5609952	1					
ANR	5611188	Condition	xx - flp -> end . x < alp -> end . x - xx	240:40:10703:10735	5609952	0	True				
ANR	5611189	RelationalExpression	xx - flp -> end . x < alp -> end . x - xx		5609952	0		<			
ANR	5611190	AdditiveExpression	xx - flp -> end . x		5609952	0		-			
ANR	5611191	Identifier	xx		5609952	0					
ANR	5611192	MemberAccess	flp -> end . x		5609952	1					
ANR	5611193	PtrMemberAccess	flp -> end		5609952	0					
ANR	5611194	Identifier	flp		5609952	0					
ANR	5611195	Identifier	end		5609952	1					
ANR	5611196	Identifier	x		5609952	1					
ANR	5611197	AdditiveExpression	alp -> end . x - xx		5609952	1		-			
ANR	5611198	MemberAccess	alp -> end . x		5609952	0					
ANR	5611199	PtrMemberAccess	alp -> end		5609952	0					
ANR	5611200	Identifier	alp		5609952	0					
ANR	5611201	Identifier	end		5609952	1					
ANR	5611202	Identifier	x		5609952	1					
ANR	5611203	Identifier	xx		5609952	1					
ANR	5611204	ExpressionStatement	++ xi	241:40:10778:10782	5609952	1	True				
ANR	5611205	UnaryExpression	++ xi		5609952	0					
ANR	5611206	IncDec	++		5609952	0					
ANR	5611207	Identifier	xi		5609952	1					
ANR	5611208	ElseStatement	else		5609952	0					
ANR	5611209	ExpressionStatement	-- xli	243:40:10865:10870	5609952	0	True				
ANR	5611210	UnaryExpression	-- xli		5609952	0					
ANR	5611211	IncDec	--		5609952	0					
ANR	5611212	Identifier	xli		5609952	1					
ANR	5611213	ExpressionStatement	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , xli , yi , xi - xli , hi )"	245:32:10938:10999	5609952	5	True				
ANR	5611214	AssignmentExpression	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , xli , yi , xi - xli , hi )"		5609952	0		=			
ANR	5611215	Identifier	code		5609952	0					
ANR	5611216	CallExpression	"LOOP_FILL_RECTANGLE_DIRECT ( & fo , xli , yi , xi - xli , hi )"		5609952	1					
ANR	5611217	Callee	LOOP_FILL_RECTANGLE_DIRECT		5609952	0					
ANR	5611218	Identifier	LOOP_FILL_RECTANGLE_DIRECT		5609952	0					
ANR	5611219	ArgumentList	& fo		5609952	1					
ANR	5611220	Argument	& fo		5609952	0					
ANR	5611221	UnaryOperationExpression	& fo		5609952	0					
ANR	5611222	UnaryOperator	&		5609952	0					
ANR	5611223	Identifier	fo		5609952	1					
ANR	5611224	Argument	xli		5609952	1					
ANR	5611225	Identifier	xli		5609952	0					
ANR	5611226	Argument	yi		5609952	2					
ANR	5611227	Identifier	yi		5609952	0					
ANR	5611228	Argument	xi - xli		5609952	3					
ANR	5611229	AdditiveExpression	xi - xli		5609952	0		-			
ANR	5611230	Identifier	xi		5609952	0					
ANR	5611231	Identifier	xli		5609952	1					
ANR	5611232	Argument	hi		5609952	4					
ANR	5611233	Identifier	hi		5609952	0					
ANR	5611234	ElseStatement	else		5609952	0					
ANR	5611235	ExpressionStatement	code = 0	247:32:11068:11076	5609952	0	True				
ANR	5611236	AssignmentExpression	code = 0		5609952	0		=			
ANR	5611237	Identifier	code		5609952	0					
ANR	5611238	PrimaryExpression	0		5609952	1					
ANR	5611239	ElseStatement	else		5609952	0					
ANR	5611240	IfStatement	if ( ybot < ytop )		5609952	0					
ANR	5611241	Condition	ybot < ytop	248:35:11113:11123	5609952	0	True				
ANR	5611242	RelationalExpression	ybot < ytop		5609952	0		<			
ANR	5611243	Identifier	ybot		5609952	0					
ANR	5611244	Identifier	ytop		5609952	1					
ANR	5611245	CompoundStatement		210:28:9511:9531	5609952	1					
ANR	5611246	IdentifierDeclStatement	"gs_fixed_edge le , re ;"	249:28:11156:11176	5609952	0	True				
ANR	5611247	IdentifierDecl	le		5609952	0					
ANR	5611248	IdentifierDeclType	gs_fixed_edge		5609952	0					
ANR	5611249	Identifier	le		5609952	1					
ANR	5611250	IdentifierDecl	re		5609952	1					
ANR	5611251	IdentifierDeclType	gs_fixed_edge		5609952	0					
ANR	5611252	Identifier	re		5609952	1					
ANR	5611253	ExpressionStatement	le . start = flp -> start	251:28:11207:11228	5609952	1	True				
ANR	5611254	AssignmentExpression	le . start = flp -> start		5609952	0		=			
ANR	5611255	MemberAccess	le . start		5609952	0					
ANR	5611256	Identifier	le		5609952	0					
ANR	5611257	Identifier	start		5609952	1					
ANR	5611258	PtrMemberAccess	flp -> start		5609952	1					
ANR	5611259	Identifier	flp		5609952	0					
ANR	5611260	Identifier	start		5609952	1					
ANR	5611261	ExpressionStatement	le . end = flp -> end	252:28:11258:11275	5609952	2	True				
ANR	5611262	AssignmentExpression	le . end = flp -> end		5609952	0		=			
ANR	5611263	MemberAccess	le . end		5609952	0					
ANR	5611264	Identifier	le		5609952	0					
ANR	5611265	Identifier	end		5609952	1					
ANR	5611266	PtrMemberAccess	flp -> end		5609952	1					
ANR	5611267	Identifier	flp		5609952	0					
ANR	5611268	Identifier	end		5609952	1					
ANR	5611269	ExpressionStatement	re . start = alp -> start	253:28:11305:11326	5609952	3	True				
ANR	5611270	AssignmentExpression	re . start = alp -> start		5609952	0		=			
ANR	5611271	MemberAccess	re . start		5609952	0					
ANR	5611272	Identifier	re		5609952	0					
ANR	5611273	Identifier	start		5609952	1					
ANR	5611274	PtrMemberAccess	alp -> start		5609952	1					
ANR	5611275	Identifier	alp		5609952	0					
ANR	5611276	Identifier	start		5609952	1					
ANR	5611277	ExpressionStatement	re . end = alp -> end	254:28:11356:11373	5609952	4	True				
ANR	5611278	AssignmentExpression	re . end = alp -> end		5609952	0		=			
ANR	5611279	MemberAccess	re . end		5609952	0					
ANR	5611280	Identifier	re		5609952	0					
ANR	5611281	Identifier	end		5609952	1					
ANR	5611282	PtrMemberAccess	alp -> end		5609952	1					
ANR	5611283	Identifier	alp		5609952	0					
ANR	5611284	Identifier	end		5609952	1					
ANR	5611285	ExpressionStatement	"code = fo . fill_trap ( fo . dev , & le , & re , ybot , ytop , false , fo . pdevc , fo . lop )"	255:28:11403:11513	5609952	5	True				
ANR	5611286	AssignmentExpression	"code = fo . fill_trap ( fo . dev , & le , & re , ybot , ytop , false , fo . pdevc , fo . lop )"		5609952	0		=			
ANR	5611287	Identifier	code		5609952	0					
ANR	5611288	CallExpression	"fo . fill_trap ( fo . dev , & le , & re , ybot , ytop , false , fo . pdevc , fo . lop )"		5609952	1					
ANR	5611289	Callee	fo . fill_trap		5609952	0					
ANR	5611290	MemberAccess	fo . fill_trap		5609952	0					
ANR	5611291	Identifier	fo		5609952	0					
ANR	5611292	Identifier	fill_trap		5609952	1					
ANR	5611293	ArgumentList	fo . dev		5609952	1					
ANR	5611294	Argument	fo . dev		5609952	0					
ANR	5611295	MemberAccess	fo . dev		5609952	0					
ANR	5611296	Identifier	fo		5609952	0					
ANR	5611297	Identifier	dev		5609952	1					
ANR	5611298	Argument	& le		5609952	1					
ANR	5611299	UnaryOperationExpression	& le		5609952	0					
ANR	5611300	UnaryOperator	&		5609952	0					
ANR	5611301	Identifier	le		5609952	1					
ANR	5611302	Argument	& re		5609952	2					
ANR	5611303	UnaryOperationExpression	& re		5609952	0					
ANR	5611304	UnaryOperator	&		5609952	0					
ANR	5611305	Identifier	re		5609952	1					
ANR	5611306	Argument	ybot		5609952	3					
ANR	5611307	Identifier	ybot		5609952	0					
ANR	5611308	Argument	ytop		5609952	4					
ANR	5611309	Identifier	ytop		5609952	0					
ANR	5611310	Argument	false		5609952	5					
ANR	5611311	Identifier	false		5609952	0					
ANR	5611312	Argument	fo . pdevc		5609952	6					
ANR	5611313	MemberAccess	fo . pdevc		5609952	0					
ANR	5611314	Identifier	fo		5609952	0					
ANR	5611315	Identifier	pdevc		5609952	1					
ANR	5611316	Argument	fo . lop		5609952	7					
ANR	5611317	MemberAccess	fo . lop		5609952	0					
ANR	5611318	Identifier	fo		5609952	0					
ANR	5611319	Identifier	lop		5609952	1					
ANR	5611320	ElseStatement	else		5609952	0					
ANR	5611321	ExpressionStatement	code = 0	258:28:11574:11582	5609952	0	True				
ANR	5611322	AssignmentExpression	code = 0		5609952	0		=			
ANR	5611323	Identifier	code		5609952	0					
ANR	5611324	PrimaryExpression	0		5609952	1					
ANR	5611325	IfStatement	if ( code < 0 )		5609952	9					
ANR	5611326	Condition	code < 0	261:20:11644:11651	5609952	0	True				
ANR	5611327	RelationalExpression	code < 0		5609952	0		<			
ANR	5611328	Identifier	code		5609952	0					
ANR	5611329	PrimaryExpression	0		5609952	1					
ANR	5611330	ReturnStatement	return code ;	262:20:11674:11685	5609952	1	True				
ANR	5611331	Identifier	code		5609952	0					
ANR	5611332	ExpressionStatement	"code = move_al_by_y ( ll , y1 )"	265:8:11719:11746	5609952	18	True				
ANR	5611333	AssignmentExpression	"code = move_al_by_y ( ll , y1 )"		5609952	0		=			
ANR	5611334	Identifier	code		5609952	0					
ANR	5611335	CallExpression	"move_al_by_y ( ll , y1 )"		5609952	1					
ANR	5611336	Callee	move_al_by_y		5609952	0					
ANR	5611337	Identifier	move_al_by_y		5609952	0					
ANR	5611338	ArgumentList	ll		5609952	1					
ANR	5611339	Argument	ll		5609952	0					
ANR	5611340	Identifier	ll		5609952	0					
ANR	5611341	Argument	y1		5609952	1					
ANR	5611342	Identifier	y1		5609952	0					
ANR	5611343	IfStatement	if ( code < 0 )		5609952	19					
ANR	5611344	Condition	code < 0	266:12:11760:11767	5609952	0	True				
ANR	5611345	RelationalExpression	code < 0		5609952	0		<			
ANR	5611346	Identifier	code		5609952	0					
ANR	5611347	PrimaryExpression	0		5609952	1					
ANR	5611348	ReturnStatement	return code ;	267:12:11782:11793	5609952	1	True				
ANR	5611349	Identifier	code		5609952	0					
ANR	5611350	ExpressionStatement	ll -> h_list1 = ll -> h_list0	268:8:11803:11828	5609952	20	True				
ANR	5611351	AssignmentExpression	ll -> h_list1 = ll -> h_list0		5609952	0		=			
ANR	5611352	PtrMemberAccess	ll -> h_list1		5609952	0					
ANR	5611353	Identifier	ll		5609952	0					
ANR	5611354	Identifier	h_list1		5609952	1					
ANR	5611355	PtrMemberAccess	ll -> h_list0		5609952	1					
ANR	5611356	Identifier	ll		5609952	0					
ANR	5611357	Identifier	h_list0		5609952	1					
ANR	5611358	ExpressionStatement	ll -> h_list0 = 0	269:8:11838:11853	5609952	21	True				
ANR	5611359	AssignmentExpression	ll -> h_list0 = 0		5609952	0		=			
ANR	5611360	PtrMemberAccess	ll -> h_list0		5609952	0					
ANR	5611361	Identifier	ll		5609952	0					
ANR	5611362	Identifier	h_list0		5609952	1					
ANR	5611363	PrimaryExpression	0		5609952	1					
ANR	5611364	ExpressionStatement	y = y1	270:8:11863:11869	5609952	22	True				
ANR	5611365	AssignmentExpression	y = y1		5609952	0		=			
ANR	5611366	Identifier	y		5609952	0					
ANR	5611367	Identifier	y1		5609952	1					
ANR	5611368	ReturnStatement	return 0 ;	272:4:11881:11889	5609952	12	True				
ANR	5611369	PrimaryExpression	0		5609952	0					
ANR	5611370	ReturnType	static int		5609952	1					
ANR	5611371	Identifier	TEMPLATE_spot_into_trapezoids		5609952	2					
ANR	5611372	ParameterList	"line_list * ll , fixed band_mask"		5609952	3					
ANR	5611373	Parameter	line_list * ll	39:31:1612:1624	5609952	0	True				
ANR	5611374	ParameterType	line_list *		5609952	0					
ANR	5611375	Identifier	ll		5609952	1					
ANR	5611376	Parameter	fixed band_mask	39:46:1627:1641	5609952	1	True				
ANR	5611377	ParameterType	fixed		5609952	0					
ANR	5611378	Identifier	band_mask		5609952	1					
ANR	5611379	CFGEntryNode	ENTRY		5609952		True				
ANR	5611380	CFGExitNode	EXIT		5609952		True				
ANR	5611381	Symbol	xx		5609952						
ANR	5611382	Symbol	hi		5609952						
ANR	5611383	Symbol	& y1		5609952						
ANR	5611384	Symbol	ytop		5609952						
ANR	5611385	Symbol	ll -> memory		5609952						
ANR	5611386	Symbol	fo . fill_trap		5609952						
ANR	5611387	Symbol	alp -> next -> x_current		5609952						
ANR	5611388	Symbol	* ll -> windings		5609952						
ANR	5611389	Symbol	gx_san_trap_store		5609952						
ANR	5611390	Symbol	min_fixed		5609952						
ANR	5611391	Symbol	yi		5609952						
ANR	5611392	Symbol	band_step		5609952						
ANR	5611393	Symbol	& fo		5609952						
ANR	5611394	Symbol	ll -> y_break		5609952						
ANR	5611395	Symbol	LOOP_FILL_RECTANGLE_DIRECT		5609952						
ANR	5611396	Symbol	* fo . pbox		5609952						
ANR	5611397	Symbol	band		5609952						
ANR	5611398	Symbol	fo . ymax		5609952						
ANR	5611399	Symbol	fo . pbox -> q		5609952						
ANR	5611400	Symbol	fo . pbox -> p		5609952						
ANR	5611401	Symbol	* ll		5609952						
ANR	5611402	Symbol	iter		5609952						
ANR	5611403	Symbol	fixed2int_pixround		5609952						
ANR	5611404	Symbol	FILL_ADJUST		5609952						
ANR	5611405	Symbol	* flp		5609952						
ANR	5611406	Symbol	ynext		5609952						
ANR	5611407	Symbol	band_mask		5609952						
ANR	5611408	Symbol	alp -> start . x		5609952						
ANR	5611409	Symbol	re		5609952						
ANR	5611410	Symbol	yll -> direction		5609952						
ANR	5611411	Symbol	* alp -> next		5609952						
ANR	5611412	Symbol	ynext -> prev		5609952						
ANR	5611413	Symbol	code1		5609952						
ANR	5611414	Symbol	flp -> direction		5609952						
ANR	5611415	Symbol	flp -> start		5609952						
ANR	5611416	Symbol	alp -> x_current		5609952						
ANR	5611417	Symbol	IS_SPOTAN		5609952						
ANR	5611418	Symbol	fo . pbox -> p . y		5609952						
ANR	5611419	Symbol	flp -> x_current		5609952						
ANR	5611420	Symbol	* ynext		5609952						
ANR	5611421	Symbol	~band_mask		5609952						
ANR	5611422	Symbol	min		5609952						
ANR	5611423	Symbol	flp -> pseg		5609952						
ANR	5611424	Symbol	re . start		5609952						
ANR	5611425	Symbol	fo . pbox		5609952						
ANR	5611426	Symbol	y_limit		5609952						
ANR	5611427	Symbol	max		5609952						
ANR	5611428	Symbol	flp		5609952						
ANR	5611429	Symbol	* fo		5609952						
ANR	5611430	Symbol	alp -> next -> x_next		5609952						
ANR	5611431	Symbol	FILL_DIRECT		5609952						
ANR	5611432	Symbol	flp -> start . x		5609952						
ANR	5611433	Symbol	ll -> y_line		5609952						
ANR	5611434	Symbol	alp -> next		5609952						
ANR	5611435	Symbol	alp -> end . y		5609952						
ANR	5611436	Symbol	alp -> end . x		5609952						
ANR	5611437	Symbol	int2fixed		5609952						
ANR	5611438	Symbol	ll -> x_head . x_current		5609952						
ANR	5611439	Symbol	INSIDE_PATH_P		5609952						
ANR	5611440	Symbol	y		5609952						
ANR	5611441	Symbol	le		5609952						
ANR	5611442	Symbol	& re		5609952						
ANR	5611443	Symbol	all_bands		5609952						
ANR	5611444	Symbol	fo . adjust_below		5609952						
ANR	5611445	Symbol	ll		5609952						
ANR	5611446	Symbol	le . end		5609952						
ANR	5611447	Symbol	alp -> end		5609952						
ANR	5611448	Symbol	ll -> y_list		5609952						
ANR	5611449	Symbol	inside		5609952						
ANR	5611450	Symbol	alp -> pseg		5609952						
ANR	5611451	Symbol	move_al_by_y		5609952						
ANR	5611452	Symbol	ll -> x_list		5609952						
ANR	5611453	Symbol	ybot		5609952						
ANR	5611454	Symbol	gs_debug_c		5609952						
ANR	5611455	Symbol	yll -> start . y		5609952						
ANR	5611456	Symbol	ll -> contour_count		5609952						
ANR	5611457	Symbol	DIR_HORIZONTAL		5609952						
ANR	5611458	Symbol	yll -> start . x		5609952						
ANR	5611459	Symbol	flp -> x_next		5609952						
ANR	5611460	Symbol	& le		5609952						
ANR	5611461	Symbol	* yll		5609952						
ANR	5611462	Symbol	covering_pixel_centers		5609952						
ANR	5611463	Symbol	NULL		5609952						
ANR	5611464	Symbol	alp		5609952						
ANR	5611465	Symbol	process_h_segments		5609952						
ANR	5611466	Symbol	slant_into_trapezoids__fd		5609952						
ANR	5611467	Symbol	fixed2int_var_pixround		5609952						
ANR	5611468	Symbol	ll -> fo		5609952						
ANR	5611469	Symbol	yll -> end		5609952						
ANR	5611470	Symbol	fo . adjust_right		5609952						
ANR	5611471	Symbol	fo . adjust_left		5609952						
ANR	5611472	Symbol	alp -> x_next		5609952						
ANR	5611473	Symbol	fo . dev		5609952						
ANR	5611474	Symbol	yll		5609952						
ANR	5611475	Symbol	alp -> start		5609952						
ANR	5611476	Symbol	slant_into_trapezoids__nd		5609952						
ANR	5611477	Symbol	fo . rule		5609952						
ANR	5611478	Symbol	alp -> direction		5609952						
ANR	5611479	Symbol	* ll -> fo		5609952						
ANR	5611480	Symbol	code		5609952						
ANR	5611481	Symbol	yll -> start		5609952						
ANR	5611482	Symbol	yll -> end . x		5609952						
ANR	5611483	Symbol	fo		5609952						
ANR	5611484	Symbol	rule		5609952						
ANR	5611485	Symbol	COVERING_PIXEL_CENTERS		5609952						
ANR	5611486	Symbol	band_fill		5609952						
ANR	5611487	Symbol	yll -> next		5609952						
ANR	5611488	Symbol	fo . adjust_above		5609952						
ANR	5611489	Symbol	ll -> windings		5609952						
ANR	5611490	Symbol	ll -> x_head		5609952						
ANR	5611491	Symbol	wi		5609952						
ANR	5611492	Symbol	flp -> end		5609952						
ANR	5611493	Symbol	ll -> h_list0		5609952						
ANR	5611494	Symbol	ll -> h_list1		5609952						
ANR	5611495	Symbol	y1		5609952						
ANR	5611496	Symbol	y_band		5609952						
ANR	5611497	Symbol	fo . pbox -> q . y		5609952						
ANR	5611498	Symbol	fixed2float		5609952						
ANR	5611499	Symbol	SMART_WINDING		5609952						
ANR	5611500	Symbol	false		5609952						
ANR	5611501	Symbol	le . start		5609952						
ANR	5611502	Symbol	* * ll		5609952						
ANR	5611503	Symbol	* alp		5609952						
ANR	5611504	Symbol	xi		5609952						
ANR	5611505	Symbol	re . end		5609952						
ANR	5611506	Symbol	fo . pdevc		5609952						
ANR	5611507	Symbol	xli		5609952						
ANR	5611508	Symbol	fo . is_spotan		5609952						
ANR	5611509	Symbol	flp -> end . x		5609952						
ANR	5611510	Symbol	* * alp		5609952						
ANR	5611511	Symbol	fo . lop		5609952						
