command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9654863	File	data/converged/CVE-2018-16863_ghostpdl/test.c								
ANR	9654864	DeclStmt									
ANR	9654865	Decl							unsigned char	unsigned char *	myimage
ANR	9654866	DeclStmt									
ANR	9654867	Decl							int	int	breite
ANR	9654868	Decl							int	int	hoehe
ANR	9654869	Decl							int	int	seite
ANR	9654870	Decl							int	int	myraster
ANR	9654871	DeclStmt									
ANR	9654872	Decl							FILE	FILE *	color_fd
ANR	9654873	Decl							FILE	FILE *	black_fd
ANR	9654874	Decl							FILE	FILE *	temp_fd
ANR	9654875	Decl							FILE	FILE *	choose
ANR	9654876	DeclStmt									
ANR	9654877	Decl							FILE	FILE *	read_fd
ANR	9654878	DeclStmt									
ANR	9654879	Decl							int	"int ( char * buf , int * mylen )"	yylex
ANR	9654880	Function	gsdll_stdin	40:0:866:2213							
ANR	9654881	FunctionDef	"gsdll_stdin (void * instance , char * buf , int len)"		9654880	0					
ANR	9654882	CompoundStatement		42:0:935:2213	9654880	0					
ANR	9654883	IdentifierDeclStatement	int c ;	43:4:941:946	9654880	0	True				
ANR	9654884	IdentifierDecl	c		9654880	0					
ANR	9654885	IdentifierDeclType	int		9654880	0					
ANR	9654886	Identifier	c		9654880	1					
ANR	9654887	IdentifierDeclStatement	int count = 0 ;	44:4:952:965	9654880	1	True				
ANR	9654888	IdentifierDecl	count = 0		9654880	0					
ANR	9654889	IdentifierDeclType	int		9654880	0					
ANR	9654890	Identifier	count		9654880	1					
ANR	9654891	AssignmentExpression	count = 0		9654880	2		=			
ANR	9654892	Identifier	count		9654880	0					
ANR	9654893	PrimaryExpression	0		9654880	1					
ANR	9654894	IdentifierDeclStatement	char * init = buf ;	45:4:971:985	9654880	2	True				
ANR	9654895	IdentifierDecl	* init = buf		9654880	0					
ANR	9654896	IdentifierDeclType	char *		9654880	0					
ANR	9654897	Identifier	init		9654880	1					
ANR	9654898	AssignmentExpression	* init = buf		9654880	2		=			
ANR	9654899	Identifier	buf		9654880	0					
ANR	9654900	Identifier	buf		9654880	1					
ANR	9654901	IdentifierDeclStatement	int eof ;	46:4:991:998	9654880	3	True				
ANR	9654902	IdentifierDecl	eof		9654880	0					
ANR	9654903	IdentifierDeclType	int		9654880	0					
ANR	9654904	Identifier	eof		9654880	1					
ANR	9654905	IdentifierDeclStatement	int hlen = len ;	47:4:1004:1016	9654880	4	True				
ANR	9654906	IdentifierDecl	hlen = len		9654880	0					
ANR	9654907	IdentifierDeclType	int		9654880	0					
ANR	9654908	Identifier	hlen		9654880	1					
ANR	9654909	AssignmentExpression	hlen = len		9654880	2		=			
ANR	9654910	Identifier	len		9654880	0					
ANR	9654911	Identifier	len		9654880	1					
ANR	9654912	ExpressionStatement	"eof = yylex ( buf , & hlen )"	48:4:1022:1042	9654880	5	True				
ANR	9654913	AssignmentExpression	"eof = yylex ( buf , & hlen )"		9654880	0		=			
ANR	9654914	Identifier	eof		9654880	0					
ANR	9654915	CallExpression	"yylex ( buf , & hlen )"		9654880	1					
ANR	9654916	Callee	yylex		9654880	0					
ANR	9654917	Identifier	yylex		9654880	0					
ANR	9654918	ArgumentList	buf		9654880	1					
ANR	9654919	Argument	buf		9654880	0					
ANR	9654920	Identifier	buf		9654880	0					
ANR	9654921	Argument	& hlen		9654880	1					
ANR	9654922	UnaryOperationExpression	& hlen		9654880	0					
ANR	9654923	UnaryOperator	&		9654880	0					
ANR	9654924	Identifier	hlen		9654880	1					
ANR	9654925	IfStatement	if ( eof == 1001 )		9654880	6					
ANR	9654926	Condition	eof == 1001	50:7:1090:1098	9654880	0	True				
ANR	9654927	EqualityExpression	eof == 1001		9654880	0		==			
ANR	9654928	Identifier	eof		9654880	0					
ANR	9654929	PrimaryExpression	1001		9654880	1					
ANR	9654930	CompoundStatement		9:17:164:164	9654880	1					
ANR	9654931	ExpressionStatement	"fprintf ( color_fd , ""%s"" , buf )"	51:4:1106:1132	9654880	0	True				
ANR	9654932	CallExpression	"fprintf ( color_fd , ""%s"" , buf )"		9654880	0					
ANR	9654933	Callee	fprintf		9654880	0					
ANR	9654934	Identifier	fprintf		9654880	0					
ANR	9654935	ArgumentList	color_fd		9654880	1					
ANR	9654936	Argument	color_fd		9654880	0					
ANR	9654937	Identifier	color_fd		9654880	0					
ANR	9654938	Argument	"""%s"""		9654880	1					
ANR	9654939	PrimaryExpression	"""%s"""		9654880	0					
ANR	9654940	Argument	buf		9654880	2					
ANR	9654941	Identifier	buf		9654880	0					
ANR	9654942	ExpressionStatement	fflush ( color_fd )	52:4:1138:1154	9654880	1	True				
ANR	9654943	CallExpression	fflush ( color_fd )		9654880	0					
ANR	9654944	Callee	fflush		9654880	0					
ANR	9654945	Identifier	fflush		9654880	0					
ANR	9654946	ArgumentList	color_fd		9654880	1					
ANR	9654947	Argument	color_fd		9654880	0					
ANR	9654948	Identifier	color_fd		9654880	0					
ANR	9654949	ExpressionStatement	"fprintf ( black_fd , ""%s"" , buf )"	53:4:1160:1186	9654880	2	True				
ANR	9654950	CallExpression	"fprintf ( black_fd , ""%s"" , buf )"		9654880	0					
ANR	9654951	Callee	fprintf		9654880	0					
ANR	9654952	Identifier	fprintf		9654880	0					
ANR	9654953	ArgumentList	black_fd		9654880	1					
ANR	9654954	Argument	black_fd		9654880	0					
ANR	9654955	Identifier	black_fd		9654880	0					
ANR	9654956	Argument	"""%s"""		9654880	1					
ANR	9654957	PrimaryExpression	"""%s"""		9654880	0					
ANR	9654958	Argument	buf		9654880	2					
ANR	9654959	Identifier	buf		9654880	0					
ANR	9654960	ExpressionStatement	fflush ( black_fd )	54:4:1192:1208	9654880	3	True				
ANR	9654961	CallExpression	fflush ( black_fd )		9654880	0					
ANR	9654962	Callee	fflush		9654880	0					
ANR	9654963	Identifier	fflush		9654880	0					
ANR	9654964	ArgumentList	black_fd		9654880	1					
ANR	9654965	Argument	black_fd		9654880	0					
ANR	9654966	Identifier	black_fd		9654880	0					
ANR	9654967	ReturnStatement	return ( strlen ( buf ) ) ;	55:4:1214:1234	9654880	4	True				
ANR	9654968	CallExpression	strlen ( buf )		9654880	0					
ANR	9654969	Callee	strlen		9654880	0					
ANR	9654970	Identifier	strlen		9654880	0					
ANR	9654971	ArgumentList	buf		9654880	1					
ANR	9654972	Argument	buf		9654880	0					
ANR	9654973	Identifier	buf		9654880	0					
ANR	9654974	ElseStatement	else		9654880	0					
ANR	9654975	IfStatement	if ( eof == 1000 )		9654880	0					
ANR	9654976	Condition	eof == 1000	56:14:1250:1258	9654880	0	True				
ANR	9654977	EqualityExpression	eof == 1000		9654880	0		==			
ANR	9654978	Identifier	eof		9654880	0					
ANR	9654979	PrimaryExpression	1000		9654880	1					
ANR	9654980	CompoundStatement		15:24:324:324	9654880	1					
ANR	9654981	ExpressionStatement	"fprintf ( temp_fd , ""%s"" , buf )"	57:4:1266:1291	9654880	0	True				
ANR	9654982	CallExpression	"fprintf ( temp_fd , ""%s"" , buf )"		9654880	0					
ANR	9654983	Callee	fprintf		9654880	0					
ANR	9654984	Identifier	fprintf		9654880	0					
ANR	9654985	ArgumentList	temp_fd		9654880	1					
ANR	9654986	Argument	temp_fd		9654880	0					
ANR	9654987	Identifier	temp_fd		9654880	0					
ANR	9654988	Argument	"""%s"""		9654880	1					
ANR	9654989	PrimaryExpression	"""%s"""		9654880	0					
ANR	9654990	Argument	buf		9654880	2					
ANR	9654991	Identifier	buf		9654880	0					
ANR	9654992	ExpressionStatement	fflush ( temp_fd )	58:8:1301:1316	9654880	1	True				
ANR	9654993	CallExpression	fflush ( temp_fd )		9654880	0					
ANR	9654994	Callee	fflush		9654880	0					
ANR	9654995	Identifier	fflush		9654880	0					
ANR	9654996	ArgumentList	temp_fd		9654880	1					
ANR	9654997	Argument	temp_fd		9654880	0					
ANR	9654998	Identifier	temp_fd		9654880	0					
ANR	9654999	ExpressionStatement	fclose ( temp_fd )	59:8:1326:1341	9654880	2	True				
ANR	9655000	CallExpression	fclose ( temp_fd )		9654880	0					
ANR	9655001	Callee	fclose		9654880	0					
ANR	9655002	Identifier	fclose		9654880	0					
ANR	9655003	ArgumentList	temp_fd		9654880	1					
ANR	9655004	Argument	temp_fd		9654880	0					
ANR	9655005	Identifier	temp_fd		9654880	0					
ANR	9655006	ExpressionStatement	"read_fd = gp_fopen ( ""temp.ps"" , ""rb"" )"	60:8:1351:1383	9654880	3	True				
ANR	9655007	AssignmentExpression	"read_fd = gp_fopen ( ""temp.ps"" , ""rb"" )"		9654880	0		=			
ANR	9655008	Identifier	read_fd		9654880	0					
ANR	9655009	CallExpression	"gp_fopen ( ""temp.ps"" , ""rb"" )"		9654880	1					
ANR	9655010	Callee	gp_fopen		9654880	0					
ANR	9655011	Identifier	gp_fopen		9654880	0					
ANR	9655012	ArgumentList	"""temp.ps"""		9654880	1					
ANR	9655013	Argument	"""temp.ps"""		9654880	0					
ANR	9655014	PrimaryExpression	"""temp.ps"""		9654880	0					
ANR	9655015	Argument	"""rb"""		9654880	1					
ANR	9655016	PrimaryExpression	"""rb"""		9654880	0					
ANR	9655017	WhileStatement	while ( ( c = fgetc ( read_fd ) ) != EOF )		9654880	4					
ANR	9655018	Condition	( c = fgetc ( read_fd ) ) != EOF	62:15:1469:1493	9654880	0	True				
ANR	9655019	EqualityExpression	( c = fgetc ( read_fd ) ) != EOF		9654880	0		!=			
ANR	9655020	AssignmentExpression	c = fgetc ( read_fd )		9654880	0		=			
ANR	9655021	Identifier	c		9654880	0					
ANR	9655022	CallExpression	fgetc ( read_fd )		9654880	1					
ANR	9655023	Callee	fgetc		9654880	0					
ANR	9655024	Identifier	fgetc		9654880	0					
ANR	9655025	ArgumentList	read_fd		9654880	1					
ANR	9655026	Argument	read_fd		9654880	0					
ANR	9655027	Identifier	read_fd		9654880	0					
ANR	9655028	Identifier	EOF		9654880	1					
ANR	9655029	CompoundStatement		22:8:568:568	9654880	1					
ANR	9655030	ExpressionStatement	"fputc ( c , choose )"	64:16:1522:1537	9654880	0	True				
ANR	9655031	CallExpression	"fputc ( c , choose )"		9654880	0					
ANR	9655032	Callee	fputc		9654880	0					
ANR	9655033	Identifier	fputc		9654880	0					
ANR	9655034	ArgumentList	c		9654880	1					
ANR	9655035	Argument	c		9654880	0					
ANR	9655036	Identifier	c		9654880	0					
ANR	9655037	Argument	choose		9654880	1					
ANR	9655038	Identifier	choose		9654880	0					
ANR	9655039	ExpressionStatement	fflush ( choose )	67:8:1631:1645	9654880	5	True				
ANR	9655040	CallExpression	fflush ( choose )		9654880	0					
ANR	9655041	Callee	fflush		9654880	0					
ANR	9655042	Identifier	fflush		9654880	0					
ANR	9655043	ArgumentList	choose		9654880	1					
ANR	9655044	Argument	choose		9654880	0					
ANR	9655045	Identifier	choose		9654880	0					
ANR	9655046	ExpressionStatement	fclose ( read_fd )	68:8:1655:1670	9654880	6	True				
ANR	9655047	CallExpression	fclose ( read_fd )		9654880	0					
ANR	9655048	Callee	fclose		9654880	0					
ANR	9655049	Identifier	fclose		9654880	0					
ANR	9655050	ArgumentList	read_fd		9654880	1					
ANR	9655051	Argument	read_fd		9654880	0					
ANR	9655052	Identifier	read_fd		9654880	0					
ANR	9655053	ExpressionStatement	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"	69:8:1680:1712	9654880	7	True				
ANR	9655054	AssignmentExpression	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"		9654880	0		=			
ANR	9655055	Identifier	temp_fd		9654880	0					
ANR	9655056	CallExpression	"gp_fopen ( ""temp.ps"" , ""wb"" )"		9654880	1					
ANR	9655057	Callee	gp_fopen		9654880	0					
ANR	9655058	Identifier	gp_fopen		9654880	0					
ANR	9655059	ArgumentList	"""temp.ps"""		9654880	1					
ANR	9655060	Argument	"""temp.ps"""		9654880	0					
ANR	9655061	PrimaryExpression	"""temp.ps"""		9654880	0					
ANR	9655062	Argument	"""wb"""		9654880	1					
ANR	9655063	PrimaryExpression	"""wb"""		9654880	0					
ANR	9655064	ReturnStatement	return ( strlen ( buf ) ) ;	70:4:1718:1738	9654880	8	True				
ANR	9655065	CallExpression	strlen ( buf )		9654880	0					
ANR	9655066	Callee	strlen		9654880	0					
ANR	9655067	Identifier	strlen		9654880	0					
ANR	9655068	ArgumentList	buf		9654880	1					
ANR	9655069	Argument	buf		9654880	0					
ANR	9655070	Identifier	buf		9654880	0					
ANR	9655071	ElseStatement	else		9654880	0					
ANR	9655072	IfStatement	if ( eof != 0 )		9654880	0					
ANR	9655073	Condition	eof != 0	71:14:1754:1759	9654880	0	True				
ANR	9655074	EqualityExpression	eof != 0		9654880	0		!=			
ANR	9655075	Identifier	eof		9654880	0					
ANR	9655076	PrimaryExpression	0		9654880	1					
ANR	9655077	CompoundStatement		30:21:825:825	9654880	1					
ANR	9655078	ExpressionStatement	"fprintf ( temp_fd , ""%s"" , buf )"	73:4:1813:1838	9654880	0	True				
ANR	9655079	CallExpression	"fprintf ( temp_fd , ""%s"" , buf )"		9654880	0					
ANR	9655080	Callee	fprintf		9654880	0					
ANR	9655081	Identifier	fprintf		9654880	0					
ANR	9655082	ArgumentList	temp_fd		9654880	1					
ANR	9655083	Argument	temp_fd		9654880	0					
ANR	9655084	Identifier	temp_fd		9654880	0					
ANR	9655085	Argument	"""%s"""		9654880	1					
ANR	9655086	PrimaryExpression	"""%s"""		9654880	0					
ANR	9655087	Argument	buf		9654880	2					
ANR	9655088	Identifier	buf		9654880	0					
ANR	9655089	ExpressionStatement	fflush ( temp_fd )	74:4:1844:1859	9654880	1	True				
ANR	9655090	CallExpression	fflush ( temp_fd )		9654880	0					
ANR	9655091	Callee	fflush		9654880	0					
ANR	9655092	Identifier	fflush		9654880	0					
ANR	9655093	ArgumentList	temp_fd		9654880	1					
ANR	9655094	Argument	temp_fd		9654880	0					
ANR	9655095	Identifier	temp_fd		9654880	0					
ANR	9655096	ReturnStatement	return ( strlen ( buf ) ) ;	75:4:1865:1885	9654880	2	True				
ANR	9655097	CallExpression	strlen ( buf )		9654880	0					
ANR	9655098	Callee	strlen		9654880	0					
ANR	9655099	Identifier	strlen		9654880	0					
ANR	9655100	ArgumentList	buf		9654880	1					
ANR	9655101	Argument	buf		9654880	0					
ANR	9655102	Identifier	buf		9654880	0					
ANR	9655103	ElseStatement	else		9654880	0					
ANR	9655104	CompoundStatement		35:11:962:962	9654880	0					
ANR	9655105	ExpressionStatement	"fprintf ( stderr , ""Dateiende\\n"" )"	77:4:1904:1934	9654880	0	True				
ANR	9655106	CallExpression	"fprintf ( stderr , ""Dateiende\\n"" )"		9654880	0					
ANR	9655107	Callee	fprintf		9654880	0					
ANR	9655108	Identifier	fprintf		9654880	0					
ANR	9655109	ArgumentList	stderr		9654880	1					
ANR	9655110	Argument	stderr		9654880	0					
ANR	9655111	Identifier	stderr		9654880	0					
ANR	9655112	Argument	"""Dateiende\\n"""		9654880	1					
ANR	9655113	PrimaryExpression	"""Dateiende\\n"""		9654880	0					
ANR	9655114	ExpressionStatement	"read_fd = gp_fopen ( ""temp.ps"" , ""rb"" )"	78:8:1944:1976	9654880	1	True				
ANR	9655115	AssignmentExpression	"read_fd = gp_fopen ( ""temp.ps"" , ""rb"" )"		9654880	0		=			
ANR	9655116	Identifier	read_fd		9654880	0					
ANR	9655117	CallExpression	"gp_fopen ( ""temp.ps"" , ""rb"" )"		9654880	1					
ANR	9655118	Callee	gp_fopen		9654880	0					
ANR	9655119	Identifier	gp_fopen		9654880	0					
ANR	9655120	ArgumentList	"""temp.ps"""		9654880	1					
ANR	9655121	Argument	"""temp.ps"""		9654880	0					
ANR	9655122	PrimaryExpression	"""temp.ps"""		9654880	0					
ANR	9655123	Argument	"""rb"""		9654880	1					
ANR	9655124	PrimaryExpression	"""rb"""		9654880	0					
ANR	9655125	WhileStatement	while ( ( c = fgetc ( read_fd ) ) != EOF )		9654880	2					
ANR	9655126	Condition	( c = fgetc ( read_fd ) ) != EOF	79:15:1993:2017	9654880	0	True				
ANR	9655127	EqualityExpression	( c = fgetc ( read_fd ) ) != EOF		9654880	0		!=			
ANR	9655128	AssignmentExpression	c = fgetc ( read_fd )		9654880	0		=			
ANR	9655129	Identifier	c		9654880	0					
ANR	9655130	CallExpression	fgetc ( read_fd )		9654880	1					
ANR	9655131	Callee	fgetc		9654880	0					
ANR	9655132	Identifier	fgetc		9654880	0					
ANR	9655133	ArgumentList	read_fd		9654880	1					
ANR	9655134	Argument	read_fd		9654880	0					
ANR	9655135	Identifier	read_fd		9654880	0					
ANR	9655136	Identifier	EOF		9654880	1					
ANR	9655137	CompoundStatement		39:8:1092:1092	9654880	1					
ANR	9655138	ExpressionStatement	"fputc ( c , choose )"	81:16:2046:2061	9654880	0	True				
ANR	9655139	CallExpression	"fputc ( c , choose )"		9654880	0					
ANR	9655140	Callee	fputc		9654880	0					
ANR	9655141	Identifier	fputc		9654880	0					
ANR	9655142	ArgumentList	c		9654880	1					
ANR	9655143	Argument	c		9654880	0					
ANR	9655144	Identifier	c		9654880	0					
ANR	9655145	Argument	choose		9654880	1					
ANR	9655146	Identifier	choose		9654880	0					
ANR	9655147	ExpressionStatement	fflush ( choose )	83:8:2081:2095	9654880	3	True				
ANR	9655148	CallExpression	fflush ( choose )		9654880	0					
ANR	9655149	Callee	fflush		9654880	0					
ANR	9655150	Identifier	fflush		9654880	0					
ANR	9655151	ArgumentList	choose		9654880	1					
ANR	9655152	Argument	choose		9654880	0					
ANR	9655153	Identifier	choose		9654880	0					
ANR	9655154	ExpressionStatement	fclose ( read_fd )	84:8:2105:2120	9654880	4	True				
ANR	9655155	CallExpression	fclose ( read_fd )		9654880	0					
ANR	9655156	Callee	fclose		9654880	0					
ANR	9655157	Identifier	fclose		9654880	0					
ANR	9655158	ArgumentList	read_fd		9654880	1					
ANR	9655159	Argument	read_fd		9654880	0					
ANR	9655160	Identifier	read_fd		9654880	0					
ANR	9655161	ExpressionStatement	fclose ( temp_fd )	85:8:2130:2145	9654880	5	True				
ANR	9655162	CallExpression	fclose ( temp_fd )		9654880	0					
ANR	9655163	Callee	fclose		9654880	0					
ANR	9655164	Identifier	fclose		9654880	0					
ANR	9655165	ArgumentList	temp_fd		9654880	1					
ANR	9655166	Argument	temp_fd		9654880	0					
ANR	9655167	Identifier	temp_fd		9654880	0					
ANR	9655168	ExpressionStatement	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"	86:8:2155:2187	9654880	6	True				
ANR	9655169	AssignmentExpression	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"		9654880	0		=			
ANR	9655170	Identifier	temp_fd		9654880	0					
ANR	9655171	CallExpression	"gp_fopen ( ""temp.ps"" , ""wb"" )"		9654880	1					
ANR	9655172	Callee	gp_fopen		9654880	0					
ANR	9655173	Identifier	gp_fopen		9654880	0					
ANR	9655174	ArgumentList	"""temp.ps"""		9654880	1					
ANR	9655175	Argument	"""temp.ps"""		9654880	0					
ANR	9655176	PrimaryExpression	"""temp.ps"""		9654880	0					
ANR	9655177	Argument	"""wb"""		9654880	1					
ANR	9655178	PrimaryExpression	"""wb"""		9654880	0					
ANR	9655179	ReturnStatement	return 0 ;	87:4:2193:2201	9654880	7	True				
ANR	9655180	PrimaryExpression	0		9654880	0					
ANR	9655181	ReturnType	static int GSDLLCALL		9654880	1					
ANR	9655182	Identifier	gsdll_stdin		9654880	2					
ANR	9655183	ParameterList	"void * instance , char * buf , int len"		9654880	3					
ANR	9655184	Parameter	void * instance	41:12:899:912	9654880	0	True				
ANR	9655185	ParameterType	void *		9654880	0					
ANR	9655186	Identifier	instance		9654880	1					
ANR	9655187	Parameter	char * buf	41:28:915:923	9654880	1	True				
ANR	9655188	ParameterType	char *		9654880	0					
ANR	9655189	Identifier	buf		9654880	1					
ANR	9655190	Parameter	int len	41:39:926:932	9654880	2	True				
ANR	9655191	ParameterType	int		9654880	0					
ANR	9655192	Identifier	len		9654880	1					
ANR	9655193	CFGEntryNode	ENTRY		9654880		True				
ANR	9655194	CFGExitNode	EXIT		9654880		True				
ANR	9655195	Symbol	init		9654880						
ANR	9655196	Symbol	black_fd		9654880						
ANR	9655197	Symbol	read_fd		9654880						
ANR	9655198	Symbol	instance		9654880						
ANR	9655199	Symbol	c		9654880						
ANR	9655200	Symbol	count		9654880						
ANR	9655201	Symbol	temp_fd		9654880						
ANR	9655202	Symbol	choose		9654880						
ANR	9655203	Symbol	& hlen		9654880						
ANR	9655204	Symbol	stderr		9654880						
ANR	9655205	Symbol	strlen		9654880						
ANR	9655206	Symbol	buf		9654880						
ANR	9655207	Symbol	len		9654880						
ANR	9655208	Symbol	gp_fopen		9654880						
ANR	9655209	Symbol	eof		9654880						
ANR	9655210	Symbol	hlen		9654880						
ANR	9655211	Symbol	EOF		9654880						
ANR	9655212	Symbol	yylex		9654880						
ANR	9655213	Symbol	color_fd		9654880						
ANR	9655214	Symbol	fgetc		9654880						
ANR	9655215	Function	gsdll_stdin	91:0:2221:2836							
ANR	9655216	FunctionDef	"gsdll_stdin (void * instance , char * buf , int len)"		9655215	0					
ANR	9655217	CompoundStatement		93:0:2290:2836	9655215	0					
ANR	9655218	IdentifierDeclStatement	int ch ;	94:4:2296:2302	9655215	0	True				
ANR	9655219	IdentifierDecl	ch		9655215	0					
ANR	9655220	IdentifierDeclType	int		9655215	0					
ANR	9655221	Identifier	ch		9655215	1					
ANR	9655222	IdentifierDeclStatement	int count = 0 ;	95:4:2308:2321	9655215	1	True				
ANR	9655223	IdentifierDecl	count = 0		9655215	0					
ANR	9655224	IdentifierDeclType	int		9655215	0					
ANR	9655225	Identifier	count		9655215	1					
ANR	9655226	AssignmentExpression	count = 0		9655215	2		=			
ANR	9655227	Identifier	count		9655215	0					
ANR	9655228	PrimaryExpression	0		9655215	1					
ANR	9655229	IdentifierDeclStatement	size_t back ;	96:8:2331:2342	9655215	2	True				
ANR	9655230	IdentifierDecl	back		9655215	0					
ANR	9655231	IdentifierDeclType	size_t		9655215	0					
ANR	9655232	Identifier	back		9655215	1					
ANR	9655233	IdentifierDeclStatement	char * init = buf ;	97:4:2348:2362	9655215	3	True				
ANR	9655234	IdentifierDecl	* init = buf		9655215	0					
ANR	9655235	IdentifierDeclType	char *		9655215	0					
ANR	9655236	Identifier	init		9655215	1					
ANR	9655237	AssignmentExpression	* init = buf		9655215	2		=			
ANR	9655238	Identifier	buf		9655215	0					
ANR	9655239	Identifier	buf		9655215	1					
ANR	9655240	WhileStatement	while ( count < len )		9655215	4					
ANR	9655241	Condition	count < len	98:11:2375:2385	9655215	0	True				
ANR	9655242	RelationalExpression	count < len		9655215	0		<			
ANR	9655243	Identifier	count		9655215	0					
ANR	9655244	Identifier	len		9655215	1					
ANR	9655245	CompoundStatement		6:24:97:97	9655215	1					
ANR	9655246	ExpressionStatement	ch = fgetc ( stdin )	99:8:2398:2415	9655215	0	True				
ANR	9655247	AssignmentExpression	ch = fgetc ( stdin )		9655215	0		=			
ANR	9655248	Identifier	ch		9655215	0					
ANR	9655249	CallExpression	fgetc ( stdin )		9655215	1					
ANR	9655250	Callee	fgetc		9655215	0					
ANR	9655251	Identifier	fgetc		9655215	0					
ANR	9655252	ArgumentList	stdin		9655215	1					
ANR	9655253	Argument	stdin		9655215	0					
ANR	9655254	Identifier	stdin		9655215	0					
ANR	9655255	IfStatement	if ( ch == EOF )		9655215	1					
ANR	9655256	Condition	ch == EOF	100:12:2429:2437	9655215	0	True				
ANR	9655257	EqualityExpression	ch == EOF		9655215	0		==			
ANR	9655258	Identifier	ch		9655215	0					
ANR	9655259	Identifier	EOF		9655215	1					
ANR	9655260	CompoundStatement		8:22:148:148	9655215	1					
ANR	9655261	ExpressionStatement	"fprintf ( stderr , ""lese %s\\n"" , buf )"	102:4:2466:2498	9655215	0	True				
ANR	9655262	CallExpression	"fprintf ( stderr , ""lese %s\\n"" , buf )"		9655215	0					
ANR	9655263	Callee	fprintf		9655215	0					
ANR	9655264	Identifier	fprintf		9655215	0					
ANR	9655265	ArgumentList	stderr		9655215	1					
ANR	9655266	Argument	stderr		9655215	0					
ANR	9655267	Identifier	stderr		9655215	0					
ANR	9655268	Argument	"""lese %s\\n"""		9655215	1					
ANR	9655269	PrimaryExpression	"""lese %s\\n"""		9655215	0					
ANR	9655270	Argument	buf		9655215	2					
ANR	9655271	Identifier	buf		9655215	0					
ANR	9655272	ExpressionStatement	"fwrite ( init , 1 , count , temp_fd )"	104:8:2515:2543	9655215	1	True				
ANR	9655273	CallExpression	"fwrite ( init , 1 , count , temp_fd )"		9655215	0					
ANR	9655274	Callee	fwrite		9655215	0					
ANR	9655275	Identifier	fwrite		9655215	0					
ANR	9655276	ArgumentList	init		9655215	1					
ANR	9655277	Argument	init		9655215	0					
ANR	9655278	Identifier	init		9655215	0					
ANR	9655279	Argument	1		9655215	1					
ANR	9655280	PrimaryExpression	1		9655215	0					
ANR	9655281	Argument	count		9655215	2					
ANR	9655282	Identifier	count		9655215	0					
ANR	9655283	Argument	temp_fd		9655215	3					
ANR	9655284	Identifier	temp_fd		9655215	0					
ANR	9655285	ExpressionStatement	fflush ( temp_fd )	105:8:2553:2568	9655215	2	True				
ANR	9655286	CallExpression	fflush ( temp_fd )		9655215	0					
ANR	9655287	Callee	fflush		9655215	0					
ANR	9655288	Identifier	fflush		9655215	0					
ANR	9655289	ArgumentList	temp_fd		9655215	1					
ANR	9655290	Argument	temp_fd		9655215	0					
ANR	9655291	Identifier	temp_fd		9655215	0					
ANR	9655292	ReturnStatement	return 0 ;	106:12:2582:2590	9655215	3	True				
ANR	9655293	PrimaryExpression	0		9655215	0					
ANR	9655294	ExpressionStatement	* buf ++ = ch	108:8:2610:2621	9655215	2	True				
ANR	9655295	AssignmentExpression	* buf ++ = ch		9655215	0		=			
ANR	9655296	UnaryOperationExpression	* buf ++		9655215	0					
ANR	9655297	UnaryOperator	*		9655215	0					
ANR	9655298	PostIncDecOperationExpression	buf ++		9655215	1					
ANR	9655299	Identifier	buf		9655215	0					
ANR	9655300	IncDec	++		9655215	1					
ANR	9655301	Identifier	ch		9655215	1					
ANR	9655302	ExpressionStatement	count ++	109:8:2631:2638	9655215	3	True				
ANR	9655303	PostIncDecOperationExpression	count ++		9655215	0					
ANR	9655304	Identifier	count		9655215	0					
ANR	9655305	IncDec	++		9655215	1					
ANR	9655306	IfStatement	if ( ch == '\\n' )		9655215	4					
ANR	9655307	Condition	ch == '\\n'	110:12:2652:2661	9655215	0	True				
ANR	9655308	EqualityExpression	ch == '\\n'		9655215	0		==			
ANR	9655309	Identifier	ch		9655215	0					
ANR	9655310	PrimaryExpression	'\\n'		9655215	1					
ANR	9655311	BreakStatement	break ;	111:12:2676:2681	9655215	1	True				
ANR	9655312	ExpressionStatement	"fprintf ( stderr , ""lese %s\\n"" , buf )"	114:4:2714:2746	9655215	5	True				
ANR	9655313	CallExpression	"fprintf ( stderr , ""lese %s\\n"" , buf )"		9655215	0					
ANR	9655314	Callee	fprintf		9655215	0					
ANR	9655315	Identifier	fprintf		9655215	0					
ANR	9655316	ArgumentList	stderr		9655215	1					
ANR	9655317	Argument	stderr		9655215	0					
ANR	9655318	Identifier	stderr		9655215	0					
ANR	9655319	Argument	"""lese %s\\n"""		9655215	1					
ANR	9655320	PrimaryExpression	"""lese %s\\n"""		9655215	0					
ANR	9655321	Argument	buf		9655215	2					
ANR	9655322	Identifier	buf		9655215	0					
ANR	9655323	ExpressionStatement	"fwrite ( init , 1 , count , temp_fd )"	116:8:2763:2791	9655215	6	True				
ANR	9655324	CallExpression	"fwrite ( init , 1 , count , temp_fd )"		9655215	0					
ANR	9655325	Callee	fwrite		9655215	0					
ANR	9655326	Identifier	fwrite		9655215	0					
ANR	9655327	ArgumentList	init		9655215	1					
ANR	9655328	Argument	init		9655215	0					
ANR	9655329	Identifier	init		9655215	0					
ANR	9655330	Argument	1		9655215	1					
ANR	9655331	PrimaryExpression	1		9655215	0					
ANR	9655332	Argument	count		9655215	2					
ANR	9655333	Identifier	count		9655215	0					
ANR	9655334	Argument	temp_fd		9655215	3					
ANR	9655335	Identifier	temp_fd		9655215	0					
ANR	9655336	ExpressionStatement	fflush ( temp_fd )	117:8:2801:2816	9655215	7	True				
ANR	9655337	CallExpression	fflush ( temp_fd )		9655215	0					
ANR	9655338	Callee	fflush		9655215	0					
ANR	9655339	Identifier	fflush		9655215	0					
ANR	9655340	ArgumentList	temp_fd		9655215	1					
ANR	9655341	Argument	temp_fd		9655215	0					
ANR	9655342	Identifier	temp_fd		9655215	0					
ANR	9655343	ReturnStatement	return count ;	118:4:2822:2834	9655215	8	True				
ANR	9655344	Identifier	count		9655215	0					
ANR	9655345	ReturnType	static int GSDLLCALL		9655215	1					
ANR	9655346	Identifier	gsdll_stdin		9655215	2					
ANR	9655347	ParameterList	"void * instance , char * buf , int len"		9655215	3					
ANR	9655348	Parameter	void * instance	92:12:2254:2267	9655215	0	True				
ANR	9655349	ParameterType	void *		9655215	0					
ANR	9655350	Identifier	instance		9655215	1					
ANR	9655351	Parameter	char * buf	92:28:2270:2278	9655215	1	True				
ANR	9655352	ParameterType	char *		9655215	0					
ANR	9655353	Identifier	buf		9655215	1					
ANR	9655354	Parameter	int len	92:39:2281:2287	9655215	2	True				
ANR	9655355	ParameterType	int		9655215	0					
ANR	9655356	Identifier	len		9655215	1					
ANR	9655357	CFGEntryNode	ENTRY		9655215		True				
ANR	9655358	CFGExitNode	EXIT		9655215		True				
ANR	9655359	Symbol	init		9655215						
ANR	9655360	Symbol	stdin		9655215						
ANR	9655361	Symbol	instance		9655215						
ANR	9655362	Symbol	ch		9655215						
ANR	9655363	Symbol	count		9655215						
ANR	9655364	Symbol	back		9655215						
ANR	9655365	Symbol	temp_fd		9655215						
ANR	9655366	Symbol	stderr		9655215						
ANR	9655367	Symbol	* buf ++		9655215						
ANR	9655368	Symbol	buf		9655215						
ANR	9655369	Symbol	len		9655215						
ANR	9655370	Symbol	EOF		9655215						
ANR	9655371	Symbol	fgetc		9655215						
ANR	9655372	Function	gsdll_stdout	122:0:2846:2993							
ANR	9655373	FunctionDef	"gsdll_stdout (void * instance , const char * str , int len)"		9655372	0					
ANR	9655374	CompoundStatement		124:0:2922:2993	9655372	0					
ANR	9655375	ExpressionStatement	"fwrite ( str , 1 , len , stdout )"	125:4:2928:2955	9655372	0	True				
ANR	9655376	CallExpression	"fwrite ( str , 1 , len , stdout )"		9655372	0					
ANR	9655377	Callee	fwrite		9655372	0					
ANR	9655378	Identifier	fwrite		9655372	0					
ANR	9655379	ArgumentList	str		9655372	1					
ANR	9655380	Argument	str		9655372	0					
ANR	9655381	Identifier	str		9655372	0					
ANR	9655382	Argument	1		9655372	1					
ANR	9655383	PrimaryExpression	1		9655372	0					
ANR	9655384	Argument	len		9655372	2					
ANR	9655385	Identifier	len		9655372	0					
ANR	9655386	Argument	stdout		9655372	3					
ANR	9655387	Identifier	stdout		9655372	0					
ANR	9655388	ExpressionStatement	fflush ( stdout )	126:4:2961:2975	9655372	1	True				
ANR	9655389	CallExpression	fflush ( stdout )		9655372	0					
ANR	9655390	Callee	fflush		9655372	0					
ANR	9655391	Identifier	fflush		9655372	0					
ANR	9655392	ArgumentList	stdout		9655372	1					
ANR	9655393	Argument	stdout		9655372	0					
ANR	9655394	Identifier	stdout		9655372	0					
ANR	9655395	ReturnStatement	return len ;	127:4:2981:2991	9655372	2	True				
ANR	9655396	Identifier	len		9655372	0					
ANR	9655397	ReturnType	static int GSDLLCALL		9655372	1					
ANR	9655398	Identifier	gsdll_stdout		9655372	2					
ANR	9655399	ParameterList	"void * instance , const char * str , int len"		9655372	3					
ANR	9655400	Parameter	void * instance	123:13:2880:2893	9655372	0	True				
ANR	9655401	ParameterType	void *		9655372	0					
ANR	9655402	Identifier	instance		9655372	1					
ANR	9655403	Parameter	const char * str	123:29:2896:2910	9655372	1	True				
ANR	9655404	ParameterType	const char *		9655372	0					
ANR	9655405	Identifier	str		9655372	1					
ANR	9655406	Parameter	int len	123:46:2913:2919	9655372	2	True				
ANR	9655407	ParameterType	int		9655372	0					
ANR	9655408	Identifier	len		9655372	1					
ANR	9655409	CFGEntryNode	ENTRY		9655372		True				
ANR	9655410	CFGExitNode	EXIT		9655372		True				
ANR	9655411	Symbol	str		9655372						
ANR	9655412	Symbol	instance		9655372						
ANR	9655413	Symbol	len		9655372						
ANR	9655414	Symbol	stdout		9655372						
ANR	9655415	Function	gsdll_stderr	130:0:2996:3143							
ANR	9655416	FunctionDef	"gsdll_stderr (void * instance , const char * str , int len)"		9655415	0					
ANR	9655417	CompoundStatement		132:0:3072:3143	9655415	0					
ANR	9655418	ExpressionStatement	"fwrite ( str , 1 , len , stderr )"	133:4:3078:3105	9655415	0	True				
ANR	9655419	CallExpression	"fwrite ( str , 1 , len , stderr )"		9655415	0					
ANR	9655420	Callee	fwrite		9655415	0					
ANR	9655421	Identifier	fwrite		9655415	0					
ANR	9655422	ArgumentList	str		9655415	1					
ANR	9655423	Argument	str		9655415	0					
ANR	9655424	Identifier	str		9655415	0					
ANR	9655425	Argument	1		9655415	1					
ANR	9655426	PrimaryExpression	1		9655415	0					
ANR	9655427	Argument	len		9655415	2					
ANR	9655428	Identifier	len		9655415	0					
ANR	9655429	Argument	stderr		9655415	3					
ANR	9655430	Identifier	stderr		9655415	0					
ANR	9655431	ExpressionStatement	fflush ( stderr )	134:4:3111:3125	9655415	1	True				
ANR	9655432	CallExpression	fflush ( stderr )		9655415	0					
ANR	9655433	Callee	fflush		9655415	0					
ANR	9655434	Identifier	fflush		9655415	0					
ANR	9655435	ArgumentList	stderr		9655415	1					
ANR	9655436	Argument	stderr		9655415	0					
ANR	9655437	Identifier	stderr		9655415	0					
ANR	9655438	ReturnStatement	return len ;	135:4:3131:3141	9655415	2	True				
ANR	9655439	Identifier	len		9655415	0					
ANR	9655440	ReturnType	static int GSDLLCALL		9655415	1					
ANR	9655441	Identifier	gsdll_stderr		9655415	2					
ANR	9655442	ParameterList	"void * instance , const char * str , int len"		9655415	3					
ANR	9655443	Parameter	void * instance	131:13:3030:3043	9655415	0	True				
ANR	9655444	ParameterType	void *		9655415	0					
ANR	9655445	Identifier	instance		9655415	1					
ANR	9655446	Parameter	const char * str	131:29:3046:3060	9655415	1	True				
ANR	9655447	ParameterType	const char *		9655415	0					
ANR	9655448	Identifier	str		9655415	1					
ANR	9655449	Parameter	int len	131:46:3063:3069	9655415	2	True				
ANR	9655450	ParameterType	int		9655415	0					
ANR	9655451	Identifier	len		9655415	1					
ANR	9655452	CFGEntryNode	ENTRY		9655415		True				
ANR	9655453	CFGExitNode	EXIT		9655415		True				
ANR	9655454	Symbol	str		9655415						
ANR	9655455	Symbol	instance		9655415						
ANR	9655456	Symbol	len		9655415						
ANR	9655457	Symbol	stderr		9655415						
ANR	9655458	Function	display_open	140:0:3227:3432							
ANR	9655459	FunctionDef	"display_open (void * handle , void * device)"		9655458	0					
ANR	9655460	CompoundStatement		141:0:3279:3432	9655458	0					
ANR	9655461	IdentifierDeclStatement	char buf [ 256 ] ;	143:4:3306:3319	9655458	0	True				
ANR	9655462	IdentifierDecl	buf [ 256 ]		9655458	0					
ANR	9655463	IdentifierDeclType	char [ 256 ]		9655458	0					
ANR	9655464	Identifier	buf		9655458	1					
ANR	9655465	PrimaryExpression	256		9655458	2					
ANR	9655466	ExpressionStatement	"sprintf ( buf , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"	144:4:3325:3383	9655458	1	True				
ANR	9655467	CallExpression	"sprintf ( buf , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"		9655458	0					
ANR	9655468	Callee	sprintf		9655458	0					
ANR	9655469	Identifier	sprintf		9655458	0					
ANR	9655470	ArgumentList	buf		9655458	1					
ANR	9655471	Argument	buf		9655458	0					
ANR	9655472	Identifier	buf		9655458	0					
ANR	9655473	Argument	"""display_open(0x%x, 0x%x)\\n"""		9655458	1					
ANR	9655474	PrimaryExpression	"""display_open(0x%x, 0x%x)\\n"""		9655458	0					
ANR	9655475	Argument	handle		9655458	2					
ANR	9655476	Identifier	handle		9655458	0					
ANR	9655477	Argument	device		9655458	3					
ANR	9655478	Identifier	device		9655458	0					
ANR	9655479	ExpressionStatement	"fprintf ( stderr , buf )"	145:4:3389:3409	9655458	2	True				
ANR	9655480	CallExpression	"fprintf ( stderr , buf )"		9655458	0					
ANR	9655481	Callee	fprintf		9655458	0					
ANR	9655482	Identifier	fprintf		9655458	0					
ANR	9655483	ArgumentList	stderr		9655458	1					
ANR	9655484	Argument	stderr		9655458	0					
ANR	9655485	Identifier	stderr		9655458	0					
ANR	9655486	Argument	buf		9655458	1					
ANR	9655487	Identifier	buf		9655458	0					
ANR	9655488	ReturnStatement	return 0 ;	147:4:3422:3430	9655458	3	True				
ANR	9655489	PrimaryExpression	0		9655458	0					
ANR	9655490	ReturnType	static int		9655458	1					
ANR	9655491	Identifier	display_open		9655458	2					
ANR	9655492	ParameterList	"void * handle , void * device"		9655458	3					
ANR	9655493	Parameter	void * handle	140:24:3251:3262	9655458	0	True				
ANR	9655494	ParameterType	void *		9655458	0					
ANR	9655495	Identifier	handle		9655458	1					
ANR	9655496	Parameter	void * device	140:38:3265:3276	9655458	1	True				
ANR	9655497	ParameterType	void *		9655458	0					
ANR	9655498	Identifier	device		9655458	1					
ANR	9655499	CFGEntryNode	ENTRY		9655458		True				
ANR	9655500	CFGExitNode	EXIT		9655458		True				
ANR	9655501	Symbol	buf		9655458						
ANR	9655502	Symbol	handle		9655458						
ANR	9655503	Symbol	stderr		9655458						
ANR	9655504	Symbol	device		9655458						
ANR	9655505	Function	display_preclose	152:0:3532:3800							
ANR	9655506	FunctionDef	"display_preclose (void * handle , void * device)"		9655505	0					
ANR	9655507	CompoundStatement		153:0:3588:3800	9655505	0					
ANR	9655508	IdentifierDeclStatement	char buf [ 256 ] ;	155:4:3615:3628	9655505	0	True				
ANR	9655509	IdentifierDecl	buf [ 256 ]		9655505	0					
ANR	9655510	IdentifierDeclType	char [ 256 ]		9655505	0					
ANR	9655511	Identifier	buf		9655505	1					
ANR	9655512	PrimaryExpression	256		9655505	2					
ANR	9655513	ExpressionStatement	"sprintf ( buf , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"	156:4:3634:3696	9655505	1	True				
ANR	9655514	CallExpression	"sprintf ( buf , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"		9655505	0					
ANR	9655515	Callee	sprintf		9655505	0					
ANR	9655516	Identifier	sprintf		9655505	0					
ANR	9655517	ArgumentList	buf		9655505	1					
ANR	9655518	Argument	buf		9655505	0					
ANR	9655519	Identifier	buf		9655505	0					
ANR	9655520	Argument	"""display_preclose(0x%x, 0x%x)\\n"""		9655505	1					
ANR	9655521	PrimaryExpression	"""display_preclose(0x%x, 0x%x)\\n"""		9655505	0					
ANR	9655522	Argument	handle		9655505	2					
ANR	9655523	Identifier	handle		9655505	0					
ANR	9655524	Argument	device		9655505	3					
ANR	9655525	Identifier	device		9655505	0					
ANR	9655526	ExpressionStatement	"fprintf ( stderr , buf )"	157:4:3702:3722	9655505	2	True				
ANR	9655527	CallExpression	"fprintf ( stderr , buf )"		9655505	0					
ANR	9655528	Callee	fprintf		9655505	0					
ANR	9655529	Identifier	fprintf		9655505	0					
ANR	9655530	ArgumentList	stderr		9655505	1					
ANR	9655531	Argument	stderr		9655505	0					
ANR	9655532	Identifier	stderr		9655505	0					
ANR	9655533	Argument	buf		9655505	1					
ANR	9655534	Identifier	buf		9655505	0					
ANR	9655535	ReturnStatement	return 0 ;	160:4:3790:3798	9655505	3	True				
ANR	9655536	PrimaryExpression	0		9655505	0					
ANR	9655537	ReturnType	static int		9655505	1					
ANR	9655538	Identifier	display_preclose		9655505	2					
ANR	9655539	ParameterList	"void * handle , void * device"		9655505	3					
ANR	9655540	Parameter	void * handle	152:28:3560:3571	9655505	0	True				
ANR	9655541	ParameterType	void *		9655505	0					
ANR	9655542	Identifier	handle		9655505	1					
ANR	9655543	Parameter	void * device	152:42:3574:3585	9655505	1	True				
ANR	9655544	ParameterType	void *		9655505	0					
ANR	9655545	Identifier	device		9655505	1					
ANR	9655546	CFGEntryNode	ENTRY		9655505		True				
ANR	9655547	CFGExitNode	EXIT		9655505		True				
ANR	9655548	Symbol	buf		9655505						
ANR	9655549	Symbol	handle		9655505						
ANR	9655550	Symbol	stderr		9655505						
ANR	9655551	Symbol	device		9655505						
ANR	9655552	Function	display_close	165:0:3880:4087							
ANR	9655553	FunctionDef	"display_close (void * handle , void * device)"		9655552	0					
ANR	9655554	CompoundStatement		166:0:3933:4087	9655552	0					
ANR	9655555	IdentifierDeclStatement	char buf [ 256 ] ;	168:4:3960:3973	9655552	0	True				
ANR	9655556	IdentifierDecl	buf [ 256 ]		9655552	0					
ANR	9655557	IdentifierDeclType	char [ 256 ]		9655552	0					
ANR	9655558	Identifier	buf		9655552	1					
ANR	9655559	PrimaryExpression	256		9655552	2					
ANR	9655560	ExpressionStatement	"sprintf ( buf , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"	169:4:3979:4038	9655552	1	True				
ANR	9655561	CallExpression	"sprintf ( buf , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"		9655552	0					
ANR	9655562	Callee	sprintf		9655552	0					
ANR	9655563	Identifier	sprintf		9655552	0					
ANR	9655564	ArgumentList	buf		9655552	1					
ANR	9655565	Argument	buf		9655552	0					
ANR	9655566	Identifier	buf		9655552	0					
ANR	9655567	Argument	"""display_close(0x%x, 0x%x)\\n"""		9655552	1					
ANR	9655568	PrimaryExpression	"""display_close(0x%x, 0x%x)\\n"""		9655552	0					
ANR	9655569	Argument	handle		9655552	2					
ANR	9655570	Identifier	handle		9655552	0					
ANR	9655571	Argument	device		9655552	3					
ANR	9655572	Identifier	device		9655552	0					
ANR	9655573	ExpressionStatement	"fprintf ( stderr , buf )"	170:4:4044:4064	9655552	2	True				
ANR	9655574	CallExpression	"fprintf ( stderr , buf )"		9655552	0					
ANR	9655575	Callee	fprintf		9655552	0					
ANR	9655576	Identifier	fprintf		9655552	0					
ANR	9655577	ArgumentList	stderr		9655552	1					
ANR	9655578	Argument	stderr		9655552	0					
ANR	9655579	Identifier	stderr		9655552	0					
ANR	9655580	Argument	buf		9655552	1					
ANR	9655581	Identifier	buf		9655552	0					
ANR	9655582	ReturnStatement	return 0 ;	172:4:4077:4085	9655552	3	True				
ANR	9655583	PrimaryExpression	0		9655552	0					
ANR	9655584	ReturnType	static int		9655552	1					
ANR	9655585	Identifier	display_close		9655552	2					
ANR	9655586	ParameterList	"void * handle , void * device"		9655552	3					
ANR	9655587	Parameter	void * handle	165:25:3905:3916	9655552	0	True				
ANR	9655588	ParameterType	void *		9655552	0					
ANR	9655589	Identifier	handle		9655552	1					
ANR	9655590	Parameter	void * device	165:39:3919:3930	9655552	1	True				
ANR	9655591	ParameterType	void *		9655552	0					
ANR	9655592	Identifier	device		9655552	1					
ANR	9655593	CFGEntryNode	ENTRY		9655552		True				
ANR	9655594	CFGExitNode	EXIT		9655552		True				
ANR	9655595	Symbol	buf		9655552						
ANR	9655596	Symbol	handle		9655552						
ANR	9655597	Symbol	stderr		9655552						
ANR	9655598	Symbol	device		9655552						
ANR	9655599	Function	display_presize	177:0:4184:4542							
ANR	9655600	FunctionDef	"display_presize (void * handle , void * device , int width , int height , int raster , unsigned int format)"		9655599	0					
ANR	9655601	CompoundStatement		179:0:4303:4542	9655599	0					
ANR	9655602	IdentifierDeclStatement	char buf [ 256 ] ;	181:4:4330:4343	9655599	0	True				
ANR	9655603	IdentifierDecl	buf [ 256 ]		9655599	0					
ANR	9655604	IdentifierDeclType	char [ 256 ]		9655599	0					
ANR	9655605	Identifier	buf		9655599	1					
ANR	9655606	PrimaryExpression	256		9655599	2					
ANR	9655607	ExpressionStatement	"sprintf ( buf , ""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"" , handle , device , width , height , raster , format )"	182:4:4349:4493	9655599	1	True				
ANR	9655608	CallExpression	"sprintf ( buf , ""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"" , handle , device , width , height , raster , format )"		9655599	0					
ANR	9655609	Callee	sprintf		9655599	0					
ANR	9655610	Identifier	sprintf		9655599	0					
ANR	9655611	ArgumentList	buf		9655599	1					
ANR	9655612	Argument	buf		9655599	0					
ANR	9655613	Identifier	buf		9655599	0					
ANR	9655614	Argument	"""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"""		9655599	1					
ANR	9655615	PrimaryExpression	"""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"""		9655599	0					
ANR	9655616	Argument	handle		9655599	2					
ANR	9655617	Identifier	handle		9655599	0					
ANR	9655618	Argument	device		9655599	3					
ANR	9655619	Identifier	device		9655599	0					
ANR	9655620	Argument	width		9655599	4					
ANR	9655621	Identifier	width		9655599	0					
ANR	9655622	Argument	height		9655599	5					
ANR	9655623	Identifier	height		9655599	0					
ANR	9655624	Argument	raster		9655599	6					
ANR	9655625	Identifier	raster		9655599	0					
ANR	9655626	Argument	format		9655599	7					
ANR	9655627	Identifier	format		9655599	0					
ANR	9655628	ExpressionStatement	"fprintf ( stderr , buf )"	185:4:4499:4519	9655599	2	True				
ANR	9655629	CallExpression	"fprintf ( stderr , buf )"		9655599	0					
ANR	9655630	Callee	fprintf		9655599	0					
ANR	9655631	Identifier	fprintf		9655599	0					
ANR	9655632	ArgumentList	stderr		9655599	1					
ANR	9655633	Argument	stderr		9655599	0					
ANR	9655634	Identifier	stderr		9655599	0					
ANR	9655635	Argument	buf		9655599	1					
ANR	9655636	Identifier	buf		9655599	0					
ANR	9655637	ReturnStatement	return 0 ;	187:4:4532:4540	9655599	3	True				
ANR	9655638	PrimaryExpression	0		9655599	0					
ANR	9655639	ReturnType	static int		9655599	1					
ANR	9655640	Identifier	display_presize		9655599	2					
ANR	9655641	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format"		9655599	3					
ANR	9655642	Parameter	void * handle	177:27:4211:4222	9655599	0	True				
ANR	9655643	ParameterType	void *		9655599	0					
ANR	9655644	Identifier	handle		9655599	1					
ANR	9655645	Parameter	void * device	177:41:4225:4236	9655599	1	True				
ANR	9655646	ParameterType	void *		9655599	0					
ANR	9655647	Identifier	device		9655599	1					
ANR	9655648	Parameter	int width	177:55:4239:4247	9655599	2	True				
ANR	9655649	ParameterType	int		9655599	0					
ANR	9655650	Identifier	width		9655599	1					
ANR	9655651	Parameter	int height	177:66:4250:4259	9655599	3	True				
ANR	9655652	ParameterType	int		9655599	0					
ANR	9655653	Identifier	height		9655599	1					
ANR	9655654	Parameter	int raster	178:8:4270:4279	9655599	4	True				
ANR	9655655	ParameterType	int		9655599	0					
ANR	9655656	Identifier	raster		9655599	1					
ANR	9655657	Parameter	unsigned int format	178:20:4282:4300	9655599	5	True				
ANR	9655658	ParameterType	unsigned int		9655599	0					
ANR	9655659	Identifier	format		9655599	1					
ANR	9655660	CFGEntryNode	ENTRY		9655599		True				
ANR	9655661	CFGExitNode	EXIT		9655599		True				
ANR	9655662	Symbol	buf		9655599						
ANR	9655663	Symbol	width		9655599						
ANR	9655664	Symbol	raster		9655599						
ANR	9655665	Symbol	format		9655599						
ANR	9655666	Symbol	handle		9655599						
ANR	9655667	Symbol	stderr		9655599						
ANR	9655668	Symbol	device		9655599						
ANR	9655669	Symbol	height		9655599						
ANR	9655670	Function	display_size	192:0:4623:5118							
ANR	9655671	FunctionDef	"display_size (void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage)"		9655670	0					
ANR	9655672	CompoundStatement		194:0:4762:5118	9655670	0					
ANR	9655673	IdentifierDeclStatement	char buf [ 256 ] ;	197:4:4790:4803	9655670	0	True				
ANR	9655674	IdentifierDecl	buf [ 256 ]		9655670	0					
ANR	9655675	IdentifierDeclType	char [ 256 ]		9655670	0					
ANR	9655676	Identifier	buf		9655670	1					
ANR	9655677	PrimaryExpression	256		9655670	2					
ANR	9655678	ExpressionStatement	"sprintf ( buf , ""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"	198:4:4809:4969	9655670	1	True				
ANR	9655679	CallExpression	"sprintf ( buf , ""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"		9655670	0					
ANR	9655680	Callee	sprintf		9655670	0					
ANR	9655681	Identifier	sprintf		9655670	0					
ANR	9655682	ArgumentList	buf		9655670	1					
ANR	9655683	Argument	buf		9655670	0					
ANR	9655684	Identifier	buf		9655670	0					
ANR	9655685	Argument	"""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"""		9655670	1					
ANR	9655686	PrimaryExpression	"""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"""		9655670	0					
ANR	9655687	Argument	handle		9655670	2					
ANR	9655688	Identifier	handle		9655670	0					
ANR	9655689	Argument	device		9655670	3					
ANR	9655690	Identifier	device		9655670	0					
ANR	9655691	Argument	width		9655670	4					
ANR	9655692	Identifier	width		9655670	0					
ANR	9655693	Argument	height		9655670	5					
ANR	9655694	Identifier	height		9655670	0					
ANR	9655695	Argument	raster		9655670	6					
ANR	9655696	Identifier	raster		9655670	0					
ANR	9655697	Argument	format		9655670	7					
ANR	9655698	Identifier	format		9655670	0					
ANR	9655699	Argument	pimage		9655670	8					
ANR	9655700	Identifier	pimage		9655670	0					
ANR	9655701	ExpressionStatement	"fprintf ( stderr , buf )"	201:4:4975:4995	9655670	2	True				
ANR	9655702	CallExpression	"fprintf ( stderr , buf )"		9655670	0					
ANR	9655703	Callee	fprintf		9655670	0					
ANR	9655704	Identifier	fprintf		9655670	0					
ANR	9655705	ArgumentList	stderr		9655670	1					
ANR	9655706	Argument	stderr		9655670	0					
ANR	9655707	Identifier	stderr		9655670	0					
ANR	9655708	Argument	buf		9655670	1					
ANR	9655709	Identifier	buf		9655670	0					
ANR	9655710	ExpressionStatement	myimage = pimage	203:8:5012:5026	9655670	3	True				
ANR	9655711	AssignmentExpression	myimage = pimage		9655670	0		=			
ANR	9655712	Identifier	myimage		9655670	0					
ANR	9655713	Identifier	pimage		9655670	1					
ANR	9655714	ExpressionStatement	breite = width	204:8:5036:5048	9655670	4	True				
ANR	9655715	AssignmentExpression	breite = width		9655670	0		=			
ANR	9655716	Identifier	breite		9655670	0					
ANR	9655717	Identifier	width		9655670	1					
ANR	9655718	ExpressionStatement	hoehe = height	205:8:5058:5070	9655670	5	True				
ANR	9655719	AssignmentExpression	hoehe = height		9655670	0		=			
ANR	9655720	Identifier	hoehe		9655670	0					
ANR	9655721	Identifier	height		9655670	1					
ANR	9655722	ExpressionStatement	myraster = raster	206:8:5080:5095	9655670	6	True				
ANR	9655723	AssignmentExpression	myraster = raster		9655670	0		=			
ANR	9655724	Identifier	myraster		9655670	0					
ANR	9655725	Identifier	raster		9655670	1					
ANR	9655726	ReturnStatement	return 0 ;	207:11:5108:5116	9655670	7	True				
ANR	9655727	PrimaryExpression	0		9655670	0					
ANR	9655728	ReturnType	static int		9655670	1					
ANR	9655729	Identifier	display_size		9655670	2					
ANR	9655730	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage"		9655670	3					
ANR	9655731	Parameter	void * handle	192:24:4647:4658	9655670	0	True				
ANR	9655732	ParameterType	void *		9655670	0					
ANR	9655733	Identifier	handle		9655670	1					
ANR	9655734	Parameter	void * device	192:38:4661:4672	9655670	1	True				
ANR	9655735	ParameterType	void *		9655670	0					
ANR	9655736	Identifier	device		9655670	1					
ANR	9655737	Parameter	int width	192:52:4675:4683	9655670	2	True				
ANR	9655738	ParameterType	int		9655670	0					
ANR	9655739	Identifier	width		9655670	1					
ANR	9655740	Parameter	int height	192:63:4686:4695	9655670	3	True				
ANR	9655741	ParameterType	int		9655670	0					
ANR	9655742	Identifier	height		9655670	1					
ANR	9655743	Parameter	int raster	193:8:4706:4715	9655670	4	True				
ANR	9655744	ParameterType	int		9655670	0					
ANR	9655745	Identifier	raster		9655670	1					
ANR	9655746	Parameter	unsigned int format	193:20:4718:4736	9655670	5	True				
ANR	9655747	ParameterType	unsigned int		9655670	0					
ANR	9655748	Identifier	format		9655670	1					
ANR	9655749	Parameter	unsigned char * pimage	193:41:4739:4759	9655670	6	True				
ANR	9655750	ParameterType	unsigned char *		9655670	0					
ANR	9655751	Identifier	pimage		9655670	1					
ANR	9655752	CFGEntryNode	ENTRY		9655670		True				
ANR	9655753	CFGExitNode	EXIT		9655670		True				
ANR	9655754	Symbol	raster		9655670						
ANR	9655755	Symbol	format		9655670						
ANR	9655756	Symbol	handle		9655670						
ANR	9655757	Symbol	stderr		9655670						
ANR	9655758	Symbol	myraster		9655670						
ANR	9655759	Symbol	pimage		9655670						
ANR	9655760	Symbol	buf		9655670						
ANR	9655761	Symbol	myimage		9655670						
ANR	9655762	Symbol	breite		9655670						
ANR	9655763	Symbol	hoehe		9655670						
ANR	9655764	Symbol	width		9655670						
ANR	9655765	Symbol	device		9655670						
ANR	9655766	Symbol	height		9655670						
ANR	9655767	Function	display_sync	211:0:5137:5344							
ANR	9655768	FunctionDef	"display_sync (void * handle , void * device)"		9655767	0					
ANR	9655769	CompoundStatement		212:0:5189:5344	9655767	0					
ANR	9655770	IdentifierDeclStatement	char buf [ 256 ] ;	215:4:5217:5230	9655767	0	True				
ANR	9655771	IdentifierDecl	buf [ 256 ]		9655767	0					
ANR	9655772	IdentifierDeclType	char [ 256 ]		9655767	0					
ANR	9655773	Identifier	buf		9655767	1					
ANR	9655774	PrimaryExpression	256		9655767	2					
ANR	9655775	ExpressionStatement	"sprintf ( buf , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"	216:4:5236:5294	9655767	1	True				
ANR	9655776	CallExpression	"sprintf ( buf , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"		9655767	0					
ANR	9655777	Callee	sprintf		9655767	0					
ANR	9655778	Identifier	sprintf		9655767	0					
ANR	9655779	ArgumentList	buf		9655767	1					
ANR	9655780	Argument	buf		9655767	0					
ANR	9655781	Identifier	buf		9655767	0					
ANR	9655782	Argument	"""display_sync(0x%x, 0x%x)\\n"""		9655767	1					
ANR	9655783	PrimaryExpression	"""display_sync(0x%x, 0x%x)\\n"""		9655767	0					
ANR	9655784	Argument	handle		9655767	2					
ANR	9655785	Identifier	handle		9655767	0					
ANR	9655786	Argument	device		9655767	3					
ANR	9655787	Identifier	device		9655767	0					
ANR	9655788	ExpressionStatement	"fprintf ( stderr , buf )"	217:4:5300:5320	9655767	2	True				
ANR	9655789	CallExpression	"fprintf ( stderr , buf )"		9655767	0					
ANR	9655790	Callee	fprintf		9655767	0					
ANR	9655791	Identifier	fprintf		9655767	0					
ANR	9655792	ArgumentList	stderr		9655767	1					
ANR	9655793	Argument	stderr		9655767	0					
ANR	9655794	Identifier	stderr		9655767	0					
ANR	9655795	Argument	buf		9655767	1					
ANR	9655796	Identifier	buf		9655767	0					
ANR	9655797	ReturnStatement	return 0 ;	220:4:5334:5342	9655767	3	True				
ANR	9655798	PrimaryExpression	0		9655767	0					
ANR	9655799	ReturnType	static int		9655767	1					
ANR	9655800	Identifier	display_sync		9655767	2					
ANR	9655801	ParameterList	"void * handle , void * device"		9655767	3					
ANR	9655802	Parameter	void * handle	211:24:5161:5172	9655767	0	True				
ANR	9655803	ParameterType	void *		9655767	0					
ANR	9655804	Identifier	handle		9655767	1					
ANR	9655805	Parameter	void * device	211:38:5175:5186	9655767	1	True				
ANR	9655806	ParameterType	void *		9655767	0					
ANR	9655807	Identifier	device		9655767	1					
ANR	9655808	CFGEntryNode	ENTRY		9655767		True				
ANR	9655809	CFGExitNode	EXIT		9655767		True				
ANR	9655810	Symbol	buf		9655767						
ANR	9655811	Symbol	handle		9655767						
ANR	9655812	Symbol	stderr		9655767						
ANR	9655813	Symbol	device		9655767						
ANR	9655814	Function	display_page	225:0:5432:6709							
ANR	9655815	FunctionDef	"display_page (void * handle , void * device , int copies , int flush)"		9655814	0					
ANR	9655816	CompoundStatement		226:0:5507:6709	9655814	0					
ANR	9655817	IdentifierDeclStatement	"int i , t , color = 0 ;"	227:8:5517:5532	9655814	0	True				
ANR	9655818	IdentifierDecl	i		9655814	0					
ANR	9655819	IdentifierDeclType	int		9655814	0					
ANR	9655820	Identifier	i		9655814	1					
ANR	9655821	IdentifierDecl	t		9655814	1					
ANR	9655822	IdentifierDeclType	int		9655814	0					
ANR	9655823	Identifier	t		9655814	1					
ANR	9655824	IdentifierDecl	color = 0		9655814	2					
ANR	9655825	IdentifierDeclType	int		9655814	0					
ANR	9655826	Identifier	color		9655814	1					
ANR	9655827	AssignmentExpression	color = 0		9655814	2		=			
ANR	9655828	Identifier	color		9655814	0					
ANR	9655829	PrimaryExpression	0		9655814	1					
ANR	9655830	IdentifierDeclStatement	char buf [ 256 ] ;	229:4:5559:5572	9655814	1	True				
ANR	9655831	IdentifierDecl	buf [ 256 ]		9655814	0					
ANR	9655832	IdentifierDeclType	char [ 256 ]		9655814	0					
ANR	9655833	Identifier	buf		9655814	1					
ANR	9655834	PrimaryExpression	256		9655814	2					
ANR	9655835	ExpressionStatement	"sprintf ( buf , ""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"" , handle , device , copies , flush )"	230:4:5578:5679	9655814	2	True				
ANR	9655836	CallExpression	"sprintf ( buf , ""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"" , handle , device , copies , flush )"		9655814	0					
ANR	9655837	Callee	sprintf		9655814	0					
ANR	9655838	Identifier	sprintf		9655814	0					
ANR	9655839	ArgumentList	buf		9655814	1					
ANR	9655840	Argument	buf		9655814	0					
ANR	9655841	Identifier	buf		9655814	0					
ANR	9655842	Argument	"""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"""		9655814	1					
ANR	9655843	PrimaryExpression	"""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"""		9655814	0					
ANR	9655844	Argument	handle		9655814	2					
ANR	9655845	Identifier	handle		9655814	0					
ANR	9655846	Argument	device		9655814	3					
ANR	9655847	Identifier	device		9655814	0					
ANR	9655848	Argument	copies		9655814	4					
ANR	9655849	Identifier	copies		9655814	0					
ANR	9655850	Argument	flush		9655814	5					
ANR	9655851	Identifier	flush		9655814	0					
ANR	9655852	ExpressionStatement	"fprintf ( stderr , buf )"	232:4:5685:5705	9655814	3	True				
ANR	9655853	CallExpression	"fprintf ( stderr , buf )"		9655814	0					
ANR	9655854	Callee	fprintf		9655814	0					
ANR	9655855	Identifier	fprintf		9655814	0					
ANR	9655856	ArgumentList	stderr		9655814	1					
ANR	9655857	Argument	stderr		9655814	0					
ANR	9655858	Identifier	stderr		9655814	0					
ANR	9655859	Argument	buf		9655814	1					
ANR	9655860	Identifier	buf		9655814	0					
ANR	9655861	ExpressionStatement	seite ++	234:8:5722:5729	9655814	4	True				
ANR	9655862	PostIncDecOperationExpression	seite ++		9655814	0					
ANR	9655863	Identifier	seite		9655814	0					
ANR	9655864	IncDec	++		9655814	1					
ANR	9655865	ForStatement	for ( i = hoehe - 1 ; i >= 0 ; i = i - 1 )		9655814	5					
ANR	9655866	ForInit	i = hoehe - 1 ;	235:12:5743:5752	9655814	0	True				
ANR	9655867	AssignmentExpression	i = hoehe - 1		9655814	0		=			
ANR	9655868	Identifier	i		9655814	0					
ANR	9655869	AdditiveExpression	hoehe - 1		9655814	1		-			
ANR	9655870	Identifier	hoehe		9655814	0					
ANR	9655871	PrimaryExpression	1		9655814	1					
ANR	9655872	Condition	i >= 0	235:22:5753:5756	9655814	1	True				
ANR	9655873	RelationalExpression	i >= 0		9655814	0		>=			
ANR	9655874	Identifier	i		9655814	0					
ANR	9655875	PrimaryExpression	0		9655814	1					
ANR	9655876	AssignmentExpression	i = i - 1	235:27:5758:5762	9655814	2	True	=			
ANR	9655877	Identifier	i		9655814	0					
ANR	9655878	AdditiveExpression	i - 1		9655814	1		-			
ANR	9655879	Identifier	i		9655814	0					
ANR	9655880	PrimaryExpression	1		9655814	1					
ANR	9655881	CompoundStatement		10:33:256:256	9655814	3					
ANR	9655882	ForStatement	for ( t = breite - 1 ; t >= 0 ; t = t - 1 )		9655814	0					
ANR	9655883	ForInit	t = breite - 1 ;	236:20:5786:5796	9655814	0	True				
ANR	9655884	AssignmentExpression	t = breite - 1		9655814	0		=			
ANR	9655885	Identifier	t		9655814	0					
ANR	9655886	AdditiveExpression	breite - 1		9655814	1		-			
ANR	9655887	Identifier	breite		9655814	0					
ANR	9655888	PrimaryExpression	1		9655814	1					
ANR	9655889	Condition	t >= 0	236:31:5797:5800	9655814	1	True				
ANR	9655890	RelationalExpression	t >= 0		9655814	0		>=			
ANR	9655891	Identifier	t		9655814	0					
ANR	9655892	PrimaryExpression	0		9655814	1					
ANR	9655893	AssignmentExpression	t = t - 1	236:36:5802:5806	9655814	2	True	=			
ANR	9655894	Identifier	t		9655814	0					
ANR	9655895	AdditiveExpression	t - 1		9655814	1		-			
ANR	9655896	Identifier	t		9655814	0					
ANR	9655897	PrimaryExpression	1		9655814	1					
ANR	9655898	CompoundStatement		11:42:300:300	9655814	3					
ANR	9655899	IfStatement	if ( ( myimage [ i * myraster + t * 3 + 0 ] != myimage [ i * myraster + t * 3 + 1 ] ) || ( myimage [ i * myraster + t * 3 + 1 ] != myimage [ i * myraster + t * 3 + 2 ] ) )		9655814	0					
ANR	9655900	Condition	( myimage [ i * myraster + t * 3 + 0 ] != myimage [ i * myraster + t * 3 + 1 ] ) || ( myimage [ i * myraster + t * 3 + 1 ] != myimage [ i * myraster + t * 3 + 2 ] )	237:27:5837:5946	9655814	0	True				
ANR	9655901	OrExpression	( myimage [ i * myraster + t * 3 + 0 ] != myimage [ i * myraster + t * 3 + 1 ] ) || ( myimage [ i * myraster + t * 3 + 1 ] != myimage [ i * myraster + t * 3 + 2 ] )		9655814	0		||			
ANR	9655902	EqualityExpression	myimage [ i * myraster + t * 3 + 0 ] != myimage [ i * myraster + t * 3 + 1 ]		9655814	0		!=			
ANR	9655903	ArrayIndexing	myimage [ i * myraster + t * 3 + 0 ]		9655814	0					
ANR	9655904	Identifier	myimage		9655814	0					
ANR	9655905	AdditiveExpression	i * myraster + t * 3 + 0		9655814	1		+			
ANR	9655906	MultiplicativeExpression	i * myraster		9655814	0		*			
ANR	9655907	Identifier	i		9655814	0					
ANR	9655908	Identifier	myraster		9655814	1					
ANR	9655909	AdditiveExpression	t * 3 + 0		9655814	1		+			
ANR	9655910	MultiplicativeExpression	t * 3		9655814	0		*			
ANR	9655911	Identifier	t		9655814	0					
ANR	9655912	PrimaryExpression	3		9655814	1					
ANR	9655913	PrimaryExpression	0		9655814	1					
ANR	9655914	ArrayIndexing	myimage [ i * myraster + t * 3 + 1 ]		9655814	1					
ANR	9655915	Identifier	myimage		9655814	0					
ANR	9655916	AdditiveExpression	i * myraster + t * 3 + 1		9655814	1		+			
ANR	9655917	MultiplicativeExpression	i * myraster		9655814	0		*			
ANR	9655918	Identifier	i		9655814	0					
ANR	9655919	Identifier	myraster		9655814	1					
ANR	9655920	AdditiveExpression	t * 3 + 1		9655814	1		+			
ANR	9655921	MultiplicativeExpression	t * 3		9655814	0		*			
ANR	9655922	Identifier	t		9655814	0					
ANR	9655923	PrimaryExpression	3		9655814	1					
ANR	9655924	PrimaryExpression	1		9655814	1					
ANR	9655925	EqualityExpression	myimage [ i * myraster + t * 3 + 1 ] != myimage [ i * myraster + t * 3 + 2 ]		9655814	1		!=			
ANR	9655926	ArrayIndexing	myimage [ i * myraster + t * 3 + 1 ]		9655814	0					
ANR	9655927	Identifier	myimage		9655814	0					
ANR	9655928	AdditiveExpression	i * myraster + t * 3 + 1		9655814	1		+			
ANR	9655929	MultiplicativeExpression	i * myraster		9655814	0		*			
ANR	9655930	Identifier	i		9655814	0					
ANR	9655931	Identifier	myraster		9655814	1					
ANR	9655932	AdditiveExpression	t * 3 + 1		9655814	1		+			
ANR	9655933	MultiplicativeExpression	t * 3		9655814	0		*			
ANR	9655934	Identifier	t		9655814	0					
ANR	9655935	PrimaryExpression	3		9655814	1					
ANR	9655936	PrimaryExpression	1		9655814	1					
ANR	9655937	ArrayIndexing	myimage [ i * myraster + t * 3 + 2 ]		9655814	1					
ANR	9655938	Identifier	myimage		9655814	0					
ANR	9655939	AdditiveExpression	i * myraster + t * 3 + 2		9655814	1		+			
ANR	9655940	MultiplicativeExpression	i * myraster		9655814	0		*			
ANR	9655941	Identifier	i		9655814	0					
ANR	9655942	Identifier	myraster		9655814	1					
ANR	9655943	AdditiveExpression	t * 3 + 2		9655814	1		+			
ANR	9655944	MultiplicativeExpression	t * 3		9655814	0		*			
ANR	9655945	Identifier	t		9655814	0					
ANR	9655946	PrimaryExpression	3		9655814	1					
ANR	9655947	PrimaryExpression	2		9655814	1					
ANR	9655948	CompoundStatement		12:138:440:440	9655814	1					
ANR	9655949	ExpressionStatement	color = 1	238:32:5982:5989	9655814	0	True				
ANR	9655950	AssignmentExpression	color = 1		9655814	0		=			
ANR	9655951	Identifier	color		9655814	0					
ANR	9655952	PrimaryExpression	1		9655814	1					
ANR	9655953	ExpressionStatement	"fprintf ( stderr , ""Ungleich %d,%d %x,%x,%x\\n"" , i , t , myimage [ i * myraster + t * 3 + 0 ] , myimage [ i * myraster + t * 3 + 1 ] , myimage [ i * myraster + t * 3 + 2 ] )"	239:32:6023:6148	9655814	1	True				
ANR	9655954	CallExpression	"fprintf ( stderr , ""Ungleich %d,%d %x,%x,%x\\n"" , i , t , myimage [ i * myraster + t * 3 + 0 ] , myimage [ i * myraster + t * 3 + 1 ] , myimage [ i * myraster + t * 3 + 2 ] )"		9655814	0					
ANR	9655955	Callee	fprintf		9655814	0					
ANR	9655956	Identifier	fprintf		9655814	0					
ANR	9655957	ArgumentList	stderr		9655814	1					
ANR	9655958	Argument	stderr		9655814	0					
ANR	9655959	Identifier	stderr		9655814	0					
ANR	9655960	Argument	"""Ungleich %d,%d %x,%x,%x\\n"""		9655814	1					
ANR	9655961	PrimaryExpression	"""Ungleich %d,%d %x,%x,%x\\n"""		9655814	0					
ANR	9655962	Argument	i		9655814	2					
ANR	9655963	Identifier	i		9655814	0					
ANR	9655964	Argument	t		9655814	3					
ANR	9655965	Identifier	t		9655814	0					
ANR	9655966	Argument	myimage [ i * myraster + t * 3 + 0 ]		9655814	4					
ANR	9655967	ArrayIndexing	myimage [ i * myraster + t * 3 + 0 ]		9655814	0					
ANR	9655968	Identifier	myimage		9655814	0					
ANR	9655969	AdditiveExpression	i * myraster + t * 3 + 0		9655814	1		+			
ANR	9655970	MultiplicativeExpression	i * myraster		9655814	0		*			
ANR	9655971	Identifier	i		9655814	0					
ANR	9655972	Identifier	myraster		9655814	1					
ANR	9655973	AdditiveExpression	t * 3 + 0		9655814	1		+			
ANR	9655974	MultiplicativeExpression	t * 3		9655814	0		*			
ANR	9655975	Identifier	t		9655814	0					
ANR	9655976	PrimaryExpression	3		9655814	1					
ANR	9655977	PrimaryExpression	0		9655814	1					
ANR	9655978	Argument	myimage [ i * myraster + t * 3 + 1 ]		9655814	5					
ANR	9655979	ArrayIndexing	myimage [ i * myraster + t * 3 + 1 ]		9655814	0					
ANR	9655980	Identifier	myimage		9655814	0					
ANR	9655981	AdditiveExpression	i * myraster + t * 3 + 1		9655814	1		+			
ANR	9655982	MultiplicativeExpression	i * myraster		9655814	0		*			
ANR	9655983	Identifier	i		9655814	0					
ANR	9655984	Identifier	myraster		9655814	1					
ANR	9655985	AdditiveExpression	t * 3 + 1		9655814	1		+			
ANR	9655986	MultiplicativeExpression	t * 3		9655814	0		*			
ANR	9655987	Identifier	t		9655814	0					
ANR	9655988	PrimaryExpression	3		9655814	1					
ANR	9655989	PrimaryExpression	1		9655814	1					
ANR	9655990	Argument	myimage [ i * myraster + t * 3 + 2 ]		9655814	6					
ANR	9655991	ArrayIndexing	myimage [ i * myraster + t * 3 + 2 ]		9655814	0					
ANR	9655992	Identifier	myimage		9655814	0					
ANR	9655993	AdditiveExpression	i * myraster + t * 3 + 2		9655814	1		+			
ANR	9655994	MultiplicativeExpression	i * myraster		9655814	0		*			
ANR	9655995	Identifier	i		9655814	0					
ANR	9655996	Identifier	myraster		9655814	1					
ANR	9655997	AdditiveExpression	t * 3 + 2		9655814	1		+			
ANR	9655998	MultiplicativeExpression	t * 3		9655814	0		*			
ANR	9655999	Identifier	t		9655814	0					
ANR	9656000	PrimaryExpression	3		9655814	1					
ANR	9656001	PrimaryExpression	2		9655814	1					
ANR	9656002	GotoStatement	goto out ;	240:32:6182:6190	9655814	2	True				
ANR	9656003	Identifier	out		9655814	0					
ANR	9656004	Label	out :	244:0:6246:6249	9655814	6	True				
ANR	9656005	Identifier	out		9655814	0					
ANR	9656006	IfStatement	if ( color )		9655814	7					
ANR	9656007	Condition	color	245:11:6262:6266	9655814	0	True				
ANR	9656008	Identifier	color		9655814	0					
ANR	9656009	CompoundStatement		20:17:760:760	9655814	1					
ANR	9656010	ExpressionStatement	"fprintf ( stderr , ""[%d]Color\\n"" , seite )"	246:8:6278:6313	9655814	0	True				
ANR	9656011	CallExpression	"fprintf ( stderr , ""[%d]Color\\n"" , seite )"		9655814	0					
ANR	9656012	Callee	fprintf		9655814	0					
ANR	9656013	Identifier	fprintf		9655814	0					
ANR	9656014	ArgumentList	stderr		9655814	1					
ANR	9656015	Argument	stderr		9655814	0					
ANR	9656016	Identifier	stderr		9655814	0					
ANR	9656017	Argument	"""[%d]Color\\n"""		9655814	1					
ANR	9656018	PrimaryExpression	"""[%d]Color\\n"""		9655814	0					
ANR	9656019	Argument	seite		9655814	2					
ANR	9656020	Identifier	seite		9655814	0					
ANR	9656021	ExpressionStatement	choose = color_fd	247:8:6323:6338	9655814	1	True				
ANR	9656022	AssignmentExpression	choose = color_fd		9655814	0		=			
ANR	9656023	Identifier	choose		9655814	0					
ANR	9656024	Identifier	color_fd		9655814	1					
ANR	9656025	ElseStatement	else		9655814	0					
ANR	9656026	CompoundStatement		23:15:847:847	9655814	0					
ANR	9656027	ExpressionStatement	"fprintf ( stderr , ""[%d]Grey\\n"" , seite )"	249:8:6365:6399	9655814	0	True				
ANR	9656028	CallExpression	"fprintf ( stderr , ""[%d]Grey\\n"" , seite )"		9655814	0					
ANR	9656029	Callee	fprintf		9655814	0					
ANR	9656030	Identifier	fprintf		9655814	0					
ANR	9656031	ArgumentList	stderr		9655814	1					
ANR	9656032	Argument	stderr		9655814	0					
ANR	9656033	Identifier	stderr		9655814	0					
ANR	9656034	Argument	"""[%d]Grey\\n"""		9655814	1					
ANR	9656035	PrimaryExpression	"""[%d]Grey\\n"""		9655814	0					
ANR	9656036	Argument	seite		9655814	2					
ANR	9656037	Identifier	seite		9655814	0					
ANR	9656038	ExpressionStatement	choose = black_fd	250:8:6409:6424	9655814	1	True				
ANR	9656039	AssignmentExpression	choose = black_fd		9655814	0		=			
ANR	9656040	Identifier	choose		9655814	0					
ANR	9656041	Identifier	black_fd		9655814	1					
ANR	9656042	ReturnStatement	return 0 ;	263:4:6699:6707	9655814	8	True				
ANR	9656043	PrimaryExpression	0		9655814	0					
ANR	9656044	ReturnType	static int		9655814	1					
ANR	9656045	Identifier	display_page		9655814	2					
ANR	9656046	ParameterList	"void * handle , void * device , int copies , int flush"		9655814	3					
ANR	9656047	Parameter	void * handle	225:24:5456:5467	9655814	0	True				
ANR	9656048	ParameterType	void *		9655814	0					
ANR	9656049	Identifier	handle		9655814	1					
ANR	9656050	Parameter	void * device	225:38:5470:5481	9655814	1	True				
ANR	9656051	ParameterType	void *		9655814	0					
ANR	9656052	Identifier	device		9655814	1					
ANR	9656053	Parameter	int copies	225:52:5484:5493	9655814	2	True				
ANR	9656054	ParameterType	int		9655814	0					
ANR	9656055	Identifier	copies		9655814	1					
ANR	9656056	Parameter	int flush	225:64:5496:5504	9655814	3	True				
ANR	9656057	ParameterType	int		9655814	0					
ANR	9656058	Identifier	flush		9655814	1					
ANR	9656059	CFGEntryNode	ENTRY		9655814		True				
ANR	9656060	CFGExitNode	EXIT		9655814		True				
ANR	9656061	Symbol	black_fd		9655814						
ANR	9656062	Symbol	color		9655814						
ANR	9656063	Symbol	* myimage		9655814						
ANR	9656064	Symbol	i		9655814						
ANR	9656065	Symbol	handle		9655814						
ANR	9656066	Symbol	choose		9655814						
ANR	9656067	Symbol	stderr		9655814						
ANR	9656068	Symbol	seite		9655814						
ANR	9656069	Symbol	myraster		9655814						
ANR	9656070	Symbol	buf		9655814						
ANR	9656071	Symbol	copies		9655814						
ANR	9656072	Symbol	myimage		9655814						
ANR	9656073	Symbol	* i		9655814						
ANR	9656074	Symbol	flush		9655814						
ANR	9656075	Symbol	t		9655814						
ANR	9656076	Symbol	breite		9655814						
ANR	9656077	Symbol	hoehe		9655814						
ANR	9656078	Symbol	device		9655814						
ANR	9656079	Symbol	* t		9655814						
ANR	9656080	Symbol	* myraster		9655814						
ANR	9656081	Symbol	color_fd		9655814						
ANR	9656082	Function	display_update	268:0:6818:6920							
ANR	9656083	FunctionDef	"display_update (void * handle , void * device , int x , int y , int w , int h)"		9656082	0					
ANR	9656084	CompoundStatement		270:0:6904:6920	9656082	0					
ANR	9656085	ReturnStatement	return 0 ;	271:4:6910:6918	9656082	0	True				
ANR	9656086	PrimaryExpression	0		9656082	0					
ANR	9656087	ReturnType	static int		9656082	1					
ANR	9656088	Identifier	display_update		9656082	2					
ANR	9656089	ParameterList	"void * handle , void * device , int x , int y , int w , int h"		9656082	3					
ANR	9656090	Parameter	void * handle	268:26:6844:6855	9656082	0	True				
ANR	9656091	ParameterType	void *		9656082	0					
ANR	9656092	Identifier	handle		9656082	1					
ANR	9656093	Parameter	void * device	268:40:6858:6869	9656082	1	True				
ANR	9656094	ParameterType	void *		9656082	0					
ANR	9656095	Identifier	device		9656082	1					
ANR	9656096	Parameter	int x	269:4:6876:6880	9656082	2	True				
ANR	9656097	ParameterType	int		9656082	0					
ANR	9656098	Identifier	x		9656082	1					
ANR	9656099	Parameter	int y	269:11:6883:6887	9656082	3	True				
ANR	9656100	ParameterType	int		9656082	0					
ANR	9656101	Identifier	y		9656082	1					
ANR	9656102	Parameter	int w	269:18:6890:6894	9656082	4	True				
ANR	9656103	ParameterType	int		9656082	0					
ANR	9656104	Identifier	w		9656082	1					
ANR	9656105	Parameter	int h	269:25:6897:6901	9656082	5	True				
ANR	9656106	ParameterType	int		9656082	0					
ANR	9656107	Identifier	h		9656082	1					
ANR	9656108	CFGEntryNode	ENTRY		9656082		True				
ANR	9656109	CFGExitNode	EXIT		9656082		True				
ANR	9656110	Symbol	w		9656082						
ANR	9656111	Symbol	x		9656082						
ANR	9656112	Symbol	h		9656082						
ANR	9656113	Symbol	y		9656082						
ANR	9656114	Symbol	handle		9656082						
ANR	9656115	Symbol	device		9656082						
ANR	9656116	DeclStmt									
ANR	9656117	Decl							display_callback	display_callback	display
ANR	9656118	DeclStmt									
ANR	9656119	Decl							gs_main_instance	gs_main_instance *	minst
ANR	9656120	DeclStmt									
ANR	9656121	Decl							const char	const char [ ]	start_string
ANR	9656122	Function	main	293:0:7335:8680							
ANR	9656123	FunctionDef	"main (int argc , char * argv [ ])"		9656122	0					
ANR	9656124	CompoundStatement		294:0:7368:8680	9656122	0					
ANR	9656125	IdentifierDeclStatement	int code ;	295:4:7374:7382	9656122	0	True				
ANR	9656126	IdentifierDecl	code		9656122	0					
ANR	9656127	IdentifierDeclType	int		9656122	0					
ANR	9656128	Identifier	code		9656122	1					
ANR	9656129	IdentifierDeclStatement	const char * gsargv [ 12 ] ;	296:4:7388:7411	9656122	1	True				
ANR	9656130	IdentifierDecl	* gsargv [ 12 ]		9656122	0					
ANR	9656131	IdentifierDeclType	const char * [ 12 ]		9656122	0					
ANR	9656132	Identifier	gsargv		9656122	1					
ANR	9656133	PrimaryExpression	12		9656122	2					
ANR	9656134	IdentifierDeclStatement	char arg [ 64 ] ;	297:4:7417:7429	9656122	2	True				
ANR	9656135	IdentifierDecl	arg [ 64 ]		9656122	0					
ANR	9656136	IdentifierDeclType	char [ 64 ]		9656122	0					
ANR	9656137	Identifier	arg		9656122	1					
ANR	9656138	PrimaryExpression	64		9656122	2					
ANR	9656139	IdentifierDeclStatement	int gsargc ;	298:4:7435:7445	9656122	3	True				
ANR	9656140	IdentifierDecl	gsargc		9656122	0					
ANR	9656141	IdentifierDeclType	int		9656122	0					
ANR	9656142	Identifier	gsargc		9656122	1					
ANR	9656143	ExpressionStatement	"gsargv [ 0 ] = ""ps2colordetect"""	299:4:7451:7479	9656122	4	True				
ANR	9656144	AssignmentExpression	"gsargv [ 0 ] = ""ps2colordetect"""		9656122	0		=			
ANR	9656145	ArrayIndexing	gsargv [ 0 ]		9656122	0					
ANR	9656146	Identifier	gsargv		9656122	0					
ANR	9656147	PrimaryExpression	0		9656122	1					
ANR	9656148	PrimaryExpression	"""ps2colordetect"""		9656122	1					
ANR	9656149	ExpressionStatement	"gsargv [ 1 ] = ""-dNOPAUSE"""	300:4:7519:7542	9656122	5	True				
ANR	9656150	AssignmentExpression	"gsargv [ 1 ] = ""-dNOPAUSE"""		9656122	0		=			
ANR	9656151	ArrayIndexing	gsargv [ 1 ]		9656122	0					
ANR	9656152	Identifier	gsargv		9656122	0					
ANR	9656153	PrimaryExpression	1		9656122	1					
ANR	9656154	PrimaryExpression	"""-dNOPAUSE"""		9656122	1					
ANR	9656155	ExpressionStatement	"gsargv [ 2 ] = ""-dBATCH"""	301:4:7548:7569	9656122	6	True				
ANR	9656156	AssignmentExpression	"gsargv [ 2 ] = ""-dBATCH"""		9656122	0		=			
ANR	9656157	ArrayIndexing	gsargv [ 2 ]		9656122	0					
ANR	9656158	Identifier	gsargv		9656122	0					
ANR	9656159	PrimaryExpression	2		9656122	1					
ANR	9656160	PrimaryExpression	"""-dBATCH"""		9656122	1					
ANR	9656161	ExpressionStatement	"gsargv [ 3 ] = ""-dSAFER"""	302:4:7575:7596	9656122	7	True				
ANR	9656162	AssignmentExpression	"gsargv [ 3 ] = ""-dSAFER"""		9656122	0		=			
ANR	9656163	ArrayIndexing	gsargv [ 3 ]		9656122	0					
ANR	9656164	Identifier	gsargv		9656122	0					
ANR	9656165	PrimaryExpression	3		9656122	1					
ANR	9656166	PrimaryExpression	"""-dSAFER"""		9656122	1					
ANR	9656167	ExpressionStatement	"gsargv [ 4 ] = ""-sDEVICE=display"""	304:4:7641:7671	9656122	8	True				
ANR	9656168	AssignmentExpression	"gsargv [ 4 ] = ""-sDEVICE=display"""		9656122	0		=			
ANR	9656169	ArrayIndexing	gsargv [ 4 ]		9656122	0					
ANR	9656170	Identifier	gsargv		9656122	0					
ANR	9656171	PrimaryExpression	4		9656122	1					
ANR	9656172	PrimaryExpression	"""-sDEVICE=display"""		9656122	1					
ANR	9656173	ExpressionStatement	"gsargv [ 5 ] = ""-dDisplayHandle=0"""	305:4:7677:7708	9656122	9	True				
ANR	9656174	AssignmentExpression	"gsargv [ 5 ] = ""-dDisplayHandle=0"""		9656122	0		=			
ANR	9656175	ArrayIndexing	gsargv [ 5 ]		9656122	0					
ANR	9656176	Identifier	gsargv		9656122	0					
ANR	9656177	PrimaryExpression	5		9656122	1					
ANR	9656178	PrimaryExpression	"""-dDisplayHandle=0"""		9656122	1					
ANR	9656179	ExpressionStatement	"sprintf ( arg , ""-dDisplayFormat=%d"" , DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST )"	306:4:7714:7842	9656122	10	True				
ANR	9656180	CallExpression	"sprintf ( arg , ""-dDisplayFormat=%d"" , DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST )"		9656122	0					
ANR	9656181	Callee	sprintf		9656122	0					
ANR	9656182	Identifier	sprintf		9656122	0					
ANR	9656183	ArgumentList	arg		9656122	1					
ANR	9656184	Argument	arg		9656122	0					
ANR	9656185	Identifier	arg		9656122	0					
ANR	9656186	Argument	"""-dDisplayFormat=%d"""		9656122	1					
ANR	9656187	PrimaryExpression	"""-dDisplayFormat=%d"""		9656122	0					
ANR	9656188	Argument	DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		9656122	2					
ANR	9656189	InclusiveOrExpression	DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		9656122	0		|			
ANR	9656190	Identifier	DISPLAY_COLORS_RGB		9656122	0					
ANR	9656191	InclusiveOrExpression	DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		9656122	1		|			
ANR	9656192	Identifier	DISPLAY_ALPHA_NONE		9656122	0					
ANR	9656193	InclusiveOrExpression	DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		9656122	1		|			
ANR	9656194	Identifier	DISPLAY_DEPTH_8		9656122	0					
ANR	9656195	InclusiveOrExpression	DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		9656122	1		|			
ANR	9656196	Identifier	DISPLAY_LITTLEENDIAN		9656122	0					
ANR	9656197	Identifier	DISPLAY_BOTTOMFIRST		9656122	1					
ANR	9656198	ExpressionStatement	gsargv [ 6 ] = arg	307:4:7848:7863	9656122	11	True				
ANR	9656199	AssignmentExpression	gsargv [ 6 ] = arg		9656122	0		=			
ANR	9656200	ArrayIndexing	gsargv [ 6 ]		9656122	0					
ANR	9656201	Identifier	gsargv		9656122	0					
ANR	9656202	PrimaryExpression	6		9656122	1					
ANR	9656203	Identifier	arg		9656122	1					
ANR	9656204	ExpressionStatement	"gsargv [ 7 ] = ""-sOutputFile=out.pdf"""	308:4:7869:7903	9656122	12	True				
ANR	9656205	AssignmentExpression	"gsargv [ 7 ] = ""-sOutputFile=out.pdf"""		9656122	0		=			
ANR	9656206	ArrayIndexing	gsargv [ 7 ]		9656122	0					
ANR	9656207	Identifier	gsargv		9656122	0					
ANR	9656208	PrimaryExpression	7		9656122	1					
ANR	9656209	PrimaryExpression	"""-sOutputFile=out.pdf"""		9656122	1					
ANR	9656210	ExpressionStatement	"gsargv [ 8 ] = ""-c"""	309:4:7909:7925	9656122	13	True				
ANR	9656211	AssignmentExpression	"gsargv [ 8 ] = ""-c"""		9656122	0		=			
ANR	9656212	ArrayIndexing	gsargv [ 8 ]		9656122	0					
ANR	9656213	Identifier	gsargv		9656122	0					
ANR	9656214	PrimaryExpression	8		9656122	1					
ANR	9656215	PrimaryExpression	"""-c"""		9656122	1					
ANR	9656216	ExpressionStatement	"gsargv [ 9 ] = "".setpdfwrite"""	310:4:7931:7957	9656122	14	True				
ANR	9656217	AssignmentExpression	"gsargv [ 9 ] = "".setpdfwrite"""		9656122	0		=			
ANR	9656218	ArrayIndexing	gsargv [ 9 ]		9656122	0					
ANR	9656219	Identifier	gsargv		9656122	0					
ANR	9656220	PrimaryExpression	9		9656122	1					
ANR	9656221	PrimaryExpression	""".setpdfwrite"""		9656122	1					
ANR	9656222	ExpressionStatement	"gsargv [ 10 ] = ""-f"""	311:4:7963:7980	9656122	15	True				
ANR	9656223	AssignmentExpression	"gsargv [ 10 ] = ""-f"""		9656122	0		=			
ANR	9656224	ArrayIndexing	gsargv [ 10 ]		9656122	0					
ANR	9656225	Identifier	gsargv		9656122	0					
ANR	9656226	PrimaryExpression	10		9656122	1					
ANR	9656227	PrimaryExpression	"""-f"""		9656122	1					
ANR	9656228	ExpressionStatement	"gsargv [ 11 ] = ""-"""	313:4:8017:8033	9656122	16	True				
ANR	9656229	AssignmentExpression	"gsargv [ 11 ] = ""-"""		9656122	0		=			
ANR	9656230	ArrayIndexing	gsargv [ 11 ]		9656122	0					
ANR	9656231	Identifier	gsargv		9656122	0					
ANR	9656232	PrimaryExpression	11		9656122	1					
ANR	9656233	PrimaryExpression	"""-"""		9656122	1					
ANR	9656234	ExpressionStatement	gsargc = 12	314:4:8039:8048	9656122	17	True				
ANR	9656235	AssignmentExpression	gsargc = 12		9656122	0		=			
ANR	9656236	Identifier	gsargc		9656122	0					
ANR	9656237	PrimaryExpression	12		9656122	1					
ANR	9656238	ExpressionStatement	"code = gsapi_new_instance ( & minst , NULL )"	316:4:8055:8094	9656122	18	True				
ANR	9656239	AssignmentExpression	"code = gsapi_new_instance ( & minst , NULL )"		9656122	0		=			
ANR	9656240	Identifier	code		9656122	0					
ANR	9656241	CallExpression	"gsapi_new_instance ( & minst , NULL )"		9656122	1					
ANR	9656242	Callee	gsapi_new_instance		9656122	0					
ANR	9656243	Identifier	gsapi_new_instance		9656122	0					
ANR	9656244	ArgumentList	& minst		9656122	1					
ANR	9656245	Argument	& minst		9656122	0					
ANR	9656246	UnaryOperationExpression	& minst		9656122	0					
ANR	9656247	UnaryOperator	&		9656122	0					
ANR	9656248	Identifier	minst		9656122	1					
ANR	9656249	Argument	NULL		9656122	1					
ANR	9656250	Identifier	NULL		9656122	0					
ANR	9656251	IfStatement	if ( code < 0 )		9656122	19					
ANR	9656252	Condition	code < 0	317:8:8104:8111	9656122	0	True				
ANR	9656253	RelationalExpression	code < 0		9656122	0		<			
ANR	9656254	Identifier	code		9656122	0					
ANR	9656255	PrimaryExpression	0		9656122	1					
ANR	9656256	ReturnStatement	return 1 ;	318:8:8122:8130	9656122	1	True				
ANR	9656257	PrimaryExpression	1		9656122	0					
ANR	9656258	ExpressionStatement	"gsapi_set_stdio ( minst , gsdll_stdin , gsdll_stdout , gsdll_stderr )"	319:4:8136:8199	9656122	20	True				
ANR	9656259	CallExpression	"gsapi_set_stdio ( minst , gsdll_stdin , gsdll_stdout , gsdll_stderr )"		9656122	0					
ANR	9656260	Callee	gsapi_set_stdio		9656122	0					
ANR	9656261	Identifier	gsapi_set_stdio		9656122	0					
ANR	9656262	ArgumentList	minst		9656122	1					
ANR	9656263	Argument	minst		9656122	0					
ANR	9656264	Identifier	minst		9656122	0					
ANR	9656265	Argument	gsdll_stdin		9656122	1					
ANR	9656266	Identifier	gsdll_stdin		9656122	0					
ANR	9656267	Argument	gsdll_stdout		9656122	2					
ANR	9656268	Identifier	gsdll_stdout		9656122	0					
ANR	9656269	Argument	gsdll_stderr		9656122	3					
ANR	9656270	Identifier	gsdll_stderr		9656122	0					
ANR	9656271	ExpressionStatement	"gsapi_set_display_callback ( minst , & display )"	320:4:8205:8248	9656122	21	True				
ANR	9656272	CallExpression	"gsapi_set_display_callback ( minst , & display )"		9656122	0					
ANR	9656273	Callee	gsapi_set_display_callback		9656122	0					
ANR	9656274	Identifier	gsapi_set_display_callback		9656122	0					
ANR	9656275	ArgumentList	minst		9656122	1					
ANR	9656276	Argument	minst		9656122	0					
ANR	9656277	Identifier	minst		9656122	0					
ANR	9656278	Argument	& display		9656122	1					
ANR	9656279	UnaryOperationExpression	& display		9656122	0					
ANR	9656280	UnaryOperator	&		9656122	0					
ANR	9656281	Identifier	display		9656122	1					
ANR	9656282	ExpressionStatement	"color_fd = gp_fopen ( ""color.ps"" , ""wb"" )"	322:8:8259:8293	9656122	22	True				
ANR	9656283	AssignmentExpression	"color_fd = gp_fopen ( ""color.ps"" , ""wb"" )"		9656122	0		=			
ANR	9656284	Identifier	color_fd		9656122	0					
ANR	9656285	CallExpression	"gp_fopen ( ""color.ps"" , ""wb"" )"		9656122	1					
ANR	9656286	Callee	gp_fopen		9656122	0					
ANR	9656287	Identifier	gp_fopen		9656122	0					
ANR	9656288	ArgumentList	"""color.ps"""		9656122	1					
ANR	9656289	Argument	"""color.ps"""		9656122	0					
ANR	9656290	PrimaryExpression	"""color.ps"""		9656122	0					
ANR	9656291	Argument	"""wb"""		9656122	1					
ANR	9656292	PrimaryExpression	"""wb"""		9656122	0					
ANR	9656293	ExpressionStatement	"black_fd = gp_fopen ( ""black.ps"" , ""wb"" )"	323:8:8303:8337	9656122	23	True				
ANR	9656294	AssignmentExpression	"black_fd = gp_fopen ( ""black.ps"" , ""wb"" )"		9656122	0		=			
ANR	9656295	Identifier	black_fd		9656122	0					
ANR	9656296	CallExpression	"gp_fopen ( ""black.ps"" , ""wb"" )"		9656122	1					
ANR	9656297	Callee	gp_fopen		9656122	0					
ANR	9656298	Identifier	gp_fopen		9656122	0					
ANR	9656299	ArgumentList	"""black.ps"""		9656122	1					
ANR	9656300	Argument	"""black.ps"""		9656122	0					
ANR	9656301	PrimaryExpression	"""black.ps"""		9656122	0					
ANR	9656302	Argument	"""wb"""		9656122	1					
ANR	9656303	PrimaryExpression	"""wb"""		9656122	0					
ANR	9656304	ExpressionStatement	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"	324:8:8347:8379	9656122	24	True				
ANR	9656305	AssignmentExpression	"temp_fd = gp_fopen ( ""temp.ps"" , ""wb"" )"		9656122	0		=			
ANR	9656306	Identifier	temp_fd		9656122	0					
ANR	9656307	CallExpression	"gp_fopen ( ""temp.ps"" , ""wb"" )"		9656122	1					
ANR	9656308	Callee	gp_fopen		9656122	0					
ANR	9656309	Identifier	gp_fopen		9656122	0					
ANR	9656310	ArgumentList	"""temp.ps"""		9656122	1					
ANR	9656311	Argument	"""temp.ps"""		9656122	0					
ANR	9656312	PrimaryExpression	"""temp.ps"""		9656122	0					
ANR	9656313	Argument	"""wb"""		9656122	1					
ANR	9656314	PrimaryExpression	"""wb"""		9656122	0					
ANR	9656315	ExpressionStatement	choose = black_fd	325:8:8389:8404	9656122	25	True				
ANR	9656316	AssignmentExpression	choose = black_fd		9656122	0		=			
ANR	9656317	Identifier	choose		9656122	0					
ANR	9656318	Identifier	black_fd		9656122	1					
ANR	9656319	ExpressionStatement	"code = gsapi_init_with_args ( minst , gsargc , gsargv )"	327:4:8411:8461	9656122	26	True				
ANR	9656320	AssignmentExpression	"code = gsapi_init_with_args ( minst , gsargc , gsargv )"		9656122	0		=			
ANR	9656321	Identifier	code		9656122	0					
ANR	9656322	CallExpression	"gsapi_init_with_args ( minst , gsargc , gsargv )"		9656122	1					
ANR	9656323	Callee	gsapi_init_with_args		9656122	0					
ANR	9656324	Identifier	gsapi_init_with_args		9656122	0					
ANR	9656325	ArgumentList	minst		9656122	1					
ANR	9656326	Argument	minst		9656122	0					
ANR	9656327	Identifier	minst		9656122	0					
ANR	9656328	Argument	gsargc		9656122	1					
ANR	9656329	Identifier	gsargc		9656122	0					
ANR	9656330	Argument	gsargv		9656122	2					
ANR	9656331	Identifier	gsargv		9656122	0					
ANR	9656332	ExpressionStatement	gsapi_exit ( minst )	328:4:8467:8484	9656122	27	True				
ANR	9656333	CallExpression	gsapi_exit ( minst )		9656122	0					
ANR	9656334	Callee	gsapi_exit		9656122	0					
ANR	9656335	Identifier	gsapi_exit		9656122	0					
ANR	9656336	ArgumentList	minst		9656122	1					
ANR	9656337	Argument	minst		9656122	0					
ANR	9656338	Identifier	minst		9656122	0					
ANR	9656339	ExpressionStatement	gsapi_delete_instance ( minst )	330:4:8491:8519	9656122	28	True				
ANR	9656340	CallExpression	gsapi_delete_instance ( minst )		9656122	0					
ANR	9656341	Callee	gsapi_delete_instance		9656122	0					
ANR	9656342	Identifier	gsapi_delete_instance		9656122	0					
ANR	9656343	ArgumentList	minst		9656122	1					
ANR	9656344	Argument	minst		9656122	0					
ANR	9656345	Identifier	minst		9656122	0					
ANR	9656346	ExpressionStatement	fclose ( color_fd )	332:8:8530:8546	9656122	29	True				
ANR	9656347	CallExpression	fclose ( color_fd )		9656122	0					
ANR	9656348	Callee	fclose		9656122	0					
ANR	9656349	Identifier	fclose		9656122	0					
ANR	9656350	ArgumentList	color_fd		9656122	1					
ANR	9656351	Argument	color_fd		9656122	0					
ANR	9656352	Identifier	color_fd		9656122	0					
ANR	9656353	ExpressionStatement	fclose ( black_fd )	333:8:8556:8572	9656122	30	True				
ANR	9656354	CallExpression	fclose ( black_fd )		9656122	0					
ANR	9656355	Callee	fclose		9656122	0					
ANR	9656356	Identifier	fclose		9656122	0					
ANR	9656357	ArgumentList	black_fd		9656122	1					
ANR	9656358	Argument	black_fd		9656122	0					
ANR	9656359	Identifier	black_fd		9656122	0					
ANR	9656360	ExpressionStatement	fclose ( temp_fd )	334:8:8582:8597	9656122	31	True				
ANR	9656361	CallExpression	fclose ( temp_fd )		9656122	0					
ANR	9656362	Callee	fclose		9656122	0					
ANR	9656363	Identifier	fclose		9656122	0					
ANR	9656364	ArgumentList	temp_fd		9656122	1					
ANR	9656365	Argument	temp_fd		9656122	0					
ANR	9656366	Identifier	temp_fd		9656122	0					
ANR	9656367	IfStatement	if ( ( code == 0 ) || ( code == gs_error_Quit ) )		9656122	32					
ANR	9656368	Condition	( code == 0 ) || ( code == gs_error_Quit )	336:8:8608:8645	9656122	0	True				
ANR	9656369	OrExpression	( code == 0 ) || ( code == gs_error_Quit )		9656122	0		||			
ANR	9656370	EqualityExpression	code == 0		9656122	0		==			
ANR	9656371	Identifier	code		9656122	0					
ANR	9656372	PrimaryExpression	0		9656122	1					
ANR	9656373	EqualityExpression	code == gs_error_Quit		9656122	1		==			
ANR	9656374	Identifier	code		9656122	0					
ANR	9656375	Identifier	gs_error_Quit		9656122	1					
ANR	9656376	ReturnStatement	return 0 ;	337:8:8656:8664	9656122	1	True				
ANR	9656377	PrimaryExpression	0		9656122	0					
ANR	9656378	ReturnStatement	return 1 ;	338:4:8670:8678	9656122	33	True				
ANR	9656379	PrimaryExpression	1		9656122	0					
ANR	9656380	ReturnType	int		9656122	1					
ANR	9656381	Identifier	main		9656122	2					
ANR	9656382	ParameterList	"int argc , char * argv [ ]"		9656122	3					
ANR	9656383	Parameter	int argc	293:9:7344:7351	9656122	0	True				
ANR	9656384	ParameterType	int		9656122	0					
ANR	9656385	Identifier	argc		9656122	1					
ANR	9656386	Parameter	char * argv [ ]	293:19:7354:7365	9656122	1	True				
ANR	9656387	ParameterType	char * [ ]		9656122	0					
ANR	9656388	Identifier	argv		9656122	1					
ANR	9656389	CFGEntryNode	ENTRY		9656122		True				
ANR	9656390	CFGExitNode	EXIT		9656122		True				
ANR	9656391	Symbol	& minst		9656122						
ANR	9656392	Symbol	black_fd		9656122						
ANR	9656393	Symbol	minst		9656122						
ANR	9656394	Symbol	code		9656122						
ANR	9656395	Symbol	gsdll_stdin		9656122						
ANR	9656396	Symbol	gsargv		9656122						
ANR	9656397	Symbol	choose		9656122						
ANR	9656398	Symbol	DISPLAY_LITTLEENDIAN		9656122						
ANR	9656399	Symbol	gsdll_stderr		9656122						
ANR	9656400	Symbol	argv		9656122						
ANR	9656401	Symbol	gsapi_new_instance		9656122						
ANR	9656402	Symbol	arg		9656122						
ANR	9656403	Symbol	gsapi_init_with_args		9656122						
ANR	9656404	Symbol	gp_fopen		9656122						
ANR	9656405	Symbol	color_fd		9656122						
ANR	9656406	Symbol	argc		9656122						
ANR	9656407	Symbol	DISPLAY_DEPTH_8		9656122						
ANR	9656408	Symbol	gs_error_Quit		9656122						
ANR	9656409	Symbol	NULL		9656122						
ANR	9656410	Symbol	temp_fd		9656122						
ANR	9656411	Symbol	DISPLAY_COLORS_RGB		9656122						
ANR	9656412	Symbol	gsdll_stdout		9656122						
ANR	9656413	Symbol	& display		9656122						
ANR	9656414	Symbol	gsargc		9656122						
ANR	9656415	Symbol	* gsargv		9656122						
ANR	9656416	Symbol	DISPLAY_BOTTOMFIRST		9656122						
ANR	9656417	Symbol	DISPLAY_ALPHA_NONE		9656122						
