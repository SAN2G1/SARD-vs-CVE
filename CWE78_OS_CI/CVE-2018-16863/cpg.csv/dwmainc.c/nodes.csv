command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3044378	File	data/converged/CVE-2018-16863_ghostpdl/dwmainc.c								
ANR	3044379	DeclStmt									
ANR	3044380	Decl							GSDLL	GSDLL	gsdll
ANR	3044381	DeclStmt									
ANR	3044382	Decl							void	void *	instance
ANR	3044383	DeclStmt									
ANR	3044384	Decl							BOOL	BOOL	quitnow
ANR	3044385	DeclStmt									
ANR	3044386	Decl							HANDLE	HANDLE	hthread
ANR	3044387	DeclStmt									
ANR	3044388	Decl							DWORD	DWORD	thread_id
ANR	3044389	DeclStmt									
ANR	3044390	Decl							HWND	HWND	hwndforeground
ANR	3044391	DeclStmt									
ANR	3044392	Decl							char	char [ ]	start_string
ANR	3044393	Function	windows_debug_out	54:0:1418:2158							
ANR	3044394	FunctionDef	"windows_debug_out (const char * str , int len)"		3044393	0					
ANR	3044395	CompoundStatement		55:0:1474:2158	3044393	0					
ANR	3044396	IdentifierDeclStatement	char buf [ 256 ] ;	56:4:1480:1493	3044393	0	True				
ANR	3044397	IdentifierDecl	buf [ 256 ]		3044393	0					
ANR	3044398	IdentifierDeclType	char [ 256 ]		3044393	0					
ANR	3044399	Identifier	buf		3044393	1					
ANR	3044400	PrimaryExpression	256		3044393	2					
ANR	3044401	IdentifierDeclStatement	int n ;	57:4:1499:1504	3044393	1	True				
ANR	3044402	IdentifierDecl	n		3044393	0					
ANR	3044403	IdentifierDeclType	int		3044393	0					
ANR	3044404	Identifier	n		3044393	1					
ANR	3044405	WhileStatement	while ( len )		3044393	2					
ANR	3044406	Condition	len	63:11:1699:1701	3044393	0	True				
ANR	3044407	Identifier	len		3044393	0					
ANR	3044408	CompoundStatement		10:4:233:233	3044393	1					
ANR	3044409	WhileStatement	while ( len > 0 && * str == 0 )		3044393	0					
ANR	3044410	Condition	len > 0 && * str == 0	66:15:1756:1775	3044393	0	True				
ANR	3044411	AndExpression	len > 0 && * str == 0		3044393	0		&&			
ANR	3044412	RelationalExpression	len > 0		3044393	0		>			
ANR	3044413	Identifier	len		3044393	0					
ANR	3044414	PrimaryExpression	0		3044393	1					
ANR	3044415	EqualityExpression	* str == 0		3044393	1		==			
ANR	3044416	UnaryOperationExpression	* str		3044393	0					
ANR	3044417	UnaryOperator	*		3044393	0					
ANR	3044418	Identifier	str		3044393	1					
ANR	3044419	PrimaryExpression	0		3044393	1					
ANR	3044420	ExpressionStatement	"len -- , str ++"	67:12:1790:1802	3044393	1	True				
ANR	3044421	Expression	"len -- , str ++"		3044393	0					
ANR	3044422	PostIncDecOperationExpression	len --		3044393	0					
ANR	3044423	Identifier	len		3044393	0					
ANR	3044424	IncDec	--		3044393	1					
ANR	3044425	PostIncDecOperationExpression	str ++		3044393	1					
ANR	3044426	Identifier	str		3044393	0					
ANR	3044427	IncDec	++		3044393	1					
ANR	3044428	ForStatement	"for ( n = 0 ; n < sizeof ( buf ) - 1 && n < len && * str != 0 ; str ++ , n ++ )"		3044393	1					
ANR	3044429	ForInit	n = 0 ;	70:13:1924:1929	3044393	0	True				
ANR	3044430	AssignmentExpression	n = 0		3044393	0		=			
ANR	3044431	Identifier	n		3044393	0					
ANR	3044432	PrimaryExpression	0		3044393	1					
ANR	3044433	Condition	n < sizeof ( buf ) - 1 && n < len && * str != 0	70:20:1931:1971	3044393	1	True				
ANR	3044434	AndExpression	n < sizeof ( buf ) - 1 && n < len && * str != 0		3044393	0		&&			
ANR	3044435	RelationalExpression	n < sizeof ( buf ) - 1		3044393	0		<			
ANR	3044436	Identifier	n		3044393	0					
ANR	3044437	AdditiveExpression	sizeof ( buf ) - 1		3044393	1		-			
ANR	3044438	SizeofExpression	sizeof ( buf )		3044393	0					
ANR	3044439	Sizeof	sizeof		3044393	0					
ANR	3044440	SizeofOperand	buf		3044393	1					
ANR	3044441	PrimaryExpression	1		3044393	1					
ANR	3044442	AndExpression	n < len && * str != 0		3044393	1		&&			
ANR	3044443	RelationalExpression	n < len		3044393	0		<			
ANR	3044444	Identifier	n		3044393	0					
ANR	3044445	Identifier	len		3044393	1					
ANR	3044446	EqualityExpression	* str != 0		3044393	1		!=			
ANR	3044447	UnaryOperationExpression	* str		3044393	0					
ANR	3044448	UnaryOperator	*		3044393	0					
ANR	3044449	Identifier	str		3044393	1					
ANR	3044450	PrimaryExpression	0		3044393	1					
ANR	3044451	Expression	"str ++ , n ++"	70:63:1974:1983	3044393	2	True				
ANR	3044452	PostIncDecOperationExpression	str ++		3044393	0					
ANR	3044453	Identifier	str		3044393	0					
ANR	3044454	IncDec	++		3044393	1					
ANR	3044455	PostIncDecOperationExpression	n ++		3044393	1					
ANR	3044456	Identifier	n		3044393	0					
ANR	3044457	IncDec	++		3044393	1					
ANR	3044458	ExpressionStatement	buf [ n ] = * str	71:12:1998:2011	3044393	3	True				
ANR	3044459	AssignmentExpression	buf [ n ] = * str		3044393	0		=			
ANR	3044460	ArrayIndexing	buf [ n ]		3044393	0					
ANR	3044461	Identifier	buf		3044393	0					
ANR	3044462	Identifier	n		3044393	1					
ANR	3044463	UnaryOperationExpression	* str		3044393	1					
ANR	3044464	UnaryOperator	*		3044393	0					
ANR	3044465	Identifier	str		3044393	1					
ANR	3044466	ExpressionStatement	buf [ n ] = 0	73:8:2061:2071	3044393	2	True				
ANR	3044467	AssignmentExpression	buf [ n ] = 0		3044393	0		=			
ANR	3044468	ArrayIndexing	buf [ n ]		3044393	0					
ANR	3044469	Identifier	buf		3044393	0					
ANR	3044470	Identifier	n		3044393	1					
ANR	3044471	PrimaryExpression	0		3044393	1					
ANR	3044472	ExpressionStatement	len -= n	75:8:2109:2117	3044393	3	True				
ANR	3044473	AssignmentExpression	len -= n		3044393	0		-=			
ANR	3044474	Identifier	len		3044393	0					
ANR	3044475	Identifier	n		3044393	1					
ANR	3044476	ExpressionStatement	OutputDebugStringA ( buf )	76:8:2127:2150	3044393	4	True				
ANR	3044477	CallExpression	OutputDebugStringA ( buf )		3044393	0					
ANR	3044478	Callee	OutputDebugStringA		3044393	0					
ANR	3044479	Identifier	OutputDebugStringA		3044393	0					
ANR	3044480	ArgumentList	buf		3044393	1					
ANR	3044481	Argument	buf		3044393	0					
ANR	3044482	Identifier	buf		3044393	0					
ANR	3044483	ReturnType	static void		3044393	1					
ANR	3044484	Identifier	windows_debug_out		3044393	2					
ANR	3044485	ParameterList	"const char * str , int len"		3044393	3					
ANR	3044486	Parameter	const char * str	54:30:1448:1462	3044393	0	True				
ANR	3044487	ParameterType	const char *		3044393	0					
ANR	3044488	Identifier	str		3044393	1					
ANR	3044489	Parameter	int len	54:47:1465:1471	3044393	1	True				
ANR	3044490	ParameterType	int		3044393	0					
ANR	3044491	Identifier	len		3044393	1					
ANR	3044492	CFGEntryNode	ENTRY		3044393		True				
ANR	3044493	CFGExitNode	EXIT		3044393		True				
ANR	3044494	Symbol	str		3044393						
ANR	3044495	Symbol	buf		3044393						
ANR	3044496	Symbol	* buf		3044393						
ANR	3044497	Symbol	len		3044393						
ANR	3044498	Symbol	* n		3044393						
ANR	3044499	Symbol	* str		3044393						
ANR	3044500	Symbol	n		3044393						
ANR	3044501	Function	gsdll_stdin	84:0:2263:2377							
ANR	3044502	FunctionDef	"gsdll_stdin (void * instance , char * buf , int len)"		3044501	0					
ANR	3044503	CompoundStatement		86:0:2332:2377	3044501	0					
ANR	3044504	ReturnStatement	"return _read ( fileno ( stdin ) , buf , len ) ;"	87:4:2338:2375	3044501	0	True				
ANR	3044505	CallExpression	"_read ( fileno ( stdin ) , buf , len )"		3044501	0					
ANR	3044506	Callee	_read		3044501	0					
ANR	3044507	Identifier	_read		3044501	0					
ANR	3044508	ArgumentList	fileno ( stdin )		3044501	1					
ANR	3044509	Argument	fileno ( stdin )		3044501	0					
ANR	3044510	CallExpression	fileno ( stdin )		3044501	0					
ANR	3044511	Callee	fileno		3044501	0					
ANR	3044512	Identifier	fileno		3044501	0					
ANR	3044513	ArgumentList	stdin		3044501	1					
ANR	3044514	Argument	stdin		3044501	0					
ANR	3044515	Identifier	stdin		3044501	0					
ANR	3044516	Argument	buf		3044501	1					
ANR	3044517	Identifier	buf		3044501	0					
ANR	3044518	Argument	len		3044501	2					
ANR	3044519	Identifier	len		3044501	0					
ANR	3044520	ReturnType	static int GSDLLCALL		3044501	1					
ANR	3044521	Identifier	gsdll_stdin		3044501	2					
ANR	3044522	ParameterList	"void * instance , char * buf , int len"		3044501	3					
ANR	3044523	Parameter	void * instance	85:12:2296:2309	3044501	0	True				
ANR	3044524	ParameterType	void *		3044501	0					
ANR	3044525	Identifier	instance		3044501	1					
ANR	3044526	Parameter	char * buf	85:28:2312:2320	3044501	1	True				
ANR	3044527	ParameterType	char *		3044501	0					
ANR	3044528	Identifier	buf		3044501	1					
ANR	3044529	Parameter	int len	85:39:2323:2329	3044501	2	True				
ANR	3044530	ParameterType	int		3044501	0					
ANR	3044531	Identifier	len		3044501	1					
ANR	3044532	CFGEntryNode	ENTRY		3044501		True				
ANR	3044533	CFGExitNode	EXIT		3044501		True				
ANR	3044534	Symbol	buf		3044501						
ANR	3044535	Symbol	stdin		3044501						
ANR	3044536	Symbol	instance		3044501						
ANR	3044537	Symbol	len		3044501						
ANR	3044538	Symbol	fileno		3044501						
ANR	3044539	Symbol	_read		3044501						
ANR	3044540	Function	gsdll_stdout	90:0:2380:2582							
ANR	3044541	FunctionDef	"gsdll_stdout (void * instance , const char * str , int len)"		3044540	0					
ANR	3044542	CompoundStatement		92:0:2456:2582	3044540	0					
ANR	3044543	ExpressionStatement	"windows_debug_out ( str , len )"	94:4:2477:2504	3044540	0	True				
ANR	3044544	CallExpression	"windows_debug_out ( str , len )"		3044540	0					
ANR	3044545	Callee	windows_debug_out		3044540	0					
ANR	3044546	Identifier	windows_debug_out		3044540	0					
ANR	3044547	ArgumentList	str		3044540	1					
ANR	3044548	Argument	str		3044540	0					
ANR	3044549	Identifier	str		3044540	0					
ANR	3044550	Argument	len		3044540	1					
ANR	3044551	Identifier	len		3044540	0					
ANR	3044552	ExpressionStatement	"fwrite ( str , 1 , len , stdout )"	96:4:2517:2544	3044540	1	True				
ANR	3044553	CallExpression	"fwrite ( str , 1 , len , stdout )"		3044540	0					
ANR	3044554	Callee	fwrite		3044540	0					
ANR	3044555	Identifier	fwrite		3044540	0					
ANR	3044556	ArgumentList	str		3044540	1					
ANR	3044557	Argument	str		3044540	0					
ANR	3044558	Identifier	str		3044540	0					
ANR	3044559	Argument	1		3044540	1					
ANR	3044560	PrimaryExpression	1		3044540	0					
ANR	3044561	Argument	len		3044540	2					
ANR	3044562	Identifier	len		3044540	0					
ANR	3044563	Argument	stdout		3044540	3					
ANR	3044564	Identifier	stdout		3044540	0					
ANR	3044565	ExpressionStatement	fflush ( stdout )	97:4:2550:2564	3044540	2	True				
ANR	3044566	CallExpression	fflush ( stdout )		3044540	0					
ANR	3044567	Callee	fflush		3044540	0					
ANR	3044568	Identifier	fflush		3044540	0					
ANR	3044569	ArgumentList	stdout		3044540	1					
ANR	3044570	Argument	stdout		3044540	0					
ANR	3044571	Identifier	stdout		3044540	0					
ANR	3044572	ReturnStatement	return len ;	98:4:2570:2580	3044540	3	True				
ANR	3044573	Identifier	len		3044540	0					
ANR	3044574	ReturnType	static int GSDLLCALL		3044540	1					
ANR	3044575	Identifier	gsdll_stdout		3044540	2					
ANR	3044576	ParameterList	"void * instance , const char * str , int len"		3044540	3					
ANR	3044577	Parameter	void * instance	91:13:2414:2427	3044540	0	True				
ANR	3044578	ParameterType	void *		3044540	0					
ANR	3044579	Identifier	instance		3044540	1					
ANR	3044580	Parameter	const char * str	91:29:2430:2444	3044540	1	True				
ANR	3044581	ParameterType	const char *		3044540	0					
ANR	3044582	Identifier	str		3044540	1					
ANR	3044583	Parameter	int len	91:46:2447:2453	3044540	2	True				
ANR	3044584	ParameterType	int		3044540	0					
ANR	3044585	Identifier	len		3044540	1					
ANR	3044586	CFGEntryNode	ENTRY		3044540		True				
ANR	3044587	CFGExitNode	EXIT		3044540		True				
ANR	3044588	Symbol	str		3044540						
ANR	3044589	Symbol	instance		3044540						
ANR	3044590	Symbol	len		3044540						
ANR	3044591	Symbol	stdout		3044540						
ANR	3044592	Function	gsdll_stderr	101:0:2585:2787							
ANR	3044593	FunctionDef	"gsdll_stderr (void * instance , const char * str , int len)"		3044592	0					
ANR	3044594	CompoundStatement		103:0:2661:2787	3044592	0					
ANR	3044595	ExpressionStatement	"windows_debug_out ( str , len )"	105:4:2682:2709	3044592	0	True				
ANR	3044596	CallExpression	"windows_debug_out ( str , len )"		3044592	0					
ANR	3044597	Callee	windows_debug_out		3044592	0					
ANR	3044598	Identifier	windows_debug_out		3044592	0					
ANR	3044599	ArgumentList	str		3044592	1					
ANR	3044600	Argument	str		3044592	0					
ANR	3044601	Identifier	str		3044592	0					
ANR	3044602	Argument	len		3044592	1					
ANR	3044603	Identifier	len		3044592	0					
ANR	3044604	ExpressionStatement	"fwrite ( str , 1 , len , stderr )"	107:4:2722:2749	3044592	1	True				
ANR	3044605	CallExpression	"fwrite ( str , 1 , len , stderr )"		3044592	0					
ANR	3044606	Callee	fwrite		3044592	0					
ANR	3044607	Identifier	fwrite		3044592	0					
ANR	3044608	ArgumentList	str		3044592	1					
ANR	3044609	Argument	str		3044592	0					
ANR	3044610	Identifier	str		3044592	0					
ANR	3044611	Argument	1		3044592	1					
ANR	3044612	PrimaryExpression	1		3044592	0					
ANR	3044613	Argument	len		3044592	2					
ANR	3044614	Identifier	len		3044592	0					
ANR	3044615	Argument	stderr		3044592	3					
ANR	3044616	Identifier	stderr		3044592	0					
ANR	3044617	ExpressionStatement	fflush ( stderr )	108:4:2755:2769	3044592	2	True				
ANR	3044618	CallExpression	fflush ( stderr )		3044592	0					
ANR	3044619	Callee	fflush		3044592	0					
ANR	3044620	Identifier	fflush		3044592	0					
ANR	3044621	ArgumentList	stderr		3044592	1					
ANR	3044622	Argument	stderr		3044592	0					
ANR	3044623	Identifier	stderr		3044592	0					
ANR	3044624	ReturnStatement	return len ;	109:4:2775:2785	3044592	3	True				
ANR	3044625	Identifier	len		3044592	0					
ANR	3044626	ReturnType	static int GSDLLCALL		3044592	1					
ANR	3044627	Identifier	gsdll_stderr		3044592	2					
ANR	3044628	ParameterList	"void * instance , const char * str , int len"		3044592	3					
ANR	3044629	Parameter	void * instance	102:13:2619:2632	3044592	0	True				
ANR	3044630	ParameterType	void *		3044592	0					
ANR	3044631	Identifier	instance		3044592	1					
ANR	3044632	Parameter	const char * str	102:29:2635:2649	3044592	1	True				
ANR	3044633	ParameterType	const char *		3044592	0					
ANR	3044634	Identifier	str		3044592	1					
ANR	3044635	Parameter	int len	102:46:2652:2658	3044592	2	True				
ANR	3044636	ParameterType	int		3044592	0					
ANR	3044637	Identifier	len		3044592	1					
ANR	3044638	CFGEntryNode	ENTRY		3044592		True				
ANR	3044639	CFGExitNode	EXIT		3044592		True				
ANR	3044640	Symbol	str		3044592						
ANR	3044641	Symbol	instance		3044592						
ANR	3044642	Symbol	len		3044592						
ANR	3044643	Symbol	stderr		3044592						
ANR	3044644	Function	gsdll_stdin_utf8	114:0:2871:6266							
ANR	3044645	FunctionDef	"gsdll_stdin_utf8 (void * instance , char * buf , int len)"		3044644	0					
ANR	3044646	CompoundStatement		116:0:2945:6266	3044644	0					
ANR	3044647	Statement	static	117:4:2951:2956	3044644	0	True				
ANR	3044648	IdentifierDeclStatement	WCHAR thiswchar = 0 ;	117:11:2958:2977	3044644	1	True				
ANR	3044649	IdentifierDecl	thiswchar = 0		3044644	0					
ANR	3044650	IdentifierDeclType	WCHAR		3044644	0					
ANR	3044651	Identifier	thiswchar		3044644	1					
ANR	3044652	AssignmentExpression	thiswchar = 0		3044644	2		=			
ANR	3044653	Identifier	thiswchar		3044644	0					
ANR	3044654	PrimaryExpression	0		3044644	1					
ANR	3044655	Statement	static	118:4:3033:3038	3044644	2	True				
ANR	3044656	IdentifierDeclStatement	int nmore = 0 ;	118:11:3040:3053	3044644	3	True				
ANR	3044657	IdentifierDecl	nmore = 0		3044644	0					
ANR	3044658	IdentifierDeclType	int		3044644	0					
ANR	3044659	Identifier	nmore		3044644	1					
ANR	3044660	AssignmentExpression	nmore = 0		3044644	2		=			
ANR	3044661	Identifier	nmore		3044644	0					
ANR	3044662	PrimaryExpression	0		3044644	1					
ANR	3044663	IdentifierDeclStatement	UINT consolecp = 0 ;	119:4:3119:3137	3044644	4	True				
ANR	3044664	IdentifierDecl	consolecp = 0		3044644	0					
ANR	3044665	IdentifierDeclType	UINT		3044644	0					
ANR	3044666	Identifier	consolecp		3044644	1					
ANR	3044667	AssignmentExpression	consolecp = 0		3044644	2		=			
ANR	3044668	Identifier	consolecp		3044644	0					
ANR	3044669	PrimaryExpression	0		3044644	1					
ANR	3044670	IdentifierDeclStatement	int nret = 0 ;	120:4:3143:3155	3044644	5	True				
ANR	3044671	IdentifierDecl	nret = 0		3044644	0					
ANR	3044672	IdentifierDeclType	int		3044644	0					
ANR	3044673	Identifier	nret		3044644	1					
ANR	3044674	AssignmentExpression	nret = 0		3044644	2		=			
ANR	3044675	Identifier	nret		3044644	0					
ANR	3044676	PrimaryExpression	0		3044644	1					
ANR	3044677	IdentifierDeclStatement	int i ;	121:4:3216:3221	3044644	6	True				
ANR	3044678	IdentifierDecl	i		3044644	0					
ANR	3044679	IdentifierDeclType	int		3044644	0					
ANR	3044680	Identifier	i		3044644	1					
ANR	3044681	WhileStatement	while ( len > 0 )		3044644	7					
ANR	3044682	Condition	len > 0	124:11:3288:3294	3044644	0	True				
ANR	3044683	RelationalExpression	len > 0		3044644	0		>			
ANR	3044684	Identifier	len		3044644	0					
ANR	3044685	PrimaryExpression	0		3044644	1					
ANR	3044686	CompoundStatement		9:20:351:351	3044644	1					
ANR	3044687	WhileStatement	while ( len && nmore )		3044644	0					
ANR	3044688	Condition	len && nmore	125:15:3314:3325	3044644	0	True				
ANR	3044689	AndExpression	len && nmore		3044644	0		&&			
ANR	3044690	Identifier	len		3044644	0					
ANR	3044691	Identifier	nmore		3044644	1					
ANR	3044692	CompoundStatement		10:29:382:382	3044644	1					
ANR	3044693	ExpressionStatement	nmore --	126:12:3342:3349	3044644	0	True				
ANR	3044694	PostIncDecOperationExpression	nmore --		3044644	0					
ANR	3044695	Identifier	nmore		3044644	0					
ANR	3044696	IncDec	--		3044644	1					
ANR	3044697	ExpressionStatement	"* buf ++ = 0x80 | ( ( thiswchar >> ( 6 * nmore ) ) & 0x3F ) , nret ++"	127:12:3363:3422	3044644	1	True				
ANR	3044698	Expression	"* buf ++ = 0x80 | ( ( thiswchar >> ( 6 * nmore ) ) & 0x3F ) , nret ++"		3044644	0					
ANR	3044699	AssignmentExpression	* buf ++ = 0x80 | ( ( thiswchar >> ( 6 * nmore ) ) & 0x3F )		3044644	0		=			
ANR	3044700	UnaryOperationExpression	* buf ++		3044644	0					
ANR	3044701	UnaryOperator	*		3044644	0					
ANR	3044702	PostIncDecOperationExpression	buf ++		3044644	1					
ANR	3044703	Identifier	buf		3044644	0					
ANR	3044704	IncDec	++		3044644	1					
ANR	3044705	InclusiveOrExpression	0x80 | ( ( thiswchar >> ( 6 * nmore ) ) & 0x3F )		3044644	1		|			
ANR	3044706	PrimaryExpression	0x80		3044644	0					
ANR	3044707	BitAndExpression	( thiswchar >> ( 6 * nmore ) ) & 0x3F		3044644	1		&			
ANR	3044708	ShiftExpression	thiswchar >> ( 6 * nmore )		3044644	0		>>			
ANR	3044709	Identifier	thiswchar		3044644	0					
ANR	3044710	MultiplicativeExpression	6 * nmore		3044644	1		*			
ANR	3044711	PrimaryExpression	6		3044644	0					
ANR	3044712	Identifier	nmore		3044644	1					
ANR	3044713	PrimaryExpression	0x3F		3044644	1					
ANR	3044714	PostIncDecOperationExpression	nret ++		3044644	1					
ANR	3044715	Identifier	nret		3044644	0					
ANR	3044716	IncDec	++		3044644	1					
ANR	3044717	ExpressionStatement	len --	128:12:3436:3441	3044644	2	True				
ANR	3044718	PostIncDecOperationExpression	len --		3044644	0					
ANR	3044719	Identifier	len		3044644	0					
ANR	3044720	IncDec	--		3044644	1					
ANR	3044721	WhileStatement	while ( len )		3044644	1					
ANR	3044722	Condition	len	130:15:3468:3470	3044644	0	True				
ANR	3044723	Identifier	len		3044644	0					
ANR	3044724	CompoundStatement		26:12:1259:1271	3044644	1					
ANR	3044725	IdentifierDeclStatement	int num_read ;	141:12:4205:4217	3044644	0	True				
ANR	3044726	IdentifierDecl	num_read		3044644	0					
ANR	3044727	IdentifierDeclType	int		3044644	0					
ANR	3044728	Identifier	num_read		3044644	1					
ANR	3044729	ExpressionStatement	buf [ 0 ] = 0	142:12:4231:4241	3044644	1	True				
ANR	3044730	AssignmentExpression	buf [ 0 ] = 0		3044644	0		=			
ANR	3044731	ArrayIndexing	buf [ 0 ]		3044644	0					
ANR	3044732	Identifier	buf		3044644	0					
ANR	3044733	PrimaryExpression	0		3044644	1					
ANR	3044734	PrimaryExpression	0		3044644	1					
ANR	3044735	ExpressionStatement	"num_read = _read ( fileno ( stdin ) , buf , 1 )"	143:12:4274:4313	3044644	2	True				
ANR	3044736	AssignmentExpression	"num_read = _read ( fileno ( stdin ) , buf , 1 )"		3044644	0		=			
ANR	3044737	Identifier	num_read		3044644	0					
ANR	3044738	CallExpression	"_read ( fileno ( stdin ) , buf , 1 )"		3044644	1					
ANR	3044739	Callee	_read		3044644	0					
ANR	3044740	Identifier	_read		3044644	0					
ANR	3044741	ArgumentList	fileno ( stdin )		3044644	1					
ANR	3044742	Argument	fileno ( stdin )		3044644	0					
ANR	3044743	CallExpression	fileno ( stdin )		3044644	0					
ANR	3044744	Callee	fileno		3044644	0					
ANR	3044745	Identifier	fileno		3044644	0					
ANR	3044746	ArgumentList	stdin		3044644	1					
ANR	3044747	Argument	stdin		3044644	0					
ANR	3044748	Identifier	stdin		3044644	0					
ANR	3044749	Argument	buf		3044644	1					
ANR	3044750	Identifier	buf		3044644	0					
ANR	3044751	Argument	1		3044644	2					
ANR	3044752	PrimaryExpression	1		3044644	0					
ANR	3044753	IfStatement	if ( num_read == 0 && buf [ 0 ] == 0x0a )		3044644	3					
ANR	3044754	Condition	num_read == 0 && buf [ 0 ] == 0x0a	144:16:4331:4361	3044644	0	True				
ANR	3044755	AndExpression	num_read == 0 && buf [ 0 ] == 0x0a		3044644	0		&&			
ANR	3044756	EqualityExpression	num_read == 0		3044644	0		==			
ANR	3044757	Identifier	num_read		3044644	0					
ANR	3044758	PrimaryExpression	0		3044644	1					
ANR	3044759	EqualityExpression	buf [ 0 ] == 0x0a		3044644	1		==			
ANR	3044760	ArrayIndexing	buf [ 0 ]		3044644	0					
ANR	3044761	Identifier	buf		3044644	0					
ANR	3044762	PrimaryExpression	0		3044644	1					
ANR	3044763	PrimaryExpression	0x0a		3044644	1					
ANR	3044764	ExpressionStatement	num_read = 1	145:16:4380:4392	3044644	1	True				
ANR	3044765	AssignmentExpression	num_read = 1		3044644	0		=			
ANR	3044766	Identifier	num_read		3044644	0					
ANR	3044767	PrimaryExpression	1		3044644	1					
ANR	3044768	IfStatement	if ( 0 >= num_read )		3044644	4					
ANR	3044769	Condition	0 >= num_read	146:16:4430:4442	3044644	0	True				
ANR	3044770	RelationalExpression	0 >= num_read		3044644	0		>=			
ANR	3044771	PrimaryExpression	0		3044644	0					
ANR	3044772	Identifier	num_read		3044644	1					
ANR	3044773	ReturnStatement	return nret ;	147:16:4461:4472	3044644	1	True				
ANR	3044774	Identifier	nret		3044644	0					
ANR	3044775	ExpressionStatement	"nret ++ , buf ++ , len --"	148:12:4486:4506	3044644	5	True				
ANR	3044776	Expression	"nret ++ , buf ++ , len --"		3044644	0					
ANR	3044777	PostIncDecOperationExpression	nret ++		3044644	0					
ANR	3044778	Identifier	nret		3044644	0					
ANR	3044779	IncDec	++		3044644	1					
ANR	3044780	Expression	"buf ++ , len --"		3044644	1					
ANR	3044781	PostIncDecOperationExpression	buf ++		3044644	0					
ANR	3044782	Identifier	buf		3044644	0					
ANR	3044783	IncDec	++		3044644	1					
ANR	3044784	PostIncDecOperationExpression	len --		3044644	1					
ANR	3044785	Identifier	len		3044644	0					
ANR	3044786	IncDec	--		3044644	1					
ANR	3044787	IfStatement	if ( buf [ - 1 ] == '\\n' )		3044644	6					
ANR	3044788	Condition	buf [ - 1 ] == '\\n'	149:16:4524:4538	3044644	0	True				
ANR	3044789	EqualityExpression	buf [ - 1 ] == '\\n'		3044644	0		==			
ANR	3044790	ArrayIndexing	buf [ - 1 ]		3044644	0					
ANR	3044791	Identifier	buf		3044644	0					
ANR	3044792	UnaryOperationExpression	- 1		3044644	1					
ANR	3044793	UnaryOperator	-		3044644	0					
ANR	3044794	PrimaryExpression	1		3044644	1					
ANR	3044795	PrimaryExpression	'\\n'		3044644	1					
ANR	3044796	ReturnStatement	return nret ;	151:16:4630:4641	3044644	1	True				
ANR	3044797	Identifier	nret		3044644	0					
ANR	3044798	ElseStatement	else		3044644	0					
ANR	3044799	IfStatement	if ( ( unsigned char ) buf [ - 1 ] <= 0x7F )		3044644	0					
ANR	3044800	Condition	( unsigned char ) buf [ - 1 ] <= 0x7F	152:21:4664:4693	3044644	0	True				
ANR	3044801	RelationalExpression	( unsigned char ) buf [ - 1 ] <= 0x7F		3044644	0		<=			
ANR	3044802	CastExpression	( unsigned char ) buf [ - 1 ]		3044644	0					
ANR	3044803	CastTarget	unsigned char		3044644	0					
ANR	3044804	ArrayIndexing	buf [ - 1 ]		3044644	1					
ANR	3044805	Identifier	buf		3044644	0					
ANR	3044806	UnaryOperationExpression	- 1		3044644	1					
ANR	3044807	UnaryOperator	-		3044644	0					
ANR	3044808	PrimaryExpression	1		3044644	1					
ANR	3044809	PrimaryExpression	0x7F		3044644	1					
ANR	3044810	ContinueStatement	continue ;	154:16:4778:4786	3044644	1	True				
ANR	3044811	ElseStatement	else		3044644	0					
ANR	3044812	CompoundStatement		42:16:1933:1948	3044644	0					
ANR	3044813	IdentifierDeclStatement	BYTE dbcsstr [ 2 ] ;	157:16:4879:4894	3044644	0	True				
ANR	3044814	IdentifierDecl	dbcsstr [ 2 ]		3044644	0					
ANR	3044815	IdentifierDeclType	BYTE [ 2 ]		3044644	0					
ANR	3044816	Identifier	dbcsstr		3044644	1					
ANR	3044817	PrimaryExpression	2		3044644	2					
ANR	3044818	ExpressionStatement	dbcsstr [ 0 ] = buf [ - 1 ]	159:16:4913:4933	3044644	1	True				
ANR	3044819	AssignmentExpression	dbcsstr [ 0 ] = buf [ - 1 ]		3044644	0		=			
ANR	3044820	ArrayIndexing	dbcsstr [ 0 ]		3044644	0					
ANR	3044821	Identifier	dbcsstr		3044644	0					
ANR	3044822	PrimaryExpression	0		3044644	1					
ANR	3044823	ArrayIndexing	buf [ - 1 ]		3044644	1					
ANR	3044824	Identifier	buf		3044644	0					
ANR	3044825	UnaryOperationExpression	- 1		3044644	1					
ANR	3044826	UnaryOperator	-		3044644	0					
ANR	3044827	PrimaryExpression	1		3044644	1					
ANR	3044828	IfStatement	if ( ! consolecp )		3044644	2					
ANR	3044829	Condition	! consolecp	160:20:4955:4964	3044644	0	True				
ANR	3044830	UnaryOperationExpression	! consolecp		3044644	0					
ANR	3044831	UnaryOperator	!		3044644	0					
ANR	3044832	Identifier	consolecp		3044644	1					
ANR	3044833	ExpressionStatement	consolecp = GetConsoleCP ( )	161:20:4987:5013	3044644	1	True				
ANR	3044834	AssignmentExpression	consolecp = GetConsoleCP ( )		3044644	0		=			
ANR	3044835	Identifier	consolecp		3044644	0					
ANR	3044836	CallExpression	GetConsoleCP ( )		3044644	1					
ANR	3044837	Callee	GetConsoleCP		3044644	0					
ANR	3044838	Identifier	GetConsoleCP		3044644	0					
ANR	3044839	ArgumentList			3044644	1					
ANR	3044840	Statement	thiswchar	162:16:5031:5039	3044644	3	True				
ANR	3044841	Statement	=	162:26:5041:5041	3044644	4	True				
ANR	3044842	Statement	L	162:28:5043:5043	3044644	5	True				
ANR	3044843	ExpressionStatement	'?'	162:29:5044:5047	3044644	6	True				
ANR	3044844	PrimaryExpression	'?'		3044644	0					
ANR	3044845	IfStatement	"if ( IsDBCSLeadByteEx ( consolecp , dbcsstr [ 0 ] ) )"		3044644	7					
ANR	3044846	Condition	"IsDBCSLeadByteEx ( consolecp , dbcsstr [ 0 ] )"	163:20:5121:5159	3044644	0	True				
ANR	3044847	CallExpression	"IsDBCSLeadByteEx ( consolecp , dbcsstr [ 0 ] )"		3044644	0					
ANR	3044848	Callee	IsDBCSLeadByteEx		3044644	0					
ANR	3044849	Identifier	IsDBCSLeadByteEx		3044644	0					
ANR	3044850	ArgumentList	consolecp		3044644	1					
ANR	3044851	Argument	consolecp		3044644	0					
ANR	3044852	Identifier	consolecp		3044644	0					
ANR	3044853	Argument	dbcsstr [ 0 ]		3044644	1					
ANR	3044854	ArrayIndexing	dbcsstr [ 0 ]		3044644	0					
ANR	3044855	Identifier	dbcsstr		3044644	0					
ANR	3044856	PrimaryExpression	0		3044644	1					
ANR	3044857	CompoundStatement		48:61:2216:2216	3044644	1					
ANR	3044858	ExpressionStatement	"_read ( fileno ( stdin ) , & dbcsstr [ 1 ] , 1 )"	165:20:5259:5295	3044644	0	True				
ANR	3044859	CallExpression	"_read ( fileno ( stdin ) , & dbcsstr [ 1 ] , 1 )"		3044644	0					
ANR	3044860	Callee	_read		3044644	0					
ANR	3044861	Identifier	_read		3044644	0					
ANR	3044862	ArgumentList	fileno ( stdin )		3044644	1					
ANR	3044863	Argument	fileno ( stdin )		3044644	0					
ANR	3044864	CallExpression	fileno ( stdin )		3044644	0					
ANR	3044865	Callee	fileno		3044644	0					
ANR	3044866	Identifier	fileno		3044644	0					
ANR	3044867	ArgumentList	stdin		3044644	1					
ANR	3044868	Argument	stdin		3044644	0					
ANR	3044869	Identifier	stdin		3044644	0					
ANR	3044870	Argument	& dbcsstr [ 1 ]		3044644	1					
ANR	3044871	UnaryOperationExpression	& dbcsstr [ 1 ]		3044644	0					
ANR	3044872	UnaryOperator	&		3044644	0					
ANR	3044873	ArrayIndexing	dbcsstr [ 1 ]		3044644	1					
ANR	3044874	Identifier	dbcsstr		3044644	0					
ANR	3044875	PrimaryExpression	1		3044644	1					
ANR	3044876	Argument	1		3044644	2					
ANR	3044877	PrimaryExpression	1		3044644	0					
ANR	3044878	ExpressionStatement	"MultiByteToWideChar ( consolecp , 0 , dbcsstr , 2 , & thiswchar , 1 )"	166:20:5317:5377	3044644	1	True				
ANR	3044879	CallExpression	"MultiByteToWideChar ( consolecp , 0 , dbcsstr , 2 , & thiswchar , 1 )"		3044644	0					
ANR	3044880	Callee	MultiByteToWideChar		3044644	0					
ANR	3044881	Identifier	MultiByteToWideChar		3044644	0					
ANR	3044882	ArgumentList	consolecp		3044644	1					
ANR	3044883	Argument	consolecp		3044644	0					
ANR	3044884	Identifier	consolecp		3044644	0					
ANR	3044885	Argument	0		3044644	1					
ANR	3044886	PrimaryExpression	0		3044644	0					
ANR	3044887	Argument	dbcsstr		3044644	2					
ANR	3044888	Identifier	dbcsstr		3044644	0					
ANR	3044889	Argument	2		3044644	3					
ANR	3044890	PrimaryExpression	2		3044644	0					
ANR	3044891	Argument	& thiswchar		3044644	4					
ANR	3044892	UnaryOperationExpression	& thiswchar		3044644	0					
ANR	3044893	UnaryOperator	&		3044644	0					
ANR	3044894	Identifier	thiswchar		3044644	1					
ANR	3044895	Argument	1		3044644	5					
ANR	3044896	PrimaryExpression	1		3044644	0					
ANR	3044897	ElseStatement	else		3044644	0					
ANR	3044898	CompoundStatement		53:21:2472:2472	3044644	0					
ANR	3044899	ExpressionStatement	"MultiByteToWideChar ( consolecp , 0 , dbcsstr , 1 , & thiswchar , 1 )"	169:20:5440:5500	3044644	0	True				
ANR	3044900	CallExpression	"MultiByteToWideChar ( consolecp , 0 , dbcsstr , 1 , & thiswchar , 1 )"		3044644	0					
ANR	3044901	Callee	MultiByteToWideChar		3044644	0					
ANR	3044902	Identifier	MultiByteToWideChar		3044644	0					
ANR	3044903	ArgumentList	consolecp		3044644	1					
ANR	3044904	Argument	consolecp		3044644	0					
ANR	3044905	Identifier	consolecp		3044644	0					
ANR	3044906	Argument	0		3044644	1					
ANR	3044907	PrimaryExpression	0		3044644	0					
ANR	3044908	Argument	dbcsstr		3044644	2					
ANR	3044909	Identifier	dbcsstr		3044644	0					
ANR	3044910	Argument	1		3044644	3					
ANR	3044911	PrimaryExpression	1		3044644	0					
ANR	3044912	Argument	& thiswchar		3044644	4					
ANR	3044913	UnaryOperationExpression	& thiswchar		3044644	0					
ANR	3044914	UnaryOperator	&		3044644	0					
ANR	3044915	Identifier	thiswchar		3044644	1					
ANR	3044916	Argument	1		3044644	5					
ANR	3044917	PrimaryExpression	1		3044644	0					
ANR	3044918	IfStatement	if ( thiswchar <= 0x007F )		3044644	8					
ANR	3044919	Condition	thiswchar <= 0x007F	172:20:5589:5607	3044644	0	True				
ANR	3044920	RelationalExpression	thiswchar <= 0x007F		3044644	0		<=			
ANR	3044921	Identifier	thiswchar		3044644	0					
ANR	3044922	PrimaryExpression	0x007F		3044644	1					
ANR	3044923	CompoundStatement		57:41:2664:2664	3044644	1					
ANR	3044924	ExpressionStatement	buf [ - 1 ] = ( char ) thiswchar	173:20:5670:5695	3044644	0	True				
ANR	3044925	AssignmentExpression	buf [ - 1 ] = ( char ) thiswchar		3044644	0		=			
ANR	3044926	ArrayIndexing	buf [ - 1 ]		3044644	0					
ANR	3044927	Identifier	buf		3044644	0					
ANR	3044928	UnaryOperationExpression	- 1		3044644	1					
ANR	3044929	UnaryOperator	-		3044644	0					
ANR	3044930	PrimaryExpression	1		3044644	1					
ANR	3044931	CastExpression	( char ) thiswchar		3044644	1					
ANR	3044932	CastTarget	char		3044644	0					
ANR	3044933	Identifier	thiswchar		3044644	1					
ANR	3044934	ElseStatement	else		3044644	0					
ANR	3044935	IfStatement	if ( thiswchar <= 0x07FF )		3044644	0					
ANR	3044936	Condition	thiswchar <= 0x07FF	174:27:5724:5742	3044644	0	True				
ANR	3044937	RelationalExpression	thiswchar <= 0x07FF		3044644	0		<=			
ANR	3044938	Identifier	thiswchar		3044644	0					
ANR	3044939	PrimaryExpression	0x07FF		3044644	1					
ANR	3044940	CompoundStatement		59:48:2799:2799	3044644	1					
ANR	3044941	ExpressionStatement	buf [ - 1 ] = 0xC0 | ( ( thiswchar >> 6 ) & 0x1F )	175:20:5794:5836	3044644	0	True				
ANR	3044942	AssignmentExpression	buf [ - 1 ] = 0xC0 | ( ( thiswchar >> 6 ) & 0x1F )		3044644	0		=			
ANR	3044943	ArrayIndexing	buf [ - 1 ]		3044644	0					
ANR	3044944	Identifier	buf		3044644	0					
ANR	3044945	UnaryOperationExpression	- 1		3044644	1					
ANR	3044946	UnaryOperator	-		3044644	0					
ANR	3044947	PrimaryExpression	1		3044644	1					
ANR	3044948	InclusiveOrExpression	0xC0 | ( ( thiswchar >> 6 ) & 0x1F )		3044644	1		|			
ANR	3044949	PrimaryExpression	0xC0		3044644	0					
ANR	3044950	BitAndExpression	( thiswchar >> 6 ) & 0x1F		3044644	1		&			
ANR	3044951	ShiftExpression	thiswchar >> 6		3044644	0		>>			
ANR	3044952	Identifier	thiswchar		3044644	0					
ANR	3044953	PrimaryExpression	6		3044644	1					
ANR	3044954	PrimaryExpression	0x1F		3044644	1					
ANR	3044955	ExpressionStatement	nmore = 1	176:20:5858:5867	3044644	1	True				
ANR	3044956	AssignmentExpression	nmore = 1		3044644	0		=			
ANR	3044957	Identifier	nmore		3044644	0					
ANR	3044958	PrimaryExpression	1		3044644	1					
ANR	3044959	BreakStatement	break ;	177:20:5889:5894	3044644	2	True				
ANR	3044960	ElseStatement	else		3044644	0					
ANR	3044961	IfStatement	if ( thiswchar <= 0xFFFF )		3044644	0					
ANR	3044962	Condition	thiswchar <= 0xFFFF	178:27:5923:5941	3044644	0	True				
ANR	3044963	RelationalExpression	thiswchar <= 0xFFFF		3044644	0		<=			
ANR	3044964	Identifier	thiswchar		3044644	0					
ANR	3044965	PrimaryExpression	0xFFFF		3044644	1					
ANR	3044966	CompoundStatement		63:48:2998:2998	3044644	1					
ANR	3044967	ExpressionStatement	buf [ - 1 ] = 0xE0 | ( ( thiswchar >> 12 ) & 0xF )	179:20:5993:6035	3044644	0	True				
ANR	3044968	AssignmentExpression	buf [ - 1 ] = 0xE0 | ( ( thiswchar >> 12 ) & 0xF )		3044644	0		=			
ANR	3044969	ArrayIndexing	buf [ - 1 ]		3044644	0					
ANR	3044970	Identifier	buf		3044644	0					
ANR	3044971	UnaryOperationExpression	- 1		3044644	1					
ANR	3044972	UnaryOperator	-		3044644	0					
ANR	3044973	PrimaryExpression	1		3044644	1					
ANR	3044974	InclusiveOrExpression	0xE0 | ( ( thiswchar >> 12 ) & 0xF )		3044644	1		|			
ANR	3044975	PrimaryExpression	0xE0		3044644	0					
ANR	3044976	BitAndExpression	( thiswchar >> 12 ) & 0xF		3044644	1		&			
ANR	3044977	ShiftExpression	thiswchar >> 12		3044644	0		>>			
ANR	3044978	Identifier	thiswchar		3044644	0					
ANR	3044979	PrimaryExpression	12		3044644	1					
ANR	3044980	PrimaryExpression	0xF		3044644	1					
ANR	3044981	ExpressionStatement	nmore = 2	180:20:6057:6066	3044644	1	True				
ANR	3044982	AssignmentExpression	nmore = 2		3044644	0		=			
ANR	3044983	Identifier	nmore		3044644	0					
ANR	3044984	PrimaryExpression	2		3044644	1					
ANR	3044985	BreakStatement	break ;	181:20:6088:6093	3044644	2	True				
ANR	3044986	ElseStatement	else		3044644	0					
ANR	3044987	ExpressionStatement	buf [ - 1 ] = '?'	184:20:6204:6217	3044644	0	True				
ANR	3044988	AssignmentExpression	buf [ - 1 ] = '?'		3044644	0		=			
ANR	3044989	ArrayIndexing	buf [ - 1 ]		3044644	0					
ANR	3044990	Identifier	buf		3044644	0					
ANR	3044991	UnaryOperationExpression	- 1		3044644	1					
ANR	3044992	UnaryOperator	-		3044644	0					
ANR	3044993	PrimaryExpression	1		3044644	1					
ANR	3044994	PrimaryExpression	'?'		3044644	1					
ANR	3044995	ReturnStatement	return nret ;	188:4:6253:6264	3044644	8	True				
ANR	3044996	Identifier	nret		3044644	0					
ANR	3044997	ReturnType	static int GSDLLCALL		3044644	1					
ANR	3044998	Identifier	gsdll_stdin_utf8		3044644	2					
ANR	3044999	ParameterList	"void * instance , char * buf , int len"		3044644	3					
ANR	3045000	Parameter	void * instance	115:17:2909:2922	3044644	0	True				
ANR	3045001	ParameterType	void *		3044644	0					
ANR	3045002	Identifier	instance		3044644	1					
ANR	3045003	Parameter	char * buf	115:33:2925:2933	3044644	1	True				
ANR	3045004	ParameterType	char *		3044644	0					
ANR	3045005	Identifier	buf		3044644	1					
ANR	3045006	Parameter	int len	115:44:2936:2942	3044644	2	True				
ANR	3045007	ParameterType	int		3044644	0					
ANR	3045008	Identifier	len		3044644	1					
ANR	3045009	CFGEntryNode	ENTRY		3044644		True				
ANR	3045010	CFGExitNode	EXIT		3044644		True				
ANR	3045011	Symbol	nret		3044644						
ANR	3045012	Symbol	nmore		3044644						
ANR	3045013	Symbol	* buf		3044644						
ANR	3045014	Symbol	stdin		3044644						
ANR	3045015	Symbol	instance		3044644						
ANR	3045016	Symbol	IsDBCSLeadByteEx		3044644						
ANR	3045017	Symbol	num_read		3044644						
ANR	3045018	Symbol	_read		3044644						
ANR	3045019	Symbol	GetConsoleCP		3044644						
ANR	3045020	Symbol	i		3044644						
ANR	3045021	Symbol	thiswchar		3044644						
ANR	3045022	Symbol	* buf ++		3044644						
ANR	3045023	Symbol	dbcsstr		3044644						
ANR	3045024	Symbol	& thiswchar		3044644						
ANR	3045025	Symbol	buf		3044644						
ANR	3045026	Symbol	len		3044644						
ANR	3045027	Symbol	fileno		3044644						
ANR	3045028	Symbol	consolecp		3044644						
ANR	3045029	Symbol	* dbcsstr		3044644						
ANR	3045030	Function	gsdll_utf8write	191:0:6269:9225							
ANR	3045031	FunctionDef	"gsdll_utf8write (FILE * stdwr , const char * str , int len , WCHAR * thiswchar , int * nmore)"		3045030	0					
ANR	3045032	CompoundStatement		193:0:6366:9225	3045030	0					
ANR	3045033	IdentifierDeclStatement	UINT consolecp = 0 ;	194:4:6372:6390	3045030	0	True				
ANR	3045034	IdentifierDecl	consolecp = 0		3045030	0					
ANR	3045035	IdentifierDeclType	UINT		3045030	0					
ANR	3045036	Identifier	consolecp		3045030	1					
ANR	3045037	AssignmentExpression	consolecp = 0		3045030	2		=			
ANR	3045038	Identifier	consolecp		3045030	0					
ANR	3045039	PrimaryExpression	0		3045030	1					
ANR	3045040	WhileStatement	while ( len > 0 )		3045030	1					
ANR	3045041	Condition	len > 0	197:11:6457:6463	3045030	0	True				
ANR	3045042	RelationalExpression	len > 0		3045030	0		>			
ANR	3045043	Identifier	len		3045030	0					
ANR	3045044	PrimaryExpression	0		3045030	1					
ANR	3045045	CompoundStatement		6:8:109:125	3045030	1					
ANR	3045046	IdentifierDeclStatement	const char * str0 ;	198:8:6476:6492	3045030	0	True				
ANR	3045047	IdentifierDecl	* str0		3045030	0					
ANR	3045048	IdentifierDeclType	const char *		3045030	0					
ANR	3045049	Identifier	str0		3045030	1					
ANR	3045050	ForStatement	"for ( str0 = str ; len && ! ( * str & 0x80 ) ; str ++ , len -- )"		3045030	1					
ANR	3045051	ForInit	str0 = str ;	201:13:6560:6570	3045030	0	True				
ANR	3045052	AssignmentExpression	str0 = str		3045030	0		=			
ANR	3045053	Identifier	str0		3045030	0					
ANR	3045054	Identifier	str		3045030	1					
ANR	3045055	Condition	len && ! ( * str & 0x80 )	201:25:6572:6592	3045030	1	True				
ANR	3045056	AndExpression	len && ! ( * str & 0x80 )		3045030	0		&&			
ANR	3045057	Identifier	len		3045030	0					
ANR	3045058	UnaryOperationExpression	! ( * str & 0x80 )		3045030	1					
ANR	3045059	UnaryOperator	!		3045030	0					
ANR	3045060	BitAndExpression	* str & 0x80		3045030	1		&			
ANR	3045061	UnaryOperationExpression	* str		3045030	0					
ANR	3045062	UnaryOperator	*		3045030	0					
ANR	3045063	Identifier	str		3045030	1					
ANR	3045064	PrimaryExpression	0x80		3045030	1					
ANR	3045065	Expression	"str ++ , len --"	201:48:6595:6606	3045030	2	True				
ANR	3045066	PostIncDecOperationExpression	str ++		3045030	0					
ANR	3045067	Identifier	str		3045030	0					
ANR	3045068	IncDec	++		3045030	1					
ANR	3045069	PostIncDecOperationExpression	len --		3045030	1					
ANR	3045070	Identifier	len		3045030	0					
ANR	3045071	IncDec	--		3045030	1					
ANR	3045072	ExpressionStatement		201:61:6608:6608	3045030	3	True				
ANR	3045073	IfStatement	if ( str > str0 )		3045030	2					
ANR	3045074	Condition	str > str0	202:12:6622:6631	3045030	0	True				
ANR	3045075	RelationalExpression	str > str0		3045030	0		>			
ANR	3045076	Identifier	str		3045030	0					
ANR	3045077	Identifier	str0		3045030	1					
ANR	3045078	CompoundStatement		10:24:267:267	3045030	1					
ANR	3045079	IfStatement	if ( * nmore )		3045030	0					
ANR	3045080	Condition	* nmore	203:16:6652:6657	3045030	0	True				
ANR	3045081	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045082	UnaryOperator	*		3045030	0					
ANR	3045083	Identifier	nmore		3045030	1					
ANR	3045084	CompoundStatement		11:24:293:293	3045030	1					
ANR	3045085	ExpressionStatement	"fwrite ( ""?"" , 1 , 1 , stdwr )"	205:16:6756:6780	3045030	0	True				
ANR	3045086	CallExpression	"fwrite ( ""?"" , 1 , 1 , stdwr )"		3045030	0					
ANR	3045087	Callee	fwrite		3045030	0					
ANR	3045088	Identifier	fwrite		3045030	0					
ANR	3045089	ArgumentList	"""?"""		3045030	1					
ANR	3045090	Argument	"""?"""		3045030	0					
ANR	3045091	PrimaryExpression	"""?"""		3045030	0					
ANR	3045092	Argument	1		3045030	1					
ANR	3045093	PrimaryExpression	1		3045030	0					
ANR	3045094	Argument	1		3045030	2					
ANR	3045095	PrimaryExpression	1		3045030	0					
ANR	3045096	Argument	stdwr		3045030	3					
ANR	3045097	Identifier	stdwr		3045030	0					
ANR	3045098	ExpressionStatement	"* nmore = 0 , * thiswchar = 0"	206:16:6798:6824	3045030	1	True				
ANR	3045099	Expression	"* nmore = 0 , * thiswchar = 0"		3045030	0					
ANR	3045100	AssignmentExpression	* nmore = 0		3045030	0		=			
ANR	3045101	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045102	UnaryOperator	*		3045030	0					
ANR	3045103	Identifier	nmore		3045030	1					
ANR	3045104	PrimaryExpression	0		3045030	1					
ANR	3045105	AssignmentExpression	* thiswchar = 0		3045030	1		=			
ANR	3045106	UnaryOperationExpression	* thiswchar		3045030	0					
ANR	3045107	UnaryOperator	*		3045030	0					
ANR	3045108	Identifier	thiswchar		3045030	1					
ANR	3045109	PrimaryExpression	0		3045030	1					
ANR	3045110	ExpressionStatement	"fwrite ( str0 , 1 , str - str0 , stdwr )"	208:12:6852:6886	3045030	1	True				
ANR	3045111	CallExpression	"fwrite ( str0 , 1 , str - str0 , stdwr )"		3045030	0					
ANR	3045112	Callee	fwrite		3045030	0					
ANR	3045113	Identifier	fwrite		3045030	0					
ANR	3045114	ArgumentList	str0		3045030	1					
ANR	3045115	Argument	str0		3045030	0					
ANR	3045116	Identifier	str0		3045030	0					
ANR	3045117	Argument	1		3045030	1					
ANR	3045118	PrimaryExpression	1		3045030	0					
ANR	3045119	Argument	str - str0		3045030	2					
ANR	3045120	AdditiveExpression	str - str0		3045030	0		-			
ANR	3045121	Identifier	str		3045030	0					
ANR	3045122	Identifier	str0		3045030	1					
ANR	3045123	Argument	stdwr		3045030	3					
ANR	3045124	Identifier	stdwr		3045030	0					
ANR	3045125	ForStatement	"for ( ; len ; str ++ , len -- )"		3045030	3					
ANR	3045126	Condition	len	211:15:6971:6973	3045030	0	True				
ANR	3045127	Identifier	len		3045030	0					
ANR	3045128	Expression	"str ++ , len --"	211:20:6976:6987	3045030	1	True				
ANR	3045129	PostIncDecOperationExpression	str ++		3045030	0					
ANR	3045130	Identifier	str		3045030	0					
ANR	3045131	IncDec	++		3045030	1					
ANR	3045132	PostIncDecOperationExpression	len --		3045030	1					
ANR	3045133	Identifier	len		3045030	0					
ANR	3045134	IncDec	--		3045030	1					
ANR	3045135	CompoundStatement		19:34:623:623	3045030	2					
ANR	3045136	SwitchStatement	switch ( * str & 0xC0 )		3045030	0					
ANR	3045137	Condition	* str & 0xC0	212:20:7012:7022	3045030	0	True				
ANR	3045138	BitAndExpression	* str & 0xC0		3045030	0		&			
ANR	3045139	UnaryOperationExpression	* str		3045030	0					
ANR	3045140	UnaryOperator	*		3045030	0					
ANR	3045141	Identifier	str		3045030	1					
ANR	3045142	PrimaryExpression	0xC0		3045030	1					
ANR	3045143	CompoundStatement		20:33:658:658	3045030	1					
ANR	3045144	Label	case 0x80 :	213:16:7043:7052	3045030	0	True				
ANR	3045145	IfStatement	if ( * nmore )		3045030	1					
ANR	3045146	Condition	* nmore	214:24:7100:7105	3045030	0	True				
ANR	3045147	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045148	UnaryOperator	*		3045030	0					
ANR	3045149	Identifier	nmore		3045030	1					
ANR	3045150	CompoundStatement		22:32:741:741	3045030	1					
ANR	3045151	ExpressionStatement	( * nmore ) --	215:24:7134:7144	3045030	0	True				
ANR	3045152	PostIncDecOperationExpression	( * nmore ) --		3045030	0					
ANR	3045153	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045154	UnaryOperator	*		3045030	0					
ANR	3045155	Identifier	nmore		3045030	1					
ANR	3045156	IncDec	--		3045030	1					
ANR	3045157	ExpressionStatement	* thiswchar |= ( WCHAR ) ( unsigned char ) ( * str & 0x3F ) << ( 6 * * nmore )	216:24:7170:7235	3045030	1	True				
ANR	3045158	AssignmentExpression	* thiswchar |= ( WCHAR ) ( unsigned char ) ( * str & 0x3F ) << ( 6 * * nmore )		3045030	0		|=			
ANR	3045159	UnaryOperationExpression	* thiswchar		3045030	0					
ANR	3045160	UnaryOperator	*		3045030	0					
ANR	3045161	Identifier	thiswchar		3045030	1					
ANR	3045162	ShiftExpression	( WCHAR ) ( unsigned char ) ( * str & 0x3F ) << ( 6 * * nmore )		3045030	1		<<			
ANR	3045163	CastExpression	( WCHAR ) ( unsigned char ) ( * str & 0x3F )		3045030	0					
ANR	3045164	CastTarget	WCHAR		3045030	0					
ANR	3045165	CastExpression	( unsigned char ) ( * str & 0x3F )		3045030	1					
ANR	3045166	CastTarget	unsigned char		3045030	0					
ANR	3045167	BitAndExpression	* str & 0x3F		3045030	1		&			
ANR	3045168	UnaryOperationExpression	* str		3045030	0					
ANR	3045169	UnaryOperator	*		3045030	0					
ANR	3045170	Identifier	str		3045030	1					
ANR	3045171	PrimaryExpression	0x3F		3045030	1					
ANR	3045172	MultiplicativeExpression	6 * * nmore		3045030	1		*			
ANR	3045173	PrimaryExpression	6		3045030	0					
ANR	3045174	UnaryOperationExpression	* nmore		3045030	1					
ANR	3045175	UnaryOperator	*		3045030	0					
ANR	3045176	Identifier	nmore		3045030	1					
ANR	3045177	ElseStatement	else		3045030	0					
ANR	3045178	CompoundStatement		26:25:921:921	3045030	0					
ANR	3045179	ExpressionStatement	* nmore = 0	220:24:7405:7415	3045030	0	True				
ANR	3045180	AssignmentExpression	* nmore = 0		3045030	0		=			
ANR	3045181	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045182	UnaryOperator	*		3045030	0					
ANR	3045183	Identifier	nmore		3045030	1					
ANR	3045184	PrimaryExpression	0		3045030	1					
ANR	3045185	Statement	*	221:24:7441:7441	3045030	1	True				
ANR	3045186	Statement	thiswchar	221:25:7442:7450	3045030	2	True				
ANR	3045187	Statement	=	221:35:7452:7452	3045030	3	True				
ANR	3045188	Statement	L	221:37:7454:7454	3045030	4	True				
ANR	3045189	ExpressionStatement	'?'	221:38:7455:7458	3045030	5	True				
ANR	3045190	PrimaryExpression	'?'		3045030	0					
ANR	3045191	BreakStatement	break ;	223:20:7502:7507	3045030	2	True				
ANR	3045192	Label	case 0xC0 :	224:16:7525:7534	3045030	3	True				
ANR	3045193	IfStatement	if ( * nmore )		3045030	4					
ANR	3045194	Condition	* nmore	225:24:7581:7586	3045030	0	True				
ANR	3045195	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045196	UnaryOperator	*		3045030	0					
ANR	3045197	Identifier	nmore		3045030	1					
ANR	3045198	ExpressionStatement	"fwrite ( ""?"" , 1 , 1 , stdwr )"	227:24:7699:7723	3045030	1	True				
ANR	3045199	CallExpression	"fwrite ( ""?"" , 1 , 1 , stdwr )"		3045030	0					
ANR	3045200	Callee	fwrite		3045030	0					
ANR	3045201	Identifier	fwrite		3045030	0					
ANR	3045202	ArgumentList	"""?"""		3045030	1					
ANR	3045203	Argument	"""?"""		3045030	0					
ANR	3045204	PrimaryExpression	"""?"""		3045030	0					
ANR	3045205	Argument	1		3045030	1					
ANR	3045206	PrimaryExpression	1		3045030	0					
ANR	3045207	Argument	1		3045030	2					
ANR	3045208	PrimaryExpression	1		3045030	0					
ANR	3045209	Argument	stdwr		3045030	3					
ANR	3045210	Identifier	stdwr		3045030	0					
ANR	3045211	IfStatement	if ( ! ( * str & 0x20 ) )		3045030	5					
ANR	3045212	Condition	! ( * str & 0x20 )	228:24:7749:7762	3045030	0	True				
ANR	3045213	UnaryOperationExpression	! ( * str & 0x20 )		3045030	0					
ANR	3045214	UnaryOperator	!		3045030	0					
ANR	3045215	BitAndExpression	* str & 0x20		3045030	1		&			
ANR	3045216	UnaryOperationExpression	* str		3045030	0					
ANR	3045217	UnaryOperator	*		3045030	0					
ANR	3045218	Identifier	str		3045030	1					
ANR	3045219	PrimaryExpression	0x20		3045030	1					
ANR	3045220	ExpressionStatement	* nmore = 1	229:24:7789:7799	3045030	1	True				
ANR	3045221	AssignmentExpression	* nmore = 1		3045030	0		=			
ANR	3045222	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045223	UnaryOperator	*		3045030	0					
ANR	3045224	Identifier	nmore		3045030	1					
ANR	3045225	PrimaryExpression	1		3045030	1					
ANR	3045226	ElseStatement	else		3045030	0					
ANR	3045227	IfStatement	if ( ! ( * str & 0x10 ) )		3045030	0					
ANR	3045228	Condition	! ( * str & 0x10 )	230:29:7856:7869	3045030	0	True				
ANR	3045229	UnaryOperationExpression	! ( * str & 0x10 )		3045030	0					
ANR	3045230	UnaryOperator	!		3045030	0					
ANR	3045231	BitAndExpression	* str & 0x10		3045030	1		&			
ANR	3045232	UnaryOperationExpression	* str		3045030	0					
ANR	3045233	UnaryOperator	*		3045030	0					
ANR	3045234	Identifier	str		3045030	1					
ANR	3045235	PrimaryExpression	0x10		3045030	1					
ANR	3045236	ExpressionStatement	* nmore = 2	231:24:7896:7906	3045030	1	True				
ANR	3045237	AssignmentExpression	* nmore = 2		3045030	0		=			
ANR	3045238	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045239	UnaryOperator	*		3045030	0					
ANR	3045240	Identifier	nmore		3045030	1					
ANR	3045241	PrimaryExpression	2		3045030	1					
ANR	3045242	ElseStatement	else		3045030	0					
ANR	3045243	IfStatement	if ( ! ( * str & 0x08 ) )		3045030	0					
ANR	3045244	Condition	! ( * str & 0x08 )	232:29:7963:7976	3045030	0	True				
ANR	3045245	UnaryOperationExpression	! ( * str & 0x08 )		3045030	0					
ANR	3045246	UnaryOperator	!		3045030	0					
ANR	3045247	BitAndExpression	* str & 0x08		3045030	1		&			
ANR	3045248	UnaryOperationExpression	* str		3045030	0					
ANR	3045249	UnaryOperator	*		3045030	0					
ANR	3045250	Identifier	str		3045030	1					
ANR	3045251	PrimaryExpression	0x08		3045030	1					
ANR	3045252	ExpressionStatement	* nmore = 3	233:24:8003:8013	3045030	1	True				
ANR	3045253	AssignmentExpression	* nmore = 3		3045030	0		=			
ANR	3045254	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045255	UnaryOperator	*		3045030	0					
ANR	3045256	Identifier	nmore		3045030	1					
ANR	3045257	PrimaryExpression	3		3045030	1					
ANR	3045258	ElseStatement	else		3045030	0					
ANR	3045259	ExpressionStatement	* nmore = 0	235:24:8090:8100	3045030	0	True				
ANR	3045260	AssignmentExpression	* nmore = 0		3045030	0		=			
ANR	3045261	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045262	UnaryOperator	*		3045030	0					
ANR	3045263	Identifier	nmore		3045030	1					
ANR	3045264	PrimaryExpression	0		3045030	1					
ANR	3045265	IfStatement	if ( * nmore )		3045030	6					
ANR	3045266	Condition	* nmore	236:24:8174:8179	3045030	0	True				
ANR	3045267	UnaryOperationExpression	* nmore		3045030	0					
ANR	3045268	UnaryOperator	*		3045030	0					
ANR	3045269	Identifier	nmore		3045030	1					
ANR	3045270	ExpressionStatement	* thiswchar = ( WCHAR ) ( unsigned char ) ( * str & ( 0x3F >> * nmore ) ) << ( 6 * * nmore )	237:24:8206:8282	3045030	1	True				
ANR	3045271	AssignmentExpression	* thiswchar = ( WCHAR ) ( unsigned char ) ( * str & ( 0x3F >> * nmore ) ) << ( 6 * * nmore )		3045030	0		=			
ANR	3045272	UnaryOperationExpression	* thiswchar		3045030	0					
ANR	3045273	UnaryOperator	*		3045030	0					
ANR	3045274	Identifier	thiswchar		3045030	1					
ANR	3045275	ShiftExpression	( WCHAR ) ( unsigned char ) ( * str & ( 0x3F >> * nmore ) ) << ( 6 * * nmore )		3045030	1		<<			
ANR	3045276	CastExpression	( WCHAR ) ( unsigned char ) ( * str & ( 0x3F >> * nmore ) )		3045030	0					
ANR	3045277	CastTarget	WCHAR		3045030	0					
ANR	3045278	CastExpression	( unsigned char ) ( * str & ( 0x3F >> * nmore ) )		3045030	1					
ANR	3045279	CastTarget	unsigned char		3045030	0					
ANR	3045280	BitAndExpression	* str & ( 0x3F >> * nmore )		3045030	1		&			
ANR	3045281	UnaryOperationExpression	* str		3045030	0					
ANR	3045282	UnaryOperator	*		3045030	0					
ANR	3045283	Identifier	str		3045030	1					
ANR	3045284	ShiftExpression	0x3F >> * nmore		3045030	1		>>			
ANR	3045285	PrimaryExpression	0x3F		3045030	0					
ANR	3045286	UnaryOperationExpression	* nmore		3045030	1					
ANR	3045287	UnaryOperator	*		3045030	0					
ANR	3045288	Identifier	nmore		3045030	1					
ANR	3045289	MultiplicativeExpression	6 * * nmore		3045030	1		*			
ANR	3045290	PrimaryExpression	6		3045030	0					
ANR	3045291	UnaryOperationExpression	* nmore		3045030	1					
ANR	3045292	UnaryOperator	*		3045030	0					
ANR	3045293	Identifier	nmore		3045030	1					
ANR	3045294	ElseStatement	else		3045030	0					
ANR	3045295	CompoundStatement		46:25:1942:1942	3045030	0					
ANR	3045296	Statement	*	240:24:8402:8402	3045030	0	True				
ANR	3045297	Statement	thiswchar	240:25:8403:8411	3045030	1	True				
ANR	3045298	Statement	=	240:35:8413:8413	3045030	2	True				
ANR	3045299	Statement	L	240:37:8415:8415	3045030	3	True				
ANR	3045300	ExpressionStatement	'?'	240:38:8416:8419	3045030	4	True				
ANR	3045301	PrimaryExpression	'?'		3045030	0					
ANR	3045302	BreakStatement	break ;	242:20:8463:8468	3045030	7	True				
ANR	3045303	Label	default :	243:16:8486:8493	3045030	8	True				
ANR	3045304	Identifier	default		3045030	0					
ANR	3045305	BreakStatement	break ;	244:20:8567:8572	3045030	9	True				
ANR	3045306	IfStatement	if ( ! * nmore )		3045030	1					
ANR	3045307	Condition	! * nmore	247:16:8656:8662	3045030	0	True				
ANR	3045308	UnaryOperationExpression	! * nmore		3045030	0					
ANR	3045309	UnaryOperator	!		3045030	0					
ANR	3045310	UnaryOperationExpression	* nmore		3045030	1					
ANR	3045311	UnaryOperator	*		3045030	0					
ANR	3045312	Identifier	nmore		3045030	1					
ANR	3045313	CompoundStatement		57:16:2347:2358	3045030	1					
ANR	3045314	IdentifierDeclStatement	char mbstr [ 8 ] ;	248:16:8683:8696	3045030	0	True				
ANR	3045315	IdentifierDecl	mbstr [ 8 ]		3045030	0					
ANR	3045316	IdentifierDeclType	char [ 8 ]		3045030	0					
ANR	3045317	Identifier	mbstr		3045030	1					
ANR	3045318	PrimaryExpression	8		3045030	2					
ANR	3045319	IdentifierDeclStatement	int n_mbstr ;	249:16:8714:8725	3045030	1	True				
ANR	3045320	IdentifierDecl	n_mbstr		3045030	0					
ANR	3045321	IdentifierDeclType	int		3045030	0					
ANR	3045322	Identifier	n_mbstr		3045030	1					
ANR	3045323	IfStatement	if ( ! consolecp )		3045030	2					
ANR	3045324	Condition	! consolecp	251:20:8748:8757	3045030	0	True				
ANR	3045325	UnaryOperationExpression	! consolecp		3045030	0					
ANR	3045326	UnaryOperator	!		3045030	0					
ANR	3045327	Identifier	consolecp		3045030	1					
ANR	3045328	ExpressionStatement	consolecp = GetConsoleOutputCP ( )	252:20:8780:8812	3045030	1	True				
ANR	3045329	AssignmentExpression	consolecp = GetConsoleOutputCP ( )		3045030	0		=			
ANR	3045330	Identifier	consolecp		3045030	0					
ANR	3045331	CallExpression	GetConsoleOutputCP ( )		3045030	1					
ANR	3045332	Callee	GetConsoleOutputCP		3045030	0					
ANR	3045333	Identifier	GetConsoleOutputCP		3045030	0					
ANR	3045334	ArgumentList			3045030	1					
ANR	3045335	ExpressionStatement	"n_mbstr = WideCharToMultiByte ( consolecp , 0 , thiswchar , 1 , mbstr , sizeof mbstr , NULL , NULL )"	253:16:8830:8920	3045030	3	True				
ANR	3045336	AssignmentExpression	"n_mbstr = WideCharToMultiByte ( consolecp , 0 , thiswchar , 1 , mbstr , sizeof mbstr , NULL , NULL )"		3045030	0		=			
ANR	3045337	Identifier	n_mbstr		3045030	0					
ANR	3045338	CallExpression	"WideCharToMultiByte ( consolecp , 0 , thiswchar , 1 , mbstr , sizeof mbstr , NULL , NULL )"		3045030	1					
ANR	3045339	Callee	WideCharToMultiByte		3045030	0					
ANR	3045340	Identifier	WideCharToMultiByte		3045030	0					
ANR	3045341	ArgumentList	consolecp		3045030	1					
ANR	3045342	Argument	consolecp		3045030	0					
ANR	3045343	Identifier	consolecp		3045030	0					
ANR	3045344	Argument	0		3045030	1					
ANR	3045345	PrimaryExpression	0		3045030	0					
ANR	3045346	Argument	thiswchar		3045030	2					
ANR	3045347	Identifier	thiswchar		3045030	0					
ANR	3045348	Argument	1		3045030	3					
ANR	3045349	PrimaryExpression	1		3045030	0					
ANR	3045350	Argument	mbstr		3045030	4					
ANR	3045351	Identifier	mbstr		3045030	0					
ANR	3045352	Argument	sizeof mbstr		3045030	5					
ANR	3045353	SizeofExpression	sizeof mbstr		3045030	0					
ANR	3045354	Sizeof	sizeof		3045030	0					
ANR	3045355	Identifier	mbstr		3045030	1					
ANR	3045356	Argument	NULL		3045030	6					
ANR	3045357	Identifier	NULL		3045030	0					
ANR	3045358	Argument	NULL		3045030	7					
ANR	3045359	Identifier	NULL		3045030	0					
ANR	3045360	IfStatement	if ( n_mbstr <= 0 )		3045030	4					
ANR	3045361	Condition	n_mbstr <= 0	254:20:8942:8953	3045030	0	True				
ANR	3045362	RelationalExpression	n_mbstr <= 0		3045030	0		<=			
ANR	3045363	Identifier	n_mbstr		3045030	0					
ANR	3045364	PrimaryExpression	0		3045030	1					
ANR	3045365	ExpressionStatement	"fwrite ( ""?"" , 1 , 1 , stdwr )"	255:20:8976:9000	3045030	1	True				
ANR	3045366	CallExpression	"fwrite ( ""?"" , 1 , 1 , stdwr )"		3045030	0					
ANR	3045367	Callee	fwrite		3045030	0					
ANR	3045368	Identifier	fwrite		3045030	0					
ANR	3045369	ArgumentList	"""?"""		3045030	1					
ANR	3045370	Argument	"""?"""		3045030	0					
ANR	3045371	PrimaryExpression	"""?"""		3045030	0					
ANR	3045372	Argument	1		3045030	1					
ANR	3045373	PrimaryExpression	1		3045030	0					
ANR	3045374	Argument	1		3045030	2					
ANR	3045375	PrimaryExpression	1		3045030	0					
ANR	3045376	Argument	stdwr		3045030	3					
ANR	3045377	Identifier	stdwr		3045030	0					
ANR	3045378	ElseStatement	else		3045030	0					
ANR	3045379	ExpressionStatement	"fwrite ( mbstr , 1 , n_mbstr , stdwr )"	257:20:9043:9075	3045030	0	True				
ANR	3045380	CallExpression	"fwrite ( mbstr , 1 , n_mbstr , stdwr )"		3045030	0					
ANR	3045381	Callee	fwrite		3045030	0					
ANR	3045382	Identifier	fwrite		3045030	0					
ANR	3045383	ArgumentList	mbstr		3045030	1					
ANR	3045384	Argument	mbstr		3045030	0					
ANR	3045385	Identifier	mbstr		3045030	0					
ANR	3045386	Argument	1		3045030	1					
ANR	3045387	PrimaryExpression	1		3045030	0					
ANR	3045388	Argument	n_mbstr		3045030	2					
ANR	3045389	Identifier	n_mbstr		3045030	0					
ANR	3045390	Argument	stdwr		3045030	3					
ANR	3045391	Identifier	stdwr		3045030	0					
ANR	3045392	ExpressionStatement	* thiswchar = 0	258:16:9093:9107	3045030	5	True				
ANR	3045393	AssignmentExpression	* thiswchar = 0		3045030	0		=			
ANR	3045394	UnaryOperationExpression	* thiswchar		3045030	0					
ANR	3045395	UnaryOperator	*		3045030	0					
ANR	3045396	Identifier	thiswchar		3045030	1					
ANR	3045397	PrimaryExpression	0		3045030	1					
ANR	3045398	ExpressionStatement	"str ++ , len --"	259:16:9139:9151	3045030	6	True				
ANR	3045399	Expression	"str ++ , len --"		3045030	0					
ANR	3045400	PostIncDecOperationExpression	str ++		3045030	0					
ANR	3045401	Identifier	str		3045030	0					
ANR	3045402	IncDec	++		3045030	1					
ANR	3045403	PostIncDecOperationExpression	len --		3045030	1					
ANR	3045404	Identifier	len		3045030	0					
ANR	3045405	IncDec	--		3045030	1					
ANR	3045406	BreakStatement	break ;	260:16:9169:9174	3045030	7	True				
ANR	3045407	ExpressionStatement	fflush ( stdwr )	264:4:9210:9223	3045030	2	True				
ANR	3045408	CallExpression	fflush ( stdwr )		3045030	0					
ANR	3045409	Callee	fflush		3045030	0					
ANR	3045410	Identifier	fflush		3045030	0					
ANR	3045411	ArgumentList	stdwr		3045030	1					
ANR	3045412	Argument	stdwr		3045030	0					
ANR	3045413	Identifier	stdwr		3045030	0					
ANR	3045414	ReturnType	static void		3045030	1					
ANR	3045415	Identifier	gsdll_utf8write		3045030	2					
ANR	3045416	ParameterList	"FILE * stdwr , const char * str , int len , WCHAR * thiswchar , int * nmore"		3045030	3					
ANR	3045417	Parameter	FILE * stdwr	192:16:6297:6307	3045030	0	True				
ANR	3045418	ParameterType	FILE *		3045030	0					
ANR	3045419	Identifier	stdwr		3045030	1					
ANR	3045420	Parameter	const char * str	192:29:6310:6324	3045030	1	True				
ANR	3045421	ParameterType	const char *		3045030	0					
ANR	3045422	Identifier	str		3045030	1					
ANR	3045423	Parameter	int len	192:46:6327:6333	3045030	2	True				
ANR	3045424	ParameterType	int		3045030	0					
ANR	3045425	Identifier	len		3045030	1					
ANR	3045426	Parameter	WCHAR * thiswchar	192:55:6336:6351	3045030	3	True				
ANR	3045427	ParameterType	WCHAR *		3045030	0					
ANR	3045428	Identifier	thiswchar		3045030	1					
ANR	3045429	Parameter	int * nmore	192:73:6354:6363	3045030	4	True				
ANR	3045430	ParameterType	int *		3045030	0					
ANR	3045431	Identifier	nmore		3045030	1					
ANR	3045432	CFGEntryNode	ENTRY		3045030		True				
ANR	3045433	CFGExitNode	EXIT		3045030		True				
ANR	3045434	Symbol	nmore		3045030						
ANR	3045435	Symbol	NULL		3045030						
ANR	3045436	Symbol	str0		3045030						
ANR	3045437	Symbol	thiswchar		3045030						
ANR	3045438	Symbol	* thiswchar		3045030						
ANR	3045439	Symbol	* nmore		3045030						
ANR	3045440	Symbol	str		3045030						
ANR	3045441	Symbol	mbstr		3045030						
ANR	3045442	Symbol	n_mbstr		3045030						
ANR	3045443	Symbol	stdwr		3045030						
ANR	3045444	Symbol	len		3045030						
ANR	3045445	Symbol	WideCharToMultiByte		3045030						
ANR	3045446	Symbol	consolecp		3045030						
ANR	3045447	Symbol	* str		3045030						
ANR	3045448	Symbol	GetConsoleOutputCP		3045030						
ANR	3045449	Function	gsdll_stdout_utf8	267:0:9228:9642							
ANR	3045450	FunctionDef	"gsdll_stdout_utf8 (void * instance , const char * utf8str , int bytelen)"		3045449	0					
ANR	3045451	CompoundStatement		269:0:9317:9642	3045449	0					
ANR	3045452	Statement	static	270:4:9323:9328	3045449	0	True				
ANR	3045453	IdentifierDeclStatement	WCHAR thiswchar = 0 ;	270:11:9330:9349	3045449	1	True				
ANR	3045454	IdentifierDecl	thiswchar = 0		3045449	0					
ANR	3045455	IdentifierDeclType	WCHAR		3045449	0					
ANR	3045456	Identifier	thiswchar		3045449	1					
ANR	3045457	AssignmentExpression	thiswchar = 0		3045449	2		=			
ANR	3045458	Identifier	thiswchar		3045449	0					
ANR	3045459	PrimaryExpression	0		3045449	1					
ANR	3045460	Statement	static	271:4:9411:9416	3045449	2	True				
ANR	3045461	IdentifierDeclStatement	int nmore = 0 ;	271:11:9418:9431	3045449	3	True				
ANR	3045462	IdentifierDecl	nmore = 0		3045449	0					
ANR	3045463	IdentifierDeclType	int		3045449	0					
ANR	3045464	Identifier	nmore		3045449	1					
ANR	3045465	AssignmentExpression	nmore = 0		3045449	2		=			
ANR	3045466	Identifier	nmore		3045449	0					
ANR	3045467	PrimaryExpression	0		3045449	1					
ANR	3045468	ExpressionStatement	"windows_debug_out ( utf8str , bytelen )"	274:4:9510:9545	3045449	4	True				
ANR	3045469	CallExpression	"windows_debug_out ( utf8str , bytelen )"		3045449	0					
ANR	3045470	Callee	windows_debug_out		3045449	0					
ANR	3045471	Identifier	windows_debug_out		3045449	0					
ANR	3045472	ArgumentList	utf8str		3045449	1					
ANR	3045473	Argument	utf8str		3045449	0					
ANR	3045474	Identifier	utf8str		3045449	0					
ANR	3045475	Argument	bytelen		3045449	1					
ANR	3045476	Identifier	bytelen		3045449	0					
ANR	3045477	ExpressionStatement	"gsdll_utf8write ( stdout , utf8str , bytelen , & thiswchar , & nmore )"	277:4:9559:9620	3045449	5	True				
ANR	3045478	CallExpression	"gsdll_utf8write ( stdout , utf8str , bytelen , & thiswchar , & nmore )"		3045449	0					
ANR	3045479	Callee	gsdll_utf8write		3045449	0					
ANR	3045480	Identifier	gsdll_utf8write		3045449	0					
ANR	3045481	ArgumentList	stdout		3045449	1					
ANR	3045482	Argument	stdout		3045449	0					
ANR	3045483	Identifier	stdout		3045449	0					
ANR	3045484	Argument	utf8str		3045449	1					
ANR	3045485	Identifier	utf8str		3045449	0					
ANR	3045486	Argument	bytelen		3045449	2					
ANR	3045487	Identifier	bytelen		3045449	0					
ANR	3045488	Argument	& thiswchar		3045449	3					
ANR	3045489	UnaryOperationExpression	& thiswchar		3045449	0					
ANR	3045490	UnaryOperator	&		3045449	0					
ANR	3045491	Identifier	thiswchar		3045449	1					
ANR	3045492	Argument	& nmore		3045449	4					
ANR	3045493	UnaryOperationExpression	& nmore		3045449	0					
ANR	3045494	UnaryOperator	&		3045449	0					
ANR	3045495	Identifier	nmore		3045449	1					
ANR	3045496	ReturnStatement	return bytelen ;	278:4:9626:9640	3045449	6	True				
ANR	3045497	Identifier	bytelen		3045449	0					
ANR	3045498	ReturnType	static int GSDLLCALL		3045449	1					
ANR	3045499	Identifier	gsdll_stdout_utf8		3045449	2					
ANR	3045500	ParameterList	"void * instance , const char * utf8str , int bytelen"		3045449	3					
ANR	3045501	Parameter	void * instance	268:18:9267:9280	3045449	0	True				
ANR	3045502	ParameterType	void *		3045449	0					
ANR	3045503	Identifier	instance		3045449	1					
ANR	3045504	Parameter	const char * utf8str	268:34:9283:9301	3045449	1	True				
ANR	3045505	ParameterType	const char *		3045449	0					
ANR	3045506	Identifier	utf8str		3045449	1					
ANR	3045507	Parameter	int bytelen	268:55:9304:9314	3045449	2	True				
ANR	3045508	ParameterType	int		3045449	0					
ANR	3045509	Identifier	bytelen		3045449	1					
ANR	3045510	CFGEntryNode	ENTRY		3045449		True				
ANR	3045511	CFGExitNode	EXIT		3045449		True				
ANR	3045512	Symbol	& nmore		3045449						
ANR	3045513	Symbol	& thiswchar		3045449						
ANR	3045514	Symbol	bytelen		3045449						
ANR	3045515	Symbol	nmore		3045449						
ANR	3045516	Symbol	instance		3045449						
ANR	3045517	Symbol	utf8str		3045449						
ANR	3045518	Symbol	stdout		3045449						
ANR	3045519	Symbol	thiswchar		3045449						
ANR	3045520	Function	gsdll_stderr_utf8	281:0:9645:10059							
ANR	3045521	FunctionDef	"gsdll_stderr_utf8 (void * instance , const char * utf8str , int bytelen)"		3045520	0					
ANR	3045522	CompoundStatement		283:0:9734:10059	3045520	0					
ANR	3045523	Statement	static	284:4:9740:9745	3045520	0	True				
ANR	3045524	IdentifierDeclStatement	WCHAR thiswchar = 0 ;	284:11:9747:9766	3045520	1	True				
ANR	3045525	IdentifierDecl	thiswchar = 0		3045520	0					
ANR	3045526	IdentifierDeclType	WCHAR		3045520	0					
ANR	3045527	Identifier	thiswchar		3045520	1					
ANR	3045528	AssignmentExpression	thiswchar = 0		3045520	2		=			
ANR	3045529	Identifier	thiswchar		3045520	0					
ANR	3045530	PrimaryExpression	0		3045520	1					
ANR	3045531	Statement	static	285:4:9828:9833	3045520	2	True				
ANR	3045532	IdentifierDeclStatement	int nmore = 0 ;	285:11:9835:9848	3045520	3	True				
ANR	3045533	IdentifierDecl	nmore = 0		3045520	0					
ANR	3045534	IdentifierDeclType	int		3045520	0					
ANR	3045535	Identifier	nmore		3045520	1					
ANR	3045536	AssignmentExpression	nmore = 0		3045520	2		=			
ANR	3045537	Identifier	nmore		3045520	0					
ANR	3045538	PrimaryExpression	0		3045520	1					
ANR	3045539	ExpressionStatement	"windows_debug_out ( utf8str , bytelen )"	288:4:9927:9962	3045520	4	True				
ANR	3045540	CallExpression	"windows_debug_out ( utf8str , bytelen )"		3045520	0					
ANR	3045541	Callee	windows_debug_out		3045520	0					
ANR	3045542	Identifier	windows_debug_out		3045520	0					
ANR	3045543	ArgumentList	utf8str		3045520	1					
ANR	3045544	Argument	utf8str		3045520	0					
ANR	3045545	Identifier	utf8str		3045520	0					
ANR	3045546	Argument	bytelen		3045520	1					
ANR	3045547	Identifier	bytelen		3045520	0					
ANR	3045548	ExpressionStatement	"gsdll_utf8write ( stderr , utf8str , bytelen , & thiswchar , & nmore )"	291:4:9976:10037	3045520	5	True				
ANR	3045549	CallExpression	"gsdll_utf8write ( stderr , utf8str , bytelen , & thiswchar , & nmore )"		3045520	0					
ANR	3045550	Callee	gsdll_utf8write		3045520	0					
ANR	3045551	Identifier	gsdll_utf8write		3045520	0					
ANR	3045552	ArgumentList	stderr		3045520	1					
ANR	3045553	Argument	stderr		3045520	0					
ANR	3045554	Identifier	stderr		3045520	0					
ANR	3045555	Argument	utf8str		3045520	1					
ANR	3045556	Identifier	utf8str		3045520	0					
ANR	3045557	Argument	bytelen		3045520	2					
ANR	3045558	Identifier	bytelen		3045520	0					
ANR	3045559	Argument	& thiswchar		3045520	3					
ANR	3045560	UnaryOperationExpression	& thiswchar		3045520	0					
ANR	3045561	UnaryOperator	&		3045520	0					
ANR	3045562	Identifier	thiswchar		3045520	1					
ANR	3045563	Argument	& nmore		3045520	4					
ANR	3045564	UnaryOperationExpression	& nmore		3045520	0					
ANR	3045565	UnaryOperator	&		3045520	0					
ANR	3045566	Identifier	nmore		3045520	1					
ANR	3045567	ReturnStatement	return bytelen ;	292:4:10043:10057	3045520	6	True				
ANR	3045568	Identifier	bytelen		3045520	0					
ANR	3045569	ReturnType	static int GSDLLCALL		3045520	1					
ANR	3045570	Identifier	gsdll_stderr_utf8		3045520	2					
ANR	3045571	ParameterList	"void * instance , const char * utf8str , int bytelen"		3045520	3					
ANR	3045572	Parameter	void * instance	282:18:9684:9697	3045520	0	True				
ANR	3045573	ParameterType	void *		3045520	0					
ANR	3045574	Identifier	instance		3045520	1					
ANR	3045575	Parameter	const char * utf8str	282:34:9700:9718	3045520	1	True				
ANR	3045576	ParameterType	const char *		3045520	0					
ANR	3045577	Identifier	utf8str		3045520	1					
ANR	3045578	Parameter	int bytelen	282:55:9721:9731	3045520	2	True				
ANR	3045579	ParameterType	int		3045520	0					
ANR	3045580	Identifier	bytelen		3045520	1					
ANR	3045581	CFGEntryNode	ENTRY		3045520		True				
ANR	3045582	CFGExitNode	EXIT		3045520		True				
ANR	3045583	Symbol	& nmore		3045520						
ANR	3045584	Symbol	& thiswchar		3045520						
ANR	3045585	Symbol	bytelen		3045520						
ANR	3045586	Symbol	nmore		3045520						
ANR	3045587	Symbol	instance		3045520						
ANR	3045588	Symbol	utf8str		3045520						
ANR	3045589	Symbol	thiswchar		3045520						
ANR	3045590	Symbol	stderr		3045520						
ANR	3045591	Function	winthread	320:0:10788:11913							
ANR	3045592	FunctionDef	winthread (void * arg)		3045591	0					
ANR	3045593	CompoundStatement		321:0:10821:11913	3045591	0					
ANR	3045594	IdentifierDeclStatement	MSG msg ;	322:4:10827:10834	3045591	0	True				
ANR	3045595	IdentifierDecl	msg		3045591	0					
ANR	3045596	IdentifierDeclType	MSG		3045591	0					
ANR	3045597	Identifier	msg		3045591	1					
ANR	3045598	ExpressionStatement	thread_id = GetCurrentThreadId ( )	323:4:10840:10872	3045591	1	True				
ANR	3045599	AssignmentExpression	thread_id = GetCurrentThreadId ( )		3045591	0		=			
ANR	3045600	Identifier	thread_id		3045591	0					
ANR	3045601	CallExpression	GetCurrentThreadId ( )		3045591	1					
ANR	3045602	Callee	GetCurrentThreadId		3045591	0					
ANR	3045603	Identifier	GetCurrentThreadId		3045591	0					
ANR	3045604	ArgumentList			3045591	1					
ANR	3045605	ExpressionStatement	hthread = GetCurrentThread ( )	324:4:10878:10906	3045591	2	True				
ANR	3045606	AssignmentExpression	hthread = GetCurrentThread ( )		3045591	0		=			
ANR	3045607	Identifier	hthread		3045591	0					
ANR	3045608	CallExpression	GetCurrentThread ( )		3045591	1					
ANR	3045609	Callee	GetCurrentThread		3045591	0					
ANR	3045610	Identifier	GetCurrentThread		3045591	0					
ANR	3045611	ArgumentList			3045591	1					
ANR	3045612	WhileStatement	"while ( ! quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 ) )"		3045591	3					
ANR	3045613	Condition	"! quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"	326:11:10920:10965	3045591	0	True				
ANR	3045614	AndExpression	"! quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"		3045591	0		&&			
ANR	3045615	UnaryOperationExpression	! quitnow		3045591	0					
ANR	3045616	UnaryOperator	!		3045591	0					
ANR	3045617	Identifier	quitnow		3045591	1					
ANR	3045618	CallExpression	"GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"		3045591	1					
ANR	3045619	Callee	GetMessage		3045591	0					
ANR	3045620	Identifier	GetMessage		3045591	0					
ANR	3045621	ArgumentList	& msg		3045591	1					
ANR	3045622	Argument	& msg		3045591	0					
ANR	3045623	UnaryOperationExpression	& msg		3045591	0					
ANR	3045624	UnaryOperator	&		3045591	0					
ANR	3045625	Identifier	msg		3045591	1					
ANR	3045626	Argument	( HWND ) NULL		3045591	1					
ANR	3045627	CastExpression	( HWND ) NULL		3045591	0					
ANR	3045628	CastTarget	HWND		3045591	0					
ANR	3045629	Identifier	NULL		3045591	1					
ANR	3045630	Argument	0		3045591	2					
ANR	3045631	PrimaryExpression	0		3045591	0					
ANR	3045632	Argument	0		3045591	3					
ANR	3045633	PrimaryExpression	0		3045591	0					
ANR	3045634	CompoundStatement		6:59:146:146	3045591	1					
ANR	3045635	SwitchStatement	switch ( msg . message )		3045591	0					
ANR	3045636	Condition	msg . message	327:16:10986:10996	3045591	0	True				
ANR	3045637	MemberAccess	msg . message		3045591	0					
ANR	3045638	Identifier	msg		3045591	0					
ANR	3045639	Identifier	message		3045591	1					
ANR	3045640	CompoundStatement		7:29:177:177	3045591	1					
ANR	3045641	Label	case DISPLAY_OPEN :	328:12:11013:11030	3045591	0	True				
ANR	3045642	Identifier	DISPLAY_OPEN		3045591	0					
ANR	3045643	ExpressionStatement	image_open ( ( IMAGE * ) msg . lParam )	329:16:11048:11079	3045591	1	True				
ANR	3045644	CallExpression	image_open ( ( IMAGE * ) msg . lParam )		3045591	0					
ANR	3045645	Callee	image_open		3045591	0					
ANR	3045646	Identifier	image_open		3045591	0					
ANR	3045647	ArgumentList	( IMAGE * ) msg . lParam		3045591	1					
ANR	3045648	Argument	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045649	CastExpression	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045650	CastTarget	IMAGE *		3045591	0					
ANR	3045651	MemberAccess	msg . lParam		3045591	1					
ANR	3045652	Identifier	msg		3045591	0					
ANR	3045653	Identifier	lParam		3045591	1					
ANR	3045654	BreakStatement	break ;	330:16:11097:11102	3045591	2	True				
ANR	3045655	Label	case DISPLAY_CLOSE :	331:12:11116:11134	3045591	3	True				
ANR	3045656	Identifier	DISPLAY_CLOSE		3045591	0					
ANR	3045657	CompoundStatement		14:20:406:433	3045591	4					
ANR	3045658	IdentifierDeclStatement	IMAGE * img = ( IMAGE * ) msg . lParam ;	333:20:11174:11206	3045591	0	True				
ANR	3045659	IdentifierDecl	* img = ( IMAGE * ) msg . lParam		3045591	0					
ANR	3045660	IdentifierDeclType	IMAGE *		3045591	0					
ANR	3045661	Identifier	img		3045591	1					
ANR	3045662	AssignmentExpression	* img = ( IMAGE * ) msg . lParam		3045591	2		=			
ANR	3045663	Identifier	img		3045591	0					
ANR	3045664	CastExpression	( IMAGE * ) msg . lParam		3045591	1					
ANR	3045665	CastTarget	IMAGE *		3045591	0					
ANR	3045666	MemberAccess	msg . lParam		3045591	1					
ANR	3045667	Identifier	msg		3045591	0					
ANR	3045668	Identifier	lParam		3045591	1					
ANR	3045669	IdentifierDeclStatement	HANDLE hmutex = img -> hmutex ;	334:20:11228:11255	3045591	1	True				
ANR	3045670	IdentifierDecl	hmutex = img -> hmutex		3045591	0					
ANR	3045671	IdentifierDeclType	HANDLE		3045591	0					
ANR	3045672	Identifier	hmutex		3045591	1					
ANR	3045673	AssignmentExpression	hmutex = img -> hmutex		3045591	2		=			
ANR	3045674	Identifier	hmutex		3045591	0					
ANR	3045675	PtrMemberAccess	img -> hmutex		3045591	1					
ANR	3045676	Identifier	img		3045591	0					
ANR	3045677	Identifier	hmutex		3045591	1					
ANR	3045678	ExpressionStatement	image_close ( img )	335:20:11277:11293	3045591	2	True				
ANR	3045679	CallExpression	image_close ( img )		3045591	0					
ANR	3045680	Callee	image_close		3045591	0					
ANR	3045681	Identifier	image_close		3045591	0					
ANR	3045682	ArgumentList	img		3045591	1					
ANR	3045683	Argument	img		3045591	0					
ANR	3045684	Identifier	img		3045591	0					
ANR	3045685	ExpressionStatement	CloseHandle ( hmutex )	336:20:11315:11334	3045591	3	True				
ANR	3045686	CallExpression	CloseHandle ( hmutex )		3045591	0					
ANR	3045687	Callee	CloseHandle		3045591	0					
ANR	3045688	Identifier	CloseHandle		3045591	0					
ANR	3045689	ArgumentList	hmutex		3045591	1					
ANR	3045690	Argument	hmutex		3045591	0					
ANR	3045691	Identifier	hmutex		3045591	0					
ANR	3045692	BreakStatement	break ;	338:16:11370:11375	3045591	5	True				
ANR	3045693	Label	case DISPLAY_SIZE :	339:12:11389:11406	3045591	6	True				
ANR	3045694	Identifier	DISPLAY_SIZE		3045591	0					
ANR	3045695	ExpressionStatement	image_updatesize ( ( IMAGE * ) msg . lParam )	340:16:11424:11461	3045591	7	True				
ANR	3045696	CallExpression	image_updatesize ( ( IMAGE * ) msg . lParam )		3045591	0					
ANR	3045697	Callee	image_updatesize		3045591	0					
ANR	3045698	Identifier	image_updatesize		3045591	0					
ANR	3045699	ArgumentList	( IMAGE * ) msg . lParam		3045591	1					
ANR	3045700	Argument	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045701	CastExpression	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045702	CastTarget	IMAGE *		3045591	0					
ANR	3045703	MemberAccess	msg . lParam		3045591	1					
ANR	3045704	Identifier	msg		3045591	0					
ANR	3045705	Identifier	lParam		3045591	1					
ANR	3045706	BreakStatement	break ;	341:16:11479:11484	3045591	8	True				
ANR	3045707	Label	case DISPLAY_SYNC :	342:12:11498:11515	3045591	9	True				
ANR	3045708	Identifier	DISPLAY_SYNC		3045591	0					
ANR	3045709	ExpressionStatement	image_sync ( ( IMAGE * ) msg . lParam )	343:16:11533:11564	3045591	10	True				
ANR	3045710	CallExpression	image_sync ( ( IMAGE * ) msg . lParam )		3045591	0					
ANR	3045711	Callee	image_sync		3045591	0					
ANR	3045712	Identifier	image_sync		3045591	0					
ANR	3045713	ArgumentList	( IMAGE * ) msg . lParam		3045591	1					
ANR	3045714	Argument	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045715	CastExpression	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045716	CastTarget	IMAGE *		3045591	0					
ANR	3045717	MemberAccess	msg . lParam		3045591	1					
ANR	3045718	Identifier	msg		3045591	0					
ANR	3045719	Identifier	lParam		3045591	1					
ANR	3045720	BreakStatement	break ;	344:16:11582:11587	3045591	11	True				
ANR	3045721	Label	case DISPLAY_PAGE :	345:12:11601:11618	3045591	12	True				
ANR	3045722	Identifier	DISPLAY_PAGE		3045591	0					
ANR	3045723	ExpressionStatement	image_page ( ( IMAGE * ) msg . lParam )	346:16:11636:11667	3045591	13	True				
ANR	3045724	CallExpression	image_page ( ( IMAGE * ) msg . lParam )		3045591	0					
ANR	3045725	Callee	image_page		3045591	0					
ANR	3045726	Identifier	image_page		3045591	0					
ANR	3045727	ArgumentList	( IMAGE * ) msg . lParam		3045591	1					
ANR	3045728	Argument	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045729	CastExpression	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045730	CastTarget	IMAGE *		3045591	0					
ANR	3045731	MemberAccess	msg . lParam		3045591	1					
ANR	3045732	Identifier	msg		3045591	0					
ANR	3045733	Identifier	lParam		3045591	1					
ANR	3045734	BreakStatement	break ;	347:16:11685:11690	3045591	14	True				
ANR	3045735	Label	case DISPLAY_UPDATE :	348:12:11704:11723	3045591	15	True				
ANR	3045736	Identifier	DISPLAY_UPDATE		3045591	0					
ANR	3045737	ExpressionStatement	image_poll ( ( IMAGE * ) msg . lParam )	349:16:11741:11772	3045591	16	True				
ANR	3045738	CallExpression	image_poll ( ( IMAGE * ) msg . lParam )		3045591	0					
ANR	3045739	Callee	image_poll		3045591	0					
ANR	3045740	Identifier	image_poll		3045591	0					
ANR	3045741	ArgumentList	( IMAGE * ) msg . lParam		3045591	1					
ANR	3045742	Argument	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045743	CastExpression	( IMAGE * ) msg . lParam		3045591	0					
ANR	3045744	CastTarget	IMAGE *		3045591	0					
ANR	3045745	MemberAccess	msg . lParam		3045591	1					
ANR	3045746	Identifier	msg		3045591	0					
ANR	3045747	Identifier	lParam		3045591	1					
ANR	3045748	BreakStatement	break ;	350:16:11790:11795	3045591	17	True				
ANR	3045749	Label	default :	351:12:11809:11816	3045591	18	True				
ANR	3045750	Identifier	default		3045591	0					
ANR	3045751	ExpressionStatement	TranslateMessage ( & msg )	352:16:11834:11856	3045591	19	True				
ANR	3045752	CallExpression	TranslateMessage ( & msg )		3045591	0					
ANR	3045753	Callee	TranslateMessage		3045591	0					
ANR	3045754	Identifier	TranslateMessage		3045591	0					
ANR	3045755	ArgumentList	& msg		3045591	1					
ANR	3045756	Argument	& msg		3045591	0					
ANR	3045757	UnaryOperationExpression	& msg		3045591	0					
ANR	3045758	UnaryOperator	&		3045591	0					
ANR	3045759	Identifier	msg		3045591	1					
ANR	3045760	ExpressionStatement	DispatchMessage ( & msg )	353:16:11874:11895	3045591	20	True				
ANR	3045761	CallExpression	DispatchMessage ( & msg )		3045591	0					
ANR	3045762	Callee	DispatchMessage		3045591	0					
ANR	3045763	Identifier	DispatchMessage		3045591	0					
ANR	3045764	ArgumentList	& msg		3045591	1					
ANR	3045765	Argument	& msg		3045591	0					
ANR	3045766	UnaryOperationExpression	& msg		3045591	0					
ANR	3045767	UnaryOperator	&		3045591	0					
ANR	3045768	Identifier	msg		3045591	1					
ANR	3045769	ReturnType	static void		3045591	1					
ANR	3045770	Identifier	winthread		3045591	2					
ANR	3045771	ParameterList	void * arg		3045591	3					
ANR	3045772	Parameter	void * arg	320:22:10810:10818	3045591	0	True				
ANR	3045773	ParameterType	void *		3045591	0					
ANR	3045774	Identifier	arg		3045591	1					
ANR	3045775	CFGEntryNode	ENTRY		3045591		True				
ANR	3045776	CFGExitNode	EXIT		3045591		True				
ANR	3045777	Symbol	msg		3045591						
ANR	3045778	Symbol	& msg		3045591						
ANR	3045779	Symbol	quitnow		3045591						
ANR	3045780	Symbol	img		3045591						
ANR	3045781	Symbol	NULL		3045591						
ANR	3045782	Symbol	GetCurrentThreadId		3045591						
ANR	3045783	Symbol	GetCurrentThread		3045591						
ANR	3045784	Symbol	msg . lParam		3045591						
ANR	3045785	Symbol	img -> hmutex		3045591						
ANR	3045786	Symbol	thread_id		3045591						
ANR	3045787	Symbol	* img		3045591						
ANR	3045788	Symbol	msg . message		3045591						
ANR	3045789	Symbol	arg		3045591						
ANR	3045790	Symbol	hmutex		3045591						
ANR	3045791	Symbol	hthread		3045591						
ANR	3045792	Symbol	GetMessage		3045591						
ANR	3045793	Function	display_open	360:0:11987:12371							
ANR	3045794	FunctionDef	"display_open (void * handle , void * device)"		3045793	0					
ANR	3045795	CompoundStatement		361:0:12032:12371	3045793	0					
ANR	3045796	IdentifierDeclStatement	IMAGE * img ;	362:4:12038:12048	3045793	0	True				
ANR	3045797	IdentifierDecl	* img		3045793	0					
ANR	3045798	IdentifierDeclType	IMAGE *		3045793	0					
ANR	3045799	Identifier	img		3045793	1					
ANR	3045800	ExpressionStatement	"fprintf ( stdout , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"	364:4:12075:12136	3045793	1	True				
ANR	3045801	CallExpression	"fprintf ( stdout , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"		3045793	0					
ANR	3045802	Callee	fprintf		3045793	0					
ANR	3045803	Identifier	fprintf		3045793	0					
ANR	3045804	ArgumentList	stdout		3045793	1					
ANR	3045805	Argument	stdout		3045793	0					
ANR	3045806	Identifier	stdout		3045793	0					
ANR	3045807	Argument	"""display_open(0x%x, 0x%x)\\n"""		3045793	1					
ANR	3045808	PrimaryExpression	"""display_open(0x%x, 0x%x)\\n"""		3045793	0					
ANR	3045809	Argument	handle		3045793	2					
ANR	3045810	Identifier	handle		3045793	0					
ANR	3045811	Argument	device		3045793	3					
ANR	3045812	Identifier	device		3045793	0					
ANR	3045813	ExpressionStatement	"img = image_new ( handle , device )"	366:4:12149:12180	3045793	2	True				
ANR	3045814	AssignmentExpression	"img = image_new ( handle , device )"		3045793	0		=			
ANR	3045815	Identifier	img		3045793	0					
ANR	3045816	CallExpression	"image_new ( handle , device )"		3045793	1					
ANR	3045817	Callee	image_new		3045793	0					
ANR	3045818	Identifier	image_new		3045793	0					
ANR	3045819	ArgumentList	handle		3045793	1					
ANR	3045820	Argument	handle		3045793	0					
ANR	3045821	Identifier	handle		3045793	0					
ANR	3045822	Argument	device		3045793	1					
ANR	3045823	Identifier	device		3045793	0					
ANR	3045824	IfStatement	if ( img )		3045793	3					
ANR	3045825	Condition	img	367:8:12222:12224	3045793	0	True				
ANR	3045826	Identifier	img		3045793	0					
ANR	3045827	CompoundStatement		7:13:194:194	3045793	1					
ANR	3045828	ExpressionStatement	"img -> hmutex = CreateMutex ( NULL , FALSE , NULL )"	368:8:12237:12281	3045793	0	True				
ANR	3045829	AssignmentExpression	"img -> hmutex = CreateMutex ( NULL , FALSE , NULL )"		3045793	0		=			
ANR	3045830	PtrMemberAccess	img -> hmutex		3045793	0					
ANR	3045831	Identifier	img		3045793	0					
ANR	3045832	Identifier	hmutex		3045793	1					
ANR	3045833	CallExpression	"CreateMutex ( NULL , FALSE , NULL )"		3045793	1					
ANR	3045834	Callee	CreateMutex		3045793	0					
ANR	3045835	Identifier	CreateMutex		3045793	0					
ANR	3045836	ArgumentList	NULL		3045793	1					
ANR	3045837	Argument	NULL		3045793	0					
ANR	3045838	Identifier	NULL		3045793	0					
ANR	3045839	Argument	FALSE		3045793	1					
ANR	3045840	Identifier	FALSE		3045793	0					
ANR	3045841	Argument	NULL		3045793	2					
ANR	3045842	Identifier	NULL		3045793	0					
ANR	3045843	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_OPEN , 0 , ( LPARAM ) img )"	369:8:12291:12349	3045793	1	True				
ANR	3045844	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_OPEN , 0 , ( LPARAM ) img )"		3045793	0					
ANR	3045845	Callee	PostThreadMessage		3045793	0					
ANR	3045846	Identifier	PostThreadMessage		3045793	0					
ANR	3045847	ArgumentList	thread_id		3045793	1					
ANR	3045848	Argument	thread_id		3045793	0					
ANR	3045849	Identifier	thread_id		3045793	0					
ANR	3045850	Argument	DISPLAY_OPEN		3045793	1					
ANR	3045851	Identifier	DISPLAY_OPEN		3045793	0					
ANR	3045852	Argument	0		3045793	2					
ANR	3045853	PrimaryExpression	0		3045793	0					
ANR	3045854	Argument	( LPARAM ) img		3045793	3					
ANR	3045855	CastExpression	( LPARAM ) img		3045793	0					
ANR	3045856	CastTarget	LPARAM		3045793	0					
ANR	3045857	Identifier	img		3045793	1					
ANR	3045858	ReturnStatement	return 0 ;	371:4:12361:12369	3045793	4	True				
ANR	3045859	PrimaryExpression	0		3045793	0					
ANR	3045860	ReturnType	int		3045793	1					
ANR	3045861	Identifier	display_open		3045793	2					
ANR	3045862	ParameterList	"void * handle , void * device"		3045793	3					
ANR	3045863	Parameter	void * handle	360:17:12004:12015	3045793	0	True				
ANR	3045864	ParameterType	void *		3045793	0					
ANR	3045865	Identifier	handle		3045793	1					
ANR	3045866	Parameter	void * device	360:31:12018:12029	3045793	1	True				
ANR	3045867	ParameterType	void *		3045793	0					
ANR	3045868	Identifier	device		3045793	1					
ANR	3045869	CFGEntryNode	ENTRY		3045793		True				
ANR	3045870	CFGExitNode	EXIT		3045793		True				
ANR	3045871	Symbol	img -> hmutex		3045793						
ANR	3045872	Symbol	image_new		3045793						
ANR	3045873	Symbol	DISPLAY_OPEN		3045793						
ANR	3045874	Symbol	img		3045793						
ANR	3045875	Symbol	CreateMutex		3045793						
ANR	3045876	Symbol	* img		3045793						
ANR	3045877	Symbol	thread_id		3045793						
ANR	3045878	Symbol	NULL		3045793						
ANR	3045879	Symbol	stdout		3045793						
ANR	3045880	Symbol	handle		3045793						
ANR	3045881	Symbol	FALSE		3045793						
ANR	3045882	Symbol	device		3045793						
ANR	3045883	Function	display_preclose	374:0:12374:12722							
ANR	3045884	FunctionDef	"display_preclose (void * handle , void * device)"		3045883	0					
ANR	3045885	CompoundStatement		375:0:12423:12722	3045883	0					
ANR	3045886	IdentifierDeclStatement	IMAGE * img ;	376:4:12429:12439	3045883	0	True				
ANR	3045887	IdentifierDecl	* img		3045883	0					
ANR	3045888	IdentifierDeclType	IMAGE *		3045883	0					
ANR	3045889	Identifier	img		3045883	1					
ANR	3045890	ExpressionStatement	"fprintf ( stdout , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"	378:4:12466:12531	3045883	1	True				
ANR	3045891	CallExpression	"fprintf ( stdout , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"		3045883	0					
ANR	3045892	Callee	fprintf		3045883	0					
ANR	3045893	Identifier	fprintf		3045883	0					
ANR	3045894	ArgumentList	stdout		3045883	1					
ANR	3045895	Argument	stdout		3045883	0					
ANR	3045896	Identifier	stdout		3045883	0					
ANR	3045897	Argument	"""display_preclose(0x%x, 0x%x)\\n"""		3045883	1					
ANR	3045898	PrimaryExpression	"""display_preclose(0x%x, 0x%x)\\n"""		3045883	0					
ANR	3045899	Argument	handle		3045883	2					
ANR	3045900	Identifier	handle		3045883	0					
ANR	3045901	Argument	device		3045883	3					
ANR	3045902	Identifier	device		3045883	0					
ANR	3045903	ExpressionStatement	"img = image_find ( handle , device )"	380:4:12544:12576	3045883	2	True				
ANR	3045904	AssignmentExpression	"img = image_find ( handle , device )"		3045883	0		=			
ANR	3045905	Identifier	img		3045883	0					
ANR	3045906	CallExpression	"image_find ( handle , device )"		3045883	1					
ANR	3045907	Callee	image_find		3045883	0					
ANR	3045908	Identifier	image_find		3045883	0					
ANR	3045909	ArgumentList	handle		3045883	1					
ANR	3045910	Argument	handle		3045883	0					
ANR	3045911	Identifier	handle		3045883	0					
ANR	3045912	Argument	device		3045883	1					
ANR	3045913	Identifier	device		3045883	0					
ANR	3045914	IfStatement	if ( img )		3045883	3					
ANR	3045915	Condition	img	381:8:12586:12588	3045883	0	True				
ANR	3045916	Identifier	img		3045883	0					
ANR	3045917	CompoundStatement		7:13:167:167	3045883	1					
ANR	3045918	ExpressionStatement	"WaitForSingleObject ( img -> hmutex , 120000 )"	383:8:12660:12700	3045883	0	True				
ANR	3045919	CallExpression	"WaitForSingleObject ( img -> hmutex , 120000 )"		3045883	0					
ANR	3045920	Callee	WaitForSingleObject		3045883	0					
ANR	3045921	Identifier	WaitForSingleObject		3045883	0					
ANR	3045922	ArgumentList	img -> hmutex		3045883	1					
ANR	3045923	Argument	img -> hmutex		3045883	0					
ANR	3045924	PtrMemberAccess	img -> hmutex		3045883	0					
ANR	3045925	Identifier	img		3045883	0					
ANR	3045926	Identifier	hmutex		3045883	1					
ANR	3045927	Argument	120000		3045883	1					
ANR	3045928	PrimaryExpression	120000		3045883	0					
ANR	3045929	ReturnStatement	return 0 ;	385:4:12712:12720	3045883	4	True				
ANR	3045930	PrimaryExpression	0		3045883	0					
ANR	3045931	ReturnType	int		3045883	1					
ANR	3045932	Identifier	display_preclose		3045883	2					
ANR	3045933	ParameterList	"void * handle , void * device"		3045883	3					
ANR	3045934	Parameter	void * handle	374:21:12395:12406	3045883	0	True				
ANR	3045935	ParameterType	void *		3045883	0					
ANR	3045936	Identifier	handle		3045883	1					
ANR	3045937	Parameter	void * device	374:35:12409:12420	3045883	1	True				
ANR	3045938	ParameterType	void *		3045883	0					
ANR	3045939	Identifier	device		3045883	1					
ANR	3045940	CFGEntryNode	ENTRY		3045883		True				
ANR	3045941	CFGExitNode	EXIT		3045883		True				
ANR	3045942	Symbol	img -> hmutex		3045883						
ANR	3045943	Symbol	img		3045883						
ANR	3045944	Symbol	* img		3045883						
ANR	3045945	Symbol	stdout		3045883						
ANR	3045946	Symbol	image_find		3045883						
ANR	3045947	Symbol	handle		3045883						
ANR	3045948	Symbol	device		3045883						
ANR	3045949	Function	display_close	388:0:12725:13268							
ANR	3045950	FunctionDef	"display_close (void * handle , void * device)"		3045949	0					
ANR	3045951	CompoundStatement		389:0:12771:13268	3045949	0					
ANR	3045952	IdentifierDeclStatement	IMAGE * img ;	390:4:12777:12787	3045949	0	True				
ANR	3045953	IdentifierDecl	* img		3045949	0					
ANR	3045954	IdentifierDeclType	IMAGE *		3045949	0					
ANR	3045955	Identifier	img		3045949	1					
ANR	3045956	ExpressionStatement	"fprintf ( stdout , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"	392:4:12814:12876	3045949	1	True				
ANR	3045957	CallExpression	"fprintf ( stdout , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"		3045949	0					
ANR	3045958	Callee	fprintf		3045949	0					
ANR	3045959	Identifier	fprintf		3045949	0					
ANR	3045960	ArgumentList	stdout		3045949	1					
ANR	3045961	Argument	stdout		3045949	0					
ANR	3045962	Identifier	stdout		3045949	0					
ANR	3045963	Argument	"""display_close(0x%x, 0x%x)\\n"""		3045949	1					
ANR	3045964	PrimaryExpression	"""display_close(0x%x, 0x%x)\\n"""		3045949	0					
ANR	3045965	Argument	handle		3045949	2					
ANR	3045966	Identifier	handle		3045949	0					
ANR	3045967	Argument	device		3045949	3					
ANR	3045968	Identifier	device		3045949	0					
ANR	3045969	ExpressionStatement	"img = image_find ( handle , device )"	394:4:12889:12921	3045949	2	True				
ANR	3045970	AssignmentExpression	"img = image_find ( handle , device )"		3045949	0		=			
ANR	3045971	Identifier	img		3045949	0					
ANR	3045972	CallExpression	"image_find ( handle , device )"		3045949	1					
ANR	3045973	Callee	image_find		3045949	0					
ANR	3045974	Identifier	image_find		3045949	0					
ANR	3045975	ArgumentList	handle		3045949	1					
ANR	3045976	Argument	handle		3045949	0					
ANR	3045977	Identifier	handle		3045949	0					
ANR	3045978	Argument	device		3045949	1					
ANR	3045979	Identifier	device		3045949	0					
ANR	3045980	IfStatement	if ( img )		3045949	3					
ANR	3045981	Condition	img	395:8:12931:12933	3045949	0	True				
ANR	3045982	Identifier	img		3045949	0					
ANR	3045983	CompoundStatement		7:13:164:164	3045949	1					
ANR	3045984	IfStatement	if ( GetForegroundWindow ( ) == img -> hwnd )		3045949	0					
ANR	3045985	Condition	GetForegroundWindow ( ) == img -> hwnd	397:12:13022:13055	3045949	0	True				
ANR	3045986	EqualityExpression	GetForegroundWindow ( ) == img -> hwnd		3045949	0		==			
ANR	3045987	CallExpression	GetForegroundWindow ( )		3045949	0					
ANR	3045988	Callee	GetForegroundWindow		3045949	0					
ANR	3045989	Identifier	GetForegroundWindow		3045949	0					
ANR	3045990	ArgumentList			3045949	1					
ANR	3045991	PtrMemberAccess	img -> hwnd		3045949	1					
ANR	3045992	Identifier	img		3045949	0					
ANR	3045993	Identifier	hwnd		3045949	1					
ANR	3045994	ExpressionStatement	SetForegroundWindow ( hwndforeground )	398:12:13070:13105	3045949	1	True				
ANR	3045995	CallExpression	SetForegroundWindow ( hwndforeground )		3045949	0					
ANR	3045996	Callee	SetForegroundWindow		3045949	0					
ANR	3045997	Identifier	SetForegroundWindow		3045949	0					
ANR	3045998	ArgumentList	hwndforeground		3045949	1					
ANR	3045999	Argument	hwndforeground		3045949	0					
ANR	3046000	Identifier	hwndforeground		3045949	0					
ANR	3046001	ExpressionStatement	image_delete ( img )	400:8:13116:13133	3045949	1	True				
ANR	3046002	CallExpression	image_delete ( img )		3045949	0					
ANR	3046003	Callee	image_delete		3045949	0					
ANR	3046004	Identifier	image_delete		3045949	0					
ANR	3046005	ArgumentList	img		3045949	1					
ANR	3046006	Argument	img		3045949	0					
ANR	3046007	Identifier	img		3045949	0					
ANR	3046008	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_CLOSE , 0 , ( LPARAM ) img )"	401:8:13187:13246	3045949	2	True				
ANR	3046009	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_CLOSE , 0 , ( LPARAM ) img )"		3045949	0					
ANR	3046010	Callee	PostThreadMessage		3045949	0					
ANR	3046011	Identifier	PostThreadMessage		3045949	0					
ANR	3046012	ArgumentList	thread_id		3045949	1					
ANR	3046013	Argument	thread_id		3045949	0					
ANR	3046014	Identifier	thread_id		3045949	0					
ANR	3046015	Argument	DISPLAY_CLOSE		3045949	1					
ANR	3046016	Identifier	DISPLAY_CLOSE		3045949	0					
ANR	3046017	Argument	0		3045949	2					
ANR	3046018	PrimaryExpression	0		3045949	0					
ANR	3046019	Argument	( LPARAM ) img		3045949	3					
ANR	3046020	CastExpression	( LPARAM ) img		3045949	0					
ANR	3046021	CastTarget	LPARAM		3045949	0					
ANR	3046022	Identifier	img		3045949	1					
ANR	3046023	ReturnStatement	return 0 ;	403:4:13258:13266	3045949	4	True				
ANR	3046024	PrimaryExpression	0		3045949	0					
ANR	3046025	ReturnType	int		3045949	1					
ANR	3046026	Identifier	display_close		3045949	2					
ANR	3046027	ParameterList	"void * handle , void * device"		3045949	3					
ANR	3046028	Parameter	void * handle	388:18:12743:12754	3045949	0	True				
ANR	3046029	ParameterType	void *		3045949	0					
ANR	3046030	Identifier	handle		3045949	1					
ANR	3046031	Parameter	void * device	388:32:12757:12768	3045949	1	True				
ANR	3046032	ParameterType	void *		3045949	0					
ANR	3046033	Identifier	device		3045949	1					
ANR	3046034	CFGEntryNode	ENTRY		3045949		True				
ANR	3046035	CFGExitNode	EXIT		3045949		True				
ANR	3046036	Symbol	img		3045949						
ANR	3046037	Symbol	* img		3045949						
ANR	3046038	Symbol	thread_id		3045949						
ANR	3046039	Symbol	stdout		3045949						
ANR	3046040	Symbol	image_find		3045949						
ANR	3046041	Symbol	handle		3045949						
ANR	3046042	Symbol	DISPLAY_CLOSE		3045949						
ANR	3046043	Symbol	device		3045949						
ANR	3046044	Symbol	GetForegroundWindow		3045949						
ANR	3046045	Symbol	hwndforeground		3045949						
ANR	3046046	Symbol	img -> hwnd		3045949						
ANR	3046047	Function	display_presize	406:0:13271:13736							
ANR	3046048	FunctionDef	"display_presize (void * handle , void * device , int width , int height , int raster , unsigned int format)"		3046047	0					
ANR	3046049	CompoundStatement		408:0:13383:13736	3046047	0					
ANR	3046050	IdentifierDeclStatement	IMAGE * img ;	409:4:13389:13399	3046047	0	True				
ANR	3046051	IdentifierDecl	* img		3046047	0					
ANR	3046052	IdentifierDeclType	IMAGE *		3046047	0					
ANR	3046053	Identifier	img		3046047	1					
ANR	3046054	ExpressionStatement	"fprintf ( stdout , ""display_presize(0x%x 0x%x, %d, %d, %d, %ld)\\n"" , handle , device , width , height , raster , format )"	411:4:13426:13545	3046047	1	True				
ANR	3046055	CallExpression	"fprintf ( stdout , ""display_presize(0x%x 0x%x, %d, %d, %d, %ld)\\n"" , handle , device , width , height , raster , format )"		3046047	0					
ANR	3046056	Callee	fprintf		3046047	0					
ANR	3046057	Identifier	fprintf		3046047	0					
ANR	3046058	ArgumentList	stdout		3046047	1					
ANR	3046059	Argument	stdout		3046047	0					
ANR	3046060	Identifier	stdout		3046047	0					
ANR	3046061	Argument	"""display_presize(0x%x 0x%x, %d, %d, %d, %ld)\\n"""		3046047	1					
ANR	3046062	PrimaryExpression	"""display_presize(0x%x 0x%x, %d, %d, %d, %ld)\\n"""		3046047	0					
ANR	3046063	Argument	handle		3046047	2					
ANR	3046064	Identifier	handle		3046047	0					
ANR	3046065	Argument	device		3046047	3					
ANR	3046066	Identifier	device		3046047	0					
ANR	3046067	Argument	width		3046047	4					
ANR	3046068	Identifier	width		3046047	0					
ANR	3046069	Argument	height		3046047	5					
ANR	3046070	Identifier	height		3046047	0					
ANR	3046071	Argument	raster		3046047	6					
ANR	3046072	Identifier	raster		3046047	0					
ANR	3046073	Argument	format		3046047	7					
ANR	3046074	Identifier	format		3046047	0					
ANR	3046075	ExpressionStatement	"img = image_find ( handle , device )"	414:4:13558:13590	3046047	2	True				
ANR	3046076	AssignmentExpression	"img = image_find ( handle , device )"		3046047	0		=			
ANR	3046077	Identifier	img		3046047	0					
ANR	3046078	CallExpression	"image_find ( handle , device )"		3046047	1					
ANR	3046079	Callee	image_find		3046047	0					
ANR	3046080	Identifier	image_find		3046047	0					
ANR	3046081	ArgumentList	handle		3046047	1					
ANR	3046082	Argument	handle		3046047	0					
ANR	3046083	Identifier	handle		3046047	0					
ANR	3046084	Argument	device		3046047	1					
ANR	3046085	Identifier	device		3046047	0					
ANR	3046086	IfStatement	if ( img )		3046047	3					
ANR	3046087	Condition	img	415:8:13600:13602	3046047	0	True				
ANR	3046088	Identifier	img		3046047	0					
ANR	3046089	CompoundStatement		8:13:221:221	3046047	1					
ANR	3046090	ExpressionStatement	"WaitForSingleObject ( img -> hmutex , 120000 )"	417:8:13674:13714	3046047	0	True				
ANR	3046091	CallExpression	"WaitForSingleObject ( img -> hmutex , 120000 )"		3046047	0					
ANR	3046092	Callee	WaitForSingleObject		3046047	0					
ANR	3046093	Identifier	WaitForSingleObject		3046047	0					
ANR	3046094	ArgumentList	img -> hmutex		3046047	1					
ANR	3046095	Argument	img -> hmutex		3046047	0					
ANR	3046096	PtrMemberAccess	img -> hmutex		3046047	0					
ANR	3046097	Identifier	img		3046047	0					
ANR	3046098	Identifier	hmutex		3046047	1					
ANR	3046099	Argument	120000		3046047	1					
ANR	3046100	PrimaryExpression	120000		3046047	0					
ANR	3046101	ReturnStatement	return 0 ;	419:4:13726:13734	3046047	4	True				
ANR	3046102	PrimaryExpression	0		3046047	0					
ANR	3046103	ReturnType	int		3046047	1					
ANR	3046104	Identifier	display_presize		3046047	2					
ANR	3046105	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format"		3046047	3					
ANR	3046106	Parameter	void * handle	406:20:13291:13302	3046047	0	True				
ANR	3046107	ParameterType	void *		3046047	0					
ANR	3046108	Identifier	handle		3046047	1					
ANR	3046109	Parameter	void * device	406:34:13305:13316	3046047	1	True				
ANR	3046110	ParameterType	void *		3046047	0					
ANR	3046111	Identifier	device		3046047	1					
ANR	3046112	Parameter	int width	406:48:13319:13327	3046047	2	True				
ANR	3046113	ParameterType	int		3046047	0					
ANR	3046114	Identifier	width		3046047	1					
ANR	3046115	Parameter	int height	406:59:13330:13339	3046047	3	True				
ANR	3046116	ParameterType	int		3046047	0					
ANR	3046117	Identifier	height		3046047	1					
ANR	3046118	Parameter	int raster	407:8:13350:13359	3046047	4	True				
ANR	3046119	ParameterType	int		3046047	0					
ANR	3046120	Identifier	raster		3046047	1					
ANR	3046121	Parameter	unsigned int format	407:20:13362:13380	3046047	5	True				
ANR	3046122	ParameterType	unsigned int		3046047	0					
ANR	3046123	Identifier	format		3046047	1					
ANR	3046124	CFGEntryNode	ENTRY		3046047		True				
ANR	3046125	CFGExitNode	EXIT		3046047		True				
ANR	3046126	Symbol	img -> hmutex		3046047						
ANR	3046127	Symbol	img		3046047						
ANR	3046128	Symbol	* img		3046047						
ANR	3046129	Symbol	stdout		3046047						
ANR	3046130	Symbol	image_find		3046047						
ANR	3046131	Symbol	width		3046047						
ANR	3046132	Symbol	raster		3046047						
ANR	3046133	Symbol	format		3046047						
ANR	3046134	Symbol	handle		3046047						
ANR	3046135	Symbol	device		3046047						
ANR	3046136	Symbol	height		3046047						
ANR	3046137	Function	display_size	422:0:13739:14357							
ANR	3046138	FunctionDef	"display_size (void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage)"		3046137	0					
ANR	3046139	CompoundStatement		424:0:13871:14357	3046137	0					
ANR	3046140	IdentifierDeclStatement	IMAGE * img ;	425:4:13877:13887	3046137	0	True				
ANR	3046141	IdentifierDecl	* img		3046137	0					
ANR	3046142	IdentifierDeclType	IMAGE *		3046137	0					
ANR	3046143	Identifier	img		3046137	1					
ANR	3046144	ExpressionStatement	"fprintf ( stdout , ""display_size(0x%x 0x%x, %d, %d, %d, %ld, 0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"	427:4:13914:14044	3046137	1	True				
ANR	3046145	CallExpression	"fprintf ( stdout , ""display_size(0x%x 0x%x, %d, %d, %d, %ld, 0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"		3046137	0					
ANR	3046146	Callee	fprintf		3046137	0					
ANR	3046147	Identifier	fprintf		3046137	0					
ANR	3046148	ArgumentList	stdout		3046137	1					
ANR	3046149	Argument	stdout		3046137	0					
ANR	3046150	Identifier	stdout		3046137	0					
ANR	3046151	Argument	"""display_size(0x%x 0x%x, %d, %d, %d, %ld, 0x%x)\\n"""		3046137	1					
ANR	3046152	PrimaryExpression	"""display_size(0x%x 0x%x, %d, %d, %d, %ld, 0x%x)\\n"""		3046137	0					
ANR	3046153	Argument	handle		3046137	2					
ANR	3046154	Identifier	handle		3046137	0					
ANR	3046155	Argument	device		3046137	3					
ANR	3046156	Identifier	device		3046137	0					
ANR	3046157	Argument	width		3046137	4					
ANR	3046158	Identifier	width		3046137	0					
ANR	3046159	Argument	height		3046137	5					
ANR	3046160	Identifier	height		3046137	0					
ANR	3046161	Argument	raster		3046137	6					
ANR	3046162	Identifier	raster		3046137	0					
ANR	3046163	Argument	format		3046137	7					
ANR	3046164	Identifier	format		3046137	0					
ANR	3046165	Argument	pimage		3046137	8					
ANR	3046166	Identifier	pimage		3046137	0					
ANR	3046167	ExpressionStatement	"img = image_find ( handle , device )"	430:4:14057:14089	3046137	2	True				
ANR	3046168	AssignmentExpression	"img = image_find ( handle , device )"		3046137	0		=			
ANR	3046169	Identifier	img		3046137	0					
ANR	3046170	CallExpression	"image_find ( handle , device )"		3046137	1					
ANR	3046171	Callee	image_find		3046137	0					
ANR	3046172	Identifier	image_find		3046137	0					
ANR	3046173	ArgumentList	handle		3046137	1					
ANR	3046174	Argument	handle		3046137	0					
ANR	3046175	Identifier	handle		3046137	0					
ANR	3046176	Argument	device		3046137	1					
ANR	3046177	Identifier	device		3046137	0					
ANR	3046178	IfStatement	if ( img )		3046137	3					
ANR	3046179	Condition	img	431:8:14099:14101	3046137	0	True				
ANR	3046180	Identifier	img		3046137	0					
ANR	3046181	CompoundStatement		8:13:232:232	3046137	1					
ANR	3046182	ExpressionStatement	"image_size ( img , width , height , raster , format , pimage )"	432:8:14114:14168	3046137	0	True				
ANR	3046183	CallExpression	"image_size ( img , width , height , raster , format , pimage )"		3046137	0					
ANR	3046184	Callee	image_size		3046137	0					
ANR	3046185	Identifier	image_size		3046137	0					
ANR	3046186	ArgumentList	img		3046137	1					
ANR	3046187	Argument	img		3046137	0					
ANR	3046188	Identifier	img		3046137	0					
ANR	3046189	Argument	width		3046137	1					
ANR	3046190	Identifier	width		3046137	0					
ANR	3046191	Argument	height		3046137	2					
ANR	3046192	Identifier	height		3046137	0					
ANR	3046193	Argument	raster		3046137	3					
ANR	3046194	Identifier	raster		3046137	0					
ANR	3046195	Argument	format		3046137	4					
ANR	3046196	Identifier	format		3046137	0					
ANR	3046197	Argument	pimage		3046137	5					
ANR	3046198	Identifier	pimage		3046137	0					
ANR	3046199	ExpressionStatement	ReleaseMutex ( img -> hmutex )	434:8:14242:14267	3046137	1	True				
ANR	3046200	CallExpression	ReleaseMutex ( img -> hmutex )		3046137	0					
ANR	3046201	Callee	ReleaseMutex		3046137	0					
ANR	3046202	Identifier	ReleaseMutex		3046137	0					
ANR	3046203	ArgumentList	img -> hmutex		3046137	1					
ANR	3046204	Argument	img -> hmutex		3046137	0					
ANR	3046205	PtrMemberAccess	img -> hmutex		3046137	0					
ANR	3046206	Identifier	img		3046137	0					
ANR	3046207	Identifier	hmutex		3046137	1					
ANR	3046208	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_SIZE , 0 , ( LPARAM ) img )"	435:8:14277:14335	3046137	2	True				
ANR	3046209	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_SIZE , 0 , ( LPARAM ) img )"		3046137	0					
ANR	3046210	Callee	PostThreadMessage		3046137	0					
ANR	3046211	Identifier	PostThreadMessage		3046137	0					
ANR	3046212	ArgumentList	thread_id		3046137	1					
ANR	3046213	Argument	thread_id		3046137	0					
ANR	3046214	Identifier	thread_id		3046137	0					
ANR	3046215	Argument	DISPLAY_SIZE		3046137	1					
ANR	3046216	Identifier	DISPLAY_SIZE		3046137	0					
ANR	3046217	Argument	0		3046137	2					
ANR	3046218	PrimaryExpression	0		3046137	0					
ANR	3046219	Argument	( LPARAM ) img		3046137	3					
ANR	3046220	CastExpression	( LPARAM ) img		3046137	0					
ANR	3046221	CastTarget	LPARAM		3046137	0					
ANR	3046222	Identifier	img		3046137	1					
ANR	3046223	ReturnStatement	return 0 ;	437:4:14347:14355	3046137	4	True				
ANR	3046224	PrimaryExpression	0		3046137	0					
ANR	3046225	ReturnType	int		3046137	1					
ANR	3046226	Identifier	display_size		3046137	2					
ANR	3046227	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage"		3046137	3					
ANR	3046228	Parameter	void * handle	422:17:13756:13767	3046137	0	True				
ANR	3046229	ParameterType	void *		3046137	0					
ANR	3046230	Identifier	handle		3046137	1					
ANR	3046231	Parameter	void * device	422:31:13770:13781	3046137	1	True				
ANR	3046232	ParameterType	void *		3046137	0					
ANR	3046233	Identifier	device		3046137	1					
ANR	3046234	Parameter	int width	422:45:13784:13792	3046137	2	True				
ANR	3046235	ParameterType	int		3046137	0					
ANR	3046236	Identifier	width		3046137	1					
ANR	3046237	Parameter	int height	422:56:13795:13804	3046137	3	True				
ANR	3046238	ParameterType	int		3046137	0					
ANR	3046239	Identifier	height		3046137	1					
ANR	3046240	Parameter	int raster	423:8:13815:13824	3046137	4	True				
ANR	3046241	ParameterType	int		3046137	0					
ANR	3046242	Identifier	raster		3046137	1					
ANR	3046243	Parameter	unsigned int format	423:20:13827:13845	3046137	5	True				
ANR	3046244	ParameterType	unsigned int		3046137	0					
ANR	3046245	Identifier	format		3046137	1					
ANR	3046246	Parameter	unsigned char * pimage	423:41:13848:13868	3046137	6	True				
ANR	3046247	ParameterType	unsigned char *		3046137	0					
ANR	3046248	Identifier	pimage		3046137	1					
ANR	3046249	CFGEntryNode	ENTRY		3046137		True				
ANR	3046250	CFGExitNode	EXIT		3046137		True				
ANR	3046251	Symbol	img		3046137						
ANR	3046252	Symbol	stdout		3046137						
ANR	3046253	Symbol	image_find		3046137						
ANR	3046254	Symbol	raster		3046137						
ANR	3046255	Symbol	format		3046137						
ANR	3046256	Symbol	handle		3046137						
ANR	3046257	Symbol	img -> hmutex		3046137						
ANR	3046258	Symbol	pimage		3046137						
ANR	3046259	Symbol	* img		3046137						
ANR	3046260	Symbol	thread_id		3046137						
ANR	3046261	Symbol	DISPLAY_SIZE		3046137						
ANR	3046262	Symbol	width		3046137						
ANR	3046263	Symbol	device		3046137						
ANR	3046264	Symbol	height		3046137						
ANR	3046265	Function	display_sync	440:0:14360:14712							
ANR	3046266	FunctionDef	"display_sync (void * handle , void * device)"		3046265	0					
ANR	3046267	CompoundStatement		441:0:14405:14712	3046265	0					
ANR	3046268	IdentifierDeclStatement	IMAGE * img ;	442:4:14411:14421	3046265	0	True				
ANR	3046269	IdentifierDecl	* img		3046265	0					
ANR	3046270	IdentifierDeclType	IMAGE *		3046265	0					
ANR	3046271	Identifier	img		3046265	1					
ANR	3046272	ExpressionStatement	"fprintf ( stdout , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"	444:4:14448:14509	3046265	1	True				
ANR	3046273	CallExpression	"fprintf ( stdout , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"		3046265	0					
ANR	3046274	Callee	fprintf		3046265	0					
ANR	3046275	Identifier	fprintf		3046265	0					
ANR	3046276	ArgumentList	stdout		3046265	1					
ANR	3046277	Argument	stdout		3046265	0					
ANR	3046278	Identifier	stdout		3046265	0					
ANR	3046279	Argument	"""display_sync(0x%x, 0x%x)\\n"""		3046265	1					
ANR	3046280	PrimaryExpression	"""display_sync(0x%x, 0x%x)\\n"""		3046265	0					
ANR	3046281	Argument	handle		3046265	2					
ANR	3046282	Identifier	handle		3046265	0					
ANR	3046283	Argument	device		3046265	3					
ANR	3046284	Identifier	device		3046265	0					
ANR	3046285	ExpressionStatement	"img = image_find ( handle , device )"	446:4:14522:14554	3046265	2	True				
ANR	3046286	AssignmentExpression	"img = image_find ( handle , device )"		3046265	0		=			
ANR	3046287	Identifier	img		3046265	0					
ANR	3046288	CallExpression	"image_find ( handle , device )"		3046265	1					
ANR	3046289	Callee	image_find		3046265	0					
ANR	3046290	Identifier	image_find		3046265	0					
ANR	3046291	ArgumentList	handle		3046265	1					
ANR	3046292	Argument	handle		3046265	0					
ANR	3046293	Identifier	handle		3046265	0					
ANR	3046294	Argument	device		3046265	1					
ANR	3046295	Identifier	device		3046265	0					
ANR	3046296	IfStatement	if ( img && ! img -> pending_sync )		3046265	3					
ANR	3046297	Condition	img && ! img -> pending_sync	447:8:14564:14588	3046265	0	True				
ANR	3046298	AndExpression	img && ! img -> pending_sync		3046265	0		&&			
ANR	3046299	Identifier	img		3046265	0					
ANR	3046300	UnaryOperationExpression	! img -> pending_sync		3046265	1					
ANR	3046301	UnaryOperator	!		3046265	0					
ANR	3046302	PtrMemberAccess	img -> pending_sync		3046265	1					
ANR	3046303	Identifier	img		3046265	0					
ANR	3046304	Identifier	pending_sync		3046265	1					
ANR	3046305	CompoundStatement		7:35:185:185	3046265	1					
ANR	3046306	ExpressionStatement	img -> pending_sync = 1	448:8:14601:14622	3046265	0	True				
ANR	3046307	AssignmentExpression	img -> pending_sync = 1		3046265	0		=			
ANR	3046308	PtrMemberAccess	img -> pending_sync		3046265	0					
ANR	3046309	Identifier	img		3046265	0					
ANR	3046310	Identifier	pending_sync		3046265	1					
ANR	3046311	PrimaryExpression	1		3046265	1					
ANR	3046312	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_SYNC , 0 , ( LPARAM ) img )"	449:8:14632:14690	3046265	1	True				
ANR	3046313	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_SYNC , 0 , ( LPARAM ) img )"		3046265	0					
ANR	3046314	Callee	PostThreadMessage		3046265	0					
ANR	3046315	Identifier	PostThreadMessage		3046265	0					
ANR	3046316	ArgumentList	thread_id		3046265	1					
ANR	3046317	Argument	thread_id		3046265	0					
ANR	3046318	Identifier	thread_id		3046265	0					
ANR	3046319	Argument	DISPLAY_SYNC		3046265	1					
ANR	3046320	Identifier	DISPLAY_SYNC		3046265	0					
ANR	3046321	Argument	0		3046265	2					
ANR	3046322	PrimaryExpression	0		3046265	0					
ANR	3046323	Argument	( LPARAM ) img		3046265	3					
ANR	3046324	CastExpression	( LPARAM ) img		3046265	0					
ANR	3046325	CastTarget	LPARAM		3046265	0					
ANR	3046326	Identifier	img		3046265	1					
ANR	3046327	ReturnStatement	return 0 ;	451:4:14702:14710	3046265	4	True				
ANR	3046328	PrimaryExpression	0		3046265	0					
ANR	3046329	ReturnType	int		3046265	1					
ANR	3046330	Identifier	display_sync		3046265	2					
ANR	3046331	ParameterList	"void * handle , void * device"		3046265	3					
ANR	3046332	Parameter	void * handle	440:17:14377:14388	3046265	0	True				
ANR	3046333	ParameterType	void *		3046265	0					
ANR	3046334	Identifier	handle		3046265	1					
ANR	3046335	Parameter	void * device	440:31:14391:14402	3046265	1	True				
ANR	3046336	ParameterType	void *		3046265	0					
ANR	3046337	Identifier	device		3046265	1					
ANR	3046338	CFGEntryNode	ENTRY		3046265		True				
ANR	3046339	CFGExitNode	EXIT		3046265		True				
ANR	3046340	Symbol	DISPLAY_SYNC		3046265						
ANR	3046341	Symbol	img		3046265						
ANR	3046342	Symbol	* img		3046265						
ANR	3046343	Symbol	thread_id		3046265						
ANR	3046344	Symbol	img -> pending_sync		3046265						
ANR	3046345	Symbol	stdout		3046265						
ANR	3046346	Symbol	image_find		3046265						
ANR	3046347	Symbol	handle		3046265						
ANR	3046348	Symbol	device		3046265						
ANR	3046349	Function	display_page	454:0:14715:15073							
ANR	3046350	FunctionDef	"display_page (void * handle , void * device , int copies , int flush)"		3046349	0					
ANR	3046351	CompoundStatement		455:0:14783:15073	3046349	0					
ANR	3046352	IdentifierDeclStatement	IMAGE * img ;	456:4:14789:14799	3046349	0	True				
ANR	3046353	IdentifierDecl	* img		3046349	0					
ANR	3046354	IdentifierDeclType	IMAGE *		3046349	0					
ANR	3046355	Identifier	img		3046349	1					
ANR	3046356	ExpressionStatement	"fprintf ( stdout , ""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"" , handle , device , copies , flush )"	458:4:14826:14931	3046349	1	True				
ANR	3046357	CallExpression	"fprintf ( stdout , ""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"" , handle , device , copies , flush )"		3046349	0					
ANR	3046358	Callee	fprintf		3046349	0					
ANR	3046359	Identifier	fprintf		3046349	0					
ANR	3046360	ArgumentList	stdout		3046349	1					
ANR	3046361	Argument	stdout		3046349	0					
ANR	3046362	Identifier	stdout		3046349	0					
ANR	3046363	Argument	"""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"""		3046349	1					
ANR	3046364	PrimaryExpression	"""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"""		3046349	0					
ANR	3046365	Argument	handle		3046349	2					
ANR	3046366	Identifier	handle		3046349	0					
ANR	3046367	Argument	device		3046349	3					
ANR	3046368	Identifier	device		3046349	0					
ANR	3046369	Argument	copies		3046349	4					
ANR	3046370	Identifier	copies		3046349	0					
ANR	3046371	Argument	flush		3046349	5					
ANR	3046372	Identifier	flush		3046349	0					
ANR	3046373	ExpressionStatement	"img = image_find ( handle , device )"	461:4:14944:14976	3046349	2	True				
ANR	3046374	AssignmentExpression	"img = image_find ( handle , device )"		3046349	0		=			
ANR	3046375	Identifier	img		3046349	0					
ANR	3046376	CallExpression	"image_find ( handle , device )"		3046349	1					
ANR	3046377	Callee	image_find		3046349	0					
ANR	3046378	Identifier	image_find		3046349	0					
ANR	3046379	ArgumentList	handle		3046349	1					
ANR	3046380	Argument	handle		3046349	0					
ANR	3046381	Identifier	handle		3046349	0					
ANR	3046382	Argument	device		3046349	1					
ANR	3046383	Identifier	device		3046349	0					
ANR	3046384	IfStatement	if ( img )		3046349	3					
ANR	3046385	Condition	img	462:8:14986:14988	3046349	0	True				
ANR	3046386	Identifier	img		3046349	0					
ANR	3046387	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_PAGE , 0 , ( LPARAM ) img )"	463:8:14999:15057	3046349	1	True				
ANR	3046388	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_PAGE , 0 , ( LPARAM ) img )"		3046349	0					
ANR	3046389	Callee	PostThreadMessage		3046349	0					
ANR	3046390	Identifier	PostThreadMessage		3046349	0					
ANR	3046391	ArgumentList	thread_id		3046349	1					
ANR	3046392	Argument	thread_id		3046349	0					
ANR	3046393	Identifier	thread_id		3046349	0					
ANR	3046394	Argument	DISPLAY_PAGE		3046349	1					
ANR	3046395	Identifier	DISPLAY_PAGE		3046349	0					
ANR	3046396	Argument	0		3046349	2					
ANR	3046397	PrimaryExpression	0		3046349	0					
ANR	3046398	Argument	( LPARAM ) img		3046349	3					
ANR	3046399	CastExpression	( LPARAM ) img		3046349	0					
ANR	3046400	CastTarget	LPARAM		3046349	0					
ANR	3046401	Identifier	img		3046349	1					
ANR	3046402	ReturnStatement	return 0 ;	464:4:15063:15071	3046349	4	True				
ANR	3046403	PrimaryExpression	0		3046349	0					
ANR	3046404	ReturnType	int		3046349	1					
ANR	3046405	Identifier	display_page		3046349	2					
ANR	3046406	ParameterList	"void * handle , void * device , int copies , int flush"		3046349	3					
ANR	3046407	Parameter	void * handle	454:17:14732:14743	3046349	0	True				
ANR	3046408	ParameterType	void *		3046349	0					
ANR	3046409	Identifier	handle		3046349	1					
ANR	3046410	Parameter	void * device	454:31:14746:14757	3046349	1	True				
ANR	3046411	ParameterType	void *		3046349	0					
ANR	3046412	Identifier	device		3046349	1					
ANR	3046413	Parameter	int copies	454:45:14760:14769	3046349	2	True				
ANR	3046414	ParameterType	int		3046349	0					
ANR	3046415	Identifier	copies		3046349	1					
ANR	3046416	Parameter	int flush	454:57:14772:14780	3046349	3	True				
ANR	3046417	ParameterType	int		3046349	0					
ANR	3046418	Identifier	flush		3046349	1					
ANR	3046419	CFGEntryNode	ENTRY		3046349		True				
ANR	3046420	CFGExitNode	EXIT		3046349		True				
ANR	3046421	Symbol	img		3046349						
ANR	3046422	Symbol	thread_id		3046349						
ANR	3046423	Symbol	copies		3046349						
ANR	3046424	Symbol	flush		3046349						
ANR	3046425	Symbol	stdout		3046349						
ANR	3046426	Symbol	image_find		3046349						
ANR	3046427	Symbol	handle		3046349						
ANR	3046428	Symbol	DISPLAY_PAGE		3046349						
ANR	3046429	Symbol	device		3046349						
ANR	3046430	Function	display_update	467:0:15076:15395							
ANR	3046431	FunctionDef	"display_update (void * handle , void * device , int x , int y , int w , int h)"		3046430	0					
ANR	3046432	CompoundStatement		469:0:15155:15395	3046430	0					
ANR	3046433	IdentifierDeclStatement	IMAGE * img ;	470:4:15161:15171	3046430	0	True				
ANR	3046434	IdentifierDecl	* img		3046430	0					
ANR	3046435	IdentifierDeclType	IMAGE *		3046430	0					
ANR	3046436	Identifier	img		3046430	1					
ANR	3046437	ExpressionStatement	"img = image_find ( handle , device )"	471:4:15177:15209	3046430	1	True				
ANR	3046438	AssignmentExpression	"img = image_find ( handle , device )"		3046430	0		=			
ANR	3046439	Identifier	img		3046430	0					
ANR	3046440	CallExpression	"image_find ( handle , device )"		3046430	1					
ANR	3046441	Callee	image_find		3046430	0					
ANR	3046442	Identifier	image_find		3046430	0					
ANR	3046443	ArgumentList	handle		3046430	1					
ANR	3046444	Argument	handle		3046430	0					
ANR	3046445	Identifier	handle		3046430	0					
ANR	3046446	Argument	device		3046430	1					
ANR	3046447	Identifier	device		3046430	0					
ANR	3046448	IfStatement	if ( img && ! img -> pending_update && ! img -> pending_sync )		3046430	2					
ANR	3046449	Condition	img && ! img -> pending_update && ! img -> pending_sync	472:8:15219:15267	3046430	0	True				
ANR	3046450	AndExpression	img && ! img -> pending_update && ! img -> pending_sync		3046430	0		&&			
ANR	3046451	Identifier	img		3046430	0					
ANR	3046452	AndExpression	! img -> pending_update && ! img -> pending_sync		3046430	1		&&			
ANR	3046453	UnaryOperationExpression	! img -> pending_update		3046430	0					
ANR	3046454	UnaryOperator	!		3046430	0					
ANR	3046455	PtrMemberAccess	img -> pending_update		3046430	1					
ANR	3046456	Identifier	img		3046430	0					
ANR	3046457	Identifier	pending_update		3046430	1					
ANR	3046458	UnaryOperationExpression	! img -> pending_sync		3046430	1					
ANR	3046459	UnaryOperator	!		3046430	0					
ANR	3046460	PtrMemberAccess	img -> pending_sync		3046430	1					
ANR	3046461	Identifier	img		3046430	0					
ANR	3046462	Identifier	pending_sync		3046430	1					
ANR	3046463	CompoundStatement		4:59:114:114	3046430	1					
ANR	3046464	ExpressionStatement	img -> pending_update = 1	473:8:15280:15303	3046430	0	True				
ANR	3046465	AssignmentExpression	img -> pending_update = 1		3046430	0		=			
ANR	3046466	PtrMemberAccess	img -> pending_update		3046430	0					
ANR	3046467	Identifier	img		3046430	0					
ANR	3046468	Identifier	pending_update		3046430	1					
ANR	3046469	PrimaryExpression	1		3046430	1					
ANR	3046470	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_UPDATE , 0 , ( LPARAM ) img )"	474:8:15313:15373	3046430	1	True				
ANR	3046471	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_UPDATE , 0 , ( LPARAM ) img )"		3046430	0					
ANR	3046472	Callee	PostThreadMessage		3046430	0					
ANR	3046473	Identifier	PostThreadMessage		3046430	0					
ANR	3046474	ArgumentList	thread_id		3046430	1					
ANR	3046475	Argument	thread_id		3046430	0					
ANR	3046476	Identifier	thread_id		3046430	0					
ANR	3046477	Argument	DISPLAY_UPDATE		3046430	1					
ANR	3046478	Identifier	DISPLAY_UPDATE		3046430	0					
ANR	3046479	Argument	0		3046430	2					
ANR	3046480	PrimaryExpression	0		3046430	0					
ANR	3046481	Argument	( LPARAM ) img		3046430	3					
ANR	3046482	CastExpression	( LPARAM ) img		3046430	0					
ANR	3046483	CastTarget	LPARAM		3046430	0					
ANR	3046484	Identifier	img		3046430	1					
ANR	3046485	ReturnStatement	return 0 ;	476:4:15385:15393	3046430	3	True				
ANR	3046486	PrimaryExpression	0		3046430	0					
ANR	3046487	ReturnType	int		3046430	1					
ANR	3046488	Identifier	display_update		3046430	2					
ANR	3046489	ParameterList	"void * handle , void * device , int x , int y , int w , int h"		3046430	3					
ANR	3046490	Parameter	void * handle	467:19:15095:15106	3046430	0	True				
ANR	3046491	ParameterType	void *		3046430	0					
ANR	3046492	Identifier	handle		3046430	1					
ANR	3046493	Parameter	void * device	467:33:15109:15120	3046430	1	True				
ANR	3046494	ParameterType	void *		3046430	0					
ANR	3046495	Identifier	device		3046430	1					
ANR	3046496	Parameter	int x	468:4:15127:15131	3046430	2	True				
ANR	3046497	ParameterType	int		3046430	0					
ANR	3046498	Identifier	x		3046430	1					
ANR	3046499	Parameter	int y	468:11:15134:15138	3046430	3	True				
ANR	3046500	ParameterType	int		3046430	0					
ANR	3046501	Identifier	y		3046430	1					
ANR	3046502	Parameter	int w	468:18:15141:15145	3046430	4	True				
ANR	3046503	ParameterType	int		3046430	0					
ANR	3046504	Identifier	w		3046430	1					
ANR	3046505	Parameter	int h	468:25:15148:15152	3046430	5	True				
ANR	3046506	ParameterType	int		3046430	0					
ANR	3046507	Identifier	h		3046430	1					
ANR	3046508	CFGEntryNode	ENTRY		3046430		True				
ANR	3046509	CFGExitNode	EXIT		3046430		True				
ANR	3046510	Symbol	img		3046430						
ANR	3046511	Symbol	img -> pending_sync		3046430						
ANR	3046512	Symbol	img -> pending_update		3046430						
ANR	3046513	Symbol	image_find		3046430						
ANR	3046514	Symbol	h		3046430						
ANR	3046515	Symbol	handle		3046430						
ANR	3046516	Symbol	* img		3046430						
ANR	3046517	Symbol	thread_id		3046430						
ANR	3046518	Symbol	DISPLAY_UPDATE		3046430						
ANR	3046519	Symbol	w		3046430						
ANR	3046520	Symbol	x		3046430						
ANR	3046521	Symbol	y		3046430						
ANR	3046522	Symbol	device		3046430						
ANR	3046523	Function	display_memalloc	484:0:15530:15854							
ANR	3046524	FunctionDef	"display_memalloc (void * handle , void * device , unsigned long size)"		3046523	0					
ANR	3046525	CompoundStatement		485:0:15601:15854	3046523	0					
ANR	3046526	IdentifierDeclStatement	void * mem ;	486:4:15607:15616	3046523	0	True				
ANR	3046527	IdentifierDecl	* mem		3046523	0					
ANR	3046528	IdentifierDeclType	void *		3046523	0					
ANR	3046529	Identifier	mem		3046523	1					
ANR	3046530	ExpressionStatement	"fprintf ( stdout , ""display_memalloc(0x%x 0x%x %d)\\n"" , handle , device , size )"	488:4:15643:15724	3046523	1	True				
ANR	3046531	CallExpression	"fprintf ( stdout , ""display_memalloc(0x%x 0x%x %d)\\n"" , handle , device , size )"		3046523	0					
ANR	3046532	Callee	fprintf		3046523	0					
ANR	3046533	Identifier	fprintf		3046523	0					
ANR	3046534	ArgumentList	stdout		3046523	1					
ANR	3046535	Argument	stdout		3046523	0					
ANR	3046536	Identifier	stdout		3046523	0					
ANR	3046537	Argument	"""display_memalloc(0x%x 0x%x %d)\\n"""		3046523	1					
ANR	3046538	PrimaryExpression	"""display_memalloc(0x%x 0x%x %d)\\n"""		3046523	0					
ANR	3046539	Argument	handle		3046523	2					
ANR	3046540	Identifier	handle		3046523	0					
ANR	3046541	Argument	device		3046523	3					
ANR	3046542	Identifier	device		3046523	0					
ANR	3046543	Argument	size		3046523	4					
ANR	3046544	Identifier	size		3046523	0					
ANR	3046545	ExpressionStatement	mem = malloc ( size )	491:4:15737:15755	3046523	2	True				
ANR	3046546	AssignmentExpression	mem = malloc ( size )		3046523	0		=			
ANR	3046547	Identifier	mem		3046523	0					
ANR	3046548	CallExpression	malloc ( size )		3046523	1					
ANR	3046549	Callee	malloc		3046523	0					
ANR	3046550	Identifier	malloc		3046523	0					
ANR	3046551	ArgumentList	size		3046523	1					
ANR	3046552	Argument	size		3046523	0					
ANR	3046553	Identifier	size		3046523	0					
ANR	3046554	ExpressionStatement	"fprintf ( stdout , ""  returning 0x%x\\n"" , ( int ) mem )"	493:4:15782:15829	3046523	3	True				
ANR	3046555	CallExpression	"fprintf ( stdout , ""  returning 0x%x\\n"" , ( int ) mem )"		3046523	0					
ANR	3046556	Callee	fprintf		3046523	0					
ANR	3046557	Identifier	fprintf		3046523	0					
ANR	3046558	ArgumentList	stdout		3046523	1					
ANR	3046559	Argument	stdout		3046523	0					
ANR	3046560	Identifier	stdout		3046523	0					
ANR	3046561	Argument	"""  returning 0x%x\\n"""		3046523	1					
ANR	3046562	PrimaryExpression	"""  returning 0x%x\\n"""		3046523	0					
ANR	3046563	Argument	( int ) mem		3046523	2					
ANR	3046564	CastExpression	( int ) mem		3046523	0					
ANR	3046565	CastTarget	int		3046523	0					
ANR	3046566	Identifier	mem		3046523	1					
ANR	3046567	ReturnStatement	return mem ;	495:4:15842:15852	3046523	4	True				
ANR	3046568	Identifier	mem		3046523	0					
ANR	3046569	ReturnType	void *		3046523	1					
ANR	3046570	Identifier	display_memalloc		3046523	2					
ANR	3046571	ParameterList	"void * handle , void * device , unsigned long size"		3046523	3					
ANR	3046572	Parameter	void * handle	484:23:15553:15564	3046523	0	True				
ANR	3046573	ParameterType	void *		3046523	0					
ANR	3046574	Identifier	handle		3046523	1					
ANR	3046575	Parameter	void * device	484:37:15567:15578	3046523	1	True				
ANR	3046576	ParameterType	void *		3046523	0					
ANR	3046577	Identifier	device		3046523	1					
ANR	3046578	Parameter	unsigned long size	484:51:15581:15598	3046523	2	True				
ANR	3046579	ParameterType	unsigned long		3046523	0					
ANR	3046580	Identifier	size		3046523	1					
ANR	3046581	CFGEntryNode	ENTRY		3046523		True				
ANR	3046582	CFGExitNode	EXIT		3046523		True				
ANR	3046583	Symbol	malloc		3046523						
ANR	3046584	Symbol	size		3046523						
ANR	3046585	Symbol	mem		3046523						
ANR	3046586	Symbol	stdout		3046523						
ANR	3046587	Symbol	handle		3046523						
ANR	3046588	Symbol	device		3046523						
ANR	3046589	Function	display_memfree	498:0:15857:16064							
ANR	3046590	FunctionDef	"display_memfree (void * handle , void * device , void * mem)"		3046589	0					
ANR	3046591	CompoundStatement		499:0:15916:16064	3046589	0					
ANR	3046592	ExpressionStatement	"fprintf ( stdout , ""display_memfree(0x%x, 0x%x, 0x%x)\\n"" , handle , device , mem )"	501:4:15943:16026	3046589	0	True				
ANR	3046593	CallExpression	"fprintf ( stdout , ""display_memfree(0x%x, 0x%x, 0x%x)\\n"" , handle , device , mem )"		3046589	0					
ANR	3046594	Callee	fprintf		3046589	0					
ANR	3046595	Identifier	fprintf		3046589	0					
ANR	3046596	ArgumentList	stdout		3046589	1					
ANR	3046597	Argument	stdout		3046589	0					
ANR	3046598	Identifier	stdout		3046589	0					
ANR	3046599	Argument	"""display_memfree(0x%x, 0x%x, 0x%x)\\n"""		3046589	1					
ANR	3046600	PrimaryExpression	"""display_memfree(0x%x, 0x%x, 0x%x)\\n"""		3046589	0					
ANR	3046601	Argument	handle		3046589	2					
ANR	3046602	Identifier	handle		3046589	0					
ANR	3046603	Argument	device		3046589	3					
ANR	3046604	Identifier	device		3046589	0					
ANR	3046605	Argument	mem		3046589	4					
ANR	3046606	Identifier	mem		3046589	0					
ANR	3046607	ExpressionStatement	free ( mem )	504:4:16039:16048	3046589	1	True				
ANR	3046608	CallExpression	free ( mem )		3046589	0					
ANR	3046609	Callee	free		3046589	0					
ANR	3046610	Identifier	free		3046589	0					
ANR	3046611	ArgumentList	mem		3046589	1					
ANR	3046612	Argument	mem		3046589	0					
ANR	3046613	Identifier	mem		3046589	0					
ANR	3046614	ReturnStatement	return 0 ;	505:4:16054:16062	3046589	2	True				
ANR	3046615	PrimaryExpression	0		3046589	0					
ANR	3046616	ReturnType	int		3046589	1					
ANR	3046617	Identifier	display_memfree		3046589	2					
ANR	3046618	ParameterList	"void * handle , void * device , void * mem"		3046589	3					
ANR	3046619	Parameter	void * handle	498:20:15877:15888	3046589	0	True				
ANR	3046620	ParameterType	void *		3046589	0					
ANR	3046621	Identifier	handle		3046589	1					
ANR	3046622	Parameter	void * device	498:34:15891:15902	3046589	1	True				
ANR	3046623	ParameterType	void *		3046589	0					
ANR	3046624	Identifier	device		3046589	1					
ANR	3046625	Parameter	void * mem	498:48:15905:15913	3046589	2	True				
ANR	3046626	ParameterType	void *		3046589	0					
ANR	3046627	Identifier	mem		3046589	1					
ANR	3046628	CFGEntryNode	ENTRY		3046589		True				
ANR	3046629	CFGExitNode	EXIT		3046589		True				
ANR	3046630	Symbol	mem		3046589						
ANR	3046631	Symbol	stdout		3046589						
ANR	3046632	Symbol	handle		3046589						
ANR	3046633	Symbol	device		3046589						
ANR	3046634	Function	display_separation	509:0:16074:16558							
ANR	3046635	FunctionDef	"display_separation (void * handle , void * device , int comp_num , const char * name , unsigned short c , unsigned short m , unsigned short y , unsigned short k)"		3046634	0					
ANR	3046636	CompoundStatement		513:0:16238:16558	3046634	0					
ANR	3046637	IdentifierDeclStatement	IMAGE * img ;	514:4:16244:16254	3046634	0	True				
ANR	3046638	IdentifierDecl	* img		3046634	0					
ANR	3046639	IdentifierDeclType	IMAGE *		3046634	0					
ANR	3046640	Identifier	img		3046634	1					
ANR	3046641	ExpressionStatement	"fprintf ( stdout , ""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"" , handle , device , comp_num , name , ( int ) c , ( int ) m , ( int ) y , ( int ) k )"	516:4:16281:16425	3046634	1	True				
ANR	3046642	CallExpression	"fprintf ( stdout , ""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"" , handle , device , comp_num , name , ( int ) c , ( int ) m , ( int ) y , ( int ) k )"		3046634	0					
ANR	3046643	Callee	fprintf		3046634	0					
ANR	3046644	Identifier	fprintf		3046634	0					
ANR	3046645	ArgumentList	stdout		3046634	1					
ANR	3046646	Argument	stdout		3046634	0					
ANR	3046647	Identifier	stdout		3046634	0					
ANR	3046648	Argument	"""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"""		3046634	1					
ANR	3046649	PrimaryExpression	"""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"""		3046634	0					
ANR	3046650	Argument	handle		3046634	2					
ANR	3046651	Identifier	handle		3046634	0					
ANR	3046652	Argument	device		3046634	3					
ANR	3046653	Identifier	device		3046634	0					
ANR	3046654	Argument	comp_num		3046634	4					
ANR	3046655	Identifier	comp_num		3046634	0					
ANR	3046656	Argument	name		3046634	5					
ANR	3046657	Identifier	name		3046634	0					
ANR	3046658	Argument	( int ) c		3046634	6					
ANR	3046659	CastExpression	( int ) c		3046634	0					
ANR	3046660	CastTarget	int		3046634	0					
ANR	3046661	Identifier	c		3046634	1					
ANR	3046662	Argument	( int ) m		3046634	7					
ANR	3046663	CastExpression	( int ) m		3046634	0					
ANR	3046664	CastTarget	int		3046634	0					
ANR	3046665	Identifier	m		3046634	1					
ANR	3046666	Argument	( int ) y		3046634	8					
ANR	3046667	CastExpression	( int ) y		3046634	0					
ANR	3046668	CastTarget	int		3046634	0					
ANR	3046669	Identifier	y		3046634	1					
ANR	3046670	Argument	( int ) k		3046634	9					
ANR	3046671	CastExpression	( int ) k		3046634	0					
ANR	3046672	CastTarget	int		3046634	0					
ANR	3046673	Identifier	k		3046634	1					
ANR	3046674	ExpressionStatement	"img = image_find ( handle , device )"	519:4:16438:16470	3046634	2	True				
ANR	3046675	AssignmentExpression	"img = image_find ( handle , device )"		3046634	0		=			
ANR	3046676	Identifier	img		3046634	0					
ANR	3046677	CallExpression	"image_find ( handle , device )"		3046634	1					
ANR	3046678	Callee	image_find		3046634	0					
ANR	3046679	Identifier	image_find		3046634	0					
ANR	3046680	ArgumentList	handle		3046634	1					
ANR	3046681	Argument	handle		3046634	0					
ANR	3046682	Identifier	handle		3046634	0					
ANR	3046683	Argument	device		3046634	1					
ANR	3046684	Identifier	device		3046634	0					
ANR	3046685	IfStatement	if ( img )		3046634	3					
ANR	3046686	Condition	img	520:8:16480:16482	3046634	0	True				
ANR	3046687	Identifier	img		3046634	0					
ANR	3046688	ExpressionStatement	"image_separation ( img , comp_num , name , c , m , y , k )"	521:8:16493:16542	3046634	1	True				
ANR	3046689	CallExpression	"image_separation ( img , comp_num , name , c , m , y , k )"		3046634	0					
ANR	3046690	Callee	image_separation		3046634	0					
ANR	3046691	Identifier	image_separation		3046634	0					
ANR	3046692	ArgumentList	img		3046634	1					
ANR	3046693	Argument	img		3046634	0					
ANR	3046694	Identifier	img		3046634	0					
ANR	3046695	Argument	comp_num		3046634	1					
ANR	3046696	Identifier	comp_num		3046634	0					
ANR	3046697	Argument	name		3046634	2					
ANR	3046698	Identifier	name		3046634	0					
ANR	3046699	Argument	c		3046634	3					
ANR	3046700	Identifier	c		3046634	0					
ANR	3046701	Argument	m		3046634	4					
ANR	3046702	Identifier	m		3046634	0					
ANR	3046703	Argument	y		3046634	5					
ANR	3046704	Identifier	y		3046634	0					
ANR	3046705	Argument	k		3046634	6					
ANR	3046706	Identifier	k		3046634	0					
ANR	3046707	ReturnStatement	return 0 ;	522:4:16548:16556	3046634	4	True				
ANR	3046708	PrimaryExpression	0		3046634	0					
ANR	3046709	ReturnType	int		3046634	1					
ANR	3046710	Identifier	display_separation		3046634	2					
ANR	3046711	ParameterList	"void * handle , void * device , int comp_num , const char * name , unsigned short c , unsigned short m , unsigned short y , unsigned short k"		3046634	3					
ANR	3046712	Parameter	void * handle	509:23:16097:16108	3046634	0	True				
ANR	3046713	ParameterType	void *		3046634	0					
ANR	3046714	Identifier	handle		3046634	1					
ANR	3046715	Parameter	void * device	509:37:16111:16122	3046634	1	True				
ANR	3046716	ParameterType	void *		3046634	0					
ANR	3046717	Identifier	device		3046634	1					
ANR	3046718	Parameter	int comp_num	510:3:16128:16139	3046634	2	True				
ANR	3046719	ParameterType	int		3046634	0					
ANR	3046720	Identifier	comp_num		3046634	1					
ANR	3046721	Parameter	const char * name	510:17:16142:16157	3046634	3	True				
ANR	3046722	ParameterType	const char *		3046634	0					
ANR	3046723	Identifier	name		3046634	1					
ANR	3046724	Parameter	unsigned short c	511:3:16163:16178	3046634	4	True				
ANR	3046725	ParameterType	unsigned short		3046634	0					
ANR	3046726	Identifier	c		3046634	1					
ANR	3046727	Parameter	unsigned short m	511:21:16181:16196	3046634	5	True				
ANR	3046728	ParameterType	unsigned short		3046634	0					
ANR	3046729	Identifier	m		3046634	1					
ANR	3046730	Parameter	unsigned short y	512:3:16202:16217	3046634	6	True				
ANR	3046731	ParameterType	unsigned short		3046634	0					
ANR	3046732	Identifier	y		3046634	1					
ANR	3046733	Parameter	unsigned short k	512:21:16220:16235	3046634	7	True				
ANR	3046734	ParameterType	unsigned short		3046634	0					
ANR	3046735	Identifier	k		3046634	1					
ANR	3046736	CFGEntryNode	ENTRY		3046634		True				
ANR	3046737	CFGExitNode	EXIT		3046634		True				
ANR	3046738	Symbol	img		3046634						
ANR	3046739	Symbol	c		3046634						
ANR	3046740	Symbol	stdout		3046634						
ANR	3046741	Symbol	image_find		3046634						
ANR	3046742	Symbol	name		3046634						
ANR	3046743	Symbol	comp_num		3046634						
ANR	3046744	Symbol	y		3046634						
ANR	3046745	Symbol	handle		3046634						
ANR	3046746	Symbol	k		3046634						
ANR	3046747	Symbol	device		3046634						
ANR	3046748	Symbol	m		3046634						
ANR	3046749	DeclStmt									
ANR	3046750	Decl							display_callback	display_callback	display
ANR	3046751	Function	avoid_windows_scale	552:0:17174:17565							
ANR	3046752	FunctionDef	avoid_windows_scale ()		3046751	0					
ANR	3046753	CompoundStatement		554:0:17212:17565	3046751	0					
ANR	3046754	IdentifierDeclStatement	"HMODULE hUser32 = LoadLibrary ( TEXT ( ""user32.dll"" ) ) ;"	557:4:17339:17388	3046751	0	True				
ANR	3046755	IdentifierDecl	"hUser32 = LoadLibrary ( TEXT ( ""user32.dll"" ) )"		3046751	0					
ANR	3046756	IdentifierDeclType	HMODULE		3046751	0					
ANR	3046757	Identifier	hUser32		3046751	1					
ANR	3046758	AssignmentExpression	"hUser32 = LoadLibrary ( TEXT ( ""user32.dll"" ) )"		3046751	2		=			
ANR	3046759	Identifier	hUser32		3046751	0					
ANR	3046760	CallExpression	"LoadLibrary ( TEXT ( ""user32.dll"" ) )"		3046751	1					
ANR	3046761	Callee	LoadLibrary		3046751	0					
ANR	3046762	Identifier	LoadLibrary		3046751	0					
ANR	3046763	ArgumentList	"TEXT ( ""user32.dll"" )"		3046751	1					
ANR	3046764	Argument	"TEXT ( ""user32.dll"" )"		3046751	0					
ANR	3046765	CallExpression	"TEXT ( ""user32.dll"" )"		3046751	0					
ANR	3046766	Callee	TEXT		3046751	0					
ANR	3046767	Identifier	TEXT		3046751	0					
ANR	3046768	ArgumentList	"""user32.dll"""		3046751	1					
ANR	3046769	Argument	"""user32.dll"""		3046751	0					
ANR	3046770	PrimaryExpression	"""user32.dll"""		3046751	0					
ANR	3046771	IdentifierDeclStatement	SetProcessDPIAwareFn * ptr ;	558:4:17394:17419	3046751	1	True				
ANR	3046772	IdentifierDecl	* ptr		3046751	0					
ANR	3046773	IdentifierDeclType	SetProcessDPIAwareFn *		3046751	0					
ANR	3046774	Identifier	ptr		3046751	1					
ANR	3046775	ExpressionStatement	"ptr = ( SetProcessDPIAwareFn * ) GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"	560:4:17426:17501	3046751	2	True				
ANR	3046776	AssignmentExpression	"ptr = ( SetProcessDPIAwareFn * ) GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"		3046751	0		=			
ANR	3046777	Identifier	ptr		3046751	0					
ANR	3046778	CastExpression	"( SetProcessDPIAwareFn * ) GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"		3046751	1					
ANR	3046779	CastTarget	SetProcessDPIAwareFn *		3046751	0					
ANR	3046780	CallExpression	"GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"		3046751	1					
ANR	3046781	Callee	GetProcAddress		3046751	0					
ANR	3046782	Identifier	GetProcAddress		3046751	0					
ANR	3046783	ArgumentList	hUser32		3046751	1					
ANR	3046784	Argument	hUser32		3046751	0					
ANR	3046785	Identifier	hUser32		3046751	0					
ANR	3046786	Argument	"""SetProcessDPIAware"""		3046751	1					
ANR	3046787	PrimaryExpression	"""SetProcessDPIAware"""		3046751	0					
ANR	3046788	IfStatement	if ( ptr != NULL )		3046751	3					
ANR	3046789	Condition	ptr != NULL	561:8:17511:17521	3046751	0	True				
ANR	3046790	EqualityExpression	ptr != NULL		3046751	0		!=			
ANR	3046791	Identifier	ptr		3046751	0					
ANR	3046792	Identifier	NULL		3046751	1					
ANR	3046793	ExpressionStatement	ptr ( )	562:8:17532:17537	3046751	1	True				
ANR	3046794	CallExpression	ptr ( )		3046751	0					
ANR	3046795	Callee	ptr		3046751	0					
ANR	3046796	Identifier	ptr		3046751	0					
ANR	3046797	ArgumentList			3046751	1					
ANR	3046798	ExpressionStatement	FreeLibrary ( hUser32 )	563:4:17543:17563	3046751	4	True				
ANR	3046799	CallExpression	FreeLibrary ( hUser32 )		3046751	0					
ANR	3046800	Callee	FreeLibrary		3046751	0					
ANR	3046801	Identifier	FreeLibrary		3046751	0					
ANR	3046802	ArgumentList	hUser32		3046751	1					
ANR	3046803	Argument	hUser32		3046751	0					
ANR	3046804	Identifier	hUser32		3046751	0					
ANR	3046805	ReturnType	static void		3046751	1					
ANR	3046806	Identifier	avoid_windows_scale		3046751	2					
ANR	3046807	ParameterList			3046751	3					
ANR	3046808	CFGEntryNode	ENTRY		3046751		True				
ANR	3046809	CFGExitNode	EXIT		3046751		True				
ANR	3046810	Symbol	NULL		3046751						
ANR	3046811	Symbol	LoadLibrary		3046751						
ANR	3046812	Symbol	GetProcAddress		3046751						
ANR	3046813	Symbol	hUser32		3046751						
ANR	3046814	Symbol	TEXT		3046751						
ANR	3046815	Symbol	ptr		3046751						
ANR	3046816	DeclStmt									
ANR	3046817	Decl							int	int	code
ANR	3046818	Decl							int	int	code1
ANR	3046819	DeclStmt									
ANR	3046820	Decl							int	int	exit_code
ANR	3046821	DeclStmt									
ANR	3046822	Decl							int	int	exit_status
ANR	3046823	DeclStmt									
ANR	3046824	Decl							int	int	nargc
ANR	3046825	DeclStmt									
ANR	3046826	Decl							char	char * *	nargv
ANR	3046827	DeclStmt									
ANR	3046828	Decl							char	char [ 256 ]	buf
ANR	3046829	DeclStmt									
ANR	3046830	Decl							char	char [ 64 ]	dformat
ANR	3046831	DeclStmt									
ANR	3046832	Decl							char	char [ 64 ]	ddpi
ANR	3046833	DeclStmt									
ANR	3046834	Decl							int	int	n
ANR	3046835	DeclStmt									
ANR	3046836	Decl							int	int	format
ANR	3046837	DeclStmt									
ANR	3046838	Decl							HDC	HDC	hdc
ANR	3046839	DeclStmt									
ANR	3046840	Decl							int	int	depth
ANR	3046841	Function	wmain	728:0:22564:23282							
ANR	3046842	FunctionDef	"wmain (int argc , wchar_t * argv [ ] , wchar_t * envp [ ])"		3046841	0					
ANR	3046843	CompoundStatement		728:54:22618:23282	3046841	0					
ANR	3046844	IdentifierDeclStatement	char * * nargv ;	730:4:22657:22669	3046841	0	True				
ANR	3046845	IdentifierDecl	* * nargv		3046841	0					
ANR	3046846	IdentifierDeclType	char * *		3046841	0					
ANR	3046847	Identifier	nargv		3046841	1					
ANR	3046848	IdentifierDeclStatement	"int i , code ;"	731:4:22675:22686	3046841	1	True				
ANR	3046849	IdentifierDecl	i		3046841	0					
ANR	3046850	IdentifierDeclType	int		3046841	0					
ANR	3046851	Identifier	i		3046841	1					
ANR	3046852	IdentifierDecl	code		3046841	1					
ANR	3046853	IdentifierDeclType	int		3046841	0					
ANR	3046854	Identifier	code		3046841	1					
ANR	3046855	ExpressionStatement	"nargv = calloc ( argc , sizeof ( nargv [ 0 ] ) )"	733:4:22693:22731	3046841	2	True				
ANR	3046856	AssignmentExpression	"nargv = calloc ( argc , sizeof ( nargv [ 0 ] ) )"		3046841	0		=			
ANR	3046857	Identifier	nargv		3046841	0					
ANR	3046858	CallExpression	"calloc ( argc , sizeof ( nargv [ 0 ] ) )"		3046841	1					
ANR	3046859	Callee	calloc		3046841	0					
ANR	3046860	Identifier	calloc		3046841	0					
ANR	3046861	ArgumentList	argc		3046841	1					
ANR	3046862	Argument	argc		3046841	0					
ANR	3046863	Identifier	argc		3046841	0					
ANR	3046864	Argument	sizeof ( nargv [ 0 ] )		3046841	1					
ANR	3046865	SizeofExpression	sizeof ( nargv [ 0 ] )		3046841	0					
ANR	3046866	Sizeof	sizeof		3046841	0					
ANR	3046867	ArrayIndexing	nargv [ 0 ]		3046841	1					
ANR	3046868	Identifier	nargv		3046841	0					
ANR	3046869	PrimaryExpression	0		3046841	1					
ANR	3046870	IfStatement	if ( nargv == NULL )		3046841	3					
ANR	3046871	Condition	nargv == NULL	734:8:22741:22753	3046841	0	True				
ANR	3046872	EqualityExpression	nargv == NULL		3046841	0		==			
ANR	3046873	Identifier	nargv		3046841	0					
ANR	3046874	Identifier	NULL		3046841	1					
ANR	3046875	GotoStatement	goto err ;	735:8:22764:22772	3046841	1	True				
ANR	3046876	Identifier	err		3046841	0					
ANR	3046877	ForStatement	for ( i = 0 ; i < argc ; i ++ )		3046841	4					
ANR	3046878	ForInit	i = 0 ;	736:9:22783:22786	3046841	0	True				
ANR	3046879	AssignmentExpression	i = 0		3046841	0		=			
ANR	3046880	Identifier	i		3046841	0					
ANR	3046881	PrimaryExpression	0		3046841	1					
ANR	3046882	Condition	i < argc	736:14:22788:22795	3046841	1	True				
ANR	3046883	RelationalExpression	i < argc		3046841	0		<			
ANR	3046884	Identifier	i		3046841	0					
ANR	3046885	Identifier	argc		3046841	1					
ANR	3046886	PostIncDecOperationExpression	i ++	736:24:22798:22800	3046841	2	True				
ANR	3046887	Identifier	i		3046841	0					
ANR	3046888	IncDec	++		3046841	1					
ANR	3046889	CompoundStatement		9:29:184:184	3046841	3					
ANR	3046890	ExpressionStatement	"nargv [ i ] = malloc ( wchar_to_utf8 ( NULL , argv [ i ] ) )"	737:8:22813:22860	3046841	0	True				
ANR	3046891	AssignmentExpression	"nargv [ i ] = malloc ( wchar_to_utf8 ( NULL , argv [ i ] ) )"		3046841	0		=			
ANR	3046892	ArrayIndexing	nargv [ i ]		3046841	0					
ANR	3046893	Identifier	nargv		3046841	0					
ANR	3046894	Identifier	i		3046841	1					
ANR	3046895	CallExpression	"malloc ( wchar_to_utf8 ( NULL , argv [ i ] ) )"		3046841	1					
ANR	3046896	Callee	malloc		3046841	0					
ANR	3046897	Identifier	malloc		3046841	0					
ANR	3046898	ArgumentList	"wchar_to_utf8 ( NULL , argv [ i ] )"		3046841	1					
ANR	3046899	Argument	"wchar_to_utf8 ( NULL , argv [ i ] )"		3046841	0					
ANR	3046900	CallExpression	"wchar_to_utf8 ( NULL , argv [ i ] )"		3046841	0					
ANR	3046901	Callee	wchar_to_utf8		3046841	0					
ANR	3046902	Identifier	wchar_to_utf8		3046841	0					
ANR	3046903	ArgumentList	NULL		3046841	1					
ANR	3046904	Argument	NULL		3046841	0					
ANR	3046905	Identifier	NULL		3046841	0					
ANR	3046906	Argument	argv [ i ]		3046841	1					
ANR	3046907	ArrayIndexing	argv [ i ]		3046841	0					
ANR	3046908	Identifier	argv		3046841	0					
ANR	3046909	Identifier	i		3046841	1					
ANR	3046910	IfStatement	if ( nargv [ i ] == NULL )		3046841	1					
ANR	3046911	Condition	nargv [ i ] == NULL	738:12:22874:22889	3046841	0	True				
ANR	3046912	EqualityExpression	nargv [ i ] == NULL		3046841	0		==			
ANR	3046913	ArrayIndexing	nargv [ i ]		3046841	0					
ANR	3046914	Identifier	nargv		3046841	0					
ANR	3046915	Identifier	i		3046841	1					
ANR	3046916	Identifier	NULL		3046841	1					
ANR	3046917	GotoStatement	goto err ;	739:12:22904:22912	3046841	1	True				
ANR	3046918	Identifier	err		3046841	0					
ANR	3046919	ExpressionStatement	"( void ) wchar_to_utf8 ( nargv [ i ] , argv [ i ] )"	740:8:22922:22960	3046841	2	True				
ANR	3046920	CastExpression	"( void ) wchar_to_utf8 ( nargv [ i ] , argv [ i ] )"		3046841	0					
ANR	3046921	CastTarget	void		3046841	0					
ANR	3046922	CallExpression	"wchar_to_utf8 ( nargv [ i ] , argv [ i ] )"		3046841	1					
ANR	3046923	Callee	wchar_to_utf8		3046841	0					
ANR	3046924	Identifier	wchar_to_utf8		3046841	0					
ANR	3046925	ArgumentList	nargv [ i ]		3046841	1					
ANR	3046926	Argument	nargv [ i ]		3046841	0					
ANR	3046927	ArrayIndexing	nargv [ i ]		3046841	0					
ANR	3046928	Identifier	nargv		3046841	0					
ANR	3046929	Identifier	i		3046841	1					
ANR	3046930	Argument	argv [ i ]		3046841	1					
ANR	3046931	ArrayIndexing	argv [ i ]		3046841	0					
ANR	3046932	Identifier	argv		3046841	0					
ANR	3046933	Identifier	i		3046841	1					
ANR	3046934	ExpressionStatement	"code = main_utf8 ( argc , nargv )"	742:4:22972:23001	3046841	5	True				
ANR	3046935	AssignmentExpression	"code = main_utf8 ( argc , nargv )"		3046841	0		=			
ANR	3046936	Identifier	code		3046841	0					
ANR	3046937	CallExpression	"main_utf8 ( argc , nargv )"		3046841	1					
ANR	3046938	Callee	main_utf8		3046841	0					
ANR	3046939	Identifier	main_utf8		3046841	0					
ANR	3046940	ArgumentList	argc		3046841	1					
ANR	3046941	Argument	argc		3046841	0					
ANR	3046942	Identifier	argc		3046841	0					
ANR	3046943	Argument	nargv		3046841	1					
ANR	3046944	Identifier	nargv		3046841	0					
ANR	3046945	IfStatement	if ( 0 )		3046841	6					
ANR	3046946	Condition	0	744:8:23012:23012	3046841	0	True				
ANR	3046947	PrimaryExpression	0		3046841	0					
ANR	3046948	CompoundStatement		17:11:396:396	3046841	1					
ANR	3046949	Label	err :	745:0:23017:23020	3046841	0	True				
ANR	3046950	Identifier	err		3046841	0					
ANR	3046951	ExpressionStatement	"fprintf ( stderr , ""Ghostscript failed to initialise due to malloc failure\\n"" )"	746:8:23030:23121	3046841	1	True				
ANR	3046952	CallExpression	"fprintf ( stderr , ""Ghostscript failed to initialise due to malloc failure\\n"" )"		3046841	0					
ANR	3046953	Callee	fprintf		3046841	0					
ANR	3046954	Identifier	fprintf		3046841	0					
ANR	3046955	ArgumentList	stderr		3046841	1					
ANR	3046956	Argument	stderr		3046841	0					
ANR	3046957	Identifier	stderr		3046841	0					
ANR	3046958	Argument	"""Ghostscript failed to initialise due to malloc failure\\n"""		3046841	1					
ANR	3046959	PrimaryExpression	"""Ghostscript failed to initialise due to malloc failure\\n"""		3046841	0					
ANR	3046960	ExpressionStatement	code = - 1	748:8:23131:23140	3046841	2	True				
ANR	3046961	AssignmentExpression	code = - 1		3046841	0		=			
ANR	3046962	Identifier	code		3046841	0					
ANR	3046963	UnaryOperationExpression	- 1		3046841	1					
ANR	3046964	UnaryOperator	-		3046841	0					
ANR	3046965	PrimaryExpression	1		3046841	1					
ANR	3046966	IfStatement	if ( nargv )		3046841	7					
ANR	3046967	Condition	nargv	751:8:23157:23161	3046841	0	True				
ANR	3046968	Identifier	nargv		3046841	0					
ANR	3046969	CompoundStatement		24:15:545:545	3046841	1					
ANR	3046970	ForStatement	for ( i = 0 ; i < argc ; i ++ )		3046841	0					
ANR	3046971	ForInit	i = 0 ;	752:13:23179:23182	3046841	0	True				
ANR	3046972	AssignmentExpression	i = 0		3046841	0		=			
ANR	3046973	Identifier	i		3046841	0					
ANR	3046974	PrimaryExpression	0		3046841	1					
ANR	3046975	Condition	i < argc	752:18:23184:23189	3046841	1	True				
ANR	3046976	RelationalExpression	i < argc		3046841	0		<			
ANR	3046977	Identifier	i		3046841	0					
ANR	3046978	Identifier	argc		3046841	1					
ANR	3046979	PostIncDecOperationExpression	i ++	752:26:23192:23194	3046841	2	True				
ANR	3046980	Identifier	i		3046841	0					
ANR	3046981	IncDec	++		3046841	1					
ANR	3046982	CompoundStatement		25:31:578:578	3046841	3					
ANR	3046983	ExpressionStatement	free ( nargv [ i ] )	753:12:23211:23225	3046841	0	True				
ANR	3046984	CallExpression	free ( nargv [ i ] )		3046841	0					
ANR	3046985	Callee	free		3046841	0					
ANR	3046986	Identifier	free		3046841	0					
ANR	3046987	ArgumentList	nargv [ i ]		3046841	1					
ANR	3046988	Argument	nargv [ i ]		3046841	0					
ANR	3046989	ArrayIndexing	nargv [ i ]		3046841	0					
ANR	3046990	Identifier	nargv		3046841	0					
ANR	3046991	Identifier	i		3046841	1					
ANR	3046992	ExpressionStatement	free ( nargv )	755:8:23245:23256	3046841	1	True				
ANR	3046993	CallExpression	free ( nargv )		3046841	0					
ANR	3046994	Callee	free		3046841	0					
ANR	3046995	Identifier	free		3046841	0					
ANR	3046996	ArgumentList	nargv		3046841	1					
ANR	3046997	Argument	nargv		3046841	0					
ANR	3046998	Identifier	nargv		3046841	0					
ANR	3046999	ReturnStatement	return code ;	758:4:23269:23280	3046841	8	True				
ANR	3047000	Identifier	code		3046841	0					
ANR	3047001	ReturnType	int		3046841	1					
ANR	3047002	Identifier	wmain		3046841	2					
ANR	3047003	ParameterList	"int argc , wchar_t * argv [ ] , wchar_t * envp [ ]"		3046841	3					
ANR	3047004	Parameter	int argc	728:10:22574:22581	3046841	0	True				
ANR	3047005	ParameterType	int		3046841	0					
ANR	3047006	Identifier	argc		3046841	1					
ANR	3047007	Parameter	wchar_t * argv [ ]	728:20:22584:22598	3046841	1	True				
ANR	3047008	ParameterType	wchar_t * [ ]		3046841	0					
ANR	3047009	Identifier	argv		3046841	1					
ANR	3047010	Parameter	wchar_t * envp [ ]	728:37:22601:22615	3046841	2	True				
ANR	3047011	ParameterType	wchar_t * [ ]		3046841	0					
ANR	3047012	Identifier	envp		3046841	1					
ANR	3047013	CFGEntryNode	ENTRY		3046841		True				
ANR	3047014	CFGExitNode	EXIT		3046841		True				
ANR	3047015	Symbol	argc		3046841						
ANR	3047016	Symbol	malloc		3046841						
ANR	3047017	Symbol	code		3046841						
ANR	3047018	Symbol	NULL		3046841						
ANR	3047019	Symbol	* nargv		3046841						
ANR	3047020	Symbol	i		3046841						
ANR	3047021	Symbol	* argv		3046841						
ANR	3047022	Symbol	calloc		3046841						
ANR	3047023	Symbol	envp		3046841						
ANR	3047024	Symbol	stderr		3046841						
ANR	3047025	Symbol	argv		3046841						
ANR	3047026	Symbol	wchar_to_utf8		3046841						
ANR	3047027	Symbol	* i		3046841						
ANR	3047028	Symbol	nargv		3046841						
ANR	3047029	Symbol	main_utf8		3046841						
