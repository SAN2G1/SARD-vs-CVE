command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8223949	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pl_plulfont.c								
ANR	8223950	DeclStmt									
ANR	8223951	Decl							IF_STATE	IF_STATE	IFS
ANR	8223952	DeclStmt									
ANR	8223953	Decl							PIF_STATE	PIF_STATE	pIFS
ANR	8223954	DeclStmt									
ANR	8223955	Decl							SW16	SW16 [ 16 ]	fcHndlPlAry
ANR	8223956	DeclStmt									
ANR	8223957	Decl							bool	bool	plugins_opened
ANR	8223958	DeclStmt									
ANR	8223959	Decl							const char	const char *	UFSTFONTDIR
ANR	8223960	DeclStmt									
ANR	8223961	Decl							const char	const char *	UFSTFCOS
ANR	8223962	DeclStmt									
ANR	8223963	Decl							const char	const char *	UFSTPLUGINS
ANR	8223964	Function	build_strs	88:0:2445:4767							
ANR	8223965	FunctionDef	"build_strs (gs_memory_t * mem , char * str , char separator)"		8223964	0					
ANR	8223966	CompoundStatement		90:0:2517:4767	8223964	0					
ANR	8223967	IdentifierDeclStatement	int i ;	91:4:2523:2528	8223964	0	True				
ANR	8223968	IdentifierDecl	i		8223964	0					
ANR	8223969	IdentifierDeclType	int		8223964	0					
ANR	8223970	Identifier	i		8223964	1					
ANR	8223971	IdentifierDeclStatement	char * start_path = str ;	92:4:2534:2556	8223964	1	True				
ANR	8223972	IdentifierDecl	* start_path = str		8223964	0					
ANR	8223973	IdentifierDeclType	char *		8223964	0					
ANR	8223974	Identifier	start_path		8223964	1					
ANR	8223975	AssignmentExpression	* start_path = str		8223964	2		=			
ANR	8223976	Identifier	str		8223964	0					
ANR	8223977	Identifier	str		8223964	1					
ANR	8223978	IdentifierDeclStatement	char * end_path = str ;	93:4:2562:2582	8223964	2	True				
ANR	8223979	IdentifierDecl	* end_path = str		8223964	0					
ANR	8223980	IdentifierDeclType	char *		8223964	0					
ANR	8223981	Identifier	end_path		8223964	1					
ANR	8223982	AssignmentExpression	* end_path = str		8223964	2		=			
ANR	8223983	Identifier	str		8223964	0					
ANR	8223984	Identifier	str		8223964	1					
ANR	8223985	IdentifierDeclStatement	char * * list ;	94:4:2588:2599	8223964	3	True				
ANR	8223986	IdentifierDecl	* * list		8223964	0					
ANR	8223987	IdentifierDeclType	char * *		8223964	0					
ANR	8223988	Identifier	list		8223964	1					
ANR	8223989	IfStatement	if ( ( str == NULL ) || ( str [ 0 ] == '\\0' ) )		8223964	4					
ANR	8223990	Condition	( str == NULL ) || ( str [ 0 ] == '\\0' )	97:8:2648:2680	8223964	0	True				
ANR	8223991	OrExpression	( str == NULL ) || ( str [ 0 ] == '\\0' )		8223964	0		||			
ANR	8223992	EqualityExpression	str == NULL		8223964	0		==			
ANR	8223993	Identifier	str		8223964	0					
ANR	8223994	Identifier	NULL		8223964	1					
ANR	8223995	EqualityExpression	str [ 0 ] == '\\0'		8223964	1		==			
ANR	8223996	ArrayIndexing	str [ 0 ]		8223964	0					
ANR	8223997	Identifier	str		8223964	0					
ANR	8223998	PrimaryExpression	0		8223964	1					
ANR	8223999	PrimaryExpression	'\\0'		8223964	1					
ANR	8224000	ReturnStatement	return NULL ;	98:8:2691:2702	8223964	1	True				
ANR	8224001	Identifier	NULL		8223964	0					
ANR	8224002	ForStatement	for ( i = 0 ; ; i ++ )		8223964	5					
ANR	8224003	ForInit	i = 0 ;	100:9:2714:2719	8223964	0	True				
ANR	8224004	AssignmentExpression	i = 0		8223964	0		=			
ANR	8224005	Identifier	i		8223964	0					
ANR	8224006	PrimaryExpression	0		8223964	1					
ANR	8224007	PostIncDecOperationExpression	i ++	100:17:2722:2724	8223964	1	True				
ANR	8224008	Identifier	i		8223964	0					
ANR	8224009	IncDec	++		8223964	1					
ANR	8224010	CompoundStatement		11:22:209:209	8223964	2					
ANR	8224011	WhileStatement	while ( * end_path != ( char ) NULL && * end_path != separator )		8223964	0					
ANR	8224012	Condition	* end_path != ( char ) NULL && * end_path != separator	102:15:2786:2834	8223964	0	True				
ANR	8224013	AndExpression	* end_path != ( char ) NULL && * end_path != separator		8223964	0		&&			
ANR	8224014	EqualityExpression	* end_path != ( char ) NULL		8223964	0		!=			
ANR	8224015	UnaryOperationExpression	* end_path		8223964	0					
ANR	8224016	UnaryOperator	*		8223964	0					
ANR	8224017	Identifier	end_path		8223964	1					
ANR	8224018	CastExpression	( char ) NULL		8223964	1					
ANR	8224019	CastTarget	char		8223964	0					
ANR	8224020	Identifier	NULL		8223964	1					
ANR	8224021	EqualityExpression	* end_path != separator		8223964	1		!=			
ANR	8224022	UnaryOperationExpression	* end_path		8223964	0					
ANR	8224023	UnaryOperator	*		8223964	0					
ANR	8224024	Identifier	end_path		8223964	1					
ANR	8224025	Identifier	separator		8223964	1					
ANR	8224026	ExpressionStatement	end_path ++	103:12:2849:2859	8223964	1	True				
ANR	8224027	PostIncDecOperationExpression	end_path ++		8223964	0					
ANR	8224028	Identifier	end_path		8223964	0					
ANR	8224029	IncDec	++		8223964	1					
ANR	8224030	IfStatement	if ( i == 0 )		8223964	1					
ANR	8224031	Condition	i == 0	105:12:2938:2943	8223964	0	True				
ANR	8224032	EqualityExpression	i == 0		8223964	0		==			
ANR	8224033	Identifier	i		8223964	0					
ANR	8224034	PrimaryExpression	0		8223964	1					
ANR	8224035	ExpressionStatement	"list = ( char * * ) gs_alloc_bytes ( mem , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"	107:12:2987:3267	8223964	1	True				
ANR	8224036	AssignmentExpression	"list = ( char * * ) gs_alloc_bytes ( mem , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8223964	0		=			
ANR	8224037	Identifier	list		8223964	0					
ANR	8224038	CastExpression	"( char * * ) gs_alloc_bytes ( mem , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8223964	1					
ANR	8224039	CastTarget	char * *		8223964	0					
ANR	8224040	CallExpression	"gs_alloc_bytes ( mem , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8223964	1					
ANR	8224041	Callee	gs_alloc_bytes		8223964	0					
ANR	8224042	Identifier	gs_alloc_bytes		8223964	0					
ANR	8224043	ArgumentList	mem		8223964	1					
ANR	8224044	Argument	mem		8223964	0					
ANR	8224045	Identifier	mem		8223964	0					
ANR	8224046	Argument	( ( i + 1 ) + 1 ) * sizeof ( char * )		8223964	1					
ANR	8224047	MultiplicativeExpression	( ( i + 1 ) + 1 ) * sizeof ( char * )		8223964	0		*			
ANR	8224048	AdditiveExpression	( i + 1 ) + 1		8223964	0		+			
ANR	8224049	AdditiveExpression	i + 1		8223964	0		+			
ANR	8224050	Identifier	i		8223964	0					
ANR	8224051	PrimaryExpression	1		8223964	1					
ANR	8224052	PrimaryExpression	1		8223964	1					
ANR	8224053	SizeofExpression	sizeof ( char * )		8223964	1					
ANR	8224054	Sizeof	sizeof		8223964	0					
ANR	8224055	SizeofOperand	char *		8223964	1					
ANR	8224056	Argument	"""build_strs"""		8223964	2					
ANR	8224057	PrimaryExpression	"""build_strs"""		8223964	0					
ANR	8224058	ElseStatement	else		8223964	0					
ANR	8224059	ExpressionStatement	"list = gs_resize_object ( mem , list , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"	114:12:3294:3612	8223964	0	True				
ANR	8224060	AssignmentExpression	"list = gs_resize_object ( mem , list , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8223964	0		=			
ANR	8224061	Identifier	list		8223964	0					
ANR	8224062	CallExpression	"gs_resize_object ( mem , list , ( ( i + 1 ) + 1 ) * sizeof ( char * ) , ""build_strs"" )"		8223964	1					
ANR	8224063	Callee	gs_resize_object		8223964	0					
ANR	8224064	Identifier	gs_resize_object		8223964	0					
ANR	8224065	ArgumentList	mem		8223964	1					
ANR	8224066	Argument	mem		8223964	0					
ANR	8224067	Identifier	mem		8223964	0					
ANR	8224068	Argument	list		8223964	1					
ANR	8224069	Identifier	list		8223964	0					
ANR	8224070	Argument	( ( i + 1 ) + 1 ) * sizeof ( char * )		8223964	2					
ANR	8224071	MultiplicativeExpression	( ( i + 1 ) + 1 ) * sizeof ( char * )		8223964	0		*			
ANR	8224072	AdditiveExpression	( i + 1 ) + 1		8223964	0		+			
ANR	8224073	AdditiveExpression	i + 1		8223964	0		+			
ANR	8224074	Identifier	i		8223964	0					
ANR	8224075	PrimaryExpression	1		8223964	1					
ANR	8224076	PrimaryExpression	1		8223964	1					
ANR	8224077	SizeofExpression	sizeof ( char * )		8223964	1					
ANR	8224078	Sizeof	sizeof		8223964	0					
ANR	8224079	SizeofOperand	char *		8223964	1					
ANR	8224080	Argument	"""build_strs"""		8223964	3					
ANR	8224081	PrimaryExpression	"""build_strs"""		8223964	0					
ANR	8224082	IfStatement	if ( list == NULL )		8223964	2					
ANR	8224083	Condition	list == NULL	120:12:3626:3637	8223964	0	True				
ANR	8224084	EqualityExpression	list == NULL		8223964	0		==			
ANR	8224085	Identifier	list		8223964	0					
ANR	8224086	Identifier	NULL		8223964	1					
ANR	8224087	CompoundStatement		31:26:1122:1122	8223964	1					
ANR	8224088	ExpressionStatement	"dmprintf ( mem , ""Fatal System Failure\\n"" )"	122:12:3726:3765	8223964	0	True				
ANR	8224089	CallExpression	"dmprintf ( mem , ""Fatal System Failure\\n"" )"		8223964	0					
ANR	8224090	Callee	dmprintf		8223964	0					
ANR	8224091	Identifier	dmprintf		8223964	0					
ANR	8224092	ArgumentList	mem		8223964	1					
ANR	8224093	Argument	mem		8223964	0					
ANR	8224094	Identifier	mem		8223964	0					
ANR	8224095	Argument	"""Fatal System Failure\\n"""		8223964	1					
ANR	8224096	PrimaryExpression	"""Fatal System Failure\\n"""		8223964	0					
ANR	8224097	ReturnStatement	return NULL ;	123:12:3779:3790	8223964	1	True				
ANR	8224098	Identifier	NULL		8223964	0					
ANR	8224099	ExpressionStatement	list [ i + 1 ] = ( char * ) NULL	126:8:3854:3880	8223964	3	True				
ANR	8224100	AssignmentExpression	list [ i + 1 ] = ( char * ) NULL		8223964	0		=			
ANR	8224101	ArrayIndexing	list [ i + 1 ]		8223964	0					
ANR	8224102	Identifier	list		8223964	0					
ANR	8224103	AdditiveExpression	i + 1		8223964	1		+			
ANR	8224104	Identifier	i		8223964	0					
ANR	8224105	PrimaryExpression	1		8223964	1					
ANR	8224106	CastExpression	( char * ) NULL		8223964	1					
ANR	8224107	CastTarget	char *		8223964	0					
ANR	8224108	Identifier	NULL		8223964	1					
ANR	8224109	ExpressionStatement	"list [ i ] = gs_alloc_bytes ( mem , end_path - start_path + 1 , ""build_strs"" )"	128:8:3934:4087	8223964	4	True				
ANR	8224110	AssignmentExpression	"list [ i ] = gs_alloc_bytes ( mem , end_path - start_path + 1 , ""build_strs"" )"		8223964	0		=			
ANR	8224111	ArrayIndexing	list [ i ]		8223964	0					
ANR	8224112	Identifier	list		8223964	0					
ANR	8224113	Identifier	i		8223964	1					
ANR	8224114	CallExpression	"gs_alloc_bytes ( mem , end_path - start_path + 1 , ""build_strs"" )"		8223964	1					
ANR	8224115	Callee	gs_alloc_bytes		8223964	0					
ANR	8224116	Identifier	gs_alloc_bytes		8223964	0					
ANR	8224117	ArgumentList	mem		8223964	1					
ANR	8224118	Argument	mem		8223964	0					
ANR	8224119	Identifier	mem		8223964	0					
ANR	8224120	Argument	end_path - start_path + 1		8223964	1					
ANR	8224121	AdditiveExpression	end_path - start_path + 1		8223964	0		-			
ANR	8224122	Identifier	end_path		8223964	0					
ANR	8224123	AdditiveExpression	start_path + 1		8223964	1		+			
ANR	8224124	Identifier	start_path		8223964	0					
ANR	8224125	PrimaryExpression	1		8223964	1					
ANR	8224126	Argument	"""build_strs"""		8223964	2					
ANR	8224127	PrimaryExpression	"""build_strs"""		8223964	0					
ANR	8224128	IfStatement	if ( list [ i ] == NULL )		8223964	5					
ANR	8224129	Condition	list [ i ] == NULL	132:12:4102:4116	8223964	0	True				
ANR	8224130	EqualityExpression	list [ i ] == NULL		8223964	0		==			
ANR	8224131	ArrayIndexing	list [ i ]		8223964	0					
ANR	8224132	Identifier	list		8223964	0					
ANR	8224133	Identifier	i		8223964	1					
ANR	8224134	Identifier	NULL		8223964	1					
ANR	8224135	CompoundStatement		43:29:1601:1601	8223964	1					
ANR	8224136	ExpressionStatement	"dmprintf ( mem , ""Fatal System Failure\\n"" )"	134:12:4205:4244	8223964	0	True				
ANR	8224137	CallExpression	"dmprintf ( mem , ""Fatal System Failure\\n"" )"		8223964	0					
ANR	8224138	Callee	dmprintf		8223964	0					
ANR	8224139	Identifier	dmprintf		8223964	0					
ANR	8224140	ArgumentList	mem		8223964	1					
ANR	8224141	Argument	mem		8223964	0					
ANR	8224142	Identifier	mem		8223964	0					
ANR	8224143	Argument	"""Fatal System Failure\\n"""		8223964	1					
ANR	8224144	PrimaryExpression	"""Fatal System Failure\\n"""		8223964	0					
ANR	8224145	ReturnStatement	return NULL ;	135:12:4258:4269	8223964	1	True				
ANR	8224146	Identifier	NULL		8223964	0					
ANR	8224147	ExpressionStatement	"memcpy ( list [ i ] , start_path , end_path - start_path )"	138:8:4290:4340	8223964	6	True				
ANR	8224148	CallExpression	"memcpy ( list [ i ] , start_path , end_path - start_path )"		8223964	0					
ANR	8224149	Callee	memcpy		8223964	0					
ANR	8224150	Identifier	memcpy		8223964	0					
ANR	8224151	ArgumentList	list [ i ]		8223964	1					
ANR	8224152	Argument	list [ i ]		8223964	0					
ANR	8224153	ArrayIndexing	list [ i ]		8223964	0					
ANR	8224154	Identifier	list		8223964	0					
ANR	8224155	Identifier	i		8223964	1					
ANR	8224156	Argument	start_path		8223964	1					
ANR	8224157	Identifier	start_path		8223964	0					
ANR	8224158	Argument	end_path - start_path		8223964	2					
ANR	8224159	AdditiveExpression	end_path - start_path		8223964	0		-			
ANR	8224160	Identifier	end_path		8223964	0					
ANR	8224161	Identifier	start_path		8223964	1					
ANR	8224162	ExpressionStatement	list [ i ] [ end_path - start_path ] = ( char ) NULL	139:8:4350:4393	8223964	7	True				
ANR	8224163	AssignmentExpression	list [ i ] [ end_path - start_path ] = ( char ) NULL		8223964	0		=			
ANR	8224164	ArrayIndexing	list [ i ] [ end_path - start_path ]		8223964	0					
ANR	8224165	ArrayIndexing	list [ i ]		8223964	0					
ANR	8224166	Identifier	list		8223964	0					
ANR	8224167	Identifier	i		8223964	1					
ANR	8224168	AdditiveExpression	end_path - start_path		8223964	1		-			
ANR	8224169	Identifier	end_path		8223964	0					
ANR	8224170	Identifier	start_path		8223964	1					
ANR	8224171	CastExpression	( char ) NULL		8223964	1					
ANR	8224172	CastTarget	char		8223964	0					
ANR	8224173	Identifier	NULL		8223964	1					
ANR	8224174	IfStatement	if ( * end_path == ( char ) NULL )		8223964	8					
ANR	8224175	Condition	* end_path == ( char ) NULL	141:12:4408:4430	8223964	0	True				
ANR	8224176	EqualityExpression	* end_path == ( char ) NULL		8223964	0		==			
ANR	8224177	UnaryOperationExpression	* end_path		8223964	0					
ANR	8224178	UnaryOperator	*		8223964	0					
ANR	8224179	Identifier	end_path		8223964	1					
ANR	8224180	CastExpression	( char ) NULL		8223964	1					
ANR	8224181	CastTarget	char		8223964	0					
ANR	8224182	Identifier	NULL		8223964	1					
ANR	8224183	BreakStatement	break ;	142:12:4445:4450	8223964	1	True				
ANR	8224184	ElseStatement	else		8223964	0					
ANR	8224185	CompoundStatement		54:13:1971:1971	8223964	0					
ANR	8224186	ExpressionStatement	start_path = end_path + 1	144:12:4547:4572	8223964	0	True				
ANR	8224187	AssignmentExpression	start_path = end_path + 1		8223964	0		=			
ANR	8224188	Identifier	start_path		8223964	0					
ANR	8224189	AdditiveExpression	end_path + 1		8223964	1		+			
ANR	8224190	Identifier	end_path		8223964	0					
ANR	8224191	PrimaryExpression	1		8223964	1					
ANR	8224192	ExpressionStatement	end_path = start_path	145:12:4586:4607	8223964	1	True				
ANR	8224193	AssignmentExpression	end_path = start_path		8223964	0		=			
ANR	8224194	Identifier	end_path		8223964	0					
ANR	8224195	Identifier	start_path		8223964	1					
ANR	8224196	IfStatement	if ( * end_path == '\\0' )		8223964	2					
ANR	8224197	Condition	* end_path == '\\0'	147:16:4692:4708	8223964	0	True				
ANR	8224198	EqualityExpression	* end_path == '\\0'		8223964	0		==			
ANR	8224199	UnaryOperationExpression	* end_path		8223964	0					
ANR	8224200	UnaryOperator	*		8223964	0					
ANR	8224201	Identifier	end_path		8223964	1					
ANR	8224202	PrimaryExpression	'\\0'		8223964	1					
ANR	8224203	BreakStatement	break ;	148:16:4727:4732	8223964	1	True				
ANR	8224204	ReturnStatement	return list ;	151:4:4754:4765	8223964	6	True				
ANR	8224205	Identifier	list		8223964	0					
ANR	8224206	ReturnType	static char * *		8223964	1					
ANR	8224207	Identifier	build_strs		8223964	2					
ANR	8224208	ParameterList	"gs_memory_t * mem , char * str , char separator"		8223964	3					
ANR	8224209	Parameter	gs_memory_t * mem	89:11:2471:2487	8223964	0	True				
ANR	8224210	ParameterType	gs_memory_t *		8223964	0					
ANR	8224211	Identifier	mem		8223964	1					
ANR	8224212	Parameter	char * str	89:30:2490:2498	8223964	1	True				
ANR	8224213	ParameterType	char *		8223964	0					
ANR	8224214	Identifier	str		8223964	1					
ANR	8224215	Parameter	char separator	89:41:2501:2514	8223964	2	True				
ANR	8224216	ParameterType	char		8223964	0					
ANR	8224217	Identifier	separator		8223964	1					
ANR	8224218	CFGEntryNode	ENTRY		8223964		True				
ANR	8224219	CFGExitNode	EXIT		8223964		True				
ANR	8224220	InfiniteForNode	true		8223964		True				
ANR	8224221	Symbol	gs_alloc_bytes		8223964						
ANR	8224222	Symbol	* * i		8223964						
ANR	8224223	Symbol	NULL		8223964						
ANR	8224224	Symbol	i		8223964						
ANR	8224225	Symbol	gs_resize_object		8223964						
ANR	8224226	Symbol	list		8223964						
ANR	8224227	Symbol	separator		8223964						
ANR	8224228	Symbol	* end_path		8223964						
ANR	8224229	Symbol	* start_path		8223964						
ANR	8224230	Symbol	str		8223964						
ANR	8224231	Symbol	* i		8223964						
ANR	8224232	Symbol	* * list		8223964						
ANR	8224233	Symbol	mem		8223964						
ANR	8224234	Symbol	* list		8223964						
ANR	8224235	Symbol	start_path		8223964						
ANR	8224236	Symbol	* str		8223964						
ANR	8224237	Symbol	end_path		8223964						
ANR	8224238	Function	free_strs	154:0:4770:5079							
ANR	8224239	FunctionDef	"free_strs (gs_memory_t * mem , char * * str_of_strs)"		8224238	0					
ANR	8224240	CompoundStatement		156:0:4831:5079	8224238	0					
ANR	8224241	IdentifierDeclStatement	int i ;	157:4:4837:4842	8224238	0	True				
ANR	8224242	IdentifierDecl	i		8224238	0					
ANR	8224243	IdentifierDeclType	int		8224238	0					
ANR	8224244	Identifier	i		8224238	1					
ANR	8224245	ForStatement	for ( i = 0 ; str_of_strs [ i ] ; i ++ )		8224238	1					
ANR	8224246	ForInit	i = 0 ;	159:9:4854:4859	8224238	0	True				
ANR	8224247	AssignmentExpression	i = 0		8224238	0		=			
ANR	8224248	Identifier	i		8224238	0					
ANR	8224249	PrimaryExpression	0		8224238	1					
ANR	8224250	Condition	str_of_strs [ i ]	159:16:4861:4874	8224238	1	True				
ANR	8224251	ArrayIndexing	str_of_strs [ i ]		8224238	0					
ANR	8224252	Identifier	str_of_strs		8224238	0					
ANR	8224253	Identifier	i		8224238	1					
ANR	8224254	PostIncDecOperationExpression	i ++	159:32:4877:4879	8224238	2	True				
ANR	8224255	Identifier	i		8224238	0					
ANR	8224256	IncDec	++		8224238	1					
ANR	8224257	ExpressionStatement	"gs_free_object ( mem , str_of_strs [ i ] , ""free_strs"" )"	161:8:4922:4970	8224238	3	True				
ANR	8224258	CallExpression	"gs_free_object ( mem , str_of_strs [ i ] , ""free_strs"" )"		8224238	0					
ANR	8224259	Callee	gs_free_object		8224238	0					
ANR	8224260	Identifier	gs_free_object		8224238	0					
ANR	8224261	ArgumentList	mem		8224238	1					
ANR	8224262	Argument	mem		8224238	0					
ANR	8224263	Identifier	mem		8224238	0					
ANR	8224264	Argument	str_of_strs [ i ]		8224238	1					
ANR	8224265	ArrayIndexing	str_of_strs [ i ]		8224238	0					
ANR	8224266	Identifier	str_of_strs		8224238	0					
ANR	8224267	Identifier	i		8224238	1					
ANR	8224268	Argument	"""free_strs"""		8224238	2					
ANR	8224269	PrimaryExpression	"""free_strs"""		8224238	0					
ANR	8224270	ExpressionStatement	"gs_free_object ( mem , str_of_strs , ""free_strs"" )"	163:4:5019:5064	8224238	2	True				
ANR	8224271	CallExpression	"gs_free_object ( mem , str_of_strs , ""free_strs"" )"		8224238	0					
ANR	8224272	Callee	gs_free_object		8224238	0					
ANR	8224273	Identifier	gs_free_object		8224238	0					
ANR	8224274	ArgumentList	mem		8224238	1					
ANR	8224275	Argument	mem		8224238	0					
ANR	8224276	Identifier	mem		8224238	0					
ANR	8224277	Argument	str_of_strs		8224238	1					
ANR	8224278	Identifier	str_of_strs		8224238	0					
ANR	8224279	Argument	"""free_strs"""		8224238	2					
ANR	8224280	PrimaryExpression	"""free_strs"""		8224238	0					
ANR	8224281	ReturnStatement	return ;	164:4:5070:5076	8224238	3	True				
ANR	8224282	ReturnType	static void		8224238	1					
ANR	8224283	Identifier	free_strs		8224238	2					
ANR	8224284	ParameterList	"gs_memory_t * mem , char * * str_of_strs"		8224238	3					
ANR	8224285	Parameter	gs_memory_t * mem	155:10:4792:4808	8224238	0	True				
ANR	8224286	ParameterType	gs_memory_t *		8224238	0					
ANR	8224287	Identifier	mem		8224238	1					
ANR	8224288	Parameter	char * * str_of_strs	155:29:4811:4828	8224238	1	True				
ANR	8224289	ParameterType	char * *		8224238	0					
ANR	8224290	Identifier	str_of_strs		8224238	1					
ANR	8224291	CFGEntryNode	ENTRY		8224238		True				
ANR	8224292	CFGExitNode	EXIT		8224238		True				
ANR	8224293	Symbol	str_of_strs		8224238						
ANR	8224294	Symbol	* i		8224238						
ANR	8224295	Symbol	mem		8224238						
ANR	8224296	Symbol	* str_of_strs		8224238						
ANR	8224297	Symbol	i		8224238						
ANR	8224298	Function	pl_ufst_get_list	172:0:5241:5607							
ANR	8224299	FunctionDef	"pl_ufst_get_list (gs_memory_t * mem , char * key , char * defaultval)"		8224298	0					
ANR	8224300	CompoundStatement		174:0:5321:5607	8224298	0					
ANR	8224301	IdentifierDeclStatement	char pathname [ MAXPATHLEN ] ;	175:4:5327:5352	8224298	0	True				
ANR	8224302	IdentifierDecl	pathname [ MAXPATHLEN ]		8224298	0					
ANR	8224303	IdentifierDeclType	char [ MAXPATHLEN ]		8224298	0					
ANR	8224304	Identifier	pathname		8224298	1					
ANR	8224305	Identifier	MAXPATHLEN		8224298	2					
ANR	8224306	IdentifierDeclStatement	int pathlen = sizeof ( pathname ) ;	177:4:5359:5389	8224298	1	True				
ANR	8224307	IdentifierDecl	pathlen = sizeof ( pathname )		8224298	0					
ANR	8224308	IdentifierDeclType	int		8224298	0					
ANR	8224309	Identifier	pathlen		8224298	1					
ANR	8224310	AssignmentExpression	pathlen = sizeof ( pathname )		8224298	2		=			
ANR	8224311	Identifier	pathlen		8224298	0					
ANR	8224312	SizeofExpression	sizeof ( pathname )		8224298	1					
ANR	8224313	Sizeof	sizeof		8224298	0					
ANR	8224314	SizeofOperand	pathname		8224298	1					
ANR	8224315	IfStatement	"if ( gp_getenv ( key , pathname , & pathlen ) != 0 )"		8224298	2					
ANR	8224316	Condition	"gp_getenv ( key , pathname , & pathlen ) != 0"	179:8:5400:5438	8224298	0	True				
ANR	8224317	EqualityExpression	"gp_getenv ( key , pathname , & pathlen ) != 0"		8224298	0		!=			
ANR	8224318	CallExpression	"gp_getenv ( key , pathname , & pathlen )"		8224298	0					
ANR	8224319	Callee	gp_getenv		8224298	0					
ANR	8224320	Identifier	gp_getenv		8224298	0					
ANR	8224321	ArgumentList	key		8224298	1					
ANR	8224322	Argument	key		8224298	0					
ANR	8224323	Identifier	key		8224298	0					
ANR	8224324	Argument	pathname		8224298	1					
ANR	8224325	Identifier	pathname		8224298	0					
ANR	8224326	Argument	& pathlen		8224298	2					
ANR	8224327	UnaryOperationExpression	& pathlen		8224298	0					
ANR	8224328	UnaryOperator	&		8224298	0					
ANR	8224329	Identifier	pathlen		8224298	1					
ANR	8224330	PrimaryExpression	0		8224298	1					
ANR	8224331	ReturnStatement	"return build_strs ( mem , defaultval , ':' ) ;"	181:8:5486:5525	8224298	1	True				
ANR	8224332	CallExpression	"build_strs ( mem , defaultval , ':' )"		8224298	0					
ANR	8224333	Callee	build_strs		8224298	0					
ANR	8224334	Identifier	build_strs		8224298	0					
ANR	8224335	ArgumentList	mem		8224298	1					
ANR	8224336	Argument	mem		8224298	0					
ANR	8224337	Identifier	mem		8224298	0					
ANR	8224338	Argument	defaultval		8224298	1					
ANR	8224339	Identifier	defaultval		8224298	0					
ANR	8224340	Argument	':'		8224298	2					
ANR	8224341	PrimaryExpression	':'		8224298	0					
ANR	8224342	ElseStatement	else		8224298	0					
ANR	8224343	ReturnStatement	"return build_strs ( mem , pathname , gp_file_name_list_separator ) ;"	183:8:5544:5605	8224298	0	True				
ANR	8224344	CallExpression	"build_strs ( mem , pathname , gp_file_name_list_separator )"		8224298	0					
ANR	8224345	Callee	build_strs		8224298	0					
ANR	8224346	Identifier	build_strs		8224298	0					
ANR	8224347	ArgumentList	mem		8224298	1					
ANR	8224348	Argument	mem		8224298	0					
ANR	8224349	Identifier	mem		8224298	0					
ANR	8224350	Argument	pathname		8224298	1					
ANR	8224351	Identifier	pathname		8224298	0					
ANR	8224352	Argument	gp_file_name_list_separator		8224298	2					
ANR	8224353	Identifier	gp_file_name_list_separator		8224298	0					
ANR	8224354	ReturnType	static char * *		8224298	1					
ANR	8224355	Identifier	pl_ufst_get_list		8224298	2					
ANR	8224356	ParameterList	"gs_memory_t * mem , char * key , char * defaultval"		8224298	3					
ANR	8224357	Parameter	gs_memory_t * mem	173:17:5273:5289	8224298	0	True				
ANR	8224358	ParameterType	gs_memory_t *		8224298	0					
ANR	8224359	Identifier	mem		8224298	1					
ANR	8224360	Parameter	char * key	173:36:5292:5300	8224298	1	True				
ANR	8224361	ParameterType	char *		8224298	0					
ANR	8224362	Identifier	key		8224298	1					
ANR	8224363	Parameter	char * defaultval	173:47:5303:5318	8224298	2	True				
ANR	8224364	ParameterType	char *		8224298	0					
ANR	8224365	Identifier	defaultval		8224298	1					
ANR	8224366	CFGEntryNode	ENTRY		8224298		True				
ANR	8224367	CFGExitNode	EXIT		8224298		True				
ANR	8224368	Symbol	defaultval		8224298						
ANR	8224369	Symbol	pathlen		8224298						
ANR	8224370	Symbol	mem		8224298						
ANR	8224371	Symbol	build_strs		8224298						
ANR	8224372	Symbol	& pathlen		8224298						
ANR	8224373	Symbol	gp_getenv		8224298						
ANR	8224374	Symbol	gp_file_name_list_separator		8224298						
ANR	8224375	Symbol	key		8224298						
ANR	8224376	Symbol	pathname		8224298						
ANR	8224377	Function	pl_ufst_root_dir	186:0:5610:5880							
ANR	8224378	FunctionDef	"pl_ufst_root_dir (char * pathname , int pathlen)"		8224377	0					
ANR	8224379	CompoundStatement		188:0:5661:5880	8224377	0					
ANR	8224380	IfStatement	"if ( gp_getenv ( ""UFSTFONTDIR"" , pathname , & pathlen ) != 0 )"		8224377	0					
ANR	8224381	Condition	"gp_getenv ( ""UFSTFONTDIR"" , pathname , & pathlen ) != 0"	191:8:5778:5826	8224377	0	True				
ANR	8224382	EqualityExpression	"gp_getenv ( ""UFSTFONTDIR"" , pathname , & pathlen ) != 0"		8224377	0		!=			
ANR	8224383	CallExpression	"gp_getenv ( ""UFSTFONTDIR"" , pathname , & pathlen )"		8224377	0					
ANR	8224384	Callee	gp_getenv		8224377	0					
ANR	8224385	Identifier	gp_getenv		8224377	0					
ANR	8224386	ArgumentList	"""UFSTFONTDIR"""		8224377	1					
ANR	8224387	Argument	"""UFSTFONTDIR"""		8224377	0					
ANR	8224388	PrimaryExpression	"""UFSTFONTDIR"""		8224377	0					
ANR	8224389	Argument	pathname		8224377	1					
ANR	8224390	Identifier	pathname		8224377	0					
ANR	8224391	Argument	& pathlen		8224377	2					
ANR	8224392	UnaryOperationExpression	& pathlen		8224377	0					
ANR	8224393	UnaryOperator	&		8224377	0					
ANR	8224394	Identifier	pathlen		8224377	1					
ANR	8224395	PrimaryExpression	0		8224377	1					
ANR	8224396	ExpressionStatement	"strcpy ( pathname , UFSTFONTDIR )"	192:8:5837:5866	8224377	1	True				
ANR	8224397	CallExpression	"strcpy ( pathname , UFSTFONTDIR )"		8224377	0					
ANR	8224398	Callee	strcpy		8224377	0					
ANR	8224399	Identifier	strcpy		8224377	0					
ANR	8224400	ArgumentList	pathname		8224377	1					
ANR	8224401	Argument	pathname		8224377	0					
ANR	8224402	Identifier	pathname		8224377	0					
ANR	8224403	Argument	UFSTFONTDIR		8224377	1					
ANR	8224404	Identifier	UFSTFONTDIR		8224377	0					
ANR	8224405	ReturnStatement	return ;	193:4:5872:5878	8224377	1	True				
ANR	8224406	ReturnType	void		8224377	1					
ANR	8224407	Identifier	pl_ufst_root_dir		8224377	2					
ANR	8224408	ParameterList	"char * pathname , int pathlen"		8224377	3					
ANR	8224409	Parameter	char * pathname	187:17:5632:5645	8224377	0	True				
ANR	8224410	ParameterType	char *		8224377	0					
ANR	8224411	Identifier	pathname		8224377	1					
ANR	8224412	Parameter	int pathlen	187:33:5648:5658	8224377	1	True				
ANR	8224413	ParameterType	int		8224377	0					
ANR	8224414	Identifier	pathlen		8224377	1					
ANR	8224415	CFGEntryNode	ENTRY		8224377		True				
ANR	8224416	CFGExitNode	EXIT		8224377		True				
ANR	8224417	Symbol	UFSTFONTDIR		8224377						
ANR	8224418	Symbol	pathlen		8224377						
ANR	8224419	Symbol	& pathlen		8224377						
ANR	8224420	Symbol	gp_getenv		8224377						
ANR	8224421	Symbol	pathname		8224377						
ANR	8224422	Function	pl_check_fonts	198:0:5962:7727							
ANR	8224423	FunctionDef	"pl_check_fonts (const gs_memory_t * mem , pl_dict_t * pfontdict , bool use_unicode_names_for_keys)"		8224422	0					
ANR	8224424	CompoundStatement		201:0:6085:7727	8224422	0					
ANR	8224425	IdentifierDeclStatement	int j ;	202:4:6091:6096	8224422	0	True				
ANR	8224426	IdentifierDecl	j		8224422	0					
ANR	8224427	IdentifierDeclType	int		8224422	0					
ANR	8224428	Identifier	j		8224422	1					
ANR	8224429	ForStatement	for ( j = 0 ; strlen ( resident_table [ j ] . full_font_name ) ; j ++ )		8224422	1					
ANR	8224430	ForInit	j = 0 ;	204:9:6108:6113	8224422	0	True				
ANR	8224431	AssignmentExpression	j = 0		8224422	0		=			
ANR	8224432	Identifier	j		8224422	0					
ANR	8224433	PrimaryExpression	0		8224422	1					
ANR	8224434	Condition	strlen ( resident_table [ j ] . full_font_name )	204:16:6115:6154	8224422	1	True				
ANR	8224435	CallExpression	strlen ( resident_table [ j ] . full_font_name )		8224422	0					
ANR	8224436	Callee	strlen		8224422	0					
ANR	8224437	Identifier	strlen		8224422	0					
ANR	8224438	ArgumentList	resident_table [ j ] . full_font_name		8224422	1					
ANR	8224439	Argument	resident_table [ j ] . full_font_name		8224422	0					
ANR	8224440	MemberAccess	resident_table [ j ] . full_font_name		8224422	0					
ANR	8224441	ArrayIndexing	resident_table [ j ]		8224422	0					
ANR	8224442	Identifier	resident_table		8224422	0					
ANR	8224443	Identifier	j		8224422	1					
ANR	8224444	Identifier	full_font_name		8224422	1					
ANR	8224445	PostIncDecOperationExpression	j ++	204:58:6157:6159	8224422	2	True				
ANR	8224446	Identifier	j		8224422	0					
ANR	8224447	IncDec	++		8224422	1					
ANR	8224448	CompoundStatement		5:8:86:97	8224422	3					
ANR	8224449	IdentifierDeclStatement	void * value ;	205:8:6172:6183	8224422	0	True				
ANR	8224450	IdentifierDecl	* value		8224422	0					
ANR	8224451	IdentifierDeclType	void *		8224422	0					
ANR	8224452	Identifier	value		8224422	1					
ANR	8224453	IfStatement	if ( use_unicode_names_for_keys )		8224422	1					
ANR	8224454	Condition	use_unicode_names_for_keys	208:12:6253:6278	8224422	0	True				
ANR	8224455	Identifier	use_unicode_names_for_keys		8224422	0					
ANR	8224456	CompoundStatement		8:40:195:195	8224422	1					
ANR	8224457	IfStatement	"if ( ! pl_dict_lookup ( pfontdict , resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL ) )"		8224422	0					
ANR	8224458	Condition	"! pl_dict_lookup ( pfontdict , resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"	209:16:6299:6552	8224422	0	True				
ANR	8224459	UnaryOperationExpression	"! pl_dict_lookup ( pfontdict , resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"		8224422	0					
ANR	8224460	UnaryOperator	!		8224422	0					
ANR	8224461	CallExpression	"pl_dict_lookup ( pfontdict , resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"		8224422	1					
ANR	8224462	Callee	pl_dict_lookup		8224422	0					
ANR	8224463	Identifier	pl_dict_lookup		8224422	0					
ANR	8224464	ArgumentList	pfontdict		8224422	1					
ANR	8224465	Argument	pfontdict		8224422	0					
ANR	8224466	Identifier	pfontdict		8224422	0					
ANR	8224467	Argument	resident_table [ j ] . unicode_fontname		8224422	1					
ANR	8224468	MemberAccess	resident_table [ j ] . unicode_fontname		8224422	0					
ANR	8224469	ArrayIndexing	resident_table [ j ]		8224422	0					
ANR	8224470	Identifier	resident_table		8224422	0					
ANR	8224471	Identifier	j		8224422	1					
ANR	8224472	Identifier	unicode_fontname		8224422	1					
ANR	8224473	Argument	sizeof ( resident_table [ j ] . unicode_fontname )		8224422	2					
ANR	8224474	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname )		8224422	0					
ANR	8224475	Sizeof	sizeof		8224422	0					
ANR	8224476	MemberAccess	resident_table [ j ] . unicode_fontname		8224422	1					
ANR	8224477	ArrayIndexing	resident_table [ j ]		8224422	0					
ANR	8224478	Identifier	resident_table		8224422	0					
ANR	8224479	Identifier	j		8224422	1					
ANR	8224480	Identifier	unicode_fontname		8224422	1					
ANR	8224481	Argument	& value		8224422	3					
ANR	8224482	UnaryOperationExpression	& value		8224422	0					
ANR	8224483	UnaryOperator	&		8224422	0					
ANR	8224484	Identifier	value		8224422	1					
ANR	8224485	Argument	true		8224422	4					
ANR	8224486	Identifier	true		8224422	0					
ANR	8224487	Argument	NULL		8224422	5					
ANR	8224488	Identifier	NULL		8224422	0					
ANR	8224489	CompoundStatement		14:16:514:519	8224422	1					
ANR	8224490	IdentifierDeclStatement	int i ;	214:16:6600:6605	8224422	0	True				
ANR	8224491	IdentifierDecl	i		8224422	0					
ANR	8224492	IdentifierDeclType	int		8224422	0					
ANR	8224493	Identifier	i		8224422	1					
ANR	8224494	ExpressionStatement	"dmprintf ( mem , ""Font with unicode key: "" )"	216:16:6624:6664	8224422	1	True				
ANR	8224495	CallExpression	"dmprintf ( mem , ""Font with unicode key: "" )"		8224422	0					
ANR	8224496	Callee	dmprintf		8224422	0					
ANR	8224497	Identifier	dmprintf		8224422	0					
ANR	8224498	ArgumentList	mem		8224422	1					
ANR	8224499	Argument	mem		8224422	0					
ANR	8224500	Identifier	mem		8224422	0					
ANR	8224501	Argument	"""Font with unicode key: """		8224422	1					
ANR	8224502	PrimaryExpression	"""Font with unicode key: """		8224422	0					
ANR	8224503	ForStatement	for ( i = 0 ; i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] ) ; i ++ )		8224422	2					
ANR	8224504	ForInit	i = 0 ;	217:21:6687:6692	8224422	0	True				
ANR	8224505	AssignmentExpression	i = 0		8224422	0		=			
ANR	8224506	Identifier	i		8224422	0					
ANR	8224507	PrimaryExpression	0		8224422	1					
ANR	8224508	Condition	i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )	218:21:6715:6850	8224422	1	True				
ANR	8224509	RelationalExpression	i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8224422	0		<			
ANR	8224510	Identifier	i		8224422	0					
ANR	8224511	MultiplicativeExpression	sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8224422	1		/			
ANR	8224512	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname )		8224422	0					
ANR	8224513	Sizeof	sizeof		8224422	0					
ANR	8224514	MemberAccess	resident_table [ j ] . unicode_fontname		8224422	1					
ANR	8224515	ArrayIndexing	resident_table [ j ]		8224422	0					
ANR	8224516	Identifier	resident_table		8224422	0					
ANR	8224517	Identifier	j		8224422	1					
ANR	8224518	Identifier	unicode_fontname		8224422	1					
ANR	8224519	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8224422	1					
ANR	8224520	Sizeof	sizeof		8224422	0					
ANR	8224521	ArrayIndexing	resident_table [ j ] . unicode_fontname [ 0 ]		8224422	1					
ANR	8224522	MemberAccess	resident_table [ j ] . unicode_fontname		8224422	0					
ANR	8224523	ArrayIndexing	resident_table [ j ]		8224422	0					
ANR	8224524	Identifier	resident_table		8224422	0					
ANR	8224525	Identifier	j		8224422	1					
ANR	8224526	Identifier	unicode_fontname		8224422	1					
ANR	8224527	PrimaryExpression	0		8224422	1					
ANR	8224528	PostIncDecOperationExpression	i ++	220:68:6853:6855	8224422	2	True				
ANR	8224529	Identifier	i		8224422	0					
ANR	8224530	IncDec	++		8224422	1					
ANR	8224531	CompoundStatement		20:73:772:772	8224422	3					
ANR	8224532	ExpressionStatement	"dmprintf1 ( mem , ""%c"" , ( char ) resident_table [ j ] . unicode_fontname [ i ] )"	221:20:6880:6975	8224422	0	True				
ANR	8224533	CallExpression	"dmprintf1 ( mem , ""%c"" , ( char ) resident_table [ j ] . unicode_fontname [ i ] )"		8224422	0					
ANR	8224534	Callee	dmprintf1		8224422	0					
ANR	8224535	Identifier	dmprintf1		8224422	0					
ANR	8224536	ArgumentList	mem		8224422	1					
ANR	8224537	Argument	mem		8224422	0					
ANR	8224538	Identifier	mem		8224422	0					
ANR	8224539	Argument	"""%c"""		8224422	1					
ANR	8224540	PrimaryExpression	"""%c"""		8224422	0					
ANR	8224541	Argument	( char ) resident_table [ j ] . unicode_fontname [ i ]		8224422	2					
ANR	8224542	CastExpression	( char ) resident_table [ j ] . unicode_fontname [ i ]		8224422	0					
ANR	8224543	CastTarget	char		8224422	0					
ANR	8224544	ArrayIndexing	resident_table [ j ] . unicode_fontname [ i ]		8224422	1					
ANR	8224545	MemberAccess	resident_table [ j ] . unicode_fontname		8224422	0					
ANR	8224546	ArrayIndexing	resident_table [ j ]		8224422	0					
ANR	8224547	Identifier	resident_table		8224422	0					
ANR	8224548	Identifier	j		8224422	1					
ANR	8224549	Identifier	unicode_fontname		8224422	1					
ANR	8224550	Identifier	i		8224422	1					
ANR	8224551	ExpressionStatement	"dmprintf1 ( mem , "" not available in font dictionary, resident table position: %d\\n"" , j )"	224:16:7011:7148	8224422	3	True				
ANR	8224552	CallExpression	"dmprintf1 ( mem , "" not available in font dictionary, resident table position: %d\\n"" , j )"		8224422	0					
ANR	8224553	Callee	dmprintf1		8224422	0					
ANR	8224554	Identifier	dmprintf1		8224422	0					
ANR	8224555	ArgumentList	mem		8224422	1					
ANR	8224556	Argument	mem		8224422	0					
ANR	8224557	Identifier	mem		8224422	0					
ANR	8224558	Argument	""" not available in font dictionary, resident table position: %d\\n"""		8224422	1					
ANR	8224559	PrimaryExpression	""" not available in font dictionary, resident table position: %d\\n"""		8224422	0					
ANR	8224560	Argument	j		8224422	2					
ANR	8224561	Identifier	j		8224422	0					
ANR	8224562	ElseStatement	else		8224422	0					
ANR	8224563	CompoundStatement		29:12:1107:1118	8224422	0					
ANR	8224564	IdentifierDeclStatement	byte key [ 3 ] ;	229:12:7193:7204	8224422	0	True				
ANR	8224565	IdentifierDecl	key [ 3 ]		8224422	0					
ANR	8224566	IdentifierDeclType	byte [ 3 ]		8224422	0					
ANR	8224567	Identifier	key		8224422	1					
ANR	8224568	PrimaryExpression	3		8224422	2					
ANR	8224569	ExpressionStatement	key [ 2 ] = ( byte ) j	231:12:7219:7236	8224422	1	True				
ANR	8224570	AssignmentExpression	key [ 2 ] = ( byte ) j		8224422	0		=			
ANR	8224571	ArrayIndexing	key [ 2 ]		8224422	0					
ANR	8224572	Identifier	key		8224422	0					
ANR	8224573	PrimaryExpression	2		8224422	1					
ANR	8224574	CastExpression	( byte ) j		8224422	1					
ANR	8224575	CastTarget	byte		8224422	0					
ANR	8224576	Identifier	j		8224422	1					
ANR	8224577	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	232:12:7250:7269	8224422	2	True				
ANR	8224578	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8224422	0		=			
ANR	8224579	ArrayIndexing	key [ 0 ]		8224422	0					
ANR	8224580	Identifier	key		8224422	0					
ANR	8224581	PrimaryExpression	0		8224422	1					
ANR	8224582	AssignmentExpression	key [ 1 ] = 0		8224422	1		=			
ANR	8224583	ArrayIndexing	key [ 1 ]		8224422	0					
ANR	8224584	Identifier	key		8224422	0					
ANR	8224585	PrimaryExpression	1		8224422	1					
ANR	8224586	PrimaryExpression	0		8224422	1					
ANR	8224587	IfStatement	"if ( ! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL ) )"		8224422	3					
ANR	8224588	Condition	"! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"	233:16:7287:7478	8224422	0	True				
ANR	8224589	UnaryOperationExpression	"! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"		8224422	0					
ANR	8224590	UnaryOperator	!		8224422	0					
ANR	8224591	CallExpression	"pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"		8224422	1					
ANR	8224592	Callee	pl_dict_lookup		8224422	0					
ANR	8224593	Identifier	pl_dict_lookup		8224422	0					
ANR	8224594	ArgumentList	pfontdict		8224422	1					
ANR	8224595	Argument	pfontdict		8224422	0					
ANR	8224596	Identifier	pfontdict		8224422	0					
ANR	8224597	Argument	key		8224422	1					
ANR	8224598	Identifier	key		8224422	0					
ANR	8224599	Argument	sizeof ( key )		8224422	2					
ANR	8224600	SizeofExpression	sizeof ( key )		8224422	0					
ANR	8224601	Sizeof	sizeof		8224422	0					
ANR	8224602	SizeofOperand	key		8224422	1					
ANR	8224603	Argument	& value		8224422	3					
ANR	8224604	UnaryOperationExpression	& value		8224422	0					
ANR	8224605	UnaryOperator	&		8224422	0					
ANR	8224606	Identifier	value		8224422	1					
ANR	8224607	Argument	true		8224422	4					
ANR	8224608	Identifier	true		8224422	0					
ANR	8224609	Argument	NULL		8224422	5					
ANR	8224610	Identifier	NULL		8224422	0					
ANR	8224611	ExpressionStatement	"dmprintf2 ( mem , ""%s not available in font dictionary, resident table position: %d\\n"" , resident_table [ j ] . full_font_name , j )"	238:16:7524:7697	8224422	1	True				
ANR	8224612	CallExpression	"dmprintf2 ( mem , ""%s not available in font dictionary, resident table position: %d\\n"" , resident_table [ j ] . full_font_name , j )"		8224422	0					
ANR	8224613	Callee	dmprintf2		8224422	0					
ANR	8224614	Identifier	dmprintf2		8224422	0					
ANR	8224615	ArgumentList	mem		8224422	1					
ANR	8224616	Argument	mem		8224422	0					
ANR	8224617	Identifier	mem		8224422	0					
ANR	8224618	Argument	"""%s not available in font dictionary, resident table position: %d\\n"""		8224422	1					
ANR	8224619	PrimaryExpression	"""%s not available in font dictionary, resident table position: %d\\n"""		8224422	0					
ANR	8224620	Argument	resident_table [ j ] . full_font_name		8224422	2					
ANR	8224621	MemberAccess	resident_table [ j ] . full_font_name		8224422	0					
ANR	8224622	ArrayIndexing	resident_table [ j ]		8224422	0					
ANR	8224623	Identifier	resident_table		8224422	0					
ANR	8224624	Identifier	j		8224422	1					
ANR	8224625	Identifier	full_font_name		8224422	1					
ANR	8224626	Argument	j		8224422	3					
ANR	8224627	Identifier	j		8224422	0					
ANR	8224628	ReturnStatement	return ;	243:4:7719:7725	8224422	2	True				
ANR	8224629	ReturnType	static void		8224422	1					
ANR	8224630	Identifier	pl_check_fonts		8224422	2					
ANR	8224631	ParameterList	"const gs_memory_t * mem , pl_dict_t * pfontdict , bool use_unicode_names_for_keys"		8224422	3					
ANR	8224632	Parameter	const gs_memory_t * mem	199:15:5989:6011	8224422	0	True				
ANR	8224633	ParameterType	const gs_memory_t *		8224422	0					
ANR	8224634	Identifier	mem		8224422	1					
ANR	8224635	Parameter	pl_dict_t * pfontdict	199:40:6014:6034	8224422	1	True				
ANR	8224636	ParameterType	pl_dict_t *		8224422	0					
ANR	8224637	Identifier	pfontdict		8224422	1					
ANR	8224638	Parameter	bool use_unicode_names_for_keys	200:15:6052:6082	8224422	2	True				
ANR	8224639	ParameterType	bool		8224422	0					
ANR	8224640	Identifier	use_unicode_names_for_keys		8224422	1					
ANR	8224641	CFGEntryNode	ENTRY		8224422		True				
ANR	8224642	CFGExitNode	EXIT		8224422		True				
ANR	8224643	Symbol	* * j		8224422						
ANR	8224644	Symbol	resident_table [ j ] . unicode_fontname		8224422						
ANR	8224645	Symbol	NULL		8224422						
ANR	8224646	Symbol	& value		8224422						
ANR	8224647	Symbol	* resident_table [ j ] . unicode_fontname		8224422						
ANR	8224648	Symbol	resident_table [ j ] . full_font_name		8224422						
ANR	8224649	Symbol	* resident_table		8224422						
ANR	8224650	Symbol	i		8224422						
ANR	8224651	Symbol	* key		8224422						
ANR	8224652	Symbol	j		8224422						
ANR	8224653	Symbol	use_unicode_names_for_keys		8224422						
ANR	8224654	Symbol	* * resident_table		8224422						
ANR	8224655	Symbol	strlen		8224422						
ANR	8224656	Symbol	* i		8224422						
ANR	8224657	Symbol	mem		8224422						
ANR	8224658	Symbol	* j		8224422						
ANR	8224659	Symbol	pfontdict		8224422						
ANR	8224660	Symbol	true		8224422						
ANR	8224661	Symbol	pl_dict_lookup		8224422						
ANR	8224662	Symbol	value		8224422						
ANR	8224663	Symbol	key		8224422						
ANR	8224664	Symbol	resident_table		8224422						
ANR	8224665	Function	pl_load_built_in_fonts	247:0:7737:14737							
ANR	8224666	FunctionDef	"pl_load_built_in_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8224665	0					
ANR	8224667	CompoundStatement		251:0:7940:14737	8224665	0					
ANR	8224668	IdentifierDeclStatement	"int i , k ;"	252:4:7946:7954	8224665	0	True				
ANR	8224669	IdentifierDecl	i		8224665	0					
ANR	8224670	IdentifierDeclType	int		8224665	0					
ANR	8224671	Identifier	i		8224665	1					
ANR	8224672	IdentifierDecl	k		8224665	1					
ANR	8224673	IdentifierDeclType	int		8224665	0					
ANR	8224674	Identifier	k		8224665	1					
ANR	8224675	IdentifierDeclStatement	"UW16 bSize , status = 0 ;"	253:4:7960:7982	8224665	1	True				
ANR	8224676	IdentifierDecl	bSize		8224665	0					
ANR	8224677	IdentifierDeclType	UW16		8224665	0					
ANR	8224678	Identifier	bSize		8224665	1					
ANR	8224679	IdentifierDecl	status = 0		8224665	1					
ANR	8224680	IdentifierDeclType	UW16		8224665	0					
ANR	8224681	Identifier	status		8224665	1					
ANR	8224682	AssignmentExpression	status = 0		8224665	2		=			
ANR	8224683	Identifier	status		8224665	0					
ANR	8224684	PrimaryExpression	0		8224665	1					
ANR	8224685	IdentifierDeclStatement	byte key [ 3 ] ;	254:4:7988:7999	8224665	2	True				
ANR	8224686	IdentifierDecl	key [ 3 ]		8224665	0					
ANR	8224687	IdentifierDeclType	byte [ 3 ]		8224665	0					
ANR	8224688	Identifier	key		8224665	1					
ANR	8224689	PrimaryExpression	3		8224665	2					
ANR	8224690	IdentifierDeclStatement	UB8 pthnm [ 1024 ] ;	255:4:8005:8020	8224665	3	True				
ANR	8224691	IdentifierDecl	pthnm [ 1024 ]		8224665	0					
ANR	8224692	IdentifierDeclType	UB8 [ 1024 ]		8224665	0					
ANR	8224693	Identifier	pthnm		8224665	1					
ANR	8224694	PrimaryExpression	1024		8224665	2					
ANR	8224695	IdentifierDeclStatement	UB8 ufst_root_dir [ 1024 ] ;	256:4:8026:8049	8224665	4	True				
ANR	8224696	IdentifierDecl	ufst_root_dir [ 1024 ]		8224665	0					
ANR	8224697	IdentifierDeclType	UB8 [ 1024 ]		8224665	0					
ANR	8224698	Identifier	ufst_root_dir		8224665	1					
ANR	8224699	PrimaryExpression	1024		8224665	2					
ANR	8224700	IdentifierDeclStatement	char * * fcos ;	257:4:8055:8066	8224665	5	True				
ANR	8224701	IdentifierDecl	* * fcos		8224665	0					
ANR	8224702	IdentifierDeclType	char * *		8224665	0					
ANR	8224703	Identifier	fcos		8224665	1					
ANR	8224704	IdentifierDeclStatement	char * * plugins ;	258:4:8072:8086	8224665	6	True				
ANR	8224705	IdentifierDecl	* * plugins		8224665	0					
ANR	8224706	IdentifierDeclType	char * *		8224665	0					
ANR	8224707	Identifier	plugins		8224665	1					
ANR	8224708	IfStatement	"if ( pl_dict_length ( pfontdict , true ) > 0 )"		8224665	7					
ANR	8224709	Condition	"pl_dict_length ( pfontdict , true ) > 0"	261:8:8139:8173	8224665	0	True				
ANR	8224710	RelationalExpression	"pl_dict_length ( pfontdict , true ) > 0"		8224665	0		>			
ANR	8224711	CallExpression	"pl_dict_length ( pfontdict , true )"		8224665	0					
ANR	8224712	Callee	pl_dict_length		8224665	0					
ANR	8224713	Identifier	pl_dict_length		8224665	0					
ANR	8224714	ArgumentList	pfontdict		8224665	1					
ANR	8224715	Argument	pfontdict		8224665	0					
ANR	8224716	Identifier	pfontdict		8224665	0					
ANR	8224717	Argument	true		8224665	1					
ANR	8224718	Identifier	true		8224665	0					
ANR	8224719	PrimaryExpression	0		8224665	1					
ANR	8224720	ReturnStatement	return true ;	262:8:8184:8195	8224665	1	True				
ANR	8224721	Identifier	true		8224665	0					
ANR	8224722	ExpressionStatement	"pl_ufst_root_dir ( ufst_root_dir , sizeof ( ufst_root_dir ) )"	264:4:8202:8256	8224665	8	True				
ANR	8224723	CallExpression	"pl_ufst_root_dir ( ufst_root_dir , sizeof ( ufst_root_dir ) )"		8224665	0					
ANR	8224724	Callee	pl_ufst_root_dir		8224665	0					
ANR	8224725	Identifier	pl_ufst_root_dir		8224665	0					
ANR	8224726	ArgumentList	ufst_root_dir		8224665	1					
ANR	8224727	Argument	ufst_root_dir		8224665	0					
ANR	8224728	Identifier	ufst_root_dir		8224665	0					
ANR	8224729	Argument	sizeof ( ufst_root_dir )		8224665	1					
ANR	8224730	SizeofExpression	sizeof ( ufst_root_dir )		8224665	0					
ANR	8224731	Sizeof	sizeof		8224665	0					
ANR	8224732	SizeofOperand	ufst_root_dir		8224665	1					
ANR	8224733	ExpressionStatement	"status = gx_UFST_init ( mem , ufst_root_dir )"	266:4:8263:8304	8224665	9	True				
ANR	8224734	AssignmentExpression	"status = gx_UFST_init ( mem , ufst_root_dir )"		8224665	0		=			
ANR	8224735	Identifier	status		8224665	0					
ANR	8224736	CallExpression	"gx_UFST_init ( mem , ufst_root_dir )"		8224665	1					
ANR	8224737	Callee	gx_UFST_init		8224665	0					
ANR	8224738	Identifier	gx_UFST_init		8224665	0					
ANR	8224739	ArgumentList	mem		8224665	1					
ANR	8224740	Argument	mem		8224665	0					
ANR	8224741	Identifier	mem		8224665	0					
ANR	8224742	Argument	ufst_root_dir		8224665	1					
ANR	8224743	Identifier	ufst_root_dir		8224665	0					
ANR	8224744	IfStatement	if ( ! plugins_opened )		8224665	10					
ANR	8224745	Condition	! plugins_opened	268:8:8315:8329	8224665	0	True				
ANR	8224746	UnaryOperationExpression	! plugins_opened		8224665	0					
ANR	8224747	UnaryOperator	!		8224665	0					
ANR	8224748	Identifier	plugins_opened		8224665	1					
ANR	8224749	CompoundStatement		18:25:391:391	8224665	1					
ANR	8224750	ExpressionStatement	gx_UFST_close_static_fcos ( )	270:8:8343:8370	8224665	0	True				
ANR	8224751	CallExpression	gx_UFST_close_static_fcos ( )		8224665	0					
ANR	8224752	Callee	gx_UFST_close_static_fcos		8224665	0					
ANR	8224753	Identifier	gx_UFST_close_static_fcos		8224665	0					
ANR	8224754	ArgumentList			8224665	1					
ANR	8224755	ExpressionStatement	"plugins = pl_ufst_get_list ( mem , ""UFSTPLUGINS"" , UFSTPLUGINS )"	271:8:8380:8439	8224665	1	True				
ANR	8224756	AssignmentExpression	"plugins = pl_ufst_get_list ( mem , ""UFSTPLUGINS"" , UFSTPLUGINS )"		8224665	0		=			
ANR	8224757	Identifier	plugins		8224665	0					
ANR	8224758	CallExpression	"pl_ufst_get_list ( mem , ""UFSTPLUGINS"" , UFSTPLUGINS )"		8224665	1					
ANR	8224759	Callee	pl_ufst_get_list		8224665	0					
ANR	8224760	Identifier	pl_ufst_get_list		8224665	0					
ANR	8224761	ArgumentList	mem		8224665	1					
ANR	8224762	Argument	mem		8224665	0					
ANR	8224763	Identifier	mem		8224665	0					
ANR	8224764	Argument	"""UFSTPLUGINS"""		8224665	1					
ANR	8224765	PrimaryExpression	"""UFSTPLUGINS"""		8224665	0					
ANR	8224766	Argument	UFSTPLUGINS		8224665	2					
ANR	8224767	Identifier	UFSTPLUGINS		8224665	0					
ANR	8224768	ForStatement	for ( k = 0 ; plugins [ k ] ; k ++ )		8224665	2					
ANR	8224769	ForInit	k = 0 ;	272:13:8454:8459	8224665	0	True				
ANR	8224770	AssignmentExpression	k = 0		8224665	0		=			
ANR	8224771	Identifier	k		8224665	0					
ANR	8224772	PrimaryExpression	0		8224665	1					
ANR	8224773	Condition	plugins [ k ]	272:20:8461:8470	8224665	1	True				
ANR	8224774	ArrayIndexing	plugins [ k ]		8224665	0					
ANR	8224775	Identifier	plugins		8224665	0					
ANR	8224776	Identifier	k		8224665	1					
ANR	8224777	PostIncDecOperationExpression	k ++	272:32:8473:8475	8224665	2	True				
ANR	8224778	Identifier	k		8224665	0					
ANR	8224779	IncDec	++		8224665	1					
ANR	8224780	CompoundStatement		22:37:537:537	8224665	3					
ANR	8224781	ExpressionStatement	"strcpy ( ( char * ) pthnm , ufst_root_dir )"	273:12:8492:8528	8224665	0	True				
ANR	8224782	CallExpression	"strcpy ( ( char * ) pthnm , ufst_root_dir )"		8224665	0					
ANR	8224783	Callee	strcpy		8224665	0					
ANR	8224784	Identifier	strcpy		8224665	0					
ANR	8224785	ArgumentList	( char * ) pthnm		8224665	1					
ANR	8224786	Argument	( char * ) pthnm		8224665	0					
ANR	8224787	CastExpression	( char * ) pthnm		8224665	0					
ANR	8224788	CastTarget	char *		8224665	0					
ANR	8224789	Identifier	pthnm		8224665	1					
ANR	8224790	Argument	ufst_root_dir		8224665	1					
ANR	8224791	Identifier	ufst_root_dir		8224665	0					
ANR	8224792	ExpressionStatement	"strcat ( ( char * ) pthnm , plugins [ k ] )"	274:12:8542:8575	8224665	1	True				
ANR	8224793	CallExpression	"strcat ( ( char * ) pthnm , plugins [ k ] )"		8224665	0					
ANR	8224794	Callee	strcat		8224665	0					
ANR	8224795	Identifier	strcat		8224665	0					
ANR	8224796	ArgumentList	( char * ) pthnm		8224665	1					
ANR	8224797	Argument	( char * ) pthnm		8224665	0					
ANR	8224798	CastExpression	( char * ) pthnm		8224665	0					
ANR	8224799	CastTarget	char *		8224665	0					
ANR	8224800	Identifier	pthnm		8224665	1					
ANR	8224801	Argument	plugins [ k ]		8224665	1					
ANR	8224802	ArrayIndexing	plugins [ k ]		8224665	0					
ANR	8224803	Identifier	plugins		8224665	0					
ANR	8224804	Identifier	k		8224665	1					
ANR	8224805	IfStatement	"if ( ( status = gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] ) ) != 0 )"		8224665	2					
ANR	8224806	Condition	"( status = gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] ) ) != 0"	275:16:8593:8672	8224665	0	True				
ANR	8224807	EqualityExpression	"( status = gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] ) ) != 0"		8224665	0		!=			
ANR	8224808	AssignmentExpression	"status = gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] )"		8224665	0		=			
ANR	8224809	Identifier	status		8224665	0					
ANR	8224810	CallExpression	"gx_UFST_open_static_fco ( pthnm , & fcHndlPlAry [ k ] )"		8224665	1					
ANR	8224811	Callee	gx_UFST_open_static_fco		8224665	0					
ANR	8224812	Identifier	gx_UFST_open_static_fco		8224665	0					
ANR	8224813	ArgumentList	pthnm		8224665	1					
ANR	8224814	Argument	pthnm		8224665	0					
ANR	8224815	Identifier	pthnm		8224665	0					
ANR	8224816	Argument	& fcHndlPlAry [ k ]		8224665	1					
ANR	8224817	UnaryOperationExpression	& fcHndlPlAry [ k ]		8224665	0					
ANR	8224818	UnaryOperator	&		8224665	0					
ANR	8224819	ArrayIndexing	fcHndlPlAry [ k ]		8224665	1					
ANR	8224820	Identifier	fcHndlPlAry		8224665	0					
ANR	8224821	Identifier	k		8224665	1					
ANR	8224822	PrimaryExpression	0		8224665	1					
ANR	8224823	CompoundStatement		26:72:734:734	8224665	1					
ANR	8224824	ExpressionStatement	"dmprintf2 ( mem , ""CGIFfco_Open error %d for %s\\n"" , status , pthnm )"	277:16:8693:8782	8224665	0	True				
ANR	8224825	CallExpression	"dmprintf2 ( mem , ""CGIFfco_Open error %d for %s\\n"" , status , pthnm )"		8224665	0					
ANR	8224826	Callee	dmprintf2		8224665	0					
ANR	8224827	Identifier	dmprintf2		8224665	0					
ANR	8224828	ArgumentList	mem		8224665	1					
ANR	8224829	Argument	mem		8224665	0					
ANR	8224830	Identifier	mem		8224665	0					
ANR	8224831	Argument	"""CGIFfco_Open error %d for %s\\n"""		8224665	1					
ANR	8224832	PrimaryExpression	"""CGIFfco_Open error %d for %s\\n"""		8224665	0					
ANR	8224833	Argument	status		8224665	2					
ANR	8224834	Identifier	status		8224665	0					
ANR	8224835	Argument	pthnm		8224665	3					
ANR	8224836	Identifier	pthnm		8224665	0					
ANR	8224837	ReturnStatement	return FALSE ;	279:16:8800:8812	8224665	1	True				
ANR	8224838	Identifier	FALSE		8224665	0					
ANR	8224839	Statement	if	281:12:8840:8841	8224665	3	True				
ANR	8224840	Statement	(	281:15:8843:8843	8224665	4	True				
ANR	8224841	Statement	(	281:16:8844:8844	8224665	5	True				
ANR	8224842	Statement	status	281:17:8845:8850	8224665	6	True				
ANR	8224843	Statement	=	281:24:8852:8852	8224665	7	True				
ANR	8224844	Statement	CGIFfco_Plugin	281:26:8854:8867	8224665	8	True				
ANR	8224845	Statement	(	281:40:8868:8868	8224665	9	True				
ANR	8224846	Statement	FSA	281:41:8869:8871	8224665	10	True				
ANR	8224847	Statement	fcHndlPlAry	281:45:8873:8883	8224665	11	True				
ANR	8224848	Statement	[	281:56:8884:8884	8224665	12	True				
ANR	8224849	Statement	k	281:57:8885:8885	8224665	13	True				
ANR	8224850	Statement	]	281:58:8886:8886	8224665	14	True				
ANR	8224851	Statement	)	281:59:8887:8887	8224665	15	True				
ANR	8224852	Statement	)	281:60:8888:8888	8224665	16	True				
ANR	8224853	Statement	!=	281:62:8890:8891	8224665	17	True				
ANR	8224854	Statement	0	281:65:8893:8893	8224665	18	True				
ANR	8224855	Statement	)	281:66:8894:8894	8224665	19	True				
ANR	8224856	CompoundStatement		31:68:955:955	8224665	20					
ANR	8224857	ExpressionStatement	"dmprintf1 ( mem , ""CGIFfco_Plugin error %d\\n"" , status )"	282:16:8914:8965	8224665	0	True				
ANR	8224858	CallExpression	"dmprintf1 ( mem , ""CGIFfco_Plugin error %d\\n"" , status )"		8224665	0					
ANR	8224859	Callee	dmprintf1		8224665	0					
ANR	8224860	Identifier	dmprintf1		8224665	0					
ANR	8224861	ArgumentList	mem		8224665	1					
ANR	8224862	Argument	mem		8224665	0					
ANR	8224863	Identifier	mem		8224665	0					
ANR	8224864	Argument	"""CGIFfco_Plugin error %d\\n"""		8224665	1					
ANR	8224865	PrimaryExpression	"""CGIFfco_Plugin error %d\\n"""		8224665	0					
ANR	8224866	Argument	status		8224665	2					
ANR	8224867	Identifier	status		8224665	0					
ANR	8224868	ReturnStatement	return FALSE ;	283:16:8983:8995	8224665	1	True				
ANR	8224869	Identifier	FALSE		8224665	0					
ANR	8224870	ExpressionStatement	"free_strs ( mem , plugins )"	286:8:9029:9052	8224665	3	True				
ANR	8224871	CallExpression	"free_strs ( mem , plugins )"		8224665	0					
ANR	8224872	Callee	free_strs		8224665	0					
ANR	8224873	Identifier	free_strs		8224665	0					
ANR	8224874	ArgumentList	mem		8224665	1					
ANR	8224875	Argument	mem		8224665	0					
ANR	8224876	Identifier	mem		8224665	0					
ANR	8224877	Argument	plugins		8224665	1					
ANR	8224878	Identifier	plugins		8224665	0					
ANR	8224879	ExpressionStatement	fcHndlPlAry [ k ] = - 1	288:8:9088:9107	8224665	4	True				
ANR	8224880	AssignmentExpression	fcHndlPlAry [ k ] = - 1		8224665	0		=			
ANR	8224881	ArrayIndexing	fcHndlPlAry [ k ]		8224665	0					
ANR	8224882	Identifier	fcHndlPlAry		8224665	0					
ANR	8224883	Identifier	k		8224665	1					
ANR	8224884	UnaryOperationExpression	- 1		8224665	1					
ANR	8224885	UnaryOperator	-		8224665	0					
ANR	8224886	PrimaryExpression	1		8224665	1					
ANR	8224887	ExpressionStatement	plugins_opened = true	289:8:9117:9138	8224665	5	True				
ANR	8224888	AssignmentExpression	plugins_opened = true		8224665	0		=			
ANR	8224889	Identifier	plugins_opened		8224665	0					
ANR	8224890	Identifier	true		8224665	1					
ANR	8224891	ExpressionStatement	plu_set_callbacks ( )	292:4:9226:9245	8224665	11	True				
ANR	8224892	CallExpression	plu_set_callbacks ( )		8224665	0					
ANR	8224893	Callee	plu_set_callbacks		8224665	0					
ANR	8224894	Identifier	plu_set_callbacks		8224665	0					
ANR	8224895	ArgumentList			8224665	1					
ANR	8224896	ExpressionStatement	"fcos = pl_ufst_get_list ( mem , ""UFSTFCOS"" , UFSTFCOS )"	301:4:9493:9543	8224665	12	True				
ANR	8224897	AssignmentExpression	"fcos = pl_ufst_get_list ( mem , ""UFSTFCOS"" , UFSTFCOS )"		8224665	0		=			
ANR	8224898	Identifier	fcos		8224665	0					
ANR	8224899	CallExpression	"pl_ufst_get_list ( mem , ""UFSTFCOS"" , UFSTFCOS )"		8224665	1					
ANR	8224900	Callee	pl_ufst_get_list		8224665	0					
ANR	8224901	Identifier	pl_ufst_get_list		8224665	0					
ANR	8224902	ArgumentList	mem		8224665	1					
ANR	8224903	Argument	mem		8224665	0					
ANR	8224904	Identifier	mem		8224665	0					
ANR	8224905	Argument	"""UFSTFCOS"""		8224665	1					
ANR	8224906	PrimaryExpression	"""UFSTFCOS"""		8224665	0					
ANR	8224907	Argument	UFSTFCOS		8224665	2					
ANR	8224908	Identifier	UFSTFCOS		8224665	0					
ANR	8224909	ForStatement	for ( k = 0 ; fcos [ k ] ; k ++ )		8224665	13					
ANR	8224910	ForInit	k = 0 ;	302:9:9554:9559	8224665	0	True				
ANR	8224911	AssignmentExpression	k = 0		8224665	0		=			
ANR	8224912	Identifier	k		8224665	0					
ANR	8224913	PrimaryExpression	0		8224665	1					
ANR	8224914	Condition	fcos [ k ]	302:16:9561:9567	8224665	1	True				
ANR	8224915	ArrayIndexing	fcos [ k ]		8224665	0					
ANR	8224916	Identifier	fcos		8224665	0					
ANR	8224917	Identifier	k		8224665	1					
ANR	8224918	PostIncDecOperationExpression	k ++	302:25:9570:9572	8224665	2	True				
ANR	8224919	Identifier	k		8224665	0					
ANR	8224920	IncDec	++		8224665	1					
ANR	8224921	CompoundStatement		53:8:1644:1658	8224665	3					
ANR	8224922	IdentifierDeclStatement	SW16 fcoHandle ;	303:8:9585:9599	8224665	0	True				
ANR	8224923	IdentifierDecl	fcoHandle		8224665	0					
ANR	8224924	IdentifierDeclType	SW16		8224665	0					
ANR	8224925	Identifier	fcoHandle		8224665	1					
ANR	8224926	ExpressionStatement	"strcpy ( ( char * ) pthnm , ufst_root_dir )"	306:8:9679:9715	8224665	1	True				
ANR	8224927	CallExpression	"strcpy ( ( char * ) pthnm , ufst_root_dir )"		8224665	0					
ANR	8224928	Callee	strcpy		8224665	0					
ANR	8224929	Identifier	strcpy		8224665	0					
ANR	8224930	ArgumentList	( char * ) pthnm		8224665	1					
ANR	8224931	Argument	( char * ) pthnm		8224665	0					
ANR	8224932	CastExpression	( char * ) pthnm		8224665	0					
ANR	8224933	CastTarget	char *		8224665	0					
ANR	8224934	Identifier	pthnm		8224665	1					
ANR	8224935	Argument	ufst_root_dir		8224665	1					
ANR	8224936	Identifier	ufst_root_dir		8224665	0					
ANR	8224937	ExpressionStatement	"strcat ( ( char * ) pthnm , fcos [ k ] )"	307:8:9725:9755	8224665	2	True				
ANR	8224938	CallExpression	"strcat ( ( char * ) pthnm , fcos [ k ] )"		8224665	0					
ANR	8224939	Callee	strcat		8224665	0					
ANR	8224940	Identifier	strcat		8224665	0					
ANR	8224941	ArgumentList	( char * ) pthnm		8224665	1					
ANR	8224942	Argument	( char * ) pthnm		8224665	0					
ANR	8224943	CastExpression	( char * ) pthnm		8224665	0					
ANR	8224944	CastTarget	char *		8224665	0					
ANR	8224945	Identifier	pthnm		8224665	1					
ANR	8224946	Argument	fcos [ k ]		8224665	1					
ANR	8224947	ArrayIndexing	fcos [ k ]		8224665	0					
ANR	8224948	Identifier	fcos		8224665	0					
ANR	8224949	Identifier	k		8224665	1					
ANR	8224950	ExpressionStatement	fcoHandle = gx_UFST_find_fco_handle_by_name ( pthnm )	309:8:9766:9816	8224665	3	True				
ANR	8224951	AssignmentExpression	fcoHandle = gx_UFST_find_fco_handle_by_name ( pthnm )		8224665	0		=			
ANR	8224952	Identifier	fcoHandle		8224665	0					
ANR	8224953	CallExpression	gx_UFST_find_fco_handle_by_name ( pthnm )		8224665	1					
ANR	8224954	Callee	gx_UFST_find_fco_handle_by_name		8224665	0					
ANR	8224955	Identifier	gx_UFST_find_fco_handle_by_name		8224665	0					
ANR	8224956	ArgumentList	pthnm		8224665	1					
ANR	8224957	Argument	pthnm		8224665	0					
ANR	8224958	Identifier	pthnm		8224665	0					
ANR	8224959	IfStatement	"if ( fcoHandle == 0 && ( status = gx_UFST_open_static_fco ( pthnm , & fcoHandle ) ) != 0 )"		8224665	4					
ANR	8224960	Condition	"fcoHandle == 0 && ( status = gx_UFST_open_static_fco ( pthnm , & fcoHandle ) ) != 0"	311:12:9831:9918	8224665	0	True				
ANR	8224961	AndExpression	"fcoHandle == 0 && ( status = gx_UFST_open_static_fco ( pthnm , & fcoHandle ) ) != 0"		8224665	0		&&			
ANR	8224962	EqualityExpression	fcoHandle == 0		8224665	0		==			
ANR	8224963	Identifier	fcoHandle		8224665	0					
ANR	8224964	PrimaryExpression	0		8224665	1					
ANR	8224965	EqualityExpression	"( status = gx_UFST_open_static_fco ( pthnm , & fcoHandle ) ) != 0"		8224665	1		!=			
ANR	8224966	AssignmentExpression	"status = gx_UFST_open_static_fco ( pthnm , & fcoHandle )"		8224665	0		=			
ANR	8224967	Identifier	status		8224665	0					
ANR	8224968	CallExpression	"gx_UFST_open_static_fco ( pthnm , & fcoHandle )"		8224665	1					
ANR	8224969	Callee	gx_UFST_open_static_fco		8224665	0					
ANR	8224970	Identifier	gx_UFST_open_static_fco		8224665	0					
ANR	8224971	ArgumentList	pthnm		8224665	1					
ANR	8224972	Argument	pthnm		8224665	0					
ANR	8224973	Identifier	pthnm		8224665	0					
ANR	8224974	Argument	& fcoHandle		8224665	1					
ANR	8224975	UnaryOperationExpression	& fcoHandle		8224665	0					
ANR	8224976	UnaryOperator	&		8224665	0					
ANR	8224977	Identifier	fcoHandle		8224665	1					
ANR	8224978	PrimaryExpression	0		8224665	1					
ANR	8224979	CompoundStatement		62:72:1980:1980	8224665	1					
ANR	8224980	ExpressionStatement	"dmprintf2 ( mem , ""CGIFfco_Open error %d for %s\\n"" , status , pthnm )"	313:12:9935:9998	8224665	0	True				
ANR	8224981	CallExpression	"dmprintf2 ( mem , ""CGIFfco_Open error %d for %s\\n"" , status , pthnm )"		8224665	0					
ANR	8224982	Callee	dmprintf2		8224665	0					
ANR	8224983	Identifier	dmprintf2		8224665	0					
ANR	8224984	ArgumentList	mem		8224665	1					
ANR	8224985	Argument	mem		8224665	0					
ANR	8224986	Identifier	mem		8224665	0					
ANR	8224987	Argument	"""CGIFfco_Open error %d for %s\\n"""		8224665	1					
ANR	8224988	PrimaryExpression	"""CGIFfco_Open error %d for %s\\n"""		8224665	0					
ANR	8224989	Argument	status		8224665	2					
ANR	8224990	Identifier	status		8224665	0					
ANR	8224991	Argument	pthnm		8224665	3					
ANR	8224992	Identifier	pthnm		8224665	0					
ANR	8224993	ContinueStatement	continue ;	314:12:10012:10020	8224665	1	True				
ANR	8224994	Statement	for	317:8:10085:10087	8224665	5	True				
ANR	8224995	Statement	(	317:12:10089:10089	8224665	6	True				
ANR	8224996	ExpressionStatement	i = 0	317:13:10090:10095	8224665	7	True				
ANR	8224997	AssignmentExpression	i = 0		8224665	0		=			
ANR	8224998	Identifier	i		8224665	0					
ANR	8224999	PrimaryExpression	0		8224665	1					
ANR	8225000	Statement	CGIFfco_Access	318:13:10110:10123	8224665	8	True				
ANR	8225001	Statement	(	318:27:10124:10124	8224665	9	True				
ANR	8225002	Statement	FSA	318:28:10125:10127	8224665	10	True				
ANR	8225003	Statement	pthnm	318:32:10129:10133	8224665	11	True				
ANR	8225004	Statement	","	318:37:10134:10134	8224665	12	True				
ANR	8225005	Statement	i	318:39:10136:10136	8224665	13	True				
ANR	8225006	Statement	","	318:40:10137:10137	8224665	14	True				
ANR	8225007	Statement	TFATRIB_KEY	318:42:10139:10149	8224665	15	True				
ANR	8225008	Statement	","	318:53:10150:10150	8224665	16	True				
ANR	8225009	Statement	&	318:55:10152:10152	8224665	17	True				
ANR	8225010	Statement	bSize	318:56:10153:10157	8224665	18	True				
ANR	8225011	Statement	","	318:61:10158:10158	8224665	19	True				
ANR	8225012	Statement	NULL	318:63:10160:10163	8224665	20	True				
ANR	8225013	Statement	)	318:67:10164:10164	8224665	21	True				
ANR	8225014	Statement	==	318:69:10166:10167	8224665	22	True				
ANR	8225015	ExpressionStatement	0	318:72:10169:10170	8224665	23	True				
ANR	8225016	PrimaryExpression	0		8224665	0					
ANR	8225017	Statement	i	319:13:10185:10185	8224665	24	True				
ANR	8225018	Statement	++	319:14:10186:10187	8224665	25	True				
ANR	8225019	Statement	","	319:16:10188:10188	8224665	26	True				
ANR	8225020	Statement	key	319:18:10190:10192	8224665	27	True				
ANR	8225021	Statement	[	319:21:10193:10193	8224665	28	True				
ANR	8225022	Statement	2	319:22:10194:10194	8224665	29	True				
ANR	8225023	Statement	]	319:23:10195:10195	8224665	30	True				
ANR	8225024	Statement	+=	319:25:10197:10198	8224665	31	True				
ANR	8225025	Statement	1	319:28:10200:10200	8224665	32	True				
ANR	8225026	Statement	)	319:29:10201:10201	8224665	33	True				
ANR	8225027	CompoundStatement		70:12:2276:2449	8224665	34					
ANR	8225028	IdentifierDeclStatement	"LPSB8 pBuffer = ( LPSB8 ) gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" ) ;"	320:12:10217:10390	8224665	0	True				
ANR	8225029	IdentifierDecl	"pBuffer = ( LPSB8 ) gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" )"		8224665	0					
ANR	8225030	IdentifierDeclType	LPSB8		8224665	0					
ANR	8225031	Identifier	pBuffer		8224665	1					
ANR	8225032	AssignmentExpression	"pBuffer = ( LPSB8 ) gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" )"		8224665	2		=			
ANR	8225033	Identifier	pBuffer		8224665	0					
ANR	8225034	CastExpression	"( LPSB8 ) gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" )"		8224665	1					
ANR	8225035	CastTarget	LPSB8		8224665	0					
ANR	8225036	CallExpression	"gs_alloc_bytes ( mem , bSize , ""TTFONTINFO buffer"" )"		8224665	1					
ANR	8225037	Callee	gs_alloc_bytes		8224665	0					
ANR	8225038	Identifier	gs_alloc_bytes		8224665	0					
ANR	8225039	ArgumentList	mem		8224665	1					
ANR	8225040	Argument	mem		8224665	0					
ANR	8225041	Identifier	mem		8224665	0					
ANR	8225042	Argument	bSize		8224665	1					
ANR	8225043	Identifier	bSize		8224665	0					
ANR	8225044	Argument	"""TTFONTINFO buffer"""		8224665	2					
ANR	8225045	PrimaryExpression	"""TTFONTINFO buffer"""		8224665	0					
ANR	8225046	IfStatement	if ( pBuffer == 0 )		8224665	1					
ANR	8225047	Condition	pBuffer == 0	324:16:10409:10420	8224665	0	True				
ANR	8225048	EqualityExpression	pBuffer == 0		8224665	0		==			
ANR	8225049	Identifier	pBuffer		8224665	0					
ANR	8225050	PrimaryExpression	0		8224665	1					
ANR	8225051	CompoundStatement		74:30:2482:2482	8224665	1					
ANR	8225052	ExpressionStatement	"dmprintf1 ( mem , ""VM error for built-in font %d"" , i )"	325:16:10441:10491	8224665	0	True				
ANR	8225053	CallExpression	"dmprintf1 ( mem , ""VM error for built-in font %d"" , i )"		8224665	0					
ANR	8225054	Callee	dmprintf1		8224665	0					
ANR	8225055	Identifier	dmprintf1		8224665	0					
ANR	8225056	ArgumentList	mem		8224665	1					
ANR	8225057	Argument	mem		8224665	0					
ANR	8225058	Identifier	mem		8224665	0					
ANR	8225059	Argument	"""VM error for built-in font %d"""		8224665	1					
ANR	8225060	PrimaryExpression	"""VM error for built-in font %d"""		8224665	0					
ANR	8225061	Argument	i		8224665	2					
ANR	8225062	Identifier	i		8224665	0					
ANR	8225063	ContinueStatement	continue ;	326:16:10509:10517	8224665	1	True				
ANR	8225064	Statement	status	328:12:10545:10550	8224665	2	True				
ANR	8225065	Statement	=	328:19:10552:10552	8224665	3	True				
ANR	8225066	Statement	CGIFfco_Access	328:21:10554:10567	8224665	4	True				
ANR	8225067	Statement	(	328:35:10568:10568	8224665	5	True				
ANR	8225068	Statement	FSA	328:36:10569:10571	8224665	6	True				
ANR	8225069	Statement	pthnm	329:36:10609:10613	8224665	7	True				
ANR	8225070	Statement	","	329:41:10614:10614	8224665	8	True				
ANR	8225071	Statement	i	329:43:10616:10616	8224665	9	True				
ANR	8225072	Statement	","	329:44:10617:10617	8224665	10	True				
ANR	8225073	Statement	TFATRIB_KEY	329:46:10619:10629	8224665	11	True				
ANR	8225074	Statement	","	329:57:10630:10630	8224665	12	True				
ANR	8225075	Statement	&	329:59:10632:10632	8224665	13	True				
ANR	8225076	Statement	bSize	329:60:10633:10637	8224665	14	True				
ANR	8225077	Statement	","	329:65:10638:10638	8224665	15	True				
ANR	8225078	Statement	pBuffer	329:67:10640:10646	8224665	16	True				
ANR	8225079	Statement	)	329:74:10647:10647	8224665	17	True				
ANR	8225080	ExpressionStatement		329:75:10648:10648	8224665	18	True				
ANR	8225081	IfStatement	if ( status != 0 )		8224665	19					
ANR	8225082	Condition	status != 0	330:16:10666:10676	8224665	0	True				
ANR	8225083	EqualityExpression	status != 0		8224665	0		!=			
ANR	8225084	Identifier	status		8224665	0					
ANR	8225085	PrimaryExpression	0		8224665	1					
ANR	8225086	ExpressionStatement	"dmprintf1 ( mem , ""CGIFfco_Access error %d\\n"" , status )"	331:16:10695:10746	8224665	1	True				
ANR	8225087	CallExpression	"dmprintf1 ( mem , ""CGIFfco_Access error %d\\n"" , status )"		8224665	0					
ANR	8225088	Callee	dmprintf1		8224665	0					
ANR	8225089	Identifier	dmprintf1		8224665	0					
ANR	8225090	ArgumentList	mem		8224665	1					
ANR	8225091	Argument	mem		8224665	0					
ANR	8225092	Identifier	mem		8224665	0					
ANR	8225093	Argument	"""CGIFfco_Access error %d\\n"""		8224665	1					
ANR	8225094	PrimaryExpression	"""CGIFfco_Access error %d\\n"""		8224665	0					
ANR	8225095	Argument	status		8224665	2					
ANR	8225096	Identifier	status		8224665	0					
ANR	8225097	ElseStatement	else		8224665	0					
ANR	8225098	CompoundStatement		89:16:3173:3183	8224665	0					
ANR	8225099	IdentifierDeclStatement	TTFONTINFOTYPE * pfDesc = ( TTFONTINFOTYPE * ) pBuffer ;	333:16:10783:10834	8224665	0	True				
ANR	8225100	IdentifierDecl	* pfDesc = ( TTFONTINFOTYPE * ) pBuffer		8224665	0					
ANR	8225101	IdentifierDeclType	TTFONTINFOTYPE *		8224665	0					
ANR	8225102	Identifier	pfDesc		8224665	1					
ANR	8225103	AssignmentExpression	* pfDesc = ( TTFONTINFOTYPE * ) pBuffer		8224665	2		=			
ANR	8225104	Identifier	pfDesc		8224665	0					
ANR	8225105	CastExpression	( TTFONTINFOTYPE * ) pBuffer		8224665	1					
ANR	8225106	CastTarget	TTFONTINFOTYPE *		8224665	0					
ANR	8225107	Identifier	pBuffer		8224665	1					
ANR	8225108	IdentifierDeclStatement	LPSB8 pname = pBuffer + pfDesc -> psname ;	334:16:10852:10890	8224665	1	True				
ANR	8225109	IdentifierDecl	pname = pBuffer + pfDesc -> psname		8224665	0					
ANR	8225110	IdentifierDeclType	LPSB8		8224665	0					
ANR	8225111	Identifier	pname		8224665	1					
ANR	8225112	AssignmentExpression	pname = pBuffer + pfDesc -> psname		8224665	2		=			
ANR	8225113	Identifier	pname		8224665	0					
ANR	8225114	AdditiveExpression	pBuffer + pfDesc -> psname		8224665	1		+			
ANR	8225115	Identifier	pBuffer		8224665	0					
ANR	8225116	PtrMemberAccess	pfDesc -> psname		8224665	1					
ANR	8225117	Identifier	pfDesc		8224665	0					
ANR	8225118	Identifier	psname		8224665	1					
ANR	8225119	IdentifierDeclStatement	"LPSB8 symname = ""SymbPS"" ;"	337:16:11049:11073	8224665	2	True				
ANR	8225120	IdentifierDecl	"symname = ""SymbPS"""		8224665	0					
ANR	8225121	IdentifierDeclType	LPSB8		8224665	0					
ANR	8225122	Identifier	symname		8224665	1					
ANR	8225123	AssignmentExpression	"symname = ""SymbPS"""		8224665	2		=			
ANR	8225124	Identifier	symname		8224665	0					
ANR	8225125	PrimaryExpression	"""SymbPS"""		8224665	1					
ANR	8225126	IdentifierDeclStatement	int j ;	338:16:11091:11096	8224665	3	True				
ANR	8225127	IdentifierDecl	j		8224665	0					
ANR	8225128	IdentifierDeclType	int		8224665	0					
ANR	8225129	Identifier	j		8224665	1					
ANR	8225130	IdentifierDeclStatement	bool found ;	339:16:11114:11124	8224665	4	True				
ANR	8225131	IdentifierDecl	found		8224665	0					
ANR	8225132	IdentifierDeclType	bool		8224665	0					
ANR	8225133	Identifier	found		8224665	1					
ANR	8225134	IfStatement	if ( pfDesc -> pcltFontNumber == 24463 )		8224665	5					
ANR	8225135	Condition	pfDesc -> pcltFontNumber == 24463	341:20:11147:11177	8224665	0	True				
ANR	8225136	EqualityExpression	pfDesc -> pcltFontNumber == 24463		8224665	0		==			
ANR	8225137	PtrMemberAccess	pfDesc -> pcltFontNumber		8224665	0					
ANR	8225138	Identifier	pfDesc		8224665	0					
ANR	8225139	Identifier	pcltFontNumber		8224665	1					
ANR	8225140	PrimaryExpression	24463		8224665	1					
ANR	8225141	ExpressionStatement	pname = symname	342:20:11200:11215	8224665	1	True				
ANR	8225142	AssignmentExpression	pname = symname		8224665	0		=			
ANR	8225143	Identifier	pname		8224665	0					
ANR	8225144	Identifier	symname		8224665	1					
ANR	8225145	ForStatement	for ( j = 0 ; strlen ( resident_table [ j ] . full_font_name ) ; j ++ )		8224665	6					
ANR	8225146	ForInit	j = 0 ;	343:21:11238:11243	8224665	0	True				
ANR	8225147	AssignmentExpression	j = 0		8224665	0		=			
ANR	8225148	Identifier	j		8224665	0					
ANR	8225149	PrimaryExpression	0		8224665	1					
ANR	8225150	Condition	strlen ( resident_table [ j ] . full_font_name )	343:28:11245:11284	8224665	1	True				
ANR	8225151	CallExpression	strlen ( resident_table [ j ] . full_font_name )		8224665	0					
ANR	8225152	Callee	strlen		8224665	0					
ANR	8225153	Identifier	strlen		8224665	0					
ANR	8225154	ArgumentList	resident_table [ j ] . full_font_name		8224665	1					
ANR	8225155	Argument	resident_table [ j ] . full_font_name		8224665	0					
ANR	8225156	MemberAccess	resident_table [ j ] . full_font_name		8224665	0					
ANR	8225157	ArrayIndexing	resident_table [ j ]		8224665	0					
ANR	8225158	Identifier	resident_table		8224665	0					
ANR	8225159	Identifier	j		8224665	1					
ANR	8225160	Identifier	full_font_name		8224665	1					
ANR	8225161	PostIncDecOperationExpression	j ++	343:70:11287:11289	8224665	2	True				
ANR	8225162	Identifier	j		8224665	0					
ANR	8225163	IncDec	++		8224665	1					
ANR	8225164	CompoundStatement		95:20:3412:3422	8224665	3					
ANR	8225165	IdentifierDeclStatement	pl_font_t * plfont ;	344:20:11314:11331	8224665	0	True				
ANR	8225166	IdentifierDecl	* plfont		8224665	0					
ANR	8225167	IdentifierDeclType	pl_font_t *		8224665	0					
ANR	8225168	Identifier	plfont		8224665	1					
ANR	8225169	IdentifierDeclStatement	int err_cd ;	345:20:11353:11363	8224665	1	True				
ANR	8225170	IdentifierDecl	err_cd		8224665	0					
ANR	8225171	IdentifierDeclType	int		8224665	0					
ANR	8225172	Identifier	err_cd		8224665	1					
ANR	8225173	IfStatement	"if ( strcmp ( resident_table [ j ] . full_font_name , pname ) != 0 )"		8224665	2					
ANR	8225174	Condition	"strcmp ( resident_table [ j ] . full_font_name , pname ) != 0"	347:24:11390:11441	8224665	0	True				
ANR	8225175	EqualityExpression	"strcmp ( resident_table [ j ] . full_font_name , pname ) != 0"		8224665	0		!=			
ANR	8225176	CallExpression	"strcmp ( resident_table [ j ] . full_font_name , pname )"		8224665	0					
ANR	8225177	Callee	strcmp		8224665	0					
ANR	8225178	Identifier	strcmp		8224665	0					
ANR	8225179	ArgumentList	resident_table [ j ] . full_font_name		8224665	1					
ANR	8225180	Argument	resident_table [ j ] . full_font_name		8224665	0					
ANR	8225181	MemberAccess	resident_table [ j ] . full_font_name		8224665	0					
ANR	8225182	ArrayIndexing	resident_table [ j ]		8224665	0					
ANR	8225183	Identifier	resident_table		8224665	0					
ANR	8225184	Identifier	j		8224665	1					
ANR	8225185	Identifier	full_font_name		8224665	1					
ANR	8225186	Argument	pname		8224665	1					
ANR	8225187	Identifier	pname		8224665	0					
ANR	8225188	PrimaryExpression	0		8224665	1					
ANR	8225189	ContinueStatement	continue ;	348:24:11468:11476	8224665	1	True				
ANR	8225190	ExpressionStatement	"err_cd = pl_load_mt_font ( fcoHandle , pdir , mem , i , & plfont )"	350:20:11499:11581	8224665	3	True				
ANR	8225191	AssignmentExpression	"err_cd = pl_load_mt_font ( fcoHandle , pdir , mem , i , & plfont )"		8224665	0		=			
ANR	8225192	Identifier	err_cd		8224665	0					
ANR	8225193	CallExpression	"pl_load_mt_font ( fcoHandle , pdir , mem , i , & plfont )"		8224665	1					
ANR	8225194	Callee	pl_load_mt_font		8224665	0					
ANR	8225195	Identifier	pl_load_mt_font		8224665	0					
ANR	8225196	ArgumentList	fcoHandle		8224665	1					
ANR	8225197	Argument	fcoHandle		8224665	0					
ANR	8225198	Identifier	fcoHandle		8224665	0					
ANR	8225199	Argument	pdir		8224665	1					
ANR	8225200	Identifier	pdir		8224665	0					
ANR	8225201	Argument	mem		8224665	2					
ANR	8225202	Identifier	mem		8224665	0					
ANR	8225203	Argument	i		8224665	3					
ANR	8225204	Identifier	i		8224665	0					
ANR	8225205	Argument	& plfont		8224665	4					
ANR	8225206	UnaryOperationExpression	& plfont		8224665	0					
ANR	8225207	UnaryOperator	&		8224665	0					
ANR	8225208	Identifier	plfont		8224665	1					
ANR	8225209	IfStatement	if ( err_cd != 0 )		8224665	4					
ANR	8225210	Condition	err_cd != 0	353:24:11608:11618	8224665	0	True				
ANR	8225211	EqualityExpression	err_cd != 0		8224665	0		!=			
ANR	8225212	Identifier	err_cd		8224665	0					
ANR	8225213	PrimaryExpression	0		8224665	1					
ANR	8225214	ReturnStatement	"return gs_throw1 ( err_cd , ""An unrecoverable failure occurred while loading the resident font %s\\n"" , pname ) ;"	354:24:11645:11832	8224665	1	True				
ANR	8225215	CallExpression	"gs_throw1 ( err_cd , ""An unrecoverable failure occurred while loading the resident font %s\\n"" , pname )"		8224665	0					
ANR	8225216	Callee	gs_throw1		8224665	0					
ANR	8225217	Identifier	gs_throw1		8224665	0					
ANR	8225218	ArgumentList	err_cd		8224665	1					
ANR	8225219	Argument	err_cd		8224665	0					
ANR	8225220	Identifier	err_cd		8224665	0					
ANR	8225221	Argument	"""An unrecoverable failure occurred while loading the resident font %s\\n"""		8224665	1					
ANR	8225222	PrimaryExpression	"""An unrecoverable failure occurred while loading the resident font %s\\n"""		8224665	0					
ANR	8225223	Argument	pname		8224665	2					
ANR	8225224	Identifier	pname		8224665	0					
ANR	8225225	ElseStatement	else		8224665	0					
ANR	8225226	CompoundStatement		108:24:3944:4043	8224665	0					
ANR	8225227	IdentifierDeclStatement	uint pitch_cp = ( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor + 0.5 ;	358:24:11885:11984	8224665	0	True				
ANR	8225228	IdentifierDecl	pitch_cp = ( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor + 0.5		8224665	0					
ANR	8225229	IdentifierDeclType	uint		8224665	0					
ANR	8225230	Identifier	pitch_cp		8224665	1					
ANR	8225231	AssignmentExpression	pitch_cp = ( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor + 0.5		8224665	2		=			
ANR	8225232	Identifier	pitch_cp		8224665	0					
ANR	8225233	AdditiveExpression	( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor + 0.5		8224665	1		+			
ANR	8225234	MultiplicativeExpression	( pfDesc -> spaceBand * 100.0 ) / pfDesc -> scaleFactor		8224665	0		/			
ANR	8225235	MultiplicativeExpression	pfDesc -> spaceBand * 100.0		8224665	0		*			
ANR	8225236	PtrMemberAccess	pfDesc -> spaceBand		8224665	0					
ANR	8225237	Identifier	pfDesc		8224665	0					
ANR	8225238	Identifier	spaceBand		8224665	1					
ANR	8225239	PrimaryExpression	100.0		8224665	1					
ANR	8225240	PtrMemberAccess	pfDesc -> scaleFactor		8224665	1					
ANR	8225241	Identifier	pfDesc		8224665	0					
ANR	8225242	Identifier	scaleFactor		8224665	1					
ANR	8225243	PrimaryExpression	0.5		8224665	1					
ANR	8225244	IfStatement	if ( gs_debug_c ( '=' ) )		8224665	1					
ANR	8225245	Condition	gs_debug_c ( '=' )	362:28:12028:12042	8224665	0	True				
ANR	8225246	CallExpression	gs_debug_c ( '=' )		8224665	0					
ANR	8225247	Callee	gs_debug_c		8224665	0					
ANR	8225248	Identifier	gs_debug_c		8224665	0					
ANR	8225249	ArgumentList	'='		8224665	1					
ANR	8225250	Argument	'='		8224665	0					
ANR	8225251	PrimaryExpression	'='		8224665	0					
ANR	8225252	ExpressionStatement	"dmprintf2 ( mem , ""Loading %s from fco %s\\n"" , pname , fcos [ k ] )"	363:28:12073:12169	8224665	1	True				
ANR	8225253	CallExpression	"dmprintf2 ( mem , ""Loading %s from fco %s\\n"" , pname , fcos [ k ] )"		8224665	0					
ANR	8225254	Callee	dmprintf2		8224665	0					
ANR	8225255	Identifier	dmprintf2		8224665	0					
ANR	8225256	ArgumentList	mem		8224665	1					
ANR	8225257	Argument	mem		8224665	0					
ANR	8225258	Identifier	mem		8224665	0					
ANR	8225259	Argument	"""Loading %s from fco %s\\n"""		8224665	1					
ANR	8225260	PrimaryExpression	"""Loading %s from fco %s\\n"""		8224665	0					
ANR	8225261	Argument	pname		8224665	2					
ANR	8225262	Identifier	pname		8224665	0					
ANR	8225263	Argument	fcos [ k ]		8224665	3					
ANR	8225264	ArrayIndexing	fcos [ k ]		8224665	0					
ANR	8225265	Identifier	fcos		8224665	0					
ANR	8225266	Identifier	k		8224665	1					
ANR	8225267	IfStatement	if ( pfDesc -> scaleFactor == 8782 )		8224665	2					
ANR	8225268	Condition	pfDesc -> scaleFactor == 8782	369:28:12338:12364	8224665	0	True				
ANR	8225269	EqualityExpression	pfDesc -> scaleFactor == 8782		8224665	0		==			
ANR	8225270	PtrMemberAccess	pfDesc -> scaleFactor		8224665	0					
ANR	8225271	Identifier	pfDesc		8224665	0					
ANR	8225272	Identifier	scaleFactor		8224665	1					
ANR	8225273	PrimaryExpression	8782		8224665	1					
ANR	8225274	CompoundStatement		119:57:4426:4426	8224665	1					
ANR	8225275	ExpressionStatement	plfont -> pts_per_inch = 72.307	370:28:12397:12426	8224665	0	True				
ANR	8225276	AssignmentExpression	plfont -> pts_per_inch = 72.307		8224665	0		=			
ANR	8225277	PtrMemberAccess	plfont -> pts_per_inch		8224665	0					
ANR	8225278	Identifier	plfont		8224665	0					
ANR	8225279	Identifier	pts_per_inch		8224665	1					
ANR	8225280	PrimaryExpression	72.307		8224665	1					
ANR	8225281	ExpressionStatement	pitch_cp = ( pfDesc -> spaceBand * 100 * 72.0 ) / ( pfDesc -> scaleFactor * 72.307 ) + 0.5	371:28:12456:12570	8224665	1	True				
ANR	8225282	AssignmentExpression	pitch_cp = ( pfDesc -> spaceBand * 100 * 72.0 ) / ( pfDesc -> scaleFactor * 72.307 ) + 0.5		8224665	0		=			
ANR	8225283	Identifier	pitch_cp		8224665	0					
ANR	8225284	AdditiveExpression	( pfDesc -> spaceBand * 100 * 72.0 ) / ( pfDesc -> scaleFactor * 72.307 ) + 0.5		8224665	1		+			
ANR	8225285	MultiplicativeExpression	( pfDesc -> spaceBand * 100 * 72.0 ) / ( pfDesc -> scaleFactor * 72.307 )		8224665	0		/			
ANR	8225286	MultiplicativeExpression	pfDesc -> spaceBand * 100 * 72.0		8224665	0		*			
ANR	8225287	PtrMemberAccess	pfDesc -> spaceBand		8224665	0					
ANR	8225288	Identifier	pfDesc		8224665	0					
ANR	8225289	Identifier	spaceBand		8224665	1					
ANR	8225290	MultiplicativeExpression	100 * 72.0		8224665	1		*			
ANR	8225291	PrimaryExpression	100		8224665	0					
ANR	8225292	PrimaryExpression	72.0		8224665	1					
ANR	8225293	MultiplicativeExpression	pfDesc -> scaleFactor * 72.307		8224665	1		*			
ANR	8225294	PtrMemberAccess	pfDesc -> scaleFactor		8224665	0					
ANR	8225295	Identifier	pfDesc		8224665	0					
ANR	8225296	Identifier	scaleFactor		8224665	1					
ANR	8225297	PrimaryExpression	72.307		8224665	1					
ANR	8225298	PrimaryExpression	0.5		8224665	1					
ANR	8225299	IfStatement	if ( gs_debug_c ( '=' ) )		8224665	3					
ANR	8225300	Condition	gs_debug_c ( '=' )	375:28:12639:12653	8224665	0	True				
ANR	8225301	CallExpression	gs_debug_c ( '=' )		8224665	0					
ANR	8225302	Callee	gs_debug_c		8224665	0					
ANR	8225303	Identifier	gs_debug_c		8224665	0					
ANR	8225304	ArgumentList	'='		8224665	1					
ANR	8225305	Argument	'='		8224665	0					
ANR	8225306	PrimaryExpression	'='		8224665	0					
ANR	8225307	ExpressionStatement	"dmprintf3 ( mem , ""scale factor=%d, pitch (cp)=%d per_inch_x100=%d\\n"" , pfDesc -> scaleFactor , pitch_cp , ( uint ) ( 720000.0 / pitch_cp ) )"	376:28:12684:12926	8224665	1	True				
ANR	8225308	CallExpression	"dmprintf3 ( mem , ""scale factor=%d, pitch (cp)=%d per_inch_x100=%d\\n"" , pfDesc -> scaleFactor , pitch_cp , ( uint ) ( 720000.0 / pitch_cp ) )"		8224665	0					
ANR	8225309	Callee	dmprintf3		8224665	0					
ANR	8225310	Identifier	dmprintf3		8224665	0					
ANR	8225311	ArgumentList	mem		8224665	1					
ANR	8225312	Argument	mem		8224665	0					
ANR	8225313	Identifier	mem		8224665	0					
ANR	8225314	Argument	"""scale factor=%d, pitch (cp)=%d per_inch_x100=%d\\n"""		8224665	1					
ANR	8225315	PrimaryExpression	"""scale factor=%d, pitch (cp)=%d per_inch_x100=%d\\n"""		8224665	0					
ANR	8225316	Argument	pfDesc -> scaleFactor		8224665	2					
ANR	8225317	PtrMemberAccess	pfDesc -> scaleFactor		8224665	0					
ANR	8225318	Identifier	pfDesc		8224665	0					
ANR	8225319	Identifier	scaleFactor		8224665	1					
ANR	8225320	Argument	pitch_cp		8224665	3					
ANR	8225321	Identifier	pitch_cp		8224665	0					
ANR	8225322	Argument	( uint ) ( 720000.0 / pitch_cp )		8224665	4					
ANR	8225323	CastExpression	( uint ) ( 720000.0 / pitch_cp )		8224665	0					
ANR	8225324	CastTarget	uint		8224665	0					
ANR	8225325	MultiplicativeExpression	720000.0 / pitch_cp		8224665	1		/			
ANR	8225326	PrimaryExpression	720000.0		8224665	0					
ANR	8225327	Identifier	pitch_cp		8224665	1					
ANR	8225328	ExpressionStatement	plfont -> font_type = resident_table [ j ] . font_type	382:24:12960:13007	8224665	4	True				
ANR	8225329	AssignmentExpression	plfont -> font_type = resident_table [ j ] . font_type		8224665	0		=			
ANR	8225330	PtrMemberAccess	plfont -> font_type		8224665	0					
ANR	8225331	Identifier	plfont		8224665	0					
ANR	8225332	Identifier	font_type		8224665	1					
ANR	8225333	MemberAccess	resident_table [ j ] . font_type		8224665	1					
ANR	8225334	ArrayIndexing	resident_table [ j ]		8224665	0					
ANR	8225335	Identifier	resident_table		8224665	0					
ANR	8225336	Identifier	j		8224665	1					
ANR	8225337	Identifier	font_type		8224665	1					
ANR	8225338	ExpressionStatement	plfont -> storage = storage	383:24:13033:13058	8224665	5	True				
ANR	8225339	AssignmentExpression	plfont -> storage = storage		8224665	0		=			
ANR	8225340	PtrMemberAccess	plfont -> storage		8224665	0					
ANR	8225341	Identifier	plfont		8224665	0					
ANR	8225342	Identifier	storage		8224665	1					
ANR	8225343	Identifier	storage		8224665	1					
ANR	8225344	ExpressionStatement	plfont -> data_are_permanent = false	384:24:13084:13118	8224665	6	True				
ANR	8225345	AssignmentExpression	plfont -> data_are_permanent = false		8224665	0		=			
ANR	8225346	PtrMemberAccess	plfont -> data_are_permanent		8224665	0					
ANR	8225347	Identifier	plfont		8224665	0					
ANR	8225348	Identifier	data_are_permanent		8224665	1					
ANR	8225349	Identifier	false		8224665	1					
ANR	8225350	ExpressionStatement	plfont -> params = resident_table [ j ] . params	385:24:13144:13185	8224665	7	True				
ANR	8225351	AssignmentExpression	plfont -> params = resident_table [ j ] . params		8224665	0		=			
ANR	8225352	PtrMemberAccess	plfont -> params		8224665	0					
ANR	8225353	Identifier	plfont		8224665	0					
ANR	8225354	Identifier	params		8224665	1					
ANR	8225355	MemberAccess	resident_table [ j ] . params		8224665	1					
ANR	8225356	ArrayIndexing	resident_table [ j ]		8224665	0					
ANR	8225357	Identifier	resident_table		8224665	0					
ANR	8225358	Identifier	j		8224665	1					
ANR	8225359	Identifier	params		8224665	1					
ANR	8225360	ExpressionStatement	"memcpy ( plfont -> character_complement , resident_table [ j ] . character_complement , 8 )"	394:24:13626:13736	8224665	8	True				
ANR	8225361	CallExpression	"memcpy ( plfont -> character_complement , resident_table [ j ] . character_complement , 8 )"		8224665	0					
ANR	8225362	Callee	memcpy		8224665	0					
ANR	8225363	Identifier	memcpy		8224665	0					
ANR	8225364	ArgumentList	plfont -> character_complement		8224665	1					
ANR	8225365	Argument	plfont -> character_complement		8224665	0					
ANR	8225366	PtrMemberAccess	plfont -> character_complement		8224665	0					
ANR	8225367	Identifier	plfont		8224665	0					
ANR	8225368	Identifier	character_complement		8224665	1					
ANR	8225369	Argument	resident_table [ j ] . character_complement		8224665	1					
ANR	8225370	MemberAccess	resident_table [ j ] . character_complement		8224665	0					
ANR	8225371	ArrayIndexing	resident_table [ j ]		8224665	0					
ANR	8225372	Identifier	resident_table		8224665	0					
ANR	8225373	Identifier	j		8224665	1					
ANR	8225374	Identifier	character_complement		8224665	1					
ANR	8225375	Argument	8		8224665	2					
ANR	8225376	PrimaryExpression	8		8224665	0					
ANR	8225377	IfStatement	if ( use_unicode_names_for_keys )		8224665	9					
ANR	8225378	Condition	use_unicode_names_for_keys	397:28:13767:13792	8224665	0	True				
ANR	8225379	Identifier	use_unicode_names_for_keys		8224665	0					
ANR	8225380	ExpressionStatement	"pl_dict_put ( pfontdict , resident_table [ j ] . unicode_fontname , 32 , plfont )"	398:28:13823:13973	8224665	1	True				
ANR	8225381	CallExpression	"pl_dict_put ( pfontdict , resident_table [ j ] . unicode_fontname , 32 , plfont )"		8224665	0					
ANR	8225382	Callee	pl_dict_put		8224665	0					
ANR	8225383	Identifier	pl_dict_put		8224665	0					
ANR	8225384	ArgumentList	pfontdict		8224665	1					
ANR	8225385	Argument	pfontdict		8224665	0					
ANR	8225386	Identifier	pfontdict		8224665	0					
ANR	8225387	Argument	resident_table [ j ] . unicode_fontname		8224665	1					
ANR	8225388	MemberAccess	resident_table [ j ] . unicode_fontname		8224665	0					
ANR	8225389	ArrayIndexing	resident_table [ j ]		8224665	0					
ANR	8225390	Identifier	resident_table		8224665	0					
ANR	8225391	Identifier	j		8224665	1					
ANR	8225392	Identifier	unicode_fontname		8224665	1					
ANR	8225393	Argument	32		8224665	2					
ANR	8225394	PrimaryExpression	32		8224665	0					
ANR	8225395	Argument	plfont		8224665	3					
ANR	8225396	Identifier	plfont		8224665	0					
ANR	8225397	ElseStatement	else		8224665	0					
ANR	8225398	CompoundStatement		151:29:6063:6063	8224665	0					
ANR	8225399	ExpressionStatement	key [ 2 ] = ( byte ) j	402:28:14034:14051	8224665	0	True				
ANR	8225400	AssignmentExpression	key [ 2 ] = ( byte ) j		8224665	0		=			
ANR	8225401	ArrayIndexing	key [ 2 ]		8224665	0					
ANR	8225402	Identifier	key		8224665	0					
ANR	8225403	PrimaryExpression	2		8224665	1					
ANR	8225404	CastExpression	( byte ) j		8224665	1					
ANR	8225405	CastTarget	byte		8224665	0					
ANR	8225406	Identifier	j		8224665	1					
ANR	8225407	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	403:28:14081:14100	8224665	1	True				
ANR	8225408	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8224665	0		=			
ANR	8225409	ArrayIndexing	key [ 0 ]		8224665	0					
ANR	8225410	Identifier	key		8224665	0					
ANR	8225411	PrimaryExpression	0		8224665	1					
ANR	8225412	AssignmentExpression	key [ 1 ] = 0		8224665	1		=			
ANR	8225413	ArrayIndexing	key [ 1 ]		8224665	0					
ANR	8225414	Identifier	key		8224665	0					
ANR	8225415	PrimaryExpression	1		8224665	1					
ANR	8225416	PrimaryExpression	0		8224665	1					
ANR	8225417	ExpressionStatement	"pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"	404:28:14130:14178	8224665	2	True				
ANR	8225418	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8224665	0					
ANR	8225419	Callee	pl_dict_put		8224665	0					
ANR	8225420	Identifier	pl_dict_put		8224665	0					
ANR	8225421	ArgumentList	pfontdict		8224665	1					
ANR	8225422	Argument	pfontdict		8224665	0					
ANR	8225423	Identifier	pfontdict		8224665	0					
ANR	8225424	Argument	key		8224665	1					
ANR	8225425	Identifier	key		8224665	0					
ANR	8225426	Argument	sizeof ( key )		8224665	2					
ANR	8225427	SizeofExpression	sizeof ( key )		8224665	0					
ANR	8225428	Sizeof	sizeof		8224665	0					
ANR	8225429	SizeofOperand	key		8224665	1					
ANR	8225430	Argument	plfont		8224665	3					
ANR	8225431	Identifier	plfont		8224665	0					
ANR	8225432	ExpressionStatement	"gs_free_object ( mem , pBuffer , ""TTFONTINFO buffer"" )"	409:12:14272:14321	8224665	20	True				
ANR	8225433	CallExpression	"gs_free_object ( mem , pBuffer , ""TTFONTINFO buffer"" )"		8224665	0					
ANR	8225434	Callee	gs_free_object		8224665	0					
ANR	8225435	Identifier	gs_free_object		8224665	0					
ANR	8225436	ArgumentList	mem		8224665	1					
ANR	8225437	Argument	mem		8224665	0					
ANR	8225438	Identifier	mem		8224665	0					
ANR	8225439	Argument	pBuffer		8224665	1					
ANR	8225440	Identifier	pBuffer		8224665	0					
ANR	8225441	Argument	"""TTFONTINFO buffer"""		8224665	2					
ANR	8225442	PrimaryExpression	"""TTFONTINFO buffer"""		8224665	0					
ANR	8225443	ExpressionStatement	"free_strs ( mem , fcos )"	412:4:14398:14418	8224665	14	True				
ANR	8225444	CallExpression	"free_strs ( mem , fcos )"		8224665	0					
ANR	8225445	Callee	free_strs		8224665	0					
ANR	8225446	Identifier	free_strs		8224665	0					
ANR	8225447	ArgumentList	mem		8224665	1					
ANR	8225448	Argument	mem		8224665	0					
ANR	8225449	Identifier	mem		8224665	0					
ANR	8225450	Argument	fcos		8224665	1					
ANR	8225451	Identifier	fcos		8224665	0					
ANR	8225452	ExpressionStatement	"( void ) pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"	414:4:14481:14605	8224665	15	True				
ANR	8225453	CastExpression	"( void ) pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8224665	0					
ANR	8225454	CastTarget	void		8224665	0					
ANR	8225455	CallExpression	"pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8224665	1					
ANR	8225456	Callee	pl_load_ufst_lineprinter		8224665	0					
ANR	8225457	Identifier	pl_load_ufst_lineprinter		8224665	0					
ANR	8225458	ArgumentList	mem		8224665	1					
ANR	8225459	Argument	mem		8224665	0					
ANR	8225460	Identifier	mem		8224665	0					
ANR	8225461	Argument	pfontdict		8224665	1					
ANR	8225462	Identifier	pfontdict		8224665	0					
ANR	8225463	Argument	pdir		8224665	2					
ANR	8225464	Identifier	pdir		8224665	0					
ANR	8225465	Argument	storage		8224665	3					
ANR	8225466	Identifier	storage		8224665	0					
ANR	8225467	Argument	use_unicode_names_for_keys		8224665	4					
ANR	8225468	Identifier	use_unicode_names_for_keys		8224665	0					
ANR	8225469	IfStatement	if ( gs_debug_c ( '=' ) )		8224665	16					
ANR	8225470	Condition	gs_debug_c ( '=' )	417:8:14628:14642	8224665	0	True				
ANR	8225471	CallExpression	gs_debug_c ( '=' )		8224665	0					
ANR	8225472	Callee	gs_debug_c		8224665	0					
ANR	8225473	Identifier	gs_debug_c		8224665	0					
ANR	8225474	ArgumentList	'='		8224665	1					
ANR	8225475	Argument	'='		8224665	0					
ANR	8225476	PrimaryExpression	'='		8224665	0					
ANR	8225477	ExpressionStatement	"pl_check_fonts ( mem , pfontdict , use_unicode_names_for_keys )"	418:8:14653:14711	8224665	1	True				
ANR	8225478	CallExpression	"pl_check_fonts ( mem , pfontdict , use_unicode_names_for_keys )"		8224665	0					
ANR	8225479	Callee	pl_check_fonts		8224665	0					
ANR	8225480	Identifier	pl_check_fonts		8224665	0					
ANR	8225481	ArgumentList	mem		8224665	1					
ANR	8225482	Argument	mem		8224665	0					
ANR	8225483	Identifier	mem		8224665	0					
ANR	8225484	Argument	pfontdict		8224665	1					
ANR	8225485	Identifier	pfontdict		8224665	0					
ANR	8225486	Argument	use_unicode_names_for_keys		8224665	2					
ANR	8225487	Identifier	use_unicode_names_for_keys		8224665	0					
ANR	8225488	ReturnStatement	return TRUE ;	420:4:14724:14735	8224665	17	True				
ANR	8225489	Identifier	TRUE		8224665	0					
ANR	8225490	ReturnType	int		8224665	1					
ANR	8225491	Identifier	pl_load_built_in_fonts		8224665	2					
ANR	8225492	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8224665	3					
ANR	8225493	Parameter	const char * pathname	248:23:7764:7783	8224665	0	True				
ANR	8225494	ParameterType	const char *		8224665	0					
ANR	8225495	Identifier	pathname		8224665	1					
ANR	8225496	Parameter	gs_memory_t * mem	248:45:7786:7802	8224665	1	True				
ANR	8225497	ParameterType	gs_memory_t *		8224665	0					
ANR	8225498	Identifier	mem		8224665	1					
ANR	8225499	Parameter	pl_dict_t * pfontdict	249:23:7828:7848	8224665	2	True				
ANR	8225500	ParameterType	pl_dict_t *		8224665	0					
ANR	8225501	Identifier	pfontdict		8224665	1					
ANR	8225502	Parameter	gs_font_dir * pdir	249:46:7851:7868	8224665	3	True				
ANR	8225503	ParameterType	gs_font_dir *		8224665	0					
ANR	8225504	Identifier	pdir		8224665	1					
ANR	8225505	Parameter	int storage	249:66:7871:7881	8224665	4	True				
ANR	8225506	ParameterType	int		8224665	0					
ANR	8225507	Identifier	storage		8224665	1					
ANR	8225508	Parameter	bool use_unicode_names_for_keys	250:23:7907:7937	8224665	5	True				
ANR	8225509	ParameterType	bool		8224665	0					
ANR	8225510	Identifier	use_unicode_names_for_keys		8224665	1					
ANR	8225511	CFGEntryNode	ENTRY		8224665		True				
ANR	8225512	CFGExitNode	EXIT		8224665		True				
ANR	8225513	Symbol	plugins		8224665						
ANR	8225514	Symbol	UFSTPLUGINS		8224665						
ANR	8225515	Symbol	resident_table [ j ] . full_font_name		8224665						
ANR	8225516	Symbol	UFSTFCOS		8224665						
ANR	8225517	Symbol	* fcos		8224665						
ANR	8225518	Symbol	fcoHandle		8224665						
ANR	8225519	Symbol	* resident_table		8224665						
ANR	8225520	Symbol	* key		8224665						
ANR	8225521	Symbol	plfont		8224665						
ANR	8225522	Symbol	plfont -> data_are_permanent		8224665						
ANR	8225523	Symbol	plugins_opened		8224665						
ANR	8225524	Symbol	resident_table [ j ] . character_complement		8224665						
ANR	8225525	Symbol	gx_UFST_init		8224665						
ANR	8225526	Symbol	bSize		8224665						
ANR	8225527	Symbol	strlen		8224665						
ANR	8225528	Symbol	& fcoHandle		8224665						
ANR	8225529	Symbol	gs_debug_c		8224665						
ANR	8225530	Symbol	plfont -> font_type		8224665						
ANR	8225531	Symbol	resident_table		8224665						
ANR	8225532	Symbol	strcmp		8224665						
ANR	8225533	Symbol	plfont -> storage		8224665						
ANR	8225534	Symbol	* fcHndlPlAry		8224665						
ANR	8225535	Symbol	pname		8224665						
ANR	8225536	Symbol	pdir		8224665						
ANR	8225537	Symbol	TRUE		8224665						
ANR	8225538	Symbol	pBuffer		8224665						
ANR	8225539	Symbol	plfont -> character_complement		8224665						
ANR	8225540	Symbol	* plugins		8224665						
ANR	8225541	Symbol	err_cd		8224665						
ANR	8225542	Symbol	pathname		8224665						
ANR	8225543	Symbol	pfDesc -> pcltFontNumber		8224665						
ANR	8225544	Symbol	resident_table [ j ] . font_type		8224665						
ANR	8225545	Symbol	pfontdict		8224665						
ANR	8225546	Symbol	ufst_root_dir		8224665						
ANR	8225547	Symbol	true		8224665						
ANR	8225548	Symbol	pl_load_mt_font		8224665						
ANR	8225549	Symbol	status		8224665						
ANR	8225550	Symbol	gs_throw1		8224665						
ANR	8225551	Symbol	pl_ufst_get_list		8224665						
ANR	8225552	Symbol	pthnm		8224665						
ANR	8225553	Symbol	pfDesc -> scaleFactor		8224665						
ANR	8225554	Symbol	* pfDesc		8224665						
ANR	8225555	Symbol	symname		8224665						
ANR	8225556	Symbol	gx_UFST_find_fco_handle_by_name		8224665						
ANR	8225557	Symbol	storage		8224665						
ANR	8225558	Symbol	pitch_cp		8224665						
ANR	8225559	Symbol	plfont -> pts_per_inch		8224665						
ANR	8225560	Symbol	fcos		8224665						
ANR	8225561	Symbol	found		8224665						
ANR	8225562	Symbol	mem		8224665						
ANR	8225563	Symbol	key		8224665						
ANR	8225564	Symbol	pl_dict_length		8224665						
ANR	8225565	Symbol	gs_alloc_bytes		8224665						
ANR	8225566	Symbol	resident_table [ j ] . unicode_fontname		8224665						
ANR	8225567	Symbol	pfDesc -> psname		8224665						
ANR	8225568	Symbol	false		8224665						
ANR	8225569	Symbol	i		8224665						
ANR	8225570	Symbol	j		8224665						
ANR	8225571	Symbol	use_unicode_names_for_keys		8224665						
ANR	8225572	Symbol	k		8224665						
ANR	8225573	Symbol	gx_UFST_open_static_fco		8224665						
ANR	8225574	Symbol	& plfont		8224665						
ANR	8225575	Symbol	pfDesc -> spaceBand		8224665						
ANR	8225576	Symbol	* j		8224665						
ANR	8225577	Symbol	* k		8224665						
ANR	8225578	Symbol	resident_table [ j ] . params		8224665						
ANR	8225579	Symbol	plfont -> params		8224665						
ANR	8225580	Symbol	* plfont		8224665						
ANR	8225581	Symbol	FALSE		8224665						
ANR	8225582	Symbol	fcHndlPlAry		8224665						
ANR	8225583	Symbol	pfDesc		8224665						
ANR	8225584	Function	pl_load_ufst_lineprinter	423:0:14740:18157							
ANR	8225585	FunctionDef	"pl_load_ufst_lineprinter (gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8225584	0					
ANR	8225586	CompoundStatement		427:0:14927:18157	8225584	0					
ANR	8225587	IdentifierDeclStatement	int i ;	428:4:14933:14938	8225584	0	True				
ANR	8225588	IdentifierDecl	i		8225584	0					
ANR	8225589	IdentifierDeclType	int		8225584	0					
ANR	8225590	Identifier	i		8225584	1					
ANR	8225591	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) ; i ++ )		8225584	1					
ANR	8225592	ForInit	i = 0 ;	430:9:14950:14955	8225584	0	True				
ANR	8225593	AssignmentExpression	i = 0		8225584	0		=			
ANR	8225594	Identifier	i		8225584	0					
ANR	8225595	PrimaryExpression	0		8225584	1					
ANR	8225596	Condition	strlen ( resident_table [ i ] . full_font_name )	430:16:14957:14996	8225584	1	True				
ANR	8225597	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8225584	0					
ANR	8225598	Callee	strlen		8225584	0					
ANR	8225599	Identifier	strlen		8225584	0					
ANR	8225600	ArgumentList	resident_table [ i ] . full_font_name		8225584	1					
ANR	8225601	Argument	resident_table [ i ] . full_font_name		8225584	0					
ANR	8225602	MemberAccess	resident_table [ i ] . full_font_name		8225584	0					
ANR	8225603	ArrayIndexing	resident_table [ i ]		8225584	0					
ANR	8225604	Identifier	resident_table		8225584	0					
ANR	8225605	Identifier	i		8225584	1					
ANR	8225606	Identifier	full_font_name		8225584	1					
ANR	8225607	PostIncDecOperationExpression	i ++	430:58:14999:15001	8225584	2	True				
ANR	8225608	Identifier	i		8225584	0					
ANR	8225609	IncDec	++		8225584	1					
ANR	8225610	CompoundStatement		4:63:76:76	8225584	3					
ANR	8225611	IfStatement	if ( resident_table [ i ] . params . typeface_family == 0 )		8225584	0					
ANR	8225612	Condition	resident_table [ i ] . params . typeface_family == 0	431:12:15018:15062	8225584	0	True				
ANR	8225613	EqualityExpression	resident_table [ i ] . params . typeface_family == 0		8225584	0		==			
ANR	8225614	MemberAccess	resident_table [ i ] . params . typeface_family		8225584	0					
ANR	8225615	MemberAccess	resident_table [ i ] . params		8225584	0					
ANR	8225616	ArrayIndexing	resident_table [ i ]		8225584	0					
ANR	8225617	Identifier	resident_table		8225584	0					
ANR	8225618	Identifier	i		8225584	1					
ANR	8225619	Identifier	params		8225584	1					
ANR	8225620	Identifier	typeface_family		8225584	1					
ANR	8225621	PrimaryExpression	0		8225584	1					
ANR	8225622	CompoundStatement		13:12:495:503	8225584	1					
ANR	8225623	IdentifierDeclStatement	byte * header = NULL ;	432:12:15079:15098	8225584	0	True				
ANR	8225624	IdentifierDecl	* header = NULL		8225584	0					
ANR	8225625	IdentifierDeclType	byte *		8225584	0					
ANR	8225626	Identifier	header		8225584	1					
ANR	8225627	AssignmentExpression	* header = NULL		8225584	2		=			
ANR	8225628	Identifier	NULL		8225584	0					
ANR	8225629	Identifier	NULL		8225584	1					
ANR	8225630	IdentifierDeclStatement	byte * char_data = NULL ;	433:12:15112:15134	8225584	1	True				
ANR	8225631	IdentifierDecl	* char_data = NULL		8225584	0					
ANR	8225632	IdentifierDeclType	byte *		8225584	0					
ANR	8225633	Identifier	char_data		8225584	1					
ANR	8225634	AssignmentExpression	* char_data = NULL		8225584	2		=			
ANR	8225635	Identifier	NULL		8225584	0					
ANR	8225636	Identifier	NULL		8225584	1					
ANR	8225637	IdentifierDeclStatement	"pl_font_t * pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" ) ;"	434:12:15148:15239	8225584	2	True				
ANR	8225638	IdentifierDecl	"* pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8225584	0					
ANR	8225639	IdentifierDeclType	pl_font_t *		8225584	0					
ANR	8225640	Identifier	pplfont		8225584	1					
ANR	8225641	AssignmentExpression	"* pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8225584	2		=			
ANR	8225642	Identifier	pplfont		8225584	0					
ANR	8225643	CallExpression	"pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8225584	1					
ANR	8225644	Callee	pl_alloc_font		8225584	0					
ANR	8225645	Identifier	pl_alloc_font		8225584	0					
ANR	8225646	ArgumentList	mem		8225584	1					
ANR	8225647	Argument	mem		8225584	0					
ANR	8225648	Identifier	mem		8225584	0					
ANR	8225649	Argument	"""pl_load_ufst_lineprinter pplfont"""		8225584	1					
ANR	8225650	PrimaryExpression	"""pl_load_ufst_lineprinter pplfont"""		8225584	0					
ANR	8225651	IdentifierDeclStatement	"gs_font_base * pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" ) ;"	436:12:15253:15409	8225584	3	True				
ANR	8225652	IdentifierDecl	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8225584	0					
ANR	8225653	IdentifierDeclType	gs_font_base *		8225584	0					
ANR	8225654	Identifier	pfont		8225584	1					
ANR	8225655	AssignmentExpression	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8225584	2		=			
ANR	8225656	Identifier	pfont		8225584	0					
ANR	8225657	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8225584	1					
ANR	8225658	Callee	gs_alloc_struct		8225584	0					
ANR	8225659	Identifier	gs_alloc_struct		8225584	0					
ANR	8225660	ArgumentList	mem		8225584	1					
ANR	8225661	Argument	mem		8225584	0					
ANR	8225662	Identifier	mem		8225584	0					
ANR	8225663	Argument	gs_font_base		8225584	1					
ANR	8225664	Identifier	gs_font_base		8225584	0					
ANR	8225665	Argument	& st_gs_font_base		8225584	2					
ANR	8225666	UnaryOperationExpression	& st_gs_font_base		8225584	0					
ANR	8225667	UnaryOperator	&		8225584	0					
ANR	8225668	Identifier	st_gs_font_base		8225584	1					
ANR	8225669	Argument	"""pl_load_ufst_lineprinter pfont"""		8225584	3					
ANR	8225670	PrimaryExpression	"""pl_load_ufst_lineprinter pfont"""		8225584	0					
ANR	8225671	IdentifierDeclStatement	int code ;	439:12:15423:15431	8225584	4	True				
ANR	8225672	IdentifierDecl	code		8225584	0					
ANR	8225673	IdentifierDeclType	int		8225584	0					
ANR	8225674	Identifier	code		8225584	1					
ANR	8225675	ExpressionStatement	"pl_get_ulp_character_data ( & header , & char_data )"	441:12:15446:15492	8225584	5	True				
ANR	8225676	CallExpression	"pl_get_ulp_character_data ( & header , & char_data )"		8225584	0					
ANR	8225677	Callee	pl_get_ulp_character_data		8225584	0					
ANR	8225678	Identifier	pl_get_ulp_character_data		8225584	0					
ANR	8225679	ArgumentList	& header		8225584	1					
ANR	8225680	Argument	& header		8225584	0					
ANR	8225681	UnaryOperationExpression	& header		8225584	0					
ANR	8225682	UnaryOperator	&		8225584	0					
ANR	8225683	Identifier	header		8225584	1					
ANR	8225684	Argument	& char_data		8225584	1					
ANR	8225685	UnaryOperationExpression	& char_data		8225584	0					
ANR	8225686	UnaryOperator	&		8225584	0					
ANR	8225687	Identifier	char_data		8225584	1					
ANR	8225688	IfStatement	if ( pplfont == 0 || pfont == 0 )		8225584	6					
ANR	8225689	Condition	pplfont == 0 || pfont == 0	444:16:15572:15597	8225584	0	True				
ANR	8225690	OrExpression	pplfont == 0 || pfont == 0		8225584	0		||			
ANR	8225691	EqualityExpression	pplfont == 0		8225584	0		==			
ANR	8225692	Identifier	pplfont		8225584	0					
ANR	8225693	PrimaryExpression	0		8225584	1					
ANR	8225694	EqualityExpression	pfont == 0		8225584	1		==			
ANR	8225695	Identifier	pfont		8225584	0					
ANR	8225696	PrimaryExpression	0		8225584	1					
ANR	8225697	ReturnStatement	return - 1 ;	445:16:15616:15625	8225584	1	True				
ANR	8225698	UnaryOperationExpression	- 1		8225584	0					
ANR	8225699	UnaryOperator	-		8225584	0					
ANR	8225700	PrimaryExpression	1		8225584	1					
ANR	8225701	IfStatement	"if ( pl_fill_in_font ( pfont , pplfont , pdir , mem , ""lineprinter_fonts"" ) < 0 )"		8225584	7					
ANR	8225702	Condition	"pl_fill_in_font ( pfont , pplfont , pdir , mem , ""lineprinter_fonts"" ) < 0"	446:16:15643:15726	8225584	0	True				
ANR	8225703	RelationalExpression	"pl_fill_in_font ( pfont , pplfont , pdir , mem , ""lineprinter_fonts"" ) < 0"		8225584	0		<			
ANR	8225704	CallExpression	"pl_fill_in_font ( pfont , pplfont , pdir , mem , ""lineprinter_fonts"" )"		8225584	0					
ANR	8225705	Callee	pl_fill_in_font		8225584	0					
ANR	8225706	Identifier	pl_fill_in_font		8225584	0					
ANR	8225707	ArgumentList	pfont		8225584	1					
ANR	8225708	Argument	pfont		8225584	0					
ANR	8225709	Identifier	pfont		8225584	0					
ANR	8225710	Argument	pplfont		8225584	1					
ANR	8225711	Identifier	pplfont		8225584	0					
ANR	8225712	Argument	pdir		8225584	2					
ANR	8225713	Identifier	pdir		8225584	0					
ANR	8225714	Argument	mem		8225584	3					
ANR	8225715	Identifier	mem		8225584	0					
ANR	8225716	Argument	"""lineprinter_fonts"""		8225584	4					
ANR	8225717	PrimaryExpression	"""lineprinter_fonts"""		8225584	0					
ANR	8225718	PrimaryExpression	0		8225584	1					
ANR	8225719	ReturnStatement	return - 1 ;	448:16:15745:15754	8225584	1	True				
ANR	8225720	UnaryOperationExpression	- 1		8225584	0					
ANR	8225721	UnaryOperator	-		8225584	0					
ANR	8225722	PrimaryExpression	1		8225584	1					
ANR	8225723	ExpressionStatement	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"	450:12:15769:15819	8225584	8	True				
ANR	8225724	CallExpression	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"		8225584	0					
ANR	8225725	Callee	pl_fill_in_bitmap_font		8225584	0					
ANR	8225726	Identifier	pl_fill_in_bitmap_font		8225584	0					
ANR	8225727	ArgumentList	pfont		8225584	1					
ANR	8225728	Argument	pfont		8225584	0					
ANR	8225729	Identifier	pfont		8225584	0					
ANR	8225730	Argument	"gs_next_ids ( mem , 1 )"		8225584	1					
ANR	8225731	CallExpression	"gs_next_ids ( mem , 1 )"		8225584	0					
ANR	8225732	Callee	gs_next_ids		8225584	0					
ANR	8225733	Identifier	gs_next_ids		8225584	0					
ANR	8225734	ArgumentList	mem		8225584	1					
ANR	8225735	Argument	mem		8225584	0					
ANR	8225736	Identifier	mem		8225584	0					
ANR	8225737	Argument	1		8225584	1					
ANR	8225738	PrimaryExpression	1		8225584	0					
ANR	8225739	ExpressionStatement	pplfont -> params = resident_table [ i ] . params	451:12:15833:15875	8225584	9	True				
ANR	8225740	AssignmentExpression	pplfont -> params = resident_table [ i ] . params		8225584	0		=			
ANR	8225741	PtrMemberAccess	pplfont -> params		8225584	0					
ANR	8225742	Identifier	pplfont		8225584	0					
ANR	8225743	Identifier	params		8225584	1					
ANR	8225744	MemberAccess	resident_table [ i ] . params		8225584	1					
ANR	8225745	ArrayIndexing	resident_table [ i ]		8225584	0					
ANR	8225746	Identifier	resident_table		8225584	0					
ANR	8225747	Identifier	i		8225584	1					
ANR	8225748	Identifier	params		8225584	1					
ANR	8225749	ExpressionStatement	"memcpy ( pplfont -> character_complement , resident_table [ i ] . character_complement , 8 )"	452:12:15889:15988	8225584	10	True				
ANR	8225750	CallExpression	"memcpy ( pplfont -> character_complement , resident_table [ i ] . character_complement , 8 )"		8225584	0					
ANR	8225751	Callee	memcpy		8225584	0					
ANR	8225752	Identifier	memcpy		8225584	0					
ANR	8225753	ArgumentList	pplfont -> character_complement		8225584	1					
ANR	8225754	Argument	pplfont -> character_complement		8225584	0					
ANR	8225755	PtrMemberAccess	pplfont -> character_complement		8225584	0					
ANR	8225756	Identifier	pplfont		8225584	0					
ANR	8225757	Identifier	character_complement		8225584	1					
ANR	8225758	Argument	resident_table [ i ] . character_complement		8225584	1					
ANR	8225759	MemberAccess	resident_table [ i ] . character_complement		8225584	0					
ANR	8225760	ArrayIndexing	resident_table [ i ]		8225584	0					
ANR	8225761	Identifier	resident_table		8225584	0					
ANR	8225762	Identifier	i		8225584	1					
ANR	8225763	Identifier	character_complement		8225584	1					
ANR	8225764	Argument	8		8225584	2					
ANR	8225765	PrimaryExpression	8		8225584	0					
ANR	8225766	IfStatement	if ( use_unicode_names_for_keys )		8225584	11					
ANR	8225767	Condition	use_unicode_names_for_keys	455:16:16007:16032	8225584	0	True				
ANR	8225768	Identifier	use_unicode_names_for_keys		8225584	0					
ANR	8225769	ExpressionStatement	"pl_dict_put ( pfontdict , resident_table [ i ] . unicode_fontname , 32 , pplfont )"	456:16:16051:16150	8225584	1	True				
ANR	8225770	CallExpression	"pl_dict_put ( pfontdict , resident_table [ i ] . unicode_fontname , 32 , pplfont )"		8225584	0					
ANR	8225771	Callee	pl_dict_put		8225584	0					
ANR	8225772	Identifier	pl_dict_put		8225584	0					
ANR	8225773	ArgumentList	pfontdict		8225584	1					
ANR	8225774	Argument	pfontdict		8225584	0					
ANR	8225775	Identifier	pfontdict		8225584	0					
ANR	8225776	Argument	resident_table [ i ] . unicode_fontname		8225584	1					
ANR	8225777	MemberAccess	resident_table [ i ] . unicode_fontname		8225584	0					
ANR	8225778	ArrayIndexing	resident_table [ i ]		8225584	0					
ANR	8225779	Identifier	resident_table		8225584	0					
ANR	8225780	Identifier	i		8225584	1					
ANR	8225781	Identifier	unicode_fontname		8225584	1					
ANR	8225782	Argument	32		8225584	2					
ANR	8225783	PrimaryExpression	32		8225584	0					
ANR	8225784	Argument	pplfont		8225584	3					
ANR	8225785	Identifier	pplfont		8225584	0					
ANR	8225786	ElseStatement	else		8225584	0					
ANR	8225787	CompoundStatement		33:16:1259:1270	8225584	0					
ANR	8225788	IdentifierDeclStatement	byte key [ 3 ] ;	459:16:16187:16198	8225584	0	True				
ANR	8225789	IdentifierDecl	key [ 3 ]		8225584	0					
ANR	8225790	IdentifierDeclType	byte [ 3 ]		8225584	0					
ANR	8225791	Identifier	key		8225584	1					
ANR	8225792	PrimaryExpression	3		8225584	2					
ANR	8225793	ExpressionStatement	key [ 2 ] = ( byte ) i	461:16:16217:16234	8225584	1	True				
ANR	8225794	AssignmentExpression	key [ 2 ] = ( byte ) i		8225584	0		=			
ANR	8225795	ArrayIndexing	key [ 2 ]		8225584	0					
ANR	8225796	Identifier	key		8225584	0					
ANR	8225797	PrimaryExpression	2		8225584	1					
ANR	8225798	CastExpression	( byte ) i		8225584	1					
ANR	8225799	CastTarget	byte		8225584	0					
ANR	8225800	Identifier	i		8225584	1					
ANR	8225801	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	462:16:16252:16271	8225584	2	True				
ANR	8225802	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8225584	0		=			
ANR	8225803	ArrayIndexing	key [ 0 ]		8225584	0					
ANR	8225804	Identifier	key		8225584	0					
ANR	8225805	PrimaryExpression	0		8225584	1					
ANR	8225806	AssignmentExpression	key [ 1 ] = 0		8225584	1		=			
ANR	8225807	ArrayIndexing	key [ 1 ]		8225584	0					
ANR	8225808	Identifier	key		8225584	0					
ANR	8225809	PrimaryExpression	1		8225584	1					
ANR	8225810	PrimaryExpression	0		8225584	1					
ANR	8225811	ExpressionStatement	"pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"	463:16:16289:16338	8225584	3	True				
ANR	8225812	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"		8225584	0					
ANR	8225813	Callee	pl_dict_put		8225584	0					
ANR	8225814	Identifier	pl_dict_put		8225584	0					
ANR	8225815	ArgumentList	pfontdict		8225584	1					
ANR	8225816	Argument	pfontdict		8225584	0					
ANR	8225817	Identifier	pfontdict		8225584	0					
ANR	8225818	Argument	key		8225584	1					
ANR	8225819	Identifier	key		8225584	0					
ANR	8225820	Argument	sizeof ( key )		8225584	2					
ANR	8225821	SizeofExpression	sizeof ( key )		8225584	0					
ANR	8225822	Sizeof	sizeof		8225584	0					
ANR	8225823	SizeofOperand	key		8225584	1					
ANR	8225824	Argument	pplfont		8225584	3					
ANR	8225825	Identifier	pplfont		8225584	0					
ANR	8225826	ExpressionStatement	pplfont -> storage = storage	465:12:16366:16392	8225584	12	True				
ANR	8225827	AssignmentExpression	pplfont -> storage = storage		8225584	0		=			
ANR	8225828	PtrMemberAccess	pplfont -> storage		8225584	0					
ANR	8225829	Identifier	pplfont		8225584	0					
ANR	8225830	Identifier	storage		8225584	1					
ANR	8225831	Identifier	storage		8225584	1					
ANR	8225832	ExpressionStatement	pplfont -> data_are_permanent = true	466:12:16439:16473	8225584	13	True				
ANR	8225833	AssignmentExpression	pplfont -> data_are_permanent = true		8225584	0		=			
ANR	8225834	PtrMemberAccess	pplfont -> data_are_permanent		8225584	0					
ANR	8225835	Identifier	pplfont		8225584	0					
ANR	8225836	Identifier	data_are_permanent		8225584	1					
ANR	8225837	Identifier	true		8225584	1					
ANR	8225838	ExpressionStatement	pplfont -> header = ( byte * ) header	467:12:16487:16520	8225584	14	True				
ANR	8225839	AssignmentExpression	pplfont -> header = ( byte * ) header		8225584	0		=			
ANR	8225840	PtrMemberAccess	pplfont -> header		8225584	0					
ANR	8225841	Identifier	pplfont		8225584	0					
ANR	8225842	Identifier	header		8225584	1					
ANR	8225843	CastExpression	( byte * ) header		8225584	1					
ANR	8225844	CastTarget	byte *		8225584	0					
ANR	8225845	Identifier	header		8225584	1					
ANR	8225846	ExpressionStatement	pplfont -> font_type = plft_8bit_printable	468:12:16534:16574	8225584	15	True				
ANR	8225847	AssignmentExpression	pplfont -> font_type = plft_8bit_printable		8225584	0		=			
ANR	8225848	PtrMemberAccess	pplfont -> font_type		8225584	0					
ANR	8225849	Identifier	pplfont		8225584	0					
ANR	8225850	Identifier	font_type		8225584	1					
ANR	8225851	Identifier	plft_8bit_printable		8225584	1					
ANR	8225852	ExpressionStatement	pplfont -> scaling_technology = plfst_bitmap	469:12:16588:16630	8225584	16	True				
ANR	8225853	AssignmentExpression	pplfont -> scaling_technology = plfst_bitmap		8225584	0		=			
ANR	8225854	PtrMemberAccess	pplfont -> scaling_technology		8225584	0					
ANR	8225855	Identifier	pplfont		8225584	0					
ANR	8225856	Identifier	scaling_technology		8225584	1					
ANR	8225857	Identifier	plfst_bitmap		8225584	1					
ANR	8225858	ExpressionStatement	pplfont -> is_xl_format = false	470:12:16644:16673	8225584	17	True				
ANR	8225859	AssignmentExpression	pplfont -> is_xl_format = false		8225584	0		=			
ANR	8225860	PtrMemberAccess	pplfont -> is_xl_format		8225584	0					
ANR	8225861	Identifier	pplfont		8225584	0					
ANR	8225862	Identifier	is_xl_format		8225584	1					
ANR	8225863	Identifier	false		8225584	1					
ANR	8225864	ExpressionStatement	pplfont -> resolution . x = pplfont -> resolution . y = 300	471:12:16687:16738	8225584	18	True				
ANR	8225865	AssignmentExpression	pplfont -> resolution . x = pplfont -> resolution . y = 300		8225584	0		=			
ANR	8225866	MemberAccess	pplfont -> resolution . x		8225584	0					
ANR	8225867	PtrMemberAccess	pplfont -> resolution		8225584	0					
ANR	8225868	Identifier	pplfont		8225584	0					
ANR	8225869	Identifier	resolution		8225584	1					
ANR	8225870	Identifier	x		8225584	1					
ANR	8225871	AssignmentExpression	pplfont -> resolution . y = 300		8225584	1		=			
ANR	8225872	MemberAccess	pplfont -> resolution . y		8225584	0					
ANR	8225873	PtrMemberAccess	pplfont -> resolution		8225584	0					
ANR	8225874	Identifier	pplfont		8225584	0					
ANR	8225875	Identifier	resolution		8225584	1					
ANR	8225876	Identifier	y		8225584	1					
ANR	8225877	PrimaryExpression	300		8225584	1					
ANR	8225878	ExpressionStatement	"code = pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"	473:12:16753:16899	8225584	19	True				
ANR	8225879	AssignmentExpression	"code = pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"		8225584	0		=			
ANR	8225880	Identifier	code		8225584	0					
ANR	8225881	CallExpression	"pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"		8225584	1					
ANR	8225882	Callee	pl_font_alloc_glyph_table		8225584	0					
ANR	8225883	Identifier	pl_font_alloc_glyph_table		8225584	0					
ANR	8225884	ArgumentList	pplfont		8225584	1					
ANR	8225885	Argument	pplfont		8225584	0					
ANR	8225886	Identifier	pplfont		8225584	0					
ANR	8225887	Argument	256		8225584	1					
ANR	8225888	PrimaryExpression	256		8225584	0					
ANR	8225889	Argument	mem		8225584	2					
ANR	8225890	Identifier	mem		8225584	0					
ANR	8225891	Argument	"""pl_load_ufst_lineprinter pplfont (glyph table)"""		8225584	3					
ANR	8225892	PrimaryExpression	"""pl_load_ufst_lineprinter pplfont (glyph table)"""		8225584	0					
ANR	8225893	IfStatement	if ( code < 0 )		8225584	20					
ANR	8225894	Condition	code < 0	475:16:16917:16924	8225584	0	True				
ANR	8225895	RelationalExpression	code < 0		8225584	0		<			
ANR	8225896	Identifier	code		8225584	0					
ANR	8225897	PrimaryExpression	0		8225584	1					
ANR	8225898	ReturnStatement	return code ;	476:16:16943:16954	8225584	1	True				
ANR	8225899	Identifier	code		8225584	0					
ANR	8225900	WhileStatement	while ( 1 )		8225584	21					
ANR	8225901	Condition	1	478:19:16976:16976	8225584	0	True				
ANR	8225902	PrimaryExpression	1		8225584	0					
ANR	8225903	CompoundStatement		59:16:2402:2414	8225584	1					
ANR	8225904	IdentifierDeclStatement	uint width = pl_get_uint16 ( char_data + 12 ) ;	479:16:16997:17039	8225584	0	True				
ANR	8225905	IdentifierDecl	width = pl_get_uint16 ( char_data + 12 )		8225584	0					
ANR	8225906	IdentifierDeclType	uint		8225584	0					
ANR	8225907	Identifier	width		8225584	1					
ANR	8225908	AssignmentExpression	width = pl_get_uint16 ( char_data + 12 )		8225584	2		=			
ANR	8225909	Identifier	width		8225584	0					
ANR	8225910	CallExpression	pl_get_uint16 ( char_data + 12 )		8225584	1					
ANR	8225911	Callee	pl_get_uint16		8225584	0					
ANR	8225912	Identifier	pl_get_uint16		8225584	0					
ANR	8225913	ArgumentList	char_data + 12		8225584	1					
ANR	8225914	Argument	char_data + 12		8225584	0					
ANR	8225915	AdditiveExpression	char_data + 12		8225584	0		+			
ANR	8225916	Identifier	char_data		8225584	0					
ANR	8225917	PrimaryExpression	12		8225584	1					
ANR	8225918	IdentifierDeclStatement	uint height = pl_get_uint16 ( char_data + 14 ) ;	480:16:17057:17100	8225584	1	True				
ANR	8225919	IdentifierDecl	height = pl_get_uint16 ( char_data + 14 )		8225584	0					
ANR	8225920	IdentifierDeclType	uint		8225584	0					
ANR	8225921	Identifier	height		8225584	1					
ANR	8225922	AssignmentExpression	height = pl_get_uint16 ( char_data + 14 )		8225584	2		=			
ANR	8225923	Identifier	height		8225584	0					
ANR	8225924	CallExpression	pl_get_uint16 ( char_data + 14 )		8225584	1					
ANR	8225925	Callee	pl_get_uint16		8225584	0					
ANR	8225926	Identifier	pl_get_uint16		8225584	0					
ANR	8225927	ArgumentList	char_data + 14		8225584	1					
ANR	8225928	Argument	char_data + 14		8225584	0					
ANR	8225929	AdditiveExpression	char_data + 14		8225584	0		+			
ANR	8225930	Identifier	char_data		8225584	0					
ANR	8225931	PrimaryExpression	14		8225584	1					
ANR	8225932	IdentifierDeclStatement	uint ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height ) ;	481:16:17118:17211	8225584	2	True				
ANR	8225933	IdentifierDecl	ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8225584	0					
ANR	8225934	IdentifierDeclType	uint		8225584	0					
ANR	8225935	Identifier	ccode_plus_header_plus_data		8225584	1					
ANR	8225936	AssignmentExpression	ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8225584	2		=			
ANR	8225937	Identifier	ccode_plus_header_plus_data		8225584	0					
ANR	8225938	AdditiveExpression	2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8225584	1		+			
ANR	8225939	PrimaryExpression	2		8225584	0					
ANR	8225940	AdditiveExpression	16 + ( ( ( width + 7 ) >> 3 ) * height )		8225584	1		+			
ANR	8225941	PrimaryExpression	16		8225584	0					
ANR	8225942	MultiplicativeExpression	( ( width + 7 ) >> 3 ) * height		8225584	1		*			
ANR	8225943	ShiftExpression	( width + 7 ) >> 3		8225584	0		>>			
ANR	8225944	AdditiveExpression	width + 7		8225584	0		+			
ANR	8225945	Identifier	width		8225584	0					
ANR	8225946	PrimaryExpression	7		8225584	1					
ANR	8225947	PrimaryExpression	3		8225584	1					
ANR	8225948	Identifier	height		8225584	1					
ANR	8225949	IdentifierDeclStatement	"uint ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 ) ;"	483:16:17229:17312	8225584	3	True				
ANR	8225950	IdentifierDecl	"ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8225584	0					
ANR	8225951	IdentifierDeclType	uint		8225584	0					
ANR	8225952	Identifier	ucode		8225584	1					
ANR	8225953	AssignmentExpression	"ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8225584	2		=			
ANR	8225954	Identifier	ucode		8225584	0					
ANR	8225955	CallExpression	"pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8225584	1					
ANR	8225956	Callee	pl_map_MSL_to_Unicode		8225584	0					
ANR	8225957	Identifier	pl_map_MSL_to_Unicode		8225584	0					
ANR	8225958	ArgumentList	pl_get_uint16 ( char_data )		8225584	1					
ANR	8225959	Argument	pl_get_uint16 ( char_data )		8225584	0					
ANR	8225960	CallExpression	pl_get_uint16 ( char_data )		8225584	0					
ANR	8225961	Callee	pl_get_uint16		8225584	0					
ANR	8225962	Identifier	pl_get_uint16		8225584	0					
ANR	8225963	ArgumentList	char_data		8225584	1					
ANR	8225964	Argument	char_data		8225584	0					
ANR	8225965	Identifier	char_data		8225584	0					
ANR	8225966	Argument	0		8225584	1					
ANR	8225967	PrimaryExpression	0		8225584	0					
ANR	8225968	IdentifierDeclStatement	int code = 0 ;	485:16:17330:17342	8225584	4	True				
ANR	8225969	IdentifierDecl	code = 0		8225584	0					
ANR	8225970	IdentifierDeclType	int		8225584	0					
ANR	8225971	Identifier	code		8225584	1					
ANR	8225972	AssignmentExpression	code = 0		8225584	2		=			
ANR	8225973	Identifier	code		8225584	0					
ANR	8225974	PrimaryExpression	0		8225584	1					
ANR	8225975	IfStatement	if ( ucode != 0xffff )		8225584	5					
ANR	8225976	Condition	ucode != 0xffff	489:20:17464:17478	8225584	0	True				
ANR	8225977	EqualityExpression	ucode != 0xffff		8225584	0		!=			
ANR	8225978	Identifier	ucode		8225584	0					
ANR	8225979	PrimaryExpression	0xffff		8225584	1					
ANR	8225980	ExpressionStatement	"code = pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"	490:20:17501:17585	8225584	1	True				
ANR	8225981	AssignmentExpression	"code = pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"		8225584	0		=			
ANR	8225982	Identifier	code		8225584	0					
ANR	8225983	CallExpression	"pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"		8225584	1					
ANR	8225984	Callee	pl_font_add_glyph		8225584	0					
ANR	8225985	Identifier	pl_font_add_glyph		8225584	0					
ANR	8225986	ArgumentList	pplfont		8225584	1					
ANR	8225987	Argument	pplfont		8225584	0					
ANR	8225988	Identifier	pplfont		8225584	0					
ANR	8225989	Argument	ucode		8225584	1					
ANR	8225990	Identifier	ucode		8225584	0					
ANR	8225991	Argument	char_data + 2		8225584	2					
ANR	8225992	AdditiveExpression	char_data + 2		8225584	0		+			
ANR	8225993	Identifier	char_data		8225584	0					
ANR	8225994	PrimaryExpression	2		8225584	1					
ANR	8225995	Argument	ccode_plus_header_plus_data		8225584	3					
ANR	8225996	Identifier	ccode_plus_header_plus_data		8225584	0					
ANR	8225997	IfStatement	if ( code < 0 )		8225584	6					
ANR	8225998	Condition	code < 0	492:20:17608:17615	8225584	0	True				
ANR	8225999	RelationalExpression	code < 0		8225584	0		<			
ANR	8226000	Identifier	code		8225584	0					
ANR	8226001	PrimaryExpression	0		8225584	1					
ANR	8226002	ReturnStatement	return - 1 ;	494:20:17681:17690	8225584	1	True				
ANR	8226003	UnaryOperationExpression	- 1		8225584	0					
ANR	8226004	UnaryOperator	-		8225584	0					
ANR	8226005	PrimaryExpression	1		8225584	1					
ANR	8226006	ExpressionStatement	char_data += ccode_plus_header_plus_data	496:16:17791:17831	8225584	7	True				
ANR	8226007	AssignmentExpression	char_data += ccode_plus_header_plus_data		8225584	0		+=			
ANR	8226008	Identifier	char_data		8225584	0					
ANR	8226009	Identifier	ccode_plus_header_plus_data		8225584	1					
ANR	8226010	IfStatement	if ( pl_get_uint16 ( char_data ) == 0 )		8225584	8					
ANR	8226011	Condition	pl_get_uint16 ( char_data ) == 0	499:20:17904:17932	8225584	0	True				
ANR	8226012	EqualityExpression	pl_get_uint16 ( char_data ) == 0		8225584	0		==			
ANR	8226013	CallExpression	pl_get_uint16 ( char_data )		8225584	0					
ANR	8226014	Callee	pl_get_uint16		8225584	0					
ANR	8226015	Identifier	pl_get_uint16		8225584	0					
ANR	8226016	ArgumentList	char_data		8225584	1					
ANR	8226017	Argument	char_data		8225584	0					
ANR	8226018	Identifier	char_data		8225584	0					
ANR	8226019	PrimaryExpression	0		8225584	1					
ANR	8226020	BreakStatement	break ;	500:20:17955:17960	8225584	1	True				
ANR	8226021	ExpressionStatement	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"	502:12:17988:18033	8225584	22	True				
ANR	8226022	AssignmentExpression	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"		8225584	0		=			
ANR	8226023	Identifier	code		8225584	0					
ANR	8226024	CallExpression	"gs_definefont ( pdir , ( gs_font * ) pfont )"		8225584	1					
ANR	8226025	Callee	gs_definefont		8225584	0					
ANR	8226026	Identifier	gs_definefont		8225584	0					
ANR	8226027	ArgumentList	pdir		8225584	1					
ANR	8226028	Argument	pdir		8225584	0					
ANR	8226029	Identifier	pdir		8225584	0					
ANR	8226030	Argument	( gs_font * ) pfont		8225584	1					
ANR	8226031	CastExpression	( gs_font * ) pfont		8225584	0					
ANR	8226032	CastTarget	gs_font *		8225584	0					
ANR	8226033	Identifier	pfont		8225584	1					
ANR	8226034	IfStatement	if ( code < 0 )		8225584	23					
ANR	8226035	Condition	code < 0	503:16:18051:18058	8225584	0	True				
ANR	8226036	RelationalExpression	code < 0		8225584	0		<			
ANR	8226037	Identifier	code		8225584	0					
ANR	8226038	PrimaryExpression	0		8225584	1					
ANR	8226039	ReturnStatement	return - 1 ;	505:16:18116:18125	8225584	1	True				
ANR	8226040	UnaryOperationExpression	- 1		8225584	0					
ANR	8226041	UnaryOperator	-		8225584	0					
ANR	8226042	PrimaryExpression	1		8225584	1					
ANR	8226043	ReturnStatement	return 0 ;	508:4:18147:18155	8225584	2	True				
ANR	8226044	PrimaryExpression	0		8225584	0					
ANR	8226045	ReturnType	int		8225584	1					
ANR	8226046	Identifier	pl_load_ufst_lineprinter		8225584	2					
ANR	8226047	ParameterList	"gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8225584	3					
ANR	8226048	Parameter	gs_memory_t * mem	424:25:14769:14785	8225584	0	True				
ANR	8226049	ParameterType	gs_memory_t *		8225584	0					
ANR	8226050	Identifier	mem		8225584	1					
ANR	8226051	Parameter	pl_dict_t * pfontdict	424:44:14788:14808	8225584	1	True				
ANR	8226052	ParameterType	pl_dict_t *		8225584	0					
ANR	8226053	Identifier	pfontdict		8225584	1					
ANR	8226054	Parameter	gs_font_dir * pdir	425:25:14836:14853	8225584	2	True				
ANR	8226055	ParameterType	gs_font_dir *		8225584	0					
ANR	8226056	Identifier	pdir		8225584	1					
ANR	8226057	Parameter	int storage	425:45:14856:14866	8225584	3	True				
ANR	8226058	ParameterType	int		8225584	0					
ANR	8226059	Identifier	storage		8225584	1					
ANR	8226060	Parameter	bool use_unicode_names_for_keys	426:25:14894:14924	8225584	4	True				
ANR	8226061	ParameterType	bool		8225584	0					
ANR	8226062	Identifier	use_unicode_names_for_keys		8225584	1					
ANR	8226063	CFGEntryNode	ENTRY		8225584		True				
ANR	8226064	CFGExitNode	EXIT		8225584		True				
ANR	8226065	Symbol	pplfont -> data_are_permanent		8225584						
ANR	8226066	Symbol	resident_table [ i ] . unicode_fontname		8225584						
ANR	8226067	Symbol	* resident_table		8225584						
ANR	8226068	Symbol	* key		8225584						
ANR	8226069	Symbol	gs_font_base		8225584						
ANR	8226070	Symbol	gs_next_ids		8225584						
ANR	8226071	Symbol	gs_definefont		8225584						
ANR	8226072	Symbol	strlen		8225584						
ANR	8226073	Symbol	pplfont -> is_xl_format		8225584						
ANR	8226074	Symbol	resident_table [ i ] . params		8225584						
ANR	8226075	Symbol	& st_gs_font_base		8225584						
ANR	8226076	Symbol	ccode_plus_header_plus_data		8225584						
ANR	8226077	Symbol	pplfont -> scaling_technology		8225584						
ANR	8226078	Symbol	resident_table		8225584						
ANR	8226079	Symbol	* pplfont		8225584						
ANR	8226080	Symbol	height		8225584						
ANR	8226081	Symbol	NULL		8225584						
ANR	8226082	Symbol	pplfont -> header		8225584						
ANR	8226083	Symbol	pplfont -> resolution . y		8225584						
ANR	8226084	Symbol	pplfont -> resolution . x		8225584						
ANR	8226085	Symbol	pdir		8225584						
ANR	8226086	Symbol	pplfont -> resolution		8225584						
ANR	8226087	Symbol	plft_8bit_printable		8225584						
ANR	8226088	Symbol	& header		8225584						
ANR	8226089	Symbol	pfontdict		8225584						
ANR	8226090	Symbol	pplfont -> params		8225584						
ANR	8226091	Symbol	true		8225584						
ANR	8226092	Symbol	pl_font_add_glyph		8225584						
ANR	8226093	Symbol	header		8225584						
ANR	8226094	Symbol	& char_data		8225584						
ANR	8226095	Symbol	pplfont -> font_type		8225584						
ANR	8226096	Symbol	pl_alloc_font		8225584						
ANR	8226097	Symbol	pplfont		8225584						
ANR	8226098	Symbol	code		8225584						
ANR	8226099	Symbol	plfst_bitmap		8225584						
ANR	8226100	Symbol	gs_alloc_struct		8225584						
ANR	8226101	Symbol	resident_table [ i ] . params . typeface_family		8225584						
ANR	8226102	Symbol	pl_map_MSL_to_Unicode		8225584						
ANR	8226103	Symbol	resident_table [ i ] . character_complement		8225584						
ANR	8226104	Symbol	storage		8225584						
ANR	8226105	Symbol	resident_table [ i ] . full_font_name		8225584						
ANR	8226106	Symbol	pplfont -> character_complement		8225584						
ANR	8226107	Symbol	mem		8225584						
ANR	8226108	Symbol	pl_font_alloc_glyph_table		8225584						
ANR	8226109	Symbol	key		8225584						
ANR	8226110	Symbol	pl_get_uint16		8225584						
ANR	8226111	Symbol	pfont		8225584						
ANR	8226112	Symbol	false		8225584						
ANR	8226113	Symbol	i		8225584						
ANR	8226114	Symbol	pplfont -> storage		8225584						
ANR	8226115	Symbol	use_unicode_names_for_keys		8225584						
ANR	8226116	Symbol	char_data		8225584						
ANR	8226117	Symbol	pl_fill_in_font		8225584						
ANR	8226118	Symbol	* i		8225584						
ANR	8226119	Symbol	width		8225584						
ANR	8226120	Symbol	ucode		8225584						
ANR	8226121	Function	pl_close_built_in_fonts	515:0:18302:18622							
ANR	8226122	FunctionDef	pl_close_built_in_fonts (pl_dict_t * builtinfonts)		8226121	0					
ANR	8226123	CompoundStatement		517:0:18357:18622	8226121	0					
ANR	8226124	IdentifierDeclStatement	int i ;	518:4:18363:18368	8226121	0	True				
ANR	8226125	IdentifierDecl	i		8226121	0					
ANR	8226126	IdentifierDeclType	int		8226121	0					
ANR	8226127	Identifier	i		8226121	1					
ANR	8226128	ExpressionStatement	gx_UFST_close_static_fcos ( )	521:4:18397:18424	8226121	1	True				
ANR	8226129	CallExpression	gx_UFST_close_static_fcos ( )		8226121	0					
ANR	8226130	Callee	gx_UFST_close_static_fcos		8226121	0					
ANR	8226131	Identifier	gx_UFST_close_static_fcos		8226121	0					
ANR	8226132	ArgumentList			8226121	1					
ANR	8226133	ForStatement	for ( i = 0 ; fcHndlPlAry [ i ] != - 1 ; i ++ )		8226121	2					
ANR	8226134	ForInit	i = 0 ;	524:9:18460:18465	8226121	0	True				
ANR	8226135	AssignmentExpression	i = 0		8226121	0		=			
ANR	8226136	Identifier	i		8226121	0					
ANR	8226137	PrimaryExpression	0		8226121	1					
ANR	8226138	Condition	fcHndlPlAry [ i ] != - 1	524:16:18467:18486	8226121	1	True				
ANR	8226139	EqualityExpression	fcHndlPlAry [ i ] != - 1		8226121	0		!=			
ANR	8226140	ArrayIndexing	fcHndlPlAry [ i ]		8226121	0					
ANR	8226141	Identifier	fcHndlPlAry		8226121	0					
ANR	8226142	Identifier	i		8226121	1					
ANR	8226143	UnaryOperationExpression	- 1		8226121	1					
ANR	8226144	UnaryOperator	-		8226121	0					
ANR	8226145	PrimaryExpression	1		8226121	1					
ANR	8226146	PostIncDecOperationExpression	i ++	524:38:18489:18491	8226121	2	True				
ANR	8226147	Identifier	i		8226121	0					
ANR	8226148	IncDec	++		8226121	1					
ANR	8226149	CompoundStatement		8:43:136:136	8226121	3					
ANR	8226150	Statement	CGIFfco_Close	525:8:18504:18516	8226121	0	True				
ANR	8226151	Statement	(	525:21:18517:18517	8226121	1	True				
ANR	8226152	Statement	FSA	525:22:18518:18520	8226121	2	True				
ANR	8226153	Statement	fcHndlPlAry	525:26:18522:18532	8226121	3	True				
ANR	8226154	Statement	[	525:37:18533:18533	8226121	4	True				
ANR	8226155	Statement	i	525:38:18534:18534	8226121	5	True				
ANR	8226156	Statement	]	525:39:18535:18535	8226121	6	True				
ANR	8226157	Statement	)	525:40:18536:18536	8226121	7	True				
ANR	8226158	ExpressionStatement		525:41:18537:18537	8226121	8	True				
ANR	8226159	ExpressionStatement	"dprintf1 ( ""closing handle %d\\n"" , fcHndlPlAry [ i ] )"	526:8:18547:18594	8226121	9	True				
ANR	8226160	CallExpression	"dprintf1 ( ""closing handle %d\\n"" , fcHndlPlAry [ i ] )"		8226121	0					
ANR	8226161	Callee	dprintf1		8226121	0					
ANR	8226162	Identifier	dprintf1		8226121	0					
ANR	8226163	ArgumentList	"""closing handle %d\\n"""		8226121	1					
ANR	8226164	Argument	"""closing handle %d\\n"""		8226121	0					
ANR	8226165	PrimaryExpression	"""closing handle %d\\n"""		8226121	0					
ANR	8226166	Argument	fcHndlPlAry [ i ]		8226121	1					
ANR	8226167	ArrayIndexing	fcHndlPlAry [ i ]		8226121	0					
ANR	8226168	Identifier	fcHndlPlAry		8226121	0					
ANR	8226169	Identifier	i		8226121	1					
ANR	8226170	ExpressionStatement	gx_UFST_fini ( )	528:4:18606:18620	8226121	3	True				
ANR	8226171	CallExpression	gx_UFST_fini ( )		8226121	0					
ANR	8226172	Callee	gx_UFST_fini		8226121	0					
ANR	8226173	Identifier	gx_UFST_fini		8226121	0					
ANR	8226174	ArgumentList			8226121	1					
ANR	8226175	ReturnType	void		8226121	1					
ANR	8226176	Identifier	pl_close_built_in_fonts		8226121	2					
ANR	8226177	ParameterList	pl_dict_t * builtinfonts		8226121	3					
ANR	8226178	Parameter	pl_dict_t * builtinfonts	516:24:18331:18354	8226121	0	True				
ANR	8226179	ParameterType	pl_dict_t *		8226121	0					
ANR	8226180	Identifier	builtinfonts		8226121	1					
ANR	8226181	CFGEntryNode	ENTRY		8226121		True				
ANR	8226182	CFGExitNode	EXIT		8226121		True				
ANR	8226183	Symbol	builtinfonts		8226121						
ANR	8226184	Symbol	* i		8226121						
ANR	8226185	Symbol	* fcHndlPlAry		8226121						
ANR	8226186	Symbol	i		8226121						
ANR	8226187	Symbol	fcHndlPlAry		8226121						
ANR	8226188	Function	pl_load_simm_fonts	534:0:18693:18874							
ANR	8226189	FunctionDef	"pl_load_simm_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage)"		8226188	0					
ANR	8226190	CompoundStatement		537:0:18832:18874	8226188	0					
ANR	8226191	ReturnStatement	return 0 ;	539:4:18864:18872	8226188	0	True				
ANR	8226192	PrimaryExpression	0		8226188	0					
ANR	8226193	ReturnType	int		8226188	1					
ANR	8226194	Identifier	pl_load_simm_fonts		8226188	2					
ANR	8226195	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage"		8226188	3					
ANR	8226196	Parameter	const char * pathname	535:19:18716:18735	8226188	0	True				
ANR	8226197	ParameterType	const char *		8226188	0					
ANR	8226198	Identifier	pathname		8226188	1					
ANR	8226199	Parameter	gs_memory_t * mem	535:41:18738:18754	8226188	1	True				
ANR	8226200	ParameterType	gs_memory_t *		8226188	0					
ANR	8226201	Identifier	mem		8226188	1					
ANR	8226202	Parameter	pl_dict_t * pfontdict	536:19:18776:18796	8226188	2	True				
ANR	8226203	ParameterType	pl_dict_t *		8226188	0					
ANR	8226204	Identifier	pfontdict		8226188	1					
ANR	8226205	Parameter	gs_font_dir * pdir	536:42:18799:18816	8226188	3	True				
ANR	8226206	ParameterType	gs_font_dir *		8226188	0					
ANR	8226207	Identifier	pdir		8226188	1					
ANR	8226208	Parameter	int storage	536:62:18819:18829	8226188	4	True				
ANR	8226209	ParameterType	int		8226188	0					
ANR	8226210	Identifier	storage		8226188	1					
ANR	8226211	CFGEntryNode	ENTRY		8226188		True				
ANR	8226212	CFGExitNode	EXIT		8226188		True				
ANR	8226213	Symbol	mem		8226188						
ANR	8226214	Symbol	pfontdict		8226188						
ANR	8226215	Symbol	pdir		8226188						
ANR	8226216	Symbol	storage		8226188						
ANR	8226217	Symbol	pathname		8226188						
ANR	8226218	Function	pl_load_cartridge_fonts	543:0:18912:19127							
ANR	8226219	FunctionDef	"pl_load_cartridge_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage)"		8226218	0					
ANR	8226220	CompoundStatement		547:0:19085:19127	8226218	0					
ANR	8226221	ReturnStatement	return 0 ;	549:4:19117:19125	8226218	0	True				
ANR	8226222	PrimaryExpression	0		8226218	0					
ANR	8226223	ReturnType	int		8226218	1					
ANR	8226224	Identifier	pl_load_cartridge_fonts		8226218	2					
ANR	8226225	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage"		8226218	3					
ANR	8226226	Parameter	const char * pathname	544:24:18940:18959	8226218	0	True				
ANR	8226227	ParameterType	const char *		8226218	0					
ANR	8226228	Identifier	pathname		8226218	1					
ANR	8226229	Parameter	gs_memory_t * mem	544:46:18962:18978	8226218	1	True				
ANR	8226230	ParameterType	gs_memory_t *		8226218	0					
ANR	8226231	Identifier	mem		8226218	1					
ANR	8226232	Parameter	pl_dict_t * pfontdict	545:24:19005:19025	8226218	2	True				
ANR	8226233	ParameterType	pl_dict_t *		8226218	0					
ANR	8226234	Identifier	pfontdict		8226218	1					
ANR	8226235	Parameter	gs_font_dir * pdir	545:47:19028:19045	8226218	3	True				
ANR	8226236	ParameterType	gs_font_dir *		8226218	0					
ANR	8226237	Identifier	pdir		8226218	1					
ANR	8226238	Parameter	int storage	546:24:19072:19082	8226218	4	True				
ANR	8226239	ParameterType	int		8226218	0					
ANR	8226240	Identifier	storage		8226218	1					
ANR	8226241	CFGEntryNode	ENTRY		8226218		True				
ANR	8226242	CFGExitNode	EXIT		8226218		True				
ANR	8226243	Symbol	mem		8226218						
ANR	8226244	Symbol	pfontdict		8226218						
ANR	8226245	Symbol	pdir		8226218						
ANR	8226246	Symbol	storage		8226218						
ANR	8226247	Symbol	pathname		8226218						
