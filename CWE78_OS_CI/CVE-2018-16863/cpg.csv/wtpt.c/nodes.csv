command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10735374	File	data/converged/CVE-2018-16863_ghostpdl/wtpt.c								
ANR	10735375	DeclStmt									
ANR	10735376	Decl							cmsBool	cmsBool	lShowXYZ
ANR	10735377	DeclStmt									
ANR	10735378	Decl							cmsBool	cmsBool	lShowLab
ANR	10735379	DeclStmt									
ANR	10735380	Decl							cmsBool	cmsBool	lShowLCh
ANR	10735381	Function	HandleSwitches	39:0:1535:2103							
ANR	10735382	FunctionDef	"HandleSwitches (int argc , char * argv [ ])"		10735381	0					
ANR	10735383	CompoundStatement		41:0:1586:2103	10735381	0					
ANR	10735384	IdentifierDeclStatement	int s ;	42:7:1595:1600	10735381	0	True				
ANR	10735385	IdentifierDecl	s		10735381	0					
ANR	10735386	IdentifierDeclType	int		10735381	0					
ANR	10735387	Identifier	s		10735381	1					
ANR	10735388	WhileStatement	"while ( ( s = xgetopt ( argc , argv , ""lcx"" ) ) != EOF )"		10735381	1					
ANR	10735389	Condition	"( s = xgetopt ( argc , argv , ""lcx"" ) ) != EOF"	44:14:1617:1655	10735381	0	True				
ANR	10735390	EqualityExpression	"( s = xgetopt ( argc , argv , ""lcx"" ) ) != EOF"		10735381	0		!=			
ANR	10735391	AssignmentExpression	"s = xgetopt ( argc , argv , ""lcx"" )"		10735381	0		=			
ANR	10735392	Identifier	s		10735381	0					
ANR	10735393	CallExpression	"xgetopt ( argc , argv , ""lcx"" )"		10735381	1					
ANR	10735394	Callee	xgetopt		10735381	0					
ANR	10735395	Identifier	xgetopt		10735381	0					
ANR	10735396	ArgumentList	argc		10735381	1					
ANR	10735397	Argument	argc		10735381	0					
ANR	10735398	Identifier	argc		10735381	0					
ANR	10735399	Argument	argv		10735381	1					
ANR	10735400	Identifier	argv		10735381	0					
ANR	10735401	Argument	"""lcx"""		10735381	2					
ANR	10735402	PrimaryExpression	"""lcx"""		10735381	0					
ANR	10735403	Identifier	EOF		10735381	1					
ANR	10735404	CompoundStatement		4:55:71:71	10735381	1					
ANR	10735405	SwitchStatement	switch ( s )		10735381	0					
ANR	10735406	Condition	s	46:22:1683:1683	10735381	0	True				
ANR	10735407	Identifier	s		10735381	0					
ANR	10735408	CompoundStatement		6:24:98:98	10735381	1					
ANR	10735409	Label	case 'l' :	49:14:1703:1711	10735381	0	True				
ANR	10735410	ExpressionStatement	lShowLab = TRUE	50:21:1734:1749	10735381	1	True				
ANR	10735411	AssignmentExpression	lShowLab = TRUE		10735381	0		=			
ANR	10735412	Identifier	lShowLab		10735381	0					
ANR	10735413	Identifier	TRUE		10735381	1					
ANR	10735414	BreakStatement	break ;	51:21:1772:1777	10735381	2	True				
ANR	10735415	Label	case 'c' :	53:14:1794:1802	10735381	3	True				
ANR	10735416	ExpressionStatement	lShowLCh = TRUE	54:21:1825:1840	10735381	4	True				
ANR	10735417	AssignmentExpression	lShowLCh = TRUE		10735381	0		=			
ANR	10735418	Identifier	lShowLCh		10735381	0					
ANR	10735419	Identifier	TRUE		10735381	1					
ANR	10735420	BreakStatement	break ;	55:21:1863:1868	10735381	5	True				
ANR	10735421	Label	case 'x' :	57:14:1885:1893	10735381	6	True				
ANR	10735422	ExpressionStatement	lShowXYZ = FALSE	58:21:1916:1932	10735381	7	True				
ANR	10735423	AssignmentExpression	lShowXYZ = FALSE		10735381	0		=			
ANR	10735424	Identifier	lShowXYZ		10735381	0					
ANR	10735425	Identifier	FALSE		10735381	1					
ANR	10735426	BreakStatement	break ;	59:21:1955:1960	10735381	8	True				
ANR	10735427	Label	default :	61:14:1977:1984	10735381	9	True				
ANR	10735428	Identifier	default		10735381	0					
ANR	10735429	ExpressionStatement	"FatalError ( ""Unknown option - run without args to see valid ones.\\n"" )"	63:21:2008:2076	10735381	10	True				
ANR	10735430	CallExpression	"FatalError ( ""Unknown option - run without args to see valid ones.\\n"" )"		10735381	0					
ANR	10735431	Callee	FatalError		10735381	0					
ANR	10735432	Identifier	FatalError		10735381	0					
ANR	10735433	ArgumentList	"""Unknown option - run without args to see valid ones.\\n"""		10735381	1					
ANR	10735434	Argument	"""Unknown option - run without args to see valid ones.\\n"""		10735381	0					
ANR	10735435	PrimaryExpression	"""Unknown option - run without args to see valid ones.\\n"""		10735381	0					
ANR	10735436	ReturnType	static void		10735381	1					
ANR	10735437	Identifier	HandleSwitches		10735381	2					
ANR	10735438	ParameterList	"int argc , char * argv [ ]"		10735381	3					
ANR	10735439	Parameter	int argc	40:20:1562:1569	10735381	0	True				
ANR	10735440	ParameterType	int		10735381	0					
ANR	10735441	Identifier	argc		10735381	1					
ANR	10735442	Parameter	char * argv [ ]	40:30:1572:1583	10735381	1	True				
ANR	10735443	ParameterType	char * [ ]		10735381	0					
ANR	10735444	Identifier	argv		10735381	1					
ANR	10735445	CFGEntryNode	ENTRY		10735381		True				
ANR	10735446	CFGExitNode	EXIT		10735381		True				
ANR	10735447	Symbol	argc		10735381						
ANR	10735448	Symbol	xgetopt		10735381						
ANR	10735449	Symbol	s		10735381						
ANR	10735450	Symbol	lShowLCh		10735381						
ANR	10735451	Symbol	TRUE		10735381						
ANR	10735452	Symbol	FALSE		10735381						
ANR	10735453	Symbol	lShowLab		10735381						
ANR	10735454	Symbol	argv		10735381						
ANR	10735455	Symbol	EOF		10735381						
ANR	10735456	Symbol	lShowXYZ		10735381						
ANR	10735457	Function	Help	68:0:2106:3100							
ANR	10735458	FunctionDef	Help ()		10735457	0					
ANR	10735459	CompoundStatement		70:0:2129:3100	10735457	0					
ANR	10735460	ExpressionStatement	"fprintf ( stderr , ""little CMS ICC white point utility - v3 [LittleCMS %2.2f]\\n"" , LCMS_VERSION / 1000.0 )"	71:7:2138:2239	10735457	0	True				
ANR	10735461	CallExpression	"fprintf ( stderr , ""little CMS ICC white point utility - v3 [LittleCMS %2.2f]\\n"" , LCMS_VERSION / 1000.0 )"		10735457	0					
ANR	10735462	Callee	fprintf		10735457	0					
ANR	10735463	Identifier	fprintf		10735457	0					
ANR	10735464	ArgumentList	stderr		10735457	1					
ANR	10735465	Argument	stderr		10735457	0					
ANR	10735466	Identifier	stderr		10735457	0					
ANR	10735467	Argument	"""little CMS ICC white point utility - v3 [LittleCMS %2.2f]\\n"""		10735457	1					
ANR	10735468	PrimaryExpression	"""little CMS ICC white point utility - v3 [LittleCMS %2.2f]\\n"""		10735457	0					
ANR	10735469	Argument	LCMS_VERSION / 1000.0		10735457	2					
ANR	10735470	MultiplicativeExpression	LCMS_VERSION / 1000.0		10735457	0		/			
ANR	10735471	Identifier	LCMS_VERSION		10735457	0					
ANR	10735472	PrimaryExpression	1000.0		10735457	1					
ANR	10735473	ExpressionStatement	"fprintf ( stderr , ""usage: wtpt [flags] [<ICC profile>]\\n\\n"" )"	73:7:2249:2307	10735457	1	True				
ANR	10735474	CallExpression	"fprintf ( stderr , ""usage: wtpt [flags] [<ICC profile>]\\n\\n"" )"		10735457	0					
ANR	10735475	Callee	fprintf		10735457	0					
ANR	10735476	Identifier	fprintf		10735457	0					
ANR	10735477	ArgumentList	stderr		10735457	1					
ANR	10735478	Argument	stderr		10735457	0					
ANR	10735479	Identifier	stderr		10735457	0					
ANR	10735480	Argument	"""usage: wtpt [flags] [<ICC profile>]\\n\\n"""		10735457	1					
ANR	10735481	PrimaryExpression	"""usage: wtpt [flags] [<ICC profile>]\\n\\n"""		10735457	0					
ANR	10735482	ExpressionStatement	"fprintf ( stderr , ""flags:\\n\\n"" )"	75:7:2317:2346	10735457	2	True				
ANR	10735483	CallExpression	"fprintf ( stderr , ""flags:\\n\\n"" )"		10735457	0					
ANR	10735484	Callee	fprintf		10735457	0					
ANR	10735485	Identifier	fprintf		10735457	0					
ANR	10735486	ArgumentList	stderr		10735457	1					
ANR	10735487	Argument	stderr		10735457	0					
ANR	10735488	Identifier	stderr		10735457	0					
ANR	10735489	Argument	"""flags:\\n\\n"""		10735457	1					
ANR	10735490	PrimaryExpression	"""flags:\\n\\n"""		10735457	0					
ANR	10735491	ExpressionStatement	"fprintf ( stderr , ""%cl - CIE Lab\\n"" , SW )"	77:7:2363:2401	10735457	3	True				
ANR	10735492	CallExpression	"fprintf ( stderr , ""%cl - CIE Lab\\n"" , SW )"		10735457	0					
ANR	10735493	Callee	fprintf		10735457	0					
ANR	10735494	Identifier	fprintf		10735457	0					
ANR	10735495	ArgumentList	stderr		10735457	1					
ANR	10735496	Argument	stderr		10735457	0					
ANR	10735497	Identifier	stderr		10735457	0					
ANR	10735498	Argument	"""%cl - CIE Lab\\n"""		10735457	1					
ANR	10735499	PrimaryExpression	"""%cl - CIE Lab\\n"""		10735457	0					
ANR	10735500	Argument	SW		10735457	2					
ANR	10735501	Identifier	SW		10735457	0					
ANR	10735502	ExpressionStatement	"fprintf ( stderr , ""%cc - CIE LCh\\n"" , SW )"	78:7:2410:2448	10735457	4	True				
ANR	10735503	CallExpression	"fprintf ( stderr , ""%cc - CIE LCh\\n"" , SW )"		10735457	0					
ANR	10735504	Callee	fprintf		10735457	0					
ANR	10735505	Identifier	fprintf		10735457	0					
ANR	10735506	ArgumentList	stderr		10735457	1					
ANR	10735507	Argument	stderr		10735457	0					
ANR	10735508	Identifier	stderr		10735457	0					
ANR	10735509	Argument	"""%cc - CIE LCh\\n"""		10735457	1					
ANR	10735510	PrimaryExpression	"""%cc - CIE LCh\\n"""		10735457	0					
ANR	10735511	Argument	SW		10735457	2					
ANR	10735512	Identifier	SW		10735457	0					
ANR	10735513	ExpressionStatement	"fprintf ( stderr , ""%cx - Don't show XYZ\\n"" , SW )"	79:7:2457:2502	10735457	5	True				
ANR	10735514	CallExpression	"fprintf ( stderr , ""%cx - Don't show XYZ\\n"" , SW )"		10735457	0					
ANR	10735515	Callee	fprintf		10735457	0					
ANR	10735516	Identifier	fprintf		10735457	0					
ANR	10735517	ArgumentList	stderr		10735457	1					
ANR	10735518	Argument	stderr		10735457	0					
ANR	10735519	Identifier	stderr		10735457	0					
ANR	10735520	Argument	"""%cx - Don't show XYZ\\n"""		10735457	1					
ANR	10735521	PrimaryExpression	"""%cx - Don't show XYZ\\n"""		10735457	0					
ANR	10735522	Argument	SW		10735457	2					
ANR	10735523	Identifier	SW		10735457	0					
ANR	10735524	ExpressionStatement	"fprintf ( stderr , ""\\nIf no parameters are given, then this program will\\n"" )"	81:7:2512:2585	10735457	6	True				
ANR	10735525	CallExpression	"fprintf ( stderr , ""\\nIf no parameters are given, then this program will\\n"" )"		10735457	0					
ANR	10735526	Callee	fprintf		10735457	0					
ANR	10735527	Identifier	fprintf		10735457	0					
ANR	10735528	ArgumentList	stderr		10735457	1					
ANR	10735529	Argument	stderr		10735457	0					
ANR	10735530	Identifier	stderr		10735457	0					
ANR	10735531	Argument	"""\\nIf no parameters are given, then this program will\\n"""		10735457	1					
ANR	10735532	PrimaryExpression	"""\\nIf no parameters are given, then this program will\\n"""		10735457	0					
ANR	10735533	ExpressionStatement	"fprintf ( stderr , ""ask for XYZ value of media white. If parameter given, it must be\\n"" )"	82:7:2594:2679	10735457	7	True				
ANR	10735534	CallExpression	"fprintf ( stderr , ""ask for XYZ value of media white. If parameter given, it must be\\n"" )"		10735457	0					
ANR	10735535	Callee	fprintf		10735457	0					
ANR	10735536	Identifier	fprintf		10735457	0					
ANR	10735537	ArgumentList	stderr		10735457	1					
ANR	10735538	Argument	stderr		10735457	0					
ANR	10735539	Identifier	stderr		10735457	0					
ANR	10735540	Argument	"""ask for XYZ value of media white. If parameter given, it must be\\n"""		10735457	1					
ANR	10735541	PrimaryExpression	"""ask for XYZ value of media white. If parameter given, it must be\\n"""		10735457	0					
ANR	10735542	ExpressionStatement	"fprintf ( stderr , ""the profile to inspect.\\n\\n"" )"	83:7:2688:2734	10735457	8	True				
ANR	10735543	CallExpression	"fprintf ( stderr , ""the profile to inspect.\\n\\n"" )"		10735457	0					
ANR	10735544	Callee	fprintf		10735457	0					
ANR	10735545	Identifier	fprintf		10735457	0					
ANR	10735546	ArgumentList	stderr		10735457	1					
ANR	10735547	Argument	stderr		10735457	0					
ANR	10735548	Identifier	stderr		10735457	0					
ANR	10735549	Argument	"""the profile to inspect.\\n\\n"""		10735457	1					
ANR	10735550	PrimaryExpression	"""the profile to inspect.\\n\\n"""		10735457	0					
ANR	10735551	Statement	fprintf	85:7:2744:2750	10735457	9	True				
ANR	10735552	Statement	(	85:14:2751:2751	10735457	10	True				
ANR	10735553	Statement	stderr	85:15:2752:2757	10735457	11	True				
ANR	10735554	Statement	","	85:21:2758:2758	10735457	12	True				
ANR	10735555	Statement	"""This program is intended to be a demo of the little cms\\n"""	85:23:2760:2818	10735457	13	True				
ANR	10735556	Statement	"""engine. Both lcms and this program are freeware. You can\\n"""	86:14:2834:2893	10735457	14	True				
ANR	10735557	Statement	"""obtain both in source code at http://www.littlecms.com\\n"""	87:14:2909:2966	10735457	15	True				
ANR	10735558	Statement	"""For suggestions, comments, bug reports etc. send mail to\\n"""	88:14:2982:3041	10735457	16	True				
ANR	10735559	Statement	"""info@littlecms.com\\n\\n"""	89:14:3057:3080	10735457	17	True				
ANR	10735560	Statement	)	89:38:3081:3081	10735457	18	True				
ANR	10735561	ExpressionStatement		89:39:3082:3082	10735457	19	True				
ANR	10735562	ExpressionStatement	exit ( 0 )	90:7:3091:3098	10735457	20	True				
ANR	10735563	CallExpression	exit ( 0 )		10735457	0					
ANR	10735564	Callee	exit		10735457	0					
ANR	10735565	Identifier	exit		10735457	0					
ANR	10735566	ArgumentList	0		10735457	1					
ANR	10735567	Argument	0		10735457	0					
ANR	10735568	PrimaryExpression	0		10735457	0					
ANR	10735569	ReturnType	static void		10735457	1					
ANR	10735570	Identifier	Help		10735457	2					
ANR	10735571	ParameterList			10735457	3					
ANR	10735572	CFGEntryNode	ENTRY		10735457		True				
ANR	10735573	CFGExitNode	EXIT		10735457		True				
ANR	10735574	Symbol	SW		10735457						
ANR	10735575	Symbol	LCMS_VERSION		10735457						
ANR	10735576	Symbol	stderr		10735457						
ANR	10735577	Function	ShowWhitePoint	95:0:3105:3715							
ANR	10735578	FunctionDef	ShowWhitePoint (cmsCIEXYZ * WtPt)		10735577	0					
ANR	10735579	CompoundStatement		97:0:3149:3715	10735577	0					
ANR	10735580	IdentifierDeclStatement	cmsCIELab Lab ;	98:7:3158:3171	10735577	0	True				
ANR	10735581	IdentifierDecl	Lab		10735577	0					
ANR	10735582	IdentifierDeclType	cmsCIELab		10735577	0					
ANR	10735583	Identifier	Lab		10735577	1					
ANR	10735584	IdentifierDeclStatement	cmsCIELCh LCh ;	99:7:3180:3193	10735577	1	True				
ANR	10735585	IdentifierDecl	LCh		10735577	0					
ANR	10735586	IdentifierDeclType	cmsCIELCh		10735577	0					
ANR	10735587	Identifier	LCh		10735577	1					
ANR	10735588	IdentifierDeclStatement	cmsCIExyY xyY ;	100:7:3202:3215	10735577	2	True				
ANR	10735589	IdentifierDecl	xyY		10735577	0					
ANR	10735590	IdentifierDeclType	cmsCIExyY		10735577	0					
ANR	10735591	Identifier	xyY		10735577	1					
ANR	10735592	ExpressionStatement	"cmsXYZ2Lab ( NULL , & Lab , WtPt )"	103:7:3226:3254	10735577	3	True				
ANR	10735593	CallExpression	"cmsXYZ2Lab ( NULL , & Lab , WtPt )"		10735577	0					
ANR	10735594	Callee	cmsXYZ2Lab		10735577	0					
ANR	10735595	Identifier	cmsXYZ2Lab		10735577	0					
ANR	10735596	ArgumentList	NULL		10735577	1					
ANR	10735597	Argument	NULL		10735577	0					
ANR	10735598	Identifier	NULL		10735577	0					
ANR	10735599	Argument	& Lab		10735577	1					
ANR	10735600	UnaryOperationExpression	& Lab		10735577	0					
ANR	10735601	UnaryOperator	&		10735577	0					
ANR	10735602	Identifier	Lab		10735577	1					
ANR	10735603	Argument	WtPt		10735577	2					
ANR	10735604	Identifier	WtPt		10735577	0					
ANR	10735605	ExpressionStatement	"cmsLab2LCh ( & LCh , & Lab )"	104:7:3263:3285	10735577	4	True				
ANR	10735606	CallExpression	"cmsLab2LCh ( & LCh , & Lab )"		10735577	0					
ANR	10735607	Callee	cmsLab2LCh		10735577	0					
ANR	10735608	Identifier	cmsLab2LCh		10735577	0					
ANR	10735609	ArgumentList	& LCh		10735577	1					
ANR	10735610	Argument	& LCh		10735577	0					
ANR	10735611	UnaryOperationExpression	& LCh		10735577	0					
ANR	10735612	UnaryOperator	&		10735577	0					
ANR	10735613	Identifier	LCh		10735577	1					
ANR	10735614	Argument	& Lab		10735577	1					
ANR	10735615	UnaryOperationExpression	& Lab		10735577	0					
ANR	10735616	UnaryOperator	&		10735577	0					
ANR	10735617	Identifier	Lab		10735577	1					
ANR	10735618	ExpressionStatement	"cmsXYZ2xyY ( & xyY , WtPt )"	105:7:3294:3316	10735577	5	True				
ANR	10735619	CallExpression	"cmsXYZ2xyY ( & xyY , WtPt )"		10735577	0					
ANR	10735620	Callee	cmsXYZ2xyY		10735577	0					
ANR	10735621	Identifier	cmsXYZ2xyY		10735577	0					
ANR	10735622	ArgumentList	& xyY		10735577	1					
ANR	10735623	Argument	& xyY		10735577	0					
ANR	10735624	UnaryOperationExpression	& xyY		10735577	0					
ANR	10735625	UnaryOperator	&		10735577	0					
ANR	10735626	Identifier	xyY		10735577	1					
ANR	10735627	Argument	WtPt		10735577	1					
ANR	10735628	Identifier	WtPt		10735577	0					
ANR	10735629	IfStatement	if ( lShowXYZ )		10735577	6					
ANR	10735630	Condition	lShowXYZ	108:11:3331:3338	10735577	0	True				
ANR	10735631	Identifier	lShowXYZ		10735577	0					
ANR	10735632	ExpressionStatement	"printf ( ""XYZ=(%3.1f, %3.1f, %3.1f)\\n"" , WtPt -> X , WtPt -> Y , WtPt -> Z )"	108:21:3341:3405	10735577	1	True				
ANR	10735633	CallExpression	"printf ( ""XYZ=(%3.1f, %3.1f, %3.1f)\\n"" , WtPt -> X , WtPt -> Y , WtPt -> Z )"		10735577	0					
ANR	10735634	Callee	printf		10735577	0					
ANR	10735635	Identifier	printf		10735577	0					
ANR	10735636	ArgumentList	"""XYZ=(%3.1f, %3.1f, %3.1f)\\n"""		10735577	1					
ANR	10735637	Argument	"""XYZ=(%3.1f, %3.1f, %3.1f)\\n"""		10735577	0					
ANR	10735638	PrimaryExpression	"""XYZ=(%3.1f, %3.1f, %3.1f)\\n"""		10735577	0					
ANR	10735639	Argument	WtPt -> X		10735577	1					
ANR	10735640	PtrMemberAccess	WtPt -> X		10735577	0					
ANR	10735641	Identifier	WtPt		10735577	0					
ANR	10735642	Identifier	X		10735577	1					
ANR	10735643	Argument	WtPt -> Y		10735577	2					
ANR	10735644	PtrMemberAccess	WtPt -> Y		10735577	0					
ANR	10735645	Identifier	WtPt		10735577	0					
ANR	10735646	Identifier	Y		10735577	1					
ANR	10735647	Argument	WtPt -> Z		10735577	3					
ANR	10735648	PtrMemberAccess	WtPt -> Z		10735577	0					
ANR	10735649	Identifier	WtPt		10735577	0					
ANR	10735650	Identifier	Z		10735577	1					
ANR	10735651	IfStatement	if ( lShowLab )		10735577	7					
ANR	10735652	Condition	lShowLab	109:11:3418:3425	10735577	0	True				
ANR	10735653	Identifier	lShowLab		10735577	0					
ANR	10735654	ExpressionStatement	"printf ( ""Lab=(%3.3f, %3.3f, %3.3f)\\n"" , Lab . L , Lab . a , Lab . b )"	109:21:3428:3486	10735577	1	True				
ANR	10735655	CallExpression	"printf ( ""Lab=(%3.3f, %3.3f, %3.3f)\\n"" , Lab . L , Lab . a , Lab . b )"		10735577	0					
ANR	10735656	Callee	printf		10735577	0					
ANR	10735657	Identifier	printf		10735577	0					
ANR	10735658	ArgumentList	"""Lab=(%3.3f, %3.3f, %3.3f)\\n"""		10735577	1					
ANR	10735659	Argument	"""Lab=(%3.3f, %3.3f, %3.3f)\\n"""		10735577	0					
ANR	10735660	PrimaryExpression	"""Lab=(%3.3f, %3.3f, %3.3f)\\n"""		10735577	0					
ANR	10735661	Argument	Lab . L		10735577	1					
ANR	10735662	MemberAccess	Lab . L		10735577	0					
ANR	10735663	Identifier	Lab		10735577	0					
ANR	10735664	Identifier	L		10735577	1					
ANR	10735665	Argument	Lab . a		10735577	2					
ANR	10735666	MemberAccess	Lab . a		10735577	0					
ANR	10735667	Identifier	Lab		10735577	0					
ANR	10735668	Identifier	a		10735577	1					
ANR	10735669	Argument	Lab . b		10735577	3					
ANR	10735670	MemberAccess	Lab . b		10735577	0					
ANR	10735671	Identifier	Lab		10735577	0					
ANR	10735672	Identifier	b		10735577	1					
ANR	10735673	IfStatement	if ( lShowLCh )		10735577	8					
ANR	10735674	Condition	lShowLCh	110:11:3499:3506	10735577	0	True				
ANR	10735675	Identifier	lShowLCh		10735577	0					
ANR	10735676	ExpressionStatement	"printf ( ""LCh=(%3.3f, %3.3f, %3.3f)\\n"" , LCh . L , LCh . C , LCh . h )"	110:21:3509:3567	10735577	1	True				
ANR	10735677	CallExpression	"printf ( ""LCh=(%3.3f, %3.3f, %3.3f)\\n"" , LCh . L , LCh . C , LCh . h )"		10735577	0					
ANR	10735678	Callee	printf		10735577	0					
ANR	10735679	Identifier	printf		10735577	0					
ANR	10735680	ArgumentList	"""LCh=(%3.3f, %3.3f, %3.3f)\\n"""		10735577	1					
ANR	10735681	Argument	"""LCh=(%3.3f, %3.3f, %3.3f)\\n"""		10735577	0					
ANR	10735682	PrimaryExpression	"""LCh=(%3.3f, %3.3f, %3.3f)\\n"""		10735577	0					
ANR	10735683	Argument	LCh . L		10735577	1					
ANR	10735684	MemberAccess	LCh . L		10735577	0					
ANR	10735685	Identifier	LCh		10735577	0					
ANR	10735686	Identifier	L		10735577	1					
ANR	10735687	Argument	LCh . C		10735577	2					
ANR	10735688	MemberAccess	LCh . C		10735577	0					
ANR	10735689	Identifier	LCh		10735577	0					
ANR	10735690	Identifier	C		10735577	1					
ANR	10735691	Argument	LCh . h		10735577	3					
ANR	10735692	MemberAccess	LCh . h		10735577	0					
ANR	10735693	Identifier	LCh		10735577	0					
ANR	10735694	Identifier	h		10735577	1					
ANR	10735695	CompoundStatement		16:14:442:509	10735577	9					
ANR	10735696	IdentifierDeclStatement	double Ssens = ( LCh . C * 100.0 ) / sqrt ( LCh . C * LCh . C + LCh . L * LCh . L ) ;	112:14:3592:3659	10735577	0	True				
ANR	10735697	IdentifierDecl	Ssens = ( LCh . C * 100.0 ) / sqrt ( LCh . C * LCh . C + LCh . L * LCh . L )		10735577	0					
ANR	10735698	IdentifierDeclType	double		10735577	0					
ANR	10735699	Identifier	Ssens		10735577	1					
ANR	10735700	AssignmentExpression	Ssens = ( LCh . C * 100.0 ) / sqrt ( LCh . C * LCh . C + LCh . L * LCh . L )		10735577	2		=			
ANR	10735701	Identifier	Ssens		10735577	0					
ANR	10735702	MultiplicativeExpression	( LCh . C * 100.0 ) / sqrt ( LCh . C * LCh . C + LCh . L * LCh . L )		10735577	1		/			
ANR	10735703	MultiplicativeExpression	LCh . C * 100.0		10735577	0		*			
ANR	10735704	MemberAccess	LCh . C		10735577	0					
ANR	10735705	Identifier	LCh		10735577	0					
ANR	10735706	Identifier	C		10735577	1					
ANR	10735707	PrimaryExpression	100.0		10735577	1					
ANR	10735708	CallExpression	sqrt ( LCh . C * LCh . C + LCh . L * LCh . L )		10735577	1					
ANR	10735709	Callee	sqrt		10735577	0					
ANR	10735710	Identifier	sqrt		10735577	0					
ANR	10735711	ArgumentList	LCh . C * LCh . C + LCh . L * LCh . L		10735577	1					
ANR	10735712	Argument	LCh . C * LCh . C + LCh . L * LCh . L		10735577	0					
ANR	10735713	AdditiveExpression	LCh . C * LCh . C + LCh . L * LCh . L		10735577	0		+			
ANR	10735714	MultiplicativeExpression	LCh . C * LCh . C		10735577	0		*			
ANR	10735715	MemberAccess	LCh . C		10735577	0					
ANR	10735716	Identifier	LCh		10735577	0					
ANR	10735717	Identifier	C		10735577	1					
ANR	10735718	MemberAccess	LCh . C		10735577	1					
ANR	10735719	Identifier	LCh		10735577	0					
ANR	10735720	Identifier	C		10735577	1					
ANR	10735721	MultiplicativeExpression	LCh . L * LCh . L		10735577	1		*			
ANR	10735722	MemberAccess	LCh . L		10735577	0					
ANR	10735723	Identifier	LCh		10735577	0					
ANR	10735724	Identifier	L		10735577	1					
ANR	10735725	MemberAccess	LCh . L		10735577	1					
ANR	10735726	Identifier	LCh		10735577	0					
ANR	10735727	Identifier	L		10735577	1					
ANR	10735728	ExpressionStatement	"printf ( ""Sens = %f\\n"" , Ssens )"	113:14:3675:3703	10735577	1	True				
ANR	10735729	CallExpression	"printf ( ""Sens = %f\\n"" , Ssens )"		10735577	0					
ANR	10735730	Callee	printf		10735577	0					
ANR	10735731	Identifier	printf		10735577	0					
ANR	10735732	ArgumentList	"""Sens = %f\\n"""		10735577	1					
ANR	10735733	Argument	"""Sens = %f\\n"""		10735577	0					
ANR	10735734	PrimaryExpression	"""Sens = %f\\n"""		10735577	0					
ANR	10735735	Argument	Ssens		10735577	1					
ANR	10735736	Identifier	Ssens		10735577	0					
ANR	10735737	ReturnType	static void		10735577	1					
ANR	10735738	Identifier	ShowWhitePoint		10735577	2					
ANR	10735739	ParameterList	cmsCIEXYZ * WtPt		10735577	3					
ANR	10735740	Parameter	cmsCIEXYZ * WtPt	96:20:3132:3146	10735577	0	True				
ANR	10735741	ParameterType	cmsCIEXYZ *		10735577	0					
ANR	10735742	Identifier	WtPt		10735577	1					
ANR	10735743	CFGEntryNode	ENTRY		10735577		True				
ANR	10735744	CFGExitNode	EXIT		10735577		True				
ANR	10735745	Symbol	* WtPt		10735577						
ANR	10735746	Symbol	NULL		10735577						
ANR	10735747	Symbol	lShowLCh		10735577						
ANR	10735748	Symbol	WtPt		10735577						
ANR	10735749	Symbol	lShowLab		10735577						
ANR	10735750	Symbol	Lab		10735577						
ANR	10735751	Symbol	WtPt -> Z		10735577						
ANR	10735752	Symbol	Ssens		10735577						
ANR	10735753	Symbol	WtPt -> Y		10735577						
ANR	10735754	Symbol	Lab . b		10735577						
ANR	10735755	Symbol	WtPt -> X		10735577						
ANR	10735756	Symbol	Lab . a		10735577						
ANR	10735757	Symbol	LCh		10735577						
ANR	10735758	Symbol	& LCh		10735577						
ANR	10735759	Symbol	LCh . h		10735577						
ANR	10735760	Symbol	& Lab		10735577						
ANR	10735761	Symbol	Lab . L		10735577						
ANR	10735762	Symbol	LCh . C		10735577						
ANR	10735763	Symbol	sqrt		10735577						
ANR	10735764	Symbol	xyY		10735577						
ANR	10735765	Symbol	& xyY		10735577						
ANR	10735766	Symbol	LCh . L		10735577						
ANR	10735767	Symbol	lShowXYZ		10735577						
ANR	10735768	Function	main	119:0:3719:4278							
ANR	10735769	FunctionDef	"main (int argc , char * argv [ ])"		10735768	0					
ANR	10735770	CompoundStatement		120:0:3752:4278	10735768	0					
ANR	10735771	IdentifierDeclStatement	int nargs ;	121:7:3761:3770	10735768	0	True				
ANR	10735772	IdentifierDecl	nargs		10735768	0					
ANR	10735773	IdentifierDeclType	int		10735768	0					
ANR	10735774	Identifier	nargs		10735768	1					
ANR	10735775	ExpressionStatement	"InitUtils ( ""wtpt"" )"	123:7:3780:3797	10735768	1	True				
ANR	10735776	CallExpression	"InitUtils ( ""wtpt"" )"		10735768	0					
ANR	10735777	Callee	InitUtils		10735768	0					
ANR	10735778	Identifier	InitUtils		10735768	0					
ANR	10735779	ArgumentList	"""wtpt"""		10735768	1					
ANR	10735780	Argument	"""wtpt"""		10735768	0					
ANR	10735781	PrimaryExpression	"""wtpt"""		10735768	0					
ANR	10735782	ExpressionStatement	"HandleSwitches ( argc , argv )"	125:7:3814:3840	10735768	2	True				
ANR	10735783	CallExpression	"HandleSwitches ( argc , argv )"		10735768	0					
ANR	10735784	Callee	HandleSwitches		10735768	0					
ANR	10735785	Identifier	HandleSwitches		10735768	0					
ANR	10735786	ArgumentList	argc		10735768	1					
ANR	10735787	Argument	argc		10735768	0					
ANR	10735788	Identifier	argc		10735768	0					
ANR	10735789	Argument	argv		10735768	1					
ANR	10735790	Identifier	argv		10735768	0					
ANR	10735791	ExpressionStatement	nargs = ( argc - xoptind )	127:7:3850:3874	10735768	3	True				
ANR	10735792	AssignmentExpression	nargs = ( argc - xoptind )		10735768	0		=			
ANR	10735793	Identifier	nargs		10735768	0					
ANR	10735794	AdditiveExpression	argc - xoptind		10735768	1		-			
ANR	10735795	Identifier	argc		10735768	0					
ANR	10735796	Identifier	xoptind		10735768	1					
ANR	10735797	IfStatement	if ( nargs != 1 )		10735768	4					
ANR	10735798	Condition	nargs != 1	129:11:3888:3897	10735768	0	True				
ANR	10735799	EqualityExpression	nargs != 1		10735768	0		!=			
ANR	10735800	Identifier	nargs		10735768	0					
ANR	10735801	PrimaryExpression	1		10735768	1					
ANR	10735802	ExpressionStatement	Help ( )	130:14:3914:3920	10735768	1	True				
ANR	10735803	CallExpression	Help ( )		10735768	0					
ANR	10735804	Callee	Help		10735768	0					
ANR	10735805	Identifier	Help		10735768	0					
ANR	10735806	ArgumentList			10735768	1					
ANR	10735807	ElseStatement	else		10735768	0					
ANR	10735808	CompoundStatement		15:14:229:294	10735768	0					
ANR	10735809	IdentifierDeclStatement	cmsCIEXYZ * WtPt ;	133:14:3951:3966	10735768	0	True				
ANR	10735810	IdentifierDecl	* WtPt		10735768	0					
ANR	10735811	IdentifierDeclType	cmsCIEXYZ *		10735768	0					
ANR	10735812	Identifier	WtPt		10735768	1					
ANR	10735813	IdentifierDeclStatement	"cmsHPROFILE hProfile = cmsOpenProfileFromFile ( argv [ xoptind ] , ""r"" ) ;"	134:14:3982:4047	10735768	1	True				
ANR	10735814	IdentifierDecl	"hProfile = cmsOpenProfileFromFile ( argv [ xoptind ] , ""r"" )"		10735768	0					
ANR	10735815	IdentifierDeclType	cmsHPROFILE		10735768	0					
ANR	10735816	Identifier	hProfile		10735768	1					
ANR	10735817	AssignmentExpression	"hProfile = cmsOpenProfileFromFile ( argv [ xoptind ] , ""r"" )"		10735768	2		=			
ANR	10735818	Identifier	hProfile		10735768	0					
ANR	10735819	CallExpression	"cmsOpenProfileFromFile ( argv [ xoptind ] , ""r"" )"		10735768	1					
ANR	10735820	Callee	cmsOpenProfileFromFile		10735768	0					
ANR	10735821	Identifier	cmsOpenProfileFromFile		10735768	0					
ANR	10735822	ArgumentList	argv [ xoptind ]		10735768	1					
ANR	10735823	Argument	argv [ xoptind ]		10735768	0					
ANR	10735824	ArrayIndexing	argv [ xoptind ]		10735768	0					
ANR	10735825	Identifier	argv		10735768	0					
ANR	10735826	Identifier	xoptind		10735768	1					
ANR	10735827	Argument	"""r"""		10735768	1					
ANR	10735828	PrimaryExpression	"""r"""		10735768	0					
ANR	10735829	IfStatement	if ( hProfile == NULL )		10735768	2					
ANR	10735830	Condition	hProfile == NULL	135:18:4069:4084	10735768	0	True				
ANR	10735831	EqualityExpression	hProfile == NULL		10735768	0		==			
ANR	10735832	Identifier	hProfile		10735768	0					
ANR	10735833	Identifier	NULL		10735768	1					
ANR	10735834	ReturnStatement	return 1 ;	135:36:4087:4095	10735768	1	True				
ANR	10735835	PrimaryExpression	1		10735768	0					
ANR	10735836	ExpressionStatement	"WtPt = cmsReadTag ( hProfile , cmsSigMediaWhitePointTag )"	137:14:4112:4165	10735768	3	True				
ANR	10735837	AssignmentExpression	"WtPt = cmsReadTag ( hProfile , cmsSigMediaWhitePointTag )"		10735768	0		=			
ANR	10735838	Identifier	WtPt		10735768	0					
ANR	10735839	CallExpression	"cmsReadTag ( hProfile , cmsSigMediaWhitePointTag )"		10735768	1					
ANR	10735840	Callee	cmsReadTag		10735768	0					
ANR	10735841	Identifier	cmsReadTag		10735768	0					
ANR	10735842	ArgumentList	hProfile		10735768	1					
ANR	10735843	Argument	hProfile		10735768	0					
ANR	10735844	Identifier	hProfile		10735768	0					
ANR	10735845	Argument	cmsSigMediaWhitePointTag		10735768	1					
ANR	10735846	Identifier	cmsSigMediaWhitePointTag		10735768	0					
ANR	10735847	ExpressionStatement	ShowWhitePoint ( WtPt )	138:14:4181:4201	10735768	4	True				
ANR	10735848	CallExpression	ShowWhitePoint ( WtPt )		10735768	0					
ANR	10735849	Callee	ShowWhitePoint		10735768	0					
ANR	10735850	Identifier	ShowWhitePoint		10735768	0					
ANR	10735851	ArgumentList	WtPt		10735768	1					
ANR	10735852	Argument	WtPt		10735768	0					
ANR	10735853	Identifier	WtPt		10735768	0					
ANR	10735854	ExpressionStatement	cmsCloseProfile ( hProfile )	139:14:4217:4242	10735768	5	True				
ANR	10735855	CallExpression	cmsCloseProfile ( hProfile )		10735768	0					
ANR	10735856	Callee	cmsCloseProfile		10735768	0					
ANR	10735857	Identifier	cmsCloseProfile		10735768	0					
ANR	10735858	ArgumentList	hProfile		10735768	1					
ANR	10735859	Argument	hProfile		10735768	0					
ANR	10735860	Identifier	hProfile		10735768	0					
ANR	10735861	ReturnStatement	return 0 ;	142:7:4268:4276	10735768	5	True				
ANR	10735862	PrimaryExpression	0		10735768	0					
ANR	10735863	ReturnType	int		10735768	1					
ANR	10735864	Identifier	main		10735768	2					
ANR	10735865	ParameterList	"int argc , char * argv [ ]"		10735768	3					
ANR	10735866	Parameter	int argc	119:9:3728:3735	10735768	0	True				
ANR	10735867	ParameterType	int		10735768	0					
ANR	10735868	Identifier	argc		10735768	1					
ANR	10735869	Parameter	char * argv [ ]	119:19:3738:3749	10735768	1	True				
ANR	10735870	ParameterType	char * [ ]		10735768	0					
ANR	10735871	Identifier	argv		10735768	1					
ANR	10735872	CFGEntryNode	ENTRY		10735768		True				
ANR	10735873	CFGExitNode	EXIT		10735768		True				
ANR	10735874	Symbol	argc		10735768						
ANR	10735875	Symbol	nargs		10735768						
ANR	10735876	Symbol	hProfile		10735768						
ANR	10735877	Symbol	cmsOpenProfileFromFile		10735768						
ANR	10735878	Symbol	xoptind		10735768						
ANR	10735879	Symbol	NULL		10735768						
ANR	10735880	Symbol	cmsReadTag		10735768						
ANR	10735881	Symbol	cmsSigMediaWhitePointTag		10735768						
ANR	10735882	Symbol	WtPt		10735768						
ANR	10735883	Symbol	* xoptind		10735768						
ANR	10735884	Symbol	* argv		10735768						
ANR	10735885	Symbol	argv		10735768						
