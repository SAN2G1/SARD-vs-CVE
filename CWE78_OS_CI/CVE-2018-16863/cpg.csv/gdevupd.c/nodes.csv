command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4788352	File	data/converged/CVE-2018-16863_ghostpdl/gdevupd.c								
ANR	4788353	DeclStmt									
ANR	4788354	Decl							struct upd_s	struct upd_s	upd_t
ANR	4788355	Decl							struct upd_s	struct upd_s *	upd_p
ANR	4788356	DeclStmt									
ANR	4788357	Decl							const upd_t	const upd_t *	upd_pc
ANR	4788358	ClassDef	upd_device_s	111:8:4461:4828							
ANR	4788359	DeclStmt									
ANR	4788360	Decl							gs_param_string	gs_param_string	upd_version
ANR	4788361	DeclStmt									
ANR	4788362	Decl							upd_p	upd_p	upd
ANR	4788363	DeclStmt									
ANR	4788364	Decl							upd_device_s	upd_device_s	upd_device
ANR	4788365	DeclStmt									
ANR	4788366	Decl							int	int ( upd_device * udev )	upd_procs_map
ANR	4788367	DeclStmt									
ANR	4788368	Decl							gx_device_procs	gx_device_procs	upd_procs
ANR	4788369	DeclStmt									
ANR	4788370	Decl							upd_device far_data	upd_device far_data	gs_uniprint_device
ANR	4788371	ClassDef	updcmap_s	609:8:28476:28958							
ANR	4788372	DeclStmt									
ANR	4788373	Decl							gx_color_value	gx_color_value *	code
ANR	4788374	DeclStmt									
ANR	4788375	Decl							uint32_t	uint32_t	bitmsk
ANR	4788376	DeclStmt									
ANR	4788377	Decl							int	int	bitshf
ANR	4788378	DeclStmt									
ANR	4788379	Decl							int	int	xfer
ANR	4788380	DeclStmt									
ANR	4788381	Decl							int	int	bits
ANR	4788382	DeclStmt									
ANR	4788383	Decl							int	int	comp
ANR	4788384	DeclStmt									
ANR	4788385	Decl							bool	bool	rise
ANR	4788386	DeclStmt									
ANR	4788387	Decl							updcmap_s	updcmap_s	updcmap_t
ANR	4788388	Decl							updcmap_s	updcmap_s *	updcmap_p
ANR	4788389	DeclStmt									
ANR	4788390	Decl							const updcmap_t	const updcmap_t *	updcmap_pc
ANR	4788391	ClassDef	updcomp_s	624:8:29090:29681							
ANR	4788392	DeclStmt									
ANR	4788393	Decl							int32_t	int32_t	offset
ANR	4788394	DeclStmt									
ANR	4788395	Decl							int32_t	int32_t	scale
ANR	4788396	DeclStmt									
ANR	4788397	Decl							int32_t	int32_t	threshold
ANR	4788398	DeclStmt									
ANR	4788399	Decl							int32_t	int32_t	spotsize
ANR	4788400	DeclStmt									
ANR	4788401	Decl							uint32_t	uint32_t	bitmsk
ANR	4788402	DeclStmt									
ANR	4788403	Decl							int	int	bitshf
ANR	4788404	DeclStmt									
ANR	4788405	Decl							int	int	bits
ANR	4788406	DeclStmt									
ANR	4788407	Decl							int	int	cmap
ANR	4788408	DeclStmt									
ANR	4788409	Decl							updcomp_s	updcomp_s	updcomp_t
ANR	4788410	Decl							updcomp_s	updcomp_s *	updcomp_p
ANR	4788411	ClassDef	updscan_s	637:8:29783:30046							
ANR	4788412	DeclStmt									
ANR	4788413	Decl							byte	byte *	bytes
ANR	4788414	DeclStmt									
ANR	4788415	Decl							int	int *	xbegin
ANR	4788416	DeclStmt									
ANR	4788417	Decl							int	int *	xend
ANR	4788418	DeclStmt									
ANR	4788419	Decl							updscan_s	updscan_s	updscan_t
ANR	4788420	Decl							updscan_s	updscan_s *	updscan_p
ANR	4788421	ClassDef	upd_s	652:0:30406:33381							
ANR	4788422	DeclStmt									
ANR	4788423	Decl							int	int *	choice
ANR	4788424	DeclStmt									
ANR	4788425	Decl							int	int *	ints
ANR	4788426	DeclStmt									
ANR	4788427	Decl							gs_param_int_array	gs_param_int_array *	int_a
ANR	4788428	DeclStmt									
ANR	4788429	Decl							gs_param_string	gs_param_string *	strings
ANR	4788430	DeclStmt									
ANR	4788431	Decl							gs_param_string_array	gs_param_string_array *	string_a
ANR	4788432	DeclStmt									
ANR	4788433	Decl							gs_param_float_array	gs_param_float_array *	float_a
ANR	4788434	DeclStmt									
ANR	4788435	Decl							updcmap_t	updcmap_t [ UPD_CMAP_MAX ]	cmap
ANR	4788436	DeclStmt									
ANR	4788437	Decl							byte	byte *	gsbuf
ANR	4788438	DeclStmt									
ANR	4788439	Decl							byte	byte *	gsscan
ANR	4788440	DeclStmt									
ANR	4788441	Decl							byte	byte *	pxlptr
ANR	4788442	DeclStmt									
ANR	4788443	Decl							updscan_p	updscan_p *	scnbuf
ANR	4788444	DeclStmt									
ANR	4788445	Decl							int32_t	int32_t *	valbuf
ANR	4788446	DeclStmt									
ANR	4788447	Decl							void	void * [ UPD_VALPTR_MAX ]	valptr
ANR	4788448	DeclStmt									
ANR	4788449	Decl							byte	byte *	outbuf
ANR	4788450	DeclStmt									
ANR	4788451	Decl							uint32_t	uint32_t	flags
ANR	4788452	DeclStmt									
ANR	4788453	Decl							int	int	pdwidth
ANR	4788454	DeclStmt									
ANR	4788455	Decl							int	int	pdheight
ANR	4788456	DeclStmt									
ANR	4788457	Decl							uint	uint	ngsbuf
ANR	4788458	DeclStmt									
ANR	4788459	Decl							int	int	gswidth
ANR	4788460	DeclStmt									
ANR	4788461	Decl							int	int	gsheight
ANR	4788462	DeclStmt									
ANR	4788463	Decl							int	int	rwidth
ANR	4788464	DeclStmt									
ANR	4788465	Decl							int	int	pwidth
ANR	4788466	DeclStmt									
ANR	4788467	Decl							int	int	pheight
ANR	4788468	DeclStmt									
ANR	4788469	Decl							int	int	ncomp
ANR	4788470	DeclStmt									
ANR	4788471	Decl							int	int	nmap
ANR	4788472	DeclStmt									
ANR	4788473	Decl							uint	uint	nvalbuf
ANR	4788474	DeclStmt									
ANR	4788475	Decl							int	int	nscnbuf
ANR	4788476	DeclStmt									
ANR	4788477	Decl							int	int	ocomp
ANR	4788478	DeclStmt									
ANR	4788479	Decl							int	int	nbytes
ANR	4788480	DeclStmt									
ANR	4788481	Decl							int	int	nlimits
ANR	4788482	DeclStmt									
ANR	4788483	Decl							int	int	scnmsk
ANR	4788484	DeclStmt									
ANR	4788485	Decl							uint	uint	noutbuf
ANR	4788486	DeclStmt									
ANR	4788487	Decl							int	int	ixpass
ANR	4788488	DeclStmt									
ANR	4788489	Decl							int	int	ipass
ANR	4788490	DeclStmt									
ANR	4788491	Decl							int	int	icomp
ANR	4788492	DeclStmt									
ANR	4788493	Decl							int	int	lf
ANR	4788494	DeclStmt									
ANR	4788495	Decl							int	int	xprinter
ANR	4788496	DeclStmt									
ANR	4788497	Decl							int	int	yscan
ANR	4788498	DeclStmt									
ANR	4788499	Decl							int	int	yprinter
ANR	4788500	DeclStmt									
ANR	4788501	Decl							int	int	yscnbuf
ANR	4788502	DeclStmt									
ANR	4788503	Decl							const gs_memory_t	const gs_memory_t *	memory
ANR	4788504	DeclStmt									
ANR	4788505	Decl							int	int ( upd_device * udev )	upd_open_map
ANR	4788506	DeclStmt									
ANR	4788507	Decl							int	int ( upd_device * udev )	upd_close_map
ANR	4788508	DeclStmt									
ANR	4788509	Decl							uint32_t	"uint32_t ( upd_pc , int , gx_color_value )"	upd_truncate
ANR	4788510	Function	upd_expand	761:0:35483:35973							
ANR	4788511	FunctionDef	"upd_expand (upd_pc upd , int i , gx_color_index ci0)"		4788510	0					
ANR	4788512	CompoundStatement		763:0:35560:35973	4788510	0					
ANR	4788513	IdentifierDeclStatement	const updcmap_pc cmap = upd -> cmap + i ;	764:3:35565:35602	4788510	0	True				
ANR	4788514	IdentifierDecl	cmap = upd -> cmap + i		4788510	0					
ANR	4788515	IdentifierDeclType	const updcmap_pc		4788510	0					
ANR	4788516	Identifier	cmap		4788510	1					
ANR	4788517	AssignmentExpression	cmap = upd -> cmap + i		4788510	2		=			
ANR	4788518	Identifier	cmap		4788510	0					
ANR	4788519	AdditiveExpression	upd -> cmap + i		4788510	1		+			
ANR	4788520	PtrMemberAccess	upd -> cmap		4788510	0					
ANR	4788521	Identifier	upd		4788510	0					
ANR	4788522	Identifier	cmap		4788510	1					
ANR	4788523	Identifier	i		4788510	1					
ANR	4788524	IdentifierDeclStatement	uint32_t ci = ( uint32_t ) ( ( ci0 >> cmap -> bitshf ) & cmap -> bitmsk ) ;	765:3:35633:35695	4788510	1	True				
ANR	4788525	IdentifierDecl	ci = ( uint32_t ) ( ( ci0 >> cmap -> bitshf ) & cmap -> bitmsk )		4788510	0					
ANR	4788526	IdentifierDeclType	uint32_t		4788510	0					
ANR	4788527	Identifier	ci		4788510	1					
ANR	4788528	AssignmentExpression	ci = ( uint32_t ) ( ( ci0 >> cmap -> bitshf ) & cmap -> bitmsk )		4788510	2		=			
ANR	4788529	Identifier	ci		4788510	0					
ANR	4788530	CastExpression	( uint32_t ) ( ( ci0 >> cmap -> bitshf ) & cmap -> bitmsk )		4788510	1					
ANR	4788531	CastTarget	uint32_t		4788510	0					
ANR	4788532	BitAndExpression	( ci0 >> cmap -> bitshf ) & cmap -> bitmsk		4788510	1		&			
ANR	4788533	ShiftExpression	ci0 >> cmap -> bitshf		4788510	0		>>			
ANR	4788534	Identifier	ci0		4788510	0					
ANR	4788535	PtrMemberAccess	cmap -> bitshf		4788510	1					
ANR	4788536	Identifier	cmap		4788510	0					
ANR	4788537	Identifier	bitshf		4788510	1					
ANR	4788538	PtrMemberAccess	cmap -> bitmsk		4788510	1					
ANR	4788539	Identifier	cmap		4788510	0					
ANR	4788540	Identifier	bitmsk		4788510	1					
ANR	4788541	IfStatement	if ( ! cmap -> rise )		4788510	2					
ANR	4788542	Condition	! cmap -> rise	767:6:35732:35742	4788510	0	True				
ANR	4788543	UnaryOperationExpression	! cmap -> rise		4788510	0					
ANR	4788544	UnaryOperator	!		4788510	0					
ANR	4788545	PtrMemberAccess	cmap -> rise		4788510	1					
ANR	4788546	Identifier	cmap		4788510	0					
ANR	4788547	Identifier	rise		4788510	1					
ANR	4788548	ExpressionStatement	ci = cmap -> bitmsk - ci	767:19:35745:35767	4788510	1	True				
ANR	4788549	AssignmentExpression	ci = cmap -> bitmsk - ci		4788510	0		=			
ANR	4788550	Identifier	ci		4788510	0					
ANR	4788551	AdditiveExpression	cmap -> bitmsk - ci		4788510	1		-			
ANR	4788552	PtrMemberAccess	cmap -> bitmsk		4788510	0					
ANR	4788553	Identifier	cmap		4788510	0					
ANR	4788554	Identifier	bitmsk		4788510	1					
ANR	4788555	Identifier	ci		4788510	1					
ANR	4788556	IfStatement	if ( gx_color_value_bits > cmap -> bits )		4788510	3					
ANR	4788557	Condition	gx_color_value_bits > cmap -> bits	769:6:35848:35879	4788510	0	True				
ANR	4788558	RelationalExpression	gx_color_value_bits > cmap -> bits		4788510	0		>			
ANR	4788559	Identifier	gx_color_value_bits		4788510	0					
ANR	4788560	PtrMemberAccess	cmap -> bits		4788510	1					
ANR	4788561	Identifier	cmap		4788510	0					
ANR	4788562	Identifier	bits		4788510	1					
ANR	4788563	ReturnStatement	return cmap -> code [ ci ] ;	769:40:35882:35903	4788510	1	True				
ANR	4788564	ArrayIndexing	cmap -> code [ ci ]		4788510	0					
ANR	4788565	PtrMemberAccess	cmap -> code		4788510	0					
ANR	4788566	Identifier	cmap		4788510	0					
ANR	4788567	Identifier	code		4788510	1					
ANR	4788568	Identifier	ci		4788510	1					
ANR	4788569	ElseStatement	else		4788510	0					
ANR	4788570	ReturnStatement	return ( gx_color_value ) ci ;	770:40:35945:35971	4788510	0	True				
ANR	4788571	CastExpression	( gx_color_value ) ci		4788510	0					
ANR	4788572	CastTarget	gx_color_value		4788510	0					
ANR	4788573	Identifier	ci		4788510	1					
ANR	4788574	ReturnType	static inline gx_color_value		4788510	1					
ANR	4788575	Identifier	upd_expand		4788510	2					
ANR	4788576	ParameterList	"upd_pc upd , int i , gx_color_index ci0"		4788510	3					
ANR	4788577	Parameter	upd_pc upd	762:11:35523:35532	4788510	0	True				
ANR	4788578	ParameterType	upd_pc		4788510	0					
ANR	4788579	Identifier	upd		4788510	1					
ANR	4788580	Parameter	int i	762:22:35534:35538	4788510	1	True				
ANR	4788581	ParameterType	int		4788510	0					
ANR	4788582	Identifier	i		4788510	1					
ANR	4788583	Parameter	gx_color_index ci0	762:28:35540:35557	4788510	2	True				
ANR	4788584	ParameterType	gx_color_index		4788510	0					
ANR	4788585	Identifier	ci0		4788510	1					
ANR	4788586	CFGEntryNode	ENTRY		4788510		True				
ANR	4788587	CFGExitNode	EXIT		4788510		True				
ANR	4788588	Symbol	ci		4788510						
ANR	4788589	Symbol	cmap -> code		4788510						
ANR	4788590	Symbol	cmap -> bitshf		4788510						
ANR	4788591	Symbol	upd		4788510						
ANR	4788592	Symbol	i		4788510						
ANR	4788593	Symbol	ci0		4788510						
ANR	4788594	Symbol	cmap -> bitmsk		4788510						
ANR	4788595	Symbol	cmap -> rise		4788510						
ANR	4788596	Symbol	upd -> cmap		4788510						
ANR	4788597	Symbol	* ci		4788510						
ANR	4788598	Symbol	* * cmap		4788510						
ANR	4788599	Symbol	* cmap		4788510						
ANR	4788600	Symbol	* upd		4788510						
ANR	4788601	Symbol	cmap		4788510						
ANR	4788602	Symbol	* cmap -> code		4788510						
ANR	4788603	Symbol	cmap -> bits		4788510						
ANR	4788604	Symbol	gx_color_value_bits		4788510						
ANR	4788605	DeclStmt									
ANR	4788606	Decl							void	void ( upd_device * udev )	upd_open_render
ANR	4788607	DeclStmt									
ANR	4788608	Decl							void	void ( upd_device * udev )	upd_close_render
ANR	4788609	DeclStmt									
ANR	4788610	Decl							void	void ( upd_device * udev )	upd_open_fscomp
ANR	4788611	DeclStmt									
ANR	4788612	Decl							int	int ( upd_p upd )	upd_fscomp
ANR	4788613	DeclStmt									
ANR	4788614	Decl							void	void ( upd_device * udev )	upd_close_fscomp
ANR	4788615	DeclStmt									
ANR	4788616	Decl							void	void ( upd_device * udev )	upd_open_fscmyk
ANR	4788617	DeclStmt									
ANR	4788618	Decl							int	int ( upd_p upd )	upd_fscmyk
ANR	4788619	DeclStmt									
ANR	4788620	Decl							void	void ( upd_device * udev )	upd_open_fscmy_k
ANR	4788621	DeclStmt									
ANR	4788622	Decl							int	int ( upd_p upd )	upd_fscmy_k
ANR	4788623	DeclStmt									
ANR	4788624	Decl							int	int ( upd_device * udev )	upd_open_writer
ANR	4788625	DeclStmt									
ANR	4788626	Decl							void	void ( upd_device * udev )	upd_close_writer
ANR	4788627	DeclStmt									
ANR	4788628	Decl							void	void ( int sig )	upd_signal_handler
ANR	4788629	DeclStmt									
ANR	4788630	Decl							int	int ( upd_device * udev )	upd_open_rascomp
ANR	4788631	DeclStmt									
ANR	4788632	Decl							int	"int ( upd_p upd , FILE * out )"	upd_start_rascomp
ANR	4788633	DeclStmt									
ANR	4788634	Decl							int	"int ( upd_p upd , FILE * out )"	upd_rascomp
ANR	4788635	DeclStmt									
ANR	4788636	Decl							void	"void ( upd_p upd , bool check )"	upd_limits
ANR	4788637	DeclStmt									
ANR	4788638	Decl							int	int ( upd_device * udev )	upd_open_wrtescp
ANR	4788639	DeclStmt									
ANR	4788640	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtescp
ANR	4788641	DeclStmt									
ANR	4788642	Decl							int	"int ( byte * out , const byte * in , int nbytes )"	upd_rle
ANR	4788643	DeclStmt									
ANR	4788644	Decl							int	int ( upd_device * udev )	upd_open_wrtescp2
ANR	4788645	DeclStmt									
ANR	4788646	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtescp2
ANR	4788647	DeclStmt									
ANR	4788648	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtescp2x
ANR	4788649	DeclStmt									
ANR	4788650	Decl							int	int ( upd_device * udev )	upd_open_wrtrtl
ANR	4788651	DeclStmt									
ANR	4788652	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtrtl
ANR	4788653	DeclStmt									
ANR	4788654	Decl							int	int ( upd_device * udev )	upd_open_wrtcanon
ANR	4788655	DeclStmt									
ANR	4788656	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtcanon
ANR	4788657	DeclStmt									
ANR	4788658	Decl							int	"int ( upd_p upd , FILE * out )"	upd_wrtescnm
ANR	4788659	DeclStmt									
ANR	4788660	Decl							uint32_t	uint32_t ( upd_p upd )	upd_pxlfwd
ANR	4788661	DeclStmt									
ANR	4788662	Decl							uint32_t	uint32_t ( upd_p upd )	upd_pxlrev
ANR	4788663	DeclStmt									
ANR	4788664	Decl							void	void * ( const void * )	upd_cast
ANR	4788665	DeclStmt									
ANR	4788666	Decl							byte	byte *	tmp
ANR	4788667	DeclStmt									
ANR	4788668	Decl							uint	uint	ii
ANR	4788669	DeclStmt									
ANR	4788670	Decl							uint	uint	iii
ANR	4788671	DeclStmt									
ANR	4788672	Decl							uint	uint	ii
ANR	4788673	DeclStmt									
ANR	4788674	Decl							gs_param_string	gs_param_string *	tmp2
ANR	4788675	DeclStmt									
ANR	4788676	Decl							uint	uint	iii
ANR	4788677	DeclStmt									
ANR	4788678	Decl							const char	const char [ ]	rcsid
ANR	4788679	Function	upd_cast	979:0:45340:45407							
ANR	4788680	FunctionDef	upd_cast (const void * data)		4788679	0					
ANR	4788681	CompoundStatement		981:0:45381:45407	4788679	0					
ANR	4788682	ReturnStatement	return ( void * ) data ;	982:2:45385:45405	4788679	0	True				
ANR	4788683	CastExpression	( void * ) data		4788679	0					
ANR	4788684	CastTarget	void *		4788679	0					
ANR	4788685	Identifier	data		4788679	1					
ANR	4788686	ReturnType	static void *		4788679	1					
ANR	4788687	Identifier	upd_cast		4788679	2					
ANR	4788688	ParameterList	const void * data		4788679	3					
ANR	4788689	Parameter	const void * data	980:9:45363:45378	4788679	0	True				
ANR	4788690	ParameterType	const void *		4788679	0					
ANR	4788691	Identifier	data		4788679	1					
ANR	4788692	CFGEntryNode	ENTRY		4788679		True				
ANR	4788693	CFGExitNode	EXIT		4788679		True				
ANR	4788694	Symbol	data		4788679						
ANR	4788695	DeclStmt									
ANR	4788696	Decl							upd_p	upd_p	sigupd
ANR	4788697	Function	upd_signal_handler	991:0:45676:45757							
ANR	4788698	FunctionDef	upd_signal_handler (int sig)		4788697	0					
ANR	4788699	CompoundStatement		993:0:45716:45757	4788697	0					
ANR	4788700	IfStatement	if ( sigupd )		4788697	0					
ANR	4788701	Condition	sigupd	994:5:45723:45728	4788697	0	True				
ANR	4788702	Identifier	sigupd		4788697	0					
ANR	4788703	ExpressionStatement	sigupd -> flags |= B_ABORT	994:13:45731:45755	4788697	1	True				
ANR	4788704	AssignmentExpression	sigupd -> flags |= B_ABORT		4788697	0		|=			
ANR	4788705	PtrMemberAccess	sigupd -> flags		4788697	0					
ANR	4788706	Identifier	sigupd		4788697	0					
ANR	4788707	Identifier	flags		4788697	1					
ANR	4788708	Identifier	B_ABORT		4788697	1					
ANR	4788709	ReturnType	static void		4788697	1					
ANR	4788710	Identifier	upd_signal_handler		4788697	2					
ANR	4788711	ParameterList	int sig		4788697	3					
ANR	4788712	Parameter	int sig	992:19:45707:45713	4788697	0	True				
ANR	4788713	ParameterType	int		4788697	0					
ANR	4788714	Identifier	sig		4788697	1					
ANR	4788715	CFGEntryNode	ENTRY		4788697		True				
ANR	4788716	CFGExitNode	EXIT		4788697		True				
ANR	4788717	Symbol	sig		4788697						
ANR	4788718	Symbol	* sigupd		4788697						
ANR	4788719	Symbol	B_ABORT		4788697						
ANR	4788720	Symbol	sigupd		4788697						
ANR	4788721	Symbol	sigupd -> flags		4788697						
ANR	4788722	Function	upd_print_page	1031:0:47184:53058							
ANR	4788723	FunctionDef	"upd_print_page (gx_device_printer * pdev , FILE * out)"		4788722	0					
ANR	4788724	CompoundStatement		1033:0:47246:53058	4788722	0					
ANR	4788725	Statement	upd_device	1034:3:47251:47260	4788722	0	True				
ANR	4788726	Statement	*	1034:14:47262:47262	4788722	1	True				
ANR	4788727	Statement	const	1034:15:47263:47267	4788722	2	True				
ANR	4788728	ExpressionStatement	udev = ( upd_device * ) pdev	1034:21:47269:47296	4788722	3	True				
ANR	4788729	AssignmentExpression	udev = ( upd_device * ) pdev		4788722	0		=			
ANR	4788730	Identifier	udev		4788722	0					
ANR	4788731	CastExpression	( upd_device * ) pdev		4788722	1					
ANR	4788732	CastTarget	upd_device *		4788722	0					
ANR	4788733	Identifier	pdev		4788722	1					
ANR	4788734	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	1035:3:47301:47336	4788722	4	True				
ANR	4788735	IdentifierDecl	upd = udev -> upd		4788722	0					
ANR	4788736	IdentifierDeclType	const upd_p		4788722	0					
ANR	4788737	Identifier	upd		4788722	1					
ANR	4788738	AssignmentExpression	upd = udev -> upd		4788722	2		=			
ANR	4788739	Identifier	upd		4788722	0					
ANR	4788740	PtrMemberAccess	udev -> upd		4788722	1					
ANR	4788741	Identifier	udev		4788722	0					
ANR	4788742	Identifier	upd		4788722	1					
ANR	4788743	Statement	const	1036:3:47341:47345	4788722	5	True				
ANR	4788744	Statement	int	1036:9:47347:47349	4788722	6	True				
ANR	4788745	Statement	*	1036:13:47351:47351	4788722	7	True				
ANR	4788746	Statement	const	1036:14:47352:47356	4788722	8	True				
ANR	4788747	ExpressionStatement	ints = upd ? upd -> ints : NULL	1036:21:47359:47389	4788722	9	True				
ANR	4788748	AssignmentExpression	ints = upd ? upd -> ints : NULL		4788722	0		=			
ANR	4788749	Identifier	ints		4788722	0					
ANR	4788750	ConditionalExpression	upd ? upd -> ints : NULL		4788722	1					
ANR	4788751	Condition	upd		4788722	0					
ANR	4788752	Identifier	upd		4788722	0					
ANR	4788753	PtrMemberAccess	upd -> ints		4788722	1					
ANR	4788754	Identifier	upd		4788722	0					
ANR	4788755	Identifier	ints		4788722	1					
ANR	4788756	Identifier	NULL		4788722	2					
ANR	4788757	IdentifierDeclStatement	"int error , need , yfill ;"	1037:3:47394:47414	4788722	10	True				
ANR	4788758	IdentifierDecl	error		4788722	0					
ANR	4788759	IdentifierDeclType	int		4788722	0					
ANR	4788760	Identifier	error		4788722	1					
ANR	4788761	IdentifierDecl	need		4788722	1					
ANR	4788762	IdentifierDeclType	int		4788722	0					
ANR	4788763	Identifier	need		4788722	1					
ANR	4788764	IdentifierDecl	yfill		4788722	2					
ANR	4788765	IdentifierDeclType	int		4788722	0					
ANR	4788766	Identifier	yfill		4788722	1					
ANR	4788767	IdentifierDeclStatement	void ( * oldint ) ( int ) = NULL ;	1040:3:47485:47512	4788722	11	True				
ANR	4788768	IdentifierDecl	( * oldint ) ( int ) = NULL		4788722	0					
ANR	4788769	IdentifierDeclType	void ( * ) ( int )		4788722	0					
ANR	4788770	Identifier	oldint		4788722	1					
ANR	4788771	AssignmentExpression	( * oldint ) ( int ) = NULL		4788722	2		=			
ANR	4788772	Identifier	NULL		4788722	0					
ANR	4788773	Identifier	NULL		4788722	1					
ANR	4788774	IdentifierDeclStatement	void ( * oldterm ) ( int ) = NULL ;	1041:3:47517:47544	4788722	12	True				
ANR	4788775	IdentifierDecl	( * oldterm ) ( int ) = NULL		4788722	0					
ANR	4788776	IdentifierDeclType	void ( * ) ( int )		4788722	0					
ANR	4788777	Identifier	oldterm		4788722	1					
ANR	4788778	AssignmentExpression	( * oldterm ) ( int ) = NULL		4788722	2		=			
ANR	4788779	Identifier	NULL		4788722	0					
ANR	4788780	Identifier	NULL		4788722	1					
ANR	4788781	IdentifierDeclStatement	upd_p oldupd = sigupd ;	1042:3:47549:47582	4788722	13	True				
ANR	4788782	IdentifierDecl	oldupd = sigupd		4788722	0					
ANR	4788783	IdentifierDeclType	upd_p		4788722	0					
ANR	4788784	Identifier	oldupd		4788722	1					
ANR	4788785	AssignmentExpression	oldupd = sigupd		4788722	2		=			
ANR	4788786	Identifier	sigupd		4788722	0					
ANR	4788787	Identifier	sigupd		4788722	1					
ANR	4788788	IfStatement	if ( ! upd || B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) )		4788722	14					
ANR	4788789	Condition	! upd || B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )	1049:6:47766:47818	4788722	0	True				
ANR	4788790	OrExpression	! upd || B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )		4788722	0		||			
ANR	4788791	UnaryOperationExpression	! upd		4788722	0					
ANR	4788792	UnaryOperator	!		4788722	0					
ANR	4788793	Identifier	upd		4788722	1					
ANR	4788794	EqualityExpression	B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )		4788722	1		!=			
ANR	4788795	Identifier	B_OK4GO		4788722	0					
ANR	4788796	BitAndExpression	upd -> flags & ( B_OK4GO | B_ERROR )		4788722	1		&			
ANR	4788797	PtrMemberAccess	upd -> flags		4788722	0					
ANR	4788798	Identifier	upd		4788722	0					
ANR	4788799	Identifier	flags		4788722	1					
ANR	4788800	InclusiveOrExpression	B_OK4GO | B_ERROR		4788722	1		|			
ANR	4788801	Identifier	B_OK4GO		4788722	0					
ANR	4788802	Identifier	B_ERROR		4788722	1					
ANR	4788803	CompoundStatement		17:61:574:574	4788722	1					
ANR	4788804	ExpressionStatement	"errprintf ( pdev -> memory , ""CALL-REJECTED upd_print_page(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) out )"	1051:9:47882:47993	4788722	0	True				
ANR	4788805	CallExpression	"errprintf ( pdev -> memory , ""CALL-REJECTED upd_print_page(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) out )"		4788722	0					
ANR	4788806	Callee	errprintf		4788722	0					
ANR	4788807	Identifier	errprintf		4788722	0					
ANR	4788808	ArgumentList	pdev -> memory		4788722	1					
ANR	4788809	Argument	pdev -> memory		4788722	0					
ANR	4788810	PtrMemberAccess	pdev -> memory		4788722	0					
ANR	4788811	Identifier	pdev		4788722	0					
ANR	4788812	Identifier	memory		4788722	1					
ANR	4788813	Argument	"""CALL-REJECTED upd_print_page(0x%05lx,0x%05lx)\\n"""		4788722	1					
ANR	4788814	PrimaryExpression	"""CALL-REJECTED upd_print_page(0x%05lx,0x%05lx)\\n"""		4788722	0					
ANR	4788815	Argument	( long ) udev		4788722	2					
ANR	4788816	CastExpression	( long ) udev		4788722	0					
ANR	4788817	CastTarget	long		4788722	0					
ANR	4788818	Identifier	udev		4788722	1					
ANR	4788819	Argument	( long ) out		4788722	3					
ANR	4788820	CastExpression	( long ) out		4788722	0					
ANR	4788821	CastTarget	long		4788722	0					
ANR	4788822	Identifier	out		4788722	1					
ANR	4788823	ExpressionStatement	return_error ( gs_error_undefined )	1054:2:48004:48036	4788722	1	True				
ANR	4788824	CallExpression	return_error ( gs_error_undefined )		4788722	0					
ANR	4788825	Callee	return_error		4788722	0					
ANR	4788826	Identifier	return_error		4788722	0					
ANR	4788827	ArgumentList	gs_error_undefined		4788722	1					
ANR	4788828	Argument	gs_error_undefined		4788722	0					
ANR	4788829	Identifier	gs_error_undefined		4788722	0					
ANR	4788830	ExpressionStatement	"errprintf ( pdev -> memory , ""CALL: upd_print_page(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) out )"	1058:3:48081:48177	4788722	15	True				
ANR	4788831	CallExpression	"errprintf ( pdev -> memory , ""CALL: upd_print_page(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) out )"		4788722	0					
ANR	4788832	Callee	errprintf		4788722	0					
ANR	4788833	Identifier	errprintf		4788722	0					
ANR	4788834	ArgumentList	pdev -> memory		4788722	1					
ANR	4788835	Argument	pdev -> memory		4788722	0					
ANR	4788836	PtrMemberAccess	pdev -> memory		4788722	0					
ANR	4788837	Identifier	pdev		4788722	0					
ANR	4788838	Identifier	memory		4788722	1					
ANR	4788839	Argument	"""CALL: upd_print_page(0x%05lx,0x%05lx)\\n"""		4788722	1					
ANR	4788840	PrimaryExpression	"""CALL: upd_print_page(0x%05lx,0x%05lx)\\n"""		4788722	0					
ANR	4788841	Argument	( long ) udev		4788722	2					
ANR	4788842	CastExpression	( long ) udev		4788722	0					
ANR	4788843	CastTarget	long		4788722	0					
ANR	4788844	Identifier	udev		4788722	1					
ANR	4788845	Argument	( long ) out		4788722	3					
ANR	4788846	CastExpression	( long ) out		4788722	0					
ANR	4788847	CastTarget	long		4788722	0					
ANR	4788848	Identifier	out		4788722	1					
ANR	4788849	ExpressionStatement	sigupd = upd	1063:3:48236:48249	4788722	16	True				
ANR	4788850	AssignmentExpression	sigupd = upd		4788722	0		=			
ANR	4788851	Identifier	sigupd		4788722	0					
ANR	4788852	Identifier	upd		4788722	1					
ANR	4788853	ExpressionStatement	"oldint = signal ( SIGINT , upd_signal_handler )"	1064:3:48254:48298	4788722	17	True				
ANR	4788854	AssignmentExpression	"oldint = signal ( SIGINT , upd_signal_handler )"		4788722	0		=			
ANR	4788855	Identifier	oldint		4788722	0					
ANR	4788856	CallExpression	"signal ( SIGINT , upd_signal_handler )"		4788722	1					
ANR	4788857	Callee	signal		4788722	0					
ANR	4788858	Identifier	signal		4788722	0					
ANR	4788859	ArgumentList	SIGINT		4788722	1					
ANR	4788860	Argument	SIGINT		4788722	0					
ANR	4788861	Identifier	SIGINT		4788722	0					
ANR	4788862	Argument	upd_signal_handler		4788722	1					
ANR	4788863	Identifier	upd_signal_handler		4788722	0					
ANR	4788864	ExpressionStatement	"oldterm = signal ( SIGTERM , upd_signal_handler )"	1065:3:48303:48347	4788722	18	True				
ANR	4788865	AssignmentExpression	"oldterm = signal ( SIGTERM , upd_signal_handler )"		4788722	0		=			
ANR	4788866	Identifier	oldterm		4788722	0					
ANR	4788867	CallExpression	"signal ( SIGTERM , upd_signal_handler )"		4788722	1					
ANR	4788868	Callee	signal		4788722	0					
ANR	4788869	Identifier	signal		4788722	0					
ANR	4788870	ArgumentList	SIGTERM		4788722	1					
ANR	4788871	Argument	SIGTERM		4788722	0					
ANR	4788872	Identifier	SIGTERM		4788722	0					
ANR	4788873	Argument	upd_signal_handler		4788722	1					
ANR	4788874	Identifier	upd_signal_handler		4788722	0					
ANR	4788875	IfStatement	if ( ! ( upd -> flags & B_OPEN ) )		4788722	19					
ANR	4788876	Condition	! ( upd -> flags & B_OPEN )	1071:6:48481:48502	4788722	0	True				
ANR	4788877	UnaryOperationExpression	! ( upd -> flags & B_OPEN )		4788722	0					
ANR	4788878	UnaryOperator	!		4788722	0					
ANR	4788879	BitAndExpression	upd -> flags & B_OPEN		4788722	1		&			
ANR	4788880	PtrMemberAccess	upd -> flags		4788722	0					
ANR	4788881	Identifier	upd		4788722	0					
ANR	4788882	Identifier	flags		4788722	1					
ANR	4788883	Identifier	B_OPEN		4788722	1					
ANR	4788884	CompoundStatement		39:30:1258:1258	4788722	1					
ANR	4788885	IfStatement	if ( 0 < upd -> strings [ S_OPEN ] . size )		4788722	0					
ANR	4788886	Condition	0 < upd -> strings [ S_OPEN ] . size	1073:9:48517:48548	4788722	0	True				
ANR	4788887	RelationalExpression	0 < upd -> strings [ S_OPEN ] . size		4788722	0		<			
ANR	4788888	PrimaryExpression	0		4788722	0					
ANR	4788889	MemberAccess	upd -> strings [ S_OPEN ] . size		4788722	1					
ANR	4788890	ArrayIndexing	upd -> strings [ S_OPEN ]		4788722	0					
ANR	4788891	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4788892	Identifier	upd		4788722	0					
ANR	4788893	Identifier	strings		4788722	1					
ANR	4788894	Identifier	S_OPEN		4788722	1					
ANR	4788895	Identifier	size		4788722	1					
ANR	4788896	ExpressionStatement	"fwrite ( upd -> strings [ S_OPEN ] . data , 1 , upd -> strings [ S_OPEN ] . size , out )"	1074:9:48560:48625	4788722	1	True				
ANR	4788897	CallExpression	"fwrite ( upd -> strings [ S_OPEN ] . data , 1 , upd -> strings [ S_OPEN ] . size , out )"		4788722	0					
ANR	4788898	Callee	fwrite		4788722	0					
ANR	4788899	Identifier	fwrite		4788722	0					
ANR	4788900	ArgumentList	upd -> strings [ S_OPEN ] . data		4788722	1					
ANR	4788901	Argument	upd -> strings [ S_OPEN ] . data		4788722	0					
ANR	4788902	MemberAccess	upd -> strings [ S_OPEN ] . data		4788722	0					
ANR	4788903	ArrayIndexing	upd -> strings [ S_OPEN ]		4788722	0					
ANR	4788904	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4788905	Identifier	upd		4788722	0					
ANR	4788906	Identifier	strings		4788722	1					
ANR	4788907	Identifier	S_OPEN		4788722	1					
ANR	4788908	Identifier	data		4788722	1					
ANR	4788909	Argument	1		4788722	1					
ANR	4788910	PrimaryExpression	1		4788722	0					
ANR	4788911	Argument	upd -> strings [ S_OPEN ] . size		4788722	2					
ANR	4788912	MemberAccess	upd -> strings [ S_OPEN ] . size		4788722	0					
ANR	4788913	ArrayIndexing	upd -> strings [ S_OPEN ]		4788722	0					
ANR	4788914	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4788915	Identifier	upd		4788722	0					
ANR	4788916	Identifier	strings		4788722	1					
ANR	4788917	Identifier	S_OPEN		4788722	1					
ANR	4788918	Identifier	size		4788722	1					
ANR	4788919	Argument	out		4788722	3					
ANR	4788920	Identifier	out		4788722	0					
ANR	4788921	ExpressionStatement	upd -> flags |= B_OPEN	1075:6:48633:48653	4788722	1	True				
ANR	4788922	AssignmentExpression	upd -> flags |= B_OPEN		4788722	0		|=			
ANR	4788923	PtrMemberAccess	upd -> flags		4788722	0					
ANR	4788924	Identifier	upd		4788722	0					
ANR	4788925	Identifier	flags		4788722	1					
ANR	4788926	Identifier	B_OPEN		4788722	1					
ANR	4788927	IfStatement	if ( 0 < upd -> strings [ S_BEGIN ] . size )		4788722	20					
ANR	4788928	Condition	0 < upd -> strings [ S_BEGIN ] . size	1080:6:48717:48749	4788722	0	True				
ANR	4788929	RelationalExpression	0 < upd -> strings [ S_BEGIN ] . size		4788722	0		<			
ANR	4788930	PrimaryExpression	0		4788722	0					
ANR	4788931	MemberAccess	upd -> strings [ S_BEGIN ] . size		4788722	1					
ANR	4788932	ArrayIndexing	upd -> strings [ S_BEGIN ]		4788722	0					
ANR	4788933	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4788934	Identifier	upd		4788722	0					
ANR	4788935	Identifier	strings		4788722	1					
ANR	4788936	Identifier	S_BEGIN		4788722	1					
ANR	4788937	Identifier	size		4788722	1					
ANR	4788938	ExpressionStatement	"fwrite ( upd -> strings [ S_BEGIN ] . data , 1 , upd -> strings [ S_BEGIN ] . size , out )"	1081:6:48758:48825	4788722	1	True				
ANR	4788939	CallExpression	"fwrite ( upd -> strings [ S_BEGIN ] . data , 1 , upd -> strings [ S_BEGIN ] . size , out )"		4788722	0					
ANR	4788940	Callee	fwrite		4788722	0					
ANR	4788941	Identifier	fwrite		4788722	0					
ANR	4788942	ArgumentList	upd -> strings [ S_BEGIN ] . data		4788722	1					
ANR	4788943	Argument	upd -> strings [ S_BEGIN ] . data		4788722	0					
ANR	4788944	MemberAccess	upd -> strings [ S_BEGIN ] . data		4788722	0					
ANR	4788945	ArrayIndexing	upd -> strings [ S_BEGIN ]		4788722	0					
ANR	4788946	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4788947	Identifier	upd		4788722	0					
ANR	4788948	Identifier	strings		4788722	1					
ANR	4788949	Identifier	S_BEGIN		4788722	1					
ANR	4788950	Identifier	data		4788722	1					
ANR	4788951	Argument	1		4788722	1					
ANR	4788952	PrimaryExpression	1		4788722	0					
ANR	4788953	Argument	upd -> strings [ S_BEGIN ] . size		4788722	2					
ANR	4788954	MemberAccess	upd -> strings [ S_BEGIN ] . size		4788722	0					
ANR	4788955	ArrayIndexing	upd -> strings [ S_BEGIN ]		4788722	0					
ANR	4788956	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4788957	Identifier	upd		4788722	0					
ANR	4788958	Identifier	strings		4788722	1					
ANR	4788959	Identifier	S_BEGIN		4788722	1					
ANR	4788960	Identifier	size		4788722	1					
ANR	4788961	Argument	out		4788722	3					
ANR	4788962	Identifier	out		4788722	0					
ANR	4788963	ExpressionStatement	upd -> xprinter = 0	1087:3:48882:48900	4788722	21	True				
ANR	4788964	AssignmentExpression	upd -> xprinter = 0		4788722	0		=			
ANR	4788965	PtrMemberAccess	upd -> xprinter		4788722	0					
ANR	4788966	Identifier	upd		4788722	0					
ANR	4788967	Identifier	xprinter		4788722	1					
ANR	4788968	PrimaryExpression	0		4788722	1					
ANR	4788969	ExpressionStatement	upd -> yscan = 0	1088:3:48905:48923	4788722	22	True				
ANR	4788970	AssignmentExpression	upd -> yscan = 0		4788722	0		=			
ANR	4788971	PtrMemberAccess	upd -> yscan		4788722	0					
ANR	4788972	Identifier	upd		4788722	0					
ANR	4788973	Identifier	yscan		4788722	1					
ANR	4788974	PrimaryExpression	0		4788722	1					
ANR	4788975	ExpressionStatement	upd -> yprinter = 0	1089:3:48961:48979	4788722	23	True				
ANR	4788976	AssignmentExpression	upd -> yprinter = 0		4788722	0		=			
ANR	4788977	PtrMemberAccess	upd -> yprinter		4788722	0					
ANR	4788978	Identifier	upd		4788722	0					
ANR	4788979	Identifier	yprinter		4788722	1					
ANR	4788980	PrimaryExpression	0		4788722	1					
ANR	4788981	ExpressionStatement	upd -> yscnbuf = 0	1090:3:49015:49033	4788722	24	True				
ANR	4788982	AssignmentExpression	upd -> yscnbuf = 0		4788722	0		=			
ANR	4788983	PtrMemberAccess	upd -> yscnbuf		4788722	0					
ANR	4788984	Identifier	upd		4788722	0					
ANR	4788985	Identifier	yscnbuf		4788722	1					
ANR	4788986	PrimaryExpression	0		4788722	1					
ANR	4788987	IfStatement	if ( upd -> start_render )		4788722	25					
ANR	4788988	Condition	upd -> start_render	1093:6:49116:49132	4788722	0	True				
ANR	4788989	PtrMemberAccess	upd -> start_render		4788722	0					
ANR	4788990	Identifier	upd		4788722	0					
ANR	4788991	Identifier	start_render		4788722	1					
ANR	4788992	ExpressionStatement	( * upd -> start_render ) ( upd )	1093:25:49135:49160	4788722	1	True				
ANR	4788993	CallExpression	( * upd -> start_render ) ( upd )		4788722	0					
ANR	4788994	Callee	* upd -> start_render		4788722	0					
ANR	4788995	UnaryOperationExpression	* upd -> start_render		4788722	0					
ANR	4788996	UnaryOperator	*		4788722	0					
ANR	4788997	PtrMemberAccess	upd -> start_render		4788722	1					
ANR	4788998	Identifier	upd		4788722	0					
ANR	4788999	Identifier	start_render		4788722	1					
ANR	4789000	ArgumentList	upd		4788722	1					
ANR	4789001	Argument	upd		4788722	0					
ANR	4789002	Identifier	upd		4788722	0					
ANR	4789003	IfStatement	if ( upd -> start_writer )		4788722	26					
ANR	4789004	Condition	upd -> start_writer	1094:6:49168:49184	4788722	0	True				
ANR	4789005	PtrMemberAccess	upd -> start_writer		4788722	0					
ANR	4789006	Identifier	upd		4788722	0					
ANR	4789007	Identifier	start_writer		4788722	1					
ANR	4789008	ExpressionStatement	"( * upd -> start_writer ) ( upd , out )"	1094:25:49187:49216	4788722	1	True				
ANR	4789009	CallExpression	"( * upd -> start_writer ) ( upd , out )"		4788722	0					
ANR	4789010	Callee	* upd -> start_writer		4788722	0					
ANR	4789011	UnaryOperationExpression	* upd -> start_writer		4788722	0					
ANR	4789012	UnaryOperator	*		4788722	0					
ANR	4789013	PtrMemberAccess	upd -> start_writer		4788722	1					
ANR	4789014	Identifier	upd		4788722	0					
ANR	4789015	Identifier	start_writer		4788722	1					
ANR	4789016	ArgumentList	upd		4788722	1					
ANR	4789017	Argument	upd		4788722	0					
ANR	4789018	Identifier	upd		4788722	0					
ANR	4789019	Argument	out		4788722	1					
ANR	4789020	Identifier	out		4788722	0					
ANR	4789021	ExpressionStatement	need = ints [ I_NYPASS ] * ints [ I_PINS2WRITE ]	1097:3:49260:49302	4788722	27	True				
ANR	4789022	AssignmentExpression	need = ints [ I_NYPASS ] * ints [ I_PINS2WRITE ]		4788722	0		=			
ANR	4789023	Identifier	need		4788722	0					
ANR	4789024	MultiplicativeExpression	ints [ I_NYPASS ] * ints [ I_PINS2WRITE ]		4788722	1		*			
ANR	4789025	ArrayIndexing	ints [ I_NYPASS ]		4788722	0					
ANR	4789026	Identifier	ints		4788722	0					
ANR	4789027	Identifier	I_NYPASS		4788722	1					
ANR	4789028	ArrayIndexing	ints [ I_PINS2WRITE ]		4788722	1					
ANR	4789029	Identifier	ints		4788722	0					
ANR	4789030	Identifier	I_PINS2WRITE		4788722	1					
ANR	4789031	IfStatement	if ( 0 >= need )		4788722	28					
ANR	4789032	Condition	0 >= need	1098:6:49310:49318	4788722	0	True				
ANR	4789033	RelationalExpression	0 >= need		4788722	0		>=			
ANR	4789034	PrimaryExpression	0		4788722	0					
ANR	4789035	Identifier	need		4788722	1					
ANR	4789036	ExpressionStatement	need = 1	1098:17:49321:49329	4788722	1	True				
ANR	4789037	AssignmentExpression	need = 1		4788722	0		=			
ANR	4789038	Identifier	need		4788722	0					
ANR	4789039	PrimaryExpression	1		4788722	1					
ANR	4789040	ExpressionStatement	upd -> ipass = 0	1101:3:49360:49376	4788722	29	True				
ANR	4789041	AssignmentExpression	upd -> ipass = 0		4788722	0		=			
ANR	4789042	PtrMemberAccess	upd -> ipass		4788722	0					
ANR	4789043	Identifier	upd		4788722	0					
ANR	4789044	Identifier	ipass		4788722	1					
ANR	4789045	PrimaryExpression	0		4788722	1					
ANR	4789046	ExpressionStatement	upd -> ixpass = 0	1102:3:49381:49397	4788722	30	True				
ANR	4789047	AssignmentExpression	upd -> ixpass = 0		4788722	0		=			
ANR	4789048	PtrMemberAccess	upd -> ixpass		4788722	0					
ANR	4789049	Identifier	upd		4788722	0					
ANR	4789050	Identifier	ixpass		4788722	1					
ANR	4789051	PrimaryExpression	0		4788722	1					
ANR	4789052	ExpressionStatement	upd -> icomp = - 1	1103:3:49402:49418	4788722	31	True				
ANR	4789053	AssignmentExpression	upd -> icomp = - 1		4788722	0		=			
ANR	4789054	PtrMemberAccess	upd -> icomp		4788722	0					
ANR	4789055	Identifier	upd		4788722	0					
ANR	4789056	Identifier	icomp		4788722	1					
ANR	4789057	UnaryOperationExpression	- 1		4788722	1					
ANR	4789058	UnaryOperator	-		4788722	0					
ANR	4789059	PrimaryExpression	1		4788722	1					
ANR	4789060	ExpressionStatement	upd -> lf = - 1	1104:3:49456:49472	4788722	32	True				
ANR	4789061	AssignmentExpression	upd -> lf = - 1		4788722	0		=			
ANR	4789062	PtrMemberAccess	upd -> lf		4788722	0					
ANR	4789063	Identifier	upd		4788722	0					
ANR	4789064	Identifier	lf		4788722	1					
ANR	4789065	UnaryOperationExpression	- 1		4788722	1					
ANR	4789066	UnaryOperator	-		4788722	0					
ANR	4789067	PrimaryExpression	1		4788722	1					
ANR	4789068	WhileStatement	while ( upd -> pheight > upd -> yscan )		4788722	33					
ANR	4789069	Condition	upd -> pheight > upd -> yscan	1108:9:49536:49560	4788722	0	True				
ANR	4789070	RelationalExpression	upd -> pheight > upd -> yscan		4788722	0		>			
ANR	4789071	PtrMemberAccess	upd -> pheight		4788722	0					
ANR	4789072	Identifier	upd		4788722	0					
ANR	4789073	Identifier	pheight		4788722	1					
ANR	4789074	PtrMemberAccess	upd -> yscan		4788722	1					
ANR	4789075	Identifier	upd		4788722	0					
ANR	4789076	Identifier	yscan		4788722	1					
ANR	4789077	CompoundStatement		76:36:2316:2316	4788722	1					
ANR	4789078	IfStatement	if ( ints [ I_BEGSKIP ] > upd -> yscan )		4788722	0					
ANR	4789079	Condition	ints [ I_BEGSKIP ] > upd -> yscan	1114:9:49724:49751	4788722	0	True				
ANR	4789080	RelationalExpression	ints [ I_BEGSKIP ] > upd -> yscan		4788722	0		>			
ANR	4789081	ArrayIndexing	ints [ I_BEGSKIP ]		4788722	0					
ANR	4789082	Identifier	ints		4788722	0					
ANR	4789083	Identifier	I_BEGSKIP		4788722	1					
ANR	4789084	PtrMemberAccess	upd -> yscan		4788722	1					
ANR	4789085	Identifier	upd		4788722	0					
ANR	4789086	Identifier	yscan		4788722	1					
ANR	4789087	ExpressionStatement	yfill = 0	1114:39:49754:49763	4788722	1	True				
ANR	4789088	AssignmentExpression	yfill = 0		4788722	0		=			
ANR	4789089	Identifier	yfill		4788722	0					
ANR	4789090	PrimaryExpression	0		4788722	1					
ANR	4789091	ElseStatement	else		4788722	0					
ANR	4789092	ExpressionStatement	yfill = upd -> yscan - ints [ I_BEGSKIP ]	1115:39:49804:49840	4788722	0	True				
ANR	4789093	AssignmentExpression	yfill = upd -> yscan - ints [ I_BEGSKIP ]		4788722	0		=			
ANR	4789094	Identifier	yfill		4788722	0					
ANR	4789095	AdditiveExpression	upd -> yscan - ints [ I_BEGSKIP ]		4788722	1		-			
ANR	4789096	PtrMemberAccess	upd -> yscan		4788722	0					
ANR	4789097	Identifier	upd		4788722	0					
ANR	4789098	Identifier	yscan		4788722	1					
ANR	4789099	ArrayIndexing	ints [ I_BEGSKIP ]		4788722	1					
ANR	4789100	Identifier	ints		4788722	0					
ANR	4789101	Identifier	I_BEGSKIP		4788722	1					
ANR	4789102	ForStatement	for ( yfill += upd -> nscnbuf ; upd -> yscnbuf < yfill ; upd -> yscnbuf ++ )		4788722	1					
ANR	4789103	ForInit	yfill += upd -> nscnbuf ;	1117:10:49853:49874	4788722	0	True				
ANR	4789104	AssignmentExpression	yfill += upd -> nscnbuf		4788722	0		+=			
ANR	4789105	Identifier	yfill		4788722	0					
ANR	4789106	PtrMemberAccess	upd -> nscnbuf		4788722	1					
ANR	4789107	Identifier	upd		4788722	0					
ANR	4789108	Identifier	nscnbuf		4788722	1					
ANR	4789109	Condition	upd -> yscnbuf < yfill	1117:33:49876:49895	4788722	1	True				
ANR	4789110	RelationalExpression	upd -> yscnbuf < yfill		4788722	0		<			
ANR	4789111	PtrMemberAccess	upd -> yscnbuf		4788722	0					
ANR	4789112	Identifier	upd		4788722	0					
ANR	4789113	Identifier	yscnbuf		4788722	1					
ANR	4789114	Identifier	yfill		4788722	1					
ANR	4789115	PostIncDecOperationExpression	upd -> yscnbuf ++	1117:55:49898:49911	4788722	2	True				
ANR	4789116	PtrMemberAccess	upd -> yscnbuf		4788722	0					
ANR	4789117	Identifier	upd		4788722	0					
ANR	4789118	Identifier	yscnbuf		4788722	1					
ANR	4789119	IncDec	++		4788722	1					
ANR	4789120	CompoundStatement		85:71:2667:2667	4788722	3					
ANR	4789121	IfStatement	if ( upd -> gsheight > upd -> yscnbuf )		4788722	0					
ANR	4789122	Condition	upd -> gsheight > upd -> yscnbuf	1119:12:49929:49956	4788722	0	True				
ANR	4789123	RelationalExpression	upd -> gsheight > upd -> yscnbuf		4788722	0		>			
ANR	4789124	PtrMemberAccess	upd -> gsheight		4788722	0					
ANR	4789125	Identifier	upd		4788722	0					
ANR	4789126	Identifier	gsheight		4788722	1					
ANR	4789127	PtrMemberAccess	upd -> yscnbuf		4788722	1					
ANR	4789128	Identifier	upd		4788722	0					
ANR	4789129	Identifier	yscnbuf		4788722	1					
ANR	4789130	CompoundStatement		87:43:2713:2713	4788722	1					
ANR	4789131	IfStatement	"if ( 0 > ( * dev_proc ( udev , get_bits ) ) ( ( gx_device * ) udev , upd -> yscnbuf , upd -> gsbuf , & upd -> gsscan ) )"		4788722	0					
ANR	4789132	Condition	"0 > ( * dev_proc ( udev , get_bits ) ) ( ( gx_device * ) udev , upd -> yscnbuf , upd -> gsbuf , & upd -> gsscan )"	1121:15:49978:50100	4788722	0	True				
ANR	4789133	RelationalExpression	"0 > ( * dev_proc ( udev , get_bits ) ) ( ( gx_device * ) udev , upd -> yscnbuf , upd -> gsbuf , & upd -> gsscan )"		4788722	0		>			
ANR	4789134	PrimaryExpression	0		4788722	0					
ANR	4789135	CallExpression	"( * dev_proc ( udev , get_bits ) ) ( ( gx_device * ) udev , upd -> yscnbuf , upd -> gsbuf , & upd -> gsscan )"		4788722	1					
ANR	4789136	Callee	"* dev_proc ( udev , get_bits )"		4788722	0					
ANR	4789137	UnaryOperationExpression	"* dev_proc ( udev , get_bits )"		4788722	0					
ANR	4789138	UnaryOperator	*		4788722	0					
ANR	4789139	CallExpression	"dev_proc ( udev , get_bits )"		4788722	1					
ANR	4789140	Callee	dev_proc		4788722	0					
ANR	4789141	Identifier	dev_proc		4788722	0					
ANR	4789142	ArgumentList	udev		4788722	1					
ANR	4789143	Argument	udev		4788722	0					
ANR	4789144	Identifier	udev		4788722	0					
ANR	4789145	Argument	get_bits		4788722	1					
ANR	4789146	Identifier	get_bits		4788722	0					
ANR	4789147	ArgumentList	( gx_device * ) udev		4788722	1					
ANR	4789148	Argument	( gx_device * ) udev		4788722	0					
ANR	4789149	CastExpression	( gx_device * ) udev		4788722	0					
ANR	4789150	CastTarget	gx_device *		4788722	0					
ANR	4789151	Identifier	udev		4788722	1					
ANR	4789152	Argument	upd -> yscnbuf		4788722	1					
ANR	4789153	PtrMemberAccess	upd -> yscnbuf		4788722	0					
ANR	4789154	Identifier	upd		4788722	0					
ANR	4789155	Identifier	yscnbuf		4788722	1					
ANR	4789156	Argument	upd -> gsbuf		4788722	2					
ANR	4789157	PtrMemberAccess	upd -> gsbuf		4788722	0					
ANR	4789158	Identifier	upd		4788722	0					
ANR	4789159	Identifier	gsbuf		4788722	1					
ANR	4789160	Argument	& upd -> gsscan		4788722	3					
ANR	4789161	UnaryOperationExpression	& upd -> gsscan		4788722	0					
ANR	4789162	UnaryOperator	&		4788722	0					
ANR	4789163	PtrMemberAccess	upd -> gsscan		4788722	1					
ANR	4789164	Identifier	upd		4788722	0					
ANR	4789165	Identifier	gsscan		4788722	1					
ANR	4789166	CompoundStatement		90:74:2856:2856	4788722	1					
ANR	4789167	ExpressionStatement	"errprintf ( udev -> memory , ""get_bits aborted with error, yscnbuf = %4d\\n"" , upd -> yscnbuf )"	1124:15:50153:50263	4788722	0	True				
ANR	4789168	CallExpression	"errprintf ( udev -> memory , ""get_bits aborted with error, yscnbuf = %4d\\n"" , upd -> yscnbuf )"		4788722	0					
ANR	4789169	Callee	errprintf		4788722	0					
ANR	4789170	Identifier	errprintf		4788722	0					
ANR	4789171	ArgumentList	udev -> memory		4788722	1					
ANR	4789172	Argument	udev -> memory		4788722	0					
ANR	4789173	PtrMemberAccess	udev -> memory		4788722	0					
ANR	4789174	Identifier	udev		4788722	0					
ANR	4789175	Identifier	memory		4788722	1					
ANR	4789176	Argument	"""get_bits aborted with error, yscnbuf = %4d\\n"""		4788722	1					
ANR	4789177	PrimaryExpression	"""get_bits aborted with error, yscnbuf = %4d\\n"""		4788722	0					
ANR	4789178	Argument	upd -> yscnbuf		4788722	2					
ANR	4789179	PtrMemberAccess	upd -> yscnbuf		4788722	0					
ANR	4789180	Identifier	upd		4788722	0					
ANR	4789181	Identifier	yscnbuf		4788722	1					
ANR	4789182	BreakStatement	break ;	1127:15:50287:50292	4788722	1	True				
ANR	4789183	ElseStatement	else		4788722	0					
ANR	4789184	CompoundStatement		97:16:3077:3077	4788722	0					
ANR	4789185	ExpressionStatement	"memset ( upd -> gsscan = upd -> gsbuf , 0 , upd -> ngsbuf )"	1131:12:50339:50385	4788722	0	True				
ANR	4789186	CallExpression	"memset ( upd -> gsscan = upd -> gsbuf , 0 , upd -> ngsbuf )"		4788722	0					
ANR	4789187	Callee	memset		4788722	0					
ANR	4789188	Identifier	memset		4788722	0					
ANR	4789189	ArgumentList	upd -> gsscan = upd -> gsbuf		4788722	1					
ANR	4789190	Argument	upd -> gsscan = upd -> gsbuf		4788722	0					
ANR	4789191	AssignmentExpression	upd -> gsscan = upd -> gsbuf		4788722	0		=			
ANR	4789192	PtrMemberAccess	upd -> gsscan		4788722	0					
ANR	4789193	Identifier	upd		4788722	0					
ANR	4789194	Identifier	gsscan		4788722	1					
ANR	4789195	PtrMemberAccess	upd -> gsbuf		4788722	1					
ANR	4789196	Identifier	upd		4788722	0					
ANR	4789197	Identifier	gsbuf		4788722	1					
ANR	4789198	Argument	0		4788722	1					
ANR	4789199	PrimaryExpression	0		4788722	0					
ANR	4789200	Argument	upd -> ngsbuf		4788722	2					
ANR	4789201	PtrMemberAccess	upd -> ngsbuf		4788722	0					
ANR	4789202	Identifier	upd		4788722	0					
ANR	4789203	Identifier	ngsbuf		4788722	1					
ANR	4789204	IfStatement	if ( 0 > ( * upd -> render ) ( upd ) )		4788722	1					
ANR	4789205	Condition	0 > ( * upd -> render ) ( upd )	1135:12:50412:50434	4788722	0	True				
ANR	4789206	RelationalExpression	0 > ( * upd -> render ) ( upd )		4788722	0		>			
ANR	4789207	PrimaryExpression	0		4788722	0					
ANR	4789208	CallExpression	( * upd -> render ) ( upd )		4788722	1					
ANR	4789209	Callee	* upd -> render		4788722	0					
ANR	4789210	UnaryOperationExpression	* upd -> render		4788722	0					
ANR	4789211	UnaryOperator	*		4788722	0					
ANR	4789212	PtrMemberAccess	upd -> render		4788722	1					
ANR	4789213	Identifier	upd		4788722	0					
ANR	4789214	Identifier	render		4788722	1					
ANR	4789215	ArgumentList	upd		4788722	1					
ANR	4789216	Argument	upd		4788722	0					
ANR	4789217	Identifier	upd		4788722	0					
ANR	4789218	CompoundStatement		103:37:3190:3190	4788722	1					
ANR	4789219	ExpressionStatement	"errprintf ( udev -> memory , ""Rendering aborted with error, yscnbuf = %4d\\n"" , upd -> yscnbuf )"	1137:12:50484:50585	4788722	0	True				
ANR	4789220	CallExpression	"errprintf ( udev -> memory , ""Rendering aborted with error, yscnbuf = %4d\\n"" , upd -> yscnbuf )"		4788722	0					
ANR	4789221	Callee	errprintf		4788722	0					
ANR	4789222	Identifier	errprintf		4788722	0					
ANR	4789223	ArgumentList	udev -> memory		4788722	1					
ANR	4789224	Argument	udev -> memory		4788722	0					
ANR	4789225	PtrMemberAccess	udev -> memory		4788722	0					
ANR	4789226	Identifier	udev		4788722	0					
ANR	4789227	Identifier	memory		4788722	1					
ANR	4789228	Argument	"""Rendering aborted with error, yscnbuf = %4d\\n"""		4788722	1					
ANR	4789229	PrimaryExpression	"""Rendering aborted with error, yscnbuf = %4d\\n"""		4788722	0					
ANR	4789230	Argument	upd -> yscnbuf		4788722	2					
ANR	4789231	PtrMemberAccess	upd -> yscnbuf		4788722	0					
ANR	4789232	Identifier	upd		4788722	0					
ANR	4789233	Identifier	yscnbuf		4788722	1					
ANR	4789234	BreakStatement	break ;	1140:12:50606:50611	4788722	1	True				
ANR	4789235	IfStatement	if ( ( upd -> yscnbuf ^ yfill ) & upd -> scnmsk )		4788722	2					
ANR	4789236	Condition	( upd -> yscnbuf ^ yfill ) & upd -> scnmsk	1147:9:50699:50734	4788722	0	True				
ANR	4789237	BitAndExpression	( upd -> yscnbuf ^ yfill ) & upd -> scnmsk		4788722	0		&			
ANR	4789238	ExclusiveOrExpression	upd -> yscnbuf ^ yfill		4788722	0		^			
ANR	4789239	PtrMemberAccess	upd -> yscnbuf		4788722	0					
ANR	4789240	Identifier	upd		4788722	0					
ANR	4789241	Identifier	yscnbuf		4788722	1					
ANR	4789242	Identifier	yfill		4788722	1					
ANR	4789243	PtrMemberAccess	upd -> scnmsk		4788722	1					
ANR	4789244	Identifier	upd		4788722	0					
ANR	4789245	Identifier	scnmsk		4788722	1					
ANR	4789246	BreakStatement	break ;	1147:47:50737:50742	4788722	1	True				
ANR	4789247	WhileStatement	while ( ( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf )		4788722	3					
ANR	4789248	Condition	( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf	1151:12:50795:50846	4788722	0	True				
ANR	4789249	RelationalExpression	( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf		4788722	0		<			
ANR	4789250	AdditiveExpression	upd -> yscan - ints [ I_BEGSKIP ] + need		4788722	0		-			
ANR	4789251	PtrMemberAccess	upd -> yscan		4788722	0					
ANR	4789252	Identifier	upd		4788722	0					
ANR	4789253	Identifier	yscan		4788722	1					
ANR	4789254	AdditiveExpression	ints [ I_BEGSKIP ] + need		4788722	1		+			
ANR	4789255	ArrayIndexing	ints [ I_BEGSKIP ]		4788722	0					
ANR	4789256	Identifier	ints		4788722	0					
ANR	4789257	Identifier	I_BEGSKIP		4788722	1					
ANR	4789258	Identifier	need		4788722	1					
ANR	4789259	PtrMemberAccess	upd -> yscnbuf		4788722	1					
ANR	4789260	Identifier	upd		4788722	0					
ANR	4789261	Identifier	yscnbuf		4788722	1					
ANR	4789262	CompoundStatement		119:66:3602:3602	4788722	1					
ANR	4789263	ExpressionStatement	"( * upd -> writer ) ( upd , out )"	1154:10:50899:50922	4788722	0	True				
ANR	4789264	CallExpression	"( * upd -> writer ) ( upd , out )"		4788722	0					
ANR	4789265	Callee	* upd -> writer		4788722	0					
ANR	4789266	UnaryOperationExpression	* upd -> writer		4788722	0					
ANR	4789267	UnaryOperator	*		4788722	0					
ANR	4789268	PtrMemberAccess	upd -> writer		4788722	1					
ANR	4789269	Identifier	upd		4788722	0					
ANR	4789270	Identifier	writer		4788722	1					
ANR	4789271	ArgumentList	upd		4788722	1					
ANR	4789272	Argument	upd		4788722	0					
ANR	4789273	Identifier	upd		4788722	0					
ANR	4789274	Argument	out		4788722	1					
ANR	4789275	Identifier	out		4788722	0					
ANR	4789276	IfStatement	if ( upd -> yscan >= upd -> pheight )		4788722	1					
ANR	4789277	Condition	upd -> yscan >= upd -> pheight	1157:13:50973:50998	4788722	0	True				
ANR	4789278	RelationalExpression	upd -> yscan >= upd -> pheight		4788722	0		>=			
ANR	4789279	PtrMemberAccess	upd -> yscan		4788722	0					
ANR	4789280	Identifier	upd		4788722	0					
ANR	4789281	Identifier	yscan		4788722	1					
ANR	4789282	PtrMemberAccess	upd -> pheight		4788722	1					
ANR	4789283	Identifier	upd		4788722	0					
ANR	4789284	Identifier	pheight		4788722	1					
ANR	4789285	BreakStatement	break ;	1157:41:51001:51006	4788722	1	True				
ANR	4789286	IfStatement	if ( upd -> flags & B_ABORT )		4788722	2					
ANR	4789287	Condition	upd -> flags & B_ABORT	1158:13:51021:51041	4788722	0	True				
ANR	4789288	BitAndExpression	upd -> flags & B_ABORT		4788722	0		&			
ANR	4789289	PtrMemberAccess	upd -> flags		4788722	0					
ANR	4789290	Identifier	upd		4788722	0					
ANR	4789291	Identifier	flags		4788722	1					
ANR	4789292	Identifier	B_ABORT		4788722	1					
ANR	4789293	CompoundStatement		126:37:3798:3798	4788722	1					
ANR	4789294	ExpressionStatement	"errprintf ( udev -> memory , ""Printing aborted upon interrupt, yscan = %4d\\n"" , upd -> yscan )"	1160:13:51093:51194	4788722	0	True				
ANR	4789295	CallExpression	"errprintf ( udev -> memory , ""Printing aborted upon interrupt, yscan = %4d\\n"" , upd -> yscan )"		4788722	0					
ANR	4789296	Callee	errprintf		4788722	0					
ANR	4789297	Identifier	errprintf		4788722	0					
ANR	4789298	ArgumentList	udev -> memory		4788722	1					
ANR	4789299	Argument	udev -> memory		4788722	0					
ANR	4789300	PtrMemberAccess	udev -> memory		4788722	0					
ANR	4789301	Identifier	udev		4788722	0					
ANR	4789302	Identifier	memory		4788722	1					
ANR	4789303	Argument	"""Printing aborted upon interrupt, yscan = %4d\\n"""		4788722	1					
ANR	4789304	PrimaryExpression	"""Printing aborted upon interrupt, yscan = %4d\\n"""		4788722	0					
ANR	4789305	Argument	upd -> yscan		4788722	2					
ANR	4789306	PtrMemberAccess	upd -> yscan		4788722	0					
ANR	4789307	Identifier	upd		4788722	0					
ANR	4789308	Identifier	yscan		4788722	1					
ANR	4789309	BreakStatement	break ;	1163:13:51216:51221	4788722	1	True				
ANR	4789310	IfStatement	if ( ( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf )		4788722	4					
ANR	4789311	Condition	( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf	1169:9:51305:51356	4788722	0	True				
ANR	4789312	RelationalExpression	( upd -> yscan - ints [ I_BEGSKIP ] + need ) < upd -> yscnbuf		4788722	0		<			
ANR	4789313	AdditiveExpression	upd -> yscan - ints [ I_BEGSKIP ] + need		4788722	0		-			
ANR	4789314	PtrMemberAccess	upd -> yscan		4788722	0					
ANR	4789315	Identifier	upd		4788722	0					
ANR	4789316	Identifier	yscan		4788722	1					
ANR	4789317	AdditiveExpression	ints [ I_BEGSKIP ] + need		4788722	1		+			
ANR	4789318	ArrayIndexing	ints [ I_BEGSKIP ]		4788722	0					
ANR	4789319	Identifier	ints		4788722	0					
ANR	4789320	Identifier	I_BEGSKIP		4788722	1					
ANR	4789321	Identifier	need		4788722	1					
ANR	4789322	PtrMemberAccess	upd -> yscnbuf		4788722	1					
ANR	4789323	Identifier	upd		4788722	0					
ANR	4789324	Identifier	yscnbuf		4788722	1					
ANR	4789325	BreakStatement	break ;	1169:63:51359:51364	4788722	1	True				
ANR	4789326	IfStatement	if ( ( upd -> pheight > upd -> yscan ) && ( 0 < upd -> strings [ S_ABORT ] . size ) )		4788722	34					
ANR	4789327	Condition	( upd -> pheight > upd -> yscan ) && ( 0 < upd -> strings [ S_ABORT ] . size )	1176:6:51496:51566	4788722	0	True				
ANR	4789328	AndExpression	( upd -> pheight > upd -> yscan ) && ( 0 < upd -> strings [ S_ABORT ] . size )		4788722	0		&&			
ANR	4789329	RelationalExpression	upd -> pheight > upd -> yscan		4788722	0		>			
ANR	4789330	PtrMemberAccess	upd -> pheight		4788722	0					
ANR	4789331	Identifier	upd		4788722	0					
ANR	4789332	Identifier	pheight		4788722	1					
ANR	4789333	PtrMemberAccess	upd -> yscan		4788722	1					
ANR	4789334	Identifier	upd		4788722	0					
ANR	4789335	Identifier	yscan		4788722	1					
ANR	4789336	RelationalExpression	0 < upd -> strings [ S_ABORT ] . size		4788722	1		<			
ANR	4789337	PrimaryExpression	0		4788722	0					
ANR	4789338	MemberAccess	upd -> strings [ S_ABORT ] . size		4788722	1					
ANR	4789339	ArrayIndexing	upd -> strings [ S_ABORT ]		4788722	0					
ANR	4789340	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4789341	Identifier	upd		4788722	0					
ANR	4789342	Identifier	strings		4788722	1					
ANR	4789343	Identifier	S_ABORT		4788722	1					
ANR	4789344	Identifier	size		4788722	1					
ANR	4789345	CompoundStatement		145:42:4322:4322	4788722	1					
ANR	4789346	ExpressionStatement	"fwrite ( upd -> strings [ S_ABORT ] . data , 1 , upd -> strings [ S_ABORT ] . size , out )"	1178:6:51594:51661	4788722	0	True				
ANR	4789347	CallExpression	"fwrite ( upd -> strings [ S_ABORT ] . data , 1 , upd -> strings [ S_ABORT ] . size , out )"		4788722	0					
ANR	4789348	Callee	fwrite		4788722	0					
ANR	4789349	Identifier	fwrite		4788722	0					
ANR	4789350	ArgumentList	upd -> strings [ S_ABORT ] . data		4788722	1					
ANR	4789351	Argument	upd -> strings [ S_ABORT ] . data		4788722	0					
ANR	4789352	MemberAccess	upd -> strings [ S_ABORT ] . data		4788722	0					
ANR	4789353	ArrayIndexing	upd -> strings [ S_ABORT ]		4788722	0					
ANR	4789354	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4789355	Identifier	upd		4788722	0					
ANR	4789356	Identifier	strings		4788722	1					
ANR	4789357	Identifier	S_ABORT		4788722	1					
ANR	4789358	Identifier	data		4788722	1					
ANR	4789359	Argument	1		4788722	1					
ANR	4789360	PrimaryExpression	1		4788722	0					
ANR	4789361	Argument	upd -> strings [ S_ABORT ] . size		4788722	2					
ANR	4789362	MemberAccess	upd -> strings [ S_ABORT ] . size		4788722	0					
ANR	4789363	ArrayIndexing	upd -> strings [ S_ABORT ]		4788722	0					
ANR	4789364	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4789365	Identifier	upd		4788722	0					
ANR	4789366	Identifier	strings		4788722	1					
ANR	4789367	Identifier	S_ABORT		4788722	1					
ANR	4789368	Identifier	size		4788722	1					
ANR	4789369	Argument	out		4788722	3					
ANR	4789370	Identifier	out		4788722	0					
ANR	4789371	ExpressionStatement	upd -> flags &= ~B_OPEN	1180:6:51670:51691	4788722	1	True				
ANR	4789372	AssignmentExpression	upd -> flags &= ~B_OPEN		4788722	0		&=			
ANR	4789373	PtrMemberAccess	upd -> flags		4788722	0					
ANR	4789374	Identifier	upd		4788722	0					
ANR	4789375	Identifier	flags		4788722	1					
ANR	4789376	Identifier	~B_OPEN		4788722	1					
ANR	4789377	ElseStatement	else		4788722	0					
ANR	4789378	IfStatement	if ( 0 < upd -> strings [ S_END ] . size )		4788722	0					
ANR	4789379	Condition	0 < upd -> strings [ S_END ] . size	1186:13:51844:51874	4788722	0	True				
ANR	4789380	RelationalExpression	0 < upd -> strings [ S_END ] . size		4788722	0		<			
ANR	4789381	PrimaryExpression	0		4788722	0					
ANR	4789382	MemberAccess	upd -> strings [ S_END ] . size		4788722	1					
ANR	4789383	ArrayIndexing	upd -> strings [ S_END ]		4788722	0					
ANR	4789384	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4789385	Identifier	upd		4788722	0					
ANR	4789386	Identifier	strings		4788722	1					
ANR	4789387	Identifier	S_END		4788722	1					
ANR	4789388	Identifier	size		4788722	1					
ANR	4789389	CompoundStatement		154:46:4630:4630	4788722	1					
ANR	4789390	ExpressionStatement	"fwrite ( upd -> strings [ S_END ] . data , 1 , upd -> strings [ S_END ] . size , out )"	1187:6:51885:51948	4788722	0	True				
ANR	4789391	CallExpression	"fwrite ( upd -> strings [ S_END ] . data , 1 , upd -> strings [ S_END ] . size , out )"		4788722	0					
ANR	4789392	Callee	fwrite		4788722	0					
ANR	4789393	Identifier	fwrite		4788722	0					
ANR	4789394	ArgumentList	upd -> strings [ S_END ] . data		4788722	1					
ANR	4789395	Argument	upd -> strings [ S_END ] . data		4788722	0					
ANR	4789396	MemberAccess	upd -> strings [ S_END ] . data		4788722	0					
ANR	4789397	ArrayIndexing	upd -> strings [ S_END ]		4788722	0					
ANR	4789398	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4789399	Identifier	upd		4788722	0					
ANR	4789400	Identifier	strings		4788722	1					
ANR	4789401	Identifier	S_END		4788722	1					
ANR	4789402	Identifier	data		4788722	1					
ANR	4789403	Argument	1		4788722	1					
ANR	4789404	PrimaryExpression	1		4788722	0					
ANR	4789405	Argument	upd -> strings [ S_END ] . size		4788722	2					
ANR	4789406	MemberAccess	upd -> strings [ S_END ] . size		4788722	0					
ANR	4789407	ArrayIndexing	upd -> strings [ S_END ]		4788722	0					
ANR	4789408	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4789409	Identifier	upd		4788722	0					
ANR	4789410	Identifier	strings		4788722	1					
ANR	4789411	Identifier	S_END		4788722	1					
ANR	4789412	Identifier	size		4788722	1					
ANR	4789413	Argument	out		4788722	3					
ANR	4789414	Identifier	out		4788722	0					
ANR	4789415	CompoundStatement		162:8:4809:4824	4788722	35					
ANR	4789416	IdentifierDeclStatement	gs_parsed_file_name_t parsed ;	1193:8:52018:52046	4788722	0	True				
ANR	4789417	IdentifierDecl	parsed		4788722	0					
ANR	4789418	IdentifierDeclType	gs_parsed_file_name_t		4788722	0					
ANR	4789419	Identifier	parsed		4788722	1					
ANR	4789420	IdentifierDeclStatement	const char * fmt ;	1194:8:52056:52071	4788722	1	True				
ANR	4789421	IdentifierDecl	* fmt		4788722	0					
ANR	4789422	IdentifierDeclType	const char *		4788722	0					
ANR	4789423	Identifier	fmt		4788722	1					
ANR	4789424	IfStatement	"if ( 0 <= gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory ) && fmt )"		4788722	2					
ANR	4789425	Condition	"0 <= gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory ) && fmt"	1196:12:52086:52240	4788722	0	True				
ANR	4789426	AndExpression	"0 <= gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory ) && fmt"		4788722	0		&&			
ANR	4789427	RelationalExpression	"0 <= gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory )"		4788722	0		<=			
ANR	4789428	PrimaryExpression	0		4788722	0					
ANR	4789429	CallExpression	"gx_parse_output_file_name ( & parsed , & fmt , udev -> fname , strlen ( udev -> fname ) , udev -> memory )"		4788722	1					
ANR	4789430	Callee	gx_parse_output_file_name		4788722	0					
ANR	4789431	Identifier	gx_parse_output_file_name		4788722	0					
ANR	4789432	ArgumentList	& parsed		4788722	1					
ANR	4789433	Argument	& parsed		4788722	0					
ANR	4789434	UnaryOperationExpression	& parsed		4788722	0					
ANR	4789435	UnaryOperator	&		4788722	0					
ANR	4789436	Identifier	parsed		4788722	1					
ANR	4789437	Argument	& fmt		4788722	1					
ANR	4789438	UnaryOperationExpression	& fmt		4788722	0					
ANR	4789439	UnaryOperator	&		4788722	0					
ANR	4789440	Identifier	fmt		4788722	1					
ANR	4789441	Argument	udev -> fname		4788722	2					
ANR	4789442	PtrMemberAccess	udev -> fname		4788722	0					
ANR	4789443	Identifier	udev		4788722	0					
ANR	4789444	Identifier	fname		4788722	1					
ANR	4789445	Argument	strlen ( udev -> fname )		4788722	3					
ANR	4789446	CallExpression	strlen ( udev -> fname )		4788722	0					
ANR	4789447	Callee	strlen		4788722	0					
ANR	4789448	Identifier	strlen		4788722	0					
ANR	4789449	ArgumentList	udev -> fname		4788722	1					
ANR	4789450	Argument	udev -> fname		4788722	0					
ANR	4789451	PtrMemberAccess	udev -> fname		4788722	0					
ANR	4789452	Identifier	udev		4788722	0					
ANR	4789453	Identifier	fname		4788722	1					
ANR	4789454	Argument	udev -> memory		4788722	4					
ANR	4789455	PtrMemberAccess	udev -> memory		4788722	0					
ANR	4789456	Identifier	udev		4788722	0					
ANR	4789457	Identifier	memory		4788722	1					
ANR	4789458	Identifier	fmt		4788722	1					
ANR	4789459	CompoundStatement		167:14:5009:5009	4788722	1					
ANR	4789460	IfStatement	if ( 0 < upd -> strings [ S_CLOSE ] . size )		4788722	0					
ANR	4789461	Condition	0 < upd -> strings [ S_CLOSE ] . size	1200:16:52274:52303	4788722	0	True				
ANR	4789462	RelationalExpression	0 < upd -> strings [ S_CLOSE ] . size		4788722	0		<			
ANR	4789463	PrimaryExpression	0		4788722	0					
ANR	4789464	MemberAccess	upd -> strings [ S_CLOSE ] . size		4788722	1					
ANR	4789465	ArrayIndexing	upd -> strings [ S_CLOSE ]		4788722	0					
ANR	4789466	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4789467	Identifier	upd		4788722	0					
ANR	4789468	Identifier	strings		4788722	1					
ANR	4789469	Identifier	S_CLOSE		4788722	1					
ANR	4789470	Identifier	size		4788722	1					
ANR	4789471	ExpressionStatement	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , out )"	1201:16:52322:52389	4788722	1	True				
ANR	4789472	CallExpression	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , out )"		4788722	0					
ANR	4789473	Callee	fwrite		4788722	0					
ANR	4789474	Identifier	fwrite		4788722	0					
ANR	4789475	ArgumentList	upd -> strings [ S_CLOSE ] . data		4788722	1					
ANR	4789476	Argument	upd -> strings [ S_CLOSE ] . data		4788722	0					
ANR	4789477	MemberAccess	upd -> strings [ S_CLOSE ] . data		4788722	0					
ANR	4789478	ArrayIndexing	upd -> strings [ S_CLOSE ]		4788722	0					
ANR	4789479	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4789480	Identifier	upd		4788722	0					
ANR	4789481	Identifier	strings		4788722	1					
ANR	4789482	Identifier	S_CLOSE		4788722	1					
ANR	4789483	Identifier	data		4788722	1					
ANR	4789484	Argument	1		4788722	1					
ANR	4789485	PrimaryExpression	1		4788722	0					
ANR	4789486	Argument	upd -> strings [ S_CLOSE ] . size		4788722	2					
ANR	4789487	MemberAccess	upd -> strings [ S_CLOSE ] . size		4788722	0					
ANR	4789488	ArrayIndexing	upd -> strings [ S_CLOSE ]		4788722	0					
ANR	4789489	PtrMemberAccess	upd -> strings		4788722	0					
ANR	4789490	Identifier	upd		4788722	0					
ANR	4789491	Identifier	strings		4788722	1					
ANR	4789492	Identifier	S_CLOSE		4788722	1					
ANR	4789493	Identifier	size		4788722	1					
ANR	4789494	Argument	out		4788722	3					
ANR	4789495	Identifier	out		4788722	0					
ANR	4789496	ExpressionStatement	upd -> flags &= ~B_OPEN	1202:12:52403:52424	4788722	1	True				
ANR	4789497	AssignmentExpression	upd -> flags &= ~B_OPEN		4788722	0		&=			
ANR	4789498	PtrMemberAccess	upd -> flags		4788722	0					
ANR	4789499	Identifier	upd		4788722	0					
ANR	4789500	Identifier	flags		4788722	1					
ANR	4789501	Identifier	~B_OPEN		4788722	1					
ANR	4789502	ExpressionStatement	fflush ( out )	1210:3:52485:52496	4788722	36	True				
ANR	4789503	CallExpression	fflush ( out )		4788722	0					
ANR	4789504	Callee	fflush		4788722	0					
ANR	4789505	Identifier	fflush		4788722	0					
ANR	4789506	ArgumentList	out		4788722	1					
ANR	4789507	Argument	out		4788722	0					
ANR	4789508	Identifier	out		4788722	0					
ANR	4789509	IfStatement	if ( upd -> pheight > upd -> yscan )		4788722	37					
ANR	4789510	Condition	upd -> pheight > upd -> yscan	1212:6:52538:52562	4788722	0	True				
ANR	4789511	RelationalExpression	upd -> pheight > upd -> yscan		4788722	0		>			
ANR	4789512	PtrMemberAccess	upd -> pheight		4788722	0					
ANR	4789513	Identifier	upd		4788722	0					
ANR	4789514	Identifier	pheight		4788722	1					
ANR	4789515	PtrMemberAccess	upd -> yscan		4788722	1					
ANR	4789516	Identifier	upd		4788722	0					
ANR	4789517	Identifier	yscan		4788722	1					
ANR	4789518	ExpressionStatement	error = gs_error_interrupt	1212:33:52565:52591	4788722	1	True				
ANR	4789519	AssignmentExpression	error = gs_error_interrupt		4788722	0		=			
ANR	4789520	Identifier	error		4788722	0					
ANR	4789521	Identifier	gs_error_interrupt		4788722	1					
ANR	4789522	ElseStatement	else		4788722	0					
ANR	4789523	IfStatement	if ( ferror ( out ) )		4788722	0					
ANR	4789524	Condition	ferror ( out )	1213:11:52604:52614	4788722	0	True				
ANR	4789525	CallExpression	ferror ( out )		4788722	0					
ANR	4789526	Callee	ferror		4788722	0					
ANR	4789527	Identifier	ferror		4788722	0					
ANR	4789528	ArgumentList	out		4788722	1					
ANR	4789529	Argument	out		4788722	0					
ANR	4789530	Identifier	out		4788722	0					
ANR	4789531	ExpressionStatement	error = gs_error_ioerror	1213:33:52626:52650	4788722	1	True				
ANR	4789532	AssignmentExpression	error = gs_error_ioerror		4788722	0		=			
ANR	4789533	Identifier	error		4788722	0					
ANR	4789534	Identifier	gs_error_ioerror		4788722	1					
ANR	4789535	ElseStatement	else		4788722	0					
ANR	4789536	ExpressionStatement	error = 0	1214:33:52685:52694	4788722	0	True				
ANR	4789537	AssignmentExpression	error = 0		4788722	0		=			
ANR	4789538	Identifier	error		4788722	0					
ANR	4789539	PrimaryExpression	0		4788722	1					
ANR	4789540	ExpressionStatement	"errprintf ( udev -> memory , ""RETURN: %d = upd_print_page(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) out )"	1217:3:52734:52842	4788722	38	True				
ANR	4789541	CallExpression	"errprintf ( udev -> memory , ""RETURN: %d = upd_print_page(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) out )"		4788722	0					
ANR	4789542	Callee	errprintf		4788722	0					
ANR	4789543	Identifier	errprintf		4788722	0					
ANR	4789544	ArgumentList	udev -> memory		4788722	1					
ANR	4789545	Argument	udev -> memory		4788722	0					
ANR	4789546	PtrMemberAccess	udev -> memory		4788722	0					
ANR	4789547	Identifier	udev		4788722	0					
ANR	4789548	Identifier	memory		4788722	1					
ANR	4789549	Argument	"""RETURN: %d = upd_print_page(0x%05lx,0x%05lx)\\n"""		4788722	1					
ANR	4789550	PrimaryExpression	"""RETURN: %d = upd_print_page(0x%05lx,0x%05lx)\\n"""		4788722	0					
ANR	4789551	Argument	error		4788722	2					
ANR	4789552	Identifier	error		4788722	0					
ANR	4789553	Argument	( long ) udev		4788722	3					
ANR	4789554	CastExpression	( long ) udev		4788722	0					
ANR	4789555	CastTarget	long		4788722	0					
ANR	4789556	Identifier	udev		4788722	1					
ANR	4789557	Argument	( long ) out		4788722	4					
ANR	4789558	CastExpression	( long ) out		4788722	0					
ANR	4789559	CastTarget	long		4788722	0					
ANR	4789560	Identifier	out		4788722	1					
ANR	4789561	ExpressionStatement	sigupd = oldupd	1222:6:52903:52918	4788722	39	True				
ANR	4789562	AssignmentExpression	sigupd = oldupd		4788722	0		=			
ANR	4789563	Identifier	sigupd		4788722	0					
ANR	4789564	Identifier	oldupd		4788722	1					
ANR	4789565	ExpressionStatement	"( void ) signal ( SIGINT , oldint )"	1223:6:52926:52955	4788722	40	True				
ANR	4789566	CastExpression	"( void ) signal ( SIGINT , oldint )"		4788722	0					
ANR	4789567	CastTarget	void		4788722	0					
ANR	4789568	CallExpression	"signal ( SIGINT , oldint )"		4788722	1					
ANR	4789569	Callee	signal		4788722	0					
ANR	4789570	Identifier	signal		4788722	0					
ANR	4789571	ArgumentList	SIGINT		4788722	1					
ANR	4789572	Argument	SIGINT		4788722	0					
ANR	4789573	Identifier	SIGINT		4788722	0					
ANR	4789574	Argument	oldint		4788722	1					
ANR	4789575	Identifier	oldint		4788722	0					
ANR	4789576	ExpressionStatement	"( void ) signal ( SIGTERM , oldterm )"	1224:6:52963:52993	4788722	41	True				
ANR	4789577	CastExpression	"( void ) signal ( SIGTERM , oldterm )"		4788722	0					
ANR	4789578	CastTarget	void		4788722	0					
ANR	4789579	CallExpression	"signal ( SIGTERM , oldterm )"		4788722	1					
ANR	4789580	Callee	signal		4788722	0					
ANR	4789581	Identifier	signal		4788722	0					
ANR	4789582	ArgumentList	SIGTERM		4788722	1					
ANR	4789583	Argument	SIGTERM		4788722	0					
ANR	4789584	Identifier	SIGTERM		4788722	0					
ANR	4789585	Argument	oldterm		4788722	1					
ANR	4789586	Identifier	oldterm		4788722	0					
ANR	4789587	ReturnStatement	return error ;	1227:3:53044:53056	4788722	42	True				
ANR	4789588	Identifier	error		4788722	0					
ANR	4789589	ReturnType	static int		4788722	1					
ANR	4789590	Identifier	upd_print_page		4788722	2					
ANR	4789591	ParameterList	"gx_device_printer * pdev , FILE * out"		4788722	3					
ANR	4789592	Parameter	gx_device_printer * pdev	1032:15:47210:47232	4788722	0	True				
ANR	4789593	ParameterType	gx_device_printer *		4788722	0					
ANR	4789594	Identifier	pdev		4788722	1					
ANR	4789595	Parameter	FILE * out	1032:40:47235:47243	4788722	1	True				
ANR	4789596	ParameterType	FILE *		4788722	0					
ANR	4789597	Identifier	out		4788722	1					
ANR	4789598	CFGEntryNode	ENTRY		4788722		True				
ANR	4789599	CFGExitNode	EXIT		4788722		True				
ANR	4789600	Symbol	I_PINS2WRITE		4788722						
ANR	4789601	Symbol	* S_CLOSE		4788722						
ANR	4789602	Symbol	* ints		4788722						
ANR	4789603	Symbol	upd -> icomp		4788722						
ANR	4789604	Symbol	upd_signal_handler		4788722						
ANR	4789605	Symbol	get_bits		4788722						
ANR	4789606	Symbol	gs_error_undefined		4788722						
ANR	4789607	Symbol	upd -> ipass		4788722						
ANR	4789608	Symbol	& upd -> gsscan		4788722						
ANR	4789609	Symbol	fmt		4788722						
ANR	4789610	Symbol	sigupd		4788722						
ANR	4789611	Symbol	upd -> yscan		4788722						
ANR	4789612	Symbol	pdev		4788722						
ANR	4789613	Symbol	strlen		4788722						
ANR	4789614	Symbol	* udev		4788722						
ANR	4789615	Symbol	& parsed		4788722						
ANR	4789616	Symbol	pdev -> memory		4788722						
ANR	4789617	Symbol	upd -> strings [ S_CLOSE ] . size		4788722						
ANR	4789618	Symbol	* I_BEGSKIP		4788722						
ANR	4789619	Symbol	S_BEGIN		4788722						
ANR	4789620	Symbol	upd -> strings [ S_END ] . size		4788722						
ANR	4789621	Symbol	signal		4788722						
ANR	4789622	Symbol	NULL		4788722						
ANR	4789623	Symbol	yfill		4788722						
ANR	4789624	Symbol	need		4788722						
ANR	4789625	Symbol	upd -> start_writer		4788722						
ANR	4789626	Symbol	upd		4788722						
ANR	4789627	Symbol	oldupd		4788722						
ANR	4789628	Symbol	upd -> ixpass		4788722						
ANR	4789629	Symbol	* I_NYPASS		4788722						
ANR	4789630	Symbol	upd -> strings [ S_ABORT ] . data		4788722						
ANR	4789631	Symbol	ferror		4788722						
ANR	4789632	Symbol	upd -> xprinter		4788722						
ANR	4789633	Symbol	S_OPEN		4788722						
ANR	4789634	Symbol	upd -> yscnbuf		4788722						
ANR	4789635	Symbol	& fmt		4788722						
ANR	4789636	Symbol	udev		4788722						
ANR	4789637	Symbol	SIGINT		4788722						
ANR	4789638	Symbol	"* dev_proc ( udev , get_bits )"		4788722						
ANR	4789639	Symbol	parsed		4788722						
ANR	4789640	Symbol	upd -> ints		4788722						
ANR	4789641	Symbol	upd -> gsbuf		4788722						
ANR	4789642	Symbol	B_ERROR		4788722						
ANR	4789643	Symbol	upd -> pheight		4788722						
ANR	4789644	Symbol	* upd -> render		4788722						
ANR	4789645	Symbol	upd -> strings [ S_OPEN ] . data		4788722						
ANR	4789646	Symbol	upd -> strings [ S_BEGIN ] . size		4788722						
ANR	4789647	Symbol	upd -> gsscan		4788722						
ANR	4789648	Symbol	* S_BEGIN		4788722						
ANR	4789649	Symbol	oldterm		4788722						
ANR	4789650	Symbol	* dev_proc		4788722						
ANR	4789651	Symbol	* S_END		4788722						
ANR	4789652	Symbol	upd -> strings		4788722						
ANR	4789653	Symbol	error		4788722						
ANR	4789654	Symbol	udev -> fname		4788722						
ANR	4789655	Symbol	out		4788722						
ANR	4789656	Symbol	upd -> flags		4788722						
ANR	4789657	Symbol	upd -> gsheight		4788722						
ANR	4789658	Symbol	S_ABORT		4788722						
ANR	4789659	Symbol	udev -> upd		4788722						
ANR	4789660	Symbol	I_BEGSKIP		4788722						
ANR	4789661	Symbol	upd -> strings [ S_ABORT ] . size		4788722						
ANR	4789662	Symbol	* upd		4788722						
ANR	4789663	Symbol	ints		4788722						
ANR	4789664	Symbol	* S_OPEN		4788722						
ANR	4789665	Symbol	dev_proc		4788722						
ANR	4789666	Symbol	B_OPEN		4788722						
ANR	4789667	Symbol	I_NYPASS		4788722						
ANR	4789668	Symbol	SIGTERM		4788722						
ANR	4789669	Symbol	upd -> start_render		4788722						
ANR	4789670	Symbol	* upd -> strings		4788722						
ANR	4789671	Symbol	oldint		4788722						
ANR	4789672	Symbol	udev -> memory		4788722						
ANR	4789673	Symbol	upd -> scnmsk		4788722						
ANR	4789674	Symbol	gx_parse_output_file_name		4788722						
ANR	4789675	Symbol	upd -> strings [ S_CLOSE ] . data		4788722						
ANR	4789676	Symbol	gs_error_ioerror		4788722						
ANR	4789677	Symbol	upd -> render		4788722						
ANR	4789678	Symbol	B_OK4GO		4788722						
ANR	4789679	Symbol	upd -> yprinter		4788722						
ANR	4789680	Symbol	upd -> strings [ S_BEGIN ] . data		4788722						
ANR	4789681	Symbol	S_END		4788722						
ANR	4789682	Symbol	* I_PINS2WRITE		4788722						
ANR	4789683	Symbol	gs_error_interrupt		4788722						
ANR	4789684	Symbol	upd -> writer		4788722						
ANR	4789685	Symbol	~B_OPEN		4788722						
ANR	4789686	Symbol	upd -> strings [ S_OPEN ] . size		4788722						
ANR	4789687	Symbol	upd -> nscnbuf		4788722						
ANR	4789688	Symbol	* pdev		4788722						
ANR	4789689	Symbol	upd -> lf		4788722						
ANR	4789690	Symbol	B_ABORT		4788722						
ANR	4789691	Symbol	S_CLOSE		4788722						
ANR	4789692	Symbol	* S_ABORT		4788722						
ANR	4789693	Symbol	upd -> strings [ S_END ] . data		4788722						
ANR	4789694	Symbol	* * upd		4788722						
ANR	4789695	Symbol	upd -> ngsbuf		4788722						
ANR	4789696	Function	upd_open	1245:0:53779:61085							
ANR	4789697	FunctionDef	upd_open (gx_device * pdev)		4789696	0					
ANR	4789698	CompoundStatement		1247:0:53816:61085	4789696	0					
ANR	4789699	IdentifierDeclStatement	upd_device * udev = ( upd_device * ) pdev ;	1248:3:53821:53863	4789696	0	True				
ANR	4789700	IdentifierDecl	* udev = ( upd_device * ) pdev		4789696	0					
ANR	4789701	IdentifierDeclType	upd_device *		4789696	0					
ANR	4789702	Identifier	udev		4789696	1					
ANR	4789703	AssignmentExpression	* udev = ( upd_device * ) pdev		4789696	2		=			
ANR	4789704	Identifier	udev		4789696	0					
ANR	4789705	CastExpression	( upd_device * ) pdev		4789696	1					
ANR	4789706	CastTarget	upd_device *		4789696	0					
ANR	4789707	Identifier	pdev		4789696	1					
ANR	4789708	IdentifierDeclStatement	upd_p upd = udev -> upd ;	1249:3:53868:53900	4789696	1	True				
ANR	4789709	IdentifierDecl	upd = udev -> upd		4789696	0					
ANR	4789710	IdentifierDeclType	upd_p		4789696	0					
ANR	4789711	Identifier	upd		4789696	1					
ANR	4789712	AssignmentExpression	upd = udev -> upd		4789696	2		=			
ANR	4789713	Identifier	upd		4789696	0					
ANR	4789714	PtrMemberAccess	udev -> upd		4789696	1					
ANR	4789715	Identifier	udev		4789696	0					
ANR	4789716	Identifier	upd		4789696	1					
ANR	4789717	IdentifierDeclStatement	int error ;	1250:3:53905:53927	4789696	2	True				
ANR	4789718	IdentifierDecl	error		4789696	0					
ANR	4789719	IdentifierDeclType	int		4789696	0					
ANR	4789720	Identifier	error		4789696	1					
ANR	4789721	ExpressionStatement	"errprintf ( udev -> memory , ""CALL: upd_open(0x%05lx)\\n"" , ( long ) pdev )"	1253:6:53970:54034	4789696	3	True				
ANR	4789722	CallExpression	"errprintf ( udev -> memory , ""CALL: upd_open(0x%05lx)\\n"" , ( long ) pdev )"		4789696	0					
ANR	4789723	Callee	errprintf		4789696	0					
ANR	4789724	Identifier	errprintf		4789696	0					
ANR	4789725	ArgumentList	udev -> memory		4789696	1					
ANR	4789726	Argument	udev -> memory		4789696	0					
ANR	4789727	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4789728	Identifier	udev		4789696	0					
ANR	4789729	Identifier	memory		4789696	1					
ANR	4789730	Argument	"""CALL: upd_open(0x%05lx)\\n"""		4789696	1					
ANR	4789731	PrimaryExpression	"""CALL: upd_open(0x%05lx)\\n"""		4789696	0					
ANR	4789732	Argument	( long ) pdev		4789696	2					
ANR	4789733	CastExpression	( long ) pdev		4789696	0					
ANR	4789734	CastTarget	long		4789696	0					
ANR	4789735	Identifier	pdev		4789696	1					
ANR	4789736	IfStatement	if ( ( NULL != upd ) && ( NULL != upd -> float_a [ FA_MARGINS ] . data ) && ( 4 == upd -> float_a [ FA_MARGINS ] . size ) )		4789696	4					
ANR	4789737	Condition	( NULL != upd ) && ( NULL != upd -> float_a [ FA_MARGINS ] . data ) && ( 4 == upd -> float_a [ FA_MARGINS ] . size )	1258:6:54082:54192	4789696	0	True				
ANR	4789738	AndExpression	( NULL != upd ) && ( NULL != upd -> float_a [ FA_MARGINS ] . data ) && ( 4 == upd -> float_a [ FA_MARGINS ] . size )		4789696	0		&&			
ANR	4789739	EqualityExpression	NULL != upd		4789696	0		!=			
ANR	4789740	Identifier	NULL		4789696	0					
ANR	4789741	Identifier	upd		4789696	1					
ANR	4789742	AndExpression	( NULL != upd -> float_a [ FA_MARGINS ] . data ) && ( 4 == upd -> float_a [ FA_MARGINS ] . size )		4789696	1		&&			
ANR	4789743	EqualityExpression	NULL != upd -> float_a [ FA_MARGINS ] . data		4789696	0		!=			
ANR	4789744	Identifier	NULL		4789696	0					
ANR	4789745	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		4789696	1					
ANR	4789746	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		4789696	0					
ANR	4789747	PtrMemberAccess	upd -> float_a		4789696	0					
ANR	4789748	Identifier	upd		4789696	0					
ANR	4789749	Identifier	float_a		4789696	1					
ANR	4789750	Identifier	FA_MARGINS		4789696	1					
ANR	4789751	Identifier	data		4789696	1					
ANR	4789752	EqualityExpression	4 == upd -> float_a [ FA_MARGINS ] . size		4789696	1		==			
ANR	4789753	PrimaryExpression	4		4789696	0					
ANR	4789754	MemberAccess	upd -> float_a [ FA_MARGINS ] . size		4789696	1					
ANR	4789755	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		4789696	0					
ANR	4789756	PtrMemberAccess	upd -> float_a		4789696	0					
ANR	4789757	Identifier	upd		4789696	0					
ANR	4789758	Identifier	float_a		4789696	1					
ANR	4789759	Identifier	FA_MARGINS		4789696	1					
ANR	4789760	Identifier	size		4789696	1					
ANR	4789761	CompoundStatement		15:6:390:400	4789696	1					
ANR	4789762	IdentifierDeclStatement	float m [ 4 ] ;	1261:6:54207:54217	4789696	0	True				
ANR	4789763	IdentifierDecl	m [ 4 ]		4789696	0					
ANR	4789764	IdentifierDeclType	float [ 4 ]		4789696	0					
ANR	4789765	Identifier	m		4789696	1					
ANR	4789766	PrimaryExpression	4		4789696	2					
ANR	4789767	ExpressionStatement	m [ 1 ] = upd -> float_a [ FA_MARGINS ] . data [ 1 ] / 72.0	1262:6:54225:54271	4789696	1	True				
ANR	4789768	AssignmentExpression	m [ 1 ] = upd -> float_a [ FA_MARGINS ] . data [ 1 ] / 72.0		4789696	0		=			
ANR	4789769	ArrayIndexing	m [ 1 ]		4789696	0					
ANR	4789770	Identifier	m		4789696	0					
ANR	4789771	PrimaryExpression	1		4789696	1					
ANR	4789772	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 1 ] / 72.0		4789696	1		/			
ANR	4789773	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 1 ]		4789696	0					
ANR	4789774	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		4789696	0					
ANR	4789775	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		4789696	0					
ANR	4789776	PtrMemberAccess	upd -> float_a		4789696	0					
ANR	4789777	Identifier	upd		4789696	0					
ANR	4789778	Identifier	float_a		4789696	1					
ANR	4789779	Identifier	FA_MARGINS		4789696	1					
ANR	4789780	Identifier	data		4789696	1					
ANR	4789781	PrimaryExpression	1		4789696	1					
ANR	4789782	PrimaryExpression	72.0		4789696	1					
ANR	4789783	ExpressionStatement	m [ 3 ] = upd -> float_a [ FA_MARGINS ] . data [ 3 ] / 72.0	1263:6:54279:54325	4789696	2	True				
ANR	4789784	AssignmentExpression	m [ 3 ] = upd -> float_a [ FA_MARGINS ] . data [ 3 ] / 72.0		4789696	0		=			
ANR	4789785	ArrayIndexing	m [ 3 ]		4789696	0					
ANR	4789786	Identifier	m		4789696	0					
ANR	4789787	PrimaryExpression	3		4789696	1					
ANR	4789788	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 3 ] / 72.0		4789696	1		/			
ANR	4789789	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 3 ]		4789696	0					
ANR	4789790	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		4789696	0					
ANR	4789791	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		4789696	0					
ANR	4789792	PtrMemberAccess	upd -> float_a		4789696	0					
ANR	4789793	Identifier	upd		4789696	0					
ANR	4789794	Identifier	float_a		4789696	1					
ANR	4789795	Identifier	FA_MARGINS		4789696	1					
ANR	4789796	Identifier	data		4789696	1					
ANR	4789797	PrimaryExpression	3		4789696	1					
ANR	4789798	PrimaryExpression	72.0		4789696	1					
ANR	4789799	IfStatement	if ( B_YFLIP & upd -> flags )		4789696	3					
ANR	4789800	Condition	B_YFLIP & upd -> flags	1264:9:54336:54355	4789696	0	True				
ANR	4789801	BitAndExpression	B_YFLIP & upd -> flags		4789696	0		&			
ANR	4789802	Identifier	B_YFLIP		4789696	0					
ANR	4789803	PtrMemberAccess	upd -> flags		4789696	1					
ANR	4789804	Identifier	upd		4789696	0					
ANR	4789805	Identifier	flags		4789696	1					
ANR	4789806	CompoundStatement		18:31:541:541	4789696	1					
ANR	4789807	ExpressionStatement	m [ 0 ] = upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0	1265:9:54369:54415	4789696	0	True				
ANR	4789808	AssignmentExpression	m [ 0 ] = upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0		4789696	0		=			
ANR	4789809	ArrayIndexing	m [ 0 ]		4789696	0					
ANR	4789810	Identifier	m		4789696	0					
ANR	4789811	PrimaryExpression	0		4789696	1					
ANR	4789812	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0		4789696	1		/			
ANR	4789813	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 2 ]		4789696	0					
ANR	4789814	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		4789696	0					
ANR	4789815	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		4789696	0					
ANR	4789816	PtrMemberAccess	upd -> float_a		4789696	0					
ANR	4789817	Identifier	upd		4789696	0					
ANR	4789818	Identifier	float_a		4789696	1					
ANR	4789819	Identifier	FA_MARGINS		4789696	1					
ANR	4789820	Identifier	data		4789696	1					
ANR	4789821	PrimaryExpression	2		4789696	1					
ANR	4789822	PrimaryExpression	72.0		4789696	1					
ANR	4789823	ExpressionStatement	m [ 2 ] = upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0	1266:9:54426:54472	4789696	1	True				
ANR	4789824	AssignmentExpression	m [ 2 ] = upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0		4789696	0		=			
ANR	4789825	ArrayIndexing	m [ 2 ]		4789696	0					
ANR	4789826	Identifier	m		4789696	0					
ANR	4789827	PrimaryExpression	2		4789696	1					
ANR	4789828	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0		4789696	1		/			
ANR	4789829	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 0 ]		4789696	0					
ANR	4789830	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		4789696	0					
ANR	4789831	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		4789696	0					
ANR	4789832	PtrMemberAccess	upd -> float_a		4789696	0					
ANR	4789833	Identifier	upd		4789696	0					
ANR	4789834	Identifier	float_a		4789696	1					
ANR	4789835	Identifier	FA_MARGINS		4789696	1					
ANR	4789836	Identifier	data		4789696	1					
ANR	4789837	PrimaryExpression	0		4789696	1					
ANR	4789838	PrimaryExpression	72.0		4789696	1					
ANR	4789839	ElseStatement	else		4789696	0					
ANR	4789840	CompoundStatement		21:13:670:670	4789696	0					
ANR	4789841	ExpressionStatement	m [ 0 ] = upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0	1268:9:54498:54544	4789696	0	True				
ANR	4789842	AssignmentExpression	m [ 0 ] = upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0		4789696	0		=			
ANR	4789843	ArrayIndexing	m [ 0 ]		4789696	0					
ANR	4789844	Identifier	m		4789696	0					
ANR	4789845	PrimaryExpression	0		4789696	1					
ANR	4789846	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 0 ] / 72.0		4789696	1		/			
ANR	4789847	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 0 ]		4789696	0					
ANR	4789848	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		4789696	0					
ANR	4789849	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		4789696	0					
ANR	4789850	PtrMemberAccess	upd -> float_a		4789696	0					
ANR	4789851	Identifier	upd		4789696	0					
ANR	4789852	Identifier	float_a		4789696	1					
ANR	4789853	Identifier	FA_MARGINS		4789696	1					
ANR	4789854	Identifier	data		4789696	1					
ANR	4789855	PrimaryExpression	0		4789696	1					
ANR	4789856	PrimaryExpression	72.0		4789696	1					
ANR	4789857	ExpressionStatement	m [ 2 ] = upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0	1269:9:54555:54601	4789696	1	True				
ANR	4789858	AssignmentExpression	m [ 2 ] = upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0		4789696	0		=			
ANR	4789859	ArrayIndexing	m [ 2 ]		4789696	0					
ANR	4789860	Identifier	m		4789696	0					
ANR	4789861	PrimaryExpression	2		4789696	1					
ANR	4789862	MultiplicativeExpression	upd -> float_a [ FA_MARGINS ] . data [ 2 ] / 72.0		4789696	1		/			
ANR	4789863	ArrayIndexing	upd -> float_a [ FA_MARGINS ] . data [ 2 ]		4789696	0					
ANR	4789864	MemberAccess	upd -> float_a [ FA_MARGINS ] . data		4789696	0					
ANR	4789865	ArrayIndexing	upd -> float_a [ FA_MARGINS ]		4789696	0					
ANR	4789866	PtrMemberAccess	upd -> float_a		4789696	0					
ANR	4789867	Identifier	upd		4789696	0					
ANR	4789868	Identifier	float_a		4789696	1					
ANR	4789869	Identifier	FA_MARGINS		4789696	1					
ANR	4789870	Identifier	data		4789696	1					
ANR	4789871	PrimaryExpression	2		4789696	1					
ANR	4789872	PrimaryExpression	72.0		4789696	1					
ANR	4789873	ExpressionStatement	"gx_device_set_margins ( ( gx_device * ) udev , m , true )"	1271:6:54617:54667	4789696	4	True				
ANR	4789874	CallExpression	"gx_device_set_margins ( ( gx_device * ) udev , m , true )"		4789696	0					
ANR	4789875	Callee	gx_device_set_margins		4789696	0					
ANR	4789876	Identifier	gx_device_set_margins		4789696	0					
ANR	4789877	ArgumentList	( gx_device * ) udev		4789696	1					
ANR	4789878	Argument	( gx_device * ) udev		4789696	0					
ANR	4789879	CastExpression	( gx_device * ) udev		4789696	0					
ANR	4789880	CastTarget	gx_device *		4789696	0					
ANR	4789881	Identifier	udev		4789696	1					
ANR	4789882	Argument	m		4789696	1					
ANR	4789883	Identifier	m		4789696	0					
ANR	4789884	Argument	true		4789696	2					
ANR	4789885	Identifier	true		4789696	0					
ANR	4789886	ExpressionStatement	error = gdev_prn_open ( pdev )	1275:3:54712:54739	4789696	5	True				
ANR	4789887	AssignmentExpression	error = gdev_prn_open ( pdev )		4789696	0		=			
ANR	4789888	Identifier	error		4789696	0					
ANR	4789889	CallExpression	gdev_prn_open ( pdev )		4789696	1					
ANR	4789890	Callee	gdev_prn_open		4789696	0					
ANR	4789891	Identifier	gdev_prn_open		4789696	0					
ANR	4789892	ArgumentList	pdev		4789696	1					
ANR	4789893	Argument	pdev		4789696	0					
ANR	4789894	Identifier	pdev		4789696	0					
ANR	4789895	WhileStatement	while ( pdev -> child )		4789696	6					
ANR	4789896	Condition	pdev -> child	1276:10:54751:54761	4789696	0	True				
ANR	4789897	PtrMemberAccess	pdev -> child		4789696	0					
ANR	4789898	Identifier	pdev		4789696	0					
ANR	4789899	Identifier	child		4789696	1					
ANR	4789900	ExpressionStatement	pdev = pdev -> child	1277:8:54772:54790	4789696	1	True				
ANR	4789901	AssignmentExpression	pdev = pdev -> child		4789696	0		=			
ANR	4789902	Identifier	pdev		4789696	0					
ANR	4789903	PtrMemberAccess	pdev -> child		4789696	1					
ANR	4789904	Identifier	pdev		4789696	0					
ANR	4789905	Identifier	child		4789696	1					
ANR	4789906	ExpressionStatement	udev = ( upd_device * ) pdev	1279:3:54796:54822	4789696	7	True				
ANR	4789907	AssignmentExpression	udev = ( upd_device * ) pdev		4789696	0		=			
ANR	4789908	Identifier	udev		4789696	0					
ANR	4789909	CastExpression	( upd_device * ) pdev		4789696	1					
ANR	4789910	CastTarget	upd_device *		4789696	0					
ANR	4789911	Identifier	pdev		4789696	1					
ANR	4789912	ExpressionStatement	upd = udev -> upd	1280:3:54827:54842	4789696	8	True				
ANR	4789913	AssignmentExpression	upd = udev -> upd		4789696	0		=			
ANR	4789914	Identifier	upd		4789696	0					
ANR	4789915	PtrMemberAccess	udev -> upd		4789696	1					
ANR	4789916	Identifier	udev		4789696	0					
ANR	4789917	Identifier	upd		4789696	1					
ANR	4789918	IfStatement	if ( upd )		4789696	9					
ANR	4789919	Condition	upd	1284:6:54905:54907	4789696	0	True				
ANR	4789920	Identifier	upd		4789696	0					
ANR	4789921	CompoundStatement		38:11:1093:1093	4789696	1					
ANR	4789922	ExpressionStatement	upd -> flags &= ~B_OK4GO	1286:6:54919:54941	4789696	0	True				
ANR	4789923	AssignmentExpression	upd -> flags &= ~B_OK4GO		4789696	0		&=			
ANR	4789924	PtrMemberAccess	upd -> flags		4789696	0					
ANR	4789925	Identifier	upd		4789696	0					
ANR	4789926	Identifier	flags		4789696	1					
ANR	4789927	Identifier	~B_OK4GO		4789696	1					
ANR	4789928	IfStatement	if ( 0 > error )		4789696	1					
ANR	4789929	Condition	0 > error	1292:9:55090:55098	4789696	0	True				
ANR	4789930	RelationalExpression	0 > error		4789696	0		>			
ANR	4789931	PrimaryExpression	0		4789696	0					
ANR	4789932	Identifier	error		4789696	1					
ANR	4789933	ExpressionStatement	upd -> flags |= B_ERROR	1292:20:55101:55122	4789696	1	True				
ANR	4789934	AssignmentExpression	upd -> flags |= B_ERROR		4789696	0		|=			
ANR	4789935	PtrMemberAccess	upd -> flags		4789696	0					
ANR	4789936	Identifier	upd		4789696	0					
ANR	4789937	Identifier	flags		4789696	1					
ANR	4789938	Identifier	B_ERROR		4789696	1					
ANR	4789939	IfStatement	if ( gs_error_VMerror == upd_open_map ( udev ) )		4789696	2					
ANR	4789940	Condition	gs_error_VMerror == upd_open_map ( udev )	1294:9:55134:55171	4789696	0	True				
ANR	4789941	EqualityExpression	gs_error_VMerror == upd_open_map ( udev )		4789696	0		==			
ANR	4789942	Identifier	gs_error_VMerror		4789696	0					
ANR	4789943	CallExpression	upd_open_map ( udev )		4789696	1					
ANR	4789944	Callee	upd_open_map		4789696	0					
ANR	4789945	Identifier	upd_open_map		4789696	0					
ANR	4789946	ArgumentList	udev		4789696	1					
ANR	4789947	Argument	udev		4789696	0					
ANR	4789948	Identifier	udev		4789696	0					
ANR	4789949	ExpressionStatement	error = gs_error_VMerror	1294:49:55174:55198	4789696	1	True				
ANR	4789950	AssignmentExpression	error = gs_error_VMerror		4789696	0		=			
ANR	4789951	Identifier	error		4789696	0					
ANR	4789952	Identifier	gs_error_VMerror		4789696	1					
ANR	4789953	ExpressionStatement	upd -> gswidth = udev -> width - ( int ) ( ( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch )	1301:6:55371:55480	4789696	3	True				
ANR	4789954	AssignmentExpression	upd -> gswidth = udev -> width - ( int ) ( ( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch )		4789696	0		=			
ANR	4789955	PtrMemberAccess	upd -> gswidth		4789696	0					
ANR	4789956	Identifier	upd		4789696	0					
ANR	4789957	Identifier	gswidth		4789696	1					
ANR	4789958	AdditiveExpression	udev -> width - ( int ) ( ( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch )		4789696	1		-			
ANR	4789959	PtrMemberAccess	udev -> width		4789696	0					
ANR	4789960	Identifier	udev		4789696	0					
ANR	4789961	Identifier	width		4789696	1					
ANR	4789962	CastExpression	( int ) ( ( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch )		4789696	1					
ANR	4789963	CastTarget	int		4789696	0					
ANR	4789964	MultiplicativeExpression	( dev_l_margin ( udev ) + dev_r_margin ( udev ) ) * udev -> x_pixels_per_inch		4789696	1		*			
ANR	4789965	AdditiveExpression	dev_l_margin ( udev ) + dev_r_margin ( udev )		4789696	0		+			
ANR	4789966	CallExpression	dev_l_margin ( udev )		4789696	0					
ANR	4789967	Callee	dev_l_margin		4789696	0					
ANR	4789968	Identifier	dev_l_margin		4789696	0					
ANR	4789969	ArgumentList	udev		4789696	1					
ANR	4789970	Argument	udev		4789696	0					
ANR	4789971	Identifier	udev		4789696	0					
ANR	4789972	CallExpression	dev_r_margin ( udev )		4789696	1					
ANR	4789973	Callee	dev_r_margin		4789696	0					
ANR	4789974	Identifier	dev_r_margin		4789696	0					
ANR	4789975	ArgumentList	udev		4789696	1					
ANR	4789976	Argument	udev		4789696	0					
ANR	4789977	Identifier	udev		4789696	0					
ANR	4789978	PtrMemberAccess	udev -> x_pixels_per_inch		4789696	1					
ANR	4789979	Identifier	udev		4789696	0					
ANR	4789980	Identifier	x_pixels_per_inch		4789696	1					
ANR	4789981	ExpressionStatement	upd -> gsheight = udev -> height - ( int ) ( ( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch )	1304:6:55489:55599	4789696	4	True				
ANR	4789982	AssignmentExpression	upd -> gsheight = udev -> height - ( int ) ( ( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch )		4789696	0		=			
ANR	4789983	PtrMemberAccess	upd -> gsheight		4789696	0					
ANR	4789984	Identifier	upd		4789696	0					
ANR	4789985	Identifier	gsheight		4789696	1					
ANR	4789986	AdditiveExpression	udev -> height - ( int ) ( ( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch )		4789696	1		-			
ANR	4789987	PtrMemberAccess	udev -> height		4789696	0					
ANR	4789988	Identifier	udev		4789696	0					
ANR	4789989	Identifier	height		4789696	1					
ANR	4789990	CastExpression	( int ) ( ( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch )		4789696	1					
ANR	4789991	CastTarget	int		4789696	0					
ANR	4789992	MultiplicativeExpression	( dev_t_margin ( udev ) + dev_b_margin ( udev ) ) * udev -> y_pixels_per_inch		4789696	1		*			
ANR	4789993	AdditiveExpression	dev_t_margin ( udev ) + dev_b_margin ( udev )		4789696	0		+			
ANR	4789994	CallExpression	dev_t_margin ( udev )		4789696	0					
ANR	4789995	Callee	dev_t_margin		4789696	0					
ANR	4789996	Identifier	dev_t_margin		4789696	0					
ANR	4789997	ArgumentList	udev		4789696	1					
ANR	4789998	Argument	udev		4789696	0					
ANR	4789999	Identifier	udev		4789696	0					
ANR	4790000	CallExpression	dev_b_margin ( udev )		4789696	1					
ANR	4790001	Callee	dev_b_margin		4789696	0					
ANR	4790002	Identifier	dev_b_margin		4789696	0					
ANR	4790003	ArgumentList	udev		4789696	1					
ANR	4790004	Argument	udev		4789696	0					
ANR	4790005	Identifier	udev		4789696	0					
ANR	4790006	PtrMemberAccess	udev -> y_pixels_per_inch		4789696	1					
ANR	4790007	Identifier	udev		4789696	0					
ANR	4790008	Identifier	y_pixels_per_inch		4789696	1					
ANR	4790009	ExpressionStatement	upd -> ngsbuf = 0	1307:6:55608:55623	4789696	5	True				
ANR	4790010	AssignmentExpression	upd -> ngsbuf = 0		4789696	0		=			
ANR	4790011	PtrMemberAccess	upd -> ngsbuf		4789696	0					
ANR	4790012	Identifier	upd		4789696	0					
ANR	4790013	Identifier	ngsbuf		4789696	1					
ANR	4790014	PrimaryExpression	0		4789696	1					
ANR	4790015	ExpressionStatement	upd -> gsbuf = NULL	1308:6:55659:55677	4789696	6	True				
ANR	4790016	AssignmentExpression	upd -> gsbuf = NULL		4789696	0		=			
ANR	4790017	PtrMemberAccess	upd -> gsbuf		4789696	0					
ANR	4790018	Identifier	upd		4789696	0					
ANR	4790019	Identifier	gsbuf		4789696	1					
ANR	4790020	Identifier	NULL		4789696	1					
ANR	4790021	IfStatement	if ( B_MAP & upd -> flags )		4789696	7					
ANR	4790022	Condition	B_MAP & upd -> flags	1310:9:55714:55731	4789696	0	True				
ANR	4790023	BitAndExpression	B_MAP & upd -> flags		4789696	0		&			
ANR	4790024	Identifier	B_MAP		4789696	0					
ANR	4790025	PtrMemberAccess	upd -> flags		4789696	1					
ANR	4790026	Identifier	upd		4789696	0					
ANR	4790027	Identifier	flags		4789696	1					
ANR	4790028	CompoundStatement		65:9:1965:2005	4789696	1					
ANR	4790029	IdentifierDeclStatement	"uint want = gx_device_raster ( pdev , true ) ;"	1311:9:55782:55822	4789696	0	True				
ANR	4790030	IdentifierDecl	"want = gx_device_raster ( pdev , true )"		4789696	0					
ANR	4790031	IdentifierDeclType	uint		4789696	0					
ANR	4790032	Identifier	want		4789696	1					
ANR	4790033	AssignmentExpression	"want = gx_device_raster ( pdev , true )"		4789696	2		=			
ANR	4790034	Identifier	want		4789696	0					
ANR	4790035	CallExpression	"gx_device_raster ( pdev , true )"		4789696	1					
ANR	4790036	Callee	gx_device_raster		4789696	0					
ANR	4790037	Identifier	gx_device_raster		4789696	0					
ANR	4790038	ArgumentList	pdev		4789696	1					
ANR	4790039	Argument	pdev		4789696	0					
ANR	4790040	Identifier	pdev		4789696	0					
ANR	4790041	Argument	true		4789696	1					
ANR	4790042	Identifier	true		4789696	0					
ANR	4790043	ExpressionStatement	"upd -> gsbuf = gs_malloc ( pdev -> memory , want , 1 , ""upd/gsbuf"" )"	1312:9:55833:55889	4789696	1	True				
ANR	4790044	AssignmentExpression	"upd -> gsbuf = gs_malloc ( pdev -> memory , want , 1 , ""upd/gsbuf"" )"		4789696	0		=			
ANR	4790045	PtrMemberAccess	upd -> gsbuf		4789696	0					
ANR	4790046	Identifier	upd		4789696	0					
ANR	4790047	Identifier	gsbuf		4789696	1					
ANR	4790048	CallExpression	"gs_malloc ( pdev -> memory , want , 1 , ""upd/gsbuf"" )"		4789696	1					
ANR	4790049	Callee	gs_malloc		4789696	0					
ANR	4790050	Identifier	gs_malloc		4789696	0					
ANR	4790051	ArgumentList	pdev -> memory		4789696	1					
ANR	4790052	Argument	pdev -> memory		4789696	0					
ANR	4790053	PtrMemberAccess	pdev -> memory		4789696	0					
ANR	4790054	Identifier	pdev		4789696	0					
ANR	4790055	Identifier	memory		4789696	1					
ANR	4790056	Argument	want		4789696	1					
ANR	4790057	Identifier	want		4789696	0					
ANR	4790058	Argument	1		4789696	2					
ANR	4790059	PrimaryExpression	1		4789696	0					
ANR	4790060	Argument	"""upd/gsbuf"""		4789696	3					
ANR	4790061	PrimaryExpression	"""upd/gsbuf"""		4789696	0					
ANR	4790062	IfStatement	if ( upd -> gsbuf )		4789696	2					
ANR	4790063	Condition	upd -> gsbuf	1314:12:55904:55913	4789696	0	True				
ANR	4790064	PtrMemberAccess	upd -> gsbuf		4789696	0					
ANR	4790065	Identifier	upd		4789696	0					
ANR	4790066	Identifier	gsbuf		4789696	1					
ANR	4790067	CompoundStatement		68:24:2099:2099	4789696	1					
ANR	4790068	ExpressionStatement	upd -> ngsbuf = want	1315:12:55930:55948	4789696	0	True				
ANR	4790069	AssignmentExpression	upd -> ngsbuf = want		4789696	0		=			
ANR	4790070	PtrMemberAccess	upd -> ngsbuf		4789696	0					
ANR	4790071	Identifier	upd		4789696	0					
ANR	4790072	Identifier	ngsbuf		4789696	1					
ANR	4790073	Identifier	want		4789696	1					
ANR	4790074	ExpressionStatement	upd -> flags |= B_BUF	1316:12:55962:55981	4789696	1	True				
ANR	4790075	AssignmentExpression	upd -> flags |= B_BUF		4789696	0		|=			
ANR	4790076	PtrMemberAccess	upd -> flags		4789696	0					
ANR	4790077	Identifier	upd		4789696	0					
ANR	4790078	Identifier	flags		4789696	1					
ANR	4790079	Identifier	B_BUF		4789696	1					
ANR	4790080	ElseStatement	else		4789696	0					
ANR	4790081	CompoundStatement		71:16:2204:2204	4789696	0					
ANR	4790082	ExpressionStatement	error = gs_error_VMerror	1318:12:56035:56059	4789696	0	True				
ANR	4790083	AssignmentExpression	error = gs_error_VMerror		4789696	0		=			
ANR	4790084	Identifier	error		4789696	0					
ANR	4790085	Identifier	gs_error_VMerror		4789696	1					
ANR	4790086	ExpressionStatement	upd -> flags |= B_ERROR	1319:12:56092:56113	4789696	1	True				
ANR	4790087	AssignmentExpression	upd -> flags |= B_ERROR		4789696	0		|=			
ANR	4790088	PtrMemberAccess	upd -> flags		4789696	0					
ANR	4790089	Identifier	upd		4789696	0					
ANR	4790090	Identifier	flags		4789696	1					
ANR	4790091	Identifier	B_ERROR		4789696	1					
ANR	4790092	ExpressionStatement	upd_open_render ( udev )	1324:6:56206:56227	4789696	8	True				
ANR	4790093	CallExpression	upd_open_render ( udev )		4789696	0					
ANR	4790094	Callee	upd_open_render		4789696	0					
ANR	4790095	Identifier	upd_open_render		4789696	0					
ANR	4790096	ArgumentList	udev		4789696	1					
ANR	4790097	Argument	udev		4789696	0					
ANR	4790098	Identifier	udev		4789696	0					
ANR	4790099	IfStatement	if ( gs_error_VMerror == upd_open_writer ( udev ) )		4789696	9					
ANR	4790100	Condition	gs_error_VMerror == upd_open_writer ( udev )	1326:9:56272:56312	4789696	0	True				
ANR	4790101	EqualityExpression	gs_error_VMerror == upd_open_writer ( udev )		4789696	0		==			
ANR	4790102	Identifier	gs_error_VMerror		4789696	0					
ANR	4790103	CallExpression	upd_open_writer ( udev )		4789696	1					
ANR	4790104	Callee	upd_open_writer		4789696	0					
ANR	4790105	Identifier	upd_open_writer		4789696	0					
ANR	4790106	ArgumentList	udev		4789696	1					
ANR	4790107	Argument	udev		4789696	0					
ANR	4790108	Identifier	udev		4789696	0					
ANR	4790109	ExpressionStatement	error = gs_error_VMerror	1326:52:56315:56339	4789696	1	True				
ANR	4790110	AssignmentExpression	error = gs_error_VMerror		4789696	0		=			
ANR	4790111	Identifier	error		4789696	0					
ANR	4790112	Identifier	gs_error_VMerror		4789696	1					
ANR	4790113	ExpressionStatement	udev -> upd -> pdwidth = udev -> width	1328:6:56348:56381	4789696	10	True				
ANR	4790114	AssignmentExpression	udev -> upd -> pdwidth = udev -> width		4789696	0		=			
ANR	4790115	PtrMemberAccess	udev -> upd -> pdwidth		4789696	0					
ANR	4790116	PtrMemberAccess	udev -> upd		4789696	0					
ANR	4790117	Identifier	udev		4789696	0					
ANR	4790118	Identifier	upd		4789696	1					
ANR	4790119	Identifier	pdwidth		4789696	1					
ANR	4790120	PtrMemberAccess	udev -> width		4789696	1					
ANR	4790121	Identifier	udev		4789696	0					
ANR	4790122	Identifier	width		4789696	1					
ANR	4790123	ExpressionStatement	udev -> upd -> pdheight = udev -> height	1329:6:56389:56423	4789696	11	True				
ANR	4790124	AssignmentExpression	udev -> upd -> pdheight = udev -> height		4789696	0		=			
ANR	4790125	PtrMemberAccess	udev -> upd -> pdheight		4789696	0					
ANR	4790126	PtrMemberAccess	udev -> upd		4789696	0					
ANR	4790127	Identifier	udev		4789696	0					
ANR	4790128	Identifier	upd		4789696	1					
ANR	4790129	Identifier	pdheight		4789696	1					
ANR	4790130	PtrMemberAccess	udev -> height		4789696	1					
ANR	4790131	Identifier	udev		4789696	0					
ANR	4790132	Identifier	height		4789696	1					
ANR	4790133	IfStatement	if ( ( upd -> flags & ( B_OK4GO | B_ERROR ) ) == B_OK4GO )		4789696	12					
ANR	4790134	Condition	( upd -> flags & ( B_OK4GO | B_ERROR ) ) == B_OK4GO	1332:9:56466:56510	4789696	0	True				
ANR	4790135	EqualityExpression	( upd -> flags & ( B_OK4GO | B_ERROR ) ) == B_OK4GO		4789696	0		==			
ANR	4790136	BitAndExpression	upd -> flags & ( B_OK4GO | B_ERROR )		4789696	0		&			
ANR	4790137	PtrMemberAccess	upd -> flags		4789696	0					
ANR	4790138	Identifier	upd		4789696	0					
ANR	4790139	Identifier	flags		4789696	1					
ANR	4790140	InclusiveOrExpression	B_OK4GO | B_ERROR		4789696	1		|			
ANR	4790141	Identifier	B_OK4GO		4789696	0					
ANR	4790142	Identifier	B_ERROR		4789696	1					
ANR	4790143	Identifier	B_OK4GO		4789696	1					
ANR	4790144	CompoundStatement		87:8:2706:2721	4789696	1					
ANR	4790145	IdentifierDeclStatement	"int i , j , l , ln , lv ;"	1333:8:56523:56538	4789696	0	True				
ANR	4790146	IdentifierDecl	i		4789696	0					
ANR	4790147	IdentifierDeclType	int		4789696	0					
ANR	4790148	Identifier	i		4789696	1					
ANR	4790149	IdentifierDecl	j		4789696	1					
ANR	4790150	IdentifierDeclType	int		4789696	0					
ANR	4790151	Identifier	j		4789696	1					
ANR	4790152	IdentifierDecl	l		4789696	2					
ANR	4790153	IdentifierDeclType	int		4789696	0					
ANR	4790154	Identifier	l		4789696	1					
ANR	4790155	IdentifierDecl	ln		4789696	3					
ANR	4790156	IdentifierDeclType	int		4789696	0					
ANR	4790157	Identifier	ln		4789696	1					
ANR	4790158	IdentifierDecl	lv		4789696	4					
ANR	4790159	IdentifierDeclType	int		4789696	0					
ANR	4790160	Identifier	lv		4789696	1					
ANR	4790161	ExpressionStatement	"errprintf ( udev -> memory , ""\\nupd->flags    = 0x%05lx\\n"" , ( unsigned long ) upd -> flags )"	1334:8:56548:56627	4789696	1	True				
ANR	4790162	CallExpression	"errprintf ( udev -> memory , ""\\nupd->flags    = 0x%05lx\\n"" , ( unsigned long ) upd -> flags )"		4789696	0					
ANR	4790163	Callee	errprintf		4789696	0					
ANR	4790164	Identifier	errprintf		4789696	0					
ANR	4790165	ArgumentList	udev -> memory		4789696	1					
ANR	4790166	Argument	udev -> memory		4789696	0					
ANR	4790167	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790168	Identifier	udev		4789696	0					
ANR	4790169	Identifier	memory		4789696	1					
ANR	4790170	Argument	"""\\nupd->flags    = 0x%05lx\\n"""		4789696	1					
ANR	4790171	PrimaryExpression	"""\\nupd->flags    = 0x%05lx\\n"""		4789696	0					
ANR	4790172	Argument	( unsigned long ) upd -> flags		4789696	2					
ANR	4790173	CastExpression	( unsigned long ) upd -> flags		4789696	0					
ANR	4790174	CastTarget	unsigned long		4789696	0					
ANR	4790175	PtrMemberAccess	upd -> flags		4789696	1					
ANR	4790176	Identifier	upd		4789696	0					
ANR	4790177	Identifier	flags		4789696	1					
ANR	4790178	ExpressionStatement	"errprintf ( udev -> memory , ""upd->pdwidth  = %5d\\n"" , upd -> pdwidth )"	1335:8:56637:56699	4789696	2	True				
ANR	4790179	CallExpression	"errprintf ( udev -> memory , ""upd->pdwidth  = %5d\\n"" , upd -> pdwidth )"		4789696	0					
ANR	4790180	Callee	errprintf		4789696	0					
ANR	4790181	Identifier	errprintf		4789696	0					
ANR	4790182	ArgumentList	udev -> memory		4789696	1					
ANR	4790183	Argument	udev -> memory		4789696	0					
ANR	4790184	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790185	Identifier	udev		4789696	0					
ANR	4790186	Identifier	memory		4789696	1					
ANR	4790187	Argument	"""upd->pdwidth  = %5d\\n"""		4789696	1					
ANR	4790188	PrimaryExpression	"""upd->pdwidth  = %5d\\n"""		4789696	0					
ANR	4790189	Argument	upd -> pdwidth		4789696	2					
ANR	4790190	PtrMemberAccess	upd -> pdwidth		4789696	0					
ANR	4790191	Identifier	upd		4789696	0					
ANR	4790192	Identifier	pdwidth		4789696	1					
ANR	4790193	ExpressionStatement	"errprintf ( udev -> memory , ""upd->pdheight = %5d\\n"" , upd -> pdheight )"	1336:8:56709:56772	4789696	3	True				
ANR	4790194	CallExpression	"errprintf ( udev -> memory , ""upd->pdheight = %5d\\n"" , upd -> pdheight )"		4789696	0					
ANR	4790195	Callee	errprintf		4789696	0					
ANR	4790196	Identifier	errprintf		4789696	0					
ANR	4790197	ArgumentList	udev -> memory		4789696	1					
ANR	4790198	Argument	udev -> memory		4789696	0					
ANR	4790199	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790200	Identifier	udev		4789696	0					
ANR	4790201	Identifier	memory		4789696	1					
ANR	4790202	Argument	"""upd->pdheight = %5d\\n"""		4789696	1					
ANR	4790203	PrimaryExpression	"""upd->pdheight = %5d\\n"""		4789696	0					
ANR	4790204	Argument	upd -> pdheight		4789696	2					
ANR	4790205	PtrMemberAccess	upd -> pdheight		4789696	0					
ANR	4790206	Identifier	upd		4789696	0					
ANR	4790207	Identifier	pdheight		4789696	1					
ANR	4790208	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ngsbuf   = %5u\\n"" , upd -> ngsbuf )"	1337:8:56782:56843	4789696	4	True				
ANR	4790209	CallExpression	"errprintf ( udev -> memory , ""upd->ngsbuf   = %5u\\n"" , upd -> ngsbuf )"		4789696	0					
ANR	4790210	Callee	errprintf		4789696	0					
ANR	4790211	Identifier	errprintf		4789696	0					
ANR	4790212	ArgumentList	udev -> memory		4789696	1					
ANR	4790213	Argument	udev -> memory		4789696	0					
ANR	4790214	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790215	Identifier	udev		4789696	0					
ANR	4790216	Identifier	memory		4789696	1					
ANR	4790217	Argument	"""upd->ngsbuf   = %5u\\n"""		4789696	1					
ANR	4790218	PrimaryExpression	"""upd->ngsbuf   = %5u\\n"""		4789696	0					
ANR	4790219	Argument	upd -> ngsbuf		4789696	2					
ANR	4790220	PtrMemberAccess	upd -> ngsbuf		4789696	0					
ANR	4790221	Identifier	upd		4789696	0					
ANR	4790222	Identifier	ngsbuf		4789696	1					
ANR	4790223	ExpressionStatement	"errprintf ( udev -> memory , ""upd->gswidth  = %5d\\n"" , upd -> gswidth )"	1338:8:56853:56915	4789696	5	True				
ANR	4790224	CallExpression	"errprintf ( udev -> memory , ""upd->gswidth  = %5d\\n"" , upd -> gswidth )"		4789696	0					
ANR	4790225	Callee	errprintf		4789696	0					
ANR	4790226	Identifier	errprintf		4789696	0					
ANR	4790227	ArgumentList	udev -> memory		4789696	1					
ANR	4790228	Argument	udev -> memory		4789696	0					
ANR	4790229	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790230	Identifier	udev		4789696	0					
ANR	4790231	Identifier	memory		4789696	1					
ANR	4790232	Argument	"""upd->gswidth  = %5d\\n"""		4789696	1					
ANR	4790233	PrimaryExpression	"""upd->gswidth  = %5d\\n"""		4789696	0					
ANR	4790234	Argument	upd -> gswidth		4789696	2					
ANR	4790235	PtrMemberAccess	upd -> gswidth		4789696	0					
ANR	4790236	Identifier	upd		4789696	0					
ANR	4790237	Identifier	gswidth		4789696	1					
ANR	4790238	ExpressionStatement	"errprintf ( udev -> memory , ""upd->gsheight = %5d\\n"" , upd -> gsheight )"	1339:8:56925:56988	4789696	6	True				
ANR	4790239	CallExpression	"errprintf ( udev -> memory , ""upd->gsheight = %5d\\n"" , upd -> gsheight )"		4789696	0					
ANR	4790240	Callee	errprintf		4789696	0					
ANR	4790241	Identifier	errprintf		4789696	0					
ANR	4790242	ArgumentList	udev -> memory		4789696	1					
ANR	4790243	Argument	udev -> memory		4789696	0					
ANR	4790244	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790245	Identifier	udev		4789696	0					
ANR	4790246	Identifier	memory		4789696	1					
ANR	4790247	Argument	"""upd->gsheight = %5d\\n"""		4789696	1					
ANR	4790248	PrimaryExpression	"""upd->gsheight = %5d\\n"""		4789696	0					
ANR	4790249	Argument	upd -> gsheight		4789696	2					
ANR	4790250	PtrMemberAccess	upd -> gsheight		4789696	0					
ANR	4790251	Identifier	upd		4789696	0					
ANR	4790252	Identifier	gsheight		4789696	1					
ANR	4790253	ExpressionStatement	"errprintf ( udev -> memory , ""upd->rwidth   = %5d\\n"" , upd -> rwidth )"	1340:8:56998:57059	4789696	7	True				
ANR	4790254	CallExpression	"errprintf ( udev -> memory , ""upd->rwidth   = %5d\\n"" , upd -> rwidth )"		4789696	0					
ANR	4790255	Callee	errprintf		4789696	0					
ANR	4790256	Identifier	errprintf		4789696	0					
ANR	4790257	ArgumentList	udev -> memory		4789696	1					
ANR	4790258	Argument	udev -> memory		4789696	0					
ANR	4790259	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790260	Identifier	udev		4789696	0					
ANR	4790261	Identifier	memory		4789696	1					
ANR	4790262	Argument	"""upd->rwidth   = %5d\\n"""		4789696	1					
ANR	4790263	PrimaryExpression	"""upd->rwidth   = %5d\\n"""		4789696	0					
ANR	4790264	Argument	upd -> rwidth		4789696	2					
ANR	4790265	PtrMemberAccess	upd -> rwidth		4789696	0					
ANR	4790266	Identifier	upd		4789696	0					
ANR	4790267	Identifier	rwidth		4789696	1					
ANR	4790268	ExpressionStatement	"errprintf ( udev -> memory , ""upd->pwidth   = %5d\\n"" , upd -> pwidth )"	1341:8:57069:57130	4789696	8	True				
ANR	4790269	CallExpression	"errprintf ( udev -> memory , ""upd->pwidth   = %5d\\n"" , upd -> pwidth )"		4789696	0					
ANR	4790270	Callee	errprintf		4789696	0					
ANR	4790271	Identifier	errprintf		4789696	0					
ANR	4790272	ArgumentList	udev -> memory		4789696	1					
ANR	4790273	Argument	udev -> memory		4789696	0					
ANR	4790274	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790275	Identifier	udev		4789696	0					
ANR	4790276	Identifier	memory		4789696	1					
ANR	4790277	Argument	"""upd->pwidth   = %5d\\n"""		4789696	1					
ANR	4790278	PrimaryExpression	"""upd->pwidth   = %5d\\n"""		4789696	0					
ANR	4790279	Argument	upd -> pwidth		4789696	2					
ANR	4790280	PtrMemberAccess	upd -> pwidth		4789696	0					
ANR	4790281	Identifier	upd		4789696	0					
ANR	4790282	Identifier	pwidth		4789696	1					
ANR	4790283	ExpressionStatement	"errprintf ( udev -> memory , ""upd->pheight  = %5d\\n"" , upd -> pheight )"	1342:8:57140:57202	4789696	9	True				
ANR	4790284	CallExpression	"errprintf ( udev -> memory , ""upd->pheight  = %5d\\n"" , upd -> pheight )"		4789696	0					
ANR	4790285	Callee	errprintf		4789696	0					
ANR	4790286	Identifier	errprintf		4789696	0					
ANR	4790287	ArgumentList	udev -> memory		4789696	1					
ANR	4790288	Argument	udev -> memory		4789696	0					
ANR	4790289	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790290	Identifier	udev		4789696	0					
ANR	4790291	Identifier	memory		4789696	1					
ANR	4790292	Argument	"""upd->pheight  = %5d\\n"""		4789696	1					
ANR	4790293	PrimaryExpression	"""upd->pheight  = %5d\\n"""		4789696	0					
ANR	4790294	Argument	upd -> pheight		4789696	2					
ANR	4790295	PtrMemberAccess	upd -> pheight		4789696	0					
ANR	4790296	Identifier	upd		4789696	0					
ANR	4790297	Identifier	pheight		4789696	1					
ANR	4790298	ExpressionStatement	"errprintf ( udev -> memory , ""upd->nvalbuf  = %5u\\n"" , upd -> nvalbuf )"	1343:8:57212:57274	4789696	10	True				
ANR	4790299	CallExpression	"errprintf ( udev -> memory , ""upd->nvalbuf  = %5u\\n"" , upd -> nvalbuf )"		4789696	0					
ANR	4790300	Callee	errprintf		4789696	0					
ANR	4790301	Identifier	errprintf		4789696	0					
ANR	4790302	ArgumentList	udev -> memory		4789696	1					
ANR	4790303	Argument	udev -> memory		4789696	0					
ANR	4790304	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790305	Identifier	udev		4789696	0					
ANR	4790306	Identifier	memory		4789696	1					
ANR	4790307	Argument	"""upd->nvalbuf  = %5u\\n"""		4789696	1					
ANR	4790308	PrimaryExpression	"""upd->nvalbuf  = %5u\\n"""		4789696	0					
ANR	4790309	Argument	upd -> nvalbuf		4789696	2					
ANR	4790310	PtrMemberAccess	upd -> nvalbuf		4789696	0					
ANR	4790311	Identifier	upd		4789696	0					
ANR	4790312	Identifier	nvalbuf		4789696	1					
ANR	4790313	ExpressionStatement	"errprintf ( udev -> memory , ""upd->nscnbuf  = %5d\\n"" , upd -> nscnbuf )"	1344:8:57284:57346	4789696	11	True				
ANR	4790314	CallExpression	"errprintf ( udev -> memory , ""upd->nscnbuf  = %5d\\n"" , upd -> nscnbuf )"		4789696	0					
ANR	4790315	Callee	errprintf		4789696	0					
ANR	4790316	Identifier	errprintf		4789696	0					
ANR	4790317	ArgumentList	udev -> memory		4789696	1					
ANR	4790318	Argument	udev -> memory		4789696	0					
ANR	4790319	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790320	Identifier	udev		4789696	0					
ANR	4790321	Identifier	memory		4789696	1					
ANR	4790322	Argument	"""upd->nscnbuf  = %5d\\n"""		4789696	1					
ANR	4790323	PrimaryExpression	"""upd->nscnbuf  = %5d\\n"""		4789696	0					
ANR	4790324	Argument	upd -> nscnbuf		4789696	2					
ANR	4790325	PtrMemberAccess	upd -> nscnbuf		4789696	0					
ANR	4790326	Identifier	upd		4789696	0					
ANR	4790327	Identifier	nscnbuf		4789696	1					
ANR	4790328	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ncomp    = %5d\\n"" , upd -> ncomp )"	1345:8:57356:57416	4789696	12	True				
ANR	4790329	CallExpression	"errprintf ( udev -> memory , ""upd->ncomp    = %5d\\n"" , upd -> ncomp )"		4789696	0					
ANR	4790330	Callee	errprintf		4789696	0					
ANR	4790331	Identifier	errprintf		4789696	0					
ANR	4790332	ArgumentList	udev -> memory		4789696	1					
ANR	4790333	Argument	udev -> memory		4789696	0					
ANR	4790334	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790335	Identifier	udev		4789696	0					
ANR	4790336	Identifier	memory		4789696	1					
ANR	4790337	Argument	"""upd->ncomp    = %5d\\n"""		4789696	1					
ANR	4790338	PrimaryExpression	"""upd->ncomp    = %5d\\n"""		4789696	0					
ANR	4790339	Argument	upd -> ncomp		4789696	2					
ANR	4790340	PtrMemberAccess	upd -> ncomp		4789696	0					
ANR	4790341	Identifier	upd		4789696	0					
ANR	4790342	Identifier	ncomp		4789696	1					
ANR	4790343	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ocomp    = %5d\\n"" , upd -> ocomp )"	1346:8:57426:57486	4789696	13	True				
ANR	4790344	CallExpression	"errprintf ( udev -> memory , ""upd->ocomp    = %5d\\n"" , upd -> ocomp )"		4789696	0					
ANR	4790345	Callee	errprintf		4789696	0					
ANR	4790346	Identifier	errprintf		4789696	0					
ANR	4790347	ArgumentList	udev -> memory		4789696	1					
ANR	4790348	Argument	udev -> memory		4789696	0					
ANR	4790349	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790350	Identifier	udev		4789696	0					
ANR	4790351	Identifier	memory		4789696	1					
ANR	4790352	Argument	"""upd->ocomp    = %5d\\n"""		4789696	1					
ANR	4790353	PrimaryExpression	"""upd->ocomp    = %5d\\n"""		4789696	0					
ANR	4790354	Argument	upd -> ocomp		4789696	2					
ANR	4790355	PtrMemberAccess	upd -> ocomp		4789696	0					
ANR	4790356	Identifier	upd		4789696	0					
ANR	4790357	Identifier	ocomp		4789696	1					
ANR	4790358	ExpressionStatement	"errprintf ( udev -> memory , ""upd->nbytes   = %5d\\n"" , upd -> nbytes )"	1347:8:57496:57557	4789696	14	True				
ANR	4790359	CallExpression	"errprintf ( udev -> memory , ""upd->nbytes   = %5d\\n"" , upd -> nbytes )"		4789696	0					
ANR	4790360	Callee	errprintf		4789696	0					
ANR	4790361	Identifier	errprintf		4789696	0					
ANR	4790362	ArgumentList	udev -> memory		4789696	1					
ANR	4790363	Argument	udev -> memory		4789696	0					
ANR	4790364	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790365	Identifier	udev		4789696	0					
ANR	4790366	Identifier	memory		4789696	1					
ANR	4790367	Argument	"""upd->nbytes   = %5d\\n"""		4789696	1					
ANR	4790368	PrimaryExpression	"""upd->nbytes   = %5d\\n"""		4789696	0					
ANR	4790369	Argument	upd -> nbytes		4789696	2					
ANR	4790370	PtrMemberAccess	upd -> nbytes		4789696	0					
ANR	4790371	Identifier	upd		4789696	0					
ANR	4790372	Identifier	nbytes		4789696	1					
ANR	4790373	ExpressionStatement	"errprintf ( udev -> memory , ""upd->nlimits  = %5d\\n"" , upd -> nlimits )"	1348:8:57567:57629	4789696	15	True				
ANR	4790374	CallExpression	"errprintf ( udev -> memory , ""upd->nlimits  = %5d\\n"" , upd -> nlimits )"		4789696	0					
ANR	4790375	Callee	errprintf		4789696	0					
ANR	4790376	Identifier	errprintf		4789696	0					
ANR	4790377	ArgumentList	udev -> memory		4789696	1					
ANR	4790378	Argument	udev -> memory		4789696	0					
ANR	4790379	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790380	Identifier	udev		4789696	0					
ANR	4790381	Identifier	memory		4789696	1					
ANR	4790382	Argument	"""upd->nlimits  = %5d\\n"""		4789696	1					
ANR	4790383	PrimaryExpression	"""upd->nlimits  = %5d\\n"""		4789696	0					
ANR	4790384	Argument	upd -> nlimits		4789696	2					
ANR	4790385	PtrMemberAccess	upd -> nlimits		4789696	0					
ANR	4790386	Identifier	upd		4789696	0					
ANR	4790387	Identifier	nlimits		4789696	1					
ANR	4790388	ExpressionStatement	"errprintf ( udev -> memory , ""upd->scnmsk   = %5d\\n"" , upd -> scnmsk )"	1349:8:57639:57700	4789696	16	True				
ANR	4790389	CallExpression	"errprintf ( udev -> memory , ""upd->scnmsk   = %5d\\n"" , upd -> scnmsk )"		4789696	0					
ANR	4790390	Callee	errprintf		4789696	0					
ANR	4790391	Identifier	errprintf		4789696	0					
ANR	4790392	ArgumentList	udev -> memory		4789696	1					
ANR	4790393	Argument	udev -> memory		4789696	0					
ANR	4790394	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790395	Identifier	udev		4789696	0					
ANR	4790396	Identifier	memory		4789696	1					
ANR	4790397	Argument	"""upd->scnmsk   = %5d\\n"""		4789696	1					
ANR	4790398	PrimaryExpression	"""upd->scnmsk   = %5d\\n"""		4789696	0					
ANR	4790399	Argument	upd -> scnmsk		4789696	2					
ANR	4790400	PtrMemberAccess	upd -> scnmsk		4789696	0					
ANR	4790401	Identifier	upd		4789696	0					
ANR	4790402	Identifier	scnmsk		4789696	1					
ANR	4790403	ExpressionStatement	"errprintf ( udev -> memory , ""upd->noutbuf  = %5u\\n"" , upd -> noutbuf )"	1350:8:57710:57772	4789696	17	True				
ANR	4790404	CallExpression	"errprintf ( udev -> memory , ""upd->noutbuf  = %5u\\n"" , upd -> noutbuf )"		4789696	0					
ANR	4790405	Callee	errprintf		4789696	0					
ANR	4790406	Identifier	errprintf		4789696	0					
ANR	4790407	ArgumentList	udev -> memory		4789696	1					
ANR	4790408	Argument	udev -> memory		4789696	0					
ANR	4790409	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790410	Identifier	udev		4789696	0					
ANR	4790411	Identifier	memory		4789696	1					
ANR	4790412	Argument	"""upd->noutbuf  = %5u\\n"""		4789696	1					
ANR	4790413	PrimaryExpression	"""upd->noutbuf  = %5u\\n"""		4789696	0					
ANR	4790414	Argument	upd -> noutbuf		4789696	2					
ANR	4790415	PtrMemberAccess	upd -> noutbuf		4789696	0					
ANR	4790416	Identifier	upd		4789696	0					
ANR	4790417	Identifier	noutbuf		4789696	1					
ANR	4790418	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ixpass   = %5d\\n"" , upd -> ixpass )"	1351:8:57782:57843	4789696	18	True				
ANR	4790419	CallExpression	"errprintf ( udev -> memory , ""upd->ixpass   = %5d\\n"" , upd -> ixpass )"		4789696	0					
ANR	4790420	Callee	errprintf		4789696	0					
ANR	4790421	Identifier	errprintf		4789696	0					
ANR	4790422	ArgumentList	udev -> memory		4789696	1					
ANR	4790423	Argument	udev -> memory		4789696	0					
ANR	4790424	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790425	Identifier	udev		4789696	0					
ANR	4790426	Identifier	memory		4789696	1					
ANR	4790427	Argument	"""upd->ixpass   = %5d\\n"""		4789696	1					
ANR	4790428	PrimaryExpression	"""upd->ixpass   = %5d\\n"""		4789696	0					
ANR	4790429	Argument	upd -> ixpass		4789696	2					
ANR	4790430	PtrMemberAccess	upd -> ixpass		4789696	0					
ANR	4790431	Identifier	upd		4789696	0					
ANR	4790432	Identifier	ixpass		4789696	1					
ANR	4790433	ExpressionStatement	"errprintf ( udev -> memory , ""upd->ipass    = %5d\\n"" , upd -> ipass )"	1352:8:57853:57913	4789696	19	True				
ANR	4790434	CallExpression	"errprintf ( udev -> memory , ""upd->ipass    = %5d\\n"" , upd -> ipass )"		4789696	0					
ANR	4790435	Callee	errprintf		4789696	0					
ANR	4790436	Identifier	errprintf		4789696	0					
ANR	4790437	ArgumentList	udev -> memory		4789696	1					
ANR	4790438	Argument	udev -> memory		4789696	0					
ANR	4790439	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790440	Identifier	udev		4789696	0					
ANR	4790441	Identifier	memory		4789696	1					
ANR	4790442	Argument	"""upd->ipass    = %5d\\n"""		4789696	1					
ANR	4790443	PrimaryExpression	"""upd->ipass    = %5d\\n"""		4789696	0					
ANR	4790444	Argument	upd -> ipass		4789696	2					
ANR	4790445	PtrMemberAccess	upd -> ipass		4789696	0					
ANR	4790446	Identifier	upd		4789696	0					
ANR	4790447	Identifier	ipass		4789696	1					
ANR	4790448	ExpressionStatement	"errprintf ( udev -> memory , ""upd->icomp    = %5d\\n"" , upd -> icomp )"	1353:8:57923:57983	4789696	20	True				
ANR	4790449	CallExpression	"errprintf ( udev -> memory , ""upd->icomp    = %5d\\n"" , upd -> icomp )"		4789696	0					
ANR	4790450	Callee	errprintf		4789696	0					
ANR	4790451	Identifier	errprintf		4789696	0					
ANR	4790452	ArgumentList	udev -> memory		4789696	1					
ANR	4790453	Argument	udev -> memory		4789696	0					
ANR	4790454	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790455	Identifier	udev		4789696	0					
ANR	4790456	Identifier	memory		4789696	1					
ANR	4790457	Argument	"""upd->icomp    = %5d\\n"""		4789696	1					
ANR	4790458	PrimaryExpression	"""upd->icomp    = %5d\\n"""		4789696	0					
ANR	4790459	Argument	upd -> icomp		4789696	2					
ANR	4790460	PtrMemberAccess	upd -> icomp		4789696	0					
ANR	4790461	Identifier	upd		4789696	0					
ANR	4790462	Identifier	icomp		4789696	1					
ANR	4790463	ExpressionStatement	"errprintf ( udev -> memory , ""upd->lf       = %5d\\n"" , upd -> lf )"	1354:8:57993:58050	4789696	21	True				
ANR	4790464	CallExpression	"errprintf ( udev -> memory , ""upd->lf       = %5d\\n"" , upd -> lf )"		4789696	0					
ANR	4790465	Callee	errprintf		4789696	0					
ANR	4790466	Identifier	errprintf		4789696	0					
ANR	4790467	ArgumentList	udev -> memory		4789696	1					
ANR	4790468	Argument	udev -> memory		4789696	0					
ANR	4790469	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790470	Identifier	udev		4789696	0					
ANR	4790471	Identifier	memory		4789696	1					
ANR	4790472	Argument	"""upd->lf       = %5d\\n"""		4789696	1					
ANR	4790473	PrimaryExpression	"""upd->lf       = %5d\\n"""		4789696	0					
ANR	4790474	Argument	upd -> lf		4789696	2					
ANR	4790475	PtrMemberAccess	upd -> lf		4789696	0					
ANR	4790476	Identifier	upd		4789696	0					
ANR	4790477	Identifier	lf		4789696	1					
ANR	4790478	ExpressionStatement	"errprintf ( udev -> memory , ""upd->xprinter = %5d\\n"" , upd -> xprinter )"	1355:8:58060:58123	4789696	22	True				
ANR	4790479	CallExpression	"errprintf ( udev -> memory , ""upd->xprinter = %5d\\n"" , upd -> xprinter )"		4789696	0					
ANR	4790480	Callee	errprintf		4789696	0					
ANR	4790481	Identifier	errprintf		4789696	0					
ANR	4790482	ArgumentList	udev -> memory		4789696	1					
ANR	4790483	Argument	udev -> memory		4789696	0					
ANR	4790484	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790485	Identifier	udev		4789696	0					
ANR	4790486	Identifier	memory		4789696	1					
ANR	4790487	Argument	"""upd->xprinter = %5d\\n"""		4789696	1					
ANR	4790488	PrimaryExpression	"""upd->xprinter = %5d\\n"""		4789696	0					
ANR	4790489	Argument	upd -> xprinter		4789696	2					
ANR	4790490	PtrMemberAccess	upd -> xprinter		4789696	0					
ANR	4790491	Identifier	upd		4789696	0					
ANR	4790492	Identifier	xprinter		4789696	1					
ANR	4790493	ExpressionStatement	"errprintf ( udev -> memory , ""upd->yscan    = %5d\\n"" , upd -> yscan )"	1356:8:58133:58193	4789696	23	True				
ANR	4790494	CallExpression	"errprintf ( udev -> memory , ""upd->yscan    = %5d\\n"" , upd -> yscan )"		4789696	0					
ANR	4790495	Callee	errprintf		4789696	0					
ANR	4790496	Identifier	errprintf		4789696	0					
ANR	4790497	ArgumentList	udev -> memory		4789696	1					
ANR	4790498	Argument	udev -> memory		4789696	0					
ANR	4790499	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790500	Identifier	udev		4789696	0					
ANR	4790501	Identifier	memory		4789696	1					
ANR	4790502	Argument	"""upd->yscan    = %5d\\n"""		4789696	1					
ANR	4790503	PrimaryExpression	"""upd->yscan    = %5d\\n"""		4789696	0					
ANR	4790504	Argument	upd -> yscan		4789696	2					
ANR	4790505	PtrMemberAccess	upd -> yscan		4789696	0					
ANR	4790506	Identifier	upd		4789696	0					
ANR	4790507	Identifier	yscan		4789696	1					
ANR	4790508	ExpressionStatement	"errprintf ( udev -> memory , ""upd->yprinter = %5d\\n"" , upd -> yprinter )"	1357:8:58203:58266	4789696	24	True				
ANR	4790509	CallExpression	"errprintf ( udev -> memory , ""upd->yprinter = %5d\\n"" , upd -> yprinter )"		4789696	0					
ANR	4790510	Callee	errprintf		4789696	0					
ANR	4790511	Identifier	errprintf		4789696	0					
ANR	4790512	ArgumentList	udev -> memory		4789696	1					
ANR	4790513	Argument	udev -> memory		4789696	0					
ANR	4790514	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790515	Identifier	udev		4789696	0					
ANR	4790516	Identifier	memory		4789696	1					
ANR	4790517	Argument	"""upd->yprinter = %5d\\n"""		4789696	1					
ANR	4790518	PrimaryExpression	"""upd->yprinter = %5d\\n"""		4789696	0					
ANR	4790519	Argument	upd -> yprinter		4789696	2					
ANR	4790520	PtrMemberAccess	upd -> yprinter		4789696	0					
ANR	4790521	Identifier	upd		4789696	0					
ANR	4790522	Identifier	yprinter		4789696	1					
ANR	4790523	ExpressionStatement	"errprintf ( udev -> memory , ""upd->yscnbuf  = %5d\\n"" , upd -> yscnbuf )"	1358:8:58276:58338	4789696	25	True				
ANR	4790524	CallExpression	"errprintf ( udev -> memory , ""upd->yscnbuf  = %5d\\n"" , upd -> yscnbuf )"		4789696	0					
ANR	4790525	Callee	errprintf		4789696	0					
ANR	4790526	Identifier	errprintf		4789696	0					
ANR	4790527	ArgumentList	udev -> memory		4789696	1					
ANR	4790528	Argument	udev -> memory		4789696	0					
ANR	4790529	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790530	Identifier	udev		4789696	0					
ANR	4790531	Identifier	memory		4789696	1					
ANR	4790532	Argument	"""upd->yscnbuf  = %5d\\n"""		4789696	1					
ANR	4790533	PrimaryExpression	"""upd->yscnbuf  = %5d\\n"""		4789696	0					
ANR	4790534	Argument	upd -> yscnbuf		4789696	2					
ANR	4790535	PtrMemberAccess	upd -> yscnbuf		4789696	0					
ANR	4790536	Identifier	upd		4789696	0					
ANR	4790537	Identifier	yscnbuf		4789696	1					
ANR	4790538	ExpressionStatement	ln = 13	1360:8:58349:58356	4789696	26	True				
ANR	4790539	AssignmentExpression	ln = 13		4789696	0		=			
ANR	4790540	Identifier	ln		4789696	0					
ANR	4790541	PrimaryExpression	13		4789696	1					
ANR	4790542	ExpressionStatement	lv = 5	1361:8:58366:58372	4789696	27	True				
ANR	4790543	AssignmentExpression	lv = 5		4789696	0		=			
ANR	4790544	Identifier	lv		4789696	0					
ANR	4790545	PrimaryExpression	5		4789696	1					
ANR	4790546	ForStatement	for ( i = 0 ; countof ( upd_choice ) > i ; ++ i )		4789696	28					
ANR	4790547	ForInit	i = 0 ;	1362:12:58386:58391	4789696	0	True				
ANR	4790548	AssignmentExpression	i = 0		4789696	0		=			
ANR	4790549	Identifier	i		4789696	0					
ANR	4790550	PrimaryExpression	0		4789696	1					
ANR	4790551	Condition	countof ( upd_choice ) > i	1362:19:58393:58415	4789696	1	True				
ANR	4790552	RelationalExpression	countof ( upd_choice ) > i		4789696	0		>			
ANR	4790553	CallExpression	countof ( upd_choice )		4789696	0					
ANR	4790554	Callee	countof		4789696	0					
ANR	4790555	Identifier	countof		4789696	0					
ANR	4790556	ArgumentList	upd_choice		4789696	1					
ANR	4790557	Argument	upd_choice		4789696	0					
ANR	4790558	Identifier	upd_choice		4789696	0					
ANR	4790559	Identifier	i		4789696	1					
ANR	4790560	UnaryExpression	++ i	1362:44:58418:58420	4789696	2	True				
ANR	4790561	IncDec	++		4789696	0					
ANR	4790562	Identifier	i		4789696	1					
ANR	4790563	CompoundStatement		116:49:4606:4606	4789696	3					
ANR	4790564	IfStatement	if ( ! upd_choice [ i ] )		4789696	0					
ANR	4790565	Condition	! upd_choice [ i ]	1363:13:58438:58451	4789696	0	True				
ANR	4790566	UnaryOperationExpression	! upd_choice [ i ]		4789696	0					
ANR	4790567	UnaryOperator	!		4789696	0					
ANR	4790568	ArrayIndexing	upd_choice [ i ]		4789696	1					
ANR	4790569	Identifier	upd_choice		4789696	0					
ANR	4790570	Identifier	i		4789696	1					
ANR	4790571	ContinueStatement	continue ;	1363:29:58454:58462	4789696	1	True				
ANR	4790572	ExpressionStatement	l = strlen ( upd_choice [ i ] [ 0 ] )	1364:10:58474:58502	4789696	1	True				
ANR	4790573	AssignmentExpression	l = strlen ( upd_choice [ i ] [ 0 ] )		4789696	0		=			
ANR	4790574	Identifier	l		4789696	0					
ANR	4790575	CallExpression	strlen ( upd_choice [ i ] [ 0 ] )		4789696	1					
ANR	4790576	Callee	strlen		4789696	0					
ANR	4790577	Identifier	strlen		4789696	0					
ANR	4790578	ArgumentList	upd_choice [ i ] [ 0 ]		4789696	1					
ANR	4790579	Argument	upd_choice [ i ] [ 0 ]		4789696	0					
ANR	4790580	ArrayIndexing	upd_choice [ i ] [ 0 ]		4789696	0					
ANR	4790581	ArrayIndexing	upd_choice [ i ]		4789696	0					
ANR	4790582	Identifier	upd_choice		4789696	0					
ANR	4790583	Identifier	i		4789696	1					
ANR	4790584	PrimaryExpression	0		4789696	1					
ANR	4790585	IfStatement	if ( ln < l )		4789696	2					
ANR	4790586	Condition	ln < l	1365:13:58517:58522	4789696	0	True				
ANR	4790587	RelationalExpression	ln < l		4789696	0		<			
ANR	4790588	Identifier	ln		4789696	0					
ANR	4790589	Identifier	l		4789696	1					
ANR	4790590	ExpressionStatement	ln = l	1365:21:58525:58531	4789696	1	True				
ANR	4790591	AssignmentExpression	ln = l		4789696	0		=			
ANR	4790592	Identifier	ln		4789696	0					
ANR	4790593	Identifier	l		4789696	1					
ANR	4790594	ForStatement	for ( j = 1 ; upd_choice [ i ] [ j ] ; ++ j )		4789696	3					
ANR	4790595	ForInit	j = 1 ;	1366:14:58547:58552	4789696	0	True				
ANR	4790596	AssignmentExpression	j = 1		4789696	0		=			
ANR	4790597	Identifier	j		4789696	0					
ANR	4790598	PrimaryExpression	1		4789696	1					
ANR	4790599	Condition	upd_choice [ i ] [ j ]	1366:21:58554:58569	4789696	1	True				
ANR	4790600	ArrayIndexing	upd_choice [ i ] [ j ]		4789696	0					
ANR	4790601	ArrayIndexing	upd_choice [ i ]		4789696	0					
ANR	4790602	Identifier	upd_choice		4789696	0					
ANR	4790603	Identifier	i		4789696	1					
ANR	4790604	Identifier	j		4789696	1					
ANR	4790605	UnaryExpression	++ j	1366:39:58572:58574	4789696	2	True				
ANR	4790606	IncDec	++		4789696	0					
ANR	4790607	Identifier	j		4789696	1					
ANR	4790608	CompoundStatement		120:44:4760:4760	4789696	3					
ANR	4790609	ExpressionStatement	l = strlen ( upd_choice [ i ] [ j ] )	1367:12:58591:58619	4789696	0	True				
ANR	4790610	AssignmentExpression	l = strlen ( upd_choice [ i ] [ j ] )		4789696	0		=			
ANR	4790611	Identifier	l		4789696	0					
ANR	4790612	CallExpression	strlen ( upd_choice [ i ] [ j ] )		4789696	1					
ANR	4790613	Callee	strlen		4789696	0					
ANR	4790614	Identifier	strlen		4789696	0					
ANR	4790615	ArgumentList	upd_choice [ i ] [ j ]		4789696	1					
ANR	4790616	Argument	upd_choice [ i ] [ j ]		4789696	0					
ANR	4790617	ArrayIndexing	upd_choice [ i ] [ j ]		4789696	0					
ANR	4790618	ArrayIndexing	upd_choice [ i ]		4789696	0					
ANR	4790619	Identifier	upd_choice		4789696	0					
ANR	4790620	Identifier	i		4789696	1					
ANR	4790621	Identifier	j		4789696	1					
ANR	4790622	IfStatement	if ( lv < l )		4789696	1					
ANR	4790623	Condition	lv < l	1368:15:58636:58641	4789696	0	True				
ANR	4790624	RelationalExpression	lv < l		4789696	0		<			
ANR	4790625	Identifier	lv		4789696	0					
ANR	4790626	Identifier	l		4789696	1					
ANR	4790627	ExpressionStatement	lv = l	1368:23:58644:58650	4789696	1	True				
ANR	4790628	AssignmentExpression	lv = l		4789696	0		=			
ANR	4790629	Identifier	lv		4789696	0					
ANR	4790630	Identifier	l		4789696	1					
ANR	4790631	ForStatement	for ( i = 0 ; countof ( upd_flags ) > i ; ++ i )		4789696	29					
ANR	4790632	ForInit	i = 0 ;	1372:12:58687:58692	4789696	0	True				
ANR	4790633	AssignmentExpression	i = 0		4789696	0		=			
ANR	4790634	Identifier	i		4789696	0					
ANR	4790635	PrimaryExpression	0		4789696	1					
ANR	4790636	Condition	countof ( upd_flags ) > i	1372:19:58694:58715	4789696	1	True				
ANR	4790637	RelationalExpression	countof ( upd_flags ) > i		4789696	0		>			
ANR	4790638	CallExpression	countof ( upd_flags )		4789696	0					
ANR	4790639	Callee	countof		4789696	0					
ANR	4790640	Identifier	countof		4789696	0					
ANR	4790641	ArgumentList	upd_flags		4789696	1					
ANR	4790642	Argument	upd_flags		4789696	0					
ANR	4790643	Identifier	upd_flags		4789696	0					
ANR	4790644	Identifier	i		4789696	1					
ANR	4790645	UnaryExpression	++ i	1372:43:58718:58720	4789696	2	True				
ANR	4790646	IncDec	++		4789696	0					
ANR	4790647	Identifier	i		4789696	1					
ANR	4790648	CompoundStatement		126:48:4906:4906	4789696	3					
ANR	4790649	IfStatement	if ( upd_flags [ i ] )		4789696	0					
ANR	4790650	Condition	upd_flags [ i ]	1373:13:58738:58749	4789696	0	True				
ANR	4790651	ArrayIndexing	upd_flags [ i ]		4789696	0					
ANR	4790652	Identifier	upd_flags		4789696	0					
ANR	4790653	Identifier	i		4789696	1					
ANR	4790654	CompoundStatement		127:27:4935:4935	4789696	1					
ANR	4790655	ExpressionStatement	l = strlen ( upd_flags [ i ] )	1374:12:58766:58790	4789696	0	True				
ANR	4790656	AssignmentExpression	l = strlen ( upd_flags [ i ] )		4789696	0		=			
ANR	4790657	Identifier	l		4789696	0					
ANR	4790658	CallExpression	strlen ( upd_flags [ i ] )		4789696	1					
ANR	4790659	Callee	strlen		4789696	0					
ANR	4790660	Identifier	strlen		4789696	0					
ANR	4790661	ArgumentList	upd_flags [ i ]		4789696	1					
ANR	4790662	Argument	upd_flags [ i ]		4789696	0					
ANR	4790663	ArrayIndexing	upd_flags [ i ]		4789696	0					
ANR	4790664	Identifier	upd_flags		4789696	0					
ANR	4790665	Identifier	i		4789696	1					
ANR	4790666	IfStatement	if ( ln < l )		4789696	1					
ANR	4790667	Condition	ln < l	1375:15:58807:58812	4789696	0	True				
ANR	4790668	RelationalExpression	ln < l		4789696	0		<			
ANR	4790669	Identifier	ln		4789696	0					
ANR	4790670	Identifier	l		4789696	1					
ANR	4790671	ExpressionStatement	ln = l	1375:23:58815:58821	4789696	1	True				
ANR	4790672	AssignmentExpression	ln = l		4789696	0		=			
ANR	4790673	Identifier	ln		4789696	0					
ANR	4790674	Identifier	l		4789696	1					
ANR	4790675	ForStatement	for ( i = 0 ; countof ( upd_ints ) > i ; ++ i )		4789696	30					
ANR	4790676	ForInit	i = 0 ;	1379:12:58858:58863	4789696	0	True				
ANR	4790677	AssignmentExpression	i = 0		4789696	0		=			
ANR	4790678	Identifier	i		4789696	0					
ANR	4790679	PrimaryExpression	0		4789696	1					
ANR	4790680	Condition	countof ( upd_ints ) > i	1379:19:58865:58885	4789696	1	True				
ANR	4790681	RelationalExpression	countof ( upd_ints ) > i		4789696	0		>			
ANR	4790682	CallExpression	countof ( upd_ints )		4789696	0					
ANR	4790683	Callee	countof		4789696	0					
ANR	4790684	Identifier	countof		4789696	0					
ANR	4790685	ArgumentList	upd_ints		4789696	1					
ANR	4790686	Argument	upd_ints		4789696	0					
ANR	4790687	Identifier	upd_ints		4789696	0					
ANR	4790688	Identifier	i		4789696	1					
ANR	4790689	UnaryExpression	++ i	1379:42:58888:58890	4789696	2	True				
ANR	4790690	IncDec	++		4789696	0					
ANR	4790691	Identifier	i		4789696	1					
ANR	4790692	CompoundStatement		133:47:5076:5076	4789696	3					
ANR	4790693	IfStatement	if ( upd_ints [ i ] )		4789696	0					
ANR	4790694	Condition	upd_ints [ i ]	1380:13:58908:58918	4789696	0	True				
ANR	4790695	ArrayIndexing	upd_ints [ i ]		4789696	0					
ANR	4790696	Identifier	upd_ints		4789696	0					
ANR	4790697	Identifier	i		4789696	1					
ANR	4790698	CompoundStatement		134:26:5104:5104	4789696	1					
ANR	4790699	ExpressionStatement	l = strlen ( upd_ints [ i ] )	1381:12:58935:58958	4789696	0	True				
ANR	4790700	AssignmentExpression	l = strlen ( upd_ints [ i ] )		4789696	0		=			
ANR	4790701	Identifier	l		4789696	0					
ANR	4790702	CallExpression	strlen ( upd_ints [ i ] )		4789696	1					
ANR	4790703	Callee	strlen		4789696	0					
ANR	4790704	Identifier	strlen		4789696	0					
ANR	4790705	ArgumentList	upd_ints [ i ]		4789696	1					
ANR	4790706	Argument	upd_ints [ i ]		4789696	0					
ANR	4790707	ArrayIndexing	upd_ints [ i ]		4789696	0					
ANR	4790708	Identifier	upd_ints		4789696	0					
ANR	4790709	Identifier	i		4789696	1					
ANR	4790710	IfStatement	if ( ln < l )		4789696	1					
ANR	4790711	Condition	ln < l	1382:15:58975:58980	4789696	0	True				
ANR	4790712	RelationalExpression	ln < l		4789696	0		<			
ANR	4790713	Identifier	ln		4789696	0					
ANR	4790714	Identifier	l		4789696	1					
ANR	4790715	ExpressionStatement	ln = l	1382:23:58983:58989	4789696	1	True				
ANR	4790716	AssignmentExpression	ln = l		4789696	0		=			
ANR	4790717	Identifier	ln		4789696	0					
ANR	4790718	Identifier	l		4789696	1					
ANR	4790719	ForStatement	for ( i = 0 ; countof ( upd_int_a ) > i ; ++ i )		4789696	31					
ANR	4790720	ForInit	i = 0 ;	1386:12:59026:59031	4789696	0	True				
ANR	4790721	AssignmentExpression	i = 0		4789696	0		=			
ANR	4790722	Identifier	i		4789696	0					
ANR	4790723	PrimaryExpression	0		4789696	1					
ANR	4790724	Condition	countof ( upd_int_a ) > i	1386:19:59033:59054	4789696	1	True				
ANR	4790725	RelationalExpression	countof ( upd_int_a ) > i		4789696	0		>			
ANR	4790726	CallExpression	countof ( upd_int_a )		4789696	0					
ANR	4790727	Callee	countof		4789696	0					
ANR	4790728	Identifier	countof		4789696	0					
ANR	4790729	ArgumentList	upd_int_a		4789696	1					
ANR	4790730	Argument	upd_int_a		4789696	0					
ANR	4790731	Identifier	upd_int_a		4789696	0					
ANR	4790732	Identifier	i		4789696	1					
ANR	4790733	UnaryExpression	++ i	1386:43:59057:59059	4789696	2	True				
ANR	4790734	IncDec	++		4789696	0					
ANR	4790735	Identifier	i		4789696	1					
ANR	4790736	CompoundStatement		140:48:5245:5245	4789696	3					
ANR	4790737	IfStatement	if ( upd_int_a [ i ] )		4789696	0					
ANR	4790738	Condition	upd_int_a [ i ]	1387:13:59077:59088	4789696	0	True				
ANR	4790739	ArrayIndexing	upd_int_a [ i ]		4789696	0					
ANR	4790740	Identifier	upd_int_a		4789696	0					
ANR	4790741	Identifier	i		4789696	1					
ANR	4790742	CompoundStatement		141:27:5274:5274	4789696	1					
ANR	4790743	ExpressionStatement	l = strlen ( upd_int_a [ i ] )	1388:12:59105:59129	4789696	0	True				
ANR	4790744	AssignmentExpression	l = strlen ( upd_int_a [ i ] )		4789696	0		=			
ANR	4790745	Identifier	l		4789696	0					
ANR	4790746	CallExpression	strlen ( upd_int_a [ i ] )		4789696	1					
ANR	4790747	Callee	strlen		4789696	0					
ANR	4790748	Identifier	strlen		4789696	0					
ANR	4790749	ArgumentList	upd_int_a [ i ]		4789696	1					
ANR	4790750	Argument	upd_int_a [ i ]		4789696	0					
ANR	4790751	ArrayIndexing	upd_int_a [ i ]		4789696	0					
ANR	4790752	Identifier	upd_int_a		4789696	0					
ANR	4790753	Identifier	i		4789696	1					
ANR	4790754	IfStatement	if ( ln < l )		4789696	1					
ANR	4790755	Condition	ln < l	1389:15:59146:59151	4789696	0	True				
ANR	4790756	RelationalExpression	ln < l		4789696	0		<			
ANR	4790757	Identifier	ln		4789696	0					
ANR	4790758	Identifier	l		4789696	1					
ANR	4790759	ExpressionStatement	ln = l	1389:23:59154:59160	4789696	1	True				
ANR	4790760	AssignmentExpression	ln = l		4789696	0		=			
ANR	4790761	Identifier	ln		4789696	0					
ANR	4790762	Identifier	l		4789696	1					
ANR	4790763	ForStatement	for ( i = 0 ; countof ( upd_strings ) > i ; ++ i )		4789696	32					
ANR	4790764	ForInit	i = 0 ;	1393:12:59197:59202	4789696	0	True				
ANR	4790765	AssignmentExpression	i = 0		4789696	0		=			
ANR	4790766	Identifier	i		4789696	0					
ANR	4790767	PrimaryExpression	0		4789696	1					
ANR	4790768	Condition	countof ( upd_strings ) > i	1393:19:59204:59227	4789696	1	True				
ANR	4790769	RelationalExpression	countof ( upd_strings ) > i		4789696	0		>			
ANR	4790770	CallExpression	countof ( upd_strings )		4789696	0					
ANR	4790771	Callee	countof		4789696	0					
ANR	4790772	Identifier	countof		4789696	0					
ANR	4790773	ArgumentList	upd_strings		4789696	1					
ANR	4790774	Argument	upd_strings		4789696	0					
ANR	4790775	Identifier	upd_strings		4789696	0					
ANR	4790776	Identifier	i		4789696	1					
ANR	4790777	UnaryExpression	++ i	1393:45:59230:59232	4789696	2	True				
ANR	4790778	IncDec	++		4789696	0					
ANR	4790779	Identifier	i		4789696	1					
ANR	4790780	CompoundStatement		147:50:5418:5418	4789696	3					
ANR	4790781	IfStatement	if ( upd_strings [ i ] )		4789696	0					
ANR	4790782	Condition	upd_strings [ i ]	1394:13:59250:59263	4789696	0	True				
ANR	4790783	ArrayIndexing	upd_strings [ i ]		4789696	0					
ANR	4790784	Identifier	upd_strings		4789696	0					
ANR	4790785	Identifier	i		4789696	1					
ANR	4790786	CompoundStatement		148:29:5449:5449	4789696	1					
ANR	4790787	ExpressionStatement	l = strlen ( upd_strings [ i ] )	1395:12:59280:59306	4789696	0	True				
ANR	4790788	AssignmentExpression	l = strlen ( upd_strings [ i ] )		4789696	0		=			
ANR	4790789	Identifier	l		4789696	0					
ANR	4790790	CallExpression	strlen ( upd_strings [ i ] )		4789696	1					
ANR	4790791	Callee	strlen		4789696	0					
ANR	4790792	Identifier	strlen		4789696	0					
ANR	4790793	ArgumentList	upd_strings [ i ]		4789696	1					
ANR	4790794	Argument	upd_strings [ i ]		4789696	0					
ANR	4790795	ArrayIndexing	upd_strings [ i ]		4789696	0					
ANR	4790796	Identifier	upd_strings		4789696	0					
ANR	4790797	Identifier	i		4789696	1					
ANR	4790798	IfStatement	if ( ln < l )		4789696	1					
ANR	4790799	Condition	ln < l	1396:15:59323:59328	4789696	0	True				
ANR	4790800	RelationalExpression	ln < l		4789696	0		<			
ANR	4790801	Identifier	ln		4789696	0					
ANR	4790802	Identifier	l		4789696	1					
ANR	4790803	ExpressionStatement	ln = l	1396:23:59331:59337	4789696	1	True				
ANR	4790804	AssignmentExpression	ln = l		4789696	0		=			
ANR	4790805	Identifier	ln		4789696	0					
ANR	4790806	Identifier	l		4789696	1					
ANR	4790807	ForStatement	for ( i = 0 ; countof ( upd_string_a ) > i ; ++ i )		4789696	33					
ANR	4790808	ForInit	i = 0 ;	1400:12:59374:59379	4789696	0	True				
ANR	4790809	AssignmentExpression	i = 0		4789696	0		=			
ANR	4790810	Identifier	i		4789696	0					
ANR	4790811	PrimaryExpression	0		4789696	1					
ANR	4790812	Condition	countof ( upd_string_a ) > i	1400:19:59381:59405	4789696	1	True				
ANR	4790813	RelationalExpression	countof ( upd_string_a ) > i		4789696	0		>			
ANR	4790814	CallExpression	countof ( upd_string_a )		4789696	0					
ANR	4790815	Callee	countof		4789696	0					
ANR	4790816	Identifier	countof		4789696	0					
ANR	4790817	ArgumentList	upd_string_a		4789696	1					
ANR	4790818	Argument	upd_string_a		4789696	0					
ANR	4790819	Identifier	upd_string_a		4789696	0					
ANR	4790820	Identifier	i		4789696	1					
ANR	4790821	UnaryExpression	++ i	1400:46:59408:59410	4789696	2	True				
ANR	4790822	IncDec	++		4789696	0					
ANR	4790823	Identifier	i		4789696	1					
ANR	4790824	CompoundStatement		154:51:5596:5596	4789696	3					
ANR	4790825	IfStatement	if ( upd_string_a [ i ] )		4789696	0					
ANR	4790826	Condition	upd_string_a [ i ]	1401:13:59428:59442	4789696	0	True				
ANR	4790827	ArrayIndexing	upd_string_a [ i ]		4789696	0					
ANR	4790828	Identifier	upd_string_a		4789696	0					
ANR	4790829	Identifier	i		4789696	1					
ANR	4790830	CompoundStatement		155:30:5628:5628	4789696	1					
ANR	4790831	ExpressionStatement	l = strlen ( upd_string_a [ i ] )	1402:12:59459:59486	4789696	0	True				
ANR	4790832	AssignmentExpression	l = strlen ( upd_string_a [ i ] )		4789696	0		=			
ANR	4790833	Identifier	l		4789696	0					
ANR	4790834	CallExpression	strlen ( upd_string_a [ i ] )		4789696	1					
ANR	4790835	Callee	strlen		4789696	0					
ANR	4790836	Identifier	strlen		4789696	0					
ANR	4790837	ArgumentList	upd_string_a [ i ]		4789696	1					
ANR	4790838	Argument	upd_string_a [ i ]		4789696	0					
ANR	4790839	ArrayIndexing	upd_string_a [ i ]		4789696	0					
ANR	4790840	Identifier	upd_string_a		4789696	0					
ANR	4790841	Identifier	i		4789696	1					
ANR	4790842	IfStatement	if ( ln < l )		4789696	1					
ANR	4790843	Condition	ln < l	1403:15:59503:59508	4789696	0	True				
ANR	4790844	RelationalExpression	ln < l		4789696	0		<			
ANR	4790845	Identifier	ln		4789696	0					
ANR	4790846	Identifier	l		4789696	1					
ANR	4790847	ExpressionStatement	ln = l	1403:23:59511:59517	4789696	1	True				
ANR	4790848	AssignmentExpression	ln = l		4789696	0		=			
ANR	4790849	Identifier	ln		4789696	0					
ANR	4790850	Identifier	l		4789696	1					
ANR	4790851	ForStatement	for ( i = 0 ; countof ( upd_float_a ) > i ; ++ i )		4789696	34					
ANR	4790852	ForInit	i = 0 ;	1407:12:59554:59559	4789696	0	True				
ANR	4790853	AssignmentExpression	i = 0		4789696	0		=			
ANR	4790854	Identifier	i		4789696	0					
ANR	4790855	PrimaryExpression	0		4789696	1					
ANR	4790856	Condition	countof ( upd_float_a ) > i	1407:19:59561:59584	4789696	1	True				
ANR	4790857	RelationalExpression	countof ( upd_float_a ) > i		4789696	0		>			
ANR	4790858	CallExpression	countof ( upd_float_a )		4789696	0					
ANR	4790859	Callee	countof		4789696	0					
ANR	4790860	Identifier	countof		4789696	0					
ANR	4790861	ArgumentList	upd_float_a		4789696	1					
ANR	4790862	Argument	upd_float_a		4789696	0					
ANR	4790863	Identifier	upd_float_a		4789696	0					
ANR	4790864	Identifier	i		4789696	1					
ANR	4790865	UnaryExpression	++ i	1407:45:59587:59589	4789696	2	True				
ANR	4790866	IncDec	++		4789696	0					
ANR	4790867	Identifier	i		4789696	1					
ANR	4790868	CompoundStatement		161:50:5775:5775	4789696	3					
ANR	4790869	IfStatement	if ( upd_float_a [ i ] )		4789696	0					
ANR	4790870	Condition	upd_float_a [ i ]	1408:13:59607:59620	4789696	0	True				
ANR	4790871	ArrayIndexing	upd_float_a [ i ]		4789696	0					
ANR	4790872	Identifier	upd_float_a		4789696	0					
ANR	4790873	Identifier	i		4789696	1					
ANR	4790874	CompoundStatement		162:29:5806:5806	4789696	1					
ANR	4790875	ExpressionStatement	l = strlen ( upd_float_a [ i ] )	1409:12:59637:59663	4789696	0	True				
ANR	4790876	AssignmentExpression	l = strlen ( upd_float_a [ i ] )		4789696	0		=			
ANR	4790877	Identifier	l		4789696	0					
ANR	4790878	CallExpression	strlen ( upd_float_a [ i ] )		4789696	1					
ANR	4790879	Callee	strlen		4789696	0					
ANR	4790880	Identifier	strlen		4789696	0					
ANR	4790881	ArgumentList	upd_float_a [ i ]		4789696	1					
ANR	4790882	Argument	upd_float_a [ i ]		4789696	0					
ANR	4790883	ArrayIndexing	upd_float_a [ i ]		4789696	0					
ANR	4790884	Identifier	upd_float_a		4789696	0					
ANR	4790885	Identifier	i		4789696	1					
ANR	4790886	IfStatement	if ( ln < l )		4789696	1					
ANR	4790887	Condition	ln < l	1410:15:59680:59685	4789696	0	True				
ANR	4790888	RelationalExpression	ln < l		4789696	0		<			
ANR	4790889	Identifier	ln		4789696	0					
ANR	4790890	Identifier	l		4789696	1					
ANR	4790891	ExpressionStatement	ln = l	1410:23:59688:59694	4789696	1	True				
ANR	4790892	AssignmentExpression	ln = l		4789696	0		=			
ANR	4790893	Identifier	ln		4789696	0					
ANR	4790894	Identifier	l		4789696	1					
ANR	4790895	ForStatement	for ( i = 0 ; countof ( upd_choice ) > i ; ++ i )		4789696	35					
ANR	4790896	ForInit	i = 0 ;	1414:12:59731:59736	4789696	0	True				
ANR	4790897	AssignmentExpression	i = 0		4789696	0		=			
ANR	4790898	Identifier	i		4789696	0					
ANR	4790899	PrimaryExpression	0		4789696	1					
ANR	4790900	Condition	countof ( upd_choice ) > i	1414:19:59738:59760	4789696	1	True				
ANR	4790901	RelationalExpression	countof ( upd_choice ) > i		4789696	0		>			
ANR	4790902	CallExpression	countof ( upd_choice )		4789696	0					
ANR	4790903	Callee	countof		4789696	0					
ANR	4790904	Identifier	countof		4789696	0					
ANR	4790905	ArgumentList	upd_choice		4789696	1					
ANR	4790906	Argument	upd_choice		4789696	0					
ANR	4790907	Identifier	upd_choice		4789696	0					
ANR	4790908	Identifier	i		4789696	1					
ANR	4790909	UnaryExpression	++ i	1414:44:59763:59765	4789696	2	True				
ANR	4790910	IncDec	++		4789696	0					
ANR	4790911	Identifier	i		4789696	1					
ANR	4790912	CompoundStatement		168:49:5951:5951	4789696	3					
ANR	4790913	IfStatement	if ( upd_choice [ i ] )		4789696	0					
ANR	4790914	Condition	upd_choice [ i ]	1415:13:59783:59795	4789696	0	True				
ANR	4790915	ArrayIndexing	upd_choice [ i ]		4789696	0					
ANR	4790916	Identifier	upd_choice		4789696	0					
ANR	4790917	Identifier	i		4789696	1					
ANR	4790918	CompoundStatement		169:28:5981:5981	4789696	1					
ANR	4790919	ExpressionStatement	"errprintf ( udev -> memory , ""%*s = %-*s (%2d)\\n"" , ln , upd_choice [ i ] [ 0 ] , lv , upd_choice [ i ] [ upd -> choice [ i ] ] , upd -> choice [ i ] )"	1416:12:59812:59940	4789696	0	True				
ANR	4790920	CallExpression	"errprintf ( udev -> memory , ""%*s = %-*s (%2d)\\n"" , ln , upd_choice [ i ] [ 0 ] , lv , upd_choice [ i ] [ upd -> choice [ i ] ] , upd -> choice [ i ] )"		4789696	0					
ANR	4790921	Callee	errprintf		4789696	0					
ANR	4790922	Identifier	errprintf		4789696	0					
ANR	4790923	ArgumentList	udev -> memory		4789696	1					
ANR	4790924	Argument	udev -> memory		4789696	0					
ANR	4790925	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790926	Identifier	udev		4789696	0					
ANR	4790927	Identifier	memory		4789696	1					
ANR	4790928	Argument	"""%*s = %-*s (%2d)\\n"""		4789696	1					
ANR	4790929	PrimaryExpression	"""%*s = %-*s (%2d)\\n"""		4789696	0					
ANR	4790930	Argument	ln		4789696	2					
ANR	4790931	Identifier	ln		4789696	0					
ANR	4790932	Argument	upd_choice [ i ] [ 0 ]		4789696	3					
ANR	4790933	ArrayIndexing	upd_choice [ i ] [ 0 ]		4789696	0					
ANR	4790934	ArrayIndexing	upd_choice [ i ]		4789696	0					
ANR	4790935	Identifier	upd_choice		4789696	0					
ANR	4790936	Identifier	i		4789696	1					
ANR	4790937	PrimaryExpression	0		4789696	1					
ANR	4790938	Argument	lv		4789696	4					
ANR	4790939	Identifier	lv		4789696	0					
ANR	4790940	Argument	upd_choice [ i ] [ upd -> choice [ i ] ]		4789696	5					
ANR	4790941	ArrayIndexing	upd_choice [ i ] [ upd -> choice [ i ] ]		4789696	0					
ANR	4790942	ArrayIndexing	upd_choice [ i ]		4789696	0					
ANR	4790943	Identifier	upd_choice		4789696	0					
ANR	4790944	Identifier	i		4789696	1					
ANR	4790945	ArrayIndexing	upd -> choice [ i ]		4789696	1					
ANR	4790946	PtrMemberAccess	upd -> choice		4789696	0					
ANR	4790947	Identifier	upd		4789696	0					
ANR	4790948	Identifier	choice		4789696	1					
ANR	4790949	Identifier	i		4789696	1					
ANR	4790950	Argument	upd -> choice [ i ]		4789696	6					
ANR	4790951	ArrayIndexing	upd -> choice [ i ]		4789696	0					
ANR	4790952	PtrMemberAccess	upd -> choice		4789696	0					
ANR	4790953	Identifier	upd		4789696	0					
ANR	4790954	Identifier	choice		4789696	1					
ANR	4790955	Identifier	i		4789696	1					
ANR	4790956	ElseStatement	else		4789696	0					
ANR	4790957	CompoundStatement		172:17:6142:6142	4789696	0					
ANR	4790958	ExpressionStatement	"errprintf ( udev -> memory , ""%*s[%2d] = %2d\\n"" , ln - 4 , ""upd_choice"" , i , upd -> choice [ i ] )"	1419:12:59973:60066	4789696	0	True				
ANR	4790959	CallExpression	"errprintf ( udev -> memory , ""%*s[%2d] = %2d\\n"" , ln - 4 , ""upd_choice"" , i , upd -> choice [ i ] )"		4789696	0					
ANR	4790960	Callee	errprintf		4789696	0					
ANR	4790961	Identifier	errprintf		4789696	0					
ANR	4790962	ArgumentList	udev -> memory		4789696	1					
ANR	4790963	Argument	udev -> memory		4789696	0					
ANR	4790964	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4790965	Identifier	udev		4789696	0					
ANR	4790966	Identifier	memory		4789696	1					
ANR	4790967	Argument	"""%*s[%2d] = %2d\\n"""		4789696	1					
ANR	4790968	PrimaryExpression	"""%*s[%2d] = %2d\\n"""		4789696	0					
ANR	4790969	Argument	ln - 4		4789696	2					
ANR	4790970	AdditiveExpression	ln - 4		4789696	0		-			
ANR	4790971	Identifier	ln		4789696	0					
ANR	4790972	PrimaryExpression	4		4789696	1					
ANR	4790973	Argument	"""upd_choice"""		4789696	3					
ANR	4790974	PrimaryExpression	"""upd_choice"""		4789696	0					
ANR	4790975	Argument	i		4789696	4					
ANR	4790976	Identifier	i		4789696	0					
ANR	4790977	Argument	upd -> choice [ i ]		4789696	5					
ANR	4790978	ArrayIndexing	upd -> choice [ i ]		4789696	0					
ANR	4790979	PtrMemberAccess	upd -> choice		4789696	0					
ANR	4790980	Identifier	upd		4789696	0					
ANR	4790981	Identifier	choice		4789696	1					
ANR	4790982	Identifier	i		4789696	1					
ANR	4790983	ForStatement	for ( i = 0 ; countof ( upd_flags ) > i ; ++ i )		4789696	36					
ANR	4790984	ForInit	i = 0 ;	1424:12:60103:60108	4789696	0	True				
ANR	4790985	AssignmentExpression	i = 0		4789696	0		=			
ANR	4790986	Identifier	i		4789696	0					
ANR	4790987	PrimaryExpression	0		4789696	1					
ANR	4790988	Condition	countof ( upd_flags ) > i	1424:19:60110:60131	4789696	1	True				
ANR	4790989	RelationalExpression	countof ( upd_flags ) > i		4789696	0		>			
ANR	4790990	CallExpression	countof ( upd_flags )		4789696	0					
ANR	4790991	Callee	countof		4789696	0					
ANR	4790992	Identifier	countof		4789696	0					
ANR	4790993	ArgumentList	upd_flags		4789696	1					
ANR	4790994	Argument	upd_flags		4789696	0					
ANR	4790995	Identifier	upd_flags		4789696	0					
ANR	4790996	Identifier	i		4789696	1					
ANR	4790997	UnaryExpression	++ i	1424:43:60134:60136	4789696	2	True				
ANR	4790998	IncDec	++		4789696	0					
ANR	4790999	Identifier	i		4789696	1					
ANR	4791000	CompoundStatement		178:48:6322:6322	4789696	3					
ANR	4791001	IfStatement	if ( upd_flags [ i ] )		4789696	0					
ANR	4791002	Condition	upd_flags [ i ]	1425:13:60154:60165	4789696	0	True				
ANR	4791003	ArrayIndexing	upd_flags [ i ]		4789696	0					
ANR	4791004	Identifier	upd_flags		4789696	0					
ANR	4791005	Identifier	i		4789696	1					
ANR	4791006	CompoundStatement		179:27:6351:6351	4789696	1					
ANR	4791007	ExpressionStatement	"errprintf ( udev -> memory , ""%*s = %s\\n"" , ln , upd_flags [ i ] , ( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"" )"	1426:12:60182:60302	4789696	0	True				
ANR	4791008	CallExpression	"errprintf ( udev -> memory , ""%*s = %s\\n"" , ln , upd_flags [ i ] , ( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"" )"		4789696	0					
ANR	4791009	Callee	errprintf		4789696	0					
ANR	4791010	Identifier	errprintf		4789696	0					
ANR	4791011	ArgumentList	udev -> memory		4789696	1					
ANR	4791012	Argument	udev -> memory		4789696	0					
ANR	4791013	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4791014	Identifier	udev		4789696	0					
ANR	4791015	Identifier	memory		4789696	1					
ANR	4791016	Argument	"""%*s = %s\\n"""		4789696	1					
ANR	4791017	PrimaryExpression	"""%*s = %s\\n"""		4789696	0					
ANR	4791018	Argument	ln		4789696	2					
ANR	4791019	Identifier	ln		4789696	0					
ANR	4791020	Argument	upd_flags [ i ]		4789696	3					
ANR	4791021	ArrayIndexing	upd_flags [ i ]		4789696	0					
ANR	4791022	Identifier	upd_flags		4789696	0					
ANR	4791023	Identifier	i		4789696	1					
ANR	4791024	Argument	"( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"""		4789696	4					
ANR	4791025	ConditionalExpression	"( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"""		4789696	0					
ANR	4791026	Condition	( ( uint32_t ) 1 << i ) & upd -> flags		4789696	0					
ANR	4791027	BitAndExpression	( ( uint32_t ) 1 << i ) & upd -> flags		4789696	0		&			
ANR	4791028	ShiftExpression	( uint32_t ) 1 << i		4789696	0		<<			
ANR	4791029	CastExpression	( uint32_t ) 1		4789696	0					
ANR	4791030	CastTarget	uint32_t		4789696	0					
ANR	4791031	PrimaryExpression	1		4789696	1					
ANR	4791032	Identifier	i		4789696	1					
ANR	4791033	PtrMemberAccess	upd -> flags		4789696	1					
ANR	4791034	Identifier	upd		4789696	0					
ANR	4791035	Identifier	flags		4789696	1					
ANR	4791036	PrimaryExpression	"""true"""		4789696	1					
ANR	4791037	PrimaryExpression	"""false"""		4789696	2					
ANR	4791038	ElseStatement	else		4789696	0					
ANR	4791039	CompoundStatement		182:17:6504:6504	4789696	0					
ANR	4791040	ExpressionStatement	"errprintf ( udev -> memory , ""%*s[%2d] = %s\\n"" , ln - 4 , ""upd_flags"" , i , ( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"" )"	1429:12:60335:60463	4789696	0	True				
ANR	4791041	CallExpression	"errprintf ( udev -> memory , ""%*s[%2d] = %s\\n"" , ln - 4 , ""upd_flags"" , i , ( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"" )"		4789696	0					
ANR	4791042	Callee	errprintf		4789696	0					
ANR	4791043	Identifier	errprintf		4789696	0					
ANR	4791044	ArgumentList	udev -> memory		4789696	1					
ANR	4791045	Argument	udev -> memory		4789696	0					
ANR	4791046	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4791047	Identifier	udev		4789696	0					
ANR	4791048	Identifier	memory		4789696	1					
ANR	4791049	Argument	"""%*s[%2d] = %s\\n"""		4789696	1					
ANR	4791050	PrimaryExpression	"""%*s[%2d] = %s\\n"""		4789696	0					
ANR	4791051	Argument	ln - 4		4789696	2					
ANR	4791052	AdditiveExpression	ln - 4		4789696	0		-			
ANR	4791053	Identifier	ln		4789696	0					
ANR	4791054	PrimaryExpression	4		4789696	1					
ANR	4791055	Argument	"""upd_flags"""		4789696	3					
ANR	4791056	PrimaryExpression	"""upd_flags"""		4789696	0					
ANR	4791057	Argument	i		4789696	4					
ANR	4791058	Identifier	i		4789696	0					
ANR	4791059	Argument	"( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"""		4789696	5					
ANR	4791060	ConditionalExpression	"( ( uint32_t ) 1 << i ) & upd -> flags ? ""true"" : ""false"""		4789696	0					
ANR	4791061	Condition	( ( uint32_t ) 1 << i ) & upd -> flags		4789696	0					
ANR	4791062	BitAndExpression	( ( uint32_t ) 1 << i ) & upd -> flags		4789696	0		&			
ANR	4791063	ShiftExpression	( uint32_t ) 1 << i		4789696	0		<<			
ANR	4791064	CastExpression	( uint32_t ) 1		4789696	0					
ANR	4791065	CastTarget	uint32_t		4789696	0					
ANR	4791066	PrimaryExpression	1		4789696	1					
ANR	4791067	Identifier	i		4789696	1					
ANR	4791068	PtrMemberAccess	upd -> flags		4789696	1					
ANR	4791069	Identifier	upd		4789696	0					
ANR	4791070	Identifier	flags		4789696	1					
ANR	4791071	PrimaryExpression	"""true"""		4789696	1					
ANR	4791072	PrimaryExpression	"""false"""		4789696	2					
ANR	4791073	ForStatement	for ( i = 0 ; countof ( upd_ints ) > i ; ++ i )		4789696	37					
ANR	4791074	ForInit	i = 0 ;	1435:12:60501:60506	4789696	0	True				
ANR	4791075	AssignmentExpression	i = 0		4789696	0		=			
ANR	4791076	Identifier	i		4789696	0					
ANR	4791077	PrimaryExpression	0		4789696	1					
ANR	4791078	Condition	countof ( upd_ints ) > i	1435:19:60508:60528	4789696	1	True				
ANR	4791079	RelationalExpression	countof ( upd_ints ) > i		4789696	0		>			
ANR	4791080	CallExpression	countof ( upd_ints )		4789696	0					
ANR	4791081	Callee	countof		4789696	0					
ANR	4791082	Identifier	countof		4789696	0					
ANR	4791083	ArgumentList	upd_ints		4789696	1					
ANR	4791084	Argument	upd_ints		4789696	0					
ANR	4791085	Identifier	upd_ints		4789696	0					
ANR	4791086	Identifier	i		4789696	1					
ANR	4791087	UnaryExpression	++ i	1435:42:60531:60533	4789696	2	True				
ANR	4791088	IncDec	++		4789696	0					
ANR	4791089	Identifier	i		4789696	1					
ANR	4791090	CompoundStatement		189:47:6719:6719	4789696	3					
ANR	4791091	IfStatement	if ( upd_ints [ i ] )		4789696	0					
ANR	4791092	Condition	upd_ints [ i ]	1436:13:60551:60561	4789696	0	True				
ANR	4791093	ArrayIndexing	upd_ints [ i ]		4789696	0					
ANR	4791094	Identifier	upd_ints		4789696	0					
ANR	4791095	Identifier	i		4789696	1					
ANR	4791096	CompoundStatement		190:26:6747:6747	4789696	1					
ANR	4791097	ExpressionStatement	"errprintf ( udev -> memory , ""%*s = %5d\\n"" , ln , upd_ints [ i ] , upd -> ints [ i ] )"	1437:12:60578:60643	4789696	0	True				
ANR	4791098	CallExpression	"errprintf ( udev -> memory , ""%*s = %5d\\n"" , ln , upd_ints [ i ] , upd -> ints [ i ] )"		4789696	0					
ANR	4791099	Callee	errprintf		4789696	0					
ANR	4791100	Identifier	errprintf		4789696	0					
ANR	4791101	ArgumentList	udev -> memory		4789696	1					
ANR	4791102	Argument	udev -> memory		4789696	0					
ANR	4791103	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4791104	Identifier	udev		4789696	0					
ANR	4791105	Identifier	memory		4789696	1					
ANR	4791106	Argument	"""%*s = %5d\\n"""		4789696	1					
ANR	4791107	PrimaryExpression	"""%*s = %5d\\n"""		4789696	0					
ANR	4791108	Argument	ln		4789696	2					
ANR	4791109	Identifier	ln		4789696	0					
ANR	4791110	Argument	upd_ints [ i ]		4789696	3					
ANR	4791111	ArrayIndexing	upd_ints [ i ]		4789696	0					
ANR	4791112	Identifier	upd_ints		4789696	0					
ANR	4791113	Identifier	i		4789696	1					
ANR	4791114	Argument	upd -> ints [ i ]		4789696	4					
ANR	4791115	ArrayIndexing	upd -> ints [ i ]		4789696	0					
ANR	4791116	PtrMemberAccess	upd -> ints		4789696	0					
ANR	4791117	Identifier	upd		4789696	0					
ANR	4791118	Identifier	ints		4789696	1					
ANR	4791119	Identifier	i		4789696	1					
ANR	4791120	ElseStatement	else		4789696	0					
ANR	4791121	CompoundStatement		192:17:6845:6845	4789696	0					
ANR	4791122	ExpressionStatement	"errprintf ( udev -> memory , ""%*s[%2d] = %5d\\n"" , ln - 4 , ""upd_ints"" , i , upd -> ints [ i ] )"	1439:12:60676:60749	4789696	0	True				
ANR	4791123	CallExpression	"errprintf ( udev -> memory , ""%*s[%2d] = %5d\\n"" , ln - 4 , ""upd_ints"" , i , upd -> ints [ i ] )"		4789696	0					
ANR	4791124	Callee	errprintf		4789696	0					
ANR	4791125	Identifier	errprintf		4789696	0					
ANR	4791126	ArgumentList	udev -> memory		4789696	1					
ANR	4791127	Argument	udev -> memory		4789696	0					
ANR	4791128	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4791129	Identifier	udev		4789696	0					
ANR	4791130	Identifier	memory		4789696	1					
ANR	4791131	Argument	"""%*s[%2d] = %5d\\n"""		4789696	1					
ANR	4791132	PrimaryExpression	"""%*s[%2d] = %5d\\n"""		4789696	0					
ANR	4791133	Argument	ln - 4		4789696	2					
ANR	4791134	AdditiveExpression	ln - 4		4789696	0		-			
ANR	4791135	Identifier	ln		4789696	0					
ANR	4791136	PrimaryExpression	4		4789696	1					
ANR	4791137	Argument	"""upd_ints"""		4789696	3					
ANR	4791138	PrimaryExpression	"""upd_ints"""		4789696	0					
ANR	4791139	Argument	i		4789696	4					
ANR	4791140	Identifier	i		4789696	0					
ANR	4791141	Argument	upd -> ints [ i ]		4789696	5					
ANR	4791142	ArrayIndexing	upd -> ints [ i ]		4789696	0					
ANR	4791143	PtrMemberAccess	upd -> ints		4789696	0					
ANR	4791144	Identifier	upd		4789696	0					
ANR	4791145	Identifier	ints		4789696	1					
ANR	4791146	Identifier	i		4789696	1					
ANR	4791147	ExpressionStatement	"errprintf ( udev -> memory , ""\\n%sready to print\\n\\n"" , B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) ? ""NOT "" : """" )"	1445:6:60789:60916	4789696	13	True				
ANR	4791148	CallExpression	"errprintf ( udev -> memory , ""\\n%sready to print\\n\\n"" , B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) ? ""NOT "" : """" )"		4789696	0					
ANR	4791149	Callee	errprintf		4789696	0					
ANR	4791150	Identifier	errprintf		4789696	0					
ANR	4791151	ArgumentList	udev -> memory		4789696	1					
ANR	4791152	Argument	udev -> memory		4789696	0					
ANR	4791153	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4791154	Identifier	udev		4789696	0					
ANR	4791155	Identifier	memory		4789696	1					
ANR	4791156	Argument	"""\\n%sready to print\\n\\n"""		4789696	1					
ANR	4791157	PrimaryExpression	"""\\n%sready to print\\n\\n"""		4789696	0					
ANR	4791158	Argument	"B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) ? ""NOT "" : """""		4789696	2					
ANR	4791159	ConditionalExpression	"B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) ) ? ""NOT "" : """""		4789696	0					
ANR	4791160	Condition	B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )		4789696	0					
ANR	4791161	EqualityExpression	B_OK4GO != ( upd -> flags & ( B_OK4GO | B_ERROR ) )		4789696	0		!=			
ANR	4791162	Identifier	B_OK4GO		4789696	0					
ANR	4791163	BitAndExpression	upd -> flags & ( B_OK4GO | B_ERROR )		4789696	1		&			
ANR	4791164	PtrMemberAccess	upd -> flags		4789696	0					
ANR	4791165	Identifier	upd		4789696	0					
ANR	4791166	Identifier	flags		4789696	1					
ANR	4791167	InclusiveOrExpression	B_OK4GO | B_ERROR		4789696	1		|			
ANR	4791168	Identifier	B_OK4GO		4789696	0					
ANR	4791169	Identifier	B_ERROR		4789696	1					
ANR	4791170	PrimaryExpression	"""NOT """		4789696	1					
ANR	4791171	PrimaryExpression	""""""		4789696	2					
ANR	4791172	ExpressionStatement	"errprintf ( udev -> memory , ""RETURN: %d = upd_open(0x%05lx)\\n"" , error , ( long ) pdev )"	1453:6:60972:61058	4789696	10	True				
ANR	4791173	CallExpression	"errprintf ( udev -> memory , ""RETURN: %d = upd_open(0x%05lx)\\n"" , error , ( long ) pdev )"		4789696	0					
ANR	4791174	Callee	errprintf		4789696	0					
ANR	4791175	Identifier	errprintf		4789696	0					
ANR	4791176	ArgumentList	udev -> memory		4789696	1					
ANR	4791177	Argument	udev -> memory		4789696	0					
ANR	4791178	PtrMemberAccess	udev -> memory		4789696	0					
ANR	4791179	Identifier	udev		4789696	0					
ANR	4791180	Identifier	memory		4789696	1					
ANR	4791181	Argument	"""RETURN: %d = upd_open(0x%05lx)\\n"""		4789696	1					
ANR	4791182	PrimaryExpression	"""RETURN: %d = upd_open(0x%05lx)\\n"""		4789696	0					
ANR	4791183	Argument	error		4789696	2					
ANR	4791184	Identifier	error		4789696	0					
ANR	4791185	Argument	( long ) pdev		4789696	3					
ANR	4791186	CastExpression	( long ) pdev		4789696	0					
ANR	4791187	CastTarget	long		4789696	0					
ANR	4791188	Identifier	pdev		4789696	1					
ANR	4791189	ReturnStatement	return error ;	1457:3:61071:61083	4789696	11	True				
ANR	4791190	Identifier	error		4789696	0					
ANR	4791191	ReturnType	static int		4789696	1					
ANR	4791192	Identifier	upd_open		4789696	2					
ANR	4791193	ParameterList	gx_device * pdev		4789696	3					
ANR	4791194	Parameter	gx_device * pdev	1246:9:53799:53813	4789696	0	True				
ANR	4791195	ParameterType	gx_device *		4789696	0					
ANR	4791196	Identifier	pdev		4789696	1					
ANR	4791197	CFGEntryNode	ENTRY		4789696		True				
ANR	4791198	CFGExitNode	EXIT		4789696		True				
ANR	4791199	Symbol	gdev_prn_open		4789696						
ANR	4791200	Symbol	* upd_strings		4789696						
ANR	4791201	Symbol	upd_ints		4789696						
ANR	4791202	Symbol	upd -> rwidth		4789696						
ANR	4791203	Symbol	upd -> yscan		4789696						
ANR	4791204	Symbol	dev_l_margin		4789696						
ANR	4791205	Symbol	* udev		4789696						
ANR	4791206	Symbol	* FA_MARGINS		4789696						
ANR	4791207	Symbol	B_BUF		4789696						
ANR	4791208	Symbol	dev_b_margin		4789696						
ANR	4791209	Symbol	udev -> height		4789696						
ANR	4791210	Symbol	upd -> nbytes		4789696						
ANR	4791211	Symbol	dev_t_margin		4789696						
ANR	4791212	Symbol	* * upd_choice		4789696						
ANR	4791213	Symbol	* upd_flags		4789696						
ANR	4791214	Symbol	* upd -> float_a		4789696						
ANR	4791215	Symbol	dev_r_margin		4789696						
ANR	4791216	Symbol	want		4789696						
ANR	4791217	Symbol	upd		4789696						
ANR	4791218	Symbol	* upd_string_a		4789696						
ANR	4791219	Symbol	* * upd -> float_a		4789696						
ANR	4791220	Symbol	* * udev		4789696						
ANR	4791221	Symbol	countof		4789696						
ANR	4791222	Symbol	gs_malloc		4789696						
ANR	4791223	Symbol	upd -> yscnbuf		4789696						
ANR	4791224	Symbol	FA_MARGINS		4789696						
ANR	4791225	Symbol	upd -> pwidth		4789696						
ANR	4791226	Symbol	upd -> pheight		4789696						
ANR	4791227	Symbol	* upd -> choice		4789696						
ANR	4791228	Symbol	upd -> flags		4789696						
ANR	4791229	Symbol	upd -> gsheight		4789696						
ANR	4791230	Symbol	* upd_choice		4789696						
ANR	4791231	Symbol	* upd		4789696						
ANR	4791232	Symbol	upd -> pdwidth		4789696						
ANR	4791233	Symbol	upd_flags		4789696						
ANR	4791234	Symbol	upd_string_a		4789696						
ANR	4791235	Symbol	* udev -> upd		4789696						
ANR	4791236	Symbol	upd -> ocomp		4789696						
ANR	4791237	Symbol	i		4789696						
ANR	4791238	Symbol	udev -> upd -> pdwidth		4789696						
ANR	4791239	Symbol	j		4789696						
ANR	4791240	Symbol	upd_float_a		4789696						
ANR	4791241	Symbol	* * upd -> choice		4789696						
ANR	4791242	Symbol	l		4789696						
ANR	4791243	Symbol	m		4789696						
ANR	4791244	Symbol	B_OK4GO		4789696						
ANR	4791245	Symbol	upd -> yprinter		4789696						
ANR	4791246	Symbol	B_MAP		4789696						
ANR	4791247	Symbol	upd -> noutbuf		4789696						
ANR	4791248	Symbol	upd -> float_a [ FA_MARGINS ] . size		4789696						
ANR	4791249	Symbol	upd -> nscnbuf		4789696						
ANR	4791250	Symbol	B_YFLIP		4789696						
ANR	4791251	Symbol	udev -> upd -> pdheight		4789696						
ANR	4791252	Symbol	* pdev		4789696						
ANR	4791253	Symbol	upd_open_map		4789696						
ANR	4791254	Symbol	upd -> lf		4789696						
ANR	4791255	Symbol	* * upd		4789696						
ANR	4791256	Symbol	upd -> ngsbuf		4789696						
ANR	4791257	Symbol	* upd_int_a		4789696						
ANR	4791258	Symbol	~B_OK4GO		4789696						
ANR	4791259	Symbol	ln		4789696						
ANR	4791260	Symbol	upd -> icomp		4789696						
ANR	4791261	Symbol	upd -> ipass		4789696						
ANR	4791262	Symbol	lv		4789696						
ANR	4791263	Symbol	pdev		4789696						
ANR	4791264	Symbol	upd -> nlimits		4789696						
ANR	4791265	Symbol	strlen		4789696						
ANR	4791266	Symbol	pdev -> memory		4789696						
ANR	4791267	Symbol	upd -> nvalbuf		4789696						
ANR	4791268	Symbol	upd_open_writer		4789696						
ANR	4791269	Symbol	* * FA_MARGINS		4789696						
ANR	4791270	Symbol	* * i		4789696						
ANR	4791271	Symbol	NULL		4789696						
ANR	4791272	Symbol	upd_strings		4789696						
ANR	4791273	Symbol	upd -> ixpass		4789696						
ANR	4791274	Symbol	upd_int_a		4789696						
ANR	4791275	Symbol	upd -> gswidth		4789696						
ANR	4791276	Symbol	udev -> y_pixels_per_inch		4789696						
ANR	4791277	Symbol	udev -> width		4789696						
ANR	4791278	Symbol	upd -> xprinter		4789696						
ANR	4791279	Symbol	upd_choice		4789696						
ANR	4791280	Symbol	udev		4789696						
ANR	4791281	Symbol	true		4789696						
ANR	4791282	Symbol	upd -> float_a		4789696						
ANR	4791283	Symbol	upd -> ints		4789696						
ANR	4791284	Symbol	* upd_ints		4789696						
ANR	4791285	Symbol	upd -> gsbuf		4789696						
ANR	4791286	Symbol	B_ERROR		4789696						
ANR	4791287	Symbol	gx_device_raster		4789696						
ANR	4791288	Symbol	* upd_float_a		4789696						
ANR	4791289	Symbol	error		4789696						
ANR	4791290	Symbol	upd -> ncomp		4789696						
ANR	4791291	Symbol	udev -> upd		4789696						
ANR	4791292	Symbol	* upd -> float_a [ FA_MARGINS ] . data		4789696						
ANR	4791293	Symbol	upd -> pdheight		4789696						
ANR	4791294	Symbol	udev -> memory		4789696						
ANR	4791295	Symbol	upd -> float_a [ FA_MARGINS ] . data		4789696						
ANR	4791296	Symbol	upd -> scnmsk		4789696						
ANR	4791297	Symbol	* * * upd		4789696						
ANR	4791298	Symbol	upd -> choice		4789696						
ANR	4791299	Symbol	gs_error_VMerror		4789696						
ANR	4791300	Symbol	udev -> x_pixels_per_inch		4789696						
ANR	4791301	Symbol	* i		4789696						
ANR	4791302	Symbol	* upd -> ints		4789696						
ANR	4791303	Symbol	* j		4789696						
ANR	4791304	Symbol	* m		4789696						
ANR	4791305	Symbol	pdev -> child		4789696						
ANR	4791306	Function	upd_close	1464:0:61311:63200							
ANR	4791307	FunctionDef	upd_close (gx_device * pdev)		4791306	0					
ANR	4791308	CompoundStatement		1466:0:61349:63200	4791306	0					
ANR	4791309	Statement	upd_device	1467:3:61354:61363	4791306	0	True				
ANR	4791310	Statement	*	1467:14:61365:61365	4791306	1	True				
ANR	4791311	Statement	const	1467:15:61366:61370	4791306	2	True				
ANR	4791312	ExpressionStatement	udev = ( upd_device * ) pdev	1467:21:61372:61402	4791306	3	True				
ANR	4791313	AssignmentExpression	udev = ( upd_device * ) pdev		4791306	0		=			
ANR	4791314	Identifier	udev		4791306	0					
ANR	4791315	CastExpression	( upd_device * ) pdev		4791306	1					
ANR	4791316	CastTarget	upd_device *		4791306	0					
ANR	4791317	Identifier	pdev		4791306	1					
ANR	4791318	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	1468:3:61407:61445	4791306	4	True				
ANR	4791319	IdentifierDecl	upd = udev -> upd		4791306	0					
ANR	4791320	IdentifierDeclType	const upd_p		4791306	0					
ANR	4791321	Identifier	upd		4791306	1					
ANR	4791322	AssignmentExpression	upd = udev -> upd		4791306	2		=			
ANR	4791323	Identifier	upd		4791306	0					
ANR	4791324	PtrMemberAccess	udev -> upd		4791306	1					
ANR	4791325	Identifier	udev		4791306	0					
ANR	4791326	Identifier	upd		4791306	1					
ANR	4791327	IdentifierDeclStatement	int error = 0 ;	1469:3:61450:61471	4791306	5	True				
ANR	4791328	IdentifierDecl	error = 0		4791306	0					
ANR	4791329	IdentifierDeclType	int		4791306	0					
ANR	4791330	Identifier	error		4791306	1					
ANR	4791331	AssignmentExpression	error = 0		4791306	2		=			
ANR	4791332	Identifier	error		4791306	0					
ANR	4791333	PrimaryExpression	0		4791306	1					
ANR	4791334	IdentifierDeclStatement	int code ;	1470:3:61476:61492	4791306	6	True				
ANR	4791335	IdentifierDecl	code		4791306	0					
ANR	4791336	IdentifierDeclType	int		4791306	0					
ANR	4791337	Identifier	code		4791306	1					
ANR	4791338	ExpressionStatement	"errprintf ( udev -> memory , ""CALL: upd_close(0x%05lx)\\n"" , ( long ) pdev )"	1473:3:61532:61595	4791306	7	True				
ANR	4791339	CallExpression	"errprintf ( udev -> memory , ""CALL: upd_close(0x%05lx)\\n"" , ( long ) pdev )"		4791306	0					
ANR	4791340	Callee	errprintf		4791306	0					
ANR	4791341	Identifier	errprintf		4791306	0					
ANR	4791342	ArgumentList	udev -> memory		4791306	1					
ANR	4791343	Argument	udev -> memory		4791306	0					
ANR	4791344	PtrMemberAccess	udev -> memory		4791306	0					
ANR	4791345	Identifier	udev		4791306	0					
ANR	4791346	Identifier	memory		4791306	1					
ANR	4791347	Argument	"""CALL: upd_close(0x%05lx)\\n"""		4791306	1					
ANR	4791348	PrimaryExpression	"""CALL: upd_close(0x%05lx)\\n"""		4791306	0					
ANR	4791349	Argument	( long ) pdev		4791306	2					
ANR	4791350	CastExpression	( long ) pdev		4791306	0					
ANR	4791351	CastTarget	long		4791306	0					
ANR	4791352	Identifier	pdev		4791306	1					
ANR	4791353	IfStatement	if ( upd && ( ( B_OPEN | B_OK4GO ) == ( ( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags ) ) )		4791306	8					
ANR	4791354	Condition	upd && ( ( B_OPEN | B_OK4GO ) == ( ( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags ) )	1478:7:61660:61749	4791306	0	True				
ANR	4791355	AndExpression	upd && ( ( B_OPEN | B_OK4GO ) == ( ( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags ) )		4791306	0		&&			
ANR	4791356	Identifier	upd		4791306	0					
ANR	4791357	EqualityExpression	( B_OPEN | B_OK4GO ) == ( ( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags )		4791306	1		==			
ANR	4791358	InclusiveOrExpression	B_OPEN | B_OK4GO		4791306	0		|			
ANR	4791359	Identifier	B_OPEN		4791306	0					
ANR	4791360	Identifier	B_OK4GO		4791306	1					
ANR	4791361	BitAndExpression	( B_OPEN | B_OK4GO | B_ERROR ) & upd -> flags		4791306	1		&			
ANR	4791362	InclusiveOrExpression	B_OPEN | B_OK4GO | B_ERROR		4791306	0		|			
ANR	4791363	Identifier	B_OPEN		4791306	0					
ANR	4791364	InclusiveOrExpression	B_OK4GO | B_ERROR		4791306	1		|			
ANR	4791365	Identifier	B_OK4GO		4791306	0					
ANR	4791366	Identifier	B_ERROR		4791306	1					
ANR	4791367	PtrMemberAccess	upd -> flags		4791306	1					
ANR	4791368	Identifier	upd		4791306	0					
ANR	4791369	Identifier	flags		4791306	1					
ANR	4791370	CompoundStatement		14:61:402:402	4791306	1					
ANR	4791371	IfStatement	if ( udev -> file && upd -> strings && 0 < upd -> strings [ S_CLOSE ] . size )		4791306	0					
ANR	4791372	Condition	udev -> file && upd -> strings && 0 < upd -> strings [ S_CLOSE ] . size	1481:9:61764:61823	4791306	0	True				
ANR	4791373	AndExpression	udev -> file && upd -> strings && 0 < upd -> strings [ S_CLOSE ] . size		4791306	0		&&			
ANR	4791374	PtrMemberAccess	udev -> file		4791306	0					
ANR	4791375	Identifier	udev		4791306	0					
ANR	4791376	Identifier	file		4791306	1					
ANR	4791377	AndExpression	upd -> strings && 0 < upd -> strings [ S_CLOSE ] . size		4791306	1		&&			
ANR	4791378	PtrMemberAccess	upd -> strings		4791306	0					
ANR	4791379	Identifier	upd		4791306	0					
ANR	4791380	Identifier	strings		4791306	1					
ANR	4791381	RelationalExpression	0 < upd -> strings [ S_CLOSE ] . size		4791306	1		<			
ANR	4791382	PrimaryExpression	0		4791306	0					
ANR	4791383	MemberAccess	upd -> strings [ S_CLOSE ] . size		4791306	1					
ANR	4791384	ArrayIndexing	upd -> strings [ S_CLOSE ]		4791306	0					
ANR	4791385	PtrMemberAccess	upd -> strings		4791306	0					
ANR	4791386	Identifier	upd		4791306	0					
ANR	4791387	Identifier	strings		4791306	1					
ANR	4791388	Identifier	S_CLOSE		4791306	1					
ANR	4791389	Identifier	size		4791306	1					
ANR	4791390	ExpressionStatement	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , udev -> file )"	1482:9:61835:61926	4791306	1	True				
ANR	4791391	CallExpression	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , udev -> file )"		4791306	0					
ANR	4791392	Callee	fwrite		4791306	0					
ANR	4791393	Identifier	fwrite		4791306	0					
ANR	4791394	ArgumentList	upd -> strings [ S_CLOSE ] . data		4791306	1					
ANR	4791395	Argument	upd -> strings [ S_CLOSE ] . data		4791306	0					
ANR	4791396	MemberAccess	upd -> strings [ S_CLOSE ] . data		4791306	0					
ANR	4791397	ArrayIndexing	upd -> strings [ S_CLOSE ]		4791306	0					
ANR	4791398	PtrMemberAccess	upd -> strings		4791306	0					
ANR	4791399	Identifier	upd		4791306	0					
ANR	4791400	Identifier	strings		4791306	1					
ANR	4791401	Identifier	S_CLOSE		4791306	1					
ANR	4791402	Identifier	data		4791306	1					
ANR	4791403	Argument	1		4791306	1					
ANR	4791404	PrimaryExpression	1		4791306	0					
ANR	4791405	Argument	upd -> strings [ S_CLOSE ] . size		4791306	2					
ANR	4791406	MemberAccess	upd -> strings [ S_CLOSE ] . size		4791306	0					
ANR	4791407	ArrayIndexing	upd -> strings [ S_CLOSE ]		4791306	0					
ANR	4791408	PtrMemberAccess	upd -> strings		4791306	0					
ANR	4791409	Identifier	upd		4791306	0					
ANR	4791410	Identifier	strings		4791306	1					
ANR	4791411	Identifier	S_CLOSE		4791306	1					
ANR	4791412	Identifier	size		4791306	1					
ANR	4791413	Argument	udev -> file		4791306	3					
ANR	4791414	PtrMemberAccess	udev -> file		4791306	0					
ANR	4791415	Identifier	udev		4791306	0					
ANR	4791416	Identifier	file		4791306	1					
ANR	4791417	ExpressionStatement	upd -> flags &= ~B_OPEN	1485:6:61935:61956	4791306	1	True				
ANR	4791418	AssignmentExpression	upd -> flags &= ~B_OPEN		4791306	0		&=			
ANR	4791419	PtrMemberAccess	upd -> flags		4791306	0					
ANR	4791420	Identifier	upd		4791306	0					
ANR	4791421	Identifier	flags		4791306	1					
ANR	4791422	Identifier	~B_OPEN		4791306	1					
ANR	4791423	IfStatement	if ( upd )		4791306	9					
ANR	4791424	Condition	upd	1489:6:62016:62018	4791306	0	True				
ANR	4791425	Identifier	upd		4791306	0					
ANR	4791426	CompoundStatement		24:11:671:671	4791306	1					
ANR	4791427	ExpressionStatement	upd_close_writer ( udev )	1491:6:62030:62052	4791306	0	True				
ANR	4791428	CallExpression	upd_close_writer ( udev )		4791306	0					
ANR	4791429	Callee	upd_close_writer		4791306	0					
ANR	4791430	Identifier	upd_close_writer		4791306	0					
ANR	4791431	ArgumentList	udev		4791306	1					
ANR	4791432	Argument	udev		4791306	0					
ANR	4791433	Identifier	udev		4791306	0					
ANR	4791434	IfStatement	if ( upd -> gsbuf )		4791306	1					
ANR	4791435	Condition	upd -> gsbuf	1493:9:62064:62073	4791306	0	True				
ANR	4791436	PtrMemberAccess	upd -> gsbuf		4791306	0					
ANR	4791437	Identifier	upd		4791306	0					
ANR	4791438	Identifier	gsbuf		4791306	1					
ANR	4791439	ExpressionStatement	"gs_free ( pdev -> memory , upd -> gsbuf , upd -> ngsbuf , 1 , ""uniprint/gsbuf"" )"	1494:9:62085:62149	4791306	1	True				
ANR	4791440	CallExpression	"gs_free ( pdev -> memory , upd -> gsbuf , upd -> ngsbuf , 1 , ""uniprint/gsbuf"" )"		4791306	0					
ANR	4791441	Callee	gs_free		4791306	0					
ANR	4791442	Identifier	gs_free		4791306	0					
ANR	4791443	ArgumentList	pdev -> memory		4791306	1					
ANR	4791444	Argument	pdev -> memory		4791306	0					
ANR	4791445	PtrMemberAccess	pdev -> memory		4791306	0					
ANR	4791446	Identifier	pdev		4791306	0					
ANR	4791447	Identifier	memory		4791306	1					
ANR	4791448	Argument	upd -> gsbuf		4791306	1					
ANR	4791449	PtrMemberAccess	upd -> gsbuf		4791306	0					
ANR	4791450	Identifier	upd		4791306	0					
ANR	4791451	Identifier	gsbuf		4791306	1					
ANR	4791452	Argument	upd -> ngsbuf		4791306	2					
ANR	4791453	PtrMemberAccess	upd -> ngsbuf		4791306	0					
ANR	4791454	Identifier	upd		4791306	0					
ANR	4791455	Identifier	ngsbuf		4791306	1					
ANR	4791456	Argument	1		4791306	3					
ANR	4791457	PrimaryExpression	1		4791306	0					
ANR	4791458	Argument	"""uniprint/gsbuf"""		4791306	4					
ANR	4791459	PrimaryExpression	"""uniprint/gsbuf"""		4791306	0					
ANR	4791460	ExpressionStatement	upd -> gsbuf = NULL	1495:6:62157:62175	4791306	2	True				
ANR	4791461	AssignmentExpression	upd -> gsbuf = NULL		4791306	0		=			
ANR	4791462	PtrMemberAccess	upd -> gsbuf		4791306	0					
ANR	4791463	Identifier	upd		4791306	0					
ANR	4791464	Identifier	gsbuf		4791306	1					
ANR	4791465	Identifier	NULL		4791306	1					
ANR	4791466	ExpressionStatement	upd -> ngsbuf = 0	1496:6:62183:62198	4791306	3	True				
ANR	4791467	AssignmentExpression	upd -> ngsbuf = 0		4791306	0		=			
ANR	4791468	PtrMemberAccess	upd -> ngsbuf		4791306	0					
ANR	4791469	Identifier	upd		4791306	0					
ANR	4791470	Identifier	ngsbuf		4791306	1					
ANR	4791471	PrimaryExpression	0		4791306	1					
ANR	4791472	ExpressionStatement	upd -> flags &= ~B_BUF	1497:6:62206:62226	4791306	4	True				
ANR	4791473	AssignmentExpression	upd -> flags &= ~B_BUF		4791306	0		&=			
ANR	4791474	PtrMemberAccess	upd -> flags		4791306	0					
ANR	4791475	Identifier	upd		4791306	0					
ANR	4791476	Identifier	flags		4791306	1					
ANR	4791477	Identifier	~B_BUF		4791306	1					
ANR	4791478	ExpressionStatement	upd_close_render ( udev )	1499:6:62235:62257	4791306	5	True				
ANR	4791479	CallExpression	upd_close_render ( udev )		4791306	0					
ANR	4791480	Callee	upd_close_render		4791306	0					
ANR	4791481	Identifier	upd_close_render		4791306	0					
ANR	4791482	ArgumentList	udev		4791306	1					
ANR	4791483	Argument	udev		4791306	0					
ANR	4791484	Identifier	udev		4791306	0					
ANR	4791485	ExpressionStatement	upd_close_map ( udev )	1500:6:62265:62284	4791306	6	True				
ANR	4791486	CallExpression	upd_close_map ( udev )		4791306	0					
ANR	4791487	Callee	upd_close_map		4791306	0					
ANR	4791488	Identifier	upd_close_map		4791306	0					
ANR	4791489	ArgumentList	udev		4791306	1					
ANR	4791490	Argument	udev		4791306	0					
ANR	4791491	Identifier	udev		4791306	0					
ANR	4791492	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"	1502:6:62293:62377	4791306	7	True				
ANR	4791493	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"		4791306	0					
ANR	4791494	Callee	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791495	Identifier	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791496	ArgumentList	pdev -> memory		4791306	1					
ANR	4791497	Argument	pdev -> memory		4791306	0					
ANR	4791498	PtrMemberAccess	pdev -> memory		4791306	0					
ANR	4791499	Identifier	pdev		4791306	0					
ANR	4791500	Identifier	memory		4791306	1					
ANR	4791501	Argument	upd -> choice		4791306	1					
ANR	4791502	PtrMemberAccess	upd -> choice		4791306	0					
ANR	4791503	Identifier	upd		4791306	0					
ANR	4791504	Identifier	choice		4791306	1					
ANR	4791505	Argument	countof ( upd_choice )		4791306	2					
ANR	4791506	CallExpression	countof ( upd_choice )		4791306	0					
ANR	4791507	Callee	countof		4791306	0					
ANR	4791508	Identifier	countof		4791306	0					
ANR	4791509	ArgumentList	upd_choice		4791306	1					
ANR	4791510	Argument	upd_choice		4791306	0					
ANR	4791511	Identifier	upd_choice		4791306	0					
ANR	4791512	Argument	UPD_MM_DEL_VALUE		4791306	3					
ANR	4791513	Identifier	UPD_MM_DEL_VALUE		4791306	0					
ANR	4791514	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"	1503:6:62385:62469	4791306	8	True				
ANR	4791515	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"		4791306	0					
ANR	4791516	Callee	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791517	Identifier	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791518	ArgumentList	pdev -> memory		4791306	1					
ANR	4791519	Argument	pdev -> memory		4791306	0					
ANR	4791520	PtrMemberAccess	pdev -> memory		4791306	0					
ANR	4791521	Identifier	pdev		4791306	0					
ANR	4791522	Identifier	memory		4791306	1					
ANR	4791523	Argument	upd -> ints		4791306	1					
ANR	4791524	PtrMemberAccess	upd -> ints		4791306	0					
ANR	4791525	Identifier	upd		4791306	0					
ANR	4791526	Identifier	ints		4791306	1					
ANR	4791527	Argument	countof ( upd_ints )		4791306	2					
ANR	4791528	CallExpression	countof ( upd_ints )		4791306	0					
ANR	4791529	Callee	countof		4791306	0					
ANR	4791530	Identifier	countof		4791306	0					
ANR	4791531	ArgumentList	upd_ints		4791306	1					
ANR	4791532	Argument	upd_ints		4791306	0					
ANR	4791533	Identifier	upd_ints		4791306	0					
ANR	4791534	Argument	UPD_MM_DEL_VALUE		4791306	3					
ANR	4791535	Identifier	UPD_MM_DEL_VALUE		4791306	0					
ANR	4791536	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"	1504:6:62477:62561	4791306	9	True				
ANR	4791537	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"		4791306	0					
ANR	4791538	Callee	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791539	Identifier	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791540	ArgumentList	pdev -> memory		4791306	1					
ANR	4791541	Argument	pdev -> memory		4791306	0					
ANR	4791542	PtrMemberAccess	pdev -> memory		4791306	0					
ANR	4791543	Identifier	pdev		4791306	0					
ANR	4791544	Identifier	memory		4791306	1					
ANR	4791545	Argument	upd -> int_a		4791306	1					
ANR	4791546	PtrMemberAccess	upd -> int_a		4791306	0					
ANR	4791547	Identifier	upd		4791306	0					
ANR	4791548	Identifier	int_a		4791306	1					
ANR	4791549	Argument	countof ( upd_int_a )		4791306	2					
ANR	4791550	CallExpression	countof ( upd_int_a )		4791306	0					
ANR	4791551	Callee	countof		4791306	0					
ANR	4791552	Identifier	countof		4791306	0					
ANR	4791553	ArgumentList	upd_int_a		4791306	1					
ANR	4791554	Argument	upd_int_a		4791306	0					
ANR	4791555	Identifier	upd_int_a		4791306	0					
ANR	4791556	Argument	UPD_MM_DEL_PARAM		4791306	3					
ANR	4791557	Identifier	UPD_MM_DEL_PARAM		4791306	0					
ANR	4791558	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"	1505:6:62569:62653	4791306	10	True				
ANR	4791559	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"		4791306	0					
ANR	4791560	Callee	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791561	Identifier	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791562	ArgumentList	pdev -> memory		4791306	1					
ANR	4791563	Argument	pdev -> memory		4791306	0					
ANR	4791564	PtrMemberAccess	pdev -> memory		4791306	0					
ANR	4791565	Identifier	pdev		4791306	0					
ANR	4791566	Identifier	memory		4791306	1					
ANR	4791567	Argument	upd -> strings		4791306	1					
ANR	4791568	PtrMemberAccess	upd -> strings		4791306	0					
ANR	4791569	Identifier	upd		4791306	0					
ANR	4791570	Identifier	strings		4791306	1					
ANR	4791571	Argument	countof ( upd_strings )		4791306	2					
ANR	4791572	CallExpression	countof ( upd_strings )		4791306	0					
ANR	4791573	Callee	countof		4791306	0					
ANR	4791574	Identifier	countof		4791306	0					
ANR	4791575	ArgumentList	upd_strings		4791306	1					
ANR	4791576	Argument	upd_strings		4791306	0					
ANR	4791577	Identifier	upd_strings		4791306	0					
ANR	4791578	Argument	UPD_MM_DEL_PARAM		4791306	3					
ANR	4791579	Identifier	UPD_MM_DEL_PARAM		4791306	0					
ANR	4791580	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"	1506:6:62661:62746	4791306	11	True				
ANR	4791581	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"		4791306	0					
ANR	4791582	Callee	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791583	Identifier	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791584	ArgumentList	pdev -> memory		4791306	1					
ANR	4791585	Argument	pdev -> memory		4791306	0					
ANR	4791586	PtrMemberAccess	pdev -> memory		4791306	0					
ANR	4791587	Identifier	pdev		4791306	0					
ANR	4791588	Identifier	memory		4791306	1					
ANR	4791589	Argument	upd -> string_a		4791306	1					
ANR	4791590	PtrMemberAccess	upd -> string_a		4791306	0					
ANR	4791591	Identifier	upd		4791306	0					
ANR	4791592	Identifier	string_a		4791306	1					
ANR	4791593	Argument	countof ( upd_string_a )		4791306	2					
ANR	4791594	CallExpression	countof ( upd_string_a )		4791306	0					
ANR	4791595	Callee	countof		4791306	0					
ANR	4791596	Identifier	countof		4791306	0					
ANR	4791597	ArgumentList	upd_string_a		4791306	1					
ANR	4791598	Argument	upd_string_a		4791306	0					
ANR	4791599	Identifier	upd_string_a		4791306	0					
ANR	4791600	Argument	UPD_MM_DEL_APARAM		4791306	3					
ANR	4791601	Identifier	UPD_MM_DEL_APARAM		4791306	0					
ANR	4791602	ExpressionStatement	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"	1507:6:62754:62838	4791306	12	True				
ANR	4791603	CallExpression	"UPD_MM_DEL_ARRAY ( pdev -> memory , upd -> float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"		4791306	0					
ANR	4791604	Callee	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791605	Identifier	UPD_MM_DEL_ARRAY		4791306	0					
ANR	4791606	ArgumentList	pdev -> memory		4791306	1					
ANR	4791607	Argument	pdev -> memory		4791306	0					
ANR	4791608	PtrMemberAccess	pdev -> memory		4791306	0					
ANR	4791609	Identifier	pdev		4791306	0					
ANR	4791610	Identifier	memory		4791306	1					
ANR	4791611	Argument	upd -> float_a		4791306	1					
ANR	4791612	PtrMemberAccess	upd -> float_a		4791306	0					
ANR	4791613	Identifier	upd		4791306	0					
ANR	4791614	Identifier	float_a		4791306	1					
ANR	4791615	Argument	countof ( upd_float_a )		4791306	2					
ANR	4791616	CallExpression	countof ( upd_float_a )		4791306	0					
ANR	4791617	Callee	countof		4791306	0					
ANR	4791618	Identifier	countof		4791306	0					
ANR	4791619	ArgumentList	upd_float_a		4791306	1					
ANR	4791620	Argument	upd_float_a		4791306	0					
ANR	4791621	Identifier	upd_float_a		4791306	0					
ANR	4791622	Argument	UPD_MM_DEL_PARAM		4791306	3					
ANR	4791623	Identifier	UPD_MM_DEL_PARAM		4791306	0					
ANR	4791624	ExpressionStatement	"gs_free ( pdev -> memory , upd , sizeof ( upd [ 0 ] ) , 1 , ""uniprint"" )"	1509:6:62847:62901	4791306	13	True				
ANR	4791625	CallExpression	"gs_free ( pdev -> memory , upd , sizeof ( upd [ 0 ] ) , 1 , ""uniprint"" )"		4791306	0					
ANR	4791626	Callee	gs_free		4791306	0					
ANR	4791627	Identifier	gs_free		4791306	0					
ANR	4791628	ArgumentList	pdev -> memory		4791306	1					
ANR	4791629	Argument	pdev -> memory		4791306	0					
ANR	4791630	PtrMemberAccess	pdev -> memory		4791306	0					
ANR	4791631	Identifier	pdev		4791306	0					
ANR	4791632	Identifier	memory		4791306	1					
ANR	4791633	Argument	upd		4791306	1					
ANR	4791634	Identifier	upd		4791306	0					
ANR	4791635	Argument	sizeof ( upd [ 0 ] )		4791306	2					
ANR	4791636	SizeofExpression	sizeof ( upd [ 0 ] )		4791306	0					
ANR	4791637	Sizeof	sizeof		4791306	0					
ANR	4791638	ArrayIndexing	upd [ 0 ]		4791306	1					
ANR	4791639	Identifier	upd		4791306	0					
ANR	4791640	PrimaryExpression	0		4791306	1					
ANR	4791641	Argument	1		4791306	3					
ANR	4791642	PrimaryExpression	1		4791306	0					
ANR	4791643	Argument	"""uniprint"""		4791306	4					
ANR	4791644	PrimaryExpression	"""uniprint"""		4791306	0					
ANR	4791645	ExpressionStatement	udev -> upd = NULL	1511:6:62910:62926	4791306	14	True				
ANR	4791646	AssignmentExpression	udev -> upd = NULL		4791306	0		=			
ANR	4791647	PtrMemberAccess	udev -> upd		4791306	0					
ANR	4791648	Identifier	udev		4791306	0					
ANR	4791649	Identifier	upd		4791306	1					
ANR	4791650	Identifier	NULL		4791306	1					
ANR	4791651	ExpressionStatement	code = gdev_prn_close ( pdev )	1515:3:62976:63003	4791306	10	True				
ANR	4791652	AssignmentExpression	code = gdev_prn_close ( pdev )		4791306	0		=			
ANR	4791653	Identifier	code		4791306	0					
ANR	4791654	CallExpression	gdev_prn_close ( pdev )		4791306	1					
ANR	4791655	Callee	gdev_prn_close		4791306	0					
ANR	4791656	Identifier	gdev_prn_close		4791306	0					
ANR	4791657	ArgumentList	pdev		4791306	1					
ANR	4791658	Argument	pdev		4791306	0					
ANR	4791659	Identifier	pdev		4791306	0					
ANR	4791660	ExpressionStatement	error = error > code ? code : error	1516:3:63008:63043	4791306	11	True				
ANR	4791661	AssignmentExpression	error = error > code ? code : error		4791306	0		=			
ANR	4791662	Identifier	error		4791306	0					
ANR	4791663	ConditionalExpression	error > code ? code : error		4791306	1					
ANR	4791664	Condition	error > code		4791306	0					
ANR	4791665	RelationalExpression	error > code		4791306	0		>			
ANR	4791666	Identifier	error		4791306	0					
ANR	4791667	Identifier	code		4791306	1					
ANR	4791668	Identifier	code		4791306	1					
ANR	4791669	Identifier	error		4791306	2					
ANR	4791670	ExpressionStatement	"errprintf ( pdev -> memory , ""RETURN: %d = upd_close(0x%05lx)\\n"" , error , ( long ) pdev )"	1519:6:63086:63173	4791306	12	True				
ANR	4791671	CallExpression	"errprintf ( pdev -> memory , ""RETURN: %d = upd_close(0x%05lx)\\n"" , error , ( long ) pdev )"		4791306	0					
ANR	4791672	Callee	errprintf		4791306	0					
ANR	4791673	Identifier	errprintf		4791306	0					
ANR	4791674	ArgumentList	pdev -> memory		4791306	1					
ANR	4791675	Argument	pdev -> memory		4791306	0					
ANR	4791676	PtrMemberAccess	pdev -> memory		4791306	0					
ANR	4791677	Identifier	pdev		4791306	0					
ANR	4791678	Identifier	memory		4791306	1					
ANR	4791679	Argument	"""RETURN: %d = upd_close(0x%05lx)\\n"""		4791306	1					
ANR	4791680	PrimaryExpression	"""RETURN: %d = upd_close(0x%05lx)\\n"""		4791306	0					
ANR	4791681	Argument	error		4791306	2					
ANR	4791682	Identifier	error		4791306	0					
ANR	4791683	Argument	( long ) pdev		4791306	3					
ANR	4791684	CastExpression	( long ) pdev		4791306	0					
ANR	4791685	CastTarget	long		4791306	0					
ANR	4791686	Identifier	pdev		4791306	1					
ANR	4791687	ReturnStatement	return error ;	1523:3:63186:63198	4791306	13	True				
ANR	4791688	Identifier	error		4791306	0					
ANR	4791689	ReturnType	static int		4791306	1					
ANR	4791690	Identifier	upd_close		4791306	2					
ANR	4791691	ParameterList	gx_device * pdev		4791306	3					
ANR	4791692	Parameter	gx_device * pdev	1465:10:61332:61346	4791306	0	True				
ANR	4791693	ParameterType	gx_device *		4791306	0					
ANR	4791694	Identifier	pdev		4791306	1					
ANR	4791695	CFGEntryNode	ENTRY		4791306		True				
ANR	4791696	CFGExitNode	EXIT		4791306		True				
ANR	4791697	Symbol	B_ERROR		4791306						
ANR	4791698	Symbol	code		4791306						
ANR	4791699	Symbol	udev -> file		4791306						
ANR	4791700	Symbol	* S_CLOSE		4791306						
ANR	4791701	Symbol	upd -> strings		4791306						
ANR	4791702	Symbol	~B_BUF		4791306						
ANR	4791703	Symbol	error		4791306						
ANR	4791704	Symbol	upd_ints		4791306						
ANR	4791705	Symbol	upd -> flags		4791306						
ANR	4791706	Symbol	pdev		4791306						
ANR	4791707	Symbol	udev -> upd		4791306						
ANR	4791708	Symbol	* udev		4791306						
ANR	4791709	Symbol	* upd		4791306						
ANR	4791710	Symbol	upd -> int_a		4791306						
ANR	4791711	Symbol	upd -> strings [ S_CLOSE ] . size		4791306						
ANR	4791712	Symbol	pdev -> memory		4791306						
ANR	4791713	Symbol	B_OPEN		4791306						
ANR	4791714	Symbol	upd_string_a		4791306						
ANR	4791715	Symbol	* upd -> strings		4791306						
ANR	4791716	Symbol	UPD_MM_DEL_APARAM		4791306						
ANR	4791717	Symbol	NULL		4791306						
ANR	4791718	Symbol	udev -> memory		4791306						
ANR	4791719	Symbol	upd_strings		4791306						
ANR	4791720	Symbol	UPD_MM_DEL_VALUE		4791306						
ANR	4791721	Symbol	gdev_prn_close		4791306						
ANR	4791722	Symbol	upd -> strings [ S_CLOSE ] . data		4791306						
ANR	4791723	Symbol	upd		4791306						
ANR	4791724	Symbol	upd -> choice		4791306						
ANR	4791725	Symbol	upd_int_a		4791306						
ANR	4791726	Symbol	upd_float_a		4791306						
ANR	4791727	Symbol	UPD_MM_DEL_PARAM		4791306						
ANR	4791728	Symbol	B_OK4GO		4791306						
ANR	4791729	Symbol	upd -> string_a		4791306						
ANR	4791730	Symbol	countof		4791306						
ANR	4791731	Symbol	upd_choice		4791306						
ANR	4791732	Symbol	~B_OPEN		4791306						
ANR	4791733	Symbol	udev		4791306						
ANR	4791734	Symbol	S_CLOSE		4791306						
ANR	4791735	Symbol	* pdev		4791306						
ANR	4791736	Symbol	upd -> float_a		4791306						
ANR	4791737	Symbol	* * upd		4791306						
ANR	4791738	Symbol	upd -> ngsbuf		4791306						
ANR	4791739	Symbol	upd -> ints		4791306						
ANR	4791740	Symbol	upd -> gsbuf		4791306						
ANR	4791741	Function	upd_get_params	1541:0:63922:67980							
ANR	4791742	FunctionDef	"upd_get_params (gx_device * pdev , gs_param_list * plist)"		4791741	0					
ANR	4791743	CompoundStatement		1543:0:63987:67980	4791741	0					
ANR	4791744	Statement	upd_device	1544:3:63992:64001	4791741	0	True				
ANR	4791745	Statement	*	1544:14:64003:64003	4791741	1	True				
ANR	4791746	Statement	const	1544:15:64004:64008	4791741	2	True				
ANR	4791747	ExpressionStatement	udev = ( upd_device * ) pdev	1544:21:64010:64040	4791741	3	True				
ANR	4791748	AssignmentExpression	udev = ( upd_device * ) pdev		4791741	0		=			
ANR	4791749	Identifier	udev		4791741	0					
ANR	4791750	CastExpression	( upd_device * ) pdev		4791741	1					
ANR	4791751	CastTarget	upd_device *		4791741	0					
ANR	4791752	Identifier	pdev		4791741	1					
ANR	4791753	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	1545:3:64045:64083	4791741	4	True				
ANR	4791754	IdentifierDecl	upd = udev -> upd		4791741	0					
ANR	4791755	IdentifierDeclType	const upd_p		4791741	0					
ANR	4791756	Identifier	upd		4791741	1					
ANR	4791757	AssignmentExpression	upd = udev -> upd		4791741	2		=			
ANR	4791758	Identifier	upd		4791741	0					
ANR	4791759	PtrMemberAccess	udev -> upd		4791741	1					
ANR	4791760	Identifier	udev		4791741	0					
ANR	4791761	Identifier	upd		4791741	1					
ANR	4791762	IdentifierDeclStatement	"int error , i ;"	1546:3:64088:64113	4791741	5	True				
ANR	4791763	IdentifierDecl	error		4791741	0					
ANR	4791764	IdentifierDeclType	int		4791741	0					
ANR	4791765	Identifier	error		4791741	1					
ANR	4791766	IdentifierDecl	i		4791741	1					
ANR	4791767	IdentifierDeclType	int		4791741	0					
ANR	4791768	Identifier	i		4791741	1					
ANR	4791769	ExpressionStatement	"errprintf ( udev -> memory , ""CALL: upd_get_params(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) plist )"	1549:6:64156:64256	4791741	6	True				
ANR	4791770	CallExpression	"errprintf ( udev -> memory , ""CALL: upd_get_params(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) plist )"		4791741	0					
ANR	4791771	Callee	errprintf		4791741	0					
ANR	4791772	Identifier	errprintf		4791741	0					
ANR	4791773	ArgumentList	udev -> memory		4791741	1					
ANR	4791774	Argument	udev -> memory		4791741	0					
ANR	4791775	PtrMemberAccess	udev -> memory		4791741	0					
ANR	4791776	Identifier	udev		4791741	0					
ANR	4791777	Identifier	memory		4791741	1					
ANR	4791778	Argument	"""CALL: upd_get_params(0x%05lx,0x%05lx)\\n"""		4791741	1					
ANR	4791779	PrimaryExpression	"""CALL: upd_get_params(0x%05lx,0x%05lx)\\n"""		4791741	0					
ANR	4791780	Argument	( long ) udev		4791741	2					
ANR	4791781	CastExpression	( long ) udev		4791741	0					
ANR	4791782	CastTarget	long		4791741	0					
ANR	4791783	Identifier	udev		4791741	1					
ANR	4791784	Argument	( long ) plist		4791741	3					
ANR	4791785	CastExpression	( long ) plist		4791741	0					
ANR	4791786	CastTarget	long		4791741	0					
ANR	4791787	Identifier	plist		4791741	1					
ANR	4791788	ExpressionStatement	"error = gdev_prn_get_params ( ( gx_device * ) udev , plist )"	1554:3:64324:64376	4791741	7	True				
ANR	4791789	AssignmentExpression	"error = gdev_prn_get_params ( ( gx_device * ) udev , plist )"		4791741	0		=			
ANR	4791790	Identifier	error		4791741	0					
ANR	4791791	CallExpression	"gdev_prn_get_params ( ( gx_device * ) udev , plist )"		4791741	1					
ANR	4791792	Callee	gdev_prn_get_params		4791741	0					
ANR	4791793	Identifier	gdev_prn_get_params		4791741	0					
ANR	4791794	ArgumentList	( gx_device * ) udev		4791741	1					
ANR	4791795	Argument	( gx_device * ) udev		4791741	0					
ANR	4791796	CastExpression	( gx_device * ) udev		4791741	0					
ANR	4791797	CastTarget	gx_device *		4791741	0					
ANR	4791798	Identifier	udev		4791741	1					
ANR	4791799	Argument	plist		4791741	1					
ANR	4791800	Identifier	plist		4791741	0					
ANR	4791801	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1555:3:64381:64411	4791741	8	True				
ANR	4791802	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		4791741	0					
ANR	4791803	Callee	UPD_EXIT_GET		4791741	0					
ANR	4791804	Identifier	UPD_EXIT_GET		4791741	0					
ANR	4791805	ArgumentList	error		4791741	1					
ANR	4791806	Argument	error		4791741	0					
ANR	4791807	Identifier	error		4791741	0					
ANR	4791808	Argument	udev		4791741	1					
ANR	4791809	Identifier	udev		4791741	0					
ANR	4791810	Argument	plist		4791741	2					
ANR	4791811	Identifier	plist		4791741	0					
ANR	4791812	IfStatement	if ( upd_version )		4791741	9					
ANR	4791813	Condition	upd_version	1558:6:64446:64456	4791741	0	True				
ANR	4791814	Identifier	upd_version		4791741	0					
ANR	4791815	CompoundStatement		16:19:471:471	4791741	1					
ANR	4791816	ExpressionStatement	udev -> upd_version . data = ( const byte * ) rcsid	1559:6:64496:64547	4791741	0	True				
ANR	4791817	AssignmentExpression	udev -> upd_version . data = ( const byte * ) rcsid		4791741	0		=			
ANR	4791818	MemberAccess	udev -> upd_version . data		4791741	0					
ANR	4791819	PtrMemberAccess	udev -> upd_version		4791741	0					
ANR	4791820	Identifier	udev		4791741	0					
ANR	4791821	Identifier	upd_version		4791741	1					
ANR	4791822	Identifier	data		4791741	1					
ANR	4791823	CastExpression	( const byte * ) rcsid		4791741	1					
ANR	4791824	CastTarget	const byte *		4791741	0					
ANR	4791825	Identifier	rcsid		4791741	1					
ANR	4791826	ExpressionStatement	udev -> upd_version . size = strlen ( rcsid )	1560:6:64555:64599	4791741	1	True				
ANR	4791827	AssignmentExpression	udev -> upd_version . size = strlen ( rcsid )		4791741	0		=			
ANR	4791828	MemberAccess	udev -> upd_version . size		4791741	0					
ANR	4791829	PtrMemberAccess	udev -> upd_version		4791741	0					
ANR	4791830	Identifier	udev		4791741	0					
ANR	4791831	Identifier	upd_version		4791741	1					
ANR	4791832	Identifier	size		4791741	1					
ANR	4791833	CallExpression	strlen ( rcsid )		4791741	1					
ANR	4791834	Callee	strlen		4791741	0					
ANR	4791835	Identifier	strlen		4791741	0					
ANR	4791836	ArgumentList	rcsid		4791741	1					
ANR	4791837	Argument	rcsid		4791741	0					
ANR	4791838	Identifier	rcsid		4791741	0					
ANR	4791839	ExpressionStatement	udev -> upd_version . persistent = true	1561:6:64607:64642	4791741	2	True				
ANR	4791840	AssignmentExpression	udev -> upd_version . persistent = true		4791741	0		=			
ANR	4791841	MemberAccess	udev -> upd_version . persistent		4791741	0					
ANR	4791842	PtrMemberAccess	udev -> upd_version		4791741	0					
ANR	4791843	Identifier	udev		4791741	0					
ANR	4791844	Identifier	upd_version		4791741	1					
ANR	4791845	Identifier	persistent		4791741	1					
ANR	4791846	Identifier	true		4791741	1					
ANR	4791847	ExpressionStatement	"error = param_write_string ( plist , upd_version , & udev -> upd_version )"	1562:6:64650:64714	4791741	3	True				
ANR	4791848	AssignmentExpression	"error = param_write_string ( plist , upd_version , & udev -> upd_version )"		4791741	0		=			
ANR	4791849	Identifier	error		4791741	0					
ANR	4791850	CallExpression	"param_write_string ( plist , upd_version , & udev -> upd_version )"		4791741	1					
ANR	4791851	Callee	param_write_string		4791741	0					
ANR	4791852	Identifier	param_write_string		4791741	0					
ANR	4791853	ArgumentList	plist		4791741	1					
ANR	4791854	Argument	plist		4791741	0					
ANR	4791855	Identifier	plist		4791741	0					
ANR	4791856	Argument	upd_version		4791741	1					
ANR	4791857	Identifier	upd_version		4791741	0					
ANR	4791858	Argument	& udev -> upd_version		4791741	2					
ANR	4791859	UnaryOperationExpression	& udev -> upd_version		4791741	0					
ANR	4791860	UnaryOperator	&		4791741	0					
ANR	4791861	PtrMemberAccess	udev -> upd_version		4791741	1					
ANR	4791862	Identifier	udev		4791741	0					
ANR	4791863	Identifier	upd_version		4791741	1					
ANR	4791864	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1563:6:64722:64752	4791741	4	True				
ANR	4791865	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		4791741	0					
ANR	4791866	Callee	UPD_EXIT_GET		4791741	0					
ANR	4791867	Identifier	UPD_EXIT_GET		4791741	0					
ANR	4791868	ArgumentList	error		4791741	1					
ANR	4791869	Argument	error		4791741	0					
ANR	4791870	Identifier	error		4791741	0					
ANR	4791871	Argument	udev		4791741	1					
ANR	4791872	Identifier	udev		4791741	0					
ANR	4791873	Argument	plist		4791741	2					
ANR	4791874	Identifier	plist		4791741	0					
ANR	4791875	ForStatement	for ( i = 0 ; i < countof ( upd_choice ) ; ++ i )		4791741	10					
ANR	4791876	ForInit	i = 0 ;	1567:7:64844:64849	4791741	0	True				
ANR	4791877	AssignmentExpression	i = 0		4791741	0		=			
ANR	4791878	Identifier	i		4791741	0					
ANR	4791879	PrimaryExpression	0		4791741	1					
ANR	4791880	Condition	i < countof ( upd_choice )	1567:14:64851:64873	4791741	1	True				
ANR	4791881	RelationalExpression	i < countof ( upd_choice )		4791741	0		<			
ANR	4791882	Identifier	i		4791741	0					
ANR	4791883	CallExpression	countof ( upd_choice )		4791741	1					
ANR	4791884	Callee	countof		4791741	0					
ANR	4791885	Identifier	countof		4791741	0					
ANR	4791886	ArgumentList	upd_choice		4791741	1					
ANR	4791887	Argument	upd_choice		4791741	0					
ANR	4791888	Identifier	upd_choice		4791741	0					
ANR	4791889	UnaryExpression	++ i	1567:39:64876:64878	4791741	2	True				
ANR	4791890	IncDec	++		4791741	0					
ANR	4791891	Identifier	i		4791741	1					
ANR	4791892	CompoundStatement		25:44:893:893	4791741	3					
ANR	4791893	IfStatement	if ( ! upd_choice [ i ] )		4791741	0					
ANR	4791894	Condition	! upd_choice [ i ]	1568:9:64892:64905	4791741	0	True				
ANR	4791895	UnaryOperationExpression	! upd_choice [ i ]		4791741	0					
ANR	4791896	UnaryOperator	!		4791741	0					
ANR	4791897	ArrayIndexing	upd_choice [ i ]		4791741	1					
ANR	4791898	Identifier	upd_choice		4791741	0					
ANR	4791899	Identifier	i		4791741	1					
ANR	4791900	ContinueStatement	continue ;	1568:25:64908:64916	4791741	1	True				
ANR	4791901	IfStatement	if ( upd && upd -> choice && upd -> choice [ i ] )		4791741	1					
ANR	4791902	Condition	upd && upd -> choice && upd -> choice [ i ]	1569:9:64956:64991	4791741	0	True				
ANR	4791903	AndExpression	upd && upd -> choice && upd -> choice [ i ]		4791741	0		&&			
ANR	4791904	Identifier	upd		4791741	0					
ANR	4791905	AndExpression	upd -> choice && upd -> choice [ i ]		4791741	1		&&			
ANR	4791906	PtrMemberAccess	upd -> choice		4791741	0					
ANR	4791907	Identifier	upd		4791741	0					
ANR	4791908	Identifier	choice		4791741	1					
ANR	4791909	ArrayIndexing	upd -> choice [ i ]		4791741	1					
ANR	4791910	PtrMemberAccess	upd -> choice		4791741	0					
ANR	4791911	Identifier	upd		4791741	0					
ANR	4791912	Identifier	choice		4791741	1					
ANR	4791913	Identifier	i		4791741	1					
ANR	4791914	CompoundStatement		28:9:1017:1037	4791741	1					
ANR	4791915	IdentifierDeclStatement	gs_param_string name ;	1570:9:65005:65025	4791741	0	True				
ANR	4791916	IdentifierDecl	name		4791741	0					
ANR	4791917	IdentifierDeclType	gs_param_string		4791741	0					
ANR	4791918	Identifier	name		4791741	1					
ANR	4791919	ExpressionStatement	name . data = ( const byte * ) upd_choice [ i ] [ upd -> choice [ i ] ]	1571:9:65036:65098	4791741	1	True				
ANR	4791920	AssignmentExpression	name . data = ( const byte * ) upd_choice [ i ] [ upd -> choice [ i ] ]		4791741	0		=			
ANR	4791921	MemberAccess	name . data		4791741	0					
ANR	4791922	Identifier	name		4791741	0					
ANR	4791923	Identifier	data		4791741	1					
ANR	4791924	CastExpression	( const byte * ) upd_choice [ i ] [ upd -> choice [ i ] ]		4791741	1					
ANR	4791925	CastTarget	const byte *		4791741	0					
ANR	4791926	ArrayIndexing	upd_choice [ i ] [ upd -> choice [ i ] ]		4791741	1					
ANR	4791927	ArrayIndexing	upd_choice [ i ]		4791741	0					
ANR	4791928	Identifier	upd_choice		4791741	0					
ANR	4791929	Identifier	i		4791741	1					
ANR	4791930	ArrayIndexing	upd -> choice [ i ]		4791741	1					
ANR	4791931	PtrMemberAccess	upd -> choice		4791741	0					
ANR	4791932	Identifier	upd		4791741	0					
ANR	4791933	Identifier	choice		4791741	1					
ANR	4791934	Identifier	i		4791741	1					
ANR	4791935	ExpressionStatement	name . size = strlen ( ( const char * ) name . data )	1572:9:65109:65159	4791741	2	True				
ANR	4791936	AssignmentExpression	name . size = strlen ( ( const char * ) name . data )		4791741	0		=			
ANR	4791937	MemberAccess	name . size		4791741	0					
ANR	4791938	Identifier	name		4791741	0					
ANR	4791939	Identifier	size		4791741	1					
ANR	4791940	CallExpression	strlen ( ( const char * ) name . data )		4791741	1					
ANR	4791941	Callee	strlen		4791741	0					
ANR	4791942	Identifier	strlen		4791741	0					
ANR	4791943	ArgumentList	( const char * ) name . data		4791741	1					
ANR	4791944	Argument	( const char * ) name . data		4791741	0					
ANR	4791945	CastExpression	( const char * ) name . data		4791741	0					
ANR	4791946	CastTarget	const char *		4791741	0					
ANR	4791947	MemberAccess	name . data		4791741	1					
ANR	4791948	Identifier	name		4791741	0					
ANR	4791949	Identifier	data		4791741	1					
ANR	4791950	ExpressionStatement	name . persistent = true	1573:9:65170:65192	4791741	3	True				
ANR	4791951	AssignmentExpression	name . persistent = true		4791741	0		=			
ANR	4791952	MemberAccess	name . persistent		4791741	0					
ANR	4791953	Identifier	name		4791741	0					
ANR	4791954	Identifier	persistent		4791741	1					
ANR	4791955	Identifier	true		4791741	1					
ANR	4791956	ExpressionStatement	"error = param_write_name ( plist , upd_choice [ i ] [ 0 ] , & name )"	1574:9:65203:65257	4791741	4	True				
ANR	4791957	AssignmentExpression	"error = param_write_name ( plist , upd_choice [ i ] [ 0 ] , & name )"		4791741	0		=			
ANR	4791958	Identifier	error		4791741	0					
ANR	4791959	CallExpression	"param_write_name ( plist , upd_choice [ i ] [ 0 ] , & name )"		4791741	1					
ANR	4791960	Callee	param_write_name		4791741	0					
ANR	4791961	Identifier	param_write_name		4791741	0					
ANR	4791962	ArgumentList	plist		4791741	1					
ANR	4791963	Argument	plist		4791741	0					
ANR	4791964	Identifier	plist		4791741	0					
ANR	4791965	Argument	upd_choice [ i ] [ 0 ]		4791741	1					
ANR	4791966	ArrayIndexing	upd_choice [ i ] [ 0 ]		4791741	0					
ANR	4791967	ArrayIndexing	upd_choice [ i ]		4791741	0					
ANR	4791968	Identifier	upd_choice		4791741	0					
ANR	4791969	Identifier	i		4791741	1					
ANR	4791970	PrimaryExpression	0		4791741	1					
ANR	4791971	Argument	& name		4791741	2					
ANR	4791972	UnaryOperationExpression	& name		4791741	0					
ANR	4791973	UnaryOperator	&		4791741	0					
ANR	4791974	Identifier	name		4791741	1					
ANR	4791975	ElseStatement	else		4791741	0					
ANR	4791976	CompoundStatement		33:13:1284:1284	4791741	0					
ANR	4791977	ExpressionStatement	"error = param_write_null ( plist , upd_choice [ i ] [ 0 ] )"	1576:9:65283:65331	4791741	0	True				
ANR	4791978	AssignmentExpression	"error = param_write_null ( plist , upd_choice [ i ] [ 0 ] )"		4791741	0		=			
ANR	4791979	Identifier	error		4791741	0					
ANR	4791980	CallExpression	"param_write_null ( plist , upd_choice [ i ] [ 0 ] )"		4791741	1					
ANR	4791981	Callee	param_write_null		4791741	0					
ANR	4791982	Identifier	param_write_null		4791741	0					
ANR	4791983	ArgumentList	plist		4791741	1					
ANR	4791984	Argument	plist		4791741	0					
ANR	4791985	Identifier	plist		4791741	0					
ANR	4791986	Argument	upd_choice [ i ] [ 0 ]		4791741	1					
ANR	4791987	ArrayIndexing	upd_choice [ i ] [ 0 ]		4791741	0					
ANR	4791988	ArrayIndexing	upd_choice [ i ]		4791741	0					
ANR	4791989	Identifier	upd_choice		4791741	0					
ANR	4791990	Identifier	i		4791741	1					
ANR	4791991	PrimaryExpression	0		4791741	1					
ANR	4791992	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1578:6:65347:65377	4791741	2	True				
ANR	4791993	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		4791741	0					
ANR	4791994	Callee	UPD_EXIT_GET		4791741	0					
ANR	4791995	Identifier	UPD_EXIT_GET		4791741	0					
ANR	4791996	ArgumentList	error		4791741	1					
ANR	4791997	Argument	error		4791741	0					
ANR	4791998	Identifier	error		4791741	0					
ANR	4791999	Argument	udev		4791741	1					
ANR	4792000	Identifier	udev		4791741	0					
ANR	4792001	Argument	plist		4791741	2					
ANR	4792002	Identifier	plist		4791741	0					
ANR	4792003	ForStatement	for ( i = 0 ; i < countof ( upd_flags ) ; ++ i )		4791741	11					
ANR	4792004	ForInit	i = 0 ;	1582:7:65423:65428	4791741	0	True				
ANR	4792005	AssignmentExpression	i = 0		4791741	0		=			
ANR	4792006	Identifier	i		4791741	0					
ANR	4792007	PrimaryExpression	0		4791741	1					
ANR	4792008	Condition	i < countof ( upd_flags )	1582:14:65430:65451	4791741	1	True				
ANR	4792009	RelationalExpression	i < countof ( upd_flags )		4791741	0		<			
ANR	4792010	Identifier	i		4791741	0					
ANR	4792011	CallExpression	countof ( upd_flags )		4791741	1					
ANR	4792012	Callee	countof		4791741	0					
ANR	4792013	Identifier	countof		4791741	0					
ANR	4792014	ArgumentList	upd_flags		4791741	1					
ANR	4792015	Argument	upd_flags		4791741	0					
ANR	4792016	Identifier	upd_flags		4791741	0					
ANR	4792017	UnaryExpression	++ i	1582:38:65454:65456	4791741	2	True				
ANR	4792018	IncDec	++		4791741	0					
ANR	4792019	Identifier	i		4791741	1					
ANR	4792020	CompoundStatement		40:43:1471:1471	4791741	3					
ANR	4792021	IfStatement	if ( ! upd_flags [ i ] )		4791741	0					
ANR	4792022	Condition	! upd_flags [ i ]	1583:9:65470:65482	4791741	0	True				
ANR	4792023	UnaryOperationExpression	! upd_flags [ i ]		4791741	0					
ANR	4792024	UnaryOperator	!		4791741	0					
ANR	4792025	ArrayIndexing	upd_flags [ i ]		4791741	1					
ANR	4792026	Identifier	upd_flags		4791741	0					
ANR	4792027	Identifier	i		4791741	1					
ANR	4792028	ContinueStatement	continue ;	1583:24:65485:65493	4791741	1	True				
ANR	4792029	IfStatement	if ( upd )		4791741	1					
ANR	4792030	Condition	upd	1584:9:65531:65533	4791741	0	True				
ANR	4792031	Identifier	upd		4791741	0					
ANR	4792032	CompoundStatement		43:9:1559:1604	4791741	1					
ANR	4792033	IdentifierDeclStatement	bool value = upd -> flags & ( ( uint32_t ) 1 << i ) ;	1585:9:65547:65592	4791741	0	True				
ANR	4792034	IdentifierDecl	value = upd -> flags & ( ( uint32_t ) 1 << i )		4791741	0					
ANR	4792035	IdentifierDeclType	bool		4791741	0					
ANR	4792036	Identifier	value		4791741	1					
ANR	4792037	AssignmentExpression	value = upd -> flags & ( ( uint32_t ) 1 << i )		4791741	2		=			
ANR	4792038	Identifier	value		4791741	0					
ANR	4792039	BitAndExpression	upd -> flags & ( ( uint32_t ) 1 << i )		4791741	1		&			
ANR	4792040	PtrMemberAccess	upd -> flags		4791741	0					
ANR	4792041	Identifier	upd		4791741	0					
ANR	4792042	Identifier	flags		4791741	1					
ANR	4792043	ShiftExpression	( uint32_t ) 1 << i		4791741	1		<<			
ANR	4792044	CastExpression	( uint32_t ) 1		4791741	0					
ANR	4792045	CastTarget	uint32_t		4791741	0					
ANR	4792046	PrimaryExpression	1		4791741	1					
ANR	4792047	Identifier	i		4791741	1					
ANR	4792048	ExpressionStatement	"error = param_write_bool ( plist , upd_flags [ i ] , & value )"	1586:9:65603:65654	4791741	1	True				
ANR	4792049	AssignmentExpression	"error = param_write_bool ( plist , upd_flags [ i ] , & value )"		4791741	0		=			
ANR	4792050	Identifier	error		4791741	0					
ANR	4792051	CallExpression	"param_write_bool ( plist , upd_flags [ i ] , & value )"		4791741	1					
ANR	4792052	Callee	param_write_bool		4791741	0					
ANR	4792053	Identifier	param_write_bool		4791741	0					
ANR	4792054	ArgumentList	plist		4791741	1					
ANR	4792055	Argument	plist		4791741	0					
ANR	4792056	Identifier	plist		4791741	0					
ANR	4792057	Argument	upd_flags [ i ]		4791741	1					
ANR	4792058	ArrayIndexing	upd_flags [ i ]		4791741	0					
ANR	4792059	Identifier	upd_flags		4791741	0					
ANR	4792060	Identifier	i		4791741	1					
ANR	4792061	Argument	& value		4791741	2					
ANR	4792062	UnaryOperationExpression	& value		4791741	0					
ANR	4792063	UnaryOperator	&		4791741	0					
ANR	4792064	Identifier	value		4791741	1					
ANR	4792065	ElseStatement	else		4791741	0					
ANR	4792066	CompoundStatement		45:13:1681:1681	4791741	0					
ANR	4792067	ExpressionStatement	"error = param_write_null ( plist , upd_flags [ i ] )"	1588:9:65680:65724	4791741	0	True				
ANR	4792068	AssignmentExpression	"error = param_write_null ( plist , upd_flags [ i ] )"		4791741	0		=			
ANR	4792069	Identifier	error		4791741	0					
ANR	4792070	CallExpression	"param_write_null ( plist , upd_flags [ i ] )"		4791741	1					
ANR	4792071	Callee	param_write_null		4791741	0					
ANR	4792072	Identifier	param_write_null		4791741	0					
ANR	4792073	ArgumentList	plist		4791741	1					
ANR	4792074	Argument	plist		4791741	0					
ANR	4792075	Identifier	plist		4791741	0					
ANR	4792076	Argument	upd_flags [ i ]		4791741	1					
ANR	4792077	ArrayIndexing	upd_flags [ i ]		4791741	0					
ANR	4792078	Identifier	upd_flags		4791741	0					
ANR	4792079	Identifier	i		4791741	1					
ANR	4792080	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1590:6:65740:65770	4791741	2	True				
ANR	4792081	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		4791741	0					
ANR	4792082	Callee	UPD_EXIT_GET		4791741	0					
ANR	4792083	Identifier	UPD_EXIT_GET		4791741	0					
ANR	4792084	ArgumentList	error		4791741	1					
ANR	4792085	Argument	error		4791741	0					
ANR	4792086	Identifier	error		4791741	0					
ANR	4792087	Argument	udev		4791741	1					
ANR	4792088	Identifier	udev		4791741	0					
ANR	4792089	Argument	plist		4791741	2					
ANR	4792090	Identifier	plist		4791741	0					
ANR	4792091	ForStatement	for ( i = 0 ; i < countof ( upd_ints ) ; ++ i )		4791741	12					
ANR	4792092	ForInit	i = 0 ;	1594:7:65808:65813	4791741	0	True				
ANR	4792093	AssignmentExpression	i = 0		4791741	0		=			
ANR	4792094	Identifier	i		4791741	0					
ANR	4792095	PrimaryExpression	0		4791741	1					
ANR	4792096	Condition	i < countof ( upd_ints )	1594:14:65815:65835	4791741	1	True				
ANR	4792097	RelationalExpression	i < countof ( upd_ints )		4791741	0		<			
ANR	4792098	Identifier	i		4791741	0					
ANR	4792099	CallExpression	countof ( upd_ints )		4791741	1					
ANR	4792100	Callee	countof		4791741	0					
ANR	4792101	Identifier	countof		4791741	0					
ANR	4792102	ArgumentList	upd_ints		4791741	1					
ANR	4792103	Argument	upd_ints		4791741	0					
ANR	4792104	Identifier	upd_ints		4791741	0					
ANR	4792105	UnaryExpression	++ i	1594:37:65838:65840	4791741	2	True				
ANR	4792106	IncDec	++		4791741	0					
ANR	4792107	Identifier	i		4791741	1					
ANR	4792108	CompoundStatement		52:42:1855:1855	4791741	3					
ANR	4792109	IfStatement	if ( ! upd_ints [ i ] )		4791741	0					
ANR	4792110	Condition	! upd_ints [ i ]	1595:9:65854:65865	4791741	0	True				
ANR	4792111	UnaryOperationExpression	! upd_ints [ i ]		4791741	0					
ANR	4792112	UnaryOperator	!		4791741	0					
ANR	4792113	ArrayIndexing	upd_ints [ i ]		4791741	1					
ANR	4792114	Identifier	upd_ints		4791741	0					
ANR	4792115	Identifier	i		4791741	1					
ANR	4792116	ContinueStatement	continue ;	1595:23:65868:65876	4791741	1	True				
ANR	4792117	IfStatement	if ( upd && upd -> ints && upd -> ints [ i ] )		4791741	1					
ANR	4792118	Condition	upd && upd -> ints && upd -> ints [ i ]	1596:9:65913:65944	4791741	0	True				
ANR	4792119	AndExpression	upd && upd -> ints && upd -> ints [ i ]		4791741	0		&&			
ANR	4792120	Identifier	upd		4791741	0					
ANR	4792121	AndExpression	upd -> ints && upd -> ints [ i ]		4791741	1		&&			
ANR	4792122	PtrMemberAccess	upd -> ints		4791741	0					
ANR	4792123	Identifier	upd		4791741	0					
ANR	4792124	Identifier	ints		4791741	1					
ANR	4792125	ArrayIndexing	upd -> ints [ i ]		4791741	1					
ANR	4792126	PtrMemberAccess	upd -> ints		4791741	0					
ANR	4792127	Identifier	upd		4791741	0					
ANR	4792128	Identifier	ints		4791741	1					
ANR	4792129	Identifier	i		4791741	1					
ANR	4792130	CompoundStatement		55:9:1970:1994	4791741	1					
ANR	4792131	IdentifierDeclStatement	int value = upd -> ints [ i ] ;	1597:9:65958:65982	4791741	0	True				
ANR	4792132	IdentifierDecl	value = upd -> ints [ i ]		4791741	0					
ANR	4792133	IdentifierDeclType	int		4791741	0					
ANR	4792134	Identifier	value		4791741	1					
ANR	4792135	AssignmentExpression	value = upd -> ints [ i ]		4791741	2		=			
ANR	4792136	Identifier	value		4791741	0					
ANR	4792137	ArrayIndexing	upd -> ints [ i ]		4791741	1					
ANR	4792138	PtrMemberAccess	upd -> ints		4791741	0					
ANR	4792139	Identifier	upd		4791741	0					
ANR	4792140	Identifier	ints		4791741	1					
ANR	4792141	Identifier	i		4791741	1					
ANR	4792142	ExpressionStatement	"error = param_write_int ( plist , upd_ints [ i ] , & value )"	1598:9:65993:66043	4791741	1	True				
ANR	4792143	AssignmentExpression	"error = param_write_int ( plist , upd_ints [ i ] , & value )"		4791741	0		=			
ANR	4792144	Identifier	error		4791741	0					
ANR	4792145	CallExpression	"param_write_int ( plist , upd_ints [ i ] , & value )"		4791741	1					
ANR	4792146	Callee	param_write_int		4791741	0					
ANR	4792147	Identifier	param_write_int		4791741	0					
ANR	4792148	ArgumentList	plist		4791741	1					
ANR	4792149	Argument	plist		4791741	0					
ANR	4792150	Identifier	plist		4791741	0					
ANR	4792151	Argument	upd_ints [ i ]		4791741	1					
ANR	4792152	ArrayIndexing	upd_ints [ i ]		4791741	0					
ANR	4792153	Identifier	upd_ints		4791741	0					
ANR	4792154	Identifier	i		4791741	1					
ANR	4792155	Argument	& value		4791741	2					
ANR	4792156	UnaryOperationExpression	& value		4791741	0					
ANR	4792157	UnaryOperator	&		4791741	0					
ANR	4792158	Identifier	value		4791741	1					
ANR	4792159	ElseStatement	else		4791741	0					
ANR	4792160	CompoundStatement		57:13:2070:2070	4791741	0					
ANR	4792161	ExpressionStatement	"error = param_write_null ( plist , upd_ints [ i ] )"	1600:9:66069:66112	4791741	0	True				
ANR	4792162	AssignmentExpression	"error = param_write_null ( plist , upd_ints [ i ] )"		4791741	0		=			
ANR	4792163	Identifier	error		4791741	0					
ANR	4792164	CallExpression	"param_write_null ( plist , upd_ints [ i ] )"		4791741	1					
ANR	4792165	Callee	param_write_null		4791741	0					
ANR	4792166	Identifier	param_write_null		4791741	0					
ANR	4792167	ArgumentList	plist		4791741	1					
ANR	4792168	Argument	plist		4791741	0					
ANR	4792169	Identifier	plist		4791741	0					
ANR	4792170	Argument	upd_ints [ i ]		4791741	1					
ANR	4792171	ArrayIndexing	upd_ints [ i ]		4791741	0					
ANR	4792172	Identifier	upd_ints		4791741	0					
ANR	4792173	Identifier	i		4791741	1					
ANR	4792174	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1602:6:66128:66158	4791741	2	True				
ANR	4792175	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		4791741	0					
ANR	4792176	Callee	UPD_EXIT_GET		4791741	0					
ANR	4792177	Identifier	UPD_EXIT_GET		4791741	0					
ANR	4792178	ArgumentList	error		4791741	1					
ANR	4792179	Argument	error		4791741	0					
ANR	4792180	Identifier	error		4791741	0					
ANR	4792181	Argument	udev		4791741	1					
ANR	4792182	Identifier	udev		4791741	0					
ANR	4792183	Argument	plist		4791741	2					
ANR	4792184	Identifier	plist		4791741	0					
ANR	4792185	ForStatement	for ( i = 0 ; i < countof ( upd_int_a ) ; ++ i )		4791741	13					
ANR	4792186	ForInit	i = 0 ;	1606:7:66202:66207	4791741	0	True				
ANR	4792187	AssignmentExpression	i = 0		4791741	0		=			
ANR	4792188	Identifier	i		4791741	0					
ANR	4792189	PrimaryExpression	0		4791741	1					
ANR	4792190	Condition	i < countof ( upd_int_a )	1606:14:66209:66230	4791741	1	True				
ANR	4792191	RelationalExpression	i < countof ( upd_int_a )		4791741	0		<			
ANR	4792192	Identifier	i		4791741	0					
ANR	4792193	CallExpression	countof ( upd_int_a )		4791741	1					
ANR	4792194	Callee	countof		4791741	0					
ANR	4792195	Identifier	countof		4791741	0					
ANR	4792196	ArgumentList	upd_int_a		4791741	1					
ANR	4792197	Argument	upd_int_a		4791741	0					
ANR	4792198	Identifier	upd_int_a		4791741	0					
ANR	4792199	UnaryExpression	++ i	1606:38:66233:66235	4791741	2	True				
ANR	4792200	IncDec	++		4791741	0					
ANR	4792201	Identifier	i		4791741	1					
ANR	4792202	CompoundStatement		64:43:2250:2250	4791741	3					
ANR	4792203	IfStatement	if ( ! upd_int_a [ i ] )		4791741	0					
ANR	4792204	Condition	! upd_int_a [ i ]	1607:9:66249:66261	4791741	0	True				
ANR	4792205	UnaryOperationExpression	! upd_int_a [ i ]		4791741	0					
ANR	4792206	UnaryOperator	!		4791741	0					
ANR	4792207	ArrayIndexing	upd_int_a [ i ]		4791741	1					
ANR	4792208	Identifier	upd_int_a		4791741	0					
ANR	4792209	Identifier	i		4791741	1					
ANR	4792210	ContinueStatement	continue ;	1607:24:66264:66272	4791741	1	True				
ANR	4792211	IfStatement	if ( upd && upd -> int_a && upd -> int_a [ i ] . size )		4791741	1					
ANR	4792212	Condition	upd && upd -> int_a && upd -> int_a [ i ] . size	1608:9:66315:66353	4791741	0	True				
ANR	4792213	AndExpression	upd && upd -> int_a && upd -> int_a [ i ] . size		4791741	0		&&			
ANR	4792214	Identifier	upd		4791741	0					
ANR	4792215	AndExpression	upd -> int_a && upd -> int_a [ i ] . size		4791741	1		&&			
ANR	4792216	PtrMemberAccess	upd -> int_a		4791741	0					
ANR	4792217	Identifier	upd		4791741	0					
ANR	4792218	Identifier	int_a		4791741	1					
ANR	4792219	MemberAccess	upd -> int_a [ i ] . size		4791741	1					
ANR	4792220	ArrayIndexing	upd -> int_a [ i ]		4791741	0					
ANR	4792221	PtrMemberAccess	upd -> int_a		4791741	0					
ANR	4792222	Identifier	upd		4791741	0					
ANR	4792223	Identifier	int_a		4791741	1					
ANR	4792224	Identifier	i		4791741	1					
ANR	4792225	Identifier	size		4791741	1					
ANR	4792226	CompoundStatement		66:50:2368:2368	4791741	1					
ANR	4792227	ExpressionStatement	"error = param_write_int_array ( plist , upd_int_a [ i ] , ( upd -> int_a + i ) )"	1609:9:66367:66432	4791741	0	True				
ANR	4792228	AssignmentExpression	"error = param_write_int_array ( plist , upd_int_a [ i ] , ( upd -> int_a + i ) )"		4791741	0		=			
ANR	4792229	Identifier	error		4791741	0					
ANR	4792230	CallExpression	"param_write_int_array ( plist , upd_int_a [ i ] , ( upd -> int_a + i ) )"		4791741	1					
ANR	4792231	Callee	param_write_int_array		4791741	0					
ANR	4792232	Identifier	param_write_int_array		4791741	0					
ANR	4792233	ArgumentList	plist		4791741	1					
ANR	4792234	Argument	plist		4791741	0					
ANR	4792235	Identifier	plist		4791741	0					
ANR	4792236	Argument	upd_int_a [ i ]		4791741	1					
ANR	4792237	ArrayIndexing	upd_int_a [ i ]		4791741	0					
ANR	4792238	Identifier	upd_int_a		4791741	0					
ANR	4792239	Identifier	i		4791741	1					
ANR	4792240	Argument	upd -> int_a + i		4791741	2					
ANR	4792241	AdditiveExpression	upd -> int_a + i		4791741	0		+			
ANR	4792242	PtrMemberAccess	upd -> int_a		4791741	0					
ANR	4792243	Identifier	upd		4791741	0					
ANR	4792244	Identifier	int_a		4791741	1					
ANR	4792245	Identifier	i		4791741	1					
ANR	4792246	ElseStatement	else		4791741	0					
ANR	4792247	CompoundStatement		68:13:2459:2459	4791741	0					
ANR	4792248	ExpressionStatement	"error = param_write_null ( plist , upd_int_a [ i ] )"	1611:9:66458:66502	4791741	0	True				
ANR	4792249	AssignmentExpression	"error = param_write_null ( plist , upd_int_a [ i ] )"		4791741	0		=			
ANR	4792250	Identifier	error		4791741	0					
ANR	4792251	CallExpression	"param_write_null ( plist , upd_int_a [ i ] )"		4791741	1					
ANR	4792252	Callee	param_write_null		4791741	0					
ANR	4792253	Identifier	param_write_null		4791741	0					
ANR	4792254	ArgumentList	plist		4791741	1					
ANR	4792255	Argument	plist		4791741	0					
ANR	4792256	Identifier	plist		4791741	0					
ANR	4792257	Argument	upd_int_a [ i ]		4791741	1					
ANR	4792258	ArrayIndexing	upd_int_a [ i ]		4791741	0					
ANR	4792259	Identifier	upd_int_a		4791741	0					
ANR	4792260	Identifier	i		4791741	1					
ANR	4792261	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1613:6:66518:66548	4791741	2	True				
ANR	4792262	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		4791741	0					
ANR	4792263	Callee	UPD_EXIT_GET		4791741	0					
ANR	4792264	Identifier	UPD_EXIT_GET		4791741	0					
ANR	4792265	ArgumentList	error		4791741	1					
ANR	4792266	Argument	error		4791741	0					
ANR	4792267	Identifier	error		4791741	0					
ANR	4792268	Argument	udev		4791741	1					
ANR	4792269	Identifier	udev		4791741	0					
ANR	4792270	Argument	plist		4791741	2					
ANR	4792271	Identifier	plist		4791741	0					
ANR	4792272	ForStatement	for ( i = 0 ; i < countof ( upd_strings ) ; ++ i )		4791741	14					
ANR	4792273	ForInit	i = 0 ;	1617:7:66589:66594	4791741	0	True				
ANR	4792274	AssignmentExpression	i = 0		4791741	0		=			
ANR	4792275	Identifier	i		4791741	0					
ANR	4792276	PrimaryExpression	0		4791741	1					
ANR	4792277	Condition	i < countof ( upd_strings )	1617:14:66596:66619	4791741	1	True				
ANR	4792278	RelationalExpression	i < countof ( upd_strings )		4791741	0		<			
ANR	4792279	Identifier	i		4791741	0					
ANR	4792280	CallExpression	countof ( upd_strings )		4791741	1					
ANR	4792281	Callee	countof		4791741	0					
ANR	4792282	Identifier	countof		4791741	0					
ANR	4792283	ArgumentList	upd_strings		4791741	1					
ANR	4792284	Argument	upd_strings		4791741	0					
ANR	4792285	Identifier	upd_strings		4791741	0					
ANR	4792286	UnaryExpression	++ i	1617:40:66622:66624	4791741	2	True				
ANR	4792287	IncDec	++		4791741	0					
ANR	4792288	Identifier	i		4791741	1					
ANR	4792289	CompoundStatement		75:45:2639:2639	4791741	3					
ANR	4792290	IfStatement	if ( ! upd_strings [ i ] )		4791741	0					
ANR	4792291	Condition	! upd_strings [ i ]	1618:9:66638:66652	4791741	0	True				
ANR	4792292	UnaryOperationExpression	! upd_strings [ i ]		4791741	0					
ANR	4792293	UnaryOperator	!		4791741	0					
ANR	4792294	ArrayIndexing	upd_strings [ i ]		4791741	1					
ANR	4792295	Identifier	upd_strings		4791741	0					
ANR	4792296	Identifier	i		4791741	1					
ANR	4792297	ContinueStatement	continue ;	1618:26:66655:66663	4791741	1	True				
ANR	4792298	IfStatement	if ( upd && upd -> strings && upd -> strings [ i ] . size )		4791741	1					
ANR	4792299	Condition	upd && upd -> strings && upd -> strings [ i ] . size	1619:9:66703:66745	4791741	0	True				
ANR	4792300	AndExpression	upd && upd -> strings && upd -> strings [ i ] . size		4791741	0		&&			
ANR	4792301	Identifier	upd		4791741	0					
ANR	4792302	AndExpression	upd -> strings && upd -> strings [ i ] . size		4791741	1		&&			
ANR	4792303	PtrMemberAccess	upd -> strings		4791741	0					
ANR	4792304	Identifier	upd		4791741	0					
ANR	4792305	Identifier	strings		4791741	1					
ANR	4792306	MemberAccess	upd -> strings [ i ] . size		4791741	1					
ANR	4792307	ArrayIndexing	upd -> strings [ i ]		4791741	0					
ANR	4792308	PtrMemberAccess	upd -> strings		4791741	0					
ANR	4792309	Identifier	upd		4791741	0					
ANR	4792310	Identifier	strings		4791741	1					
ANR	4792311	Identifier	i		4791741	1					
ANR	4792312	Identifier	size		4791741	1					
ANR	4792313	CompoundStatement		77:54:2760:2760	4791741	1					
ANR	4792314	ExpressionStatement	"error = param_write_string ( plist , upd_strings [ i ] , ( upd -> strings + i ) )"	1620:9:66759:66825	4791741	0	True				
ANR	4792315	AssignmentExpression	"error = param_write_string ( plist , upd_strings [ i ] , ( upd -> strings + i ) )"		4791741	0		=			
ANR	4792316	Identifier	error		4791741	0					
ANR	4792317	CallExpression	"param_write_string ( plist , upd_strings [ i ] , ( upd -> strings + i ) )"		4791741	1					
ANR	4792318	Callee	param_write_string		4791741	0					
ANR	4792319	Identifier	param_write_string		4791741	0					
ANR	4792320	ArgumentList	plist		4791741	1					
ANR	4792321	Argument	plist		4791741	0					
ANR	4792322	Identifier	plist		4791741	0					
ANR	4792323	Argument	upd_strings [ i ]		4791741	1					
ANR	4792324	ArrayIndexing	upd_strings [ i ]		4791741	0					
ANR	4792325	Identifier	upd_strings		4791741	0					
ANR	4792326	Identifier	i		4791741	1					
ANR	4792327	Argument	upd -> strings + i		4791741	2					
ANR	4792328	AdditiveExpression	upd -> strings + i		4791741	0		+			
ANR	4792329	PtrMemberAccess	upd -> strings		4791741	0					
ANR	4792330	Identifier	upd		4791741	0					
ANR	4792331	Identifier	strings		4791741	1					
ANR	4792332	Identifier	i		4791741	1					
ANR	4792333	ElseStatement	else		4791741	0					
ANR	4792334	CompoundStatement		79:13:2852:2852	4791741	0					
ANR	4792335	ExpressionStatement	"error = param_write_null ( plist , upd_strings [ i ] )"	1622:9:66851:66897	4791741	0	True				
ANR	4792336	AssignmentExpression	"error = param_write_null ( plist , upd_strings [ i ] )"		4791741	0		=			
ANR	4792337	Identifier	error		4791741	0					
ANR	4792338	CallExpression	"param_write_null ( plist , upd_strings [ i ] )"		4791741	1					
ANR	4792339	Callee	param_write_null		4791741	0					
ANR	4792340	Identifier	param_write_null		4791741	0					
ANR	4792341	ArgumentList	plist		4791741	1					
ANR	4792342	Argument	plist		4791741	0					
ANR	4792343	Identifier	plist		4791741	0					
ANR	4792344	Argument	upd_strings [ i ]		4791741	1					
ANR	4792345	ArrayIndexing	upd_strings [ i ]		4791741	0					
ANR	4792346	Identifier	upd_strings		4791741	0					
ANR	4792347	Identifier	i		4791741	1					
ANR	4792348	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1624:6:66913:66943	4791741	2	True				
ANR	4792349	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		4791741	0					
ANR	4792350	Callee	UPD_EXIT_GET		4791741	0					
ANR	4792351	Identifier	UPD_EXIT_GET		4791741	0					
ANR	4792352	ArgumentList	error		4791741	1					
ANR	4792353	Argument	error		4791741	0					
ANR	4792354	Identifier	error		4791741	0					
ANR	4792355	Argument	udev		4791741	1					
ANR	4792356	Identifier	udev		4791741	0					
ANR	4792357	Argument	plist		4791741	2					
ANR	4792358	Identifier	plist		4791741	0					
ANR	4792359	ForStatement	for ( i = 0 ; i < countof ( upd_string_a ) ; ++ i )		4791741	15					
ANR	4792360	ForInit	i = 0 ;	1628:7:66990:66995	4791741	0	True				
ANR	4792361	AssignmentExpression	i = 0		4791741	0		=			
ANR	4792362	Identifier	i		4791741	0					
ANR	4792363	PrimaryExpression	0		4791741	1					
ANR	4792364	Condition	i < countof ( upd_string_a )	1628:14:66997:67021	4791741	1	True				
ANR	4792365	RelationalExpression	i < countof ( upd_string_a )		4791741	0		<			
ANR	4792366	Identifier	i		4791741	0					
ANR	4792367	CallExpression	countof ( upd_string_a )		4791741	1					
ANR	4792368	Callee	countof		4791741	0					
ANR	4792369	Identifier	countof		4791741	0					
ANR	4792370	ArgumentList	upd_string_a		4791741	1					
ANR	4792371	Argument	upd_string_a		4791741	0					
ANR	4792372	Identifier	upd_string_a		4791741	0					
ANR	4792373	UnaryExpression	++ i	1628:41:67024:67026	4791741	2	True				
ANR	4792374	IncDec	++		4791741	0					
ANR	4792375	Identifier	i		4791741	1					
ANR	4792376	CompoundStatement		86:46:3041:3041	4791741	3					
ANR	4792377	IfStatement	if ( ! upd_string_a [ i ] )		4791741	0					
ANR	4792378	Condition	! upd_string_a [ i ]	1629:9:67040:67055	4791741	0	True				
ANR	4792379	UnaryOperationExpression	! upd_string_a [ i ]		4791741	0					
ANR	4792380	UnaryOperator	!		4791741	0					
ANR	4792381	ArrayIndexing	upd_string_a [ i ]		4791741	1					
ANR	4792382	Identifier	upd_string_a		4791741	0					
ANR	4792383	Identifier	i		4791741	1					
ANR	4792384	ContinueStatement	continue ;	1629:27:67058:67066	4791741	1	True				
ANR	4792385	IfStatement	if ( upd && upd -> string_a && upd -> string_a [ i ] . size )		4791741	1					
ANR	4792386	Condition	upd && upd -> string_a && upd -> string_a [ i ] . size	1630:9:67112:67156	4791741	0	True				
ANR	4792387	AndExpression	upd && upd -> string_a && upd -> string_a [ i ] . size		4791741	0		&&			
ANR	4792388	Identifier	upd		4791741	0					
ANR	4792389	AndExpression	upd -> string_a && upd -> string_a [ i ] . size		4791741	1		&&			
ANR	4792390	PtrMemberAccess	upd -> string_a		4791741	0					
ANR	4792391	Identifier	upd		4791741	0					
ANR	4792392	Identifier	string_a		4791741	1					
ANR	4792393	MemberAccess	upd -> string_a [ i ] . size		4791741	1					
ANR	4792394	ArrayIndexing	upd -> string_a [ i ]		4791741	0					
ANR	4792395	PtrMemberAccess	upd -> string_a		4791741	0					
ANR	4792396	Identifier	upd		4791741	0					
ANR	4792397	Identifier	string_a		4791741	1					
ANR	4792398	Identifier	i		4791741	1					
ANR	4792399	Identifier	size		4791741	1					
ANR	4792400	CompoundStatement		88:56:3171:3171	4791741	1					
ANR	4792401	ExpressionStatement	"error = param_write_string_array ( plist , upd_string_a [ i ] , ( upd -> string_a + i ) )"	1631:9:67170:67256	4791741	0	True				
ANR	4792402	AssignmentExpression	"error = param_write_string_array ( plist , upd_string_a [ i ] , ( upd -> string_a + i ) )"		4791741	0		=			
ANR	4792403	Identifier	error		4791741	0					
ANR	4792404	CallExpression	"param_write_string_array ( plist , upd_string_a [ i ] , ( upd -> string_a + i ) )"		4791741	1					
ANR	4792405	Callee	param_write_string_array		4791741	0					
ANR	4792406	Identifier	param_write_string_array		4791741	0					
ANR	4792407	ArgumentList	plist		4791741	1					
ANR	4792408	Argument	plist		4791741	0					
ANR	4792409	Identifier	plist		4791741	0					
ANR	4792410	Argument	upd_string_a [ i ]		4791741	1					
ANR	4792411	ArrayIndexing	upd_string_a [ i ]		4791741	0					
ANR	4792412	Identifier	upd_string_a		4791741	0					
ANR	4792413	Identifier	i		4791741	1					
ANR	4792414	Argument	upd -> string_a + i		4791741	2					
ANR	4792415	AdditiveExpression	upd -> string_a + i		4791741	0		+			
ANR	4792416	PtrMemberAccess	upd -> string_a		4791741	0					
ANR	4792417	Identifier	upd		4791741	0					
ANR	4792418	Identifier	string_a		4791741	1					
ANR	4792419	Identifier	i		4791741	1					
ANR	4792420	ElseStatement	else		4791741	0					
ANR	4792421	CompoundStatement		91:13:3283:3283	4791741	0					
ANR	4792422	ExpressionStatement	"error = param_write_null ( plist , upd_string_a [ i ] )"	1634:9:67282:67329	4791741	0	True				
ANR	4792423	AssignmentExpression	"error = param_write_null ( plist , upd_string_a [ i ] )"		4791741	0		=			
ANR	4792424	Identifier	error		4791741	0					
ANR	4792425	CallExpression	"param_write_null ( plist , upd_string_a [ i ] )"		4791741	1					
ANR	4792426	Callee	param_write_null		4791741	0					
ANR	4792427	Identifier	param_write_null		4791741	0					
ANR	4792428	ArgumentList	plist		4791741	1					
ANR	4792429	Argument	plist		4791741	0					
ANR	4792430	Identifier	plist		4791741	0					
ANR	4792431	Argument	upd_string_a [ i ]		4791741	1					
ANR	4792432	ArrayIndexing	upd_string_a [ i ]		4791741	0					
ANR	4792433	Identifier	upd_string_a		4791741	0					
ANR	4792434	Identifier	i		4791741	1					
ANR	4792435	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1636:6:67345:67375	4791741	2	True				
ANR	4792436	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		4791741	0					
ANR	4792437	Callee	UPD_EXIT_GET		4791741	0					
ANR	4792438	Identifier	UPD_EXIT_GET		4791741	0					
ANR	4792439	ArgumentList	error		4791741	1					
ANR	4792440	Argument	error		4791741	0					
ANR	4792441	Identifier	error		4791741	0					
ANR	4792442	Argument	udev		4791741	1					
ANR	4792443	Identifier	udev		4791741	0					
ANR	4792444	Argument	plist		4791741	2					
ANR	4792445	Identifier	plist		4791741	0					
ANR	4792446	ForStatement	for ( i = 0 ; i < countof ( upd_float_a ) ; ++ i )		4791741	16					
ANR	4792447	ForInit	i = 0 ;	1640:7:67421:67426	4791741	0	True				
ANR	4792448	AssignmentExpression	i = 0		4791741	0		=			
ANR	4792449	Identifier	i		4791741	0					
ANR	4792450	PrimaryExpression	0		4791741	1					
ANR	4792451	Condition	i < countof ( upd_float_a )	1640:14:67428:67451	4791741	1	True				
ANR	4792452	RelationalExpression	i < countof ( upd_float_a )		4791741	0		<			
ANR	4792453	Identifier	i		4791741	0					
ANR	4792454	CallExpression	countof ( upd_float_a )		4791741	1					
ANR	4792455	Callee	countof		4791741	0					
ANR	4792456	Identifier	countof		4791741	0					
ANR	4792457	ArgumentList	upd_float_a		4791741	1					
ANR	4792458	Argument	upd_float_a		4791741	0					
ANR	4792459	Identifier	upd_float_a		4791741	0					
ANR	4792460	UnaryExpression	++ i	1640:40:67454:67456	4791741	2	True				
ANR	4792461	IncDec	++		4791741	0					
ANR	4792462	Identifier	i		4791741	1					
ANR	4792463	CompoundStatement		98:45:3471:3471	4791741	3					
ANR	4792464	IfStatement	if ( ! upd_float_a [ i ] )		4791741	0					
ANR	4792465	Condition	! upd_float_a [ i ]	1641:9:67470:67484	4791741	0	True				
ANR	4792466	UnaryOperationExpression	! upd_float_a [ i ]		4791741	0					
ANR	4792467	UnaryOperator	!		4791741	0					
ANR	4792468	ArrayIndexing	upd_float_a [ i ]		4791741	1					
ANR	4792469	Identifier	upd_float_a		4791741	0					
ANR	4792470	Identifier	i		4791741	1					
ANR	4792471	ContinueStatement	continue ;	1641:26:67487:67495	4791741	1	True				
ANR	4792472	IfStatement	if ( upd && upd -> float_a && upd -> float_a [ i ] . size )		4791741	1					
ANR	4792473	Condition	upd && upd -> float_a && upd -> float_a [ i ] . size	1642:9:67540:67582	4791741	0	True				
ANR	4792474	AndExpression	upd && upd -> float_a && upd -> float_a [ i ] . size		4791741	0		&&			
ANR	4792475	Identifier	upd		4791741	0					
ANR	4792476	AndExpression	upd -> float_a && upd -> float_a [ i ] . size		4791741	1		&&			
ANR	4792477	PtrMemberAccess	upd -> float_a		4791741	0					
ANR	4792478	Identifier	upd		4791741	0					
ANR	4792479	Identifier	float_a		4791741	1					
ANR	4792480	MemberAccess	upd -> float_a [ i ] . size		4791741	1					
ANR	4792481	ArrayIndexing	upd -> float_a [ i ]		4791741	0					
ANR	4792482	PtrMemberAccess	upd -> float_a		4791741	0					
ANR	4792483	Identifier	upd		4791741	0					
ANR	4792484	Identifier	float_a		4791741	1					
ANR	4792485	Identifier	i		4791741	1					
ANR	4792486	Identifier	size		4791741	1					
ANR	4792487	CompoundStatement		100:54:3597:3597	4791741	1					
ANR	4792488	ExpressionStatement	"error = param_write_float_array ( plist , upd_float_a [ i ] , ( upd -> float_a + i ) )"	1643:9:67596:67679	4791741	0	True				
ANR	4792489	AssignmentExpression	"error = param_write_float_array ( plist , upd_float_a [ i ] , ( upd -> float_a + i ) )"		4791741	0		=			
ANR	4792490	Identifier	error		4791741	0					
ANR	4792491	CallExpression	"param_write_float_array ( plist , upd_float_a [ i ] , ( upd -> float_a + i ) )"		4791741	1					
ANR	4792492	Callee	param_write_float_array		4791741	0					
ANR	4792493	Identifier	param_write_float_array		4791741	0					
ANR	4792494	ArgumentList	plist		4791741	1					
ANR	4792495	Argument	plist		4791741	0					
ANR	4792496	Identifier	plist		4791741	0					
ANR	4792497	Argument	upd_float_a [ i ]		4791741	1					
ANR	4792498	ArrayIndexing	upd_float_a [ i ]		4791741	0					
ANR	4792499	Identifier	upd_float_a		4791741	0					
ANR	4792500	Identifier	i		4791741	1					
ANR	4792501	Argument	upd -> float_a + i		4791741	2					
ANR	4792502	AdditiveExpression	upd -> float_a + i		4791741	0		+			
ANR	4792503	PtrMemberAccess	upd -> float_a		4791741	0					
ANR	4792504	Identifier	upd		4791741	0					
ANR	4792505	Identifier	float_a		4791741	1					
ANR	4792506	Identifier	i		4791741	1					
ANR	4792507	ElseStatement	else		4791741	0					
ANR	4792508	CompoundStatement		103:13:3706:3706	4791741	0					
ANR	4792509	ExpressionStatement	"error = param_write_null ( plist , upd_float_a [ i ] )"	1646:9:67705:67751	4791741	0	True				
ANR	4792510	AssignmentExpression	"error = param_write_null ( plist , upd_float_a [ i ] )"		4791741	0		=			
ANR	4792511	Identifier	error		4791741	0					
ANR	4792512	CallExpression	"param_write_null ( plist , upd_float_a [ i ] )"		4791741	1					
ANR	4792513	Callee	param_write_null		4791741	0					
ANR	4792514	Identifier	param_write_null		4791741	0					
ANR	4792515	ArgumentList	plist		4791741	1					
ANR	4792516	Argument	plist		4791741	0					
ANR	4792517	Identifier	plist		4791741	0					
ANR	4792518	Argument	upd_float_a [ i ]		4791741	1					
ANR	4792519	ArrayIndexing	upd_float_a [ i ]		4791741	0					
ANR	4792520	Identifier	upd_float_a		4791741	0					
ANR	4792521	Identifier	i		4791741	1					
ANR	4792522	ExpressionStatement	"UPD_EXIT_GET ( error , udev , plist )"	1648:6:67767:67797	4791741	2	True				
ANR	4792523	CallExpression	"UPD_EXIT_GET ( error , udev , plist )"		4791741	0					
ANR	4792524	Callee	UPD_EXIT_GET		4791741	0					
ANR	4792525	Identifier	UPD_EXIT_GET		4791741	0					
ANR	4792526	ArgumentList	error		4791741	1					
ANR	4792527	Argument	error		4791741	0					
ANR	4792528	Identifier	error		4791741	0					
ANR	4792529	Argument	udev		4791741	1					
ANR	4792530	Identifier	udev		4791741	0					
ANR	4792531	Argument	plist		4791741	2					
ANR	4792532	Identifier	plist		4791741	0					
ANR	4792533	ExpressionStatement	"errprintf ( udev -> memory , ""RETURN: %d = upd_get_params(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) plist )"	1652:3:67842:67953	4791741	17	True				
ANR	4792534	CallExpression	"errprintf ( udev -> memory , ""RETURN: %d = upd_get_params(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) plist )"		4791741	0					
ANR	4792535	Callee	errprintf		4791741	0					
ANR	4792536	Identifier	errprintf		4791741	0					
ANR	4792537	ArgumentList	udev -> memory		4791741	1					
ANR	4792538	Argument	udev -> memory		4791741	0					
ANR	4792539	PtrMemberAccess	udev -> memory		4791741	0					
ANR	4792540	Identifier	udev		4791741	0					
ANR	4792541	Identifier	memory		4791741	1					
ANR	4792542	Argument	"""RETURN: %d = upd_get_params(0x%05lx,0x%05lx)\\n"""		4791741	1					
ANR	4792543	PrimaryExpression	"""RETURN: %d = upd_get_params(0x%05lx,0x%05lx)\\n"""		4791741	0					
ANR	4792544	Argument	error		4791741	2					
ANR	4792545	Identifier	error		4791741	0					
ANR	4792546	Argument	( long ) udev		4791741	3					
ANR	4792547	CastExpression	( long ) udev		4791741	0					
ANR	4792548	CastTarget	long		4791741	0					
ANR	4792549	Identifier	udev		4791741	1					
ANR	4792550	Argument	( long ) plist		4791741	4					
ANR	4792551	CastExpression	( long ) plist		4791741	0					
ANR	4792552	CastTarget	long		4791741	0					
ANR	4792553	Identifier	plist		4791741	1					
ANR	4792554	ReturnStatement	return error ;	1656:3:67966:67978	4791741	18	True				
ANR	4792555	Identifier	error		4791741	0					
ANR	4792556	ReturnType	static int		4791741	1					
ANR	4792557	Identifier	upd_get_params		4791741	2					
ANR	4792558	ParameterList	"gx_device * pdev , gs_param_list * plist"		4791741	3					
ANR	4792559	Parameter	gx_device * pdev	1542:15:63948:63962	4791741	0	True				
ANR	4792560	ParameterType	gx_device *		4791741	0					
ANR	4792561	Identifier	pdev		4791741	1					
ANR	4792562	Parameter	gs_param_list * plist	1542:32:63965:63984	4791741	1	True				
ANR	4792563	ParameterType	gs_param_list *		4791741	0					
ANR	4792564	Identifier	plist		4791741	1					
ANR	4792565	CFGEntryNode	ENTRY		4791741		True				
ANR	4792566	CFGExitNode	EXIT		4791741		True				
ANR	4792567	Symbol	* upd -> string_a		4791741						
ANR	4792568	Symbol	* upd_int_a		4791741						
ANR	4792569	Symbol	* upd -> int_a		4791741						
ANR	4792570	Symbol	& value		4791741						
ANR	4792571	Symbol	upd -> float_a [ i ] . size		4791741						
ANR	4792572	Symbol	rcsid		4791741						
ANR	4792573	Symbol	* upd_strings		4791741						
ANR	4792574	Symbol	& name		4791741						
ANR	4792575	Symbol	upd_ints		4791741						
ANR	4792576	Symbol	pdev		4791741						
ANR	4792577	Symbol	strlen		4791741						
ANR	4792578	Symbol	* udev		4791741						
ANR	4792579	Symbol	upd -> int_a		4791741						
ANR	4792580	Symbol	udev -> upd_version . data		4791741						
ANR	4792581	Symbol	param_write_string		4791741						
ANR	4792582	Symbol	* * upd_choice		4791741						
ANR	4792583	Symbol	* * i		4791741						
ANR	4792584	Symbol	* upd_flags		4791741						
ANR	4792585	Symbol	name . persistent		4791741						
ANR	4792586	Symbol	upd_strings		4791741						
ANR	4792587	Symbol	upd_version		4791741						
ANR	4792588	Symbol	* upd -> float_a		4791741						
ANR	4792589	Symbol	upd		4791741						
ANR	4792590	Symbol	upd_int_a		4791741						
ANR	4792591	Symbol	* upd_string_a		4791741						
ANR	4792592	Symbol	param_write_null		4791741						
ANR	4792593	Symbol	upd -> int_a [ i ] . size		4791741						
ANR	4792594	Symbol	udev -> upd_version		4791741						
ANR	4792595	Symbol	param_write_name		4791741						
ANR	4792596	Symbol	countof		4791741						
ANR	4792597	Symbol	upd_choice		4791741						
ANR	4792598	Symbol	& udev -> upd_version		4791741						
ANR	4792599	Symbol	udev		4791741						
ANR	4792600	Symbol	udev -> upd_version . size		4791741						
ANR	4792601	Symbol	true		4791741						
ANR	4792602	Symbol	name		4791741						
ANR	4792603	Symbol	name . size		4791741						
ANR	4792604	Symbol	upd -> float_a		4791741						
ANR	4792605	Symbol	param_write_float_array		4791741						
ANR	4792606	Symbol	upd -> ints		4791741						
ANR	4792607	Symbol	* upd_ints		4791741						
ANR	4792608	Symbol	* upd_float_a		4791741						
ANR	4792609	Symbol	upd -> strings		4791741						
ANR	4792610	Symbol	error		4791741						
ANR	4792611	Symbol	param_write_string_array		4791741						
ANR	4792612	Symbol	* upd -> choice		4791741						
ANR	4792613	Symbol	upd -> flags		4791741						
ANR	4792614	Symbol	udev -> upd		4791741						
ANR	4792615	Symbol	param_write_bool		4791741						
ANR	4792616	Symbol	plist		4791741						
ANR	4792617	Symbol	* upd_choice		4791741						
ANR	4792618	Symbol	* upd		4791741						
ANR	4792619	Symbol	upd_flags		4791741						
ANR	4792620	Symbol	param_write_int_array		4791741						
ANR	4792621	Symbol	upd_string_a		4791741						
ANR	4792622	Symbol	name . data		4791741						
ANR	4792623	Symbol	value		4791741						
ANR	4792624	Symbol	param_write_int		4791741						
ANR	4792625	Symbol	* upd -> strings		4791741						
ANR	4792626	Symbol	udev -> memory		4791741						
ANR	4792627	Symbol	* * * upd		4791741						
ANR	4792628	Symbol	gdev_prn_get_params		4791741						
ANR	4792629	Symbol	i		4791741						
ANR	4792630	Symbol	upd -> choice		4791741						
ANR	4792631	Symbol	upd -> strings [ i ] . size		4791741						
ANR	4792632	Symbol	* * upd -> choice		4791741						
ANR	4792633	Symbol	upd_float_a		4791741						
ANR	4792634	Symbol	upd -> string_a [ i ] . size		4791741						
ANR	4792635	Symbol	upd -> string_a		4791741						
ANR	4792636	Symbol	* i		4791741						
ANR	4792637	Symbol	* upd -> ints		4791741						
ANR	4792638	Symbol	udev -> upd_version . persistent		4791741						
ANR	4792639	Symbol	* * upd		4791741						
ANR	4792640	Function	upd_put_params	1665:0:68227:86454							
ANR	4792641	FunctionDef	"upd_put_params (gx_device * pdev , gs_param_list * plist)"		4792640	0					
ANR	4792642	CompoundStatement		1667:0:68292:86454	4792640	0					
ANR	4792643	Statement	upd_device	1668:3:68297:68306	4792640	0	True				
ANR	4792644	Statement	*	1668:14:68308:68308	4792640	1	True				
ANR	4792645	Statement	const	1668:15:68309:68313	4792640	2	True				
ANR	4792646	ExpressionStatement	udev = ( upd_device * ) pdev	1668:26:68320:68352	4792640	3	True				
ANR	4792647	AssignmentExpression	udev = ( upd_device * ) pdev		4792640	0		=			
ANR	4792648	Identifier	udev		4792640	0					
ANR	4792649	CastExpression	( upd_device * ) pdev		4792640	1					
ANR	4792650	CastTarget	upd_device *		4792640	0					
ANR	4792651	Identifier	pdev		4792640	1					
ANR	4792652	IdentifierDeclStatement	upd_p upd = udev -> upd ;	1669:3:68357:68402	4792640	4	True				
ANR	4792653	IdentifierDecl	upd = udev -> upd		4792640	0					
ANR	4792654	IdentifierDeclType	upd_p		4792640	0					
ANR	4792655	Identifier	upd		4792640	1					
ANR	4792656	AssignmentExpression	upd = udev -> upd		4792640	2		=			
ANR	4792657	Identifier	upd		4792640	0					
ANR	4792658	PtrMemberAccess	udev -> upd		4792640	1					
ANR	4792659	Identifier	udev		4792640	0					
ANR	4792660	Identifier	upd		4792640	1					
ANR	4792661	IdentifierDeclStatement	"int error = 0 , code , i ;"	1670:3:68407:68452	4792640	5	True				
ANR	4792662	IdentifierDecl	error = 0		4792640	0					
ANR	4792663	IdentifierDeclType	int		4792640	0					
ANR	4792664	Identifier	error		4792640	1					
ANR	4792665	AssignmentExpression	error = 0		4792640	2		=			
ANR	4792666	Identifier	error		4792640	0					
ANR	4792667	PrimaryExpression	0		4792640	1					
ANR	4792668	IdentifierDecl	code		4792640	1					
ANR	4792669	IdentifierDeclType	int		4792640	0					
ANR	4792670	Identifier	code		4792640	1					
ANR	4792671	IdentifierDecl	i		4792640	2					
ANR	4792672	IdentifierDeclType	int		4792640	0					
ANR	4792673	Identifier	i		4792640	1					
ANR	4792674	IdentifierDeclStatement	float Margins [ 2 ] ;	1672:3:68458:68491	4792640	6	True				
ANR	4792675	IdentifierDecl	Margins [ 2 ]		4792640	0					
ANR	4792676	IdentifierDeclType	float [ 2 ]		4792640	0					
ANR	4792677	Identifier	Margins		4792640	1					
ANR	4792678	PrimaryExpression	2		4792640	2					
ANR	4792679	IdentifierDeclStatement	gx_device_color_info color_info ;	1673:3:68496:68529	4792640	7	True				
ANR	4792680	IdentifierDecl	color_info		4792640	0					
ANR	4792681	IdentifierDeclType	gx_device_color_info		4792640	0					
ANR	4792682	Identifier	color_info		4792640	1					
ANR	4792683	IdentifierDeclStatement	uint32_t flags = 0 ;	1674:3:68534:68573	4792640	8	True				
ANR	4792684	IdentifierDecl	flags = 0		4792640	0					
ANR	4792685	IdentifierDeclType	uint32_t		4792640	0					
ANR	4792686	Identifier	flags		4792640	1					
ANR	4792687	AssignmentExpression	flags = 0		4792640	2		=			
ANR	4792688	Identifier	flags		4792640	0					
ANR	4792689	PrimaryExpression	0		4792640	1					
ANR	4792690	IdentifierDeclStatement	int * choice = NULL ;	1675:3:68578:68618	4792640	9	True				
ANR	4792691	IdentifierDecl	* choice = NULL		4792640	0					
ANR	4792692	IdentifierDeclType	int *		4792640	0					
ANR	4792693	Identifier	choice		4792640	1					
ANR	4792694	AssignmentExpression	* choice = NULL		4792640	2		=			
ANR	4792695	Identifier	NULL		4792640	0					
ANR	4792696	Identifier	NULL		4792640	1					
ANR	4792697	IdentifierDeclStatement	int * ints = NULL ;	1676:3:68623:68663	4792640	10	True				
ANR	4792698	IdentifierDecl	* ints = NULL		4792640	0					
ANR	4792699	IdentifierDeclType	int *		4792640	0					
ANR	4792700	Identifier	ints		4792640	1					
ANR	4792701	AssignmentExpression	* ints = NULL		4792640	2		=			
ANR	4792702	Identifier	NULL		4792640	0					
ANR	4792703	Identifier	NULL		4792640	1					
ANR	4792704	IdentifierDeclStatement	gs_param_int_array * int_a = NULL ;	1677:3:68668:68708	4792640	11	True				
ANR	4792705	IdentifierDecl	* int_a = NULL		4792640	0					
ANR	4792706	IdentifierDeclType	gs_param_int_array *		4792640	0					
ANR	4792707	Identifier	int_a		4792640	1					
ANR	4792708	AssignmentExpression	* int_a = NULL		4792640	2		=			
ANR	4792709	Identifier	NULL		4792640	0					
ANR	4792710	Identifier	NULL		4792640	1					
ANR	4792711	IdentifierDeclStatement	gs_param_string * strings = NULL ;	1678:3:68713:68753	4792640	12	True				
ANR	4792712	IdentifierDecl	* strings = NULL		4792640	0					
ANR	4792713	IdentifierDeclType	gs_param_string *		4792640	0					
ANR	4792714	Identifier	strings		4792640	1					
ANR	4792715	AssignmentExpression	* strings = NULL		4792640	2		=			
ANR	4792716	Identifier	NULL		4792640	0					
ANR	4792717	Identifier	NULL		4792640	1					
ANR	4792718	IdentifierDeclStatement	gs_param_string_array * string_a = NULL ;	1679:3:68758:68798	4792640	13	True				
ANR	4792719	IdentifierDecl	* string_a = NULL		4792640	0					
ANR	4792720	IdentifierDeclType	gs_param_string_array *		4792640	0					
ANR	4792721	Identifier	string_a		4792640	1					
ANR	4792722	AssignmentExpression	* string_a = NULL		4792640	2		=			
ANR	4792723	Identifier	NULL		4792640	0					
ANR	4792724	Identifier	NULL		4792640	1					
ANR	4792725	IdentifierDeclStatement	"gs_param_float_array * float_a = NULL , mfa ;"	1680:3:68803:68848	4792640	14	True				
ANR	4792726	IdentifierDecl	* float_a = NULL		4792640	0					
ANR	4792727	IdentifierDeclType	gs_param_float_array *		4792640	0					
ANR	4792728	Identifier	float_a		4792640	1					
ANR	4792729	AssignmentExpression	* float_a = NULL		4792640	2		=			
ANR	4792730	Identifier	NULL		4792640	0					
ANR	4792731	Identifier	NULL		4792640	1					
ANR	4792732	IdentifierDecl	mfa		4792640	1					
ANR	4792733	IdentifierDeclType	gs_param_float_array		4792640	0					
ANR	4792734	Identifier	mfa		4792640	1					
ANR	4792735	Statement	define	1690:1:69152:69157	4792640	15	True				
ANR	4792736	Statement	UPD_PUT_FLAGS	1690:8:69159:69171	4792640	16	True				
ANR	4792737	Statement	0x0002	1690:28:69179:69184	4792640	17	True				
ANR	4792738	Statement	define	1691:1:69187:69192	4792640	18	True				
ANR	4792739	Statement	UPD_PUT_CHOICE	1691:8:69194:69207	4792640	19	True				
ANR	4792740	Statement	0x0004	1691:28:69214:69219	4792640	20	True				
ANR	4792741	Statement	define	1692:1:69222:69227	4792640	21	True				
ANR	4792742	Statement	UPD_PUT_INTS	1692:8:69229:69240	4792640	22	True				
ANR	4792743	Statement	0x0008	1692:28:69249:69254	4792640	23	True				
ANR	4792744	Statement	define	1693:1:69257:69262	4792640	24	True				
ANR	4792745	Statement	UPD_PUT_INT_A	1693:8:69264:69276	4792640	25	True				
ANR	4792746	Statement	0x0010	1693:28:69284:69289	4792640	26	True				
ANR	4792747	Statement	define	1694:1:69292:69297	4792640	27	True				
ANR	4792748	Statement	UPD_PUT_STRINGS	1694:8:69299:69313	4792640	28	True				
ANR	4792749	Statement	0x0020	1694:28:69319:69324	4792640	29	True				
ANR	4792750	Statement	define	1695:1:69327:69332	4792640	30	True				
ANR	4792751	Statement	UPD_PUT_STRING_A	1695:8:69334:69349	4792640	31	True				
ANR	4792752	Statement	0x0040	1695:28:69354:69359	4792640	32	True				
ANR	4792753	Statement	define	1696:1:69362:69367	4792640	33	True				
ANR	4792754	Statement	UPD_PUT_FLOAT_A	1696:8:69369:69383	4792640	34	True				
ANR	4792755	Statement	0x0080	1696:28:69389:69394	4792640	35	True				
ANR	4792756	Statement	define	1697:1:69397:69402	4792640	36	True				
ANR	4792757	Statement	UPD_PUT_CHANGEDSIZE	1697:8:69404:69422	4792640	37	True				
ANR	4792758	Statement	0x0100	1697:28:69424:69429	4792640	38	True				
ANR	4792759	ExpressionStatement	"errprintf ( udev -> memory , ""CALL: upd_put_params(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) plist )"	1700:6:69472:69570	4792640	39	True				
ANR	4792760	CallExpression	"errprintf ( udev -> memory , ""CALL: upd_put_params(0x%05lx,0x%05lx)\\n"" , ( long ) udev , ( long ) plist )"		4792640	0					
ANR	4792761	Callee	errprintf		4792640	0					
ANR	4792762	Identifier	errprintf		4792640	0					
ANR	4792763	ArgumentList	udev -> memory		4792640	1					
ANR	4792764	Argument	udev -> memory		4792640	0					
ANR	4792765	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4792766	Identifier	udev		4792640	0					
ANR	4792767	Identifier	memory		4792640	1					
ANR	4792768	Argument	"""CALL: upd_put_params(0x%05lx,0x%05lx)\\n"""		4792640	1					
ANR	4792769	PrimaryExpression	"""CALL: upd_put_params(0x%05lx,0x%05lx)\\n"""		4792640	0					
ANR	4792770	Argument	( long ) udev		4792640	2					
ANR	4792771	CastExpression	( long ) udev		4792640	0					
ANR	4792772	CastTarget	long		4792640	0					
ANR	4792773	Identifier	udev		4792640	1					
ANR	4792774	Argument	( long ) plist		4792640	3					
ANR	4792775	CastExpression	( long ) plist		4792640	0					
ANR	4792776	CastTarget	long		4792640	0					
ANR	4792777	Identifier	plist		4792640	1					
ANR	4792778	IfStatement	if ( upd && ( B_OPEN & udev -> upd -> flags ) && ( NULL != udev -> file ) )		4792640	40					
ANR	4792779	Condition	upd && ( B_OPEN & udev -> upd -> flags ) && ( NULL != udev -> file )	1713:6:70086:70143	4792640	0	True				
ANR	4792780	AndExpression	upd && ( B_OPEN & udev -> upd -> flags ) && ( NULL != udev -> file )		4792640	0		&&			
ANR	4792781	Identifier	upd		4792640	0					
ANR	4792782	AndExpression	( B_OPEN & udev -> upd -> flags ) && ( NULL != udev -> file )		4792640	1		&&			
ANR	4792783	BitAndExpression	B_OPEN & udev -> upd -> flags		4792640	0		&			
ANR	4792784	Identifier	B_OPEN		4792640	0					
ANR	4792785	PtrMemberAccess	udev -> upd -> flags		4792640	1					
ANR	4792786	PtrMemberAccess	udev -> upd		4792640	0					
ANR	4792787	Identifier	udev		4792640	0					
ANR	4792788	Identifier	upd		4792640	1					
ANR	4792789	Identifier	flags		4792640	1					
ANR	4792790	EqualityExpression	NULL != udev -> file		4792640	1		!=			
ANR	4792791	Identifier	NULL		4792640	0					
ANR	4792792	PtrMemberAccess	udev -> file		4792640	1					
ANR	4792793	Identifier	udev		4792640	0					
ANR	4792794	Identifier	file		4792640	1					
ANR	4792795	CompoundStatement		49:6:1862:1904	4792640	1					
ANR	4792796	IdentifierDeclStatement	"gs_param_string fname = { NULL , 0 , false } ;"	1715:6:70155:70197	4792640	0	True				
ANR	4792797	IdentifierDecl	"fname = { NULL , 0 , false }"		4792640	0					
ANR	4792798	IdentifierDeclType	gs_param_string		4792640	0					
ANR	4792799	Identifier	fname		4792640	1					
ANR	4792800	AssignmentExpression	"fname = { NULL , 0 , false }"		4792640	2		=			
ANR	4792801	Identifier	fname		4792640	0					
ANR	4792802	InitializerList	NULL		4792640	1					
ANR	4792803	Identifier	NULL		4792640	0					
ANR	4792804	PrimaryExpression	0		4792640	1					
ANR	4792805	Identifier	false		4792640	2					
ANR	4792806	ExpressionStatement	"code = param_read_string ( plist , ""OutputFile"" , & fname )"	1717:6:70206:70257	4792640	1	True				
ANR	4792807	AssignmentExpression	"code = param_read_string ( plist , ""OutputFile"" , & fname )"		4792640	0		=			
ANR	4792808	Identifier	code		4792640	0					
ANR	4792809	CallExpression	"param_read_string ( plist , ""OutputFile"" , & fname )"		4792640	1					
ANR	4792810	Callee	param_read_string		4792640	0					
ANR	4792811	Identifier	param_read_string		4792640	0					
ANR	4792812	ArgumentList	plist		4792640	1					
ANR	4792813	Argument	plist		4792640	0					
ANR	4792814	Identifier	plist		4792640	0					
ANR	4792815	Argument	"""OutputFile"""		4792640	1					
ANR	4792816	PrimaryExpression	"""OutputFile"""		4792640	0					
ANR	4792817	Argument	& fname		4792640	2					
ANR	4792818	UnaryOperationExpression	& fname		4792640	0					
ANR	4792819	UnaryOperator	&		4792640	0					
ANR	4792820	Identifier	fname		4792640	1					
ANR	4792821	IfStatement	if ( ( 1 != code ) && ( 0 != code ) )		4792640	2					
ANR	4792822	Condition	( 1 != code ) && ( 0 != code )	1718:9:70268:70293	4792640	0	True				
ANR	4792823	AndExpression	( 1 != code ) && ( 0 != code )		4792640	0		&&			
ANR	4792824	EqualityExpression	1 != code		4792640	0		!=			
ANR	4792825	PrimaryExpression	1		4792640	0					
ANR	4792826	Identifier	code		4792640	1					
ANR	4792827	EqualityExpression	0 != code		4792640	1		!=			
ANR	4792828	PrimaryExpression	0		4792640	0					
ANR	4792829	Identifier	code		4792640	1					
ANR	4792830	CompoundStatement		52:37:2003:2003	4792640	1					
ANR	4792831	ExpressionStatement	"code = param_read_null ( plist , ""OutputFile"" )"	1719:9:70307:70349	4792640	0	True				
ANR	4792832	AssignmentExpression	"code = param_read_null ( plist , ""OutputFile"" )"		4792640	0		=			
ANR	4792833	Identifier	code		4792640	0					
ANR	4792834	CallExpression	"param_read_null ( plist , ""OutputFile"" )"		4792640	1					
ANR	4792835	Callee	param_read_null		4792640	0					
ANR	4792836	Identifier	param_read_null		4792640	0					
ANR	4792837	ArgumentList	plist		4792640	1					
ANR	4792838	Argument	plist		4792640	0					
ANR	4792839	Identifier	plist		4792640	0					
ANR	4792840	Argument	"""OutputFile"""		4792640	1					
ANR	4792841	PrimaryExpression	"""OutputFile"""		4792640	0					
ANR	4792842	IfStatement	if ( 0 == code )		4792640	1					
ANR	4792843	Condition	0 == code	1720:12:70363:70371	4792640	0	True				
ANR	4792844	EqualityExpression	0 == code		4792640	0		==			
ANR	4792845	PrimaryExpression	0		4792640	0					
ANR	4792846	Identifier	code		4792640	1					
ANR	4792847	CompoundStatement		54:23:2081:2081	4792640	1					
ANR	4792848	ExpressionStatement	"fname . data = ( const byte * ) """""	1721:12:70388:70418	4792640	0	True				
ANR	4792849	AssignmentExpression	"fname . data = ( const byte * ) """""		4792640	0		=			
ANR	4792850	MemberAccess	fname . data		4792640	0					
ANR	4792851	Identifier	fname		4792640	0					
ANR	4792852	Identifier	data		4792640	1					
ANR	4792853	CastExpression	"( const byte * ) """""		4792640	1					
ANR	4792854	CastTarget	const byte *		4792640	0					
ANR	4792855	PrimaryExpression	""""""		4792640	1					
ANR	4792856	ExpressionStatement	fname . size = 0	1722:12:70432:70446	4792640	1	True				
ANR	4792857	AssignmentExpression	fname . size = 0		4792640	0		=			
ANR	4792858	MemberAccess	fname . size		4792640	0					
ANR	4792859	Identifier	fname		4792640	0					
ANR	4792860	Identifier	size		4792640	1					
ANR	4792861	PrimaryExpression	0		4792640	1					
ANR	4792862	IfStatement	"if ( ( 0 == code ) && strncmp ( ( const char * ) fname . data , udev -> fname , fname . size ) )"		4792640	3					
ANR	4792863	Condition	"( 0 == code ) && strncmp ( ( const char * ) fname . data , udev -> fname , fname . size )"	1726:9:70477:70556	4792640	0	True				
ANR	4792864	AndExpression	"( 0 == code ) && strncmp ( ( const char * ) fname . data , udev -> fname , fname . size )"		4792640	0		&&			
ANR	4792865	EqualityExpression	0 == code		4792640	0		==			
ANR	4792866	PrimaryExpression	0		4792640	0					
ANR	4792867	Identifier	code		4792640	1					
ANR	4792868	CallExpression	"strncmp ( ( const char * ) fname . data , udev -> fname , fname . size )"		4792640	1					
ANR	4792869	Callee	strncmp		4792640	0					
ANR	4792870	Identifier	strncmp		4792640	0					
ANR	4792871	ArgumentList	( const char * ) fname . data		4792640	1					
ANR	4792872	Argument	( const char * ) fname . data		4792640	0					
ANR	4792873	CastExpression	( const char * ) fname . data		4792640	0					
ANR	4792874	CastTarget	const char *		4792640	0					
ANR	4792875	MemberAccess	fname . data		4792640	1					
ANR	4792876	Identifier	fname		4792640	0					
ANR	4792877	Identifier	data		4792640	1					
ANR	4792878	Argument	udev -> fname		4792640	1					
ANR	4792879	PtrMemberAccess	udev -> fname		4792640	0					
ANR	4792880	Identifier	udev		4792640	0					
ANR	4792881	Identifier	fname		4792640	1					
ANR	4792882	Argument	fname . size		4792640	2					
ANR	4792883	MemberAccess	fname . size		4792640	0					
ANR	4792884	Identifier	fname		4792640	0					
ANR	4792885	Identifier	size		4792640	1					
ANR	4792886	CompoundStatement		61:67:2266:2266	4792640	1					
ANR	4792887	IfStatement	if ( upd -> strings && 0 < udev -> upd -> strings [ S_CLOSE ] . size )		4792640	0					
ANR	4792888	Condition	upd -> strings && 0 < udev -> upd -> strings [ S_CLOSE ] . size	1728:12:70573:70624	4792640	0	True				
ANR	4792889	AndExpression	upd -> strings && 0 < udev -> upd -> strings [ S_CLOSE ] . size		4792640	0		&&			
ANR	4792890	PtrMemberAccess	upd -> strings		4792640	0					
ANR	4792891	Identifier	upd		4792640	0					
ANR	4792892	Identifier	strings		4792640	1					
ANR	4792893	RelationalExpression	0 < udev -> upd -> strings [ S_CLOSE ] . size		4792640	1		<			
ANR	4792894	PrimaryExpression	0		4792640	0					
ANR	4792895	MemberAccess	udev -> upd -> strings [ S_CLOSE ] . size		4792640	1					
ANR	4792896	ArrayIndexing	udev -> upd -> strings [ S_CLOSE ]		4792640	0					
ANR	4792897	PtrMemberAccess	udev -> upd -> strings		4792640	0					
ANR	4792898	PtrMemberAccess	udev -> upd		4792640	0					
ANR	4792899	Identifier	udev		4792640	0					
ANR	4792900	Identifier	upd		4792640	1					
ANR	4792901	Identifier	strings		4792640	1					
ANR	4792902	Identifier	S_CLOSE		4792640	1					
ANR	4792903	Identifier	size		4792640	1					
ANR	4792904	ExpressionStatement	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , udev -> file )"	1729:12:70639:70733	4792640	1	True				
ANR	4792905	CallExpression	"fwrite ( upd -> strings [ S_CLOSE ] . data , 1 , upd -> strings [ S_CLOSE ] . size , udev -> file )"		4792640	0					
ANR	4792906	Callee	fwrite		4792640	0					
ANR	4792907	Identifier	fwrite		4792640	0					
ANR	4792908	ArgumentList	upd -> strings [ S_CLOSE ] . data		4792640	1					
ANR	4792909	Argument	upd -> strings [ S_CLOSE ] . data		4792640	0					
ANR	4792910	MemberAccess	upd -> strings [ S_CLOSE ] . data		4792640	0					
ANR	4792911	ArrayIndexing	upd -> strings [ S_CLOSE ]		4792640	0					
ANR	4792912	PtrMemberAccess	upd -> strings		4792640	0					
ANR	4792913	Identifier	upd		4792640	0					
ANR	4792914	Identifier	strings		4792640	1					
ANR	4792915	Identifier	S_CLOSE		4792640	1					
ANR	4792916	Identifier	data		4792640	1					
ANR	4792917	Argument	1		4792640	1					
ANR	4792918	PrimaryExpression	1		4792640	0					
ANR	4792919	Argument	upd -> strings [ S_CLOSE ] . size		4792640	2					
ANR	4792920	MemberAccess	upd -> strings [ S_CLOSE ] . size		4792640	0					
ANR	4792921	ArrayIndexing	upd -> strings [ S_CLOSE ]		4792640	0					
ANR	4792922	PtrMemberAccess	upd -> strings		4792640	0					
ANR	4792923	Identifier	upd		4792640	0					
ANR	4792924	Identifier	strings		4792640	1					
ANR	4792925	Identifier	S_CLOSE		4792640	1					
ANR	4792926	Identifier	size		4792640	1					
ANR	4792927	Argument	udev -> file		4792640	3					
ANR	4792928	PtrMemberAccess	udev -> file		4792640	0					
ANR	4792929	Identifier	udev		4792640	0					
ANR	4792930	Identifier	file		4792640	1					
ANR	4792931	ExpressionStatement	upd -> flags &= ~B_OPEN	1732:9:70745:70766	4792640	1	True				
ANR	4792932	AssignmentExpression	upd -> flags &= ~B_OPEN		4792640	0		&=			
ANR	4792933	PtrMemberAccess	upd -> flags		4792640	0					
ANR	4792934	Identifier	upd		4792640	0					
ANR	4792935	Identifier	flags		4792640	1					
ANR	4792936	Identifier	~B_OPEN		4792640	1					
ANR	4792937	Statement	define	1752:1:71603:71608	4792640	41	True				
ANR	4792938	Statement	UPD_PARAM_READ	1752:8:71610:71623	4792640	42	True				
ANR	4792939	Statement	(	1752:22:71624:71624	4792640	43	True				
ANR	4792940	Statement	Param_read	1752:23:71625:71634	4792640	44	True				
ANR	4792941	Statement	","	1752:33:71635:71635	4792640	45	True				
ANR	4792942	Statement	Name	1752:34:71636:71639	4792640	46	True				
ANR	4792943	Statement	","	1752:38:71640:71640	4792640	47	True				
ANR	4792944	Statement	Object	1752:39:71641:71646	4792640	48	True				
ANR	4792945	Statement	","	1752:45:71647:71647	4792640	49	True				
ANR	4792946	Statement	Mem	1752:46:71648:71650	4792640	50	True				
ANR	4792947	Statement	)	1752:49:71651:71651	4792640	51	True				
ANR	4792948	ExpressionStatement	"code = Param_read ( plist , Name , & Object )"	1753:3:71660:71697	4792640	52	True				
ANR	4792949	AssignmentExpression	"code = Param_read ( plist , Name , & Object )"		4792640	0		=			
ANR	4792950	Identifier	code		4792640	0					
ANR	4792951	CallExpression	"Param_read ( plist , Name , & Object )"		4792640	1					
ANR	4792952	Callee	Param_read		4792640	0					
ANR	4792953	Identifier	Param_read		4792640	0					
ANR	4792954	ArgumentList	plist		4792640	1					
ANR	4792955	Argument	plist		4792640	0					
ANR	4792956	Identifier	plist		4792640	0					
ANR	4792957	Argument	Name		4792640	1					
ANR	4792958	Identifier	Name		4792640	0					
ANR	4792959	Argument	& Object		4792640	2					
ANR	4792960	UnaryOperationExpression	& Object		4792640	0					
ANR	4792961	UnaryOperator	&		4792640	0					
ANR	4792962	Identifier	Object		4792640	1					
ANR	4792963	IfStatement	if ( 0 > code )		4792640	53					
ANR	4792964	Condition	0 > code	1754:6:71718:71725	4792640	0	True				
ANR	4792965	RelationalExpression	0 > code		4792640	0		>			
ANR	4792966	PrimaryExpression	0		4792640	0					
ANR	4792967	Identifier	code		4792640	1					
ANR	4792968	CompoundStatement		88:16:3435:3435	4792640	1					
ANR	4792969	ExpressionStatement	"code = param_read_null ( plist , Name )"	1755:6:71773:71807	4792640	0	True				
ANR	4792970	AssignmentExpression	"code = param_read_null ( plist , Name )"		4792640	0		=			
ANR	4792971	Identifier	code		4792640	0					
ANR	4792972	CallExpression	"param_read_null ( plist , Name )"		4792640	1					
ANR	4792973	Callee	param_read_null		4792640	0					
ANR	4792974	Identifier	param_read_null		4792640	0					
ANR	4792975	ArgumentList	plist		4792640	1					
ANR	4792976	Argument	plist		4792640	0					
ANR	4792977	Identifier	plist		4792640	0					
ANR	4792978	Argument	Name		4792640	1					
ANR	4792979	Identifier	Name		4792640	0					
ANR	4792980	IfStatement	if ( 0 == code )		4792640	1					
ANR	4792981	Condition	0 == code	1756:9:71831:71839	4792640	0	True				
ANR	4792982	EqualityExpression	0 == code		4792640	0		==			
ANR	4792983	PrimaryExpression	0		4792640	0					
ANR	4792984	Identifier	code		4792640	1					
ANR	4792985	ExpressionStatement	"memset ( & Object , 0 , sizeof ( Object ) )"	1756:20:71842:71874	4792640	1	True				
ANR	4792986	CallExpression	"memset ( & Object , 0 , sizeof ( Object ) )"		4792640	0					
ANR	4792987	Callee	memset		4792640	0					
ANR	4792988	Identifier	memset		4792640	0					
ANR	4792989	ArgumentList	& Object		4792640	1					
ANR	4792990	Argument	& Object		4792640	0					
ANR	4792991	UnaryOperationExpression	& Object		4792640	0					
ANR	4792992	UnaryOperator	&		4792640	0					
ANR	4792993	Identifier	Object		4792640	1					
ANR	4792994	Argument	0		4792640	1					
ANR	4792995	PrimaryExpression	0		4792640	0					
ANR	4792996	Argument	sizeof ( Object )		4792640	2					
ANR	4792997	SizeofExpression	sizeof ( Object )		4792640	0					
ANR	4792998	Sizeof	sizeof		4792640	0					
ANR	4792999	SizeofOperand	Object		4792640	1					
ANR	4793000	IfStatement	if ( ! code )		4792640	54					
ANR	4793001	Condition	! code	1758:6:71938:71942	4792640	0	True				
ANR	4793002	UnaryOperationExpression	! code		4792640	0					
ANR	4793003	UnaryOperator	!		4792640	0					
ANR	4793004	Identifier	code		4792640	1					
ANR	4793005	ExpressionStatement	"errprintf ( Mem , ""upd_put_params: retrieved parameter \\""%s\\""\\n"" , Name )"	1758:13:71945:72053	4792640	1	True				
ANR	4793006	CallExpression	"errprintf ( Mem , ""upd_put_params: retrieved parameter \\""%s\\""\\n"" , Name )"		4792640	0					
ANR	4793007	Callee	errprintf		4792640	0					
ANR	4793008	Identifier	errprintf		4792640	0					
ANR	4793009	ArgumentList	Mem		4792640	1					
ANR	4793010	Argument	Mem		4792640	0					
ANR	4793011	Identifier	Mem		4792640	0					
ANR	4793012	Argument	"""upd_put_params: retrieved parameter \\""%s\\""\\n"""		4792640	1					
ANR	4793013	PrimaryExpression	"""upd_put_params: retrieved parameter \\""%s\\""\\n"""		4792640	0					
ANR	4793014	Argument	Name		4792640	2					
ANR	4793015	Identifier	Name		4792640	0					
ANR	4793016	IfStatement	if ( 0 > code )		4792640	55					
ANR	4793017	Condition	0 > code	1761:6:72103:72110	4792640	0	True				
ANR	4793018	RelationalExpression	0 > code		4792640	0		>			
ANR	4793019	PrimaryExpression	0		4792640	0					
ANR	4793020	Identifier	code		4792640	1					
ANR	4793021	CompoundStatement		95:16:3820:3820	4792640	1					
ANR	4793022	ExpressionStatement	"param_signal_error ( plist , Name , code )"	1762:6:72158:72193	4792640	0	True				
ANR	4793023	CallExpression	"param_signal_error ( plist , Name , code )"		4792640	0					
ANR	4793024	Callee	param_signal_error		4792640	0					
ANR	4793025	Identifier	param_signal_error		4792640	0					
ANR	4793026	ArgumentList	plist		4792640	1					
ANR	4793027	Argument	plist		4792640	0					
ANR	4793028	Identifier	plist		4792640	0					
ANR	4793029	Argument	Name		4792640	1					
ANR	4793030	Identifier	Name		4792640	0					
ANR	4793031	Argument	code		4792640	2					
ANR	4793032	Identifier	code		4792640	0					
ANR	4793033	IfStatement	if ( error > code )		4792640	1					
ANR	4793034	Condition	error > code	1763:9:72216:72227	4792640	0	True				
ANR	4793035	RelationalExpression	error > code		4792640	0		>			
ANR	4793036	Identifier	error		4792640	0					
ANR	4793037	Identifier	code		4792640	1					
ANR	4793038	ExpressionStatement	error = code	1763:23:72230:72242	4792640	1	True				
ANR	4793039	AssignmentExpression	error = code		4792640	0		=			
ANR	4793040	Identifier	error		4792640	0					
ANR	4793041	Identifier	code		4792640	1					
ANR	4793042	Statement	UPD_PARAM_READ	1778:3:72784:72797	4792640	56	True				
ANR	4793043	Statement	(	1778:17:72798:72798	4792640	57	True				
ANR	4793044	Statement	param_read_string	1778:18:72799:72815	4792640	58	True				
ANR	4793045	Statement	","	1778:35:72816:72816	4792640	59	True				
ANR	4793046	Statement	upd_version	1778:36:72817:72827	4792640	60	True				
ANR	4793047	Statement	","	1778:47:72828:72828	4792640	61	True				
ANR	4793048	Statement	udev	1778:48:72829:72832	4792640	62	True				
ANR	4793049	Statement	->	1778:52:72833:72834	4792640	63	True				
ANR	4793050	Statement	upd_version	1778:54:72835:72845	4792640	64	True				
ANR	4793051	Statement	","	1778:65:72846:72846	4792640	65	True				
ANR	4793052	Statement	udev	1778:66:72847:72850	4792640	66	True				
ANR	4793053	Statement	->	1778:70:72851:72852	4792640	67	True				
ANR	4793054	Statement	memory	1778:72:72853:72858	4792640	68	True				
ANR	4793055	Statement	)	1778:78:72859:72859	4792640	69	True				
ANR	4793056	ExpressionStatement	Margins [ 0 ] = udev -> Margins [ 0 ]	1786:15:73097:73126	4792640	70	True				
ANR	4793057	AssignmentExpression	Margins [ 0 ] = udev -> Margins [ 0 ]		4792640	0		=			
ANR	4793058	ArrayIndexing	Margins [ 0 ]		4792640	0					
ANR	4793059	Identifier	Margins		4792640	0					
ANR	4793060	PrimaryExpression	0		4792640	1					
ANR	4793061	ArrayIndexing	udev -> Margins [ 0 ]		4792640	1					
ANR	4793062	PtrMemberAccess	udev -> Margins		4792640	0					
ANR	4793063	Identifier	udev		4792640	0					
ANR	4793064	Identifier	Margins		4792640	1					
ANR	4793065	PrimaryExpression	0		4792640	1					
ANR	4793066	ExpressionStatement	Margins [ 1 ] = udev -> Margins [ 1 ]	1787:15:73143:73172	4792640	71	True				
ANR	4793067	AssignmentExpression	Margins [ 1 ] = udev -> Margins [ 1 ]		4792640	0		=			
ANR	4793068	ArrayIndexing	Margins [ 1 ]		4792640	0					
ANR	4793069	Identifier	Margins		4792640	0					
ANR	4793070	PrimaryExpression	1		4792640	1					
ANR	4793071	ArrayIndexing	udev -> Margins [ 1 ]		4792640	1					
ANR	4793072	PtrMemberAccess	udev -> Margins		4792640	0					
ANR	4793073	Identifier	udev		4792640	0					
ANR	4793074	Identifier	Margins		4792640	1					
ANR	4793075	PrimaryExpression	1		4792640	1					
ANR	4793076	ExpressionStatement	color_info = udev -> color_info	1789:3:73178:73207	4792640	72	True				
ANR	4793077	AssignmentExpression	color_info = udev -> color_info		4792640	0		=			
ANR	4793078	Identifier	color_info		4792640	0					
ANR	4793079	PtrMemberAccess	udev -> color_info		4792640	1					
ANR	4793080	Identifier	udev		4792640	0					
ANR	4793081	Identifier	color_info		4792640	1					
ANR	4793082	IfStatement	if ( upd )		4792640	73					
ANR	4793083	Condition	upd	1790:6:73215:73217	4792640	0	True				
ANR	4793084	Identifier	upd		4792640	0					
ANR	4793085	CompoundStatement		124:11:4927:4927	4792640	1					
ANR	4793086	ExpressionStatement	flags = upd -> flags	1791:5:73227:73245	4792640	0	True				
ANR	4793087	AssignmentExpression	flags = upd -> flags		4792640	0		=			
ANR	4793088	Identifier	flags		4792640	0					
ANR	4793089	PtrMemberAccess	upd -> flags		4792640	1					
ANR	4793090	Identifier	upd		4792640	0					
ANR	4793091	Identifier	flags		4792640	1					
ANR	4793092	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , choice , upd -> choice , countof ( upd_choice ) , UPD_MM_CPY_VALUE )"	1792:5:73252:73352	4792640	1	True				
ANR	4793093	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , choice , upd -> choice , countof ( upd_choice ) , UPD_MM_CPY_VALUE )"		4792640	0					
ANR	4793094	Callee	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793095	Identifier	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793096	ArgumentList	udev -> memory		4792640	1					
ANR	4793097	Argument	udev -> memory		4792640	0					
ANR	4793098	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793099	Identifier	udev		4792640	0					
ANR	4793100	Identifier	memory		4792640	1					
ANR	4793101	Argument	choice		4792640	1					
ANR	4793102	Identifier	choice		4792640	0					
ANR	4793103	Argument	upd -> choice		4792640	2					
ANR	4793104	PtrMemberAccess	upd -> choice		4792640	0					
ANR	4793105	Identifier	upd		4792640	0					
ANR	4793106	Identifier	choice		4792640	1					
ANR	4793107	Argument	countof ( upd_choice )		4792640	3					
ANR	4793108	CallExpression	countof ( upd_choice )		4792640	0					
ANR	4793109	Callee	countof		4792640	0					
ANR	4793110	Identifier	countof		4792640	0					
ANR	4793111	ArgumentList	upd_choice		4792640	1					
ANR	4793112	Argument	upd_choice		4792640	0					
ANR	4793113	Identifier	upd_choice		4792640	0					
ANR	4793114	Argument	UPD_MM_CPY_VALUE		4792640	4					
ANR	4793115	Identifier	UPD_MM_CPY_VALUE		4792640	0					
ANR	4793116	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , ints , upd -> ints , countof ( upd_ints ) , UPD_MM_CPY_VALUE )"	1794:5:73359:73457	4792640	2	True				
ANR	4793117	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , ints , upd -> ints , countof ( upd_ints ) , UPD_MM_CPY_VALUE )"		4792640	0					
ANR	4793118	Callee	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793119	Identifier	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793120	ArgumentList	udev -> memory		4792640	1					
ANR	4793121	Argument	udev -> memory		4792640	0					
ANR	4793122	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793123	Identifier	udev		4792640	0					
ANR	4793124	Identifier	memory		4792640	1					
ANR	4793125	Argument	ints		4792640	1					
ANR	4793126	Identifier	ints		4792640	0					
ANR	4793127	Argument	upd -> ints		4792640	2					
ANR	4793128	PtrMemberAccess	upd -> ints		4792640	0					
ANR	4793129	Identifier	upd		4792640	0					
ANR	4793130	Identifier	ints		4792640	1					
ANR	4793131	Argument	countof ( upd_ints )		4792640	3					
ANR	4793132	CallExpression	countof ( upd_ints )		4792640	0					
ANR	4793133	Callee	countof		4792640	0					
ANR	4793134	Identifier	countof		4792640	0					
ANR	4793135	ArgumentList	upd_ints		4792640	1					
ANR	4793136	Argument	upd_ints		4792640	0					
ANR	4793137	Identifier	upd_ints		4792640	0					
ANR	4793138	Argument	UPD_MM_CPY_VALUE		4792640	4					
ANR	4793139	Identifier	UPD_MM_CPY_VALUE		4792640	0					
ANR	4793140	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , int_a , upd -> int_a , countof ( upd_int_a ) , UPD_MM_CPY_PARAM )"	1796:5:73464:73563	4792640	3	True				
ANR	4793141	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , int_a , upd -> int_a , countof ( upd_int_a ) , UPD_MM_CPY_PARAM )"		4792640	0					
ANR	4793142	Callee	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793143	Identifier	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793144	ArgumentList	udev -> memory		4792640	1					
ANR	4793145	Argument	udev -> memory		4792640	0					
ANR	4793146	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793147	Identifier	udev		4792640	0					
ANR	4793148	Identifier	memory		4792640	1					
ANR	4793149	Argument	int_a		4792640	1					
ANR	4793150	Identifier	int_a		4792640	0					
ANR	4793151	Argument	upd -> int_a		4792640	2					
ANR	4793152	PtrMemberAccess	upd -> int_a		4792640	0					
ANR	4793153	Identifier	upd		4792640	0					
ANR	4793154	Identifier	int_a		4792640	1					
ANR	4793155	Argument	countof ( upd_int_a )		4792640	3					
ANR	4793156	CallExpression	countof ( upd_int_a )		4792640	0					
ANR	4793157	Callee	countof		4792640	0					
ANR	4793158	Identifier	countof		4792640	0					
ANR	4793159	ArgumentList	upd_int_a		4792640	1					
ANR	4793160	Argument	upd_int_a		4792640	0					
ANR	4793161	Identifier	upd_int_a		4792640	0					
ANR	4793162	Argument	UPD_MM_CPY_PARAM		4792640	4					
ANR	4793163	Identifier	UPD_MM_CPY_PARAM		4792640	0					
ANR	4793164	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , strings , upd -> strings , countof ( upd_strings ) , UPD_MM_CPY_PARAM )"	1798:5:73570:73671	4792640	4	True				
ANR	4793165	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , strings , upd -> strings , countof ( upd_strings ) , UPD_MM_CPY_PARAM )"		4792640	0					
ANR	4793166	Callee	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793167	Identifier	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793168	ArgumentList	udev -> memory		4792640	1					
ANR	4793169	Argument	udev -> memory		4792640	0					
ANR	4793170	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793171	Identifier	udev		4792640	0					
ANR	4793172	Identifier	memory		4792640	1					
ANR	4793173	Argument	strings		4792640	1					
ANR	4793174	Identifier	strings		4792640	0					
ANR	4793175	Argument	upd -> strings		4792640	2					
ANR	4793176	PtrMemberAccess	upd -> strings		4792640	0					
ANR	4793177	Identifier	upd		4792640	0					
ANR	4793178	Identifier	strings		4792640	1					
ANR	4793179	Argument	countof ( upd_strings )		4792640	3					
ANR	4793180	CallExpression	countof ( upd_strings )		4792640	0					
ANR	4793181	Callee	countof		4792640	0					
ANR	4793182	Identifier	countof		4792640	0					
ANR	4793183	ArgumentList	upd_strings		4792640	1					
ANR	4793184	Argument	upd_strings		4792640	0					
ANR	4793185	Identifier	upd_strings		4792640	0					
ANR	4793186	Argument	UPD_MM_CPY_PARAM		4792640	4					
ANR	4793187	Identifier	UPD_MM_CPY_PARAM		4792640	0					
ANR	4793188	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , string_a , upd -> string_a , countof ( upd_string_a ) , UPD_MM_CPY_APARAM )"	1800:5:73678:73781	4792640	5	True				
ANR	4793189	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , string_a , upd -> string_a , countof ( upd_string_a ) , UPD_MM_CPY_APARAM )"		4792640	0					
ANR	4793190	Callee	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793191	Identifier	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793192	ArgumentList	udev -> memory		4792640	1					
ANR	4793193	Argument	udev -> memory		4792640	0					
ANR	4793194	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793195	Identifier	udev		4792640	0					
ANR	4793196	Identifier	memory		4792640	1					
ANR	4793197	Argument	string_a		4792640	1					
ANR	4793198	Identifier	string_a		4792640	0					
ANR	4793199	Argument	upd -> string_a		4792640	2					
ANR	4793200	PtrMemberAccess	upd -> string_a		4792640	0					
ANR	4793201	Identifier	upd		4792640	0					
ANR	4793202	Identifier	string_a		4792640	1					
ANR	4793203	Argument	countof ( upd_string_a )		4792640	3					
ANR	4793204	CallExpression	countof ( upd_string_a )		4792640	0					
ANR	4793205	Callee	countof		4792640	0					
ANR	4793206	Identifier	countof		4792640	0					
ANR	4793207	ArgumentList	upd_string_a		4792640	1					
ANR	4793208	Argument	upd_string_a		4792640	0					
ANR	4793209	Identifier	upd_string_a		4792640	0					
ANR	4793210	Argument	UPD_MM_CPY_APARAM		4792640	4					
ANR	4793211	Identifier	UPD_MM_CPY_APARAM		4792640	0					
ANR	4793212	ExpressionStatement	"UPD_MM_CPY_ARRAY ( udev -> memory , float_a , upd -> float_a , countof ( upd_float_a ) , UPD_MM_CPY_PARAM )"	1802:5:73788:73889	4792640	6	True				
ANR	4793213	CallExpression	"UPD_MM_CPY_ARRAY ( udev -> memory , float_a , upd -> float_a , countof ( upd_float_a ) , UPD_MM_CPY_PARAM )"		4792640	0					
ANR	4793214	Callee	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793215	Identifier	UPD_MM_CPY_ARRAY		4792640	0					
ANR	4793216	ArgumentList	udev -> memory		4792640	1					
ANR	4793217	Argument	udev -> memory		4792640	0					
ANR	4793218	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793219	Identifier	udev		4792640	0					
ANR	4793220	Identifier	memory		4792640	1					
ANR	4793221	Argument	float_a		4792640	1					
ANR	4793222	Identifier	float_a		4792640	0					
ANR	4793223	Argument	upd -> float_a		4792640	2					
ANR	4793224	PtrMemberAccess	upd -> float_a		4792640	0					
ANR	4793225	Identifier	upd		4792640	0					
ANR	4793226	Identifier	float_a		4792640	1					
ANR	4793227	Argument	countof ( upd_float_a )		4792640	3					
ANR	4793228	CallExpression	countof ( upd_float_a )		4792640	0					
ANR	4793229	Callee	countof		4792640	0					
ANR	4793230	Identifier	countof		4792640	0					
ANR	4793231	ArgumentList	upd_float_a		4792640	1					
ANR	4793232	Argument	upd_float_a		4792640	0					
ANR	4793233	Identifier	upd_float_a		4792640	0					
ANR	4793234	Argument	UPD_MM_CPY_PARAM		4792640	4					
ANR	4793235	Identifier	UPD_MM_CPY_PARAM		4792640	0					
ANR	4793236	ElseStatement	else		4792640	0					
ANR	4793237	CompoundStatement		138:10:5608:5608	4792640	0					
ANR	4793238	ExpressionStatement	flags = 0	1805:5:73908:73917	4792640	0	True				
ANR	4793239	AssignmentExpression	flags = 0		4792640	0		=			
ANR	4793240	Identifier	flags		4792640	0					
ANR	4793241	PrimaryExpression	0		4792640	1					
ANR	4793242	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , choice , countof ( upd_choice ) )"	1806:5:73924:73984	4792640	1	True				
ANR	4793243	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , choice , countof ( upd_choice ) )"		4792640	0					
ANR	4793244	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793245	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793246	ArgumentList	udev -> memory		4792640	1					
ANR	4793247	Argument	udev -> memory		4792640	0					
ANR	4793248	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793249	Identifier	udev		4792640	0					
ANR	4793250	Identifier	memory		4792640	1					
ANR	4793251	Argument	choice		4792640	1					
ANR	4793252	Identifier	choice		4792640	0					
ANR	4793253	Argument	countof ( upd_choice )		4792640	2					
ANR	4793254	CallExpression	countof ( upd_choice )		4792640	0					
ANR	4793255	Callee	countof		4792640	0					
ANR	4793256	Identifier	countof		4792640	0					
ANR	4793257	ArgumentList	upd_choice		4792640	1					
ANR	4793258	Argument	upd_choice		4792640	0					
ANR	4793259	Identifier	upd_choice		4792640	0					
ANR	4793260	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ints , countof ( upd_ints ) )"	1807:5:73991:74049	4792640	2	True				
ANR	4793261	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ints , countof ( upd_ints ) )"		4792640	0					
ANR	4793262	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793263	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793264	ArgumentList	udev -> memory		4792640	1					
ANR	4793265	Argument	udev -> memory		4792640	0					
ANR	4793266	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793267	Identifier	udev		4792640	0					
ANR	4793268	Identifier	memory		4792640	1					
ANR	4793269	Argument	ints		4792640	1					
ANR	4793270	Identifier	ints		4792640	0					
ANR	4793271	Argument	countof ( upd_ints )		4792640	2					
ANR	4793272	CallExpression	countof ( upd_ints )		4792640	0					
ANR	4793273	Callee	countof		4792640	0					
ANR	4793274	Identifier	countof		4792640	0					
ANR	4793275	ArgumentList	upd_ints		4792640	1					
ANR	4793276	Argument	upd_ints		4792640	0					
ANR	4793277	Identifier	upd_ints		4792640	0					
ANR	4793278	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , int_a , countof ( upd_int_a ) )"	1808:5:74056:74115	4792640	3	True				
ANR	4793279	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , int_a , countof ( upd_int_a ) )"		4792640	0					
ANR	4793280	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793281	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793282	ArgumentList	udev -> memory		4792640	1					
ANR	4793283	Argument	udev -> memory		4792640	0					
ANR	4793284	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793285	Identifier	udev		4792640	0					
ANR	4793286	Identifier	memory		4792640	1					
ANR	4793287	Argument	int_a		4792640	1					
ANR	4793288	Identifier	int_a		4792640	0					
ANR	4793289	Argument	countof ( upd_int_a )		4792640	2					
ANR	4793290	CallExpression	countof ( upd_int_a )		4792640	0					
ANR	4793291	Callee	countof		4792640	0					
ANR	4793292	Identifier	countof		4792640	0					
ANR	4793293	ArgumentList	upd_int_a		4792640	1					
ANR	4793294	Argument	upd_int_a		4792640	0					
ANR	4793295	Identifier	upd_int_a		4792640	0					
ANR	4793296	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , strings , countof ( upd_strings ) )"	1809:5:74122:74183	4792640	4	True				
ANR	4793297	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , strings , countof ( upd_strings ) )"		4792640	0					
ANR	4793298	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793299	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793300	ArgumentList	udev -> memory		4792640	1					
ANR	4793301	Argument	udev -> memory		4792640	0					
ANR	4793302	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793303	Identifier	udev		4792640	0					
ANR	4793304	Identifier	memory		4792640	1					
ANR	4793305	Argument	strings		4792640	1					
ANR	4793306	Identifier	strings		4792640	0					
ANR	4793307	Argument	countof ( upd_strings )		4792640	2					
ANR	4793308	CallExpression	countof ( upd_strings )		4792640	0					
ANR	4793309	Callee	countof		4792640	0					
ANR	4793310	Identifier	countof		4792640	0					
ANR	4793311	ArgumentList	upd_strings		4792640	1					
ANR	4793312	Argument	upd_strings		4792640	0					
ANR	4793313	Identifier	upd_strings		4792640	0					
ANR	4793314	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , string_a , countof ( upd_string_a ) )"	1810:5:74190:74252	4792640	5	True				
ANR	4793315	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , string_a , countof ( upd_string_a ) )"		4792640	0					
ANR	4793316	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793317	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793318	ArgumentList	udev -> memory		4792640	1					
ANR	4793319	Argument	udev -> memory		4792640	0					
ANR	4793320	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793321	Identifier	udev		4792640	0					
ANR	4793322	Identifier	memory		4792640	1					
ANR	4793323	Argument	string_a		4792640	1					
ANR	4793324	Identifier	string_a		4792640	0					
ANR	4793325	Argument	countof ( upd_string_a )		4792640	2					
ANR	4793326	CallExpression	countof ( upd_string_a )		4792640	0					
ANR	4793327	Callee	countof		4792640	0					
ANR	4793328	Identifier	countof		4792640	0					
ANR	4793329	ArgumentList	upd_string_a		4792640	1					
ANR	4793330	Argument	upd_string_a		4792640	0					
ANR	4793331	Identifier	upd_string_a		4792640	0					
ANR	4793332	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , float_a , countof ( upd_float_a ) )"	1811:5:74259:74320	4792640	6	True				
ANR	4793333	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , float_a , countof ( upd_float_a ) )"		4792640	0					
ANR	4793334	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793335	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4793336	ArgumentList	udev -> memory		4792640	1					
ANR	4793337	Argument	udev -> memory		4792640	0					
ANR	4793338	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793339	Identifier	udev		4792640	0					
ANR	4793340	Identifier	memory		4792640	1					
ANR	4793341	Argument	float_a		4792640	1					
ANR	4793342	Identifier	float_a		4792640	0					
ANR	4793343	Argument	countof ( upd_float_a )		4792640	2					
ANR	4793344	CallExpression	countof ( upd_float_a )		4792640	0					
ANR	4793345	Callee	countof		4792640	0					
ANR	4793346	Identifier	countof		4792640	0					
ANR	4793347	ArgumentList	upd_float_a		4792640	1					
ANR	4793348	Argument	upd_float_a		4792640	0					
ANR	4793349	Identifier	upd_float_a		4792640	0					
ANR	4793350	ForStatement	for ( i = 0 ; countof ( upd_choice ) > i ; ++ i )		4792640	74					
ANR	4793351	ForInit	i = 0 ;	1815:7:74370:74375	4792640	0	True				
ANR	4793352	AssignmentExpression	i = 0		4792640	0		=			
ANR	4793353	Identifier	i		4792640	0					
ANR	4793354	PrimaryExpression	0		4792640	1					
ANR	4793355	Condition	countof ( upd_choice ) > i	1815:14:74377:74399	4792640	1	True				
ANR	4793356	RelationalExpression	countof ( upd_choice ) > i		4792640	0		>			
ANR	4793357	CallExpression	countof ( upd_choice )		4792640	0					
ANR	4793358	Callee	countof		4792640	0					
ANR	4793359	Identifier	countof		4792640	0					
ANR	4793360	ArgumentList	upd_choice		4792640	1					
ANR	4793361	Argument	upd_choice		4792640	0					
ANR	4793362	Identifier	upd_choice		4792640	0					
ANR	4793363	Identifier	i		4792640	1					
ANR	4793364	UnaryExpression	++ i	1815:39:74402:74404	4792640	2	True				
ANR	4793365	IncDec	++		4792640	0					
ANR	4793366	Identifier	i		4792640	1					
ANR	4793367	CompoundStatement		150:6:6122:6163	4792640	3					
ANR	4793368	IdentifierDeclStatement	"gs_param_string value = { NULL , 0 , false } ;"	1816:6:74415:74456	4792640	0	True				
ANR	4793369	IdentifierDecl	"value = { NULL , 0 , false }"		4792640	0					
ANR	4793370	IdentifierDeclType	gs_param_string		4792640	0					
ANR	4793371	Identifier	value		4792640	1					
ANR	4793372	AssignmentExpression	"value = { NULL , 0 , false }"		4792640	2		=			
ANR	4793373	Identifier	value		4792640	0					
ANR	4793374	InitializerList	NULL		4792640	1					
ANR	4793375	Identifier	NULL		4792640	0					
ANR	4793376	PrimaryExpression	0		4792640	1					
ANR	4793377	Identifier	false		4792640	2					
ANR	4793378	IfStatement	if ( ! upd_choice [ i ] [ 0 ] )		4792640	1					
ANR	4793379	Condition	! upd_choice [ i ] [ 0 ]	1817:9:74467:74483	4792640	0	True				
ANR	4793380	UnaryOperationExpression	! upd_choice [ i ] [ 0 ]		4792640	0					
ANR	4793381	UnaryOperator	!		4792640	0					
ANR	4793382	ArrayIndexing	upd_choice [ i ] [ 0 ]		4792640	1					
ANR	4793383	ArrayIndexing	upd_choice [ i ]		4792640	0					
ANR	4793384	Identifier	upd_choice		4792640	0					
ANR	4793385	Identifier	i		4792640	1					
ANR	4793386	PrimaryExpression	0		4792640	1					
ANR	4793387	ContinueStatement	continue ;	1817:28:74486:74494	4792640	1	True				
ANR	4793388	ExpressionStatement	"UPD_PARAM_READ ( param_read_name , upd_choice [ i ] [ 0 ] , value , udev -> memory )"	1818:6:74502:74569	4792640	2	True				
ANR	4793389	CallExpression	"UPD_PARAM_READ ( param_read_name , upd_choice [ i ] [ 0 ] , value , udev -> memory )"		4792640	0					
ANR	4793390	Callee	UPD_PARAM_READ		4792640	0					
ANR	4793391	Identifier	UPD_PARAM_READ		4792640	0					
ANR	4793392	ArgumentList	param_read_name		4792640	1					
ANR	4793393	Argument	param_read_name		4792640	0					
ANR	4793394	Identifier	param_read_name		4792640	0					
ANR	4793395	Argument	upd_choice [ i ] [ 0 ]		4792640	1					
ANR	4793396	ArrayIndexing	upd_choice [ i ] [ 0 ]		4792640	0					
ANR	4793397	ArrayIndexing	upd_choice [ i ]		4792640	0					
ANR	4793398	Identifier	upd_choice		4792640	0					
ANR	4793399	Identifier	i		4792640	1					
ANR	4793400	PrimaryExpression	0		4792640	1					
ANR	4793401	Argument	value		4792640	2					
ANR	4793402	Identifier	value		4792640	0					
ANR	4793403	Argument	udev -> memory		4792640	3					
ANR	4793404	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793405	Identifier	udev		4792640	0					
ANR	4793406	Identifier	memory		4792640	1					
ANR	4793407	IfStatement	if ( 0 == code )		4792640	3					
ANR	4793408	Condition	0 == code	1819:9:74580:74588	4792640	0	True				
ANR	4793409	EqualityExpression	0 == code		4792640	0		==			
ANR	4793410	PrimaryExpression	0		4792640	0					
ANR	4793411	Identifier	code		4792640	1					
ANR	4793412	CompoundStatement		153:20:6298:6298	4792640	1					
ANR	4793413	IfStatement	if ( 0 <= error )		4792640	0					
ANR	4793414	Condition	0 <= error	1820:12:74605:74614	4792640	0	True				
ANR	4793415	RelationalExpression	0 <= error		4792640	0		<=			
ANR	4793416	PrimaryExpression	0		4792640	0					
ANR	4793417	Identifier	error		4792640	1					
ANR	4793418	ExpressionStatement	error |= UPD_PUT_CHOICE	1820:24:74617:74640	4792640	1	True				
ANR	4793419	AssignmentExpression	error |= UPD_PUT_CHOICE		4792640	0		|=			
ANR	4793420	Identifier	error		4792640	0					
ANR	4793421	Identifier	UPD_PUT_CHOICE		4792640	1					
ANR	4793422	ExpressionStatement	choice [ i ] = 0	1821:9:74651:74664	4792640	1	True				
ANR	4793423	AssignmentExpression	choice [ i ] = 0		4792640	0		=			
ANR	4793424	ArrayIndexing	choice [ i ]		4792640	0					
ANR	4793425	Identifier	choice		4792640	0					
ANR	4793426	Identifier	i		4792640	1					
ANR	4793427	PrimaryExpression	0		4792640	1					
ANR	4793428	IfStatement	if ( 0 < value . size )		4792640	2					
ANR	4793429	Condition	0 < value . size	1822:12:74678:74691	4792640	0	True				
ANR	4793430	RelationalExpression	0 < value . size		4792640	0		<			
ANR	4793431	PrimaryExpression	0		4792640	0					
ANR	4793432	MemberAccess	value . size		4792640	1					
ANR	4793433	Identifier	value		4792640	0					
ANR	4793434	Identifier	size		4792640	1					
ANR	4793435	CompoundStatement		157:12:6415:6420	4792640	1					
ANR	4793436	IdentifierDeclStatement	int j ;	1823:12:74708:74713	4792640	0	True				
ANR	4793437	IdentifierDecl	j		4792640	0					
ANR	4793438	IdentifierDeclType	int		4792640	0					
ANR	4793439	Identifier	j		4792640	1					
ANR	4793440	ForStatement	for ( j = 1 ; upd_choice [ i ] [ j ] ; ++ j )		4792640	1					
ANR	4793441	ForInit	j = 1 ;	1824:16:74731:74736	4792640	0	True				
ANR	4793442	AssignmentExpression	j = 1		4792640	0		=			
ANR	4793443	Identifier	j		4792640	0					
ANR	4793444	PrimaryExpression	1		4792640	1					
ANR	4793445	Condition	upd_choice [ i ] [ j ]	1824:23:74738:74753	4792640	1	True				
ANR	4793446	ArrayIndexing	upd_choice [ i ] [ j ]		4792640	0					
ANR	4793447	ArrayIndexing	upd_choice [ i ]		4792640	0					
ANR	4793448	Identifier	upd_choice		4792640	0					
ANR	4793449	Identifier	i		4792640	1					
ANR	4793450	Identifier	j		4792640	1					
ANR	4793451	UnaryExpression	++ j	1824:41:74756:74758	4792640	2	True				
ANR	4793452	IncDec	++		4792640	0					
ANR	4793453	Identifier	j		4792640	1					
ANR	4793454	CompoundStatement		158:46:6468:6468	4792640	3					
ANR	4793455	IfStatement	"if ( ( strlen ( upd_choice [ i ] [ j ] ) == value . size ) && ( 0 == strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size ) ) )"		4792640	0					
ANR	4793456	Condition	"( strlen ( upd_choice [ i ] [ j ] ) == value . size ) && ( 0 == strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size ) )"	1825:18:74781:74940	4792640	0	True				
ANR	4793457	AndExpression	"( strlen ( upd_choice [ i ] [ j ] ) == value . size ) && ( 0 == strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size ) )"		4792640	0		&&			
ANR	4793458	EqualityExpression	strlen ( upd_choice [ i ] [ j ] ) == value . size		4792640	0		==			
ANR	4793459	CallExpression	strlen ( upd_choice [ i ] [ j ] )		4792640	0					
ANR	4793460	Callee	strlen		4792640	0					
ANR	4793461	Identifier	strlen		4792640	0					
ANR	4793462	ArgumentList	upd_choice [ i ] [ j ]		4792640	1					
ANR	4793463	Argument	upd_choice [ i ] [ j ]		4792640	0					
ANR	4793464	ArrayIndexing	upd_choice [ i ] [ j ]		4792640	0					
ANR	4793465	ArrayIndexing	upd_choice [ i ]		4792640	0					
ANR	4793466	Identifier	upd_choice		4792640	0					
ANR	4793467	Identifier	i		4792640	1					
ANR	4793468	Identifier	j		4792640	1					
ANR	4793469	MemberAccess	value . size		4792640	1					
ANR	4793470	Identifier	value		4792640	0					
ANR	4793471	Identifier	size		4792640	1					
ANR	4793472	EqualityExpression	"0 == strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size )"		4792640	1		==			
ANR	4793473	PrimaryExpression	0		4792640	0					
ANR	4793474	CallExpression	"strncmp ( upd_choice [ i ] [ j ] , ( const char * ) value . data , value . size )"		4792640	1					
ANR	4793475	Callee	strncmp		4792640	0					
ANR	4793476	Identifier	strncmp		4792640	0					
ANR	4793477	ArgumentList	upd_choice [ i ] [ j ]		4792640	1					
ANR	4793478	Argument	upd_choice [ i ] [ j ]		4792640	0					
ANR	4793479	ArrayIndexing	upd_choice [ i ] [ j ]		4792640	0					
ANR	4793480	ArrayIndexing	upd_choice [ i ]		4792640	0					
ANR	4793481	Identifier	upd_choice		4792640	0					
ANR	4793482	Identifier	i		4792640	1					
ANR	4793483	Identifier	j		4792640	1					
ANR	4793484	Argument	( const char * ) value . data		4792640	1					
ANR	4793485	CastExpression	( const char * ) value . data		4792640	0					
ANR	4793486	CastTarget	const char *		4792640	0					
ANR	4793487	MemberAccess	value . data		4792640	1					
ANR	4793488	Identifier	value		4792640	0					
ANR	4793489	Identifier	data		4792640	1					
ANR	4793490	Argument	value . size		4792640	2					
ANR	4793491	MemberAccess	value . size		4792640	0					
ANR	4793492	Identifier	value		4792640	0					
ANR	4793493	Identifier	size		4792640	1					
ANR	4793494	CompoundStatement		161:68:6650:6650	4792640	1					
ANR	4793495	ExpressionStatement	choice [ i ] = j	1828:18:74963:74976	4792640	0	True				
ANR	4793496	AssignmentExpression	choice [ i ] = j		4792640	0		=			
ANR	4793497	ArrayIndexing	choice [ i ]		4792640	0					
ANR	4793498	Identifier	choice		4792640	0					
ANR	4793499	Identifier	i		4792640	1					
ANR	4793500	Identifier	j		4792640	1					
ANR	4793501	BreakStatement	break ;	1829:18:74996:75001	4792640	1	True				
ANR	4793502	ForStatement	for ( i = 0 ; countof ( upd_flags ) > i ; ++ i )		4792640	75					
ANR	4793503	ForInit	i = 0 ;	1837:7:75099:75104	4792640	0	True				
ANR	4793504	AssignmentExpression	i = 0		4792640	0		=			
ANR	4793505	Identifier	i		4792640	0					
ANR	4793506	PrimaryExpression	0		4792640	1					
ANR	4793507	Condition	countof ( upd_flags ) > i	1837:14:75106:75127	4792640	1	True				
ANR	4793508	RelationalExpression	countof ( upd_flags ) > i		4792640	0		>			
ANR	4793509	CallExpression	countof ( upd_flags )		4792640	0					
ANR	4793510	Callee	countof		4792640	0					
ANR	4793511	Identifier	countof		4792640	0					
ANR	4793512	ArgumentList	upd_flags		4792640	1					
ANR	4793513	Argument	upd_flags		4792640	0					
ANR	4793514	Identifier	upd_flags		4792640	0					
ANR	4793515	Identifier	i		4792640	1					
ANR	4793516	UnaryExpression	++ i	1837:38:75130:75132	4792640	2	True				
ANR	4793517	IncDec	++		4792640	0					
ANR	4793518	Identifier	i		4792640	1					
ANR	4793519	CompoundStatement		173:6:6891:6931	4792640	3					
ANR	4793520	IdentifierDeclStatement	uint32_t bit = ( uint32_t ) 1 << i ;	1838:6:75143:75176	4792640	0	True				
ANR	4793521	IdentifierDecl	bit = ( uint32_t ) 1 << i		4792640	0					
ANR	4793522	IdentifierDeclType	uint32_t		4792640	0					
ANR	4793523	Identifier	bit		4792640	1					
ANR	4793524	AssignmentExpression	bit = ( uint32_t ) 1 << i		4792640	2		=			
ANR	4793525	Identifier	bit		4792640	0					
ANR	4793526	ShiftExpression	( uint32_t ) 1 << i		4792640	1		<<			
ANR	4793527	CastExpression	( uint32_t ) 1		4792640	0					
ANR	4793528	CastTarget	uint32_t		4792640	0					
ANR	4793529	PrimaryExpression	1		4792640	1					
ANR	4793530	Identifier	i		4792640	1					
ANR	4793531	IdentifierDeclStatement	bool flag = flags & bit ? true : false ;	1839:6:75184:75224	4792640	1	True				
ANR	4793532	IdentifierDecl	flag = flags & bit ? true : false		4792640	0					
ANR	4793533	IdentifierDeclType	bool		4792640	0					
ANR	4793534	Identifier	flag		4792640	1					
ANR	4793535	AssignmentExpression	flag = flags & bit ? true : false		4792640	2		=			
ANR	4793536	Identifier	flag		4792640	0					
ANR	4793537	ConditionalExpression	flags & bit ? true : false		4792640	1					
ANR	4793538	Condition	flags & bit		4792640	0					
ANR	4793539	BitAndExpression	flags & bit		4792640	0		&			
ANR	4793540	Identifier	flags		4792640	0					
ANR	4793541	Identifier	bit		4792640	1					
ANR	4793542	Identifier	true		4792640	1					
ANR	4793543	Identifier	false		4792640	2					
ANR	4793544	IfStatement	if ( ! upd_flags [ i ] )		4792640	2					
ANR	4793545	Condition	! upd_flags [ i ]	1840:9:75235:75247	4792640	0	True				
ANR	4793546	UnaryOperationExpression	! upd_flags [ i ]		4792640	0					
ANR	4793547	UnaryOperator	!		4792640	0					
ANR	4793548	ArrayIndexing	upd_flags [ i ]		4792640	1					
ANR	4793549	Identifier	upd_flags		4792640	0					
ANR	4793550	Identifier	i		4792640	1					
ANR	4793551	ContinueStatement	continue ;	1840:24:75250:75258	4792640	1	True				
ANR	4793552	ExpressionStatement	"UPD_PARAM_READ ( param_read_bool , upd_flags [ i ] , flag , udev -> memory )"	1841:6:75266:75328	4792640	3	True				
ANR	4793553	CallExpression	"UPD_PARAM_READ ( param_read_bool , upd_flags [ i ] , flag , udev -> memory )"		4792640	0					
ANR	4793554	Callee	UPD_PARAM_READ		4792640	0					
ANR	4793555	Identifier	UPD_PARAM_READ		4792640	0					
ANR	4793556	ArgumentList	param_read_bool		4792640	1					
ANR	4793557	Argument	param_read_bool		4792640	0					
ANR	4793558	Identifier	param_read_bool		4792640	0					
ANR	4793559	Argument	upd_flags [ i ]		4792640	1					
ANR	4793560	ArrayIndexing	upd_flags [ i ]		4792640	0					
ANR	4793561	Identifier	upd_flags		4792640	0					
ANR	4793562	Identifier	i		4792640	1					
ANR	4793563	Argument	flag		4792640	2					
ANR	4793564	Identifier	flag		4792640	0					
ANR	4793565	Argument	udev -> memory		4792640	3					
ANR	4793566	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793567	Identifier	udev		4792640	0					
ANR	4793568	Identifier	memory		4792640	1					
ANR	4793569	IfStatement	if ( 0 == code )		4792640	4					
ANR	4793570	Condition	0 == code	1842:9:75339:75347	4792640	0	True				
ANR	4793571	EqualityExpression	0 == code		4792640	0		==			
ANR	4793572	PrimaryExpression	0		4792640	0					
ANR	4793573	Identifier	code		4792640	1					
ANR	4793574	CompoundStatement		176:20:7057:7057	4792640	1					
ANR	4793575	IfStatement	if ( 0 <= error )		4792640	0					
ANR	4793576	Condition	0 <= error	1843:12:75364:75373	4792640	0	True				
ANR	4793577	RelationalExpression	0 <= error		4792640	0		<=			
ANR	4793578	PrimaryExpression	0		4792640	0					
ANR	4793579	Identifier	error		4792640	1					
ANR	4793580	ExpressionStatement	error |= UPD_PUT_FLAGS	1843:24:75376:75398	4792640	1	True				
ANR	4793581	AssignmentExpression	error |= UPD_PUT_FLAGS		4792640	0		|=			
ANR	4793582	Identifier	error		4792640	0					
ANR	4793583	Identifier	UPD_PUT_FLAGS		4792640	1					
ANR	4793584	IfStatement	if ( flag )		4792640	1					
ANR	4793585	Condition	flag	1844:12:75412:75415	4792640	0	True				
ANR	4793586	Identifier	flag		4792640	0					
ANR	4793587	ExpressionStatement	flags |= bit	1844:18:75418:75431	4792640	1	True				
ANR	4793588	AssignmentExpression	flags |= bit		4792640	0		|=			
ANR	4793589	Identifier	flags		4792640	0					
ANR	4793590	Identifier	bit		4792640	1					
ANR	4793591	ElseStatement	else		4792640	0					
ANR	4793592	ExpressionStatement	flags &= ~bit	1845:18:75451:75464	4792640	0	True				
ANR	4793593	AssignmentExpression	flags &= ~bit		4792640	0		&=			
ANR	4793594	Identifier	flags		4792640	0					
ANR	4793595	Identifier	~bit		4792640	1					
ANR	4793596	ForStatement	for ( i = 0 ; countof ( upd_ints ) > i ; ++ i )		4792640	76					
ANR	4793597	ForInit	i = 0 ;	1850:7:75520:75525	4792640	0	True				
ANR	4793598	AssignmentExpression	i = 0		4792640	0		=			
ANR	4793599	Identifier	i		4792640	0					
ANR	4793600	PrimaryExpression	0		4792640	1					
ANR	4793601	Condition	countof ( upd_ints ) > i	1850:14:75527:75547	4792640	1	True				
ANR	4793602	RelationalExpression	countof ( upd_ints ) > i		4792640	0		>			
ANR	4793603	CallExpression	countof ( upd_ints )		4792640	0					
ANR	4793604	Callee	countof		4792640	0					
ANR	4793605	Identifier	countof		4792640	0					
ANR	4793606	ArgumentList	upd_ints		4792640	1					
ANR	4793607	Argument	upd_ints		4792640	0					
ANR	4793608	Identifier	upd_ints		4792640	0					
ANR	4793609	Identifier	i		4792640	1					
ANR	4793610	UnaryExpression	++ i	1850:37:75550:75552	4792640	2	True				
ANR	4793611	IncDec	++		4792640	0					
ANR	4793612	Identifier	i		4792640	1					
ANR	4793613	CompoundStatement		185:6:7270:7289	4792640	3					
ANR	4793614	IdentifierDeclStatement	int value = ints [ i ] ;	1851:6:75563:75582	4792640	0	True				
ANR	4793615	IdentifierDecl	value = ints [ i ]		4792640	0					
ANR	4793616	IdentifierDeclType	int		4792640	0					
ANR	4793617	Identifier	value		4792640	1					
ANR	4793618	AssignmentExpression	value = ints [ i ]		4792640	2		=			
ANR	4793619	Identifier	value		4792640	0					
ANR	4793620	ArrayIndexing	ints [ i ]		4792640	1					
ANR	4793621	Identifier	ints		4792640	0					
ANR	4793622	Identifier	i		4792640	1					
ANR	4793623	IfStatement	if ( ! upd_ints [ i ] )		4792640	1					
ANR	4793624	Condition	! upd_ints [ i ]	1852:9:75593:75604	4792640	0	True				
ANR	4793625	UnaryOperationExpression	! upd_ints [ i ]		4792640	0					
ANR	4793626	UnaryOperator	!		4792640	0					
ANR	4793627	ArrayIndexing	upd_ints [ i ]		4792640	1					
ANR	4793628	Identifier	upd_ints		4792640	0					
ANR	4793629	Identifier	i		4792640	1					
ANR	4793630	ContinueStatement	continue ;	1852:23:75607:75615	4792640	1	True				
ANR	4793631	ExpressionStatement	"UPD_PARAM_READ ( param_read_int , upd_ints [ i ] , value , udev -> memory )"	1853:6:75623:75684	4792640	2	True				
ANR	4793632	CallExpression	"UPD_PARAM_READ ( param_read_int , upd_ints [ i ] , value , udev -> memory )"		4792640	0					
ANR	4793633	Callee	UPD_PARAM_READ		4792640	0					
ANR	4793634	Identifier	UPD_PARAM_READ		4792640	0					
ANR	4793635	ArgumentList	param_read_int		4792640	1					
ANR	4793636	Argument	param_read_int		4792640	0					
ANR	4793637	Identifier	param_read_int		4792640	0					
ANR	4793638	Argument	upd_ints [ i ]		4792640	1					
ANR	4793639	ArrayIndexing	upd_ints [ i ]		4792640	0					
ANR	4793640	Identifier	upd_ints		4792640	0					
ANR	4793641	Identifier	i		4792640	1					
ANR	4793642	Argument	value		4792640	2					
ANR	4793643	Identifier	value		4792640	0					
ANR	4793644	Argument	udev -> memory		4792640	3					
ANR	4793645	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793646	Identifier	udev		4792640	0					
ANR	4793647	Identifier	memory		4792640	1					
ANR	4793648	IfStatement	if ( 0 == code )		4792640	3					
ANR	4793649	Condition	0 == code	1854:9:75695:75703	4792640	0	True				
ANR	4793650	EqualityExpression	0 == code		4792640	0		==			
ANR	4793651	PrimaryExpression	0		4792640	0					
ANR	4793652	Identifier	code		4792640	1					
ANR	4793653	CompoundStatement		188:20:7413:7413	4792640	1					
ANR	4793654	IfStatement	if ( 0 <= error )		4792640	0					
ANR	4793655	Condition	0 <= error	1855:12:75720:75729	4792640	0	True				
ANR	4793656	RelationalExpression	0 <= error		4792640	0		<=			
ANR	4793657	PrimaryExpression	0		4792640	0					
ANR	4793658	Identifier	error		4792640	1					
ANR	4793659	ExpressionStatement	error |= UPD_PUT_INTS	1855:24:75732:75753	4792640	1	True				
ANR	4793660	AssignmentExpression	error |= UPD_PUT_INTS		4792640	0		|=			
ANR	4793661	Identifier	error		4792640	0					
ANR	4793662	Identifier	UPD_PUT_INTS		4792640	1					
ANR	4793663	ExpressionStatement	ints [ i ] = value	1856:9:75764:75779	4792640	1	True				
ANR	4793664	AssignmentExpression	ints [ i ] = value		4792640	0		=			
ANR	4793665	ArrayIndexing	ints [ i ]		4792640	0					
ANR	4793666	Identifier	ints		4792640	0					
ANR	4793667	Identifier	i		4792640	1					
ANR	4793668	Identifier	value		4792640	1					
ANR	4793669	ForStatement	for ( i = 0 ; countof ( upd_int_a ) > i ; ++ i )		4792640	77					
ANR	4793670	ForInit	i = 0 ;	1861:7:75835:75840	4792640	0	True				
ANR	4793671	AssignmentExpression	i = 0		4792640	0		=			
ANR	4793672	Identifier	i		4792640	0					
ANR	4793673	PrimaryExpression	0		4792640	1					
ANR	4793674	Condition	countof ( upd_int_a ) > i	1861:14:75842:75863	4792640	1	True				
ANR	4793675	RelationalExpression	countof ( upd_int_a ) > i		4792640	0		>			
ANR	4793676	CallExpression	countof ( upd_int_a )		4792640	0					
ANR	4793677	Callee	countof		4792640	0					
ANR	4793678	Identifier	countof		4792640	0					
ANR	4793679	ArgumentList	upd_int_a		4792640	1					
ANR	4793680	Argument	upd_int_a		4792640	0					
ANR	4793681	Identifier	upd_int_a		4792640	0					
ANR	4793682	Identifier	i		4792640	1					
ANR	4793683	UnaryExpression	++ i	1861:38:75866:75868	4792640	2	True				
ANR	4793684	IncDec	++		4792640	0					
ANR	4793685	Identifier	i		4792640	1					
ANR	4793686	CompoundStatement		196:6:7586:7621	4792640	3					
ANR	4793687	IdentifierDeclStatement	gs_param_int_array value = int_a [ i ] ;	1862:6:75879:75914	4792640	0	True				
ANR	4793688	IdentifierDecl	value = int_a [ i ]		4792640	0					
ANR	4793689	IdentifierDeclType	gs_param_int_array		4792640	0					
ANR	4793690	Identifier	value		4792640	1					
ANR	4793691	AssignmentExpression	value = int_a [ i ]		4792640	2		=			
ANR	4793692	Identifier	value		4792640	0					
ANR	4793693	ArrayIndexing	int_a [ i ]		4792640	1					
ANR	4793694	Identifier	int_a		4792640	0					
ANR	4793695	Identifier	i		4792640	1					
ANR	4793696	IfStatement	if ( ! upd_int_a [ i ] )		4792640	1					
ANR	4793697	Condition	! upd_int_a [ i ]	1863:9:75925:75937	4792640	0	True				
ANR	4793698	UnaryOperationExpression	! upd_int_a [ i ]		4792640	0					
ANR	4793699	UnaryOperator	!		4792640	0					
ANR	4793700	ArrayIndexing	upd_int_a [ i ]		4792640	1					
ANR	4793701	Identifier	upd_int_a		4792640	0					
ANR	4793702	Identifier	i		4792640	1					
ANR	4793703	ContinueStatement	continue ;	1863:24:75940:75948	4792640	1	True				
ANR	4793704	ExpressionStatement	"UPD_PARAM_READ ( param_read_int_array , upd_int_a [ i ] , value , udev -> memory )"	1864:6:75956:76024	4792640	2	True				
ANR	4793705	CallExpression	"UPD_PARAM_READ ( param_read_int_array , upd_int_a [ i ] , value , udev -> memory )"		4792640	0					
ANR	4793706	Callee	UPD_PARAM_READ		4792640	0					
ANR	4793707	Identifier	UPD_PARAM_READ		4792640	0					
ANR	4793708	ArgumentList	param_read_int_array		4792640	1					
ANR	4793709	Argument	param_read_int_array		4792640	0					
ANR	4793710	Identifier	param_read_int_array		4792640	0					
ANR	4793711	Argument	upd_int_a [ i ]		4792640	1					
ANR	4793712	ArrayIndexing	upd_int_a [ i ]		4792640	0					
ANR	4793713	Identifier	upd_int_a		4792640	0					
ANR	4793714	Identifier	i		4792640	1					
ANR	4793715	Argument	value		4792640	2					
ANR	4793716	Identifier	value		4792640	0					
ANR	4793717	Argument	udev -> memory		4792640	3					
ANR	4793718	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793719	Identifier	udev		4792640	0					
ANR	4793720	Identifier	memory		4792640	1					
ANR	4793721	IfStatement	if ( 0 == code )		4792640	3					
ANR	4793722	Condition	0 == code	1865:9:76035:76043	4792640	0	True				
ANR	4793723	EqualityExpression	0 == code		4792640	0		==			
ANR	4793724	PrimaryExpression	0		4792640	0					
ANR	4793725	Identifier	code		4792640	1					
ANR	4793726	CompoundStatement		199:20:7753:7753	4792640	1					
ANR	4793727	IfStatement	if ( 0 <= error )		4792640	0					
ANR	4793728	Condition	0 <= error	1866:12:76060:76069	4792640	0	True				
ANR	4793729	RelationalExpression	0 <= error		4792640	0		<=			
ANR	4793730	PrimaryExpression	0		4792640	0					
ANR	4793731	Identifier	error		4792640	1					
ANR	4793732	ExpressionStatement	error |= UPD_PUT_INT_A	1866:24:76072:76094	4792640	1	True				
ANR	4793733	AssignmentExpression	error |= UPD_PUT_INT_A		4792640	0		|=			
ANR	4793734	Identifier	error		4792640	0					
ANR	4793735	Identifier	UPD_PUT_INT_A		4792640	1					
ANR	4793736	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ i ] )"	1867:9:76105:76145	4792640	1	True				
ANR	4793737	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ i ] )"		4792640	0					
ANR	4793738	Callee	UPD_MM_DEL_PARAM		4792640	0					
ANR	4793739	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4793740	ArgumentList	udev -> memory		4792640	1					
ANR	4793741	Argument	udev -> memory		4792640	0					
ANR	4793742	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793743	Identifier	udev		4792640	0					
ANR	4793744	Identifier	memory		4792640	1					
ANR	4793745	Argument	int_a [ i ]		4792640	1					
ANR	4793746	ArrayIndexing	int_a [ i ]		4792640	0					
ANR	4793747	Identifier	int_a		4792640	0					
ANR	4793748	Identifier	i		4792640	1					
ANR	4793749	IfStatement	if ( ! value . size )		4792640	2					
ANR	4793750	Condition	! value . size	1868:12:76159:76169	4792640	0	True				
ANR	4793751	UnaryOperationExpression	! value . size		4792640	0					
ANR	4793752	UnaryOperator	!		4792640	0					
ANR	4793753	MemberAccess	value . size		4792640	1					
ANR	4793754	Identifier	value		4792640	0					
ANR	4793755	Identifier	size		4792640	1					
ANR	4793756	CompoundStatement		202:25:7879:7879	4792640	1					
ANR	4793757	ExpressionStatement	value . data = NULL	1869:12:76186:76203	4792640	0	True				
ANR	4793758	AssignmentExpression	value . data = NULL		4792640	0		=			
ANR	4793759	MemberAccess	value . data		4792640	0					
ANR	4793760	Identifier	value		4792640	0					
ANR	4793761	Identifier	data		4792640	1					
ANR	4793762	Identifier	NULL		4792640	1					
ANR	4793763	ExpressionStatement	int_a [ i ] = value	1870:12:76217:76235	4792640	1	True				
ANR	4793764	AssignmentExpression	int_a [ i ] = value		4792640	0		=			
ANR	4793765	ArrayIndexing	int_a [ i ]		4792640	0					
ANR	4793766	Identifier	int_a		4792640	0					
ANR	4793767	Identifier	i		4792640	1					
ANR	4793768	Identifier	value		4792640	1					
ANR	4793769	ElseStatement	else		4792640	0					
ANR	4793770	CompoundStatement		205:16:7960:7960	4792640	0					
ANR	4793771	ExpressionStatement	"UPD_MM_CPY_PARAM ( udev -> memory , int_a [ i ] , value )"	1872:12:76267:76313	4792640	0	True				
ANR	4793772	CallExpression	"UPD_MM_CPY_PARAM ( udev -> memory , int_a [ i ] , value )"		4792640	0					
ANR	4793773	Callee	UPD_MM_CPY_PARAM		4792640	0					
ANR	4793774	Identifier	UPD_MM_CPY_PARAM		4792640	0					
ANR	4793775	ArgumentList	udev -> memory		4792640	1					
ANR	4793776	Argument	udev -> memory		4792640	0					
ANR	4793777	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793778	Identifier	udev		4792640	0					
ANR	4793779	Identifier	memory		4792640	1					
ANR	4793780	Argument	int_a [ i ]		4792640	1					
ANR	4793781	ArrayIndexing	int_a [ i ]		4792640	0					
ANR	4793782	Identifier	int_a		4792640	0					
ANR	4793783	Identifier	i		4792640	1					
ANR	4793784	Argument	value		4792640	2					
ANR	4793785	Identifier	value		4792640	0					
ANR	4793786	ForStatement	for ( i = 0 ; countof ( upd_strings ) > i ; ++ i )		4792640	78					
ANR	4793787	ForInit	i = 0 ;	1878:7:76373:76378	4792640	0	True				
ANR	4793788	AssignmentExpression	i = 0		4792640	0		=			
ANR	4793789	Identifier	i		4792640	0					
ANR	4793790	PrimaryExpression	0		4792640	1					
ANR	4793791	Condition	countof ( upd_strings ) > i	1878:14:76380:76403	4792640	1	True				
ANR	4793792	RelationalExpression	countof ( upd_strings ) > i		4792640	0		>			
ANR	4793793	CallExpression	countof ( upd_strings )		4792640	0					
ANR	4793794	Callee	countof		4792640	0					
ANR	4793795	Identifier	countof		4792640	0					
ANR	4793796	ArgumentList	upd_strings		4792640	1					
ANR	4793797	Argument	upd_strings		4792640	0					
ANR	4793798	Identifier	upd_strings		4792640	0					
ANR	4793799	Identifier	i		4792640	1					
ANR	4793800	UnaryExpression	++ i	1878:40:76406:76408	4792640	2	True				
ANR	4793801	IncDec	++		4792640	0					
ANR	4793802	Identifier	i		4792640	1					
ANR	4793803	CompoundStatement		213:6:8126:8160	4792640	3					
ANR	4793804	IdentifierDeclStatement	gs_param_string value = strings [ i ] ;	1879:6:76419:76453	4792640	0	True				
ANR	4793805	IdentifierDecl	value = strings [ i ]		4792640	0					
ANR	4793806	IdentifierDeclType	gs_param_string		4792640	0					
ANR	4793807	Identifier	value		4792640	1					
ANR	4793808	AssignmentExpression	value = strings [ i ]		4792640	2		=			
ANR	4793809	Identifier	value		4792640	0					
ANR	4793810	ArrayIndexing	strings [ i ]		4792640	1					
ANR	4793811	Identifier	strings		4792640	0					
ANR	4793812	Identifier	i		4792640	1					
ANR	4793813	IfStatement	if ( ! upd_strings [ i ] )		4792640	1					
ANR	4793814	Condition	! upd_strings [ i ]	1880:9:76464:76478	4792640	0	True				
ANR	4793815	UnaryOperationExpression	! upd_strings [ i ]		4792640	0					
ANR	4793816	UnaryOperator	!		4792640	0					
ANR	4793817	ArrayIndexing	upd_strings [ i ]		4792640	1					
ANR	4793818	Identifier	upd_strings		4792640	0					
ANR	4793819	Identifier	i		4792640	1					
ANR	4793820	ContinueStatement	continue ;	1880:26:76481:76489	4792640	1	True				
ANR	4793821	ExpressionStatement	"UPD_PARAM_READ ( param_read_string , upd_strings [ i ] , value , udev -> memory )"	1881:6:76497:76564	4792640	2	True				
ANR	4793822	CallExpression	"UPD_PARAM_READ ( param_read_string , upd_strings [ i ] , value , udev -> memory )"		4792640	0					
ANR	4793823	Callee	UPD_PARAM_READ		4792640	0					
ANR	4793824	Identifier	UPD_PARAM_READ		4792640	0					
ANR	4793825	ArgumentList	param_read_string		4792640	1					
ANR	4793826	Argument	param_read_string		4792640	0					
ANR	4793827	Identifier	param_read_string		4792640	0					
ANR	4793828	Argument	upd_strings [ i ]		4792640	1					
ANR	4793829	ArrayIndexing	upd_strings [ i ]		4792640	0					
ANR	4793830	Identifier	upd_strings		4792640	0					
ANR	4793831	Identifier	i		4792640	1					
ANR	4793832	Argument	value		4792640	2					
ANR	4793833	Identifier	value		4792640	0					
ANR	4793834	Argument	udev -> memory		4792640	3					
ANR	4793835	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793836	Identifier	udev		4792640	0					
ANR	4793837	Identifier	memory		4792640	1					
ANR	4793838	IfStatement	if ( 0 == code )		4792640	3					
ANR	4793839	Condition	0 == code	1882:9:76575:76583	4792640	0	True				
ANR	4793840	EqualityExpression	0 == code		4792640	0		==			
ANR	4793841	PrimaryExpression	0		4792640	0					
ANR	4793842	Identifier	code		4792640	1					
ANR	4793843	CompoundStatement		216:20:8293:8293	4792640	1					
ANR	4793844	IfStatement	if ( 0 <= error )		4792640	0					
ANR	4793845	Condition	0 <= error	1883:12:76600:76609	4792640	0	True				
ANR	4793846	RelationalExpression	0 <= error		4792640	0		<=			
ANR	4793847	PrimaryExpression	0		4792640	0					
ANR	4793848	Identifier	error		4792640	1					
ANR	4793849	ExpressionStatement	error |= UPD_PUT_STRINGS	1883:24:76612:76636	4792640	1	True				
ANR	4793850	AssignmentExpression	error |= UPD_PUT_STRINGS		4792640	0		|=			
ANR	4793851	Identifier	error		4792640	0					
ANR	4793852	Identifier	UPD_PUT_STRINGS		4792640	1					
ANR	4793853	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , strings [ i ] )"	1884:9:76647:76689	4792640	1	True				
ANR	4793854	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , strings [ i ] )"		4792640	0					
ANR	4793855	Callee	UPD_MM_DEL_PARAM		4792640	0					
ANR	4793856	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4793857	ArgumentList	udev -> memory		4792640	1					
ANR	4793858	Argument	udev -> memory		4792640	0					
ANR	4793859	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793860	Identifier	udev		4792640	0					
ANR	4793861	Identifier	memory		4792640	1					
ANR	4793862	Argument	strings [ i ]		4792640	1					
ANR	4793863	ArrayIndexing	strings [ i ]		4792640	0					
ANR	4793864	Identifier	strings		4792640	0					
ANR	4793865	Identifier	i		4792640	1					
ANR	4793866	IfStatement	if ( ! value . size )		4792640	2					
ANR	4793867	Condition	! value . size	1885:12:76703:76713	4792640	0	True				
ANR	4793868	UnaryOperationExpression	! value . size		4792640	0					
ANR	4793869	UnaryOperator	!		4792640	0					
ANR	4793870	MemberAccess	value . size		4792640	1					
ANR	4793871	Identifier	value		4792640	0					
ANR	4793872	Identifier	size		4792640	1					
ANR	4793873	CompoundStatement		219:25:8423:8423	4792640	1					
ANR	4793874	ExpressionStatement	value . data = NULL	1886:12:76730:76747	4792640	0	True				
ANR	4793875	AssignmentExpression	value . data = NULL		4792640	0		=			
ANR	4793876	MemberAccess	value . data		4792640	0					
ANR	4793877	Identifier	value		4792640	0					
ANR	4793878	Identifier	data		4792640	1					
ANR	4793879	Identifier	NULL		4792640	1					
ANR	4793880	ExpressionStatement	strings [ i ] = value	1887:12:76761:76781	4792640	1	True				
ANR	4793881	AssignmentExpression	strings [ i ] = value		4792640	0		=			
ANR	4793882	ArrayIndexing	strings [ i ]		4792640	0					
ANR	4793883	Identifier	strings		4792640	0					
ANR	4793884	Identifier	i		4792640	1					
ANR	4793885	Identifier	value		4792640	1					
ANR	4793886	ElseStatement	else		4792640	0					
ANR	4793887	CompoundStatement		222:16:8506:8506	4792640	0					
ANR	4793888	ExpressionStatement	"UPD_MM_CPY_PARAM ( udev -> memory , strings [ i ] , value )"	1889:12:76813:76861	4792640	0	True				
ANR	4793889	CallExpression	"UPD_MM_CPY_PARAM ( udev -> memory , strings [ i ] , value )"		4792640	0					
ANR	4793890	Callee	UPD_MM_CPY_PARAM		4792640	0					
ANR	4793891	Identifier	UPD_MM_CPY_PARAM		4792640	0					
ANR	4793892	ArgumentList	udev -> memory		4792640	1					
ANR	4793893	Argument	udev -> memory		4792640	0					
ANR	4793894	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793895	Identifier	udev		4792640	0					
ANR	4793896	Identifier	memory		4792640	1					
ANR	4793897	Argument	strings [ i ]		4792640	1					
ANR	4793898	ArrayIndexing	strings [ i ]		4792640	0					
ANR	4793899	Identifier	strings		4792640	0					
ANR	4793900	Identifier	i		4792640	1					
ANR	4793901	Argument	value		4792640	2					
ANR	4793902	Identifier	value		4792640	0					
ANR	4793903	ForStatement	for ( i = 0 ; countof ( upd_string_a ) > i ; ++ i )		4792640	79					
ANR	4793904	ForInit	i = 0 ;	1895:7:76927:76932	4792640	0	True				
ANR	4793905	AssignmentExpression	i = 0		4792640	0		=			
ANR	4793906	Identifier	i		4792640	0					
ANR	4793907	PrimaryExpression	0		4792640	1					
ANR	4793908	Condition	countof ( upd_string_a ) > i	1895:14:76934:76958	4792640	1	True				
ANR	4793909	RelationalExpression	countof ( upd_string_a ) > i		4792640	0		>			
ANR	4793910	CallExpression	countof ( upd_string_a )		4792640	0					
ANR	4793911	Callee	countof		4792640	0					
ANR	4793912	Identifier	countof		4792640	0					
ANR	4793913	ArgumentList	upd_string_a		4792640	1					
ANR	4793914	Argument	upd_string_a		4792640	0					
ANR	4793915	Identifier	upd_string_a		4792640	0					
ANR	4793916	Identifier	i		4792640	1					
ANR	4793917	UnaryExpression	++ i	1895:41:76961:76963	4792640	2	True				
ANR	4793918	IncDec	++		4792640	0					
ANR	4793919	Identifier	i		4792640	1					
ANR	4793920	CompoundStatement		230:6:8681:8722	4792640	3					
ANR	4793921	IdentifierDeclStatement	gs_param_string_array value = string_a [ i ] ;	1896:6:76974:77015	4792640	0	True				
ANR	4793922	IdentifierDecl	value = string_a [ i ]		4792640	0					
ANR	4793923	IdentifierDeclType	gs_param_string_array		4792640	0					
ANR	4793924	Identifier	value		4792640	1					
ANR	4793925	AssignmentExpression	value = string_a [ i ]		4792640	2		=			
ANR	4793926	Identifier	value		4792640	0					
ANR	4793927	ArrayIndexing	string_a [ i ]		4792640	1					
ANR	4793928	Identifier	string_a		4792640	0					
ANR	4793929	Identifier	i		4792640	1					
ANR	4793930	IfStatement	if ( ! upd_string_a [ i ] )		4792640	1					
ANR	4793931	Condition	! upd_string_a [ i ]	1897:9:77026:77041	4792640	0	True				
ANR	4793932	UnaryOperationExpression	! upd_string_a [ i ]		4792640	0					
ANR	4793933	UnaryOperator	!		4792640	0					
ANR	4793934	ArrayIndexing	upd_string_a [ i ]		4792640	1					
ANR	4793935	Identifier	upd_string_a		4792640	0					
ANR	4793936	Identifier	i		4792640	1					
ANR	4793937	ContinueStatement	continue ;	1897:27:77044:77052	4792640	1	True				
ANR	4793938	ExpressionStatement	"UPD_PARAM_READ ( param_read_string_array , upd_string_a [ i ] , value , udev -> memory )"	1898:6:77060:77134	4792640	2	True				
ANR	4793939	CallExpression	"UPD_PARAM_READ ( param_read_string_array , upd_string_a [ i ] , value , udev -> memory )"		4792640	0					
ANR	4793940	Callee	UPD_PARAM_READ		4792640	0					
ANR	4793941	Identifier	UPD_PARAM_READ		4792640	0					
ANR	4793942	ArgumentList	param_read_string_array		4792640	1					
ANR	4793943	Argument	param_read_string_array		4792640	0					
ANR	4793944	Identifier	param_read_string_array		4792640	0					
ANR	4793945	Argument	upd_string_a [ i ]		4792640	1					
ANR	4793946	ArrayIndexing	upd_string_a [ i ]		4792640	0					
ANR	4793947	Identifier	upd_string_a		4792640	0					
ANR	4793948	Identifier	i		4792640	1					
ANR	4793949	Argument	value		4792640	2					
ANR	4793950	Identifier	value		4792640	0					
ANR	4793951	Argument	udev -> memory		4792640	3					
ANR	4793952	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793953	Identifier	udev		4792640	0					
ANR	4793954	Identifier	memory		4792640	1					
ANR	4793955	IfStatement	if ( 0 == code )		4792640	3					
ANR	4793956	Condition	0 == code	1899:9:77145:77153	4792640	0	True				
ANR	4793957	EqualityExpression	0 == code		4792640	0		==			
ANR	4793958	PrimaryExpression	0		4792640	0					
ANR	4793959	Identifier	code		4792640	1					
ANR	4793960	CompoundStatement		233:20:8863:8863	4792640	1					
ANR	4793961	IfStatement	if ( 0 <= error )		4792640	0					
ANR	4793962	Condition	0 <= error	1900:12:77170:77179	4792640	0	True				
ANR	4793963	RelationalExpression	0 <= error		4792640	0		<=			
ANR	4793964	PrimaryExpression	0		4792640	0					
ANR	4793965	Identifier	error		4792640	1					
ANR	4793966	ExpressionStatement	error |= UPD_PUT_STRING_A	1900:24:77182:77207	4792640	1	True				
ANR	4793967	AssignmentExpression	error |= UPD_PUT_STRING_A		4792640	0		|=			
ANR	4793968	Identifier	error		4792640	0					
ANR	4793969	Identifier	UPD_PUT_STRING_A		4792640	1					
ANR	4793970	ExpressionStatement	"UPD_MM_DEL_APARAM ( udev -> memory , string_a [ i ] )"	1901:9:77218:77262	4792640	1	True				
ANR	4793971	CallExpression	"UPD_MM_DEL_APARAM ( udev -> memory , string_a [ i ] )"		4792640	0					
ANR	4793972	Callee	UPD_MM_DEL_APARAM		4792640	0					
ANR	4793973	Identifier	UPD_MM_DEL_APARAM		4792640	0					
ANR	4793974	ArgumentList	udev -> memory		4792640	1					
ANR	4793975	Argument	udev -> memory		4792640	0					
ANR	4793976	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4793977	Identifier	udev		4792640	0					
ANR	4793978	Identifier	memory		4792640	1					
ANR	4793979	Argument	string_a [ i ]		4792640	1					
ANR	4793980	ArrayIndexing	string_a [ i ]		4792640	0					
ANR	4793981	Identifier	string_a		4792640	0					
ANR	4793982	Identifier	i		4792640	1					
ANR	4793983	IfStatement	if ( ! value . size )		4792640	2					
ANR	4793984	Condition	! value . size	1902:12:77276:77286	4792640	0	True				
ANR	4793985	UnaryOperationExpression	! value . size		4792640	0					
ANR	4793986	UnaryOperator	!		4792640	0					
ANR	4793987	MemberAccess	value . size		4792640	1					
ANR	4793988	Identifier	value		4792640	0					
ANR	4793989	Identifier	size		4792640	1					
ANR	4793990	CompoundStatement		236:25:8996:8996	4792640	1					
ANR	4793991	ExpressionStatement	value . data = NULL	1903:12:77303:77321	4792640	0	True				
ANR	4793992	AssignmentExpression	value . data = NULL		4792640	0		=			
ANR	4793993	MemberAccess	value . data		4792640	0					
ANR	4793994	Identifier	value		4792640	0					
ANR	4793995	Identifier	data		4792640	1					
ANR	4793996	Identifier	NULL		4792640	1					
ANR	4793997	ExpressionStatement	string_a [ i ] = value	1904:12:77335:77354	4792640	1	True				
ANR	4793998	AssignmentExpression	string_a [ i ] = value		4792640	0		=			
ANR	4793999	ArrayIndexing	string_a [ i ]		4792640	0					
ANR	4794000	Identifier	string_a		4792640	0					
ANR	4794001	Identifier	i		4792640	1					
ANR	4794002	Identifier	value		4792640	1					
ANR	4794003	ElseStatement	else		4792640	0					
ANR	4794004	CompoundStatement		239:16:9079:9079	4792640	0					
ANR	4794005	ExpressionStatement	"UPD_MM_CPY_APARAM ( udev -> memory , string_a [ i ] , value )"	1906:12:77386:77436	4792640	0	True				
ANR	4794006	CallExpression	"UPD_MM_CPY_APARAM ( udev -> memory , string_a [ i ] , value )"		4792640	0					
ANR	4794007	Callee	UPD_MM_CPY_APARAM		4792640	0					
ANR	4794008	Identifier	UPD_MM_CPY_APARAM		4792640	0					
ANR	4794009	ArgumentList	udev -> memory		4792640	1					
ANR	4794010	Argument	udev -> memory		4792640	0					
ANR	4794011	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794012	Identifier	udev		4792640	0					
ANR	4794013	Identifier	memory		4792640	1					
ANR	4794014	Argument	string_a [ i ]		4792640	1					
ANR	4794015	ArrayIndexing	string_a [ i ]		4792640	0					
ANR	4794016	Identifier	string_a		4792640	0					
ANR	4794017	Identifier	i		4792640	1					
ANR	4794018	Argument	value		4792640	2					
ANR	4794019	Identifier	value		4792640	0					
ANR	4794020	ForStatement	for ( i = 0 ; countof ( upd_float_a ) > i ; ++ i )		4792640	80					
ANR	4794021	ForInit	i = 0 ;	1912:7:77501:77506	4792640	0	True				
ANR	4794022	AssignmentExpression	i = 0		4792640	0		=			
ANR	4794023	Identifier	i		4792640	0					
ANR	4794024	PrimaryExpression	0		4792640	1					
ANR	4794025	Condition	countof ( upd_float_a ) > i	1912:14:77508:77531	4792640	1	True				
ANR	4794026	RelationalExpression	countof ( upd_float_a ) > i		4792640	0		>			
ANR	4794027	CallExpression	countof ( upd_float_a )		4792640	0					
ANR	4794028	Callee	countof		4792640	0					
ANR	4794029	Identifier	countof		4792640	0					
ANR	4794030	ArgumentList	upd_float_a		4792640	1					
ANR	4794031	Argument	upd_float_a		4792640	0					
ANR	4794032	Identifier	upd_float_a		4792640	0					
ANR	4794033	Identifier	i		4792640	1					
ANR	4794034	UnaryExpression	++ i	1912:40:77534:77536	4792640	2	True				
ANR	4794035	IncDec	++		4792640	0					
ANR	4794036	Identifier	i		4792640	1					
ANR	4794037	CompoundStatement		247:6:9254:9293	4792640	3					
ANR	4794038	IdentifierDeclStatement	gs_param_float_array value = float_a [ i ] ;	1913:6:77547:77586	4792640	0	True				
ANR	4794039	IdentifierDecl	value = float_a [ i ]		4792640	0					
ANR	4794040	IdentifierDeclType	gs_param_float_array		4792640	0					
ANR	4794041	Identifier	value		4792640	1					
ANR	4794042	AssignmentExpression	value = float_a [ i ]		4792640	2		=			
ANR	4794043	Identifier	value		4792640	0					
ANR	4794044	ArrayIndexing	float_a [ i ]		4792640	1					
ANR	4794045	Identifier	float_a		4792640	0					
ANR	4794046	Identifier	i		4792640	1					
ANR	4794047	IfStatement	if ( ! upd_float_a [ i ] )		4792640	1					
ANR	4794048	Condition	! upd_float_a [ i ]	1914:9:77597:77611	4792640	0	True				
ANR	4794049	UnaryOperationExpression	! upd_float_a [ i ]		4792640	0					
ANR	4794050	UnaryOperator	!		4792640	0					
ANR	4794051	ArrayIndexing	upd_float_a [ i ]		4792640	1					
ANR	4794052	Identifier	upd_float_a		4792640	0					
ANR	4794053	Identifier	i		4792640	1					
ANR	4794054	ContinueStatement	continue ;	1914:26:77614:77622	4792640	1	True				
ANR	4794055	ExpressionStatement	"UPD_PARAM_READ ( param_read_float_array , upd_float_a [ i ] , value , udev -> memory )"	1915:6:77630:77702	4792640	2	True				
ANR	4794056	CallExpression	"UPD_PARAM_READ ( param_read_float_array , upd_float_a [ i ] , value , udev -> memory )"		4792640	0					
ANR	4794057	Callee	UPD_PARAM_READ		4792640	0					
ANR	4794058	Identifier	UPD_PARAM_READ		4792640	0					
ANR	4794059	ArgumentList	param_read_float_array		4792640	1					
ANR	4794060	Argument	param_read_float_array		4792640	0					
ANR	4794061	Identifier	param_read_float_array		4792640	0					
ANR	4794062	Argument	upd_float_a [ i ]		4792640	1					
ANR	4794063	ArrayIndexing	upd_float_a [ i ]		4792640	0					
ANR	4794064	Identifier	upd_float_a		4792640	0					
ANR	4794065	Identifier	i		4792640	1					
ANR	4794066	Argument	value		4792640	2					
ANR	4794067	Identifier	value		4792640	0					
ANR	4794068	Argument	udev -> memory		4792640	3					
ANR	4794069	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794070	Identifier	udev		4792640	0					
ANR	4794071	Identifier	memory		4792640	1					
ANR	4794072	IfStatement	if ( 0 == code )		4792640	3					
ANR	4794073	Condition	0 == code	1916:9:77713:77721	4792640	0	True				
ANR	4794074	EqualityExpression	0 == code		4792640	0		==			
ANR	4794075	PrimaryExpression	0		4792640	0					
ANR	4794076	Identifier	code		4792640	1					
ANR	4794077	CompoundStatement		250:20:9431:9431	4792640	1					
ANR	4794078	IfStatement	if ( 0 <= error )		4792640	0					
ANR	4794079	Condition	0 <= error	1917:12:77738:77747	4792640	0	True				
ANR	4794080	RelationalExpression	0 <= error		4792640	0		<=			
ANR	4794081	PrimaryExpression	0		4792640	0					
ANR	4794082	Identifier	error		4792640	1					
ANR	4794083	ExpressionStatement	error |= UPD_PUT_FLOAT_A	1917:24:77750:77774	4792640	1	True				
ANR	4794084	AssignmentExpression	error |= UPD_PUT_FLOAT_A		4792640	0		|=			
ANR	4794085	Identifier	error		4792640	0					
ANR	4794086	Identifier	UPD_PUT_FLOAT_A		4792640	1					
ANR	4794087	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , float_a [ i ] )"	1918:9:77785:77827	4792640	1	True				
ANR	4794088	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , float_a [ i ] )"		4792640	0					
ANR	4794089	Callee	UPD_MM_DEL_PARAM		4792640	0					
ANR	4794090	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4794091	ArgumentList	udev -> memory		4792640	1					
ANR	4794092	Argument	udev -> memory		4792640	0					
ANR	4794093	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794094	Identifier	udev		4792640	0					
ANR	4794095	Identifier	memory		4792640	1					
ANR	4794096	Argument	float_a [ i ]		4792640	1					
ANR	4794097	ArrayIndexing	float_a [ i ]		4792640	0					
ANR	4794098	Identifier	float_a		4792640	0					
ANR	4794099	Identifier	i		4792640	1					
ANR	4794100	IfStatement	if ( ! value . size )		4792640	2					
ANR	4794101	Condition	! value . size	1919:12:77841:77851	4792640	0	True				
ANR	4794102	UnaryOperationExpression	! value . size		4792640	0					
ANR	4794103	UnaryOperator	!		4792640	0					
ANR	4794104	MemberAccess	value . size		4792640	1					
ANR	4794105	Identifier	value		4792640	0					
ANR	4794106	Identifier	size		4792640	1					
ANR	4794107	CompoundStatement		253:25:9561:9561	4792640	1					
ANR	4794108	ExpressionStatement	value . data = NULL	1920:12:77868:77885	4792640	0	True				
ANR	4794109	AssignmentExpression	value . data = NULL		4792640	0		=			
ANR	4794110	MemberAccess	value . data		4792640	0					
ANR	4794111	Identifier	value		4792640	0					
ANR	4794112	Identifier	data		4792640	1					
ANR	4794113	Identifier	NULL		4792640	1					
ANR	4794114	ExpressionStatement	float_a [ i ] = value	1921:12:77899:77917	4792640	1	True				
ANR	4794115	AssignmentExpression	float_a [ i ] = value		4792640	0		=			
ANR	4794116	ArrayIndexing	float_a [ i ]		4792640	0					
ANR	4794117	Identifier	float_a		4792640	0					
ANR	4794118	Identifier	i		4792640	1					
ANR	4794119	Identifier	value		4792640	1					
ANR	4794120	ElseStatement	else		4792640	0					
ANR	4794121	CompoundStatement		256:16:9642:9642	4792640	0					
ANR	4794122	ExpressionStatement	"UPD_MM_CPY_PARAM ( udev -> memory , float_a [ i ] , value )"	1923:12:77949:77997	4792640	0	True				
ANR	4794123	CallExpression	"UPD_MM_CPY_PARAM ( udev -> memory , float_a [ i ] , value )"		4792640	0					
ANR	4794124	Callee	UPD_MM_CPY_PARAM		4792640	0					
ANR	4794125	Identifier	UPD_MM_CPY_PARAM		4792640	0					
ANR	4794126	ArgumentList	udev -> memory		4792640	1					
ANR	4794127	Argument	udev -> memory		4792640	0					
ANR	4794128	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794129	Identifier	udev		4792640	0					
ANR	4794130	Identifier	memory		4792640	1					
ANR	4794131	Argument	float_a [ i ]		4792640	1					
ANR	4794132	ArrayIndexing	float_a [ i ]		4792640	0					
ANR	4794133	Identifier	float_a		4792640	0					
ANR	4794134	Identifier	i		4792640	1					
ANR	4794135	Argument	value		4792640	2					
ANR	4794136	Identifier	value		4792640	0					
ANR	4794137	IfStatement	if ( 0 < error )		4792640	81					
ANR	4794138	Condition	0 < error	1934:6:78268:78276	4792640	0	True				
ANR	4794139	RelationalExpression	0 < error		4792640	0		<			
ANR	4794140	PrimaryExpression	0		4792640	0					
ANR	4794141	Identifier	error		4792640	1					
ANR	4794142	CompoundStatement		270:6:9995:10019	4792640	1					
ANR	4794143	IdentifierDeclStatement	"int * ip , * ip2 , ncomp , nbits ;"	1936:6:78288:78312	4792640	0	True				
ANR	4794144	IdentifierDecl	* ip		4792640	0					
ANR	4794145	IdentifierDeclType	int *		4792640	0					
ANR	4794146	Identifier	ip		4792640	1					
ANR	4794147	IdentifierDecl	* ip2		4792640	1					
ANR	4794148	IdentifierDeclType	int *		4792640	0					
ANR	4794149	Identifier	ip2		4792640	1					
ANR	4794150	IdentifierDecl	ncomp		4792640	2					
ANR	4794151	IdentifierDeclType	int		4792640	0					
ANR	4794152	Identifier	ncomp		4792640	1					
ANR	4794153	IdentifierDecl	nbits		4792640	3					
ANR	4794154	IdentifierDeclType	int		4792640	0					
ANR	4794155	Identifier	nbits		4792640	1					
ANR	4794156	IfStatement	if ( 6 > int_a [ IA_COLOR_INFO ] . size )		4792640	1					
ANR	4794157	Condition	6 > int_a [ IA_COLOR_INFO ] . size	1938:9:78324:78352	4792640	0	True				
ANR	4794158	RelationalExpression	6 > int_a [ IA_COLOR_INFO ] . size		4792640	0		>			
ANR	4794159	PrimaryExpression	6		4792640	0					
ANR	4794160	MemberAccess	int_a [ IA_COLOR_INFO ] . size		4792640	1					
ANR	4794161	ArrayIndexing	int_a [ IA_COLOR_INFO ]		4792640	0					
ANR	4794162	Identifier	int_a		4792640	0					
ANR	4794163	Identifier	IA_COLOR_INFO		4792640	1					
ANR	4794164	Identifier	size		4792640	1					
ANR	4794165	CompoundStatement		272:40:10062:10062	4792640	1					
ANR	4794166	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COLOR_INFO ] )"	1939:9:78366:78418	4792640	0	True				
ANR	4794167	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COLOR_INFO ] )"		4792640	0					
ANR	4794168	Callee	UPD_MM_DEL_PARAM		4792640	0					
ANR	4794169	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4794170	ArgumentList	udev -> memory		4792640	1					
ANR	4794171	Argument	udev -> memory		4792640	0					
ANR	4794172	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794173	Identifier	udev		4792640	0					
ANR	4794174	Identifier	memory		4792640	1					
ANR	4794175	Argument	int_a [ IA_COLOR_INFO ]		4792640	1					
ANR	4794176	ArrayIndexing	int_a [ IA_COLOR_INFO ]		4792640	0					
ANR	4794177	Identifier	int_a		4792640	0					
ANR	4794178	Identifier	IA_COLOR_INFO		4792640	1					
ANR	4794179	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , int_a [ IA_COLOR_INFO ] . data , 6 )"	1940:9:78429:78488	4792640	1	True				
ANR	4794180	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , int_a [ IA_COLOR_INFO ] . data , 6 )"		4792640	0					
ANR	4794181	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4794182	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4794183	ArgumentList	udev -> memory		4792640	1					
ANR	4794184	Argument	udev -> memory		4792640	0					
ANR	4794185	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794186	Identifier	udev		4792640	0					
ANR	4794187	Identifier	memory		4792640	1					
ANR	4794188	Argument	int_a [ IA_COLOR_INFO ] . data		4792640	1					
ANR	4794189	MemberAccess	int_a [ IA_COLOR_INFO ] . data		4792640	0					
ANR	4794190	ArrayIndexing	int_a [ IA_COLOR_INFO ]		4792640	0					
ANR	4794191	Identifier	int_a		4792640	0					
ANR	4794192	Identifier	IA_COLOR_INFO		4792640	1					
ANR	4794193	Identifier	data		4792640	1					
ANR	4794194	Argument	6		4792640	2					
ANR	4794195	PrimaryExpression	6		4792640	0					
ANR	4794196	ExpressionStatement	int_a [ IA_COLOR_INFO ] . size = 6	1941:9:78499:78528	4792640	2	True				
ANR	4794197	AssignmentExpression	int_a [ IA_COLOR_INFO ] . size = 6		4792640	0		=			
ANR	4794198	MemberAccess	int_a [ IA_COLOR_INFO ] . size		4792640	0					
ANR	4794199	ArrayIndexing	int_a [ IA_COLOR_INFO ]		4792640	0					
ANR	4794200	Identifier	int_a		4792640	0					
ANR	4794201	Identifier	IA_COLOR_INFO		4792640	1					
ANR	4794202	Identifier	size		4792640	1					
ANR	4794203	PrimaryExpression	6		4792640	1					
ANR	4794204	ExpressionStatement	ip = ( int * ) upd_cast ( int_a [ IA_COLOR_INFO ] . data )	1943:6:78544:78592	4792640	2	True				
ANR	4794205	AssignmentExpression	ip = ( int * ) upd_cast ( int_a [ IA_COLOR_INFO ] . data )		4792640	0		=			
ANR	4794206	Identifier	ip		4792640	0					
ANR	4794207	CastExpression	( int * ) upd_cast ( int_a [ IA_COLOR_INFO ] . data )		4792640	1					
ANR	4794208	CastTarget	int *		4792640	0					
ANR	4794209	CallExpression	upd_cast ( int_a [ IA_COLOR_INFO ] . data )		4792640	1					
ANR	4794210	Callee	upd_cast		4792640	0					
ANR	4794211	Identifier	upd_cast		4792640	0					
ANR	4794212	ArgumentList	int_a [ IA_COLOR_INFO ] . data		4792640	1					
ANR	4794213	Argument	int_a [ IA_COLOR_INFO ] . data		4792640	0					
ANR	4794214	MemberAccess	int_a [ IA_COLOR_INFO ] . data		4792640	0					
ANR	4794215	ArrayIndexing	int_a [ IA_COLOR_INFO ]		4792640	0					
ANR	4794216	Identifier	int_a		4792640	0					
ANR	4794217	Identifier	IA_COLOR_INFO		4792640	1					
ANR	4794218	Identifier	data		4792640	1					
ANR	4794219	IfStatement	if ( 0 == ip [ 0 ] )		4792640	3					
ANR	4794220	Condition	0 == ip [ 0 ]	1945:9:78604:78613	4792640	0	True				
ANR	4794221	EqualityExpression	0 == ip [ 0 ]		4792640	0		==			
ANR	4794222	PrimaryExpression	0		4792640	0					
ANR	4794223	ArrayIndexing	ip [ 0 ]		4792640	1					
ANR	4794224	Identifier	ip		4792640	0					
ANR	4794225	PrimaryExpression	0		4792640	1					
ANR	4794226	CompoundStatement		279:21:10323:10323	4792640	1					
ANR	4794227	SwitchStatement	switch ( choice [ C_MAPPER ] )		4792640	0					
ANR	4794228	Condition	choice [ C_MAPPER ]	1946:16:78669:78684	4792640	0	True				
ANR	4794229	ArrayIndexing	choice [ C_MAPPER ]		4792640	0					
ANR	4794230	Identifier	choice		4792640	0					
ANR	4794231	Identifier	C_MAPPER		4792640	1					
ANR	4794232	CompoundStatement		280:34:10394:10394	4792640	1					
ANR	4794233	Label	case MAP_GRAY :	1947:12:78701:78714	4792640	0	True				
ANR	4794234	Identifier	MAP_GRAY		4792640	0					
ANR	4794235	ExpressionStatement	ip [ 0 ] = 1	1947:31:78720:78729	4792640	1	True				
ANR	4794236	AssignmentExpression	ip [ 0 ] = 1		4792640	0		=			
ANR	4794237	ArrayIndexing	ip [ 0 ]		4792640	0					
ANR	4794238	Identifier	ip		4792640	0					
ANR	4794239	PrimaryExpression	0		4792640	1					
ANR	4794240	PrimaryExpression	1		4792640	1					
ANR	4794241	BreakStatement	break ;	1947:42:78731:78736	4792640	2	True				
ANR	4794242	Label	case MAP_RGBW :	1948:12:78750:78763	4792640	3	True				
ANR	4794243	Identifier	MAP_RGBW		4792640	0					
ANR	4794244	ExpressionStatement	ip [ 0 ] = 3	1948:31:78769:78778	4792640	4	True				
ANR	4794245	AssignmentExpression	ip [ 0 ] = 3		4792640	0		=			
ANR	4794246	ArrayIndexing	ip [ 0 ]		4792640	0					
ANR	4794247	Identifier	ip		4792640	0					
ANR	4794248	PrimaryExpression	0		4792640	1					
ANR	4794249	PrimaryExpression	3		4792640	1					
ANR	4794250	BreakStatement	break ;	1948:42:78780:78785	4792640	5	True				
ANR	4794251	Label	case MAP_RGB :	1949:12:78799:78811	4792640	6	True				
ANR	4794252	Identifier	MAP_RGB		4792640	0					
ANR	4794253	ExpressionStatement	ip [ 0 ] = 3	1949:31:78818:78827	4792640	7	True				
ANR	4794254	AssignmentExpression	ip [ 0 ] = 3		4792640	0		=			
ANR	4794255	ArrayIndexing	ip [ 0 ]		4792640	0					
ANR	4794256	Identifier	ip		4792640	0					
ANR	4794257	PrimaryExpression	0		4792640	1					
ANR	4794258	PrimaryExpression	3		4792640	1					
ANR	4794259	BreakStatement	break ;	1949:42:78829:78834	4792640	8	True				
ANR	4794260	Label	case MAP_CMYK :	1950:12:78848:78861	4792640	9	True				
ANR	4794261	Identifier	MAP_CMYK		4792640	0					
ANR	4794262	ExpressionStatement	ip [ 0 ] = 4	1950:31:78867:78876	4792640	10	True				
ANR	4794263	AssignmentExpression	ip [ 0 ] = 4		4792640	0		=			
ANR	4794264	ArrayIndexing	ip [ 0 ]		4792640	0					
ANR	4794265	Identifier	ip		4792640	0					
ANR	4794266	PrimaryExpression	0		4792640	1					
ANR	4794267	PrimaryExpression	4		4792640	1					
ANR	4794268	BreakStatement	break ;	1950:42:78878:78883	4792640	11	True				
ANR	4794269	Label	case MAP_CMYKGEN :	1951:12:78897:78913	4792640	12	True				
ANR	4794270	Identifier	MAP_CMYKGEN		4792640	0					
ANR	4794271	ExpressionStatement	ip [ 0 ] = 4	1951:31:78916:78925	4792640	13	True				
ANR	4794272	AssignmentExpression	ip [ 0 ] = 4		4792640	0		=			
ANR	4794273	ArrayIndexing	ip [ 0 ]		4792640	0					
ANR	4794274	Identifier	ip		4792640	0					
ANR	4794275	PrimaryExpression	0		4792640	1					
ANR	4794276	PrimaryExpression	4		4792640	1					
ANR	4794277	BreakStatement	break ;	1951:42:78927:78932	4792640	14	True				
ANR	4794278	Label	case MAP_RGBOV :	1952:12:78946:78960	4792640	15	True				
ANR	4794279	Identifier	MAP_RGBOV		4792640	0					
ANR	4794280	ExpressionStatement	ip [ 0 ] = 3	1952:31:78965:78974	4792640	16	True				
ANR	4794281	AssignmentExpression	ip [ 0 ] = 3		4792640	0		=			
ANR	4794282	ArrayIndexing	ip [ 0 ]		4792640	0					
ANR	4794283	Identifier	ip		4792640	0					
ANR	4794284	PrimaryExpression	0		4792640	1					
ANR	4794285	PrimaryExpression	3		4792640	1					
ANR	4794286	BreakStatement	break ;	1952:42:78976:78981	4792640	17	True				
ANR	4794287	Label	case MAP_RGBNOV :	1953:12:78995:79010	4792640	18	True				
ANR	4794288	Identifier	MAP_RGBNOV		4792640	0					
ANR	4794289	ExpressionStatement	ip [ 0 ] = 3	1953:31:79014:79023	4792640	19	True				
ANR	4794290	AssignmentExpression	ip [ 0 ] = 3		4792640	0		=			
ANR	4794291	ArrayIndexing	ip [ 0 ]		4792640	0					
ANR	4794292	Identifier	ip		4792640	0					
ANR	4794293	PrimaryExpression	0		4792640	1					
ANR	4794294	PrimaryExpression	3		4792640	1					
ANR	4794295	BreakStatement	break ;	1953:42:79025:79030	4792640	20	True				
ANR	4794296	Label	default :	1954:12:79044:79051	4792640	21	True				
ANR	4794297	Identifier	default		4792640	0					
ANR	4794298	ExpressionStatement	ip [ 0 ] = color_info . num_components	1954:31:79063:79096	4792640	22	True				
ANR	4794299	AssignmentExpression	ip [ 0 ] = color_info . num_components		4792640	0		=			
ANR	4794300	ArrayIndexing	ip [ 0 ]		4792640	0					
ANR	4794301	Identifier	ip		4792640	0					
ANR	4794302	PrimaryExpression	0		4792640	1					
ANR	4794303	MemberAccess	color_info . num_components		4792640	1					
ANR	4794304	Identifier	color_info		4792640	0					
ANR	4794305	Identifier	num_components		4792640	1					
ANR	4794306	BreakStatement	break ;	1954:66:79098:79103	4792640	23	True				
ANR	4794307	SwitchStatement	switch ( choice [ C_MAPPER ] )		4792640	4					
ANR	4794308	Condition	choice [ C_MAPPER ]	1958:13:79188:79203	4792640	0	True				
ANR	4794309	ArrayIndexing	choice [ C_MAPPER ]		4792640	0					
ANR	4794310	Identifier	choice		4792640	0					
ANR	4794311	Identifier	C_MAPPER		4792640	1					
ANR	4794312	CompoundStatement		292:31:10913:10913	4792640	1					
ANR	4794313	Label	case MAP_GRAY :	1959:9:79217:79230	4792640	0	True				
ANR	4794314	Identifier	MAP_GRAY		4792640	0					
ANR	4794315	ExpressionStatement	ncomp = 1	1959:28:79236:79245	4792640	1	True				
ANR	4794316	AssignmentExpression	ncomp = 1		4792640	0		=			
ANR	4794317	Identifier	ncomp		4792640	0					
ANR	4794318	PrimaryExpression	1		4792640	1					
ANR	4794319	BreakStatement	break ;	1959:39:79247:79252	4792640	2	True				
ANR	4794320	Label	case MAP_RGBW :	1960:9:79263:79276	4792640	3	True				
ANR	4794321	Identifier	MAP_RGBW		4792640	0					
ANR	4794322	ExpressionStatement	ncomp = 4	1960:28:79282:79291	4792640	4	True				
ANR	4794323	AssignmentExpression	ncomp = 4		4792640	0		=			
ANR	4794324	Identifier	ncomp		4792640	0					
ANR	4794325	PrimaryExpression	4		4792640	1					
ANR	4794326	BreakStatement	break ;	1960:39:79293:79298	4792640	5	True				
ANR	4794327	Label	case MAP_RGB :	1961:9:79309:79321	4792640	6	True				
ANR	4794328	Identifier	MAP_RGB		4792640	0					
ANR	4794329	ExpressionStatement	ncomp = 3	1961:28:79328:79337	4792640	7	True				
ANR	4794330	AssignmentExpression	ncomp = 3		4792640	0		=			
ANR	4794331	Identifier	ncomp		4792640	0					
ANR	4794332	PrimaryExpression	3		4792640	1					
ANR	4794333	BreakStatement	break ;	1961:39:79339:79344	4792640	8	True				
ANR	4794334	Label	case MAP_CMYK :	1962:9:79355:79368	4792640	9	True				
ANR	4794335	Identifier	MAP_CMYK		4792640	0					
ANR	4794336	ExpressionStatement	ncomp = 4	1962:28:79374:79383	4792640	10	True				
ANR	4794337	AssignmentExpression	ncomp = 4		4792640	0		=			
ANR	4794338	Identifier	ncomp		4792640	0					
ANR	4794339	PrimaryExpression	4		4792640	1					
ANR	4794340	BreakStatement	break ;	1962:39:79385:79390	4792640	11	True				
ANR	4794341	Label	case MAP_CMYKGEN :	1963:9:79401:79417	4792640	12	True				
ANR	4794342	Identifier	MAP_CMYKGEN		4792640	0					
ANR	4794343	ExpressionStatement	ncomp = 4	1963:28:79420:79429	4792640	13	True				
ANR	4794344	AssignmentExpression	ncomp = 4		4792640	0		=			
ANR	4794345	Identifier	ncomp		4792640	0					
ANR	4794346	PrimaryExpression	4		4792640	1					
ANR	4794347	BreakStatement	break ;	1963:39:79431:79436	4792640	14	True				
ANR	4794348	Label	case MAP_RGBOV :	1964:9:79447:79461	4792640	15	True				
ANR	4794349	Identifier	MAP_RGBOV		4792640	0					
ANR	4794350	ExpressionStatement	ncomp = 4	1964:28:79466:79475	4792640	16	True				
ANR	4794351	AssignmentExpression	ncomp = 4		4792640	0		=			
ANR	4794352	Identifier	ncomp		4792640	0					
ANR	4794353	PrimaryExpression	4		4792640	1					
ANR	4794354	BreakStatement	break ;	1964:39:79477:79482	4792640	17	True				
ANR	4794355	Label	case MAP_RGBNOV :	1965:9:79493:79508	4792640	18	True				
ANR	4794356	Identifier	MAP_RGBNOV		4792640	0					
ANR	4794357	ExpressionStatement	ncomp = 4	1965:28:79512:79521	4792640	19	True				
ANR	4794358	AssignmentExpression	ncomp = 4		4792640	0		=			
ANR	4794359	Identifier	ncomp		4792640	0					
ANR	4794360	PrimaryExpression	4		4792640	1					
ANR	4794361	BreakStatement	break ;	1965:39:79523:79528	4792640	20	True				
ANR	4794362	Label	default :	1966:9:79539:79546	4792640	21	True				
ANR	4794363	Identifier	default		4792640	0					
ANR	4794364	ExpressionStatement	ncomp = ip [ 0 ]	1966:28:79558:79571	4792640	22	True				
ANR	4794365	AssignmentExpression	ncomp = ip [ 0 ]		4792640	0		=			
ANR	4794366	Identifier	ncomp		4792640	0					
ANR	4794367	ArrayIndexing	ip [ 0 ]		4792640	1					
ANR	4794368	Identifier	ip		4792640	0					
ANR	4794369	PrimaryExpression	0		4792640	1					
ANR	4794370	BreakStatement	break ;	1966:43:79573:79578	4792640	23	True				
ANR	4794371	IfStatement	if ( UPD_CMAP_MAX < ncomp )		4792640	5					
ANR	4794372	Condition	UPD_CMAP_MAX < ncomp	1968:9:79597:79616	4792640	0	True				
ANR	4794373	RelationalExpression	UPD_CMAP_MAX < ncomp		4792640	0		<			
ANR	4794374	Identifier	UPD_CMAP_MAX		4792640	0					
ANR	4794375	Identifier	ncomp		4792640	1					
ANR	4794376	ExpressionStatement	ncomp = UPD_CMAP_MAX	1968:31:79619:79639	4792640	1	True				
ANR	4794377	AssignmentExpression	ncomp = UPD_CMAP_MAX		4792640	0		=			
ANR	4794378	Identifier	ncomp		4792640	0					
ANR	4794379	Identifier	UPD_CMAP_MAX		4792640	1					
ANR	4794380	IfStatement	if ( ncomp > int_a [ IA_COMPBITS ] . size )		4792640	6					
ANR	4794381	Condition	ncomp > int_a [ IA_COMPBITS ] . size	1970:9:79651:79681	4792640	0	True				
ANR	4794382	RelationalExpression	ncomp > int_a [ IA_COMPBITS ] . size		4792640	0		>			
ANR	4794383	Identifier	ncomp		4792640	0					
ANR	4794384	MemberAccess	int_a [ IA_COMPBITS ] . size		4792640	1					
ANR	4794385	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794386	Identifier	int_a		4792640	0					
ANR	4794387	Identifier	IA_COMPBITS		4792640	1					
ANR	4794388	Identifier	size		4792640	1					
ANR	4794389	CompoundStatement		304:42:11391:11391	4792640	1					
ANR	4794390	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip2 , ncomp )"	1971:9:79723:79764	4792640	0	True				
ANR	4794391	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip2 , ncomp )"		4792640	0					
ANR	4794392	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4794393	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4794394	ArgumentList	udev -> memory		4792640	1					
ANR	4794395	Argument	udev -> memory		4792640	0					
ANR	4794396	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794397	Identifier	udev		4792640	0					
ANR	4794398	Identifier	memory		4792640	1					
ANR	4794399	Argument	ip2		4792640	1					
ANR	4794400	Identifier	ip2		4792640	0					
ANR	4794401	Argument	ncomp		4792640	2					
ANR	4794402	Identifier	ncomp		4792640	0					
ANR	4794403	ExpressionStatement	nbits = 32 / ncomp	1972:9:79775:79793	4792640	1	True				
ANR	4794404	AssignmentExpression	nbits = 32 / ncomp		4792640	0		=			
ANR	4794405	Identifier	nbits		4792640	0					
ANR	4794406	MultiplicativeExpression	32 / ncomp		4792640	1		/			
ANR	4794407	PrimaryExpression	32		4792640	0					
ANR	4794408	Identifier	ncomp		4792640	1					
ANR	4794409	IfStatement	if ( 8 < nbits )		4792640	2					
ANR	4794410	Condition	8 < nbits	1973:12:79807:79815	4792640	0	True				
ANR	4794411	RelationalExpression	8 < nbits		4792640	0		<			
ANR	4794412	PrimaryExpression	8		4792640	0					
ANR	4794413	Identifier	nbits		4792640	1					
ANR	4794414	ExpressionStatement	nbits = 8	1973:23:79818:79827	4792640	1	True				
ANR	4794415	AssignmentExpression	nbits = 8		4792640	0		=			
ANR	4794416	Identifier	nbits		4792640	0					
ANR	4794417	PrimaryExpression	8		4792640	1					
ANR	4794418	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		4792640	3					
ANR	4794419	ForInit	i = 0 ;	1974:13:79842:79847	4792640	0	True				
ANR	4794420	AssignmentExpression	i = 0		4792640	0		=			
ANR	4794421	Identifier	i		4792640	0					
ANR	4794422	PrimaryExpression	0		4792640	1					
ANR	4794423	Condition	i < ncomp	1974:20:79849:79857	4792640	1	True				
ANR	4794424	RelationalExpression	i < ncomp		4792640	0		<			
ANR	4794425	Identifier	i		4792640	0					
ANR	4794426	Identifier	ncomp		4792640	1					
ANR	4794427	UnaryExpression	++ i	1974:31:79860:79862	4792640	2	True				
ANR	4794428	IncDec	++		4792640	0					
ANR	4794429	Identifier	i		4792640	1					
ANR	4794430	ExpressionStatement	ip2 [ i ] = nbits	1974:36:79865:79879	4792640	3	True				
ANR	4794431	AssignmentExpression	ip2 [ i ] = nbits		4792640	0		=			
ANR	4794432	ArrayIndexing	ip2 [ i ]		4792640	0					
ANR	4794433	Identifier	ip2		4792640	0					
ANR	4794434	Identifier	i		4792640	1					
ANR	4794435	Identifier	nbits		4792640	1					
ANR	4794436	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COMPBITS ] )"	1975:9:79890:79940	4792640	4	True				
ANR	4794437	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COMPBITS ] )"		4792640	0					
ANR	4794438	Callee	UPD_MM_DEL_PARAM		4792640	0					
ANR	4794439	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4794440	ArgumentList	udev -> memory		4792640	1					
ANR	4794441	Argument	udev -> memory		4792640	0					
ANR	4794442	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794443	Identifier	udev		4792640	0					
ANR	4794444	Identifier	memory		4792640	1					
ANR	4794445	Argument	int_a [ IA_COMPBITS ]		4792640	1					
ANR	4794446	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794447	Identifier	int_a		4792640	0					
ANR	4794448	Identifier	IA_COMPBITS		4792640	1					
ANR	4794449	ExpressionStatement	int_a [ IA_COMPBITS ] . data = ip2	1976:9:79951:79980	4792640	5	True				
ANR	4794450	AssignmentExpression	int_a [ IA_COMPBITS ] . data = ip2		4792640	0		=			
ANR	4794451	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794452	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794453	Identifier	int_a		4792640	0					
ANR	4794454	Identifier	IA_COMPBITS		4792640	1					
ANR	4794455	Identifier	data		4792640	1					
ANR	4794456	Identifier	ip2		4792640	1					
ANR	4794457	ExpressionStatement	int_a [ IA_COMPBITS ] . size = ncomp	1977:9:79991:80022	4792640	6	True				
ANR	4794458	AssignmentExpression	int_a [ IA_COMPBITS ] . size = ncomp		4792640	0		=			
ANR	4794459	MemberAccess	int_a [ IA_COMPBITS ] . size		4792640	0					
ANR	4794460	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794461	Identifier	int_a		4792640	0					
ANR	4794462	Identifier	IA_COMPBITS		4792640	1					
ANR	4794463	Identifier	size		4792640	1					
ANR	4794464	Identifier	ncomp		4792640	1					
ANR	4794465	IfStatement	if ( ncomp > int_a [ IA_COMPSHIFT ] . size )		4792640	7					
ANR	4794466	Condition	ncomp > int_a [ IA_COMPSHIFT ] . size	1980:9:80106:80137	4792640	0	True				
ANR	4794467	RelationalExpression	ncomp > int_a [ IA_COMPSHIFT ] . size		4792640	0		>			
ANR	4794468	Identifier	ncomp		4792640	0					
ANR	4794469	MemberAccess	int_a [ IA_COMPSHIFT ] . size		4792640	1					
ANR	4794470	ArrayIndexing	int_a [ IA_COMPSHIFT ]		4792640	0					
ANR	4794471	Identifier	int_a		4792640	0					
ANR	4794472	Identifier	IA_COMPSHIFT		4792640	1					
ANR	4794473	Identifier	size		4792640	1					
ANR	4794474	CompoundStatement		314:43:11847:11847	4792640	1					
ANR	4794475	ExpressionStatement	nbits = 0	1981:9:80181:80190	4792640	0	True				
ANR	4794476	AssignmentExpression	nbits = 0		4792640	0		=			
ANR	4794477	Identifier	nbits		4792640	0					
ANR	4794478	PrimaryExpression	0		4792640	1					
ANR	4794479	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		4792640	1					
ANR	4794480	ForInit	i = 0 ;	1982:13:80205:80210	4792640	0	True				
ANR	4794481	AssignmentExpression	i = 0		4792640	0		=			
ANR	4794482	Identifier	i		4792640	0					
ANR	4794483	PrimaryExpression	0		4792640	1					
ANR	4794484	Condition	i < ncomp	1982:20:80212:80220	4792640	1	True				
ANR	4794485	RelationalExpression	i < ncomp		4792640	0		<			
ANR	4794486	Identifier	i		4792640	0					
ANR	4794487	Identifier	ncomp		4792640	1					
ANR	4794488	UnaryExpression	++ i	1982:31:80223:80225	4792640	2	True				
ANR	4794489	IncDec	++		4792640	0					
ANR	4794490	Identifier	i		4792640	1					
ANR	4794491	ExpressionStatement	nbits += int_a [ IA_COMPBITS ] . data [ i ]	1982:36:80228:80263	4792640	3	True				
ANR	4794492	AssignmentExpression	nbits += int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		+=			
ANR	4794493	Identifier	nbits		4792640	0					
ANR	4794494	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794495	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794496	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794497	Identifier	int_a		4792640	0					
ANR	4794498	Identifier	IA_COMPBITS		4792640	1					
ANR	4794499	Identifier	data		4792640	1					
ANR	4794500	Identifier	i		4792640	1					
ANR	4794501	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip2 , ncomp )"	1983:9:80274:80315	4792640	2	True				
ANR	4794502	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip2 , ncomp )"		4792640	0					
ANR	4794503	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4794504	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4794505	ArgumentList	udev -> memory		4792640	1					
ANR	4794506	Argument	udev -> memory		4792640	0					
ANR	4794507	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794508	Identifier	udev		4792640	0					
ANR	4794509	Identifier	memory		4792640	1					
ANR	4794510	Argument	ip2		4792640	1					
ANR	4794511	Identifier	ip2		4792640	0					
ANR	4794512	Argument	ncomp		4792640	2					
ANR	4794513	Identifier	ncomp		4792640	0					
ANR	4794514	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		4792640	3					
ANR	4794515	ForInit	i = 0 ;	1984:13:80330:80335	4792640	0	True				
ANR	4794516	AssignmentExpression	i = 0		4792640	0		=			
ANR	4794517	Identifier	i		4792640	0					
ANR	4794518	PrimaryExpression	0		4792640	1					
ANR	4794519	Condition	i < ncomp	1984:20:80337:80345	4792640	1	True				
ANR	4794520	RelationalExpression	i < ncomp		4792640	0		<			
ANR	4794521	Identifier	i		4792640	0					
ANR	4794522	Identifier	ncomp		4792640	1					
ANR	4794523	UnaryExpression	++ i	1984:31:80348:80350	4792640	2	True				
ANR	4794524	IncDec	++		4792640	0					
ANR	4794525	Identifier	i		4792640	1					
ANR	4794526	CompoundStatement		318:36:12060:12060	4792640	3					
ANR	4794527	ExpressionStatement	ip2 [ i ] = nbits - int_a [ IA_COMPBITS ] . data [ i ]	1985:12:80367:80410	4792640	0	True				
ANR	4794528	AssignmentExpression	ip2 [ i ] = nbits - int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		=			
ANR	4794529	ArrayIndexing	ip2 [ i ]		4792640	0					
ANR	4794530	Identifier	ip2		4792640	0					
ANR	4794531	Identifier	i		4792640	1					
ANR	4794532	AdditiveExpression	nbits - int_a [ IA_COMPBITS ] . data [ i ]		4792640	1		-			
ANR	4794533	Identifier	nbits		4792640	0					
ANR	4794534	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794535	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794536	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794537	Identifier	int_a		4792640	0					
ANR	4794538	Identifier	IA_COMPBITS		4792640	1					
ANR	4794539	Identifier	data		4792640	1					
ANR	4794540	Identifier	i		4792640	1					
ANR	4794541	ExpressionStatement	nbits -= int_a [ IA_COMPBITS ] . data [ i ]	1986:12:80424:80459	4792640	1	True				
ANR	4794542	AssignmentExpression	nbits -= int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		-=			
ANR	4794543	Identifier	nbits		4792640	0					
ANR	4794544	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794545	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794546	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794547	Identifier	int_a		4792640	0					
ANR	4794548	Identifier	IA_COMPBITS		4792640	1					
ANR	4794549	Identifier	data		4792640	1					
ANR	4794550	Identifier	i		4792640	1					
ANR	4794551	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COMPSHIFT ] )"	1988:9:80481:80532	4792640	4	True				
ANR	4794552	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , int_a [ IA_COMPSHIFT ] )"		4792640	0					
ANR	4794553	Callee	UPD_MM_DEL_PARAM		4792640	0					
ANR	4794554	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4794555	ArgumentList	udev -> memory		4792640	1					
ANR	4794556	Argument	udev -> memory		4792640	0					
ANR	4794557	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4794558	Identifier	udev		4792640	0					
ANR	4794559	Identifier	memory		4792640	1					
ANR	4794560	Argument	int_a [ IA_COMPSHIFT ]		4792640	1					
ANR	4794561	ArrayIndexing	int_a [ IA_COMPSHIFT ]		4792640	0					
ANR	4794562	Identifier	int_a		4792640	0					
ANR	4794563	Identifier	IA_COMPSHIFT		4792640	1					
ANR	4794564	ExpressionStatement	int_a [ IA_COMPSHIFT ] . data = ip2	1989:9:80543:80573	4792640	5	True				
ANR	4794565	AssignmentExpression	int_a [ IA_COMPSHIFT ] . data = ip2		4792640	0		=			
ANR	4794566	MemberAccess	int_a [ IA_COMPSHIFT ] . data		4792640	0					
ANR	4794567	ArrayIndexing	int_a [ IA_COMPSHIFT ]		4792640	0					
ANR	4794568	Identifier	int_a		4792640	0					
ANR	4794569	Identifier	IA_COMPSHIFT		4792640	1					
ANR	4794570	Identifier	data		4792640	1					
ANR	4794571	Identifier	ip2		4792640	1					
ANR	4794572	ExpressionStatement	int_a [ IA_COMPSHIFT ] . size = ncomp	1990:9:80584:80616	4792640	6	True				
ANR	4794573	AssignmentExpression	int_a [ IA_COMPSHIFT ] . size = ncomp		4792640	0		=			
ANR	4794574	MemberAccess	int_a [ IA_COMPSHIFT ] . size		4792640	0					
ANR	4794575	ArrayIndexing	int_a [ IA_COMPSHIFT ]		4792640	0					
ANR	4794576	Identifier	int_a		4792640	0					
ANR	4794577	Identifier	IA_COMPSHIFT		4792640	1					
ANR	4794578	Identifier	size		4792640	1					
ANR	4794579	Identifier	ncomp		4792640	1					
ANR	4794580	IfStatement	if ( 0 == ip [ 1 ] )		4792640	8					
ANR	4794581	Condition	0 == ip [ 1 ]	1993:9:80703:80712	4792640	0	True				
ANR	4794582	EqualityExpression	0 == ip [ 1 ]		4792640	0		==			
ANR	4794583	PrimaryExpression	0		4792640	0					
ANR	4794584	ArrayIndexing	ip [ 1 ]		4792640	1					
ANR	4794585	Identifier	ip		4792640	0					
ANR	4794586	PrimaryExpression	1		4792640	1					
ANR	4794587	CompoundStatement		327:21:12422:12422	4792640	1					
ANR	4794588	ExpressionStatement	nbits = 0	1994:9:80757:80766	4792640	0	True				
ANR	4794589	AssignmentExpression	nbits = 0		4792640	0		=			
ANR	4794590	Identifier	nbits		4792640	0					
ANR	4794591	PrimaryExpression	0		4792640	1					
ANR	4794592	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		4792640	1					
ANR	4794593	ForInit	i = 0 ;	1995:13:80781:80786	4792640	0	True				
ANR	4794594	AssignmentExpression	i = 0		4792640	0		=			
ANR	4794595	Identifier	i		4792640	0					
ANR	4794596	PrimaryExpression	0		4792640	1					
ANR	4794597	Condition	i < ncomp	1995:20:80788:80796	4792640	1	True				
ANR	4794598	RelationalExpression	i < ncomp		4792640	0		<			
ANR	4794599	Identifier	i		4792640	0					
ANR	4794600	Identifier	ncomp		4792640	1					
ANR	4794601	UnaryExpression	++ i	1995:31:80799:80801	4792640	2	True				
ANR	4794602	IncDec	++		4792640	0					
ANR	4794603	Identifier	i		4792640	1					
ANR	4794604	CompoundStatement		329:36:12511:12511	4792640	3					
ANR	4794605	IfStatement	if ( nbits < ( int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ] ) )		4792640	0					
ANR	4794606	Condition	nbits < ( int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ] )	1996:15:80821:80910	4792640	0	True				
ANR	4794607	RelationalExpression	nbits < ( int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ] )		4792640	0		<			
ANR	4794608	Identifier	nbits		4792640	0					
ANR	4794609	AdditiveExpression	int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ]		4792640	1		+			
ANR	4794610	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	0					
ANR	4794611	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794612	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794613	Identifier	int_a		4792640	0					
ANR	4794614	Identifier	IA_COMPBITS		4792640	1					
ANR	4794615	Identifier	data		4792640	1					
ANR	4794616	Identifier	i		4792640	1					
ANR	4794617	ArrayIndexing	int_a [ IA_COMPSHIFT ] . data [ i ]		4792640	1					
ANR	4794618	MemberAccess	int_a [ IA_COMPSHIFT ] . data		4792640	0					
ANR	4794619	ArrayIndexing	int_a [ IA_COMPSHIFT ]		4792640	0					
ANR	4794620	Identifier	int_a		4792640	0					
ANR	4794621	Identifier	IA_COMPSHIFT		4792640	1					
ANR	4794622	Identifier	data		4792640	1					
ANR	4794623	Identifier	i		4792640	1					
ANR	4794624	ExpressionStatement	nbits = int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ]	1998:15:80928:81017	4792640	1	True				
ANR	4794625	AssignmentExpression	nbits = int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ]		4792640	0		=			
ANR	4794626	Identifier	nbits		4792640	0					
ANR	4794627	AdditiveExpression	int_a [ IA_COMPBITS ] . data [ i ] + int_a [ IA_COMPSHIFT ] . data [ i ]		4792640	1		+			
ANR	4794628	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	0					
ANR	4794629	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794630	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794631	Identifier	int_a		4792640	0					
ANR	4794632	Identifier	IA_COMPBITS		4792640	1					
ANR	4794633	Identifier	data		4792640	1					
ANR	4794634	Identifier	i		4792640	1					
ANR	4794635	ArrayIndexing	int_a [ IA_COMPSHIFT ] . data [ i ]		4792640	1					
ANR	4794636	MemberAccess	int_a [ IA_COMPSHIFT ] . data		4792640	0					
ANR	4794637	ArrayIndexing	int_a [ IA_COMPSHIFT ]		4792640	0					
ANR	4794638	Identifier	int_a		4792640	0					
ANR	4794639	Identifier	IA_COMPSHIFT		4792640	1					
ANR	4794640	Identifier	data		4792640	1					
ANR	4794641	Identifier	i		4792640	1					
ANR	4794642	IfStatement	if ( 1 >= nbits )		4792640	2					
ANR	4794643	Condition	1 >= nbits	2001:18:81048:81057	4792640	0	True				
ANR	4794644	RelationalExpression	1 >= nbits		4792640	0		>=			
ANR	4794645	PrimaryExpression	1		4792640	0					
ANR	4794646	Identifier	nbits		4792640	1					
ANR	4794647	ExpressionStatement	nbits = 1	2001:30:81060:81070	4792640	1	True				
ANR	4794648	AssignmentExpression	nbits = 1		4792640	0		=			
ANR	4794649	Identifier	nbits		4792640	0					
ANR	4794650	PrimaryExpression	1		4792640	1					
ANR	4794651	ElseStatement	else		4792640	0					
ANR	4794652	IfStatement	if ( 2 >= nbits )		4792640	0					
ANR	4794653	Condition	2 >= nbits	2002:18:81090:81099	4792640	0	True				
ANR	4794654	RelationalExpression	2 >= nbits		4792640	0		>=			
ANR	4794655	PrimaryExpression	2		4792640	0					
ANR	4794656	Identifier	nbits		4792640	1					
ANR	4794657	ExpressionStatement	nbits = 2	2002:30:81102:81112	4792640	1	True				
ANR	4794658	AssignmentExpression	nbits = 2		4792640	0		=			
ANR	4794659	Identifier	nbits		4792640	0					
ANR	4794660	PrimaryExpression	2		4792640	1					
ANR	4794661	ElseStatement	else		4792640	0					
ANR	4794662	IfStatement	if ( 4 >= nbits )		4792640	0					
ANR	4794663	Condition	4 >= nbits	2003:18:81132:81141	4792640	0	True				
ANR	4794664	RelationalExpression	4 >= nbits		4792640	0		>=			
ANR	4794665	PrimaryExpression	4		4792640	0					
ANR	4794666	Identifier	nbits		4792640	1					
ANR	4794667	ExpressionStatement	nbits = 4	2003:30:81144:81154	4792640	1	True				
ANR	4794668	AssignmentExpression	nbits = 4		4792640	0		=			
ANR	4794669	Identifier	nbits		4792640	0					
ANR	4794670	PrimaryExpression	4		4792640	1					
ANR	4794671	ElseStatement	else		4792640	0					
ANR	4794672	IfStatement	if ( 8 >= nbits )		4792640	0					
ANR	4794673	Condition	8 >= nbits	2004:18:81174:81183	4792640	0	True				
ANR	4794674	RelationalExpression	8 >= nbits		4792640	0		>=			
ANR	4794675	PrimaryExpression	8		4792640	0					
ANR	4794676	Identifier	nbits		4792640	1					
ANR	4794677	ExpressionStatement	nbits = 8	2004:30:81186:81196	4792640	1	True				
ANR	4794678	AssignmentExpression	nbits = 8		4792640	0		=			
ANR	4794679	Identifier	nbits		4792640	0					
ANR	4794680	PrimaryExpression	8		4792640	1					
ANR	4794681	ElseStatement	else		4792640	0					
ANR	4794682	IfStatement	if ( 16 >= nbits )		4792640	0					
ANR	4794683	Condition	16 >= nbits	2005:17:81215:81225	4792640	0	True				
ANR	4794684	RelationalExpression	16 >= nbits		4792640	0		>=			
ANR	4794685	PrimaryExpression	16		4792640	0					
ANR	4794686	Identifier	nbits		4792640	1					
ANR	4794687	ExpressionStatement	nbits = 16	2005:30:81228:81238	4792640	1	True				
ANR	4794688	AssignmentExpression	nbits = 16		4792640	0		=			
ANR	4794689	Identifier	nbits		4792640	0					
ANR	4794690	PrimaryExpression	16		4792640	1					
ANR	4794691	ElseStatement	else		4792640	0					
ANR	4794692	IfStatement	if ( 24 >= nbits )		4792640	0					
ANR	4794693	Condition	24 >= nbits	2006:17:81257:81267	4792640	0	True				
ANR	4794694	RelationalExpression	24 >= nbits		4792640	0		>=			
ANR	4794695	PrimaryExpression	24		4792640	0					
ANR	4794696	Identifier	nbits		4792640	1					
ANR	4794697	ExpressionStatement	nbits = 24	2006:30:81270:81280	4792640	1	True				
ANR	4794698	AssignmentExpression	nbits = 24		4792640	0		=			
ANR	4794699	Identifier	nbits		4792640	0					
ANR	4794700	PrimaryExpression	24		4792640	1					
ANR	4794701	ElseStatement	else		4792640	0					
ANR	4794702	ExpressionStatement	nbits = 32	2007:30:81312:81322	4792640	0	True				
ANR	4794703	AssignmentExpression	nbits = 32		4792640	0		=			
ANR	4794704	Identifier	nbits		4792640	0					
ANR	4794705	PrimaryExpression	32		4792640	1					
ANR	4794706	ExpressionStatement	ip [ 1 ] = nbits	2009:9:81334:81347	4792640	3	True				
ANR	4794707	AssignmentExpression	ip [ 1 ] = nbits		4792640	0		=			
ANR	4794708	ArrayIndexing	ip [ 1 ]		4792640	0					
ANR	4794709	Identifier	ip		4792640	0					
ANR	4794710	PrimaryExpression	1		4792640	1					
ANR	4794711	Identifier	nbits		4792640	1					
ANR	4794712	IfStatement	if ( 0 == ip [ 2 ] )		4792640	9					
ANR	4794713	Condition	0 == ip [ 2 ]	2013:9:81414:81423	4792640	0	True				
ANR	4794714	EqualityExpression	0 == ip [ 2 ]		4792640	0		==			
ANR	4794715	PrimaryExpression	0		4792640	0					
ANR	4794716	ArrayIndexing	ip [ 2 ]		4792640	1					
ANR	4794717	Identifier	ip		4792640	0					
ANR	4794718	PrimaryExpression	2		4792640	1					
ANR	4794719	CompoundStatement		347:21:13133:13133	4792640	1					
ANR	4794720	ExpressionStatement	nbits = 0	2014:9:81465:81474	4792640	0	True				
ANR	4794721	AssignmentExpression	nbits = 0		4792640	0		=			
ANR	4794722	Identifier	nbits		4792640	0					
ANR	4794723	PrimaryExpression	0		4792640	1					
ANR	4794724	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		4792640	1					
ANR	4794725	ForInit	i = 0 ;	2015:13:81489:81494	4792640	0	True				
ANR	4794726	AssignmentExpression	i = 0		4792640	0		=			
ANR	4794727	Identifier	i		4792640	0					
ANR	4794728	PrimaryExpression	0		4792640	1					
ANR	4794729	Condition	i < ncomp	2015:20:81496:81504	4792640	1	True				
ANR	4794730	RelationalExpression	i < ncomp		4792640	0		<			
ANR	4794731	Identifier	i		4792640	0					
ANR	4794732	Identifier	ncomp		4792640	1					
ANR	4794733	UnaryExpression	++ i	2015:31:81507:81509	4792640	2	True				
ANR	4794734	IncDec	++		4792640	0					
ANR	4794735	Identifier	i		4792640	1					
ANR	4794736	IfStatement	if ( nbits < int_a [ IA_COMPBITS ] . data [ i ] )		4792640	3					
ANR	4794737	Condition	nbits < int_a [ IA_COMPBITS ] . data [ i ]	2015:39:81515:81548	4792640	0	True				
ANR	4794738	RelationalExpression	nbits < int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		<			
ANR	4794739	Identifier	nbits		4792640	0					
ANR	4794740	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794741	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794742	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794743	Identifier	int_a		4792640	0					
ANR	4794744	Identifier	IA_COMPBITS		4792640	1					
ANR	4794745	Identifier	data		4792640	1					
ANR	4794746	Identifier	i		4792640	1					
ANR	4794747	ExpressionStatement	nbits = int_a [ IA_COMPBITS ] . data [ i ]	2016:12:81563:81597	4792640	1	True				
ANR	4794748	AssignmentExpression	nbits = int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		=			
ANR	4794749	Identifier	nbits		4792640	0					
ANR	4794750	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794751	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794752	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794753	Identifier	int_a		4792640	0					
ANR	4794754	Identifier	IA_COMPBITS		4792640	1					
ANR	4794755	Identifier	data		4792640	1					
ANR	4794756	Identifier	i		4792640	1					
ANR	4794757	IfStatement	if ( nbits > 8 )		4792640	2					
ANR	4794758	Condition	nbits > 8	2017:12:81611:81619	4792640	0	True				
ANR	4794759	RelationalExpression	nbits > 8		4792640	0		>			
ANR	4794760	Identifier	nbits		4792640	0					
ANR	4794761	PrimaryExpression	8		4792640	1					
ANR	4794762	ExpressionStatement	nbits = 8	2017:23:81622:81631	4792640	1	True				
ANR	4794763	AssignmentExpression	nbits = 8		4792640	0		=			
ANR	4794764	Identifier	nbits		4792640	0					
ANR	4794765	PrimaryExpression	8		4792640	1					
ANR	4794766	ExpressionStatement	ip [ 2 ] = ( 1 << nbits ) - 1	2018:9:81642:81666	4792640	3	True				
ANR	4794767	AssignmentExpression	ip [ 2 ] = ( 1 << nbits ) - 1		4792640	0		=			
ANR	4794768	ArrayIndexing	ip [ 2 ]		4792640	0					
ANR	4794769	Identifier	ip		4792640	0					
ANR	4794770	PrimaryExpression	2		4792640	1					
ANR	4794771	AdditiveExpression	( 1 << nbits ) - 1		4792640	1		-			
ANR	4794772	ShiftExpression	1 << nbits		4792640	0		<<			
ANR	4794773	PrimaryExpression	1		4792640	0					
ANR	4794774	Identifier	nbits		4792640	1					
ANR	4794775	PrimaryExpression	1		4792640	1					
ANR	4794776	IfStatement	if ( 0 == ip [ 3 ] && 1 < ip [ 0 ] )		4792640	10					
ANR	4794777	Condition	0 == ip [ 3 ] && 1 < ip [ 0 ]	2021:9:81729:81751	4792640	0	True				
ANR	4794778	AndExpression	0 == ip [ 3 ] && 1 < ip [ 0 ]		4792640	0		&&			
ANR	4794779	EqualityExpression	0 == ip [ 3 ]		4792640	0		==			
ANR	4794780	PrimaryExpression	0		4792640	0					
ANR	4794781	ArrayIndexing	ip [ 3 ]		4792640	1					
ANR	4794782	Identifier	ip		4792640	0					
ANR	4794783	PrimaryExpression	3		4792640	1					
ANR	4794784	RelationalExpression	1 < ip [ 0 ]		4792640	1		<			
ANR	4794785	PrimaryExpression	1		4792640	0					
ANR	4794786	ArrayIndexing	ip [ 0 ]		4792640	1					
ANR	4794787	Identifier	ip		4792640	0					
ANR	4794788	PrimaryExpression	0		4792640	1					
ANR	4794789	CompoundStatement		355:34:13461:13461	4792640	1					
ANR	4794790	ExpressionStatement	nbits = 0	2022:9:81788:81797	4792640	0	True				
ANR	4794791	AssignmentExpression	nbits = 0		4792640	0		=			
ANR	4794792	Identifier	nbits		4792640	0					
ANR	4794793	PrimaryExpression	0		4792640	1					
ANR	4794794	ForStatement	for ( i = 0 ; i < ip [ 0 ] ; ++ i )		4792640	1					
ANR	4794795	ForInit	i = 0 ;	2023:13:81812:81817	4792640	0	True				
ANR	4794796	AssignmentExpression	i = 0		4792640	0		=			
ANR	4794797	Identifier	i		4792640	0					
ANR	4794798	PrimaryExpression	0		4792640	1					
ANR	4794799	Condition	i < ip [ 0 ]	2023:20:81819:81827	4792640	1	True				
ANR	4794800	RelationalExpression	i < ip [ 0 ]		4792640	0		<			
ANR	4794801	Identifier	i		4792640	0					
ANR	4794802	ArrayIndexing	ip [ 0 ]		4792640	1					
ANR	4794803	Identifier	ip		4792640	0					
ANR	4794804	PrimaryExpression	0		4792640	1					
ANR	4794805	UnaryExpression	++ i	2023:31:81830:81832	4792640	2	True				
ANR	4794806	IncDec	++		4792640	0					
ANR	4794807	Identifier	i		4792640	1					
ANR	4794808	ExpressionStatement	nbits += int_a [ IA_COMPBITS ] . data [ i ]	2023:36:81835:81870	4792640	3	True				
ANR	4794809	AssignmentExpression	nbits += int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		+=			
ANR	4794810	Identifier	nbits		4792640	0					
ANR	4794811	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794812	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794813	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794814	Identifier	int_a		4792640	0					
ANR	4794815	Identifier	IA_COMPBITS		4792640	1					
ANR	4794816	Identifier	data		4792640	1					
ANR	4794817	Identifier	i		4792640	1					
ANR	4794818	IfStatement	if ( nbits > 8 )		4792640	2					
ANR	4794819	Condition	nbits > 8	2024:12:81884:81892	4792640	0	True				
ANR	4794820	RelationalExpression	nbits > 8		4792640	0		>			
ANR	4794821	Identifier	nbits		4792640	0					
ANR	4794822	PrimaryExpression	8		4792640	1					
ANR	4794823	ExpressionStatement	nbits = 8	2024:23:81895:81904	4792640	1	True				
ANR	4794824	AssignmentExpression	nbits = 8		4792640	0		=			
ANR	4794825	Identifier	nbits		4792640	0					
ANR	4794826	PrimaryExpression	8		4792640	1					
ANR	4794827	ExpressionStatement	ip [ 3 ] = ( 1 << nbits ) - 1	2025:9:81915:81939	4792640	3	True				
ANR	4794828	AssignmentExpression	ip [ 3 ] = ( 1 << nbits ) - 1		4792640	0		=			
ANR	4794829	ArrayIndexing	ip [ 3 ]		4792640	0					
ANR	4794830	Identifier	ip		4792640	0					
ANR	4794831	PrimaryExpression	3		4792640	1					
ANR	4794832	AdditiveExpression	( 1 << nbits ) - 1		4792640	1		-			
ANR	4794833	ShiftExpression	1 << nbits		4792640	0		<<			
ANR	4794834	PrimaryExpression	1		4792640	0					
ANR	4794835	Identifier	nbits		4792640	1					
ANR	4794836	PrimaryExpression	1		4792640	1					
ANR	4794837	IfStatement	if ( 0 == ip [ 4 ] )		4792640	11					
ANR	4794838	Condition	0 == ip [ 4 ]	2028:9:82010:82019	4792640	0	True				
ANR	4794839	EqualityExpression	0 == ip [ 4 ]		4792640	0		==			
ANR	4794840	PrimaryExpression	0		4792640	0					
ANR	4794841	ArrayIndexing	ip [ 4 ]		4792640	1					
ANR	4794842	Identifier	ip		4792640	0					
ANR	4794843	PrimaryExpression	4		4792640	1					
ANR	4794844	CompoundStatement		362:21:13729:13729	4792640	1					
ANR	4794845	ExpressionStatement	nbits = 0	2029:9:82049:82058	4792640	0	True				
ANR	4794846	AssignmentExpression	nbits = 0		4792640	0		=			
ANR	4794847	Identifier	nbits		4792640	0					
ANR	4794848	PrimaryExpression	0		4792640	1					
ANR	4794849	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		4792640	1					
ANR	4794850	ForInit	i = 0 ;	2030:13:82073:82078	4792640	0	True				
ANR	4794851	AssignmentExpression	i = 0		4792640	0		=			
ANR	4794852	Identifier	i		4792640	0					
ANR	4794853	PrimaryExpression	0		4792640	1					
ANR	4794854	Condition	i < ncomp	2030:20:82080:82088	4792640	1	True				
ANR	4794855	RelationalExpression	i < ncomp		4792640	0		<			
ANR	4794856	Identifier	i		4792640	0					
ANR	4794857	Identifier	ncomp		4792640	1					
ANR	4794858	UnaryExpression	++ i	2030:31:82091:82093	4792640	2	True				
ANR	4794859	IncDec	++		4792640	0					
ANR	4794860	Identifier	i		4792640	1					
ANR	4794861	IfStatement	if ( nbits < int_a [ IA_COMPBITS ] . data [ i ] )		4792640	3					
ANR	4794862	Condition	nbits < int_a [ IA_COMPBITS ] . data [ i ]	2030:39:82099:82132	4792640	0	True				
ANR	4794863	RelationalExpression	nbits < int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		<			
ANR	4794864	Identifier	nbits		4792640	0					
ANR	4794865	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794866	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794867	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794868	Identifier	int_a		4792640	0					
ANR	4794869	Identifier	IA_COMPBITS		4792640	1					
ANR	4794870	Identifier	data		4792640	1					
ANR	4794871	Identifier	i		4792640	1					
ANR	4794872	ExpressionStatement	nbits = int_a [ IA_COMPBITS ] . data [ i ]	2031:12:82147:82181	4792640	1	True				
ANR	4794873	AssignmentExpression	nbits = int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		=			
ANR	4794874	Identifier	nbits		4792640	0					
ANR	4794875	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794876	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794877	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794878	Identifier	int_a		4792640	0					
ANR	4794879	Identifier	IA_COMPBITS		4792640	1					
ANR	4794880	Identifier	data		4792640	1					
ANR	4794881	Identifier	i		4792640	1					
ANR	4794882	IfStatement	if ( 2 < nbits )		4792640	2					
ANR	4794883	Condition	2 < nbits	2032:12:82195:82203	4792640	0	True				
ANR	4794884	RelationalExpression	2 < nbits		4792640	0		<			
ANR	4794885	PrimaryExpression	2		4792640	0					
ANR	4794886	Identifier	nbits		4792640	1					
ANR	4794887	ExpressionStatement	ip [ 4 ] = 256	2032:23:82206:82217	4792640	1	True				
ANR	4794888	AssignmentExpression	ip [ 4 ] = 256		4792640	0		=			
ANR	4794889	ArrayIndexing	ip [ 4 ]		4792640	0					
ANR	4794890	Identifier	ip		4792640	0					
ANR	4794891	PrimaryExpression	4		4792640	1					
ANR	4794892	PrimaryExpression	256		4792640	1					
ANR	4794893	ElseStatement	else		4792640	0					
ANR	4794894	ExpressionStatement	ip [ 4 ] = 2	2033:23:82242:82251	4792640	0	True				
ANR	4794895	AssignmentExpression	ip [ 4 ] = 2		4792640	0		=			
ANR	4794896	ArrayIndexing	ip [ 4 ]		4792640	0					
ANR	4794897	Identifier	ip		4792640	0					
ANR	4794898	PrimaryExpression	4		4792640	1					
ANR	4794899	PrimaryExpression	2		4792640	1					
ANR	4794900	IfStatement	if ( 0 == ip [ 5 ] && 1 < ip [ 0 ] )		4792640	12					
ANR	4794901	Condition	0 == ip [ 5 ] && 1 < ip [ 0 ]	2036:9:82302:82324	4792640	0	True				
ANR	4794902	AndExpression	0 == ip [ 5 ] && 1 < ip [ 0 ]		4792640	0		&&			
ANR	4794903	EqualityExpression	0 == ip [ 5 ]		4792640	0		==			
ANR	4794904	PrimaryExpression	0		4792640	0					
ANR	4794905	ArrayIndexing	ip [ 5 ]		4792640	1					
ANR	4794906	Identifier	ip		4792640	0					
ANR	4794907	PrimaryExpression	5		4792640	1					
ANR	4794908	RelationalExpression	1 < ip [ 0 ]		4792640	1		<			
ANR	4794909	PrimaryExpression	1		4792640	0					
ANR	4794910	ArrayIndexing	ip [ 0 ]		4792640	1					
ANR	4794911	Identifier	ip		4792640	0					
ANR	4794912	PrimaryExpression	0		4792640	1					
ANR	4794913	CompoundStatement		370:34:14034:14034	4792640	1					
ANR	4794914	ExpressionStatement	nbits = 0	2037:9:82355:82364	4792640	0	True				
ANR	4794915	AssignmentExpression	nbits = 0		4792640	0		=			
ANR	4794916	Identifier	nbits		4792640	0					
ANR	4794917	PrimaryExpression	0		4792640	1					
ANR	4794918	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		4792640	1					
ANR	4794919	ForInit	i = 0 ;	2038:13:82379:82384	4792640	0	True				
ANR	4794920	AssignmentExpression	i = 0		4792640	0		=			
ANR	4794921	Identifier	i		4792640	0					
ANR	4794922	PrimaryExpression	0		4792640	1					
ANR	4794923	Condition	i < ncomp	2038:20:82386:82394	4792640	1	True				
ANR	4794924	RelationalExpression	i < ncomp		4792640	0		<			
ANR	4794925	Identifier	i		4792640	0					
ANR	4794926	Identifier	ncomp		4792640	1					
ANR	4794927	UnaryExpression	++ i	2038:31:82397:82399	4792640	2	True				
ANR	4794928	IncDec	++		4792640	0					
ANR	4794929	Identifier	i		4792640	1					
ANR	4794930	IfStatement	if ( nbits < int_a [ IA_COMPBITS ] . data [ i ] )		4792640	3					
ANR	4794931	Condition	nbits < int_a [ IA_COMPBITS ] . data [ i ]	2038:39:82405:82438	4792640	0	True				
ANR	4794932	RelationalExpression	nbits < int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		<			
ANR	4794933	Identifier	nbits		4792640	0					
ANR	4794934	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794935	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794936	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794937	Identifier	int_a		4792640	0					
ANR	4794938	Identifier	IA_COMPBITS		4792640	1					
ANR	4794939	Identifier	data		4792640	1					
ANR	4794940	Identifier	i		4792640	1					
ANR	4794941	ExpressionStatement	nbits = int_a [ IA_COMPBITS ] . data [ i ]	2039:12:82453:82487	4792640	1	True				
ANR	4794942	AssignmentExpression	nbits = int_a [ IA_COMPBITS ] . data [ i ]		4792640	0		=			
ANR	4794943	Identifier	nbits		4792640	0					
ANR	4794944	ArrayIndexing	int_a [ IA_COMPBITS ] . data [ i ]		4792640	1					
ANR	4794945	MemberAccess	int_a [ IA_COMPBITS ] . data		4792640	0					
ANR	4794946	ArrayIndexing	int_a [ IA_COMPBITS ]		4792640	0					
ANR	4794947	Identifier	int_a		4792640	0					
ANR	4794948	Identifier	IA_COMPBITS		4792640	1					
ANR	4794949	Identifier	data		4792640	1					
ANR	4794950	Identifier	i		4792640	1					
ANR	4794951	IfStatement	if ( 2 < nbits )		4792640	2					
ANR	4794952	Condition	2 < nbits	2040:12:82501:82509	4792640	0	True				
ANR	4794953	RelationalExpression	2 < nbits		4792640	0		<			
ANR	4794954	PrimaryExpression	2		4792640	0					
ANR	4794955	Identifier	nbits		4792640	1					
ANR	4794956	ExpressionStatement	ip [ 5 ] = 256	2040:23:82512:82523	4792640	1	True				
ANR	4794957	AssignmentExpression	ip [ 5 ] = 256		4792640	0		=			
ANR	4794958	ArrayIndexing	ip [ 5 ]		4792640	0					
ANR	4794959	Identifier	ip		4792640	0					
ANR	4794960	PrimaryExpression	5		4792640	1					
ANR	4794961	PrimaryExpression	256		4792640	1					
ANR	4794962	ElseStatement	else		4792640	0					
ANR	4794963	ExpressionStatement	ip [ 5 ] = 2	2041:23:82548:82557	4792640	0	True				
ANR	4794964	AssignmentExpression	ip [ 5 ] = 2		4792640	0		=			
ANR	4794965	ArrayIndexing	ip [ 5 ]		4792640	0					
ANR	4794966	Identifier	ip		4792640	0					
ANR	4794967	PrimaryExpression	5		4792640	1					
ANR	4794968	PrimaryExpression	2		4792640	1					
ANR	4794969	ExpressionStatement	udev -> color_info . num_components = ip [ 0 ]	2044:6:82619:82658	4792640	13	True				
ANR	4794970	AssignmentExpression	udev -> color_info . num_components = ip [ 0 ]		4792640	0		=			
ANR	4794971	MemberAccess	udev -> color_info . num_components		4792640	0					
ANR	4794972	PtrMemberAccess	udev -> color_info		4792640	0					
ANR	4794973	Identifier	udev		4792640	0					
ANR	4794974	Identifier	color_info		4792640	1					
ANR	4794975	Identifier	num_components		4792640	1					
ANR	4794976	ArrayIndexing	ip [ 0 ]		4792640	1					
ANR	4794977	Identifier	ip		4792640	0					
ANR	4794978	PrimaryExpression	0		4792640	1					
ANR	4794979	ExpressionStatement	udev -> color_info . depth = ip [ 1 ]	2045:6:82666:82705	4792640	14	True				
ANR	4794980	AssignmentExpression	udev -> color_info . depth = ip [ 1 ]		4792640	0		=			
ANR	4794981	MemberAccess	udev -> color_info . depth		4792640	0					
ANR	4794982	PtrMemberAccess	udev -> color_info		4792640	0					
ANR	4794983	Identifier	udev		4792640	0					
ANR	4794984	Identifier	color_info		4792640	1					
ANR	4794985	Identifier	depth		4792640	1					
ANR	4794986	ArrayIndexing	ip [ 1 ]		4792640	1					
ANR	4794987	Identifier	ip		4792640	0					
ANR	4794988	PrimaryExpression	1		4792640	1					
ANR	4794989	ExpressionStatement	udev -> color_info . max_gray = ( gx_color_value ) ip [ 2 ]	2046:6:82713:82769	4792640	15	True				
ANR	4794990	AssignmentExpression	udev -> color_info . max_gray = ( gx_color_value ) ip [ 2 ]		4792640	0		=			
ANR	4794991	MemberAccess	udev -> color_info . max_gray		4792640	0					
ANR	4794992	PtrMemberAccess	udev -> color_info		4792640	0					
ANR	4794993	Identifier	udev		4792640	0					
ANR	4794994	Identifier	color_info		4792640	1					
ANR	4794995	Identifier	max_gray		4792640	1					
ANR	4794996	CastExpression	( gx_color_value ) ip [ 2 ]		4792640	1					
ANR	4794997	CastTarget	gx_color_value		4792640	0					
ANR	4794998	ArrayIndexing	ip [ 2 ]		4792640	1					
ANR	4794999	Identifier	ip		4792640	0					
ANR	4795000	PrimaryExpression	2		4792640	1					
ANR	4795001	ExpressionStatement	udev -> color_info . max_color = ( gx_color_value ) ip [ 3 ]	2047:6:82777:82833	4792640	16	True				
ANR	4795002	AssignmentExpression	udev -> color_info . max_color = ( gx_color_value ) ip [ 3 ]		4792640	0		=			
ANR	4795003	MemberAccess	udev -> color_info . max_color		4792640	0					
ANR	4795004	PtrMemberAccess	udev -> color_info		4792640	0					
ANR	4795005	Identifier	udev		4792640	0					
ANR	4795006	Identifier	color_info		4792640	1					
ANR	4795007	Identifier	max_color		4792640	1					
ANR	4795008	CastExpression	( gx_color_value ) ip [ 3 ]		4792640	1					
ANR	4795009	CastTarget	gx_color_value		4792640	0					
ANR	4795010	ArrayIndexing	ip [ 3 ]		4792640	1					
ANR	4795011	Identifier	ip		4792640	0					
ANR	4795012	PrimaryExpression	3		4792640	1					
ANR	4795013	ExpressionStatement	udev -> color_info . dither_grays = ( gx_color_value ) ip [ 4 ]	2048:6:82841:82897	4792640	17	True				
ANR	4795014	AssignmentExpression	udev -> color_info . dither_grays = ( gx_color_value ) ip [ 4 ]		4792640	0		=			
ANR	4795015	MemberAccess	udev -> color_info . dither_grays		4792640	0					
ANR	4795016	PtrMemberAccess	udev -> color_info		4792640	0					
ANR	4795017	Identifier	udev		4792640	0					
ANR	4795018	Identifier	color_info		4792640	1					
ANR	4795019	Identifier	dither_grays		4792640	1					
ANR	4795020	CastExpression	( gx_color_value ) ip [ 4 ]		4792640	1					
ANR	4795021	CastTarget	gx_color_value		4792640	0					
ANR	4795022	ArrayIndexing	ip [ 4 ]		4792640	1					
ANR	4795023	Identifier	ip		4792640	0					
ANR	4795024	PrimaryExpression	4		4792640	1					
ANR	4795025	ExpressionStatement	udev -> color_info . dither_colors = ( gx_color_value ) ip [ 5 ]	2049:6:82905:82961	4792640	18	True				
ANR	4795026	AssignmentExpression	udev -> color_info . dither_colors = ( gx_color_value ) ip [ 5 ]		4792640	0		=			
ANR	4795027	MemberAccess	udev -> color_info . dither_colors		4792640	0					
ANR	4795028	PtrMemberAccess	udev -> color_info		4792640	0					
ANR	4795029	Identifier	udev		4792640	0					
ANR	4795030	Identifier	color_info		4792640	1					
ANR	4795031	Identifier	dither_colors		4792640	1					
ANR	4795032	CastExpression	( gx_color_value ) ip [ 5 ]		4792640	1					
ANR	4795033	CastTarget	gx_color_value		4792640	0					
ANR	4795034	ArrayIndexing	ip [ 5 ]		4792640	1					
ANR	4795035	Identifier	ip		4792640	0					
ANR	4795036	PrimaryExpression	5		4792640	1					
ANR	4795037	IfStatement	"if ( ( 0 == param_read_float_array ( plist , ""HWResolution"" , & mfa ) ) && ( 2 == mfa . size ) && ( 0 != mfa . data ) )"		4792640	19					
ANR	4795038	Condition	"( 0 == param_read_float_array ( plist , ""HWResolution"" , & mfa ) ) && ( 2 == mfa . size ) && ( 0 != mfa . data )"	2055:9:83084:83186	4792640	0	True				
ANR	4795039	AndExpression	"( 0 == param_read_float_array ( plist , ""HWResolution"" , & mfa ) ) && ( 2 == mfa . size ) && ( 0 != mfa . data )"		4792640	0		&&			
ANR	4795040	EqualityExpression	"0 == param_read_float_array ( plist , ""HWResolution"" , & mfa )"		4792640	0		==			
ANR	4795041	PrimaryExpression	0		4792640	0					
ANR	4795042	CallExpression	"param_read_float_array ( plist , ""HWResolution"" , & mfa )"		4792640	1					
ANR	4795043	Callee	param_read_float_array		4792640	0					
ANR	4795044	Identifier	param_read_float_array		4792640	0					
ANR	4795045	ArgumentList	plist		4792640	1					
ANR	4795046	Argument	plist		4792640	0					
ANR	4795047	Identifier	plist		4792640	0					
ANR	4795048	Argument	"""HWResolution"""		4792640	1					
ANR	4795049	PrimaryExpression	"""HWResolution"""		4792640	0					
ANR	4795050	Argument	& mfa		4792640	2					
ANR	4795051	UnaryOperationExpression	& mfa		4792640	0					
ANR	4795052	UnaryOperator	&		4792640	0					
ANR	4795053	Identifier	mfa		4792640	1					
ANR	4795054	AndExpression	( 2 == mfa . size ) && ( 0 != mfa . data )		4792640	1		&&			
ANR	4795055	EqualityExpression	2 == mfa . size		4792640	0		==			
ANR	4795056	PrimaryExpression	2		4792640	0					
ANR	4795057	MemberAccess	mfa . size		4792640	1					
ANR	4795058	Identifier	mfa		4792640	0					
ANR	4795059	Identifier	size		4792640	1					
ANR	4795060	EqualityExpression	0 != mfa . data		4792640	1		!=			
ANR	4795061	PrimaryExpression	0		4792640	0					
ANR	4795062	MemberAccess	mfa . data		4792640	1					
ANR	4795063	Identifier	mfa		4792640	0					
ANR	4795064	Identifier	data		4792640	1					
ANR	4795065	CompoundStatement		390:45:14896:14896	4792640	1					
ANR	4795066	ExpressionStatement	udev -> HWResolution [ 0 ] = mfa . data [ 0 ]	2057:9:83200:83235	4792640	0	True				
ANR	4795067	AssignmentExpression	udev -> HWResolution [ 0 ] = mfa . data [ 0 ]		4792640	0		=			
ANR	4795068	ArrayIndexing	udev -> HWResolution [ 0 ]		4792640	0					
ANR	4795069	PtrMemberAccess	udev -> HWResolution		4792640	0					
ANR	4795070	Identifier	udev		4792640	0					
ANR	4795071	Identifier	HWResolution		4792640	1					
ANR	4795072	PrimaryExpression	0		4792640	1					
ANR	4795073	ArrayIndexing	mfa . data [ 0 ]		4792640	1					
ANR	4795074	MemberAccess	mfa . data		4792640	0					
ANR	4795075	Identifier	mfa		4792640	0					
ANR	4795076	Identifier	data		4792640	1					
ANR	4795077	PrimaryExpression	0		4792640	1					
ANR	4795078	ExpressionStatement	udev -> HWResolution [ 1 ] = mfa . data [ 1 ]	2058:9:83246:83281	4792640	1	True				
ANR	4795079	AssignmentExpression	udev -> HWResolution [ 1 ] = mfa . data [ 1 ]		4792640	0		=			
ANR	4795080	ArrayIndexing	udev -> HWResolution [ 1 ]		4792640	0					
ANR	4795081	PtrMemberAccess	udev -> HWResolution		4792640	0					
ANR	4795082	Identifier	udev		4792640	0					
ANR	4795083	Identifier	HWResolution		4792640	1					
ANR	4795084	PrimaryExpression	1		4792640	1					
ANR	4795085	ArrayIndexing	mfa . data [ 1 ]		4792640	1					
ANR	4795086	MemberAccess	mfa . data		4792640	0					
ANR	4795087	Identifier	mfa		4792640	0					
ANR	4795088	Identifier	data		4792640	1					
ANR	4795089	PrimaryExpression	1		4792640	1					
ANR	4795090	IfStatement	"if ( ( 0 == param_read_float_array ( plist , "".HWMargins"" , & mfa ) ) && ( 4 == mfa . size ) && ( 0 != mfa . data ) )"		4792640	20					
ANR	4795091	Condition	"( 0 == param_read_float_array ( plist , "".HWMargins"" , & mfa ) ) && ( 4 == mfa . size ) && ( 0 != mfa . data )"	2061:9:83301:83401	4792640	0	True				
ANR	4795092	AndExpression	"( 0 == param_read_float_array ( plist , "".HWMargins"" , & mfa ) ) && ( 4 == mfa . size ) && ( 0 != mfa . data )"		4792640	0		&&			
ANR	4795093	EqualityExpression	"0 == param_read_float_array ( plist , "".HWMargins"" , & mfa )"		4792640	0		==			
ANR	4795094	PrimaryExpression	0		4792640	0					
ANR	4795095	CallExpression	"param_read_float_array ( plist , "".HWMargins"" , & mfa )"		4792640	1					
ANR	4795096	Callee	param_read_float_array		4792640	0					
ANR	4795097	Identifier	param_read_float_array		4792640	0					
ANR	4795098	ArgumentList	plist		4792640	1					
ANR	4795099	Argument	plist		4792640	0					
ANR	4795100	Identifier	plist		4792640	0					
ANR	4795101	Argument	""".HWMargins"""		4792640	1					
ANR	4795102	PrimaryExpression	""".HWMargins"""		4792640	0					
ANR	4795103	Argument	& mfa		4792640	2					
ANR	4795104	UnaryOperationExpression	& mfa		4792640	0					
ANR	4795105	UnaryOperator	&		4792640	0					
ANR	4795106	Identifier	mfa		4792640	1					
ANR	4795107	AndExpression	( 4 == mfa . size ) && ( 0 != mfa . data )		4792640	1		&&			
ANR	4795108	EqualityExpression	4 == mfa . size		4792640	0		==			
ANR	4795109	PrimaryExpression	4		4792640	0					
ANR	4795110	MemberAccess	mfa . size		4792640	1					
ANR	4795111	Identifier	mfa		4792640	0					
ANR	4795112	Identifier	size		4792640	1					
ANR	4795113	EqualityExpression	0 != mfa . data		4792640	1		!=			
ANR	4795114	PrimaryExpression	0		4792640	0					
ANR	4795115	MemberAccess	mfa . data		4792640	1					
ANR	4795116	Identifier	mfa		4792640	0					
ANR	4795117	Identifier	data		4792640	1					
ANR	4795118	CompoundStatement		396:45:15111:15111	4792640	1					
ANR	4795119	ExpressionStatement	udev -> Margins [ 0 ] = - mfa . data [ 0 ] * udev -> HWResolution [ 0 ] / 72.0	2063:9:83415:83477	4792640	0	True				
ANR	4795120	AssignmentExpression	udev -> Margins [ 0 ] = - mfa . data [ 0 ] * udev -> HWResolution [ 0 ] / 72.0		4792640	0		=			
ANR	4795121	ArrayIndexing	udev -> Margins [ 0 ]		4792640	0					
ANR	4795122	PtrMemberAccess	udev -> Margins		4792640	0					
ANR	4795123	Identifier	udev		4792640	0					
ANR	4795124	Identifier	Margins		4792640	1					
ANR	4795125	PrimaryExpression	0		4792640	1					
ANR	4795126	MultiplicativeExpression	- mfa . data [ 0 ] * udev -> HWResolution [ 0 ] / 72.0		4792640	1		*			
ANR	4795127	UnaryOperationExpression	- mfa . data [ 0 ]		4792640	0					
ANR	4795128	UnaryOperator	-		4792640	0					
ANR	4795129	ArrayIndexing	mfa . data [ 0 ]		4792640	1					
ANR	4795130	MemberAccess	mfa . data		4792640	0					
ANR	4795131	Identifier	mfa		4792640	0					
ANR	4795132	Identifier	data		4792640	1					
ANR	4795133	PrimaryExpression	0		4792640	1					
ANR	4795134	MultiplicativeExpression	udev -> HWResolution [ 0 ] / 72.0		4792640	1		/			
ANR	4795135	ArrayIndexing	udev -> HWResolution [ 0 ]		4792640	0					
ANR	4795136	PtrMemberAccess	udev -> HWResolution		4792640	0					
ANR	4795137	Identifier	udev		4792640	0					
ANR	4795138	Identifier	HWResolution		4792640	1					
ANR	4795139	PrimaryExpression	0		4792640	1					
ANR	4795140	PrimaryExpression	72.0		4792640	1					
ANR	4795141	ExpressionStatement	udev -> Margins [ 1 ] = - mfa . data [ 3 ] * udev -> HWResolution [ 1 ] / 72.0	2064:9:83488:83550	4792640	1	True				
ANR	4795142	AssignmentExpression	udev -> Margins [ 1 ] = - mfa . data [ 3 ] * udev -> HWResolution [ 1 ] / 72.0		4792640	0		=			
ANR	4795143	ArrayIndexing	udev -> Margins [ 1 ]		4792640	0					
ANR	4795144	PtrMemberAccess	udev -> Margins		4792640	0					
ANR	4795145	Identifier	udev		4792640	0					
ANR	4795146	Identifier	Margins		4792640	1					
ANR	4795147	PrimaryExpression	1		4792640	1					
ANR	4795148	MultiplicativeExpression	- mfa . data [ 3 ] * udev -> HWResolution [ 1 ] / 72.0		4792640	1		*			
ANR	4795149	UnaryOperationExpression	- mfa . data [ 3 ]		4792640	0					
ANR	4795150	UnaryOperator	-		4792640	0					
ANR	4795151	ArrayIndexing	mfa . data [ 3 ]		4792640	1					
ANR	4795152	MemberAccess	mfa . data		4792640	0					
ANR	4795153	Identifier	mfa		4792640	0					
ANR	4795154	Identifier	data		4792640	1					
ANR	4795155	PrimaryExpression	3		4792640	1					
ANR	4795156	MultiplicativeExpression	udev -> HWResolution [ 1 ] / 72.0		4792640	1		/			
ANR	4795157	ArrayIndexing	udev -> HWResolution [ 1 ]		4792640	0					
ANR	4795158	PtrMemberAccess	udev -> HWResolution		4792640	0					
ANR	4795159	Identifier	udev		4792640	0					
ANR	4795160	Identifier	HWResolution		4792640	1					
ANR	4795161	PrimaryExpression	1		4792640	1					
ANR	4795162	PrimaryExpression	72.0		4792640	1					
ANR	4795163	ExpressionStatement	"code = gdev_prn_put_params ( ( gx_device * ) udev , plist )"	2069:3:83676:83727	4792640	82	True				
ANR	4795164	AssignmentExpression	"code = gdev_prn_put_params ( ( gx_device * ) udev , plist )"		4792640	0		=			
ANR	4795165	Identifier	code		4792640	0					
ANR	4795166	CallExpression	"gdev_prn_put_params ( ( gx_device * ) udev , plist )"		4792640	1					
ANR	4795167	Callee	gdev_prn_put_params		4792640	0					
ANR	4795168	Identifier	gdev_prn_put_params		4792640	0					
ANR	4795169	ArgumentList	( gx_device * ) udev		4792640	1					
ANR	4795170	Argument	( gx_device * ) udev		4792640	0					
ANR	4795171	CastExpression	( gx_device * ) udev		4792640	0					
ANR	4795172	CastTarget	gx_device *		4792640	0					
ANR	4795173	Identifier	udev		4792640	1					
ANR	4795174	Argument	plist		4792640	1					
ANR	4795175	Identifier	plist		4792640	0					
ANR	4795176	IfStatement	if ( 0 > code )		4792640	83					
ANR	4795177	Condition	0 > code	2070:6:83735:83742	4792640	0	True				
ANR	4795178	RelationalExpression	0 > code		4792640	0		>			
ANR	4795179	PrimaryExpression	0		4792640	0					
ANR	4795180	Identifier	code		4792640	1					
ANR	4795181	ExpressionStatement	error = code	2070:16:83745:83757	4792640	1	True				
ANR	4795182	AssignmentExpression	error = code		4792640	0		=			
ANR	4795183	Identifier	error		4792640	0					
ANR	4795184	Identifier	code		4792640	1					
ANR	4795185	IfStatement	if ( udev -> upd && ( ( udev -> width != udev -> upd -> pdwidth ) || ( udev -> height != udev -> upd -> pdheight ) ) )		4792640	84					
ANR	4795186	Condition	udev -> upd && ( ( udev -> width != udev -> upd -> pdwidth ) || ( udev -> height != udev -> upd -> pdheight ) )	2081:7:84090:84246	4792640	0	True				
ANR	4795187	AndExpression	udev -> upd && ( ( udev -> width != udev -> upd -> pdwidth ) || ( udev -> height != udev -> upd -> pdheight ) )		4792640	0		&&			
ANR	4795188	PtrMemberAccess	udev -> upd		4792640	0					
ANR	4795189	Identifier	udev		4792640	0					
ANR	4795190	Identifier	upd		4792640	1					
ANR	4795191	OrExpression	( udev -> width != udev -> upd -> pdwidth ) || ( udev -> height != udev -> upd -> pdheight )		4792640	1		||			
ANR	4795192	EqualityExpression	udev -> width != udev -> upd -> pdwidth		4792640	0		!=			
ANR	4795193	PtrMemberAccess	udev -> width		4792640	0					
ANR	4795194	Identifier	udev		4792640	0					
ANR	4795195	Identifier	width		4792640	1					
ANR	4795196	PtrMemberAccess	udev -> upd -> pdwidth		4792640	1					
ANR	4795197	PtrMemberAccess	udev -> upd		4792640	0					
ANR	4795198	Identifier	udev		4792640	0					
ANR	4795199	Identifier	upd		4792640	1					
ANR	4795200	Identifier	pdwidth		4792640	1					
ANR	4795201	EqualityExpression	udev -> height != udev -> upd -> pdheight		4792640	1		!=			
ANR	4795202	PtrMemberAccess	udev -> height		4792640	0					
ANR	4795203	Identifier	udev		4792640	0					
ANR	4795204	Identifier	height		4792640	1					
ANR	4795205	PtrMemberAccess	udev -> upd -> pdheight		4792640	1					
ANR	4795206	PtrMemberAccess	udev -> upd		4792640	0					
ANR	4795207	Identifier	udev		4792640	0					
ANR	4795208	Identifier	upd		4792640	1					
ANR	4795209	Identifier	pdheight		4792640	1					
ANR	4795210	ExpressionStatement	error |= UPD_PUT_CHANGEDSIZE	2084:8:84268:84296	4792640	1	True				
ANR	4795211	AssignmentExpression	error |= UPD_PUT_CHANGEDSIZE		4792640	0		|=			
ANR	4795212	Identifier	error		4792640	0					
ANR	4795213	Identifier	UPD_PUT_CHANGEDSIZE		4792640	1					
ANR	4795214	IfStatement	if ( 0 < error && udev -> is_open )		4792640	85					
ANR	4795215	Condition	0 < error && udev -> is_open	2086:6:84326:84351	4792640	0	True				
ANR	4795216	AndExpression	0 < error && udev -> is_open		4792640	0		&&			
ANR	4795217	RelationalExpression	0 < error		4792640	0		<			
ANR	4795218	PrimaryExpression	0		4792640	0					
ANR	4795219	Identifier	error		4792640	1					
ANR	4795220	PtrMemberAccess	udev -> is_open		4792640	1					
ANR	4795221	Identifier	udev		4792640	0					
ANR	4795222	Identifier	is_open		4792640	1					
ANR	4795223	CompoundStatement		420:34:16061:16061	4792640	1					
ANR	4795224	ExpressionStatement	code = gs_closedevice ( ( gx_device * ) udev )	2087:6:84362:84402	4792640	0	True				
ANR	4795225	AssignmentExpression	code = gs_closedevice ( ( gx_device * ) udev )		4792640	0		=			
ANR	4795226	Identifier	code		4792640	0					
ANR	4795227	CallExpression	gs_closedevice ( ( gx_device * ) udev )		4792640	1					
ANR	4795228	Callee	gs_closedevice		4792640	0					
ANR	4795229	Identifier	gs_closedevice		4792640	0					
ANR	4795230	ArgumentList	( gx_device * ) udev		4792640	1					
ANR	4795231	Argument	( gx_device * ) udev		4792640	0					
ANR	4795232	CastExpression	( gx_device * ) udev		4792640	0					
ANR	4795233	CastTarget	gx_device *		4792640	0					
ANR	4795234	Identifier	udev		4792640	1					
ANR	4795235	IfStatement	if ( 0 > code )		4792640	1					
ANR	4795236	Condition	0 > code	2088:9:84413:84420	4792640	0	True				
ANR	4795237	RelationalExpression	0 > code		4792640	0		>			
ANR	4795238	PrimaryExpression	0		4792640	0					
ANR	4795239	Identifier	code		4792640	1					
ANR	4795240	ExpressionStatement	error = code	2088:19:84423:84435	4792640	1	True				
ANR	4795241	AssignmentExpression	error = code		4792640	0		=			
ANR	4795242	Identifier	error		4792640	0					
ANR	4795243	Identifier	code		4792640	1					
ANR	4795244	IfStatement	if ( 0 < error )		4792640	86					
ANR	4795245	Condition	0 < error	2091:6:84449:84457	4792640	0	True				
ANR	4795246	RelationalExpression	0 < error		4792640	0		<			
ANR	4795247	PrimaryExpression	0		4792640	0					
ANR	4795248	Identifier	error		4792640	1					
ANR	4795249	CompoundStatement		425:17:16167:16167	4792640	1					
ANR	4795250	IfStatement	if ( ! ( upd = udev -> upd ) )		4792640	0					
ANR	4795251	Condition	! ( upd = udev -> upd )	2093:9:84518:84535	4792640	0	True				
ANR	4795252	UnaryOperationExpression	! ( upd = udev -> upd )		4792640	0					
ANR	4795253	UnaryOperator	!		4792640	0					
ANR	4795254	AssignmentExpression	upd = udev -> upd		4792640	1		=			
ANR	4795255	Identifier	upd		4792640	0					
ANR	4795256	PtrMemberAccess	udev -> upd		4792640	1					
ANR	4795257	Identifier	udev		4792640	0					
ANR	4795258	Identifier	upd		4792640	1					
ANR	4795259	CompoundStatement		427:29:16245:16245	4792640	1					
ANR	4795260	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , udev -> upd , 1 )"	2094:8:84548:84591	4792640	0	True				
ANR	4795261	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , udev -> upd , 1 )"		4792640	0					
ANR	4795262	Callee	UPD_MM_GET_ARRAY		4792640	0					
ANR	4795263	Identifier	UPD_MM_GET_ARRAY		4792640	0					
ANR	4795264	ArgumentList	udev -> memory		4792640	1					
ANR	4795265	Argument	udev -> memory		4792640	0					
ANR	4795266	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795267	Identifier	udev		4792640	0					
ANR	4795268	Identifier	memory		4792640	1					
ANR	4795269	Argument	udev -> upd		4792640	1					
ANR	4795270	PtrMemberAccess	udev -> upd		4792640	0					
ANR	4795271	Identifier	udev		4792640	0					
ANR	4795272	Identifier	upd		4792640	1					
ANR	4795273	Argument	1		4792640	2					
ANR	4795274	PrimaryExpression	1		4792640	0					
ANR	4795275	ExpressionStatement	upd = udev -> upd	2095:8:84601:84616	4792640	1	True				
ANR	4795276	AssignmentExpression	upd = udev -> upd		4792640	0		=			
ANR	4795277	Identifier	upd		4792640	0					
ANR	4795278	PtrMemberAccess	udev -> upd		4792640	1					
ANR	4795279	Identifier	udev		4792640	0					
ANR	4795280	Identifier	upd		4792640	1					
ANR	4795281	ElseStatement	else		4792640	0					
ANR	4795282	CompoundStatement		430:13:16338:16338	4792640	0					
ANR	4795283	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"	2097:8:84641:84725	4792640	0	True				
ANR	4795284	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"		4792640	0					
ANR	4795285	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795286	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795287	ArgumentList	udev -> memory		4792640	1					
ANR	4795288	Argument	udev -> memory		4792640	0					
ANR	4795289	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795290	Identifier	udev		4792640	0					
ANR	4795291	Identifier	memory		4792640	1					
ANR	4795292	Argument	upd -> choice		4792640	1					
ANR	4795293	PtrMemberAccess	upd -> choice		4792640	0					
ANR	4795294	Identifier	upd		4792640	0					
ANR	4795295	Identifier	choice		4792640	1					
ANR	4795296	Argument	countof ( upd_choice )		4792640	2					
ANR	4795297	CallExpression	countof ( upd_choice )		4792640	0					
ANR	4795298	Callee	countof		4792640	0					
ANR	4795299	Identifier	countof		4792640	0					
ANR	4795300	ArgumentList	upd_choice		4792640	1					
ANR	4795301	Argument	upd_choice		4792640	0					
ANR	4795302	Identifier	upd_choice		4792640	0					
ANR	4795303	Argument	UPD_MM_DEL_VALUE		4792640	3					
ANR	4795304	Identifier	UPD_MM_DEL_VALUE		4792640	0					
ANR	4795305	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"	2098:8:84735:84819	4792640	1	True				
ANR	4795306	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"		4792640	0					
ANR	4795307	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795308	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795309	ArgumentList	udev -> memory		4792640	1					
ANR	4795310	Argument	udev -> memory		4792640	0					
ANR	4795311	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795312	Identifier	udev		4792640	0					
ANR	4795313	Identifier	memory		4792640	1					
ANR	4795314	Argument	upd -> ints		4792640	1					
ANR	4795315	PtrMemberAccess	upd -> ints		4792640	0					
ANR	4795316	Identifier	upd		4792640	0					
ANR	4795317	Identifier	ints		4792640	1					
ANR	4795318	Argument	countof ( upd_ints )		4792640	2					
ANR	4795319	CallExpression	countof ( upd_ints )		4792640	0					
ANR	4795320	Callee	countof		4792640	0					
ANR	4795321	Identifier	countof		4792640	0					
ANR	4795322	ArgumentList	upd_ints		4792640	1					
ANR	4795323	Argument	upd_ints		4792640	0					
ANR	4795324	Identifier	upd_ints		4792640	0					
ANR	4795325	Argument	UPD_MM_DEL_VALUE		4792640	3					
ANR	4795326	Identifier	UPD_MM_DEL_VALUE		4792640	0					
ANR	4795327	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"	2099:8:84829:84913	4792640	2	True				
ANR	4795328	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"		4792640	0					
ANR	4795329	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795330	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795331	ArgumentList	udev -> memory		4792640	1					
ANR	4795332	Argument	udev -> memory		4792640	0					
ANR	4795333	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795334	Identifier	udev		4792640	0					
ANR	4795335	Identifier	memory		4792640	1					
ANR	4795336	Argument	upd -> int_a		4792640	1					
ANR	4795337	PtrMemberAccess	upd -> int_a		4792640	0					
ANR	4795338	Identifier	upd		4792640	0					
ANR	4795339	Identifier	int_a		4792640	1					
ANR	4795340	Argument	countof ( upd_int_a )		4792640	2					
ANR	4795341	CallExpression	countof ( upd_int_a )		4792640	0					
ANR	4795342	Callee	countof		4792640	0					
ANR	4795343	Identifier	countof		4792640	0					
ANR	4795344	ArgumentList	upd_int_a		4792640	1					
ANR	4795345	Argument	upd_int_a		4792640	0					
ANR	4795346	Identifier	upd_int_a		4792640	0					
ANR	4795347	Argument	UPD_MM_DEL_PARAM		4792640	3					
ANR	4795348	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4795349	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"	2100:8:84923:85007	4792640	3	True				
ANR	4795350	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"		4792640	0					
ANR	4795351	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795352	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795353	ArgumentList	udev -> memory		4792640	1					
ANR	4795354	Argument	udev -> memory		4792640	0					
ANR	4795355	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795356	Identifier	udev		4792640	0					
ANR	4795357	Identifier	memory		4792640	1					
ANR	4795358	Argument	upd -> strings		4792640	1					
ANR	4795359	PtrMemberAccess	upd -> strings		4792640	0					
ANR	4795360	Identifier	upd		4792640	0					
ANR	4795361	Identifier	strings		4792640	1					
ANR	4795362	Argument	countof ( upd_strings )		4792640	2					
ANR	4795363	CallExpression	countof ( upd_strings )		4792640	0					
ANR	4795364	Callee	countof		4792640	0					
ANR	4795365	Identifier	countof		4792640	0					
ANR	4795366	ArgumentList	upd_strings		4792640	1					
ANR	4795367	Argument	upd_strings		4792640	0					
ANR	4795368	Identifier	upd_strings		4792640	0					
ANR	4795369	Argument	UPD_MM_DEL_PARAM		4792640	3					
ANR	4795370	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4795371	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"	2101:8:85017:85102	4792640	4	True				
ANR	4795372	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"		4792640	0					
ANR	4795373	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795374	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795375	ArgumentList	udev -> memory		4792640	1					
ANR	4795376	Argument	udev -> memory		4792640	0					
ANR	4795377	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795378	Identifier	udev		4792640	0					
ANR	4795379	Identifier	memory		4792640	1					
ANR	4795380	Argument	upd -> string_a		4792640	1					
ANR	4795381	PtrMemberAccess	upd -> string_a		4792640	0					
ANR	4795382	Identifier	upd		4792640	0					
ANR	4795383	Identifier	string_a		4792640	1					
ANR	4795384	Argument	countof ( upd_string_a )		4792640	2					
ANR	4795385	CallExpression	countof ( upd_string_a )		4792640	0					
ANR	4795386	Callee	countof		4792640	0					
ANR	4795387	Identifier	countof		4792640	0					
ANR	4795388	ArgumentList	upd_string_a		4792640	1					
ANR	4795389	Argument	upd_string_a		4792640	0					
ANR	4795390	Identifier	upd_string_a		4792640	0					
ANR	4795391	Argument	UPD_MM_DEL_APARAM		4792640	3					
ANR	4795392	Identifier	UPD_MM_DEL_APARAM		4792640	0					
ANR	4795393	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"	2102:8:85112:85196	4792640	5	True				
ANR	4795394	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , upd -> float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"		4792640	0					
ANR	4795395	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795396	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795397	ArgumentList	udev -> memory		4792640	1					
ANR	4795398	Argument	udev -> memory		4792640	0					
ANR	4795399	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795400	Identifier	udev		4792640	0					
ANR	4795401	Identifier	memory		4792640	1					
ANR	4795402	Argument	upd -> float_a		4792640	1					
ANR	4795403	PtrMemberAccess	upd -> float_a		4792640	0					
ANR	4795404	Identifier	upd		4792640	0					
ANR	4795405	Identifier	float_a		4792640	1					
ANR	4795406	Argument	countof ( upd_float_a )		4792640	2					
ANR	4795407	CallExpression	countof ( upd_float_a )		4792640	0					
ANR	4795408	Callee	countof		4792640	0					
ANR	4795409	Identifier	countof		4792640	0					
ANR	4795410	ArgumentList	upd_float_a		4792640	1					
ANR	4795411	Argument	upd_float_a		4792640	0					
ANR	4795412	Identifier	upd_float_a		4792640	0					
ANR	4795413	Argument	UPD_MM_DEL_PARAM		4792640	3					
ANR	4795414	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4795415	ExpressionStatement	upd -> choice = choice	2105:6:85213:85235	4792640	1	True				
ANR	4795416	AssignmentExpression	upd -> choice = choice		4792640	0		=			
ANR	4795417	PtrMemberAccess	upd -> choice		4792640	0					
ANR	4795418	Identifier	upd		4792640	0					
ANR	4795419	Identifier	choice		4792640	1					
ANR	4795420	Identifier	choice		4792640	1					
ANR	4795421	ExpressionStatement	upd -> flags = flags	2106:6:85243:85264	4792640	2	True				
ANR	4795422	AssignmentExpression	upd -> flags = flags		4792640	0		=			
ANR	4795423	PtrMemberAccess	upd -> flags		4792640	0					
ANR	4795424	Identifier	upd		4792640	0					
ANR	4795425	Identifier	flags		4792640	1					
ANR	4795426	Identifier	flags		4792640	1					
ANR	4795427	ExpressionStatement	upd -> ints = ints	2107:6:85272:85292	4792640	3	True				
ANR	4795428	AssignmentExpression	upd -> ints = ints		4792640	0		=			
ANR	4795429	PtrMemberAccess	upd -> ints		4792640	0					
ANR	4795430	Identifier	upd		4792640	0					
ANR	4795431	Identifier	ints		4792640	1					
ANR	4795432	Identifier	ints		4792640	1					
ANR	4795433	ExpressionStatement	upd -> int_a = int_a	2108:6:85300:85321	4792640	4	True				
ANR	4795434	AssignmentExpression	upd -> int_a = int_a		4792640	0		=			
ANR	4795435	PtrMemberAccess	upd -> int_a		4792640	0					
ANR	4795436	Identifier	upd		4792640	0					
ANR	4795437	Identifier	int_a		4792640	1					
ANR	4795438	Identifier	int_a		4792640	1					
ANR	4795439	ExpressionStatement	upd -> strings = strings	2109:6:85329:85352	4792640	5	True				
ANR	4795440	AssignmentExpression	upd -> strings = strings		4792640	0		=			
ANR	4795441	PtrMemberAccess	upd -> strings		4792640	0					
ANR	4795442	Identifier	upd		4792640	0					
ANR	4795443	Identifier	strings		4792640	1					
ANR	4795444	Identifier	strings		4792640	1					
ANR	4795445	ExpressionStatement	upd -> string_a = string_a	2110:6:85360:85384	4792640	6	True				
ANR	4795446	AssignmentExpression	upd -> string_a = string_a		4792640	0		=			
ANR	4795447	PtrMemberAccess	upd -> string_a		4792640	0					
ANR	4795448	Identifier	upd		4792640	0					
ANR	4795449	Identifier	string_a		4792640	1					
ANR	4795450	Identifier	string_a		4792640	1					
ANR	4795451	ExpressionStatement	upd -> float_a = float_a	2111:6:85392:85415	4792640	7	True				
ANR	4795452	AssignmentExpression	upd -> float_a = float_a		4792640	0		=			
ANR	4795453	PtrMemberAccess	upd -> float_a		4792640	0					
ANR	4795454	Identifier	upd		4792640	0					
ANR	4795455	Identifier	float_a		4792640	1					
ANR	4795456	Identifier	float_a		4792640	1					
ANR	4795457	ExpressionStatement	upd -> memory = udev -> memory	2112:6:85423:85451	4792640	8	True				
ANR	4795458	AssignmentExpression	upd -> memory = udev -> memory		4792640	0		=			
ANR	4795459	PtrMemberAccess	upd -> memory		4792640	0					
ANR	4795460	Identifier	upd		4792640	0					
ANR	4795461	Identifier	memory		4792640	1					
ANR	4795462	PtrMemberAccess	udev -> memory		4792640	1					
ANR	4795463	Identifier	udev		4792640	0					
ANR	4795464	Identifier	memory		4792640	1					
ANR	4795465	IfStatement	if ( 0 < error )		4792640	9					
ANR	4795466	Condition	0 < error	2114:9:85463:85471	4792640	0	True				
ANR	4795467	RelationalExpression	0 < error		4792640	0		<			
ANR	4795468	PrimaryExpression	0		4792640	0					
ANR	4795469	Identifier	error		4792640	1					
ANR	4795470	ExpressionStatement	error = 0	2114:20:85474:85483	4792640	1	True				
ANR	4795471	AssignmentExpression	error = 0		4792640	0		=			
ANR	4795472	Identifier	error		4792640	0					
ANR	4795473	PrimaryExpression	0		4792640	1					
ANR	4795474	ElseStatement	else		4792640	0					
ANR	4795475	CompoundStatement		450:10:17203:17203	4792640	0					
ANR	4795476	ExpressionStatement	udev -> Margins [ 0 ] = Margins [ 0 ]	2118:18:85517:85558	4792640	0	True				
ANR	4795477	AssignmentExpression	udev -> Margins [ 0 ] = Margins [ 0 ]		4792640	0		=			
ANR	4795478	ArrayIndexing	udev -> Margins [ 0 ]		4792640	0					
ANR	4795479	PtrMemberAccess	udev -> Margins		4792640	0					
ANR	4795480	Identifier	udev		4792640	0					
ANR	4795481	Identifier	Margins		4792640	1					
ANR	4795482	PrimaryExpression	0		4792640	1					
ANR	4795483	ArrayIndexing	Margins [ 0 ]		4792640	1					
ANR	4795484	Identifier	Margins		4792640	0					
ANR	4795485	PrimaryExpression	0		4792640	1					
ANR	4795486	ExpressionStatement	udev -> Margins [ 1 ] = Margins [ 1 ]	2119:18:85578:85619	4792640	1	True				
ANR	4795487	AssignmentExpression	udev -> Margins [ 1 ] = Margins [ 1 ]		4792640	0		=			
ANR	4795488	ArrayIndexing	udev -> Margins [ 1 ]		4792640	0					
ANR	4795489	PtrMemberAccess	udev -> Margins		4792640	0					
ANR	4795490	Identifier	udev		4792640	0					
ANR	4795491	Identifier	Margins		4792640	1					
ANR	4795492	PrimaryExpression	1		4792640	1					
ANR	4795493	ArrayIndexing	Margins [ 1 ]		4792640	1					
ANR	4795494	Identifier	Margins		4792640	0					
ANR	4795495	PrimaryExpression	1		4792640	1					
ANR	4795496	ExpressionStatement	udev -> color_info = color_info	2121:6:85628:85657	4792640	2	True				
ANR	4795497	AssignmentExpression	udev -> color_info = color_info		4792640	0		=			
ANR	4795498	PtrMemberAccess	udev -> color_info		4792640	0					
ANR	4795499	Identifier	udev		4792640	0					
ANR	4795500	Identifier	color_info		4792640	1					
ANR	4795501	Identifier	color_info		4792640	1					
ANR	4795502	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"	2122:6:85665:85744	4792640	3	True				
ANR	4795503	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , choice , countof ( upd_choice ) , UPD_MM_DEL_VALUE )"		4792640	0					
ANR	4795504	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795505	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795506	ArgumentList	udev -> memory		4792640	1					
ANR	4795507	Argument	udev -> memory		4792640	0					
ANR	4795508	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795509	Identifier	udev		4792640	0					
ANR	4795510	Identifier	memory		4792640	1					
ANR	4795511	Argument	choice		4792640	1					
ANR	4795512	Identifier	choice		4792640	0					
ANR	4795513	Argument	countof ( upd_choice )		4792640	2					
ANR	4795514	CallExpression	countof ( upd_choice )		4792640	0					
ANR	4795515	Callee	countof		4792640	0					
ANR	4795516	Identifier	countof		4792640	0					
ANR	4795517	ArgumentList	upd_choice		4792640	1					
ANR	4795518	Argument	upd_choice		4792640	0					
ANR	4795519	Identifier	upd_choice		4792640	0					
ANR	4795520	Argument	UPD_MM_DEL_VALUE		4792640	3					
ANR	4795521	Identifier	UPD_MM_DEL_VALUE		4792640	0					
ANR	4795522	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"	2123:6:85752:85831	4792640	4	True				
ANR	4795523	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , ints , countof ( upd_ints ) , UPD_MM_DEL_VALUE )"		4792640	0					
ANR	4795524	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795525	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795526	ArgumentList	udev -> memory		4792640	1					
ANR	4795527	Argument	udev -> memory		4792640	0					
ANR	4795528	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795529	Identifier	udev		4792640	0					
ANR	4795530	Identifier	memory		4792640	1					
ANR	4795531	Argument	ints		4792640	1					
ANR	4795532	Identifier	ints		4792640	0					
ANR	4795533	Argument	countof ( upd_ints )		4792640	2					
ANR	4795534	CallExpression	countof ( upd_ints )		4792640	0					
ANR	4795535	Callee	countof		4792640	0					
ANR	4795536	Identifier	countof		4792640	0					
ANR	4795537	ArgumentList	upd_ints		4792640	1					
ANR	4795538	Argument	upd_ints		4792640	0					
ANR	4795539	Identifier	upd_ints		4792640	0					
ANR	4795540	Argument	UPD_MM_DEL_VALUE		4792640	3					
ANR	4795541	Identifier	UPD_MM_DEL_VALUE		4792640	0					
ANR	4795542	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"	2124:6:85839:85918	4792640	5	True				
ANR	4795543	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , int_a , countof ( upd_int_a ) , UPD_MM_DEL_PARAM )"		4792640	0					
ANR	4795544	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795545	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795546	ArgumentList	udev -> memory		4792640	1					
ANR	4795547	Argument	udev -> memory		4792640	0					
ANR	4795548	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795549	Identifier	udev		4792640	0					
ANR	4795550	Identifier	memory		4792640	1					
ANR	4795551	Argument	int_a		4792640	1					
ANR	4795552	Identifier	int_a		4792640	0					
ANR	4795553	Argument	countof ( upd_int_a )		4792640	2					
ANR	4795554	CallExpression	countof ( upd_int_a )		4792640	0					
ANR	4795555	Callee	countof		4792640	0					
ANR	4795556	Identifier	countof		4792640	0					
ANR	4795557	ArgumentList	upd_int_a		4792640	1					
ANR	4795558	Argument	upd_int_a		4792640	0					
ANR	4795559	Identifier	upd_int_a		4792640	0					
ANR	4795560	Argument	UPD_MM_DEL_PARAM		4792640	3					
ANR	4795561	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4795562	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"	2125:6:85926:86005	4792640	6	True				
ANR	4795563	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , strings , countof ( upd_strings ) , UPD_MM_DEL_PARAM )"		4792640	0					
ANR	4795564	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795565	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795566	ArgumentList	udev -> memory		4792640	1					
ANR	4795567	Argument	udev -> memory		4792640	0					
ANR	4795568	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795569	Identifier	udev		4792640	0					
ANR	4795570	Identifier	memory		4792640	1					
ANR	4795571	Argument	strings		4792640	1					
ANR	4795572	Identifier	strings		4792640	0					
ANR	4795573	Argument	countof ( upd_strings )		4792640	2					
ANR	4795574	CallExpression	countof ( upd_strings )		4792640	0					
ANR	4795575	Callee	countof		4792640	0					
ANR	4795576	Identifier	countof		4792640	0					
ANR	4795577	ArgumentList	upd_strings		4792640	1					
ANR	4795578	Argument	upd_strings		4792640	0					
ANR	4795579	Identifier	upd_strings		4792640	0					
ANR	4795580	Argument	UPD_MM_DEL_PARAM		4792640	3					
ANR	4795581	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4795582	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"	2126:6:86013:86093	4792640	7	True				
ANR	4795583	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , string_a , countof ( upd_string_a ) , UPD_MM_DEL_APARAM )"		4792640	0					
ANR	4795584	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795585	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795586	ArgumentList	udev -> memory		4792640	1					
ANR	4795587	Argument	udev -> memory		4792640	0					
ANR	4795588	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795589	Identifier	udev		4792640	0					
ANR	4795590	Identifier	memory		4792640	1					
ANR	4795591	Argument	string_a		4792640	1					
ANR	4795592	Identifier	string_a		4792640	0					
ANR	4795593	Argument	countof ( upd_string_a )		4792640	2					
ANR	4795594	CallExpression	countof ( upd_string_a )		4792640	0					
ANR	4795595	Callee	countof		4792640	0					
ANR	4795596	Identifier	countof		4792640	0					
ANR	4795597	ArgumentList	upd_string_a		4792640	1					
ANR	4795598	Argument	upd_string_a		4792640	0					
ANR	4795599	Identifier	upd_string_a		4792640	0					
ANR	4795600	Argument	UPD_MM_DEL_APARAM		4792640	3					
ANR	4795601	Identifier	UPD_MM_DEL_APARAM		4792640	0					
ANR	4795602	ExpressionStatement	"UPD_MM_DEL_ARRAY ( udev -> memory , float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"	2127:6:86101:86180	4792640	8	True				
ANR	4795603	CallExpression	"UPD_MM_DEL_ARRAY ( udev -> memory , float_a , countof ( upd_float_a ) , UPD_MM_DEL_PARAM )"		4792640	0					
ANR	4795604	Callee	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795605	Identifier	UPD_MM_DEL_ARRAY		4792640	0					
ANR	4795606	ArgumentList	udev -> memory		4792640	1					
ANR	4795607	Argument	udev -> memory		4792640	0					
ANR	4795608	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795609	Identifier	udev		4792640	0					
ANR	4795610	Identifier	memory		4792640	1					
ANR	4795611	Argument	float_a		4792640	1					
ANR	4795612	Identifier	float_a		4792640	0					
ANR	4795613	Argument	countof ( upd_float_a )		4792640	2					
ANR	4795614	CallExpression	countof ( upd_float_a )		4792640	0					
ANR	4795615	Callee	countof		4792640	0					
ANR	4795616	Identifier	countof		4792640	0					
ANR	4795617	ArgumentList	upd_float_a		4792640	1					
ANR	4795618	Argument	upd_float_a		4792640	0					
ANR	4795619	Identifier	upd_float_a		4792640	0					
ANR	4795620	Argument	UPD_MM_DEL_PARAM		4792640	3					
ANR	4795621	Identifier	UPD_MM_DEL_PARAM		4792640	0					
ANR	4795622	ExpressionStatement	upd_procs_map ( udev )	2135:3:86251:86270	4792640	87	True				
ANR	4795623	CallExpression	upd_procs_map ( udev )		4792640	0					
ANR	4795624	Callee	upd_procs_map		4792640	0					
ANR	4795625	Identifier	upd_procs_map		4792640	0					
ANR	4795626	ArgumentList	udev		4792640	1					
ANR	4795627	Argument	udev		4792640	0					
ANR	4795628	Identifier	udev		4792640	0					
ANR	4795629	ExpressionStatement	"errprintf ( udev -> memory , ""RETURN: %d = upd_put_params(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) plist )"	2138:6:86313:86427	4792640	88	True				
ANR	4795630	CallExpression	"errprintf ( udev -> memory , ""RETURN: %d = upd_put_params(0x%05lx,0x%05lx)\\n"" , error , ( long ) udev , ( long ) plist )"		4792640	0					
ANR	4795631	Callee	errprintf		4792640	0					
ANR	4795632	Identifier	errprintf		4792640	0					
ANR	4795633	ArgumentList	udev -> memory		4792640	1					
ANR	4795634	Argument	udev -> memory		4792640	0					
ANR	4795635	PtrMemberAccess	udev -> memory		4792640	0					
ANR	4795636	Identifier	udev		4792640	0					
ANR	4795637	Identifier	memory		4792640	1					
ANR	4795638	Argument	"""RETURN: %d = upd_put_params(0x%05lx,0x%05lx)\\n"""		4792640	1					
ANR	4795639	PrimaryExpression	"""RETURN: %d = upd_put_params(0x%05lx,0x%05lx)\\n"""		4792640	0					
ANR	4795640	Argument	error		4792640	2					
ANR	4795641	Identifier	error		4792640	0					
ANR	4795642	Argument	( long ) udev		4792640	3					
ANR	4795643	CastExpression	( long ) udev		4792640	0					
ANR	4795644	CastTarget	long		4792640	0					
ANR	4795645	Identifier	udev		4792640	1					
ANR	4795646	Argument	( long ) plist		4792640	4					
ANR	4795647	CastExpression	( long ) plist		4792640	0					
ANR	4795648	CastTarget	long		4792640	0					
ANR	4795649	Identifier	plist		4792640	1					
ANR	4795650	ReturnStatement	return error ;	2142:3:86440:86452	4792640	89	True				
ANR	4795651	Identifier	error		4792640	0					
ANR	4795652	ReturnType	static int		4792640	1					
ANR	4795653	Identifier	upd_put_params		4792640	2					
ANR	4795654	ParameterList	"gx_device * pdev , gs_param_list * plist"		4792640	3					
ANR	4795655	Parameter	gx_device * pdev	1666:15:68253:68267	4792640	0	True				
ANR	4795656	ParameterType	gx_device *		4792640	0					
ANR	4795657	Identifier	pdev		4792640	1					
ANR	4795658	Parameter	gs_param_list * plist	1666:32:68270:68289	4792640	1	True				
ANR	4795659	ParameterType	gs_param_list *		4792640	0					
ANR	4795660	Identifier	plist		4792640	1					
ANR	4795661	CFGEntryNode	ENTRY		4792640		True				
ANR	4795662	CFGExitNode	EXIT		4792640		True				
ANR	4795663	Symbol	& Object		4792640						
ANR	4795664	Symbol	* S_CLOSE		4792640						
ANR	4795665	Symbol	param_read_float_array		4792640						
ANR	4795666	Symbol	* ints		4792640						
ANR	4795667	Symbol	* upd_strings		4792640						
ANR	4795668	Symbol	bit		4792640						
ANR	4795669	Symbol	upd_ints		4792640						
ANR	4795670	Symbol	udev -> color_info . dither_grays		4792640						
ANR	4795671	Symbol	strncmp		4792640						
ANR	4795672	Symbol	* udev		4792640						
ANR	4795673	Symbol	* * udev -> upd		4792640						
ANR	4795674	Symbol	* IA_COMPSHIFT		4792640						
ANR	4795675	Symbol	* * int_a		4792640						
ANR	4795676	Symbol	udev -> height		4792640						
ANR	4795677	Symbol	UPD_MM_DEL_APARAM		4792640						
ANR	4795678	Symbol	* * upd_choice		4792640						
ANR	4795679	Symbol	fname		4792640						
ANR	4795680	Symbol	upd -> memory		4792640						
ANR	4795681	Symbol	* upd_flags		4792640						
ANR	4795682	Symbol	udev -> upd -> strings		4792640						
ANR	4795683	Symbol	upd_cast		4792640						
ANR	4795684	Symbol	UPD_MM_CPY_APARAM		4792640						
ANR	4795685	Symbol	ip		4792640						
ANR	4795686	Symbol	upd		4792640						
ANR	4795687	Symbol	param_read_bool		4792640						
ANR	4795688	Symbol	* upd_string_a		4792640						
ANR	4795689	Symbol	param_read_string		4792640						
ANR	4795690	Symbol	value . data		4792640						
ANR	4795691	Symbol	* * udev		4792640						
ANR	4795692	Symbol	countof		4792640						
ANR	4795693	Symbol	UPD_PUT_INT_A		4792640						
ANR	4795694	Symbol	* IA_COMPBITS		4792640						
ANR	4795695	Symbol	UPD_MM_CPY_VALUE		4792640						
ANR	4795696	Symbol	ncomp		4792640						
ANR	4795697	Symbol	flag		4792640						
ANR	4795698	Symbol	UPD_PUT_STRING_A		4792640						
ANR	4795699	Symbol	flags		4792640						
ANR	4795700	Symbol	upd -> strings		4792640						
ANR	4795701	Symbol	nbits		4792640						
ANR	4795702	Symbol	string_a		4792640						
ANR	4795703	Symbol	int_a [ IA_COMPBITS ] . data		4792640						
ANR	4795704	Symbol	upd -> flags		4792640						
ANR	4795705	Symbol	color_info . num_components		4792640						
ANR	4795706	Symbol	plist		4792640						
ANR	4795707	Symbol	* upd_choice		4792640						
ANR	4795708	Symbol	param_read_int		4792640						
ANR	4795709	Symbol	* upd		4792640						
ANR	4795710	Symbol	strings		4792640						
ANR	4795711	Symbol	upd_flags		4792640						
ANR	4795712	Symbol	ints		4792640						
ANR	4795713	Symbol	upd_string_a		4792640						
ANR	4795714	Symbol	Margins		4792640						
ANR	4795715	Symbol	* * * udev		4792640						
ANR	4795716	Symbol	* udev -> upd		4792640						
ANR	4795717	Symbol	udev -> upd -> flags		4792640						
ANR	4795718	Symbol	* upd -> strings		4792640						
ANR	4795719	Symbol	udev -> Margins		4792640						
ANR	4795720	Symbol	int_a [ IA_COMPSHIFT ] . size		4792640						
ANR	4795721	Symbol	* int_a [ IA_COMPSHIFT ] . data		4792640						
ANR	4795722	Symbol	upd -> strings [ S_CLOSE ] . data		4792640						
ANR	4795723	Symbol	UPD_MM_CPY_PARAM		4792640						
ANR	4795724	Symbol	i		4792640						
ANR	4795725	Symbol	j		4792640						
ANR	4795726	Symbol	udev -> upd -> pdwidth		4792640						
ANR	4795727	Symbol	upd_float_a		4792640						
ANR	4795728	Symbol	IA_COLOR_INFO		4792640						
ANR	4795729	Symbol	gdev_prn_put_params		4792640						
ANR	4795730	Symbol	UPD_MM_DEL_PARAM		4792640						
ANR	4795731	Symbol	float_a		4792640						
ANR	4795732	Symbol	* string_a		4792640						
ANR	4795733	Symbol	~B_OPEN		4792640						
ANR	4795734	Symbol	udev -> upd -> pdheight		4792640						
ANR	4795735	Symbol	fname . data		4792640						
ANR	4795736	Symbol	S_CLOSE		4792640						
ANR	4795737	Symbol	choice		4792640						
ANR	4795738	Symbol	* * upd		4792640						
ANR	4795739	Symbol	* udev -> upd -> strings		4792640						
ANR	4795740	Symbol	udev -> color_info . dither_colors		4792640						
ANR	4795741	Symbol	* upd_int_a		4792640						
ANR	4795742	Symbol	udev -> file		4792640						
ANR	4795743	Symbol	* mfa . data		4792640						
ANR	4795744	Symbol	mfa . data		4792640						
ANR	4795745	Symbol	UPD_PUT_CHANGEDSIZE		4792640						
ANR	4795746	Symbol	udev -> upd -> strings [ S_CLOSE ] . size		4792640						
ANR	4795747	Symbol	int_a [ IA_COMPBITS ] . size		4792640						
ANR	4795748	Symbol	Name		4792640						
ANR	4795749	Symbol	pdev		4792640						
ANR	4795750	Symbol	strlen		4792640						
ANR	4795751	Symbol	param_read_name		4792640						
ANR	4795752	Symbol	* mfa		4792640						
ANR	4795753	Symbol	upd -> int_a		4792640						
ANR	4795754	Symbol	upd -> strings [ S_CLOSE ] . size		4792640						
ANR	4795755	Symbol	udev -> color_info . max_gray		4792640						
ANR	4795756	Symbol	IA_COMPSHIFT		4792640						
ANR	4795757	Symbol	UPD_CMAP_MAX		4792640						
ANR	4795758	Symbol	value . size		4792640						
ANR	4795759	Symbol	udev -> is_open		4792640						
ANR	4795760	Symbol	* * i		4792640						
ANR	4795761	Symbol	NULL		4792640						
ANR	4795762	Symbol	upd_strings		4792640						
ANR	4795763	Symbol	udev -> color_info . max_color		4792640						
ANR	4795764	Symbol	UPD_MM_DEL_VALUE		4792640						
ANR	4795765	Symbol	UPD_PUT_FLOAT_A		4792640						
ANR	4795766	Symbol	int_a [ IA_COLOR_INFO ] . data		4792640						
ANR	4795767	Symbol	upd_int_a		4792640						
ANR	4795768	Symbol	* ip2		4792640						
ANR	4795769	Symbol	* udev -> Margins		4792640						
ANR	4795770	Symbol	udev -> color_info . depth		4792640						
ANR	4795771	Symbol	* IA_COLOR_INFO		4792640						
ANR	4795772	Symbol	udev -> width		4792640						
ANR	4795773	Symbol	param_read_null		4792640						
ANR	4795774	Symbol	UPD_PUT_FLAGS		4792640						
ANR	4795775	Symbol	upd_choice		4792640						
ANR	4795776	Symbol	Mem		4792640						
ANR	4795777	Symbol	udev		4792640						
ANR	4795778	Symbol	* udev -> HWResolution		4792640						
ANR	4795779	Symbol	true		4792640						
ANR	4795780	Symbol	UPD_PUT_STRINGS		4792640						
ANR	4795781	Symbol	* strings		4792640						
ANR	4795782	Symbol	upd -> float_a		4792640						
ANR	4795783	Symbol	upd -> ints		4792640						
ANR	4795784	Symbol	* upd_ints		4792640						
ANR	4795785	Symbol	C_MAPPER		4792640						
ANR	4795786	Symbol	* choice		4792640						
ANR	4795787	Symbol	code		4792640						
ANR	4795788	Symbol	* upd_float_a		4792640						
ANR	4795789	Symbol	* int_a		4792640						
ANR	4795790	Symbol	& mfa		4792640						
ANR	4795791	Symbol	error		4792640						
ANR	4795792	Symbol	udev -> fname		4792640						
ANR	4795793	Symbol	* ip		4792640						
ANR	4795794	Symbol	* * IA_COMPSHIFT		4792640						
ANR	4795795	Symbol	udev -> color_info . num_components		4792640						
ANR	4795796	Symbol	color_info		4792640						
ANR	4795797	Symbol	udev -> upd		4792640						
ANR	4795798	Symbol	param_read_string_array		4792640						
ANR	4795799	Symbol	int_a [ IA_COMPSHIFT ] . data		4792640						
ANR	4795800	Symbol	udev -> color_info		4792640						
ANR	4795801	Symbol	B_OPEN		4792640						
ANR	4795802	Symbol	fname . size		4792640						
ANR	4795803	Symbol	value		4792640						
ANR	4795804	Symbol	udev -> memory		4792640						
ANR	4795805	Symbol	* C_MAPPER		4792640						
ANR	4795806	Symbol	* * IA_COMPBITS		4792640						
ANR	4795807	Symbol	* int_a [ IA_COMPBITS ] . data		4792640						
ANR	4795808	Symbol	false		4792640						
ANR	4795809	Symbol	mfa		4792640						
ANR	4795810	Symbol	int_a		4792640						
ANR	4795811	Symbol	upd -> choice		4792640						
ANR	4795812	Symbol	ip2		4792640						
ANR	4795813	Symbol	udev -> HWResolution		4792640						
ANR	4795814	Symbol	& fname		4792640						
ANR	4795815	Symbol	upd -> string_a		4792640						
ANR	4795816	Symbol	param_read_int_array		4792640						
ANR	4795817	Symbol	mfa . size		4792640						
ANR	4795818	Symbol	int_a [ IA_COLOR_INFO ] . size		4792640						
ANR	4795819	Symbol	* Margins		4792640						
ANR	4795820	Symbol	* i		4792640						
ANR	4795821	Symbol	UPD_PUT_CHOICE		4792640						
ANR	4795822	Symbol	* j		4792640						
ANR	4795823	Symbol	UPD_PUT_INTS		4792640						
ANR	4795824	Symbol	IA_COMPBITS		4792640						
ANR	4795825	Symbol	~bit		4792640						
ANR	4795826	Symbol	* float_a		4792640						
ANR	4795827	Symbol	Param_read		4792640						
ANR	4795828	Symbol	gs_closedevice		4792640						
ANR	4795829	Function	upd_cmyk_icolor	2157:0:87066:88860							
ANR	4795830	FunctionDef	"upd_cmyk_icolor (gx_device * pdev , const gx_color_value cv [ ])"		4795829	0					
ANR	4795831	CompoundStatement		2159:0:87148:88860	4795829	0					
ANR	4795832	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2160:3:87153:87200	4795829	0	True				
ANR	4795833	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4795829	0					
ANR	4795834	IdentifierDeclType	const upd_p		4795829	0					
ANR	4795835	Identifier	upd		4795829	1					
ANR	4795836	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4795829	2		=			
ANR	4795837	Identifier	upd		4795829	0					
ANR	4795838	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4795829	1					
ANR	4795839	CastExpression	( upd_device * ) pdev		4795829	0					
ANR	4795840	CastTarget	upd_device *		4795829	0					
ANR	4795841	Identifier	pdev		4795829	1					
ANR	4795842	Identifier	upd		4795829	1					
ANR	4795843	IdentifierDeclStatement	gx_color_index rv ;	2161:3:87205:87223	4795829	1	True				
ANR	4795844	IdentifierDecl	rv		4795829	0					
ANR	4795845	IdentifierDeclType	gx_color_index		4795829	0					
ANR	4795846	Identifier	rv		4795829	1					
ANR	4795847	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	2162:3:87228:87253	4795829	2	True				
ANR	4795848	IdentifierDecl	c		4795829	0					
ANR	4795849	IdentifierDeclType	gx_color_value		4795829	0					
ANR	4795850	Identifier	c		4795829	1					
ANR	4795851	IdentifierDecl	m		4795829	1					
ANR	4795852	IdentifierDeclType	gx_color_value		4795829	0					
ANR	4795853	Identifier	m		4795829	1					
ANR	4795854	IdentifierDecl	y		4795829	2					
ANR	4795855	IdentifierDeclType	gx_color_value		4795829	0					
ANR	4795856	Identifier	y		4795829	1					
ANR	4795857	IdentifierDecl	k		4795829	3					
ANR	4795858	IdentifierDeclType	gx_color_value		4795829	0					
ANR	4795859	Identifier	k		4795829	1					
ANR	4795860	ExpressionStatement	c = cv [ 0 ]	2163:3:87258:87267	4795829	3	True				
ANR	4795861	AssignmentExpression	c = cv [ 0 ]		4795829	0		=			
ANR	4795862	Identifier	c		4795829	0					
ANR	4795863	ArrayIndexing	cv [ 0 ]		4795829	1					
ANR	4795864	Identifier	cv		4795829	0					
ANR	4795865	PrimaryExpression	0		4795829	1					
ANR	4795866	ExpressionStatement	m = cv [ 1 ]	2163:14:87269:87278	4795829	4	True				
ANR	4795867	AssignmentExpression	m = cv [ 1 ]		4795829	0		=			
ANR	4795868	Identifier	m		4795829	0					
ANR	4795869	ArrayIndexing	cv [ 1 ]		4795829	1					
ANR	4795870	Identifier	cv		4795829	0					
ANR	4795871	PrimaryExpression	1		4795829	1					
ANR	4795872	ExpressionStatement	y = cv [ 2 ]	2163:25:87280:87289	4795829	5	True				
ANR	4795873	AssignmentExpression	y = cv [ 2 ]		4795829	0		=			
ANR	4795874	Identifier	y		4795829	0					
ANR	4795875	ArrayIndexing	cv [ 2 ]		4795829	1					
ANR	4795876	Identifier	cv		4795829	0					
ANR	4795877	PrimaryExpression	2		4795829	1					
ANR	4795878	ExpressionStatement	k = cv [ 3 ]	2163:36:87291:87300	4795829	6	True				
ANR	4795879	AssignmentExpression	k = cv [ 3 ]		4795829	0		=			
ANR	4795880	Identifier	k		4795829	0					
ANR	4795881	ArrayIndexing	cv [ 3 ]		4795829	1					
ANR	4795882	Identifier	cv		4795829	0					
ANR	4795883	PrimaryExpression	3		4795829	1					
ANR	4795884	IfStatement	if ( ( c == m ) && ( m == y ) )		4795829	7					
ANR	4795885	Condition	( c == m ) && ( m == y )	2173:6:87614:87633	4795829	0	True				
ANR	4795886	AndExpression	( c == m ) && ( m == y )		4795829	0		&&			
ANR	4795887	EqualityExpression	c == m		4795829	0		==			
ANR	4795888	Identifier	c		4795829	0					
ANR	4795889	Identifier	m		4795829	1					
ANR	4795890	EqualityExpression	m == y		4795829	1		==			
ANR	4795891	Identifier	m		4795829	0					
ANR	4795892	Identifier	y		4795829	1					
ANR	4795893	CompoundStatement		15:28:487:487	4795829	1					
ANR	4795894	ExpressionStatement	"rv = upd_truncate ( upd , 0 , ( gx_color_value ) ( c > k ? c : k ) )"	2175:6:87645:87701	4795829	0	True				
ANR	4795895	AssignmentExpression	"rv = upd_truncate ( upd , 0 , ( gx_color_value ) ( c > k ? c : k ) )"		4795829	0		=			
ANR	4795896	Identifier	rv		4795829	0					
ANR	4795897	CallExpression	"upd_truncate ( upd , 0 , ( gx_color_value ) ( c > k ? c : k ) )"		4795829	1					
ANR	4795898	Callee	upd_truncate		4795829	0					
ANR	4795899	Identifier	upd_truncate		4795829	0					
ANR	4795900	ArgumentList	upd		4795829	1					
ANR	4795901	Argument	upd		4795829	0					
ANR	4795902	Identifier	upd		4795829	0					
ANR	4795903	Argument	0		4795829	1					
ANR	4795904	PrimaryExpression	0		4795829	0					
ANR	4795905	Argument	( gx_color_value ) ( c > k ? c : k )		4795829	2					
ANR	4795906	CastExpression	( gx_color_value ) ( c > k ? c : k )		4795829	0					
ANR	4795907	CastTarget	gx_color_value		4795829	0					
ANR	4795908	ConditionalExpression	c > k ? c : k		4795829	1					
ANR	4795909	Condition	c > k		4795829	0					
ANR	4795910	RelationalExpression	c > k		4795829	0		>			
ANR	4795911	Identifier	c		4795829	0					
ANR	4795912	Identifier	k		4795829	1					
ANR	4795913	Identifier	c		4795829	1					
ANR	4795914	Identifier	k		4795829	2					
ANR	4795915	ElseStatement	else		4795829	0					
ANR	4795916	CompoundStatement		19:10:565:565	4795829	0					
ANR	4795917	ExpressionStatement	"rv = upd_truncate ( upd , 0 , k ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"	2179:6:87723:87832	4795829	0	True				
ANR	4795918	AssignmentExpression	"rv = upd_truncate ( upd , 0 , k ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4795829	0		=			
ANR	4795919	Identifier	rv		4795829	0					
ANR	4795920	InclusiveOrExpression	"upd_truncate ( upd , 0 , k ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4795829	1		|			
ANR	4795921	CallExpression	"upd_truncate ( upd , 0 , k )"		4795829	0					
ANR	4795922	Callee	upd_truncate		4795829	0					
ANR	4795923	Identifier	upd_truncate		4795829	0					
ANR	4795924	ArgumentList	upd		4795829	1					
ANR	4795925	Argument	upd		4795829	0					
ANR	4795926	Identifier	upd		4795829	0					
ANR	4795927	Argument	0		4795829	1					
ANR	4795928	PrimaryExpression	0		4795829	0					
ANR	4795929	Argument	k		4795829	2					
ANR	4795930	Identifier	k		4795829	0					
ANR	4795931	InclusiveOrExpression	"upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4795829	1		|			
ANR	4795932	CallExpression	"upd_truncate ( upd , 1 , c )"		4795829	0					
ANR	4795933	Callee	upd_truncate		4795829	0					
ANR	4795934	Identifier	upd_truncate		4795829	0					
ANR	4795935	ArgumentList	upd		4795829	1					
ANR	4795936	Argument	upd		4795829	0					
ANR	4795937	Identifier	upd		4795829	0					
ANR	4795938	Argument	1		4795829	1					
ANR	4795939	PrimaryExpression	1		4795829	0					
ANR	4795940	Argument	c		4795829	2					
ANR	4795941	Identifier	c		4795829	0					
ANR	4795942	InclusiveOrExpression	"upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4795829	1		|			
ANR	4795943	CallExpression	"upd_truncate ( upd , 2 , m )"		4795829	0					
ANR	4795944	Callee	upd_truncate		4795829	0					
ANR	4795945	Identifier	upd_truncate		4795829	0					
ANR	4795946	ArgumentList	upd		4795829	1					
ANR	4795947	Argument	upd		4795829	0					
ANR	4795948	Identifier	upd		4795829	0					
ANR	4795949	Argument	2		4795829	1					
ANR	4795950	PrimaryExpression	2		4795829	0					
ANR	4795951	Argument	m		4795829	2					
ANR	4795952	Identifier	m		4795829	0					
ANR	4795953	CallExpression	"upd_truncate ( upd , 3 , y )"		4795829	1					
ANR	4795954	Callee	upd_truncate		4795829	0					
ANR	4795955	Identifier	upd_truncate		4795829	0					
ANR	4795956	ArgumentList	upd		4795829	1					
ANR	4795957	Argument	upd		4795829	0					
ANR	4795958	Identifier	upd		4795829	0					
ANR	4795959	Argument	3		4795829	1					
ANR	4795960	PrimaryExpression	3		4795829	0					
ANR	4795961	Argument	y		4795829	2					
ANR	4795962	Identifier	y		4795829	0					
ANR	4795963	IfStatement	if ( rv == gx_no_color_index )		4795829	1					
ANR	4795964	Condition	rv == gx_no_color_index	2184:9:87920:87942	4795829	0	True				
ANR	4795965	EqualityExpression	rv == gx_no_color_index		4795829	0		==			
ANR	4795966	Identifier	rv		4795829	0					
ANR	4795967	Identifier	gx_no_color_index		4795829	1					
ANR	4795968	ExpressionStatement	rv ^= 1	2184:34:87945:87952	4795829	1	True				
ANR	4795969	AssignmentExpression	rv ^= 1		4795829	0		^=			
ANR	4795970	Identifier	rv		4795829	0					
ANR	4795971	PrimaryExpression	1		4795829	1					
ANR	4795972	ExpressionStatement	"errprintf ( pdev -> memory , ""cmyk_icolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2188:2:87996:88836	4795829	8	True				
ANR	4795973	CallExpression	"errprintf ( pdev -> memory , ""cmyk_icolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		4795829	0					
ANR	4795974	Callee	errprintf		4795829	0					
ANR	4795975	Identifier	errprintf		4795829	0					
ANR	4795976	ArgumentList	pdev -> memory		4795829	1					
ANR	4795977	Argument	pdev -> memory		4795829	0					
ANR	4795978	PtrMemberAccess	pdev -> memory		4795829	0					
ANR	4795979	Identifier	pdev		4795829	0					
ANR	4795980	Identifier	memory		4795829	1					
ANR	4795981	Argument	"""cmyk_icolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4795829	1					
ANR	4795982	PrimaryExpression	"""cmyk_icolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4795829	0					
ANR	4795983	Argument	255.0 * ( double ) c / ( double ) gx_max_color_value		4795829	2					
ANR	4795984	MultiplicativeExpression	255.0 * ( double ) c / ( double ) gx_max_color_value		4795829	0		*			
ANR	4795985	PrimaryExpression	255.0		4795829	0					
ANR	4795986	MultiplicativeExpression	( double ) c / ( double ) gx_max_color_value		4795829	1		/			
ANR	4795987	CastExpression	( double ) c		4795829	0					
ANR	4795988	CastTarget	double		4795829	0					
ANR	4795989	Identifier	c		4795829	1					
ANR	4795990	CastExpression	( double ) gx_max_color_value		4795829	1					
ANR	4795991	CastTarget	double		4795829	0					
ANR	4795992	Identifier	gx_max_color_value		4795829	1					
ANR	4795993	Argument	255.0 * ( double ) m / ( double ) gx_max_color_value		4795829	3					
ANR	4795994	MultiplicativeExpression	255.0 * ( double ) m / ( double ) gx_max_color_value		4795829	0		*			
ANR	4795995	PrimaryExpression	255.0		4795829	0					
ANR	4795996	MultiplicativeExpression	( double ) m / ( double ) gx_max_color_value		4795829	1		/			
ANR	4795997	CastExpression	( double ) m		4795829	0					
ANR	4795998	CastTarget	double		4795829	0					
ANR	4795999	Identifier	m		4795829	1					
ANR	4796000	CastExpression	( double ) gx_max_color_value		4795829	1					
ANR	4796001	CastTarget	double		4795829	0					
ANR	4796002	Identifier	gx_max_color_value		4795829	1					
ANR	4796003	Argument	255.0 * ( double ) y / ( double ) gx_max_color_value		4795829	4					
ANR	4796004	MultiplicativeExpression	255.0 * ( double ) y / ( double ) gx_max_color_value		4795829	0		*			
ANR	4796005	PrimaryExpression	255.0		4795829	0					
ANR	4796006	MultiplicativeExpression	( double ) y / ( double ) gx_max_color_value		4795829	1		/			
ANR	4796007	CastExpression	( double ) y		4795829	0					
ANR	4796008	CastTarget	double		4795829	0					
ANR	4796009	Identifier	y		4795829	1					
ANR	4796010	CastExpression	( double ) gx_max_color_value		4795829	1					
ANR	4796011	CastTarget	double		4795829	0					
ANR	4796012	Identifier	gx_max_color_value		4795829	1					
ANR	4796013	Argument	255.0 * ( double ) k / ( double ) gx_max_color_value		4795829	5					
ANR	4796014	MultiplicativeExpression	255.0 * ( double ) k / ( double ) gx_max_color_value		4795829	0		*			
ANR	4796015	PrimaryExpression	255.0		4795829	0					
ANR	4796016	MultiplicativeExpression	( double ) k / ( double ) gx_max_color_value		4795829	1		/			
ANR	4796017	CastExpression	( double ) k		4795829	0					
ANR	4796018	CastTarget	double		4795829	0					
ANR	4796019	Identifier	k		4795829	1					
ANR	4796020	CastExpression	( double ) gx_max_color_value		4795829	1					
ANR	4796021	CastTarget	double		4795829	0					
ANR	4796022	Identifier	gx_max_color_value		4795829	1					
ANR	4796023	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4795829	6					
ANR	4796024	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4795829	0		*			
ANR	4796025	PrimaryExpression	255.0		4795829	0					
ANR	4796026	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4795829	1		/			
ANR	4796027	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4795829	0					
ANR	4796028	CastTarget	double		4795829	0					
ANR	4796029	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4795829	1		&			
ANR	4796030	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		4795829	0		>>			
ANR	4796031	Identifier	rv		4795829	0					
ANR	4796032	MemberAccess	upd -> cmap [ 1 ] . bitshf		4795829	1					
ANR	4796033	ArrayIndexing	upd -> cmap [ 1 ]		4795829	0					
ANR	4796034	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796035	Identifier	upd		4795829	0					
ANR	4796036	Identifier	cmap		4795829	1					
ANR	4796037	PrimaryExpression	1		4795829	1					
ANR	4796038	Identifier	bitshf		4795829	1					
ANR	4796039	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4795829	1					
ANR	4796040	ArrayIndexing	upd -> cmap [ 1 ]		4795829	0					
ANR	4796041	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796042	Identifier	upd		4795829	0					
ANR	4796043	Identifier	cmap		4795829	1					
ANR	4796044	PrimaryExpression	1		4795829	1					
ANR	4796045	Identifier	bitmsk		4795829	1					
ANR	4796046	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4795829	1					
ANR	4796047	CastTarget	double		4795829	0					
ANR	4796048	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4795829	1					
ANR	4796049	ArrayIndexing	upd -> cmap [ 1 ]		4795829	0					
ANR	4796050	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796051	Identifier	upd		4795829	0					
ANR	4796052	Identifier	cmap		4795829	1					
ANR	4796053	PrimaryExpression	1		4795829	1					
ANR	4796054	Identifier	bitmsk		4795829	1					
ANR	4796055	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4795829	7					
ANR	4796056	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4795829	0		*			
ANR	4796057	PrimaryExpression	255.0		4795829	0					
ANR	4796058	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4795829	1		/			
ANR	4796059	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4795829	0					
ANR	4796060	CastTarget	double		4795829	0					
ANR	4796061	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4795829	1		&			
ANR	4796062	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		4795829	0		>>			
ANR	4796063	Identifier	rv		4795829	0					
ANR	4796064	MemberAccess	upd -> cmap [ 2 ] . bitshf		4795829	1					
ANR	4796065	ArrayIndexing	upd -> cmap [ 2 ]		4795829	0					
ANR	4796066	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796067	Identifier	upd		4795829	0					
ANR	4796068	Identifier	cmap		4795829	1					
ANR	4796069	PrimaryExpression	2		4795829	1					
ANR	4796070	Identifier	bitshf		4795829	1					
ANR	4796071	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4795829	1					
ANR	4796072	ArrayIndexing	upd -> cmap [ 2 ]		4795829	0					
ANR	4796073	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796074	Identifier	upd		4795829	0					
ANR	4796075	Identifier	cmap		4795829	1					
ANR	4796076	PrimaryExpression	2		4795829	1					
ANR	4796077	Identifier	bitmsk		4795829	1					
ANR	4796078	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4795829	1					
ANR	4796079	CastTarget	double		4795829	0					
ANR	4796080	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4795829	1					
ANR	4796081	ArrayIndexing	upd -> cmap [ 2 ]		4795829	0					
ANR	4796082	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796083	Identifier	upd		4795829	0					
ANR	4796084	Identifier	cmap		4795829	1					
ANR	4796085	PrimaryExpression	2		4795829	1					
ANR	4796086	Identifier	bitmsk		4795829	1					
ANR	4796087	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4795829	8					
ANR	4796088	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4795829	0		*			
ANR	4796089	PrimaryExpression	255.0		4795829	0					
ANR	4796090	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4795829	1		/			
ANR	4796091	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		4795829	0					
ANR	4796092	CastTarget	double		4795829	0					
ANR	4796093	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		4795829	1		&			
ANR	4796094	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		4795829	0		>>			
ANR	4796095	Identifier	rv		4795829	0					
ANR	4796096	MemberAccess	upd -> cmap [ 3 ] . bitshf		4795829	1					
ANR	4796097	ArrayIndexing	upd -> cmap [ 3 ]		4795829	0					
ANR	4796098	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796099	Identifier	upd		4795829	0					
ANR	4796100	Identifier	cmap		4795829	1					
ANR	4796101	PrimaryExpression	3		4795829	1					
ANR	4796102	Identifier	bitshf		4795829	1					
ANR	4796103	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4795829	1					
ANR	4796104	ArrayIndexing	upd -> cmap [ 3 ]		4795829	0					
ANR	4796105	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796106	Identifier	upd		4795829	0					
ANR	4796107	Identifier	cmap		4795829	1					
ANR	4796108	PrimaryExpression	3		4795829	1					
ANR	4796109	Identifier	bitmsk		4795829	1					
ANR	4796110	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		4795829	1					
ANR	4796111	CastTarget	double		4795829	0					
ANR	4796112	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4795829	1					
ANR	4796113	ArrayIndexing	upd -> cmap [ 3 ]		4795829	0					
ANR	4796114	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796115	Identifier	upd		4795829	0					
ANR	4796116	Identifier	cmap		4795829	1					
ANR	4796117	PrimaryExpression	3		4795829	1					
ANR	4796118	Identifier	bitmsk		4795829	1					
ANR	4796119	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4795829	9					
ANR	4796120	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4795829	0		*			
ANR	4796121	PrimaryExpression	255.0		4795829	0					
ANR	4796122	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4795829	1		/			
ANR	4796123	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4795829	0					
ANR	4796124	CastTarget	double		4795829	0					
ANR	4796125	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4795829	1		&			
ANR	4796126	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		4795829	0		>>			
ANR	4796127	Identifier	rv		4795829	0					
ANR	4796128	MemberAccess	upd -> cmap [ 0 ] . bitshf		4795829	1					
ANR	4796129	ArrayIndexing	upd -> cmap [ 0 ]		4795829	0					
ANR	4796130	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796131	Identifier	upd		4795829	0					
ANR	4796132	Identifier	cmap		4795829	1					
ANR	4796133	PrimaryExpression	0		4795829	1					
ANR	4796134	Identifier	bitshf		4795829	1					
ANR	4796135	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4795829	1					
ANR	4796136	ArrayIndexing	upd -> cmap [ 0 ]		4795829	0					
ANR	4796137	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796138	Identifier	upd		4795829	0					
ANR	4796139	Identifier	cmap		4795829	1					
ANR	4796140	PrimaryExpression	0		4795829	1					
ANR	4796141	Identifier	bitmsk		4795829	1					
ANR	4796142	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4795829	1					
ANR	4796143	CastTarget	double		4795829	0					
ANR	4796144	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4795829	1					
ANR	4796145	ArrayIndexing	upd -> cmap [ 0 ]		4795829	0					
ANR	4796146	PtrMemberAccess	upd -> cmap		4795829	0					
ANR	4796147	Identifier	upd		4795829	0					
ANR	4796148	Identifier	cmap		4795829	1					
ANR	4796149	PrimaryExpression	0		4795829	1					
ANR	4796150	Identifier	bitmsk		4795829	1					
ANR	4796151	Argument	( pdev -> color_info . depth + 3 ) >> 2		4795829	10					
ANR	4796152	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4795829	0		>>			
ANR	4796153	AdditiveExpression	pdev -> color_info . depth + 3		4795829	0		+			
ANR	4796154	MemberAccess	pdev -> color_info . depth		4795829	0					
ANR	4796155	PtrMemberAccess	pdev -> color_info		4795829	0					
ANR	4796156	Identifier	pdev		4795829	0					
ANR	4796157	Identifier	color_info		4795829	1					
ANR	4796158	Identifier	depth		4795829	1					
ANR	4796159	PrimaryExpression	3		4795829	1					
ANR	4796160	PrimaryExpression	2		4795829	1					
ANR	4796161	Argument	rv		4795829	11					
ANR	4796162	Identifier	rv		4795829	0					
ANR	4796163	ReturnStatement	return rv ;	2205:3:88849:88858	4795829	9	True				
ANR	4796164	Identifier	rv		4795829	0					
ANR	4796165	ReturnType	static gx_color_index		4795829	1					
ANR	4796166	Identifier	upd_cmyk_icolor		4795829	2					
ANR	4796167	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		4795829	3					
ANR	4796168	Parameter	gx_device * pdev	2158:16:87104:87118	4795829	0	True				
ANR	4796169	ParameterType	gx_device *		4795829	0					
ANR	4796170	Identifier	pdev		4795829	1					
ANR	4796171	Parameter	const gx_color_value cv [ ]	2158:33:87121:87145	4795829	1	True				
ANR	4796172	ParameterType	const gx_color_value [ ]		4795829	0					
ANR	4796173	Identifier	cv		4795829	1					
ANR	4796174	CFGEntryNode	ENTRY		4795829		True				
ANR	4796175	CFGExitNode	EXIT		4795829		True				
ANR	4796176	Symbol	rv		4795829						
ANR	4796177	Symbol	pdev -> color_info . depth		4795829						
ANR	4796178	Symbol	* upd -> cmap		4795829						
ANR	4796179	Symbol	upd -> cmap [ 0 ] . bitshf		4795829						
ANR	4796180	Symbol	pdev -> color_info		4795829						
ANR	4796181	Symbol	( ( upd_device * ) pdev ) -> upd		4795829						
ANR	4796182	Symbol	upd -> cmap		4795829						
ANR	4796183	Symbol	pdev		4795829						
ANR	4796184	Symbol	gx_no_color_index		4795829						
ANR	4796185	Symbol	* upd		4795829						
ANR	4796186	Symbol	upd -> cmap [ 2 ] . bitmsk		4795829						
ANR	4796187	Symbol	pdev -> memory		4795829						
ANR	4796188	Symbol	upd -> cmap [ 3 ] . bitshf		4795829						
ANR	4796189	Symbol	upd -> cmap [ 1 ] . bitmsk		4795829						
ANR	4796190	Symbol	upd -> cmap [ 2 ] . bitshf		4795829						
ANR	4796191	Symbol	upd -> cmap [ 3 ] . bitmsk		4795829						
ANR	4796192	Symbol	c		4795829						
ANR	4796193	Symbol	upd -> cmap [ 0 ] . bitmsk		4795829						
ANR	4796194	Symbol	upd		4795829						
ANR	4796195	Symbol	k		4795829						
ANR	4796196	Symbol	m		4795829						
ANR	4796197	Symbol	cv		4795829						
ANR	4796198	Symbol	upd -> cmap [ 1 ] . bitshf		4795829						
ANR	4796199	Symbol	gx_max_color_value		4795829						
ANR	4796200	Symbol	* pdev		4795829						
ANR	4796201	Symbol	y		4795829						
ANR	4796202	Symbol	* cv		4795829						
ANR	4796203	Symbol	upd_truncate		4795829						
ANR	4796204	Symbol	* * upd		4795829						
ANR	4796205	Function	upd_icolor_rgb	2212:0:89086:90964							
ANR	4796206	FunctionDef	"upd_icolor_rgb (gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ])"		4796205	0					
ANR	4796207	CompoundStatement		2214:0:89175:90964	4796205	0					
ANR	4796208	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2215:3:89180:89227	4796205	0	True				
ANR	4796209	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4796205	0					
ANR	4796210	IdentifierDeclType	const upd_p		4796205	0					
ANR	4796211	Identifier	upd		4796205	1					
ANR	4796212	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4796205	2		=			
ANR	4796213	Identifier	upd		4796205	0					
ANR	4796214	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4796205	1					
ANR	4796215	CastExpression	( upd_device * ) pdev		4796205	0					
ANR	4796216	CastTarget	upd_device *		4796205	0					
ANR	4796217	Identifier	pdev		4796205	1					
ANR	4796218	Identifier	upd		4796205	1					
ANR	4796219	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	2216:3:89232:89254	4796205	1	True				
ANR	4796220	IdentifierDecl	c		4796205	0					
ANR	4796221	IdentifierDeclType	gx_color_value		4796205	0					
ANR	4796222	Identifier	c		4796205	1					
ANR	4796223	IdentifierDecl	m		4796205	1					
ANR	4796224	IdentifierDeclType	gx_color_value		4796205	0					
ANR	4796225	Identifier	m		4796205	1					
ANR	4796226	IdentifierDecl	y		4796205	2					
ANR	4796227	IdentifierDeclType	gx_color_value		4796205	0					
ANR	4796228	Identifier	y		4796205	1					
ANR	4796229	IdentifierDecl	k		4796205	3					
ANR	4796230	IdentifierDeclType	gx_color_value		4796205	0					
ANR	4796231	Identifier	k		4796205	1					
ANR	4796232	ExpressionStatement	"k = upd_expand ( upd , 0 , color )"	2221:3:89301:89328	4796205	2	True				
ANR	4796233	AssignmentExpression	"k = upd_expand ( upd , 0 , color )"		4796205	0		=			
ANR	4796234	Identifier	k		4796205	0					
ANR	4796235	CallExpression	"upd_expand ( upd , 0 , color )"		4796205	1					
ANR	4796236	Callee	upd_expand		4796205	0					
ANR	4796237	Identifier	upd_expand		4796205	0					
ANR	4796238	ArgumentList	upd		4796205	1					
ANR	4796239	Argument	upd		4796205	0					
ANR	4796240	Identifier	upd		4796205	0					
ANR	4796241	Argument	0		4796205	1					
ANR	4796242	PrimaryExpression	0		4796205	0					
ANR	4796243	Argument	color		4796205	2					
ANR	4796244	Identifier	color		4796205	0					
ANR	4796245	ExpressionStatement	"c = upd_expand ( upd , 1 , color )"	2222:3:89333:89360	4796205	3	True				
ANR	4796246	AssignmentExpression	"c = upd_expand ( upd , 1 , color )"		4796205	0		=			
ANR	4796247	Identifier	c		4796205	0					
ANR	4796248	CallExpression	"upd_expand ( upd , 1 , color )"		4796205	1					
ANR	4796249	Callee	upd_expand		4796205	0					
ANR	4796250	Identifier	upd_expand		4796205	0					
ANR	4796251	ArgumentList	upd		4796205	1					
ANR	4796252	Argument	upd		4796205	0					
ANR	4796253	Identifier	upd		4796205	0					
ANR	4796254	Argument	1		4796205	1					
ANR	4796255	PrimaryExpression	1		4796205	0					
ANR	4796256	Argument	color		4796205	2					
ANR	4796257	Identifier	color		4796205	0					
ANR	4796258	ExpressionStatement	"m = upd_expand ( upd , 2 , color )"	2223:3:89365:89392	4796205	4	True				
ANR	4796259	AssignmentExpression	"m = upd_expand ( upd , 2 , color )"		4796205	0		=			
ANR	4796260	Identifier	m		4796205	0					
ANR	4796261	CallExpression	"upd_expand ( upd , 2 , color )"		4796205	1					
ANR	4796262	Callee	upd_expand		4796205	0					
ANR	4796263	Identifier	upd_expand		4796205	0					
ANR	4796264	ArgumentList	upd		4796205	1					
ANR	4796265	Argument	upd		4796205	0					
ANR	4796266	Identifier	upd		4796205	0					
ANR	4796267	Argument	2		4796205	1					
ANR	4796268	PrimaryExpression	2		4796205	0					
ANR	4796269	Argument	color		4796205	2					
ANR	4796270	Identifier	color		4796205	0					
ANR	4796271	ExpressionStatement	"y = upd_expand ( upd , 3 , color )"	2224:3:89397:89424	4796205	5	True				
ANR	4796272	AssignmentExpression	"y = upd_expand ( upd , 3 , color )"		4796205	0		=			
ANR	4796273	Identifier	y		4796205	0					
ANR	4796274	CallExpression	"upd_expand ( upd , 3 , color )"		4796205	1					
ANR	4796275	Callee	upd_expand		4796205	0					
ANR	4796276	Identifier	upd_expand		4796205	0					
ANR	4796277	ArgumentList	upd		4796205	1					
ANR	4796278	Argument	upd		4796205	0					
ANR	4796279	Identifier	upd		4796205	0					
ANR	4796280	Argument	3		4796205	1					
ANR	4796281	PrimaryExpression	3		4796205	0					
ANR	4796282	Argument	color		4796205	2					
ANR	4796283	Identifier	color		4796205	0					
ANR	4796284	ExpressionStatement	prgb [ 0 ] = gx_max_color_value - c	2229:3:89483:89515	4796205	6	True				
ANR	4796285	AssignmentExpression	prgb [ 0 ] = gx_max_color_value - c		4796205	0		=			
ANR	4796286	ArrayIndexing	prgb [ 0 ]		4796205	0					
ANR	4796287	Identifier	prgb		4796205	0					
ANR	4796288	PrimaryExpression	0		4796205	1					
ANR	4796289	AdditiveExpression	gx_max_color_value - c		4796205	1		-			
ANR	4796290	Identifier	gx_max_color_value		4796205	0					
ANR	4796291	Identifier	c		4796205	1					
ANR	4796292	IfStatement	if ( prgb [ 0 ] > k )		4796205	7					
ANR	4796293	Condition	prgb [ 0 ] > k	2230:6:89523:89533	4796205	0	True				
ANR	4796294	RelationalExpression	prgb [ 0 ] > k		4796205	0		>			
ANR	4796295	ArrayIndexing	prgb [ 0 ]		4796205	0					
ANR	4796296	Identifier	prgb		4796205	0					
ANR	4796297	PrimaryExpression	0		4796205	1					
ANR	4796298	Identifier	k		4796205	1					
ANR	4796299	ExpressionStatement	prgb [ 0 ] -= k	2230:19:89536:89548	4796205	1	True				
ANR	4796300	AssignmentExpression	prgb [ 0 ] -= k		4796205	0		-=			
ANR	4796301	ArrayIndexing	prgb [ 0 ]		4796205	0					
ANR	4796302	Identifier	prgb		4796205	0					
ANR	4796303	PrimaryExpression	0		4796205	1					
ANR	4796304	Identifier	k		4796205	1					
ANR	4796305	ElseStatement	else		4796205	0					
ANR	4796306	ExpressionStatement	prgb [ 0 ] = 0	2231:19:89569:89581	4796205	0	True				
ANR	4796307	AssignmentExpression	prgb [ 0 ] = 0		4796205	0		=			
ANR	4796308	ArrayIndexing	prgb [ 0 ]		4796205	0					
ANR	4796309	Identifier	prgb		4796205	0					
ANR	4796310	PrimaryExpression	0		4796205	1					
ANR	4796311	PrimaryExpression	0		4796205	1					
ANR	4796312	ExpressionStatement	prgb [ 1 ] = gx_max_color_value - m	2233:3:89587:89619	4796205	8	True				
ANR	4796313	AssignmentExpression	prgb [ 1 ] = gx_max_color_value - m		4796205	0		=			
ANR	4796314	ArrayIndexing	prgb [ 1 ]		4796205	0					
ANR	4796315	Identifier	prgb		4796205	0					
ANR	4796316	PrimaryExpression	1		4796205	1					
ANR	4796317	AdditiveExpression	gx_max_color_value - m		4796205	1		-			
ANR	4796318	Identifier	gx_max_color_value		4796205	0					
ANR	4796319	Identifier	m		4796205	1					
ANR	4796320	IfStatement	if ( prgb [ 1 ] > k )		4796205	9					
ANR	4796321	Condition	prgb [ 1 ] > k	2234:6:89627:89637	4796205	0	True				
ANR	4796322	RelationalExpression	prgb [ 1 ] > k		4796205	0		>			
ANR	4796323	ArrayIndexing	prgb [ 1 ]		4796205	0					
ANR	4796324	Identifier	prgb		4796205	0					
ANR	4796325	PrimaryExpression	1		4796205	1					
ANR	4796326	Identifier	k		4796205	1					
ANR	4796327	ExpressionStatement	prgb [ 1 ] -= k	2234:19:89640:89652	4796205	1	True				
ANR	4796328	AssignmentExpression	prgb [ 1 ] -= k		4796205	0		-=			
ANR	4796329	ArrayIndexing	prgb [ 1 ]		4796205	0					
ANR	4796330	Identifier	prgb		4796205	0					
ANR	4796331	PrimaryExpression	1		4796205	1					
ANR	4796332	Identifier	k		4796205	1					
ANR	4796333	ElseStatement	else		4796205	0					
ANR	4796334	ExpressionStatement	prgb [ 1 ] = 0	2235:19:89673:89685	4796205	0	True				
ANR	4796335	AssignmentExpression	prgb [ 1 ] = 0		4796205	0		=			
ANR	4796336	ArrayIndexing	prgb [ 1 ]		4796205	0					
ANR	4796337	Identifier	prgb		4796205	0					
ANR	4796338	PrimaryExpression	1		4796205	1					
ANR	4796339	PrimaryExpression	0		4796205	1					
ANR	4796340	ExpressionStatement	prgb [ 2 ] = gx_max_color_value - y	2237:3:89691:89723	4796205	10	True				
ANR	4796341	AssignmentExpression	prgb [ 2 ] = gx_max_color_value - y		4796205	0		=			
ANR	4796342	ArrayIndexing	prgb [ 2 ]		4796205	0					
ANR	4796343	Identifier	prgb		4796205	0					
ANR	4796344	PrimaryExpression	2		4796205	1					
ANR	4796345	AdditiveExpression	gx_max_color_value - y		4796205	1		-			
ANR	4796346	Identifier	gx_max_color_value		4796205	0					
ANR	4796347	Identifier	y		4796205	1					
ANR	4796348	IfStatement	if ( prgb [ 2 ] > k )		4796205	11					
ANR	4796349	Condition	prgb [ 2 ] > k	2238:6:89731:89741	4796205	0	True				
ANR	4796350	RelationalExpression	prgb [ 2 ] > k		4796205	0		>			
ANR	4796351	ArrayIndexing	prgb [ 2 ]		4796205	0					
ANR	4796352	Identifier	prgb		4796205	0					
ANR	4796353	PrimaryExpression	2		4796205	1					
ANR	4796354	Identifier	k		4796205	1					
ANR	4796355	ExpressionStatement	prgb [ 2 ] -= k	2238:19:89744:89756	4796205	1	True				
ANR	4796356	AssignmentExpression	prgb [ 2 ] -= k		4796205	0		-=			
ANR	4796357	ArrayIndexing	prgb [ 2 ]		4796205	0					
ANR	4796358	Identifier	prgb		4796205	0					
ANR	4796359	PrimaryExpression	2		4796205	1					
ANR	4796360	Identifier	k		4796205	1					
ANR	4796361	ElseStatement	else		4796205	0					
ANR	4796362	ExpressionStatement	prgb [ 2 ] = 0	2239:19:89777:89789	4796205	0	True				
ANR	4796363	AssignmentExpression	prgb [ 2 ] = 0		4796205	0		=			
ANR	4796364	ArrayIndexing	prgb [ 2 ]		4796205	0					
ANR	4796365	Identifier	prgb		4796205	0					
ANR	4796366	PrimaryExpression	2		4796205	1					
ANR	4796367	PrimaryExpression	0		4796205	1					
ANR	4796368	ExpressionStatement	"errprintf ( pdev -> memory , ""icolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"	2242:3:89829:90941	4796205	12	True				
ANR	4796369	CallExpression	"errprintf ( pdev -> memory , ""icolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"		4796205	0					
ANR	4796370	Callee	errprintf		4796205	0					
ANR	4796371	Identifier	errprintf		4796205	0					
ANR	4796372	ArgumentList	pdev -> memory		4796205	1					
ANR	4796373	Argument	pdev -> memory		4796205	0					
ANR	4796374	PtrMemberAccess	pdev -> memory		4796205	0					
ANR	4796375	Identifier	pdev		4796205	0					
ANR	4796376	Identifier	memory		4796205	1					
ANR	4796377	Argument	"""icolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		4796205	1					
ANR	4796378	PrimaryExpression	"""icolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		4796205	0					
ANR	4796379	Argument	( pdev -> color_info . depth + 3 ) >> 2		4796205	2					
ANR	4796380	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4796205	0		>>			
ANR	4796381	AdditiveExpression	pdev -> color_info . depth + 3		4796205	0		+			
ANR	4796382	MemberAccess	pdev -> color_info . depth		4796205	0					
ANR	4796383	PtrMemberAccess	pdev -> color_info		4796205	0					
ANR	4796384	Identifier	pdev		4796205	0					
ANR	4796385	Identifier	color_info		4796205	1					
ANR	4796386	Identifier	depth		4796205	1					
ANR	4796387	PrimaryExpression	3		4796205	1					
ANR	4796388	PrimaryExpression	2		4796205	1					
ANR	4796389	Argument	color		4796205	3					
ANR	4796390	Identifier	color		4796205	0					
ANR	4796391	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4796205	4					
ANR	4796392	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4796205	0		*			
ANR	4796393	PrimaryExpression	255.0		4796205	0					
ANR	4796394	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4796205	1		/			
ANR	4796395	CastExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4796205	0					
ANR	4796396	CastTarget	double		4796205	0					
ANR	4796397	BitAndExpression	( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4796205	1		&			
ANR	4796398	ShiftExpression	color >> upd -> cmap [ 1 ] . bitshf		4796205	0		>>			
ANR	4796399	Identifier	color		4796205	0					
ANR	4796400	MemberAccess	upd -> cmap [ 1 ] . bitshf		4796205	1					
ANR	4796401	ArrayIndexing	upd -> cmap [ 1 ]		4796205	0					
ANR	4796402	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796403	Identifier	upd		4796205	0					
ANR	4796404	Identifier	cmap		4796205	1					
ANR	4796405	PrimaryExpression	1		4796205	1					
ANR	4796406	Identifier	bitshf		4796205	1					
ANR	4796407	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4796205	1					
ANR	4796408	ArrayIndexing	upd -> cmap [ 1 ]		4796205	0					
ANR	4796409	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796410	Identifier	upd		4796205	0					
ANR	4796411	Identifier	cmap		4796205	1					
ANR	4796412	PrimaryExpression	1		4796205	1					
ANR	4796413	Identifier	bitmsk		4796205	1					
ANR	4796414	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4796205	1					
ANR	4796415	CastTarget	double		4796205	0					
ANR	4796416	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4796205	1					
ANR	4796417	ArrayIndexing	upd -> cmap [ 1 ]		4796205	0					
ANR	4796418	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796419	Identifier	upd		4796205	0					
ANR	4796420	Identifier	cmap		4796205	1					
ANR	4796421	PrimaryExpression	1		4796205	1					
ANR	4796422	Identifier	bitmsk		4796205	1					
ANR	4796423	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4796205	5					
ANR	4796424	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4796205	0		*			
ANR	4796425	PrimaryExpression	255.0		4796205	0					
ANR	4796426	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4796205	1		/			
ANR	4796427	CastExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4796205	0					
ANR	4796428	CastTarget	double		4796205	0					
ANR	4796429	BitAndExpression	( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4796205	1		&			
ANR	4796430	ShiftExpression	color >> upd -> cmap [ 2 ] . bitshf		4796205	0		>>			
ANR	4796431	Identifier	color		4796205	0					
ANR	4796432	MemberAccess	upd -> cmap [ 2 ] . bitshf		4796205	1					
ANR	4796433	ArrayIndexing	upd -> cmap [ 2 ]		4796205	0					
ANR	4796434	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796435	Identifier	upd		4796205	0					
ANR	4796436	Identifier	cmap		4796205	1					
ANR	4796437	PrimaryExpression	2		4796205	1					
ANR	4796438	Identifier	bitshf		4796205	1					
ANR	4796439	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4796205	1					
ANR	4796440	ArrayIndexing	upd -> cmap [ 2 ]		4796205	0					
ANR	4796441	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796442	Identifier	upd		4796205	0					
ANR	4796443	Identifier	cmap		4796205	1					
ANR	4796444	PrimaryExpression	2		4796205	1					
ANR	4796445	Identifier	bitmsk		4796205	1					
ANR	4796446	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4796205	1					
ANR	4796447	CastTarget	double		4796205	0					
ANR	4796448	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4796205	1					
ANR	4796449	ArrayIndexing	upd -> cmap [ 2 ]		4796205	0					
ANR	4796450	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796451	Identifier	upd		4796205	0					
ANR	4796452	Identifier	cmap		4796205	1					
ANR	4796453	PrimaryExpression	2		4796205	1					
ANR	4796454	Identifier	bitmsk		4796205	1					
ANR	4796455	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4796205	6					
ANR	4796456	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4796205	0		*			
ANR	4796457	PrimaryExpression	255.0		4796205	0					
ANR	4796458	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4796205	1		/			
ANR	4796459	CastExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		4796205	0					
ANR	4796460	CastTarget	double		4796205	0					
ANR	4796461	BitAndExpression	( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		4796205	1		&			
ANR	4796462	ShiftExpression	color >> upd -> cmap [ 3 ] . bitshf		4796205	0		>>			
ANR	4796463	Identifier	color		4796205	0					
ANR	4796464	MemberAccess	upd -> cmap [ 3 ] . bitshf		4796205	1					
ANR	4796465	ArrayIndexing	upd -> cmap [ 3 ]		4796205	0					
ANR	4796466	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796467	Identifier	upd		4796205	0					
ANR	4796468	Identifier	cmap		4796205	1					
ANR	4796469	PrimaryExpression	3		4796205	1					
ANR	4796470	Identifier	bitshf		4796205	1					
ANR	4796471	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4796205	1					
ANR	4796472	ArrayIndexing	upd -> cmap [ 3 ]		4796205	0					
ANR	4796473	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796474	Identifier	upd		4796205	0					
ANR	4796475	Identifier	cmap		4796205	1					
ANR	4796476	PrimaryExpression	3		4796205	1					
ANR	4796477	Identifier	bitmsk		4796205	1					
ANR	4796478	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		4796205	1					
ANR	4796479	CastTarget	double		4796205	0					
ANR	4796480	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4796205	1					
ANR	4796481	ArrayIndexing	upd -> cmap [ 3 ]		4796205	0					
ANR	4796482	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796483	Identifier	upd		4796205	0					
ANR	4796484	Identifier	cmap		4796205	1					
ANR	4796485	PrimaryExpression	3		4796205	1					
ANR	4796486	Identifier	bitmsk		4796205	1					
ANR	4796487	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796205	7					
ANR	4796488	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796205	0		*			
ANR	4796489	PrimaryExpression	255.0		4796205	0					
ANR	4796490	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796205	1		/			
ANR	4796491	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4796205	0					
ANR	4796492	CastTarget	double		4796205	0					
ANR	4796493	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4796205	1		&			
ANR	4796494	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		4796205	0		>>			
ANR	4796495	Identifier	color		4796205	0					
ANR	4796496	MemberAccess	upd -> cmap [ 0 ] . bitshf		4796205	1					
ANR	4796497	ArrayIndexing	upd -> cmap [ 0 ]		4796205	0					
ANR	4796498	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796499	Identifier	upd		4796205	0					
ANR	4796500	Identifier	cmap		4796205	1					
ANR	4796501	PrimaryExpression	0		4796205	1					
ANR	4796502	Identifier	bitshf		4796205	1					
ANR	4796503	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4796205	1					
ANR	4796504	ArrayIndexing	upd -> cmap [ 0 ]		4796205	0					
ANR	4796505	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796506	Identifier	upd		4796205	0					
ANR	4796507	Identifier	cmap		4796205	1					
ANR	4796508	PrimaryExpression	0		4796205	1					
ANR	4796509	Identifier	bitmsk		4796205	1					
ANR	4796510	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4796205	1					
ANR	4796511	CastTarget	double		4796205	0					
ANR	4796512	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4796205	1					
ANR	4796513	ArrayIndexing	upd -> cmap [ 0 ]		4796205	0					
ANR	4796514	PtrMemberAccess	upd -> cmap		4796205	0					
ANR	4796515	Identifier	upd		4796205	0					
ANR	4796516	Identifier	cmap		4796205	1					
ANR	4796517	PrimaryExpression	0		4796205	1					
ANR	4796518	Identifier	bitmsk		4796205	1					
ANR	4796519	Argument	255.0 * ( double ) c / ( double ) gx_max_color_value		4796205	8					
ANR	4796520	MultiplicativeExpression	255.0 * ( double ) c / ( double ) gx_max_color_value		4796205	0		*			
ANR	4796521	PrimaryExpression	255.0		4796205	0					
ANR	4796522	MultiplicativeExpression	( double ) c / ( double ) gx_max_color_value		4796205	1		/			
ANR	4796523	CastExpression	( double ) c		4796205	0					
ANR	4796524	CastTarget	double		4796205	0					
ANR	4796525	Identifier	c		4796205	1					
ANR	4796526	CastExpression	( double ) gx_max_color_value		4796205	1					
ANR	4796527	CastTarget	double		4796205	0					
ANR	4796528	Identifier	gx_max_color_value		4796205	1					
ANR	4796529	Argument	255.0 * ( double ) m / ( double ) gx_max_color_value		4796205	9					
ANR	4796530	MultiplicativeExpression	255.0 * ( double ) m / ( double ) gx_max_color_value		4796205	0		*			
ANR	4796531	PrimaryExpression	255.0		4796205	0					
ANR	4796532	MultiplicativeExpression	( double ) m / ( double ) gx_max_color_value		4796205	1		/			
ANR	4796533	CastExpression	( double ) m		4796205	0					
ANR	4796534	CastTarget	double		4796205	0					
ANR	4796535	Identifier	m		4796205	1					
ANR	4796536	CastExpression	( double ) gx_max_color_value		4796205	1					
ANR	4796537	CastTarget	double		4796205	0					
ANR	4796538	Identifier	gx_max_color_value		4796205	1					
ANR	4796539	Argument	255.0 * ( double ) y / ( double ) gx_max_color_value		4796205	10					
ANR	4796540	MultiplicativeExpression	255.0 * ( double ) y / ( double ) gx_max_color_value		4796205	0		*			
ANR	4796541	PrimaryExpression	255.0		4796205	0					
ANR	4796542	MultiplicativeExpression	( double ) y / ( double ) gx_max_color_value		4796205	1		/			
ANR	4796543	CastExpression	( double ) y		4796205	0					
ANR	4796544	CastTarget	double		4796205	0					
ANR	4796545	Identifier	y		4796205	1					
ANR	4796546	CastExpression	( double ) gx_max_color_value		4796205	1					
ANR	4796547	CastTarget	double		4796205	0					
ANR	4796548	Identifier	gx_max_color_value		4796205	1					
ANR	4796549	Argument	255.0 * ( double ) k / ( double ) gx_max_color_value		4796205	11					
ANR	4796550	MultiplicativeExpression	255.0 * ( double ) k / ( double ) gx_max_color_value		4796205	0		*			
ANR	4796551	PrimaryExpression	255.0		4796205	0					
ANR	4796552	MultiplicativeExpression	( double ) k / ( double ) gx_max_color_value		4796205	1		/			
ANR	4796553	CastExpression	( double ) k		4796205	0					
ANR	4796554	CastTarget	double		4796205	0					
ANR	4796555	Identifier	k		4796205	1					
ANR	4796556	CastExpression	( double ) gx_max_color_value		4796205	1					
ANR	4796557	CastTarget	double		4796205	0					
ANR	4796558	Identifier	gx_max_color_value		4796205	1					
ANR	4796559	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796205	12					
ANR	4796560	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796205	0		*			
ANR	4796561	PrimaryExpression	255.0		4796205	0					
ANR	4796562	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796205	1		/			
ANR	4796563	CastExpression	( double ) prgb [ 0 ]		4796205	0					
ANR	4796564	CastTarget	double		4796205	0					
ANR	4796565	ArrayIndexing	prgb [ 0 ]		4796205	1					
ANR	4796566	Identifier	prgb		4796205	0					
ANR	4796567	PrimaryExpression	0		4796205	1					
ANR	4796568	CastExpression	( double ) gx_max_color_value		4796205	1					
ANR	4796569	CastTarget	double		4796205	0					
ANR	4796570	Identifier	gx_max_color_value		4796205	1					
ANR	4796571	Argument	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4796205	13					
ANR	4796572	MultiplicativeExpression	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4796205	0		*			
ANR	4796573	PrimaryExpression	255.0		4796205	0					
ANR	4796574	MultiplicativeExpression	( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4796205	1		/			
ANR	4796575	CastExpression	( double ) prgb [ 1 ]		4796205	0					
ANR	4796576	CastTarget	double		4796205	0					
ANR	4796577	ArrayIndexing	prgb [ 1 ]		4796205	1					
ANR	4796578	Identifier	prgb		4796205	0					
ANR	4796579	PrimaryExpression	1		4796205	1					
ANR	4796580	CastExpression	( double ) gx_max_color_value		4796205	1					
ANR	4796581	CastTarget	double		4796205	0					
ANR	4796582	Identifier	gx_max_color_value		4796205	1					
ANR	4796583	Argument	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4796205	14					
ANR	4796584	MultiplicativeExpression	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4796205	0		*			
ANR	4796585	PrimaryExpression	255.0		4796205	0					
ANR	4796586	MultiplicativeExpression	( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4796205	1		/			
ANR	4796587	CastExpression	( double ) prgb [ 2 ]		4796205	0					
ANR	4796588	CastTarget	double		4796205	0					
ANR	4796589	ArrayIndexing	prgb [ 2 ]		4796205	1					
ANR	4796590	Identifier	prgb		4796205	0					
ANR	4796591	PrimaryExpression	2		4796205	1					
ANR	4796592	CastExpression	( double ) gx_max_color_value		4796205	1					
ANR	4796593	CastTarget	double		4796205	0					
ANR	4796594	Identifier	gx_max_color_value		4796205	1					
ANR	4796595	ReturnStatement	return 0 ;	2262:3:90954:90962	4796205	13	True				
ANR	4796596	PrimaryExpression	0		4796205	0					
ANR	4796597	ReturnType	static int		4796205	1					
ANR	4796598	Identifier	upd_icolor_rgb		4796205	2					
ANR	4796599	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ]"		4796205	3					
ANR	4796600	Parameter	gx_device * pdev	2213:15:89112:89126	4796205	0	True				
ANR	4796601	ParameterType	gx_device *		4796205	0					
ANR	4796602	Identifier	pdev		4796205	1					
ANR	4796603	Parameter	gx_color_index color	2213:32:89129:89148	4796205	1	True				
ANR	4796604	ParameterType	gx_color_index		4796205	0					
ANR	4796605	Identifier	color		4796205	1					
ANR	4796606	Parameter	gx_color_value prgb [ 3 ]	2213:54:89151:89172	4796205	2	True				
ANR	4796607	ParameterType	gx_color_value [ 3 ]		4796205	0					
ANR	4796608	Identifier	prgb		4796205	1					
ANR	4796609	CFGEntryNode	ENTRY		4796205		True				
ANR	4796610	CFGExitNode	EXIT		4796205		True				
ANR	4796611	Symbol	color		4796205						
ANR	4796612	Symbol	pdev -> color_info . depth		4796205						
ANR	4796613	Symbol	* upd -> cmap		4796205						
ANR	4796614	Symbol	pdev -> color_info		4796205						
ANR	4796615	Symbol	upd -> cmap [ 0 ] . bitshf		4796205						
ANR	4796616	Symbol	( ( upd_device * ) pdev ) -> upd		4796205						
ANR	4796617	Symbol	upd -> cmap		4796205						
ANR	4796618	Symbol	pdev		4796205						
ANR	4796619	Symbol	* upd		4796205						
ANR	4796620	Symbol	pdev -> memory		4796205						
ANR	4796621	Symbol	upd -> cmap [ 2 ] . bitmsk		4796205						
ANR	4796622	Symbol	upd -> cmap [ 3 ] . bitshf		4796205						
ANR	4796623	Symbol	upd -> cmap [ 1 ] . bitmsk		4796205						
ANR	4796624	Symbol	upd -> cmap [ 2 ] . bitshf		4796205						
ANR	4796625	Symbol	upd -> cmap [ 3 ] . bitmsk		4796205						
ANR	4796626	Symbol	c		4796205						
ANR	4796627	Symbol	upd -> cmap [ 0 ] . bitmsk		4796205						
ANR	4796628	Symbol	upd		4796205						
ANR	4796629	Symbol	prgb		4796205						
ANR	4796630	Symbol	k		4796205						
ANR	4796631	Symbol	m		4796205						
ANR	4796632	Symbol	* prgb		4796205						
ANR	4796633	Symbol	upd -> cmap [ 1 ] . bitshf		4796205						
ANR	4796634	Symbol	gx_max_color_value		4796205						
ANR	4796635	Symbol	* pdev		4796205						
ANR	4796636	Symbol	y		4796205						
ANR	4796637	Symbol	* * upd		4796205						
ANR	4796638	Symbol	upd_expand		4796205						
ANR	4796639	Function	upd_rgb_1color	2269:0:91186:91773							
ANR	4796640	FunctionDef	"upd_rgb_1color (gx_device * pdev , const gx_color_value cv [ ])"		4796639	0					
ANR	4796641	CompoundStatement		2271:0:91267:91773	4796639	0					
ANR	4796642	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2272:3:91272:91319	4796639	0	True				
ANR	4796643	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4796639	0					
ANR	4796644	IdentifierDeclType	const upd_p		4796639	0					
ANR	4796645	Identifier	upd		4796639	1					
ANR	4796646	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4796639	2		=			
ANR	4796647	Identifier	upd		4796639	0					
ANR	4796648	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4796639	1					
ANR	4796649	CastExpression	( upd_device * ) pdev		4796639	0					
ANR	4796650	CastTarget	upd_device *		4796639	0					
ANR	4796651	Identifier	pdev		4796639	1					
ANR	4796652	Identifier	upd		4796639	1					
ANR	4796653	IdentifierDeclStatement	gx_color_index rv ;	2273:3:91324:91342	4796639	1	True				
ANR	4796654	IdentifierDecl	rv		4796639	0					
ANR	4796655	IdentifierDeclType	gx_color_index		4796639	0					
ANR	4796656	Identifier	rv		4796639	1					
ANR	4796657	IdentifierDeclStatement	gx_color_value g ;	2274:3:91347:91363	4796639	2	True				
ANR	4796658	IdentifierDecl	g		4796639	0					
ANR	4796659	IdentifierDeclType	gx_color_value		4796639	0					
ANR	4796660	Identifier	g		4796639	1					
ANR	4796661	ExpressionStatement	g = cv [ 0 ]	2276:3:91369:91378	4796639	3	True				
ANR	4796662	AssignmentExpression	g = cv [ 0 ]		4796639	0		=			
ANR	4796663	Identifier	g		4796639	0					
ANR	4796664	ArrayIndexing	cv [ 0 ]		4796639	1					
ANR	4796665	Identifier	cv		4796639	0					
ANR	4796666	PrimaryExpression	0		4796639	1					
ANR	4796667	ExpressionStatement	"rv = upd_truncate ( upd , 0 , g )"	2277:3:91383:91409	4796639	4	True				
ANR	4796668	AssignmentExpression	"rv = upd_truncate ( upd , 0 , g )"		4796639	0		=			
ANR	4796669	Identifier	rv		4796639	0					
ANR	4796670	CallExpression	"upd_truncate ( upd , 0 , g )"		4796639	1					
ANR	4796671	Callee	upd_truncate		4796639	0					
ANR	4796672	Identifier	upd_truncate		4796639	0					
ANR	4796673	ArgumentList	upd		4796639	1					
ANR	4796674	Argument	upd		4796639	0					
ANR	4796675	Identifier	upd		4796639	0					
ANR	4796676	Argument	0		4796639	1					
ANR	4796677	PrimaryExpression	0		4796639	0					
ANR	4796678	Argument	g		4796639	2					
ANR	4796679	Identifier	g		4796639	0					
ANR	4796680	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_1color: (%5.1f) : (%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2280:3:91449:91749	4796639	5	True				
ANR	4796681	CallExpression	"errprintf ( pdev -> memory , ""rgb_1color: (%5.1f) : (%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		4796639	0					
ANR	4796682	Callee	errprintf		4796639	0					
ANR	4796683	Identifier	errprintf		4796639	0					
ANR	4796684	ArgumentList	pdev -> memory		4796639	1					
ANR	4796685	Argument	pdev -> memory		4796639	0					
ANR	4796686	PtrMemberAccess	pdev -> memory		4796639	0					
ANR	4796687	Identifier	pdev		4796639	0					
ANR	4796688	Identifier	memory		4796639	1					
ANR	4796689	Argument	"""rgb_1color: (%5.1f) : (%5.1f) : 0x%0*lx\\n"""		4796639	1					
ANR	4796690	PrimaryExpression	"""rgb_1color: (%5.1f) : (%5.1f) : 0x%0*lx\\n"""		4796639	0					
ANR	4796691	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		4796639	2					
ANR	4796692	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		4796639	0		*			
ANR	4796693	PrimaryExpression	255.0		4796639	0					
ANR	4796694	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		4796639	1		/			
ANR	4796695	CastExpression	( double ) g		4796639	0					
ANR	4796696	CastTarget	double		4796639	0					
ANR	4796697	Identifier	g		4796639	1					
ANR	4796698	CastExpression	( double ) gx_max_color_value		4796639	1					
ANR	4796699	CastTarget	double		4796639	0					
ANR	4796700	Identifier	gx_max_color_value		4796639	1					
ANR	4796701	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796639	3					
ANR	4796702	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796639	0		*			
ANR	4796703	PrimaryExpression	255.0		4796639	0					
ANR	4796704	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796639	1		/			
ANR	4796705	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4796639	0					
ANR	4796706	CastTarget	double		4796639	0					
ANR	4796707	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4796639	1		&			
ANR	4796708	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		4796639	0		>>			
ANR	4796709	Identifier	rv		4796639	0					
ANR	4796710	MemberAccess	upd -> cmap [ 0 ] . bitshf		4796639	1					
ANR	4796711	ArrayIndexing	upd -> cmap [ 0 ]		4796639	0					
ANR	4796712	PtrMemberAccess	upd -> cmap		4796639	0					
ANR	4796713	Identifier	upd		4796639	0					
ANR	4796714	Identifier	cmap		4796639	1					
ANR	4796715	PrimaryExpression	0		4796639	1					
ANR	4796716	Identifier	bitshf		4796639	1					
ANR	4796717	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4796639	1					
ANR	4796718	ArrayIndexing	upd -> cmap [ 0 ]		4796639	0					
ANR	4796719	PtrMemberAccess	upd -> cmap		4796639	0					
ANR	4796720	Identifier	upd		4796639	0					
ANR	4796721	Identifier	cmap		4796639	1					
ANR	4796722	PrimaryExpression	0		4796639	1					
ANR	4796723	Identifier	bitmsk		4796639	1					
ANR	4796724	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4796639	1					
ANR	4796725	CastTarget	double		4796639	0					
ANR	4796726	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4796639	1					
ANR	4796727	ArrayIndexing	upd -> cmap [ 0 ]		4796639	0					
ANR	4796728	PtrMemberAccess	upd -> cmap		4796639	0					
ANR	4796729	Identifier	upd		4796639	0					
ANR	4796730	Identifier	cmap		4796639	1					
ANR	4796731	PrimaryExpression	0		4796639	1					
ANR	4796732	Identifier	bitmsk		4796639	1					
ANR	4796733	Argument	( pdev -> color_info . depth + 3 ) >> 2		4796639	4					
ANR	4796734	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4796639	0		>>			
ANR	4796735	AdditiveExpression	pdev -> color_info . depth + 3		4796639	0		+			
ANR	4796736	MemberAccess	pdev -> color_info . depth		4796639	0					
ANR	4796737	PtrMemberAccess	pdev -> color_info		4796639	0					
ANR	4796738	Identifier	pdev		4796639	0					
ANR	4796739	Identifier	color_info		4796639	1					
ANR	4796740	Identifier	depth		4796639	1					
ANR	4796741	PrimaryExpression	3		4796639	1					
ANR	4796742	PrimaryExpression	2		4796639	1					
ANR	4796743	Argument	rv		4796639	5					
ANR	4796744	Identifier	rv		4796639	0					
ANR	4796745	ReturnStatement	return rv ;	2288:3:91762:91771	4796639	6	True				
ANR	4796746	Identifier	rv		4796639	0					
ANR	4796747	ReturnType	static gx_color_index		4796639	1					
ANR	4796748	Identifier	upd_rgb_1color		4796639	2					
ANR	4796749	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		4796639	3					
ANR	4796750	Parameter	gx_device * pdev	2270:15:91223:91237	4796639	0	True				
ANR	4796751	ParameterType	gx_device *		4796639	0					
ANR	4796752	Identifier	pdev		4796639	1					
ANR	4796753	Parameter	const gx_color_value cv [ ]	2270:32:91240:91264	4796639	1	True				
ANR	4796754	ParameterType	const gx_color_value [ ]		4796639	0					
ANR	4796755	Identifier	cv		4796639	1					
ANR	4796756	CFGEntryNode	ENTRY		4796639		True				
ANR	4796757	CFGExitNode	EXIT		4796639		True				
ANR	4796758	Symbol	rv		4796639						
ANR	4796759	Symbol	upd -> cmap [ 0 ] . bitmsk		4796639						
ANR	4796760	Symbol	g		4796639						
ANR	4796761	Symbol	upd		4796639						
ANR	4796762	Symbol	pdev -> color_info . depth		4796639						
ANR	4796763	Symbol	* upd -> cmap		4796639						
ANR	4796764	Symbol	upd -> cmap [ 0 ] . bitshf		4796639						
ANR	4796765	Symbol	pdev -> color_info		4796639						
ANR	4796766	Symbol	( ( upd_device * ) pdev ) -> upd		4796639						
ANR	4796767	Symbol	upd -> cmap		4796639						
ANR	4796768	Symbol	pdev		4796639						
ANR	4796769	Symbol	cv		4796639						
ANR	4796770	Symbol	* upd		4796639						
ANR	4796771	Symbol	pdev -> memory		4796639						
ANR	4796772	Symbol	gx_max_color_value		4796639						
ANR	4796773	Symbol	* pdev		4796639						
ANR	4796774	Symbol	* cv		4796639						
ANR	4796775	Symbol	upd_truncate		4796639						
ANR	4796776	Symbol	* * upd		4796639						
ANR	4796777	Function	upd_1color_rgb	2295:0:91999:92742							
ANR	4796778	FunctionDef	"upd_1color_rgb (gx_device * pdev , gx_color_index color , gx_color_value cv [ 1 ])"		4796777	0					
ANR	4796779	CompoundStatement		2297:0:92086:92742	4796777	0					
ANR	4796780	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2298:3:92091:92138	4796777	0	True				
ANR	4796781	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4796777	0					
ANR	4796782	IdentifierDeclType	const upd_p		4796777	0					
ANR	4796783	Identifier	upd		4796777	1					
ANR	4796784	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4796777	2		=			
ANR	4796785	Identifier	upd		4796777	0					
ANR	4796786	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4796777	1					
ANR	4796787	CastExpression	( upd_device * ) pdev		4796777	0					
ANR	4796788	CastTarget	upd_device *		4796777	0					
ANR	4796789	Identifier	pdev		4796777	1					
ANR	4796790	Identifier	upd		4796777	1					
ANR	4796791	ExpressionStatement	"cv [ 0 ] = upd_expand ( upd , 0 , color )"	2302:3:92205:92236	4796777	1	True				
ANR	4796792	AssignmentExpression	"cv [ 0 ] = upd_expand ( upd , 0 , color )"		4796777	0		=			
ANR	4796793	ArrayIndexing	cv [ 0 ]		4796777	0					
ANR	4796794	Identifier	cv		4796777	0					
ANR	4796795	PrimaryExpression	0		4796777	1					
ANR	4796796	CallExpression	"upd_expand ( upd , 0 , color )"		4796777	1					
ANR	4796797	Callee	upd_expand		4796777	0					
ANR	4796798	Identifier	upd_expand		4796777	0					
ANR	4796799	ArgumentList	upd		4796777	1					
ANR	4796800	Argument	upd		4796777	0					
ANR	4796801	Identifier	upd		4796777	0					
ANR	4796802	Argument	0		4796777	1					
ANR	4796803	PrimaryExpression	0		4796777	0					
ANR	4796804	Argument	color		4796777	2					
ANR	4796805	Identifier	color		4796777	0					
ANR	4796806	ExpressionStatement	"errprintf ( pdev -> memory , ""1color_rgb: 0x%0*lx -> %5.1f -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value )"	2305:3:92276:92719	4796777	2	True				
ANR	4796807	CallExpression	"errprintf ( pdev -> memory , ""1color_rgb: 0x%0*lx -> %5.1f -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value )"		4796777	0					
ANR	4796808	Callee	errprintf		4796777	0					
ANR	4796809	Identifier	errprintf		4796777	0					
ANR	4796810	ArgumentList	pdev -> memory		4796777	1					
ANR	4796811	Argument	pdev -> memory		4796777	0					
ANR	4796812	PtrMemberAccess	pdev -> memory		4796777	0					
ANR	4796813	Identifier	pdev		4796777	0					
ANR	4796814	Identifier	memory		4796777	1					
ANR	4796815	Argument	"""1color_rgb: 0x%0*lx -> %5.1f -> (%5.1f,%5.1f,%5.1f)\\n"""		4796777	1					
ANR	4796816	PrimaryExpression	"""1color_rgb: 0x%0*lx -> %5.1f -> (%5.1f,%5.1f,%5.1f)\\n"""		4796777	0					
ANR	4796817	Argument	( pdev -> color_info . depth + 3 ) >> 2		4796777	2					
ANR	4796818	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4796777	0		>>			
ANR	4796819	AdditiveExpression	pdev -> color_info . depth + 3		4796777	0		+			
ANR	4796820	MemberAccess	pdev -> color_info . depth		4796777	0					
ANR	4796821	PtrMemberAccess	pdev -> color_info		4796777	0					
ANR	4796822	Identifier	pdev		4796777	0					
ANR	4796823	Identifier	color_info		4796777	1					
ANR	4796824	Identifier	depth		4796777	1					
ANR	4796825	PrimaryExpression	3		4796777	1					
ANR	4796826	PrimaryExpression	2		4796777	1					
ANR	4796827	Argument	color		4796777	3					
ANR	4796828	Identifier	color		4796777	0					
ANR	4796829	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796777	4					
ANR	4796830	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796777	0		*			
ANR	4796831	PrimaryExpression	255.0		4796777	0					
ANR	4796832	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796777	1		/			
ANR	4796833	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4796777	0					
ANR	4796834	CastTarget	double		4796777	0					
ANR	4796835	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4796777	1		&			
ANR	4796836	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		4796777	0		>>			
ANR	4796837	Identifier	color		4796777	0					
ANR	4796838	MemberAccess	upd -> cmap [ 0 ] . bitshf		4796777	1					
ANR	4796839	ArrayIndexing	upd -> cmap [ 0 ]		4796777	0					
ANR	4796840	PtrMemberAccess	upd -> cmap		4796777	0					
ANR	4796841	Identifier	upd		4796777	0					
ANR	4796842	Identifier	cmap		4796777	1					
ANR	4796843	PrimaryExpression	0		4796777	1					
ANR	4796844	Identifier	bitshf		4796777	1					
ANR	4796845	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4796777	1					
ANR	4796846	ArrayIndexing	upd -> cmap [ 0 ]		4796777	0					
ANR	4796847	PtrMemberAccess	upd -> cmap		4796777	0					
ANR	4796848	Identifier	upd		4796777	0					
ANR	4796849	Identifier	cmap		4796777	1					
ANR	4796850	PrimaryExpression	0		4796777	1					
ANR	4796851	Identifier	bitmsk		4796777	1					
ANR	4796852	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4796777	1					
ANR	4796853	CastTarget	double		4796777	0					
ANR	4796854	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4796777	1					
ANR	4796855	ArrayIndexing	upd -> cmap [ 0 ]		4796777	0					
ANR	4796856	PtrMemberAccess	upd -> cmap		4796777	0					
ANR	4796857	Identifier	upd		4796777	0					
ANR	4796858	Identifier	cmap		4796777	1					
ANR	4796859	PrimaryExpression	0		4796777	1					
ANR	4796860	Identifier	bitmsk		4796777	1					
ANR	4796861	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796777	5					
ANR	4796862	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796777	0		*			
ANR	4796863	PrimaryExpression	255.0		4796777	0					
ANR	4796864	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796777	1		/			
ANR	4796865	CastExpression	( double ) prgb [ 0 ]		4796777	0					
ANR	4796866	CastTarget	double		4796777	0					
ANR	4796867	ArrayIndexing	prgb [ 0 ]		4796777	1					
ANR	4796868	Identifier	prgb		4796777	0					
ANR	4796869	PrimaryExpression	0		4796777	1					
ANR	4796870	CastExpression	( double ) gx_max_color_value		4796777	1					
ANR	4796871	CastTarget	double		4796777	0					
ANR	4796872	Identifier	gx_max_color_value		4796777	1					
ANR	4796873	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796777	6					
ANR	4796874	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796777	0		*			
ANR	4796875	PrimaryExpression	255.0		4796777	0					
ANR	4796876	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796777	1		/			
ANR	4796877	CastExpression	( double ) prgb [ 0 ]		4796777	0					
ANR	4796878	CastTarget	double		4796777	0					
ANR	4796879	ArrayIndexing	prgb [ 0 ]		4796777	1					
ANR	4796880	Identifier	prgb		4796777	0					
ANR	4796881	PrimaryExpression	0		4796777	1					
ANR	4796882	CastExpression	( double ) gx_max_color_value		4796777	1					
ANR	4796883	CastTarget	double		4796777	0					
ANR	4796884	Identifier	gx_max_color_value		4796777	1					
ANR	4796885	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796777	7					
ANR	4796886	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796777	0		*			
ANR	4796887	PrimaryExpression	255.0		4796777	0					
ANR	4796888	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4796777	1		/			
ANR	4796889	CastExpression	( double ) prgb [ 0 ]		4796777	0					
ANR	4796890	CastTarget	double		4796777	0					
ANR	4796891	ArrayIndexing	prgb [ 0 ]		4796777	1					
ANR	4796892	Identifier	prgb		4796777	0					
ANR	4796893	PrimaryExpression	0		4796777	1					
ANR	4796894	CastExpression	( double ) gx_max_color_value		4796777	1					
ANR	4796895	CastTarget	double		4796777	0					
ANR	4796896	Identifier	gx_max_color_value		4796777	1					
ANR	4796897	ReturnStatement	return 0 ;	2314:3:92732:92740	4796777	3	True				
ANR	4796898	PrimaryExpression	0		4796777	0					
ANR	4796899	ReturnType	static int		4796777	1					
ANR	4796900	Identifier	upd_1color_rgb		4796777	2					
ANR	4796901	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value cv [ 1 ]"		4796777	3					
ANR	4796902	Parameter	gx_device * pdev	2296:15:92025:92039	4796777	0	True				
ANR	4796903	ParameterType	gx_device *		4796777	0					
ANR	4796904	Identifier	pdev		4796777	1					
ANR	4796905	Parameter	gx_color_index color	2296:32:92042:92061	4796777	1	True				
ANR	4796906	ParameterType	gx_color_index		4796777	0					
ANR	4796907	Identifier	color		4796777	1					
ANR	4796908	Parameter	gx_color_value cv [ 1 ]	2296:54:92064:92083	4796777	2	True				
ANR	4796909	ParameterType	gx_color_value [ 1 ]		4796777	0					
ANR	4796910	Identifier	cv		4796777	1					
ANR	4796911	CFGEntryNode	ENTRY		4796777		True				
ANR	4796912	CFGExitNode	EXIT		4796777		True				
ANR	4796913	Symbol	color		4796777						
ANR	4796914	Symbol	upd -> cmap [ 0 ] . bitmsk		4796777						
ANR	4796915	Symbol	upd		4796777						
ANR	4796916	Symbol	pdev -> color_info . depth		4796777						
ANR	4796917	Symbol	* upd -> cmap		4796777						
ANR	4796918	Symbol	prgb		4796777						
ANR	4796919	Symbol	pdev -> color_info		4796777						
ANR	4796920	Symbol	upd -> cmap [ 0 ] . bitshf		4796777						
ANR	4796921	Symbol	( ( upd_device * ) pdev ) -> upd		4796777						
ANR	4796922	Symbol	upd -> cmap		4796777						
ANR	4796923	Symbol	* prgb		4796777						
ANR	4796924	Symbol	pdev		4796777						
ANR	4796925	Symbol	cv		4796777						
ANR	4796926	Symbol	* upd		4796777						
ANR	4796927	Symbol	pdev -> memory		4796777						
ANR	4796928	Symbol	gx_max_color_value		4796777						
ANR	4796929	Symbol	* pdev		4796777						
ANR	4796930	Symbol	* cv		4796777						
ANR	4796931	Symbol	* * upd		4796777						
ANR	4796932	Symbol	upd_expand		4796777						
ANR	4796933	Function	upd_rgb_3color	2321:0:92968:94026							
ANR	4796934	FunctionDef	"upd_rgb_3color (gx_device * pdev , const gx_color_value cv [ ])"		4796933	0					
ANR	4796935	CompoundStatement		2323:0:93049:94026	4796933	0					
ANR	4796936	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2324:3:93054:93101	4796933	0	True				
ANR	4796937	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4796933	0					
ANR	4796938	IdentifierDeclType	const upd_p		4796933	0					
ANR	4796939	Identifier	upd		4796933	1					
ANR	4796940	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4796933	2		=			
ANR	4796941	Identifier	upd		4796933	0					
ANR	4796942	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4796933	1					
ANR	4796943	CastExpression	( upd_device * ) pdev		4796933	0					
ANR	4796944	CastTarget	upd_device *		4796933	0					
ANR	4796945	Identifier	pdev		4796933	1					
ANR	4796946	Identifier	upd		4796933	1					
ANR	4796947	IdentifierDeclStatement	gx_color_index rv ;	2325:3:93106:93124	4796933	1	True				
ANR	4796948	IdentifierDecl	rv		4796933	0					
ANR	4796949	IdentifierDeclType	gx_color_index		4796933	0					
ANR	4796950	Identifier	rv		4796933	1					
ANR	4796951	IdentifierDeclStatement	"gx_color_value r , g , b ;"	2326:3:93129:93151	4796933	2	True				
ANR	4796952	IdentifierDecl	r		4796933	0					
ANR	4796953	IdentifierDeclType	gx_color_value		4796933	0					
ANR	4796954	Identifier	r		4796933	1					
ANR	4796955	IdentifierDecl	g		4796933	1					
ANR	4796956	IdentifierDeclType	gx_color_value		4796933	0					
ANR	4796957	Identifier	g		4796933	1					
ANR	4796958	IdentifierDecl	b		4796933	2					
ANR	4796959	IdentifierDeclType	gx_color_value		4796933	0					
ANR	4796960	Identifier	b		4796933	1					
ANR	4796961	ExpressionStatement	r = cv [ 0 ]	2327:3:93156:93165	4796933	3	True				
ANR	4796962	AssignmentExpression	r = cv [ 0 ]		4796933	0		=			
ANR	4796963	Identifier	r		4796933	0					
ANR	4796964	ArrayIndexing	cv [ 0 ]		4796933	1					
ANR	4796965	Identifier	cv		4796933	0					
ANR	4796966	PrimaryExpression	0		4796933	1					
ANR	4796967	ExpressionStatement	g = cv [ 1 ]	2327:14:93167:93176	4796933	4	True				
ANR	4796968	AssignmentExpression	g = cv [ 1 ]		4796933	0		=			
ANR	4796969	Identifier	g		4796933	0					
ANR	4796970	ArrayIndexing	cv [ 1 ]		4796933	1					
ANR	4796971	Identifier	cv		4796933	0					
ANR	4796972	PrimaryExpression	1		4796933	1					
ANR	4796973	ExpressionStatement	b = cv [ 2 ]	2327:25:93178:93187	4796933	5	True				
ANR	4796974	AssignmentExpression	b = cv [ 2 ]		4796933	0		=			
ANR	4796975	Identifier	b		4796933	0					
ANR	4796976	ArrayIndexing	cv [ 2 ]		4796933	1					
ANR	4796977	Identifier	cv		4796933	0					
ANR	4796978	PrimaryExpression	2		4796933	1					
ANR	4796979	ExpressionStatement	"rv = upd_truncate ( upd , 0 , r ) | upd_truncate ( upd , 1 , g ) | upd_truncate ( upd , 2 , b )"	2329:3:93193:93267	4796933	6	True				
ANR	4796980	AssignmentExpression	"rv = upd_truncate ( upd , 0 , r ) | upd_truncate ( upd , 1 , g ) | upd_truncate ( upd , 2 , b )"		4796933	0		=			
ANR	4796981	Identifier	rv		4796933	0					
ANR	4796982	InclusiveOrExpression	"upd_truncate ( upd , 0 , r ) | upd_truncate ( upd , 1 , g ) | upd_truncate ( upd , 2 , b )"		4796933	1		|			
ANR	4796983	CallExpression	"upd_truncate ( upd , 0 , r )"		4796933	0					
ANR	4796984	Callee	upd_truncate		4796933	0					
ANR	4796985	Identifier	upd_truncate		4796933	0					
ANR	4796986	ArgumentList	upd		4796933	1					
ANR	4796987	Argument	upd		4796933	0					
ANR	4796988	Identifier	upd		4796933	0					
ANR	4796989	Argument	0		4796933	1					
ANR	4796990	PrimaryExpression	0		4796933	0					
ANR	4796991	Argument	r		4796933	2					
ANR	4796992	Identifier	r		4796933	0					
ANR	4796993	InclusiveOrExpression	"upd_truncate ( upd , 1 , g ) | upd_truncate ( upd , 2 , b )"		4796933	1		|			
ANR	4796994	CallExpression	"upd_truncate ( upd , 1 , g )"		4796933	0					
ANR	4796995	Callee	upd_truncate		4796933	0					
ANR	4796996	Identifier	upd_truncate		4796933	0					
ANR	4796997	ArgumentList	upd		4796933	1					
ANR	4796998	Argument	upd		4796933	0					
ANR	4796999	Identifier	upd		4796933	0					
ANR	4797000	Argument	1		4796933	1					
ANR	4797001	PrimaryExpression	1		4796933	0					
ANR	4797002	Argument	g		4796933	2					
ANR	4797003	Identifier	g		4796933	0					
ANR	4797004	CallExpression	"upd_truncate ( upd , 2 , b )"		4796933	1					
ANR	4797005	Callee	upd_truncate		4796933	0					
ANR	4797006	Identifier	upd_truncate		4796933	0					
ANR	4797007	ArgumentList	upd		4796933	1					
ANR	4797008	Argument	upd		4796933	0					
ANR	4797009	Identifier	upd		4796933	0					
ANR	4797010	Argument	2		4796933	1					
ANR	4797011	PrimaryExpression	2		4796933	0					
ANR	4797012	Argument	b		4796933	2					
ANR	4797013	Identifier	b		4796933	0					
ANR	4797014	IfStatement	if ( rv == gx_no_color_index )		4796933	7					
ANR	4797015	Condition	rv == gx_no_color_index	2330:6:93275:93297	4796933	0	True				
ANR	4797016	EqualityExpression	rv == gx_no_color_index		4796933	0		==			
ANR	4797017	Identifier	rv		4796933	0					
ANR	4797018	Identifier	gx_no_color_index		4796933	1					
ANR	4797019	ExpressionStatement	rv ^= 1	2330:31:93300:93307	4796933	1	True				
ANR	4797020	AssignmentExpression	rv ^= 1		4796933	0		^=			
ANR	4797021	Identifier	rv		4796933	0					
ANR	4797022	PrimaryExpression	1		4796933	1					
ANR	4797023	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_3color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2333:2:93346:94002	4796933	8	True				
ANR	4797024	CallExpression	"errprintf ( pdev -> memory , ""rgb_3color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		4796933	0					
ANR	4797025	Callee	errprintf		4796933	0					
ANR	4797026	Identifier	errprintf		4796933	0					
ANR	4797027	ArgumentList	pdev -> memory		4796933	1					
ANR	4797028	Argument	pdev -> memory		4796933	0					
ANR	4797029	PtrMemberAccess	pdev -> memory		4796933	0					
ANR	4797030	Identifier	pdev		4796933	0					
ANR	4797031	Identifier	memory		4796933	1					
ANR	4797032	Argument	"""rgb_3color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4796933	1					
ANR	4797033	PrimaryExpression	"""rgb_3color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4796933	0					
ANR	4797034	Argument	255.0 * ( double ) r / ( double ) gx_max_color_value		4796933	2					
ANR	4797035	MultiplicativeExpression	255.0 * ( double ) r / ( double ) gx_max_color_value		4796933	0		*			
ANR	4797036	PrimaryExpression	255.0		4796933	0					
ANR	4797037	MultiplicativeExpression	( double ) r / ( double ) gx_max_color_value		4796933	1		/			
ANR	4797038	CastExpression	( double ) r		4796933	0					
ANR	4797039	CastTarget	double		4796933	0					
ANR	4797040	Identifier	r		4796933	1					
ANR	4797041	CastExpression	( double ) gx_max_color_value		4796933	1					
ANR	4797042	CastTarget	double		4796933	0					
ANR	4797043	Identifier	gx_max_color_value		4796933	1					
ANR	4797044	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		4796933	3					
ANR	4797045	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		4796933	0		*			
ANR	4797046	PrimaryExpression	255.0		4796933	0					
ANR	4797047	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		4796933	1		/			
ANR	4797048	CastExpression	( double ) g		4796933	0					
ANR	4797049	CastTarget	double		4796933	0					
ANR	4797050	Identifier	g		4796933	1					
ANR	4797051	CastExpression	( double ) gx_max_color_value		4796933	1					
ANR	4797052	CastTarget	double		4796933	0					
ANR	4797053	Identifier	gx_max_color_value		4796933	1					
ANR	4797054	Argument	255.0 * ( double ) b / ( double ) gx_max_color_value		4796933	4					
ANR	4797055	MultiplicativeExpression	255.0 * ( double ) b / ( double ) gx_max_color_value		4796933	0		*			
ANR	4797056	PrimaryExpression	255.0		4796933	0					
ANR	4797057	MultiplicativeExpression	( double ) b / ( double ) gx_max_color_value		4796933	1		/			
ANR	4797058	CastExpression	( double ) b		4796933	0					
ANR	4797059	CastTarget	double		4796933	0					
ANR	4797060	Identifier	b		4796933	1					
ANR	4797061	CastExpression	( double ) gx_max_color_value		4796933	1					
ANR	4797062	CastTarget	double		4796933	0					
ANR	4797063	Identifier	gx_max_color_value		4796933	1					
ANR	4797064	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796933	5					
ANR	4797065	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796933	0		*			
ANR	4797066	PrimaryExpression	255.0		4796933	0					
ANR	4797067	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4796933	1		/			
ANR	4797068	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4796933	0					
ANR	4797069	CastTarget	double		4796933	0					
ANR	4797070	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4796933	1		&			
ANR	4797071	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		4796933	0		>>			
ANR	4797072	Identifier	rv		4796933	0					
ANR	4797073	MemberAccess	upd -> cmap [ 0 ] . bitshf		4796933	1					
ANR	4797074	ArrayIndexing	upd -> cmap [ 0 ]		4796933	0					
ANR	4797075	PtrMemberAccess	upd -> cmap		4796933	0					
ANR	4797076	Identifier	upd		4796933	0					
ANR	4797077	Identifier	cmap		4796933	1					
ANR	4797078	PrimaryExpression	0		4796933	1					
ANR	4797079	Identifier	bitshf		4796933	1					
ANR	4797080	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4796933	1					
ANR	4797081	ArrayIndexing	upd -> cmap [ 0 ]		4796933	0					
ANR	4797082	PtrMemberAccess	upd -> cmap		4796933	0					
ANR	4797083	Identifier	upd		4796933	0					
ANR	4797084	Identifier	cmap		4796933	1					
ANR	4797085	PrimaryExpression	0		4796933	1					
ANR	4797086	Identifier	bitmsk		4796933	1					
ANR	4797087	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4796933	1					
ANR	4797088	CastTarget	double		4796933	0					
ANR	4797089	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4796933	1					
ANR	4797090	ArrayIndexing	upd -> cmap [ 0 ]		4796933	0					
ANR	4797091	PtrMemberAccess	upd -> cmap		4796933	0					
ANR	4797092	Identifier	upd		4796933	0					
ANR	4797093	Identifier	cmap		4796933	1					
ANR	4797094	PrimaryExpression	0		4796933	1					
ANR	4797095	Identifier	bitmsk		4796933	1					
ANR	4797096	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4796933	6					
ANR	4797097	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4796933	0		*			
ANR	4797098	PrimaryExpression	255.0		4796933	0					
ANR	4797099	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4796933	1		/			
ANR	4797100	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4796933	0					
ANR	4797101	CastTarget	double		4796933	0					
ANR	4797102	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4796933	1		&			
ANR	4797103	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		4796933	0		>>			
ANR	4797104	Identifier	rv		4796933	0					
ANR	4797105	MemberAccess	upd -> cmap [ 1 ] . bitshf		4796933	1					
ANR	4797106	ArrayIndexing	upd -> cmap [ 1 ]		4796933	0					
ANR	4797107	PtrMemberAccess	upd -> cmap		4796933	0					
ANR	4797108	Identifier	upd		4796933	0					
ANR	4797109	Identifier	cmap		4796933	1					
ANR	4797110	PrimaryExpression	1		4796933	1					
ANR	4797111	Identifier	bitshf		4796933	1					
ANR	4797112	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4796933	1					
ANR	4797113	ArrayIndexing	upd -> cmap [ 1 ]		4796933	0					
ANR	4797114	PtrMemberAccess	upd -> cmap		4796933	0					
ANR	4797115	Identifier	upd		4796933	0					
ANR	4797116	Identifier	cmap		4796933	1					
ANR	4797117	PrimaryExpression	1		4796933	1					
ANR	4797118	Identifier	bitmsk		4796933	1					
ANR	4797119	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4796933	1					
ANR	4797120	CastTarget	double		4796933	0					
ANR	4797121	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4796933	1					
ANR	4797122	ArrayIndexing	upd -> cmap [ 1 ]		4796933	0					
ANR	4797123	PtrMemberAccess	upd -> cmap		4796933	0					
ANR	4797124	Identifier	upd		4796933	0					
ANR	4797125	Identifier	cmap		4796933	1					
ANR	4797126	PrimaryExpression	1		4796933	1					
ANR	4797127	Identifier	bitmsk		4796933	1					
ANR	4797128	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4796933	7					
ANR	4797129	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4796933	0		*			
ANR	4797130	PrimaryExpression	255.0		4796933	0					
ANR	4797131	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4796933	1		/			
ANR	4797132	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4796933	0					
ANR	4797133	CastTarget	double		4796933	0					
ANR	4797134	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4796933	1		&			
ANR	4797135	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		4796933	0		>>			
ANR	4797136	Identifier	rv		4796933	0					
ANR	4797137	MemberAccess	upd -> cmap [ 2 ] . bitshf		4796933	1					
ANR	4797138	ArrayIndexing	upd -> cmap [ 2 ]		4796933	0					
ANR	4797139	PtrMemberAccess	upd -> cmap		4796933	0					
ANR	4797140	Identifier	upd		4796933	0					
ANR	4797141	Identifier	cmap		4796933	1					
ANR	4797142	PrimaryExpression	2		4796933	1					
ANR	4797143	Identifier	bitshf		4796933	1					
ANR	4797144	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4796933	1					
ANR	4797145	ArrayIndexing	upd -> cmap [ 2 ]		4796933	0					
ANR	4797146	PtrMemberAccess	upd -> cmap		4796933	0					
ANR	4797147	Identifier	upd		4796933	0					
ANR	4797148	Identifier	cmap		4796933	1					
ANR	4797149	PrimaryExpression	2		4796933	1					
ANR	4797150	Identifier	bitmsk		4796933	1					
ANR	4797151	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4796933	1					
ANR	4797152	CastTarget	double		4796933	0					
ANR	4797153	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4796933	1					
ANR	4797154	ArrayIndexing	upd -> cmap [ 2 ]		4796933	0					
ANR	4797155	PtrMemberAccess	upd -> cmap		4796933	0					
ANR	4797156	Identifier	upd		4796933	0					
ANR	4797157	Identifier	cmap		4796933	1					
ANR	4797158	PrimaryExpression	2		4796933	1					
ANR	4797159	Identifier	bitmsk		4796933	1					
ANR	4797160	Argument	( pdev -> color_info . depth + 3 ) >> 2		4796933	8					
ANR	4797161	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4796933	0		>>			
ANR	4797162	AdditiveExpression	pdev -> color_info . depth + 3		4796933	0		+			
ANR	4797163	MemberAccess	pdev -> color_info . depth		4796933	0					
ANR	4797164	PtrMemberAccess	pdev -> color_info		4796933	0					
ANR	4797165	Identifier	pdev		4796933	0					
ANR	4797166	Identifier	color_info		4796933	1					
ANR	4797167	Identifier	depth		4796933	1					
ANR	4797168	PrimaryExpression	3		4796933	1					
ANR	4797169	PrimaryExpression	2		4796933	1					
ANR	4797170	Argument	rv		4796933	9					
ANR	4797171	Identifier	rv		4796933	0					
ANR	4797172	ReturnStatement	return rv ;	2347:3:94015:94024	4796933	9	True				
ANR	4797173	Identifier	rv		4796933	0					
ANR	4797174	ReturnType	static gx_color_index		4796933	1					
ANR	4797175	Identifier	upd_rgb_3color		4796933	2					
ANR	4797176	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		4796933	3					
ANR	4797177	Parameter	gx_device * pdev	2322:15:93005:93019	4796933	0	True				
ANR	4797178	ParameterType	gx_device *		4796933	0					
ANR	4797179	Identifier	pdev		4796933	1					
ANR	4797180	Parameter	const gx_color_value cv [ ]	2322:32:93022:93046	4796933	1	True				
ANR	4797181	ParameterType	const gx_color_value [ ]		4796933	0					
ANR	4797182	Identifier	cv		4796933	1					
ANR	4797183	CFGEntryNode	ENTRY		4796933		True				
ANR	4797184	CFGExitNode	EXIT		4796933		True				
ANR	4797185	Symbol	rv		4796933						
ANR	4797186	Symbol	pdev -> color_info . depth		4796933						
ANR	4797187	Symbol	* upd -> cmap		4796933						
ANR	4797188	Symbol	pdev -> color_info		4796933						
ANR	4797189	Symbol	upd -> cmap [ 0 ] . bitshf		4796933						
ANR	4797190	Symbol	( ( upd_device * ) pdev ) -> upd		4796933						
ANR	4797191	Symbol	upd -> cmap		4796933						
ANR	4797192	Symbol	pdev		4796933						
ANR	4797193	Symbol	gx_no_color_index		4796933						
ANR	4797194	Symbol	* upd		4796933						
ANR	4797195	Symbol	upd -> cmap [ 2 ] . bitmsk		4796933						
ANR	4797196	Symbol	pdev -> memory		4796933						
ANR	4797197	Symbol	upd -> cmap [ 1 ] . bitmsk		4796933						
ANR	4797198	Symbol	upd -> cmap [ 2 ] . bitshf		4796933						
ANR	4797199	Symbol	b		4796933						
ANR	4797200	Symbol	upd -> cmap [ 0 ] . bitmsk		4796933						
ANR	4797201	Symbol	g		4796933						
ANR	4797202	Symbol	upd		4796933						
ANR	4797203	Symbol	r		4796933						
ANR	4797204	Symbol	cv		4796933						
ANR	4797205	Symbol	upd -> cmap [ 1 ] . bitshf		4796933						
ANR	4797206	Symbol	gx_max_color_value		4796933						
ANR	4797207	Symbol	* pdev		4796933						
ANR	4797208	Symbol	* cv		4796933						
ANR	4797209	Symbol	upd_truncate		4796933						
ANR	4797210	Symbol	* * upd		4796933						
ANR	4797211	Function	upd_3color_rgb	2354:0:94252:95301							
ANR	4797212	FunctionDef	"upd_3color_rgb (gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ])"		4797211	0					
ANR	4797213	CompoundStatement		2356:0:94341:95301	4797211	0					
ANR	4797214	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2357:3:94346:94393	4797211	0	True				
ANR	4797215	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4797211	0					
ANR	4797216	IdentifierDeclType	const upd_p		4797211	0					
ANR	4797217	Identifier	upd		4797211	1					
ANR	4797218	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4797211	2		=			
ANR	4797219	Identifier	upd		4797211	0					
ANR	4797220	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4797211	1					
ANR	4797221	CastExpression	( upd_device * ) pdev		4797211	0					
ANR	4797222	CastTarget	upd_device *		4797211	0					
ANR	4797223	Identifier	pdev		4797211	1					
ANR	4797224	Identifier	upd		4797211	1					
ANR	4797225	ExpressionStatement	"prgb [ 0 ] = upd_expand ( upd , 0 , color )"	2359:3:94399:94432	4797211	1	True				
ANR	4797226	AssignmentExpression	"prgb [ 0 ] = upd_expand ( upd , 0 , color )"		4797211	0		=			
ANR	4797227	ArrayIndexing	prgb [ 0 ]		4797211	0					
ANR	4797228	Identifier	prgb		4797211	0					
ANR	4797229	PrimaryExpression	0		4797211	1					
ANR	4797230	CallExpression	"upd_expand ( upd , 0 , color )"		4797211	1					
ANR	4797231	Callee	upd_expand		4797211	0					
ANR	4797232	Identifier	upd_expand		4797211	0					
ANR	4797233	ArgumentList	upd		4797211	1					
ANR	4797234	Argument	upd		4797211	0					
ANR	4797235	Identifier	upd		4797211	0					
ANR	4797236	Argument	0		4797211	1					
ANR	4797237	PrimaryExpression	0		4797211	0					
ANR	4797238	Argument	color		4797211	2					
ANR	4797239	Identifier	color		4797211	0					
ANR	4797240	ExpressionStatement	"prgb [ 1 ] = upd_expand ( upd , 1 , color )"	2360:3:94437:94470	4797211	2	True				
ANR	4797241	AssignmentExpression	"prgb [ 1 ] = upd_expand ( upd , 1 , color )"		4797211	0		=			
ANR	4797242	ArrayIndexing	prgb [ 1 ]		4797211	0					
ANR	4797243	Identifier	prgb		4797211	0					
ANR	4797244	PrimaryExpression	1		4797211	1					
ANR	4797245	CallExpression	"upd_expand ( upd , 1 , color )"		4797211	1					
ANR	4797246	Callee	upd_expand		4797211	0					
ANR	4797247	Identifier	upd_expand		4797211	0					
ANR	4797248	ArgumentList	upd		4797211	1					
ANR	4797249	Argument	upd		4797211	0					
ANR	4797250	Identifier	upd		4797211	0					
ANR	4797251	Argument	1		4797211	1					
ANR	4797252	PrimaryExpression	1		4797211	0					
ANR	4797253	Argument	color		4797211	2					
ANR	4797254	Identifier	color		4797211	0					
ANR	4797255	ExpressionStatement	"prgb [ 2 ] = upd_expand ( upd , 2 , color )"	2361:3:94475:94508	4797211	3	True				
ANR	4797256	AssignmentExpression	"prgb [ 2 ] = upd_expand ( upd , 2 , color )"		4797211	0		=			
ANR	4797257	ArrayIndexing	prgb [ 2 ]		4797211	0					
ANR	4797258	Identifier	prgb		4797211	0					
ANR	4797259	PrimaryExpression	2		4797211	1					
ANR	4797260	CallExpression	"upd_expand ( upd , 2 , color )"		4797211	1					
ANR	4797261	Callee	upd_expand		4797211	0					
ANR	4797262	Identifier	upd_expand		4797211	0					
ANR	4797263	ArgumentList	upd		4797211	1					
ANR	4797264	Argument	upd		4797211	0					
ANR	4797265	Identifier	upd		4797211	0					
ANR	4797266	Argument	2		4797211	1					
ANR	4797267	PrimaryExpression	2		4797211	0					
ANR	4797268	Argument	color		4797211	2					
ANR	4797269	Identifier	color		4797211	0					
ANR	4797270	ExpressionStatement	"errprintf ( pdev -> memory , ""3color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"	2364:3:94548:95278	4797211	4	True				
ANR	4797271	CallExpression	"errprintf ( pdev -> memory , ""3color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"		4797211	0					
ANR	4797272	Callee	errprintf		4797211	0					
ANR	4797273	Identifier	errprintf		4797211	0					
ANR	4797274	ArgumentList	pdev -> memory		4797211	1					
ANR	4797275	Argument	pdev -> memory		4797211	0					
ANR	4797276	PtrMemberAccess	pdev -> memory		4797211	0					
ANR	4797277	Identifier	pdev		4797211	0					
ANR	4797278	Identifier	memory		4797211	1					
ANR	4797279	Argument	"""3color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		4797211	1					
ANR	4797280	PrimaryExpression	"""3color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		4797211	0					
ANR	4797281	Argument	( pdev -> color_info . depth + 3 ) >> 2		4797211	2					
ANR	4797282	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4797211	0		>>			
ANR	4797283	AdditiveExpression	pdev -> color_info . depth + 3		4797211	0		+			
ANR	4797284	MemberAccess	pdev -> color_info . depth		4797211	0					
ANR	4797285	PtrMemberAccess	pdev -> color_info		4797211	0					
ANR	4797286	Identifier	pdev		4797211	0					
ANR	4797287	Identifier	color_info		4797211	1					
ANR	4797288	Identifier	depth		4797211	1					
ANR	4797289	PrimaryExpression	3		4797211	1					
ANR	4797290	PrimaryExpression	2		4797211	1					
ANR	4797291	Argument	color		4797211	3					
ANR	4797292	Identifier	color		4797211	0					
ANR	4797293	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4797211	4					
ANR	4797294	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4797211	0		*			
ANR	4797295	PrimaryExpression	255.0		4797211	0					
ANR	4797296	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4797211	1		/			
ANR	4797297	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4797211	0					
ANR	4797298	CastTarget	double		4797211	0					
ANR	4797299	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4797211	1		&			
ANR	4797300	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		4797211	0		>>			
ANR	4797301	Identifier	color		4797211	0					
ANR	4797302	MemberAccess	upd -> cmap [ 0 ] . bitshf		4797211	1					
ANR	4797303	ArrayIndexing	upd -> cmap [ 0 ]		4797211	0					
ANR	4797304	PtrMemberAccess	upd -> cmap		4797211	0					
ANR	4797305	Identifier	upd		4797211	0					
ANR	4797306	Identifier	cmap		4797211	1					
ANR	4797307	PrimaryExpression	0		4797211	1					
ANR	4797308	Identifier	bitshf		4797211	1					
ANR	4797309	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4797211	1					
ANR	4797310	ArrayIndexing	upd -> cmap [ 0 ]		4797211	0					
ANR	4797311	PtrMemberAccess	upd -> cmap		4797211	0					
ANR	4797312	Identifier	upd		4797211	0					
ANR	4797313	Identifier	cmap		4797211	1					
ANR	4797314	PrimaryExpression	0		4797211	1					
ANR	4797315	Identifier	bitmsk		4797211	1					
ANR	4797316	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4797211	1					
ANR	4797317	CastTarget	double		4797211	0					
ANR	4797318	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4797211	1					
ANR	4797319	ArrayIndexing	upd -> cmap [ 0 ]		4797211	0					
ANR	4797320	PtrMemberAccess	upd -> cmap		4797211	0					
ANR	4797321	Identifier	upd		4797211	0					
ANR	4797322	Identifier	cmap		4797211	1					
ANR	4797323	PrimaryExpression	0		4797211	1					
ANR	4797324	Identifier	bitmsk		4797211	1					
ANR	4797325	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4797211	5					
ANR	4797326	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4797211	0		*			
ANR	4797327	PrimaryExpression	255.0		4797211	0					
ANR	4797328	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4797211	1		/			
ANR	4797329	CastExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4797211	0					
ANR	4797330	CastTarget	double		4797211	0					
ANR	4797331	BitAndExpression	( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4797211	1		&			
ANR	4797332	ShiftExpression	color >> upd -> cmap [ 1 ] . bitshf		4797211	0		>>			
ANR	4797333	Identifier	color		4797211	0					
ANR	4797334	MemberAccess	upd -> cmap [ 1 ] . bitshf		4797211	1					
ANR	4797335	ArrayIndexing	upd -> cmap [ 1 ]		4797211	0					
ANR	4797336	PtrMemberAccess	upd -> cmap		4797211	0					
ANR	4797337	Identifier	upd		4797211	0					
ANR	4797338	Identifier	cmap		4797211	1					
ANR	4797339	PrimaryExpression	1		4797211	1					
ANR	4797340	Identifier	bitshf		4797211	1					
ANR	4797341	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4797211	1					
ANR	4797342	ArrayIndexing	upd -> cmap [ 1 ]		4797211	0					
ANR	4797343	PtrMemberAccess	upd -> cmap		4797211	0					
ANR	4797344	Identifier	upd		4797211	0					
ANR	4797345	Identifier	cmap		4797211	1					
ANR	4797346	PrimaryExpression	1		4797211	1					
ANR	4797347	Identifier	bitmsk		4797211	1					
ANR	4797348	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4797211	1					
ANR	4797349	CastTarget	double		4797211	0					
ANR	4797350	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4797211	1					
ANR	4797351	ArrayIndexing	upd -> cmap [ 1 ]		4797211	0					
ANR	4797352	PtrMemberAccess	upd -> cmap		4797211	0					
ANR	4797353	Identifier	upd		4797211	0					
ANR	4797354	Identifier	cmap		4797211	1					
ANR	4797355	PrimaryExpression	1		4797211	1					
ANR	4797356	Identifier	bitmsk		4797211	1					
ANR	4797357	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4797211	6					
ANR	4797358	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4797211	0		*			
ANR	4797359	PrimaryExpression	255.0		4797211	0					
ANR	4797360	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4797211	1		/			
ANR	4797361	CastExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4797211	0					
ANR	4797362	CastTarget	double		4797211	0					
ANR	4797363	BitAndExpression	( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4797211	1		&			
ANR	4797364	ShiftExpression	color >> upd -> cmap [ 2 ] . bitshf		4797211	0		>>			
ANR	4797365	Identifier	color		4797211	0					
ANR	4797366	MemberAccess	upd -> cmap [ 2 ] . bitshf		4797211	1					
ANR	4797367	ArrayIndexing	upd -> cmap [ 2 ]		4797211	0					
ANR	4797368	PtrMemberAccess	upd -> cmap		4797211	0					
ANR	4797369	Identifier	upd		4797211	0					
ANR	4797370	Identifier	cmap		4797211	1					
ANR	4797371	PrimaryExpression	2		4797211	1					
ANR	4797372	Identifier	bitshf		4797211	1					
ANR	4797373	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4797211	1					
ANR	4797374	ArrayIndexing	upd -> cmap [ 2 ]		4797211	0					
ANR	4797375	PtrMemberAccess	upd -> cmap		4797211	0					
ANR	4797376	Identifier	upd		4797211	0					
ANR	4797377	Identifier	cmap		4797211	1					
ANR	4797378	PrimaryExpression	2		4797211	1					
ANR	4797379	Identifier	bitmsk		4797211	1					
ANR	4797380	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4797211	1					
ANR	4797381	CastTarget	double		4797211	0					
ANR	4797382	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4797211	1					
ANR	4797383	ArrayIndexing	upd -> cmap [ 2 ]		4797211	0					
ANR	4797384	PtrMemberAccess	upd -> cmap		4797211	0					
ANR	4797385	Identifier	upd		4797211	0					
ANR	4797386	Identifier	cmap		4797211	1					
ANR	4797387	PrimaryExpression	2		4797211	1					
ANR	4797388	Identifier	bitmsk		4797211	1					
ANR	4797389	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4797211	7					
ANR	4797390	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4797211	0		*			
ANR	4797391	PrimaryExpression	255.0		4797211	0					
ANR	4797392	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4797211	1		/			
ANR	4797393	CastExpression	( double ) prgb [ 0 ]		4797211	0					
ANR	4797394	CastTarget	double		4797211	0					
ANR	4797395	ArrayIndexing	prgb [ 0 ]		4797211	1					
ANR	4797396	Identifier	prgb		4797211	0					
ANR	4797397	PrimaryExpression	0		4797211	1					
ANR	4797398	CastExpression	( double ) gx_max_color_value		4797211	1					
ANR	4797399	CastTarget	double		4797211	0					
ANR	4797400	Identifier	gx_max_color_value		4797211	1					
ANR	4797401	Argument	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4797211	8					
ANR	4797402	MultiplicativeExpression	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4797211	0		*			
ANR	4797403	PrimaryExpression	255.0		4797211	0					
ANR	4797404	MultiplicativeExpression	( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4797211	1		/			
ANR	4797405	CastExpression	( double ) prgb [ 1 ]		4797211	0					
ANR	4797406	CastTarget	double		4797211	0					
ANR	4797407	ArrayIndexing	prgb [ 1 ]		4797211	1					
ANR	4797408	Identifier	prgb		4797211	0					
ANR	4797409	PrimaryExpression	1		4797211	1					
ANR	4797410	CastExpression	( double ) gx_max_color_value		4797211	1					
ANR	4797411	CastTarget	double		4797211	0					
ANR	4797412	Identifier	gx_max_color_value		4797211	1					
ANR	4797413	Argument	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4797211	9					
ANR	4797414	MultiplicativeExpression	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4797211	0		*			
ANR	4797415	PrimaryExpression	255.0		4797211	0					
ANR	4797416	MultiplicativeExpression	( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4797211	1		/			
ANR	4797417	CastExpression	( double ) prgb [ 2 ]		4797211	0					
ANR	4797418	CastTarget	double		4797211	0					
ANR	4797419	ArrayIndexing	prgb [ 2 ]		4797211	1					
ANR	4797420	Identifier	prgb		4797211	0					
ANR	4797421	PrimaryExpression	2		4797211	1					
ANR	4797422	CastExpression	( double ) gx_max_color_value		4797211	1					
ANR	4797423	CastTarget	double		4797211	0					
ANR	4797424	Identifier	gx_max_color_value		4797211	1					
ANR	4797425	ReturnStatement	return 0 ;	2379:3:95291:95299	4797211	5	True				
ANR	4797426	PrimaryExpression	0		4797211	0					
ANR	4797427	ReturnType	static int		4797211	1					
ANR	4797428	Identifier	upd_3color_rgb		4797211	2					
ANR	4797429	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ]"		4797211	3					
ANR	4797430	Parameter	gx_device * pdev	2355:15:94278:94292	4797211	0	True				
ANR	4797431	ParameterType	gx_device *		4797211	0					
ANR	4797432	Identifier	pdev		4797211	1					
ANR	4797433	Parameter	gx_color_index color	2355:32:94295:94314	4797211	1	True				
ANR	4797434	ParameterType	gx_color_index		4797211	0					
ANR	4797435	Identifier	color		4797211	1					
ANR	4797436	Parameter	gx_color_value prgb [ 3 ]	2355:54:94317:94338	4797211	2	True				
ANR	4797437	ParameterType	gx_color_value [ 3 ]		4797211	0					
ANR	4797438	Identifier	prgb		4797211	1					
ANR	4797439	CFGEntryNode	ENTRY		4797211		True				
ANR	4797440	CFGExitNode	EXIT		4797211		True				
ANR	4797441	Symbol	upd -> cmap [ 2 ] . bitshf		4797211						
ANR	4797442	Symbol	color		4797211						
ANR	4797443	Symbol	upd -> cmap [ 0 ] . bitmsk		4797211						
ANR	4797444	Symbol	upd		4797211						
ANR	4797445	Symbol	pdev -> color_info . depth		4797211						
ANR	4797446	Symbol	prgb		4797211						
ANR	4797447	Symbol	* upd -> cmap		4797211						
ANR	4797448	Symbol	upd -> cmap [ 0 ] . bitshf		4797211						
ANR	4797449	Symbol	pdev -> color_info		4797211						
ANR	4797450	Symbol	( ( upd_device * ) pdev ) -> upd		4797211						
ANR	4797451	Symbol	upd -> cmap		4797211						
ANR	4797452	Symbol	* prgb		4797211						
ANR	4797453	Symbol	pdev		4797211						
ANR	4797454	Symbol	* upd		4797211						
ANR	4797455	Symbol	upd -> cmap [ 2 ] . bitmsk		4797211						
ANR	4797456	Symbol	upd -> cmap [ 1 ] . bitshf		4797211						
ANR	4797457	Symbol	pdev -> memory		4797211						
ANR	4797458	Symbol	gx_max_color_value		4797211						
ANR	4797459	Symbol	* pdev		4797211						
ANR	4797460	Symbol	upd -> cmap [ 1 ] . bitmsk		4797211						
ANR	4797461	Symbol	* * upd		4797211						
ANR	4797462	Symbol	upd_expand		4797211						
ANR	4797463	Function	upd_rgb_4color	2386:0:95527:96989							
ANR	4797464	FunctionDef	"upd_rgb_4color (gx_device * pdev , const gx_color_value cv [ ])"		4797463	0					
ANR	4797465	CompoundStatement		2388:0:95608:96989	4797463	0					
ANR	4797466	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2389:3:95613:95660	4797463	0	True				
ANR	4797467	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4797463	0					
ANR	4797468	IdentifierDeclType	const upd_p		4797463	0					
ANR	4797469	Identifier	upd		4797463	1					
ANR	4797470	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4797463	2		=			
ANR	4797471	Identifier	upd		4797463	0					
ANR	4797472	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4797463	1					
ANR	4797473	CastExpression	( upd_device * ) pdev		4797463	0					
ANR	4797474	CastTarget	upd_device *		4797463	0					
ANR	4797475	Identifier	pdev		4797463	1					
ANR	4797476	Identifier	upd		4797463	1					
ANR	4797477	IdentifierDeclStatement	gx_color_index rv ;	2390:3:95665:95683	4797463	1	True				
ANR	4797478	IdentifierDecl	rv		4797463	0					
ANR	4797479	IdentifierDeclType	gx_color_index		4797463	0					
ANR	4797480	Identifier	rv		4797463	1					
ANR	4797481	IdentifierDeclStatement	"gx_color_value r , g , b ;"	2391:3:95688:95710	4797463	2	True				
ANR	4797482	IdentifierDecl	r		4797463	0					
ANR	4797483	IdentifierDeclType	gx_color_value		4797463	0					
ANR	4797484	Identifier	r		4797463	1					
ANR	4797485	IdentifierDecl	g		4797463	1					
ANR	4797486	IdentifierDeclType	gx_color_value		4797463	0					
ANR	4797487	Identifier	g		4797463	1					
ANR	4797488	IdentifierDecl	b		4797463	2					
ANR	4797489	IdentifierDeclType	gx_color_value		4797463	0					
ANR	4797490	Identifier	b		4797463	1					
ANR	4797491	ExpressionStatement	r = cv [ 0 ]	2393:3:95716:95725	4797463	3	True				
ANR	4797492	AssignmentExpression	r = cv [ 0 ]		4797463	0		=			
ANR	4797493	Identifier	r		4797463	0					
ANR	4797494	ArrayIndexing	cv [ 0 ]		4797463	1					
ANR	4797495	Identifier	cv		4797463	0					
ANR	4797496	PrimaryExpression	0		4797463	1					
ANR	4797497	ExpressionStatement	g = cv [ 1 ]	2393:14:95727:95736	4797463	4	True				
ANR	4797498	AssignmentExpression	g = cv [ 1 ]		4797463	0		=			
ANR	4797499	Identifier	g		4797463	0					
ANR	4797500	ArrayIndexing	cv [ 1 ]		4797463	1					
ANR	4797501	Identifier	cv		4797463	0					
ANR	4797502	PrimaryExpression	1		4797463	1					
ANR	4797503	ExpressionStatement	b = cv [ 2 ]	2393:25:95738:95747	4797463	5	True				
ANR	4797504	AssignmentExpression	b = cv [ 2 ]		4797463	0		=			
ANR	4797505	Identifier	b		4797463	0					
ANR	4797506	ArrayIndexing	cv [ 2 ]		4797463	1					
ANR	4797507	Identifier	cv		4797463	0					
ANR	4797508	PrimaryExpression	2		4797463	1					
ANR	4797509	IfStatement	if ( ( r == g ) && ( g == b ) )		4797463	6					
ANR	4797510	Condition	( r == g ) && ( g == b )	2395:6:95756:95775	4797463	0	True				
ANR	4797511	AndExpression	( r == g ) && ( g == b )		4797463	0		&&			
ANR	4797512	EqualityExpression	r == g		4797463	0		==			
ANR	4797513	Identifier	r		4797463	0					
ANR	4797514	Identifier	g		4797463	1					
ANR	4797515	EqualityExpression	g == b		4797463	1		==			
ANR	4797516	Identifier	g		4797463	0					
ANR	4797517	Identifier	b		4797463	1					
ANR	4797518	CompoundStatement		8:28:169:169	4797463	1					
ANR	4797519	ExpressionStatement	"rv = upd_truncate ( upd , 0 , r )"	2397:6:95787:95813	4797463	0	True				
ANR	4797520	AssignmentExpression	"rv = upd_truncate ( upd , 0 , r )"		4797463	0		=			
ANR	4797521	Identifier	rv		4797463	0					
ANR	4797522	CallExpression	"upd_truncate ( upd , 0 , r )"		4797463	1					
ANR	4797523	Callee	upd_truncate		4797463	0					
ANR	4797524	Identifier	upd_truncate		4797463	0					
ANR	4797525	ArgumentList	upd		4797463	1					
ANR	4797526	Argument	upd		4797463	0					
ANR	4797527	Identifier	upd		4797463	0					
ANR	4797528	Argument	0		4797463	1					
ANR	4797529	PrimaryExpression	0		4797463	0					
ANR	4797530	Argument	r		4797463	2					
ANR	4797531	Identifier	r		4797463	0					
ANR	4797532	ElseStatement	else		4797463	0					
ANR	4797533	CompoundStatement		14:6:226:258	4797463	0					
ANR	4797534	IdentifierDeclStatement	gx_color_value w = g < r ? g : r ;	2401:6:95835:95867	4797463	0	True				
ANR	4797535	IdentifierDecl	w = g < r ? g : r		4797463	0					
ANR	4797536	IdentifierDeclType	gx_color_value		4797463	0					
ANR	4797537	Identifier	w		4797463	1					
ANR	4797538	AssignmentExpression	w = g < r ? g : r		4797463	2		=			
ANR	4797539	Identifier	w		4797463	0					
ANR	4797540	ConditionalExpression	g < r ? g : r		4797463	1					
ANR	4797541	Condition	g < r		4797463	0					
ANR	4797542	RelationalExpression	g < r		4797463	0		<			
ANR	4797543	Identifier	g		4797463	0					
ANR	4797544	Identifier	r		4797463	1					
ANR	4797545	Identifier	g		4797463	1					
ANR	4797546	Identifier	r		4797463	2					
ANR	4797547	ExpressionStatement	w = w < b ? w : b	2401:40:95869:95886	4797463	1	True				
ANR	4797548	AssignmentExpression	w = w < b ? w : b		4797463	0		=			
ANR	4797549	Identifier	w		4797463	0					
ANR	4797550	ConditionalExpression	w < b ? w : b		4797463	1					
ANR	4797551	Condition	w < b		4797463	0					
ANR	4797552	RelationalExpression	w < b		4797463	0		<			
ANR	4797553	Identifier	w		4797463	0					
ANR	4797554	Identifier	b		4797463	1					
ANR	4797555	Identifier	w		4797463	1					
ANR	4797556	Identifier	b		4797463	2					
ANR	4797557	ExpressionStatement	"rv = upd_truncate ( upd , 0 , w ) | upd_truncate ( upd , 1 , r ) | upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"	2403:6:95909:96018	4797463	2	True				
ANR	4797558	AssignmentExpression	"rv = upd_truncate ( upd , 0 , w ) | upd_truncate ( upd , 1 , r ) | upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"		4797463	0		=			
ANR	4797559	Identifier	rv		4797463	0					
ANR	4797560	InclusiveOrExpression	"upd_truncate ( upd , 0 , w ) | upd_truncate ( upd , 1 , r ) | upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"		4797463	1		|			
ANR	4797561	CallExpression	"upd_truncate ( upd , 0 , w )"		4797463	0					
ANR	4797562	Callee	upd_truncate		4797463	0					
ANR	4797563	Identifier	upd_truncate		4797463	0					
ANR	4797564	ArgumentList	upd		4797463	1					
ANR	4797565	Argument	upd		4797463	0					
ANR	4797566	Identifier	upd		4797463	0					
ANR	4797567	Argument	0		4797463	1					
ANR	4797568	PrimaryExpression	0		4797463	0					
ANR	4797569	Argument	w		4797463	2					
ANR	4797570	Identifier	w		4797463	0					
ANR	4797571	InclusiveOrExpression	"upd_truncate ( upd , 1 , r ) | upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"		4797463	1		|			
ANR	4797572	CallExpression	"upd_truncate ( upd , 1 , r )"		4797463	0					
ANR	4797573	Callee	upd_truncate		4797463	0					
ANR	4797574	Identifier	upd_truncate		4797463	0					
ANR	4797575	ArgumentList	upd		4797463	1					
ANR	4797576	Argument	upd		4797463	0					
ANR	4797577	Identifier	upd		4797463	0					
ANR	4797578	Argument	1		4797463	1					
ANR	4797579	PrimaryExpression	1		4797463	0					
ANR	4797580	Argument	r		4797463	2					
ANR	4797581	Identifier	r		4797463	0					
ANR	4797582	InclusiveOrExpression	"upd_truncate ( upd , 2 , g ) | upd_truncate ( upd , 3 , b )"		4797463	1		|			
ANR	4797583	CallExpression	"upd_truncate ( upd , 2 , g )"		4797463	0					
ANR	4797584	Callee	upd_truncate		4797463	0					
ANR	4797585	Identifier	upd_truncate		4797463	0					
ANR	4797586	ArgumentList	upd		4797463	1					
ANR	4797587	Argument	upd		4797463	0					
ANR	4797588	Identifier	upd		4797463	0					
ANR	4797589	Argument	2		4797463	1					
ANR	4797590	PrimaryExpression	2		4797463	0					
ANR	4797591	Argument	g		4797463	2					
ANR	4797592	Identifier	g		4797463	0					
ANR	4797593	CallExpression	"upd_truncate ( upd , 3 , b )"		4797463	1					
ANR	4797594	Callee	upd_truncate		4797463	0					
ANR	4797595	Identifier	upd_truncate		4797463	0					
ANR	4797596	ArgumentList	upd		4797463	1					
ANR	4797597	Argument	upd		4797463	0					
ANR	4797598	Identifier	upd		4797463	0					
ANR	4797599	Argument	3		4797463	1					
ANR	4797600	PrimaryExpression	3		4797463	0					
ANR	4797601	Argument	b		4797463	2					
ANR	4797602	Identifier	b		4797463	0					
ANR	4797603	IfStatement	if ( rv == gx_no_color_index )		4797463	3					
ANR	4797604	Condition	rv == gx_no_color_index	2408:9:96106:96128	4797463	0	True				
ANR	4797605	EqualityExpression	rv == gx_no_color_index		4797463	0		==			
ANR	4797606	Identifier	rv		4797463	0					
ANR	4797607	Identifier	gx_no_color_index		4797463	1					
ANR	4797608	ExpressionStatement	rv ^= 1	2408:34:96131:96138	4797463	1	True				
ANR	4797609	AssignmentExpression	rv ^= 1		4797463	0		^=			
ANR	4797610	Identifier	rv		4797463	0					
ANR	4797611	PrimaryExpression	1		4797463	1					
ANR	4797612	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_4color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2412:2:96182:96965	4797463	7	True				
ANR	4797613	CallExpression	"errprintf ( pdev -> memory , ""rgb_4color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		4797463	0					
ANR	4797614	Callee	errprintf		4797463	0					
ANR	4797615	Identifier	errprintf		4797463	0					
ANR	4797616	ArgumentList	pdev -> memory		4797463	1					
ANR	4797617	Argument	pdev -> memory		4797463	0					
ANR	4797618	PtrMemberAccess	pdev -> memory		4797463	0					
ANR	4797619	Identifier	pdev		4797463	0					
ANR	4797620	Identifier	memory		4797463	1					
ANR	4797621	Argument	"""rgb_4color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4797463	1					
ANR	4797622	PrimaryExpression	"""rgb_4color: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4797463	0					
ANR	4797623	Argument	255.0 * ( double ) r / ( double ) gx_max_color_value		4797463	2					
ANR	4797624	MultiplicativeExpression	255.0 * ( double ) r / ( double ) gx_max_color_value		4797463	0		*			
ANR	4797625	PrimaryExpression	255.0		4797463	0					
ANR	4797626	MultiplicativeExpression	( double ) r / ( double ) gx_max_color_value		4797463	1		/			
ANR	4797627	CastExpression	( double ) r		4797463	0					
ANR	4797628	CastTarget	double		4797463	0					
ANR	4797629	Identifier	r		4797463	1					
ANR	4797630	CastExpression	( double ) gx_max_color_value		4797463	1					
ANR	4797631	CastTarget	double		4797463	0					
ANR	4797632	Identifier	gx_max_color_value		4797463	1					
ANR	4797633	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		4797463	3					
ANR	4797634	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		4797463	0		*			
ANR	4797635	PrimaryExpression	255.0		4797463	0					
ANR	4797636	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		4797463	1		/			
ANR	4797637	CastExpression	( double ) g		4797463	0					
ANR	4797638	CastTarget	double		4797463	0					
ANR	4797639	Identifier	g		4797463	1					
ANR	4797640	CastExpression	( double ) gx_max_color_value		4797463	1					
ANR	4797641	CastTarget	double		4797463	0					
ANR	4797642	Identifier	gx_max_color_value		4797463	1					
ANR	4797643	Argument	255.0 * ( double ) b / ( double ) gx_max_color_value		4797463	4					
ANR	4797644	MultiplicativeExpression	255.0 * ( double ) b / ( double ) gx_max_color_value		4797463	0		*			
ANR	4797645	PrimaryExpression	255.0		4797463	0					
ANR	4797646	MultiplicativeExpression	( double ) b / ( double ) gx_max_color_value		4797463	1		/			
ANR	4797647	CastExpression	( double ) b		4797463	0					
ANR	4797648	CastTarget	double		4797463	0					
ANR	4797649	Identifier	b		4797463	1					
ANR	4797650	CastExpression	( double ) gx_max_color_value		4797463	1					
ANR	4797651	CastTarget	double		4797463	0					
ANR	4797652	Identifier	gx_max_color_value		4797463	1					
ANR	4797653	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4797463	5					
ANR	4797654	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4797463	0		*			
ANR	4797655	PrimaryExpression	255.0		4797463	0					
ANR	4797656	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4797463	1		/			
ANR	4797657	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4797463	0					
ANR	4797658	CastTarget	double		4797463	0					
ANR	4797659	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4797463	1		&			
ANR	4797660	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		4797463	0		>>			
ANR	4797661	Identifier	rv		4797463	0					
ANR	4797662	MemberAccess	upd -> cmap [ 1 ] . bitshf		4797463	1					
ANR	4797663	ArrayIndexing	upd -> cmap [ 1 ]		4797463	0					
ANR	4797664	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797665	Identifier	upd		4797463	0					
ANR	4797666	Identifier	cmap		4797463	1					
ANR	4797667	PrimaryExpression	1		4797463	1					
ANR	4797668	Identifier	bitshf		4797463	1					
ANR	4797669	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4797463	1					
ANR	4797670	ArrayIndexing	upd -> cmap [ 1 ]		4797463	0					
ANR	4797671	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797672	Identifier	upd		4797463	0					
ANR	4797673	Identifier	cmap		4797463	1					
ANR	4797674	PrimaryExpression	1		4797463	1					
ANR	4797675	Identifier	bitmsk		4797463	1					
ANR	4797676	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4797463	1					
ANR	4797677	CastTarget	double		4797463	0					
ANR	4797678	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4797463	1					
ANR	4797679	ArrayIndexing	upd -> cmap [ 1 ]		4797463	0					
ANR	4797680	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797681	Identifier	upd		4797463	0					
ANR	4797682	Identifier	cmap		4797463	1					
ANR	4797683	PrimaryExpression	1		4797463	1					
ANR	4797684	Identifier	bitmsk		4797463	1					
ANR	4797685	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4797463	6					
ANR	4797686	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4797463	0		*			
ANR	4797687	PrimaryExpression	255.0		4797463	0					
ANR	4797688	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4797463	1		/			
ANR	4797689	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4797463	0					
ANR	4797690	CastTarget	double		4797463	0					
ANR	4797691	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4797463	1		&			
ANR	4797692	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		4797463	0		>>			
ANR	4797693	Identifier	rv		4797463	0					
ANR	4797694	MemberAccess	upd -> cmap [ 2 ] . bitshf		4797463	1					
ANR	4797695	ArrayIndexing	upd -> cmap [ 2 ]		4797463	0					
ANR	4797696	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797697	Identifier	upd		4797463	0					
ANR	4797698	Identifier	cmap		4797463	1					
ANR	4797699	PrimaryExpression	2		4797463	1					
ANR	4797700	Identifier	bitshf		4797463	1					
ANR	4797701	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4797463	1					
ANR	4797702	ArrayIndexing	upd -> cmap [ 2 ]		4797463	0					
ANR	4797703	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797704	Identifier	upd		4797463	0					
ANR	4797705	Identifier	cmap		4797463	1					
ANR	4797706	PrimaryExpression	2		4797463	1					
ANR	4797707	Identifier	bitmsk		4797463	1					
ANR	4797708	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4797463	1					
ANR	4797709	CastTarget	double		4797463	0					
ANR	4797710	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4797463	1					
ANR	4797711	ArrayIndexing	upd -> cmap [ 2 ]		4797463	0					
ANR	4797712	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797713	Identifier	upd		4797463	0					
ANR	4797714	Identifier	cmap		4797463	1					
ANR	4797715	PrimaryExpression	2		4797463	1					
ANR	4797716	Identifier	bitmsk		4797463	1					
ANR	4797717	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4797463	7					
ANR	4797718	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4797463	0		*			
ANR	4797719	PrimaryExpression	255.0		4797463	0					
ANR	4797720	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4797463	1		/			
ANR	4797721	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		4797463	0					
ANR	4797722	CastTarget	double		4797463	0					
ANR	4797723	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		4797463	1		&			
ANR	4797724	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		4797463	0		>>			
ANR	4797725	Identifier	rv		4797463	0					
ANR	4797726	MemberAccess	upd -> cmap [ 3 ] . bitshf		4797463	1					
ANR	4797727	ArrayIndexing	upd -> cmap [ 3 ]		4797463	0					
ANR	4797728	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797729	Identifier	upd		4797463	0					
ANR	4797730	Identifier	cmap		4797463	1					
ANR	4797731	PrimaryExpression	3		4797463	1					
ANR	4797732	Identifier	bitshf		4797463	1					
ANR	4797733	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4797463	1					
ANR	4797734	ArrayIndexing	upd -> cmap [ 3 ]		4797463	0					
ANR	4797735	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797736	Identifier	upd		4797463	0					
ANR	4797737	Identifier	cmap		4797463	1					
ANR	4797738	PrimaryExpression	3		4797463	1					
ANR	4797739	Identifier	bitmsk		4797463	1					
ANR	4797740	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		4797463	1					
ANR	4797741	CastTarget	double		4797463	0					
ANR	4797742	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4797463	1					
ANR	4797743	ArrayIndexing	upd -> cmap [ 3 ]		4797463	0					
ANR	4797744	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797745	Identifier	upd		4797463	0					
ANR	4797746	Identifier	cmap		4797463	1					
ANR	4797747	PrimaryExpression	3		4797463	1					
ANR	4797748	Identifier	bitmsk		4797463	1					
ANR	4797749	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4797463	8					
ANR	4797750	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4797463	0		*			
ANR	4797751	PrimaryExpression	255.0		4797463	0					
ANR	4797752	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4797463	1		/			
ANR	4797753	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4797463	0					
ANR	4797754	CastTarget	double		4797463	0					
ANR	4797755	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4797463	1		&			
ANR	4797756	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		4797463	0		>>			
ANR	4797757	Identifier	rv		4797463	0					
ANR	4797758	MemberAccess	upd -> cmap [ 0 ] . bitshf		4797463	1					
ANR	4797759	ArrayIndexing	upd -> cmap [ 0 ]		4797463	0					
ANR	4797760	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797761	Identifier	upd		4797463	0					
ANR	4797762	Identifier	cmap		4797463	1					
ANR	4797763	PrimaryExpression	0		4797463	1					
ANR	4797764	Identifier	bitshf		4797463	1					
ANR	4797765	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4797463	1					
ANR	4797766	ArrayIndexing	upd -> cmap [ 0 ]		4797463	0					
ANR	4797767	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797768	Identifier	upd		4797463	0					
ANR	4797769	Identifier	cmap		4797463	1					
ANR	4797770	PrimaryExpression	0		4797463	1					
ANR	4797771	Identifier	bitmsk		4797463	1					
ANR	4797772	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4797463	1					
ANR	4797773	CastTarget	double		4797463	0					
ANR	4797774	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4797463	1					
ANR	4797775	ArrayIndexing	upd -> cmap [ 0 ]		4797463	0					
ANR	4797776	PtrMemberAccess	upd -> cmap		4797463	0					
ANR	4797777	Identifier	upd		4797463	0					
ANR	4797778	Identifier	cmap		4797463	1					
ANR	4797779	PrimaryExpression	0		4797463	1					
ANR	4797780	Identifier	bitmsk		4797463	1					
ANR	4797781	Argument	( pdev -> color_info . depth + 3 ) >> 2		4797463	9					
ANR	4797782	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4797463	0		>>			
ANR	4797783	AdditiveExpression	pdev -> color_info . depth + 3		4797463	0		+			
ANR	4797784	MemberAccess	pdev -> color_info . depth		4797463	0					
ANR	4797785	PtrMemberAccess	pdev -> color_info		4797463	0					
ANR	4797786	Identifier	pdev		4797463	0					
ANR	4797787	Identifier	color_info		4797463	1					
ANR	4797788	Identifier	depth		4797463	1					
ANR	4797789	PrimaryExpression	3		4797463	1					
ANR	4797790	PrimaryExpression	2		4797463	1					
ANR	4797791	Argument	rv		4797463	10					
ANR	4797792	Identifier	rv		4797463	0					
ANR	4797793	ReturnStatement	return rv ;	2428:3:96978:96987	4797463	8	True				
ANR	4797794	Identifier	rv		4797463	0					
ANR	4797795	ReturnType	static gx_color_index		4797463	1					
ANR	4797796	Identifier	upd_rgb_4color		4797463	2					
ANR	4797797	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		4797463	3					
ANR	4797798	Parameter	gx_device * pdev	2387:15:95564:95578	4797463	0	True				
ANR	4797799	ParameterType	gx_device *		4797463	0					
ANR	4797800	Identifier	pdev		4797463	1					
ANR	4797801	Parameter	const gx_color_value cv [ ]	2387:32:95581:95605	4797463	1	True				
ANR	4797802	ParameterType	const gx_color_value [ ]		4797463	0					
ANR	4797803	Identifier	cv		4797463	1					
ANR	4797804	CFGEntryNode	ENTRY		4797463		True				
ANR	4797805	CFGExitNode	EXIT		4797463		True				
ANR	4797806	Symbol	rv		4797463						
ANR	4797807	Symbol	pdev -> color_info . depth		4797463						
ANR	4797808	Symbol	* upd -> cmap		4797463						
ANR	4797809	Symbol	upd -> cmap [ 0 ] . bitshf		4797463						
ANR	4797810	Symbol	pdev -> color_info		4797463						
ANR	4797811	Symbol	( ( upd_device * ) pdev ) -> upd		4797463						
ANR	4797812	Symbol	upd -> cmap		4797463						
ANR	4797813	Symbol	pdev		4797463						
ANR	4797814	Symbol	gx_no_color_index		4797463						
ANR	4797815	Symbol	* upd		4797463						
ANR	4797816	Symbol	pdev -> memory		4797463						
ANR	4797817	Symbol	upd -> cmap [ 2 ] . bitmsk		4797463						
ANR	4797818	Symbol	upd -> cmap [ 3 ] . bitshf		4797463						
ANR	4797819	Symbol	upd -> cmap [ 1 ] . bitmsk		4797463						
ANR	4797820	Symbol	upd -> cmap [ 2 ] . bitshf		4797463						
ANR	4797821	Symbol	b		4797463						
ANR	4797822	Symbol	upd -> cmap [ 3 ] . bitmsk		4797463						
ANR	4797823	Symbol	upd -> cmap [ 0 ] . bitmsk		4797463						
ANR	4797824	Symbol	g		4797463						
ANR	4797825	Symbol	upd		4797463						
ANR	4797826	Symbol	r		4797463						
ANR	4797827	Symbol	cv		4797463						
ANR	4797828	Symbol	upd -> cmap [ 1 ] . bitshf		4797463						
ANR	4797829	Symbol	gx_max_color_value		4797463						
ANR	4797830	Symbol	w		4797463						
ANR	4797831	Symbol	* pdev		4797463						
ANR	4797832	Symbol	* cv		4797463						
ANR	4797833	Symbol	upd_truncate		4797463						
ANR	4797834	Symbol	* * upd		4797463						
ANR	4797835	Function	upd_4color_rgb	2435:0:97215:98554							
ANR	4797836	FunctionDef	"upd_4color_rgb (gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ])"		4797835	0					
ANR	4797837	CompoundStatement		2437:0:97304:98554	4797835	0					
ANR	4797838	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2438:3:97309:97356	4797835	0	True				
ANR	4797839	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4797835	0					
ANR	4797840	IdentifierDeclType	const upd_p		4797835	0					
ANR	4797841	Identifier	upd		4797835	1					
ANR	4797842	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4797835	2		=			
ANR	4797843	Identifier	upd		4797835	0					
ANR	4797844	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4797835	1					
ANR	4797845	CastExpression	( upd_device * ) pdev		4797835	0					
ANR	4797846	CastTarget	upd_device *		4797835	0					
ANR	4797847	Identifier	pdev		4797835	1					
ANR	4797848	Identifier	upd		4797835	1					
ANR	4797849	ExpressionStatement	"prgb [ 0 ] = upd_expand ( upd , 1 , color )"	2443:3:97403:97436	4797835	1	True				
ANR	4797850	AssignmentExpression	"prgb [ 0 ] = upd_expand ( upd , 1 , color )"		4797835	0		=			
ANR	4797851	ArrayIndexing	prgb [ 0 ]		4797835	0					
ANR	4797852	Identifier	prgb		4797835	0					
ANR	4797853	PrimaryExpression	0		4797835	1					
ANR	4797854	CallExpression	"upd_expand ( upd , 1 , color )"		4797835	1					
ANR	4797855	Callee	upd_expand		4797835	0					
ANR	4797856	Identifier	upd_expand		4797835	0					
ANR	4797857	ArgumentList	upd		4797835	1					
ANR	4797858	Argument	upd		4797835	0					
ANR	4797859	Identifier	upd		4797835	0					
ANR	4797860	Argument	1		4797835	1					
ANR	4797861	PrimaryExpression	1		4797835	0					
ANR	4797862	Argument	color		4797835	2					
ANR	4797863	Identifier	color		4797835	0					
ANR	4797864	ExpressionStatement	"prgb [ 1 ] = upd_expand ( upd , 2 , color )"	2444:3:97441:97474	4797835	2	True				
ANR	4797865	AssignmentExpression	"prgb [ 1 ] = upd_expand ( upd , 2 , color )"		4797835	0		=			
ANR	4797866	ArrayIndexing	prgb [ 1 ]		4797835	0					
ANR	4797867	Identifier	prgb		4797835	0					
ANR	4797868	PrimaryExpression	1		4797835	1					
ANR	4797869	CallExpression	"upd_expand ( upd , 2 , color )"		4797835	1					
ANR	4797870	Callee	upd_expand		4797835	0					
ANR	4797871	Identifier	upd_expand		4797835	0					
ANR	4797872	ArgumentList	upd		4797835	1					
ANR	4797873	Argument	upd		4797835	0					
ANR	4797874	Identifier	upd		4797835	0					
ANR	4797875	Argument	2		4797835	1					
ANR	4797876	PrimaryExpression	2		4797835	0					
ANR	4797877	Argument	color		4797835	2					
ANR	4797878	Identifier	color		4797835	0					
ANR	4797879	ExpressionStatement	"prgb [ 2 ] = upd_expand ( upd , 3 , color )"	2445:3:97479:97512	4797835	3	True				
ANR	4797880	AssignmentExpression	"prgb [ 2 ] = upd_expand ( upd , 3 , color )"		4797835	0		=			
ANR	4797881	ArrayIndexing	prgb [ 2 ]		4797835	0					
ANR	4797882	Identifier	prgb		4797835	0					
ANR	4797883	PrimaryExpression	2		4797835	1					
ANR	4797884	CallExpression	"upd_expand ( upd , 3 , color )"		4797835	1					
ANR	4797885	Callee	upd_expand		4797835	0					
ANR	4797886	Identifier	upd_expand		4797835	0					
ANR	4797887	ArgumentList	upd		4797835	1					
ANR	4797888	Argument	upd		4797835	0					
ANR	4797889	Identifier	upd		4797835	0					
ANR	4797890	Argument	3		4797835	1					
ANR	4797891	PrimaryExpression	3		4797835	0					
ANR	4797892	Argument	color		4797835	2					
ANR	4797893	Identifier	color		4797835	0					
ANR	4797894	IfStatement	if ( ! ( prgb [ 0 ] || prgb [ 1 ] || prgb [ 2 ] ) )		4797835	4					
ANR	4797895	Condition	! ( prgb [ 0 ] || prgb [ 1 ] || prgb [ 2 ] )	2448:6:97555:97586	4797835	0	True				
ANR	4797896	UnaryOperationExpression	! ( prgb [ 0 ] || prgb [ 1 ] || prgb [ 2 ] )		4797835	0					
ANR	4797897	UnaryOperator	!		4797835	0					
ANR	4797898	OrExpression	prgb [ 0 ] || prgb [ 1 ] || prgb [ 2 ]		4797835	1		||			
ANR	4797899	ArrayIndexing	prgb [ 0 ]		4797835	0					
ANR	4797900	Identifier	prgb		4797835	0					
ANR	4797901	PrimaryExpression	0		4797835	1					
ANR	4797902	OrExpression	prgb [ 1 ] || prgb [ 2 ]		4797835	1		||			
ANR	4797903	ArrayIndexing	prgb [ 1 ]		4797835	0					
ANR	4797904	Identifier	prgb		4797835	0					
ANR	4797905	PrimaryExpression	1		4797835	1					
ANR	4797906	ArrayIndexing	prgb [ 2 ]		4797835	1					
ANR	4797907	Identifier	prgb		4797835	0					
ANR	4797908	PrimaryExpression	2		4797835	1					
ANR	4797909	ExpressionStatement	"prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = upd_expand ( upd , 0 , color )"	2449:6:97595:97648	4797835	1	True				
ANR	4797910	AssignmentExpression	"prgb [ 0 ] = prgb [ 1 ] = prgb [ 2 ] = upd_expand ( upd , 0 , color )"		4797835	0		=			
ANR	4797911	ArrayIndexing	prgb [ 0 ]		4797835	0					
ANR	4797912	Identifier	prgb		4797835	0					
ANR	4797913	PrimaryExpression	0		4797835	1					
ANR	4797914	AssignmentExpression	"prgb [ 1 ] = prgb [ 2 ] = upd_expand ( upd , 0 , color )"		4797835	1		=			
ANR	4797915	ArrayIndexing	prgb [ 1 ]		4797835	0					
ANR	4797916	Identifier	prgb		4797835	0					
ANR	4797917	PrimaryExpression	1		4797835	1					
ANR	4797918	AssignmentExpression	"prgb [ 2 ] = upd_expand ( upd , 0 , color )"		4797835	1		=			
ANR	4797919	ArrayIndexing	prgb [ 2 ]		4797835	0					
ANR	4797920	Identifier	prgb		4797835	0					
ANR	4797921	PrimaryExpression	2		4797835	1					
ANR	4797922	CallExpression	"upd_expand ( upd , 0 , color )"		4797835	1					
ANR	4797923	Callee	upd_expand		4797835	0					
ANR	4797924	Identifier	upd_expand		4797835	0					
ANR	4797925	ArgumentList	upd		4797835	1					
ANR	4797926	Argument	upd		4797835	0					
ANR	4797927	Identifier	upd		4797835	0					
ANR	4797928	Argument	0		4797835	1					
ANR	4797929	PrimaryExpression	0		4797835	0					
ANR	4797930	Argument	color		4797835	2					
ANR	4797931	Identifier	color		4797835	0					
ANR	4797932	ExpressionStatement	"errprintf ( pdev -> memory , ""4color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"	2452:3:97688:98531	4797835	5	True				
ANR	4797933	CallExpression	"errprintf ( pdev -> memory , ""4color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"		4797835	0					
ANR	4797934	Callee	errprintf		4797835	0					
ANR	4797935	Identifier	errprintf		4797835	0					
ANR	4797936	ArgumentList	pdev -> memory		4797835	1					
ANR	4797937	Argument	pdev -> memory		4797835	0					
ANR	4797938	PtrMemberAccess	pdev -> memory		4797835	0					
ANR	4797939	Identifier	pdev		4797835	0					
ANR	4797940	Identifier	memory		4797835	1					
ANR	4797941	Argument	"""4color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		4797835	1					
ANR	4797942	PrimaryExpression	"""4color_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		4797835	0					
ANR	4797943	Argument	( pdev -> color_info . depth + 3 ) >> 2		4797835	2					
ANR	4797944	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4797835	0		>>			
ANR	4797945	AdditiveExpression	pdev -> color_info . depth + 3		4797835	0		+			
ANR	4797946	MemberAccess	pdev -> color_info . depth		4797835	0					
ANR	4797947	PtrMemberAccess	pdev -> color_info		4797835	0					
ANR	4797948	Identifier	pdev		4797835	0					
ANR	4797949	Identifier	color_info		4797835	1					
ANR	4797950	Identifier	depth		4797835	1					
ANR	4797951	PrimaryExpression	3		4797835	1					
ANR	4797952	PrimaryExpression	2		4797835	1					
ANR	4797953	Argument	color		4797835	3					
ANR	4797954	Identifier	color		4797835	0					
ANR	4797955	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4797835	4					
ANR	4797956	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4797835	0		*			
ANR	4797957	PrimaryExpression	255.0		4797835	0					
ANR	4797958	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4797835	1		/			
ANR	4797959	CastExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4797835	0					
ANR	4797960	CastTarget	double		4797835	0					
ANR	4797961	BitAndExpression	( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4797835	1		&			
ANR	4797962	ShiftExpression	color >> upd -> cmap [ 1 ] . bitshf		4797835	0		>>			
ANR	4797963	Identifier	color		4797835	0					
ANR	4797964	MemberAccess	upd -> cmap [ 1 ] . bitshf		4797835	1					
ANR	4797965	ArrayIndexing	upd -> cmap [ 1 ]		4797835	0					
ANR	4797966	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4797967	Identifier	upd		4797835	0					
ANR	4797968	Identifier	cmap		4797835	1					
ANR	4797969	PrimaryExpression	1		4797835	1					
ANR	4797970	Identifier	bitshf		4797835	1					
ANR	4797971	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4797835	1					
ANR	4797972	ArrayIndexing	upd -> cmap [ 1 ]		4797835	0					
ANR	4797973	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4797974	Identifier	upd		4797835	0					
ANR	4797975	Identifier	cmap		4797835	1					
ANR	4797976	PrimaryExpression	1		4797835	1					
ANR	4797977	Identifier	bitmsk		4797835	1					
ANR	4797978	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4797835	1					
ANR	4797979	CastTarget	double		4797835	0					
ANR	4797980	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4797835	1					
ANR	4797981	ArrayIndexing	upd -> cmap [ 1 ]		4797835	0					
ANR	4797982	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4797983	Identifier	upd		4797835	0					
ANR	4797984	Identifier	cmap		4797835	1					
ANR	4797985	PrimaryExpression	1		4797835	1					
ANR	4797986	Identifier	bitmsk		4797835	1					
ANR	4797987	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4797835	5					
ANR	4797988	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4797835	0		*			
ANR	4797989	PrimaryExpression	255.0		4797835	0					
ANR	4797990	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4797835	1		/			
ANR	4797991	CastExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4797835	0					
ANR	4797992	CastTarget	double		4797835	0					
ANR	4797993	BitAndExpression	( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4797835	1		&			
ANR	4797994	ShiftExpression	color >> upd -> cmap [ 2 ] . bitshf		4797835	0		>>			
ANR	4797995	Identifier	color		4797835	0					
ANR	4797996	MemberAccess	upd -> cmap [ 2 ] . bitshf		4797835	1					
ANR	4797997	ArrayIndexing	upd -> cmap [ 2 ]		4797835	0					
ANR	4797998	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4797999	Identifier	upd		4797835	0					
ANR	4798000	Identifier	cmap		4797835	1					
ANR	4798001	PrimaryExpression	2		4797835	1					
ANR	4798002	Identifier	bitshf		4797835	1					
ANR	4798003	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4797835	1					
ANR	4798004	ArrayIndexing	upd -> cmap [ 2 ]		4797835	0					
ANR	4798005	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4798006	Identifier	upd		4797835	0					
ANR	4798007	Identifier	cmap		4797835	1					
ANR	4798008	PrimaryExpression	2		4797835	1					
ANR	4798009	Identifier	bitmsk		4797835	1					
ANR	4798010	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4797835	1					
ANR	4798011	CastTarget	double		4797835	0					
ANR	4798012	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4797835	1					
ANR	4798013	ArrayIndexing	upd -> cmap [ 2 ]		4797835	0					
ANR	4798014	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4798015	Identifier	upd		4797835	0					
ANR	4798016	Identifier	cmap		4797835	1					
ANR	4798017	PrimaryExpression	2		4797835	1					
ANR	4798018	Identifier	bitmsk		4797835	1					
ANR	4798019	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4797835	6					
ANR	4798020	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4797835	0		*			
ANR	4798021	PrimaryExpression	255.0		4797835	0					
ANR	4798022	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4797835	1		/			
ANR	4798023	CastExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		4797835	0					
ANR	4798024	CastTarget	double		4797835	0					
ANR	4798025	BitAndExpression	( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		4797835	1		&			
ANR	4798026	ShiftExpression	color >> upd -> cmap [ 3 ] . bitshf		4797835	0		>>			
ANR	4798027	Identifier	color		4797835	0					
ANR	4798028	MemberAccess	upd -> cmap [ 3 ] . bitshf		4797835	1					
ANR	4798029	ArrayIndexing	upd -> cmap [ 3 ]		4797835	0					
ANR	4798030	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4798031	Identifier	upd		4797835	0					
ANR	4798032	Identifier	cmap		4797835	1					
ANR	4798033	PrimaryExpression	3		4797835	1					
ANR	4798034	Identifier	bitshf		4797835	1					
ANR	4798035	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4797835	1					
ANR	4798036	ArrayIndexing	upd -> cmap [ 3 ]		4797835	0					
ANR	4798037	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4798038	Identifier	upd		4797835	0					
ANR	4798039	Identifier	cmap		4797835	1					
ANR	4798040	PrimaryExpression	3		4797835	1					
ANR	4798041	Identifier	bitmsk		4797835	1					
ANR	4798042	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		4797835	1					
ANR	4798043	CastTarget	double		4797835	0					
ANR	4798044	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4797835	1					
ANR	4798045	ArrayIndexing	upd -> cmap [ 3 ]		4797835	0					
ANR	4798046	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4798047	Identifier	upd		4797835	0					
ANR	4798048	Identifier	cmap		4797835	1					
ANR	4798049	PrimaryExpression	3		4797835	1					
ANR	4798050	Identifier	bitmsk		4797835	1					
ANR	4798051	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4797835	7					
ANR	4798052	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4797835	0		*			
ANR	4798053	PrimaryExpression	255.0		4797835	0					
ANR	4798054	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4797835	1		/			
ANR	4798055	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4797835	0					
ANR	4798056	CastTarget	double		4797835	0					
ANR	4798057	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4797835	1		&			
ANR	4798058	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		4797835	0		>>			
ANR	4798059	Identifier	color		4797835	0					
ANR	4798060	MemberAccess	upd -> cmap [ 0 ] . bitshf		4797835	1					
ANR	4798061	ArrayIndexing	upd -> cmap [ 0 ]		4797835	0					
ANR	4798062	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4798063	Identifier	upd		4797835	0					
ANR	4798064	Identifier	cmap		4797835	1					
ANR	4798065	PrimaryExpression	0		4797835	1					
ANR	4798066	Identifier	bitshf		4797835	1					
ANR	4798067	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4797835	1					
ANR	4798068	ArrayIndexing	upd -> cmap [ 0 ]		4797835	0					
ANR	4798069	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4798070	Identifier	upd		4797835	0					
ANR	4798071	Identifier	cmap		4797835	1					
ANR	4798072	PrimaryExpression	0		4797835	1					
ANR	4798073	Identifier	bitmsk		4797835	1					
ANR	4798074	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4797835	1					
ANR	4798075	CastTarget	double		4797835	0					
ANR	4798076	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4797835	1					
ANR	4798077	ArrayIndexing	upd -> cmap [ 0 ]		4797835	0					
ANR	4798078	PtrMemberAccess	upd -> cmap		4797835	0					
ANR	4798079	Identifier	upd		4797835	0					
ANR	4798080	Identifier	cmap		4797835	1					
ANR	4798081	PrimaryExpression	0		4797835	1					
ANR	4798082	Identifier	bitmsk		4797835	1					
ANR	4798083	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4797835	8					
ANR	4798084	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4797835	0		*			
ANR	4798085	PrimaryExpression	255.0		4797835	0					
ANR	4798086	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4797835	1		/			
ANR	4798087	CastExpression	( double ) prgb [ 0 ]		4797835	0					
ANR	4798088	CastTarget	double		4797835	0					
ANR	4798089	ArrayIndexing	prgb [ 0 ]		4797835	1					
ANR	4798090	Identifier	prgb		4797835	0					
ANR	4798091	PrimaryExpression	0		4797835	1					
ANR	4798092	CastExpression	( double ) gx_max_color_value		4797835	1					
ANR	4798093	CastTarget	double		4797835	0					
ANR	4798094	Identifier	gx_max_color_value		4797835	1					
ANR	4798095	Argument	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4797835	9					
ANR	4798096	MultiplicativeExpression	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4797835	0		*			
ANR	4798097	PrimaryExpression	255.0		4797835	0					
ANR	4798098	MultiplicativeExpression	( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4797835	1		/			
ANR	4798099	CastExpression	( double ) prgb [ 1 ]		4797835	0					
ANR	4798100	CastTarget	double		4797835	0					
ANR	4798101	ArrayIndexing	prgb [ 1 ]		4797835	1					
ANR	4798102	Identifier	prgb		4797835	0					
ANR	4798103	PrimaryExpression	1		4797835	1					
ANR	4798104	CastExpression	( double ) gx_max_color_value		4797835	1					
ANR	4798105	CastTarget	double		4797835	0					
ANR	4798106	Identifier	gx_max_color_value		4797835	1					
ANR	4798107	Argument	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4797835	10					
ANR	4798108	MultiplicativeExpression	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4797835	0		*			
ANR	4798109	PrimaryExpression	255.0		4797835	0					
ANR	4798110	MultiplicativeExpression	( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4797835	1		/			
ANR	4798111	CastExpression	( double ) prgb [ 2 ]		4797835	0					
ANR	4798112	CastTarget	double		4797835	0					
ANR	4798113	ArrayIndexing	prgb [ 2 ]		4797835	1					
ANR	4798114	Identifier	prgb		4797835	0					
ANR	4798115	PrimaryExpression	2		4797835	1					
ANR	4798116	CastExpression	( double ) gx_max_color_value		4797835	1					
ANR	4798117	CastTarget	double		4797835	0					
ANR	4798118	Identifier	gx_max_color_value		4797835	1					
ANR	4798119	ReturnStatement	return 0 ;	2468:3:98544:98552	4797835	6	True				
ANR	4798120	PrimaryExpression	0		4797835	0					
ANR	4798121	ReturnType	static int		4797835	1					
ANR	4798122	Identifier	upd_4color_rgb		4797835	2					
ANR	4798123	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ]"		4797835	3					
ANR	4798124	Parameter	gx_device * pdev	2436:15:97241:97255	4797835	0	True				
ANR	4798125	ParameterType	gx_device *		4797835	0					
ANR	4798126	Identifier	pdev		4797835	1					
ANR	4798127	Parameter	gx_color_index color	2436:32:97258:97277	4797835	1	True				
ANR	4798128	ParameterType	gx_color_index		4797835	0					
ANR	4798129	Identifier	color		4797835	1					
ANR	4798130	Parameter	gx_color_value prgb [ 3 ]	2436:54:97280:97301	4797835	2	True				
ANR	4798131	ParameterType	gx_color_value [ 3 ]		4797835	0					
ANR	4798132	Identifier	prgb		4797835	1					
ANR	4798133	CFGEntryNode	ENTRY		4797835		True				
ANR	4798134	CFGExitNode	EXIT		4797835		True				
ANR	4798135	Symbol	upd -> cmap [ 2 ] . bitshf		4797835						
ANR	4798136	Symbol	upd -> cmap [ 3 ] . bitmsk		4797835						
ANR	4798137	Symbol	color		4797835						
ANR	4798138	Symbol	upd -> cmap [ 0 ] . bitmsk		4797835						
ANR	4798139	Symbol	upd		4797835						
ANR	4798140	Symbol	pdev -> color_info . depth		4797835						
ANR	4798141	Symbol	prgb		4797835						
ANR	4798142	Symbol	* upd -> cmap		4797835						
ANR	4798143	Symbol	pdev -> color_info		4797835						
ANR	4798144	Symbol	upd -> cmap [ 0 ] . bitshf		4797835						
ANR	4798145	Symbol	( ( upd_device * ) pdev ) -> upd		4797835						
ANR	4798146	Symbol	upd -> cmap		4797835						
ANR	4798147	Symbol	* prgb		4797835						
ANR	4798148	Symbol	pdev		4797835						
ANR	4798149	Symbol	* upd		4797835						
ANR	4798150	Symbol	upd -> cmap [ 2 ] . bitmsk		4797835						
ANR	4798151	Symbol	pdev -> memory		4797835						
ANR	4798152	Symbol	upd -> cmap [ 1 ] . bitshf		4797835						
ANR	4798153	Symbol	gx_max_color_value		4797835						
ANR	4798154	Symbol	upd -> cmap [ 3 ] . bitshf		4797835						
ANR	4798155	Symbol	* pdev		4797835						
ANR	4798156	Symbol	upd -> cmap [ 1 ] . bitmsk		4797835						
ANR	4798157	Symbol	* * upd		4797835						
ANR	4798158	Symbol	upd_expand		4797835						
ANR	4798159	Function	upd_cmyk_kcolor	2475:0:98780:100461							
ANR	4798160	FunctionDef	"upd_cmyk_kcolor (gx_device * pdev , const gx_color_value cv [ ])"		4798159	0					
ANR	4798161	CompoundStatement		2477:0:98862:100461	4798159	0					
ANR	4798162	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2478:3:98867:98914	4798159	0	True				
ANR	4798163	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4798159	0					
ANR	4798164	IdentifierDeclType	const upd_p		4798159	0					
ANR	4798165	Identifier	upd		4798159	1					
ANR	4798166	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4798159	2		=			
ANR	4798167	Identifier	upd		4798159	0					
ANR	4798168	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4798159	1					
ANR	4798169	CastExpression	( upd_device * ) pdev		4798159	0					
ANR	4798170	CastTarget	upd_device *		4798159	0					
ANR	4798171	Identifier	pdev		4798159	1					
ANR	4798172	Identifier	upd		4798159	1					
ANR	4798173	IdentifierDeclStatement	gx_color_index rv ;	2479:3:98919:98937	4798159	1	True				
ANR	4798174	IdentifierDecl	rv		4798159	0					
ANR	4798175	IdentifierDeclType	gx_color_index		4798159	0					
ANR	4798176	Identifier	rv		4798159	1					
ANR	4798177	IdentifierDeclStatement	gx_color_value black ;	2480:3:98942:98963	4798159	2	True				
ANR	4798178	IdentifierDecl	black		4798159	0					
ANR	4798179	IdentifierDeclType	gx_color_value		4798159	0					
ANR	4798180	Identifier	black		4798159	1					
ANR	4798181	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	2482:3:98969:98994	4798159	3	True				
ANR	4798182	IdentifierDecl	c		4798159	0					
ANR	4798183	IdentifierDeclType	gx_color_value		4798159	0					
ANR	4798184	Identifier	c		4798159	1					
ANR	4798185	IdentifierDecl	m		4798159	1					
ANR	4798186	IdentifierDeclType	gx_color_value		4798159	0					
ANR	4798187	Identifier	m		4798159	1					
ANR	4798188	IdentifierDecl	y		4798159	2					
ANR	4798189	IdentifierDeclType	gx_color_value		4798159	0					
ANR	4798190	Identifier	y		4798159	1					
ANR	4798191	IdentifierDecl	k		4798159	3					
ANR	4798192	IdentifierDeclType	gx_color_value		4798159	0					
ANR	4798193	Identifier	k		4798159	1					
ANR	4798194	ExpressionStatement	c = cv [ 0 ]	2483:3:98999:99008	4798159	4	True				
ANR	4798195	AssignmentExpression	c = cv [ 0 ]		4798159	0		=			
ANR	4798196	Identifier	c		4798159	0					
ANR	4798197	ArrayIndexing	cv [ 0 ]		4798159	1					
ANR	4798198	Identifier	cv		4798159	0					
ANR	4798199	PrimaryExpression	0		4798159	1					
ANR	4798200	ExpressionStatement	m = cv [ 1 ]	2483:14:99010:99019	4798159	5	True				
ANR	4798201	AssignmentExpression	m = cv [ 1 ]		4798159	0		=			
ANR	4798202	Identifier	m		4798159	0					
ANR	4798203	ArrayIndexing	cv [ 1 ]		4798159	1					
ANR	4798204	Identifier	cv		4798159	0					
ANR	4798205	PrimaryExpression	1		4798159	1					
ANR	4798206	ExpressionStatement	y = cv [ 2 ]	2483:25:99021:99030	4798159	6	True				
ANR	4798207	AssignmentExpression	y = cv [ 2 ]		4798159	0		=			
ANR	4798208	Identifier	y		4798159	0					
ANR	4798209	ArrayIndexing	cv [ 2 ]		4798159	1					
ANR	4798210	Identifier	cv		4798159	0					
ANR	4798211	PrimaryExpression	2		4798159	1					
ANR	4798212	ExpressionStatement	k = cv [ 3 ]	2483:36:99032:99041	4798159	7	True				
ANR	4798213	AssignmentExpression	k = cv [ 3 ]		4798159	0		=			
ANR	4798214	Identifier	k		4798159	0					
ANR	4798215	ArrayIndexing	cv [ 3 ]		4798159	1					
ANR	4798216	Identifier	cv		4798159	0					
ANR	4798217	PrimaryExpression	3		4798159	1					
ANR	4798218	IfStatement	if ( ( c == m ) && ( m == y ) )		4798159	8					
ANR	4798219	Condition	( c == m ) && ( m == y )	2485:6:99050:99069	4798159	0	True				
ANR	4798220	AndExpression	( c == m ) && ( m == y )		4798159	0		&&			
ANR	4798221	EqualityExpression	c == m		4798159	0		==			
ANR	4798222	Identifier	c		4798159	0					
ANR	4798223	Identifier	m		4798159	1					
ANR	4798224	EqualityExpression	m == y		4798159	1		==			
ANR	4798225	Identifier	m		4798159	0					
ANR	4798226	Identifier	y		4798159	1					
ANR	4798227	CompoundStatement		9:28:209:209	4798159	1					
ANR	4798228	ExpressionStatement	black = c > k ? c : k	2487:6:99081:99102	4798159	0	True				
ANR	4798229	AssignmentExpression	black = c > k ? c : k		4798159	0		=			
ANR	4798230	Identifier	black		4798159	0					
ANR	4798231	ConditionalExpression	c > k ? c : k		4798159	1					
ANR	4798232	Condition	c > k		4798159	0					
ANR	4798233	RelationalExpression	c > k		4798159	0		>			
ANR	4798234	Identifier	c		4798159	0					
ANR	4798235	Identifier	k		4798159	1					
ANR	4798236	Identifier	c		4798159	1					
ANR	4798237	Identifier	k		4798159	2					
ANR	4798238	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black )"	2488:6:99110:99140	4798159	1	True				
ANR	4798239	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black )"		4798159	0		=			
ANR	4798240	Identifier	rv		4798159	0					
ANR	4798241	CallExpression	"upd_truncate ( upd , 0 , black )"		4798159	1					
ANR	4798242	Callee	upd_truncate		4798159	0					
ANR	4798243	Identifier	upd_truncate		4798159	0					
ANR	4798244	ArgumentList	upd		4798159	1					
ANR	4798245	Argument	upd		4798159	0					
ANR	4798246	Identifier	upd		4798159	0					
ANR	4798247	Argument	0		4798159	1					
ANR	4798248	PrimaryExpression	0		4798159	0					
ANR	4798249	Argument	black		4798159	2					
ANR	4798250	Identifier	black		4798159	0					
ANR	4798251	ElseStatement	else		4798159	0					
ANR	4798252	CompoundStatement		14:10:290:290	4798159	0					
ANR	4798253	IfStatement	if ( k && ! ( c | m | y ) )		4798159	0					
ANR	4798254	Condition	k && ! ( c | m | y )	2492:9:99165:99181	4798159	0	True				
ANR	4798255	AndExpression	k && ! ( c | m | y )		4798159	0		&&			
ANR	4798256	Identifier	k		4798159	0					
ANR	4798257	UnaryOperationExpression	! ( c | m | y )		4798159	1					
ANR	4798258	UnaryOperator	!		4798159	0					
ANR	4798259	InclusiveOrExpression	c | m | y		4798159	1		|			
ANR	4798260	Identifier	c		4798159	0					
ANR	4798261	InclusiveOrExpression	m | y		4798159	1		|			
ANR	4798262	Identifier	m		4798159	0					
ANR	4798263	Identifier	y		4798159	1					
ANR	4798264	CompoundStatement		16:28:321:321	4798159	1					
ANR	4798265	ExpressionStatement	black = k	2493:9:99195:99204	4798159	0	True				
ANR	4798266	AssignmentExpression	black = k		4798159	0		=			
ANR	4798267	Identifier	black		4798159	0					
ANR	4798268	Identifier	k		4798159	1					
ANR	4798269	ElseStatement	else		4798159	0					
ANR	4798270	CompoundStatement		18:13:356:356	4798159	0					
ANR	4798271	ExpressionStatement	black = c < m ? c : m	2495:9:99230:99259	4798159	0	True				
ANR	4798272	AssignmentExpression	black = c < m ? c : m		4798159	0		=			
ANR	4798273	Identifier	black		4798159	0					
ANR	4798274	ConditionalExpression	c < m ? c : m		4798159	1					
ANR	4798275	Condition	c < m		4798159	0					
ANR	4798276	RelationalExpression	c < m		4798159	0		<			
ANR	4798277	Identifier	c		4798159	0					
ANR	4798278	Identifier	m		4798159	1					
ANR	4798279	Identifier	c		4798159	1					
ANR	4798280	Identifier	m		4798159	2					
ANR	4798281	ExpressionStatement	black = black < y ? black : y	2496:9:99270:99299	4798159	1	True				
ANR	4798282	AssignmentExpression	black = black < y ? black : y		4798159	0		=			
ANR	4798283	Identifier	black		4798159	0					
ANR	4798284	ConditionalExpression	black < y ? black : y		4798159	1					
ANR	4798285	Condition	black < y		4798159	0					
ANR	4798286	RelationalExpression	black < y		4798159	0		<			
ANR	4798287	Identifier	black		4798159	0					
ANR	4798288	Identifier	y		4798159	1					
ANR	4798289	Identifier	black		4798159	1					
ANR	4798290	Identifier	y		4798159	2					
ANR	4798291	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"	2499:6:99316:99433	4798159	1	True				
ANR	4798292	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4798159	0		=			
ANR	4798293	Identifier	rv		4798159	0					
ANR	4798294	InclusiveOrExpression	"upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4798159	1		|			
ANR	4798295	CallExpression	"upd_truncate ( upd , 0 , black )"		4798159	0					
ANR	4798296	Callee	upd_truncate		4798159	0					
ANR	4798297	Identifier	upd_truncate		4798159	0					
ANR	4798298	ArgumentList	upd		4798159	1					
ANR	4798299	Argument	upd		4798159	0					
ANR	4798300	Identifier	upd		4798159	0					
ANR	4798301	Argument	0		4798159	1					
ANR	4798302	PrimaryExpression	0		4798159	0					
ANR	4798303	Argument	black		4798159	2					
ANR	4798304	Identifier	black		4798159	0					
ANR	4798305	InclusiveOrExpression	"upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4798159	1		|			
ANR	4798306	CallExpression	"upd_truncate ( upd , 1 , c )"		4798159	0					
ANR	4798307	Callee	upd_truncate		4798159	0					
ANR	4798308	Identifier	upd_truncate		4798159	0					
ANR	4798309	ArgumentList	upd		4798159	1					
ANR	4798310	Argument	upd		4798159	0					
ANR	4798311	Identifier	upd		4798159	0					
ANR	4798312	Argument	1		4798159	1					
ANR	4798313	PrimaryExpression	1		4798159	0					
ANR	4798314	Argument	c		4798159	2					
ANR	4798315	Identifier	c		4798159	0					
ANR	4798316	InclusiveOrExpression	"upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4798159	1		|			
ANR	4798317	CallExpression	"upd_truncate ( upd , 2 , m )"		4798159	0					
ANR	4798318	Callee	upd_truncate		4798159	0					
ANR	4798319	Identifier	upd_truncate		4798159	0					
ANR	4798320	ArgumentList	upd		4798159	1					
ANR	4798321	Argument	upd		4798159	0					
ANR	4798322	Identifier	upd		4798159	0					
ANR	4798323	Argument	2		4798159	1					
ANR	4798324	PrimaryExpression	2		4798159	0					
ANR	4798325	Argument	m		4798159	2					
ANR	4798326	Identifier	m		4798159	0					
ANR	4798327	CallExpression	"upd_truncate ( upd , 3 , y )"		4798159	1					
ANR	4798328	Callee	upd_truncate		4798159	0					
ANR	4798329	Identifier	upd_truncate		4798159	0					
ANR	4798330	ArgumentList	upd		4798159	1					
ANR	4798331	Argument	upd		4798159	0					
ANR	4798332	Identifier	upd		4798159	0					
ANR	4798333	Argument	3		4798159	1					
ANR	4798334	PrimaryExpression	3		4798159	0					
ANR	4798335	Argument	y		4798159	2					
ANR	4798336	Identifier	y		4798159	0					
ANR	4798337	IfStatement	if ( rv == gx_no_color_index )		4798159	2					
ANR	4798338	Condition	rv == gx_no_color_index	2504:9:99521:99543	4798159	0	True				
ANR	4798339	EqualityExpression	rv == gx_no_color_index		4798159	0		==			
ANR	4798340	Identifier	rv		4798159	0					
ANR	4798341	Identifier	gx_no_color_index		4798159	1					
ANR	4798342	ExpressionStatement	rv ^= 1	2504:34:99546:99553	4798159	1	True				
ANR	4798343	AssignmentExpression	rv ^= 1		4798159	0		^=			
ANR	4798344	Identifier	rv		4798159	0					
ANR	4798345	PrimaryExpression	1		4798159	1					
ANR	4798346	ExpressionStatement	"errprintf ( pdev -> memory , ""cmyk_kcolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2508:2:99597:100437	4798159	9	True				
ANR	4798347	CallExpression	"errprintf ( pdev -> memory , ""cmyk_kcolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		4798159	0					
ANR	4798348	Callee	errprintf		4798159	0					
ANR	4798349	Identifier	errprintf		4798159	0					
ANR	4798350	ArgumentList	pdev -> memory		4798159	1					
ANR	4798351	Argument	pdev -> memory		4798159	0					
ANR	4798352	PtrMemberAccess	pdev -> memory		4798159	0					
ANR	4798353	Identifier	pdev		4798159	0					
ANR	4798354	Identifier	memory		4798159	1					
ANR	4798355	Argument	"""cmyk_kcolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4798159	1					
ANR	4798356	PrimaryExpression	"""cmyk_kcolor: (%5.1f,%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4798159	0					
ANR	4798357	Argument	255.0 * ( double ) c / ( double ) gx_max_color_value		4798159	2					
ANR	4798358	MultiplicativeExpression	255.0 * ( double ) c / ( double ) gx_max_color_value		4798159	0		*			
ANR	4798359	PrimaryExpression	255.0		4798159	0					
ANR	4798360	MultiplicativeExpression	( double ) c / ( double ) gx_max_color_value		4798159	1		/			
ANR	4798361	CastExpression	( double ) c		4798159	0					
ANR	4798362	CastTarget	double		4798159	0					
ANR	4798363	Identifier	c		4798159	1					
ANR	4798364	CastExpression	( double ) gx_max_color_value		4798159	1					
ANR	4798365	CastTarget	double		4798159	0					
ANR	4798366	Identifier	gx_max_color_value		4798159	1					
ANR	4798367	Argument	255.0 * ( double ) m / ( double ) gx_max_color_value		4798159	3					
ANR	4798368	MultiplicativeExpression	255.0 * ( double ) m / ( double ) gx_max_color_value		4798159	0		*			
ANR	4798369	PrimaryExpression	255.0		4798159	0					
ANR	4798370	MultiplicativeExpression	( double ) m / ( double ) gx_max_color_value		4798159	1		/			
ANR	4798371	CastExpression	( double ) m		4798159	0					
ANR	4798372	CastTarget	double		4798159	0					
ANR	4798373	Identifier	m		4798159	1					
ANR	4798374	CastExpression	( double ) gx_max_color_value		4798159	1					
ANR	4798375	CastTarget	double		4798159	0					
ANR	4798376	Identifier	gx_max_color_value		4798159	1					
ANR	4798377	Argument	255.0 * ( double ) y / ( double ) gx_max_color_value		4798159	4					
ANR	4798378	MultiplicativeExpression	255.0 * ( double ) y / ( double ) gx_max_color_value		4798159	0		*			
ANR	4798379	PrimaryExpression	255.0		4798159	0					
ANR	4798380	MultiplicativeExpression	( double ) y / ( double ) gx_max_color_value		4798159	1		/			
ANR	4798381	CastExpression	( double ) y		4798159	0					
ANR	4798382	CastTarget	double		4798159	0					
ANR	4798383	Identifier	y		4798159	1					
ANR	4798384	CastExpression	( double ) gx_max_color_value		4798159	1					
ANR	4798385	CastTarget	double		4798159	0					
ANR	4798386	Identifier	gx_max_color_value		4798159	1					
ANR	4798387	Argument	255.0 * ( double ) k / ( double ) gx_max_color_value		4798159	5					
ANR	4798388	MultiplicativeExpression	255.0 * ( double ) k / ( double ) gx_max_color_value		4798159	0		*			
ANR	4798389	PrimaryExpression	255.0		4798159	0					
ANR	4798390	MultiplicativeExpression	( double ) k / ( double ) gx_max_color_value		4798159	1		/			
ANR	4798391	CastExpression	( double ) k		4798159	0					
ANR	4798392	CastTarget	double		4798159	0					
ANR	4798393	Identifier	k		4798159	1					
ANR	4798394	CastExpression	( double ) gx_max_color_value		4798159	1					
ANR	4798395	CastTarget	double		4798159	0					
ANR	4798396	Identifier	gx_max_color_value		4798159	1					
ANR	4798397	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4798159	6					
ANR	4798398	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4798159	0		*			
ANR	4798399	PrimaryExpression	255.0		4798159	0					
ANR	4798400	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4798159	1		/			
ANR	4798401	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4798159	0					
ANR	4798402	CastTarget	double		4798159	0					
ANR	4798403	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4798159	1		&			
ANR	4798404	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		4798159	0		>>			
ANR	4798405	Identifier	rv		4798159	0					
ANR	4798406	MemberAccess	upd -> cmap [ 1 ] . bitshf		4798159	1					
ANR	4798407	ArrayIndexing	upd -> cmap [ 1 ]		4798159	0					
ANR	4798408	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798409	Identifier	upd		4798159	0					
ANR	4798410	Identifier	cmap		4798159	1					
ANR	4798411	PrimaryExpression	1		4798159	1					
ANR	4798412	Identifier	bitshf		4798159	1					
ANR	4798413	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4798159	1					
ANR	4798414	ArrayIndexing	upd -> cmap [ 1 ]		4798159	0					
ANR	4798415	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798416	Identifier	upd		4798159	0					
ANR	4798417	Identifier	cmap		4798159	1					
ANR	4798418	PrimaryExpression	1		4798159	1					
ANR	4798419	Identifier	bitmsk		4798159	1					
ANR	4798420	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4798159	1					
ANR	4798421	CastTarget	double		4798159	0					
ANR	4798422	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4798159	1					
ANR	4798423	ArrayIndexing	upd -> cmap [ 1 ]		4798159	0					
ANR	4798424	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798425	Identifier	upd		4798159	0					
ANR	4798426	Identifier	cmap		4798159	1					
ANR	4798427	PrimaryExpression	1		4798159	1					
ANR	4798428	Identifier	bitmsk		4798159	1					
ANR	4798429	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4798159	7					
ANR	4798430	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4798159	0		*			
ANR	4798431	PrimaryExpression	255.0		4798159	0					
ANR	4798432	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4798159	1		/			
ANR	4798433	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4798159	0					
ANR	4798434	CastTarget	double		4798159	0					
ANR	4798435	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4798159	1		&			
ANR	4798436	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		4798159	0		>>			
ANR	4798437	Identifier	rv		4798159	0					
ANR	4798438	MemberAccess	upd -> cmap [ 2 ] . bitshf		4798159	1					
ANR	4798439	ArrayIndexing	upd -> cmap [ 2 ]		4798159	0					
ANR	4798440	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798441	Identifier	upd		4798159	0					
ANR	4798442	Identifier	cmap		4798159	1					
ANR	4798443	PrimaryExpression	2		4798159	1					
ANR	4798444	Identifier	bitshf		4798159	1					
ANR	4798445	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4798159	1					
ANR	4798446	ArrayIndexing	upd -> cmap [ 2 ]		4798159	0					
ANR	4798447	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798448	Identifier	upd		4798159	0					
ANR	4798449	Identifier	cmap		4798159	1					
ANR	4798450	PrimaryExpression	2		4798159	1					
ANR	4798451	Identifier	bitmsk		4798159	1					
ANR	4798452	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4798159	1					
ANR	4798453	CastTarget	double		4798159	0					
ANR	4798454	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4798159	1					
ANR	4798455	ArrayIndexing	upd -> cmap [ 2 ]		4798159	0					
ANR	4798456	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798457	Identifier	upd		4798159	0					
ANR	4798458	Identifier	cmap		4798159	1					
ANR	4798459	PrimaryExpression	2		4798159	1					
ANR	4798460	Identifier	bitmsk		4798159	1					
ANR	4798461	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4798159	8					
ANR	4798462	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4798159	0		*			
ANR	4798463	PrimaryExpression	255.0		4798159	0					
ANR	4798464	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4798159	1		/			
ANR	4798465	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		4798159	0					
ANR	4798466	CastTarget	double		4798159	0					
ANR	4798467	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		4798159	1		&			
ANR	4798468	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		4798159	0		>>			
ANR	4798469	Identifier	rv		4798159	0					
ANR	4798470	MemberAccess	upd -> cmap [ 3 ] . bitshf		4798159	1					
ANR	4798471	ArrayIndexing	upd -> cmap [ 3 ]		4798159	0					
ANR	4798472	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798473	Identifier	upd		4798159	0					
ANR	4798474	Identifier	cmap		4798159	1					
ANR	4798475	PrimaryExpression	3		4798159	1					
ANR	4798476	Identifier	bitshf		4798159	1					
ANR	4798477	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4798159	1					
ANR	4798478	ArrayIndexing	upd -> cmap [ 3 ]		4798159	0					
ANR	4798479	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798480	Identifier	upd		4798159	0					
ANR	4798481	Identifier	cmap		4798159	1					
ANR	4798482	PrimaryExpression	3		4798159	1					
ANR	4798483	Identifier	bitmsk		4798159	1					
ANR	4798484	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		4798159	1					
ANR	4798485	CastTarget	double		4798159	0					
ANR	4798486	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4798159	1					
ANR	4798487	ArrayIndexing	upd -> cmap [ 3 ]		4798159	0					
ANR	4798488	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798489	Identifier	upd		4798159	0					
ANR	4798490	Identifier	cmap		4798159	1					
ANR	4798491	PrimaryExpression	3		4798159	1					
ANR	4798492	Identifier	bitmsk		4798159	1					
ANR	4798493	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4798159	9					
ANR	4798494	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4798159	0		*			
ANR	4798495	PrimaryExpression	255.0		4798159	0					
ANR	4798496	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4798159	1		/			
ANR	4798497	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4798159	0					
ANR	4798498	CastTarget	double		4798159	0					
ANR	4798499	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4798159	1		&			
ANR	4798500	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		4798159	0		>>			
ANR	4798501	Identifier	rv		4798159	0					
ANR	4798502	MemberAccess	upd -> cmap [ 0 ] . bitshf		4798159	1					
ANR	4798503	ArrayIndexing	upd -> cmap [ 0 ]		4798159	0					
ANR	4798504	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798505	Identifier	upd		4798159	0					
ANR	4798506	Identifier	cmap		4798159	1					
ANR	4798507	PrimaryExpression	0		4798159	1					
ANR	4798508	Identifier	bitshf		4798159	1					
ANR	4798509	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4798159	1					
ANR	4798510	ArrayIndexing	upd -> cmap [ 0 ]		4798159	0					
ANR	4798511	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798512	Identifier	upd		4798159	0					
ANR	4798513	Identifier	cmap		4798159	1					
ANR	4798514	PrimaryExpression	0		4798159	1					
ANR	4798515	Identifier	bitmsk		4798159	1					
ANR	4798516	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4798159	1					
ANR	4798517	CastTarget	double		4798159	0					
ANR	4798518	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4798159	1					
ANR	4798519	ArrayIndexing	upd -> cmap [ 0 ]		4798159	0					
ANR	4798520	PtrMemberAccess	upd -> cmap		4798159	0					
ANR	4798521	Identifier	upd		4798159	0					
ANR	4798522	Identifier	cmap		4798159	1					
ANR	4798523	PrimaryExpression	0		4798159	1					
ANR	4798524	Identifier	bitmsk		4798159	1					
ANR	4798525	Argument	( pdev -> color_info . depth + 3 ) >> 2		4798159	10					
ANR	4798526	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4798159	0		>>			
ANR	4798527	AdditiveExpression	pdev -> color_info . depth + 3		4798159	0		+			
ANR	4798528	MemberAccess	pdev -> color_info . depth		4798159	0					
ANR	4798529	PtrMemberAccess	pdev -> color_info		4798159	0					
ANR	4798530	Identifier	pdev		4798159	0					
ANR	4798531	Identifier	color_info		4798159	1					
ANR	4798532	Identifier	depth		4798159	1					
ANR	4798533	PrimaryExpression	3		4798159	1					
ANR	4798534	PrimaryExpression	2		4798159	1					
ANR	4798535	Argument	rv		4798159	11					
ANR	4798536	Identifier	rv		4798159	0					
ANR	4798537	ReturnStatement	return rv ;	2525:3:100450:100459	4798159	10	True				
ANR	4798538	Identifier	rv		4798159	0					
ANR	4798539	ReturnType	static gx_color_index		4798159	1					
ANR	4798540	Identifier	upd_cmyk_kcolor		4798159	2					
ANR	4798541	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		4798159	3					
ANR	4798542	Parameter	gx_device * pdev	2476:16:98818:98832	4798159	0	True				
ANR	4798543	ParameterType	gx_device *		4798159	0					
ANR	4798544	Identifier	pdev		4798159	1					
ANR	4798545	Parameter	const gx_color_value cv [ ]	2476:33:98835:98859	4798159	1	True				
ANR	4798546	ParameterType	const gx_color_value [ ]		4798159	0					
ANR	4798547	Identifier	cv		4798159	1					
ANR	4798548	CFGEntryNode	ENTRY		4798159		True				
ANR	4798549	CFGExitNode	EXIT		4798159		True				
ANR	4798550	Symbol	rv		4798159						
ANR	4798551	Symbol	pdev -> color_info . depth		4798159						
ANR	4798552	Symbol	* upd -> cmap		4798159						
ANR	4798553	Symbol	pdev -> color_info		4798159						
ANR	4798554	Symbol	upd -> cmap [ 0 ] . bitshf		4798159						
ANR	4798555	Symbol	( ( upd_device * ) pdev ) -> upd		4798159						
ANR	4798556	Symbol	upd -> cmap		4798159						
ANR	4798557	Symbol	pdev		4798159						
ANR	4798558	Symbol	gx_no_color_index		4798159						
ANR	4798559	Symbol	* upd		4798159						
ANR	4798560	Symbol	pdev -> memory		4798159						
ANR	4798561	Symbol	upd -> cmap [ 2 ] . bitmsk		4798159						
ANR	4798562	Symbol	upd -> cmap [ 3 ] . bitshf		4798159						
ANR	4798563	Symbol	upd -> cmap [ 1 ] . bitmsk		4798159						
ANR	4798564	Symbol	upd -> cmap [ 2 ] . bitshf		4798159						
ANR	4798565	Symbol	upd -> cmap [ 3 ] . bitmsk		4798159						
ANR	4798566	Symbol	c		4798159						
ANR	4798567	Symbol	upd -> cmap [ 0 ] . bitmsk		4798159						
ANR	4798568	Symbol	upd		4798159						
ANR	4798569	Symbol	black		4798159						
ANR	4798570	Symbol	k		4798159						
ANR	4798571	Symbol	m		4798159						
ANR	4798572	Symbol	cv		4798159						
ANR	4798573	Symbol	upd -> cmap [ 1 ] . bitshf		4798159						
ANR	4798574	Symbol	gx_max_color_value		4798159						
ANR	4798575	Symbol	* pdev		4798159						
ANR	4798576	Symbol	y		4798159						
ANR	4798577	Symbol	* cv		4798159						
ANR	4798578	Symbol	upd_truncate		4798159						
ANR	4798579	Symbol	* * upd		4798159						
ANR	4798580	Function	upd_kcolor_rgb	2532:0:100687:102461							
ANR	4798581	FunctionDef	"upd_kcolor_rgb (gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ])"		4798580	0					
ANR	4798582	CompoundStatement		2534:0:100776:102461	4798580	0					
ANR	4798583	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2535:3:100781:100828	4798580	0	True				
ANR	4798584	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4798580	0					
ANR	4798585	IdentifierDeclType	const upd_p		4798580	0					
ANR	4798586	Identifier	upd		4798580	1					
ANR	4798587	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4798580	2		=			
ANR	4798588	Identifier	upd		4798580	0					
ANR	4798589	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4798580	1					
ANR	4798590	CastExpression	( upd_device * ) pdev		4798580	0					
ANR	4798591	CastTarget	upd_device *		4798580	0					
ANR	4798592	Identifier	pdev		4798580	1					
ANR	4798593	Identifier	upd		4798580	1					
ANR	4798594	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	2536:3:100833:100855	4798580	1	True				
ANR	4798595	IdentifierDecl	c		4798580	0					
ANR	4798596	IdentifierDeclType	gx_color_value		4798580	0					
ANR	4798597	Identifier	c		4798580	1					
ANR	4798598	IdentifierDecl	m		4798580	1					
ANR	4798599	IdentifierDeclType	gx_color_value		4798580	0					
ANR	4798600	Identifier	m		4798580	1					
ANR	4798601	IdentifierDecl	y		4798580	2					
ANR	4798602	IdentifierDeclType	gx_color_value		4798580	0					
ANR	4798603	Identifier	y		4798580	1					
ANR	4798604	IdentifierDecl	k		4798580	3					
ANR	4798605	IdentifierDeclType	gx_color_value		4798580	0					
ANR	4798606	Identifier	k		4798580	1					
ANR	4798607	ExpressionStatement	"k = upd_expand ( upd , 0 , color )"	2541:3:100902:100929	4798580	2	True				
ANR	4798608	AssignmentExpression	"k = upd_expand ( upd , 0 , color )"		4798580	0		=			
ANR	4798609	Identifier	k		4798580	0					
ANR	4798610	CallExpression	"upd_expand ( upd , 0 , color )"		4798580	1					
ANR	4798611	Callee	upd_expand		4798580	0					
ANR	4798612	Identifier	upd_expand		4798580	0					
ANR	4798613	ArgumentList	upd		4798580	1					
ANR	4798614	Argument	upd		4798580	0					
ANR	4798615	Identifier	upd		4798580	0					
ANR	4798616	Argument	0		4798580	1					
ANR	4798617	PrimaryExpression	0		4798580	0					
ANR	4798618	Argument	color		4798580	2					
ANR	4798619	Identifier	color		4798580	0					
ANR	4798620	ExpressionStatement	"c = upd_expand ( upd , 1 , color )"	2542:3:100934:100961	4798580	3	True				
ANR	4798621	AssignmentExpression	"c = upd_expand ( upd , 1 , color )"		4798580	0		=			
ANR	4798622	Identifier	c		4798580	0					
ANR	4798623	CallExpression	"upd_expand ( upd , 1 , color )"		4798580	1					
ANR	4798624	Callee	upd_expand		4798580	0					
ANR	4798625	Identifier	upd_expand		4798580	0					
ANR	4798626	ArgumentList	upd		4798580	1					
ANR	4798627	Argument	upd		4798580	0					
ANR	4798628	Identifier	upd		4798580	0					
ANR	4798629	Argument	1		4798580	1					
ANR	4798630	PrimaryExpression	1		4798580	0					
ANR	4798631	Argument	color		4798580	2					
ANR	4798632	Identifier	color		4798580	0					
ANR	4798633	ExpressionStatement	"m = upd_expand ( upd , 2 , color )"	2543:3:100966:100993	4798580	4	True				
ANR	4798634	AssignmentExpression	"m = upd_expand ( upd , 2 , color )"		4798580	0		=			
ANR	4798635	Identifier	m		4798580	0					
ANR	4798636	CallExpression	"upd_expand ( upd , 2 , color )"		4798580	1					
ANR	4798637	Callee	upd_expand		4798580	0					
ANR	4798638	Identifier	upd_expand		4798580	0					
ANR	4798639	ArgumentList	upd		4798580	1					
ANR	4798640	Argument	upd		4798580	0					
ANR	4798641	Identifier	upd		4798580	0					
ANR	4798642	Argument	2		4798580	1					
ANR	4798643	PrimaryExpression	2		4798580	0					
ANR	4798644	Argument	color		4798580	2					
ANR	4798645	Identifier	color		4798580	0					
ANR	4798646	ExpressionStatement	"y = upd_expand ( upd , 3 , color )"	2544:3:100998:101025	4798580	5	True				
ANR	4798647	AssignmentExpression	"y = upd_expand ( upd , 3 , color )"		4798580	0		=			
ANR	4798648	Identifier	y		4798580	0					
ANR	4798649	CallExpression	"upd_expand ( upd , 3 , color )"		4798580	1					
ANR	4798650	Callee	upd_expand		4798580	0					
ANR	4798651	Identifier	upd_expand		4798580	0					
ANR	4798652	ArgumentList	upd		4798580	1					
ANR	4798653	Argument	upd		4798580	0					
ANR	4798654	Identifier	upd		4798580	0					
ANR	4798655	Argument	3		4798580	1					
ANR	4798656	PrimaryExpression	3		4798580	0					
ANR	4798657	Argument	color		4798580	2					
ANR	4798658	Identifier	color		4798580	0					
ANR	4798659	IfStatement	if ( ! ( c | m | y ) )		4798580	6					
ANR	4798660	Condition	! ( c | m | y )	2549:6:101072:101084	4798580	0	True				
ANR	4798661	UnaryOperationExpression	! ( c | m | y )		4798580	0					
ANR	4798662	UnaryOperator	!		4798580	0					
ANR	4798663	InclusiveOrExpression	c | m | y		4798580	1		|			
ANR	4798664	Identifier	c		4798580	0					
ANR	4798665	InclusiveOrExpression	m | y		4798580	1		|			
ANR	4798666	Identifier	m		4798580	0					
ANR	4798667	Identifier	y		4798580	1					
ANR	4798668	CompoundStatement		16:21:310:310	4798580	1					
ANR	4798669	ExpressionStatement	prgb [ 2 ] = prgb [ 1 ] = prgb [ 0 ] = gx_max_color_value - k	2551:6:101096:101148	4798580	0	True				
ANR	4798670	AssignmentExpression	prgb [ 2 ] = prgb [ 1 ] = prgb [ 0 ] = gx_max_color_value - k		4798580	0		=			
ANR	4798671	ArrayIndexing	prgb [ 2 ]		4798580	0					
ANR	4798672	Identifier	prgb		4798580	0					
ANR	4798673	PrimaryExpression	2		4798580	1					
ANR	4798674	AssignmentExpression	prgb [ 1 ] = prgb [ 0 ] = gx_max_color_value - k		4798580	1		=			
ANR	4798675	ArrayIndexing	prgb [ 1 ]		4798580	0					
ANR	4798676	Identifier	prgb		4798580	0					
ANR	4798677	PrimaryExpression	1		4798580	1					
ANR	4798678	AssignmentExpression	prgb [ 0 ] = gx_max_color_value - k		4798580	1		=			
ANR	4798679	ArrayIndexing	prgb [ 0 ]		4798580	0					
ANR	4798680	Identifier	prgb		4798580	0					
ANR	4798681	PrimaryExpression	0		4798580	1					
ANR	4798682	AdditiveExpression	gx_max_color_value - k		4798580	1		-			
ANR	4798683	Identifier	gx_max_color_value		4798580	0					
ANR	4798684	Identifier	k		4798580	1					
ANR	4798685	ElseStatement	else		4798580	0					
ANR	4798686	CompoundStatement		20:10:384:384	4798580	0					
ANR	4798687	ExpressionStatement	prgb [ 0 ] = gx_max_color_value - c	2554:6:101169:101201	4798580	0	True				
ANR	4798688	AssignmentExpression	prgb [ 0 ] = gx_max_color_value - c		4798580	0		=			
ANR	4798689	ArrayIndexing	prgb [ 0 ]		4798580	0					
ANR	4798690	Identifier	prgb		4798580	0					
ANR	4798691	PrimaryExpression	0		4798580	1					
ANR	4798692	AdditiveExpression	gx_max_color_value - c		4798580	1		-			
ANR	4798693	Identifier	gx_max_color_value		4798580	0					
ANR	4798694	Identifier	c		4798580	1					
ANR	4798695	ExpressionStatement	prgb [ 1 ] = gx_max_color_value - m	2555:6:101209:101241	4798580	1	True				
ANR	4798696	AssignmentExpression	prgb [ 1 ] = gx_max_color_value - m		4798580	0		=			
ANR	4798697	ArrayIndexing	prgb [ 1 ]		4798580	0					
ANR	4798698	Identifier	prgb		4798580	0					
ANR	4798699	PrimaryExpression	1		4798580	1					
ANR	4798700	AdditiveExpression	gx_max_color_value - m		4798580	1		-			
ANR	4798701	Identifier	gx_max_color_value		4798580	0					
ANR	4798702	Identifier	m		4798580	1					
ANR	4798703	ExpressionStatement	prgb [ 2 ] = gx_max_color_value - y	2556:6:101249:101281	4798580	2	True				
ANR	4798704	AssignmentExpression	prgb [ 2 ] = gx_max_color_value - y		4798580	0		=			
ANR	4798705	ArrayIndexing	prgb [ 2 ]		4798580	0					
ANR	4798706	Identifier	prgb		4798580	0					
ANR	4798707	PrimaryExpression	2		4798580	1					
ANR	4798708	AdditiveExpression	gx_max_color_value - y		4798580	1		-			
ANR	4798709	Identifier	gx_max_color_value		4798580	0					
ANR	4798710	Identifier	y		4798580	1					
ANR	4798711	ExpressionStatement	"errprintf ( pdev -> memory , ""kcolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"	2560:3:101326:102438	4798580	7	True				
ANR	4798712	CallExpression	"errprintf ( pdev -> memory , ""kcolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"" , ( pdev -> color_info . depth + 3 ) >> 2 , color , 255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , 255.0 * ( double ) c / ( double ) gx_max_color_value , 255.0 * ( double ) m / ( double ) gx_max_color_value , 255.0 * ( double ) y / ( double ) gx_max_color_value , 255.0 * ( double ) k / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value , 255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value )"		4798580	0					
ANR	4798713	Callee	errprintf		4798580	0					
ANR	4798714	Identifier	errprintf		4798580	0					
ANR	4798715	ArgumentList	pdev -> memory		4798580	1					
ANR	4798716	Argument	pdev -> memory		4798580	0					
ANR	4798717	PtrMemberAccess	pdev -> memory		4798580	0					
ANR	4798718	Identifier	pdev		4798580	0					
ANR	4798719	Identifier	memory		4798580	1					
ANR	4798720	Argument	"""kcolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		4798580	1					
ANR	4798721	PrimaryExpression	"""kcolor_rgb: 0x%0*lx -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f,%5.1f) -> (%5.1f,%5.1f,%5.1f)\\n"""		4798580	0					
ANR	4798722	Argument	( pdev -> color_info . depth + 3 ) >> 2		4798580	2					
ANR	4798723	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4798580	0		>>			
ANR	4798724	AdditiveExpression	pdev -> color_info . depth + 3		4798580	0		+			
ANR	4798725	MemberAccess	pdev -> color_info . depth		4798580	0					
ANR	4798726	PtrMemberAccess	pdev -> color_info		4798580	0					
ANR	4798727	Identifier	pdev		4798580	0					
ANR	4798728	Identifier	color_info		4798580	1					
ANR	4798729	Identifier	depth		4798580	1					
ANR	4798730	PrimaryExpression	3		4798580	1					
ANR	4798731	PrimaryExpression	2		4798580	1					
ANR	4798732	Argument	color		4798580	3					
ANR	4798733	Identifier	color		4798580	0					
ANR	4798734	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4798580	4					
ANR	4798735	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4798580	0		*			
ANR	4798736	PrimaryExpression	255.0		4798580	0					
ANR	4798737	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4798580	1		/			
ANR	4798738	CastExpression	( double ) ( ( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4798580	0					
ANR	4798739	CastTarget	double		4798580	0					
ANR	4798740	BitAndExpression	( color >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4798580	1		&			
ANR	4798741	ShiftExpression	color >> upd -> cmap [ 1 ] . bitshf		4798580	0		>>			
ANR	4798742	Identifier	color		4798580	0					
ANR	4798743	MemberAccess	upd -> cmap [ 1 ] . bitshf		4798580	1					
ANR	4798744	ArrayIndexing	upd -> cmap [ 1 ]		4798580	0					
ANR	4798745	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798746	Identifier	upd		4798580	0					
ANR	4798747	Identifier	cmap		4798580	1					
ANR	4798748	PrimaryExpression	1		4798580	1					
ANR	4798749	Identifier	bitshf		4798580	1					
ANR	4798750	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4798580	1					
ANR	4798751	ArrayIndexing	upd -> cmap [ 1 ]		4798580	0					
ANR	4798752	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798753	Identifier	upd		4798580	0					
ANR	4798754	Identifier	cmap		4798580	1					
ANR	4798755	PrimaryExpression	1		4798580	1					
ANR	4798756	Identifier	bitmsk		4798580	1					
ANR	4798757	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4798580	1					
ANR	4798758	CastTarget	double		4798580	0					
ANR	4798759	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4798580	1					
ANR	4798760	ArrayIndexing	upd -> cmap [ 1 ]		4798580	0					
ANR	4798761	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798762	Identifier	upd		4798580	0					
ANR	4798763	Identifier	cmap		4798580	1					
ANR	4798764	PrimaryExpression	1		4798580	1					
ANR	4798765	Identifier	bitmsk		4798580	1					
ANR	4798766	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4798580	5					
ANR	4798767	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4798580	0		*			
ANR	4798768	PrimaryExpression	255.0		4798580	0					
ANR	4798769	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4798580	1		/			
ANR	4798770	CastExpression	( double ) ( ( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4798580	0					
ANR	4798771	CastTarget	double		4798580	0					
ANR	4798772	BitAndExpression	( color >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4798580	1		&			
ANR	4798773	ShiftExpression	color >> upd -> cmap [ 2 ] . bitshf		4798580	0		>>			
ANR	4798774	Identifier	color		4798580	0					
ANR	4798775	MemberAccess	upd -> cmap [ 2 ] . bitshf		4798580	1					
ANR	4798776	ArrayIndexing	upd -> cmap [ 2 ]		4798580	0					
ANR	4798777	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798778	Identifier	upd		4798580	0					
ANR	4798779	Identifier	cmap		4798580	1					
ANR	4798780	PrimaryExpression	2		4798580	1					
ANR	4798781	Identifier	bitshf		4798580	1					
ANR	4798782	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4798580	1					
ANR	4798783	ArrayIndexing	upd -> cmap [ 2 ]		4798580	0					
ANR	4798784	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798785	Identifier	upd		4798580	0					
ANR	4798786	Identifier	cmap		4798580	1					
ANR	4798787	PrimaryExpression	2		4798580	1					
ANR	4798788	Identifier	bitmsk		4798580	1					
ANR	4798789	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4798580	1					
ANR	4798790	CastTarget	double		4798580	0					
ANR	4798791	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4798580	1					
ANR	4798792	ArrayIndexing	upd -> cmap [ 2 ]		4798580	0					
ANR	4798793	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798794	Identifier	upd		4798580	0					
ANR	4798795	Identifier	cmap		4798580	1					
ANR	4798796	PrimaryExpression	2		4798580	1					
ANR	4798797	Identifier	bitmsk		4798580	1					
ANR	4798798	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4798580	6					
ANR	4798799	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4798580	0		*			
ANR	4798800	PrimaryExpression	255.0		4798580	0					
ANR	4798801	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4798580	1		/			
ANR	4798802	CastExpression	( double ) ( ( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		4798580	0					
ANR	4798803	CastTarget	double		4798580	0					
ANR	4798804	BitAndExpression	( color >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		4798580	1		&			
ANR	4798805	ShiftExpression	color >> upd -> cmap [ 3 ] . bitshf		4798580	0		>>			
ANR	4798806	Identifier	color		4798580	0					
ANR	4798807	MemberAccess	upd -> cmap [ 3 ] . bitshf		4798580	1					
ANR	4798808	ArrayIndexing	upd -> cmap [ 3 ]		4798580	0					
ANR	4798809	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798810	Identifier	upd		4798580	0					
ANR	4798811	Identifier	cmap		4798580	1					
ANR	4798812	PrimaryExpression	3		4798580	1					
ANR	4798813	Identifier	bitshf		4798580	1					
ANR	4798814	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4798580	1					
ANR	4798815	ArrayIndexing	upd -> cmap [ 3 ]		4798580	0					
ANR	4798816	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798817	Identifier	upd		4798580	0					
ANR	4798818	Identifier	cmap		4798580	1					
ANR	4798819	PrimaryExpression	3		4798580	1					
ANR	4798820	Identifier	bitmsk		4798580	1					
ANR	4798821	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		4798580	1					
ANR	4798822	CastTarget	double		4798580	0					
ANR	4798823	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4798580	1					
ANR	4798824	ArrayIndexing	upd -> cmap [ 3 ]		4798580	0					
ANR	4798825	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798826	Identifier	upd		4798580	0					
ANR	4798827	Identifier	cmap		4798580	1					
ANR	4798828	PrimaryExpression	3		4798580	1					
ANR	4798829	Identifier	bitmsk		4798580	1					
ANR	4798830	Argument	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4798580	7					
ANR	4798831	MultiplicativeExpression	255.0 * ( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4798580	0		*			
ANR	4798832	PrimaryExpression	255.0		4798580	0					
ANR	4798833	MultiplicativeExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4798580	1		/			
ANR	4798834	CastExpression	( double ) ( ( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4798580	0					
ANR	4798835	CastTarget	double		4798580	0					
ANR	4798836	BitAndExpression	( color >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4798580	1		&			
ANR	4798837	ShiftExpression	color >> upd -> cmap [ 0 ] . bitshf		4798580	0		>>			
ANR	4798838	Identifier	color		4798580	0					
ANR	4798839	MemberAccess	upd -> cmap [ 0 ] . bitshf		4798580	1					
ANR	4798840	ArrayIndexing	upd -> cmap [ 0 ]		4798580	0					
ANR	4798841	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798842	Identifier	upd		4798580	0					
ANR	4798843	Identifier	cmap		4798580	1					
ANR	4798844	PrimaryExpression	0		4798580	1					
ANR	4798845	Identifier	bitshf		4798580	1					
ANR	4798846	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4798580	1					
ANR	4798847	ArrayIndexing	upd -> cmap [ 0 ]		4798580	0					
ANR	4798848	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798849	Identifier	upd		4798580	0					
ANR	4798850	Identifier	cmap		4798580	1					
ANR	4798851	PrimaryExpression	0		4798580	1					
ANR	4798852	Identifier	bitmsk		4798580	1					
ANR	4798853	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4798580	1					
ANR	4798854	CastTarget	double		4798580	0					
ANR	4798855	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4798580	1					
ANR	4798856	ArrayIndexing	upd -> cmap [ 0 ]		4798580	0					
ANR	4798857	PtrMemberAccess	upd -> cmap		4798580	0					
ANR	4798858	Identifier	upd		4798580	0					
ANR	4798859	Identifier	cmap		4798580	1					
ANR	4798860	PrimaryExpression	0		4798580	1					
ANR	4798861	Identifier	bitmsk		4798580	1					
ANR	4798862	Argument	255.0 * ( double ) c / ( double ) gx_max_color_value		4798580	8					
ANR	4798863	MultiplicativeExpression	255.0 * ( double ) c / ( double ) gx_max_color_value		4798580	0		*			
ANR	4798864	PrimaryExpression	255.0		4798580	0					
ANR	4798865	MultiplicativeExpression	( double ) c / ( double ) gx_max_color_value		4798580	1		/			
ANR	4798866	CastExpression	( double ) c		4798580	0					
ANR	4798867	CastTarget	double		4798580	0					
ANR	4798868	Identifier	c		4798580	1					
ANR	4798869	CastExpression	( double ) gx_max_color_value		4798580	1					
ANR	4798870	CastTarget	double		4798580	0					
ANR	4798871	Identifier	gx_max_color_value		4798580	1					
ANR	4798872	Argument	255.0 * ( double ) m / ( double ) gx_max_color_value		4798580	9					
ANR	4798873	MultiplicativeExpression	255.0 * ( double ) m / ( double ) gx_max_color_value		4798580	0		*			
ANR	4798874	PrimaryExpression	255.0		4798580	0					
ANR	4798875	MultiplicativeExpression	( double ) m / ( double ) gx_max_color_value		4798580	1		/			
ANR	4798876	CastExpression	( double ) m		4798580	0					
ANR	4798877	CastTarget	double		4798580	0					
ANR	4798878	Identifier	m		4798580	1					
ANR	4798879	CastExpression	( double ) gx_max_color_value		4798580	1					
ANR	4798880	CastTarget	double		4798580	0					
ANR	4798881	Identifier	gx_max_color_value		4798580	1					
ANR	4798882	Argument	255.0 * ( double ) y / ( double ) gx_max_color_value		4798580	10					
ANR	4798883	MultiplicativeExpression	255.0 * ( double ) y / ( double ) gx_max_color_value		4798580	0		*			
ANR	4798884	PrimaryExpression	255.0		4798580	0					
ANR	4798885	MultiplicativeExpression	( double ) y / ( double ) gx_max_color_value		4798580	1		/			
ANR	4798886	CastExpression	( double ) y		4798580	0					
ANR	4798887	CastTarget	double		4798580	0					
ANR	4798888	Identifier	y		4798580	1					
ANR	4798889	CastExpression	( double ) gx_max_color_value		4798580	1					
ANR	4798890	CastTarget	double		4798580	0					
ANR	4798891	Identifier	gx_max_color_value		4798580	1					
ANR	4798892	Argument	255.0 * ( double ) k / ( double ) gx_max_color_value		4798580	11					
ANR	4798893	MultiplicativeExpression	255.0 * ( double ) k / ( double ) gx_max_color_value		4798580	0		*			
ANR	4798894	PrimaryExpression	255.0		4798580	0					
ANR	4798895	MultiplicativeExpression	( double ) k / ( double ) gx_max_color_value		4798580	1		/			
ANR	4798896	CastExpression	( double ) k		4798580	0					
ANR	4798897	CastTarget	double		4798580	0					
ANR	4798898	Identifier	k		4798580	1					
ANR	4798899	CastExpression	( double ) gx_max_color_value		4798580	1					
ANR	4798900	CastTarget	double		4798580	0					
ANR	4798901	Identifier	gx_max_color_value		4798580	1					
ANR	4798902	Argument	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4798580	12					
ANR	4798903	MultiplicativeExpression	255.0 * ( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4798580	0		*			
ANR	4798904	PrimaryExpression	255.0		4798580	0					
ANR	4798905	MultiplicativeExpression	( double ) prgb [ 0 ] / ( double ) gx_max_color_value		4798580	1		/			
ANR	4798906	CastExpression	( double ) prgb [ 0 ]		4798580	0					
ANR	4798907	CastTarget	double		4798580	0					
ANR	4798908	ArrayIndexing	prgb [ 0 ]		4798580	1					
ANR	4798909	Identifier	prgb		4798580	0					
ANR	4798910	PrimaryExpression	0		4798580	1					
ANR	4798911	CastExpression	( double ) gx_max_color_value		4798580	1					
ANR	4798912	CastTarget	double		4798580	0					
ANR	4798913	Identifier	gx_max_color_value		4798580	1					
ANR	4798914	Argument	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4798580	13					
ANR	4798915	MultiplicativeExpression	255.0 * ( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4798580	0		*			
ANR	4798916	PrimaryExpression	255.0		4798580	0					
ANR	4798917	MultiplicativeExpression	( double ) prgb [ 1 ] / ( double ) gx_max_color_value		4798580	1		/			
ANR	4798918	CastExpression	( double ) prgb [ 1 ]		4798580	0					
ANR	4798919	CastTarget	double		4798580	0					
ANR	4798920	ArrayIndexing	prgb [ 1 ]		4798580	1					
ANR	4798921	Identifier	prgb		4798580	0					
ANR	4798922	PrimaryExpression	1		4798580	1					
ANR	4798923	CastExpression	( double ) gx_max_color_value		4798580	1					
ANR	4798924	CastTarget	double		4798580	0					
ANR	4798925	Identifier	gx_max_color_value		4798580	1					
ANR	4798926	Argument	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4798580	14					
ANR	4798927	MultiplicativeExpression	255.0 * ( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4798580	0		*			
ANR	4798928	PrimaryExpression	255.0		4798580	0					
ANR	4798929	MultiplicativeExpression	( double ) prgb [ 2 ] / ( double ) gx_max_color_value		4798580	1		/			
ANR	4798930	CastExpression	( double ) prgb [ 2 ]		4798580	0					
ANR	4798931	CastTarget	double		4798580	0					
ANR	4798932	ArrayIndexing	prgb [ 2 ]		4798580	1					
ANR	4798933	Identifier	prgb		4798580	0					
ANR	4798934	PrimaryExpression	2		4798580	1					
ANR	4798935	CastExpression	( double ) gx_max_color_value		4798580	1					
ANR	4798936	CastTarget	double		4798580	0					
ANR	4798937	Identifier	gx_max_color_value		4798580	1					
ANR	4798938	ReturnStatement	return 0 ;	2580:3:102451:102459	4798580	8	True				
ANR	4798939	PrimaryExpression	0		4798580	0					
ANR	4798940	ReturnType	static int		4798580	1					
ANR	4798941	Identifier	upd_kcolor_rgb		4798580	2					
ANR	4798942	ParameterList	"gx_device * pdev , gx_color_index color , gx_color_value prgb [ 3 ]"		4798580	3					
ANR	4798943	Parameter	gx_device * pdev	2533:15:100713:100727	4798580	0	True				
ANR	4798944	ParameterType	gx_device *		4798580	0					
ANR	4798945	Identifier	pdev		4798580	1					
ANR	4798946	Parameter	gx_color_index color	2533:32:100730:100749	4798580	1	True				
ANR	4798947	ParameterType	gx_color_index		4798580	0					
ANR	4798948	Identifier	color		4798580	1					
ANR	4798949	Parameter	gx_color_value prgb [ 3 ]	2533:54:100752:100773	4798580	2	True				
ANR	4798950	ParameterType	gx_color_value [ 3 ]		4798580	0					
ANR	4798951	Identifier	prgb		4798580	1					
ANR	4798952	CFGEntryNode	ENTRY		4798580		True				
ANR	4798953	CFGExitNode	EXIT		4798580		True				
ANR	4798954	Symbol	color		4798580						
ANR	4798955	Symbol	pdev -> color_info . depth		4798580						
ANR	4798956	Symbol	* upd -> cmap		4798580						
ANR	4798957	Symbol	upd -> cmap [ 0 ] . bitshf		4798580						
ANR	4798958	Symbol	pdev -> color_info		4798580						
ANR	4798959	Symbol	( ( upd_device * ) pdev ) -> upd		4798580						
ANR	4798960	Symbol	upd -> cmap		4798580						
ANR	4798961	Symbol	pdev		4798580						
ANR	4798962	Symbol	* upd		4798580						
ANR	4798963	Symbol	upd -> cmap [ 2 ] . bitmsk		4798580						
ANR	4798964	Symbol	pdev -> memory		4798580						
ANR	4798965	Symbol	upd -> cmap [ 3 ] . bitshf		4798580						
ANR	4798966	Symbol	upd -> cmap [ 1 ] . bitmsk		4798580						
ANR	4798967	Symbol	upd -> cmap [ 2 ] . bitshf		4798580						
ANR	4798968	Symbol	upd -> cmap [ 3 ] . bitmsk		4798580						
ANR	4798969	Symbol	c		4798580						
ANR	4798970	Symbol	upd -> cmap [ 0 ] . bitmsk		4798580						
ANR	4798971	Symbol	upd		4798580						
ANR	4798972	Symbol	prgb		4798580						
ANR	4798973	Symbol	k		4798580						
ANR	4798974	Symbol	m		4798580						
ANR	4798975	Symbol	* prgb		4798580						
ANR	4798976	Symbol	upd -> cmap [ 1 ] . bitshf		4798580						
ANR	4798977	Symbol	gx_max_color_value		4798580						
ANR	4798978	Symbol	* pdev		4798580						
ANR	4798979	Symbol	y		4798580						
ANR	4798980	Symbol	* * upd		4798580						
ANR	4798981	Symbol	upd_expand		4798580						
ANR	4798982	Function	upd_rgb_ovcolor	2587:0:102687:105087							
ANR	4798983	FunctionDef	"upd_rgb_ovcolor (gx_device * pdev , const gx_color_value cv [ ])"		4798982	0					
ANR	4798984	CompoundStatement		2589:0:102769:105087	4798982	0					
ANR	4798985	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2590:3:102774:102821	4798982	0	True				
ANR	4798986	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4798982	0					
ANR	4798987	IdentifierDeclType	const upd_p		4798982	0					
ANR	4798988	Identifier	upd		4798982	1					
ANR	4798989	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4798982	2		=			
ANR	4798990	Identifier	upd		4798982	0					
ANR	4798991	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4798982	1					
ANR	4798992	CastExpression	( upd_device * ) pdev		4798982	0					
ANR	4798993	CastTarget	upd_device *		4798982	0					
ANR	4798994	Identifier	pdev		4798982	1					
ANR	4798995	Identifier	upd		4798982	1					
ANR	4798996	IdentifierDeclStatement	gx_color_index rv ;	2591:3:102826:102844	4798982	1	True				
ANR	4798997	IdentifierDecl	rv		4798982	0					
ANR	4798998	IdentifierDeclType	gx_color_index		4798982	0					
ANR	4798999	Identifier	rv		4798982	1					
ANR	4799000	IdentifierDeclStatement	"gx_color_value c , m , y , black ;"	2592:3:102849:102876	4798982	2	True				
ANR	4799001	IdentifierDecl	c		4798982	0					
ANR	4799002	IdentifierDeclType	gx_color_value		4798982	0					
ANR	4799003	Identifier	c		4798982	1					
ANR	4799004	IdentifierDecl	m		4798982	1					
ANR	4799005	IdentifierDeclType	gx_color_value		4798982	0					
ANR	4799006	Identifier	m		4798982	1					
ANR	4799007	IdentifierDecl	y		4798982	2					
ANR	4799008	IdentifierDeclType	gx_color_value		4798982	0					
ANR	4799009	Identifier	y		4798982	1					
ANR	4799010	IdentifierDecl	black		4798982	3					
ANR	4799011	IdentifierDeclType	gx_color_value		4798982	0					
ANR	4799012	Identifier	black		4798982	1					
ANR	4799013	IdentifierDeclStatement	"gx_color_value r , g , b ;"	2593:3:102881:102903	4798982	3	True				
ANR	4799014	IdentifierDecl	r		4798982	0					
ANR	4799015	IdentifierDeclType	gx_color_value		4798982	0					
ANR	4799016	Identifier	r		4798982	1					
ANR	4799017	IdentifierDecl	g		4798982	1					
ANR	4799018	IdentifierDeclType	gx_color_value		4798982	0					
ANR	4799019	Identifier	g		4798982	1					
ANR	4799020	IdentifierDecl	b		4798982	2					
ANR	4799021	IdentifierDeclType	gx_color_value		4798982	0					
ANR	4799022	Identifier	b		4798982	1					
ANR	4799023	ExpressionStatement	r = cv [ 0 ]	2594:3:102908:102917	4798982	4	True				
ANR	4799024	AssignmentExpression	r = cv [ 0 ]		4798982	0		=			
ANR	4799025	Identifier	r		4798982	0					
ANR	4799026	ArrayIndexing	cv [ 0 ]		4798982	1					
ANR	4799027	Identifier	cv		4798982	0					
ANR	4799028	PrimaryExpression	0		4798982	1					
ANR	4799029	ExpressionStatement	g = cv [ 1 ]	2594:14:102919:102928	4798982	5	True				
ANR	4799030	AssignmentExpression	g = cv [ 1 ]		4798982	0		=			
ANR	4799031	Identifier	g		4798982	0					
ANR	4799032	ArrayIndexing	cv [ 1 ]		4798982	1					
ANR	4799033	Identifier	cv		4798982	0					
ANR	4799034	PrimaryExpression	1		4798982	1					
ANR	4799035	ExpressionStatement	b = cv [ 2 ]	2594:25:102930:102939	4798982	6	True				
ANR	4799036	AssignmentExpression	b = cv [ 2 ]		4798982	0		=			
ANR	4799037	Identifier	b		4798982	0					
ANR	4799038	ArrayIndexing	cv [ 2 ]		4798982	1					
ANR	4799039	Identifier	cv		4798982	0					
ANR	4799040	PrimaryExpression	2		4798982	1					
ANR	4799041	IfStatement	if ( ( r == g ) && ( g == b ) )		4798982	7					
ANR	4799042	Condition	( r == g ) && ( g == b )	2595:6:102947:102966	4798982	0	True				
ANR	4799043	AndExpression	( r == g ) && ( g == b )		4798982	0		&&			
ANR	4799044	EqualityExpression	r == g		4798982	0		==			
ANR	4799045	Identifier	r		4798982	0					
ANR	4799046	Identifier	g		4798982	1					
ANR	4799047	EqualityExpression	g == b		4798982	1		==			
ANR	4799048	Identifier	g		4798982	0					
ANR	4799049	Identifier	b		4798982	1					
ANR	4799050	CompoundStatement		7:28:199:199	4798982	1					
ANR	4799051	ExpressionStatement	black = gx_max_color_value - r	2597:6:102978:103009	4798982	0	True				
ANR	4799052	AssignmentExpression	black = gx_max_color_value - r		4798982	0		=			
ANR	4799053	Identifier	black		4798982	0					
ANR	4799054	AdditiveExpression	gx_max_color_value - r		4798982	1		-			
ANR	4799055	Identifier	gx_max_color_value		4798982	0					
ANR	4799056	Identifier	r		4798982	1					
ANR	4799057	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black )"	2598:6:103017:103051	4798982	1	True				
ANR	4799058	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black )"		4798982	0		=			
ANR	4799059	Identifier	rv		4798982	0					
ANR	4799060	CallExpression	"upd_truncate ( upd , 0 , black )"		4798982	1					
ANR	4799061	Callee	upd_truncate		4798982	0					
ANR	4799062	Identifier	upd_truncate		4798982	0					
ANR	4799063	ArgumentList	upd		4798982	1					
ANR	4799064	Argument	upd		4798982	0					
ANR	4799065	Identifier	upd		4798982	0					
ANR	4799066	Argument	0		4798982	1					
ANR	4799067	PrimaryExpression	0		4798982	0					
ANR	4799068	Argument	black		4798982	2					
ANR	4799069	Identifier	black		4798982	0					
ANR	4799070	ExpressionStatement	c = m = y = 0	2599:6:103059:103072	4798982	2	True				
ANR	4799071	AssignmentExpression	c = m = y = 0		4798982	0		=			
ANR	4799072	Identifier	c		4798982	0					
ANR	4799073	AssignmentExpression	m = y = 0		4798982	1		=			
ANR	4799074	Identifier	m		4798982	0					
ANR	4799075	AssignmentExpression	y = 0		4798982	1		=			
ANR	4799076	Identifier	y		4798982	0					
ANR	4799077	PrimaryExpression	0		4798982	1					
ANR	4799078	ElseStatement	else		4798982	0					
ANR	4799079	CompoundStatement		13:10:315:315	4798982	0					
ANR	4799080	ExpressionStatement	c = gx_max_color_value - r	2603:6:103094:103120	4798982	0	True				
ANR	4799081	AssignmentExpression	c = gx_max_color_value - r		4798982	0		=			
ANR	4799082	Identifier	c		4798982	0					
ANR	4799083	AdditiveExpression	gx_max_color_value - r		4798982	1		-			
ANR	4799084	Identifier	gx_max_color_value		4798982	0					
ANR	4799085	Identifier	r		4798982	1					
ANR	4799086	ExpressionStatement	m = gx_max_color_value - g	2604:6:103128:103154	4798982	1	True				
ANR	4799087	AssignmentExpression	m = gx_max_color_value - g		4798982	0		=			
ANR	4799088	Identifier	m		4798982	0					
ANR	4799089	AdditiveExpression	gx_max_color_value - g		4798982	1		-			
ANR	4799090	Identifier	gx_max_color_value		4798982	0					
ANR	4799091	Identifier	g		4798982	1					
ANR	4799092	ExpressionStatement	y = gx_max_color_value - b	2605:6:103162:103188	4798982	2	True				
ANR	4799093	AssignmentExpression	y = gx_max_color_value - b		4798982	0		=			
ANR	4799094	Identifier	y		4798982	0					
ANR	4799095	AdditiveExpression	gx_max_color_value - b		4798982	1		-			
ANR	4799096	Identifier	gx_max_color_value		4798982	0					
ANR	4799097	Identifier	b		4798982	1					
ANR	4799098	ExpressionStatement	black = c < m ? c : m	2607:6:103197:103226	4798982	3	True				
ANR	4799099	AssignmentExpression	black = c < m ? c : m		4798982	0		=			
ANR	4799100	Identifier	black		4798982	0					
ANR	4799101	ConditionalExpression	c < m ? c : m		4798982	1					
ANR	4799102	Condition	c < m		4798982	0					
ANR	4799103	RelationalExpression	c < m		4798982	0		<			
ANR	4799104	Identifier	c		4798982	0					
ANR	4799105	Identifier	m		4798982	1					
ANR	4799106	Identifier	c		4798982	1					
ANR	4799107	Identifier	m		4798982	2					
ANR	4799108	ExpressionStatement	black = black < y ? black : y	2608:6:103234:103263	4798982	4	True				
ANR	4799109	AssignmentExpression	black = black < y ? black : y		4798982	0		=			
ANR	4799110	Identifier	black		4798982	0					
ANR	4799111	ConditionalExpression	black < y ? black : y		4798982	1					
ANR	4799112	Condition	black < y		4798982	0					
ANR	4799113	RelationalExpression	black < y		4798982	0		<			
ANR	4799114	Identifier	black		4798982	0					
ANR	4799115	Identifier	y		4798982	1					
ANR	4799116	Identifier	black		4798982	1					
ANR	4799117	Identifier	y		4798982	2					
ANR	4799118	IfStatement	if ( black != gx_max_color_value )		4798982	5					
ANR	4799119	Condition	black != gx_max_color_value	2610:9:103275:103301	4798982	0	True				
ANR	4799120	EqualityExpression	black != gx_max_color_value		4798982	0		!=			
ANR	4799121	Identifier	black		4798982	0					
ANR	4799122	Identifier	gx_max_color_value		4798982	1					
ANR	4799123	CompoundStatement		23:8:544:555	4798982	1					
ANR	4799124	IdentifierDeclStatement	"float tmp , d ;"	2611:8:103314:103325	4798982	0	True				
ANR	4799125	IdentifierDecl	tmp		4798982	0					
ANR	4799126	IdentifierDeclType	float		4798982	0					
ANR	4799127	Identifier	tmp		4798982	1					
ANR	4799128	IdentifierDecl	d		4798982	1					
ANR	4799129	IdentifierDeclType	float		4798982	0					
ANR	4799130	Identifier	d		4798982	1					
ANR	4799131	ExpressionStatement	d = ( float ) ( gx_max_color_value - black )	2613:8:103336:103377	4798982	1	True				
ANR	4799132	AssignmentExpression	d = ( float ) ( gx_max_color_value - black )		4798982	0		=			
ANR	4799133	Identifier	d		4798982	0					
ANR	4799134	CastExpression	( float ) ( gx_max_color_value - black )		4798982	1					
ANR	4799135	CastTarget	float		4798982	0					
ANR	4799136	AdditiveExpression	gx_max_color_value - black		4798982	1		-			
ANR	4799137	Identifier	gx_max_color_value		4798982	0					
ANR	4799138	Identifier	black		4798982	1					
ANR	4799139	ExpressionStatement	tmp = ( float ) ( c - black ) / d	2615:8:103388:103415	4798982	2	True				
ANR	4799140	AssignmentExpression	tmp = ( float ) ( c - black ) / d		4798982	0		=			
ANR	4799141	Identifier	tmp		4798982	0					
ANR	4799142	MultiplicativeExpression	( float ) ( c - black ) / d		4798982	1		/			
ANR	4799143	CastExpression	( float ) ( c - black )		4798982	0					
ANR	4799144	CastTarget	float		4798982	0					
ANR	4799145	AdditiveExpression	c - black		4798982	1		-			
ANR	4799146	Identifier	c		4798982	0					
ANR	4799147	Identifier	black		4798982	1					
ANR	4799148	Identifier	d		4798982	1					
ANR	4799149	IfStatement	if ( 0.0 > tmp )		4798982	3					
ANR	4799150	Condition	0.0 > tmp	2616:17:103434:103442	4798982	0	True				
ANR	4799151	RelationalExpression	0.0 > tmp		4798982	0		>			
ANR	4799152	PrimaryExpression	0.0		4798982	0					
ANR	4799153	Identifier	tmp		4798982	1					
ANR	4799154	ExpressionStatement	tmp = 0.0	2616:28:103445:103454	4798982	1	True				
ANR	4799155	AssignmentExpression	tmp = 0.0		4798982	0		=			
ANR	4799156	Identifier	tmp		4798982	0					
ANR	4799157	PrimaryExpression	0.0		4798982	1					
ANR	4799158	ElseStatement	else		4798982	0					
ANR	4799159	IfStatement	if ( 1.0 < tmp )		4798982	0					
ANR	4799160	Condition	1.0 < tmp	2617:17:103473:103481	4798982	0	True				
ANR	4799161	RelationalExpression	1.0 < tmp		4798982	0		<			
ANR	4799162	PrimaryExpression	1.0		4798982	0					
ANR	4799163	Identifier	tmp		4798982	1					
ANR	4799164	ExpressionStatement	tmp = 1.0	2617:28:103484:103493	4798982	1	True				
ANR	4799165	AssignmentExpression	tmp = 1.0		4798982	0		=			
ANR	4799166	Identifier	tmp		4798982	0					
ANR	4799167	PrimaryExpression	1.0		4798982	1					
ANR	4799168	ExpressionStatement	c = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )	2618:8:103503:103559	4798982	4	True				
ANR	4799169	AssignmentExpression	c = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		4798982	0		=			
ANR	4799170	Identifier	c		4798982	0					
ANR	4799171	CastExpression	( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		4798982	1					
ANR	4799172	CastTarget	gx_color_value		4798982	0					
ANR	4799173	AdditiveExpression	tmp * gx_max_color_value + 0.499		4798982	1		+			
ANR	4799174	MultiplicativeExpression	tmp * gx_max_color_value		4798982	0		*			
ANR	4799175	Identifier	tmp		4798982	0					
ANR	4799176	Identifier	gx_max_color_value		4798982	1					
ANR	4799177	PrimaryExpression	0.499		4798982	1					
ANR	4799178	ExpressionStatement	tmp = ( float ) ( m - black ) / d	2620:8:103570:103597	4798982	5	True				
ANR	4799179	AssignmentExpression	tmp = ( float ) ( m - black ) / d		4798982	0		=			
ANR	4799180	Identifier	tmp		4798982	0					
ANR	4799181	MultiplicativeExpression	( float ) ( m - black ) / d		4798982	1		/			
ANR	4799182	CastExpression	( float ) ( m - black )		4798982	0					
ANR	4799183	CastTarget	float		4798982	0					
ANR	4799184	AdditiveExpression	m - black		4798982	1		-			
ANR	4799185	Identifier	m		4798982	0					
ANR	4799186	Identifier	black		4798982	1					
ANR	4799187	Identifier	d		4798982	1					
ANR	4799188	IfStatement	if ( 0.0 > tmp )		4798982	6					
ANR	4799189	Condition	0.0 > tmp	2621:17:103616:103624	4798982	0	True				
ANR	4799190	RelationalExpression	0.0 > tmp		4798982	0		>			
ANR	4799191	PrimaryExpression	0.0		4798982	0					
ANR	4799192	Identifier	tmp		4798982	1					
ANR	4799193	ExpressionStatement	tmp = 0.0	2621:28:103627:103636	4798982	1	True				
ANR	4799194	AssignmentExpression	tmp = 0.0		4798982	0		=			
ANR	4799195	Identifier	tmp		4798982	0					
ANR	4799196	PrimaryExpression	0.0		4798982	1					
ANR	4799197	ElseStatement	else		4798982	0					
ANR	4799198	IfStatement	if ( 1.0 < tmp )		4798982	0					
ANR	4799199	Condition	1.0 < tmp	2622:17:103655:103663	4798982	0	True				
ANR	4799200	RelationalExpression	1.0 < tmp		4798982	0		<			
ANR	4799201	PrimaryExpression	1.0		4798982	0					
ANR	4799202	Identifier	tmp		4798982	1					
ANR	4799203	ExpressionStatement	tmp = 1.0	2622:28:103666:103675	4798982	1	True				
ANR	4799204	AssignmentExpression	tmp = 1.0		4798982	0		=			
ANR	4799205	Identifier	tmp		4798982	0					
ANR	4799206	PrimaryExpression	1.0		4798982	1					
ANR	4799207	ExpressionStatement	m = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )	2623:8:103685:103741	4798982	7	True				
ANR	4799208	AssignmentExpression	m = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		4798982	0		=			
ANR	4799209	Identifier	m		4798982	0					
ANR	4799210	CastExpression	( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		4798982	1					
ANR	4799211	CastTarget	gx_color_value		4798982	0					
ANR	4799212	AdditiveExpression	tmp * gx_max_color_value + 0.499		4798982	1		+			
ANR	4799213	MultiplicativeExpression	tmp * gx_max_color_value		4798982	0		*			
ANR	4799214	Identifier	tmp		4798982	0					
ANR	4799215	Identifier	gx_max_color_value		4798982	1					
ANR	4799216	PrimaryExpression	0.499		4798982	1					
ANR	4799217	ExpressionStatement	tmp = ( float ) ( y - black ) / d	2625:8:103752:103779	4798982	8	True				
ANR	4799218	AssignmentExpression	tmp = ( float ) ( y - black ) / d		4798982	0		=			
ANR	4799219	Identifier	tmp		4798982	0					
ANR	4799220	MultiplicativeExpression	( float ) ( y - black ) / d		4798982	1		/			
ANR	4799221	CastExpression	( float ) ( y - black )		4798982	0					
ANR	4799222	CastTarget	float		4798982	0					
ANR	4799223	AdditiveExpression	y - black		4798982	1		-			
ANR	4799224	Identifier	y		4798982	0					
ANR	4799225	Identifier	black		4798982	1					
ANR	4799226	Identifier	d		4798982	1					
ANR	4799227	IfStatement	if ( 0.0 > tmp )		4798982	9					
ANR	4799228	Condition	0.0 > tmp	2626:17:103798:103806	4798982	0	True				
ANR	4799229	RelationalExpression	0.0 > tmp		4798982	0		>			
ANR	4799230	PrimaryExpression	0.0		4798982	0					
ANR	4799231	Identifier	tmp		4798982	1					
ANR	4799232	ExpressionStatement	tmp = 0.0	2626:28:103809:103818	4798982	1	True				
ANR	4799233	AssignmentExpression	tmp = 0.0		4798982	0		=			
ANR	4799234	Identifier	tmp		4798982	0					
ANR	4799235	PrimaryExpression	0.0		4798982	1					
ANR	4799236	ElseStatement	else		4798982	0					
ANR	4799237	IfStatement	if ( 1.0 < tmp )		4798982	0					
ANR	4799238	Condition	1.0 < tmp	2627:17:103837:103845	4798982	0	True				
ANR	4799239	RelationalExpression	1.0 < tmp		4798982	0		<			
ANR	4799240	PrimaryExpression	1.0		4798982	0					
ANR	4799241	Identifier	tmp		4798982	1					
ANR	4799242	ExpressionStatement	tmp = 1.0	2627:28:103848:103857	4798982	1	True				
ANR	4799243	AssignmentExpression	tmp = 1.0		4798982	0		=			
ANR	4799244	Identifier	tmp		4798982	0					
ANR	4799245	PrimaryExpression	1.0		4798982	1					
ANR	4799246	ExpressionStatement	y = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )	2628:8:103867:103923	4798982	10	True				
ANR	4799247	AssignmentExpression	y = ( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		4798982	0		=			
ANR	4799248	Identifier	y		4798982	0					
ANR	4799249	CastExpression	( gx_color_value ) ( tmp * gx_max_color_value + 0.499 )		4798982	1					
ANR	4799250	CastTarget	gx_color_value		4798982	0					
ANR	4799251	AdditiveExpression	tmp * gx_max_color_value + 0.499		4798982	1		+			
ANR	4799252	MultiplicativeExpression	tmp * gx_max_color_value		4798982	0		*			
ANR	4799253	Identifier	tmp		4798982	0					
ANR	4799254	Identifier	gx_max_color_value		4798982	1					
ANR	4799255	PrimaryExpression	0.499		4798982	1					
ANR	4799256	ElseStatement	else		4798982	0					
ANR	4799257	CompoundStatement		42:13:1169:1169	4798982	0					
ANR	4799258	ExpressionStatement	c = m = y = gx_max_color_value	2632:8:103950:103980	4798982	0	True				
ANR	4799259	AssignmentExpression	c = m = y = gx_max_color_value		4798982	0		=			
ANR	4799260	Identifier	c		4798982	0					
ANR	4799261	AssignmentExpression	m = y = gx_max_color_value		4798982	1		=			
ANR	4799262	Identifier	m		4798982	0					
ANR	4799263	AssignmentExpression	y = gx_max_color_value		4798982	1		=			
ANR	4799264	Identifier	y		4798982	0					
ANR	4799265	Identifier	gx_max_color_value		4798982	1					
ANR	4799266	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"	2636:6:103998:104115	4798982	6	True				
ANR	4799267	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4798982	0		=			
ANR	4799268	Identifier	rv		4798982	0					
ANR	4799269	InclusiveOrExpression	"upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4798982	1		|			
ANR	4799270	CallExpression	"upd_truncate ( upd , 0 , black )"		4798982	0					
ANR	4799271	Callee	upd_truncate		4798982	0					
ANR	4799272	Identifier	upd_truncate		4798982	0					
ANR	4799273	ArgumentList	upd		4798982	1					
ANR	4799274	Argument	upd		4798982	0					
ANR	4799275	Identifier	upd		4798982	0					
ANR	4799276	Argument	0		4798982	1					
ANR	4799277	PrimaryExpression	0		4798982	0					
ANR	4799278	Argument	black		4798982	2					
ANR	4799279	Identifier	black		4798982	0					
ANR	4799280	InclusiveOrExpression	"upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4798982	1		|			
ANR	4799281	CallExpression	"upd_truncate ( upd , 1 , c )"		4798982	0					
ANR	4799282	Callee	upd_truncate		4798982	0					
ANR	4799283	Identifier	upd_truncate		4798982	0					
ANR	4799284	ArgumentList	upd		4798982	1					
ANR	4799285	Argument	upd		4798982	0					
ANR	4799286	Identifier	upd		4798982	0					
ANR	4799287	Argument	1		4798982	1					
ANR	4799288	PrimaryExpression	1		4798982	0					
ANR	4799289	Argument	c		4798982	2					
ANR	4799290	Identifier	c		4798982	0					
ANR	4799291	InclusiveOrExpression	"upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4798982	1		|			
ANR	4799292	CallExpression	"upd_truncate ( upd , 2 , m )"		4798982	0					
ANR	4799293	Callee	upd_truncate		4798982	0					
ANR	4799294	Identifier	upd_truncate		4798982	0					
ANR	4799295	ArgumentList	upd		4798982	1					
ANR	4799296	Argument	upd		4798982	0					
ANR	4799297	Identifier	upd		4798982	0					
ANR	4799298	Argument	2		4798982	1					
ANR	4799299	PrimaryExpression	2		4798982	0					
ANR	4799300	Argument	m		4798982	2					
ANR	4799301	Identifier	m		4798982	0					
ANR	4799302	CallExpression	"upd_truncate ( upd , 3 , y )"		4798982	1					
ANR	4799303	Callee	upd_truncate		4798982	0					
ANR	4799304	Identifier	upd_truncate		4798982	0					
ANR	4799305	ArgumentList	upd		4798982	1					
ANR	4799306	Argument	upd		4798982	0					
ANR	4799307	Identifier	upd		4798982	0					
ANR	4799308	Argument	3		4798982	1					
ANR	4799309	PrimaryExpression	3		4798982	0					
ANR	4799310	Argument	y		4798982	2					
ANR	4799311	Identifier	y		4798982	0					
ANR	4799312	IfStatement	if ( rv == gx_no_color_index )		4798982	7					
ANR	4799313	Condition	rv == gx_no_color_index	2641:9:104203:104225	4798982	0	True				
ANR	4799314	EqualityExpression	rv == gx_no_color_index		4798982	0		==			
ANR	4799315	Identifier	rv		4798982	0					
ANR	4799316	Identifier	gx_no_color_index		4798982	1					
ANR	4799317	ExpressionStatement	rv ^= 1	2641:34:104228:104235	4798982	1	True				
ANR	4799318	AssignmentExpression	rv ^= 1		4798982	0		^=			
ANR	4799319	Identifier	rv		4798982	0					
ANR	4799320	PrimaryExpression	1		4798982	1					
ANR	4799321	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2645:2:104279:105063	4798982	8	True				
ANR	4799322	CallExpression	"errprintf ( pdev -> memory , ""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		4798982	0					
ANR	4799323	Callee	errprintf		4798982	0					
ANR	4799324	Identifier	errprintf		4798982	0					
ANR	4799325	ArgumentList	pdev -> memory		4798982	1					
ANR	4799326	Argument	pdev -> memory		4798982	0					
ANR	4799327	PtrMemberAccess	pdev -> memory		4798982	0					
ANR	4799328	Identifier	pdev		4798982	0					
ANR	4799329	Identifier	memory		4798982	1					
ANR	4799330	Argument	"""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4798982	1					
ANR	4799331	PrimaryExpression	"""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4798982	0					
ANR	4799332	Argument	255.0 * ( double ) r / ( double ) gx_max_color_value		4798982	2					
ANR	4799333	MultiplicativeExpression	255.0 * ( double ) r / ( double ) gx_max_color_value		4798982	0		*			
ANR	4799334	PrimaryExpression	255.0		4798982	0					
ANR	4799335	MultiplicativeExpression	( double ) r / ( double ) gx_max_color_value		4798982	1		/			
ANR	4799336	CastExpression	( double ) r		4798982	0					
ANR	4799337	CastTarget	double		4798982	0					
ANR	4799338	Identifier	r		4798982	1					
ANR	4799339	CastExpression	( double ) gx_max_color_value		4798982	1					
ANR	4799340	CastTarget	double		4798982	0					
ANR	4799341	Identifier	gx_max_color_value		4798982	1					
ANR	4799342	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		4798982	3					
ANR	4799343	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		4798982	0		*			
ANR	4799344	PrimaryExpression	255.0		4798982	0					
ANR	4799345	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		4798982	1		/			
ANR	4799346	CastExpression	( double ) g		4798982	0					
ANR	4799347	CastTarget	double		4798982	0					
ANR	4799348	Identifier	g		4798982	1					
ANR	4799349	CastExpression	( double ) gx_max_color_value		4798982	1					
ANR	4799350	CastTarget	double		4798982	0					
ANR	4799351	Identifier	gx_max_color_value		4798982	1					
ANR	4799352	Argument	255.0 * ( double ) b / ( double ) gx_max_color_value		4798982	4					
ANR	4799353	MultiplicativeExpression	255.0 * ( double ) b / ( double ) gx_max_color_value		4798982	0		*			
ANR	4799354	PrimaryExpression	255.0		4798982	0					
ANR	4799355	MultiplicativeExpression	( double ) b / ( double ) gx_max_color_value		4798982	1		/			
ANR	4799356	CastExpression	( double ) b		4798982	0					
ANR	4799357	CastTarget	double		4798982	0					
ANR	4799358	Identifier	b		4798982	1					
ANR	4799359	CastExpression	( double ) gx_max_color_value		4798982	1					
ANR	4799360	CastTarget	double		4798982	0					
ANR	4799361	Identifier	gx_max_color_value		4798982	1					
ANR	4799362	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4798982	5					
ANR	4799363	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4798982	0		*			
ANR	4799364	PrimaryExpression	255.0		4798982	0					
ANR	4799365	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4798982	1		/			
ANR	4799366	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4798982	0					
ANR	4799367	CastTarget	double		4798982	0					
ANR	4799368	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4798982	1		&			
ANR	4799369	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		4798982	0		>>			
ANR	4799370	Identifier	rv		4798982	0					
ANR	4799371	MemberAccess	upd -> cmap [ 1 ] . bitshf		4798982	1					
ANR	4799372	ArrayIndexing	upd -> cmap [ 1 ]		4798982	0					
ANR	4799373	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799374	Identifier	upd		4798982	0					
ANR	4799375	Identifier	cmap		4798982	1					
ANR	4799376	PrimaryExpression	1		4798982	1					
ANR	4799377	Identifier	bitshf		4798982	1					
ANR	4799378	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4798982	1					
ANR	4799379	ArrayIndexing	upd -> cmap [ 1 ]		4798982	0					
ANR	4799380	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799381	Identifier	upd		4798982	0					
ANR	4799382	Identifier	cmap		4798982	1					
ANR	4799383	PrimaryExpression	1		4798982	1					
ANR	4799384	Identifier	bitmsk		4798982	1					
ANR	4799385	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4798982	1					
ANR	4799386	CastTarget	double		4798982	0					
ANR	4799387	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4798982	1					
ANR	4799388	ArrayIndexing	upd -> cmap [ 1 ]		4798982	0					
ANR	4799389	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799390	Identifier	upd		4798982	0					
ANR	4799391	Identifier	cmap		4798982	1					
ANR	4799392	PrimaryExpression	1		4798982	1					
ANR	4799393	Identifier	bitmsk		4798982	1					
ANR	4799394	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4798982	6					
ANR	4799395	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4798982	0		*			
ANR	4799396	PrimaryExpression	255.0		4798982	0					
ANR	4799397	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4798982	1		/			
ANR	4799398	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4798982	0					
ANR	4799399	CastTarget	double		4798982	0					
ANR	4799400	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4798982	1		&			
ANR	4799401	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		4798982	0		>>			
ANR	4799402	Identifier	rv		4798982	0					
ANR	4799403	MemberAccess	upd -> cmap [ 2 ] . bitshf		4798982	1					
ANR	4799404	ArrayIndexing	upd -> cmap [ 2 ]		4798982	0					
ANR	4799405	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799406	Identifier	upd		4798982	0					
ANR	4799407	Identifier	cmap		4798982	1					
ANR	4799408	PrimaryExpression	2		4798982	1					
ANR	4799409	Identifier	bitshf		4798982	1					
ANR	4799410	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4798982	1					
ANR	4799411	ArrayIndexing	upd -> cmap [ 2 ]		4798982	0					
ANR	4799412	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799413	Identifier	upd		4798982	0					
ANR	4799414	Identifier	cmap		4798982	1					
ANR	4799415	PrimaryExpression	2		4798982	1					
ANR	4799416	Identifier	bitmsk		4798982	1					
ANR	4799417	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4798982	1					
ANR	4799418	CastTarget	double		4798982	0					
ANR	4799419	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4798982	1					
ANR	4799420	ArrayIndexing	upd -> cmap [ 2 ]		4798982	0					
ANR	4799421	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799422	Identifier	upd		4798982	0					
ANR	4799423	Identifier	cmap		4798982	1					
ANR	4799424	PrimaryExpression	2		4798982	1					
ANR	4799425	Identifier	bitmsk		4798982	1					
ANR	4799426	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4798982	7					
ANR	4799427	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4798982	0		*			
ANR	4799428	PrimaryExpression	255.0		4798982	0					
ANR	4799429	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4798982	1		/			
ANR	4799430	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		4798982	0					
ANR	4799431	CastTarget	double		4798982	0					
ANR	4799432	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		4798982	1		&			
ANR	4799433	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		4798982	0		>>			
ANR	4799434	Identifier	rv		4798982	0					
ANR	4799435	MemberAccess	upd -> cmap [ 3 ] . bitshf		4798982	1					
ANR	4799436	ArrayIndexing	upd -> cmap [ 3 ]		4798982	0					
ANR	4799437	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799438	Identifier	upd		4798982	0					
ANR	4799439	Identifier	cmap		4798982	1					
ANR	4799440	PrimaryExpression	3		4798982	1					
ANR	4799441	Identifier	bitshf		4798982	1					
ANR	4799442	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4798982	1					
ANR	4799443	ArrayIndexing	upd -> cmap [ 3 ]		4798982	0					
ANR	4799444	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799445	Identifier	upd		4798982	0					
ANR	4799446	Identifier	cmap		4798982	1					
ANR	4799447	PrimaryExpression	3		4798982	1					
ANR	4799448	Identifier	bitmsk		4798982	1					
ANR	4799449	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		4798982	1					
ANR	4799450	CastTarget	double		4798982	0					
ANR	4799451	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4798982	1					
ANR	4799452	ArrayIndexing	upd -> cmap [ 3 ]		4798982	0					
ANR	4799453	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799454	Identifier	upd		4798982	0					
ANR	4799455	Identifier	cmap		4798982	1					
ANR	4799456	PrimaryExpression	3		4798982	1					
ANR	4799457	Identifier	bitmsk		4798982	1					
ANR	4799458	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4798982	8					
ANR	4799459	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4798982	0		*			
ANR	4799460	PrimaryExpression	255.0		4798982	0					
ANR	4799461	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4798982	1		/			
ANR	4799462	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4798982	0					
ANR	4799463	CastTarget	double		4798982	0					
ANR	4799464	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4798982	1		&			
ANR	4799465	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		4798982	0		>>			
ANR	4799466	Identifier	rv		4798982	0					
ANR	4799467	MemberAccess	upd -> cmap [ 0 ] . bitshf		4798982	1					
ANR	4799468	ArrayIndexing	upd -> cmap [ 0 ]		4798982	0					
ANR	4799469	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799470	Identifier	upd		4798982	0					
ANR	4799471	Identifier	cmap		4798982	1					
ANR	4799472	PrimaryExpression	0		4798982	1					
ANR	4799473	Identifier	bitshf		4798982	1					
ANR	4799474	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4798982	1					
ANR	4799475	ArrayIndexing	upd -> cmap [ 0 ]		4798982	0					
ANR	4799476	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799477	Identifier	upd		4798982	0					
ANR	4799478	Identifier	cmap		4798982	1					
ANR	4799479	PrimaryExpression	0		4798982	1					
ANR	4799480	Identifier	bitmsk		4798982	1					
ANR	4799481	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4798982	1					
ANR	4799482	CastTarget	double		4798982	0					
ANR	4799483	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4798982	1					
ANR	4799484	ArrayIndexing	upd -> cmap [ 0 ]		4798982	0					
ANR	4799485	PtrMemberAccess	upd -> cmap		4798982	0					
ANR	4799486	Identifier	upd		4798982	0					
ANR	4799487	Identifier	cmap		4798982	1					
ANR	4799488	PrimaryExpression	0		4798982	1					
ANR	4799489	Identifier	bitmsk		4798982	1					
ANR	4799490	Argument	( pdev -> color_info . depth + 3 ) >> 2		4798982	9					
ANR	4799491	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4798982	0		>>			
ANR	4799492	AdditiveExpression	pdev -> color_info . depth + 3		4798982	0		+			
ANR	4799493	MemberAccess	pdev -> color_info . depth		4798982	0					
ANR	4799494	PtrMemberAccess	pdev -> color_info		4798982	0					
ANR	4799495	Identifier	pdev		4798982	0					
ANR	4799496	Identifier	color_info		4798982	1					
ANR	4799497	Identifier	depth		4798982	1					
ANR	4799498	PrimaryExpression	3		4798982	1					
ANR	4799499	PrimaryExpression	2		4798982	1					
ANR	4799500	Argument	rv		4798982	10					
ANR	4799501	Identifier	rv		4798982	0					
ANR	4799502	ReturnStatement	return rv ;	2661:3:105076:105085	4798982	9	True				
ANR	4799503	Identifier	rv		4798982	0					
ANR	4799504	ReturnType	static gx_color_index		4798982	1					
ANR	4799505	Identifier	upd_rgb_ovcolor		4798982	2					
ANR	4799506	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		4798982	3					
ANR	4799507	Parameter	gx_device * pdev	2588:16:102725:102739	4798982	0	True				
ANR	4799508	ParameterType	gx_device *		4798982	0					
ANR	4799509	Identifier	pdev		4798982	1					
ANR	4799510	Parameter	const gx_color_value cv [ ]	2588:33:102742:102766	4798982	1	True				
ANR	4799511	ParameterType	const gx_color_value [ ]		4798982	0					
ANR	4799512	Identifier	cv		4798982	1					
ANR	4799513	CFGEntryNode	ENTRY		4798982		True				
ANR	4799514	CFGExitNode	EXIT		4798982		True				
ANR	4799515	Symbol	rv		4798982						
ANR	4799516	Symbol	pdev -> color_info . depth		4798982						
ANR	4799517	Symbol	* upd -> cmap		4798982						
ANR	4799518	Symbol	upd -> cmap [ 0 ] . bitshf		4798982						
ANR	4799519	Symbol	pdev -> color_info		4798982						
ANR	4799520	Symbol	( ( upd_device * ) pdev ) -> upd		4798982						
ANR	4799521	Symbol	upd -> cmap		4798982						
ANR	4799522	Symbol	pdev		4798982						
ANR	4799523	Symbol	gx_no_color_index		4798982						
ANR	4799524	Symbol	* upd		4798982						
ANR	4799525	Symbol	upd -> cmap [ 2 ] . bitmsk		4798982						
ANR	4799526	Symbol	pdev -> memory		4798982						
ANR	4799527	Symbol	tmp		4798982						
ANR	4799528	Symbol	upd -> cmap [ 3 ] . bitshf		4798982						
ANR	4799529	Symbol	upd -> cmap [ 1 ] . bitmsk		4798982						
ANR	4799530	Symbol	upd -> cmap [ 2 ] . bitshf		4798982						
ANR	4799531	Symbol	b		4798982						
ANR	4799532	Symbol	upd -> cmap [ 3 ] . bitmsk		4798982						
ANR	4799533	Symbol	c		4798982						
ANR	4799534	Symbol	d		4798982						
ANR	4799535	Symbol	upd -> cmap [ 0 ] . bitmsk		4798982						
ANR	4799536	Symbol	g		4798982						
ANR	4799537	Symbol	upd		4798982						
ANR	4799538	Symbol	black		4798982						
ANR	4799539	Symbol	m		4798982						
ANR	4799540	Symbol	r		4798982						
ANR	4799541	Symbol	cv		4798982						
ANR	4799542	Symbol	upd -> cmap [ 1 ] . bitshf		4798982						
ANR	4799543	Symbol	gx_max_color_value		4798982						
ANR	4799544	Symbol	* pdev		4798982						
ANR	4799545	Symbol	y		4798982						
ANR	4799546	Symbol	* cv		4798982						
ANR	4799547	Symbol	upd_truncate		4798982						
ANR	4799548	Symbol	* * upd		4798982						
ANR	4799549	Function	upd_rgb_novcolor	2668:0:105314:107065							
ANR	4799550	FunctionDef	"upd_rgb_novcolor (gx_device * pdev , const gx_color_value cv [ ])"		4799549	0					
ANR	4799551	CompoundStatement		2670:0:105397:107065	4799549	0					
ANR	4799552	IdentifierDeclStatement	const upd_p upd = ( ( upd_device * ) pdev ) -> upd ;	2671:3:105402:105449	4799549	0	True				
ANR	4799553	IdentifierDecl	upd = ( ( upd_device * ) pdev ) -> upd		4799549	0					
ANR	4799554	IdentifierDeclType	const upd_p		4799549	0					
ANR	4799555	Identifier	upd		4799549	1					
ANR	4799556	AssignmentExpression	upd = ( ( upd_device * ) pdev ) -> upd		4799549	2		=			
ANR	4799557	Identifier	upd		4799549	0					
ANR	4799558	PtrMemberAccess	( ( upd_device * ) pdev ) -> upd		4799549	1					
ANR	4799559	CastExpression	( upd_device * ) pdev		4799549	0					
ANR	4799560	CastTarget	upd_device *		4799549	0					
ANR	4799561	Identifier	pdev		4799549	1					
ANR	4799562	Identifier	upd		4799549	1					
ANR	4799563	IdentifierDeclStatement	gx_color_index rv ;	2672:3:105454:105472	4799549	1	True				
ANR	4799564	IdentifierDecl	rv		4799549	0					
ANR	4799565	IdentifierDeclType	gx_color_index		4799549	0					
ANR	4799566	Identifier	rv		4799549	1					
ANR	4799567	IdentifierDeclStatement	"gx_color_value c , m , y , black ;"	2673:3:105477:105504	4799549	2	True				
ANR	4799568	IdentifierDecl	c		4799549	0					
ANR	4799569	IdentifierDeclType	gx_color_value		4799549	0					
ANR	4799570	Identifier	c		4799549	1					
ANR	4799571	IdentifierDecl	m		4799549	1					
ANR	4799572	IdentifierDeclType	gx_color_value		4799549	0					
ANR	4799573	Identifier	m		4799549	1					
ANR	4799574	IdentifierDecl	y		4799549	2					
ANR	4799575	IdentifierDeclType	gx_color_value		4799549	0					
ANR	4799576	Identifier	y		4799549	1					
ANR	4799577	IdentifierDecl	black		4799549	3					
ANR	4799578	IdentifierDeclType	gx_color_value		4799549	0					
ANR	4799579	Identifier	black		4799549	1					
ANR	4799580	IdentifierDeclStatement	"gx_color_value r , g , b ;"	2674:3:105509:105531	4799549	3	True				
ANR	4799581	IdentifierDecl	r		4799549	0					
ANR	4799582	IdentifierDeclType	gx_color_value		4799549	0					
ANR	4799583	Identifier	r		4799549	1					
ANR	4799584	IdentifierDecl	g		4799549	1					
ANR	4799585	IdentifierDeclType	gx_color_value		4799549	0					
ANR	4799586	Identifier	g		4799549	1					
ANR	4799587	IdentifierDecl	b		4799549	2					
ANR	4799588	IdentifierDeclType	gx_color_value		4799549	0					
ANR	4799589	Identifier	b		4799549	1					
ANR	4799590	ExpressionStatement	r = cv [ 0 ]	2675:3:105536:105545	4799549	4	True				
ANR	4799591	AssignmentExpression	r = cv [ 0 ]		4799549	0		=			
ANR	4799592	Identifier	r		4799549	0					
ANR	4799593	ArrayIndexing	cv [ 0 ]		4799549	1					
ANR	4799594	Identifier	cv		4799549	0					
ANR	4799595	PrimaryExpression	0		4799549	1					
ANR	4799596	ExpressionStatement	g = cv [ 1 ]	2675:14:105547:105556	4799549	5	True				
ANR	4799597	AssignmentExpression	g = cv [ 1 ]		4799549	0		=			
ANR	4799598	Identifier	g		4799549	0					
ANR	4799599	ArrayIndexing	cv [ 1 ]		4799549	1					
ANR	4799600	Identifier	cv		4799549	0					
ANR	4799601	PrimaryExpression	1		4799549	1					
ANR	4799602	ExpressionStatement	b = cv [ 2 ]	2675:25:105558:105567	4799549	6	True				
ANR	4799603	AssignmentExpression	b = cv [ 2 ]		4799549	0		=			
ANR	4799604	Identifier	b		4799549	0					
ANR	4799605	ArrayIndexing	cv [ 2 ]		4799549	1					
ANR	4799606	Identifier	cv		4799549	0					
ANR	4799607	PrimaryExpression	2		4799549	1					
ANR	4799608	IfStatement	if ( ( r == g ) && ( g == b ) )		4799549	7					
ANR	4799609	Condition	( r == g ) && ( g == b )	2677:6:105576:105595	4799549	0	True				
ANR	4799610	AndExpression	( r == g ) && ( g == b )		4799549	0		&&			
ANR	4799611	EqualityExpression	r == g		4799549	0		==			
ANR	4799612	Identifier	r		4799549	0					
ANR	4799613	Identifier	g		4799549	1					
ANR	4799614	EqualityExpression	g == b		4799549	1		==			
ANR	4799615	Identifier	g		4799549	0					
ANR	4799616	Identifier	b		4799549	1					
ANR	4799617	CompoundStatement		8:28:200:200	4799549	1					
ANR	4799618	ExpressionStatement	black = gx_max_color_value - r	2679:6:105607:105638	4799549	0	True				
ANR	4799619	AssignmentExpression	black = gx_max_color_value - r		4799549	0		=			
ANR	4799620	Identifier	black		4799549	0					
ANR	4799621	AdditiveExpression	gx_max_color_value - r		4799549	1		-			
ANR	4799622	Identifier	gx_max_color_value		4799549	0					
ANR	4799623	Identifier	r		4799549	1					
ANR	4799624	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black )"	2680:6:105646:105680	4799549	1	True				
ANR	4799625	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black )"		4799549	0		=			
ANR	4799626	Identifier	rv		4799549	0					
ANR	4799627	CallExpression	"upd_truncate ( upd , 0 , black )"		4799549	1					
ANR	4799628	Callee	upd_truncate		4799549	0					
ANR	4799629	Identifier	upd_truncate		4799549	0					
ANR	4799630	ArgumentList	upd		4799549	1					
ANR	4799631	Argument	upd		4799549	0					
ANR	4799632	Identifier	upd		4799549	0					
ANR	4799633	Argument	0		4799549	1					
ANR	4799634	PrimaryExpression	0		4799549	0					
ANR	4799635	Argument	black		4799549	2					
ANR	4799636	Identifier	black		4799549	0					
ANR	4799637	ExpressionStatement	c = m = y = 0	2681:6:105688:105701	4799549	2	True				
ANR	4799638	AssignmentExpression	c = m = y = 0		4799549	0		=			
ANR	4799639	Identifier	c		4799549	0					
ANR	4799640	AssignmentExpression	m = y = 0		4799549	1		=			
ANR	4799641	Identifier	m		4799549	0					
ANR	4799642	AssignmentExpression	y = 0		4799549	1		=			
ANR	4799643	Identifier	y		4799549	0					
ANR	4799644	PrimaryExpression	0		4799549	1					
ANR	4799645	ElseStatement	else		4799549	0					
ANR	4799646	CompoundStatement		14:10:316:316	4799549	0					
ANR	4799647	ExpressionStatement	c = gx_max_color_value - r	2685:6:105723:105749	4799549	0	True				
ANR	4799648	AssignmentExpression	c = gx_max_color_value - r		4799549	0		=			
ANR	4799649	Identifier	c		4799549	0					
ANR	4799650	AdditiveExpression	gx_max_color_value - r		4799549	1		-			
ANR	4799651	Identifier	gx_max_color_value		4799549	0					
ANR	4799652	Identifier	r		4799549	1					
ANR	4799653	ExpressionStatement	m = gx_max_color_value - g	2686:6:105757:105783	4799549	1	True				
ANR	4799654	AssignmentExpression	m = gx_max_color_value - g		4799549	0		=			
ANR	4799655	Identifier	m		4799549	0					
ANR	4799656	AdditiveExpression	gx_max_color_value - g		4799549	1		-			
ANR	4799657	Identifier	gx_max_color_value		4799549	0					
ANR	4799658	Identifier	g		4799549	1					
ANR	4799659	ExpressionStatement	y = gx_max_color_value - b	2687:6:105791:105817	4799549	2	True				
ANR	4799660	AssignmentExpression	y = gx_max_color_value - b		4799549	0		=			
ANR	4799661	Identifier	y		4799549	0					
ANR	4799662	AdditiveExpression	gx_max_color_value - b		4799549	1		-			
ANR	4799663	Identifier	gx_max_color_value		4799549	0					
ANR	4799664	Identifier	b		4799549	1					
ANR	4799665	ExpressionStatement	black = c < m ? c : m	2689:6:105826:105855	4799549	3	True				
ANR	4799666	AssignmentExpression	black = c < m ? c : m		4799549	0		=			
ANR	4799667	Identifier	black		4799549	0					
ANR	4799668	ConditionalExpression	c < m ? c : m		4799549	1					
ANR	4799669	Condition	c < m		4799549	0					
ANR	4799670	RelationalExpression	c < m		4799549	0		<			
ANR	4799671	Identifier	c		4799549	0					
ANR	4799672	Identifier	m		4799549	1					
ANR	4799673	Identifier	c		4799549	1					
ANR	4799674	Identifier	m		4799549	2					
ANR	4799675	ExpressionStatement	black = black < y ? black : y	2690:6:105863:105892	4799549	4	True				
ANR	4799676	AssignmentExpression	black = black < y ? black : y		4799549	0		=			
ANR	4799677	Identifier	black		4799549	0					
ANR	4799678	ConditionalExpression	black < y ? black : y		4799549	1					
ANR	4799679	Condition	black < y		4799549	0					
ANR	4799680	RelationalExpression	black < y		4799549	0		<			
ANR	4799681	Identifier	black		4799549	0					
ANR	4799682	Identifier	y		4799549	1					
ANR	4799683	Identifier	black		4799549	1					
ANR	4799684	Identifier	y		4799549	2					
ANR	4799685	ExpressionStatement	c = c - black	2691:6:105900:105917	4799549	5	True				
ANR	4799686	AssignmentExpression	c = c - black		4799549	0		=			
ANR	4799687	Identifier	c		4799549	0					
ANR	4799688	AdditiveExpression	c - black		4799549	1		-			
ANR	4799689	Identifier	c		4799549	0					
ANR	4799690	Identifier	black		4799549	1					
ANR	4799691	ExpressionStatement	m = m - black	2692:6:105925:105942	4799549	6	True				
ANR	4799692	AssignmentExpression	m = m - black		4799549	0		=			
ANR	4799693	Identifier	m		4799549	0					
ANR	4799694	AdditiveExpression	m - black		4799549	1		-			
ANR	4799695	Identifier	m		4799549	0					
ANR	4799696	Identifier	black		4799549	1					
ANR	4799697	ExpressionStatement	y = y - black	2693:6:105950:105967	4799549	7	True				
ANR	4799698	AssignmentExpression	y = y - black		4799549	0		=			
ANR	4799699	Identifier	y		4799549	0					
ANR	4799700	AdditiveExpression	y - black		4799549	1		-			
ANR	4799701	Identifier	y		4799549	0					
ANR	4799702	Identifier	black		4799549	1					
ANR	4799703	ExpressionStatement	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"	2695:6:105976:106093	4799549	8	True				
ANR	4799704	AssignmentExpression	"rv = upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4799549	0		=			
ANR	4799705	Identifier	rv		4799549	0					
ANR	4799706	InclusiveOrExpression	"upd_truncate ( upd , 0 , black ) | upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4799549	1		|			
ANR	4799707	CallExpression	"upd_truncate ( upd , 0 , black )"		4799549	0					
ANR	4799708	Callee	upd_truncate		4799549	0					
ANR	4799709	Identifier	upd_truncate		4799549	0					
ANR	4799710	ArgumentList	upd		4799549	1					
ANR	4799711	Argument	upd		4799549	0					
ANR	4799712	Identifier	upd		4799549	0					
ANR	4799713	Argument	0		4799549	1					
ANR	4799714	PrimaryExpression	0		4799549	0					
ANR	4799715	Argument	black		4799549	2					
ANR	4799716	Identifier	black		4799549	0					
ANR	4799717	InclusiveOrExpression	"upd_truncate ( upd , 1 , c ) | upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4799549	1		|			
ANR	4799718	CallExpression	"upd_truncate ( upd , 1 , c )"		4799549	0					
ANR	4799719	Callee	upd_truncate		4799549	0					
ANR	4799720	Identifier	upd_truncate		4799549	0					
ANR	4799721	ArgumentList	upd		4799549	1					
ANR	4799722	Argument	upd		4799549	0					
ANR	4799723	Identifier	upd		4799549	0					
ANR	4799724	Argument	1		4799549	1					
ANR	4799725	PrimaryExpression	1		4799549	0					
ANR	4799726	Argument	c		4799549	2					
ANR	4799727	Identifier	c		4799549	0					
ANR	4799728	InclusiveOrExpression	"upd_truncate ( upd , 2 , m ) | upd_truncate ( upd , 3 , y )"		4799549	1		|			
ANR	4799729	CallExpression	"upd_truncate ( upd , 2 , m )"		4799549	0					
ANR	4799730	Callee	upd_truncate		4799549	0					
ANR	4799731	Identifier	upd_truncate		4799549	0					
ANR	4799732	ArgumentList	upd		4799549	1					
ANR	4799733	Argument	upd		4799549	0					
ANR	4799734	Identifier	upd		4799549	0					
ANR	4799735	Argument	2		4799549	1					
ANR	4799736	PrimaryExpression	2		4799549	0					
ANR	4799737	Argument	m		4799549	2					
ANR	4799738	Identifier	m		4799549	0					
ANR	4799739	CallExpression	"upd_truncate ( upd , 3 , y )"		4799549	1					
ANR	4799740	Callee	upd_truncate		4799549	0					
ANR	4799741	Identifier	upd_truncate		4799549	0					
ANR	4799742	ArgumentList	upd		4799549	1					
ANR	4799743	Argument	upd		4799549	0					
ANR	4799744	Identifier	upd		4799549	0					
ANR	4799745	Argument	3		4799549	1					
ANR	4799746	PrimaryExpression	3		4799549	0					
ANR	4799747	Argument	y		4799549	2					
ANR	4799748	Identifier	y		4799549	0					
ANR	4799749	IfStatement	if ( rv == gx_no_color_index )		4799549	9					
ANR	4799750	Condition	rv == gx_no_color_index	2700:9:106181:106203	4799549	0	True				
ANR	4799751	EqualityExpression	rv == gx_no_color_index		4799549	0		==			
ANR	4799752	Identifier	rv		4799549	0					
ANR	4799753	Identifier	gx_no_color_index		4799549	1					
ANR	4799754	ExpressionStatement	rv ^= 1	2700:34:106206:106213	4799549	1	True				
ANR	4799755	AssignmentExpression	rv ^= 1		4799549	0		^=			
ANR	4799756	Identifier	rv		4799549	0					
ANR	4799757	PrimaryExpression	1		4799549	1					
ANR	4799758	ExpressionStatement	"errprintf ( pdev -> memory , ""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"	2704:2:106257:107041	4799549	8	True				
ANR	4799759	CallExpression	"errprintf ( pdev -> memory , ""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"" , 255.0 * ( double ) r / ( double ) gx_max_color_value , 255.0 * ( double ) g / ( double ) gx_max_color_value , 255.0 * ( double ) b / ( double ) gx_max_color_value , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk , 255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk , ( pdev -> color_info . depth + 3 ) >> 2 , rv )"		4799549	0					
ANR	4799760	Callee	errprintf		4799549	0					
ANR	4799761	Identifier	errprintf		4799549	0					
ANR	4799762	ArgumentList	pdev -> memory		4799549	1					
ANR	4799763	Argument	pdev -> memory		4799549	0					
ANR	4799764	PtrMemberAccess	pdev -> memory		4799549	0					
ANR	4799765	Identifier	pdev		4799549	0					
ANR	4799766	Identifier	memory		4799549	1					
ANR	4799767	Argument	"""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4799549	1					
ANR	4799768	PrimaryExpression	"""rgb_ovcolor: (%5.1f,%5.1f,%5.1f) : (%5.1f,%5.1f,%5.1f,%5.1f) : 0x%0*lx\\n"""		4799549	0					
ANR	4799769	Argument	255.0 * ( double ) r / ( double ) gx_max_color_value		4799549	2					
ANR	4799770	MultiplicativeExpression	255.0 * ( double ) r / ( double ) gx_max_color_value		4799549	0		*			
ANR	4799771	PrimaryExpression	255.0		4799549	0					
ANR	4799772	MultiplicativeExpression	( double ) r / ( double ) gx_max_color_value		4799549	1		/			
ANR	4799773	CastExpression	( double ) r		4799549	0					
ANR	4799774	CastTarget	double		4799549	0					
ANR	4799775	Identifier	r		4799549	1					
ANR	4799776	CastExpression	( double ) gx_max_color_value		4799549	1					
ANR	4799777	CastTarget	double		4799549	0					
ANR	4799778	Identifier	gx_max_color_value		4799549	1					
ANR	4799779	Argument	255.0 * ( double ) g / ( double ) gx_max_color_value		4799549	3					
ANR	4799780	MultiplicativeExpression	255.0 * ( double ) g / ( double ) gx_max_color_value		4799549	0		*			
ANR	4799781	PrimaryExpression	255.0		4799549	0					
ANR	4799782	MultiplicativeExpression	( double ) g / ( double ) gx_max_color_value		4799549	1		/			
ANR	4799783	CastExpression	( double ) g		4799549	0					
ANR	4799784	CastTarget	double		4799549	0					
ANR	4799785	Identifier	g		4799549	1					
ANR	4799786	CastExpression	( double ) gx_max_color_value		4799549	1					
ANR	4799787	CastTarget	double		4799549	0					
ANR	4799788	Identifier	gx_max_color_value		4799549	1					
ANR	4799789	Argument	255.0 * ( double ) b / ( double ) gx_max_color_value		4799549	4					
ANR	4799790	MultiplicativeExpression	255.0 * ( double ) b / ( double ) gx_max_color_value		4799549	0		*			
ANR	4799791	PrimaryExpression	255.0		4799549	0					
ANR	4799792	MultiplicativeExpression	( double ) b / ( double ) gx_max_color_value		4799549	1		/			
ANR	4799793	CastExpression	( double ) b		4799549	0					
ANR	4799794	CastTarget	double		4799549	0					
ANR	4799795	Identifier	b		4799549	1					
ANR	4799796	CastExpression	( double ) gx_max_color_value		4799549	1					
ANR	4799797	CastTarget	double		4799549	0					
ANR	4799798	Identifier	gx_max_color_value		4799549	1					
ANR	4799799	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4799549	5					
ANR	4799800	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4799549	0		*			
ANR	4799801	PrimaryExpression	255.0		4799549	0					
ANR	4799802	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk ) / ( double ) upd -> cmap [ 1 ] . bitmsk		4799549	1		/			
ANR	4799803	CastExpression	( double ) ( ( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk )		4799549	0					
ANR	4799804	CastTarget	double		4799549	0					
ANR	4799805	BitAndExpression	( rv >> upd -> cmap [ 1 ] . bitshf ) & upd -> cmap [ 1 ] . bitmsk		4799549	1		&			
ANR	4799806	ShiftExpression	rv >> upd -> cmap [ 1 ] . bitshf		4799549	0		>>			
ANR	4799807	Identifier	rv		4799549	0					
ANR	4799808	MemberAccess	upd -> cmap [ 1 ] . bitshf		4799549	1					
ANR	4799809	ArrayIndexing	upd -> cmap [ 1 ]		4799549	0					
ANR	4799810	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799811	Identifier	upd		4799549	0					
ANR	4799812	Identifier	cmap		4799549	1					
ANR	4799813	PrimaryExpression	1		4799549	1					
ANR	4799814	Identifier	bitshf		4799549	1					
ANR	4799815	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4799549	1					
ANR	4799816	ArrayIndexing	upd -> cmap [ 1 ]		4799549	0					
ANR	4799817	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799818	Identifier	upd		4799549	0					
ANR	4799819	Identifier	cmap		4799549	1					
ANR	4799820	PrimaryExpression	1		4799549	1					
ANR	4799821	Identifier	bitmsk		4799549	1					
ANR	4799822	CastExpression	( double ) upd -> cmap [ 1 ] . bitmsk		4799549	1					
ANR	4799823	CastTarget	double		4799549	0					
ANR	4799824	MemberAccess	upd -> cmap [ 1 ] . bitmsk		4799549	1					
ANR	4799825	ArrayIndexing	upd -> cmap [ 1 ]		4799549	0					
ANR	4799826	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799827	Identifier	upd		4799549	0					
ANR	4799828	Identifier	cmap		4799549	1					
ANR	4799829	PrimaryExpression	1		4799549	1					
ANR	4799830	Identifier	bitmsk		4799549	1					
ANR	4799831	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4799549	6					
ANR	4799832	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4799549	0		*			
ANR	4799833	PrimaryExpression	255.0		4799549	0					
ANR	4799834	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk ) / ( double ) upd -> cmap [ 2 ] . bitmsk		4799549	1		/			
ANR	4799835	CastExpression	( double ) ( ( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk )		4799549	0					
ANR	4799836	CastTarget	double		4799549	0					
ANR	4799837	BitAndExpression	( rv >> upd -> cmap [ 2 ] . bitshf ) & upd -> cmap [ 2 ] . bitmsk		4799549	1		&			
ANR	4799838	ShiftExpression	rv >> upd -> cmap [ 2 ] . bitshf		4799549	0		>>			
ANR	4799839	Identifier	rv		4799549	0					
ANR	4799840	MemberAccess	upd -> cmap [ 2 ] . bitshf		4799549	1					
ANR	4799841	ArrayIndexing	upd -> cmap [ 2 ]		4799549	0					
ANR	4799842	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799843	Identifier	upd		4799549	0					
ANR	4799844	Identifier	cmap		4799549	1					
ANR	4799845	PrimaryExpression	2		4799549	1					
ANR	4799846	Identifier	bitshf		4799549	1					
ANR	4799847	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4799549	1					
ANR	4799848	ArrayIndexing	upd -> cmap [ 2 ]		4799549	0					
ANR	4799849	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799850	Identifier	upd		4799549	0					
ANR	4799851	Identifier	cmap		4799549	1					
ANR	4799852	PrimaryExpression	2		4799549	1					
ANR	4799853	Identifier	bitmsk		4799549	1					
ANR	4799854	CastExpression	( double ) upd -> cmap [ 2 ] . bitmsk		4799549	1					
ANR	4799855	CastTarget	double		4799549	0					
ANR	4799856	MemberAccess	upd -> cmap [ 2 ] . bitmsk		4799549	1					
ANR	4799857	ArrayIndexing	upd -> cmap [ 2 ]		4799549	0					
ANR	4799858	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799859	Identifier	upd		4799549	0					
ANR	4799860	Identifier	cmap		4799549	1					
ANR	4799861	PrimaryExpression	2		4799549	1					
ANR	4799862	Identifier	bitmsk		4799549	1					
ANR	4799863	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4799549	7					
ANR	4799864	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4799549	0		*			
ANR	4799865	PrimaryExpression	255.0		4799549	0					
ANR	4799866	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk ) / ( double ) upd -> cmap [ 3 ] . bitmsk		4799549	1		/			
ANR	4799867	CastExpression	( double ) ( ( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk )		4799549	0					
ANR	4799868	CastTarget	double		4799549	0					
ANR	4799869	BitAndExpression	( rv >> upd -> cmap [ 3 ] . bitshf ) & upd -> cmap [ 3 ] . bitmsk		4799549	1		&			
ANR	4799870	ShiftExpression	rv >> upd -> cmap [ 3 ] . bitshf		4799549	0		>>			
ANR	4799871	Identifier	rv		4799549	0					
ANR	4799872	MemberAccess	upd -> cmap [ 3 ] . bitshf		4799549	1					
ANR	4799873	ArrayIndexing	upd -> cmap [ 3 ]		4799549	0					
ANR	4799874	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799875	Identifier	upd		4799549	0					
ANR	4799876	Identifier	cmap		4799549	1					
ANR	4799877	PrimaryExpression	3		4799549	1					
ANR	4799878	Identifier	bitshf		4799549	1					
ANR	4799879	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4799549	1					
ANR	4799880	ArrayIndexing	upd -> cmap [ 3 ]		4799549	0					
ANR	4799881	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799882	Identifier	upd		4799549	0					
ANR	4799883	Identifier	cmap		4799549	1					
ANR	4799884	PrimaryExpression	3		4799549	1					
ANR	4799885	Identifier	bitmsk		4799549	1					
ANR	4799886	CastExpression	( double ) upd -> cmap [ 3 ] . bitmsk		4799549	1					
ANR	4799887	CastTarget	double		4799549	0					
ANR	4799888	MemberAccess	upd -> cmap [ 3 ] . bitmsk		4799549	1					
ANR	4799889	ArrayIndexing	upd -> cmap [ 3 ]		4799549	0					
ANR	4799890	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799891	Identifier	upd		4799549	0					
ANR	4799892	Identifier	cmap		4799549	1					
ANR	4799893	PrimaryExpression	3		4799549	1					
ANR	4799894	Identifier	bitmsk		4799549	1					
ANR	4799895	Argument	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4799549	8					
ANR	4799896	MultiplicativeExpression	255.0 * ( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4799549	0		*			
ANR	4799897	PrimaryExpression	255.0		4799549	0					
ANR	4799898	MultiplicativeExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk ) / ( double ) upd -> cmap [ 0 ] . bitmsk		4799549	1		/			
ANR	4799899	CastExpression	( double ) ( ( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk )		4799549	0					
ANR	4799900	CastTarget	double		4799549	0					
ANR	4799901	BitAndExpression	( rv >> upd -> cmap [ 0 ] . bitshf ) & upd -> cmap [ 0 ] . bitmsk		4799549	1		&			
ANR	4799902	ShiftExpression	rv >> upd -> cmap [ 0 ] . bitshf		4799549	0		>>			
ANR	4799903	Identifier	rv		4799549	0					
ANR	4799904	MemberAccess	upd -> cmap [ 0 ] . bitshf		4799549	1					
ANR	4799905	ArrayIndexing	upd -> cmap [ 0 ]		4799549	0					
ANR	4799906	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799907	Identifier	upd		4799549	0					
ANR	4799908	Identifier	cmap		4799549	1					
ANR	4799909	PrimaryExpression	0		4799549	1					
ANR	4799910	Identifier	bitshf		4799549	1					
ANR	4799911	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4799549	1					
ANR	4799912	ArrayIndexing	upd -> cmap [ 0 ]		4799549	0					
ANR	4799913	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799914	Identifier	upd		4799549	0					
ANR	4799915	Identifier	cmap		4799549	1					
ANR	4799916	PrimaryExpression	0		4799549	1					
ANR	4799917	Identifier	bitmsk		4799549	1					
ANR	4799918	CastExpression	( double ) upd -> cmap [ 0 ] . bitmsk		4799549	1					
ANR	4799919	CastTarget	double		4799549	0					
ANR	4799920	MemberAccess	upd -> cmap [ 0 ] . bitmsk		4799549	1					
ANR	4799921	ArrayIndexing	upd -> cmap [ 0 ]		4799549	0					
ANR	4799922	PtrMemberAccess	upd -> cmap		4799549	0					
ANR	4799923	Identifier	upd		4799549	0					
ANR	4799924	Identifier	cmap		4799549	1					
ANR	4799925	PrimaryExpression	0		4799549	1					
ANR	4799926	Identifier	bitmsk		4799549	1					
ANR	4799927	Argument	( pdev -> color_info . depth + 3 ) >> 2		4799549	9					
ANR	4799928	ShiftExpression	( pdev -> color_info . depth + 3 ) >> 2		4799549	0		>>			
ANR	4799929	AdditiveExpression	pdev -> color_info . depth + 3		4799549	0		+			
ANR	4799930	MemberAccess	pdev -> color_info . depth		4799549	0					
ANR	4799931	PtrMemberAccess	pdev -> color_info		4799549	0					
ANR	4799932	Identifier	pdev		4799549	0					
ANR	4799933	Identifier	color_info		4799549	1					
ANR	4799934	Identifier	depth		4799549	1					
ANR	4799935	PrimaryExpression	3		4799549	1					
ANR	4799936	PrimaryExpression	2		4799549	1					
ANR	4799937	Argument	rv		4799549	10					
ANR	4799938	Identifier	rv		4799549	0					
ANR	4799939	ReturnStatement	return rv ;	2720:3:107054:107063	4799549	9	True				
ANR	4799940	Identifier	rv		4799549	0					
ANR	4799941	ReturnType	static gx_color_index		4799549	1					
ANR	4799942	Identifier	upd_rgb_novcolor		4799549	2					
ANR	4799943	ParameterList	"gx_device * pdev , const gx_color_value cv [ ]"		4799549	3					
ANR	4799944	Parameter	gx_device * pdev	2669:17:105353:105367	4799549	0	True				
ANR	4799945	ParameterType	gx_device *		4799549	0					
ANR	4799946	Identifier	pdev		4799549	1					
ANR	4799947	Parameter	const gx_color_value cv [ ]	2669:34:105370:105394	4799549	1	True				
ANR	4799948	ParameterType	const gx_color_value [ ]		4799549	0					
ANR	4799949	Identifier	cv		4799549	1					
ANR	4799950	CFGEntryNode	ENTRY		4799549		True				
ANR	4799951	CFGExitNode	EXIT		4799549		True				
ANR	4799952	Symbol	rv		4799549						
ANR	4799953	Symbol	pdev -> color_info . depth		4799549						
ANR	4799954	Symbol	* upd -> cmap		4799549						
ANR	4799955	Symbol	upd -> cmap [ 0 ] . bitshf		4799549						
ANR	4799956	Symbol	pdev -> color_info		4799549						
ANR	4799957	Symbol	( ( upd_device * ) pdev ) -> upd		4799549						
ANR	4799958	Symbol	upd -> cmap		4799549						
ANR	4799959	Symbol	pdev		4799549						
ANR	4799960	Symbol	gx_no_color_index		4799549						
ANR	4799961	Symbol	* upd		4799549						
ANR	4799962	Symbol	upd -> cmap [ 2 ] . bitmsk		4799549						
ANR	4799963	Symbol	pdev -> memory		4799549						
ANR	4799964	Symbol	upd -> cmap [ 3 ] . bitshf		4799549						
ANR	4799965	Symbol	upd -> cmap [ 1 ] . bitmsk		4799549						
ANR	4799966	Symbol	upd -> cmap [ 2 ] . bitshf		4799549						
ANR	4799967	Symbol	b		4799549						
ANR	4799968	Symbol	upd -> cmap [ 3 ] . bitmsk		4799549						
ANR	4799969	Symbol	c		4799549						
ANR	4799970	Symbol	upd -> cmap [ 0 ] . bitmsk		4799549						
ANR	4799971	Symbol	g		4799549						
ANR	4799972	Symbol	upd		4799549						
ANR	4799973	Symbol	black		4799549						
ANR	4799974	Symbol	m		4799549						
ANR	4799975	Symbol	r		4799549						
ANR	4799976	Symbol	cv		4799549						
ANR	4799977	Symbol	upd -> cmap [ 1 ] . bitshf		4799549						
ANR	4799978	Symbol	gx_max_color_value		4799549						
ANR	4799979	Symbol	* pdev		4799549						
ANR	4799980	Symbol	y		4799549						
ANR	4799981	Symbol	* cv		4799549						
ANR	4799982	Symbol	upd_truncate		4799549						
ANR	4799983	Symbol	* * upd		4799549						
ANR	4799984	Function	upd_truncate	2731:0:107514:108537							
ANR	4799985	FunctionDef	"upd_truncate (upd_pc upd , int i , gx_color_value v)"		4799984	0					
ANR	4799986	CompoundStatement		2732:48:107578:108537	4799984	0					
ANR	4799987	IdentifierDeclStatement	const updcmap_pc cmap = upd -> cmap + i ;	2733:3:107583:107620	4799984	0	True				
ANR	4799988	IdentifierDecl	cmap = upd -> cmap + i		4799984	0					
ANR	4799989	IdentifierDeclType	const updcmap_pc		4799984	0					
ANR	4799990	Identifier	cmap		4799984	1					
ANR	4799991	AssignmentExpression	cmap = upd -> cmap + i		4799984	2		=			
ANR	4799992	Identifier	cmap		4799984	0					
ANR	4799993	AdditiveExpression	upd -> cmap + i		4799984	1		+			
ANR	4799994	PtrMemberAccess	upd -> cmap		4799984	0					
ANR	4799995	Identifier	upd		4799984	0					
ANR	4799996	Identifier	cmap		4799984	1					
ANR	4799997	Identifier	i		4799984	1					
ANR	4799998	IdentifierDeclStatement	int32_t s ;	2734:3:107625:107644	4799984	1	True				
ANR	4799999	IdentifierDecl	s		4799984	0					
ANR	4800000	IdentifierDeclType	int32_t		4799984	0					
ANR	4800001	Identifier	s		4799984	1					
ANR	4800002	IdentifierDeclStatement	gx_color_value * p ;	2735:3:107665:107682	4799984	2	True				
ANR	4800003	IdentifierDecl	* p		4799984	0					
ANR	4800004	IdentifierDeclType	gx_color_value *		4799984	0					
ANR	4800005	Identifier	p		4799984	1					
ANR	4800006	IfStatement	if ( 0 == cmap -> bits )		4799984	3					
ANR	4800007	Condition	0 == cmap -> bits	2737:6:107711:107725	4799984	0	True				
ANR	4800008	EqualityExpression	0 == cmap -> bits		4799984	0		==			
ANR	4800009	PrimaryExpression	0		4799984	0					
ANR	4800010	PtrMemberAccess	cmap -> bits		4799984	1					
ANR	4800011	Identifier	cmap		4799984	0					
ANR	4800012	Identifier	bits		4799984	1					
ANR	4800013	CompoundStatement		6:23:149:149	4799984	1					
ANR	4800014	ExpressionStatement	v = 0	2739:6:107781:107786	4799984	0	True				
ANR	4800015	AssignmentExpression	v = 0		4799984	0		=			
ANR	4800016	Identifier	v		4799984	0					
ANR	4800017	PrimaryExpression	0		4799984	1					
ANR	4800018	ElseStatement	else		4799984	0					
ANR	4800019	IfStatement	if ( gx_color_value_bits > cmap -> bits )		4799984	0					
ANR	4800020	Condition	gx_color_value_bits > cmap -> bits	2741:13:107802:107833	4799984	0	True				
ANR	4800021	RelationalExpression	gx_color_value_bits > cmap -> bits		4799984	0		>			
ANR	4800022	Identifier	gx_color_value_bits		4799984	0					
ANR	4800023	PtrMemberAccess	cmap -> bits		4799984	1					
ANR	4800024	Identifier	cmap		4799984	0					
ANR	4800025	Identifier	bits		4799984	1					
ANR	4800026	CompoundStatement		10:47:257:257	4799984	1					
ANR	4800027	ExpressionStatement	p = cmap -> code + ( ( cmap -> bitmsk + 1 ) >> 1 )	2743:6:107869:107911	4799984	0	True				
ANR	4800028	AssignmentExpression	p = cmap -> code + ( ( cmap -> bitmsk + 1 ) >> 1 )		4799984	0		=			
ANR	4800029	Identifier	p		4799984	0					
ANR	4800030	AdditiveExpression	cmap -> code + ( ( cmap -> bitmsk + 1 ) >> 1 )		4799984	1		+			
ANR	4800031	PtrMemberAccess	cmap -> code		4799984	0					
ANR	4800032	Identifier	cmap		4799984	0					
ANR	4800033	Identifier	code		4799984	1					
ANR	4800034	ShiftExpression	( cmap -> bitmsk + 1 ) >> 1		4799984	1		>>			
ANR	4800035	AdditiveExpression	cmap -> bitmsk + 1		4799984	0		+			
ANR	4800036	PtrMemberAccess	cmap -> bitmsk		4799984	0					
ANR	4800037	Identifier	cmap		4799984	0					
ANR	4800038	Identifier	bitmsk		4799984	1					
ANR	4800039	PrimaryExpression	1		4799984	1					
ANR	4800040	PrimaryExpression	1		4799984	1					
ANR	4800041	ExpressionStatement	s = ( ( cmap -> bitmsk + 1 ) >> 2 )	2744:6:107919:107961	4799984	1	True				
ANR	4800042	AssignmentExpression	s = ( ( cmap -> bitmsk + 1 ) >> 2 )		4799984	0		=			
ANR	4800043	Identifier	s		4799984	0					
ANR	4800044	ShiftExpression	( cmap -> bitmsk + 1 ) >> 2		4799984	1		>>			
ANR	4800045	AdditiveExpression	cmap -> bitmsk + 1		4799984	0		+			
ANR	4800046	PtrMemberAccess	cmap -> bitmsk		4799984	0					
ANR	4800047	Identifier	cmap		4799984	0					
ANR	4800048	Identifier	bitmsk		4799984	1					
ANR	4800049	PrimaryExpression	1		4799984	1					
ANR	4800050	PrimaryExpression	2		4799984	1					
ANR	4800051	WhileStatement	while ( s > 0 )		4799984	2					
ANR	4800052	Condition	s > 0	2748:12:108024:108028	4799984	0	True				
ANR	4800053	RelationalExpression	s > 0		4799984	0		>			
ANR	4800054	Identifier	s		4799984	0					
ANR	4800055	PrimaryExpression	0		4799984	1					
ANR	4800056	CompoundStatement		17:19:452:452	4799984	1					
ANR	4800057	IfStatement	if ( v > * p )		4799984	0					
ANR	4800058	Condition	v > * p	2749:12:108045:108050	4799984	0	True				
ANR	4800059	RelationalExpression	v > * p		4799984	0		>			
ANR	4800060	Identifier	v		4799984	0					
ANR	4800061	UnaryOperationExpression	* p		4799984	1					
ANR	4800062	UnaryOperator	*		4799984	0					
ANR	4800063	Identifier	p		4799984	1					
ANR	4800064	CompoundStatement		18:20:474:474	4799984	1					
ANR	4800065	ExpressionStatement	p += s	2750:12:108095:108101	4799984	0	True				
ANR	4800066	AssignmentExpression	p += s		4799984	0		+=			
ANR	4800067	Identifier	p		4799984	0					
ANR	4800068	Identifier	s		4799984	1					
ANR	4800069	ElseStatement	else		4799984	0					
ANR	4800070	IfStatement	if ( v < p [ - 1 ] )		4799984	0					
ANR	4800071	Condition	v < p [ - 1 ]	2751:19:108122:108130	4799984	0	True				
ANR	4800072	RelationalExpression	v < p [ - 1 ]		4799984	0		<			
ANR	4800073	Identifier	v		4799984	0					
ANR	4800074	ArrayIndexing	p [ - 1 ]		4799984	1					
ANR	4800075	Identifier	p		4799984	0					
ANR	4800076	UnaryOperationExpression	- 1		4799984	1					
ANR	4800077	UnaryOperator	-		4799984	0					
ANR	4800078	PrimaryExpression	1		4799984	1					
ANR	4800079	CompoundStatement		20:30:554:554	4799984	1					
ANR	4800080	ExpressionStatement	p -= s	2752:12:108174:108180	4799984	0	True				
ANR	4800081	AssignmentExpression	p -= s		4799984	0		-=			
ANR	4800082	Identifier	p		4799984	0					
ANR	4800083	Identifier	s		4799984	1					
ANR	4800084	ElseStatement	else		4799984	0					
ANR	4800085	CompoundStatement		22:16:619:619	4799984	0					
ANR	4800086	IfStatement	if ( ( v - p [ - 1 ] ) < ( p [ 0 ] - v ) )		4799984	0					
ANR	4800087	Condition	( v - p [ - 1 ] ) < ( p [ 0 ] - v )	2755:15:108262:108281	4799984	0	True				
ANR	4800088	RelationalExpression	( v - p [ - 1 ] ) < ( p [ 0 ] - v )		4799984	0		<			
ANR	4800089	AdditiveExpression	v - p [ - 1 ]		4799984	0		-			
ANR	4800090	Identifier	v		4799984	0					
ANR	4800091	ArrayIndexing	p [ - 1 ]		4799984	1					
ANR	4800092	Identifier	p		4799984	0					
ANR	4800093	UnaryOperationExpression	- 1		4799984	1					
ANR	4800094	UnaryOperator	-		4799984	0					
ANR	4800095	PrimaryExpression	1		4799984	1					
ANR	4800096	AdditiveExpression	p [ 0 ] - v		4799984	1		-			
ANR	4800097	ArrayIndexing	p [ 0 ]		4799984	0					
ANR	4800098	Identifier	p		4799984	0					
ANR	4800099	PrimaryExpression	0		4799984	1					
ANR	4800100	Identifier	v		4799984	1					
ANR	4800101	ExpressionStatement	p -= 1	2755:37:108284:108290	4799984	1	True				
ANR	4800102	AssignmentExpression	p -= 1		4799984	0		-=			
ANR	4800103	Identifier	p		4799984	0					
ANR	4800104	PrimaryExpression	1		4799984	1					
ANR	4800105	BreakStatement	break ;	2756:12:108304:108309	4799984	1	True				
ANR	4800106	ExpressionStatement	s >>= 1	2758:9:108331:108338	4799984	1	True				
ANR	4800107	AssignmentExpression	s >>= 1		4799984	0		>>=			
ANR	4800108	Identifier	s		4799984	0					
ANR	4800109	PrimaryExpression	1		4799984	1					
ANR	4800110	IfStatement	if ( ( v - p [ - 1 ] ) < ( p [ 0 ] - v ) )		4799984	3					
ANR	4800111	Condition	( v - p [ - 1 ] ) < ( p [ 0 ] - v )	2760:9:108357:108376	4799984	0	True				
ANR	4800112	RelationalExpression	( v - p [ - 1 ] ) < ( p [ 0 ] - v )		4799984	0		<			
ANR	4800113	AdditiveExpression	v - p [ - 1 ]		4799984	0		-			
ANR	4800114	Identifier	v		4799984	0					
ANR	4800115	ArrayIndexing	p [ - 1 ]		4799984	1					
ANR	4800116	Identifier	p		4799984	0					
ANR	4800117	UnaryOperationExpression	- 1		4799984	1					
ANR	4800118	UnaryOperator	-		4799984	0					
ANR	4800119	PrimaryExpression	1		4799984	1					
ANR	4800120	AdditiveExpression	p [ 0 ] - v		4799984	1		-			
ANR	4800121	ArrayIndexing	p [ 0 ]		4799984	0					
ANR	4800122	Identifier	p		4799984	0					
ANR	4800123	PrimaryExpression	0		4799984	1					
ANR	4800124	Identifier	v		4799984	1					
ANR	4800125	ExpressionStatement	p -= 1	2760:31:108379:108385	4799984	1	True				
ANR	4800126	AssignmentExpression	p -= 1		4799984	0		-=			
ANR	4800127	Identifier	p		4799984	0					
ANR	4800128	PrimaryExpression	1		4799984	1					
ANR	4800129	ExpressionStatement	v = p - cmap -> code	2761:6:108393:108411	4799984	4	True				
ANR	4800130	AssignmentExpression	v = p - cmap -> code		4799984	0		=			
ANR	4800131	Identifier	v		4799984	0					
ANR	4800132	AdditiveExpression	p - cmap -> code		4799984	1		-			
ANR	4800133	Identifier	p		4799984	0					
ANR	4800134	PtrMemberAccess	cmap -> code		4799984	1					
ANR	4800135	Identifier	cmap		4799984	0					
ANR	4800136	Identifier	code		4799984	1					
ANR	4800137	IfStatement	if ( ! cmap -> rise )		4799984	4					
ANR	4800138	Condition	! cmap -> rise	2764:6:108425:108435	4799984	0	True				
ANR	4800139	UnaryOperationExpression	! cmap -> rise		4799984	0					
ANR	4800140	UnaryOperator	!		4799984	0					
ANR	4800141	PtrMemberAccess	cmap -> rise		4799984	1					
ANR	4800142	Identifier	cmap		4799984	0					
ANR	4800143	Identifier	rise		4799984	1					
ANR	4800144	ExpressionStatement	v = cmap -> bitmsk - v	2764:19:108438:108458	4799984	1	True				
ANR	4800145	AssignmentExpression	v = cmap -> bitmsk - v		4799984	0		=			
ANR	4800146	Identifier	v		4799984	0					
ANR	4800147	AdditiveExpression	cmap -> bitmsk - v		4799984	1		-			
ANR	4800148	PtrMemberAccess	cmap -> bitmsk		4799984	0					
ANR	4800149	Identifier	cmap		4799984	0					
ANR	4800150	Identifier	bitmsk		4799984	1					
ANR	4800151	Identifier	v		4799984	1					
ANR	4800152	ReturnStatement	return ( ( uint32_t ) v ) << cmap -> bitshf ;	2766:3:108498:108535	4799984	5	True				
ANR	4800153	ShiftExpression	( ( uint32_t ) v ) << cmap -> bitshf		4799984	0		<<			
ANR	4800154	CastExpression	( uint32_t ) v		4799984	0					
ANR	4800155	CastTarget	uint32_t		4799984	0					
ANR	4800156	Identifier	v		4799984	1					
ANR	4800157	PtrMemberAccess	cmap -> bitshf		4799984	1					
ANR	4800158	Identifier	cmap		4799984	0					
ANR	4800159	Identifier	bitshf		4799984	1					
ANR	4800160	ReturnType	static uint32_t		4799984	1					
ANR	4800161	Identifier	upd_truncate		4799984	2					
ANR	4800162	ParameterList	"upd_pc upd , int i , gx_color_value v"		4799984	3					
ANR	4800163	Parameter	upd_pc upd	2732:13:107543:107552	4799984	0	True				
ANR	4800164	ParameterType	upd_pc		4799984	0					
ANR	4800165	Identifier	upd		4799984	1					
ANR	4800166	Parameter	int i	2732:24:107554:107558	4799984	1	True				
ANR	4800167	ParameterType	int		4799984	0					
ANR	4800168	Identifier	i		4799984	1					
ANR	4800169	Parameter	gx_color_value v	2732:30:107560:107575	4799984	2	True				
ANR	4800170	ParameterType	gx_color_value		4799984	0					
ANR	4800171	Identifier	v		4799984	1					
ANR	4800172	CFGEntryNode	ENTRY		4799984		True				
ANR	4800173	CFGExitNode	EXIT		4799984		True				
ANR	4800174	Symbol	cmap -> code		4799984						
ANR	4800175	Symbol	cmap -> bitshf		4799984						
ANR	4800176	Symbol	upd		4799984						
ANR	4800177	Symbol	i		4799984						
ANR	4800178	Symbol	cmap -> bitmsk		4799984						
ANR	4800179	Symbol	cmap -> rise		4799984						
ANR	4800180	Symbol	upd -> cmap		4799984						
ANR	4800181	Symbol	p		4799984						
ANR	4800182	Symbol	* cmap		4799984						
ANR	4800183	Symbol	* upd		4799984						
ANR	4800184	Symbol	s		4799984						
ANR	4800185	Symbol	v		4799984						
ANR	4800186	Symbol	cmap		4799984						
ANR	4800187	Symbol	* p		4799984						
ANR	4800188	Symbol	cmap -> bits		4799984						
ANR	4800189	Symbol	gx_color_value_bits		4799984						
ANR	4800190	Function	upd_open_map	2773:0:108763:118334							
ANR	4800191	FunctionDef	upd_open_map (upd_device * udev)		4800190	0					
ANR	4800192	CompoundStatement		2775:0:108805:118334	4800190	0					
ANR	4800193	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	2776:3:108810:108844	4800190	0	True				
ANR	4800194	IdentifierDecl	upd = udev -> upd		4800190	0					
ANR	4800195	IdentifierDeclType	const upd_p		4800190	0					
ANR	4800196	Identifier	upd		4800190	1					
ANR	4800197	AssignmentExpression	upd = udev -> upd		4800190	2		=			
ANR	4800198	Identifier	upd		4800190	0					
ANR	4800199	PtrMemberAccess	udev -> upd		4800190	1					
ANR	4800200	Identifier	udev		4800190	0					
ANR	4800201	Identifier	upd		4800190	1					
ANR	4800202	IdentifierDeclStatement	int imap ;	2777:3:108849:108857	4800190	1	True				
ANR	4800203	IdentifierDecl	imap		4800190	0					
ANR	4800204	IdentifierDeclType	int		4800190	0					
ANR	4800205	Identifier	imap		4800190	1					
ANR	4800206	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		4800190	2					
ANR	4800207	ForInit	imap = 0 ;	2780:7:108910:108918	4800190	0	True				
ANR	4800208	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4800209	Identifier	imap		4800190	0					
ANR	4800210	PrimaryExpression	0		4800190	1					
ANR	4800211	Condition	UPD_CMAP_MAX > imap	2780:17:108920:108938	4800190	1	True				
ANR	4800212	RelationalExpression	UPD_CMAP_MAX > imap		4800190	0		>			
ANR	4800213	Identifier	UPD_CMAP_MAX		4800190	0					
ANR	4800214	Identifier	imap		4800190	1					
ANR	4800215	UnaryExpression	++ imap	2780:38:108941:108946	4800190	2	True				
ANR	4800216	IncDec	++		4800190	0					
ANR	4800217	Identifier	imap		4800190	1					
ANR	4800218	ExpressionStatement	upd -> cmap [ imap ] . code = NULL	2780:46:108949:108978	4800190	3	True				
ANR	4800219	AssignmentExpression	upd -> cmap [ imap ] . code = NULL		4800190	0		=			
ANR	4800220	MemberAccess	upd -> cmap [ imap ] . code		4800190	0					
ANR	4800221	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800222	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800223	Identifier	upd		4800190	0					
ANR	4800224	Identifier	cmap		4800190	1					
ANR	4800225	Identifier	imap		4800190	1					
ANR	4800226	Identifier	code		4800190	1					
ANR	4800227	Identifier	NULL		4800190	1					
ANR	4800228	ExpressionStatement	upd -> ncomp = 0	2781:3:108983:108997	4800190	3	True				
ANR	4800229	AssignmentExpression	upd -> ncomp = 0		4800190	0		=			
ANR	4800230	PtrMemberAccess	upd -> ncomp		4800190	0					
ANR	4800231	Identifier	upd		4800190	0					
ANR	4800232	Identifier	ncomp		4800190	1					
ANR	4800233	PrimaryExpression	0		4800190	1					
ANR	4800234	IfStatement	if ( B_ERROR & upd -> flags )		4800190	4					
ANR	4800235	Condition	B_ERROR & upd -> flags	2784:6:109046:109065	4800190	0	True				
ANR	4800236	BitAndExpression	B_ERROR & upd -> flags		4800190	0		&			
ANR	4800237	Identifier	B_ERROR		4800190	0					
ANR	4800238	PtrMemberAccess	upd -> flags		4800190	1					
ANR	4800239	Identifier	upd		4800190	0					
ANR	4800240	Identifier	flags		4800190	1					
ANR	4800241	ExpressionStatement	imap = 0	2784:31:109071:109079	4800190	1	True				
ANR	4800242	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4800243	Identifier	imap		4800190	0					
ANR	4800244	PrimaryExpression	0		4800190	1					
ANR	4800245	IfStatement	if ( imap )		4800190	5					
ANR	4800246	Condition	imap	2787:6:109122:109125	4800190	0	True				
ANR	4800247	Identifier	imap		4800190	0					
ANR	4800248	CompoundStatement		13:12:322:322	4800190	1					
ANR	4800249	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		4800190	0					
ANR	4800250	ForInit	imap = 0 ;	2788:10:109140:109148	4800190	0	True				
ANR	4800251	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4800252	Identifier	imap		4800190	0					
ANR	4800253	PrimaryExpression	0		4800190	1					
ANR	4800254	Condition	UPD_CMAP_MAX > imap	2788:20:109150:109168	4800190	1	True				
ANR	4800255	RelationalExpression	UPD_CMAP_MAX > imap		4800190	0		>			
ANR	4800256	Identifier	UPD_CMAP_MAX		4800190	0					
ANR	4800257	Identifier	imap		4800190	1					
ANR	4800258	UnaryExpression	++ imap	2788:41:109171:109176	4800190	2	True				
ANR	4800259	IncDec	++		4800190	0					
ANR	4800260	Identifier	imap		4800190	1					
ANR	4800261	CompoundStatement		14:49:373:373	4800190	3					
ANR	4800262	ExpressionStatement	upd -> cmap [ imap ] . xfer = - 1	2789:9:109190:109215	4800190	0	True				
ANR	4800263	AssignmentExpression	upd -> cmap [ imap ] . xfer = - 1		4800190	0		=			
ANR	4800264	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	0					
ANR	4800265	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800266	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800267	Identifier	upd		4800190	0					
ANR	4800268	Identifier	cmap		4800190	1					
ANR	4800269	Identifier	imap		4800190	1					
ANR	4800270	Identifier	xfer		4800190	1					
ANR	4800271	UnaryOperationExpression	- 1		4800190	1					
ANR	4800272	UnaryOperator	-		4800190	0					
ANR	4800273	PrimaryExpression	1		4800190	1					
ANR	4800274	ExpressionStatement	upd -> cmap [ imap ] . bits = 0	2790:9:109226:109251	4800190	1	True				
ANR	4800275	AssignmentExpression	upd -> cmap [ imap ] . bits = 0		4800190	0		=			
ANR	4800276	MemberAccess	upd -> cmap [ imap ] . bits		4800190	0					
ANR	4800277	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800278	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800279	Identifier	upd		4800190	0					
ANR	4800280	Identifier	cmap		4800190	1					
ANR	4800281	Identifier	imap		4800190	1					
ANR	4800282	Identifier	bits		4800190	1					
ANR	4800283	PrimaryExpression	0		4800190	1					
ANR	4800284	SwitchStatement	switch ( upd -> choice [ C_MAPPER ] )		4800190	1					
ANR	4800285	Condition	upd -> choice [ C_MAPPER ]	2792:13:109274:109294	4800190	0	True				
ANR	4800286	ArrayIndexing	upd -> choice [ C_MAPPER ]		4800190	0					
ANR	4800287	PtrMemberAccess	upd -> choice		4800190	0					
ANR	4800288	Identifier	upd		4800190	0					
ANR	4800289	Identifier	choice		4800190	1					
ANR	4800290	Identifier	C_MAPPER		4800190	1					
ANR	4800291	CompoundStatement		18:36:491:491	4800190	1					
ANR	4800292	Label	case MAP_GRAY :	2793:9:109308:109321	4800190	0	True				
ANR	4800293	Identifier	MAP_GRAY		4800190	0					
ANR	4800294	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_WXFER	2794:12:109335:109363	4800190	1	True				
ANR	4800295	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_WXFER		4800190	0		=			
ANR	4800296	MemberAccess	upd -> cmap [ 0 ] . xfer		4800190	0					
ANR	4800297	ArrayIndexing	upd -> cmap [ 0 ]		4800190	0					
ANR	4800298	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800299	Identifier	upd		4800190	0					
ANR	4800300	Identifier	cmap		4800190	1					
ANR	4800301	PrimaryExpression	0		4800190	1					
ANR	4800302	Identifier	xfer		4800190	1					
ANR	4800303	Identifier	FA_WXFER		4800190	1					
ANR	4800304	BreakStatement	break ;	2795:9:109374:109379	4800190	2	True				
ANR	4800305	Label	case MAP_RGBW :	2796:9:109390:109403	4800190	3	True				
ANR	4800306	Identifier	MAP_RGBW		4800190	0					
ANR	4800307	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_WXFER	2797:12:109417:109445	4800190	4	True				
ANR	4800308	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_WXFER		4800190	0		=			
ANR	4800309	MemberAccess	upd -> cmap [ 0 ] . xfer		4800190	0					
ANR	4800310	ArrayIndexing	upd -> cmap [ 0 ]		4800190	0					
ANR	4800311	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800312	Identifier	upd		4800190	0					
ANR	4800313	Identifier	cmap		4800190	1					
ANR	4800314	PrimaryExpression	0		4800190	1					
ANR	4800315	Identifier	xfer		4800190	1					
ANR	4800316	Identifier	FA_WXFER		4800190	1					
ANR	4800317	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_RXFER	2798:12:109459:109487	4800190	5	True				
ANR	4800318	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_RXFER		4800190	0		=			
ANR	4800319	MemberAccess	upd -> cmap [ 1 ] . xfer		4800190	0					
ANR	4800320	ArrayIndexing	upd -> cmap [ 1 ]		4800190	0					
ANR	4800321	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800322	Identifier	upd		4800190	0					
ANR	4800323	Identifier	cmap		4800190	1					
ANR	4800324	PrimaryExpression	1		4800190	1					
ANR	4800325	Identifier	xfer		4800190	1					
ANR	4800326	Identifier	FA_RXFER		4800190	1					
ANR	4800327	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_GXFER	2799:12:109501:109529	4800190	6	True				
ANR	4800328	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_GXFER		4800190	0		=			
ANR	4800329	MemberAccess	upd -> cmap [ 2 ] . xfer		4800190	0					
ANR	4800330	ArrayIndexing	upd -> cmap [ 2 ]		4800190	0					
ANR	4800331	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800332	Identifier	upd		4800190	0					
ANR	4800333	Identifier	cmap		4800190	1					
ANR	4800334	PrimaryExpression	2		4800190	1					
ANR	4800335	Identifier	xfer		4800190	1					
ANR	4800336	Identifier	FA_GXFER		4800190	1					
ANR	4800337	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_BXFER	2800:12:109543:109571	4800190	7	True				
ANR	4800338	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_BXFER		4800190	0		=			
ANR	4800339	MemberAccess	upd -> cmap [ 3 ] . xfer		4800190	0					
ANR	4800340	ArrayIndexing	upd -> cmap [ 3 ]		4800190	0					
ANR	4800341	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800342	Identifier	upd		4800190	0					
ANR	4800343	Identifier	cmap		4800190	1					
ANR	4800344	PrimaryExpression	3		4800190	1					
ANR	4800345	Identifier	xfer		4800190	1					
ANR	4800346	Identifier	FA_BXFER		4800190	1					
ANR	4800347	BreakStatement	break ;	2801:9:109582:109587	4800190	8	True				
ANR	4800348	Label	case MAP_RGB :	2802:9:109598:109610	4800190	9	True				
ANR	4800349	Identifier	MAP_RGB		4800190	0					
ANR	4800350	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_RXFER	2803:12:109624:109652	4800190	10	True				
ANR	4800351	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_RXFER		4800190	0		=			
ANR	4800352	MemberAccess	upd -> cmap [ 0 ] . xfer		4800190	0					
ANR	4800353	ArrayIndexing	upd -> cmap [ 0 ]		4800190	0					
ANR	4800354	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800355	Identifier	upd		4800190	0					
ANR	4800356	Identifier	cmap		4800190	1					
ANR	4800357	PrimaryExpression	0		4800190	1					
ANR	4800358	Identifier	xfer		4800190	1					
ANR	4800359	Identifier	FA_RXFER		4800190	1					
ANR	4800360	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_GXFER	2804:12:109666:109694	4800190	11	True				
ANR	4800361	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_GXFER		4800190	0		=			
ANR	4800362	MemberAccess	upd -> cmap [ 1 ] . xfer		4800190	0					
ANR	4800363	ArrayIndexing	upd -> cmap [ 1 ]		4800190	0					
ANR	4800364	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800365	Identifier	upd		4800190	0					
ANR	4800366	Identifier	cmap		4800190	1					
ANR	4800367	PrimaryExpression	1		4800190	1					
ANR	4800368	Identifier	xfer		4800190	1					
ANR	4800369	Identifier	FA_GXFER		4800190	1					
ANR	4800370	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_BXFER	2805:12:109708:109736	4800190	12	True				
ANR	4800371	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_BXFER		4800190	0		=			
ANR	4800372	MemberAccess	upd -> cmap [ 2 ] . xfer		4800190	0					
ANR	4800373	ArrayIndexing	upd -> cmap [ 2 ]		4800190	0					
ANR	4800374	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800375	Identifier	upd		4800190	0					
ANR	4800376	Identifier	cmap		4800190	1					
ANR	4800377	PrimaryExpression	2		4800190	1					
ANR	4800378	Identifier	xfer		4800190	1					
ANR	4800379	Identifier	FA_BXFER		4800190	1					
ANR	4800380	BreakStatement	break ;	2806:9:109747:109752	4800190	13	True				
ANR	4800381	Label	case MAP_CMYK :	2807:9:109763:109776	4800190	14	True				
ANR	4800382	Identifier	MAP_CMYK		4800190	0					
ANR	4800383	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_KXFER	2808:12:109790:109818	4800190	15	True				
ANR	4800384	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_KXFER		4800190	0		=			
ANR	4800385	MemberAccess	upd -> cmap [ 0 ] . xfer		4800190	0					
ANR	4800386	ArrayIndexing	upd -> cmap [ 0 ]		4800190	0					
ANR	4800387	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800388	Identifier	upd		4800190	0					
ANR	4800389	Identifier	cmap		4800190	1					
ANR	4800390	PrimaryExpression	0		4800190	1					
ANR	4800391	Identifier	xfer		4800190	1					
ANR	4800392	Identifier	FA_KXFER		4800190	1					
ANR	4800393	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_CXFER	2809:12:109832:109860	4800190	16	True				
ANR	4800394	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_CXFER		4800190	0		=			
ANR	4800395	MemberAccess	upd -> cmap [ 1 ] . xfer		4800190	0					
ANR	4800396	ArrayIndexing	upd -> cmap [ 1 ]		4800190	0					
ANR	4800397	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800398	Identifier	upd		4800190	0					
ANR	4800399	Identifier	cmap		4800190	1					
ANR	4800400	PrimaryExpression	1		4800190	1					
ANR	4800401	Identifier	xfer		4800190	1					
ANR	4800402	Identifier	FA_CXFER		4800190	1					
ANR	4800403	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_MXFER	2810:12:109874:109902	4800190	17	True				
ANR	4800404	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_MXFER		4800190	0		=			
ANR	4800405	MemberAccess	upd -> cmap [ 2 ] . xfer		4800190	0					
ANR	4800406	ArrayIndexing	upd -> cmap [ 2 ]		4800190	0					
ANR	4800407	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800408	Identifier	upd		4800190	0					
ANR	4800409	Identifier	cmap		4800190	1					
ANR	4800410	PrimaryExpression	2		4800190	1					
ANR	4800411	Identifier	xfer		4800190	1					
ANR	4800412	Identifier	FA_MXFER		4800190	1					
ANR	4800413	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_YXFER	2811:12:109916:109944	4800190	18	True				
ANR	4800414	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_YXFER		4800190	0		=			
ANR	4800415	MemberAccess	upd -> cmap [ 3 ] . xfer		4800190	0					
ANR	4800416	ArrayIndexing	upd -> cmap [ 3 ]		4800190	0					
ANR	4800417	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800418	Identifier	upd		4800190	0					
ANR	4800419	Identifier	cmap		4800190	1					
ANR	4800420	PrimaryExpression	3		4800190	1					
ANR	4800421	Identifier	xfer		4800190	1					
ANR	4800422	Identifier	FA_YXFER		4800190	1					
ANR	4800423	BreakStatement	break ;	2812:9:109955:109960	4800190	19	True				
ANR	4800424	Label	case MAP_CMYKGEN :	2813:9:109971:109987	4800190	20	True				
ANR	4800425	Identifier	MAP_CMYKGEN		4800190	0					
ANR	4800426	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_KXFER	2814:12:110001:110029	4800190	21	True				
ANR	4800427	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_KXFER		4800190	0		=			
ANR	4800428	MemberAccess	upd -> cmap [ 0 ] . xfer		4800190	0					
ANR	4800429	ArrayIndexing	upd -> cmap [ 0 ]		4800190	0					
ANR	4800430	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800431	Identifier	upd		4800190	0					
ANR	4800432	Identifier	cmap		4800190	1					
ANR	4800433	PrimaryExpression	0		4800190	1					
ANR	4800434	Identifier	xfer		4800190	1					
ANR	4800435	Identifier	FA_KXFER		4800190	1					
ANR	4800436	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_CXFER	2815:12:110043:110071	4800190	22	True				
ANR	4800437	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_CXFER		4800190	0		=			
ANR	4800438	MemberAccess	upd -> cmap [ 1 ] . xfer		4800190	0					
ANR	4800439	ArrayIndexing	upd -> cmap [ 1 ]		4800190	0					
ANR	4800440	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800441	Identifier	upd		4800190	0					
ANR	4800442	Identifier	cmap		4800190	1					
ANR	4800443	PrimaryExpression	1		4800190	1					
ANR	4800444	Identifier	xfer		4800190	1					
ANR	4800445	Identifier	FA_CXFER		4800190	1					
ANR	4800446	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_MXFER	2816:12:110085:110113	4800190	23	True				
ANR	4800447	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_MXFER		4800190	0		=			
ANR	4800448	MemberAccess	upd -> cmap [ 2 ] . xfer		4800190	0					
ANR	4800449	ArrayIndexing	upd -> cmap [ 2 ]		4800190	0					
ANR	4800450	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800451	Identifier	upd		4800190	0					
ANR	4800452	Identifier	cmap		4800190	1					
ANR	4800453	PrimaryExpression	2		4800190	1					
ANR	4800454	Identifier	xfer		4800190	1					
ANR	4800455	Identifier	FA_MXFER		4800190	1					
ANR	4800456	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_YXFER	2817:12:110127:110155	4800190	24	True				
ANR	4800457	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_YXFER		4800190	0		=			
ANR	4800458	MemberAccess	upd -> cmap [ 3 ] . xfer		4800190	0					
ANR	4800459	ArrayIndexing	upd -> cmap [ 3 ]		4800190	0					
ANR	4800460	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800461	Identifier	upd		4800190	0					
ANR	4800462	Identifier	cmap		4800190	1					
ANR	4800463	PrimaryExpression	3		4800190	1					
ANR	4800464	Identifier	xfer		4800190	1					
ANR	4800465	Identifier	FA_YXFER		4800190	1					
ANR	4800466	BreakStatement	break ;	2818:9:110166:110171	4800190	25	True				
ANR	4800467	Label	case MAP_RGBOV :	2819:9:110182:110196	4800190	26	True				
ANR	4800468	Identifier	MAP_RGBOV		4800190	0					
ANR	4800469	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_KXFER	2820:12:110210:110238	4800190	27	True				
ANR	4800470	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_KXFER		4800190	0		=			
ANR	4800471	MemberAccess	upd -> cmap [ 0 ] . xfer		4800190	0					
ANR	4800472	ArrayIndexing	upd -> cmap [ 0 ]		4800190	0					
ANR	4800473	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800474	Identifier	upd		4800190	0					
ANR	4800475	Identifier	cmap		4800190	1					
ANR	4800476	PrimaryExpression	0		4800190	1					
ANR	4800477	Identifier	xfer		4800190	1					
ANR	4800478	Identifier	FA_KXFER		4800190	1					
ANR	4800479	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_CXFER	2821:12:110252:110280	4800190	28	True				
ANR	4800480	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_CXFER		4800190	0		=			
ANR	4800481	MemberAccess	upd -> cmap [ 1 ] . xfer		4800190	0					
ANR	4800482	ArrayIndexing	upd -> cmap [ 1 ]		4800190	0					
ANR	4800483	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800484	Identifier	upd		4800190	0					
ANR	4800485	Identifier	cmap		4800190	1					
ANR	4800486	PrimaryExpression	1		4800190	1					
ANR	4800487	Identifier	xfer		4800190	1					
ANR	4800488	Identifier	FA_CXFER		4800190	1					
ANR	4800489	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_MXFER	2822:12:110294:110322	4800190	29	True				
ANR	4800490	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_MXFER		4800190	0		=			
ANR	4800491	MemberAccess	upd -> cmap [ 2 ] . xfer		4800190	0					
ANR	4800492	ArrayIndexing	upd -> cmap [ 2 ]		4800190	0					
ANR	4800493	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800494	Identifier	upd		4800190	0					
ANR	4800495	Identifier	cmap		4800190	1					
ANR	4800496	PrimaryExpression	2		4800190	1					
ANR	4800497	Identifier	xfer		4800190	1					
ANR	4800498	Identifier	FA_MXFER		4800190	1					
ANR	4800499	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_YXFER	2823:12:110336:110364	4800190	30	True				
ANR	4800500	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_YXFER		4800190	0		=			
ANR	4800501	MemberAccess	upd -> cmap [ 3 ] . xfer		4800190	0					
ANR	4800502	ArrayIndexing	upd -> cmap [ 3 ]		4800190	0					
ANR	4800503	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800504	Identifier	upd		4800190	0					
ANR	4800505	Identifier	cmap		4800190	1					
ANR	4800506	PrimaryExpression	3		4800190	1					
ANR	4800507	Identifier	xfer		4800190	1					
ANR	4800508	Identifier	FA_YXFER		4800190	1					
ANR	4800509	BreakStatement	break ;	2824:9:110375:110380	4800190	31	True				
ANR	4800510	Label	case MAP_RGBNOV :	2825:9:110391:110406	4800190	32	True				
ANR	4800511	Identifier	MAP_RGBNOV		4800190	0					
ANR	4800512	ExpressionStatement	upd -> cmap [ 0 ] . xfer = FA_KXFER	2826:12:110420:110448	4800190	33	True				
ANR	4800513	AssignmentExpression	upd -> cmap [ 0 ] . xfer = FA_KXFER		4800190	0		=			
ANR	4800514	MemberAccess	upd -> cmap [ 0 ] . xfer		4800190	0					
ANR	4800515	ArrayIndexing	upd -> cmap [ 0 ]		4800190	0					
ANR	4800516	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800517	Identifier	upd		4800190	0					
ANR	4800518	Identifier	cmap		4800190	1					
ANR	4800519	PrimaryExpression	0		4800190	1					
ANR	4800520	Identifier	xfer		4800190	1					
ANR	4800521	Identifier	FA_KXFER		4800190	1					
ANR	4800522	ExpressionStatement	upd -> cmap [ 1 ] . xfer = FA_CXFER	2827:12:110462:110490	4800190	34	True				
ANR	4800523	AssignmentExpression	upd -> cmap [ 1 ] . xfer = FA_CXFER		4800190	0		=			
ANR	4800524	MemberAccess	upd -> cmap [ 1 ] . xfer		4800190	0					
ANR	4800525	ArrayIndexing	upd -> cmap [ 1 ]		4800190	0					
ANR	4800526	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800527	Identifier	upd		4800190	0					
ANR	4800528	Identifier	cmap		4800190	1					
ANR	4800529	PrimaryExpression	1		4800190	1					
ANR	4800530	Identifier	xfer		4800190	1					
ANR	4800531	Identifier	FA_CXFER		4800190	1					
ANR	4800532	ExpressionStatement	upd -> cmap [ 2 ] . xfer = FA_MXFER	2828:12:110504:110532	4800190	35	True				
ANR	4800533	AssignmentExpression	upd -> cmap [ 2 ] . xfer = FA_MXFER		4800190	0		=			
ANR	4800534	MemberAccess	upd -> cmap [ 2 ] . xfer		4800190	0					
ANR	4800535	ArrayIndexing	upd -> cmap [ 2 ]		4800190	0					
ANR	4800536	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800537	Identifier	upd		4800190	0					
ANR	4800538	Identifier	cmap		4800190	1					
ANR	4800539	PrimaryExpression	2		4800190	1					
ANR	4800540	Identifier	xfer		4800190	1					
ANR	4800541	Identifier	FA_MXFER		4800190	1					
ANR	4800542	ExpressionStatement	upd -> cmap [ 3 ] . xfer = FA_YXFER	2829:12:110546:110574	4800190	36	True				
ANR	4800543	AssignmentExpression	upd -> cmap [ 3 ] . xfer = FA_YXFER		4800190	0		=			
ANR	4800544	MemberAccess	upd -> cmap [ 3 ] . xfer		4800190	0					
ANR	4800545	ArrayIndexing	upd -> cmap [ 3 ]		4800190	0					
ANR	4800546	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800547	Identifier	upd		4800190	0					
ANR	4800548	Identifier	cmap		4800190	1					
ANR	4800549	PrimaryExpression	3		4800190	1					
ANR	4800550	Identifier	xfer		4800190	1					
ANR	4800551	Identifier	FA_YXFER		4800190	1					
ANR	4800552	BreakStatement	break ;	2830:9:110585:110590	4800190	37	True				
ANR	4800553	Label	default :	2831:9:110601:110608	4800190	38	True				
ANR	4800554	Identifier	default		4800190	0					
ANR	4800555	IfStatement	if ( upd_choice [ C_MAPPER ] [ 0 ] )		4800190	39					
ANR	4800556	Condition	upd_choice [ C_MAPPER ] [ 0 ]	2833:18:110669:110691	4800190	0	True				
ANR	4800557	ArrayIndexing	upd_choice [ C_MAPPER ] [ 0 ]		4800190	0					
ANR	4800558	ArrayIndexing	upd_choice [ C_MAPPER ]		4800190	0					
ANR	4800559	Identifier	upd_choice		4800190	0					
ANR	4800560	Identifier	C_MAPPER		4800190	1					
ANR	4800561	PrimaryExpression	0		4800190	1					
ANR	4800562	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: unsupported %s=%d\\n"" , upd_choice [ C_MAPPER ] [ 0 ] , upd -> choice [ C_MAPPER ] )"	2834:18:110712:110861	4800190	1	True				
ANR	4800563	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: unsupported %s=%d\\n"" , upd_choice [ C_MAPPER ] [ 0 ] , upd -> choice [ C_MAPPER ] )"		4800190	0					
ANR	4800564	Callee	errprintf		4800190	0					
ANR	4800565	Identifier	errprintf		4800190	0					
ANR	4800566	ArgumentList	udev -> memory		4800190	1					
ANR	4800567	Argument	udev -> memory		4800190	0					
ANR	4800568	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4800569	Identifier	udev		4800190	0					
ANR	4800570	Identifier	memory		4800190	1					
ANR	4800571	Argument	"""upd_open_map: unsupported %s=%d\\n"""		4800190	1					
ANR	4800572	PrimaryExpression	"""upd_open_map: unsupported %s=%d\\n"""		4800190	0					
ANR	4800573	Argument	upd_choice [ C_MAPPER ] [ 0 ]		4800190	2					
ANR	4800574	ArrayIndexing	upd_choice [ C_MAPPER ] [ 0 ]		4800190	0					
ANR	4800575	ArrayIndexing	upd_choice [ C_MAPPER ]		4800190	0					
ANR	4800576	Identifier	upd_choice		4800190	0					
ANR	4800577	Identifier	C_MAPPER		4800190	1					
ANR	4800578	PrimaryExpression	0		4800190	1					
ANR	4800579	Argument	upd -> choice [ C_MAPPER ]		4800190	3					
ANR	4800580	ArrayIndexing	upd -> choice [ C_MAPPER ]		4800190	0					
ANR	4800581	PtrMemberAccess	upd -> choice		4800190	0					
ANR	4800582	Identifier	upd		4800190	0					
ANR	4800583	Identifier	choice		4800190	1					
ANR	4800584	Identifier	C_MAPPER		4800190	1					
ANR	4800585	ElseStatement	else		4800190	0					
ANR	4800586	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: unsupported choce[%d]=%d\\n"" , C_MAPPER , upd -> choice [ C_MAPPER ] )"	2838:18:110901:111042	4800190	0	True				
ANR	4800587	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: unsupported choce[%d]=%d\\n"" , C_MAPPER , upd -> choice [ C_MAPPER ] )"		4800190	0					
ANR	4800588	Callee	errprintf		4800190	0					
ANR	4800589	Identifier	errprintf		4800190	0					
ANR	4800590	ArgumentList	udev -> memory		4800190	1					
ANR	4800591	Argument	udev -> memory		4800190	0					
ANR	4800592	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4800593	Identifier	udev		4800190	0					
ANR	4800594	Identifier	memory		4800190	1					
ANR	4800595	Argument	"""upd_open_map: unsupported choce[%d]=%d\\n"""		4800190	1					
ANR	4800596	PrimaryExpression	"""upd_open_map: unsupported choce[%d]=%d\\n"""		4800190	0					
ANR	4800597	Argument	C_MAPPER		4800190	2					
ANR	4800598	Identifier	C_MAPPER		4800190	0					
ANR	4800599	Argument	upd -> choice [ C_MAPPER ]		4800190	3					
ANR	4800600	ArrayIndexing	upd -> choice [ C_MAPPER ]		4800190	0					
ANR	4800601	PtrMemberAccess	upd -> choice		4800190	0					
ANR	4800602	Identifier	upd		4800190	0					
ANR	4800603	Identifier	choice		4800190	1					
ANR	4800604	Identifier	C_MAPPER		4800190	1					
ANR	4800605	ExpressionStatement	imap = 0	2842:12:111063:111071	4800190	40	True				
ANR	4800606	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4800607	Identifier	imap		4800190	0					
ANR	4800608	PrimaryExpression	0		4800190	1					
ANR	4800609	BreakStatement	break ;	2843:9:111082:111087	4800190	41	True				
ANR	4800610	IfStatement	if ( imap )		4800190	6					
ANR	4800611	Condition	imap	2849:6:111173:111176	4800190	0	True				
ANR	4800612	Identifier	imap		4800190	0					
ANR	4800613	CompoundStatement		80:6:2495:2514	4800190	1					
ANR	4800614	IdentifierDeclStatement	"uint32_t used = 0 , bitmsk ;"	2852:6:111262:111286	4800190	0	True				
ANR	4800615	IdentifierDecl	used = 0		4800190	0					
ANR	4800616	IdentifierDeclType	uint32_t		4800190	0					
ANR	4800617	Identifier	used		4800190	1					
ANR	4800618	AssignmentExpression	used = 0		4800190	2		=			
ANR	4800619	Identifier	used		4800190	0					
ANR	4800620	PrimaryExpression	0		4800190	1					
ANR	4800621	IdentifierDecl	bitmsk		4800190	1					
ANR	4800622	IdentifierDeclType	uint32_t		4800190	0					
ANR	4800623	Identifier	bitmsk		4800190	1					
ANR	4800624	IdentifierDeclStatement	bool success = true ;	2854:6:111301:111320	4800190	1	True				
ANR	4800625	IdentifierDecl	success = true		4800190	0					
ANR	4800626	IdentifierDeclType	bool		4800190	0					
ANR	4800627	Identifier	success		4800190	1					
ANR	4800628	AssignmentExpression	success = true		4800190	2		=			
ANR	4800629	Identifier	true		4800190	0					
ANR	4800630	Identifier	true		4800190	1					
ANR	4800631	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		4800190	2					
ANR	4800632	ForInit	imap = 0 ;	2856:10:111333:111341	4800190	0	True				
ANR	4800633	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4800634	Identifier	imap		4800190	0					
ANR	4800635	PrimaryExpression	0		4800190	1					
ANR	4800636	Condition	UPD_CMAP_MAX > imap	2856:20:111343:111361	4800190	1	True				
ANR	4800637	RelationalExpression	UPD_CMAP_MAX > imap		4800190	0		>			
ANR	4800638	Identifier	UPD_CMAP_MAX		4800190	0					
ANR	4800639	Identifier	imap		4800190	1					
ANR	4800640	UnaryExpression	++ imap	2856:41:111364:111369	4800190	2	True				
ANR	4800641	IncDec	++		4800190	0					
ANR	4800642	Identifier	imap		4800190	1					
ANR	4800643	CompoundStatement		82:49:2566:2566	4800190	3					
ANR	4800644	IfStatement	if ( 0 > upd -> cmap [ imap ] . xfer )		4800190	0					
ANR	4800645	Condition	0 > upd -> cmap [ imap ] . xfer	2857:12:111386:111409	4800190	0	True				
ANR	4800646	RelationalExpression	0 > upd -> cmap [ imap ] . xfer		4800190	0		>			
ANR	4800647	PrimaryExpression	0		4800190	0					
ANR	4800648	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4800649	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800650	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800651	Identifier	upd		4800190	0					
ANR	4800652	Identifier	cmap		4800190	1					
ANR	4800653	Identifier	imap		4800190	1					
ANR	4800654	Identifier	xfer		4800190	1					
ANR	4800655	ContinueStatement	continue ;	2857:38:111412:111420	4800190	1	True				
ANR	4800656	IfStatement	if ( ( 0 > upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) ) )		4800190	1					
ANR	4800657	Condition	( 0 > upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) )	2859:12:111435:111779	4800190	0	True				
ANR	4800658	OrExpression	( 0 > upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) )		4800190	0		||			
ANR	4800659	RelationalExpression	0 > upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	0		>			
ANR	4800660	PrimaryExpression	0		4800190	0					
ANR	4800661	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	1					
ANR	4800662	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		4800190	0					
ANR	4800663	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		4800190	0					
ANR	4800664	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4800665	Identifier	upd		4800190	0					
ANR	4800666	Identifier	int_a		4800190	1					
ANR	4800667	Identifier	IA_COMPBITS		4800190	1					
ANR	4800668	Identifier	data		4800190	1					
ANR	4800669	Identifier	imap		4800190	1					
ANR	4800670	OrExpression	( gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) || ( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) )		4800190	1		||			
ANR	4800671	RelationalExpression	gx_color_value_bits < upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	0		<			
ANR	4800672	Identifier	gx_color_value_bits		4800190	0					
ANR	4800673	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	1					
ANR	4800674	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		4800190	0					
ANR	4800675	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		4800190	0					
ANR	4800676	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4800677	Identifier	upd		4800190	0					
ANR	4800678	Identifier	int_a		4800190	1					
ANR	4800679	Identifier	IA_COMPBITS		4800190	1					
ANR	4800680	Identifier	data		4800190	1					
ANR	4800681	Identifier	imap		4800190	1					
ANR	4800682	OrExpression	( 0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) || ( upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] ) )		4800190	1		||			
ANR	4800683	RelationalExpression	0 > upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	0		>			
ANR	4800684	PrimaryExpression	0		4800190	0					
ANR	4800685	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	1					
ANR	4800686	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		4800190	0					
ANR	4800687	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		4800190	0					
ANR	4800688	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4800689	Identifier	upd		4800190	0					
ANR	4800690	Identifier	int_a		4800190	1					
ANR	4800691	Identifier	IA_COMPSHIFT		4800190	1					
ANR	4800692	Identifier	data		4800190	1					
ANR	4800693	Identifier	imap		4800190	1					
ANR	4800694	RelationalExpression	upd -> int_a [ IA_COMPBITS ] . data [ imap ] > ( udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] )		4800190	1		>			
ANR	4800695	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	0					
ANR	4800696	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		4800190	0					
ANR	4800697	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		4800190	0					
ANR	4800698	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4800699	Identifier	upd		4800190	0					
ANR	4800700	Identifier	int_a		4800190	1					
ANR	4800701	Identifier	IA_COMPBITS		4800190	1					
ANR	4800702	Identifier	data		4800190	1					
ANR	4800703	Identifier	imap		4800190	1					
ANR	4800704	AdditiveExpression	udev -> color_info . depth - upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	1		-			
ANR	4800705	MemberAccess	udev -> color_info . depth		4800190	0					
ANR	4800706	PtrMemberAccess	udev -> color_info		4800190	0					
ANR	4800707	Identifier	udev		4800190	0					
ANR	4800708	Identifier	color_info		4800190	1					
ANR	4800709	Identifier	depth		4800190	1					
ANR	4800710	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	1					
ANR	4800711	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		4800190	0					
ANR	4800712	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		4800190	0					
ANR	4800713	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4800714	Identifier	upd		4800190	0					
ANR	4800715	Identifier	int_a		4800190	1					
ANR	4800716	Identifier	IA_COMPSHIFT		4800190	1					
ANR	4800717	Identifier	data		4800190	1					
ANR	4800718	Identifier	imap		4800190	1					
ANR	4800719	CompoundStatement		89:78:2976:2976	4800190	1					
ANR	4800720	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: %d Bits << %d is illegal for %d. Component\\n"" , upd -> int_a [ IA_COMPBITS ] . data [ imap ] , upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] , imap + 1 )"	2865:15:111840:112059	4800190	0	True				
ANR	4800721	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: %d Bits << %d is illegal for %d. Component\\n"" , upd -> int_a [ IA_COMPBITS ] . data [ imap ] , upd -> int_a [ IA_COMPSHIFT ] . data [ imap ] , imap + 1 )"		4800190	0					
ANR	4800722	Callee	errprintf		4800190	0					
ANR	4800723	Identifier	errprintf		4800190	0					
ANR	4800724	ArgumentList	udev -> memory		4800190	1					
ANR	4800725	Argument	udev -> memory		4800190	0					
ANR	4800726	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4800727	Identifier	udev		4800190	0					
ANR	4800728	Identifier	memory		4800190	1					
ANR	4800729	Argument	"""upd_open_map: %d Bits << %d is illegal for %d. Component\\n"""		4800190	1					
ANR	4800730	PrimaryExpression	"""upd_open_map: %d Bits << %d is illegal for %d. Component\\n"""		4800190	0					
ANR	4800731	Argument	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	2					
ANR	4800732	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	0					
ANR	4800733	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		4800190	0					
ANR	4800734	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		4800190	0					
ANR	4800735	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4800736	Identifier	upd		4800190	0					
ANR	4800737	Identifier	int_a		4800190	1					
ANR	4800738	Identifier	IA_COMPBITS		4800190	1					
ANR	4800739	Identifier	data		4800190	1					
ANR	4800740	Identifier	imap		4800190	1					
ANR	4800741	Argument	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	3					
ANR	4800742	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	0					
ANR	4800743	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		4800190	0					
ANR	4800744	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		4800190	0					
ANR	4800745	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4800746	Identifier	upd		4800190	0					
ANR	4800747	Identifier	int_a		4800190	1					
ANR	4800748	Identifier	IA_COMPSHIFT		4800190	1					
ANR	4800749	Identifier	data		4800190	1					
ANR	4800750	Identifier	imap		4800190	1					
ANR	4800751	Argument	imap + 1		4800190	4					
ANR	4800752	AdditiveExpression	imap + 1		4800190	0		+			
ANR	4800753	Identifier	imap		4800190	0					
ANR	4800754	PrimaryExpression	1		4800190	1					
ANR	4800755	ExpressionStatement	success = false	2871:12:112081:112096	4800190	1	True				
ANR	4800756	AssignmentExpression	success = false		4800190	0		=			
ANR	4800757	Identifier	success		4800190	0					
ANR	4800758	Identifier	false		4800190	1					
ANR	4800759	ElseStatement	else		4800190	0					
ANR	4800760	CompoundStatement		103:12:3381:3397	4800190	0					
ANR	4800761	IdentifierDeclStatement	int n ;	2875:12:112130:112143	4800190	0	True				
ANR	4800762	IdentifierDecl	n		4800190	0					
ANR	4800763	IdentifierDeclType	int		4800190	0					
ANR	4800764	Identifier	n		4800190	1					
ANR	4800765	IdentifierDeclStatement	const float * now ;	2876:12:112157:112173	4800190	1	True				
ANR	4800766	IdentifierDecl	* now		4800190	0					
ANR	4800767	IdentifierDeclType	const float *		4800190	0					
ANR	4800768	Identifier	now		4800190	1					
ANR	4800769	IdentifierDeclStatement	float last ;	2877:12:112187:112203	4800190	2	True				
ANR	4800770	IdentifierDecl	last		4800190	0					
ANR	4800771	IdentifierDeclType	float		4800190	0					
ANR	4800772	Identifier	last		4800190	1					
ANR	4800773	IfStatement	if ( ( NULL == upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data ) || ( 2 > upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size ) )		4800190	3					
ANR	4800774	Condition	( NULL == upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data ) || ( 2 > upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size )	2879:15:112221:112337	4800190	0	True				
ANR	4800775	OrExpression	( NULL == upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data ) || ( 2 > upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size )		4800190	0		||			
ANR	4800776	EqualityExpression	NULL == upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		4800190	0		==			
ANR	4800777	Identifier	NULL		4800190	0					
ANR	4800778	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		4800190	1					
ANR	4800779	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4800780	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4800781	Identifier	upd		4800190	0					
ANR	4800782	Identifier	float_a		4800190	1					
ANR	4800783	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4800784	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800785	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800786	Identifier	upd		4800190	0					
ANR	4800787	Identifier	cmap		4800190	1					
ANR	4800788	Identifier	imap		4800190	1					
ANR	4800789	Identifier	xfer		4800190	1					
ANR	4800790	Identifier	data		4800190	1					
ANR	4800791	RelationalExpression	2 > upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		4800190	1		>			
ANR	4800792	PrimaryExpression	2		4800190	0					
ANR	4800793	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		4800190	1					
ANR	4800794	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4800795	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4800796	Identifier	upd		4800190	0					
ANR	4800797	Identifier	float_a		4800190	1					
ANR	4800798	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4800799	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800800	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800801	Identifier	upd		4800190	0					
ANR	4800802	Identifier	cmap		4800190	1					
ANR	4800803	Identifier	imap		4800190	1					
ANR	4800804	Identifier	xfer		4800190	1					
ANR	4800805	Identifier	size		4800190	1					
ANR	4800806	CompoundStatement		107:15:3554:3563	4800190	1					
ANR	4800807	IdentifierDeclStatement	float * fp ;	2881:15:112360:112369	4800190	0	True				
ANR	4800808	IdentifierDecl	* fp		4800190	0					
ANR	4800809	IdentifierDeclType	float *		4800190	0					
ANR	4800810	Identifier	fp		4800190	1					
ANR	4800811	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> float_a [ upd -> cmap [ imap ] . xfer ] )"	2882:15:112386:112452	4800190	1	True				
ANR	4800812	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> float_a [ upd -> cmap [ imap ] . xfer ] )"		4800190	0					
ANR	4800813	Callee	UPD_MM_DEL_PARAM		4800190	0					
ANR	4800814	Identifier	UPD_MM_DEL_PARAM		4800190	0					
ANR	4800815	ArgumentList	udev -> memory		4800190	1					
ANR	4800816	Argument	udev -> memory		4800190	0					
ANR	4800817	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4800818	Identifier	udev		4800190	0					
ANR	4800819	Identifier	memory		4800190	1					
ANR	4800820	Argument	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	1					
ANR	4800821	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4800822	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4800823	Identifier	upd		4800190	0					
ANR	4800824	Identifier	float_a		4800190	1					
ANR	4800825	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4800826	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800827	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800828	Identifier	upd		4800190	0					
ANR	4800829	Identifier	cmap		4800190	1					
ANR	4800830	Identifier	imap		4800190	1					
ANR	4800831	Identifier	xfer		4800190	1					
ANR	4800832	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , fp , 2 )"	2883:15:112469:112505	4800190	2	True				
ANR	4800833	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , fp , 2 )"		4800190	0					
ANR	4800834	Callee	UPD_MM_GET_ARRAY		4800190	0					
ANR	4800835	Identifier	UPD_MM_GET_ARRAY		4800190	0					
ANR	4800836	ArgumentList	udev -> memory		4800190	1					
ANR	4800837	Argument	udev -> memory		4800190	0					
ANR	4800838	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4800839	Identifier	udev		4800190	0					
ANR	4800840	Identifier	memory		4800190	1					
ANR	4800841	Argument	fp		4800190	1					
ANR	4800842	Identifier	fp		4800190	0					
ANR	4800843	Argument	2		4800190	2					
ANR	4800844	PrimaryExpression	2		4800190	0					
ANR	4800845	ExpressionStatement	fp [ 0 ] = 0.0	2884:15:112522:112533	4800190	3	True				
ANR	4800846	AssignmentExpression	fp [ 0 ] = 0.0		4800190	0		=			
ANR	4800847	ArrayIndexing	fp [ 0 ]		4800190	0					
ANR	4800848	Identifier	fp		4800190	0					
ANR	4800849	PrimaryExpression	0		4800190	1					
ANR	4800850	PrimaryExpression	0.0		4800190	1					
ANR	4800851	ExpressionStatement	fp [ 1 ] = 1.0	2885:15:112550:112561	4800190	4	True				
ANR	4800852	AssignmentExpression	fp [ 1 ] = 1.0		4800190	0		=			
ANR	4800853	ArrayIndexing	fp [ 1 ]		4800190	0					
ANR	4800854	Identifier	fp		4800190	0					
ANR	4800855	PrimaryExpression	1		4800190	1					
ANR	4800856	PrimaryExpression	1.0		4800190	1					
ANR	4800857	ExpressionStatement	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data = fp	2886:15:112578:112622	4800190	5	True				
ANR	4800858	AssignmentExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data = fp		4800190	0		=			
ANR	4800859	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		4800190	0					
ANR	4800860	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4800861	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4800862	Identifier	upd		4800190	0					
ANR	4800863	Identifier	float_a		4800190	1					
ANR	4800864	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4800865	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800866	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800867	Identifier	upd		4800190	0					
ANR	4800868	Identifier	cmap		4800190	1					
ANR	4800869	Identifier	imap		4800190	1					
ANR	4800870	Identifier	xfer		4800190	1					
ANR	4800871	Identifier	data		4800190	1					
ANR	4800872	Identifier	fp		4800190	1					
ANR	4800873	ExpressionStatement	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size = 2	2887:15:112639:112682	4800190	6	True				
ANR	4800874	AssignmentExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size = 2		4800190	0		=			
ANR	4800875	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		4800190	0					
ANR	4800876	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4800877	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4800878	Identifier	upd		4800190	0					
ANR	4800879	Identifier	float_a		4800190	1					
ANR	4800880	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4800881	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800882	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800883	Identifier	upd		4800190	0					
ANR	4800884	Identifier	cmap		4800190	1					
ANR	4800885	Identifier	imap		4800190	1					
ANR	4800886	Identifier	xfer		4800190	1					
ANR	4800887	Identifier	size		4800190	1					
ANR	4800888	PrimaryExpression	2		4800190	1					
ANR	4800889	ExpressionStatement	n = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1	2889:12:112710:112758	4800190	4	True				
ANR	4800890	AssignmentExpression	n = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1		4800190	0		=			
ANR	4800891	Identifier	n		4800190	0					
ANR	4800892	AdditiveExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1		4800190	1		-			
ANR	4800893	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		4800190	0					
ANR	4800894	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4800895	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4800896	Identifier	upd		4800190	0					
ANR	4800897	Identifier	float_a		4800190	1					
ANR	4800898	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4800899	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800900	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800901	Identifier	upd		4800190	0					
ANR	4800902	Identifier	cmap		4800190	1					
ANR	4800903	Identifier	imap		4800190	1					
ANR	4800904	Identifier	xfer		4800190	1					
ANR	4800905	Identifier	size		4800190	1					
ANR	4800906	PrimaryExpression	1		4800190	1					
ANR	4800907	ExpressionStatement	now = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data	2890:12:112772:112818	4800190	5	True				
ANR	4800908	AssignmentExpression	now = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		4800190	0		=			
ANR	4800909	Identifier	now		4800190	0					
ANR	4800910	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		4800190	1					
ANR	4800911	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4800912	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4800913	Identifier	upd		4800190	0					
ANR	4800914	Identifier	float_a		4800190	1					
ANR	4800915	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4800916	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4800917	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4800918	Identifier	upd		4800190	0					
ANR	4800919	Identifier	cmap		4800190	1					
ANR	4800920	Identifier	imap		4800190	1					
ANR	4800921	Identifier	xfer		4800190	1					
ANR	4800922	Identifier	data		4800190	1					
ANR	4800923	ExpressionStatement	last = now [ n ]	2891:12:112832:112845	4800190	6	True				
ANR	4800924	AssignmentExpression	last = now [ n ]		4800190	0		=			
ANR	4800925	Identifier	last		4800190	0					
ANR	4800926	ArrayIndexing	now [ n ]		4800190	1					
ANR	4800927	Identifier	now		4800190	0					
ANR	4800928	Identifier	n		4800190	1					
ANR	4800929	IfStatement	if ( * now < last )		4800190	7					
ANR	4800930	Condition	* now < last	2893:20:112868:112878	4800190	0	True				
ANR	4800931	RelationalExpression	* now < last		4800190	0		<			
ANR	4800932	UnaryOperationExpression	* now		4800190	0					
ANR	4800933	UnaryOperator	*		4800190	0					
ANR	4800934	Identifier	now		4800190	1					
ANR	4800935	Identifier	last		4800190	1					
ANR	4800936	CompoundStatement		119:33:4075:4075	4800190	1					
ANR	4800937	ExpressionStatement	last = * now ++	2894:15:112911:112924	4800190	0	True				
ANR	4800938	AssignmentExpression	last = * now ++		4800190	0		=			
ANR	4800939	Identifier	last		4800190	0					
ANR	4800940	UnaryOperationExpression	* now ++		4800190	1					
ANR	4800941	UnaryOperator	*		4800190	0					
ANR	4800942	PostIncDecOperationExpression	now ++		4800190	1					
ANR	4800943	Identifier	now		4800190	0					
ANR	4800944	IncDec	++		4800190	1					
ANR	4800945	WhileStatement	while ( n -- )		4800190	1					
ANR	4800946	Condition	n --	2895:21:112947:112949	4800190	0	True				
ANR	4800947	PostIncDecOperationExpression	n --		4800190	0					
ANR	4800948	Identifier	n		4800190	0					
ANR	4800949	IncDec	--		4800190	1					
ANR	4800950	CompoundStatement		121:26:4146:4146	4800190	1					
ANR	4800951	IfStatement	if ( last >= * now )		4800190	0					
ANR	4800952	Condition	last >= * now	2896:20:112974:112985	4800190	0	True				
ANR	4800953	RelationalExpression	last >= * now		4800190	0		>=			
ANR	4800954	Identifier	last		4800190	0					
ANR	4800955	UnaryOperationExpression	* now		4800190	1					
ANR	4800956	UnaryOperator	*		4800190	0					
ANR	4800957	Identifier	now		4800190	1					
ANR	4800958	BreakStatement	break ;	2896:34:112988:112993	4800190	1	True				
ANR	4800959	ExpressionStatement	last = * now ++	2897:17:113012:113025	4800190	1	True				
ANR	4800960	AssignmentExpression	last = * now ++		4800190	0		=			
ANR	4800961	Identifier	last		4800190	0					
ANR	4800962	UnaryOperationExpression	* now ++		4800190	1					
ANR	4800963	UnaryOperator	*		4800190	0					
ANR	4800964	PostIncDecOperationExpression	now ++		4800190	1					
ANR	4800965	Identifier	now		4800190	0					
ANR	4800966	IncDec	++		4800190	1					
ANR	4800967	ElseStatement	else		4800190	0					
ANR	4800968	IfStatement	if ( * now > last )		4800190	0					
ANR	4800969	Condition	* now > last	2899:22:113066:113076	4800190	0	True				
ANR	4800970	RelationalExpression	* now > last		4800190	0		>			
ANR	4800971	UnaryOperationExpression	* now		4800190	0					
ANR	4800972	UnaryOperator	*		4800190	0					
ANR	4800973	Identifier	now		4800190	1					
ANR	4800974	Identifier	last		4800190	1					
ANR	4800975	CompoundStatement		125:35:4273:4273	4800190	1					
ANR	4800976	ExpressionStatement	last = * now ++	2900:15:113110:113123	4800190	0	True				
ANR	4800977	AssignmentExpression	last = * now ++		4800190	0		=			
ANR	4800978	Identifier	last		4800190	0					
ANR	4800979	UnaryOperationExpression	* now ++		4800190	1					
ANR	4800980	UnaryOperator	*		4800190	0					
ANR	4800981	PostIncDecOperationExpression	now ++		4800190	1					
ANR	4800982	Identifier	now		4800190	0					
ANR	4800983	IncDec	++		4800190	1					
ANR	4800984	WhileStatement	while ( n -- )		4800190	1					
ANR	4800985	Condition	n --	2901:21:113146:113148	4800190	0	True				
ANR	4800986	PostIncDecOperationExpression	n --		4800190	0					
ANR	4800987	Identifier	n		4800190	0					
ANR	4800988	IncDec	--		4800190	1					
ANR	4800989	CompoundStatement		127:26:4345:4345	4800190	1					
ANR	4800990	IfStatement	if ( last <= * now )		4800190	0					
ANR	4800991	Condition	last <= * now	2902:20:113173:113184	4800190	0	True				
ANR	4800992	RelationalExpression	last <= * now		4800190	0		<=			
ANR	4800993	Identifier	last		4800190	0					
ANR	4800994	UnaryOperationExpression	* now		4800190	1					
ANR	4800995	UnaryOperator	*		4800190	0					
ANR	4800996	Identifier	now		4800190	1					
ANR	4800997	BreakStatement	break ;	2902:34:113187:113192	4800190	1	True				
ANR	4800998	ExpressionStatement	last = * now ++	2903:17:113211:113224	4800190	1	True				
ANR	4800999	AssignmentExpression	last = * now ++		4800190	0		=			
ANR	4801000	Identifier	last		4800190	0					
ANR	4801001	UnaryOperationExpression	* now ++		4800190	1					
ANR	4801002	UnaryOperator	*		4800190	0					
ANR	4801003	PostIncDecOperationExpression	now ++		4800190	1					
ANR	4801004	Identifier	now		4800190	0					
ANR	4801005	IncDec	++		4800190	1					
ANR	4801006	IfStatement	if ( 0 <= n )		4800190	8					
ANR	4801007	Condition	0 <= n	2907:15:113315:113320	4800190	0	True				
ANR	4801008	RelationalExpression	0 <= n		4800190	0		<=			
ANR	4801009	PrimaryExpression	0		4800190	0					
ANR	4801010	Identifier	n		4800190	1					
ANR	4801011	CompoundStatement		133:23:4517:4517	4800190	1					
ANR	4801012	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: %d. Component has non monoton Xfer\\n"" , imap + 1 )"	2909:15:113384:113486	4800190	0	True				
ANR	4801013	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: %d. Component has non monoton Xfer\\n"" , imap + 1 )"		4800190	0					
ANR	4801014	Callee	errprintf		4800190	0					
ANR	4801015	Identifier	errprintf		4800190	0					
ANR	4801016	ArgumentList	udev -> memory		4800190	1					
ANR	4801017	Argument	udev -> memory		4800190	0					
ANR	4801018	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4801019	Identifier	udev		4800190	0					
ANR	4801020	Identifier	memory		4800190	1					
ANR	4801021	Argument	"""upd_open_map: %d. Component has non monoton Xfer\\n"""		4800190	1					
ANR	4801022	PrimaryExpression	"""upd_open_map: %d. Component has non monoton Xfer\\n"""		4800190	0					
ANR	4801023	Argument	imap + 1		4800190	2					
ANR	4801024	AdditiveExpression	imap + 1		4800190	0		+			
ANR	4801025	Identifier	imap		4800190	0					
ANR	4801026	PrimaryExpression	1		4800190	1					
ANR	4801027	ExpressionStatement	success = false	2912:15:113510:113525	4800190	1	True				
ANR	4801028	AssignmentExpression	success = false		4800190	0		=			
ANR	4801029	Identifier	success		4800190	0					
ANR	4801030	Identifier	false		4800190	1					
ANR	4801031	ElseStatement	else		4800190	0					
ANR	4801032	CompoundStatement		140:19:4741:4741	4800190	0					
ANR	4801033	ExpressionStatement	bitmsk = ( ( uint32_t ) 1 << upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) - 1	2918:15:113610:113676	4800190	0	True				
ANR	4801034	AssignmentExpression	bitmsk = ( ( uint32_t ) 1 << upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) - 1		4800190	0		=			
ANR	4801035	Identifier	bitmsk		4800190	0					
ANR	4801036	AdditiveExpression	( ( uint32_t ) 1 << upd -> int_a [ IA_COMPBITS ] . data [ imap ] ) - 1		4800190	1		-			
ANR	4801037	ShiftExpression	( uint32_t ) 1 << upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	0		<<			
ANR	4801038	CastExpression	( uint32_t ) 1		4800190	0					
ANR	4801039	CastTarget	uint32_t		4800190	0					
ANR	4801040	PrimaryExpression	1		4800190	1					
ANR	4801041	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	1					
ANR	4801042	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		4800190	0					
ANR	4801043	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		4800190	0					
ANR	4801044	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4801045	Identifier	upd		4800190	0					
ANR	4801046	Identifier	int_a		4800190	1					
ANR	4801047	Identifier	IA_COMPBITS		4800190	1					
ANR	4801048	Identifier	data		4800190	1					
ANR	4801049	Identifier	imap		4800190	1					
ANR	4801050	PrimaryExpression	1		4800190	1					
ANR	4801051	ExpressionStatement	bitmsk <<= upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]	2919:15:113693:113739	4800190	1	True				
ANR	4801052	AssignmentExpression	bitmsk <<= upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	0		<<=			
ANR	4801053	Identifier	bitmsk		4800190	0					
ANR	4801054	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	1					
ANR	4801055	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		4800190	0					
ANR	4801056	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		4800190	0					
ANR	4801057	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4801058	Identifier	upd		4800190	0					
ANR	4801059	Identifier	int_a		4800190	1					
ANR	4801060	Identifier	IA_COMPSHIFT		4800190	1					
ANR	4801061	Identifier	data		4800190	1					
ANR	4801062	Identifier	imap		4800190	1					
ANR	4801063	IfStatement	if ( used & bitmsk )		4800190	2					
ANR	4801064	Condition	used & bitmsk	2921:18:113760:113772	4800190	0	True				
ANR	4801065	BitAndExpression	used & bitmsk		4800190	0		&			
ANR	4801066	Identifier	used		4800190	0					
ANR	4801067	Identifier	bitmsk		4800190	1					
ANR	4801068	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: %d. Component overlaps with others\\n"" , imap + 1 )"	2921:33:113775:113877	4800190	1	True				
ANR	4801069	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: %d. Component overlaps with others\\n"" , imap + 1 )"		4800190	0					
ANR	4801070	Callee	errprintf		4800190	0					
ANR	4801071	Identifier	errprintf		4800190	0					
ANR	4801072	ArgumentList	udev -> memory		4800190	1					
ANR	4801073	Argument	udev -> memory		4800190	0					
ANR	4801074	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4801075	Identifier	udev		4800190	0					
ANR	4801076	Identifier	memory		4800190	1					
ANR	4801077	Argument	"""upd_open_map: %d. Component overlaps with others\\n"""		4800190	1					
ANR	4801078	PrimaryExpression	"""upd_open_map: %d. Component overlaps with others\\n"""		4800190	0					
ANR	4801079	Argument	imap + 1		4800190	2					
ANR	4801080	AdditiveExpression	imap + 1		4800190	0		+			
ANR	4801081	Identifier	imap		4800190	0					
ANR	4801082	PrimaryExpression	1		4800190	1					
ANR	4801083	ExpressionStatement	used |= bitmsk	2924:15:113895:113909	4800190	3	True				
ANR	4801084	AssignmentExpression	used |= bitmsk		4800190	0		|=			
ANR	4801085	Identifier	used		4800190	0					
ANR	4801086	Identifier	bitmsk		4800190	1					
ANR	4801087	IfStatement	if ( ! success )		4800190	3					
ANR	4801088	Condition	! success	2930:9:113961:113968	4800190	0	True				
ANR	4801089	UnaryOperationExpression	! success		4800190	0					
ANR	4801090	UnaryOperator	!		4800190	0					
ANR	4801091	Identifier	success		4800190	1					
ANR	4801092	ExpressionStatement	imap = 0	2930:19:113971:113979	4800190	1	True				
ANR	4801093	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801094	Identifier	imap		4800190	0					
ANR	4801095	PrimaryExpression	0		4800190	1					
ANR	4801096	IfStatement	if ( imap )		4800190	7					
ANR	4801097	Condition	imap	2936:6:114059:114062	4800190	0	True				
ANR	4801098	Identifier	imap		4800190	0					
ANR	4801099	CompoundStatement		162:12:5259:5259	4800190	1					
ANR	4801100	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		4800190	0					
ANR	4801101	ForInit	imap = 0 ;	2938:10:114078:114086	4800190	0	True				
ANR	4801102	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801103	Identifier	imap		4800190	0					
ANR	4801104	PrimaryExpression	0		4800190	1					
ANR	4801105	Condition	UPD_CMAP_MAX > imap	2938:20:114088:114106	4800190	1	True				
ANR	4801106	RelationalExpression	UPD_CMAP_MAX > imap		4800190	0		>			
ANR	4801107	Identifier	UPD_CMAP_MAX		4800190	0					
ANR	4801108	Identifier	imap		4800190	1					
ANR	4801109	UnaryExpression	++ imap	2938:41:114109:114114	4800190	2	True				
ANR	4801110	IncDec	++		4800190	0					
ANR	4801111	Identifier	imap		4800190	1					
ANR	4801112	CompoundStatement		164:49:5311:5311	4800190	3					
ANR	4801113	IfStatement	if ( 0 > upd -> cmap [ imap ] . xfer )		4800190	0					
ANR	4801114	Condition	0 > upd -> cmap [ imap ] . xfer	2939:12:114131:114154	4800190	0	True				
ANR	4801115	RelationalExpression	0 > upd -> cmap [ imap ] . xfer		4800190	0		>			
ANR	4801116	PrimaryExpression	0		4800190	0					
ANR	4801117	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4801118	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801119	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801120	Identifier	upd		4800190	0					
ANR	4801121	Identifier	cmap		4800190	1					
ANR	4801122	Identifier	imap		4800190	1					
ANR	4801123	Identifier	xfer		4800190	1					
ANR	4801124	ContinueStatement	continue ;	2939:38:114157:114165	4800190	1	True				
ANR	4801125	ExpressionStatement	upd -> cmap [ imap ] . bits = upd -> int_a [ IA_COMPBITS ] . data [ imap ]	2941:9:114177:114238	4800190	1	True				
ANR	4801126	AssignmentExpression	upd -> cmap [ imap ] . bits = upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	0		=			
ANR	4801127	MemberAccess	upd -> cmap [ imap ] . bits		4800190	0					
ANR	4801128	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801129	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801130	Identifier	upd		4800190	0					
ANR	4801131	Identifier	cmap		4800190	1					
ANR	4801132	Identifier	imap		4800190	1					
ANR	4801133	Identifier	bits		4800190	1					
ANR	4801134	ArrayIndexing	upd -> int_a [ IA_COMPBITS ] . data [ imap ]		4800190	1					
ANR	4801135	MemberAccess	upd -> int_a [ IA_COMPBITS ] . data		4800190	0					
ANR	4801136	ArrayIndexing	upd -> int_a [ IA_COMPBITS ]		4800190	0					
ANR	4801137	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4801138	Identifier	upd		4800190	0					
ANR	4801139	Identifier	int_a		4800190	1					
ANR	4801140	Identifier	IA_COMPBITS		4800190	1					
ANR	4801141	Identifier	data		4800190	1					
ANR	4801142	Identifier	imap		4800190	1					
ANR	4801143	ExpressionStatement	upd -> cmap [ imap ] . bitshf = upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]	2942:9:114249:114311	4800190	2	True				
ANR	4801144	AssignmentExpression	upd -> cmap [ imap ] . bitshf = upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	0		=			
ANR	4801145	MemberAccess	upd -> cmap [ imap ] . bitshf		4800190	0					
ANR	4801146	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801147	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801148	Identifier	upd		4800190	0					
ANR	4801149	Identifier	cmap		4800190	1					
ANR	4801150	Identifier	imap		4800190	1					
ANR	4801151	Identifier	bitshf		4800190	1					
ANR	4801152	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ] . data [ imap ]		4800190	1					
ANR	4801153	MemberAccess	upd -> int_a [ IA_COMPSHIFT ] . data		4800190	0					
ANR	4801154	ArrayIndexing	upd -> int_a [ IA_COMPSHIFT ]		4800190	0					
ANR	4801155	PtrMemberAccess	upd -> int_a		4800190	0					
ANR	4801156	Identifier	upd		4800190	0					
ANR	4801157	Identifier	int_a		4800190	1					
ANR	4801158	Identifier	IA_COMPSHIFT		4800190	1					
ANR	4801159	Identifier	data		4800190	1					
ANR	4801160	Identifier	imap		4800190	1					
ANR	4801161	ExpressionStatement	upd -> cmap [ imap ] . bitmsk = 1	2943:9:114322:114350	4800190	3	True				
ANR	4801162	AssignmentExpression	upd -> cmap [ imap ] . bitmsk = 1		4800190	0		=			
ANR	4801163	MemberAccess	upd -> cmap [ imap ] . bitmsk		4800190	0					
ANR	4801164	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801165	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801166	Identifier	upd		4800190	0					
ANR	4801167	Identifier	cmap		4800190	1					
ANR	4801168	Identifier	imap		4800190	1					
ANR	4801169	Identifier	bitmsk		4800190	1					
ANR	4801170	PrimaryExpression	1		4800190	1					
ANR	4801171	ExpressionStatement	upd -> cmap [ imap ] . bitmsk <<= upd -> cmap [ imap ] . bits	2944:9:114361:114408	4800190	4	True				
ANR	4801172	AssignmentExpression	upd -> cmap [ imap ] . bitmsk <<= upd -> cmap [ imap ] . bits		4800190	0		<<=			
ANR	4801173	MemberAccess	upd -> cmap [ imap ] . bitmsk		4800190	0					
ANR	4801174	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801175	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801176	Identifier	upd		4800190	0					
ANR	4801177	Identifier	cmap		4800190	1					
ANR	4801178	Identifier	imap		4800190	1					
ANR	4801179	Identifier	bitmsk		4800190	1					
ANR	4801180	MemberAccess	upd -> cmap [ imap ] . bits		4800190	1					
ANR	4801181	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801182	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801183	Identifier	upd		4800190	0					
ANR	4801184	Identifier	cmap		4800190	1					
ANR	4801185	Identifier	imap		4800190	1					
ANR	4801186	Identifier	bits		4800190	1					
ANR	4801187	ExpressionStatement	upd -> cmap [ imap ] . bitmsk -= 1	2945:9:114419:114447	4800190	5	True				
ANR	4801188	AssignmentExpression	upd -> cmap [ imap ] . bitmsk -= 1		4800190	0		-=			
ANR	4801189	MemberAccess	upd -> cmap [ imap ] . bitmsk		4800190	0					
ANR	4801190	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801191	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801192	Identifier	upd		4800190	0					
ANR	4801193	Identifier	cmap		4800190	1					
ANR	4801194	Identifier	imap		4800190	1					
ANR	4801195	Identifier	bitmsk		4800190	1					
ANR	4801196	PrimaryExpression	1		4800190	1					
ANR	4801197	ExpressionStatement	upd -> cmap [ imap ] . rise = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ] ? true : false	2946:9:114458:114679	4800190	6	True				
ANR	4801198	AssignmentExpression	upd -> cmap [ imap ] . rise = upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ] ? true : false		4800190	0		=			
ANR	4801199	MemberAccess	upd -> cmap [ imap ] . rise		4800190	0					
ANR	4801200	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801201	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801202	Identifier	upd		4800190	0					
ANR	4801203	Identifier	cmap		4800190	1					
ANR	4801204	Identifier	imap		4800190	1					
ANR	4801205	Identifier	rise		4800190	1					
ANR	4801206	ConditionalExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ] ? true : false		4800190	1					
ANR	4801207	Condition	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ]		4800190	0					
ANR	4801208	RelationalExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ] < upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ]		4800190	0		<			
ANR	4801209	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ 0 ]		4800190	0					
ANR	4801210	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		4800190	0					
ANR	4801211	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4801212	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4801213	Identifier	upd		4800190	0					
ANR	4801214	Identifier	float_a		4800190	1					
ANR	4801215	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4801216	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801217	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801218	Identifier	upd		4800190	0					
ANR	4801219	Identifier	cmap		4800190	1					
ANR	4801220	Identifier	imap		4800190	1					
ANR	4801221	Identifier	xfer		4800190	1					
ANR	4801222	Identifier	data		4800190	1					
ANR	4801223	PrimaryExpression	0		4800190	1					
ANR	4801224	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1 ]		4800190	1					
ANR	4801225	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		4800190	0					
ANR	4801226	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4801227	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4801228	Identifier	upd		4800190	0					
ANR	4801229	Identifier	float_a		4800190	1					
ANR	4801230	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4801231	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801232	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801233	Identifier	upd		4800190	0					
ANR	4801234	Identifier	cmap		4800190	1					
ANR	4801235	Identifier	imap		4800190	1					
ANR	4801236	Identifier	xfer		4800190	1					
ANR	4801237	Identifier	data		4800190	1					
ANR	4801238	AdditiveExpression	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size - 1		4800190	1		-			
ANR	4801239	MemberAccess	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		4800190	0					
ANR	4801240	ArrayIndexing	upd -> float_a [ upd -> cmap [ imap ] . xfer ]		4800190	0					
ANR	4801241	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4801242	Identifier	upd		4800190	0					
ANR	4801243	Identifier	float_a		4800190	1					
ANR	4801244	MemberAccess	upd -> cmap [ imap ] . xfer		4800190	1					
ANR	4801245	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801246	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801247	Identifier	upd		4800190	0					
ANR	4801248	Identifier	cmap		4800190	1					
ANR	4801249	Identifier	imap		4800190	1					
ANR	4801250	Identifier	xfer		4800190	1					
ANR	4801251	Identifier	size		4800190	1					
ANR	4801252	PrimaryExpression	1		4800190	1					
ANR	4801253	Identifier	true		4800190	1					
ANR	4801254	Identifier	false		4800190	2					
ANR	4801255	ExpressionStatement	"upd -> cmap [ imap ] . code = gs_malloc ( udev -> memory , upd -> cmap [ imap ] . bitmsk + 1 , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , ""upd/code"" )"	2951:9:114690:114823	4800190	7	True				
ANR	4801256	AssignmentExpression	"upd -> cmap [ imap ] . code = gs_malloc ( udev -> memory , upd -> cmap [ imap ] . bitmsk + 1 , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , ""upd/code"" )"		4800190	0		=			
ANR	4801257	MemberAccess	upd -> cmap [ imap ] . code		4800190	0					
ANR	4801258	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801259	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801260	Identifier	upd		4800190	0					
ANR	4801261	Identifier	cmap		4800190	1					
ANR	4801262	Identifier	imap		4800190	1					
ANR	4801263	Identifier	code		4800190	1					
ANR	4801264	CallExpression	"gs_malloc ( udev -> memory , upd -> cmap [ imap ] . bitmsk + 1 , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , ""upd/code"" )"		4800190	1					
ANR	4801265	Callee	gs_malloc		4800190	0					
ANR	4801266	Identifier	gs_malloc		4800190	0					
ANR	4801267	ArgumentList	udev -> memory		4800190	1					
ANR	4801268	Argument	udev -> memory		4800190	0					
ANR	4801269	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4801270	Identifier	udev		4800190	0					
ANR	4801271	Identifier	memory		4800190	1					
ANR	4801272	Argument	upd -> cmap [ imap ] . bitmsk + 1		4800190	1					
ANR	4801273	AdditiveExpression	upd -> cmap [ imap ] . bitmsk + 1		4800190	0		+			
ANR	4801274	MemberAccess	upd -> cmap [ imap ] . bitmsk		4800190	0					
ANR	4801275	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801276	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801277	Identifier	upd		4800190	0					
ANR	4801278	Identifier	cmap		4800190	1					
ANR	4801279	Identifier	imap		4800190	1					
ANR	4801280	Identifier	bitmsk		4800190	1					
ANR	4801281	PrimaryExpression	1		4800190	1					
ANR	4801282	Argument	sizeof ( upd -> cmap [ imap ] . code [ 0 ] )		4800190	2					
ANR	4801283	SizeofExpression	sizeof ( upd -> cmap [ imap ] . code [ 0 ] )		4800190	0					
ANR	4801284	Sizeof	sizeof		4800190	0					
ANR	4801285	ArrayIndexing	upd -> cmap [ imap ] . code [ 0 ]		4800190	1					
ANR	4801286	MemberAccess	upd -> cmap [ imap ] . code		4800190	0					
ANR	4801287	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801288	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801289	Identifier	upd		4800190	0					
ANR	4801290	Identifier	cmap		4800190	1					
ANR	4801291	Identifier	imap		4800190	1					
ANR	4801292	Identifier	code		4800190	1					
ANR	4801293	PrimaryExpression	0		4800190	1					
ANR	4801294	Argument	"""upd/code"""		4800190	3					
ANR	4801295	PrimaryExpression	"""upd/code"""		4800190	0					
ANR	4801296	IfStatement	if ( ! upd -> cmap [ imap ] . code )		4800190	8					
ANR	4801297	Condition	! upd -> cmap [ imap ] . code	2953:12:114837:114857	4800190	0	True				
ANR	4801298	UnaryOperationExpression	! upd -> cmap [ imap ] . code		4800190	0					
ANR	4801299	UnaryOperator	!		4800190	0					
ANR	4801300	MemberAccess	upd -> cmap [ imap ] . code		4800190	1					
ANR	4801301	ArrayIndexing	upd -> cmap [ imap ]		4800190	0					
ANR	4801302	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801303	Identifier	upd		4800190	0					
ANR	4801304	Identifier	cmap		4800190	1					
ANR	4801305	Identifier	imap		4800190	1					
ANR	4801306	Identifier	code		4800190	1					
ANR	4801307	BreakStatement	break ;	2953:35:114860:114865	4800190	1	True				
ANR	4801308	IfStatement	if ( UPD_CMAP_MAX > imap )		4800190	1					
ANR	4801309	Condition	UPD_CMAP_MAX > imap	2956:9:114885:114903	4800190	0	True				
ANR	4801310	RelationalExpression	UPD_CMAP_MAX > imap		4800190	0		>			
ANR	4801311	Identifier	UPD_CMAP_MAX		4800190	0					
ANR	4801312	Identifier	imap		4800190	1					
ANR	4801313	CompoundStatement		182:30:6100:6100	4800190	1					
ANR	4801314	ExpressionStatement	imap = 0	2958:9:114918:114926	4800190	0	True				
ANR	4801315	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801316	Identifier	imap		4800190	0					
ANR	4801317	PrimaryExpression	0		4800190	1					
ANR	4801318	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_map: could not allocate code-arrays\\n"" )"	2961:12:114977:115072	4800190	1	True				
ANR	4801319	CallExpression	"errprintf ( udev -> memory , ""upd_open_map: could not allocate code-arrays\\n"" )"		4800190	0					
ANR	4801320	Callee	errprintf		4800190	0					
ANR	4801321	Identifier	errprintf		4800190	0					
ANR	4801322	ArgumentList	udev -> memory		4800190	1					
ANR	4801323	Argument	udev -> memory		4800190	0					
ANR	4801324	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4801325	Identifier	udev		4800190	0					
ANR	4801326	Identifier	memory		4800190	1					
ANR	4801327	Argument	"""upd_open_map: could not allocate code-arrays\\n"""		4800190	1					
ANR	4801328	PrimaryExpression	"""upd_open_map: could not allocate code-arrays\\n"""		4800190	0					
ANR	4801329	Statement	endif	2963:9:115083:115087	4800190	2	True				
ANR	4801330	IfStatement	if ( imap )		4800190	8					
ANR	4801331	Condition	imap	2970:6:115144:115147	4800190	0	True				
ANR	4801332	Identifier	imap		4800190	0					
ANR	4801333	CompoundStatement		196:12:6344:6344	4800190	1					
ANR	4801334	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		4800190	0					
ANR	4801335	ForInit	imap = 0 ;	2978:10:115338:115346	4800190	0	True				
ANR	4801336	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801337	Identifier	imap		4800190	0					
ANR	4801338	PrimaryExpression	0		4800190	1					
ANR	4801339	Condition	UPD_CMAP_MAX > imap	2978:20:115348:115366	4800190	1	True				
ANR	4801340	RelationalExpression	UPD_CMAP_MAX > imap		4800190	0		>			
ANR	4801341	Identifier	UPD_CMAP_MAX		4800190	0					
ANR	4801342	Identifier	imap		4800190	1					
ANR	4801343	UnaryExpression	++ imap	2978:41:115369:115374	4800190	2	True				
ANR	4801344	IncDec	++		4800190	0					
ANR	4801345	Identifier	imap		4800190	1					
ANR	4801346	CompoundStatement		211:9:6747:6766	4800190	3					
ANR	4801347	IdentifierDeclStatement	const updcmap_p cmap = upd -> cmap + imap ;	2980:9:115389:115428	4800190	0	True				
ANR	4801348	IdentifierDecl	cmap = upd -> cmap + imap		4800190	0					
ANR	4801349	IdentifierDeclType	const updcmap_p		4800190	0					
ANR	4801350	Identifier	cmap		4800190	1					
ANR	4801351	AssignmentExpression	cmap = upd -> cmap + imap		4800190	2		=			
ANR	4801352	Identifier	cmap		4800190	0					
ANR	4801353	AdditiveExpression	upd -> cmap + imap		4800190	1		+			
ANR	4801354	PtrMemberAccess	upd -> cmap		4800190	0					
ANR	4801355	Identifier	upd		4800190	0					
ANR	4801356	Identifier	cmap		4800190	1					
ANR	4801357	Identifier	imap		4800190	1					
ANR	4801358	IdentifierDeclStatement	"uint32_t ly , iy ;"	2981:9:115439:115453	4800190	1	True				
ANR	4801359	IdentifierDecl	ly		4800190	0					
ANR	4801360	IdentifierDeclType	uint32_t		4800190	0					
ANR	4801361	Identifier	ly		4800190	1					
ANR	4801362	IdentifierDecl	iy		4800190	1					
ANR	4801363	IdentifierDeclType	uint32_t		4800190	0					
ANR	4801364	Identifier	iy		4800190	1					
ANR	4801365	IdentifierDeclStatement	"float ystep , xstep , fx , fy ;"	2982:9:115464:115487	4800190	2	True				
ANR	4801366	IdentifierDecl	ystep		4800190	0					
ANR	4801367	IdentifierDeclType	float		4800190	0					
ANR	4801368	Identifier	ystep		4800190	1					
ANR	4801369	IdentifierDecl	xstep		4800190	1					
ANR	4801370	IdentifierDeclType	float		4800190	0					
ANR	4801371	Identifier	xstep		4800190	1					
ANR	4801372	IdentifierDecl	fx		4800190	2					
ANR	4801373	IdentifierDeclType	float		4800190	0					
ANR	4801374	Identifier	fx		4800190	1					
ANR	4801375	IdentifierDecl	fy		4800190	3					
ANR	4801376	IdentifierDeclType	float		4800190	0					
ANR	4801377	Identifier	fy		4800190	1					
ANR	4801378	IdentifierDeclStatement	"double offset , scale ;"	2985:9:115553:115572	4800190	3	True				
ANR	4801379	IdentifierDecl	offset		4800190	0					
ANR	4801380	IdentifierDeclType	double		4800190	0					
ANR	4801381	Identifier	offset		4800190	1					
ANR	4801382	IdentifierDecl	scale		4800190	1					
ANR	4801383	IdentifierDeclType	double		4800190	0					
ANR	4801384	Identifier	scale		4800190	1					
ANR	4801385	Statement	define	2986:1:115575:115580	4800190	4	True				
ANR	4801386	Statement	XFVAL	2986:9:115583:115587	4800190	5	True				
ANR	4801387	Statement	(	2986:14:115588:115588	4800190	6	True				
ANR	4801388	Statement	I	2986:15:115589:115589	4800190	7	True				
ANR	4801389	Statement	)	2986:16:115590:115590	4800190	8	True				
ANR	4801390	Statement	(	2986:18:115592:115592	4800190	9	True				
ANR	4801391	Statement	(	2986:19:115593:115593	4800190	10	True				
ANR	4801392	Statement	upd	2986:20:115594:115596	4800190	11	True				
ANR	4801393	Statement	->	2986:23:115597:115598	4800190	12	True				
ANR	4801394	Statement	float_a	2986:25:115599:115605	4800190	13	True				
ANR	4801395	Statement	[	2986:32:115606:115606	4800190	14	True				
ANR	4801396	Statement	cmap	2986:33:115607:115610	4800190	15	True				
ANR	4801397	Statement	->	2986:37:115611:115612	4800190	16	True				
ANR	4801398	Statement	xfer	2986:39:115613:115616	4800190	17	True				
ANR	4801399	Statement	]	2986:43:115617:115617	4800190	18	True				
ANR	4801400	Statement	.	2986:44:115618:115618	4800190	19	True				
ANR	4801401	Statement	data	2986:45:115619:115622	4800190	20	True				
ANR	4801402	Statement	[	2986:49:115623:115623	4800190	21	True				
ANR	4801403	Statement	I	2986:50:115624:115624	4800190	22	True				
ANR	4801404	Statement	]	2986:51:115625:115625	4800190	23	True				
ANR	4801405	Statement	-	2986:52:115626:115626	4800190	24	True				
ANR	4801406	Statement	offset	2986:53:115627:115632	4800190	25	True				
ANR	4801407	Statement	)	2986:59:115633:115633	4800190	26	True				
ANR	4801408	Statement	*	2986:60:115634:115634	4800190	27	True				
ANR	4801409	Statement	scale	2986:61:115635:115639	4800190	28	True				
ANR	4801410	Statement	)	2986:66:115640:115640	4800190	29	True				
ANR	4801411	IfStatement	if ( 0 > cmap -> xfer )		4800190	30					
ANR	4801412	Condition	0 > cmap -> xfer	2988:12:115655:115668	4800190	0	True				
ANR	4801413	RelationalExpression	0 > cmap -> xfer		4800190	0		>			
ANR	4801414	PrimaryExpression	0		4800190	0					
ANR	4801415	PtrMemberAccess	cmap -> xfer		4800190	1					
ANR	4801416	Identifier	cmap		4800190	0					
ANR	4801417	Identifier	xfer		4800190	1					
ANR	4801418	ContinueStatement	continue ;	2988:28:115671:115679	4800190	1	True				
ANR	4801419	ExpressionStatement	cmap -> code [ cmap -> bitmsk ] = gx_max_color_value	2990:9:115691:115736	4800190	31	True				
ANR	4801420	AssignmentExpression	cmap -> code [ cmap -> bitmsk ] = gx_max_color_value		4800190	0		=			
ANR	4801421	ArrayIndexing	cmap -> code [ cmap -> bitmsk ]		4800190	0					
ANR	4801422	PtrMemberAccess	cmap -> code		4800190	0					
ANR	4801423	Identifier	cmap		4800190	0					
ANR	4801424	Identifier	code		4800190	1					
ANR	4801425	PtrMemberAccess	cmap -> bitmsk		4800190	1					
ANR	4801426	Identifier	cmap		4800190	0					
ANR	4801427	Identifier	bitmsk		4800190	1					
ANR	4801428	Identifier	gx_max_color_value		4800190	1					
ANR	4801429	IfStatement	if ( ! cmap -> bits )		4800190	32					
ANR	4801430	Condition	! cmap -> bits	2992:12:115751:115761	4800190	0	True				
ANR	4801431	UnaryOperationExpression	! cmap -> bits		4800190	0					
ANR	4801432	UnaryOperator	!		4800190	0					
ANR	4801433	PtrMemberAccess	cmap -> bits		4800190	1					
ANR	4801434	Identifier	cmap		4800190	0					
ANR	4801435	Identifier	bits		4800190	1					
ANR	4801436	ContinueStatement	continue ;	2992:25:115764:115772	4800190	1	True				
ANR	4801437	ExpressionStatement	offset = upd -> float_a [ cmap -> xfer ] . data [ 0 ]	2994:9:115784:115825	4800190	33	True				
ANR	4801438	AssignmentExpression	offset = upd -> float_a [ cmap -> xfer ] . data [ 0 ]		4800190	0		=			
ANR	4801439	Identifier	offset		4800190	0					
ANR	4801440	ArrayIndexing	upd -> float_a [ cmap -> xfer ] . data [ 0 ]		4800190	1					
ANR	4801441	MemberAccess	upd -> float_a [ cmap -> xfer ] . data		4800190	0					
ANR	4801442	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		4800190	0					
ANR	4801443	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4801444	Identifier	upd		4800190	0					
ANR	4801445	Identifier	float_a		4800190	1					
ANR	4801446	PtrMemberAccess	cmap -> xfer		4800190	1					
ANR	4801447	Identifier	cmap		4800190	0					
ANR	4801448	Identifier	xfer		4800190	1					
ANR	4801449	Identifier	data		4800190	1					
ANR	4801450	PrimaryExpression	0		4800190	1					
ANR	4801451	IfStatement	if ( 0.0 > offset )		4800190	34					
ANR	4801452	Condition	0.0 > offset	2995:17:115844:115855	4800190	0	True				
ANR	4801453	RelationalExpression	0.0 > offset		4800190	0		>			
ANR	4801454	PrimaryExpression	0.0		4800190	0					
ANR	4801455	Identifier	offset		4800190	1					
ANR	4801456	ExpressionStatement	offset = 0.0	2995:31:115858:115870	4800190	1	True				
ANR	4801457	AssignmentExpression	offset = 0.0		4800190	0		=			
ANR	4801458	Identifier	offset		4800190	0					
ANR	4801459	PrimaryExpression	0.0		4800190	1					
ANR	4801460	ElseStatement	else		4800190	0					
ANR	4801461	IfStatement	if ( 1.0 < offset )		4800190	0					
ANR	4801462	Condition	1.0 < offset	2996:17:115889:115900	4800190	0	True				
ANR	4801463	RelationalExpression	1.0 < offset		4800190	0		<			
ANR	4801464	PrimaryExpression	1.0		4800190	0					
ANR	4801465	Identifier	offset		4800190	1					
ANR	4801466	ExpressionStatement	offset = 1.0	2996:31:115903:115915	4800190	1	True				
ANR	4801467	AssignmentExpression	offset = 1.0		4800190	0		=			
ANR	4801468	Identifier	offset		4800190	0					
ANR	4801469	PrimaryExpression	1.0		4800190	1					
ANR	4801470	ExpressionStatement	scale = upd -> float_a [ cmap -> xfer ] . data [ upd -> float_a [ cmap -> xfer ] . size - 1 ]	2998:9:115927:115998	4800190	35	True				
ANR	4801471	AssignmentExpression	scale = upd -> float_a [ cmap -> xfer ] . data [ upd -> float_a [ cmap -> xfer ] . size - 1 ]		4800190	0		=			
ANR	4801472	Identifier	scale		4800190	0					
ANR	4801473	ArrayIndexing	upd -> float_a [ cmap -> xfer ] . data [ upd -> float_a [ cmap -> xfer ] . size - 1 ]		4800190	1					
ANR	4801474	MemberAccess	upd -> float_a [ cmap -> xfer ] . data		4800190	0					
ANR	4801475	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		4800190	0					
ANR	4801476	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4801477	Identifier	upd		4800190	0					
ANR	4801478	Identifier	float_a		4800190	1					
ANR	4801479	PtrMemberAccess	cmap -> xfer		4800190	1					
ANR	4801480	Identifier	cmap		4800190	0					
ANR	4801481	Identifier	xfer		4800190	1					
ANR	4801482	Identifier	data		4800190	1					
ANR	4801483	AdditiveExpression	upd -> float_a [ cmap -> xfer ] . size - 1		4800190	1		-			
ANR	4801484	MemberAccess	upd -> float_a [ cmap -> xfer ] . size		4800190	0					
ANR	4801485	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		4800190	0					
ANR	4801486	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4801487	Identifier	upd		4800190	0					
ANR	4801488	Identifier	float_a		4800190	1					
ANR	4801489	PtrMemberAccess	cmap -> xfer		4800190	1					
ANR	4801490	Identifier	cmap		4800190	0					
ANR	4801491	Identifier	xfer		4800190	1					
ANR	4801492	Identifier	size		4800190	1					
ANR	4801493	PrimaryExpression	1		4800190	1					
ANR	4801494	IfStatement	if ( 0.0 > scale )		4800190	36					
ANR	4801495	Condition	0.0 > scale	2999:17:116017:116027	4800190	0	True				
ANR	4801496	RelationalExpression	0.0 > scale		4800190	0		>			
ANR	4801497	PrimaryExpression	0.0		4800190	0					
ANR	4801498	Identifier	scale		4800190	1					
ANR	4801499	ExpressionStatement	scale = 0.0	2999:31:116031:116043	4800190	1	True				
ANR	4801500	AssignmentExpression	scale = 0.0		4800190	0		=			
ANR	4801501	Identifier	scale		4800190	0					
ANR	4801502	PrimaryExpression	0.0		4800190	1					
ANR	4801503	ElseStatement	else		4800190	0					
ANR	4801504	IfStatement	if ( 1.0 < scale )		4800190	0					
ANR	4801505	Condition	1.0 < scale	3000:17:116062:116072	4800190	0	True				
ANR	4801506	RelationalExpression	1.0 < scale		4800190	0		<			
ANR	4801507	PrimaryExpression	1.0		4800190	0					
ANR	4801508	Identifier	scale		4800190	1					
ANR	4801509	ExpressionStatement	scale = 1.0	3000:31:116076:116088	4800190	1	True				
ANR	4801510	AssignmentExpression	scale = 1.0		4800190	0		=			
ANR	4801511	Identifier	scale		4800190	0					
ANR	4801512	PrimaryExpression	1.0		4800190	1					
ANR	4801513	IfStatement	if ( scale != offset )		4800190	37					
ANR	4801514	Condition	scale != offset	3002:12:116103:116117	4800190	0	True				
ANR	4801515	EqualityExpression	scale != offset		4800190	0		!=			
ANR	4801516	Identifier	scale		4800190	0					
ANR	4801517	Identifier	offset		4800190	1					
ANR	4801518	ExpressionStatement	scale = 1.0 / ( scale - offset )	3002:29:116120:116150	4800190	1	True				
ANR	4801519	AssignmentExpression	scale = 1.0 / ( scale - offset )		4800190	0		=			
ANR	4801520	Identifier	scale		4800190	0					
ANR	4801521	MultiplicativeExpression	1.0 / ( scale - offset )		4800190	1		/			
ANR	4801522	PrimaryExpression	1.0		4800190	0					
ANR	4801523	AdditiveExpression	scale - offset		4800190	1		-			
ANR	4801524	Identifier	scale		4800190	0					
ANR	4801525	Identifier	offset		4800190	1					
ANR	4801526	ElseStatement	else		4800190	0					
ANR	4801527	ExpressionStatement	scale = 0.0	3003:29:116181:116192	4800190	0	True				
ANR	4801528	AssignmentExpression	scale = 0.0		4800190	0		=			
ANR	4801529	Identifier	scale		4800190	0					
ANR	4801530	PrimaryExpression	0.0		4800190	1					
ANR	4801531	ExpressionStatement	ystep = ( float ) 1.0 / ( float ) cmap -> bitmsk	3006:9:116228:116270	4800190	38	True				
ANR	4801532	AssignmentExpression	ystep = ( float ) 1.0 / ( float ) cmap -> bitmsk		4800190	0		=			
ANR	4801533	Identifier	ystep		4800190	0					
ANR	4801534	MultiplicativeExpression	( float ) 1.0 / ( float ) cmap -> bitmsk		4800190	1		/			
ANR	4801535	CastExpression	( float ) 1.0		4800190	0					
ANR	4801536	CastTarget	float		4800190	0					
ANR	4801537	PrimaryExpression	1.0		4800190	1					
ANR	4801538	CastExpression	( float ) cmap -> bitmsk		4800190	1					
ANR	4801539	CastTarget	float		4800190	0					
ANR	4801540	PtrMemberAccess	cmap -> bitmsk		4800190	1					
ANR	4801541	Identifier	cmap		4800190	0					
ANR	4801542	Identifier	bitmsk		4800190	1					
ANR	4801543	ExpressionStatement	xstep = ( float ) 1.0 / ( float ) ( upd -> float_a [ cmap -> xfer ] . size - 1 )	3007:9:116281:116345	4800190	39	True				
ANR	4801544	AssignmentExpression	xstep = ( float ) 1.0 / ( float ) ( upd -> float_a [ cmap -> xfer ] . size - 1 )		4800190	0		=			
ANR	4801545	Identifier	xstep		4800190	0					
ANR	4801546	MultiplicativeExpression	( float ) 1.0 / ( float ) ( upd -> float_a [ cmap -> xfer ] . size - 1 )		4800190	1		/			
ANR	4801547	CastExpression	( float ) 1.0		4800190	0					
ANR	4801548	CastTarget	float		4800190	0					
ANR	4801549	PrimaryExpression	1.0		4800190	1					
ANR	4801550	CastExpression	( float ) ( upd -> float_a [ cmap -> xfer ] . size - 1 )		4800190	1					
ANR	4801551	CastTarget	float		4800190	0					
ANR	4801552	AdditiveExpression	upd -> float_a [ cmap -> xfer ] . size - 1		4800190	1		-			
ANR	4801553	MemberAccess	upd -> float_a [ cmap -> xfer ] . size		4800190	0					
ANR	4801554	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		4800190	0					
ANR	4801555	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4801556	Identifier	upd		4800190	0					
ANR	4801557	Identifier	float_a		4800190	1					
ANR	4801558	PtrMemberAccess	cmap -> xfer		4800190	1					
ANR	4801559	Identifier	cmap		4800190	0					
ANR	4801560	Identifier	xfer		4800190	1					
ANR	4801561	Identifier	size		4800190	1					
ANR	4801562	PrimaryExpression	1		4800190	1					
ANR	4801563	ExpressionStatement	iy = 0	3009:9:116357:116363	4800190	40	True				
ANR	4801564	AssignmentExpression	iy = 0		4800190	0		=			
ANR	4801565	Identifier	iy		4800190	0					
ANR	4801566	PrimaryExpression	0		4800190	1					
ANR	4801567	ForStatement	for ( ly = 0 ; ly <= cmap -> bitmsk ; ++ ly )		4800190	41					
ANR	4801568	ForInit	ly = 0 ;	3010:13:116378:116384	4800190	0	True				
ANR	4801569	AssignmentExpression	ly = 0		4800190	0		=			
ANR	4801570	Identifier	ly		4800190	0					
ANR	4801571	PrimaryExpression	0		4800190	1					
ANR	4801572	Condition	ly <= cmap -> bitmsk	3010:21:116386:116403	4800190	1	True				
ANR	4801573	RelationalExpression	ly <= cmap -> bitmsk		4800190	0		<=			
ANR	4801574	Identifier	ly		4800190	0					
ANR	4801575	PtrMemberAccess	cmap -> bitmsk		4800190	1					
ANR	4801576	Identifier	cmap		4800190	0					
ANR	4801577	Identifier	bitmsk		4800190	1					
ANR	4801578	UnaryExpression	++ ly	3010:41:116406:116409	4800190	2	True				
ANR	4801579	IncDec	++		4800190	0					
ANR	4801580	Identifier	ly		4800190	1					
ANR	4801581	CompoundStatement		236:47:7606:7606	4800190	3					
ANR	4801582	ExpressionStatement	fy = ystep * ly	3012:12:116427:116442	4800190	0	True				
ANR	4801583	AssignmentExpression	fy = ystep * ly		4800190	0		=			
ANR	4801584	Identifier	fy		4800190	0					
ANR	4801585	MultiplicativeExpression	ystep * ly		4800190	1		*			
ANR	4801586	Identifier	ystep		4800190	0					
ANR	4801587	Identifier	ly		4800190	1					
ANR	4801588	WhileStatement	while ( ( ( iy + 2 ) < upd -> float_a [ cmap -> xfer ] . size ) && ( fy > XFVAL ( iy + 1 ) ) )		4800190	1					
ANR	4801589	Condition	( ( iy + 2 ) < upd -> float_a [ cmap -> xfer ] . size ) && ( fy > XFVAL ( iy + 1 ) )	3014:18:116482:116561	4800190	0	True				
ANR	4801590	AndExpression	( ( iy + 2 ) < upd -> float_a [ cmap -> xfer ] . size ) && ( fy > XFVAL ( iy + 1 ) )		4800190	0		&&			
ANR	4801591	RelationalExpression	( iy + 2 ) < upd -> float_a [ cmap -> xfer ] . size		4800190	0		<			
ANR	4801592	AdditiveExpression	iy + 2		4800190	0		+			
ANR	4801593	Identifier	iy		4800190	0					
ANR	4801594	PrimaryExpression	2		4800190	1					
ANR	4801595	MemberAccess	upd -> float_a [ cmap -> xfer ] . size		4800190	1					
ANR	4801596	ArrayIndexing	upd -> float_a [ cmap -> xfer ]		4800190	0					
ANR	4801597	PtrMemberAccess	upd -> float_a		4800190	0					
ANR	4801598	Identifier	upd		4800190	0					
ANR	4801599	Identifier	float_a		4800190	1					
ANR	4801600	PtrMemberAccess	cmap -> xfer		4800190	1					
ANR	4801601	Identifier	cmap		4800190	0					
ANR	4801602	Identifier	xfer		4800190	1					
ANR	4801603	Identifier	size		4800190	1					
ANR	4801604	RelationalExpression	fy > XFVAL ( iy + 1 )		4800190	1		>			
ANR	4801605	Identifier	fy		4800190	0					
ANR	4801606	CallExpression	XFVAL ( iy + 1 )		4800190	1					
ANR	4801607	Callee	XFVAL		4800190	0					
ANR	4801608	Identifier	XFVAL		4800190	0					
ANR	4801609	ArgumentList	iy + 1		4800190	1					
ANR	4801610	Argument	iy + 1		4800190	0					
ANR	4801611	AdditiveExpression	iy + 1		4800190	0		+			
ANR	4801612	Identifier	iy		4800190	0					
ANR	4801613	PrimaryExpression	1		4800190	1					
ANR	4801614	ExpressionStatement	++ iy	3015:38:116564:116568	4800190	1	True				
ANR	4801615	UnaryExpression	++ iy		4800190	0					
ANR	4801616	IncDec	++		4800190	0					
ANR	4801617	Identifier	iy		4800190	1					
ANR	4801618	ExpressionStatement	fx = iy + ( fy - XFVAL ( iy ) ) / ( XFVAL ( iy + 1 ) - XFVAL ( iy ) )	3017:12:116583:116636	4800190	2	True				
ANR	4801619	AssignmentExpression	fx = iy + ( fy - XFVAL ( iy ) ) / ( XFVAL ( iy + 1 ) - XFVAL ( iy ) )		4800190	0		=			
ANR	4801620	Identifier	fx		4800190	0					
ANR	4801621	AdditiveExpression	iy + ( fy - XFVAL ( iy ) ) / ( XFVAL ( iy + 1 ) - XFVAL ( iy ) )		4800190	1		+			
ANR	4801622	Identifier	iy		4800190	0					
ANR	4801623	MultiplicativeExpression	( fy - XFVAL ( iy ) ) / ( XFVAL ( iy + 1 ) - XFVAL ( iy ) )		4800190	1		/			
ANR	4801624	AdditiveExpression	fy - XFVAL ( iy )		4800190	0		-			
ANR	4801625	Identifier	fy		4800190	0					
ANR	4801626	CallExpression	XFVAL ( iy )		4800190	1					
ANR	4801627	Callee	XFVAL		4800190	0					
ANR	4801628	Identifier	XFVAL		4800190	0					
ANR	4801629	ArgumentList	iy		4800190	1					
ANR	4801630	Argument	iy		4800190	0					
ANR	4801631	Identifier	iy		4800190	0					
ANR	4801632	AdditiveExpression	XFVAL ( iy + 1 ) - XFVAL ( iy )		4800190	1		-			
ANR	4801633	CallExpression	XFVAL ( iy + 1 )		4800190	0					
ANR	4801634	Callee	XFVAL		4800190	0					
ANR	4801635	Identifier	XFVAL		4800190	0					
ANR	4801636	ArgumentList	iy + 1		4800190	1					
ANR	4801637	Argument	iy + 1		4800190	0					
ANR	4801638	AdditiveExpression	iy + 1		4800190	0		+			
ANR	4801639	Identifier	iy		4800190	0					
ANR	4801640	PrimaryExpression	1		4800190	1					
ANR	4801641	CallExpression	XFVAL ( iy )		4800190	1					
ANR	4801642	Callee	XFVAL		4800190	0					
ANR	4801643	Identifier	XFVAL		4800190	0					
ANR	4801644	ArgumentList	iy		4800190	1					
ANR	4801645	Argument	iy		4800190	0					
ANR	4801646	Identifier	iy		4800190	0					
ANR	4801647	ExpressionStatement	fx *= xstep * gx_max_color_value	3019:12:116651:116683	4800190	3	True				
ANR	4801648	AssignmentExpression	fx *= xstep * gx_max_color_value		4800190	0		*=			
ANR	4801649	Identifier	fx		4800190	0					
ANR	4801650	MultiplicativeExpression	xstep * gx_max_color_value		4800190	1		*			
ANR	4801651	Identifier	xstep		4800190	0					
ANR	4801652	Identifier	gx_max_color_value		4800190	1					
ANR	4801653	ExpressionStatement	fx = fx < 0.0 ? 0.0 : ( fx > gx_max_color_value ? gx_max_color_value : fx )	3021:12:116698:116789	4800190	4	True				
ANR	4801654	AssignmentExpression	fx = fx < 0.0 ? 0.0 : ( fx > gx_max_color_value ? gx_max_color_value : fx )		4800190	0		=			
ANR	4801655	Identifier	fx		4800190	0					
ANR	4801656	ConditionalExpression	fx < 0.0 ? 0.0 : ( fx > gx_max_color_value ? gx_max_color_value : fx )		4800190	1					
ANR	4801657	Condition	fx < 0.0		4800190	0					
ANR	4801658	RelationalExpression	fx < 0.0		4800190	0		<			
ANR	4801659	Identifier	fx		4800190	0					
ANR	4801660	PrimaryExpression	0.0		4800190	1					
ANR	4801661	PrimaryExpression	0.0		4800190	1					
ANR	4801662	ConditionalExpression	fx > gx_max_color_value ? gx_max_color_value : fx		4800190	2					
ANR	4801663	Condition	fx > gx_max_color_value		4800190	0					
ANR	4801664	RelationalExpression	fx > gx_max_color_value		4800190	0		>			
ANR	4801665	Identifier	fx		4800190	0					
ANR	4801666	Identifier	gx_max_color_value		4800190	1					
ANR	4801667	Identifier	gx_max_color_value		4800190	1					
ANR	4801668	Identifier	fx		4800190	2					
ANR	4801669	ExpressionStatement	cmap -> code [ ly ] = ( gx_color_value ) fx	3024:12:116804:116839	4800190	5	True				
ANR	4801670	AssignmentExpression	cmap -> code [ ly ] = ( gx_color_value ) fx		4800190	0		=			
ANR	4801671	ArrayIndexing	cmap -> code [ ly ]		4800190	0					
ANR	4801672	PtrMemberAccess	cmap -> code		4800190	0					
ANR	4801673	Identifier	cmap		4800190	0					
ANR	4801674	Identifier	code		4800190	1					
ANR	4801675	Identifier	ly		4800190	1					
ANR	4801676	CastExpression	( gx_color_value ) fx		4800190	1					
ANR	4801677	CastTarget	gx_color_value		4800190	0					
ANR	4801678	Identifier	fx		4800190	1					
ANR	4801679	IfStatement	if ( ( fx - cmap -> code [ ly ] ) >= 0.5 )		4800190	6					
ANR	4801680	Condition	( fx - cmap -> code [ ly ] ) >= 0.5	3025:15:116856:116883	4800190	0	True				
ANR	4801681	RelationalExpression	( fx - cmap -> code [ ly ] ) >= 0.5		4800190	0		>=			
ANR	4801682	AdditiveExpression	fx - cmap -> code [ ly ]		4800190	0		-			
ANR	4801683	Identifier	fx		4800190	0					
ANR	4801684	ArrayIndexing	cmap -> code [ ly ]		4800190	1					
ANR	4801685	PtrMemberAccess	cmap -> code		4800190	0					
ANR	4801686	Identifier	cmap		4800190	0					
ANR	4801687	Identifier	code		4800190	1					
ANR	4801688	Identifier	ly		4800190	1					
ANR	4801689	PrimaryExpression	0.5		4800190	1					
ANR	4801690	ExpressionStatement	cmap -> code [ ly ] += 1	3025:45:116886:116905	4800190	1	True				
ANR	4801691	AssignmentExpression	cmap -> code [ ly ] += 1		4800190	0		+=			
ANR	4801692	ArrayIndexing	cmap -> code [ ly ]		4800190	0					
ANR	4801693	PtrMemberAccess	cmap -> code		4800190	0					
ANR	4801694	Identifier	cmap		4800190	0					
ANR	4801695	Identifier	code		4800190	1					
ANR	4801696	Identifier	ly		4800190	1					
ANR	4801697	PrimaryExpression	1		4800190	1					
ANR	4801698	Statement	undef	3028:1:116920:116924	4800190	42	True				
ANR	4801699	Statement	XFVAL	3028:9:116928:116932	4800190	43	True				
ANR	4801700	IfStatement	if ( imap )		4800190	9					
ANR	4801701	Condition	imap	3035:6:116995:116998	4800190	0	True				
ANR	4801702	Identifier	imap		4800190	0					
ANR	4801703	CompoundStatement		261:12:8195:8195	4800190	1					
ANR	4801704	SwitchStatement	switch ( upd -> choice [ C_MAPPER ] )		4800190	0					
ANR	4801705	Condition	upd -> choice [ C_MAPPER ]	3036:13:117016:117036	4800190	0	True				
ANR	4801706	ArrayIndexing	upd -> choice [ C_MAPPER ]		4800190	0					
ANR	4801707	PtrMemberAccess	upd -> choice		4800190	0					
ANR	4801708	Identifier	upd		4800190	0					
ANR	4801709	Identifier	choice		4800190	1					
ANR	4801710	Identifier	C_MAPPER		4800190	1					
ANR	4801711	CompoundStatement		262:36:8233:8233	4800190	1					
ANR	4801712	Label	case MAP_GRAY :	3037:9:117050:117063	4800190	0	True				
ANR	4801713	Identifier	MAP_GRAY		4800190	0					
ANR	4801714	IfStatement	if ( 1 > imap )		4800190	1					
ANR	4801715	Condition	1 > imap	3038:14:117079:117086	4800190	0	True				
ANR	4801716	RelationalExpression	1 > imap		4800190	0		>			
ANR	4801717	PrimaryExpression	1		4800190	0					
ANR	4801718	Identifier	imap		4800190	1					
ANR	4801719	ExpressionStatement	imap = 0	3038:24:117089:117097	4800190	1	True				
ANR	4801720	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801721	Identifier	imap		4800190	0					
ANR	4801722	PrimaryExpression	0		4800190	1					
ANR	4801723	ExpressionStatement	upd -> ncomp = 1	3039:11:117110:117124	4800190	2	True				
ANR	4801724	AssignmentExpression	upd -> ncomp = 1		4800190	0		=			
ANR	4801725	PtrMemberAccess	upd -> ncomp		4800190	0					
ANR	4801726	Identifier	upd		4800190	0					
ANR	4801727	Identifier	ncomp		4800190	1					
ANR	4801728	PrimaryExpression	1		4800190	1					
ANR	4801729	BreakStatement	break ;	3040:9:117135:117140	4800190	3	True				
ANR	4801730	Label	case MAP_RGBW :	3041:9:117151:117164	4800190	4	True				
ANR	4801731	Identifier	MAP_RGBW		4800190	0					
ANR	4801732	IfStatement	if ( 4 > imap )		4800190	5					
ANR	4801733	Condition	4 > imap	3042:14:117196:117203	4800190	0	True				
ANR	4801734	RelationalExpression	4 > imap		4800190	0		>			
ANR	4801735	PrimaryExpression	4		4800190	0					
ANR	4801736	Identifier	imap		4800190	1					
ANR	4801737	ExpressionStatement	imap = 0	3042:24:117206:117214	4800190	1	True				
ANR	4801738	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801739	Identifier	imap		4800190	0					
ANR	4801740	PrimaryExpression	0		4800190	1					
ANR	4801741	ExpressionStatement	upd -> ncomp = 4	3043:11:117227:117241	4800190	6	True				
ANR	4801742	AssignmentExpression	upd -> ncomp = 4		4800190	0		=			
ANR	4801743	PtrMemberAccess	upd -> ncomp		4800190	0					
ANR	4801744	Identifier	upd		4800190	0					
ANR	4801745	Identifier	ncomp		4800190	1					
ANR	4801746	PrimaryExpression	4		4800190	1					
ANR	4801747	BreakStatement	break ;	3044:9:117252:117257	4800190	7	True				
ANR	4801748	Label	case MAP_RGB :	3045:9:117268:117280	4800190	8	True				
ANR	4801749	Identifier	MAP_RGB		4800190	0					
ANR	4801750	IfStatement	if ( 3 > imap )		4800190	9					
ANR	4801751	Condition	3 > imap	3046:14:117312:117319	4800190	0	True				
ANR	4801752	RelationalExpression	3 > imap		4800190	0		>			
ANR	4801753	PrimaryExpression	3		4800190	0					
ANR	4801754	Identifier	imap		4800190	1					
ANR	4801755	ExpressionStatement	imap = 0	3046:24:117322:117330	4800190	1	True				
ANR	4801756	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801757	Identifier	imap		4800190	0					
ANR	4801758	PrimaryExpression	0		4800190	1					
ANR	4801759	ExpressionStatement	upd -> ncomp = 3	3047:11:117343:117357	4800190	10	True				
ANR	4801760	AssignmentExpression	upd -> ncomp = 3		4800190	0		=			
ANR	4801761	PtrMemberAccess	upd -> ncomp		4800190	0					
ANR	4801762	Identifier	upd		4800190	0					
ANR	4801763	Identifier	ncomp		4800190	1					
ANR	4801764	PrimaryExpression	3		4800190	1					
ANR	4801765	BreakStatement	break ;	3048:9:117368:117373	4800190	11	True				
ANR	4801766	Label	case MAP_CMYK :	3049:9:117384:117397	4800190	12	True				
ANR	4801767	Identifier	MAP_CMYK		4800190	0					
ANR	4801768	IfStatement	if ( 4 > imap )		4800190	13					
ANR	4801769	Condition	4 > imap	3050:14:117430:117437	4800190	0	True				
ANR	4801770	RelationalExpression	4 > imap		4800190	0		>			
ANR	4801771	PrimaryExpression	4		4800190	0					
ANR	4801772	Identifier	imap		4800190	1					
ANR	4801773	ExpressionStatement	imap = 0	3050:24:117440:117448	4800190	1	True				
ANR	4801774	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801775	Identifier	imap		4800190	0					
ANR	4801776	PrimaryExpression	0		4800190	1					
ANR	4801777	ExpressionStatement	upd -> ncomp = 4	3051:12:117462:117476	4800190	14	True				
ANR	4801778	AssignmentExpression	upd -> ncomp = 4		4800190	0		=			
ANR	4801779	PtrMemberAccess	upd -> ncomp		4800190	0					
ANR	4801780	Identifier	upd		4800190	0					
ANR	4801781	Identifier	ncomp		4800190	1					
ANR	4801782	PrimaryExpression	4		4800190	1					
ANR	4801783	BreakStatement	break ;	3052:9:117487:117492	4800190	15	True				
ANR	4801784	Label	case MAP_CMYKGEN :	3053:9:117503:117519	4800190	16	True				
ANR	4801785	Identifier	MAP_CMYKGEN		4800190	0					
ANR	4801786	IfStatement	if ( 4 > imap )		4800190	17					
ANR	4801787	Condition	4 > imap	3054:14:117568:117575	4800190	0	True				
ANR	4801788	RelationalExpression	4 > imap		4800190	0		>			
ANR	4801789	PrimaryExpression	4		4800190	0					
ANR	4801790	Identifier	imap		4800190	1					
ANR	4801791	ExpressionStatement	imap = 0	3054:24:117578:117586	4800190	1	True				
ANR	4801792	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801793	Identifier	imap		4800190	0					
ANR	4801794	PrimaryExpression	0		4800190	1					
ANR	4801795	ExpressionStatement	upd -> ncomp = 4	3055:11:117599:117613	4800190	18	True				
ANR	4801796	AssignmentExpression	upd -> ncomp = 4		4800190	0		=			
ANR	4801797	PtrMemberAccess	upd -> ncomp		4800190	0					
ANR	4801798	Identifier	upd		4800190	0					
ANR	4801799	Identifier	ncomp		4800190	1					
ANR	4801800	PrimaryExpression	4		4800190	1					
ANR	4801801	BreakStatement	break ;	3056:9:117624:117629	4800190	19	True				
ANR	4801802	Label	case MAP_RGBOV :	3057:9:117640:117654	4800190	20	True				
ANR	4801803	Identifier	MAP_RGBOV		4800190	0					
ANR	4801804	IfStatement	if ( 4 > imap )		4800190	21					
ANR	4801805	Condition	4 > imap	3058:14:117708:117715	4800190	0	True				
ANR	4801806	RelationalExpression	4 > imap		4800190	0		>			
ANR	4801807	PrimaryExpression	4		4800190	0					
ANR	4801808	Identifier	imap		4800190	1					
ANR	4801809	ExpressionStatement	imap = 0	3058:24:117718:117726	4800190	1	True				
ANR	4801810	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801811	Identifier	imap		4800190	0					
ANR	4801812	PrimaryExpression	0		4800190	1					
ANR	4801813	ExpressionStatement	upd -> ncomp = 4	3059:11:117739:117753	4800190	22	True				
ANR	4801814	AssignmentExpression	upd -> ncomp = 4		4800190	0		=			
ANR	4801815	PtrMemberAccess	upd -> ncomp		4800190	0					
ANR	4801816	Identifier	upd		4800190	0					
ANR	4801817	Identifier	ncomp		4800190	1					
ANR	4801818	PrimaryExpression	4		4800190	1					
ANR	4801819	BreakStatement	break ;	3060:9:117764:117769	4800190	23	True				
ANR	4801820	Label	case MAP_RGBNOV :	3061:9:117780:117795	4800190	24	True				
ANR	4801821	Identifier	MAP_RGBNOV		4800190	0					
ANR	4801822	IfStatement	if ( 4 > imap )		4800190	25					
ANR	4801823	Condition	4 > imap	3062:14:117849:117856	4800190	0	True				
ANR	4801824	RelationalExpression	4 > imap		4800190	0		>			
ANR	4801825	PrimaryExpression	4		4800190	0					
ANR	4801826	Identifier	imap		4800190	1					
ANR	4801827	ExpressionStatement	imap = 0	3062:24:117859:117867	4800190	1	True				
ANR	4801828	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801829	Identifier	imap		4800190	0					
ANR	4801830	PrimaryExpression	0		4800190	1					
ANR	4801831	ExpressionStatement	upd -> ncomp = 4	3063:11:117880:117894	4800190	26	True				
ANR	4801832	AssignmentExpression	upd -> ncomp = 4		4800190	0		=			
ANR	4801833	PtrMemberAccess	upd -> ncomp		4800190	0					
ANR	4801834	Identifier	upd		4800190	0					
ANR	4801835	Identifier	ncomp		4800190	1					
ANR	4801836	PrimaryExpression	4		4800190	1					
ANR	4801837	BreakStatement	break ;	3064:9:117905:117910	4800190	27	True				
ANR	4801838	Label	default :	3066:9:117922:117929	4800190	28	True				
ANR	4801839	Identifier	default		4800190	0					
ANR	4801840	ExpressionStatement	imap = 0	3067:11:117942:117950	4800190	29	True				
ANR	4801841	AssignmentExpression	imap = 0		4800190	0		=			
ANR	4801842	Identifier	imap		4800190	0					
ANR	4801843	PrimaryExpression	0		4800190	1					
ANR	4801844	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open: Mapping %d unknown\\n"" , upd -> choice [ C_MAPPER ] )"	3069:14:118006:118102	4800190	30	True				
ANR	4801845	CallExpression	"errprintf ( udev -> memory , ""upd_open: Mapping %d unknown\\n"" , upd -> choice [ C_MAPPER ] )"		4800190	0					
ANR	4801846	Callee	errprintf		4800190	0					
ANR	4801847	Identifier	errprintf		4800190	0					
ANR	4801848	ArgumentList	udev -> memory		4800190	1					
ANR	4801849	Argument	udev -> memory		4800190	0					
ANR	4801850	PtrMemberAccess	udev -> memory		4800190	0					
ANR	4801851	Identifier	udev		4800190	0					
ANR	4801852	Identifier	memory		4800190	1					
ANR	4801853	Argument	"""upd_open: Mapping %d unknown\\n"""		4800190	1					
ANR	4801854	PrimaryExpression	"""upd_open: Mapping %d unknown\\n"""		4800190	0					
ANR	4801855	Argument	upd -> choice [ C_MAPPER ]		4800190	2					
ANR	4801856	ArrayIndexing	upd -> choice [ C_MAPPER ]		4800190	0					
ANR	4801857	PtrMemberAccess	upd -> choice		4800190	0					
ANR	4801858	Identifier	upd		4800190	0					
ANR	4801859	Identifier	choice		4800190	1					
ANR	4801860	Identifier	C_MAPPER		4800190	1					
ANR	4801861	BreakStatement	break ;	3073:9:118121:118126	4800190	31	True				
ANR	4801862	IfStatement	if ( ! imap )		4800190	10					
ANR	4801863	Condition	! imap	3079:6:118201:118205	4800190	0	True				
ANR	4801864	UnaryOperationExpression	! imap		4800190	0					
ANR	4801865	UnaryOperator	!		4800190	0					
ANR	4801866	Identifier	imap		4800190	1					
ANR	4801867	CompoundStatement		305:13:9402:9402	4800190	1					
ANR	4801868	ExpressionStatement	upd_close_map ( udev )	3080:6:118216:118235	4800190	0	True				
ANR	4801869	CallExpression	upd_close_map ( udev )		4800190	0					
ANR	4801870	Callee	upd_close_map		4800190	0					
ANR	4801871	Identifier	upd_close_map		4800190	0					
ANR	4801872	ArgumentList	udev		4800190	1					
ANR	4801873	Argument	udev		4800190	0					
ANR	4801874	Identifier	udev		4800190	0					
ANR	4801875	ElseStatement	else		4800190	0					
ANR	4801876	CompoundStatement		307:10:9441:9441	4800190	0					
ANR	4801877	ExpressionStatement	upd -> flags |= B_MAP	3082:6:118255:118274	4800190	0	True				
ANR	4801878	AssignmentExpression	upd -> flags |= B_MAP		4800190	0		|=			
ANR	4801879	PtrMemberAccess	upd -> flags		4800190	0					
ANR	4801880	Identifier	upd		4800190	0					
ANR	4801881	Identifier	flags		4800190	1					
ANR	4801882	Identifier	B_MAP		4800190	1					
ANR	4801883	ExpressionStatement	upd_procs_map ( udev )	3083:6:118282:118301	4800190	1	True				
ANR	4801884	CallExpression	upd_procs_map ( udev )		4800190	0					
ANR	4801885	Callee	upd_procs_map		4800190	0					
ANR	4801886	Identifier	upd_procs_map		4800190	0					
ANR	4801887	ArgumentList	udev		4800190	1					
ANR	4801888	Argument	udev		4800190	0					
ANR	4801889	Identifier	udev		4800190	0					
ANR	4801890	ReturnStatement	return imap ? 1 : - 1 ;	3086:3:118312:118332	4800190	11	True				
ANR	4801891	ConditionalExpression	imap ? 1 : - 1		4800190	0					
ANR	4801892	Condition	imap		4800190	0					
ANR	4801893	Identifier	imap		4800190	0					
ANR	4801894	PrimaryExpression	1		4800190	1					
ANR	4801895	UnaryOperationExpression	- 1		4800190	2					
ANR	4801896	UnaryOperator	-		4800190	0					
ANR	4801897	PrimaryExpression	1		4800190	1					
ANR	4801898	ReturnType	static int		4800190	1					
ANR	4801899	Identifier	upd_open_map		4800190	2					
ANR	4801900	ParameterList	upd_device * udev		4800190	3					
ANR	4801901	Parameter	upd_device * udev	2774:13:108787:108802	4800190	0	True				
ANR	4801902	ParameterType	upd_device *		4800190	0					
ANR	4801903	Identifier	udev		4800190	1					
ANR	4801904	CFGEntryNode	ENTRY		4800190		True				
ANR	4801905	CFGExitNode	EXIT		4800190		True				
ANR	4801906	Symbol	* upd -> int_a		4800190						
ANR	4801907	Symbol	upd -> cmap [ 1 ] . xfer		4800190						
ANR	4801908	Symbol	upd -> cmap [ imap ] . rise		4800190						
ANR	4801909	Symbol	FA_KXFER		4800190						
ANR	4801910	Symbol	* cmap -> bitmsk		4800190						
ANR	4801911	Symbol	* udev		4800190						
ANR	4801912	Symbol	* upd -> cmap [ imap ] . code		4800190						
ANR	4801913	Symbol	* imap		4800190						
ANR	4801914	Symbol	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		4800190						
ANR	4801915	Symbol	* IA_COMPSHIFT		4800190						
ANR	4801916	Symbol	ystep		4800190						
ANR	4801917	Symbol	cmap -> xfer		4800190						
ANR	4801918	Symbol	* * upd_choice		4800190						
ANR	4801919	Symbol	* upd -> float_a		4800190						
ANR	4801920	Symbol	upd		4800190						
ANR	4801921	Symbol	* upd -> cmap [ imap ] . xfer		4800190						
ANR	4801922	Symbol	upd -> cmap [ imap ] . code		4800190						
ANR	4801923	Symbol	iy		4800190						
ANR	4801924	Symbol	* * upd -> float_a		4800190						
ANR	4801925	Symbol	gs_malloc		4800190						
ANR	4801926	Symbol	FA_BXFER		4800190						
ANR	4801927	Symbol	cmap		4800190						
ANR	4801928	Symbol	FA_RXFER		4800190						
ANR	4801929	Symbol	* IA_COMPBITS		4800190						
ANR	4801930	Symbol	cmap -> bits		4800190						
ANR	4801931	Symbol	FA_YXFER		4800190						
ANR	4801932	Symbol	* upd -> cmap		4800190						
ANR	4801933	Symbol	* upd -> float_a [ upd -> cmap [ imap ] . xfer ] . data		4800190						
ANR	4801934	Symbol	* upd -> choice		4800190						
ANR	4801935	Symbol	upd -> flags		4800190						
ANR	4801936	Symbol	* * cmap		4800190						
ANR	4801937	Symbol	* ly		4800190						
ANR	4801938	Symbol	upd -> cmap [ 2 ] . xfer		4800190						
ANR	4801939	Symbol	* upd_choice		4800190						
ANR	4801940	Symbol	* upd		4800190						
ANR	4801941	Symbol	* * cmap -> xfer		4800190						
ANR	4801942	Symbol	upd -> int_a [ IA_COMPSHIFT ] . data		4800190						
ANR	4801943	Symbol	* cmap -> xfer		4800190						
ANR	4801944	Symbol	* * upd -> cmap [ imap ] . xfer		4800190						
ANR	4801945	Symbol	upd -> float_a [ cmap -> xfer ] . size		4800190						
ANR	4801946	Symbol	gx_color_value_bits		4800190						
ANR	4801947	Symbol	bitmsk		4800190						
ANR	4801948	Symbol	* now ++		4800190						
ANR	4801949	Symbol	imap		4800190						
ANR	4801950	Symbol	* * imap		4800190						
ANR	4801951	Symbol	FA_GXFER		4800190						
ANR	4801952	Symbol	upd -> cmap [ imap ] . bitshf		4800190						
ANR	4801953	Symbol	n		4800190						
ANR	4801954	Symbol	* * upd -> int_a		4800190						
ANR	4801955	Symbol	B_MAP		4800190						
ANR	4801956	Symbol	FA_WXFER		4800190						
ANR	4801957	Symbol	upd -> cmap [ 0 ] . xfer		4800190						
ANR	4801958	Symbol	* * C_MAPPER		4800190						
ANR	4801959	Symbol	upd -> int_a [ IA_COMPBITS ] . data		4800190						
ANR	4801960	Symbol	* * upd		4800190						
ANR	4801961	Symbol	* now		4800190						
ANR	4801962	Symbol	* * * * upd		4800190						
ANR	4801963	Symbol	* * * imap		4800190						
ANR	4801964	Symbol	* * * upd -> cmap		4800190						
ANR	4801965	Symbol	used		4800190						
ANR	4801966	Symbol	ly		4800190						
ANR	4801967	Symbol	upd -> cmap		4800190						
ANR	4801968	Symbol	upd -> int_a		4800190						
ANR	4801969	Symbol	* fp		4800190						
ANR	4801970	Symbol	xstep		4800190						
ANR	4801971	Symbol	upd -> cmap [ imap ] . bitmsk		4800190						
ANR	4801972	Symbol	* upd -> float_a [ cmap -> xfer ] . size		4800190						
ANR	4801973	Symbol	IA_COMPSHIFT		4800190						
ANR	4801974	Symbol	UPD_CMAP_MAX		4800190						
ANR	4801975	Symbol	NULL		4800190						
ANR	4801976	Symbol	last		4800190						
ANR	4801977	Symbol	offset		4800190						
ANR	4801978	Symbol	FA_CXFER		4800190						
ANR	4801979	Symbol	* upd -> int_a [ IA_COMPSHIFT ] . data		4800190						
ANR	4801980	Symbol	XFVAL		4800190						
ANR	4801981	Symbol	udev -> color_info . depth		4800190						
ANR	4801982	Symbol	upd_choice		4800190						
ANR	4801983	Symbol	udev		4800190						
ANR	4801984	Symbol	success		4800190						
ANR	4801985	Symbol	gx_max_color_value		4800190						
ANR	4801986	Symbol	true		4800190						
ANR	4801987	Symbol	upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		4800190						
ANR	4801988	Symbol	upd -> cmap [ 3 ] . xfer		4800190						
ANR	4801989	Symbol	upd -> float_a		4800190						
ANR	4801990	Symbol	upd -> float_a [ cmap -> xfer ] . data		4800190						
ANR	4801991	Symbol	upd -> cmap [ imap ] . bits		4800190						
ANR	4801992	Symbol	C_MAPPER		4800190						
ANR	4801993	Symbol	B_ERROR		4800190						
ANR	4801994	Symbol	cmap -> code		4800190						
ANR	4801995	Symbol	scale		4800190						
ANR	4801996	Symbol	fp		4800190						
ANR	4801997	Symbol	cmap -> bitmsk		4800190						
ANR	4801998	Symbol	* * * cmap		4800190						
ANR	4801999	Symbol	upd -> ncomp		4800190						
ANR	4802000	Symbol	* * IA_COMPSHIFT		4800190						
ANR	4802001	Symbol	udev -> upd		4800190						
ANR	4802002	Symbol	fx		4800190						
ANR	4802003	Symbol	* cmap		4800190						
ANR	4802004	Symbol	fy		4800190						
ANR	4802005	Symbol	udev -> color_info		4800190						
ANR	4802006	Symbol	now		4800190						
ANR	4802007	Symbol	* cmap -> code		4800190						
ANR	4802008	Symbol	* C_MAPPER		4800190						
ANR	4802009	Symbol	udev -> memory		4800190						
ANR	4802010	Symbol	* * IA_COMPBITS		4800190						
ANR	4802011	Symbol	* * * upd		4800190						
ANR	4802012	Symbol	false		4800190						
ANR	4802013	Symbol	upd -> choice		4800190						
ANR	4802014	Symbol	* upd -> float_a [ upd -> cmap [ imap ] . xfer ] . size		4800190						
ANR	4802015	Symbol	FA_MXFER		4800190						
ANR	4802016	Symbol	* * upd -> cmap		4800190						
ANR	4802017	Symbol	IA_COMPBITS		4800190						
ANR	4802018	Symbol	upd -> cmap [ imap ] . xfer		4800190						
ANR	4802019	Symbol	* n		4800190						
ANR	4802020	Symbol	* upd -> float_a [ cmap -> xfer ] . data		4800190						
ANR	4802021	Symbol	* upd -> int_a [ IA_COMPBITS ] . data		4800190						
ANR	4802022	Function	upd_procs_map	3093:0:118560:121663							
ANR	4802023	FunctionDef	upd_procs_map (upd_device * udev)		4802022	0					
ANR	4802024	CompoundStatement		3095:0:118603:121663	4802022	0					
ANR	4802025	IdentifierDeclStatement	int imap ;	3096:3:118608:118616	4802022	0	True				
ANR	4802026	IdentifierDecl	imap		4802022	0					
ANR	4802027	IdentifierDeclType	int		4802022	0					
ANR	4802028	Identifier	imap		4802022	1					
ANR	4802029	IfStatement	if ( udev -> upd && ( udev -> upd -> flags & B_MAP ) )		4802022	1					
ANR	4802030	Condition	udev -> upd && ( udev -> upd -> flags & B_MAP )	3098:7:118626:118670	4802022	0	True				
ANR	4802031	AndExpression	udev -> upd && ( udev -> upd -> flags & B_MAP )		4802022	0		&&			
ANR	4802032	PtrMemberAccess	udev -> upd		4802022	0					
ANR	4802033	Identifier	udev		4802022	0					
ANR	4802034	Identifier	upd		4802022	1					
ANR	4802035	BitAndExpression	udev -> upd -> flags & B_MAP		4802022	1		&			
ANR	4802036	PtrMemberAccess	udev -> upd -> flags		4802022	0					
ANR	4802037	PtrMemberAccess	udev -> upd		4802022	0					
ANR	4802038	Identifier	udev		4802022	0					
ANR	4802039	Identifier	upd		4802022	1					
ANR	4802040	Identifier	flags		4802022	1					
ANR	4802041	Identifier	B_MAP		4802022	1					
ANR	4802042	ExpressionStatement	imap = udev -> upd -> choice [ C_MAPPER ]	3099:34:118673:118707	4802022	1	True				
ANR	4802043	AssignmentExpression	imap = udev -> upd -> choice [ C_MAPPER ]		4802022	0		=			
ANR	4802044	Identifier	imap		4802022	0					
ANR	4802045	ArrayIndexing	udev -> upd -> choice [ C_MAPPER ]		4802022	1					
ANR	4802046	PtrMemberAccess	udev -> upd -> choice		4802022	0					
ANR	4802047	PtrMemberAccess	udev -> upd		4802022	0					
ANR	4802048	Identifier	udev		4802022	0					
ANR	4802049	Identifier	upd		4802022	1					
ANR	4802050	Identifier	choice		4802022	1					
ANR	4802051	Identifier	C_MAPPER		4802022	1					
ANR	4802052	ElseStatement	else		4802022	0					
ANR	4802053	ExpressionStatement	imap = 0	3100:34:118743:118751	4802022	0	True				
ANR	4802054	AssignmentExpression	imap = 0		4802022	0		=			
ANR	4802055	Identifier	imap		4802022	0					
ANR	4802056	PrimaryExpression	0		4802022	1					
ANR	4802057	SwitchStatement	switch ( imap )		4802022	2					
ANR	4802058	Condition	imap	3102:10:118764:118767	4802022	0	True				
ANR	4802059	Identifier	imap		4802022	0					
ANR	4802060	CompoundStatement		8:16:166:166	4802022	1					
ANR	4802061	Label	case MAP_GRAY :	3103:5:118777:118790	4802022	0	True				
ANR	4802062	Identifier	MAP_GRAY		4802022	0					
ANR	4802063	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_1color )"	3104:7:118828:118875	4802022	1	True				
ANR	4802064	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_1color )"		4802022	0					
ANR	4802065	Callee	set_dev_proc		4802022	0					
ANR	4802066	Identifier	set_dev_proc		4802022	0					
ANR	4802067	ArgumentList	udev		4802022	1					
ANR	4802068	Argument	udev		4802022	0					
ANR	4802069	Identifier	udev		4802022	0					
ANR	4802070	Argument	encode_color		4802022	1					
ANR	4802071	Identifier	encode_color		4802022	0					
ANR	4802072	Argument	upd_rgb_1color		4802022	2					
ANR	4802073	Identifier	upd_rgb_1color		4802022	0					
ANR	4802074	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_1color_rgb )"	3105:7:118884:118931	4802022	2	True				
ANR	4802075	CallExpression	"set_dev_proc ( udev , decode_color , upd_1color_rgb )"		4802022	0					
ANR	4802076	Callee	set_dev_proc		4802022	0					
ANR	4802077	Identifier	set_dev_proc		4802022	0					
ANR	4802078	ArgumentList	udev		4802022	1					
ANR	4802079	Argument	udev		4802022	0					
ANR	4802080	Identifier	udev		4802022	0					
ANR	4802081	Argument	decode_color		4802022	1					
ANR	4802082	Identifier	decode_color		4802022	0					
ANR	4802083	Argument	upd_1color_rgb		4802022	2					
ANR	4802084	Identifier	upd_1color_rgb		4802022	0					
ANR	4802085	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_1color )"	3106:7:118940:118988	4802022	3	True				
ANR	4802086	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_1color )"		4802022	0					
ANR	4802087	Callee	set_dev_proc		4802022	0					
ANR	4802088	Identifier	set_dev_proc		4802022	0					
ANR	4802089	ArgumentList	udev		4802022	1					
ANR	4802090	Argument	udev		4802022	0					
ANR	4802091	Identifier	udev		4802022	0					
ANR	4802092	Argument	map_rgb_color		4802022	1					
ANR	4802093	Identifier	map_rgb_color		4802022	0					
ANR	4802094	Argument	upd_rgb_1color		4802022	2					
ANR	4802095	Identifier	upd_rgb_1color		4802022	0					
ANR	4802096	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3107:7:118997:119056	4802022	4	True				
ANR	4802097	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		4802022	0					
ANR	4802098	Callee	set_dev_proc		4802022	0					
ANR	4802099	Identifier	set_dev_proc		4802022	0					
ANR	4802100	ArgumentList	udev		4802022	1					
ANR	4802101	Argument	udev		4802022	0					
ANR	4802102	Identifier	udev		4802022	0					
ANR	4802103	Argument	map_cmyk_color		4802022	1					
ANR	4802104	Identifier	map_cmyk_color		4802022	0					
ANR	4802105	Argument	gx_default_map_cmyk_color		4802022	2					
ANR	4802106	Identifier	gx_default_map_cmyk_color		4802022	0					
ANR	4802107	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_1color_rgb )"	3108:7:119065:119113	4802022	5	True				
ANR	4802108	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_1color_rgb )"		4802022	0					
ANR	4802109	Callee	set_dev_proc		4802022	0					
ANR	4802110	Identifier	set_dev_proc		4802022	0					
ANR	4802111	ArgumentList	udev		4802022	1					
ANR	4802112	Argument	udev		4802022	0					
ANR	4802113	Identifier	udev		4802022	0					
ANR	4802114	Argument	map_color_rgb		4802022	1					
ANR	4802115	Identifier	map_color_rgb		4802022	0					
ANR	4802116	Argument	upd_1color_rgb		4802022	2					
ANR	4802117	Identifier	upd_1color_rgb		4802022	0					
ANR	4802118	BreakStatement	break ;	3109:5:119120:119125	4802022	6	True				
ANR	4802119	Label	case MAP_RGBW :	3110:5:119132:119145	4802022	7	True				
ANR	4802120	Identifier	MAP_RGBW		4802022	0					
ANR	4802121	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_4color )"	3111:7:119170:119217	4802022	8	True				
ANR	4802122	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_4color )"		4802022	0					
ANR	4802123	Callee	set_dev_proc		4802022	0					
ANR	4802124	Identifier	set_dev_proc		4802022	0					
ANR	4802125	ArgumentList	udev		4802022	1					
ANR	4802126	Argument	udev		4802022	0					
ANR	4802127	Identifier	udev		4802022	0					
ANR	4802128	Argument	encode_color		4802022	1					
ANR	4802129	Identifier	encode_color		4802022	0					
ANR	4802130	Argument	upd_rgb_4color		4802022	2					
ANR	4802131	Identifier	upd_rgb_4color		4802022	0					
ANR	4802132	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_4color_rgb )"	3112:7:119226:119273	4802022	9	True				
ANR	4802133	CallExpression	"set_dev_proc ( udev , decode_color , upd_4color_rgb )"		4802022	0					
ANR	4802134	Callee	set_dev_proc		4802022	0					
ANR	4802135	Identifier	set_dev_proc		4802022	0					
ANR	4802136	ArgumentList	udev		4802022	1					
ANR	4802137	Argument	udev		4802022	0					
ANR	4802138	Identifier	udev		4802022	0					
ANR	4802139	Argument	decode_color		4802022	1					
ANR	4802140	Identifier	decode_color		4802022	0					
ANR	4802141	Argument	upd_4color_rgb		4802022	2					
ANR	4802142	Identifier	upd_4color_rgb		4802022	0					
ANR	4802143	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_4color )"	3113:7:119282:119330	4802022	10	True				
ANR	4802144	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_4color )"		4802022	0					
ANR	4802145	Callee	set_dev_proc		4802022	0					
ANR	4802146	Identifier	set_dev_proc		4802022	0					
ANR	4802147	ArgumentList	udev		4802022	1					
ANR	4802148	Argument	udev		4802022	0					
ANR	4802149	Identifier	udev		4802022	0					
ANR	4802150	Argument	map_rgb_color		4802022	1					
ANR	4802151	Identifier	map_rgb_color		4802022	0					
ANR	4802152	Argument	upd_rgb_4color		4802022	2					
ANR	4802153	Identifier	upd_rgb_4color		4802022	0					
ANR	4802154	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3114:7:119339:119398	4802022	11	True				
ANR	4802155	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		4802022	0					
ANR	4802156	Callee	set_dev_proc		4802022	0					
ANR	4802157	Identifier	set_dev_proc		4802022	0					
ANR	4802158	ArgumentList	udev		4802022	1					
ANR	4802159	Argument	udev		4802022	0					
ANR	4802160	Identifier	udev		4802022	0					
ANR	4802161	Argument	map_cmyk_color		4802022	1					
ANR	4802162	Identifier	map_cmyk_color		4802022	0					
ANR	4802163	Argument	gx_default_map_cmyk_color		4802022	2					
ANR	4802164	Identifier	gx_default_map_cmyk_color		4802022	0					
ANR	4802165	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_4color_rgb )"	3115:7:119407:119455	4802022	12	True				
ANR	4802166	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_4color_rgb )"		4802022	0					
ANR	4802167	Callee	set_dev_proc		4802022	0					
ANR	4802168	Identifier	set_dev_proc		4802022	0					
ANR	4802169	ArgumentList	udev		4802022	1					
ANR	4802170	Argument	udev		4802022	0					
ANR	4802171	Identifier	udev		4802022	0					
ANR	4802172	Argument	map_color_rgb		4802022	1					
ANR	4802173	Identifier	map_color_rgb		4802022	0					
ANR	4802174	Argument	upd_4color_rgb		4802022	2					
ANR	4802175	Identifier	upd_4color_rgb		4802022	0					
ANR	4802176	BreakStatement	break ;	3116:5:119462:119467	4802022	13	True				
ANR	4802177	Label	case MAP_RGB :	3117:5:119474:119486	4802022	14	True				
ANR	4802178	Identifier	MAP_RGB		4802022	0					
ANR	4802179	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_3color )"	3118:7:119511:119558	4802022	15	True				
ANR	4802180	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_3color )"		4802022	0					
ANR	4802181	Callee	set_dev_proc		4802022	0					
ANR	4802182	Identifier	set_dev_proc		4802022	0					
ANR	4802183	ArgumentList	udev		4802022	1					
ANR	4802184	Argument	udev		4802022	0					
ANR	4802185	Identifier	udev		4802022	0					
ANR	4802186	Argument	encode_color		4802022	1					
ANR	4802187	Identifier	encode_color		4802022	0					
ANR	4802188	Argument	upd_rgb_3color		4802022	2					
ANR	4802189	Identifier	upd_rgb_3color		4802022	0					
ANR	4802190	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_3color_rgb )"	3119:7:119567:119614	4802022	16	True				
ANR	4802191	CallExpression	"set_dev_proc ( udev , decode_color , upd_3color_rgb )"		4802022	0					
ANR	4802192	Callee	set_dev_proc		4802022	0					
ANR	4802193	Identifier	set_dev_proc		4802022	0					
ANR	4802194	ArgumentList	udev		4802022	1					
ANR	4802195	Argument	udev		4802022	0					
ANR	4802196	Identifier	udev		4802022	0					
ANR	4802197	Argument	decode_color		4802022	1					
ANR	4802198	Identifier	decode_color		4802022	0					
ANR	4802199	Argument	upd_3color_rgb		4802022	2					
ANR	4802200	Identifier	upd_3color_rgb		4802022	0					
ANR	4802201	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_3color )"	3120:7:119623:119671	4802022	17	True				
ANR	4802202	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_3color )"		4802022	0					
ANR	4802203	Callee	set_dev_proc		4802022	0					
ANR	4802204	Identifier	set_dev_proc		4802022	0					
ANR	4802205	ArgumentList	udev		4802022	1					
ANR	4802206	Argument	udev		4802022	0					
ANR	4802207	Identifier	udev		4802022	0					
ANR	4802208	Argument	map_rgb_color		4802022	1					
ANR	4802209	Identifier	map_rgb_color		4802022	0					
ANR	4802210	Argument	upd_rgb_3color		4802022	2					
ANR	4802211	Identifier	upd_rgb_3color		4802022	0					
ANR	4802212	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3121:7:119680:119739	4802022	18	True				
ANR	4802213	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		4802022	0					
ANR	4802214	Callee	set_dev_proc		4802022	0					
ANR	4802215	Identifier	set_dev_proc		4802022	0					
ANR	4802216	ArgumentList	udev		4802022	1					
ANR	4802217	Argument	udev		4802022	0					
ANR	4802218	Identifier	udev		4802022	0					
ANR	4802219	Argument	map_cmyk_color		4802022	1					
ANR	4802220	Identifier	map_cmyk_color		4802022	0					
ANR	4802221	Argument	gx_default_map_cmyk_color		4802022	2					
ANR	4802222	Identifier	gx_default_map_cmyk_color		4802022	0					
ANR	4802223	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_3color_rgb )"	3122:7:119748:119796	4802022	19	True				
ANR	4802224	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_3color_rgb )"		4802022	0					
ANR	4802225	Callee	set_dev_proc		4802022	0					
ANR	4802226	Identifier	set_dev_proc		4802022	0					
ANR	4802227	ArgumentList	udev		4802022	1					
ANR	4802228	Argument	udev		4802022	0					
ANR	4802229	Identifier	udev		4802022	0					
ANR	4802230	Argument	map_color_rgb		4802022	1					
ANR	4802231	Identifier	map_color_rgb		4802022	0					
ANR	4802232	Argument	upd_3color_rgb		4802022	2					
ANR	4802233	Identifier	upd_3color_rgb		4802022	0					
ANR	4802234	BreakStatement	break ;	3123:5:119803:119808	4802022	20	True				
ANR	4802235	Label	case MAP_CMYK :	3124:5:119815:119828	4802022	21	True				
ANR	4802236	Identifier	MAP_CMYK		4802022	0					
ANR	4802237	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_cmyk_icolor )"	3125:7:119854:119902	4802022	22	True				
ANR	4802238	CallExpression	"set_dev_proc ( udev , encode_color , upd_cmyk_icolor )"		4802022	0					
ANR	4802239	Callee	set_dev_proc		4802022	0					
ANR	4802240	Identifier	set_dev_proc		4802022	0					
ANR	4802241	ArgumentList	udev		4802022	1					
ANR	4802242	Argument	udev		4802022	0					
ANR	4802243	Identifier	udev		4802022	0					
ANR	4802244	Argument	encode_color		4802022	1					
ANR	4802245	Identifier	encode_color		4802022	0					
ANR	4802246	Argument	upd_cmyk_icolor		4802022	2					
ANR	4802247	Identifier	upd_cmyk_icolor		4802022	0					
ANR	4802248	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_icolor_rgb )"	3126:7:119911:119958	4802022	23	True				
ANR	4802249	CallExpression	"set_dev_proc ( udev , decode_color , upd_icolor_rgb )"		4802022	0					
ANR	4802250	Callee	set_dev_proc		4802022	0					
ANR	4802251	Identifier	set_dev_proc		4802022	0					
ANR	4802252	ArgumentList	udev		4802022	1					
ANR	4802253	Argument	udev		4802022	0					
ANR	4802254	Identifier	udev		4802022	0					
ANR	4802255	Argument	decode_color		4802022	1					
ANR	4802256	Identifier	decode_color		4802022	0					
ANR	4802257	Argument	upd_icolor_rgb		4802022	2					
ANR	4802258	Identifier	upd_icolor_rgb		4802022	0					
ANR	4802259	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"	3127:7:119967:120025	4802022	24	True				
ANR	4802260	CallExpression	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"		4802022	0					
ANR	4802261	Callee	set_dev_proc		4802022	0					
ANR	4802262	Identifier	set_dev_proc		4802022	0					
ANR	4802263	ArgumentList	udev		4802022	1					
ANR	4802264	Argument	udev		4802022	0					
ANR	4802265	Identifier	udev		4802022	0					
ANR	4802266	Argument	map_rgb_color		4802022	1					
ANR	4802267	Identifier	map_rgb_color		4802022	0					
ANR	4802268	Argument	gx_default_map_rgb_color		4802022	2					
ANR	4802269	Identifier	gx_default_map_rgb_color		4802022	0					
ANR	4802270	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , upd_cmyk_icolor )"	3128:7:120034:120083	4802022	25	True				
ANR	4802271	CallExpression	"set_dev_proc ( udev , map_cmyk_color , upd_cmyk_icolor )"		4802022	0					
ANR	4802272	Callee	set_dev_proc		4802022	0					
ANR	4802273	Identifier	set_dev_proc		4802022	0					
ANR	4802274	ArgumentList	udev		4802022	1					
ANR	4802275	Argument	udev		4802022	0					
ANR	4802276	Identifier	udev		4802022	0					
ANR	4802277	Argument	map_cmyk_color		4802022	1					
ANR	4802278	Identifier	map_cmyk_color		4802022	0					
ANR	4802279	Argument	upd_cmyk_icolor		4802022	2					
ANR	4802280	Identifier	upd_cmyk_icolor		4802022	0					
ANR	4802281	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_icolor_rgb )"	3129:7:120092:120140	4802022	26	True				
ANR	4802282	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_icolor_rgb )"		4802022	0					
ANR	4802283	Callee	set_dev_proc		4802022	0					
ANR	4802284	Identifier	set_dev_proc		4802022	0					
ANR	4802285	ArgumentList	udev		4802022	1					
ANR	4802286	Argument	udev		4802022	0					
ANR	4802287	Identifier	udev		4802022	0					
ANR	4802288	Argument	map_color_rgb		4802022	1					
ANR	4802289	Identifier	map_color_rgb		4802022	0					
ANR	4802290	Argument	upd_icolor_rgb		4802022	2					
ANR	4802291	Identifier	upd_icolor_rgb		4802022	0					
ANR	4802292	BreakStatement	break ;	3130:5:120147:120152	4802022	27	True				
ANR	4802293	Label	case MAP_CMYKGEN :	3131:5:120159:120175	4802022	28	True				
ANR	4802294	Identifier	MAP_CMYKGEN		4802022	0					
ANR	4802295	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_cmyk_kcolor )"	3132:7:120217:120265	4802022	29	True				
ANR	4802296	CallExpression	"set_dev_proc ( udev , encode_color , upd_cmyk_kcolor )"		4802022	0					
ANR	4802297	Callee	set_dev_proc		4802022	0					
ANR	4802298	Identifier	set_dev_proc		4802022	0					
ANR	4802299	ArgumentList	udev		4802022	1					
ANR	4802300	Argument	udev		4802022	0					
ANR	4802301	Identifier	udev		4802022	0					
ANR	4802302	Argument	encode_color		4802022	1					
ANR	4802303	Identifier	encode_color		4802022	0					
ANR	4802304	Argument	upd_cmyk_kcolor		4802022	2					
ANR	4802305	Identifier	upd_cmyk_kcolor		4802022	0					
ANR	4802306	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_kcolor_rgb )"	3133:7:120274:120321	4802022	30	True				
ANR	4802307	CallExpression	"set_dev_proc ( udev , decode_color , upd_kcolor_rgb )"		4802022	0					
ANR	4802308	Callee	set_dev_proc		4802022	0					
ANR	4802309	Identifier	set_dev_proc		4802022	0					
ANR	4802310	ArgumentList	udev		4802022	1					
ANR	4802311	Argument	udev		4802022	0					
ANR	4802312	Identifier	udev		4802022	0					
ANR	4802313	Argument	decode_color		4802022	1					
ANR	4802314	Identifier	decode_color		4802022	0					
ANR	4802315	Argument	upd_kcolor_rgb		4802022	2					
ANR	4802316	Identifier	upd_kcolor_rgb		4802022	0					
ANR	4802317	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"	3134:7:120330:120388	4802022	31	True				
ANR	4802318	CallExpression	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"		4802022	0					
ANR	4802319	Callee	set_dev_proc		4802022	0					
ANR	4802320	Identifier	set_dev_proc		4802022	0					
ANR	4802321	ArgumentList	udev		4802022	1					
ANR	4802322	Argument	udev		4802022	0					
ANR	4802323	Identifier	udev		4802022	0					
ANR	4802324	Argument	map_rgb_color		4802022	1					
ANR	4802325	Identifier	map_rgb_color		4802022	0					
ANR	4802326	Argument	gx_default_map_rgb_color		4802022	2					
ANR	4802327	Identifier	gx_default_map_rgb_color		4802022	0					
ANR	4802328	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , upd_cmyk_kcolor )"	3135:7:120397:120446	4802022	32	True				
ANR	4802329	CallExpression	"set_dev_proc ( udev , map_cmyk_color , upd_cmyk_kcolor )"		4802022	0					
ANR	4802330	Callee	set_dev_proc		4802022	0					
ANR	4802331	Identifier	set_dev_proc		4802022	0					
ANR	4802332	ArgumentList	udev		4802022	1					
ANR	4802333	Argument	udev		4802022	0					
ANR	4802334	Identifier	udev		4802022	0					
ANR	4802335	Argument	map_cmyk_color		4802022	1					
ANR	4802336	Identifier	map_cmyk_color		4802022	0					
ANR	4802337	Argument	upd_cmyk_kcolor		4802022	2					
ANR	4802338	Identifier	upd_cmyk_kcolor		4802022	0					
ANR	4802339	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_kcolor_rgb )"	3136:7:120455:120503	4802022	33	True				
ANR	4802340	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_kcolor_rgb )"		4802022	0					
ANR	4802341	Callee	set_dev_proc		4802022	0					
ANR	4802342	Identifier	set_dev_proc		4802022	0					
ANR	4802343	ArgumentList	udev		4802022	1					
ANR	4802344	Argument	udev		4802022	0					
ANR	4802345	Identifier	udev		4802022	0					
ANR	4802346	Argument	map_color_rgb		4802022	1					
ANR	4802347	Identifier	map_color_rgb		4802022	0					
ANR	4802348	Argument	upd_kcolor_rgb		4802022	2					
ANR	4802349	Identifier	upd_kcolor_rgb		4802022	0					
ANR	4802350	BreakStatement	break ;	3137:5:120510:120515	4802022	34	True				
ANR	4802351	Label	case MAP_RGBOV :	3138:5:120522:120536	4802022	35	True				
ANR	4802352	Identifier	MAP_RGBOV		4802022	0					
ANR	4802353	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_ovcolor )"	3139:7:120595:120643	4802022	36	True				
ANR	4802354	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_ovcolor )"		4802022	0					
ANR	4802355	Callee	set_dev_proc		4802022	0					
ANR	4802356	Identifier	set_dev_proc		4802022	0					
ANR	4802357	ArgumentList	udev		4802022	1					
ANR	4802358	Argument	udev		4802022	0					
ANR	4802359	Identifier	udev		4802022	0					
ANR	4802360	Argument	encode_color		4802022	1					
ANR	4802361	Identifier	encode_color		4802022	0					
ANR	4802362	Argument	upd_rgb_ovcolor		4802022	2					
ANR	4802363	Identifier	upd_rgb_ovcolor		4802022	0					
ANR	4802364	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_ovcolor_rgb )"	3140:7:120652:120700	4802022	37	True				
ANR	4802365	CallExpression	"set_dev_proc ( udev , decode_color , upd_ovcolor_rgb )"		4802022	0					
ANR	4802366	Callee	set_dev_proc		4802022	0					
ANR	4802367	Identifier	set_dev_proc		4802022	0					
ANR	4802368	ArgumentList	udev		4802022	1					
ANR	4802369	Argument	udev		4802022	0					
ANR	4802370	Identifier	udev		4802022	0					
ANR	4802371	Argument	decode_color		4802022	1					
ANR	4802372	Identifier	decode_color		4802022	0					
ANR	4802373	Argument	upd_ovcolor_rgb		4802022	2					
ANR	4802374	Identifier	upd_ovcolor_rgb		4802022	0					
ANR	4802375	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_ovcolor )"	3141:7:120709:120758	4802022	38	True				
ANR	4802376	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_ovcolor )"		4802022	0					
ANR	4802377	Callee	set_dev_proc		4802022	0					
ANR	4802378	Identifier	set_dev_proc		4802022	0					
ANR	4802379	ArgumentList	udev		4802022	1					
ANR	4802380	Argument	udev		4802022	0					
ANR	4802381	Identifier	udev		4802022	0					
ANR	4802382	Argument	map_rgb_color		4802022	1					
ANR	4802383	Identifier	map_rgb_color		4802022	0					
ANR	4802384	Argument	upd_rgb_ovcolor		4802022	2					
ANR	4802385	Identifier	upd_rgb_ovcolor		4802022	0					
ANR	4802386	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3142:7:120767:120826	4802022	39	True				
ANR	4802387	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		4802022	0					
ANR	4802388	Callee	set_dev_proc		4802022	0					
ANR	4802389	Identifier	set_dev_proc		4802022	0					
ANR	4802390	ArgumentList	udev		4802022	1					
ANR	4802391	Argument	udev		4802022	0					
ANR	4802392	Identifier	udev		4802022	0					
ANR	4802393	Argument	map_cmyk_color		4802022	1					
ANR	4802394	Identifier	map_cmyk_color		4802022	0					
ANR	4802395	Argument	gx_default_map_cmyk_color		4802022	2					
ANR	4802396	Identifier	gx_default_map_cmyk_color		4802022	0					
ANR	4802397	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_ovcolor_rgb )"	3143:7:120835:120884	4802022	40	True				
ANR	4802398	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_ovcolor_rgb )"		4802022	0					
ANR	4802399	Callee	set_dev_proc		4802022	0					
ANR	4802400	Identifier	set_dev_proc		4802022	0					
ANR	4802401	ArgumentList	udev		4802022	1					
ANR	4802402	Argument	udev		4802022	0					
ANR	4802403	Identifier	udev		4802022	0					
ANR	4802404	Argument	map_color_rgb		4802022	1					
ANR	4802405	Identifier	map_color_rgb		4802022	0					
ANR	4802406	Argument	upd_ovcolor_rgb		4802022	2					
ANR	4802407	Identifier	upd_ovcolor_rgb		4802022	0					
ANR	4802408	BreakStatement	break ;	3144:5:120891:120896	4802022	41	True				
ANR	4802409	Label	case MAP_RGBNOV :	3145:5:120903:120918	4802022	42	True				
ANR	4802410	Identifier	MAP_RGBNOV		4802022	0					
ANR	4802411	ExpressionStatement	"set_dev_proc ( udev , encode_color , upd_rgb_novcolor )"	3146:7:120978:121027	4802022	43	True				
ANR	4802412	CallExpression	"set_dev_proc ( udev , encode_color , upd_rgb_novcolor )"		4802022	0					
ANR	4802413	Callee	set_dev_proc		4802022	0					
ANR	4802414	Identifier	set_dev_proc		4802022	0					
ANR	4802415	ArgumentList	udev		4802022	1					
ANR	4802416	Argument	udev		4802022	0					
ANR	4802417	Identifier	udev		4802022	0					
ANR	4802418	Argument	encode_color		4802022	1					
ANR	4802419	Identifier	encode_color		4802022	0					
ANR	4802420	Argument	upd_rgb_novcolor		4802022	2					
ANR	4802421	Identifier	upd_rgb_novcolor		4802022	0					
ANR	4802422	ExpressionStatement	"set_dev_proc ( udev , decode_color , upd_novcolor_rgb )"	3147:7:121036:121085	4802022	44	True				
ANR	4802423	CallExpression	"set_dev_proc ( udev , decode_color , upd_novcolor_rgb )"		4802022	0					
ANR	4802424	Callee	set_dev_proc		4802022	0					
ANR	4802425	Identifier	set_dev_proc		4802022	0					
ANR	4802426	ArgumentList	udev		4802022	1					
ANR	4802427	Argument	udev		4802022	0					
ANR	4802428	Identifier	udev		4802022	0					
ANR	4802429	Argument	decode_color		4802022	1					
ANR	4802430	Identifier	decode_color		4802022	0					
ANR	4802431	Argument	upd_novcolor_rgb		4802022	2					
ANR	4802432	Identifier	upd_novcolor_rgb		4802022	0					
ANR	4802433	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , upd_rgb_novcolor )"	3148:7:121094:121144	4802022	45	True				
ANR	4802434	CallExpression	"set_dev_proc ( udev , map_rgb_color , upd_rgb_novcolor )"		4802022	0					
ANR	4802435	Callee	set_dev_proc		4802022	0					
ANR	4802436	Identifier	set_dev_proc		4802022	0					
ANR	4802437	ArgumentList	udev		4802022	1					
ANR	4802438	Argument	udev		4802022	0					
ANR	4802439	Identifier	udev		4802022	0					
ANR	4802440	Argument	map_rgb_color		4802022	1					
ANR	4802441	Identifier	map_rgb_color		4802022	0					
ANR	4802442	Argument	upd_rgb_novcolor		4802022	2					
ANR	4802443	Identifier	upd_rgb_novcolor		4802022	0					
ANR	4802444	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3149:7:121153:121212	4802022	46	True				
ANR	4802445	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		4802022	0					
ANR	4802446	Callee	set_dev_proc		4802022	0					
ANR	4802447	Identifier	set_dev_proc		4802022	0					
ANR	4802448	ArgumentList	udev		4802022	1					
ANR	4802449	Argument	udev		4802022	0					
ANR	4802450	Identifier	udev		4802022	0					
ANR	4802451	Argument	map_cmyk_color		4802022	1					
ANR	4802452	Identifier	map_cmyk_color		4802022	0					
ANR	4802453	Argument	gx_default_map_cmyk_color		4802022	2					
ANR	4802454	Identifier	gx_default_map_cmyk_color		4802022	0					
ANR	4802455	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , upd_novcolor_rgb )"	3150:7:121221:121271	4802022	47	True				
ANR	4802456	CallExpression	"set_dev_proc ( udev , map_color_rgb , upd_novcolor_rgb )"		4802022	0					
ANR	4802457	Callee	set_dev_proc		4802022	0					
ANR	4802458	Identifier	set_dev_proc		4802022	0					
ANR	4802459	ArgumentList	udev		4802022	1					
ANR	4802460	Argument	udev		4802022	0					
ANR	4802461	Identifier	udev		4802022	0					
ANR	4802462	Argument	map_color_rgb		4802022	1					
ANR	4802463	Identifier	map_color_rgb		4802022	0					
ANR	4802464	Argument	upd_novcolor_rgb		4802022	2					
ANR	4802465	Identifier	upd_novcolor_rgb		4802022	0					
ANR	4802466	BreakStatement	break ;	3151:5:121278:121283	4802022	48	True				
ANR	4802467	Label	default :	3153:5:121291:121298	4802022	49	True				
ANR	4802468	Identifier	default		4802022	0					
ANR	4802469	ExpressionStatement	"set_dev_proc ( udev , encode_color , gx_default_map_rgb_color )"	3154:7:121307:121364	4802022	50	True				
ANR	4802470	CallExpression	"set_dev_proc ( udev , encode_color , gx_default_map_rgb_color )"		4802022	0					
ANR	4802471	Callee	set_dev_proc		4802022	0					
ANR	4802472	Identifier	set_dev_proc		4802022	0					
ANR	4802473	ArgumentList	udev		4802022	1					
ANR	4802474	Argument	udev		4802022	0					
ANR	4802475	Identifier	udev		4802022	0					
ANR	4802476	Argument	encode_color		4802022	1					
ANR	4802477	Identifier	encode_color		4802022	0					
ANR	4802478	Argument	gx_default_map_rgb_color		4802022	2					
ANR	4802479	Identifier	gx_default_map_rgb_color		4802022	0					
ANR	4802480	ExpressionStatement	"set_dev_proc ( udev , decode_color , gx_default_map_color_rgb )"	3155:7:121373:121430	4802022	51	True				
ANR	4802481	CallExpression	"set_dev_proc ( udev , decode_color , gx_default_map_color_rgb )"		4802022	0					
ANR	4802482	Callee	set_dev_proc		4802022	0					
ANR	4802483	Identifier	set_dev_proc		4802022	0					
ANR	4802484	ArgumentList	udev		4802022	1					
ANR	4802485	Argument	udev		4802022	0					
ANR	4802486	Identifier	udev		4802022	0					
ANR	4802487	Argument	decode_color		4802022	1					
ANR	4802488	Identifier	decode_color		4802022	0					
ANR	4802489	Argument	gx_default_map_color_rgb		4802022	2					
ANR	4802490	Identifier	gx_default_map_color_rgb		4802022	0					
ANR	4802491	ExpressionStatement	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"	3156:7:121439:121497	4802022	52	True				
ANR	4802492	CallExpression	"set_dev_proc ( udev , map_rgb_color , gx_default_map_rgb_color )"		4802022	0					
ANR	4802493	Callee	set_dev_proc		4802022	0					
ANR	4802494	Identifier	set_dev_proc		4802022	0					
ANR	4802495	ArgumentList	udev		4802022	1					
ANR	4802496	Argument	udev		4802022	0					
ANR	4802497	Identifier	udev		4802022	0					
ANR	4802498	Argument	map_rgb_color		4802022	1					
ANR	4802499	Identifier	map_rgb_color		4802022	0					
ANR	4802500	Argument	gx_default_map_rgb_color		4802022	2					
ANR	4802501	Identifier	gx_default_map_rgb_color		4802022	0					
ANR	4802502	ExpressionStatement	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"	3157:7:121506:121565	4802022	53	True				
ANR	4802503	CallExpression	"set_dev_proc ( udev , map_cmyk_color , gx_default_map_cmyk_color )"		4802022	0					
ANR	4802504	Callee	set_dev_proc		4802022	0					
ANR	4802505	Identifier	set_dev_proc		4802022	0					
ANR	4802506	ArgumentList	udev		4802022	1					
ANR	4802507	Argument	udev		4802022	0					
ANR	4802508	Identifier	udev		4802022	0					
ANR	4802509	Argument	map_cmyk_color		4802022	1					
ANR	4802510	Identifier	map_cmyk_color		4802022	0					
ANR	4802511	Argument	gx_default_map_cmyk_color		4802022	2					
ANR	4802512	Identifier	gx_default_map_cmyk_color		4802022	0					
ANR	4802513	ExpressionStatement	"set_dev_proc ( udev , map_color_rgb , gx_default_map_color_rgb )"	3158:7:121574:121632	4802022	54	True				
ANR	4802514	CallExpression	"set_dev_proc ( udev , map_color_rgb , gx_default_map_color_rgb )"		4802022	0					
ANR	4802515	Callee	set_dev_proc		4802022	0					
ANR	4802516	Identifier	set_dev_proc		4802022	0					
ANR	4802517	ArgumentList	udev		4802022	1					
ANR	4802518	Argument	udev		4802022	0					
ANR	4802519	Identifier	udev		4802022	0					
ANR	4802520	Argument	map_color_rgb		4802022	1					
ANR	4802521	Identifier	map_color_rgb		4802022	0					
ANR	4802522	Argument	gx_default_map_color_rgb		4802022	2					
ANR	4802523	Identifier	gx_default_map_color_rgb		4802022	0					
ANR	4802524	BreakStatement	break ;	3159:5:121639:121644	4802022	55	True				
ANR	4802525	ReturnStatement	return 0 ;	3161:2:121652:121660	4802022	3	True				
ANR	4802526	PrimaryExpression	0		4802022	0					
ANR	4802527	ReturnType	static int		4802022	1					
ANR	4802528	Identifier	upd_procs_map		4802022	2					
ANR	4802529	ParameterList	upd_device * udev		4802022	3					
ANR	4802530	Parameter	upd_device * udev	3094:14:118585:118600	4802022	0	True				
ANR	4802531	ParameterType	upd_device *		4802022	0					
ANR	4802532	Identifier	udev		4802022	1					
ANR	4802533	CFGEntryNode	ENTRY		4802022		True				
ANR	4802534	CFGExitNode	EXIT		4802022		True				
ANR	4802535	Symbol	C_MAPPER		4802022						
ANR	4802536	Symbol	upd_kcolor_rgb		4802022						
ANR	4802537	Symbol	gx_default_map_cmyk_color		4802022						
ANR	4802538	Symbol	upd_rgb_4color		4802022						
ANR	4802539	Symbol	map_cmyk_color		4802022						
ANR	4802540	Symbol	encode_color		4802022						
ANR	4802541	Symbol	gx_default_map_rgb_color		4802022						
ANR	4802542	Symbol	upd_novcolor_rgb		4802022						
ANR	4802543	Symbol	udev -> upd -> choice		4802022						
ANR	4802544	Symbol	upd_rgb_1color		4802022						
ANR	4802545	Symbol	map_color_rgb		4802022						
ANR	4802546	Symbol	udev -> upd		4802022						
ANR	4802547	Symbol	decode_color		4802022						
ANR	4802548	Symbol	upd_ovcolor_rgb		4802022						
ANR	4802549	Symbol	* udev		4802022						
ANR	4802550	Symbol	upd_rgb_novcolor		4802022						
ANR	4802551	Symbol	upd_icolor_rgb		4802022						
ANR	4802552	Symbol	* * udev -> upd		4802022						
ANR	4802553	Symbol	upd_3color_rgb		4802022						
ANR	4802554	Symbol	upd_rgb_3color		4802022						
ANR	4802555	Symbol	* * * udev		4802022						
ANR	4802556	Symbol	* udev -> upd		4802022						
ANR	4802557	Symbol	udev -> upd -> flags		4802022						
ANR	4802558	Symbol	upd_cmyk_kcolor		4802022						
ANR	4802559	Symbol	imap		4802022						
ANR	4802560	Symbol	* C_MAPPER		4802022						
ANR	4802561	Symbol	upd_4color_rgb		4802022						
ANR	4802562	Symbol	gx_default_map_color_rgb		4802022						
ANR	4802563	Symbol	upd_1color_rgb		4802022						
ANR	4802564	Symbol	map_rgb_color		4802022						
ANR	4802565	Symbol	* * udev		4802022						
ANR	4802566	Symbol	B_MAP		4802022						
ANR	4802567	Symbol	upd_rgb_ovcolor		4802022						
ANR	4802568	Symbol	* udev -> upd -> choice		4802022						
ANR	4802569	Symbol	udev		4802022						
ANR	4802570	Symbol	upd_cmyk_icolor		4802022						
ANR	4802571	Function	upd_close_map	3169:0:121889:122502							
ANR	4802572	FunctionDef	upd_close_map (upd_device * udev)		4802571	0					
ANR	4802573	CompoundStatement		3171:0:121932:122502	4802571	0					
ANR	4802574	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3172:3:121937:121971	4802571	0	True				
ANR	4802575	IdentifierDecl	upd = udev -> upd		4802571	0					
ANR	4802576	IdentifierDeclType	const upd_p		4802571	0					
ANR	4802577	Identifier	upd		4802571	1					
ANR	4802578	AssignmentExpression	upd = udev -> upd		4802571	2		=			
ANR	4802579	Identifier	upd		4802571	0					
ANR	4802580	PtrMemberAccess	udev -> upd		4802571	1					
ANR	4802581	Identifier	udev		4802571	0					
ANR	4802582	Identifier	upd		4802571	1					
ANR	4802583	IdentifierDeclStatement	int imap ;	3173:3:121976:121984	4802571	1	True				
ANR	4802584	IdentifierDecl	imap		4802571	0					
ANR	4802585	IdentifierDeclType	int		4802571	0					
ANR	4802586	Identifier	imap		4802571	1					
ANR	4802587	IfStatement	if ( upd )		4802571	2					
ANR	4802588	Condition	upd	3175:6:121993:121995	4802571	0	True				
ANR	4802589	Identifier	upd		4802571	0					
ANR	4802590	CompoundStatement		5:11:65:65	4802571	1					
ANR	4802591	ForStatement	for ( imap = 0 ; UPD_CMAP_MAX > imap ; ++ imap )		4802571	0					
ANR	4802592	ForInit	imap = 0 ;	3177:10:122011:122019	4802571	0	True				
ANR	4802593	AssignmentExpression	imap = 0		4802571	0		=			
ANR	4802594	Identifier	imap		4802571	0					
ANR	4802595	PrimaryExpression	0		4802571	1					
ANR	4802596	Condition	UPD_CMAP_MAX > imap	3177:20:122021:122039	4802571	1	True				
ANR	4802597	RelationalExpression	UPD_CMAP_MAX > imap		4802571	0		>			
ANR	4802598	Identifier	UPD_CMAP_MAX		4802571	0					
ANR	4802599	Identifier	imap		4802571	1					
ANR	4802600	UnaryExpression	++ imap	3177:41:122042:122047	4802571	2	True				
ANR	4802601	IncDec	++		4802571	0					
ANR	4802602	Identifier	imap		4802571	1					
ANR	4802603	CompoundStatement		7:49:117:117	4802571	3					
ANR	4802604	IfStatement	if ( upd -> cmap [ imap ] . code )		4802571	0					
ANR	4802605	Condition	upd -> cmap [ imap ] . code	3179:12:122065:122084	4802571	0	True				
ANR	4802606	MemberAccess	upd -> cmap [ imap ] . code		4802571	0					
ANR	4802607	ArrayIndexing	upd -> cmap [ imap ]		4802571	0					
ANR	4802608	PtrMemberAccess	upd -> cmap		4802571	0					
ANR	4802609	Identifier	upd		4802571	0					
ANR	4802610	Identifier	cmap		4802571	1					
ANR	4802611	Identifier	imap		4802571	1					
ANR	4802612	Identifier	code		4802571	1					
ANR	4802613	ExpressionStatement	"gs_free ( udev -> memory , upd -> cmap [ imap ] . code , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , upd -> cmap [ imap ] . bitmsk + 1 , ""upd/code"" )"	3180:12:122099:122227	4802571	1	True				
ANR	4802614	CallExpression	"gs_free ( udev -> memory , upd -> cmap [ imap ] . code , sizeof ( upd -> cmap [ imap ] . code [ 0 ] ) , upd -> cmap [ imap ] . bitmsk + 1 , ""upd/code"" )"		4802571	0					
ANR	4802615	Callee	gs_free		4802571	0					
ANR	4802616	Identifier	gs_free		4802571	0					
ANR	4802617	ArgumentList	udev -> memory		4802571	1					
ANR	4802618	Argument	udev -> memory		4802571	0					
ANR	4802619	PtrMemberAccess	udev -> memory		4802571	0					
ANR	4802620	Identifier	udev		4802571	0					
ANR	4802621	Identifier	memory		4802571	1					
ANR	4802622	Argument	upd -> cmap [ imap ] . code		4802571	1					
ANR	4802623	MemberAccess	upd -> cmap [ imap ] . code		4802571	0					
ANR	4802624	ArrayIndexing	upd -> cmap [ imap ]		4802571	0					
ANR	4802625	PtrMemberAccess	upd -> cmap		4802571	0					
ANR	4802626	Identifier	upd		4802571	0					
ANR	4802627	Identifier	cmap		4802571	1					
ANR	4802628	Identifier	imap		4802571	1					
ANR	4802629	Identifier	code		4802571	1					
ANR	4802630	Argument	sizeof ( upd -> cmap [ imap ] . code [ 0 ] )		4802571	2					
ANR	4802631	SizeofExpression	sizeof ( upd -> cmap [ imap ] . code [ 0 ] )		4802571	0					
ANR	4802632	Sizeof	sizeof		4802571	0					
ANR	4802633	ArrayIndexing	upd -> cmap [ imap ] . code [ 0 ]		4802571	1					
ANR	4802634	MemberAccess	upd -> cmap [ imap ] . code		4802571	0					
ANR	4802635	ArrayIndexing	upd -> cmap [ imap ]		4802571	0					
ANR	4802636	PtrMemberAccess	upd -> cmap		4802571	0					
ANR	4802637	Identifier	upd		4802571	0					
ANR	4802638	Identifier	cmap		4802571	1					
ANR	4802639	Identifier	imap		4802571	1					
ANR	4802640	Identifier	code		4802571	1					
ANR	4802641	PrimaryExpression	0		4802571	1					
ANR	4802642	Argument	upd -> cmap [ imap ] . bitmsk + 1		4802571	3					
ANR	4802643	AdditiveExpression	upd -> cmap [ imap ] . bitmsk + 1		4802571	0		+			
ANR	4802644	MemberAccess	upd -> cmap [ imap ] . bitmsk		4802571	0					
ANR	4802645	ArrayIndexing	upd -> cmap [ imap ]		4802571	0					
ANR	4802646	PtrMemberAccess	upd -> cmap		4802571	0					
ANR	4802647	Identifier	upd		4802571	0					
ANR	4802648	Identifier	cmap		4802571	1					
ANR	4802649	Identifier	imap		4802571	1					
ANR	4802650	Identifier	bitmsk		4802571	1					
ANR	4802651	PrimaryExpression	1		4802571	1					
ANR	4802652	Argument	"""upd/code"""		4802571	4					
ANR	4802653	PrimaryExpression	"""upd/code"""		4802571	0					
ANR	4802654	ExpressionStatement	upd -> cmap [ imap ] . code = NULL	3182:9:122238:122267	4802571	1	True				
ANR	4802655	AssignmentExpression	upd -> cmap [ imap ] . code = NULL		4802571	0		=			
ANR	4802656	MemberAccess	upd -> cmap [ imap ] . code		4802571	0					
ANR	4802657	ArrayIndexing	upd -> cmap [ imap ]		4802571	0					
ANR	4802658	PtrMemberAccess	upd -> cmap		4802571	0					
ANR	4802659	Identifier	upd		4802571	0					
ANR	4802660	Identifier	cmap		4802571	1					
ANR	4802661	Identifier	imap		4802571	1					
ANR	4802662	Identifier	code		4802571	1					
ANR	4802663	Identifier	NULL		4802571	1					
ANR	4802664	ExpressionStatement	upd -> cmap [ imap ] . bitmsk = 0	3184:9:122279:122305	4802571	2	True				
ANR	4802665	AssignmentExpression	upd -> cmap [ imap ] . bitmsk = 0		4802571	0		=			
ANR	4802666	MemberAccess	upd -> cmap [ imap ] . bitmsk		4802571	0					
ANR	4802667	ArrayIndexing	upd -> cmap [ imap ]		4802571	0					
ANR	4802668	PtrMemberAccess	upd -> cmap		4802571	0					
ANR	4802669	Identifier	upd		4802571	0					
ANR	4802670	Identifier	cmap		4802571	1					
ANR	4802671	Identifier	imap		4802571	1					
ANR	4802672	Identifier	bitmsk		4802571	1					
ANR	4802673	PrimaryExpression	0		4802571	1					
ANR	4802674	ExpressionStatement	upd -> cmap [ imap ] . bitshf = 0	3185:9:122316:122342	4802571	3	True				
ANR	4802675	AssignmentExpression	upd -> cmap [ imap ] . bitshf = 0		4802571	0		=			
ANR	4802676	MemberAccess	upd -> cmap [ imap ] . bitshf		4802571	0					
ANR	4802677	ArrayIndexing	upd -> cmap [ imap ]		4802571	0					
ANR	4802678	PtrMemberAccess	upd -> cmap		4802571	0					
ANR	4802679	Identifier	upd		4802571	0					
ANR	4802680	Identifier	cmap		4802571	1					
ANR	4802681	Identifier	imap		4802571	1					
ANR	4802682	Identifier	bitshf		4802571	1					
ANR	4802683	PrimaryExpression	0		4802571	1					
ANR	4802684	ExpressionStatement	upd -> cmap [ imap ] . bits = 0	3186:9:122353:122379	4802571	4	True				
ANR	4802685	AssignmentExpression	upd -> cmap [ imap ] . bits = 0		4802571	0		=			
ANR	4802686	MemberAccess	upd -> cmap [ imap ] . bits		4802571	0					
ANR	4802687	ArrayIndexing	upd -> cmap [ imap ]		4802571	0					
ANR	4802688	PtrMemberAccess	upd -> cmap		4802571	0					
ANR	4802689	Identifier	upd		4802571	0					
ANR	4802690	Identifier	cmap		4802571	1					
ANR	4802691	Identifier	imap		4802571	1					
ANR	4802692	Identifier	bits		4802571	1					
ANR	4802693	PrimaryExpression	0		4802571	1					
ANR	4802694	ExpressionStatement	upd -> cmap [ imap ] . rise = false	3187:9:122390:122420	4802571	5	True				
ANR	4802695	AssignmentExpression	upd -> cmap [ imap ] . rise = false		4802571	0		=			
ANR	4802696	MemberAccess	upd -> cmap [ imap ] . rise		4802571	0					
ANR	4802697	ArrayIndexing	upd -> cmap [ imap ]		4802571	0					
ANR	4802698	PtrMemberAccess	upd -> cmap		4802571	0					
ANR	4802699	Identifier	upd		4802571	0					
ANR	4802700	Identifier	cmap		4802571	1					
ANR	4802701	Identifier	imap		4802571	1					
ANR	4802702	Identifier	rise		4802571	1					
ANR	4802703	Identifier	false		4802571	1					
ANR	4802704	ExpressionStatement	upd -> flags &= ~B_MAP	3189:6:122436:122456	4802571	1	True				
ANR	4802705	AssignmentExpression	upd -> flags &= ~B_MAP		4802571	0		&=			
ANR	4802706	PtrMemberAccess	upd -> flags		4802571	0					
ANR	4802707	Identifier	upd		4802571	0					
ANR	4802708	Identifier	flags		4802571	1					
ANR	4802709	Identifier	~B_MAP		4802571	1					
ANR	4802710	ExpressionStatement	upd_procs_map ( udev )	3192:3:122467:122486	4802571	3	True				
ANR	4802711	CallExpression	upd_procs_map ( udev )		4802571	0					
ANR	4802712	Callee	upd_procs_map		4802571	0					
ANR	4802713	Identifier	upd_procs_map		4802571	0					
ANR	4802714	ArgumentList	udev		4802571	1					
ANR	4802715	Argument	udev		4802571	0					
ANR	4802716	Identifier	udev		4802571	0					
ANR	4802717	ReturnStatement	return 0 ;	3194:3:122492:122500	4802571	4	True				
ANR	4802718	PrimaryExpression	0		4802571	0					
ANR	4802719	ReturnType	static int		4802571	1					
ANR	4802720	Identifier	upd_close_map		4802571	2					
ANR	4802721	ParameterList	upd_device * udev		4802571	3					
ANR	4802722	Parameter	upd_device * udev	3170:14:121914:121929	4802571	0	True				
ANR	4802723	ParameterType	upd_device *		4802571	0					
ANR	4802724	Identifier	udev		4802571	1					
ANR	4802725	CFGEntryNode	ENTRY		4802571		True				
ANR	4802726	CFGExitNode	EXIT		4802571		True				
ANR	4802727	Symbol	upd -> cmap [ imap ] . bits		4802571						
ANR	4802728	Symbol	* upd -> cmap		4802571						
ANR	4802729	Symbol	upd -> cmap [ imap ] . rise		4802571						
ANR	4802730	Symbol	upd -> cmap		4802571						
ANR	4802731	Symbol	upd -> flags		4802571						
ANR	4802732	Symbol	~B_MAP		4802571						
ANR	4802733	Symbol	udev -> upd		4802571						
ANR	4802734	Symbol	* udev		4802571						
ANR	4802735	Symbol	* upd		4802571						
ANR	4802736	Symbol	* upd -> cmap [ imap ] . code		4802571						
ANR	4802737	Symbol	* imap		4802571						
ANR	4802738	Symbol	upd -> cmap [ imap ] . bitmsk		4802571						
ANR	4802739	Symbol	UPD_CMAP_MAX		4802571						
ANR	4802740	Symbol	imap		4802571						
ANR	4802741	Symbol	NULL		4802571						
ANR	4802742	Symbol	udev -> memory		4802571						
ANR	4802743	Symbol	* * imap		4802571						
ANR	4802744	Symbol	* * * upd		4802571						
ANR	4802745	Symbol	upd		4802571						
ANR	4802746	Symbol	false		4802571						
ANR	4802747	Symbol	upd -> cmap [ imap ] . bitshf		4802571						
ANR	4802748	Symbol	upd -> cmap [ imap ] . code		4802571						
ANR	4802749	Symbol	* * upd -> cmap		4802571						
ANR	4802750	Symbol	udev		4802571						
ANR	4802751	Symbol	* * upd		4802571						
ANR	4802752	Function	upd_open_render	3213:0:123178:124471							
ANR	4802753	FunctionDef	upd_open_render (upd_device * udev)		4802752	0					
ANR	4802754	CompoundStatement		3215:0:123224:124471	4802752	0					
ANR	4802755	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3216:3:123229:123256	4802752	0	True				
ANR	4802756	IdentifierDecl	upd = udev -> upd		4802752	0					
ANR	4802757	IdentifierDeclType	const upd_p		4802752	0					
ANR	4802758	Identifier	upd		4802752	1					
ANR	4802759	AssignmentExpression	upd = udev -> upd		4802752	2		=			
ANR	4802760	Identifier	upd		4802752	0					
ANR	4802761	PtrMemberAccess	udev -> upd		4802752	1					
ANR	4802762	Identifier	udev		4802752	0					
ANR	4802763	Identifier	upd		4802752	1					
ANR	4802764	IdentifierDeclStatement	int icomp ;	3217:3:123261:123271	4802752	1	True				
ANR	4802765	IdentifierDecl	icomp		4802752	0					
ANR	4802766	IdentifierDeclType	int		4802752	0					
ANR	4802767	Identifier	icomp		4802752	1					
ANR	4802768	ExpressionStatement	upd -> flags &= ~B_RENDER	3220:3:123322:123351	4802752	2	True				
ANR	4802769	AssignmentExpression	upd -> flags &= ~B_RENDER		4802752	0		&=			
ANR	4802770	PtrMemberAccess	upd -> flags		4802752	0					
ANR	4802771	Identifier	upd		4802752	0					
ANR	4802772	Identifier	flags		4802752	1					
ANR	4802773	Identifier	~B_RENDER		4802752	1					
ANR	4802774	ExpressionStatement	upd -> valbuf = NULL	3221:3:123356:123380	4802752	3	True				
ANR	4802775	AssignmentExpression	upd -> valbuf = NULL		4802752	0		=			
ANR	4802776	PtrMemberAccess	upd -> valbuf		4802752	0					
ANR	4802777	Identifier	upd		4802752	0					
ANR	4802778	Identifier	valbuf		4802752	1					
ANR	4802779	Identifier	NULL		4802752	1					
ANR	4802780	ExpressionStatement	upd -> nvalbuf = 0	3222:3:123385:123406	4802752	4	True				
ANR	4802781	AssignmentExpression	upd -> nvalbuf = 0		4802752	0		=			
ANR	4802782	PtrMemberAccess	upd -> nvalbuf		4802752	0					
ANR	4802783	Identifier	upd		4802752	0					
ANR	4802784	Identifier	nvalbuf		4802752	1					
ANR	4802785	PrimaryExpression	0		4802752	1					
ANR	4802786	ExpressionStatement	upd -> render = NULL	3223:3:123411:123435	4802752	5	True				
ANR	4802787	AssignmentExpression	upd -> render = NULL		4802752	0		=			
ANR	4802788	PtrMemberAccess	upd -> render		4802752	0					
ANR	4802789	Identifier	upd		4802752	0					
ANR	4802790	Identifier	render		4802752	1					
ANR	4802791	Identifier	NULL		4802752	1					
ANR	4802792	ExpressionStatement	upd -> start_render = NULL	3224:3:123440:123464	4802752	6	True				
ANR	4802793	AssignmentExpression	upd -> start_render = NULL		4802752	0		=			
ANR	4802794	PtrMemberAccess	upd -> start_render		4802752	0					
ANR	4802795	Identifier	upd		4802752	0					
ANR	4802796	Identifier	start_render		4802752	1					
ANR	4802797	Identifier	NULL		4802752	1					
ANR	4802798	ForStatement	for ( icomp = 0 ; UPD_VALPTR_MAX > icomp ; ++ icomp )		4802752	7					
ANR	4802799	ForInit	icomp = 0 ;	3225:7:123473:123482	4802752	0	True				
ANR	4802800	AssignmentExpression	icomp = 0		4802752	0		=			
ANR	4802801	Identifier	icomp		4802752	0					
ANR	4802802	PrimaryExpression	0		4802752	1					
ANR	4802803	Condition	UPD_VALPTR_MAX > icomp	3225:18:123484:123505	4802752	1	True				
ANR	4802804	RelationalExpression	UPD_VALPTR_MAX > icomp		4802752	0		>			
ANR	4802805	Identifier	UPD_VALPTR_MAX		4802752	0					
ANR	4802806	Identifier	icomp		4802752	1					
ANR	4802807	UnaryExpression	++ icomp	3225:42:123508:123514	4802752	2	True				
ANR	4802808	IncDec	++		4802752	0					
ANR	4802809	Identifier	icomp		4802752	1					
ANR	4802810	ExpressionStatement	upd -> valptr [ icomp ] = NULL	3225:51:123517:123542	4802752	3	True				
ANR	4802811	AssignmentExpression	upd -> valptr [ icomp ] = NULL		4802752	0		=			
ANR	4802812	ArrayIndexing	upd -> valptr [ icomp ]		4802752	0					
ANR	4802813	PtrMemberAccess	upd -> valptr		4802752	0					
ANR	4802814	Identifier	upd		4802752	0					
ANR	4802815	Identifier	valptr		4802752	1					
ANR	4802816	Identifier	icomp		4802752	1					
ANR	4802817	Identifier	NULL		4802752	1					
ANR	4802818	IfStatement	if ( ( B_BUF | B_MAP ) == ( ( B_BUF | B_MAP | B_ERROR ) & upd -> flags ) )		4802752	8					
ANR	4802819	Condition	( B_BUF | B_MAP ) == ( ( B_BUF | B_MAP | B_ERROR ) & upd -> flags )	3227:7:123552:123616	4802752	0	True				
ANR	4802820	EqualityExpression	( B_BUF | B_MAP ) == ( ( B_BUF | B_MAP | B_ERROR ) & upd -> flags )		4802752	0		==			
ANR	4802821	InclusiveOrExpression	B_BUF | B_MAP		4802752	0		|			
ANR	4802822	Identifier	B_BUF		4802752	0					
ANR	4802823	Identifier	B_MAP		4802752	1					
ANR	4802824	BitAndExpression	( B_BUF | B_MAP | B_ERROR ) & upd -> flags		4802752	1		&			
ANR	4802825	InclusiveOrExpression	B_BUF | B_MAP | B_ERROR		4802752	0		|			
ANR	4802826	Identifier	B_BUF		4802752	0					
ANR	4802827	InclusiveOrExpression	B_MAP | B_ERROR		4802752	1		|			
ANR	4802828	Identifier	B_MAP		4802752	0					
ANR	4802829	Identifier	B_ERROR		4802752	1					
ANR	4802830	PtrMemberAccess	upd -> flags		4802752	1					
ANR	4802831	Identifier	upd		4802752	0					
ANR	4802832	Identifier	flags		4802752	1					
ANR	4802833	CompoundStatement		14:48:394:394	4802752	1					
ANR	4802834	ExpressionStatement	upd -> rwidth = upd -> gswidth	3231:6:123671:123697	4802752	0	True				
ANR	4802835	AssignmentExpression	upd -> rwidth = upd -> gswidth		4802752	0		=			
ANR	4802836	PtrMemberAccess	upd -> rwidth		4802752	0					
ANR	4802837	Identifier	upd		4802752	0					
ANR	4802838	Identifier	rwidth		4802752	1					
ANR	4802839	PtrMemberAccess	upd -> gswidth		4802752	1					
ANR	4802840	Identifier	upd		4802752	0					
ANR	4802841	Identifier	gswidth		4802752	1					
ANR	4802842	IfStatement	if ( ( 0 < upd -> ints [ I_PWIDTH ] ) && ( upd -> gswidth > upd -> ints [ I_PWIDTH ] ) )		4802752	1					
ANR	4802843	Condition	( 0 < upd -> ints [ I_PWIDTH ] ) && ( upd -> gswidth > upd -> ints [ I_PWIDTH ] )	3232:9:123708:123792	4802752	0	True				
ANR	4802844	AndExpression	( 0 < upd -> ints [ I_PWIDTH ] ) && ( upd -> gswidth > upd -> ints [ I_PWIDTH ] )		4802752	0		&&			
ANR	4802845	RelationalExpression	0 < upd -> ints [ I_PWIDTH ]		4802752	0		<			
ANR	4802846	PrimaryExpression	0		4802752	0					
ANR	4802847	ArrayIndexing	upd -> ints [ I_PWIDTH ]		4802752	1					
ANR	4802848	PtrMemberAccess	upd -> ints		4802752	0					
ANR	4802849	Identifier	upd		4802752	0					
ANR	4802850	Identifier	ints		4802752	1					
ANR	4802851	Identifier	I_PWIDTH		4802752	1					
ANR	4802852	RelationalExpression	upd -> gswidth > upd -> ints [ I_PWIDTH ]		4802752	1		>			
ANR	4802853	PtrMemberAccess	upd -> gswidth		4802752	0					
ANR	4802854	Identifier	upd		4802752	0					
ANR	4802855	Identifier	gswidth		4802752	1					
ANR	4802856	ArrayIndexing	upd -> ints [ I_PWIDTH ]		4802752	1					
ANR	4802857	PtrMemberAccess	upd -> ints		4802752	0					
ANR	4802858	Identifier	upd		4802752	0					
ANR	4802859	Identifier	ints		4802752	1					
ANR	4802860	Identifier	I_PWIDTH		4802752	1					
ANR	4802861	ExpressionStatement	upd -> rwidth = upd -> ints [ I_PWIDTH ]	3234:10:123808:123842	4802752	1	True				
ANR	4802862	AssignmentExpression	upd -> rwidth = upd -> ints [ I_PWIDTH ]		4802752	0		=			
ANR	4802863	PtrMemberAccess	upd -> rwidth		4802752	0					
ANR	4802864	Identifier	upd		4802752	0					
ANR	4802865	Identifier	rwidth		4802752	1					
ANR	4802866	ArrayIndexing	upd -> ints [ I_PWIDTH ]		4802752	1					
ANR	4802867	PtrMemberAccess	upd -> ints		4802752	0					
ANR	4802868	Identifier	upd		4802752	0					
ANR	4802869	Identifier	ints		4802752	1					
ANR	4802870	Identifier	I_PWIDTH		4802752	1					
ANR	4802871	SwitchStatement	switch ( upd -> choice [ C_RENDER ] )		4802752	2					
ANR	4802872	Condition	upd -> choice [ C_RENDER ]	3237:13:123904:123924	4802752	0	True				
ANR	4802873	ArrayIndexing	upd -> choice [ C_RENDER ]		4802752	0					
ANR	4802874	PtrMemberAccess	upd -> choice		4802752	0					
ANR	4802875	Identifier	upd		4802752	0					
ANR	4802876	Identifier	choice		4802752	1					
ANR	4802877	Identifier	C_RENDER		4802752	1					
ANR	4802878	CompoundStatement		23:36:702:702	4802752	1					
ANR	4802879	Label	case RND_FSCOMP :	3238:9:123938:123953	4802752	0	True				
ANR	4802880	Identifier	RND_FSCOMP		4802752	0					
ANR	4802881	ExpressionStatement	upd_open_fscomp ( udev )	3239:12:123967:123988	4802752	1	True				
ANR	4802882	CallExpression	upd_open_fscomp ( udev )		4802752	0					
ANR	4802883	Callee	upd_open_fscomp		4802752	0					
ANR	4802884	Identifier	upd_open_fscomp		4802752	0					
ANR	4802885	ArgumentList	udev		4802752	1					
ANR	4802886	Argument	udev		4802752	0					
ANR	4802887	Identifier	udev		4802752	0					
ANR	4802888	BreakStatement	break ;	3240:9:123999:124004	4802752	2	True				
ANR	4802889	Label	case RND_FSCMYK :	3241:9:124015:124030	4802752	3	True				
ANR	4802890	Identifier	RND_FSCMYK		4802752	0					
ANR	4802891	ExpressionStatement	upd_open_fscmyk ( udev )	3242:12:124044:124065	4802752	4	True				
ANR	4802892	CallExpression	upd_open_fscmyk ( udev )		4802752	0					
ANR	4802893	Callee	upd_open_fscmyk		4802752	0					
ANR	4802894	Identifier	upd_open_fscmyk		4802752	0					
ANR	4802895	ArgumentList	udev		4802752	1					
ANR	4802896	Argument	udev		4802752	0					
ANR	4802897	Identifier	udev		4802752	0					
ANR	4802898	BreakStatement	break ;	3243:9:124076:124081	4802752	5	True				
ANR	4802899	Label	case RND_FSCMY_K :	3244:9:124092:124108	4802752	6	True				
ANR	4802900	Identifier	RND_FSCMY_K		4802752	0					
ANR	4802901	ExpressionStatement	upd_open_fscmy_k ( udev )	3245:12:124122:124144	4802752	7	True				
ANR	4802902	CallExpression	upd_open_fscmy_k ( udev )		4802752	0					
ANR	4802903	Callee	upd_open_fscmy_k		4802752	0					
ANR	4802904	Identifier	upd_open_fscmy_k		4802752	0					
ANR	4802905	ArgumentList	udev		4802752	1					
ANR	4802906	Argument	udev		4802752	0					
ANR	4802907	Identifier	udev		4802752	0					
ANR	4802908	BreakStatement	break ;	3246:9:124155:124160	4802752	8	True				
ANR	4802909	Label	default :	3247:9:124171:124178	4802752	9	True				
ANR	4802910	Identifier	default		4802752	0					
ANR	4802911	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_render: Unknown rendering type %d\\n"" , upd -> choice [ C_RENDER ] )"	3249:12:124225:124335	4802752	10	True				
ANR	4802912	CallExpression	"errprintf ( udev -> memory , ""upd_open_render: Unknown rendering type %d\\n"" , upd -> choice [ C_RENDER ] )"		4802752	0					
ANR	4802913	Callee	errprintf		4802752	0					
ANR	4802914	Identifier	errprintf		4802752	0					
ANR	4802915	ArgumentList	udev -> memory		4802752	1					
ANR	4802916	Argument	udev -> memory		4802752	0					
ANR	4802917	PtrMemberAccess	udev -> memory		4802752	0					
ANR	4802918	Identifier	udev		4802752	0					
ANR	4802919	Identifier	memory		4802752	1					
ANR	4802920	Argument	"""upd_open_render: Unknown rendering type %d\\n"""		4802752	1					
ANR	4802921	PrimaryExpression	"""upd_open_render: Unknown rendering type %d\\n"""		4802752	0					
ANR	4802922	Argument	upd -> choice [ C_RENDER ]		4802752	2					
ANR	4802923	ArrayIndexing	upd -> choice [ C_RENDER ]		4802752	0					
ANR	4802924	PtrMemberAccess	upd -> choice		4802752	0					
ANR	4802925	Identifier	upd		4802752	0					
ANR	4802926	Identifier	choice		4802752	1					
ANR	4802927	Identifier	C_RENDER		4802752	1					
ANR	4802928	BreakStatement	break ;	3252:9:124353:124358	4802752	11	True				
ANR	4802929	IfStatement	if ( B_RENDER != ( ( B_ERROR | B_RENDER ) & upd -> flags ) )		4802752	9					
ANR	4802930	Condition	B_RENDER != ( ( B_ERROR | B_RENDER ) & upd -> flags )	3256:6:124380:124426	4802752	0	True				
ANR	4802931	EqualityExpression	B_RENDER != ( ( B_ERROR | B_RENDER ) & upd -> flags )		4802752	0		!=			
ANR	4802932	Identifier	B_RENDER		4802752	0					
ANR	4802933	BitAndExpression	( B_ERROR | B_RENDER ) & upd -> flags		4802752	1		&			
ANR	4802934	InclusiveOrExpression	B_ERROR | B_RENDER		4802752	0		|			
ANR	4802935	Identifier	B_ERROR		4802752	0					
ANR	4802936	Identifier	B_RENDER		4802752	1					
ANR	4802937	PtrMemberAccess	upd -> flags		4802752	1					
ANR	4802938	Identifier	upd		4802752	0					
ANR	4802939	Identifier	flags		4802752	1					
ANR	4802940	ExpressionStatement	upd_close_render ( udev )	3257:6:124435:124457	4802752	1	True				
ANR	4802941	CallExpression	upd_close_render ( udev )		4802752	0					
ANR	4802942	Callee	upd_close_render		4802752	0					
ANR	4802943	Identifier	upd_close_render		4802752	0					
ANR	4802944	ArgumentList	udev		4802752	1					
ANR	4802945	Argument	udev		4802752	0					
ANR	4802946	Identifier	udev		4802752	0					
ANR	4802947	ReturnStatement	return ;	3259:3:124463:124469	4802752	10	True				
ANR	4802948	ReturnType	static void		4802752	1					
ANR	4802949	Identifier	upd_open_render		4802752	2					
ANR	4802950	ParameterList	upd_device * udev		4802752	3					
ANR	4802951	Parameter	upd_device * udev	3214:16:123206:123221	4802752	0	True				
ANR	4802952	ParameterType	upd_device *		4802752	0					
ANR	4802953	Identifier	udev		4802752	1					
ANR	4802954	CFGEntryNode	ENTRY		4802752		True				
ANR	4802955	CFGExitNode	EXIT		4802752		True				
ANR	4802956	Symbol	B_ERROR		4802752						
ANR	4802957	Symbol	icomp		4802752						
ANR	4802958	Symbol	* upd -> choice		4802752						
ANR	4802959	Symbol	upd -> flags		4802752						
ANR	4802960	Symbol	upd -> rwidth		4802752						
ANR	4802961	Symbol	udev -> upd		4802752						
ANR	4802962	Symbol	upd -> valbuf		4802752						
ANR	4802963	Symbol	* udev		4802752						
ANR	4802964	Symbol	* upd		4802752						
ANR	4802965	Symbol	* icomp		4802752						
ANR	4802966	Symbol	upd -> nvalbuf		4802752						
ANR	4802967	Symbol	B_BUF		4802752						
ANR	4802968	Symbol	I_PWIDTH		4802752						
ANR	4802969	Symbol	upd -> start_render		4802752						
ANR	4802970	Symbol	* upd -> valptr		4802752						
ANR	4802971	Symbol	upd -> valptr		4802752						
ANR	4802972	Symbol	* C_RENDER		4802752						
ANR	4802973	Symbol	NULL		4802752						
ANR	4802974	Symbol	udev -> memory		4802752						
ANR	4802975	Symbol	upd		4802752						
ANR	4802976	Symbol	B_RENDER		4802752						
ANR	4802977	Symbol	upd -> choice		4802752						
ANR	4802978	Symbol	UPD_VALPTR_MAX		4802752						
ANR	4802979	Symbol	upd -> gswidth		4802752						
ANR	4802980	Symbol	C_RENDER		4802752						
ANR	4802981	Symbol	upd -> render		4802752						
ANR	4802982	Symbol	B_MAP		4802752						
ANR	4802983	Symbol	* I_PWIDTH		4802752						
ANR	4802984	Symbol	* upd -> ints		4802752						
ANR	4802985	Symbol	udev		4802752						
ANR	4802986	Symbol	~B_RENDER		4802752						
ANR	4802987	Symbol	* * upd		4802752						
ANR	4802988	Symbol	upd -> ints		4802752						
ANR	4802989	Function	upd_close_render	3266:0:124697:125306							
ANR	4802990	FunctionDef	upd_close_render (upd_device * udev)		4802989	0					
ANR	4802991	CompoundStatement		3268:0:124744:125306	4802989	0					
ANR	4802992	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3269:3:124749:124776	4802989	0	True				
ANR	4802993	IdentifierDecl	upd = udev -> upd		4802989	0					
ANR	4802994	IdentifierDeclType	const upd_p		4802989	0					
ANR	4802995	Identifier	upd		4802989	1					
ANR	4802996	AssignmentExpression	upd = udev -> upd		4802989	2		=			
ANR	4802997	Identifier	upd		4802989	0					
ANR	4802998	PtrMemberAccess	udev -> upd		4802989	1					
ANR	4802999	Identifier	udev		4802989	0					
ANR	4803000	Identifier	upd		4802989	1					
ANR	4803001	IfStatement	if ( upd )		4802989	1					
ANR	4803002	Condition	upd	3271:6:124785:124787	4802989	0	True				
ANR	4803003	Identifier	upd		4802989	0					
ANR	4803004	CompoundStatement		5:6:53:62	4802989	1					
ANR	4803005	IdentifierDeclStatement	int icomp ;	3272:6:124798:124807	4802989	0	True				
ANR	4803006	IdentifierDecl	icomp		4802989	0					
ANR	4803007	IdentifierDeclType	int		4802989	0					
ANR	4803008	Identifier	icomp		4802989	1					
ANR	4803009	IfStatement	if ( ( upd -> render == upd_fscomp ) || ( upd -> render == upd_fscmyk ) )		4802989	1					
ANR	4803010	Condition	( upd -> render == upd_fscomp ) || ( upd -> render == upd_fscmyk )	3274:9:124819:124885	4802989	0	True				
ANR	4803011	OrExpression	( upd -> render == upd_fscomp ) || ( upd -> render == upd_fscmyk )		4802989	0		||			
ANR	4803012	EqualityExpression	upd -> render == upd_fscomp		4802989	0		==			
ANR	4803013	PtrMemberAccess	upd -> render		4802989	0					
ANR	4803014	Identifier	upd		4802989	0					
ANR	4803015	Identifier	render		4802989	1					
ANR	4803016	Identifier	upd_fscomp		4802989	1					
ANR	4803017	EqualityExpression	upd -> render == upd_fscmyk		4802989	1		==			
ANR	4803018	PtrMemberAccess	upd -> render		4802989	0					
ANR	4803019	Identifier	upd		4802989	0					
ANR	4803020	Identifier	render		4802989	1					
ANR	4803021	Identifier	upd_fscmyk		4802989	1					
ANR	4803022	ExpressionStatement	upd_close_fscomp ( udev )	3275:42:124892:124914	4802989	1	True				
ANR	4803023	CallExpression	upd_close_fscomp ( udev )		4802989	0					
ANR	4803024	Callee	upd_close_fscomp		4802989	0					
ANR	4803025	Identifier	upd_close_fscomp		4802989	0					
ANR	4803026	ArgumentList	udev		4802989	1					
ANR	4803027	Argument	udev		4802989	0					
ANR	4803028	Identifier	udev		4802989	0					
ANR	4803029	IfStatement	if ( ( 0 < upd -> nvalbuf ) && upd -> valbuf )		4802989	2					
ANR	4803030	Condition	( 0 < upd -> nvalbuf ) && upd -> valbuf	3277:9:124926:124958	4802989	0	True				
ANR	4803031	AndExpression	( 0 < upd -> nvalbuf ) && upd -> valbuf		4802989	0		&&			
ANR	4803032	RelationalExpression	0 < upd -> nvalbuf		4802989	0		<			
ANR	4803033	PrimaryExpression	0		4802989	0					
ANR	4803034	PtrMemberAccess	upd -> nvalbuf		4802989	1					
ANR	4803035	Identifier	upd		4802989	0					
ANR	4803036	Identifier	nvalbuf		4802989	1					
ANR	4803037	PtrMemberAccess	upd -> valbuf		4802989	1					
ANR	4803038	Identifier	upd		4802989	0					
ANR	4803039	Identifier	valbuf		4802989	1					
ANR	4803040	ExpressionStatement	"gs_free ( udev -> memory , upd -> valbuf , upd -> nvalbuf , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"	3278:9:124970:125053	4802989	1	True				
ANR	4803041	CallExpression	"gs_free ( udev -> memory , upd -> valbuf , upd -> nvalbuf , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"		4802989	0					
ANR	4803042	Callee	gs_free		4802989	0					
ANR	4803043	Identifier	gs_free		4802989	0					
ANR	4803044	ArgumentList	udev -> memory		4802989	1					
ANR	4803045	Argument	udev -> memory		4802989	0					
ANR	4803046	PtrMemberAccess	udev -> memory		4802989	0					
ANR	4803047	Identifier	udev		4802989	0					
ANR	4803048	Identifier	memory		4802989	1					
ANR	4803049	Argument	upd -> valbuf		4802989	1					
ANR	4803050	PtrMemberAccess	upd -> valbuf		4802989	0					
ANR	4803051	Identifier	upd		4802989	0					
ANR	4803052	Identifier	valbuf		4802989	1					
ANR	4803053	Argument	upd -> nvalbuf		4802989	2					
ANR	4803054	PtrMemberAccess	upd -> nvalbuf		4802989	0					
ANR	4803055	Identifier	upd		4802989	0					
ANR	4803056	Identifier	nvalbuf		4802989	1					
ANR	4803057	Argument	sizeof ( upd -> valbuf [ 0 ] )		4802989	3					
ANR	4803058	SizeofExpression	sizeof ( upd -> valbuf [ 0 ] )		4802989	0					
ANR	4803059	Sizeof	sizeof		4802989	0					
ANR	4803060	ArrayIndexing	upd -> valbuf [ 0 ]		4802989	1					
ANR	4803061	PtrMemberAccess	upd -> valbuf		4802989	0					
ANR	4803062	Identifier	upd		4802989	0					
ANR	4803063	Identifier	valbuf		4802989	1					
ANR	4803064	PrimaryExpression	0		4802989	1					
ANR	4803065	Argument	"""upd/valbuf"""		4802989	4					
ANR	4803066	PrimaryExpression	"""upd/valbuf"""		4802989	0					
ANR	4803067	ExpressionStatement	upd -> valbuf = NULL	3279:6:125061:125080	4802989	3	True				
ANR	4803068	AssignmentExpression	upd -> valbuf = NULL		4802989	0		=			
ANR	4803069	PtrMemberAccess	upd -> valbuf		4802989	0					
ANR	4803070	Identifier	upd		4802989	0					
ANR	4803071	Identifier	valbuf		4802989	1					
ANR	4803072	Identifier	NULL		4802989	1					
ANR	4803073	ExpressionStatement	upd -> nvalbuf = 0	3280:6:125088:125104	4802989	4	True				
ANR	4803074	AssignmentExpression	upd -> nvalbuf = 0		4802989	0		=			
ANR	4803075	PtrMemberAccess	upd -> nvalbuf		4802989	0					
ANR	4803076	Identifier	upd		4802989	0					
ANR	4803077	Identifier	nvalbuf		4802989	1					
ANR	4803078	PrimaryExpression	0		4802989	1					
ANR	4803079	ExpressionStatement	upd -> flags &= ~B_RENDER	3282:6:125113:125142	4802989	5	True				
ANR	4803080	AssignmentExpression	upd -> flags &= ~B_RENDER		4802989	0		&=			
ANR	4803081	PtrMemberAccess	upd -> flags		4802989	0					
ANR	4803082	Identifier	upd		4802989	0					
ANR	4803083	Identifier	flags		4802989	1					
ANR	4803084	Identifier	~B_RENDER		4802989	1					
ANR	4803085	ExpressionStatement	upd -> render = NULL	3283:6:125150:125174	4802989	6	True				
ANR	4803086	AssignmentExpression	upd -> render = NULL		4802989	0		=			
ANR	4803087	PtrMemberAccess	upd -> render		4802989	0					
ANR	4803088	Identifier	upd		4802989	0					
ANR	4803089	Identifier	render		4802989	1					
ANR	4803090	Identifier	NULL		4802989	1					
ANR	4803091	ExpressionStatement	upd -> start_render = NULL	3284:6:125182:125206	4802989	7	True				
ANR	4803092	AssignmentExpression	upd -> start_render = NULL		4802989	0		=			
ANR	4803093	PtrMemberAccess	upd -> start_render		4802989	0					
ANR	4803094	Identifier	upd		4802989	0					
ANR	4803095	Identifier	start_render		4802989	1					
ANR	4803096	Identifier	NULL		4802989	1					
ANR	4803097	ForStatement	for ( icomp = 0 ; UPD_VALPTR_MAX > icomp ; ++ icomp )		4802989	8					
ANR	4803098	ForInit	icomp = 0 ;	3285:10:125218:125227	4802989	0	True				
ANR	4803099	AssignmentExpression	icomp = 0		4802989	0		=			
ANR	4803100	Identifier	icomp		4802989	0					
ANR	4803101	PrimaryExpression	0		4802989	1					
ANR	4803102	Condition	UPD_VALPTR_MAX > icomp	3285:21:125229:125250	4802989	1	True				
ANR	4803103	RelationalExpression	UPD_VALPTR_MAX > icomp		4802989	0		>			
ANR	4803104	Identifier	UPD_VALPTR_MAX		4802989	0					
ANR	4803105	Identifier	icomp		4802989	1					
ANR	4803106	UnaryExpression	++ icomp	3285:45:125253:125259	4802989	2	True				
ANR	4803107	IncDec	++		4802989	0					
ANR	4803108	Identifier	icomp		4802989	1					
ANR	4803109	ExpressionStatement	upd -> valptr [ icomp ] = NULL	3285:54:125262:125287	4802989	3	True				
ANR	4803110	AssignmentExpression	upd -> valptr [ icomp ] = NULL		4802989	0		=			
ANR	4803111	ArrayIndexing	upd -> valptr [ icomp ]		4802989	0					
ANR	4803112	PtrMemberAccess	upd -> valptr		4802989	0					
ANR	4803113	Identifier	upd		4802989	0					
ANR	4803114	Identifier	valptr		4802989	1					
ANR	4803115	Identifier	icomp		4802989	1					
ANR	4803116	Identifier	NULL		4802989	1					
ANR	4803117	ReturnStatement	return ;	3288:3:125298:125304	4802989	2	True				
ANR	4803118	ReturnType	static void		4802989	1					
ANR	4803119	Identifier	upd_close_render		4802989	2					
ANR	4803120	ParameterList	upd_device * udev		4802989	3					
ANR	4803121	Parameter	upd_device * udev	3267:17:124726:124741	4802989	0	True				
ANR	4803122	ParameterType	upd_device *		4802989	0					
ANR	4803123	Identifier	udev		4802989	1					
ANR	4803124	CFGEntryNode	ENTRY		4802989		True				
ANR	4803125	CFGExitNode	EXIT		4802989		True				
ANR	4803126	Symbol	* upd -> valbuf		4802989						
ANR	4803127	Symbol	NULL		4802989						
ANR	4803128	Symbol	udev -> memory		4802989						
ANR	4803129	Symbol	upd_fscmyk		4802989						
ANR	4803130	Symbol	upd		4802989						
ANR	4803131	Symbol	upd_fscomp		4802989						
ANR	4803132	Symbol	UPD_VALPTR_MAX		4802989						
ANR	4803133	Symbol	icomp		4802989						
ANR	4803134	Symbol	upd -> render		4802989						
ANR	4803135	Symbol	upd -> flags		4802989						
ANR	4803136	Symbol	udev -> upd		4802989						
ANR	4803137	Symbol	upd -> valbuf		4802989						
ANR	4803138	Symbol	* udev		4802989						
ANR	4803139	Symbol	* upd		4802989						
ANR	4803140	Symbol	* icomp		4802989						
ANR	4803141	Symbol	udev		4802989						
ANR	4803142	Symbol	upd -> nvalbuf		4802989						
ANR	4803143	Symbol	~B_RENDER		4802989						
ANR	4803144	Symbol	upd -> start_render		4802989						
ANR	4803145	Symbol	* upd -> valptr		4802989						
ANR	4803146	Symbol	* * upd		4802989						
ANR	4803147	Symbol	upd -> valptr		4802989						
ANR	4803148	DeclStmt									
ANR	4803149	Decl							int32_t	int32_t [ UPD_VALPTR_MAX ]	fs_emin
ANR	4803150	Decl							int32_t	int32_t [ UPD_VALPTR_MAX ]	fs_emax
ANR	4803151	Function	upd_open_fscomp	3297:0:125633:132059							
ANR	4803152	FunctionDef	upd_open_fscomp (upd_device * udev)		4803151	0					
ANR	4803153	CompoundStatement		3299:0:125679:132059	4803151	0					
ANR	4803154	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3300:3:125684:125711	4803151	0	True				
ANR	4803155	IdentifierDecl	upd = udev -> upd		4803151	0					
ANR	4803156	IdentifierDeclType	const upd_p		4803151	0					
ANR	4803157	Identifier	upd		4803151	1					
ANR	4803158	AssignmentExpression	upd = udev -> upd		4803151	2		=			
ANR	4803159	Identifier	upd		4803151	0					
ANR	4803160	PtrMemberAccess	udev -> upd		4803151	1					
ANR	4803161	Identifier	udev		4803151	0					
ANR	4803162	Identifier	upd		4803151	1					
ANR	4803163	IdentifierDeclStatement	"int icomp , order [ UPD_CMAP_MAX ] ;"	3301:3:125716:125745	4803151	1	True				
ANR	4803164	IdentifierDecl	icomp		4803151	0					
ANR	4803165	IdentifierDeclType	int		4803151	0					
ANR	4803166	Identifier	icomp		4803151	1					
ANR	4803167	IdentifierDecl	order [ UPD_CMAP_MAX ]		4803151	1					
ANR	4803168	IdentifierDeclType	int [ UPD_CMAP_MAX ]		4803151	0					
ANR	4803169	Identifier	order		4803151	1					
ANR	4803170	Identifier	UPD_CMAP_MAX		4803151	2					
ANR	4803171	ForStatement	for ( icomp = 0 ; UPD_VALPTR_MAX < icomp ; ++ icomp )		4803151	2					
ANR	4803172	ForInit	icomp = 0 ;	3304:7:125786:125795	4803151	0	True				
ANR	4803173	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4803174	Identifier	icomp		4803151	0					
ANR	4803175	PrimaryExpression	0		4803151	1					
ANR	4803176	Condition	UPD_VALPTR_MAX < icomp	3304:18:125797:125818	4803151	1	True				
ANR	4803177	RelationalExpression	UPD_VALPTR_MAX < icomp		4803151	0		<			
ANR	4803178	Identifier	UPD_VALPTR_MAX		4803151	0					
ANR	4803179	Identifier	icomp		4803151	1					
ANR	4803180	UnaryExpression	++ icomp	3304:42:125821:125827	4803151	2	True				
ANR	4803181	IncDec	++		4803151	0					
ANR	4803182	Identifier	icomp		4803151	1					
ANR	4803183	ExpressionStatement	fs_emin [ icomp ] = fs_emax [ icomp ] = 0	3305:6:125836:125871	4803151	3	True				
ANR	4803184	AssignmentExpression	fs_emin [ icomp ] = fs_emax [ icomp ] = 0		4803151	0		=			
ANR	4803185	ArrayIndexing	fs_emin [ icomp ]		4803151	0					
ANR	4803186	Identifier	fs_emin		4803151	0					
ANR	4803187	Identifier	icomp		4803151	1					
ANR	4803188	AssignmentExpression	fs_emax [ icomp ] = 0		4803151	1		=			
ANR	4803189	ArrayIndexing	fs_emax [ icomp ]		4803151	0					
ANR	4803190	Identifier	fs_emax		4803151	0					
ANR	4803191	Identifier	icomp		4803151	1					
ANR	4803192	PrimaryExpression	0		4803151	1					
ANR	4803193	ExpressionStatement	icomp = upd -> ncomp	3308:3:125884:125902	4803151	3	True				
ANR	4803194	AssignmentExpression	icomp = upd -> ncomp		4803151	0		=			
ANR	4803195	Identifier	icomp		4803151	0					
ANR	4803196	PtrMemberAccess	upd -> ncomp		4803151	1					
ANR	4803197	Identifier	upd		4803151	0					
ANR	4803198	Identifier	ncomp		4803151	1					
ANR	4803199	IfStatement	if ( ( 0 >= icomp ) || ( UPD_VALPTR_MAX < icomp ) || ( UPD_CMAP_MAX < icomp ) )		4803151	4					
ANR	4803200	Condition	( 0 >= icomp ) || ( UPD_VALPTR_MAX < icomp ) || ( UPD_CMAP_MAX < icomp )	3310:6:125911:126005	4803151	0	True				
ANR	4803201	OrExpression	( 0 >= icomp ) || ( UPD_VALPTR_MAX < icomp ) || ( UPD_CMAP_MAX < icomp )		4803151	0		||			
ANR	4803202	RelationalExpression	0 >= icomp		4803151	0		>=			
ANR	4803203	PrimaryExpression	0		4803151	0					
ANR	4803204	Identifier	icomp		4803151	1					
ANR	4803205	OrExpression	( UPD_VALPTR_MAX < icomp ) || ( UPD_CMAP_MAX < icomp )		4803151	1		||			
ANR	4803206	RelationalExpression	UPD_VALPTR_MAX < icomp		4803151	0		<			
ANR	4803207	Identifier	UPD_VALPTR_MAX		4803151	0					
ANR	4803208	Identifier	icomp		4803151	1					
ANR	4803209	RelationalExpression	UPD_CMAP_MAX < icomp		4803151	1		<			
ANR	4803210	Identifier	UPD_CMAP_MAX		4803151	0					
ANR	4803211	Identifier	icomp		4803151	1					
ANR	4803212	ExpressionStatement	icomp = 0	3312:36:126011:126025	4803151	1	True				
ANR	4803213	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4803214	Identifier	icomp		4803151	0					
ANR	4803215	PrimaryExpression	0		4803151	1					
ANR	4803216	IfStatement	if ( icomp )		4803151	5					
ANR	4803217	Condition	icomp	3320:6:126284:126288	4803151	0	True				
ANR	4803218	Identifier	icomp		4803151	0					
ANR	4803219	CompoundStatement		22:13:611:611	4803151	1					
ANR	4803220	IfStatement	if ( upd -> ncomp <= upd -> int_a [ IA_COMPORDER ] . size )		4803151	0					
ANR	4803221	Condition	upd -> ncomp <= upd -> int_a [ IA_COMPORDER ] . size	3321:9:126302:126344	4803151	0	True				
ANR	4803222	RelationalExpression	upd -> ncomp <= upd -> int_a [ IA_COMPORDER ] . size		4803151	0		<=			
ANR	4803223	PtrMemberAccess	upd -> ncomp		4803151	0					
ANR	4803224	Identifier	upd		4803151	0					
ANR	4803225	Identifier	ncomp		4803151	1					
ANR	4803226	MemberAccess	upd -> int_a [ IA_COMPORDER ] . size		4803151	1					
ANR	4803227	ArrayIndexing	upd -> int_a [ IA_COMPORDER ]		4803151	0					
ANR	4803228	PtrMemberAccess	upd -> int_a		4803151	0					
ANR	4803229	Identifier	upd		4803151	0					
ANR	4803230	Identifier	int_a		4803151	1					
ANR	4803231	Identifier	IA_COMPORDER		4803151	1					
ANR	4803232	Identifier	size		4803151	1					
ANR	4803233	CompoundStatement		24:9:695:714	4803151	1					
ANR	4803234	IdentifierDeclStatement	bool success = true ;	3322:9:126375:126394	4803151	0	True				
ANR	4803235	IdentifierDecl	success = true		4803151	0					
ANR	4803236	IdentifierDeclType	bool		4803151	0					
ANR	4803237	Identifier	success		4803151	1					
ANR	4803238	AssignmentExpression	success = true		4803151	2		=			
ANR	4803239	Identifier	true		4803151	0					
ANR	4803240	Identifier	true		4803151	1					
ANR	4803241	ForStatement	for ( icomp = 0 ; upd -> ncomp > icomp ; ++ icomp )		4803151	1					
ANR	4803242	ForInit	icomp = 0 ;	3323:13:126409:126418	4803151	0	True				
ANR	4803243	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4803244	Identifier	icomp		4803151	0					
ANR	4803245	PrimaryExpression	0		4803151	1					
ANR	4803246	Condition	upd -> ncomp > icomp	3323:24:126420:126437	4803151	1	True				
ANR	4803247	RelationalExpression	upd -> ncomp > icomp		4803151	0		>			
ANR	4803248	PtrMemberAccess	upd -> ncomp		4803151	0					
ANR	4803249	Identifier	upd		4803151	0					
ANR	4803250	Identifier	ncomp		4803151	1					
ANR	4803251	Identifier	icomp		4803151	1					
ANR	4803252	UnaryExpression	++ icomp	3323:44:126440:126446	4803151	2	True				
ANR	4803253	IncDec	++		4803151	0					
ANR	4803254	Identifier	icomp		4803151	1					
ANR	4803255	CompoundStatement		25:53:769:769	4803151	3					
ANR	4803256	ExpressionStatement	order [ icomp ] = upd -> int_a [ IA_COMPORDER ] . data [ icomp ]	3324:12:126463:126514	4803151	0	True				
ANR	4803257	AssignmentExpression	order [ icomp ] = upd -> int_a [ IA_COMPORDER ] . data [ icomp ]		4803151	0		=			
ANR	4803258	ArrayIndexing	order [ icomp ]		4803151	0					
ANR	4803259	Identifier	order		4803151	0					
ANR	4803260	Identifier	icomp		4803151	1					
ANR	4803261	ArrayIndexing	upd -> int_a [ IA_COMPORDER ] . data [ icomp ]		4803151	1					
ANR	4803262	MemberAccess	upd -> int_a [ IA_COMPORDER ] . data		4803151	0					
ANR	4803263	ArrayIndexing	upd -> int_a [ IA_COMPORDER ]		4803151	0					
ANR	4803264	PtrMemberAccess	upd -> int_a		4803151	0					
ANR	4803265	Identifier	upd		4803151	0					
ANR	4803266	Identifier	int_a		4803151	1					
ANR	4803267	Identifier	IA_COMPORDER		4803151	1					
ANR	4803268	Identifier	data		4803151	1					
ANR	4803269	Identifier	icomp		4803151	1					
ANR	4803270	IfStatement	if ( ( 0 > order [ icomp ] ) || ( UPD_CMAP_MAX <= order [ icomp ] ) )		4803151	1					
ANR	4803271	Condition	( 0 > order [ icomp ] ) || ( UPD_CMAP_MAX <= order [ icomp ] )	3325:15:126531:126609	4803151	0	True				
ANR	4803272	OrExpression	( 0 > order [ icomp ] ) || ( UPD_CMAP_MAX <= order [ icomp ] )		4803151	0		||			
ANR	4803273	RelationalExpression	0 > order [ icomp ]		4803151	0		>			
ANR	4803274	PrimaryExpression	0		4803151	0					
ANR	4803275	ArrayIndexing	order [ icomp ]		4803151	1					
ANR	4803276	Identifier	order		4803151	0					
ANR	4803277	Identifier	icomp		4803151	1					
ANR	4803278	RelationalExpression	UPD_CMAP_MAX <= order [ icomp ]		4803151	1		<=			
ANR	4803279	Identifier	UPD_CMAP_MAX		4803151	0					
ANR	4803280	ArrayIndexing	order [ icomp ]		4803151	1					
ANR	4803281	Identifier	order		4803151	0					
ANR	4803282	Identifier	icomp		4803151	1					
ANR	4803283	CompoundStatement		28:50:935:935	4803151	1					
ANR	4803284	ExpressionStatement	success = false	3327:15:126632:126647	4803151	0	True				
ANR	4803285	AssignmentExpression	success = false		4803151	0		=			
ANR	4803286	Identifier	success		4803151	0					
ANR	4803287	Identifier	false		4803151	1					
ANR	4803288	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_fscomp: %d is illegal component-index\\n"" , order [ icomp ] )"	3329:18:126700:126827	4803151	1	True				
ANR	4803289	CallExpression	"errprintf ( udev -> memory , ""upd_open_fscomp: %d is illegal component-index\\n"" , order [ icomp ] )"		4803151	0					
ANR	4803290	Callee	errprintf		4803151	0					
ANR	4803291	Identifier	errprintf		4803151	0					
ANR	4803292	ArgumentList	udev -> memory		4803151	1					
ANR	4803293	Argument	udev -> memory		4803151	0					
ANR	4803294	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4803295	Identifier	udev		4803151	0					
ANR	4803296	Identifier	memory		4803151	1					
ANR	4803297	Argument	"""upd_open_fscomp: %d is illegal component-index\\n"""		4803151	1					
ANR	4803298	PrimaryExpression	"""upd_open_fscomp: %d is illegal component-index\\n"""		4803151	0					
ANR	4803299	Argument	order [ icomp ]		4803151	2					
ANR	4803300	ArrayIndexing	order [ icomp ]		4803151	0					
ANR	4803301	Identifier	order		4803151	0					
ANR	4803302	Identifier	icomp		4803151	1					
ANR	4803303	IfStatement	if ( ! success )		4803151	2					
ANR	4803304	Condition	! success	3335:12:126873:126880	4803151	0	True				
ANR	4803305	UnaryOperationExpression	! success		4803151	0					
ANR	4803306	UnaryOperator	!		4803151	0					
ANR	4803307	Identifier	success		4803151	1					
ANR	4803308	ExpressionStatement	icomp = 0	3335:22:126883:126892	4803151	1	True				
ANR	4803309	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4803310	Identifier	icomp		4803151	0					
ANR	4803311	PrimaryExpression	0		4803151	1					
ANR	4803312	ElseStatement	else		4803151	0					
ANR	4803313	CompoundStatement		38:13:1227:1227	4803151	0					
ANR	4803314	ForStatement	for ( icomp = 0 ; UPD_CMAP_MAX > icomp ; ++ icomp )		4803151	0					
ANR	4803315	ForInit	icomp = 0 ;	3337:13:126986:126995	4803151	0	True				
ANR	4803316	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4803317	Identifier	icomp		4803151	0					
ANR	4803318	PrimaryExpression	0		4803151	1					
ANR	4803319	Condition	UPD_CMAP_MAX > icomp	3337:24:126997:127016	4803151	1	True				
ANR	4803320	RelationalExpression	UPD_CMAP_MAX > icomp		4803151	0		>			
ANR	4803321	Identifier	UPD_CMAP_MAX		4803151	0					
ANR	4803322	Identifier	icomp		4803151	1					
ANR	4803323	UnaryExpression	++ icomp	3337:46:127019:127025	4803151	2	True				
ANR	4803324	IncDec	++		4803151	0					
ANR	4803325	Identifier	icomp		4803151	1					
ANR	4803326	ExpressionStatement	order [ icomp ] = icomp	3337:55:127028:127048	4803151	3	True				
ANR	4803327	AssignmentExpression	order [ icomp ] = icomp		4803151	0		=			
ANR	4803328	ArrayIndexing	order [ icomp ]		4803151	0					
ANR	4803329	Identifier	order		4803151	0					
ANR	4803330	Identifier	icomp		4803151	1					
ANR	4803331	Identifier	icomp		4803151	1					
ANR	4803332	IfStatement	if ( icomp )		4803151	6					
ANR	4803333	Condition	icomp	3344:6:127203:127207	4803151	0	True				
ANR	4803334	Identifier	icomp		4803151	0					
ANR	4803335	CompoundStatement		46:13:1530:1530	4803151	1					
ANR	4803336	ForStatement	for ( icomp = 0 ; upd -> ncomp > icomp ; ++ icomp )		4803151	0					
ANR	4803337	ForInit	icomp = 0 ;	3346:10:127223:127232	4803151	0	True				
ANR	4803338	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4803339	Identifier	icomp		4803151	0					
ANR	4803340	PrimaryExpression	0		4803151	1					
ANR	4803341	Condition	upd -> ncomp > icomp	3346:21:127234:127251	4803151	1	True				
ANR	4803342	RelationalExpression	upd -> ncomp > icomp		4803151	0		>			
ANR	4803343	PtrMemberAccess	upd -> ncomp		4803151	0					
ANR	4803344	Identifier	upd		4803151	0					
ANR	4803345	Identifier	ncomp		4803151	1					
ANR	4803346	Identifier	icomp		4803151	1					
ANR	4803347	UnaryExpression	++ icomp	3346:41:127254:127260	4803151	2	True				
ANR	4803348	IncDec	++		4803151	0					
ANR	4803349	Identifier	icomp		4803151	1					
ANR	4803350	CompoundStatement		48:50:1583:1583	4803151	3					
ANR	4803351	ExpressionStatement	"upd -> valptr [ icomp ] = gs_malloc ( udev -> memory , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"	3347:9:127274:127352	4803151	0	True				
ANR	4803352	AssignmentExpression	"upd -> valptr [ icomp ] = gs_malloc ( udev -> memory , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"		4803151	0		=			
ANR	4803353	ArrayIndexing	upd -> valptr [ icomp ]		4803151	0					
ANR	4803354	PtrMemberAccess	upd -> valptr		4803151	0					
ANR	4803355	Identifier	upd		4803151	0					
ANR	4803356	Identifier	valptr		4803151	1					
ANR	4803357	Identifier	icomp		4803151	1					
ANR	4803358	CallExpression	"gs_malloc ( udev -> memory , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"		4803151	1					
ANR	4803359	Callee	gs_malloc		4803151	0					
ANR	4803360	Identifier	gs_malloc		4803151	0					
ANR	4803361	ArgumentList	udev -> memory		4803151	1					
ANR	4803362	Argument	udev -> memory		4803151	0					
ANR	4803363	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4803364	Identifier	udev		4803151	0					
ANR	4803365	Identifier	memory		4803151	1					
ANR	4803366	Argument	1		4803151	1					
ANR	4803367	PrimaryExpression	1		4803151	0					
ANR	4803368	Argument	sizeof ( updcomp_t )		4803151	2					
ANR	4803369	SizeofExpression	sizeof ( updcomp_t )		4803151	0					
ANR	4803370	Sizeof	sizeof		4803151	0					
ANR	4803371	SizeofOperand	updcomp_t		4803151	1					
ANR	4803372	Argument	"""upd/fscomp"""		4803151	3					
ANR	4803373	PrimaryExpression	"""upd/fscomp"""		4803151	0					
ANR	4803374	IfStatement	if ( NULL == upd -> valptr [ icomp ] )		4803151	1					
ANR	4803375	Condition	NULL == upd -> valptr [ icomp ]	3348:12:127366:127391	4803151	0	True				
ANR	4803376	EqualityExpression	NULL == upd -> valptr [ icomp ]		4803151	0		==			
ANR	4803377	Identifier	NULL		4803151	0					
ANR	4803378	ArrayIndexing	upd -> valptr [ icomp ]		4803151	1					
ANR	4803379	PtrMemberAccess	upd -> valptr		4803151	0					
ANR	4803380	Identifier	upd		4803151	0					
ANR	4803381	Identifier	valptr		4803151	1					
ANR	4803382	Identifier	icomp		4803151	1					
ANR	4803383	CompoundStatement		50:40:1714:1714	4803151	1					
ANR	4803384	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_fscomp: could not allocate %d. updcomp\\n"" , icomp )"	3350:12:127439:127566	4803151	0	True				
ANR	4803385	CallExpression	"errprintf ( udev -> memory , ""upd_open_fscomp: could not allocate %d. updcomp\\n"" , icomp )"		4803151	0					
ANR	4803386	Callee	errprintf		4803151	0					
ANR	4803387	Identifier	errprintf		4803151	0					
ANR	4803388	ArgumentList	udev -> memory		4803151	1					
ANR	4803389	Argument	udev -> memory		4803151	0					
ANR	4803390	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4803391	Identifier	udev		4803151	0					
ANR	4803392	Identifier	memory		4803151	1					
ANR	4803393	Argument	"""upd_open_fscomp: could not allocate %d. updcomp\\n"""		4803151	1					
ANR	4803394	PrimaryExpression	"""upd_open_fscomp: could not allocate %d. updcomp\\n"""		4803151	0					
ANR	4803395	Argument	icomp		4803151	2					
ANR	4803396	Identifier	icomp		4803151	0					
ANR	4803397	ExpressionStatement	icomp = 0	3354:12:127587:127596	4803151	1	True				
ANR	4803398	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4803399	Identifier	icomp		4803151	0					
ANR	4803400	PrimaryExpression	0		4803151	1					
ANR	4803401	BreakStatement	break ;	3355:12:127610:127615	4803151	2	True				
ANR	4803402	IfStatement	if ( icomp )		4803151	7					
ANR	4803403	Condition	icomp	3360:6:127648:127652	4803151	0	True				
ANR	4803404	Identifier	icomp		4803151	0					
ANR	4803405	CompoundStatement		63:6:1983:1992	4803151	1					
ANR	4803406	IdentifierDeclStatement	uint need ;	3361:6:127663:127672	4803151	0	True				
ANR	4803407	IdentifierDecl	need		4803151	0					
ANR	4803408	IdentifierDeclType	uint		4803151	0					
ANR	4803409	Identifier	need		4803151	1					
ANR	4803410	ExpressionStatement	need = ( 2 + upd -> rwidth ) * upd -> ncomp	3363:6:127681:127719	4803151	1	True				
ANR	4803411	AssignmentExpression	need = ( 2 + upd -> rwidth ) * upd -> ncomp		4803151	0		=			
ANR	4803412	Identifier	need		4803151	0					
ANR	4803413	MultiplicativeExpression	( 2 + upd -> rwidth ) * upd -> ncomp		4803151	1		*			
ANR	4803414	AdditiveExpression	2 + upd -> rwidth		4803151	0		+			
ANR	4803415	PrimaryExpression	2		4803151	0					
ANR	4803416	PtrMemberAccess	upd -> rwidth		4803151	1					
ANR	4803417	Identifier	upd		4803151	0					
ANR	4803418	Identifier	rwidth		4803151	1					
ANR	4803419	PtrMemberAccess	upd -> ncomp		4803151	1					
ANR	4803420	Identifier	upd		4803151	0					
ANR	4803421	Identifier	ncomp		4803151	1					
ANR	4803422	ExpressionStatement	"upd -> valbuf = gs_malloc ( udev -> memory , need , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"	3364:6:127727:127806	4803151	2	True				
ANR	4803423	AssignmentExpression	"upd -> valbuf = gs_malloc ( udev -> memory , need , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"		4803151	0		=			
ANR	4803424	PtrMemberAccess	upd -> valbuf		4803151	0					
ANR	4803425	Identifier	upd		4803151	0					
ANR	4803426	Identifier	valbuf		4803151	1					
ANR	4803427	CallExpression	"gs_malloc ( udev -> memory , need , sizeof ( upd -> valbuf [ 0 ] ) , ""upd/valbuf"" )"		4803151	1					
ANR	4803428	Callee	gs_malloc		4803151	0					
ANR	4803429	Identifier	gs_malloc		4803151	0					
ANR	4803430	ArgumentList	udev -> memory		4803151	1					
ANR	4803431	Argument	udev -> memory		4803151	0					
ANR	4803432	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4803433	Identifier	udev		4803151	0					
ANR	4803434	Identifier	memory		4803151	1					
ANR	4803435	Argument	need		4803151	1					
ANR	4803436	Identifier	need		4803151	0					
ANR	4803437	Argument	sizeof ( upd -> valbuf [ 0 ] )		4803151	2					
ANR	4803438	SizeofExpression	sizeof ( upd -> valbuf [ 0 ] )		4803151	0					
ANR	4803439	Sizeof	sizeof		4803151	0					
ANR	4803440	ArrayIndexing	upd -> valbuf [ 0 ]		4803151	1					
ANR	4803441	PtrMemberAccess	upd -> valbuf		4803151	0					
ANR	4803442	Identifier	upd		4803151	0					
ANR	4803443	Identifier	valbuf		4803151	1					
ANR	4803444	PrimaryExpression	0		4803151	1					
ANR	4803445	Argument	"""upd/valbuf"""		4803151	3					
ANR	4803446	PrimaryExpression	"""upd/valbuf"""		4803151	0					
ANR	4803447	IfStatement	if ( upd -> valbuf )		4803151	3					
ANR	4803448	Condition	upd -> valbuf	3366:9:127818:127828	4803151	0	True				
ANR	4803449	PtrMemberAccess	upd -> valbuf		4803151	0					
ANR	4803450	Identifier	upd		4803151	0					
ANR	4803451	Identifier	valbuf		4803151	1					
ANR	4803452	CompoundStatement		68:22:2151:2151	4803151	1					
ANR	4803453	ExpressionStatement	upd -> nvalbuf = need	3367:9:127842:127861	4803151	0	True				
ANR	4803454	AssignmentExpression	upd -> nvalbuf = need		4803151	0		=			
ANR	4803455	PtrMemberAccess	upd -> nvalbuf		4803151	0					
ANR	4803456	Identifier	upd		4803151	0					
ANR	4803457	Identifier	nvalbuf		4803151	1					
ANR	4803458	Identifier	need		4803151	1					
ANR	4803459	ExpressionStatement	"memset ( upd -> valbuf , 0 , need * sizeof ( upd -> valbuf [ 0 ] ) )"	3368:9:127872:127921	4803151	1	True				
ANR	4803460	CallExpression	"memset ( upd -> valbuf , 0 , need * sizeof ( upd -> valbuf [ 0 ] ) )"		4803151	0					
ANR	4803461	Callee	memset		4803151	0					
ANR	4803462	Identifier	memset		4803151	0					
ANR	4803463	ArgumentList	upd -> valbuf		4803151	1					
ANR	4803464	Argument	upd -> valbuf		4803151	0					
ANR	4803465	PtrMemberAccess	upd -> valbuf		4803151	0					
ANR	4803466	Identifier	upd		4803151	0					
ANR	4803467	Identifier	valbuf		4803151	1					
ANR	4803468	Argument	0		4803151	1					
ANR	4803469	PrimaryExpression	0		4803151	0					
ANR	4803470	Argument	need * sizeof ( upd -> valbuf [ 0 ] )		4803151	2					
ANR	4803471	MultiplicativeExpression	need * sizeof ( upd -> valbuf [ 0 ] )		4803151	0		*			
ANR	4803472	Identifier	need		4803151	0					
ANR	4803473	SizeofExpression	sizeof ( upd -> valbuf [ 0 ] )		4803151	1					
ANR	4803474	Sizeof	sizeof		4803151	0					
ANR	4803475	ArrayIndexing	upd -> valbuf [ 0 ]		4803151	1					
ANR	4803476	PtrMemberAccess	upd -> valbuf		4803151	0					
ANR	4803477	Identifier	upd		4803151	0					
ANR	4803478	Identifier	valbuf		4803151	1					
ANR	4803479	PrimaryExpression	0		4803151	1					
ANR	4803480	ElseStatement	else		4803151	0					
ANR	4803481	CompoundStatement		71:13:2256:2256	4803151	0					
ANR	4803482	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_fscomp: could not allocate %u words for valbuf\\n"" , need )"	3371:9:127978:128106	4803151	0	True				
ANR	4803483	CallExpression	"errprintf ( udev -> memory , ""upd_open_fscomp: could not allocate %u words for valbuf\\n"" , need )"		4803151	0					
ANR	4803484	Callee	errprintf		4803151	0					
ANR	4803485	Identifier	errprintf		4803151	0					
ANR	4803486	ArgumentList	udev -> memory		4803151	1					
ANR	4803487	Argument	udev -> memory		4803151	0					
ANR	4803488	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4803489	Identifier	udev		4803151	0					
ANR	4803490	Identifier	memory		4803151	1					
ANR	4803491	Argument	"""upd_open_fscomp: could not allocate %u words for valbuf\\n"""		4803151	1					
ANR	4803492	PrimaryExpression	"""upd_open_fscomp: could not allocate %u words for valbuf\\n"""		4803151	0					
ANR	4803493	Argument	need		4803151	2					
ANR	4803494	Identifier	need		4803151	0					
ANR	4803495	ExpressionStatement	icomp = 0	3375:9:128124:128133	4803151	1	True				
ANR	4803496	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4803497	Identifier	icomp		4803151	0					
ANR	4803498	PrimaryExpression	0		4803151	1					
ANR	4803499	IfStatement	if ( icomp )		4803151	8					
ANR	4803500	Condition	icomp	3381:6:128205:128209	4803151	0	True				
ANR	4803501	Identifier	icomp		4803151	0					
ANR	4803502	CompoundStatement		83:13:2532:2532	4803151	1					
ANR	4803503	ForStatement	for ( icomp = 0 ; upd -> ncomp > icomp ; ++ icomp )		4803151	0					
ANR	4803504	ForInit	icomp = 0 ;	3382:10:128224:128233	4803151	0	True				
ANR	4803505	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4803506	Identifier	icomp		4803151	0					
ANR	4803507	PrimaryExpression	0		4803151	1					
ANR	4803508	Condition	upd -> ncomp > icomp	3382:21:128235:128252	4803151	1	True				
ANR	4803509	RelationalExpression	upd -> ncomp > icomp		4803151	0		>			
ANR	4803510	PtrMemberAccess	upd -> ncomp		4803151	0					
ANR	4803511	Identifier	upd		4803151	0					
ANR	4803512	Identifier	ncomp		4803151	1					
ANR	4803513	Identifier	icomp		4803151	1					
ANR	4803514	UnaryExpression	++ icomp	3382:41:128255:128261	4803151	2	True				
ANR	4803515	IncDec	++		4803151	0					
ANR	4803516	Identifier	icomp		4803151	1					
ANR	4803517	CompoundStatement		90:9:2778:2783	4803151	3					
ANR	4803518	IdentifierDeclStatement	const updcomp_p comp = upd -> valptr [ icomp ] ;	3384:9:128276:128319	4803151	0	True				
ANR	4803519	IdentifierDecl	comp = upd -> valptr [ icomp ]		4803151	0					
ANR	4803520	IdentifierDeclType	const updcomp_p		4803151	0					
ANR	4803521	Identifier	comp		4803151	1					
ANR	4803522	AssignmentExpression	comp = upd -> valptr [ icomp ]		4803151	2		=			
ANR	4803523	Identifier	comp		4803151	0					
ANR	4803524	ArrayIndexing	upd -> valptr [ icomp ]		4803151	1					
ANR	4803525	PtrMemberAccess	upd -> valptr		4803151	0					
ANR	4803526	Identifier	upd		4803151	0					
ANR	4803527	Identifier	valptr		4803151	1					
ANR	4803528	Identifier	icomp		4803151	1					
ANR	4803529	IdentifierDeclStatement	const int32_t nsteps = upd -> cmap [ order [ icomp ] ] . bitmsk ;	3385:9:128330:128387	4803151	1	True				
ANR	4803530	IdentifierDecl	nsteps = upd -> cmap [ order [ icomp ] ] . bitmsk		4803151	0					
ANR	4803531	IdentifierDeclType	const int32_t		4803151	0					
ANR	4803532	Identifier	nsteps		4803151	1					
ANR	4803533	AssignmentExpression	nsteps = upd -> cmap [ order [ icomp ] ] . bitmsk		4803151	2		=			
ANR	4803534	Identifier	nsteps		4803151	0					
ANR	4803535	MemberAccess	upd -> cmap [ order [ icomp ] ] . bitmsk		4803151	1					
ANR	4803536	ArrayIndexing	upd -> cmap [ order [ icomp ] ]		4803151	0					
ANR	4803537	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803538	Identifier	upd		4803151	0					
ANR	4803539	Identifier	cmap		4803151	1					
ANR	4803540	ArrayIndexing	order [ icomp ]		4803151	1					
ANR	4803541	Identifier	order		4803151	0					
ANR	4803542	Identifier	icomp		4803151	1					
ANR	4803543	Identifier	bitmsk		4803151	1					
ANR	4803544	IdentifierDeclStatement	"float ymin , ymax ;"	3386:9:128398:128413	4803151	2	True				
ANR	4803545	IdentifierDecl	ymin		4803151	0					
ANR	4803546	IdentifierDeclType	float		4803151	0					
ANR	4803547	Identifier	ymin		4803151	1					
ANR	4803548	IdentifierDecl	ymax		4803151	1					
ANR	4803549	IdentifierDeclType	float		4803151	0					
ANR	4803550	Identifier	ymax		4803151	1					
ANR	4803551	IdentifierDeclStatement	"int32_t highmod , highval ;"	3387:9:128424:128447	4803151	3	True				
ANR	4803552	IdentifierDecl	highmod		4803151	0					
ANR	4803553	IdentifierDeclType	int32_t		4803151	0					
ANR	4803554	Identifier	highmod		4803151	1					
ANR	4803555	IdentifierDecl	highval		4803151	1					
ANR	4803556	IdentifierDeclType	int32_t		4803151	0					
ANR	4803557	Identifier	highval		4803151	1					
ANR	4803558	IdentifierDeclStatement	int i ;	3388:9:128458:128463	4803151	4	True				
ANR	4803559	IdentifierDecl	i		4803151	0					
ANR	4803560	IdentifierDeclType	int		4803151	0					
ANR	4803561	Identifier	i		4803151	1					
ANR	4803562	ExpressionStatement	comp -> threshold = nsteps	3390:9:128475:128499	4803151	5	True				
ANR	4803563	AssignmentExpression	comp -> threshold = nsteps		4803151	0		=			
ANR	4803564	PtrMemberAccess	comp -> threshold		4803151	0					
ANR	4803565	Identifier	comp		4803151	0					
ANR	4803566	Identifier	threshold		4803151	1					
ANR	4803567	Identifier	nsteps		4803151	1					
ANR	4803568	ExpressionStatement	comp -> spotsize = nsteps	3391:9:128510:128534	4803151	6	True				
ANR	4803569	AssignmentExpression	comp -> spotsize = nsteps		4803151	0		=			
ANR	4803570	PtrMemberAccess	comp -> spotsize		4803151	0					
ANR	4803571	Identifier	comp		4803151	0					
ANR	4803572	Identifier	spotsize		4803151	1					
ANR	4803573	Identifier	nsteps		4803151	1					
ANR	4803574	ExpressionStatement	comp -> offset = 0	3392:9:128545:128564	4803151	7	True				
ANR	4803575	AssignmentExpression	comp -> offset = 0		4803151	0		=			
ANR	4803576	PtrMemberAccess	comp -> offset		4803151	0					
ANR	4803577	Identifier	comp		4803151	0					
ANR	4803578	Identifier	offset		4803151	1					
ANR	4803579	PrimaryExpression	0		4803151	1					
ANR	4803580	ExpressionStatement	comp -> scale = 1	3393:9:128575:128594	4803151	8	True				
ANR	4803581	AssignmentExpression	comp -> scale = 1		4803151	0		=			
ANR	4803582	PtrMemberAccess	comp -> scale		4803151	0					
ANR	4803583	Identifier	comp		4803151	0					
ANR	4803584	Identifier	scale		4803151	1					
ANR	4803585	PrimaryExpression	1		4803151	1					
ANR	4803586	ExpressionStatement	comp -> cmap = order [ icomp ]	3394:9:128605:128635	4803151	9	True				
ANR	4803587	AssignmentExpression	comp -> cmap = order [ icomp ]		4803151	0		=			
ANR	4803588	PtrMemberAccess	comp -> cmap		4803151	0					
ANR	4803589	Identifier	comp		4803151	0					
ANR	4803590	Identifier	cmap		4803151	1					
ANR	4803591	ArrayIndexing	order [ icomp ]		4803151	1					
ANR	4803592	Identifier	order		4803151	0					
ANR	4803593	Identifier	icomp		4803151	1					
ANR	4803594	ExpressionStatement	upd -> cmap [ comp -> cmap ] . comp = icomp	3395:9:128646:128680	4803151	10	True				
ANR	4803595	AssignmentExpression	upd -> cmap [ comp -> cmap ] . comp = icomp		4803151	0		=			
ANR	4803596	MemberAccess	upd -> cmap [ comp -> cmap ] . comp		4803151	0					
ANR	4803597	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803598	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803599	Identifier	upd		4803151	0					
ANR	4803600	Identifier	cmap		4803151	1					
ANR	4803601	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803602	Identifier	comp		4803151	0					
ANR	4803603	Identifier	cmap		4803151	1					
ANR	4803604	Identifier	comp		4803151	1					
ANR	4803605	Identifier	icomp		4803151	1					
ANR	4803606	ExpressionStatement	comp -> bits = upd -> cmap [ comp -> cmap ] . bits	3396:9:128691:128735	4803151	11	True				
ANR	4803607	AssignmentExpression	comp -> bits = upd -> cmap [ comp -> cmap ] . bits		4803151	0		=			
ANR	4803608	PtrMemberAccess	comp -> bits		4803151	0					
ANR	4803609	Identifier	comp		4803151	0					
ANR	4803610	Identifier	bits		4803151	1					
ANR	4803611	MemberAccess	upd -> cmap [ comp -> cmap ] . bits		4803151	1					
ANR	4803612	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803613	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803614	Identifier	upd		4803151	0					
ANR	4803615	Identifier	cmap		4803151	1					
ANR	4803616	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803617	Identifier	comp		4803151	0					
ANR	4803618	Identifier	cmap		4803151	1					
ANR	4803619	Identifier	bits		4803151	1					
ANR	4803620	ExpressionStatement	comp -> bitshf = upd -> cmap [ comp -> cmap ] . bitshf	3397:9:128746:128792	4803151	12	True				
ANR	4803621	AssignmentExpression	comp -> bitshf = upd -> cmap [ comp -> cmap ] . bitshf		4803151	0		=			
ANR	4803622	PtrMemberAccess	comp -> bitshf		4803151	0					
ANR	4803623	Identifier	comp		4803151	0					
ANR	4803624	Identifier	bitshf		4803151	1					
ANR	4803625	MemberAccess	upd -> cmap [ comp -> cmap ] . bitshf		4803151	1					
ANR	4803626	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803627	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803628	Identifier	upd		4803151	0					
ANR	4803629	Identifier	cmap		4803151	1					
ANR	4803630	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803631	Identifier	comp		4803151	0					
ANR	4803632	Identifier	cmap		4803151	1					
ANR	4803633	Identifier	bitshf		4803151	1					
ANR	4803634	ExpressionStatement	comp -> bitmsk = upd -> cmap [ comp -> cmap ] . bitmsk	3398:9:128803:128849	4803151	13	True				
ANR	4803635	AssignmentExpression	comp -> bitmsk = upd -> cmap [ comp -> cmap ] . bitmsk		4803151	0		=			
ANR	4803636	PtrMemberAccess	comp -> bitmsk		4803151	0					
ANR	4803637	Identifier	comp		4803151	0					
ANR	4803638	Identifier	bitmsk		4803151	1					
ANR	4803639	MemberAccess	upd -> cmap [ comp -> cmap ] . bitmsk		4803151	1					
ANR	4803640	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803641	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803642	Identifier	upd		4803151	0					
ANR	4803643	Identifier	cmap		4803151	1					
ANR	4803644	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803645	Identifier	comp		4803151	0					
ANR	4803646	Identifier	cmap		4803151	1					
ANR	4803647	Identifier	bitmsk		4803151	1					
ANR	4803648	IfStatement	if ( ! nsteps )		4803151	14					
ANR	4803649	Condition	! nsteps	3400:12:128864:128870	4803151	0	True				
ANR	4803650	UnaryOperationExpression	! nsteps		4803151	0					
ANR	4803651	UnaryOperator	!		4803151	0					
ANR	4803652	Identifier	nsteps		4803151	1					
ANR	4803653	ContinueStatement	continue ;	3400:21:128873:128881	4803151	1	True				
ANR	4803654	IfStatement	if ( upd -> cmap [ comp -> cmap ] . rise )		4803151	15					
ANR	4803655	Condition	upd -> cmap [ comp -> cmap ] . rise	3402:12:128930:128955	4803151	0	True				
ANR	4803656	MemberAccess	upd -> cmap [ comp -> cmap ] . rise		4803151	0					
ANR	4803657	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803658	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803659	Identifier	upd		4803151	0					
ANR	4803660	Identifier	cmap		4803151	1					
ANR	4803661	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803662	Identifier	comp		4803151	0					
ANR	4803663	Identifier	cmap		4803151	1					
ANR	4803664	Identifier	rise		4803151	1					
ANR	4803665	CompoundStatement		104:40:3278:3278	4803151	1					
ANR	4803666	ExpressionStatement	ymin = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]	3403:12:128972:129027	4803151	0	True				
ANR	4803667	AssignmentExpression	ymin = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]		4803151	0		=			
ANR	4803668	Identifier	ymin		4803151	0					
ANR	4803669	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]		4803151	1					
ANR	4803670	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		4803151	0					
ANR	4803671	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		4803151	0					
ANR	4803672	PtrMemberAccess	upd -> float_a		4803151	0					
ANR	4803673	Identifier	upd		4803151	0					
ANR	4803674	Identifier	float_a		4803151	1					
ANR	4803675	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		4803151	1					
ANR	4803676	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803677	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803678	Identifier	upd		4803151	0					
ANR	4803679	Identifier	cmap		4803151	1					
ANR	4803680	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803681	Identifier	comp		4803151	0					
ANR	4803682	Identifier	cmap		4803151	1					
ANR	4803683	Identifier	xfer		4803151	1					
ANR	4803684	Identifier	data		4803151	1					
ANR	4803685	PrimaryExpression	0		4803151	1					
ANR	4803686	ExpressionStatement	ymax = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]	3404:12:129041:129165	4803151	1	True				
ANR	4803687	AssignmentExpression	ymax = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]		4803151	0		=			
ANR	4803688	Identifier	ymax		4803151	0					
ANR	4803689	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]		4803151	1					
ANR	4803690	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		4803151	0					
ANR	4803691	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		4803151	0					
ANR	4803692	PtrMemberAccess	upd -> float_a		4803151	0					
ANR	4803693	Identifier	upd		4803151	0					
ANR	4803694	Identifier	float_a		4803151	1					
ANR	4803695	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		4803151	1					
ANR	4803696	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803697	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803698	Identifier	upd		4803151	0					
ANR	4803699	Identifier	cmap		4803151	1					
ANR	4803700	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803701	Identifier	comp		4803151	0					
ANR	4803702	Identifier	cmap		4803151	1					
ANR	4803703	Identifier	xfer		4803151	1					
ANR	4803704	Identifier	data		4803151	1					
ANR	4803705	AdditiveExpression	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1		4803151	1		-			
ANR	4803706	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		4803151	0					
ANR	4803707	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		4803151	0					
ANR	4803708	PtrMemberAccess	upd -> float_a		4803151	0					
ANR	4803709	Identifier	upd		4803151	0					
ANR	4803710	Identifier	float_a		4803151	1					
ANR	4803711	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		4803151	1					
ANR	4803712	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803713	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803714	Identifier	upd		4803151	0					
ANR	4803715	Identifier	cmap		4803151	1					
ANR	4803716	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803717	Identifier	comp		4803151	0					
ANR	4803718	Identifier	cmap		4803151	1					
ANR	4803719	Identifier	xfer		4803151	1					
ANR	4803720	Identifier	size		4803151	1					
ANR	4803721	PrimaryExpression	1		4803151	1					
ANR	4803722	ElseStatement	else		4803151	0					
ANR	4803723	CompoundStatement		108:16:3503:3503	4803151	0					
ANR	4803724	ExpressionStatement	ymax = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]	3407:12:129197:129252	4803151	0	True				
ANR	4803725	AssignmentExpression	ymax = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]		4803151	0		=			
ANR	4803726	Identifier	ymax		4803151	0					
ANR	4803727	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ 0 ]		4803151	1					
ANR	4803728	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		4803151	0					
ANR	4803729	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		4803151	0					
ANR	4803730	PtrMemberAccess	upd -> float_a		4803151	0					
ANR	4803731	Identifier	upd		4803151	0					
ANR	4803732	Identifier	float_a		4803151	1					
ANR	4803733	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		4803151	1					
ANR	4803734	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803735	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803736	Identifier	upd		4803151	0					
ANR	4803737	Identifier	cmap		4803151	1					
ANR	4803738	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803739	Identifier	comp		4803151	0					
ANR	4803740	Identifier	cmap		4803151	1					
ANR	4803741	Identifier	xfer		4803151	1					
ANR	4803742	Identifier	data		4803151	1					
ANR	4803743	PrimaryExpression	0		4803151	1					
ANR	4803744	ExpressionStatement	ymin = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]	3408:12:129266:129390	4803151	1	True				
ANR	4803745	AssignmentExpression	ymin = upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]		4803151	0		=			
ANR	4803746	Identifier	ymin		4803151	0					
ANR	4803747	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data [ upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1 ]		4803151	1					
ANR	4803748	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		4803151	0					
ANR	4803749	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		4803151	0					
ANR	4803750	PtrMemberAccess	upd -> float_a		4803151	0					
ANR	4803751	Identifier	upd		4803151	0					
ANR	4803752	Identifier	float_a		4803151	1					
ANR	4803753	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		4803151	1					
ANR	4803754	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803755	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803756	Identifier	upd		4803151	0					
ANR	4803757	Identifier	cmap		4803151	1					
ANR	4803758	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803759	Identifier	comp		4803151	0					
ANR	4803760	Identifier	cmap		4803151	1					
ANR	4803761	Identifier	xfer		4803151	1					
ANR	4803762	Identifier	data		4803151	1					
ANR	4803763	AdditiveExpression	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size - 1		4803151	1		-			
ANR	4803764	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		4803151	0					
ANR	4803765	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		4803151	0					
ANR	4803766	PtrMemberAccess	upd -> float_a		4803151	0					
ANR	4803767	Identifier	upd		4803151	0					
ANR	4803768	Identifier	float_a		4803151	1					
ANR	4803769	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		4803151	1					
ANR	4803770	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803771	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803772	Identifier	upd		4803151	0					
ANR	4803773	Identifier	cmap		4803151	1					
ANR	4803774	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4803775	Identifier	comp		4803151	0					
ANR	4803776	Identifier	cmap		4803151	1					
ANR	4803777	Identifier	xfer		4803151	1					
ANR	4803778	Identifier	size		4803151	1					
ANR	4803779	PrimaryExpression	1		4803151	1					
ANR	4803780	IfStatement	if ( 0.0 > ymin )		4803151	16					
ANR	4803781	Condition	0.0 > ymin	3412:12:129416:129425	4803151	0	True				
ANR	4803782	RelationalExpression	0.0 > ymin		4803151	0		>			
ANR	4803783	PrimaryExpression	0.0		4803151	0					
ANR	4803784	Identifier	ymin		4803151	1					
ANR	4803785	CompoundStatement		114:24:3748:3748	4803151	1					
ANR	4803786	ExpressionStatement	ymin = 0.0	3413:12:129442:129452	4803151	0	True				
ANR	4803787	AssignmentExpression	ymin = 0.0		4803151	0		=			
ANR	4803788	Identifier	ymin		4803151	0					
ANR	4803789	PrimaryExpression	0.0		4803151	1					
ANR	4803790	IfStatement	if ( 0.0 > ymax )		4803151	1					
ANR	4803791	Condition	0.0 > ymax	3414:15:129469:129478	4803151	0	True				
ANR	4803792	RelationalExpression	0.0 > ymax		4803151	0		>			
ANR	4803793	PrimaryExpression	0.0		4803151	0					
ANR	4803794	Identifier	ymax		4803151	1					
ANR	4803795	ExpressionStatement	ymax = 1.0 / ( float ) ( nsteps + 1 )	3414:27:129481:129512	4803151	1	True				
ANR	4803796	AssignmentExpression	ymax = 1.0 / ( float ) ( nsteps + 1 )		4803151	0		=			
ANR	4803797	Identifier	ymax		4803151	0					
ANR	4803798	MultiplicativeExpression	1.0 / ( float ) ( nsteps + 1 )		4803151	1		/			
ANR	4803799	PrimaryExpression	1.0		4803151	0					
ANR	4803800	CastExpression	( float ) ( nsteps + 1 )		4803151	1					
ANR	4803801	CastTarget	float		4803151	0					
ANR	4803802	AdditiveExpression	nsteps + 1		4803151	1		+			
ANR	4803803	Identifier	nsteps		4803151	0					
ANR	4803804	PrimaryExpression	1		4803151	1					
ANR	4803805	IfStatement	if ( 1.0 < ymax )		4803151	17					
ANR	4803806	Condition	1.0 < ymax	3416:12:129537:129546	4803151	0	True				
ANR	4803807	RelationalExpression	1.0 < ymax		4803151	0		<			
ANR	4803808	PrimaryExpression	1.0		4803151	0					
ANR	4803809	Identifier	ymax		4803151	1					
ANR	4803810	ExpressionStatement	ymax = 1.0	3416:24:129549:129559	4803151	1	True				
ANR	4803811	AssignmentExpression	ymax = 1.0		4803151	0		=			
ANR	4803812	Identifier	ymax		4803151	0					
ANR	4803813	PrimaryExpression	1.0		4803151	1					
ANR	4803814	ExpressionStatement	comp -> spotsize = ( ( int32_t ) 1 << 28 ) - 1	3418:9:129571:129611	4803151	18	True				
ANR	4803815	AssignmentExpression	comp -> spotsize = ( ( int32_t ) 1 << 28 ) - 1		4803151	0		=			
ANR	4803816	PtrMemberAccess	comp -> spotsize		4803151	0					
ANR	4803817	Identifier	comp		4803151	0					
ANR	4803818	Identifier	spotsize		4803151	1					
ANR	4803819	AdditiveExpression	( ( int32_t ) 1 << 28 ) - 1		4803151	1		-			
ANR	4803820	ShiftExpression	( int32_t ) 1 << 28		4803151	0		<<			
ANR	4803821	CastExpression	( int32_t ) 1		4803151	0					
ANR	4803822	CastTarget	int32_t		4803151	0					
ANR	4803823	PrimaryExpression	1		4803151	1					
ANR	4803824	PrimaryExpression	28		4803151	1					
ANR	4803825	PrimaryExpression	1		4803151	1					
ANR	4803826	ForStatement	for ( i = 0 ; i < 32 ; ++ i )		4803151	19					
ANR	4803827	ForInit	i = 0 ;	3420:13:129627:129632	4803151	0	True				
ANR	4803828	AssignmentExpression	i = 0		4803151	0		=			
ANR	4803829	Identifier	i		4803151	0					
ANR	4803830	PrimaryExpression	0		4803151	1					
ANR	4803831	Condition	i < 32	3420:20:129634:129639	4803151	1	True				
ANR	4803832	RelationalExpression	i < 32		4803151	0		<			
ANR	4803833	Identifier	i		4803151	0					
ANR	4803834	PrimaryExpression	32		4803151	1					
ANR	4803835	UnaryExpression	++ i	3420:28:129642:129644	4803151	2	True				
ANR	4803836	IncDec	++		4803151	0					
ANR	4803837	Identifier	i		4803151	1					
ANR	4803838	CompoundStatement		122:33:3967:3967	4803151	3					
ANR	4803839	ExpressionStatement	highval = ( int32_t ) ( ( ymax - ymin ) * ( double ) comp -> spotsize + 0.5 )	3422:12:129682:129746	4803151	0	True				
ANR	4803840	AssignmentExpression	highval = ( int32_t ) ( ( ymax - ymin ) * ( double ) comp -> spotsize + 0.5 )		4803151	0		=			
ANR	4803841	Identifier	highval		4803151	0					
ANR	4803842	CastExpression	( int32_t ) ( ( ymax - ymin ) * ( double ) comp -> spotsize + 0.5 )		4803151	1					
ANR	4803843	CastTarget	int32_t		4803151	0					
ANR	4803844	AdditiveExpression	( ymax - ymin ) * ( double ) comp -> spotsize + 0.5		4803151	1		+			
ANR	4803845	MultiplicativeExpression	( ymax - ymin ) * ( double ) comp -> spotsize		4803151	0		*			
ANR	4803846	AdditiveExpression	ymax - ymin		4803151	0		-			
ANR	4803847	Identifier	ymax		4803151	0					
ANR	4803848	Identifier	ymin		4803151	1					
ANR	4803849	CastExpression	( double ) comp -> spotsize		4803151	1					
ANR	4803850	CastTarget	double		4803151	0					
ANR	4803851	PtrMemberAccess	comp -> spotsize		4803151	1					
ANR	4803852	Identifier	comp		4803151	0					
ANR	4803853	Identifier	spotsize		4803151	1					
ANR	4803854	PrimaryExpression	0.5		4803151	1					
ANR	4803855	IfStatement	if ( ! ( highmod = highval % nsteps ) )		4803151	1					
ANR	4803856	Condition	! ( highmod = highval % nsteps )	3424:15:129764:129792	4803151	0	True				
ANR	4803857	UnaryOperationExpression	! ( highmod = highval % nsteps )		4803151	0					
ANR	4803858	UnaryOperator	!		4803151	0					
ANR	4803859	AssignmentExpression	highmod = highval % nsteps		4803151	1		=			
ANR	4803860	Identifier	highmod		4803151	0					
ANR	4803861	MultiplicativeExpression	highval % nsteps		4803151	1		%			
ANR	4803862	Identifier	highval		4803151	0					
ANR	4803863	Identifier	nsteps		4803151	1					
ANR	4803864	BreakStatement	break ;	3424:46:129795:129800	4803151	1	True				
ANR	4803865	ExpressionStatement	highval += nsteps - highmod	3426:12:129828:129855	4803151	2	True				
ANR	4803866	AssignmentExpression	highval += nsteps - highmod		4803151	0		+=			
ANR	4803867	Identifier	highval		4803151	0					
ANR	4803868	AdditiveExpression	nsteps - highmod		4803151	1		-			
ANR	4803869	Identifier	nsteps		4803151	0					
ANR	4803870	Identifier	highmod		4803151	1					
ANR	4803871	ExpressionStatement	comp -> spotsize = ( int32_t ) ( ( double ) highval / ( ymax - ymin ) + 0.5 )	3427:12:129869:129933	4803151	3	True				
ANR	4803872	AssignmentExpression	comp -> spotsize = ( int32_t ) ( ( double ) highval / ( ymax - ymin ) + 0.5 )		4803151	0		=			
ANR	4803873	PtrMemberAccess	comp -> spotsize		4803151	0					
ANR	4803874	Identifier	comp		4803151	0					
ANR	4803875	Identifier	spotsize		4803151	1					
ANR	4803876	CastExpression	( int32_t ) ( ( double ) highval / ( ymax - ymin ) + 0.5 )		4803151	1					
ANR	4803877	CastTarget	int32_t		4803151	0					
ANR	4803878	AdditiveExpression	( double ) highval / ( ymax - ymin ) + 0.5		4803151	1		+			
ANR	4803879	MultiplicativeExpression	( double ) highval / ( ymax - ymin )		4803151	0		/			
ANR	4803880	CastExpression	( double ) highval		4803151	0					
ANR	4803881	CastTarget	double		4803151	0					
ANR	4803882	Identifier	highval		4803151	1					
ANR	4803883	AdditiveExpression	ymax - ymin		4803151	1		-			
ANR	4803884	Identifier	ymax		4803151	0					
ANR	4803885	Identifier	ymin		4803151	1					
ANR	4803886	PrimaryExpression	0.5		4803151	1					
ANR	4803887	IfStatement	if ( ! ( comp -> spotsize % 2 ) )		4803151	4					
ANR	4803888	Condition	! ( comp -> spotsize % 2 )	3429:15:129951:129971	4803151	0	True				
ANR	4803889	UnaryOperationExpression	! ( comp -> spotsize % 2 )		4803151	0					
ANR	4803890	UnaryOperator	!		4803151	0					
ANR	4803891	MultiplicativeExpression	comp -> spotsize % 2		4803151	1		%			
ANR	4803892	PtrMemberAccess	comp -> spotsize		4803151	0					
ANR	4803893	Identifier	comp		4803151	0					
ANR	4803894	Identifier	spotsize		4803151	1					
ANR	4803895	PrimaryExpression	2		4803151	1					
ANR	4803896	ExpressionStatement	comp -> spotsize ++	3429:38:129974:129990	4803151	1	True				
ANR	4803897	PostIncDecOperationExpression	comp -> spotsize ++		4803151	0					
ANR	4803898	PtrMemberAccess	comp -> spotsize		4803151	0					
ANR	4803899	Identifier	comp		4803151	0					
ANR	4803900	Identifier	spotsize		4803151	1					
ANR	4803901	IncDec	++		4803151	1					
ANR	4803902	ExpressionStatement	comp -> offset = ( int32_t ) ( ymin * ( double ) comp -> spotsize + ( double ) 0.5 )	3433:9:130058:130132	4803151	20	True				
ANR	4803903	AssignmentExpression	comp -> offset = ( int32_t ) ( ymin * ( double ) comp -> spotsize + ( double ) 0.5 )		4803151	0		=			
ANR	4803904	PtrMemberAccess	comp -> offset		4803151	0					
ANR	4803905	Identifier	comp		4803151	0					
ANR	4803906	Identifier	offset		4803151	1					
ANR	4803907	CastExpression	( int32_t ) ( ymin * ( double ) comp -> spotsize + ( double ) 0.5 )		4803151	1					
ANR	4803908	CastTarget	int32_t		4803151	0					
ANR	4803909	AdditiveExpression	ymin * ( double ) comp -> spotsize + ( double ) 0.5		4803151	1		+			
ANR	4803910	MultiplicativeExpression	ymin * ( double ) comp -> spotsize		4803151	0		*			
ANR	4803911	Identifier	ymin		4803151	0					
ANR	4803912	CastExpression	( double ) comp -> spotsize		4803151	1					
ANR	4803913	CastTarget	double		4803151	0					
ANR	4803914	PtrMemberAccess	comp -> spotsize		4803151	1					
ANR	4803915	Identifier	comp		4803151	0					
ANR	4803916	Identifier	spotsize		4803151	1					
ANR	4803917	CastExpression	( double ) 0.5		4803151	1					
ANR	4803918	CastTarget	double		4803151	0					
ANR	4803919	PrimaryExpression	0.5		4803151	1					
ANR	4803920	ExpressionStatement	comp -> scale = highval / nsteps	3434:9:130143:130177	4803151	21	True				
ANR	4803921	AssignmentExpression	comp -> scale = highval / nsteps		4803151	0		=			
ANR	4803922	PtrMemberAccess	comp -> scale		4803151	0					
ANR	4803923	Identifier	comp		4803151	0					
ANR	4803924	Identifier	scale		4803151	1					
ANR	4803925	MultiplicativeExpression	highval / nsteps		4803151	1		/			
ANR	4803926	Identifier	highval		4803151	0					
ANR	4803927	Identifier	nsteps		4803151	1					
ANR	4803928	ExpressionStatement	comp -> threshold = comp -> spotsize / 2	3435:9:130188:130224	4803151	22	True				
ANR	4803929	AssignmentExpression	comp -> threshold = comp -> spotsize / 2		4803151	0		=			
ANR	4803930	PtrMemberAccess	comp -> threshold		4803151	0					
ANR	4803931	Identifier	comp		4803151	0					
ANR	4803932	Identifier	threshold		4803151	1					
ANR	4803933	MultiplicativeExpression	comp -> spotsize / 2		4803151	1		/			
ANR	4803934	PtrMemberAccess	comp -> spotsize		4803151	0					
ANR	4803935	Identifier	comp		4803151	0					
ANR	4803936	Identifier	spotsize		4803151	1					
ANR	4803937	PrimaryExpression	2		4803151	1					
ANR	4803938	ExpressionStatement	"errprintf ( udev -> memory , ""Values for %d. Component after %d iterations\\n"" , comp -> cmap + 1 , i )"	3438:9:130267:130368	4803151	23	True				
ANR	4803939	CallExpression	"errprintf ( udev -> memory , ""Values for %d. Component after %d iterations\\n"" , comp -> cmap + 1 , i )"		4803151	0					
ANR	4803940	Callee	errprintf		4803151	0					
ANR	4803941	Identifier	errprintf		4803151	0					
ANR	4803942	ArgumentList	udev -> memory		4803151	1					
ANR	4803943	Argument	udev -> memory		4803151	0					
ANR	4803944	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4803945	Identifier	udev		4803151	0					
ANR	4803946	Identifier	memory		4803151	1					
ANR	4803947	Argument	"""Values for %d. Component after %d iterations\\n"""		4803151	1					
ANR	4803948	PrimaryExpression	"""Values for %d. Component after %d iterations\\n"""		4803151	0					
ANR	4803949	Argument	comp -> cmap + 1		4803151	2					
ANR	4803950	AdditiveExpression	comp -> cmap + 1		4803151	0		+			
ANR	4803951	PtrMemberAccess	comp -> cmap		4803151	0					
ANR	4803952	Identifier	comp		4803151	0					
ANR	4803953	Identifier	cmap		4803151	1					
ANR	4803954	PrimaryExpression	1		4803151	1					
ANR	4803955	Argument	i		4803151	3					
ANR	4803956	Identifier	i		4803151	0					
ANR	4803957	ExpressionStatement	"errprintf ( udev -> memory , ""steps:     %10ld, Bits: %d\\n"" , ( long ) comp -> bitmsk , comp -> bits )"	3440:9:130379:130478	4803151	24	True				
ANR	4803958	CallExpression	"errprintf ( udev -> memory , ""steps:     %10ld, Bits: %d\\n"" , ( long ) comp -> bitmsk , comp -> bits )"		4803151	0					
ANR	4803959	Callee	errprintf		4803151	0					
ANR	4803960	Identifier	errprintf		4803151	0					
ANR	4803961	ArgumentList	udev -> memory		4803151	1					
ANR	4803962	Argument	udev -> memory		4803151	0					
ANR	4803963	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4803964	Identifier	udev		4803151	0					
ANR	4803965	Identifier	memory		4803151	1					
ANR	4803966	Argument	"""steps:     %10ld, Bits: %d\\n"""		4803151	1					
ANR	4803967	PrimaryExpression	"""steps:     %10ld, Bits: %d\\n"""		4803151	0					
ANR	4803968	Argument	( long ) comp -> bitmsk		4803151	2					
ANR	4803969	CastExpression	( long ) comp -> bitmsk		4803151	0					
ANR	4803970	CastTarget	long		4803151	0					
ANR	4803971	PtrMemberAccess	comp -> bitmsk		4803151	1					
ANR	4803972	Identifier	comp		4803151	0					
ANR	4803973	Identifier	bitmsk		4803151	1					
ANR	4803974	Argument	comp -> bits		4803151	3					
ANR	4803975	PtrMemberAccess	comp -> bits		4803151	0					
ANR	4803976	Identifier	comp		4803151	0					
ANR	4803977	Identifier	bits		4803151	1					
ANR	4803978	ExpressionStatement	"errprintf ( udev -> memory , ""xfer:      %10d Points, %s\\n"" , upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size , upd -> cmap [ comp -> cmap ] . rise ? ""rising"" : ""falling"" )"	3442:9:130489:130681	4803151	25	True				
ANR	4803979	CallExpression	"errprintf ( udev -> memory , ""xfer:      %10d Points, %s\\n"" , upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size , upd -> cmap [ comp -> cmap ] . rise ? ""rising"" : ""falling"" )"		4803151	0					
ANR	4803980	Callee	errprintf		4803151	0					
ANR	4803981	Identifier	errprintf		4803151	0					
ANR	4803982	ArgumentList	udev -> memory		4803151	1					
ANR	4803983	Argument	udev -> memory		4803151	0					
ANR	4803984	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4803985	Identifier	udev		4803151	0					
ANR	4803986	Identifier	memory		4803151	1					
ANR	4803987	Argument	"""xfer:      %10d Points, %s\\n"""		4803151	1					
ANR	4803988	PrimaryExpression	"""xfer:      %10d Points, %s\\n"""		4803151	0					
ANR	4803989	Argument	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		4803151	2					
ANR	4803990	MemberAccess	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		4803151	0					
ANR	4803991	ArrayIndexing	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ]		4803151	0					
ANR	4803992	PtrMemberAccess	upd -> float_a		4803151	0					
ANR	4803993	Identifier	upd		4803151	0					
ANR	4803994	Identifier	float_a		4803151	1					
ANR	4803995	MemberAccess	upd -> cmap [ comp -> cmap ] . xfer		4803151	1					
ANR	4803996	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4803997	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4803998	Identifier	upd		4803151	0					
ANR	4803999	Identifier	cmap		4803151	1					
ANR	4804000	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4804001	Identifier	comp		4803151	0					
ANR	4804002	Identifier	cmap		4803151	1					
ANR	4804003	Identifier	xfer		4803151	1					
ANR	4804004	Identifier	size		4803151	1					
ANR	4804005	Argument	"upd -> cmap [ comp -> cmap ] . rise ? ""rising"" : ""falling"""		4803151	3					
ANR	4804006	ConditionalExpression	"upd -> cmap [ comp -> cmap ] . rise ? ""rising"" : ""falling"""		4803151	0					
ANR	4804007	Condition	upd -> cmap [ comp -> cmap ] . rise		4803151	0					
ANR	4804008	MemberAccess	upd -> cmap [ comp -> cmap ] . rise		4803151	0					
ANR	4804009	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4803151	0					
ANR	4804010	PtrMemberAccess	upd -> cmap		4803151	0					
ANR	4804011	Identifier	upd		4803151	0					
ANR	4804012	Identifier	cmap		4803151	1					
ANR	4804013	PtrMemberAccess	comp -> cmap		4803151	1					
ANR	4804014	Identifier	comp		4803151	0					
ANR	4804015	Identifier	cmap		4803151	1					
ANR	4804016	Identifier	rise		4803151	1					
ANR	4804017	PrimaryExpression	"""rising"""		4803151	1					
ANR	4804018	PrimaryExpression	"""falling"""		4803151	2					
ANR	4804019	ExpressionStatement	"errprintf ( udev -> memory , ""offset:    %10d 0x%08x\\n"" , comp -> offset , comp -> offset )"	3446:9:130692:130782	4803151	26	True				
ANR	4804020	CallExpression	"errprintf ( udev -> memory , ""offset:    %10d 0x%08x\\n"" , comp -> offset , comp -> offset )"		4803151	0					
ANR	4804021	Callee	errprintf		4803151	0					
ANR	4804022	Identifier	errprintf		4803151	0					
ANR	4804023	ArgumentList	udev -> memory		4803151	1					
ANR	4804024	Argument	udev -> memory		4803151	0					
ANR	4804025	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4804026	Identifier	udev		4803151	0					
ANR	4804027	Identifier	memory		4803151	1					
ANR	4804028	Argument	"""offset:    %10d 0x%08x\\n"""		4803151	1					
ANR	4804029	PrimaryExpression	"""offset:    %10d 0x%08x\\n"""		4803151	0					
ANR	4804030	Argument	comp -> offset		4803151	2					
ANR	4804031	PtrMemberAccess	comp -> offset		4803151	0					
ANR	4804032	Identifier	comp		4803151	0					
ANR	4804033	Identifier	offset		4803151	1					
ANR	4804034	Argument	comp -> offset		4803151	3					
ANR	4804035	PtrMemberAccess	comp -> offset		4803151	0					
ANR	4804036	Identifier	comp		4803151	0					
ANR	4804037	Identifier	offset		4803151	1					
ANR	4804038	ExpressionStatement	"errprintf ( udev -> memory , ""scale:     %10d 0x%08x\\n"" , comp -> scale , comp -> scale )"	3448:9:130793:130881	4803151	27	True				
ANR	4804039	CallExpression	"errprintf ( udev -> memory , ""scale:     %10d 0x%08x\\n"" , comp -> scale , comp -> scale )"		4803151	0					
ANR	4804040	Callee	errprintf		4803151	0					
ANR	4804041	Identifier	errprintf		4803151	0					
ANR	4804042	ArgumentList	udev -> memory		4803151	1					
ANR	4804043	Argument	udev -> memory		4803151	0					
ANR	4804044	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4804045	Identifier	udev		4803151	0					
ANR	4804046	Identifier	memory		4803151	1					
ANR	4804047	Argument	"""scale:     %10d 0x%08x\\n"""		4803151	1					
ANR	4804048	PrimaryExpression	"""scale:     %10d 0x%08x\\n"""		4803151	0					
ANR	4804049	Argument	comp -> scale		4803151	2					
ANR	4804050	PtrMemberAccess	comp -> scale		4803151	0					
ANR	4804051	Identifier	comp		4803151	0					
ANR	4804052	Identifier	scale		4803151	1					
ANR	4804053	Argument	comp -> scale		4803151	3					
ANR	4804054	PtrMemberAccess	comp -> scale		4803151	0					
ANR	4804055	Identifier	comp		4803151	0					
ANR	4804056	Identifier	scale		4803151	1					
ANR	4804057	ExpressionStatement	"errprintf ( udev -> memory , ""threshold: %10d 0x%08x\\n"" , comp -> threshold , comp -> threshold )"	3450:9:130892:130988	4803151	28	True				
ANR	4804058	CallExpression	"errprintf ( udev -> memory , ""threshold: %10d 0x%08x\\n"" , comp -> threshold , comp -> threshold )"		4803151	0					
ANR	4804059	Callee	errprintf		4803151	0					
ANR	4804060	Identifier	errprintf		4803151	0					
ANR	4804061	ArgumentList	udev -> memory		4803151	1					
ANR	4804062	Argument	udev -> memory		4803151	0					
ANR	4804063	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4804064	Identifier	udev		4803151	0					
ANR	4804065	Identifier	memory		4803151	1					
ANR	4804066	Argument	"""threshold: %10d 0x%08x\\n"""		4803151	1					
ANR	4804067	PrimaryExpression	"""threshold: %10d 0x%08x\\n"""		4803151	0					
ANR	4804068	Argument	comp -> threshold		4803151	2					
ANR	4804069	PtrMemberAccess	comp -> threshold		4803151	0					
ANR	4804070	Identifier	comp		4803151	0					
ANR	4804071	Identifier	threshold		4803151	1					
ANR	4804072	Argument	comp -> threshold		4803151	3					
ANR	4804073	PtrMemberAccess	comp -> threshold		4803151	0					
ANR	4804074	Identifier	comp		4803151	0					
ANR	4804075	Identifier	threshold		4803151	1					
ANR	4804076	ExpressionStatement	"errprintf ( udev -> memory , ""spotsize:  %10d 0x%08x\\n"" , comp -> spotsize , comp -> spotsize )"	3452:9:130999:131093	4803151	29	True				
ANR	4804077	CallExpression	"errprintf ( udev -> memory , ""spotsize:  %10d 0x%08x\\n"" , comp -> spotsize , comp -> spotsize )"		4803151	0					
ANR	4804078	Callee	errprintf		4803151	0					
ANR	4804079	Identifier	errprintf		4803151	0					
ANR	4804080	ArgumentList	udev -> memory		4803151	1					
ANR	4804081	Argument	udev -> memory		4803151	0					
ANR	4804082	PtrMemberAccess	udev -> memory		4803151	0					
ANR	4804083	Identifier	udev		4803151	0					
ANR	4804084	Identifier	memory		4803151	1					
ANR	4804085	Argument	"""spotsize:  %10d 0x%08x\\n"""		4803151	1					
ANR	4804086	PrimaryExpression	"""spotsize:  %10d 0x%08x\\n"""		4803151	0					
ANR	4804087	Argument	comp -> spotsize		4803151	2					
ANR	4804088	PtrMemberAccess	comp -> spotsize		4803151	0					
ANR	4804089	Identifier	comp		4803151	0					
ANR	4804090	Identifier	spotsize		4803151	1					
ANR	4804091	Argument	comp -> spotsize		4803151	3					
ANR	4804092	PtrMemberAccess	comp -> spotsize		4803151	0					
ANR	4804093	Identifier	comp		4803151	0					
ANR	4804094	Identifier	spotsize		4803151	1					
ANR	4804095	IfStatement	if ( icomp && ! ( B_FSZERO & upd -> flags ) )		4803151	9					
ANR	4804096	Condition	icomp && ! ( B_FSZERO & upd -> flags )	3460:6:131179:131211	4803151	0	True				
ANR	4804097	AndExpression	icomp && ! ( B_FSZERO & upd -> flags )		4803151	0		&&			
ANR	4804098	Identifier	icomp		4803151	0					
ANR	4804099	UnaryOperationExpression	! ( B_FSZERO & upd -> flags )		4803151	1					
ANR	4804100	UnaryOperator	!		4803151	0					
ANR	4804101	BitAndExpression	B_FSZERO & upd -> flags		4803151	1		&			
ANR	4804102	Identifier	B_FSZERO		4803151	0					
ANR	4804103	PtrMemberAccess	upd -> flags		4803151	1					
ANR	4804104	Identifier	upd		4803151	0					
ANR	4804105	Identifier	flags		4803151	1					
ANR	4804106	CompoundStatement		162:41:5534:5534	4803151	1					
ANR	4804107	ForStatement	for ( icomp = 0 ; icomp < upd -> ncomp ; ++ icomp )		4803151	0					
ANR	4804108	ForInit	icomp = 0 ;	3461:10:131226:131235	4803151	0	True				
ANR	4804109	AssignmentExpression	icomp = 0		4803151	0		=			
ANR	4804110	Identifier	icomp		4803151	0					
ANR	4804111	PrimaryExpression	0		4803151	1					
ANR	4804112	Condition	icomp < upd -> ncomp	3461:21:131237:131254	4803151	1	True				
ANR	4804113	RelationalExpression	icomp < upd -> ncomp		4803151	0		<			
ANR	4804114	Identifier	icomp		4803151	0					
ANR	4804115	PtrMemberAccess	upd -> ncomp		4803151	1					
ANR	4804116	Identifier	upd		4803151	0					
ANR	4804117	Identifier	ncomp		4803151	1					
ANR	4804118	UnaryExpression	++ icomp	3461:41:131257:131263	4803151	2	True				
ANR	4804119	IncDec	++		4803151	0					
ANR	4804120	Identifier	icomp		4803151	1					
ANR	4804121	CompoundStatement		167:9:5717:5728	4803151	3					
ANR	4804122	IdentifierDeclStatement	const updcomp_p comp = upd -> valptr [ icomp ] ;	3462:9:131277:131318	4803151	0	True				
ANR	4804123	IdentifierDecl	comp = upd -> valptr [ icomp ]		4803151	0					
ANR	4804124	IdentifierDeclType	const updcomp_p		4803151	0					
ANR	4804125	Identifier	comp		4803151	1					
ANR	4804126	AssignmentExpression	comp = upd -> valptr [ icomp ]		4803151	2		=			
ANR	4804127	Identifier	comp		4803151	0					
ANR	4804128	ArrayIndexing	upd -> valptr [ icomp ]		4803151	1					
ANR	4804129	PtrMemberAccess	upd -> valptr		4803151	0					
ANR	4804130	Identifier	upd		4803151	0					
ANR	4804131	Identifier	valptr		4803151	1					
ANR	4804132	Identifier	icomp		4803151	1					
ANR	4804133	IdentifierDeclStatement	int i ;	3463:9:131329:131334	4803151	1	True				
ANR	4804134	IdentifierDecl	i		4803151	0					
ANR	4804135	IdentifierDeclType	int		4803151	0					
ANR	4804136	Identifier	i		4803151	1					
ANR	4804137	IdentifierDeclStatement	"int32_t lv = INT32_MAX , hv = INT32_MIN , v ;"	3464:9:131345:131386	4803151	2	True				
ANR	4804138	IdentifierDecl	lv = INT32_MAX		4803151	0					
ANR	4804139	IdentifierDeclType	int32_t		4803151	0					
ANR	4804140	Identifier	lv		4803151	1					
ANR	4804141	AssignmentExpression	lv = INT32_MAX		4803151	2		=			
ANR	4804142	Identifier	INT32_MAX		4803151	0					
ANR	4804143	Identifier	INT32_MAX		4803151	1					
ANR	4804144	IdentifierDecl	hv = INT32_MIN		4803151	1					
ANR	4804145	IdentifierDeclType	int32_t		4803151	0					
ANR	4804146	Identifier	hv		4803151	1					
ANR	4804147	AssignmentExpression	hv = INT32_MIN		4803151	2		=			
ANR	4804148	Identifier	INT32_MIN		4803151	0					
ANR	4804149	Identifier	INT32_MIN		4803151	1					
ANR	4804150	IdentifierDecl	v		4803151	2					
ANR	4804151	IdentifierDeclType	int32_t		4803151	0					
ANR	4804152	Identifier	v		4803151	1					
ANR	4804153	IdentifierDeclStatement	float scale ;	3465:9:131397:131408	4803151	3	True				
ANR	4804154	IdentifierDecl	scale		4803151	0					
ANR	4804155	IdentifierDeclType	float		4803151	0					
ANR	4804156	Identifier	scale		4803151	1					
ANR	4804157	ForStatement	for ( i = icomp ; i < upd -> nvalbuf ; i += upd -> ncomp )		4803151	4					
ANR	4804158	ForInit	i = icomp ;	3466:13:131423:131432	4803151	0	True				
ANR	4804159	AssignmentExpression	i = icomp		4803151	0		=			
ANR	4804160	Identifier	i		4803151	0					
ANR	4804161	Identifier	icomp		4803151	1					
ANR	4804162	Condition	i < upd -> nvalbuf	3466:24:131434:131449	4803151	1	True				
ANR	4804163	RelationalExpression	i < upd -> nvalbuf		4803151	0		<			
ANR	4804164	Identifier	i		4803151	0					
ANR	4804165	PtrMemberAccess	upd -> nvalbuf		4803151	1					
ANR	4804166	Identifier	upd		4803151	0					
ANR	4804167	Identifier	nvalbuf		4803151	1					
ANR	4804168	AssignmentExpression	i += upd -> ncomp	3466:42:131452:131466	4803151	2	True	+=			
ANR	4804169	Identifier	i		4803151	0					
ANR	4804170	PtrMemberAccess	upd -> ncomp		4803151	1					
ANR	4804171	Identifier	upd		4803151	0					
ANR	4804172	Identifier	ncomp		4803151	1					
ANR	4804173	CompoundStatement		168:59:5789:5789	4803151	3					
ANR	4804174	ExpressionStatement	v = rand ( )	3467:12:131483:131493	4803151	0	True				
ANR	4804175	AssignmentExpression	v = rand ( )		4803151	0		=			
ANR	4804176	Identifier	v		4803151	0					
ANR	4804177	CallExpression	rand ( )		4803151	1					
ANR	4804178	Callee	rand		4803151	0					
ANR	4804179	Identifier	rand		4803151	0					
ANR	4804180	ArgumentList			4803151	1					
ANR	4804181	IfStatement	if ( lv > v )		4803151	1					
ANR	4804182	Condition	lv > v	3468:15:131510:131515	4803151	0	True				
ANR	4804183	RelationalExpression	lv > v		4803151	0		>			
ANR	4804184	Identifier	lv		4803151	0					
ANR	4804185	Identifier	v		4803151	1					
ANR	4804186	ExpressionStatement	lv = v	3468:23:131518:131524	4803151	1	True				
ANR	4804187	AssignmentExpression	lv = v		4803151	0		=			
ANR	4804188	Identifier	lv		4803151	0					
ANR	4804189	Identifier	v		4803151	1					
ANR	4804190	IfStatement	if ( hv < v )		4803151	2					
ANR	4804191	Condition	hv < v	3469:15:131541:131546	4803151	0	True				
ANR	4804192	RelationalExpression	hv < v		4803151	0		<			
ANR	4804193	Identifier	hv		4803151	0					
ANR	4804194	Identifier	v		4803151	1					
ANR	4804195	ExpressionStatement	hv = v	3469:23:131549:131555	4803151	1	True				
ANR	4804196	AssignmentExpression	hv = v		4803151	0		=			
ANR	4804197	Identifier	hv		4803151	0					
ANR	4804198	Identifier	v		4803151	1					
ANR	4804199	ExpressionStatement	upd -> valbuf [ i ] = v	3470:12:131569:131587	4803151	3	True				
ANR	4804200	AssignmentExpression	upd -> valbuf [ i ] = v		4803151	0		=			
ANR	4804201	ArrayIndexing	upd -> valbuf [ i ]		4803151	0					
ANR	4804202	PtrMemberAccess	upd -> valbuf		4803151	0					
ANR	4804203	Identifier	upd		4803151	0					
ANR	4804204	Identifier	valbuf		4803151	1					
ANR	4804205	Identifier	i		4803151	1					
ANR	4804206	Identifier	v		4803151	1					
ANR	4804207	ExpressionStatement	scale = ( float ) comp -> threshold / ( float ) ( hv - lv )	3472:9:131609:131660	4803151	5	True				
ANR	4804208	AssignmentExpression	scale = ( float ) comp -> threshold / ( float ) ( hv - lv )		4803151	0		=			
ANR	4804209	Identifier	scale		4803151	0					
ANR	4804210	MultiplicativeExpression	( float ) comp -> threshold / ( float ) ( hv - lv )		4803151	1		/			
ANR	4804211	CastExpression	( float ) comp -> threshold		4803151	0					
ANR	4804212	CastTarget	float		4803151	0					
ANR	4804213	PtrMemberAccess	comp -> threshold		4803151	1					
ANR	4804214	Identifier	comp		4803151	0					
ANR	4804215	Identifier	threshold		4803151	1					
ANR	4804216	CastExpression	( float ) ( hv - lv )		4803151	1					
ANR	4804217	CastTarget	float		4803151	0					
ANR	4804218	AdditiveExpression	hv - lv		4803151	1		-			
ANR	4804219	Identifier	hv		4803151	0					
ANR	4804220	Identifier	lv		4803151	1					
ANR	4804221	ExpressionStatement	lv += ( int32_t ) ( comp -> threshold / ( 2 * scale ) )	3473:9:131671:131717	4803151	6	True				
ANR	4804222	AssignmentExpression	lv += ( int32_t ) ( comp -> threshold / ( 2 * scale ) )		4803151	0		+=			
ANR	4804223	Identifier	lv		4803151	0					
ANR	4804224	CastExpression	( int32_t ) ( comp -> threshold / ( 2 * scale ) )		4803151	1					
ANR	4804225	CastTarget	int32_t		4803151	0					
ANR	4804226	MultiplicativeExpression	comp -> threshold / ( 2 * scale )		4803151	1		/			
ANR	4804227	PtrMemberAccess	comp -> threshold		4803151	0					
ANR	4804228	Identifier	comp		4803151	0					
ANR	4804229	Identifier	threshold		4803151	1					
ANR	4804230	MultiplicativeExpression	2 * scale		4803151	1		*			
ANR	4804231	PrimaryExpression	2		4803151	0					
ANR	4804232	Identifier	scale		4803151	1					
ANR	4804233	ForStatement	for ( i = icomp ; i < upd -> nvalbuf ; i += upd -> ncomp )		4803151	7					
ANR	4804234	ForInit	i = icomp ;	3474:13:131732:131741	4803151	0	True				
ANR	4804235	AssignmentExpression	i = icomp		4803151	0		=			
ANR	4804236	Identifier	i		4803151	0					
ANR	4804237	Identifier	icomp		4803151	1					
ANR	4804238	Condition	i < upd -> nvalbuf	3474:24:131743:131758	4803151	1	True				
ANR	4804239	RelationalExpression	i < upd -> nvalbuf		4803151	0		<			
ANR	4804240	Identifier	i		4803151	0					
ANR	4804241	PtrMemberAccess	upd -> nvalbuf		4803151	1					
ANR	4804242	Identifier	upd		4803151	0					
ANR	4804243	Identifier	nvalbuf		4803151	1					
ANR	4804244	AssignmentExpression	i += upd -> ncomp	3474:42:131761:131775	4803151	2	True	+=			
ANR	4804245	Identifier	i		4803151	0					
ANR	4804246	PtrMemberAccess	upd -> ncomp		4803151	1					
ANR	4804247	Identifier	upd		4803151	0					
ANR	4804248	Identifier	ncomp		4803151	1					
ANR	4804249	ExpressionStatement	upd -> valbuf [ i ] = ( int32_t ) ( scale * ( upd -> valbuf [ i ] - lv ) )	3475:12:131790:131847	4803151	3	True				
ANR	4804250	AssignmentExpression	upd -> valbuf [ i ] = ( int32_t ) ( scale * ( upd -> valbuf [ i ] - lv ) )		4803151	0		=			
ANR	4804251	ArrayIndexing	upd -> valbuf [ i ]		4803151	0					
ANR	4804252	PtrMemberAccess	upd -> valbuf		4803151	0					
ANR	4804253	Identifier	upd		4803151	0					
ANR	4804254	Identifier	valbuf		4803151	1					
ANR	4804255	Identifier	i		4803151	1					
ANR	4804256	CastExpression	( int32_t ) ( scale * ( upd -> valbuf [ i ] - lv ) )		4803151	1					
ANR	4804257	CastTarget	int32_t		4803151	0					
ANR	4804258	MultiplicativeExpression	scale * ( upd -> valbuf [ i ] - lv )		4803151	1		*			
ANR	4804259	Identifier	scale		4803151	0					
ANR	4804260	AdditiveExpression	upd -> valbuf [ i ] - lv		4803151	1		-			
ANR	4804261	ArrayIndexing	upd -> valbuf [ i ]		4803151	0					
ANR	4804262	PtrMemberAccess	upd -> valbuf		4803151	0					
ANR	4804263	Identifier	upd		4803151	0					
ANR	4804264	Identifier	valbuf		4803151	1					
ANR	4804265	Identifier	i		4803151	1					
ANR	4804266	Identifier	lv		4803151	1					
ANR	4804267	ExpressionStatement	upd -> render = upd_fscomp	3482:3:131944:131968	4803151	10	True				
ANR	4804268	AssignmentExpression	upd -> render = upd_fscomp		4803151	0		=			
ANR	4804269	PtrMemberAccess	upd -> render		4803151	0					
ANR	4804270	Identifier	upd		4803151	0					
ANR	4804271	Identifier	render		4803151	1					
ANR	4804272	Identifier	upd_fscomp		4803151	1					
ANR	4804273	IfStatement	if ( icomp )		4803151	11					
ANR	4804274	Condition	icomp	3484:6:131977:131981	4803151	0	True				
ANR	4804275	Identifier	icomp		4803151	0					
ANR	4804276	ExpressionStatement	upd -> flags |= B_RENDER	3484:13:131984:132007	4803151	1	True				
ANR	4804277	AssignmentExpression	upd -> flags |= B_RENDER		4803151	0		|=			
ANR	4804278	PtrMemberAccess	upd -> flags		4803151	0					
ANR	4804279	Identifier	upd		4803151	0					
ANR	4804280	Identifier	flags		4803151	1					
ANR	4804281	Identifier	B_RENDER		4803151	1					
ANR	4804282	ElseStatement	else		4803151	0					
ANR	4804283	ExpressionStatement	upd -> flags &= ~B_RENDER	3485:13:132022:132045	4803151	0	True				
ANR	4804284	AssignmentExpression	upd -> flags &= ~B_RENDER		4803151	0		&=			
ANR	4804285	PtrMemberAccess	upd -> flags		4803151	0					
ANR	4804286	Identifier	upd		4803151	0					
ANR	4804287	Identifier	flags		4803151	1					
ANR	4804288	Identifier	~B_RENDER		4803151	1					
ANR	4804289	ReturnStatement	return ;	3487:3:132051:132057	4803151	12	True				
ANR	4804290	ReturnType	static void		4803151	1					
ANR	4804291	Identifier	upd_open_fscomp		4803151	2					
ANR	4804292	ParameterList	upd_device * udev		4803151	3					
ANR	4804293	Parameter	upd_device * udev	3298:16:125661:125676	4803151	0	True				
ANR	4804294	ParameterType	upd_device *		4803151	0					
ANR	4804295	Identifier	udev		4803151	1					
ANR	4804296	CFGEntryNode	ENTRY		4803151		True				
ANR	4804297	CFGExitNode	EXIT		4803151		True				
ANR	4804298	Symbol	* upd -> int_a		4803151						
ANR	4804299	Symbol	ymin		4803151						
ANR	4804300	Symbol	* upd -> cmap [ comp -> cmap ] . xfer		4803151						
ANR	4804301	Symbol	upd -> int_a [ IA_COMPORDER ] . size		4803151						
ANR	4804302	Symbol	comp -> bitshf		4803151						
ANR	4804303	Symbol	icomp		4803151						
ANR	4804304	Symbol	hv		4803151						
ANR	4804305	Symbol	upd -> rwidth		4803151						
ANR	4804306	Symbol	* * upd -> cmap [ comp -> cmap ] . xfer		4803151						
ANR	4804307	Symbol	rand		4803151						
ANR	4804308	Symbol	comp -> offset		4803151						
ANR	4804309	Symbol	* udev		4803151						
ANR	4804310	Symbol	* upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		4803151						
ANR	4804311	Symbol	upd -> valptr		4803151						
ANR	4804312	Symbol	order		4803151						
ANR	4804313	Symbol	comp		4803151						
ANR	4804314	Symbol	* upd -> float_a		4803151						
ANR	4804315	Symbol	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . size		4803151						
ANR	4804316	Symbol	upd		4803151						
ANR	4804317	Symbol	* IA_COMPORDER		4803151						
ANR	4804318	Symbol	* * upd -> float_a		4803151						
ANR	4804319	Symbol	gs_malloc		4803151						
ANR	4804320	Symbol	* * icomp		4803151						
ANR	4804321	Symbol	comp -> scale		4803151						
ANR	4804322	Symbol	B_FSZERO		4803151						
ANR	4804323	Symbol	* upd -> valbuf		4803151						
ANR	4804324	Symbol	nsteps		4803151						
ANR	4804325	Symbol	* upd -> cmap		4803151						
ANR	4804326	Symbol	upd -> cmap [ order [ icomp ] ] . bitmsk		4803151						
ANR	4804327	Symbol	upd_fscomp		4803151						
ANR	4804328	Symbol	* * * * comp		4803151						
ANR	4804329	Symbol	upd -> flags		4803151						
ANR	4804330	Symbol	* upd		4803151						
ANR	4804331	Symbol	comp -> threshold		4803151						
ANR	4804332	Symbol	B_RENDER		4803151						
ANR	4804333	Symbol	i		4803151						
ANR	4804334	Symbol	comp -> bits		4803151						
ANR	4804335	Symbol	* order		4803151						
ANR	4804336	Symbol	INT32_MAX		4803151						
ANR	4804337	Symbol	* * upd -> int_a		4803151						
ANR	4804338	Symbol	upd -> render		4803151						
ANR	4804339	Symbol	fs_emax		4803151						
ANR	4804340	Symbol	ymax		4803151						
ANR	4804341	Symbol	v		4803151						
ANR	4804342	Symbol	comp -> cmap		4803151						
ANR	4804343	Symbol	* * upd		4803151						
ANR	4804344	Symbol	* comp -> cmap		4803151						
ANR	4804345	Symbol	INT32_MIN		4803151						
ANR	4804346	Symbol	* * * comp -> cmap		4803151						
ANR	4804347	Symbol	* * * * upd		4803151						
ANR	4804348	Symbol	* * * upd -> cmap		4803151						
ANR	4804349	Symbol	lv		4803151						
ANR	4804350	Symbol	* * comp -> cmap		4803151						
ANR	4804351	Symbol	upd -> cmap		4803151						
ANR	4804352	Symbol	upd -> valbuf		4803151						
ANR	4804353	Symbol	upd -> int_a		4803151						
ANR	4804354	Symbol	upd -> nvalbuf		4803151						
ANR	4804355	Symbol	upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		4803151						
ANR	4804356	Symbol	upd -> cmap [ comp -> cmap ] . xfer		4803151						
ANR	4804357	Symbol	fs_emin		4803151						
ANR	4804358	Symbol	UPD_CMAP_MAX		4803151						
ANR	4804359	Symbol	* upd -> int_a [ IA_COMPORDER ] . data		4803151						
ANR	4804360	Symbol	NULL		4803151						
ANR	4804361	Symbol	upd -> cmap [ comp -> cmap ] . bits		4803151						
ANR	4804362	Symbol	need		4803151						
ANR	4804363	Symbol	upd -> cmap [ comp -> cmap ] . bitmsk		4803151						
ANR	4804364	Symbol	UPD_VALPTR_MAX		4803151						
ANR	4804365	Symbol	upd -> cmap [ comp -> cmap ] . comp		4803151						
ANR	4804366	Symbol	highval		4803151						
ANR	4804367	Symbol	* * comp		4803151						
ANR	4804368	Symbol	highmod		4803151						
ANR	4804369	Symbol	udev		4803151						
ANR	4804370	Symbol	success		4803151						
ANR	4804371	Symbol	true		4803151						
ANR	4804372	Symbol	IA_COMPORDER		4803151						
ANR	4804373	Symbol	upd -> float_a		4803151						
ANR	4804374	Symbol	~B_RENDER		4803151						
ANR	4804375	Symbol	* * * comp		4803151						
ANR	4804376	Symbol	upd -> cmap [ comp -> cmap ] . bitshf		4803151						
ANR	4804377	Symbol	* * IA_COMPORDER		4803151						
ANR	4804378	Symbol	scale		4803151						
ANR	4804379	Symbol	* fs_emin		4803151						
ANR	4804380	Symbol	* upd -> float_a [ upd -> cmap [ comp -> cmap ] . xfer ] . data		4803151						
ANR	4804381	Symbol	upd -> ncomp		4803151						
ANR	4804382	Symbol	udev -> upd		4803151						
ANR	4804383	Symbol	comp -> bitmsk		4803151						
ANR	4804384	Symbol	* icomp		4803151						
ANR	4804385	Symbol	* fs_emax		4803151						
ANR	4804386	Symbol	* comp		4803151						
ANR	4804387	Symbol	* upd -> valptr		4803151						
ANR	4804388	Symbol	udev -> memory		4803151						
ANR	4804389	Symbol	* * * upd		4803151						
ANR	4804390	Symbol	false		4803151						
ANR	4804391	Symbol	upd -> cmap [ comp -> cmap ] . rise		4803151						
ANR	4804392	Symbol	* * upd -> cmap		4803151						
ANR	4804393	Symbol	* * order		4803151						
ANR	4804394	Symbol	upd -> int_a [ IA_COMPORDER ] . data		4803151						
ANR	4804395	Symbol	comp -> spotsize		4803151						
ANR	4804396	Symbol	* i		4803151						
ANR	4804397	Function	upd_close_fscomp	3494:0:132285:133081							
ANR	4804398	FunctionDef	upd_close_fscomp (upd_device * udev)		4804397	0					
ANR	4804399	CompoundStatement		3496:0:132332:133081	4804397	0					
ANR	4804400	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3497:3:132337:132364	4804397	0	True				
ANR	4804401	IdentifierDecl	upd = udev -> upd		4804397	0					
ANR	4804402	IdentifierDeclType	const upd_p		4804397	0					
ANR	4804403	Identifier	upd		4804397	1					
ANR	4804404	AssignmentExpression	upd = udev -> upd		4804397	2		=			
ANR	4804405	Identifier	upd		4804397	0					
ANR	4804406	PtrMemberAccess	udev -> upd		4804397	1					
ANR	4804407	Identifier	udev		4804397	0					
ANR	4804408	Identifier	upd		4804397	1					
ANR	4804409	IdentifierDeclStatement	int icomp ;	3498:3:132369:132378	4804397	1	True				
ANR	4804410	IdentifierDecl	icomp		4804397	0					
ANR	4804411	IdentifierDeclType	int		4804397	0					
ANR	4804412	Identifier	icomp		4804397	1					
ANR	4804413	IfStatement	if ( upd && ( upd -> flags & B_RENDER ) )		4804397	2					
ANR	4804414	Condition	upd && ( upd -> flags & B_RENDER )	3501:6:132418:132447	4804397	0	True				
ANR	4804415	AndExpression	upd && ( upd -> flags & B_RENDER )		4804397	0		&&			
ANR	4804416	Identifier	upd		4804397	0					
ANR	4804417	BitAndExpression	upd -> flags & B_RENDER		4804397	1		&			
ANR	4804418	PtrMemberAccess	upd -> flags		4804397	0					
ANR	4804419	Identifier	upd		4804397	0					
ANR	4804420	Identifier	flags		4804397	1					
ANR	4804421	Identifier	B_RENDER		4804397	1					
ANR	4804422	CompoundStatement		6:38:117:117	4804397	1					
ANR	4804423	ForStatement	for ( icomp = 0 ; icomp < upd -> ncomp ; ++ icomp )		4804397	0					
ANR	4804424	ForInit	icomp = 0 ;	3503:10:132463:132472	4804397	0	True				
ANR	4804425	AssignmentExpression	icomp = 0		4804397	0		=			
ANR	4804426	Identifier	icomp		4804397	0					
ANR	4804427	PrimaryExpression	0		4804397	1					
ANR	4804428	Condition	icomp < upd -> ncomp	3503:21:132474:132491	4804397	1	True				
ANR	4804429	RelationalExpression	icomp < upd -> ncomp		4804397	0		<			
ANR	4804430	Identifier	icomp		4804397	0					
ANR	4804431	PtrMemberAccess	upd -> ncomp		4804397	1					
ANR	4804432	Identifier	upd		4804397	0					
ANR	4804433	Identifier	ncomp		4804397	1					
ANR	4804434	UnaryExpression	++ icomp	3503:41:132494:132500	4804397	2	True				
ANR	4804435	IncDec	++		4804397	0					
ANR	4804436	Identifier	icomp		4804397	1					
ANR	4804437	CompoundStatement		9:9:181:216	4804397	3					
ANR	4804438	IdentifierDeclStatement	updcomp_p comp = upd -> valptr [ icomp ] ;	3504:9:132514:132549	4804397	0	True				
ANR	4804439	IdentifierDecl	comp = upd -> valptr [ icomp ]		4804397	0					
ANR	4804440	IdentifierDeclType	updcomp_p		4804397	0					
ANR	4804441	Identifier	comp		4804397	1					
ANR	4804442	AssignmentExpression	comp = upd -> valptr [ icomp ]		4804397	2		=			
ANR	4804443	Identifier	comp		4804397	0					
ANR	4804444	ArrayIndexing	upd -> valptr [ icomp ]		4804397	1					
ANR	4804445	PtrMemberAccess	upd -> valptr		4804397	0					
ANR	4804446	Identifier	upd		4804397	0					
ANR	4804447	Identifier	valptr		4804397	1					
ANR	4804448	Identifier	icomp		4804397	1					
ANR	4804449	IfStatement	if ( ! comp )		4804397	1					
ANR	4804450	Condition	! comp	3505:12:132563:132567	4804397	0	True				
ANR	4804451	UnaryOperationExpression	! comp		4804397	0					
ANR	4804452	UnaryOperator	!		4804397	0					
ANR	4804453	Identifier	comp		4804397	1					
ANR	4804454	ContinueStatement	continue ;	3505:19:132570:132578	4804397	1	True				
ANR	4804455	IfStatement	if ( ! comp -> spotsize )		4804397	2					
ANR	4804456	Condition	! comp -> spotsize	3506:12:132592:132606	4804397	0	True				
ANR	4804457	UnaryOperationExpression	! comp -> spotsize		4804397	0					
ANR	4804458	UnaryOperator	!		4804397	0					
ANR	4804459	PtrMemberAccess	comp -> spotsize		4804397	1					
ANR	4804460	Identifier	comp		4804397	0					
ANR	4804461	Identifier	spotsize		4804397	1					
ANR	4804462	ContinueStatement	continue ;	3506:29:132609:132617	4804397	1	True				
ANR	4804463	ExpressionStatement	"errprintf ( udev -> memory , ""%d. Component: %6.3f <= error <= %6.3f\\n"" , icomp + 1 , ( double ) fs_emin [ icomp ] / ( double ) comp -> spotsize , ( double ) fs_emax [ icomp ] / ( double ) comp -> spotsize )"	3507:9:132628:132844	4804397	3	True				
ANR	4804464	CallExpression	"errprintf ( udev -> memory , ""%d. Component: %6.3f <= error <= %6.3f\\n"" , icomp + 1 , ( double ) fs_emin [ icomp ] / ( double ) comp -> spotsize , ( double ) fs_emax [ icomp ] / ( double ) comp -> spotsize )"		4804397	0					
ANR	4804465	Callee	errprintf		4804397	0					
ANR	4804466	Identifier	errprintf		4804397	0					
ANR	4804467	ArgumentList	udev -> memory		4804397	1					
ANR	4804468	Argument	udev -> memory		4804397	0					
ANR	4804469	PtrMemberAccess	udev -> memory		4804397	0					
ANR	4804470	Identifier	udev		4804397	0					
ANR	4804471	Identifier	memory		4804397	1					
ANR	4804472	Argument	"""%d. Component: %6.3f <= error <= %6.3f\\n"""		4804397	1					
ANR	4804473	PrimaryExpression	"""%d. Component: %6.3f <= error <= %6.3f\\n"""		4804397	0					
ANR	4804474	Argument	icomp + 1		4804397	2					
ANR	4804475	AdditiveExpression	icomp + 1		4804397	0		+			
ANR	4804476	Identifier	icomp		4804397	0					
ANR	4804477	PrimaryExpression	1		4804397	1					
ANR	4804478	Argument	( double ) fs_emin [ icomp ] / ( double ) comp -> spotsize		4804397	3					
ANR	4804479	MultiplicativeExpression	( double ) fs_emin [ icomp ] / ( double ) comp -> spotsize		4804397	0		/			
ANR	4804480	CastExpression	( double ) fs_emin [ icomp ]		4804397	0					
ANR	4804481	CastTarget	double		4804397	0					
ANR	4804482	ArrayIndexing	fs_emin [ icomp ]		4804397	1					
ANR	4804483	Identifier	fs_emin		4804397	0					
ANR	4804484	Identifier	icomp		4804397	1					
ANR	4804485	CastExpression	( double ) comp -> spotsize		4804397	1					
ANR	4804486	CastTarget	double		4804397	0					
ANR	4804487	PtrMemberAccess	comp -> spotsize		4804397	1					
ANR	4804488	Identifier	comp		4804397	0					
ANR	4804489	Identifier	spotsize		4804397	1					
ANR	4804490	Argument	( double ) fs_emax [ icomp ] / ( double ) comp -> spotsize		4804397	4					
ANR	4804491	MultiplicativeExpression	( double ) fs_emax [ icomp ] / ( double ) comp -> spotsize		4804397	0		/			
ANR	4804492	CastExpression	( double ) fs_emax [ icomp ]		4804397	0					
ANR	4804493	CastTarget	double		4804397	0					
ANR	4804494	ArrayIndexing	fs_emax [ icomp ]		4804397	1					
ANR	4804495	Identifier	fs_emax		4804397	0					
ANR	4804496	Identifier	icomp		4804397	1					
ANR	4804497	CastExpression	( double ) comp -> spotsize		4804397	1					
ANR	4804498	CastTarget	double		4804397	0					
ANR	4804499	PtrMemberAccess	comp -> spotsize		4804397	1					
ANR	4804500	Identifier	comp		4804397	0					
ANR	4804501	Identifier	spotsize		4804397	1					
ANR	4804502	ForStatement	for ( icomp = 0 ; UPD_VALPTR_MAX > icomp ; ++ icomp )		4804397	3					
ANR	4804503	ForInit	icomp = 0 ;	3516:7:132875:132884	4804397	0	True				
ANR	4804504	AssignmentExpression	icomp = 0		4804397	0		=			
ANR	4804505	Identifier	icomp		4804397	0					
ANR	4804506	PrimaryExpression	0		4804397	1					
ANR	4804507	Condition	UPD_VALPTR_MAX > icomp	3516:18:132886:132907	4804397	1	True				
ANR	4804508	RelationalExpression	UPD_VALPTR_MAX > icomp		4804397	0		>			
ANR	4804509	Identifier	UPD_VALPTR_MAX		4804397	0					
ANR	4804510	Identifier	icomp		4804397	1					
ANR	4804511	UnaryExpression	++ icomp	3516:42:132910:132916	4804397	2	True				
ANR	4804512	IncDec	++		4804397	0					
ANR	4804513	Identifier	icomp		4804397	1					
ANR	4804514	CompoundStatement		21:51:586:586	4804397	3					
ANR	4804515	IfStatement	if ( ! upd -> valptr [ icomp ] )		4804397	0					
ANR	4804516	Condition	! upd -> valptr [ icomp ]	3517:9:132930:132948	4804397	0	True				
ANR	4804517	UnaryOperationExpression	! upd -> valptr [ icomp ]		4804397	0					
ANR	4804518	UnaryOperator	!		4804397	0					
ANR	4804519	ArrayIndexing	upd -> valptr [ icomp ]		4804397	1					
ANR	4804520	PtrMemberAccess	upd -> valptr		4804397	0					
ANR	4804521	Identifier	upd		4804397	0					
ANR	4804522	Identifier	valptr		4804397	1					
ANR	4804523	Identifier	icomp		4804397	1					
ANR	4804524	ContinueStatement	continue ;	3517:30:132951:132959	4804397	1	True				
ANR	4804525	ExpressionStatement	"gs_free ( udev -> memory , upd -> valptr [ icomp ] , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"	3518:6:132967:133041	4804397	1	True				
ANR	4804526	CallExpression	"gs_free ( udev -> memory , upd -> valptr [ icomp ] , 1 , sizeof ( updcomp_t ) , ""upd/fscomp"" )"		4804397	0					
ANR	4804527	Callee	gs_free		4804397	0					
ANR	4804528	Identifier	gs_free		4804397	0					
ANR	4804529	ArgumentList	udev -> memory		4804397	1					
ANR	4804530	Argument	udev -> memory		4804397	0					
ANR	4804531	PtrMemberAccess	udev -> memory		4804397	0					
ANR	4804532	Identifier	udev		4804397	0					
ANR	4804533	Identifier	memory		4804397	1					
ANR	4804534	Argument	upd -> valptr [ icomp ]		4804397	1					
ANR	4804535	ArrayIndexing	upd -> valptr [ icomp ]		4804397	0					
ANR	4804536	PtrMemberAccess	upd -> valptr		4804397	0					
ANR	4804537	Identifier	upd		4804397	0					
ANR	4804538	Identifier	valptr		4804397	1					
ANR	4804539	Identifier	icomp		4804397	1					
ANR	4804540	Argument	1		4804397	2					
ANR	4804541	PrimaryExpression	1		4804397	0					
ANR	4804542	Argument	sizeof ( updcomp_t )		4804397	3					
ANR	4804543	SizeofExpression	sizeof ( updcomp_t )		4804397	0					
ANR	4804544	Sizeof	sizeof		4804397	0					
ANR	4804545	SizeofOperand	updcomp_t		4804397	1					
ANR	4804546	Argument	"""upd/fscomp"""		4804397	4					
ANR	4804547	PrimaryExpression	"""upd/fscomp"""		4804397	0					
ANR	4804548	ExpressionStatement	upd -> valptr [ icomp ] = NULL	3519:6:133049:133074	4804397	2	True				
ANR	4804549	AssignmentExpression	upd -> valptr [ icomp ] = NULL		4804397	0		=			
ANR	4804550	ArrayIndexing	upd -> valptr [ icomp ]		4804397	0					
ANR	4804551	PtrMemberAccess	upd -> valptr		4804397	0					
ANR	4804552	Identifier	upd		4804397	0					
ANR	4804553	Identifier	valptr		4804397	1					
ANR	4804554	Identifier	icomp		4804397	1					
ANR	4804555	Identifier	NULL		4804397	1					
ANR	4804556	ReturnType	static void		4804397	1					
ANR	4804557	Identifier	upd_close_fscomp		4804397	2					
ANR	4804558	ParameterList	upd_device * udev		4804397	3					
ANR	4804559	Parameter	upd_device * udev	3495:17:132314:132329	4804397	0	True				
ANR	4804560	ParameterType	upd_device *		4804397	0					
ANR	4804561	Identifier	udev		4804397	1					
ANR	4804562	CFGEntryNode	ENTRY		4804397		True				
ANR	4804563	CFGExitNode	EXIT		4804397		True				
ANR	4804564	Symbol	comp		4804397						
ANR	4804565	Symbol	NULL		4804397						
ANR	4804566	Symbol	udev -> memory		4804397						
ANR	4804567	Symbol	upd		4804397						
ANR	4804568	Symbol	B_RENDER		4804397						
ANR	4804569	Symbol	* fs_emin		4804397						
ANR	4804570	Symbol	UPD_VALPTR_MAX		4804397						
ANR	4804571	Symbol	icomp		4804397						
ANR	4804572	Symbol	upd -> ncomp		4804397						
ANR	4804573	Symbol	upd -> flags		4804397						
ANR	4804574	Symbol	udev -> upd		4804397						
ANR	4804575	Symbol	comp -> spotsize		4804397						
ANR	4804576	Symbol	fs_emax		4804397						
ANR	4804577	Symbol	* udev		4804397						
ANR	4804578	Symbol	* upd		4804397						
ANR	4804579	Symbol	* icomp		4804397						
ANR	4804580	Symbol	udev		4804397						
ANR	4804581	Symbol	* comp		4804397						
ANR	4804582	Symbol	* fs_emax		4804397						
ANR	4804583	Symbol	* upd -> valptr		4804397						
ANR	4804584	Symbol	fs_emin		4804397						
ANR	4804585	Symbol	* * upd		4804397						
ANR	4804586	Symbol	upd -> valptr		4804397						
ANR	4804587	DeclStmt									
ANR	4804588	Decl							define	define ( I )	FS_M_ROWERR
ANR	4804589	Function	upd_fscomp	3570:0:135159:140527							
ANR	4804590	FunctionDef	upd_fscomp (upd_p upd)		4804589	0					
ANR	4804591	CompoundStatement		3572:0:135192:140527	4804589	0					
ANR	4804592	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ] ;	3573:3:135197:135263	4804589	0	True				
ANR	4804593	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4804589	0					
ANR	4804594	IdentifierDeclType	const updscan_p		4804589	0					
ANR	4804595	Identifier	scan		4804589	1					
ANR	4804596	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4804589	2		=			
ANR	4804597	Identifier	scan		4804589	0					
ANR	4804598	ArrayIndexing	upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4804589	1					
ANR	4804599	PtrMemberAccess	upd -> scnbuf		4804589	0					
ANR	4804600	Identifier	upd		4804589	0					
ANR	4804601	Identifier	scnbuf		4804589	1					
ANR	4804602	BitAndExpression	upd -> yscnbuf & upd -> scnmsk		4804589	1		&			
ANR	4804603	PtrMemberAccess	upd -> yscnbuf		4804589	0					
ANR	4804604	Identifier	upd		4804589	0					
ANR	4804605	Identifier	yscnbuf		4804589	1					
ANR	4804606	PtrMemberAccess	upd -> scnmsk		4804589	1					
ANR	4804607	Identifier	upd		4804589	0					
ANR	4804608	Identifier	scnmsk		4804589	1					
ANR	4804609	IdentifierDeclStatement	const updcomp_p * comp = ( updcomp_p * ) upd -> valptr ;	3574:3:135268:135320	4804589	1	True				
ANR	4804610	IdentifierDecl	* comp = ( updcomp_p * ) upd -> valptr		4804589	0					
ANR	4804611	IdentifierDeclType	const updcomp_p *		4804589	0					
ANR	4804612	Identifier	comp		4804589	1					
ANR	4804613	AssignmentExpression	* comp = ( updcomp_p * ) upd -> valptr		4804589	2		=			
ANR	4804614	Identifier	comp		4804589	0					
ANR	4804615	CastExpression	( updcomp_p * ) upd -> valptr		4804589	1					
ANR	4804616	CastTarget	updcomp_p *		4804589	0					
ANR	4804617	PtrMemberAccess	upd -> valptr		4804589	1					
ANR	4804618	Identifier	upd		4804589	0					
ANR	4804619	Identifier	valptr		4804589	1					
ANR	4804620	Statement	int32_t	3575:3:135325:135331	4804589	2	True				
ANR	4804621	Statement	*	3575:11:135333:135333	4804589	3	True				
ANR	4804622	Statement	const	3575:12:135334:135338	4804589	4	True				
ANR	4804623	ExpressionStatement	pixel = upd -> valbuf	3575:22:135344:135364	4804589	5	True				
ANR	4804624	AssignmentExpression	pixel = upd -> valbuf		4804589	0		=			
ANR	4804625	Identifier	pixel		4804589	0					
ANR	4804626	PtrMemberAccess	upd -> valbuf		4804589	1					
ANR	4804627	Identifier	upd		4804589	0					
ANR	4804628	Identifier	valbuf		4804589	1					
ANR	4804629	Statement	int32_t	3576:3:135369:135375	4804589	6	True				
ANR	4804630	Statement	*	3576:11:135377:135377	4804589	7	True				
ANR	4804631	Statement	const	3576:12:135378:135382	4804589	8	True				
ANR	4804632	ExpressionStatement	colerr = pixel + upd -> ncomp	3576:22:135388:135416	4804589	9	True				
ANR	4804633	AssignmentExpression	colerr = pixel + upd -> ncomp		4804589	0		=			
ANR	4804634	Identifier	colerr		4804589	0					
ANR	4804635	AdditiveExpression	pixel + upd -> ncomp		4804589	1		+			
ANR	4804636	Identifier	pixel		4804589	0					
ANR	4804637	PtrMemberAccess	upd -> ncomp		4804589	1					
ANR	4804638	Identifier	upd		4804589	0					
ANR	4804639	Identifier	ncomp		4804589	1					
ANR	4804640	IdentifierDeclStatement	int32_t * rowerr = colerr + upd -> ncomp ;	3577:3:135421:135468	4804589	10	True				
ANR	4804641	IdentifierDecl	* rowerr = colerr + upd -> ncomp		4804589	0					
ANR	4804642	IdentifierDeclType	int32_t *		4804589	0					
ANR	4804643	Identifier	rowerr		4804589	1					
ANR	4804644	AssignmentExpression	* rowerr = colerr + upd -> ncomp		4804589	2		=			
ANR	4804645	Identifier	rowerr		4804589	0					
ANR	4804646	AdditiveExpression	colerr + upd -> ncomp		4804589	1		+			
ANR	4804647	Identifier	colerr		4804589	0					
ANR	4804648	PtrMemberAccess	upd -> ncomp		4804589	1					
ANR	4804649	Identifier	upd		4804589	0					
ANR	4804650	Identifier	ncomp		4804589	1					
ANR	4804651	IdentifierDeclStatement	int pwidth = upd -> rwidth ;	3578:3:135473:135510	4804589	11	True				
ANR	4804652	IdentifierDecl	pwidth = upd -> rwidth		4804589	0					
ANR	4804653	IdentifierDeclType	int		4804589	0					
ANR	4804654	Identifier	pwidth		4804589	1					
ANR	4804655	AssignmentExpression	pwidth = upd -> rwidth		4804589	2		=			
ANR	4804656	Identifier	pwidth		4804589	0					
ANR	4804657	PtrMemberAccess	upd -> rwidth		4804589	1					
ANR	4804658	Identifier	upd		4804589	0					
ANR	4804659	Identifier	rwidth		4804589	1					
ANR	4804660	IdentifierDeclStatement	"int dir , ibyte ;"	3579:3:135515:135541	4804589	12	True				
ANR	4804661	IdentifierDecl	dir		4804589	0					
ANR	4804662	IdentifierDeclType	int		4804589	0					
ANR	4804663	Identifier	dir		4804589	1					
ANR	4804664	IdentifierDecl	ibyte		4804589	1					
ANR	4804665	IdentifierDeclType	int		4804589	0					
ANR	4804666	Identifier	ibyte		4804589	1					
ANR	4804667	IdentifierDeclStatement	"int iblack , bblack , pxlset ;"	3580:3:135546:135583	4804589	13	True				
ANR	4804668	IdentifierDecl	iblack		4804589	0					
ANR	4804669	IdentifierDeclType	int		4804589	0					
ANR	4804670	Identifier	iblack		4804589	1					
ANR	4804671	IdentifierDecl	bblack		4804589	1					
ANR	4804672	IdentifierDeclType	int		4804589	0					
ANR	4804673	Identifier	bblack		4804589	1					
ANR	4804674	IdentifierDecl	pxlset		4804589	2					
ANR	4804675	IdentifierDeclType	int		4804589	0					
ANR	4804676	Identifier	pxlset		4804589	1					
ANR	4804677	IdentifierDeclStatement	uint32_t ci ;	3581:3:135588:135605	4804589	14	True				
ANR	4804678	IdentifierDecl	ci		4804589	0					
ANR	4804679	IdentifierDeclType	uint32_t		4804589	0					
ANR	4804680	Identifier	ci		4804589	1					
ANR	4804681	IdentifierDeclStatement	byte bit ;	3582:3:135610:135626	4804589	15	True				
ANR	4804682	IdentifierDecl	bit		4804589	0					
ANR	4804683	IdentifierDeclType	byte		4804589	0					
ANR	4804684	Identifier	bit		4804589	1					
ANR	4804685	IdentifierDeclStatement	bool first = true ;	3583:3:135631:135656	4804589	16	True				
ANR	4804686	IdentifierDecl	first = true		4804589	0					
ANR	4804687	IdentifierDeclType	bool		4804589	0					
ANR	4804688	Identifier	first		4804589	1					
ANR	4804689	AssignmentExpression	first = true		4804589	2		=			
ANR	4804690	Identifier	true		4804589	0					
ANR	4804691	Identifier	true		4804589	1					
ANR	4804692	SwitchStatement	switch ( upd -> ncomp )		4804589	17					
ANR	4804693	Condition	upd -> ncomp	3587:10:135703:135712	4804589	0	True				
ANR	4804694	PtrMemberAccess	upd -> ncomp		4804589	0					
ANR	4804695	Identifier	upd		4804589	0					
ANR	4804696	Identifier	ncomp		4804589	1					
ANR	4804697	CompoundStatement		16:22:522:522	4804589	1					
ANR	4804698	Label	case 4 :	3588:5:135722:135728	4804589	0	True				
ANR	4804699	ExpressionStatement	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"	3588:14:135731:135766	4804589	1	True				
ANR	4804700	CallExpression	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"		4804589	0					
ANR	4804701	Callee	memset		4804589	0					
ANR	4804702	Identifier	memset		4804589	0					
ANR	4804703	ArgumentList	scan [ 3 ] . bytes		4804589	1					
ANR	4804704	Argument	scan [ 3 ] . bytes		4804589	0					
ANR	4804705	MemberAccess	scan [ 3 ] . bytes		4804589	0					
ANR	4804706	ArrayIndexing	scan [ 3 ]		4804589	0					
ANR	4804707	Identifier	scan		4804589	0					
ANR	4804708	PrimaryExpression	3		4804589	1					
ANR	4804709	Identifier	bytes		4804589	1					
ANR	4804710	Argument	0		4804589	1					
ANR	4804711	PrimaryExpression	0		4804589	0					
ANR	4804712	Argument	upd -> nbytes		4804589	2					
ANR	4804713	PtrMemberAccess	upd -> nbytes		4804589	0					
ANR	4804714	Identifier	upd		4804589	0					
ANR	4804715	Identifier	nbytes		4804589	1					
ANR	4804716	Label	case 3 :	3590:5:135801:135807	4804589	2	True				
ANR	4804717	ExpressionStatement	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"	3590:14:135810:135845	4804589	3	True				
ANR	4804718	CallExpression	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"		4804589	0					
ANR	4804719	Callee	memset		4804589	0					
ANR	4804720	Identifier	memset		4804589	0					
ANR	4804721	ArgumentList	scan [ 2 ] . bytes		4804589	1					
ANR	4804722	Argument	scan [ 2 ] . bytes		4804589	0					
ANR	4804723	MemberAccess	scan [ 2 ] . bytes		4804589	0					
ANR	4804724	ArrayIndexing	scan [ 2 ]		4804589	0					
ANR	4804725	Identifier	scan		4804589	0					
ANR	4804726	PrimaryExpression	2		4804589	1					
ANR	4804727	Identifier	bytes		4804589	1					
ANR	4804728	Argument	0		4804589	1					
ANR	4804729	PrimaryExpression	0		4804589	0					
ANR	4804730	Argument	upd -> nbytes		4804589	2					
ANR	4804731	PtrMemberAccess	upd -> nbytes		4804589	0					
ANR	4804732	Identifier	upd		4804589	0					
ANR	4804733	Identifier	nbytes		4804589	1					
ANR	4804734	ExpressionStatement	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"	3591:14:135861:135896	4804589	4	True				
ANR	4804735	CallExpression	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"		4804589	0					
ANR	4804736	Callee	memset		4804589	0					
ANR	4804737	Identifier	memset		4804589	0					
ANR	4804738	ArgumentList	scan [ 1 ] . bytes		4804589	1					
ANR	4804739	Argument	scan [ 1 ] . bytes		4804589	0					
ANR	4804740	MemberAccess	scan [ 1 ] . bytes		4804589	0					
ANR	4804741	ArrayIndexing	scan [ 1 ]		4804589	0					
ANR	4804742	Identifier	scan		4804589	0					
ANR	4804743	PrimaryExpression	1		4804589	1					
ANR	4804744	Identifier	bytes		4804589	1					
ANR	4804745	Argument	0		4804589	1					
ANR	4804746	PrimaryExpression	0		4804589	0					
ANR	4804747	Argument	upd -> nbytes		4804589	2					
ANR	4804748	PtrMemberAccess	upd -> nbytes		4804589	0					
ANR	4804749	Identifier	upd		4804589	0					
ANR	4804750	Identifier	nbytes		4804589	1					
ANR	4804751	Label	default :	3593:5:135931:135938	4804589	5	True				
ANR	4804752	Identifier	default		4804589	0					
ANR	4804753	ExpressionStatement	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"	3593:14:135940:135975	4804589	6	True				
ANR	4804754	CallExpression	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"		4804589	0					
ANR	4804755	Callee	memset		4804589	0					
ANR	4804756	Identifier	memset		4804589	0					
ANR	4804757	ArgumentList	scan [ 0 ] . bytes		4804589	1					
ANR	4804758	Argument	scan [ 0 ] . bytes		4804589	0					
ANR	4804759	MemberAccess	scan [ 0 ] . bytes		4804589	0					
ANR	4804760	ArrayIndexing	scan [ 0 ]		4804589	0					
ANR	4804761	Identifier	scan		4804589	0					
ANR	4804762	PrimaryExpression	0		4804589	1					
ANR	4804763	Identifier	bytes		4804589	1					
ANR	4804764	Argument	0		4804589	1					
ANR	4804765	PrimaryExpression	0		4804589	0					
ANR	4804766	Argument	upd -> nbytes		4804589	2					
ANR	4804767	PtrMemberAccess	upd -> nbytes		4804589	0					
ANR	4804768	Identifier	upd		4804589	0					
ANR	4804769	Identifier	nbytes		4804589	1					
ANR	4804770	IfStatement	if ( upd -> flags & B_REVDIR )		4804589	18					
ANR	4804771	Condition	upd -> flags & B_REVDIR	3598:6:136022:136044	4804589	0	True				
ANR	4804772	BitAndExpression	upd -> flags & B_REVDIR		4804589	0		&			
ANR	4804773	PtrMemberAccess	upd -> flags		4804589	0					
ANR	4804774	Identifier	upd		4804589	0					
ANR	4804775	Identifier	flags		4804589	1					
ANR	4804776	Identifier	B_REVDIR		4804589	1					
ANR	4804777	CompoundStatement		27:31:854:854	4804589	1					
ANR	4804778	IfStatement	if ( upd -> flags & B_YFLIP )		4804589	0					
ANR	4804779	Condition	upd -> flags & B_YFLIP	3600:9:136082:136101	4804589	0	True				
ANR	4804780	BitAndExpression	upd -> flags & B_YFLIP		4804589	0		&			
ANR	4804781	PtrMemberAccess	upd -> flags		4804589	0					
ANR	4804782	Identifier	upd		4804589	0					
ANR	4804783	Identifier	flags		4804589	1					
ANR	4804784	Identifier	B_YFLIP		4804589	1					
ANR	4804785	CompoundStatement		29:31:911:911	4804589	1					
ANR	4804786	ExpressionStatement	dir = upd -> ncomp	3601:9:136115:136135	4804589	0	True				
ANR	4804787	AssignmentExpression	dir = upd -> ncomp		4804589	0		=			
ANR	4804788	Identifier	dir		4804589	0					
ANR	4804789	PtrMemberAccess	upd -> ncomp		4804589	1					
ANR	4804790	Identifier	upd		4804589	0					
ANR	4804791	Identifier	ncomp		4804589	1					
ANR	4804792	ExpressionStatement	bit = 0x80	3602:9:136146:136160	4804589	1	True				
ANR	4804793	AssignmentExpression	bit = 0x80		4804589	0		=			
ANR	4804794	Identifier	bit		4804589	0					
ANR	4804795	PrimaryExpression	0x80		4804589	1					
ANR	4804796	ExpressionStatement	ibyte = 0	3603:9:136171:136182	4804589	2	True				
ANR	4804797	AssignmentExpression	ibyte = 0		4804589	0		=			
ANR	4804798	Identifier	ibyte		4804589	0					
ANR	4804799	PrimaryExpression	0		4804589	1					
ANR	4804800	ElseStatement	else		4804589	0					
ANR	4804801	CompoundStatement		33:13:1004:1004	4804589	0					
ANR	4804802	ExpressionStatement	dir = - upd -> ncomp	3605:9:136208:136230	4804589	0	True				
ANR	4804803	AssignmentExpression	dir = - upd -> ncomp		4804589	0		=			
ANR	4804804	Identifier	dir		4804589	0					
ANR	4804805	UnaryOperationExpression	- upd -> ncomp		4804589	1					
ANR	4804806	UnaryOperator	-		4804589	0					
ANR	4804807	PtrMemberAccess	upd -> ncomp		4804589	1					
ANR	4804808	Identifier	upd		4804589	0					
ANR	4804809	Identifier	ncomp		4804589	1					
ANR	4804810	ExpressionStatement	rowerr += upd -> ncomp * ( pwidth - 1 )	3606:9:136241:136276	4804589	1	True				
ANR	4804811	AssignmentExpression	rowerr += upd -> ncomp * ( pwidth - 1 )		4804589	0		+=			
ANR	4804812	Identifier	rowerr		4804589	0					
ANR	4804813	MultiplicativeExpression	upd -> ncomp * ( pwidth - 1 )		4804589	1		*			
ANR	4804814	PtrMemberAccess	upd -> ncomp		4804589	0					
ANR	4804815	Identifier	upd		4804589	0					
ANR	4804816	Identifier	ncomp		4804589	1					
ANR	4804817	AdditiveExpression	pwidth - 1		4804589	1		-			
ANR	4804818	Identifier	pwidth		4804589	0					
ANR	4804819	PrimaryExpression	1		4804589	1					
ANR	4804820	ExpressionStatement	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )	3607:9:136287:136327	4804589	2	True				
ANR	4804821	AssignmentExpression	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )		4804589	0		=			
ANR	4804822	Identifier	bit		4804589	0					
ANR	4804823	ShiftExpression	0x80 >> ( ( pwidth - 1 ) & 7 )		4804589	1		>>			
ANR	4804824	PrimaryExpression	0x80		4804589	0					
ANR	4804825	BitAndExpression	( pwidth - 1 ) & 7		4804589	1		&			
ANR	4804826	AdditiveExpression	pwidth - 1		4804589	0		-			
ANR	4804827	Identifier	pwidth		4804589	0					
ANR	4804828	PrimaryExpression	1		4804589	1					
ANR	4804829	PrimaryExpression	7		4804589	1					
ANR	4804830	ExpressionStatement	ibyte = ( pwidth - 1 ) >> 3	3608:9:136338:136378	4804589	3	True				
ANR	4804831	AssignmentExpression	ibyte = ( pwidth - 1 ) >> 3		4804589	0		=			
ANR	4804832	Identifier	ibyte		4804589	0					
ANR	4804833	ShiftExpression	( pwidth - 1 ) >> 3		4804589	1		>>			
ANR	4804834	AdditiveExpression	pwidth - 1		4804589	0		-			
ANR	4804835	Identifier	pwidth		4804589	0					
ANR	4804836	PrimaryExpression	1		4804589	1					
ANR	4804837	PrimaryExpression	3		4804589	1					
ANR	4804838	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		4804589	1					
ANR	4804839	Condition	! ( upd -> flags & B_FSWHITE )	3611:9:136398:136422	4804589	0	True				
ANR	4804840	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		4804589	0					
ANR	4804841	UnaryOperator	!		4804589	0					
ANR	4804842	BitAndExpression	upd -> flags & B_FSWHITE		4804589	1		&			
ANR	4804843	PtrMemberAccess	upd -> flags		4804589	0					
ANR	4804844	Identifier	upd		4804589	0					
ANR	4804845	Identifier	flags		4804589	1					
ANR	4804846	Identifier	B_FSWHITE		4804589	1					
ANR	4804847	CompoundStatement		40:36:1232:1232	4804589	1					
ANR	4804848	ExpressionStatement	upd_pxlfwd ( upd )	3612:9:136436:136451	4804589	0	True				
ANR	4804849	CallExpression	upd_pxlfwd ( upd )		4804589	0					
ANR	4804850	Callee	upd_pxlfwd		4804589	0					
ANR	4804851	Identifier	upd_pxlfwd		4804589	0					
ANR	4804852	ArgumentList	upd		4804589	1					
ANR	4804853	Argument	upd		4804589	0					
ANR	4804854	Identifier	upd		4804589	0					
ANR	4804855	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		4804589	1					
ANR	4804856	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	3613:15:136468:136499	4804589	0	True				
ANR	4804857	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		4804589	0		&&			
ANR	4804858	RelationalExpression	0 < pwidth		4804589	0		<			
ANR	4804859	PrimaryExpression	0		4804589	0					
ANR	4804860	Identifier	pwidth		4804589	1					
ANR	4804861	UnaryOperationExpression	! upd_pxlget ( upd )		4804589	1					
ANR	4804862	UnaryOperator	!		4804589	0					
ANR	4804863	CallExpression	upd_pxlget ( upd )		4804589	1					
ANR	4804864	Callee	upd_pxlget		4804589	0					
ANR	4804865	Identifier	upd_pxlget		4804589	0					
ANR	4804866	ArgumentList	upd		4804589	1					
ANR	4804867	Argument	upd		4804589	0					
ANR	4804868	Identifier	upd		4804589	0					
ANR	4804869	ExpressionStatement	pwidth --	3613:49:136502:136510	4804589	1	True				
ANR	4804870	PostIncDecOperationExpression	pwidth --		4804589	0					
ANR	4804871	Identifier	pwidth		4804589	0					
ANR	4804872	IncDec	--		4804589	1					
ANR	4804873	ExpressionStatement	upd_pxlrev ( upd )	3616:6:136527:136542	4804589	2	True				
ANR	4804874	CallExpression	upd_pxlrev ( upd )		4804589	0					
ANR	4804875	Callee	upd_pxlrev		4804589	0					
ANR	4804876	Identifier	upd_pxlrev		4804589	0					
ANR	4804877	ArgumentList	upd		4804589	1					
ANR	4804878	Argument	upd		4804589	0					
ANR	4804879	Identifier	upd		4804589	0					
ANR	4804880	ElseStatement	else		4804589	0					
ANR	4804881	CompoundStatement		47:10:1362:1362	4804589	0					
ANR	4804882	IfStatement	if ( upd -> flags & B_YFLIP )		4804589	0					
ANR	4804883	Condition	upd -> flags & B_YFLIP	3620:9:136612:136631	4804589	0	True				
ANR	4804884	BitAndExpression	upd -> flags & B_YFLIP		4804589	0		&			
ANR	4804885	PtrMemberAccess	upd -> flags		4804589	0					
ANR	4804886	Identifier	upd		4804589	0					
ANR	4804887	Identifier	flags		4804589	1					
ANR	4804888	Identifier	B_YFLIP		4804589	1					
ANR	4804889	CompoundStatement		49:31:1441:1441	4804589	1					
ANR	4804890	ExpressionStatement	dir = - upd -> ncomp	3621:9:136645:136667	4804589	0	True				
ANR	4804891	AssignmentExpression	dir = - upd -> ncomp		4804589	0		=			
ANR	4804892	Identifier	dir		4804589	0					
ANR	4804893	UnaryOperationExpression	- upd -> ncomp		4804589	1					
ANR	4804894	UnaryOperator	-		4804589	0					
ANR	4804895	PtrMemberAccess	upd -> ncomp		4804589	1					
ANR	4804896	Identifier	upd		4804589	0					
ANR	4804897	Identifier	ncomp		4804589	1					
ANR	4804898	ExpressionStatement	rowerr += upd -> ncomp * ( pwidth - 1 )	3622:9:136678:136713	4804589	1	True				
ANR	4804899	AssignmentExpression	rowerr += upd -> ncomp * ( pwidth - 1 )		4804589	0		+=			
ANR	4804900	Identifier	rowerr		4804589	0					
ANR	4804901	MultiplicativeExpression	upd -> ncomp * ( pwidth - 1 )		4804589	1		*			
ANR	4804902	PtrMemberAccess	upd -> ncomp		4804589	0					
ANR	4804903	Identifier	upd		4804589	0					
ANR	4804904	Identifier	ncomp		4804589	1					
ANR	4804905	AdditiveExpression	pwidth - 1		4804589	1		-			
ANR	4804906	Identifier	pwidth		4804589	0					
ANR	4804907	PrimaryExpression	1		4804589	1					
ANR	4804908	ExpressionStatement	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )	3623:9:136724:136764	4804589	2	True				
ANR	4804909	AssignmentExpression	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )		4804589	0		=			
ANR	4804910	Identifier	bit		4804589	0					
ANR	4804911	ShiftExpression	0x80 >> ( ( pwidth - 1 ) & 7 )		4804589	1		>>			
ANR	4804912	PrimaryExpression	0x80		4804589	0					
ANR	4804913	BitAndExpression	( pwidth - 1 ) & 7		4804589	1		&			
ANR	4804914	AdditiveExpression	pwidth - 1		4804589	0		-			
ANR	4804915	Identifier	pwidth		4804589	0					
ANR	4804916	PrimaryExpression	1		4804589	1					
ANR	4804917	PrimaryExpression	7		4804589	1					
ANR	4804918	ExpressionStatement	ibyte = ( pwidth - 1 ) >> 3	3624:9:136775:136815	4804589	3	True				
ANR	4804919	AssignmentExpression	ibyte = ( pwidth - 1 ) >> 3		4804589	0		=			
ANR	4804920	Identifier	ibyte		4804589	0					
ANR	4804921	ShiftExpression	( pwidth - 1 ) >> 3		4804589	1		>>			
ANR	4804922	AdditiveExpression	pwidth - 1		4804589	0		-			
ANR	4804923	Identifier	pwidth		4804589	0					
ANR	4804924	PrimaryExpression	1		4804589	1					
ANR	4804925	PrimaryExpression	3		4804589	1					
ANR	4804926	ElseStatement	else		4804589	0					
ANR	4804927	CompoundStatement		54:13:1637:1637	4804589	0					
ANR	4804928	ExpressionStatement	dir = upd -> ncomp	3626:9:136841:136861	4804589	0	True				
ANR	4804929	AssignmentExpression	dir = upd -> ncomp		4804589	0		=			
ANR	4804930	Identifier	dir		4804589	0					
ANR	4804931	PtrMemberAccess	upd -> ncomp		4804589	1					
ANR	4804932	Identifier	upd		4804589	0					
ANR	4804933	Identifier	ncomp		4804589	1					
ANR	4804934	ExpressionStatement	bit = 0x80	3627:9:136872:136886	4804589	1	True				
ANR	4804935	AssignmentExpression	bit = 0x80		4804589	0		=			
ANR	4804936	Identifier	bit		4804589	0					
ANR	4804937	PrimaryExpression	0x80		4804589	1					
ANR	4804938	ExpressionStatement	ibyte = 0	3628:9:136897:136908	4804589	2	True				
ANR	4804939	AssignmentExpression	ibyte = 0		4804589	0		=			
ANR	4804940	Identifier	ibyte		4804589	0					
ANR	4804941	PrimaryExpression	0		4804589	1					
ANR	4804942	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		4804589	1					
ANR	4804943	Condition	! ( upd -> flags & B_FSWHITE )	3631:9:136928:136952	4804589	0	True				
ANR	4804944	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		4804589	0					
ANR	4804945	UnaryOperator	!		4804589	0					
ANR	4804946	BitAndExpression	upd -> flags & B_FSWHITE		4804589	1		&			
ANR	4804947	PtrMemberAccess	upd -> flags		4804589	0					
ANR	4804948	Identifier	upd		4804589	0					
ANR	4804949	Identifier	flags		4804589	1					
ANR	4804950	Identifier	B_FSWHITE		4804589	1					
ANR	4804951	CompoundStatement		60:36:1762:1762	4804589	1					
ANR	4804952	ExpressionStatement	upd_pxlrev ( upd )	3632:9:136966:136981	4804589	0	True				
ANR	4804953	CallExpression	upd_pxlrev ( upd )		4804589	0					
ANR	4804954	Callee	upd_pxlrev		4804589	0					
ANR	4804955	Identifier	upd_pxlrev		4804589	0					
ANR	4804956	ArgumentList	upd		4804589	1					
ANR	4804957	Argument	upd		4804589	0					
ANR	4804958	Identifier	upd		4804589	0					
ANR	4804959	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		4804589	1					
ANR	4804960	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	3633:15:136998:137029	4804589	0	True				
ANR	4804961	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		4804589	0		&&			
ANR	4804962	RelationalExpression	0 < pwidth		4804589	0		<			
ANR	4804963	PrimaryExpression	0		4804589	0					
ANR	4804964	Identifier	pwidth		4804589	1					
ANR	4804965	UnaryOperationExpression	! upd_pxlget ( upd )		4804589	1					
ANR	4804966	UnaryOperator	!		4804589	0					
ANR	4804967	CallExpression	upd_pxlget ( upd )		4804589	1					
ANR	4804968	Callee	upd_pxlget		4804589	0					
ANR	4804969	Identifier	upd_pxlget		4804589	0					
ANR	4804970	ArgumentList	upd		4804589	1					
ANR	4804971	Argument	upd		4804589	0					
ANR	4804972	Identifier	upd		4804589	0					
ANR	4804973	ExpressionStatement	pwidth --	3633:49:137032:137040	4804589	1	True				
ANR	4804974	PostIncDecOperationExpression	pwidth --		4804589	0					
ANR	4804975	Identifier	pwidth		4804589	0					
ANR	4804976	IncDec	--		4804589	1					
ANR	4804977	ExpressionStatement	upd_pxlfwd ( upd )	3636:6:137057:137072	4804589	2	True				
ANR	4804978	CallExpression	upd_pxlfwd ( upd )		4804589	0					
ANR	4804979	Callee	upd_pxlfwd		4804589	0					
ANR	4804980	Identifier	upd_pxlfwd		4804589	0					
ANR	4804981	ArgumentList	upd		4804589	1					
ANR	4804982	Argument	upd		4804589	0					
ANR	4804983	Identifier	upd		4804589	0					
ANR	4804984	IfStatement	if ( ! ( upd -> flags & B_FIXDIR ) )		4804589	19					
ANR	4804985	Condition	! ( upd -> flags & B_FIXDIR )	3642:6:137181:137204	4804589	0	True				
ANR	4804986	UnaryOperationExpression	! ( upd -> flags & B_FIXDIR )		4804589	0					
ANR	4804987	UnaryOperator	!		4804589	0					
ANR	4804988	BitAndExpression	upd -> flags & B_FIXDIR		4804589	1		&			
ANR	4804989	PtrMemberAccess	upd -> flags		4804589	0					
ANR	4804990	Identifier	upd		4804589	0					
ANR	4804991	Identifier	flags		4804589	1					
ANR	4804992	Identifier	B_FIXDIR		4804589	1					
ANR	4804993	ExpressionStatement	upd -> flags ^= B_REVDIR	3642:32:137207:137229	4804589	1	True				
ANR	4804994	AssignmentExpression	upd -> flags ^= B_REVDIR		4804589	0		^=			
ANR	4804995	PtrMemberAccess	upd -> flags		4804589	0					
ANR	4804996	Identifier	upd		4804589	0					
ANR	4804997	Identifier	flags		4804589	1					
ANR	4804998	Identifier	B_REVDIR		4804589	1					
ANR	4804999	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		4804589	20					
ANR	4805000	Condition	! ( upd -> flags & B_FSWHITE )	3646:6:137277:137301	4804589	0	True				
ANR	4805001	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		4804589	0					
ANR	4805002	UnaryOperator	!		4804589	0					
ANR	4805003	BitAndExpression	upd -> flags & B_FSWHITE		4804589	1		&			
ANR	4805004	PtrMemberAccess	upd -> flags		4804589	0					
ANR	4805005	Identifier	upd		4804589	0					
ANR	4805006	Identifier	flags		4804589	1					
ANR	4805007	Identifier	B_FSWHITE		4804589	1					
ANR	4805008	CompoundStatement		77:6:2164:2201	4804589	1					
ANR	4805009	ExpressionStatement	upd_proc_pxlget ( ( * fun ) ) = upd -> pxlget	3647:6:137312:137349	4804589	0	True				
ANR	4805010	AssignmentExpression	upd_proc_pxlget ( ( * fun ) ) = upd -> pxlget		4804589	0		=			
ANR	4805011	CallExpression	upd_proc_pxlget ( ( * fun ) )		4804589	0					
ANR	4805012	Callee	upd_proc_pxlget		4804589	0					
ANR	4805013	Identifier	upd_proc_pxlget		4804589	0					
ANR	4805014	ArgumentList	* fun		4804589	1					
ANR	4805015	Argument	* fun		4804589	0					
ANR	4805016	UnaryOperationExpression	* fun		4804589	0					
ANR	4805017	UnaryOperator	*		4804589	0					
ANR	4805018	Identifier	fun		4804589	1					
ANR	4805019	PtrMemberAccess	upd -> pxlget		4804589	1					
ANR	4805020	Identifier	upd		4804589	0					
ANR	4805021	Identifier	pxlget		4804589	1					
ANR	4805022	IdentifierDeclStatement	byte * ptr = upd -> pxlptr ;	3648:6:137357:137394	4804589	1	True				
ANR	4805023	IdentifierDecl	* ptr = upd -> pxlptr		4804589	0					
ANR	4805024	IdentifierDeclType	byte *		4804589	0					
ANR	4805025	Identifier	ptr		4804589	1					
ANR	4805026	AssignmentExpression	* ptr = upd -> pxlptr		4804589	2		=			
ANR	4805027	Identifier	ptr		4804589	0					
ANR	4805028	PtrMemberAccess	upd -> pxlptr		4804589	1					
ANR	4805029	Identifier	upd		4804589	0					
ANR	4805030	Identifier	pxlptr		4804589	1					
ANR	4805031	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		4804589	2					
ANR	4805032	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	3649:12:137408:137439	4804589	0	True				
ANR	4805033	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		4804589	0		&&			
ANR	4805034	RelationalExpression	0 < pwidth		4804589	0		<			
ANR	4805035	PrimaryExpression	0		4804589	0					
ANR	4805036	Identifier	pwidth		4804589	1					
ANR	4805037	UnaryOperationExpression	! upd_pxlget ( upd )		4804589	1					
ANR	4805038	UnaryOperator	!		4804589	0					
ANR	4805039	CallExpression	upd_pxlget ( upd )		4804589	1					
ANR	4805040	Callee	upd_pxlget		4804589	0					
ANR	4805041	Identifier	upd_pxlget		4804589	0					
ANR	4805042	ArgumentList	upd		4804589	1					
ANR	4805043	Argument	upd		4804589	0					
ANR	4805044	Identifier	upd		4804589	0					
ANR	4805045	CompoundStatement		78:46:2249:2249	4804589	1					
ANR	4805046	ExpressionStatement	pwidth --	3650:9:137453:137461	4804589	0	True				
ANR	4805047	PostIncDecOperationExpression	pwidth --		4804589	0					
ANR	4805048	Identifier	pwidth		4804589	0					
ANR	4805049	IncDec	--		4804589	1					
ANR	4805050	ExpressionStatement	fun = upd -> pxlget	3651:9:137472:137489	4804589	1	True				
ANR	4805051	AssignmentExpression	fun = upd -> pxlget		4804589	0		=			
ANR	4805052	Identifier	fun		4804589	0					
ANR	4805053	PtrMemberAccess	upd -> pxlget		4804589	1					
ANR	4805054	Identifier	upd		4804589	0					
ANR	4805055	Identifier	pxlget		4804589	1					
ANR	4805056	ExpressionStatement	ptr = upd -> pxlptr	3652:9:137500:137517	4804589	2	True				
ANR	4805057	AssignmentExpression	ptr = upd -> pxlptr		4804589	0		=			
ANR	4805058	Identifier	ptr		4804589	0					
ANR	4805059	PtrMemberAccess	upd -> pxlptr		4804589	1					
ANR	4805060	Identifier	upd		4804589	0					
ANR	4805061	Identifier	pxlptr		4804589	1					
ANR	4805062	Statement	S_FSTEP	3653:9:137528:137534	4804589	3	True				
ANR	4805063	ExpressionStatement	upd -> pxlget = fun	3655:6:137550:137567	4804589	3	True				
ANR	4805064	AssignmentExpression	upd -> pxlget = fun		4804589	0		=			
ANR	4805065	PtrMemberAccess	upd -> pxlget		4804589	0					
ANR	4805066	Identifier	upd		4804589	0					
ANR	4805067	Identifier	pxlget		4804589	1					
ANR	4805068	Identifier	fun		4804589	1					
ANR	4805069	ExpressionStatement	upd -> pxlptr = ptr	3656:6:137575:137592	4804589	4	True				
ANR	4805070	AssignmentExpression	upd -> pxlptr = ptr		4804589	0		=			
ANR	4805071	PtrMemberAccess	upd -> pxlptr		4804589	0					
ANR	4805072	Identifier	upd		4804589	0					
ANR	4805073	Identifier	pxlptr		4804589	1					
ANR	4805074	Identifier	ptr		4804589	1					
ANR	4805075	ExpressionStatement	iblack = - 1	3661:2:137652:137663	4804589	21	True				
ANR	4805076	AssignmentExpression	iblack = - 1		4804589	0		=			
ANR	4805077	Identifier	iblack		4804589	0					
ANR	4805078	UnaryOperationExpression	- 1		4804589	1					
ANR	4805079	UnaryOperator	-		4804589	0					
ANR	4805080	PrimaryExpression	1		4804589	1					
ANR	4805081	ExpressionStatement	bblack = 0	3662:2:137667:137678	4804589	22	True				
ANR	4805082	AssignmentExpression	bblack = 0		4804589	0		=			
ANR	4805083	Identifier	bblack		4804589	0					
ANR	4805084	PrimaryExpression	0		4804589	1					
ANR	4805085	IfStatement	if ( ( 4 == upd -> ncomp ) && ( B_REDUCEK & upd -> flags ) )		4804589	23					
ANR	4805086	Condition	( 4 == upd -> ncomp ) && ( B_REDUCEK & upd -> flags )	3663:5:137685:137729	4804589	0	True				
ANR	4805087	AndExpression	( 4 == upd -> ncomp ) && ( B_REDUCEK & upd -> flags )		4804589	0		&&			
ANR	4805088	EqualityExpression	4 == upd -> ncomp		4804589	0		==			
ANR	4805089	PrimaryExpression	4		4804589	0					
ANR	4805090	PtrMemberAccess	upd -> ncomp		4804589	1					
ANR	4805091	Identifier	upd		4804589	0					
ANR	4805092	Identifier	ncomp		4804589	1					
ANR	4805093	BitAndExpression	B_REDUCEK & upd -> flags		4804589	1		&			
ANR	4805094	Identifier	B_REDUCEK		4804589	0					
ANR	4805095	PtrMemberAccess	upd -> flags		4804589	1					
ANR	4805096	Identifier	upd		4804589	0					
ANR	4805097	Identifier	flags		4804589	1					
ANR	4805098	CompoundStatement		92:52:2539:2539	4804589	1					
ANR	4805099	ExpressionStatement	iblack = upd -> cmap [ 0 ] . comp	3664:4:137738:137764	4804589	0	True				
ANR	4805100	AssignmentExpression	iblack = upd -> cmap [ 0 ] . comp		4804589	0		=			
ANR	4805101	Identifier	iblack		4804589	0					
ANR	4805102	MemberAccess	upd -> cmap [ 0 ] . comp		4804589	1					
ANR	4805103	ArrayIndexing	upd -> cmap [ 0 ]		4804589	0					
ANR	4805104	PtrMemberAccess	upd -> cmap		4804589	0					
ANR	4805105	Identifier	upd		4804589	0					
ANR	4805106	Identifier	cmap		4804589	1					
ANR	4805107	PrimaryExpression	0		4804589	1					
ANR	4805108	Identifier	comp		4804589	1					
ANR	4805109	ExpressionStatement	bblack = 1 << iblack	3665:4:137770:137788	4804589	1	True				
ANR	4805110	AssignmentExpression	bblack = 1 << iblack		4804589	0		=			
ANR	4805111	Identifier	bblack		4804589	0					
ANR	4805112	ShiftExpression	1 << iblack		4804589	1		<<			
ANR	4805113	PrimaryExpression	1		4804589	0					
ANR	4805114	Identifier	iblack		4804589	1					
ANR	4805115	ExpressionStatement	first = true	3670:3:137826:137838	4804589	24	True				
ANR	4805116	AssignmentExpression	first = true		4804589	0		=			
ANR	4805117	Identifier	first		4804589	0					
ANR	4805118	Identifier	true		4804589	1					
ANR	4805119	WhileStatement	while ( 0 < pwidth -- )		4804589	25					
ANR	4805120	Condition	0 < pwidth --	3671:9:137849:137860	4804589	0	True				
ANR	4805121	RelationalExpression	0 < pwidth --		4804589	0		<			
ANR	4805122	PrimaryExpression	0		4804589	0					
ANR	4805123	PostIncDecOperationExpression	pwidth --		4804589	1					
ANR	4805124	Identifier	pwidth		4804589	0					
ANR	4805125	IncDec	--		4804589	1					
ANR	4805126	CompoundStatement		100:23:2670:2670	4804589	1					
ANR	4805127	ExpressionStatement	pxlset = 0	3675:6:137931:137941	4804589	0	True				
ANR	4805128	AssignmentExpression	pxlset = 0		4804589	0		=			
ANR	4805129	Identifier	pxlset		4804589	0					
ANR	4805130	PrimaryExpression	0		4804589	1					
ANR	4805131	ExpressionStatement	ci = upd_pxlget ( upd )	3676:6:137949:137969	4804589	1	True				
ANR	4805132	AssignmentExpression	ci = upd_pxlget ( upd )		4804589	0		=			
ANR	4805133	Identifier	ci		4804589	0					
ANR	4805134	CallExpression	upd_pxlget ( upd )		4804589	1					
ANR	4805135	Callee	upd_pxlget		4804589	0					
ANR	4805136	Identifier	upd_pxlget		4804589	0					
ANR	4805137	ArgumentList	upd		4804589	1					
ANR	4805138	Argument	upd		4804589	0					
ANR	4805139	Identifier	upd		4804589	0					
ANR	4805140	SwitchStatement	switch ( upd -> ncomp )		4804589	2					
ANR	4805141	Condition	upd -> ncomp	3677:13:137984:137993	4804589	0	True				
ANR	4805142	PtrMemberAccess	upd -> ncomp		4804589	0					
ANR	4805143	Identifier	upd		4804589	0					
ANR	4805144	Identifier	ncomp		4804589	1					
ANR	4805145	CompoundStatement		106:25:2803:2803	4804589	1					
ANR	4805146	Label	case 4 :	3678:9:138007:138013	4804589	0	True				
ANR	4805147	Statement	FS_M_ROWERR	3678:18:138016:138026	4804589	1	True				
ANR	4805148	Statement	(	3678:29:138027:138027	4804589	2	True				
ANR	4805149	Statement	3	3678:30:138028:138028	4804589	3	True				
ANR	4805150	Statement	)	3678:31:138029:138029	4804589	4	True				
ANR	4805151	Statement	FS_GOAL	3679:18:138049:138055	4804589	5	True				
ANR	4805152	Statement	(	3679:25:138056:138056	4804589	6	True				
ANR	4805153	Statement	comp	3679:26:138057:138060	4804589	7	True				
ANR	4805154	Statement	[	3679:30:138061:138061	4804589	8	True				
ANR	4805155	Statement	3	3679:31:138062:138062	4804589	9	True				
ANR	4805156	Statement	]	3679:32:138063:138063	4804589	10	True				
ANR	4805157	Statement	->	3679:33:138064:138065	4804589	11	True				
ANR	4805158	Statement	bitmsk	3679:35:138066:138071	4804589	12	True				
ANR	4805159	Statement	&	3679:42:138073:138073	4804589	13	True				
ANR	4805160	Statement	(	3679:44:138075:138075	4804589	14	True				
ANR	4805161	Statement	ci	3679:45:138076:138077	4804589	15	True				
ANR	4805162	Statement	>>	3679:48:138079:138080	4804589	16	True				
ANR	4805163	Statement	comp	3679:51:138082:138085	4804589	17	True				
ANR	4805164	Statement	[	3679:55:138086:138086	4804589	18	True				
ANR	4805165	Statement	3	3679:56:138087:138087	4804589	19	True				
ANR	4805166	Statement	]	3679:57:138088:138088	4804589	20	True				
ANR	4805167	Statement	->	3679:58:138089:138090	4804589	21	True				
ANR	4805168	Statement	bitshf	3679:60:138091:138096	4804589	22	True				
ANR	4805169	Statement	)	3679:66:138097:138097	4804589	23	True				
ANR	4805170	Statement	","	3679:67:138098:138098	4804589	24	True				
ANR	4805171	Statement	3	3679:68:138099:138099	4804589	25	True				
ANR	4805172	Statement	)	3679:69:138100:138100	4804589	26	True				
ANR	4805173	IfStatement	if ( pixel [ 3 ] > comp [ 3 ] -> threshold )		4804589	27					
ANR	4805174	Condition	pixel [ 3 ] > comp [ 3 ] -> threshold	3680:21:138123:138152	4804589	0	True				
ANR	4805175	RelationalExpression	pixel [ 3 ] > comp [ 3 ] -> threshold		4804589	0		>			
ANR	4805176	ArrayIndexing	pixel [ 3 ]		4804589	0					
ANR	4805177	Identifier	pixel		4804589	0					
ANR	4805178	PrimaryExpression	3		4804589	1					
ANR	4805179	PtrMemberAccess	comp [ 3 ] -> threshold		4804589	1					
ANR	4805180	ArrayIndexing	comp [ 3 ]		4804589	0					
ANR	4805181	Identifier	comp		4804589	0					
ANR	4805182	PrimaryExpression	3		4804589	1					
ANR	4805183	Identifier	threshold		4804589	1					
ANR	4805184	CompoundStatement		109:53:2962:2962	4804589	1					
ANR	4805185	ExpressionStatement	pixel [ 3 ] -= comp [ 3 ] -> spotsize	3681:21:138191:138220	4804589	0	True				
ANR	4805186	AssignmentExpression	pixel [ 3 ] -= comp [ 3 ] -> spotsize		4804589	0		-=			
ANR	4805187	ArrayIndexing	pixel [ 3 ]		4804589	0					
ANR	4805188	Identifier	pixel		4804589	0					
ANR	4805189	PrimaryExpression	3		4804589	1					
ANR	4805190	PtrMemberAccess	comp [ 3 ] -> spotsize		4804589	1					
ANR	4805191	ArrayIndexing	comp [ 3 ]		4804589	0					
ANR	4805192	Identifier	comp		4804589	0					
ANR	4805193	PrimaryExpression	3		4804589	1					
ANR	4805194	Identifier	spotsize		4804589	1					
ANR	4805195	ExpressionStatement	scan [ 3 ] . bytes [ ibyte ] |= bit	3682:22:138244:138271	4804589	1	True				
ANR	4805196	AssignmentExpression	scan [ 3 ] . bytes [ ibyte ] |= bit		4804589	0		|=			
ANR	4805197	ArrayIndexing	scan [ 3 ] . bytes [ ibyte ]		4804589	0					
ANR	4805198	MemberAccess	scan [ 3 ] . bytes		4804589	0					
ANR	4805199	ArrayIndexing	scan [ 3 ]		4804589	0					
ANR	4805200	Identifier	scan		4804589	0					
ANR	4805201	PrimaryExpression	3		4804589	1					
ANR	4805202	Identifier	bytes		4804589	1					
ANR	4805203	Identifier	ibyte		4804589	1					
ANR	4805204	Identifier	bit		4804589	1					
ANR	4805205	ExpressionStatement	pxlset |= 8	3683:22:138295:138307	4804589	2	True				
ANR	4805206	AssignmentExpression	pxlset |= 8		4804589	0		|=			
ANR	4805207	Identifier	pxlset		4804589	0					
ANR	4805208	PrimaryExpression	8		4804589	1					
ANR	4805209	Statement	FS_DIST	3685:18:138395:138401	4804589	28	True				
ANR	4805210	Statement	(	3685:25:138402:138402	4804589	29	True				
ANR	4805211	Statement	3	3685:26:138403:138403	4804589	30	True				
ANR	4805212	Statement	)	3685:27:138404:138404	4804589	31	True				
ANR	4805213	Label	case 3 :	3688:9:138451:138457	4804589	32	True				
ANR	4805214	Statement	FS_M_ROWERR	3688:18:138460:138470	4804589	33	True				
ANR	4805215	Statement	(	3688:29:138471:138471	4804589	34	True				
ANR	4805216	Statement	2	3688:30:138472:138472	4804589	35	True				
ANR	4805217	Statement	)	3688:31:138473:138473	4804589	36	True				
ANR	4805218	Statement	FS_GOAL	3689:18:138493:138499	4804589	37	True				
ANR	4805219	Statement	(	3689:25:138500:138500	4804589	38	True				
ANR	4805220	Statement	comp	3689:26:138501:138504	4804589	39	True				
ANR	4805221	Statement	[	3689:30:138505:138505	4804589	40	True				
ANR	4805222	Statement	2	3689:31:138506:138506	4804589	41	True				
ANR	4805223	Statement	]	3689:32:138507:138507	4804589	42	True				
ANR	4805224	Statement	->	3689:33:138508:138509	4804589	43	True				
ANR	4805225	Statement	bitmsk	3689:35:138510:138515	4804589	44	True				
ANR	4805226	Statement	&	3689:42:138517:138517	4804589	45	True				
ANR	4805227	Statement	(	3689:44:138519:138519	4804589	46	True				
ANR	4805228	Statement	ci	3689:45:138520:138521	4804589	47	True				
ANR	4805229	Statement	>>	3689:48:138523:138524	4804589	48	True				
ANR	4805230	Statement	comp	3689:51:138526:138529	4804589	49	True				
ANR	4805231	Statement	[	3689:55:138530:138530	4804589	50	True				
ANR	4805232	Statement	2	3689:56:138531:138531	4804589	51	True				
ANR	4805233	Statement	]	3689:57:138532:138532	4804589	52	True				
ANR	4805234	Statement	->	3689:58:138533:138534	4804589	53	True				
ANR	4805235	Statement	bitshf	3689:60:138535:138540	4804589	54	True				
ANR	4805236	Statement	)	3689:66:138541:138541	4804589	55	True				
ANR	4805237	Statement	","	3689:67:138542:138542	4804589	56	True				
ANR	4805238	Statement	2	3689:68:138543:138543	4804589	57	True				
ANR	4805239	Statement	)	3689:69:138544:138544	4804589	58	True				
ANR	4805240	IfStatement	if ( pixel [ 2 ] > comp [ 2 ] -> threshold )		4804589	59					
ANR	4805241	Condition	pixel [ 2 ] > comp [ 2 ] -> threshold	3690:21:138567:138596	4804589	0	True				
ANR	4805242	RelationalExpression	pixel [ 2 ] > comp [ 2 ] -> threshold		4804589	0		>			
ANR	4805243	ArrayIndexing	pixel [ 2 ]		4804589	0					
ANR	4805244	Identifier	pixel		4804589	0					
ANR	4805245	PrimaryExpression	2		4804589	1					
ANR	4805246	PtrMemberAccess	comp [ 2 ] -> threshold		4804589	1					
ANR	4805247	ArrayIndexing	comp [ 2 ]		4804589	0					
ANR	4805248	Identifier	comp		4804589	0					
ANR	4805249	PrimaryExpression	2		4804589	1					
ANR	4805250	Identifier	threshold		4804589	1					
ANR	4805251	CompoundStatement		119:53:3406:3406	4804589	1					
ANR	4805252	ExpressionStatement	pixel [ 2 ] -= comp [ 2 ] -> spotsize	3691:21:138635:138664	4804589	0	True				
ANR	4805253	AssignmentExpression	pixel [ 2 ] -= comp [ 2 ] -> spotsize		4804589	0		-=			
ANR	4805254	ArrayIndexing	pixel [ 2 ]		4804589	0					
ANR	4805255	Identifier	pixel		4804589	0					
ANR	4805256	PrimaryExpression	2		4804589	1					
ANR	4805257	PtrMemberAccess	comp [ 2 ] -> spotsize		4804589	1					
ANR	4805258	ArrayIndexing	comp [ 2 ]		4804589	0					
ANR	4805259	Identifier	comp		4804589	0					
ANR	4805260	PrimaryExpression	2		4804589	1					
ANR	4805261	Identifier	spotsize		4804589	1					
ANR	4805262	ExpressionStatement	scan [ 2 ] . bytes [ ibyte ] |= bit	3692:22:138688:138715	4804589	1	True				
ANR	4805263	AssignmentExpression	scan [ 2 ] . bytes [ ibyte ] |= bit		4804589	0		|=			
ANR	4805264	ArrayIndexing	scan [ 2 ] . bytes [ ibyte ]		4804589	0					
ANR	4805265	MemberAccess	scan [ 2 ] . bytes		4804589	0					
ANR	4805266	ArrayIndexing	scan [ 2 ]		4804589	0					
ANR	4805267	Identifier	scan		4804589	0					
ANR	4805268	PrimaryExpression	2		4804589	1					
ANR	4805269	Identifier	bytes		4804589	1					
ANR	4805270	Identifier	ibyte		4804589	1					
ANR	4805271	Identifier	bit		4804589	1					
ANR	4805272	ExpressionStatement	pxlset |= 4	3693:22:138739:138751	4804589	2	True				
ANR	4805273	AssignmentExpression	pxlset |= 4		4804589	0		|=			
ANR	4805274	Identifier	pxlset		4804589	0					
ANR	4805275	PrimaryExpression	4		4804589	1					
ANR	4805276	Statement	FS_DIST	3695:18:138839:138845	4804589	60	True				
ANR	4805277	Statement	(	3695:25:138846:138846	4804589	61	True				
ANR	4805278	Statement	2	3695:26:138847:138847	4804589	62	True				
ANR	4805279	Statement	)	3695:27:138848:138848	4804589	63	True				
ANR	4805280	Statement	FS_M_ROWERR	3697:18:138869:138879	4804589	64	True				
ANR	4805281	Statement	(	3697:29:138880:138880	4804589	65	True				
ANR	4805282	Statement	1	3697:30:138881:138881	4804589	66	True				
ANR	4805283	Statement	)	3697:31:138882:138882	4804589	67	True				
ANR	4805284	Statement	FS_GOAL	3698:18:138902:138908	4804589	68	True				
ANR	4805285	Statement	(	3698:25:138909:138909	4804589	69	True				
ANR	4805286	Statement	comp	3698:26:138910:138913	4804589	70	True				
ANR	4805287	Statement	[	3698:30:138914:138914	4804589	71	True				
ANR	4805288	Statement	1	3698:31:138915:138915	4804589	72	True				
ANR	4805289	Statement	]	3698:32:138916:138916	4804589	73	True				
ANR	4805290	Statement	->	3698:33:138917:138918	4804589	74	True				
ANR	4805291	Statement	bitmsk	3698:35:138919:138924	4804589	75	True				
ANR	4805292	Statement	&	3698:42:138926:138926	4804589	76	True				
ANR	4805293	Statement	(	3698:44:138928:138928	4804589	77	True				
ANR	4805294	Statement	ci	3698:45:138929:138930	4804589	78	True				
ANR	4805295	Statement	>>	3698:48:138932:138933	4804589	79	True				
ANR	4805296	Statement	comp	3698:51:138935:138938	4804589	80	True				
ANR	4805297	Statement	[	3698:55:138939:138939	4804589	81	True				
ANR	4805298	Statement	1	3698:56:138940:138940	4804589	82	True				
ANR	4805299	Statement	]	3698:57:138941:138941	4804589	83	True				
ANR	4805300	Statement	->	3698:58:138942:138943	4804589	84	True				
ANR	4805301	Statement	bitshf	3698:60:138944:138949	4804589	85	True				
ANR	4805302	Statement	)	3698:66:138950:138950	4804589	86	True				
ANR	4805303	Statement	","	3698:67:138951:138951	4804589	87	True				
ANR	4805304	Statement	1	3698:68:138952:138952	4804589	88	True				
ANR	4805305	Statement	)	3698:69:138953:138953	4804589	89	True				
ANR	4805306	IfStatement	if ( pixel [ 1 ] > comp [ 1 ] -> threshold )		4804589	90					
ANR	4805307	Condition	pixel [ 1 ] > comp [ 1 ] -> threshold	3699:21:138976:139005	4804589	0	True				
ANR	4805308	RelationalExpression	pixel [ 1 ] > comp [ 1 ] -> threshold		4804589	0		>			
ANR	4805309	ArrayIndexing	pixel [ 1 ]		4804589	0					
ANR	4805310	Identifier	pixel		4804589	0					
ANR	4805311	PrimaryExpression	1		4804589	1					
ANR	4805312	PtrMemberAccess	comp [ 1 ] -> threshold		4804589	1					
ANR	4805313	ArrayIndexing	comp [ 1 ]		4804589	0					
ANR	4805314	Identifier	comp		4804589	0					
ANR	4805315	PrimaryExpression	1		4804589	1					
ANR	4805316	Identifier	threshold		4804589	1					
ANR	4805317	CompoundStatement		128:53:3815:3815	4804589	1					
ANR	4805318	ExpressionStatement	pixel [ 1 ] -= comp [ 1 ] -> spotsize	3700:21:139044:139073	4804589	0	True				
ANR	4805319	AssignmentExpression	pixel [ 1 ] -= comp [ 1 ] -> spotsize		4804589	0		-=			
ANR	4805320	ArrayIndexing	pixel [ 1 ]		4804589	0					
ANR	4805321	Identifier	pixel		4804589	0					
ANR	4805322	PrimaryExpression	1		4804589	1					
ANR	4805323	PtrMemberAccess	comp [ 1 ] -> spotsize		4804589	1					
ANR	4805324	ArrayIndexing	comp [ 1 ]		4804589	0					
ANR	4805325	Identifier	comp		4804589	0					
ANR	4805326	PrimaryExpression	1		4804589	1					
ANR	4805327	Identifier	spotsize		4804589	1					
ANR	4805328	ExpressionStatement	scan [ 1 ] . bytes [ ibyte ] |= bit	3701:22:139097:139124	4804589	1	True				
ANR	4805329	AssignmentExpression	scan [ 1 ] . bytes [ ibyte ] |= bit		4804589	0		|=			
ANR	4805330	ArrayIndexing	scan [ 1 ] . bytes [ ibyte ]		4804589	0					
ANR	4805331	MemberAccess	scan [ 1 ] . bytes		4804589	0					
ANR	4805332	ArrayIndexing	scan [ 1 ]		4804589	0					
ANR	4805333	Identifier	scan		4804589	0					
ANR	4805334	PrimaryExpression	1		4804589	1					
ANR	4805335	Identifier	bytes		4804589	1					
ANR	4805336	Identifier	ibyte		4804589	1					
ANR	4805337	Identifier	bit		4804589	1					
ANR	4805338	ExpressionStatement	pxlset |= 2	3702:22:139148:139160	4804589	2	True				
ANR	4805339	AssignmentExpression	pxlset |= 2		4804589	0		|=			
ANR	4805340	Identifier	pxlset		4804589	0					
ANR	4805341	PrimaryExpression	2		4804589	1					
ANR	4805342	Statement	FS_DIST	3704:18:139248:139254	4804589	91	True				
ANR	4805343	Statement	(	3704:25:139255:139255	4804589	92	True				
ANR	4805344	Statement	1	3704:26:139256:139256	4804589	93	True				
ANR	4805345	Statement	)	3704:27:139257:139257	4804589	94	True				
ANR	4805346	Label	default :	3707:9:139304:139311	4804589	95	True				
ANR	4805347	Identifier	default		4804589	0					
ANR	4805348	Statement	FS_M_ROWERR	3707:18:139313:139323	4804589	96	True				
ANR	4805349	Statement	(	3707:29:139324:139324	4804589	97	True				
ANR	4805350	Statement	0	3707:30:139325:139325	4804589	98	True				
ANR	4805351	Statement	)	3707:31:139326:139326	4804589	99	True				
ANR	4805352	Statement	FS_GOAL	3708:18:139346:139352	4804589	100	True				
ANR	4805353	Statement	(	3708:25:139353:139353	4804589	101	True				
ANR	4805354	Statement	comp	3708:26:139354:139357	4804589	102	True				
ANR	4805355	Statement	[	3708:30:139358:139358	4804589	103	True				
ANR	4805356	Statement	0	3708:31:139359:139359	4804589	104	True				
ANR	4805357	Statement	]	3708:32:139360:139360	4804589	105	True				
ANR	4805358	Statement	->	3708:33:139361:139362	4804589	106	True				
ANR	4805359	Statement	bitmsk	3708:35:139363:139368	4804589	107	True				
ANR	4805360	Statement	&	3708:42:139370:139370	4804589	108	True				
ANR	4805361	Statement	(	3708:44:139372:139372	4804589	109	True				
ANR	4805362	Statement	ci	3708:45:139373:139374	4804589	110	True				
ANR	4805363	Statement	>>	3708:48:139376:139377	4804589	111	True				
ANR	4805364	Statement	comp	3708:51:139379:139382	4804589	112	True				
ANR	4805365	Statement	[	3708:55:139383:139383	4804589	113	True				
ANR	4805366	Statement	0	3708:56:139384:139384	4804589	114	True				
ANR	4805367	Statement	]	3708:57:139385:139385	4804589	115	True				
ANR	4805368	Statement	->	3708:58:139386:139387	4804589	116	True				
ANR	4805369	Statement	bitshf	3708:60:139388:139393	4804589	117	True				
ANR	4805370	Statement	)	3708:66:139394:139394	4804589	118	True				
ANR	4805371	Statement	","	3708:67:139395:139395	4804589	119	True				
ANR	4805372	Statement	0	3708:68:139396:139396	4804589	120	True				
ANR	4805373	Statement	)	3708:69:139397:139397	4804589	121	True				
ANR	4805374	IfStatement	if ( pixel [ 0 ] > comp [ 0 ] -> threshold )		4804589	122					
ANR	4805375	Condition	pixel [ 0 ] > comp [ 0 ] -> threshold	3709:21:139420:139449	4804589	0	True				
ANR	4805376	RelationalExpression	pixel [ 0 ] > comp [ 0 ] -> threshold		4804589	0		>			
ANR	4805377	ArrayIndexing	pixel [ 0 ]		4804589	0					
ANR	4805378	Identifier	pixel		4804589	0					
ANR	4805379	PrimaryExpression	0		4804589	1					
ANR	4805380	PtrMemberAccess	comp [ 0 ] -> threshold		4804589	1					
ANR	4805381	ArrayIndexing	comp [ 0 ]		4804589	0					
ANR	4805382	Identifier	comp		4804589	0					
ANR	4805383	PrimaryExpression	0		4804589	1					
ANR	4805384	Identifier	threshold		4804589	1					
ANR	4805385	CompoundStatement		138:53:4259:4259	4804589	1					
ANR	4805386	ExpressionStatement	pixel [ 0 ] -= comp [ 0 ] -> spotsize	3710:21:139488:139517	4804589	0	True				
ANR	4805387	AssignmentExpression	pixel [ 0 ] -= comp [ 0 ] -> spotsize		4804589	0		-=			
ANR	4805388	ArrayIndexing	pixel [ 0 ]		4804589	0					
ANR	4805389	Identifier	pixel		4804589	0					
ANR	4805390	PrimaryExpression	0		4804589	1					
ANR	4805391	PtrMemberAccess	comp [ 0 ] -> spotsize		4804589	1					
ANR	4805392	ArrayIndexing	comp [ 0 ]		4804589	0					
ANR	4805393	Identifier	comp		4804589	0					
ANR	4805394	PrimaryExpression	0		4804589	1					
ANR	4805395	Identifier	spotsize		4804589	1					
ANR	4805396	ExpressionStatement	scan [ 0 ] . bytes [ ibyte ] |= bit	3711:22:139541:139568	4804589	1	True				
ANR	4805397	AssignmentExpression	scan [ 0 ] . bytes [ ibyte ] |= bit		4804589	0		|=			
ANR	4805398	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		4804589	0					
ANR	4805399	MemberAccess	scan [ 0 ] . bytes		4804589	0					
ANR	4805400	ArrayIndexing	scan [ 0 ]		4804589	0					
ANR	4805401	Identifier	scan		4804589	0					
ANR	4805402	PrimaryExpression	0		4804589	1					
ANR	4805403	Identifier	bytes		4804589	1					
ANR	4805404	Identifier	ibyte		4804589	1					
ANR	4805405	Identifier	bit		4804589	1					
ANR	4805406	ExpressionStatement	pxlset |= 1	3712:22:139592:139604	4804589	2	True				
ANR	4805407	AssignmentExpression	pxlset |= 1		4804589	0		|=			
ANR	4805408	Identifier	pxlset		4804589	0					
ANR	4805409	PrimaryExpression	1		4804589	1					
ANR	4805410	Statement	FS_DIST	3714:18:139692:139698	4804589	123	True				
ANR	4805411	Statement	(	3714:25:139699:139699	4804589	124	True				
ANR	4805412	Statement	0	3714:26:139700:139700	4804589	125	True				
ANR	4805413	Statement	)	3714:27:139701:139701	4804589	126	True				
ANR	4805414	IfStatement	if ( bblack )		4804589	3					
ANR	4805415	Condition	bblack	3719:9:139749:139754	4804589	0	True				
ANR	4805416	Identifier	bblack		4804589	0					
ANR	4805417	CompoundStatement		148:17:4564:4564	4804589	1					
ANR	4805418	IfStatement	if ( pxlset & bblack )		4804589	0					
ANR	4805419	Condition	pxlset & bblack	3720:11:139770:139784	4804589	0	True				
ANR	4805420	BitAndExpression	pxlset & bblack		4804589	0		&			
ANR	4805421	Identifier	pxlset		4804589	0					
ANR	4805422	Identifier	bblack		4804589	1					
ANR	4805423	ExpressionStatement	pxlset |= 15	3720:28:139787:139799	4804589	1	True				
ANR	4805424	AssignmentExpression	pxlset |= 15		4804589	0		|=			
ANR	4805425	Identifier	pxlset		4804589	0					
ANR	4805426	PrimaryExpression	15		4804589	1					
ANR	4805427	SwitchStatement	switch ( pxlset )		4804589	1					
ANR	4805428	Condition	pxlset	3721:15:139816:139821	4804589	0	True				
ANR	4805429	Identifier	pxlset		4804589	0					
ANR	4805430	CompoundStatement		150:23:4631:4631	4804589	1					
ANR	4805431	Label	case 0 :	3722:10:139836:139843	4804589	0	True				
ANR	4805432	Label	case 1 :	3723:10:139855:139862	4804589	1	True				
ANR	4805433	Label	case 2 :	3724:10:139874:139881	4804589	2	True				
ANR	4805434	Label	case 4 :	3725:10:139893:139900	4804589	3	True				
ANR	4805435	Label	case 8 :	3726:10:139912:139919	4804589	4	True				
ANR	4805436	Label	case 3 :	3727:10:139931:139938	4804589	5	True				
ANR	4805437	Label	case 5 :	3728:10:139950:139957	4804589	6	True				
ANR	4805438	Label	case 9 :	3729:10:139969:139976	4804589	7	True				
ANR	4805439	Label	case 6 :	3730:10:139988:139995	4804589	8	True				
ANR	4805440	Label	case 10 :	3731:10:140007:140014	4804589	9	True				
ANR	4805441	Label	case 12 :	3732:10:140026:140033	4804589	10	True				
ANR	4805442	BreakStatement	break ;	3733:12:140047:140052	4804589	11	True				
ANR	4805443	Label	default :	3734:10:140064:140071	4804589	12	True				
ANR	4805444	Identifier	default		4804589	0					
ANR	4805445	ExpressionStatement	scan [ 0 ] . bytes [ ibyte ] &= ~bit	3735:12:140085:140118	4804589	13	True				
ANR	4805446	AssignmentExpression	scan [ 0 ] . bytes [ ibyte ] &= ~bit		4804589	0		&=			
ANR	4805447	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		4804589	0					
ANR	4805448	MemberAccess	scan [ 0 ] . bytes		4804589	0					
ANR	4805449	ArrayIndexing	scan [ 0 ]		4804589	0					
ANR	4805450	Identifier	scan		4804589	0					
ANR	4805451	PrimaryExpression	0		4804589	1					
ANR	4805452	Identifier	bytes		4804589	1					
ANR	4805453	Identifier	ibyte		4804589	1					
ANR	4805454	Identifier	~bit		4804589	1					
ANR	4805455	ExpressionStatement	scan [ 1 ] . bytes [ ibyte ] &= ~bit	3736:12:140132:140165	4804589	14	True				
ANR	4805456	AssignmentExpression	scan [ 1 ] . bytes [ ibyte ] &= ~bit		4804589	0		&=			
ANR	4805457	ArrayIndexing	scan [ 1 ] . bytes [ ibyte ]		4804589	0					
ANR	4805458	MemberAccess	scan [ 1 ] . bytes		4804589	0					
ANR	4805459	ArrayIndexing	scan [ 1 ]		4804589	0					
ANR	4805460	Identifier	scan		4804589	0					
ANR	4805461	PrimaryExpression	1		4804589	1					
ANR	4805462	Identifier	bytes		4804589	1					
ANR	4805463	Identifier	ibyte		4804589	1					
ANR	4805464	Identifier	~bit		4804589	1					
ANR	4805465	ExpressionStatement	scan [ 2 ] . bytes [ ibyte ] &= ~bit	3737:12:140179:140212	4804589	15	True				
ANR	4805466	AssignmentExpression	scan [ 2 ] . bytes [ ibyte ] &= ~bit		4804589	0		&=			
ANR	4805467	ArrayIndexing	scan [ 2 ] . bytes [ ibyte ]		4804589	0					
ANR	4805468	MemberAccess	scan [ 2 ] . bytes		4804589	0					
ANR	4805469	ArrayIndexing	scan [ 2 ]		4804589	0					
ANR	4805470	Identifier	scan		4804589	0					
ANR	4805471	PrimaryExpression	2		4804589	1					
ANR	4805472	Identifier	bytes		4804589	1					
ANR	4805473	Identifier	ibyte		4804589	1					
ANR	4805474	Identifier	~bit		4804589	1					
ANR	4805475	ExpressionStatement	scan [ 3 ] . bytes [ ibyte ] &= ~bit	3738:12:140226:140259	4804589	16	True				
ANR	4805476	AssignmentExpression	scan [ 3 ] . bytes [ ibyte ] &= ~bit		4804589	0		&=			
ANR	4805477	ArrayIndexing	scan [ 3 ] . bytes [ ibyte ]		4804589	0					
ANR	4805478	MemberAccess	scan [ 3 ] . bytes		4804589	0					
ANR	4805479	ArrayIndexing	scan [ 3 ]		4804589	0					
ANR	4805480	Identifier	scan		4804589	0					
ANR	4805481	PrimaryExpression	3		4804589	1					
ANR	4805482	Identifier	bytes		4804589	1					
ANR	4805483	Identifier	ibyte		4804589	1					
ANR	4805484	Identifier	~bit		4804589	1					
ANR	4805485	ExpressionStatement	scan [ iblack ] . bytes [ ibyte ] |= bit	3739:12:140273:140306	4804589	17	True				
ANR	4805486	AssignmentExpression	scan [ iblack ] . bytes [ ibyte ] |= bit		4804589	0		|=			
ANR	4805487	ArrayIndexing	scan [ iblack ] . bytes [ ibyte ]		4804589	0					
ANR	4805488	MemberAccess	scan [ iblack ] . bytes		4804589	0					
ANR	4805489	ArrayIndexing	scan [ iblack ]		4804589	0					
ANR	4805490	Identifier	scan		4804589	0					
ANR	4805491	Identifier	iblack		4804589	1					
ANR	4805492	Identifier	bytes		4804589	1					
ANR	4805493	Identifier	ibyte		4804589	1					
ANR	4805494	Identifier	bit		4804589	1					
ANR	4805495	BreakStatement	break ;	3740:10:140318:140323	4804589	18	True				
ANR	4805496	Statement	S_FSTEP	3746:6:140413:140419	4804589	4	True				
ANR	4805497	IfStatement	if ( 0 < upd -> nlimits )		4804589	26					
ANR	4805498	Condition	0 < upd -> nlimits	3751:6:140474:140489	4804589	0	True				
ANR	4805499	RelationalExpression	0 < upd -> nlimits		4804589	0		<			
ANR	4805500	PrimaryExpression	0		4804589	0					
ANR	4805501	PtrMemberAccess	upd -> nlimits		4804589	1					
ANR	4805502	Identifier	upd		4804589	0					
ANR	4805503	Identifier	nlimits		4804589	1					
ANR	4805504	ExpressionStatement	"upd_limits ( upd , true )"	3751:24:140492:140512	4804589	1	True				
ANR	4805505	CallExpression	"upd_limits ( upd , true )"		4804589	0					
ANR	4805506	Callee	upd_limits		4804589	0					
ANR	4805507	Identifier	upd_limits		4804589	0					
ANR	4805508	ArgumentList	upd		4804589	1					
ANR	4805509	Argument	upd		4804589	0					
ANR	4805510	Identifier	upd		4804589	0					
ANR	4805511	Argument	true		4804589	1					
ANR	4805512	Identifier	true		4804589	0					
ANR	4805513	ReturnStatement	return 0 ;	3752:3:140517:140525	4804589	27	True				
ANR	4805514	PrimaryExpression	0		4804589	0					
ANR	4805515	ReturnType	static int		4804589	1					
ANR	4805516	Identifier	upd_fscomp		4804589	2					
ANR	4805517	ParameterList	upd_p upd		4804589	3					
ANR	4805518	Parameter	upd_p upd	3571:11:135181:135189	4804589	0	True				
ANR	4805519	ParameterType	upd_p		4804589	0					
ANR	4805520	Identifier	upd		4804589	1					
ANR	4805521	CFGEntryNode	ENTRY		4804589		True				
ANR	4805522	CFGExitNode	EXIT		4804589		True				
ANR	4805523	Symbol	comp [ 0 ] -> threshold		4804589						
ANR	4805524	Symbol	ibyte		4804589						
ANR	4805525	Symbol	pwidth		4804589						
ANR	4805526	Symbol	scan [ 1 ] . bytes		4804589						
ANR	4805527	Symbol	dir		4804589						
ANR	4805528	Symbol	bit		4804589						
ANR	4805529	Symbol	comp [ 3 ] -> spotsize		4804589						
ANR	4805530	Symbol	bblack		4804589						
ANR	4805531	Symbol	upd -> cmap		4804589						
ANR	4805532	Symbol	scan [ iblack ] . bytes		4804589						
ANR	4805533	Symbol	upd -> rwidth		4804589						
ANR	4805534	Symbol	upd -> valbuf		4804589						
ANR	4805535	Symbol	* iblack		4804589						
ANR	4805536	Symbol	upd -> nlimits		4804589						
ANR	4805537	Symbol	pxlset		4804589						
ANR	4805538	Symbol	rowerr		4804589						
ANR	4805539	Symbol	* scan		4804589						
ANR	4805540	Symbol	scan [ 2 ] . bytes		4804589						
ANR	4805541	Symbol	comp [ 3 ] -> threshold		4804589						
ANR	4805542	Symbol	upd_pxlget		4804589						
ANR	4805543	Symbol	upd -> nbytes		4804589						
ANR	4805544	Symbol	* scan [ 0 ] . bytes		4804589						
ANR	4805545	Symbol	upd -> valptr		4804589						
ANR	4805546	Symbol	comp		4804589						
ANR	4805547	Symbol	* upd -> scnbuf		4804589						
ANR	4805548	Symbol	comp [ 2 ] -> threshold		4804589						
ANR	4805549	Symbol	comp [ 0 ] -> spotsize		4804589						
ANR	4805550	Symbol	upd		4804589						
ANR	4805551	Symbol	* pixel		4804589						
ANR	4805552	Symbol	* ibyte		4804589						
ANR	4805553	Symbol	* * comp		4804589						
ANR	4805554	Symbol	upd_proc_pxlget		4804589						
ANR	4805555	Symbol	* upd -> yscnbuf		4804589						
ANR	4805556	Symbol	comp [ 1 ] -> threshold		4804589						
ANR	4805557	Symbol	upd -> yscnbuf		4804589						
ANR	4805558	Symbol	* * scan		4804589						
ANR	4805559	Symbol	* * iblack		4804589						
ANR	4805560	Symbol	true		4804589						
ANR	4805561	Symbol	* scan [ 1 ] . bytes		4804589						
ANR	4805562	Symbol	B_REDUCEK		4804589						
ANR	4805563	Symbol	upd -> pxlptr		4804589						
ANR	4805564	Symbol	comp [ 1 ] -> spotsize		4804589						
ANR	4805565	Symbol	* scan [ 2 ] . bytes		4804589						
ANR	4805566	Symbol	scan		4804589						
ANR	4805567	Symbol	* upd -> cmap		4804589						
ANR	4805568	Symbol	upd -> ncomp		4804589						
ANR	4805569	Symbol	upd -> flags		4804589						
ANR	4805570	Symbol	* upd		4804589						
ANR	4805571	Symbol	* fun		4804589						
ANR	4805572	Symbol	* comp		4804589						
ANR	4805573	Symbol	* upd -> scnmsk		4804589						
ANR	4805574	Symbol	colerr		4804589						
ANR	4805575	Symbol	pixel		4804589						
ANR	4805576	Symbol	* scan [ 3 ] . bytes		4804589						
ANR	4805577	Symbol	* scan [ iblack ] . bytes		4804589						
ANR	4805578	Symbol	upd -> scnmsk		4804589						
ANR	4805579	Symbol	ci		4804589						
ANR	4805580	Symbol	upd -> pxlget		4804589						
ANR	4805581	Symbol	B_FSWHITE		4804589						
ANR	4805582	Symbol	B_FIXDIR		4804589						
ANR	4805583	Symbol	upd -> cmap [ 0 ] . comp		4804589						
ANR	4805584	Symbol	comp [ 2 ] -> spotsize		4804589						
ANR	4805585	Symbol	scan [ 0 ] . bytes		4804589						
ANR	4805586	Symbol	ptr		4804589						
ANR	4805587	Symbol	iblack		4804589						
ANR	4805588	Symbol	upd -> scnbuf		4804589						
ANR	4805589	Symbol	~bit		4804589						
ANR	4805590	Symbol	B_YFLIP		4804589						
ANR	4805591	Symbol	B_REVDIR		4804589						
ANR	4805592	Symbol	* * upd		4804589						
ANR	4805593	Symbol	first		4804589						
ANR	4805594	Symbol	fun		4804589						
ANR	4805595	Symbol	scan [ 3 ] . bytes		4804589						
ANR	4805596	Function	upd_open_fscmyk	3759:0:140753:141265							
ANR	4805597	FunctionDef	upd_open_fscmyk (upd_device * udev)		4805596	0					
ANR	4805598	CompoundStatement		3761:0:140799:141265	4805596	0					
ANR	4805599	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3762:3:140804:140831	4805596	0	True				
ANR	4805600	IdentifierDecl	upd = udev -> upd		4805596	0					
ANR	4805601	IdentifierDeclType	const upd_p		4805596	0					
ANR	4805602	Identifier	upd		4805596	1					
ANR	4805603	AssignmentExpression	upd = udev -> upd		4805596	2		=			
ANR	4805604	Identifier	upd		4805596	0					
ANR	4805605	PtrMemberAccess	udev -> upd		4805596	1					
ANR	4805606	Identifier	udev		4805596	0					
ANR	4805607	Identifier	upd		4805596	1					
ANR	4805608	ExpressionStatement	upd_open_fscomp ( udev )	3764:3:140837:140858	4805596	1	True				
ANR	4805609	CallExpression	upd_open_fscomp ( udev )		4805596	0					
ANR	4805610	Callee	upd_open_fscomp		4805596	0					
ANR	4805611	Identifier	upd_open_fscomp		4805596	0					
ANR	4805612	ArgumentList	udev		4805596	1					
ANR	4805613	Argument	udev		4805596	0					
ANR	4805614	Identifier	udev		4805596	0					
ANR	4805615	IfStatement	if ( ( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp ) && ( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf ) )		4805596	2					
ANR	4805616	Condition	( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp ) && ( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )	3766:6:140867:141176	4805596	0	True				
ANR	4805617	AndExpression	( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp ) && ( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		4805596	0		&&			
ANR	4805618	BitAndExpression	B_RENDER & upd -> flags		4805596	0		&			
ANR	4805619	Identifier	B_RENDER		4805596	0					
ANR	4805620	PtrMemberAccess	upd -> flags		4805596	1					
ANR	4805621	Identifier	upd		4805596	0					
ANR	4805622	Identifier	flags		4805596	1					
ANR	4805623	AndExpression	( 4 == upd -> ncomp ) && ( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		4805596	1		&&			
ANR	4805624	EqualityExpression	4 == upd -> ncomp		4805596	0		==			
ANR	4805625	PrimaryExpression	4		4805596	0					
ANR	4805626	PtrMemberAccess	upd -> ncomp		4805596	1					
ANR	4805627	Identifier	upd		4805596	0					
ANR	4805628	Identifier	ncomp		4805596	1					
ANR	4805629	AndExpression	( 8 <= upd -> cmap [ 0 ] . bits ) && ( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		4805596	1		&&			
ANR	4805630	RelationalExpression	8 <= upd -> cmap [ 0 ] . bits		4805596	0		<=			
ANR	4805631	PrimaryExpression	8		4805596	0					
ANR	4805632	MemberAccess	upd -> cmap [ 0 ] . bits		4805596	1					
ANR	4805633	ArrayIndexing	upd -> cmap [ 0 ]		4805596	0					
ANR	4805634	PtrMemberAccess	upd -> cmap		4805596	0					
ANR	4805635	Identifier	upd		4805596	0					
ANR	4805636	Identifier	cmap		4805596	1					
ANR	4805637	PrimaryExpression	0		4805596	1					
ANR	4805638	Identifier	bits		4805596	1					
ANR	4805639	AndExpression	( 24 == upd -> cmap [ 0 ] . bitshf ) && ( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		4805596	1		&&			
ANR	4805640	EqualityExpression	24 == upd -> cmap [ 0 ] . bitshf		4805596	0		==			
ANR	4805641	PrimaryExpression	24		4805596	0					
ANR	4805642	MemberAccess	upd -> cmap [ 0 ] . bitshf		4805596	1					
ANR	4805643	ArrayIndexing	upd -> cmap [ 0 ]		4805596	0					
ANR	4805644	PtrMemberAccess	upd -> cmap		4805596	0					
ANR	4805645	Identifier	upd		4805596	0					
ANR	4805646	Identifier	cmap		4805596	1					
ANR	4805647	PrimaryExpression	0		4805596	1					
ANR	4805648	Identifier	bitshf		4805596	1					
ANR	4805649	AndExpression	( 8 <= upd -> cmap [ 1 ] . bits ) && ( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		4805596	1		&&			
ANR	4805650	RelationalExpression	8 <= upd -> cmap [ 1 ] . bits		4805596	0		<=			
ANR	4805651	PrimaryExpression	8		4805596	0					
ANR	4805652	MemberAccess	upd -> cmap [ 1 ] . bits		4805596	1					
ANR	4805653	ArrayIndexing	upd -> cmap [ 1 ]		4805596	0					
ANR	4805654	PtrMemberAccess	upd -> cmap		4805596	0					
ANR	4805655	Identifier	upd		4805596	0					
ANR	4805656	Identifier	cmap		4805596	1					
ANR	4805657	PrimaryExpression	1		4805596	1					
ANR	4805658	Identifier	bits		4805596	1					
ANR	4805659	AndExpression	( 16 == upd -> cmap [ 1 ] . bitshf ) && ( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		4805596	1		&&			
ANR	4805660	EqualityExpression	16 == upd -> cmap [ 1 ] . bitshf		4805596	0		==			
ANR	4805661	PrimaryExpression	16		4805596	0					
ANR	4805662	MemberAccess	upd -> cmap [ 1 ] . bitshf		4805596	1					
ANR	4805663	ArrayIndexing	upd -> cmap [ 1 ]		4805596	0					
ANR	4805664	PtrMemberAccess	upd -> cmap		4805596	0					
ANR	4805665	Identifier	upd		4805596	0					
ANR	4805666	Identifier	cmap		4805596	1					
ANR	4805667	PrimaryExpression	1		4805596	1					
ANR	4805668	Identifier	bitshf		4805596	1					
ANR	4805669	AndExpression	( 8 <= upd -> cmap [ 2 ] . bits ) && ( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		4805596	1		&&			
ANR	4805670	RelationalExpression	8 <= upd -> cmap [ 2 ] . bits		4805596	0		<=			
ANR	4805671	PrimaryExpression	8		4805596	0					
ANR	4805672	MemberAccess	upd -> cmap [ 2 ] . bits		4805596	1					
ANR	4805673	ArrayIndexing	upd -> cmap [ 2 ]		4805596	0					
ANR	4805674	PtrMemberAccess	upd -> cmap		4805596	0					
ANR	4805675	Identifier	upd		4805596	0					
ANR	4805676	Identifier	cmap		4805596	1					
ANR	4805677	PrimaryExpression	2		4805596	1					
ANR	4805678	Identifier	bits		4805596	1					
ANR	4805679	AndExpression	( 8 == upd -> cmap [ 2 ] . bitshf ) && ( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		4805596	1		&&			
ANR	4805680	EqualityExpression	8 == upd -> cmap [ 2 ] . bitshf		4805596	0		==			
ANR	4805681	PrimaryExpression	8		4805596	0					
ANR	4805682	MemberAccess	upd -> cmap [ 2 ] . bitshf		4805596	1					
ANR	4805683	ArrayIndexing	upd -> cmap [ 2 ]		4805596	0					
ANR	4805684	PtrMemberAccess	upd -> cmap		4805596	0					
ANR	4805685	Identifier	upd		4805596	0					
ANR	4805686	Identifier	cmap		4805596	1					
ANR	4805687	PrimaryExpression	2		4805596	1					
ANR	4805688	Identifier	bitshf		4805596	1					
ANR	4805689	AndExpression	( 8 <= upd -> cmap [ 3 ] . bits ) && ( 0 == upd -> cmap [ 3 ] . bitshf )		4805596	1		&&			
ANR	4805690	RelationalExpression	8 <= upd -> cmap [ 3 ] . bits		4805596	0		<=			
ANR	4805691	PrimaryExpression	8		4805596	0					
ANR	4805692	MemberAccess	upd -> cmap [ 3 ] . bits		4805596	1					
ANR	4805693	ArrayIndexing	upd -> cmap [ 3 ]		4805596	0					
ANR	4805694	PtrMemberAccess	upd -> cmap		4805596	0					
ANR	4805695	Identifier	upd		4805596	0					
ANR	4805696	Identifier	cmap		4805596	1					
ANR	4805697	PrimaryExpression	3		4805596	1					
ANR	4805698	Identifier	bits		4805596	1					
ANR	4805699	EqualityExpression	0 == upd -> cmap [ 3 ] . bitshf		4805596	1		==			
ANR	4805700	PrimaryExpression	0		4805596	0					
ANR	4805701	MemberAccess	upd -> cmap [ 3 ] . bitshf		4805596	1					
ANR	4805702	ArrayIndexing	upd -> cmap [ 3 ]		4805596	0					
ANR	4805703	PtrMemberAccess	upd -> cmap		4805596	0					
ANR	4805704	Identifier	upd		4805596	0					
ANR	4805705	Identifier	cmap		4805596	1					
ANR	4805706	PrimaryExpression	3		4805596	1					
ANR	4805707	Identifier	bitshf		4805596	1					
ANR	4805708	CompoundStatement		11:66:382:382	4805596	1					
ANR	4805709	ExpressionStatement	upd -> render = upd_fscmyk	3772:6:141190:141214	4805596	0	True				
ANR	4805710	AssignmentExpression	upd -> render = upd_fscmyk		4805596	0		=			
ANR	4805711	PtrMemberAccess	upd -> render		4805596	0					
ANR	4805712	Identifier	upd		4805596	0					
ANR	4805713	Identifier	render		4805596	1					
ANR	4805714	Identifier	upd_fscmyk		4805596	1					
ANR	4805715	ElseStatement	else		4805596	0					
ANR	4805716	CompoundStatement		13:10:426:426	4805596	0					
ANR	4805717	ExpressionStatement	upd -> flags &= ~B_RENDER	3774:6:141234:141257	4805596	0	True				
ANR	4805718	AssignmentExpression	upd -> flags &= ~B_RENDER		4805596	0		&=			
ANR	4805719	PtrMemberAccess	upd -> flags		4805596	0					
ANR	4805720	Identifier	upd		4805596	0					
ANR	4805721	Identifier	flags		4805596	1					
ANR	4805722	Identifier	~B_RENDER		4805596	1					
ANR	4805723	ReturnType	static void		4805596	1					
ANR	4805724	Identifier	upd_open_fscmyk		4805596	2					
ANR	4805725	ParameterList	upd_device * udev		4805596	3					
ANR	4805726	Parameter	upd_device * udev	3760:16:140781:140796	4805596	0	True				
ANR	4805727	ParameterType	upd_device *		4805596	0					
ANR	4805728	Identifier	udev		4805596	1					
ANR	4805729	CFGEntryNode	ENTRY		4805596		True				
ANR	4805730	CFGExitNode	EXIT		4805596		True				
ANR	4805731	Symbol	upd -> cmap [ 2 ] . bitshf		4805596						
ANR	4805732	Symbol	upd_fscmyk		4805596						
ANR	4805733	Symbol	upd		4805596						
ANR	4805734	Symbol	B_RENDER		4805596						
ANR	4805735	Symbol	* upd -> cmap		4805596						
ANR	4805736	Symbol	upd -> cmap [ 0 ] . bitshf		4805596						
ANR	4805737	Symbol	upd -> cmap [ 2 ] . bits		4805596						
ANR	4805738	Symbol	upd -> ncomp		4805596						
ANR	4805739	Symbol	upd -> cmap		4805596						
ANR	4805740	Symbol	upd -> render		4805596						
ANR	4805741	Symbol	upd -> flags		4805596						
ANR	4805742	Symbol	udev -> upd		4805596						
ANR	4805743	Symbol	* udev		4805596						
ANR	4805744	Symbol	* upd		4805596						
ANR	4805745	Symbol	upd -> cmap [ 1 ] . bits		4805596						
ANR	4805746	Symbol	upd -> cmap [ 1 ] . bitshf		4805596						
ANR	4805747	Symbol	udev		4805596						
ANR	4805748	Symbol	upd -> cmap [ 3 ] . bitshf		4805596						
ANR	4805749	Symbol	upd -> cmap [ 0 ] . bits		4805596						
ANR	4805750	Symbol	~B_RENDER		4805596						
ANR	4805751	Symbol	upd -> cmap [ 3 ] . bits		4805596						
ANR	4805752	Symbol	* * upd		4805596						
ANR	4805753	Function	upd_fscmyk	3783:0:141491:146626							
ANR	4805754	FunctionDef	upd_fscmyk (upd_p upd)		4805753	0					
ANR	4805755	CompoundStatement		3785:0:141524:146626	4805753	0					
ANR	4805756	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ] ;	3786:3:141529:141594	4805753	0	True				
ANR	4805757	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4805753	0					
ANR	4805758	IdentifierDeclType	const updscan_p		4805753	0					
ANR	4805759	Identifier	scan		4805753	1					
ANR	4805760	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4805753	2		=			
ANR	4805761	Identifier	scan		4805753	0					
ANR	4805762	ArrayIndexing	upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4805753	1					
ANR	4805763	PtrMemberAccess	upd -> scnbuf		4805753	0					
ANR	4805764	Identifier	upd		4805753	0					
ANR	4805765	Identifier	scnbuf		4805753	1					
ANR	4805766	BitAndExpression	upd -> yscnbuf & upd -> scnmsk		4805753	1		&			
ANR	4805767	PtrMemberAccess	upd -> yscnbuf		4805753	0					
ANR	4805768	Identifier	upd		4805753	0					
ANR	4805769	Identifier	yscnbuf		4805753	1					
ANR	4805770	PtrMemberAccess	upd -> scnmsk		4805753	1					
ANR	4805771	Identifier	upd		4805753	0					
ANR	4805772	Identifier	scnmsk		4805753	1					
ANR	4805773	Statement	int32_t	3787:3:141599:141605	4805753	1	True				
ANR	4805774	Statement	*	3787:11:141607:141607	4805753	2	True				
ANR	4805775	Statement	const	3787:12:141608:141612	4805753	3	True				
ANR	4805776	ExpressionStatement	pixel = upd -> valbuf	3787:22:141618:141638	4805753	4	True				
ANR	4805777	AssignmentExpression	pixel = upd -> valbuf		4805753	0		=			
ANR	4805778	Identifier	pixel		4805753	0					
ANR	4805779	PtrMemberAccess	upd -> valbuf		4805753	1					
ANR	4805780	Identifier	upd		4805753	0					
ANR	4805781	Identifier	valbuf		4805753	1					
ANR	4805782	IdentifierDeclStatement	const updcomp_p * comp = ( updcomp_p * ) upd -> valptr ;	3788:3:141643:141694	4805753	5	True				
ANR	4805783	IdentifierDecl	* comp = ( updcomp_p * ) upd -> valptr		4805753	0					
ANR	4805784	IdentifierDeclType	const updcomp_p *		4805753	0					
ANR	4805785	Identifier	comp		4805753	1					
ANR	4805786	AssignmentExpression	* comp = ( updcomp_p * ) upd -> valptr		4805753	2		=			
ANR	4805787	Identifier	comp		4805753	0					
ANR	4805788	CastExpression	( updcomp_p * ) upd -> valptr		4805753	1					
ANR	4805789	CastTarget	updcomp_p *		4805753	0					
ANR	4805790	PtrMemberAccess	upd -> valptr		4805753	1					
ANR	4805791	Identifier	upd		4805753	0					
ANR	4805792	Identifier	valptr		4805753	1					
ANR	4805793	Statement	int32_t	3789:3:141699:141705	4805753	6	True				
ANR	4805794	Statement	*	3789:11:141707:141707	4805753	7	True				
ANR	4805795	Statement	const	3789:12:141708:141712	4805753	8	True				
ANR	4805796	ExpressionStatement	colerr = pixel + 4	3789:22:141718:141737	4805753	9	True				
ANR	4805797	AssignmentExpression	colerr = pixel + 4		4805753	0		=			
ANR	4805798	Identifier	colerr		4805753	0					
ANR	4805799	AdditiveExpression	pixel + 4		4805753	1		+			
ANR	4805800	Identifier	pixel		4805753	0					
ANR	4805801	PrimaryExpression	4		4805753	1					
ANR	4805802	IdentifierDeclStatement	int32_t * rowerr = colerr + 4 ;	3790:3:141742:141780	4805753	10	True				
ANR	4805803	IdentifierDecl	* rowerr = colerr + 4		4805753	0					
ANR	4805804	IdentifierDeclType	int32_t *		4805753	0					
ANR	4805805	Identifier	rowerr		4805753	1					
ANR	4805806	AssignmentExpression	* rowerr = colerr + 4		4805753	2		=			
ANR	4805807	Identifier	rowerr		4805753	0					
ANR	4805808	AdditiveExpression	colerr + 4		4805753	1		+			
ANR	4805809	Identifier	colerr		4805753	0					
ANR	4805810	PrimaryExpression	4		4805753	1					
ANR	4805811	IdentifierDeclStatement	int32_t pwidth = upd -> rwidth ;	3791:3:141785:141824	4805753	11	True				
ANR	4805812	IdentifierDecl	pwidth = upd -> rwidth		4805753	0					
ANR	4805813	IdentifierDeclType	int32_t		4805753	0					
ANR	4805814	Identifier	pwidth		4805753	1					
ANR	4805815	AssignmentExpression	pwidth = upd -> rwidth		4805753	2		=			
ANR	4805816	Identifier	pwidth		4805753	0					
ANR	4805817	PtrMemberAccess	upd -> rwidth		4805753	1					
ANR	4805818	Identifier	upd		4805753	0					
ANR	4805819	Identifier	rwidth		4805753	1					
ANR	4805820	IdentifierDeclStatement	"int dir , ibyte ;"	3792:3:141829:141855	4805753	12	True				
ANR	4805821	IdentifierDecl	dir		4805753	0					
ANR	4805822	IdentifierDeclType	int		4805753	0					
ANR	4805823	Identifier	dir		4805753	1					
ANR	4805824	IdentifierDecl	ibyte		4805753	1					
ANR	4805825	IdentifierDeclType	int		4805753	0					
ANR	4805826	Identifier	ibyte		4805753	1					
ANR	4805827	IdentifierDeclStatement	"byte bit , * data ;"	3793:3:141860:141886	4805753	13	True				
ANR	4805828	IdentifierDecl	bit		4805753	0					
ANR	4805829	IdentifierDeclType	byte		4805753	0					
ANR	4805830	Identifier	bit		4805753	1					
ANR	4805831	IdentifierDecl	* data		4805753	1					
ANR	4805832	IdentifierDeclType	byte *		4805753	0					
ANR	4805833	Identifier	data		4805753	1					
ANR	4805834	IdentifierDeclStatement	bool first = false ;	3794:3:141891:141921	4805753	14	True				
ANR	4805835	IdentifierDecl	first = false		4805753	0					
ANR	4805836	IdentifierDeclType	bool		4805753	0					
ANR	4805837	Identifier	first		4805753	1					
ANR	4805838	AssignmentExpression	first = false		4805753	2		=			
ANR	4805839	Identifier	false		4805753	0					
ANR	4805840	Identifier	false		4805753	1					
ANR	4805841	ExpressionStatement	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"	3798:3:141961:141996	4805753	15	True				
ANR	4805842	CallExpression	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"		4805753	0					
ANR	4805843	Callee	memset		4805753	0					
ANR	4805844	Identifier	memset		4805753	0					
ANR	4805845	ArgumentList	scan [ 0 ] . bytes		4805753	1					
ANR	4805846	Argument	scan [ 0 ] . bytes		4805753	0					
ANR	4805847	MemberAccess	scan [ 0 ] . bytes		4805753	0					
ANR	4805848	ArrayIndexing	scan [ 0 ]		4805753	0					
ANR	4805849	Identifier	scan		4805753	0					
ANR	4805850	PrimaryExpression	0		4805753	1					
ANR	4805851	Identifier	bytes		4805753	1					
ANR	4805852	Argument	0		4805753	1					
ANR	4805853	PrimaryExpression	0		4805753	0					
ANR	4805854	Argument	upd -> nbytes		4805753	2					
ANR	4805855	PtrMemberAccess	upd -> nbytes		4805753	0					
ANR	4805856	Identifier	upd		4805753	0					
ANR	4805857	Identifier	nbytes		4805753	1					
ANR	4805858	ExpressionStatement	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"	3799:3:142001:142036	4805753	16	True				
ANR	4805859	CallExpression	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"		4805753	0					
ANR	4805860	Callee	memset		4805753	0					
ANR	4805861	Identifier	memset		4805753	0					
ANR	4805862	ArgumentList	scan [ 1 ] . bytes		4805753	1					
ANR	4805863	Argument	scan [ 1 ] . bytes		4805753	0					
ANR	4805864	MemberAccess	scan [ 1 ] . bytes		4805753	0					
ANR	4805865	ArrayIndexing	scan [ 1 ]		4805753	0					
ANR	4805866	Identifier	scan		4805753	0					
ANR	4805867	PrimaryExpression	1		4805753	1					
ANR	4805868	Identifier	bytes		4805753	1					
ANR	4805869	Argument	0		4805753	1					
ANR	4805870	PrimaryExpression	0		4805753	0					
ANR	4805871	Argument	upd -> nbytes		4805753	2					
ANR	4805872	PtrMemberAccess	upd -> nbytes		4805753	0					
ANR	4805873	Identifier	upd		4805753	0					
ANR	4805874	Identifier	nbytes		4805753	1					
ANR	4805875	ExpressionStatement	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"	3800:3:142041:142076	4805753	17	True				
ANR	4805876	CallExpression	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"		4805753	0					
ANR	4805877	Callee	memset		4805753	0					
ANR	4805878	Identifier	memset		4805753	0					
ANR	4805879	ArgumentList	scan [ 2 ] . bytes		4805753	1					
ANR	4805880	Argument	scan [ 2 ] . bytes		4805753	0					
ANR	4805881	MemberAccess	scan [ 2 ] . bytes		4805753	0					
ANR	4805882	ArrayIndexing	scan [ 2 ]		4805753	0					
ANR	4805883	Identifier	scan		4805753	0					
ANR	4805884	PrimaryExpression	2		4805753	1					
ANR	4805885	Identifier	bytes		4805753	1					
ANR	4805886	Argument	0		4805753	1					
ANR	4805887	PrimaryExpression	0		4805753	0					
ANR	4805888	Argument	upd -> nbytes		4805753	2					
ANR	4805889	PtrMemberAccess	upd -> nbytes		4805753	0					
ANR	4805890	Identifier	upd		4805753	0					
ANR	4805891	Identifier	nbytes		4805753	1					
ANR	4805892	ExpressionStatement	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"	3801:3:142081:142116	4805753	18	True				
ANR	4805893	CallExpression	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"		4805753	0					
ANR	4805894	Callee	memset		4805753	0					
ANR	4805895	Identifier	memset		4805753	0					
ANR	4805896	ArgumentList	scan [ 3 ] . bytes		4805753	1					
ANR	4805897	Argument	scan [ 3 ] . bytes		4805753	0					
ANR	4805898	MemberAccess	scan [ 3 ] . bytes		4805753	0					
ANR	4805899	ArrayIndexing	scan [ 3 ]		4805753	0					
ANR	4805900	Identifier	scan		4805753	0					
ANR	4805901	PrimaryExpression	3		4805753	1					
ANR	4805902	Identifier	bytes		4805753	1					
ANR	4805903	Argument	0		4805753	1					
ANR	4805904	PrimaryExpression	0		4805753	0					
ANR	4805905	Argument	upd -> nbytes		4805753	2					
ANR	4805906	PtrMemberAccess	upd -> nbytes		4805753	0					
ANR	4805907	Identifier	upd		4805753	0					
ANR	4805908	Identifier	nbytes		4805753	1					
ANR	4805909	IfStatement	if ( upd -> flags & B_REVDIR )		4805753	19					
ANR	4805910	Condition	upd -> flags & B_REVDIR	3806:6:142159:142181	4805753	0	True				
ANR	4805911	BitAndExpression	upd -> flags & B_REVDIR		4805753	0		&			
ANR	4805912	PtrMemberAccess	upd -> flags		4805753	0					
ANR	4805913	Identifier	upd		4805753	0					
ANR	4805914	Identifier	flags		4805753	1					
ANR	4805915	Identifier	B_REVDIR		4805753	1					
ANR	4805916	CompoundStatement		22:31:659:659	4805753	1					
ANR	4805917	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		4805753	0					
ANR	4805918	Condition	! ( upd -> flags & B_FSWHITE )	3808:9:142219:142243	4805753	0	True				
ANR	4805919	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		4805753	0					
ANR	4805920	UnaryOperator	!		4805753	0					
ANR	4805921	BitAndExpression	upd -> flags & B_FSWHITE		4805753	1		&			
ANR	4805922	PtrMemberAccess	upd -> flags		4805753	0					
ANR	4805923	Identifier	upd		4805753	0					
ANR	4805924	Identifier	flags		4805753	1					
ANR	4805925	Identifier	B_FSWHITE		4805753	1					
ANR	4805926	CompoundStatement		24:36:721:721	4805753	1					
ANR	4805927	ExpressionStatement	data = upd -> gsscan	3809:9:142257:142275	4805753	0	True				
ANR	4805928	AssignmentExpression	data = upd -> gsscan		4805753	0		=			
ANR	4805929	Identifier	data		4805753	0					
ANR	4805930	PtrMemberAccess	upd -> gsscan		4805753	1					
ANR	4805931	Identifier	upd		4805753	0					
ANR	4805932	Identifier	gsscan		4805753	1					
ANR	4805933	WhileStatement	while ( 0 < pwidth && ! * ( uint32_t * ) data )		4805753	1					
ANR	4805934	Condition	0 < pwidth && ! * ( uint32_t * ) data	3810:15:142292:142323	4805753	0	True				
ANR	4805935	AndExpression	0 < pwidth && ! * ( uint32_t * ) data		4805753	0		&&			
ANR	4805936	RelationalExpression	0 < pwidth		4805753	0		<			
ANR	4805937	PrimaryExpression	0		4805753	0					
ANR	4805938	Identifier	pwidth		4805753	1					
ANR	4805939	UnaryOperationExpression	! * ( uint32_t * ) data		4805753	1					
ANR	4805940	UnaryOperator	!		4805753	0					
ANR	4805941	UnaryOperationExpression	* ( uint32_t * ) data		4805753	1					
ANR	4805942	UnaryOperator	*		4805753	0					
ANR	4805943	CastExpression	( uint32_t * ) data		4805753	1					
ANR	4805944	CastTarget	uint32_t *		4805753	0					
ANR	4805945	Identifier	data		4805753	1					
ANR	4805946	ExpressionStatement	"pwidth -- , data += 4"	3810:49:142326:142345	4805753	1	True				
ANR	4805947	Expression	"pwidth -- , data += 4"		4805753	0					
ANR	4805948	PostIncDecOperationExpression	pwidth --		4805753	0					
ANR	4805949	Identifier	pwidth		4805753	0					
ANR	4805950	IncDec	--		4805753	1					
ANR	4805951	AssignmentExpression	data += 4		4805753	1		+=			
ANR	4805952	Identifier	data		4805753	0					
ANR	4805953	PrimaryExpression	4		4805753	1					
ANR	4805954	IfStatement	if ( 0 >= pwidth )		4805753	2					
ANR	4805955	Condition	0 >= pwidth	3811:12:142359:142369	4805753	0	True				
ANR	4805956	RelationalExpression	0 >= pwidth		4805753	0		>=			
ANR	4805957	PrimaryExpression	0		4805753	0					
ANR	4805958	Identifier	pwidth		4805753	1					
ANR	4805959	CompoundStatement		27:25:847:847	4805753	1					
ANR	4805960	IfStatement	if ( 0 < upd -> nlimits )		4805753	0					
ANR	4805961	Condition	0 < upd -> nlimits	3812:15:142389:142404	4805753	0	True				
ANR	4805962	RelationalExpression	0 < upd -> nlimits		4805753	0		<			
ANR	4805963	PrimaryExpression	0		4805753	0					
ANR	4805964	PtrMemberAccess	upd -> nlimits		4805753	1					
ANR	4805965	Identifier	upd		4805753	0					
ANR	4805966	Identifier	nlimits		4805753	1					
ANR	4805967	ExpressionStatement	"upd_limits ( upd , false )"	3812:33:142407:142428	4805753	1	True				
ANR	4805968	CallExpression	"upd_limits ( upd , false )"		4805753	0					
ANR	4805969	Callee	upd_limits		4805753	0					
ANR	4805970	Identifier	upd_limits		4805753	0					
ANR	4805971	ArgumentList	upd		4805753	1					
ANR	4805972	Argument	upd		4805753	0					
ANR	4805973	Identifier	upd		4805753	0					
ANR	4805974	Argument	false		4805753	1					
ANR	4805975	Identifier	false		4805753	0					
ANR	4805976	ReturnStatement	return 0 ;	3813:12:142442:142450	4805753	1	True				
ANR	4805977	PrimaryExpression	0		4805753	0					
ANR	4805978	ExpressionStatement	data = upd -> gsscan + 4 * ( upd -> rwidth - 1 )	3817:6:142478:142525	4805753	1	True				
ANR	4805979	AssignmentExpression	data = upd -> gsscan + 4 * ( upd -> rwidth - 1 )		4805753	0		=			
ANR	4805980	Identifier	data		4805753	0					
ANR	4805981	AdditiveExpression	upd -> gsscan + 4 * ( upd -> rwidth - 1 )		4805753	1		+			
ANR	4805982	PtrMemberAccess	upd -> gsscan		4805753	0					
ANR	4805983	Identifier	upd		4805753	0					
ANR	4805984	Identifier	gsscan		4805753	1					
ANR	4805985	MultiplicativeExpression	4 * ( upd -> rwidth - 1 )		4805753	1		*			
ANR	4805986	PrimaryExpression	4		4805753	0					
ANR	4805987	AdditiveExpression	upd -> rwidth - 1		4805753	1		-			
ANR	4805988	PtrMemberAccess	upd -> rwidth		4805753	0					
ANR	4805989	Identifier	upd		4805753	0					
ANR	4805990	Identifier	rwidth		4805753	1					
ANR	4805991	PrimaryExpression	1		4805753	1					
ANR	4805992	ElseStatement	else		4805753	0					
ANR	4805993	CompoundStatement		35:10:1013:1013	4805753	0					
ANR	4805994	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		4805753	0					
ANR	4805995	Condition	! ( upd -> flags & B_FSWHITE )	3821:9:142598:142622	4805753	0	True				
ANR	4805996	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		4805753	0					
ANR	4805997	UnaryOperator	!		4805753	0					
ANR	4805998	BitAndExpression	upd -> flags & B_FSWHITE		4805753	1		&			
ANR	4805999	PtrMemberAccess	upd -> flags		4805753	0					
ANR	4806000	Identifier	upd		4805753	0					
ANR	4806001	Identifier	flags		4805753	1					
ANR	4806002	Identifier	B_FSWHITE		4805753	1					
ANR	4806003	CompoundStatement		37:36:1100:1100	4805753	1					
ANR	4806004	ExpressionStatement	data = upd -> gsscan + 4 * ( upd -> rwidth - 1 )	3822:9:142636:142676	4805753	0	True				
ANR	4806005	AssignmentExpression	data = upd -> gsscan + 4 * ( upd -> rwidth - 1 )		4805753	0		=			
ANR	4806006	Identifier	data		4805753	0					
ANR	4806007	AdditiveExpression	upd -> gsscan + 4 * ( upd -> rwidth - 1 )		4805753	1		+			
ANR	4806008	PtrMemberAccess	upd -> gsscan		4805753	0					
ANR	4806009	Identifier	upd		4805753	0					
ANR	4806010	Identifier	gsscan		4805753	1					
ANR	4806011	MultiplicativeExpression	4 * ( upd -> rwidth - 1 )		4805753	1		*			
ANR	4806012	PrimaryExpression	4		4805753	0					
ANR	4806013	AdditiveExpression	upd -> rwidth - 1		4805753	1		-			
ANR	4806014	PtrMemberAccess	upd -> rwidth		4805753	0					
ANR	4806015	Identifier	upd		4805753	0					
ANR	4806016	Identifier	rwidth		4805753	1					
ANR	4806017	PrimaryExpression	1		4805753	1					
ANR	4806018	WhileStatement	while ( 0 < pwidth && ! * ( uint32_t * ) data )		4805753	1					
ANR	4806019	Condition	0 < pwidth && ! * ( uint32_t * ) data	3823:15:142693:142724	4805753	0	True				
ANR	4806020	AndExpression	0 < pwidth && ! * ( uint32_t * ) data		4805753	0		&&			
ANR	4806021	RelationalExpression	0 < pwidth		4805753	0		<			
ANR	4806022	PrimaryExpression	0		4805753	0					
ANR	4806023	Identifier	pwidth		4805753	1					
ANR	4806024	UnaryOperationExpression	! * ( uint32_t * ) data		4805753	1					
ANR	4806025	UnaryOperator	!		4805753	0					
ANR	4806026	UnaryOperationExpression	* ( uint32_t * ) data		4805753	1					
ANR	4806027	UnaryOperator	*		4805753	0					
ANR	4806028	CastExpression	( uint32_t * ) data		4805753	1					
ANR	4806029	CastTarget	uint32_t *		4805753	0					
ANR	4806030	Identifier	data		4805753	1					
ANR	4806031	ExpressionStatement	"pwidth -- , data -= 4"	3823:49:142727:142746	4805753	1	True				
ANR	4806032	Expression	"pwidth -- , data -= 4"		4805753	0					
ANR	4806033	PostIncDecOperationExpression	pwidth --		4805753	0					
ANR	4806034	Identifier	pwidth		4805753	0					
ANR	4806035	IncDec	--		4805753	1					
ANR	4806036	AssignmentExpression	data -= 4		4805753	1		-=			
ANR	4806037	Identifier	data		4805753	0					
ANR	4806038	PrimaryExpression	4		4805753	1					
ANR	4806039	IfStatement	if ( 0 >= pwidth )		4805753	2					
ANR	4806040	Condition	0 >= pwidth	3824:12:142760:142770	4805753	0	True				
ANR	4806041	RelationalExpression	0 >= pwidth		4805753	0		>=			
ANR	4806042	PrimaryExpression	0		4805753	0					
ANR	4806043	Identifier	pwidth		4805753	1					
ANR	4806044	CompoundStatement		40:25:1248:1248	4805753	1					
ANR	4806045	IfStatement	if ( 0 < upd -> nlimits )		4805753	0					
ANR	4806046	Condition	0 < upd -> nlimits	3825:15:142790:142805	4805753	0	True				
ANR	4806047	RelationalExpression	0 < upd -> nlimits		4805753	0		<			
ANR	4806048	PrimaryExpression	0		4805753	0					
ANR	4806049	PtrMemberAccess	upd -> nlimits		4805753	1					
ANR	4806050	Identifier	upd		4805753	0					
ANR	4806051	Identifier	nlimits		4805753	1					
ANR	4806052	ExpressionStatement	"upd_limits ( upd , false )"	3825:33:142808:142829	4805753	1	True				
ANR	4806053	CallExpression	"upd_limits ( upd , false )"		4805753	0					
ANR	4806054	Callee	upd_limits		4805753	0					
ANR	4806055	Identifier	upd_limits		4805753	0					
ANR	4806056	ArgumentList	upd		4805753	1					
ANR	4806057	Argument	upd		4805753	0					
ANR	4806058	Identifier	upd		4805753	0					
ANR	4806059	Argument	false		4805753	1					
ANR	4806060	Identifier	false		4805753	0					
ANR	4806061	ReturnStatement	return 0 ;	3826:12:142843:142851	4805753	1	True				
ANR	4806062	PrimaryExpression	0		4805753	0					
ANR	4806063	ExpressionStatement	data = upd -> gsscan	3830:6:142879:142904	4805753	1	True				
ANR	4806064	AssignmentExpression	data = upd -> gsscan		4805753	0		=			
ANR	4806065	Identifier	data		4805753	0					
ANR	4806066	PtrMemberAccess	upd -> gsscan		4805753	1					
ANR	4806067	Identifier	upd		4805753	0					
ANR	4806068	Identifier	gsscan		4805753	1					
ANR	4806069	IfStatement	if ( ! ( B_REVDIR & upd -> flags ) == ! ( B_YFLIP & upd -> flags ) )		4805753	20					
ANR	4806070	Condition	! ( B_REVDIR & upd -> flags ) == ! ( B_YFLIP & upd -> flags )	3836:6:143014:143065	4805753	0	True				
ANR	4806071	EqualityExpression	! ( B_REVDIR & upd -> flags ) == ! ( B_YFLIP & upd -> flags )		4805753	0		==			
ANR	4806072	UnaryOperationExpression	! ( B_REVDIR & upd -> flags )		4805753	0					
ANR	4806073	UnaryOperator	!		4805753	0					
ANR	4806074	BitAndExpression	B_REVDIR & upd -> flags		4805753	1		&			
ANR	4806075	Identifier	B_REVDIR		4805753	0					
ANR	4806076	PtrMemberAccess	upd -> flags		4805753	1					
ANR	4806077	Identifier	upd		4805753	0					
ANR	4806078	Identifier	flags		4805753	1					
ANR	4806079	UnaryOperationExpression	! ( B_YFLIP & upd -> flags )		4805753	1					
ANR	4806080	UnaryOperator	!		4805753	0					
ANR	4806081	BitAndExpression	B_YFLIP & upd -> flags		4805753	1		&			
ANR	4806082	Identifier	B_YFLIP		4805753	0					
ANR	4806083	PtrMemberAccess	upd -> flags		4805753	1					
ANR	4806084	Identifier	upd		4805753	0					
ANR	4806085	Identifier	flags		4805753	1					
ANR	4806086	CompoundStatement		52:60:1543:1543	4805753	1					
ANR	4806087	ExpressionStatement	dir = 4	3837:6:143076:143091	4805753	0	True				
ANR	4806088	AssignmentExpression	dir = 4		4805753	0		=			
ANR	4806089	Identifier	dir		4805753	0					
ANR	4806090	PrimaryExpression	4		4805753	1					
ANR	4806091	ExpressionStatement	bit = 0x80	3838:6:143099:143117	4805753	1	True				
ANR	4806092	AssignmentExpression	bit = 0x80		4805753	0		=			
ANR	4806093	Identifier	bit		4805753	0					
ANR	4806094	PrimaryExpression	0x80		4805753	1					
ANR	4806095	ExpressionStatement	ibyte = 0	3839:6:143125:143140	4805753	2	True				
ANR	4806096	AssignmentExpression	ibyte = 0		4805753	0		=			
ANR	4806097	Identifier	ibyte		4805753	0					
ANR	4806098	PrimaryExpression	0		4805753	1					
ANR	4806099	ElseStatement	else		4805753	0					
ANR	4806100	CompoundStatement		56:10:1627:1627	4805753	0					
ANR	4806101	ExpressionStatement	dir = - 4	3841:6:143160:143177	4805753	0	True				
ANR	4806102	AssignmentExpression	dir = - 4		4805753	0		=			
ANR	4806103	Identifier	dir		4805753	0					
ANR	4806104	UnaryOperationExpression	- 4		4805753	1					
ANR	4806105	UnaryOperator	-		4805753	0					
ANR	4806106	PrimaryExpression	4		4805753	1					
ANR	4806107	ExpressionStatement	rowerr += 4 * ( upd -> rwidth - 1 )	3842:6:143185:143232	4805753	1	True				
ANR	4806108	AssignmentExpression	rowerr += 4 * ( upd -> rwidth - 1 )		4805753	0		+=			
ANR	4806109	Identifier	rowerr		4805753	0					
ANR	4806110	MultiplicativeExpression	4 * ( upd -> rwidth - 1 )		4805753	1		*			
ANR	4806111	PrimaryExpression	4		4805753	0					
ANR	4806112	AdditiveExpression	upd -> rwidth - 1		4805753	1		-			
ANR	4806113	PtrMemberAccess	upd -> rwidth		4805753	0					
ANR	4806114	Identifier	upd		4805753	0					
ANR	4806115	Identifier	rwidth		4805753	1					
ANR	4806116	PrimaryExpression	1		4805753	1					
ANR	4806117	ExpressionStatement	bit = 0x80 >> ( ( upd -> rwidth - 1 ) & 7 )	3843:6:143240:143292	4805753	2	True				
ANR	4806118	AssignmentExpression	bit = 0x80 >> ( ( upd -> rwidth - 1 ) & 7 )		4805753	0		=			
ANR	4806119	Identifier	bit		4805753	0					
ANR	4806120	ShiftExpression	0x80 >> ( ( upd -> rwidth - 1 ) & 7 )		4805753	1		>>			
ANR	4806121	PrimaryExpression	0x80		4805753	0					
ANR	4806122	BitAndExpression	( upd -> rwidth - 1 ) & 7		4805753	1		&			
ANR	4806123	AdditiveExpression	upd -> rwidth - 1		4805753	0		-			
ANR	4806124	PtrMemberAccess	upd -> rwidth		4805753	0					
ANR	4806125	Identifier	upd		4805753	0					
ANR	4806126	Identifier	rwidth		4805753	1					
ANR	4806127	PrimaryExpression	1		4805753	1					
ANR	4806128	PrimaryExpression	7		4805753	1					
ANR	4806129	ExpressionStatement	ibyte = ( upd -> rwidth - 1 ) >> 3	3844:6:143300:143352	4805753	3	True				
ANR	4806130	AssignmentExpression	ibyte = ( upd -> rwidth - 1 ) >> 3		4805753	0		=			
ANR	4806131	Identifier	ibyte		4805753	0					
ANR	4806132	ShiftExpression	( upd -> rwidth - 1 ) >> 3		4805753	1		>>			
ANR	4806133	AdditiveExpression	upd -> rwidth - 1		4805753	0		-			
ANR	4806134	PtrMemberAccess	upd -> rwidth		4805753	0					
ANR	4806135	Identifier	upd		4805753	0					
ANR	4806136	Identifier	rwidth		4805753	1					
ANR	4806137	PrimaryExpression	1		4805753	1					
ANR	4806138	PrimaryExpression	3		4805753	1					
ANR	4806139	IfStatement	if ( ! ( upd -> flags & B_FIXDIR ) )		4805753	21					
ANR	4806140	Condition	! ( upd -> flags & B_FIXDIR )	3850:6:143407:143430	4805753	0	True				
ANR	4806141	UnaryOperationExpression	! ( upd -> flags & B_FIXDIR )		4805753	0					
ANR	4806142	UnaryOperator	!		4805753	0					
ANR	4806143	BitAndExpression	upd -> flags & B_FIXDIR		4805753	1		&			
ANR	4806144	PtrMemberAccess	upd -> flags		4805753	0					
ANR	4806145	Identifier	upd		4805753	0					
ANR	4806146	Identifier	flags		4805753	1					
ANR	4806147	Identifier	B_FIXDIR		4805753	1					
ANR	4806148	ExpressionStatement	upd -> flags ^= B_REVDIR	3850:32:143433:143455	4805753	1	True				
ANR	4806149	AssignmentExpression	upd -> flags ^= B_REVDIR		4805753	0		^=			
ANR	4806150	PtrMemberAccess	upd -> flags		4805753	0					
ANR	4806151	Identifier	upd		4805753	0					
ANR	4806152	Identifier	flags		4805753	1					
ANR	4806153	Identifier	B_REVDIR		4805753	1					
ANR	4806154	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		4805753	22					
ANR	4806155	Condition	! ( upd -> flags & B_FSWHITE )	3854:6:143503:143527	4805753	0	True				
ANR	4806156	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		4805753	0					
ANR	4806157	UnaryOperator	!		4805753	0					
ANR	4806158	BitAndExpression	upd -> flags & B_FSWHITE		4805753	1		&			
ANR	4806159	PtrMemberAccess	upd -> flags		4805753	0					
ANR	4806160	Identifier	upd		4805753	0					
ANR	4806161	Identifier	flags		4805753	1					
ANR	4806162	Identifier	B_FSWHITE		4805753	1					
ANR	4806163	CompoundStatement		70:33:2005:2005	4805753	1					
ANR	4806164	WhileStatement	while ( 0 < pwidth && ! * ( ( uint32_t * ) data ) )		4805753	0					
ANR	4806165	Condition	0 < pwidth && ! * ( ( uint32_t * ) data )	3855:12:143544:143577	4805753	0	True				
ANR	4806166	AndExpression	0 < pwidth && ! * ( ( uint32_t * ) data )		4805753	0		&&			
ANR	4806167	RelationalExpression	0 < pwidth		4805753	0		<			
ANR	4806168	PrimaryExpression	0		4805753	0					
ANR	4806169	Identifier	pwidth		4805753	1					
ANR	4806170	UnaryOperationExpression	! * ( ( uint32_t * ) data )		4805753	1					
ANR	4806171	UnaryOperator	!		4805753	0					
ANR	4806172	UnaryOperationExpression	* ( ( uint32_t * ) data )		4805753	1					
ANR	4806173	UnaryOperator	*		4805753	0					
ANR	4806174	CastExpression	( uint32_t * ) data		4805753	1					
ANR	4806175	CastTarget	uint32_t *		4805753	0					
ANR	4806176	Identifier	data		4805753	1					
ANR	4806177	CompoundStatement		71:48:2055:2055	4805753	1					
ANR	4806178	ExpressionStatement	pwidth --	3856:9:143591:143599	4805753	0	True				
ANR	4806179	PostIncDecOperationExpression	pwidth --		4805753	0					
ANR	4806180	Identifier	pwidth		4805753	0					
ANR	4806181	IncDec	--		4805753	1					
ANR	4806182	IfStatement	if ( B_YFLIP & upd -> flags )		4805753	1					
ANR	4806183	Condition	B_YFLIP & upd -> flags	3857:12:143613:143633	4805753	0	True				
ANR	4806184	BitAndExpression	B_YFLIP & upd -> flags		4805753	0		&			
ANR	4806185	Identifier	B_YFLIP		4805753	0					
ANR	4806186	PtrMemberAccess	upd -> flags		4805753	1					
ANR	4806187	Identifier	upd		4805753	0					
ANR	4806188	Identifier	flags		4805753	1					
ANR	4806189	ExpressionStatement	data -= dir	3857:35:143636:143647	4805753	1	True				
ANR	4806190	AssignmentExpression	data -= dir		4805753	0		-=			
ANR	4806191	Identifier	data		4805753	0					
ANR	4806192	Identifier	dir		4805753	1					
ANR	4806193	ElseStatement	else		4805753	0					
ANR	4806194	ExpressionStatement	data += dir	3858:35:143684:143695	4805753	0	True				
ANR	4806195	AssignmentExpression	data += dir		4805753	0		+=			
ANR	4806196	Identifier	data		4805753	0					
ANR	4806197	Identifier	dir		4805753	1					
ANR	4806198	Statement	S_FSTEP	3859:9:143706:143712	4805753	2	True				
ANR	4806199	ExpressionStatement	first = true	3865:3:143759:143771	4805753	23	True				
ANR	4806200	AssignmentExpression	first = true		4805753	0		=			
ANR	4806201	Identifier	first		4805753	0					
ANR	4806202	Identifier	true		4805753	1					
ANR	4806203	WhileStatement	while ( 0 < pwidth -- )		4805753	24					
ANR	4806204	Condition	0 < pwidth --	3866:9:143782:143793	4805753	0	True				
ANR	4806205	RelationalExpression	0 < pwidth --		4805753	0		<			
ANR	4806206	PrimaryExpression	0		4805753	0					
ANR	4806207	PostIncDecOperationExpression	pwidth --		4805753	1					
ANR	4806208	Identifier	pwidth		4805753	0					
ANR	4806209	IncDec	--		4805753	1					
ANR	4806210	CompoundStatement		82:23:2271:2271	4805753	1					
ANR	4806211	Statement	FS_M_ROWERR	3870:6:143847:143857	4805753	0	True				
ANR	4806212	Statement	(	3870:17:143858:143858	4805753	1	True				
ANR	4806213	Statement	upd	3870:18:143859:143861	4805753	2	True				
ANR	4806214	Statement	->	3870:21:143862:143863	4805753	3	True				
ANR	4806215	Statement	cmap	3870:23:143864:143867	4805753	4	True				
ANR	4806216	Statement	[	3870:27:143868:143868	4805753	5	True				
ANR	4806217	Statement	0	3870:28:143869:143869	4805753	6	True				
ANR	4806218	Statement	]	3870:29:143870:143870	4805753	7	True				
ANR	4806219	Statement	.	3870:30:143871:143871	4805753	8	True				
ANR	4806220	Statement	comp	3870:31:143872:143875	4805753	9	True				
ANR	4806221	Statement	)	3870:35:143876:143876	4805753	10	True				
ANR	4806222	ExpressionStatement	"FS_GOAL ( data [ 0 ] , upd -> cmap [ 0 ] . comp )"	3870:37:143878:143912	4805753	11	True				
ANR	4806223	CallExpression	"FS_GOAL ( data [ 0 ] , upd -> cmap [ 0 ] . comp )"		4805753	0					
ANR	4806224	Callee	FS_GOAL		4805753	0					
ANR	4806225	Identifier	FS_GOAL		4805753	0					
ANR	4806226	ArgumentList	data [ 0 ]		4805753	1					
ANR	4806227	Argument	data [ 0 ]		4805753	0					
ANR	4806228	ArrayIndexing	data [ 0 ]		4805753	0					
ANR	4806229	Identifier	data		4805753	0					
ANR	4806230	PrimaryExpression	0		4805753	1					
ANR	4806231	Argument	upd -> cmap [ 0 ] . comp		4805753	1					
ANR	4806232	MemberAccess	upd -> cmap [ 0 ] . comp		4805753	0					
ANR	4806233	ArrayIndexing	upd -> cmap [ 0 ]		4805753	0					
ANR	4806234	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806235	Identifier	upd		4805753	0					
ANR	4806236	Identifier	cmap		4805753	1					
ANR	4806237	PrimaryExpression	0		4805753	1					
ANR	4806238	Identifier	comp		4805753	1					
ANR	4806239	IfStatement	if ( data [ 1 ] || data [ 2 ] || data [ 3 ] )		4805753	12					
ANR	4806240	Condition	data [ 1 ] || data [ 2 ] || data [ 3 ]	3875:9:143973:144001	4805753	0	True				
ANR	4806241	OrExpression	data [ 1 ] || data [ 2 ] || data [ 3 ]		4805753	0		||			
ANR	4806242	ArrayIndexing	data [ 1 ]		4805753	0					
ANR	4806243	Identifier	data		4805753	0					
ANR	4806244	PrimaryExpression	1		4805753	1					
ANR	4806245	OrExpression	data [ 2 ] || data [ 3 ]		4805753	1		||			
ANR	4806246	ArrayIndexing	data [ 2 ]		4805753	0					
ANR	4806247	Identifier	data		4805753	0					
ANR	4806248	PrimaryExpression	2		4805753	1					
ANR	4806249	ArrayIndexing	data [ 3 ]		4805753	1					
ANR	4806250	Identifier	data		4805753	0					
ANR	4806251	PrimaryExpression	3		4805753	1					
ANR	4806252	CompoundStatement		91:40:2479:2479	4805753	1					
ANR	4806253	Statement	FS_M_ROWERR	3877:9:144016:144026	4805753	0	True				
ANR	4806254	Statement	(	3877:20:144027:144027	4805753	1	True				
ANR	4806255	Statement	upd	3877:21:144028:144030	4805753	2	True				
ANR	4806256	Statement	->	3877:24:144031:144032	4805753	3	True				
ANR	4806257	Statement	cmap	3877:26:144033:144036	4805753	4	True				
ANR	4806258	Statement	[	3877:30:144037:144037	4805753	5	True				
ANR	4806259	Statement	1	3877:31:144038:144038	4805753	6	True				
ANR	4806260	Statement	]	3877:32:144039:144039	4805753	7	True				
ANR	4806261	Statement	.	3877:33:144040:144040	4805753	8	True				
ANR	4806262	Statement	comp	3877:34:144041:144044	4805753	9	True				
ANR	4806263	Statement	)	3877:38:144045:144045	4805753	10	True				
ANR	4806264	Statement	FS_GOAL	3877:40:144047:144053	4805753	11	True				
ANR	4806265	Statement	(	3877:47:144054:144054	4805753	12	True				
ANR	4806266	Statement	data	3877:48:144055:144058	4805753	13	True				
ANR	4806267	Statement	[	3877:52:144059:144059	4805753	14	True				
ANR	4806268	Statement	1	3877:53:144060:144060	4805753	15	True				
ANR	4806269	Statement	]	3877:54:144061:144061	4805753	16	True				
ANR	4806270	Statement	","	3877:55:144062:144062	4805753	17	True				
ANR	4806271	Statement	upd	3877:56:144063:144065	4805753	18	True				
ANR	4806272	Statement	->	3877:59:144066:144067	4805753	19	True				
ANR	4806273	Statement	cmap	3877:61:144068:144071	4805753	20	True				
ANR	4806274	Statement	[	3877:65:144072:144072	4805753	21	True				
ANR	4806275	Statement	1	3877:66:144073:144073	4805753	22	True				
ANR	4806276	Statement	]	3877:67:144074:144074	4805753	23	True				
ANR	4806277	Statement	.	3877:68:144075:144075	4805753	24	True				
ANR	4806278	Statement	comp	3877:69:144076:144079	4805753	25	True				
ANR	4806279	Statement	)	3877:73:144080:144080	4805753	26	True				
ANR	4806280	Statement	FS_M_ROWERR	3878:9:144091:144101	4805753	27	True				
ANR	4806281	Statement	(	3878:20:144102:144102	4805753	28	True				
ANR	4806282	Statement	upd	3878:21:144103:144105	4805753	29	True				
ANR	4806283	Statement	->	3878:24:144106:144107	4805753	30	True				
ANR	4806284	Statement	cmap	3878:26:144108:144111	4805753	31	True				
ANR	4806285	Statement	[	3878:30:144112:144112	4805753	32	True				
ANR	4806286	Statement	2	3878:31:144113:144113	4805753	33	True				
ANR	4806287	Statement	]	3878:32:144114:144114	4805753	34	True				
ANR	4806288	Statement	.	3878:33:144115:144115	4805753	35	True				
ANR	4806289	Statement	comp	3878:34:144116:144119	4805753	36	True				
ANR	4806290	Statement	)	3878:38:144120:144120	4805753	37	True				
ANR	4806291	Statement	FS_GOAL	3878:40:144122:144128	4805753	38	True				
ANR	4806292	Statement	(	3878:47:144129:144129	4805753	39	True				
ANR	4806293	Statement	data	3878:48:144130:144133	4805753	40	True				
ANR	4806294	Statement	[	3878:52:144134:144134	4805753	41	True				
ANR	4806295	Statement	2	3878:53:144135:144135	4805753	42	True				
ANR	4806296	Statement	]	3878:54:144136:144136	4805753	43	True				
ANR	4806297	Statement	","	3878:55:144137:144137	4805753	44	True				
ANR	4806298	Statement	upd	3878:56:144138:144140	4805753	45	True				
ANR	4806299	Statement	->	3878:59:144141:144142	4805753	46	True				
ANR	4806300	Statement	cmap	3878:61:144143:144146	4805753	47	True				
ANR	4806301	Statement	[	3878:65:144147:144147	4805753	48	True				
ANR	4806302	Statement	2	3878:66:144148:144148	4805753	49	True				
ANR	4806303	Statement	]	3878:67:144149:144149	4805753	50	True				
ANR	4806304	Statement	.	3878:68:144150:144150	4805753	51	True				
ANR	4806305	Statement	comp	3878:69:144151:144154	4805753	52	True				
ANR	4806306	Statement	)	3878:73:144155:144155	4805753	53	True				
ANR	4806307	Statement	FS_M_ROWERR	3879:9:144166:144176	4805753	54	True				
ANR	4806308	Statement	(	3879:20:144177:144177	4805753	55	True				
ANR	4806309	Statement	upd	3879:21:144178:144180	4805753	56	True				
ANR	4806310	Statement	->	3879:24:144181:144182	4805753	57	True				
ANR	4806311	Statement	cmap	3879:26:144183:144186	4805753	58	True				
ANR	4806312	Statement	[	3879:30:144187:144187	4805753	59	True				
ANR	4806313	Statement	3	3879:31:144188:144188	4805753	60	True				
ANR	4806314	Statement	]	3879:32:144189:144189	4805753	61	True				
ANR	4806315	Statement	.	3879:33:144190:144190	4805753	62	True				
ANR	4806316	Statement	comp	3879:34:144191:144194	4805753	63	True				
ANR	4806317	Statement	)	3879:38:144195:144195	4805753	64	True				
ANR	4806318	Statement	FS_GOAL	3879:40:144197:144203	4805753	65	True				
ANR	4806319	Statement	(	3879:47:144204:144204	4805753	66	True				
ANR	4806320	Statement	data	3879:48:144205:144208	4805753	67	True				
ANR	4806321	Statement	[	3879:52:144209:144209	4805753	68	True				
ANR	4806322	Statement	3	3879:53:144210:144210	4805753	69	True				
ANR	4806323	Statement	]	3879:54:144211:144211	4805753	70	True				
ANR	4806324	Statement	","	3879:55:144212:144212	4805753	71	True				
ANR	4806325	Statement	upd	3879:56:144213:144215	4805753	72	True				
ANR	4806326	Statement	->	3879:59:144216:144217	4805753	73	True				
ANR	4806327	Statement	cmap	3879:61:144218:144221	4805753	74	True				
ANR	4806328	Statement	[	3879:65:144222:144222	4805753	75	True				
ANR	4806329	Statement	3	3879:66:144223:144223	4805753	76	True				
ANR	4806330	Statement	]	3879:67:144224:144224	4805753	77	True				
ANR	4806331	Statement	.	3879:68:144225:144225	4805753	78	True				
ANR	4806332	Statement	comp	3879:69:144226:144229	4805753	79	True				
ANR	4806333	Statement	)	3879:73:144230:144230	4805753	80	True				
ANR	4806334	IfStatement	if ( pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold )		4805753	81					
ANR	4806335	Condition	pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold	3883:12:144321:144381	4805753	0	True				
ANR	4806336	RelationalExpression	pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold		4805753	0		>			
ANR	4806337	ArrayIndexing	pixel [ upd -> cmap [ 0 ] . comp ]		4805753	0					
ANR	4806338	Identifier	pixel		4805753	0					
ANR	4806339	MemberAccess	upd -> cmap [ 0 ] . comp		4805753	1					
ANR	4806340	ArrayIndexing	upd -> cmap [ 0 ]		4805753	0					
ANR	4806341	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806342	Identifier	upd		4805753	0					
ANR	4806343	Identifier	cmap		4805753	1					
ANR	4806344	PrimaryExpression	0		4805753	1					
ANR	4806345	Identifier	comp		4805753	1					
ANR	4806346	PtrMemberAccess	comp [ upd -> cmap [ 0 ] . comp ] -> threshold		4805753	1					
ANR	4806347	ArrayIndexing	comp [ upd -> cmap [ 0 ] . comp ]		4805753	0					
ANR	4806348	Identifier	comp		4805753	0					
ANR	4806349	MemberAccess	upd -> cmap [ 0 ] . comp		4805753	1					
ANR	4806350	ArrayIndexing	upd -> cmap [ 0 ]		4805753	0					
ANR	4806351	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806352	Identifier	upd		4805753	0					
ANR	4806353	Identifier	cmap		4805753	1					
ANR	4806354	PrimaryExpression	0		4805753	1					
ANR	4806355	Identifier	comp		4805753	1					
ANR	4806356	Identifier	threshold		4805753	1					
ANR	4806357	CompoundStatement		99:75:2859:2859	4805753	1					
ANR	4806358	ExpressionStatement	pixel [ 0 ] -= comp [ 0 ] -> spotsize	3885:12:144399:144428	4805753	0	True				
ANR	4806359	AssignmentExpression	pixel [ 0 ] -= comp [ 0 ] -> spotsize		4805753	0		-=			
ANR	4806360	ArrayIndexing	pixel [ 0 ]		4805753	0					
ANR	4806361	Identifier	pixel		4805753	0					
ANR	4806362	PrimaryExpression	0		4805753	1					
ANR	4806363	PtrMemberAccess	comp [ 0 ] -> spotsize		4805753	1					
ANR	4806364	ArrayIndexing	comp [ 0 ]		4805753	0					
ANR	4806365	Identifier	comp		4805753	0					
ANR	4806366	PrimaryExpression	0		4805753	1					
ANR	4806367	Identifier	spotsize		4805753	1					
ANR	4806368	ExpressionStatement	pixel [ 1 ] -= comp [ 1 ] -> spotsize	3886:12:144442:144471	4805753	1	True				
ANR	4806369	AssignmentExpression	pixel [ 1 ] -= comp [ 1 ] -> spotsize		4805753	0		-=			
ANR	4806370	ArrayIndexing	pixel [ 1 ]		4805753	0					
ANR	4806371	Identifier	pixel		4805753	0					
ANR	4806372	PrimaryExpression	1		4805753	1					
ANR	4806373	PtrMemberAccess	comp [ 1 ] -> spotsize		4805753	1					
ANR	4806374	ArrayIndexing	comp [ 1 ]		4805753	0					
ANR	4806375	Identifier	comp		4805753	0					
ANR	4806376	PrimaryExpression	1		4805753	1					
ANR	4806377	Identifier	spotsize		4805753	1					
ANR	4806378	ExpressionStatement	pixel [ 2 ] -= comp [ 2 ] -> spotsize	3887:12:144485:144514	4805753	2	True				
ANR	4806379	AssignmentExpression	pixel [ 2 ] -= comp [ 2 ] -> spotsize		4805753	0		-=			
ANR	4806380	ArrayIndexing	pixel [ 2 ]		4805753	0					
ANR	4806381	Identifier	pixel		4805753	0					
ANR	4806382	PrimaryExpression	2		4805753	1					
ANR	4806383	PtrMemberAccess	comp [ 2 ] -> spotsize		4805753	1					
ANR	4806384	ArrayIndexing	comp [ 2 ]		4805753	0					
ANR	4806385	Identifier	comp		4805753	0					
ANR	4806386	PrimaryExpression	2		4805753	1					
ANR	4806387	Identifier	spotsize		4805753	1					
ANR	4806388	ExpressionStatement	pixel [ 3 ] -= comp [ 3 ] -> spotsize	3888:12:144528:144557	4805753	3	True				
ANR	4806389	AssignmentExpression	pixel [ 3 ] -= comp [ 3 ] -> spotsize		4805753	0		-=			
ANR	4806390	ArrayIndexing	pixel [ 3 ]		4805753	0					
ANR	4806391	Identifier	pixel		4805753	0					
ANR	4806392	PrimaryExpression	3		4805753	1					
ANR	4806393	PtrMemberAccess	comp [ 3 ] -> spotsize		4805753	1					
ANR	4806394	ArrayIndexing	comp [ 3 ]		4805753	0					
ANR	4806395	Identifier	comp		4805753	0					
ANR	4806396	PrimaryExpression	3		4805753	1					
ANR	4806397	Identifier	spotsize		4805753	1					
ANR	4806398	ExpressionStatement	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ] |= bit	3889:12:144571:144614	4805753	4	True				
ANR	4806399	AssignmentExpression	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ] |= bit		4805753	0		|=			
ANR	4806400	ArrayIndexing	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ]		4805753	0					
ANR	4806401	MemberAccess	scan [ upd -> cmap [ 0 ] . comp ] . bytes		4805753	0					
ANR	4806402	ArrayIndexing	scan [ upd -> cmap [ 0 ] . comp ]		4805753	0					
ANR	4806403	Identifier	scan		4805753	0					
ANR	4806404	MemberAccess	upd -> cmap [ 0 ] . comp		4805753	1					
ANR	4806405	ArrayIndexing	upd -> cmap [ 0 ]		4805753	0					
ANR	4806406	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806407	Identifier	upd		4805753	0					
ANR	4806408	Identifier	cmap		4805753	1					
ANR	4806409	PrimaryExpression	0		4805753	1					
ANR	4806410	Identifier	comp		4805753	1					
ANR	4806411	Identifier	bytes		4805753	1					
ANR	4806412	Identifier	ibyte		4805753	1					
ANR	4806413	Identifier	bit		4805753	1					
ANR	4806414	ElseStatement	else		4805753	0					
ANR	4806415	CompoundStatement		111:16:3222:3222	4805753	0					
ANR	4806416	IfStatement	if ( ( data [ 0 ] < data [ 1 ] ) && ( pixel [ upd -> cmap [ 1 ] . comp ] > comp [ upd -> cmap [ 1 ] . comp ] -> threshold ) )		4805753	0					
ANR	4806417	Condition	( data [ 0 ] < data [ 1 ] ) && ( pixel [ upd -> cmap [ 1 ] . comp ] > comp [ upd -> cmap [ 1 ] . comp ] -> threshold )	3897:15:144821:144939	4805753	0	True				
ANR	4806418	AndExpression	( data [ 0 ] < data [ 1 ] ) && ( pixel [ upd -> cmap [ 1 ] . comp ] > comp [ upd -> cmap [ 1 ] . comp ] -> threshold )		4805753	0		&&			
ANR	4806419	RelationalExpression	data [ 0 ] < data [ 1 ]		4805753	0		<			
ANR	4806420	ArrayIndexing	data [ 0 ]		4805753	0					
ANR	4806421	Identifier	data		4805753	0					
ANR	4806422	PrimaryExpression	0		4805753	1					
ANR	4806423	ArrayIndexing	data [ 1 ]		4805753	1					
ANR	4806424	Identifier	data		4805753	0					
ANR	4806425	PrimaryExpression	1		4805753	1					
ANR	4806426	RelationalExpression	pixel [ upd -> cmap [ 1 ] . comp ] > comp [ upd -> cmap [ 1 ] . comp ] -> threshold		4805753	1		>			
ANR	4806427	ArrayIndexing	pixel [ upd -> cmap [ 1 ] . comp ]		4805753	0					
ANR	4806428	Identifier	pixel		4805753	0					
ANR	4806429	MemberAccess	upd -> cmap [ 1 ] . comp		4805753	1					
ANR	4806430	ArrayIndexing	upd -> cmap [ 1 ]		4805753	0					
ANR	4806431	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806432	Identifier	upd		4805753	0					
ANR	4806433	Identifier	cmap		4805753	1					
ANR	4806434	PrimaryExpression	1		4805753	1					
ANR	4806435	Identifier	comp		4805753	1					
ANR	4806436	PtrMemberAccess	comp [ upd -> cmap [ 1 ] . comp ] -> threshold		4805753	1					
ANR	4806437	ArrayIndexing	comp [ upd -> cmap [ 1 ] . comp ]		4805753	0					
ANR	4806438	Identifier	comp		4805753	0					
ANR	4806439	MemberAccess	upd -> cmap [ 1 ] . comp		4805753	1					
ANR	4806440	ArrayIndexing	upd -> cmap [ 1 ]		4805753	0					
ANR	4806441	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806442	Identifier	upd		4805753	0					
ANR	4806443	Identifier	cmap		4805753	1					
ANR	4806444	PrimaryExpression	1		4805753	1					
ANR	4806445	Identifier	comp		4805753	1					
ANR	4806446	Identifier	threshold		4805753	1					
ANR	4806447	CompoundStatement		115:54:3417:3417	4805753	1					
ANR	4806448	ExpressionStatement	pixel [ upd -> cmap [ 1 ] . comp ] -= comp [ upd -> cmap [ 1 ] . comp ] -> spotsize	3900:16:144973:145034	4805753	0	True				
ANR	4806449	AssignmentExpression	pixel [ upd -> cmap [ 1 ] . comp ] -= comp [ upd -> cmap [ 1 ] . comp ] -> spotsize		4805753	0		-=			
ANR	4806450	ArrayIndexing	pixel [ upd -> cmap [ 1 ] . comp ]		4805753	0					
ANR	4806451	Identifier	pixel		4805753	0					
ANR	4806452	MemberAccess	upd -> cmap [ 1 ] . comp		4805753	1					
ANR	4806453	ArrayIndexing	upd -> cmap [ 1 ]		4805753	0					
ANR	4806454	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806455	Identifier	upd		4805753	0					
ANR	4806456	Identifier	cmap		4805753	1					
ANR	4806457	PrimaryExpression	1		4805753	1					
ANR	4806458	Identifier	comp		4805753	1					
ANR	4806459	PtrMemberAccess	comp [ upd -> cmap [ 1 ] . comp ] -> spotsize		4805753	1					
ANR	4806460	ArrayIndexing	comp [ upd -> cmap [ 1 ] . comp ]		4805753	0					
ANR	4806461	Identifier	comp		4805753	0					
ANR	4806462	MemberAccess	upd -> cmap [ 1 ] . comp		4805753	1					
ANR	4806463	ArrayIndexing	upd -> cmap [ 1 ]		4805753	0					
ANR	4806464	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806465	Identifier	upd		4805753	0					
ANR	4806466	Identifier	cmap		4805753	1					
ANR	4806467	PrimaryExpression	1		4805753	1					
ANR	4806468	Identifier	comp		4805753	1					
ANR	4806469	Identifier	spotsize		4805753	1					
ANR	4806470	ExpressionStatement	scan [ upd -> cmap [ 1 ] . comp ] . bytes [ ibyte ] |= bit	3901:17:145053:145096	4805753	1	True				
ANR	4806471	AssignmentExpression	scan [ upd -> cmap [ 1 ] . comp ] . bytes [ ibyte ] |= bit		4805753	0		|=			
ANR	4806472	ArrayIndexing	scan [ upd -> cmap [ 1 ] . comp ] . bytes [ ibyte ]		4805753	0					
ANR	4806473	MemberAccess	scan [ upd -> cmap [ 1 ] . comp ] . bytes		4805753	0					
ANR	4806474	ArrayIndexing	scan [ upd -> cmap [ 1 ] . comp ]		4805753	0					
ANR	4806475	Identifier	scan		4805753	0					
ANR	4806476	MemberAccess	upd -> cmap [ 1 ] . comp		4805753	1					
ANR	4806477	ArrayIndexing	upd -> cmap [ 1 ]		4805753	0					
ANR	4806478	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806479	Identifier	upd		4805753	0					
ANR	4806480	Identifier	cmap		4805753	1					
ANR	4806481	PrimaryExpression	1		4805753	1					
ANR	4806482	Identifier	comp		4805753	1					
ANR	4806483	Identifier	bytes		4805753	1					
ANR	4806484	Identifier	ibyte		4805753	1					
ANR	4806485	Identifier	bit		4805753	1					
ANR	4806486	IfStatement	if ( ( data [ 0 ] < data [ 2 ] ) && ( pixel [ upd -> cmap [ 2 ] . comp ] > comp [ upd -> cmap [ 2 ] . comp ] -> threshold ) )		4805753	1					
ANR	4806487	Condition	( data [ 0 ] < data [ 2 ] ) && ( pixel [ upd -> cmap [ 2 ] . comp ] > comp [ upd -> cmap [ 2 ] . comp ] -> threshold )	3904:15:145183:145301	4805753	0	True				
ANR	4806488	AndExpression	( data [ 0 ] < data [ 2 ] ) && ( pixel [ upd -> cmap [ 2 ] . comp ] > comp [ upd -> cmap [ 2 ] . comp ] -> threshold )		4805753	0		&&			
ANR	4806489	RelationalExpression	data [ 0 ] < data [ 2 ]		4805753	0		<			
ANR	4806490	ArrayIndexing	data [ 0 ]		4805753	0					
ANR	4806491	Identifier	data		4805753	0					
ANR	4806492	PrimaryExpression	0		4805753	1					
ANR	4806493	ArrayIndexing	data [ 2 ]		4805753	1					
ANR	4806494	Identifier	data		4805753	0					
ANR	4806495	PrimaryExpression	2		4805753	1					
ANR	4806496	RelationalExpression	pixel [ upd -> cmap [ 2 ] . comp ] > comp [ upd -> cmap [ 2 ] . comp ] -> threshold		4805753	1		>			
ANR	4806497	ArrayIndexing	pixel [ upd -> cmap [ 2 ] . comp ]		4805753	0					
ANR	4806498	Identifier	pixel		4805753	0					
ANR	4806499	MemberAccess	upd -> cmap [ 2 ] . comp		4805753	1					
ANR	4806500	ArrayIndexing	upd -> cmap [ 2 ]		4805753	0					
ANR	4806501	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806502	Identifier	upd		4805753	0					
ANR	4806503	Identifier	cmap		4805753	1					
ANR	4806504	PrimaryExpression	2		4805753	1					
ANR	4806505	Identifier	comp		4805753	1					
ANR	4806506	PtrMemberAccess	comp [ upd -> cmap [ 2 ] . comp ] -> threshold		4805753	1					
ANR	4806507	ArrayIndexing	comp [ upd -> cmap [ 2 ] . comp ]		4805753	0					
ANR	4806508	Identifier	comp		4805753	0					
ANR	4806509	MemberAccess	upd -> cmap [ 2 ] . comp		4805753	1					
ANR	4806510	ArrayIndexing	upd -> cmap [ 2 ]		4805753	0					
ANR	4806511	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806512	Identifier	upd		4805753	0					
ANR	4806513	Identifier	cmap		4805753	1					
ANR	4806514	PrimaryExpression	2		4805753	1					
ANR	4806515	Identifier	comp		4805753	1					
ANR	4806516	Identifier	threshold		4805753	1					
ANR	4806517	CompoundStatement		122:54:3779:3779	4805753	1					
ANR	4806518	ExpressionStatement	pixel [ upd -> cmap [ 2 ] . comp ] -= comp [ upd -> cmap [ 2 ] . comp ] -> spotsize	3907:16:145335:145396	4805753	0	True				
ANR	4806519	AssignmentExpression	pixel [ upd -> cmap [ 2 ] . comp ] -= comp [ upd -> cmap [ 2 ] . comp ] -> spotsize		4805753	0		-=			
ANR	4806520	ArrayIndexing	pixel [ upd -> cmap [ 2 ] . comp ]		4805753	0					
ANR	4806521	Identifier	pixel		4805753	0					
ANR	4806522	MemberAccess	upd -> cmap [ 2 ] . comp		4805753	1					
ANR	4806523	ArrayIndexing	upd -> cmap [ 2 ]		4805753	0					
ANR	4806524	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806525	Identifier	upd		4805753	0					
ANR	4806526	Identifier	cmap		4805753	1					
ANR	4806527	PrimaryExpression	2		4805753	1					
ANR	4806528	Identifier	comp		4805753	1					
ANR	4806529	PtrMemberAccess	comp [ upd -> cmap [ 2 ] . comp ] -> spotsize		4805753	1					
ANR	4806530	ArrayIndexing	comp [ upd -> cmap [ 2 ] . comp ]		4805753	0					
ANR	4806531	Identifier	comp		4805753	0					
ANR	4806532	MemberAccess	upd -> cmap [ 2 ] . comp		4805753	1					
ANR	4806533	ArrayIndexing	upd -> cmap [ 2 ]		4805753	0					
ANR	4806534	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806535	Identifier	upd		4805753	0					
ANR	4806536	Identifier	cmap		4805753	1					
ANR	4806537	PrimaryExpression	2		4805753	1					
ANR	4806538	Identifier	comp		4805753	1					
ANR	4806539	Identifier	spotsize		4805753	1					
ANR	4806540	ExpressionStatement	scan [ upd -> cmap [ 2 ] . comp ] . bytes [ ibyte ] |= bit	3908:17:145415:145458	4805753	1	True				
ANR	4806541	AssignmentExpression	scan [ upd -> cmap [ 2 ] . comp ] . bytes [ ibyte ] |= bit		4805753	0		|=			
ANR	4806542	ArrayIndexing	scan [ upd -> cmap [ 2 ] . comp ] . bytes [ ibyte ]		4805753	0					
ANR	4806543	MemberAccess	scan [ upd -> cmap [ 2 ] . comp ] . bytes		4805753	0					
ANR	4806544	ArrayIndexing	scan [ upd -> cmap [ 2 ] . comp ]		4805753	0					
ANR	4806545	Identifier	scan		4805753	0					
ANR	4806546	MemberAccess	upd -> cmap [ 2 ] . comp		4805753	1					
ANR	4806547	ArrayIndexing	upd -> cmap [ 2 ]		4805753	0					
ANR	4806548	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806549	Identifier	upd		4805753	0					
ANR	4806550	Identifier	cmap		4805753	1					
ANR	4806551	PrimaryExpression	2		4805753	1					
ANR	4806552	Identifier	comp		4805753	1					
ANR	4806553	Identifier	bytes		4805753	1					
ANR	4806554	Identifier	ibyte		4805753	1					
ANR	4806555	Identifier	bit		4805753	1					
ANR	4806556	IfStatement	if ( ( data [ 0 ] < data [ 3 ] ) && ( pixel [ upd -> cmap [ 3 ] . comp ] > comp [ upd -> cmap [ 3 ] . comp ] -> threshold ) )		4805753	2					
ANR	4806557	Condition	( data [ 0 ] < data [ 3 ] ) && ( pixel [ upd -> cmap [ 3 ] . comp ] > comp [ upd -> cmap [ 3 ] . comp ] -> threshold )	3911:15:145545:145663	4805753	0	True				
ANR	4806558	AndExpression	( data [ 0 ] < data [ 3 ] ) && ( pixel [ upd -> cmap [ 3 ] . comp ] > comp [ upd -> cmap [ 3 ] . comp ] -> threshold )		4805753	0		&&			
ANR	4806559	RelationalExpression	data [ 0 ] < data [ 3 ]		4805753	0		<			
ANR	4806560	ArrayIndexing	data [ 0 ]		4805753	0					
ANR	4806561	Identifier	data		4805753	0					
ANR	4806562	PrimaryExpression	0		4805753	1					
ANR	4806563	ArrayIndexing	data [ 3 ]		4805753	1					
ANR	4806564	Identifier	data		4805753	0					
ANR	4806565	PrimaryExpression	3		4805753	1					
ANR	4806566	RelationalExpression	pixel [ upd -> cmap [ 3 ] . comp ] > comp [ upd -> cmap [ 3 ] . comp ] -> threshold		4805753	1		>			
ANR	4806567	ArrayIndexing	pixel [ upd -> cmap [ 3 ] . comp ]		4805753	0					
ANR	4806568	Identifier	pixel		4805753	0					
ANR	4806569	MemberAccess	upd -> cmap [ 3 ] . comp		4805753	1					
ANR	4806570	ArrayIndexing	upd -> cmap [ 3 ]		4805753	0					
ANR	4806571	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806572	Identifier	upd		4805753	0					
ANR	4806573	Identifier	cmap		4805753	1					
ANR	4806574	PrimaryExpression	3		4805753	1					
ANR	4806575	Identifier	comp		4805753	1					
ANR	4806576	PtrMemberAccess	comp [ upd -> cmap [ 3 ] . comp ] -> threshold		4805753	1					
ANR	4806577	ArrayIndexing	comp [ upd -> cmap [ 3 ] . comp ]		4805753	0					
ANR	4806578	Identifier	comp		4805753	0					
ANR	4806579	MemberAccess	upd -> cmap [ 3 ] . comp		4805753	1					
ANR	4806580	ArrayIndexing	upd -> cmap [ 3 ]		4805753	0					
ANR	4806581	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806582	Identifier	upd		4805753	0					
ANR	4806583	Identifier	cmap		4805753	1					
ANR	4806584	PrimaryExpression	3		4805753	1					
ANR	4806585	Identifier	comp		4805753	1					
ANR	4806586	Identifier	threshold		4805753	1					
ANR	4806587	CompoundStatement		129:54:4141:4141	4805753	1					
ANR	4806588	ExpressionStatement	pixel [ upd -> cmap [ 3 ] . comp ] -= comp [ upd -> cmap [ 3 ] . comp ] -> spotsize	3914:16:145697:145758	4805753	0	True				
ANR	4806589	AssignmentExpression	pixel [ upd -> cmap [ 3 ] . comp ] -= comp [ upd -> cmap [ 3 ] . comp ] -> spotsize		4805753	0		-=			
ANR	4806590	ArrayIndexing	pixel [ upd -> cmap [ 3 ] . comp ]		4805753	0					
ANR	4806591	Identifier	pixel		4805753	0					
ANR	4806592	MemberAccess	upd -> cmap [ 3 ] . comp		4805753	1					
ANR	4806593	ArrayIndexing	upd -> cmap [ 3 ]		4805753	0					
ANR	4806594	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806595	Identifier	upd		4805753	0					
ANR	4806596	Identifier	cmap		4805753	1					
ANR	4806597	PrimaryExpression	3		4805753	1					
ANR	4806598	Identifier	comp		4805753	1					
ANR	4806599	PtrMemberAccess	comp [ upd -> cmap [ 3 ] . comp ] -> spotsize		4805753	1					
ANR	4806600	ArrayIndexing	comp [ upd -> cmap [ 3 ] . comp ]		4805753	0					
ANR	4806601	Identifier	comp		4805753	0					
ANR	4806602	MemberAccess	upd -> cmap [ 3 ] . comp		4805753	1					
ANR	4806603	ArrayIndexing	upd -> cmap [ 3 ]		4805753	0					
ANR	4806604	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806605	Identifier	upd		4805753	0					
ANR	4806606	Identifier	cmap		4805753	1					
ANR	4806607	PrimaryExpression	3		4805753	1					
ANR	4806608	Identifier	comp		4805753	1					
ANR	4806609	Identifier	spotsize		4805753	1					
ANR	4806610	ExpressionStatement	scan [ upd -> cmap [ 3 ] . comp ] . bytes [ ibyte ] |= bit	3915:17:145777:145820	4805753	1	True				
ANR	4806611	AssignmentExpression	scan [ upd -> cmap [ 3 ] . comp ] . bytes [ ibyte ] |= bit		4805753	0		|=			
ANR	4806612	ArrayIndexing	scan [ upd -> cmap [ 3 ] . comp ] . bytes [ ibyte ]		4805753	0					
ANR	4806613	MemberAccess	scan [ upd -> cmap [ 3 ] . comp ] . bytes		4805753	0					
ANR	4806614	ArrayIndexing	scan [ upd -> cmap [ 3 ] . comp ]		4805753	0					
ANR	4806615	Identifier	scan		4805753	0					
ANR	4806616	MemberAccess	upd -> cmap [ 3 ] . comp		4805753	1					
ANR	4806617	ArrayIndexing	upd -> cmap [ 3 ]		4805753	0					
ANR	4806618	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806619	Identifier	upd		4805753	0					
ANR	4806620	Identifier	cmap		4805753	1					
ANR	4806621	PrimaryExpression	3		4805753	1					
ANR	4806622	Identifier	comp		4805753	1					
ANR	4806623	Identifier	bytes		4805753	1					
ANR	4806624	Identifier	ibyte		4805753	1					
ANR	4806625	Identifier	bit		4805753	1					
ANR	4806626	Statement	FS_DIST	3923:9:145998:146004	4805753	82	True				
ANR	4806627	Statement	(	3923:16:146005:146005	4805753	83	True				
ANR	4806628	Statement	upd	3923:17:146006:146008	4805753	84	True				
ANR	4806629	Statement	->	3923:20:146009:146010	4805753	85	True				
ANR	4806630	Statement	cmap	3923:22:146011:146014	4805753	86	True				
ANR	4806631	Statement	[	3923:26:146015:146015	4805753	87	True				
ANR	4806632	Statement	3	3923:27:146016:146016	4805753	88	True				
ANR	4806633	Statement	]	3923:28:146017:146017	4805753	89	True				
ANR	4806634	Statement	.	3923:29:146018:146018	4805753	90	True				
ANR	4806635	Statement	comp	3923:30:146019:146022	4805753	91	True				
ANR	4806636	Statement	)	3923:34:146023:146023	4805753	92	True				
ANR	4806637	Statement	FS_DIST	3924:9:146034:146040	4805753	93	True				
ANR	4806638	Statement	(	3924:16:146041:146041	4805753	94	True				
ANR	4806639	Statement	upd	3924:17:146042:146044	4805753	95	True				
ANR	4806640	Statement	->	3924:20:146045:146046	4805753	96	True				
ANR	4806641	Statement	cmap	3924:22:146047:146050	4805753	97	True				
ANR	4806642	Statement	[	3924:26:146051:146051	4805753	98	True				
ANR	4806643	Statement	2	3924:27:146052:146052	4805753	99	True				
ANR	4806644	Statement	]	3924:28:146053:146053	4805753	100	True				
ANR	4806645	Statement	.	3924:29:146054:146054	4805753	101	True				
ANR	4806646	Statement	comp	3924:30:146055:146058	4805753	102	True				
ANR	4806647	Statement	)	3924:34:146059:146059	4805753	103	True				
ANR	4806648	Statement	FS_DIST	3925:9:146070:146076	4805753	104	True				
ANR	4806649	Statement	(	3925:16:146077:146077	4805753	105	True				
ANR	4806650	Statement	upd	3925:17:146078:146080	4805753	106	True				
ANR	4806651	Statement	->	3925:20:146081:146082	4805753	107	True				
ANR	4806652	Statement	cmap	3925:22:146083:146086	4805753	108	True				
ANR	4806653	Statement	[	3925:26:146087:146087	4805753	109	True				
ANR	4806654	Statement	1	3925:27:146088:146088	4805753	110	True				
ANR	4806655	Statement	]	3925:28:146089:146089	4805753	111	True				
ANR	4806656	Statement	.	3925:29:146090:146090	4805753	112	True				
ANR	4806657	Statement	comp	3925:30:146091:146094	4805753	113	True				
ANR	4806658	Statement	)	3925:34:146095:146095	4805753	114	True				
ANR	4806659	ElseStatement	else		4805753	0					
ANR	4806660	IfStatement	if ( pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold )		4805753	0					
ANR	4806661	Condition	pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold	3927:16:146114:146174	4805753	0	True				
ANR	4806662	RelationalExpression	pixel [ upd -> cmap [ 0 ] . comp ] > comp [ upd -> cmap [ 0 ] . comp ] -> threshold		4805753	0		>			
ANR	4806663	ArrayIndexing	pixel [ upd -> cmap [ 0 ] . comp ]		4805753	0					
ANR	4806664	Identifier	pixel		4805753	0					
ANR	4806665	MemberAccess	upd -> cmap [ 0 ] . comp		4805753	1					
ANR	4806666	ArrayIndexing	upd -> cmap [ 0 ]		4805753	0					
ANR	4806667	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806668	Identifier	upd		4805753	0					
ANR	4806669	Identifier	cmap		4805753	1					
ANR	4806670	PrimaryExpression	0		4805753	1					
ANR	4806671	Identifier	comp		4805753	1					
ANR	4806672	PtrMemberAccess	comp [ upd -> cmap [ 0 ] . comp ] -> threshold		4805753	1					
ANR	4806673	ArrayIndexing	comp [ upd -> cmap [ 0 ] . comp ]		4805753	0					
ANR	4806674	Identifier	comp		4805753	0					
ANR	4806675	MemberAccess	upd -> cmap [ 0 ] . comp		4805753	1					
ANR	4806676	ArrayIndexing	upd -> cmap [ 0 ]		4805753	0					
ANR	4806677	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806678	Identifier	upd		4805753	0					
ANR	4806679	Identifier	cmap		4805753	1					
ANR	4806680	PrimaryExpression	0		4805753	1					
ANR	4806681	Identifier	comp		4805753	1					
ANR	4806682	Identifier	threshold		4805753	1					
ANR	4806683	CompoundStatement		143:79:4652:4652	4805753	1					
ANR	4806684	ExpressionStatement	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ] |= bit	3928:17:146196:146239	4805753	0	True				
ANR	4806685	AssignmentExpression	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ] |= bit		4805753	0		|=			
ANR	4806686	ArrayIndexing	scan [ upd -> cmap [ 0 ] . comp ] . bytes [ ibyte ]		4805753	0					
ANR	4806687	MemberAccess	scan [ upd -> cmap [ 0 ] . comp ] . bytes		4805753	0					
ANR	4806688	ArrayIndexing	scan [ upd -> cmap [ 0 ] . comp ]		4805753	0					
ANR	4806689	Identifier	scan		4805753	0					
ANR	4806690	MemberAccess	upd -> cmap [ 0 ] . comp		4805753	1					
ANR	4806691	ArrayIndexing	upd -> cmap [ 0 ]		4805753	0					
ANR	4806692	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806693	Identifier	upd		4805753	0					
ANR	4806694	Identifier	cmap		4805753	1					
ANR	4806695	PrimaryExpression	0		4805753	1					
ANR	4806696	Identifier	comp		4805753	1					
ANR	4806697	Identifier	bytes		4805753	1					
ANR	4806698	Identifier	ibyte		4805753	1					
ANR	4806699	Identifier	bit		4805753	1					
ANR	4806700	ExpressionStatement	pixel [ upd -> cmap [ 0 ] . comp ] -= comp [ upd -> cmap [ 0 ] . comp ] -> spotsize	3929:16:146257:146318	4805753	1	True				
ANR	4806701	AssignmentExpression	pixel [ upd -> cmap [ 0 ] . comp ] -= comp [ upd -> cmap [ 0 ] . comp ] -> spotsize		4805753	0		-=			
ANR	4806702	ArrayIndexing	pixel [ upd -> cmap [ 0 ] . comp ]		4805753	0					
ANR	4806703	Identifier	pixel		4805753	0					
ANR	4806704	MemberAccess	upd -> cmap [ 0 ] . comp		4805753	1					
ANR	4806705	ArrayIndexing	upd -> cmap [ 0 ]		4805753	0					
ANR	4806706	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806707	Identifier	upd		4805753	0					
ANR	4806708	Identifier	cmap		4805753	1					
ANR	4806709	PrimaryExpression	0		4805753	1					
ANR	4806710	Identifier	comp		4805753	1					
ANR	4806711	PtrMemberAccess	comp [ upd -> cmap [ 0 ] . comp ] -> spotsize		4805753	1					
ANR	4806712	ArrayIndexing	comp [ upd -> cmap [ 0 ] . comp ]		4805753	0					
ANR	4806713	Identifier	comp		4805753	0					
ANR	4806714	MemberAccess	upd -> cmap [ 0 ] . comp		4805753	1					
ANR	4806715	ArrayIndexing	upd -> cmap [ 0 ]		4805753	0					
ANR	4806716	PtrMemberAccess	upd -> cmap		4805753	0					
ANR	4806717	Identifier	upd		4805753	0					
ANR	4806718	Identifier	cmap		4805753	1					
ANR	4806719	PrimaryExpression	0		4805753	1					
ANR	4806720	Identifier	comp		4805753	1					
ANR	4806721	Identifier	spotsize		4805753	1					
ANR	4806722	Statement	FS_DIST	3932:6:146335:146341	4805753	13	True				
ANR	4806723	Statement	(	3932:13:146342:146342	4805753	14	True				
ANR	4806724	Statement	upd	3932:14:146343:146345	4805753	15	True				
ANR	4806725	Statement	->	3932:17:146346:146347	4805753	16	True				
ANR	4806726	Statement	cmap	3932:19:146348:146351	4805753	17	True				
ANR	4806727	Statement	[	3932:23:146352:146352	4805753	18	True				
ANR	4806728	Statement	0	3932:24:146353:146353	4805753	19	True				
ANR	4806729	Statement	]	3932:25:146354:146354	4805753	20	True				
ANR	4806730	Statement	.	3932:26:146355:146355	4805753	21	True				
ANR	4806731	Statement	comp	3932:27:146356:146359	4805753	22	True				
ANR	4806732	Statement	)	3932:31:146360:146360	4805753	23	True				
ANR	4806733	Statement	S_FSTEP	3936:6:146424:146430	4805753	24	True				
ANR	4806734	IfStatement	if ( upd -> flags & B_YFLIP )		4805753	25					
ANR	4806735	Condition	upd -> flags & B_YFLIP	3937:9:146441:146460	4805753	0	True				
ANR	4806736	BitAndExpression	upd -> flags & B_YFLIP		4805753	0		&			
ANR	4806737	PtrMemberAccess	upd -> flags		4805753	0					
ANR	4806738	Identifier	upd		4805753	0					
ANR	4806739	Identifier	flags		4805753	1					
ANR	4806740	Identifier	B_YFLIP		4805753	1					
ANR	4806741	ExpressionStatement	data -= dir	3937:31:146463:146474	4805753	1	True				
ANR	4806742	AssignmentExpression	data -= dir		4805753	0		-=			
ANR	4806743	Identifier	data		4805753	0					
ANR	4806744	Identifier	dir		4805753	1					
ANR	4806745	ElseStatement	else		4805753	0					
ANR	4806746	ExpressionStatement	data += dir	3938:31:146507:146518	4805753	0	True				
ANR	4806747	AssignmentExpression	data += dir		4805753	0		+=			
ANR	4806748	Identifier	data		4805753	0					
ANR	4806749	Identifier	dir		4805753	1					
ANR	4806750	IfStatement	if ( 0 < upd -> nlimits )		4805753	25					
ANR	4806751	Condition	0 < upd -> nlimits	3943:6:146573:146588	4805753	0	True				
ANR	4806752	RelationalExpression	0 < upd -> nlimits		4805753	0		<			
ANR	4806753	PrimaryExpression	0		4805753	0					
ANR	4806754	PtrMemberAccess	upd -> nlimits		4805753	1					
ANR	4806755	Identifier	upd		4805753	0					
ANR	4806756	Identifier	nlimits		4805753	1					
ANR	4806757	ExpressionStatement	"upd_limits ( upd , true )"	3943:24:146591:146611	4805753	1	True				
ANR	4806758	CallExpression	"upd_limits ( upd , true )"		4805753	0					
ANR	4806759	Callee	upd_limits		4805753	0					
ANR	4806760	Identifier	upd_limits		4805753	0					
ANR	4806761	ArgumentList	upd		4805753	1					
ANR	4806762	Argument	upd		4805753	0					
ANR	4806763	Identifier	upd		4805753	0					
ANR	4806764	Argument	true		4805753	1					
ANR	4806765	Identifier	true		4805753	0					
ANR	4806766	ReturnStatement	return 0 ;	3944:3:146616:146624	4805753	26	True				
ANR	4806767	PrimaryExpression	0		4805753	0					
ANR	4806768	ReturnType	static int		4805753	1					
ANR	4806769	Identifier	upd_fscmyk		4805753	2					
ANR	4806770	ParameterList	upd_p upd		4805753	3					
ANR	4806771	Parameter	upd_p upd	3784:11:141513:141521	4805753	0	True				
ANR	4806772	ParameterType	upd_p		4805753	0					
ANR	4806773	Identifier	upd		4805753	1					
ANR	4806774	CFGEntryNode	ENTRY		4805753		True				
ANR	4806775	CFGExitNode	EXIT		4805753		True				
ANR	4806776	Symbol	* upd -> cmap [ 1 ] . comp		4805753						
ANR	4806777	Symbol	* scan [ upd -> cmap [ 3 ] . comp ] . bytes		4805753						
ANR	4806778	Symbol	data		4805753						
ANR	4806779	Symbol	* * * * upd		4805753						
ANR	4806780	Symbol	* scan [ upd -> cmap [ 1 ] . comp ] . bytes		4805753						
ANR	4806781	Symbol	ibyte		4805753						
ANR	4806782	Symbol	upd -> cmap [ 1 ] . comp		4805753						
ANR	4806783	Symbol	pwidth		4805753						
ANR	4806784	Symbol	scan [ 1 ] . bytes		4805753						
ANR	4806785	Symbol	* * * upd -> cmap		4805753						
ANR	4806786	Symbol	dir		4805753						
ANR	4806787	Symbol	bit		4805753						
ANR	4806788	Symbol	comp [ 3 ] -> spotsize		4805753						
ANR	4806789	Symbol	* * upd -> cmap [ 3 ] . comp		4805753						
ANR	4806790	Symbol	upd -> cmap		4805753						
ANR	4806791	Symbol	upd -> rwidth		4805753						
ANR	4806792	Symbol	upd -> valbuf		4805753						
ANR	4806793	Symbol	upd -> nlimits		4805753						
ANR	4806794	Symbol	rowerr		4805753						
ANR	4806795	Symbol	* scan		4805753						
ANR	4806796	Symbol	scan [ 2 ] . bytes		4805753						
ANR	4806797	Symbol	comp [ upd -> cmap [ 0 ] . comp ] -> spotsize		4805753						
ANR	4806798	Symbol	upd -> nbytes		4805753						
ANR	4806799	Symbol	upd -> valptr		4805753						
ANR	4806800	Symbol	comp		4805753						
ANR	4806801	Symbol	* * upd -> cmap [ 2 ] . comp		4805753						
ANR	4806802	Symbol	* upd -> scnbuf		4805753						
ANR	4806803	Symbol	upd -> cmap [ 3 ] . comp		4805753						
ANR	4806804	Symbol	comp [ 0 ] -> spotsize		4805753						
ANR	4806805	Symbol	upd		4805753						
ANR	4806806	Symbol	* upd -> cmap [ 0 ] . comp		4805753						
ANR	4806807	Symbol	* pixel		4805753						
ANR	4806808	Symbol	* ( ( uint32_t * ) data )		4805753						
ANR	4806809	Symbol	* ibyte		4805753						
ANR	4806810	Symbol	* * comp		4805753						
ANR	4806811	Symbol	* upd -> yscnbuf		4805753						
ANR	4806812	Symbol	upd -> cmap [ 2 ] . comp		4805753						
ANR	4806813	Symbol	upd -> yscnbuf		4805753						
ANR	4806814	Symbol	* * scan		4805753						
ANR	4806815	Symbol	true		4805753						
ANR	4806816	Symbol	comp [ upd -> cmap [ 1 ] . comp ] -> threshold		4805753						
ANR	4806817	Symbol	comp [ upd -> cmap [ 3 ] . comp ] -> spotsize		4805753						
ANR	4806818	Symbol	comp [ 1 ] -> spotsize		4805753						
ANR	4806819	Symbol	upd -> gsscan		4805753						
ANR	4806820	Symbol	* scan [ upd -> cmap [ 2 ] . comp ] . bytes		4805753						
ANR	4806821	Symbol	scan		4805753						
ANR	4806822	Symbol	* upd -> cmap		4805753						
ANR	4806823	Symbol	comp [ upd -> cmap [ 0 ] . comp ] -> threshold		4805753						
ANR	4806824	Symbol	upd -> flags		4805753						
ANR	4806825	Symbol	* upd		4805753						
ANR	4806826	Symbol	* upd -> cmap [ 2 ] . comp		4805753						
ANR	4806827	Symbol	* comp		4805753						
ANR	4806828	Symbol	* scan [ upd -> cmap [ 0 ] . comp ] . bytes		4805753						
ANR	4806829	Symbol	* upd -> scnmsk		4805753						
ANR	4806830	Symbol	colerr		4805753						
ANR	4806831	Symbol	pixel		4805753						
ANR	4806832	Symbol	comp [ upd -> cmap [ 3 ] . comp ] -> threshold		4805753						
ANR	4806833	Symbol	* * upd -> cmap [ 1 ] . comp		4805753						
ANR	4806834	Symbol	comp [ upd -> cmap [ 2 ] . comp ] -> spotsize		4805753						
ANR	4806835	Symbol	scan [ upd -> cmap [ 0 ] . comp ] . bytes		4805753						
ANR	4806836	Symbol	upd -> scnmsk		4805753						
ANR	4806837	Symbol	* * * upd		4805753						
ANR	4806838	Symbol	false		4805753						
ANR	4806839	Symbol	scan [ upd -> cmap [ 3 ] . comp ] . bytes		4805753						
ANR	4806840	Symbol	B_FSWHITE		4805753						
ANR	4806841	Symbol	* upd -> cmap [ 3 ] . comp		4805753						
ANR	4806842	Symbol	comp [ upd -> cmap [ 2 ] . comp ] -> threshold		4805753						
ANR	4806843	Symbol	B_FIXDIR		4805753						
ANR	4806844	Symbol	upd -> cmap [ 0 ] . comp		4805753						
ANR	4806845	Symbol	comp [ 2 ] -> spotsize		4805753						
ANR	4806846	Symbol	scan [ upd -> cmap [ 1 ] . comp ] . bytes		4805753						
ANR	4806847	Symbol	scan [ 0 ] . bytes		4805753						
ANR	4806848	Symbol	scan [ upd -> cmap [ 2 ] . comp ] . bytes		4805753						
ANR	4806849	Symbol	* * upd -> cmap		4805753						
ANR	4806850	Symbol	upd -> scnbuf		4805753						
ANR	4806851	Symbol	* ( uint32_t * ) data		4805753						
ANR	4806852	Symbol	B_YFLIP		4805753						
ANR	4806853	Symbol	* * upd -> cmap [ 0 ] . comp		4805753						
ANR	4806854	Symbol	B_REVDIR		4805753						
ANR	4806855	Symbol	* * upd		4805753						
ANR	4806856	Symbol	* data		4805753						
ANR	4806857	Symbol	first		4805753						
ANR	4806858	Symbol	comp [ upd -> cmap [ 1 ] . comp ] -> spotsize		4805753						
ANR	4806859	Symbol	scan [ 3 ] . bytes		4805753						
ANR	4806860	Function	upd_open_fscmy_k	3951:0:146852:147103							
ANR	4806861	FunctionDef	upd_open_fscmy_k (upd_device * udev)		4806860	0					
ANR	4806862	CompoundStatement		3953:0:146899:147103	4806860	0					
ANR	4806863	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	3954:3:146904:146931	4806860	0	True				
ANR	4806864	IdentifierDecl	upd = udev -> upd		4806860	0					
ANR	4806865	IdentifierDeclType	const upd_p		4806860	0					
ANR	4806866	Identifier	upd		4806860	1					
ANR	4806867	AssignmentExpression	upd = udev -> upd		4806860	2		=			
ANR	4806868	Identifier	upd		4806860	0					
ANR	4806869	PtrMemberAccess	udev -> upd		4806860	1					
ANR	4806870	Identifier	udev		4806860	0					
ANR	4806871	Identifier	upd		4806860	1					
ANR	4806872	ExpressionStatement	upd_open_fscomp ( udev )	3956:3:146937:146958	4806860	1	True				
ANR	4806873	CallExpression	upd_open_fscomp ( udev )		4806860	0					
ANR	4806874	Callee	upd_open_fscomp		4806860	0					
ANR	4806875	Identifier	upd_open_fscomp		4806860	0					
ANR	4806876	ArgumentList	udev		4806860	1					
ANR	4806877	Argument	udev		4806860	0					
ANR	4806878	Identifier	udev		4806860	0					
ANR	4806879	IfStatement	if ( ( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp ) )		4806860	2					
ANR	4806880	Condition	( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp )	3958:6:146967:147016	4806860	0	True				
ANR	4806881	AndExpression	( B_RENDER & upd -> flags ) && ( 4 == upd -> ncomp )		4806860	0		&&			
ANR	4806882	BitAndExpression	B_RENDER & upd -> flags		4806860	0		&			
ANR	4806883	Identifier	B_RENDER		4806860	0					
ANR	4806884	PtrMemberAccess	upd -> flags		4806860	1					
ANR	4806885	Identifier	upd		4806860	0					
ANR	4806886	Identifier	flags		4806860	1					
ANR	4806887	EqualityExpression	4 == upd -> ncomp		4806860	1		==			
ANR	4806888	PrimaryExpression	4		4806860	0					
ANR	4806889	PtrMemberAccess	upd -> ncomp		4806860	1					
ANR	4806890	Identifier	upd		4806860	0					
ANR	4806891	Identifier	ncomp		4806860	1					
ANR	4806892	CompoundStatement		7:25:119:119	4806860	1					
ANR	4806893	ExpressionStatement	upd -> render = upd_fscmy_k	3960:6:147027:147052	4806860	0	True				
ANR	4806894	AssignmentExpression	upd -> render = upd_fscmy_k		4806860	0		=			
ANR	4806895	PtrMemberAccess	upd -> render		4806860	0					
ANR	4806896	Identifier	upd		4806860	0					
ANR	4806897	Identifier	render		4806860	1					
ANR	4806898	Identifier	upd_fscmy_k		4806860	1					
ANR	4806899	ElseStatement	else		4806860	0					
ANR	4806900	CompoundStatement		9:10:164:164	4806860	0					
ANR	4806901	ExpressionStatement	upd -> flags &= ~B_RENDER	3962:6:147072:147095	4806860	0	True				
ANR	4806902	AssignmentExpression	upd -> flags &= ~B_RENDER		4806860	0		&=			
ANR	4806903	PtrMemberAccess	upd -> flags		4806860	0					
ANR	4806904	Identifier	upd		4806860	0					
ANR	4806905	Identifier	flags		4806860	1					
ANR	4806906	Identifier	~B_RENDER		4806860	1					
ANR	4806907	ReturnType	static void		4806860	1					
ANR	4806908	Identifier	upd_open_fscmy_k		4806860	2					
ANR	4806909	ParameterList	upd_device * udev		4806860	3					
ANR	4806910	Parameter	upd_device * udev	3952:17:146881:146896	4806860	0	True				
ANR	4806911	ParameterType	upd_device *		4806860	0					
ANR	4806912	Identifier	udev		4806860	1					
ANR	4806913	CFGEntryNode	ENTRY		4806860		True				
ANR	4806914	CFGExitNode	EXIT		4806860		True				
ANR	4806915	Symbol	upd -> flags		4806860						
ANR	4806916	Symbol	udev -> upd		4806860						
ANR	4806917	Symbol	* udev		4806860						
ANR	4806918	Symbol	* upd		4806860						
ANR	4806919	Symbol	udev		4806860						
ANR	4806920	Symbol	upd		4806860						
ANR	4806921	Symbol	B_RENDER		4806860						
ANR	4806922	Symbol	upd_fscmy_k		4806860						
ANR	4806923	Symbol	~B_RENDER		4806860						
ANR	4806924	Symbol	upd -> ncomp		4806860						
ANR	4806925	Symbol	upd -> render		4806860						
ANR	4806926	Function	upd_fscmy_k	3971:0:147329:151444							
ANR	4806927	FunctionDef	upd_fscmy_k (upd_p upd)		4806926	0					
ANR	4806928	CompoundStatement		3973:0:147363:151444	4806926	0					
ANR	4806929	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ] ;	3974:3:147368:147434	4806926	0	True				
ANR	4806930	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4806926	0					
ANR	4806931	IdentifierDeclType	const updscan_p		4806926	0					
ANR	4806932	Identifier	scan		4806926	1					
ANR	4806933	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4806926	2		=			
ANR	4806934	Identifier	scan		4806926	0					
ANR	4806935	ArrayIndexing	upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4806926	1					
ANR	4806936	PtrMemberAccess	upd -> scnbuf		4806926	0					
ANR	4806937	Identifier	upd		4806926	0					
ANR	4806938	Identifier	scnbuf		4806926	1					
ANR	4806939	BitAndExpression	upd -> yscnbuf & upd -> scnmsk		4806926	1		&			
ANR	4806940	PtrMemberAccess	upd -> yscnbuf		4806926	0					
ANR	4806941	Identifier	upd		4806926	0					
ANR	4806942	Identifier	yscnbuf		4806926	1					
ANR	4806943	PtrMemberAccess	upd -> scnmsk		4806926	1					
ANR	4806944	Identifier	upd		4806926	0					
ANR	4806945	Identifier	scnmsk		4806926	1					
ANR	4806946	IdentifierDeclStatement	const updcomp_p * comp = ( updcomp_p * ) upd -> valptr ;	3975:3:147439:147491	4806926	1	True				
ANR	4806947	IdentifierDecl	* comp = ( updcomp_p * ) upd -> valptr		4806926	0					
ANR	4806948	IdentifierDeclType	const updcomp_p *		4806926	0					
ANR	4806949	Identifier	comp		4806926	1					
ANR	4806950	AssignmentExpression	* comp = ( updcomp_p * ) upd -> valptr		4806926	2		=			
ANR	4806951	Identifier	comp		4806926	0					
ANR	4806952	CastExpression	( updcomp_p * ) upd -> valptr		4806926	1					
ANR	4806953	CastTarget	updcomp_p *		4806926	0					
ANR	4806954	PtrMemberAccess	upd -> valptr		4806926	1					
ANR	4806955	Identifier	upd		4806926	0					
ANR	4806956	Identifier	valptr		4806926	1					
ANR	4806957	Statement	int32_t	3976:3:147496:147502	4806926	2	True				
ANR	4806958	Statement	*	3976:11:147504:147504	4806926	3	True				
ANR	4806959	Statement	const	3976:12:147505:147509	4806926	4	True				
ANR	4806960	ExpressionStatement	pixel = upd -> valbuf	3976:22:147515:147535	4806926	5	True				
ANR	4806961	AssignmentExpression	pixel = upd -> valbuf		4806926	0		=			
ANR	4806962	Identifier	pixel		4806926	0					
ANR	4806963	PtrMemberAccess	upd -> valbuf		4806926	1					
ANR	4806964	Identifier	upd		4806926	0					
ANR	4806965	Identifier	valbuf		4806926	1					
ANR	4806966	Statement	int32_t	3977:3:147540:147546	4806926	6	True				
ANR	4806967	Statement	*	3977:11:147548:147548	4806926	7	True				
ANR	4806968	Statement	const	3977:12:147549:147553	4806926	8	True				
ANR	4806969	ExpressionStatement	colerr = pixel + upd -> ncomp	3977:22:147559:147587	4806926	9	True				
ANR	4806970	AssignmentExpression	colerr = pixel + upd -> ncomp		4806926	0		=			
ANR	4806971	Identifier	colerr		4806926	0					
ANR	4806972	AdditiveExpression	pixel + upd -> ncomp		4806926	1		+			
ANR	4806973	Identifier	pixel		4806926	0					
ANR	4806974	PtrMemberAccess	upd -> ncomp		4806926	1					
ANR	4806975	Identifier	upd		4806926	0					
ANR	4806976	Identifier	ncomp		4806926	1					
ANR	4806977	IdentifierDeclStatement	int32_t * rowerr = colerr + upd -> ncomp ;	3978:3:147592:147639	4806926	10	True				
ANR	4806978	IdentifierDecl	* rowerr = colerr + upd -> ncomp		4806926	0					
ANR	4806979	IdentifierDeclType	int32_t *		4806926	0					
ANR	4806980	Identifier	rowerr		4806926	1					
ANR	4806981	AssignmentExpression	* rowerr = colerr + upd -> ncomp		4806926	2		=			
ANR	4806982	Identifier	rowerr		4806926	0					
ANR	4806983	AdditiveExpression	colerr + upd -> ncomp		4806926	1		+			
ANR	4806984	Identifier	colerr		4806926	0					
ANR	4806985	PtrMemberAccess	upd -> ncomp		4806926	1					
ANR	4806986	Identifier	upd		4806926	0					
ANR	4806987	Identifier	ncomp		4806926	1					
ANR	4806988	IdentifierDeclStatement	int pwidth = upd -> rwidth ;	3979:3:147644:147681	4806926	11	True				
ANR	4806989	IdentifierDecl	pwidth = upd -> rwidth		4806926	0					
ANR	4806990	IdentifierDeclType	int		4806926	0					
ANR	4806991	Identifier	pwidth		4806926	1					
ANR	4806992	AssignmentExpression	pwidth = upd -> rwidth		4806926	2		=			
ANR	4806993	Identifier	pwidth		4806926	0					
ANR	4806994	PtrMemberAccess	upd -> rwidth		4806926	1					
ANR	4806995	Identifier	upd		4806926	0					
ANR	4806996	Identifier	rwidth		4806926	1					
ANR	4806997	IdentifierDeclStatement	"int dir , ibyte ;"	3980:3:147686:147712	4806926	12	True				
ANR	4806998	IdentifierDecl	dir		4806926	0					
ANR	4806999	IdentifierDeclType	int		4806926	0					
ANR	4807000	Identifier	dir		4806926	1					
ANR	4807001	IdentifierDecl	ibyte		4806926	1					
ANR	4807002	IdentifierDeclType	int		4806926	0					
ANR	4807003	Identifier	ibyte		4806926	1					
ANR	4807004	IdentifierDeclStatement	uint32_t ci ;	3981:3:147717:147734	4806926	13	True				
ANR	4807005	IdentifierDecl	ci		4806926	0					
ANR	4807006	IdentifierDeclType	uint32_t		4806926	0					
ANR	4807007	Identifier	ci		4806926	1					
ANR	4807008	IdentifierDeclStatement	byte bit ;	3982:3:147739:147755	4806926	14	True				
ANR	4807009	IdentifierDecl	bit		4806926	0					
ANR	4807010	IdentifierDeclType	byte		4806926	0					
ANR	4807011	Identifier	bit		4806926	1					
ANR	4807012	IdentifierDeclStatement	bool first = true ;	3983:3:147760:147785	4806926	15	True				
ANR	4807013	IdentifierDecl	first = true		4806926	0					
ANR	4807014	IdentifierDeclType	bool		4806926	0					
ANR	4807015	Identifier	first		4806926	1					
ANR	4807016	AssignmentExpression	first = true		4806926	2		=			
ANR	4807017	Identifier	true		4806926	0					
ANR	4807018	Identifier	true		4806926	1					
ANR	4807019	ExpressionStatement	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"	3987:3:147825:147860	4806926	16	True				
ANR	4807020	CallExpression	"memset ( scan [ 3 ] . bytes , 0 , upd -> nbytes )"		4806926	0					
ANR	4807021	Callee	memset		4806926	0					
ANR	4807022	Identifier	memset		4806926	0					
ANR	4807023	ArgumentList	scan [ 3 ] . bytes		4806926	1					
ANR	4807024	Argument	scan [ 3 ] . bytes		4806926	0					
ANR	4807025	MemberAccess	scan [ 3 ] . bytes		4806926	0					
ANR	4807026	ArrayIndexing	scan [ 3 ]		4806926	0					
ANR	4807027	Identifier	scan		4806926	0					
ANR	4807028	PrimaryExpression	3		4806926	1					
ANR	4807029	Identifier	bytes		4806926	1					
ANR	4807030	Argument	0		4806926	1					
ANR	4807031	PrimaryExpression	0		4806926	0					
ANR	4807032	Argument	upd -> nbytes		4806926	2					
ANR	4807033	PtrMemberAccess	upd -> nbytes		4806926	0					
ANR	4807034	Identifier	upd		4806926	0					
ANR	4807035	Identifier	nbytes		4806926	1					
ANR	4807036	ExpressionStatement	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"	3988:3:147865:147900	4806926	17	True				
ANR	4807037	CallExpression	"memset ( scan [ 2 ] . bytes , 0 , upd -> nbytes )"		4806926	0					
ANR	4807038	Callee	memset		4806926	0					
ANR	4807039	Identifier	memset		4806926	0					
ANR	4807040	ArgumentList	scan [ 2 ] . bytes		4806926	1					
ANR	4807041	Argument	scan [ 2 ] . bytes		4806926	0					
ANR	4807042	MemberAccess	scan [ 2 ] . bytes		4806926	0					
ANR	4807043	ArrayIndexing	scan [ 2 ]		4806926	0					
ANR	4807044	Identifier	scan		4806926	0					
ANR	4807045	PrimaryExpression	2		4806926	1					
ANR	4807046	Identifier	bytes		4806926	1					
ANR	4807047	Argument	0		4806926	1					
ANR	4807048	PrimaryExpression	0		4806926	0					
ANR	4807049	Argument	upd -> nbytes		4806926	2					
ANR	4807050	PtrMemberAccess	upd -> nbytes		4806926	0					
ANR	4807051	Identifier	upd		4806926	0					
ANR	4807052	Identifier	nbytes		4806926	1					
ANR	4807053	ExpressionStatement	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"	3989:3:147905:147940	4806926	18	True				
ANR	4807054	CallExpression	"memset ( scan [ 1 ] . bytes , 0 , upd -> nbytes )"		4806926	0					
ANR	4807055	Callee	memset		4806926	0					
ANR	4807056	Identifier	memset		4806926	0					
ANR	4807057	ArgumentList	scan [ 1 ] . bytes		4806926	1					
ANR	4807058	Argument	scan [ 1 ] . bytes		4806926	0					
ANR	4807059	MemberAccess	scan [ 1 ] . bytes		4806926	0					
ANR	4807060	ArrayIndexing	scan [ 1 ]		4806926	0					
ANR	4807061	Identifier	scan		4806926	0					
ANR	4807062	PrimaryExpression	1		4806926	1					
ANR	4807063	Identifier	bytes		4806926	1					
ANR	4807064	Argument	0		4806926	1					
ANR	4807065	PrimaryExpression	0		4806926	0					
ANR	4807066	Argument	upd -> nbytes		4806926	2					
ANR	4807067	PtrMemberAccess	upd -> nbytes		4806926	0					
ANR	4807068	Identifier	upd		4806926	0					
ANR	4807069	Identifier	nbytes		4806926	1					
ANR	4807070	ExpressionStatement	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"	3990:3:147945:147980	4806926	19	True				
ANR	4807071	CallExpression	"memset ( scan [ 0 ] . bytes , 0 , upd -> nbytes )"		4806926	0					
ANR	4807072	Callee	memset		4806926	0					
ANR	4807073	Identifier	memset		4806926	0					
ANR	4807074	ArgumentList	scan [ 0 ] . bytes		4806926	1					
ANR	4807075	Argument	scan [ 0 ] . bytes		4806926	0					
ANR	4807076	MemberAccess	scan [ 0 ] . bytes		4806926	0					
ANR	4807077	ArrayIndexing	scan [ 0 ]		4806926	0					
ANR	4807078	Identifier	scan		4806926	0					
ANR	4807079	PrimaryExpression	0		4806926	1					
ANR	4807080	Identifier	bytes		4806926	1					
ANR	4807081	Argument	0		4806926	1					
ANR	4807082	PrimaryExpression	0		4806926	0					
ANR	4807083	Argument	upd -> nbytes		4806926	2					
ANR	4807084	PtrMemberAccess	upd -> nbytes		4806926	0					
ANR	4807085	Identifier	upd		4806926	0					
ANR	4807086	Identifier	nbytes		4806926	1					
ANR	4807087	IfStatement	if ( upd -> flags & B_REVDIR )		4806926	20					
ANR	4807088	Condition	upd -> flags & B_REVDIR	3994:6:148022:148044	4806926	0	True				
ANR	4807089	BitAndExpression	upd -> flags & B_REVDIR		4806926	0		&			
ANR	4807090	PtrMemberAccess	upd -> flags		4806926	0					
ANR	4807091	Identifier	upd		4806926	0					
ANR	4807092	Identifier	flags		4806926	1					
ANR	4807093	Identifier	B_REVDIR		4806926	1					
ANR	4807094	CompoundStatement		22:31:683:683	4806926	1					
ANR	4807095	IfStatement	if ( upd -> flags & B_YFLIP )		4806926	0					
ANR	4807096	Condition	upd -> flags & B_YFLIP	3996:9:148082:148101	4806926	0	True				
ANR	4807097	BitAndExpression	upd -> flags & B_YFLIP		4806926	0		&			
ANR	4807098	PtrMemberAccess	upd -> flags		4806926	0					
ANR	4807099	Identifier	upd		4806926	0					
ANR	4807100	Identifier	flags		4806926	1					
ANR	4807101	Identifier	B_YFLIP		4806926	1					
ANR	4807102	CompoundStatement		24:31:740:740	4806926	1					
ANR	4807103	ExpressionStatement	dir = 4	3997:9:148115:148126	4806926	0	True				
ANR	4807104	AssignmentExpression	dir = 4		4806926	0		=			
ANR	4807105	Identifier	dir		4806926	0					
ANR	4807106	PrimaryExpression	4		4806926	1					
ANR	4807107	ExpressionStatement	bit = 0x80	3998:9:148137:148151	4806926	1	True				
ANR	4807108	AssignmentExpression	bit = 0x80		4806926	0		=			
ANR	4807109	Identifier	bit		4806926	0					
ANR	4807110	PrimaryExpression	0x80		4806926	1					
ANR	4807111	ExpressionStatement	ibyte = 0	3999:9:148162:148173	4806926	2	True				
ANR	4807112	AssignmentExpression	ibyte = 0		4806926	0		=			
ANR	4807113	Identifier	ibyte		4806926	0					
ANR	4807114	PrimaryExpression	0		4806926	1					
ANR	4807115	ElseStatement	else		4806926	0					
ANR	4807116	CompoundStatement		28:13:824:824	4806926	0					
ANR	4807117	ExpressionStatement	dir = - 4	4001:9:148199:148212	4806926	0	True				
ANR	4807118	AssignmentExpression	dir = - 4		4806926	0		=			
ANR	4807119	Identifier	dir		4806926	0					
ANR	4807120	UnaryOperationExpression	- 4		4806926	1					
ANR	4807121	UnaryOperator	-		4806926	0					
ANR	4807122	PrimaryExpression	4		4806926	1					
ANR	4807123	ExpressionStatement	rowerr += 4 * ( pwidth - 1 )	4002:9:148223:148249	4806926	1	True				
ANR	4807124	AssignmentExpression	rowerr += 4 * ( pwidth - 1 )		4806926	0		+=			
ANR	4807125	Identifier	rowerr		4806926	0					
ANR	4807126	MultiplicativeExpression	4 * ( pwidth - 1 )		4806926	1		*			
ANR	4807127	PrimaryExpression	4		4806926	0					
ANR	4807128	AdditiveExpression	pwidth - 1		4806926	1		-			
ANR	4807129	Identifier	pwidth		4806926	0					
ANR	4807130	PrimaryExpression	1		4806926	1					
ANR	4807131	ExpressionStatement	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )	4003:9:148260:148300	4806926	2	True				
ANR	4807132	AssignmentExpression	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )		4806926	0		=			
ANR	4807133	Identifier	bit		4806926	0					
ANR	4807134	ShiftExpression	0x80 >> ( ( pwidth - 1 ) & 7 )		4806926	1		>>			
ANR	4807135	PrimaryExpression	0x80		4806926	0					
ANR	4807136	BitAndExpression	( pwidth - 1 ) & 7		4806926	1		&			
ANR	4807137	AdditiveExpression	pwidth - 1		4806926	0		-			
ANR	4807138	Identifier	pwidth		4806926	0					
ANR	4807139	PrimaryExpression	1		4806926	1					
ANR	4807140	PrimaryExpression	7		4806926	1					
ANR	4807141	ExpressionStatement	ibyte = ( pwidth - 1 ) >> 3	4004:9:148311:148351	4806926	3	True				
ANR	4807142	AssignmentExpression	ibyte = ( pwidth - 1 ) >> 3		4806926	0		=			
ANR	4807143	Identifier	ibyte		4806926	0					
ANR	4807144	ShiftExpression	( pwidth - 1 ) >> 3		4806926	1		>>			
ANR	4807145	AdditiveExpression	pwidth - 1		4806926	0		-			
ANR	4807146	Identifier	pwidth		4806926	0					
ANR	4807147	PrimaryExpression	1		4806926	1					
ANR	4807148	PrimaryExpression	3		4806926	1					
ANR	4807149	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		4806926	1					
ANR	4807150	Condition	! ( upd -> flags & B_FSWHITE )	4007:9:148371:148395	4806926	0	True				
ANR	4807151	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		4806926	0					
ANR	4807152	UnaryOperator	!		4806926	0					
ANR	4807153	BitAndExpression	upd -> flags & B_FSWHITE		4806926	1		&			
ANR	4807154	PtrMemberAccess	upd -> flags		4806926	0					
ANR	4807155	Identifier	upd		4806926	0					
ANR	4807156	Identifier	flags		4806926	1					
ANR	4807157	Identifier	B_FSWHITE		4806926	1					
ANR	4807158	CompoundStatement		35:36:1034:1034	4806926	1					
ANR	4807159	ExpressionStatement	upd_pxlfwd ( upd )	4008:9:148409:148424	4806926	0	True				
ANR	4807160	CallExpression	upd_pxlfwd ( upd )		4806926	0					
ANR	4807161	Callee	upd_pxlfwd		4806926	0					
ANR	4807162	Identifier	upd_pxlfwd		4806926	0					
ANR	4807163	ArgumentList	upd		4806926	1					
ANR	4807164	Argument	upd		4806926	0					
ANR	4807165	Identifier	upd		4806926	0					
ANR	4807166	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		4806926	1					
ANR	4807167	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	4009:15:148441:148472	4806926	0	True				
ANR	4807168	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		4806926	0		&&			
ANR	4807169	RelationalExpression	0 < pwidth		4806926	0		<			
ANR	4807170	PrimaryExpression	0		4806926	0					
ANR	4807171	Identifier	pwidth		4806926	1					
ANR	4807172	UnaryOperationExpression	! upd_pxlget ( upd )		4806926	1					
ANR	4807173	UnaryOperator	!		4806926	0					
ANR	4807174	CallExpression	upd_pxlget ( upd )		4806926	1					
ANR	4807175	Callee	upd_pxlget		4806926	0					
ANR	4807176	Identifier	upd_pxlget		4806926	0					
ANR	4807177	ArgumentList	upd		4806926	1					
ANR	4807178	Argument	upd		4806926	0					
ANR	4807179	Identifier	upd		4806926	0					
ANR	4807180	ExpressionStatement	pwidth --	4009:49:148475:148483	4806926	1	True				
ANR	4807181	PostIncDecOperationExpression	pwidth --		4806926	0					
ANR	4807182	Identifier	pwidth		4806926	0					
ANR	4807183	IncDec	--		4806926	1					
ANR	4807184	ExpressionStatement	upd_pxlrev ( upd )	4012:6:148500:148515	4806926	2	True				
ANR	4807185	CallExpression	upd_pxlrev ( upd )		4806926	0					
ANR	4807186	Callee	upd_pxlrev		4806926	0					
ANR	4807187	Identifier	upd_pxlrev		4806926	0					
ANR	4807188	ArgumentList	upd		4806926	1					
ANR	4807189	Argument	upd		4806926	0					
ANR	4807190	Identifier	upd		4806926	0					
ANR	4807191	ElseStatement	else		4806926	0					
ANR	4807192	CompoundStatement		42:10:1164:1164	4806926	0					
ANR	4807193	IfStatement	if ( upd -> flags & B_YFLIP )		4806926	0					
ANR	4807194	Condition	upd -> flags & B_YFLIP	4016:9:148585:148604	4806926	0	True				
ANR	4807195	BitAndExpression	upd -> flags & B_YFLIP		4806926	0		&			
ANR	4807196	PtrMemberAccess	upd -> flags		4806926	0					
ANR	4807197	Identifier	upd		4806926	0					
ANR	4807198	Identifier	flags		4806926	1					
ANR	4807199	Identifier	B_YFLIP		4806926	1					
ANR	4807200	CompoundStatement		44:31:1243:1243	4806926	1					
ANR	4807201	ExpressionStatement	dir = - 4	4017:9:148618:148631	4806926	0	True				
ANR	4807202	AssignmentExpression	dir = - 4		4806926	0		=			
ANR	4807203	Identifier	dir		4806926	0					
ANR	4807204	UnaryOperationExpression	- 4		4806926	1					
ANR	4807205	UnaryOperator	-		4806926	0					
ANR	4807206	PrimaryExpression	4		4806926	1					
ANR	4807207	ExpressionStatement	rowerr += 4 * ( pwidth - 1 )	4018:9:148642:148677	4806926	1	True				
ANR	4807208	AssignmentExpression	rowerr += 4 * ( pwidth - 1 )		4806926	0		+=			
ANR	4807209	Identifier	rowerr		4806926	0					
ANR	4807210	MultiplicativeExpression	4 * ( pwidth - 1 )		4806926	1		*			
ANR	4807211	PrimaryExpression	4		4806926	0					
ANR	4807212	AdditiveExpression	pwidth - 1		4806926	1		-			
ANR	4807213	Identifier	pwidth		4806926	0					
ANR	4807214	PrimaryExpression	1		4806926	1					
ANR	4807215	ExpressionStatement	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )	4019:9:148688:148728	4806926	2	True				
ANR	4807216	AssignmentExpression	bit = 0x80 >> ( ( pwidth - 1 ) & 7 )		4806926	0		=			
ANR	4807217	Identifier	bit		4806926	0					
ANR	4807218	ShiftExpression	0x80 >> ( ( pwidth - 1 ) & 7 )		4806926	1		>>			
ANR	4807219	PrimaryExpression	0x80		4806926	0					
ANR	4807220	BitAndExpression	( pwidth - 1 ) & 7		4806926	1		&			
ANR	4807221	AdditiveExpression	pwidth - 1		4806926	0		-			
ANR	4807222	Identifier	pwidth		4806926	0					
ANR	4807223	PrimaryExpression	1		4806926	1					
ANR	4807224	PrimaryExpression	7		4806926	1					
ANR	4807225	ExpressionStatement	ibyte = ( pwidth - 1 ) >> 3	4020:9:148739:148779	4806926	3	True				
ANR	4807226	AssignmentExpression	ibyte = ( pwidth - 1 ) >> 3		4806926	0		=			
ANR	4807227	Identifier	ibyte		4806926	0					
ANR	4807228	ShiftExpression	( pwidth - 1 ) >> 3		4806926	1		>>			
ANR	4807229	AdditiveExpression	pwidth - 1		4806926	0		-			
ANR	4807230	Identifier	pwidth		4806926	0					
ANR	4807231	PrimaryExpression	1		4806926	1					
ANR	4807232	PrimaryExpression	3		4806926	1					
ANR	4807233	ElseStatement	else		4806926	0					
ANR	4807234	CompoundStatement		49:13:1430:1430	4806926	0					
ANR	4807235	ExpressionStatement	dir = 4	4022:9:148805:148816	4806926	0	True				
ANR	4807236	AssignmentExpression	dir = 4		4806926	0		=			
ANR	4807237	Identifier	dir		4806926	0					
ANR	4807238	PrimaryExpression	4		4806926	1					
ANR	4807239	ExpressionStatement	bit = 0x80	4023:9:148827:148841	4806926	1	True				
ANR	4807240	AssignmentExpression	bit = 0x80		4806926	0		=			
ANR	4807241	Identifier	bit		4806926	0					
ANR	4807242	PrimaryExpression	0x80		4806926	1					
ANR	4807243	ExpressionStatement	ibyte = 0	4024:9:148852:148863	4806926	2	True				
ANR	4807244	AssignmentExpression	ibyte = 0		4806926	0		=			
ANR	4807245	Identifier	ibyte		4806926	0					
ANR	4807246	PrimaryExpression	0		4806926	1					
ANR	4807247	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		4806926	1					
ANR	4807248	Condition	! ( upd -> flags & B_FSWHITE )	4027:9:148883:148907	4806926	0	True				
ANR	4807249	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		4806926	0					
ANR	4807250	UnaryOperator	!		4806926	0					
ANR	4807251	BitAndExpression	upd -> flags & B_FSWHITE		4806926	1		&			
ANR	4807252	PtrMemberAccess	upd -> flags		4806926	0					
ANR	4807253	Identifier	upd		4806926	0					
ANR	4807254	Identifier	flags		4806926	1					
ANR	4807255	Identifier	B_FSWHITE		4806926	1					
ANR	4807256	CompoundStatement		55:36:1546:1546	4806926	1					
ANR	4807257	ExpressionStatement	upd_pxlrev ( upd )	4028:9:148921:148936	4806926	0	True				
ANR	4807258	CallExpression	upd_pxlrev ( upd )		4806926	0					
ANR	4807259	Callee	upd_pxlrev		4806926	0					
ANR	4807260	Identifier	upd_pxlrev		4806926	0					
ANR	4807261	ArgumentList	upd		4806926	1					
ANR	4807262	Argument	upd		4806926	0					
ANR	4807263	Identifier	upd		4806926	0					
ANR	4807264	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		4806926	1					
ANR	4807265	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	4029:15:148953:148984	4806926	0	True				
ANR	4807266	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		4806926	0		&&			
ANR	4807267	RelationalExpression	0 < pwidth		4806926	0		<			
ANR	4807268	PrimaryExpression	0		4806926	0					
ANR	4807269	Identifier	pwidth		4806926	1					
ANR	4807270	UnaryOperationExpression	! upd_pxlget ( upd )		4806926	1					
ANR	4807271	UnaryOperator	!		4806926	0					
ANR	4807272	CallExpression	upd_pxlget ( upd )		4806926	1					
ANR	4807273	Callee	upd_pxlget		4806926	0					
ANR	4807274	Identifier	upd_pxlget		4806926	0					
ANR	4807275	ArgumentList	upd		4806926	1					
ANR	4807276	Argument	upd		4806926	0					
ANR	4807277	Identifier	upd		4806926	0					
ANR	4807278	ExpressionStatement	pwidth --	4029:49:148987:148995	4806926	1	True				
ANR	4807279	PostIncDecOperationExpression	pwidth --		4806926	0					
ANR	4807280	Identifier	pwidth		4806926	0					
ANR	4807281	IncDec	--		4806926	1					
ANR	4807282	ExpressionStatement	upd_pxlfwd ( upd )	4032:6:149012:149027	4806926	2	True				
ANR	4807283	CallExpression	upd_pxlfwd ( upd )		4806926	0					
ANR	4807284	Callee	upd_pxlfwd		4806926	0					
ANR	4807285	Identifier	upd_pxlfwd		4806926	0					
ANR	4807286	ArgumentList	upd		4806926	1					
ANR	4807287	Argument	upd		4806926	0					
ANR	4807288	Identifier	upd		4806926	0					
ANR	4807289	IfStatement	if ( ! ( upd -> flags & B_FIXDIR ) )		4806926	21					
ANR	4807290	Condition	! ( upd -> flags & B_FIXDIR )	4038:6:149136:149159	4806926	0	True				
ANR	4807291	UnaryOperationExpression	! ( upd -> flags & B_FIXDIR )		4806926	0					
ANR	4807292	UnaryOperator	!		4806926	0					
ANR	4807293	BitAndExpression	upd -> flags & B_FIXDIR		4806926	1		&			
ANR	4807294	PtrMemberAccess	upd -> flags		4806926	0					
ANR	4807295	Identifier	upd		4806926	0					
ANR	4807296	Identifier	flags		4806926	1					
ANR	4807297	Identifier	B_FIXDIR		4806926	1					
ANR	4807298	ExpressionStatement	upd -> flags ^= B_REVDIR	4038:32:149162:149184	4806926	1	True				
ANR	4807299	AssignmentExpression	upd -> flags ^= B_REVDIR		4806926	0		^=			
ANR	4807300	PtrMemberAccess	upd -> flags		4806926	0					
ANR	4807301	Identifier	upd		4806926	0					
ANR	4807302	Identifier	flags		4806926	1					
ANR	4807303	Identifier	B_REVDIR		4806926	1					
ANR	4807304	IfStatement	if ( ! ( upd -> flags & B_FSWHITE ) )		4806926	22					
ANR	4807305	Condition	! ( upd -> flags & B_FSWHITE )	4042:6:149232:149256	4806926	0	True				
ANR	4807306	UnaryOperationExpression	! ( upd -> flags & B_FSWHITE )		4806926	0					
ANR	4807307	UnaryOperator	!		4806926	0					
ANR	4807308	BitAndExpression	upd -> flags & B_FSWHITE		4806926	1		&			
ANR	4807309	PtrMemberAccess	upd -> flags		4806926	0					
ANR	4807310	Identifier	upd		4806926	0					
ANR	4807311	Identifier	flags		4806926	1					
ANR	4807312	Identifier	B_FSWHITE		4806926	1					
ANR	4807313	CompoundStatement		72:6:1948:1985	4806926	1					
ANR	4807314	ExpressionStatement	upd_proc_pxlget ( ( * fun ) ) = upd -> pxlget	4043:6:149267:149304	4806926	0	True				
ANR	4807315	AssignmentExpression	upd_proc_pxlget ( ( * fun ) ) = upd -> pxlget		4806926	0		=			
ANR	4807316	CallExpression	upd_proc_pxlget ( ( * fun ) )		4806926	0					
ANR	4807317	Callee	upd_proc_pxlget		4806926	0					
ANR	4807318	Identifier	upd_proc_pxlget		4806926	0					
ANR	4807319	ArgumentList	* fun		4806926	1					
ANR	4807320	Argument	* fun		4806926	0					
ANR	4807321	UnaryOperationExpression	* fun		4806926	0					
ANR	4807322	UnaryOperator	*		4806926	0					
ANR	4807323	Identifier	fun		4806926	1					
ANR	4807324	PtrMemberAccess	upd -> pxlget		4806926	1					
ANR	4807325	Identifier	upd		4806926	0					
ANR	4807326	Identifier	pxlget		4806926	1					
ANR	4807327	IdentifierDeclStatement	byte * ptr = upd -> pxlptr ;	4044:6:149312:149349	4806926	1	True				
ANR	4807328	IdentifierDecl	* ptr = upd -> pxlptr		4806926	0					
ANR	4807329	IdentifierDeclType	byte *		4806926	0					
ANR	4807330	Identifier	ptr		4806926	1					
ANR	4807331	AssignmentExpression	* ptr = upd -> pxlptr		4806926	2		=			
ANR	4807332	Identifier	ptr		4806926	0					
ANR	4807333	PtrMemberAccess	upd -> pxlptr		4806926	1					
ANR	4807334	Identifier	upd		4806926	0					
ANR	4807335	Identifier	pxlptr		4806926	1					
ANR	4807336	WhileStatement	while ( ( 0 < pwidth ) && ! upd_pxlget ( upd ) )		4806926	2					
ANR	4807337	Condition	( 0 < pwidth ) && ! upd_pxlget ( upd )	4045:12:149363:149394	4806926	0	True				
ANR	4807338	AndExpression	( 0 < pwidth ) && ! upd_pxlget ( upd )		4806926	0		&&			
ANR	4807339	RelationalExpression	0 < pwidth		4806926	0		<			
ANR	4807340	PrimaryExpression	0		4806926	0					
ANR	4807341	Identifier	pwidth		4806926	1					
ANR	4807342	UnaryOperationExpression	! upd_pxlget ( upd )		4806926	1					
ANR	4807343	UnaryOperator	!		4806926	0					
ANR	4807344	CallExpression	upd_pxlget ( upd )		4806926	1					
ANR	4807345	Callee	upd_pxlget		4806926	0					
ANR	4807346	Identifier	upd_pxlget		4806926	0					
ANR	4807347	ArgumentList	upd		4806926	1					
ANR	4807348	Argument	upd		4806926	0					
ANR	4807349	Identifier	upd		4806926	0					
ANR	4807350	CompoundStatement		73:46:2033:2033	4806926	1					
ANR	4807351	ExpressionStatement	pwidth --	4046:9:149408:149416	4806926	0	True				
ANR	4807352	PostIncDecOperationExpression	pwidth --		4806926	0					
ANR	4807353	Identifier	pwidth		4806926	0					
ANR	4807354	IncDec	--		4806926	1					
ANR	4807355	ExpressionStatement	fun = upd -> pxlget	4047:9:149427:149444	4806926	1	True				
ANR	4807356	AssignmentExpression	fun = upd -> pxlget		4806926	0		=			
ANR	4807357	Identifier	fun		4806926	0					
ANR	4807358	PtrMemberAccess	upd -> pxlget		4806926	1					
ANR	4807359	Identifier	upd		4806926	0					
ANR	4807360	Identifier	pxlget		4806926	1					
ANR	4807361	ExpressionStatement	ptr = upd -> pxlptr	4048:9:149455:149472	4806926	2	True				
ANR	4807362	AssignmentExpression	ptr = upd -> pxlptr		4806926	0		=			
ANR	4807363	Identifier	ptr		4806926	0					
ANR	4807364	PtrMemberAccess	upd -> pxlptr		4806926	1					
ANR	4807365	Identifier	upd		4806926	0					
ANR	4807366	Identifier	pxlptr		4806926	1					
ANR	4807367	Statement	S_FSTEP	4049:9:149483:149489	4806926	3	True				
ANR	4807368	ExpressionStatement	upd -> pxlget = fun	4051:6:149505:149522	4806926	3	True				
ANR	4807369	AssignmentExpression	upd -> pxlget = fun		4806926	0		=			
ANR	4807370	PtrMemberAccess	upd -> pxlget		4806926	0					
ANR	4807371	Identifier	upd		4806926	0					
ANR	4807372	Identifier	pxlget		4806926	1					
ANR	4807373	Identifier	fun		4806926	1					
ANR	4807374	ExpressionStatement	upd -> pxlptr = ptr	4052:6:149530:149547	4806926	4	True				
ANR	4807375	AssignmentExpression	upd -> pxlptr = ptr		4806926	0		=			
ANR	4807376	PtrMemberAccess	upd -> pxlptr		4806926	0					
ANR	4807377	Identifier	upd		4806926	0					
ANR	4807378	Identifier	pxlptr		4806926	1					
ANR	4807379	Identifier	ptr		4806926	1					
ANR	4807380	ExpressionStatement	first = true	4057:3:149586:149598	4806926	23	True				
ANR	4807381	AssignmentExpression	first = true		4806926	0		=			
ANR	4807382	Identifier	first		4806926	0					
ANR	4807383	Identifier	true		4806926	1					
ANR	4807384	WhileStatement	while ( 0 < pwidth -- )		4806926	24					
ANR	4807385	Condition	0 < pwidth --	4058:9:149609:149620	4806926	0	True				
ANR	4807386	RelationalExpression	0 < pwidth --		4806926	0		<			
ANR	4807387	PrimaryExpression	0		4806926	0					
ANR	4807388	PostIncDecOperationExpression	pwidth --		4806926	1					
ANR	4807389	Identifier	pwidth		4806926	0					
ANR	4807390	IncDec	--		4806926	1					
ANR	4807391	CompoundStatement		86:23:2259:2259	4806926	1					
ANR	4807392	ExpressionStatement	ci = upd_pxlget ( upd )	4062:6:149662:149682	4806926	0	True				
ANR	4807393	AssignmentExpression	ci = upd_pxlget ( upd )		4806926	0		=			
ANR	4807394	Identifier	ci		4806926	0					
ANR	4807395	CallExpression	upd_pxlget ( upd )		4806926	1					
ANR	4807396	Callee	upd_pxlget		4806926	0					
ANR	4807397	Identifier	upd_pxlget		4806926	0					
ANR	4807398	ArgumentList	upd		4806926	1					
ANR	4807399	Argument	upd		4806926	0					
ANR	4807400	Identifier	upd		4806926	0					
ANR	4807401	Statement	FS_M_ROWERR	4066:6:149724:149734	4806926	1	True				
ANR	4807402	Statement	(	4066:17:149735:149735	4806926	2	True				
ANR	4807403	Statement	0	4066:18:149736:149736	4806926	3	True				
ANR	4807404	Statement	)	4066:19:149737:149737	4806926	4	True				
ANR	4807405	Statement	FS_GOAL	4066:21:149739:149745	4806926	5	True				
ANR	4807406	Statement	(	4066:28:149746:149746	4806926	6	True				
ANR	4807407	Statement	comp	4066:29:149747:149750	4806926	7	True				
ANR	4807408	Statement	[	4066:33:149751:149751	4806926	8	True				
ANR	4807409	Statement	0	4066:34:149752:149752	4806926	9	True				
ANR	4807410	Statement	]	4066:35:149753:149753	4806926	10	True				
ANR	4807411	Statement	->	4066:36:149754:149755	4806926	11	True				
ANR	4807412	Statement	bitmsk	4066:38:149756:149761	4806926	12	True				
ANR	4807413	Statement	&	4066:45:149763:149763	4806926	13	True				
ANR	4807414	Statement	(	4066:47:149765:149765	4806926	14	True				
ANR	4807415	Statement	ci	4066:48:149766:149767	4806926	15	True				
ANR	4807416	Statement	>>	4066:51:149769:149770	4806926	16	True				
ANR	4807417	Statement	comp	4066:54:149772:149775	4806926	17	True				
ANR	4807418	Statement	[	4066:58:149776:149776	4806926	18	True				
ANR	4807419	Statement	0	4066:59:149777:149777	4806926	19	True				
ANR	4807420	Statement	]	4066:60:149778:149778	4806926	20	True				
ANR	4807421	Statement	->	4066:61:149779:149780	4806926	21	True				
ANR	4807422	Statement	bitshf	4066:63:149781:149786	4806926	22	True				
ANR	4807423	Statement	)	4066:69:149787:149787	4806926	23	True				
ANR	4807424	Statement	","	4066:70:149788:149788	4806926	24	True				
ANR	4807425	Statement	0	4066:71:149789:149789	4806926	25	True				
ANR	4807426	Statement	)	4066:72:149790:149790	4806926	26	True				
ANR	4807427	Statement	FS_M_ROWERR	4067:6:149798:149808	4806926	27	True				
ANR	4807428	Statement	(	4067:17:149809:149809	4806926	28	True				
ANR	4807429	Statement	1	4067:18:149810:149810	4806926	29	True				
ANR	4807430	Statement	)	4067:19:149811:149811	4806926	30	True				
ANR	4807431	Statement	FS_GOAL	4067:21:149813:149819	4806926	31	True				
ANR	4807432	Statement	(	4067:28:149820:149820	4806926	32	True				
ANR	4807433	Statement	comp	4067:29:149821:149824	4806926	33	True				
ANR	4807434	Statement	[	4067:33:149825:149825	4806926	34	True				
ANR	4807435	Statement	1	4067:34:149826:149826	4806926	35	True				
ANR	4807436	Statement	]	4067:35:149827:149827	4806926	36	True				
ANR	4807437	Statement	->	4067:36:149828:149829	4806926	37	True				
ANR	4807438	Statement	bitmsk	4067:38:149830:149835	4806926	38	True				
ANR	4807439	Statement	&	4067:45:149837:149837	4806926	39	True				
ANR	4807440	Statement	(	4067:47:149839:149839	4806926	40	True				
ANR	4807441	Statement	ci	4067:48:149840:149841	4806926	41	True				
ANR	4807442	Statement	>>	4067:51:149843:149844	4806926	42	True				
ANR	4807443	Statement	comp	4067:54:149846:149849	4806926	43	True				
ANR	4807444	Statement	[	4067:58:149850:149850	4806926	44	True				
ANR	4807445	Statement	1	4067:59:149851:149851	4806926	45	True				
ANR	4807446	Statement	]	4067:60:149852:149852	4806926	46	True				
ANR	4807447	Statement	->	4067:61:149853:149854	4806926	47	True				
ANR	4807448	Statement	bitshf	4067:63:149855:149860	4806926	48	True				
ANR	4807449	Statement	)	4067:69:149861:149861	4806926	49	True				
ANR	4807450	Statement	","	4067:70:149862:149862	4806926	50	True				
ANR	4807451	Statement	1	4067:71:149863:149863	4806926	51	True				
ANR	4807452	Statement	)	4067:72:149864:149864	4806926	52	True				
ANR	4807453	Statement	FS_M_ROWERR	4068:6:149872:149882	4806926	53	True				
ANR	4807454	Statement	(	4068:17:149883:149883	4806926	54	True				
ANR	4807455	Statement	2	4068:18:149884:149884	4806926	55	True				
ANR	4807456	Statement	)	4068:19:149885:149885	4806926	56	True				
ANR	4807457	Statement	FS_GOAL	4068:21:149887:149893	4806926	57	True				
ANR	4807458	Statement	(	4068:28:149894:149894	4806926	58	True				
ANR	4807459	Statement	comp	4068:29:149895:149898	4806926	59	True				
ANR	4807460	Statement	[	4068:33:149899:149899	4806926	60	True				
ANR	4807461	Statement	2	4068:34:149900:149900	4806926	61	True				
ANR	4807462	Statement	]	4068:35:149901:149901	4806926	62	True				
ANR	4807463	Statement	->	4068:36:149902:149903	4806926	63	True				
ANR	4807464	Statement	bitmsk	4068:38:149904:149909	4806926	64	True				
ANR	4807465	Statement	&	4068:45:149911:149911	4806926	65	True				
ANR	4807466	Statement	(	4068:47:149913:149913	4806926	66	True				
ANR	4807467	Statement	ci	4068:48:149914:149915	4806926	67	True				
ANR	4807468	Statement	>>	4068:51:149917:149918	4806926	68	True				
ANR	4807469	Statement	comp	4068:54:149920:149923	4806926	69	True				
ANR	4807470	Statement	[	4068:58:149924:149924	4806926	70	True				
ANR	4807471	Statement	2	4068:59:149925:149925	4806926	71	True				
ANR	4807472	Statement	]	4068:60:149926:149926	4806926	72	True				
ANR	4807473	Statement	->	4068:61:149927:149928	4806926	73	True				
ANR	4807474	Statement	bitshf	4068:63:149929:149934	4806926	74	True				
ANR	4807475	Statement	)	4068:69:149935:149935	4806926	75	True				
ANR	4807476	Statement	","	4068:70:149936:149936	4806926	76	True				
ANR	4807477	Statement	2	4068:71:149937:149937	4806926	77	True				
ANR	4807478	Statement	)	4068:72:149938:149938	4806926	78	True				
ANR	4807479	Statement	FS_M_ROWERR	4069:6:149946:149956	4806926	79	True				
ANR	4807480	Statement	(	4069:17:149957:149957	4806926	80	True				
ANR	4807481	Statement	3	4069:18:149958:149958	4806926	81	True				
ANR	4807482	Statement	)	4069:19:149959:149959	4806926	82	True				
ANR	4807483	Statement	FS_GOAL	4069:21:149961:149967	4806926	83	True				
ANR	4807484	Statement	(	4069:28:149968:149968	4806926	84	True				
ANR	4807485	Statement	comp	4069:29:149969:149972	4806926	85	True				
ANR	4807486	Statement	[	4069:33:149973:149973	4806926	86	True				
ANR	4807487	Statement	3	4069:34:149974:149974	4806926	87	True				
ANR	4807488	Statement	]	4069:35:149975:149975	4806926	88	True				
ANR	4807489	Statement	->	4069:36:149976:149977	4806926	89	True				
ANR	4807490	Statement	bitmsk	4069:38:149978:149983	4806926	90	True				
ANR	4807491	Statement	&	4069:45:149985:149985	4806926	91	True				
ANR	4807492	Statement	(	4069:47:149987:149987	4806926	92	True				
ANR	4807493	Statement	ci	4069:48:149988:149989	4806926	93	True				
ANR	4807494	Statement	>>	4069:51:149991:149992	4806926	94	True				
ANR	4807495	Statement	comp	4069:54:149994:149997	4806926	95	True				
ANR	4807496	Statement	[	4069:58:149998:149998	4806926	96	True				
ANR	4807497	Statement	3	4069:59:149999:149999	4806926	97	True				
ANR	4807498	Statement	]	4069:60:150000:150000	4806926	98	True				
ANR	4807499	Statement	->	4069:61:150001:150002	4806926	99	True				
ANR	4807500	Statement	bitshf	4069:63:150003:150008	4806926	100	True				
ANR	4807501	Statement	)	4069:69:150009:150009	4806926	101	True				
ANR	4807502	Statement	","	4069:70:150010:150010	4806926	102	True				
ANR	4807503	Statement	3	4069:71:150011:150011	4806926	103	True				
ANR	4807504	Statement	)	4069:72:150012:150012	4806926	104	True				
ANR	4807505	IfStatement	if ( pixel [ 0 ] > comp [ 0 ] -> threshold )		4806926	105					
ANR	4807506	Condition	pixel [ 0 ] > comp [ 0 ] -> threshold	4071:9:150024:150053	4806926	0	True				
ANR	4807507	RelationalExpression	pixel [ 0 ] > comp [ 0 ] -> threshold		4806926	0		>			
ANR	4807508	ArrayIndexing	pixel [ 0 ]		4806926	0					
ANR	4807509	Identifier	pixel		4806926	0					
ANR	4807510	PrimaryExpression	0		4806926	1					
ANR	4807511	PtrMemberAccess	comp [ 0 ] -> threshold		4806926	1					
ANR	4807512	ArrayIndexing	comp [ 0 ]		4806926	0					
ANR	4807513	Identifier	comp		4806926	0					
ANR	4807514	PrimaryExpression	0		4806926	1					
ANR	4807515	Identifier	threshold		4806926	1					
ANR	4807516	CompoundStatement		99:41:2692:2692	4806926	1					
ANR	4807517	ExpressionStatement	pixel [ 0 ] -= comp [ 0 ] -> spotsize	4073:8:150085:150126	4806926	0	True				
ANR	4807518	AssignmentExpression	pixel [ 0 ] -= comp [ 0 ] -> spotsize		4806926	0		-=			
ANR	4807519	ArrayIndexing	pixel [ 0 ]		4806926	0					
ANR	4807520	Identifier	pixel		4806926	0					
ANR	4807521	PrimaryExpression	0		4806926	1					
ANR	4807522	PtrMemberAccess	comp [ 0 ] -> spotsize		4806926	1					
ANR	4807523	ArrayIndexing	comp [ 0 ]		4806926	0					
ANR	4807524	Identifier	comp		4806926	0					
ANR	4807525	PrimaryExpression	0		4806926	1					
ANR	4807526	Identifier	spotsize		4806926	1					
ANR	4807527	ExpressionStatement	scan [ 0 ] . bytes [ ibyte ] |= bit	4074:8:150136:150163	4806926	1	True				
ANR	4807528	AssignmentExpression	scan [ 0 ] . bytes [ ibyte ] |= bit		4806926	0		|=			
ANR	4807529	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		4806926	0					
ANR	4807530	MemberAccess	scan [ 0 ] . bytes		4806926	0					
ANR	4807531	ArrayIndexing	scan [ 0 ]		4806926	0					
ANR	4807532	Identifier	scan		4806926	0					
ANR	4807533	PrimaryExpression	0		4806926	1					
ANR	4807534	Identifier	bytes		4806926	1					
ANR	4807535	Identifier	ibyte		4806926	1					
ANR	4807536	Identifier	bit		4806926	1					
ANR	4807537	ElseStatement	else		4806926	0					
ANR	4807538	CompoundStatement		104:13:2815:2815	4806926	0					
ANR	4807539	IfStatement	if ( ( pixel [ 1 ] <= comp [ 1 ] -> threshold ) || ( pixel [ 2 ] <= comp [ 2 ] -> threshold ) || ( pixel [ 3 ] <= comp [ 3 ] -> threshold ) )		4806926	0					
ANR	4807540	Condition	( pixel [ 1 ] <= comp [ 1 ] -> threshold ) || ( pixel [ 2 ] <= comp [ 2 ] -> threshold ) || ( pixel [ 3 ] <= comp [ 3 ] -> threshold )	4078:12:150244:150371	4806926	0	True				
ANR	4807541	OrExpression	( pixel [ 1 ] <= comp [ 1 ] -> threshold ) || ( pixel [ 2 ] <= comp [ 2 ] -> threshold ) || ( pixel [ 3 ] <= comp [ 3 ] -> threshold )		4806926	0		||			
ANR	4807542	RelationalExpression	pixel [ 1 ] <= comp [ 1 ] -> threshold		4806926	0		<=			
ANR	4807543	ArrayIndexing	pixel [ 1 ]		4806926	0					
ANR	4807544	Identifier	pixel		4806926	0					
ANR	4807545	PrimaryExpression	1		4806926	1					
ANR	4807546	PtrMemberAccess	comp [ 1 ] -> threshold		4806926	1					
ANR	4807547	ArrayIndexing	comp [ 1 ]		4806926	0					
ANR	4807548	Identifier	comp		4806926	0					
ANR	4807549	PrimaryExpression	1		4806926	1					
ANR	4807550	Identifier	threshold		4806926	1					
ANR	4807551	OrExpression	( pixel [ 2 ] <= comp [ 2 ] -> threshold ) || ( pixel [ 3 ] <= comp [ 3 ] -> threshold )		4806926	1		||			
ANR	4807552	RelationalExpression	pixel [ 2 ] <= comp [ 2 ] -> threshold		4806926	0		<=			
ANR	4807553	ArrayIndexing	pixel [ 2 ]		4806926	0					
ANR	4807554	Identifier	pixel		4806926	0					
ANR	4807555	PrimaryExpression	2		4806926	1					
ANR	4807556	PtrMemberAccess	comp [ 2 ] -> threshold		4806926	1					
ANR	4807557	ArrayIndexing	comp [ 2 ]		4806926	0					
ANR	4807558	Identifier	comp		4806926	0					
ANR	4807559	PrimaryExpression	2		4806926	1					
ANR	4807560	Identifier	threshold		4806926	1					
ANR	4807561	RelationalExpression	pixel [ 3 ] <= comp [ 3 ] -> threshold		4806926	1		<=			
ANR	4807562	ArrayIndexing	pixel [ 3 ]		4806926	0					
ANR	4807563	Identifier	pixel		4806926	0					
ANR	4807564	PrimaryExpression	3		4806926	1					
ANR	4807565	PtrMemberAccess	comp [ 3 ] -> threshold		4806926	1					
ANR	4807566	ArrayIndexing	comp [ 3 ]		4806926	0					
ANR	4807567	Identifier	comp		4806926	0					
ANR	4807568	PrimaryExpression	3		4806926	1					
ANR	4807569	Identifier	threshold		4806926	1					
ANR	4807570	CompoundStatement		108:49:3013:3013	4806926	1					
ANR	4807571	IfStatement	if ( pixel [ 1 ] > comp [ 1 ] -> threshold )		4806926	0					
ANR	4807572	Condition	pixel [ 1 ] > comp [ 1 ] -> threshold	4082:15:150416:150458	4806926	0	True				
ANR	4807573	RelationalExpression	pixel [ 1 ] > comp [ 1 ] -> threshold		4806926	0		>			
ANR	4807574	ArrayIndexing	pixel [ 1 ]		4806926	0					
ANR	4807575	Identifier	pixel		4806926	0					
ANR	4807576	PrimaryExpression	1		4806926	1					
ANR	4807577	PtrMemberAccess	comp [ 1 ] -> threshold		4806926	1					
ANR	4807578	ArrayIndexing	comp [ 1 ]		4806926	0					
ANR	4807579	Identifier	comp		4806926	0					
ANR	4807580	PrimaryExpression	1		4806926	1					
ANR	4807581	Identifier	threshold		4806926	1					
ANR	4807582	CompoundStatement		110:60:3097:3097	4806926	1					
ANR	4807583	ExpressionStatement	pixel [ 1 ] -= comp [ 1 ] -> spotsize	4083:15:150478:150520	4806926	0	True				
ANR	4807584	AssignmentExpression	pixel [ 1 ] -= comp [ 1 ] -> spotsize		4806926	0		-=			
ANR	4807585	ArrayIndexing	pixel [ 1 ]		4806926	0					
ANR	4807586	Identifier	pixel		4806926	0					
ANR	4807587	PrimaryExpression	1		4806926	1					
ANR	4807588	PtrMemberAccess	comp [ 1 ] -> spotsize		4806926	1					
ANR	4807589	ArrayIndexing	comp [ 1 ]		4806926	0					
ANR	4807590	Identifier	comp		4806926	0					
ANR	4807591	PrimaryExpression	1		4806926	1					
ANR	4807592	Identifier	spotsize		4806926	1					
ANR	4807593	ExpressionStatement	scan [ 1 ] . bytes [ ibyte ] |= bit	4084:16:150538:150565	4806926	1	True				
ANR	4807594	AssignmentExpression	scan [ 1 ] . bytes [ ibyte ] |= bit		4806926	0		|=			
ANR	4807595	ArrayIndexing	scan [ 1 ] . bytes [ ibyte ]		4806926	0					
ANR	4807596	MemberAccess	scan [ 1 ] . bytes		4806926	0					
ANR	4807597	ArrayIndexing	scan [ 1 ]		4806926	0					
ANR	4807598	Identifier	scan		4806926	0					
ANR	4807599	PrimaryExpression	1		4806926	1					
ANR	4807600	Identifier	bytes		4806926	1					
ANR	4807601	Identifier	ibyte		4806926	1					
ANR	4807602	Identifier	bit		4806926	1					
ANR	4807603	IfStatement	if ( pixel [ 2 ] > comp [ 2 ] -> threshold )		4806926	1					
ANR	4807604	Condition	pixel [ 2 ] > comp [ 2 ] -> threshold	4087:15:150597:150639	4806926	0	True				
ANR	4807605	RelationalExpression	pixel [ 2 ] > comp [ 2 ] -> threshold		4806926	0		>			
ANR	4807606	ArrayIndexing	pixel [ 2 ]		4806926	0					
ANR	4807607	Identifier	pixel		4806926	0					
ANR	4807608	PrimaryExpression	2		4806926	1					
ANR	4807609	PtrMemberAccess	comp [ 2 ] -> threshold		4806926	1					
ANR	4807610	ArrayIndexing	comp [ 2 ]		4806926	0					
ANR	4807611	Identifier	comp		4806926	0					
ANR	4807612	PrimaryExpression	2		4806926	1					
ANR	4807613	Identifier	threshold		4806926	1					
ANR	4807614	CompoundStatement		115:60:3278:3278	4806926	1					
ANR	4807615	ExpressionStatement	pixel [ 2 ] -= comp [ 2 ] -> spotsize	4088:15:150659:150701	4806926	0	True				
ANR	4807616	AssignmentExpression	pixel [ 2 ] -= comp [ 2 ] -> spotsize		4806926	0		-=			
ANR	4807617	ArrayIndexing	pixel [ 2 ]		4806926	0					
ANR	4807618	Identifier	pixel		4806926	0					
ANR	4807619	PrimaryExpression	2		4806926	1					
ANR	4807620	PtrMemberAccess	comp [ 2 ] -> spotsize		4806926	1					
ANR	4807621	ArrayIndexing	comp [ 2 ]		4806926	0					
ANR	4807622	Identifier	comp		4806926	0					
ANR	4807623	PrimaryExpression	2		4806926	1					
ANR	4807624	Identifier	spotsize		4806926	1					
ANR	4807625	ExpressionStatement	scan [ 2 ] . bytes [ ibyte ] |= bit	4089:16:150719:150746	4806926	1	True				
ANR	4807626	AssignmentExpression	scan [ 2 ] . bytes [ ibyte ] |= bit		4806926	0		|=			
ANR	4807627	ArrayIndexing	scan [ 2 ] . bytes [ ibyte ]		4806926	0					
ANR	4807628	MemberAccess	scan [ 2 ] . bytes		4806926	0					
ANR	4807629	ArrayIndexing	scan [ 2 ]		4806926	0					
ANR	4807630	Identifier	scan		4806926	0					
ANR	4807631	PrimaryExpression	2		4806926	1					
ANR	4807632	Identifier	bytes		4806926	1					
ANR	4807633	Identifier	ibyte		4806926	1					
ANR	4807634	Identifier	bit		4806926	1					
ANR	4807635	IfStatement	if ( pixel [ 3 ] > comp [ 3 ] -> threshold )		4806926	2					
ANR	4807636	Condition	pixel [ 3 ] > comp [ 3 ] -> threshold	4092:15:150778:150820	4806926	0	True				
ANR	4807637	RelationalExpression	pixel [ 3 ] > comp [ 3 ] -> threshold		4806926	0		>			
ANR	4807638	ArrayIndexing	pixel [ 3 ]		4806926	0					
ANR	4807639	Identifier	pixel		4806926	0					
ANR	4807640	PrimaryExpression	3		4806926	1					
ANR	4807641	PtrMemberAccess	comp [ 3 ] -> threshold		4806926	1					
ANR	4807642	ArrayIndexing	comp [ 3 ]		4806926	0					
ANR	4807643	Identifier	comp		4806926	0					
ANR	4807644	PrimaryExpression	3		4806926	1					
ANR	4807645	Identifier	threshold		4806926	1					
ANR	4807646	CompoundStatement		120:60:3459:3459	4806926	1					
ANR	4807647	ExpressionStatement	pixel [ 3 ] -= comp [ 3 ] -> spotsize	4093:15:150840:150882	4806926	0	True				
ANR	4807648	AssignmentExpression	pixel [ 3 ] -= comp [ 3 ] -> spotsize		4806926	0		-=			
ANR	4807649	ArrayIndexing	pixel [ 3 ]		4806926	0					
ANR	4807650	Identifier	pixel		4806926	0					
ANR	4807651	PrimaryExpression	3		4806926	1					
ANR	4807652	PtrMemberAccess	comp [ 3 ] -> spotsize		4806926	1					
ANR	4807653	ArrayIndexing	comp [ 3 ]		4806926	0					
ANR	4807654	Identifier	comp		4806926	0					
ANR	4807655	PrimaryExpression	3		4806926	1					
ANR	4807656	Identifier	spotsize		4806926	1					
ANR	4807657	ExpressionStatement	scan [ 3 ] . bytes [ ibyte ] |= bit	4094:16:150900:150927	4806926	1	True				
ANR	4807658	AssignmentExpression	scan [ 3 ] . bytes [ ibyte ] |= bit		4806926	0		|=			
ANR	4807659	ArrayIndexing	scan [ 3 ] . bytes [ ibyte ]		4806926	0					
ANR	4807660	MemberAccess	scan [ 3 ] . bytes		4806926	0					
ANR	4807661	ArrayIndexing	scan [ 3 ]		4806926	0					
ANR	4807662	Identifier	scan		4806926	0					
ANR	4807663	PrimaryExpression	3		4806926	1					
ANR	4807664	Identifier	bytes		4806926	1					
ANR	4807665	Identifier	ibyte		4806926	1					
ANR	4807666	Identifier	bit		4806926	1					
ANR	4807667	ElseStatement	else		4806926	0					
ANR	4807668	CompoundStatement		125:16:3596:3596	4806926	0					
ANR	4807669	ExpressionStatement	pixel [ 1 ] -= comp [ 1 ] -> spotsize	4098:12:150974:151016	4806926	0	True				
ANR	4807670	AssignmentExpression	pixel [ 1 ] -= comp [ 1 ] -> spotsize		4806926	0		-=			
ANR	4807671	ArrayIndexing	pixel [ 1 ]		4806926	0					
ANR	4807672	Identifier	pixel		4806926	0					
ANR	4807673	PrimaryExpression	1		4806926	1					
ANR	4807674	PtrMemberAccess	comp [ 1 ] -> spotsize		4806926	1					
ANR	4807675	ArrayIndexing	comp [ 1 ]		4806926	0					
ANR	4807676	Identifier	comp		4806926	0					
ANR	4807677	PrimaryExpression	1		4806926	1					
ANR	4807678	Identifier	spotsize		4806926	1					
ANR	4807679	ExpressionStatement	pixel [ 2 ] -= comp [ 2 ] -> spotsize	4099:12:151030:151072	4806926	1	True				
ANR	4807680	AssignmentExpression	pixel [ 2 ] -= comp [ 2 ] -> spotsize		4806926	0		-=			
ANR	4807681	ArrayIndexing	pixel [ 2 ]		4806926	0					
ANR	4807682	Identifier	pixel		4806926	0					
ANR	4807683	PrimaryExpression	2		4806926	1					
ANR	4807684	PtrMemberAccess	comp [ 2 ] -> spotsize		4806926	1					
ANR	4807685	ArrayIndexing	comp [ 2 ]		4806926	0					
ANR	4807686	Identifier	comp		4806926	0					
ANR	4807687	PrimaryExpression	2		4806926	1					
ANR	4807688	Identifier	spotsize		4806926	1					
ANR	4807689	ExpressionStatement	pixel [ 3 ] -= comp [ 3 ] -> spotsize	4100:12:151086:151128	4806926	2	True				
ANR	4807690	AssignmentExpression	pixel [ 3 ] -= comp [ 3 ] -> spotsize		4806926	0		-=			
ANR	4807691	ArrayIndexing	pixel [ 3 ]		4806926	0					
ANR	4807692	Identifier	pixel		4806926	0					
ANR	4807693	PrimaryExpression	3		4806926	1					
ANR	4807694	PtrMemberAccess	comp [ 3 ] -> spotsize		4806926	1					
ANR	4807695	ArrayIndexing	comp [ 3 ]		4806926	0					
ANR	4807696	Identifier	comp		4806926	0					
ANR	4807697	PrimaryExpression	3		4806926	1					
ANR	4807698	Identifier	spotsize		4806926	1					
ANR	4807699	ExpressionStatement	scan [ 0 ] . bytes [ ibyte ] |= bit	4101:12:151142:151169	4806926	3	True				
ANR	4807700	AssignmentExpression	scan [ 0 ] . bytes [ ibyte ] |= bit		4806926	0		|=			
ANR	4807701	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		4806926	0					
ANR	4807702	MemberAccess	scan [ 0 ] . bytes		4806926	0					
ANR	4807703	ArrayIndexing	scan [ 0 ]		4806926	0					
ANR	4807704	Identifier	scan		4806926	0					
ANR	4807705	PrimaryExpression	0		4806926	1					
ANR	4807706	Identifier	bytes		4806926	1					
ANR	4807707	Identifier	ibyte		4806926	1					
ANR	4807708	Identifier	bit		4806926	1					
ANR	4807709	Statement	FS_DIST	4105:6:151197:151203	4806926	106	True				
ANR	4807710	Statement	(	4105:13:151204:151204	4806926	107	True				
ANR	4807711	Statement	0	4105:14:151205:151205	4806926	108	True				
ANR	4807712	Statement	)	4105:15:151206:151206	4806926	109	True				
ANR	4807713	Statement	FS_DIST	4106:6:151214:151220	4806926	110	True				
ANR	4807714	Statement	(	4106:13:151221:151221	4806926	111	True				
ANR	4807715	Statement	1	4106:14:151222:151222	4806926	112	True				
ANR	4807716	Statement	)	4106:15:151223:151223	4806926	113	True				
ANR	4807717	Statement	FS_DIST	4107:6:151231:151237	4806926	114	True				
ANR	4807718	Statement	(	4107:13:151238:151238	4806926	115	True				
ANR	4807719	Statement	2	4107:14:151239:151239	4806926	116	True				
ANR	4807720	Statement	)	4107:15:151240:151240	4806926	117	True				
ANR	4807721	Statement	FS_DIST	4108:6:151248:151254	4806926	118	True				
ANR	4807722	Statement	(	4108:13:151255:151255	4806926	119	True				
ANR	4807723	Statement	3	4108:14:151256:151256	4806926	120	True				
ANR	4807724	Statement	)	4108:15:151257:151257	4806926	121	True				
ANR	4807725	Statement	S_FSTEP	4113:6:151330:151336	4806926	122	True				
ANR	4807726	IfStatement	if ( 0 < upd -> nlimits )		4806926	25					
ANR	4807727	Condition	0 < upd -> nlimits	4118:6:151391:151406	4806926	0	True				
ANR	4807728	RelationalExpression	0 < upd -> nlimits		4806926	0		<			
ANR	4807729	PrimaryExpression	0		4806926	0					
ANR	4807730	PtrMemberAccess	upd -> nlimits		4806926	1					
ANR	4807731	Identifier	upd		4806926	0					
ANR	4807732	Identifier	nlimits		4806926	1					
ANR	4807733	ExpressionStatement	"upd_limits ( upd , true )"	4118:24:151409:151429	4806926	1	True				
ANR	4807734	CallExpression	"upd_limits ( upd , true )"		4806926	0					
ANR	4807735	Callee	upd_limits		4806926	0					
ANR	4807736	Identifier	upd_limits		4806926	0					
ANR	4807737	ArgumentList	upd		4806926	1					
ANR	4807738	Argument	upd		4806926	0					
ANR	4807739	Identifier	upd		4806926	0					
ANR	4807740	Argument	true		4806926	1					
ANR	4807741	Identifier	true		4806926	0					
ANR	4807742	ReturnStatement	return 0 ;	4119:3:151434:151442	4806926	26	True				
ANR	4807743	PrimaryExpression	0		4806926	0					
ANR	4807744	ReturnType	static int		4806926	1					
ANR	4807745	Identifier	upd_fscmy_k		4806926	2					
ANR	4807746	ParameterList	upd_p upd		4806926	3					
ANR	4807747	Parameter	upd_p upd	3972:12:147352:147360	4806926	0	True				
ANR	4807748	ParameterType	upd_p		4806926	0					
ANR	4807749	Identifier	upd		4806926	1					
ANR	4807750	CFGEntryNode	ENTRY		4806926		True				
ANR	4807751	CFGExitNode	EXIT		4806926		True				
ANR	4807752	Symbol	comp [ 0 ] -> threshold		4806926						
ANR	4807753	Symbol	ibyte		4806926						
ANR	4807754	Symbol	pwidth		4806926						
ANR	4807755	Symbol	scan [ 1 ] . bytes		4806926						
ANR	4807756	Symbol	dir		4806926						
ANR	4807757	Symbol	bit		4806926						
ANR	4807758	Symbol	comp [ 3 ] -> spotsize		4806926						
ANR	4807759	Symbol	upd -> rwidth		4806926						
ANR	4807760	Symbol	upd -> valbuf		4806926						
ANR	4807761	Symbol	upd -> nlimits		4806926						
ANR	4807762	Symbol	rowerr		4806926						
ANR	4807763	Symbol	* scan		4806926						
ANR	4807764	Symbol	scan [ 2 ] . bytes		4806926						
ANR	4807765	Symbol	comp [ 3 ] -> threshold		4806926						
ANR	4807766	Symbol	upd_pxlget		4806926						
ANR	4807767	Symbol	upd -> nbytes		4806926						
ANR	4807768	Symbol	* scan [ 0 ] . bytes		4806926						
ANR	4807769	Symbol	upd -> valptr		4806926						
ANR	4807770	Symbol	comp		4806926						
ANR	4807771	Symbol	* upd -> scnbuf		4806926						
ANR	4807772	Symbol	comp [ 2 ] -> threshold		4806926						
ANR	4807773	Symbol	comp [ 0 ] -> spotsize		4806926						
ANR	4807774	Symbol	upd		4806926						
ANR	4807775	Symbol	* pixel		4806926						
ANR	4807776	Symbol	* ibyte		4806926						
ANR	4807777	Symbol	* * comp		4806926						
ANR	4807778	Symbol	upd_proc_pxlget		4806926						
ANR	4807779	Symbol	* upd -> yscnbuf		4806926						
ANR	4807780	Symbol	comp [ 1 ] -> threshold		4806926						
ANR	4807781	Symbol	upd -> yscnbuf		4806926						
ANR	4807782	Symbol	* * scan		4806926						
ANR	4807783	Symbol	true		4806926						
ANR	4807784	Symbol	* scan [ 1 ] . bytes		4806926						
ANR	4807785	Symbol	upd -> pxlptr		4806926						
ANR	4807786	Symbol	comp [ 1 ] -> spotsize		4806926						
ANR	4807787	Symbol	* scan [ 2 ] . bytes		4806926						
ANR	4807788	Symbol	scan		4806926						
ANR	4807789	Symbol	upd -> ncomp		4806926						
ANR	4807790	Symbol	upd -> flags		4806926						
ANR	4807791	Symbol	* upd		4806926						
ANR	4807792	Symbol	* fun		4806926						
ANR	4807793	Symbol	* comp		4806926						
ANR	4807794	Symbol	* upd -> scnmsk		4806926						
ANR	4807795	Symbol	colerr		4806926						
ANR	4807796	Symbol	pixel		4806926						
ANR	4807797	Symbol	* scan [ 3 ] . bytes		4806926						
ANR	4807798	Symbol	upd -> scnmsk		4806926						
ANR	4807799	Symbol	ci		4806926						
ANR	4807800	Symbol	upd -> pxlget		4806926						
ANR	4807801	Symbol	B_FSWHITE		4806926						
ANR	4807802	Symbol	B_FIXDIR		4806926						
ANR	4807803	Symbol	comp [ 2 ] -> spotsize		4806926						
ANR	4807804	Symbol	scan [ 0 ] . bytes		4806926						
ANR	4807805	Symbol	ptr		4806926						
ANR	4807806	Symbol	upd -> scnbuf		4806926						
ANR	4807807	Symbol	B_YFLIP		4806926						
ANR	4807808	Symbol	B_REVDIR		4806926						
ANR	4807809	Symbol	* * upd		4806926						
ANR	4807810	Symbol	first		4806926						
ANR	4807811	Symbol	fun		4806926						
ANR	4807812	Symbol	scan [ 3 ] . bytes		4806926						
ANR	4807813	Function	upd_open_writer	4126:0:151670:164412							
ANR	4807814	FunctionDef	upd_open_writer (upd_device * udev)		4807813	0					
ANR	4807815	CompoundStatement		4128:0:151715:164412	4807813	0					
ANR	4807816	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	4129:3:151720:151763	4807813	0	True				
ANR	4807817	IdentifierDecl	upd = udev -> upd		4807813	0					
ANR	4807818	IdentifierDeclType	const upd_p		4807813	0					
ANR	4807819	Identifier	upd		4807813	1					
ANR	4807820	AssignmentExpression	upd = udev -> upd		4807813	2		=			
ANR	4807821	Identifier	upd		4807813	0					
ANR	4807822	PtrMemberAccess	udev -> upd		4807813	1					
ANR	4807823	Identifier	udev		4807813	0					
ANR	4807824	Identifier	upd		4807813	1					
ANR	4807825	IdentifierDeclStatement	bool success = true ;	4130:3:151768:151806	4807813	1	True				
ANR	4807826	IdentifierDecl	success = true		4807813	0					
ANR	4807827	IdentifierDeclType	bool		4807813	0					
ANR	4807828	Identifier	success		4807813	1					
ANR	4807829	AssignmentExpression	success = true		4807813	2		=			
ANR	4807830	Identifier	true		4807813	0					
ANR	4807831	Identifier	true		4807813	1					
ANR	4807832	ExpressionStatement	upd -> start_writer = NULL	4133:3:151844:151868	4807813	2	True				
ANR	4807833	AssignmentExpression	upd -> start_writer = NULL		4807813	0		=			
ANR	4807834	PtrMemberAccess	upd -> start_writer		4807813	0					
ANR	4807835	Identifier	upd		4807813	0					
ANR	4807836	Identifier	start_writer		4807813	1					
ANR	4807837	Identifier	NULL		4807813	1					
ANR	4807838	ExpressionStatement	upd -> writer = NULL	4134:3:151873:151897	4807813	3	True				
ANR	4807839	AssignmentExpression	upd -> writer = NULL		4807813	0		=			
ANR	4807840	PtrMemberAccess	upd -> writer		4807813	0					
ANR	4807841	Identifier	upd		4807813	0					
ANR	4807842	Identifier	writer		4807813	1					
ANR	4807843	Identifier	NULL		4807813	1					
ANR	4807844	ExpressionStatement	upd -> scnbuf = NULL	4135:3:151902:151926	4807813	4	True				
ANR	4807845	AssignmentExpression	upd -> scnbuf = NULL		4807813	0		=			
ANR	4807846	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4807847	Identifier	upd		4807813	0					
ANR	4807848	Identifier	scnbuf		4807813	1					
ANR	4807849	Identifier	NULL		4807813	1					
ANR	4807850	ExpressionStatement	upd -> nscnbuf = 0	4136:3:151931:151952	4807813	5	True				
ANR	4807851	AssignmentExpression	upd -> nscnbuf = 0		4807813	0		=			
ANR	4807852	PtrMemberAccess	upd -> nscnbuf		4807813	0					
ANR	4807853	Identifier	upd		4807813	0					
ANR	4807854	Identifier	nscnbuf		4807813	1					
ANR	4807855	PrimaryExpression	0		4807813	1					
ANR	4807856	ExpressionStatement	upd -> nbytes = 0	4137:3:151957:151978	4807813	6	True				
ANR	4807857	AssignmentExpression	upd -> nbytes = 0		4807813	0		=			
ANR	4807858	PtrMemberAccess	upd -> nbytes		4807813	0					
ANR	4807859	Identifier	upd		4807813	0					
ANR	4807860	Identifier	nbytes		4807813	1					
ANR	4807861	PrimaryExpression	0		4807813	1					
ANR	4807862	ExpressionStatement	upd -> nlimits = 0	4138:3:151983:152004	4807813	7	True				
ANR	4807863	AssignmentExpression	upd -> nlimits = 0		4807813	0		=			
ANR	4807864	PtrMemberAccess	upd -> nlimits		4807813	0					
ANR	4807865	Identifier	upd		4807813	0					
ANR	4807866	Identifier	nlimits		4807813	1					
ANR	4807867	PrimaryExpression	0		4807813	1					
ANR	4807868	ExpressionStatement	upd -> outbuf = NULL	4139:3:152009:152033	4807813	8	True				
ANR	4807869	AssignmentExpression	upd -> outbuf = NULL		4807813	0		=			
ANR	4807870	PtrMemberAccess	upd -> outbuf		4807813	0					
ANR	4807871	Identifier	upd		4807813	0					
ANR	4807872	Identifier	outbuf		4807813	1					
ANR	4807873	Identifier	NULL		4807813	1					
ANR	4807874	ExpressionStatement	upd -> noutbuf = 0	4140:3:152038:152059	4807813	9	True				
ANR	4807875	AssignmentExpression	upd -> noutbuf = 0		4807813	0		=			
ANR	4807876	PtrMemberAccess	upd -> noutbuf		4807813	0					
ANR	4807877	Identifier	upd		4807813	0					
ANR	4807878	Identifier	noutbuf		4807813	1					
ANR	4807879	PrimaryExpression	0		4807813	1					
ANR	4807880	IfStatement	if ( B_RENDER != ( ( B_RENDER | B_ERROR ) & upd -> flags ) )		4807813	10					
ANR	4807881	Condition	B_RENDER != ( ( B_RENDER | B_ERROR ) & upd -> flags )	4143:6:152119:152165	4807813	0	True				
ANR	4807882	EqualityExpression	B_RENDER != ( ( B_RENDER | B_ERROR ) & upd -> flags )		4807813	0		!=			
ANR	4807883	Identifier	B_RENDER		4807813	0					
ANR	4807884	BitAndExpression	( B_RENDER | B_ERROR ) & upd -> flags		4807813	1		&			
ANR	4807885	InclusiveOrExpression	B_RENDER | B_ERROR		4807813	0		|			
ANR	4807886	Identifier	B_RENDER		4807813	0					
ANR	4807887	Identifier	B_ERROR		4807813	1					
ANR	4807888	PtrMemberAccess	upd -> flags		4807813	1					
ANR	4807889	Identifier	upd		4807813	0					
ANR	4807890	Identifier	flags		4807813	1					
ANR	4807891	ExpressionStatement	success = false	4144:6:152174:152189	4807813	1	True				
ANR	4807892	AssignmentExpression	success = false		4807813	0		=			
ANR	4807893	Identifier	success		4807813	0					
ANR	4807894	Identifier	false		4807813	1					
ANR	4807895	ExpressionStatement	upd -> ocomp = upd -> ncomp	4147:3:152230:152253	4807813	11	True				
ANR	4807896	AssignmentExpression	upd -> ocomp = upd -> ncomp		4807813	0		=			
ANR	4807897	PtrMemberAccess	upd -> ocomp		4807813	0					
ANR	4807898	Identifier	upd		4807813	0					
ANR	4807899	Identifier	ocomp		4807813	1					
ANR	4807900	PtrMemberAccess	upd -> ncomp		4807813	1					
ANR	4807901	Identifier	upd		4807813	0					
ANR	4807902	Identifier	ncomp		4807813	1					
ANR	4807903	IfStatement	if ( 0 < upd -> ints [ I_OCOMP ] )		4807813	12					
ANR	4807904	Condition	0 < upd -> ints [ I_OCOMP ]	4148:6:152261:152282	4807813	0	True				
ANR	4807905	RelationalExpression	0 < upd -> ints [ I_OCOMP ]		4807813	0		<			
ANR	4807906	PrimaryExpression	0		4807813	0					
ANR	4807907	ArrayIndexing	upd -> ints [ I_OCOMP ]		4807813	1					
ANR	4807908	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807909	Identifier	upd		4807813	0					
ANR	4807910	Identifier	ints		4807813	1					
ANR	4807911	Identifier	I_OCOMP		4807813	1					
ANR	4807912	ExpressionStatement	upd -> ocomp = upd -> ints [ I_OCOMP ]	4148:30:152285:152316	4807813	1	True				
ANR	4807913	AssignmentExpression	upd -> ocomp = upd -> ints [ I_OCOMP ]		4807813	0		=			
ANR	4807914	PtrMemberAccess	upd -> ocomp		4807813	0					
ANR	4807915	Identifier	upd		4807813	0					
ANR	4807916	Identifier	ocomp		4807813	1					
ANR	4807917	ArrayIndexing	upd -> ints [ I_OCOMP ]		4807813	1					
ANR	4807918	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807919	Identifier	upd		4807813	0					
ANR	4807920	Identifier	ints		4807813	1					
ANR	4807921	Identifier	I_OCOMP		4807813	1					
ANR	4807922	IfStatement	if ( success )		4807813	13					
ANR	4807923	Condition	success	4151:6:152356:152362	4807813	0	True				
ANR	4807924	Identifier	success		4807813	0					
ANR	4807925	CompoundStatement		24:15:649:649	4807813	1					
ANR	4807926	IfStatement	if ( 1 > upd -> ints [ I_NYPASS ] )		4807813	0					
ANR	4807927	Condition	1 > upd -> ints [ I_NYPASS ]	4154:9:152436:152459	4807813	0	True				
ANR	4807928	RelationalExpression	1 > upd -> ints [ I_NYPASS ]		4807813	0		>			
ANR	4807929	PrimaryExpression	1		4807813	0					
ANR	4807930	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	1					
ANR	4807931	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807932	Identifier	upd		4807813	0					
ANR	4807933	Identifier	ints		4807813	1					
ANR	4807934	Identifier	I_NYPASS		4807813	1					
ANR	4807935	ExpressionStatement	upd -> ints [ I_NYPASS ] = 1	4154:35:152462:152485	4807813	1	True				
ANR	4807936	AssignmentExpression	upd -> ints [ I_NYPASS ] = 1		4807813	0		=			
ANR	4807937	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	0					
ANR	4807938	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807939	Identifier	upd		4807813	0					
ANR	4807940	Identifier	ints		4807813	1					
ANR	4807941	Identifier	I_NYPASS		4807813	1					
ANR	4807942	PrimaryExpression	1		4807813	1					
ANR	4807943	IfStatement	if ( 1 > upd -> ints [ I_NXPASS ] )		4807813	1					
ANR	4807944	Condition	1 > upd -> ints [ I_NXPASS ]	4155:9:152496:152519	4807813	0	True				
ANR	4807945	RelationalExpression	1 > upd -> ints [ I_NXPASS ]		4807813	0		>			
ANR	4807946	PrimaryExpression	1		4807813	0					
ANR	4807947	ArrayIndexing	upd -> ints [ I_NXPASS ]		4807813	1					
ANR	4807948	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807949	Identifier	upd		4807813	0					
ANR	4807950	Identifier	ints		4807813	1					
ANR	4807951	Identifier	I_NXPASS		4807813	1					
ANR	4807952	ExpressionStatement	upd -> ints [ I_NXPASS ] = 1	4155:35:152522:152545	4807813	1	True				
ANR	4807953	AssignmentExpression	upd -> ints [ I_NXPASS ] = 1		4807813	0		=			
ANR	4807954	ArrayIndexing	upd -> ints [ I_NXPASS ]		4807813	0					
ANR	4807955	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807956	Identifier	upd		4807813	0					
ANR	4807957	Identifier	ints		4807813	1					
ANR	4807958	Identifier	I_NXPASS		4807813	1					
ANR	4807959	PrimaryExpression	1		4807813	1					
ANR	4807960	IfStatement	if ( 1 > upd -> ints [ I_PINS2WRITE ] )		4807813	2					
ANR	4807961	Condition	1 > upd -> ints [ I_PINS2WRITE ]	4156:9:152556:152583	4807813	0	True				
ANR	4807962	RelationalExpression	1 > upd -> ints [ I_PINS2WRITE ]		4807813	0		>			
ANR	4807963	PrimaryExpression	1		4807813	0					
ANR	4807964	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4807813	1					
ANR	4807965	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807966	Identifier	upd		4807813	0					
ANR	4807967	Identifier	ints		4807813	1					
ANR	4807968	Identifier	I_PINS2WRITE		4807813	1					
ANR	4807969	ExpressionStatement	upd -> ints [ I_PINS2WRITE ] = 1	4156:39:152586:152613	4807813	1	True				
ANR	4807970	AssignmentExpression	upd -> ints [ I_PINS2WRITE ] = 1		4807813	0		=			
ANR	4807971	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4807813	0					
ANR	4807972	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807973	Identifier	upd		4807813	0					
ANR	4807974	Identifier	ints		4807813	1					
ANR	4807975	Identifier	I_PINS2WRITE		4807813	1					
ANR	4807976	PrimaryExpression	1		4807813	1					
ANR	4807977	IfStatement	if ( ( upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ] ) > upd -> ints [ I_NPASS ] )		4807813	3					
ANR	4807978	Condition	( upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ] ) > upd -> ints [ I_NPASS ]	4158:9:152625:152688	4807813	0	True				
ANR	4807979	RelationalExpression	( upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ] ) > upd -> ints [ I_NPASS ]		4807813	0		>			
ANR	4807980	MultiplicativeExpression	upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ]		4807813	0		*			
ANR	4807981	ArrayIndexing	upd -> ints [ I_NXPASS ]		4807813	0					
ANR	4807982	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807983	Identifier	upd		4807813	0					
ANR	4807984	Identifier	ints		4807813	1					
ANR	4807985	Identifier	I_NXPASS		4807813	1					
ANR	4807986	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	1					
ANR	4807987	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807988	Identifier	upd		4807813	0					
ANR	4807989	Identifier	ints		4807813	1					
ANR	4807990	Identifier	I_NYPASS		4807813	1					
ANR	4807991	ArrayIndexing	upd -> ints [ I_NPASS ]		4807813	1					
ANR	4807992	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4807993	Identifier	upd		4807813	0					
ANR	4807994	Identifier	ints		4807813	1					
ANR	4807995	Identifier	I_NPASS		4807813	1					
ANR	4807996	ExpressionStatement	upd -> ints [ I_NPASS ] = upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ]	4159:9:152700:152762	4807813	1	True				
ANR	4807997	AssignmentExpression	upd -> ints [ I_NPASS ] = upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ]		4807813	0		=			
ANR	4807998	ArrayIndexing	upd -> ints [ I_NPASS ]		4807813	0					
ANR	4807999	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808000	Identifier	upd		4807813	0					
ANR	4808001	Identifier	ints		4807813	1					
ANR	4808002	Identifier	I_NPASS		4807813	1					
ANR	4808003	MultiplicativeExpression	upd -> ints [ I_NXPASS ] * upd -> ints [ I_NYPASS ]		4807813	1		*			
ANR	4808004	ArrayIndexing	upd -> ints [ I_NXPASS ]		4807813	0					
ANR	4808005	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808006	Identifier	upd		4807813	0					
ANR	4808007	Identifier	ints		4807813	1					
ANR	4808008	Identifier	I_NXPASS		4807813	1					
ANR	4808009	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	1					
ANR	4808010	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808011	Identifier	upd		4807813	0					
ANR	4808012	Identifier	ints		4807813	1					
ANR	4808013	Identifier	I_NYPASS		4807813	1					
ANR	4808014	IfStatement	if ( upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size )		4807813	4					
ANR	4808015	Condition	upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size	4163:9:152813:152859	4807813	0	True				
ANR	4808016	RelationalExpression	upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size		4807813	0		>			
ANR	4808017	ArrayIndexing	upd -> ints [ I_NPASS ]		4807813	0					
ANR	4808018	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808019	Identifier	upd		4807813	0					
ANR	4808020	Identifier	ints		4807813	1					
ANR	4808021	Identifier	I_NPASS		4807813	1					
ANR	4808022	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4807813	1					
ANR	4808023	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808024	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808025	Identifier	upd		4807813	0					
ANR	4808026	Identifier	int_a		4807813	1					
ANR	4808027	Identifier	IA_STD_DY		4807813	1					
ANR	4808028	Identifier	size		4807813	1					
ANR	4808029	CompoundStatement		37:9:1157:1170	4807813	1					
ANR	4808030	IdentifierDeclStatement	"int ix , iy , * ip ;"	4164:9:152873:152886	4807813	0	True				
ANR	4808031	IdentifierDecl	ix		4807813	0					
ANR	4808032	IdentifierDeclType	int		4807813	0					
ANR	4808033	Identifier	ix		4807813	1					
ANR	4808034	IdentifierDecl	iy		4807813	1					
ANR	4808035	IdentifierDeclType	int		4807813	0					
ANR	4808036	Identifier	iy		4807813	1					
ANR	4808037	IdentifierDecl	* ip		4807813	2					
ANR	4808038	IdentifierDeclType	int *		4807813	0					
ANR	4808039	Identifier	ip		4807813	1					
ANR	4808040	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_STD_DY ] )"	4165:9:152897:152950	4807813	1	True				
ANR	4808041	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_STD_DY ] )"		4807813	0					
ANR	4808042	Callee	UPD_MM_DEL_PARAM		4807813	0					
ANR	4808043	Identifier	UPD_MM_DEL_PARAM		4807813	0					
ANR	4808044	ArgumentList	udev -> memory		4807813	1					
ANR	4808045	Argument	udev -> memory		4807813	0					
ANR	4808046	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808047	Identifier	udev		4807813	0					
ANR	4808048	Identifier	memory		4807813	1					
ANR	4808049	Argument	upd -> int_a [ IA_STD_DY ]		4807813	1					
ANR	4808050	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808051	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808052	Identifier	upd		4807813	0					
ANR	4808053	Identifier	int_a		4807813	1					
ANR	4808054	Identifier	IA_STD_DY		4807813	1					
ANR	4808055	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> ints [ I_NPASS ] )"	4166:9:152961:153014	4807813	2	True				
ANR	4808056	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> ints [ I_NPASS ] )"		4807813	0					
ANR	4808057	Callee	UPD_MM_GET_ARRAY		4807813	0					
ANR	4808058	Identifier	UPD_MM_GET_ARRAY		4807813	0					
ANR	4808059	ArgumentList	udev -> memory		4807813	1					
ANR	4808060	Argument	udev -> memory		4807813	0					
ANR	4808061	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808062	Identifier	udev		4807813	0					
ANR	4808063	Identifier	memory		4807813	1					
ANR	4808064	Argument	ip		4807813	1					
ANR	4808065	Identifier	ip		4807813	0					
ANR	4808066	Argument	upd -> ints [ I_NPASS ]		4807813	2					
ANR	4808067	ArrayIndexing	upd -> ints [ I_NPASS ]		4807813	0					
ANR	4808068	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808069	Identifier	upd		4807813	0					
ANR	4808070	Identifier	ints		4807813	1					
ANR	4808071	Identifier	I_NPASS		4807813	1					
ANR	4808072	ExpressionStatement	upd -> int_a [ IA_STD_DY ] . data = ip	4167:9:153025:153056	4807813	3	True				
ANR	4808073	AssignmentExpression	upd -> int_a [ IA_STD_DY ] . data = ip		4807813	0		=			
ANR	4808074	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		4807813	0					
ANR	4808075	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808076	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808077	Identifier	upd		4807813	0					
ANR	4808078	Identifier	int_a		4807813	1					
ANR	4808079	Identifier	IA_STD_DY		4807813	1					
ANR	4808080	Identifier	data		4807813	1					
ANR	4808081	Identifier	ip		4807813	1					
ANR	4808082	ExpressionStatement	upd -> int_a [ IA_STD_DY ] . size = upd -> ints [ I_NPASS ]	4168:9:153067:153114	4807813	4	True				
ANR	4808083	AssignmentExpression	upd -> int_a [ IA_STD_DY ] . size = upd -> ints [ I_NPASS ]		4807813	0		=			
ANR	4808084	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4807813	0					
ANR	4808085	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808086	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808087	Identifier	upd		4807813	0					
ANR	4808088	Identifier	int_a		4807813	1					
ANR	4808089	Identifier	IA_STD_DY		4807813	1					
ANR	4808090	Identifier	size		4807813	1					
ANR	4808091	ArrayIndexing	upd -> ints [ I_NPASS ]		4807813	1					
ANR	4808092	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808093	Identifier	upd		4807813	0					
ANR	4808094	Identifier	ints		4807813	1					
ANR	4808095	Identifier	I_NPASS		4807813	1					
ANR	4808096	ForStatement	for ( iy = 1 ; iy < upd -> ints [ I_NYPASS ] ; ++ iy )		4807813	5					
ANR	4808097	ForInit	iy = 1 ;	4170:13:153130:153136	4807813	0	True				
ANR	4808098	AssignmentExpression	iy = 1		4807813	0		=			
ANR	4808099	Identifier	iy		4807813	0					
ANR	4808100	PrimaryExpression	1		4807813	1					
ANR	4808101	Condition	iy < upd -> ints [ I_NYPASS ]	4170:21:153138:153161	4807813	1	True				
ANR	4808102	RelationalExpression	iy < upd -> ints [ I_NYPASS ]		4807813	0		<			
ANR	4808103	Identifier	iy		4807813	0					
ANR	4808104	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	1					
ANR	4808105	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808106	Identifier	upd		4807813	0					
ANR	4808107	Identifier	ints		4807813	1					
ANR	4808108	Identifier	I_NYPASS		4807813	1					
ANR	4808109	UnaryExpression	++ iy	4170:47:153164:153167	4807813	2	True				
ANR	4808110	IncDec	++		4807813	0					
ANR	4808111	Identifier	iy		4807813	1					
ANR	4808112	CompoundStatement		43:53:1454:1454	4807813	3					
ANR	4808113	ForStatement	for ( ix = 1 ; ix < upd -> ints [ I_NXPASS ] ; ++ ix )		4807813	0					
ANR	4808114	ForInit	ix = 1 ;	4171:16:153188:153194	4807813	0	True				
ANR	4808115	AssignmentExpression	ix = 1		4807813	0		=			
ANR	4808116	Identifier	ix		4807813	0					
ANR	4808117	PrimaryExpression	1		4807813	1					
ANR	4808118	Condition	ix < upd -> ints [ I_NXPASS ]	4171:24:153196:153219	4807813	1	True				
ANR	4808119	RelationalExpression	ix < upd -> ints [ I_NXPASS ]		4807813	0		<			
ANR	4808120	Identifier	ix		4807813	0					
ANR	4808121	ArrayIndexing	upd -> ints [ I_NXPASS ]		4807813	1					
ANR	4808122	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808123	Identifier	upd		4807813	0					
ANR	4808124	Identifier	ints		4807813	1					
ANR	4808125	Identifier	I_NXPASS		4807813	1					
ANR	4808126	UnaryExpression	++ ix	4171:50:153222:153225	4807813	2	True				
ANR	4808127	IncDec	++		4807813	0					
ANR	4808128	Identifier	ix		4807813	1					
ANR	4808129	ExpressionStatement	* ip ++ = 0	4171:56:153228:153237	4807813	3	True				
ANR	4808130	AssignmentExpression	* ip ++ = 0		4807813	0		=			
ANR	4808131	UnaryOperationExpression	* ip ++		4807813	0					
ANR	4808132	UnaryOperator	*		4807813	0					
ANR	4808133	PostIncDecOperationExpression	ip ++		4807813	1					
ANR	4808134	Identifier	ip		4807813	0					
ANR	4808135	IncDec	++		4807813	1					
ANR	4808136	PrimaryExpression	0		4807813	1					
ANR	4808137	ExpressionStatement	* ip ++ = 1	4172:12:153251:153260	4807813	1	True				
ANR	4808138	AssignmentExpression	* ip ++ = 1		4807813	0		=			
ANR	4808139	UnaryOperationExpression	* ip ++		4807813	0					
ANR	4808140	UnaryOperator	*		4807813	0					
ANR	4808141	PostIncDecOperationExpression	ip ++		4807813	1					
ANR	4808142	Identifier	ip		4807813	0					
ANR	4808143	IncDec	++		4807813	1					
ANR	4808144	PrimaryExpression	1		4807813	1					
ANR	4808145	ForStatement	for ( ix = 1 ; ix < upd -> ints [ I_NXPASS ] ; ++ ix )		4807813	6					
ANR	4808146	ForInit	ix = 1 ;	4174:13:153286:153292	4807813	0	True				
ANR	4808147	AssignmentExpression	ix = 1		4807813	0		=			
ANR	4808148	Identifier	ix		4807813	0					
ANR	4808149	PrimaryExpression	1		4807813	1					
ANR	4808150	Condition	ix < upd -> ints [ I_NXPASS ]	4174:21:153294:153317	4807813	1	True				
ANR	4808151	RelationalExpression	ix < upd -> ints [ I_NXPASS ]		4807813	0		<			
ANR	4808152	Identifier	ix		4807813	0					
ANR	4808153	ArrayIndexing	upd -> ints [ I_NXPASS ]		4807813	1					
ANR	4808154	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808155	Identifier	upd		4807813	0					
ANR	4808156	Identifier	ints		4807813	1					
ANR	4808157	Identifier	I_NXPASS		4807813	1					
ANR	4808158	UnaryExpression	++ ix	4174:47:153320:153323	4807813	2	True				
ANR	4808159	IncDec	++		4807813	0					
ANR	4808160	Identifier	ix		4807813	1					
ANR	4808161	ExpressionStatement	* ip ++ = 0	4174:53:153326:153335	4807813	3	True				
ANR	4808162	AssignmentExpression	* ip ++ = 0		4807813	0		=			
ANR	4808163	UnaryOperationExpression	* ip ++		4807813	0					
ANR	4808164	UnaryOperator	*		4807813	0					
ANR	4808165	PostIncDecOperationExpression	ip ++		4807813	1					
ANR	4808166	Identifier	ip		4807813	0					
ANR	4808167	IncDec	++		4807813	1					
ANR	4808168	PrimaryExpression	0		4807813	1					
ANR	4808169	ExpressionStatement	* ip = upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] - upd -> ints [ I_NYPASS ] + 1	4175:9:153346:153436	4807813	7	True				
ANR	4808170	AssignmentExpression	* ip = upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] - upd -> ints [ I_NYPASS ] + 1		4807813	0		=			
ANR	4808171	UnaryOperationExpression	* ip		4807813	0					
ANR	4808172	UnaryOperator	*		4807813	0					
ANR	4808173	Identifier	ip		4807813	1					
ANR	4808174	AdditiveExpression	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] - upd -> ints [ I_NYPASS ] + 1		4807813	1		-			
ANR	4808175	MultiplicativeExpression	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ]		4807813	0		*			
ANR	4808176	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	0					
ANR	4808177	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808178	Identifier	upd		4807813	0					
ANR	4808179	Identifier	ints		4807813	1					
ANR	4808180	Identifier	I_NYPASS		4807813	1					
ANR	4808181	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4807813	1					
ANR	4808182	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808183	Identifier	upd		4807813	0					
ANR	4808184	Identifier	ints		4807813	1					
ANR	4808185	Identifier	I_PINS2WRITE		4807813	1					
ANR	4808186	AdditiveExpression	upd -> ints [ I_NYPASS ] + 1		4807813	1		+			
ANR	4808187	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	0					
ANR	4808188	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808189	Identifier	upd		4807813	0					
ANR	4808190	Identifier	ints		4807813	1					
ANR	4808191	Identifier	I_NYPASS		4807813	1					
ANR	4808192	PrimaryExpression	1		4807813	1					
ANR	4808193	ExpressionStatement	upd -> ints [ I_BEG_Y ] = 0	4178:9:153448:153470	4807813	8	True				
ANR	4808194	AssignmentExpression	upd -> ints [ I_BEG_Y ] = 0		4807813	0		=			
ANR	4808195	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4807813	0					
ANR	4808196	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808197	Identifier	upd		4807813	0					
ANR	4808198	Identifier	ints		4807813	1					
ANR	4808199	Identifier	I_BEG_Y		4807813	1					
ANR	4808200	PrimaryExpression	0		4807813	1					
ANR	4808201	ExpressionStatement	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight	4179:9:153481:153591	4807813	9	True				
ANR	4808202	AssignmentExpression	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		4807813	0		=			
ANR	4808203	ArrayIndexing	upd -> ints [ I_END_Y ]		4807813	0					
ANR	4808204	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808205	Identifier	upd		4807813	0					
ANR	4808206	Identifier	ints		4807813	1					
ANR	4808207	Identifier	I_END_Y		4807813	1					
ANR	4808208	ConditionalExpression	upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		4807813	1					
ANR	4808209	Condition	upd -> ints [ I_PHEIGHT ]		4807813	0					
ANR	4808210	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		4807813	0					
ANR	4808211	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808212	Identifier	upd		4807813	0					
ANR	4808213	Identifier	ints		4807813	1					
ANR	4808214	Identifier	I_PHEIGHT		4807813	1					
ANR	4808215	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		4807813	1					
ANR	4808216	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808217	Identifier	upd		4807813	0					
ANR	4808218	Identifier	ints		4807813	1					
ANR	4808219	Identifier	I_PHEIGHT		4807813	1					
ANR	4808220	PtrMemberAccess	upd -> gsheight		4807813	2					
ANR	4808221	Identifier	upd		4807813	0					
ANR	4808222	Identifier	gsheight		4807813	1					
ANR	4808223	IfStatement	if ( 0 >= upd -> ints [ I_BEG_Y ] )		4807813	5					
ANR	4808224	Condition	0 >= upd -> ints [ I_BEG_Y ]	4184:9:153633:153655	4807813	0	True				
ANR	4808225	RelationalExpression	0 >= upd -> ints [ I_BEG_Y ]		4807813	0		>=			
ANR	4808226	PrimaryExpression	0		4807813	0					
ANR	4808227	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4807813	1					
ANR	4808228	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808229	Identifier	upd		4807813	0					
ANR	4808230	Identifier	ints		4807813	1					
ANR	4808231	Identifier	I_BEG_Y		4807813	1					
ANR	4808232	CompoundStatement		57:34:1942:1942	4807813	1					
ANR	4808233	IfStatement	if ( 0 < upd -> int_a [ IA_BEG_DY ] . size )		4807813	0					
ANR	4808234	Condition	0 < upd -> int_a [ IA_BEG_DY ] . size	4185:12:153672:153702	4807813	0	True				
ANR	4808235	RelationalExpression	0 < upd -> int_a [ IA_BEG_DY ] . size		4807813	0		<			
ANR	4808236	PrimaryExpression	0		4807813	0					
ANR	4808237	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4808238	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4808239	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808240	Identifier	upd		4807813	0					
ANR	4808241	Identifier	int_a		4807813	1					
ANR	4808242	Identifier	IA_BEG_DY		4807813	1					
ANR	4808243	Identifier	size		4807813	1					
ANR	4808244	CompoundStatement		59:12:2003:2016	4807813	1					
ANR	4808245	IdentifierDeclStatement	"int i , sum = 0 ;"	4186:12:153719:153732	4807813	0	True				
ANR	4808246	IdentifierDecl	i		4807813	0					
ANR	4808247	IdentifierDeclType	int		4807813	0					
ANR	4808248	Identifier	i		4807813	1					
ANR	4808249	IdentifierDecl	sum = 0		4807813	1					
ANR	4808250	IdentifierDeclType	int		4807813	0					
ANR	4808251	Identifier	sum		4807813	1					
ANR	4808252	AssignmentExpression	sum = 0		4807813	2		=			
ANR	4808253	Identifier	sum		4807813	0					
ANR	4808254	PrimaryExpression	0		4807813	1					
ANR	4808255	ForStatement	for ( i = 0 ; i < upd -> int_a [ IA_BEG_DY ] . size ; ++ i )		4807813	1					
ANR	4808256	ForInit	i = 0 ;	4187:16:153750:153755	4807813	0	True				
ANR	4808257	AssignmentExpression	i = 0		4807813	0		=			
ANR	4808258	Identifier	i		4807813	0					
ANR	4808259	PrimaryExpression	0		4807813	1					
ANR	4808260	Condition	i < upd -> int_a [ IA_BEG_DY ] . size	4187:23:153757:153786	4807813	1	True				
ANR	4808261	RelationalExpression	i < upd -> int_a [ IA_BEG_DY ] . size		4807813	0		<			
ANR	4808262	Identifier	i		4807813	0					
ANR	4808263	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4808264	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4808265	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808266	Identifier	upd		4807813	0					
ANR	4808267	Identifier	int_a		4807813	1					
ANR	4808268	Identifier	IA_BEG_DY		4807813	1					
ANR	4808269	Identifier	size		4807813	1					
ANR	4808270	UnaryExpression	++ i	4187:55:153789:153791	4807813	2	True				
ANR	4808271	IncDec	++		4807813	0					
ANR	4808272	Identifier	i		4807813	1					
ANR	4808273	ExpressionStatement	sum += upd -> int_a [ IA_BEG_DY ] . data [ i ]	4188:15:153809:153846	4807813	3	True				
ANR	4808274	AssignmentExpression	sum += upd -> int_a [ IA_BEG_DY ] . data [ i ]		4807813	0		+=			
ANR	4808275	Identifier	sum		4807813	0					
ANR	4808276	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ i ]		4807813	1					
ANR	4808277	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		4807813	0					
ANR	4808278	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4808279	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808280	Identifier	upd		4807813	0					
ANR	4808281	Identifier	int_a		4807813	1					
ANR	4808282	Identifier	IA_BEG_DY		4807813	1					
ANR	4808283	Identifier	data		4807813	1					
ANR	4808284	Identifier	i		4807813	1					
ANR	4808285	ExpressionStatement	upd -> ints [ I_BEG_Y ] = sum	4189:12:153860:153884	4807813	2	True				
ANR	4808286	AssignmentExpression	upd -> ints [ I_BEG_Y ] = sum		4807813	0		=			
ANR	4808287	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4807813	0					
ANR	4808288	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808289	Identifier	upd		4807813	0					
ANR	4808290	Identifier	ints		4807813	1					
ANR	4808291	Identifier	I_BEG_Y		4807813	1					
ANR	4808292	Identifier	sum		4807813	1					
ANR	4808293	ElseStatement	else		4807813	0					
ANR	4808294	CompoundStatement		63:16:2186:2186	4807813	0					
ANR	4808295	ExpressionStatement	upd -> ints [ I_BEG_Y ] = 0	4191:12:153916:153938	4807813	0	True				
ANR	4808296	AssignmentExpression	upd -> ints [ I_BEG_Y ] = 0		4807813	0		=			
ANR	4808297	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4807813	0					
ANR	4808298	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808299	Identifier	upd		4807813	0					
ANR	4808300	Identifier	ints		4807813	1					
ANR	4808301	Identifier	I_BEG_Y		4807813	1					
ANR	4808302	PrimaryExpression	0		4807813	1					
ANR	4808303	IfStatement	if ( 0 >= upd -> int_a [ IA_ENDTOP ] . size || 0 >= upd -> int_a [ IA_END_DY ] . size )		4807813	6					
ANR	4808304	Condition	0 >= upd -> int_a [ IA_ENDTOP ] . size || 0 >= upd -> int_a [ IA_END_DY ] . size	4200:9:154202:154276	4807813	0	True				
ANR	4808305	OrExpression	0 >= upd -> int_a [ IA_ENDTOP ] . size || 0 >= upd -> int_a [ IA_END_DY ] . size		4807813	0		||			
ANR	4808306	RelationalExpression	0 >= upd -> int_a [ IA_ENDTOP ] . size		4807813	0		>=			
ANR	4808307	PrimaryExpression	0		4807813	0					
ANR	4808308	MemberAccess	upd -> int_a [ IA_ENDTOP ] . size		4807813	1					
ANR	4808309	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4807813	0					
ANR	4808310	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808311	Identifier	upd		4807813	0					
ANR	4808312	Identifier	int_a		4807813	1					
ANR	4808313	Identifier	IA_ENDTOP		4807813	1					
ANR	4808314	Identifier	size		4807813	1					
ANR	4808315	RelationalExpression	0 >= upd -> int_a [ IA_END_DY ] . size		4807813	1		>=			
ANR	4808316	PrimaryExpression	0		4807813	0					
ANR	4808317	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	1					
ANR	4808318	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4808319	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808320	Identifier	upd		4807813	0					
ANR	4808321	Identifier	int_a		4807813	1					
ANR	4808322	Identifier	IA_END_DY		4807813	1					
ANR	4808323	Identifier	size		4807813	1					
ANR	4808324	ExpressionStatement	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight	4201:45:154282:154371	4807813	1	True				
ANR	4808325	AssignmentExpression	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		4807813	0		=			
ANR	4808326	ArrayIndexing	upd -> ints [ I_END_Y ]		4807813	0					
ANR	4808327	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808328	Identifier	upd		4807813	0					
ANR	4808329	Identifier	ints		4807813	1					
ANR	4808330	Identifier	I_END_Y		4807813	1					
ANR	4808331	ConditionalExpression	upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		4807813	1					
ANR	4808332	Condition	upd -> ints [ I_PHEIGHT ]		4807813	0					
ANR	4808333	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		4807813	0					
ANR	4808334	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808335	Identifier	upd		4807813	0					
ANR	4808336	Identifier	ints		4807813	1					
ANR	4808337	Identifier	I_PHEIGHT		4807813	1					
ANR	4808338	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		4807813	1					
ANR	4808339	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808340	Identifier	upd		4807813	0					
ANR	4808341	Identifier	ints		4807813	1					
ANR	4808342	Identifier	I_PHEIGHT		4807813	1					
ANR	4808343	PtrMemberAccess	upd -> gsheight		4807813	2					
ANR	4808344	Identifier	upd		4807813	0					
ANR	4808345	Identifier	gsheight		4807813	1					
ANR	4808346	IfStatement	if ( 0 >= upd -> ints [ I_END_Y ] )		4807813	7					
ANR	4808347	Condition	0 >= upd -> ints [ I_END_Y ]	4204:9:154383:154405	4807813	0	True				
ANR	4808348	RelationalExpression	0 >= upd -> ints [ I_END_Y ]		4807813	0		>=			
ANR	4808349	PrimaryExpression	0		4807813	0					
ANR	4808350	ArrayIndexing	upd -> ints [ I_END_Y ]		4807813	1					
ANR	4808351	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808352	Identifier	upd		4807813	0					
ANR	4808353	Identifier	ints		4807813	1					
ANR	4808354	Identifier	I_END_Y		4807813	1					
ANR	4808355	ExpressionStatement	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight	4204:34:154408:154496	4807813	1	True				
ANR	4808356	AssignmentExpression	upd -> ints [ I_END_Y ] = upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		4807813	0		=			
ANR	4808357	ArrayIndexing	upd -> ints [ I_END_Y ]		4807813	0					
ANR	4808358	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808359	Identifier	upd		4807813	0					
ANR	4808360	Identifier	ints		4807813	1					
ANR	4808361	Identifier	I_END_Y		4807813	1					
ANR	4808362	ConditionalExpression	upd -> ints [ I_PHEIGHT ] ? upd -> ints [ I_PHEIGHT ] : upd -> gsheight		4807813	1					
ANR	4808363	Condition	upd -> ints [ I_PHEIGHT ]		4807813	0					
ANR	4808364	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		4807813	0					
ANR	4808365	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808366	Identifier	upd		4807813	0					
ANR	4808367	Identifier	ints		4807813	1					
ANR	4808368	Identifier	I_PHEIGHT		4807813	1					
ANR	4808369	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		4807813	1					
ANR	4808370	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808371	Identifier	upd		4807813	0					
ANR	4808372	Identifier	ints		4807813	1					
ANR	4808373	Identifier	I_PHEIGHT		4807813	1					
ANR	4808374	PtrMemberAccess	upd -> gsheight		4807813	2					
ANR	4808375	Identifier	upd		4807813	0					
ANR	4808376	Identifier	gsheight		4807813	1					
ANR	4808377	IfStatement	if ( 0 >= upd -> int_a [ IA_STD_IX ] . size )		4807813	8					
ANR	4808378	Condition	0 >= upd -> int_a [ IA_STD_IX ] . size	4209:9:154542:154572	4807813	0	True				
ANR	4808379	RelationalExpression	0 >= upd -> int_a [ IA_STD_IX ] . size		4807813	0		>=			
ANR	4808380	PrimaryExpression	0		4807813	0					
ANR	4808381	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		4807813	1					
ANR	4808382	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		4807813	0					
ANR	4808383	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808384	Identifier	upd		4807813	0					
ANR	4808385	Identifier	int_a		4807813	1					
ANR	4808386	Identifier	IA_STD_IX		4807813	1					
ANR	4808387	Identifier	size		4807813	1					
ANR	4808388	CompoundStatement		83:9:2870:2882	4807813	1					
ANR	4808389	IdentifierDeclStatement	"int ix , i , * ip ;"	4210:9:154586:154598	4807813	0	True				
ANR	4808390	IdentifierDecl	ix		4807813	0					
ANR	4808391	IdentifierDeclType	int		4807813	0					
ANR	4808392	Identifier	ix		4807813	1					
ANR	4808393	IdentifierDecl	i		4807813	1					
ANR	4808394	IdentifierDeclType	int		4807813	0					
ANR	4808395	Identifier	i		4807813	1					
ANR	4808396	IdentifierDecl	* ip		4807813	2					
ANR	4808397	IdentifierDeclType	int *		4807813	0					
ANR	4808398	Identifier	ip		4807813	1					
ANR	4808399	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_STD_IX ] )"	4211:9:154609:154662	4807813	1	True				
ANR	4808400	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_STD_IX ] )"		4807813	0					
ANR	4808401	Callee	UPD_MM_DEL_PARAM		4807813	0					
ANR	4808402	Identifier	UPD_MM_DEL_PARAM		4807813	0					
ANR	4808403	ArgumentList	udev -> memory		4807813	1					
ANR	4808404	Argument	udev -> memory		4807813	0					
ANR	4808405	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808406	Identifier	udev		4807813	0					
ANR	4808407	Identifier	memory		4807813	1					
ANR	4808408	Argument	upd -> int_a [ IA_STD_IX ]		4807813	1					
ANR	4808409	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		4807813	0					
ANR	4808410	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808411	Identifier	upd		4807813	0					
ANR	4808412	Identifier	int_a		4807813	1					
ANR	4808413	Identifier	IA_STD_IX		4807813	1					
ANR	4808414	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_STD_DY ] . size )"	4212:9:154673:154734	4807813	2	True				
ANR	4808415	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_STD_DY ] . size )"		4807813	0					
ANR	4808416	Callee	UPD_MM_GET_ARRAY		4807813	0					
ANR	4808417	Identifier	UPD_MM_GET_ARRAY		4807813	0					
ANR	4808418	ArgumentList	udev -> memory		4807813	1					
ANR	4808419	Argument	udev -> memory		4807813	0					
ANR	4808420	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808421	Identifier	udev		4807813	0					
ANR	4808422	Identifier	memory		4807813	1					
ANR	4808423	Argument	ip		4807813	1					
ANR	4808424	Identifier	ip		4807813	0					
ANR	4808425	Argument	upd -> int_a [ IA_STD_DY ] . size		4807813	2					
ANR	4808426	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4807813	0					
ANR	4808427	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808428	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808429	Identifier	upd		4807813	0					
ANR	4808430	Identifier	int_a		4807813	1					
ANR	4808431	Identifier	IA_STD_DY		4807813	1					
ANR	4808432	Identifier	size		4807813	1					
ANR	4808433	ExpressionStatement	upd -> int_a [ IA_STD_IX ] . data = ip	4213:9:154745:154776	4807813	3	True				
ANR	4808434	AssignmentExpression	upd -> int_a [ IA_STD_IX ] . data = ip		4807813	0		=			
ANR	4808435	MemberAccess	upd -> int_a [ IA_STD_IX ] . data		4807813	0					
ANR	4808436	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		4807813	0					
ANR	4808437	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808438	Identifier	upd		4807813	0					
ANR	4808439	Identifier	int_a		4807813	1					
ANR	4808440	Identifier	IA_STD_IX		4807813	1					
ANR	4808441	Identifier	data		4807813	1					
ANR	4808442	Identifier	ip		4807813	1					
ANR	4808443	ExpressionStatement	upd -> int_a [ IA_STD_IX ] . size = upd -> int_a [ IA_STD_DY ] . size	4214:9:154787:154842	4807813	4	True				
ANR	4808444	AssignmentExpression	upd -> int_a [ IA_STD_IX ] . size = upd -> int_a [ IA_STD_DY ] . size		4807813	0		=			
ANR	4808445	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		4807813	0					
ANR	4808446	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		4807813	0					
ANR	4808447	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808448	Identifier	upd		4807813	0					
ANR	4808449	Identifier	int_a		4807813	1					
ANR	4808450	Identifier	IA_STD_IX		4807813	1					
ANR	4808451	Identifier	size		4807813	1					
ANR	4808452	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4807813	1					
ANR	4808453	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808454	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808455	Identifier	upd		4807813	0					
ANR	4808456	Identifier	int_a		4807813	1					
ANR	4808457	Identifier	IA_STD_DY		4807813	1					
ANR	4808458	Identifier	size		4807813	1					
ANR	4808459	ForStatement	"for ( i = 0 , ix = 0 ; i < upd -> int_a [ IA_STD_IX ] . size ; ++ i )"		4807813	5					
ANR	4808460	ForInit	"i = 0 , ix = 0 ;"	4216:13:154858:154871	4807813	0	True				
ANR	4808461	Expression	"i = 0 , ix = 0"		4807813	0					
ANR	4808462	AssignmentExpression	i = 0		4807813	0		=			
ANR	4808463	Identifier	i		4807813	0					
ANR	4808464	PrimaryExpression	0		4807813	1					
ANR	4808465	AssignmentExpression	ix = 0		4807813	1		=			
ANR	4808466	Identifier	ix		4807813	0					
ANR	4808467	PrimaryExpression	0		4807813	1					
ANR	4808468	Condition	i < upd -> int_a [ IA_STD_IX ] . size	4216:28:154873:154902	4807813	1	True				
ANR	4808469	RelationalExpression	i < upd -> int_a [ IA_STD_IX ] . size		4807813	0		<			
ANR	4808470	Identifier	i		4807813	0					
ANR	4808471	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		4807813	1					
ANR	4808472	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		4807813	0					
ANR	4808473	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808474	Identifier	upd		4807813	0					
ANR	4808475	Identifier	int_a		4807813	1					
ANR	4808476	Identifier	IA_STD_IX		4807813	1					
ANR	4808477	Identifier	size		4807813	1					
ANR	4808478	UnaryExpression	++ i	4216:60:154905:154907	4807813	2	True				
ANR	4808479	IncDec	++		4807813	0					
ANR	4808480	Identifier	i		4807813	1					
ANR	4808481	CompoundStatement		89:65:3194:3194	4807813	3					
ANR	4808482	ExpressionStatement	* ip ++ = ix ++	4217:12:154924:154936	4807813	0	True				
ANR	4808483	AssignmentExpression	* ip ++ = ix ++		4807813	0		=			
ANR	4808484	UnaryOperationExpression	* ip ++		4807813	0					
ANR	4808485	UnaryOperator	*		4807813	0					
ANR	4808486	PostIncDecOperationExpression	ip ++		4807813	1					
ANR	4808487	Identifier	ip		4807813	0					
ANR	4808488	IncDec	++		4807813	1					
ANR	4808489	PostIncDecOperationExpression	ix ++		4807813	1					
ANR	4808490	Identifier	ix		4807813	0					
ANR	4808491	IncDec	++		4807813	1					
ANR	4808492	IfStatement	if ( ix == upd -> ints [ I_NXPASS ] )		4807813	1					
ANR	4808493	Condition	ix == upd -> ints [ I_NXPASS ]	4218:15:154953:154977	4807813	0	True				
ANR	4808494	EqualityExpression	ix == upd -> ints [ I_NXPASS ]		4807813	0		==			
ANR	4808495	Identifier	ix		4807813	0					
ANR	4808496	ArrayIndexing	upd -> ints [ I_NXPASS ]		4807813	1					
ANR	4808497	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808498	Identifier	upd		4807813	0					
ANR	4808499	Identifier	ints		4807813	1					
ANR	4808500	Identifier	I_NXPASS		4807813	1					
ANR	4808501	ExpressionStatement	ix = 0	4218:42:154980:154986	4807813	1	True				
ANR	4808502	AssignmentExpression	ix = 0		4807813	0		=			
ANR	4808503	Identifier	ix		4807813	0					
ANR	4808504	PrimaryExpression	0		4807813	1					
ANR	4808505	IfStatement	if ( ( 0 >= upd -> int_a [ IA_BEG_IX ] . size ) && ( 0 < upd -> int_a [ IA_BEG_DY ] . size ) )		4807813	9					
ANR	4808506	Condition	( 0 >= upd -> int_a [ IA_BEG_IX ] . size ) && ( 0 < upd -> int_a [ IA_BEG_DY ] . size )	4222:9:155017:155095	4807813	0	True				
ANR	4808507	AndExpression	( 0 >= upd -> int_a [ IA_BEG_IX ] . size ) && ( 0 < upd -> int_a [ IA_BEG_DY ] . size )		4807813	0		&&			
ANR	4808508	RelationalExpression	0 >= upd -> int_a [ IA_BEG_IX ] . size		4807813	0		>=			
ANR	4808509	PrimaryExpression	0		4807813	0					
ANR	4808510	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		4807813	1					
ANR	4808511	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		4807813	0					
ANR	4808512	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808513	Identifier	upd		4807813	0					
ANR	4808514	Identifier	int_a		4807813	1					
ANR	4808515	Identifier	IA_BEG_IX		4807813	1					
ANR	4808516	Identifier	size		4807813	1					
ANR	4808517	RelationalExpression	0 < upd -> int_a [ IA_BEG_DY ] . size		4807813	1		<			
ANR	4808518	PrimaryExpression	0		4807813	0					
ANR	4808519	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4808520	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4808521	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808522	Identifier	upd		4807813	0					
ANR	4808523	Identifier	int_a		4807813	1					
ANR	4808524	Identifier	IA_BEG_DY		4807813	1					
ANR	4808525	Identifier	size		4807813	1					
ANR	4808526	CompoundStatement		97:9:3396:3408	4807813	1					
ANR	4808527	IdentifierDeclStatement	"int ix , i , * ip ;"	4224:9:155112:155124	4807813	0	True				
ANR	4808528	IdentifierDecl	ix		4807813	0					
ANR	4808529	IdentifierDeclType	int		4807813	0					
ANR	4808530	Identifier	ix		4807813	1					
ANR	4808531	IdentifierDecl	i		4807813	1					
ANR	4808532	IdentifierDeclType	int		4807813	0					
ANR	4808533	Identifier	i		4807813	1					
ANR	4808534	IdentifierDecl	* ip		4807813	2					
ANR	4808535	IdentifierDeclType	int *		4807813	0					
ANR	4808536	Identifier	ip		4807813	1					
ANR	4808537	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_BEG_IX ] )"	4225:9:155135:155188	4807813	1	True				
ANR	4808538	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_BEG_IX ] )"		4807813	0					
ANR	4808539	Callee	UPD_MM_DEL_PARAM		4807813	0					
ANR	4808540	Identifier	UPD_MM_DEL_PARAM		4807813	0					
ANR	4808541	ArgumentList	udev -> memory		4807813	1					
ANR	4808542	Argument	udev -> memory		4807813	0					
ANR	4808543	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808544	Identifier	udev		4807813	0					
ANR	4808545	Identifier	memory		4807813	1					
ANR	4808546	Argument	upd -> int_a [ IA_BEG_IX ]		4807813	1					
ANR	4808547	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		4807813	0					
ANR	4808548	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808549	Identifier	upd		4807813	0					
ANR	4808550	Identifier	int_a		4807813	1					
ANR	4808551	Identifier	IA_BEG_IX		4807813	1					
ANR	4808552	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_BEG_DY ] . size )"	4226:9:155199:155260	4807813	2	True				
ANR	4808553	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_BEG_DY ] . size )"		4807813	0					
ANR	4808554	Callee	UPD_MM_GET_ARRAY		4807813	0					
ANR	4808555	Identifier	UPD_MM_GET_ARRAY		4807813	0					
ANR	4808556	ArgumentList	udev -> memory		4807813	1					
ANR	4808557	Argument	udev -> memory		4807813	0					
ANR	4808558	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808559	Identifier	udev		4807813	0					
ANR	4808560	Identifier	memory		4807813	1					
ANR	4808561	Argument	ip		4807813	1					
ANR	4808562	Identifier	ip		4807813	0					
ANR	4808563	Argument	upd -> int_a [ IA_BEG_DY ] . size		4807813	2					
ANR	4808564	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	0					
ANR	4808565	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4808566	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808567	Identifier	upd		4807813	0					
ANR	4808568	Identifier	int_a		4807813	1					
ANR	4808569	Identifier	IA_BEG_DY		4807813	1					
ANR	4808570	Identifier	size		4807813	1					
ANR	4808571	ExpressionStatement	upd -> int_a [ IA_BEG_IX ] . data = ip	4227:9:155271:155302	4807813	3	True				
ANR	4808572	AssignmentExpression	upd -> int_a [ IA_BEG_IX ] . data = ip		4807813	0		=			
ANR	4808573	MemberAccess	upd -> int_a [ IA_BEG_IX ] . data		4807813	0					
ANR	4808574	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		4807813	0					
ANR	4808575	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808576	Identifier	upd		4807813	0					
ANR	4808577	Identifier	int_a		4807813	1					
ANR	4808578	Identifier	IA_BEG_IX		4807813	1					
ANR	4808579	Identifier	data		4807813	1					
ANR	4808580	Identifier	ip		4807813	1					
ANR	4808581	ExpressionStatement	upd -> int_a [ IA_BEG_IX ] . size = upd -> int_a [ IA_BEG_DY ] . size	4228:9:155313:155368	4807813	4	True				
ANR	4808582	AssignmentExpression	upd -> int_a [ IA_BEG_IX ] . size = upd -> int_a [ IA_BEG_DY ] . size		4807813	0		=			
ANR	4808583	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		4807813	0					
ANR	4808584	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		4807813	0					
ANR	4808585	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808586	Identifier	upd		4807813	0					
ANR	4808587	Identifier	int_a		4807813	1					
ANR	4808588	Identifier	IA_BEG_IX		4807813	1					
ANR	4808589	Identifier	size		4807813	1					
ANR	4808590	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4808591	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4808592	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808593	Identifier	upd		4807813	0					
ANR	4808594	Identifier	int_a		4807813	1					
ANR	4808595	Identifier	IA_BEG_DY		4807813	1					
ANR	4808596	Identifier	size		4807813	1					
ANR	4808597	ForStatement	"for ( i = 0 , ix = 0 ; i < upd -> int_a [ IA_BEG_IX ] . size ; ++ i )"		4807813	5					
ANR	4808598	ForInit	"i = 0 , ix = 0 ;"	4230:13:155384:155397	4807813	0	True				
ANR	4808599	Expression	"i = 0 , ix = 0"		4807813	0					
ANR	4808600	AssignmentExpression	i = 0		4807813	0		=			
ANR	4808601	Identifier	i		4807813	0					
ANR	4808602	PrimaryExpression	0		4807813	1					
ANR	4808603	AssignmentExpression	ix = 0		4807813	1		=			
ANR	4808604	Identifier	ix		4807813	0					
ANR	4808605	PrimaryExpression	0		4807813	1					
ANR	4808606	Condition	i < upd -> int_a [ IA_BEG_IX ] . size	4230:28:155399:155428	4807813	1	True				
ANR	4808607	RelationalExpression	i < upd -> int_a [ IA_BEG_IX ] . size		4807813	0		<			
ANR	4808608	Identifier	i		4807813	0					
ANR	4808609	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		4807813	1					
ANR	4808610	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		4807813	0					
ANR	4808611	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808612	Identifier	upd		4807813	0					
ANR	4808613	Identifier	int_a		4807813	1					
ANR	4808614	Identifier	IA_BEG_IX		4807813	1					
ANR	4808615	Identifier	size		4807813	1					
ANR	4808616	UnaryExpression	++ i	4230:60:155431:155433	4807813	2	True				
ANR	4808617	IncDec	++		4807813	0					
ANR	4808618	Identifier	i		4807813	1					
ANR	4808619	CompoundStatement		103:65:3720:3720	4807813	3					
ANR	4808620	ExpressionStatement	* ip ++ = ix ++	4231:12:155450:155462	4807813	0	True				
ANR	4808621	AssignmentExpression	* ip ++ = ix ++		4807813	0		=			
ANR	4808622	UnaryOperationExpression	* ip ++		4807813	0					
ANR	4808623	UnaryOperator	*		4807813	0					
ANR	4808624	PostIncDecOperationExpression	ip ++		4807813	1					
ANR	4808625	Identifier	ip		4807813	0					
ANR	4808626	IncDec	++		4807813	1					
ANR	4808627	PostIncDecOperationExpression	ix ++		4807813	1					
ANR	4808628	Identifier	ix		4807813	0					
ANR	4808629	IncDec	++		4807813	1					
ANR	4808630	IfStatement	if ( ix == upd -> ints [ I_NXPASS ] )		4807813	1					
ANR	4808631	Condition	ix == upd -> ints [ I_NXPASS ]	4232:15:155479:155503	4807813	0	True				
ANR	4808632	EqualityExpression	ix == upd -> ints [ I_NXPASS ]		4807813	0		==			
ANR	4808633	Identifier	ix		4807813	0					
ANR	4808634	ArrayIndexing	upd -> ints [ I_NXPASS ]		4807813	1					
ANR	4808635	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808636	Identifier	upd		4807813	0					
ANR	4808637	Identifier	ints		4807813	1					
ANR	4808638	Identifier	I_NXPASS		4807813	1					
ANR	4808639	ExpressionStatement	ix = 0	4232:42:155506:155512	4807813	1	True				
ANR	4808640	AssignmentExpression	ix = 0		4807813	0		=			
ANR	4808641	Identifier	ix		4807813	0					
ANR	4808642	PrimaryExpression	0		4807813	1					
ANR	4808643	IfStatement	if ( ( 0 >= upd -> int_a [ IA_END_IX ] . size ) && ( 0 < upd -> int_a [ IA_END_DY ] . size ) )		4807813	10					
ANR	4808644	Condition	( 0 >= upd -> int_a [ IA_END_IX ] . size ) && ( 0 < upd -> int_a [ IA_END_DY ] . size )	4236:9:155543:155621	4807813	0	True				
ANR	4808645	AndExpression	( 0 >= upd -> int_a [ IA_END_IX ] . size ) && ( 0 < upd -> int_a [ IA_END_DY ] . size )		4807813	0		&&			
ANR	4808646	RelationalExpression	0 >= upd -> int_a [ IA_END_IX ] . size		4807813	0		>=			
ANR	4808647	PrimaryExpression	0		4807813	0					
ANR	4808648	MemberAccess	upd -> int_a [ IA_END_IX ] . size		4807813	1					
ANR	4808649	ArrayIndexing	upd -> int_a [ IA_END_IX ]		4807813	0					
ANR	4808650	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808651	Identifier	upd		4807813	0					
ANR	4808652	Identifier	int_a		4807813	1					
ANR	4808653	Identifier	IA_END_IX		4807813	1					
ANR	4808654	Identifier	size		4807813	1					
ANR	4808655	RelationalExpression	0 < upd -> int_a [ IA_END_DY ] . size		4807813	1		<			
ANR	4808656	PrimaryExpression	0		4807813	0					
ANR	4808657	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	1					
ANR	4808658	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4808659	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808660	Identifier	upd		4807813	0					
ANR	4808661	Identifier	int_a		4807813	1					
ANR	4808662	Identifier	IA_END_DY		4807813	1					
ANR	4808663	Identifier	size		4807813	1					
ANR	4808664	CompoundStatement		111:9:3922:3934	4807813	1					
ANR	4808665	IdentifierDeclStatement	"int ix , i , * ip ;"	4238:9:155638:155650	4807813	0	True				
ANR	4808666	IdentifierDecl	ix		4807813	0					
ANR	4808667	IdentifierDeclType	int		4807813	0					
ANR	4808668	Identifier	ix		4807813	1					
ANR	4808669	IdentifierDecl	i		4807813	1					
ANR	4808670	IdentifierDeclType	int		4807813	0					
ANR	4808671	Identifier	i		4807813	1					
ANR	4808672	IdentifierDecl	* ip		4807813	2					
ANR	4808673	IdentifierDeclType	int *		4807813	0					
ANR	4808674	Identifier	ip		4807813	1					
ANR	4808675	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_END_IX ] )"	4239:9:155661:155714	4807813	1	True				
ANR	4808676	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_END_IX ] )"		4807813	0					
ANR	4808677	Callee	UPD_MM_DEL_PARAM		4807813	0					
ANR	4808678	Identifier	UPD_MM_DEL_PARAM		4807813	0					
ANR	4808679	ArgumentList	udev -> memory		4807813	1					
ANR	4808680	Argument	udev -> memory		4807813	0					
ANR	4808681	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808682	Identifier	udev		4807813	0					
ANR	4808683	Identifier	memory		4807813	1					
ANR	4808684	Argument	upd -> int_a [ IA_END_IX ]		4807813	1					
ANR	4808685	ArrayIndexing	upd -> int_a [ IA_END_IX ]		4807813	0					
ANR	4808686	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808687	Identifier	upd		4807813	0					
ANR	4808688	Identifier	int_a		4807813	1					
ANR	4808689	Identifier	IA_END_IX		4807813	1					
ANR	4808690	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_END_DY ] . size )"	4240:9:155725:155786	4807813	2	True				
ANR	4808691	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ip , upd -> int_a [ IA_END_DY ] . size )"		4807813	0					
ANR	4808692	Callee	UPD_MM_GET_ARRAY		4807813	0					
ANR	4808693	Identifier	UPD_MM_GET_ARRAY		4807813	0					
ANR	4808694	ArgumentList	udev -> memory		4807813	1					
ANR	4808695	Argument	udev -> memory		4807813	0					
ANR	4808696	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808697	Identifier	udev		4807813	0					
ANR	4808698	Identifier	memory		4807813	1					
ANR	4808699	Argument	ip		4807813	1					
ANR	4808700	Identifier	ip		4807813	0					
ANR	4808701	Argument	upd -> int_a [ IA_END_DY ] . size		4807813	2					
ANR	4808702	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	0					
ANR	4808703	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4808704	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808705	Identifier	upd		4807813	0					
ANR	4808706	Identifier	int_a		4807813	1					
ANR	4808707	Identifier	IA_END_DY		4807813	1					
ANR	4808708	Identifier	size		4807813	1					
ANR	4808709	ExpressionStatement	upd -> int_a [ IA_END_IX ] . data = ip	4241:9:155797:155828	4807813	3	True				
ANR	4808710	AssignmentExpression	upd -> int_a [ IA_END_IX ] . data = ip		4807813	0		=			
ANR	4808711	MemberAccess	upd -> int_a [ IA_END_IX ] . data		4807813	0					
ANR	4808712	ArrayIndexing	upd -> int_a [ IA_END_IX ]		4807813	0					
ANR	4808713	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808714	Identifier	upd		4807813	0					
ANR	4808715	Identifier	int_a		4807813	1					
ANR	4808716	Identifier	IA_END_IX		4807813	1					
ANR	4808717	Identifier	data		4807813	1					
ANR	4808718	Identifier	ip		4807813	1					
ANR	4808719	ExpressionStatement	upd -> int_a [ IA_END_IX ] . size = upd -> int_a [ IA_END_DY ] . size	4242:9:155839:155894	4807813	4	True				
ANR	4808720	AssignmentExpression	upd -> int_a [ IA_END_IX ] . size = upd -> int_a [ IA_END_DY ] . size		4807813	0		=			
ANR	4808721	MemberAccess	upd -> int_a [ IA_END_IX ] . size		4807813	0					
ANR	4808722	ArrayIndexing	upd -> int_a [ IA_END_IX ]		4807813	0					
ANR	4808723	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808724	Identifier	upd		4807813	0					
ANR	4808725	Identifier	int_a		4807813	1					
ANR	4808726	Identifier	IA_END_IX		4807813	1					
ANR	4808727	Identifier	size		4807813	1					
ANR	4808728	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	1					
ANR	4808729	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4808730	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808731	Identifier	upd		4807813	0					
ANR	4808732	Identifier	int_a		4807813	1					
ANR	4808733	Identifier	IA_END_DY		4807813	1					
ANR	4808734	Identifier	size		4807813	1					
ANR	4808735	ForStatement	"for ( i = 0 , ix = 0 ; i < upd -> int_a [ IA_END_IX ] . size ; ++ i )"		4807813	5					
ANR	4808736	ForInit	"i = 0 , ix = 0 ;"	4244:13:155910:155923	4807813	0	True				
ANR	4808737	Expression	"i = 0 , ix = 0"		4807813	0					
ANR	4808738	AssignmentExpression	i = 0		4807813	0		=			
ANR	4808739	Identifier	i		4807813	0					
ANR	4808740	PrimaryExpression	0		4807813	1					
ANR	4808741	AssignmentExpression	ix = 0		4807813	1		=			
ANR	4808742	Identifier	ix		4807813	0					
ANR	4808743	PrimaryExpression	0		4807813	1					
ANR	4808744	Condition	i < upd -> int_a [ IA_END_IX ] . size	4244:28:155925:155954	4807813	1	True				
ANR	4808745	RelationalExpression	i < upd -> int_a [ IA_END_IX ] . size		4807813	0		<			
ANR	4808746	Identifier	i		4807813	0					
ANR	4808747	MemberAccess	upd -> int_a [ IA_END_IX ] . size		4807813	1					
ANR	4808748	ArrayIndexing	upd -> int_a [ IA_END_IX ]		4807813	0					
ANR	4808749	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808750	Identifier	upd		4807813	0					
ANR	4808751	Identifier	int_a		4807813	1					
ANR	4808752	Identifier	IA_END_IX		4807813	1					
ANR	4808753	Identifier	size		4807813	1					
ANR	4808754	UnaryExpression	++ i	4244:60:155957:155959	4807813	2	True				
ANR	4808755	IncDec	++		4807813	0					
ANR	4808756	Identifier	i		4807813	1					
ANR	4808757	CompoundStatement		117:65:4246:4246	4807813	3					
ANR	4808758	ExpressionStatement	* ip ++ = ix ++	4245:12:155976:155988	4807813	0	True				
ANR	4808759	AssignmentExpression	* ip ++ = ix ++		4807813	0		=			
ANR	4808760	UnaryOperationExpression	* ip ++		4807813	0					
ANR	4808761	UnaryOperator	*		4807813	0					
ANR	4808762	PostIncDecOperationExpression	ip ++		4807813	1					
ANR	4808763	Identifier	ip		4807813	0					
ANR	4808764	IncDec	++		4807813	1					
ANR	4808765	PostIncDecOperationExpression	ix ++		4807813	1					
ANR	4808766	Identifier	ix		4807813	0					
ANR	4808767	IncDec	++		4807813	1					
ANR	4808768	IfStatement	if ( ix == upd -> ints [ I_NXPASS ] )		4807813	1					
ANR	4808769	Condition	ix == upd -> ints [ I_NXPASS ]	4246:15:156005:156029	4807813	0	True				
ANR	4808770	EqualityExpression	ix == upd -> ints [ I_NXPASS ]		4807813	0		==			
ANR	4808771	Identifier	ix		4807813	0					
ANR	4808772	ArrayIndexing	upd -> ints [ I_NXPASS ]		4807813	1					
ANR	4808773	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808774	Identifier	upd		4807813	0					
ANR	4808775	Identifier	ints		4807813	1					
ANR	4808776	Identifier	I_NXPASS		4807813	1					
ANR	4808777	ExpressionStatement	ix = 0	4246:42:156032:156038	4807813	1	True				
ANR	4808778	AssignmentExpression	ix = 0		4807813	0		=			
ANR	4808779	Identifier	ix		4807813	0					
ANR	4808780	PrimaryExpression	0		4807813	1					
ANR	4808781	IfStatement	if ( upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size )		4807813	14					
ANR	4808782	Condition	upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size	4251:6:156071:156117	4807813	0	True				
ANR	4808783	RelationalExpression	upd -> ints [ I_NPASS ] > upd -> int_a [ IA_STD_DY ] . size		4807813	0		>			
ANR	4808784	ArrayIndexing	upd -> ints [ I_NPASS ]		4807813	0					
ANR	4808785	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808786	Identifier	upd		4807813	0					
ANR	4808787	Identifier	ints		4807813	1					
ANR	4808788	Identifier	I_NPASS		4807813	1					
ANR	4808789	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4807813	1					
ANR	4808790	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808791	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808792	Identifier	upd		4807813	0					
ANR	4808793	Identifier	int_a		4807813	1					
ANR	4808794	Identifier	IA_STD_DY		4807813	1					
ANR	4808795	Identifier	size		4807813	1					
ANR	4808796	CompoundStatement		124:55:4404:4404	4807813	1					
ANR	4808797	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d normal Feeds\\n"" , ( int ) upd -> int_a [ IA_STD_DY ] . size , upd -> ints [ I_NPASS ] )"	4253:6:156161:156310	4807813	0	True				
ANR	4808798	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d normal Feeds\\n"" , ( int ) upd -> int_a [ IA_STD_DY ] . size , upd -> ints [ I_NPASS ] )"		4807813	0					
ANR	4808799	Callee	errprintf		4807813	0					
ANR	4808800	Identifier	errprintf		4807813	0					
ANR	4808801	ArgumentList	udev -> memory		4807813	1					
ANR	4808802	Argument	udev -> memory		4807813	0					
ANR	4808803	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808804	Identifier	udev		4807813	0					
ANR	4808805	Identifier	memory		4807813	1					
ANR	4808806	Argument	"""upd_open_writer: Only %d instead of %d normal Feeds\\n"""		4807813	1					
ANR	4808807	PrimaryExpression	"""upd_open_writer: Only %d instead of %d normal Feeds\\n"""		4807813	0					
ANR	4808808	Argument	( int ) upd -> int_a [ IA_STD_DY ] . size		4807813	2					
ANR	4808809	CastExpression	( int ) upd -> int_a [ IA_STD_DY ] . size		4807813	0					
ANR	4808810	CastTarget	int		4807813	0					
ANR	4808811	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4807813	1					
ANR	4808812	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808813	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808814	Identifier	upd		4807813	0					
ANR	4808815	Identifier	int_a		4807813	1					
ANR	4808816	Identifier	IA_STD_DY		4807813	1					
ANR	4808817	Identifier	size		4807813	1					
ANR	4808818	Argument	upd -> ints [ I_NPASS ]		4807813	3					
ANR	4808819	ArrayIndexing	upd -> ints [ I_NPASS ]		4807813	0					
ANR	4808820	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808821	Identifier	upd		4807813	0					
ANR	4808822	Identifier	ints		4807813	1					
ANR	4808823	Identifier	I_NPASS		4807813	1					
ANR	4808824	ExpressionStatement	success = false	4257:6:156325:156340	4807813	1	True				
ANR	4808825	AssignmentExpression	success = false		4807813	0		=			
ANR	4808826	Identifier	success		4807813	0					
ANR	4808827	Identifier	false		4807813	1					
ANR	4808828	ElseStatement	else		4807813	0					
ANR	4808829	IfStatement	if ( upd -> int_a [ IA_STD_IX ] . size < upd -> int_a [ IA_STD_DY ] . size )		4807813	0					
ANR	4808830	Condition	upd -> int_a [ IA_STD_IX ] . size < upd -> int_a [ IA_STD_DY ] . size	4259:13:156356:156410	4807813	0	True				
ANR	4808831	RelationalExpression	upd -> int_a [ IA_STD_IX ] . size < upd -> int_a [ IA_STD_DY ] . size		4807813	0		<			
ANR	4808832	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		4807813	0					
ANR	4808833	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		4807813	0					
ANR	4808834	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808835	Identifier	upd		4807813	0					
ANR	4808836	Identifier	int_a		4807813	1					
ANR	4808837	Identifier	IA_STD_IX		4807813	1					
ANR	4808838	Identifier	size		4807813	1					
ANR	4808839	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4807813	1					
ANR	4808840	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808841	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808842	Identifier	upd		4807813	0					
ANR	4808843	Identifier	int_a		4807813	1					
ANR	4808844	Identifier	IA_STD_DY		4807813	1					
ANR	4808845	Identifier	size		4807813	1					
ANR	4808846	CompoundStatement		132:70:4697:4697	4807813	1					
ANR	4808847	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d normal Xstarts\\n"" , ( int ) upd -> int_a [ IA_STD_IX ] . size , ( int ) upd -> int_a [ IA_STD_DY ] . size )"	4261:6:156454:156628	4807813	0	True				
ANR	4808848	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d normal Xstarts\\n"" , ( int ) upd -> int_a [ IA_STD_IX ] . size , ( int ) upd -> int_a [ IA_STD_DY ] . size )"		4807813	0					
ANR	4808849	Callee	errprintf		4807813	0					
ANR	4808850	Identifier	errprintf		4807813	0					
ANR	4808851	ArgumentList	udev -> memory		4807813	1					
ANR	4808852	Argument	udev -> memory		4807813	0					
ANR	4808853	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808854	Identifier	udev		4807813	0					
ANR	4808855	Identifier	memory		4807813	1					
ANR	4808856	Argument	"""upd_open_writer: Only %d instead of %d normal Xstarts\\n"""		4807813	1					
ANR	4808857	PrimaryExpression	"""upd_open_writer: Only %d instead of %d normal Xstarts\\n"""		4807813	0					
ANR	4808858	Argument	( int ) upd -> int_a [ IA_STD_IX ] . size		4807813	2					
ANR	4808859	CastExpression	( int ) upd -> int_a [ IA_STD_IX ] . size		4807813	0					
ANR	4808860	CastTarget	int		4807813	0					
ANR	4808861	MemberAccess	upd -> int_a [ IA_STD_IX ] . size		4807813	1					
ANR	4808862	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		4807813	0					
ANR	4808863	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808864	Identifier	upd		4807813	0					
ANR	4808865	Identifier	int_a		4807813	1					
ANR	4808866	Identifier	IA_STD_IX		4807813	1					
ANR	4808867	Identifier	size		4807813	1					
ANR	4808868	Argument	( int ) upd -> int_a [ IA_STD_DY ] . size		4807813	3					
ANR	4808869	CastExpression	( int ) upd -> int_a [ IA_STD_DY ] . size		4807813	0					
ANR	4808870	CastTarget	int		4807813	0					
ANR	4808871	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4807813	1					
ANR	4808872	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808873	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808874	Identifier	upd		4807813	0					
ANR	4808875	Identifier	int_a		4807813	1					
ANR	4808876	Identifier	IA_STD_DY		4807813	1					
ANR	4808877	Identifier	size		4807813	1					
ANR	4808878	ExpressionStatement	success = false	4266:6:156643:156658	4807813	1	True				
ANR	4808879	AssignmentExpression	success = false		4807813	0		=			
ANR	4808880	Identifier	success		4807813	0					
ANR	4808881	Identifier	false		4807813	1					
ANR	4808882	IfStatement	if ( success )		4807813	15					
ANR	4808883	Condition	success	4272:6:156787:156793	4807813	0	True				
ANR	4808884	Identifier	success		4807813	0					
ANR	4808885	CompoundStatement		146:6:5088:5101	4807813	1					
ANR	4808886	IdentifierDeclStatement	"int i , sum = 0 ;"	4273:6:156804:156817	4807813	0	True				
ANR	4808887	IdentifierDecl	i		4807813	0					
ANR	4808888	IdentifierDeclType	int		4807813	0					
ANR	4808889	Identifier	i		4807813	1					
ANR	4808890	IdentifierDecl	sum = 0		4807813	1					
ANR	4808891	IdentifierDeclType	int		4807813	0					
ANR	4808892	Identifier	sum		4807813	1					
ANR	4808893	AssignmentExpression	sum = 0		4807813	2		=			
ANR	4808894	Identifier	sum		4807813	0					
ANR	4808895	PrimaryExpression	0		4807813	1					
ANR	4808896	ForStatement	for ( i = 0 ; upd -> ints [ I_NPASS ] > i ; ++ i )		4807813	1					
ANR	4808897	ForInit	i = 0 ;	4274:10:156829:156834	4807813	0	True				
ANR	4808898	AssignmentExpression	i = 0		4807813	0		=			
ANR	4808899	Identifier	i		4807813	0					
ANR	4808900	PrimaryExpression	0		4807813	1					
ANR	4808901	Condition	upd -> ints [ I_NPASS ] > i	4274:17:156836:156857	4807813	1	True				
ANR	4808902	RelationalExpression	upd -> ints [ I_NPASS ] > i		4807813	0		>			
ANR	4808903	ArrayIndexing	upd -> ints [ I_NPASS ]		4807813	0					
ANR	4808904	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808905	Identifier	upd		4807813	0					
ANR	4808906	Identifier	ints		4807813	1					
ANR	4808907	Identifier	I_NPASS		4807813	1					
ANR	4808908	Identifier	i		4807813	1					
ANR	4808909	UnaryExpression	++ i	4274:41:156860:156862	4807813	2	True				
ANR	4808910	IncDec	++		4807813	0					
ANR	4808911	Identifier	i		4807813	1					
ANR	4808912	ExpressionStatement	sum += upd -> int_a [ IA_STD_DY ] . data [ i ]	4275:9:156874:156910	4807813	3	True				
ANR	4808913	AssignmentExpression	sum += upd -> int_a [ IA_STD_DY ] . data [ i ]		4807813	0		+=			
ANR	4808914	Identifier	sum		4807813	0					
ANR	4808915	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ i ]		4807813	1					
ANR	4808916	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		4807813	0					
ANR	4808917	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4807813	0					
ANR	4808918	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808919	Identifier	upd		4807813	0					
ANR	4808920	Identifier	int_a		4807813	1					
ANR	4808921	Identifier	IA_STD_DY		4807813	1					
ANR	4808922	Identifier	data		4807813	1					
ANR	4808923	Identifier	i		4807813	1					
ANR	4808924	IfStatement	if ( ( upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] ) != sum )		4807813	2					
ANR	4808925	Condition	( upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] ) != sum	4276:9:156921:156972	4807813	0	True				
ANR	4808926	EqualityExpression	( upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] ) != sum		4807813	0		!=			
ANR	4808927	MultiplicativeExpression	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ]		4807813	0		*			
ANR	4808928	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	0					
ANR	4808929	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808930	Identifier	upd		4807813	0					
ANR	4808931	Identifier	ints		4807813	1					
ANR	4808932	Identifier	I_NYPASS		4807813	1					
ANR	4808933	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4807813	1					
ANR	4808934	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808935	Identifier	upd		4807813	0					
ANR	4808936	Identifier	ints		4807813	1					
ANR	4808937	Identifier	I_PINS2WRITE		4807813	1					
ANR	4808938	Identifier	sum		4807813	1					
ANR	4808939	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Sum of normal Feeds is %d rather than %d\\n"" , sum , upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] )"	4277:9:156984:157137	4807813	1	True				
ANR	4808940	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Sum of normal Feeds is %d rather than %d\\n"" , sum , upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ] )"		4807813	0					
ANR	4808941	Callee	errprintf		4807813	0					
ANR	4808942	Identifier	errprintf		4807813	0					
ANR	4808943	ArgumentList	udev -> memory		4807813	1					
ANR	4808944	Argument	udev -> memory		4807813	0					
ANR	4808945	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808946	Identifier	udev		4807813	0					
ANR	4808947	Identifier	memory		4807813	1					
ANR	4808948	Argument	"""upd_open_writer: Sum of normal Feeds is %d rather than %d\\n"""		4807813	1					
ANR	4808949	PrimaryExpression	"""upd_open_writer: Sum of normal Feeds is %d rather than %d\\n"""		4807813	0					
ANR	4808950	Argument	sum		4807813	2					
ANR	4808951	Identifier	sum		4807813	0					
ANR	4808952	Argument	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ]		4807813	3					
ANR	4808953	MultiplicativeExpression	upd -> ints [ I_NYPASS ] * upd -> ints [ I_PINS2WRITE ]		4807813	0		*			
ANR	4808954	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	0					
ANR	4808955	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808956	Identifier	upd		4807813	0					
ANR	4808957	Identifier	ints		4807813	1					
ANR	4808958	Identifier	I_NYPASS		4807813	1					
ANR	4808959	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4807813	1					
ANR	4808960	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4808961	Identifier	upd		4807813	0					
ANR	4808962	Identifier	ints		4807813	1					
ANR	4808963	Identifier	I_PINS2WRITE		4807813	1					
ANR	4808964	IfStatement	if ( upd -> int_a [ IA_BEG_IX ] . size < upd -> int_a [ IA_BEG_DY ] . size )		4807813	16					
ANR	4808965	Condition	upd -> int_a [ IA_BEG_IX ] . size < upd -> int_a [ IA_BEG_DY ] . size	4283:6:157158:157212	4807813	0	True				
ANR	4808966	RelationalExpression	upd -> int_a [ IA_BEG_IX ] . size < upd -> int_a [ IA_BEG_DY ] . size		4807813	0		<			
ANR	4808967	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		4807813	0					
ANR	4808968	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		4807813	0					
ANR	4808969	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808970	Identifier	upd		4807813	0					
ANR	4808971	Identifier	int_a		4807813	1					
ANR	4808972	Identifier	IA_BEG_IX		4807813	1					
ANR	4808973	Identifier	size		4807813	1					
ANR	4808974	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4808975	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4808976	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808977	Identifier	upd		4807813	0					
ANR	4808978	Identifier	int_a		4807813	1					
ANR	4808979	Identifier	IA_BEG_DY		4807813	1					
ANR	4808980	Identifier	size		4807813	1					
ANR	4808981	CompoundStatement		156:63:5499:5499	4807813	1					
ANR	4808982	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d initial Xstarts\\n"" , ( int ) upd -> int_a [ IA_BEG_IX ] . size , ( int ) upd -> int_a [ IA_BEG_DY ] . size )"	4285:6:157256:157431	4807813	0	True				
ANR	4808983	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d initial Xstarts\\n"" , ( int ) upd -> int_a [ IA_BEG_IX ] . size , ( int ) upd -> int_a [ IA_BEG_DY ] . size )"		4807813	0					
ANR	4808984	Callee	errprintf		4807813	0					
ANR	4808985	Identifier	errprintf		4807813	0					
ANR	4808986	ArgumentList	udev -> memory		4807813	1					
ANR	4808987	Argument	udev -> memory		4807813	0					
ANR	4808988	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4808989	Identifier	udev		4807813	0					
ANR	4808990	Identifier	memory		4807813	1					
ANR	4808991	Argument	"""upd_open_writer: Only %d instead of %d initial Xstarts\\n"""		4807813	1					
ANR	4808992	PrimaryExpression	"""upd_open_writer: Only %d instead of %d initial Xstarts\\n"""		4807813	0					
ANR	4808993	Argument	( int ) upd -> int_a [ IA_BEG_IX ] . size		4807813	2					
ANR	4808994	CastExpression	( int ) upd -> int_a [ IA_BEG_IX ] . size		4807813	0					
ANR	4808995	CastTarget	int		4807813	0					
ANR	4808996	MemberAccess	upd -> int_a [ IA_BEG_IX ] . size		4807813	1					
ANR	4808997	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		4807813	0					
ANR	4808998	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4808999	Identifier	upd		4807813	0					
ANR	4809000	Identifier	int_a		4807813	1					
ANR	4809001	Identifier	IA_BEG_IX		4807813	1					
ANR	4809002	Identifier	size		4807813	1					
ANR	4809003	Argument	( int ) upd -> int_a [ IA_BEG_DY ] . size		4807813	3					
ANR	4809004	CastExpression	( int ) upd -> int_a [ IA_BEG_DY ] . size		4807813	0					
ANR	4809005	CastTarget	int		4807813	0					
ANR	4809006	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4809007	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4809008	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809009	Identifier	upd		4807813	0					
ANR	4809010	Identifier	int_a		4807813	1					
ANR	4809011	Identifier	IA_BEG_DY		4807813	1					
ANR	4809012	Identifier	size		4807813	1					
ANR	4809013	ExpressionStatement	success = false	4290:6:157446:157461	4807813	1	True				
ANR	4809014	AssignmentExpression	success = false		4807813	0		=			
ANR	4809015	Identifier	success		4807813	0					
ANR	4809016	Identifier	false		4807813	1					
ANR	4809017	IfStatement	if ( upd -> int_a [ IA_BEGBOT ] . size < upd -> int_a [ IA_BEG_DY ] . size )		4807813	17					
ANR	4809018	Condition	upd -> int_a [ IA_BEGBOT ] . size < upd -> int_a [ IA_BEG_DY ] . size	4293:6:157475:157529	4807813	0	True				
ANR	4809019	RelationalExpression	upd -> int_a [ IA_BEGBOT ] . size < upd -> int_a [ IA_BEG_DY ] . size		4807813	0		<			
ANR	4809020	MemberAccess	upd -> int_a [ IA_BEGBOT ] . size		4807813	0					
ANR	4809021	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		4807813	0					
ANR	4809022	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809023	Identifier	upd		4807813	0					
ANR	4809024	Identifier	int_a		4807813	1					
ANR	4809025	Identifier	IA_BEGBOT		4807813	1					
ANR	4809026	Identifier	size		4807813	1					
ANR	4809027	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4809028	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4809029	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809030	Identifier	upd		4807813	0					
ANR	4809031	Identifier	int_a		4807813	1					
ANR	4809032	Identifier	IA_BEG_DY		4807813	1					
ANR	4809033	Identifier	size		4807813	1					
ANR	4809034	CompoundStatement		166:63:5816:5816	4807813	1					
ANR	4809035	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d initial Pins\\n"" , ( int ) upd -> int_a [ IA_BEGBOT ] . size , ( int ) upd -> int_a [ IA_BEG_DY ] . size )"	4295:6:157573:157745	4807813	0	True				
ANR	4809036	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d initial Pins\\n"" , ( int ) upd -> int_a [ IA_BEGBOT ] . size , ( int ) upd -> int_a [ IA_BEG_DY ] . size )"		4807813	0					
ANR	4809037	Callee	errprintf		4807813	0					
ANR	4809038	Identifier	errprintf		4807813	0					
ANR	4809039	ArgumentList	udev -> memory		4807813	1					
ANR	4809040	Argument	udev -> memory		4807813	0					
ANR	4809041	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809042	Identifier	udev		4807813	0					
ANR	4809043	Identifier	memory		4807813	1					
ANR	4809044	Argument	"""upd_open_writer: Only %d instead of %d initial Pins\\n"""		4807813	1					
ANR	4809045	PrimaryExpression	"""upd_open_writer: Only %d instead of %d initial Pins\\n"""		4807813	0					
ANR	4809046	Argument	( int ) upd -> int_a [ IA_BEGBOT ] . size		4807813	2					
ANR	4809047	CastExpression	( int ) upd -> int_a [ IA_BEGBOT ] . size		4807813	0					
ANR	4809048	CastTarget	int		4807813	0					
ANR	4809049	MemberAccess	upd -> int_a [ IA_BEGBOT ] . size		4807813	1					
ANR	4809050	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		4807813	0					
ANR	4809051	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809052	Identifier	upd		4807813	0					
ANR	4809053	Identifier	int_a		4807813	1					
ANR	4809054	Identifier	IA_BEGBOT		4807813	1					
ANR	4809055	Identifier	size		4807813	1					
ANR	4809056	Argument	( int ) upd -> int_a [ IA_BEG_DY ] . size		4807813	3					
ANR	4809057	CastExpression	( int ) upd -> int_a [ IA_BEG_DY ] . size		4807813	0					
ANR	4809058	CastTarget	int		4807813	0					
ANR	4809059	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4809060	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4809061	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809062	Identifier	upd		4807813	0					
ANR	4809063	Identifier	int_a		4807813	1					
ANR	4809064	Identifier	IA_BEG_DY		4807813	1					
ANR	4809065	Identifier	size		4807813	1					
ANR	4809066	ExpressionStatement	success = false	4300:6:157760:157775	4807813	1	True				
ANR	4809067	AssignmentExpression	success = false		4807813	0		=			
ANR	4809068	Identifier	success		4807813	0					
ANR	4809069	Identifier	false		4807813	1					
ANR	4809070	ElseStatement	else		4807813	0					
ANR	4809071	CompoundStatement		177:6:6081:6086	4807813	0					
ANR	4809072	IdentifierDeclStatement	int i ;	4304:6:157797:157802	4807813	0	True				
ANR	4809073	IdentifierDecl	i		4807813	0					
ANR	4809074	IdentifierDeclType	int		4807813	0					
ANR	4809075	Identifier	i		4807813	1					
ANR	4809076	ForStatement	for ( i = 0 ; i < upd -> int_a [ IA_BEG_DY ] . size ; ++ i )		4807813	1					
ANR	4809077	ForInit	i = 0 ;	4305:10:157814:157819	4807813	0	True				
ANR	4809078	AssignmentExpression	i = 0		4807813	0		=			
ANR	4809079	Identifier	i		4807813	0					
ANR	4809080	PrimaryExpression	0		4807813	1					
ANR	4809081	Condition	i < upd -> int_a [ IA_BEG_DY ] . size	4305:17:157821:157850	4807813	1	True				
ANR	4809082	RelationalExpression	i < upd -> int_a [ IA_BEG_DY ] . size		4807813	0		<			
ANR	4809083	Identifier	i		4807813	0					
ANR	4809084	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4809085	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4809086	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809087	Identifier	upd		4807813	0					
ANR	4809088	Identifier	int_a		4807813	1					
ANR	4809089	Identifier	IA_BEG_DY		4807813	1					
ANR	4809090	Identifier	size		4807813	1					
ANR	4809091	UnaryExpression	++ i	4305:49:157853:157855	4807813	2	True				
ANR	4809092	IncDec	++		4807813	0					
ANR	4809093	Identifier	i		4807813	1					
ANR	4809094	IfStatement	if ( ( upd -> int_a [ IA_BEGBOT ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_BEGBOT ] . data [ i ] < 0 ) )		4807813	3					
ANR	4809095	Condition	( upd -> int_a [ IA_BEGBOT ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_BEGBOT ] . data [ i ] < 0 )	4306:12:157870:157999	4807813	0	True				
ANR	4809096	OrExpression	( upd -> int_a [ IA_BEGBOT ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_BEGBOT ] . data [ i ] < 0 )		4807813	0		||			
ANR	4809097	RelationalExpression	upd -> int_a [ IA_BEGBOT ] . data [ i ] > upd -> ints [ I_PINS2WRITE ]		4807813	0		>			
ANR	4809098	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ i ]		4807813	0					
ANR	4809099	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		4807813	0					
ANR	4809100	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		4807813	0					
ANR	4809101	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809102	Identifier	upd		4807813	0					
ANR	4809103	Identifier	int_a		4807813	1					
ANR	4809104	Identifier	IA_BEGBOT		4807813	1					
ANR	4809105	Identifier	data		4807813	1					
ANR	4809106	Identifier	i		4807813	1					
ANR	4809107	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4807813	1					
ANR	4809108	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809109	Identifier	upd		4807813	0					
ANR	4809110	Identifier	ints		4807813	1					
ANR	4809111	Identifier	I_PINS2WRITE		4807813	1					
ANR	4809112	RelationalExpression	upd -> int_a [ IA_BEGBOT ] . data [ i ] < 0		4807813	1		<			
ANR	4809113	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ i ]		4807813	0					
ANR	4809114	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		4807813	0					
ANR	4809115	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		4807813	0					
ANR	4809116	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809117	Identifier	upd		4807813	0					
ANR	4809118	Identifier	int_a		4807813	1					
ANR	4809119	Identifier	IA_BEGBOT		4807813	1					
ANR	4809120	Identifier	data		4807813	1					
ANR	4809121	Identifier	i		4807813	1					
ANR	4809122	PrimaryExpression	0		4807813	1					
ANR	4809123	BreakStatement	break ;	4307:74:158005:158010	4807813	1	True				
ANR	4809124	IfStatement	if ( i < upd -> int_a [ IA_BEG_DY ] . size )		4807813	2					
ANR	4809125	Condition	i < upd -> int_a [ IA_BEG_DY ] . size	4309:9:158022:158051	4807813	0	True				
ANR	4809126	RelationalExpression	i < upd -> int_a [ IA_BEG_DY ] . size		4807813	0		<			
ANR	4809127	Identifier	i		4807813	0					
ANR	4809128	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	1					
ANR	4809129	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4809130	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809131	Identifier	upd		4807813	0					
ANR	4809132	Identifier	int_a		4807813	1					
ANR	4809133	Identifier	IA_BEG_DY		4807813	1					
ANR	4809134	Identifier	size		4807813	1					
ANR	4809135	CompoundStatement		182:41:6338:6338	4807813	1					
ANR	4809136	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d is invalid initial Pins\\n"" , upd -> int_a [ IA_BEGBOT ] . data [ i ] )"	4311:9:158098:158228	4807813	0	True				
ANR	4809137	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d is invalid initial Pins\\n"" , upd -> int_a [ IA_BEGBOT ] . data [ i ] )"		4807813	0					
ANR	4809138	Callee	errprintf		4807813	0					
ANR	4809139	Identifier	errprintf		4807813	0					
ANR	4809140	ArgumentList	udev -> memory		4807813	1					
ANR	4809141	Argument	udev -> memory		4807813	0					
ANR	4809142	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809143	Identifier	udev		4807813	0					
ANR	4809144	Identifier	memory		4807813	1					
ANR	4809145	Argument	"""upd_open_writer: Only %d is invalid initial Pins\\n"""		4807813	1					
ANR	4809146	PrimaryExpression	"""upd_open_writer: Only %d is invalid initial Pins\\n"""		4807813	0					
ANR	4809147	Argument	upd -> int_a [ IA_BEGBOT ] . data [ i ]		4807813	2					
ANR	4809148	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ i ]		4807813	0					
ANR	4809149	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		4807813	0					
ANR	4809150	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		4807813	0					
ANR	4809151	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809152	Identifier	upd		4807813	0					
ANR	4809153	Identifier	int_a		4807813	1					
ANR	4809154	Identifier	IA_BEGBOT		4807813	1					
ANR	4809155	Identifier	data		4807813	1					
ANR	4809156	Identifier	i		4807813	1					
ANR	4809157	ExpressionStatement	success = false	4315:9:158246:158261	4807813	1	True				
ANR	4809158	AssignmentExpression	success = false		4807813	0		=			
ANR	4809159	Identifier	success		4807813	0					
ANR	4809160	Identifier	false		4807813	1					
ANR	4809161	IfStatement	if ( success )		4807813	18					
ANR	4809162	Condition	success	4322:6:158371:158377	4807813	0	True				
ANR	4809163	Identifier	success		4807813	0					
ANR	4809164	CompoundStatement		196:6:6672:6685	4807813	1					
ANR	4809165	IdentifierDeclStatement	"int i , sum = 0 ;"	4323:6:158388:158401	4807813	0	True				
ANR	4809166	IdentifierDecl	i		4807813	0					
ANR	4809167	IdentifierDeclType	int		4807813	0					
ANR	4809168	Identifier	i		4807813	1					
ANR	4809169	IdentifierDecl	sum = 0		4807813	1					
ANR	4809170	IdentifierDeclType	int		4807813	0					
ANR	4809171	Identifier	sum		4807813	1					
ANR	4809172	AssignmentExpression	sum = 0		4807813	2		=			
ANR	4809173	Identifier	sum		4807813	0					
ANR	4809174	PrimaryExpression	0		4807813	1					
ANR	4809175	ForStatement	for ( i = 0 ; upd -> int_a [ IA_BEG_DY ] . size > i ; ++ i )		4807813	1					
ANR	4809176	ForInit	i = 0 ;	4324:10:158413:158418	4807813	0	True				
ANR	4809177	AssignmentExpression	i = 0		4807813	0		=			
ANR	4809178	Identifier	i		4807813	0					
ANR	4809179	PrimaryExpression	0		4807813	1					
ANR	4809180	Condition	upd -> int_a [ IA_BEG_DY ] . size > i	4324:18:158421:158450	4807813	1	True				
ANR	4809181	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size > i		4807813	0		>			
ANR	4809182	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4807813	0					
ANR	4809183	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4809184	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809185	Identifier	upd		4807813	0					
ANR	4809186	Identifier	int_a		4807813	1					
ANR	4809187	Identifier	IA_BEG_DY		4807813	1					
ANR	4809188	Identifier	size		4807813	1					
ANR	4809189	Identifier	i		4807813	1					
ANR	4809190	UnaryExpression	++ i	4324:50:158453:158455	4807813	2	True				
ANR	4809191	IncDec	++		4807813	0					
ANR	4809192	Identifier	i		4807813	1					
ANR	4809193	ExpressionStatement	sum += upd -> int_a [ IA_BEG_DY ] . data [ i ]	4325:9:158467:158503	4807813	3	True				
ANR	4809194	AssignmentExpression	sum += upd -> int_a [ IA_BEG_DY ] . data [ i ]		4807813	0		+=			
ANR	4809195	Identifier	sum		4807813	0					
ANR	4809196	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ i ]		4807813	1					
ANR	4809197	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		4807813	0					
ANR	4809198	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4807813	0					
ANR	4809199	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809200	Identifier	upd		4807813	0					
ANR	4809201	Identifier	int_a		4807813	1					
ANR	4809202	Identifier	IA_BEG_DY		4807813	1					
ANR	4809203	Identifier	data		4807813	1					
ANR	4809204	Identifier	i		4807813	1					
ANR	4809205	IfStatement	if ( upd -> ints [ I_BEG_Y ] != sum )		4807813	2					
ANR	4809206	Condition	upd -> ints [ I_BEG_Y ] != sum	4326:9:158514:158538	4807813	0	True				
ANR	4809207	EqualityExpression	upd -> ints [ I_BEG_Y ] != sum		4807813	0		!=			
ANR	4809208	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4807813	0					
ANR	4809209	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809210	Identifier	upd		4807813	0					
ANR	4809211	Identifier	ints		4807813	1					
ANR	4809212	Identifier	I_BEG_Y		4807813	1					
ANR	4809213	Identifier	sum		4807813	1					
ANR	4809214	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Sum of initial Feeds is %d rather than %d\\n"" , sum , upd -> ints [ I_BEG_Y ] )"	4327:9:158550:158679	4807813	1	True				
ANR	4809215	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Sum of initial Feeds is %d rather than %d\\n"" , sum , upd -> ints [ I_BEG_Y ] )"		4807813	0					
ANR	4809216	Callee	errprintf		4807813	0					
ANR	4809217	Identifier	errprintf		4807813	0					
ANR	4809218	ArgumentList	udev -> memory		4807813	1					
ANR	4809219	Argument	udev -> memory		4807813	0					
ANR	4809220	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809221	Identifier	udev		4807813	0					
ANR	4809222	Identifier	memory		4807813	1					
ANR	4809223	Argument	"""upd_open_writer: Sum of initial Feeds is %d rather than %d\\n"""		4807813	1					
ANR	4809224	PrimaryExpression	"""upd_open_writer: Sum of initial Feeds is %d rather than %d\\n"""		4807813	0					
ANR	4809225	Argument	sum		4807813	2					
ANR	4809226	Identifier	sum		4807813	0					
ANR	4809227	Argument	upd -> ints [ I_BEG_Y ]		4807813	3					
ANR	4809228	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4807813	0					
ANR	4809229	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809230	Identifier	upd		4807813	0					
ANR	4809231	Identifier	ints		4807813	1					
ANR	4809232	Identifier	I_BEG_Y		4807813	1					
ANR	4809233	IfStatement	if ( upd -> int_a [ IA_END_IX ] . size < upd -> int_a [ IA_END_DY ] . size )		4807813	19					
ANR	4809234	Condition	upd -> int_a [ IA_END_IX ] . size < upd -> int_a [ IA_END_DY ] . size	4333:6:158700:158754	4807813	0	True				
ANR	4809235	RelationalExpression	upd -> int_a [ IA_END_IX ] . size < upd -> int_a [ IA_END_DY ] . size		4807813	0		<			
ANR	4809236	MemberAccess	upd -> int_a [ IA_END_IX ] . size		4807813	0					
ANR	4809237	ArrayIndexing	upd -> int_a [ IA_END_IX ]		4807813	0					
ANR	4809238	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809239	Identifier	upd		4807813	0					
ANR	4809240	Identifier	int_a		4807813	1					
ANR	4809241	Identifier	IA_END_IX		4807813	1					
ANR	4809242	Identifier	size		4807813	1					
ANR	4809243	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	1					
ANR	4809244	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4809245	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809246	Identifier	upd		4807813	0					
ANR	4809247	Identifier	int_a		4807813	1					
ANR	4809248	Identifier	IA_END_DY		4807813	1					
ANR	4809249	Identifier	size		4807813	1					
ANR	4809250	CompoundStatement		206:63:7041:7041	4807813	1					
ANR	4809251	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d final Xstarts\\n"" , ( int ) upd -> int_a [ IA_END_IX ] . size , ( int ) upd -> int_a [ IA_END_DY ] . size )"	4335:6:158798:158971	4807813	0	True				
ANR	4809252	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d final Xstarts\\n"" , ( int ) upd -> int_a [ IA_END_IX ] . size , ( int ) upd -> int_a [ IA_END_DY ] . size )"		4807813	0					
ANR	4809253	Callee	errprintf		4807813	0					
ANR	4809254	Identifier	errprintf		4807813	0					
ANR	4809255	ArgumentList	udev -> memory		4807813	1					
ANR	4809256	Argument	udev -> memory		4807813	0					
ANR	4809257	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809258	Identifier	udev		4807813	0					
ANR	4809259	Identifier	memory		4807813	1					
ANR	4809260	Argument	"""upd_open_writer: Only %d instead of %d final Xstarts\\n"""		4807813	1					
ANR	4809261	PrimaryExpression	"""upd_open_writer: Only %d instead of %d final Xstarts\\n"""		4807813	0					
ANR	4809262	Argument	( int ) upd -> int_a [ IA_END_IX ] . size		4807813	2					
ANR	4809263	CastExpression	( int ) upd -> int_a [ IA_END_IX ] . size		4807813	0					
ANR	4809264	CastTarget	int		4807813	0					
ANR	4809265	MemberAccess	upd -> int_a [ IA_END_IX ] . size		4807813	1					
ANR	4809266	ArrayIndexing	upd -> int_a [ IA_END_IX ]		4807813	0					
ANR	4809267	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809268	Identifier	upd		4807813	0					
ANR	4809269	Identifier	int_a		4807813	1					
ANR	4809270	Identifier	IA_END_IX		4807813	1					
ANR	4809271	Identifier	size		4807813	1					
ANR	4809272	Argument	( int ) upd -> int_a [ IA_END_DY ] . size		4807813	3					
ANR	4809273	CastExpression	( int ) upd -> int_a [ IA_END_DY ] . size		4807813	0					
ANR	4809274	CastTarget	int		4807813	0					
ANR	4809275	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	1					
ANR	4809276	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4809277	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809278	Identifier	upd		4807813	0					
ANR	4809279	Identifier	int_a		4807813	1					
ANR	4809280	Identifier	IA_END_DY		4807813	1					
ANR	4809281	Identifier	size		4807813	1					
ANR	4809282	ExpressionStatement	success = false	4340:6:158986:159001	4807813	1	True				
ANR	4809283	AssignmentExpression	success = false		4807813	0		=			
ANR	4809284	Identifier	success		4807813	0					
ANR	4809285	Identifier	false		4807813	1					
ANR	4809286	IfStatement	if ( upd -> int_a [ IA_ENDTOP ] . size < upd -> int_a [ IA_END_DY ] . size )		4807813	20					
ANR	4809287	Condition	upd -> int_a [ IA_ENDTOP ] . size < upd -> int_a [ IA_END_DY ] . size	4343:6:159015:159069	4807813	0	True				
ANR	4809288	RelationalExpression	upd -> int_a [ IA_ENDTOP ] . size < upd -> int_a [ IA_END_DY ] . size		4807813	0		<			
ANR	4809289	MemberAccess	upd -> int_a [ IA_ENDTOP ] . size		4807813	0					
ANR	4809290	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4807813	0					
ANR	4809291	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809292	Identifier	upd		4807813	0					
ANR	4809293	Identifier	int_a		4807813	1					
ANR	4809294	Identifier	IA_ENDTOP		4807813	1					
ANR	4809295	Identifier	size		4807813	1					
ANR	4809296	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	1					
ANR	4809297	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4809298	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809299	Identifier	upd		4807813	0					
ANR	4809300	Identifier	int_a		4807813	1					
ANR	4809301	Identifier	IA_END_DY		4807813	1					
ANR	4809302	Identifier	size		4807813	1					
ANR	4809303	CompoundStatement		216:63:7356:7356	4807813	1					
ANR	4809304	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d Final Pins\\n"" , ( int ) upd -> int_a [ IA_ENDTOP ] . size , ( int ) upd -> int_a [ IA_END_DY ] . size )"	4345:6:159113:159283	4807813	0	True				
ANR	4809305	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d instead of %d Final Pins\\n"" , ( int ) upd -> int_a [ IA_ENDTOP ] . size , ( int ) upd -> int_a [ IA_END_DY ] . size )"		4807813	0					
ANR	4809306	Callee	errprintf		4807813	0					
ANR	4809307	Identifier	errprintf		4807813	0					
ANR	4809308	ArgumentList	udev -> memory		4807813	1					
ANR	4809309	Argument	udev -> memory		4807813	0					
ANR	4809310	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809311	Identifier	udev		4807813	0					
ANR	4809312	Identifier	memory		4807813	1					
ANR	4809313	Argument	"""upd_open_writer: Only %d instead of %d Final Pins\\n"""		4807813	1					
ANR	4809314	PrimaryExpression	"""upd_open_writer: Only %d instead of %d Final Pins\\n"""		4807813	0					
ANR	4809315	Argument	( int ) upd -> int_a [ IA_ENDTOP ] . size		4807813	2					
ANR	4809316	CastExpression	( int ) upd -> int_a [ IA_ENDTOP ] . size		4807813	0					
ANR	4809317	CastTarget	int		4807813	0					
ANR	4809318	MemberAccess	upd -> int_a [ IA_ENDTOP ] . size		4807813	1					
ANR	4809319	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4807813	0					
ANR	4809320	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809321	Identifier	upd		4807813	0					
ANR	4809322	Identifier	int_a		4807813	1					
ANR	4809323	Identifier	IA_ENDTOP		4807813	1					
ANR	4809324	Identifier	size		4807813	1					
ANR	4809325	Argument	( int ) upd -> int_a [ IA_END_DY ] . size		4807813	3					
ANR	4809326	CastExpression	( int ) upd -> int_a [ IA_END_DY ] . size		4807813	0					
ANR	4809327	CastTarget	int		4807813	0					
ANR	4809328	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	1					
ANR	4809329	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4809330	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809331	Identifier	upd		4807813	0					
ANR	4809332	Identifier	int_a		4807813	1					
ANR	4809333	Identifier	IA_END_DY		4807813	1					
ANR	4809334	Identifier	size		4807813	1					
ANR	4809335	ExpressionStatement	success = false	4350:6:159298:159313	4807813	1	True				
ANR	4809336	AssignmentExpression	success = false		4807813	0		=			
ANR	4809337	Identifier	success		4807813	0					
ANR	4809338	Identifier	false		4807813	1					
ANR	4809339	ElseStatement	else		4807813	0					
ANR	4809340	CompoundStatement		227:6:7619:7624	4807813	0					
ANR	4809341	IdentifierDeclStatement	int i ;	4354:6:159335:159340	4807813	0	True				
ANR	4809342	IdentifierDecl	i		4807813	0					
ANR	4809343	IdentifierDeclType	int		4807813	0					
ANR	4809344	Identifier	i		4807813	1					
ANR	4809345	ForStatement	for ( i = 0 ; i < upd -> int_a [ IA_END_DY ] . size ; ++ i )		4807813	1					
ANR	4809346	ForInit	i = 0 ;	4355:10:159352:159357	4807813	0	True				
ANR	4809347	AssignmentExpression	i = 0		4807813	0		=			
ANR	4809348	Identifier	i		4807813	0					
ANR	4809349	PrimaryExpression	0		4807813	1					
ANR	4809350	Condition	i < upd -> int_a [ IA_END_DY ] . size	4355:17:159359:159388	4807813	1	True				
ANR	4809351	RelationalExpression	i < upd -> int_a [ IA_END_DY ] . size		4807813	0		<			
ANR	4809352	Identifier	i		4807813	0					
ANR	4809353	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	1					
ANR	4809354	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4809355	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809356	Identifier	upd		4807813	0					
ANR	4809357	Identifier	int_a		4807813	1					
ANR	4809358	Identifier	IA_END_DY		4807813	1					
ANR	4809359	Identifier	size		4807813	1					
ANR	4809360	UnaryExpression	++ i	4355:49:159391:159393	4807813	2	True				
ANR	4809361	IncDec	++		4807813	0					
ANR	4809362	Identifier	i		4807813	1					
ANR	4809363	IfStatement	if ( ( upd -> int_a [ IA_ENDTOP ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_ENDTOP ] . data [ i ] < 0 ) )		4807813	3					
ANR	4809364	Condition	( upd -> int_a [ IA_ENDTOP ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_ENDTOP ] . data [ i ] < 0 )	4356:12:159408:159537	4807813	0	True				
ANR	4809365	OrExpression	( upd -> int_a [ IA_ENDTOP ] . data [ i ] > upd -> ints [ I_PINS2WRITE ] ) || ( upd -> int_a [ IA_ENDTOP ] . data [ i ] < 0 )		4807813	0		||			
ANR	4809366	RelationalExpression	upd -> int_a [ IA_ENDTOP ] . data [ i ] > upd -> ints [ I_PINS2WRITE ]		4807813	0		>			
ANR	4809367	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ i ]		4807813	0					
ANR	4809368	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		4807813	0					
ANR	4809369	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4807813	0					
ANR	4809370	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809371	Identifier	upd		4807813	0					
ANR	4809372	Identifier	int_a		4807813	1					
ANR	4809373	Identifier	IA_ENDTOP		4807813	1					
ANR	4809374	Identifier	data		4807813	1					
ANR	4809375	Identifier	i		4807813	1					
ANR	4809376	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4807813	1					
ANR	4809377	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809378	Identifier	upd		4807813	0					
ANR	4809379	Identifier	ints		4807813	1					
ANR	4809380	Identifier	I_PINS2WRITE		4807813	1					
ANR	4809381	RelationalExpression	upd -> int_a [ IA_ENDTOP ] . data [ i ] < 0		4807813	1		<			
ANR	4809382	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ i ]		4807813	0					
ANR	4809383	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		4807813	0					
ANR	4809384	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4807813	0					
ANR	4809385	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809386	Identifier	upd		4807813	0					
ANR	4809387	Identifier	int_a		4807813	1					
ANR	4809388	Identifier	IA_ENDTOP		4807813	1					
ANR	4809389	Identifier	data		4807813	1					
ANR	4809390	Identifier	i		4807813	1					
ANR	4809391	PrimaryExpression	0		4807813	1					
ANR	4809392	BreakStatement	break ;	4357:74:159543:159548	4807813	1	True				
ANR	4809393	IfStatement	if ( i < upd -> int_a [ IA_END_DY ] . size )		4807813	2					
ANR	4809394	Condition	i < upd -> int_a [ IA_END_DY ] . size	4359:9:159560:159589	4807813	0	True				
ANR	4809395	RelationalExpression	i < upd -> int_a [ IA_END_DY ] . size		4807813	0		<			
ANR	4809396	Identifier	i		4807813	0					
ANR	4809397	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4807813	1					
ANR	4809398	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4807813	0					
ANR	4809399	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809400	Identifier	upd		4807813	0					
ANR	4809401	Identifier	int_a		4807813	1					
ANR	4809402	Identifier	IA_END_DY		4807813	1					
ANR	4809403	Identifier	size		4807813	1					
ANR	4809404	CompoundStatement		232:41:7876:7876	4807813	1					
ANR	4809405	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d is invalid initial Pins\\n"" , upd -> int_a [ IA_ENDTOP ] . data [ i ] )"	4361:9:159636:159766	4807813	0	True				
ANR	4809406	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d is invalid initial Pins\\n"" , upd -> int_a [ IA_ENDTOP ] . data [ i ] )"		4807813	0					
ANR	4809407	Callee	errprintf		4807813	0					
ANR	4809408	Identifier	errprintf		4807813	0					
ANR	4809409	ArgumentList	udev -> memory		4807813	1					
ANR	4809410	Argument	udev -> memory		4807813	0					
ANR	4809411	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809412	Identifier	udev		4807813	0					
ANR	4809413	Identifier	memory		4807813	1					
ANR	4809414	Argument	"""upd_open_writer: Only %d is invalid initial Pins\\n"""		4807813	1					
ANR	4809415	PrimaryExpression	"""upd_open_writer: Only %d is invalid initial Pins\\n"""		4807813	0					
ANR	4809416	Argument	upd -> int_a [ IA_ENDTOP ] . data [ i ]		4807813	2					
ANR	4809417	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ i ]		4807813	0					
ANR	4809418	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		4807813	0					
ANR	4809419	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4807813	0					
ANR	4809420	PtrMemberAccess	upd -> int_a		4807813	0					
ANR	4809421	Identifier	upd		4807813	0					
ANR	4809422	Identifier	int_a		4807813	1					
ANR	4809423	Identifier	IA_ENDTOP		4807813	1					
ANR	4809424	Identifier	data		4807813	1					
ANR	4809425	Identifier	i		4807813	1					
ANR	4809426	ExpressionStatement	success = false	4365:9:159784:159799	4807813	1	True				
ANR	4809427	AssignmentExpression	success = false		4807813	0		=			
ANR	4809428	Identifier	success		4807813	0					
ANR	4809429	Identifier	false		4807813	1					
ANR	4809430	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> ocomp > upd -> string_a [ SA_SETCOMP ] . size ) )		4807813	21					
ANR	4809431	Condition	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> ocomp > upd -> string_a [ SA_SETCOMP ] . size )	4370:6:159865:159955	4807813	0	True				
ANR	4809432	AndExpression	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> ocomp > upd -> string_a [ SA_SETCOMP ] . size )		4807813	0		&&			
ANR	4809433	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		4807813	0		<			
ANR	4809434	PrimaryExpression	0		4807813	0					
ANR	4809435	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4807813	1					
ANR	4809436	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4807813	0					
ANR	4809437	PtrMemberAccess	upd -> string_a		4807813	0					
ANR	4809438	Identifier	upd		4807813	0					
ANR	4809439	Identifier	string_a		4807813	1					
ANR	4809440	Identifier	SA_SETCOMP		4807813	1					
ANR	4809441	Identifier	size		4807813	1					
ANR	4809442	RelationalExpression	upd -> ocomp > upd -> string_a [ SA_SETCOMP ] . size		4807813	1		>			
ANR	4809443	PtrMemberAccess	upd -> ocomp		4807813	0					
ANR	4809444	Identifier	upd		4807813	0					
ANR	4809445	Identifier	ocomp		4807813	1					
ANR	4809446	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4807813	1					
ANR	4809447	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4807813	0					
ANR	4809448	PtrMemberAccess	upd -> string_a		4807813	0					
ANR	4809449	Identifier	upd		4807813	0					
ANR	4809450	Identifier	string_a		4807813	1					
ANR	4809451	Identifier	SA_SETCOMP		4807813	1					
ANR	4809452	Identifier	size		4807813	1					
ANR	4809453	CompoundStatement		244:53:8242:8242	4807813	1					
ANR	4809454	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Only %d SETCOMP-Commands (%d required)\\n"" , ( int ) upd -> string_a [ SA_SETCOMP ] . size , upd -> ocomp )"	4373:6:159999:160150	4807813	0	True				
ANR	4809455	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Only %d SETCOMP-Commands (%d required)\\n"" , ( int ) upd -> string_a [ SA_SETCOMP ] . size , upd -> ocomp )"		4807813	0					
ANR	4809456	Callee	errprintf		4807813	0					
ANR	4809457	Identifier	errprintf		4807813	0					
ANR	4809458	ArgumentList	udev -> memory		4807813	1					
ANR	4809459	Argument	udev -> memory		4807813	0					
ANR	4809460	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809461	Identifier	udev		4807813	0					
ANR	4809462	Identifier	memory		4807813	1					
ANR	4809463	Argument	"""upd_open_writer: Only %d SETCOMP-Commands (%d required)\\n"""		4807813	1					
ANR	4809464	PrimaryExpression	"""upd_open_writer: Only %d SETCOMP-Commands (%d required)\\n"""		4807813	0					
ANR	4809465	Argument	( int ) upd -> string_a [ SA_SETCOMP ] . size		4807813	2					
ANR	4809466	CastExpression	( int ) upd -> string_a [ SA_SETCOMP ] . size		4807813	0					
ANR	4809467	CastTarget	int		4807813	0					
ANR	4809468	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4807813	1					
ANR	4809469	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4807813	0					
ANR	4809470	PtrMemberAccess	upd -> string_a		4807813	0					
ANR	4809471	Identifier	upd		4807813	0					
ANR	4809472	Identifier	string_a		4807813	1					
ANR	4809473	Identifier	SA_SETCOMP		4807813	1					
ANR	4809474	Identifier	size		4807813	1					
ANR	4809475	Argument	upd -> ocomp		4807813	3					
ANR	4809476	PtrMemberAccess	upd -> ocomp		4807813	0					
ANR	4809477	Identifier	upd		4807813	0					
ANR	4809478	Identifier	ocomp		4807813	1					
ANR	4809479	ExpressionStatement	success = false	4377:6:160165:160180	4807813	1	True				
ANR	4809480	AssignmentExpression	success = false		4807813	0		=			
ANR	4809481	Identifier	success		4807813	0					
ANR	4809482	Identifier	false		4807813	1					
ANR	4809483	IfStatement	if ( success )		4807813	22					
ANR	4809484	Condition	success	4382:6:160244:160250	4807813	0	True				
ANR	4809485	Identifier	success		4807813	0					
ANR	4809486	CompoundStatement		256:6:8567:8583	4807813	1					
ANR	4809487	IdentifierDeclStatement	"int32_t want , use ;"	4383:6:160283:160299	4807813	0	True				
ANR	4809488	IdentifierDecl	want		4807813	0					
ANR	4809489	IdentifierDeclType	int32_t		4807813	0					
ANR	4809490	Identifier	want		4807813	1					
ANR	4809491	IdentifierDecl	use		4807813	1					
ANR	4809492	IdentifierDeclType	int32_t		4807813	0					
ANR	4809493	Identifier	use		4807813	1					
ANR	4809494	ExpressionStatement	want = upd -> ints [ I_NYPASS ]	4385:6:160308:160335	4807813	1	True				
ANR	4809495	AssignmentExpression	want = upd -> ints [ I_NYPASS ]		4807813	0		=			
ANR	4809496	Identifier	want		4807813	0					
ANR	4809497	ArrayIndexing	upd -> ints [ I_NYPASS ]		4807813	1					
ANR	4809498	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809499	Identifier	upd		4807813	0					
ANR	4809500	Identifier	ints		4807813	1					
ANR	4809501	Identifier	I_NYPASS		4807813	1					
ANR	4809502	ExpressionStatement	want *= upd -> ints [ I_PINS2WRITE ]	4386:6:160343:160374	4807813	2	True				
ANR	4809503	AssignmentExpression	want *= upd -> ints [ I_PINS2WRITE ]		4807813	0		*=			
ANR	4809504	Identifier	want		4807813	0					
ANR	4809505	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4807813	1					
ANR	4809506	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809507	Identifier	upd		4807813	0					
ANR	4809508	Identifier	ints		4807813	1					
ANR	4809509	Identifier	I_PINS2WRITE		4807813	1					
ANR	4809510	IfStatement	if ( upd -> ints [ I_NSCNBUF ] > want )		4807813	3					
ANR	4809511	Condition	upd -> ints [ I_NSCNBUF ] > want	4388:9:160386:160412	4807813	0	True				
ANR	4809512	RelationalExpression	upd -> ints [ I_NSCNBUF ] > want		4807813	0		>			
ANR	4809513	ArrayIndexing	upd -> ints [ I_NSCNBUF ]		4807813	0					
ANR	4809514	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809515	Identifier	upd		4807813	0					
ANR	4809516	Identifier	ints		4807813	1					
ANR	4809517	Identifier	I_NSCNBUF		4807813	1					
ANR	4809518	Identifier	want		4807813	1					
ANR	4809519	ExpressionStatement	want = upd -> ints [ I_NSCNBUF ]	4388:38:160415:160442	4807813	1	True				
ANR	4809520	AssignmentExpression	want = upd -> ints [ I_NSCNBUF ]		4807813	0		=			
ANR	4809521	Identifier	want		4807813	0					
ANR	4809522	ArrayIndexing	upd -> ints [ I_NSCNBUF ]		4807813	1					
ANR	4809523	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809524	Identifier	upd		4807813	0					
ANR	4809525	Identifier	ints		4807813	1					
ANR	4809526	Identifier	I_NSCNBUF		4807813	1					
ANR	4809527	IfStatement	if ( 1 > want )		4807813	4					
ANR	4809528	Condition	1 > want	4390:9:160454:160461	4807813	0	True				
ANR	4809529	RelationalExpression	1 > want		4807813	0		>			
ANR	4809530	PrimaryExpression	1		4807813	0					
ANR	4809531	Identifier	want		4807813	1					
ANR	4809532	ExpressionStatement	want = 1	4390:43:160488:160496	4807813	1	True				
ANR	4809533	AssignmentExpression	want = 1		4807813	0		=			
ANR	4809534	Identifier	want		4807813	0					
ANR	4809535	PrimaryExpression	1		4807813	1					
ANR	4809536	ForStatement	for ( use = 1 ; 0 < use ; use <<= 1 )		4807813	5					
ANR	4809537	ForInit	use = 1 ;	4392:10:160509:160516	4807813	0	True				
ANR	4809538	AssignmentExpression	use = 1		4807813	0		=			
ANR	4809539	Identifier	use		4807813	0					
ANR	4809540	PrimaryExpression	1		4807813	1					
ANR	4809541	Condition	0 < use	4392:19:160518:160524	4807813	1	True				
ANR	4809542	RelationalExpression	0 < use		4807813	0		<			
ANR	4809543	PrimaryExpression	0		4807813	0					
ANR	4809544	Identifier	use		4807813	1					
ANR	4809545	AssignmentExpression	use <<= 1	4392:28:160527:160535	4807813	2	True	<<=			
ANR	4809546	Identifier	use		4807813	0					
ANR	4809547	PrimaryExpression	1		4807813	1					
ANR	4809548	IfStatement	if ( use > want )		4807813	3					
ANR	4809549	Condition	use > want	4392:42:160541:160550	4807813	0	True				
ANR	4809550	RelationalExpression	use > want		4807813	0		>			
ANR	4809551	Identifier	use		4807813	0					
ANR	4809552	Identifier	want		4807813	1					
ANR	4809553	BreakStatement	break ;	4392:54:160553:160558	4807813	1	True				
ANR	4809554	ExpressionStatement	upd -> nscnbuf = upd -> ints [ I_NSCNBUF ] = use	4394:6:160567:160608	4807813	6	True				
ANR	4809555	AssignmentExpression	upd -> nscnbuf = upd -> ints [ I_NSCNBUF ] = use		4807813	0		=			
ANR	4809556	PtrMemberAccess	upd -> nscnbuf		4807813	0					
ANR	4809557	Identifier	upd		4807813	0					
ANR	4809558	Identifier	nscnbuf		4807813	1					
ANR	4809559	AssignmentExpression	upd -> ints [ I_NSCNBUF ] = use		4807813	1		=			
ANR	4809560	ArrayIndexing	upd -> ints [ I_NSCNBUF ]		4807813	0					
ANR	4809561	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809562	Identifier	upd		4807813	0					
ANR	4809563	Identifier	ints		4807813	1					
ANR	4809564	Identifier	I_NSCNBUF		4807813	1					
ANR	4809565	Identifier	use		4807813	1					
ANR	4809566	IfStatement	if ( success )		4807813	23					
ANR	4809567	Condition	success	4400:6:160710:160716	4807813	0	True				
ANR	4809568	Identifier	success		4807813	0					
ANR	4809569	CompoundStatement		273:15:9003:9003	4807813	1					
ANR	4809570	IfStatement	if ( 0 < upd -> ints [ I_PWIDTH ] )		4807813	0					
ANR	4809571	Condition	0 < upd -> ints [ I_PWIDTH ]	4402:9:160777:160799	4807813	0	True				
ANR	4809572	RelationalExpression	0 < upd -> ints [ I_PWIDTH ]		4807813	0		<			
ANR	4809573	PrimaryExpression	0		4807813	0					
ANR	4809574	ArrayIndexing	upd -> ints [ I_PWIDTH ]		4807813	1					
ANR	4809575	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809576	Identifier	upd		4807813	0					
ANR	4809577	Identifier	ints		4807813	1					
ANR	4809578	Identifier	I_PWIDTH		4807813	1					
ANR	4809579	ExpressionStatement	upd -> pwidth = upd -> ints [ I_PWIDTH ]	4402:34:160802:160835	4807813	1	True				
ANR	4809580	AssignmentExpression	upd -> pwidth = upd -> ints [ I_PWIDTH ]		4807813	0		=			
ANR	4809581	PtrMemberAccess	upd -> pwidth		4807813	0					
ANR	4809582	Identifier	upd		4807813	0					
ANR	4809583	Identifier	pwidth		4807813	1					
ANR	4809584	ArrayIndexing	upd -> ints [ I_PWIDTH ]		4807813	1					
ANR	4809585	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809586	Identifier	upd		4807813	0					
ANR	4809587	Identifier	ints		4807813	1					
ANR	4809588	Identifier	I_PWIDTH		4807813	1					
ANR	4809589	ElseStatement	else		4807813	0					
ANR	4809590	ExpressionStatement	upd -> pwidth = upd -> gswidth	4403:34:160871:160897	4807813	0	True				
ANR	4809591	AssignmentExpression	upd -> pwidth = upd -> gswidth		4807813	0		=			
ANR	4809592	PtrMemberAccess	upd -> pwidth		4807813	0					
ANR	4809593	Identifier	upd		4807813	0					
ANR	4809594	Identifier	pwidth		4807813	1					
ANR	4809595	PtrMemberAccess	upd -> gswidth		4807813	1					
ANR	4809596	Identifier	upd		4807813	0					
ANR	4809597	Identifier	gswidth		4807813	1					
ANR	4809598	ExpressionStatement	upd -> nbytes = ( upd -> pwidth + CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1 ) / ( CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) )	4405:6:160906:161056	4807813	1	True				
ANR	4809599	AssignmentExpression	upd -> nbytes = ( upd -> pwidth + CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1 ) / ( CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) )		4807813	0		=			
ANR	4809600	PtrMemberAccess	upd -> nbytes		4807813	0					
ANR	4809601	Identifier	upd		4807813	0					
ANR	4809602	Identifier	nbytes		4807813	1					
ANR	4809603	MultiplicativeExpression	( upd -> pwidth + CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1 ) / ( CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) )		4807813	1		/			
ANR	4809604	AdditiveExpression	upd -> pwidth + CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1		4807813	0		+			
ANR	4809605	PtrMemberAccess	upd -> pwidth		4807813	0					
ANR	4809606	Identifier	upd		4807813	0					
ANR	4809607	Identifier	pwidth		4807813	1					
ANR	4809608	AdditiveExpression	CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] ) - 1		4807813	1		-			
ANR	4809609	MultiplicativeExpression	CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] )		4807813	0		*			
ANR	4809610	Identifier	CHAR_BIT		4807813	0					
ANR	4809611	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] )		4807813	1					
ANR	4809612	Sizeof	sizeof		4807813	0					
ANR	4809613	ArrayIndexing	upd -> scnbuf [ 0 ] -> bytes [ 0 ]		4807813	1					
ANR	4809614	PtrMemberAccess	upd -> scnbuf [ 0 ] -> bytes		4807813	0					
ANR	4809615	ArrayIndexing	upd -> scnbuf [ 0 ]		4807813	0					
ANR	4809616	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4809617	Identifier	upd		4807813	0					
ANR	4809618	Identifier	scnbuf		4807813	1					
ANR	4809619	PrimaryExpression	0		4807813	1					
ANR	4809620	Identifier	bytes		4807813	1					
ANR	4809621	PrimaryExpression	0		4807813	1					
ANR	4809622	PrimaryExpression	1		4807813	1					
ANR	4809623	MultiplicativeExpression	CHAR_BIT * sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] )		4807813	1		*			
ANR	4809624	Identifier	CHAR_BIT		4807813	0					
ANR	4809625	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] -> bytes [ 0 ] )		4807813	1					
ANR	4809626	Sizeof	sizeof		4807813	0					
ANR	4809627	ArrayIndexing	upd -> scnbuf [ 0 ] -> bytes [ 0 ]		4807813	1					
ANR	4809628	PtrMemberAccess	upd -> scnbuf [ 0 ] -> bytes		4807813	0					
ANR	4809629	ArrayIndexing	upd -> scnbuf [ 0 ]		4807813	0					
ANR	4809630	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4809631	Identifier	upd		4807813	0					
ANR	4809632	Identifier	scnbuf		4807813	1					
ANR	4809633	PrimaryExpression	0		4807813	1					
ANR	4809634	Identifier	bytes		4807813	1					
ANR	4809635	PrimaryExpression	0		4807813	1					
ANR	4809636	ExpressionStatement	upd -> scnmsk = upd -> nscnbuf - 1	4408:6:161065:161096	4807813	2	True				
ANR	4809637	AssignmentExpression	upd -> scnmsk = upd -> nscnbuf - 1		4807813	0		=			
ANR	4809638	PtrMemberAccess	upd -> scnmsk		4807813	0					
ANR	4809639	Identifier	upd		4807813	0					
ANR	4809640	Identifier	scnmsk		4807813	1					
ANR	4809641	AdditiveExpression	upd -> nscnbuf - 1		4807813	1		-			
ANR	4809642	PtrMemberAccess	upd -> nscnbuf		4807813	0					
ANR	4809643	Identifier	upd		4807813	0					
ANR	4809644	Identifier	nscnbuf		4807813	1					
ANR	4809645	PrimaryExpression	1		4807813	1					
ANR	4809646	IfStatement	if ( 0 < upd -> ints [ I_PHEIGHT ] )		4807813	3					
ANR	4809647	Condition	0 < upd -> ints [ I_PHEIGHT ]	4410:9:161108:161131	4807813	0	True				
ANR	4809648	RelationalExpression	0 < upd -> ints [ I_PHEIGHT ]		4807813	0		<			
ANR	4809649	PrimaryExpression	0		4807813	0					
ANR	4809650	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		4807813	1					
ANR	4809651	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809652	Identifier	upd		4807813	0					
ANR	4809653	Identifier	ints		4807813	1					
ANR	4809654	Identifier	I_PHEIGHT		4807813	1					
ANR	4809655	ExpressionStatement	upd -> pheight = upd -> ints [ I_PHEIGHT ]	4410:35:161134:161169	4807813	1	True				
ANR	4809656	AssignmentExpression	upd -> pheight = upd -> ints [ I_PHEIGHT ]		4807813	0		=			
ANR	4809657	PtrMemberAccess	upd -> pheight		4807813	0					
ANR	4809658	Identifier	upd		4807813	0					
ANR	4809659	Identifier	pheight		4807813	1					
ANR	4809660	ArrayIndexing	upd -> ints [ I_PHEIGHT ]		4807813	1					
ANR	4809661	PtrMemberAccess	upd -> ints		4807813	0					
ANR	4809662	Identifier	upd		4807813	0					
ANR	4809663	Identifier	ints		4807813	1					
ANR	4809664	Identifier	I_PHEIGHT		4807813	1					
ANR	4809665	ElseStatement	else		4807813	0					
ANR	4809666	ExpressionStatement	upd -> pheight = upd -> gsheight	4411:35:161206:161234	4807813	0	True				
ANR	4809667	AssignmentExpression	upd -> pheight = upd -> gsheight		4807813	0		=			
ANR	4809668	PtrMemberAccess	upd -> pheight		4807813	0					
ANR	4809669	Identifier	upd		4807813	0					
ANR	4809670	Identifier	pheight		4807813	1					
ANR	4809671	PtrMemberAccess	upd -> gsheight		4807813	1					
ANR	4809672	Identifier	upd		4807813	0					
ANR	4809673	Identifier	gsheight		4807813	1					
ANR	4809674	IfStatement	if ( success )		4807813	24					
ANR	4809675	Condition	success	4417:6:161345:161351	4807813	0	True				
ANR	4809676	Identifier	success		4807813	0					
ANR	4809677	CompoundStatement		290:15:9638:9638	4807813	1					
ANR	4809678	SwitchStatement	switch ( upd -> choice [ C_FORMAT ] )		4807813	0					
ANR	4809679	Condition	upd -> choice [ C_FORMAT ]	4418:13:161391:161411	4807813	0	True				
ANR	4809680	ArrayIndexing	upd -> choice [ C_FORMAT ]		4807813	0					
ANR	4809681	PtrMemberAccess	upd -> choice		4807813	0					
ANR	4809682	Identifier	upd		4807813	0					
ANR	4809683	Identifier	choice		4807813	1					
ANR	4809684	Identifier	C_FORMAT		4807813	1					
ANR	4809685	CompoundStatement		291:36:9698:9698	4807813	1					
ANR	4809686	Label	case FMT_RAS :	4419:9:161425:161437	4807813	0	True				
ANR	4809687	Identifier	FMT_RAS		4807813	0					
ANR	4809688	IfStatement	if ( 0 > upd_open_rascomp ( udev ) )		4807813	1					
ANR	4809689	Condition	0 > upd_open_rascomp ( udev )	4420:15:161454:161479	4807813	0	True				
ANR	4809690	RelationalExpression	0 > upd_open_rascomp ( udev )		4807813	0		>			
ANR	4809691	PrimaryExpression	0		4807813	0					
ANR	4809692	CallExpression	upd_open_rascomp ( udev )		4807813	1					
ANR	4809693	Callee	upd_open_rascomp		4807813	0					
ANR	4809694	Identifier	upd_open_rascomp		4807813	0					
ANR	4809695	ArgumentList	udev		4807813	1					
ANR	4809696	Argument	udev		4807813	0					
ANR	4809697	Identifier	udev		4807813	0					
ANR	4809698	ExpressionStatement	success = false	4420:43:161482:161497	4807813	1	True				
ANR	4809699	AssignmentExpression	success = false		4807813	0		=			
ANR	4809700	Identifier	success		4807813	0					
ANR	4809701	Identifier	false		4807813	1					
ANR	4809702	BreakStatement	break ;	4421:9:161508:161513	4807813	2	True				
ANR	4809703	Label	case FMT_EPSON :	4422:9:161524:161538	4807813	3	True				
ANR	4809704	Identifier	FMT_EPSON		4807813	0					
ANR	4809705	IfStatement	if ( 0 > upd_open_wrtescp ( udev ) )		4807813	4					
ANR	4809706	Condition	0 > upd_open_wrtescp ( udev )	4423:15:161555:161580	4807813	0	True				
ANR	4809707	RelationalExpression	0 > upd_open_wrtescp ( udev )		4807813	0		>			
ANR	4809708	PrimaryExpression	0		4807813	0					
ANR	4809709	CallExpression	upd_open_wrtescp ( udev )		4807813	1					
ANR	4809710	Callee	upd_open_wrtescp		4807813	0					
ANR	4809711	Identifier	upd_open_wrtescp		4807813	0					
ANR	4809712	ArgumentList	udev		4807813	1					
ANR	4809713	Argument	udev		4807813	0					
ANR	4809714	Identifier	udev		4807813	0					
ANR	4809715	ExpressionStatement	success = false	4423:43:161583:161598	4807813	1	True				
ANR	4809716	AssignmentExpression	success = false		4807813	0		=			
ANR	4809717	Identifier	success		4807813	0					
ANR	4809718	Identifier	false		4807813	1					
ANR	4809719	BreakStatement	break ;	4424:9:161609:161614	4807813	5	True				
ANR	4809720	Label	case FMT_ESCP2Y :	4425:9:161625:161640	4807813	6	True				
ANR	4809721	Identifier	FMT_ESCP2Y		4807813	0					
ANR	4809722	Label	case FMT_ESCP2XY :	4426:9:161651:161667	4807813	7	True				
ANR	4809723	Identifier	FMT_ESCP2XY		4807813	0					
ANR	4809724	Label	case FMT_ESCNMY :	4427:9:161678:161693	4807813	8	True				
ANR	4809725	Identifier	FMT_ESCNMY		4807813	0					
ANR	4809726	IfStatement	if ( 0 > upd_open_wrtescp2 ( udev ) )		4807813	9					
ANR	4809727	Condition	0 > upd_open_wrtescp2 ( udev )	4428:15:161721:161747	4807813	0	True				
ANR	4809728	RelationalExpression	0 > upd_open_wrtescp2 ( udev )		4807813	0		>			
ANR	4809729	PrimaryExpression	0		4807813	0					
ANR	4809730	CallExpression	upd_open_wrtescp2 ( udev )		4807813	1					
ANR	4809731	Callee	upd_open_wrtescp2		4807813	0					
ANR	4809732	Identifier	upd_open_wrtescp2		4807813	0					
ANR	4809733	ArgumentList	udev		4807813	1					
ANR	4809734	Argument	udev		4807813	0					
ANR	4809735	Identifier	udev		4807813	0					
ANR	4809736	ExpressionStatement	success = false	4428:44:161750:161765	4807813	1	True				
ANR	4809737	AssignmentExpression	success = false		4807813	0		=			
ANR	4809738	Identifier	success		4807813	0					
ANR	4809739	Identifier	false		4807813	1					
ANR	4809740	BreakStatement	break ;	4429:9:161776:161781	4807813	10	True				
ANR	4809741	Label	case FMT_RTL :	4430:9:161792:161804	4807813	11	True				
ANR	4809742	Identifier	FMT_RTL		4807813	0					
ANR	4809743	IfStatement	if ( 0 > upd_open_wrtrtl ( udev ) )		4807813	12					
ANR	4809744	Condition	0 > upd_open_wrtrtl ( udev )	4431:15:161821:161845	4807813	0	True				
ANR	4809745	RelationalExpression	0 > upd_open_wrtrtl ( udev )		4807813	0		>			
ANR	4809746	PrimaryExpression	0		4807813	0					
ANR	4809747	CallExpression	upd_open_wrtrtl ( udev )		4807813	1					
ANR	4809748	Callee	upd_open_wrtrtl		4807813	0					
ANR	4809749	Identifier	upd_open_wrtrtl		4807813	0					
ANR	4809750	ArgumentList	udev		4807813	1					
ANR	4809751	Argument	udev		4807813	0					
ANR	4809752	Identifier	udev		4807813	0					
ANR	4809753	ExpressionStatement	success = false	4431:44:161850:161865	4807813	1	True				
ANR	4809754	AssignmentExpression	success = false		4807813	0		=			
ANR	4809755	Identifier	success		4807813	0					
ANR	4809756	Identifier	false		4807813	1					
ANR	4809757	BreakStatement	break ;	4432:9:161876:161881	4807813	13	True				
ANR	4809758	Label	case FMT_CANON :	4433:9:161892:161906	4807813	14	True				
ANR	4809759	Identifier	FMT_CANON		4807813	0					
ANR	4809760	IfStatement	if ( 0 > upd_open_wrtcanon ( udev ) )		4807813	15					
ANR	4809761	Condition	0 > upd_open_wrtcanon ( udev )	4434:15:161934:161960	4807813	0	True				
ANR	4809762	RelationalExpression	0 > upd_open_wrtcanon ( udev )		4807813	0		>			
ANR	4809763	PrimaryExpression	0		4807813	0					
ANR	4809764	CallExpression	upd_open_wrtcanon ( udev )		4807813	1					
ANR	4809765	Callee	upd_open_wrtcanon		4807813	0					
ANR	4809766	Identifier	upd_open_wrtcanon		4807813	0					
ANR	4809767	ArgumentList	udev		4807813	1					
ANR	4809768	Argument	udev		4807813	0					
ANR	4809769	Identifier	udev		4807813	0					
ANR	4809770	ExpressionStatement	success = false	4434:44:161963:161978	4807813	1	True				
ANR	4809771	AssignmentExpression	success = false		4807813	0		=			
ANR	4809772	Identifier	success		4807813	0					
ANR	4809773	Identifier	false		4807813	1					
ANR	4809774	BreakStatement	break ;	4435:9:161989:161994	4807813	16	True				
ANR	4809775	Label	default :	4436:9:162005:162012	4807813	17	True				
ANR	4809776	Identifier	default		4807813	0					
ANR	4809777	ExpressionStatement	success = false	4437:12:162026:162041	4807813	18	True				
ANR	4809778	AssignmentExpression	success = false		4807813	0		=			
ANR	4809779	Identifier	success		4807813	0					
ANR	4809780	Identifier	false		4807813	1					
ANR	4809781	ExpressionStatement	"errprintf ( udev -> memory , ""upd_open_writer: Unknown writer-type %d\\n"" , upd -> choice [ C_FORMAT ] )"	4439:12:162088:162194	4807813	19	True				
ANR	4809782	CallExpression	"errprintf ( udev -> memory , ""upd_open_writer: Unknown writer-type %d\\n"" , upd -> choice [ C_FORMAT ] )"		4807813	0					
ANR	4809783	Callee	errprintf		4807813	0					
ANR	4809784	Identifier	errprintf		4807813	0					
ANR	4809785	ArgumentList	udev -> memory		4807813	1					
ANR	4809786	Argument	udev -> memory		4807813	0					
ANR	4809787	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809788	Identifier	udev		4807813	0					
ANR	4809789	Identifier	memory		4807813	1					
ANR	4809790	Argument	"""upd_open_writer: Unknown writer-type %d\\n"""		4807813	1					
ANR	4809791	PrimaryExpression	"""upd_open_writer: Unknown writer-type %d\\n"""		4807813	0					
ANR	4809792	Argument	upd -> choice [ C_FORMAT ]		4807813	2					
ANR	4809793	ArrayIndexing	upd -> choice [ C_FORMAT ]		4807813	0					
ANR	4809794	PtrMemberAccess	upd -> choice		4807813	0					
ANR	4809795	Identifier	upd		4807813	0					
ANR	4809796	Identifier	choice		4807813	1					
ANR	4809797	Identifier	C_FORMAT		4807813	1					
ANR	4809798	BreakStatement	break ;	4442:9:162212:162217	4807813	20	True				
ANR	4809799	IfStatement	if ( success && ( 0 < upd -> noutbuf ) )		4807813	25					
ANR	4809800	Condition	success && ( 0 < upd -> noutbuf )	4447:6:162305:162333	4807813	0	True				
ANR	4809801	AndExpression	success && ( 0 < upd -> noutbuf )		4807813	0		&&			
ANR	4809802	Identifier	success		4807813	0					
ANR	4809803	RelationalExpression	0 < upd -> noutbuf		4807813	1		<			
ANR	4809804	PrimaryExpression	0		4807813	0					
ANR	4809805	PtrMemberAccess	upd -> noutbuf		4807813	1					
ANR	4809806	Identifier	upd		4807813	0					
ANR	4809807	Identifier	noutbuf		4807813	1					
ANR	4809808	CompoundStatement		320:37:10620:10620	4807813	1					
ANR	4809809	ExpressionStatement	"upd -> outbuf = gs_malloc ( udev -> memory , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"	4448:6:162366:162453	4807813	0	True				
ANR	4809810	AssignmentExpression	"upd -> outbuf = gs_malloc ( udev -> memory , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"		4807813	0		=			
ANR	4809811	PtrMemberAccess	upd -> outbuf		4807813	0					
ANR	4809812	Identifier	upd		4807813	0					
ANR	4809813	Identifier	outbuf		4807813	1					
ANR	4809814	CallExpression	"gs_malloc ( udev -> memory , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"		4807813	1					
ANR	4809815	Callee	gs_malloc		4807813	0					
ANR	4809816	Identifier	gs_malloc		4807813	0					
ANR	4809817	ArgumentList	udev -> memory		4807813	1					
ANR	4809818	Argument	udev -> memory		4807813	0					
ANR	4809819	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809820	Identifier	udev		4807813	0					
ANR	4809821	Identifier	memory		4807813	1					
ANR	4809822	Argument	upd -> noutbuf		4807813	1					
ANR	4809823	PtrMemberAccess	upd -> noutbuf		4807813	0					
ANR	4809824	Identifier	upd		4807813	0					
ANR	4809825	Identifier	noutbuf		4807813	1					
ANR	4809826	Argument	sizeof ( upd -> outbuf [ 0 ] )		4807813	2					
ANR	4809827	SizeofExpression	sizeof ( upd -> outbuf [ 0 ] )		4807813	0					
ANR	4809828	Sizeof	sizeof		4807813	0					
ANR	4809829	ArrayIndexing	upd -> outbuf [ 0 ]		4807813	1					
ANR	4809830	PtrMemberAccess	upd -> outbuf		4807813	0					
ANR	4809831	Identifier	upd		4807813	0					
ANR	4809832	Identifier	outbuf		4807813	1					
ANR	4809833	PrimaryExpression	0		4807813	1					
ANR	4809834	Argument	"""upd/outbuf"""		4807813	3					
ANR	4809835	PrimaryExpression	"""upd/outbuf"""		4807813	0					
ANR	4809836	IfStatement	if ( ! upd -> outbuf )		4807813	1					
ANR	4809837	Condition	! upd -> outbuf	4449:9:162464:162475	4807813	0	True				
ANR	4809838	UnaryOperationExpression	! upd -> outbuf		4807813	0					
ANR	4809839	UnaryOperator	!		4807813	0					
ANR	4809840	PtrMemberAccess	upd -> outbuf		4807813	1					
ANR	4809841	Identifier	upd		4807813	0					
ANR	4809842	Identifier	outbuf		4807813	1					
ANR	4809843	ExpressionStatement	success = false	4449:23:162478:162493	4807813	1	True				
ANR	4809844	AssignmentExpression	success = false		4807813	0		=			
ANR	4809845	Identifier	success		4807813	0					
ANR	4809846	Identifier	false		4807813	1					
ANR	4809847	IfStatement	if ( success )		4807813	26					
ANR	4809848	Condition	success	4453:6:162612:162618	4807813	0	True				
ANR	4809849	Identifier	success		4807813	0					
ANR	4809850	CompoundStatement		326:15:10905:10905	4807813	1					
ANR	4809851	ExpressionStatement	"upd -> scnbuf = gs_malloc ( udev -> memory , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"	4454:6:162629:162716	4807813	0	True				
ANR	4809852	AssignmentExpression	"upd -> scnbuf = gs_malloc ( udev -> memory , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"		4807813	0		=			
ANR	4809853	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4809854	Identifier	upd		4807813	0					
ANR	4809855	Identifier	scnbuf		4807813	1					
ANR	4809856	CallExpression	"gs_malloc ( udev -> memory , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"		4807813	1					
ANR	4809857	Callee	gs_malloc		4807813	0					
ANR	4809858	Identifier	gs_malloc		4807813	0					
ANR	4809859	ArgumentList	udev -> memory		4807813	1					
ANR	4809860	Argument	udev -> memory		4807813	0					
ANR	4809861	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809862	Identifier	udev		4807813	0					
ANR	4809863	Identifier	memory		4807813	1					
ANR	4809864	Argument	upd -> nscnbuf		4807813	1					
ANR	4809865	PtrMemberAccess	upd -> nscnbuf		4807813	0					
ANR	4809866	Identifier	upd		4807813	0					
ANR	4809867	Identifier	nscnbuf		4807813	1					
ANR	4809868	Argument	sizeof ( upd -> scnbuf [ 0 ] )		4807813	2					
ANR	4809869	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] )		4807813	0					
ANR	4809870	Sizeof	sizeof		4807813	0					
ANR	4809871	ArrayIndexing	upd -> scnbuf [ 0 ]		4807813	1					
ANR	4809872	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4809873	Identifier	upd		4807813	0					
ANR	4809874	Identifier	scnbuf		4807813	1					
ANR	4809875	PrimaryExpression	0		4807813	1					
ANR	4809876	Argument	"""upd/scnbuf"""		4807813	3					
ANR	4809877	PrimaryExpression	"""upd/scnbuf"""		4807813	0					
ANR	4809878	IfStatement	if ( NULL == upd -> scnbuf )		4807813	1					
ANR	4809879	Condition	NULL == upd -> scnbuf	4455:9:162727:162745	4807813	0	True				
ANR	4809880	EqualityExpression	NULL == upd -> scnbuf		4807813	0		==			
ANR	4809881	Identifier	NULL		4807813	0					
ANR	4809882	PtrMemberAccess	upd -> scnbuf		4807813	1					
ANR	4809883	Identifier	upd		4807813	0					
ANR	4809884	Identifier	scnbuf		4807813	1					
ANR	4809885	CompoundStatement		328:30:11032:11032	4807813	1					
ANR	4809886	ExpressionStatement	success = false	4456:9:162759:162774	4807813	0	True				
ANR	4809887	AssignmentExpression	success = false		4807813	0		=			
ANR	4809888	Identifier	success		4807813	0					
ANR	4809889	Identifier	false		4807813	1					
ANR	4809890	ElseStatement	else		4807813	0					
ANR	4809891	CompoundStatement		331:9:11084:11092	4807813	0					
ANR	4809892	IdentifierDeclStatement	int ibuf ;	4458:9:162800:162808	4807813	0	True				
ANR	4809893	IdentifierDecl	ibuf		4807813	0					
ANR	4809894	IdentifierDeclType	int		4807813	0					
ANR	4809895	Identifier	ibuf		4807813	1					
ANR	4809896	ForStatement	for ( ibuf = 0 ; ibuf < upd -> nscnbuf ; ++ ibuf )		4807813	1					
ANR	4809897	ForInit	ibuf = 0 ;	4459:13:162823:162831	4807813	0	True				
ANR	4809898	AssignmentExpression	ibuf = 0		4807813	0		=			
ANR	4809899	Identifier	ibuf		4807813	0					
ANR	4809900	PrimaryExpression	0		4807813	1					
ANR	4809901	Condition	ibuf < upd -> nscnbuf	4459:23:162833:162851	4807813	1	True				
ANR	4809902	RelationalExpression	ibuf < upd -> nscnbuf		4807813	0		<			
ANR	4809903	Identifier	ibuf		4807813	0					
ANR	4809904	PtrMemberAccess	upd -> nscnbuf		4807813	1					
ANR	4809905	Identifier	upd		4807813	0					
ANR	4809906	Identifier	nscnbuf		4807813	1					
ANR	4809907	UnaryExpression	++ ibuf	4459:44:162854:162859	4807813	2	True				
ANR	4809908	IncDec	++		4807813	0					
ANR	4809909	Identifier	ibuf		4807813	1					
ANR	4809910	CompoundStatement		332:52:11146:11146	4807813	3					
ANR	4809911	IfStatement	if ( success )		4807813	0					
ANR	4809912	Condition	success	4460:15:162879:162885	4807813	0	True				
ANR	4809913	Identifier	success		4807813	0					
ANR	4809914	ExpressionStatement	"upd -> scnbuf [ ibuf ] = gs_malloc ( udev -> memory , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"	4460:24:162888:162999	4807813	1	True				
ANR	4809915	AssignmentExpression	"upd -> scnbuf [ ibuf ] = gs_malloc ( udev -> memory , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"		4807813	0		=			
ANR	4809916	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4809917	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4809918	Identifier	upd		4807813	0					
ANR	4809919	Identifier	scnbuf		4807813	1					
ANR	4809920	Identifier	ibuf		4807813	1					
ANR	4809921	CallExpression	"gs_malloc ( udev -> memory , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"		4807813	1					
ANR	4809922	Callee	gs_malloc		4807813	0					
ANR	4809923	Identifier	gs_malloc		4807813	0					
ANR	4809924	ArgumentList	udev -> memory		4807813	1					
ANR	4809925	Argument	udev -> memory		4807813	0					
ANR	4809926	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4809927	Identifier	udev		4807813	0					
ANR	4809928	Identifier	memory		4807813	1					
ANR	4809929	Argument	upd -> ocomp		4807813	1					
ANR	4809930	PtrMemberAccess	upd -> ocomp		4807813	0					
ANR	4809931	Identifier	upd		4807813	0					
ANR	4809932	Identifier	ocomp		4807813	1					
ANR	4809933	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] )		4807813	2					
ANR	4809934	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] )		4807813	0					
ANR	4809935	Sizeof	sizeof		4807813	0					
ANR	4809936	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		4807813	1					
ANR	4809937	ArrayIndexing	upd -> scnbuf [ 0 ]		4807813	0					
ANR	4809938	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4809939	Identifier	upd		4807813	0					
ANR	4809940	Identifier	scnbuf		4807813	1					
ANR	4809941	PrimaryExpression	0		4807813	1					
ANR	4809942	PrimaryExpression	0		4807813	1					
ANR	4809943	Argument	"""upd/scnbuf[]"""		4807813	3					
ANR	4809944	PrimaryExpression	"""upd/scnbuf[]"""		4807813	0					
ANR	4809945	ElseStatement	else		4807813	0					
ANR	4809946	ExpressionStatement	upd -> scnbuf [ ibuf ] = NULL	4462:17:163018:163042	4807813	0	True				
ANR	4809947	AssignmentExpression	upd -> scnbuf [ ibuf ] = NULL		4807813	0		=			
ANR	4809948	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4809949	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4809950	Identifier	upd		4807813	0					
ANR	4809951	Identifier	scnbuf		4807813	1					
ANR	4809952	Identifier	ibuf		4807813	1					
ANR	4809953	Identifier	NULL		4807813	1					
ANR	4809954	IfStatement	if ( ! upd -> scnbuf [ ibuf ] )		4807813	1					
ANR	4809955	Condition	! upd -> scnbuf [ ibuf ]	4464:15:163060:163077	4807813	0	True				
ANR	4809956	UnaryOperationExpression	! upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4809957	UnaryOperator	!		4807813	0					
ANR	4809958	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	1					
ANR	4809959	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4809960	Identifier	upd		4807813	0					
ANR	4809961	Identifier	scnbuf		4807813	1					
ANR	4809962	Identifier	ibuf		4807813	1					
ANR	4809963	CompoundStatement		337:35:11364:11364	4807813	1					
ANR	4809964	ExpressionStatement	success = false	4465:15:163097:163112	4807813	0	True				
ANR	4809965	AssignmentExpression	success = false		4807813	0		=			
ANR	4809966	Identifier	success		4807813	0					
ANR	4809967	Identifier	false		4807813	1					
ANR	4809968	ElseStatement	else		4807813	0					
ANR	4809969	CompoundStatement		340:15:11434:11443	4807813	0					
ANR	4809970	IdentifierDeclStatement	int icomp ;	4467:15:163150:163159	4807813	0	True				
ANR	4809971	IdentifierDecl	icomp		4807813	0					
ANR	4809972	IdentifierDeclType	int		4807813	0					
ANR	4809973	Identifier	icomp		4807813	1					
ANR	4809974	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4807813	1					
ANR	4809975	ForInit	icomp = 0 ;	4468:19:163180:163189	4807813	0	True				
ANR	4809976	AssignmentExpression	icomp = 0		4807813	0		=			
ANR	4809977	Identifier	icomp		4807813	0					
ANR	4809978	PrimaryExpression	0		4807813	1					
ANR	4809979	Condition	icomp < upd -> ocomp	4468:30:163191:163208	4807813	1	True				
ANR	4809980	RelationalExpression	icomp < upd -> ocomp		4807813	0		<			
ANR	4809981	Identifier	icomp		4807813	0					
ANR	4809982	PtrMemberAccess	upd -> ocomp		4807813	1					
ANR	4809983	Identifier	upd		4807813	0					
ANR	4809984	Identifier	ocomp		4807813	1					
ANR	4809985	UnaryExpression	++ icomp	4468:50:163211:163217	4807813	2	True				
ANR	4809986	IncDec	++		4807813	0					
ANR	4809987	Identifier	icomp		4807813	1					
ANR	4809988	CompoundStatement		341:59:11504:11504	4807813	3					
ANR	4809989	IfStatement	if ( success )		4807813	0					
ANR	4809990	Condition	success	4469:21:163243:163249	4807813	0	True				
ANR	4809991	Identifier	success		4807813	0					
ANR	4809992	ExpressionStatement	"upd -> scnbuf [ ibuf ] [ icomp ] . bytes = gs_malloc ( udev -> memory , upd -> nbytes , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] ) , ""upd/bytes"" )"	4469:30:163252:163409	4807813	1	True				
ANR	4809993	AssignmentExpression	"upd -> scnbuf [ ibuf ] [ icomp ] . bytes = gs_malloc ( udev -> memory , upd -> nbytes , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] ) , ""upd/bytes"" )"		4807813	0		=			
ANR	4809994	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4807813	0					
ANR	4809995	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4807813	0					
ANR	4809996	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4809997	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4809998	Identifier	upd		4807813	0					
ANR	4809999	Identifier	scnbuf		4807813	1					
ANR	4810000	Identifier	ibuf		4807813	1					
ANR	4810001	Identifier	icomp		4807813	1					
ANR	4810002	Identifier	bytes		4807813	1					
ANR	4810003	CallExpression	"gs_malloc ( udev -> memory , upd -> nbytes , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] ) , ""upd/bytes"" )"		4807813	1					
ANR	4810004	Callee	gs_malloc		4807813	0					
ANR	4810005	Identifier	gs_malloc		4807813	0					
ANR	4810006	ArgumentList	udev -> memory		4807813	1					
ANR	4810007	Argument	udev -> memory		4807813	0					
ANR	4810008	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4810009	Identifier	udev		4807813	0					
ANR	4810010	Identifier	memory		4807813	1					
ANR	4810011	Argument	upd -> nbytes		4807813	1					
ANR	4810012	PtrMemberAccess	upd -> nbytes		4807813	0					
ANR	4810013	Identifier	upd		4807813	0					
ANR	4810014	Identifier	nbytes		4807813	1					
ANR	4810015	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] )		4807813	2					
ANR	4810016	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ] )		4807813	0					
ANR	4810017	Sizeof	sizeof		4807813	0					
ANR	4810018	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ] . bytes [ 0 ]		4807813	1					
ANR	4810019	MemberAccess	upd -> scnbuf [ 0 ] [ 0 ] . bytes		4807813	0					
ANR	4810020	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		4807813	0					
ANR	4810021	ArrayIndexing	upd -> scnbuf [ 0 ]		4807813	0					
ANR	4810022	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810023	Identifier	upd		4807813	0					
ANR	4810024	Identifier	scnbuf		4807813	1					
ANR	4810025	PrimaryExpression	0		4807813	1					
ANR	4810026	PrimaryExpression	0		4807813	1					
ANR	4810027	Identifier	bytes		4807813	1					
ANR	4810028	PrimaryExpression	0		4807813	1					
ANR	4810029	Argument	"""upd/bytes"""		4807813	3					
ANR	4810030	PrimaryExpression	"""upd/bytes"""		4807813	0					
ANR	4810031	ElseStatement	else		4807813	0					
ANR	4810032	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . bytes = NULL	4472:30:163441:163478	4807813	0	True				
ANR	4810033	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . bytes = NULL		4807813	0		=			
ANR	4810034	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4807813	0					
ANR	4810035	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4807813	0					
ANR	4810036	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4810037	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810038	Identifier	upd		4807813	0					
ANR	4810039	Identifier	scnbuf		4807813	1					
ANR	4810040	Identifier	ibuf		4807813	1					
ANR	4810041	Identifier	icomp		4807813	1					
ANR	4810042	Identifier	bytes		4807813	1					
ANR	4810043	Identifier	NULL		4807813	1					
ANR	4810044	IfStatement	if ( ! upd -> scnbuf [ ibuf ] [ icomp ] . bytes )		4807813	1					
ANR	4810045	Condition	! upd -> scnbuf [ ibuf ] [ icomp ] . bytes	4473:21:163501:163531	4807813	0	True				
ANR	4810046	UnaryOperationExpression	! upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4807813	0					
ANR	4810047	UnaryOperator	!		4807813	0					
ANR	4810048	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4807813	1					
ANR	4810049	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4807813	0					
ANR	4810050	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4810051	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810052	Identifier	upd		4807813	0					
ANR	4810053	Identifier	scnbuf		4807813	1					
ANR	4810054	Identifier	ibuf		4807813	1					
ANR	4810055	Identifier	icomp		4807813	1					
ANR	4810056	Identifier	bytes		4807813	1					
ANR	4810057	ExpressionStatement	success = false	4473:54:163534:163549	4807813	1	True				
ANR	4810058	AssignmentExpression	success = false		4807813	0		=			
ANR	4810059	Identifier	success		4807813	0					
ANR	4810060	Identifier	false		4807813	1					
ANR	4810061	IfStatement	if ( 0 < upd -> nlimits )		4807813	2					
ANR	4810062	Condition	0 < upd -> nlimits	4475:21:163573:163588	4807813	0	True				
ANR	4810063	RelationalExpression	0 < upd -> nlimits		4807813	0		<			
ANR	4810064	PrimaryExpression	0		4807813	0					
ANR	4810065	PtrMemberAccess	upd -> nlimits		4807813	1					
ANR	4810066	Identifier	upd		4807813	0					
ANR	4810067	Identifier	nlimits		4807813	1					
ANR	4810068	CompoundStatement		348:39:11875:11875	4807813	1					
ANR	4810069	ExpressionStatement	"upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"	4477:21:163615:163760	4807813	0	True				
ANR	4810070	AssignmentExpression	"upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"		4807813	0		=			
ANR	4810071	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4807813	0					
ANR	4810072	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4807813	0					
ANR	4810073	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4810074	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810075	Identifier	upd		4807813	0					
ANR	4810076	Identifier	scnbuf		4807813	1					
ANR	4810077	Identifier	ibuf		4807813	1					
ANR	4810078	Identifier	icomp		4807813	1					
ANR	4810079	Identifier	xbegin		4807813	1					
ANR	4810080	CallExpression	"gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"		4807813	1					
ANR	4810081	Callee	gs_malloc		4807813	0					
ANR	4810082	Identifier	gs_malloc		4807813	0					
ANR	4810083	ArgumentList	udev -> memory		4807813	1					
ANR	4810084	Argument	udev -> memory		4807813	0					
ANR	4810085	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4810086	Identifier	udev		4807813	0					
ANR	4810087	Identifier	memory		4807813	1					
ANR	4810088	Argument	upd -> nlimits		4807813	1					
ANR	4810089	PtrMemberAccess	upd -> nlimits		4807813	0					
ANR	4810090	Identifier	upd		4807813	0					
ANR	4810091	Identifier	nlimits		4807813	1					
ANR	4810092	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] )		4807813	2					
ANR	4810093	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ] )		4807813	0					
ANR	4810094	Sizeof	sizeof		4807813	0					
ANR	4810095	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ] . xbegin [ 0 ]		4807813	1					
ANR	4810096	MemberAccess	upd -> scnbuf [ 0 ] [ 0 ] . xbegin		4807813	0					
ANR	4810097	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		4807813	0					
ANR	4810098	ArrayIndexing	upd -> scnbuf [ 0 ]		4807813	0					
ANR	4810099	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810100	Identifier	upd		4807813	0					
ANR	4810101	Identifier	scnbuf		4807813	1					
ANR	4810102	PrimaryExpression	0		4807813	1					
ANR	4810103	PrimaryExpression	0		4807813	1					
ANR	4810104	Identifier	xbegin		4807813	1					
ANR	4810105	PrimaryExpression	0		4807813	1					
ANR	4810106	Argument	"""upd/xbegin"""		4807813	3					
ANR	4810107	PrimaryExpression	"""upd/xbegin"""		4807813	0					
ANR	4810108	IfStatement	if ( ! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin )		4807813	1					
ANR	4810109	Condition	! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin	4479:24:163786:163817	4807813	0	True				
ANR	4810110	UnaryOperationExpression	! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4807813	0					
ANR	4810111	UnaryOperator	!		4807813	0					
ANR	4810112	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4807813	1					
ANR	4810113	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4807813	0					
ANR	4810114	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4810115	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810116	Identifier	upd		4807813	0					
ANR	4810117	Identifier	scnbuf		4807813	1					
ANR	4810118	Identifier	ibuf		4807813	1					
ANR	4810119	Identifier	icomp		4807813	1					
ANR	4810120	Identifier	xbegin		4807813	1					
ANR	4810121	ExpressionStatement	success = false	4479:58:163820:163835	4807813	1	True				
ANR	4810122	AssignmentExpression	success = false		4807813	0		=			
ANR	4810123	Identifier	success		4807813	0					
ANR	4810124	Identifier	false		4807813	1					
ANR	4810125	ExpressionStatement	"upd -> scnbuf [ ibuf ] [ icomp ] . xend = gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] ) , ""upd/xend"" )"	4481:21:163859:164000	4807813	2	True				
ANR	4810126	AssignmentExpression	"upd -> scnbuf [ ibuf ] [ icomp ] . xend = gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] ) , ""upd/xend"" )"		4807813	0		=			
ANR	4810127	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		4807813	0					
ANR	4810128	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4807813	0					
ANR	4810129	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4810130	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810131	Identifier	upd		4807813	0					
ANR	4810132	Identifier	scnbuf		4807813	1					
ANR	4810133	Identifier	ibuf		4807813	1					
ANR	4810134	Identifier	icomp		4807813	1					
ANR	4810135	Identifier	xend		4807813	1					
ANR	4810136	CallExpression	"gs_malloc ( udev -> memory , upd -> nlimits , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] ) , ""upd/xend"" )"		4807813	1					
ANR	4810137	Callee	gs_malloc		4807813	0					
ANR	4810138	Identifier	gs_malloc		4807813	0					
ANR	4810139	ArgumentList	udev -> memory		4807813	1					
ANR	4810140	Argument	udev -> memory		4807813	0					
ANR	4810141	PtrMemberAccess	udev -> memory		4807813	0					
ANR	4810142	Identifier	udev		4807813	0					
ANR	4810143	Identifier	memory		4807813	1					
ANR	4810144	Argument	upd -> nlimits		4807813	1					
ANR	4810145	PtrMemberAccess	upd -> nlimits		4807813	0					
ANR	4810146	Identifier	upd		4807813	0					
ANR	4810147	Identifier	nlimits		4807813	1					
ANR	4810148	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] )		4807813	2					
ANR	4810149	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ] )		4807813	0					
ANR	4810150	Sizeof	sizeof		4807813	0					
ANR	4810151	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ] . xend [ 0 ]		4807813	1					
ANR	4810152	MemberAccess	upd -> scnbuf [ 0 ] [ 0 ] . xend		4807813	0					
ANR	4810153	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		4807813	0					
ANR	4810154	ArrayIndexing	upd -> scnbuf [ 0 ]		4807813	0					
ANR	4810155	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810156	Identifier	upd		4807813	0					
ANR	4810157	Identifier	scnbuf		4807813	1					
ANR	4810158	PrimaryExpression	0		4807813	1					
ANR	4810159	PrimaryExpression	0		4807813	1					
ANR	4810160	Identifier	xend		4807813	1					
ANR	4810161	PrimaryExpression	0		4807813	1					
ANR	4810162	Argument	"""upd/xend"""		4807813	3					
ANR	4810163	PrimaryExpression	"""upd/xend"""		4807813	0					
ANR	4810164	IfStatement	if ( ! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin )		4807813	3					
ANR	4810165	Condition	! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin	4483:24:164026:164057	4807813	0	True				
ANR	4810166	UnaryOperationExpression	! upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4807813	0					
ANR	4810167	UnaryOperator	!		4807813	0					
ANR	4810168	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4807813	1					
ANR	4810169	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4807813	0					
ANR	4810170	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4810171	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810172	Identifier	upd		4807813	0					
ANR	4810173	Identifier	scnbuf		4807813	1					
ANR	4810174	Identifier	ibuf		4807813	1					
ANR	4810175	Identifier	icomp		4807813	1					
ANR	4810176	Identifier	xbegin		4807813	1					
ANR	4810177	ExpressionStatement	success = false	4483:58:164060:164075	4807813	1	True				
ANR	4810178	AssignmentExpression	success = false		4807813	0		=			
ANR	4810179	Identifier	success		4807813	0					
ANR	4810180	Identifier	false		4807813	1					
ANR	4810181	ElseStatement	else		4807813	0					
ANR	4810182	CompoundStatement		358:25:12387:12387	4807813	0					
ANR	4810183	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = NULL	4487:21:164127:164165	4807813	0	True				
ANR	4810184	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = NULL		4807813	0		=			
ANR	4810185	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4807813	0					
ANR	4810186	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4807813	0					
ANR	4810187	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4810188	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810189	Identifier	upd		4807813	0					
ANR	4810190	Identifier	scnbuf		4807813	1					
ANR	4810191	Identifier	ibuf		4807813	1					
ANR	4810192	Identifier	icomp		4807813	1					
ANR	4810193	Identifier	xbegin		4807813	1					
ANR	4810194	Identifier	NULL		4807813	1					
ANR	4810195	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . xend = NULL	4488:21:164188:164226	4807813	1	True				
ANR	4810196	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . xend = NULL		4807813	0		=			
ANR	4810197	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		4807813	0					
ANR	4810198	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4807813	0					
ANR	4810199	ArrayIndexing	upd -> scnbuf [ ibuf ]		4807813	0					
ANR	4810200	PtrMemberAccess	upd -> scnbuf		4807813	0					
ANR	4810201	Identifier	upd		4807813	0					
ANR	4810202	Identifier	scnbuf		4807813	1					
ANR	4810203	Identifier	ibuf		4807813	1					
ANR	4810204	Identifier	icomp		4807813	1					
ANR	4810205	Identifier	xend		4807813	1					
ANR	4810206	Identifier	NULL		4807813	1					
ANR	4810207	IfStatement	if ( success )		4807813	27					
ANR	4810208	Condition	success	4497:6:164311:164317	4807813	0	True				
ANR	4810209	Identifier	success		4807813	0					
ANR	4810210	ExpressionStatement	upd -> flags |= B_FORMAT	4497:15:164320:164342	4807813	1	True				
ANR	4810211	AssignmentExpression	upd -> flags |= B_FORMAT		4807813	0		|=			
ANR	4810212	PtrMemberAccess	upd -> flags		4807813	0					
ANR	4810213	Identifier	upd		4807813	0					
ANR	4810214	Identifier	flags		4807813	1					
ANR	4810215	Identifier	B_FORMAT		4807813	1					
ANR	4810216	ElseStatement	else		4807813	0					
ANR	4810217	ExpressionStatement	upd_close_writer ( udev )	4498:15:164359:164381	4807813	0	True				
ANR	4810218	CallExpression	upd_close_writer ( udev )		4807813	0					
ANR	4810219	Callee	upd_close_writer		4807813	0					
ANR	4810220	Identifier	upd_close_writer		4807813	0					
ANR	4810221	ArgumentList	udev		4807813	1					
ANR	4810222	Argument	udev		4807813	0					
ANR	4810223	Identifier	udev		4807813	0					
ANR	4810224	ReturnStatement	return success ? 1 : - 1 ;	4500:3:164387:164410	4807813	28	True				
ANR	4810225	ConditionalExpression	success ? 1 : - 1		4807813	0					
ANR	4810226	Condition	success		4807813	0					
ANR	4810227	Identifier	success		4807813	0					
ANR	4810228	PrimaryExpression	1		4807813	1					
ANR	4810229	UnaryOperationExpression	- 1		4807813	2					
ANR	4810230	UnaryOperator	-		4807813	0					
ANR	4810231	PrimaryExpression	1		4807813	1					
ANR	4810232	ReturnType	static int		4807813	1					
ANR	4810233	Identifier	upd_open_writer		4807813	2					
ANR	4810234	ParameterList	upd_device * udev		4807813	3					
ANR	4810235	Parameter	upd_device * udev	4127:16:151697:151712	4807813	0	True				
ANR	4810236	ParameterType	upd_device *		4807813	0					
ANR	4810237	Identifier	udev		4807813	1					
ANR	4810238	CFGEntryNode	ENTRY		4807813		True				
ANR	4810239	CFGExitNode	EXIT		4807813		True				
ANR	4810240	Symbol	I_PINS2WRITE		4807813						
ANR	4810241	Symbol	* upd -> int_a		4807813						
ANR	4810242	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . xend		4807813						
ANR	4810243	Symbol	* * IA_STD_DY		4807813						
ANR	4810244	Symbol	upd -> int_a [ IA_STD_DY ] . data		4807813						
ANR	4810245	Symbol	icomp		4807813						
ANR	4810246	Symbol	* * ibuf		4807813						
ANR	4810247	Symbol	* udev		4807813						
ANR	4810248	Symbol	upd_open_rascomp		4807813						
ANR	4810249	Symbol	upd -> scnbuf [ 0 ] [ 0 ] . xend		4807813						
ANR	4810250	Symbol	I_PWIDTH		4807813						
ANR	4810251	Symbol	* IA_BEG_IX		4807813						
ANR	4810252	Symbol	upd -> nbytes		4807813						
ANR	4810253	Symbol	upd -> scnbuf [ 0 ] [ 0 ] . bytes		4807813						
ANR	4810254	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		4807813						
ANR	4810255	Symbol	C_FORMAT		4807813						
ANR	4810256	Symbol	upd -> int_a [ IA_BEG_DY ] . data		4807813						
ANR	4810257	Symbol	upd_open_wrtrtl		4807813						
ANR	4810258	Symbol	* upd -> scnbuf		4807813						
ANR	4810259	Symbol	ip		4807813						
ANR	4810260	Symbol	want		4807813						
ANR	4810261	Symbol	upd		4807813						
ANR	4810262	Symbol	I_NXPASS		4807813						
ANR	4810263	Symbol	* I_NYPASS		4807813						
ANR	4810264	Symbol	ix		4807813						
ANR	4810265	Symbol	iy		4807813						
ANR	4810266	Symbol	* upd -> scnbuf [ 0 ] [ 0 ] . bytes		4807813						
ANR	4810267	Symbol	gs_malloc		4807813						
ANR	4810268	Symbol	* IA_BEGBOT		4807813						
ANR	4810269	Symbol	* I_BEG_Y		4807813						
ANR	4810270	Symbol	* upd -> outbuf		4807813						
ANR	4810271	Symbol	* IA_END_IX		4807813						
ANR	4810272	Symbol	upd -> pwidth		4807813						
ANR	4810273	Symbol	* ibuf		4807813						
ANR	4810274	Symbol	upd -> pheight		4807813						
ANR	4810275	Symbol	* C_FORMAT		4807813						
ANR	4810276	Symbol	* IA_STD_IX		4807813						
ANR	4810277	Symbol	sum		4807813						
ANR	4810278	Symbol	* * IA_BEGBOT		4807813						
ANR	4810279	Symbol	upd_open_wrtescp2		4807813						
ANR	4810280	Symbol	upd -> int_a [ IA_STD_DY ] . size		4807813						
ANR	4810281	Symbol	I_BEG_Y		4807813						
ANR	4810282	Symbol	* upd -> choice		4807813						
ANR	4810283	Symbol	upd -> flags		4807813						
ANR	4810284	Symbol	I_PHEIGHT		4807813						
ANR	4810285	Symbol	upd -> gsheight		4807813						
ANR	4810286	Symbol	upd -> int_a [ IA_ENDTOP ] . size		4807813						
ANR	4810287	Symbol	* upd		4807813						
ANR	4810288	Symbol	I_OCOMP		4807813						
ANR	4810289	Symbol	* upd -> scnbuf [ 0 ] [ 0 ] . xbegin		4807813						
ANR	4810290	Symbol	upd -> int_a [ IA_BEGBOT ] . size		4807813						
ANR	4810291	Symbol	ibuf		4807813						
ANR	4810292	Symbol	upd -> ocomp		4807813						
ANR	4810293	Symbol	IA_BEG_IX		4807813						
ANR	4810294	Symbol	upd -> int_a [ IA_BEG_IX ] . data		4807813						
ANR	4810295	Symbol	* I_NPASS		4807813						
ANR	4810296	Symbol	upd_open_wrtescp		4807813						
ANR	4810297	Symbol	IA_BEGBOT		4807813						
ANR	4810298	Symbol	upd -> scnbuf [ 0 ] -> bytes		4807813						
ANR	4810299	Symbol	B_RENDER		4807813						
ANR	4810300	Symbol	i		4807813						
ANR	4810301	Symbol	* * upd -> scnbuf		4807813						
ANR	4810302	Symbol	* * upd -> int_a		4807813						
ANR	4810303	Symbol	IA_STD_IX		4807813						
ANR	4810304	Symbol	upd -> noutbuf		4807813						
ANR	4810305	Symbol	IA_END_IX		4807813						
ANR	4810306	Symbol	upd -> writer		4807813						
ANR	4810307	Symbol	upd -> nscnbuf		4807813						
ANR	4810308	Symbol	* I_END_Y		4807813						
ANR	4810309	Symbol	* * upd		4807813						
ANR	4810310	Symbol	* IA_BEG_DY		4807813						
ANR	4810311	Symbol	* upd -> string_a		4807813						
ANR	4810312	Symbol	SA_SETCOMP		4807813						
ANR	4810313	Symbol	* * IA_ENDTOP		4807813						
ANR	4810314	Symbol	* * * * upd		4807813						
ANR	4810315	Symbol	use		4807813						
ANR	4810316	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4807813						
ANR	4810317	Symbol	* SA_SETCOMP		4807813						
ANR	4810318	Symbol	* upd -> scnbuf [ 0 ] -> bytes		4807813						
ANR	4810319	Symbol	* I_PHEIGHT		4807813						
ANR	4810320	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		4807813						
ANR	4810321	Symbol	* I_NXPASS		4807813						
ANR	4810322	Symbol	upd -> nlimits		4807813						
ANR	4810323	Symbol	upd -> int_a		4807813						
ANR	4810324	Symbol	* I_NSCNBUF		4807813						
ANR	4810325	Symbol	* * * upd -> scnbuf		4807813						
ANR	4810326	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4807813						
ANR	4810327	Symbol	NULL		4807813						
ANR	4810328	Symbol	upd -> int_a [ IA_ENDTOP ] . data		4807813						
ANR	4810329	Symbol	upd -> start_writer		4807813						
ANR	4810330	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		4807813						
ANR	4810331	Symbol	upd -> int_a [ IA_END_IX ] . size		4807813						
ANR	4810332	Symbol	upd -> int_a [ IA_END_IX ] . data		4807813						
ANR	4810333	Symbol	upd -> gswidth		4807813						
ANR	4810334	Symbol	upd -> int_a [ IA_STD_IX ] . data		4807813						
ANR	4810335	Symbol	upd -> scnbuf [ 0 ] [ 0 ] . xbegin		4807813						
ANR	4810336	Symbol	udev		4807813						
ANR	4810337	Symbol	success		4807813						
ANR	4810338	Symbol	true		4807813						
ANR	4810339	Symbol	upd -> ints		4807813						
ANR	4810340	Symbol	B_ERROR		4807813						
ANR	4810341	Symbol	upd -> int_a [ IA_STD_IX ] . size		4807813						
ANR	4810342	Symbol	upd -> ncomp		4807813						
ANR	4810343	Symbol	* ip		4807813						
ANR	4810344	Symbol	CHAR_BIT		4807813						
ANR	4810345	Symbol	udev -> upd		4807813						
ANR	4810346	Symbol	upd -> int_a [ IA_END_DY ] . size		4807813						
ANR	4810347	Symbol	upd -> int_a [ IA_BEG_DY ] . size		4807813						
ANR	4810348	Symbol	* icomp		4807813						
ANR	4810349	Symbol	* IA_ENDTOP		4807813						
ANR	4810350	Symbol	* IA_STD_DY		4807813						
ANR	4810351	Symbol	* IA_END_DY		4807813						
ANR	4810352	Symbol	* ip ++		4807813						
ANR	4810353	Symbol	I_NYPASS		4807813						
ANR	4810354	Symbol	I_NPASS		4807813						
ANR	4810355	Symbol	IA_STD_DY		4807813						
ANR	4810356	Symbol	I_NSCNBUF		4807813						
ANR	4810357	Symbol	udev -> memory		4807813						
ANR	4810358	Symbol	B_FORMAT		4807813						
ANR	4810359	Symbol	upd -> scnmsk		4807813						
ANR	4810360	Symbol	* * * upd		4807813						
ANR	4810361	Symbol	upd_open_wrtcanon		4807813						
ANR	4810362	Symbol	false		4807813						
ANR	4810363	Symbol	IA_ENDTOP		4807813						
ANR	4810364	Symbol	IA_END_DY		4807813						
ANR	4810365	Symbol	upd -> choice		4807813						
ANR	4810366	Symbol	I_END_Y		4807813						
ANR	4810367	Symbol	* I_OCOMP		4807813						
ANR	4810368	Symbol	upd -> string_a		4807813						
ANR	4810369	Symbol	* I_PWIDTH		4807813						
ANR	4810370	Symbol	* upd -> ints		4807813						
ANR	4810371	Symbol	* I_PINS2WRITE		4807813						
ANR	4810372	Symbol	* i		4807813						
ANR	4810373	Symbol	upd -> scnbuf		4807813						
ANR	4810374	Symbol	upd -> string_a [ SA_SETCOMP ] . size		4807813						
ANR	4810375	Symbol	* upd -> scnbuf [ 0 ] [ 0 ] . xend		4807813						
ANR	4810376	Symbol	IA_BEG_DY		4807813						
ANR	4810377	Symbol	* upd -> int_a [ IA_STD_DY ] . data		4807813						
ANR	4810378	Symbol	upd -> outbuf		4807813						
ANR	4810379	Symbol	upd -> int_a [ IA_BEG_IX ] . size		4807813						
ANR	4810380	Symbol	upd -> int_a [ IA_BEGBOT ] . data		4807813						
ANR	4810381	Symbol	* * IA_BEG_DY		4807813						
ANR	4810382	Function	upd_close_writer	4507:0:164638:166370							
ANR	4810383	FunctionDef	upd_close_writer (upd_device * udev)		4810382	0					
ANR	4810384	CompoundStatement		4509:0:164685:166370	4810382	0					
ANR	4810385	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	4510:3:164690:164717	4810382	0	True				
ANR	4810386	IdentifierDecl	upd = udev -> upd		4810382	0					
ANR	4810387	IdentifierDeclType	const upd_p		4810382	0					
ANR	4810388	Identifier	upd		4810382	1					
ANR	4810389	AssignmentExpression	upd = udev -> upd		4810382	2		=			
ANR	4810390	Identifier	upd		4810382	0					
ANR	4810391	PtrMemberAccess	udev -> upd		4810382	1					
ANR	4810392	Identifier	udev		4810382	0					
ANR	4810393	Identifier	upd		4810382	1					
ANR	4810394	IfStatement	if ( upd )		4810382	1					
ANR	4810395	Condition	upd	4512:6:164726:164728	4810382	0	True				
ANR	4810396	Identifier	upd		4810382	0					
ANR	4810397	CompoundStatement		5:6:53:67	4810382	1					
ANR	4810398	IdentifierDeclStatement	"int ibuf , icomp ;"	4513:6:164739:164753	4810382	0	True				
ANR	4810399	IdentifierDecl	ibuf		4810382	0					
ANR	4810400	IdentifierDeclType	int		4810382	0					
ANR	4810401	Identifier	ibuf		4810382	1					
ANR	4810402	IdentifierDecl	icomp		4810382	1					
ANR	4810403	IdentifierDeclType	int		4810382	0					
ANR	4810404	Identifier	icomp		4810382	1					
ANR	4810405	IfStatement	if ( ( 0 < upd -> noutbuf ) && upd -> outbuf )		4810382	1					
ANR	4810406	Condition	( 0 < upd -> noutbuf ) && upd -> outbuf	4515:9:164765:164797	4810382	0	True				
ANR	4810407	AndExpression	( 0 < upd -> noutbuf ) && upd -> outbuf		4810382	0		&&			
ANR	4810408	RelationalExpression	0 < upd -> noutbuf		4810382	0		<			
ANR	4810409	PrimaryExpression	0		4810382	0					
ANR	4810410	PtrMemberAccess	upd -> noutbuf		4810382	1					
ANR	4810411	Identifier	upd		4810382	0					
ANR	4810412	Identifier	noutbuf		4810382	1					
ANR	4810413	PtrMemberAccess	upd -> outbuf		4810382	1					
ANR	4810414	Identifier	upd		4810382	0					
ANR	4810415	Identifier	outbuf		4810382	1					
ANR	4810416	ExpressionStatement	"gs_free ( udev -> memory , upd -> outbuf , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"	4516:9:164809:164892	4810382	1	True				
ANR	4810417	CallExpression	"gs_free ( udev -> memory , upd -> outbuf , upd -> noutbuf , sizeof ( upd -> outbuf [ 0 ] ) , ""upd/outbuf"" )"		4810382	0					
ANR	4810418	Callee	gs_free		4810382	0					
ANR	4810419	Identifier	gs_free		4810382	0					
ANR	4810420	ArgumentList	udev -> memory		4810382	1					
ANR	4810421	Argument	udev -> memory		4810382	0					
ANR	4810422	PtrMemberAccess	udev -> memory		4810382	0					
ANR	4810423	Identifier	udev		4810382	0					
ANR	4810424	Identifier	memory		4810382	1					
ANR	4810425	Argument	upd -> outbuf		4810382	1					
ANR	4810426	PtrMemberAccess	upd -> outbuf		4810382	0					
ANR	4810427	Identifier	upd		4810382	0					
ANR	4810428	Identifier	outbuf		4810382	1					
ANR	4810429	Argument	upd -> noutbuf		4810382	2					
ANR	4810430	PtrMemberAccess	upd -> noutbuf		4810382	0					
ANR	4810431	Identifier	upd		4810382	0					
ANR	4810432	Identifier	noutbuf		4810382	1					
ANR	4810433	Argument	sizeof ( upd -> outbuf [ 0 ] )		4810382	3					
ANR	4810434	SizeofExpression	sizeof ( upd -> outbuf [ 0 ] )		4810382	0					
ANR	4810435	Sizeof	sizeof		4810382	0					
ANR	4810436	ArrayIndexing	upd -> outbuf [ 0 ]		4810382	1					
ANR	4810437	PtrMemberAccess	upd -> outbuf		4810382	0					
ANR	4810438	Identifier	upd		4810382	0					
ANR	4810439	Identifier	outbuf		4810382	1					
ANR	4810440	PrimaryExpression	0		4810382	1					
ANR	4810441	Argument	"""upd/outbuf"""		4810382	4					
ANR	4810442	PrimaryExpression	"""upd/outbuf"""		4810382	0					
ANR	4810443	ExpressionStatement	upd -> noutbuf = 0	4517:6:164900:164916	4810382	2	True				
ANR	4810444	AssignmentExpression	upd -> noutbuf = 0		4810382	0		=			
ANR	4810445	PtrMemberAccess	upd -> noutbuf		4810382	0					
ANR	4810446	Identifier	upd		4810382	0					
ANR	4810447	Identifier	noutbuf		4810382	1					
ANR	4810448	PrimaryExpression	0		4810382	1					
ANR	4810449	ExpressionStatement	upd -> outbuf = NULL	4518:6:164924:164943	4810382	3	True				
ANR	4810450	AssignmentExpression	upd -> outbuf = NULL		4810382	0		=			
ANR	4810451	PtrMemberAccess	upd -> outbuf		4810382	0					
ANR	4810452	Identifier	upd		4810382	0					
ANR	4810453	Identifier	outbuf		4810382	1					
ANR	4810454	Identifier	NULL		4810382	1					
ANR	4810455	IfStatement	if ( ( 0 < upd -> nscnbuf ) && upd -> scnbuf )		4810382	4					
ANR	4810456	Condition	( 0 < upd -> nscnbuf ) && upd -> scnbuf	4520:9:164955:164987	4810382	0	True				
ANR	4810457	AndExpression	( 0 < upd -> nscnbuf ) && upd -> scnbuf		4810382	0		&&			
ANR	4810458	RelationalExpression	0 < upd -> nscnbuf		4810382	0		<			
ANR	4810459	PrimaryExpression	0		4810382	0					
ANR	4810460	PtrMemberAccess	upd -> nscnbuf		4810382	1					
ANR	4810461	Identifier	upd		4810382	0					
ANR	4810462	Identifier	nscnbuf		4810382	1					
ANR	4810463	PtrMemberAccess	upd -> scnbuf		4810382	1					
ANR	4810464	Identifier	upd		4810382	0					
ANR	4810465	Identifier	scnbuf		4810382	1					
ANR	4810466	CompoundStatement		12:44:304:304	4810382	1					
ANR	4810467	ForStatement	for ( ibuf = 0 ; upd -> nscnbuf > ibuf ; ++ ibuf )		4810382	0					
ANR	4810468	ForInit	ibuf = 0 ;	4521:13:165005:165013	4810382	0	True				
ANR	4810469	AssignmentExpression	ibuf = 0		4810382	0		=			
ANR	4810470	Identifier	ibuf		4810382	0					
ANR	4810471	PrimaryExpression	0		4810382	1					
ANR	4810472	Condition	upd -> nscnbuf > ibuf	4521:23:165015:165033	4810382	1	True				
ANR	4810473	RelationalExpression	upd -> nscnbuf > ibuf		4810382	0		>			
ANR	4810474	PtrMemberAccess	upd -> nscnbuf		4810382	0					
ANR	4810475	Identifier	upd		4810382	0					
ANR	4810476	Identifier	nscnbuf		4810382	1					
ANR	4810477	Identifier	ibuf		4810382	1					
ANR	4810478	UnaryExpression	++ ibuf	4521:44:165036:165041	4810382	2	True				
ANR	4810479	IncDec	++		4810382	0					
ANR	4810480	Identifier	ibuf		4810382	1					
ANR	4810481	CompoundStatement		13:52:358:358	4810382	3					
ANR	4810482	IfStatement	if ( ! upd -> scnbuf [ ibuf ] )		4810382	0					
ANR	4810483	Condition	! upd -> scnbuf [ ibuf ]	4523:15:165062:165079	4810382	0	True				
ANR	4810484	UnaryOperationExpression	! upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810485	UnaryOperator	!		4810382	0					
ANR	4810486	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	1					
ANR	4810487	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810488	Identifier	upd		4810382	0					
ANR	4810489	Identifier	scnbuf		4810382	1					
ANR	4810490	Identifier	ibuf		4810382	1					
ANR	4810491	ContinueStatement	continue ;	4523:35:165082:165090	4810382	1	True				
ANR	4810492	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4810382	1					
ANR	4810493	ForInit	icomp = 0 ;	4525:16:165109:165118	4810382	0	True				
ANR	4810494	AssignmentExpression	icomp = 0		4810382	0		=			
ANR	4810495	Identifier	icomp		4810382	0					
ANR	4810496	PrimaryExpression	0		4810382	1					
ANR	4810497	Condition	icomp < upd -> ocomp	4525:27:165120:165137	4810382	1	True				
ANR	4810498	RelationalExpression	icomp < upd -> ocomp		4810382	0		<			
ANR	4810499	Identifier	icomp		4810382	0					
ANR	4810500	PtrMemberAccess	upd -> ocomp		4810382	1					
ANR	4810501	Identifier	upd		4810382	0					
ANR	4810502	Identifier	ocomp		4810382	1					
ANR	4810503	UnaryExpression	++ icomp	4525:47:165140:165146	4810382	2	True				
ANR	4810504	IncDec	++		4810382	0					
ANR	4810505	Identifier	icomp		4810382	1					
ANR	4810506	CompoundStatement		17:56:463:463	4810382	3					
ANR	4810507	IfStatement	if ( ( 0 < upd -> nbytes ) && upd -> scnbuf [ ibuf ] [ icomp ] . bytes )		4810382	0					
ANR	4810508	Condition	( 0 < upd -> nbytes ) && upd -> scnbuf [ ibuf ] [ icomp ] . bytes	4527:18:165170:165220	4810382	0	True				
ANR	4810509	AndExpression	( 0 < upd -> nbytes ) && upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4810382	0		&&			
ANR	4810510	RelationalExpression	0 < upd -> nbytes		4810382	0		<			
ANR	4810511	PrimaryExpression	0		4810382	0					
ANR	4810512	PtrMemberAccess	upd -> nbytes		4810382	1					
ANR	4810513	Identifier	upd		4810382	0					
ANR	4810514	Identifier	nbytes		4810382	1					
ANR	4810515	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4810382	1					
ANR	4810516	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810517	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810518	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810519	Identifier	upd		4810382	0					
ANR	4810520	Identifier	scnbuf		4810382	1					
ANR	4810521	Identifier	ibuf		4810382	1					
ANR	4810522	Identifier	icomp		4810382	1					
ANR	4810523	Identifier	bytes		4810382	1					
ANR	4810524	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . bytes , upd -> nbytes , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ] ) , ""upd/bytes"" )"	4528:18:165241:165382	4810382	1	True				
ANR	4810525	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . bytes , upd -> nbytes , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ] ) , ""upd/bytes"" )"		4810382	0					
ANR	4810526	Callee	gs_free		4810382	0					
ANR	4810527	Identifier	gs_free		4810382	0					
ANR	4810528	ArgumentList	udev -> memory		4810382	1					
ANR	4810529	Argument	udev -> memory		4810382	0					
ANR	4810530	PtrMemberAccess	udev -> memory		4810382	0					
ANR	4810531	Identifier	udev		4810382	0					
ANR	4810532	Identifier	memory		4810382	1					
ANR	4810533	Argument	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4810382	1					
ANR	4810534	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4810382	0					
ANR	4810535	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810536	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810537	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810538	Identifier	upd		4810382	0					
ANR	4810539	Identifier	scnbuf		4810382	1					
ANR	4810540	Identifier	ibuf		4810382	1					
ANR	4810541	Identifier	icomp		4810382	1					
ANR	4810542	Identifier	bytes		4810382	1					
ANR	4810543	Argument	upd -> nbytes		4810382	2					
ANR	4810544	PtrMemberAccess	upd -> nbytes		4810382	0					
ANR	4810545	Identifier	upd		4810382	0					
ANR	4810546	Identifier	nbytes		4810382	1					
ANR	4810547	Argument	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ] )		4810382	3					
ANR	4810548	SizeofExpression	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ] )		4810382	0					
ANR	4810549	Sizeof	sizeof		4810382	0					
ANR	4810550	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ] . words [ 0 ]		4810382	1					
ANR	4810551	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . words		4810382	0					
ANR	4810552	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810553	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810554	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810555	Identifier	upd		4810382	0					
ANR	4810556	Identifier	scnbuf		4810382	1					
ANR	4810557	Identifier	ibuf		4810382	1					
ANR	4810558	Identifier	icomp		4810382	1					
ANR	4810559	Identifier	words		4810382	1					
ANR	4810560	PrimaryExpression	0		4810382	1					
ANR	4810561	Argument	"""upd/bytes"""		4810382	4					
ANR	4810562	PrimaryExpression	"""upd/bytes"""		4810382	0					
ANR	4810563	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . bytes = NULL	4530:15:165399:165436	4810382	1	True				
ANR	4810564	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . bytes = NULL		4810382	0		=			
ANR	4810565	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4810382	0					
ANR	4810566	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810567	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810568	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810569	Identifier	upd		4810382	0					
ANR	4810570	Identifier	scnbuf		4810382	1					
ANR	4810571	Identifier	ibuf		4810382	1					
ANR	4810572	Identifier	icomp		4810382	1					
ANR	4810573	Identifier	bytes		4810382	1					
ANR	4810574	Identifier	NULL		4810382	1					
ANR	4810575	IfStatement	if ( ( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xbegin )		4810382	2					
ANR	4810576	Condition	( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xbegin	4532:18:165457:165509	4810382	0	True				
ANR	4810577	AndExpression	( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4810382	0		&&			
ANR	4810578	RelationalExpression	0 < upd -> nlimits		4810382	0		<			
ANR	4810579	PrimaryExpression	0		4810382	0					
ANR	4810580	PtrMemberAccess	upd -> nlimits		4810382	1					
ANR	4810581	Identifier	upd		4810382	0					
ANR	4810582	Identifier	nlimits		4810382	1					
ANR	4810583	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4810382	1					
ANR	4810584	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810585	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810586	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810587	Identifier	upd		4810382	0					
ANR	4810588	Identifier	scnbuf		4810382	1					
ANR	4810589	Identifier	ibuf		4810382	1					
ANR	4810590	Identifier	icomp		4810382	1					
ANR	4810591	Identifier	xbegin		4810382	1					
ANR	4810592	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . xbegin , upd -> nlimits , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"	4533:18:165530:165675	4810382	1	True				
ANR	4810593	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . xbegin , upd -> nlimits , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ] ) , ""upd/xbegin"" )"		4810382	0					
ANR	4810594	Callee	gs_free		4810382	0					
ANR	4810595	Identifier	gs_free		4810382	0					
ANR	4810596	ArgumentList	udev -> memory		4810382	1					
ANR	4810597	Argument	udev -> memory		4810382	0					
ANR	4810598	PtrMemberAccess	udev -> memory		4810382	0					
ANR	4810599	Identifier	udev		4810382	0					
ANR	4810600	Identifier	memory		4810382	1					
ANR	4810601	Argument	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4810382	1					
ANR	4810602	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4810382	0					
ANR	4810603	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810604	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810605	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810606	Identifier	upd		4810382	0					
ANR	4810607	Identifier	scnbuf		4810382	1					
ANR	4810608	Identifier	ibuf		4810382	1					
ANR	4810609	Identifier	icomp		4810382	1					
ANR	4810610	Identifier	xbegin		4810382	1					
ANR	4810611	Argument	upd -> nlimits		4810382	2					
ANR	4810612	PtrMemberAccess	upd -> nlimits		4810382	0					
ANR	4810613	Identifier	upd		4810382	0					
ANR	4810614	Identifier	nlimits		4810382	1					
ANR	4810615	Argument	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ] )		4810382	3					
ANR	4810616	SizeofExpression	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ] )		4810382	0					
ANR	4810617	Sizeof	sizeof		4810382	0					
ANR	4810618	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin [ 0 ]		4810382	1					
ANR	4810619	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4810382	0					
ANR	4810620	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810621	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810622	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810623	Identifier	upd		4810382	0					
ANR	4810624	Identifier	scnbuf		4810382	1					
ANR	4810625	Identifier	ibuf		4810382	1					
ANR	4810626	Identifier	icomp		4810382	1					
ANR	4810627	Identifier	xbegin		4810382	1					
ANR	4810628	PrimaryExpression	0		4810382	1					
ANR	4810629	Argument	"""upd/xbegin"""		4810382	4					
ANR	4810630	PrimaryExpression	"""upd/xbegin"""		4810382	0					
ANR	4810631	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = NULL	4535:15:165692:165730	4810382	3	True				
ANR	4810632	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin = NULL		4810382	0		=			
ANR	4810633	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4810382	0					
ANR	4810634	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810635	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810636	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810637	Identifier	upd		4810382	0					
ANR	4810638	Identifier	scnbuf		4810382	1					
ANR	4810639	Identifier	ibuf		4810382	1					
ANR	4810640	Identifier	icomp		4810382	1					
ANR	4810641	Identifier	xbegin		4810382	1					
ANR	4810642	Identifier	NULL		4810382	1					
ANR	4810643	IfStatement	if ( ( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xend )		4810382	4					
ANR	4810644	Condition	( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xend	4537:18:165751:165801	4810382	0	True				
ANR	4810645	AndExpression	( 0 < upd -> nlimits ) && upd -> scnbuf [ ibuf ] [ icomp ] . xend		4810382	0		&&			
ANR	4810646	RelationalExpression	0 < upd -> nlimits		4810382	0		<			
ANR	4810647	PrimaryExpression	0		4810382	0					
ANR	4810648	PtrMemberAccess	upd -> nlimits		4810382	1					
ANR	4810649	Identifier	upd		4810382	0					
ANR	4810650	Identifier	nlimits		4810382	1					
ANR	4810651	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		4810382	1					
ANR	4810652	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810653	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810654	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810655	Identifier	upd		4810382	0					
ANR	4810656	Identifier	scnbuf		4810382	1					
ANR	4810657	Identifier	ibuf		4810382	1					
ANR	4810658	Identifier	icomp		4810382	1					
ANR	4810659	Identifier	xend		4810382	1					
ANR	4810660	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . xend , upd -> nlimits , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ] ) , ""upd/xend"" )"	4538:18:165822:165961	4810382	1	True				
ANR	4810661	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] [ icomp ] . xend , upd -> nlimits , sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ] ) , ""upd/xend"" )"		4810382	0					
ANR	4810662	Callee	gs_free		4810382	0					
ANR	4810663	Identifier	gs_free		4810382	0					
ANR	4810664	ArgumentList	udev -> memory		4810382	1					
ANR	4810665	Argument	udev -> memory		4810382	0					
ANR	4810666	PtrMemberAccess	udev -> memory		4810382	0					
ANR	4810667	Identifier	udev		4810382	0					
ANR	4810668	Identifier	memory		4810382	1					
ANR	4810669	Argument	upd -> scnbuf [ ibuf ] [ icomp ] . xend		4810382	1					
ANR	4810670	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		4810382	0					
ANR	4810671	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810672	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810673	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810674	Identifier	upd		4810382	0					
ANR	4810675	Identifier	scnbuf		4810382	1					
ANR	4810676	Identifier	ibuf		4810382	1					
ANR	4810677	Identifier	icomp		4810382	1					
ANR	4810678	Identifier	xend		4810382	1					
ANR	4810679	Argument	upd -> nlimits		4810382	2					
ANR	4810680	PtrMemberAccess	upd -> nlimits		4810382	0					
ANR	4810681	Identifier	upd		4810382	0					
ANR	4810682	Identifier	nlimits		4810382	1					
ANR	4810683	Argument	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ] )		4810382	3					
ANR	4810684	SizeofExpression	sizeof ( upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ] )		4810382	0					
ANR	4810685	Sizeof	sizeof		4810382	0					
ANR	4810686	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ] . xend [ 0 ]		4810382	1					
ANR	4810687	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		4810382	0					
ANR	4810688	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810689	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810690	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810691	Identifier	upd		4810382	0					
ANR	4810692	Identifier	scnbuf		4810382	1					
ANR	4810693	Identifier	ibuf		4810382	1					
ANR	4810694	Identifier	icomp		4810382	1					
ANR	4810695	Identifier	xend		4810382	1					
ANR	4810696	PrimaryExpression	0		4810382	1					
ANR	4810697	Argument	"""upd/xend"""		4810382	4					
ANR	4810698	PrimaryExpression	"""upd/xend"""		4810382	0					
ANR	4810699	ExpressionStatement	upd -> scnbuf [ ibuf ] [ icomp ] . xend = NULL	4540:15:165978:166014	4810382	5	True				
ANR	4810700	AssignmentExpression	upd -> scnbuf [ ibuf ] [ icomp ] . xend = NULL		4810382	0		=			
ANR	4810701	MemberAccess	upd -> scnbuf [ ibuf ] [ icomp ] . xend		4810382	0					
ANR	4810702	ArrayIndexing	upd -> scnbuf [ ibuf ] [ icomp ]		4810382	0					
ANR	4810703	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810704	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810705	Identifier	upd		4810382	0					
ANR	4810706	Identifier	scnbuf		4810382	1					
ANR	4810707	Identifier	ibuf		4810382	1					
ANR	4810708	Identifier	icomp		4810382	1					
ANR	4810709	Identifier	xend		4810382	1					
ANR	4810710	Identifier	NULL		4810382	1					
ANR	4810711	IfStatement	if ( icomp )		4810382	2					
ANR	4810712	Condition	icomp	4543:15:166046:166050	4810382	0	True				
ANR	4810713	Identifier	icomp		4810382	0					
ANR	4810714	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"	4544:15:166068:166179	4810382	1	True				
ANR	4810715	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf [ ibuf ] , upd -> ocomp , sizeof ( upd -> scnbuf [ 0 ] [ 0 ] ) , ""upd/scnbuf[]"" )"		4810382	0					
ANR	4810716	Callee	gs_free		4810382	0					
ANR	4810717	Identifier	gs_free		4810382	0					
ANR	4810718	ArgumentList	udev -> memory		4810382	1					
ANR	4810719	Argument	udev -> memory		4810382	0					
ANR	4810720	PtrMemberAccess	udev -> memory		4810382	0					
ANR	4810721	Identifier	udev		4810382	0					
ANR	4810722	Identifier	memory		4810382	1					
ANR	4810723	Argument	upd -> scnbuf [ ibuf ]		4810382	1					
ANR	4810724	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810725	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810726	Identifier	upd		4810382	0					
ANR	4810727	Identifier	scnbuf		4810382	1					
ANR	4810728	Identifier	ibuf		4810382	1					
ANR	4810729	Argument	upd -> ocomp		4810382	2					
ANR	4810730	PtrMemberAccess	upd -> ocomp		4810382	0					
ANR	4810731	Identifier	upd		4810382	0					
ANR	4810732	Identifier	ocomp		4810382	1					
ANR	4810733	Argument	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] )		4810382	3					
ANR	4810734	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] [ 0 ] )		4810382	0					
ANR	4810735	Sizeof	sizeof		4810382	0					
ANR	4810736	ArrayIndexing	upd -> scnbuf [ 0 ] [ 0 ]		4810382	1					
ANR	4810737	ArrayIndexing	upd -> scnbuf [ 0 ]		4810382	0					
ANR	4810738	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810739	Identifier	upd		4810382	0					
ANR	4810740	Identifier	scnbuf		4810382	1					
ANR	4810741	PrimaryExpression	0		4810382	1					
ANR	4810742	PrimaryExpression	0		4810382	1					
ANR	4810743	Argument	"""upd/scnbuf[]"""		4810382	4					
ANR	4810744	PrimaryExpression	"""upd/scnbuf[]"""		4810382	0					
ANR	4810745	ExpressionStatement	upd -> scnbuf [ ibuf ] = NULL	4546:12:166193:166217	4810382	3	True				
ANR	4810746	AssignmentExpression	upd -> scnbuf [ ibuf ] = NULL		4810382	0		=			
ANR	4810747	ArrayIndexing	upd -> scnbuf [ ibuf ]		4810382	0					
ANR	4810748	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810749	Identifier	upd		4810382	0					
ANR	4810750	Identifier	scnbuf		4810382	1					
ANR	4810751	Identifier	ibuf		4810382	1					
ANR	4810752	Identifier	NULL		4810382	1					
ANR	4810753	ExpressionStatement	"gs_free ( udev -> memory , upd -> scnbuf , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"	4549:9:166240:166323	4810382	1	True				
ANR	4810754	CallExpression	"gs_free ( udev -> memory , upd -> scnbuf , upd -> nscnbuf , sizeof ( upd -> scnbuf [ 0 ] ) , ""upd/scnbuf"" )"		4810382	0					
ANR	4810755	Callee	gs_free		4810382	0					
ANR	4810756	Identifier	gs_free		4810382	0					
ANR	4810757	ArgumentList	udev -> memory		4810382	1					
ANR	4810758	Argument	udev -> memory		4810382	0					
ANR	4810759	PtrMemberAccess	udev -> memory		4810382	0					
ANR	4810760	Identifier	udev		4810382	0					
ANR	4810761	Identifier	memory		4810382	1					
ANR	4810762	Argument	upd -> scnbuf		4810382	1					
ANR	4810763	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810764	Identifier	upd		4810382	0					
ANR	4810765	Identifier	scnbuf		4810382	1					
ANR	4810766	Argument	upd -> nscnbuf		4810382	2					
ANR	4810767	PtrMemberAccess	upd -> nscnbuf		4810382	0					
ANR	4810768	Identifier	upd		4810382	0					
ANR	4810769	Identifier	nscnbuf		4810382	1					
ANR	4810770	Argument	sizeof ( upd -> scnbuf [ 0 ] )		4810382	3					
ANR	4810771	SizeofExpression	sizeof ( upd -> scnbuf [ 0 ] )		4810382	0					
ANR	4810772	Sizeof	sizeof		4810382	0					
ANR	4810773	ArrayIndexing	upd -> scnbuf [ 0 ]		4810382	1					
ANR	4810774	PtrMemberAccess	upd -> scnbuf		4810382	0					
ANR	4810775	Identifier	upd		4810382	0					
ANR	4810776	Identifier	scnbuf		4810382	1					
ANR	4810777	PrimaryExpression	0		4810382	1					
ANR	4810778	Argument	"""upd/scnbuf"""		4810382	4					
ANR	4810779	PrimaryExpression	"""upd/scnbuf"""		4810382	0					
ANR	4810780	ExpressionStatement	upd -> flags &= ~B_FORMAT	4552:6:166340:166363	4810382	5	True				
ANR	4810781	AssignmentExpression	upd -> flags &= ~B_FORMAT		4810382	0		&=			
ANR	4810782	PtrMemberAccess	upd -> flags		4810382	0					
ANR	4810783	Identifier	upd		4810382	0					
ANR	4810784	Identifier	flags		4810382	1					
ANR	4810785	Identifier	~B_FORMAT		4810382	1					
ANR	4810786	ReturnType	static void		4810382	1					
ANR	4810787	Identifier	upd_close_writer		4810382	2					
ANR	4810788	ParameterList	upd_device * udev		4810382	3					
ANR	4810789	Parameter	upd_device * udev	4508:17:164667:164682	4810382	0	True				
ANR	4810790	ParameterType	upd_device *		4810382	0					
ANR	4810791	Identifier	udev		4810382	1					
ANR	4810792	CFGEntryNode	ENTRY		4810382		True				
ANR	4810793	CFGExitNode	EXIT		4810382		True				
ANR	4810794	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . xend		4810382						
ANR	4810795	Symbol	* * * * upd		4810382						
ANR	4810796	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4810382						
ANR	4810797	Symbol	~B_FORMAT		4810382						
ANR	4810798	Symbol	icomp		4810382						
ANR	4810799	Symbol	* * ibuf		4810382						
ANR	4810800	Symbol	upd -> flags		4810382						
ANR	4810801	Symbol	udev -> upd		4810382						
ANR	4810802	Symbol	upd -> nlimits		4810382						
ANR	4810803	Symbol	* udev		4810382						
ANR	4810804	Symbol	* upd		4810382						
ANR	4810805	Symbol	* icomp		4810382						
ANR	4810806	Symbol	* * * upd -> scnbuf		4810382						
ANR	4810807	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . bytes		4810382						
ANR	4810808	Symbol	ibuf		4810382						
ANR	4810809	Symbol	upd -> ocomp		4810382						
ANR	4810810	Symbol	* upd -> scnbuf [ ibuf ] [ icomp ] . xend		4810382						
ANR	4810811	Symbol	upd -> nbytes		4810382						
ANR	4810812	Symbol	* upd -> scnbuf [ ibuf ] [ icomp ] . xbegin		4810382						
ANR	4810813	Symbol	NULL		4810382						
ANR	4810814	Symbol	udev -> memory		4810382						
ANR	4810815	Symbol	* upd -> scnbuf		4810382						
ANR	4810816	Symbol	* * * upd		4810382						
ANR	4810817	Symbol	upd		4810382						
ANR	4810818	Symbol	* * upd -> scnbuf		4810382						
ANR	4810819	Symbol	* upd -> scnbuf [ ibuf ] [ icomp ] . words		4810382						
ANR	4810820	Symbol	upd -> noutbuf		4810382						
ANR	4810821	Symbol	upd -> scnbuf		4810382						
ANR	4810822	Symbol	upd -> scnbuf [ ibuf ] [ icomp ] . words		4810382						
ANR	4810823	Symbol	udev		4810382						
ANR	4810824	Symbol	upd -> nscnbuf		4810382						
ANR	4810825	Symbol	* upd -> outbuf		4810382						
ANR	4810826	Symbol	* * icomp		4810382						
ANR	4810827	Symbol	upd -> outbuf		4810382						
ANR	4810828	Symbol	* * upd		4810382						
ANR	4810829	Symbol	* * * ibuf		4810382						
ANR	4810830	Symbol	* ibuf		4810382						
ANR	4810831	Function	upd_limits	4560:0:166596:168441							
ANR	4810832	FunctionDef	"upd_limits (upd_p upd , bool check)"		4810831	0					
ANR	4810833	CompoundStatement		4562:0:166642:168441	4810831	0					
ANR	4810834	IdentifierDeclStatement	"updscan_p scans = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ] , scan ;"	4563:3:166647:166711	4810831	0	True				
ANR	4810835	IdentifierDecl	scans = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4810831	0					
ANR	4810836	IdentifierDeclType	updscan_p		4810831	0					
ANR	4810837	Identifier	scans		4810831	1					
ANR	4810838	AssignmentExpression	scans = upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4810831	2		=			
ANR	4810839	Identifier	scans		4810831	0					
ANR	4810840	ArrayIndexing	upd -> scnbuf [ upd -> yscnbuf & upd -> scnmsk ]		4810831	1					
ANR	4810841	PtrMemberAccess	upd -> scnbuf		4810831	0					
ANR	4810842	Identifier	upd		4810831	0					
ANR	4810843	Identifier	scnbuf		4810831	1					
ANR	4810844	BitAndExpression	upd -> yscnbuf & upd -> scnmsk		4810831	1		&			
ANR	4810845	PtrMemberAccess	upd -> yscnbuf		4810831	0					
ANR	4810846	Identifier	upd		4810831	0					
ANR	4810847	Identifier	yscnbuf		4810831	1					
ANR	4810848	PtrMemberAccess	upd -> scnmsk		4810831	1					
ANR	4810849	Identifier	upd		4810831	0					
ANR	4810850	Identifier	scnmsk		4810831	1					
ANR	4810851	IdentifierDecl	scan		4810831	1					
ANR	4810852	IdentifierDeclType	updscan_p		4810831	0					
ANR	4810853	Identifier	scan		4810831	1					
ANR	4810854	IdentifierDeclStatement	"int xs , x , xe , icomp , pass ;"	4564:3:166716:166740	4810831	1	True				
ANR	4810855	IdentifierDecl	xs		4810831	0					
ANR	4810856	IdentifierDeclType	int		4810831	0					
ANR	4810857	Identifier	xs		4810831	1					
ANR	4810858	IdentifierDecl	x		4810831	1					
ANR	4810859	IdentifierDeclType	int		4810831	0					
ANR	4810860	Identifier	x		4810831	1					
ANR	4810861	IdentifierDecl	xe		4810831	2					
ANR	4810862	IdentifierDeclType	int		4810831	0					
ANR	4810863	Identifier	xe		4810831	1					
ANR	4810864	IdentifierDecl	icomp		4810831	3					
ANR	4810865	IdentifierDeclType	int		4810831	0					
ANR	4810866	Identifier	icomp		4810831	1					
ANR	4810867	IdentifierDecl	pass		4810831	4					
ANR	4810868	IdentifierDeclType	int		4810831	0					
ANR	4810869	Identifier	pass		4810831	1					
ANR	4810870	IdentifierDeclStatement	"byte * bytes , bit ;"	4565:3:166745:166760	4810831	2	True				
ANR	4810871	IdentifierDecl	* bytes		4810831	0					
ANR	4810872	IdentifierDeclType	byte *		4810831	0					
ANR	4810873	Identifier	bytes		4810831	1					
ANR	4810874	IdentifierDecl	bit		4810831	1					
ANR	4810875	IdentifierDeclType	byte		4810831	0					
ANR	4810876	Identifier	bit		4810831	1					
ANR	4810877	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4810831	3					
ANR	4810878	ForInit	icomp = 0 ;	4567:7:166770:166779	4810831	0	True				
ANR	4810879	AssignmentExpression	icomp = 0		4810831	0		=			
ANR	4810880	Identifier	icomp		4810831	0					
ANR	4810881	PrimaryExpression	0		4810831	1					
ANR	4810882	Condition	icomp < upd -> ocomp	4567:18:166781:166798	4810831	1	True				
ANR	4810883	RelationalExpression	icomp < upd -> ocomp		4810831	0		<			
ANR	4810884	Identifier	icomp		4810831	0					
ANR	4810885	PtrMemberAccess	upd -> ocomp		4810831	1					
ANR	4810886	Identifier	upd		4810831	0					
ANR	4810887	Identifier	ocomp		4810831	1					
ANR	4810888	UnaryExpression	++ icomp	4567:38:166801:166807	4810831	2	True				
ANR	4810889	IncDec	++		4810831	0					
ANR	4810890	Identifier	icomp		4810831	1					
ANR	4810891	CompoundStatement		6:47:167:167	4810831	3					
ANR	4810892	ExpressionStatement	scan = scans + icomp	4568:6:166818:166838	4810831	0	True				
ANR	4810893	AssignmentExpression	scan = scans + icomp		4810831	0		=			
ANR	4810894	Identifier	scan		4810831	0					
ANR	4810895	AdditiveExpression	scans + icomp		4810831	1		+			
ANR	4810896	Identifier	scans		4810831	0					
ANR	4810897	Identifier	icomp		4810831	1					
ANR	4810898	ForStatement	for ( pass = 0 ; pass < upd -> nlimits ; ++ pass )		4810831	1					
ANR	4810899	ForInit	pass = 0 ;	4569:10:166850:166858	4810831	0	True				
ANR	4810900	AssignmentExpression	pass = 0		4810831	0		=			
ANR	4810901	Identifier	pass		4810831	0					
ANR	4810902	PrimaryExpression	0		4810831	1					
ANR	4810903	Condition	pass < upd -> nlimits	4569:20:166860:166878	4810831	1	True				
ANR	4810904	RelationalExpression	pass < upd -> nlimits		4810831	0		<			
ANR	4810905	Identifier	pass		4810831	0					
ANR	4810906	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4810907	Identifier	upd		4810831	0					
ANR	4810908	Identifier	nlimits		4810831	1					
ANR	4810909	UnaryExpression	++ pass	4569:41:166881:166886	4810831	2	True				
ANR	4810910	IncDec	++		4810831	0					
ANR	4810911	Identifier	pass		4810831	1					
ANR	4810912	CompoundStatement		8:49:246:246	4810831	3					
ANR	4810913	ExpressionStatement	scan -> xbegin [ pass ] = upd -> pwidth	4570:9:166900:166932	4810831	0	True				
ANR	4810914	AssignmentExpression	scan -> xbegin [ pass ] = upd -> pwidth		4810831	0		=			
ANR	4810915	ArrayIndexing	scan -> xbegin [ pass ]		4810831	0					
ANR	4810916	PtrMemberAccess	scan -> xbegin		4810831	0					
ANR	4810917	Identifier	scan		4810831	0					
ANR	4810918	Identifier	xbegin		4810831	1					
ANR	4810919	Identifier	pass		4810831	1					
ANR	4810920	PtrMemberAccess	upd -> pwidth		4810831	1					
ANR	4810921	Identifier	upd		4810831	0					
ANR	4810922	Identifier	pwidth		4810831	1					
ANR	4810923	ExpressionStatement	scan -> xend [ pass ] = - 1	4571:9:166943:166966	4810831	1	True				
ANR	4810924	AssignmentExpression	scan -> xend [ pass ] = - 1		4810831	0		=			
ANR	4810925	ArrayIndexing	scan -> xend [ pass ]		4810831	0					
ANR	4810926	PtrMemberAccess	scan -> xend		4810831	0					
ANR	4810927	Identifier	scan		4810831	0					
ANR	4810928	Identifier	xend		4810831	1					
ANR	4810929	Identifier	pass		4810831	1					
ANR	4810930	UnaryOperationExpression	- 1		4810831	1					
ANR	4810931	UnaryOperator	-		4810831	0					
ANR	4810932	PrimaryExpression	1		4810831	1					
ANR	4810933	IfStatement	if ( check )		4810831	4					
ANR	4810934	Condition	check	4575:6:166988:166992	4810831	0	True				
ANR	4810935	Identifier	check		4810831	0					
ANR	4810936	CompoundStatement		14:13:352:352	4810831	1					
ANR	4810937	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4810831	0					
ANR	4810938	ForInit	icomp = 0 ;	4576:10:167026:167035	4810831	0	True				
ANR	4810939	AssignmentExpression	icomp = 0		4810831	0		=			
ANR	4810940	Identifier	icomp		4810831	0					
ANR	4810941	PrimaryExpression	0		4810831	1					
ANR	4810942	Condition	icomp < upd -> ocomp	4576:21:167037:167054	4810831	1	True				
ANR	4810943	RelationalExpression	icomp < upd -> ocomp		4810831	0		<			
ANR	4810944	Identifier	icomp		4810831	0					
ANR	4810945	PtrMemberAccess	upd -> ocomp		4810831	1					
ANR	4810946	Identifier	upd		4810831	0					
ANR	4810947	Identifier	ocomp		4810831	1					
ANR	4810948	UnaryExpression	++ icomp	4576:41:167057:167063	4810831	2	True				
ANR	4810949	IncDec	++		4810831	0					
ANR	4810950	Identifier	icomp		4810831	1					
ANR	4810951	CompoundStatement		15:50:423:423	4810831	3					
ANR	4810952	ExpressionStatement	scan = scans + icomp	4577:9:167100:167121	4810831	0	True				
ANR	4810953	AssignmentExpression	scan = scans + icomp		4810831	0		=			
ANR	4810954	Identifier	scan		4810831	0					
ANR	4810955	AdditiveExpression	scans + icomp		4810831	1		+			
ANR	4810956	Identifier	scans		4810831	0					
ANR	4810957	Identifier	icomp		4810831	1					
ANR	4810958	ExpressionStatement	bytes = scan -> bytes	4578:9:167132:167151	4810831	1	True				
ANR	4810959	AssignmentExpression	bytes = scan -> bytes		4810831	0		=			
ANR	4810960	Identifier	bytes		4810831	0					
ANR	4810961	PtrMemberAccess	scan -> bytes		4810831	1					
ANR	4810962	Identifier	scan		4810831	0					
ANR	4810963	Identifier	bytes		4810831	1					
ANR	4810964	ForStatement	for ( xs = 0 ; xs < upd -> nbytes && ! bytes [ xs ] ; ++ xs )		4810831	2					
ANR	4810965	ForInit	xs = 0 ;	4580:13:167167:167173	4810831	0	True				
ANR	4810966	AssignmentExpression	xs = 0		4810831	0		=			
ANR	4810967	Identifier	xs		4810831	0					
ANR	4810968	PrimaryExpression	0		4810831	1					
ANR	4810969	Condition	xs < upd -> nbytes && ! bytes [ xs ]	4580:21:167175:167205	4810831	1	True				
ANR	4810970	AndExpression	xs < upd -> nbytes && ! bytes [ xs ]		4810831	0		&&			
ANR	4810971	RelationalExpression	xs < upd -> nbytes		4810831	0		<			
ANR	4810972	Identifier	xs		4810831	0					
ANR	4810973	PtrMemberAccess	upd -> nbytes		4810831	1					
ANR	4810974	Identifier	upd		4810831	0					
ANR	4810975	Identifier	nbytes		4810831	1					
ANR	4810976	UnaryOperationExpression	! bytes [ xs ]		4810831	1					
ANR	4810977	UnaryOperator	!		4810831	0					
ANR	4810978	ArrayIndexing	bytes [ xs ]		4810831	1					
ANR	4810979	Identifier	bytes		4810831	0					
ANR	4810980	Identifier	xs		4810831	1					
ANR	4810981	UnaryExpression	++ xs	4580:56:167210:167213	4810831	2	True				
ANR	4810982	IncDec	++		4810831	0					
ANR	4810983	Identifier	xs		4810831	1					
ANR	4810984	ExpressionStatement		4580:61:167215:167215	4810831	3	True				
ANR	4810985	IfStatement	if ( xs < upd -> nbytes )		4810831	3					
ANR	4810986	Condition	xs < upd -> nbytes	4582:12:167230:167245	4810831	0	True				
ANR	4810987	RelationalExpression	xs < upd -> nbytes		4810831	0		<			
ANR	4810988	Identifier	xs		4810831	0					
ANR	4810989	PtrMemberAccess	upd -> nbytes		4810831	1					
ANR	4810990	Identifier	upd		4810831	0					
ANR	4810991	Identifier	nbytes		4810831	1					
ANR	4810992	CompoundStatement		21:30:605:605	4810831	1					
ANR	4810993	ForStatement	for ( xe = upd -> nbytes ; xs < xe && ! bytes [ xe - 1 ] ; -- xe )		4810831	0					
ANR	4810994	ForInit	xe = upd -> nbytes ;	4583:16:167281:167297	4810831	0	True				
ANR	4810995	AssignmentExpression	xe = upd -> nbytes		4810831	0		=			
ANR	4810996	Identifier	xe		4810831	0					
ANR	4810997	PtrMemberAccess	upd -> nbytes		4810831	1					
ANR	4810998	Identifier	upd		4810831	0					
ANR	4810999	Identifier	nbytes		4810831	1					
ANR	4811000	Condition	xs < xe && ! bytes [ xe - 1 ]	4583:34:167299:167321	4810831	1	True				
ANR	4811001	AndExpression	xs < xe && ! bytes [ xe - 1 ]		4810831	0		&&			
ANR	4811002	RelationalExpression	xs < xe		4810831	0		<			
ANR	4811003	Identifier	xs		4810831	0					
ANR	4811004	Identifier	xe		4810831	1					
ANR	4811005	UnaryOperationExpression	! bytes [ xe - 1 ]		4810831	1					
ANR	4811006	UnaryOperator	!		4810831	0					
ANR	4811007	ArrayIndexing	bytes [ xe - 1 ]		4810831	1					
ANR	4811008	Identifier	bytes		4810831	0					
ANR	4811009	AdditiveExpression	xe - 1		4810831	1		-			
ANR	4811010	Identifier	xe		4810831	0					
ANR	4811011	PrimaryExpression	1		4810831	1					
ANR	4811012	UnaryExpression	-- xe	4583:59:167324:167327	4810831	2	True				
ANR	4811013	IncDec	--		4810831	0					
ANR	4811014	Identifier	xe		4810831	1					
ANR	4811015	ExpressionStatement		4583:64:167329:167329	4810831	3	True				
ANR	4811016	ForStatement	for ( pass = 0 ; pass < upd -> nlimits ; ++ pass )		4810831	1					
ANR	4811017	ForInit	pass = 0 ;	4585:16:167348:167356	4810831	0	True				
ANR	4811018	AssignmentExpression	pass = 0		4810831	0		=			
ANR	4811019	Identifier	pass		4810831	0					
ANR	4811020	PrimaryExpression	0		4810831	1					
ANR	4811021	Condition	pass < upd -> nlimits	4585:26:167358:167376	4810831	1	True				
ANR	4811022	RelationalExpression	pass < upd -> nlimits		4810831	0		<			
ANR	4811023	Identifier	pass		4810831	0					
ANR	4811024	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811025	Identifier	upd		4810831	0					
ANR	4811026	Identifier	nlimits		4810831	1					
ANR	4811027	UnaryExpression	++ pass	4585:47:167379:167384	4810831	2	True				
ANR	4811028	IncDec	++		4810831	0					
ANR	4811029	Identifier	pass		4810831	1					
ANR	4811030	CompoundStatement		24:55:744:744	4810831	3					
ANR	4811031	ExpressionStatement	x = ( ( xs << 3 ) / upd -> nlimits ) * upd -> nlimits + pass	4587:15:167429:167475	4810831	0	True				
ANR	4811032	AssignmentExpression	x = ( ( xs << 3 ) / upd -> nlimits ) * upd -> nlimits + pass		4810831	0		=			
ANR	4811033	Identifier	x		4810831	0					
ANR	4811034	AdditiveExpression	( ( xs << 3 ) / upd -> nlimits ) * upd -> nlimits + pass		4810831	1		+			
ANR	4811035	MultiplicativeExpression	( ( xs << 3 ) / upd -> nlimits ) * upd -> nlimits		4810831	0		*			
ANR	4811036	MultiplicativeExpression	( xs << 3 ) / upd -> nlimits		4810831	0		/			
ANR	4811037	ShiftExpression	xs << 3		4810831	0		<<			
ANR	4811038	Identifier	xs		4810831	0					
ANR	4811039	PrimaryExpression	3		4810831	1					
ANR	4811040	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811041	Identifier	upd		4810831	0					
ANR	4811042	Identifier	nlimits		4810831	1					
ANR	4811043	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811044	Identifier	upd		4810831	0					
ANR	4811045	Identifier	nlimits		4810831	1					
ANR	4811046	Identifier	pass		4810831	1					
ANR	4811047	WhileStatement	while ( ( x >> 3 ) < xs )		4810831	1					
ANR	4811048	Condition	( x >> 3 ) < xs	4588:21:167498:167510	4810831	0	True				
ANR	4811049	RelationalExpression	( x >> 3 ) < xs		4810831	0		<			
ANR	4811050	ShiftExpression	x >> 3		4810831	0		>>			
ANR	4811051	Identifier	x		4810831	0					
ANR	4811052	PrimaryExpression	3		4810831	1					
ANR	4811053	Identifier	xs		4810831	1					
ANR	4811054	ExpressionStatement	x += upd -> nlimits	4588:36:167513:167530	4810831	1	True				
ANR	4811055	AssignmentExpression	x += upd -> nlimits		4810831	0		+=			
ANR	4811056	Identifier	x		4810831	0					
ANR	4811057	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811058	Identifier	upd		4810831	0					
ANR	4811059	Identifier	nlimits		4810831	1					
ANR	4811060	ExpressionStatement	bit = 0x80 >> ( x & 7 )	4590:15:167548:167569	4810831	2	True				
ANR	4811061	AssignmentExpression	bit = 0x80 >> ( x & 7 )		4810831	0		=			
ANR	4811062	Identifier	bit		4810831	0					
ANR	4811063	ShiftExpression	0x80 >> ( x & 7 )		4810831	1		>>			
ANR	4811064	PrimaryExpression	0x80		4810831	0					
ANR	4811065	BitAndExpression	x & 7		4810831	1		&			
ANR	4811066	Identifier	x		4810831	0					
ANR	4811067	PrimaryExpression	7		4810831	1					
ANR	4811068	WhileStatement	while ( x < scan -> xbegin [ pass ] )		4810831	3					
ANR	4811069	Condition	x < scan -> xbegin [ pass ]	4591:21:167592:167613	4810831	0	True				
ANR	4811070	RelationalExpression	x < scan -> xbegin [ pass ]		4810831	0		<			
ANR	4811071	Identifier	x		4810831	0					
ANR	4811072	ArrayIndexing	scan -> xbegin [ pass ]		4810831	1					
ANR	4811073	PtrMemberAccess	scan -> xbegin		4810831	0					
ANR	4811074	Identifier	scan		4810831	0					
ANR	4811075	Identifier	xbegin		4810831	1					
ANR	4811076	Identifier	pass		4810831	1					
ANR	4811077	CompoundStatement		30:45:973:973	4810831	1					
ANR	4811078	IfStatement	if ( bytes [ x >> 3 ] & bit )		4810831	0					
ANR	4811079	Condition	bytes [ x >> 3 ] & bit	4592:21:167639:167655	4810831	0	True				
ANR	4811080	BitAndExpression	bytes [ x >> 3 ] & bit		4810831	0		&			
ANR	4811081	ArrayIndexing	bytes [ x >> 3 ]		4810831	0					
ANR	4811082	Identifier	bytes		4810831	0					
ANR	4811083	ShiftExpression	x >> 3		4810831	1		>>			
ANR	4811084	Identifier	x		4810831	0					
ANR	4811085	PrimaryExpression	3		4810831	1					
ANR	4811086	Identifier	bit		4810831	1					
ANR	4811087	ExpressionStatement	scan -> xbegin [ pass ] = x	4592:40:167658:167680	4810831	1	True				
ANR	4811088	AssignmentExpression	scan -> xbegin [ pass ] = x		4810831	0		=			
ANR	4811089	ArrayIndexing	scan -> xbegin [ pass ]		4810831	0					
ANR	4811090	PtrMemberAccess	scan -> xbegin		4810831	0					
ANR	4811091	Identifier	scan		4810831	0					
ANR	4811092	Identifier	xbegin		4810831	1					
ANR	4811093	Identifier	pass		4810831	1					
ANR	4811094	Identifier	x		4810831	1					
ANR	4811095	ExpressionStatement	x += upd -> nlimits	4593:18:167700:167718	4810831	1	True				
ANR	4811096	AssignmentExpression	x += upd -> nlimits		4810831	0		+=			
ANR	4811097	Identifier	x		4810831	0					
ANR	4811098	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811099	Identifier	upd		4810831	0					
ANR	4811100	Identifier	nlimits		4810831	1					
ANR	4811101	ExpressionStatement	bit = 0x80 >> ( x & 7 )	4594:18:167738:167759	4810831	2	True				
ANR	4811102	AssignmentExpression	bit = 0x80 >> ( x & 7 )		4810831	0		=			
ANR	4811103	Identifier	bit		4810831	0					
ANR	4811104	ShiftExpression	0x80 >> ( x & 7 )		4810831	1		>>			
ANR	4811105	PrimaryExpression	0x80		4810831	0					
ANR	4811106	BitAndExpression	x & 7		4810831	1		&			
ANR	4811107	Identifier	x		4810831	0					
ANR	4811108	PrimaryExpression	7		4810831	1					
ANR	4811109	ExpressionStatement	x = ( ( ( xe << 3 ) | 7 ) / upd -> nlimits ) * upd -> nlimits + pass	4597:15:167794:167844	4810831	4	True				
ANR	4811110	AssignmentExpression	x = ( ( ( xe << 3 ) | 7 ) / upd -> nlimits ) * upd -> nlimits + pass		4810831	0		=			
ANR	4811111	Identifier	x		4810831	0					
ANR	4811112	AdditiveExpression	( ( ( xe << 3 ) | 7 ) / upd -> nlimits ) * upd -> nlimits + pass		4810831	1		+			
ANR	4811113	MultiplicativeExpression	( ( ( xe << 3 ) | 7 ) / upd -> nlimits ) * upd -> nlimits		4810831	0		*			
ANR	4811114	MultiplicativeExpression	( ( xe << 3 ) | 7 ) / upd -> nlimits		4810831	0		/			
ANR	4811115	InclusiveOrExpression	( xe << 3 ) | 7		4810831	0		|			
ANR	4811116	ShiftExpression	xe << 3		4810831	0		<<			
ANR	4811117	Identifier	xe		4810831	0					
ANR	4811118	PrimaryExpression	3		4810831	1					
ANR	4811119	PrimaryExpression	7		4810831	1					
ANR	4811120	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811121	Identifier	upd		4810831	0					
ANR	4811122	Identifier	nlimits		4810831	1					
ANR	4811123	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811124	Identifier	upd		4810831	0					
ANR	4811125	Identifier	nlimits		4810831	1					
ANR	4811126	Identifier	pass		4810831	1					
ANR	4811127	WhileStatement	while ( ( x >> 3 ) < xe )		4810831	5					
ANR	4811128	Condition	( x >> 3 ) < xe	4599:21:167868:167880	4810831	0	True				
ANR	4811129	RelationalExpression	( x >> 3 ) < xe		4810831	0		<			
ANR	4811130	ShiftExpression	x >> 3		4810831	0		>>			
ANR	4811131	Identifier	x		4810831	0					
ANR	4811132	PrimaryExpression	3		4810831	1					
ANR	4811133	Identifier	xe		4810831	1					
ANR	4811134	ExpressionStatement	x += upd -> nlimits	4599:36:167883:167900	4810831	1	True				
ANR	4811135	AssignmentExpression	x += upd -> nlimits		4810831	0		+=			
ANR	4811136	Identifier	x		4810831	0					
ANR	4811137	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811138	Identifier	upd		4810831	0					
ANR	4811139	Identifier	nlimits		4810831	1					
ANR	4811140	WhileStatement	while ( ( x >> 3 ) > xe )		4810831	6					
ANR	4811141	Condition	( x >> 3 ) > xe	4600:21:167923:167935	4810831	0	True				
ANR	4811142	RelationalExpression	( x >> 3 ) > xe		4810831	0		>			
ANR	4811143	ShiftExpression	x >> 3		4810831	0		>>			
ANR	4811144	Identifier	x		4810831	0					
ANR	4811145	PrimaryExpression	3		4810831	1					
ANR	4811146	Identifier	xe		4810831	1					
ANR	4811147	ExpressionStatement	x -= upd -> nlimits	4600:36:167938:167955	4810831	1	True				
ANR	4811148	AssignmentExpression	x -= upd -> nlimits		4810831	0		-=			
ANR	4811149	Identifier	x		4810831	0					
ANR	4811150	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811151	Identifier	upd		4810831	0					
ANR	4811152	Identifier	nlimits		4810831	1					
ANR	4811153	ExpressionStatement	bit = 0x80 >> ( xs & 7 )	4602:15:167973:167995	4810831	7	True				
ANR	4811154	AssignmentExpression	bit = 0x80 >> ( xs & 7 )		4810831	0		=			
ANR	4811155	Identifier	bit		4810831	0					
ANR	4811156	ShiftExpression	0x80 >> ( xs & 7 )		4810831	1		>>			
ANR	4811157	PrimaryExpression	0x80		4810831	0					
ANR	4811158	BitAndExpression	xs & 7		4810831	1		&			
ANR	4811159	Identifier	xs		4810831	0					
ANR	4811160	PrimaryExpression	7		4810831	1					
ANR	4811161	WhileStatement	while ( x > scan -> xend [ pass ] )		4810831	8					
ANR	4811162	Condition	x > scan -> xend [ pass ]	4603:21:168018:168037	4810831	0	True				
ANR	4811163	RelationalExpression	x > scan -> xend [ pass ]		4810831	0		>			
ANR	4811164	Identifier	x		4810831	0					
ANR	4811165	ArrayIndexing	scan -> xend [ pass ]		4810831	1					
ANR	4811166	PtrMemberAccess	scan -> xend		4810831	0					
ANR	4811167	Identifier	scan		4810831	0					
ANR	4811168	Identifier	xend		4810831	1					
ANR	4811169	Identifier	pass		4810831	1					
ANR	4811170	CompoundStatement		42:43:1397:1397	4810831	1					
ANR	4811171	IfStatement	if ( bytes [ x >> 3 ] & bit )		4810831	0					
ANR	4811172	Condition	bytes [ x >> 3 ] & bit	4604:21:168063:168079	4810831	0	True				
ANR	4811173	BitAndExpression	bytes [ x >> 3 ] & bit		4810831	0		&			
ANR	4811174	ArrayIndexing	bytes [ x >> 3 ]		4810831	0					
ANR	4811175	Identifier	bytes		4810831	0					
ANR	4811176	ShiftExpression	x >> 3		4810831	1		>>			
ANR	4811177	Identifier	x		4810831	0					
ANR	4811178	PrimaryExpression	3		4810831	1					
ANR	4811179	Identifier	bit		4810831	1					
ANR	4811180	ExpressionStatement	scan -> xend [ pass ] = x	4604:40:168082:168102	4810831	1	True				
ANR	4811181	AssignmentExpression	scan -> xend [ pass ] = x		4810831	0		=			
ANR	4811182	ArrayIndexing	scan -> xend [ pass ]		4810831	0					
ANR	4811183	PtrMemberAccess	scan -> xend		4810831	0					
ANR	4811184	Identifier	scan		4810831	0					
ANR	4811185	Identifier	xend		4810831	1					
ANR	4811186	Identifier	pass		4810831	1					
ANR	4811187	Identifier	x		4810831	1					
ANR	4811188	ExpressionStatement	x -= upd -> nlimits	4605:18:168122:168139	4810831	1	True				
ANR	4811189	AssignmentExpression	x -= upd -> nlimits		4810831	0		-=			
ANR	4811190	Identifier	x		4810831	0					
ANR	4811191	PtrMemberAccess	upd -> nlimits		4810831	1					
ANR	4811192	Identifier	upd		4810831	0					
ANR	4811193	Identifier	nlimits		4810831	1					
ANR	4811194	ExpressionStatement	bit = 0x80 >> ( x & 7 )	4606:18:168159:168180	4810831	2	True				
ANR	4811195	AssignmentExpression	bit = 0x80 >> ( x & 7 )		4810831	0		=			
ANR	4811196	Identifier	bit		4810831	0					
ANR	4811197	ShiftExpression	0x80 >> ( x & 7 )		4810831	1		>>			
ANR	4811198	PrimaryExpression	0x80		4810831	0					
ANR	4811199	BitAndExpression	x & 7		4810831	1		&			
ANR	4811200	Identifier	x		4810831	0					
ANR	4811201	PrimaryExpression	7		4810831	1					
ANR	4811202	ReturnType	static void		4810831	1					
ANR	4811203	Identifier	upd_limits		4810831	2					
ANR	4811204	ParameterList	"upd_p upd , bool check"		4810831	3					
ANR	4811205	Parameter	upd_p upd	4561:11:166619:166627	4810831	0	True				
ANR	4811206	ParameterType	upd_p		4810831	0					
ANR	4811207	Identifier	upd		4810831	1					
ANR	4811208	Parameter	bool check	4561:22:166630:166639	4810831	1	True				
ANR	4811209	ParameterType	bool		4810831	0					
ANR	4811210	Identifier	check		4810831	1					
ANR	4811211	CFGEntryNode	ENTRY		4810831		True				
ANR	4811212	CFGExitNode	EXIT		4810831		True				
ANR	4811213	Symbol	* x		4810831						
ANR	4811214	Symbol	scan		4810831						
ANR	4811215	Symbol	* bytes		4810831						
ANR	4811216	Symbol	bit		4810831						
ANR	4811217	Symbol	icomp		4810831						
ANR	4811218	Symbol	* scan -> xbegin		4810831						
ANR	4811219	Symbol	scan -> xend		4810831						
ANR	4811220	Symbol	upd -> nlimits		4810831						
ANR	4811221	Symbol	* upd		4810831						
ANR	4811222	Symbol	scans		4810831						
ANR	4811223	Symbol	* scan		4810831						
ANR	4811224	Symbol	* upd -> scnmsk		4810831						
ANR	4811225	Symbol	upd -> ocomp		4810831						
ANR	4811226	Symbol	scan -> xbegin		4810831						
ANR	4811227	Symbol	scan -> bytes		4810831						
ANR	4811228	Symbol	upd -> nbytes		4810831						
ANR	4811229	Symbol	* xs		4810831						
ANR	4811230	Symbol	upd -> scnmsk		4810831						
ANR	4811231	Symbol	* upd -> scnbuf		4810831						
ANR	4811232	Symbol	pass		4810831						
ANR	4811233	Symbol	* pass		4810831						
ANR	4811234	Symbol	* scan -> xend		4810831						
ANR	4811235	Symbol	upd		4810831						
ANR	4811236	Symbol	check		4810831						
ANR	4811237	Symbol	xe		4810831						
ANR	4811238	Symbol	* xe		4810831						
ANR	4811239	Symbol	* upd -> yscnbuf		4810831						
ANR	4811240	Symbol	upd -> yscnbuf		4810831						
ANR	4811241	Symbol	upd -> scnbuf		4810831						
ANR	4811242	Symbol	* * scan		4810831						
ANR	4811243	Symbol	bytes		4810831						
ANR	4811244	Symbol	x		4810831						
ANR	4811245	Symbol	xs		4810831						
ANR	4811246	Symbol	* * upd		4810831						
ANR	4811247	Symbol	upd -> pwidth		4810831						
ANR	4811248	Function	upd_open_rascomp	4623:0:168667:169095							
ANR	4811249	FunctionDef	upd_open_rascomp (upd_device * udev)		4811248	0					
ANR	4811250	CompoundStatement		4625:0:168713:169095	4811248	0					
ANR	4811251	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	4626:3:168718:168745	4811248	0	True				
ANR	4811252	IdentifierDecl	upd = udev -> upd		4811248	0					
ANR	4811253	IdentifierDeclType	const upd_p		4811248	0					
ANR	4811254	Identifier	upd		4811248	1					
ANR	4811255	AssignmentExpression	upd = udev -> upd		4811248	2		=			
ANR	4811256	Identifier	upd		4811248	0					
ANR	4811257	PtrMemberAccess	udev -> upd		4811248	1					
ANR	4811258	Identifier	udev		4811248	0					
ANR	4811259	Identifier	upd		4811248	1					
ANR	4811260	IdentifierDeclStatement	int32_t noutbuf ;	4627:3:168750:168765	4811248	1	True				
ANR	4811261	IdentifierDecl	noutbuf		4811248	0					
ANR	4811262	IdentifierDeclType	int32_t		4811248	0					
ANR	4811263	Identifier	noutbuf		4811248	1					
ANR	4811264	IdentifierDeclStatement	int error = 0 ;	4628:3:168770:168783	4811248	2	True				
ANR	4811265	IdentifierDecl	error = 0		4811248	0					
ANR	4811266	IdentifierDeclType	int		4811248	0					
ANR	4811267	Identifier	error		4811248	1					
ANR	4811268	AssignmentExpression	error = 0		4811248	2		=			
ANR	4811269	Identifier	error		4811248	0					
ANR	4811270	PrimaryExpression	0		4811248	1					
ANR	4811271	ExpressionStatement	noutbuf = upd -> pwidth	4630:3:168789:168810	4811248	3	True				
ANR	4811272	AssignmentExpression	noutbuf = upd -> pwidth		4811248	0		=			
ANR	4811273	Identifier	noutbuf		4811248	0					
ANR	4811274	PtrMemberAccess	upd -> pwidth		4811248	1					
ANR	4811275	Identifier	upd		4811248	0					
ANR	4811276	Identifier	pwidth		4811248	1					
ANR	4811277	IfStatement	if ( 1 < upd -> ncomp )		4811248	4					
ANR	4811278	Condition	1 < upd -> ncomp	4632:6:168819:168832	4811248	0	True				
ANR	4811279	RelationalExpression	1 < upd -> ncomp		4811248	0		<			
ANR	4811280	PrimaryExpression	1		4811248	0					
ANR	4811281	PtrMemberAccess	upd -> ncomp		4811248	1					
ANR	4811282	Identifier	upd		4811248	0					
ANR	4811283	Identifier	ncomp		4811248	1					
ANR	4811284	ExpressionStatement	noutbuf *= 8	4632:22:168835:168847	4811248	1	True				
ANR	4811285	AssignmentExpression	noutbuf *= 8		4811248	0		*=			
ANR	4811286	Identifier	noutbuf		4811248	0					
ANR	4811287	PrimaryExpression	8		4811248	1					
ANR	4811288	ExpressionStatement	noutbuf = ( ( noutbuf + 15 ) >> 4 ) << 1	4634:3:168874:168904	4811248	5	True				
ANR	4811289	AssignmentExpression	noutbuf = ( ( noutbuf + 15 ) >> 4 ) << 1		4811248	0		=			
ANR	4811290	Identifier	noutbuf		4811248	0					
ANR	4811291	ShiftExpression	( ( noutbuf + 15 ) >> 4 ) << 1		4811248	1		<<			
ANR	4811292	ShiftExpression	( noutbuf + 15 ) >> 4		4811248	0		>>			
ANR	4811293	AdditiveExpression	noutbuf + 15		4811248	0		+			
ANR	4811294	Identifier	noutbuf		4811248	0					
ANR	4811295	PrimaryExpression	15		4811248	1					
ANR	4811296	PrimaryExpression	4		4811248	1					
ANR	4811297	PrimaryExpression	1		4811248	1					
ANR	4811298	IfStatement	if ( noutbuf > 0 )		4811248	6					
ANR	4811299	Condition	noutbuf > 0	4636:6:168913:168923	4811248	0	True				
ANR	4811300	RelationalExpression	noutbuf > 0		4811248	0		>			
ANR	4811301	Identifier	noutbuf		4811248	0					
ANR	4811302	PrimaryExpression	0		4811248	1					
ANR	4811303	CompoundStatement		12:19:212:212	4811248	1					
ANR	4811304	ExpressionStatement	upd -> noutbuf = noutbuf	4637:6:168934:168956	4811248	0	True				
ANR	4811305	AssignmentExpression	upd -> noutbuf = noutbuf		4811248	0		=			
ANR	4811306	PtrMemberAccess	upd -> noutbuf		4811248	0					
ANR	4811307	Identifier	upd		4811248	0					
ANR	4811308	Identifier	noutbuf		4811248	1					
ANR	4811309	Identifier	noutbuf		4811248	1					
ANR	4811310	ExpressionStatement	upd -> start_writer = upd_start_rascomp	4638:6:168964:169001	4811248	1	True				
ANR	4811311	AssignmentExpression	upd -> start_writer = upd_start_rascomp		4811248	0		=			
ANR	4811312	PtrMemberAccess	upd -> start_writer		4811248	0					
ANR	4811313	Identifier	upd		4811248	0					
ANR	4811314	Identifier	start_writer		4811248	1					
ANR	4811315	Identifier	upd_start_rascomp		4811248	1					
ANR	4811316	ExpressionStatement	upd -> writer = upd_rascomp	4639:6:169009:169040	4811248	2	True				
ANR	4811317	AssignmentExpression	upd -> writer = upd_rascomp		4811248	0		=			
ANR	4811318	PtrMemberAccess	upd -> writer		4811248	0					
ANR	4811319	Identifier	upd		4811248	0					
ANR	4811320	Identifier	writer		4811248	1					
ANR	4811321	Identifier	upd_rascomp		4811248	1					
ANR	4811322	ElseStatement	else		4811248	0					
ANR	4811323	CompoundStatement		16:10:338:338	4811248	0					
ANR	4811324	ExpressionStatement	error = - 1	4641:6:169060:169070	4811248	0	True				
ANR	4811325	AssignmentExpression	error = - 1		4811248	0		=			
ANR	4811326	Identifier	error		4811248	0					
ANR	4811327	UnaryOperationExpression	- 1		4811248	1					
ANR	4811328	UnaryOperator	-		4811248	0					
ANR	4811329	PrimaryExpression	1		4811248	1					
ANR	4811330	ReturnStatement	return error ;	4644:3:169081:169093	4811248	7	True				
ANR	4811331	Identifier	error		4811248	0					
ANR	4811332	ReturnType	static int		4811248	1					
ANR	4811333	Identifier	upd_open_rascomp		4811248	2					
ANR	4811334	ParameterList	upd_device * udev		4811248	3					
ANR	4811335	Parameter	upd_device * udev	4624:17:168695:168710	4811248	0	True				
ANR	4811336	ParameterType	upd_device *		4811248	0					
ANR	4811337	Identifier	udev		4811248	1					
ANR	4811338	CFGEntryNode	ENTRY		4811248		True				
ANR	4811339	CFGExitNode	EXIT		4811248		True				
ANR	4811340	Symbol	upd -> start_writer		4811248						
ANR	4811341	Symbol	upd		4811248						
ANR	4811342	Symbol	error		4811248						
ANR	4811343	Symbol	noutbuf		4811248						
ANR	4811344	Symbol	upd -> ncomp		4811248						
ANR	4811345	Symbol	upd_start_rascomp		4811248						
ANR	4811346	Symbol	udev -> upd		4811248						
ANR	4811347	Symbol	upd -> noutbuf		4811248						
ANR	4811348	Symbol	* udev		4811248						
ANR	4811349	Symbol	* upd		4811248						
ANR	4811350	Symbol	upd -> writer		4811248						
ANR	4811351	Symbol	udev		4811248						
ANR	4811352	Symbol	upd_rascomp		4811248						
ANR	4811353	Symbol	upd -> pwidth		4811248						
ANR	4811354	Function	upd_start_rascomp	4661:0:169565:172264							
ANR	4811355	FunctionDef	"upd_start_rascomp (upd_p upd , FILE * out)"		4811354	0					
ANR	4811356	CompoundStatement		4662:40:169616:172264	4811354	0					
ANR	4811357	IfStatement	if ( 0 == upd -> strings [ S_BEGIN ] . size )		4811354	0					
ANR	4811358	Condition	0 == upd -> strings [ S_BEGIN ] . size	4665:6:169668:169698	4811354	0	True				
ANR	4811359	EqualityExpression	0 == upd -> strings [ S_BEGIN ] . size		4811354	0		==			
ANR	4811360	PrimaryExpression	0		4811354	0					
ANR	4811361	MemberAccess	upd -> strings [ S_BEGIN ] . size		4811354	1					
ANR	4811362	ArrayIndexing	upd -> strings [ S_BEGIN ]		4811354	0					
ANR	4811363	PtrMemberAccess	upd -> strings		4811354	0					
ANR	4811364	Identifier	upd		4811354	0					
ANR	4811365	Identifier	strings		4811354	1					
ANR	4811366	Identifier	S_BEGIN		4811354	1					
ANR	4811367	Identifier	size		4811354	1					
ANR	4811368	CompoundStatement		5:6:92:103	4811354	1					
ANR	4811369	IdentifierDeclStatement	int32_t val ;	4666:6:169709:169720	4811354	0	True				
ANR	4811370	IdentifierDecl	val		4811354	0					
ANR	4811371	IdentifierDeclType	int32_t		4811354	0					
ANR	4811372	Identifier	val		4811354	1					
ANR	4811373	ExpressionStatement	val = 0x59a66a95	4669:6:169748:169764	4811354	1	True				
ANR	4811374	AssignmentExpression	val = 0x59a66a95		4811354	0		=			
ANR	4811375	Identifier	val		4811354	0					
ANR	4811376	PrimaryExpression	0x59a66a95		4811354	1					
ANR	4811377	ExpressionStatement	"put32 ( val , out )"	4670:6:169772:169786	4811354	2	True				
ANR	4811378	CallExpression	"put32 ( val , out )"		4811354	0					
ANR	4811379	Callee	put32		4811354	0					
ANR	4811380	Identifier	put32		4811354	0					
ANR	4811381	ArgumentList	val		4811354	1					
ANR	4811382	Argument	val		4811354	0					
ANR	4811383	Identifier	val		4811354	0					
ANR	4811384	Argument	out		4811354	1					
ANR	4811385	Identifier	out		4811354	0					
ANR	4811386	ExpressionStatement	val = upd -> pwidth	4673:6:169814:169831	4811354	3	True				
ANR	4811387	AssignmentExpression	val = upd -> pwidth		4811354	0		=			
ANR	4811388	Identifier	val		4811354	0					
ANR	4811389	PtrMemberAccess	upd -> pwidth		4811354	1					
ANR	4811390	Identifier	upd		4811354	0					
ANR	4811391	Identifier	pwidth		4811354	1					
ANR	4811392	ExpressionStatement	"put32 ( val , out )"	4674:6:169839:169853	4811354	4	True				
ANR	4811393	CallExpression	"put32 ( val , out )"		4811354	0					
ANR	4811394	Callee	put32		4811354	0					
ANR	4811395	Identifier	put32		4811354	0					
ANR	4811396	ArgumentList	val		4811354	1					
ANR	4811397	Argument	val		4811354	0					
ANR	4811398	Identifier	val		4811354	0					
ANR	4811399	Argument	out		4811354	1					
ANR	4811400	Identifier	out		4811354	0					
ANR	4811401	ExpressionStatement	val = upd -> pheight	4677:6:169882:169900	4811354	5	True				
ANR	4811402	AssignmentExpression	val = upd -> pheight		4811354	0		=			
ANR	4811403	Identifier	val		4811354	0					
ANR	4811404	PtrMemberAccess	upd -> pheight		4811354	1					
ANR	4811405	Identifier	upd		4811354	0					
ANR	4811406	Identifier	pheight		4811354	1					
ANR	4811407	ExpressionStatement	"put32 ( val , out )"	4678:6:169908:169922	4811354	6	True				
ANR	4811408	CallExpression	"put32 ( val , out )"		4811354	0					
ANR	4811409	Callee	put32		4811354	0					
ANR	4811410	Identifier	put32		4811354	0					
ANR	4811411	ArgumentList	val		4811354	1					
ANR	4811412	Argument	val		4811354	0					
ANR	4811413	Identifier	val		4811354	0					
ANR	4811414	Argument	out		4811354	1					
ANR	4811415	Identifier	out		4811354	0					
ANR	4811416	IfStatement	if ( 1 < upd -> ncomp )		4811354	7					
ANR	4811417	Condition	1 < upd -> ncomp	4681:9:169953:169966	4811354	0	True				
ANR	4811418	RelationalExpression	1 < upd -> ncomp		4811354	0		<			
ANR	4811419	PrimaryExpression	1		4811354	0					
ANR	4811420	PtrMemberAccess	upd -> ncomp		4811354	1					
ANR	4811421	Identifier	upd		4811354	0					
ANR	4811422	Identifier	ncomp		4811354	1					
ANR	4811423	ExpressionStatement	val = 8	4681:25:169969:169976	4811354	1	True				
ANR	4811424	AssignmentExpression	val = 8		4811354	0		=			
ANR	4811425	Identifier	val		4811354	0					
ANR	4811426	PrimaryExpression	8		4811354	1					
ANR	4811427	ElseStatement	else		4811354	0					
ANR	4811428	ExpressionStatement	val = 1	4682:25:170024:170031	4811354	0	True				
ANR	4811429	AssignmentExpression	val = 1		4811354	0		=			
ANR	4811430	Identifier	val		4811354	0					
ANR	4811431	PrimaryExpression	1		4811354	1					
ANR	4811432	ExpressionStatement	"put32 ( val , out )"	4683:6:170039:170053	4811354	8	True				
ANR	4811433	CallExpression	"put32 ( val , out )"		4811354	0					
ANR	4811434	Callee	put32		4811354	0					
ANR	4811435	Identifier	put32		4811354	0					
ANR	4811436	ArgumentList	val		4811354	1					
ANR	4811437	Argument	val		4811354	0					
ANR	4811438	Identifier	val		4811354	0					
ANR	4811439	Argument	out		4811354	1					
ANR	4811440	Identifier	out		4811354	0					
ANR	4811441	ExpressionStatement	val *= upd -> pwidth	4686:6:170082:170100	4811354	9	True				
ANR	4811442	AssignmentExpression	val *= upd -> pwidth		4811354	0		*=			
ANR	4811443	Identifier	val		4811354	0					
ANR	4811444	PtrMemberAccess	upd -> pwidth		4811354	1					
ANR	4811445	Identifier	upd		4811354	0					
ANR	4811446	Identifier	pwidth		4811354	1					
ANR	4811447	ExpressionStatement	val = ( ( val + 15 ) >> 4 ) << 1	4687:6:170108:170130	4811354	10	True				
ANR	4811448	AssignmentExpression	val = ( ( val + 15 ) >> 4 ) << 1		4811354	0		=			
ANR	4811449	Identifier	val		4811354	0					
ANR	4811450	ShiftExpression	( ( val + 15 ) >> 4 ) << 1		4811354	1		<<			
ANR	4811451	ShiftExpression	( val + 15 ) >> 4		4811354	0		>>			
ANR	4811452	AdditiveExpression	val + 15		4811354	0		+			
ANR	4811453	Identifier	val		4811354	0					
ANR	4811454	PrimaryExpression	15		4811354	1					
ANR	4811455	PrimaryExpression	4		4811354	1					
ANR	4811456	PrimaryExpression	1		4811354	1					
ANR	4811457	ExpressionStatement	val *= upd -> pheight	4688:6:170138:170157	4811354	11	True				
ANR	4811458	AssignmentExpression	val *= upd -> pheight		4811354	0		*=			
ANR	4811459	Identifier	val		4811354	0					
ANR	4811460	PtrMemberAccess	upd -> pheight		4811354	1					
ANR	4811461	Identifier	upd		4811354	0					
ANR	4811462	Identifier	pheight		4811354	1					
ANR	4811463	ExpressionStatement	"put32 ( val , out )"	4689:6:170165:170179	4811354	12	True				
ANR	4811464	CallExpression	"put32 ( val , out )"		4811354	0					
ANR	4811465	Callee	put32		4811354	0					
ANR	4811466	Identifier	put32		4811354	0					
ANR	4811467	ArgumentList	val		4811354	1					
ANR	4811468	Argument	val		4811354	0					
ANR	4811469	Identifier	val		4811354	0					
ANR	4811470	Argument	out		4811354	1					
ANR	4811471	Identifier	out		4811354	0					
ANR	4811472	ExpressionStatement	val = 1	4692:6:170206:170213	4811354	13	True				
ANR	4811473	AssignmentExpression	val = 1		4811354	0		=			
ANR	4811474	Identifier	val		4811354	0					
ANR	4811475	PrimaryExpression	1		4811354	1					
ANR	4811476	ExpressionStatement	"put32 ( val , out )"	4693:6:170221:170235	4811354	14	True				
ANR	4811477	CallExpression	"put32 ( val , out )"		4811354	0					
ANR	4811478	Callee	put32		4811354	0					
ANR	4811479	Identifier	put32		4811354	0					
ANR	4811480	ArgumentList	val		4811354	1					
ANR	4811481	Argument	val		4811354	0					
ANR	4811482	Identifier	val		4811354	0					
ANR	4811483	Argument	out		4811354	1					
ANR	4811484	Identifier	out		4811354	0					
ANR	4811485	ExpressionStatement	val = 1	4696:6:170265:170272	4811354	15	True				
ANR	4811486	AssignmentExpression	val = 1		4811354	0		=			
ANR	4811487	Identifier	val		4811354	0					
ANR	4811488	PrimaryExpression	1		4811354	1					
ANR	4811489	ExpressionStatement	"put32 ( val , out )"	4697:6:170280:170294	4811354	16	True				
ANR	4811490	CallExpression	"put32 ( val , out )"		4811354	0					
ANR	4811491	Callee	put32		4811354	0					
ANR	4811492	Identifier	put32		4811354	0					
ANR	4811493	ArgumentList	val		4811354	1					
ANR	4811494	Argument	val		4811354	0					
ANR	4811495	Identifier	val		4811354	0					
ANR	4811496	Argument	out		4811354	1					
ANR	4811497	Identifier	out		4811354	0					
ANR	4811498	ExpressionStatement	val = 3 * ( 1 << upd -> ncomp )	4700:6:170326:170353	4811354	17	True				
ANR	4811499	AssignmentExpression	val = 3 * ( 1 << upd -> ncomp )		4811354	0		=			
ANR	4811500	Identifier	val		4811354	0					
ANR	4811501	MultiplicativeExpression	3 * ( 1 << upd -> ncomp )		4811354	1		*			
ANR	4811502	PrimaryExpression	3		4811354	0					
ANR	4811503	ShiftExpression	1 << upd -> ncomp		4811354	1		<<			
ANR	4811504	PrimaryExpression	1		4811354	0					
ANR	4811505	PtrMemberAccess	upd -> ncomp		4811354	1					
ANR	4811506	Identifier	upd		4811354	0					
ANR	4811507	Identifier	ncomp		4811354	1					
ANR	4811508	ExpressionStatement	"put32 ( val , out )"	4701:6:170382:170396	4811354	18	True				
ANR	4811509	CallExpression	"put32 ( val , out )"		4811354	0					
ANR	4811510	Callee	put32		4811354	0					
ANR	4811511	Identifier	put32		4811354	0					
ANR	4811512	ArgumentList	val		4811354	1					
ANR	4811513	Argument	val		4811354	0					
ANR	4811514	Identifier	val		4811354	0					
ANR	4811515	Argument	out		4811354	1					
ANR	4811516	Identifier	out		4811354	0					
ANR	4811517	IfStatement	if ( 1 == upd -> ncomp )		4811354	19					
ANR	4811518	Condition	1 == upd -> ncomp	4704:9:170427:170441	4811354	0	True				
ANR	4811519	EqualityExpression	1 == upd -> ncomp		4811354	0		==			
ANR	4811520	PrimaryExpression	1		4811354	0					
ANR	4811521	PtrMemberAccess	upd -> ncomp		4811354	1					
ANR	4811522	Identifier	upd		4811354	0					
ANR	4811523	Identifier	ncomp		4811354	1					
ANR	4811524	CompoundStatement		44:9:859:896	4811354	1					
ANR	4811525	IdentifierDeclStatement	const updcomp_p comp = upd -> valptr [ 0 ] ;	4705:9:170476:170513	4811354	0	True				
ANR	4811526	IdentifierDecl	comp = upd -> valptr [ 0 ]		4811354	0					
ANR	4811527	IdentifierDeclType	const updcomp_p		4811354	0					
ANR	4811528	Identifier	comp		4811354	1					
ANR	4811529	AssignmentExpression	comp = upd -> valptr [ 0 ]		4811354	2		=			
ANR	4811530	Identifier	comp		4811354	0					
ANR	4811531	ArrayIndexing	upd -> valptr [ 0 ]		4811354	1					
ANR	4811532	PtrMemberAccess	upd -> valptr		4811354	0					
ANR	4811533	Identifier	upd		4811354	0					
ANR	4811534	Identifier	valptr		4811354	1					
ANR	4811535	PrimaryExpression	0		4811354	1					
ANR	4811536	IfStatement	if ( upd -> cmap [ comp -> cmap ] . rise )		4811354	1					
ANR	4811537	Condition	upd -> cmap [ comp -> cmap ] . rise	4707:12:170528:170553	4811354	0	True				
ANR	4811538	MemberAccess	upd -> cmap [ comp -> cmap ] . rise		4811354	0					
ANR	4811539	ArrayIndexing	upd -> cmap [ comp -> cmap ]		4811354	0					
ANR	4811540	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811541	Identifier	upd		4811354	0					
ANR	4811542	Identifier	cmap		4811354	1					
ANR	4811543	PtrMemberAccess	comp -> cmap		4811354	1					
ANR	4811544	Identifier	comp		4811354	0					
ANR	4811545	Identifier	cmap		4811354	1					
ANR	4811546	Identifier	rise		4811354	1					
ANR	4811547	CompoundStatement		46:40:939:939	4811354	1					
ANR	4811548	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4708:12:170570:170591	4811354	0	True				
ANR	4811549	CallExpression	"putc ( ( char ) 0x00 , out )"		4811354	0					
ANR	4811550	Callee	putc		4811354	0					
ANR	4811551	Identifier	putc		4811354	0					
ANR	4811552	ArgumentList	( char ) 0x00		4811354	1					
ANR	4811553	Argument	( char ) 0x00		4811354	0					
ANR	4811554	CastExpression	( char ) 0x00		4811354	0					
ANR	4811555	CastTarget	char		4811354	0					
ANR	4811556	PrimaryExpression	0x00		4811354	1					
ANR	4811557	Argument	out		4811354	1					
ANR	4811558	Identifier	out		4811354	0					
ANR	4811559	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4708:35:170593:170614	4811354	1	True				
ANR	4811560	CallExpression	"putc ( ( char ) 0xff , out )"		4811354	0					
ANR	4811561	Callee	putc		4811354	0					
ANR	4811562	Identifier	putc		4811354	0					
ANR	4811563	ArgumentList	( char ) 0xff		4811354	1					
ANR	4811564	Argument	( char ) 0xff		4811354	0					
ANR	4811565	CastExpression	( char ) 0xff		4811354	0					
ANR	4811566	CastTarget	char		4811354	0					
ANR	4811567	PrimaryExpression	0xff		4811354	1					
ANR	4811568	Argument	out		4811354	1					
ANR	4811569	Identifier	out		4811354	0					
ANR	4811570	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4709:12:170628:170649	4811354	2	True				
ANR	4811571	CallExpression	"putc ( ( char ) 0x00 , out )"		4811354	0					
ANR	4811572	Callee	putc		4811354	0					
ANR	4811573	Identifier	putc		4811354	0					
ANR	4811574	ArgumentList	( char ) 0x00		4811354	1					
ANR	4811575	Argument	( char ) 0x00		4811354	0					
ANR	4811576	CastExpression	( char ) 0x00		4811354	0					
ANR	4811577	CastTarget	char		4811354	0					
ANR	4811578	PrimaryExpression	0x00		4811354	1					
ANR	4811579	Argument	out		4811354	1					
ANR	4811580	Identifier	out		4811354	0					
ANR	4811581	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4709:35:170651:170672	4811354	3	True				
ANR	4811582	CallExpression	"putc ( ( char ) 0xff , out )"		4811354	0					
ANR	4811583	Callee	putc		4811354	0					
ANR	4811584	Identifier	putc		4811354	0					
ANR	4811585	ArgumentList	( char ) 0xff		4811354	1					
ANR	4811586	Argument	( char ) 0xff		4811354	0					
ANR	4811587	CastExpression	( char ) 0xff		4811354	0					
ANR	4811588	CastTarget	char		4811354	0					
ANR	4811589	PrimaryExpression	0xff		4811354	1					
ANR	4811590	Argument	out		4811354	1					
ANR	4811591	Identifier	out		4811354	0					
ANR	4811592	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4710:12:170686:170707	4811354	4	True				
ANR	4811593	CallExpression	"putc ( ( char ) 0x00 , out )"		4811354	0					
ANR	4811594	Callee	putc		4811354	0					
ANR	4811595	Identifier	putc		4811354	0					
ANR	4811596	ArgumentList	( char ) 0x00		4811354	1					
ANR	4811597	Argument	( char ) 0x00		4811354	0					
ANR	4811598	CastExpression	( char ) 0x00		4811354	0					
ANR	4811599	CastTarget	char		4811354	0					
ANR	4811600	PrimaryExpression	0x00		4811354	1					
ANR	4811601	Argument	out		4811354	1					
ANR	4811602	Identifier	out		4811354	0					
ANR	4811603	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4710:35:170709:170730	4811354	5	True				
ANR	4811604	CallExpression	"putc ( ( char ) 0xff , out )"		4811354	0					
ANR	4811605	Callee	putc		4811354	0					
ANR	4811606	Identifier	putc		4811354	0					
ANR	4811607	ArgumentList	( char ) 0xff		4811354	1					
ANR	4811608	Argument	( char ) 0xff		4811354	0					
ANR	4811609	CastExpression	( char ) 0xff		4811354	0					
ANR	4811610	CastTarget	char		4811354	0					
ANR	4811611	PrimaryExpression	0xff		4811354	1					
ANR	4811612	Argument	out		4811354	1					
ANR	4811613	Identifier	out		4811354	0					
ANR	4811614	ElseStatement	else		4811354	0					
ANR	4811615	CompoundStatement		50:16:1131:1131	4811354	0					
ANR	4811616	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4712:12:170762:170783	4811354	0	True				
ANR	4811617	CallExpression	"putc ( ( char ) 0xff , out )"		4811354	0					
ANR	4811618	Callee	putc		4811354	0					
ANR	4811619	Identifier	putc		4811354	0					
ANR	4811620	ArgumentList	( char ) 0xff		4811354	1					
ANR	4811621	Argument	( char ) 0xff		4811354	0					
ANR	4811622	CastExpression	( char ) 0xff		4811354	0					
ANR	4811623	CastTarget	char		4811354	0					
ANR	4811624	PrimaryExpression	0xff		4811354	1					
ANR	4811625	Argument	out		4811354	1					
ANR	4811626	Identifier	out		4811354	0					
ANR	4811627	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4712:35:170785:170806	4811354	1	True				
ANR	4811628	CallExpression	"putc ( ( char ) 0x00 , out )"		4811354	0					
ANR	4811629	Callee	putc		4811354	0					
ANR	4811630	Identifier	putc		4811354	0					
ANR	4811631	ArgumentList	( char ) 0x00		4811354	1					
ANR	4811632	Argument	( char ) 0x00		4811354	0					
ANR	4811633	CastExpression	( char ) 0x00		4811354	0					
ANR	4811634	CastTarget	char		4811354	0					
ANR	4811635	PrimaryExpression	0x00		4811354	1					
ANR	4811636	Argument	out		4811354	1					
ANR	4811637	Identifier	out		4811354	0					
ANR	4811638	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4713:12:170820:170841	4811354	2	True				
ANR	4811639	CallExpression	"putc ( ( char ) 0xff , out )"		4811354	0					
ANR	4811640	Callee	putc		4811354	0					
ANR	4811641	Identifier	putc		4811354	0					
ANR	4811642	ArgumentList	( char ) 0xff		4811354	1					
ANR	4811643	Argument	( char ) 0xff		4811354	0					
ANR	4811644	CastExpression	( char ) 0xff		4811354	0					
ANR	4811645	CastTarget	char		4811354	0					
ANR	4811646	PrimaryExpression	0xff		4811354	1					
ANR	4811647	Argument	out		4811354	1					
ANR	4811648	Identifier	out		4811354	0					
ANR	4811649	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4713:35:170843:170864	4811354	3	True				
ANR	4811650	CallExpression	"putc ( ( char ) 0x00 , out )"		4811354	0					
ANR	4811651	Callee	putc		4811354	0					
ANR	4811652	Identifier	putc		4811354	0					
ANR	4811653	ArgumentList	( char ) 0x00		4811354	1					
ANR	4811654	Argument	( char ) 0x00		4811354	0					
ANR	4811655	CastExpression	( char ) 0x00		4811354	0					
ANR	4811656	CastTarget	char		4811354	0					
ANR	4811657	PrimaryExpression	0x00		4811354	1					
ANR	4811658	Argument	out		4811354	1					
ANR	4811659	Identifier	out		4811354	0					
ANR	4811660	ExpressionStatement	"putc ( ( char ) 0xff , out )"	4714:12:170878:170899	4811354	4	True				
ANR	4811661	CallExpression	"putc ( ( char ) 0xff , out )"		4811354	0					
ANR	4811662	Callee	putc		4811354	0					
ANR	4811663	Identifier	putc		4811354	0					
ANR	4811664	ArgumentList	( char ) 0xff		4811354	1					
ANR	4811665	Argument	( char ) 0xff		4811354	0					
ANR	4811666	CastExpression	( char ) 0xff		4811354	0					
ANR	4811667	CastTarget	char		4811354	0					
ANR	4811668	PrimaryExpression	0xff		4811354	1					
ANR	4811669	Argument	out		4811354	1					
ANR	4811670	Identifier	out		4811354	0					
ANR	4811671	ExpressionStatement	"putc ( ( char ) 0x00 , out )"	4714:35:170901:170922	4811354	5	True				
ANR	4811672	CallExpression	"putc ( ( char ) 0x00 , out )"		4811354	0					
ANR	4811673	Callee	putc		4811354	0					
ANR	4811674	Identifier	putc		4811354	0					
ANR	4811675	ArgumentList	( char ) 0x00		4811354	1					
ANR	4811676	Argument	( char ) 0x00		4811354	0					
ANR	4811677	CastExpression	( char ) 0x00		4811354	0					
ANR	4811678	CastTarget	char		4811354	0					
ANR	4811679	PrimaryExpression	0x00		4811354	1					
ANR	4811680	Argument	out		4811354	1					
ANR	4811681	Identifier	out		4811354	0					
ANR	4811682	ElseStatement	else		4811354	0					
ANR	4811683	IfStatement	if ( 3 == upd -> ncomp )		4811354	0					
ANR	4811684	Condition	3 == upd -> ncomp	4717:16:170952:170966	4811354	0	True				
ANR	4811685	EqualityExpression	3 == upd -> ncomp		4811354	0		==			
ANR	4811686	PrimaryExpression	3		4811354	0					
ANR	4811687	PtrMemberAccess	upd -> ncomp		4811354	1					
ANR	4811688	Identifier	upd		4811354	0					
ANR	4811689	Identifier	ncomp		4811354	1					
ANR	4811690	CompoundStatement		57:9:1384:1391	4811354	1					
ANR	4811691	IdentifierDeclStatement	int rgb ;	4718:9:171001:171008	4811354	0	True				
ANR	4811692	IdentifierDecl	rgb		4811354	0					
ANR	4811693	IdentifierDeclType	int		4811354	0					
ANR	4811694	Identifier	rgb		4811354	1					
ANR	4811695	ForStatement	for ( rgb = 0 ; rgb < 3 ; ++ rgb )		4811354	1					
ANR	4811696	ForInit	rgb = 0 ;	4720:14:171025:171032	4811354	0	True				
ANR	4811697	AssignmentExpression	rgb = 0		4811354	0		=			
ANR	4811698	Identifier	rgb		4811354	0					
ANR	4811699	PrimaryExpression	0		4811354	1					
ANR	4811700	Condition	rgb < 3	4720:23:171034:171040	4811354	1	True				
ANR	4811701	RelationalExpression	rgb < 3		4811354	0		<			
ANR	4811702	Identifier	rgb		4811354	0					
ANR	4811703	PrimaryExpression	3		4811354	1					
ANR	4811704	UnaryExpression	++ rgb	4720:32:171043:171047	4811354	2	True				
ANR	4811705	IncDec	++		4811354	0					
ANR	4811706	Identifier	rgb		4811354	1					
ANR	4811707	CompoundStatement		60:12:1447:1456	4811354	3					
ANR	4811708	IdentifierDeclStatement	int entry ;	4721:12:171064:171073	4811354	0	True				
ANR	4811709	IdentifierDecl	entry		4811354	0					
ANR	4811710	IdentifierDeclType	int		4811354	0					
ANR	4811711	Identifier	entry		4811354	1					
ANR	4811712	ForStatement	for ( entry = 0 ; entry < 8 ; ++ entry )		4811354	1					
ANR	4811713	ForInit	entry = 0 ;	4722:16:171091:171100	4811354	0	True				
ANR	4811714	AssignmentExpression	entry = 0		4811354	0		=			
ANR	4811715	Identifier	entry		4811354	0					
ANR	4811716	PrimaryExpression	0		4811354	1					
ANR	4811717	Condition	entry < 8	4722:27:171102:171110	4811354	1	True				
ANR	4811718	RelationalExpression	entry < 8		4811354	0		<			
ANR	4811719	Identifier	entry		4811354	0					
ANR	4811720	PrimaryExpression	8		4811354	1					
ANR	4811721	UnaryExpression	++ entry	4722:38:171113:171119	4811354	2	True				
ANR	4811722	IncDec	++		4811354	0					
ANR	4811723	Identifier	entry		4811354	1					
ANR	4811724	CompoundStatement		62:15:1522:1567	4811354	3					
ANR	4811725	IdentifierDeclStatement	byte xval = upd -> cmap [ rgb ] . rise ? 0x00 : 0xff ;	4723:15:171139:171184	4811354	0	True				
ANR	4811726	IdentifierDecl	xval = upd -> cmap [ rgb ] . rise ? 0x00 : 0xff		4811354	0					
ANR	4811727	IdentifierDeclType	byte		4811354	0					
ANR	4811728	Identifier	xval		4811354	1					
ANR	4811729	AssignmentExpression	xval = upd -> cmap [ rgb ] . rise ? 0x00 : 0xff		4811354	2		=			
ANR	4811730	Identifier	xval		4811354	0					
ANR	4811731	ConditionalExpression	upd -> cmap [ rgb ] . rise ? 0x00 : 0xff		4811354	1					
ANR	4811732	Condition	upd -> cmap [ rgb ] . rise		4811354	0					
ANR	4811733	MemberAccess	upd -> cmap [ rgb ] . rise		4811354	0					
ANR	4811734	ArrayIndexing	upd -> cmap [ rgb ]		4811354	0					
ANR	4811735	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811736	Identifier	upd		4811354	0					
ANR	4811737	Identifier	cmap		4811354	1					
ANR	4811738	Identifier	rgb		4811354	1					
ANR	4811739	Identifier	rise		4811354	1					
ANR	4811740	PrimaryExpression	0x00		4811354	1					
ANR	4811741	PrimaryExpression	0xff		4811354	2					
ANR	4811742	IfStatement	if ( entry & ( 1 << upd -> cmap [ rgb ] . comp ) )		4811354	1					
ANR	4811743	Condition	entry & ( 1 << upd -> cmap [ rgb ] . comp )	4724:18:171204:171235	4811354	0	True				
ANR	4811744	BitAndExpression	entry & ( 1 << upd -> cmap [ rgb ] . comp )		4811354	0		&			
ANR	4811745	Identifier	entry		4811354	0					
ANR	4811746	ShiftExpression	1 << upd -> cmap [ rgb ] . comp		4811354	1		<<			
ANR	4811747	PrimaryExpression	1		4811354	0					
ANR	4811748	MemberAccess	upd -> cmap [ rgb ] . comp		4811354	1					
ANR	4811749	ArrayIndexing	upd -> cmap [ rgb ]		4811354	0					
ANR	4811750	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811751	Identifier	upd		4811354	0					
ANR	4811752	Identifier	cmap		4811354	1					
ANR	4811753	Identifier	rgb		4811354	1					
ANR	4811754	Identifier	comp		4811354	1					
ANR	4811755	ExpressionStatement	xval ^= 0xff	4724:52:171238:171250	4811354	1	True				
ANR	4811756	AssignmentExpression	xval ^= 0xff		4811354	0		^=			
ANR	4811757	Identifier	xval		4811354	0					
ANR	4811758	PrimaryExpression	0xff		4811354	1					
ANR	4811759	ExpressionStatement	"putc ( xval , out )"	4725:15:171267:171281	4811354	2	True				
ANR	4811760	CallExpression	"putc ( xval , out )"		4811354	0					
ANR	4811761	Callee	putc		4811354	0					
ANR	4811762	Identifier	putc		4811354	0					
ANR	4811763	ArgumentList	xval		4811354	1					
ANR	4811764	Argument	xval		4811354	0					
ANR	4811765	Identifier	xval		4811354	0					
ANR	4811766	Argument	out		4811354	1					
ANR	4811767	Identifier	out		4811354	0					
ANR	4811768	ElseStatement	else		4811354	0					
ANR	4811769	CompoundStatement		68:9:1742:1749	4811354	0					
ANR	4811770	IdentifierDeclStatement	int rgb ;	4729:9:171359:171366	4811354	0	True				
ANR	4811771	IdentifierDecl	rgb		4811354	0					
ANR	4811772	IdentifierDeclType	int		4811354	0					
ANR	4811773	Identifier	rgb		4811354	1					
ANR	4811774	ForStatement	for ( rgb = 16 ; 0 <= rgb ; rgb -= 8 )		4811354	1					
ANR	4811775	ForInit	rgb = 16 ;	4731:13:171382:171390	4811354	0	True				
ANR	4811776	AssignmentExpression	rgb = 16		4811354	0		=			
ANR	4811777	Identifier	rgb		4811354	0					
ANR	4811778	PrimaryExpression	16		4811354	1					
ANR	4811779	Condition	0 <= rgb	4731:23:171392:171399	4811354	1	True				
ANR	4811780	RelationalExpression	0 <= rgb		4811354	0		<=			
ANR	4811781	PrimaryExpression	0		4811354	0					
ANR	4811782	Identifier	rgb		4811354	1					
ANR	4811783	AssignmentExpression	rgb -= 8	4731:33:171402:171409	4811354	2	True	-=			
ANR	4811784	Identifier	rgb		4811354	0					
ANR	4811785	PrimaryExpression	8		4811354	1					
ANR	4811786	CompoundStatement		71:12:1809:1818	4811354	3					
ANR	4811787	IdentifierDeclStatement	int entry ;	4732:12:171426:171435	4811354	0	True				
ANR	4811788	IdentifierDecl	entry		4811354	0					
ANR	4811789	IdentifierDeclType	int		4811354	0					
ANR	4811790	Identifier	entry		4811354	1					
ANR	4811791	ForStatement	for ( entry = 0 ; entry < 16 ; ++ entry )		4811354	1					
ANR	4811792	ForInit	entry = 0 ;	4733:16:171453:171462	4811354	0	True				
ANR	4811793	AssignmentExpression	entry = 0		4811354	0		=			
ANR	4811794	Identifier	entry		4811354	0					
ANR	4811795	PrimaryExpression	0		4811354	1					
ANR	4811796	Condition	entry < 16	4733:27:171464:171473	4811354	1	True				
ANR	4811797	RelationalExpression	entry < 16		4811354	0		<			
ANR	4811798	Identifier	entry		4811354	0					
ANR	4811799	PrimaryExpression	16		4811354	1					
ANR	4811800	UnaryExpression	++ entry	4733:39:171476:171482	4811354	2	True				
ANR	4811801	IncDec	++		4811354	0					
ANR	4811802	Identifier	entry		4811354	1					
ANR	4811803	CompoundStatement		73:15:1885:1904	4811354	3					
ANR	4811804	IdentifierDeclStatement	uint32_t rgbval = 0 ;	4734:15:171502:171521	4811354	0	True				
ANR	4811805	IdentifierDecl	rgbval = 0		4811354	0					
ANR	4811806	IdentifierDeclType	uint32_t		4811354	0					
ANR	4811807	Identifier	rgbval		4811354	1					
ANR	4811808	AssignmentExpression	rgbval = 0		4811354	2		=			
ANR	4811809	Identifier	rgbval		4811354	0					
ANR	4811810	PrimaryExpression	0		4811354	1					
ANR	4811811	IfStatement	if ( entry & ( 1 << upd -> cmap [ 0 ] . comp ) )		4811354	1					
ANR	4811812	Condition	entry & ( 1 << upd -> cmap [ 0 ] . comp )	4736:18:171542:171571	4811354	0	True				
ANR	4811813	BitAndExpression	entry & ( 1 << upd -> cmap [ 0 ] . comp )		4811354	0		&			
ANR	4811814	Identifier	entry		4811354	0					
ANR	4811815	ShiftExpression	1 << upd -> cmap [ 0 ] . comp		4811354	1		<<			
ANR	4811816	PrimaryExpression	1		4811354	0					
ANR	4811817	MemberAccess	upd -> cmap [ 0 ] . comp		4811354	1					
ANR	4811818	ArrayIndexing	upd -> cmap [ 0 ]		4811354	0					
ANR	4811819	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811820	Identifier	upd		4811354	0					
ANR	4811821	Identifier	cmap		4811354	1					
ANR	4811822	PrimaryExpression	0		4811354	1					
ANR	4811823	Identifier	comp		4811354	1					
ANR	4811824	CompoundStatement		75:50:1957:1957	4811354	1					
ANR	4811825	ExpressionStatement	rgbval = 0xffffff	4738:18:171595:171612	4811354	0	True				
ANR	4811826	AssignmentExpression	rgbval = 0xffffff		4811354	0		=			
ANR	4811827	Identifier	rgbval		4811354	0					
ANR	4811828	PrimaryExpression	0xffffff		4811354	1					
ANR	4811829	ElseStatement	else		4811354	0					
ANR	4811830	CompoundStatement		79:22:2020:2020	4811354	0					
ANR	4811831	IfStatement	if ( entry & ( 1 << upd -> cmap [ 1 ] . comp ) )		4811354	0					
ANR	4811832	Condition	entry & ( 1 << upd -> cmap [ 1 ] . comp )	4742:21:171661:171690	4811354	0	True				
ANR	4811833	BitAndExpression	entry & ( 1 << upd -> cmap [ 1 ] . comp )		4811354	0		&			
ANR	4811834	Identifier	entry		4811354	0					
ANR	4811835	ShiftExpression	1 << upd -> cmap [ 1 ] . comp		4811354	1		<<			
ANR	4811836	PrimaryExpression	1		4811354	0					
ANR	4811837	MemberAccess	upd -> cmap [ 1 ] . comp		4811354	1					
ANR	4811838	ArrayIndexing	upd -> cmap [ 1 ]		4811354	0					
ANR	4811839	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811840	Identifier	upd		4811354	0					
ANR	4811841	Identifier	cmap		4811354	1					
ANR	4811842	PrimaryExpression	1		4811354	1					
ANR	4811843	Identifier	comp		4811354	1					
ANR	4811844	ExpressionStatement	rgbval |= 0xff0000	4742:53:171693:171711	4811354	1	True				
ANR	4811845	AssignmentExpression	rgbval |= 0xff0000		4811354	0		|=			
ANR	4811846	Identifier	rgbval		4811354	0					
ANR	4811847	PrimaryExpression	0xff0000		4811354	1					
ANR	4811848	IfStatement	if ( entry & ( 1 << upd -> cmap [ 2 ] . comp ) )		4811354	1					
ANR	4811849	Condition	entry & ( 1 << upd -> cmap [ 2 ] . comp )	4743:21:171734:171763	4811354	0	True				
ANR	4811850	BitAndExpression	entry & ( 1 << upd -> cmap [ 2 ] . comp )		4811354	0		&			
ANR	4811851	Identifier	entry		4811354	0					
ANR	4811852	ShiftExpression	1 << upd -> cmap [ 2 ] . comp		4811354	1		<<			
ANR	4811853	PrimaryExpression	1		4811354	0					
ANR	4811854	MemberAccess	upd -> cmap [ 2 ] . comp		4811354	1					
ANR	4811855	ArrayIndexing	upd -> cmap [ 2 ]		4811354	0					
ANR	4811856	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811857	Identifier	upd		4811354	0					
ANR	4811858	Identifier	cmap		4811354	1					
ANR	4811859	PrimaryExpression	2		4811354	1					
ANR	4811860	Identifier	comp		4811354	1					
ANR	4811861	ExpressionStatement	rgbval |= 0x00ff00	4743:53:171766:171784	4811354	1	True				
ANR	4811862	AssignmentExpression	rgbval |= 0x00ff00		4811354	0		|=			
ANR	4811863	Identifier	rgbval		4811354	0					
ANR	4811864	PrimaryExpression	0x00ff00		4811354	1					
ANR	4811865	IfStatement	if ( entry & ( 1 << upd -> cmap [ 3 ] . comp ) )		4811354	2					
ANR	4811866	Condition	entry & ( 1 << upd -> cmap [ 3 ] . comp )	4744:21:171807:171836	4811354	0	True				
ANR	4811867	BitAndExpression	entry & ( 1 << upd -> cmap [ 3 ] . comp )		4811354	0		&			
ANR	4811868	Identifier	entry		4811354	0					
ANR	4811869	ShiftExpression	1 << upd -> cmap [ 3 ] . comp		4811354	1		<<			
ANR	4811870	PrimaryExpression	1		4811354	0					
ANR	4811871	MemberAccess	upd -> cmap [ 3 ] . comp		4811354	1					
ANR	4811872	ArrayIndexing	upd -> cmap [ 3 ]		4811354	0					
ANR	4811873	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811874	Identifier	upd		4811354	0					
ANR	4811875	Identifier	cmap		4811354	1					
ANR	4811876	PrimaryExpression	3		4811354	1					
ANR	4811877	Identifier	comp		4811354	1					
ANR	4811878	ExpressionStatement	rgbval |= 0x0000ff	4744:53:171839:171857	4811354	1	True				
ANR	4811879	AssignmentExpression	rgbval |= 0x0000ff		4811354	0		|=			
ANR	4811880	Identifier	rgbval		4811354	0					
ANR	4811881	PrimaryExpression	0x0000ff		4811354	1					
ANR	4811882	IfStatement	if ( ! upd -> cmap [ 1 ] . rise )		4811354	2					
ANR	4811883	Condition	! upd -> cmap [ 1 ] . rise	4747:18:171895:171912	4811354	0	True				
ANR	4811884	UnaryOperationExpression	! upd -> cmap [ 1 ] . rise		4811354	0					
ANR	4811885	UnaryOperator	!		4811354	0					
ANR	4811886	MemberAccess	upd -> cmap [ 1 ] . rise		4811354	1					
ANR	4811887	ArrayIndexing	upd -> cmap [ 1 ]		4811354	0					
ANR	4811888	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811889	Identifier	upd		4811354	0					
ANR	4811890	Identifier	cmap		4811354	1					
ANR	4811891	PrimaryExpression	1		4811354	1					
ANR	4811892	Identifier	rise		4811354	1					
ANR	4811893	ExpressionStatement	rgbval ^= 0xff0000	4747:38:171915:171933	4811354	1	True				
ANR	4811894	AssignmentExpression	rgbval ^= 0xff0000		4811354	0		^=			
ANR	4811895	Identifier	rgbval		4811354	0					
ANR	4811896	PrimaryExpression	0xff0000		4811354	1					
ANR	4811897	IfStatement	if ( ! upd -> cmap [ 2 ] . rise )		4811354	3					
ANR	4811898	Condition	! upd -> cmap [ 2 ] . rise	4748:18:171953:171970	4811354	0	True				
ANR	4811899	UnaryOperationExpression	! upd -> cmap [ 2 ] . rise		4811354	0					
ANR	4811900	UnaryOperator	!		4811354	0					
ANR	4811901	MemberAccess	upd -> cmap [ 2 ] . rise		4811354	1					
ANR	4811902	ArrayIndexing	upd -> cmap [ 2 ]		4811354	0					
ANR	4811903	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811904	Identifier	upd		4811354	0					
ANR	4811905	Identifier	cmap		4811354	1					
ANR	4811906	PrimaryExpression	2		4811354	1					
ANR	4811907	Identifier	rise		4811354	1					
ANR	4811908	ExpressionStatement	rgbval ^= 0x00ff00	4748:38:171973:171991	4811354	1	True				
ANR	4811909	AssignmentExpression	rgbval ^= 0x00ff00		4811354	0		^=			
ANR	4811910	Identifier	rgbval		4811354	0					
ANR	4811911	PrimaryExpression	0x00ff00		4811354	1					
ANR	4811912	IfStatement	if ( ! upd -> cmap [ 3 ] . rise )		4811354	4					
ANR	4811913	Condition	! upd -> cmap [ 3 ] . rise	4749:18:172011:172028	4811354	0	True				
ANR	4811914	UnaryOperationExpression	! upd -> cmap [ 3 ] . rise		4811354	0					
ANR	4811915	UnaryOperator	!		4811354	0					
ANR	4811916	MemberAccess	upd -> cmap [ 3 ] . rise		4811354	1					
ANR	4811917	ArrayIndexing	upd -> cmap [ 3 ]		4811354	0					
ANR	4811918	PtrMemberAccess	upd -> cmap		4811354	0					
ANR	4811919	Identifier	upd		4811354	0					
ANR	4811920	Identifier	cmap		4811354	1					
ANR	4811921	PrimaryExpression	3		4811354	1					
ANR	4811922	Identifier	rise		4811354	1					
ANR	4811923	ExpressionStatement	rgbval ^= 0x0000ff	4749:38:172031:172049	4811354	1	True				
ANR	4811924	AssignmentExpression	rgbval ^= 0x0000ff		4811354	0		^=			
ANR	4811925	Identifier	rgbval		4811354	0					
ANR	4811926	PrimaryExpression	0x0000ff		4811354	1					
ANR	4811927	IfStatement	if ( ! ( upd -> choice [ C_MAPPER ] == MAP_RGBW ) )		4811354	5					
ANR	4811928	Condition	! ( upd -> choice [ C_MAPPER ] == MAP_RGBW )	4751:18:172070:172105	4811354	0	True				
ANR	4811929	UnaryOperationExpression	! ( upd -> choice [ C_MAPPER ] == MAP_RGBW )		4811354	0					
ANR	4811930	UnaryOperator	!		4811354	0					
ANR	4811931	EqualityExpression	upd -> choice [ C_MAPPER ] == MAP_RGBW		4811354	1		==			
ANR	4811932	ArrayIndexing	upd -> choice [ C_MAPPER ]		4811354	0					
ANR	4811933	PtrMemberAccess	upd -> choice		4811354	0					
ANR	4811934	Identifier	upd		4811354	0					
ANR	4811935	Identifier	choice		4811354	1					
ANR	4811936	Identifier	C_MAPPER		4811354	1					
ANR	4811937	Identifier	MAP_RGBW		4811354	1					
ANR	4811938	ExpressionStatement	rgbval ^= 0xffffff	4751:56:172108:172126	4811354	1	True				
ANR	4811939	AssignmentExpression	rgbval ^= 0xffffff		4811354	0		^=			
ANR	4811940	Identifier	rgbval		4811354	0					
ANR	4811941	PrimaryExpression	0xffffff		4811354	1					
ANR	4811942	ExpressionStatement	"putc ( ( rgbval >> rgb ) & 255 , out )"	4753:15:172144:172171	4811354	6	True				
ANR	4811943	CallExpression	"putc ( ( rgbval >> rgb ) & 255 , out )"		4811354	0					
ANR	4811944	Callee	putc		4811354	0					
ANR	4811945	Identifier	putc		4811354	0					
ANR	4811946	ArgumentList	( rgbval >> rgb ) & 255		4811354	1					
ANR	4811947	Argument	( rgbval >> rgb ) & 255		4811354	0					
ANR	4811948	BitAndExpression	( rgbval >> rgb ) & 255		4811354	0		&			
ANR	4811949	ShiftExpression	rgbval >> rgb		4811354	0		>>			
ANR	4811950	Identifier	rgbval		4811354	0					
ANR	4811951	Identifier	rgb		4811354	1					
ANR	4811952	PrimaryExpression	255		4811354	1					
ANR	4811953	Argument	out		4811354	1					
ANR	4811954	Identifier	out		4811354	0					
ANR	4811955	ExpressionStatement	"memset ( upd -> outbuf , 0 , upd -> noutbuf )"	4758:3:172214:172248	4811354	1	True				
ANR	4811956	CallExpression	"memset ( upd -> outbuf , 0 , upd -> noutbuf )"		4811354	0					
ANR	4811957	Callee	memset		4811354	0					
ANR	4811958	Identifier	memset		4811354	0					
ANR	4811959	ArgumentList	upd -> outbuf		4811354	1					
ANR	4811960	Argument	upd -> outbuf		4811354	0					
ANR	4811961	PtrMemberAccess	upd -> outbuf		4811354	0					
ANR	4811962	Identifier	upd		4811354	0					
ANR	4811963	Identifier	outbuf		4811354	1					
ANR	4811964	Argument	0		4811354	1					
ANR	4811965	PrimaryExpression	0		4811354	0					
ANR	4811966	Argument	upd -> noutbuf		4811354	2					
ANR	4811967	PtrMemberAccess	upd -> noutbuf		4811354	0					
ANR	4811968	Identifier	upd		4811354	0					
ANR	4811969	Identifier	noutbuf		4811354	1					
ANR	4811970	ReturnStatement	return 0 ;	4760:3:172254:172262	4811354	2	True				
ANR	4811971	PrimaryExpression	0		4811354	0					
ANR	4811972	ReturnType	static int		4811354	1					
ANR	4811973	Identifier	upd_start_rascomp		4811354	2					
ANR	4811974	ParameterList	"upd_p upd , FILE * out"		4811354	3					
ANR	4811975	Parameter	upd_p upd	4662:18:169594:169602	4811354	0	True				
ANR	4811976	ParameterType	upd_p		4811354	0					
ANR	4811977	Identifier	upd		4811354	1					
ANR	4811978	Parameter	FILE * out	4662:29:169605:169613	4811354	1	True				
ANR	4811979	ParameterType	FILE *		4811354	0					
ANR	4811980	Identifier	out		4811354	1					
ANR	4811981	CFGEntryNode	ENTRY		4811354		True				
ANR	4811982	CFGExitNode	EXIT		4811354		True				
ANR	4811983	Symbol	C_MAPPER		4811354						
ANR	4811984	Symbol	upd -> pheight		4811354						
ANR	4811985	Symbol	upd -> strings [ S_BEGIN ] . size		4811354						
ANR	4811986	Symbol	* S_BEGIN		4811354						
ANR	4811987	Symbol	upd -> strings		4811354						
ANR	4811988	Symbol	* upd -> cmap		4811354						
ANR	4811989	Symbol	upd -> cmap [ 1 ] . comp		4811354						
ANR	4811990	Symbol	rgb		4811354						
ANR	4811991	Symbol	upd -> ncomp		4811354						
ANR	4811992	Symbol	out		4811354						
ANR	4811993	Symbol	upd -> cmap		4811354						
ANR	4811994	Symbol	* upd -> choice		4811354						
ANR	4811995	Symbol	xval		4811354						
ANR	4811996	Symbol	* upd		4811354						
ANR	4811997	Symbol	upd -> cmap [ 1 ] . rise		4811354						
ANR	4811998	Symbol	rgbval		4811354						
ANR	4811999	Symbol	* comp		4811354						
ANR	4812000	Symbol	upd -> cmap [ 3 ] . rise		4811354						
ANR	4812001	Symbol	S_BEGIN		4811354						
ANR	4812002	Symbol	* upd -> valptr		4811354						
ANR	4812003	Symbol	* upd -> strings		4811354						
ANR	4812004	Symbol	upd -> valptr		4811354						
ANR	4812005	Symbol	val		4811354						
ANR	4812006	Symbol	comp		4811354						
ANR	4812007	Symbol	upd -> cmap [ rgb ] . comp		4811354						
ANR	4812008	Symbol	* C_MAPPER		4811354						
ANR	4812009	Symbol	upd -> cmap [ 3 ] . comp		4811354						
ANR	4812010	Symbol	upd		4811354						
ANR	4812011	Symbol	upd -> cmap [ comp -> cmap ] . rise		4811354						
ANR	4812012	Symbol	upd -> choice		4811354						
ANR	4812013	Symbol	upd -> cmap [ 0 ] . comp		4811354						
ANR	4812014	Symbol	* * comp		4811354						
ANR	4812015	Symbol	entry		4811354						
ANR	4812016	Symbol	upd -> cmap [ 2 ] . comp		4811354						
ANR	4812017	Symbol	upd -> noutbuf		4811354						
ANR	4812018	Symbol	upd -> cmap [ rgb ] . rise		4811354						
ANR	4812019	Symbol	* rgb		4811354						
ANR	4812020	Symbol	comp -> cmap		4811354						
ANR	4812021	Symbol	MAP_RGBW		4811354						
ANR	4812022	Symbol	upd -> outbuf		4811354						
ANR	4812023	Symbol	* * upd		4811354						
ANR	4812024	Symbol	upd -> pwidth		4811354						
ANR	4812025	Symbol	upd -> cmap [ 2 ] . rise		4811354						
ANR	4812026	Symbol	* comp -> cmap		4811354						
ANR	4812027	Function	upd_rascomp	4766:0:172489:173564							
ANR	4812028	FunctionDef	"upd_rascomp (upd_p upd , FILE * out)"		4812027	0					
ANR	4812029	CompoundStatement		4767:34:172534:173564	4812027	0					
ANR	4812030	IdentifierDeclStatement	updscan_p scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ] ;	4768:3:172539:172593	4812027	0	True				
ANR	4812031	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		4812027	0					
ANR	4812032	IdentifierDeclType	updscan_p		4812027	0					
ANR	4812033	Identifier	scan		4812027	1					
ANR	4812034	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		4812027	2		=			
ANR	4812035	Identifier	scan		4812027	0					
ANR	4812036	ArrayIndexing	upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		4812027	1					
ANR	4812037	PtrMemberAccess	upd -> scnbuf		4812027	0					
ANR	4812038	Identifier	upd		4812027	0					
ANR	4812039	Identifier	scnbuf		4812027	1					
ANR	4812040	BitAndExpression	upd -> yscan & upd -> scnmsk		4812027	1		&			
ANR	4812041	PtrMemberAccess	upd -> yscan		4812027	0					
ANR	4812042	Identifier	upd		4812027	0					
ANR	4812043	Identifier	yscan		4812027	1					
ANR	4812044	PtrMemberAccess	upd -> scnmsk		4812027	1					
ANR	4812045	Identifier	upd		4812027	0					
ANR	4812046	Identifier	scnmsk		4812027	1					
ANR	4812047	IdentifierDeclStatement	uint bits = upd -> pwidth ;	4769:3:172598:172621	4812027	1	True				
ANR	4812048	IdentifierDecl	bits = upd -> pwidth		4812027	0					
ANR	4812049	IdentifierDeclType	uint		4812027	0					
ANR	4812050	Identifier	bits		4812027	1					
ANR	4812051	AssignmentExpression	bits = upd -> pwidth		4812027	2		=			
ANR	4812052	Identifier	bits		4812027	0					
ANR	4812053	PtrMemberAccess	upd -> pwidth		4812027	1					
ANR	4812054	Identifier	upd		4812027	0					
ANR	4812055	Identifier	pwidth		4812027	1					
ANR	4812056	IfStatement	if ( 1 == upd -> ncomp )		4812027	2					
ANR	4812057	Condition	1 == upd -> ncomp	4771:6:172630:172644	4812027	0	True				
ANR	4812058	EqualityExpression	1 == upd -> ncomp		4812027	0		==			
ANR	4812059	PrimaryExpression	1		4812027	0					
ANR	4812060	PtrMemberAccess	upd -> ncomp		4812027	1					
ANR	4812061	Identifier	upd		4812027	0					
ANR	4812062	Identifier	ncomp		4812027	1					
ANR	4812063	CompoundStatement		6:6:141:152	4812027	1					
ANR	4812064	IdentifierDeclStatement	uint nbytes ;	4772:6:172676:172687	4812027	0	True				
ANR	4812065	IdentifierDecl	nbytes		4812027	0					
ANR	4812066	IdentifierDeclType	uint		4812027	0					
ANR	4812067	Identifier	nbytes		4812027	1					
ANR	4812068	ExpressionStatement	nbytes = ( bits + 7 ) >> 3	4774:6:172696:172716	4812027	1	True				
ANR	4812069	AssignmentExpression	nbytes = ( bits + 7 ) >> 3		4812027	0		=			
ANR	4812070	Identifier	nbytes		4812027	0					
ANR	4812071	ShiftExpression	( bits + 7 ) >> 3		4812027	1		>>			
ANR	4812072	AdditiveExpression	bits + 7		4812027	0		+			
ANR	4812073	Identifier	bits		4812027	0					
ANR	4812074	PrimaryExpression	7		4812027	1					
ANR	4812075	PrimaryExpression	3		4812027	1					
ANR	4812076	ExpressionStatement	"memcpy ( upd -> outbuf , scan -> bytes , nbytes )"	4775:6:172724:172762	4812027	2	True				
ANR	4812077	CallExpression	"memcpy ( upd -> outbuf , scan -> bytes , nbytes )"		4812027	0					
ANR	4812078	Callee	memcpy		4812027	0					
ANR	4812079	Identifier	memcpy		4812027	0					
ANR	4812080	ArgumentList	upd -> outbuf		4812027	1					
ANR	4812081	Argument	upd -> outbuf		4812027	0					
ANR	4812082	PtrMemberAccess	upd -> outbuf		4812027	0					
ANR	4812083	Identifier	upd		4812027	0					
ANR	4812084	Identifier	outbuf		4812027	1					
ANR	4812085	Argument	scan -> bytes		4812027	1					
ANR	4812086	PtrMemberAccess	scan -> bytes		4812027	0					
ANR	4812087	Identifier	scan		4812027	0					
ANR	4812088	Identifier	bytes		4812027	1					
ANR	4812089	Argument	nbytes		4812027	2					
ANR	4812090	Identifier	nbytes		4812027	0					
ANR	4812091	IfStatement	if ( ( bits &= 7 ) )		4812027	3					
ANR	4812092	Condition	bits &= 7	4776:9:172773:172783	4812027	0	True				
ANR	4812093	AssignmentExpression	bits &= 7		4812027	0		&=			
ANR	4812094	Identifier	bits		4812027	0					
ANR	4812095	PrimaryExpression	7		4812027	1					
ANR	4812096	ExpressionStatement	upd -> outbuf [ nbytes - 1 ] &= ( ( byte ) 0xff ) << ( 8 - bits )	4776:22:172786:172836	4812027	1	True				
ANR	4812097	AssignmentExpression	upd -> outbuf [ nbytes - 1 ] &= ( ( byte ) 0xff ) << ( 8 - bits )		4812027	0		&=			
ANR	4812098	ArrayIndexing	upd -> outbuf [ nbytes - 1 ]		4812027	0					
ANR	4812099	PtrMemberAccess	upd -> outbuf		4812027	0					
ANR	4812100	Identifier	upd		4812027	0					
ANR	4812101	Identifier	outbuf		4812027	1					
ANR	4812102	AdditiveExpression	nbytes - 1		4812027	1		-			
ANR	4812103	Identifier	nbytes		4812027	0					
ANR	4812104	PrimaryExpression	1		4812027	1					
ANR	4812105	ShiftExpression	( ( byte ) 0xff ) << ( 8 - bits )		4812027	1		<<			
ANR	4812106	CastExpression	( byte ) 0xff		4812027	0					
ANR	4812107	CastTarget	byte		4812027	0					
ANR	4812108	PrimaryExpression	0xff		4812027	1					
ANR	4812109	AdditiveExpression	8 - bits		4812027	1		-			
ANR	4812110	PrimaryExpression	8		4812027	0					
ANR	4812111	Identifier	bits		4812027	1					
ANR	4812112	ElseStatement	else		4812027	0					
ANR	4812113	CompoundStatement		15:6:369:385	4812027	0					
ANR	4812114	IdentifierDeclStatement	"byte * buf = upd -> outbuf , bit = 0x80 ;"	4780:6:172858:172896	4812027	0	True				
ANR	4812115	IdentifierDecl	* buf = upd -> outbuf		4812027	0					
ANR	4812116	IdentifierDeclType	byte *		4812027	0					
ANR	4812117	Identifier	buf		4812027	1					
ANR	4812118	AssignmentExpression	* buf = upd -> outbuf		4812027	2		=			
ANR	4812119	Identifier	buf		4812027	0					
ANR	4812120	PtrMemberAccess	upd -> outbuf		4812027	1					
ANR	4812121	Identifier	upd		4812027	0					
ANR	4812122	Identifier	outbuf		4812027	1					
ANR	4812123	IdentifierDecl	bit = 0x80		4812027	1					
ANR	4812124	IdentifierDeclType	byte		4812027	0					
ANR	4812125	Identifier	bit		4812027	1					
ANR	4812126	AssignmentExpression	bit = 0x80		4812027	2		=			
ANR	4812127	Identifier	bit		4812027	0					
ANR	4812128	PrimaryExpression	0x80		4812027	1					
ANR	4812129	IdentifierDeclStatement	int ibyte = 0 ;	4781:6:172904:172920	4812027	1	True				
ANR	4812130	IdentifierDecl	ibyte = 0		4812027	0					
ANR	4812131	IdentifierDeclType	int		4812027	0					
ANR	4812132	Identifier	ibyte		4812027	1					
ANR	4812133	AssignmentExpression	ibyte = 0		4812027	2		=			
ANR	4812134	Identifier	ibyte		4812027	0					
ANR	4812135	PrimaryExpression	0		4812027	1					
ANR	4812136	WhileStatement	while ( 0 < bits -- )		4812027	2					
ANR	4812137	Condition	0 < bits --	4783:12:172935:172944	4812027	0	True				
ANR	4812138	RelationalExpression	0 < bits --		4812027	0		<			
ANR	4812139	PrimaryExpression	0		4812027	0					
ANR	4812140	PostIncDecOperationExpression	bits --		4812027	1					
ANR	4812141	Identifier	bits		4812027	0					
ANR	4812142	IncDec	--		4812027	1					
ANR	4812143	CompoundStatement		18:9:423:435	4812027	1					
ANR	4812144	IdentifierDeclStatement	byte val = 0 ;	4784:9:172958:172970	4812027	0	True				
ANR	4812145	IdentifierDecl	val = 0		4812027	0					
ANR	4812146	IdentifierDeclType	byte		4812027	0					
ANR	4812147	Identifier	val		4812027	1					
ANR	4812148	AssignmentExpression	val = 0		4812027	2		=			
ANR	4812149	Identifier	val		4812027	0					
ANR	4812150	PrimaryExpression	0		4812027	1					
ANR	4812151	SwitchStatement	switch ( upd -> ncomp )		4812027	1					
ANR	4812152	Condition	upd -> ncomp	4785:16:172988:172997	4812027	0	True				
ANR	4812153	PtrMemberAccess	upd -> ncomp		4812027	0					
ANR	4812154	Identifier	upd		4812027	0					
ANR	4812155	Identifier	ncomp		4812027	1					
ANR	4812156	CompoundStatement		19:28:465:465	4812027	1					
ANR	4812157	Label	case 4 :	4786:12:173035:173041	4812027	0	True				
ANR	4812158	IfStatement	if ( scan [ 3 ] . bytes [ ibyte ] & bit )		4812027	1					
ANR	4812159	Condition	scan [ 3 ] . bytes [ ibyte ] & bit	4786:24:173047:173072	4812027	0	True				
ANR	4812160	BitAndExpression	scan [ 3 ] . bytes [ ibyte ] & bit		4812027	0		&			
ANR	4812161	ArrayIndexing	scan [ 3 ] . bytes [ ibyte ]		4812027	0					
ANR	4812162	MemberAccess	scan [ 3 ] . bytes		4812027	0					
ANR	4812163	ArrayIndexing	scan [ 3 ]		4812027	0					
ANR	4812164	Identifier	scan		4812027	0					
ANR	4812165	PrimaryExpression	3		4812027	1					
ANR	4812166	Identifier	bytes		4812027	1					
ANR	4812167	Identifier	ibyte		4812027	1					
ANR	4812168	Identifier	bit		4812027	1					
ANR	4812169	ExpressionStatement	val |= 8	4786:52:173075:173083	4812027	1	True				
ANR	4812170	AssignmentExpression	val |= 8		4812027	0		|=			
ANR	4812171	Identifier	val		4812027	0					
ANR	4812172	PrimaryExpression	8		4812027	1					
ANR	4812173	Label	case 3 :	4788:12:173136:173142	4812027	2	True				
ANR	4812174	IfStatement	if ( scan [ 2 ] . bytes [ ibyte ] & bit )		4812027	3					
ANR	4812175	Condition	scan [ 2 ] . bytes [ ibyte ] & bit	4788:24:173148:173173	4812027	0	True				
ANR	4812176	BitAndExpression	scan [ 2 ] . bytes [ ibyte ] & bit		4812027	0		&			
ANR	4812177	ArrayIndexing	scan [ 2 ] . bytes [ ibyte ]		4812027	0					
ANR	4812178	MemberAccess	scan [ 2 ] . bytes		4812027	0					
ANR	4812179	ArrayIndexing	scan [ 2 ]		4812027	0					
ANR	4812180	Identifier	scan		4812027	0					
ANR	4812181	PrimaryExpression	2		4812027	1					
ANR	4812182	Identifier	bytes		4812027	1					
ANR	4812183	Identifier	ibyte		4812027	1					
ANR	4812184	Identifier	bit		4812027	1					
ANR	4812185	ExpressionStatement	val |= 4	4788:52:173176:173184	4812027	1	True				
ANR	4812186	AssignmentExpression	val |= 4		4812027	0		|=			
ANR	4812187	Identifier	val		4812027	0					
ANR	4812188	PrimaryExpression	4		4812027	1					
ANR	4812189	IfStatement	if ( scan [ 1 ] . bytes [ ibyte ] & bit )		4812027	4					
ANR	4812190	Condition	scan [ 1 ] . bytes [ ibyte ] & bit	4789:24:173210:173235	4812027	0	True				
ANR	4812191	BitAndExpression	scan [ 1 ] . bytes [ ibyte ] & bit		4812027	0		&			
ANR	4812192	ArrayIndexing	scan [ 1 ] . bytes [ ibyte ]		4812027	0					
ANR	4812193	MemberAccess	scan [ 1 ] . bytes		4812027	0					
ANR	4812194	ArrayIndexing	scan [ 1 ]		4812027	0					
ANR	4812195	Identifier	scan		4812027	0					
ANR	4812196	PrimaryExpression	1		4812027	1					
ANR	4812197	Identifier	bytes		4812027	1					
ANR	4812198	Identifier	ibyte		4812027	1					
ANR	4812199	Identifier	bit		4812027	1					
ANR	4812200	ExpressionStatement	val |= 2	4789:52:173238:173246	4812027	1	True				
ANR	4812201	AssignmentExpression	val |= 2		4812027	0		|=			
ANR	4812202	Identifier	val		4812027	0					
ANR	4812203	PrimaryExpression	2		4812027	1					
ANR	4812204	Label	case 1 :	4791:12:173299:173305	4812027	5	True				
ANR	4812205	IfStatement	if ( scan [ 0 ] . bytes [ ibyte ] & bit )		4812027	6					
ANR	4812206	Condition	scan [ 0 ] . bytes [ ibyte ] & bit	4791:24:173311:173336	4812027	0	True				
ANR	4812207	BitAndExpression	scan [ 0 ] . bytes [ ibyte ] & bit		4812027	0		&			
ANR	4812208	ArrayIndexing	scan [ 0 ] . bytes [ ibyte ]		4812027	0					
ANR	4812209	MemberAccess	scan [ 0 ] . bytes		4812027	0					
ANR	4812210	ArrayIndexing	scan [ 0 ]		4812027	0					
ANR	4812211	Identifier	scan		4812027	0					
ANR	4812212	PrimaryExpression	0		4812027	1					
ANR	4812213	Identifier	bytes		4812027	1					
ANR	4812214	Identifier	ibyte		4812027	1					
ANR	4812215	Identifier	bit		4812027	1					
ANR	4812216	ExpressionStatement	val |= 1	4791:52:173339:173347	4812027	1	True				
ANR	4812217	AssignmentExpression	val |= 1		4812027	0		|=			
ANR	4812218	Identifier	val		4812027	0					
ANR	4812219	PrimaryExpression	1		4812027	1					
ANR	4812220	ExpressionStatement	* buf ++ = val	4793:9:173369:173381	4812027	2	True				
ANR	4812221	AssignmentExpression	* buf ++ = val		4812027	0		=			
ANR	4812222	UnaryOperationExpression	* buf ++		4812027	0					
ANR	4812223	UnaryOperator	*		4812027	0					
ANR	4812224	PostIncDecOperationExpression	buf ++		4812027	1					
ANR	4812225	Identifier	buf		4812027	0					
ANR	4812226	IncDec	++		4812027	1					
ANR	4812227	Identifier	val		4812027	1					
ANR	4812228	IfStatement	if ( ! ( bit >>= 1 ) )		4812027	3					
ANR	4812229	Condition	! ( bit >>= 1 )	4794:12:173395:173406	4812027	0	True				
ANR	4812230	UnaryOperationExpression	! ( bit >>= 1 )		4812027	0					
ANR	4812231	UnaryOperator	!		4812027	0					
ANR	4812232	AssignmentExpression	bit >>= 1		4812027	1		>>=			
ANR	4812233	Identifier	bit		4812027	0					
ANR	4812234	PrimaryExpression	1		4812027	1					
ANR	4812235	CompoundStatement		28:26:874:874	4812027	1					
ANR	4812236	ExpressionStatement	bit = 0x80	4795:12:173423:173436	4812027	0	True				
ANR	4812237	AssignmentExpression	bit = 0x80		4812027	0		=			
ANR	4812238	Identifier	bit		4812027	0					
ANR	4812239	PrimaryExpression	0x80		4812027	1					
ANR	4812240	ExpressionStatement	ibyte += 1	4796:12:173450:173460	4812027	1	True				
ANR	4812241	AssignmentExpression	ibyte += 1		4812027	0		+=			
ANR	4812242	Identifier	ibyte		4812027	0					
ANR	4812243	PrimaryExpression	1		4812027	1					
ANR	4812244	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , upd -> noutbuf , out )"	4801:3:173490:173528	4812027	3	True				
ANR	4812245	CallExpression	"fwrite ( upd -> outbuf , 1 , upd -> noutbuf , out )"		4812027	0					
ANR	4812246	Callee	fwrite		4812027	0					
ANR	4812247	Identifier	fwrite		4812027	0					
ANR	4812248	ArgumentList	upd -> outbuf		4812027	1					
ANR	4812249	Argument	upd -> outbuf		4812027	0					
ANR	4812250	PtrMemberAccess	upd -> outbuf		4812027	0					
ANR	4812251	Identifier	upd		4812027	0					
ANR	4812252	Identifier	outbuf		4812027	1					
ANR	4812253	Argument	1		4812027	1					
ANR	4812254	PrimaryExpression	1		4812027	0					
ANR	4812255	Argument	upd -> noutbuf		4812027	2					
ANR	4812256	PtrMemberAccess	upd -> noutbuf		4812027	0					
ANR	4812257	Identifier	upd		4812027	0					
ANR	4812258	Identifier	noutbuf		4812027	1					
ANR	4812259	Argument	out		4812027	3					
ANR	4812260	Identifier	out		4812027	0					
ANR	4812261	ExpressionStatement	upd -> yscan += 1	4802:3:173533:173548	4812027	4	True				
ANR	4812262	AssignmentExpression	upd -> yscan += 1		4812027	0		+=			
ANR	4812263	PtrMemberAccess	upd -> yscan		4812027	0					
ANR	4812264	Identifier	upd		4812027	0					
ANR	4812265	Identifier	yscan		4812027	1					
ANR	4812266	PrimaryExpression	1		4812027	1					
ANR	4812267	ReturnStatement	return 0 ;	4804:3:173554:173562	4812027	5	True				
ANR	4812268	PrimaryExpression	0		4812027	0					
ANR	4812269	ReturnType	static int		4812027	1					
ANR	4812270	Identifier	upd_rascomp		4812027	2					
ANR	4812271	ParameterList	"upd_p upd , FILE * out"		4812027	3					
ANR	4812272	Parameter	upd_p upd	4767:12:172512:172520	4812027	0	True				
ANR	4812273	ParameterType	upd_p		4812027	0					
ANR	4812274	Identifier	upd		4812027	1					
ANR	4812275	Parameter	FILE * out	4767:23:172523:172531	4812027	1	True				
ANR	4812276	ParameterType	FILE *		4812027	0					
ANR	4812277	Identifier	out		4812027	1					
ANR	4812278	CFGEntryNode	ENTRY		4812027		True				
ANR	4812279	CFGExitNode	EXIT		4812027		True				
ANR	4812280	Symbol	* upd -> yscan		4812027						
ANR	4812281	Symbol	* scan [ 2 ] . bytes		4812027						
ANR	4812282	Symbol	ibyte		4812027						
ANR	4812283	Symbol	scan		4812027						
ANR	4812284	Symbol	scan [ 1 ] . bytes		4812027						
ANR	4812285	Symbol	bit		4812027						
ANR	4812286	Symbol	upd -> ncomp		4812027						
ANR	4812287	Symbol	out		4812027						
ANR	4812288	Symbol	upd -> yscan		4812027						
ANR	4812289	Symbol	* upd		4812027						
ANR	4812290	Symbol	* scan		4812027						
ANR	4812291	Symbol	scan [ 2 ] . bytes		4812027						
ANR	4812292	Symbol	* upd -> scnmsk		4812027						
ANR	4812293	Symbol	scan -> bytes		4812027						
ANR	4812294	Symbol	* scan [ 0 ] . bytes		4812027						
ANR	4812295	Symbol	val		4812027						
ANR	4812296	Symbol	* scan [ 3 ] . bytes		4812027						
ANR	4812297	Symbol	upd -> scnmsk		4812027						
ANR	4812298	Symbol	* upd -> scnbuf		4812027						
ANR	4812299	Symbol	upd		4812027						
ANR	4812300	Symbol	bits		4812027						
ANR	4812301	Symbol	* ibyte		4812027						
ANR	4812302	Symbol	scan [ 0 ] . bytes		4812027						
ANR	4812303	Symbol	nbytes		4812027						
ANR	4812304	Symbol	* buf ++		4812027						
ANR	4812305	Symbol	upd -> noutbuf		4812027						
ANR	4812306	Symbol	buf		4812027						
ANR	4812307	Symbol	upd -> scnbuf		4812027						
ANR	4812308	Symbol	* * scan		4812027						
ANR	4812309	Symbol	* upd -> outbuf		4812027						
ANR	4812310	Symbol	* nbytes		4812027						
ANR	4812311	Symbol	upd -> outbuf		4812027						
ANR	4812312	Symbol	* scan [ 1 ] . bytes		4812027						
ANR	4812313	Symbol	* * upd		4812027						
ANR	4812314	Symbol	upd -> pwidth		4812027						
ANR	4812315	Symbol	scan [ 3 ] . bytes		4812027						
ANR	4812316	Function	upd_open_wrtescp	4811:0:173790:178154							
ANR	4812317	FunctionDef	upd_open_wrtescp (upd_device * udev)		4812316	0					
ANR	4812318	CompoundStatement		4813:0:173836:178154	4812316	0					
ANR	4812319	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	4814:3:173841:173874	4812316	0	True				
ANR	4812320	IdentifierDecl	upd = udev -> upd		4812316	0					
ANR	4812321	IdentifierDeclType	const upd_p		4812316	0					
ANR	4812322	Identifier	upd		4812316	1					
ANR	4812323	AssignmentExpression	upd = udev -> upd		4812316	2		=			
ANR	4812324	Identifier	upd		4812316	0					
ANR	4812325	PtrMemberAccess	udev -> upd		4812316	1					
ANR	4812326	Identifier	udev		4812316	0					
ANR	4812327	Identifier	upd		4812316	1					
ANR	4812328	IdentifierDeclStatement	int error = 0 ;	4815:3:173879:173905	4812316	1	True				
ANR	4812329	IdentifierDecl	error = 0		4812316	0					
ANR	4812330	IdentifierDeclType	int		4812316	0					
ANR	4812331	Identifier	error		4812316	1					
ANR	4812332	AssignmentExpression	error = 0		4812316	2		=			
ANR	4812333	Identifier	error		4812316	0					
ANR	4812334	PrimaryExpression	0		4812316	1					
ANR	4812335	IfStatement	if ( ( B_PAGELENGTH & upd -> flags ) && ( 0 < upd -> strings [ S_BEGIN ] . size ) )		4812316	2					
ANR	4812336	Condition	( B_PAGELENGTH & upd -> flags ) && ( 0 < upd -> strings [ S_BEGIN ] . size )	4818:6:173957:174025	4812316	0	True				
ANR	4812337	AndExpression	( B_PAGELENGTH & upd -> flags ) && ( 0 < upd -> strings [ S_BEGIN ] . size )		4812316	0		&&			
ANR	4812338	BitAndExpression	B_PAGELENGTH & upd -> flags		4812316	0		&			
ANR	4812339	Identifier	B_PAGELENGTH		4812316	0					
ANR	4812340	PtrMemberAccess	upd -> flags		4812316	1					
ANR	4812341	Identifier	upd		4812316	0					
ANR	4812342	Identifier	flags		4812316	1					
ANR	4812343	RelationalExpression	0 < upd -> strings [ S_BEGIN ] . size		4812316	1		<			
ANR	4812344	PrimaryExpression	0		4812316	0					
ANR	4812345	MemberAccess	upd -> strings [ S_BEGIN ] . size		4812316	1					
ANR	4812346	ArrayIndexing	upd -> strings [ S_BEGIN ]		4812316	0					
ANR	4812347	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812348	Identifier	upd		4812316	0					
ANR	4812349	Identifier	strings		4812316	1					
ANR	4812350	Identifier	S_BEGIN		4812316	1					
ANR	4812351	Identifier	size		4812316	1					
ANR	4812352	CompoundStatement		9:5:250:306	4812316	1					
ANR	4812353	IdentifierDeclStatement	"int i , state = 0 , value = 0 ;"	4820:5:174053:174080	4812316	0	True				
ANR	4812354	IdentifierDecl	i		4812316	0					
ANR	4812355	IdentifierDeclType	int		4812316	0					
ANR	4812356	Identifier	i		4812316	1					
ANR	4812357	IdentifierDecl	state = 0		4812316	1					
ANR	4812358	IdentifierDeclType	int		4812316	0					
ANR	4812359	Identifier	state		4812316	1					
ANR	4812360	AssignmentExpression	state = 0		4812316	2		=			
ANR	4812361	Identifier	state		4812316	0					
ANR	4812362	PrimaryExpression	0		4812316	1					
ANR	4812363	IdentifierDecl	value = 0		4812316	2					
ANR	4812364	IdentifierDeclType	int		4812316	0					
ANR	4812365	Identifier	value		4812316	1					
ANR	4812366	AssignmentExpression	value = 0		4812316	2		=			
ANR	4812367	Identifier	value		4812316	0					
ANR	4812368	PrimaryExpression	0		4812316	1					
ANR	4812369	IdentifierDeclStatement	byte * bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data ) ;	4821:5:174087:174143	4812316	1	True				
ANR	4812370	IdentifierDecl	* bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		4812316	0					
ANR	4812371	IdentifierDeclType	byte *		4812316	0					
ANR	4812372	Identifier	bp		4812316	1					
ANR	4812373	AssignmentExpression	* bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		4812316	2		=			
ANR	4812374	Identifier	bp		4812316	0					
ANR	4812375	CastExpression	( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		4812316	1					
ANR	4812376	CastTarget	byte *		4812316	0					
ANR	4812377	CallExpression	upd_cast ( upd -> strings [ S_BEGIN ] . data )		4812316	1					
ANR	4812378	Callee	upd_cast		4812316	0					
ANR	4812379	Identifier	upd_cast		4812316	0					
ANR	4812380	ArgumentList	upd -> strings [ S_BEGIN ] . data		4812316	1					
ANR	4812381	Argument	upd -> strings [ S_BEGIN ] . data		4812316	0					
ANR	4812382	MemberAccess	upd -> strings [ S_BEGIN ] . data		4812316	0					
ANR	4812383	ArrayIndexing	upd -> strings [ S_BEGIN ]		4812316	0					
ANR	4812384	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812385	Identifier	upd		4812316	0					
ANR	4812386	Identifier	strings		4812316	1					
ANR	4812387	Identifier	S_BEGIN		4812316	1					
ANR	4812388	Identifier	data		4812316	1					
ANR	4812389	ForStatement	for ( i = 0 ; i < upd -> strings [ S_BEGIN ] . size ; ++ i )		4812316	2					
ANR	4812390	ForInit	i = 0 ;	4822:9:174154:174159	4812316	0	True				
ANR	4812391	AssignmentExpression	i = 0		4812316	0		=			
ANR	4812392	Identifier	i		4812316	0					
ANR	4812393	PrimaryExpression	0		4812316	1					
ANR	4812394	Condition	i < upd -> strings [ S_BEGIN ] . size	4822:16:174161:174190	4812316	1	True				
ANR	4812395	RelationalExpression	i < upd -> strings [ S_BEGIN ] . size		4812316	0		<			
ANR	4812396	Identifier	i		4812316	0					
ANR	4812397	MemberAccess	upd -> strings [ S_BEGIN ] . size		4812316	1					
ANR	4812398	ArrayIndexing	upd -> strings [ S_BEGIN ]		4812316	0					
ANR	4812399	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812400	Identifier	upd		4812316	0					
ANR	4812401	Identifier	strings		4812316	1					
ANR	4812402	Identifier	S_BEGIN		4812316	1					
ANR	4812403	Identifier	size		4812316	1					
ANR	4812404	UnaryExpression	++ i	4822:48:174193:174195	4812316	2	True				
ANR	4812405	IncDec	++		4812316	0					
ANR	4812406	Identifier	i		4812316	1					
ANR	4812407	CompoundStatement		10:53:361:361	4812316	3					
ANR	4812408	SwitchStatement	switch ( state )		4812316	0					
ANR	4812409	Condition	state	4823:15:174215:174219	4812316	0	True				
ANR	4812410	Identifier	state		4812316	0					
ANR	4812411	CompoundStatement		11:22:385:385	4812316	1					
ANR	4812412	Label	case 0 :	4824:11:174235:174242	4812316	0	True				
ANR	4812413	IfStatement	if ( 0x1b == bp [ i ] )		4812316	1					
ANR	4812414	Condition	0x1b == bp [ i ]	4825:17:174261:174273	4812316	0	True				
ANR	4812415	EqualityExpression	0x1b == bp [ i ]		4812316	0		==			
ANR	4812416	PrimaryExpression	0x1b		4812316	0					
ANR	4812417	ArrayIndexing	bp [ i ]		4812316	1					
ANR	4812418	Identifier	bp		4812316	0					
ANR	4812419	Identifier	i		4812316	1					
ANR	4812420	ExpressionStatement	state = 1	4825:32:174276:174285	4812316	1	True				
ANR	4812421	AssignmentExpression	state = 1		4812316	0		=			
ANR	4812422	Identifier	state		4812316	0					
ANR	4812423	PrimaryExpression	1		4812316	1					
ANR	4812424	BreakStatement	break ;	4826:11:174298:174303	4812316	2	True				
ANR	4812425	Label	case 1 :	4827:11:174316:174323	4812316	3	True				
ANR	4812426	IfStatement	if ( 'C' == bp [ i ] )		4812316	4					
ANR	4812427	Condition	'C' == bp [ i ]	4828:17:174342:174354	4812316	0	True				
ANR	4812428	EqualityExpression	'C' == bp [ i ]		4812316	0		==			
ANR	4812429	PrimaryExpression	'C'		4812316	0					
ANR	4812430	ArrayIndexing	bp [ i ]		4812316	1					
ANR	4812431	Identifier	bp		4812316	0					
ANR	4812432	Identifier	i		4812316	1					
ANR	4812433	ExpressionStatement	state = 2	4828:32:174357:174366	4812316	1	True				
ANR	4812434	AssignmentExpression	state = 2		4812316	0		=			
ANR	4812435	Identifier	state		4812316	0					
ANR	4812436	PrimaryExpression	2		4812316	1					
ANR	4812437	ElseStatement	else		4812316	0					
ANR	4812438	ExpressionStatement	state = 0	4829:32:174400:174409	4812316	0	True				
ANR	4812439	AssignmentExpression	state = 0		4812316	0		=			
ANR	4812440	Identifier	state		4812316	0					
ANR	4812441	PrimaryExpression	0		4812316	1					
ANR	4812442	BreakStatement	break ;	4830:11:174422:174427	4812316	5	True				
ANR	4812443	Label	case 2 :	4831:11:174440:174447	4812316	6	True				
ANR	4812444	IfStatement	if ( bp [ i ] )		4812316	7					
ANR	4812445	Condition	bp [ i ]	4832:17:174466:174470	4812316	0	True				
ANR	4812446	ArrayIndexing	bp [ i ]		4812316	0					
ANR	4812447	Identifier	bp		4812316	0					
ANR	4812448	Identifier	i		4812316	1					
ANR	4812449	CompoundStatement		20:24:636:636	4812316	1					
ANR	4812450	ExpressionStatement	value = ( int ) ( 0.5 + udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch )	4833:17:174492:174598	4812316	0	True				
ANR	4812451	AssignmentExpression	value = ( int ) ( 0.5 + udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch )		4812316	0		=			
ANR	4812452	Identifier	value		4812316	0					
ANR	4812453	CastExpression	( int ) ( 0.5 + udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch )		4812316	1					
ANR	4812454	CastTarget	int		4812316	0					
ANR	4812455	AdditiveExpression	0.5 + udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch		4812316	1		+			
ANR	4812456	PrimaryExpression	0.5		4812316	0					
ANR	4812457	MultiplicativeExpression	udev -> height * ( float ) bp [ i ] / udev -> y_pixels_per_inch		4812316	1		*			
ANR	4812458	PtrMemberAccess	udev -> height		4812316	0					
ANR	4812459	Identifier	udev		4812316	0					
ANR	4812460	Identifier	height		4812316	1					
ANR	4812461	MultiplicativeExpression	( float ) bp [ i ] / udev -> y_pixels_per_inch		4812316	1		/			
ANR	4812462	CastExpression	( float ) bp [ i ]		4812316	0					
ANR	4812463	CastTarget	float		4812316	0					
ANR	4812464	ArrayIndexing	bp [ i ]		4812316	1					
ANR	4812465	Identifier	bp		4812316	0					
ANR	4812466	Identifier	i		4812316	1					
ANR	4812467	PtrMemberAccess	udev -> y_pixels_per_inch		4812316	1					
ANR	4812468	Identifier	udev		4812316	0					
ANR	4812469	Identifier	y_pixels_per_inch		4812316	1					
ANR	4812470	IfStatement	if ( 0 >= value )		4812316	1					
ANR	4812471	Condition	0 >= value	4835:27:174627:174636	4812316	0	True				
ANR	4812472	RelationalExpression	0 >= value		4812316	0		>=			
ANR	4812473	PrimaryExpression	0		4812316	0					
ANR	4812474	Identifier	value		4812316	1					
ANR	4812475	ExpressionStatement	bp [ i ] = 1	4835:39:174639:174648	4812316	1	True				
ANR	4812476	AssignmentExpression	bp [ i ] = 1		4812316	0		=			
ANR	4812477	ArrayIndexing	bp [ i ]		4812316	0					
ANR	4812478	Identifier	bp		4812316	0					
ANR	4812479	Identifier	i		4812316	1					
ANR	4812480	PrimaryExpression	1		4812316	1					
ANR	4812481	ElseStatement	else		4812316	0					
ANR	4812482	IfStatement	if ( 128 > value )		4812316	0					
ANR	4812483	Condition	128 > value	4836:25:174675:174686	4812316	0	True				
ANR	4812484	RelationalExpression	128 > value		4812316	0		>			
ANR	4812485	PrimaryExpression	128		4812316	0					
ANR	4812486	Identifier	value		4812316	1					
ANR	4812487	ExpressionStatement	bp [ i ] = value	4836:39:174689:174702	4812316	1	True				
ANR	4812488	AssignmentExpression	bp [ i ] = value		4812316	0		=			
ANR	4812489	ArrayIndexing	bp [ i ]		4812316	0					
ANR	4812490	Identifier	bp		4812316	0					
ANR	4812491	Identifier	i		4812316	1					
ANR	4812492	Identifier	value		4812316	1					
ANR	4812493	ElseStatement	else		4812316	0					
ANR	4812494	ExpressionStatement	bp [ i ] = 127	4837:39:174743:174754	4812316	0	True				
ANR	4812495	AssignmentExpression	bp [ i ] = 127		4812316	0		=			
ANR	4812496	ArrayIndexing	bp [ i ]		4812316	0					
ANR	4812497	Identifier	bp		4812316	0					
ANR	4812498	Identifier	i		4812316	1					
ANR	4812499	PrimaryExpression	127		4812316	1					
ANR	4812500	ExpressionStatement	state = 0	4838:17:174773:174782	4812316	2	True				
ANR	4812501	AssignmentExpression	state = 0		4812316	0		=			
ANR	4812502	Identifier	state		4812316	0					
ANR	4812503	PrimaryExpression	0		4812316	1					
ANR	4812504	ElseStatement	else		4812316	0					
ANR	4812505	CompoundStatement		27:21:968:968	4812316	0					
ANR	4812506	ExpressionStatement	state = 3	4840:17:174824:174833	4812316	0	True				
ANR	4812507	AssignmentExpression	state = 3		4812316	0		=			
ANR	4812508	Identifier	state		4812316	0					
ANR	4812509	PrimaryExpression	3		4812316	1					
ANR	4812510	BreakStatement	break ;	4842:11:174862:174867	4812316	8	True				
ANR	4812511	Label	case 3 :	4843:11:174880:174887	4812316	9	True				
ANR	4812512	ExpressionStatement	value = ( int ) ( 0.5 + udev -> height / udev -> y_pixels_per_inch )	4844:14:174903:174962	4812316	10	True				
ANR	4812513	AssignmentExpression	value = ( int ) ( 0.5 + udev -> height / udev -> y_pixels_per_inch )		4812316	0		=			
ANR	4812514	Identifier	value		4812316	0					
ANR	4812515	CastExpression	( int ) ( 0.5 + udev -> height / udev -> y_pixels_per_inch )		4812316	1					
ANR	4812516	CastTarget	int		4812316	0					
ANR	4812517	AdditiveExpression	0.5 + udev -> height / udev -> y_pixels_per_inch		4812316	1		+			
ANR	4812518	PrimaryExpression	0.5		4812316	0					
ANR	4812519	MultiplicativeExpression	udev -> height / udev -> y_pixels_per_inch		4812316	1		/			
ANR	4812520	PtrMemberAccess	udev -> height		4812316	0					
ANR	4812521	Identifier	udev		4812316	0					
ANR	4812522	Identifier	height		4812316	1					
ANR	4812523	PtrMemberAccess	udev -> y_pixels_per_inch		4812316	1					
ANR	4812524	Identifier	udev		4812316	0					
ANR	4812525	Identifier	y_pixels_per_inch		4812316	1					
ANR	4812526	IfStatement	if ( 0 >= value )		4812316	11					
ANR	4812527	Condition	0 >= value	4845:24:174988:174997	4812316	0	True				
ANR	4812528	RelationalExpression	0 >= value		4812316	0		>=			
ANR	4812529	PrimaryExpression	0		4812316	0					
ANR	4812530	Identifier	value		4812316	1					
ANR	4812531	ExpressionStatement	bp [ i ] = 1	4845:36:175000:175009	4812316	1	True				
ANR	4812532	AssignmentExpression	bp [ i ] = 1		4812316	0		=			
ANR	4812533	ArrayIndexing	bp [ i ]		4812316	0					
ANR	4812534	Identifier	bp		4812316	0					
ANR	4812535	Identifier	i		4812316	1					
ANR	4812536	PrimaryExpression	1		4812316	1					
ANR	4812537	ElseStatement	else		4812316	0					
ANR	4812538	IfStatement	if ( 22 > value )		4812316	0					
ANR	4812539	Condition	22 > value	4846:23:175034:175044	4812316	0	True				
ANR	4812540	RelationalExpression	22 > value		4812316	0		>			
ANR	4812541	PrimaryExpression	22		4812316	0					
ANR	4812542	Identifier	value		4812316	1					
ANR	4812543	ExpressionStatement	bp [ i ] = value	4846:36:175047:175060	4812316	1	True				
ANR	4812544	AssignmentExpression	bp [ i ] = value		4812316	0		=			
ANR	4812545	ArrayIndexing	bp [ i ]		4812316	0					
ANR	4812546	Identifier	bp		4812316	0					
ANR	4812547	Identifier	i		4812316	1					
ANR	4812548	Identifier	value		4812316	1					
ANR	4812549	ElseStatement	else		4812316	0					
ANR	4812550	ExpressionStatement	bp [ i ] = 22	4847:36:175098:175108	4812316	0	True				
ANR	4812551	AssignmentExpression	bp [ i ] = 22		4812316	0		=			
ANR	4812552	ArrayIndexing	bp [ i ]		4812316	0					
ANR	4812553	Identifier	bp		4812316	0					
ANR	4812554	Identifier	i		4812316	1					
ANR	4812555	PrimaryExpression	22		4812316	1					
ANR	4812556	ExpressionStatement	state = 0	4848:14:175124:175133	4812316	12	True				
ANR	4812557	AssignmentExpression	state = 0		4812316	0		=			
ANR	4812558	Identifier	state		4812316	0					
ANR	4812559	PrimaryExpression	0		4812316	1					
ANR	4812560	BreakStatement	break ;	4849:11:175146:175151	4812316	13	True				
ANR	4812561	IfStatement	if ( ( 0 == upd -> strings [ S_SETLF ] . size ) && ( 0 == upd -> strings [ S_YMOVE ] . size ) )		4812316	3					
ANR	4812562	Condition	( 0 == upd -> strings [ S_SETLF ] . size ) && ( 0 == upd -> strings [ S_YMOVE ] . size )	4855:6:175276:175351	4812316	0	True				
ANR	4812563	AndExpression	( 0 == upd -> strings [ S_SETLF ] . size ) && ( 0 == upd -> strings [ S_YMOVE ] . size )		4812316	0		&&			
ANR	4812564	EqualityExpression	0 == upd -> strings [ S_SETLF ] . size		4812316	0		==			
ANR	4812565	PrimaryExpression	0		4812316	0					
ANR	4812566	MemberAccess	upd -> strings [ S_SETLF ] . size		4812316	1					
ANR	4812567	ArrayIndexing	upd -> strings [ S_SETLF ]		4812316	0					
ANR	4812568	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812569	Identifier	upd		4812316	0					
ANR	4812570	Identifier	strings		4812316	1					
ANR	4812571	Identifier	S_SETLF		4812316	1					
ANR	4812572	Identifier	size		4812316	1					
ANR	4812573	EqualityExpression	0 == upd -> strings [ S_YMOVE ] . size		4812316	1		==			
ANR	4812574	PrimaryExpression	0		4812316	0					
ANR	4812575	MemberAccess	upd -> strings [ S_YMOVE ] . size		4812316	1					
ANR	4812576	ArrayIndexing	upd -> strings [ S_YMOVE ]		4812316	0					
ANR	4812577	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812578	Identifier	upd		4812316	0					
ANR	4812579	Identifier	strings		4812316	1					
ANR	4812580	Identifier	S_YMOVE		4812316	1					
ANR	4812581	Identifier	size		4812316	1					
ANR	4812582	CompoundStatement		44:44:1520:1520	4812316	1					
ANR	4812583	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P-Open: Either SETLF- or YMOVE-Command must be present\\n"" )"	4858:6:175398:175493	4812316	0	True				
ANR	4812584	CallExpression	"errprintf ( udev -> memory , ""ESC/P-Open: Either SETLF- or YMOVE-Command must be present\\n"" )"		4812316	0					
ANR	4812585	Callee	errprintf		4812316	0					
ANR	4812586	Identifier	errprintf		4812316	0					
ANR	4812587	ArgumentList	udev -> memory		4812316	1					
ANR	4812588	Argument	udev -> memory		4812316	0					
ANR	4812589	PtrMemberAccess	udev -> memory		4812316	0					
ANR	4812590	Identifier	udev		4812316	0					
ANR	4812591	Identifier	memory		4812316	1					
ANR	4812592	Argument	"""ESC/P-Open: Either SETLF- or YMOVE-Command must be present\\n"""		4812316	1					
ANR	4812593	PrimaryExpression	"""ESC/P-Open: Either SETLF- or YMOVE-Command must be present\\n"""		4812316	0					
ANR	4812594	ExpressionStatement	error = - 1	4861:6:175508:175518	4812316	1	True				
ANR	4812595	AssignmentExpression	error = - 1		4812316	0		=			
ANR	4812596	Identifier	error		4812316	0					
ANR	4812597	UnaryOperationExpression	- 1		4812316	1					
ANR	4812598	UnaryOperator	-		4812316	0					
ANR	4812599	PrimaryExpression	1		4812316	1					
ANR	4812600	IfStatement	if ( ( ( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) ) || ( ( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) ) )		4812316	4					
ANR	4812601	Condition	( ( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) ) || ( ( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) )	4865:6:175569:175786	4812316	0	True				
ANR	4812602	OrExpression	( ( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) ) || ( ( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) )		4812316	0		||			
ANR	4812603	AndExpression	( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		4812316	0		&&			
ANR	4812604	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		4812316	0		<			
ANR	4812605	PrimaryExpression	1		4812316	0					
ANR	4812606	ArrayIndexing	upd -> ints [ I_XSTEP ]		4812316	1					
ANR	4812607	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812608	Identifier	upd		4812316	0					
ANR	4812609	Identifier	ints		4812316	1					
ANR	4812610	Identifier	I_XSTEP		4812316	1					
ANR	4812611	EqualityExpression	0 == upd -> strings [ S_XSTEP ] . size		4812316	1		==			
ANR	4812612	PrimaryExpression	0		4812316	0					
ANR	4812613	MemberAccess	upd -> strings [ S_XSTEP ] . size		4812316	1					
ANR	4812614	ArrayIndexing	upd -> strings [ S_XSTEP ]		4812316	0					
ANR	4812615	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812616	Identifier	upd		4812316	0					
ANR	4812617	Identifier	strings		4812316	1					
ANR	4812618	Identifier	S_XSTEP		4812316	1					
ANR	4812619	Identifier	size		4812316	1					
ANR	4812620	AndExpression	( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		4812316	1		&&			
ANR	4812621	RelationalExpression	1 < upd -> ints [ I_NXPASS ]		4812316	0		<			
ANR	4812622	PrimaryExpression	1		4812316	0					
ANR	4812623	ArrayIndexing	upd -> ints [ I_NXPASS ]		4812316	1					
ANR	4812624	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812625	Identifier	upd		4812316	0					
ANR	4812626	Identifier	ints		4812316	1					
ANR	4812627	Identifier	I_NXPASS		4812316	1					
ANR	4812628	AndExpression	( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		4812316	1		&&			
ANR	4812629	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4812316	0		==			
ANR	4812630	PrimaryExpression	0		4812316	0					
ANR	4812631	MemberAccess	upd -> strings [ S_XMOVE ] . size		4812316	1					
ANR	4812632	ArrayIndexing	upd -> strings [ S_XMOVE ]		4812316	0					
ANR	4812633	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812634	Identifier	upd		4812316	0					
ANR	4812635	Identifier	strings		4812316	1					
ANR	4812636	Identifier	S_XMOVE		4812316	1					
ANR	4812637	Identifier	size		4812316	1					
ANR	4812638	EqualityExpression	0 == upd -> strings [ S_XSTEP ] . size		4812316	1		==			
ANR	4812639	PrimaryExpression	0		4812316	0					
ANR	4812640	MemberAccess	upd -> strings [ S_XSTEP ] . size		4812316	1					
ANR	4812641	ArrayIndexing	upd -> strings [ S_XSTEP ]		4812316	0					
ANR	4812642	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812643	Identifier	upd		4812316	0					
ANR	4812644	Identifier	strings		4812316	1					
ANR	4812645	Identifier	S_XSTEP		4812316	1					
ANR	4812646	Identifier	size		4812316	1					
ANR	4812647	CompoundStatement		57:49:1955:1955	4812316	1					
ANR	4812648	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P-Open: Missing XSTEP- and/or XMOVE-Command\\n"" )"	4871:6:175833:175918	4812316	0	True				
ANR	4812649	CallExpression	"errprintf ( udev -> memory , ""ESC/P-Open: Missing XSTEP- and/or XMOVE-Command\\n"" )"		4812316	0					
ANR	4812650	Callee	errprintf		4812316	0					
ANR	4812651	Identifier	errprintf		4812316	0					
ANR	4812652	ArgumentList	udev -> memory		4812316	1					
ANR	4812653	Argument	udev -> memory		4812316	0					
ANR	4812654	PtrMemberAccess	udev -> memory		4812316	0					
ANR	4812655	Identifier	udev		4812316	0					
ANR	4812656	Identifier	memory		4812316	1					
ANR	4812657	Argument	"""ESC/P-Open: Missing XSTEP- and/or XMOVE-Command\\n"""		4812316	1					
ANR	4812658	PrimaryExpression	"""ESC/P-Open: Missing XSTEP- and/or XMOVE-Command\\n"""		4812316	0					
ANR	4812659	ExpressionStatement	error = - 1	4874:6:175933:175943	4812316	1	True				
ANR	4812660	AssignmentExpression	error = - 1		4812316	0		=			
ANR	4812661	Identifier	error		4812316	0					
ANR	4812662	UnaryOperationExpression	- 1		4812316	1					
ANR	4812663	UnaryOperator	-		4812316	0					
ANR	4812664	PrimaryExpression	1		4812316	1					
ANR	4812665	IfStatement	if ( upd -> ncomp > upd -> string_a [ SA_WRITECOMP ] . size )		4812316	5					
ANR	4812666	Condition	upd -> ncomp > upd -> string_a [ SA_WRITECOMP ] . size	4878:6:175991:176035	4812316	0	True				
ANR	4812667	RelationalExpression	upd -> ncomp > upd -> string_a [ SA_WRITECOMP ] . size		4812316	0		>			
ANR	4812668	PtrMemberAccess	upd -> ncomp		4812316	0					
ANR	4812669	Identifier	upd		4812316	0					
ANR	4812670	Identifier	ncomp		4812316	1					
ANR	4812671	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		4812316	1					
ANR	4812672	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4812316	0					
ANR	4812673	PtrMemberAccess	upd -> string_a		4812316	0					
ANR	4812674	Identifier	upd		4812316	0					
ANR	4812675	Identifier	string_a		4812316	1					
ANR	4812676	Identifier	SA_WRITECOMP		4812316	1					
ANR	4812677	Identifier	size		4812316	1					
ANR	4812678	CompoundStatement		66:53:2201:2201	4812316	1					
ANR	4812679	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P-Open: WRITECOMP-Commands must be given\\n"" )"	4880:6:176100:176182	4812316	0	True				
ANR	4812680	CallExpression	"errprintf ( udev -> memory , ""ESC/P-Open: WRITECOMP-Commands must be given\\n"" )"		4812316	0					
ANR	4812681	Callee	errprintf		4812316	0					
ANR	4812682	Identifier	errprintf		4812316	0					
ANR	4812683	ArgumentList	udev -> memory		4812316	1					
ANR	4812684	Argument	udev -> memory		4812316	0					
ANR	4812685	PtrMemberAccess	udev -> memory		4812316	0					
ANR	4812686	Identifier	udev		4812316	0					
ANR	4812687	Identifier	memory		4812316	1					
ANR	4812688	Argument	"""ESC/P-Open: WRITECOMP-Commands must be given\\n"""		4812316	1					
ANR	4812689	PrimaryExpression	"""ESC/P-Open: WRITECOMP-Commands must be given\\n"""		4812316	0					
ANR	4812690	ExpressionStatement	error = - 1	4883:6:176197:176207	4812316	1	True				
ANR	4812691	AssignmentExpression	error = - 1		4812316	0		=			
ANR	4812692	Identifier	error		4812316	0					
ANR	4812693	UnaryOperationExpression	- 1		4812316	1					
ANR	4812694	UnaryOperator	-		4812316	0					
ANR	4812695	PrimaryExpression	1		4812316	1					
ANR	4812696	IfStatement	if ( 0 <= error )		4812316	6					
ANR	4812697	Condition	0 <= error	4895:6:176419:176428	4812316	0	True				
ANR	4812698	RelationalExpression	0 <= error		4812316	0		<=			
ANR	4812699	PrimaryExpression	0		4812316	0					
ANR	4812700	Identifier	error		4812316	1					
ANR	4812701	CompoundStatement		84:6:2602:2624	4812316	1					
ANR	4812702	IdentifierDeclStatement	"int32_t i , noutbuf , need ;"	4896:6:176439:176461	4812316	0	True				
ANR	4812703	IdentifierDecl	i		4812316	0					
ANR	4812704	IdentifierDeclType	int32_t		4812316	0					
ANR	4812705	Identifier	i		4812316	1					
ANR	4812706	IdentifierDecl	noutbuf		4812316	1					
ANR	4812707	IdentifierDeclType	int32_t		4812316	0					
ANR	4812708	Identifier	noutbuf		4812316	1					
ANR	4812709	IdentifierDecl	need		4812316	2					
ANR	4812710	IdentifierDeclType	int32_t		4812316	0					
ANR	4812711	Identifier	need		4812316	1					
ANR	4812712	IfStatement	if ( 0 < upd -> strings [ S_YMOVE ] . size )		4812316	1					
ANR	4812713	Condition	0 < upd -> strings [ S_YMOVE ] . size	4898:9:176473:176502	4812316	0	True				
ANR	4812714	RelationalExpression	0 < upd -> strings [ S_YMOVE ] . size		4812316	0		<			
ANR	4812715	PrimaryExpression	0		4812316	0					
ANR	4812716	MemberAccess	upd -> strings [ S_YMOVE ] . size		4812316	1					
ANR	4812717	ArrayIndexing	upd -> strings [ S_YMOVE ]		4812316	0					
ANR	4812718	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812719	Identifier	upd		4812316	0					
ANR	4812720	Identifier	strings		4812316	1					
ANR	4812721	Identifier	S_YMOVE		4812316	1					
ANR	4812722	Identifier	size		4812316	1					
ANR	4812723	CompoundStatement		86:41:2668:2668	4812316	1					
ANR	4812724	ExpressionStatement	noutbuf = upd -> strings [ S_YMOVE ] . size + 2	4899:9:176516:176556	4812316	0	True				
ANR	4812725	AssignmentExpression	noutbuf = upd -> strings [ S_YMOVE ] . size + 2		4812316	0		=			
ANR	4812726	Identifier	noutbuf		4812316	0					
ANR	4812727	AdditiveExpression	upd -> strings [ S_YMOVE ] . size + 2		4812316	1		+			
ANR	4812728	MemberAccess	upd -> strings [ S_YMOVE ] . size		4812316	0					
ANR	4812729	ArrayIndexing	upd -> strings [ S_YMOVE ]		4812316	0					
ANR	4812730	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812731	Identifier	upd		4812316	0					
ANR	4812732	Identifier	strings		4812316	1					
ANR	4812733	Identifier	S_YMOVE		4812316	1					
ANR	4812734	Identifier	size		4812316	1					
ANR	4812735	PrimaryExpression	2		4812316	1					
ANR	4812736	ElseStatement	else		4812316	0					
ANR	4812737	CompoundStatement		89:9:2745:2768	4812316	0					
ANR	4812738	IdentifierDeclStatement	int nmax = upd -> pheight ;	4901:9:176582:176605	4812316	0	True				
ANR	4812739	IdentifierDecl	nmax = upd -> pheight		4812316	0					
ANR	4812740	IdentifierDeclType	int		4812316	0					
ANR	4812741	Identifier	nmax		4812316	1					
ANR	4812742	AssignmentExpression	nmax = upd -> pheight		4812316	2		=			
ANR	4812743	Identifier	nmax		4812316	0					
ANR	4812744	PtrMemberAccess	upd -> pheight		4812316	1					
ANR	4812745	Identifier	upd		4812316	0					
ANR	4812746	Identifier	pheight		4812316	1					
ANR	4812747	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		4812316	1					
ANR	4812748	Condition	1 < upd -> ints [ I_YSTEP ]	4902:18:176625:176646	4812316	0	True				
ANR	4812749	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		4812316	0		<			
ANR	4812750	PrimaryExpression	1		4812316	0					
ANR	4812751	ArrayIndexing	upd -> ints [ I_YSTEP ]		4812316	1					
ANR	4812752	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812753	Identifier	upd		4812316	0					
ANR	4812754	Identifier	ints		4812316	1					
ANR	4812755	Identifier	I_YSTEP		4812316	1					
ANR	4812756	ExpressionStatement	nmax /= upd -> ints [ I_YSTEP ]	4902:42:176649:176676	4812316	1	True				
ANR	4812757	AssignmentExpression	nmax /= upd -> ints [ I_YSTEP ]		4812316	0		/=			
ANR	4812758	Identifier	nmax		4812316	0					
ANR	4812759	ArrayIndexing	upd -> ints [ I_YSTEP ]		4812316	1					
ANR	4812760	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812761	Identifier	upd		4812316	0					
ANR	4812762	Identifier	ints		4812316	1					
ANR	4812763	Identifier	I_YSTEP		4812316	1					
ANR	4812764	ElseStatement	else		4812316	0					
ANR	4812765	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		4812316	0					
ANR	4812766	Condition	- 1 > upd -> ints [ I_YSTEP ]	4903:17:176695:176717	4812316	0	True				
ANR	4812767	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		4812316	0		>			
ANR	4812768	UnaryOperationExpression	- 1		4812316	0					
ANR	4812769	UnaryOperator	-		4812316	0					
ANR	4812770	PrimaryExpression	1		4812316	1					
ANR	4812771	ArrayIndexing	upd -> ints [ I_YSTEP ]		4812316	1					
ANR	4812772	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812773	Identifier	upd		4812316	0					
ANR	4812774	Identifier	ints		4812316	1					
ANR	4812775	Identifier	I_YSTEP		4812316	1					
ANR	4812776	ExpressionStatement	nmax *= - upd -> ints [ I_YSTEP ]	4903:42:176720:176747	4812316	1	True				
ANR	4812777	AssignmentExpression	nmax *= - upd -> ints [ I_YSTEP ]		4812316	0		*=			
ANR	4812778	Identifier	nmax		4812316	0					
ANR	4812779	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		4812316	1					
ANR	4812780	UnaryOperator	-		4812316	0					
ANR	4812781	ArrayIndexing	upd -> ints [ I_YSTEP ]		4812316	1					
ANR	4812782	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812783	Identifier	upd		4812316	0					
ANR	4812784	Identifier	ints		4812316	1					
ANR	4812785	Identifier	I_YSTEP		4812316	1					
ANR	4812786	ExpressionStatement	noutbuf = 2 * upd -> strings [ S_SETLF ] . size + 2	4904:9:176758:176803	4812316	2	True				
ANR	4812787	AssignmentExpression	noutbuf = 2 * upd -> strings [ S_SETLF ] . size + 2		4812316	0		=			
ANR	4812788	Identifier	noutbuf		4812316	0					
ANR	4812789	AdditiveExpression	2 * upd -> strings [ S_SETLF ] . size + 2		4812316	1		+			
ANR	4812790	MultiplicativeExpression	2 * upd -> strings [ S_SETLF ] . size		4812316	0		*			
ANR	4812791	PrimaryExpression	2		4812316	0					
ANR	4812792	MemberAccess	upd -> strings [ S_SETLF ] . size		4812316	1					
ANR	4812793	ArrayIndexing	upd -> strings [ S_SETLF ]		4812316	0					
ANR	4812794	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812795	Identifier	upd		4812316	0					
ANR	4812796	Identifier	strings		4812316	1					
ANR	4812797	Identifier	S_SETLF		4812316	1					
ANR	4812798	Identifier	size		4812316	1					
ANR	4812799	PrimaryExpression	2		4812316	1					
ANR	4812800	ExpressionStatement	noutbuf += nmax / 255 + 1	4905:9:176814:176837	4812316	3	True				
ANR	4812801	AssignmentExpression	noutbuf += nmax / 255 + 1		4812316	0		+=			
ANR	4812802	Identifier	noutbuf		4812316	0					
ANR	4812803	AdditiveExpression	nmax / 255 + 1		4812316	1		+			
ANR	4812804	MultiplicativeExpression	nmax / 255		4812316	0		/			
ANR	4812805	Identifier	nmax		4812316	0					
ANR	4812806	PrimaryExpression	255		4812316	1					
ANR	4812807	PrimaryExpression	1		4812316	1					
ANR	4812808	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		4812316	2					
ANR	4812809	Condition	1 < upd -> ints [ I_YSTEP ]	4908:9:176857:176878	4812316	0	True				
ANR	4812810	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		4812316	0		<			
ANR	4812811	PrimaryExpression	1		4812316	0					
ANR	4812812	ArrayIndexing	upd -> ints [ I_YSTEP ]		4812316	1					
ANR	4812813	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812814	Identifier	upd		4812316	0					
ANR	4812815	Identifier	ints		4812316	1					
ANR	4812816	Identifier	I_YSTEP		4812316	1					
ANR	4812817	ExpressionStatement	noutbuf += ( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size	4909:9:176890:176952	4812316	1	True				
ANR	4812818	AssignmentExpression	noutbuf += ( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size		4812316	0		+=			
ANR	4812819	Identifier	noutbuf		4812316	0					
ANR	4812820	MultiplicativeExpression	( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size		4812316	1		*			
ANR	4812821	AdditiveExpression	upd -> ints [ I_YSTEP ] - 1		4812316	0		-			
ANR	4812822	ArrayIndexing	upd -> ints [ I_YSTEP ]		4812316	0					
ANR	4812823	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812824	Identifier	upd		4812316	0					
ANR	4812825	Identifier	ints		4812316	1					
ANR	4812826	Identifier	I_YSTEP		4812316	1					
ANR	4812827	PrimaryExpression	1		4812316	1					
ANR	4812828	MemberAccess	upd -> strings [ S_YSTEP ] . size		4812316	1					
ANR	4812829	ArrayIndexing	upd -> strings [ S_YSTEP ]		4812316	0					
ANR	4812830	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812831	Identifier	upd		4812316	0					
ANR	4812832	Identifier	strings		4812316	1					
ANR	4812833	Identifier	S_YSTEP		4812316	1					
ANR	4812834	Identifier	size		4812316	1					
ANR	4812835	ExpressionStatement	noutbuf += upd -> strings [ S_XMOVE ] . size + 2	4911:6:176961:177003	4812316	3	True				
ANR	4812836	AssignmentExpression	noutbuf += upd -> strings [ S_XMOVE ] . size + 2		4812316	0		+=			
ANR	4812837	Identifier	noutbuf		4812316	0					
ANR	4812838	AdditiveExpression	upd -> strings [ S_XMOVE ] . size + 2		4812316	1		+			
ANR	4812839	MemberAccess	upd -> strings [ S_XMOVE ] . size		4812316	0					
ANR	4812840	ArrayIndexing	upd -> strings [ S_XMOVE ]		4812316	0					
ANR	4812841	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812842	Identifier	upd		4812316	0					
ANR	4812843	Identifier	strings		4812316	1					
ANR	4812844	Identifier	S_XMOVE		4812316	1					
ANR	4812845	Identifier	size		4812316	1					
ANR	4812846	PrimaryExpression	2		4812316	1					
ANR	4812847	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		4812316	4					
ANR	4812848	Condition	1 < upd -> ints [ I_XSTEP ]	4913:9:177015:177036	4812316	0	True				
ANR	4812849	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		4812316	0		<			
ANR	4812850	PrimaryExpression	1		4812316	0					
ANR	4812851	ArrayIndexing	upd -> ints [ I_XSTEP ]		4812316	1					
ANR	4812852	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812853	Identifier	upd		4812316	0					
ANR	4812854	Identifier	ints		4812316	1					
ANR	4812855	Identifier	I_XSTEP		4812316	1					
ANR	4812856	ExpressionStatement	noutbuf += ( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size	4914:9:177048:177110	4812316	1	True				
ANR	4812857	AssignmentExpression	noutbuf += ( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size		4812316	0		+=			
ANR	4812858	Identifier	noutbuf		4812316	0					
ANR	4812859	MultiplicativeExpression	( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size		4812316	1		*			
ANR	4812860	AdditiveExpression	upd -> ints [ I_XSTEP ] - 1		4812316	0		-			
ANR	4812861	ArrayIndexing	upd -> ints [ I_XSTEP ]		4812316	0					
ANR	4812862	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812863	Identifier	upd		4812316	0					
ANR	4812864	Identifier	ints		4812316	1					
ANR	4812865	Identifier	I_XSTEP		4812316	1					
ANR	4812866	PrimaryExpression	1		4812316	1					
ANR	4812867	MemberAccess	upd -> strings [ S_XSTEP ] . size		4812316	1					
ANR	4812868	ArrayIndexing	upd -> strings [ S_XSTEP ]		4812316	0					
ANR	4812869	PtrMemberAccess	upd -> strings		4812316	0					
ANR	4812870	Identifier	upd		4812316	0					
ANR	4812871	Identifier	strings		4812316	1					
ANR	4812872	Identifier	S_XSTEP		4812316	1					
ANR	4812873	Identifier	size		4812316	1					
ANR	4812874	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . size )		4812316	5					
ANR	4812875	Condition	0 < upd -> string_a [ SA_SETCOMP ] . size	4916:9:177122:177155	4812316	0	True				
ANR	4812876	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		4812316	0		<			
ANR	4812877	PrimaryExpression	0		4812316	0					
ANR	4812878	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4812316	1					
ANR	4812879	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4812316	0					
ANR	4812880	PtrMemberAccess	upd -> string_a		4812316	0					
ANR	4812881	Identifier	upd		4812316	0					
ANR	4812882	Identifier	string_a		4812316	1					
ANR	4812883	Identifier	SA_SETCOMP		4812316	1					
ANR	4812884	Identifier	size		4812316	1					
ANR	4812885	CompoundStatement		104:45:3321:3321	4812316	1					
ANR	4812886	ExpressionStatement	need = 0	4917:9:177169:177177	4812316	0	True				
ANR	4812887	AssignmentExpression	need = 0		4812316	0		=			
ANR	4812888	Identifier	need		4812316	0					
ANR	4812889	PrimaryExpression	0		4812316	1					
ANR	4812890	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		4812316	1					
ANR	4812891	ForInit	i = 0 ;	4918:13:177192:177197	4812316	0	True				
ANR	4812892	AssignmentExpression	i = 0		4812316	0		=			
ANR	4812893	Identifier	i		4812316	0					
ANR	4812894	PrimaryExpression	0		4812316	1					
ANR	4812895	Condition	i < upd -> ocomp	4918:20:177199:177212	4812316	1	True				
ANR	4812896	RelationalExpression	i < upd -> ocomp		4812316	0		<			
ANR	4812897	Identifier	i		4812316	0					
ANR	4812898	PtrMemberAccess	upd -> ocomp		4812316	1					
ANR	4812899	Identifier	upd		4812316	0					
ANR	4812900	Identifier	ocomp		4812316	1					
ANR	4812901	UnaryExpression	++ i	4918:36:177215:177217	4812316	2	True				
ANR	4812902	IncDec	++		4812316	0					
ANR	4812903	Identifier	i		4812316	1					
ANR	4812904	IfStatement	if ( need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size )		4812316	3					
ANR	4812905	Condition	need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size	4919:15:177235:177279	4812316	0	True				
ANR	4812906	RelationalExpression	need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4812316	0		<			
ANR	4812907	Identifier	need		4812316	0					
ANR	4812908	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4812316	1					
ANR	4812909	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ i ]		4812316	0					
ANR	4812910	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4812316	0					
ANR	4812911	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4812316	0					
ANR	4812912	PtrMemberAccess	upd -> string_a		4812316	0					
ANR	4812913	Identifier	upd		4812316	0					
ANR	4812914	Identifier	string_a		4812316	1					
ANR	4812915	Identifier	SA_SETCOMP		4812316	1					
ANR	4812916	Identifier	data		4812316	1					
ANR	4812917	Identifier	i		4812316	1					
ANR	4812918	Identifier	size		4812316	1					
ANR	4812919	ExpressionStatement	need = upd -> string_a [ SA_SETCOMP ] . data [ i ] . size	4920:15:177297:177342	4812316	1	True				
ANR	4812920	AssignmentExpression	need = upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4812316	0		=			
ANR	4812921	Identifier	need		4812316	0					
ANR	4812922	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4812316	1					
ANR	4812923	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ i ]		4812316	0					
ANR	4812924	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4812316	0					
ANR	4812925	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4812316	0					
ANR	4812926	PtrMemberAccess	upd -> string_a		4812316	0					
ANR	4812927	Identifier	upd		4812316	0					
ANR	4812928	Identifier	string_a		4812316	1					
ANR	4812929	Identifier	SA_SETCOMP		4812316	1					
ANR	4812930	Identifier	data		4812316	1					
ANR	4812931	Identifier	i		4812316	1					
ANR	4812932	Identifier	size		4812316	1					
ANR	4812933	ExpressionStatement	noutbuf += need	4921:9:177353:177368	4812316	2	True				
ANR	4812934	AssignmentExpression	noutbuf += need		4812316	0		+=			
ANR	4812935	Identifier	noutbuf		4812316	0					
ANR	4812936	Identifier	need		4812316	1					
ANR	4812937	ExpressionStatement	need = 0	4924:6:177385:177393	4812316	6	True				
ANR	4812938	AssignmentExpression	need = 0		4812316	0		=			
ANR	4812939	Identifier	need		4812316	0					
ANR	4812940	PrimaryExpression	0		4812316	1					
ANR	4812941	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		4812316	7					
ANR	4812942	ForInit	i = 0 ;	4925:10:177405:177410	4812316	0	True				
ANR	4812943	AssignmentExpression	i = 0		4812316	0		=			
ANR	4812944	Identifier	i		4812316	0					
ANR	4812945	PrimaryExpression	0		4812316	1					
ANR	4812946	Condition	i < upd -> ocomp	4925:17:177412:177425	4812316	1	True				
ANR	4812947	RelationalExpression	i < upd -> ocomp		4812316	0		<			
ANR	4812948	Identifier	i		4812316	0					
ANR	4812949	PtrMemberAccess	upd -> ocomp		4812316	1					
ANR	4812950	Identifier	upd		4812316	0					
ANR	4812951	Identifier	ocomp		4812316	1					
ANR	4812952	UnaryExpression	++ i	4925:33:177428:177430	4812316	2	True				
ANR	4812953	IncDec	++		4812316	0					
ANR	4812954	Identifier	i		4812316	1					
ANR	4812955	IfStatement	if ( need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size )		4812316	3					
ANR	4812956	Condition	need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size	4926:12:177445:177491	4812316	0	True				
ANR	4812957	RelationalExpression	need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4812316	0		<			
ANR	4812958	Identifier	need		4812316	0					
ANR	4812959	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4812316	1					
ANR	4812960	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ i ]		4812316	0					
ANR	4812961	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4812316	0					
ANR	4812962	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4812316	0					
ANR	4812963	PtrMemberAccess	upd -> string_a		4812316	0					
ANR	4812964	Identifier	upd		4812316	0					
ANR	4812965	Identifier	string_a		4812316	1					
ANR	4812966	Identifier	SA_WRITECOMP		4812316	1					
ANR	4812967	Identifier	data		4812316	1					
ANR	4812968	Identifier	i		4812316	1					
ANR	4812969	Identifier	size		4812316	1					
ANR	4812970	ExpressionStatement	need = upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size	4927:12:177506:177553	4812316	1	True				
ANR	4812971	AssignmentExpression	need = upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4812316	0		=			
ANR	4812972	Identifier	need		4812316	0					
ANR	4812973	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4812316	1					
ANR	4812974	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ i ]		4812316	0					
ANR	4812975	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4812316	0					
ANR	4812976	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4812316	0					
ANR	4812977	PtrMemberAccess	upd -> string_a		4812316	0					
ANR	4812978	Identifier	upd		4812316	0					
ANR	4812979	Identifier	string_a		4812316	1					
ANR	4812980	Identifier	SA_WRITECOMP		4812316	1					
ANR	4812981	Identifier	data		4812316	1					
ANR	4812982	Identifier	i		4812316	1					
ANR	4812983	Identifier	size		4812316	1					
ANR	4812984	ExpressionStatement	noutbuf += need + 2	4928:6:177561:177580	4812316	8	True				
ANR	4812985	AssignmentExpression	noutbuf += need + 2		4812316	0		+=			
ANR	4812986	Identifier	noutbuf		4812316	0					
ANR	4812987	AdditiveExpression	need + 2		4812316	1		+			
ANR	4812988	Identifier	need		4812316	0					
ANR	4812989	PrimaryExpression	2		4812316	1					
ANR	4812990	ExpressionStatement	noutbuf += ( ( upd -> ints [ I_PINS2WRITE ] + 7 ) / 8 ) * ( ( upd -> pwidth + upd -> ints [ I_NXPASS ] - 1 ) / upd -> ints [ I_NXPASS ] )	4930:6:177589:177714	4812316	9	True				
ANR	4812991	AssignmentExpression	noutbuf += ( ( upd -> ints [ I_PINS2WRITE ] + 7 ) / 8 ) * ( ( upd -> pwidth + upd -> ints [ I_NXPASS ] - 1 ) / upd -> ints [ I_NXPASS ] )		4812316	0		+=			
ANR	4812992	Identifier	noutbuf		4812316	0					
ANR	4812993	MultiplicativeExpression	( ( upd -> ints [ I_PINS2WRITE ] + 7 ) / 8 ) * ( ( upd -> pwidth + upd -> ints [ I_NXPASS ] - 1 ) / upd -> ints [ I_NXPASS ] )		4812316	1		*			
ANR	4812994	MultiplicativeExpression	( upd -> ints [ I_PINS2WRITE ] + 7 ) / 8		4812316	0		/			
ANR	4812995	AdditiveExpression	upd -> ints [ I_PINS2WRITE ] + 7		4812316	0		+			
ANR	4812996	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4812316	0					
ANR	4812997	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4812998	Identifier	upd		4812316	0					
ANR	4812999	Identifier	ints		4812316	1					
ANR	4813000	Identifier	I_PINS2WRITE		4812316	1					
ANR	4813001	PrimaryExpression	7		4812316	1					
ANR	4813002	PrimaryExpression	8		4812316	1					
ANR	4813003	MultiplicativeExpression	( upd -> pwidth + upd -> ints [ I_NXPASS ] - 1 ) / upd -> ints [ I_NXPASS ]		4812316	1		/			
ANR	4813004	AdditiveExpression	upd -> pwidth + upd -> ints [ I_NXPASS ] - 1		4812316	0		+			
ANR	4813005	PtrMemberAccess	upd -> pwidth		4812316	0					
ANR	4813006	Identifier	upd		4812316	0					
ANR	4813007	Identifier	pwidth		4812316	1					
ANR	4813008	AdditiveExpression	upd -> ints [ I_NXPASS ] - 1		4812316	1		-			
ANR	4813009	ArrayIndexing	upd -> ints [ I_NXPASS ]		4812316	0					
ANR	4813010	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4813011	Identifier	upd		4812316	0					
ANR	4813012	Identifier	ints		4812316	1					
ANR	4813013	Identifier	I_NXPASS		4812316	1					
ANR	4813014	PrimaryExpression	1		4812316	1					
ANR	4813015	ArrayIndexing	upd -> ints [ I_NXPASS ]		4812316	1					
ANR	4813016	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4813017	Identifier	upd		4812316	0					
ANR	4813018	Identifier	ints		4812316	1					
ANR	4813019	Identifier	I_NXPASS		4812316	1					
ANR	4813020	IfStatement	if ( noutbuf > 0 )		4812316	10					
ANR	4813021	Condition	noutbuf > 0	4933:9:177726:177736	4812316	0	True				
ANR	4813022	RelationalExpression	noutbuf > 0		4812316	0		>			
ANR	4813023	Identifier	noutbuf		4812316	0					
ANR	4813024	PrimaryExpression	0		4812316	1					
ANR	4813025	CompoundStatement		121:22:3902:3902	4812316	1					
ANR	4813026	ExpressionStatement	upd -> noutbuf = noutbuf	4934:9:177750:177777	4812316	0	True				
ANR	4813027	AssignmentExpression	upd -> noutbuf = noutbuf		4812316	0		=			
ANR	4813028	PtrMemberAccess	upd -> noutbuf		4812316	0					
ANR	4813029	Identifier	upd		4812316	0					
ANR	4813030	Identifier	noutbuf		4812316	1					
ANR	4813031	Identifier	noutbuf		4812316	1					
ANR	4813032	ExpressionStatement	upd -> writer = upd_wrtescp	4935:9:177788:177819	4812316	1	True				
ANR	4813033	AssignmentExpression	upd -> writer = upd_wrtescp		4812316	0		=			
ANR	4813034	PtrMemberAccess	upd -> writer		4812316	0					
ANR	4813035	Identifier	upd		4812316	0					
ANR	4813036	Identifier	writer		4812316	1					
ANR	4813037	Identifier	upd_wrtescp		4812316	1					
ANR	4813038	ExpressionStatement	upd -> nlimits = upd -> ints [ I_NXPASS ]	4936:9:177830:177869	4812316	2	True				
ANR	4813039	AssignmentExpression	upd -> nlimits = upd -> ints [ I_NXPASS ]		4812316	0		=			
ANR	4813040	PtrMemberAccess	upd -> nlimits		4812316	0					
ANR	4813041	Identifier	upd		4812316	0					
ANR	4813042	Identifier	nlimits		4812316	1					
ANR	4813043	ArrayIndexing	upd -> ints [ I_NXPASS ]		4812316	1					
ANR	4813044	PtrMemberAccess	upd -> ints		4812316	0					
ANR	4813045	Identifier	upd		4812316	0					
ANR	4813046	Identifier	ints		4812316	1					
ANR	4813047	Identifier	I_NXPASS		4812316	1					
ANR	4813048	ExpressionStatement	error = 1	4937:9:177880:177901	4812316	3	True				
ANR	4813049	AssignmentExpression	error = 1		4812316	0		=			
ANR	4813050	Identifier	error		4812316	0					
ANR	4813051	PrimaryExpression	1		4812316	1					
ANR	4813052	ElseStatement	else		4812316	0					
ANR	4813053	CompoundStatement		126:13:4079:4079	4812316	0					
ANR	4813054	ExpressionStatement	error = - 1	4939:9:177927:177937	4812316	0	True				
ANR	4813055	AssignmentExpression	error = - 1		4812316	0		=			
ANR	4813056	Identifier	error		4812316	0					
ANR	4813057	UnaryOperationExpression	- 1		4812316	1					
ANR	4813058	UnaryOperator	-		4812316	0					
ANR	4813059	PrimaryExpression	1		4812316	1					
ANR	4813060	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P-Open: %ld is unreasonable size of Outputbuffer\\n"" , ( long ) noutbuf )"	4941:12:177989:178114	4812316	1	True				
ANR	4813061	CallExpression	"errprintf ( udev -> memory , ""ESC/P-Open: %ld is unreasonable size of Outputbuffer\\n"" , ( long ) noutbuf )"		4812316	0					
ANR	4813062	Callee	errprintf		4812316	0					
ANR	4813063	Identifier	errprintf		4812316	0					
ANR	4813064	ArgumentList	udev -> memory		4812316	1					
ANR	4813065	Argument	udev -> memory		4812316	0					
ANR	4813066	PtrMemberAccess	udev -> memory		4812316	0					
ANR	4813067	Identifier	udev		4812316	0					
ANR	4813068	Identifier	memory		4812316	1					
ANR	4813069	Argument	"""ESC/P-Open: %ld is unreasonable size of Outputbuffer\\n"""		4812316	1					
ANR	4813070	PrimaryExpression	"""ESC/P-Open: %ld is unreasonable size of Outputbuffer\\n"""		4812316	0					
ANR	4813071	Argument	( long ) noutbuf		4812316	2					
ANR	4813072	CastExpression	( long ) noutbuf		4812316	0					
ANR	4813073	CastTarget	long		4812316	0					
ANR	4813074	Identifier	noutbuf		4812316	1					
ANR	4813075	ReturnStatement	return error ;	4948:3:178140:178152	4812316	7	True				
ANR	4813076	Identifier	error		4812316	0					
ANR	4813077	ReturnType	static int		4812316	1					
ANR	4813078	Identifier	upd_open_wrtescp		4812316	2					
ANR	4813079	ParameterList	upd_device * udev		4812316	3					
ANR	4813080	Parameter	upd_device * udev	4812:17:173818:173833	4812316	0	True				
ANR	4813081	ParameterType	upd_device *		4812316	0					
ANR	4813082	Identifier	udev		4812316	1					
ANR	4813083	CFGEntryNode	ENTRY		4812316		True				
ANR	4813084	CFGExitNode	EXIT		4812316		True				
ANR	4813085	Symbol	S_XMOVE		4812316						
ANR	4813086	Symbol	* upd -> string_a		4812316						
ANR	4813087	Symbol	I_PINS2WRITE		4812316						
ANR	4813088	Symbol	SA_SETCOMP		4812316						
ANR	4813089	Symbol	nmax		4812316						
ANR	4813090	Symbol	* S_SETLF		4812316						
ANR	4813091	Symbol	* I_YSTEP		4812316						
ANR	4813092	Symbol	upd -> strings [ S_YSTEP ] . size		4812316						
ANR	4813093	Symbol	* SA_SETCOMP		4812316						
ANR	4813094	Symbol	* I_NXPASS		4812316						
ANR	4813095	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		4812316						
ANR	4813096	Symbol	upd -> nlimits		4812316						
ANR	4813097	Symbol	* udev		4812316						
ANR	4813098	Symbol	* bp		4812316						
ANR	4813099	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4812316						
ANR	4813100	Symbol	S_BEGIN		4812316						
ANR	4813101	Symbol	* I_XSTEP		4812316						
ANR	4813102	Symbol	state		4812316						
ANR	4813103	Symbol	udev -> height		4812316						
ANR	4813104	Symbol	S_SETLF		4812316						
ANR	4813105	Symbol	upd_cast		4812316						
ANR	4813106	Symbol	need		4812316						
ANR	4813107	Symbol	upd -> string_a [ SA_SETCOMP ] . data		4812316						
ANR	4813108	Symbol	upd		4812316						
ANR	4813109	Symbol	* SA_WRITECOMP		4812316						
ANR	4813110	Symbol	SA_WRITECOMP		4812316						
ANR	4813111	Symbol	I_NXPASS		4812316						
ANR	4813112	Symbol	udev -> y_pixels_per_inch		4812316						
ANR	4813113	Symbol	noutbuf		4812316						
ANR	4813114	Symbol	* * SA_SETCOMP		4812316						
ANR	4813115	Symbol	udev		4812316						
ANR	4813116	Symbol	upd -> strings [ S_SETLF ] . size		4812316						
ANR	4813117	Symbol	upd -> ints		4812316						
ANR	4813118	Symbol	upd -> pwidth		4812316						
ANR	4813119	Symbol	upd -> pheight		4812316						
ANR	4813120	Symbol	upd -> strings [ S_BEGIN ] . size		4812316						
ANR	4813121	Symbol	* S_BEGIN		4812316						
ANR	4813122	Symbol	upd -> strings		4812316						
ANR	4813123	Symbol	error		4812316						
ANR	4813124	Symbol	upd -> strings [ S_XSTEP ] . size		4812316						
ANR	4813125	Symbol	bp		4812316						
ANR	4813126	Symbol	upd -> ncomp		4812316						
ANR	4813127	Symbol	upd -> flags		4812316						
ANR	4813128	Symbol	udev -> upd		4812316						
ANR	4813129	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		4812316						
ANR	4813130	Symbol	* upd		4812316						
ANR	4813131	Symbol	* S_XMOVE		4812316						
ANR	4813132	Symbol	* * upd -> string_a		4812316						
ANR	4813133	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4812316						
ANR	4813134	Symbol	upd -> string_a [ SA_WRITECOMP ] . size		4812316						
ANR	4813135	Symbol	upd -> ocomp		4812316						
ANR	4813136	Symbol	value		4812316						
ANR	4813137	Symbol	* upd -> strings		4812316						
ANR	4813138	Symbol	* * SA_WRITECOMP		4812316						
ANR	4813139	Symbol	upd -> strings [ S_YMOVE ] . size		4812316						
ANR	4813140	Symbol	* S_XSTEP		4812316						
ANR	4813141	Symbol	* S_YMOVE		4812316						
ANR	4813142	Symbol	udev -> memory		4812316						
ANR	4813143	Symbol	upd -> strings [ S_XMOVE ] . size		4812316						
ANR	4813144	Symbol	* * * upd		4812316						
ANR	4813145	Symbol	i		4812316						
ANR	4813146	Symbol	I_XSTEP		4812316						
ANR	4813147	Symbol	upd_wrtescp		4812316						
ANR	4813148	Symbol	* S_YSTEP		4812316						
ANR	4813149	Symbol	upd -> string_a		4812316						
ANR	4813150	Symbol	upd -> noutbuf		4812316						
ANR	4813151	Symbol	upd -> strings [ S_BEGIN ] . data		4812316						
ANR	4813152	Symbol	B_PAGELENGTH		4812316						
ANR	4813153	Symbol	* i		4812316						
ANR	4813154	Symbol	* upd -> ints		4812316						
ANR	4813155	Symbol	* I_PINS2WRITE		4812316						
ANR	4813156	Symbol	S_YMOVE		4812316						
ANR	4813157	Symbol	upd -> string_a [ SA_SETCOMP ] . size		4812316						
ANR	4813158	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		4812316						
ANR	4813159	Symbol	upd -> writer		4812316						
ANR	4813160	Symbol	S_YSTEP		4812316						
ANR	4813161	Symbol	S_XSTEP		4812316						
ANR	4813162	Symbol	* * upd		4812316						
ANR	4813163	Symbol	I_YSTEP		4812316						
ANR	4813164	Function	upd_wrtescp	4955:0:178380:187353							
ANR	4813165	FunctionDef	"upd_wrtescp (upd_p upd , FILE * out)"		4813164	0					
ANR	4813166	CompoundStatement		4957:0:178425:187353	4813164	0					
ANR	4813167	IdentifierDeclStatement	"int pinbot , pin , pintop , xbegin , x , xend , icomp , ybegin , yend , y , ioutbuf , n , ixpass ;"	4958:3:178430:178503	4813164	0	True				
ANR	4813168	IdentifierDecl	pinbot		4813164	0					
ANR	4813169	IdentifierDeclType	int		4813164	0					
ANR	4813170	Identifier	pinbot		4813164	1					
ANR	4813171	IdentifierDecl	pin		4813164	1					
ANR	4813172	IdentifierDeclType	int		4813164	0					
ANR	4813173	Identifier	pin		4813164	1					
ANR	4813174	IdentifierDecl	pintop		4813164	2					
ANR	4813175	IdentifierDeclType	int		4813164	0					
ANR	4813176	Identifier	pintop		4813164	1					
ANR	4813177	IdentifierDecl	xbegin		4813164	3					
ANR	4813178	IdentifierDeclType	int		4813164	0					
ANR	4813179	Identifier	xbegin		4813164	1					
ANR	4813180	IdentifierDecl	x		4813164	4					
ANR	4813181	IdentifierDeclType	int		4813164	0					
ANR	4813182	Identifier	x		4813164	1					
ANR	4813183	IdentifierDecl	xend		4813164	5					
ANR	4813184	IdentifierDeclType	int		4813164	0					
ANR	4813185	Identifier	xend		4813164	1					
ANR	4813186	IdentifierDecl	icomp		4813164	6					
ANR	4813187	IdentifierDeclType	int		4813164	0					
ANR	4813188	Identifier	icomp		4813164	1					
ANR	4813189	IdentifierDecl	ybegin		4813164	7					
ANR	4813190	IdentifierDeclType	int		4813164	0					
ANR	4813191	Identifier	ybegin		4813164	1					
ANR	4813192	IdentifierDecl	yend		4813164	8					
ANR	4813193	IdentifierDeclType	int		4813164	0					
ANR	4813194	Identifier	yend		4813164	1					
ANR	4813195	IdentifierDecl	y		4813164	9					
ANR	4813196	IdentifierDeclType	int		4813164	0					
ANR	4813197	Identifier	y		4813164	1					
ANR	4813198	IdentifierDecl	ioutbuf		4813164	10					
ANR	4813199	IdentifierDeclType	int		4813164	0					
ANR	4813200	Identifier	ioutbuf		4813164	1					
ANR	4813201	IdentifierDecl	n		4813164	11					
ANR	4813202	IdentifierDeclType	int		4813164	0					
ANR	4813203	Identifier	n		4813164	1					
ANR	4813204	IdentifierDecl	ixpass		4813164	12					
ANR	4813205	IdentifierDeclType	int		4813164	0					
ANR	4813206	Identifier	ixpass		4813164	1					
ANR	4813207	IdentifierDeclStatement	"byte * obytes , bit ;"	4959:3:178508:178524	4813164	1	True				
ANR	4813208	IdentifierDecl	* obytes		4813164	0					
ANR	4813209	IdentifierDeclType	byte *		4813164	0					
ANR	4813210	Identifier	obytes		4813164	1					
ANR	4813211	IdentifierDecl	bit		4813164	1					
ANR	4813212	IdentifierDeclType	byte		4813164	0					
ANR	4813213	Identifier	bit		4813164	1					
ANR	4813214	IdentifierDeclStatement	updscan_p scan ;	4960:3:178529:178543	4813164	2	True				
ANR	4813215	IdentifierDecl	scan		4813164	0					
ANR	4813216	IdentifierDeclType	updscan_p		4813164	0					
ANR	4813217	Identifier	scan		4813164	1					
ANR	4813218	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		4813164	3					
ANR	4813219	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	4964:6:178598:178628	4813164	0	True				
ANR	4813220	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		4813164	0		<			
ANR	4813221	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4813222	Identifier	upd		4813164	0					
ANR	4813223	Identifier	yscan		4813164	1					
ANR	4813224	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4813164	1					
ANR	4813225	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813226	Identifier	upd		4813164	0					
ANR	4813227	Identifier	ints		4813164	1					
ANR	4813228	Identifier	I_BEG_Y		4813164	1					
ANR	4813229	CompoundStatement		8:39:205:205	4813164	1					
ANR	4813230	ExpressionStatement	ixpass = upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]	4965:6:178639:178686	4813164	0	True				
ANR	4813231	AssignmentExpression	ixpass = upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]		4813164	0		=			
ANR	4813232	Identifier	ixpass		4813164	0					
ANR	4813233	ArrayIndexing	upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]		4813164	1					
ANR	4813234	MemberAccess	upd -> int_a [ IA_BEG_IX ] . data		4813164	0					
ANR	4813235	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		4813164	0					
ANR	4813236	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4813237	Identifier	upd		4813164	0					
ANR	4813238	Identifier	int_a		4813164	1					
ANR	4813239	Identifier	IA_BEG_IX		4813164	1					
ANR	4813240	Identifier	data		4813164	1					
ANR	4813241	PtrMemberAccess	upd -> ipass		4813164	1					
ANR	4813242	Identifier	upd		4813164	0					
ANR	4813243	Identifier	ipass		4813164	1					
ANR	4813244	ExpressionStatement	pintop = 0	4966:6:178694:178704	4813164	1	True				
ANR	4813245	AssignmentExpression	pintop = 0		4813164	0		=			
ANR	4813246	Identifier	pintop		4813164	0					
ANR	4813247	PrimaryExpression	0		4813164	1					
ANR	4813248	ExpressionStatement	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]	4967:6:178712:178759	4813164	2	True				
ANR	4813249	AssignmentExpression	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		4813164	0		=			
ANR	4813250	Identifier	pinbot		4813164	0					
ANR	4813251	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		4813164	1					
ANR	4813252	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		4813164	0					
ANR	4813253	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		4813164	0					
ANR	4813254	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4813255	Identifier	upd		4813164	0					
ANR	4813256	Identifier	int_a		4813164	1					
ANR	4813257	Identifier	IA_BEGBOT		4813164	1					
ANR	4813258	Identifier	data		4813164	1					
ANR	4813259	PtrMemberAccess	upd -> ipass		4813164	1					
ANR	4813260	Identifier	upd		4813164	0					
ANR	4813261	Identifier	ipass		4813164	1					
ANR	4813262	ElseStatement	else		4813164	0					
ANR	4813263	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4813164	0					
ANR	4813264	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	4968:13:178774:178805	4813164	0	True				
ANR	4813265	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4813164	0		>=			
ANR	4813266	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4813267	Identifier	upd		4813164	0					
ANR	4813268	Identifier	yscan		4813164	1					
ANR	4813269	ArrayIndexing	upd -> ints [ I_END_Y ]		4813164	1					
ANR	4813270	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813271	Identifier	upd		4813164	0					
ANR	4813272	Identifier	ints		4813164	1					
ANR	4813273	Identifier	I_END_Y		4813164	1					
ANR	4813274	CompoundStatement		12:47:382:382	4813164	1					
ANR	4813275	ExpressionStatement	ixpass = upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]	4969:6:178816:178863	4813164	0	True				
ANR	4813276	AssignmentExpression	ixpass = upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]		4813164	0		=			
ANR	4813277	Identifier	ixpass		4813164	0					
ANR	4813278	ArrayIndexing	upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]		4813164	1					
ANR	4813279	MemberAccess	upd -> int_a [ IA_END_IX ] . data		4813164	0					
ANR	4813280	ArrayIndexing	upd -> int_a [ IA_END_IX ]		4813164	0					
ANR	4813281	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4813282	Identifier	upd		4813164	0					
ANR	4813283	Identifier	int_a		4813164	1					
ANR	4813284	Identifier	IA_END_IX		4813164	1					
ANR	4813285	Identifier	data		4813164	1					
ANR	4813286	PtrMemberAccess	upd -> ipass		4813164	1					
ANR	4813287	Identifier	upd		4813164	0					
ANR	4813288	Identifier	ipass		4813164	1					
ANR	4813289	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	4970:6:178871:178903	4813164	1	True				
ANR	4813290	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		4813164	0		=			
ANR	4813291	Identifier	pinbot		4813164	0					
ANR	4813292	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4813164	1					
ANR	4813293	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813294	Identifier	upd		4813164	0					
ANR	4813295	Identifier	ints		4813164	1					
ANR	4813296	Identifier	I_PINS2WRITE		4813164	1					
ANR	4813297	ExpressionStatement	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]	4971:6:178911:178967	4813164	2	True				
ANR	4813298	AssignmentExpression	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4813164	0		=			
ANR	4813299	Identifier	pintop		4813164	0					
ANR	4813300	AdditiveExpression	pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4813164	1		-			
ANR	4813301	Identifier	pinbot		4813164	0					
ANR	4813302	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4813164	1					
ANR	4813303	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		4813164	0					
ANR	4813304	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4813164	0					
ANR	4813305	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4813306	Identifier	upd		4813164	0					
ANR	4813307	Identifier	int_a		4813164	1					
ANR	4813308	Identifier	IA_ENDTOP		4813164	1					
ANR	4813309	Identifier	data		4813164	1					
ANR	4813310	PtrMemberAccess	upd -> ipass		4813164	1					
ANR	4813311	Identifier	upd		4813164	0					
ANR	4813312	Identifier	ipass		4813164	1					
ANR	4813313	ElseStatement	else		4813164	0					
ANR	4813314	CompoundStatement		16:10:553:553	4813164	0					
ANR	4813315	ExpressionStatement	ixpass = upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]	4973:6:178987:179034	4813164	0	True				
ANR	4813316	AssignmentExpression	ixpass = upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]		4813164	0		=			
ANR	4813317	Identifier	ixpass		4813164	0					
ANR	4813318	ArrayIndexing	upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]		4813164	1					
ANR	4813319	MemberAccess	upd -> int_a [ IA_STD_IX ] . data		4813164	0					
ANR	4813320	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		4813164	0					
ANR	4813321	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4813322	Identifier	upd		4813164	0					
ANR	4813323	Identifier	int_a		4813164	1					
ANR	4813324	Identifier	IA_STD_IX		4813164	1					
ANR	4813325	Identifier	data		4813164	1					
ANR	4813326	PtrMemberAccess	upd -> ipass		4813164	1					
ANR	4813327	Identifier	upd		4813164	0					
ANR	4813328	Identifier	ipass		4813164	1					
ANR	4813329	ExpressionStatement	pintop = 0	4974:6:179042:179052	4813164	1	True				
ANR	4813330	AssignmentExpression	pintop = 0		4813164	0		=			
ANR	4813331	Identifier	pintop		4813164	0					
ANR	4813332	PrimaryExpression	0		4813164	1					
ANR	4813333	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	4975:6:179060:179092	4813164	2	True				
ANR	4813334	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		4813164	0		=			
ANR	4813335	Identifier	pinbot		4813164	0					
ANR	4813336	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4813164	1					
ANR	4813337	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813338	Identifier	upd		4813164	0					
ANR	4813339	Identifier	ints		4813164	1					
ANR	4813340	Identifier	I_PINS2WRITE		4813164	1					
ANR	4813341	ExpressionStatement	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	4978:3:179103:179177	4813164	4	True				
ANR	4813342	AssignmentExpression	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4813164	0		=			
ANR	4813343	Identifier	ybegin		4813164	0					
ANR	4813344	AdditiveExpression	pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4813164	1		+			
ANR	4813345	MultiplicativeExpression	pintop * upd -> ints [ I_NYPASS ]		4813164	0		*			
ANR	4813346	Identifier	pintop		4813164	0					
ANR	4813347	ArrayIndexing	upd -> ints [ I_NYPASS ]		4813164	1					
ANR	4813348	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813349	Identifier	upd		4813164	0					
ANR	4813350	Identifier	ints		4813164	1					
ANR	4813351	Identifier	I_NYPASS		4813164	1					
ANR	4813352	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		4813164	1		-			
ANR	4813353	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4813354	Identifier	upd		4813164	0					
ANR	4813355	Identifier	yscan		4813164	1					
ANR	4813356	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		4813164	1					
ANR	4813357	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813358	Identifier	upd		4813164	0					
ANR	4813359	Identifier	ints		4813164	1					
ANR	4813360	Identifier	I_BEGSKIP		4813164	1					
ANR	4813361	ExpressionStatement	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	4979:3:179182:179256	4813164	5	True				
ANR	4813362	AssignmentExpression	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4813164	0		=			
ANR	4813363	Identifier	yend		4813164	0					
ANR	4813364	AdditiveExpression	pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4813164	1		+			
ANR	4813365	MultiplicativeExpression	pinbot * upd -> ints [ I_NYPASS ]		4813164	0		*			
ANR	4813366	Identifier	pinbot		4813164	0					
ANR	4813367	ArrayIndexing	upd -> ints [ I_NYPASS ]		4813164	1					
ANR	4813368	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813369	Identifier	upd		4813164	0					
ANR	4813370	Identifier	ints		4813164	1					
ANR	4813371	Identifier	I_NYPASS		4813164	1					
ANR	4813372	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		4813164	1		-			
ANR	4813373	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4813374	Identifier	upd		4813164	0					
ANR	4813375	Identifier	yscan		4813164	1					
ANR	4813376	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		4813164	1					
ANR	4813377	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813378	Identifier	upd		4813164	0					
ANR	4813379	Identifier	ints		4813164	1					
ANR	4813380	Identifier	I_BEGSKIP		4813164	1					
ANR	4813381	ExpressionStatement	xbegin = upd -> pwidth	4983:3:179299:179319	4813164	6	True				
ANR	4813382	AssignmentExpression	xbegin = upd -> pwidth		4813164	0		=			
ANR	4813383	Identifier	xbegin		4813164	0					
ANR	4813384	PtrMemberAccess	upd -> pwidth		4813164	1					
ANR	4813385	Identifier	upd		4813164	0					
ANR	4813386	Identifier	pwidth		4813164	1					
ANR	4813387	ExpressionStatement	xend = - 1	4984:3:179324:179335	4813164	7	True				
ANR	4813388	AssignmentExpression	xend = - 1		4813164	0		=			
ANR	4813389	Identifier	xend		4813164	0					
ANR	4813390	UnaryOperationExpression	- 1		4813164	1					
ANR	4813391	UnaryOperator	-		4813164	0					
ANR	4813392	PrimaryExpression	1		4813164	1					
ANR	4813393	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4813164	8					
ANR	4813394	ForInit	y = ybegin ;	4986:7:179345:179355	4813164	0	True				
ANR	4813395	AssignmentExpression	y = ybegin		4813164	0		=			
ANR	4813396	Identifier	y		4813164	0					
ANR	4813397	Identifier	ybegin		4813164	1					
ANR	4813398	Condition	y < yend	4986:19:179357:179364	4813164	1	True				
ANR	4813399	RelationalExpression	y < yend		4813164	0		<			
ANR	4813400	Identifier	y		4813164	0					
ANR	4813401	Identifier	yend		4813164	1					
ANR	4813402	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	4986:29:179367:179390	4813164	2	True	+=			
ANR	4813403	Identifier	y		4813164	0					
ANR	4813404	ArrayIndexing	upd -> ints [ I_NYPASS ]		4813164	1					
ANR	4813405	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813406	Identifier	upd		4813164	0					
ANR	4813407	Identifier	ints		4813164	1					
ANR	4813408	Identifier	I_NYPASS		4813164	1					
ANR	4813409	CompoundStatement		30:55:967:967	4813164	3					
ANR	4813410	IfStatement	if ( 0 > y )		4813164	0					
ANR	4813411	Condition	0 > y	4988:9:179424:179428	4813164	0	True				
ANR	4813412	RelationalExpression	0 > y		4813164	0		>			
ANR	4813413	PrimaryExpression	0		4813164	0					
ANR	4813414	Identifier	y		4813164	1					
ANR	4813415	ContinueStatement	continue ;	4988:16:179431:179439	4813164	1	True				
ANR	4813416	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ]	4990:6:179473:179508	4813164	1	True				
ANR	4813417	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ]		4813164	0		=			
ANR	4813418	Identifier	scan		4813164	0					
ANR	4813419	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4813164	1					
ANR	4813420	PtrMemberAccess	upd -> scnbuf		4813164	0					
ANR	4813421	Identifier	upd		4813164	0					
ANR	4813422	Identifier	scnbuf		4813164	1					
ANR	4813423	BitAndExpression	y & upd -> scnmsk		4813164	1		&			
ANR	4813424	Identifier	y		4813164	0					
ANR	4813425	PtrMemberAccess	upd -> scnmsk		4813164	1					
ANR	4813426	Identifier	upd		4813164	0					
ANR	4813427	Identifier	scnmsk		4813164	1					
ANR	4813428	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4813164	2					
ANR	4813429	ForInit	icomp = 0 ;	4992:10:179521:179530	4813164	0	True				
ANR	4813430	AssignmentExpression	icomp = 0		4813164	0		=			
ANR	4813431	Identifier	icomp		4813164	0					
ANR	4813432	PrimaryExpression	0		4813164	1					
ANR	4813433	Condition	icomp < upd -> ocomp	4992:21:179532:179549	4813164	1	True				
ANR	4813434	RelationalExpression	icomp < upd -> ocomp		4813164	0		<			
ANR	4813435	Identifier	icomp		4813164	0					
ANR	4813436	PtrMemberAccess	upd -> ocomp		4813164	1					
ANR	4813437	Identifier	upd		4813164	0					
ANR	4813438	Identifier	ocomp		4813164	1					
ANR	4813439	UnaryExpression	++ icomp	4992:41:179552:179558	4813164	2	True				
ANR	4813440	IncDec	++		4813164	0					
ANR	4813441	Identifier	icomp		4813164	1					
ANR	4813442	CompoundStatement		36:50:1135:1135	4813164	3					
ANR	4813443	IfStatement	if ( xbegin > scan [ icomp ] . xbegin [ ixpass ] )		4813164	0					
ANR	4813444	Condition	xbegin > scan [ icomp ] . xbegin [ ixpass ]	4993:12:179595:179629	4813164	0	True				
ANR	4813445	RelationalExpression	xbegin > scan [ icomp ] . xbegin [ ixpass ]		4813164	0		>			
ANR	4813446	Identifier	xbegin		4813164	0					
ANR	4813447	ArrayIndexing	scan [ icomp ] . xbegin [ ixpass ]		4813164	1					
ANR	4813448	MemberAccess	scan [ icomp ] . xbegin		4813164	0					
ANR	4813449	ArrayIndexing	scan [ icomp ]		4813164	0					
ANR	4813450	Identifier	scan		4813164	0					
ANR	4813451	Identifier	icomp		4813164	1					
ANR	4813452	Identifier	xbegin		4813164	1					
ANR	4813453	Identifier	ixpass		4813164	1					
ANR	4813454	ExpressionStatement	xbegin = scan [ icomp ] . xbegin [ ixpass ]	4994:12:179644:179679	4813164	1	True				
ANR	4813455	AssignmentExpression	xbegin = scan [ icomp ] . xbegin [ ixpass ]		4813164	0		=			
ANR	4813456	Identifier	xbegin		4813164	0					
ANR	4813457	ArrayIndexing	scan [ icomp ] . xbegin [ ixpass ]		4813164	1					
ANR	4813458	MemberAccess	scan [ icomp ] . xbegin		4813164	0					
ANR	4813459	ArrayIndexing	scan [ icomp ]		4813164	0					
ANR	4813460	Identifier	scan		4813164	0					
ANR	4813461	Identifier	icomp		4813164	1					
ANR	4813462	Identifier	xbegin		4813164	1					
ANR	4813463	Identifier	ixpass		4813164	1					
ANR	4813464	IfStatement	if ( xend < scan [ icomp ] . xend [ ixpass ] )		4813164	1					
ANR	4813465	Condition	xend < scan [ icomp ] . xend [ ixpass ]	4995:12:179693:179727	4813164	0	True				
ANR	4813466	RelationalExpression	xend < scan [ icomp ] . xend [ ixpass ]		4813164	0		<			
ANR	4813467	Identifier	xend		4813164	0					
ANR	4813468	ArrayIndexing	scan [ icomp ] . xend [ ixpass ]		4813164	1					
ANR	4813469	MemberAccess	scan [ icomp ] . xend		4813164	0					
ANR	4813470	ArrayIndexing	scan [ icomp ]		4813164	0					
ANR	4813471	Identifier	scan		4813164	0					
ANR	4813472	Identifier	icomp		4813164	1					
ANR	4813473	Identifier	xend		4813164	1					
ANR	4813474	Identifier	ixpass		4813164	1					
ANR	4813475	ExpressionStatement	xend = scan [ icomp ] . xend [ ixpass ]	4996:12:179742:179777	4813164	1	True				
ANR	4813476	AssignmentExpression	xend = scan [ icomp ] . xend [ ixpass ]		4813164	0		=			
ANR	4813477	Identifier	xend		4813164	0					
ANR	4813478	ArrayIndexing	scan [ icomp ] . xend [ ixpass ]		4813164	1					
ANR	4813479	MemberAccess	scan [ icomp ] . xend		4813164	0					
ANR	4813480	ArrayIndexing	scan [ icomp ]		4813164	0					
ANR	4813481	Identifier	scan		4813164	0					
ANR	4813482	Identifier	icomp		4813164	1					
ANR	4813483	Identifier	xend		4813164	1					
ANR	4813484	Identifier	ixpass		4813164	1					
ANR	4813485	IfStatement	if ( xbegin <= xend )		4813164	9					
ANR	4813486	Condition	xbegin <= xend	5001:6:179935:179948	4813164	0	True				
ANR	4813487	RelationalExpression	xbegin <= xend		4813164	0		<=			
ANR	4813488	Identifier	xbegin		4813164	0					
ANR	4813489	Identifier	xend		4813164	1					
ANR	4813490	CompoundStatement		45:22:1525:1525	4813164	1					
ANR	4813491	ExpressionStatement	ioutbuf = 0	5003:6:179985:179996	4813164	0	True				
ANR	4813492	AssignmentExpression	ioutbuf = 0		4813164	0		=			
ANR	4813493	Identifier	ioutbuf		4813164	0					
ANR	4813494	PrimaryExpression	0		4813164	1					
ANR	4813495	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		4813164	1					
ANR	4813496	Condition	0 == upd -> strings [ S_XMOVE ] . size	5005:9:180008:180038	4813164	0	True				
ANR	4813497	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4813164	0		==			
ANR	4813498	PrimaryExpression	0		4813164	0					
ANR	4813499	MemberAccess	upd -> strings [ S_XMOVE ] . size		4813164	1					
ANR	4813500	ArrayIndexing	upd -> strings [ S_XMOVE ]		4813164	0					
ANR	4813501	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813502	Identifier	upd		4813164	0					
ANR	4813503	Identifier	strings		4813164	1					
ANR	4813504	Identifier	S_XMOVE		4813164	1					
ANR	4813505	Identifier	size		4813164	1					
ANR	4813506	ExpressionStatement	xbegin = ixpass	5005:42:180041:180056	4813164	1	True				
ANR	4813507	AssignmentExpression	xbegin = ixpass		4813164	0		=			
ANR	4813508	Identifier	xbegin		4813164	0					
ANR	4813509	Identifier	ixpass		4813164	1					
ANR	4813510	IfStatement	if ( upd -> yscan != upd -> yprinter )		4813164	2					
ANR	4813511	Condition	upd -> yscan != upd -> yprinter	5010:9:180112:180138	4813164	0	True				
ANR	4813512	EqualityExpression	upd -> yscan != upd -> yprinter		4813164	0		!=			
ANR	4813513	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4813514	Identifier	upd		4813164	0					
ANR	4813515	Identifier	yscan		4813164	1					
ANR	4813516	PtrMemberAccess	upd -> yprinter		4813164	1					
ANR	4813517	Identifier	upd		4813164	0					
ANR	4813518	Identifier	yprinter		4813164	1					
ANR	4813519	CompoundStatement		54:38:1715:1715	4813164	1					
ANR	4813520	IfStatement	if ( B_YABS & upd -> flags )		4813164	0					
ANR	4813521	Condition	B_YABS & upd -> flags	5011:12:180179:180197	4813164	0	True				
ANR	4813522	BitAndExpression	B_YABS & upd -> flags		4813164	0		&			
ANR	4813523	Identifier	B_YABS		4813164	0					
ANR	4813524	PtrMemberAccess	upd -> flags		4813164	1					
ANR	4813525	Identifier	upd		4813164	0					
ANR	4813526	Identifier	flags		4813164	1					
ANR	4813527	ExpressionStatement	y = upd -> yscan + upd -> ints [ I_YOFS ]	5011:33:180200:180234	4813164	1	True				
ANR	4813528	AssignmentExpression	y = upd -> yscan + upd -> ints [ I_YOFS ]		4813164	0		=			
ANR	4813529	Identifier	y		4813164	0					
ANR	4813530	AdditiveExpression	upd -> yscan + upd -> ints [ I_YOFS ]		4813164	1		+			
ANR	4813531	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4813532	Identifier	upd		4813164	0					
ANR	4813533	Identifier	yscan		4813164	1					
ANR	4813534	ArrayIndexing	upd -> ints [ I_YOFS ]		4813164	1					
ANR	4813535	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813536	Identifier	upd		4813164	0					
ANR	4813537	Identifier	ints		4813164	1					
ANR	4813538	Identifier	I_YOFS		4813164	1					
ANR	4813539	ElseStatement	else		4813164	0					
ANR	4813540	ExpressionStatement	y = upd -> yscan - upd -> yprinter	5012:33:180269:180299	4813164	0	True				
ANR	4813541	AssignmentExpression	y = upd -> yscan - upd -> yprinter		4813164	0		=			
ANR	4813542	Identifier	y		4813164	0					
ANR	4813543	AdditiveExpression	upd -> yscan - upd -> yprinter		4813164	1		-			
ANR	4813544	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4813545	Identifier	upd		4813164	0					
ANR	4813546	Identifier	yscan		4813164	1					
ANR	4813547	PtrMemberAccess	upd -> yprinter		4813164	1					
ANR	4813548	Identifier	upd		4813164	0					
ANR	4813549	Identifier	yprinter		4813164	1					
ANR	4813550	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		4813164	1					
ANR	4813551	Condition	1 < upd -> ints [ I_YSTEP ]	5014:18:180320:180341	4813164	0	True				
ANR	4813552	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		4813164	0		<			
ANR	4813553	PrimaryExpression	1		4813164	0					
ANR	4813554	ArrayIndexing	upd -> ints [ I_YSTEP ]		4813164	1					
ANR	4813555	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813556	Identifier	upd		4813164	0					
ANR	4813557	Identifier	ints		4813164	1					
ANR	4813558	Identifier	I_YSTEP		4813164	1					
ANR	4813559	CompoundStatement		58:42:1918:1918	4813164	1					
ANR	4813560	ExpressionStatement	n = y / upd -> ints [ I_YSTEP ]	5015:12:180358:180390	4813164	0	True				
ANR	4813561	AssignmentExpression	n = y / upd -> ints [ I_YSTEP ]		4813164	0		=			
ANR	4813562	Identifier	n		4813164	0					
ANR	4813563	MultiplicativeExpression	y / upd -> ints [ I_YSTEP ]		4813164	1		/			
ANR	4813564	Identifier	y		4813164	0					
ANR	4813565	ArrayIndexing	upd -> ints [ I_YSTEP ]		4813164	1					
ANR	4813566	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813567	Identifier	upd		4813164	0					
ANR	4813568	Identifier	ints		4813164	1					
ANR	4813569	Identifier	I_YSTEP		4813164	1					
ANR	4813570	ExpressionStatement	y -= n * upd -> ints [ I_YSTEP ]	5016:12:180423:180455	4813164	1	True				
ANR	4813571	AssignmentExpression	y -= n * upd -> ints [ I_YSTEP ]		4813164	0		-=			
ANR	4813572	Identifier	y		4813164	0					
ANR	4813573	MultiplicativeExpression	n * upd -> ints [ I_YSTEP ]		4813164	1		*			
ANR	4813574	Identifier	n		4813164	0					
ANR	4813575	ArrayIndexing	upd -> ints [ I_YSTEP ]		4813164	1					
ANR	4813576	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813577	Identifier	upd		4813164	0					
ANR	4813578	Identifier	ints		4813164	1					
ANR	4813579	Identifier	I_YSTEP		4813164	1					
ANR	4813580	ElseStatement	else		4813164	0					
ANR	4813581	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		4813164	0					
ANR	4813582	Condition	- 1 > upd -> ints [ I_YSTEP ]	5017:19:180495:180517	4813164	0	True				
ANR	4813583	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		4813164	0		>			
ANR	4813584	UnaryOperationExpression	- 1		4813164	0					
ANR	4813585	UnaryOperator	-		4813164	0					
ANR	4813586	PrimaryExpression	1		4813164	1					
ANR	4813587	ArrayIndexing	upd -> ints [ I_YSTEP ]		4813164	1					
ANR	4813588	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813589	Identifier	upd		4813164	0					
ANR	4813590	Identifier	ints		4813164	1					
ANR	4813591	Identifier	I_YSTEP		4813164	1					
ANR	4813592	CompoundStatement		61:44:2094:2094	4813164	1					
ANR	4813593	ExpressionStatement	n = y * - upd -> ints [ I_YSTEP ]	5018:12:180534:180566	4813164	0	True				
ANR	4813594	AssignmentExpression	n = y * - upd -> ints [ I_YSTEP ]		4813164	0		=			
ANR	4813595	Identifier	n		4813164	0					
ANR	4813596	MultiplicativeExpression	y * - upd -> ints [ I_YSTEP ]		4813164	1		*			
ANR	4813597	Identifier	y		4813164	0					
ANR	4813598	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		4813164	1					
ANR	4813599	UnaryOperator	-		4813164	0					
ANR	4813600	ArrayIndexing	upd -> ints [ I_YSTEP ]		4813164	1					
ANR	4813601	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813602	Identifier	upd		4813164	0					
ANR	4813603	Identifier	ints		4813164	1					
ANR	4813604	Identifier	I_YSTEP		4813164	1					
ANR	4813605	ExpressionStatement	y = 0	5019:12:180602:180612	4813164	1	True				
ANR	4813606	AssignmentExpression	y = 0		4813164	0		=			
ANR	4813607	Identifier	y		4813164	0					
ANR	4813608	PrimaryExpression	0		4813164	1					
ANR	4813609	ElseStatement	else		4813164	0					
ANR	4813610	CompoundStatement		64:16:2204:2204	4813164	0					
ANR	4813611	ExpressionStatement	n = y	5021:12:180644:180654	4813164	0	True				
ANR	4813612	AssignmentExpression	n = y		4813164	0		=			
ANR	4813613	Identifier	n		4813164	0					
ANR	4813614	Identifier	y		4813164	1					
ANR	4813615	ExpressionStatement	y = 0	5022:12:180668:180678	4813164	1	True				
ANR	4813616	AssignmentExpression	y = 0		4813164	0		=			
ANR	4813617	Identifier	y		4813164	0					
ANR	4813618	PrimaryExpression	0		4813164	1					
ANR	4813619	IfStatement	if ( n )		4813164	2					
ANR	4813620	Condition	n	5025:12:180704:180704	4813164	0	True				
ANR	4813621	Identifier	n		4813164	0					
ANR	4813622	CompoundStatement		69:15:2281:2281	4813164	1					
ANR	4813623	IfStatement	if ( 0 < upd -> strings [ S_YMOVE ] . size )		4813164	0					
ANR	4813624	Condition	0 < upd -> strings [ S_YMOVE ] . size	5026:15:180749:180778	4813164	0	True				
ANR	4813625	RelationalExpression	0 < upd -> strings [ S_YMOVE ] . size		4813164	0		<			
ANR	4813626	PrimaryExpression	0		4813164	0					
ANR	4813627	MemberAccess	upd -> strings [ S_YMOVE ] . size		4813164	1					
ANR	4813628	ArrayIndexing	upd -> strings [ S_YMOVE ]		4813164	0					
ANR	4813629	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813630	Identifier	upd		4813164	0					
ANR	4813631	Identifier	strings		4813164	1					
ANR	4813632	Identifier	S_YMOVE		4813164	1					
ANR	4813633	Identifier	size		4813164	1					
ANR	4813634	CompoundStatement		70:47:2355:2355	4813164	1					
ANR	4813635	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"	5028:15:180799:180934	4813164	0	True				
ANR	4813636	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"		4813164	0					
ANR	4813637	Callee	memcpy		4813164	0					
ANR	4813638	Identifier	memcpy		4813164	0					
ANR	4813639	ArgumentList	upd -> outbuf + ioutbuf		4813164	1					
ANR	4813640	Argument	upd -> outbuf + ioutbuf		4813164	0					
ANR	4813641	AdditiveExpression	upd -> outbuf + ioutbuf		4813164	0		+			
ANR	4813642	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4813643	Identifier	upd		4813164	0					
ANR	4813644	Identifier	outbuf		4813164	1					
ANR	4813645	Identifier	ioutbuf		4813164	1					
ANR	4813646	Argument	upd -> strings [ S_YMOVE ] . data		4813164	1					
ANR	4813647	MemberAccess	upd -> strings [ S_YMOVE ] . data		4813164	0					
ANR	4813648	ArrayIndexing	upd -> strings [ S_YMOVE ]		4813164	0					
ANR	4813649	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813650	Identifier	upd		4813164	0					
ANR	4813651	Identifier	strings		4813164	1					
ANR	4813652	Identifier	S_YMOVE		4813164	1					
ANR	4813653	Identifier	data		4813164	1					
ANR	4813654	Argument	upd -> strings [ S_YMOVE ] . size		4813164	2					
ANR	4813655	MemberAccess	upd -> strings [ S_YMOVE ] . size		4813164	0					
ANR	4813656	ArrayIndexing	upd -> strings [ S_YMOVE ]		4813164	0					
ANR	4813657	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813658	Identifier	upd		4813164	0					
ANR	4813659	Identifier	strings		4813164	1					
ANR	4813660	Identifier	S_YMOVE		4813164	1					
ANR	4813661	Identifier	size		4813164	1					
ANR	4813662	ExpressionStatement	ioutbuf += upd -> strings [ S_YMOVE ] . size	5031:15:180951:180988	4813164	1	True				
ANR	4813663	AssignmentExpression	ioutbuf += upd -> strings [ S_YMOVE ] . size		4813164	0		+=			
ANR	4813664	Identifier	ioutbuf		4813164	0					
ANR	4813665	MemberAccess	upd -> strings [ S_YMOVE ] . size		4813164	1					
ANR	4813666	ArrayIndexing	upd -> strings [ S_YMOVE ]		4813164	0					
ANR	4813667	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813668	Identifier	upd		4813164	0					
ANR	4813669	Identifier	strings		4813164	1					
ANR	4813670	Identifier	S_YMOVE		4813164	1					
ANR	4813671	Identifier	size		4813164	1					
ANR	4813672	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5033:15:181006:181044	4813164	2	True				
ANR	4813673	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		4813164	0		=			
ANR	4813674	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4813164	0					
ANR	4813675	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4813676	Identifier	upd		4813164	0					
ANR	4813677	Identifier	outbuf		4813164	1					
ANR	4813678	PostIncDecOperationExpression	ioutbuf ++		4813164	1					
ANR	4813679	Identifier	ioutbuf		4813164	0					
ANR	4813680	IncDec	++		4813164	1					
ANR	4813681	BitAndExpression	n & 0xff		4813164	1		&			
ANR	4813682	Identifier	n		4813164	0					
ANR	4813683	PrimaryExpression	0xff		4813164	1					
ANR	4813684	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5034:15:181061:181099	4813164	3	True				
ANR	4813685	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		4813164	0		=			
ANR	4813686	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4813164	0					
ANR	4813687	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4813688	Identifier	upd		4813164	0					
ANR	4813689	Identifier	outbuf		4813164	1					
ANR	4813690	PostIncDecOperationExpression	ioutbuf ++		4813164	1					
ANR	4813691	Identifier	ioutbuf		4813164	0					
ANR	4813692	IncDec	++		4813164	1					
ANR	4813693	BitAndExpression	( n >> 8 ) & 0xff		4813164	1		&			
ANR	4813694	ShiftExpression	n >> 8		4813164	0		>>			
ANR	4813695	Identifier	n		4813164	0					
ANR	4813696	PrimaryExpression	8		4813164	1					
ANR	4813697	PrimaryExpression	0xff		4813164	1					
ANR	4813698	ElseStatement	else		4813164	0					
ANR	4813699	CompoundStatement		80:19:2695:2695	4813164	0					
ANR	4813700	WhileStatement	while ( n )		4813164	0					
ANR	4813701	Condition	n	5038:21:181145:181145	4813164	0	True				
ANR	4813702	Identifier	n		4813164	0					
ANR	4813703	CompoundStatement		83:18:2742:2770	4813164	1					
ANR	4813704	IdentifierDeclStatement	int n2do = n > 255 ? 255 : n ;	5039:18:181168:181196	4813164	0	True				
ANR	4813705	IdentifierDecl	n2do = n > 255 ? 255 : n		4813164	0					
ANR	4813706	IdentifierDeclType	int		4813164	0					
ANR	4813707	Identifier	n2do		4813164	1					
ANR	4813708	AssignmentExpression	n2do = n > 255 ? 255 : n		4813164	2		=			
ANR	4813709	Identifier	n2do		4813164	0					
ANR	4813710	ConditionalExpression	n > 255 ? 255 : n		4813164	1					
ANR	4813711	Condition	n > 255		4813164	0					
ANR	4813712	RelationalExpression	n > 255		4813164	0		>			
ANR	4813713	Identifier	n		4813164	0					
ANR	4813714	PrimaryExpression	255		4813164	1					
ANR	4813715	PrimaryExpression	255		4813164	1					
ANR	4813716	Identifier	n		4813164	2					
ANR	4813717	IfStatement	if ( upd -> lf != n2do )		4813164	1					
ANR	4813718	Condition	upd -> lf != n2do	5040:21:181219:181233	4813164	0	True				
ANR	4813719	EqualityExpression	upd -> lf != n2do		4813164	0		!=			
ANR	4813720	PtrMemberAccess	upd -> lf		4813164	0					
ANR	4813721	Identifier	upd		4813164	0					
ANR	4813722	Identifier	lf		4813164	1					
ANR	4813723	Identifier	n2do		4813164	1					
ANR	4813724	CompoundStatement		84:38:2810:2810	4813164	1					
ANR	4813725	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_SETLF ] . data , upd -> strings [ S_SETLF ] . size )"	5041:21:181259:181406	4813164	0	True				
ANR	4813726	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_SETLF ] . data , upd -> strings [ S_SETLF ] . size )"		4813164	0					
ANR	4813727	Callee	memcpy		4813164	0					
ANR	4813728	Identifier	memcpy		4813164	0					
ANR	4813729	ArgumentList	upd -> outbuf + ioutbuf		4813164	1					
ANR	4813730	Argument	upd -> outbuf + ioutbuf		4813164	0					
ANR	4813731	AdditiveExpression	upd -> outbuf + ioutbuf		4813164	0		+			
ANR	4813732	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4813733	Identifier	upd		4813164	0					
ANR	4813734	Identifier	outbuf		4813164	1					
ANR	4813735	Identifier	ioutbuf		4813164	1					
ANR	4813736	Argument	upd -> strings [ S_SETLF ] . data		4813164	1					
ANR	4813737	MemberAccess	upd -> strings [ S_SETLF ] . data		4813164	0					
ANR	4813738	ArrayIndexing	upd -> strings [ S_SETLF ]		4813164	0					
ANR	4813739	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813740	Identifier	upd		4813164	0					
ANR	4813741	Identifier	strings		4813164	1					
ANR	4813742	Identifier	S_SETLF		4813164	1					
ANR	4813743	Identifier	data		4813164	1					
ANR	4813744	Argument	upd -> strings [ S_SETLF ] . size		4813164	2					
ANR	4813745	MemberAccess	upd -> strings [ S_SETLF ] . size		4813164	0					
ANR	4813746	ArrayIndexing	upd -> strings [ S_SETLF ]		4813164	0					
ANR	4813747	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813748	Identifier	upd		4813164	0					
ANR	4813749	Identifier	strings		4813164	1					
ANR	4813750	Identifier	S_SETLF		4813164	1					
ANR	4813751	Identifier	size		4813164	1					
ANR	4813752	ExpressionStatement	ioutbuf += upd -> strings [ S_SETLF ] . size	5044:21:181429:181466	4813164	1	True				
ANR	4813753	AssignmentExpression	ioutbuf += upd -> strings [ S_SETLF ] . size		4813164	0		+=			
ANR	4813754	Identifier	ioutbuf		4813164	0					
ANR	4813755	MemberAccess	upd -> strings [ S_SETLF ] . size		4813164	1					
ANR	4813756	ArrayIndexing	upd -> strings [ S_SETLF ]		4813164	0					
ANR	4813757	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813758	Identifier	upd		4813164	0					
ANR	4813759	Identifier	strings		4813164	1					
ANR	4813760	Identifier	S_SETLF		4813164	1					
ANR	4813761	Identifier	size		4813164	1					
ANR	4813762	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n2do	5045:21:181489:181518	4813164	2	True				
ANR	4813763	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n2do		4813164	0		=			
ANR	4813764	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4813164	0					
ANR	4813765	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4813766	Identifier	upd		4813164	0					
ANR	4813767	Identifier	outbuf		4813164	1					
ANR	4813768	PostIncDecOperationExpression	ioutbuf ++		4813164	1					
ANR	4813769	Identifier	ioutbuf		4813164	0					
ANR	4813770	IncDec	++		4813164	1					
ANR	4813771	Identifier	n2do		4813164	1					
ANR	4813772	ExpressionStatement	upd -> lf = n2do	5046:21:181541:181570	4813164	3	True				
ANR	4813773	AssignmentExpression	upd -> lf = n2do		4813164	0		=			
ANR	4813774	PtrMemberAccess	upd -> lf		4813164	0					
ANR	4813775	Identifier	upd		4813164	0					
ANR	4813776	Identifier	lf		4813164	1					
ANR	4813777	Identifier	n2do		4813164	1					
ANR	4813778	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\n'	5048:18:181610:181639	4813164	2	True				
ANR	4813779	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\n'		4813164	0		=			
ANR	4813780	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4813164	0					
ANR	4813781	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4813782	Identifier	upd		4813164	0					
ANR	4813783	Identifier	outbuf		4813164	1					
ANR	4813784	PostIncDecOperationExpression	ioutbuf ++		4813164	1					
ANR	4813785	Identifier	ioutbuf		4813164	0					
ANR	4813786	IncDec	++		4813164	1					
ANR	4813787	PrimaryExpression	'\\n'		4813164	1					
ANR	4813788	ExpressionStatement	n -= n2do	5049:18:181659:181668	4813164	3	True				
ANR	4813789	AssignmentExpression	n -= n2do		4813164	0		-=			
ANR	4813790	Identifier	n		4813164	0					
ANR	4813791	Identifier	n2do		4813164	1					
ANR	4813792	IfStatement	if ( 0 < upd -> strings [ S_YSTEP ] . size )		4813164	3					
ANR	4813793	Condition	0 < upd -> strings [ S_YSTEP ] . size	5054:12:181756:181785	4813164	0	True				
ANR	4813794	RelationalExpression	0 < upd -> strings [ S_YSTEP ] . size		4813164	0		<			
ANR	4813795	PrimaryExpression	0		4813164	0					
ANR	4813796	MemberAccess	upd -> strings [ S_YSTEP ] . size		4813164	1					
ANR	4813797	ArrayIndexing	upd -> strings [ S_YSTEP ]		4813164	0					
ANR	4813798	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813799	Identifier	upd		4813164	0					
ANR	4813800	Identifier	strings		4813164	1					
ANR	4813801	Identifier	S_YSTEP		4813164	1					
ANR	4813802	Identifier	size		4813164	1					
ANR	4813803	CompoundStatement		98:44:3362:3362	4813164	1					
ANR	4813804	WhileStatement	while ( y -- )		4813164	0					
ANR	4813805	Condition	y --	5055:18:181808:181810	4813164	0	True				
ANR	4813806	PostIncDecOperationExpression	y --		4813164	0					
ANR	4813807	Identifier	y		4813164	0					
ANR	4813808	IncDec	--		4813164	1					
ANR	4813809	CompoundStatement		99:23:3387:3387	4813164	1					
ANR	4813810	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"	5056:15:181830:181965	4813164	0	True				
ANR	4813811	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"		4813164	0					
ANR	4813812	Callee	memcpy		4813164	0					
ANR	4813813	Identifier	memcpy		4813164	0					
ANR	4813814	ArgumentList	upd -> outbuf + ioutbuf		4813164	1					
ANR	4813815	Argument	upd -> outbuf + ioutbuf		4813164	0					
ANR	4813816	AdditiveExpression	upd -> outbuf + ioutbuf		4813164	0		+			
ANR	4813817	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4813818	Identifier	upd		4813164	0					
ANR	4813819	Identifier	outbuf		4813164	1					
ANR	4813820	Identifier	ioutbuf		4813164	1					
ANR	4813821	Argument	upd -> strings [ S_YSTEP ] . data		4813164	1					
ANR	4813822	MemberAccess	upd -> strings [ S_YSTEP ] . data		4813164	0					
ANR	4813823	ArrayIndexing	upd -> strings [ S_YSTEP ]		4813164	0					
ANR	4813824	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813825	Identifier	upd		4813164	0					
ANR	4813826	Identifier	strings		4813164	1					
ANR	4813827	Identifier	S_YSTEP		4813164	1					
ANR	4813828	Identifier	data		4813164	1					
ANR	4813829	Argument	upd -> strings [ S_YSTEP ] . size		4813164	2					
ANR	4813830	MemberAccess	upd -> strings [ S_YSTEP ] . size		4813164	0					
ANR	4813831	ArrayIndexing	upd -> strings [ S_YSTEP ]		4813164	0					
ANR	4813832	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813833	Identifier	upd		4813164	0					
ANR	4813834	Identifier	strings		4813164	1					
ANR	4813835	Identifier	S_YSTEP		4813164	1					
ANR	4813836	Identifier	size		4813164	1					
ANR	4813837	ExpressionStatement	ioutbuf += upd -> strings [ S_YSTEP ] . size	5059:15:181982:182019	4813164	1	True				
ANR	4813838	AssignmentExpression	ioutbuf += upd -> strings [ S_YSTEP ] . size		4813164	0		+=			
ANR	4813839	Identifier	ioutbuf		4813164	0					
ANR	4813840	MemberAccess	upd -> strings [ S_YSTEP ] . size		4813164	1					
ANR	4813841	ArrayIndexing	upd -> strings [ S_YSTEP ]		4813164	0					
ANR	4813842	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4813843	Identifier	upd		4813164	0					
ANR	4813844	Identifier	strings		4813164	1					
ANR	4813845	Identifier	S_YSTEP		4813164	1					
ANR	4813846	Identifier	size		4813164	1					
ANR	4813847	ExpressionStatement	upd -> yprinter = upd -> yscan	5063:9:182056:182082	4813164	4	True				
ANR	4813848	AssignmentExpression	upd -> yprinter = upd -> yscan		4813164	0		=			
ANR	4813849	PtrMemberAccess	upd -> yprinter		4813164	0					
ANR	4813850	Identifier	upd		4813164	0					
ANR	4813851	Identifier	yprinter		4813164	1					
ANR	4813852	PtrMemberAccess	upd -> yscan		4813164	1					
ANR	4813853	Identifier	upd		4813164	0					
ANR	4813854	Identifier	yscan		4813164	1					
ANR	4813855	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4813164	3					
ANR	4813856	ForInit	icomp = 0 ;	5069:10:182203:182212	4813164	0	True				
ANR	4813857	AssignmentExpression	icomp = 0		4813164	0		=			
ANR	4813858	Identifier	icomp		4813164	0					
ANR	4813859	PrimaryExpression	0		4813164	1					
ANR	4813860	Condition	icomp < upd -> ocomp	5069:21:182214:182231	4813164	1	True				
ANR	4813861	RelationalExpression	icomp < upd -> ocomp		4813164	0		<			
ANR	4813862	Identifier	icomp		4813164	0					
ANR	4813863	PtrMemberAccess	upd -> ocomp		4813164	1					
ANR	4813864	Identifier	upd		4813164	0					
ANR	4813865	Identifier	ocomp		4813164	1					
ANR	4813866	UnaryExpression	++ icomp	5069:41:182234:182240	4813164	2	True				
ANR	4813867	IncDec	++		4813164	0					
ANR	4813868	Identifier	icomp		4813164	1					
ANR	4813869	CompoundStatement		113:50:3817:3817	4813164	3					
ANR	4813870	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4813164	0					
ANR	4813871	ForInit	y = ybegin ;	5073:13:182346:182356	4813164	0	True				
ANR	4813872	AssignmentExpression	y = ybegin		4813164	0		=			
ANR	4813873	Identifier	y		4813164	0					
ANR	4813874	Identifier	ybegin		4813164	1					
ANR	4813875	Condition	y < yend	5073:25:182358:182365	4813164	1	True				
ANR	4813876	RelationalExpression	y < yend		4813164	0		<			
ANR	4813877	Identifier	y		4813164	0					
ANR	4813878	Identifier	yend		4813164	1					
ANR	4813879	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5073:35:182368:182391	4813164	2	True	+=			
ANR	4813880	Identifier	y		4813164	0					
ANR	4813881	ArrayIndexing	upd -> ints [ I_NYPASS ]		4813164	1					
ANR	4813882	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4813883	Identifier	upd		4813164	0					
ANR	4813884	Identifier	ints		4813164	1					
ANR	4813885	Identifier	I_NYPASS		4813164	1					
ANR	4813886	CompoundStatement		117:61:3968:3968	4813164	3					
ANR	4813887	IfStatement	if ( 0 > y )		4813164	0					
ANR	4813888	Condition	0 > y	5074:15:182427:182431	4813164	0	True				
ANR	4813889	RelationalExpression	0 > y		4813164	0		>			
ANR	4813890	PrimaryExpression	0		4813164	0					
ANR	4813891	Identifier	y		4813164	1					
ANR	4813892	ContinueStatement	continue ;	5074:22:182434:182442	4813164	1	True				
ANR	4813893	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp	5075:12:182456:182497	4813164	1	True				
ANR	4813894	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp		4813164	0		=			
ANR	4813895	Identifier	scan		4813164	0					
ANR	4813896	AdditiveExpression	upd -> scnbuf [ y & upd -> scnmsk ] + icomp		4813164	1		+			
ANR	4813897	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4813164	0					
ANR	4813898	PtrMemberAccess	upd -> scnbuf		4813164	0					
ANR	4813899	Identifier	upd		4813164	0					
ANR	4813900	Identifier	scnbuf		4813164	1					
ANR	4813901	BitAndExpression	y & upd -> scnmsk		4813164	1		&			
ANR	4813902	Identifier	y		4813164	0					
ANR	4813903	PtrMemberAccess	upd -> scnmsk		4813164	1					
ANR	4813904	Identifier	upd		4813164	0					
ANR	4813905	Identifier	scnmsk		4813164	1					
ANR	4813906	Identifier	icomp		4813164	1					
ANR	4813907	IfStatement	if ( 0 <= scan -> xend [ ixpass ] )		4813164	2					
ANR	4813908	Condition	0 <= scan -> xend [ ixpass ]	5076:15:182514:182536	4813164	0	True				
ANR	4813909	RelationalExpression	0 <= scan -> xend [ ixpass ]		4813164	0		<=			
ANR	4813910	PrimaryExpression	0		4813164	0					
ANR	4813911	ArrayIndexing	scan -> xend [ ixpass ]		4813164	1					
ANR	4813912	PtrMemberAccess	scan -> xend		4813164	0					
ANR	4813913	Identifier	scan		4813164	0					
ANR	4813914	Identifier	xend		4813164	1					
ANR	4813915	Identifier	ixpass		4813164	1					
ANR	4813916	BreakStatement	break ;	5076:40:182539:182544	4813164	1	True				
ANR	4813917	IfStatement	if ( y >= yend )		4813164	1					
ANR	4813918	Condition	y >= yend	5078:12:182637:182645	4813164	0	True				
ANR	4813919	RelationalExpression	y >= yend		4813164	0		>=			
ANR	4813920	Identifier	y		4813164	0					
ANR	4813921	Identifier	yend		4813164	1					
ANR	4813922	ContinueStatement	continue ;	5078:23:182648:182656	4813164	1	True				
ANR	4813923	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp ) )		4813164	2					
ANR	4813924	Condition	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )	5082:12:182736:182823	4813164	0	True				
ANR	4813925	AndExpression	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )		4813164	0		&&			
ANR	4813926	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		4813164	0		<			
ANR	4813927	PrimaryExpression	0		4813164	0					
ANR	4813928	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4813164	1					
ANR	4813929	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4813164	0					
ANR	4813930	PtrMemberAccess	upd -> string_a		4813164	0					
ANR	4813931	Identifier	upd		4813164	0					
ANR	4813932	Identifier	string_a		4813164	1					
ANR	4813933	Identifier	SA_SETCOMP		4813164	1					
ANR	4813934	Identifier	size		4813164	1					
ANR	4813935	EqualityExpression	upd -> icomp != icomp		4813164	1		!=			
ANR	4813936	PtrMemberAccess	upd -> icomp		4813164	0					
ANR	4813937	Identifier	upd		4813164	0					
ANR	4813938	Identifier	icomp		4813164	1					
ANR	4813939	Identifier	icomp		4813164	1					
ANR	4813940	CompoundStatement		127:53:4403:4403	4813164	1					
ANR	4813941	ExpressionStatement	upd -> icomp = icomp	5084:12:182867:182885	4813164	0	True				
ANR	4813942	AssignmentExpression	upd -> icomp = icomp		4813164	0		=			
ANR	4813943	PtrMemberAccess	upd -> icomp		4813164	0					
ANR	4813944	Identifier	upd		4813164	0					
ANR	4813945	Identifier	icomp		4813164	1					
ANR	4813946	Identifier	icomp		4813164	1					
ANR	4813947	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )		4813164	1					
ANR	4813948	Condition	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5085:15:182902:182947	4813164	0	True				
ANR	4813949	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4813164	0		<			
ANR	4813950	PrimaryExpression	0		4813164	0					
ANR	4813951	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4813164	1					
ANR	4813952	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4813164	0					
ANR	4813953	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4813164	0					
ANR	4813954	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4813164	0					
ANR	4813955	PtrMemberAccess	upd -> string_a		4813164	0					
ANR	4813956	Identifier	upd		4813164	0					
ANR	4813957	Identifier	string_a		4813164	1					
ANR	4813958	Identifier	SA_SETCOMP		4813164	1					
ANR	4813959	Identifier	data		4813164	1					
ANR	4813960	Identifier	icomp		4813164	1					
ANR	4813961	Identifier	size		4813164	1					
ANR	4813962	CompoundStatement		129:63:4524:4524	4813164	1					
ANR	4813963	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"	5086:15:182967:183134	4813164	0	True				
ANR	4813964	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"		4813164	0					
ANR	4813965	Callee	memcpy		4813164	0					
ANR	4813966	Identifier	memcpy		4813164	0					
ANR	4813967	ArgumentList	upd -> outbuf + ioutbuf		4813164	1					
ANR	4813968	Argument	upd -> outbuf + ioutbuf		4813164	0					
ANR	4813969	AdditiveExpression	upd -> outbuf + ioutbuf		4813164	0		+			
ANR	4813970	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4813971	Identifier	upd		4813164	0					
ANR	4813972	Identifier	outbuf		4813164	1					
ANR	4813973	Identifier	ioutbuf		4813164	1					
ANR	4813974	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4813164	1					
ANR	4813975	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4813164	0					
ANR	4813976	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4813164	0					
ANR	4813977	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4813164	0					
ANR	4813978	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4813164	0					
ANR	4813979	PtrMemberAccess	upd -> string_a		4813164	0					
ANR	4813980	Identifier	upd		4813164	0					
ANR	4813981	Identifier	string_a		4813164	1					
ANR	4813982	Identifier	SA_SETCOMP		4813164	1					
ANR	4813983	Identifier	data		4813164	1					
ANR	4813984	Identifier	icomp		4813164	1					
ANR	4813985	Identifier	data		4813164	1					
ANR	4813986	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4813164	2					
ANR	4813987	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4813164	0					
ANR	4813988	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4813164	0					
ANR	4813989	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4813164	0					
ANR	4813990	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4813164	0					
ANR	4813991	PtrMemberAccess	upd -> string_a		4813164	0					
ANR	4813992	Identifier	upd		4813164	0					
ANR	4813993	Identifier	string_a		4813164	1					
ANR	4813994	Identifier	SA_SETCOMP		4813164	1					
ANR	4813995	Identifier	data		4813164	1					
ANR	4813996	Identifier	icomp		4813164	1					
ANR	4813997	Identifier	size		4813164	1					
ANR	4813998	ExpressionStatement	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5089:15:183151:183204	4813164	1	True				
ANR	4813999	AssignmentExpression	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4813164	0		+=			
ANR	4814000	Identifier	ioutbuf		4813164	0					
ANR	4814001	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4813164	1					
ANR	4814002	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4813164	0					
ANR	4814003	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4813164	0					
ANR	4814004	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4813164	0					
ANR	4814005	PtrMemberAccess	upd -> string_a		4813164	0					
ANR	4814006	Identifier	upd		4813164	0					
ANR	4814007	Identifier	string_a		4813164	1					
ANR	4814008	Identifier	SA_SETCOMP		4813164	1					
ANR	4814009	Identifier	data		4813164	1					
ANR	4814010	Identifier	icomp		4813164	1					
ANR	4814011	Identifier	size		4813164	1					
ANR	4814012	IfStatement	if ( xbegin != upd -> xprinter )		4813164	3					
ANR	4814013	Condition	xbegin != upd -> xprinter	5095:12:183345:183367	4813164	0	True				
ANR	4814014	EqualityExpression	xbegin != upd -> xprinter		4813164	0		!=			
ANR	4814015	Identifier	xbegin		4813164	0					
ANR	4814016	PtrMemberAccess	upd -> xprinter		4813164	1					
ANR	4814017	Identifier	upd		4813164	0					
ANR	4814018	Identifier	xprinter		4813164	1					
ANR	4814019	CompoundStatement		139:37:4944:4944	4813164	1					
ANR	4814020	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		4813164	0					
ANR	4814021	Condition	0 == upd -> strings [ S_XMOVE ] . size	5097:15:183388:183418	4813164	0	True				
ANR	4814022	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4813164	0		==			
ANR	4814023	PrimaryExpression	0		4813164	0					
ANR	4814024	MemberAccess	upd -> strings [ S_XMOVE ] . size		4813164	1					
ANR	4814025	ArrayIndexing	upd -> strings [ S_XMOVE ]		4813164	0					
ANR	4814026	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4814027	Identifier	upd		4813164	0					
ANR	4814028	Identifier	strings		4813164	1					
ANR	4814029	Identifier	S_XMOVE		4813164	1					
ANR	4814030	Identifier	size		4813164	1					
ANR	4814031	CompoundStatement		141:48:4995:4995	4813164	1					
ANR	4814032	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\r'	5099:15:183439:183468	4813164	0	True				
ANR	4814033	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\r'		4813164	0		=			
ANR	4814034	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4813164	0					
ANR	4814035	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814036	Identifier	upd		4813164	0					
ANR	4814037	Identifier	outbuf		4813164	1					
ANR	4814038	PostIncDecOperationExpression	ioutbuf ++		4813164	1					
ANR	4814039	Identifier	ioutbuf		4813164	0					
ANR	4814040	IncDec	++		4813164	1					
ANR	4814041	PrimaryExpression	'\\r'		4813164	1					
ANR	4814042	ExpressionStatement	upd -> xprinter = 0	5100:15:183485:183512	4813164	1	True				
ANR	4814043	AssignmentExpression	upd -> xprinter = 0		4813164	0		=			
ANR	4814044	PtrMemberAccess	upd -> xprinter		4813164	0					
ANR	4814045	Identifier	upd		4813164	0					
ANR	4814046	Identifier	xprinter		4813164	1					
ANR	4814047	PrimaryExpression	0		4813164	1					
ANR	4814048	ExpressionStatement	n = 0	5101:15:183529:183534	4813164	2	True				
ANR	4814049	AssignmentExpression	n = 0		4813164	0		=			
ANR	4814050	Identifier	n		4813164	0					
ANR	4814051	PrimaryExpression	0		4813164	1					
ANR	4814052	ExpressionStatement	x = ixpass	5102:15:183551:183561	4813164	3	True				
ANR	4814053	AssignmentExpression	x = ixpass		4813164	0		=			
ANR	4814054	Identifier	x		4813164	0					
ANR	4814055	Identifier	ixpass		4813164	1					
ANR	4814056	ElseStatement	else		4813164	0					
ANR	4814057	CompoundStatement		148:19:5157:5157	4813164	0					
ANR	4814058	IfStatement	if ( B_XABS & upd -> flags )		4813164	0					
ANR	4814059	Condition	B_XABS & upd -> flags	5106:18:183604:183622	4813164	0	True				
ANR	4814060	BitAndExpression	B_XABS & upd -> flags		4813164	0		&			
ANR	4814061	Identifier	B_XABS		4813164	0					
ANR	4814062	PtrMemberAccess	upd -> flags		4813164	1					
ANR	4814063	Identifier	upd		4813164	0					
ANR	4814064	Identifier	flags		4813164	1					
ANR	4814065	ExpressionStatement	n = x = xbegin + upd -> ints [ I_XOFS ]	5106:39:183625:183659	4813164	1	True				
ANR	4814066	AssignmentExpression	n = x = xbegin + upd -> ints [ I_XOFS ]		4813164	0		=			
ANR	4814067	Identifier	n		4813164	0					
ANR	4814068	AssignmentExpression	x = xbegin + upd -> ints [ I_XOFS ]		4813164	1		=			
ANR	4814069	Identifier	x		4813164	0					
ANR	4814070	AdditiveExpression	xbegin + upd -> ints [ I_XOFS ]		4813164	1		+			
ANR	4814071	Identifier	xbegin		4813164	0					
ANR	4814072	ArrayIndexing	upd -> ints [ I_XOFS ]		4813164	1					
ANR	4814073	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814074	Identifier	upd		4813164	0					
ANR	4814075	Identifier	ints		4813164	1					
ANR	4814076	Identifier	I_XOFS		4813164	1					
ANR	4814077	ElseStatement	else		4813164	0					
ANR	4814078	ExpressionStatement	n = x = xbegin - upd -> xprinter	5107:39:183700:183730	4813164	0	True				
ANR	4814079	AssignmentExpression	n = x = xbegin - upd -> xprinter		4813164	0		=			
ANR	4814080	Identifier	n		4813164	0					
ANR	4814081	AssignmentExpression	x = xbegin - upd -> xprinter		4813164	1		=			
ANR	4814082	Identifier	x		4813164	0					
ANR	4814083	AdditiveExpression	xbegin - upd -> xprinter		4813164	1		-			
ANR	4814084	Identifier	xbegin		4813164	0					
ANR	4814085	PtrMemberAccess	upd -> xprinter		4813164	1					
ANR	4814086	Identifier	upd		4813164	0					
ANR	4814087	Identifier	xprinter		4813164	1					
ANR	4814088	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		4813164	1					
ANR	4814089	Condition	1 < upd -> ints [ I_XSTEP ]	5109:26:183759:183780	4813164	0	True				
ANR	4814090	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		4813164	0		<			
ANR	4814091	PrimaryExpression	1		4813164	0					
ANR	4814092	ArrayIndexing	upd -> ints [ I_XSTEP ]		4813164	1					
ANR	4814093	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814094	Identifier	upd		4813164	0					
ANR	4814095	Identifier	ints		4813164	1					
ANR	4814096	Identifier	I_XSTEP		4813164	1					
ANR	4814097	CompoundStatement		153:50:5357:5357	4813164	1					
ANR	4814098	IfStatement	if ( 0 > n )		4813164	0					
ANR	4814099	Condition	0 > n	5110:21:183806:183810	4813164	0	True				
ANR	4814100	RelationalExpression	0 > n		4813164	0		>			
ANR	4814101	PrimaryExpression	0		4813164	0					
ANR	4814102	Identifier	n		4813164	1					
ANR	4814103	CompoundStatement		154:28:5387:5387	4813164	1					
ANR	4814104	ExpressionStatement	n -= upd -> ints [ I_XSTEP ]	5111:21:183836:183860	4813164	0	True				
ANR	4814105	AssignmentExpression	n -= upd -> ints [ I_XSTEP ]		4813164	0		-=			
ANR	4814106	Identifier	n		4813164	0					
ANR	4814107	ArrayIndexing	upd -> ints [ I_XSTEP ]		4813164	1					
ANR	4814108	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814109	Identifier	upd		4813164	0					
ANR	4814110	Identifier	ints		4813164	1					
ANR	4814111	Identifier	I_XSTEP		4813164	1					
ANR	4814112	ExpressionStatement	x -= n	5112:21:183883:183890	4813164	1	True				
ANR	4814113	AssignmentExpression	x -= n		4813164	0		-=			
ANR	4814114	Identifier	x		4813164	0					
ANR	4814115	Identifier	n		4813164	1					
ANR	4814116	IfStatement	if ( n )		4813164	1					
ANR	4814117	Condition	n	5114:21:183933:183933	4813164	0	True				
ANR	4814118	Identifier	n		4813164	0					
ANR	4814119	ExpressionStatement	n /= upd -> ints [ I_XSTEP ]	5114:24:183936:183960	4813164	1	True				
ANR	4814120	AssignmentExpression	n /= upd -> ints [ I_XSTEP ]		4813164	0		/=			
ANR	4814121	Identifier	n		4813164	0					
ANR	4814122	ArrayIndexing	upd -> ints [ I_XSTEP ]		4813164	1					
ANR	4814123	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814124	Identifier	upd		4813164	0					
ANR	4814125	Identifier	ints		4813164	1					
ANR	4814126	Identifier	I_XSTEP		4813164	1					
ANR	4814127	IfStatement	if ( x )		4813164	2					
ANR	4814128	Condition	x	5115:21:184001:184001	4813164	0	True				
ANR	4814129	Identifier	x		4813164	0					
ANR	4814130	ExpressionStatement	x %= upd -> ints [ I_XSTEP ]	5115:24:184004:184028	4813164	1	True				
ANR	4814131	AssignmentExpression	x %= upd -> ints [ I_XSTEP ]		4813164	0		%=			
ANR	4814132	Identifier	x		4813164	0					
ANR	4814133	ArrayIndexing	upd -> ints [ I_XSTEP ]		4813164	1					
ANR	4814134	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814135	Identifier	upd		4813164	0					
ANR	4814136	Identifier	ints		4813164	1					
ANR	4814137	Identifier	I_XSTEP		4813164	1					
ANR	4814138	ElseStatement	else		4813164	0					
ANR	4814139	IfStatement	if ( - 1 > upd -> ints [ I_XSTEP ] )		4813164	0					
ANR	4814140	Condition	- 1 > upd -> ints [ I_XSTEP ]	5117:25:184074:184096	4813164	0	True				
ANR	4814141	RelationalExpression	- 1 > upd -> ints [ I_XSTEP ]		4813164	0		>			
ANR	4814142	UnaryOperationExpression	- 1		4813164	0					
ANR	4814143	UnaryOperator	-		4813164	0					
ANR	4814144	PrimaryExpression	1		4813164	1					
ANR	4814145	ArrayIndexing	upd -> ints [ I_XSTEP ]		4813164	1					
ANR	4814146	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814147	Identifier	upd		4813164	0					
ANR	4814148	Identifier	ints		4813164	1					
ANR	4814149	Identifier	I_XSTEP		4813164	1					
ANR	4814150	CompoundStatement		161:50:5673:5673	4813164	1					
ANR	4814151	ExpressionStatement	n *= - upd -> ints [ I_XSTEP ]	5118:18:184119:184143	4813164	0	True				
ANR	4814152	AssignmentExpression	n *= - upd -> ints [ I_XSTEP ]		4813164	0		*=			
ANR	4814153	Identifier	n		4813164	0					
ANR	4814154	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		4813164	1					
ANR	4814155	UnaryOperator	-		4813164	0					
ANR	4814156	ArrayIndexing	upd -> ints [ I_XSTEP ]		4813164	1					
ANR	4814157	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814158	Identifier	upd		4813164	0					
ANR	4814159	Identifier	ints		4813164	1					
ANR	4814160	Identifier	I_XSTEP		4813164	1					
ANR	4814161	ExpressionStatement	x = 0	5119:18:184184:184190	4813164	1	True				
ANR	4814162	AssignmentExpression	x = 0		4813164	0		=			
ANR	4814163	Identifier	x		4813164	0					
ANR	4814164	PrimaryExpression	0		4813164	1					
ANR	4814165	IfStatement	if ( n )		4813164	2					
ANR	4814166	Condition	n	5122:18:184228:184228	4813164	0	True				
ANR	4814167	Identifier	n		4813164	0					
ANR	4814168	CompoundStatement		166:21:5805:5805	4813164	1					
ANR	4814169	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"	5124:17:184275:184416	4813164	0	True				
ANR	4814170	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"		4813164	0					
ANR	4814171	Callee	memcpy		4813164	0					
ANR	4814172	Identifier	memcpy		4813164	0					
ANR	4814173	ArgumentList	upd -> outbuf + ioutbuf		4813164	1					
ANR	4814174	Argument	upd -> outbuf + ioutbuf		4813164	0					
ANR	4814175	AdditiveExpression	upd -> outbuf + ioutbuf		4813164	0		+			
ANR	4814176	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814177	Identifier	upd		4813164	0					
ANR	4814178	Identifier	outbuf		4813164	1					
ANR	4814179	Identifier	ioutbuf		4813164	1					
ANR	4814180	Argument	upd -> strings [ S_XMOVE ] . data		4813164	1					
ANR	4814181	MemberAccess	upd -> strings [ S_XMOVE ] . data		4813164	0					
ANR	4814182	ArrayIndexing	upd -> strings [ S_XMOVE ]		4813164	0					
ANR	4814183	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4814184	Identifier	upd		4813164	0					
ANR	4814185	Identifier	strings		4813164	1					
ANR	4814186	Identifier	S_XMOVE		4813164	1					
ANR	4814187	Identifier	data		4813164	1					
ANR	4814188	Argument	upd -> strings [ S_XMOVE ] . size		4813164	2					
ANR	4814189	MemberAccess	upd -> strings [ S_XMOVE ] . size		4813164	0					
ANR	4814190	ArrayIndexing	upd -> strings [ S_XMOVE ]		4813164	0					
ANR	4814191	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4814192	Identifier	upd		4813164	0					
ANR	4814193	Identifier	strings		4813164	1					
ANR	4814194	Identifier	S_XMOVE		4813164	1					
ANR	4814195	Identifier	size		4813164	1					
ANR	4814196	ExpressionStatement	ioutbuf += upd -> strings [ S_XMOVE ] . size	5127:18:184436:184473	4813164	1	True				
ANR	4814197	AssignmentExpression	ioutbuf += upd -> strings [ S_XMOVE ] . size		4813164	0		+=			
ANR	4814198	Identifier	ioutbuf		4813164	0					
ANR	4814199	MemberAccess	upd -> strings [ S_XMOVE ] . size		4813164	1					
ANR	4814200	ArrayIndexing	upd -> strings [ S_XMOVE ]		4813164	0					
ANR	4814201	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4814202	Identifier	upd		4813164	0					
ANR	4814203	Identifier	strings		4813164	1					
ANR	4814204	Identifier	S_XMOVE		4813164	1					
ANR	4814205	Identifier	size		4813164	1					
ANR	4814206	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5129:18:184494:184532	4813164	2	True				
ANR	4814207	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		4813164	0		=			
ANR	4814208	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4813164	0					
ANR	4814209	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814210	Identifier	upd		4813164	0					
ANR	4814211	Identifier	outbuf		4813164	1					
ANR	4814212	PostIncDecOperationExpression	ioutbuf ++		4813164	1					
ANR	4814213	Identifier	ioutbuf		4813164	0					
ANR	4814214	IncDec	++		4813164	1					
ANR	4814215	BitAndExpression	n & 0xff		4813164	1		&			
ANR	4814216	Identifier	n		4813164	0					
ANR	4814217	PrimaryExpression	0xff		4813164	1					
ANR	4814218	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5130:18:184552:184590	4813164	3	True				
ANR	4814219	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		4813164	0		=			
ANR	4814220	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4813164	0					
ANR	4814221	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814222	Identifier	upd		4813164	0					
ANR	4814223	Identifier	outbuf		4813164	1					
ANR	4814224	PostIncDecOperationExpression	ioutbuf ++		4813164	1					
ANR	4814225	Identifier	ioutbuf		4813164	0					
ANR	4814226	IncDec	++		4813164	1					
ANR	4814227	BitAndExpression	( n >> 8 ) & 0xff		4813164	1		&			
ANR	4814228	ShiftExpression	n >> 8		4813164	0		>>			
ANR	4814229	Identifier	n		4813164	0					
ANR	4814230	PrimaryExpression	8		4813164	1					
ANR	4814231	PrimaryExpression	0xff		4813164	1					
ANR	4814232	IfStatement	if ( x && 0 < upd -> strings [ S_XSTEP ] . size )		4813164	1					
ANR	4814233	Condition	x && 0 < upd -> strings [ S_XSTEP ] . size	5136:15:184671:184705	4813164	0	True				
ANR	4814234	AndExpression	x && 0 < upd -> strings [ S_XSTEP ] . size		4813164	0		&&			
ANR	4814235	Identifier	x		4813164	0					
ANR	4814236	RelationalExpression	0 < upd -> strings [ S_XSTEP ] . size		4813164	1		<			
ANR	4814237	PrimaryExpression	0		4813164	0					
ANR	4814238	MemberAccess	upd -> strings [ S_XSTEP ] . size		4813164	1					
ANR	4814239	ArrayIndexing	upd -> strings [ S_XSTEP ]		4813164	0					
ANR	4814240	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4814241	Identifier	upd		4813164	0					
ANR	4814242	Identifier	strings		4813164	1					
ANR	4814243	Identifier	S_XSTEP		4813164	1					
ANR	4814244	Identifier	size		4813164	1					
ANR	4814245	CompoundStatement		180:52:6282:6282	4813164	1					
ANR	4814246	WhileStatement	while ( x -- )		4813164	0					
ANR	4814247	Condition	x --	5137:21:184751:184753	4813164	0	True				
ANR	4814248	PostIncDecOperationExpression	x --		4813164	0					
ANR	4814249	Identifier	x		4813164	0					
ANR	4814250	IncDec	--		4813164	1					
ANR	4814251	CompoundStatement		181:26:6330:6330	4813164	1					
ANR	4814252	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"	5138:18:184776:184917	4813164	0	True				
ANR	4814253	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"		4813164	0					
ANR	4814254	Callee	memcpy		4813164	0					
ANR	4814255	Identifier	memcpy		4813164	0					
ANR	4814256	ArgumentList	upd -> outbuf + ioutbuf		4813164	1					
ANR	4814257	Argument	upd -> outbuf + ioutbuf		4813164	0					
ANR	4814258	AdditiveExpression	upd -> outbuf + ioutbuf		4813164	0		+			
ANR	4814259	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814260	Identifier	upd		4813164	0					
ANR	4814261	Identifier	outbuf		4813164	1					
ANR	4814262	Identifier	ioutbuf		4813164	1					
ANR	4814263	Argument	upd -> strings [ S_XSTEP ] . data		4813164	1					
ANR	4814264	MemberAccess	upd -> strings [ S_XSTEP ] . data		4813164	0					
ANR	4814265	ArrayIndexing	upd -> strings [ S_XSTEP ]		4813164	0					
ANR	4814266	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4814267	Identifier	upd		4813164	0					
ANR	4814268	Identifier	strings		4813164	1					
ANR	4814269	Identifier	S_XSTEP		4813164	1					
ANR	4814270	Identifier	data		4813164	1					
ANR	4814271	Argument	upd -> strings [ S_XSTEP ] . size		4813164	2					
ANR	4814272	MemberAccess	upd -> strings [ S_XSTEP ] . size		4813164	0					
ANR	4814273	ArrayIndexing	upd -> strings [ S_XSTEP ]		4813164	0					
ANR	4814274	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4814275	Identifier	upd		4813164	0					
ANR	4814276	Identifier	strings		4813164	1					
ANR	4814277	Identifier	S_XSTEP		4813164	1					
ANR	4814278	Identifier	size		4813164	1					
ANR	4814279	ExpressionStatement	ioutbuf += upd -> strings [ S_XSTEP ] . size	5141:18:184937:184974	4813164	1	True				
ANR	4814280	AssignmentExpression	ioutbuf += upd -> strings [ S_XSTEP ] . size		4813164	0		+=			
ANR	4814281	Identifier	ioutbuf		4813164	0					
ANR	4814282	MemberAccess	upd -> strings [ S_XSTEP ] . size		4813164	1					
ANR	4814283	ArrayIndexing	upd -> strings [ S_XSTEP ]		4813164	0					
ANR	4814284	PtrMemberAccess	upd -> strings		4813164	0					
ANR	4814285	Identifier	upd		4813164	0					
ANR	4814286	Identifier	strings		4813164	1					
ANR	4814287	Identifier	S_XSTEP		4813164	1					
ANR	4814288	Identifier	size		4813164	1					
ANR	4814289	ExpressionStatement	upd -> xprinter = xend + 1	5145:9:185087:185109	4813164	4	True				
ANR	4814290	AssignmentExpression	upd -> xprinter = xend + 1		4813164	0		=			
ANR	4814291	PtrMemberAccess	upd -> xprinter		4813164	0					
ANR	4814292	Identifier	upd		4813164	0					
ANR	4814293	Identifier	xprinter		4813164	1					
ANR	4814294	AdditiveExpression	xend + 1		4813164	1		+			
ANR	4814295	Identifier	xend		4813164	0					
ANR	4814296	PrimaryExpression	1		4813164	1					
ANR	4814297	IfStatement	if ( 0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )		4813164	5					
ANR	4814298	Condition	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	5149:12:185162:185209	4813164	0	True				
ANR	4814299	RelationalExpression	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4813164	0		<			
ANR	4814300	PrimaryExpression	0		4813164	0					
ANR	4814301	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4813164	1					
ANR	4814302	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4813164	0					
ANR	4814303	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4813164	0					
ANR	4814304	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4813164	0					
ANR	4814305	PtrMemberAccess	upd -> string_a		4813164	0					
ANR	4814306	Identifier	upd		4813164	0					
ANR	4814307	Identifier	string_a		4813164	1					
ANR	4814308	Identifier	SA_WRITECOMP		4813164	1					
ANR	4814309	Identifier	data		4813164	1					
ANR	4814310	Identifier	icomp		4813164	1					
ANR	4814311	Identifier	size		4813164	1					
ANR	4814312	CompoundStatement		193:62:6786:6786	4813164	1					
ANR	4814313	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"	5150:12:185226:185391	4813164	0	True				
ANR	4814314	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"		4813164	0					
ANR	4814315	Callee	memcpy		4813164	0					
ANR	4814316	Identifier	memcpy		4813164	0					
ANR	4814317	ArgumentList	upd -> outbuf + ioutbuf		4813164	1					
ANR	4814318	Argument	upd -> outbuf + ioutbuf		4813164	0					
ANR	4814319	AdditiveExpression	upd -> outbuf + ioutbuf		4813164	0		+			
ANR	4814320	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814321	Identifier	upd		4813164	0					
ANR	4814322	Identifier	outbuf		4813164	1					
ANR	4814323	Identifier	ioutbuf		4813164	1					
ANR	4814324	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4813164	1					
ANR	4814325	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4813164	0					
ANR	4814326	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4813164	0					
ANR	4814327	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4813164	0					
ANR	4814328	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4813164	0					
ANR	4814329	PtrMemberAccess	upd -> string_a		4813164	0					
ANR	4814330	Identifier	upd		4813164	0					
ANR	4814331	Identifier	string_a		4813164	1					
ANR	4814332	Identifier	SA_WRITECOMP		4813164	1					
ANR	4814333	Identifier	data		4813164	1					
ANR	4814334	Identifier	icomp		4813164	1					
ANR	4814335	Identifier	data		4813164	1					
ANR	4814336	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4813164	2					
ANR	4814337	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4813164	0					
ANR	4814338	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4813164	0					
ANR	4814339	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4813164	0					
ANR	4814340	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4813164	0					
ANR	4814341	PtrMemberAccess	upd -> string_a		4813164	0					
ANR	4814342	Identifier	upd		4813164	0					
ANR	4814343	Identifier	string_a		4813164	1					
ANR	4814344	Identifier	SA_WRITECOMP		4813164	1					
ANR	4814345	Identifier	data		4813164	1					
ANR	4814346	Identifier	icomp		4813164	1					
ANR	4814347	Identifier	size		4813164	1					
ANR	4814348	ExpressionStatement	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	5153:12:185405:185460	4813164	1	True				
ANR	4814349	AssignmentExpression	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4813164	0		+=			
ANR	4814350	Identifier	ioutbuf		4813164	0					
ANR	4814351	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4813164	1					
ANR	4814352	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4813164	0					
ANR	4814353	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4813164	0					
ANR	4814354	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4813164	0					
ANR	4814355	PtrMemberAccess	upd -> string_a		4813164	0					
ANR	4814356	Identifier	upd		4813164	0					
ANR	4814357	Identifier	string_a		4813164	1					
ANR	4814358	Identifier	SA_WRITECOMP		4813164	1					
ANR	4814359	Identifier	data		4813164	1					
ANR	4814360	Identifier	icomp		4813164	1					
ANR	4814361	Identifier	size		4813164	1					
ANR	4814362	ExpressionStatement	n = ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 1	5155:9:185482:185527	4813164	6	True				
ANR	4814363	AssignmentExpression	n = ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 1		4813164	0		=			
ANR	4814364	Identifier	n		4813164	0					
ANR	4814365	AdditiveExpression	( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 1		4813164	1		+			
ANR	4814366	MultiplicativeExpression	( xend - xbegin ) / upd -> ints [ I_NXPASS ]		4813164	0		/			
ANR	4814367	AdditiveExpression	xend - xbegin		4813164	0		-			
ANR	4814368	Identifier	xend		4813164	0					
ANR	4814369	Identifier	xbegin		4813164	1					
ANR	4814370	ArrayIndexing	upd -> ints [ I_NXPASS ]		4813164	1					
ANR	4814371	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814372	Identifier	upd		4813164	0					
ANR	4814373	Identifier	ints		4813164	1					
ANR	4814374	Identifier	I_NXPASS		4813164	1					
ANR	4814375	PrimaryExpression	1		4813164	1					
ANR	4814376	ExpressionStatement		5155:55:185528:185528	4813164	7	True				
ANR	4814377	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 255	5156:9:185539:185576	4813164	8	True				
ANR	4814378	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 255		4813164	0		=			
ANR	4814379	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4813164	0					
ANR	4814380	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814381	Identifier	upd		4813164	0					
ANR	4814382	Identifier	outbuf		4813164	1					
ANR	4814383	PostIncDecOperationExpression	ioutbuf ++		4813164	1					
ANR	4814384	Identifier	ioutbuf		4813164	0					
ANR	4814385	IncDec	++		4813164	1					
ANR	4814386	BitAndExpression	n & 255		4813164	1		&			
ANR	4814387	Identifier	n		4813164	0					
ANR	4814388	PrimaryExpression	255		4813164	1					
ANR	4814389	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 255	5157:9:185587:185624	4813164	9	True				
ANR	4814390	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 255		4813164	0		=			
ANR	4814391	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4813164	0					
ANR	4814392	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814393	Identifier	upd		4813164	0					
ANR	4814394	Identifier	outbuf		4813164	1					
ANR	4814395	PostIncDecOperationExpression	ioutbuf ++		4813164	1					
ANR	4814396	Identifier	ioutbuf		4813164	0					
ANR	4814397	IncDec	++		4813164	1					
ANR	4814398	BitAndExpression	( n >> 8 ) & 255		4813164	1		&			
ANR	4814399	ShiftExpression	n >> 8		4813164	0		>>			
ANR	4814400	Identifier	n		4813164	0					
ANR	4814401	PrimaryExpression	8		4813164	1					
ANR	4814402	PrimaryExpression	255		4813164	1					
ANR	4814403	ExpressionStatement	obytes = upd -> outbuf + ioutbuf	5161:9:185671:185702	4813164	10	True				
ANR	4814404	AssignmentExpression	obytes = upd -> outbuf + ioutbuf		4813164	0		=			
ANR	4814405	Identifier	obytes		4813164	0					
ANR	4814406	AdditiveExpression	upd -> outbuf + ioutbuf		4813164	1		+			
ANR	4814407	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814408	Identifier	upd		4813164	0					
ANR	4814409	Identifier	outbuf		4813164	1					
ANR	4814410	Identifier	ioutbuf		4813164	1					
ANR	4814411	ExpressionStatement	n *= ( upd -> ints [ I_PINS2WRITE ] + 7 ) >> 3	5162:9:185713:185754	4813164	11	True				
ANR	4814412	AssignmentExpression	n *= ( upd -> ints [ I_PINS2WRITE ] + 7 ) >> 3		4813164	0		*=			
ANR	4814413	Identifier	n		4813164	0					
ANR	4814414	ShiftExpression	( upd -> ints [ I_PINS2WRITE ] + 7 ) >> 3		4813164	1		>>			
ANR	4814415	AdditiveExpression	upd -> ints [ I_PINS2WRITE ] + 7		4813164	0		+			
ANR	4814416	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4813164	0					
ANR	4814417	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814418	Identifier	upd		4813164	0					
ANR	4814419	Identifier	ints		4813164	1					
ANR	4814420	Identifier	I_PINS2WRITE		4813164	1					
ANR	4814421	PrimaryExpression	7		4813164	1					
ANR	4814422	PrimaryExpression	3		4813164	1					
ANR	4814423	ExpressionStatement	"memset ( obytes , 0 , n )"	5163:9:185765:185783	4813164	12	True				
ANR	4814424	CallExpression	"memset ( obytes , 0 , n )"		4813164	0					
ANR	4814425	Callee	memset		4813164	0					
ANR	4814426	Identifier	memset		4813164	0					
ANR	4814427	ArgumentList	obytes		4813164	1					
ANR	4814428	Argument	obytes		4813164	0					
ANR	4814429	Identifier	obytes		4813164	0					
ANR	4814430	Argument	0		4813164	1					
ANR	4814431	PrimaryExpression	0		4813164	0					
ANR	4814432	Argument	n		4813164	2					
ANR	4814433	Identifier	n		4813164	0					
ANR	4814434	ExpressionStatement	ioutbuf += n	5164:9:185794:185806	4813164	13	True				
ANR	4814435	AssignmentExpression	ioutbuf += n		4813164	0		+=			
ANR	4814436	Identifier	ioutbuf		4813164	0					
ANR	4814437	Identifier	n		4813164	1					
ANR	4814438	ForStatement	for ( x = xbegin ; x <= xend ; x += upd -> ints [ I_NXPASS ] )		4813164	14					
ANR	4814439	ForInit	x = xbegin ;	5168:13:185852:185862	4813164	0	True				
ANR	4814440	AssignmentExpression	x = xbegin		4813164	0		=			
ANR	4814441	Identifier	x		4813164	0					
ANR	4814442	Identifier	xbegin		4813164	1					
ANR	4814443	Condition	x <= xend	5168:25:185864:185872	4813164	1	True				
ANR	4814444	RelationalExpression	x <= xend		4813164	0		<=			
ANR	4814445	Identifier	x		4813164	0					
ANR	4814446	Identifier	xend		4813164	1					
ANR	4814447	AssignmentExpression	x += upd -> ints [ I_NXPASS ]	5168:36:185875:185898	4813164	2	True	+=			
ANR	4814448	Identifier	x		4813164	0					
ANR	4814449	ArrayIndexing	upd -> ints [ I_NXPASS ]		4813164	1					
ANR	4814450	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814451	Identifier	upd		4813164	0					
ANR	4814452	Identifier	ints		4813164	1					
ANR	4814453	Identifier	I_NXPASS		4813164	1					
ANR	4814454	CompoundStatement		212:62:7475:7475	4813164	3					
ANR	4814455	ExpressionStatement	bit = 0x80 >> ( pintop & 7 )	5170:12:185916:185946	4813164	0	True				
ANR	4814456	AssignmentExpression	bit = 0x80 >> ( pintop & 7 )		4813164	0		=			
ANR	4814457	Identifier	bit		4813164	0					
ANR	4814458	ShiftExpression	0x80 >> ( pintop & 7 )		4813164	1		>>			
ANR	4814459	PrimaryExpression	0x80		4813164	0					
ANR	4814460	BitAndExpression	pintop & 7		4813164	1		&			
ANR	4814461	Identifier	pintop		4813164	0					
ANR	4814462	PrimaryExpression	7		4813164	1					
ANR	4814463	ExpressionStatement	obytes += pintop >> 3	5171:12:185960:185979	4813164	1	True				
ANR	4814464	AssignmentExpression	obytes += pintop >> 3		4813164	0		+=			
ANR	4814465	Identifier	obytes		4813164	0					
ANR	4814466	ShiftExpression	pintop >> 3		4813164	1		>>			
ANR	4814467	Identifier	pintop		4813164	0					
ANR	4814468	PrimaryExpression	3		4813164	1					
ANR	4814469	ForStatement	"for ( pin = pintop , y = ybegin ; pin < pinbot ; pin ++ , y += upd -> ints [ I_NYPASS ] )"		4813164	2					
ANR	4814470	ForInit	"pin = pintop , y = ybegin ;"	5173:16:185998:186022	4813164	0	True				
ANR	4814471	Expression	"pin = pintop , y = ybegin"		4813164	0					
ANR	4814472	AssignmentExpression	pin = pintop		4813164	0		=			
ANR	4814473	Identifier	pin		4813164	0					
ANR	4814474	Identifier	pintop		4813164	1					
ANR	4814475	AssignmentExpression	y = ybegin		4813164	1		=			
ANR	4814476	Identifier	y		4813164	0					
ANR	4814477	Identifier	ybegin		4813164	1					
ANR	4814478	Condition	pin < pinbot	5173:42:186024:186035	4813164	1	True				
ANR	4814479	RelationalExpression	pin < pinbot		4813164	0		<			
ANR	4814480	Identifier	pin		4813164	0					
ANR	4814481	Identifier	pinbot		4813164	1					
ANR	4814482	Expression	"pin ++ , y += upd -> ints [ I_NYPASS ]"	5174:16:186054:186091	4813164	2	True				
ANR	4814483	PostIncDecOperationExpression	pin ++		4813164	0					
ANR	4814484	Identifier	pin		4813164	0					
ANR	4814485	IncDec	++		4813164	1					
ANR	4814486	AssignmentExpression	y += upd -> ints [ I_NYPASS ]		4813164	1		+=			
ANR	4814487	Identifier	y		4813164	0					
ANR	4814488	ArrayIndexing	upd -> ints [ I_NYPASS ]		4813164	1					
ANR	4814489	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814490	Identifier	upd		4813164	0					
ANR	4814491	Identifier	ints		4813164	1					
ANR	4814492	Identifier	I_NYPASS		4813164	1					
ANR	4814493	CompoundStatement		218:56:7668:7668	4813164	3					
ANR	4814494	IfStatement	if ( 0 <= y )		4813164	0					
ANR	4814495	Condition	0 <= y	5175:18:186114:186119	4813164	0	True				
ANR	4814496	RelationalExpression	0 <= y		4813164	0		<=			
ANR	4814497	PrimaryExpression	0		4813164	0					
ANR	4814498	Identifier	y		4813164	1					
ANR	4814499	CompoundStatement		219:26:7696:7696	4813164	1					
ANR	4814500	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp	5176:18:186142:186183	4813164	0	True				
ANR	4814501	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp		4813164	0		=			
ANR	4814502	Identifier	scan		4813164	0					
ANR	4814503	AdditiveExpression	upd -> scnbuf [ y & upd -> scnmsk ] + icomp		4813164	1		+			
ANR	4814504	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4813164	0					
ANR	4814505	PtrMemberAccess	upd -> scnbuf		4813164	0					
ANR	4814506	Identifier	upd		4813164	0					
ANR	4814507	Identifier	scnbuf		4813164	1					
ANR	4814508	BitAndExpression	y & upd -> scnmsk		4813164	1		&			
ANR	4814509	Identifier	y		4813164	0					
ANR	4814510	PtrMemberAccess	upd -> scnmsk		4813164	1					
ANR	4814511	Identifier	upd		4813164	0					
ANR	4814512	Identifier	scnmsk		4813164	1					
ANR	4814513	Identifier	icomp		4813164	1					
ANR	4814514	IfStatement	if ( scan -> bytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) ) )		4813164	1					
ANR	4814515	Condition	scan -> bytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) )	5177:21:186206:186242	4813164	0	True				
ANR	4814516	BitAndExpression	scan -> bytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) )		4813164	0		&			
ANR	4814517	ArrayIndexing	scan -> bytes [ x >> 3 ]		4813164	0					
ANR	4814518	PtrMemberAccess	scan -> bytes		4813164	0					
ANR	4814519	Identifier	scan		4813164	0					
ANR	4814520	Identifier	bytes		4813164	1					
ANR	4814521	ShiftExpression	x >> 3		4813164	1		>>			
ANR	4814522	Identifier	x		4813164	0					
ANR	4814523	PrimaryExpression	3		4813164	1					
ANR	4814524	ShiftExpression	0x80 >> ( x & 7 )		4813164	1		>>			
ANR	4814525	PrimaryExpression	0x80		4813164	0					
ANR	4814526	BitAndExpression	x & 7		4813164	1		&			
ANR	4814527	Identifier	x		4813164	0					
ANR	4814528	PrimaryExpression	7		4813164	1					
ANR	4814529	ExpressionStatement	* obytes |= bit	5177:60:186245:186259	4813164	1	True				
ANR	4814530	AssignmentExpression	* obytes |= bit		4813164	0		|=			
ANR	4814531	UnaryOperationExpression	* obytes		4813164	0					
ANR	4814532	UnaryOperator	*		4813164	0					
ANR	4814533	Identifier	obytes		4813164	1					
ANR	4814534	Identifier	bit		4813164	1					
ANR	4814535	IfStatement	if ( ! ( bit >>= 1 ) )		4813164	1					
ANR	4814536	Condition	! ( bit >>= 1 )	5179:18:186296:186307	4813164	0	True				
ANR	4814537	UnaryOperationExpression	! ( bit >>= 1 )		4813164	0					
ANR	4814538	UnaryOperator	!		4813164	0					
ANR	4814539	AssignmentExpression	bit >>= 1		4813164	1		>>=			
ANR	4814540	Identifier	bit		4813164	0					
ANR	4814541	PrimaryExpression	1		4813164	1					
ANR	4814542	CompoundStatement		223:32:7884:7884	4813164	1					
ANR	4814543	ExpressionStatement	obytes ++	5179:34:186312:186320	4813164	0	True				
ANR	4814544	PostIncDecOperationExpression	obytes ++		4813164	0					
ANR	4814545	Identifier	obytes		4813164	0					
ANR	4814546	IncDec	++		4813164	1					
ANR	4814547	ExpressionStatement	bit = 0x80	5179:44:186322:186332	4813164	1	True				
ANR	4814548	AssignmentExpression	bit = 0x80		4813164	0		=			
ANR	4814549	Identifier	bit		4813164	0					
ANR	4814550	PrimaryExpression	0x80		4813164	1					
ANR	4814551	ExpressionStatement	obytes += ( upd -> ints [ I_PINS2WRITE ] - pinbot + 7 ) >> 3	5182:12:186363:186410	4813164	3	True				
ANR	4814552	AssignmentExpression	obytes += ( upd -> ints [ I_PINS2WRITE ] - pinbot + 7 ) >> 3		4813164	0		+=			
ANR	4814553	Identifier	obytes		4813164	0					
ANR	4814554	ShiftExpression	( upd -> ints [ I_PINS2WRITE ] - pinbot + 7 ) >> 3		4813164	1		>>			
ANR	4814555	AdditiveExpression	upd -> ints [ I_PINS2WRITE ] - pinbot + 7		4813164	0		-			
ANR	4814556	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4813164	0					
ANR	4814557	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814558	Identifier	upd		4813164	0					
ANR	4814559	Identifier	ints		4813164	1					
ANR	4814560	Identifier	I_PINS2WRITE		4813164	1					
ANR	4814561	AdditiveExpression	pinbot + 7		4813164	1		+			
ANR	4814562	Identifier	pinbot		4813164	0					
ANR	4814563	PrimaryExpression	7		4813164	1					
ANR	4814564	PrimaryExpression	3		4813164	1					
ANR	4814565	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5187:9:186483:186516	4813164	15	True				
ANR	4814566	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4813164	0					
ANR	4814567	Callee	fwrite		4813164	0					
ANR	4814568	Identifier	fwrite		4813164	0					
ANR	4814569	ArgumentList	upd -> outbuf		4813164	1					
ANR	4814570	Argument	upd -> outbuf		4813164	0					
ANR	4814571	PtrMemberAccess	upd -> outbuf		4813164	0					
ANR	4814572	Identifier	upd		4813164	0					
ANR	4814573	Identifier	outbuf		4813164	1					
ANR	4814574	Argument	1		4813164	1					
ANR	4814575	PrimaryExpression	1		4813164	0					
ANR	4814576	Argument	ioutbuf		4813164	2					
ANR	4814577	Identifier	ioutbuf		4813164	0					
ANR	4814578	Argument	out		4813164	3					
ANR	4814579	Identifier	out		4813164	0					
ANR	4814580	ExpressionStatement	ioutbuf = 0	5188:9:186527:186538	4813164	16	True				
ANR	4814581	AssignmentExpression	ioutbuf = 0		4813164	0		=			
ANR	4814582	Identifier	ioutbuf		4813164	0					
ANR	4814583	PrimaryExpression	0		4813164	1					
ANR	4814584	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		4813164	10					
ANR	4814585	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	5194:6:186715:186745	4813164	0	True				
ANR	4814586	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		4813164	0		<			
ANR	4814587	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4814588	Identifier	upd		4813164	0					
ANR	4814589	Identifier	yscan		4813164	1					
ANR	4814590	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4813164	1					
ANR	4814591	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814592	Identifier	upd		4813164	0					
ANR	4814593	Identifier	ints		4813164	1					
ANR	4814594	Identifier	I_BEG_Y		4813164	1					
ANR	4814595	CompoundStatement		238:39:8322:8322	4813164	1					
ANR	4814596	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]	5195:6:186756:186810	4813164	0	True				
ANR	4814597	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		4813164	0		+=			
ANR	4814598	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4814599	Identifier	upd		4813164	0					
ANR	4814600	Identifier	yscan		4813164	1					
ANR	4814601	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		4813164	1					
ANR	4814602	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		4813164	0					
ANR	4814603	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4813164	0					
ANR	4814604	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4814605	Identifier	upd		4813164	0					
ANR	4814606	Identifier	int_a		4813164	1					
ANR	4814607	Identifier	IA_BEG_DY		4813164	1					
ANR	4814608	Identifier	data		4813164	1					
ANR	4814609	PostIncDecOperationExpression	upd -> ipass ++		4813164	1					
ANR	4814610	PtrMemberAccess	upd -> ipass		4813164	0					
ANR	4814611	Identifier	upd		4813164	0					
ANR	4814612	Identifier	ipass		4813164	1					
ANR	4814613	IncDec	++		4813164	1					
ANR	4814614	IfStatement	if ( upd -> ints [ I_BEG_Y ] <= upd -> yscan )		4813164	1					
ANR	4814615	Condition	upd -> ints [ I_BEG_Y ] <= upd -> yscan	5196:14:186826:186857	4813164	0	True				
ANR	4814616	RelationalExpression	upd -> ints [ I_BEG_Y ] <= upd -> yscan		4813164	0		<=			
ANR	4814617	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4813164	0					
ANR	4814618	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814619	Identifier	upd		4813164	0					
ANR	4814620	Identifier	ints		4813164	1					
ANR	4814621	Identifier	I_BEG_Y		4813164	1					
ANR	4814622	PtrMemberAccess	upd -> yscan		4813164	1					
ANR	4814623	Identifier	upd		4813164	0					
ANR	4814624	Identifier	yscan		4813164	1					
ANR	4814625	ExpressionStatement	upd -> ipass = 0	5196:48:186860:186874	4813164	1	True				
ANR	4814626	AssignmentExpression	upd -> ipass = 0		4813164	0		=			
ANR	4814627	PtrMemberAccess	upd -> ipass		4813164	0					
ANR	4814628	Identifier	upd		4813164	0					
ANR	4814629	Identifier	ipass		4813164	1					
ANR	4814630	PrimaryExpression	0		4813164	1					
ANR	4814631	ElseStatement	else		4813164	0					
ANR	4814632	IfStatement	if ( upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass )		4813164	0					
ANR	4814633	Condition	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass	5197:14:186890:186929	4813164	0	True				
ANR	4814634	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass		4813164	0		<=			
ANR	4814635	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4813164	0					
ANR	4814636	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4813164	0					
ANR	4814637	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4814638	Identifier	upd		4813164	0					
ANR	4814639	Identifier	int_a		4813164	1					
ANR	4814640	Identifier	IA_BEG_DY		4813164	1					
ANR	4814641	Identifier	size		4813164	1					
ANR	4814642	PtrMemberAccess	upd -> ipass		4813164	1					
ANR	4814643	Identifier	upd		4813164	0					
ANR	4814644	Identifier	ipass		4813164	1					
ANR	4814645	ExpressionStatement	upd -> ipass = 0	5197:56:186932:186946	4813164	1	True				
ANR	4814646	AssignmentExpression	upd -> ipass = 0		4813164	0		=			
ANR	4814647	PtrMemberAccess	upd -> ipass		4813164	0					
ANR	4814648	Identifier	upd		4813164	0					
ANR	4814649	Identifier	ipass		4813164	1					
ANR	4814650	PrimaryExpression	0		4813164	1					
ANR	4814651	ElseStatement	else		4813164	0					
ANR	4814652	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4813164	0					
ANR	4814653	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5198:13:186961:186992	4813164	0	True				
ANR	4814654	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4813164	0		>=			
ANR	4814655	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4814656	Identifier	upd		4813164	0					
ANR	4814657	Identifier	yscan		4813164	1					
ANR	4814658	ArrayIndexing	upd -> ints [ I_END_Y ]		4813164	1					
ANR	4814659	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814660	Identifier	upd		4813164	0					
ANR	4814661	Identifier	ints		4813164	1					
ANR	4814662	Identifier	I_END_Y		4813164	1					
ANR	4814663	CompoundStatement		242:47:8569:8569	4813164	1					
ANR	4814664	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]	5199:6:187003:187057	4813164	0	True				
ANR	4814665	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		4813164	0		+=			
ANR	4814666	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4814667	Identifier	upd		4813164	0					
ANR	4814668	Identifier	yscan		4813164	1					
ANR	4814669	ArrayIndexing	upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		4813164	1					
ANR	4814670	MemberAccess	upd -> int_a [ IA_END_DY ] . data		4813164	0					
ANR	4814671	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4813164	0					
ANR	4814672	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4814673	Identifier	upd		4813164	0					
ANR	4814674	Identifier	int_a		4813164	1					
ANR	4814675	Identifier	IA_END_DY		4813164	1					
ANR	4814676	Identifier	data		4813164	1					
ANR	4814677	PostIncDecOperationExpression	upd -> ipass ++		4813164	1					
ANR	4814678	PtrMemberAccess	upd -> ipass		4813164	0					
ANR	4814679	Identifier	upd		4813164	0					
ANR	4814680	Identifier	ipass		4813164	1					
ANR	4814681	IncDec	++		4813164	1					
ANR	4814682	IfStatement	if ( upd -> int_a [ IA_END_DY ] . size <= upd -> ipass )		4813164	1					
ANR	4814683	Condition	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass	5200:9:187068:187107	4813164	0	True				
ANR	4814684	RelationalExpression	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass		4813164	0		<=			
ANR	4814685	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4813164	0					
ANR	4814686	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4813164	0					
ANR	4814687	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4814688	Identifier	upd		4813164	0					
ANR	4814689	Identifier	int_a		4813164	1					
ANR	4814690	Identifier	IA_END_DY		4813164	1					
ANR	4814691	Identifier	size		4813164	1					
ANR	4814692	PtrMemberAccess	upd -> ipass		4813164	1					
ANR	4814693	Identifier	upd		4813164	0					
ANR	4814694	Identifier	ipass		4813164	1					
ANR	4814695	ExpressionStatement	upd -> ipass = 0	5200:51:187110:187124	4813164	1	True				
ANR	4814696	AssignmentExpression	upd -> ipass = 0		4813164	0		=			
ANR	4814697	PtrMemberAccess	upd -> ipass		4813164	0					
ANR	4814698	Identifier	upd		4813164	0					
ANR	4814699	Identifier	ipass		4813164	1					
ANR	4814700	PrimaryExpression	0		4813164	1					
ANR	4814701	ElseStatement	else		4813164	0					
ANR	4814702	CompoundStatement		245:10:8710:8710	4813164	0					
ANR	4814703	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]	5202:6:187144:187198	4813164	0	True				
ANR	4814704	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		4813164	0		+=			
ANR	4814705	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4814706	Identifier	upd		4813164	0					
ANR	4814707	Identifier	yscan		4813164	1					
ANR	4814708	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		4813164	1					
ANR	4814709	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		4813164	0					
ANR	4814710	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4813164	0					
ANR	4814711	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4814712	Identifier	upd		4813164	0					
ANR	4814713	Identifier	int_a		4813164	1					
ANR	4814714	Identifier	IA_STD_DY		4813164	1					
ANR	4814715	Identifier	data		4813164	1					
ANR	4814716	PostIncDecOperationExpression	upd -> ipass ++		4813164	1					
ANR	4814717	PtrMemberAccess	upd -> ipass		4813164	0					
ANR	4814718	Identifier	upd		4813164	0					
ANR	4814719	Identifier	ipass		4813164	1					
ANR	4814720	IncDec	++		4813164	1					
ANR	4814721	IfStatement	if ( upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass )		4813164	1					
ANR	4814722	Condition	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass	5203:9:187209:187248	4813164	0	True				
ANR	4814723	RelationalExpression	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass		4813164	0		<=			
ANR	4814724	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4813164	0					
ANR	4814725	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4813164	0					
ANR	4814726	PtrMemberAccess	upd -> int_a		4813164	0					
ANR	4814727	Identifier	upd		4813164	0					
ANR	4814728	Identifier	int_a		4813164	1					
ANR	4814729	Identifier	IA_STD_DY		4813164	1					
ANR	4814730	Identifier	size		4813164	1					
ANR	4814731	PtrMemberAccess	upd -> ipass		4813164	1					
ANR	4814732	Identifier	upd		4813164	0					
ANR	4814733	Identifier	ipass		4813164	1					
ANR	4814734	ExpressionStatement	upd -> ipass = 0	5203:51:187251:187265	4813164	1	True				
ANR	4814735	AssignmentExpression	upd -> ipass = 0		4813164	0		=			
ANR	4814736	PtrMemberAccess	upd -> ipass		4813164	0					
ANR	4814737	Identifier	upd		4813164	0					
ANR	4814738	Identifier	ipass		4813164	1					
ANR	4814739	PrimaryExpression	0		4813164	1					
ANR	4814740	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4813164	2					
ANR	4814741	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5204:9:187276:187307	4813164	0	True				
ANR	4814742	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4813164	0		>=			
ANR	4814743	PtrMemberAccess	upd -> yscan		4813164	0					
ANR	4814744	Identifier	upd		4813164	0					
ANR	4814745	Identifier	yscan		4813164	1					
ANR	4814746	ArrayIndexing	upd -> ints [ I_END_Y ]		4813164	1					
ANR	4814747	PtrMemberAccess	upd -> ints		4813164	0					
ANR	4814748	Identifier	upd		4813164	0					
ANR	4814749	Identifier	ints		4813164	1					
ANR	4814750	Identifier	I_END_Y		4813164	1					
ANR	4814751	ExpressionStatement	upd -> ipass = 0	5204:51:187318:187332	4813164	1	True				
ANR	4814752	AssignmentExpression	upd -> ipass = 0		4813164	0		=			
ANR	4814753	PtrMemberAccess	upd -> ipass		4813164	0					
ANR	4814754	Identifier	upd		4813164	0					
ANR	4814755	Identifier	ipass		4813164	1					
ANR	4814756	PrimaryExpression	0		4813164	1					
ANR	4814757	ReturnStatement	return 0 ;	5207:3:187343:187351	4813164	11	True				
ANR	4814758	PrimaryExpression	0		4813164	0					
ANR	4814759	ReturnType	static int		4813164	1					
ANR	4814760	Identifier	upd_wrtescp		4813164	2					
ANR	4814761	ParameterList	"upd_p upd , FILE * out"		4813164	3					
ANR	4814762	Parameter	upd_p upd	4956:12:178403:178411	4813164	0	True				
ANR	4814763	ParameterType	upd_p		4813164	0					
ANR	4814764	Identifier	upd		4813164	1					
ANR	4814765	Parameter	FILE * out	4956:23:178414:178422	4813164	1	True				
ANR	4814766	ParameterType	FILE *		4813164	0					
ANR	4814767	Identifier	out		4813164	1					
ANR	4814768	CFGEntryNode	ENTRY		4813164		True				
ANR	4814769	CFGExitNode	EXIT		4813164		True				
ANR	4814770	Symbol	I_PINS2WRITE		4813164						
ANR	4814771	Symbol	* upd -> int_a		4813164						
ANR	4814772	Symbol	* x		4813164						
ANR	4814773	Symbol	* y		4813164						
ANR	4814774	Symbol	* * IA_STD_DY		4813164						
ANR	4814775	Symbol	* I_YSTEP		4813164						
ANR	4814776	Symbol	pinbot		4813164						
ANR	4814777	Symbol	bit		4813164						
ANR	4814778	Symbol	upd -> int_a [ IA_STD_DY ] . data		4813164						
ANR	4814779	Symbol	icomp		4813164						
ANR	4814780	Symbol	upd -> yscan		4813164						
ANR	4814781	Symbol	scan -> xend		4813164						
ANR	4814782	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		4813164						
ANR	4814783	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4813164						
ANR	4814784	Symbol	* scan		4813164						
ANR	4814785	Symbol	* IA_BEG_IX		4813164						
ANR	4814786	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		4813164						
ANR	4814787	Symbol	S_SETLF		4813164						
ANR	4814788	Symbol	upd -> int_a [ IA_BEG_DY ] . data		4813164						
ANR	4814789	Symbol	* upd -> scnbuf		4813164						
ANR	4814790	Symbol	upd -> string_a [ SA_SETCOMP ] . data		4813164						
ANR	4814791	Symbol	upd		4813164						
ANR	4814792	Symbol	* SA_WRITECOMP		4813164						
ANR	4814793	Symbol	I_NXPASS		4813164						
ANR	4814794	Symbol	* I_NYPASS		4813164						
ANR	4814795	Symbol	* * SA_SETCOMP		4813164						
ANR	4814796	Symbol	B_YABS		4813164						
ANR	4814797	Symbol	scan [ icomp ] . xbegin		4813164						
ANR	4814798	Symbol	* IA_BEGBOT		4813164						
ANR	4814799	Symbol	* * scan		4813164						
ANR	4814800	Symbol	* I_BEG_Y		4813164						
ANR	4814801	Symbol	* upd -> ipass		4813164						
ANR	4814802	Symbol	* upd -> outbuf		4813164						
ANR	4814803	Symbol	* IA_END_IX		4813164						
ANR	4814804	Symbol	upd -> strings [ S_SETLF ] . size		4813164						
ANR	4814805	Symbol	* * icomp		4813164						
ANR	4814806	Symbol	ixpass		4813164						
ANR	4814807	Symbol	upd -> pwidth		4813164						
ANR	4814808	Symbol	* scan [ icomp ] . xend		4813164						
ANR	4814809	Symbol	n2do		4813164						
ANR	4814810	Symbol	scan		4813164						
ANR	4814811	Symbol	upd -> strings		4813164						
ANR	4814812	Symbol	* IA_STD_IX		4813164						
ANR	4814813	Symbol	* * IA_BEGBOT		4813164						
ANR	4814814	Symbol	upd -> int_a [ IA_STD_DY ] . size		4813164						
ANR	4814815	Symbol	I_BEG_Y		4813164						
ANR	4814816	Symbol	out		4813164						
ANR	4814817	Symbol	upd -> flags		4813164						
ANR	4814818	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		4813164						
ANR	4814819	Symbol	* upd		4813164						
ANR	4814820	Symbol	* upd -> int_a [ IA_END_IX ] . data		4813164						
ANR	4814821	Symbol	* S_XMOVE		4813164						
ANR	4814822	Symbol	xend		4813164						
ANR	4814823	Symbol	obytes		4813164						
ANR	4814824	Symbol	* upd -> scnmsk		4813164						
ANR	4814825	Symbol	IA_BEG_IX		4813164						
ANR	4814826	Symbol	upd -> ocomp		4813164						
ANR	4814827	Symbol	* upd -> strings		4813164						
ANR	4814828	Symbol	* I_XOFS		4813164						
ANR	4814829	Symbol	upd -> int_a [ IA_BEG_IX ] . data		4813164						
ANR	4814830	Symbol	* upd -> int_a [ IA_END_DY ] . data		4813164						
ANR	4814831	Symbol	upd -> strings [ S_YMOVE ] . size		4813164						
ANR	4814832	Symbol	* S_XSTEP		4813164						
ANR	4814833	Symbol	* scan [ icomp ] . xbegin		4813164						
ANR	4814834	Symbol	IA_BEGBOT		4813164						
ANR	4814835	Symbol	upd -> int_a [ IA_END_DY ] . data		4813164						
ANR	4814836	Symbol	xbegin		4813164						
ANR	4814837	Symbol	I_XSTEP		4813164						
ANR	4814838	Symbol	n		4813164						
ANR	4814839	Symbol	* * upd -> int_a		4813164						
ANR	4814840	Symbol	* * IA_STD_IX		4813164						
ANR	4814841	Symbol	I_YOFS		4813164						
ANR	4814842	Symbol	IA_STD_IX		4813164						
ANR	4814843	Symbol	upd -> yprinter		4813164						
ANR	4814844	Symbol	ioutbuf		4813164						
ANR	4814845	Symbol	IA_END_IX		4813164						
ANR	4814846	Symbol	S_YMOVE		4813164						
ANR	4814847	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		4813164						
ANR	4814848	Symbol	S_YSTEP		4813164						
ANR	4814849	Symbol	x		4813164						
ANR	4814850	Symbol	y		4813164						
ANR	4814851	Symbol	upd -> lf		4813164						
ANR	4814852	Symbol	* I_END_Y		4813164						
ANR	4814853	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4813164						
ANR	4814854	Symbol	* * upd		4813164						
ANR	4814855	Symbol	* * IA_END_IX		4813164						
ANR	4814856	Symbol	S_XMOVE		4813164						
ANR	4814857	Symbol	* upd -> string_a		4813164						
ANR	4814858	Symbol	* IA_BEG_DY		4813164						
ANR	4814859	Symbol	SA_SETCOMP		4813164						
ANR	4814860	Symbol	* * IA_ENDTOP		4813164						
ANR	4814861	Symbol	upd -> icomp		4813164						
ANR	4814862	Symbol	* * IA_END_DY		4813164						
ANR	4814863	Symbol	upd -> ipass		4813164						
ANR	4814864	Symbol	* S_SETLF		4813164						
ANR	4814865	Symbol	upd -> strings [ S_YSTEP ] . size		4813164						
ANR	4814866	Symbol	* SA_SETCOMP		4813164						
ANR	4814867	Symbol	upd -> strings [ S_XSTEP ] . data		4813164						
ANR	4814868	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		4813164						
ANR	4814869	Symbol	* * IA_BEG_IX		4813164						
ANR	4814870	Symbol	* I_NXPASS		4813164						
ANR	4814871	Symbol	upd -> strings [ S_XMOVE ] . data		4813164						
ANR	4814872	Symbol	* scan -> bytes		4813164						
ANR	4814873	Symbol	upd -> int_a		4813164						
ANR	4814874	Symbol	pin		4813164						
ANR	4814875	Symbol	* upd -> int_a [ IA_STD_IX ] . data		4813164						
ANR	4814876	Symbol	* I_BEGSKIP		4813164						
ANR	4814877	Symbol	upd -> strings [ S_SETLF ] . data		4813164						
ANR	4814878	Symbol	* I_XSTEP		4813164						
ANR	4814879	Symbol	scan -> bytes		4813164						
ANR	4814880	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4813164						
ANR	4814881	Symbol	upd -> int_a [ IA_ENDTOP ] . data		4813164						
ANR	4814882	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		4813164						
ANR	4814883	Symbol	* scan -> xend		4813164						
ANR	4814884	Symbol	* upd -> int_a [ IA_BEG_IX ] . data		4813164						
ANR	4814885	Symbol	SA_WRITECOMP		4813164						
ANR	4814886	Symbol	upd -> int_a [ IA_END_IX ] . data		4813164						
ANR	4814887	Symbol	upd -> xprinter		4813164						
ANR	4814888	Symbol	upd -> int_a [ IA_STD_IX ] . data		4813164						
ANR	4814889	Symbol	pintop		4813164						
ANR	4814890	Symbol	upd -> ints		4813164						
ANR	4814891	Symbol	* ixpass		4813164						
ANR	4814892	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4813164						
ANR	4814893	Symbol	upd -> strings [ S_XSTEP ] . size		4813164						
ANR	4814894	Symbol	upd -> strings [ S_YSTEP ] . data		4813164						
ANR	4814895	Symbol	I_XOFS		4813164						
ANR	4814896	Symbol	I_BEGSKIP		4813164						
ANR	4814897	Symbol	upd -> int_a [ IA_END_DY ] . size		4813164						
ANR	4814898	Symbol	* obytes		4813164						
ANR	4814899	Symbol	B_XABS		4813164						
ANR	4814900	Symbol	* icomp		4813164						
ANR	4814901	Symbol	upd -> int_a [ IA_BEG_DY ] . size		4813164						
ANR	4814902	Symbol	* IA_ENDTOP		4813164						
ANR	4814903	Symbol	upd -> strings [ S_YMOVE ] . data		4813164						
ANR	4814904	Symbol	* IA_END_DY		4813164						
ANR	4814905	Symbol	* IA_STD_DY		4813164						
ANR	4814906	Symbol	I_NYPASS		4813164						
ANR	4814907	Symbol	* * upd -> string_a		4813164						
ANR	4814908	Symbol	IA_STD_DY		4813164						
ANR	4814909	Symbol	scan [ icomp ] . xend		4813164						
ANR	4814910	Symbol	ybegin		4813164						
ANR	4814911	Symbol	* * SA_WRITECOMP		4813164						
ANR	4814912	Symbol	* I_YOFS		4813164						
ANR	4814913	Symbol	* S_YMOVE		4813164						
ANR	4814914	Symbol	upd -> scnmsk		4813164						
ANR	4814915	Symbol	* * * upd		4813164						
ANR	4814916	Symbol	upd -> strings [ S_XMOVE ] . size		4813164						
ANR	4814917	Symbol	IA_ENDTOP		4813164						
ANR	4814918	Symbol	IA_END_DY		4813164						
ANR	4814919	Symbol	I_END_Y		4813164						
ANR	4814920	Symbol	* S_YSTEP		4813164						
ANR	4814921	Symbol	upd -> string_a		4813164						
ANR	4814922	Symbol	* upd -> ints		4813164						
ANR	4814923	Symbol	* I_PINS2WRITE		4813164						
ANR	4814924	Symbol	upd -> scnbuf		4813164						
ANR	4814925	Symbol	upd -> string_a [ SA_SETCOMP ] . size		4813164						
ANR	4814926	Symbol	S_XSTEP		4813164						
ANR	4814927	Symbol	yend		4813164						
ANR	4814928	Symbol	IA_BEG_DY		4813164						
ANR	4814929	Symbol	* upd -> int_a [ IA_STD_DY ] . data		4813164						
ANR	4814930	Symbol	upd -> outbuf		4813164						
ANR	4814931	Symbol	upd -> int_a [ IA_BEGBOT ] . data		4813164						
ANR	4814932	Symbol	* * IA_BEG_DY		4813164						
ANR	4814933	Symbol	I_YSTEP		4813164						
ANR	4814934	Function	upd_open_wrtescp2	5214:0:187579:200309							
ANR	4814935	FunctionDef	upd_open_wrtescp2 (upd_device * udev)		4814934	0					
ANR	4814936	CompoundStatement		5216:0:187626:200309	4814934	0					
ANR	4814937	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	5217:3:187631:187675	4814934	0	True				
ANR	4814938	IdentifierDecl	upd = udev -> upd		4814934	0					
ANR	4814939	IdentifierDeclType	const upd_p		4814934	0					
ANR	4814940	Identifier	upd		4814934	1					
ANR	4814941	AssignmentExpression	upd = udev -> upd		4814934	2		=			
ANR	4814942	Identifier	upd		4814934	0					
ANR	4814943	PtrMemberAccess	udev -> upd		4814934	1					
ANR	4814944	Identifier	udev		4814934	0					
ANR	4814945	Identifier	upd		4814934	1					
ANR	4814946	IdentifierDeclStatement	int error = 0 ;	5218:3:187680:187716	4814934	1	True				
ANR	4814947	IdentifierDecl	error = 0		4814934	0					
ANR	4814948	IdentifierDeclType	int		4814934	0					
ANR	4814949	Identifier	error		4814934	1					
ANR	4814950	AssignmentExpression	error = 0		4814934	2		=			
ANR	4814951	Identifier	error		4814934	0					
ANR	4814952	PrimaryExpression	0		4814934	1					
ANR	4814953	IdentifierDeclStatement	float pixels_per_inch = 360.0 ;	5219:3:187721:187761	4814934	2	True				
ANR	4814954	IdentifierDecl	pixels_per_inch = 360.0		4814934	0					
ANR	4814955	IdentifierDeclType	float		4814934	0					
ANR	4814956	Identifier	pixels_per_inch		4814934	1					
ANR	4814957	AssignmentExpression	pixels_per_inch = 360.0		4814934	2		=			
ANR	4814958	Identifier	pixels_per_inch		4814934	0					
ANR	4814959	PrimaryExpression	360.0		4814934	1					
ANR	4814960	IfStatement	if ( 0 < upd -> strings [ S_BEGIN ] . size )		4814934	3					
ANR	4814961	Condition	0 < upd -> strings [ S_BEGIN ] . size	5222:6:187826:187855	4814934	0	True				
ANR	4814962	RelationalExpression	0 < upd -> strings [ S_BEGIN ] . size		4814934	0		<			
ANR	4814963	PrimaryExpression	0		4814934	0					
ANR	4814964	MemberAccess	upd -> strings [ S_BEGIN ] . size		4814934	1					
ANR	4814965	ArrayIndexing	upd -> strings [ S_BEGIN ]		4814934	0					
ANR	4814966	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4814967	Identifier	upd		4814934	0					
ANR	4814968	Identifier	strings		4814934	1					
ANR	4814969	Identifier	S_BEGIN		4814934	1					
ANR	4814970	Identifier	size		4814934	1					
ANR	4814971	CompoundStatement		9:5:290:346	4814934	1					
ANR	4814972	IdentifierDeclStatement	"int i , state = 0 , value = 0 ;"	5223:5:187883:187910	4814934	0	True				
ANR	4814973	IdentifierDecl	i		4814934	0					
ANR	4814974	IdentifierDeclType	int		4814934	0					
ANR	4814975	Identifier	i		4814934	1					
ANR	4814976	IdentifierDecl	state = 0		4814934	1					
ANR	4814977	IdentifierDeclType	int		4814934	0					
ANR	4814978	Identifier	state		4814934	1					
ANR	4814979	AssignmentExpression	state = 0		4814934	2		=			
ANR	4814980	Identifier	state		4814934	0					
ANR	4814981	PrimaryExpression	0		4814934	1					
ANR	4814982	IdentifierDecl	value = 0		4814934	2					
ANR	4814983	IdentifierDeclType	int		4814934	0					
ANR	4814984	Identifier	value		4814934	1					
ANR	4814985	AssignmentExpression	value = 0		4814934	2		=			
ANR	4814986	Identifier	value		4814934	0					
ANR	4814987	PrimaryExpression	0		4814934	1					
ANR	4814988	IdentifierDeclStatement	byte * bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data ) ;	5224:5:187917:187973	4814934	1	True				
ANR	4814989	IdentifierDecl	* bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		4814934	0					
ANR	4814990	IdentifierDeclType	byte *		4814934	0					
ANR	4814991	Identifier	bp		4814934	1					
ANR	4814992	AssignmentExpression	* bp = ( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		4814934	2		=			
ANR	4814993	Identifier	bp		4814934	0					
ANR	4814994	CastExpression	( byte * ) upd_cast ( upd -> strings [ S_BEGIN ] . data )		4814934	1					
ANR	4814995	CastTarget	byte *		4814934	0					
ANR	4814996	CallExpression	upd_cast ( upd -> strings [ S_BEGIN ] . data )		4814934	1					
ANR	4814997	Callee	upd_cast		4814934	0					
ANR	4814998	Identifier	upd_cast		4814934	0					
ANR	4814999	ArgumentList	upd -> strings [ S_BEGIN ] . data		4814934	1					
ANR	4815000	Argument	upd -> strings [ S_BEGIN ] . data		4814934	0					
ANR	4815001	MemberAccess	upd -> strings [ S_BEGIN ] . data		4814934	0					
ANR	4815002	ArrayIndexing	upd -> strings [ S_BEGIN ]		4814934	0					
ANR	4815003	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815004	Identifier	upd		4814934	0					
ANR	4815005	Identifier	strings		4814934	1					
ANR	4815006	Identifier	S_BEGIN		4814934	1					
ANR	4815007	Identifier	data		4814934	1					
ANR	4815008	ForStatement	for ( i = 0 ; i < upd -> strings [ S_BEGIN ] . size ; ++ i )		4814934	2					
ANR	4815009	ForInit	i = 0 ;	5225:9:187984:187989	4814934	0	True				
ANR	4815010	AssignmentExpression	i = 0		4814934	0		=			
ANR	4815011	Identifier	i		4814934	0					
ANR	4815012	PrimaryExpression	0		4814934	1					
ANR	4815013	Condition	i < upd -> strings [ S_BEGIN ] . size	5225:16:187991:188020	4814934	1	True				
ANR	4815014	RelationalExpression	i < upd -> strings [ S_BEGIN ] . size		4814934	0		<			
ANR	4815015	Identifier	i		4814934	0					
ANR	4815016	MemberAccess	upd -> strings [ S_BEGIN ] . size		4814934	1					
ANR	4815017	ArrayIndexing	upd -> strings [ S_BEGIN ]		4814934	0					
ANR	4815018	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815019	Identifier	upd		4814934	0					
ANR	4815020	Identifier	strings		4814934	1					
ANR	4815021	Identifier	S_BEGIN		4814934	1					
ANR	4815022	Identifier	size		4814934	1					
ANR	4815023	UnaryExpression	++ i	5225:48:188023:188025	4814934	2	True				
ANR	4815024	IncDec	++		4814934	0					
ANR	4815025	Identifier	i		4814934	1					
ANR	4815026	CompoundStatement		10:53:401:401	4814934	3					
ANR	4815027	SwitchStatement	switch ( state )		4814934	0					
ANR	4815028	Condition	state	5226:15:188045:188049	4814934	0	True				
ANR	4815029	Identifier	state		4814934	0					
ANR	4815030	CompoundStatement		11:22:425:425	4814934	1					
ANR	4815031	Label	case 0 :	5227:11:188065:188072	4814934	0	True				
ANR	4815032	IfStatement	if ( 0x1b == bp [ i ] )		4814934	1					
ANR	4815033	Condition	0x1b == bp [ i ]	5228:17:188091:188103	4814934	0	True				
ANR	4815034	EqualityExpression	0x1b == bp [ i ]		4814934	0		==			
ANR	4815035	PrimaryExpression	0x1b		4814934	0					
ANR	4815036	ArrayIndexing	bp [ i ]		4814934	1					
ANR	4815037	Identifier	bp		4814934	0					
ANR	4815038	Identifier	i		4814934	1					
ANR	4815039	ExpressionStatement	state = 1	5228:32:188106:188115	4814934	1	True				
ANR	4815040	AssignmentExpression	state = 1		4814934	0		=			
ANR	4815041	Identifier	state		4814934	0					
ANR	4815042	PrimaryExpression	1		4814934	1					
ANR	4815043	BreakStatement	break ;	5229:11:188128:188133	4814934	2	True				
ANR	4815044	Label	case 1 :	5230:11:188146:188153	4814934	3	True				
ANR	4815045	IfStatement	if ( '(' == bp [ i ] )		4814934	4					
ANR	4815046	Condition	'(' == bp [ i ]	5231:17:188172:188184	4814934	0	True				
ANR	4815047	EqualityExpression	'(' == bp [ i ]		4814934	0		==			
ANR	4815048	PrimaryExpression	'('		4814934	0					
ANR	4815049	ArrayIndexing	bp [ i ]		4814934	1					
ANR	4815050	Identifier	bp		4814934	0					
ANR	4815051	Identifier	i		4814934	1					
ANR	4815052	ExpressionStatement	state = 2	5231:32:188187:188196	4814934	1	True				
ANR	4815053	AssignmentExpression	state = 2		4814934	0		=			
ANR	4815054	Identifier	state		4814934	0					
ANR	4815055	PrimaryExpression	2		4814934	1					
ANR	4815056	ElseStatement	else		4814934	0					
ANR	4815057	ExpressionStatement	state = 0	5232:32:188230:188239	4814934	0	True				
ANR	4815058	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815059	Identifier	state		4814934	0					
ANR	4815060	PrimaryExpression	0		4814934	1					
ANR	4815061	BreakStatement	break ;	5233:11:188252:188257	4814934	5	True				
ANR	4815062	Label	case 2 :	5234:11:188270:188277	4814934	6	True				
ANR	4815063	SwitchStatement	switch ( bp [ i ] )		4814934	7					
ANR	4815064	Condition	bp [ i ]	5235:21:188300:188304	4814934	0	True				
ANR	4815065	ArrayIndexing	bp [ i ]		4814934	0					
ANR	4815066	Identifier	bp		4814934	0					
ANR	4815067	Identifier	i		4814934	1					
ANR	4815068	CompoundStatement		20:28:680:680	4814934	1					
ANR	4815069	Label	case 'U' :	5236:17:188326:188334	4814934	0	True				
ANR	4815070	ExpressionStatement	state = 3	5236:27:188336:188346	4814934	1	True				
ANR	4815071	AssignmentExpression	state = 3		4814934	0		=			
ANR	4815072	Identifier	state		4814934	0					
ANR	4815073	PrimaryExpression	3		4814934	1					
ANR	4815074	BreakStatement	break ;	5236:39:188348:188353	4814934	2	True				
ANR	4815075	Label	case 'C' :	5237:17:188397:188405	4814934	3	True				
ANR	4815076	ExpressionStatement	state = 6	5237:27:188407:188417	4814934	4	True				
ANR	4815077	AssignmentExpression	state = 6		4814934	0		=			
ANR	4815078	Identifier	state		4814934	0					
ANR	4815079	PrimaryExpression	6		4814934	1					
ANR	4815080	BreakStatement	break ;	5237:39:188419:188424	4814934	5	True				
ANR	4815081	Label	case 'c' :	5238:17:188461:188469	4814934	6	True				
ANR	4815082	ExpressionStatement	state = 10	5238:27:188471:188481	4814934	7	True				
ANR	4815083	AssignmentExpression	state = 10		4814934	0		=			
ANR	4815084	Identifier	state		4814934	0					
ANR	4815085	PrimaryExpression	10		4814934	1					
ANR	4815086	BreakStatement	break ;	5238:39:188483:188488	4814934	8	True				
ANR	4815087	Label	default :	5239:17:188531:188538	4814934	9	True				
ANR	4815088	Identifier	default		4814934	0					
ANR	4815089	ExpressionStatement	state = 0	5239:27:188541:188551	4814934	10	True				
ANR	4815090	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815091	Identifier	state		4814934	0					
ANR	4815092	PrimaryExpression	0		4814934	1					
ANR	4815093	BreakStatement	break ;	5239:39:188553:188558	4814934	11	True				
ANR	4815094	BreakStatement	break ;	5241:11:188587:188592	4814934	8	True				
ANR	4815095	Label	case 3 :	5242:11:188605:188612	4814934	9	True				
ANR	4815096	IfStatement	if ( 1 == bp [ i ] )		4814934	10					
ANR	4815097	Condition	1 == bp [ i ]	5243:17:188631:188640	4814934	0	True				
ANR	4815098	EqualityExpression	1 == bp [ i ]		4814934	0		==			
ANR	4815099	PrimaryExpression	1		4814934	0					
ANR	4815100	ArrayIndexing	bp [ i ]		4814934	1					
ANR	4815101	Identifier	bp		4814934	0					
ANR	4815102	Identifier	i		4814934	1					
ANR	4815103	ExpressionStatement	state = 4	5243:29:188643:188652	4814934	1	True				
ANR	4815104	AssignmentExpression	state = 4		4814934	0		=			
ANR	4815105	Identifier	state		4814934	0					
ANR	4815106	PrimaryExpression	4		4814934	1					
ANR	4815107	ElseStatement	else		4814934	0					
ANR	4815108	ExpressionStatement	state = 0	5244:29:188683:188692	4814934	0	True				
ANR	4815109	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815110	Identifier	state		4814934	0					
ANR	4815111	PrimaryExpression	0		4814934	1					
ANR	4815112	BreakStatement	break ;	5245:11:188705:188710	4814934	11	True				
ANR	4815113	Label	case 4 :	5246:11:188723:188730	4814934	12	True				
ANR	4815114	IfStatement	if ( 0 == bp [ i ] )		4814934	13					
ANR	4815115	Condition	0 == bp [ i ]	5247:17:188749:188758	4814934	0	True				
ANR	4815116	EqualityExpression	0 == bp [ i ]		4814934	0		==			
ANR	4815117	PrimaryExpression	0		4814934	0					
ANR	4815118	ArrayIndexing	bp [ i ]		4814934	1					
ANR	4815119	Identifier	bp		4814934	0					
ANR	4815120	Identifier	i		4814934	1					
ANR	4815121	ExpressionStatement	state = 5	5247:29:188761:188770	4814934	1	True				
ANR	4815122	AssignmentExpression	state = 5		4814934	0		=			
ANR	4815123	Identifier	state		4814934	0					
ANR	4815124	PrimaryExpression	5		4814934	1					
ANR	4815125	ElseStatement	else		4814934	0					
ANR	4815126	ExpressionStatement	state = 0	5248:29:188801:188810	4814934	0	True				
ANR	4815127	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815128	Identifier	state		4814934	0					
ANR	4815129	PrimaryExpression	0		4814934	1					
ANR	4815130	BreakStatement	break ;	5249:11:188823:188828	4814934	14	True				
ANR	4815131	Label	case 5 :	5250:11:188841:188848	4814934	15	True				
ANR	4815132	ExpressionStatement	pixels_per_inch = 3600.0 / ( float ) bp [ i ]	5251:14:188864:188904	4814934	16	True				
ANR	4815133	AssignmentExpression	pixels_per_inch = 3600.0 / ( float ) bp [ i ]		4814934	0		=			
ANR	4815134	Identifier	pixels_per_inch		4814934	0					
ANR	4815135	MultiplicativeExpression	3600.0 / ( float ) bp [ i ]		4814934	1		/			
ANR	4815136	PrimaryExpression	3600.0		4814934	0					
ANR	4815137	CastExpression	( float ) bp [ i ]		4814934	1					
ANR	4815138	CastTarget	float		4814934	0					
ANR	4815139	ArrayIndexing	bp [ i ]		4814934	1					
ANR	4815140	Identifier	bp		4814934	0					
ANR	4815141	Identifier	i		4814934	1					
ANR	4815142	ExpressionStatement	state = 0	5252:14:188920:188929	4814934	17	True				
ANR	4815143	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815144	Identifier	state		4814934	0					
ANR	4815145	PrimaryExpression	0		4814934	1					
ANR	4815146	BreakStatement	break ;	5253:11:188942:188947	4814934	18	True				
ANR	4815147	Label	case 6 :	5254:11:188960:188967	4814934	19	True				
ANR	4815148	IfStatement	if ( 2 == bp [ i ] )		4814934	20					
ANR	4815149	Condition	2 == bp [ i ]	5255:17:188986:188995	4814934	0	True				
ANR	4815150	EqualityExpression	2 == bp [ i ]		4814934	0		==			
ANR	4815151	PrimaryExpression	2		4814934	0					
ANR	4815152	ArrayIndexing	bp [ i ]		4814934	1					
ANR	4815153	Identifier	bp		4814934	0					
ANR	4815154	Identifier	i		4814934	1					
ANR	4815155	ExpressionStatement	state = 7	5255:29:188998:189007	4814934	1	True				
ANR	4815156	AssignmentExpression	state = 7		4814934	0		=			
ANR	4815157	Identifier	state		4814934	0					
ANR	4815158	PrimaryExpression	7		4814934	1					
ANR	4815159	ElseStatement	else		4814934	0					
ANR	4815160	ExpressionStatement	state = 0	5256:29:189038:189047	4814934	0	True				
ANR	4815161	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815162	Identifier	state		4814934	0					
ANR	4815163	PrimaryExpression	0		4814934	1					
ANR	4815164	BreakStatement	break ;	5257:11:189060:189065	4814934	21	True				
ANR	4815165	Label	case 7 :	5258:11:189078:189085	4814934	22	True				
ANR	4815166	IfStatement	if ( 0 == bp [ i ] )		4814934	23					
ANR	4815167	Condition	0 == bp [ i ]	5259:17:189104:189113	4814934	0	True				
ANR	4815168	EqualityExpression	0 == bp [ i ]		4814934	0		==			
ANR	4815169	PrimaryExpression	0		4814934	0					
ANR	4815170	ArrayIndexing	bp [ i ]		4814934	1					
ANR	4815171	Identifier	bp		4814934	0					
ANR	4815172	Identifier	i		4814934	1					
ANR	4815173	ExpressionStatement	state = 8	5259:29:189116:189125	4814934	1	True				
ANR	4815174	AssignmentExpression	state = 8		4814934	0		=			
ANR	4815175	Identifier	state		4814934	0					
ANR	4815176	PrimaryExpression	8		4814934	1					
ANR	4815177	ElseStatement	else		4814934	0					
ANR	4815178	ExpressionStatement	state = 0	5260:29:189156:189165	4814934	0	True				
ANR	4815179	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815180	Identifier	state		4814934	0					
ANR	4815181	PrimaryExpression	0		4814934	1					
ANR	4815182	BreakStatement	break ;	5261:11:189178:189183	4814934	24	True				
ANR	4815183	Label	case 8 :	5262:11:189196:189203	4814934	25	True				
ANR	4815184	IfStatement	if ( B_PAGELENGTH & upd -> flags )		4814934	26					
ANR	4815185	Condition	B_PAGELENGTH & upd -> flags	5263:17:189222:189246	4814934	0	True				
ANR	4815186	BitAndExpression	B_PAGELENGTH & upd -> flags		4814934	0		&			
ANR	4815187	Identifier	B_PAGELENGTH		4814934	0					
ANR	4815188	PtrMemberAccess	upd -> flags		4814934	1					
ANR	4815189	Identifier	upd		4814934	0					
ANR	4815190	Identifier	flags		4814934	1					
ANR	4815191	CompoundStatement		48:44:1622:1622	4814934	1					
ANR	4815192	ExpressionStatement	value = ( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch )	5264:17:189268:189376	4814934	0	True				
ANR	4815193	AssignmentExpression	value = ( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch )		4814934	0		=			
ANR	4815194	Identifier	value		4814934	0					
ANR	4815195	CastExpression	( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch )		4814934	1					
ANR	4815196	CastTarget	int		4814934	0					
ANR	4815197	AdditiveExpression	0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch		4814934	1		+			
ANR	4815198	PrimaryExpression	0.5		4814934	0					
ANR	4815199	MultiplicativeExpression	udev -> height * pixels_per_inch / udev -> y_pixels_per_inch		4814934	1		*			
ANR	4815200	PtrMemberAccess	udev -> height		4814934	0					
ANR	4815201	Identifier	udev		4814934	0					
ANR	4815202	Identifier	height		4814934	1					
ANR	4815203	MultiplicativeExpression	pixels_per_inch / udev -> y_pixels_per_inch		4814934	1		/			
ANR	4815204	Identifier	pixels_per_inch		4814934	0					
ANR	4815205	PtrMemberAccess	udev -> y_pixels_per_inch		4814934	1					
ANR	4815206	Identifier	udev		4814934	0					
ANR	4815207	Identifier	y_pixels_per_inch		4814934	1					
ANR	4815208	ExpressionStatement	bp [ i ] = value & 0xff	5266:17:189395:189420	4814934	1	True				
ANR	4815209	AssignmentExpression	bp [ i ] = value & 0xff		4814934	0		=			
ANR	4815210	ArrayIndexing	bp [ i ]		4814934	0					
ANR	4815211	Identifier	bp		4814934	0					
ANR	4815212	Identifier	i		4814934	1					
ANR	4815213	BitAndExpression	value & 0xff		4814934	1		&			
ANR	4815214	Identifier	value		4814934	0					
ANR	4815215	PrimaryExpression	0xff		4814934	1					
ANR	4815216	ExpressionStatement	state = 9	5268:14:189452:189461	4814934	27	True				
ANR	4815217	AssignmentExpression	state = 9		4814934	0		=			
ANR	4815218	Identifier	state		4814934	0					
ANR	4815219	PrimaryExpression	9		4814934	1					
ANR	4815220	BreakStatement	break ;	5269:11:189474:189479	4814934	28	True				
ANR	4815221	Label	case 9 :	5270:11:189492:189499	4814934	29	True				
ANR	4815222	IfStatement	if ( B_PAGELENGTH & upd -> flags )		4814934	30					
ANR	4815223	Condition	B_PAGELENGTH & upd -> flags	5271:17:189518:189542	4814934	0	True				
ANR	4815224	BitAndExpression	B_PAGELENGTH & upd -> flags		4814934	0		&			
ANR	4815225	Identifier	B_PAGELENGTH		4814934	0					
ANR	4815226	PtrMemberAccess	upd -> flags		4814934	1					
ANR	4815227	Identifier	upd		4814934	0					
ANR	4815228	Identifier	flags		4814934	1					
ANR	4815229	CompoundStatement		56:44:1918:1918	4814934	1					
ANR	4815230	ExpressionStatement	bp [ i ] = ( value >> 8 ) & 0xff	5272:17:189564:189589	4814934	0	True				
ANR	4815231	AssignmentExpression	bp [ i ] = ( value >> 8 ) & 0xff		4814934	0		=			
ANR	4815232	ArrayIndexing	bp [ i ]		4814934	0					
ANR	4815233	Identifier	bp		4814934	0					
ANR	4815234	Identifier	i		4814934	1					
ANR	4815235	BitAndExpression	( value >> 8 ) & 0xff		4814934	1		&			
ANR	4815236	ShiftExpression	value >> 8		4814934	0		>>			
ANR	4815237	Identifier	value		4814934	0					
ANR	4815238	PrimaryExpression	8		4814934	1					
ANR	4815239	PrimaryExpression	0xff		4814934	1					
ANR	4815240	ExpressionStatement	state = 0	5274:14:189621:189630	4814934	31	True				
ANR	4815241	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815242	Identifier	state		4814934	0					
ANR	4815243	PrimaryExpression	0		4814934	1					
ANR	4815244	BreakStatement	break ;	5275:11:189643:189648	4814934	32	True				
ANR	4815245	Label	case 10 :	5276:11:189661:189668	4814934	33	True				
ANR	4815246	IfStatement	if ( 4 == bp [ i ] )		4814934	34					
ANR	4815247	Condition	4 == bp [ i ]	5277:17:189687:189696	4814934	0	True				
ANR	4815248	EqualityExpression	4 == bp [ i ]		4814934	0		==			
ANR	4815249	PrimaryExpression	4		4814934	0					
ANR	4815250	ArrayIndexing	bp [ i ]		4814934	1					
ANR	4815251	Identifier	bp		4814934	0					
ANR	4815252	Identifier	i		4814934	1					
ANR	4815253	ExpressionStatement	state = 11	5277:29:189699:189709	4814934	1	True				
ANR	4815254	AssignmentExpression	state = 11		4814934	0		=			
ANR	4815255	Identifier	state		4814934	0					
ANR	4815256	PrimaryExpression	11		4814934	1					
ANR	4815257	ElseStatement	else		4814934	0					
ANR	4815258	ExpressionStatement	state = 0	5278:29:189740:189750	4814934	0	True				
ANR	4815259	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815260	Identifier	state		4814934	0					
ANR	4815261	PrimaryExpression	0		4814934	1					
ANR	4815262	BreakStatement	break ;	5279:11:189763:189768	4814934	35	True				
ANR	4815263	Label	case 11 :	5280:11:189781:189788	4814934	36	True				
ANR	4815264	IfStatement	if ( 0 == bp [ i ] )		4814934	37					
ANR	4815265	Condition	0 == bp [ i ]	5281:17:189807:189816	4814934	0	True				
ANR	4815266	EqualityExpression	0 == bp [ i ]		4814934	0		==			
ANR	4815267	PrimaryExpression	0		4814934	0					
ANR	4815268	ArrayIndexing	bp [ i ]		4814934	1					
ANR	4815269	Identifier	bp		4814934	0					
ANR	4815270	Identifier	i		4814934	1					
ANR	4815271	ExpressionStatement	state = 12	5281:29:189819:189829	4814934	1	True				
ANR	4815272	AssignmentExpression	state = 12		4814934	0		=			
ANR	4815273	Identifier	state		4814934	0					
ANR	4815274	PrimaryExpression	12		4814934	1					
ANR	4815275	ElseStatement	else		4814934	0					
ANR	4815276	ExpressionStatement	state = 0	5282:29:189860:189870	4814934	0	True				
ANR	4815277	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815278	Identifier	state		4814934	0					
ANR	4815279	PrimaryExpression	0		4814934	1					
ANR	4815280	BreakStatement	break ;	5283:11:189883:189888	4814934	38	True				
ANR	4815281	Label	case 12 :	5284:11:189901:189909	4814934	39	True				
ANR	4815282	IfStatement	if ( B_TOPMARGIN & upd -> flags )		4814934	40					
ANR	4815283	Condition	B_TOPMARGIN & upd -> flags	5285:17:189928:189951	4814934	0	True				
ANR	4815284	BitAndExpression	B_TOPMARGIN & upd -> flags		4814934	0		&			
ANR	4815285	Identifier	B_TOPMARGIN		4814934	0					
ANR	4815286	PtrMemberAccess	upd -> flags		4814934	1					
ANR	4815287	Identifier	upd		4814934	0					
ANR	4815288	Identifier	flags		4814934	1					
ANR	4815289	CompoundStatement		70:43:2327:2327	4814934	1					
ANR	4815290	ExpressionStatement	value = ( int ) ( dev_t_margin ( udev ) * pixels_per_inch )	5286:17:189973:190025	4814934	0	True				
ANR	4815291	AssignmentExpression	value = ( int ) ( dev_t_margin ( udev ) * pixels_per_inch )		4814934	0		=			
ANR	4815292	Identifier	value		4814934	0					
ANR	4815293	CastExpression	( int ) ( dev_t_margin ( udev ) * pixels_per_inch )		4814934	1					
ANR	4815294	CastTarget	int		4814934	0					
ANR	4815295	MultiplicativeExpression	dev_t_margin ( udev ) * pixels_per_inch		4814934	1		*			
ANR	4815296	CallExpression	dev_t_margin ( udev )		4814934	0					
ANR	4815297	Callee	dev_t_margin		4814934	0					
ANR	4815298	Identifier	dev_t_margin		4814934	0					
ANR	4815299	ArgumentList	udev		4814934	1					
ANR	4815300	Argument	udev		4814934	0					
ANR	4815301	Identifier	udev		4814934	0					
ANR	4815302	Identifier	pixels_per_inch		4814934	1					
ANR	4815303	ExpressionStatement	bp [ i ] = value & 0xff	5287:17:190044:190069	4814934	1	True				
ANR	4815304	AssignmentExpression	bp [ i ] = value & 0xff		4814934	0		=			
ANR	4815305	ArrayIndexing	bp [ i ]		4814934	0					
ANR	4815306	Identifier	bp		4814934	0					
ANR	4815307	Identifier	i		4814934	1					
ANR	4815308	BitAndExpression	value & 0xff		4814934	1		&			
ANR	4815309	Identifier	value		4814934	0					
ANR	4815310	PrimaryExpression	0xff		4814934	1					
ANR	4815311	ExpressionStatement	state = 13	5289:14:190101:190111	4814934	41	True				
ANR	4815312	AssignmentExpression	state = 13		4814934	0		=			
ANR	4815313	Identifier	state		4814934	0					
ANR	4815314	PrimaryExpression	13		4814934	1					
ANR	4815315	BreakStatement	break ;	5290:11:190124:190129	4814934	42	True				
ANR	4815316	Label	case 13 :	5291:11:190142:190150	4814934	43	True				
ANR	4815317	IfStatement	if ( B_TOPMARGIN & upd -> flags )		4814934	44					
ANR	4815318	Condition	B_TOPMARGIN & upd -> flags	5292:17:190169:190192	4814934	0	True				
ANR	4815319	BitAndExpression	B_TOPMARGIN & upd -> flags		4814934	0		&			
ANR	4815320	Identifier	B_TOPMARGIN		4814934	0					
ANR	4815321	PtrMemberAccess	upd -> flags		4814934	1					
ANR	4815322	Identifier	upd		4814934	0					
ANR	4815323	Identifier	flags		4814934	1					
ANR	4815324	CompoundStatement		77:43:2568:2568	4814934	1					
ANR	4815325	ExpressionStatement	bp [ i ] = ( value >> 8 ) & 0xff	5293:17:190214:190239	4814934	0	True				
ANR	4815326	AssignmentExpression	bp [ i ] = ( value >> 8 ) & 0xff		4814934	0		=			
ANR	4815327	ArrayIndexing	bp [ i ]		4814934	0					
ANR	4815328	Identifier	bp		4814934	0					
ANR	4815329	Identifier	i		4814934	1					
ANR	4815330	BitAndExpression	( value >> 8 ) & 0xff		4814934	1		&			
ANR	4815331	ShiftExpression	value >> 8		4814934	0		>>			
ANR	4815332	Identifier	value		4814934	0					
ANR	4815333	PrimaryExpression	8		4814934	1					
ANR	4815334	PrimaryExpression	0xff		4814934	1					
ANR	4815335	ExpressionStatement	state = 14	5295:14:190271:190281	4814934	45	True				
ANR	4815336	AssignmentExpression	state = 14		4814934	0		=			
ANR	4815337	Identifier	state		4814934	0					
ANR	4815338	PrimaryExpression	14		4814934	1					
ANR	4815339	BreakStatement	break ;	5296:11:190294:190299	4814934	46	True				
ANR	4815340	Label	case 14 :	5297:11:190312:190320	4814934	47	True				
ANR	4815341	IfStatement	if ( B_BOTTOMMARGIN & upd -> flags )		4814934	48					
ANR	4815342	Condition	B_BOTTOMMARGIN & upd -> flags	5298:17:190339:190365	4814934	0	True				
ANR	4815343	BitAndExpression	B_BOTTOMMARGIN & upd -> flags		4814934	0		&			
ANR	4815344	Identifier	B_BOTTOMMARGIN		4814934	0					
ANR	4815345	PtrMemberAccess	upd -> flags		4814934	1					
ANR	4815346	Identifier	upd		4814934	0					
ANR	4815347	Identifier	flags		4814934	1					
ANR	4815348	CompoundStatement		83:46:2741:2741	4814934	1					
ANR	4815349	ExpressionStatement	value = ( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch )	5299:17:190387:190557	4814934	0	True				
ANR	4815350	AssignmentExpression	value = ( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch )		4814934	0		=			
ANR	4815351	Identifier	value		4814934	0					
ANR	4815352	CastExpression	( int ) ( 0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch )		4814934	1					
ANR	4815353	CastTarget	int		4814934	0					
ANR	4815354	AdditiveExpression	0.5 + udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch		4814934	1		+			
ANR	4815355	PrimaryExpression	0.5		4814934	0					
ANR	4815356	AdditiveExpression	udev -> height * pixels_per_inch / udev -> y_pixels_per_inch - dev_b_margin ( udev ) * pixels_per_inch		4814934	1		-			
ANR	4815357	MultiplicativeExpression	udev -> height * pixels_per_inch / udev -> y_pixels_per_inch		4814934	0		*			
ANR	4815358	PtrMemberAccess	udev -> height		4814934	0					
ANR	4815359	Identifier	udev		4814934	0					
ANR	4815360	Identifier	height		4814934	1					
ANR	4815361	MultiplicativeExpression	pixels_per_inch / udev -> y_pixels_per_inch		4814934	1		/			
ANR	4815362	Identifier	pixels_per_inch		4814934	0					
ANR	4815363	PtrMemberAccess	udev -> y_pixels_per_inch		4814934	1					
ANR	4815364	Identifier	udev		4814934	0					
ANR	4815365	Identifier	y_pixels_per_inch		4814934	1					
ANR	4815366	MultiplicativeExpression	dev_b_margin ( udev ) * pixels_per_inch		4814934	1		*			
ANR	4815367	CallExpression	dev_b_margin ( udev )		4814934	0					
ANR	4815368	Callee	dev_b_margin		4814934	0					
ANR	4815369	Identifier	dev_b_margin		4814934	0					
ANR	4815370	ArgumentList	udev		4814934	1					
ANR	4815371	Argument	udev		4814934	0					
ANR	4815372	Identifier	udev		4814934	0					
ANR	4815373	Identifier	pixels_per_inch		4814934	1					
ANR	4815374	ExpressionStatement	bp [ i ] = value & 0xff	5302:17:190576:190601	4814934	1	True				
ANR	4815375	AssignmentExpression	bp [ i ] = value & 0xff		4814934	0		=			
ANR	4815376	ArrayIndexing	bp [ i ]		4814934	0					
ANR	4815377	Identifier	bp		4814934	0					
ANR	4815378	Identifier	i		4814934	1					
ANR	4815379	BitAndExpression	value & 0xff		4814934	1		&			
ANR	4815380	Identifier	value		4814934	0					
ANR	4815381	PrimaryExpression	0xff		4814934	1					
ANR	4815382	ExpressionStatement	state = 15	5304:14:190633:190643	4814934	49	True				
ANR	4815383	AssignmentExpression	state = 15		4814934	0		=			
ANR	4815384	Identifier	state		4814934	0					
ANR	4815385	PrimaryExpression	15		4814934	1					
ANR	4815386	BreakStatement	break ;	5305:11:190656:190661	4814934	50	True				
ANR	4815387	Label	case 15 :	5306:11:190674:190682	4814934	51	True				
ANR	4815388	IfStatement	if ( B_BOTTOMMARGIN & upd -> flags )		4814934	52					
ANR	4815389	Condition	B_BOTTOMMARGIN & upd -> flags	5307:17:190701:190727	4814934	0	True				
ANR	4815390	BitAndExpression	B_BOTTOMMARGIN & upd -> flags		4814934	0		&			
ANR	4815391	Identifier	B_BOTTOMMARGIN		4814934	0					
ANR	4815392	PtrMemberAccess	upd -> flags		4814934	1					
ANR	4815393	Identifier	upd		4814934	0					
ANR	4815394	Identifier	flags		4814934	1					
ANR	4815395	CompoundStatement		92:46:3103:3103	4814934	1					
ANR	4815396	ExpressionStatement	bp [ i ] = ( value >> 8 ) & 0xff	5308:17:190749:190774	4814934	0	True				
ANR	4815397	AssignmentExpression	bp [ i ] = ( value >> 8 ) & 0xff		4814934	0		=			
ANR	4815398	ArrayIndexing	bp [ i ]		4814934	0					
ANR	4815399	Identifier	bp		4814934	0					
ANR	4815400	Identifier	i		4814934	1					
ANR	4815401	BitAndExpression	( value >> 8 ) & 0xff		4814934	1		&			
ANR	4815402	ShiftExpression	value >> 8		4814934	0		>>			
ANR	4815403	Identifier	value		4814934	0					
ANR	4815404	PrimaryExpression	8		4814934	1					
ANR	4815405	PrimaryExpression	0xff		4814934	1					
ANR	4815406	ExpressionStatement	state = 0	5310:14:190806:190816	4814934	53	True				
ANR	4815407	AssignmentExpression	state = 0		4814934	0		=			
ANR	4815408	Identifier	state		4814934	0					
ANR	4815409	PrimaryExpression	0		4814934	1					
ANR	4815410	BreakStatement	break ;	5311:11:190829:190834	4814934	54	True				
ANR	4815411	IfStatement	if ( 0 == upd -> strings [ S_YMOVE ] . size )		4814934	4					
ANR	4815412	Condition	0 == upd -> strings [ S_YMOVE ] . size	5317:6:190961:190991	4814934	0	True				
ANR	4815413	EqualityExpression	0 == upd -> strings [ S_YMOVE ] . size		4814934	0		==			
ANR	4815414	PrimaryExpression	0		4814934	0					
ANR	4815415	MemberAccess	upd -> strings [ S_YMOVE ] . size		4814934	1					
ANR	4815416	ArrayIndexing	upd -> strings [ S_YMOVE ]		4814934	0					
ANR	4815417	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815418	Identifier	upd		4814934	0					
ANR	4815419	Identifier	strings		4814934	1					
ANR	4815420	Identifier	S_YMOVE		4814934	1					
ANR	4815421	Identifier	size		4814934	1					
ANR	4815422	CompoundStatement		103:6:3375:3383	4814934	1					
ANR	4815423	IdentifierDeclStatement	byte * bp ;	5318:6:191002:191010	4814934	0	True				
ANR	4815424	IdentifierDecl	* bp		4814934	0					
ANR	4815425	IdentifierDeclType	byte *		4814934	0					
ANR	4815426	Identifier	bp		4814934	1					
ANR	4815427	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_YMOVE ] )"	5319:6:191018:191071	4814934	1	True				
ANR	4815428	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_YMOVE ] )"		4814934	0					
ANR	4815429	Callee	UPD_MM_DEL_PARAM		4814934	0					
ANR	4815430	Identifier	UPD_MM_DEL_PARAM		4814934	0					
ANR	4815431	ArgumentList	udev -> memory		4814934	1					
ANR	4815432	Argument	udev -> memory		4814934	0					
ANR	4815433	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4815434	Identifier	udev		4814934	0					
ANR	4815435	Identifier	memory		4814934	1					
ANR	4815436	Argument	upd -> strings [ S_YMOVE ]		4814934	1					
ANR	4815437	ArrayIndexing	upd -> strings [ S_YMOVE ]		4814934	0					
ANR	4815438	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815439	Identifier	upd		4814934	0					
ANR	4815440	Identifier	strings		4814934	1					
ANR	4815441	Identifier	S_YMOVE		4814934	1					
ANR	4815442	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 5 )"	5320:6:191079:191115	4814934	2	True				
ANR	4815443	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 5 )"		4814934	0					
ANR	4815444	Callee	UPD_MM_GET_ARRAY		4814934	0					
ANR	4815445	Identifier	UPD_MM_GET_ARRAY		4814934	0					
ANR	4815446	ArgumentList	udev -> memory		4814934	1					
ANR	4815447	Argument	udev -> memory		4814934	0					
ANR	4815448	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4815449	Identifier	udev		4814934	0					
ANR	4815450	Identifier	memory		4814934	1					
ANR	4815451	Argument	bp		4814934	1					
ANR	4815452	Identifier	bp		4814934	0					
ANR	4815453	Argument	5		4814934	2					
ANR	4815454	PrimaryExpression	5		4814934	0					
ANR	4815455	ExpressionStatement	upd -> strings [ S_YMOVE ] . data = bp	5321:6:191123:191154	4814934	3	True				
ANR	4815456	AssignmentExpression	upd -> strings [ S_YMOVE ] . data = bp		4814934	0		=			
ANR	4815457	MemberAccess	upd -> strings [ S_YMOVE ] . data		4814934	0					
ANR	4815458	ArrayIndexing	upd -> strings [ S_YMOVE ]		4814934	0					
ANR	4815459	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815460	Identifier	upd		4814934	0					
ANR	4815461	Identifier	strings		4814934	1					
ANR	4815462	Identifier	S_YMOVE		4814934	1					
ANR	4815463	Identifier	data		4814934	1					
ANR	4815464	Identifier	bp		4814934	1					
ANR	4815465	ExpressionStatement	upd -> strings [ S_YMOVE ] . size = 5	5322:6:191162:191192	4814934	4	True				
ANR	4815466	AssignmentExpression	upd -> strings [ S_YMOVE ] . size = 5		4814934	0		=			
ANR	4815467	MemberAccess	upd -> strings [ S_YMOVE ] . size		4814934	0					
ANR	4815468	ArrayIndexing	upd -> strings [ S_YMOVE ]		4814934	0					
ANR	4815469	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815470	Identifier	upd		4814934	0					
ANR	4815471	Identifier	strings		4814934	1					
ANR	4815472	Identifier	S_YMOVE		4814934	1					
ANR	4815473	Identifier	size		4814934	1					
ANR	4815474	PrimaryExpression	5		4814934	1					
ANR	4815475	ExpressionStatement	* bp ++ = 0x1b	5323:6:191200:191212	4814934	5	True				
ANR	4815476	AssignmentExpression	* bp ++ = 0x1b		4814934	0		=			
ANR	4815477	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815478	UnaryOperator	*		4814934	0					
ANR	4815479	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815480	Identifier	bp		4814934	0					
ANR	4815481	IncDec	++		4814934	1					
ANR	4815482	PrimaryExpression	0x1b		4814934	1					
ANR	4815483	ExpressionStatement	* bp ++ = '('	5324:6:191230:191241	4814934	6	True				
ANR	4815484	AssignmentExpression	* bp ++ = '('		4814934	0		=			
ANR	4815485	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815486	UnaryOperator	*		4814934	0					
ANR	4815487	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815488	Identifier	bp		4814934	0					
ANR	4815489	IncDec	++		4814934	1					
ANR	4815490	PrimaryExpression	'('		4814934	1					
ANR	4815491	ExpressionStatement	* bp ++ = upd -> flags & B_YABS ? 'V' : 'v'	5325:6:191249:191288	4814934	7	True				
ANR	4815492	AssignmentExpression	* bp ++ = upd -> flags & B_YABS ? 'V' : 'v'		4814934	0		=			
ANR	4815493	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815494	UnaryOperator	*		4814934	0					
ANR	4815495	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815496	Identifier	bp		4814934	0					
ANR	4815497	IncDec	++		4814934	1					
ANR	4815498	ConditionalExpression	upd -> flags & B_YABS ? 'V' : 'v'		4814934	1					
ANR	4815499	Condition	upd -> flags & B_YABS		4814934	0					
ANR	4815500	BitAndExpression	upd -> flags & B_YABS		4814934	0		&			
ANR	4815501	PtrMemberAccess	upd -> flags		4814934	0					
ANR	4815502	Identifier	upd		4814934	0					
ANR	4815503	Identifier	flags		4814934	1					
ANR	4815504	Identifier	B_YABS		4814934	1					
ANR	4815505	PrimaryExpression	'V'		4814934	1					
ANR	4815506	PrimaryExpression	'v'		4814934	2					
ANR	4815507	ExpressionStatement	* bp ++ = 2	5326:6:191296:191306	4814934	8	True				
ANR	4815508	AssignmentExpression	* bp ++ = 2		4814934	0		=			
ANR	4815509	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815510	UnaryOperator	*		4814934	0					
ANR	4815511	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815512	Identifier	bp		4814934	0					
ANR	4815513	IncDec	++		4814934	1					
ANR	4815514	PrimaryExpression	2		4814934	1					
ANR	4815515	ExpressionStatement	* bp ++ = 0	5327:6:191314:191324	4814934	9	True				
ANR	4815516	AssignmentExpression	* bp ++ = 0		4814934	0		=			
ANR	4815517	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815518	UnaryOperator	*		4814934	0					
ANR	4815519	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815520	Identifier	bp		4814934	0					
ANR	4815521	IncDec	++		4814934	1					
ANR	4815522	PrimaryExpression	0		4814934	1					
ANR	4815523	IfStatement	if ( ( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) )		4814934	5					
ANR	4815524	Condition	( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size )	5331:6:191386:191446	4814934	0	True				
ANR	4815525	AndExpression	( 1 < upd -> ints [ I_XSTEP ] ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		4814934	0		&&			
ANR	4815526	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		4814934	0		<			
ANR	4815527	PrimaryExpression	1		4814934	0					
ANR	4815528	ArrayIndexing	upd -> ints [ I_XSTEP ]		4814934	1					
ANR	4815529	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815530	Identifier	upd		4814934	0					
ANR	4815531	Identifier	ints		4814934	1					
ANR	4815532	Identifier	I_XSTEP		4814934	1					
ANR	4815533	EqualityExpression	0 == upd -> strings [ S_XSTEP ] . size		4814934	1		==			
ANR	4815534	PrimaryExpression	0		4814934	0					
ANR	4815535	MemberAccess	upd -> strings [ S_XSTEP ] . size		4814934	1					
ANR	4815536	ArrayIndexing	upd -> strings [ S_XSTEP ]		4814934	0					
ANR	4815537	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815538	Identifier	upd		4814934	0					
ANR	4815539	Identifier	strings		4814934	1					
ANR	4815540	Identifier	S_XSTEP		4814934	1					
ANR	4815541	Identifier	size		4814934	1					
ANR	4815542	CompoundStatement		116:69:3822:3822	4814934	1					
ANR	4815543	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: XSTEP-Command required for XSTEP=%d\\n"" , upd -> ints [ I_XSTEP ] )"	5334:6:191491:191606	4814934	0	True				
ANR	4815544	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: XSTEP-Command required for XSTEP=%d\\n"" , upd -> ints [ I_XSTEP ] )"		4814934	0					
ANR	4815545	Callee	errprintf		4814934	0					
ANR	4815546	Identifier	errprintf		4814934	0					
ANR	4815547	ArgumentList	udev -> memory		4814934	1					
ANR	4815548	Argument	udev -> memory		4814934	0					
ANR	4815549	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4815550	Identifier	udev		4814934	0					
ANR	4815551	Identifier	memory		4814934	1					
ANR	4815552	Argument	"""ESC/P2-Open: XSTEP-Command required for XSTEP=%d\\n"""		4814934	1					
ANR	4815553	PrimaryExpression	"""ESC/P2-Open: XSTEP-Command required for XSTEP=%d\\n"""		4814934	0					
ANR	4815554	Argument	upd -> ints [ I_XSTEP ]		4814934	2					
ANR	4815555	ArrayIndexing	upd -> ints [ I_XSTEP ]		4814934	0					
ANR	4815556	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815557	Identifier	upd		4814934	0					
ANR	4815558	Identifier	ints		4814934	1					
ANR	4815559	Identifier	I_XSTEP		4814934	1					
ANR	4815560	ExpressionStatement	error = - 1	5338:6:191621:191631	4814934	1	True				
ANR	4815561	AssignmentExpression	error = - 1		4814934	0		=			
ANR	4815562	Identifier	error		4814934	0					
ANR	4815563	UnaryOperationExpression	- 1		4814934	1					
ANR	4815564	UnaryOperator	-		4814934	0					
ANR	4815565	PrimaryExpression	1		4814934	1					
ANR	4815566	ElseStatement	else		4814934	0					
ANR	4815567	IfStatement	if ( ( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size ) )		4814934	0					
ANR	4815568	Condition	( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )	5340:13:191647:191779	4814934	0	True				
ANR	4815569	AndExpression	( 1 < upd -> ints [ I_NXPASS ] ) && ( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		4814934	0		&&			
ANR	4815570	RelationalExpression	1 < upd -> ints [ I_NXPASS ]		4814934	0		<			
ANR	4815571	PrimaryExpression	1		4814934	0					
ANR	4815572	ArrayIndexing	upd -> ints [ I_NXPASS ]		4814934	1					
ANR	4815573	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815574	Identifier	upd		4814934	0					
ANR	4815575	Identifier	ints		4814934	1					
ANR	4815576	Identifier	I_NXPASS		4814934	1					
ANR	4815577	AndExpression	( 0 == upd -> strings [ S_XMOVE ] . size ) && ( 0 == upd -> strings [ S_XSTEP ] . size )		4814934	1		&&			
ANR	4815578	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4814934	0		==			
ANR	4815579	PrimaryExpression	0		4814934	0					
ANR	4815580	MemberAccess	upd -> strings [ S_XMOVE ] . size		4814934	1					
ANR	4815581	ArrayIndexing	upd -> strings [ S_XMOVE ]		4814934	0					
ANR	4815582	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815583	Identifier	upd		4814934	0					
ANR	4815584	Identifier	strings		4814934	1					
ANR	4815585	Identifier	S_XMOVE		4814934	1					
ANR	4815586	Identifier	size		4814934	1					
ANR	4815587	EqualityExpression	0 == upd -> strings [ S_XSTEP ] . size		4814934	1		==			
ANR	4815588	PrimaryExpression	0		4814934	0					
ANR	4815589	MemberAccess	upd -> strings [ S_XSTEP ] . size		4814934	1					
ANR	4815590	ArrayIndexing	upd -> strings [ S_XSTEP ]		4814934	0					
ANR	4815591	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815592	Identifier	upd		4814934	0					
ANR	4815593	Identifier	strings		4814934	1					
ANR	4815594	Identifier	S_XSTEP		4814934	1					
ANR	4815595	Identifier	size		4814934	1					
ANR	4815596	CompoundStatement		129:6:4182:4191	4814934	1					
ANR	4815597	IdentifierDeclStatement	byte * bp ;	5343:6:191793:191801	4814934	0	True				
ANR	4815598	IdentifierDecl	* bp		4814934	0					
ANR	4815599	IdentifierDeclType	byte *		4814934	0					
ANR	4815600	Identifier	bp		4814934	1					
ANR	4815601	IdentifierDeclStatement	int ratio ;	5344:6:191809:191818	4814934	1	True				
ANR	4815602	IdentifierDecl	ratio		4814934	0					
ANR	4815603	IdentifierDeclType	int		4814934	0					
ANR	4815604	Identifier	ratio		4814934	1					
ANR	4815605	ExpressionStatement	ratio = ( int ) ( ( udev -> y_pixels_per_inch + 0.5 ) / udev -> x_pixels_per_inch )	5346:6:191827:191899	4814934	2	True				
ANR	4815606	AssignmentExpression	ratio = ( int ) ( ( udev -> y_pixels_per_inch + 0.5 ) / udev -> x_pixels_per_inch )		4814934	0		=			
ANR	4815607	Identifier	ratio		4814934	0					
ANR	4815608	CastExpression	( int ) ( ( udev -> y_pixels_per_inch + 0.5 ) / udev -> x_pixels_per_inch )		4814934	1					
ANR	4815609	CastTarget	int		4814934	0					
ANR	4815610	MultiplicativeExpression	( udev -> y_pixels_per_inch + 0.5 ) / udev -> x_pixels_per_inch		4814934	1		/			
ANR	4815611	AdditiveExpression	udev -> y_pixels_per_inch + 0.5		4814934	0		+			
ANR	4815612	PtrMemberAccess	udev -> y_pixels_per_inch		4814934	0					
ANR	4815613	Identifier	udev		4814934	0					
ANR	4815614	Identifier	y_pixels_per_inch		4814934	1					
ANR	4815615	PrimaryExpression	0.5		4814934	1					
ANR	4815616	PtrMemberAccess	udev -> x_pixels_per_inch		4814934	1					
ANR	4815617	Identifier	udev		4814934	0					
ANR	4815618	Identifier	x_pixels_per_inch		4814934	1					
ANR	4815619	IfStatement	if ( 0 == upd -> ints [ I_XSTEP ] )		4814934	3					
ANR	4815620	Condition	0 == upd -> ints [ I_XSTEP ]	5348:9:191911:191933	4814934	0	True				
ANR	4815621	EqualityExpression	0 == upd -> ints [ I_XSTEP ]		4814934	0		==			
ANR	4815622	PrimaryExpression	0		4814934	0					
ANR	4815623	ArrayIndexing	upd -> ints [ I_XSTEP ]		4814934	1					
ANR	4815624	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815625	Identifier	upd		4814934	0					
ANR	4815626	Identifier	ints		4814934	1					
ANR	4815627	Identifier	I_XSTEP		4814934	1					
ANR	4815628	CompoundStatement		133:34:4309:4309	4814934	1					
ANR	4815629	IfStatement	if ( ratio > 1 )		4814934	0					
ANR	4815630	Condition	ratio > 1	5349:12:191981:191989	4814934	0	True				
ANR	4815631	RelationalExpression	ratio > 1		4814934	0		>			
ANR	4815632	Identifier	ratio		4814934	0					
ANR	4815633	PrimaryExpression	1		4814934	1					
ANR	4815634	ExpressionStatement	upd -> ints [ I_XSTEP ] = - ratio	5349:23:191992:192019	4814934	1	True				
ANR	4815635	AssignmentExpression	upd -> ints [ I_XSTEP ] = - ratio		4814934	0		=			
ANR	4815636	ArrayIndexing	upd -> ints [ I_XSTEP ]		4814934	0					
ANR	4815637	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815638	Identifier	upd		4814934	0					
ANR	4815639	Identifier	ints		4814934	1					
ANR	4815640	Identifier	I_XSTEP		4814934	1					
ANR	4815641	UnaryOperationExpression	- ratio		4814934	1					
ANR	4815642	UnaryOperator	-		4814934	0					
ANR	4815643	Identifier	ratio		4814934	1					
ANR	4815644	ElseStatement	else		4814934	0					
ANR	4815645	CompoundStatement		135:13:4407:4407	4814934	0					
ANR	4815646	ExpressionStatement	ratio = - upd -> ints [ I_XSTEP ]	5351:9:192096:192123	4814934	0	True				
ANR	4815647	AssignmentExpression	ratio = - upd -> ints [ I_XSTEP ]		4814934	0		=			
ANR	4815648	Identifier	ratio		4814934	0					
ANR	4815649	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		4814934	1					
ANR	4815650	UnaryOperator	-		4814934	0					
ANR	4815651	ArrayIndexing	upd -> ints [ I_XSTEP ]		4814934	1					
ANR	4815652	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815653	Identifier	upd		4814934	0					
ANR	4815654	Identifier	ints		4814934	1					
ANR	4815655	Identifier	I_XSTEP		4814934	1					
ANR	4815656	IfStatement	if ( 2 == upd -> ints [ I_NXPASS ] )		4814934	4					
ANR	4815657	Condition	2 == upd -> ints [ I_NXPASS ]	5354:9:192143:192166	4814934	0	True				
ANR	4815658	EqualityExpression	2 == upd -> ints [ I_NXPASS ]		4814934	0		==			
ANR	4815659	PrimaryExpression	2		4814934	0					
ANR	4815660	ArrayIndexing	upd -> ints [ I_NXPASS ]		4814934	1					
ANR	4815661	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815662	Identifier	upd		4814934	0					
ANR	4815663	Identifier	ints		4814934	1					
ANR	4815664	Identifier	I_NXPASS		4814934	1					
ANR	4815665	CompoundStatement		139:35:4542:4542	4814934	1					
ANR	4815666	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_XSTEP ] )"	5356:9:192207:192260	4814934	0	True				
ANR	4815667	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_XSTEP ] )"		4814934	0					
ANR	4815668	Callee	UPD_MM_DEL_PARAM		4814934	0					
ANR	4815669	Identifier	UPD_MM_DEL_PARAM		4814934	0					
ANR	4815670	ArgumentList	udev -> memory		4814934	1					
ANR	4815671	Argument	udev -> memory		4814934	0					
ANR	4815672	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4815673	Identifier	udev		4814934	0					
ANR	4815674	Identifier	memory		4814934	1					
ANR	4815675	Argument	upd -> strings [ S_XSTEP ]		4814934	1					
ANR	4815676	ArrayIndexing	upd -> strings [ S_XSTEP ]		4814934	0					
ANR	4815677	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815678	Identifier	upd		4814934	0					
ANR	4815679	Identifier	strings		4814934	1					
ANR	4815680	Identifier	S_XSTEP		4814934	1					
ANR	4815681	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 4 )"	5357:9:192271:192307	4814934	1	True				
ANR	4815682	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 4 )"		4814934	0					
ANR	4815683	Callee	UPD_MM_GET_ARRAY		4814934	0					
ANR	4815684	Identifier	UPD_MM_GET_ARRAY		4814934	0					
ANR	4815685	ArgumentList	udev -> memory		4814934	1					
ANR	4815686	Argument	udev -> memory		4814934	0					
ANR	4815687	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4815688	Identifier	udev		4814934	0					
ANR	4815689	Identifier	memory		4814934	1					
ANR	4815690	Argument	bp		4814934	1					
ANR	4815691	Identifier	bp		4814934	0					
ANR	4815692	Argument	4		4814934	2					
ANR	4815693	PrimaryExpression	4		4814934	0					
ANR	4815694	ExpressionStatement	upd -> strings [ S_XSTEP ] . size = 4	5358:9:192318:192348	4814934	2	True				
ANR	4815695	AssignmentExpression	upd -> strings [ S_XSTEP ] . size = 4		4814934	0		=			
ANR	4815696	MemberAccess	upd -> strings [ S_XSTEP ] . size		4814934	0					
ANR	4815697	ArrayIndexing	upd -> strings [ S_XSTEP ]		4814934	0					
ANR	4815698	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815699	Identifier	upd		4814934	0					
ANR	4815700	Identifier	strings		4814934	1					
ANR	4815701	Identifier	S_XSTEP		4814934	1					
ANR	4815702	Identifier	size		4814934	1					
ANR	4815703	PrimaryExpression	4		4814934	1					
ANR	4815704	ExpressionStatement	upd -> strings [ S_XSTEP ] . data = bp	5359:9:192359:192390	4814934	3	True				
ANR	4815705	AssignmentExpression	upd -> strings [ S_XSTEP ] . data = bp		4814934	0		=			
ANR	4815706	MemberAccess	upd -> strings [ S_XSTEP ] . data		4814934	0					
ANR	4815707	ArrayIndexing	upd -> strings [ S_XSTEP ]		4814934	0					
ANR	4815708	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815709	Identifier	upd		4814934	0					
ANR	4815710	Identifier	strings		4814934	1					
ANR	4815711	Identifier	S_XSTEP		4814934	1					
ANR	4815712	Identifier	data		4814934	1					
ANR	4815713	Identifier	bp		4814934	1					
ANR	4815714	ExpressionStatement	* bp ++ = 0x1b	5360:9:192401:192413	4814934	4	True				
ANR	4815715	AssignmentExpression	* bp ++ = 0x1b		4814934	0		=			
ANR	4815716	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815717	UnaryOperator	*		4814934	0					
ANR	4815718	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815719	Identifier	bp		4814934	0					
ANR	4815720	IncDec	++		4814934	1					
ANR	4815721	PrimaryExpression	0x1b		4814934	1					
ANR	4815722	ExpressionStatement	* bp ++ = '\\\\'	5361:9:192424:192436	4814934	5	True				
ANR	4815723	AssignmentExpression	* bp ++ = '\\\\'		4814934	0		=			
ANR	4815724	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815725	UnaryOperator	*		4814934	0					
ANR	4815726	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815727	Identifier	bp		4814934	0					
ANR	4815728	IncDec	++		4814934	1					
ANR	4815729	PrimaryExpression	'\\\\'		4814934	1					
ANR	4815730	ExpressionStatement	* bp ++ = ratio & 0xff	5362:9:192447:192472	4814934	6	True				
ANR	4815731	AssignmentExpression	* bp ++ = ratio & 0xff		4814934	0		=			
ANR	4815732	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815733	UnaryOperator	*		4814934	0					
ANR	4815734	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815735	Identifier	bp		4814934	0					
ANR	4815736	IncDec	++		4814934	1					
ANR	4815737	BitAndExpression	ratio & 0xff		4814934	1		&			
ANR	4815738	Identifier	ratio		4814934	0					
ANR	4815739	PrimaryExpression	0xff		4814934	1					
ANR	4815740	ExpressionStatement	* bp ++ = ( ratio >> 8 ) & 0xff	5363:9:192483:192508	4814934	7	True				
ANR	4815741	AssignmentExpression	* bp ++ = ( ratio >> 8 ) & 0xff		4814934	0		=			
ANR	4815742	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815743	UnaryOperator	*		4814934	0					
ANR	4815744	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815745	Identifier	bp		4814934	0					
ANR	4815746	IncDec	++		4814934	1					
ANR	4815747	BitAndExpression	( ratio >> 8 ) & 0xff		4814934	1		&			
ANR	4815748	ShiftExpression	ratio >> 8		4814934	0		>>			
ANR	4815749	Identifier	ratio		4814934	0					
ANR	4815750	PrimaryExpression	8		4814934	1					
ANR	4815751	PrimaryExpression	0xff		4814934	1					
ANR	4815752	ElseStatement	else		4814934	0					
ANR	4815753	CompoundStatement		150:13:4897:4897	4814934	0					
ANR	4815754	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_XMOVE ] )"	5367:9:192593:192646	4814934	0	True				
ANR	4815755	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_XMOVE ] )"		4814934	0					
ANR	4815756	Callee	UPD_MM_DEL_PARAM		4814934	0					
ANR	4815757	Identifier	UPD_MM_DEL_PARAM		4814934	0					
ANR	4815758	ArgumentList	udev -> memory		4814934	1					
ANR	4815759	Argument	udev -> memory		4814934	0					
ANR	4815760	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4815761	Identifier	udev		4814934	0					
ANR	4815762	Identifier	memory		4814934	1					
ANR	4815763	Argument	upd -> strings [ S_XMOVE ]		4814934	1					
ANR	4815764	ArrayIndexing	upd -> strings [ S_XMOVE ]		4814934	0					
ANR	4815765	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815766	Identifier	upd		4814934	0					
ANR	4815767	Identifier	strings		4814934	1					
ANR	4815768	Identifier	S_XMOVE		4814934	1					
ANR	4815769	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 2 )"	5368:9:192657:192693	4814934	1	True				
ANR	4815770	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 2 )"		4814934	0					
ANR	4815771	Callee	UPD_MM_GET_ARRAY		4814934	0					
ANR	4815772	Identifier	UPD_MM_GET_ARRAY		4814934	0					
ANR	4815773	ArgumentList	udev -> memory		4814934	1					
ANR	4815774	Argument	udev -> memory		4814934	0					
ANR	4815775	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4815776	Identifier	udev		4814934	0					
ANR	4815777	Identifier	memory		4814934	1					
ANR	4815778	Argument	bp		4814934	1					
ANR	4815779	Identifier	bp		4814934	0					
ANR	4815780	Argument	2		4814934	2					
ANR	4815781	PrimaryExpression	2		4814934	0					
ANR	4815782	ExpressionStatement	upd -> strings [ S_XMOVE ] . size = 2	5369:9:192704:192734	4814934	2	True				
ANR	4815783	AssignmentExpression	upd -> strings [ S_XMOVE ] . size = 2		4814934	0		=			
ANR	4815784	MemberAccess	upd -> strings [ S_XMOVE ] . size		4814934	0					
ANR	4815785	ArrayIndexing	upd -> strings [ S_XMOVE ]		4814934	0					
ANR	4815786	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815787	Identifier	upd		4814934	0					
ANR	4815788	Identifier	strings		4814934	1					
ANR	4815789	Identifier	S_XMOVE		4814934	1					
ANR	4815790	Identifier	size		4814934	1					
ANR	4815791	PrimaryExpression	2		4814934	1					
ANR	4815792	ExpressionStatement	upd -> strings [ S_XMOVE ] . data = bp	5370:9:192745:192776	4814934	3	True				
ANR	4815793	AssignmentExpression	upd -> strings [ S_XMOVE ] . data = bp		4814934	0		=			
ANR	4815794	MemberAccess	upd -> strings [ S_XMOVE ] . data		4814934	0					
ANR	4815795	ArrayIndexing	upd -> strings [ S_XMOVE ]		4814934	0					
ANR	4815796	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4815797	Identifier	upd		4814934	0					
ANR	4815798	Identifier	strings		4814934	1					
ANR	4815799	Identifier	S_XMOVE		4814934	1					
ANR	4815800	Identifier	data		4814934	1					
ANR	4815801	Identifier	bp		4814934	1					
ANR	4815802	ExpressionStatement	* bp ++ = 0x1b	5371:9:192787:192800	4814934	4	True				
ANR	4815803	AssignmentExpression	* bp ++ = 0x1b		4814934	0		=			
ANR	4815804	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815805	UnaryOperator	*		4814934	0					
ANR	4815806	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815807	Identifier	bp		4814934	0					
ANR	4815808	IncDec	++		4814934	1					
ANR	4815809	PrimaryExpression	0x1b		4814934	1					
ANR	4815810	ExpressionStatement	* bp ++ = upd -> flags & B_XABS ? '$' : '\\\\'	5372:9:192811:192852	4814934	5	True				
ANR	4815811	AssignmentExpression	* bp ++ = upd -> flags & B_XABS ? '$' : '\\\\'		4814934	0		=			
ANR	4815812	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815813	UnaryOperator	*		4814934	0					
ANR	4815814	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815815	Identifier	bp		4814934	0					
ANR	4815816	IncDec	++		4814934	1					
ANR	4815817	ConditionalExpression	upd -> flags & B_XABS ? '$' : '\\\\'		4814934	1					
ANR	4815818	Condition	upd -> flags & B_XABS		4814934	0					
ANR	4815819	BitAndExpression	upd -> flags & B_XABS		4814934	0		&			
ANR	4815820	PtrMemberAccess	upd -> flags		4814934	0					
ANR	4815821	Identifier	upd		4814934	0					
ANR	4815822	Identifier	flags		4814934	1					
ANR	4815823	Identifier	B_XABS		4814934	1					
ANR	4815824	PrimaryExpression	'$'		4814934	1					
ANR	4815825	PrimaryExpression	'\\\\'		4814934	2					
ANR	4815826	SwitchStatement	switch ( upd -> choice [ C_FORMAT ] )		4814934	6					
ANR	4815827	Condition	upd -> choice [ C_FORMAT ]	5379:10:193010:193030	4814934	0	True				
ANR	4815828	ArrayIndexing	upd -> choice [ C_FORMAT ]		4814934	0					
ANR	4815829	PtrMemberAccess	upd -> choice		4814934	0					
ANR	4815830	Identifier	upd		4814934	0					
ANR	4815831	Identifier	choice		4814934	1					
ANR	4815832	Identifier	C_FORMAT		4814934	1					
ANR	4815833	CompoundStatement		164:32:5405:5405	4814934	1					
ANR	4815834	Label	case FMT_ESCNMY :	5380:6:193040:193055	4814934	0	True				
ANR	4815835	Identifier	FMT_ESCNMY		4814934	0					
ANR	4815836	IfStatement	if ( 0 == upd -> ints [ I_ROWS ] )		4814934	1					
ANR	4815837	Condition	0 == upd -> ints [ I_ROWS ]	5382:13:193097:193118	4814934	0	True				
ANR	4815838	EqualityExpression	0 == upd -> ints [ I_ROWS ]		4814934	0		==			
ANR	4815839	PrimaryExpression	0		4814934	0					
ANR	4815840	ArrayIndexing	upd -> ints [ I_ROWS ]		4814934	1					
ANR	4815841	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815842	Identifier	upd		4814934	0					
ANR	4815843	Identifier	ints		4814934	1					
ANR	4815844	Identifier	I_ROWS		4814934	1					
ANR	4815845	CompoundStatement		167:37:5494:5494	4814934	1					
ANR	4815846	ExpressionStatement	upd -> ints [ I_ROWS ] = 1	5383:12:193135:193156	4814934	0	True				
ANR	4815847	AssignmentExpression	upd -> ints [ I_ROWS ] = 1		4814934	0		=			
ANR	4815848	ArrayIndexing	upd -> ints [ I_ROWS ]		4814934	0					
ANR	4815849	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815850	Identifier	upd		4814934	0					
ANR	4815851	Identifier	ints		4814934	1					
ANR	4815852	Identifier	I_ROWS		4814934	1					
ANR	4815853	PrimaryExpression	1		4814934	1					
ANR	4815854	IfStatement	if ( 0 == upd -> ints [ I_PATRPT ] )		4814934	2					
ANR	4815855	Condition	0 == upd -> ints [ I_PATRPT ]	5386:13:193211:193234	4814934	0	True				
ANR	4815856	EqualityExpression	0 == upd -> ints [ I_PATRPT ]		4814934	0		==			
ANR	4815857	PrimaryExpression	0		4814934	0					
ANR	4815858	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	1					
ANR	4815859	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815860	Identifier	upd		4814934	0					
ANR	4815861	Identifier	ints		4814934	1					
ANR	4815862	Identifier	I_PATRPT		4814934	1					
ANR	4815863	CompoundStatement		171:39:5610:5610	4814934	1					
ANR	4815864	ExpressionStatement	upd -> ints [ I_PATRPT ] = 1	5387:12:193251:193274	4814934	0	True				
ANR	4815865	AssignmentExpression	upd -> ints [ I_PATRPT ] = 1		4814934	0		=			
ANR	4815866	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	0					
ANR	4815867	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815868	Identifier	upd		4814934	0					
ANR	4815869	Identifier	ints		4814934	1					
ANR	4815870	Identifier	I_PATRPT		4814934	1					
ANR	4815871	PrimaryExpression	1		4814934	1					
ANR	4815872	IfStatement	if ( upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_ROWMASK ] . size )		4814934	3					
ANR	4815873	Condition	upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_ROWMASK ] . size	5390:13:193344:193393	4814934	0	True				
ANR	4815874	EqualityExpression	upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_ROWMASK ] . size		4814934	0		!=			
ANR	4815875	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	0					
ANR	4815876	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815877	Identifier	upd		4814934	0					
ANR	4815878	Identifier	ints		4814934	1					
ANR	4815879	Identifier	I_PATRPT		4814934	1					
ANR	4815880	MemberAccess	upd -> int_a [ IA_ROWMASK ] . size		4814934	1					
ANR	4815881	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		4814934	0					
ANR	4815882	PtrMemberAccess	upd -> int_a		4814934	0					
ANR	4815883	Identifier	upd		4814934	0					
ANR	4815884	Identifier	int_a		4814934	1					
ANR	4815885	Identifier	IA_ROWMASK		4814934	1					
ANR	4815886	Identifier	size		4814934	1					
ANR	4815887	CompoundStatement		176:12:5784:5794	4814934	1					
ANR	4815888	IdentifierDeclStatement	"int i , * bp ;"	5391:12:193411:193421	4814934	0	True				
ANR	4815889	IdentifierDecl	i		4814934	0					
ANR	4815890	IdentifierDeclType	int		4814934	0					
ANR	4815891	Identifier	i		4814934	1					
ANR	4815892	IdentifierDecl	* bp		4814934	1					
ANR	4815893	IdentifierDeclType	int *		4814934	0					
ANR	4815894	Identifier	bp		4814934	1					
ANR	4815895	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_ROWMASK ] )"	5392:12:193435:193489	4814934	1	True				
ANR	4815896	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_ROWMASK ] )"		4814934	0					
ANR	4815897	Callee	UPD_MM_DEL_PARAM		4814934	0					
ANR	4815898	Identifier	UPD_MM_DEL_PARAM		4814934	0					
ANR	4815899	ArgumentList	udev -> memory		4814934	1					
ANR	4815900	Argument	udev -> memory		4814934	0					
ANR	4815901	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4815902	Identifier	udev		4814934	0					
ANR	4815903	Identifier	memory		4814934	1					
ANR	4815904	Argument	upd -> int_a [ IA_ROWMASK ]		4814934	1					
ANR	4815905	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		4814934	0					
ANR	4815906	PtrMemberAccess	upd -> int_a		4814934	0					
ANR	4815907	Identifier	upd		4814934	0					
ANR	4815908	Identifier	int_a		4814934	1					
ANR	4815909	Identifier	IA_ROWMASK		4814934	1					
ANR	4815910	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , upd -> ints [ I_PATRPT ] )"	5393:12:193503:193557	4814934	2	True				
ANR	4815911	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , upd -> ints [ I_PATRPT ] )"		4814934	0					
ANR	4815912	Callee	UPD_MM_GET_ARRAY		4814934	0					
ANR	4815913	Identifier	UPD_MM_GET_ARRAY		4814934	0					
ANR	4815914	ArgumentList	udev -> memory		4814934	1					
ANR	4815915	Argument	udev -> memory		4814934	0					
ANR	4815916	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4815917	Identifier	udev		4814934	0					
ANR	4815918	Identifier	memory		4814934	1					
ANR	4815919	Argument	bp		4814934	1					
ANR	4815920	Identifier	bp		4814934	0					
ANR	4815921	Argument	upd -> ints [ I_PATRPT ]		4814934	2					
ANR	4815922	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	0					
ANR	4815923	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815924	Identifier	upd		4814934	0					
ANR	4815925	Identifier	ints		4814934	1					
ANR	4815926	Identifier	I_PATRPT		4814934	1					
ANR	4815927	ExpressionStatement	upd -> int_a [ IA_ROWMASK ] . size = upd -> ints [ I_PATRPT ]	5394:12:193571:193620	4814934	3	True				
ANR	4815928	AssignmentExpression	upd -> int_a [ IA_ROWMASK ] . size = upd -> ints [ I_PATRPT ]		4814934	0		=			
ANR	4815929	MemberAccess	upd -> int_a [ IA_ROWMASK ] . size		4814934	0					
ANR	4815930	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		4814934	0					
ANR	4815931	PtrMemberAccess	upd -> int_a		4814934	0					
ANR	4815932	Identifier	upd		4814934	0					
ANR	4815933	Identifier	int_a		4814934	1					
ANR	4815934	Identifier	IA_ROWMASK		4814934	1					
ANR	4815935	Identifier	size		4814934	1					
ANR	4815936	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	1					
ANR	4815937	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815938	Identifier	upd		4814934	0					
ANR	4815939	Identifier	ints		4814934	1					
ANR	4815940	Identifier	I_PATRPT		4814934	1					
ANR	4815941	ExpressionStatement	upd -> int_a [ IA_ROWMASK ] . data = bp	5395:12:193634:193666	4814934	4	True				
ANR	4815942	AssignmentExpression	upd -> int_a [ IA_ROWMASK ] . data = bp		4814934	0		=			
ANR	4815943	MemberAccess	upd -> int_a [ IA_ROWMASK ] . data		4814934	0					
ANR	4815944	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		4814934	0					
ANR	4815945	PtrMemberAccess	upd -> int_a		4814934	0					
ANR	4815946	Identifier	upd		4814934	0					
ANR	4815947	Identifier	int_a		4814934	1					
ANR	4815948	Identifier	IA_ROWMASK		4814934	1					
ANR	4815949	Identifier	data		4814934	1					
ANR	4815950	Identifier	bp		4814934	1					
ANR	4815951	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		4814934	5					
ANR	4815952	ForInit	i = 0 ;	5396:17:193685:193691	4814934	0	True				
ANR	4815953	AssignmentExpression	i = 0		4814934	0		=			
ANR	4815954	Identifier	i		4814934	0					
ANR	4815955	PrimaryExpression	0		4814934	1					
ANR	4815956	Condition	i < upd -> ints [ I_PATRPT ]	5396:25:193693:193715	4814934	1	True				
ANR	4815957	RelationalExpression	i < upd -> ints [ I_PATRPT ]		4814934	0		<			
ANR	4815958	Identifier	i		4814934	0					
ANR	4815959	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	1					
ANR	4815960	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815961	Identifier	upd		4814934	0					
ANR	4815962	Identifier	ints		4814934	1					
ANR	4815963	Identifier	I_PATRPT		4814934	1					
ANR	4815964	PostIncDecOperationExpression	i ++	5396:51:193719:193721	4814934	2	True				
ANR	4815965	Identifier	i		4814934	0					
ANR	4815966	IncDec	++		4814934	1					
ANR	4815967	CompoundStatement		181:55:6096:6096	4814934	3					
ANR	4815968	ExpressionStatement	* bp ++ = 1	5397:15:193740:193750	4814934	0	True				
ANR	4815969	AssignmentExpression	* bp ++ = 1		4814934	0		=			
ANR	4815970	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4815971	UnaryOperator	*		4814934	0					
ANR	4815972	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4815973	Identifier	bp		4814934	0					
ANR	4815974	IncDec	++		4814934	1					
ANR	4815975	PrimaryExpression	1		4814934	1					
ANR	4815976	IfStatement	if ( upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_SCNOFS ] . size )		4814934	4					
ANR	4815977	Condition	upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_SCNOFS ] . size	5401:13:193861:193909	4814934	0	True				
ANR	4815978	EqualityExpression	upd -> ints [ I_PATRPT ] != upd -> int_a [ IA_SCNOFS ] . size		4814934	0		!=			
ANR	4815979	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	0					
ANR	4815980	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4815981	Identifier	upd		4814934	0					
ANR	4815982	Identifier	ints		4814934	1					
ANR	4815983	Identifier	I_PATRPT		4814934	1					
ANR	4815984	MemberAccess	upd -> int_a [ IA_SCNOFS ] . size		4814934	1					
ANR	4815985	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		4814934	0					
ANR	4815986	PtrMemberAccess	upd -> int_a		4814934	0					
ANR	4815987	Identifier	upd		4814934	0					
ANR	4815988	Identifier	int_a		4814934	1					
ANR	4815989	Identifier	IA_SCNOFS		4814934	1					
ANR	4815990	Identifier	size		4814934	1					
ANR	4815991	CompoundStatement		187:12:6300:6310	4814934	1					
ANR	4815992	IdentifierDeclStatement	"int i , * bp ;"	5402:12:193927:193937	4814934	0	True				
ANR	4815993	IdentifierDecl	i		4814934	0					
ANR	4815994	IdentifierDeclType	int		4814934	0					
ANR	4815995	Identifier	i		4814934	1					
ANR	4815996	IdentifierDecl	* bp		4814934	1					
ANR	4815997	IdentifierDeclType	int *		4814934	0					
ANR	4815998	Identifier	bp		4814934	1					
ANR	4815999	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_SCNOFS ] )"	5403:12:193951:194004	4814934	1	True				
ANR	4816000	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> int_a [ IA_SCNOFS ] )"		4814934	0					
ANR	4816001	Callee	UPD_MM_DEL_PARAM		4814934	0					
ANR	4816002	Identifier	UPD_MM_DEL_PARAM		4814934	0					
ANR	4816003	ArgumentList	udev -> memory		4814934	1					
ANR	4816004	Argument	udev -> memory		4814934	0					
ANR	4816005	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816006	Identifier	udev		4814934	0					
ANR	4816007	Identifier	memory		4814934	1					
ANR	4816008	Argument	upd -> int_a [ IA_SCNOFS ]		4814934	1					
ANR	4816009	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		4814934	0					
ANR	4816010	PtrMemberAccess	upd -> int_a		4814934	0					
ANR	4816011	Identifier	upd		4814934	0					
ANR	4816012	Identifier	int_a		4814934	1					
ANR	4816013	Identifier	IA_SCNOFS		4814934	1					
ANR	4816014	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , upd -> ints [ I_PATRPT ] )"	5404:12:194018:194072	4814934	2	True				
ANR	4816015	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , upd -> ints [ I_PATRPT ] )"		4814934	0					
ANR	4816016	Callee	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816017	Identifier	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816018	ArgumentList	udev -> memory		4814934	1					
ANR	4816019	Argument	udev -> memory		4814934	0					
ANR	4816020	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816021	Identifier	udev		4814934	0					
ANR	4816022	Identifier	memory		4814934	1					
ANR	4816023	Argument	bp		4814934	1					
ANR	4816024	Identifier	bp		4814934	0					
ANR	4816025	Argument	upd -> ints [ I_PATRPT ]		4814934	2					
ANR	4816026	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	0					
ANR	4816027	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816028	Identifier	upd		4814934	0					
ANR	4816029	Identifier	ints		4814934	1					
ANR	4816030	Identifier	I_PATRPT		4814934	1					
ANR	4816031	ExpressionStatement	upd -> int_a [ IA_SCNOFS ] . size = upd -> ints [ I_PATRPT ]	5405:12:194086:194134	4814934	3	True				
ANR	4816032	AssignmentExpression	upd -> int_a [ IA_SCNOFS ] . size = upd -> ints [ I_PATRPT ]		4814934	0		=			
ANR	4816033	MemberAccess	upd -> int_a [ IA_SCNOFS ] . size		4814934	0					
ANR	4816034	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		4814934	0					
ANR	4816035	PtrMemberAccess	upd -> int_a		4814934	0					
ANR	4816036	Identifier	upd		4814934	0					
ANR	4816037	Identifier	int_a		4814934	1					
ANR	4816038	Identifier	IA_SCNOFS		4814934	1					
ANR	4816039	Identifier	size		4814934	1					
ANR	4816040	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	1					
ANR	4816041	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816042	Identifier	upd		4814934	0					
ANR	4816043	Identifier	ints		4814934	1					
ANR	4816044	Identifier	I_PATRPT		4814934	1					
ANR	4816045	ExpressionStatement	upd -> int_a [ IA_SCNOFS ] . data = bp	5406:12:194148:194179	4814934	4	True				
ANR	4816046	AssignmentExpression	upd -> int_a [ IA_SCNOFS ] . data = bp		4814934	0		=			
ANR	4816047	MemberAccess	upd -> int_a [ IA_SCNOFS ] . data		4814934	0					
ANR	4816048	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		4814934	0					
ANR	4816049	PtrMemberAccess	upd -> int_a		4814934	0					
ANR	4816050	Identifier	upd		4814934	0					
ANR	4816051	Identifier	int_a		4814934	1					
ANR	4816052	Identifier	IA_SCNOFS		4814934	1					
ANR	4816053	Identifier	data		4814934	1					
ANR	4816054	Identifier	bp		4814934	1					
ANR	4816055	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		4814934	5					
ANR	4816056	ForInit	i = 0 ;	5407:17:194198:194204	4814934	0	True				
ANR	4816057	AssignmentExpression	i = 0		4814934	0		=			
ANR	4816058	Identifier	i		4814934	0					
ANR	4816059	PrimaryExpression	0		4814934	1					
ANR	4816060	Condition	i < upd -> ints [ I_PATRPT ]	5407:25:194206:194228	4814934	1	True				
ANR	4816061	RelationalExpression	i < upd -> ints [ I_PATRPT ]		4814934	0		<			
ANR	4816062	Identifier	i		4814934	0					
ANR	4816063	ArrayIndexing	upd -> ints [ I_PATRPT ]		4814934	1					
ANR	4816064	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816065	Identifier	upd		4814934	0					
ANR	4816066	Identifier	ints		4814934	1					
ANR	4816067	Identifier	I_PATRPT		4814934	1					
ANR	4816068	PostIncDecOperationExpression	i ++	5407:51:194232:194234	4814934	2	True				
ANR	4816069	Identifier	i		4814934	0					
ANR	4816070	IncDec	++		4814934	1					
ANR	4816071	CompoundStatement		192:55:6609:6609	4814934	3					
ANR	4816072	ExpressionStatement	* bp ++ = i	5408:15:194253:194263	4814934	0	True				
ANR	4816073	AssignmentExpression	* bp ++ = i		4814934	0		=			
ANR	4816074	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816075	UnaryOperator	*		4814934	0					
ANR	4816076	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816077	Identifier	bp		4814934	0					
ANR	4816078	IncDec	++		4814934	1					
ANR	4816079	Identifier	i		4814934	1					
ANR	4816080	BreakStatement	break ;	5411:6:194296:194301	4814934	5	True				
ANR	4816081	Label	case FMT_ESCP2Y :	5412:6:194309:194324	4814934	6	True				
ANR	4816082	Identifier	FMT_ESCP2Y		4814934	0					
ANR	4816083	Label	case FMT_ESCP2XY :	5413:6:194332:194348	4814934	7	True				
ANR	4816084	Identifier	FMT_ESCP2XY		4814934	0					
ANR	4816085	BreakStatement	break ;	5416:6:194451:194456	4814934	8	True				
ANR	4816086	IfStatement	if ( ( 0 == upd -> string_a [ SA_WRITECOMP ] . size ) && ( 0 == upd -> string_a [ SA_SETCOMP ] . size ) )		4814934	7					
ANR	4816087	Condition	( 0 == upd -> string_a [ SA_WRITECOMP ] . size ) && ( 0 == upd -> string_a [ SA_SETCOMP ] . size )	5420:6:194546:194633	4814934	0	True				
ANR	4816088	AndExpression	( 0 == upd -> string_a [ SA_WRITECOMP ] . size ) && ( 0 == upd -> string_a [ SA_SETCOMP ] . size )		4814934	0		&&			
ANR	4816089	EqualityExpression	0 == upd -> string_a [ SA_WRITECOMP ] . size		4814934	0		==			
ANR	4816090	PrimaryExpression	0		4814934	0					
ANR	4816091	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		4814934	1					
ANR	4816092	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4814934	0					
ANR	4816093	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816094	Identifier	upd		4814934	0					
ANR	4816095	Identifier	string_a		4814934	1					
ANR	4816096	Identifier	SA_WRITECOMP		4814934	1					
ANR	4816097	Identifier	size		4814934	1					
ANR	4816098	EqualityExpression	0 == upd -> string_a [ SA_SETCOMP ] . size		4814934	1		==			
ANR	4816099	PrimaryExpression	0		4814934	0					
ANR	4816100	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4814934	1					
ANR	4816101	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4814934	0					
ANR	4816102	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816103	Identifier	upd		4814934	0					
ANR	4816104	Identifier	string_a		4814934	1					
ANR	4816105	Identifier	SA_SETCOMP		4814934	1					
ANR	4816106	Identifier	size		4814934	1					
ANR	4816107	CompoundStatement		209:6:7086:7093	4814934	1					
ANR	4816108	IdentifierDeclStatement	byte * bp ;	5422:6:194670:194678	4814934	0	True				
ANR	4816109	IdentifierDecl	* bp		4814934	0					
ANR	4816110	IdentifierDeclType	byte *		4814934	0					
ANR	4816111	Identifier	bp		4814934	1					
ANR	4816112	IdentifierDeclStatement	gs_param_string * ap ;	5423:6:194686:194705	4814934	1	True				
ANR	4816113	IdentifierDecl	* ap		4814934	0					
ANR	4816114	IdentifierDeclType	gs_param_string *		4814934	0					
ANR	4816115	Identifier	ap		4814934	1					
ANR	4816116	IdentifierDeclStatement	int i ;	5424:6:194713:194720	4814934	2	True				
ANR	4816117	IdentifierDecl	i		4814934	0					
ANR	4816118	IdentifierDeclType	int		4814934	0					
ANR	4816119	Identifier	i		4814934	1					
ANR	4816120	IfStatement	if ( 4 == upd -> ocomp )		4814934	3					
ANR	4816121	Condition	4 == upd -> ocomp	5426:9:194732:194746	4814934	0	True				
ANR	4816122	EqualityExpression	4 == upd -> ocomp		4814934	0		==			
ANR	4816123	PrimaryExpression	4		4814934	0					
ANR	4816124	PtrMemberAccess	upd -> ocomp		4814934	1					
ANR	4816125	Identifier	upd		4814934	0					
ANR	4816126	Identifier	ocomp		4814934	1					
ANR	4816127	CompoundStatement		211:26:7122:7122	4814934	1					
ANR	4816128	ExpressionStatement	"UPD_MM_DEL_APARAM ( udev -> memory , upd -> string_a [ SA_SETCOMP ] )"	5427:9:194796:194854	4814934	0	True				
ANR	4816129	CallExpression	"UPD_MM_DEL_APARAM ( udev -> memory , upd -> string_a [ SA_SETCOMP ] )"		4814934	0					
ANR	4816130	Callee	UPD_MM_DEL_APARAM		4814934	0					
ANR	4816131	Identifier	UPD_MM_DEL_APARAM		4814934	0					
ANR	4816132	ArgumentList	udev -> memory		4814934	1					
ANR	4816133	Argument	udev -> memory		4814934	0					
ANR	4816134	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816135	Identifier	udev		4814934	0					
ANR	4816136	Identifier	memory		4814934	1					
ANR	4816137	Argument	upd -> string_a [ SA_SETCOMP ]		4814934	1					
ANR	4816138	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4814934	0					
ANR	4816139	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816140	Identifier	upd		4814934	0					
ANR	4816141	Identifier	string_a		4814934	1					
ANR	4816142	Identifier	SA_SETCOMP		4814934	1					
ANR	4816143	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ap , 4 )"	5428:9:194865:194901	4814934	1	True				
ANR	4816144	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ap , 4 )"		4814934	0					
ANR	4816145	Callee	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816146	Identifier	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816147	ArgumentList	udev -> memory		4814934	1					
ANR	4816148	Argument	udev -> memory		4814934	0					
ANR	4816149	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816150	Identifier	udev		4814934	0					
ANR	4816151	Identifier	memory		4814934	1					
ANR	4816152	Argument	ap		4814934	1					
ANR	4816153	Identifier	ap		4814934	0					
ANR	4816154	Argument	4		4814934	2					
ANR	4816155	PrimaryExpression	4		4814934	0					
ANR	4816156	ExpressionStatement	upd -> string_a [ SA_SETCOMP ] . data = ap	5429:9:194912:194947	4814934	2	True				
ANR	4816157	AssignmentExpression	upd -> string_a [ SA_SETCOMP ] . data = ap		4814934	0		=			
ANR	4816158	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4814934	0					
ANR	4816159	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4814934	0					
ANR	4816160	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816161	Identifier	upd		4814934	0					
ANR	4816162	Identifier	string_a		4814934	1					
ANR	4816163	Identifier	SA_SETCOMP		4814934	1					
ANR	4816164	Identifier	data		4814934	1					
ANR	4816165	Identifier	ap		4814934	1					
ANR	4816166	ExpressionStatement	upd -> string_a [ SA_SETCOMP ] . size = 4	5430:9:194958:194992	4814934	3	True				
ANR	4816167	AssignmentExpression	upd -> string_a [ SA_SETCOMP ] . size = 4		4814934	0		=			
ANR	4816168	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4814934	0					
ANR	4816169	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4814934	0					
ANR	4816170	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816171	Identifier	upd		4814934	0					
ANR	4816172	Identifier	string_a		4814934	1					
ANR	4816173	Identifier	SA_SETCOMP		4814934	1					
ANR	4816174	Identifier	size		4814934	1					
ANR	4816175	PrimaryExpression	4		4814934	1					
ANR	4816176	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		4814934	4					
ANR	4816177	ForInit	i = 0 ;	5431:13:195007:195012	4814934	0	True				
ANR	4816178	AssignmentExpression	i = 0		4814934	0		=			
ANR	4816179	Identifier	i		4814934	0					
ANR	4816180	PrimaryExpression	0		4814934	1					
ANR	4816181	Condition	i < 4	5431:20:195014:195018	4814934	1	True				
ANR	4816182	RelationalExpression	i < 4		4814934	0		<			
ANR	4816183	Identifier	i		4814934	0					
ANR	4816184	PrimaryExpression	4		4814934	1					
ANR	4816185	UnaryExpression	++ i	5431:27:195021:195023	4814934	2	True				
ANR	4816186	IncDec	++		4814934	0					
ANR	4816187	Identifier	i		4814934	1					
ANR	4816188	CompoundStatement		216:32:7399:7399	4814934	3					
ANR	4816189	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 3 )"	5432:12:195040:195076	4814934	0	True				
ANR	4816190	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 3 )"		4814934	0					
ANR	4816191	Callee	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816192	Identifier	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816193	ArgumentList	udev -> memory		4814934	1					
ANR	4816194	Argument	udev -> memory		4814934	0					
ANR	4816195	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816196	Identifier	udev		4814934	0					
ANR	4816197	Identifier	memory		4814934	1					
ANR	4816198	Argument	bp		4814934	1					
ANR	4816199	Identifier	bp		4814934	0					
ANR	4816200	Argument	3		4814934	2					
ANR	4816201	PrimaryExpression	3		4814934	0					
ANR	4816202	ExpressionStatement	ap [ i ] . size = 3	5433:12:195090:195104	4814934	1	True				
ANR	4816203	AssignmentExpression	ap [ i ] . size = 3		4814934	0		=			
ANR	4816204	MemberAccess	ap [ i ] . size		4814934	0					
ANR	4816205	ArrayIndexing	ap [ i ]		4814934	0					
ANR	4816206	Identifier	ap		4814934	0					
ANR	4816207	Identifier	i		4814934	1					
ANR	4816208	Identifier	size		4814934	1					
ANR	4816209	PrimaryExpression	3		4814934	1					
ANR	4816210	ExpressionStatement	ap [ i ] . data = bp	5434:12:195118:195133	4814934	2	True				
ANR	4816211	AssignmentExpression	ap [ i ] . data = bp		4814934	0		=			
ANR	4816212	MemberAccess	ap [ i ] . data		4814934	0					
ANR	4816213	ArrayIndexing	ap [ i ]		4814934	0					
ANR	4816214	Identifier	ap		4814934	0					
ANR	4816215	Identifier	i		4814934	1					
ANR	4816216	Identifier	data		4814934	1					
ANR	4816217	Identifier	bp		4814934	1					
ANR	4816218	ExpressionStatement	* bp ++ = 0x1b	5435:12:195147:195159	4814934	3	True				
ANR	4816219	AssignmentExpression	* bp ++ = 0x1b		4814934	0		=			
ANR	4816220	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816221	UnaryOperator	*		4814934	0					
ANR	4816222	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816223	Identifier	bp		4814934	0					
ANR	4816224	IncDec	++		4814934	1					
ANR	4816225	PrimaryExpression	0x1b		4814934	1					
ANR	4816226	ExpressionStatement	* bp ++ = 'r'	5436:12:195173:195184	4814934	4	True				
ANR	4816227	AssignmentExpression	* bp ++ = 'r'		4814934	0		=			
ANR	4816228	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816229	UnaryOperator	*		4814934	0					
ANR	4816230	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816231	Identifier	bp		4814934	0					
ANR	4816232	IncDec	++		4814934	1					
ANR	4816233	PrimaryExpression	'r'		4814934	1					
ANR	4816234	SwitchStatement	switch ( ( ( updcomp_p ) upd -> valptr [ i ] ) -> cmap )		4814934	5					
ANR	4816235	Condition	( ( updcomp_p ) upd -> valptr [ i ] ) -> cmap	5437:19:195205:195237	4814934	0	True				
ANR	4816236	PtrMemberAccess	( ( updcomp_p ) upd -> valptr [ i ] ) -> cmap		4814934	0					
ANR	4816237	CastExpression	( updcomp_p ) upd -> valptr [ i ]		4814934	0					
ANR	4816238	CastTarget	updcomp_p		4814934	0					
ANR	4816239	ArrayIndexing	upd -> valptr [ i ]		4814934	1					
ANR	4816240	PtrMemberAccess	upd -> valptr		4814934	0					
ANR	4816241	Identifier	upd		4814934	0					
ANR	4816242	Identifier	valptr		4814934	1					
ANR	4816243	Identifier	i		4814934	1					
ANR	4816244	Identifier	cmap		4814934	1					
ANR	4816245	CompoundStatement		222:54:7613:7613	4814934	1					
ANR	4816246	Label	case 0 :	5438:15:195278:195284	4814934	0	True				
ANR	4816247	ExpressionStatement	* bp ++ = 0	5438:23:195286:195295	4814934	1	True				
ANR	4816248	AssignmentExpression	* bp ++ = 0		4814934	0		=			
ANR	4816249	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816250	UnaryOperator	*		4814934	0					
ANR	4816251	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816252	Identifier	bp		4814934	0					
ANR	4816253	IncDec	++		4814934	1					
ANR	4816254	PrimaryExpression	0		4814934	1					
ANR	4816255	BreakStatement	break ;	5438:34:195297:195302	4814934	2	True				
ANR	4816256	Label	case 1 :	5439:15:195331:195337	4814934	3	True				
ANR	4816257	ExpressionStatement	* bp ++ = 2	5439:23:195339:195348	4814934	4	True				
ANR	4816258	AssignmentExpression	* bp ++ = 2		4814934	0		=			
ANR	4816259	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816260	UnaryOperator	*		4814934	0					
ANR	4816261	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816262	Identifier	bp		4814934	0					
ANR	4816263	IncDec	++		4814934	1					
ANR	4816264	PrimaryExpression	2		4814934	1					
ANR	4816265	BreakStatement	break ;	5439:34:195350:195355	4814934	5	True				
ANR	4816266	Label	case 2 :	5440:15:195383:195389	4814934	6	True				
ANR	4816267	ExpressionStatement	* bp ++ = 1	5440:23:195391:195400	4814934	7	True				
ANR	4816268	AssignmentExpression	* bp ++ = 1		4814934	0		=			
ANR	4816269	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816270	UnaryOperator	*		4814934	0					
ANR	4816271	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816272	Identifier	bp		4814934	0					
ANR	4816273	IncDec	++		4814934	1					
ANR	4816274	PrimaryExpression	1		4814934	1					
ANR	4816275	BreakStatement	break ;	5440:34:195402:195407	4814934	8	True				
ANR	4816276	Label	case 3 :	5441:15:195438:195444	4814934	9	True				
ANR	4816277	ExpressionStatement	* bp ++ = 4	5441:23:195446:195455	4814934	10	True				
ANR	4816278	AssignmentExpression	* bp ++ = 4		4814934	0		=			
ANR	4816279	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816280	UnaryOperator	*		4814934	0					
ANR	4816281	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816282	Identifier	bp		4814934	0					
ANR	4816283	IncDec	++		4814934	1					
ANR	4816284	PrimaryExpression	4		4814934	1					
ANR	4816285	BreakStatement	break ;	5441:34:195457:195462	4814934	11	True				
ANR	4816286	ExpressionStatement	"UPD_MM_DEL_APARAM ( udev -> memory , upd -> string_a [ SA_WRITECOMP ] )"	5446:6:195636:195696	4814934	4	True				
ANR	4816287	CallExpression	"UPD_MM_DEL_APARAM ( udev -> memory , upd -> string_a [ SA_WRITECOMP ] )"		4814934	0					
ANR	4816288	Callee	UPD_MM_DEL_APARAM		4814934	0					
ANR	4816289	Identifier	UPD_MM_DEL_APARAM		4814934	0					
ANR	4816290	ArgumentList	udev -> memory		4814934	1					
ANR	4816291	Argument	udev -> memory		4814934	0					
ANR	4816292	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816293	Identifier	udev		4814934	0					
ANR	4816294	Identifier	memory		4814934	1					
ANR	4816295	Argument	upd -> string_a [ SA_WRITECOMP ]		4814934	1					
ANR	4816296	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4814934	0					
ANR	4816297	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816298	Identifier	upd		4814934	0					
ANR	4816299	Identifier	string_a		4814934	1					
ANR	4816300	Identifier	SA_WRITECOMP		4814934	1					
ANR	4816301	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , ap , upd -> ocomp )"	5447:6:195704:195749	4814934	5	True				
ANR	4816302	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , ap , upd -> ocomp )"		4814934	0					
ANR	4816303	Callee	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816304	Identifier	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816305	ArgumentList	udev -> memory		4814934	1					
ANR	4816306	Argument	udev -> memory		4814934	0					
ANR	4816307	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816308	Identifier	udev		4814934	0					
ANR	4816309	Identifier	memory		4814934	1					
ANR	4816310	Argument	ap		4814934	1					
ANR	4816311	Identifier	ap		4814934	0					
ANR	4816312	Argument	upd -> ocomp		4814934	2					
ANR	4816313	PtrMemberAccess	upd -> ocomp		4814934	0					
ANR	4816314	Identifier	upd		4814934	0					
ANR	4816315	Identifier	ocomp		4814934	1					
ANR	4816316	ExpressionStatement	upd -> string_a [ SA_WRITECOMP ] . data = ap	5448:6:195757:195794	4814934	6	True				
ANR	4816317	AssignmentExpression	upd -> string_a [ SA_WRITECOMP ] . data = ap		4814934	0		=			
ANR	4816318	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4814934	0					
ANR	4816319	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4814934	0					
ANR	4816320	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816321	Identifier	upd		4814934	0					
ANR	4816322	Identifier	string_a		4814934	1					
ANR	4816323	Identifier	SA_WRITECOMP		4814934	1					
ANR	4816324	Identifier	data		4814934	1					
ANR	4816325	Identifier	ap		4814934	1					
ANR	4816326	ExpressionStatement	upd -> string_a [ SA_WRITECOMP ] . size = upd -> ncomp	5449:6:195802:195847	4814934	7	True				
ANR	4816327	AssignmentExpression	upd -> string_a [ SA_WRITECOMP ] . size = upd -> ncomp		4814934	0		=			
ANR	4816328	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		4814934	0					
ANR	4816329	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4814934	0					
ANR	4816330	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816331	Identifier	upd		4814934	0					
ANR	4816332	Identifier	string_a		4814934	1					
ANR	4816333	Identifier	SA_WRITECOMP		4814934	1					
ANR	4816334	Identifier	size		4814934	1					
ANR	4816335	PtrMemberAccess	upd -> ncomp		4814934	1					
ANR	4816336	Identifier	upd		4814934	0					
ANR	4816337	Identifier	ncomp		4814934	1					
ANR	4816338	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		4814934	8					
ANR	4816339	ForInit	i = 0 ;	5450:10:195859:195864	4814934	0	True				
ANR	4816340	AssignmentExpression	i = 0		4814934	0		=			
ANR	4816341	Identifier	i		4814934	0					
ANR	4816342	PrimaryExpression	0		4814934	1					
ANR	4816343	Condition	i < upd -> ocomp	5450:17:195866:195879	4814934	1	True				
ANR	4816344	RelationalExpression	i < upd -> ocomp		4814934	0		<			
ANR	4816345	Identifier	i		4814934	0					
ANR	4816346	PtrMemberAccess	upd -> ocomp		4814934	1					
ANR	4816347	Identifier	upd		4814934	0					
ANR	4816348	Identifier	ocomp		4814934	1					
ANR	4816349	UnaryExpression	++ i	5450:33:195882:195884	4814934	2	True				
ANR	4816350	IncDec	++		4814934	0					
ANR	4816351	Identifier	i		4814934	1					
ANR	4816352	CompoundStatement		235:38:8260:8260	4814934	3					
ANR	4816353	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 6 )"	5451:9:195898:195934	4814934	0	True				
ANR	4816354	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , 6 )"		4814934	0					
ANR	4816355	Callee	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816356	Identifier	UPD_MM_GET_ARRAY		4814934	0					
ANR	4816357	ArgumentList	udev -> memory		4814934	1					
ANR	4816358	Argument	udev -> memory		4814934	0					
ANR	4816359	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816360	Identifier	udev		4814934	0					
ANR	4816361	Identifier	memory		4814934	1					
ANR	4816362	Argument	bp		4814934	1					
ANR	4816363	Identifier	bp		4814934	0					
ANR	4816364	Argument	6		4814934	2					
ANR	4816365	PrimaryExpression	6		4814934	0					
ANR	4816366	ExpressionStatement	ap [ i ] . size = 6	5452:9:195945:195959	4814934	1	True				
ANR	4816367	AssignmentExpression	ap [ i ] . size = 6		4814934	0		=			
ANR	4816368	MemberAccess	ap [ i ] . size		4814934	0					
ANR	4816369	ArrayIndexing	ap [ i ]		4814934	0					
ANR	4816370	Identifier	ap		4814934	0					
ANR	4816371	Identifier	i		4814934	1					
ANR	4816372	Identifier	size		4814934	1					
ANR	4816373	PrimaryExpression	6		4814934	1					
ANR	4816374	ExpressionStatement	ap [ i ] . data = bp	5453:9:195970:195985	4814934	2	True				
ANR	4816375	AssignmentExpression	ap [ i ] . data = bp		4814934	0		=			
ANR	4816376	MemberAccess	ap [ i ] . data		4814934	0					
ANR	4816377	ArrayIndexing	ap [ i ]		4814934	0					
ANR	4816378	Identifier	ap		4814934	0					
ANR	4816379	Identifier	i		4814934	1					
ANR	4816380	Identifier	data		4814934	1					
ANR	4816381	Identifier	bp		4814934	1					
ANR	4816382	ExpressionStatement	* bp ++ = 0x1b	5454:9:195996:196008	4814934	3	True				
ANR	4816383	AssignmentExpression	* bp ++ = 0x1b		4814934	0		=			
ANR	4816384	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816385	UnaryOperator	*		4814934	0					
ANR	4816386	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816387	Identifier	bp		4814934	0					
ANR	4816388	IncDec	++		4814934	1					
ANR	4816389	PrimaryExpression	0x1b		4814934	1					
ANR	4816390	ExpressionStatement	* bp ++ = '.'	5455:9:196019:196030	4814934	4	True				
ANR	4816391	AssignmentExpression	* bp ++ = '.'		4814934	0		=			
ANR	4816392	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816393	UnaryOperator	*		4814934	0					
ANR	4816394	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816395	Identifier	bp		4814934	0					
ANR	4816396	IncDec	++		4814934	1					
ANR	4816397	PrimaryExpression	'.'		4814934	1					
ANR	4816398	ExpressionStatement	* bp ++ = 1	5456:9:196041:196051	4814934	5	True				
ANR	4816399	AssignmentExpression	* bp ++ = 1		4814934	0		=			
ANR	4816400	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816401	UnaryOperator	*		4814934	0					
ANR	4816402	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816403	Identifier	bp		4814934	0					
ANR	4816404	IncDec	++		4814934	1					
ANR	4816405	PrimaryExpression	1		4814934	1					
ANR	4816406	SwitchStatement	switch ( upd -> choice [ C_FORMAT ] )		4814934	6					
ANR	4816407	Condition	upd -> choice [ C_FORMAT ]	5457:16:196080:196100	4814934	0	True				
ANR	4816408	ArrayIndexing	upd -> choice [ C_FORMAT ]		4814934	0					
ANR	4816409	PtrMemberAccess	upd -> choice		4814934	0					
ANR	4816410	Identifier	upd		4814934	0					
ANR	4816411	Identifier	choice		4814934	1					
ANR	4816412	Identifier	C_FORMAT		4814934	1					
ANR	4816413	CompoundStatement		242:38:8475:8475	4814934	1					
ANR	4816414	Label	case FMT_ESCP2Y :	5458:12:196116:196131	4814934	0	True				
ANR	4816415	Identifier	FMT_ESCP2Y		4814934	0					
ANR	4816416	Label	case FMT_ESCP2XY :	5459:12:196145:196161	4814934	1	True				
ANR	4816417	Identifier	FMT_ESCP2XY		4814934	0					
ANR	4816418	ExpressionStatement	* bp ++ = ( byte ) ( 3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch + 0.5 )	5460:15:196178:196287	4814934	2	True				
ANR	4816419	AssignmentExpression	* bp ++ = ( byte ) ( 3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch + 0.5 )		4814934	0		=			
ANR	4816420	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816421	UnaryOperator	*		4814934	0					
ANR	4816422	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816423	Identifier	bp		4814934	0					
ANR	4816424	IncDec	++		4814934	1					
ANR	4816425	CastExpression	( byte ) ( 3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch + 0.5 )		4814934	1					
ANR	4816426	CastTarget	byte		4814934	0					
ANR	4816427	AdditiveExpression	3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch + 0.5		4814934	1		+			
ANR	4816428	MultiplicativeExpression	3600.0 * upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch		4814934	0		*			
ANR	4816429	PrimaryExpression	3600.0		4814934	0					
ANR	4816430	MultiplicativeExpression	upd -> ints [ I_NYPASS ] / udev -> y_pixels_per_inch		4814934	1		/			
ANR	4816431	ArrayIndexing	upd -> ints [ I_NYPASS ]		4814934	0					
ANR	4816432	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816433	Identifier	upd		4814934	0					
ANR	4816434	Identifier	ints		4814934	1					
ANR	4816435	Identifier	I_NYPASS		4814934	1					
ANR	4816436	PtrMemberAccess	udev -> y_pixels_per_inch		4814934	1					
ANR	4816437	Identifier	udev		4814934	0					
ANR	4816438	Identifier	y_pixels_per_inch		4814934	1					
ANR	4816439	PrimaryExpression	0.5		4814934	1					
ANR	4816440	ExpressionStatement	* bp ++ = ( byte ) ( 3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch + 0.5 )	5462:15:196304:196413	4814934	3	True				
ANR	4816441	AssignmentExpression	* bp ++ = ( byte ) ( 3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch + 0.5 )		4814934	0		=			
ANR	4816442	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816443	UnaryOperator	*		4814934	0					
ANR	4816444	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816445	Identifier	bp		4814934	0					
ANR	4816446	IncDec	++		4814934	1					
ANR	4816447	CastExpression	( byte ) ( 3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch + 0.5 )		4814934	1					
ANR	4816448	CastTarget	byte		4814934	0					
ANR	4816449	AdditiveExpression	3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch + 0.5		4814934	1		+			
ANR	4816450	MultiplicativeExpression	3600.0 * upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch		4814934	0		*			
ANR	4816451	PrimaryExpression	3600.0		4814934	0					
ANR	4816452	MultiplicativeExpression	upd -> ints [ I_NXPASS ] / udev -> x_pixels_per_inch		4814934	1		/			
ANR	4816453	ArrayIndexing	upd -> ints [ I_NXPASS ]		4814934	0					
ANR	4816454	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816455	Identifier	upd		4814934	0					
ANR	4816456	Identifier	ints		4814934	1					
ANR	4816457	Identifier	I_NXPASS		4814934	1					
ANR	4816458	PtrMemberAccess	udev -> x_pixels_per_inch		4814934	1					
ANR	4816459	Identifier	udev		4814934	0					
ANR	4816460	Identifier	x_pixels_per_inch		4814934	1					
ANR	4816461	PrimaryExpression	0.5		4814934	1					
ANR	4816462	ExpressionStatement	* bp ++ = upd -> ints [ I_PINS2WRITE ]	5464:15:196430:196461	4814934	4	True				
ANR	4816463	AssignmentExpression	* bp ++ = upd -> ints [ I_PINS2WRITE ]		4814934	0		=			
ANR	4816464	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816465	UnaryOperator	*		4814934	0					
ANR	4816466	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816467	Identifier	bp		4814934	0					
ANR	4816468	IncDec	++		4814934	1					
ANR	4816469	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4814934	1					
ANR	4816470	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816471	Identifier	upd		4814934	0					
ANR	4816472	Identifier	ints		4814934	1					
ANR	4816473	Identifier	I_PINS2WRITE		4814934	1					
ANR	4816474	BreakStatement	break ;	5465:12:196475:196480	4814934	5	True				
ANR	4816475	Label	case FMT_ESCNMY :	5466:12:196494:196509	4814934	6	True				
ANR	4816476	Identifier	FMT_ESCNMY		4814934	0					
ANR	4816477	ExpressionStatement	* bp ++ = 10	5471:15:196688:196698	4814934	7	True				
ANR	4816478	AssignmentExpression	* bp ++ = 10		4814934	0		=			
ANR	4816479	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816480	UnaryOperator	*		4814934	0					
ANR	4816481	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816482	Identifier	bp		4814934	0					
ANR	4816483	IncDec	++		4814934	1					
ANR	4816484	PrimaryExpression	10		4814934	1					
ANR	4816485	ExpressionStatement	* bp ++ = 10	5472:15:196756:196766	4814934	8	True				
ANR	4816486	AssignmentExpression	* bp ++ = 10		4814934	0		=			
ANR	4816487	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816488	UnaryOperator	*		4814934	0					
ANR	4816489	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816490	Identifier	bp		4814934	0					
ANR	4816491	IncDec	++		4814934	1					
ANR	4816492	PrimaryExpression	10		4814934	1					
ANR	4816493	ExpressionStatement	* bp ++ = upd -> ints [ I_ROWS ]	5473:15:196783:196808	4814934	9	True				
ANR	4816494	AssignmentExpression	* bp ++ = upd -> ints [ I_ROWS ]		4814934	0		=			
ANR	4816495	UnaryOperationExpression	* bp ++		4814934	0					
ANR	4816496	UnaryOperator	*		4814934	0					
ANR	4816497	PostIncDecOperationExpression	bp ++		4814934	1					
ANR	4816498	Identifier	bp		4814934	0					
ANR	4816499	IncDec	++		4814934	1					
ANR	4816500	ArrayIndexing	upd -> ints [ I_ROWS ]		4814934	1					
ANR	4816501	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816502	Identifier	upd		4814934	0					
ANR	4816503	Identifier	ints		4814934	1					
ANR	4816504	Identifier	I_ROWS		4814934	1					
ANR	4816505	BreakStatement	break ;	5474:12:196822:196827	4814934	10	True				
ANR	4816506	IfStatement	if ( upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size )		4814934	8					
ANR	4816507	Condition	upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size	5480:6:196964:197008	4814934	0	True				
ANR	4816508	RelationalExpression	upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size		4814934	0		>			
ANR	4816509	PtrMemberAccess	upd -> ocomp		4814934	0					
ANR	4816510	Identifier	upd		4814934	0					
ANR	4816511	Identifier	ocomp		4814934	1					
ANR	4816512	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		4814934	1					
ANR	4816513	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4814934	0					
ANR	4816514	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816515	Identifier	upd		4814934	0					
ANR	4816516	Identifier	string_a		4814934	1					
ANR	4816517	Identifier	SA_WRITECOMP		4814934	1					
ANR	4816518	Identifier	size		4814934	1					
ANR	4816519	CompoundStatement		265:53:9384:9384	4814934	1					
ANR	4816520	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: WRITECOMP-Commands must be given\\n"" )"	5482:6:197052:197135	4814934	0	True				
ANR	4816521	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: WRITECOMP-Commands must be given\\n"" )"		4814934	0					
ANR	4816522	Callee	errprintf		4814934	0					
ANR	4816523	Identifier	errprintf		4814934	0					
ANR	4816524	ArgumentList	udev -> memory		4814934	1					
ANR	4816525	Argument	udev -> memory		4814934	0					
ANR	4816526	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816527	Identifier	udev		4814934	0					
ANR	4816528	Identifier	memory		4814934	1					
ANR	4816529	Argument	"""ESC/P2-Open: WRITECOMP-Commands must be given\\n"""		4814934	1					
ANR	4816530	PrimaryExpression	"""ESC/P2-Open: WRITECOMP-Commands must be given\\n"""		4814934	0					
ANR	4816531	ExpressionStatement	error = - 1	5485:6:197150:197160	4814934	1	True				
ANR	4816532	AssignmentExpression	error = - 1		4814934	0		=			
ANR	4816533	Identifier	error		4814934	0					
ANR	4816534	UnaryOperationExpression	- 1		4814934	1					
ANR	4816535	UnaryOperator	-		4814934	0					
ANR	4816536	PrimaryExpression	1		4814934	1					
ANR	4816537	SwitchStatement	switch ( upd -> choice [ C_FORMAT ] )		4814934	9					
ANR	4816538	Condition	upd -> choice [ C_FORMAT ]	5489:10:197210:197230	4814934	0	True				
ANR	4816539	ArrayIndexing	upd -> choice [ C_FORMAT ]		4814934	0					
ANR	4816540	PtrMemberAccess	upd -> choice		4814934	0					
ANR	4816541	Identifier	upd		4814934	0					
ANR	4816542	Identifier	choice		4814934	1					
ANR	4816543	Identifier	C_FORMAT		4814934	1					
ANR	4816544	CompoundStatement		274:33:9606:9606	4814934	1					
ANR	4816545	Label	case FMT_ESCP2Y :	5490:6:197241:197256	4814934	0	True				
ANR	4816546	Identifier	FMT_ESCP2Y		4814934	0					
ANR	4816547	IfStatement	if ( 1 < upd -> ints [ I_NXPASS ] )		4814934	1					
ANR	4816548	Condition	1 < upd -> ints [ I_NXPASS ]	5491:12:197270:197292	4814934	0	True				
ANR	4816549	RelationalExpression	1 < upd -> ints [ I_NXPASS ]		4814934	0		<			
ANR	4816550	PrimaryExpression	1		4814934	0					
ANR	4816551	ArrayIndexing	upd -> ints [ I_NXPASS ]		4814934	1					
ANR	4816552	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816553	Identifier	upd		4814934	0					
ANR	4816554	Identifier	ints		4814934	1					
ANR	4816555	Identifier	I_NXPASS		4814934	1					
ANR	4816556	CompoundStatement		276:37:9668:9668	4814934	1					
ANR	4816557	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCP2Y cannot handle multiple X-Passes\\n"" )"	5493:15:197353:197455	4814934	0	True				
ANR	4816558	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCP2Y cannot handle multiple X-Passes\\n"" )"		4814934	0					
ANR	4816559	Callee	errprintf		4814934	0					
ANR	4816560	Identifier	errprintf		4814934	0					
ANR	4816561	ArgumentList	udev -> memory		4814934	1					
ANR	4816562	Argument	udev -> memory		4814934	0					
ANR	4816563	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816564	Identifier	udev		4814934	0					
ANR	4816565	Identifier	memory		4814934	1					
ANR	4816566	Argument	"""ESC/P2-Open: FMT_ESCP2Y cannot handle multiple X-Passes\\n"""		4814934	1					
ANR	4816567	PrimaryExpression	"""ESC/P2-Open: FMT_ESCP2Y cannot handle multiple X-Passes\\n"""		4814934	0					
ANR	4816568	ExpressionStatement	error = - 1	5496:12:197476:197486	4814934	1	True				
ANR	4816569	AssignmentExpression	error = - 1		4814934	0		=			
ANR	4816570	Identifier	error		4814934	0					
ANR	4816571	UnaryOperationExpression	- 1		4814934	1					
ANR	4816572	UnaryOperator	-		4814934	0					
ANR	4816573	PrimaryExpression	1		4814934	1					
ANR	4816574	ElseStatement	else		4814934	0					
ANR	4816575	CompoundStatement		282:16:9877:9877	4814934	0					
ANR	4816576	ExpressionStatement	upd -> writer = upd_wrtescp2	5498:12:197518:197544	4814934	0	True				
ANR	4816577	AssignmentExpression	upd -> writer = upd_wrtescp2		4814934	0		=			
ANR	4816578	PtrMemberAccess	upd -> writer		4814934	0					
ANR	4816579	Identifier	upd		4814934	0					
ANR	4816580	Identifier	writer		4814934	1					
ANR	4816581	Identifier	upd_wrtescp2		4814934	1					
ANR	4816582	BreakStatement	break ;	5500:6:197563:197568	4814934	2	True				
ANR	4816583	Label	case FMT_ESCP2XY :	5501:6:197576:197592	4814934	3	True				
ANR	4816584	Identifier	FMT_ESCP2XY		4814934	0					
ANR	4816585	ExpressionStatement	upd -> writer = upd_wrtescp2x	5502:9:197603:197631	4814934	4	True				
ANR	4816586	AssignmentExpression	upd -> writer = upd_wrtescp2x		4814934	0		=			
ANR	4816587	PtrMemberAccess	upd -> writer		4814934	0					
ANR	4816588	Identifier	upd		4814934	0					
ANR	4816589	Identifier	writer		4814934	1					
ANR	4816590	Identifier	upd_wrtescp2x		4814934	1					
ANR	4816591	ExpressionStatement	upd -> nlimits = upd -> ints [ I_NXPASS ]	5503:9:197642:197676	4814934	5	True				
ANR	4816592	AssignmentExpression	upd -> nlimits = upd -> ints [ I_NXPASS ]		4814934	0		=			
ANR	4816593	PtrMemberAccess	upd -> nlimits		4814934	0					
ANR	4816594	Identifier	upd		4814934	0					
ANR	4816595	Identifier	nlimits		4814934	1					
ANR	4816596	ArrayIndexing	upd -> ints [ I_NXPASS ]		4814934	1					
ANR	4816597	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816598	Identifier	upd		4814934	0					
ANR	4816599	Identifier	ints		4814934	1					
ANR	4816600	Identifier	I_NXPASS		4814934	1					
ANR	4816601	IfStatement	if ( 1 == upd -> ints [ I_NXPASS ] )		4814934	6					
ANR	4816602	Condition	1 == upd -> ints [ I_NXPASS ]	5505:15:197731:197754	4814934	0	True				
ANR	4816603	EqualityExpression	1 == upd -> ints [ I_NXPASS ]		4814934	0		==			
ANR	4816604	PrimaryExpression	1		4814934	0					
ANR	4816605	ArrayIndexing	upd -> ints [ I_NXPASS ]		4814934	1					
ANR	4816606	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816607	Identifier	upd		4814934	0					
ANR	4816608	Identifier	ints		4814934	1					
ANR	4816609	Identifier	I_NXPASS		4814934	1					
ANR	4816610	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCP2XY should not be used with 1X-Pass\\n"" )"	5506:15:197772:197875	4814934	1	True				
ANR	4816611	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCP2XY should not be used with 1X-Pass\\n"" )"		4814934	0					
ANR	4816612	Callee	errprintf		4814934	0					
ANR	4816613	Identifier	errprintf		4814934	0					
ANR	4816614	ArgumentList	udev -> memory		4814934	1					
ANR	4816615	Argument	udev -> memory		4814934	0					
ANR	4816616	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816617	Identifier	udev		4814934	0					
ANR	4816618	Identifier	memory		4814934	1					
ANR	4816619	Argument	"""ESC/P2-Open: FMT_ESCP2XY should not be used with 1X-Pass\\n"""		4814934	1					
ANR	4816620	PrimaryExpression	"""ESC/P2-Open: FMT_ESCP2XY should not be used with 1X-Pass\\n"""		4814934	0					
ANR	4816621	BreakStatement	break ;	5509:6:197890:197895	4814934	7	True				
ANR	4816622	Label	case FMT_ESCNMY :	5510:6:197903:197918	4814934	8	True				
ANR	4816623	Identifier	FMT_ESCNMY		4814934	0					
ANR	4816624	IfStatement	if ( 1 < upd -> ints [ I_NXPASS ] )		4814934	9					
ANR	4816625	Condition	1 < upd -> ints [ I_NXPASS ]	5511:12:197932:197954	4814934	0	True				
ANR	4816626	RelationalExpression	1 < upd -> ints [ I_NXPASS ]		4814934	0		<			
ANR	4816627	PrimaryExpression	1		4814934	0					
ANR	4816628	ArrayIndexing	upd -> ints [ I_NXPASS ]		4814934	1					
ANR	4816629	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816630	Identifier	upd		4814934	0					
ANR	4816631	Identifier	ints		4814934	1					
ANR	4816632	Identifier	I_NXPASS		4814934	1					
ANR	4816633	CompoundStatement		296:37:10330:10330	4814934	1					
ANR	4816634	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCNMY cannot handle multiple X-Passes\\n"" )"	5513:15:198015:198117	4814934	0	True				
ANR	4816635	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: FMT_ESCNMY cannot handle multiple X-Passes\\n"" )"		4814934	0					
ANR	4816636	Callee	errprintf		4814934	0					
ANR	4816637	Identifier	errprintf		4814934	0					
ANR	4816638	ArgumentList	udev -> memory		4814934	1					
ANR	4816639	Argument	udev -> memory		4814934	0					
ANR	4816640	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816641	Identifier	udev		4814934	0					
ANR	4816642	Identifier	memory		4814934	1					
ANR	4816643	Argument	"""ESC/P2-Open: FMT_ESCNMY cannot handle multiple X-Passes\\n"""		4814934	1					
ANR	4816644	PrimaryExpression	"""ESC/P2-Open: FMT_ESCNMY cannot handle multiple X-Passes\\n"""		4814934	0					
ANR	4816645	ExpressionStatement	error = - 1	5516:12:198138:198148	4814934	1	True				
ANR	4816646	AssignmentExpression	error = - 1		4814934	0		=			
ANR	4816647	Identifier	error		4814934	0					
ANR	4816648	UnaryOperationExpression	- 1		4814934	1					
ANR	4816649	UnaryOperator	-		4814934	0					
ANR	4816650	PrimaryExpression	1		4814934	1					
ANR	4816651	ElseStatement	else		4814934	0					
ANR	4816652	CompoundStatement		302:16:10539:10539	4814934	0					
ANR	4816653	ExpressionStatement	upd -> writer = upd_wrtescnm	5518:12:198180:198206	4814934	0	True				
ANR	4816654	AssignmentExpression	upd -> writer = upd_wrtescnm		4814934	0		=			
ANR	4816655	PtrMemberAccess	upd -> writer		4814934	0					
ANR	4816656	Identifier	upd		4814934	0					
ANR	4816657	Identifier	writer		4814934	1					
ANR	4816658	Identifier	upd_wrtescnm		4814934	1					
ANR	4816659	BreakStatement	break ;	5520:6:198225:198230	4814934	10	True				
ANR	4816660	Label	default :	5521:6:198238:198245	4814934	11	True				
ANR	4816661	Identifier	default		4814934	0					
ANR	4816662	ExpressionStatement	"errprintf ( udev -> memory , ""ESC/P2-Open: %d is not a ESC/P2-Format\\n"" , upd -> choice [ C_FORMAT ] )"	5523:12:198297:198417	4814934	12	True				
ANR	4816663	CallExpression	"errprintf ( udev -> memory , ""ESC/P2-Open: %d is not a ESC/P2-Format\\n"" , upd -> choice [ C_FORMAT ] )"		4814934	0					
ANR	4816664	Callee	errprintf		4814934	0					
ANR	4816665	Identifier	errprintf		4814934	0					
ANR	4816666	ArgumentList	udev -> memory		4814934	1					
ANR	4816667	Argument	udev -> memory		4814934	0					
ANR	4816668	PtrMemberAccess	udev -> memory		4814934	0					
ANR	4816669	Identifier	udev		4814934	0					
ANR	4816670	Identifier	memory		4814934	1					
ANR	4816671	Argument	"""ESC/P2-Open: %d is not a ESC/P2-Format\\n"""		4814934	1					
ANR	4816672	PrimaryExpression	"""ESC/P2-Open: %d is not a ESC/P2-Format\\n"""		4814934	0					
ANR	4816673	Argument	upd -> choice [ C_FORMAT ]		4814934	2					
ANR	4816674	ArrayIndexing	upd -> choice [ C_FORMAT ]		4814934	0					
ANR	4816675	PtrMemberAccess	upd -> choice		4814934	0					
ANR	4816676	Identifier	upd		4814934	0					
ANR	4816677	Identifier	choice		4814934	1					
ANR	4816678	Identifier	C_FORMAT		4814934	1					
ANR	4816679	ExpressionStatement	error = - 1	5527:9:198435:198446	4814934	13	True				
ANR	4816680	AssignmentExpression	error = - 1		4814934	0		=			
ANR	4816681	Identifier	error		4814934	0					
ANR	4816682	UnaryOperationExpression	- 1		4814934	1					
ANR	4816683	UnaryOperator	-		4814934	0					
ANR	4816684	PrimaryExpression	1		4814934	1					
ANR	4816685	BreakStatement	break ;	5528:6:198454:198459	4814934	14	True				
ANR	4816686	IfStatement	if ( 0 <= error )		4814934	10					
ANR	4816687	Condition	0 <= error	5540:6:198671:198680	4814934	0	True				
ANR	4816688	RelationalExpression	0 <= error		4814934	0		<=			
ANR	4816689	PrimaryExpression	0		4814934	0					
ANR	4816690	Identifier	error		4814934	1					
ANR	4816691	CompoundStatement		326:6:11064:11086	4814934	1					
ANR	4816692	IdentifierDeclStatement	"int32_t i , noutbuf , need ;"	5541:6:198691:198713	4814934	0	True				
ANR	4816693	IdentifierDecl	i		4814934	0					
ANR	4816694	IdentifierDeclType	int32_t		4814934	0					
ANR	4816695	Identifier	i		4814934	1					
ANR	4816696	IdentifierDecl	noutbuf		4814934	1					
ANR	4816697	IdentifierDeclType	int32_t		4814934	0					
ANR	4816698	Identifier	noutbuf		4814934	1					
ANR	4816699	IdentifierDecl	need		4814934	2					
ANR	4816700	IdentifierDeclType	int32_t		4814934	0					
ANR	4816701	Identifier	need		4814934	1					
ANR	4816702	IfStatement	if ( 0 < upd -> strings [ S_YMOVE ] . size )		4814934	1					
ANR	4816703	Condition	0 < upd -> strings [ S_YMOVE ] . size	5543:9:198750:198779	4814934	0	True				
ANR	4816704	RelationalExpression	0 < upd -> strings [ S_YMOVE ] . size		4814934	0		<			
ANR	4816705	PrimaryExpression	0		4814934	0					
ANR	4816706	MemberAccess	upd -> strings [ S_YMOVE ] . size		4814934	1					
ANR	4816707	ArrayIndexing	upd -> strings [ S_YMOVE ]		4814934	0					
ANR	4816708	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4816709	Identifier	upd		4814934	0					
ANR	4816710	Identifier	strings		4814934	1					
ANR	4816711	Identifier	S_YMOVE		4814934	1					
ANR	4816712	Identifier	size		4814934	1					
ANR	4816713	CompoundStatement		328:41:11155:11155	4814934	1					
ANR	4816714	ExpressionStatement	noutbuf = upd -> strings [ S_YMOVE ] . size + 2	5544:9:198793:198833	4814934	0	True				
ANR	4816715	AssignmentExpression	noutbuf = upd -> strings [ S_YMOVE ] . size + 2		4814934	0		=			
ANR	4816716	Identifier	noutbuf		4814934	0					
ANR	4816717	AdditiveExpression	upd -> strings [ S_YMOVE ] . size + 2		4814934	1		+			
ANR	4816718	MemberAccess	upd -> strings [ S_YMOVE ] . size		4814934	0					
ANR	4816719	ArrayIndexing	upd -> strings [ S_YMOVE ]		4814934	0					
ANR	4816720	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4816721	Identifier	upd		4814934	0					
ANR	4816722	Identifier	strings		4814934	1					
ANR	4816723	Identifier	S_YMOVE		4814934	1					
ANR	4816724	Identifier	size		4814934	1					
ANR	4816725	PrimaryExpression	2		4814934	1					
ANR	4816726	ElseStatement	else		4814934	0					
ANR	4816727	CompoundStatement		331:9:11232:11255	4814934	0					
ANR	4816728	IdentifierDeclStatement	int nmax = upd -> pheight ;	5546:9:198859:198882	4814934	0	True				
ANR	4816729	IdentifierDecl	nmax = upd -> pheight		4814934	0					
ANR	4816730	IdentifierDeclType	int		4814934	0					
ANR	4816731	Identifier	nmax		4814934	1					
ANR	4816732	AssignmentExpression	nmax = upd -> pheight		4814934	2		=			
ANR	4816733	Identifier	nmax		4814934	0					
ANR	4816734	PtrMemberAccess	upd -> pheight		4814934	1					
ANR	4816735	Identifier	upd		4814934	0					
ANR	4816736	Identifier	pheight		4814934	1					
ANR	4816737	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		4814934	1					
ANR	4816738	Condition	1 < upd -> ints [ I_YSTEP ]	5547:18:198902:198923	4814934	0	True				
ANR	4816739	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		4814934	0		<			
ANR	4816740	PrimaryExpression	1		4814934	0					
ANR	4816741	ArrayIndexing	upd -> ints [ I_YSTEP ]		4814934	1					
ANR	4816742	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816743	Identifier	upd		4814934	0					
ANR	4816744	Identifier	ints		4814934	1					
ANR	4816745	Identifier	I_YSTEP		4814934	1					
ANR	4816746	ExpressionStatement	nmax /= upd -> ints [ I_YSTEP ]	5547:42:198926:198953	4814934	1	True				
ANR	4816747	AssignmentExpression	nmax /= upd -> ints [ I_YSTEP ]		4814934	0		/=			
ANR	4816748	Identifier	nmax		4814934	0					
ANR	4816749	ArrayIndexing	upd -> ints [ I_YSTEP ]		4814934	1					
ANR	4816750	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816751	Identifier	upd		4814934	0					
ANR	4816752	Identifier	ints		4814934	1					
ANR	4816753	Identifier	I_YSTEP		4814934	1					
ANR	4816754	ElseStatement	else		4814934	0					
ANR	4816755	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		4814934	0					
ANR	4816756	Condition	- 1 > upd -> ints [ I_YSTEP ]	5548:17:198972:198994	4814934	0	True				
ANR	4816757	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		4814934	0		>			
ANR	4816758	UnaryOperationExpression	- 1		4814934	0					
ANR	4816759	UnaryOperator	-		4814934	0					
ANR	4816760	PrimaryExpression	1		4814934	1					
ANR	4816761	ArrayIndexing	upd -> ints [ I_YSTEP ]		4814934	1					
ANR	4816762	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816763	Identifier	upd		4814934	0					
ANR	4816764	Identifier	ints		4814934	1					
ANR	4816765	Identifier	I_YSTEP		4814934	1					
ANR	4816766	ExpressionStatement	nmax *= - upd -> ints [ I_YSTEP ]	5548:42:198997:199024	4814934	1	True				
ANR	4816767	AssignmentExpression	nmax *= - upd -> ints [ I_YSTEP ]		4814934	0		*=			
ANR	4816768	Identifier	nmax		4814934	0					
ANR	4816769	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		4814934	1					
ANR	4816770	UnaryOperator	-		4814934	0					
ANR	4816771	ArrayIndexing	upd -> ints [ I_YSTEP ]		4814934	1					
ANR	4816772	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816773	Identifier	upd		4814934	0					
ANR	4816774	Identifier	ints		4814934	1					
ANR	4816775	Identifier	I_YSTEP		4814934	1					
ANR	4816776	ExpressionStatement	noutbuf = 2 * upd -> strings [ S_SETLF ] . size + 2	5549:9:199035:199080	4814934	2	True				
ANR	4816777	AssignmentExpression	noutbuf = 2 * upd -> strings [ S_SETLF ] . size + 2		4814934	0		=			
ANR	4816778	Identifier	noutbuf		4814934	0					
ANR	4816779	AdditiveExpression	2 * upd -> strings [ S_SETLF ] . size + 2		4814934	1		+			
ANR	4816780	MultiplicativeExpression	2 * upd -> strings [ S_SETLF ] . size		4814934	0		*			
ANR	4816781	PrimaryExpression	2		4814934	0					
ANR	4816782	MemberAccess	upd -> strings [ S_SETLF ] . size		4814934	1					
ANR	4816783	ArrayIndexing	upd -> strings [ S_SETLF ]		4814934	0					
ANR	4816784	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4816785	Identifier	upd		4814934	0					
ANR	4816786	Identifier	strings		4814934	1					
ANR	4816787	Identifier	S_SETLF		4814934	1					
ANR	4816788	Identifier	size		4814934	1					
ANR	4816789	PrimaryExpression	2		4814934	1					
ANR	4816790	ExpressionStatement	noutbuf += nmax / 255 + 1	5550:9:199091:199114	4814934	3	True				
ANR	4816791	AssignmentExpression	noutbuf += nmax / 255 + 1		4814934	0		+=			
ANR	4816792	Identifier	noutbuf		4814934	0					
ANR	4816793	AdditiveExpression	nmax / 255 + 1		4814934	1		+			
ANR	4816794	MultiplicativeExpression	nmax / 255		4814934	0		/			
ANR	4816795	Identifier	nmax		4814934	0					
ANR	4816796	PrimaryExpression	255		4814934	1					
ANR	4816797	PrimaryExpression	1		4814934	1					
ANR	4816798	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		4814934	2					
ANR	4816799	Condition	1 < upd -> ints [ I_YSTEP ]	5553:9:199134:199155	4814934	0	True				
ANR	4816800	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		4814934	0		<			
ANR	4816801	PrimaryExpression	1		4814934	0					
ANR	4816802	ArrayIndexing	upd -> ints [ I_YSTEP ]		4814934	1					
ANR	4816803	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816804	Identifier	upd		4814934	0					
ANR	4816805	Identifier	ints		4814934	1					
ANR	4816806	Identifier	I_YSTEP		4814934	1					
ANR	4816807	ExpressionStatement	noutbuf += ( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size	5554:9:199167:199229	4814934	1	True				
ANR	4816808	AssignmentExpression	noutbuf += ( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size		4814934	0		+=			
ANR	4816809	Identifier	noutbuf		4814934	0					
ANR	4816810	MultiplicativeExpression	( upd -> ints [ I_YSTEP ] - 1 ) * upd -> strings [ S_YSTEP ] . size		4814934	1		*			
ANR	4816811	AdditiveExpression	upd -> ints [ I_YSTEP ] - 1		4814934	0		-			
ANR	4816812	ArrayIndexing	upd -> ints [ I_YSTEP ]		4814934	0					
ANR	4816813	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816814	Identifier	upd		4814934	0					
ANR	4816815	Identifier	ints		4814934	1					
ANR	4816816	Identifier	I_YSTEP		4814934	1					
ANR	4816817	PrimaryExpression	1		4814934	1					
ANR	4816818	MemberAccess	upd -> strings [ S_YSTEP ] . size		4814934	1					
ANR	4816819	ArrayIndexing	upd -> strings [ S_YSTEP ]		4814934	0					
ANR	4816820	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4816821	Identifier	upd		4814934	0					
ANR	4816822	Identifier	strings		4814934	1					
ANR	4816823	Identifier	S_YSTEP		4814934	1					
ANR	4816824	Identifier	size		4814934	1					
ANR	4816825	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		4814934	3					
ANR	4816826	Condition	0 == upd -> strings [ S_XMOVE ] . size	5557:9:199267:199297	4814934	0	True				
ANR	4816827	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4814934	0		==			
ANR	4816828	PrimaryExpression	0		4814934	0					
ANR	4816829	MemberAccess	upd -> strings [ S_XMOVE ] . size		4814934	1					
ANR	4816830	ArrayIndexing	upd -> strings [ S_XMOVE ]		4814934	0					
ANR	4816831	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4816832	Identifier	upd		4814934	0					
ANR	4816833	Identifier	strings		4814934	1					
ANR	4816834	Identifier	S_XMOVE		4814934	1					
ANR	4816835	Identifier	size		4814934	1					
ANR	4816836	CompoundStatement		342:42:11673:11673	4814934	1					
ANR	4816837	ExpressionStatement	noutbuf += 1	5558:9:199311:199323	4814934	0	True				
ANR	4816838	AssignmentExpression	noutbuf += 1		4814934	0		+=			
ANR	4816839	Identifier	noutbuf		4814934	0					
ANR	4816840	PrimaryExpression	1		4814934	1					
ANR	4816841	ExpressionStatement	noutbuf += ( upd -> ints [ I_NXPASS ] - 1 ) * upd -> strings [ S_XSTEP ] . size	5559:9:199347:199410	4814934	1	True				
ANR	4816842	AssignmentExpression	noutbuf += ( upd -> ints [ I_NXPASS ] - 1 ) * upd -> strings [ S_XSTEP ] . size		4814934	0		+=			
ANR	4816843	Identifier	noutbuf		4814934	0					
ANR	4816844	MultiplicativeExpression	( upd -> ints [ I_NXPASS ] - 1 ) * upd -> strings [ S_XSTEP ] . size		4814934	1		*			
ANR	4816845	AdditiveExpression	upd -> ints [ I_NXPASS ] - 1		4814934	0		-			
ANR	4816846	ArrayIndexing	upd -> ints [ I_NXPASS ]		4814934	0					
ANR	4816847	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816848	Identifier	upd		4814934	0					
ANR	4816849	Identifier	ints		4814934	1					
ANR	4816850	Identifier	I_NXPASS		4814934	1					
ANR	4816851	PrimaryExpression	1		4814934	1					
ANR	4816852	MemberAccess	upd -> strings [ S_XSTEP ] . size		4814934	1					
ANR	4816853	ArrayIndexing	upd -> strings [ S_XSTEP ]		4814934	0					
ANR	4816854	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4816855	Identifier	upd		4814934	0					
ANR	4816856	Identifier	strings		4814934	1					
ANR	4816857	Identifier	S_XSTEP		4814934	1					
ANR	4816858	Identifier	size		4814934	1					
ANR	4816859	ElseStatement	else		4814934	0					
ANR	4816860	CompoundStatement		345:13:11798:11798	4814934	0					
ANR	4816861	ExpressionStatement	noutbuf += upd -> strings [ S_XMOVE ] . size + 2	5561:9:199436:199478	4814934	0	True				
ANR	4816862	AssignmentExpression	noutbuf += upd -> strings [ S_XMOVE ] . size + 2		4814934	0		+=			
ANR	4816863	Identifier	noutbuf		4814934	0					
ANR	4816864	AdditiveExpression	upd -> strings [ S_XMOVE ] . size + 2		4814934	1		+			
ANR	4816865	MemberAccess	upd -> strings [ S_XMOVE ] . size		4814934	0					
ANR	4816866	ArrayIndexing	upd -> strings [ S_XMOVE ]		4814934	0					
ANR	4816867	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4816868	Identifier	upd		4814934	0					
ANR	4816869	Identifier	strings		4814934	1					
ANR	4816870	Identifier	S_XMOVE		4814934	1					
ANR	4816871	Identifier	size		4814934	1					
ANR	4816872	PrimaryExpression	2		4814934	1					
ANR	4816873	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		4814934	1					
ANR	4816874	Condition	1 < upd -> ints [ I_XSTEP ]	5563:12:199493:199514	4814934	0	True				
ANR	4816875	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		4814934	0		<			
ANR	4816876	PrimaryExpression	1		4814934	0					
ANR	4816877	ArrayIndexing	upd -> ints [ I_XSTEP ]		4814934	1					
ANR	4816878	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816879	Identifier	upd		4814934	0					
ANR	4816880	Identifier	ints		4814934	1					
ANR	4816881	Identifier	I_XSTEP		4814934	1					
ANR	4816882	ExpressionStatement	noutbuf += ( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size	5564:12:199529:199591	4814934	1	True				
ANR	4816883	AssignmentExpression	noutbuf += ( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size		4814934	0		+=			
ANR	4816884	Identifier	noutbuf		4814934	0					
ANR	4816885	MultiplicativeExpression	( upd -> ints [ I_XSTEP ] - 1 ) * upd -> strings [ S_XSTEP ] . size		4814934	1		*			
ANR	4816886	AdditiveExpression	upd -> ints [ I_XSTEP ] - 1		4814934	0		-			
ANR	4816887	ArrayIndexing	upd -> ints [ I_XSTEP ]		4814934	0					
ANR	4816888	PtrMemberAccess	upd -> ints		4814934	0					
ANR	4816889	Identifier	upd		4814934	0					
ANR	4816890	Identifier	ints		4814934	1					
ANR	4816891	Identifier	I_XSTEP		4814934	1					
ANR	4816892	PrimaryExpression	1		4814934	1					
ANR	4816893	MemberAccess	upd -> strings [ S_XSTEP ] . size		4814934	1					
ANR	4816894	ArrayIndexing	upd -> strings [ S_XSTEP ]		4814934	0					
ANR	4816895	PtrMemberAccess	upd -> strings		4814934	0					
ANR	4816896	Identifier	upd		4814934	0					
ANR	4816897	Identifier	strings		4814934	1					
ANR	4816898	Identifier	S_XSTEP		4814934	1					
ANR	4816899	Identifier	size		4814934	1					
ANR	4816900	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . size )		4814934	4					
ANR	4816901	Condition	0 < upd -> string_a [ SA_SETCOMP ] . size	5568:9:199643:199676	4814934	0	True				
ANR	4816902	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		4814934	0		<			
ANR	4816903	PrimaryExpression	0		4814934	0					
ANR	4816904	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4814934	1					
ANR	4816905	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4814934	0					
ANR	4816906	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816907	Identifier	upd		4814934	0					
ANR	4816908	Identifier	string_a		4814934	1					
ANR	4816909	Identifier	SA_SETCOMP		4814934	1					
ANR	4816910	Identifier	size		4814934	1					
ANR	4816911	CompoundStatement		353:45:12052:12052	4814934	1					
ANR	4816912	ExpressionStatement	need = 0	5569:10:199691:199699	4814934	0	True				
ANR	4816913	AssignmentExpression	need = 0		4814934	0		=			
ANR	4816914	Identifier	need		4814934	0					
ANR	4816915	PrimaryExpression	0		4814934	1					
ANR	4816916	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		4814934	1					
ANR	4816917	ForInit	i = 0 ;	5570:14:199715:199720	4814934	0	True				
ANR	4816918	AssignmentExpression	i = 0		4814934	0		=			
ANR	4816919	Identifier	i		4814934	0					
ANR	4816920	PrimaryExpression	0		4814934	1					
ANR	4816921	Condition	i < upd -> ocomp	5570:21:199722:199735	4814934	1	True				
ANR	4816922	RelationalExpression	i < upd -> ocomp		4814934	0		<			
ANR	4816923	Identifier	i		4814934	0					
ANR	4816924	PtrMemberAccess	upd -> ocomp		4814934	1					
ANR	4816925	Identifier	upd		4814934	0					
ANR	4816926	Identifier	ocomp		4814934	1					
ANR	4816927	UnaryExpression	++ i	5570:37:199738:199740	4814934	2	True				
ANR	4816928	IncDec	++		4814934	0					
ANR	4816929	Identifier	i		4814934	1					
ANR	4816930	IfStatement	if ( need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size )		4814934	3					
ANR	4816931	Condition	need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size	5571:16:199759:199803	4814934	0	True				
ANR	4816932	RelationalExpression	need < upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4814934	0		<			
ANR	4816933	Identifier	need		4814934	0					
ANR	4816934	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4814934	1					
ANR	4816935	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ i ]		4814934	0					
ANR	4816936	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4814934	0					
ANR	4816937	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4814934	0					
ANR	4816938	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816939	Identifier	upd		4814934	0					
ANR	4816940	Identifier	string_a		4814934	1					
ANR	4816941	Identifier	SA_SETCOMP		4814934	1					
ANR	4816942	Identifier	data		4814934	1					
ANR	4816943	Identifier	i		4814934	1					
ANR	4816944	Identifier	size		4814934	1					
ANR	4816945	ExpressionStatement	need = upd -> string_a [ SA_SETCOMP ] . data [ i ] . size	5572:16:199822:199867	4814934	1	True				
ANR	4816946	AssignmentExpression	need = upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4814934	0		=			
ANR	4816947	Identifier	need		4814934	0					
ANR	4816948	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4814934	1					
ANR	4816949	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ i ]		4814934	0					
ANR	4816950	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4814934	0					
ANR	4816951	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4814934	0					
ANR	4816952	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816953	Identifier	upd		4814934	0					
ANR	4816954	Identifier	string_a		4814934	1					
ANR	4816955	Identifier	SA_SETCOMP		4814934	1					
ANR	4816956	Identifier	data		4814934	1					
ANR	4816957	Identifier	i		4814934	1					
ANR	4816958	Identifier	size		4814934	1					
ANR	4816959	ExpressionStatement	noutbuf += need	5573:10:199879:199894	4814934	2	True				
ANR	4816960	AssignmentExpression	noutbuf += need		4814934	0		+=			
ANR	4816961	Identifier	noutbuf		4814934	0					
ANR	4816962	Identifier	need		4814934	1					
ANR	4816963	ExpressionStatement	need = 0	5577:6:199942:199950	4814934	5	True				
ANR	4816964	AssignmentExpression	need = 0		4814934	0		=			
ANR	4816965	Identifier	need		4814934	0					
ANR	4816966	PrimaryExpression	0		4814934	1					
ANR	4816967	ForStatement	for ( i = 0 ; i < upd -> ocomp ; ++ i )		4814934	6					
ANR	4816968	ForInit	i = 0 ;	5578:10:199962:199967	4814934	0	True				
ANR	4816969	AssignmentExpression	i = 0		4814934	0		=			
ANR	4816970	Identifier	i		4814934	0					
ANR	4816971	PrimaryExpression	0		4814934	1					
ANR	4816972	Condition	i < upd -> ocomp	5578:17:199969:199982	4814934	1	True				
ANR	4816973	RelationalExpression	i < upd -> ocomp		4814934	0		<			
ANR	4816974	Identifier	i		4814934	0					
ANR	4816975	PtrMemberAccess	upd -> ocomp		4814934	1					
ANR	4816976	Identifier	upd		4814934	0					
ANR	4816977	Identifier	ocomp		4814934	1					
ANR	4816978	UnaryExpression	++ i	5578:33:199985:199987	4814934	2	True				
ANR	4816979	IncDec	++		4814934	0					
ANR	4816980	Identifier	i		4814934	1					
ANR	4816981	IfStatement	if ( need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size )		4814934	3					
ANR	4816982	Condition	need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size	5579:12:200002:200048	4814934	0	True				
ANR	4816983	RelationalExpression	need < upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4814934	0		<			
ANR	4816984	Identifier	need		4814934	0					
ANR	4816985	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4814934	1					
ANR	4816986	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ i ]		4814934	0					
ANR	4816987	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4814934	0					
ANR	4816988	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4814934	0					
ANR	4816989	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4816990	Identifier	upd		4814934	0					
ANR	4816991	Identifier	string_a		4814934	1					
ANR	4816992	Identifier	SA_WRITECOMP		4814934	1					
ANR	4816993	Identifier	data		4814934	1					
ANR	4816994	Identifier	i		4814934	1					
ANR	4816995	Identifier	size		4814934	1					
ANR	4816996	ExpressionStatement	need = upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size	5580:12:200063:200110	4814934	1	True				
ANR	4816997	AssignmentExpression	need = upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4814934	0		=			
ANR	4816998	Identifier	need		4814934	0					
ANR	4816999	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4814934	1					
ANR	4817000	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ i ]		4814934	0					
ANR	4817001	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4814934	0					
ANR	4817002	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4814934	0					
ANR	4817003	PtrMemberAccess	upd -> string_a		4814934	0					
ANR	4817004	Identifier	upd		4814934	0					
ANR	4817005	Identifier	string_a		4814934	1					
ANR	4817006	Identifier	SA_WRITECOMP		4814934	1					
ANR	4817007	Identifier	data		4814934	1					
ANR	4817008	Identifier	i		4814934	1					
ANR	4817009	Identifier	size		4814934	1					
ANR	4817010	ExpressionStatement	noutbuf += need + 2	5581:6:200118:200137	4814934	7	True				
ANR	4817011	AssignmentExpression	noutbuf += need + 2		4814934	0		+=			
ANR	4817012	Identifier	noutbuf		4814934	0					
ANR	4817013	AdditiveExpression	need + 2		4814934	1		+			
ANR	4817014	Identifier	need		4814934	0					
ANR	4817015	PrimaryExpression	2		4814934	1					
ANR	4817016	ExpressionStatement	noutbuf += 2 * upd -> nbytes + ( upd -> nbytes + 127 ) / 128	5584:6:200167:200219	4814934	8	True				
ANR	4817017	AssignmentExpression	noutbuf += 2 * upd -> nbytes + ( upd -> nbytes + 127 ) / 128		4814934	0		+=			
ANR	4817018	Identifier	noutbuf		4814934	0					
ANR	4817019	AdditiveExpression	2 * upd -> nbytes + ( upd -> nbytes + 127 ) / 128		4814934	1		+			
ANR	4817020	MultiplicativeExpression	2 * upd -> nbytes		4814934	0		*			
ANR	4817021	PrimaryExpression	2		4814934	0					
ANR	4817022	PtrMemberAccess	upd -> nbytes		4814934	1					
ANR	4817023	Identifier	upd		4814934	0					
ANR	4817024	Identifier	nbytes		4814934	1					
ANR	4817025	MultiplicativeExpression	( upd -> nbytes + 127 ) / 128		4814934	1		/			
ANR	4817026	AdditiveExpression	upd -> nbytes + 127		4814934	0		+			
ANR	4817027	PtrMemberAccess	upd -> nbytes		4814934	0					
ANR	4817028	Identifier	upd		4814934	0					
ANR	4817029	Identifier	nbytes		4814934	1					
ANR	4817030	PrimaryExpression	127		4814934	1					
ANR	4817031	PrimaryExpression	128		4814934	1					
ANR	4817032	ExpressionStatement	upd -> noutbuf = noutbuf	5586:6:200228:200255	4814934	9	True				
ANR	4817033	AssignmentExpression	upd -> noutbuf = noutbuf		4814934	0		=			
ANR	4817034	PtrMemberAccess	upd -> noutbuf		4814934	0					
ANR	4817035	Identifier	upd		4814934	0					
ANR	4817036	Identifier	noutbuf		4814934	1					
ANR	4817037	Identifier	noutbuf		4814934	1					
ANR	4817038	ExpressionStatement	error = 1	5587:6:200263:200284	4814934	10	True				
ANR	4817039	AssignmentExpression	error = 1		4814934	0		=			
ANR	4817040	Identifier	error		4814934	0					
ANR	4817041	PrimaryExpression	1		4814934	1					
ANR	4817042	ReturnStatement	return error ;	5590:3:200295:200307	4814934	11	True				
ANR	4817043	Identifier	error		4814934	0					
ANR	4817044	ReturnType	static int		4814934	1					
ANR	4817045	Identifier	upd_open_wrtescp2		4814934	2					
ANR	4817046	ParameterList	upd_device * udev		4814934	3					
ANR	4817047	Parameter	upd_device * udev	5215:18:187608:187623	4814934	0	True				
ANR	4817048	ParameterType	upd_device *		4814934	0					
ANR	4817049	Identifier	udev		4814934	1					
ANR	4817050	CFGEntryNode	ENTRY		4814934		True				
ANR	4817051	CFGExitNode	EXIT		4814934		True				
ANR	4817052	Symbol	I_PINS2WRITE		4814934						
ANR	4817053	Symbol	* upd -> int_a		4814934						
ANR	4817054	Symbol	* bp ++		4814934						
ANR	4817055	Symbol	nmax		4814934						
ANR	4817056	Symbol	upd -> int_a [ IA_ROWMASK ] . size		4814934						
ANR	4817057	Symbol	* I_YSTEP		4814934						
ANR	4817058	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		4814934						
ANR	4817059	Symbol	* udev		4814934						
ANR	4817060	Symbol	* bp		4814934						
ANR	4817061	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ i ] . size		4814934						
ANR	4817062	Symbol	S_BEGIN		4814934						
ANR	4817063	Symbol	state		4814934						
ANR	4817064	Symbol	dev_b_margin		4814934						
ANR	4817065	Symbol	udev -> height		4814934						
ANR	4817066	Symbol	upd -> nbytes		4814934						
ANR	4817067	Symbol	upd -> valptr		4814934						
ANR	4817068	Symbol	upd -> int_a [ IA_SCNOFS ] . data		4814934						
ANR	4817069	Symbol	dev_t_margin		4814934						
ANR	4817070	Symbol	* I_PATRPT		4814934						
ANR	4817071	Symbol	C_FORMAT		4814934						
ANR	4817072	Symbol	IA_ROWMASK		4814934						
ANR	4817073	Symbol	S_SETLF		4814934						
ANR	4817074	Symbol	upd_cast		4814934						
ANR	4817075	Symbol	upd -> string_a [ SA_SETCOMP ] . data		4814934						
ANR	4817076	Symbol	upd		4814934						
ANR	4817077	Symbol	* SA_WRITECOMP		4814934						
ANR	4817078	Symbol	I_NXPASS		4814934						
ANR	4817079	Symbol	* IA_ROWMASK		4814934						
ANR	4817080	Symbol	* I_NYPASS		4814934						
ANR	4817081	Symbol	* * SA_SETCOMP		4814934						
ANR	4817082	Symbol	ap		4814934						
ANR	4817083	Symbol	B_YABS		4814934						
ANR	4817084	Symbol	IA_SCNOFS		4814934						
ANR	4817085	Symbol	upd -> strings [ S_SETLF ] . size		4814934						
ANR	4817086	Symbol	upd -> pheight		4814934						
ANR	4817087	Symbol	* S_BEGIN		4814934						
ANR	4817088	Symbol	* C_FORMAT		4814934						
ANR	4817089	Symbol	upd -> strings		4814934						
ANR	4817090	Symbol	bp		4814934						
ANR	4817091	Symbol	* upd -> choice		4814934						
ANR	4817092	Symbol	upd -> flags		4814934						
ANR	4817093	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		4814934						
ANR	4817094	Symbol	* upd		4814934						
ANR	4817095	Symbol	* S_XMOVE		4814934						
ANR	4817096	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ i ] . size		4814934						
ANR	4817097	Symbol	B_TOPMARGIN		4814934						
ANR	4817098	Symbol	upd -> ocomp		4814934						
ANR	4817099	Symbol	* upd -> strings		4814934						
ANR	4817100	Symbol	upd -> strings [ S_YMOVE ] . size		4814934						
ANR	4817101	Symbol	* S_XSTEP		4814934						
ANR	4817102	Symbol	* IA_SCNOFS		4814934						
ANR	4817103	Symbol	i		4814934						
ANR	4817104	Symbol	I_XSTEP		4814934						
ANR	4817105	Symbol	* I_ROWS		4814934						
ANR	4817106	Symbol	upd -> noutbuf		4814934						
ANR	4817107	Symbol	upd -> strings [ S_BEGIN ] . data		4814934						
ANR	4817108	Symbol	upd_wrtescp2x		4814934						
ANR	4817109	Symbol	B_PAGELENGTH		4814934						
ANR	4817110	Symbol	S_YMOVE		4814934						
ANR	4817111	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		4814934						
ANR	4817112	Symbol	upd -> writer		4814934						
ANR	4817113	Symbol	ap [ i ] . data		4814934						
ANR	4817114	Symbol	S_YSTEP		4814934						
ANR	4817115	Symbol	* * upd		4814934						
ANR	4817116	Symbol	ratio		4814934						
ANR	4817117	Symbol	S_XMOVE		4814934						
ANR	4817118	Symbol	* upd -> string_a		4814934						
ANR	4817119	Symbol	SA_SETCOMP		4814934						
ANR	4817120	Symbol	* S_SETLF		4814934						
ANR	4817121	Symbol	* SA_SETCOMP		4814934						
ANR	4817122	Symbol	upd -> strings [ S_YSTEP ] . size		4814934						
ANR	4817123	Symbol	upd -> strings [ S_XSTEP ] . data		4814934						
ANR	4817124	Symbol	* I_NXPASS		4814934						
ANR	4817125	Symbol	upd -> strings [ S_XMOVE ] . data		4814934						
ANR	4817126	Symbol	upd -> nlimits		4814934						
ANR	4817127	Symbol	upd -> int_a		4814934						
ANR	4817128	Symbol	* I_XSTEP		4814934						
ANR	4817129	Symbol	* * i		4814934						
ANR	4817130	Symbol	need		4814934						
ANR	4817131	Symbol	SA_WRITECOMP		4814934						
ANR	4817132	Symbol	udev -> y_pixels_per_inch		4814934						
ANR	4817133	Symbol	noutbuf		4814934						
ANR	4817134	Symbol	udev		4814934						
ANR	4817135	Symbol	( ( updcomp_p ) upd -> valptr [ i ] ) -> cmap		4814934						
ANR	4817136	Symbol	upd -> ints		4814934						
ANR	4817137	Symbol	upd -> strings [ S_BEGIN ] . size		4814934						
ANR	4817138	Symbol	upd_wrtescp2		4814934						
ANR	4817139	Symbol	error		4814934						
ANR	4817140	Symbol	upd -> strings [ S_XSTEP ] . size		4814934						
ANR	4817141	Symbol	upd_wrtescnm		4814934						
ANR	4817142	Symbol	I_PATRPT		4814934						
ANR	4817143	Symbol	upd -> ncomp		4814934						
ANR	4817144	Symbol	upd -> int_a [ IA_ROWMASK ] . data		4814934						
ANR	4817145	Symbol	udev -> upd		4814934						
ANR	4817146	Symbol	B_XABS		4814934						
ANR	4817147	Symbol	upd -> strings [ S_YMOVE ] . data		4814934						
ANR	4817148	Symbol	I_NYPASS		4814934						
ANR	4817149	Symbol	* * upd -> string_a		4814934						
ANR	4817150	Symbol	* upd -> valptr		4814934						
ANR	4817151	Symbol	upd -> string_a [ SA_WRITECOMP ] . size		4814934						
ANR	4817152	Symbol	pixels_per_inch		4814934						
ANR	4817153	Symbol	value		4814934						
ANR	4817154	Symbol	* * SA_WRITECOMP		4814934						
ANR	4817155	Symbol	B_BOTTOMMARGIN		4814934						
ANR	4817156	Symbol	ap [ i ] . size		4814934						
ANR	4817157	Symbol	* S_YMOVE		4814934						
ANR	4817158	Symbol	udev -> memory		4814934						
ANR	4817159	Symbol	upd -> strings [ S_XMOVE ] . size		4814934						
ANR	4817160	Symbol	* * * upd		4814934						
ANR	4817161	Symbol	upd -> choice		4814934						
ANR	4817162	Symbol	* S_YSTEP		4814934						
ANR	4817163	Symbol	upd -> string_a		4814934						
ANR	4817164	Symbol	udev -> x_pixels_per_inch		4814934						
ANR	4817165	Symbol	* i		4814934						
ANR	4817166	Symbol	* upd -> ints		4814934						
ANR	4817167	Symbol	* I_PINS2WRITE		4814934						
ANR	4817168	Symbol	upd -> string_a [ SA_SETCOMP ] . size		4814934						
ANR	4817169	Symbol	* ap		4814934						
ANR	4817170	Symbol	* * upd -> valptr		4814934						
ANR	4817171	Symbol	S_XSTEP		4814934						
ANR	4817172	Symbol	I_ROWS		4814934						
ANR	4817173	Symbol	upd -> int_a [ IA_SCNOFS ] . size		4814934						
ANR	4817174	Symbol	I_YSTEP		4814934						
ANR	4817175	Function	upd_wrtescp2	5597:0:200535:208726							
ANR	4817176	FunctionDef	"upd_wrtescp2 (upd_p upd , FILE * out)"		4817175	0					
ANR	4817177	CompoundStatement		5599:0:200581:208726	4817175	0					
ANR	4817178	IdentifierDeclStatement	"int pinbot , pin , pintop , xbegin , x , xend , icomp , ybegin , yend , y , ioutbuf , n ;"	5600:3:200586:200652	4817175	0	True				
ANR	4817179	IdentifierDecl	pinbot		4817175	0					
ANR	4817180	IdentifierDeclType	int		4817175	0					
ANR	4817181	Identifier	pinbot		4817175	1					
ANR	4817182	IdentifierDecl	pin		4817175	1					
ANR	4817183	IdentifierDeclType	int		4817175	0					
ANR	4817184	Identifier	pin		4817175	1					
ANR	4817185	IdentifierDecl	pintop		4817175	2					
ANR	4817186	IdentifierDeclType	int		4817175	0					
ANR	4817187	Identifier	pintop		4817175	1					
ANR	4817188	IdentifierDecl	xbegin		4817175	3					
ANR	4817189	IdentifierDeclType	int		4817175	0					
ANR	4817190	Identifier	xbegin		4817175	1					
ANR	4817191	IdentifierDecl	x		4817175	4					
ANR	4817192	IdentifierDeclType	int		4817175	0					
ANR	4817193	Identifier	x		4817175	1					
ANR	4817194	IdentifierDecl	xend		4817175	5					
ANR	4817195	IdentifierDeclType	int		4817175	0					
ANR	4817196	Identifier	xend		4817175	1					
ANR	4817197	IdentifierDecl	icomp		4817175	6					
ANR	4817198	IdentifierDeclType	int		4817175	0					
ANR	4817199	Identifier	icomp		4817175	1					
ANR	4817200	IdentifierDecl	ybegin		4817175	7					
ANR	4817201	IdentifierDeclType	int		4817175	0					
ANR	4817202	Identifier	ybegin		4817175	1					
ANR	4817203	IdentifierDecl	yend		4817175	8					
ANR	4817204	IdentifierDeclType	int		4817175	0					
ANR	4817205	Identifier	yend		4817175	1					
ANR	4817206	IdentifierDecl	y		4817175	9					
ANR	4817207	IdentifierDeclType	int		4817175	0					
ANR	4817208	Identifier	y		4817175	1					
ANR	4817209	IdentifierDecl	ioutbuf		4817175	10					
ANR	4817210	IdentifierDeclType	int		4817175	0					
ANR	4817211	Identifier	ioutbuf		4817175	1					
ANR	4817212	IdentifierDecl	n		4817175	11					
ANR	4817213	IdentifierDeclType	int		4817175	0					
ANR	4817214	Identifier	n		4817175	1					
ANR	4817215	IdentifierDeclStatement	byte * obytes ;	5601:3:200657:200669	4817175	1	True				
ANR	4817216	IdentifierDecl	* obytes		4817175	0					
ANR	4817217	IdentifierDeclType	byte *		4817175	0					
ANR	4817218	Identifier	obytes		4817175	1					
ANR	4817219	IdentifierDeclStatement	updscan_p scan ;	5602:3:200674:200688	4817175	2	True				
ANR	4817220	IdentifierDecl	scan		4817175	0					
ANR	4817221	IdentifierDeclType	updscan_p		4817175	0					
ANR	4817222	Identifier	scan		4817175	1					
ANR	4817223	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		4817175	3					
ANR	4817224	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	5606:6:200743:200773	4817175	0	True				
ANR	4817225	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		4817175	0		<			
ANR	4817226	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4817227	Identifier	upd		4817175	0					
ANR	4817228	Identifier	yscan		4817175	1					
ANR	4817229	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4817175	1					
ANR	4817230	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817231	Identifier	upd		4817175	0					
ANR	4817232	Identifier	ints		4817175	1					
ANR	4817233	Identifier	I_BEG_Y		4817175	1					
ANR	4817234	CompoundStatement		8:39:194:194	4817175	1					
ANR	4817235	ExpressionStatement	pintop = 0	5607:6:200784:200794	4817175	0	True				
ANR	4817236	AssignmentExpression	pintop = 0		4817175	0		=			
ANR	4817237	Identifier	pintop		4817175	0					
ANR	4817238	PrimaryExpression	0		4817175	1					
ANR	4817239	ExpressionStatement	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]	5608:6:200802:200849	4817175	1	True				
ANR	4817240	AssignmentExpression	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		4817175	0		=			
ANR	4817241	Identifier	pinbot		4817175	0					
ANR	4817242	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		4817175	1					
ANR	4817243	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		4817175	0					
ANR	4817244	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		4817175	0					
ANR	4817245	PtrMemberAccess	upd -> int_a		4817175	0					
ANR	4817246	Identifier	upd		4817175	0					
ANR	4817247	Identifier	int_a		4817175	1					
ANR	4817248	Identifier	IA_BEGBOT		4817175	1					
ANR	4817249	Identifier	data		4817175	1					
ANR	4817250	PtrMemberAccess	upd -> ipass		4817175	1					
ANR	4817251	Identifier	upd		4817175	0					
ANR	4817252	Identifier	ipass		4817175	1					
ANR	4817253	ElseStatement	else		4817175	0					
ANR	4817254	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4817175	0					
ANR	4817255	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5609:13:200864:200895	4817175	0	True				
ANR	4817256	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4817175	0		>=			
ANR	4817257	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4817258	Identifier	upd		4817175	0					
ANR	4817259	Identifier	yscan		4817175	1					
ANR	4817260	ArrayIndexing	upd -> ints [ I_END_Y ]		4817175	1					
ANR	4817261	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817262	Identifier	upd		4817175	0					
ANR	4817263	Identifier	ints		4817175	1					
ANR	4817264	Identifier	I_END_Y		4817175	1					
ANR	4817265	CompoundStatement		11:47:316:316	4817175	1					
ANR	4817266	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	5610:6:200906:200938	4817175	0	True				
ANR	4817267	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		4817175	0		=			
ANR	4817268	Identifier	pinbot		4817175	0					
ANR	4817269	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4817175	1					
ANR	4817270	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817271	Identifier	upd		4817175	0					
ANR	4817272	Identifier	ints		4817175	1					
ANR	4817273	Identifier	I_PINS2WRITE		4817175	1					
ANR	4817274	ExpressionStatement	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]	5611:6:200946:201002	4817175	1	True				
ANR	4817275	AssignmentExpression	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4817175	0		=			
ANR	4817276	Identifier	pintop		4817175	0					
ANR	4817277	AdditiveExpression	pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4817175	1		-			
ANR	4817278	Identifier	pinbot		4817175	0					
ANR	4817279	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4817175	1					
ANR	4817280	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		4817175	0					
ANR	4817281	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4817175	0					
ANR	4817282	PtrMemberAccess	upd -> int_a		4817175	0					
ANR	4817283	Identifier	upd		4817175	0					
ANR	4817284	Identifier	int_a		4817175	1					
ANR	4817285	Identifier	IA_ENDTOP		4817175	1					
ANR	4817286	Identifier	data		4817175	1					
ANR	4817287	PtrMemberAccess	upd -> ipass		4817175	1					
ANR	4817288	Identifier	upd		4817175	0					
ANR	4817289	Identifier	ipass		4817175	1					
ANR	4817290	ElseStatement	else		4817175	0					
ANR	4817291	CompoundStatement		14:10:432:432	4817175	0					
ANR	4817292	ExpressionStatement	pintop = 0	5613:6:201022:201032	4817175	0	True				
ANR	4817293	AssignmentExpression	pintop = 0		4817175	0		=			
ANR	4817294	Identifier	pintop		4817175	0					
ANR	4817295	PrimaryExpression	0		4817175	1					
ANR	4817296	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	5614:6:201040:201072	4817175	1	True				
ANR	4817297	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		4817175	0		=			
ANR	4817298	Identifier	pinbot		4817175	0					
ANR	4817299	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4817175	1					
ANR	4817300	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817301	Identifier	upd		4817175	0					
ANR	4817302	Identifier	ints		4817175	1					
ANR	4817303	Identifier	I_PINS2WRITE		4817175	1					
ANR	4817304	ExpressionStatement	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	5617:3:201083:201157	4817175	4	True				
ANR	4817305	AssignmentExpression	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4817175	0		=			
ANR	4817306	Identifier	ybegin		4817175	0					
ANR	4817307	AdditiveExpression	pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4817175	1		+			
ANR	4817308	MultiplicativeExpression	pintop * upd -> ints [ I_NYPASS ]		4817175	0		*			
ANR	4817309	Identifier	pintop		4817175	0					
ANR	4817310	ArrayIndexing	upd -> ints [ I_NYPASS ]		4817175	1					
ANR	4817311	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817312	Identifier	upd		4817175	0					
ANR	4817313	Identifier	ints		4817175	1					
ANR	4817314	Identifier	I_NYPASS		4817175	1					
ANR	4817315	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		4817175	1		-			
ANR	4817316	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4817317	Identifier	upd		4817175	0					
ANR	4817318	Identifier	yscan		4817175	1					
ANR	4817319	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		4817175	1					
ANR	4817320	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817321	Identifier	upd		4817175	0					
ANR	4817322	Identifier	ints		4817175	1					
ANR	4817323	Identifier	I_BEGSKIP		4817175	1					
ANR	4817324	ExpressionStatement	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	5618:3:201162:201236	4817175	5	True				
ANR	4817325	AssignmentExpression	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4817175	0		=			
ANR	4817326	Identifier	yend		4817175	0					
ANR	4817327	AdditiveExpression	pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4817175	1		+			
ANR	4817328	MultiplicativeExpression	pinbot * upd -> ints [ I_NYPASS ]		4817175	0		*			
ANR	4817329	Identifier	pinbot		4817175	0					
ANR	4817330	ArrayIndexing	upd -> ints [ I_NYPASS ]		4817175	1					
ANR	4817331	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817332	Identifier	upd		4817175	0					
ANR	4817333	Identifier	ints		4817175	1					
ANR	4817334	Identifier	I_NYPASS		4817175	1					
ANR	4817335	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		4817175	1		-			
ANR	4817336	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4817337	Identifier	upd		4817175	0					
ANR	4817338	Identifier	yscan		4817175	1					
ANR	4817339	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		4817175	1					
ANR	4817340	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817341	Identifier	upd		4817175	0					
ANR	4817342	Identifier	ints		4817175	1					
ANR	4817343	Identifier	I_BEGSKIP		4817175	1					
ANR	4817344	ExpressionStatement	xbegin = upd -> nbytes	5622:3:201279:201299	4817175	6	True				
ANR	4817345	AssignmentExpression	xbegin = upd -> nbytes		4817175	0		=			
ANR	4817346	Identifier	xbegin		4817175	0					
ANR	4817347	PtrMemberAccess	upd -> nbytes		4817175	1					
ANR	4817348	Identifier	upd		4817175	0					
ANR	4817349	Identifier	nbytes		4817175	1					
ANR	4817350	ExpressionStatement	xend = - 1	5623:3:201304:201315	4817175	7	True				
ANR	4817351	AssignmentExpression	xend = - 1		4817175	0		=			
ANR	4817352	Identifier	xend		4817175	0					
ANR	4817353	UnaryOperationExpression	- 1		4817175	1					
ANR	4817354	UnaryOperator	-		4817175	0					
ANR	4817355	PrimaryExpression	1		4817175	1					
ANR	4817356	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4817175	8					
ANR	4817357	ForInit	y = ybegin ;	5625:7:201325:201335	4817175	0	True				
ANR	4817358	AssignmentExpression	y = ybegin		4817175	0		=			
ANR	4817359	Identifier	y		4817175	0					
ANR	4817360	Identifier	ybegin		4817175	1					
ANR	4817361	Condition	y < yend	5625:19:201337:201344	4817175	1	True				
ANR	4817362	RelationalExpression	y < yend		4817175	0		<			
ANR	4817363	Identifier	y		4817175	0					
ANR	4817364	Identifier	yend		4817175	1					
ANR	4817365	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5625:29:201347:201370	4817175	2	True	+=			
ANR	4817366	Identifier	y		4817175	0					
ANR	4817367	ArrayIndexing	upd -> ints [ I_NYPASS ]		4817175	1					
ANR	4817368	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817369	Identifier	upd		4817175	0					
ANR	4817370	Identifier	ints		4817175	1					
ANR	4817371	Identifier	I_NYPASS		4817175	1					
ANR	4817372	CompoundStatement		27:55:791:791	4817175	3					
ANR	4817373	IfStatement	if ( 0 > y )		4817175	0					
ANR	4817374	Condition	0 > y	5627:9:201404:201408	4817175	0	True				
ANR	4817375	RelationalExpression	0 > y		4817175	0		>			
ANR	4817376	PrimaryExpression	0		4817175	0					
ANR	4817377	Identifier	y		4817175	1					
ANR	4817378	ContinueStatement	continue ;	5627:16:201411:201419	4817175	1	True				
ANR	4817379	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ]	5629:6:201453:201488	4817175	1	True				
ANR	4817380	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ]		4817175	0		=			
ANR	4817381	Identifier	scan		4817175	0					
ANR	4817382	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4817175	1					
ANR	4817383	PtrMemberAccess	upd -> scnbuf		4817175	0					
ANR	4817384	Identifier	upd		4817175	0					
ANR	4817385	Identifier	scnbuf		4817175	1					
ANR	4817386	BitAndExpression	y & upd -> scnmsk		4817175	1		&			
ANR	4817387	Identifier	y		4817175	0					
ANR	4817388	PtrMemberAccess	upd -> scnmsk		4817175	1					
ANR	4817389	Identifier	upd		4817175	0					
ANR	4817390	Identifier	scnmsk		4817175	1					
ANR	4817391	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4817175	2					
ANR	4817392	ForInit	icomp = 0 ;	5631:10:201501:201510	4817175	0	True				
ANR	4817393	AssignmentExpression	icomp = 0		4817175	0		=			
ANR	4817394	Identifier	icomp		4817175	0					
ANR	4817395	PrimaryExpression	0		4817175	1					
ANR	4817396	Condition	icomp < upd -> ocomp	5631:21:201512:201529	4817175	1	True				
ANR	4817397	RelationalExpression	icomp < upd -> ocomp		4817175	0		<			
ANR	4817398	Identifier	icomp		4817175	0					
ANR	4817399	PtrMemberAccess	upd -> ocomp		4817175	1					
ANR	4817400	Identifier	upd		4817175	0					
ANR	4817401	Identifier	ocomp		4817175	1					
ANR	4817402	UnaryExpression	++ icomp	5631:41:201532:201538	4817175	2	True				
ANR	4817403	IncDec	++		4817175	0					
ANR	4817404	Identifier	icomp		4817175	1					
ANR	4817405	CompoundStatement		33:50:959:959	4817175	3					
ANR	4817406	ExpressionStatement	obytes = scan [ icomp ] . bytes	5632:9:201572:201598	4817175	0	True				
ANR	4817407	AssignmentExpression	obytes = scan [ icomp ] . bytes		4817175	0		=			
ANR	4817408	Identifier	obytes		4817175	0					
ANR	4817409	MemberAccess	scan [ icomp ] . bytes		4817175	1					
ANR	4817410	ArrayIndexing	scan [ icomp ]		4817175	0					
ANR	4817411	Identifier	scan		4817175	0					
ANR	4817412	Identifier	icomp		4817175	1					
ANR	4817413	Identifier	bytes		4817175	1					
ANR	4817414	ForStatement	for ( x = 0 ; x < xbegin && ! obytes [ x ] ; x ++ )		4817175	1					
ANR	4817415	ForInit	x = 0 ;	5634:13:201614:201619	4817175	0	True				
ANR	4817416	AssignmentExpression	x = 0		4817175	0		=			
ANR	4817417	Identifier	x		4817175	0					
ANR	4817418	PrimaryExpression	0		4817175	1					
ANR	4817419	Condition	x < xbegin && ! obytes [ x ]	5634:20:201621:201644	4817175	1	True				
ANR	4817420	AndExpression	x < xbegin && ! obytes [ x ]		4817175	0		&&			
ANR	4817421	RelationalExpression	x < xbegin		4817175	0		<			
ANR	4817422	Identifier	x		4817175	0					
ANR	4817423	Identifier	xbegin		4817175	1					
ANR	4817424	UnaryOperationExpression	! obytes [ x ]		4817175	1					
ANR	4817425	UnaryOperator	!		4817175	0					
ANR	4817426	ArrayIndexing	obytes [ x ]		4817175	1					
ANR	4817427	Identifier	obytes		4817175	0					
ANR	4817428	Identifier	x		4817175	1					
ANR	4817429	PostIncDecOperationExpression	x ++	5634:46:201647:201649	4817175	2	True				
ANR	4817430	Identifier	x		4817175	0					
ANR	4817431	IncDec	++		4817175	1					
ANR	4817432	ExpressionStatement		5634:50:201651:201651	4817175	3	True				
ANR	4817433	IfStatement	if ( x < xbegin )		4817175	2					
ANR	4817434	Condition	x < xbegin	5635:12:201665:201674	4817175	0	True				
ANR	4817435	RelationalExpression	x < xbegin		4817175	0		<			
ANR	4817436	Identifier	x		4817175	0					
ANR	4817437	Identifier	xbegin		4817175	1					
ANR	4817438	ExpressionStatement	xbegin = x	5635:24:201677:201687	4817175	1	True				
ANR	4817439	AssignmentExpression	xbegin = x		4817175	0		=			
ANR	4817440	Identifier	xbegin		4817175	0					
ANR	4817441	Identifier	x		4817175	1					
ANR	4817442	IfStatement	if ( x < upd -> nbytes )		4817175	3					
ANR	4817443	Condition	x < upd -> nbytes	5637:12:201702:201716	4817175	0	True				
ANR	4817444	RelationalExpression	x < upd -> nbytes		4817175	0		<			
ANR	4817445	Identifier	x		4817175	0					
ANR	4817446	PtrMemberAccess	upd -> nbytes		4817175	1					
ANR	4817447	Identifier	upd		4817175	0					
ANR	4817448	Identifier	nbytes		4817175	1					
ANR	4817449	CompoundStatement		39:29:1137:1137	4817175	1					
ANR	4817450	ForStatement	for ( x = upd -> nbytes - 1 ; x > xend && ! obytes [ x ] ; x -- )		4817175	0					
ANR	4817451	ForInit	x = upd -> nbytes - 1 ;	5638:16:201737:201754	4817175	0	True				
ANR	4817452	AssignmentExpression	x = upd -> nbytes - 1		4817175	0		=			
ANR	4817453	Identifier	x		4817175	0					
ANR	4817454	AdditiveExpression	upd -> nbytes - 1		4817175	1		-			
ANR	4817455	PtrMemberAccess	upd -> nbytes		4817175	0					
ANR	4817456	Identifier	upd		4817175	0					
ANR	4817457	Identifier	nbytes		4817175	1					
ANR	4817458	PrimaryExpression	1		4817175	1					
ANR	4817459	Condition	x > xend && ! obytes [ x ]	5638:35:201756:201777	4817175	1	True				
ANR	4817460	AndExpression	x > xend && ! obytes [ x ]		4817175	0		&&			
ANR	4817461	RelationalExpression	x > xend		4817175	0		>			
ANR	4817462	Identifier	x		4817175	0					
ANR	4817463	Identifier	xend		4817175	1					
ANR	4817464	UnaryOperationExpression	! obytes [ x ]		4817175	1					
ANR	4817465	UnaryOperator	!		4817175	0					
ANR	4817466	ArrayIndexing	obytes [ x ]		4817175	1					
ANR	4817467	Identifier	obytes		4817175	0					
ANR	4817468	Identifier	x		4817175	1					
ANR	4817469	PostIncDecOperationExpression	x --	5638:59:201780:201782	4817175	2	True				
ANR	4817470	Identifier	x		4817175	0					
ANR	4817471	IncDec	--		4817175	1					
ANR	4817472	ExpressionStatement		5638:63:201784:201784	4817175	3	True				
ANR	4817473	IfStatement	if ( x > xend )		4817175	1					
ANR	4817474	Condition	x > xend	5639:15:201801:201808	4817175	0	True				
ANR	4817475	RelationalExpression	x > xend		4817175	0		>			
ANR	4817476	Identifier	x		4817175	0					
ANR	4817477	Identifier	xend		4817175	1					
ANR	4817478	ExpressionStatement	xend = x	5639:25:201811:201819	4817175	1	True				
ANR	4817479	AssignmentExpression	xend = x		4817175	0		=			
ANR	4817480	Identifier	xend		4817175	0					
ANR	4817481	Identifier	x		4817175	1					
ANR	4817482	IfStatement	if ( xbegin <= xend )		4817175	9					
ANR	4817483	Condition	xbegin <= xend	5645:6:201988:202001	4817175	0	True				
ANR	4817484	RelationalExpression	xbegin <= xend		4817175	0		<=			
ANR	4817485	Identifier	xbegin		4817175	0					
ANR	4817486	Identifier	xend		4817175	1					
ANR	4817487	CompoundStatement		47:22:1422:1422	4817175	1					
ANR	4817488	ExpressionStatement	ioutbuf = 0	5647:6:202038:202049	4817175	0	True				
ANR	4817489	AssignmentExpression	ioutbuf = 0		4817175	0		=			
ANR	4817490	Identifier	ioutbuf		4817175	0					
ANR	4817491	PrimaryExpression	0		4817175	1					
ANR	4817492	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		4817175	1					
ANR	4817493	Condition	0 == upd -> strings [ S_XMOVE ] . size	5649:9:202061:202091	4817175	0	True				
ANR	4817494	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4817175	0		==			
ANR	4817495	PrimaryExpression	0		4817175	0					
ANR	4817496	MemberAccess	upd -> strings [ S_XMOVE ] . size		4817175	1					
ANR	4817497	ArrayIndexing	upd -> strings [ S_XMOVE ]		4817175	0					
ANR	4817498	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4817499	Identifier	upd		4817175	0					
ANR	4817500	Identifier	strings		4817175	1					
ANR	4817501	Identifier	S_XMOVE		4817175	1					
ANR	4817502	Identifier	size		4817175	1					
ANR	4817503	ExpressionStatement	xbegin = 0	5649:42:202094:202104	4817175	1	True				
ANR	4817504	AssignmentExpression	xbegin = 0		4817175	0		=			
ANR	4817505	Identifier	xbegin		4817175	0					
ANR	4817506	PrimaryExpression	0		4817175	1					
ANR	4817507	IfStatement	if ( upd -> yscan != upd -> yprinter )		4817175	2					
ANR	4817508	Condition	upd -> yscan != upd -> yprinter	5654:9:202160:202186	4817175	0	True				
ANR	4817509	EqualityExpression	upd -> yscan != upd -> yprinter		4817175	0		!=			
ANR	4817510	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4817511	Identifier	upd		4817175	0					
ANR	4817512	Identifier	yscan		4817175	1					
ANR	4817513	PtrMemberAccess	upd -> yprinter		4817175	1					
ANR	4817514	Identifier	upd		4817175	0					
ANR	4817515	Identifier	yprinter		4817175	1					
ANR	4817516	CompoundStatement		56:38:1607:1607	4817175	1					
ANR	4817517	IfStatement	if ( B_YABS & upd -> flags )		4817175	0					
ANR	4817518	Condition	B_YABS & upd -> flags	5655:12:202227:202245	4817175	0	True				
ANR	4817519	BitAndExpression	B_YABS & upd -> flags		4817175	0		&			
ANR	4817520	Identifier	B_YABS		4817175	0					
ANR	4817521	PtrMemberAccess	upd -> flags		4817175	1					
ANR	4817522	Identifier	upd		4817175	0					
ANR	4817523	Identifier	flags		4817175	1					
ANR	4817524	ExpressionStatement	y = upd -> yscan + upd -> ints [ I_YOFS ]	5655:33:202248:202282	4817175	1	True				
ANR	4817525	AssignmentExpression	y = upd -> yscan + upd -> ints [ I_YOFS ]		4817175	0		=			
ANR	4817526	Identifier	y		4817175	0					
ANR	4817527	AdditiveExpression	upd -> yscan + upd -> ints [ I_YOFS ]		4817175	1		+			
ANR	4817528	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4817529	Identifier	upd		4817175	0					
ANR	4817530	Identifier	yscan		4817175	1					
ANR	4817531	ArrayIndexing	upd -> ints [ I_YOFS ]		4817175	1					
ANR	4817532	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817533	Identifier	upd		4817175	0					
ANR	4817534	Identifier	ints		4817175	1					
ANR	4817535	Identifier	I_YOFS		4817175	1					
ANR	4817536	ElseStatement	else		4817175	0					
ANR	4817537	ExpressionStatement	y = upd -> yscan - upd -> yprinter	5656:33:202317:202347	4817175	0	True				
ANR	4817538	AssignmentExpression	y = upd -> yscan - upd -> yprinter		4817175	0		=			
ANR	4817539	Identifier	y		4817175	0					
ANR	4817540	AdditiveExpression	upd -> yscan - upd -> yprinter		4817175	1		-			
ANR	4817541	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4817542	Identifier	upd		4817175	0					
ANR	4817543	Identifier	yscan		4817175	1					
ANR	4817544	PtrMemberAccess	upd -> yprinter		4817175	1					
ANR	4817545	Identifier	upd		4817175	0					
ANR	4817546	Identifier	yprinter		4817175	1					
ANR	4817547	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		4817175	1					
ANR	4817548	Condition	1 < upd -> ints [ I_YSTEP ]	5658:18:202368:202389	4817175	0	True				
ANR	4817549	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		4817175	0		<			
ANR	4817550	PrimaryExpression	1		4817175	0					
ANR	4817551	ArrayIndexing	upd -> ints [ I_YSTEP ]		4817175	1					
ANR	4817552	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817553	Identifier	upd		4817175	0					
ANR	4817554	Identifier	ints		4817175	1					
ANR	4817555	Identifier	I_YSTEP		4817175	1					
ANR	4817556	CompoundStatement		60:42:1810:1810	4817175	1					
ANR	4817557	ExpressionStatement	n = y / upd -> ints [ I_YSTEP ]	5659:12:202406:202438	4817175	0	True				
ANR	4817558	AssignmentExpression	n = y / upd -> ints [ I_YSTEP ]		4817175	0		=			
ANR	4817559	Identifier	n		4817175	0					
ANR	4817560	MultiplicativeExpression	y / upd -> ints [ I_YSTEP ]		4817175	1		/			
ANR	4817561	Identifier	y		4817175	0					
ANR	4817562	ArrayIndexing	upd -> ints [ I_YSTEP ]		4817175	1					
ANR	4817563	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817564	Identifier	upd		4817175	0					
ANR	4817565	Identifier	ints		4817175	1					
ANR	4817566	Identifier	I_YSTEP		4817175	1					
ANR	4817567	ExpressionStatement	y -= n * upd -> ints [ I_YSTEP ]	5660:12:202471:202503	4817175	1	True				
ANR	4817568	AssignmentExpression	y -= n * upd -> ints [ I_YSTEP ]		4817175	0		-=			
ANR	4817569	Identifier	y		4817175	0					
ANR	4817570	MultiplicativeExpression	n * upd -> ints [ I_YSTEP ]		4817175	1		*			
ANR	4817571	Identifier	n		4817175	0					
ANR	4817572	ArrayIndexing	upd -> ints [ I_YSTEP ]		4817175	1					
ANR	4817573	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817574	Identifier	upd		4817175	0					
ANR	4817575	Identifier	ints		4817175	1					
ANR	4817576	Identifier	I_YSTEP		4817175	1					
ANR	4817577	ElseStatement	else		4817175	0					
ANR	4817578	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		4817175	0					
ANR	4817579	Condition	- 1 > upd -> ints [ I_YSTEP ]	5661:19:202543:202565	4817175	0	True				
ANR	4817580	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		4817175	0		>			
ANR	4817581	UnaryOperationExpression	- 1		4817175	0					
ANR	4817582	UnaryOperator	-		4817175	0					
ANR	4817583	PrimaryExpression	1		4817175	1					
ANR	4817584	ArrayIndexing	upd -> ints [ I_YSTEP ]		4817175	1					
ANR	4817585	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817586	Identifier	upd		4817175	0					
ANR	4817587	Identifier	ints		4817175	1					
ANR	4817588	Identifier	I_YSTEP		4817175	1					
ANR	4817589	CompoundStatement		63:44:1986:1986	4817175	1					
ANR	4817590	ExpressionStatement	n = y * - upd -> ints [ I_YSTEP ]	5662:12:202582:202614	4817175	0	True				
ANR	4817591	AssignmentExpression	n = y * - upd -> ints [ I_YSTEP ]		4817175	0		=			
ANR	4817592	Identifier	n		4817175	0					
ANR	4817593	MultiplicativeExpression	y * - upd -> ints [ I_YSTEP ]		4817175	1		*			
ANR	4817594	Identifier	y		4817175	0					
ANR	4817595	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		4817175	1					
ANR	4817596	UnaryOperator	-		4817175	0					
ANR	4817597	ArrayIndexing	upd -> ints [ I_YSTEP ]		4817175	1					
ANR	4817598	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817599	Identifier	upd		4817175	0					
ANR	4817600	Identifier	ints		4817175	1					
ANR	4817601	Identifier	I_YSTEP		4817175	1					
ANR	4817602	ExpressionStatement	y = 0	5663:12:202650:202660	4817175	1	True				
ANR	4817603	AssignmentExpression	y = 0		4817175	0		=			
ANR	4817604	Identifier	y		4817175	0					
ANR	4817605	PrimaryExpression	0		4817175	1					
ANR	4817606	ElseStatement	else		4817175	0					
ANR	4817607	CompoundStatement		66:16:2096:2096	4817175	0					
ANR	4817608	ExpressionStatement	n = y	5665:12:202692:202702	4817175	0	True				
ANR	4817609	AssignmentExpression	n = y		4817175	0		=			
ANR	4817610	Identifier	n		4817175	0					
ANR	4817611	Identifier	y		4817175	1					
ANR	4817612	ExpressionStatement	y = 0	5666:12:202716:202726	4817175	1	True				
ANR	4817613	AssignmentExpression	y = 0		4817175	0		=			
ANR	4817614	Identifier	y		4817175	0					
ANR	4817615	PrimaryExpression	0		4817175	1					
ANR	4817616	IfStatement	if ( n )		4817175	2					
ANR	4817617	Condition	n	5669:12:202752:202752	4817175	0	True				
ANR	4817618	Identifier	n		4817175	0					
ANR	4817619	CompoundStatement		71:15:2173:2173	4817175	1					
ANR	4817620	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"	5670:12:202794:202899	4817175	0	True				
ANR	4817621	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"		4817175	0					
ANR	4817622	Callee	memcpy		4817175	0					
ANR	4817623	Identifier	memcpy		4817175	0					
ANR	4817624	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4817625	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4817626	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4817627	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4817628	Identifier	upd		4817175	0					
ANR	4817629	Identifier	outbuf		4817175	1					
ANR	4817630	Identifier	ioutbuf		4817175	1					
ANR	4817631	Argument	upd -> strings [ S_YMOVE ] . data		4817175	1					
ANR	4817632	MemberAccess	upd -> strings [ S_YMOVE ] . data		4817175	0					
ANR	4817633	ArrayIndexing	upd -> strings [ S_YMOVE ]		4817175	0					
ANR	4817634	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4817635	Identifier	upd		4817175	0					
ANR	4817636	Identifier	strings		4817175	1					
ANR	4817637	Identifier	S_YMOVE		4817175	1					
ANR	4817638	Identifier	data		4817175	1					
ANR	4817639	Argument	upd -> strings [ S_YMOVE ] . size		4817175	2					
ANR	4817640	MemberAccess	upd -> strings [ S_YMOVE ] . size		4817175	0					
ANR	4817641	ArrayIndexing	upd -> strings [ S_YMOVE ]		4817175	0					
ANR	4817642	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4817643	Identifier	upd		4817175	0					
ANR	4817644	Identifier	strings		4817175	1					
ANR	4817645	Identifier	S_YMOVE		4817175	1					
ANR	4817646	Identifier	size		4817175	1					
ANR	4817647	ExpressionStatement	ioutbuf += upd -> strings [ S_YMOVE ] . size	5672:12:202913:202950	4817175	1	True				
ANR	4817648	AssignmentExpression	ioutbuf += upd -> strings [ S_YMOVE ] . size		4817175	0		+=			
ANR	4817649	Identifier	ioutbuf		4817175	0					
ANR	4817650	MemberAccess	upd -> strings [ S_YMOVE ] . size		4817175	1					
ANR	4817651	ArrayIndexing	upd -> strings [ S_YMOVE ]		4817175	0					
ANR	4817652	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4817653	Identifier	upd		4817175	0					
ANR	4817654	Identifier	strings		4817175	1					
ANR	4817655	Identifier	S_YMOVE		4817175	1					
ANR	4817656	Identifier	size		4817175	1					
ANR	4817657	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5674:12:202965:203003	4817175	2	True				
ANR	4817658	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		4817175	0		=			
ANR	4817659	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4817175	0					
ANR	4817660	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4817661	Identifier	upd		4817175	0					
ANR	4817662	Identifier	outbuf		4817175	1					
ANR	4817663	PostIncDecOperationExpression	ioutbuf ++		4817175	1					
ANR	4817664	Identifier	ioutbuf		4817175	0					
ANR	4817665	IncDec	++		4817175	1					
ANR	4817666	BitAndExpression	n & 0xff		4817175	1		&			
ANR	4817667	Identifier	n		4817175	0					
ANR	4817668	PrimaryExpression	0xff		4817175	1					
ANR	4817669	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5675:12:203017:203055	4817175	3	True				
ANR	4817670	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		4817175	0		=			
ANR	4817671	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4817175	0					
ANR	4817672	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4817673	Identifier	upd		4817175	0					
ANR	4817674	Identifier	outbuf		4817175	1					
ANR	4817675	PostIncDecOperationExpression	ioutbuf ++		4817175	1					
ANR	4817676	Identifier	ioutbuf		4817175	0					
ANR	4817677	IncDec	++		4817175	1					
ANR	4817678	BitAndExpression	( n >> 8 ) & 0xff		4817175	1		&			
ANR	4817679	ShiftExpression	n >> 8		4817175	0		>>			
ANR	4817680	Identifier	n		4817175	0					
ANR	4817681	PrimaryExpression	8		4817175	1					
ANR	4817682	PrimaryExpression	0xff		4817175	1					
ANR	4817683	IfStatement	if ( 0 < upd -> strings [ S_YSTEP ] . size )		4817175	3					
ANR	4817684	Condition	0 < upd -> strings [ S_YSTEP ] . size	5679:12:203113:203142	4817175	0	True				
ANR	4817685	RelationalExpression	0 < upd -> strings [ S_YSTEP ] . size		4817175	0		<			
ANR	4817686	PrimaryExpression	0		4817175	0					
ANR	4817687	MemberAccess	upd -> strings [ S_YSTEP ] . size		4817175	1					
ANR	4817688	ArrayIndexing	upd -> strings [ S_YSTEP ]		4817175	0					
ANR	4817689	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4817690	Identifier	upd		4817175	0					
ANR	4817691	Identifier	strings		4817175	1					
ANR	4817692	Identifier	S_YSTEP		4817175	1					
ANR	4817693	Identifier	size		4817175	1					
ANR	4817694	CompoundStatement		81:44:2563:2563	4817175	1					
ANR	4817695	WhileStatement	while ( y -- )		4817175	0					
ANR	4817696	Condition	y --	5680:18:203165:203167	4817175	0	True				
ANR	4817697	PostIncDecOperationExpression	y --		4817175	0					
ANR	4817698	Identifier	y		4817175	0					
ANR	4817699	IncDec	--		4817175	1					
ANR	4817700	CompoundStatement		82:23:2588:2588	4817175	1					
ANR	4817701	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"	5681:15:203187:203322	4817175	0	True				
ANR	4817702	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"		4817175	0					
ANR	4817703	Callee	memcpy		4817175	0					
ANR	4817704	Identifier	memcpy		4817175	0					
ANR	4817705	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4817706	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4817707	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4817708	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4817709	Identifier	upd		4817175	0					
ANR	4817710	Identifier	outbuf		4817175	1					
ANR	4817711	Identifier	ioutbuf		4817175	1					
ANR	4817712	Argument	upd -> strings [ S_YSTEP ] . data		4817175	1					
ANR	4817713	MemberAccess	upd -> strings [ S_YSTEP ] . data		4817175	0					
ANR	4817714	ArrayIndexing	upd -> strings [ S_YSTEP ]		4817175	0					
ANR	4817715	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4817716	Identifier	upd		4817175	0					
ANR	4817717	Identifier	strings		4817175	1					
ANR	4817718	Identifier	S_YSTEP		4817175	1					
ANR	4817719	Identifier	data		4817175	1					
ANR	4817720	Argument	upd -> strings [ S_YSTEP ] . size		4817175	2					
ANR	4817721	MemberAccess	upd -> strings [ S_YSTEP ] . size		4817175	0					
ANR	4817722	ArrayIndexing	upd -> strings [ S_YSTEP ]		4817175	0					
ANR	4817723	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4817724	Identifier	upd		4817175	0					
ANR	4817725	Identifier	strings		4817175	1					
ANR	4817726	Identifier	S_YSTEP		4817175	1					
ANR	4817727	Identifier	size		4817175	1					
ANR	4817728	ExpressionStatement	ioutbuf += upd -> strings [ S_YSTEP ] . size	5684:15:203339:203376	4817175	1	True				
ANR	4817729	AssignmentExpression	ioutbuf += upd -> strings [ S_YSTEP ] . size		4817175	0		+=			
ANR	4817730	Identifier	ioutbuf		4817175	0					
ANR	4817731	MemberAccess	upd -> strings [ S_YSTEP ] . size		4817175	1					
ANR	4817732	ArrayIndexing	upd -> strings [ S_YSTEP ]		4817175	0					
ANR	4817733	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4817734	Identifier	upd		4817175	0					
ANR	4817735	Identifier	strings		4817175	1					
ANR	4817736	Identifier	S_YSTEP		4817175	1					
ANR	4817737	Identifier	size		4817175	1					
ANR	4817738	ExpressionStatement	upd -> yprinter = upd -> yscan	5688:9:203413:203439	4817175	4	True				
ANR	4817739	AssignmentExpression	upd -> yprinter = upd -> yscan		4817175	0		=			
ANR	4817740	PtrMemberAccess	upd -> yprinter		4817175	0					
ANR	4817741	Identifier	upd		4817175	0					
ANR	4817742	Identifier	yprinter		4817175	1					
ANR	4817743	PtrMemberAccess	upd -> yscan		4817175	1					
ANR	4817744	Identifier	upd		4817175	0					
ANR	4817745	Identifier	yscan		4817175	1					
ANR	4817746	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4817175	3					
ANR	4817747	ForInit	icomp = 0 ;	5693:10:203559:203568	4817175	0	True				
ANR	4817748	AssignmentExpression	icomp = 0		4817175	0		=			
ANR	4817749	Identifier	icomp		4817175	0					
ANR	4817750	PrimaryExpression	0		4817175	1					
ANR	4817751	Condition	icomp < upd -> ocomp	5693:21:203570:203587	4817175	1	True				
ANR	4817752	RelationalExpression	icomp < upd -> ocomp		4817175	0		<			
ANR	4817753	Identifier	icomp		4817175	0					
ANR	4817754	PtrMemberAccess	upd -> ocomp		4817175	1					
ANR	4817755	Identifier	upd		4817175	0					
ANR	4817756	Identifier	ocomp		4817175	1					
ANR	4817757	UnaryExpression	++ icomp	5693:41:203590:203596	4817175	2	True				
ANR	4817758	IncDec	++		4817175	0					
ANR	4817759	Identifier	icomp		4817175	1					
ANR	4817760	CompoundStatement		95:50:3017:3017	4817175	3					
ANR	4817761	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4817175	0					
ANR	4817762	ForInit	y = ybegin ;	5697:13:203702:203712	4817175	0	True				
ANR	4817763	AssignmentExpression	y = ybegin		4817175	0		=			
ANR	4817764	Identifier	y		4817175	0					
ANR	4817765	Identifier	ybegin		4817175	1					
ANR	4817766	Condition	y < yend	5697:25:203714:203721	4817175	1	True				
ANR	4817767	RelationalExpression	y < yend		4817175	0		<			
ANR	4817768	Identifier	y		4817175	0					
ANR	4817769	Identifier	yend		4817175	1					
ANR	4817770	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5697:35:203724:203747	4817175	2	True	+=			
ANR	4817771	Identifier	y		4817175	0					
ANR	4817772	ArrayIndexing	upd -> ints [ I_NYPASS ]		4817175	1					
ANR	4817773	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817774	Identifier	upd		4817175	0					
ANR	4817775	Identifier	ints		4817175	1					
ANR	4817776	Identifier	I_NYPASS		4817175	1					
ANR	4817777	CompoundStatement		99:61:3168:3168	4817175	3					
ANR	4817778	IfStatement	if ( 0 > y )		4817175	0					
ANR	4817779	Condition	0 > y	5698:15:203783:203787	4817175	0	True				
ANR	4817780	RelationalExpression	0 > y		4817175	0		>			
ANR	4817781	PrimaryExpression	0		4817175	0					
ANR	4817782	Identifier	y		4817175	1					
ANR	4817783	ContinueStatement	continue ;	5698:22:203790:203798	4817175	1	True				
ANR	4817784	ExpressionStatement	obytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes	5699:12:203812:203862	4817175	1	True				
ANR	4817785	AssignmentExpression	obytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		4817175	0		=			
ANR	4817786	Identifier	obytes		4817175	0					
ANR	4817787	MemberAccess	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		4817175	1					
ANR	4817788	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ]		4817175	0					
ANR	4817789	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4817175	0					
ANR	4817790	PtrMemberAccess	upd -> scnbuf		4817175	0					
ANR	4817791	Identifier	upd		4817175	0					
ANR	4817792	Identifier	scnbuf		4817175	1					
ANR	4817793	BitAndExpression	y & upd -> scnmsk		4817175	1		&			
ANR	4817794	Identifier	y		4817175	0					
ANR	4817795	PtrMemberAccess	upd -> scnmsk		4817175	1					
ANR	4817796	Identifier	upd		4817175	0					
ANR	4817797	Identifier	scnmsk		4817175	1					
ANR	4817798	Identifier	icomp		4817175	1					
ANR	4817799	Identifier	bytes		4817175	1					
ANR	4817800	ForStatement	for ( x = xbegin ; x <= xend && ! obytes [ x ] ; ++ x )		4817175	2					
ANR	4817801	ForInit	x = xbegin ;	5700:16:203880:203890	4817175	0	True				
ANR	4817802	AssignmentExpression	x = xbegin		4817175	0		=			
ANR	4817803	Identifier	x		4817175	0					
ANR	4817804	Identifier	xbegin		4817175	1					
ANR	4817805	Condition	x <= xend && ! obytes [ x ]	5700:28:203892:203914	4817175	1	True				
ANR	4817806	AndExpression	x <= xend && ! obytes [ x ]		4817175	0		&&			
ANR	4817807	RelationalExpression	x <= xend		4817175	0		<=			
ANR	4817808	Identifier	x		4817175	0					
ANR	4817809	Identifier	xend		4817175	1					
ANR	4817810	UnaryOperationExpression	! obytes [ x ]		4817175	1					
ANR	4817811	UnaryOperator	!		4817175	0					
ANR	4817812	ArrayIndexing	obytes [ x ]		4817175	1					
ANR	4817813	Identifier	obytes		4817175	0					
ANR	4817814	Identifier	x		4817175	1					
ANR	4817815	UnaryExpression	++ x	5700:53:203917:203919	4817175	2	True				
ANR	4817816	IncDec	++		4817175	0					
ANR	4817817	Identifier	x		4817175	1					
ANR	4817818	ExpressionStatement		5700:57:203921:203921	4817175	3	True				
ANR	4817819	IfStatement	if ( x <= xend )		4817175	3					
ANR	4817820	Condition	x <= xend	5701:28:203951:203959	4817175	0	True				
ANR	4817821	RelationalExpression	x <= xend		4817175	0		<=			
ANR	4817822	Identifier	x		4817175	0					
ANR	4817823	Identifier	xend		4817175	1					
ANR	4817824	BreakStatement	break ;	5701:39:203962:203967	4817175	1	True				
ANR	4817825	IfStatement	if ( y >= yend )		4817175	1					
ANR	4817826	Condition	y >= yend	5703:12:204060:204068	4817175	0	True				
ANR	4817827	RelationalExpression	y >= yend		4817175	0		>=			
ANR	4817828	Identifier	y		4817175	0					
ANR	4817829	Identifier	yend		4817175	1					
ANR	4817830	ContinueStatement	continue ;	5703:23:204071:204079	4817175	1	True				
ANR	4817831	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp ) )		4817175	2					
ANR	4817832	Condition	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )	5707:12:204159:204246	4817175	0	True				
ANR	4817833	AndExpression	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )		4817175	0		&&			
ANR	4817834	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		4817175	0		<			
ANR	4817835	PrimaryExpression	0		4817175	0					
ANR	4817836	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4817175	1					
ANR	4817837	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4817175	0					
ANR	4817838	PtrMemberAccess	upd -> string_a		4817175	0					
ANR	4817839	Identifier	upd		4817175	0					
ANR	4817840	Identifier	string_a		4817175	1					
ANR	4817841	Identifier	SA_SETCOMP		4817175	1					
ANR	4817842	Identifier	size		4817175	1					
ANR	4817843	EqualityExpression	upd -> icomp != icomp		4817175	1		!=			
ANR	4817844	PtrMemberAccess	upd -> icomp		4817175	0					
ANR	4817845	Identifier	upd		4817175	0					
ANR	4817846	Identifier	icomp		4817175	1					
ANR	4817847	Identifier	icomp		4817175	1					
ANR	4817848	CompoundStatement		110:53:3670:3670	4817175	1					
ANR	4817849	ExpressionStatement	upd -> icomp = icomp	5709:12:204290:204308	4817175	0	True				
ANR	4817850	AssignmentExpression	upd -> icomp = icomp		4817175	0		=			
ANR	4817851	PtrMemberAccess	upd -> icomp		4817175	0					
ANR	4817852	Identifier	upd		4817175	0					
ANR	4817853	Identifier	icomp		4817175	1					
ANR	4817854	Identifier	icomp		4817175	1					
ANR	4817855	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )		4817175	1					
ANR	4817856	Condition	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5710:15:204325:204370	4817175	0	True				
ANR	4817857	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4817175	0		<			
ANR	4817858	PrimaryExpression	0		4817175	0					
ANR	4817859	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4817175	1					
ANR	4817860	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4817175	0					
ANR	4817861	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4817175	0					
ANR	4817862	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4817175	0					
ANR	4817863	PtrMemberAccess	upd -> string_a		4817175	0					
ANR	4817864	Identifier	upd		4817175	0					
ANR	4817865	Identifier	string_a		4817175	1					
ANR	4817866	Identifier	SA_SETCOMP		4817175	1					
ANR	4817867	Identifier	data		4817175	1					
ANR	4817868	Identifier	icomp		4817175	1					
ANR	4817869	Identifier	size		4817175	1					
ANR	4817870	CompoundStatement		112:63:3791:3791	4817175	1					
ANR	4817871	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"	5711:15:204390:204557	4817175	0	True				
ANR	4817872	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"		4817175	0					
ANR	4817873	Callee	memcpy		4817175	0					
ANR	4817874	Identifier	memcpy		4817175	0					
ANR	4817875	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4817876	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4817877	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4817878	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4817879	Identifier	upd		4817175	0					
ANR	4817880	Identifier	outbuf		4817175	1					
ANR	4817881	Identifier	ioutbuf		4817175	1					
ANR	4817882	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4817175	1					
ANR	4817883	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4817175	0					
ANR	4817884	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4817175	0					
ANR	4817885	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4817175	0					
ANR	4817886	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4817175	0					
ANR	4817887	PtrMemberAccess	upd -> string_a		4817175	0					
ANR	4817888	Identifier	upd		4817175	0					
ANR	4817889	Identifier	string_a		4817175	1					
ANR	4817890	Identifier	SA_SETCOMP		4817175	1					
ANR	4817891	Identifier	data		4817175	1					
ANR	4817892	Identifier	icomp		4817175	1					
ANR	4817893	Identifier	data		4817175	1					
ANR	4817894	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4817175	2					
ANR	4817895	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4817175	0					
ANR	4817896	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4817175	0					
ANR	4817897	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4817175	0					
ANR	4817898	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4817175	0					
ANR	4817899	PtrMemberAccess	upd -> string_a		4817175	0					
ANR	4817900	Identifier	upd		4817175	0					
ANR	4817901	Identifier	string_a		4817175	1					
ANR	4817902	Identifier	SA_SETCOMP		4817175	1					
ANR	4817903	Identifier	data		4817175	1					
ANR	4817904	Identifier	icomp		4817175	1					
ANR	4817905	Identifier	size		4817175	1					
ANR	4817906	ExpressionStatement	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5714:15:204574:204627	4817175	1	True				
ANR	4817907	AssignmentExpression	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4817175	0		+=			
ANR	4817908	Identifier	ioutbuf		4817175	0					
ANR	4817909	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4817175	1					
ANR	4817910	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4817175	0					
ANR	4817911	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4817175	0					
ANR	4817912	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4817175	0					
ANR	4817913	PtrMemberAccess	upd -> string_a		4817175	0					
ANR	4817914	Identifier	upd		4817175	0					
ANR	4817915	Identifier	string_a		4817175	1					
ANR	4817916	Identifier	SA_SETCOMP		4817175	1					
ANR	4817917	Identifier	data		4817175	1					
ANR	4817918	Identifier	icomp		4817175	1					
ANR	4817919	Identifier	size		4817175	1					
ANR	4817920	IfStatement	if ( xbegin != upd -> xprinter )		4817175	3					
ANR	4817921	Condition	xbegin != upd -> xprinter	5720:12:204768:204790	4817175	0	True				
ANR	4817922	EqualityExpression	xbegin != upd -> xprinter		4817175	0		!=			
ANR	4817923	Identifier	xbegin		4817175	0					
ANR	4817924	PtrMemberAccess	upd -> xprinter		4817175	1					
ANR	4817925	Identifier	upd		4817175	0					
ANR	4817926	Identifier	xprinter		4817175	1					
ANR	4817927	CompoundStatement		122:37:4211:4211	4817175	1					
ANR	4817928	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		4817175	0					
ANR	4817929	Condition	0 == upd -> strings [ S_XMOVE ] . size	5722:15:204811:204841	4817175	0	True				
ANR	4817930	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4817175	0		==			
ANR	4817931	PrimaryExpression	0		4817175	0					
ANR	4817932	MemberAccess	upd -> strings [ S_XMOVE ] . size		4817175	1					
ANR	4817933	ArrayIndexing	upd -> strings [ S_XMOVE ]		4817175	0					
ANR	4817934	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4817935	Identifier	upd		4817175	0					
ANR	4817936	Identifier	strings		4817175	1					
ANR	4817937	Identifier	S_XMOVE		4817175	1					
ANR	4817938	Identifier	size		4817175	1					
ANR	4817939	CompoundStatement		124:48:4262:4262	4817175	1					
ANR	4817940	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\r'	5724:15:204862:204891	4817175	0	True				
ANR	4817941	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\r'		4817175	0		=			
ANR	4817942	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4817175	0					
ANR	4817943	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4817944	Identifier	upd		4817175	0					
ANR	4817945	Identifier	outbuf		4817175	1					
ANR	4817946	PostIncDecOperationExpression	ioutbuf ++		4817175	1					
ANR	4817947	Identifier	ioutbuf		4817175	0					
ANR	4817948	IncDec	++		4817175	1					
ANR	4817949	PrimaryExpression	'\\r'		4817175	1					
ANR	4817950	ExpressionStatement	upd -> xprinter = 0	5725:15:204908:204935	4817175	1	True				
ANR	4817951	AssignmentExpression	upd -> xprinter = 0		4817175	0		=			
ANR	4817952	PtrMemberAccess	upd -> xprinter		4817175	0					
ANR	4817953	Identifier	upd		4817175	0					
ANR	4817954	Identifier	xprinter		4817175	1					
ANR	4817955	PrimaryExpression	0		4817175	1					
ANR	4817956	ExpressionStatement	n = 0	5726:15:204952:204957	4817175	2	True				
ANR	4817957	AssignmentExpression	n = 0		4817175	0		=			
ANR	4817958	Identifier	n		4817175	0					
ANR	4817959	PrimaryExpression	0		4817175	1					
ANR	4817960	ExpressionStatement	x = 0	5727:15:204974:204979	4817175	3	True				
ANR	4817961	AssignmentExpression	x = 0		4817175	0		=			
ANR	4817962	Identifier	x		4817175	0					
ANR	4817963	PrimaryExpression	0		4817175	1					
ANR	4817964	ElseStatement	else		4817175	0					
ANR	4817965	CompoundStatement		131:19:4419:4419	4817175	0					
ANR	4817966	IfStatement	if ( B_XABS & upd -> flags )		4817175	0					
ANR	4817967	Condition	B_XABS & upd -> flags	5731:18:205022:205040	4817175	0	True				
ANR	4817968	BitAndExpression	B_XABS & upd -> flags		4817175	0		&			
ANR	4817969	Identifier	B_XABS		4817175	0					
ANR	4817970	PtrMemberAccess	upd -> flags		4817175	1					
ANR	4817971	Identifier	upd		4817175	0					
ANR	4817972	Identifier	flags		4817175	1					
ANR	4817973	ExpressionStatement	n = x = xbegin + upd -> ints [ I_XOFS ]	5731:39:205043:205077	4817175	1	True				
ANR	4817974	AssignmentExpression	n = x = xbegin + upd -> ints [ I_XOFS ]		4817175	0		=			
ANR	4817975	Identifier	n		4817175	0					
ANR	4817976	AssignmentExpression	x = xbegin + upd -> ints [ I_XOFS ]		4817175	1		=			
ANR	4817977	Identifier	x		4817175	0					
ANR	4817978	AdditiveExpression	xbegin + upd -> ints [ I_XOFS ]		4817175	1		+			
ANR	4817979	Identifier	xbegin		4817175	0					
ANR	4817980	ArrayIndexing	upd -> ints [ I_XOFS ]		4817175	1					
ANR	4817981	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4817982	Identifier	upd		4817175	0					
ANR	4817983	Identifier	ints		4817175	1					
ANR	4817984	Identifier	I_XOFS		4817175	1					
ANR	4817985	ElseStatement	else		4817175	0					
ANR	4817986	ExpressionStatement	n = x = xbegin - upd -> xprinter	5732:39:205118:205148	4817175	0	True				
ANR	4817987	AssignmentExpression	n = x = xbegin - upd -> xprinter		4817175	0		=			
ANR	4817988	Identifier	n		4817175	0					
ANR	4817989	AssignmentExpression	x = xbegin - upd -> xprinter		4817175	1		=			
ANR	4817990	Identifier	x		4817175	0					
ANR	4817991	AdditiveExpression	xbegin - upd -> xprinter		4817175	1		-			
ANR	4817992	Identifier	xbegin		4817175	0					
ANR	4817993	PtrMemberAccess	upd -> xprinter		4817175	1					
ANR	4817994	Identifier	upd		4817175	0					
ANR	4817995	Identifier	xprinter		4817175	1					
ANR	4817996	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		4817175	1					
ANR	4817997	Condition	1 < upd -> ints [ I_XSTEP ]	5734:26:205177:205198	4817175	0	True				
ANR	4817998	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		4817175	0		<			
ANR	4817999	PrimaryExpression	1		4817175	0					
ANR	4818000	ArrayIndexing	upd -> ints [ I_XSTEP ]		4817175	1					
ANR	4818001	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818002	Identifier	upd		4817175	0					
ANR	4818003	Identifier	ints		4817175	1					
ANR	4818004	Identifier	I_XSTEP		4817175	1					
ANR	4818005	CompoundStatement		136:50:4619:4619	4817175	1					
ANR	4818006	IfStatement	if ( 0 > n )		4817175	0					
ANR	4818007	Condition	0 > n	5735:21:205224:205228	4817175	0	True				
ANR	4818008	RelationalExpression	0 > n		4817175	0		>			
ANR	4818009	PrimaryExpression	0		4817175	0					
ANR	4818010	Identifier	n		4817175	1					
ANR	4818011	CompoundStatement		137:28:4649:4649	4817175	1					
ANR	4818012	ExpressionStatement	n -= upd -> ints [ I_XSTEP ]	5736:21:205254:205278	4817175	0	True				
ANR	4818013	AssignmentExpression	n -= upd -> ints [ I_XSTEP ]		4817175	0		-=			
ANR	4818014	Identifier	n		4817175	0					
ANR	4818015	ArrayIndexing	upd -> ints [ I_XSTEP ]		4817175	1					
ANR	4818016	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818017	Identifier	upd		4817175	0					
ANR	4818018	Identifier	ints		4817175	1					
ANR	4818019	Identifier	I_XSTEP		4817175	1					
ANR	4818020	ExpressionStatement	x -= n	5737:21:205301:205308	4817175	1	True				
ANR	4818021	AssignmentExpression	x -= n		4817175	0		-=			
ANR	4818022	Identifier	x		4817175	0					
ANR	4818023	Identifier	n		4817175	1					
ANR	4818024	IfStatement	if ( n )		4817175	1					
ANR	4818025	Condition	n	5739:21:205351:205351	4817175	0	True				
ANR	4818026	Identifier	n		4817175	0					
ANR	4818027	ExpressionStatement	n /= upd -> ints [ I_XSTEP ]	5739:24:205354:205378	4817175	1	True				
ANR	4818028	AssignmentExpression	n /= upd -> ints [ I_XSTEP ]		4817175	0		/=			
ANR	4818029	Identifier	n		4817175	0					
ANR	4818030	ArrayIndexing	upd -> ints [ I_XSTEP ]		4817175	1					
ANR	4818031	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818032	Identifier	upd		4817175	0					
ANR	4818033	Identifier	ints		4817175	1					
ANR	4818034	Identifier	I_XSTEP		4817175	1					
ANR	4818035	IfStatement	if ( x )		4817175	2					
ANR	4818036	Condition	x	5740:21:205419:205419	4817175	0	True				
ANR	4818037	Identifier	x		4817175	0					
ANR	4818038	ExpressionStatement	x %= upd -> ints [ I_XSTEP ]	5740:24:205422:205446	4817175	1	True				
ANR	4818039	AssignmentExpression	x %= upd -> ints [ I_XSTEP ]		4817175	0		%=			
ANR	4818040	Identifier	x		4817175	0					
ANR	4818041	ArrayIndexing	upd -> ints [ I_XSTEP ]		4817175	1					
ANR	4818042	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818043	Identifier	upd		4817175	0					
ANR	4818044	Identifier	ints		4817175	1					
ANR	4818045	Identifier	I_XSTEP		4817175	1					
ANR	4818046	ElseStatement	else		4817175	0					
ANR	4818047	IfStatement	if ( - 1 > upd -> ints [ I_XSTEP ] )		4817175	0					
ANR	4818048	Condition	- 1 > upd -> ints [ I_XSTEP ]	5742:25:205492:205514	4817175	0	True				
ANR	4818049	RelationalExpression	- 1 > upd -> ints [ I_XSTEP ]		4817175	0		>			
ANR	4818050	UnaryOperationExpression	- 1		4817175	0					
ANR	4818051	UnaryOperator	-		4817175	0					
ANR	4818052	PrimaryExpression	1		4817175	1					
ANR	4818053	ArrayIndexing	upd -> ints [ I_XSTEP ]		4817175	1					
ANR	4818054	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818055	Identifier	upd		4817175	0					
ANR	4818056	Identifier	ints		4817175	1					
ANR	4818057	Identifier	I_XSTEP		4817175	1					
ANR	4818058	CompoundStatement		144:50:4935:4935	4817175	1					
ANR	4818059	ExpressionStatement	n *= - upd -> ints [ I_XSTEP ]	5743:18:205537:205561	4817175	0	True				
ANR	4818060	AssignmentExpression	n *= - upd -> ints [ I_XSTEP ]		4817175	0		*=			
ANR	4818061	Identifier	n		4817175	0					
ANR	4818062	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		4817175	1					
ANR	4818063	UnaryOperator	-		4817175	0					
ANR	4818064	ArrayIndexing	upd -> ints [ I_XSTEP ]		4817175	1					
ANR	4818065	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818066	Identifier	upd		4817175	0					
ANR	4818067	Identifier	ints		4817175	1					
ANR	4818068	Identifier	I_XSTEP		4817175	1					
ANR	4818069	ExpressionStatement	x = 0	5744:18:205602:205608	4817175	1	True				
ANR	4818070	AssignmentExpression	x = 0		4817175	0		=			
ANR	4818071	Identifier	x		4817175	0					
ANR	4818072	PrimaryExpression	0		4817175	1					
ANR	4818073	IfStatement	if ( n )		4817175	2					
ANR	4818074	Condition	n	5747:18:205646:205646	4817175	0	True				
ANR	4818075	Identifier	n		4817175	0					
ANR	4818076	CompoundStatement		149:21:5067:5067	4817175	1					
ANR	4818077	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"	5749:17:205693:205834	4817175	0	True				
ANR	4818078	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"		4817175	0					
ANR	4818079	Callee	memcpy		4817175	0					
ANR	4818080	Identifier	memcpy		4817175	0					
ANR	4818081	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4818082	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4818083	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4818084	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818085	Identifier	upd		4817175	0					
ANR	4818086	Identifier	outbuf		4817175	1					
ANR	4818087	Identifier	ioutbuf		4817175	1					
ANR	4818088	Argument	upd -> strings [ S_XMOVE ] . data		4817175	1					
ANR	4818089	MemberAccess	upd -> strings [ S_XMOVE ] . data		4817175	0					
ANR	4818090	ArrayIndexing	upd -> strings [ S_XMOVE ]		4817175	0					
ANR	4818091	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4818092	Identifier	upd		4817175	0					
ANR	4818093	Identifier	strings		4817175	1					
ANR	4818094	Identifier	S_XMOVE		4817175	1					
ANR	4818095	Identifier	data		4817175	1					
ANR	4818096	Argument	upd -> strings [ S_XMOVE ] . size		4817175	2					
ANR	4818097	MemberAccess	upd -> strings [ S_XMOVE ] . size		4817175	0					
ANR	4818098	ArrayIndexing	upd -> strings [ S_XMOVE ]		4817175	0					
ANR	4818099	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4818100	Identifier	upd		4817175	0					
ANR	4818101	Identifier	strings		4817175	1					
ANR	4818102	Identifier	S_XMOVE		4817175	1					
ANR	4818103	Identifier	size		4817175	1					
ANR	4818104	ExpressionStatement	ioutbuf += upd -> strings [ S_XMOVE ] . size	5752:18:205854:205891	4817175	1	True				
ANR	4818105	AssignmentExpression	ioutbuf += upd -> strings [ S_XMOVE ] . size		4817175	0		+=			
ANR	4818106	Identifier	ioutbuf		4817175	0					
ANR	4818107	MemberAccess	upd -> strings [ S_XMOVE ] . size		4817175	1					
ANR	4818108	ArrayIndexing	upd -> strings [ S_XMOVE ]		4817175	0					
ANR	4818109	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4818110	Identifier	upd		4817175	0					
ANR	4818111	Identifier	strings		4817175	1					
ANR	4818112	Identifier	S_XMOVE		4817175	1					
ANR	4818113	Identifier	size		4817175	1					
ANR	4818114	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5754:18:205912:205950	4817175	2	True				
ANR	4818115	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		4817175	0		=			
ANR	4818116	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4817175	0					
ANR	4818117	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818118	Identifier	upd		4817175	0					
ANR	4818119	Identifier	outbuf		4817175	1					
ANR	4818120	PostIncDecOperationExpression	ioutbuf ++		4817175	1					
ANR	4818121	Identifier	ioutbuf		4817175	0					
ANR	4818122	IncDec	++		4817175	1					
ANR	4818123	BitAndExpression	n & 0xff		4817175	1		&			
ANR	4818124	Identifier	n		4817175	0					
ANR	4818125	PrimaryExpression	0xff		4817175	1					
ANR	4818126	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5755:18:205970:206008	4817175	3	True				
ANR	4818127	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		4817175	0		=			
ANR	4818128	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4817175	0					
ANR	4818129	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818130	Identifier	upd		4817175	0					
ANR	4818131	Identifier	outbuf		4817175	1					
ANR	4818132	PostIncDecOperationExpression	ioutbuf ++		4817175	1					
ANR	4818133	Identifier	ioutbuf		4817175	0					
ANR	4818134	IncDec	++		4817175	1					
ANR	4818135	BitAndExpression	( n >> 8 ) & 0xff		4817175	1		&			
ANR	4818136	ShiftExpression	n >> 8		4817175	0		>>			
ANR	4818137	Identifier	n		4817175	0					
ANR	4818138	PrimaryExpression	8		4817175	1					
ANR	4818139	PrimaryExpression	0xff		4817175	1					
ANR	4818140	IfStatement	if ( x && 0 < upd -> strings [ S_XSTEP ] . size )		4817175	1					
ANR	4818141	Condition	x && 0 < upd -> strings [ S_XSTEP ] . size	5761:15:206089:206123	4817175	0	True				
ANR	4818142	AndExpression	x && 0 < upd -> strings [ S_XSTEP ] . size		4817175	0		&&			
ANR	4818143	Identifier	x		4817175	0					
ANR	4818144	RelationalExpression	0 < upd -> strings [ S_XSTEP ] . size		4817175	1		<			
ANR	4818145	PrimaryExpression	0		4817175	0					
ANR	4818146	MemberAccess	upd -> strings [ S_XSTEP ] . size		4817175	1					
ANR	4818147	ArrayIndexing	upd -> strings [ S_XSTEP ]		4817175	0					
ANR	4818148	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4818149	Identifier	upd		4817175	0					
ANR	4818150	Identifier	strings		4817175	1					
ANR	4818151	Identifier	S_XSTEP		4817175	1					
ANR	4818152	Identifier	size		4817175	1					
ANR	4818153	CompoundStatement		163:52:5544:5544	4817175	1					
ANR	4818154	WhileStatement	while ( x -- )		4817175	0					
ANR	4818155	Condition	x --	5762:21:206169:206171	4817175	0	True				
ANR	4818156	PostIncDecOperationExpression	x --		4817175	0					
ANR	4818157	Identifier	x		4817175	0					
ANR	4818158	IncDec	--		4817175	1					
ANR	4818159	CompoundStatement		164:26:5592:5592	4817175	1					
ANR	4818160	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"	5763:18:206194:206335	4817175	0	True				
ANR	4818161	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"		4817175	0					
ANR	4818162	Callee	memcpy		4817175	0					
ANR	4818163	Identifier	memcpy		4817175	0					
ANR	4818164	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4818165	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4818166	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4818167	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818168	Identifier	upd		4817175	0					
ANR	4818169	Identifier	outbuf		4817175	1					
ANR	4818170	Identifier	ioutbuf		4817175	1					
ANR	4818171	Argument	upd -> strings [ S_XSTEP ] . data		4817175	1					
ANR	4818172	MemberAccess	upd -> strings [ S_XSTEP ] . data		4817175	0					
ANR	4818173	ArrayIndexing	upd -> strings [ S_XSTEP ]		4817175	0					
ANR	4818174	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4818175	Identifier	upd		4817175	0					
ANR	4818176	Identifier	strings		4817175	1					
ANR	4818177	Identifier	S_XSTEP		4817175	1					
ANR	4818178	Identifier	data		4817175	1					
ANR	4818179	Argument	upd -> strings [ S_XSTEP ] . size		4817175	2					
ANR	4818180	MemberAccess	upd -> strings [ S_XSTEP ] . size		4817175	0					
ANR	4818181	ArrayIndexing	upd -> strings [ S_XSTEP ]		4817175	0					
ANR	4818182	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4818183	Identifier	upd		4817175	0					
ANR	4818184	Identifier	strings		4817175	1					
ANR	4818185	Identifier	S_XSTEP		4817175	1					
ANR	4818186	Identifier	size		4817175	1					
ANR	4818187	ExpressionStatement	ioutbuf += upd -> strings [ S_XSTEP ] . size	5766:18:206355:206392	4817175	1	True				
ANR	4818188	AssignmentExpression	ioutbuf += upd -> strings [ S_XSTEP ] . size		4817175	0		+=			
ANR	4818189	Identifier	ioutbuf		4817175	0					
ANR	4818190	MemberAccess	upd -> strings [ S_XSTEP ] . size		4817175	1					
ANR	4818191	ArrayIndexing	upd -> strings [ S_XSTEP ]		4817175	0					
ANR	4818192	PtrMemberAccess	upd -> strings		4817175	0					
ANR	4818193	Identifier	upd		4817175	0					
ANR	4818194	Identifier	strings		4817175	1					
ANR	4818195	Identifier	S_XSTEP		4817175	1					
ANR	4818196	Identifier	size		4817175	1					
ANR	4818197	ExpressionStatement	upd -> xprinter = xend + 1	5770:9:206505:206527	4817175	4	True				
ANR	4818198	AssignmentExpression	upd -> xprinter = xend + 1		4817175	0		=			
ANR	4818199	PtrMemberAccess	upd -> xprinter		4817175	0					
ANR	4818200	Identifier	upd		4817175	0					
ANR	4818201	Identifier	xprinter		4817175	1					
ANR	4818202	AdditiveExpression	xend + 1		4817175	1		+			
ANR	4818203	Identifier	xend		4817175	0					
ANR	4818204	PrimaryExpression	1		4817175	1					
ANR	4818205	IfStatement	if ( 0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )		4817175	5					
ANR	4818206	Condition	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	5775:12:206581:206628	4817175	0	True				
ANR	4818207	RelationalExpression	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4817175	0		<			
ANR	4818208	PrimaryExpression	0		4817175	0					
ANR	4818209	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4817175	1					
ANR	4818210	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4817175	0					
ANR	4818211	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4817175	0					
ANR	4818212	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4817175	0					
ANR	4818213	PtrMemberAccess	upd -> string_a		4817175	0					
ANR	4818214	Identifier	upd		4817175	0					
ANR	4818215	Identifier	string_a		4817175	1					
ANR	4818216	Identifier	SA_WRITECOMP		4817175	1					
ANR	4818217	Identifier	data		4817175	1					
ANR	4818218	Identifier	icomp		4817175	1					
ANR	4818219	Identifier	size		4817175	1					
ANR	4818220	CompoundStatement		177:62:6049:6049	4817175	1					
ANR	4818221	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"	5776:12:206645:206810	4817175	0	True				
ANR	4818222	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"		4817175	0					
ANR	4818223	Callee	memcpy		4817175	0					
ANR	4818224	Identifier	memcpy		4817175	0					
ANR	4818225	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4818226	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4818227	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4818228	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818229	Identifier	upd		4817175	0					
ANR	4818230	Identifier	outbuf		4817175	1					
ANR	4818231	Identifier	ioutbuf		4817175	1					
ANR	4818232	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4817175	1					
ANR	4818233	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4817175	0					
ANR	4818234	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4817175	0					
ANR	4818235	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4817175	0					
ANR	4818236	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4817175	0					
ANR	4818237	PtrMemberAccess	upd -> string_a		4817175	0					
ANR	4818238	Identifier	upd		4817175	0					
ANR	4818239	Identifier	string_a		4817175	1					
ANR	4818240	Identifier	SA_WRITECOMP		4817175	1					
ANR	4818241	Identifier	data		4817175	1					
ANR	4818242	Identifier	icomp		4817175	1					
ANR	4818243	Identifier	data		4817175	1					
ANR	4818244	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4817175	2					
ANR	4818245	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4817175	0					
ANR	4818246	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4817175	0					
ANR	4818247	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4817175	0					
ANR	4818248	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4817175	0					
ANR	4818249	PtrMemberAccess	upd -> string_a		4817175	0					
ANR	4818250	Identifier	upd		4817175	0					
ANR	4818251	Identifier	string_a		4817175	1					
ANR	4818252	Identifier	SA_WRITECOMP		4817175	1					
ANR	4818253	Identifier	data		4817175	1					
ANR	4818254	Identifier	icomp		4817175	1					
ANR	4818255	Identifier	size		4817175	1					
ANR	4818256	ExpressionStatement	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	5779:12:206824:206879	4817175	1	True				
ANR	4818257	AssignmentExpression	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4817175	0		+=			
ANR	4818258	Identifier	ioutbuf		4817175	0					
ANR	4818259	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4817175	1					
ANR	4818260	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4817175	0					
ANR	4818261	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4817175	0					
ANR	4818262	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4817175	0					
ANR	4818263	PtrMemberAccess	upd -> string_a		4817175	0					
ANR	4818264	Identifier	upd		4817175	0					
ANR	4818265	Identifier	string_a		4817175	1					
ANR	4818266	Identifier	SA_WRITECOMP		4817175	1					
ANR	4818267	Identifier	data		4817175	1					
ANR	4818268	Identifier	icomp		4817175	1					
ANR	4818269	Identifier	size		4817175	1					
ANR	4818270	ExpressionStatement	n = xend + 1 - xbegin	5781:9:206901:206922	4817175	6	True				
ANR	4818271	AssignmentExpression	n = xend + 1 - xbegin		4817175	0		=			
ANR	4818272	Identifier	n		4817175	0					
ANR	4818273	AdditiveExpression	xend + 1 - xbegin		4817175	1		+			
ANR	4818274	Identifier	xend		4817175	0					
ANR	4818275	AdditiveExpression	1 - xbegin		4817175	1		-			
ANR	4818276	PrimaryExpression	1		4817175	0					
ANR	4818277	Identifier	xbegin		4817175	1					
ANR	4818278	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n << 3 ) & 255	5782:9:206933:206970	4817175	7	True				
ANR	4818279	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n << 3 ) & 255		4817175	0		=			
ANR	4818280	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4817175	0					
ANR	4818281	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818282	Identifier	upd		4817175	0					
ANR	4818283	Identifier	outbuf		4817175	1					
ANR	4818284	PostIncDecOperationExpression	ioutbuf ++		4817175	1					
ANR	4818285	Identifier	ioutbuf		4817175	0					
ANR	4818286	IncDec	++		4817175	1					
ANR	4818287	BitAndExpression	( n << 3 ) & 255		4817175	1		&			
ANR	4818288	ShiftExpression	n << 3		4817175	0		<<			
ANR	4818289	Identifier	n		4817175	0					
ANR	4818290	PrimaryExpression	3		4817175	1					
ANR	4818291	PrimaryExpression	255		4817175	1					
ANR	4818292	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 5 ) & 255	5783:9:206981:207018	4817175	8	True				
ANR	4818293	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 5 ) & 255		4817175	0		=			
ANR	4818294	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4817175	0					
ANR	4818295	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818296	Identifier	upd		4817175	0					
ANR	4818297	Identifier	outbuf		4817175	1					
ANR	4818298	PostIncDecOperationExpression	ioutbuf ++		4817175	1					
ANR	4818299	Identifier	ioutbuf		4817175	0					
ANR	4818300	IncDec	++		4817175	1					
ANR	4818301	BitAndExpression	( n >> 5 ) & 255		4817175	1		&			
ANR	4818302	ShiftExpression	n >> 5		4817175	0		>>			
ANR	4818303	Identifier	n		4817175	0					
ANR	4818304	PrimaryExpression	5		4817175	1					
ANR	4818305	PrimaryExpression	255		4817175	1					
ANR	4818306	ForStatement	for ( pin = 0 ; pin < pintop ; ++ pin )		4817175	9					
ANR	4818307	ForInit	pin = 0 ;	5787:13:207064:207071	4817175	0	True				
ANR	4818308	AssignmentExpression	pin = 0		4817175	0		=			
ANR	4818309	Identifier	pin		4817175	0					
ANR	4818310	PrimaryExpression	0		4817175	1					
ANR	4818311	Condition	pin < pintop	5787:22:207073:207084	4817175	1	True				
ANR	4818312	RelationalExpression	pin < pintop		4817175	0		<			
ANR	4818313	Identifier	pin		4817175	0					
ANR	4818314	Identifier	pintop		4817175	1					
ANR	4818315	UnaryExpression	++ pin	5787:36:207087:207091	4817175	2	True				
ANR	4818316	IncDec	++		4817175	0					
ANR	4818317	Identifier	pin		4817175	1					
ANR	4818318	CompoundStatement		189:43:6512:6512	4817175	3					
ANR	4818319	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	5788:12:207108:207154	4817175	0	True				
ANR	4818320	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4817175	0		+=			
ANR	4818321	Identifier	ioutbuf		4817175	0					
ANR	4818322	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4817175	1					
ANR	4818323	Callee	upd_rle		4817175	0					
ANR	4818324	Identifier	upd_rle		4817175	0					
ANR	4818325	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4818326	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4818327	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4818328	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818329	Identifier	upd		4817175	0					
ANR	4818330	Identifier	outbuf		4817175	1					
ANR	4818331	Identifier	ioutbuf		4817175	1					
ANR	4818332	Argument	NULL		4817175	1					
ANR	4818333	Identifier	NULL		4817175	0					
ANR	4818334	Argument	n		4817175	2					
ANR	4818335	Identifier	n		4817175	0					
ANR	4818336	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5789:12:207168:207201	4817175	1	True				
ANR	4818337	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4817175	0					
ANR	4818338	Callee	fwrite		4817175	0					
ANR	4818339	Identifier	fwrite		4817175	0					
ANR	4818340	ArgumentList	upd -> outbuf		4817175	1					
ANR	4818341	Argument	upd -> outbuf		4817175	0					
ANR	4818342	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818343	Identifier	upd		4817175	0					
ANR	4818344	Identifier	outbuf		4817175	1					
ANR	4818345	Argument	1		4817175	1					
ANR	4818346	PrimaryExpression	1		4817175	0					
ANR	4818347	Argument	ioutbuf		4817175	2					
ANR	4818348	Identifier	ioutbuf		4817175	0					
ANR	4818349	Argument	out		4817175	3					
ANR	4818350	Identifier	out		4817175	0					
ANR	4818351	ExpressionStatement	ioutbuf = 0	5790:12:207215:207226	4817175	2	True				
ANR	4818352	AssignmentExpression	ioutbuf = 0		4817175	0		=			
ANR	4818353	Identifier	ioutbuf		4817175	0					
ANR	4818354	PrimaryExpression	0		4817175	1					
ANR	4818355	ForStatement	for ( y = ybegin ; 0 > y ; y += upd -> ints [ I_NYPASS ] )		4817175	10					
ANR	4818356	ForInit	y = ybegin ;	5793:13:207253:207263	4817175	0	True				
ANR	4818357	AssignmentExpression	y = ybegin		4817175	0		=			
ANR	4818358	Identifier	y		4817175	0					
ANR	4818359	Identifier	ybegin		4817175	1					
ANR	4818360	Condition	0 > y	5793:25:207265:207269	4817175	1	True				
ANR	4818361	RelationalExpression	0 > y		4817175	0		>			
ANR	4818362	PrimaryExpression	0		4817175	0					
ANR	4818363	Identifier	y		4817175	1					
ANR	4818364	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5793:35:207275:207298	4817175	2	True	+=			
ANR	4818365	Identifier	y		4817175	0					
ANR	4818366	ArrayIndexing	upd -> ints [ I_NYPASS ]		4817175	1					
ANR	4818367	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818368	Identifier	upd		4817175	0					
ANR	4818369	Identifier	ints		4817175	1					
ANR	4818370	Identifier	I_NYPASS		4817175	1					
ANR	4818371	CompoundStatement		195:61:6719:6719	4817175	3					
ANR	4818372	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	5794:12:207315:207361	4817175	0	True				
ANR	4818373	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4817175	0		+=			
ANR	4818374	Identifier	ioutbuf		4817175	0					
ANR	4818375	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4817175	1					
ANR	4818376	Callee	upd_rle		4817175	0					
ANR	4818377	Identifier	upd_rle		4817175	0					
ANR	4818378	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4818379	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4818380	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4818381	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818382	Identifier	upd		4817175	0					
ANR	4818383	Identifier	outbuf		4817175	1					
ANR	4818384	Identifier	ioutbuf		4817175	1					
ANR	4818385	Argument	NULL		4817175	1					
ANR	4818386	Identifier	NULL		4817175	0					
ANR	4818387	Argument	n		4817175	2					
ANR	4818388	Identifier	n		4817175	0					
ANR	4818389	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5795:12:207375:207408	4817175	1	True				
ANR	4818390	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4817175	0					
ANR	4818391	Callee	fwrite		4817175	0					
ANR	4818392	Identifier	fwrite		4817175	0					
ANR	4818393	ArgumentList	upd -> outbuf		4817175	1					
ANR	4818394	Argument	upd -> outbuf		4817175	0					
ANR	4818395	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818396	Identifier	upd		4817175	0					
ANR	4818397	Identifier	outbuf		4817175	1					
ANR	4818398	Argument	1		4817175	1					
ANR	4818399	PrimaryExpression	1		4817175	0					
ANR	4818400	Argument	ioutbuf		4817175	2					
ANR	4818401	Identifier	ioutbuf		4817175	0					
ANR	4818402	Argument	out		4817175	3					
ANR	4818403	Identifier	out		4817175	0					
ANR	4818404	ExpressionStatement	ioutbuf = 0	5796:12:207422:207433	4817175	2	True				
ANR	4818405	AssignmentExpression	ioutbuf = 0		4817175	0		=			
ANR	4818406	Identifier	ioutbuf		4817175	0					
ANR	4818407	PrimaryExpression	0		4817175	1					
ANR	4818408	ForStatement	for ( ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4817175	11					
ANR	4818409	Condition	y < yend	5799:15:207462:207469	4817175	0	True				
ANR	4818410	RelationalExpression	y < yend		4817175	0		<			
ANR	4818411	Identifier	y		4817175	0					
ANR	4818412	Identifier	yend		4817175	1					
ANR	4818413	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5799:25:207472:207495	4817175	1	True	+=			
ANR	4818414	Identifier	y		4817175	0					
ANR	4818415	ArrayIndexing	upd -> ints [ I_NYPASS ]		4817175	1					
ANR	4818416	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818417	Identifier	upd		4817175	0					
ANR	4818418	Identifier	ints		4817175	1					
ANR	4818419	Identifier	I_NYPASS		4817175	1					
ANR	4818420	CompoundStatement		201:51:6916:6916	4817175	2					
ANR	4818421	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"	5800:12:207512:207618	4817175	0	True				
ANR	4818422	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"		4817175	0		+=			
ANR	4818423	Identifier	ioutbuf		4817175	0					
ANR	4818424	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"		4817175	1					
ANR	4818425	Callee	upd_rle		4817175	0					
ANR	4818426	Identifier	upd_rle		4817175	0					
ANR	4818427	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4818428	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4818429	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4818430	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818431	Identifier	upd		4817175	0					
ANR	4818432	Identifier	outbuf		4817175	1					
ANR	4818433	Identifier	ioutbuf		4817175	1					
ANR	4818434	Argument	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin		4817175	1					
ANR	4818435	AdditiveExpression	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes + xbegin		4817175	0		+			
ANR	4818436	MemberAccess	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		4817175	0					
ANR	4818437	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ]		4817175	0					
ANR	4818438	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4817175	0					
ANR	4818439	PtrMemberAccess	upd -> scnbuf		4817175	0					
ANR	4818440	Identifier	upd		4817175	0					
ANR	4818441	Identifier	scnbuf		4817175	1					
ANR	4818442	BitAndExpression	y & upd -> scnmsk		4817175	1		&			
ANR	4818443	Identifier	y		4817175	0					
ANR	4818444	PtrMemberAccess	upd -> scnmsk		4817175	1					
ANR	4818445	Identifier	upd		4817175	0					
ANR	4818446	Identifier	scnmsk		4817175	1					
ANR	4818447	Identifier	icomp		4817175	1					
ANR	4818448	Identifier	bytes		4817175	1					
ANR	4818449	Identifier	xbegin		4817175	1					
ANR	4818450	Argument	n		4817175	2					
ANR	4818451	Identifier	n		4817175	0					
ANR	4818452	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5802:12:207632:207665	4817175	1	True				
ANR	4818453	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4817175	0					
ANR	4818454	Callee	fwrite		4817175	0					
ANR	4818455	Identifier	fwrite		4817175	0					
ANR	4818456	ArgumentList	upd -> outbuf		4817175	1					
ANR	4818457	Argument	upd -> outbuf		4817175	0					
ANR	4818458	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818459	Identifier	upd		4817175	0					
ANR	4818460	Identifier	outbuf		4817175	1					
ANR	4818461	Argument	1		4817175	1					
ANR	4818462	PrimaryExpression	1		4817175	0					
ANR	4818463	Argument	ioutbuf		4817175	2					
ANR	4818464	Identifier	ioutbuf		4817175	0					
ANR	4818465	Argument	out		4817175	3					
ANR	4818466	Identifier	out		4817175	0					
ANR	4818467	ExpressionStatement	ioutbuf = 0	5803:12:207679:207690	4817175	2	True				
ANR	4818468	AssignmentExpression	ioutbuf = 0		4817175	0		=			
ANR	4818469	Identifier	ioutbuf		4817175	0					
ANR	4818470	PrimaryExpression	0		4817175	1					
ANR	4818471	ForStatement	for ( pin = pinbot ; pin < upd -> ints [ I_PINS2WRITE ] ; ++ pin )		4817175	12					
ANR	4818472	ForInit	pin = pinbot ;	5806:13:207717:207729	4817175	0	True				
ANR	4818473	AssignmentExpression	pin = pinbot		4817175	0		=			
ANR	4818474	Identifier	pin		4817175	0					
ANR	4818475	Identifier	pinbot		4817175	1					
ANR	4818476	Condition	pin < upd -> ints [ I_PINS2WRITE ]	5806:27:207731:207759	4817175	1	True				
ANR	4818477	RelationalExpression	pin < upd -> ints [ I_PINS2WRITE ]		4817175	0		<			
ANR	4818478	Identifier	pin		4817175	0					
ANR	4818479	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4817175	1					
ANR	4818480	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818481	Identifier	upd		4817175	0					
ANR	4818482	Identifier	ints		4817175	1					
ANR	4818483	Identifier	I_PINS2WRITE		4817175	1					
ANR	4818484	UnaryExpression	++ pin	5806:58:207762:207766	4817175	2	True				
ANR	4818485	IncDec	++		4817175	0					
ANR	4818486	Identifier	pin		4817175	1					
ANR	4818487	CompoundStatement		208:65:7187:7187	4817175	3					
ANR	4818488	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	5807:12:207783:207829	4817175	0	True				
ANR	4818489	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4817175	0		+=			
ANR	4818490	Identifier	ioutbuf		4817175	0					
ANR	4818491	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4817175	1					
ANR	4818492	Callee	upd_rle		4817175	0					
ANR	4818493	Identifier	upd_rle		4817175	0					
ANR	4818494	ArgumentList	upd -> outbuf + ioutbuf		4817175	1					
ANR	4818495	Argument	upd -> outbuf + ioutbuf		4817175	0					
ANR	4818496	AdditiveExpression	upd -> outbuf + ioutbuf		4817175	0		+			
ANR	4818497	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818498	Identifier	upd		4817175	0					
ANR	4818499	Identifier	outbuf		4817175	1					
ANR	4818500	Identifier	ioutbuf		4817175	1					
ANR	4818501	Argument	NULL		4817175	1					
ANR	4818502	Identifier	NULL		4817175	0					
ANR	4818503	Argument	n		4817175	2					
ANR	4818504	Identifier	n		4817175	0					
ANR	4818505	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	5808:12:207843:207876	4817175	1	True				
ANR	4818506	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4817175	0					
ANR	4818507	Callee	fwrite		4817175	0					
ANR	4818508	Identifier	fwrite		4817175	0					
ANR	4818509	ArgumentList	upd -> outbuf		4817175	1					
ANR	4818510	Argument	upd -> outbuf		4817175	0					
ANR	4818511	PtrMemberAccess	upd -> outbuf		4817175	0					
ANR	4818512	Identifier	upd		4817175	0					
ANR	4818513	Identifier	outbuf		4817175	1					
ANR	4818514	Argument	1		4817175	1					
ANR	4818515	PrimaryExpression	1		4817175	0					
ANR	4818516	Argument	ioutbuf		4817175	2					
ANR	4818517	Identifier	ioutbuf		4817175	0					
ANR	4818518	Argument	out		4817175	3					
ANR	4818519	Identifier	out		4817175	0					
ANR	4818520	ExpressionStatement	ioutbuf = 0	5809:12:207890:207901	4817175	2	True				
ANR	4818521	AssignmentExpression	ioutbuf = 0		4817175	0		=			
ANR	4818522	Identifier	ioutbuf		4817175	0					
ANR	4818523	PrimaryExpression	0		4817175	1					
ANR	4818524	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		4817175	10					
ANR	4818525	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	5815:6:208088:208118	4817175	0	True				
ANR	4818526	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		4817175	0		<			
ANR	4818527	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4818528	Identifier	upd		4817175	0					
ANR	4818529	Identifier	yscan		4817175	1					
ANR	4818530	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4817175	1					
ANR	4818531	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818532	Identifier	upd		4817175	0					
ANR	4818533	Identifier	ints		4817175	1					
ANR	4818534	Identifier	I_BEG_Y		4817175	1					
ANR	4818535	CompoundStatement		217:39:7539:7539	4817175	1					
ANR	4818536	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]	5816:6:208129:208183	4817175	0	True				
ANR	4818537	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		4817175	0		+=			
ANR	4818538	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4818539	Identifier	upd		4817175	0					
ANR	4818540	Identifier	yscan		4817175	1					
ANR	4818541	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		4817175	1					
ANR	4818542	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		4817175	0					
ANR	4818543	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4817175	0					
ANR	4818544	PtrMemberAccess	upd -> int_a		4817175	0					
ANR	4818545	Identifier	upd		4817175	0					
ANR	4818546	Identifier	int_a		4817175	1					
ANR	4818547	Identifier	IA_BEG_DY		4817175	1					
ANR	4818548	Identifier	data		4817175	1					
ANR	4818549	PostIncDecOperationExpression	upd -> ipass ++		4817175	1					
ANR	4818550	PtrMemberAccess	upd -> ipass		4817175	0					
ANR	4818551	Identifier	upd		4817175	0					
ANR	4818552	Identifier	ipass		4817175	1					
ANR	4818553	IncDec	++		4817175	1					
ANR	4818554	IfStatement	if ( upd -> ints [ I_BEG_Y ] <= upd -> yscan )		4817175	1					
ANR	4818555	Condition	upd -> ints [ I_BEG_Y ] <= upd -> yscan	5817:14:208199:208230	4817175	0	True				
ANR	4818556	RelationalExpression	upd -> ints [ I_BEG_Y ] <= upd -> yscan		4817175	0		<=			
ANR	4818557	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4817175	0					
ANR	4818558	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818559	Identifier	upd		4817175	0					
ANR	4818560	Identifier	ints		4817175	1					
ANR	4818561	Identifier	I_BEG_Y		4817175	1					
ANR	4818562	PtrMemberAccess	upd -> yscan		4817175	1					
ANR	4818563	Identifier	upd		4817175	0					
ANR	4818564	Identifier	yscan		4817175	1					
ANR	4818565	ExpressionStatement	upd -> ipass = 0	5817:48:208233:208247	4817175	1	True				
ANR	4818566	AssignmentExpression	upd -> ipass = 0		4817175	0		=			
ANR	4818567	PtrMemberAccess	upd -> ipass		4817175	0					
ANR	4818568	Identifier	upd		4817175	0					
ANR	4818569	Identifier	ipass		4817175	1					
ANR	4818570	PrimaryExpression	0		4817175	1					
ANR	4818571	ElseStatement	else		4817175	0					
ANR	4818572	IfStatement	if ( upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass )		4817175	0					
ANR	4818573	Condition	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass	5818:14:208263:208302	4817175	0	True				
ANR	4818574	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass		4817175	0		<=			
ANR	4818575	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4817175	0					
ANR	4818576	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4817175	0					
ANR	4818577	PtrMemberAccess	upd -> int_a		4817175	0					
ANR	4818578	Identifier	upd		4817175	0					
ANR	4818579	Identifier	int_a		4817175	1					
ANR	4818580	Identifier	IA_BEG_DY		4817175	1					
ANR	4818581	Identifier	size		4817175	1					
ANR	4818582	PtrMemberAccess	upd -> ipass		4817175	1					
ANR	4818583	Identifier	upd		4817175	0					
ANR	4818584	Identifier	ipass		4817175	1					
ANR	4818585	ExpressionStatement	upd -> ipass = 0	5818:56:208305:208319	4817175	1	True				
ANR	4818586	AssignmentExpression	upd -> ipass = 0		4817175	0		=			
ANR	4818587	PtrMemberAccess	upd -> ipass		4817175	0					
ANR	4818588	Identifier	upd		4817175	0					
ANR	4818589	Identifier	ipass		4817175	1					
ANR	4818590	PrimaryExpression	0		4817175	1					
ANR	4818591	ElseStatement	else		4817175	0					
ANR	4818592	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4817175	0					
ANR	4818593	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5819:13:208334:208365	4817175	0	True				
ANR	4818594	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4817175	0		>=			
ANR	4818595	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4818596	Identifier	upd		4817175	0					
ANR	4818597	Identifier	yscan		4817175	1					
ANR	4818598	ArrayIndexing	upd -> ints [ I_END_Y ]		4817175	1					
ANR	4818599	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818600	Identifier	upd		4817175	0					
ANR	4818601	Identifier	ints		4817175	1					
ANR	4818602	Identifier	I_END_Y		4817175	1					
ANR	4818603	CompoundStatement		221:47:7786:7786	4817175	1					
ANR	4818604	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]	5820:6:208376:208430	4817175	0	True				
ANR	4818605	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		4817175	0		+=			
ANR	4818606	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4818607	Identifier	upd		4817175	0					
ANR	4818608	Identifier	yscan		4817175	1					
ANR	4818609	ArrayIndexing	upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		4817175	1					
ANR	4818610	MemberAccess	upd -> int_a [ IA_END_DY ] . data		4817175	0					
ANR	4818611	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4817175	0					
ANR	4818612	PtrMemberAccess	upd -> int_a		4817175	0					
ANR	4818613	Identifier	upd		4817175	0					
ANR	4818614	Identifier	int_a		4817175	1					
ANR	4818615	Identifier	IA_END_DY		4817175	1					
ANR	4818616	Identifier	data		4817175	1					
ANR	4818617	PostIncDecOperationExpression	upd -> ipass ++		4817175	1					
ANR	4818618	PtrMemberAccess	upd -> ipass		4817175	0					
ANR	4818619	Identifier	upd		4817175	0					
ANR	4818620	Identifier	ipass		4817175	1					
ANR	4818621	IncDec	++		4817175	1					
ANR	4818622	IfStatement	if ( upd -> int_a [ IA_END_DY ] . size <= upd -> ipass )		4817175	1					
ANR	4818623	Condition	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass	5821:9:208441:208480	4817175	0	True				
ANR	4818624	RelationalExpression	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass		4817175	0		<=			
ANR	4818625	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4817175	0					
ANR	4818626	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4817175	0					
ANR	4818627	PtrMemberAccess	upd -> int_a		4817175	0					
ANR	4818628	Identifier	upd		4817175	0					
ANR	4818629	Identifier	int_a		4817175	1					
ANR	4818630	Identifier	IA_END_DY		4817175	1					
ANR	4818631	Identifier	size		4817175	1					
ANR	4818632	PtrMemberAccess	upd -> ipass		4817175	1					
ANR	4818633	Identifier	upd		4817175	0					
ANR	4818634	Identifier	ipass		4817175	1					
ANR	4818635	ExpressionStatement	upd -> ipass = 0	5821:51:208483:208497	4817175	1	True				
ANR	4818636	AssignmentExpression	upd -> ipass = 0		4817175	0		=			
ANR	4818637	PtrMemberAccess	upd -> ipass		4817175	0					
ANR	4818638	Identifier	upd		4817175	0					
ANR	4818639	Identifier	ipass		4817175	1					
ANR	4818640	PrimaryExpression	0		4817175	1					
ANR	4818641	ElseStatement	else		4817175	0					
ANR	4818642	CompoundStatement		224:10:7927:7927	4817175	0					
ANR	4818643	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]	5823:6:208517:208571	4817175	0	True				
ANR	4818644	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		4817175	0		+=			
ANR	4818645	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4818646	Identifier	upd		4817175	0					
ANR	4818647	Identifier	yscan		4817175	1					
ANR	4818648	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		4817175	1					
ANR	4818649	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		4817175	0					
ANR	4818650	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4817175	0					
ANR	4818651	PtrMemberAccess	upd -> int_a		4817175	0					
ANR	4818652	Identifier	upd		4817175	0					
ANR	4818653	Identifier	int_a		4817175	1					
ANR	4818654	Identifier	IA_STD_DY		4817175	1					
ANR	4818655	Identifier	data		4817175	1					
ANR	4818656	PostIncDecOperationExpression	upd -> ipass ++		4817175	1					
ANR	4818657	PtrMemberAccess	upd -> ipass		4817175	0					
ANR	4818658	Identifier	upd		4817175	0					
ANR	4818659	Identifier	ipass		4817175	1					
ANR	4818660	IncDec	++		4817175	1					
ANR	4818661	IfStatement	if ( upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass )		4817175	1					
ANR	4818662	Condition	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass	5824:9:208582:208621	4817175	0	True				
ANR	4818663	RelationalExpression	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass		4817175	0		<=			
ANR	4818664	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4817175	0					
ANR	4818665	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4817175	0					
ANR	4818666	PtrMemberAccess	upd -> int_a		4817175	0					
ANR	4818667	Identifier	upd		4817175	0					
ANR	4818668	Identifier	int_a		4817175	1					
ANR	4818669	Identifier	IA_STD_DY		4817175	1					
ANR	4818670	Identifier	size		4817175	1					
ANR	4818671	PtrMemberAccess	upd -> ipass		4817175	1					
ANR	4818672	Identifier	upd		4817175	0					
ANR	4818673	Identifier	ipass		4817175	1					
ANR	4818674	ExpressionStatement	upd -> ipass = 0	5824:51:208624:208638	4817175	1	True				
ANR	4818675	AssignmentExpression	upd -> ipass = 0		4817175	0		=			
ANR	4818676	PtrMemberAccess	upd -> ipass		4817175	0					
ANR	4818677	Identifier	upd		4817175	0					
ANR	4818678	Identifier	ipass		4817175	1					
ANR	4818679	PrimaryExpression	0		4817175	1					
ANR	4818680	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4817175	2					
ANR	4818681	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5825:9:208649:208680	4817175	0	True				
ANR	4818682	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4817175	0		>=			
ANR	4818683	PtrMemberAccess	upd -> yscan		4817175	0					
ANR	4818684	Identifier	upd		4817175	0					
ANR	4818685	Identifier	yscan		4817175	1					
ANR	4818686	ArrayIndexing	upd -> ints [ I_END_Y ]		4817175	1					
ANR	4818687	PtrMemberAccess	upd -> ints		4817175	0					
ANR	4818688	Identifier	upd		4817175	0					
ANR	4818689	Identifier	ints		4817175	1					
ANR	4818690	Identifier	I_END_Y		4817175	1					
ANR	4818691	ExpressionStatement	upd -> ipass = 0	5825:51:208691:208705	4817175	1	True				
ANR	4818692	AssignmentExpression	upd -> ipass = 0		4817175	0		=			
ANR	4818693	PtrMemberAccess	upd -> ipass		4817175	0					
ANR	4818694	Identifier	upd		4817175	0					
ANR	4818695	Identifier	ipass		4817175	1					
ANR	4818696	PrimaryExpression	0		4817175	1					
ANR	4818697	ReturnStatement	return 0 ;	5828:3:208716:208724	4817175	11	True				
ANR	4818698	PrimaryExpression	0		4817175	0					
ANR	4818699	ReturnType	static int		4817175	1					
ANR	4818700	Identifier	upd_wrtescp2		4817175	2					
ANR	4818701	ParameterList	"upd_p upd , FILE * out"		4817175	3					
ANR	4818702	Parameter	upd_p upd	5598:13:200559:200567	4817175	0	True				
ANR	4818703	ParameterType	upd_p		4817175	0					
ANR	4818704	Identifier	upd		4817175	1					
ANR	4818705	Parameter	FILE * out	5598:24:200570:200578	4817175	1	True				
ANR	4818706	ParameterType	FILE *		4817175	0					
ANR	4818707	Identifier	out		4817175	1					
ANR	4818708	CFGEntryNode	ENTRY		4817175		True				
ANR	4818709	CFGExitNode	EXIT		4817175		True				
ANR	4818710	Symbol	I_PINS2WRITE		4817175						
ANR	4818711	Symbol	* upd -> int_a		4817175						
ANR	4818712	Symbol	* x		4817175						
ANR	4818713	Symbol	* y		4817175						
ANR	4818714	Symbol	* * IA_STD_DY		4817175						
ANR	4818715	Symbol	* I_YSTEP		4817175						
ANR	4818716	Symbol	pinbot		4817175						
ANR	4818717	Symbol	upd -> int_a [ IA_STD_DY ] . data		4817175						
ANR	4818718	Symbol	icomp		4817175						
ANR	4818719	Symbol	upd -> yscan		4817175						
ANR	4818720	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		4817175						
ANR	4818721	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4817175						
ANR	4818722	Symbol	* scan		4817175						
ANR	4818723	Symbol	upd -> nbytes		4817175						
ANR	4818724	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		4817175						
ANR	4818725	Symbol	upd -> int_a [ IA_BEG_DY ] . data		4817175						
ANR	4818726	Symbol	* upd -> scnbuf		4817175						
ANR	4818727	Symbol	upd -> string_a [ SA_SETCOMP ] . data		4817175						
ANR	4818728	Symbol	upd		4817175						
ANR	4818729	Symbol	* SA_WRITECOMP		4817175						
ANR	4818730	Symbol	* I_NYPASS		4817175						
ANR	4818731	Symbol	* * SA_SETCOMP		4817175						
ANR	4818732	Symbol	B_YABS		4817175						
ANR	4818733	Symbol	* IA_BEGBOT		4817175						
ANR	4818734	Symbol	* I_BEG_Y		4817175						
ANR	4818735	Symbol	* upd -> ipass		4817175						
ANR	4818736	Symbol	* upd -> outbuf		4817175						
ANR	4818737	Symbol	scan		4817175						
ANR	4818738	Symbol	upd -> strings		4817175						
ANR	4818739	Symbol	* * IA_BEGBOT		4817175						
ANR	4818740	Symbol	upd -> int_a [ IA_STD_DY ] . size		4817175						
ANR	4818741	Symbol	I_BEG_Y		4817175						
ANR	4818742	Symbol	out		4817175						
ANR	4818743	Symbol	upd -> flags		4817175						
ANR	4818744	Symbol	upd_rle		4817175						
ANR	4818745	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		4817175						
ANR	4818746	Symbol	* * y		4817175						
ANR	4818747	Symbol	* upd		4817175						
ANR	4818748	Symbol	* S_XMOVE		4817175						
ANR	4818749	Symbol	xend		4817175						
ANR	4818750	Symbol	obytes		4817175						
ANR	4818751	Symbol	* upd -> scnmsk		4817175						
ANR	4818752	Symbol	upd -> ocomp		4817175						
ANR	4818753	Symbol	* upd -> strings		4817175						
ANR	4818754	Symbol	* I_XOFS		4817175						
ANR	4818755	Symbol	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		4817175						
ANR	4818756	Symbol	* upd -> int_a [ IA_END_DY ] . data		4817175						
ANR	4818757	Symbol	upd -> strings [ S_YMOVE ] . size		4817175						
ANR	4818758	Symbol	* S_XSTEP		4817175						
ANR	4818759	Symbol	IA_BEGBOT		4817175						
ANR	4818760	Symbol	upd -> int_a [ IA_END_DY ] . data		4817175						
ANR	4818761	Symbol	xbegin		4817175						
ANR	4818762	Symbol	I_XSTEP		4817175						
ANR	4818763	Symbol	* * upd -> scnbuf		4817175						
ANR	4818764	Symbol	n		4817175						
ANR	4818765	Symbol	* * upd -> int_a		4817175						
ANR	4818766	Symbol	I_YOFS		4817175						
ANR	4818767	Symbol	upd -> yprinter		4817175						
ANR	4818768	Symbol	ioutbuf		4817175						
ANR	4818769	Symbol	S_YMOVE		4817175						
ANR	4818770	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		4817175						
ANR	4818771	Symbol	S_YSTEP		4817175						
ANR	4818772	Symbol	x		4817175						
ANR	4818773	Symbol	y		4817175						
ANR	4818774	Symbol	* I_END_Y		4817175						
ANR	4818775	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4817175						
ANR	4818776	Symbol	* * upd		4817175						
ANR	4818777	Symbol	* * upd -> scnmsk		4817175						
ANR	4818778	Symbol	S_XMOVE		4817175						
ANR	4818779	Symbol	* upd -> string_a		4817175						
ANR	4818780	Symbol	* IA_BEG_DY		4817175						
ANR	4818781	Symbol	SA_SETCOMP		4817175						
ANR	4818782	Symbol	* * IA_ENDTOP		4817175						
ANR	4818783	Symbol	upd -> icomp		4817175						
ANR	4818784	Symbol	* * IA_END_DY		4817175						
ANR	4818785	Symbol	upd -> ipass		4817175						
ANR	4818786	Symbol	upd -> strings [ S_YSTEP ] . size		4817175						
ANR	4818787	Symbol	* SA_SETCOMP		4817175						
ANR	4818788	Symbol	upd -> strings [ S_XSTEP ] . data		4817175						
ANR	4818789	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		4817175						
ANR	4818790	Symbol	upd -> strings [ S_XMOVE ] . data		4817175						
ANR	4818791	Symbol	upd -> int_a		4817175						
ANR	4818792	Symbol	pin		4817175						
ANR	4818793	Symbol	* I_BEGSKIP		4817175						
ANR	4818794	Symbol	* I_XSTEP		4817175						
ANR	4818795	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4817175						
ANR	4818796	Symbol	upd -> int_a [ IA_ENDTOP ] . data		4817175						
ANR	4818797	Symbol	NULL		4817175						
ANR	4818798	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		4817175						
ANR	4818799	Symbol	SA_WRITECOMP		4817175						
ANR	4818800	Symbol	upd -> xprinter		4817175						
ANR	4818801	Symbol	pintop		4817175						
ANR	4818802	Symbol	upd -> ints		4817175						
ANR	4818803	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4817175						
ANR	4818804	Symbol	upd -> strings [ S_XSTEP ] . size		4817175						
ANR	4818805	Symbol	upd -> strings [ S_YSTEP ] . data		4817175						
ANR	4818806	Symbol	scan [ icomp ] . bytes		4817175						
ANR	4818807	Symbol	I_XOFS		4817175						
ANR	4818808	Symbol	I_BEGSKIP		4817175						
ANR	4818809	Symbol	upd -> int_a [ IA_END_DY ] . size		4817175						
ANR	4818810	Symbol	* obytes		4817175						
ANR	4818811	Symbol	B_XABS		4817175						
ANR	4818812	Symbol	* icomp		4817175						
ANR	4818813	Symbol	upd -> int_a [ IA_BEG_DY ] . size		4817175						
ANR	4818814	Symbol	* IA_ENDTOP		4817175						
ANR	4818815	Symbol	upd -> strings [ S_YMOVE ] . data		4817175						
ANR	4818816	Symbol	* IA_END_DY		4817175						
ANR	4818817	Symbol	* IA_STD_DY		4817175						
ANR	4818818	Symbol	I_NYPASS		4817175						
ANR	4818819	Symbol	* * upd -> string_a		4817175						
ANR	4818820	Symbol	IA_STD_DY		4817175						
ANR	4818821	Symbol	ybegin		4817175						
ANR	4818822	Symbol	* * SA_WRITECOMP		4817175						
ANR	4818823	Symbol	* I_YOFS		4817175						
ANR	4818824	Symbol	* S_YMOVE		4817175						
ANR	4818825	Symbol	upd -> scnmsk		4817175						
ANR	4818826	Symbol	* * * upd		4817175						
ANR	4818827	Symbol	upd -> strings [ S_XMOVE ] . size		4817175						
ANR	4818828	Symbol	IA_ENDTOP		4817175						
ANR	4818829	Symbol	IA_END_DY		4817175						
ANR	4818830	Symbol	I_END_Y		4817175						
ANR	4818831	Symbol	* S_YSTEP		4817175						
ANR	4818832	Symbol	upd -> string_a		4817175						
ANR	4818833	Symbol	* upd -> ints		4817175						
ANR	4818834	Symbol	* I_PINS2WRITE		4817175						
ANR	4818835	Symbol	upd -> scnbuf		4817175						
ANR	4818836	Symbol	upd -> string_a [ SA_SETCOMP ] . size		4817175						
ANR	4818837	Symbol	S_XSTEP		4817175						
ANR	4818838	Symbol	yend		4817175						
ANR	4818839	Symbol	IA_BEG_DY		4817175						
ANR	4818840	Symbol	* upd -> int_a [ IA_STD_DY ] . data		4817175						
ANR	4818841	Symbol	upd -> outbuf		4817175						
ANR	4818842	Symbol	upd -> int_a [ IA_BEGBOT ] . data		4817175						
ANR	4818843	Symbol	* * IA_BEG_DY		4817175						
ANR	4818844	Symbol	I_YSTEP		4817175						
ANR	4818845	Function	upd_wrtescnm	5837:0:208999:218229							
ANR	4818846	FunctionDef	"upd_wrtescnm (upd_p upd , FILE * out)"		4818845	0					
ANR	4818847	CompoundStatement		5839:0:209045:218229	4818845	0					
ANR	4818848	IdentifierDeclStatement	"int pinbot , pin , pintop , xbegin , x , xend , icomp , ybegin , yend , y , ioutbuf , n ;"	5840:3:209050:209116	4818845	0	True				
ANR	4818849	IdentifierDecl	pinbot		4818845	0					
ANR	4818850	IdentifierDeclType	int		4818845	0					
ANR	4818851	Identifier	pinbot		4818845	1					
ANR	4818852	IdentifierDecl	pin		4818845	1					
ANR	4818853	IdentifierDeclType	int		4818845	0					
ANR	4818854	Identifier	pin		4818845	1					
ANR	4818855	IdentifierDecl	pintop		4818845	2					
ANR	4818856	IdentifierDeclType	int		4818845	0					
ANR	4818857	Identifier	pintop		4818845	1					
ANR	4818858	IdentifierDecl	xbegin		4818845	3					
ANR	4818859	IdentifierDeclType	int		4818845	0					
ANR	4818860	Identifier	xbegin		4818845	1					
ANR	4818861	IdentifierDecl	x		4818845	4					
ANR	4818862	IdentifierDeclType	int		4818845	0					
ANR	4818863	Identifier	x		4818845	1					
ANR	4818864	IdentifierDecl	xend		4818845	5					
ANR	4818865	IdentifierDeclType	int		4818845	0					
ANR	4818866	Identifier	xend		4818845	1					
ANR	4818867	IdentifierDecl	icomp		4818845	6					
ANR	4818868	IdentifierDeclType	int		4818845	0					
ANR	4818869	Identifier	icomp		4818845	1					
ANR	4818870	IdentifierDecl	ybegin		4818845	7					
ANR	4818871	IdentifierDeclType	int		4818845	0					
ANR	4818872	Identifier	ybegin		4818845	1					
ANR	4818873	IdentifierDecl	yend		4818845	8					
ANR	4818874	IdentifierDeclType	int		4818845	0					
ANR	4818875	Identifier	yend		4818845	1					
ANR	4818876	IdentifierDecl	y		4818845	9					
ANR	4818877	IdentifierDeclType	int		4818845	0					
ANR	4818878	Identifier	y		4818845	1					
ANR	4818879	IdentifierDecl	ioutbuf		4818845	10					
ANR	4818880	IdentifierDeclType	int		4818845	0					
ANR	4818881	Identifier	ioutbuf		4818845	1					
ANR	4818882	IdentifierDecl	n		4818845	11					
ANR	4818883	IdentifierDeclType	int		4818845	0					
ANR	4818884	Identifier	n		4818845	1					
ANR	4818885	IdentifierDeclStatement	"int irow , imask , iyofs ;"	5841:3:209121:209142	4818845	1	True				
ANR	4818886	IdentifierDecl	irow		4818845	0					
ANR	4818887	IdentifierDeclType	int		4818845	0					
ANR	4818888	Identifier	irow		4818845	1					
ANR	4818889	IdentifierDecl	imask		4818845	1					
ANR	4818890	IdentifierDeclType	int		4818845	0					
ANR	4818891	Identifier	imask		4818845	1					
ANR	4818892	IdentifierDecl	iyofs		4818845	2					
ANR	4818893	IdentifierDeclType	int		4818845	0					
ANR	4818894	Identifier	iyofs		4818845	1					
ANR	4818895	IdentifierDeclStatement	byte * obytes ;	5842:3:209147:209159	4818845	2	True				
ANR	4818896	IdentifierDecl	* obytes		4818845	0					
ANR	4818897	IdentifierDeclType	byte *		4818845	0					
ANR	4818898	Identifier	obytes		4818845	1					
ANR	4818899	IdentifierDeclStatement	updscan_p scan ;	5843:3:209164:209178	4818845	3	True				
ANR	4818900	IdentifierDecl	scan		4818845	0					
ANR	4818901	IdentifierDeclType	updscan_p		4818845	0					
ANR	4818902	Identifier	scan		4818845	1					
ANR	4818903	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		4818845	4					
ANR	4818904	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	5847:6:209233:209263	4818845	0	True				
ANR	4818905	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		4818845	0		<			
ANR	4818906	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4818907	Identifier	upd		4818845	0					
ANR	4818908	Identifier	yscan		4818845	1					
ANR	4818909	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4818845	1					
ANR	4818910	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4818911	Identifier	upd		4818845	0					
ANR	4818912	Identifier	ints		4818845	1					
ANR	4818913	Identifier	I_BEG_Y		4818845	1					
ANR	4818914	CompoundStatement		9:39:220:220	4818845	1					
ANR	4818915	ExpressionStatement	pintop = 0	5848:6:209274:209284	4818845	0	True				
ANR	4818916	AssignmentExpression	pintop = 0		4818845	0		=			
ANR	4818917	Identifier	pintop		4818845	0					
ANR	4818918	PrimaryExpression	0		4818845	1					
ANR	4818919	ExpressionStatement	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]	5849:6:209292:209339	4818845	1	True				
ANR	4818920	AssignmentExpression	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		4818845	0		=			
ANR	4818921	Identifier	pinbot		4818845	0					
ANR	4818922	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		4818845	1					
ANR	4818923	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		4818845	0					
ANR	4818924	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		4818845	0					
ANR	4818925	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4818926	Identifier	upd		4818845	0					
ANR	4818927	Identifier	int_a		4818845	1					
ANR	4818928	Identifier	IA_BEGBOT		4818845	1					
ANR	4818929	Identifier	data		4818845	1					
ANR	4818930	PtrMemberAccess	upd -> ipass		4818845	1					
ANR	4818931	Identifier	upd		4818845	0					
ANR	4818932	Identifier	ipass		4818845	1					
ANR	4818933	ElseStatement	else		4818845	0					
ANR	4818934	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4818845	0					
ANR	4818935	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	5850:13:209354:209385	4818845	0	True				
ANR	4818936	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4818845	0		>=			
ANR	4818937	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4818938	Identifier	upd		4818845	0					
ANR	4818939	Identifier	yscan		4818845	1					
ANR	4818940	ArrayIndexing	upd -> ints [ I_END_Y ]		4818845	1					
ANR	4818941	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4818942	Identifier	upd		4818845	0					
ANR	4818943	Identifier	ints		4818845	1					
ANR	4818944	Identifier	I_END_Y		4818845	1					
ANR	4818945	CompoundStatement		12:47:342:342	4818845	1					
ANR	4818946	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	5851:6:209396:209428	4818845	0	True				
ANR	4818947	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		4818845	0		=			
ANR	4818948	Identifier	pinbot		4818845	0					
ANR	4818949	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4818845	1					
ANR	4818950	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4818951	Identifier	upd		4818845	0					
ANR	4818952	Identifier	ints		4818845	1					
ANR	4818953	Identifier	I_PINS2WRITE		4818845	1					
ANR	4818954	ExpressionStatement	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]	5852:6:209436:209492	4818845	1	True				
ANR	4818955	AssignmentExpression	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4818845	0		=			
ANR	4818956	Identifier	pintop		4818845	0					
ANR	4818957	AdditiveExpression	pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4818845	1		-			
ANR	4818958	Identifier	pinbot		4818845	0					
ANR	4818959	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4818845	1					
ANR	4818960	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		4818845	0					
ANR	4818961	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4818845	0					
ANR	4818962	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4818963	Identifier	upd		4818845	0					
ANR	4818964	Identifier	int_a		4818845	1					
ANR	4818965	Identifier	IA_ENDTOP		4818845	1					
ANR	4818966	Identifier	data		4818845	1					
ANR	4818967	PtrMemberAccess	upd -> ipass		4818845	1					
ANR	4818968	Identifier	upd		4818845	0					
ANR	4818969	Identifier	ipass		4818845	1					
ANR	4818970	ElseStatement	else		4818845	0					
ANR	4818971	CompoundStatement		15:10:458:458	4818845	0					
ANR	4818972	ExpressionStatement	pintop = 0	5854:6:209512:209522	4818845	0	True				
ANR	4818973	AssignmentExpression	pintop = 0		4818845	0		=			
ANR	4818974	Identifier	pintop		4818845	0					
ANR	4818975	PrimaryExpression	0		4818845	1					
ANR	4818976	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	5855:6:209530:209562	4818845	1	True				
ANR	4818977	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		4818845	0		=			
ANR	4818978	Identifier	pinbot		4818845	0					
ANR	4818979	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4818845	1					
ANR	4818980	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4818981	Identifier	upd		4818845	0					
ANR	4818982	Identifier	ints		4818845	1					
ANR	4818983	Identifier	I_PINS2WRITE		4818845	1					
ANR	4818984	ExpressionStatement	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	5858:3:209573:209647	4818845	5	True				
ANR	4818985	AssignmentExpression	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4818845	0		=			
ANR	4818986	Identifier	ybegin		4818845	0					
ANR	4818987	AdditiveExpression	pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4818845	1		+			
ANR	4818988	MultiplicativeExpression	pintop * upd -> ints [ I_NYPASS ]		4818845	0		*			
ANR	4818989	Identifier	pintop		4818845	0					
ANR	4818990	ArrayIndexing	upd -> ints [ I_NYPASS ]		4818845	1					
ANR	4818991	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4818992	Identifier	upd		4818845	0					
ANR	4818993	Identifier	ints		4818845	1					
ANR	4818994	Identifier	I_NYPASS		4818845	1					
ANR	4818995	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		4818845	1		-			
ANR	4818996	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4818997	Identifier	upd		4818845	0					
ANR	4818998	Identifier	yscan		4818845	1					
ANR	4818999	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		4818845	1					
ANR	4819000	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819001	Identifier	upd		4818845	0					
ANR	4819002	Identifier	ints		4818845	1					
ANR	4819003	Identifier	I_BEGSKIP		4818845	1					
ANR	4819004	ExpressionStatement	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	5859:3:209652:209726	4818845	6	True				
ANR	4819005	AssignmentExpression	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4818845	0		=			
ANR	4819006	Identifier	yend		4818845	0					
ANR	4819007	AdditiveExpression	pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4818845	1		+			
ANR	4819008	MultiplicativeExpression	pinbot * upd -> ints [ I_NYPASS ]		4818845	0		*			
ANR	4819009	Identifier	pinbot		4818845	0					
ANR	4819010	ArrayIndexing	upd -> ints [ I_NYPASS ]		4818845	1					
ANR	4819011	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819012	Identifier	upd		4818845	0					
ANR	4819013	Identifier	ints		4818845	1					
ANR	4819014	Identifier	I_NYPASS		4818845	1					
ANR	4819015	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		4818845	1		-			
ANR	4819016	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4819017	Identifier	upd		4818845	0					
ANR	4819018	Identifier	yscan		4818845	1					
ANR	4819019	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		4818845	1					
ANR	4819020	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819021	Identifier	upd		4818845	0					
ANR	4819022	Identifier	ints		4818845	1					
ANR	4819023	Identifier	I_BEGSKIP		4818845	1					
ANR	4819024	ExpressionStatement	xbegin = upd -> nbytes	5863:3:209769:209789	4818845	7	True				
ANR	4819025	AssignmentExpression	xbegin = upd -> nbytes		4818845	0		=			
ANR	4819026	Identifier	xbegin		4818845	0					
ANR	4819027	PtrMemberAccess	upd -> nbytes		4818845	1					
ANR	4819028	Identifier	upd		4818845	0					
ANR	4819029	Identifier	nbytes		4818845	1					
ANR	4819030	ExpressionStatement	xend = - 1	5864:3:209794:209805	4818845	8	True				
ANR	4819031	AssignmentExpression	xend = - 1		4818845	0		=			
ANR	4819032	Identifier	xend		4818845	0					
ANR	4819033	UnaryOperationExpression	- 1		4818845	1					
ANR	4819034	UnaryOperator	-		4818845	0					
ANR	4819035	PrimaryExpression	1		4818845	1					
ANR	4819036	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4818845	9					
ANR	4819037	ForInit	y = ybegin ;	5866:7:209815:209825	4818845	0	True				
ANR	4819038	AssignmentExpression	y = ybegin		4818845	0		=			
ANR	4819039	Identifier	y		4818845	0					
ANR	4819040	Identifier	ybegin		4818845	1					
ANR	4819041	Condition	y < yend	5866:19:209827:209834	4818845	1	True				
ANR	4819042	RelationalExpression	y < yend		4818845	0		<			
ANR	4819043	Identifier	y		4818845	0					
ANR	4819044	Identifier	yend		4818845	1					
ANR	4819045	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	5866:29:209837:209860	4818845	2	True	+=			
ANR	4819046	Identifier	y		4818845	0					
ANR	4819047	ArrayIndexing	upd -> ints [ I_NYPASS ]		4818845	1					
ANR	4819048	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819049	Identifier	upd		4818845	0					
ANR	4819050	Identifier	ints		4818845	1					
ANR	4819051	Identifier	I_NYPASS		4818845	1					
ANR	4819052	CompoundStatement		28:55:817:817	4818845	3					
ANR	4819053	IfStatement	if ( 0 > y )		4818845	0					
ANR	4819054	Condition	0 > y	5868:9:209894:209898	4818845	0	True				
ANR	4819055	RelationalExpression	0 > y		4818845	0		>			
ANR	4819056	PrimaryExpression	0		4818845	0					
ANR	4819057	Identifier	y		4818845	1					
ANR	4819058	ContinueStatement	continue ;	5868:16:209901:209909	4818845	1	True				
ANR	4819059	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ]	5870:6:209943:209978	4818845	1	True				
ANR	4819060	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ]		4818845	0		=			
ANR	4819061	Identifier	scan		4818845	0					
ANR	4819062	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4818845	1					
ANR	4819063	PtrMemberAccess	upd -> scnbuf		4818845	0					
ANR	4819064	Identifier	upd		4818845	0					
ANR	4819065	Identifier	scnbuf		4818845	1					
ANR	4819066	BitAndExpression	y & upd -> scnmsk		4818845	1		&			
ANR	4819067	Identifier	y		4818845	0					
ANR	4819068	PtrMemberAccess	upd -> scnmsk		4818845	1					
ANR	4819069	Identifier	upd		4818845	0					
ANR	4819070	Identifier	scnmsk		4818845	1					
ANR	4819071	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4818845	2					
ANR	4819072	ForInit	icomp = 0 ;	5872:10:209991:210000	4818845	0	True				
ANR	4819073	AssignmentExpression	icomp = 0		4818845	0		=			
ANR	4819074	Identifier	icomp		4818845	0					
ANR	4819075	PrimaryExpression	0		4818845	1					
ANR	4819076	Condition	icomp < upd -> ocomp	5872:21:210002:210019	4818845	1	True				
ANR	4819077	RelationalExpression	icomp < upd -> ocomp		4818845	0		<			
ANR	4819078	Identifier	icomp		4818845	0					
ANR	4819079	PtrMemberAccess	upd -> ocomp		4818845	1					
ANR	4819080	Identifier	upd		4818845	0					
ANR	4819081	Identifier	ocomp		4818845	1					
ANR	4819082	UnaryExpression	++ icomp	5872:41:210022:210028	4818845	2	True				
ANR	4819083	IncDec	++		4818845	0					
ANR	4819084	Identifier	icomp		4818845	1					
ANR	4819085	CompoundStatement		34:50:985:985	4818845	3					
ANR	4819086	ExpressionStatement	obytes = scan [ icomp ] . bytes	5873:9:210062:210088	4818845	0	True				
ANR	4819087	AssignmentExpression	obytes = scan [ icomp ] . bytes		4818845	0		=			
ANR	4819088	Identifier	obytes		4818845	0					
ANR	4819089	MemberAccess	scan [ icomp ] . bytes		4818845	1					
ANR	4819090	ArrayIndexing	scan [ icomp ]		4818845	0					
ANR	4819091	Identifier	scan		4818845	0					
ANR	4819092	Identifier	icomp		4818845	1					
ANR	4819093	Identifier	bytes		4818845	1					
ANR	4819094	ForStatement	for ( x = 0 ; x < xbegin && ! obytes [ x ] ; x ++ )		4818845	1					
ANR	4819095	ForInit	x = 0 ;	5875:13:210104:210109	4818845	0	True				
ANR	4819096	AssignmentExpression	x = 0		4818845	0		=			
ANR	4819097	Identifier	x		4818845	0					
ANR	4819098	PrimaryExpression	0		4818845	1					
ANR	4819099	Condition	x < xbegin && ! obytes [ x ]	5875:20:210111:210134	4818845	1	True				
ANR	4819100	AndExpression	x < xbegin && ! obytes [ x ]		4818845	0		&&			
ANR	4819101	RelationalExpression	x < xbegin		4818845	0		<			
ANR	4819102	Identifier	x		4818845	0					
ANR	4819103	Identifier	xbegin		4818845	1					
ANR	4819104	UnaryOperationExpression	! obytes [ x ]		4818845	1					
ANR	4819105	UnaryOperator	!		4818845	0					
ANR	4819106	ArrayIndexing	obytes [ x ]		4818845	1					
ANR	4819107	Identifier	obytes		4818845	0					
ANR	4819108	Identifier	x		4818845	1					
ANR	4819109	PostIncDecOperationExpression	x ++	5875:46:210137:210139	4818845	2	True				
ANR	4819110	Identifier	x		4818845	0					
ANR	4819111	IncDec	++		4818845	1					
ANR	4819112	ExpressionStatement		5875:50:210141:210141	4818845	3	True				
ANR	4819113	IfStatement	if ( x < xbegin )		4818845	2					
ANR	4819114	Condition	x < xbegin	5876:12:210155:210164	4818845	0	True				
ANR	4819115	RelationalExpression	x < xbegin		4818845	0		<			
ANR	4819116	Identifier	x		4818845	0					
ANR	4819117	Identifier	xbegin		4818845	1					
ANR	4819118	ExpressionStatement	xbegin = x	5876:24:210167:210177	4818845	1	True				
ANR	4819119	AssignmentExpression	xbegin = x		4818845	0		=			
ANR	4819120	Identifier	xbegin		4818845	0					
ANR	4819121	Identifier	x		4818845	1					
ANR	4819122	IfStatement	if ( x < upd -> nbytes )		4818845	3					
ANR	4819123	Condition	x < upd -> nbytes	5878:12:210192:210206	4818845	0	True				
ANR	4819124	RelationalExpression	x < upd -> nbytes		4818845	0		<			
ANR	4819125	Identifier	x		4818845	0					
ANR	4819126	PtrMemberAccess	upd -> nbytes		4818845	1					
ANR	4819127	Identifier	upd		4818845	0					
ANR	4819128	Identifier	nbytes		4818845	1					
ANR	4819129	CompoundStatement		40:29:1163:1163	4818845	1					
ANR	4819130	ForStatement	for ( x = upd -> nbytes - 1 ; x > xend && ! obytes [ x ] ; x -- )		4818845	0					
ANR	4819131	ForInit	x = upd -> nbytes - 1 ;	5879:16:210227:210244	4818845	0	True				
ANR	4819132	AssignmentExpression	x = upd -> nbytes - 1		4818845	0		=			
ANR	4819133	Identifier	x		4818845	0					
ANR	4819134	AdditiveExpression	upd -> nbytes - 1		4818845	1		-			
ANR	4819135	PtrMemberAccess	upd -> nbytes		4818845	0					
ANR	4819136	Identifier	upd		4818845	0					
ANR	4819137	Identifier	nbytes		4818845	1					
ANR	4819138	PrimaryExpression	1		4818845	1					
ANR	4819139	Condition	x > xend && ! obytes [ x ]	5879:35:210246:210267	4818845	1	True				
ANR	4819140	AndExpression	x > xend && ! obytes [ x ]		4818845	0		&&			
ANR	4819141	RelationalExpression	x > xend		4818845	0		>			
ANR	4819142	Identifier	x		4818845	0					
ANR	4819143	Identifier	xend		4818845	1					
ANR	4819144	UnaryOperationExpression	! obytes [ x ]		4818845	1					
ANR	4819145	UnaryOperator	!		4818845	0					
ANR	4819146	ArrayIndexing	obytes [ x ]		4818845	1					
ANR	4819147	Identifier	obytes		4818845	0					
ANR	4819148	Identifier	x		4818845	1					
ANR	4819149	PostIncDecOperationExpression	x --	5879:59:210270:210272	4818845	2	True				
ANR	4819150	Identifier	x		4818845	0					
ANR	4819151	IncDec	--		4818845	1					
ANR	4819152	ExpressionStatement		5879:63:210274:210274	4818845	3	True				
ANR	4819153	IfStatement	if ( x > xend )		4818845	1					
ANR	4819154	Condition	x > xend	5880:15:210291:210298	4818845	0	True				
ANR	4819155	RelationalExpression	x > xend		4818845	0		>			
ANR	4819156	Identifier	x		4818845	0					
ANR	4819157	Identifier	xend		4818845	1					
ANR	4819158	ExpressionStatement	xend = x	5880:25:210301:210309	4818845	1	True				
ANR	4819159	AssignmentExpression	xend = x		4818845	0		=			
ANR	4819160	Identifier	xend		4818845	0					
ANR	4819161	Identifier	x		4818845	1					
ANR	4819162	IfStatement	if ( xbegin <= xend )		4818845	10					
ANR	4819163	Condition	xbegin <= xend	5885:6:210477:210490	4818845	0	True				
ANR	4819164	RelationalExpression	xbegin <= xend		4818845	0		<=			
ANR	4819165	Identifier	xbegin		4818845	0					
ANR	4819166	Identifier	xend		4818845	1					
ANR	4819167	CompoundStatement		47:22:1447:1447	4818845	1					
ANR	4819168	ExpressionStatement	ioutbuf = 0	5887:6:210527:210538	4818845	0	True				
ANR	4819169	AssignmentExpression	ioutbuf = 0		4818845	0		=			
ANR	4819170	Identifier	ioutbuf		4818845	0					
ANR	4819171	PrimaryExpression	0		4818845	1					
ANR	4819172	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		4818845	1					
ANR	4819173	Condition	0 == upd -> strings [ S_XMOVE ] . size	5889:9:210550:210580	4818845	0	True				
ANR	4819174	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4818845	0		==			
ANR	4819175	PrimaryExpression	0		4818845	0					
ANR	4819176	MemberAccess	upd -> strings [ S_XMOVE ] . size		4818845	1					
ANR	4819177	ArrayIndexing	upd -> strings [ S_XMOVE ]		4818845	0					
ANR	4819178	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819179	Identifier	upd		4818845	0					
ANR	4819180	Identifier	strings		4818845	1					
ANR	4819181	Identifier	S_XMOVE		4818845	1					
ANR	4819182	Identifier	size		4818845	1					
ANR	4819183	ExpressionStatement	xbegin = 0	5889:42:210583:210593	4818845	1	True				
ANR	4819184	AssignmentExpression	xbegin = 0		4818845	0		=			
ANR	4819185	Identifier	xbegin		4818845	0					
ANR	4819186	PrimaryExpression	0		4818845	1					
ANR	4819187	IfStatement	if ( upd -> yscan != upd -> yprinter )		4818845	2					
ANR	4819188	Condition	upd -> yscan != upd -> yprinter	5894:9:210649:210675	4818845	0	True				
ANR	4819189	EqualityExpression	upd -> yscan != upd -> yprinter		4818845	0		!=			
ANR	4819190	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4819191	Identifier	upd		4818845	0					
ANR	4819192	Identifier	yscan		4818845	1					
ANR	4819193	PtrMemberAccess	upd -> yprinter		4818845	1					
ANR	4819194	Identifier	upd		4818845	0					
ANR	4819195	Identifier	yprinter		4818845	1					
ANR	4819196	CompoundStatement		56:38:1632:1632	4818845	1					
ANR	4819197	IfStatement	if ( B_YABS & upd -> flags )		4818845	0					
ANR	4819198	Condition	B_YABS & upd -> flags	5895:12:210716:210734	4818845	0	True				
ANR	4819199	BitAndExpression	B_YABS & upd -> flags		4818845	0		&			
ANR	4819200	Identifier	B_YABS		4818845	0					
ANR	4819201	PtrMemberAccess	upd -> flags		4818845	1					
ANR	4819202	Identifier	upd		4818845	0					
ANR	4819203	Identifier	flags		4818845	1					
ANR	4819204	ExpressionStatement	y = upd -> yscan + upd -> ints [ I_YOFS ]	5895:33:210737:210771	4818845	1	True				
ANR	4819205	AssignmentExpression	y = upd -> yscan + upd -> ints [ I_YOFS ]		4818845	0		=			
ANR	4819206	Identifier	y		4818845	0					
ANR	4819207	AdditiveExpression	upd -> yscan + upd -> ints [ I_YOFS ]		4818845	1		+			
ANR	4819208	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4819209	Identifier	upd		4818845	0					
ANR	4819210	Identifier	yscan		4818845	1					
ANR	4819211	ArrayIndexing	upd -> ints [ I_YOFS ]		4818845	1					
ANR	4819212	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819213	Identifier	upd		4818845	0					
ANR	4819214	Identifier	ints		4818845	1					
ANR	4819215	Identifier	I_YOFS		4818845	1					
ANR	4819216	ElseStatement	else		4818845	0					
ANR	4819217	ExpressionStatement	y = upd -> yscan - upd -> yprinter	5896:33:210806:210836	4818845	0	True				
ANR	4819218	AssignmentExpression	y = upd -> yscan - upd -> yprinter		4818845	0		=			
ANR	4819219	Identifier	y		4818845	0					
ANR	4819220	AdditiveExpression	upd -> yscan - upd -> yprinter		4818845	1		-			
ANR	4819221	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4819222	Identifier	upd		4818845	0					
ANR	4819223	Identifier	yscan		4818845	1					
ANR	4819224	PtrMemberAccess	upd -> yprinter		4818845	1					
ANR	4819225	Identifier	upd		4818845	0					
ANR	4819226	Identifier	yprinter		4818845	1					
ANR	4819227	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		4818845	1					
ANR	4819228	Condition	1 < upd -> ints [ I_YSTEP ]	5898:18:210857:210878	4818845	0	True				
ANR	4819229	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		4818845	0		<			
ANR	4819230	PrimaryExpression	1		4818845	0					
ANR	4819231	ArrayIndexing	upd -> ints [ I_YSTEP ]		4818845	1					
ANR	4819232	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819233	Identifier	upd		4818845	0					
ANR	4819234	Identifier	ints		4818845	1					
ANR	4819235	Identifier	I_YSTEP		4818845	1					
ANR	4819236	CompoundStatement		60:42:1835:1835	4818845	1					
ANR	4819237	ExpressionStatement	n = y / upd -> ints [ I_YSTEP ]	5899:12:210895:210927	4818845	0	True				
ANR	4819238	AssignmentExpression	n = y / upd -> ints [ I_YSTEP ]		4818845	0		=			
ANR	4819239	Identifier	n		4818845	0					
ANR	4819240	MultiplicativeExpression	y / upd -> ints [ I_YSTEP ]		4818845	1		/			
ANR	4819241	Identifier	y		4818845	0					
ANR	4819242	ArrayIndexing	upd -> ints [ I_YSTEP ]		4818845	1					
ANR	4819243	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819244	Identifier	upd		4818845	0					
ANR	4819245	Identifier	ints		4818845	1					
ANR	4819246	Identifier	I_YSTEP		4818845	1					
ANR	4819247	ExpressionStatement	y -= n * upd -> ints [ I_YSTEP ]	5900:12:210960:210992	4818845	1	True				
ANR	4819248	AssignmentExpression	y -= n * upd -> ints [ I_YSTEP ]		4818845	0		-=			
ANR	4819249	Identifier	y		4818845	0					
ANR	4819250	MultiplicativeExpression	n * upd -> ints [ I_YSTEP ]		4818845	1		*			
ANR	4819251	Identifier	n		4818845	0					
ANR	4819252	ArrayIndexing	upd -> ints [ I_YSTEP ]		4818845	1					
ANR	4819253	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819254	Identifier	upd		4818845	0					
ANR	4819255	Identifier	ints		4818845	1					
ANR	4819256	Identifier	I_YSTEP		4818845	1					
ANR	4819257	ElseStatement	else		4818845	0					
ANR	4819258	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		4818845	0					
ANR	4819259	Condition	- 1 > upd -> ints [ I_YSTEP ]	5901:19:211032:211054	4818845	0	True				
ANR	4819260	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		4818845	0		>			
ANR	4819261	UnaryOperationExpression	- 1		4818845	0					
ANR	4819262	UnaryOperator	-		4818845	0					
ANR	4819263	PrimaryExpression	1		4818845	1					
ANR	4819264	ArrayIndexing	upd -> ints [ I_YSTEP ]		4818845	1					
ANR	4819265	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819266	Identifier	upd		4818845	0					
ANR	4819267	Identifier	ints		4818845	1					
ANR	4819268	Identifier	I_YSTEP		4818845	1					
ANR	4819269	CompoundStatement		63:44:2011:2011	4818845	1					
ANR	4819270	ExpressionStatement	n = y * - upd -> ints [ I_YSTEP ]	5902:12:211071:211103	4818845	0	True				
ANR	4819271	AssignmentExpression	n = y * - upd -> ints [ I_YSTEP ]		4818845	0		=			
ANR	4819272	Identifier	n		4818845	0					
ANR	4819273	MultiplicativeExpression	y * - upd -> ints [ I_YSTEP ]		4818845	1		*			
ANR	4819274	Identifier	y		4818845	0					
ANR	4819275	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		4818845	1					
ANR	4819276	UnaryOperator	-		4818845	0					
ANR	4819277	ArrayIndexing	upd -> ints [ I_YSTEP ]		4818845	1					
ANR	4819278	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819279	Identifier	upd		4818845	0					
ANR	4819280	Identifier	ints		4818845	1					
ANR	4819281	Identifier	I_YSTEP		4818845	1					
ANR	4819282	ExpressionStatement	y = 0	5903:12:211139:211149	4818845	1	True				
ANR	4819283	AssignmentExpression	y = 0		4818845	0		=			
ANR	4819284	Identifier	y		4818845	0					
ANR	4819285	PrimaryExpression	0		4818845	1					
ANR	4819286	ElseStatement	else		4818845	0					
ANR	4819287	CompoundStatement		66:16:2121:2121	4818845	0					
ANR	4819288	ExpressionStatement	n = y	5905:12:211181:211191	4818845	0	True				
ANR	4819289	AssignmentExpression	n = y		4818845	0		=			
ANR	4819290	Identifier	n		4818845	0					
ANR	4819291	Identifier	y		4818845	1					
ANR	4819292	ExpressionStatement	y = 0	5906:12:211205:211215	4818845	1	True				
ANR	4819293	AssignmentExpression	y = 0		4818845	0		=			
ANR	4819294	Identifier	y		4818845	0					
ANR	4819295	PrimaryExpression	0		4818845	1					
ANR	4819296	IfStatement	if ( n )		4818845	2					
ANR	4819297	Condition	n	5909:12:211241:211241	4818845	0	True				
ANR	4819298	Identifier	n		4818845	0					
ANR	4819299	CompoundStatement		71:15:2198:2198	4818845	1					
ANR	4819300	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"	5910:12:211283:211388	4818845	0	True				
ANR	4819301	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"		4818845	0					
ANR	4819302	Callee	memcpy		4818845	0					
ANR	4819303	Identifier	memcpy		4818845	0					
ANR	4819304	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4819305	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4819306	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4819307	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819308	Identifier	upd		4818845	0					
ANR	4819309	Identifier	outbuf		4818845	1					
ANR	4819310	Identifier	ioutbuf		4818845	1					
ANR	4819311	Argument	upd -> strings [ S_YMOVE ] . data		4818845	1					
ANR	4819312	MemberAccess	upd -> strings [ S_YMOVE ] . data		4818845	0					
ANR	4819313	ArrayIndexing	upd -> strings [ S_YMOVE ]		4818845	0					
ANR	4819314	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819315	Identifier	upd		4818845	0					
ANR	4819316	Identifier	strings		4818845	1					
ANR	4819317	Identifier	S_YMOVE		4818845	1					
ANR	4819318	Identifier	data		4818845	1					
ANR	4819319	Argument	upd -> strings [ S_YMOVE ] . size		4818845	2					
ANR	4819320	MemberAccess	upd -> strings [ S_YMOVE ] . size		4818845	0					
ANR	4819321	ArrayIndexing	upd -> strings [ S_YMOVE ]		4818845	0					
ANR	4819322	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819323	Identifier	upd		4818845	0					
ANR	4819324	Identifier	strings		4818845	1					
ANR	4819325	Identifier	S_YMOVE		4818845	1					
ANR	4819326	Identifier	size		4818845	1					
ANR	4819327	ExpressionStatement	ioutbuf += upd -> strings [ S_YMOVE ] . size	5912:12:211402:211439	4818845	1	True				
ANR	4819328	AssignmentExpression	ioutbuf += upd -> strings [ S_YMOVE ] . size		4818845	0		+=			
ANR	4819329	Identifier	ioutbuf		4818845	0					
ANR	4819330	MemberAccess	upd -> strings [ S_YMOVE ] . size		4818845	1					
ANR	4819331	ArrayIndexing	upd -> strings [ S_YMOVE ]		4818845	0					
ANR	4819332	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819333	Identifier	upd		4818845	0					
ANR	4819334	Identifier	strings		4818845	1					
ANR	4819335	Identifier	S_YMOVE		4818845	1					
ANR	4819336	Identifier	size		4818845	1					
ANR	4819337	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5914:12:211454:211492	4818845	2	True				
ANR	4819338	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		4818845	0		=			
ANR	4819339	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4818845	0					
ANR	4819340	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819341	Identifier	upd		4818845	0					
ANR	4819342	Identifier	outbuf		4818845	1					
ANR	4819343	PostIncDecOperationExpression	ioutbuf ++		4818845	1					
ANR	4819344	Identifier	ioutbuf		4818845	0					
ANR	4819345	IncDec	++		4818845	1					
ANR	4819346	BitAndExpression	n & 0xff		4818845	1		&			
ANR	4819347	Identifier	n		4818845	0					
ANR	4819348	PrimaryExpression	0xff		4818845	1					
ANR	4819349	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5915:12:211506:211544	4818845	3	True				
ANR	4819350	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		4818845	0		=			
ANR	4819351	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4818845	0					
ANR	4819352	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819353	Identifier	upd		4818845	0					
ANR	4819354	Identifier	outbuf		4818845	1					
ANR	4819355	PostIncDecOperationExpression	ioutbuf ++		4818845	1					
ANR	4819356	Identifier	ioutbuf		4818845	0					
ANR	4819357	IncDec	++		4818845	1					
ANR	4819358	BitAndExpression	( n >> 8 ) & 0xff		4818845	1		&			
ANR	4819359	ShiftExpression	n >> 8		4818845	0		>>			
ANR	4819360	Identifier	n		4818845	0					
ANR	4819361	PrimaryExpression	8		4818845	1					
ANR	4819362	PrimaryExpression	0xff		4818845	1					
ANR	4819363	IfStatement	if ( 0 < upd -> strings [ S_YSTEP ] . size )		4818845	3					
ANR	4819364	Condition	0 < upd -> strings [ S_YSTEP ] . size	5919:12:211602:211631	4818845	0	True				
ANR	4819365	RelationalExpression	0 < upd -> strings [ S_YSTEP ] . size		4818845	0		<			
ANR	4819366	PrimaryExpression	0		4818845	0					
ANR	4819367	MemberAccess	upd -> strings [ S_YSTEP ] . size		4818845	1					
ANR	4819368	ArrayIndexing	upd -> strings [ S_YSTEP ]		4818845	0					
ANR	4819369	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819370	Identifier	upd		4818845	0					
ANR	4819371	Identifier	strings		4818845	1					
ANR	4819372	Identifier	S_YSTEP		4818845	1					
ANR	4819373	Identifier	size		4818845	1					
ANR	4819374	CompoundStatement		81:44:2588:2588	4818845	1					
ANR	4819375	WhileStatement	while ( y -- )		4818845	0					
ANR	4819376	Condition	y --	5920:18:211654:211656	4818845	0	True				
ANR	4819377	PostIncDecOperationExpression	y --		4818845	0					
ANR	4819378	Identifier	y		4818845	0					
ANR	4819379	IncDec	--		4818845	1					
ANR	4819380	CompoundStatement		82:23:2613:2613	4818845	1					
ANR	4819381	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"	5921:15:211676:211811	4818845	0	True				
ANR	4819382	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"		4818845	0					
ANR	4819383	Callee	memcpy		4818845	0					
ANR	4819384	Identifier	memcpy		4818845	0					
ANR	4819385	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4819386	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4819387	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4819388	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819389	Identifier	upd		4818845	0					
ANR	4819390	Identifier	outbuf		4818845	1					
ANR	4819391	Identifier	ioutbuf		4818845	1					
ANR	4819392	Argument	upd -> strings [ S_YSTEP ] . data		4818845	1					
ANR	4819393	MemberAccess	upd -> strings [ S_YSTEP ] . data		4818845	0					
ANR	4819394	ArrayIndexing	upd -> strings [ S_YSTEP ]		4818845	0					
ANR	4819395	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819396	Identifier	upd		4818845	0					
ANR	4819397	Identifier	strings		4818845	1					
ANR	4819398	Identifier	S_YSTEP		4818845	1					
ANR	4819399	Identifier	data		4818845	1					
ANR	4819400	Argument	upd -> strings [ S_YSTEP ] . size		4818845	2					
ANR	4819401	MemberAccess	upd -> strings [ S_YSTEP ] . size		4818845	0					
ANR	4819402	ArrayIndexing	upd -> strings [ S_YSTEP ]		4818845	0					
ANR	4819403	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819404	Identifier	upd		4818845	0					
ANR	4819405	Identifier	strings		4818845	1					
ANR	4819406	Identifier	S_YSTEP		4818845	1					
ANR	4819407	Identifier	size		4818845	1					
ANR	4819408	ExpressionStatement	ioutbuf += upd -> strings [ S_YSTEP ] . size	5924:15:211828:211865	4818845	1	True				
ANR	4819409	AssignmentExpression	ioutbuf += upd -> strings [ S_YSTEP ] . size		4818845	0		+=			
ANR	4819410	Identifier	ioutbuf		4818845	0					
ANR	4819411	MemberAccess	upd -> strings [ S_YSTEP ] . size		4818845	1					
ANR	4819412	ArrayIndexing	upd -> strings [ S_YSTEP ]		4818845	0					
ANR	4819413	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819414	Identifier	upd		4818845	0					
ANR	4819415	Identifier	strings		4818845	1					
ANR	4819416	Identifier	S_YSTEP		4818845	1					
ANR	4819417	Identifier	size		4818845	1					
ANR	4819418	ExpressionStatement	upd -> yprinter = upd -> yscan	5928:9:211902:211928	4818845	4	True				
ANR	4819419	AssignmentExpression	upd -> yprinter = upd -> yscan		4818845	0		=			
ANR	4819420	PtrMemberAccess	upd -> yprinter		4818845	0					
ANR	4819421	Identifier	upd		4818845	0					
ANR	4819422	Identifier	yprinter		4818845	1					
ANR	4819423	PtrMemberAccess	upd -> yscan		4818845	1					
ANR	4819424	Identifier	upd		4818845	0					
ANR	4819425	Identifier	yscan		4818845	1					
ANR	4819426	ExpressionStatement	icomp = 0	5940:6:212180:212187	4818845	3	True				
ANR	4819427	AssignmentExpression	icomp = 0		4818845	0		=			
ANR	4819428	Identifier	icomp		4818845	0					
ANR	4819429	PrimaryExpression	0		4818845	1					
ANR	4819430	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) )		4818845	4					
ANR	4819431	Condition	0 < upd -> string_a [ SA_SETCOMP ] . size	5941:9:212198:212233	4818845	0	True				
ANR	4819432	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		4818845	0		<			
ANR	4819433	PrimaryExpression	0		4818845	0					
ANR	4819434	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4818845	1					
ANR	4819435	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4818845	0					
ANR	4819436	PtrMemberAccess	upd -> string_a		4818845	0					
ANR	4819437	Identifier	upd		4818845	0					
ANR	4819438	Identifier	string_a		4818845	1					
ANR	4819439	Identifier	SA_SETCOMP		4818845	1					
ANR	4819440	Identifier	size		4818845	1					
ANR	4819441	CompoundStatement		104:52:3247:3247	4818845	1					
ANR	4819442	ExpressionStatement	upd -> icomp = icomp	5943:9:212328:212346	4818845	0	True				
ANR	4819443	AssignmentExpression	upd -> icomp = icomp		4818845	0		=			
ANR	4819444	PtrMemberAccess	upd -> icomp		4818845	0					
ANR	4819445	Identifier	upd		4818845	0					
ANR	4819446	Identifier	icomp		4818845	1					
ANR	4819447	Identifier	icomp		4818845	1					
ANR	4819448	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )		4818845	1					
ANR	4819449	Condition	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5944:12:212360:212405	4818845	0	True				
ANR	4819450	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4818845	0		<			
ANR	4819451	PrimaryExpression	0		4818845	0					
ANR	4819452	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4818845	1					
ANR	4819453	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4818845	0					
ANR	4819454	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4818845	0					
ANR	4819455	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4818845	0					
ANR	4819456	PtrMemberAccess	upd -> string_a		4818845	0					
ANR	4819457	Identifier	upd		4818845	0					
ANR	4819458	Identifier	string_a		4818845	1					
ANR	4819459	Identifier	SA_SETCOMP		4818845	1					
ANR	4819460	Identifier	data		4818845	1					
ANR	4819461	Identifier	icomp		4818845	1					
ANR	4819462	Identifier	size		4818845	1					
ANR	4819463	CompoundStatement		106:60:3362:3362	4818845	1					
ANR	4819464	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"	5945:12:212422:212583	4818845	0	True				
ANR	4819465	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"		4818845	0					
ANR	4819466	Callee	memcpy		4818845	0					
ANR	4819467	Identifier	memcpy		4818845	0					
ANR	4819468	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4819469	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4819470	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4819471	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819472	Identifier	upd		4818845	0					
ANR	4819473	Identifier	outbuf		4818845	1					
ANR	4819474	Identifier	ioutbuf		4818845	1					
ANR	4819475	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4818845	1					
ANR	4819476	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4818845	0					
ANR	4819477	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4818845	0					
ANR	4819478	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4818845	0					
ANR	4819479	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4818845	0					
ANR	4819480	PtrMemberAccess	upd -> string_a		4818845	0					
ANR	4819481	Identifier	upd		4818845	0					
ANR	4819482	Identifier	string_a		4818845	1					
ANR	4819483	Identifier	SA_SETCOMP		4818845	1					
ANR	4819484	Identifier	data		4818845	1					
ANR	4819485	Identifier	icomp		4818845	1					
ANR	4819486	Identifier	data		4818845	1					
ANR	4819487	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4818845	2					
ANR	4819488	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4818845	0					
ANR	4819489	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4818845	0					
ANR	4819490	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4818845	0					
ANR	4819491	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4818845	0					
ANR	4819492	PtrMemberAccess	upd -> string_a		4818845	0					
ANR	4819493	Identifier	upd		4818845	0					
ANR	4819494	Identifier	string_a		4818845	1					
ANR	4819495	Identifier	SA_SETCOMP		4818845	1					
ANR	4819496	Identifier	data		4818845	1					
ANR	4819497	Identifier	icomp		4818845	1					
ANR	4819498	Identifier	size		4818845	1					
ANR	4819499	ExpressionStatement	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	5948:12:212597:212650	4818845	1	True				
ANR	4819500	AssignmentExpression	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4818845	0		+=			
ANR	4819501	Identifier	ioutbuf		4818845	0					
ANR	4819502	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4818845	1					
ANR	4819503	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4818845	0					
ANR	4819504	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4818845	0					
ANR	4819505	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4818845	0					
ANR	4819506	PtrMemberAccess	upd -> string_a		4818845	0					
ANR	4819507	Identifier	upd		4818845	0					
ANR	4819508	Identifier	string_a		4818845	1					
ANR	4819509	Identifier	SA_SETCOMP		4818845	1					
ANR	4819510	Identifier	data		4818845	1					
ANR	4819511	Identifier	icomp		4818845	1					
ANR	4819512	Identifier	size		4818845	1					
ANR	4819513	IfStatement	if ( xbegin != upd -> xprinter )		4818845	5					
ANR	4819514	Condition	xbegin != upd -> xprinter	5954:9:212778:212800	4818845	0	True				
ANR	4819515	EqualityExpression	xbegin != upd -> xprinter		4818845	0		!=			
ANR	4819516	Identifier	xbegin		4818845	0					
ANR	4819517	PtrMemberAccess	upd -> xprinter		4818845	1					
ANR	4819518	Identifier	upd		4818845	0					
ANR	4819519	Identifier	xprinter		4818845	1					
ANR	4819520	CompoundStatement		116:34:3757:3757	4818845	1					
ANR	4819521	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		4818845	0					
ANR	4819522	Condition	0 == upd -> strings [ S_XMOVE ] . size	5956:12:212818:212848	4818845	0	True				
ANR	4819523	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4818845	0		==			
ANR	4819524	PrimaryExpression	0		4818845	0					
ANR	4819525	MemberAccess	upd -> strings [ S_XMOVE ] . size		4818845	1					
ANR	4819526	ArrayIndexing	upd -> strings [ S_XMOVE ]		4818845	0					
ANR	4819527	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819528	Identifier	upd		4818845	0					
ANR	4819529	Identifier	strings		4818845	1					
ANR	4819530	Identifier	S_XMOVE		4818845	1					
ANR	4819531	Identifier	size		4818845	1					
ANR	4819532	CompoundStatement		118:45:3805:3805	4818845	1					
ANR	4819533	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\r'	5958:12:212866:212895	4818845	0	True				
ANR	4819534	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\r'		4818845	0		=			
ANR	4819535	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4818845	0					
ANR	4819536	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819537	Identifier	upd		4818845	0					
ANR	4819538	Identifier	outbuf		4818845	1					
ANR	4819539	PostIncDecOperationExpression	ioutbuf ++		4818845	1					
ANR	4819540	Identifier	ioutbuf		4818845	0					
ANR	4819541	IncDec	++		4818845	1					
ANR	4819542	PrimaryExpression	'\\r'		4818845	1					
ANR	4819543	ExpressionStatement	upd -> xprinter = 0	5959:12:212909:212936	4818845	1	True				
ANR	4819544	AssignmentExpression	upd -> xprinter = 0		4818845	0		=			
ANR	4819545	PtrMemberAccess	upd -> xprinter		4818845	0					
ANR	4819546	Identifier	upd		4818845	0					
ANR	4819547	Identifier	xprinter		4818845	1					
ANR	4819548	PrimaryExpression	0		4818845	1					
ANR	4819549	ExpressionStatement	n = 0	5960:12:212950:212955	4818845	2	True				
ANR	4819550	AssignmentExpression	n = 0		4818845	0		=			
ANR	4819551	Identifier	n		4818845	0					
ANR	4819552	PrimaryExpression	0		4818845	1					
ANR	4819553	ExpressionStatement	x = 0	5961:12:212969:212974	4818845	3	True				
ANR	4819554	AssignmentExpression	x = 0		4818845	0		=			
ANR	4819555	Identifier	x		4818845	0					
ANR	4819556	PrimaryExpression	0		4818845	1					
ANR	4819557	ElseStatement	else		4818845	0					
ANR	4819558	CompoundStatement		125:16:3947:3947	4818845	0					
ANR	4819559	IfStatement	if ( B_XABS & upd -> flags )		4818845	0					
ANR	4819560	Condition	B_XABS & upd -> flags	5965:15:213011:213029	4818845	0	True				
ANR	4819561	BitAndExpression	B_XABS & upd -> flags		4818845	0		&			
ANR	4819562	Identifier	B_XABS		4818845	0					
ANR	4819563	PtrMemberAccess	upd -> flags		4818845	1					
ANR	4819564	Identifier	upd		4818845	0					
ANR	4819565	Identifier	flags		4818845	1					
ANR	4819566	ExpressionStatement	n = x = xbegin + upd -> ints [ I_XOFS ]	5965:36:213032:213066	4818845	1	True				
ANR	4819567	AssignmentExpression	n = x = xbegin + upd -> ints [ I_XOFS ]		4818845	0		=			
ANR	4819568	Identifier	n		4818845	0					
ANR	4819569	AssignmentExpression	x = xbegin + upd -> ints [ I_XOFS ]		4818845	1		=			
ANR	4819570	Identifier	x		4818845	0					
ANR	4819571	AdditiveExpression	xbegin + upd -> ints [ I_XOFS ]		4818845	1		+			
ANR	4819572	Identifier	xbegin		4818845	0					
ANR	4819573	ArrayIndexing	upd -> ints [ I_XOFS ]		4818845	1					
ANR	4819574	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819575	Identifier	upd		4818845	0					
ANR	4819576	Identifier	ints		4818845	1					
ANR	4819577	Identifier	I_XOFS		4818845	1					
ANR	4819578	ElseStatement	else		4818845	0					
ANR	4819579	ExpressionStatement	n = x = xbegin - upd -> xprinter	5966:36:213104:213134	4818845	0	True				
ANR	4819580	AssignmentExpression	n = x = xbegin - upd -> xprinter		4818845	0		=			
ANR	4819581	Identifier	n		4818845	0					
ANR	4819582	AssignmentExpression	x = xbegin - upd -> xprinter		4818845	1		=			
ANR	4819583	Identifier	x		4818845	0					
ANR	4819584	AdditiveExpression	xbegin - upd -> xprinter		4818845	1		-			
ANR	4819585	Identifier	xbegin		4818845	0					
ANR	4819586	PtrMemberAccess	upd -> xprinter		4818845	1					
ANR	4819587	Identifier	upd		4818845	0					
ANR	4819588	Identifier	xprinter		4818845	1					
ANR	4819589	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		4818845	1					
ANR	4819590	Condition	1 < upd -> ints [ I_XSTEP ]	5968:23:213160:213181	4818845	0	True				
ANR	4819591	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		4818845	0		<			
ANR	4819592	PrimaryExpression	1		4818845	0					
ANR	4819593	ArrayIndexing	upd -> ints [ I_XSTEP ]		4818845	1					
ANR	4819594	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819595	Identifier	upd		4818845	0					
ANR	4819596	Identifier	ints		4818845	1					
ANR	4819597	Identifier	I_XSTEP		4818845	1					
ANR	4819598	CompoundStatement		130:47:4138:4138	4818845	1					
ANR	4819599	IfStatement	if ( 0 > n )		4818845	0					
ANR	4819600	Condition	0 > n	5969:18:213204:213208	4818845	0	True				
ANR	4819601	RelationalExpression	0 > n		4818845	0		>			
ANR	4819602	PrimaryExpression	0		4818845	0					
ANR	4819603	Identifier	n		4818845	1					
ANR	4819604	CompoundStatement		131:25:4165:4165	4818845	1					
ANR	4819605	ExpressionStatement	n -= upd -> ints [ I_XSTEP ]	5970:18:213231:213255	4818845	0	True				
ANR	4819606	AssignmentExpression	n -= upd -> ints [ I_XSTEP ]		4818845	0		-=			
ANR	4819607	Identifier	n		4818845	0					
ANR	4819608	ArrayIndexing	upd -> ints [ I_XSTEP ]		4818845	1					
ANR	4819609	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819610	Identifier	upd		4818845	0					
ANR	4819611	Identifier	ints		4818845	1					
ANR	4819612	Identifier	I_XSTEP		4818845	1					
ANR	4819613	ExpressionStatement	x -= n	5971:18:213275:213282	4818845	1	True				
ANR	4819614	AssignmentExpression	x -= n		4818845	0		-=			
ANR	4819615	Identifier	x		4818845	0					
ANR	4819616	Identifier	n		4818845	1					
ANR	4819617	IfStatement	if ( n )		4818845	1					
ANR	4819618	Condition	n	5973:18:213319:213319	4818845	0	True				
ANR	4819619	Identifier	n		4818845	0					
ANR	4819620	ExpressionStatement	n /= upd -> ints [ I_XSTEP ]	5973:21:213322:213346	4818845	1	True				
ANR	4819621	AssignmentExpression	n /= upd -> ints [ I_XSTEP ]		4818845	0		/=			
ANR	4819622	Identifier	n		4818845	0					
ANR	4819623	ArrayIndexing	upd -> ints [ I_XSTEP ]		4818845	1					
ANR	4819624	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819625	Identifier	upd		4818845	0					
ANR	4819626	Identifier	ints		4818845	1					
ANR	4819627	Identifier	I_XSTEP		4818845	1					
ANR	4819628	IfStatement	if ( x )		4818845	2					
ANR	4819629	Condition	x	5974:18:213384:213384	4818845	0	True				
ANR	4819630	Identifier	x		4818845	0					
ANR	4819631	ExpressionStatement	x %= upd -> ints [ I_XSTEP ]	5974:21:213387:213411	4818845	1	True				
ANR	4819632	AssignmentExpression	x %= upd -> ints [ I_XSTEP ]		4818845	0		%=			
ANR	4819633	Identifier	x		4818845	0					
ANR	4819634	ArrayIndexing	upd -> ints [ I_XSTEP ]		4818845	1					
ANR	4819635	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819636	Identifier	upd		4818845	0					
ANR	4819637	Identifier	ints		4818845	1					
ANR	4819638	Identifier	I_XSTEP		4818845	1					
ANR	4819639	ElseStatement	else		4818845	0					
ANR	4819640	IfStatement	if ( - 1 > upd -> ints [ I_XSTEP ] )		4818845	0					
ANR	4819641	Condition	- 1 > upd -> ints [ I_XSTEP ]	5976:22:213454:213476	4818845	0	True				
ANR	4819642	RelationalExpression	- 1 > upd -> ints [ I_XSTEP ]		4818845	0		>			
ANR	4819643	UnaryOperationExpression	- 1		4818845	0					
ANR	4819644	UnaryOperator	-		4818845	0					
ANR	4819645	PrimaryExpression	1		4818845	1					
ANR	4819646	ArrayIndexing	upd -> ints [ I_XSTEP ]		4818845	1					
ANR	4819647	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819648	Identifier	upd		4818845	0					
ANR	4819649	Identifier	ints		4818845	1					
ANR	4819650	Identifier	I_XSTEP		4818845	1					
ANR	4819651	CompoundStatement		138:47:4433:4433	4818845	1					
ANR	4819652	ExpressionStatement	n *= - upd -> ints [ I_XSTEP ]	5977:15:213496:213520	4818845	0	True				
ANR	4819653	AssignmentExpression	n *= - upd -> ints [ I_XSTEP ]		4818845	0		*=			
ANR	4819654	Identifier	n		4818845	0					
ANR	4819655	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		4818845	1					
ANR	4819656	UnaryOperator	-		4818845	0					
ANR	4819657	ArrayIndexing	upd -> ints [ I_XSTEP ]		4818845	1					
ANR	4819658	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819659	Identifier	upd		4818845	0					
ANR	4819660	Identifier	ints		4818845	1					
ANR	4819661	Identifier	I_XSTEP		4818845	1					
ANR	4819662	ExpressionStatement	x = 0	5978:15:213558:213564	4818845	1	True				
ANR	4819663	AssignmentExpression	x = 0		4818845	0		=			
ANR	4819664	Identifier	x		4818845	0					
ANR	4819665	PrimaryExpression	0		4818845	1					
ANR	4819666	IfStatement	if ( n )		4818845	2					
ANR	4819667	Condition	n	5981:15:213596:213596	4818845	0	True				
ANR	4819668	Identifier	n		4818845	0					
ANR	4819669	CompoundStatement		143:18:4553:4553	4818845	1					
ANR	4819670	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"	5983:14:213640:213775	4818845	0	True				
ANR	4819671	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"		4818845	0					
ANR	4819672	Callee	memcpy		4818845	0					
ANR	4819673	Identifier	memcpy		4818845	0					
ANR	4819674	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4819675	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4819676	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4819677	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819678	Identifier	upd		4818845	0					
ANR	4819679	Identifier	outbuf		4818845	1					
ANR	4819680	Identifier	ioutbuf		4818845	1					
ANR	4819681	Argument	upd -> strings [ S_XMOVE ] . data		4818845	1					
ANR	4819682	MemberAccess	upd -> strings [ S_XMOVE ] . data		4818845	0					
ANR	4819683	ArrayIndexing	upd -> strings [ S_XMOVE ]		4818845	0					
ANR	4819684	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819685	Identifier	upd		4818845	0					
ANR	4819686	Identifier	strings		4818845	1					
ANR	4819687	Identifier	S_XMOVE		4818845	1					
ANR	4819688	Identifier	data		4818845	1					
ANR	4819689	Argument	upd -> strings [ S_XMOVE ] . size		4818845	2					
ANR	4819690	MemberAccess	upd -> strings [ S_XMOVE ] . size		4818845	0					
ANR	4819691	ArrayIndexing	upd -> strings [ S_XMOVE ]		4818845	0					
ANR	4819692	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819693	Identifier	upd		4818845	0					
ANR	4819694	Identifier	strings		4818845	1					
ANR	4819695	Identifier	S_XMOVE		4818845	1					
ANR	4819696	Identifier	size		4818845	1					
ANR	4819697	ExpressionStatement	ioutbuf += upd -> strings [ S_XMOVE ] . size	5986:15:213792:213829	4818845	1	True				
ANR	4819698	AssignmentExpression	ioutbuf += upd -> strings [ S_XMOVE ] . size		4818845	0		+=			
ANR	4819699	Identifier	ioutbuf		4818845	0					
ANR	4819700	MemberAccess	upd -> strings [ S_XMOVE ] . size		4818845	1					
ANR	4819701	ArrayIndexing	upd -> strings [ S_XMOVE ]		4818845	0					
ANR	4819702	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819703	Identifier	upd		4818845	0					
ANR	4819704	Identifier	strings		4818845	1					
ANR	4819705	Identifier	S_XMOVE		4818845	1					
ANR	4819706	Identifier	size		4818845	1					
ANR	4819707	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	5988:15:213847:213885	4818845	2	True				
ANR	4819708	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		4818845	0		=			
ANR	4819709	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4818845	0					
ANR	4819710	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819711	Identifier	upd		4818845	0					
ANR	4819712	Identifier	outbuf		4818845	1					
ANR	4819713	PostIncDecOperationExpression	ioutbuf ++		4818845	1					
ANR	4819714	Identifier	ioutbuf		4818845	0					
ANR	4819715	IncDec	++		4818845	1					
ANR	4819716	BitAndExpression	n & 0xff		4818845	1		&			
ANR	4819717	Identifier	n		4818845	0					
ANR	4819718	PrimaryExpression	0xff		4818845	1					
ANR	4819719	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	5989:15:213902:213940	4818845	3	True				
ANR	4819720	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		4818845	0		=			
ANR	4819721	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4818845	0					
ANR	4819722	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819723	Identifier	upd		4818845	0					
ANR	4819724	Identifier	outbuf		4818845	1					
ANR	4819725	PostIncDecOperationExpression	ioutbuf ++		4818845	1					
ANR	4819726	Identifier	ioutbuf		4818845	0					
ANR	4819727	IncDec	++		4818845	1					
ANR	4819728	BitAndExpression	( n >> 8 ) & 0xff		4818845	1		&			
ANR	4819729	ShiftExpression	n >> 8		4818845	0		>>			
ANR	4819730	Identifier	n		4818845	0					
ANR	4819731	PrimaryExpression	8		4818845	1					
ANR	4819732	PrimaryExpression	0xff		4818845	1					
ANR	4819733	IfStatement	if ( x && 0 < upd -> strings [ S_XSTEP ] . size )		4818845	1					
ANR	4819734	Condition	x && 0 < upd -> strings [ S_XSTEP ] . size	5995:12:214012:214046	4818845	0	True				
ANR	4819735	AndExpression	x && 0 < upd -> strings [ S_XSTEP ] . size		4818845	0		&&			
ANR	4819736	Identifier	x		4818845	0					
ANR	4819737	RelationalExpression	0 < upd -> strings [ S_XSTEP ] . size		4818845	1		<			
ANR	4819738	PrimaryExpression	0		4818845	0					
ANR	4819739	MemberAccess	upd -> strings [ S_XSTEP ] . size		4818845	1					
ANR	4819740	ArrayIndexing	upd -> strings [ S_XSTEP ]		4818845	0					
ANR	4819741	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819742	Identifier	upd		4818845	0					
ANR	4819743	Identifier	strings		4818845	1					
ANR	4819744	Identifier	S_XSTEP		4818845	1					
ANR	4819745	Identifier	size		4818845	1					
ANR	4819746	CompoundStatement		157:49:5003:5003	4818845	1					
ANR	4819747	WhileStatement	while ( x -- )		4818845	0					
ANR	4819748	Condition	x --	5996:18:214089:214091	4818845	0	True				
ANR	4819749	PostIncDecOperationExpression	x --		4818845	0					
ANR	4819750	Identifier	x		4818845	0					
ANR	4819751	IncDec	--		4818845	1					
ANR	4819752	CompoundStatement		158:23:5048:5048	4818845	1					
ANR	4819753	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"	5997:15:214111:214246	4818845	0	True				
ANR	4819754	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"		4818845	0					
ANR	4819755	Callee	memcpy		4818845	0					
ANR	4819756	Identifier	memcpy		4818845	0					
ANR	4819757	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4819758	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4819759	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4819760	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819761	Identifier	upd		4818845	0					
ANR	4819762	Identifier	outbuf		4818845	1					
ANR	4819763	Identifier	ioutbuf		4818845	1					
ANR	4819764	Argument	upd -> strings [ S_XSTEP ] . data		4818845	1					
ANR	4819765	MemberAccess	upd -> strings [ S_XSTEP ] . data		4818845	0					
ANR	4819766	ArrayIndexing	upd -> strings [ S_XSTEP ]		4818845	0					
ANR	4819767	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819768	Identifier	upd		4818845	0					
ANR	4819769	Identifier	strings		4818845	1					
ANR	4819770	Identifier	S_XSTEP		4818845	1					
ANR	4819771	Identifier	data		4818845	1					
ANR	4819772	Argument	upd -> strings [ S_XSTEP ] . size		4818845	2					
ANR	4819773	MemberAccess	upd -> strings [ S_XSTEP ] . size		4818845	0					
ANR	4819774	ArrayIndexing	upd -> strings [ S_XSTEP ]		4818845	0					
ANR	4819775	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819776	Identifier	upd		4818845	0					
ANR	4819777	Identifier	strings		4818845	1					
ANR	4819778	Identifier	S_XSTEP		4818845	1					
ANR	4819779	Identifier	size		4818845	1					
ANR	4819780	ExpressionStatement	ioutbuf += upd -> strings [ S_XSTEP ] . size	6000:15:214263:214300	4818845	1	True				
ANR	4819781	AssignmentExpression	ioutbuf += upd -> strings [ S_XSTEP ] . size		4818845	0		+=			
ANR	4819782	Identifier	ioutbuf		4818845	0					
ANR	4819783	MemberAccess	upd -> strings [ S_XSTEP ] . size		4818845	1					
ANR	4819784	ArrayIndexing	upd -> strings [ S_XSTEP ]		4818845	0					
ANR	4819785	PtrMemberAccess	upd -> strings		4818845	0					
ANR	4819786	Identifier	upd		4818845	0					
ANR	4819787	Identifier	strings		4818845	1					
ANR	4819788	Identifier	S_XSTEP		4818845	1					
ANR	4819789	Identifier	size		4818845	1					
ANR	4819790	ExpressionStatement	upd -> xprinter = xend + 1	6004:6:214401:214423	4818845	6	True				
ANR	4819791	AssignmentExpression	upd -> xprinter = xend + 1		4818845	0		=			
ANR	4819792	PtrMemberAccess	upd -> xprinter		4818845	0					
ANR	4819793	Identifier	upd		4818845	0					
ANR	4819794	Identifier	xprinter		4818845	1					
ANR	4819795	AdditiveExpression	xend + 1		4818845	1		+			
ANR	4819796	Identifier	xend		4818845	0					
ANR	4819797	PrimaryExpression	1		4818845	1					
ANR	4819798	IfStatement	if ( 0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )		4818845	7					
ANR	4819799	Condition	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	6009:9:214497:214544	4818845	0	True				
ANR	4819800	RelationalExpression	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4818845	0		<			
ANR	4819801	PrimaryExpression	0		4818845	0					
ANR	4819802	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4818845	1					
ANR	4819803	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4818845	0					
ANR	4819804	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4818845	0					
ANR	4819805	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4818845	0					
ANR	4819806	PtrMemberAccess	upd -> string_a		4818845	0					
ANR	4819807	Identifier	upd		4818845	0					
ANR	4819808	Identifier	string_a		4818845	1					
ANR	4819809	Identifier	SA_WRITECOMP		4818845	1					
ANR	4819810	Identifier	data		4818845	1					
ANR	4819811	Identifier	icomp		4818845	1					
ANR	4819812	Identifier	size		4818845	1					
ANR	4819813	CompoundStatement		171:59:5501:5501	4818845	1					
ANR	4819814	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"	6010:9:214558:214717	4818845	0	True				
ANR	4819815	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"		4818845	0					
ANR	4819816	Callee	memcpy		4818845	0					
ANR	4819817	Identifier	memcpy		4818845	0					
ANR	4819818	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4819819	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4819820	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4819821	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819822	Identifier	upd		4818845	0					
ANR	4819823	Identifier	outbuf		4818845	1					
ANR	4819824	Identifier	ioutbuf		4818845	1					
ANR	4819825	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4818845	1					
ANR	4819826	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4818845	0					
ANR	4819827	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4818845	0					
ANR	4819828	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4818845	0					
ANR	4819829	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4818845	0					
ANR	4819830	PtrMemberAccess	upd -> string_a		4818845	0					
ANR	4819831	Identifier	upd		4818845	0					
ANR	4819832	Identifier	string_a		4818845	1					
ANR	4819833	Identifier	SA_WRITECOMP		4818845	1					
ANR	4819834	Identifier	data		4818845	1					
ANR	4819835	Identifier	icomp		4818845	1					
ANR	4819836	Identifier	data		4818845	1					
ANR	4819837	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4818845	2					
ANR	4819838	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4818845	0					
ANR	4819839	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4818845	0					
ANR	4819840	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4818845	0					
ANR	4819841	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4818845	0					
ANR	4819842	PtrMemberAccess	upd -> string_a		4818845	0					
ANR	4819843	Identifier	upd		4818845	0					
ANR	4819844	Identifier	string_a		4818845	1					
ANR	4819845	Identifier	SA_WRITECOMP		4818845	1					
ANR	4819846	Identifier	data		4818845	1					
ANR	4819847	Identifier	icomp		4818845	1					
ANR	4819848	Identifier	size		4818845	1					
ANR	4819849	ExpressionStatement	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	6013:9:214728:214783	4818845	1	True				
ANR	4819850	AssignmentExpression	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4818845	0		+=			
ANR	4819851	Identifier	ioutbuf		4818845	0					
ANR	4819852	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4818845	1					
ANR	4819853	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4818845	0					
ANR	4819854	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4818845	0					
ANR	4819855	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4818845	0					
ANR	4819856	PtrMemberAccess	upd -> string_a		4818845	0					
ANR	4819857	Identifier	upd		4818845	0					
ANR	4819858	Identifier	string_a		4818845	1					
ANR	4819859	Identifier	SA_WRITECOMP		4818845	1					
ANR	4819860	Identifier	data		4818845	1					
ANR	4819861	Identifier	icomp		4818845	1					
ANR	4819862	Identifier	size		4818845	1					
ANR	4819863	ExpressionStatement	n = xend + 1 - xbegin	6015:6:214799:214820	4818845	8	True				
ANR	4819864	AssignmentExpression	n = xend + 1 - xbegin		4818845	0		=			
ANR	4819865	Identifier	n		4818845	0					
ANR	4819866	AdditiveExpression	xend + 1 - xbegin		4818845	1		+			
ANR	4819867	Identifier	xend		4818845	0					
ANR	4819868	AdditiveExpression	1 - xbegin		4818845	1		-			
ANR	4819869	PrimaryExpression	1		4818845	0					
ANR	4819870	Identifier	xbegin		4818845	1					
ANR	4819871	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n << 3 ) & 255	6016:6:214828:214865	4818845	9	True				
ANR	4819872	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n << 3 ) & 255		4818845	0		=			
ANR	4819873	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4818845	0					
ANR	4819874	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819875	Identifier	upd		4818845	0					
ANR	4819876	Identifier	outbuf		4818845	1					
ANR	4819877	PostIncDecOperationExpression	ioutbuf ++		4818845	1					
ANR	4819878	Identifier	ioutbuf		4818845	0					
ANR	4819879	IncDec	++		4818845	1					
ANR	4819880	BitAndExpression	( n << 3 ) & 255		4818845	1		&			
ANR	4819881	ShiftExpression	n << 3		4818845	0		<<			
ANR	4819882	Identifier	n		4818845	0					
ANR	4819883	PrimaryExpression	3		4818845	1					
ANR	4819884	PrimaryExpression	255		4818845	1					
ANR	4819885	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 5 ) & 255	6017:6:214873:214910	4818845	10	True				
ANR	4819886	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 5 ) & 255		4818845	0		=			
ANR	4819887	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4818845	0					
ANR	4819888	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819889	Identifier	upd		4818845	0					
ANR	4819890	Identifier	outbuf		4818845	1					
ANR	4819891	PostIncDecOperationExpression	ioutbuf ++		4818845	1					
ANR	4819892	Identifier	ioutbuf		4818845	0					
ANR	4819893	IncDec	++		4818845	1					
ANR	4819894	BitAndExpression	( n >> 5 ) & 255		4818845	1		&			
ANR	4819895	ShiftExpression	n >> 5		4818845	0		>>			
ANR	4819896	Identifier	n		4818845	0					
ANR	4819897	PrimaryExpression	5		4818845	1					
ANR	4819898	PrimaryExpression	255		4818845	1					
ANR	4819899	ExpressionStatement	irow = 0	6021:6:214947:214953	4818845	11	True				
ANR	4819900	AssignmentExpression	irow = 0		4818845	0		=			
ANR	4819901	Identifier	irow		4818845	0					
ANR	4819902	PrimaryExpression	0		4818845	1					
ANR	4819903	ForStatement	for ( pin = 0 ; pin < pintop ; ++ pin )		4818845	12					
ANR	4819904	ForInit	pin = 0 ;	6024:10:215058:215065	4818845	0	True				
ANR	4819905	AssignmentExpression	pin = 0		4818845	0		=			
ANR	4819906	Identifier	pin		4818845	0					
ANR	4819907	PrimaryExpression	0		4818845	1					
ANR	4819908	Condition	pin < pintop	6024:19:215067:215078	4818845	1	True				
ANR	4819909	RelationalExpression	pin < pintop		4818845	0		<			
ANR	4819910	Identifier	pin		4818845	0					
ANR	4819911	Identifier	pintop		4818845	1					
ANR	4819912	UnaryExpression	++ pin	6024:33:215081:215085	4818845	2	True				
ANR	4819913	IncDec	++		4818845	0					
ANR	4819914	Identifier	pin		4818845	1					
ANR	4819915	CompoundStatement		187:9:6053:6058	4818845	3					
ANR	4819916	IdentifierDeclStatement	int i ;	6025:9:215099:215104	4818845	0	True				
ANR	4819917	IdentifierDecl	i		4818845	0					
ANR	4819918	IdentifierDeclType	int		4818845	0					
ANR	4819919	Identifier	i		4818845	1					
ANR	4819920	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		4818845	1					
ANR	4819921	ForInit	i = 0 ;	6026:13:215119:215123	4818845	0	True				
ANR	4819922	AssignmentExpression	i = 0		4818845	0		=			
ANR	4819923	Identifier	i		4818845	0					
ANR	4819924	PrimaryExpression	0		4818845	1					
ANR	4819925	Condition	i < upd -> ints [ I_PATRPT ]	6026:19:215125:215147	4818845	1	True				
ANR	4819926	RelationalExpression	i < upd -> ints [ I_PATRPT ]		4818845	0		<			
ANR	4819927	Identifier	i		4818845	0					
ANR	4819928	ArrayIndexing	upd -> ints [ I_PATRPT ]		4818845	1					
ANR	4819929	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819930	Identifier	upd		4818845	0					
ANR	4819931	Identifier	ints		4818845	1					
ANR	4819932	Identifier	I_PATRPT		4818845	1					
ANR	4819933	PostIncDecOperationExpression	i ++	6026:44:215150:215152	4818845	2	True				
ANR	4819934	Identifier	i		4818845	0					
ANR	4819935	IncDec	++		4818845	1					
ANR	4819936	CompoundStatement		188:48:6108:6108	4818845	3					
ANR	4819937	IfStatement	if ( irow >= upd -> ints [ I_ROWS ] )		4818845	0					
ANR	4819938	Condition	irow >= upd -> ints [ I_ROWS ]	6027:15:215171:215195	4818845	0	True				
ANR	4819939	RelationalExpression	irow >= upd -> ints [ I_ROWS ]		4818845	0		>=			
ANR	4819940	Identifier	irow		4818845	0					
ANR	4819941	ArrayIndexing	upd -> ints [ I_ROWS ]		4818845	1					
ANR	4819942	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4819943	Identifier	upd		4818845	0					
ANR	4819944	Identifier	ints		4818845	1					
ANR	4819945	Identifier	I_ROWS		4818845	1					
ANR	4819946	BreakStatement	break ;	6027:42:215198:215203	4818845	1	True				
ANR	4819947	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6028:12:215217:215263	4818845	1	True				
ANR	4819948	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	0		+=			
ANR	4819949	Identifier	ioutbuf		4818845	0					
ANR	4819950	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	1					
ANR	4819951	Callee	upd_rle		4818845	0					
ANR	4819952	Identifier	upd_rle		4818845	0					
ANR	4819953	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4819954	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4819955	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4819956	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819957	Identifier	upd		4818845	0					
ANR	4819958	Identifier	outbuf		4818845	1					
ANR	4819959	Identifier	ioutbuf		4818845	1					
ANR	4819960	Argument	NULL		4818845	1					
ANR	4819961	Identifier	NULL		4818845	0					
ANR	4819962	Argument	n		4818845	2					
ANR	4819963	Identifier	n		4818845	0					
ANR	4819964	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6029:12:215277:215310	4818845	2	True				
ANR	4819965	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4818845	0					
ANR	4819966	Callee	fwrite		4818845	0					
ANR	4819967	Identifier	fwrite		4818845	0					
ANR	4819968	ArgumentList	upd -> outbuf		4818845	1					
ANR	4819969	Argument	upd -> outbuf		4818845	0					
ANR	4819970	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4819971	Identifier	upd		4818845	0					
ANR	4819972	Identifier	outbuf		4818845	1					
ANR	4819973	Argument	1		4818845	1					
ANR	4819974	PrimaryExpression	1		4818845	0					
ANR	4819975	Argument	ioutbuf		4818845	2					
ANR	4819976	Identifier	ioutbuf		4818845	0					
ANR	4819977	Argument	out		4818845	3					
ANR	4819978	Identifier	out		4818845	0					
ANR	4819979	ExpressionStatement	irow ++	6030:12:215324:215330	4818845	3	True				
ANR	4819980	PostIncDecOperationExpression	irow ++		4818845	0					
ANR	4819981	Identifier	irow		4818845	0					
ANR	4819982	IncDec	++		4818845	1					
ANR	4819983	ExpressionStatement	ioutbuf = 0	6031:12:215344:215355	4818845	4	True				
ANR	4819984	AssignmentExpression	ioutbuf = 0		4818845	0		=			
ANR	4819985	Identifier	ioutbuf		4818845	0					
ANR	4819986	PrimaryExpression	0		4818845	1					
ANR	4819987	ForStatement	for ( y = ybegin ; 0 > y ; y += upd -> ints [ I_NYPASS ] )		4818845	13					
ANR	4819988	ForInit	y = ybegin ;	6037:10:215489:215499	4818845	0	True				
ANR	4819989	AssignmentExpression	y = ybegin		4818845	0		=			
ANR	4819990	Identifier	y		4818845	0					
ANR	4819991	Identifier	ybegin		4818845	1					
ANR	4819992	Condition	0 > y	6037:22:215501:215505	4818845	1	True				
ANR	4819993	RelationalExpression	0 > y		4818845	0		>			
ANR	4819994	PrimaryExpression	0		4818845	0					
ANR	4819995	Identifier	y		4818845	1					
ANR	4819996	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6037:32:215511:215534	4818845	2	True	+=			
ANR	4819997	Identifier	y		4818845	0					
ANR	4819998	ArrayIndexing	upd -> ints [ I_NYPASS ]		4818845	1					
ANR	4819999	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820000	Identifier	upd		4818845	0					
ANR	4820001	Identifier	ints		4818845	1					
ANR	4820002	Identifier	I_NYPASS		4818845	1					
ANR	4820003	CompoundStatement		201:9:6503:6508	4818845	3					
ANR	4820004	IdentifierDeclStatement	int i ;	6039:9:215549:215554	4818845	0	True				
ANR	4820005	IdentifierDecl	i		4818845	0					
ANR	4820006	IdentifierDeclType	int		4818845	0					
ANR	4820007	Identifier	i		4818845	1					
ANR	4820008	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		4818845	1					
ANR	4820009	ForInit	i = 0 ;	6040:13:215569:215573	4818845	0	True				
ANR	4820010	AssignmentExpression	i = 0		4818845	0		=			
ANR	4820011	Identifier	i		4818845	0					
ANR	4820012	PrimaryExpression	0		4818845	1					
ANR	4820013	Condition	i < upd -> ints [ I_PATRPT ]	6040:19:215575:215597	4818845	1	True				
ANR	4820014	RelationalExpression	i < upd -> ints [ I_PATRPT ]		4818845	0		<			
ANR	4820015	Identifier	i		4818845	0					
ANR	4820016	ArrayIndexing	upd -> ints [ I_PATRPT ]		4818845	1					
ANR	4820017	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820018	Identifier	upd		4818845	0					
ANR	4820019	Identifier	ints		4818845	1					
ANR	4820020	Identifier	I_PATRPT		4818845	1					
ANR	4820021	PostIncDecOperationExpression	i ++	6040:44:215600:215602	4818845	2	True				
ANR	4820022	Identifier	i		4818845	0					
ANR	4820023	IncDec	++		4818845	1					
ANR	4820024	CompoundStatement		202:48:6558:6558	4818845	3					
ANR	4820025	IfStatement	if ( irow >= upd -> ints [ I_ROWS ] )		4818845	0					
ANR	4820026	Condition	irow >= upd -> ints [ I_ROWS ]	6041:15:215621:215645	4818845	0	True				
ANR	4820027	RelationalExpression	irow >= upd -> ints [ I_ROWS ]		4818845	0		>=			
ANR	4820028	Identifier	irow		4818845	0					
ANR	4820029	ArrayIndexing	upd -> ints [ I_ROWS ]		4818845	1					
ANR	4820030	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820031	Identifier	upd		4818845	0					
ANR	4820032	Identifier	ints		4818845	1					
ANR	4820033	Identifier	I_ROWS		4818845	1					
ANR	4820034	BreakStatement	break ;	6041:42:215648:215653	4818845	1	True				
ANR	4820035	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6042:12:215667:215713	4818845	1	True				
ANR	4820036	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	0		+=			
ANR	4820037	Identifier	ioutbuf		4818845	0					
ANR	4820038	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	1					
ANR	4820039	Callee	upd_rle		4818845	0					
ANR	4820040	Identifier	upd_rle		4818845	0					
ANR	4820041	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4820042	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4820043	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4820044	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4820045	Identifier	upd		4818845	0					
ANR	4820046	Identifier	outbuf		4818845	1					
ANR	4820047	Identifier	ioutbuf		4818845	1					
ANR	4820048	Argument	NULL		4818845	1					
ANR	4820049	Identifier	NULL		4818845	0					
ANR	4820050	Argument	n		4818845	2					
ANR	4820051	Identifier	n		4818845	0					
ANR	4820052	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6043:12:215727:215760	4818845	2	True				
ANR	4820053	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4818845	0					
ANR	4820054	Callee	fwrite		4818845	0					
ANR	4820055	Identifier	fwrite		4818845	0					
ANR	4820056	ArgumentList	upd -> outbuf		4818845	1					
ANR	4820057	Argument	upd -> outbuf		4818845	0					
ANR	4820058	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4820059	Identifier	upd		4818845	0					
ANR	4820060	Identifier	outbuf		4818845	1					
ANR	4820061	Argument	1		4818845	1					
ANR	4820062	PrimaryExpression	1		4818845	0					
ANR	4820063	Argument	ioutbuf		4818845	2					
ANR	4820064	Identifier	ioutbuf		4818845	0					
ANR	4820065	Argument	out		4818845	3					
ANR	4820066	Identifier	out		4818845	0					
ANR	4820067	ExpressionStatement	ioutbuf = 0	6044:12:215774:215785	4818845	3	True				
ANR	4820068	AssignmentExpression	ioutbuf = 0		4818845	0		=			
ANR	4820069	Identifier	ioutbuf		4818845	0					
ANR	4820070	PrimaryExpression	0		4818845	1					
ANR	4820071	ExpressionStatement	irow ++	6045:12:215799:215805	4818845	4	True				
ANR	4820072	PostIncDecOperationExpression	irow ++		4818845	0					
ANR	4820073	Identifier	irow		4818845	0					
ANR	4820074	IncDec	++		4818845	1					
ANR	4820075	ForStatement	for ( ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4818845	14					
ANR	4820076	Condition	y < yend	6049:12:215839:215846	4818845	0	True				
ANR	4820077	RelationalExpression	y < yend		4818845	0		<			
ANR	4820078	Identifier	y		4818845	0					
ANR	4820079	Identifier	yend		4818845	1					
ANR	4820080	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6049:22:215849:215872	4818845	1	True	+=			
ANR	4820081	Identifier	y		4818845	0					
ANR	4820082	ArrayIndexing	upd -> ints [ I_NYPASS ]		4818845	1					
ANR	4820083	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820084	Identifier	upd		4818845	0					
ANR	4820085	Identifier	ints		4818845	1					
ANR	4820086	Identifier	I_NYPASS		4818845	1					
ANR	4820087	CompoundStatement		213:9:6841:6881	4818845	2					
ANR	4820088	IdentifierDeclStatement	"int i , masklen = upd -> ints [ I_PATRPT ] , yinc = 0 ;"	6051:9:215887:215927	4818845	0	True				
ANR	4820089	IdentifierDecl	i		4818845	0					
ANR	4820090	IdentifierDeclType	int		4818845	0					
ANR	4820091	Identifier	i		4818845	1					
ANR	4820092	IdentifierDecl	masklen = upd -> ints [ I_PATRPT ]		4818845	1					
ANR	4820093	IdentifierDeclType	int		4818845	0					
ANR	4820094	Identifier	masklen		4818845	1					
ANR	4820095	AssignmentExpression	masklen = upd -> ints [ I_PATRPT ]		4818845	2		=			
ANR	4820096	Identifier	masklen		4818845	0					
ANR	4820097	ArrayIndexing	upd -> ints [ I_PATRPT ]		4818845	1					
ANR	4820098	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820099	Identifier	upd		4818845	0					
ANR	4820100	Identifier	ints		4818845	1					
ANR	4820101	Identifier	I_PATRPT		4818845	1					
ANR	4820102	IdentifierDecl	yinc = 0		4818845	2					
ANR	4820103	IdentifierDeclType	int		4818845	0					
ANR	4820104	Identifier	yinc		4818845	1					
ANR	4820105	AssignmentExpression	yinc = 0		4818845	2		=			
ANR	4820106	Identifier	yinc		4818845	0					
ANR	4820107	PrimaryExpression	0		4818845	1					
ANR	4820108	ForStatement	for ( i = 0 ; ( i < upd -> ints [ I_PATRPT ] ) ; i ++ )		4818845	1					
ANR	4820109	ForInit	i = 0 ;	6053:13:215943:215947	4818845	0	True				
ANR	4820110	AssignmentExpression	i = 0		4818845	0		=			
ANR	4820111	Identifier	i		4818845	0					
ANR	4820112	PrimaryExpression	0		4818845	1					
ANR	4820113	Condition	i < upd -> ints [ I_PATRPT ]	6053:19:215949:215973	4818845	1	True				
ANR	4820114	RelationalExpression	i < upd -> ints [ I_PATRPT ]		4818845	0		<			
ANR	4820115	Identifier	i		4818845	0					
ANR	4820116	ArrayIndexing	upd -> ints [ I_PATRPT ]		4818845	1					
ANR	4820117	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820118	Identifier	upd		4818845	0					
ANR	4820119	Identifier	ints		4818845	1					
ANR	4820120	Identifier	I_PATRPT		4818845	1					
ANR	4820121	PostIncDecOperationExpression	i ++	6053:46:215976:215978	4818845	2	True				
ANR	4820122	Identifier	i		4818845	0					
ANR	4820123	IncDec	++		4818845	1					
ANR	4820124	CompoundStatement		215:50:6934:6934	4818845	3					
ANR	4820125	IfStatement	if ( irow >= upd -> ints [ I_ROWS ] )		4818845	0					
ANR	4820126	Condition	irow >= upd -> ints [ I_ROWS ]	6054:15:215997:216021	4818845	0	True				
ANR	4820127	RelationalExpression	irow >= upd -> ints [ I_ROWS ]		4818845	0		>=			
ANR	4820128	Identifier	irow		4818845	0					
ANR	4820129	ArrayIndexing	upd -> ints [ I_ROWS ]		4818845	1					
ANR	4820130	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820131	Identifier	upd		4818845	0					
ANR	4820132	Identifier	ints		4818845	1					
ANR	4820133	Identifier	I_ROWS		4818845	1					
ANR	4820134	BreakStatement	break ;	6054:42:216024:216029	4818845	1	True				
ANR	4820135	ExpressionStatement	imask = irow % masklen	6055:12:216043:216063	4818845	1	True				
ANR	4820136	AssignmentExpression	imask = irow % masklen		4818845	0		=			
ANR	4820137	Identifier	imask		4818845	0					
ANR	4820138	MultiplicativeExpression	irow % masklen		4818845	1		%			
ANR	4820139	Identifier	irow		4818845	0					
ANR	4820140	Identifier	masklen		4818845	1					
ANR	4820141	ExpressionStatement	icomp = upd -> int_a [ IA_ROWMASK ] . data [ imask ]	6056:12:216077:216119	4818845	2	True				
ANR	4820142	AssignmentExpression	icomp = upd -> int_a [ IA_ROWMASK ] . data [ imask ]		4818845	0		=			
ANR	4820143	Identifier	icomp		4818845	0					
ANR	4820144	ArrayIndexing	upd -> int_a [ IA_ROWMASK ] . data [ imask ]		4818845	1					
ANR	4820145	MemberAccess	upd -> int_a [ IA_ROWMASK ] . data		4818845	0					
ANR	4820146	ArrayIndexing	upd -> int_a [ IA_ROWMASK ]		4818845	0					
ANR	4820147	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4820148	Identifier	upd		4818845	0					
ANR	4820149	Identifier	int_a		4818845	1					
ANR	4820150	Identifier	IA_ROWMASK		4818845	1					
ANR	4820151	Identifier	data		4818845	1					
ANR	4820152	Identifier	imask		4818845	1					
ANR	4820153	IfStatement	if ( icomp == 0 )		4818845	3					
ANR	4820154	Condition	icomp == 0	6057:15:216136:216145	4818845	0	True				
ANR	4820155	EqualityExpression	icomp == 0		4818845	0		==			
ANR	4820156	Identifier	icomp		4818845	0					
ANR	4820157	PrimaryExpression	0		4818845	1					
ANR	4820158	CompoundStatement		219:27:7102:7102	4818845	1					
ANR	4820159	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6058:15:216165:216211	4818845	0	True				
ANR	4820160	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	0		+=			
ANR	4820161	Identifier	ioutbuf		4818845	0					
ANR	4820162	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	1					
ANR	4820163	Callee	upd_rle		4818845	0					
ANR	4820164	Identifier	upd_rle		4818845	0					
ANR	4820165	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4820166	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4820167	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4820168	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4820169	Identifier	upd		4818845	0					
ANR	4820170	Identifier	outbuf		4818845	1					
ANR	4820171	Identifier	ioutbuf		4818845	1					
ANR	4820172	Argument	NULL		4818845	1					
ANR	4820173	Identifier	NULL		4818845	0					
ANR	4820174	Argument	n		4818845	2					
ANR	4820175	Identifier	n		4818845	0					
ANR	4820176	ElseStatement	else		4818845	0					
ANR	4820177	CompoundStatement		221:19:7186:7186	4818845	0					
ANR	4820178	ExpressionStatement	-- icomp	6060:15:216249:216256	4818845	0	True				
ANR	4820179	UnaryExpression	-- icomp		4818845	0					
ANR	4820180	IncDec	--		4818845	0					
ANR	4820181	Identifier	icomp		4818845	1					
ANR	4820182	ExpressionStatement	iyofs = upd -> int_a [ IA_SCNOFS ] . data [ imask ]	6061:15:216273:216314	4818845	1	True				
ANR	4820183	AssignmentExpression	iyofs = upd -> int_a [ IA_SCNOFS ] . data [ imask ]		4818845	0		=			
ANR	4820184	Identifier	iyofs		4818845	0					
ANR	4820185	ArrayIndexing	upd -> int_a [ IA_SCNOFS ] . data [ imask ]		4818845	1					
ANR	4820186	MemberAccess	upd -> int_a [ IA_SCNOFS ] . data		4818845	0					
ANR	4820187	ArrayIndexing	upd -> int_a [ IA_SCNOFS ]		4818845	0					
ANR	4820188	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4820189	Identifier	upd		4818845	0					
ANR	4820190	Identifier	int_a		4818845	1					
ANR	4820191	Identifier	IA_SCNOFS		4818845	1					
ANR	4820192	Identifier	data		4818845	1					
ANR	4820193	Identifier	imask		4818845	1					
ANR	4820194	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"	6062:15:216331:216445	4818845	2	True				
ANR	4820195	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"		4818845	0		+=			
ANR	4820196	Identifier	ioutbuf		4818845	0					
ANR	4820197	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin , n )"		4818845	1					
ANR	4820198	Callee	upd_rle		4818845	0					
ANR	4820199	Identifier	upd_rle		4818845	0					
ANR	4820200	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4820201	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4820202	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4820203	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4820204	Identifier	upd		4818845	0					
ANR	4820205	Identifier	outbuf		4818845	1					
ANR	4820206	Identifier	ioutbuf		4818845	1					
ANR	4820207	Argument	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin		4818845	1					
ANR	4820208	AdditiveExpression	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes + xbegin		4818845	0		+			
ANR	4820209	MemberAccess	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes		4818845	0					
ANR	4820210	ArrayIndexing	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ]		4818845	0					
ANR	4820211	ArrayIndexing	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ]		4818845	0					
ANR	4820212	PtrMemberAccess	upd -> scnbuf		4818845	0					
ANR	4820213	Identifier	upd		4818845	0					
ANR	4820214	Identifier	scnbuf		4818845	1					
ANR	4820215	BitAndExpression	( y + iyofs ) & upd -> scnmsk		4818845	1		&			
ANR	4820216	AdditiveExpression	y + iyofs		4818845	0		+			
ANR	4820217	Identifier	y		4818845	0					
ANR	4820218	Identifier	iyofs		4818845	1					
ANR	4820219	PtrMemberAccess	upd -> scnmsk		4818845	1					
ANR	4820220	Identifier	upd		4818845	0					
ANR	4820221	Identifier	scnmsk		4818845	1					
ANR	4820222	Identifier	icomp		4818845	1					
ANR	4820223	Identifier	bytes		4818845	1					
ANR	4820224	Identifier	xbegin		4818845	1					
ANR	4820225	Argument	n		4818845	2					
ANR	4820226	Identifier	n		4818845	0					
ANR	4820227	ExpressionStatement	yinc += upd -> ints [ I_NYPASS ]	6064:15:216462:216487	4818845	3	True				
ANR	4820228	AssignmentExpression	yinc += upd -> ints [ I_NYPASS ]		4818845	0		+=			
ANR	4820229	Identifier	yinc		4818845	0					
ANR	4820230	ArrayIndexing	upd -> ints [ I_NYPASS ]		4818845	1					
ANR	4820231	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820232	Identifier	upd		4818845	0					
ANR	4820233	Identifier	ints		4818845	1					
ANR	4820234	Identifier	I_NYPASS		4818845	1					
ANR	4820235	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6066:12:216515:216548	4818845	4	True				
ANR	4820236	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4818845	0					
ANR	4820237	Callee	fwrite		4818845	0					
ANR	4820238	Identifier	fwrite		4818845	0					
ANR	4820239	ArgumentList	upd -> outbuf		4818845	1					
ANR	4820240	Argument	upd -> outbuf		4818845	0					
ANR	4820241	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4820242	Identifier	upd		4818845	0					
ANR	4820243	Identifier	outbuf		4818845	1					
ANR	4820244	Argument	1		4818845	1					
ANR	4820245	PrimaryExpression	1		4818845	0					
ANR	4820246	Argument	ioutbuf		4818845	2					
ANR	4820247	Identifier	ioutbuf		4818845	0					
ANR	4820248	Argument	out		4818845	3					
ANR	4820249	Identifier	out		4818845	0					
ANR	4820250	ExpressionStatement	ioutbuf = 0	6067:12:216562:216573	4818845	5	True				
ANR	4820251	AssignmentExpression	ioutbuf = 0		4818845	0		=			
ANR	4820252	Identifier	ioutbuf		4818845	0					
ANR	4820253	PrimaryExpression	0		4818845	1					
ANR	4820254	ExpressionStatement	irow ++	6068:12:216587:216593	4818845	6	True				
ANR	4820255	PostIncDecOperationExpression	irow ++		4818845	0					
ANR	4820256	Identifier	irow		4818845	0					
ANR	4820257	IncDec	++		4818845	1					
ANR	4820258	IfStatement	if ( upd -> ints [ I_NYPASS ] < upd -> ints [ I_PATRPT ] )		4818845	2					
ANR	4820259	Condition	upd -> ints [ I_NYPASS ] < upd -> ints [ I_PATRPT ]	6071:13:216620:216660	4818845	0	True				
ANR	4820260	RelationalExpression	upd -> ints [ I_NYPASS ] < upd -> ints [ I_PATRPT ]		4818845	0		<			
ANR	4820261	ArrayIndexing	upd -> ints [ I_NYPASS ]		4818845	0					
ANR	4820262	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820263	Identifier	upd		4818845	0					
ANR	4820264	Identifier	ints		4818845	1					
ANR	4820265	Identifier	I_NYPASS		4818845	1					
ANR	4820266	ArrayIndexing	upd -> ints [ I_PATRPT ]		4818845	1					
ANR	4820267	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820268	Identifier	upd		4818845	0					
ANR	4820269	Identifier	ints		4818845	1					
ANR	4820270	Identifier	I_PATRPT		4818845	1					
ANR	4820271	CompoundStatement		233:56:7617:7617	4818845	1					
ANR	4820272	ExpressionStatement	y += yinc	6072:12:216677:216684	4818845	0	True				
ANR	4820273	AssignmentExpression	y += yinc		4818845	0		+=			
ANR	4820274	Identifier	y		4818845	0					
ANR	4820275	Identifier	yinc		4818845	1					
ANR	4820276	IfStatement	if ( y > 0 )		4818845	1					
ANR	4820277	Condition	y > 0	6073:16:216702:216706	4818845	0	True				
ANR	4820278	RelationalExpression	y > 0		4818845	0		>			
ANR	4820279	Identifier	y		4818845	0					
ANR	4820280	PrimaryExpression	0		4818845	1					
ANR	4820281	ExpressionStatement	y -= upd -> ints [ I_NYPASS ]	6074:15:216724:216746	4818845	1	True				
ANR	4820282	AssignmentExpression	y -= upd -> ints [ I_NYPASS ]		4818845	0		-=			
ANR	4820283	Identifier	y		4818845	0					
ANR	4820284	ArrayIndexing	upd -> ints [ I_NYPASS ]		4818845	1					
ANR	4820285	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820286	Identifier	upd		4818845	0					
ANR	4820287	Identifier	ints		4818845	1					
ANR	4820288	Identifier	I_NYPASS		4818845	1					
ANR	4820289	ForStatement	for ( pin = pinbot ; pin < upd -> ints [ I_PINS2WRITE ] ; ++ pin )		4818845	15					
ANR	4820290	ForInit	pin = pinbot ;	6079:10:216859:216871	4818845	0	True				
ANR	4820291	AssignmentExpression	pin = pinbot		4818845	0		=			
ANR	4820292	Identifier	pin		4818845	0					
ANR	4820293	Identifier	pinbot		4818845	1					
ANR	4820294	Condition	pin < upd -> ints [ I_PINS2WRITE ]	6079:24:216873:216901	4818845	1	True				
ANR	4820295	RelationalExpression	pin < upd -> ints [ I_PINS2WRITE ]		4818845	0		<			
ANR	4820296	Identifier	pin		4818845	0					
ANR	4820297	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4818845	1					
ANR	4820298	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820299	Identifier	upd		4818845	0					
ANR	4820300	Identifier	ints		4818845	1					
ANR	4820301	Identifier	I_PINS2WRITE		4818845	1					
ANR	4820302	UnaryExpression	++ pin	6079:55:216904:216908	4818845	2	True				
ANR	4820303	IncDec	++		4818845	0					
ANR	4820304	Identifier	pin		4818845	1					
ANR	4820305	CompoundStatement		242:9:7876:7881	4818845	3					
ANR	4820306	IdentifierDeclStatement	int i ;	6080:9:216922:216927	4818845	0	True				
ANR	4820307	IdentifierDecl	i		4818845	0					
ANR	4820308	IdentifierDeclType	int		4818845	0					
ANR	4820309	Identifier	i		4818845	1					
ANR	4820310	ForStatement	for ( i = 0 ; i < upd -> ints [ I_PATRPT ] ; i ++ )		4818845	1					
ANR	4820311	ForInit	i = 0 ;	6081:13:216942:216946	4818845	0	True				
ANR	4820312	AssignmentExpression	i = 0		4818845	0		=			
ANR	4820313	Identifier	i		4818845	0					
ANR	4820314	PrimaryExpression	0		4818845	1					
ANR	4820315	Condition	i < upd -> ints [ I_PATRPT ]	6081:19:216948:216970	4818845	1	True				
ANR	4820316	RelationalExpression	i < upd -> ints [ I_PATRPT ]		4818845	0		<			
ANR	4820317	Identifier	i		4818845	0					
ANR	4820318	ArrayIndexing	upd -> ints [ I_PATRPT ]		4818845	1					
ANR	4820319	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820320	Identifier	upd		4818845	0					
ANR	4820321	Identifier	ints		4818845	1					
ANR	4820322	Identifier	I_PATRPT		4818845	1					
ANR	4820323	PostIncDecOperationExpression	i ++	6081:44:216973:216975	4818845	2	True				
ANR	4820324	Identifier	i		4818845	0					
ANR	4820325	IncDec	++		4818845	1					
ANR	4820326	CompoundStatement		243:48:7931:7931	4818845	3					
ANR	4820327	IfStatement	if ( irow >= upd -> ints [ I_ROWS ] )		4818845	0					
ANR	4820328	Condition	irow >= upd -> ints [ I_ROWS ]	6082:15:216994:217018	4818845	0	True				
ANR	4820329	RelationalExpression	irow >= upd -> ints [ I_ROWS ]		4818845	0		>=			
ANR	4820330	Identifier	irow		4818845	0					
ANR	4820331	ArrayIndexing	upd -> ints [ I_ROWS ]		4818845	1					
ANR	4820332	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820333	Identifier	upd		4818845	0					
ANR	4820334	Identifier	ints		4818845	1					
ANR	4820335	Identifier	I_ROWS		4818845	1					
ANR	4820336	BreakStatement	break ;	6082:42:217021:217026	4818845	1	True				
ANR	4820337	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6083:12:217040:217086	4818845	1	True				
ANR	4820338	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	0		+=			
ANR	4820339	Identifier	ioutbuf		4818845	0					
ANR	4820340	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	1					
ANR	4820341	Callee	upd_rle		4818845	0					
ANR	4820342	Identifier	upd_rle		4818845	0					
ANR	4820343	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4820344	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4820345	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4820346	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4820347	Identifier	upd		4818845	0					
ANR	4820348	Identifier	outbuf		4818845	1					
ANR	4820349	Identifier	ioutbuf		4818845	1					
ANR	4820350	Argument	NULL		4818845	1					
ANR	4820351	Identifier	NULL		4818845	0					
ANR	4820352	Argument	n		4818845	2					
ANR	4820353	Identifier	n		4818845	0					
ANR	4820354	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6084:12:217100:217133	4818845	2	True				
ANR	4820355	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4818845	0					
ANR	4820356	Callee	fwrite		4818845	0					
ANR	4820357	Identifier	fwrite		4818845	0					
ANR	4820358	ArgumentList	upd -> outbuf		4818845	1					
ANR	4820359	Argument	upd -> outbuf		4818845	0					
ANR	4820360	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4820361	Identifier	upd		4818845	0					
ANR	4820362	Identifier	outbuf		4818845	1					
ANR	4820363	Argument	1		4818845	1					
ANR	4820364	PrimaryExpression	1		4818845	0					
ANR	4820365	Argument	ioutbuf		4818845	2					
ANR	4820366	Identifier	ioutbuf		4818845	0					
ANR	4820367	Argument	out		4818845	3					
ANR	4820368	Identifier	out		4818845	0					
ANR	4820369	ExpressionStatement	ioutbuf = 0	6085:12:217147:217158	4818845	3	True				
ANR	4820370	AssignmentExpression	ioutbuf = 0		4818845	0		=			
ANR	4820371	Identifier	ioutbuf		4818845	0					
ANR	4820372	PrimaryExpression	0		4818845	1					
ANR	4820373	ExpressionStatement	irow ++	6086:12:217172:217178	4818845	4	True				
ANR	4820374	PostIncDecOperationExpression	irow ++		4818845	0					
ANR	4820375	Identifier	irow		4818845	0					
ANR	4820376	IncDec	++		4818845	1					
ANR	4820377	IfStatement	if ( irow < upd -> ints [ I_ROWS ] )		4818845	16					
ANR	4820378	Condition	irow < upd -> ints [ I_ROWS ]	6091:11:217266:217289	4818845	0	True				
ANR	4820379	RelationalExpression	irow < upd -> ints [ I_ROWS ]		4818845	0		<			
ANR	4820380	Identifier	irow		4818845	0					
ANR	4820381	ArrayIndexing	upd -> ints [ I_ROWS ]		4818845	1					
ANR	4820382	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820383	Identifier	upd		4818845	0					
ANR	4820384	Identifier	ints		4818845	1					
ANR	4820385	Identifier	I_ROWS		4818845	1					
ANR	4820386	CompoundStatement		253:37:8246:8246	4818845	1					
ANR	4820387	ForStatement	for ( ; irow < upd -> ints [ I_ROWS ] ; irow ++ )		4818845	0					
ANR	4820388	Condition	irow < upd -> ints [ I_ROWS ]	6092:16:217310:217333	4818845	0	True				
ANR	4820389	RelationalExpression	irow < upd -> ints [ I_ROWS ]		4818845	0		<			
ANR	4820390	Identifier	irow		4818845	0					
ANR	4820391	ArrayIndexing	upd -> ints [ I_ROWS ]		4818845	1					
ANR	4820392	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820393	Identifier	upd		4818845	0					
ANR	4820394	Identifier	ints		4818845	1					
ANR	4820395	Identifier	I_ROWS		4818845	1					
ANR	4820396	PostIncDecOperationExpression	irow ++	6092:42:217336:217341	4818845	1	True				
ANR	4820397	Identifier	irow		4818845	0					
ANR	4820398	IncDec	++		4818845	1					
ANR	4820399	CompoundStatement		254:49:8297:8297	4818845	2					
ANR	4820400	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6093:12:217357:217403	4818845	0	True				
ANR	4820401	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	0		+=			
ANR	4820402	Identifier	ioutbuf		4818845	0					
ANR	4820403	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4818845	1					
ANR	4820404	Callee	upd_rle		4818845	0					
ANR	4820405	Identifier	upd_rle		4818845	0					
ANR	4820406	ArgumentList	upd -> outbuf + ioutbuf		4818845	1					
ANR	4820407	Argument	upd -> outbuf + ioutbuf		4818845	0					
ANR	4820408	AdditiveExpression	upd -> outbuf + ioutbuf		4818845	0		+			
ANR	4820409	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4820410	Identifier	upd		4818845	0					
ANR	4820411	Identifier	outbuf		4818845	1					
ANR	4820412	Identifier	ioutbuf		4818845	1					
ANR	4820413	Argument	NULL		4818845	1					
ANR	4820414	Identifier	NULL		4818845	0					
ANR	4820415	Argument	n		4818845	2					
ANR	4820416	Identifier	n		4818845	0					
ANR	4820417	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	6094:12:217417:217450	4818845	1	True				
ANR	4820418	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4818845	0					
ANR	4820419	Callee	fwrite		4818845	0					
ANR	4820420	Identifier	fwrite		4818845	0					
ANR	4820421	ArgumentList	upd -> outbuf		4818845	1					
ANR	4820422	Argument	upd -> outbuf		4818845	0					
ANR	4820423	PtrMemberAccess	upd -> outbuf		4818845	0					
ANR	4820424	Identifier	upd		4818845	0					
ANR	4820425	Identifier	outbuf		4818845	1					
ANR	4820426	Argument	1		4818845	1					
ANR	4820427	PrimaryExpression	1		4818845	0					
ANR	4820428	Argument	ioutbuf		4818845	2					
ANR	4820429	Identifier	ioutbuf		4818845	0					
ANR	4820430	Argument	out		4818845	3					
ANR	4820431	Identifier	out		4818845	0					
ANR	4820432	ExpressionStatement	ioutbuf = 0	6095:12:217464:217475	4818845	2	True				
ANR	4820433	AssignmentExpression	ioutbuf = 0		4818845	0		=			
ANR	4820434	Identifier	ioutbuf		4818845	0					
ANR	4820435	PrimaryExpression	0		4818845	1					
ANR	4820436	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		4818845	11					
ANR	4820437	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	6102:6:217591:217621	4818845	0	True				
ANR	4820438	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		4818845	0		<			
ANR	4820439	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4820440	Identifier	upd		4818845	0					
ANR	4820441	Identifier	yscan		4818845	1					
ANR	4820442	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4818845	1					
ANR	4820443	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820444	Identifier	upd		4818845	0					
ANR	4820445	Identifier	ints		4818845	1					
ANR	4820446	Identifier	I_BEG_Y		4818845	1					
ANR	4820447	CompoundStatement		264:39:8578:8578	4818845	1					
ANR	4820448	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]	6103:6:217632:217686	4818845	0	True				
ANR	4820449	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		4818845	0		+=			
ANR	4820450	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4820451	Identifier	upd		4818845	0					
ANR	4820452	Identifier	yscan		4818845	1					
ANR	4820453	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		4818845	1					
ANR	4820454	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		4818845	0					
ANR	4820455	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4818845	0					
ANR	4820456	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4820457	Identifier	upd		4818845	0					
ANR	4820458	Identifier	int_a		4818845	1					
ANR	4820459	Identifier	IA_BEG_DY		4818845	1					
ANR	4820460	Identifier	data		4818845	1					
ANR	4820461	PostIncDecOperationExpression	upd -> ipass ++		4818845	1					
ANR	4820462	PtrMemberAccess	upd -> ipass		4818845	0					
ANR	4820463	Identifier	upd		4818845	0					
ANR	4820464	Identifier	ipass		4818845	1					
ANR	4820465	IncDec	++		4818845	1					
ANR	4820466	IfStatement	if ( upd -> ints [ I_BEG_Y ] <= upd -> yscan )		4818845	1					
ANR	4820467	Condition	upd -> ints [ I_BEG_Y ] <= upd -> yscan	6104:14:217702:217733	4818845	0	True				
ANR	4820468	RelationalExpression	upd -> ints [ I_BEG_Y ] <= upd -> yscan		4818845	0		<=			
ANR	4820469	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4818845	0					
ANR	4820470	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820471	Identifier	upd		4818845	0					
ANR	4820472	Identifier	ints		4818845	1					
ANR	4820473	Identifier	I_BEG_Y		4818845	1					
ANR	4820474	PtrMemberAccess	upd -> yscan		4818845	1					
ANR	4820475	Identifier	upd		4818845	0					
ANR	4820476	Identifier	yscan		4818845	1					
ANR	4820477	ExpressionStatement	upd -> ipass = 0	6104:48:217736:217750	4818845	1	True				
ANR	4820478	AssignmentExpression	upd -> ipass = 0		4818845	0		=			
ANR	4820479	PtrMemberAccess	upd -> ipass		4818845	0					
ANR	4820480	Identifier	upd		4818845	0					
ANR	4820481	Identifier	ipass		4818845	1					
ANR	4820482	PrimaryExpression	0		4818845	1					
ANR	4820483	ElseStatement	else		4818845	0					
ANR	4820484	IfStatement	if ( upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass )		4818845	0					
ANR	4820485	Condition	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass	6105:14:217766:217805	4818845	0	True				
ANR	4820486	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass		4818845	0		<=			
ANR	4820487	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4818845	0					
ANR	4820488	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4818845	0					
ANR	4820489	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4820490	Identifier	upd		4818845	0					
ANR	4820491	Identifier	int_a		4818845	1					
ANR	4820492	Identifier	IA_BEG_DY		4818845	1					
ANR	4820493	Identifier	size		4818845	1					
ANR	4820494	PtrMemberAccess	upd -> ipass		4818845	1					
ANR	4820495	Identifier	upd		4818845	0					
ANR	4820496	Identifier	ipass		4818845	1					
ANR	4820497	ExpressionStatement	upd -> ipass = 0	6105:56:217808:217822	4818845	1	True				
ANR	4820498	AssignmentExpression	upd -> ipass = 0		4818845	0		=			
ANR	4820499	PtrMemberAccess	upd -> ipass		4818845	0					
ANR	4820500	Identifier	upd		4818845	0					
ANR	4820501	Identifier	ipass		4818845	1					
ANR	4820502	PrimaryExpression	0		4818845	1					
ANR	4820503	ElseStatement	else		4818845	0					
ANR	4820504	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4818845	0					
ANR	4820505	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6106:13:217837:217868	4818845	0	True				
ANR	4820506	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4818845	0		>=			
ANR	4820507	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4820508	Identifier	upd		4818845	0					
ANR	4820509	Identifier	yscan		4818845	1					
ANR	4820510	ArrayIndexing	upd -> ints [ I_END_Y ]		4818845	1					
ANR	4820511	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820512	Identifier	upd		4818845	0					
ANR	4820513	Identifier	ints		4818845	1					
ANR	4820514	Identifier	I_END_Y		4818845	1					
ANR	4820515	CompoundStatement		268:47:8825:8825	4818845	1					
ANR	4820516	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]	6107:6:217879:217933	4818845	0	True				
ANR	4820517	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		4818845	0		+=			
ANR	4820518	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4820519	Identifier	upd		4818845	0					
ANR	4820520	Identifier	yscan		4818845	1					
ANR	4820521	ArrayIndexing	upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		4818845	1					
ANR	4820522	MemberAccess	upd -> int_a [ IA_END_DY ] . data		4818845	0					
ANR	4820523	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4818845	0					
ANR	4820524	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4820525	Identifier	upd		4818845	0					
ANR	4820526	Identifier	int_a		4818845	1					
ANR	4820527	Identifier	IA_END_DY		4818845	1					
ANR	4820528	Identifier	data		4818845	1					
ANR	4820529	PostIncDecOperationExpression	upd -> ipass ++		4818845	1					
ANR	4820530	PtrMemberAccess	upd -> ipass		4818845	0					
ANR	4820531	Identifier	upd		4818845	0					
ANR	4820532	Identifier	ipass		4818845	1					
ANR	4820533	IncDec	++		4818845	1					
ANR	4820534	IfStatement	if ( upd -> int_a [ IA_END_DY ] . size <= upd -> ipass )		4818845	1					
ANR	4820535	Condition	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass	6108:9:217944:217983	4818845	0	True				
ANR	4820536	RelationalExpression	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass		4818845	0		<=			
ANR	4820537	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4818845	0					
ANR	4820538	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4818845	0					
ANR	4820539	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4820540	Identifier	upd		4818845	0					
ANR	4820541	Identifier	int_a		4818845	1					
ANR	4820542	Identifier	IA_END_DY		4818845	1					
ANR	4820543	Identifier	size		4818845	1					
ANR	4820544	PtrMemberAccess	upd -> ipass		4818845	1					
ANR	4820545	Identifier	upd		4818845	0					
ANR	4820546	Identifier	ipass		4818845	1					
ANR	4820547	ExpressionStatement	upd -> ipass = 0	6108:51:217986:218000	4818845	1	True				
ANR	4820548	AssignmentExpression	upd -> ipass = 0		4818845	0		=			
ANR	4820549	PtrMemberAccess	upd -> ipass		4818845	0					
ANR	4820550	Identifier	upd		4818845	0					
ANR	4820551	Identifier	ipass		4818845	1					
ANR	4820552	PrimaryExpression	0		4818845	1					
ANR	4820553	ElseStatement	else		4818845	0					
ANR	4820554	CompoundStatement		271:10:8966:8966	4818845	0					
ANR	4820555	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]	6110:6:218020:218074	4818845	0	True				
ANR	4820556	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		4818845	0		+=			
ANR	4820557	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4820558	Identifier	upd		4818845	0					
ANR	4820559	Identifier	yscan		4818845	1					
ANR	4820560	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		4818845	1					
ANR	4820561	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		4818845	0					
ANR	4820562	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4818845	0					
ANR	4820563	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4820564	Identifier	upd		4818845	0					
ANR	4820565	Identifier	int_a		4818845	1					
ANR	4820566	Identifier	IA_STD_DY		4818845	1					
ANR	4820567	Identifier	data		4818845	1					
ANR	4820568	PostIncDecOperationExpression	upd -> ipass ++		4818845	1					
ANR	4820569	PtrMemberAccess	upd -> ipass		4818845	0					
ANR	4820570	Identifier	upd		4818845	0					
ANR	4820571	Identifier	ipass		4818845	1					
ANR	4820572	IncDec	++		4818845	1					
ANR	4820573	IfStatement	if ( upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass )		4818845	1					
ANR	4820574	Condition	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass	6111:9:218085:218124	4818845	0	True				
ANR	4820575	RelationalExpression	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass		4818845	0		<=			
ANR	4820576	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4818845	0					
ANR	4820577	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4818845	0					
ANR	4820578	PtrMemberAccess	upd -> int_a		4818845	0					
ANR	4820579	Identifier	upd		4818845	0					
ANR	4820580	Identifier	int_a		4818845	1					
ANR	4820581	Identifier	IA_STD_DY		4818845	1					
ANR	4820582	Identifier	size		4818845	1					
ANR	4820583	PtrMemberAccess	upd -> ipass		4818845	1					
ANR	4820584	Identifier	upd		4818845	0					
ANR	4820585	Identifier	ipass		4818845	1					
ANR	4820586	ExpressionStatement	upd -> ipass = 0	6111:51:218127:218141	4818845	1	True				
ANR	4820587	AssignmentExpression	upd -> ipass = 0		4818845	0		=			
ANR	4820588	PtrMemberAccess	upd -> ipass		4818845	0					
ANR	4820589	Identifier	upd		4818845	0					
ANR	4820590	Identifier	ipass		4818845	1					
ANR	4820591	PrimaryExpression	0		4818845	1					
ANR	4820592	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4818845	2					
ANR	4820593	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6112:9:218152:218183	4818845	0	True				
ANR	4820594	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4818845	0		>=			
ANR	4820595	PtrMemberAccess	upd -> yscan		4818845	0					
ANR	4820596	Identifier	upd		4818845	0					
ANR	4820597	Identifier	yscan		4818845	1					
ANR	4820598	ArrayIndexing	upd -> ints [ I_END_Y ]		4818845	1					
ANR	4820599	PtrMemberAccess	upd -> ints		4818845	0					
ANR	4820600	Identifier	upd		4818845	0					
ANR	4820601	Identifier	ints		4818845	1					
ANR	4820602	Identifier	I_END_Y		4818845	1					
ANR	4820603	ExpressionStatement	upd -> ipass = 0	6112:51:218194:218208	4818845	1	True				
ANR	4820604	AssignmentExpression	upd -> ipass = 0		4818845	0		=			
ANR	4820605	PtrMemberAccess	upd -> ipass		4818845	0					
ANR	4820606	Identifier	upd		4818845	0					
ANR	4820607	Identifier	ipass		4818845	1					
ANR	4820608	PrimaryExpression	0		4818845	1					
ANR	4820609	ReturnStatement	return 0 ;	6115:3:218219:218227	4818845	12	True				
ANR	4820610	PrimaryExpression	0		4818845	0					
ANR	4820611	ReturnType	static int		4818845	1					
ANR	4820612	Identifier	upd_wrtescnm		4818845	2					
ANR	4820613	ParameterList	"upd_p upd , FILE * out"		4818845	3					
ANR	4820614	Parameter	upd_p upd	5838:13:209023:209031	4818845	0	True				
ANR	4820615	ParameterType	upd_p		4818845	0					
ANR	4820616	Identifier	upd		4818845	1					
ANR	4820617	Parameter	FILE * out	5838:24:209034:209042	4818845	1	True				
ANR	4820618	ParameterType	FILE *		4818845	0					
ANR	4820619	Identifier	out		4818845	1					
ANR	4820620	CFGEntryNode	ENTRY		4818845		True				
ANR	4820621	CFGExitNode	EXIT		4818845		True				
ANR	4820622	Symbol	I_PINS2WRITE		4818845						
ANR	4820623	Symbol	* upd -> int_a		4818845						
ANR	4820624	Symbol	* x		4818845						
ANR	4820625	Symbol	* y		4818845						
ANR	4820626	Symbol	* imask		4818845						
ANR	4820627	Symbol	* * IA_STD_DY		4818845						
ANR	4820628	Symbol	* I_YSTEP		4818845						
ANR	4820629	Symbol	pinbot		4818845						
ANR	4820630	Symbol	upd -> int_a [ IA_STD_DY ] . data		4818845						
ANR	4820631	Symbol	icomp		4818845						
ANR	4820632	Symbol	upd -> yscan		4818845						
ANR	4820633	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		4818845						
ANR	4820634	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4818845						
ANR	4820635	Symbol	* scan		4818845						
ANR	4820636	Symbol	* upd -> int_a [ IA_ROWMASK ] . data		4818845						
ANR	4820637	Symbol	upd -> nbytes		4818845						
ANR	4820638	Symbol	upd -> int_a [ IA_SCNOFS ] . data		4818845						
ANR	4820639	Symbol	* I_PATRPT		4818845						
ANR	4820640	Symbol	* * iyofs		4818845						
ANR	4820641	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		4818845						
ANR	4820642	Symbol	IA_ROWMASK		4818845						
ANR	4820643	Symbol	upd -> int_a [ IA_BEG_DY ] . data		4818845						
ANR	4820644	Symbol	* upd -> scnbuf		4818845						
ANR	4820645	Symbol	upd -> string_a [ SA_SETCOMP ] . data		4818845						
ANR	4820646	Symbol	upd		4818845						
ANR	4820647	Symbol	* SA_WRITECOMP		4818845						
ANR	4820648	Symbol	* I_NYPASS		4818845						
ANR	4820649	Symbol	* * SA_SETCOMP		4818845						
ANR	4820650	Symbol	* IA_ROWMASK		4818845						
ANR	4820651	Symbol	imask		4818845						
ANR	4820652	Symbol	* upd -> int_a [ IA_SCNOFS ] . data		4818845						
ANR	4820653	Symbol	B_YABS		4818845						
ANR	4820654	Symbol	IA_SCNOFS		4818845						
ANR	4820655	Symbol	* IA_BEGBOT		4818845						
ANR	4820656	Symbol	* I_BEG_Y		4818845						
ANR	4820657	Symbol	* upd -> ipass		4818845						
ANR	4820658	Symbol	* upd -> outbuf		4818845						
ANR	4820659	Symbol	scan		4818845						
ANR	4820660	Symbol	upd -> strings		4818845						
ANR	4820661	Symbol	* * IA_BEGBOT		4818845						
ANR	4820662	Symbol	iyofs		4818845						
ANR	4820663	Symbol	upd -> int_a [ IA_STD_DY ] . size		4818845						
ANR	4820664	Symbol	I_BEG_Y		4818845						
ANR	4820665	Symbol	out		4818845						
ANR	4820666	Symbol	upd -> flags		4818845						
ANR	4820667	Symbol	upd_rle		4818845						
ANR	4820668	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		4818845						
ANR	4820669	Symbol	* * y		4818845						
ANR	4820670	Symbol	* upd		4818845						
ANR	4820671	Symbol	* S_XMOVE		4818845						
ANR	4820672	Symbol	xend		4818845						
ANR	4820673	Symbol	obytes		4818845						
ANR	4820674	Symbol	* upd -> scnmsk		4818845						
ANR	4820675	Symbol	upd -> ocomp		4818845						
ANR	4820676	Symbol	* upd -> strings		4818845						
ANR	4820677	Symbol	* I_XOFS		4818845						
ANR	4820678	Symbol	* upd -> int_a [ IA_END_DY ] . data		4818845						
ANR	4820679	Symbol	upd -> strings [ S_YMOVE ] . size		4818845						
ANR	4820680	Symbol	* S_XSTEP		4818845						
ANR	4820681	Symbol	* IA_SCNOFS		4818845						
ANR	4820682	Symbol	IA_BEGBOT		4818845						
ANR	4820683	Symbol	upd -> int_a [ IA_END_DY ] . data		4818845						
ANR	4820684	Symbol	i		4818845						
ANR	4820685	Symbol	xbegin		4818845						
ANR	4820686	Symbol	I_XSTEP		4818845						
ANR	4820687	Symbol	* * upd -> scnbuf		4818845						
ANR	4820688	Symbol	n		4818845						
ANR	4820689	Symbol	* I_ROWS		4818845						
ANR	4820690	Symbol	* * upd -> int_a		4818845						
ANR	4820691	Symbol	I_YOFS		4818845						
ANR	4820692	Symbol	upd -> yprinter		4818845						
ANR	4820693	Symbol	ioutbuf		4818845						
ANR	4820694	Symbol	upd -> scnbuf [ ( y + iyofs ) & upd -> scnmsk ] [ icomp ] . bytes		4818845						
ANR	4820695	Symbol	S_YMOVE		4818845						
ANR	4820696	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		4818845						
ANR	4820697	Symbol	S_YSTEP		4818845						
ANR	4820698	Symbol	x		4818845						
ANR	4820699	Symbol	y		4818845						
ANR	4820700	Symbol	* I_END_Y		4818845						
ANR	4820701	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4818845						
ANR	4820702	Symbol	* * upd		4818845						
ANR	4820703	Symbol	* * upd -> scnmsk		4818845						
ANR	4820704	Symbol	S_XMOVE		4818845						
ANR	4820705	Symbol	* upd -> string_a		4818845						
ANR	4820706	Symbol	* IA_BEG_DY		4818845						
ANR	4820707	Symbol	SA_SETCOMP		4818845						
ANR	4820708	Symbol	* * IA_ENDTOP		4818845						
ANR	4820709	Symbol	upd -> icomp		4818845						
ANR	4820710	Symbol	* * IA_END_DY		4818845						
ANR	4820711	Symbol	upd -> ipass		4818845						
ANR	4820712	Symbol	upd -> strings [ S_YSTEP ] . size		4818845						
ANR	4820713	Symbol	* SA_SETCOMP		4818845						
ANR	4820714	Symbol	upd -> strings [ S_XSTEP ] . data		4818845						
ANR	4820715	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		4818845						
ANR	4820716	Symbol	upd -> strings [ S_XMOVE ] . data		4818845						
ANR	4820717	Symbol	upd -> int_a		4818845						
ANR	4820718	Symbol	pin		4818845						
ANR	4820719	Symbol	* I_BEGSKIP		4818845						
ANR	4820720	Symbol	* I_XSTEP		4818845						
ANR	4820721	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4818845						
ANR	4820722	Symbol	upd -> int_a [ IA_ENDTOP ] . data		4818845						
ANR	4820723	Symbol	NULL		4818845						
ANR	4820724	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		4818845						
ANR	4820725	Symbol	SA_WRITECOMP		4818845						
ANR	4820726	Symbol	upd -> xprinter		4818845						
ANR	4820727	Symbol	* * IA_ROWMASK		4818845						
ANR	4820728	Symbol	* iyofs		4818845						
ANR	4820729	Symbol	pintop		4818845						
ANR	4820730	Symbol	upd -> ints		4818845						
ANR	4820731	Symbol	masklen		4818845						
ANR	4820732	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4818845						
ANR	4820733	Symbol	* * IA_SCNOFS		4818845						
ANR	4820734	Symbol	upd -> strings [ S_XSTEP ] . size		4818845						
ANR	4820735	Symbol	upd -> strings [ S_YSTEP ] . data		4818845						
ANR	4820736	Symbol	I_PATRPT		4818845						
ANR	4820737	Symbol	scan [ icomp ] . bytes		4818845						
ANR	4820738	Symbol	I_XOFS		4818845						
ANR	4820739	Symbol	upd -> int_a [ IA_ROWMASK ] . data		4818845						
ANR	4820740	Symbol	I_BEGSKIP		4818845						
ANR	4820741	Symbol	upd -> int_a [ IA_END_DY ] . size		4818845						
ANR	4820742	Symbol	* obytes		4818845						
ANR	4820743	Symbol	B_XABS		4818845						
ANR	4820744	Symbol	* icomp		4818845						
ANR	4820745	Symbol	upd -> int_a [ IA_BEG_DY ] . size		4818845						
ANR	4820746	Symbol	* IA_ENDTOP		4818845						
ANR	4820747	Symbol	upd -> strings [ S_YMOVE ] . data		4818845						
ANR	4820748	Symbol	* IA_END_DY		4818845						
ANR	4820749	Symbol	* IA_STD_DY		4818845						
ANR	4820750	Symbol	I_NYPASS		4818845						
ANR	4820751	Symbol	* * upd -> string_a		4818845						
ANR	4820752	Symbol	IA_STD_DY		4818845						
ANR	4820753	Symbol	ybegin		4818845						
ANR	4820754	Symbol	* * SA_WRITECOMP		4818845						
ANR	4820755	Symbol	irow		4818845						
ANR	4820756	Symbol	* I_YOFS		4818845						
ANR	4820757	Symbol	* S_YMOVE		4818845						
ANR	4820758	Symbol	upd -> scnmsk		4818845						
ANR	4820759	Symbol	* * * upd		4818845						
ANR	4820760	Symbol	upd -> strings [ S_XMOVE ] . size		4818845						
ANR	4820761	Symbol	IA_ENDTOP		4818845						
ANR	4820762	Symbol	IA_END_DY		4818845						
ANR	4820763	Symbol	I_END_Y		4818845						
ANR	4820764	Symbol	* S_YSTEP		4818845						
ANR	4820765	Symbol	upd -> string_a		4818845						
ANR	4820766	Symbol	* upd -> ints		4818845						
ANR	4820767	Symbol	* I_PINS2WRITE		4818845						
ANR	4820768	Symbol	upd -> scnbuf		4818845						
ANR	4820769	Symbol	upd -> string_a [ SA_SETCOMP ] . size		4818845						
ANR	4820770	Symbol	S_XSTEP		4818845						
ANR	4820771	Symbol	yend		4818845						
ANR	4820772	Symbol	IA_BEG_DY		4818845						
ANR	4820773	Symbol	* upd -> int_a [ IA_STD_DY ] . data		4818845						
ANR	4820774	Symbol	upd -> outbuf		4818845						
ANR	4820775	Symbol	upd -> int_a [ IA_BEGBOT ] . data		4818845						
ANR	4820776	Symbol	I_ROWS		4818845						
ANR	4820777	Symbol	yinc		4818845						
ANR	4820778	Symbol	* * IA_BEG_DY		4818845						
ANR	4820779	Symbol	I_YSTEP		4818845						
ANR	4820780	Function	upd_wrtescp2x	6122:0:218455:227225							
ANR	4820781	FunctionDef	"upd_wrtescp2x (upd_p upd , FILE * out)"		4820780	0					
ANR	4820782	CompoundStatement		6124:0:218502:227225	4820780	0					
ANR	4820783	IdentifierDeclStatement	"int pinbot , pin , pintop , xbegin , x , xend , icomp , ybegin , yend , y , ioutbuf , n , ixpass ;"	6125:3:218507:218580	4820780	0	True				
ANR	4820784	IdentifierDecl	pinbot		4820780	0					
ANR	4820785	IdentifierDeclType	int		4820780	0					
ANR	4820786	Identifier	pinbot		4820780	1					
ANR	4820787	IdentifierDecl	pin		4820780	1					
ANR	4820788	IdentifierDeclType	int		4820780	0					
ANR	4820789	Identifier	pin		4820780	1					
ANR	4820790	IdentifierDecl	pintop		4820780	2					
ANR	4820791	IdentifierDeclType	int		4820780	0					
ANR	4820792	Identifier	pintop		4820780	1					
ANR	4820793	IdentifierDecl	xbegin		4820780	3					
ANR	4820794	IdentifierDeclType	int		4820780	0					
ANR	4820795	Identifier	xbegin		4820780	1					
ANR	4820796	IdentifierDecl	x		4820780	4					
ANR	4820797	IdentifierDeclType	int		4820780	0					
ANR	4820798	Identifier	x		4820780	1					
ANR	4820799	IdentifierDecl	xend		4820780	5					
ANR	4820800	IdentifierDeclType	int		4820780	0					
ANR	4820801	Identifier	xend		4820780	1					
ANR	4820802	IdentifierDecl	icomp		4820780	6					
ANR	4820803	IdentifierDeclType	int		4820780	0					
ANR	4820804	Identifier	icomp		4820780	1					
ANR	4820805	IdentifierDecl	ybegin		4820780	7					
ANR	4820806	IdentifierDeclType	int		4820780	0					
ANR	4820807	Identifier	ybegin		4820780	1					
ANR	4820808	IdentifierDecl	yend		4820780	8					
ANR	4820809	IdentifierDeclType	int		4820780	0					
ANR	4820810	Identifier	yend		4820780	1					
ANR	4820811	IdentifierDecl	y		4820780	9					
ANR	4820812	IdentifierDeclType	int		4820780	0					
ANR	4820813	Identifier	y		4820780	1					
ANR	4820814	IdentifierDecl	ioutbuf		4820780	10					
ANR	4820815	IdentifierDeclType	int		4820780	0					
ANR	4820816	Identifier	ioutbuf		4820780	1					
ANR	4820817	IdentifierDecl	n		4820780	11					
ANR	4820818	IdentifierDeclType	int		4820780	0					
ANR	4820819	Identifier	n		4820780	1					
ANR	4820820	IdentifierDecl	ixpass		4820780	12					
ANR	4820821	IdentifierDeclType	int		4820780	0					
ANR	4820822	Identifier	ixpass		4820780	1					
ANR	4820823	IdentifierDeclStatement	"byte * obytes , bit ;"	6126:3:218585:218601	4820780	1	True				
ANR	4820824	IdentifierDecl	* obytes		4820780	0					
ANR	4820825	IdentifierDeclType	byte *		4820780	0					
ANR	4820826	Identifier	obytes		4820780	1					
ANR	4820827	IdentifierDecl	bit		4820780	1					
ANR	4820828	IdentifierDeclType	byte		4820780	0					
ANR	4820829	Identifier	bit		4820780	1					
ANR	4820830	IdentifierDeclStatement	updscan_p scan ;	6127:3:218606:218620	4820780	2	True				
ANR	4820831	IdentifierDecl	scan		4820780	0					
ANR	4820832	IdentifierDeclType	updscan_p		4820780	0					
ANR	4820833	Identifier	scan		4820780	1					
ANR	4820834	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		4820780	3					
ANR	4820835	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	6131:6:218675:218705	4820780	0	True				
ANR	4820836	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		4820780	0		<			
ANR	4820837	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4820838	Identifier	upd		4820780	0					
ANR	4820839	Identifier	yscan		4820780	1					
ANR	4820840	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4820780	1					
ANR	4820841	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4820842	Identifier	upd		4820780	0					
ANR	4820843	Identifier	ints		4820780	1					
ANR	4820844	Identifier	I_BEG_Y		4820780	1					
ANR	4820845	CompoundStatement		8:39:205:205	4820780	1					
ANR	4820846	ExpressionStatement	ixpass = upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]	6132:6:218716:218763	4820780	0	True				
ANR	4820847	AssignmentExpression	ixpass = upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]		4820780	0		=			
ANR	4820848	Identifier	ixpass		4820780	0					
ANR	4820849	ArrayIndexing	upd -> int_a [ IA_BEG_IX ] . data [ upd -> ipass ]		4820780	1					
ANR	4820850	MemberAccess	upd -> int_a [ IA_BEG_IX ] . data		4820780	0					
ANR	4820851	ArrayIndexing	upd -> int_a [ IA_BEG_IX ]		4820780	0					
ANR	4820852	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4820853	Identifier	upd		4820780	0					
ANR	4820854	Identifier	int_a		4820780	1					
ANR	4820855	Identifier	IA_BEG_IX		4820780	1					
ANR	4820856	Identifier	data		4820780	1					
ANR	4820857	PtrMemberAccess	upd -> ipass		4820780	1					
ANR	4820858	Identifier	upd		4820780	0					
ANR	4820859	Identifier	ipass		4820780	1					
ANR	4820860	ExpressionStatement	pintop = 0	6133:6:218771:218781	4820780	1	True				
ANR	4820861	AssignmentExpression	pintop = 0		4820780	0		=			
ANR	4820862	Identifier	pintop		4820780	0					
ANR	4820863	PrimaryExpression	0		4820780	1					
ANR	4820864	ExpressionStatement	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]	6134:6:218789:218836	4820780	2	True				
ANR	4820865	AssignmentExpression	pinbot = upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		4820780	0		=			
ANR	4820866	Identifier	pinbot		4820780	0					
ANR	4820867	ArrayIndexing	upd -> int_a [ IA_BEGBOT ] . data [ upd -> ipass ]		4820780	1					
ANR	4820868	MemberAccess	upd -> int_a [ IA_BEGBOT ] . data		4820780	0					
ANR	4820869	ArrayIndexing	upd -> int_a [ IA_BEGBOT ]		4820780	0					
ANR	4820870	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4820871	Identifier	upd		4820780	0					
ANR	4820872	Identifier	int_a		4820780	1					
ANR	4820873	Identifier	IA_BEGBOT		4820780	1					
ANR	4820874	Identifier	data		4820780	1					
ANR	4820875	PtrMemberAccess	upd -> ipass		4820780	1					
ANR	4820876	Identifier	upd		4820780	0					
ANR	4820877	Identifier	ipass		4820780	1					
ANR	4820878	ElseStatement	else		4820780	0					
ANR	4820879	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4820780	0					
ANR	4820880	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6135:13:218851:218882	4820780	0	True				
ANR	4820881	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4820780	0		>=			
ANR	4820882	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4820883	Identifier	upd		4820780	0					
ANR	4820884	Identifier	yscan		4820780	1					
ANR	4820885	ArrayIndexing	upd -> ints [ I_END_Y ]		4820780	1					
ANR	4820886	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4820887	Identifier	upd		4820780	0					
ANR	4820888	Identifier	ints		4820780	1					
ANR	4820889	Identifier	I_END_Y		4820780	1					
ANR	4820890	CompoundStatement		12:47:382:382	4820780	1					
ANR	4820891	ExpressionStatement	ixpass = upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]	6136:6:218893:218940	4820780	0	True				
ANR	4820892	AssignmentExpression	ixpass = upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]		4820780	0		=			
ANR	4820893	Identifier	ixpass		4820780	0					
ANR	4820894	ArrayIndexing	upd -> int_a [ IA_END_IX ] . data [ upd -> ipass ]		4820780	1					
ANR	4820895	MemberAccess	upd -> int_a [ IA_END_IX ] . data		4820780	0					
ANR	4820896	ArrayIndexing	upd -> int_a [ IA_END_IX ]		4820780	0					
ANR	4820897	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4820898	Identifier	upd		4820780	0					
ANR	4820899	Identifier	int_a		4820780	1					
ANR	4820900	Identifier	IA_END_IX		4820780	1					
ANR	4820901	Identifier	data		4820780	1					
ANR	4820902	PtrMemberAccess	upd -> ipass		4820780	1					
ANR	4820903	Identifier	upd		4820780	0					
ANR	4820904	Identifier	ipass		4820780	1					
ANR	4820905	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	6137:6:218948:218980	4820780	1	True				
ANR	4820906	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		4820780	0		=			
ANR	4820907	Identifier	pinbot		4820780	0					
ANR	4820908	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4820780	1					
ANR	4820909	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4820910	Identifier	upd		4820780	0					
ANR	4820911	Identifier	ints		4820780	1					
ANR	4820912	Identifier	I_PINS2WRITE		4820780	1					
ANR	4820913	ExpressionStatement	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]	6138:6:218988:219044	4820780	2	True				
ANR	4820914	AssignmentExpression	pintop = pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4820780	0		=			
ANR	4820915	Identifier	pintop		4820780	0					
ANR	4820916	AdditiveExpression	pinbot - upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4820780	1		-			
ANR	4820917	Identifier	pinbot		4820780	0					
ANR	4820918	ArrayIndexing	upd -> int_a [ IA_ENDTOP ] . data [ upd -> ipass ]		4820780	1					
ANR	4820919	MemberAccess	upd -> int_a [ IA_ENDTOP ] . data		4820780	0					
ANR	4820920	ArrayIndexing	upd -> int_a [ IA_ENDTOP ]		4820780	0					
ANR	4820921	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4820922	Identifier	upd		4820780	0					
ANR	4820923	Identifier	int_a		4820780	1					
ANR	4820924	Identifier	IA_ENDTOP		4820780	1					
ANR	4820925	Identifier	data		4820780	1					
ANR	4820926	PtrMemberAccess	upd -> ipass		4820780	1					
ANR	4820927	Identifier	upd		4820780	0					
ANR	4820928	Identifier	ipass		4820780	1					
ANR	4820929	ElseStatement	else		4820780	0					
ANR	4820930	CompoundStatement		16:10:553:553	4820780	0					
ANR	4820931	ExpressionStatement	ixpass = upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]	6140:6:219064:219111	4820780	0	True				
ANR	4820932	AssignmentExpression	ixpass = upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]		4820780	0		=			
ANR	4820933	Identifier	ixpass		4820780	0					
ANR	4820934	ArrayIndexing	upd -> int_a [ IA_STD_IX ] . data [ upd -> ipass ]		4820780	1					
ANR	4820935	MemberAccess	upd -> int_a [ IA_STD_IX ] . data		4820780	0					
ANR	4820936	ArrayIndexing	upd -> int_a [ IA_STD_IX ]		4820780	0					
ANR	4820937	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4820938	Identifier	upd		4820780	0					
ANR	4820939	Identifier	int_a		4820780	1					
ANR	4820940	Identifier	IA_STD_IX		4820780	1					
ANR	4820941	Identifier	data		4820780	1					
ANR	4820942	PtrMemberAccess	upd -> ipass		4820780	1					
ANR	4820943	Identifier	upd		4820780	0					
ANR	4820944	Identifier	ipass		4820780	1					
ANR	4820945	ExpressionStatement	pintop = 0	6141:6:219119:219129	4820780	1	True				
ANR	4820946	AssignmentExpression	pintop = 0		4820780	0		=			
ANR	4820947	Identifier	pintop		4820780	0					
ANR	4820948	PrimaryExpression	0		4820780	1					
ANR	4820949	ExpressionStatement	pinbot = upd -> ints [ I_PINS2WRITE ]	6142:6:219137:219169	4820780	2	True				
ANR	4820950	AssignmentExpression	pinbot = upd -> ints [ I_PINS2WRITE ]		4820780	0		=			
ANR	4820951	Identifier	pinbot		4820780	0					
ANR	4820952	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4820780	1					
ANR	4820953	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4820954	Identifier	upd		4820780	0					
ANR	4820955	Identifier	ints		4820780	1					
ANR	4820956	Identifier	I_PINS2WRITE		4820780	1					
ANR	4820957	ExpressionStatement	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	6145:3:219180:219254	4820780	4	True				
ANR	4820958	AssignmentExpression	ybegin = pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4820780	0		=			
ANR	4820959	Identifier	ybegin		4820780	0					
ANR	4820960	AdditiveExpression	pintop * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4820780	1		+			
ANR	4820961	MultiplicativeExpression	pintop * upd -> ints [ I_NYPASS ]		4820780	0		*			
ANR	4820962	Identifier	pintop		4820780	0					
ANR	4820963	ArrayIndexing	upd -> ints [ I_NYPASS ]		4820780	1					
ANR	4820964	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4820965	Identifier	upd		4820780	0					
ANR	4820966	Identifier	ints		4820780	1					
ANR	4820967	Identifier	I_NYPASS		4820780	1					
ANR	4820968	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		4820780	1		-			
ANR	4820969	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4820970	Identifier	upd		4820780	0					
ANR	4820971	Identifier	yscan		4820780	1					
ANR	4820972	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		4820780	1					
ANR	4820973	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4820974	Identifier	upd		4820780	0					
ANR	4820975	Identifier	ints		4820780	1					
ANR	4820976	Identifier	I_BEGSKIP		4820780	1					
ANR	4820977	ExpressionStatement	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]	6146:3:219259:219333	4820780	5	True				
ANR	4820978	AssignmentExpression	yend = pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4820780	0		=			
ANR	4820979	Identifier	yend		4820780	0					
ANR	4820980	AdditiveExpression	pinbot * upd -> ints [ I_NYPASS ] + upd -> yscan - upd -> ints [ I_BEGSKIP ]		4820780	1		+			
ANR	4820981	MultiplicativeExpression	pinbot * upd -> ints [ I_NYPASS ]		4820780	0		*			
ANR	4820982	Identifier	pinbot		4820780	0					
ANR	4820983	ArrayIndexing	upd -> ints [ I_NYPASS ]		4820780	1					
ANR	4820984	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4820985	Identifier	upd		4820780	0					
ANR	4820986	Identifier	ints		4820780	1					
ANR	4820987	Identifier	I_NYPASS		4820780	1					
ANR	4820988	AdditiveExpression	upd -> yscan - upd -> ints [ I_BEGSKIP ]		4820780	1		-			
ANR	4820989	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4820990	Identifier	upd		4820780	0					
ANR	4820991	Identifier	yscan		4820780	1					
ANR	4820992	ArrayIndexing	upd -> ints [ I_BEGSKIP ]		4820780	1					
ANR	4820993	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4820994	Identifier	upd		4820780	0					
ANR	4820995	Identifier	ints		4820780	1					
ANR	4820996	Identifier	I_BEGSKIP		4820780	1					
ANR	4820997	ExpressionStatement	xbegin = upd -> pwidth	6150:3:219376:219396	4820780	6	True				
ANR	4820998	AssignmentExpression	xbegin = upd -> pwidth		4820780	0		=			
ANR	4820999	Identifier	xbegin		4820780	0					
ANR	4821000	PtrMemberAccess	upd -> pwidth		4820780	1					
ANR	4821001	Identifier	upd		4820780	0					
ANR	4821002	Identifier	pwidth		4820780	1					
ANR	4821003	ExpressionStatement	xend = - 1	6151:3:219401:219412	4820780	7	True				
ANR	4821004	AssignmentExpression	xend = - 1		4820780	0		=			
ANR	4821005	Identifier	xend		4820780	0					
ANR	4821006	UnaryOperationExpression	- 1		4820780	1					
ANR	4821007	UnaryOperator	-		4820780	0					
ANR	4821008	PrimaryExpression	1		4820780	1					
ANR	4821009	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4820780	8					
ANR	4821010	ForInit	y = ybegin ;	6153:7:219422:219432	4820780	0	True				
ANR	4821011	AssignmentExpression	y = ybegin		4820780	0		=			
ANR	4821012	Identifier	y		4820780	0					
ANR	4821013	Identifier	ybegin		4820780	1					
ANR	4821014	Condition	y < yend	6153:19:219434:219441	4820780	1	True				
ANR	4821015	RelationalExpression	y < yend		4820780	0		<			
ANR	4821016	Identifier	y		4820780	0					
ANR	4821017	Identifier	yend		4820780	1					
ANR	4821018	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6153:29:219444:219467	4820780	2	True	+=			
ANR	4821019	Identifier	y		4820780	0					
ANR	4821020	ArrayIndexing	upd -> ints [ I_NYPASS ]		4820780	1					
ANR	4821021	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821022	Identifier	upd		4820780	0					
ANR	4821023	Identifier	ints		4820780	1					
ANR	4821024	Identifier	I_NYPASS		4820780	1					
ANR	4821025	CompoundStatement		30:55:967:967	4820780	3					
ANR	4821026	IfStatement	if ( 0 > y )		4820780	0					
ANR	4821027	Condition	0 > y	6155:9:219501:219505	4820780	0	True				
ANR	4821028	RelationalExpression	0 > y		4820780	0		>			
ANR	4821029	PrimaryExpression	0		4820780	0					
ANR	4821030	Identifier	y		4820780	1					
ANR	4821031	ContinueStatement	continue ;	6155:16:219508:219516	4820780	1	True				
ANR	4821032	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ]	6157:6:219550:219585	4820780	1	True				
ANR	4821033	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ]		4820780	0		=			
ANR	4821034	Identifier	scan		4820780	0					
ANR	4821035	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4820780	1					
ANR	4821036	PtrMemberAccess	upd -> scnbuf		4820780	0					
ANR	4821037	Identifier	upd		4820780	0					
ANR	4821038	Identifier	scnbuf		4820780	1					
ANR	4821039	BitAndExpression	y & upd -> scnmsk		4820780	1		&			
ANR	4821040	Identifier	y		4820780	0					
ANR	4821041	PtrMemberAccess	upd -> scnmsk		4820780	1					
ANR	4821042	Identifier	upd		4820780	0					
ANR	4821043	Identifier	scnmsk		4820780	1					
ANR	4821044	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4820780	2					
ANR	4821045	ForInit	icomp = 0 ;	6159:10:219598:219607	4820780	0	True				
ANR	4821046	AssignmentExpression	icomp = 0		4820780	0		=			
ANR	4821047	Identifier	icomp		4820780	0					
ANR	4821048	PrimaryExpression	0		4820780	1					
ANR	4821049	Condition	icomp < upd -> ocomp	6159:21:219609:219626	4820780	1	True				
ANR	4821050	RelationalExpression	icomp < upd -> ocomp		4820780	0		<			
ANR	4821051	Identifier	icomp		4820780	0					
ANR	4821052	PtrMemberAccess	upd -> ocomp		4820780	1					
ANR	4821053	Identifier	upd		4820780	0					
ANR	4821054	Identifier	ocomp		4820780	1					
ANR	4821055	UnaryExpression	++ icomp	6159:41:219629:219635	4820780	2	True				
ANR	4821056	IncDec	++		4820780	0					
ANR	4821057	Identifier	icomp		4820780	1					
ANR	4821058	CompoundStatement		36:50:1135:1135	4820780	3					
ANR	4821059	IfStatement	if ( xbegin > scan [ icomp ] . xbegin [ ixpass ] )		4820780	0					
ANR	4821060	Condition	xbegin > scan [ icomp ] . xbegin [ ixpass ]	6160:12:219672:219706	4820780	0	True				
ANR	4821061	RelationalExpression	xbegin > scan [ icomp ] . xbegin [ ixpass ]		4820780	0		>			
ANR	4821062	Identifier	xbegin		4820780	0					
ANR	4821063	ArrayIndexing	scan [ icomp ] . xbegin [ ixpass ]		4820780	1					
ANR	4821064	MemberAccess	scan [ icomp ] . xbegin		4820780	0					
ANR	4821065	ArrayIndexing	scan [ icomp ]		4820780	0					
ANR	4821066	Identifier	scan		4820780	0					
ANR	4821067	Identifier	icomp		4820780	1					
ANR	4821068	Identifier	xbegin		4820780	1					
ANR	4821069	Identifier	ixpass		4820780	1					
ANR	4821070	ExpressionStatement	xbegin = scan [ icomp ] . xbegin [ ixpass ]	6161:12:219721:219756	4820780	1	True				
ANR	4821071	AssignmentExpression	xbegin = scan [ icomp ] . xbegin [ ixpass ]		4820780	0		=			
ANR	4821072	Identifier	xbegin		4820780	0					
ANR	4821073	ArrayIndexing	scan [ icomp ] . xbegin [ ixpass ]		4820780	1					
ANR	4821074	MemberAccess	scan [ icomp ] . xbegin		4820780	0					
ANR	4821075	ArrayIndexing	scan [ icomp ]		4820780	0					
ANR	4821076	Identifier	scan		4820780	0					
ANR	4821077	Identifier	icomp		4820780	1					
ANR	4821078	Identifier	xbegin		4820780	1					
ANR	4821079	Identifier	ixpass		4820780	1					
ANR	4821080	IfStatement	if ( xend < scan [ icomp ] . xend [ ixpass ] )		4820780	1					
ANR	4821081	Condition	xend < scan [ icomp ] . xend [ ixpass ]	6162:12:219770:219804	4820780	0	True				
ANR	4821082	RelationalExpression	xend < scan [ icomp ] . xend [ ixpass ]		4820780	0		<			
ANR	4821083	Identifier	xend		4820780	0					
ANR	4821084	ArrayIndexing	scan [ icomp ] . xend [ ixpass ]		4820780	1					
ANR	4821085	MemberAccess	scan [ icomp ] . xend		4820780	0					
ANR	4821086	ArrayIndexing	scan [ icomp ]		4820780	0					
ANR	4821087	Identifier	scan		4820780	0					
ANR	4821088	Identifier	icomp		4820780	1					
ANR	4821089	Identifier	xend		4820780	1					
ANR	4821090	Identifier	ixpass		4820780	1					
ANR	4821091	ExpressionStatement	xend = scan [ icomp ] . xend [ ixpass ]	6163:12:219819:219854	4820780	1	True				
ANR	4821092	AssignmentExpression	xend = scan [ icomp ] . xend [ ixpass ]		4820780	0		=			
ANR	4821093	Identifier	xend		4820780	0					
ANR	4821094	ArrayIndexing	scan [ icomp ] . xend [ ixpass ]		4820780	1					
ANR	4821095	MemberAccess	scan [ icomp ] . xend		4820780	0					
ANR	4821096	ArrayIndexing	scan [ icomp ]		4820780	0					
ANR	4821097	Identifier	scan		4820780	0					
ANR	4821098	Identifier	icomp		4820780	1					
ANR	4821099	Identifier	xend		4820780	1					
ANR	4821100	Identifier	ixpass		4820780	1					
ANR	4821101	IfStatement	if ( xbegin <= xend )		4820780	9					
ANR	4821102	Condition	xbegin <= xend	6168:6:220012:220025	4820780	0	True				
ANR	4821103	RelationalExpression	xbegin <= xend		4820780	0		<=			
ANR	4821104	Identifier	xbegin		4820780	0					
ANR	4821105	Identifier	xend		4820780	1					
ANR	4821106	CompoundStatement		45:22:1525:1525	4820780	1					
ANR	4821107	ExpressionStatement	ioutbuf = upd -> nbytes	6170:6:220062:220083	4820780	0	True				
ANR	4821108	AssignmentExpression	ioutbuf = upd -> nbytes		4820780	0		=			
ANR	4821109	Identifier	ioutbuf		4820780	0					
ANR	4821110	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4821111	Identifier	upd		4820780	0					
ANR	4821112	Identifier	nbytes		4820780	1					
ANR	4821113	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		4820780	1					
ANR	4821114	Condition	0 == upd -> strings [ S_XMOVE ] . size	6172:9:220095:220125	4820780	0	True				
ANR	4821115	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4820780	0		==			
ANR	4821116	PrimaryExpression	0		4820780	0					
ANR	4821117	MemberAccess	upd -> strings [ S_XMOVE ] . size		4820780	1					
ANR	4821118	ArrayIndexing	upd -> strings [ S_XMOVE ]		4820780	0					
ANR	4821119	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821120	Identifier	upd		4820780	0					
ANR	4821121	Identifier	strings		4820780	1					
ANR	4821122	Identifier	S_XMOVE		4820780	1					
ANR	4821123	Identifier	size		4820780	1					
ANR	4821124	ExpressionStatement	xbegin = ixpass	6172:42:220128:220143	4820780	1	True				
ANR	4821125	AssignmentExpression	xbegin = ixpass		4820780	0		=			
ANR	4821126	Identifier	xbegin		4820780	0					
ANR	4821127	Identifier	ixpass		4820780	1					
ANR	4821128	IfStatement	if ( upd -> yscan != upd -> yprinter )		4820780	2					
ANR	4821129	Condition	upd -> yscan != upd -> yprinter	6177:9:220199:220225	4820780	0	True				
ANR	4821130	EqualityExpression	upd -> yscan != upd -> yprinter		4820780	0		!=			
ANR	4821131	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4821132	Identifier	upd		4820780	0					
ANR	4821133	Identifier	yscan		4820780	1					
ANR	4821134	PtrMemberAccess	upd -> yprinter		4820780	1					
ANR	4821135	Identifier	upd		4820780	0					
ANR	4821136	Identifier	yprinter		4820780	1					
ANR	4821137	CompoundStatement		54:38:1725:1725	4820780	1					
ANR	4821138	IfStatement	if ( B_YABS & upd -> flags )		4820780	0					
ANR	4821139	Condition	B_YABS & upd -> flags	6178:12:220266:220284	4820780	0	True				
ANR	4821140	BitAndExpression	B_YABS & upd -> flags		4820780	0		&			
ANR	4821141	Identifier	B_YABS		4820780	0					
ANR	4821142	PtrMemberAccess	upd -> flags		4820780	1					
ANR	4821143	Identifier	upd		4820780	0					
ANR	4821144	Identifier	flags		4820780	1					
ANR	4821145	ExpressionStatement	y = upd -> yscan + upd -> ints [ I_YOFS ]	6178:33:220287:220321	4820780	1	True				
ANR	4821146	AssignmentExpression	y = upd -> yscan + upd -> ints [ I_YOFS ]		4820780	0		=			
ANR	4821147	Identifier	y		4820780	0					
ANR	4821148	AdditiveExpression	upd -> yscan + upd -> ints [ I_YOFS ]		4820780	1		+			
ANR	4821149	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4821150	Identifier	upd		4820780	0					
ANR	4821151	Identifier	yscan		4820780	1					
ANR	4821152	ArrayIndexing	upd -> ints [ I_YOFS ]		4820780	1					
ANR	4821153	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821154	Identifier	upd		4820780	0					
ANR	4821155	Identifier	ints		4820780	1					
ANR	4821156	Identifier	I_YOFS		4820780	1					
ANR	4821157	ElseStatement	else		4820780	0					
ANR	4821158	ExpressionStatement	y = upd -> yscan - upd -> yprinter	6179:33:220356:220386	4820780	0	True				
ANR	4821159	AssignmentExpression	y = upd -> yscan - upd -> yprinter		4820780	0		=			
ANR	4821160	Identifier	y		4820780	0					
ANR	4821161	AdditiveExpression	upd -> yscan - upd -> yprinter		4820780	1		-			
ANR	4821162	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4821163	Identifier	upd		4820780	0					
ANR	4821164	Identifier	yscan		4820780	1					
ANR	4821165	PtrMemberAccess	upd -> yprinter		4820780	1					
ANR	4821166	Identifier	upd		4820780	0					
ANR	4821167	Identifier	yprinter		4820780	1					
ANR	4821168	IfStatement	if ( 1 < upd -> ints [ I_YSTEP ] )		4820780	1					
ANR	4821169	Condition	1 < upd -> ints [ I_YSTEP ]	6181:18:220407:220428	4820780	0	True				
ANR	4821170	RelationalExpression	1 < upd -> ints [ I_YSTEP ]		4820780	0		<			
ANR	4821171	PrimaryExpression	1		4820780	0					
ANR	4821172	ArrayIndexing	upd -> ints [ I_YSTEP ]		4820780	1					
ANR	4821173	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821174	Identifier	upd		4820780	0					
ANR	4821175	Identifier	ints		4820780	1					
ANR	4821176	Identifier	I_YSTEP		4820780	1					
ANR	4821177	CompoundStatement		58:42:1928:1928	4820780	1					
ANR	4821178	ExpressionStatement	n = y / upd -> ints [ I_YSTEP ]	6182:12:220445:220477	4820780	0	True				
ANR	4821179	AssignmentExpression	n = y / upd -> ints [ I_YSTEP ]		4820780	0		=			
ANR	4821180	Identifier	n		4820780	0					
ANR	4821181	MultiplicativeExpression	y / upd -> ints [ I_YSTEP ]		4820780	1		/			
ANR	4821182	Identifier	y		4820780	0					
ANR	4821183	ArrayIndexing	upd -> ints [ I_YSTEP ]		4820780	1					
ANR	4821184	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821185	Identifier	upd		4820780	0					
ANR	4821186	Identifier	ints		4820780	1					
ANR	4821187	Identifier	I_YSTEP		4820780	1					
ANR	4821188	ExpressionStatement	y -= n * upd -> ints [ I_YSTEP ]	6183:12:220510:220542	4820780	1	True				
ANR	4821189	AssignmentExpression	y -= n * upd -> ints [ I_YSTEP ]		4820780	0		-=			
ANR	4821190	Identifier	y		4820780	0					
ANR	4821191	MultiplicativeExpression	n * upd -> ints [ I_YSTEP ]		4820780	1		*			
ANR	4821192	Identifier	n		4820780	0					
ANR	4821193	ArrayIndexing	upd -> ints [ I_YSTEP ]		4820780	1					
ANR	4821194	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821195	Identifier	upd		4820780	0					
ANR	4821196	Identifier	ints		4820780	1					
ANR	4821197	Identifier	I_YSTEP		4820780	1					
ANR	4821198	ElseStatement	else		4820780	0					
ANR	4821199	IfStatement	if ( - 1 > upd -> ints [ I_YSTEP ] )		4820780	0					
ANR	4821200	Condition	- 1 > upd -> ints [ I_YSTEP ]	6184:19:220582:220604	4820780	0	True				
ANR	4821201	RelationalExpression	- 1 > upd -> ints [ I_YSTEP ]		4820780	0		>			
ANR	4821202	UnaryOperationExpression	- 1		4820780	0					
ANR	4821203	UnaryOperator	-		4820780	0					
ANR	4821204	PrimaryExpression	1		4820780	1					
ANR	4821205	ArrayIndexing	upd -> ints [ I_YSTEP ]		4820780	1					
ANR	4821206	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821207	Identifier	upd		4820780	0					
ANR	4821208	Identifier	ints		4820780	1					
ANR	4821209	Identifier	I_YSTEP		4820780	1					
ANR	4821210	CompoundStatement		61:44:2104:2104	4820780	1					
ANR	4821211	ExpressionStatement	n = y * - upd -> ints [ I_YSTEP ]	6185:12:220621:220653	4820780	0	True				
ANR	4821212	AssignmentExpression	n = y * - upd -> ints [ I_YSTEP ]		4820780	0		=			
ANR	4821213	Identifier	n		4820780	0					
ANR	4821214	MultiplicativeExpression	y * - upd -> ints [ I_YSTEP ]		4820780	1		*			
ANR	4821215	Identifier	y		4820780	0					
ANR	4821216	UnaryOperationExpression	- upd -> ints [ I_YSTEP ]		4820780	1					
ANR	4821217	UnaryOperator	-		4820780	0					
ANR	4821218	ArrayIndexing	upd -> ints [ I_YSTEP ]		4820780	1					
ANR	4821219	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821220	Identifier	upd		4820780	0					
ANR	4821221	Identifier	ints		4820780	1					
ANR	4821222	Identifier	I_YSTEP		4820780	1					
ANR	4821223	ExpressionStatement	y = 0	6186:12:220689:220699	4820780	1	True				
ANR	4821224	AssignmentExpression	y = 0		4820780	0		=			
ANR	4821225	Identifier	y		4820780	0					
ANR	4821226	PrimaryExpression	0		4820780	1					
ANR	4821227	ElseStatement	else		4820780	0					
ANR	4821228	CompoundStatement		64:16:2214:2214	4820780	0					
ANR	4821229	ExpressionStatement	n = y	6188:12:220731:220741	4820780	0	True				
ANR	4821230	AssignmentExpression	n = y		4820780	0		=			
ANR	4821231	Identifier	n		4820780	0					
ANR	4821232	Identifier	y		4820780	1					
ANR	4821233	ExpressionStatement	y = 0	6189:12:220755:220765	4820780	1	True				
ANR	4821234	AssignmentExpression	y = 0		4820780	0		=			
ANR	4821235	Identifier	y		4820780	0					
ANR	4821236	PrimaryExpression	0		4820780	1					
ANR	4821237	IfStatement	if ( n )		4820780	2					
ANR	4821238	Condition	n	6192:12:220791:220791	4820780	0	True				
ANR	4821239	Identifier	n		4820780	0					
ANR	4821240	CompoundStatement		69:15:2291:2291	4820780	1					
ANR	4821241	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"	6193:12:220833:220938	4820780	0	True				
ANR	4821242	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YMOVE ] . data , upd -> strings [ S_YMOVE ] . size )"		4820780	0					
ANR	4821243	Callee	memcpy		4820780	0					
ANR	4821244	Identifier	memcpy		4820780	0					
ANR	4821245	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4821246	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4821247	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4821248	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821249	Identifier	upd		4820780	0					
ANR	4821250	Identifier	outbuf		4820780	1					
ANR	4821251	Identifier	ioutbuf		4820780	1					
ANR	4821252	Argument	upd -> strings [ S_YMOVE ] . data		4820780	1					
ANR	4821253	MemberAccess	upd -> strings [ S_YMOVE ] . data		4820780	0					
ANR	4821254	ArrayIndexing	upd -> strings [ S_YMOVE ]		4820780	0					
ANR	4821255	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821256	Identifier	upd		4820780	0					
ANR	4821257	Identifier	strings		4820780	1					
ANR	4821258	Identifier	S_YMOVE		4820780	1					
ANR	4821259	Identifier	data		4820780	1					
ANR	4821260	Argument	upd -> strings [ S_YMOVE ] . size		4820780	2					
ANR	4821261	MemberAccess	upd -> strings [ S_YMOVE ] . size		4820780	0					
ANR	4821262	ArrayIndexing	upd -> strings [ S_YMOVE ]		4820780	0					
ANR	4821263	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821264	Identifier	upd		4820780	0					
ANR	4821265	Identifier	strings		4820780	1					
ANR	4821266	Identifier	S_YMOVE		4820780	1					
ANR	4821267	Identifier	size		4820780	1					
ANR	4821268	ExpressionStatement	ioutbuf += upd -> strings [ S_YMOVE ] . size	6195:12:220952:220989	4820780	1	True				
ANR	4821269	AssignmentExpression	ioutbuf += upd -> strings [ S_YMOVE ] . size		4820780	0		+=			
ANR	4821270	Identifier	ioutbuf		4820780	0					
ANR	4821271	MemberAccess	upd -> strings [ S_YMOVE ] . size		4820780	1					
ANR	4821272	ArrayIndexing	upd -> strings [ S_YMOVE ]		4820780	0					
ANR	4821273	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821274	Identifier	upd		4820780	0					
ANR	4821275	Identifier	strings		4820780	1					
ANR	4821276	Identifier	S_YMOVE		4820780	1					
ANR	4821277	Identifier	size		4820780	1					
ANR	4821278	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	6197:12:221004:221042	4820780	2	True				
ANR	4821279	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		4820780	0		=			
ANR	4821280	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4820780	0					
ANR	4821281	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821282	Identifier	upd		4820780	0					
ANR	4821283	Identifier	outbuf		4820780	1					
ANR	4821284	PostIncDecOperationExpression	ioutbuf ++		4820780	1					
ANR	4821285	Identifier	ioutbuf		4820780	0					
ANR	4821286	IncDec	++		4820780	1					
ANR	4821287	BitAndExpression	n & 0xff		4820780	1		&			
ANR	4821288	Identifier	n		4820780	0					
ANR	4821289	PrimaryExpression	0xff		4820780	1					
ANR	4821290	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	6198:12:221056:221094	4820780	3	True				
ANR	4821291	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		4820780	0		=			
ANR	4821292	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4820780	0					
ANR	4821293	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821294	Identifier	upd		4820780	0					
ANR	4821295	Identifier	outbuf		4820780	1					
ANR	4821296	PostIncDecOperationExpression	ioutbuf ++		4820780	1					
ANR	4821297	Identifier	ioutbuf		4820780	0					
ANR	4821298	IncDec	++		4820780	1					
ANR	4821299	BitAndExpression	( n >> 8 ) & 0xff		4820780	1		&			
ANR	4821300	ShiftExpression	n >> 8		4820780	0		>>			
ANR	4821301	Identifier	n		4820780	0					
ANR	4821302	PrimaryExpression	8		4820780	1					
ANR	4821303	PrimaryExpression	0xff		4820780	1					
ANR	4821304	IfStatement	if ( 0 < upd -> strings [ S_YSTEP ] . size )		4820780	3					
ANR	4821305	Condition	0 < upd -> strings [ S_YSTEP ] . size	6202:12:221152:221181	4820780	0	True				
ANR	4821306	RelationalExpression	0 < upd -> strings [ S_YSTEP ] . size		4820780	0		<			
ANR	4821307	PrimaryExpression	0		4820780	0					
ANR	4821308	MemberAccess	upd -> strings [ S_YSTEP ] . size		4820780	1					
ANR	4821309	ArrayIndexing	upd -> strings [ S_YSTEP ]		4820780	0					
ANR	4821310	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821311	Identifier	upd		4820780	0					
ANR	4821312	Identifier	strings		4820780	1					
ANR	4821313	Identifier	S_YSTEP		4820780	1					
ANR	4821314	Identifier	size		4820780	1					
ANR	4821315	CompoundStatement		79:44:2681:2681	4820780	1					
ANR	4821316	WhileStatement	while ( y -- )		4820780	0					
ANR	4821317	Condition	y --	6203:18:221204:221206	4820780	0	True				
ANR	4821318	PostIncDecOperationExpression	y --		4820780	0					
ANR	4821319	Identifier	y		4820780	0					
ANR	4821320	IncDec	--		4820780	1					
ANR	4821321	CompoundStatement		80:23:2706:2706	4820780	1					
ANR	4821322	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"	6204:15:221226:221361	4820780	0	True				
ANR	4821323	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_YSTEP ] . data , upd -> strings [ S_YSTEP ] . size )"		4820780	0					
ANR	4821324	Callee	memcpy		4820780	0					
ANR	4821325	Identifier	memcpy		4820780	0					
ANR	4821326	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4821327	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4821328	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4821329	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821330	Identifier	upd		4820780	0					
ANR	4821331	Identifier	outbuf		4820780	1					
ANR	4821332	Identifier	ioutbuf		4820780	1					
ANR	4821333	Argument	upd -> strings [ S_YSTEP ] . data		4820780	1					
ANR	4821334	MemberAccess	upd -> strings [ S_YSTEP ] . data		4820780	0					
ANR	4821335	ArrayIndexing	upd -> strings [ S_YSTEP ]		4820780	0					
ANR	4821336	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821337	Identifier	upd		4820780	0					
ANR	4821338	Identifier	strings		4820780	1					
ANR	4821339	Identifier	S_YSTEP		4820780	1					
ANR	4821340	Identifier	data		4820780	1					
ANR	4821341	Argument	upd -> strings [ S_YSTEP ] . size		4820780	2					
ANR	4821342	MemberAccess	upd -> strings [ S_YSTEP ] . size		4820780	0					
ANR	4821343	ArrayIndexing	upd -> strings [ S_YSTEP ]		4820780	0					
ANR	4821344	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821345	Identifier	upd		4820780	0					
ANR	4821346	Identifier	strings		4820780	1					
ANR	4821347	Identifier	S_YSTEP		4820780	1					
ANR	4821348	Identifier	size		4820780	1					
ANR	4821349	ExpressionStatement	ioutbuf += upd -> strings [ S_YSTEP ] . size	6207:15:221378:221415	4820780	1	True				
ANR	4821350	AssignmentExpression	ioutbuf += upd -> strings [ S_YSTEP ] . size		4820780	0		+=			
ANR	4821351	Identifier	ioutbuf		4820780	0					
ANR	4821352	MemberAccess	upd -> strings [ S_YSTEP ] . size		4820780	1					
ANR	4821353	ArrayIndexing	upd -> strings [ S_YSTEP ]		4820780	0					
ANR	4821354	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821355	Identifier	upd		4820780	0					
ANR	4821356	Identifier	strings		4820780	1					
ANR	4821357	Identifier	S_YSTEP		4820780	1					
ANR	4821358	Identifier	size		4820780	1					
ANR	4821359	ExpressionStatement	upd -> yprinter = upd -> yscan	6211:9:221452:221478	4820780	4	True				
ANR	4821360	AssignmentExpression	upd -> yprinter = upd -> yscan		4820780	0		=			
ANR	4821361	PtrMemberAccess	upd -> yprinter		4820780	0					
ANR	4821362	Identifier	upd		4820780	0					
ANR	4821363	Identifier	yprinter		4820780	1					
ANR	4821364	PtrMemberAccess	upd -> yscan		4820780	1					
ANR	4821365	Identifier	upd		4820780	0					
ANR	4821366	Identifier	yscan		4820780	1					
ANR	4821367	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4820780	3					
ANR	4821368	ForInit	icomp = 0 ;	6217:10:221599:221608	4820780	0	True				
ANR	4821369	AssignmentExpression	icomp = 0		4820780	0		=			
ANR	4821370	Identifier	icomp		4820780	0					
ANR	4821371	PrimaryExpression	0		4820780	1					
ANR	4821372	Condition	icomp < upd -> ocomp	6217:21:221610:221627	4820780	1	True				
ANR	4821373	RelationalExpression	icomp < upd -> ocomp		4820780	0		<			
ANR	4821374	Identifier	icomp		4820780	0					
ANR	4821375	PtrMemberAccess	upd -> ocomp		4820780	1					
ANR	4821376	Identifier	upd		4820780	0					
ANR	4821377	Identifier	ocomp		4820780	1					
ANR	4821378	UnaryExpression	++ icomp	6217:41:221630:221636	4820780	2	True				
ANR	4821379	IncDec	++		4820780	0					
ANR	4821380	Identifier	icomp		4820780	1					
ANR	4821381	CompoundStatement		94:50:3136:3136	4820780	3					
ANR	4821382	ForStatement	for ( y = ybegin ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4820780	0					
ANR	4821383	ForInit	y = ybegin ;	6221:13:221742:221752	4820780	0	True				
ANR	4821384	AssignmentExpression	y = ybegin		4820780	0		=			
ANR	4821385	Identifier	y		4820780	0					
ANR	4821386	Identifier	ybegin		4820780	1					
ANR	4821387	Condition	y < yend	6221:25:221754:221761	4820780	1	True				
ANR	4821388	RelationalExpression	y < yend		4820780	0		<			
ANR	4821389	Identifier	y		4820780	0					
ANR	4821390	Identifier	yend		4820780	1					
ANR	4821391	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6221:35:221764:221787	4820780	2	True	+=			
ANR	4821392	Identifier	y		4820780	0					
ANR	4821393	ArrayIndexing	upd -> ints [ I_NYPASS ]		4820780	1					
ANR	4821394	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821395	Identifier	upd		4820780	0					
ANR	4821396	Identifier	ints		4820780	1					
ANR	4821397	Identifier	I_NYPASS		4820780	1					
ANR	4821398	CompoundStatement		98:61:3287:3287	4820780	3					
ANR	4821399	IfStatement	if ( 0 > y )		4820780	0					
ANR	4821400	Condition	0 > y	6222:15:221823:221827	4820780	0	True				
ANR	4821401	RelationalExpression	0 > y		4820780	0		>			
ANR	4821402	PrimaryExpression	0		4820780	0					
ANR	4821403	Identifier	y		4820780	1					
ANR	4821404	ContinueStatement	continue ;	6222:22:221830:221838	4820780	1	True				
ANR	4821405	ExpressionStatement	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp	6223:12:221852:221893	4820780	1	True				
ANR	4821406	AssignmentExpression	scan = upd -> scnbuf [ y & upd -> scnmsk ] + icomp		4820780	0		=			
ANR	4821407	Identifier	scan		4820780	0					
ANR	4821408	AdditiveExpression	upd -> scnbuf [ y & upd -> scnmsk ] + icomp		4820780	1		+			
ANR	4821409	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4820780	0					
ANR	4821410	PtrMemberAccess	upd -> scnbuf		4820780	0					
ANR	4821411	Identifier	upd		4820780	0					
ANR	4821412	Identifier	scnbuf		4820780	1					
ANR	4821413	BitAndExpression	y & upd -> scnmsk		4820780	1		&			
ANR	4821414	Identifier	y		4820780	0					
ANR	4821415	PtrMemberAccess	upd -> scnmsk		4820780	1					
ANR	4821416	Identifier	upd		4820780	0					
ANR	4821417	Identifier	scnmsk		4820780	1					
ANR	4821418	Identifier	icomp		4820780	1					
ANR	4821419	IfStatement	if ( 0 <= scan -> xend [ ixpass ] )		4820780	2					
ANR	4821420	Condition	0 <= scan -> xend [ ixpass ]	6224:15:221910:221932	4820780	0	True				
ANR	4821421	RelationalExpression	0 <= scan -> xend [ ixpass ]		4820780	0		<=			
ANR	4821422	PrimaryExpression	0		4820780	0					
ANR	4821423	ArrayIndexing	scan -> xend [ ixpass ]		4820780	1					
ANR	4821424	PtrMemberAccess	scan -> xend		4820780	0					
ANR	4821425	Identifier	scan		4820780	0					
ANR	4821426	Identifier	xend		4820780	1					
ANR	4821427	Identifier	ixpass		4820780	1					
ANR	4821428	BreakStatement	break ;	6224:40:221935:221940	4820780	1	True				
ANR	4821429	IfStatement	if ( y >= yend )		4820780	1					
ANR	4821430	Condition	y >= yend	6226:12:222033:222041	4820780	0	True				
ANR	4821431	RelationalExpression	y >= yend		4820780	0		>=			
ANR	4821432	Identifier	y		4820780	0					
ANR	4821433	Identifier	yend		4820780	1					
ANR	4821434	ContinueStatement	continue ;	6226:23:222044:222052	4820780	1	True				
ANR	4821435	IfStatement	if ( ( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp ) )		4820780	2					
ANR	4821436	Condition	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )	6230:12:222132:222219	4820780	0	True				
ANR	4821437	AndExpression	( 0 < upd -> string_a [ SA_SETCOMP ] . size ) && ( upd -> icomp != icomp )		4820780	0		&&			
ANR	4821438	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . size		4820780	0		<			
ANR	4821439	PrimaryExpression	0		4820780	0					
ANR	4821440	MemberAccess	upd -> string_a [ SA_SETCOMP ] . size		4820780	1					
ANR	4821441	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4820780	0					
ANR	4821442	PtrMemberAccess	upd -> string_a		4820780	0					
ANR	4821443	Identifier	upd		4820780	0					
ANR	4821444	Identifier	string_a		4820780	1					
ANR	4821445	Identifier	SA_SETCOMP		4820780	1					
ANR	4821446	Identifier	size		4820780	1					
ANR	4821447	EqualityExpression	upd -> icomp != icomp		4820780	1		!=			
ANR	4821448	PtrMemberAccess	upd -> icomp		4820780	0					
ANR	4821449	Identifier	upd		4820780	0					
ANR	4821450	Identifier	icomp		4820780	1					
ANR	4821451	Identifier	icomp		4820780	1					
ANR	4821452	CompoundStatement		108:53:3722:3722	4820780	1					
ANR	4821453	ExpressionStatement	upd -> icomp = icomp	6232:12:222263:222281	4820780	0	True				
ANR	4821454	AssignmentExpression	upd -> icomp = icomp		4820780	0		=			
ANR	4821455	PtrMemberAccess	upd -> icomp		4820780	0					
ANR	4821456	Identifier	upd		4820780	0					
ANR	4821457	Identifier	icomp		4820780	1					
ANR	4821458	Identifier	icomp		4820780	1					
ANR	4821459	IfStatement	if ( 0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )		4820780	1					
ANR	4821460	Condition	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	6233:15:222298:222343	4820780	0	True				
ANR	4821461	RelationalExpression	0 < upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4820780	0		<			
ANR	4821462	PrimaryExpression	0		4820780	0					
ANR	4821463	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4820780	1					
ANR	4821464	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4820780	0					
ANR	4821465	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4820780	0					
ANR	4821466	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4820780	0					
ANR	4821467	PtrMemberAccess	upd -> string_a		4820780	0					
ANR	4821468	Identifier	upd		4820780	0					
ANR	4821469	Identifier	string_a		4820780	1					
ANR	4821470	Identifier	SA_SETCOMP		4820780	1					
ANR	4821471	Identifier	data		4820780	1					
ANR	4821472	Identifier	icomp		4820780	1					
ANR	4821473	Identifier	size		4820780	1					
ANR	4821474	CompoundStatement		110:63:3843:3843	4820780	1					
ANR	4821475	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"	6234:15:222363:222530	4820780	0	True				
ANR	4821476	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data , upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size )"		4820780	0					
ANR	4821477	Callee	memcpy		4820780	0					
ANR	4821478	Identifier	memcpy		4820780	0					
ANR	4821479	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4821480	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4821481	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4821482	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821483	Identifier	upd		4820780	0					
ANR	4821484	Identifier	outbuf		4820780	1					
ANR	4821485	Identifier	ioutbuf		4820780	1					
ANR	4821486	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4820780	1					
ANR	4821487	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4820780	0					
ANR	4821488	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4820780	0					
ANR	4821489	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4820780	0					
ANR	4821490	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4820780	0					
ANR	4821491	PtrMemberAccess	upd -> string_a		4820780	0					
ANR	4821492	Identifier	upd		4820780	0					
ANR	4821493	Identifier	string_a		4820780	1					
ANR	4821494	Identifier	SA_SETCOMP		4820780	1					
ANR	4821495	Identifier	data		4820780	1					
ANR	4821496	Identifier	icomp		4820780	1					
ANR	4821497	Identifier	data		4820780	1					
ANR	4821498	Argument	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4820780	2					
ANR	4821499	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4820780	0					
ANR	4821500	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4820780	0					
ANR	4821501	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4820780	0					
ANR	4821502	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4820780	0					
ANR	4821503	PtrMemberAccess	upd -> string_a		4820780	0					
ANR	4821504	Identifier	upd		4820780	0					
ANR	4821505	Identifier	string_a		4820780	1					
ANR	4821506	Identifier	SA_SETCOMP		4820780	1					
ANR	4821507	Identifier	data		4820780	1					
ANR	4821508	Identifier	icomp		4820780	1					
ANR	4821509	Identifier	size		4820780	1					
ANR	4821510	ExpressionStatement	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size	6237:15:222547:222600	4820780	1	True				
ANR	4821511	AssignmentExpression	ioutbuf += upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4820780	0		+=			
ANR	4821512	Identifier	ioutbuf		4820780	0					
ANR	4821513	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4820780	1					
ANR	4821514	ArrayIndexing	upd -> string_a [ SA_SETCOMP ] . data [ icomp ]		4820780	0					
ANR	4821515	MemberAccess	upd -> string_a [ SA_SETCOMP ] . data		4820780	0					
ANR	4821516	ArrayIndexing	upd -> string_a [ SA_SETCOMP ]		4820780	0					
ANR	4821517	PtrMemberAccess	upd -> string_a		4820780	0					
ANR	4821518	Identifier	upd		4820780	0					
ANR	4821519	Identifier	string_a		4820780	1					
ANR	4821520	Identifier	SA_SETCOMP		4820780	1					
ANR	4821521	Identifier	data		4820780	1					
ANR	4821522	Identifier	icomp		4820780	1					
ANR	4821523	Identifier	size		4820780	1					
ANR	4821524	IfStatement	if ( xbegin != upd -> xprinter )		4820780	3					
ANR	4821525	Condition	xbegin != upd -> xprinter	6243:12:222741:222763	4820780	0	True				
ANR	4821526	EqualityExpression	xbegin != upd -> xprinter		4820780	0		!=			
ANR	4821527	Identifier	xbegin		4820780	0					
ANR	4821528	PtrMemberAccess	upd -> xprinter		4820780	1					
ANR	4821529	Identifier	upd		4820780	0					
ANR	4821530	Identifier	xprinter		4820780	1					
ANR	4821531	CompoundStatement		120:37:4263:4263	4820780	1					
ANR	4821532	IfStatement	if ( 0 == upd -> strings [ S_XMOVE ] . size )		4820780	0					
ANR	4821533	Condition	0 == upd -> strings [ S_XMOVE ] . size	6245:15:222784:222814	4820780	0	True				
ANR	4821534	EqualityExpression	0 == upd -> strings [ S_XMOVE ] . size		4820780	0		==			
ANR	4821535	PrimaryExpression	0		4820780	0					
ANR	4821536	MemberAccess	upd -> strings [ S_XMOVE ] . size		4820780	1					
ANR	4821537	ArrayIndexing	upd -> strings [ S_XMOVE ]		4820780	0					
ANR	4821538	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821539	Identifier	upd		4820780	0					
ANR	4821540	Identifier	strings		4820780	1					
ANR	4821541	Identifier	S_XMOVE		4820780	1					
ANR	4821542	Identifier	size		4820780	1					
ANR	4821543	CompoundStatement		122:48:4314:4314	4820780	1					
ANR	4821544	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = '\\r'	6247:15:222835:222864	4820780	0	True				
ANR	4821545	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = '\\r'		4820780	0		=			
ANR	4821546	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4820780	0					
ANR	4821547	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821548	Identifier	upd		4820780	0					
ANR	4821549	Identifier	outbuf		4820780	1					
ANR	4821550	PostIncDecOperationExpression	ioutbuf ++		4820780	1					
ANR	4821551	Identifier	ioutbuf		4820780	0					
ANR	4821552	IncDec	++		4820780	1					
ANR	4821553	PrimaryExpression	'\\r'		4820780	1					
ANR	4821554	ExpressionStatement	upd -> xprinter = 0	6248:15:222881:222908	4820780	1	True				
ANR	4821555	AssignmentExpression	upd -> xprinter = 0		4820780	0		=			
ANR	4821556	PtrMemberAccess	upd -> xprinter		4820780	0					
ANR	4821557	Identifier	upd		4820780	0					
ANR	4821558	Identifier	xprinter		4820780	1					
ANR	4821559	PrimaryExpression	0		4820780	1					
ANR	4821560	ExpressionStatement	n = 0	6249:15:222925:222930	4820780	2	True				
ANR	4821561	AssignmentExpression	n = 0		4820780	0		=			
ANR	4821562	Identifier	n		4820780	0					
ANR	4821563	PrimaryExpression	0		4820780	1					
ANR	4821564	ExpressionStatement	x = ixpass	6250:15:222947:222957	4820780	3	True				
ANR	4821565	AssignmentExpression	x = ixpass		4820780	0		=			
ANR	4821566	Identifier	x		4820780	0					
ANR	4821567	Identifier	ixpass		4820780	1					
ANR	4821568	ElseStatement	else		4820780	0					
ANR	4821569	CompoundStatement		129:19:4476:4476	4820780	0					
ANR	4821570	IfStatement	if ( B_XABS & upd -> flags )		4820780	0					
ANR	4821571	Condition	B_XABS & upd -> flags	6254:18:223000:223018	4820780	0	True				
ANR	4821572	BitAndExpression	B_XABS & upd -> flags		4820780	0		&			
ANR	4821573	Identifier	B_XABS		4820780	0					
ANR	4821574	PtrMemberAccess	upd -> flags		4820780	1					
ANR	4821575	Identifier	upd		4820780	0					
ANR	4821576	Identifier	flags		4820780	1					
ANR	4821577	ExpressionStatement	n = x = xbegin + upd -> ints [ I_XOFS ]	6254:39:223021:223055	4820780	1	True				
ANR	4821578	AssignmentExpression	n = x = xbegin + upd -> ints [ I_XOFS ]		4820780	0		=			
ANR	4821579	Identifier	n		4820780	0					
ANR	4821580	AssignmentExpression	x = xbegin + upd -> ints [ I_XOFS ]		4820780	1		=			
ANR	4821581	Identifier	x		4820780	0					
ANR	4821582	AdditiveExpression	xbegin + upd -> ints [ I_XOFS ]		4820780	1		+			
ANR	4821583	Identifier	xbegin		4820780	0					
ANR	4821584	ArrayIndexing	upd -> ints [ I_XOFS ]		4820780	1					
ANR	4821585	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821586	Identifier	upd		4820780	0					
ANR	4821587	Identifier	ints		4820780	1					
ANR	4821588	Identifier	I_XOFS		4820780	1					
ANR	4821589	ElseStatement	else		4820780	0					
ANR	4821590	ExpressionStatement	n = x = xbegin - upd -> xprinter	6255:39:223096:223126	4820780	0	True				
ANR	4821591	AssignmentExpression	n = x = xbegin - upd -> xprinter		4820780	0		=			
ANR	4821592	Identifier	n		4820780	0					
ANR	4821593	AssignmentExpression	x = xbegin - upd -> xprinter		4820780	1		=			
ANR	4821594	Identifier	x		4820780	0					
ANR	4821595	AdditiveExpression	xbegin - upd -> xprinter		4820780	1		-			
ANR	4821596	Identifier	xbegin		4820780	0					
ANR	4821597	PtrMemberAccess	upd -> xprinter		4820780	1					
ANR	4821598	Identifier	upd		4820780	0					
ANR	4821599	Identifier	xprinter		4820780	1					
ANR	4821600	IfStatement	if ( 1 < upd -> ints [ I_XSTEP ] )		4820780	1					
ANR	4821601	Condition	1 < upd -> ints [ I_XSTEP ]	6257:26:223155:223176	4820780	0	True				
ANR	4821602	RelationalExpression	1 < upd -> ints [ I_XSTEP ]		4820780	0		<			
ANR	4821603	PrimaryExpression	1		4820780	0					
ANR	4821604	ArrayIndexing	upd -> ints [ I_XSTEP ]		4820780	1					
ANR	4821605	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821606	Identifier	upd		4820780	0					
ANR	4821607	Identifier	ints		4820780	1					
ANR	4821608	Identifier	I_XSTEP		4820780	1					
ANR	4821609	CompoundStatement		134:50:4676:4676	4820780	1					
ANR	4821610	IfStatement	if ( 0 > n )		4820780	0					
ANR	4821611	Condition	0 > n	6258:21:223202:223206	4820780	0	True				
ANR	4821612	RelationalExpression	0 > n		4820780	0		>			
ANR	4821613	PrimaryExpression	0		4820780	0					
ANR	4821614	Identifier	n		4820780	1					
ANR	4821615	CompoundStatement		135:28:4706:4706	4820780	1					
ANR	4821616	ExpressionStatement	n -= upd -> ints [ I_XSTEP ]	6259:21:223232:223256	4820780	0	True				
ANR	4821617	AssignmentExpression	n -= upd -> ints [ I_XSTEP ]		4820780	0		-=			
ANR	4821618	Identifier	n		4820780	0					
ANR	4821619	ArrayIndexing	upd -> ints [ I_XSTEP ]		4820780	1					
ANR	4821620	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821621	Identifier	upd		4820780	0					
ANR	4821622	Identifier	ints		4820780	1					
ANR	4821623	Identifier	I_XSTEP		4820780	1					
ANR	4821624	ExpressionStatement	x -= n	6260:21:223279:223286	4820780	1	True				
ANR	4821625	AssignmentExpression	x -= n		4820780	0		-=			
ANR	4821626	Identifier	x		4820780	0					
ANR	4821627	Identifier	n		4820780	1					
ANR	4821628	IfStatement	if ( n )		4820780	1					
ANR	4821629	Condition	n	6262:21:223329:223329	4820780	0	True				
ANR	4821630	Identifier	n		4820780	0					
ANR	4821631	ExpressionStatement	n /= upd -> ints [ I_XSTEP ]	6262:24:223332:223356	4820780	1	True				
ANR	4821632	AssignmentExpression	n /= upd -> ints [ I_XSTEP ]		4820780	0		/=			
ANR	4821633	Identifier	n		4820780	0					
ANR	4821634	ArrayIndexing	upd -> ints [ I_XSTEP ]		4820780	1					
ANR	4821635	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821636	Identifier	upd		4820780	0					
ANR	4821637	Identifier	ints		4820780	1					
ANR	4821638	Identifier	I_XSTEP		4820780	1					
ANR	4821639	IfStatement	if ( x )		4820780	2					
ANR	4821640	Condition	x	6263:21:223397:223397	4820780	0	True				
ANR	4821641	Identifier	x		4820780	0					
ANR	4821642	ExpressionStatement	x %= upd -> ints [ I_XSTEP ]	6263:24:223400:223424	4820780	1	True				
ANR	4821643	AssignmentExpression	x %= upd -> ints [ I_XSTEP ]		4820780	0		%=			
ANR	4821644	Identifier	x		4820780	0					
ANR	4821645	ArrayIndexing	upd -> ints [ I_XSTEP ]		4820780	1					
ANR	4821646	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821647	Identifier	upd		4820780	0					
ANR	4821648	Identifier	ints		4820780	1					
ANR	4821649	Identifier	I_XSTEP		4820780	1					
ANR	4821650	ElseStatement	else		4820780	0					
ANR	4821651	IfStatement	if ( - 1 > upd -> ints [ I_XSTEP ] )		4820780	0					
ANR	4821652	Condition	- 1 > upd -> ints [ I_XSTEP ]	6265:25:223470:223492	4820780	0	True				
ANR	4821653	RelationalExpression	- 1 > upd -> ints [ I_XSTEP ]		4820780	0		>			
ANR	4821654	UnaryOperationExpression	- 1		4820780	0					
ANR	4821655	UnaryOperator	-		4820780	0					
ANR	4821656	PrimaryExpression	1		4820780	1					
ANR	4821657	ArrayIndexing	upd -> ints [ I_XSTEP ]		4820780	1					
ANR	4821658	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821659	Identifier	upd		4820780	0					
ANR	4821660	Identifier	ints		4820780	1					
ANR	4821661	Identifier	I_XSTEP		4820780	1					
ANR	4821662	CompoundStatement		142:50:4992:4992	4820780	1					
ANR	4821663	ExpressionStatement	n *= - upd -> ints [ I_XSTEP ]	6266:18:223515:223539	4820780	0	True				
ANR	4821664	AssignmentExpression	n *= - upd -> ints [ I_XSTEP ]		4820780	0		*=			
ANR	4821665	Identifier	n		4820780	0					
ANR	4821666	UnaryOperationExpression	- upd -> ints [ I_XSTEP ]		4820780	1					
ANR	4821667	UnaryOperator	-		4820780	0					
ANR	4821668	ArrayIndexing	upd -> ints [ I_XSTEP ]		4820780	1					
ANR	4821669	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821670	Identifier	upd		4820780	0					
ANR	4821671	Identifier	ints		4820780	1					
ANR	4821672	Identifier	I_XSTEP		4820780	1					
ANR	4821673	ExpressionStatement	x = 0	6267:18:223580:223586	4820780	1	True				
ANR	4821674	AssignmentExpression	x = 0		4820780	0		=			
ANR	4821675	Identifier	x		4820780	0					
ANR	4821676	PrimaryExpression	0		4820780	1					
ANR	4821677	IfStatement	if ( n )		4820780	2					
ANR	4821678	Condition	n	6270:18:223624:223624	4820780	0	True				
ANR	4821679	Identifier	n		4820780	0					
ANR	4821680	CompoundStatement		147:21:5124:5124	4820780	1					
ANR	4821681	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"	6272:17:223671:223812	4820780	0	True				
ANR	4821682	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XMOVE ] . data , upd -> strings [ S_XMOVE ] . size )"		4820780	0					
ANR	4821683	Callee	memcpy		4820780	0					
ANR	4821684	Identifier	memcpy		4820780	0					
ANR	4821685	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4821686	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4821687	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4821688	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821689	Identifier	upd		4820780	0					
ANR	4821690	Identifier	outbuf		4820780	1					
ANR	4821691	Identifier	ioutbuf		4820780	1					
ANR	4821692	Argument	upd -> strings [ S_XMOVE ] . data		4820780	1					
ANR	4821693	MemberAccess	upd -> strings [ S_XMOVE ] . data		4820780	0					
ANR	4821694	ArrayIndexing	upd -> strings [ S_XMOVE ]		4820780	0					
ANR	4821695	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821696	Identifier	upd		4820780	0					
ANR	4821697	Identifier	strings		4820780	1					
ANR	4821698	Identifier	S_XMOVE		4820780	1					
ANR	4821699	Identifier	data		4820780	1					
ANR	4821700	Argument	upd -> strings [ S_XMOVE ] . size		4820780	2					
ANR	4821701	MemberAccess	upd -> strings [ S_XMOVE ] . size		4820780	0					
ANR	4821702	ArrayIndexing	upd -> strings [ S_XMOVE ]		4820780	0					
ANR	4821703	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821704	Identifier	upd		4820780	0					
ANR	4821705	Identifier	strings		4820780	1					
ANR	4821706	Identifier	S_XMOVE		4820780	1					
ANR	4821707	Identifier	size		4820780	1					
ANR	4821708	ExpressionStatement	ioutbuf += upd -> strings [ S_XMOVE ] . size	6275:18:223832:223869	4820780	1	True				
ANR	4821709	AssignmentExpression	ioutbuf += upd -> strings [ S_XMOVE ] . size		4820780	0		+=			
ANR	4821710	Identifier	ioutbuf		4820780	0					
ANR	4821711	MemberAccess	upd -> strings [ S_XMOVE ] . size		4820780	1					
ANR	4821712	ArrayIndexing	upd -> strings [ S_XMOVE ]		4820780	0					
ANR	4821713	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821714	Identifier	upd		4820780	0					
ANR	4821715	Identifier	strings		4820780	1					
ANR	4821716	Identifier	S_XMOVE		4820780	1					
ANR	4821717	Identifier	size		4820780	1					
ANR	4821718	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 0xff	6277:18:223890:223928	4820780	2	True				
ANR	4821719	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 0xff		4820780	0		=			
ANR	4821720	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4820780	0					
ANR	4821721	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821722	Identifier	upd		4820780	0					
ANR	4821723	Identifier	outbuf		4820780	1					
ANR	4821724	PostIncDecOperationExpression	ioutbuf ++		4820780	1					
ANR	4821725	Identifier	ioutbuf		4820780	0					
ANR	4821726	IncDec	++		4820780	1					
ANR	4821727	BitAndExpression	n & 0xff		4820780	1		&			
ANR	4821728	Identifier	n		4820780	0					
ANR	4821729	PrimaryExpression	0xff		4820780	1					
ANR	4821730	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff	6278:18:223948:223986	4820780	3	True				
ANR	4821731	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 0xff		4820780	0		=			
ANR	4821732	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4820780	0					
ANR	4821733	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821734	Identifier	upd		4820780	0					
ANR	4821735	Identifier	outbuf		4820780	1					
ANR	4821736	PostIncDecOperationExpression	ioutbuf ++		4820780	1					
ANR	4821737	Identifier	ioutbuf		4820780	0					
ANR	4821738	IncDec	++		4820780	1					
ANR	4821739	BitAndExpression	( n >> 8 ) & 0xff		4820780	1		&			
ANR	4821740	ShiftExpression	n >> 8		4820780	0		>>			
ANR	4821741	Identifier	n		4820780	0					
ANR	4821742	PrimaryExpression	8		4820780	1					
ANR	4821743	PrimaryExpression	0xff		4820780	1					
ANR	4821744	IfStatement	if ( x && 0 < upd -> strings [ S_XSTEP ] . size )		4820780	1					
ANR	4821745	Condition	x && 0 < upd -> strings [ S_XSTEP ] . size	6284:15:224067:224101	4820780	0	True				
ANR	4821746	AndExpression	x && 0 < upd -> strings [ S_XSTEP ] . size		4820780	0		&&			
ANR	4821747	Identifier	x		4820780	0					
ANR	4821748	RelationalExpression	0 < upd -> strings [ S_XSTEP ] . size		4820780	1		<			
ANR	4821749	PrimaryExpression	0		4820780	0					
ANR	4821750	MemberAccess	upd -> strings [ S_XSTEP ] . size		4820780	1					
ANR	4821751	ArrayIndexing	upd -> strings [ S_XSTEP ]		4820780	0					
ANR	4821752	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821753	Identifier	upd		4820780	0					
ANR	4821754	Identifier	strings		4820780	1					
ANR	4821755	Identifier	S_XSTEP		4820780	1					
ANR	4821756	Identifier	size		4820780	1					
ANR	4821757	CompoundStatement		161:52:5601:5601	4820780	1					
ANR	4821758	WhileStatement	while ( x -- )		4820780	0					
ANR	4821759	Condition	x --	6285:21:224147:224149	4820780	0	True				
ANR	4821760	PostIncDecOperationExpression	x --		4820780	0					
ANR	4821761	Identifier	x		4820780	0					
ANR	4821762	IncDec	--		4820780	1					
ANR	4821763	CompoundStatement		162:26:5649:5649	4820780	1					
ANR	4821764	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"	6286:18:224172:224313	4820780	0	True				
ANR	4821765	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> strings [ S_XSTEP ] . data , upd -> strings [ S_XSTEP ] . size )"		4820780	0					
ANR	4821766	Callee	memcpy		4820780	0					
ANR	4821767	Identifier	memcpy		4820780	0					
ANR	4821768	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4821769	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4821770	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4821771	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821772	Identifier	upd		4820780	0					
ANR	4821773	Identifier	outbuf		4820780	1					
ANR	4821774	Identifier	ioutbuf		4820780	1					
ANR	4821775	Argument	upd -> strings [ S_XSTEP ] . data		4820780	1					
ANR	4821776	MemberAccess	upd -> strings [ S_XSTEP ] . data		4820780	0					
ANR	4821777	ArrayIndexing	upd -> strings [ S_XSTEP ]		4820780	0					
ANR	4821778	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821779	Identifier	upd		4820780	0					
ANR	4821780	Identifier	strings		4820780	1					
ANR	4821781	Identifier	S_XSTEP		4820780	1					
ANR	4821782	Identifier	data		4820780	1					
ANR	4821783	Argument	upd -> strings [ S_XSTEP ] . size		4820780	2					
ANR	4821784	MemberAccess	upd -> strings [ S_XSTEP ] . size		4820780	0					
ANR	4821785	ArrayIndexing	upd -> strings [ S_XSTEP ]		4820780	0					
ANR	4821786	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821787	Identifier	upd		4820780	0					
ANR	4821788	Identifier	strings		4820780	1					
ANR	4821789	Identifier	S_XSTEP		4820780	1					
ANR	4821790	Identifier	size		4820780	1					
ANR	4821791	ExpressionStatement	ioutbuf += upd -> strings [ S_XSTEP ] . size	6289:18:224333:224370	4820780	1	True				
ANR	4821792	AssignmentExpression	ioutbuf += upd -> strings [ S_XSTEP ] . size		4820780	0		+=			
ANR	4821793	Identifier	ioutbuf		4820780	0					
ANR	4821794	MemberAccess	upd -> strings [ S_XSTEP ] . size		4820780	1					
ANR	4821795	ArrayIndexing	upd -> strings [ S_XSTEP ]		4820780	0					
ANR	4821796	PtrMemberAccess	upd -> strings		4820780	0					
ANR	4821797	Identifier	upd		4820780	0					
ANR	4821798	Identifier	strings		4820780	1					
ANR	4821799	Identifier	S_XSTEP		4820780	1					
ANR	4821800	Identifier	size		4820780	1					
ANR	4821801	ExpressionStatement	upd -> xprinter = xend + 1	6293:9:224483:224505	4820780	4	True				
ANR	4821802	AssignmentExpression	upd -> xprinter = xend + 1		4820780	0		=			
ANR	4821803	PtrMemberAccess	upd -> xprinter		4820780	0					
ANR	4821804	Identifier	upd		4820780	0					
ANR	4821805	Identifier	xprinter		4820780	1					
ANR	4821806	AdditiveExpression	xend + 1		4820780	1		+			
ANR	4821807	Identifier	xend		4820780	0					
ANR	4821808	PrimaryExpression	1		4820780	1					
ANR	4821809	IfStatement	if ( 0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )		4820780	5					
ANR	4821810	Condition	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	6298:12:224559:224606	4820780	0	True				
ANR	4821811	RelationalExpression	0 < upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4820780	0		<			
ANR	4821812	PrimaryExpression	0		4820780	0					
ANR	4821813	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4820780	1					
ANR	4821814	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4820780	0					
ANR	4821815	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4820780	0					
ANR	4821816	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4820780	0					
ANR	4821817	PtrMemberAccess	upd -> string_a		4820780	0					
ANR	4821818	Identifier	upd		4820780	0					
ANR	4821819	Identifier	string_a		4820780	1					
ANR	4821820	Identifier	SA_WRITECOMP		4820780	1					
ANR	4821821	Identifier	data		4820780	1					
ANR	4821822	Identifier	icomp		4820780	1					
ANR	4821823	Identifier	size		4820780	1					
ANR	4821824	CompoundStatement		175:62:6106:6106	4820780	1					
ANR	4821825	ExpressionStatement	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"	6299:12:224623:224788	4820780	0	True				
ANR	4821826	CallExpression	"memcpy ( upd -> outbuf + ioutbuf , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size )"		4820780	0					
ANR	4821827	Callee	memcpy		4820780	0					
ANR	4821828	Identifier	memcpy		4820780	0					
ANR	4821829	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4821830	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4821831	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4821832	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821833	Identifier	upd		4820780	0					
ANR	4821834	Identifier	outbuf		4820780	1					
ANR	4821835	Identifier	ioutbuf		4820780	1					
ANR	4821836	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4820780	1					
ANR	4821837	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4820780	0					
ANR	4821838	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4820780	0					
ANR	4821839	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4820780	0					
ANR	4821840	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4820780	0					
ANR	4821841	PtrMemberAccess	upd -> string_a		4820780	0					
ANR	4821842	Identifier	upd		4820780	0					
ANR	4821843	Identifier	string_a		4820780	1					
ANR	4821844	Identifier	SA_WRITECOMP		4820780	1					
ANR	4821845	Identifier	data		4820780	1					
ANR	4821846	Identifier	icomp		4820780	1					
ANR	4821847	Identifier	data		4820780	1					
ANR	4821848	Argument	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4820780	2					
ANR	4821849	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4820780	0					
ANR	4821850	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4820780	0					
ANR	4821851	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4820780	0					
ANR	4821852	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4820780	0					
ANR	4821853	PtrMemberAccess	upd -> string_a		4820780	0					
ANR	4821854	Identifier	upd		4820780	0					
ANR	4821855	Identifier	string_a		4820780	1					
ANR	4821856	Identifier	SA_WRITECOMP		4820780	1					
ANR	4821857	Identifier	data		4820780	1					
ANR	4821858	Identifier	icomp		4820780	1					
ANR	4821859	Identifier	size		4820780	1					
ANR	4821860	ExpressionStatement	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size	6302:12:224802:224857	4820780	1	True				
ANR	4821861	AssignmentExpression	ioutbuf += upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4820780	0		+=			
ANR	4821862	Identifier	ioutbuf		4820780	0					
ANR	4821863	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4820780	1					
ANR	4821864	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4820780	0					
ANR	4821865	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4820780	0					
ANR	4821866	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4820780	0					
ANR	4821867	PtrMemberAccess	upd -> string_a		4820780	0					
ANR	4821868	Identifier	upd		4820780	0					
ANR	4821869	Identifier	string_a		4820780	1					
ANR	4821870	Identifier	SA_WRITECOMP		4820780	1					
ANR	4821871	Identifier	data		4820780	1					
ANR	4821872	Identifier	icomp		4820780	1					
ANR	4821873	Identifier	size		4820780	1					
ANR	4821874	ExpressionStatement	n = ( ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 8 ) & ~7	6304:9:224879:224931	4820780	6	True				
ANR	4821875	AssignmentExpression	n = ( ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 8 ) & ~7		4820780	0		=			
ANR	4821876	Identifier	n		4820780	0					
ANR	4821877	BitAndExpression	( ( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 8 ) & ~7		4820780	1		&			
ANR	4821878	AdditiveExpression	( xend - xbegin ) / upd -> ints [ I_NXPASS ] + 8		4820780	0		+			
ANR	4821879	MultiplicativeExpression	( xend - xbegin ) / upd -> ints [ I_NXPASS ]		4820780	0		/			
ANR	4821880	AdditiveExpression	xend - xbegin		4820780	0		-			
ANR	4821881	Identifier	xend		4820780	0					
ANR	4821882	Identifier	xbegin		4820780	1					
ANR	4821883	ArrayIndexing	upd -> ints [ I_NXPASS ]		4820780	1					
ANR	4821884	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821885	Identifier	upd		4820780	0					
ANR	4821886	Identifier	ints		4820780	1					
ANR	4821887	Identifier	I_NXPASS		4820780	1					
ANR	4821888	PrimaryExpression	8		4820780	1					
ANR	4821889	Identifier	~7		4820780	1					
ANR	4821890	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = n & 255	6305:9:224942:224979	4820780	7	True				
ANR	4821891	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = n & 255		4820780	0		=			
ANR	4821892	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4820780	0					
ANR	4821893	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821894	Identifier	upd		4820780	0					
ANR	4821895	Identifier	outbuf		4820780	1					
ANR	4821896	PostIncDecOperationExpression	ioutbuf ++		4820780	1					
ANR	4821897	Identifier	ioutbuf		4820780	0					
ANR	4821898	IncDec	++		4820780	1					
ANR	4821899	BitAndExpression	n & 255		4820780	1		&			
ANR	4821900	Identifier	n		4820780	0					
ANR	4821901	PrimaryExpression	255		4820780	1					
ANR	4821902	ExpressionStatement	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 255	6306:9:224990:225027	4820780	8	True				
ANR	4821903	AssignmentExpression	upd -> outbuf [ ioutbuf ++ ] = ( n >> 8 ) & 255		4820780	0		=			
ANR	4821904	ArrayIndexing	upd -> outbuf [ ioutbuf ++ ]		4820780	0					
ANR	4821905	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821906	Identifier	upd		4820780	0					
ANR	4821907	Identifier	outbuf		4820780	1					
ANR	4821908	PostIncDecOperationExpression	ioutbuf ++		4820780	1					
ANR	4821909	Identifier	ioutbuf		4820780	0					
ANR	4821910	IncDec	++		4820780	1					
ANR	4821911	BitAndExpression	( n >> 8 ) & 255		4820780	1		&			
ANR	4821912	ShiftExpression	n >> 8		4820780	0		>>			
ANR	4821913	Identifier	n		4820780	0					
ANR	4821914	PrimaryExpression	8		4820780	1					
ANR	4821915	PrimaryExpression	255		4820780	1					
ANR	4821916	ExpressionStatement	n >>= 3	6307:9:225038:225045	4820780	9	True				
ANR	4821917	AssignmentExpression	n >>= 3		4820780	0		>>=			
ANR	4821918	Identifier	n		4820780	0					
ANR	4821919	PrimaryExpression	3		4820780	1					
ANR	4821920	ForStatement	for ( pin = 0 ; pin < pintop ; ++ pin )		4820780	10					
ANR	4821921	ForInit	pin = 0 ;	6311:13:225091:225098	4820780	0	True				
ANR	4821922	AssignmentExpression	pin = 0		4820780	0		=			
ANR	4821923	Identifier	pin		4820780	0					
ANR	4821924	PrimaryExpression	0		4820780	1					
ANR	4821925	Condition	pin < pintop	6311:22:225100:225111	4820780	1	True				
ANR	4821926	RelationalExpression	pin < pintop		4820780	0		<			
ANR	4821927	Identifier	pin		4820780	0					
ANR	4821928	Identifier	pintop		4820780	1					
ANR	4821929	UnaryExpression	++ pin	6311:36:225114:225118	4820780	2	True				
ANR	4821930	IncDec	++		4820780	0					
ANR	4821931	Identifier	pin		4820780	1					
ANR	4821932	CompoundStatement		188:43:6618:6618	4820780	3					
ANR	4821933	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6312:12:225135:225181	4820780	0	True				
ANR	4821934	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4820780	0		+=			
ANR	4821935	Identifier	ioutbuf		4820780	0					
ANR	4821936	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4820780	1					
ANR	4821937	Callee	upd_rle		4820780	0					
ANR	4821938	Identifier	upd_rle		4820780	0					
ANR	4821939	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4821940	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4821941	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4821942	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821943	Identifier	upd		4820780	0					
ANR	4821944	Identifier	outbuf		4820780	1					
ANR	4821945	Identifier	ioutbuf		4820780	1					
ANR	4821946	Argument	NULL		4820780	1					
ANR	4821947	Identifier	NULL		4820780	0					
ANR	4821948	Argument	n		4820780	2					
ANR	4821949	Identifier	n		4820780	0					
ANR	4821950	ExpressionStatement	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"	6313:12:225195:225252	4820780	1	True				
ANR	4821951	CallExpression	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"		4820780	0					
ANR	4821952	Callee	fwrite		4820780	0					
ANR	4821953	Identifier	fwrite		4820780	0					
ANR	4821954	ArgumentList	upd -> outbuf + upd -> nbytes		4820780	1					
ANR	4821955	Argument	upd -> outbuf + upd -> nbytes		4820780	0					
ANR	4821956	AdditiveExpression	upd -> outbuf + upd -> nbytes		4820780	0		+			
ANR	4821957	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4821958	Identifier	upd		4820780	0					
ANR	4821959	Identifier	outbuf		4820780	1					
ANR	4821960	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4821961	Identifier	upd		4820780	0					
ANR	4821962	Identifier	nbytes		4820780	1					
ANR	4821963	Argument	1		4820780	1					
ANR	4821964	PrimaryExpression	1		4820780	0					
ANR	4821965	Argument	ioutbuf - upd -> nbytes		4820780	2					
ANR	4821966	AdditiveExpression	ioutbuf - upd -> nbytes		4820780	0		-			
ANR	4821967	Identifier	ioutbuf		4820780	0					
ANR	4821968	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4821969	Identifier	upd		4820780	0					
ANR	4821970	Identifier	nbytes		4820780	1					
ANR	4821971	Argument	out		4820780	3					
ANR	4821972	Identifier	out		4820780	0					
ANR	4821973	ExpressionStatement	ioutbuf = upd -> nbytes	6314:12:225266:225287	4820780	2	True				
ANR	4821974	AssignmentExpression	ioutbuf = upd -> nbytes		4820780	0		=			
ANR	4821975	Identifier	ioutbuf		4820780	0					
ANR	4821976	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4821977	Identifier	upd		4820780	0					
ANR	4821978	Identifier	nbytes		4820780	1					
ANR	4821979	ForStatement	for ( y = ybegin ; 0 > y ; y += upd -> ints [ I_NYPASS ] )		4820780	11					
ANR	4821980	ForInit	y = ybegin ;	6317:13:225314:225324	4820780	0	True				
ANR	4821981	AssignmentExpression	y = ybegin		4820780	0		=			
ANR	4821982	Identifier	y		4820780	0					
ANR	4821983	Identifier	ybegin		4820780	1					
ANR	4821984	Condition	0 > y	6317:25:225326:225330	4820780	1	True				
ANR	4821985	RelationalExpression	0 > y		4820780	0		>			
ANR	4821986	PrimaryExpression	0		4820780	0					
ANR	4821987	Identifier	y		4820780	1					
ANR	4821988	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6317:35:225336:225359	4820780	2	True	+=			
ANR	4821989	Identifier	y		4820780	0					
ANR	4821990	ArrayIndexing	upd -> ints [ I_NYPASS ]		4820780	1					
ANR	4821991	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4821992	Identifier	upd		4820780	0					
ANR	4821993	Identifier	ints		4820780	1					
ANR	4821994	Identifier	I_NYPASS		4820780	1					
ANR	4821995	CompoundStatement		194:61:6859:6859	4820780	3					
ANR	4821996	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6318:12:225376:225422	4820780	0	True				
ANR	4821997	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4820780	0		+=			
ANR	4821998	Identifier	ioutbuf		4820780	0					
ANR	4821999	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4820780	1					
ANR	4822000	Callee	upd_rle		4820780	0					
ANR	4822001	Identifier	upd_rle		4820780	0					
ANR	4822002	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4822003	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4822004	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4822005	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4822006	Identifier	upd		4820780	0					
ANR	4822007	Identifier	outbuf		4820780	1					
ANR	4822008	Identifier	ioutbuf		4820780	1					
ANR	4822009	Argument	NULL		4820780	1					
ANR	4822010	Identifier	NULL		4820780	0					
ANR	4822011	Argument	n		4820780	2					
ANR	4822012	Identifier	n		4820780	0					
ANR	4822013	ExpressionStatement	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"	6319:12:225436:225493	4820780	1	True				
ANR	4822014	CallExpression	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"		4820780	0					
ANR	4822015	Callee	fwrite		4820780	0					
ANR	4822016	Identifier	fwrite		4820780	0					
ANR	4822017	ArgumentList	upd -> outbuf + upd -> nbytes		4820780	1					
ANR	4822018	Argument	upd -> outbuf + upd -> nbytes		4820780	0					
ANR	4822019	AdditiveExpression	upd -> outbuf + upd -> nbytes		4820780	0		+			
ANR	4822020	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4822021	Identifier	upd		4820780	0					
ANR	4822022	Identifier	outbuf		4820780	1					
ANR	4822023	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4822024	Identifier	upd		4820780	0					
ANR	4822025	Identifier	nbytes		4820780	1					
ANR	4822026	Argument	1		4820780	1					
ANR	4822027	PrimaryExpression	1		4820780	0					
ANR	4822028	Argument	ioutbuf - upd -> nbytes		4820780	2					
ANR	4822029	AdditiveExpression	ioutbuf - upd -> nbytes		4820780	0		-			
ANR	4822030	Identifier	ioutbuf		4820780	0					
ANR	4822031	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4822032	Identifier	upd		4820780	0					
ANR	4822033	Identifier	nbytes		4820780	1					
ANR	4822034	Argument	out		4820780	3					
ANR	4822035	Identifier	out		4820780	0					
ANR	4822036	ExpressionStatement	ioutbuf = upd -> nbytes	6320:12:225507:225528	4820780	2	True				
ANR	4822037	AssignmentExpression	ioutbuf = upd -> nbytes		4820780	0		=			
ANR	4822038	Identifier	ioutbuf		4820780	0					
ANR	4822039	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4822040	Identifier	upd		4820780	0					
ANR	4822041	Identifier	nbytes		4820780	1					
ANR	4822042	ForStatement	for ( ; y < yend ; y += upd -> ints [ I_NYPASS ] )		4820780	12					
ANR	4822043	Condition	y < yend	6323:25:225567:225574	4820780	0	True				
ANR	4822044	RelationalExpression	y < yend		4820780	0		<			
ANR	4822045	Identifier	y		4820780	0					
ANR	4822046	Identifier	yend		4820780	1					
ANR	4822047	AssignmentExpression	y += upd -> ints [ I_NYPASS ]	6323:35:225577:225600	4820780	1	True	+=			
ANR	4822048	Identifier	y		4820780	0					
ANR	4822049	ArrayIndexing	upd -> ints [ I_NYPASS ]		4820780	1					
ANR	4822050	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4822051	Identifier	upd		4820780	0					
ANR	4822052	Identifier	ints		4820780	1					
ANR	4822053	Identifier	I_NYPASS		4820780	1					
ANR	4822054	CompoundStatement		201:12:7114:7171	4820780	2					
ANR	4822055	IdentifierDeclStatement	byte * ibytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes ;	6324:12:225617:225674	4820780	0	True				
ANR	4822056	IdentifierDecl	* ibytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		4820780	0					
ANR	4822057	IdentifierDeclType	byte *		4820780	0					
ANR	4822058	Identifier	ibytes		4820780	1					
ANR	4822059	AssignmentExpression	* ibytes = upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		4820780	2		=			
ANR	4822060	Identifier	ibytes		4820780	0					
ANR	4822061	MemberAccess	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		4820780	1					
ANR	4822062	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ]		4820780	0					
ANR	4822063	ArrayIndexing	upd -> scnbuf [ y & upd -> scnmsk ]		4820780	0					
ANR	4822064	PtrMemberAccess	upd -> scnbuf		4820780	0					
ANR	4822065	Identifier	upd		4820780	0					
ANR	4822066	Identifier	scnbuf		4820780	1					
ANR	4822067	BitAndExpression	y & upd -> scnmsk		4820780	1		&			
ANR	4822068	Identifier	y		4820780	0					
ANR	4822069	PtrMemberAccess	upd -> scnmsk		4820780	1					
ANR	4822070	Identifier	upd		4820780	0					
ANR	4822071	Identifier	scnmsk		4820780	1					
ANR	4822072	Identifier	icomp		4820780	1					
ANR	4822073	Identifier	bytes		4820780	1					
ANR	4822074	ExpressionStatement	obytes = upd -> outbuf	6325:12:225688:225708	4820780	1	True				
ANR	4822075	AssignmentExpression	obytes = upd -> outbuf		4820780	0		=			
ANR	4822076	Identifier	obytes		4820780	0					
ANR	4822077	PtrMemberAccess	upd -> outbuf		4820780	1					
ANR	4822078	Identifier	upd		4820780	0					
ANR	4822079	Identifier	outbuf		4820780	1					
ANR	4822080	ExpressionStatement	"memset ( obytes , 0 , upd -> nbytes )"	6326:12:225722:225750	4820780	2	True				
ANR	4822081	CallExpression	"memset ( obytes , 0 , upd -> nbytes )"		4820780	0					
ANR	4822082	Callee	memset		4820780	0					
ANR	4822083	Identifier	memset		4820780	0					
ANR	4822084	ArgumentList	obytes		4820780	1					
ANR	4822085	Argument	obytes		4820780	0					
ANR	4822086	Identifier	obytes		4820780	0					
ANR	4822087	Argument	0		4820780	1					
ANR	4822088	PrimaryExpression	0		4820780	0					
ANR	4822089	Argument	upd -> nbytes		4820780	2					
ANR	4822090	PtrMemberAccess	upd -> nbytes		4820780	0					
ANR	4822091	Identifier	upd		4820780	0					
ANR	4822092	Identifier	nbytes		4820780	1					
ANR	4822093	ExpressionStatement	bit = 0x80	6327:12:225764:225774	4820780	3	True				
ANR	4822094	AssignmentExpression	bit = 0x80		4820780	0		=			
ANR	4822095	Identifier	bit		4820780	0					
ANR	4822096	PrimaryExpression	0x80		4820780	1					
ANR	4822097	ForStatement	for ( x = xbegin ; x <= xend ; x += upd -> ints [ I_NXPASS ] )		4820780	4					
ANR	4822098	ForInit	x = xbegin ;	6328:16:225792:225802	4820780	0	True				
ANR	4822099	AssignmentExpression	x = xbegin		4820780	0		=			
ANR	4822100	Identifier	x		4820780	0					
ANR	4822101	Identifier	xbegin		4820780	1					
ANR	4822102	Condition	x <= xend	6328:28:225804:225812	4820780	1	True				
ANR	4822103	RelationalExpression	x <= xend		4820780	0		<=			
ANR	4822104	Identifier	x		4820780	0					
ANR	4822105	Identifier	xend		4820780	1					
ANR	4822106	AssignmentExpression	x += upd -> ints [ I_NXPASS ]	6328:39:225815:225838	4820780	2	True	+=			
ANR	4822107	Identifier	x		4820780	0					
ANR	4822108	ArrayIndexing	upd -> ints [ I_NXPASS ]		4820780	1					
ANR	4822109	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4822110	Identifier	upd		4820780	0					
ANR	4822111	Identifier	ints		4820780	1					
ANR	4822112	Identifier	I_NXPASS		4820780	1					
ANR	4822113	CompoundStatement		205:65:7338:7338	4820780	3					
ANR	4822114	IfStatement	if ( ibytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) ) )		4820780	0					
ANR	4822115	Condition	ibytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) )	6329:18:225861:225892	4820780	0	True				
ANR	4822116	BitAndExpression	ibytes [ x >> 3 ] & ( 0x80 >> ( x & 7 ) )		4820780	0		&			
ANR	4822117	ArrayIndexing	ibytes [ x >> 3 ]		4820780	0					
ANR	4822118	Identifier	ibytes		4820780	0					
ANR	4822119	ShiftExpression	x >> 3		4820780	1		>>			
ANR	4822120	Identifier	x		4820780	0					
ANR	4822121	PrimaryExpression	3		4820780	1					
ANR	4822122	ShiftExpression	0x80 >> ( x & 7 )		4820780	1		>>			
ANR	4822123	PrimaryExpression	0x80		4820780	0					
ANR	4822124	BitAndExpression	x & 7		4820780	1		&			
ANR	4822125	Identifier	x		4820780	0					
ANR	4822126	PrimaryExpression	7		4820780	1					
ANR	4822127	ExpressionStatement	* obytes |= bit	6329:52:225895:225909	4820780	1	True				
ANR	4822128	AssignmentExpression	* obytes |= bit		4820780	0		|=			
ANR	4822129	UnaryOperationExpression	* obytes		4820780	0					
ANR	4822130	UnaryOperator	*		4820780	0					
ANR	4822131	Identifier	obytes		4820780	1					
ANR	4822132	Identifier	bit		4820780	1					
ANR	4822133	IfStatement	if ( ! ( bit >>= 1 ) )		4820780	1					
ANR	4822134	Condition	! ( bit >>= 1 )	6330:18:225929:225940	4820780	0	True				
ANR	4822135	UnaryOperationExpression	! ( bit >>= 1 )		4820780	0					
ANR	4822136	UnaryOperator	!		4820780	0					
ANR	4822137	AssignmentExpression	bit >>= 1		4820780	1		>>=			
ANR	4822138	Identifier	bit		4820780	0					
ANR	4822139	PrimaryExpression	1		4820780	1					
ANR	4822140	CompoundStatement		207:32:7440:7440	4820780	1					
ANR	4822141	ExpressionStatement	obytes ++	6330:34:225945:225953	4820780	0	True				
ANR	4822142	PostIncDecOperationExpression	obytes ++		4820780	0					
ANR	4822143	Identifier	obytes		4820780	0					
ANR	4822144	IncDec	++		4820780	1					
ANR	4822145	ExpressionStatement	bit = 0x80	6330:44:225955:225965	4820780	1	True				
ANR	4822146	AssignmentExpression	bit = 0x80		4820780	0		=			
ANR	4822147	Identifier	bit		4820780	0					
ANR	4822148	PrimaryExpression	0x80		4820780	1					
ANR	4822149	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> outbuf , n )"	6332:12:225995:226048	4820780	5	True				
ANR	4822150	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , upd -> outbuf , n )"		4820780	0		+=			
ANR	4822151	Identifier	ioutbuf		4820780	0					
ANR	4822152	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , upd -> outbuf , n )"		4820780	1					
ANR	4822153	Callee	upd_rle		4820780	0					
ANR	4822154	Identifier	upd_rle		4820780	0					
ANR	4822155	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4822156	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4822157	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4822158	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4822159	Identifier	upd		4820780	0					
ANR	4822160	Identifier	outbuf		4820780	1					
ANR	4822161	Identifier	ioutbuf		4820780	1					
ANR	4822162	Argument	upd -> outbuf		4820780	1					
ANR	4822163	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4822164	Identifier	upd		4820780	0					
ANR	4822165	Identifier	outbuf		4820780	1					
ANR	4822166	Argument	n		4820780	2					
ANR	4822167	Identifier	n		4820780	0					
ANR	4822168	ExpressionStatement	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"	6333:12:226062:226119	4820780	6	True				
ANR	4822169	CallExpression	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"		4820780	0					
ANR	4822170	Callee	fwrite		4820780	0					
ANR	4822171	Identifier	fwrite		4820780	0					
ANR	4822172	ArgumentList	upd -> outbuf + upd -> nbytes		4820780	1					
ANR	4822173	Argument	upd -> outbuf + upd -> nbytes		4820780	0					
ANR	4822174	AdditiveExpression	upd -> outbuf + upd -> nbytes		4820780	0		+			
ANR	4822175	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4822176	Identifier	upd		4820780	0					
ANR	4822177	Identifier	outbuf		4820780	1					
ANR	4822178	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4822179	Identifier	upd		4820780	0					
ANR	4822180	Identifier	nbytes		4820780	1					
ANR	4822181	Argument	1		4820780	1					
ANR	4822182	PrimaryExpression	1		4820780	0					
ANR	4822183	Argument	ioutbuf - upd -> nbytes		4820780	2					
ANR	4822184	AdditiveExpression	ioutbuf - upd -> nbytes		4820780	0		-			
ANR	4822185	Identifier	ioutbuf		4820780	0					
ANR	4822186	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4822187	Identifier	upd		4820780	0					
ANR	4822188	Identifier	nbytes		4820780	1					
ANR	4822189	Argument	out		4820780	3					
ANR	4822190	Identifier	out		4820780	0					
ANR	4822191	ExpressionStatement	ioutbuf = upd -> nbytes	6334:12:226133:226154	4820780	7	True				
ANR	4822192	AssignmentExpression	ioutbuf = upd -> nbytes		4820780	0		=			
ANR	4822193	Identifier	ioutbuf		4820780	0					
ANR	4822194	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4822195	Identifier	upd		4820780	0					
ANR	4822196	Identifier	nbytes		4820780	1					
ANR	4822197	ForStatement	for ( pin = pinbot ; pin < upd -> ints [ I_PINS2WRITE ] ; ++ pin )		4820780	13					
ANR	4822198	ForInit	pin = pinbot ;	6337:13:226181:226193	4820780	0	True				
ANR	4822199	AssignmentExpression	pin = pinbot		4820780	0		=			
ANR	4822200	Identifier	pin		4820780	0					
ANR	4822201	Identifier	pinbot		4820780	1					
ANR	4822202	Condition	pin < upd -> ints [ I_PINS2WRITE ]	6337:27:226195:226223	4820780	1	True				
ANR	4822203	RelationalExpression	pin < upd -> ints [ I_PINS2WRITE ]		4820780	0		<			
ANR	4822204	Identifier	pin		4820780	0					
ANR	4822205	ArrayIndexing	upd -> ints [ I_PINS2WRITE ]		4820780	1					
ANR	4822206	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4822207	Identifier	upd		4820780	0					
ANR	4822208	Identifier	ints		4820780	1					
ANR	4822209	Identifier	I_PINS2WRITE		4820780	1					
ANR	4822210	UnaryExpression	++ pin	6337:58:226226:226230	4820780	2	True				
ANR	4822211	IncDec	++		4820780	0					
ANR	4822212	Identifier	pin		4820780	1					
ANR	4822213	CompoundStatement		214:65:7730:7730	4820780	3					
ANR	4822214	ExpressionStatement	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"	6338:12:226247:226293	4820780	0	True				
ANR	4822215	AssignmentExpression	"ioutbuf += upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4820780	0		+=			
ANR	4822216	Identifier	ioutbuf		4820780	0					
ANR	4822217	CallExpression	"upd_rle ( upd -> outbuf + ioutbuf , NULL , n )"		4820780	1					
ANR	4822218	Callee	upd_rle		4820780	0					
ANR	4822219	Identifier	upd_rle		4820780	0					
ANR	4822220	ArgumentList	upd -> outbuf + ioutbuf		4820780	1					
ANR	4822221	Argument	upd -> outbuf + ioutbuf		4820780	0					
ANR	4822222	AdditiveExpression	upd -> outbuf + ioutbuf		4820780	0		+			
ANR	4822223	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4822224	Identifier	upd		4820780	0					
ANR	4822225	Identifier	outbuf		4820780	1					
ANR	4822226	Identifier	ioutbuf		4820780	1					
ANR	4822227	Argument	NULL		4820780	1					
ANR	4822228	Identifier	NULL		4820780	0					
ANR	4822229	Argument	n		4820780	2					
ANR	4822230	Identifier	n		4820780	0					
ANR	4822231	ExpressionStatement	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"	6339:12:226307:226364	4820780	1	True				
ANR	4822232	CallExpression	"fwrite ( upd -> outbuf + upd -> nbytes , 1 , ioutbuf - upd -> nbytes , out )"		4820780	0					
ANR	4822233	Callee	fwrite		4820780	0					
ANR	4822234	Identifier	fwrite		4820780	0					
ANR	4822235	ArgumentList	upd -> outbuf + upd -> nbytes		4820780	1					
ANR	4822236	Argument	upd -> outbuf + upd -> nbytes		4820780	0					
ANR	4822237	AdditiveExpression	upd -> outbuf + upd -> nbytes		4820780	0		+			
ANR	4822238	PtrMemberAccess	upd -> outbuf		4820780	0					
ANR	4822239	Identifier	upd		4820780	0					
ANR	4822240	Identifier	outbuf		4820780	1					
ANR	4822241	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4822242	Identifier	upd		4820780	0					
ANR	4822243	Identifier	nbytes		4820780	1					
ANR	4822244	Argument	1		4820780	1					
ANR	4822245	PrimaryExpression	1		4820780	0					
ANR	4822246	Argument	ioutbuf - upd -> nbytes		4820780	2					
ANR	4822247	AdditiveExpression	ioutbuf - upd -> nbytes		4820780	0		-			
ANR	4822248	Identifier	ioutbuf		4820780	0					
ANR	4822249	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4822250	Identifier	upd		4820780	0					
ANR	4822251	Identifier	nbytes		4820780	1					
ANR	4822252	Argument	out		4820780	3					
ANR	4822253	Identifier	out		4820780	0					
ANR	4822254	ExpressionStatement	ioutbuf = upd -> nbytes	6340:12:226378:226399	4820780	2	True				
ANR	4822255	AssignmentExpression	ioutbuf = upd -> nbytes		4820780	0		=			
ANR	4822256	Identifier	ioutbuf		4820780	0					
ANR	4822257	PtrMemberAccess	upd -> nbytes		4820780	1					
ANR	4822258	Identifier	upd		4820780	0					
ANR	4822259	Identifier	nbytes		4820780	1					
ANR	4822260	IfStatement	if ( upd -> yscan < upd -> ints [ I_BEG_Y ] )		4820780	10					
ANR	4822261	Condition	upd -> yscan < upd -> ints [ I_BEG_Y ]	6347:6:226587:226617	4820780	0	True				
ANR	4822262	RelationalExpression	upd -> yscan < upd -> ints [ I_BEG_Y ]		4820780	0		<			
ANR	4822263	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4822264	Identifier	upd		4820780	0					
ANR	4822265	Identifier	yscan		4820780	1					
ANR	4822266	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4820780	1					
ANR	4822267	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4822268	Identifier	upd		4820780	0					
ANR	4822269	Identifier	ints		4820780	1					
ANR	4822270	Identifier	I_BEG_Y		4820780	1					
ANR	4822271	CompoundStatement		224:39:8117:8117	4820780	1					
ANR	4822272	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]	6348:6:226628:226682	4820780	0	True				
ANR	4822273	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		4820780	0		+=			
ANR	4822274	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4822275	Identifier	upd		4820780	0					
ANR	4822276	Identifier	yscan		4820780	1					
ANR	4822277	ArrayIndexing	upd -> int_a [ IA_BEG_DY ] . data [ upd -> ipass ++ ]		4820780	1					
ANR	4822278	MemberAccess	upd -> int_a [ IA_BEG_DY ] . data		4820780	0					
ANR	4822279	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4820780	0					
ANR	4822280	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4822281	Identifier	upd		4820780	0					
ANR	4822282	Identifier	int_a		4820780	1					
ANR	4822283	Identifier	IA_BEG_DY		4820780	1					
ANR	4822284	Identifier	data		4820780	1					
ANR	4822285	PostIncDecOperationExpression	upd -> ipass ++		4820780	1					
ANR	4822286	PtrMemberAccess	upd -> ipass		4820780	0					
ANR	4822287	Identifier	upd		4820780	0					
ANR	4822288	Identifier	ipass		4820780	1					
ANR	4822289	IncDec	++		4820780	1					
ANR	4822290	IfStatement	if ( upd -> ints [ I_BEG_Y ] <= upd -> yscan )		4820780	1					
ANR	4822291	Condition	upd -> ints [ I_BEG_Y ] <= upd -> yscan	6349:14:226698:226729	4820780	0	True				
ANR	4822292	RelationalExpression	upd -> ints [ I_BEG_Y ] <= upd -> yscan		4820780	0		<=			
ANR	4822293	ArrayIndexing	upd -> ints [ I_BEG_Y ]		4820780	0					
ANR	4822294	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4822295	Identifier	upd		4820780	0					
ANR	4822296	Identifier	ints		4820780	1					
ANR	4822297	Identifier	I_BEG_Y		4820780	1					
ANR	4822298	PtrMemberAccess	upd -> yscan		4820780	1					
ANR	4822299	Identifier	upd		4820780	0					
ANR	4822300	Identifier	yscan		4820780	1					
ANR	4822301	ExpressionStatement	upd -> ipass = 0	6349:48:226732:226746	4820780	1	True				
ANR	4822302	AssignmentExpression	upd -> ipass = 0		4820780	0		=			
ANR	4822303	PtrMemberAccess	upd -> ipass		4820780	0					
ANR	4822304	Identifier	upd		4820780	0					
ANR	4822305	Identifier	ipass		4820780	1					
ANR	4822306	PrimaryExpression	0		4820780	1					
ANR	4822307	ElseStatement	else		4820780	0					
ANR	4822308	IfStatement	if ( upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass )		4820780	0					
ANR	4822309	Condition	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass	6350:14:226762:226801	4820780	0	True				
ANR	4822310	RelationalExpression	upd -> int_a [ IA_BEG_DY ] . size <= upd -> ipass		4820780	0		<=			
ANR	4822311	MemberAccess	upd -> int_a [ IA_BEG_DY ] . size		4820780	0					
ANR	4822312	ArrayIndexing	upd -> int_a [ IA_BEG_DY ]		4820780	0					
ANR	4822313	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4822314	Identifier	upd		4820780	0					
ANR	4822315	Identifier	int_a		4820780	1					
ANR	4822316	Identifier	IA_BEG_DY		4820780	1					
ANR	4822317	Identifier	size		4820780	1					
ANR	4822318	PtrMemberAccess	upd -> ipass		4820780	1					
ANR	4822319	Identifier	upd		4820780	0					
ANR	4822320	Identifier	ipass		4820780	1					
ANR	4822321	ExpressionStatement	upd -> ipass = 0	6350:56:226804:226818	4820780	1	True				
ANR	4822322	AssignmentExpression	upd -> ipass = 0		4820780	0		=			
ANR	4822323	PtrMemberAccess	upd -> ipass		4820780	0					
ANR	4822324	Identifier	upd		4820780	0					
ANR	4822325	Identifier	ipass		4820780	1					
ANR	4822326	PrimaryExpression	0		4820780	1					
ANR	4822327	ElseStatement	else		4820780	0					
ANR	4822328	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4820780	0					
ANR	4822329	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6351:13:226833:226864	4820780	0	True				
ANR	4822330	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4820780	0		>=			
ANR	4822331	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4822332	Identifier	upd		4820780	0					
ANR	4822333	Identifier	yscan		4820780	1					
ANR	4822334	ArrayIndexing	upd -> ints [ I_END_Y ]		4820780	1					
ANR	4822335	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4822336	Identifier	upd		4820780	0					
ANR	4822337	Identifier	ints		4820780	1					
ANR	4822338	Identifier	I_END_Y		4820780	1					
ANR	4822339	CompoundStatement		228:47:8364:8364	4820780	1					
ANR	4822340	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]	6352:6:226875:226929	4820780	0	True				
ANR	4822341	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		4820780	0		+=			
ANR	4822342	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4822343	Identifier	upd		4820780	0					
ANR	4822344	Identifier	yscan		4820780	1					
ANR	4822345	ArrayIndexing	upd -> int_a [ IA_END_DY ] . data [ upd -> ipass ++ ]		4820780	1					
ANR	4822346	MemberAccess	upd -> int_a [ IA_END_DY ] . data		4820780	0					
ANR	4822347	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4820780	0					
ANR	4822348	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4822349	Identifier	upd		4820780	0					
ANR	4822350	Identifier	int_a		4820780	1					
ANR	4822351	Identifier	IA_END_DY		4820780	1					
ANR	4822352	Identifier	data		4820780	1					
ANR	4822353	PostIncDecOperationExpression	upd -> ipass ++		4820780	1					
ANR	4822354	PtrMemberAccess	upd -> ipass		4820780	0					
ANR	4822355	Identifier	upd		4820780	0					
ANR	4822356	Identifier	ipass		4820780	1					
ANR	4822357	IncDec	++		4820780	1					
ANR	4822358	IfStatement	if ( upd -> int_a [ IA_END_DY ] . size <= upd -> ipass )		4820780	1					
ANR	4822359	Condition	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass	6353:9:226940:226979	4820780	0	True				
ANR	4822360	RelationalExpression	upd -> int_a [ IA_END_DY ] . size <= upd -> ipass		4820780	0		<=			
ANR	4822361	MemberAccess	upd -> int_a [ IA_END_DY ] . size		4820780	0					
ANR	4822362	ArrayIndexing	upd -> int_a [ IA_END_DY ]		4820780	0					
ANR	4822363	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4822364	Identifier	upd		4820780	0					
ANR	4822365	Identifier	int_a		4820780	1					
ANR	4822366	Identifier	IA_END_DY		4820780	1					
ANR	4822367	Identifier	size		4820780	1					
ANR	4822368	PtrMemberAccess	upd -> ipass		4820780	1					
ANR	4822369	Identifier	upd		4820780	0					
ANR	4822370	Identifier	ipass		4820780	1					
ANR	4822371	ExpressionStatement	upd -> ipass = 0	6353:51:226982:226996	4820780	1	True				
ANR	4822372	AssignmentExpression	upd -> ipass = 0		4820780	0		=			
ANR	4822373	PtrMemberAccess	upd -> ipass		4820780	0					
ANR	4822374	Identifier	upd		4820780	0					
ANR	4822375	Identifier	ipass		4820780	1					
ANR	4822376	PrimaryExpression	0		4820780	1					
ANR	4822377	ElseStatement	else		4820780	0					
ANR	4822378	CompoundStatement		231:10:8505:8505	4820780	0					
ANR	4822379	ExpressionStatement	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]	6355:6:227016:227070	4820780	0	True				
ANR	4822380	AssignmentExpression	upd -> yscan += upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		4820780	0		+=			
ANR	4822381	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4822382	Identifier	upd		4820780	0					
ANR	4822383	Identifier	yscan		4820780	1					
ANR	4822384	ArrayIndexing	upd -> int_a [ IA_STD_DY ] . data [ upd -> ipass ++ ]		4820780	1					
ANR	4822385	MemberAccess	upd -> int_a [ IA_STD_DY ] . data		4820780	0					
ANR	4822386	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4820780	0					
ANR	4822387	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4822388	Identifier	upd		4820780	0					
ANR	4822389	Identifier	int_a		4820780	1					
ANR	4822390	Identifier	IA_STD_DY		4820780	1					
ANR	4822391	Identifier	data		4820780	1					
ANR	4822392	PostIncDecOperationExpression	upd -> ipass ++		4820780	1					
ANR	4822393	PtrMemberAccess	upd -> ipass		4820780	0					
ANR	4822394	Identifier	upd		4820780	0					
ANR	4822395	Identifier	ipass		4820780	1					
ANR	4822396	IncDec	++		4820780	1					
ANR	4822397	IfStatement	if ( upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass )		4820780	1					
ANR	4822398	Condition	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass	6356:9:227081:227120	4820780	0	True				
ANR	4822399	RelationalExpression	upd -> int_a [ IA_STD_DY ] . size <= upd -> ipass		4820780	0		<=			
ANR	4822400	MemberAccess	upd -> int_a [ IA_STD_DY ] . size		4820780	0					
ANR	4822401	ArrayIndexing	upd -> int_a [ IA_STD_DY ]		4820780	0					
ANR	4822402	PtrMemberAccess	upd -> int_a		4820780	0					
ANR	4822403	Identifier	upd		4820780	0					
ANR	4822404	Identifier	int_a		4820780	1					
ANR	4822405	Identifier	IA_STD_DY		4820780	1					
ANR	4822406	Identifier	size		4820780	1					
ANR	4822407	PtrMemberAccess	upd -> ipass		4820780	1					
ANR	4822408	Identifier	upd		4820780	0					
ANR	4822409	Identifier	ipass		4820780	1					
ANR	4822410	ExpressionStatement	upd -> ipass = 0	6356:51:227123:227137	4820780	1	True				
ANR	4822411	AssignmentExpression	upd -> ipass = 0		4820780	0		=			
ANR	4822412	PtrMemberAccess	upd -> ipass		4820780	0					
ANR	4822413	Identifier	upd		4820780	0					
ANR	4822414	Identifier	ipass		4820780	1					
ANR	4822415	PrimaryExpression	0		4820780	1					
ANR	4822416	IfStatement	if ( upd -> yscan >= upd -> ints [ I_END_Y ] )		4820780	2					
ANR	4822417	Condition	upd -> yscan >= upd -> ints [ I_END_Y ]	6357:9:227148:227179	4820780	0	True				
ANR	4822418	RelationalExpression	upd -> yscan >= upd -> ints [ I_END_Y ]		4820780	0		>=			
ANR	4822419	PtrMemberAccess	upd -> yscan		4820780	0					
ANR	4822420	Identifier	upd		4820780	0					
ANR	4822421	Identifier	yscan		4820780	1					
ANR	4822422	ArrayIndexing	upd -> ints [ I_END_Y ]		4820780	1					
ANR	4822423	PtrMemberAccess	upd -> ints		4820780	0					
ANR	4822424	Identifier	upd		4820780	0					
ANR	4822425	Identifier	ints		4820780	1					
ANR	4822426	Identifier	I_END_Y		4820780	1					
ANR	4822427	ExpressionStatement	upd -> ipass = 0	6357:51:227190:227204	4820780	1	True				
ANR	4822428	AssignmentExpression	upd -> ipass = 0		4820780	0		=			
ANR	4822429	PtrMemberAccess	upd -> ipass		4820780	0					
ANR	4822430	Identifier	upd		4820780	0					
ANR	4822431	Identifier	ipass		4820780	1					
ANR	4822432	PrimaryExpression	0		4820780	1					
ANR	4822433	ReturnStatement	return 0 ;	6360:3:227215:227223	4820780	11	True				
ANR	4822434	PrimaryExpression	0		4820780	0					
ANR	4822435	ReturnType	static int		4820780	1					
ANR	4822436	Identifier	upd_wrtescp2x		4820780	2					
ANR	4822437	ParameterList	"upd_p upd , FILE * out"		4820780	3					
ANR	4822438	Parameter	upd_p upd	6123:14:218480:218488	4820780	0	True				
ANR	4822439	ParameterType	upd_p		4820780	0					
ANR	4822440	Identifier	upd		4820780	1					
ANR	4822441	Parameter	FILE * out	6123:25:218491:218499	4820780	1	True				
ANR	4822442	ParameterType	FILE *		4820780	0					
ANR	4822443	Identifier	out		4820780	1					
ANR	4822444	CFGEntryNode	ENTRY		4820780		True				
ANR	4822445	CFGExitNode	EXIT		4820780		True				
ANR	4822446	Symbol	I_PINS2WRITE		4820780						
ANR	4822447	Symbol	* upd -> int_a		4820780						
ANR	4822448	Symbol	* x		4820780						
ANR	4822449	Symbol	* y		4820780						
ANR	4822450	Symbol	* * IA_STD_DY		4820780						
ANR	4822451	Symbol	* I_YSTEP		4820780						
ANR	4822452	Symbol	pinbot		4820780						
ANR	4822453	Symbol	bit		4820780						
ANR	4822454	Symbol	upd -> int_a [ IA_STD_DY ] . data		4820780						
ANR	4822455	Symbol	icomp		4820780						
ANR	4822456	Symbol	upd -> yscan		4820780						
ANR	4822457	Symbol	scan -> xend		4820780						
ANR	4822458	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		4820780						
ANR	4822459	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . data		4820780						
ANR	4822460	Symbol	* scan		4820780						
ANR	4822461	Symbol	* IA_BEG_IX		4820780						
ANR	4822462	Symbol	upd -> nbytes		4820780						
ANR	4822463	Symbol	* upd -> int_a [ IA_BEG_DY ] . data		4820780						
ANR	4822464	Symbol	upd -> int_a [ IA_BEG_DY ] . data		4820780						
ANR	4822465	Symbol	* upd -> scnbuf		4820780						
ANR	4822466	Symbol	upd -> string_a [ SA_SETCOMP ] . data		4820780						
ANR	4822467	Symbol	upd		4820780						
ANR	4822468	Symbol	* SA_WRITECOMP		4820780						
ANR	4822469	Symbol	I_NXPASS		4820780						
ANR	4822470	Symbol	* I_NYPASS		4820780						
ANR	4822471	Symbol	* * SA_SETCOMP		4820780						
ANR	4822472	Symbol	B_YABS		4820780						
ANR	4822473	Symbol	scan [ icomp ] . xbegin		4820780						
ANR	4822474	Symbol	* IA_BEGBOT		4820780						
ANR	4822475	Symbol	* * scan		4820780						
ANR	4822476	Symbol	* I_BEG_Y		4820780						
ANR	4822477	Symbol	* upd -> ipass		4820780						
ANR	4822478	Symbol	* upd -> outbuf		4820780						
ANR	4822479	Symbol	* IA_END_IX		4820780						
ANR	4822480	Symbol	* * icomp		4820780						
ANR	4822481	Symbol	ixpass		4820780						
ANR	4822482	Symbol	upd -> pwidth		4820780						
ANR	4822483	Symbol	* scan [ icomp ] . xend		4820780						
ANR	4822484	Symbol	scan		4820780						
ANR	4822485	Symbol	upd -> strings		4820780						
ANR	4822486	Symbol	* IA_STD_IX		4820780						
ANR	4822487	Symbol	* * IA_BEGBOT		4820780						
ANR	4822488	Symbol	upd -> int_a [ IA_STD_DY ] . size		4820780						
ANR	4822489	Symbol	I_BEG_Y		4820780						
ANR	4822490	Symbol	out		4820780						
ANR	4822491	Symbol	upd -> flags		4820780						
ANR	4822492	Symbol	upd_rle		4820780						
ANR	4822493	Symbol	* upd -> string_a [ SA_SETCOMP ] . data		4820780						
ANR	4822494	Symbol	* * y		4820780						
ANR	4822495	Symbol	* upd		4820780						
ANR	4822496	Symbol	* upd -> int_a [ IA_END_IX ] . data		4820780						
ANR	4822497	Symbol	* S_XMOVE		4820780						
ANR	4822498	Symbol	xend		4820780						
ANR	4822499	Symbol	obytes		4820780						
ANR	4822500	Symbol	* upd -> scnmsk		4820780						
ANR	4822501	Symbol	IA_BEG_IX		4820780						
ANR	4822502	Symbol	upd -> ocomp		4820780						
ANR	4822503	Symbol	* upd -> strings		4820780						
ANR	4822504	Symbol	* I_XOFS		4820780						
ANR	4822505	Symbol	upd -> int_a [ IA_BEG_IX ] . data		4820780						
ANR	4822506	Symbol	upd -> scnbuf [ y & upd -> scnmsk ] [ icomp ] . bytes		4820780						
ANR	4822507	Symbol	* upd -> int_a [ IA_END_DY ] . data		4820780						
ANR	4822508	Symbol	upd -> strings [ S_YMOVE ] . size		4820780						
ANR	4822509	Symbol	* S_XSTEP		4820780						
ANR	4822510	Symbol	* scan [ icomp ] . xbegin		4820780						
ANR	4822511	Symbol	IA_BEGBOT		4820780						
ANR	4822512	Symbol	upd -> int_a [ IA_END_DY ] . data		4820780						
ANR	4822513	Symbol	ibytes		4820780						
ANR	4822514	Symbol	xbegin		4820780						
ANR	4822515	Symbol	I_XSTEP		4820780						
ANR	4822516	Symbol	* * upd -> scnbuf		4820780						
ANR	4822517	Symbol	n		4820780						
ANR	4822518	Symbol	* * upd -> int_a		4820780						
ANR	4822519	Symbol	* * IA_STD_IX		4820780						
ANR	4822520	Symbol	I_YOFS		4820780						
ANR	4822521	Symbol	IA_STD_IX		4820780						
ANR	4822522	Symbol	upd -> yprinter		4820780						
ANR	4822523	Symbol	ioutbuf		4820780						
ANR	4822524	Symbol	IA_END_IX		4820780						
ANR	4822525	Symbol	S_YMOVE		4820780						
ANR	4822526	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		4820780						
ANR	4822527	Symbol	S_YSTEP		4820780						
ANR	4822528	Symbol	x		4820780						
ANR	4822529	Symbol	y		4820780						
ANR	4822530	Symbol	~7		4820780						
ANR	4822531	Symbol	* I_END_Y		4820780						
ANR	4822532	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4820780						
ANR	4822533	Symbol	* * upd		4820780						
ANR	4822534	Symbol	* * IA_END_IX		4820780						
ANR	4822535	Symbol	* * upd -> scnmsk		4820780						
ANR	4822536	Symbol	S_XMOVE		4820780						
ANR	4822537	Symbol	* upd -> string_a		4820780						
ANR	4822538	Symbol	* IA_BEG_DY		4820780						
ANR	4822539	Symbol	SA_SETCOMP		4820780						
ANR	4822540	Symbol	* * IA_ENDTOP		4820780						
ANR	4822541	Symbol	upd -> icomp		4820780						
ANR	4822542	Symbol	* * IA_END_DY		4820780						
ANR	4822543	Symbol	upd -> ipass		4820780						
ANR	4822544	Symbol	upd -> strings [ S_YSTEP ] . size		4820780						
ANR	4822545	Symbol	* SA_SETCOMP		4820780						
ANR	4822546	Symbol	upd -> strings [ S_XSTEP ] . data		4820780						
ANR	4822547	Symbol	* upd -> int_a [ IA_BEGBOT ] . data		4820780						
ANR	4822548	Symbol	* * IA_BEG_IX		4820780						
ANR	4822549	Symbol	* I_NXPASS		4820780						
ANR	4822550	Symbol	upd -> strings [ S_XMOVE ] . data		4820780						
ANR	4822551	Symbol	upd -> int_a		4820780						
ANR	4822552	Symbol	pin		4820780						
ANR	4822553	Symbol	* upd -> int_a [ IA_STD_IX ] . data		4820780						
ANR	4822554	Symbol	* I_BEGSKIP		4820780						
ANR	4822555	Symbol	* I_XSTEP		4820780						
ANR	4822556	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . size		4820780						
ANR	4822557	Symbol	upd -> int_a [ IA_ENDTOP ] . data		4820780						
ANR	4822558	Symbol	NULL		4820780						
ANR	4822559	Symbol	* upd -> int_a [ IA_ENDTOP ] . data		4820780						
ANR	4822560	Symbol	* scan -> xend		4820780						
ANR	4822561	Symbol	* upd -> int_a [ IA_BEG_IX ] . data		4820780						
ANR	4822562	Symbol	SA_WRITECOMP		4820780						
ANR	4822563	Symbol	upd -> int_a [ IA_END_IX ] . data		4820780						
ANR	4822564	Symbol	upd -> xprinter		4820780						
ANR	4822565	Symbol	upd -> int_a [ IA_STD_IX ] . data		4820780						
ANR	4822566	Symbol	pintop		4820780						
ANR	4822567	Symbol	upd -> ints		4820780						
ANR	4822568	Symbol	* ixpass		4820780						
ANR	4822569	Symbol	upd -> string_a [ SA_SETCOMP ] . data [ icomp ] . size		4820780						
ANR	4822570	Symbol	upd -> strings [ S_XSTEP ] . size		4820780						
ANR	4822571	Symbol	upd -> strings [ S_YSTEP ] . data		4820780						
ANR	4822572	Symbol	I_XOFS		4820780						
ANR	4822573	Symbol	I_BEGSKIP		4820780						
ANR	4822574	Symbol	upd -> int_a [ IA_END_DY ] . size		4820780						
ANR	4822575	Symbol	* obytes		4820780						
ANR	4822576	Symbol	B_XABS		4820780						
ANR	4822577	Symbol	* icomp		4820780						
ANR	4822578	Symbol	upd -> int_a [ IA_BEG_DY ] . size		4820780						
ANR	4822579	Symbol	* IA_ENDTOP		4820780						
ANR	4822580	Symbol	upd -> strings [ S_YMOVE ] . data		4820780						
ANR	4822581	Symbol	* IA_END_DY		4820780						
ANR	4822582	Symbol	* IA_STD_DY		4820780						
ANR	4822583	Symbol	I_NYPASS		4820780						
ANR	4822584	Symbol	* * upd -> string_a		4820780						
ANR	4822585	Symbol	IA_STD_DY		4820780						
ANR	4822586	Symbol	* ibytes		4820780						
ANR	4822587	Symbol	scan [ icomp ] . xend		4820780						
ANR	4822588	Symbol	ybegin		4820780						
ANR	4822589	Symbol	* * SA_WRITECOMP		4820780						
ANR	4822590	Symbol	* I_YOFS		4820780						
ANR	4822591	Symbol	* S_YMOVE		4820780						
ANR	4822592	Symbol	upd -> scnmsk		4820780						
ANR	4822593	Symbol	* * * upd		4820780						
ANR	4822594	Symbol	upd -> strings [ S_XMOVE ] . size		4820780						
ANR	4822595	Symbol	IA_ENDTOP		4820780						
ANR	4822596	Symbol	IA_END_DY		4820780						
ANR	4822597	Symbol	I_END_Y		4820780						
ANR	4822598	Symbol	* S_YSTEP		4820780						
ANR	4822599	Symbol	upd -> string_a		4820780						
ANR	4822600	Symbol	* upd -> ints		4820780						
ANR	4822601	Symbol	* I_PINS2WRITE		4820780						
ANR	4822602	Symbol	upd -> scnbuf		4820780						
ANR	4822603	Symbol	upd -> string_a [ SA_SETCOMP ] . size		4820780						
ANR	4822604	Symbol	S_XSTEP		4820780						
ANR	4822605	Symbol	yend		4820780						
ANR	4822606	Symbol	IA_BEG_DY		4820780						
ANR	4822607	Symbol	* upd -> int_a [ IA_STD_DY ] . data		4820780						
ANR	4822608	Symbol	upd -> outbuf		4820780						
ANR	4822609	Symbol	upd -> int_a [ IA_BEGBOT ] . data		4820780						
ANR	4822610	Symbol	* * IA_BEG_DY		4820780						
ANR	4822611	Symbol	I_YSTEP		4820780						
ANR	4822612	Function	upd_rle	6367:0:227451:228929							
ANR	4822613	FunctionDef	"upd_rle (byte * out , const byte * in , int nbytes)"		4822612	0					
ANR	4822614	CompoundStatement		6369:0:227507:228929	4822612	0					
ANR	4822615	IdentifierDeclStatement	int used = 0 ;	6371:3:227513:227525	4822612	0	True				
ANR	4822616	IdentifierDecl	used = 0		4822612	0					
ANR	4822617	IdentifierDeclType	int		4822612	0					
ANR	4822618	Identifier	used		4822612	1					
ANR	4822619	AssignmentExpression	used = 0		4822612	2		=			
ANR	4822620	Identifier	used		4822612	0					
ANR	4822621	PrimaryExpression	0		4822612	1					
ANR	4822622	IdentifierDeclStatement	"int crun , cdata ;"	6372:3:227530:227544	4822612	1	True				
ANR	4822623	IdentifierDecl	crun		4822612	0					
ANR	4822624	IdentifierDeclType	int		4822612	0					
ANR	4822625	Identifier	crun		4822612	1					
ANR	4822626	IdentifierDecl	cdata		4822612	1					
ANR	4822627	IdentifierDeclType	int		4822612	0					
ANR	4822628	Identifier	cdata		4822612	1					
ANR	4822629	IdentifierDeclStatement	byte run ;	6373:3:227549:227557	4822612	2	True				
ANR	4822630	IdentifierDecl	run		4822612	0					
ANR	4822631	IdentifierDeclType	byte		4822612	0					
ANR	4822632	Identifier	run		4822612	1					
ANR	4822633	IfStatement	if ( in != NULL )		4822612	3					
ANR	4822634	Condition	in != NULL	6375:6:227566:227575	4822612	0	True				
ANR	4822635	EqualityExpression	in != NULL		4822612	0		!=			
ANR	4822636	Identifier	in		4822612	0					
ANR	4822637	Identifier	NULL		4822612	1					
ANR	4822638	CompoundStatement		7:18:70:70	4822612	1					
ANR	4822639	ExpressionStatement	crun = 1	6377:6:227606:227614	4822612	0	True				
ANR	4822640	AssignmentExpression	crun = 1		4822612	0		=			
ANR	4822641	Identifier	crun		4822612	0					
ANR	4822642	PrimaryExpression	1		4822612	1					
ANR	4822643	WhileStatement	while ( nbytes > 0 )		4822612	1					
ANR	4822644	Condition	nbytes > 0	6379:12:227629:227638	4822612	0	True				
ANR	4822645	RelationalExpression	nbytes > 0		4822612	0		>			
ANR	4822646	Identifier	nbytes		4822612	0					
ANR	4822647	PrimaryExpression	0		4822612	1					
ANR	4822648	CompoundStatement		11:24:133:133	4822612	1					
ANR	4822649	ExpressionStatement	run = in [ 0 ]	6381:9:227681:227692	4822612	0	True				
ANR	4822650	AssignmentExpression	run = in [ 0 ]		4822612	0		=			
ANR	4822651	Identifier	run		4822612	0					
ANR	4822652	ArrayIndexing	in [ 0 ]		4822612	1					
ANR	4822653	Identifier	in		4822612	0					
ANR	4822654	PrimaryExpression	0		4822612	1					
ANR	4822655	WhileStatement	while ( ( nbytes > crun ) && ( run == in [ crun ] ) )		4822612	1					
ANR	4822656	Condition	( nbytes > crun ) && ( run == in [ crun ] )	6383:15:227710:227745	4822612	0	True				
ANR	4822657	AndExpression	( nbytes > crun ) && ( run == in [ crun ] )		4822612	0		&&			
ANR	4822658	RelationalExpression	nbytes > crun		4822612	0		>			
ANR	4822659	Identifier	nbytes		4822612	0					
ANR	4822660	Identifier	crun		4822612	1					
ANR	4822661	EqualityExpression	run == in [ crun ]		4822612	1		==			
ANR	4822662	Identifier	run		4822612	0					
ANR	4822663	ArrayIndexing	in [ crun ]		4822612	1					
ANR	4822664	Identifier	in		4822612	0					
ANR	4822665	Identifier	crun		4822612	1					
ANR	4822666	IfStatement	if ( ++ crun == 128 )		4822612	1					
ANR	4822667	Condition	++ crun == 128	6383:56:227751:227763	4822612	0	True				
ANR	4822668	EqualityExpression	++ crun == 128		4822612	0		==			
ANR	4822669	UnaryExpression	++ crun		4822612	0					
ANR	4822670	IncDec	++		4822612	0					
ANR	4822671	Identifier	crun		4822612	1					
ANR	4822672	PrimaryExpression	128		4822612	1					
ANR	4822673	BreakStatement	break ;	6383:71:227766:227771	4822612	1	True				
ANR	4822674	IfStatement	if ( ( crun > 2 ) || ( crun == nbytes ) )		4822612	2					
ANR	4822675	Condition	( crun > 2 ) || ( crun == nbytes )	6385:12:227786:227815	4822612	0	True				
ANR	4822676	OrExpression	( crun > 2 ) || ( crun == nbytes )		4822612	0		||			
ANR	4822677	RelationalExpression	crun > 2		4822612	0		>			
ANR	4822678	Identifier	crun		4822612	0					
ANR	4822679	PrimaryExpression	2		4822612	1					
ANR	4822680	EqualityExpression	crun == nbytes		4822612	1		==			
ANR	4822681	Identifier	crun		4822612	0					
ANR	4822682	Identifier	nbytes		4822612	1					
ANR	4822683	CompoundStatement		17:44:310:310	4822612	1					
ANR	4822684	ExpressionStatement	* out ++ = ( 257 - crun ) & 0xff	6387:12:227852:227881	4822612	0	True				
ANR	4822685	AssignmentExpression	* out ++ = ( 257 - crun ) & 0xff		4822612	0		=			
ANR	4822686	UnaryOperationExpression	* out ++		4822612	0					
ANR	4822687	UnaryOperator	*		4822612	0					
ANR	4822688	PostIncDecOperationExpression	out ++		4822612	1					
ANR	4822689	Identifier	out		4822612	0					
ANR	4822690	IncDec	++		4822612	1					
ANR	4822691	BitAndExpression	( 257 - crun ) & 0xff		4822612	1		&			
ANR	4822692	AdditiveExpression	257 - crun		4822612	0		-			
ANR	4822693	PrimaryExpression	257		4822612	0					
ANR	4822694	Identifier	crun		4822612	1					
ANR	4822695	PrimaryExpression	0xff		4822612	1					
ANR	4822696	ExpressionStatement	* out ++ = run	6387:43:227883:227895	4822612	1	True				
ANR	4822697	AssignmentExpression	* out ++ = run		4822612	0		=			
ANR	4822698	UnaryOperationExpression	* out ++		4822612	0					
ANR	4822699	UnaryOperator	*		4822612	0					
ANR	4822700	PostIncDecOperationExpression	out ++		4822612	1					
ANR	4822701	Identifier	out		4822612	0					
ANR	4822702	IncDec	++		4822612	1					
ANR	4822703	Identifier	run		4822612	1					
ANR	4822704	ExpressionStatement	used += 2	6387:57:227897:227906	4822612	2	True				
ANR	4822705	AssignmentExpression	used += 2		4822612	0		+=			
ANR	4822706	Identifier	used		4822612	0					
ANR	4822707	PrimaryExpression	2		4822612	1					
ANR	4822708	ExpressionStatement	nbytes -= crun	6389:12:227921:227935	4822612	3	True				
ANR	4822709	AssignmentExpression	nbytes -= crun		4822612	0		-=			
ANR	4822710	Identifier	nbytes		4822612	0					
ANR	4822711	Identifier	crun		4822612	1					
ANR	4822712	ExpressionStatement	in += crun	6389:28:227937:227950	4822612	4	True				
ANR	4822713	AssignmentExpression	in += crun		4822612	0		+=			
ANR	4822714	Identifier	in		4822612	0					
ANR	4822715	Identifier	crun		4822612	1					
ANR	4822716	ExpressionStatement	crun = 1	6390:12:227964:227972	4822612	5	True				
ANR	4822717	AssignmentExpression	crun = 1		4822612	0		=			
ANR	4822718	Identifier	crun		4822612	0					
ANR	4822719	PrimaryExpression	1		4822612	1					
ANR	4822720	ElseStatement	else		4822612	0					
ANR	4822721	CompoundStatement		24:16:483:483	4822612	0					
ANR	4822722	ForStatement	for ( cdata = crun ; ( nbytes > cdata ) && ( crun < 4 ) ; )		4822612	0					
ANR	4822723	ForInit	cdata = crun ;	6394:16:228059:228071	4822612	0	True				
ANR	4822724	AssignmentExpression	cdata = crun		4822612	0		=			
ANR	4822725	Identifier	cdata		4822612	0					
ANR	4822726	Identifier	crun		4822612	1					
ANR	4822727	Condition	( nbytes > cdata ) && ( crun < 4 )	6394:30:228073:228102	4822612	1	True				
ANR	4822728	AndExpression	( nbytes > cdata ) && ( crun < 4 )		4822612	0		&&			
ANR	4822729	RelationalExpression	nbytes > cdata		4822612	0		>			
ANR	4822730	Identifier	nbytes		4822612	0					
ANR	4822731	Identifier	cdata		4822612	1					
ANR	4822732	RelationalExpression	crun < 4		4822612	1		<			
ANR	4822733	Identifier	crun		4822612	0					
ANR	4822734	PrimaryExpression	4		4822612	1					
ANR	4822735	CompoundStatement		26:63:598:598	4822612	2					
ANR	4822736	IfStatement	if ( run == in [ cdata ] )		4822612	0					
ANR	4822737	Condition	run == in [ cdata ]	6395:18:228126:228142	4822612	0	True				
ANR	4822738	EqualityExpression	run == in [ cdata ]		4822612	0		==			
ANR	4822739	Identifier	run		4822612	0					
ANR	4822740	ArrayIndexing	in [ cdata ]		4822612	1					
ANR	4822741	Identifier	in		4822612	0					
ANR	4822742	Identifier	cdata		4822612	1					
ANR	4822743	ExpressionStatement	crun += 1	6395:37:228145:228154	4822612	1	True				
ANR	4822744	AssignmentExpression	crun += 1		4822612	0		+=			
ANR	4822745	Identifier	crun		4822612	0					
ANR	4822746	PrimaryExpression	1		4822612	1					
ANR	4822747	ElseStatement	else		4822612	0					
ANR	4822748	ExpressionStatement	"run = in [ cdata ] , crun = 1"	6396:20:228176:228202	4822612	0	True				
ANR	4822749	Expression	"run = in [ cdata ] , crun = 1"		4822612	0					
ANR	4822750	AssignmentExpression	run = in [ cdata ]		4822612	0		=			
ANR	4822751	Identifier	run		4822612	0					
ANR	4822752	ArrayIndexing	in [ cdata ]		4822612	1					
ANR	4822753	Identifier	in		4822612	0					
ANR	4822754	Identifier	cdata		4822612	1					
ANR	4822755	AssignmentExpression	crun = 1		4822612	1		=			
ANR	4822756	Identifier	crun		4822612	0					
ANR	4822757	PrimaryExpression	1		4822612	1					
ANR	4822758	IfStatement	if ( ++ cdata == 128 )		4822612	1					
ANR	4822759	Condition	++ cdata == 128	6397:18:228222:228235	4822612	0	True				
ANR	4822760	EqualityExpression	++ cdata == 128		4822612	0		==			
ANR	4822761	UnaryExpression	++ cdata		4822612	0					
ANR	4822762	IncDec	++		4822612	0					
ANR	4822763	Identifier	cdata		4822612	1					
ANR	4822764	PrimaryExpression	128		4822612	1					
ANR	4822765	BreakStatement	break ;	6397:34:228238:228243	4822612	1	True				
ANR	4822766	IfStatement	if ( crun < 3 )		4822612	1					
ANR	4822767	Condition	crun < 3	6400:15:228275:228282	4822612	0	True				
ANR	4822768	RelationalExpression	crun < 3		4822612	0		<			
ANR	4822769	Identifier	crun		4822612	0					
ANR	4822770	PrimaryExpression	3		4822612	1					
ANR	4822771	ExpressionStatement	crun = 0	6400:25:228285:228295	4822612	1	True				
ANR	4822772	AssignmentExpression	crun = 0		4822612	0		=			
ANR	4822773	Identifier	crun		4822612	0					
ANR	4822774	PrimaryExpression	0		4822612	1					
ANR	4822775	ElseStatement	else		4822612	0					
ANR	4822776	ExpressionStatement	cdata -= crun	6401:25:228351:228364	4822612	0	True				
ANR	4822777	AssignmentExpression	cdata -= crun		4822612	0		-=			
ANR	4822778	Identifier	cdata		4822612	0					
ANR	4822779	Identifier	crun		4822612	1					
ANR	4822780	ExpressionStatement	* out ++ = cdata - 1	6403:12:228379:228395	4822612	2	True				
ANR	4822781	AssignmentExpression	* out ++ = cdata - 1		4822612	0		=			
ANR	4822782	UnaryOperationExpression	* out ++		4822612	0					
ANR	4822783	UnaryOperator	*		4822612	0					
ANR	4822784	PostIncDecOperationExpression	out ++		4822612	1					
ANR	4822785	Identifier	out		4822612	0					
ANR	4822786	IncDec	++		4822612	1					
ANR	4822787	AdditiveExpression	cdata - 1		4822612	1		-			
ANR	4822788	Identifier	cdata		4822612	0					
ANR	4822789	PrimaryExpression	1		4822612	1					
ANR	4822790	ExpressionStatement	used ++	6403:34:228401:228407	4822612	3	True				
ANR	4822791	PostIncDecOperationExpression	used ++		4822612	0					
ANR	4822792	Identifier	used		4822612	0					
ANR	4822793	IncDec	++		4822612	1					
ANR	4822794	ExpressionStatement	"memcpy ( out , in , cdata )"	6404:12:228421:228441	4822612	4	True				
ANR	4822795	CallExpression	"memcpy ( out , in , cdata )"		4822612	0					
ANR	4822796	Callee	memcpy		4822612	0					
ANR	4822797	Identifier	memcpy		4822612	0					
ANR	4822798	ArgumentList	out		4822612	1					
ANR	4822799	Argument	out		4822612	0					
ANR	4822800	Identifier	out		4822612	0					
ANR	4822801	Argument	in		4822612	1					
ANR	4822802	Identifier	in		4822612	0					
ANR	4822803	Argument	cdata		4822612	2					
ANR	4822804	Identifier	cdata		4822612	0					
ANR	4822805	ExpressionStatement	used += cdata	6404:34:228443:228456	4822612	5	True				
ANR	4822806	AssignmentExpression	used += cdata		4822612	0		+=			
ANR	4822807	Identifier	used		4822612	0					
ANR	4822808	Identifier	cdata		4822612	1					
ANR	4822809	ExpressionStatement	out += cdata	6404:49:228458:228472	4822612	6	True				
ANR	4822810	AssignmentExpression	out += cdata		4822612	0		+=			
ANR	4822811	Identifier	out		4822612	0					
ANR	4822812	Identifier	cdata		4822612	1					
ANR	4822813	ExpressionStatement	nbytes -= cdata	6406:12:228487:228502	4822612	7	True				
ANR	4822814	AssignmentExpression	nbytes -= cdata		4822612	0		-=			
ANR	4822815	Identifier	nbytes		4822612	0					
ANR	4822816	Identifier	cdata		4822612	1					
ANR	4822817	ExpressionStatement	in += cdata	6406:29:228504:228518	4822612	8	True				
ANR	4822818	AssignmentExpression	in += cdata		4822612	0		+=			
ANR	4822819	Identifier	in		4822612	0					
ANR	4822820	Identifier	cdata		4822612	1					
ANR	4822821	ElseStatement	else		4822612	0					
ANR	4822822	CompoundStatement		44:10:1123:1123	4822612	0					
ANR	4822823	WhileStatement	while ( nbytes > 0 )		4822612	0					
ANR	4822824	Condition	nbytes > 0	6414:12:228686:228695	4822612	0	True				
ANR	4822825	RelationalExpression	nbytes > 0		4822612	0		>			
ANR	4822826	Identifier	nbytes		4822612	0					
ANR	4822827	PrimaryExpression	0		4822612	1					
ANR	4822828	CompoundStatement		46:24:1190:1190	4822612	1					
ANR	4822829	ExpressionStatement	crun = nbytes > 128 ? 128 : nbytes	6415:9:228709:228746	4822612	0	True				
ANR	4822830	AssignmentExpression	crun = nbytes > 128 ? 128 : nbytes		4822612	0		=			
ANR	4822831	Identifier	crun		4822612	0					
ANR	4822832	ConditionalExpression	nbytes > 128 ? 128 : nbytes		4822612	1					
ANR	4822833	Condition	nbytes > 128		4822612	0					
ANR	4822834	RelationalExpression	nbytes > 128		4822612	0		>			
ANR	4822835	Identifier	nbytes		4822612	0					
ANR	4822836	PrimaryExpression	128		4822612	1					
ANR	4822837	PrimaryExpression	128		4822612	1					
ANR	4822838	Identifier	nbytes		4822612	2					
ANR	4822839	ExpressionStatement	nbytes -= crun	6416:9:228757:228771	4822612	1	True				
ANR	4822840	AssignmentExpression	nbytes -= crun		4822612	0		-=			
ANR	4822841	Identifier	nbytes		4822612	0					
ANR	4822842	Identifier	crun		4822612	1					
ANR	4822843	ExpressionStatement	* out ++ = ( 257 - crun ) & 0xff	6417:9:228782:228811	4822612	2	True				
ANR	4822844	AssignmentExpression	* out ++ = ( 257 - crun ) & 0xff		4822612	0		=			
ANR	4822845	UnaryOperationExpression	* out ++		4822612	0					
ANR	4822846	UnaryOperator	*		4822612	0					
ANR	4822847	PostIncDecOperationExpression	out ++		4822612	1					
ANR	4822848	Identifier	out		4822612	0					
ANR	4822849	IncDec	++		4822612	1					
ANR	4822850	BitAndExpression	( 257 - crun ) & 0xff		4822612	1		&			
ANR	4822851	AdditiveExpression	257 - crun		4822612	0		-			
ANR	4822852	PrimaryExpression	257		4822612	0					
ANR	4822853	Identifier	crun		4822612	1					
ANR	4822854	PrimaryExpression	0xff		4822612	1					
ANR	4822855	ExpressionStatement	* out ++ = 0	6418:9:228822:228833	4822612	3	True				
ANR	4822856	AssignmentExpression	* out ++ = 0		4822612	0		=			
ANR	4822857	UnaryOperationExpression	* out ++		4822612	0					
ANR	4822858	UnaryOperator	*		4822612	0					
ANR	4822859	PostIncDecOperationExpression	out ++		4822612	1					
ANR	4822860	Identifier	out		4822612	0					
ANR	4822861	IncDec	++		4822612	1					
ANR	4822862	PrimaryExpression	0		4822612	1					
ANR	4822863	ExpressionStatement	used += 2	6419:9:228844:228855	4822612	4	True				
ANR	4822864	AssignmentExpression	used += 2		4822612	0		+=			
ANR	4822865	Identifier	used		4822612	0					
ANR	4822866	PrimaryExpression	2		4822612	1					
ANR	4822867	ReturnStatement	return used ;	6422:3:228916:228927	4822612	4	True				
ANR	4822868	Identifier	used		4822612	0					
ANR	4822869	ReturnType	static int		4822612	1					
ANR	4822870	Identifier	upd_rle		4822612	2					
ANR	4822871	ParameterList	"byte * out , const byte * in , int nbytes"		4822612	3					
ANR	4822872	Parameter	byte * out	6368:8:227470:227478	4822612	0	True				
ANR	4822873	ParameterType	byte *		4822612	0					
ANR	4822874	Identifier	out		4822612	1					
ANR	4822875	Parameter	const byte * in	6368:18:227480:227493	4822612	1	True				
ANR	4822876	ParameterType	const byte *		4822612	0					
ANR	4822877	Identifier	in		4822612	1					
ANR	4822878	Parameter	int nbytes	6368:33:227495:227504	4822612	2	True				
ANR	4822879	ParameterType	int		4822612	0					
ANR	4822880	Identifier	nbytes		4822612	1					
ANR	4822881	CFGEntryNode	ENTRY		4822612		True				
ANR	4822882	CFGExitNode	EXIT		4822612		True				
ANR	4822883	Symbol	* out ++		4822612						
ANR	4822884	Symbol	NULL		4822612						
ANR	4822885	Symbol	* crun		4822612						
ANR	4822886	Symbol	in		4822612						
ANR	4822887	Symbol	* cdata		4822612						
ANR	4822888	Symbol	crun		4822612						
ANR	4822889	Symbol	* in		4822612						
ANR	4822890	Symbol	run		4822612						
ANR	4822891	Symbol	used		4822612						
ANR	4822892	Symbol	out		4822612						
ANR	4822893	Symbol	nbytes		4822612						
ANR	4822894	Symbol	cdata		4822612						
ANR	4822895	Function	upd_open_wrtrtl	6429:0:229155:249759							
ANR	4822896	FunctionDef	upd_open_wrtrtl (upd_device * udev)		4822895	0					
ANR	4822897	CompoundStatement		6431:0:229200:249759	4822895	0					
ANR	4822898	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	6432:3:229205:229238	4822895	0	True				
ANR	4822899	IdentifierDecl	upd = udev -> upd		4822895	0					
ANR	4822900	IdentifierDeclType	const upd_p		4822895	0					
ANR	4822901	Identifier	upd		4822895	1					
ANR	4822902	AssignmentExpression	upd = udev -> upd		4822895	2		=			
ANR	4822903	Identifier	upd		4822895	0					
ANR	4822904	PtrMemberAccess	udev -> upd		4822895	1					
ANR	4822905	Identifier	udev		4822895	0					
ANR	4822906	Identifier	upd		4822895	1					
ANR	4822907	IdentifierDeclStatement	int error = 0 ;	6433:3:229243:229269	4822895	1	True				
ANR	4822908	IdentifierDecl	error = 0		4822895	0					
ANR	4822909	IdentifierDeclType	int		4822895	0					
ANR	4822910	Identifier	error		4822895	1					
ANR	4822911	AssignmentExpression	error = 0		4822895	2		=			
ANR	4822912	Identifier	error		4822895	0					
ANR	4822913	PrimaryExpression	0		4822895	1					
ANR	4822914	IfStatement	if ( 0 < upd -> strings [ S_BEGIN ] . size )		4822895	2					
ANR	4822915	Condition	0 < upd -> strings [ S_BEGIN ] . size	6437:6:229310:229339	4822895	0	True				
ANR	4822916	RelationalExpression	0 < upd -> strings [ S_BEGIN ] . size		4822895	0		<			
ANR	4822917	PrimaryExpression	0		4822895	0					
ANR	4822918	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	1					
ANR	4822919	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4822920	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4822921	Identifier	upd		4822895	0					
ANR	4822922	Identifier	strings		4822895	1					
ANR	4822923	Identifier	S_BEGIN		4822895	1					
ANR	4822924	Identifier	size		4822895	1					
ANR	4822925	CompoundStatement		12:5:224:237	4822895	1					
ANR	4822926	IdentifierDeclStatement	"int i , j , state ;"	6439:5:229368:229383	4822895	0	True				
ANR	4822927	IdentifierDecl	i		4822895	0					
ANR	4822928	IdentifierDeclType	int		4822895	0					
ANR	4822929	Identifier	i		4822895	1					
ANR	4822930	IdentifierDecl	j		4822895	1					
ANR	4822931	IdentifierDeclType	int		4822895	0					
ANR	4822932	Identifier	j		4822895	1					
ANR	4822933	IdentifierDecl	state		4822895	2					
ANR	4822934	IdentifierDeclType	int		4822895	0					
ANR	4822935	Identifier	state		4822895	1					
ANR	4822936	IdentifierDeclStatement	char cv [ 24 ] ;	6440:5:229390:229402	4822895	1	True				
ANR	4822937	IdentifierDecl	cv [ 24 ]		4822895	0					
ANR	4822938	IdentifierDeclType	char [ 24 ]		4822895	0					
ANR	4822939	Identifier	cv		4822895	1					
ANR	4822940	PrimaryExpression	24		4822895	2					
ANR	4822941	IdentifierDeclStatement	byte * bp ;	6441:5:229409:229418	4822895	2	True				
ANR	4822942	IdentifierDecl	* bp		4822895	0					
ANR	4822943	IdentifierDeclType	byte *		4822895	0					
ANR	4822944	Identifier	bp		4822895	1					
ANR	4822945	IdentifierDeclStatement	"uint ncv , nbp ;"	6442:5:229425:229438	4822895	3	True				
ANR	4822946	IdentifierDecl	ncv		4822895	0					
ANR	4822947	IdentifierDeclType	uint		4822895	0					
ANR	4822948	Identifier	ncv		4822895	1					
ANR	4822949	IdentifierDecl	nbp		4822895	1					
ANR	4822950	IdentifierDeclType	uint		4822895	0					
ANR	4822951	Identifier	nbp		4822895	1					
ANR	4822952	ExpressionStatement	j = - 1	6444:5:229446:229456	4822895	4	True				
ANR	4822953	AssignmentExpression	j = - 1		4822895	0		=			
ANR	4822954	Identifier	j		4822895	0					
ANR	4822955	UnaryOperationExpression	- 1		4822895	1					
ANR	4822956	UnaryOperator	-		4822895	0					
ANR	4822957	PrimaryExpression	1		4822895	1					
ANR	4822958	ExpressionStatement	state = 0	6445:5:229463:229472	4822895	5	True				
ANR	4822959	AssignmentExpression	state = 0		4822895	0		=			
ANR	4822960	Identifier	state		4822895	0					
ANR	4822961	PrimaryExpression	0		4822895	1					
ANR	4822962	ForStatement	for ( i = 0 ; i < upd -> strings [ S_BEGIN ] . size ; ++ i )		4822895	6					
ANR	4822963	ForInit	i = 0 ;	6446:9:229483:229488	4822895	0	True				
ANR	4822964	AssignmentExpression	i = 0		4822895	0		=			
ANR	4822965	Identifier	i		4822895	0					
ANR	4822966	PrimaryExpression	0		4822895	1					
ANR	4822967	Condition	i < upd -> strings [ S_BEGIN ] . size	6446:16:229490:229519	4822895	1	True				
ANR	4822968	RelationalExpression	i < upd -> strings [ S_BEGIN ] . size		4822895	0		<			
ANR	4822969	Identifier	i		4822895	0					
ANR	4822970	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	1					
ANR	4822971	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4822972	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4822973	Identifier	upd		4822895	0					
ANR	4822974	Identifier	strings		4822895	1					
ANR	4822975	Identifier	S_BEGIN		4822895	1					
ANR	4822976	Identifier	size		4822895	1					
ANR	4822977	UnaryExpression	++ i	6446:48:229522:229524	4822895	2	True				
ANR	4822978	IncDec	++		4822895	0					
ANR	4822979	Identifier	i		4822895	1					
ANR	4822980	CompoundStatement		17:7:335:378	4822895	3					
ANR	4822981	IdentifierDeclStatement	const int c = upd -> strings [ S_BEGIN ] . data [ i ] ;	6447:7:229536:229579	4822895	0	True				
ANR	4822982	IdentifierDecl	c = upd -> strings [ S_BEGIN ] . data [ i ]		4822895	0					
ANR	4822983	IdentifierDeclType	const int		4822895	0					
ANR	4822984	Identifier	c		4822895	1					
ANR	4822985	AssignmentExpression	c = upd -> strings [ S_BEGIN ] . data [ i ]		4822895	2		=			
ANR	4822986	Identifier	c		4822895	0					
ANR	4822987	ArrayIndexing	upd -> strings [ S_BEGIN ] . data [ i ]		4822895	1					
ANR	4822988	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4822989	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4822990	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4822991	Identifier	upd		4822895	0					
ANR	4822992	Identifier	strings		4822895	1					
ANR	4822993	Identifier	S_BEGIN		4822895	1					
ANR	4822994	Identifier	data		4822895	1					
ANR	4822995	Identifier	i		4822895	1					
ANR	4822996	SwitchStatement	switch ( state )		4822895	1					
ANR	4822997	Condition	state	6449:14:229596:229600	4822895	0	True				
ANR	4822998	Identifier	state		4822895	0					
ANR	4822999	CompoundStatement		19:21:402:402	4822895	1					
ANR	4823000	Label	case 0 :	6451:9:229640:229647	4822895	0	True				
ANR	4823001	IfStatement	if ( c == 0x1b )		4822895	1					
ANR	4823002	Condition	c == 0x1b	6452:22:229671:229679	4822895	0	True				
ANR	4823003	EqualityExpression	c == 0x1b		4822895	0		==			
ANR	4823004	Identifier	c		4822895	0					
ANR	4823005	PrimaryExpression	0x1b		4822895	1					
ANR	4823006	ExpressionStatement	state = 1	6452:33:229682:229692	4822895	1	True				
ANR	4823007	AssignmentExpression	state = 1		4822895	0		=			
ANR	4823008	Identifier	state		4822895	0					
ANR	4823009	PrimaryExpression	1		4822895	1					
ANR	4823010	BreakStatement	break ;	6453:9:229713:229718	4822895	2	True				
ANR	4823011	Label	case 1 :	6456:9:229755:229762	4822895	3	True				
ANR	4823012	IfStatement	if ( c == 0x2a )		4822895	4					
ANR	4823013	Condition	c == 0x2a	6457:22:229786:229794	4822895	0	True				
ANR	4823014	EqualityExpression	c == 0x2a		4822895	0		==			
ANR	4823015	Identifier	c		4822895	0					
ANR	4823016	PrimaryExpression	0x2a		4822895	1					
ANR	4823017	ExpressionStatement	state = 2	6457:33:229797:229807	4822895	1	True				
ANR	4823018	AssignmentExpression	state = 2		4822895	0		=			
ANR	4823019	Identifier	state		4822895	0					
ANR	4823020	PrimaryExpression	2		4822895	1					
ANR	4823021	ElseStatement	else		4822895	0					
ANR	4823022	IfStatement	if ( c == 0x25 )		4822895	0					
ANR	4823023	Condition	c == 0x25	6458:22:229843:229851	4822895	0	True				
ANR	4823024	EqualityExpression	c == 0x25		4822895	0		==			
ANR	4823025	Identifier	c		4822895	0					
ANR	4823026	PrimaryExpression	0x25		4822895	1					
ANR	4823027	ExpressionStatement	state = 5	6458:33:229854:229864	4822895	1	True				
ANR	4823028	AssignmentExpression	state = 5		4822895	0		=			
ANR	4823029	Identifier	state		4822895	0					
ANR	4823030	PrimaryExpression	5		4822895	1					
ANR	4823031	ElseStatement	else		4822895	0					
ANR	4823032	ExpressionStatement	state = 0	6459:33:229911:229921	4822895	0	True				
ANR	4823033	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823034	Identifier	state		4822895	0					
ANR	4823035	PrimaryExpression	0		4822895	1					
ANR	4823036	BreakStatement	break ;	6460:9:229932:229937	4822895	5	True				
ANR	4823037	Label	case 2 :	6463:9:229971:229978	4822895	6	True				
ANR	4823038	ExpressionStatement	j = i	6464:11:229991:229996	4822895	7	True				
ANR	4823039	AssignmentExpression	j = i		4822895	0		=			
ANR	4823040	Identifier	j		4822895	0					
ANR	4823041	Identifier	i		4822895	1					
ANR	4823042	IfStatement	if ( c == 0x72 )		4822895	8					
ANR	4823043	Condition	c == 0x72	6465:22:230074:230082	4822895	0	True				
ANR	4823044	EqualityExpression	c == 0x72		4822895	0		==			
ANR	4823045	Identifier	c		4822895	0					
ANR	4823046	PrimaryExpression	0x72		4822895	1					
ANR	4823047	ExpressionStatement	state = 3	6465:33:230085:230095	4822895	1	True				
ANR	4823048	AssignmentExpression	state = 3		4822895	0		=			
ANR	4823049	Identifier	state		4822895	0					
ANR	4823050	PrimaryExpression	3		4822895	1					
ANR	4823051	ElseStatement	else		4822895	0					
ANR	4823052	IfStatement	if ( c == 0x74 )		4822895	0					
ANR	4823053	Condition	c == 0x74	6466:22:230133:230141	4822895	0	True				
ANR	4823054	EqualityExpression	c == 0x74		4822895	0		==			
ANR	4823055	Identifier	c		4822895	0					
ANR	4823056	PrimaryExpression	0x74		4822895	1					
ANR	4823057	ExpressionStatement	state = 4	6466:33:230144:230154	4822895	1	True				
ANR	4823058	AssignmentExpression	state = 4		4822895	0		=			
ANR	4823059	Identifier	state		4822895	0					
ANR	4823060	PrimaryExpression	4		4822895	1					
ANR	4823061	ElseStatement	else		4822895	0					
ANR	4823062	ExpressionStatement	state = 0	6467:33:230203:230213	4822895	0	True				
ANR	4823063	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823064	Identifier	state		4822895	0					
ANR	4823065	PrimaryExpression	0		4822895	1					
ANR	4823066	BreakStatement	break ;	6468:9:230224:230229	4822895	9	True				
ANR	4823067	Label	case 3 :	6472:9:230322:230329	4822895	10	True				
ANR	4823068	IfStatement	if ( ( B_PAGEWIDTH & upd -> flags ) && ( ( c == 0x73 ) || ( c == 0x53 ) ) )		4822895	11					
ANR	4823069	Condition	( B_PAGEWIDTH & upd -> flags ) && ( ( c == 0x73 ) || ( c == 0x53 ) )	6474:21:230353:230432	4822895	0	True				
ANR	4823070	AndExpression	( B_PAGEWIDTH & upd -> flags ) && ( ( c == 0x73 ) || ( c == 0x53 ) )		4822895	0		&&			
ANR	4823071	BitAndExpression	B_PAGEWIDTH & upd -> flags		4822895	0		&			
ANR	4823072	Identifier	B_PAGEWIDTH		4822895	0					
ANR	4823073	PtrMemberAccess	upd -> flags		4822895	1					
ANR	4823074	Identifier	upd		4822895	0					
ANR	4823075	Identifier	flags		4822895	1					
ANR	4823076	OrExpression	( c == 0x73 ) || ( c == 0x53 )		4822895	1		||			
ANR	4823077	EqualityExpression	c == 0x73		4822895	0		==			
ANR	4823078	Identifier	c		4822895	0					
ANR	4823079	PrimaryExpression	0x73		4822895	1					
ANR	4823080	EqualityExpression	c == 0x53		4822895	1		==			
ANR	4823081	Identifier	c		4822895	0					
ANR	4823082	PrimaryExpression	0x53		4822895	1					
ANR	4823083	CompoundStatement		45:53:1236:1236	4822895	1					
ANR	4823084	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , upd -> pwidth )"	6477:13:230471:230502	4822895	0	True				
ANR	4823085	CallExpression	"gs_sprintf ( cv , ""%d"" , upd -> pwidth )"		4822895	0					
ANR	4823086	Callee	gs_sprintf		4822895	0					
ANR	4823087	Identifier	gs_sprintf		4822895	0					
ANR	4823088	ArgumentList	cv		4822895	1					
ANR	4823089	Argument	cv		4822895	0					
ANR	4823090	Identifier	cv		4822895	0					
ANR	4823091	Argument	"""%d"""		4822895	1					
ANR	4823092	PrimaryExpression	"""%d"""		4822895	0					
ANR	4823093	Argument	upd -> pwidth		4822895	2					
ANR	4823094	PtrMemberAccess	upd -> pwidth		4822895	0					
ANR	4823095	Identifier	upd		4822895	0					
ANR	4823096	Identifier	pwidth		4822895	1					
ANR	4823097	ExpressionStatement	ncv = strlen ( cv )	6478:13:230517:230533	4822895	1	True				
ANR	4823098	AssignmentExpression	ncv = strlen ( cv )		4822895	0		=			
ANR	4823099	Identifier	ncv		4822895	0					
ANR	4823100	CallExpression	strlen ( cv )		4822895	1					
ANR	4823101	Callee	strlen		4822895	0					
ANR	4823102	Identifier	strlen		4822895	0					
ANR	4823103	ArgumentList	cv		4822895	1					
ANR	4823104	Argument	cv		4822895	0					
ANR	4823105	Identifier	cv		4822895	0					
ANR	4823106	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6480:13:230549:230599	4822895	2	True				
ANR	4823107	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	0		=			
ANR	4823108	Identifier	nbp		4822895	0					
ANR	4823109	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4823110	AdditiveExpression	j + 1		4822895	0		+			
ANR	4823111	Identifier	j		4822895	0					
ANR	4823112	PrimaryExpression	1		4822895	1					
ANR	4823113	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4823114	Identifier	ncv		4822895	0					
ANR	4823115	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	1		-			
ANR	4823116	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4823117	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823118	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823119	Identifier	upd		4822895	0					
ANR	4823120	Identifier	strings		4822895	1					
ANR	4823121	Identifier	S_BEGIN		4822895	1					
ANR	4823122	Identifier	size		4822895	1					
ANR	4823123	Identifier	i		4822895	1					
ANR	4823124	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6481:13:230614:230652	4822895	3	True				
ANR	4823125	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		4822895	0					
ANR	4823126	Callee	UPD_MM_GET_ARRAY		4822895	0					
ANR	4823127	Identifier	UPD_MM_GET_ARRAY		4822895	0					
ANR	4823128	ArgumentList	udev -> memory		4822895	1					
ANR	4823129	Argument	udev -> memory		4822895	0					
ANR	4823130	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4823131	Identifier	udev		4822895	0					
ANR	4823132	Identifier	memory		4822895	1					
ANR	4823133	Argument	bp		4822895	1					
ANR	4823134	Identifier	bp		4822895	0					
ANR	4823135	Argument	nbp		4822895	2					
ANR	4823136	Identifier	nbp		4822895	0					
ANR	4823137	IfStatement	if ( 0 <= j )		4822895	4					
ANR	4823138	Condition	0 <= j	6483:16:230671:230676	4822895	0	True				
ANR	4823139	RelationalExpression	0 <= j		4822895	0		<=			
ANR	4823140	PrimaryExpression	0		4822895	0					
ANR	4823141	Identifier	j		4822895	1					
ANR	4823142	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6483:24:230679:230720	4822895	1	True				
ANR	4823143	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		4822895	0					
ANR	4823144	Callee	memcpy		4822895	0					
ANR	4823145	Identifier	memcpy		4822895	0					
ANR	4823146	ArgumentList	bp		4822895	1					
ANR	4823147	Argument	bp		4822895	0					
ANR	4823148	Identifier	bp		4822895	0					
ANR	4823149	Argument	upd -> strings [ S_BEGIN ] . data		4822895	1					
ANR	4823150	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4823151	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823152	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823153	Identifier	upd		4822895	0					
ANR	4823154	Identifier	strings		4822895	1					
ANR	4823155	Identifier	S_BEGIN		4822895	1					
ANR	4823156	Identifier	data		4822895	1					
ANR	4823157	Argument	j + 1		4822895	2					
ANR	4823158	AdditiveExpression	j + 1		4822895	0		+			
ANR	4823159	Identifier	j		4822895	0					
ANR	4823160	PrimaryExpression	1		4822895	1					
ANR	4823161	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6484:13:230735:230760	4822895	5	True				
ANR	4823162	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		4822895	0					
ANR	4823163	Callee	memcpy		4822895	0					
ANR	4823164	Identifier	memcpy		4822895	0					
ANR	4823165	ArgumentList	bp + j + 1		4822895	1					
ANR	4823166	Argument	bp + j + 1		4822895	0					
ANR	4823167	AdditiveExpression	bp + j + 1		4822895	0		+			
ANR	4823168	Identifier	bp		4822895	0					
ANR	4823169	AdditiveExpression	j + 1		4822895	1		+			
ANR	4823170	Identifier	j		4822895	0					
ANR	4823171	PrimaryExpression	1		4822895	1					
ANR	4823172	Argument	cv		4822895	1					
ANR	4823173	Identifier	cv		4822895	0					
ANR	4823174	Argument	ncv		4822895	2					
ANR	4823175	Identifier	ncv		4822895	0					
ANR	4823176	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6485:13:230775:230883	4822895	6	True				
ANR	4823177	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		4822895	0					
ANR	4823178	Callee	memcpy		4822895	0					
ANR	4823179	Identifier	memcpy		4822895	0					
ANR	4823180	ArgumentList	bp + j + 1 + ncv		4822895	1					
ANR	4823181	Argument	bp + j + 1 + ncv		4822895	0					
ANR	4823182	AdditiveExpression	bp + j + 1 + ncv		4822895	0		+			
ANR	4823183	Identifier	bp		4822895	0					
ANR	4823184	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4823185	Identifier	j		4822895	0					
ANR	4823186	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4823187	PrimaryExpression	1		4822895	0					
ANR	4823188	Identifier	ncv		4822895	1					
ANR	4823189	Argument	upd -> strings [ S_BEGIN ] . data + i		4822895	1					
ANR	4823190	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		4822895	0		+			
ANR	4823191	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4823192	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823193	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823194	Identifier	upd		4822895	0					
ANR	4823195	Identifier	strings		4822895	1					
ANR	4823196	Identifier	S_BEGIN		4822895	1					
ANR	4823197	Identifier	data		4822895	1					
ANR	4823198	Identifier	i		4822895	1					
ANR	4823199	Argument	upd -> strings [ S_BEGIN ] . size - i		4822895	2					
ANR	4823200	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	0		-			
ANR	4823201	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4823202	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823203	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823204	Identifier	upd		4822895	0					
ANR	4823205	Identifier	strings		4822895	1					
ANR	4823206	Identifier	S_BEGIN		4822895	1					
ANR	4823207	Identifier	size		4822895	1					
ANR	4823208	Identifier	i		4822895	1					
ANR	4823209	ExpressionStatement	i = j + 1 + ncv	6487:13:230898:230909	4822895	7	True				
ANR	4823210	AssignmentExpression	i = j + 1 + ncv		4822895	0		=			
ANR	4823211	Identifier	i		4822895	0					
ANR	4823212	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4823213	Identifier	j		4822895	0					
ANR	4823214	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4823215	PrimaryExpression	1		4822895	0					
ANR	4823216	Identifier	ncv		4822895	1					
ANR	4823217	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6488:13:230924:230977	4822895	8	True				
ANR	4823218	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		4822895	0					
ANR	4823219	Callee	UPD_MM_DEL_PARAM		4822895	0					
ANR	4823220	Identifier	UPD_MM_DEL_PARAM		4822895	0					
ANR	4823221	ArgumentList	udev -> memory		4822895	1					
ANR	4823222	Argument	udev -> memory		4822895	0					
ANR	4823223	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4823224	Identifier	udev		4822895	0					
ANR	4823225	Identifier	memory		4822895	1					
ANR	4823226	Argument	upd -> strings [ S_BEGIN ]		4822895	1					
ANR	4823227	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823228	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823229	Identifier	upd		4822895	0					
ANR	4823230	Identifier	strings		4822895	1					
ANR	4823231	Identifier	S_BEGIN		4822895	1					
ANR	4823232	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6489:13:230992:231023	4822895	9	True				
ANR	4823233	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		4822895	0		=			
ANR	4823234	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4823235	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823236	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823237	Identifier	upd		4822895	0					
ANR	4823238	Identifier	strings		4822895	1					
ANR	4823239	Identifier	S_BEGIN		4822895	1					
ANR	4823240	Identifier	data		4822895	1					
ANR	4823241	Identifier	bp		4822895	1					
ANR	4823242	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6490:13:231038:231070	4822895	10	True				
ANR	4823243	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		4822895	0		=			
ANR	4823244	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4823245	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823246	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823247	Identifier	upd		4822895	0					
ANR	4823248	Identifier	strings		4822895	1					
ANR	4823249	Identifier	S_BEGIN		4822895	1					
ANR	4823250	Identifier	size		4822895	1					
ANR	4823251	Identifier	nbp		4822895	1					
ANR	4823252	ElseStatement	else		4822895	0					
ANR	4823253	IfStatement	if ( ( B_PAGELENGTH & upd -> flags ) && ( ( c == 0x74 ) || ( c == 0x54 ) ) )		4822895	0					
ANR	4823254	Condition	( B_PAGELENGTH & upd -> flags ) && ( ( c == 0x74 ) || ( c == 0x54 ) )	6492:21:231094:231173	4822895	0	True				
ANR	4823255	AndExpression	( B_PAGELENGTH & upd -> flags ) && ( ( c == 0x74 ) || ( c == 0x54 ) )		4822895	0		&&			
ANR	4823256	BitAndExpression	B_PAGELENGTH & upd -> flags		4822895	0		&			
ANR	4823257	Identifier	B_PAGELENGTH		4822895	0					
ANR	4823258	PtrMemberAccess	upd -> flags		4822895	1					
ANR	4823259	Identifier	upd		4822895	0					
ANR	4823260	Identifier	flags		4822895	1					
ANR	4823261	OrExpression	( c == 0x74 ) || ( c == 0x54 )		4822895	1		||			
ANR	4823262	EqualityExpression	c == 0x74		4822895	0		==			
ANR	4823263	Identifier	c		4822895	0					
ANR	4823264	PrimaryExpression	0x74		4822895	1					
ANR	4823265	EqualityExpression	c == 0x54		4822895	1		==			
ANR	4823266	Identifier	c		4822895	0					
ANR	4823267	PrimaryExpression	0x54		4822895	1					
ANR	4823268	CompoundStatement		63:53:1977:1977	4822895	1					
ANR	4823269	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , upd -> pheight )"	6495:13:231212:231244	4822895	0	True				
ANR	4823270	CallExpression	"gs_sprintf ( cv , ""%d"" , upd -> pheight )"		4822895	0					
ANR	4823271	Callee	gs_sprintf		4822895	0					
ANR	4823272	Identifier	gs_sprintf		4822895	0					
ANR	4823273	ArgumentList	cv		4822895	1					
ANR	4823274	Argument	cv		4822895	0					
ANR	4823275	Identifier	cv		4822895	0					
ANR	4823276	Argument	"""%d"""		4822895	1					
ANR	4823277	PrimaryExpression	"""%d"""		4822895	0					
ANR	4823278	Argument	upd -> pheight		4822895	2					
ANR	4823279	PtrMemberAccess	upd -> pheight		4822895	0					
ANR	4823280	Identifier	upd		4822895	0					
ANR	4823281	Identifier	pheight		4822895	1					
ANR	4823282	ExpressionStatement	ncv = strlen ( cv )	6496:13:231259:231275	4822895	1	True				
ANR	4823283	AssignmentExpression	ncv = strlen ( cv )		4822895	0		=			
ANR	4823284	Identifier	ncv		4822895	0					
ANR	4823285	CallExpression	strlen ( cv )		4822895	1					
ANR	4823286	Callee	strlen		4822895	0					
ANR	4823287	Identifier	strlen		4822895	0					
ANR	4823288	ArgumentList	cv		4822895	1					
ANR	4823289	Argument	cv		4822895	0					
ANR	4823290	Identifier	cv		4822895	0					
ANR	4823291	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6498:13:231291:231341	4822895	2	True				
ANR	4823292	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	0		=			
ANR	4823293	Identifier	nbp		4822895	0					
ANR	4823294	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4823295	AdditiveExpression	j + 1		4822895	0		+			
ANR	4823296	Identifier	j		4822895	0					
ANR	4823297	PrimaryExpression	1		4822895	1					
ANR	4823298	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4823299	Identifier	ncv		4822895	0					
ANR	4823300	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	1		-			
ANR	4823301	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4823302	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823303	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823304	Identifier	upd		4822895	0					
ANR	4823305	Identifier	strings		4822895	1					
ANR	4823306	Identifier	S_BEGIN		4822895	1					
ANR	4823307	Identifier	size		4822895	1					
ANR	4823308	Identifier	i		4822895	1					
ANR	4823309	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6499:13:231356:231394	4822895	3	True				
ANR	4823310	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		4822895	0					
ANR	4823311	Callee	UPD_MM_GET_ARRAY		4822895	0					
ANR	4823312	Identifier	UPD_MM_GET_ARRAY		4822895	0					
ANR	4823313	ArgumentList	udev -> memory		4822895	1					
ANR	4823314	Argument	udev -> memory		4822895	0					
ANR	4823315	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4823316	Identifier	udev		4822895	0					
ANR	4823317	Identifier	memory		4822895	1					
ANR	4823318	Argument	bp		4822895	1					
ANR	4823319	Identifier	bp		4822895	0					
ANR	4823320	Argument	nbp		4822895	2					
ANR	4823321	Identifier	nbp		4822895	0					
ANR	4823322	IfStatement	if ( 0 <= j )		4822895	4					
ANR	4823323	Condition	0 <= j	6501:16:231413:231418	4822895	0	True				
ANR	4823324	RelationalExpression	0 <= j		4822895	0		<=			
ANR	4823325	PrimaryExpression	0		4822895	0					
ANR	4823326	Identifier	j		4822895	1					
ANR	4823327	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6501:24:231421:231462	4822895	1	True				
ANR	4823328	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		4822895	0					
ANR	4823329	Callee	memcpy		4822895	0					
ANR	4823330	Identifier	memcpy		4822895	0					
ANR	4823331	ArgumentList	bp		4822895	1					
ANR	4823332	Argument	bp		4822895	0					
ANR	4823333	Identifier	bp		4822895	0					
ANR	4823334	Argument	upd -> strings [ S_BEGIN ] . data		4822895	1					
ANR	4823335	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4823336	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823337	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823338	Identifier	upd		4822895	0					
ANR	4823339	Identifier	strings		4822895	1					
ANR	4823340	Identifier	S_BEGIN		4822895	1					
ANR	4823341	Identifier	data		4822895	1					
ANR	4823342	Argument	j + 1		4822895	2					
ANR	4823343	AdditiveExpression	j + 1		4822895	0		+			
ANR	4823344	Identifier	j		4822895	0					
ANR	4823345	PrimaryExpression	1		4822895	1					
ANR	4823346	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6502:13:231477:231502	4822895	5	True				
ANR	4823347	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		4822895	0					
ANR	4823348	Callee	memcpy		4822895	0					
ANR	4823349	Identifier	memcpy		4822895	0					
ANR	4823350	ArgumentList	bp + j + 1		4822895	1					
ANR	4823351	Argument	bp + j + 1		4822895	0					
ANR	4823352	AdditiveExpression	bp + j + 1		4822895	0		+			
ANR	4823353	Identifier	bp		4822895	0					
ANR	4823354	AdditiveExpression	j + 1		4822895	1		+			
ANR	4823355	Identifier	j		4822895	0					
ANR	4823356	PrimaryExpression	1		4822895	1					
ANR	4823357	Argument	cv		4822895	1					
ANR	4823358	Identifier	cv		4822895	0					
ANR	4823359	Argument	ncv		4822895	2					
ANR	4823360	Identifier	ncv		4822895	0					
ANR	4823361	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6503:13:231517:231625	4822895	6	True				
ANR	4823362	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		4822895	0					
ANR	4823363	Callee	memcpy		4822895	0					
ANR	4823364	Identifier	memcpy		4822895	0					
ANR	4823365	ArgumentList	bp + j + 1 + ncv		4822895	1					
ANR	4823366	Argument	bp + j + 1 + ncv		4822895	0					
ANR	4823367	AdditiveExpression	bp + j + 1 + ncv		4822895	0		+			
ANR	4823368	Identifier	bp		4822895	0					
ANR	4823369	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4823370	Identifier	j		4822895	0					
ANR	4823371	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4823372	PrimaryExpression	1		4822895	0					
ANR	4823373	Identifier	ncv		4822895	1					
ANR	4823374	Argument	upd -> strings [ S_BEGIN ] . data + i		4822895	1					
ANR	4823375	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		4822895	0		+			
ANR	4823376	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4823377	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823378	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823379	Identifier	upd		4822895	0					
ANR	4823380	Identifier	strings		4822895	1					
ANR	4823381	Identifier	S_BEGIN		4822895	1					
ANR	4823382	Identifier	data		4822895	1					
ANR	4823383	Identifier	i		4822895	1					
ANR	4823384	Argument	upd -> strings [ S_BEGIN ] . size - i		4822895	2					
ANR	4823385	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	0		-			
ANR	4823386	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4823387	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823388	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823389	Identifier	upd		4822895	0					
ANR	4823390	Identifier	strings		4822895	1					
ANR	4823391	Identifier	S_BEGIN		4822895	1					
ANR	4823392	Identifier	size		4822895	1					
ANR	4823393	Identifier	i		4822895	1					
ANR	4823394	ExpressionStatement	i = j + 1 + ncv	6505:13:231640:231651	4822895	7	True				
ANR	4823395	AssignmentExpression	i = j + 1 + ncv		4822895	0		=			
ANR	4823396	Identifier	i		4822895	0					
ANR	4823397	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4823398	Identifier	j		4822895	0					
ANR	4823399	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4823400	PrimaryExpression	1		4822895	0					
ANR	4823401	Identifier	ncv		4822895	1					
ANR	4823402	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6506:13:231666:231719	4822895	8	True				
ANR	4823403	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		4822895	0					
ANR	4823404	Callee	UPD_MM_DEL_PARAM		4822895	0					
ANR	4823405	Identifier	UPD_MM_DEL_PARAM		4822895	0					
ANR	4823406	ArgumentList	udev -> memory		4822895	1					
ANR	4823407	Argument	udev -> memory		4822895	0					
ANR	4823408	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4823409	Identifier	udev		4822895	0					
ANR	4823410	Identifier	memory		4822895	1					
ANR	4823411	Argument	upd -> strings [ S_BEGIN ]		4822895	1					
ANR	4823412	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823413	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823414	Identifier	upd		4822895	0					
ANR	4823415	Identifier	strings		4822895	1					
ANR	4823416	Identifier	S_BEGIN		4822895	1					
ANR	4823417	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6507:13:231734:231765	4822895	9	True				
ANR	4823418	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		4822895	0		=			
ANR	4823419	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4823420	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823421	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823422	Identifier	upd		4822895	0					
ANR	4823423	Identifier	strings		4822895	1					
ANR	4823424	Identifier	S_BEGIN		4822895	1					
ANR	4823425	Identifier	data		4822895	1					
ANR	4823426	Identifier	bp		4822895	1					
ANR	4823427	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6508:13:231780:231812	4822895	10	True				
ANR	4823428	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		4822895	0		=			
ANR	4823429	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4823430	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823431	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823432	Identifier	upd		4822895	0					
ANR	4823433	Identifier	strings		4822895	1					
ANR	4823434	Identifier	S_BEGIN		4822895	1					
ANR	4823435	Identifier	size		4822895	1					
ANR	4823436	Identifier	nbp		4822895	1					
ANR	4823437	IfStatement	if ( ( 0x40 < c ) && ( c < 0x5b ) )		4822895	12					
ANR	4823438	Condition	( 0x40 < c ) && ( c < 0x5b )	6512:21:231850:231873	4822895	0	True				
ANR	4823439	AndExpression	( 0x40 < c ) && ( c < 0x5b )		4822895	0		&&			
ANR	4823440	RelationalExpression	0x40 < c		4822895	0		<			
ANR	4823441	PrimaryExpression	0x40		4822895	0					
ANR	4823442	Identifier	c		4822895	1					
ANR	4823443	RelationalExpression	c < 0x5b		4822895	1		<			
ANR	4823444	Identifier	c		4822895	0					
ANR	4823445	PrimaryExpression	0x5b		4822895	1					
ANR	4823446	ExpressionStatement	state = 0	6512:48:231877:231886	4822895	1	True				
ANR	4823447	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823448	Identifier	state		4822895	0					
ANR	4823449	PrimaryExpression	0		4822895	1					
ANR	4823450	ElseStatement	else		4822895	0					
ANR	4823451	IfStatement	if ( ! ( ( 0x2f < c ) && ( c < 0x3a ) ) )		4822895	0					
ANR	4823452	Condition	! ( ( 0x2f < c ) && ( c < 0x3a ) )	6513:19:231924:231950	4822895	0	True				
ANR	4823453	UnaryOperationExpression	! ( ( 0x2f < c ) && ( c < 0x3a ) )		4822895	0					
ANR	4823454	UnaryOperator	!		4822895	0					
ANR	4823455	AndExpression	( 0x2f < c ) && ( c < 0x3a )		4822895	1		&&			
ANR	4823456	RelationalExpression	0x2f < c		4822895	0		<			
ANR	4823457	PrimaryExpression	0x2f		4822895	0					
ANR	4823458	Identifier	c		4822895	1					
ANR	4823459	RelationalExpression	c < 0x3a		4822895	1		<			
ANR	4823460	Identifier	c		4822895	0					
ANR	4823461	PrimaryExpression	0x3a		4822895	1					
ANR	4823462	ExpressionStatement	j = i	6513:48:231953:231962	4822895	1	True				
ANR	4823463	AssignmentExpression	j = i		4822895	0		=			
ANR	4823464	Identifier	j		4822895	0					
ANR	4823465	Identifier	i		4822895	1					
ANR	4823466	BreakStatement	break ;	6515:9:231991:231996	4822895	13	True				
ANR	4823467	Label	case 4 :	6519:9:232075:232082	4822895	14	True				
ANR	4823468	IfStatement	if ( ( B_RESOLUTION & upd -> flags ) && ( ( c == 0x72 ) || ( c == 0x52 ) ) )		4822895	15					
ANR	4823469	Condition	( B_RESOLUTION & upd -> flags ) && ( ( c == 0x72 ) || ( c == 0x52 ) )	6521:22:232121:232201	4822895	0	True				
ANR	4823470	AndExpression	( B_RESOLUTION & upd -> flags ) && ( ( c == 0x72 ) || ( c == 0x52 ) )		4822895	0		&&			
ANR	4823471	BitAndExpression	B_RESOLUTION & upd -> flags		4822895	0		&			
ANR	4823472	Identifier	B_RESOLUTION		4822895	0					
ANR	4823473	PtrMemberAccess	upd -> flags		4822895	1					
ANR	4823474	Identifier	upd		4822895	0					
ANR	4823475	Identifier	flags		4822895	1					
ANR	4823476	OrExpression	( c == 0x72 ) || ( c == 0x52 )		4822895	1		||			
ANR	4823477	EqualityExpression	c == 0x72		4822895	0		==			
ANR	4823478	Identifier	c		4822895	0					
ANR	4823479	PrimaryExpression	0x72		4822895	1					
ANR	4823480	EqualityExpression	c == 0x52		4822895	1		==			
ANR	4823481	Identifier	c		4822895	0					
ANR	4823482	PrimaryExpression	0x52		4822895	1					
ANR	4823483	CompoundStatement		92:53:3005:3005	4822895	1					
ANR	4823484	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , ( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 ) )"	6524:13:232240:232423	4822895	0	True				
ANR	4823485	CallExpression	"gs_sprintf ( cv , ""%d"" , ( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 ) )"		4822895	0					
ANR	4823486	Callee	gs_sprintf		4822895	0					
ANR	4823487	Identifier	gs_sprintf		4822895	0					
ANR	4823488	ArgumentList	cv		4822895	1					
ANR	4823489	Argument	cv		4822895	0					
ANR	4823490	Identifier	cv		4822895	0					
ANR	4823491	Argument	"""%d"""		4822895	1					
ANR	4823492	PrimaryExpression	"""%d"""		4822895	0					
ANR	4823493	Argument	( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 )		4822895	2					
ANR	4823494	CastExpression	( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 )		4822895	0					
ANR	4823495	CastTarget	int		4822895	0					
ANR	4823496	AdditiveExpression	( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5		4822895	1		+			
ANR	4823497	ConditionalExpression	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch		4822895	0					
ANR	4823498	Condition	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch		4822895	0					
ANR	4823499	RelationalExpression	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch		4822895	0		<			
ANR	4823500	PtrMemberAccess	udev -> y_pixels_per_inch		4822895	0					
ANR	4823501	Identifier	udev		4822895	0					
ANR	4823502	Identifier	y_pixels_per_inch		4822895	1					
ANR	4823503	PtrMemberAccess	udev -> x_pixels_per_inch		4822895	1					
ANR	4823504	Identifier	udev		4822895	0					
ANR	4823505	Identifier	x_pixels_per_inch		4822895	1					
ANR	4823506	PtrMemberAccess	udev -> x_pixels_per_inch		4822895	1					
ANR	4823507	Identifier	udev		4822895	0					
ANR	4823508	Identifier	x_pixels_per_inch		4822895	1					
ANR	4823509	PtrMemberAccess	udev -> y_pixels_per_inch		4822895	2					
ANR	4823510	Identifier	udev		4822895	0					
ANR	4823511	Identifier	y_pixels_per_inch		4822895	1					
ANR	4823512	PrimaryExpression	0.5		4822895	1					
ANR	4823513	ExpressionStatement	ncv = strlen ( cv )	6528:13:232438:232454	4822895	1	True				
ANR	4823514	AssignmentExpression	ncv = strlen ( cv )		4822895	0		=			
ANR	4823515	Identifier	ncv		4822895	0					
ANR	4823516	CallExpression	strlen ( cv )		4822895	1					
ANR	4823517	Callee	strlen		4822895	0					
ANR	4823518	Identifier	strlen		4822895	0					
ANR	4823519	ArgumentList	cv		4822895	1					
ANR	4823520	Argument	cv		4822895	0					
ANR	4823521	Identifier	cv		4822895	0					
ANR	4823522	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6530:13:232470:232520	4822895	2	True				
ANR	4823523	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	0		=			
ANR	4823524	Identifier	nbp		4822895	0					
ANR	4823525	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4823526	AdditiveExpression	j + 1		4822895	0		+			
ANR	4823527	Identifier	j		4822895	0					
ANR	4823528	PrimaryExpression	1		4822895	1					
ANR	4823529	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4823530	Identifier	ncv		4822895	0					
ANR	4823531	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	1		-			
ANR	4823532	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4823533	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823534	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823535	Identifier	upd		4822895	0					
ANR	4823536	Identifier	strings		4822895	1					
ANR	4823537	Identifier	S_BEGIN		4822895	1					
ANR	4823538	Identifier	size		4822895	1					
ANR	4823539	Identifier	i		4822895	1					
ANR	4823540	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6531:13:232535:232573	4822895	3	True				
ANR	4823541	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		4822895	0					
ANR	4823542	Callee	UPD_MM_GET_ARRAY		4822895	0					
ANR	4823543	Identifier	UPD_MM_GET_ARRAY		4822895	0					
ANR	4823544	ArgumentList	udev -> memory		4822895	1					
ANR	4823545	Argument	udev -> memory		4822895	0					
ANR	4823546	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4823547	Identifier	udev		4822895	0					
ANR	4823548	Identifier	memory		4822895	1					
ANR	4823549	Argument	bp		4822895	1					
ANR	4823550	Identifier	bp		4822895	0					
ANR	4823551	Argument	nbp		4822895	2					
ANR	4823552	Identifier	nbp		4822895	0					
ANR	4823553	IfStatement	if ( 0 <= j )		4822895	4					
ANR	4823554	Condition	0 <= j	6533:16:232592:232597	4822895	0	True				
ANR	4823555	RelationalExpression	0 <= j		4822895	0		<=			
ANR	4823556	PrimaryExpression	0		4822895	0					
ANR	4823557	Identifier	j		4822895	1					
ANR	4823558	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6533:24:232600:232641	4822895	1	True				
ANR	4823559	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		4822895	0					
ANR	4823560	Callee	memcpy		4822895	0					
ANR	4823561	Identifier	memcpy		4822895	0					
ANR	4823562	ArgumentList	bp		4822895	1					
ANR	4823563	Argument	bp		4822895	0					
ANR	4823564	Identifier	bp		4822895	0					
ANR	4823565	Argument	upd -> strings [ S_BEGIN ] . data		4822895	1					
ANR	4823566	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4823567	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823568	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823569	Identifier	upd		4822895	0					
ANR	4823570	Identifier	strings		4822895	1					
ANR	4823571	Identifier	S_BEGIN		4822895	1					
ANR	4823572	Identifier	data		4822895	1					
ANR	4823573	Argument	j + 1		4822895	2					
ANR	4823574	AdditiveExpression	j + 1		4822895	0		+			
ANR	4823575	Identifier	j		4822895	0					
ANR	4823576	PrimaryExpression	1		4822895	1					
ANR	4823577	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6534:13:232656:232681	4822895	5	True				
ANR	4823578	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		4822895	0					
ANR	4823579	Callee	memcpy		4822895	0					
ANR	4823580	Identifier	memcpy		4822895	0					
ANR	4823581	ArgumentList	bp + j + 1		4822895	1					
ANR	4823582	Argument	bp + j + 1		4822895	0					
ANR	4823583	AdditiveExpression	bp + j + 1		4822895	0		+			
ANR	4823584	Identifier	bp		4822895	0					
ANR	4823585	AdditiveExpression	j + 1		4822895	1		+			
ANR	4823586	Identifier	j		4822895	0					
ANR	4823587	PrimaryExpression	1		4822895	1					
ANR	4823588	Argument	cv		4822895	1					
ANR	4823589	Identifier	cv		4822895	0					
ANR	4823590	Argument	ncv		4822895	2					
ANR	4823591	Identifier	ncv		4822895	0					
ANR	4823592	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6535:13:232696:232804	4822895	6	True				
ANR	4823593	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		4822895	0					
ANR	4823594	Callee	memcpy		4822895	0					
ANR	4823595	Identifier	memcpy		4822895	0					
ANR	4823596	ArgumentList	bp + j + 1 + ncv		4822895	1					
ANR	4823597	Argument	bp + j + 1 + ncv		4822895	0					
ANR	4823598	AdditiveExpression	bp + j + 1 + ncv		4822895	0		+			
ANR	4823599	Identifier	bp		4822895	0					
ANR	4823600	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4823601	Identifier	j		4822895	0					
ANR	4823602	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4823603	PrimaryExpression	1		4822895	0					
ANR	4823604	Identifier	ncv		4822895	1					
ANR	4823605	Argument	upd -> strings [ S_BEGIN ] . data + i		4822895	1					
ANR	4823606	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		4822895	0		+			
ANR	4823607	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4823608	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823609	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823610	Identifier	upd		4822895	0					
ANR	4823611	Identifier	strings		4822895	1					
ANR	4823612	Identifier	S_BEGIN		4822895	1					
ANR	4823613	Identifier	data		4822895	1					
ANR	4823614	Identifier	i		4822895	1					
ANR	4823615	Argument	upd -> strings [ S_BEGIN ] . size - i		4822895	2					
ANR	4823616	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	0		-			
ANR	4823617	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4823618	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823619	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823620	Identifier	upd		4822895	0					
ANR	4823621	Identifier	strings		4822895	1					
ANR	4823622	Identifier	S_BEGIN		4822895	1					
ANR	4823623	Identifier	size		4822895	1					
ANR	4823624	Identifier	i		4822895	1					
ANR	4823625	ExpressionStatement	i = j + 1 + ncv	6537:13:232819:232830	4822895	7	True				
ANR	4823626	AssignmentExpression	i = j + 1 + ncv		4822895	0		=			
ANR	4823627	Identifier	i		4822895	0					
ANR	4823628	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4823629	Identifier	j		4822895	0					
ANR	4823630	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4823631	PrimaryExpression	1		4822895	0					
ANR	4823632	Identifier	ncv		4822895	1					
ANR	4823633	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6538:13:232845:232898	4822895	8	True				
ANR	4823634	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		4822895	0					
ANR	4823635	Callee	UPD_MM_DEL_PARAM		4822895	0					
ANR	4823636	Identifier	UPD_MM_DEL_PARAM		4822895	0					
ANR	4823637	ArgumentList	udev -> memory		4822895	1					
ANR	4823638	Argument	udev -> memory		4822895	0					
ANR	4823639	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4823640	Identifier	udev		4822895	0					
ANR	4823641	Identifier	memory		4822895	1					
ANR	4823642	Argument	upd -> strings [ S_BEGIN ]		4822895	1					
ANR	4823643	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823644	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823645	Identifier	upd		4822895	0					
ANR	4823646	Identifier	strings		4822895	1					
ANR	4823647	Identifier	S_BEGIN		4822895	1					
ANR	4823648	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6539:13:232913:232944	4822895	9	True				
ANR	4823649	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		4822895	0		=			
ANR	4823650	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4823651	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823652	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823653	Identifier	upd		4822895	0					
ANR	4823654	Identifier	strings		4822895	1					
ANR	4823655	Identifier	S_BEGIN		4822895	1					
ANR	4823656	Identifier	data		4822895	1					
ANR	4823657	Identifier	bp		4822895	1					
ANR	4823658	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6540:13:232959:232991	4822895	10	True				
ANR	4823659	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		4822895	0		=			
ANR	4823660	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4823661	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4823662	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4823663	Identifier	upd		4822895	0					
ANR	4823664	Identifier	strings		4822895	1					
ANR	4823665	Identifier	S_BEGIN		4822895	1					
ANR	4823666	Identifier	size		4822895	1					
ANR	4823667	Identifier	nbp		4822895	1					
ANR	4823668	IfStatement	if ( ( 0x40 < c ) && ( c < 0x5b ) )		4822895	16					
ANR	4823669	Condition	( 0x40 < c ) && ( c < 0x5b )	6544:21:233029:233052	4822895	0	True				
ANR	4823670	AndExpression	( 0x40 < c ) && ( c < 0x5b )		4822895	0		&&			
ANR	4823671	RelationalExpression	0x40 < c		4822895	0		<			
ANR	4823672	PrimaryExpression	0x40		4822895	0					
ANR	4823673	Identifier	c		4822895	1					
ANR	4823674	RelationalExpression	c < 0x5b		4822895	1		<			
ANR	4823675	Identifier	c		4822895	0					
ANR	4823676	PrimaryExpression	0x5b		4822895	1					
ANR	4823677	ExpressionStatement	state = 0	6544:48:233056:233065	4822895	1	True				
ANR	4823678	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823679	Identifier	state		4822895	0					
ANR	4823680	PrimaryExpression	0		4822895	1					
ANR	4823681	ElseStatement	else		4822895	0					
ANR	4823682	IfStatement	if ( ! ( ( 0x2f < c ) && ( c < 0x3a ) ) )		4822895	0					
ANR	4823683	Condition	! ( ( 0x2f < c ) && ( c < 0x3a ) )	6545:19:233103:233129	4822895	0	True				
ANR	4823684	UnaryOperationExpression	! ( ( 0x2f < c ) && ( c < 0x3a ) )		4822895	0					
ANR	4823685	UnaryOperator	!		4822895	0					
ANR	4823686	AndExpression	( 0x2f < c ) && ( c < 0x3a )		4822895	1		&&			
ANR	4823687	RelationalExpression	0x2f < c		4822895	0		<			
ANR	4823688	PrimaryExpression	0x2f		4822895	0					
ANR	4823689	Identifier	c		4822895	1					
ANR	4823690	RelationalExpression	c < 0x3a		4822895	1		<			
ANR	4823691	Identifier	c		4822895	0					
ANR	4823692	PrimaryExpression	0x3a		4822895	1					
ANR	4823693	ExpressionStatement	j = i	6545:48:233132:233141	4822895	1	True				
ANR	4823694	AssignmentExpression	j = i		4822895	0		=			
ANR	4823695	Identifier	j		4822895	0					
ANR	4823696	Identifier	i		4822895	1					
ANR	4823697	BreakStatement	break ;	6547:9:233170:233175	4822895	17	True				
ANR	4823698	Label	case 5 :	6549:9:233187:233194	4822895	18	True				
ANR	4823699	IfStatement	if ( c == 0x2d )		4822895	19					
ANR	4823700	Condition	c == 0x2d	6550:15:233237:233245	4822895	0	True				
ANR	4823701	EqualityExpression	c == 0x2d		4822895	0		==			
ANR	4823702	Identifier	c		4822895	0					
ANR	4823703	PrimaryExpression	0x2d		4822895	1					
ANR	4823704	ExpressionStatement	state = 6	6550:26:233248:233258	4822895	1	True				
ANR	4823705	AssignmentExpression	state = 6		4822895	0		=			
ANR	4823706	Identifier	state		4822895	0					
ANR	4823707	PrimaryExpression	6		4822895	1					
ANR	4823708	ElseStatement	else		4822895	0					
ANR	4823709	ExpressionStatement	state = 0	6551:26:233300:233310	4822895	0	True				
ANR	4823710	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823711	Identifier	state		4822895	0					
ANR	4823712	PrimaryExpression	0		4822895	1					
ANR	4823713	BreakStatement	break ;	6552:9:233321:233326	4822895	20	True				
ANR	4823714	Label	case 6 :	6554:9:233338:233345	4822895	21	True				
ANR	4823715	IfStatement	if ( c == 0x31 )		4822895	22					
ANR	4823716	Condition	c == 0x31	6555:15:233389:233397	4822895	0	True				
ANR	4823717	EqualityExpression	c == 0x31		4822895	0		==			
ANR	4823718	Identifier	c		4822895	0					
ANR	4823719	PrimaryExpression	0x31		4822895	1					
ANR	4823720	ExpressionStatement	state = 7	6555:26:233400:233410	4822895	1	True				
ANR	4823721	AssignmentExpression	state = 7		4822895	0		=			
ANR	4823722	Identifier	state		4822895	0					
ANR	4823723	PrimaryExpression	7		4822895	1					
ANR	4823724	ElseStatement	else		4822895	0					
ANR	4823725	ExpressionStatement	state = 0	6556:26:233454:233464	4822895	0	True				
ANR	4823726	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823727	Identifier	state		4822895	0					
ANR	4823728	PrimaryExpression	0		4822895	1					
ANR	4823729	BreakStatement	break ;	6557:9:233475:233480	4822895	23	True				
ANR	4823730	Label	case 7 :	6559:9:233492:233499	4822895	24	True				
ANR	4823731	IfStatement	if ( c == 0x32 )		4822895	25					
ANR	4823732	Condition	c == 0x32	6560:15:233543:233551	4822895	0	True				
ANR	4823733	EqualityExpression	c == 0x32		4822895	0		==			
ANR	4823734	Identifier	c		4822895	0					
ANR	4823735	PrimaryExpression	0x32		4822895	1					
ANR	4823736	ExpressionStatement	state = 8	6560:26:233554:233564	4822895	1	True				
ANR	4823737	AssignmentExpression	state = 8		4822895	0		=			
ANR	4823738	Identifier	state		4822895	0					
ANR	4823739	PrimaryExpression	8		4822895	1					
ANR	4823740	ElseStatement	else		4822895	0					
ANR	4823741	ExpressionStatement	state = 0	6561:26:233610:233620	4822895	0	True				
ANR	4823742	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823743	Identifier	state		4822895	0					
ANR	4823744	PrimaryExpression	0		4822895	1					
ANR	4823745	BreakStatement	break ;	6562:9:233631:233636	4822895	26	True				
ANR	4823746	Label	case 8 :	6564:9:233648:233655	4822895	27	True				
ANR	4823747	IfStatement	if ( c == 0x33 )		4822895	28					
ANR	4823748	Condition	c == 0x33	6565:15:233699:233707	4822895	0	True				
ANR	4823749	EqualityExpression	c == 0x33		4822895	0		==			
ANR	4823750	Identifier	c		4822895	0					
ANR	4823751	PrimaryExpression	0x33		4822895	1					
ANR	4823752	ExpressionStatement	state = 9	6565:26:233710:233720	4822895	1	True				
ANR	4823753	AssignmentExpression	state = 9		4822895	0		=			
ANR	4823754	Identifier	state		4822895	0					
ANR	4823755	PrimaryExpression	9		4822895	1					
ANR	4823756	ElseStatement	else		4822895	0					
ANR	4823757	ExpressionStatement	state = 0	6566:26:233768:233778	4822895	0	True				
ANR	4823758	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823759	Identifier	state		4822895	0					
ANR	4823760	PrimaryExpression	0		4822895	1					
ANR	4823761	BreakStatement	break ;	6567:9:233789:233794	4822895	29	True				
ANR	4823762	Label	case 9 :	6569:9:233806:233813	4822895	30	True				
ANR	4823763	IfStatement	if ( c == 0x34 )		4822895	31					
ANR	4823764	Condition	c == 0x34	6570:15:233857:233865	4822895	0	True				
ANR	4823765	EqualityExpression	c == 0x34		4822895	0		==			
ANR	4823766	Identifier	c		4822895	0					
ANR	4823767	PrimaryExpression	0x34		4822895	1					
ANR	4823768	ExpressionStatement	state = 10	6570:26:233868:233878	4822895	1	True				
ANR	4823769	AssignmentExpression	state = 10		4822895	0		=			
ANR	4823770	Identifier	state		4822895	0					
ANR	4823771	PrimaryExpression	10		4822895	1					
ANR	4823772	ElseStatement	else		4822895	0					
ANR	4823773	ExpressionStatement	state = 0	6571:26:233928:233938	4822895	0	True				
ANR	4823774	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823775	Identifier	state		4822895	0					
ANR	4823776	PrimaryExpression	0		4822895	1					
ANR	4823777	BreakStatement	break ;	6572:9:233949:233954	4822895	32	True				
ANR	4823778	Label	case 10 :	6574:9:233966:233973	4822895	33	True				
ANR	4823779	IfStatement	if ( c == 0x35 )		4822895	34					
ANR	4823780	Condition	c == 0x35	6575:15:234017:234025	4822895	0	True				
ANR	4823781	EqualityExpression	c == 0x35		4822895	0		==			
ANR	4823782	Identifier	c		4822895	0					
ANR	4823783	PrimaryExpression	0x35		4822895	1					
ANR	4823784	ExpressionStatement	state = 11	6575:26:234028:234038	4822895	1	True				
ANR	4823785	AssignmentExpression	state = 11		4822895	0		=			
ANR	4823786	Identifier	state		4822895	0					
ANR	4823787	PrimaryExpression	11		4822895	1					
ANR	4823788	ElseStatement	else		4822895	0					
ANR	4823789	ExpressionStatement	state = 0	6576:26:234090:234100	4822895	0	True				
ANR	4823790	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823791	Identifier	state		4822895	0					
ANR	4823792	PrimaryExpression	0		4822895	1					
ANR	4823793	BreakStatement	break ;	6577:9:234111:234116	4822895	35	True				
ANR	4823794	Label	case 11 :	6579:9:234128:234135	4822895	36	True				
ANR	4823795	IfStatement	if ( c == 0x58 )		4822895	37					
ANR	4823796	Condition	c == 0x58	6580:15:234179:234187	4822895	0	True				
ANR	4823797	EqualityExpression	c == 0x58		4822895	0		==			
ANR	4823798	Identifier	c		4822895	0					
ANR	4823799	PrimaryExpression	0x58		4822895	1					
ANR	4823800	ExpressionStatement	state = 12	6580:26:234190:234200	4822895	1	True				
ANR	4823801	AssignmentExpression	state = 12		4822895	0		=			
ANR	4823802	Identifier	state		4822895	0					
ANR	4823803	PrimaryExpression	12		4822895	1					
ANR	4823804	ElseStatement	else		4822895	0					
ANR	4823805	ExpressionStatement	state = 0	6581:26:234254:234264	4822895	0	True				
ANR	4823806	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823807	Identifier	state		4822895	0					
ANR	4823808	PrimaryExpression	0		4822895	1					
ANR	4823809	BreakStatement	break ;	6582:9:234275:234280	4822895	38	True				
ANR	4823810	Label	case 12 :	6584:9:234292:234299	4822895	39	True				
ANR	4823811	IfStatement	if ( c == 0x40 )		4822895	40					
ANR	4823812	Condition	c == 0x40	6585:15:234343:234351	4822895	0	True				
ANR	4823813	EqualityExpression	c == 0x40		4822895	0		==			
ANR	4823814	Identifier	c		4822895	0					
ANR	4823815	PrimaryExpression	0x40		4822895	1					
ANR	4823816	ExpressionStatement	state = 13	6585:26:234354:234364	4822895	1	True				
ANR	4823817	AssignmentExpression	state = 13		4822895	0		=			
ANR	4823818	Identifier	state		4822895	0					
ANR	4823819	PrimaryExpression	13		4822895	1					
ANR	4823820	ElseStatement	else		4822895	0					
ANR	4823821	ExpressionStatement	state = 0	6586:26:234400:234410	4822895	0	True				
ANR	4823822	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823823	Identifier	state		4822895	0					
ANR	4823824	PrimaryExpression	0		4822895	1					
ANR	4823825	BreakStatement	break ;	6587:9:234421:234426	4822895	41	True				
ANR	4823826	Label	case 13 :	6589:9:234438:234445	4822895	42	True				
ANR	4823827	IfStatement	if ( c == 0x50 )		4822895	43					
ANR	4823828	Condition	c == 0x50	6590:15:234488:234496	4822895	0	True				
ANR	4823829	EqualityExpression	c == 0x50		4822895	0		==			
ANR	4823830	Identifier	c		4822895	0					
ANR	4823831	PrimaryExpression	0x50		4822895	1					
ANR	4823832	ExpressionStatement	state = 14	6590:26:234499:234509	4822895	1	True				
ANR	4823833	AssignmentExpression	state = 14		4822895	0		=			
ANR	4823834	Identifier	state		4822895	0					
ANR	4823835	PrimaryExpression	14		4822895	1					
ANR	4823836	ElseStatement	else		4822895	0					
ANR	4823837	ExpressionStatement	state = 0	6591:26:234547:234557	4822895	0	True				
ANR	4823838	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823839	Identifier	state		4822895	0					
ANR	4823840	PrimaryExpression	0		4822895	1					
ANR	4823841	BreakStatement	break ;	6592:9:234568:234573	4822895	44	True				
ANR	4823842	Label	case 14 :	6594:9:234585:234592	4822895	45	True				
ANR	4823843	IfStatement	if ( c == 0x4a )		4822895	46					
ANR	4823844	Condition	c == 0x4a	6595:15:234635:234643	4822895	0	True				
ANR	4823845	EqualityExpression	c == 0x4a		4822895	0		==			
ANR	4823846	Identifier	c		4822895	0					
ANR	4823847	PrimaryExpression	0x4a		4822895	1					
ANR	4823848	ExpressionStatement	state = 15	6595:26:234646:234656	4822895	1	True				
ANR	4823849	AssignmentExpression	state = 15		4822895	0		=			
ANR	4823850	Identifier	state		4822895	0					
ANR	4823851	PrimaryExpression	15		4822895	1					
ANR	4823852	ElseStatement	else		4822895	0					
ANR	4823853	ExpressionStatement	state = 0	6596:26:234696:234706	4822895	0	True				
ANR	4823854	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823855	Identifier	state		4822895	0					
ANR	4823856	PrimaryExpression	0		4822895	1					
ANR	4823857	BreakStatement	break ;	6597:9:234717:234722	4822895	47	True				
ANR	4823858	Label	case 15 :	6599:9:234734:234741	4822895	48	True				
ANR	4823859	IfStatement	if ( c == 0x4c )		4822895	49					
ANR	4823860	Condition	c == 0x4c	6600:15:234784:234792	4822895	0	True				
ANR	4823861	EqualityExpression	c == 0x4c		4822895	0		==			
ANR	4823862	Identifier	c		4822895	0					
ANR	4823863	PrimaryExpression	0x4c		4822895	1					
ANR	4823864	ExpressionStatement	state = 16	6600:26:234795:234805	4822895	1	True				
ANR	4823865	AssignmentExpression	state = 16		4822895	0		=			
ANR	4823866	Identifier	state		4822895	0					
ANR	4823867	PrimaryExpression	16		4822895	1					
ANR	4823868	ElseStatement	else		4822895	0					
ANR	4823869	ExpressionStatement	state = 0	6601:26:234847:234857	4822895	0	True				
ANR	4823870	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823871	Identifier	state		4822895	0					
ANR	4823872	PrimaryExpression	0		4822895	1					
ANR	4823873	BreakStatement	break ;	6602:9:234868:234873	4822895	50	True				
ANR	4823874	Label	case 16 :	6604:9:234885:234892	4822895	51	True				
ANR	4823875	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		4822895	52					
ANR	4823876	Condition	( c == 0x20 ) || ( c == 0x09 )	6605:14:234934:234959	4822895	0	True				
ANR	4823877	OrExpression	( c == 0x20 ) || ( c == 0x09 )		4822895	0		||			
ANR	4823878	EqualityExpression	c == 0x20		4822895	0		==			
ANR	4823879	Identifier	c		4822895	0					
ANR	4823880	PrimaryExpression	0x20		4822895	1					
ANR	4823881	EqualityExpression	c == 0x09		4822895	1		==			
ANR	4823882	Identifier	c		4822895	0					
ANR	4823883	PrimaryExpression	0x09		4822895	1					
ANR	4823884	ExpressionStatement	state = 19	6605:42:234962:234972	4822895	1	True				
ANR	4823885	AssignmentExpression	state = 19		4822895	0		=			
ANR	4823886	Identifier	state		4822895	0					
ANR	4823887	PrimaryExpression	19		4822895	1					
ANR	4823888	ElseStatement	else		4822895	0					
ANR	4823889	IfStatement	if ( c == 0x0d )		4822895	0					
ANR	4823890	Condition	c == 0x0d	6606:30:235021:235029	4822895	0	True				
ANR	4823891	EqualityExpression	c == 0x0d		4822895	0		==			
ANR	4823892	Identifier	c		4822895	0					
ANR	4823893	PrimaryExpression	0x0d		4822895	1					
ANR	4823894	ExpressionStatement	state = 17	6606:42:235033:235043	4822895	1	True				
ANR	4823895	AssignmentExpression	state = 17		4822895	0		=			
ANR	4823896	Identifier	state		4822895	0					
ANR	4823897	PrimaryExpression	17		4822895	1					
ANR	4823898	ElseStatement	else		4822895	0					
ANR	4823899	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4823900	Condition	c == 0x0a	6607:30:235075:235083	4822895	0	True				
ANR	4823901	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4823902	Identifier	c		4822895	0					
ANR	4823903	PrimaryExpression	0x0a		4822895	1					
ANR	4823904	ExpressionStatement	state = 12	6607:42:235087:235097	4822895	1	True				
ANR	4823905	AssignmentExpression	state = 12		4822895	0		=			
ANR	4823906	Identifier	state		4822895	0					
ANR	4823907	PrimaryExpression	12		4822895	1					
ANR	4823908	ElseStatement	else		4822895	0					
ANR	4823909	ExpressionStatement	state = 0	6608:42:235141:235151	4822895	0	True				
ANR	4823910	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823911	Identifier	state		4822895	0					
ANR	4823912	PrimaryExpression	0		4822895	1					
ANR	4823913	BreakStatement	break ;	6609:9:235178:235183	4822895	53	True				
ANR	4823914	Label	case 17 :	6611:9:235195:235202	4822895	54	True				
ANR	4823915	IfStatement	if ( c == 0x0a )		4822895	55					
ANR	4823916	Condition	c == 0x0a	6612:15:235234:235242	4822895	0	True				
ANR	4823917	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4823918	Identifier	c		4822895	0					
ANR	4823919	PrimaryExpression	0x0a		4822895	1					
ANR	4823920	ExpressionStatement	state = 12	6612:26:235245:235255	4822895	1	True				
ANR	4823921	AssignmentExpression	state = 12		4822895	0		=			
ANR	4823922	Identifier	state		4822895	0					
ANR	4823923	PrimaryExpression	12		4822895	1					
ANR	4823924	ElseStatement	else		4822895	0					
ANR	4823925	ExpressionStatement	state = 0	6613:26:235306:235316	4822895	0	True				
ANR	4823926	AssignmentExpression	state = 0		4822895	0		=			
ANR	4823927	Identifier	state		4822895	0					
ANR	4823928	PrimaryExpression	0		4822895	1					
ANR	4823929	BreakStatement	break ;	6614:9:235343:235348	4822895	56	True				
ANR	4823930	Label	case 18 :	6616:9:235360:235367	4822895	57	True				
ANR	4823931	IfStatement	if ( c == 0x0a )		4822895	58					
ANR	4823932	Condition	c == 0x0a	6617:15:235416:235424	4822895	0	True				
ANR	4823933	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4823934	Identifier	c		4822895	0					
ANR	4823935	PrimaryExpression	0x0a		4822895	1					
ANR	4823936	ExpressionStatement	state = 12	6617:26:235427:235437	4822895	1	True				
ANR	4823937	AssignmentExpression	state = 12		4822895	0		=			
ANR	4823938	Identifier	state		4822895	0					
ANR	4823939	PrimaryExpression	12		4822895	1					
ANR	4823940	BreakStatement	break ;	6618:9:235448:235453	4822895	59	True				
ANR	4823941	Label	case 19 :	6620:9:235465:235472	4822895	60	True				
ANR	4823942	IfStatement	if ( ( c == 0x53 ) || ( c == 0x73 ) )		4822895	61					
ANR	4823943	Condition	( c == 0x53 ) || ( c == 0x73 )	6621:19:235520:235545	4822895	0	True				
ANR	4823944	OrExpression	( c == 0x53 ) || ( c == 0x73 )		4822895	0		||			
ANR	4823945	EqualityExpression	c == 0x53		4822895	0		==			
ANR	4823946	Identifier	c		4822895	0					
ANR	4823947	PrimaryExpression	0x53		4822895	1					
ANR	4823948	EqualityExpression	c == 0x73		4822895	1		==			
ANR	4823949	Identifier	c		4822895	0					
ANR	4823950	PrimaryExpression	0x73		4822895	1					
ANR	4823951	ExpressionStatement	state = 20	6621:47:235548:235558	4822895	1	True				
ANR	4823952	AssignmentExpression	state = 20		4822895	0		=			
ANR	4823953	Identifier	state		4822895	0					
ANR	4823954	PrimaryExpression	20		4822895	1					
ANR	4823955	ElseStatement	else		4822895	0					
ANR	4823956	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4823957	Condition	c == 0x0a	6622:20:235591:235599	4822895	0	True				
ANR	4823958	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4823959	Identifier	c		4822895	0					
ANR	4823960	PrimaryExpression	0x0a		4822895	1					
ANR	4823961	ExpressionStatement	state = 12	6622:47:235618:235628	4822895	1	True				
ANR	4823962	AssignmentExpression	state = 12		4822895	0		=			
ANR	4823963	Identifier	state		4822895	0					
ANR	4823964	PrimaryExpression	12		4822895	1					
ANR	4823965	ElseStatement	else		4822895	0					
ANR	4823966	IfStatement	if ( c == 0x0d )		4822895	0					
ANR	4823967	Condition	c == 0x0d	6623:20:235660:235668	4822895	0	True				
ANR	4823968	EqualityExpression	c == 0x0d		4822895	0		==			
ANR	4823969	Identifier	c		4822895	0					
ANR	4823970	PrimaryExpression	0x0d		4822895	1					
ANR	4823971	ExpressionStatement	state = 17	6623:47:235687:235697	4822895	1	True				
ANR	4823972	AssignmentExpression	state = 17		4822895	0		=			
ANR	4823973	Identifier	state		4822895	0					
ANR	4823974	PrimaryExpression	17		4822895	1					
ANR	4823975	BreakStatement	break ;	6624:9:235708:235713	4822895	62	True				
ANR	4823976	Label	case 20 :	6626:9:235725:235732	4822895	63	True				
ANR	4823977	IfStatement	if ( ( c == 0x45 ) || ( c == 0x65 ) )		4822895	64					
ANR	4823978	Condition	( c == 0x45 ) || ( c == 0x65 )	6627:19:235775:235800	4822895	0	True				
ANR	4823979	OrExpression	( c == 0x45 ) || ( c == 0x65 )		4822895	0		||			
ANR	4823980	EqualityExpression	c == 0x45		4822895	0		==			
ANR	4823981	Identifier	c		4822895	0					
ANR	4823982	PrimaryExpression	0x45		4822895	1					
ANR	4823983	EqualityExpression	c == 0x65		4822895	1		==			
ANR	4823984	Identifier	c		4822895	0					
ANR	4823985	PrimaryExpression	0x65		4822895	1					
ANR	4823986	ExpressionStatement	state = 21	6627:47:235803:235813	4822895	1	True				
ANR	4823987	AssignmentExpression	state = 21		4822895	0		=			
ANR	4823988	Identifier	state		4822895	0					
ANR	4823989	PrimaryExpression	21		4822895	1					
ANR	4823990	ElseStatement	else		4822895	0					
ANR	4823991	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4823992	Condition	c == 0x0a	6628:20:235845:235853	4822895	0	True				
ANR	4823993	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4823994	Identifier	c		4822895	0					
ANR	4823995	PrimaryExpression	0x0a		4822895	1					
ANR	4823996	ExpressionStatement	state = 12	6628:47:235872:235882	4822895	1	True				
ANR	4823997	AssignmentExpression	state = 12		4822895	0		=			
ANR	4823998	Identifier	state		4822895	0					
ANR	4823999	PrimaryExpression	12		4822895	1					
ANR	4824000	ElseStatement	else		4822895	0					
ANR	4824001	ExpressionStatement	state = 18	6629:47:235941:235951	4822895	0	True				
ANR	4824002	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824003	Identifier	state		4822895	0					
ANR	4824004	PrimaryExpression	18		4822895	1					
ANR	4824005	BreakStatement	break ;	6630:9:235962:235967	4822895	65	True				
ANR	4824006	Label	case 21 :	6632:9:235979:235986	4822895	66	True				
ANR	4824007	IfStatement	if ( ( c == 0x54 ) || ( c == 0x74 ) )		4822895	67					
ANR	4824008	Condition	( c == 0x54 ) || ( c == 0x74 )	6633:19:236029:236054	4822895	0	True				
ANR	4824009	OrExpression	( c == 0x54 ) || ( c == 0x74 )		4822895	0		||			
ANR	4824010	EqualityExpression	c == 0x54		4822895	0		==			
ANR	4824011	Identifier	c		4822895	0					
ANR	4824012	PrimaryExpression	0x54		4822895	1					
ANR	4824013	EqualityExpression	c == 0x74		4822895	1		==			
ANR	4824014	Identifier	c		4822895	0					
ANR	4824015	PrimaryExpression	0x74		4822895	1					
ANR	4824016	ExpressionStatement	state = 22	6633:47:236057:236067	4822895	1	True				
ANR	4824017	AssignmentExpression	state = 22		4822895	0		=			
ANR	4824018	Identifier	state		4822895	0					
ANR	4824019	PrimaryExpression	22		4822895	1					
ANR	4824020	ElseStatement	else		4822895	0					
ANR	4824021	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824022	Condition	c == 0x0a	6634:20:236101:236109	4822895	0	True				
ANR	4824023	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824024	Identifier	c		4822895	0					
ANR	4824025	PrimaryExpression	0x0a		4822895	1					
ANR	4824026	ExpressionStatement	state = 12	6634:47:236128:236138	4822895	1	True				
ANR	4824027	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824028	Identifier	state		4822895	0					
ANR	4824029	PrimaryExpression	12		4822895	1					
ANR	4824030	ElseStatement	else		4822895	0					
ANR	4824031	ExpressionStatement	state = 18	6635:47:236197:236207	4822895	0	True				
ANR	4824032	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824033	Identifier	state		4822895	0					
ANR	4824034	PrimaryExpression	18		4822895	1					
ANR	4824035	BreakStatement	break ;	6636:9:236218:236223	4822895	68	True				
ANR	4824036	Label	case 22 :	6638:9:236235:236242	4822895	69	True				
ANR	4824037	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		4822895	70					
ANR	4824038	Condition	( c == 0x20 ) || ( c == 0x09 )	6639:19:236288:236313	4822895	0	True				
ANR	4824039	OrExpression	( c == 0x20 ) || ( c == 0x09 )		4822895	0		||			
ANR	4824040	EqualityExpression	c == 0x20		4822895	0		==			
ANR	4824041	Identifier	c		4822895	0					
ANR	4824042	PrimaryExpression	0x20		4822895	1					
ANR	4824043	EqualityExpression	c == 0x09		4822895	1		==			
ANR	4824044	Identifier	c		4822895	0					
ANR	4824045	PrimaryExpression	0x09		4822895	1					
ANR	4824046	ExpressionStatement	state = 23	6639:47:236316:236326	4822895	1	True				
ANR	4824047	AssignmentExpression	state = 23		4822895	0		=			
ANR	4824048	Identifier	state		4822895	0					
ANR	4824049	PrimaryExpression	23		4822895	1					
ANR	4824050	ElseStatement	else		4822895	0					
ANR	4824051	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824052	Condition	c == 0x0a	6640:20:236363:236371	4822895	0	True				
ANR	4824053	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824054	Identifier	c		4822895	0					
ANR	4824055	PrimaryExpression	0x0a		4822895	1					
ANR	4824056	ExpressionStatement	state = 12	6640:47:236390:236400	4822895	1	True				
ANR	4824057	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824058	Identifier	state		4822895	0					
ANR	4824059	PrimaryExpression	12		4822895	1					
ANR	4824060	ElseStatement	else		4822895	0					
ANR	4824061	ExpressionStatement	state = 18	6641:47:236459:236469	4822895	0	True				
ANR	4824062	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824063	Identifier	state		4822895	0					
ANR	4824064	PrimaryExpression	18		4822895	1					
ANR	4824065	BreakStatement	break ;	6642:9:236480:236485	4822895	71	True				
ANR	4824066	Label	case 23 :	6644:9:236497:236504	4822895	72	True				
ANR	4824067	IfStatement	if ( ( c == 0x50 ) || ( c == 0x70 ) )		4822895	73					
ANR	4824068	Condition	( c == 0x50 ) || ( c == 0x70 )	6645:19:236550:236575	4822895	0	True				
ANR	4824069	OrExpression	( c == 0x50 ) || ( c == 0x70 )		4822895	0		||			
ANR	4824070	EqualityExpression	c == 0x50		4822895	0		==			
ANR	4824071	Identifier	c		4822895	0					
ANR	4824072	PrimaryExpression	0x50		4822895	1					
ANR	4824073	EqualityExpression	c == 0x70		4822895	1		==			
ANR	4824074	Identifier	c		4822895	0					
ANR	4824075	PrimaryExpression	0x70		4822895	1					
ANR	4824076	ExpressionStatement	state = 24	6645:47:236578:236588	4822895	1	True				
ANR	4824077	AssignmentExpression	state = 24		4822895	0		=			
ANR	4824078	Identifier	state		4822895	0					
ANR	4824079	PrimaryExpression	24		4822895	1					
ANR	4824080	ElseStatement	else		4822895	0					
ANR	4824081	IfStatement	if ( ( c == 0x52 ) || ( c == 0x72 ) )		4822895	0					
ANR	4824082	Condition	( c == 0x52 ) || ( c == 0x72 )	6646:19:236628:236653	4822895	0	True				
ANR	4824083	OrExpression	( c == 0x52 ) || ( c == 0x72 )		4822895	0		||			
ANR	4824084	EqualityExpression	c == 0x52		4822895	0		==			
ANR	4824085	Identifier	c		4822895	0					
ANR	4824086	PrimaryExpression	0x52		4822895	1					
ANR	4824087	EqualityExpression	c == 0x72		4822895	1		==			
ANR	4824088	Identifier	c		4822895	0					
ANR	4824089	PrimaryExpression	0x72		4822895	1					
ANR	4824090	ExpressionStatement	state = 41	6646:47:236656:236666	4822895	1	True				
ANR	4824091	AssignmentExpression	state = 41		4822895	0		=			
ANR	4824092	Identifier	state		4822895	0					
ANR	4824093	PrimaryExpression	41		4822895	1					
ANR	4824094	ElseStatement	else		4822895	0					
ANR	4824095	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824096	Condition	c == 0x0a	6647:20:236709:236717	4822895	0	True				
ANR	4824097	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824098	Identifier	c		4822895	0					
ANR	4824099	PrimaryExpression	0x0a		4822895	1					
ANR	4824100	ExpressionStatement	state = 12	6647:47:236736:236746	4822895	1	True				
ANR	4824101	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824102	Identifier	state		4822895	0					
ANR	4824103	PrimaryExpression	12		4822895	1					
ANR	4824104	ElseStatement	else		4822895	0					
ANR	4824105	ExpressionStatement	state = 18	6648:47:236805:236815	4822895	0	True				
ANR	4824106	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824107	Identifier	state		4822895	0					
ANR	4824108	PrimaryExpression	18		4822895	1					
ANR	4824109	BreakStatement	break ;	6649:9:236826:236831	4822895	74	True				
ANR	4824110	Label	case 24 :	6651:9:236843:236850	4822895	75	True				
ANR	4824111	IfStatement	if ( ( c == 0x41 ) || ( c == 0x61 ) )		4822895	76					
ANR	4824112	Condition	( c == 0x41 ) || ( c == 0x61 )	6652:19:236900:236925	4822895	0	True				
ANR	4824113	OrExpression	( c == 0x41 ) || ( c == 0x61 )		4822895	0		||			
ANR	4824114	EqualityExpression	c == 0x41		4822895	0		==			
ANR	4824115	Identifier	c		4822895	0					
ANR	4824116	PrimaryExpression	0x41		4822895	1					
ANR	4824117	EqualityExpression	c == 0x61		4822895	1		==			
ANR	4824118	Identifier	c		4822895	0					
ANR	4824119	PrimaryExpression	0x61		4822895	1					
ANR	4824120	ExpressionStatement	state = 25	6652:47:236928:236938	4822895	1	True				
ANR	4824121	AssignmentExpression	state = 25		4822895	0		=			
ANR	4824122	Identifier	state		4822895	0					
ANR	4824123	PrimaryExpression	25		4822895	1					
ANR	4824124	ElseStatement	else		4822895	0					
ANR	4824125	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824126	Condition	c == 0x0a	6653:20:236973:236981	4822895	0	True				
ANR	4824127	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824128	Identifier	c		4822895	0					
ANR	4824129	PrimaryExpression	0x0a		4822895	1					
ANR	4824130	ExpressionStatement	state = 12	6653:47:237000:237010	4822895	1	True				
ANR	4824131	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824132	Identifier	state		4822895	0					
ANR	4824133	PrimaryExpression	12		4822895	1					
ANR	4824134	ElseStatement	else		4822895	0					
ANR	4824135	ExpressionStatement	state = 18	6654:47:237069:237079	4822895	0	True				
ANR	4824136	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824137	Identifier	state		4822895	0					
ANR	4824138	PrimaryExpression	18		4822895	1					
ANR	4824139	BreakStatement	break ;	6655:9:237090:237095	4822895	77	True				
ANR	4824140	Label	case 25 :	6657:9:237107:237114	4822895	78	True				
ANR	4824141	IfStatement	if ( ( c == 0x50 ) || ( c == 0x70 ) )		4822895	79					
ANR	4824142	Condition	( c == 0x50 ) || ( c == 0x70 )	6658:19:237164:237189	4822895	0	True				
ANR	4824143	OrExpression	( c == 0x50 ) || ( c == 0x70 )		4822895	0		||			
ANR	4824144	EqualityExpression	c == 0x50		4822895	0		==			
ANR	4824145	Identifier	c		4822895	0					
ANR	4824146	PrimaryExpression	0x50		4822895	1					
ANR	4824147	EqualityExpression	c == 0x70		4822895	1		==			
ANR	4824148	Identifier	c		4822895	0					
ANR	4824149	PrimaryExpression	0x70		4822895	1					
ANR	4824150	ExpressionStatement	state = 26	6658:47:237192:237202	4822895	1	True				
ANR	4824151	AssignmentExpression	state = 26		4822895	0		=			
ANR	4824152	Identifier	state		4822895	0					
ANR	4824153	PrimaryExpression	26		4822895	1					
ANR	4824154	ElseStatement	else		4822895	0					
ANR	4824155	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824156	Condition	c == 0x0a	6659:20:237238:237246	4822895	0	True				
ANR	4824157	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824158	Identifier	c		4822895	0					
ANR	4824159	PrimaryExpression	0x0a		4822895	1					
ANR	4824160	ExpressionStatement	state = 12	6659:47:237265:237275	4822895	1	True				
ANR	4824161	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824162	Identifier	state		4822895	0					
ANR	4824163	PrimaryExpression	12		4822895	1					
ANR	4824164	ElseStatement	else		4822895	0					
ANR	4824165	ExpressionStatement	state = 18	6660:47:237334:237344	4822895	0	True				
ANR	4824166	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824167	Identifier	state		4822895	0					
ANR	4824168	PrimaryExpression	18		4822895	1					
ANR	4824169	BreakStatement	break ;	6661:9:237355:237360	4822895	80	True				
ANR	4824170	Label	case 26 :	6663:9:237372:237379	4822895	81	True				
ANR	4824171	IfStatement	if ( ( c == 0x45 ) || ( c == 0x65 ) )		4822895	82					
ANR	4824172	Condition	( c == 0x45 ) || ( c == 0x65 )	6664:19:237429:237454	4822895	0	True				
ANR	4824173	OrExpression	( c == 0x45 ) || ( c == 0x65 )		4822895	0		||			
ANR	4824174	EqualityExpression	c == 0x45		4822895	0		==			
ANR	4824175	Identifier	c		4822895	0					
ANR	4824176	PrimaryExpression	0x45		4822895	1					
ANR	4824177	EqualityExpression	c == 0x65		4822895	1		==			
ANR	4824178	Identifier	c		4822895	0					
ANR	4824179	PrimaryExpression	0x65		4822895	1					
ANR	4824180	ExpressionStatement	state = 27	6664:47:237457:237467	4822895	1	True				
ANR	4824181	AssignmentExpression	state = 27		4822895	0		=			
ANR	4824182	Identifier	state		4822895	0					
ANR	4824183	PrimaryExpression	27		4822895	1					
ANR	4824184	ElseStatement	else		4822895	0					
ANR	4824185	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824186	Condition	c == 0x0a	6665:20:237504:237512	4822895	0	True				
ANR	4824187	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824188	Identifier	c		4822895	0					
ANR	4824189	PrimaryExpression	0x0a		4822895	1					
ANR	4824190	ExpressionStatement	state = 12	6665:47:237531:237541	4822895	1	True				
ANR	4824191	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824192	Identifier	state		4822895	0					
ANR	4824193	PrimaryExpression	12		4822895	1					
ANR	4824194	ElseStatement	else		4822895	0					
ANR	4824195	ExpressionStatement	state = 18	6666:47:237600:237610	4822895	0	True				
ANR	4824196	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824197	Identifier	state		4822895	0					
ANR	4824198	PrimaryExpression	18		4822895	1					
ANR	4824199	BreakStatement	break ;	6667:9:237621:237626	4822895	83	True				
ANR	4824200	Label	case 27 :	6669:9:237638:237645	4822895	84	True				
ANR	4824201	IfStatement	if ( ( c == 0x52 ) || ( c == 0x72 ) )		4822895	85					
ANR	4824202	Condition	( c == 0x52 ) || ( c == 0x72 )	6670:19:237695:237720	4822895	0	True				
ANR	4824203	OrExpression	( c == 0x52 ) || ( c == 0x72 )		4822895	0		||			
ANR	4824204	EqualityExpression	c == 0x52		4822895	0		==			
ANR	4824205	Identifier	c		4822895	0					
ANR	4824206	PrimaryExpression	0x52		4822895	1					
ANR	4824207	EqualityExpression	c == 0x72		4822895	1		==			
ANR	4824208	Identifier	c		4822895	0					
ANR	4824209	PrimaryExpression	0x72		4822895	1					
ANR	4824210	ExpressionStatement	state = 28	6670:47:237723:237733	4822895	1	True				
ANR	4824211	AssignmentExpression	state = 28		4822895	0		=			
ANR	4824212	Identifier	state		4822895	0					
ANR	4824213	PrimaryExpression	28		4822895	1					
ANR	4824214	ElseStatement	else		4822895	0					
ANR	4824215	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824216	Condition	c == 0x0a	6671:20:237771:237779	4822895	0	True				
ANR	4824217	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824218	Identifier	c		4822895	0					
ANR	4824219	PrimaryExpression	0x0a		4822895	1					
ANR	4824220	ExpressionStatement	state = 12	6671:47:237798:237808	4822895	1	True				
ANR	4824221	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824222	Identifier	state		4822895	0					
ANR	4824223	PrimaryExpression	12		4822895	1					
ANR	4824224	ElseStatement	else		4822895	0					
ANR	4824225	ExpressionStatement	state = 18	6672:47:237867:237877	4822895	0	True				
ANR	4824226	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824227	Identifier	state		4822895	0					
ANR	4824228	PrimaryExpression	18		4822895	1					
ANR	4824229	BreakStatement	break ;	6673:9:237888:237893	4822895	86	True				
ANR	4824230	Label	case 28 :	6675:9:237905:237912	4822895	87	True				
ANR	4824231	IfStatement	if ( ( c == 0x4c ) || ( c == 0x6c ) )		4822895	88					
ANR	4824232	Condition	( c == 0x4c ) || ( c == 0x6c )	6676:19:237960:237985	4822895	0	True				
ANR	4824233	OrExpression	( c == 0x4c ) || ( c == 0x6c )		4822895	0		||			
ANR	4824234	EqualityExpression	c == 0x4c		4822895	0		==			
ANR	4824235	Identifier	c		4822895	0					
ANR	4824236	PrimaryExpression	0x4c		4822895	1					
ANR	4824237	EqualityExpression	c == 0x6c		4822895	1		==			
ANR	4824238	Identifier	c		4822895	0					
ANR	4824239	PrimaryExpression	0x6c		4822895	1					
ANR	4824240	ExpressionStatement	state = 29	6676:47:237988:237998	4822895	1	True				
ANR	4824241	AssignmentExpression	state = 29		4822895	0		=			
ANR	4824242	Identifier	state		4822895	0					
ANR	4824243	PrimaryExpression	29		4822895	1					
ANR	4824244	ElseStatement	else		4822895	0					
ANR	4824245	IfStatement	if ( ( c == 0x57 ) || ( c == 0x77 ) )		4822895	0					
ANR	4824246	Condition	( c == 0x57 ) || ( c == 0x77 )	6677:19:238041:238066	4822895	0	True				
ANR	4824247	OrExpression	( c == 0x57 ) || ( c == 0x77 )		4822895	0		||			
ANR	4824248	EqualityExpression	c == 0x57		4822895	0		==			
ANR	4824249	Identifier	c		4822895	0					
ANR	4824250	PrimaryExpression	0x57		4822895	1					
ANR	4824251	EqualityExpression	c == 0x77		4822895	1		==			
ANR	4824252	Identifier	c		4822895	0					
ANR	4824253	PrimaryExpression	0x77		4822895	1					
ANR	4824254	ExpressionStatement	state = 36	6677:47:238069:238079	4822895	1	True				
ANR	4824255	AssignmentExpression	state = 36		4822895	0		=			
ANR	4824256	Identifier	state		4822895	0					
ANR	4824257	PrimaryExpression	36		4822895	1					
ANR	4824258	ElseStatement	else		4822895	0					
ANR	4824259	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824260	Condition	c == 0x0a	6678:20:238122:238130	4822895	0	True				
ANR	4824261	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824262	Identifier	c		4822895	0					
ANR	4824263	PrimaryExpression	0x0a		4822895	1					
ANR	4824264	ExpressionStatement	state = 12	6678:47:238149:238159	4822895	1	True				
ANR	4824265	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824266	Identifier	state		4822895	0					
ANR	4824267	PrimaryExpression	12		4822895	1					
ANR	4824268	ElseStatement	else		4822895	0					
ANR	4824269	ExpressionStatement	state = 18	6679:47:238218:238228	4822895	0	True				
ANR	4824270	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824271	Identifier	state		4822895	0					
ANR	4824272	PrimaryExpression	18		4822895	1					
ANR	4824273	BreakStatement	break ;	6680:9:238239:238244	4822895	89	True				
ANR	4824274	Label	case 29 :	6682:9:238256:238263	4822895	90	True				
ANR	4824275	IfStatement	if ( ( c == 0x45 ) || ( c == 0x65 ) )		4822895	91					
ANR	4824276	Condition	( c == 0x45 ) || ( c == 0x65 )	6683:19:238312:238337	4822895	0	True				
ANR	4824277	OrExpression	( c == 0x45 ) || ( c == 0x65 )		4822895	0		||			
ANR	4824278	EqualityExpression	c == 0x45		4822895	0		==			
ANR	4824279	Identifier	c		4822895	0					
ANR	4824280	PrimaryExpression	0x45		4822895	1					
ANR	4824281	EqualityExpression	c == 0x65		4822895	1		==			
ANR	4824282	Identifier	c		4822895	0					
ANR	4824283	PrimaryExpression	0x65		4822895	1					
ANR	4824284	ExpressionStatement	state = 30	6683:47:238340:238350	4822895	1	True				
ANR	4824285	AssignmentExpression	state = 30		4822895	0		=			
ANR	4824286	Identifier	state		4822895	0					
ANR	4824287	PrimaryExpression	30		4822895	1					
ANR	4824288	ElseStatement	else		4822895	0					
ANR	4824289	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824290	Condition	c == 0x0a	6684:20:238390:238398	4822895	0	True				
ANR	4824291	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824292	Identifier	c		4822895	0					
ANR	4824293	PrimaryExpression	0x0a		4822895	1					
ANR	4824294	ExpressionStatement	state = 12	6684:47:238417:238427	4822895	1	True				
ANR	4824295	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824296	Identifier	state		4822895	0					
ANR	4824297	PrimaryExpression	12		4822895	1					
ANR	4824298	ElseStatement	else		4822895	0					
ANR	4824299	ExpressionStatement	state = 18	6685:47:238486:238496	4822895	0	True				
ANR	4824300	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824301	Identifier	state		4822895	0					
ANR	4824302	PrimaryExpression	18		4822895	1					
ANR	4824303	BreakStatement	break ;	6686:9:238507:238512	4822895	92	True				
ANR	4824304	Label	case 30 :	6688:9:238524:238531	4822895	93	True				
ANR	4824305	IfStatement	if ( ( c == 0x4e ) || ( c == 0x6e ) )		4822895	94					
ANR	4824306	Condition	( c == 0x4e ) || ( c == 0x6e )	6689:19:238580:238605	4822895	0	True				
ANR	4824307	OrExpression	( c == 0x4e ) || ( c == 0x6e )		4822895	0		||			
ANR	4824308	EqualityExpression	c == 0x4e		4822895	0		==			
ANR	4824309	Identifier	c		4822895	0					
ANR	4824310	PrimaryExpression	0x4e		4822895	1					
ANR	4824311	EqualityExpression	c == 0x6e		4822895	1		==			
ANR	4824312	Identifier	c		4822895	0					
ANR	4824313	PrimaryExpression	0x6e		4822895	1					
ANR	4824314	ExpressionStatement	state = 31	6689:47:238608:238618	4822895	1	True				
ANR	4824315	AssignmentExpression	state = 31		4822895	0		=			
ANR	4824316	Identifier	state		4822895	0					
ANR	4824317	PrimaryExpression	31		4822895	1					
ANR	4824318	ElseStatement	else		4822895	0					
ANR	4824319	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824320	Condition	c == 0x0a	6690:20:238659:238667	4822895	0	True				
ANR	4824321	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824322	Identifier	c		4822895	0					
ANR	4824323	PrimaryExpression	0x0a		4822895	1					
ANR	4824324	ExpressionStatement	state = 12	6690:47:238686:238696	4822895	1	True				
ANR	4824325	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824326	Identifier	state		4822895	0					
ANR	4824327	PrimaryExpression	12		4822895	1					
ANR	4824328	ElseStatement	else		4822895	0					
ANR	4824329	ExpressionStatement	state = 18	6691:47:238755:238765	4822895	0	True				
ANR	4824330	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824331	Identifier	state		4822895	0					
ANR	4824332	PrimaryExpression	18		4822895	1					
ANR	4824333	BreakStatement	break ;	6692:9:238776:238781	4822895	95	True				
ANR	4824334	Label	case 31 :	6694:9:238793:238800	4822895	96	True				
ANR	4824335	IfStatement	if ( ( c == 0x47 ) || ( c == 0x67 ) )		4822895	97					
ANR	4824336	Condition	( c == 0x47 ) || ( c == 0x67 )	6695:19:238849:238874	4822895	0	True				
ANR	4824337	OrExpression	( c == 0x47 ) || ( c == 0x67 )		4822895	0		||			
ANR	4824338	EqualityExpression	c == 0x47		4822895	0		==			
ANR	4824339	Identifier	c		4822895	0					
ANR	4824340	PrimaryExpression	0x47		4822895	1					
ANR	4824341	EqualityExpression	c == 0x67		4822895	1		==			
ANR	4824342	Identifier	c		4822895	0					
ANR	4824343	PrimaryExpression	0x67		4822895	1					
ANR	4824344	ExpressionStatement	state = 32	6695:47:238877:238887	4822895	1	True				
ANR	4824345	AssignmentExpression	state = 32		4822895	0		=			
ANR	4824346	Identifier	state		4822895	0					
ANR	4824347	PrimaryExpression	32		4822895	1					
ANR	4824348	ElseStatement	else		4822895	0					
ANR	4824349	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824350	Condition	c == 0x0a	6696:20:238929:238937	4822895	0	True				
ANR	4824351	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824352	Identifier	c		4822895	0					
ANR	4824353	PrimaryExpression	0x0a		4822895	1					
ANR	4824354	ExpressionStatement	state = 12	6696:47:238956:238966	4822895	1	True				
ANR	4824355	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824356	Identifier	state		4822895	0					
ANR	4824357	PrimaryExpression	12		4822895	1					
ANR	4824358	ElseStatement	else		4822895	0					
ANR	4824359	ExpressionStatement	state = 18	6697:47:239025:239035	4822895	0	True				
ANR	4824360	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824361	Identifier	state		4822895	0					
ANR	4824362	PrimaryExpression	18		4822895	1					
ANR	4824363	BreakStatement	break ;	6698:9:239046:239051	4822895	98	True				
ANR	4824364	Label	case 32 :	6700:9:239063:239070	4822895	99	True				
ANR	4824365	IfStatement	if ( ( c == 0x54 ) || ( c == 0x74 ) )		4822895	100					
ANR	4824366	Condition	( c == 0x54 ) || ( c == 0x74 )	6701:19:239119:239144	4822895	0	True				
ANR	4824367	OrExpression	( c == 0x54 ) || ( c == 0x74 )		4822895	0		||			
ANR	4824368	EqualityExpression	c == 0x54		4822895	0		==			
ANR	4824369	Identifier	c		4822895	0					
ANR	4824370	PrimaryExpression	0x54		4822895	1					
ANR	4824371	EqualityExpression	c == 0x74		4822895	1		==			
ANR	4824372	Identifier	c		4822895	0					
ANR	4824373	PrimaryExpression	0x74		4822895	1					
ANR	4824374	ExpressionStatement	state = 33	6701:47:239147:239157	4822895	1	True				
ANR	4824375	AssignmentExpression	state = 33		4822895	0		=			
ANR	4824376	Identifier	state		4822895	0					
ANR	4824377	PrimaryExpression	33		4822895	1					
ANR	4824378	ElseStatement	else		4822895	0					
ANR	4824379	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824380	Condition	c == 0x0a	6702:20:239200:239208	4822895	0	True				
ANR	4824381	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824382	Identifier	c		4822895	0					
ANR	4824383	PrimaryExpression	0x0a		4822895	1					
ANR	4824384	ExpressionStatement	state = 12	6702:47:239227:239237	4822895	1	True				
ANR	4824385	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824386	Identifier	state		4822895	0					
ANR	4824387	PrimaryExpression	12		4822895	1					
ANR	4824388	ElseStatement	else		4822895	0					
ANR	4824389	ExpressionStatement	state = 18	6703:47:239296:239306	4822895	0	True				
ANR	4824390	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824391	Identifier	state		4822895	0					
ANR	4824392	PrimaryExpression	18		4822895	1					
ANR	4824393	BreakStatement	break ;	6704:9:239317:239322	4822895	101	True				
ANR	4824394	Label	case 33 :	6706:9:239334:239341	4822895	102	True				
ANR	4824395	IfStatement	if ( ( c == 0x48 ) || ( c == 0x68 ) )		4822895	103					
ANR	4824396	Condition	( c == 0x48 ) || ( c == 0x68 )	6707:19:239390:239415	4822895	0	True				
ANR	4824397	OrExpression	( c == 0x48 ) || ( c == 0x68 )		4822895	0		||			
ANR	4824398	EqualityExpression	c == 0x48		4822895	0		==			
ANR	4824399	Identifier	c		4822895	0					
ANR	4824400	PrimaryExpression	0x48		4822895	1					
ANR	4824401	EqualityExpression	c == 0x68		4822895	1		==			
ANR	4824402	Identifier	c		4822895	0					
ANR	4824403	PrimaryExpression	0x68		4822895	1					
ANR	4824404	ExpressionStatement	state = 34	6707:47:239418:239428	4822895	1	True				
ANR	4824405	AssignmentExpression	state = 34		4822895	0		=			
ANR	4824406	Identifier	state		4822895	0					
ANR	4824407	PrimaryExpression	34		4822895	1					
ANR	4824408	ElseStatement	else		4822895	0					
ANR	4824409	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824410	Condition	c == 0x0a	6708:20:239472:239480	4822895	0	True				
ANR	4824411	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824412	Identifier	c		4822895	0					
ANR	4824413	PrimaryExpression	0x0a		4822895	1					
ANR	4824414	ExpressionStatement	state = 12	6708:47:239499:239509	4822895	1	True				
ANR	4824415	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824416	Identifier	state		4822895	0					
ANR	4824417	PrimaryExpression	12		4822895	1					
ANR	4824418	ElseStatement	else		4822895	0					
ANR	4824419	ExpressionStatement	state = 18	6709:47:239568:239578	4822895	0	True				
ANR	4824420	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824421	Identifier	state		4822895	0					
ANR	4824422	PrimaryExpression	18		4822895	1					
ANR	4824423	BreakStatement	break ;	6710:9:239589:239594	4822895	104	True				
ANR	4824424	Label	case 34 :	6712:9:239606:239613	4822895	105	True				
ANR	4824425	ExpressionStatement	j = i	6713:11:239654:239659	4822895	106	True				
ANR	4824426	AssignmentExpression	j = i		4822895	0		=			
ANR	4824427	Identifier	j		4822895	0					
ANR	4824428	Identifier	i		4822895	1					
ANR	4824429	IfStatement	if ( c == 0x3d )		4822895	107					
ANR	4824430	Condition	c == 0x3d	6714:20:239735:239743	4822895	0	True				
ANR	4824431	EqualityExpression	c == 0x3d		4822895	0		==			
ANR	4824432	Identifier	c		4822895	0					
ANR	4824433	PrimaryExpression	0x3d		4822895	1					
ANR	4824434	ExpressionStatement	state = 51	6714:47:239762:239772	4822895	1	True				
ANR	4824435	AssignmentExpression	state = 51		4822895	0		=			
ANR	4824436	Identifier	state		4822895	0					
ANR	4824437	PrimaryExpression	51		4822895	1					
ANR	4824438	ElseStatement	else		4822895	0					
ANR	4824439	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824440	Condition	c == 0x0a	6715:20:239816:239824	4822895	0	True				
ANR	4824441	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824442	Identifier	c		4822895	0					
ANR	4824443	PrimaryExpression	0x0a		4822895	1					
ANR	4824444	ExpressionStatement	state = 12	6715:47:239843:239853	4822895	1	True				
ANR	4824445	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824446	Identifier	state		4822895	0					
ANR	4824447	PrimaryExpression	12		4822895	1					
ANR	4824448	ElseStatement	else		4822895	0					
ANR	4824449	IfStatement	if ( ( c != 0x20 ) && ( c != 0x09 ) )		4822895	0					
ANR	4824450	Condition	( c != 0x20 ) && ( c != 0x09 )	6716:19:239884:239909	4822895	0	True				
ANR	4824451	AndExpression	( c != 0x20 ) && ( c != 0x09 )		4822895	0		&&			
ANR	4824452	EqualityExpression	c != 0x20		4822895	0		!=			
ANR	4824453	Identifier	c		4822895	0					
ANR	4824454	PrimaryExpression	0x20		4822895	1					
ANR	4824455	EqualityExpression	c != 0x09		4822895	1		!=			
ANR	4824456	Identifier	c		4822895	0					
ANR	4824457	PrimaryExpression	0x09		4822895	1					
ANR	4824458	ExpressionStatement	state = 18	6716:47:239912:239922	4822895	1	True				
ANR	4824459	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824460	Identifier	state		4822895	0					
ANR	4824461	PrimaryExpression	18		4822895	1					
ANR	4824462	BreakStatement	break ;	6717:9:239933:239938	4822895	108	True				
ANR	4824463	Label	case 51 :	6719:9:239950:239957	4822895	109	True				
ANR	4824464	IfStatement	if ( c == 0x0a )		4822895	110					
ANR	4824465	Condition	c == 0x0a	6720:19:240010:240018	4822895	0	True				
ANR	4824466	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824467	Identifier	c		4822895	0					
ANR	4824468	PrimaryExpression	0x0a		4822895	1					
ANR	4824469	ExpressionStatement	state = 12	6720:47:240038:240048	4822895	1	True				
ANR	4824470	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824471	Identifier	state		4822895	0					
ANR	4824472	PrimaryExpression	12		4822895	1					
ANR	4824473	ElseStatement	else		4822895	0					
ANR	4824474	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		4822895	0					
ANR	4824475	Condition	( c == 0x20 ) || ( c == 0x09 )	6721:19:240069:240094	4822895	0	True				
ANR	4824476	OrExpression	( c == 0x20 ) || ( c == 0x09 )		4822895	0		||			
ANR	4824477	EqualityExpression	c == 0x20		4822895	0		==			
ANR	4824478	Identifier	c		4822895	0					
ANR	4824479	PrimaryExpression	0x20		4822895	1					
ANR	4824480	EqualityExpression	c == 0x09		4822895	1		==			
ANR	4824481	Identifier	c		4822895	0					
ANR	4824482	PrimaryExpression	0x09		4822895	1					
ANR	4824483	ExpressionStatement	j = i	6721:47:240097:240106	4822895	1	True				
ANR	4824484	AssignmentExpression	j = i		4822895	0		=			
ANR	4824485	Identifier	j		4822895	0					
ANR	4824486	Identifier	i		4822895	1					
ANR	4824487	ElseStatement	else		4822895	0					
ANR	4824488	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		4822895	0					
ANR	4824489	Condition	( 0x30 > c ) || ( c > 0x39 )	6722:19:240127:240152	4822895	0	True				
ANR	4824490	OrExpression	( 0x30 > c ) || ( c > 0x39 )		4822895	0		||			
ANR	4824491	RelationalExpression	0x30 > c		4822895	0		>			
ANR	4824492	PrimaryExpression	0x30		4822895	0					
ANR	4824493	Identifier	c		4822895	1					
ANR	4824494	RelationalExpression	c > 0x39		4822895	1		>			
ANR	4824495	Identifier	c		4822895	0					
ANR	4824496	PrimaryExpression	0x39		4822895	1					
ANR	4824497	ExpressionStatement	state = 18	6722:47:240155:240165	4822895	1	True				
ANR	4824498	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824499	Identifier	state		4822895	0					
ANR	4824500	PrimaryExpression	18		4822895	1					
ANR	4824501	ElseStatement	else		4822895	0					
ANR	4824502	ExpressionStatement	state = 35	6723:47:240214:240224	4822895	0	True				
ANR	4824503	AssignmentExpression	state = 35		4822895	0		=			
ANR	4824504	Identifier	state		4822895	0					
ANR	4824505	PrimaryExpression	35		4822895	1					
ANR	4824506	BreakStatement	break ;	6724:9:240235:240240	4822895	111	True				
ANR	4824507	Label	case 35 :	6726:9:240252:240259	4822895	112	True				
ANR	4824508	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		4822895	113					
ANR	4824509	Condition	( 0x30 > c ) || ( c > 0x39 )	6727:14:240302:240325	4822895	0	True				
ANR	4824510	OrExpression	( 0x30 > c ) || ( c > 0x39 )		4822895	0		||			
ANR	4824511	RelationalExpression	0x30 > c		4822895	0		>			
ANR	4824512	PrimaryExpression	0x30		4822895	0					
ANR	4824513	Identifier	c		4822895	1					
ANR	4824514	RelationalExpression	c > 0x39		4822895	1		>			
ANR	4824515	Identifier	c		4822895	0					
ANR	4824516	PrimaryExpression	0x39		4822895	1					
ANR	4824517	CompoundStatement		297:40:11127:11127	4822895	1					
ANR	4824518	IfStatement	if ( B_PAGELENGTH & upd -> flags )		4822895	0					
ANR	4824519	Condition	B_PAGELENGTH & upd -> flags	6729:16:240367:240392	4822895	0	True				
ANR	4824520	BitAndExpression	B_PAGELENGTH & upd -> flags		4822895	0		&			
ANR	4824521	Identifier	B_PAGELENGTH		4822895	0					
ANR	4824522	PtrMemberAccess	upd -> flags		4822895	1					
ANR	4824523	Identifier	upd		4822895	0					
ANR	4824524	Identifier	flags		4822895	1					
ANR	4824525	CompoundStatement		299:44:11194:11194	4822895	1					
ANR	4824526	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , ( int ) ( 720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5 ) )"	6731:15:240437:240534	4822895	0	True				
ANR	4824527	CallExpression	"gs_sprintf ( cv , ""%d"" , ( int ) ( 720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5 ) )"		4822895	0					
ANR	4824528	Callee	gs_sprintf		4822895	0					
ANR	4824529	Identifier	gs_sprintf		4822895	0					
ANR	4824530	ArgumentList	cv		4822895	1					
ANR	4824531	Argument	cv		4822895	0					
ANR	4824532	Identifier	cv		4822895	0					
ANR	4824533	Argument	"""%d"""		4822895	1					
ANR	4824534	PrimaryExpression	"""%d"""		4822895	0					
ANR	4824535	Argument	( int ) ( 720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5 )		4822895	2					
ANR	4824536	CastExpression	( int ) ( 720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5 )		4822895	0					
ANR	4824537	CastTarget	int		4822895	0					
ANR	4824538	AdditiveExpression	720.0 * udev -> height / udev -> y_pixels_per_inch + 0.5		4822895	1		+			
ANR	4824539	MultiplicativeExpression	720.0 * udev -> height / udev -> y_pixels_per_inch		4822895	0		*			
ANR	4824540	PrimaryExpression	720.0		4822895	0					
ANR	4824541	MultiplicativeExpression	udev -> height / udev -> y_pixels_per_inch		4822895	1		/			
ANR	4824542	PtrMemberAccess	udev -> height		4822895	0					
ANR	4824543	Identifier	udev		4822895	0					
ANR	4824544	Identifier	height		4822895	1					
ANR	4824545	PtrMemberAccess	udev -> y_pixels_per_inch		4822895	1					
ANR	4824546	Identifier	udev		4822895	0					
ANR	4824547	Identifier	y_pixels_per_inch		4822895	1					
ANR	4824548	PrimaryExpression	0.5		4822895	1					
ANR	4824549	ExpressionStatement	ncv = strlen ( cv )	6733:15:240551:240567	4822895	1	True				
ANR	4824550	AssignmentExpression	ncv = strlen ( cv )		4822895	0		=			
ANR	4824551	Identifier	ncv		4822895	0					
ANR	4824552	CallExpression	strlen ( cv )		4822895	1					
ANR	4824553	Callee	strlen		4822895	0					
ANR	4824554	Identifier	strlen		4822895	0					
ANR	4824555	ArgumentList	cv		4822895	1					
ANR	4824556	Argument	cv		4822895	0					
ANR	4824557	Identifier	cv		4822895	0					
ANR	4824558	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6735:15:240585:240635	4822895	2	True				
ANR	4824559	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	0		=			
ANR	4824560	Identifier	nbp		4822895	0					
ANR	4824561	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4824562	AdditiveExpression	j + 1		4822895	0		+			
ANR	4824563	Identifier	j		4822895	0					
ANR	4824564	PrimaryExpression	1		4822895	1					
ANR	4824565	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4824566	Identifier	ncv		4822895	0					
ANR	4824567	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	1		-			
ANR	4824568	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4824569	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4824570	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4824571	Identifier	upd		4822895	0					
ANR	4824572	Identifier	strings		4822895	1					
ANR	4824573	Identifier	S_BEGIN		4822895	1					
ANR	4824574	Identifier	size		4822895	1					
ANR	4824575	Identifier	i		4822895	1					
ANR	4824576	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6736:15:240652:240690	4822895	3	True				
ANR	4824577	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		4822895	0					
ANR	4824578	Callee	UPD_MM_GET_ARRAY		4822895	0					
ANR	4824579	Identifier	UPD_MM_GET_ARRAY		4822895	0					
ANR	4824580	ArgumentList	udev -> memory		4822895	1					
ANR	4824581	Argument	udev -> memory		4822895	0					
ANR	4824582	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4824583	Identifier	udev		4822895	0					
ANR	4824584	Identifier	memory		4822895	1					
ANR	4824585	Argument	bp		4822895	1					
ANR	4824586	Identifier	bp		4822895	0					
ANR	4824587	Argument	nbp		4822895	2					
ANR	4824588	Identifier	nbp		4822895	0					
ANR	4824589	IfStatement	if ( 0 <= j )		4822895	4					
ANR	4824590	Condition	0 <= j	6738:18:240711:240716	4822895	0	True				
ANR	4824591	RelationalExpression	0 <= j		4822895	0		<=			
ANR	4824592	PrimaryExpression	0		4822895	0					
ANR	4824593	Identifier	j		4822895	1					
ANR	4824594	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6738:26:240719:240760	4822895	1	True				
ANR	4824595	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		4822895	0					
ANR	4824596	Callee	memcpy		4822895	0					
ANR	4824597	Identifier	memcpy		4822895	0					
ANR	4824598	ArgumentList	bp		4822895	1					
ANR	4824599	Argument	bp		4822895	0					
ANR	4824600	Identifier	bp		4822895	0					
ANR	4824601	Argument	upd -> strings [ S_BEGIN ] . data		4822895	1					
ANR	4824602	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4824603	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4824604	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4824605	Identifier	upd		4822895	0					
ANR	4824606	Identifier	strings		4822895	1					
ANR	4824607	Identifier	S_BEGIN		4822895	1					
ANR	4824608	Identifier	data		4822895	1					
ANR	4824609	Argument	j + 1		4822895	2					
ANR	4824610	AdditiveExpression	j + 1		4822895	0		+			
ANR	4824611	Identifier	j		4822895	0					
ANR	4824612	PrimaryExpression	1		4822895	1					
ANR	4824613	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6739:15:240777:240802	4822895	5	True				
ANR	4824614	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		4822895	0					
ANR	4824615	Callee	memcpy		4822895	0					
ANR	4824616	Identifier	memcpy		4822895	0					
ANR	4824617	ArgumentList	bp + j + 1		4822895	1					
ANR	4824618	Argument	bp + j + 1		4822895	0					
ANR	4824619	AdditiveExpression	bp + j + 1		4822895	0		+			
ANR	4824620	Identifier	bp		4822895	0					
ANR	4824621	AdditiveExpression	j + 1		4822895	1		+			
ANR	4824622	Identifier	j		4822895	0					
ANR	4824623	PrimaryExpression	1		4822895	1					
ANR	4824624	Argument	cv		4822895	1					
ANR	4824625	Identifier	cv		4822895	0					
ANR	4824626	Argument	ncv		4822895	2					
ANR	4824627	Identifier	ncv		4822895	0					
ANR	4824628	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6740:15:240819:240927	4822895	6	True				
ANR	4824629	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		4822895	0					
ANR	4824630	Callee	memcpy		4822895	0					
ANR	4824631	Identifier	memcpy		4822895	0					
ANR	4824632	ArgumentList	bp + j + 1 + ncv		4822895	1					
ANR	4824633	Argument	bp + j + 1 + ncv		4822895	0					
ANR	4824634	AdditiveExpression	bp + j + 1 + ncv		4822895	0		+			
ANR	4824635	Identifier	bp		4822895	0					
ANR	4824636	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4824637	Identifier	j		4822895	0					
ANR	4824638	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4824639	PrimaryExpression	1		4822895	0					
ANR	4824640	Identifier	ncv		4822895	1					
ANR	4824641	Argument	upd -> strings [ S_BEGIN ] . data + i		4822895	1					
ANR	4824642	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		4822895	0		+			
ANR	4824643	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4824644	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4824645	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4824646	Identifier	upd		4822895	0					
ANR	4824647	Identifier	strings		4822895	1					
ANR	4824648	Identifier	S_BEGIN		4822895	1					
ANR	4824649	Identifier	data		4822895	1					
ANR	4824650	Identifier	i		4822895	1					
ANR	4824651	Argument	upd -> strings [ S_BEGIN ] . size - i		4822895	2					
ANR	4824652	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	0		-			
ANR	4824653	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4824654	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4824655	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4824656	Identifier	upd		4822895	0					
ANR	4824657	Identifier	strings		4822895	1					
ANR	4824658	Identifier	S_BEGIN		4822895	1					
ANR	4824659	Identifier	size		4822895	1					
ANR	4824660	Identifier	i		4822895	1					
ANR	4824661	ExpressionStatement	i = j + 1 + ncv	6742:15:240944:240955	4822895	7	True				
ANR	4824662	AssignmentExpression	i = j + 1 + ncv		4822895	0		=			
ANR	4824663	Identifier	i		4822895	0					
ANR	4824664	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4824665	Identifier	j		4822895	0					
ANR	4824666	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4824667	PrimaryExpression	1		4822895	0					
ANR	4824668	Identifier	ncv		4822895	1					
ANR	4824669	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6743:15:240972:241025	4822895	8	True				
ANR	4824670	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		4822895	0					
ANR	4824671	Callee	UPD_MM_DEL_PARAM		4822895	0					
ANR	4824672	Identifier	UPD_MM_DEL_PARAM		4822895	0					
ANR	4824673	ArgumentList	udev -> memory		4822895	1					
ANR	4824674	Argument	udev -> memory		4822895	0					
ANR	4824675	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4824676	Identifier	udev		4822895	0					
ANR	4824677	Identifier	memory		4822895	1					
ANR	4824678	Argument	upd -> strings [ S_BEGIN ]		4822895	1					
ANR	4824679	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4824680	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4824681	Identifier	upd		4822895	0					
ANR	4824682	Identifier	strings		4822895	1					
ANR	4824683	Identifier	S_BEGIN		4822895	1					
ANR	4824684	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6744:15:241042:241073	4822895	9	True				
ANR	4824685	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		4822895	0		=			
ANR	4824686	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4824687	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4824688	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4824689	Identifier	upd		4822895	0					
ANR	4824690	Identifier	strings		4822895	1					
ANR	4824691	Identifier	S_BEGIN		4822895	1					
ANR	4824692	Identifier	data		4822895	1					
ANR	4824693	Identifier	bp		4822895	1					
ANR	4824694	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6745:15:241090:241122	4822895	10	True				
ANR	4824695	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		4822895	0		=			
ANR	4824696	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4824697	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4824698	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4824699	Identifier	upd		4822895	0					
ANR	4824700	Identifier	strings		4822895	1					
ANR	4824701	Identifier	S_BEGIN		4822895	1					
ANR	4824702	Identifier	size		4822895	1					
ANR	4824703	Identifier	nbp		4822895	1					
ANR	4824704	IfStatement	if ( c == 0x0a )		4822895	1					
ANR	4824705	Condition	c == 0x0a	6748:17:241212:241220	4822895	0	True				
ANR	4824706	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824707	Identifier	c		4822895	0					
ANR	4824708	PrimaryExpression	0x0a		4822895	1					
ANR	4824709	ExpressionStatement	state = 12	6748:29:241224:241234	4822895	1	True				
ANR	4824710	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824711	Identifier	state		4822895	0					
ANR	4824712	PrimaryExpression	12		4822895	1					
ANR	4824713	ElseStatement	else		4822895	0					
ANR	4824714	ExpressionStatement	state = 18	6749:29:241265:241275	4822895	0	True				
ANR	4824715	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824716	Identifier	state		4822895	0					
ANR	4824717	PrimaryExpression	18		4822895	1					
ANR	4824718	BreakStatement	break ;	6751:9:241299:241304	4822895	114	True				
ANR	4824719	Label	case 36 :	6753:9:241316:241323	4822895	115	True				
ANR	4824720	IfStatement	if ( ( c == 0x49 ) || ( c == 0x69 ) )		4822895	116					
ANR	4824721	Condition	( c == 0x49 ) || ( c == 0x69 )	6754:19:241371:241396	4822895	0	True				
ANR	4824722	OrExpression	( c == 0x49 ) || ( c == 0x69 )		4822895	0		||			
ANR	4824723	EqualityExpression	c == 0x49		4822895	0		==			
ANR	4824724	Identifier	c		4822895	0					
ANR	4824725	PrimaryExpression	0x49		4822895	1					
ANR	4824726	EqualityExpression	c == 0x69		4822895	1		==			
ANR	4824727	Identifier	c		4822895	0					
ANR	4824728	PrimaryExpression	0x69		4822895	1					
ANR	4824729	ExpressionStatement	state = 37	6754:47:241399:241409	4822895	1	True				
ANR	4824730	AssignmentExpression	state = 37		4822895	0		=			
ANR	4824731	Identifier	state		4822895	0					
ANR	4824732	PrimaryExpression	37		4822895	1					
ANR	4824733	ElseStatement	else		4822895	0					
ANR	4824734	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824735	Condition	c == 0x0a	6755:20:241449:241457	4822895	0	True				
ANR	4824736	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824737	Identifier	c		4822895	0					
ANR	4824738	PrimaryExpression	0x0a		4822895	1					
ANR	4824739	ExpressionStatement	state = 12	6755:47:241476:241486	4822895	1	True				
ANR	4824740	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824741	Identifier	state		4822895	0					
ANR	4824742	PrimaryExpression	12		4822895	1					
ANR	4824743	ElseStatement	else		4822895	0					
ANR	4824744	ExpressionStatement	state = 18	6756:47:241545:241555	4822895	0	True				
ANR	4824745	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824746	Identifier	state		4822895	0					
ANR	4824747	PrimaryExpression	18		4822895	1					
ANR	4824748	BreakStatement	break ;	6757:9:241566:241571	4822895	117	True				
ANR	4824749	Label	case 37 :	6759:9:241583:241590	4822895	118	True				
ANR	4824750	IfStatement	if ( ( c == 0x44 ) || ( c == 0x64 ) )		4822895	119					
ANR	4824751	Condition	( c == 0x44 ) || ( c == 0x64 )	6760:19:241637:241662	4822895	0	True				
ANR	4824752	OrExpression	( c == 0x44 ) || ( c == 0x64 )		4822895	0		||			
ANR	4824753	EqualityExpression	c == 0x44		4822895	0		==			
ANR	4824754	Identifier	c		4822895	0					
ANR	4824755	PrimaryExpression	0x44		4822895	1					
ANR	4824756	EqualityExpression	c == 0x64		4822895	1		==			
ANR	4824757	Identifier	c		4822895	0					
ANR	4824758	PrimaryExpression	0x64		4822895	1					
ANR	4824759	ExpressionStatement	state = 38	6760:47:241665:241675	4822895	1	True				
ANR	4824760	AssignmentExpression	state = 38		4822895	0		=			
ANR	4824761	Identifier	state		4822895	0					
ANR	4824762	PrimaryExpression	38		4822895	1					
ANR	4824763	ElseStatement	else		4822895	0					
ANR	4824764	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824765	Condition	c == 0x0a	6761:20:241716:241724	4822895	0	True				
ANR	4824766	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824767	Identifier	c		4822895	0					
ANR	4824768	PrimaryExpression	0x0a		4822895	1					
ANR	4824769	ExpressionStatement	state = 12	6761:47:241743:241753	4822895	1	True				
ANR	4824770	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824771	Identifier	state		4822895	0					
ANR	4824772	PrimaryExpression	12		4822895	1					
ANR	4824773	ElseStatement	else		4822895	0					
ANR	4824774	ExpressionStatement	state = 18	6762:47:241812:241822	4822895	0	True				
ANR	4824775	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824776	Identifier	state		4822895	0					
ANR	4824777	PrimaryExpression	18		4822895	1					
ANR	4824778	BreakStatement	break ;	6763:9:241833:241838	4822895	120	True				
ANR	4824779	Label	case 38 :	6765:9:241850:241857	4822895	121	True				
ANR	4824780	IfStatement	if ( ( c == 0x54 ) || ( c == 0x74 ) )		4822895	122					
ANR	4824781	Condition	( c == 0x54 ) || ( c == 0x74 )	6766:19:241905:241930	4822895	0	True				
ANR	4824782	OrExpression	( c == 0x54 ) || ( c == 0x74 )		4822895	0		||			
ANR	4824783	EqualityExpression	c == 0x54		4822895	0		==			
ANR	4824784	Identifier	c		4822895	0					
ANR	4824785	PrimaryExpression	0x54		4822895	1					
ANR	4824786	EqualityExpression	c == 0x74		4822895	1		==			
ANR	4824787	Identifier	c		4822895	0					
ANR	4824788	PrimaryExpression	0x74		4822895	1					
ANR	4824789	ExpressionStatement	state = 39	6766:47:241933:241943	4822895	1	True				
ANR	4824790	AssignmentExpression	state = 39		4822895	0		=			
ANR	4824791	Identifier	state		4822895	0					
ANR	4824792	PrimaryExpression	39		4822895	1					
ANR	4824793	ElseStatement	else		4822895	0					
ANR	4824794	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824795	Condition	c == 0x0a	6767:20:241985:241993	4822895	0	True				
ANR	4824796	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824797	Identifier	c		4822895	0					
ANR	4824798	PrimaryExpression	0x0a		4822895	1					
ANR	4824799	ExpressionStatement	state = 12	6767:47:242012:242022	4822895	1	True				
ANR	4824800	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824801	Identifier	state		4822895	0					
ANR	4824802	PrimaryExpression	12		4822895	1					
ANR	4824803	ElseStatement	else		4822895	0					
ANR	4824804	ExpressionStatement	state = 18	6768:47:242081:242091	4822895	0	True				
ANR	4824805	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824806	Identifier	state		4822895	0					
ANR	4824807	PrimaryExpression	18		4822895	1					
ANR	4824808	BreakStatement	break ;	6769:9:242102:242107	4822895	123	True				
ANR	4824809	Label	case 39 :	6771:9:242119:242126	4822895	124	True				
ANR	4824810	IfStatement	if ( ( c == 0x48 ) || ( c == 0x68 ) )		4822895	125					
ANR	4824811	Condition	( c == 0x48 ) || ( c == 0x68 )	6772:19:242174:242199	4822895	0	True				
ANR	4824812	OrExpression	( c == 0x48 ) || ( c == 0x68 )		4822895	0		||			
ANR	4824813	EqualityExpression	c == 0x48		4822895	0		==			
ANR	4824814	Identifier	c		4822895	0					
ANR	4824815	PrimaryExpression	0x48		4822895	1					
ANR	4824816	EqualityExpression	c == 0x68		4822895	1		==			
ANR	4824817	Identifier	c		4822895	0					
ANR	4824818	PrimaryExpression	0x68		4822895	1					
ANR	4824819	ExpressionStatement	state = 52	6772:47:242202:242212	4822895	1	True				
ANR	4824820	AssignmentExpression	state = 52		4822895	0		=			
ANR	4824821	Identifier	state		4822895	0					
ANR	4824822	PrimaryExpression	52		4822895	1					
ANR	4824823	ElseStatement	else		4822895	0					
ANR	4824824	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824825	Condition	c == 0x0a	6773:20:242255:242263	4822895	0	True				
ANR	4824826	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824827	Identifier	c		4822895	0					
ANR	4824828	PrimaryExpression	0x0a		4822895	1					
ANR	4824829	ExpressionStatement	state = 12	6773:47:242282:242292	4822895	1	True				
ANR	4824830	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824831	Identifier	state		4822895	0					
ANR	4824832	PrimaryExpression	12		4822895	1					
ANR	4824833	ElseStatement	else		4822895	0					
ANR	4824834	ExpressionStatement	state = 18	6774:47:242351:242361	4822895	0	True				
ANR	4824835	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824836	Identifier	state		4822895	0					
ANR	4824837	PrimaryExpression	18		4822895	1					
ANR	4824838	BreakStatement	break ;	6775:9:242372:242377	4822895	126	True				
ANR	4824839	Label	case 52 :	6777:9:242389:242396	4822895	127	True				
ANR	4824840	ExpressionStatement	j = i	6778:11:242436:242441	4822895	128	True				
ANR	4824841	AssignmentExpression	j = i		4822895	0		=			
ANR	4824842	Identifier	j		4822895	0					
ANR	4824843	Identifier	i		4822895	1					
ANR	4824844	IfStatement	if ( c == 0x3d )		4822895	129					
ANR	4824845	Condition	c == 0x3d	6779:20:242517:242525	4822895	0	True				
ANR	4824846	EqualityExpression	c == 0x3d		4822895	0		==			
ANR	4824847	Identifier	c		4822895	0					
ANR	4824848	PrimaryExpression	0x3d		4822895	1					
ANR	4824849	ExpressionStatement	state = 53	6779:47:242544:242554	4822895	1	True				
ANR	4824850	AssignmentExpression	state = 53		4822895	0		=			
ANR	4824851	Identifier	state		4822895	0					
ANR	4824852	PrimaryExpression	53		4822895	1					
ANR	4824853	ElseStatement	else		4822895	0					
ANR	4824854	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4824855	Condition	c == 0x0a	6780:20:242597:242605	4822895	0	True				
ANR	4824856	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824857	Identifier	c		4822895	0					
ANR	4824858	PrimaryExpression	0x0a		4822895	1					
ANR	4824859	ExpressionStatement	state = 12	6780:47:242624:242634	4822895	1	True				
ANR	4824860	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824861	Identifier	state		4822895	0					
ANR	4824862	PrimaryExpression	12		4822895	1					
ANR	4824863	ElseStatement	else		4822895	0					
ANR	4824864	IfStatement	if ( ( c != 0x20 ) && ( c != 0x09 ) )		4822895	0					
ANR	4824865	Condition	( c != 0x20 ) && ( c != 0x09 )	6781:19:242665:242690	4822895	0	True				
ANR	4824866	AndExpression	( c != 0x20 ) && ( c != 0x09 )		4822895	0		&&			
ANR	4824867	EqualityExpression	c != 0x20		4822895	0		!=			
ANR	4824868	Identifier	c		4822895	0					
ANR	4824869	PrimaryExpression	0x20		4822895	1					
ANR	4824870	EqualityExpression	c != 0x09		4822895	1		!=			
ANR	4824871	Identifier	c		4822895	0					
ANR	4824872	PrimaryExpression	0x09		4822895	1					
ANR	4824873	ExpressionStatement	state = 18	6781:47:242693:242703	4822895	1	True				
ANR	4824874	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824875	Identifier	state		4822895	0					
ANR	4824876	PrimaryExpression	18		4822895	1					
ANR	4824877	BreakStatement	break ;	6782:9:242714:242719	4822895	130	True				
ANR	4824878	Label	case 53 :	6784:9:242731:242738	4822895	131	True				
ANR	4824879	IfStatement	if ( c == 0x0a )		4822895	132					
ANR	4824880	Condition	c == 0x0a	6785:19:242790:242798	4822895	0	True				
ANR	4824881	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4824882	Identifier	c		4822895	0					
ANR	4824883	PrimaryExpression	0x0a		4822895	1					
ANR	4824884	ExpressionStatement	state = 12	6785:47:242818:242828	4822895	1	True				
ANR	4824885	AssignmentExpression	state = 12		4822895	0		=			
ANR	4824886	Identifier	state		4822895	0					
ANR	4824887	PrimaryExpression	12		4822895	1					
ANR	4824888	ElseStatement	else		4822895	0					
ANR	4824889	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		4822895	0					
ANR	4824890	Condition	( c == 0x20 ) || ( c == 0x09 )	6786:19:242849:242874	4822895	0	True				
ANR	4824891	OrExpression	( c == 0x20 ) || ( c == 0x09 )		4822895	0		||			
ANR	4824892	EqualityExpression	c == 0x20		4822895	0		==			
ANR	4824893	Identifier	c		4822895	0					
ANR	4824894	PrimaryExpression	0x20		4822895	1					
ANR	4824895	EqualityExpression	c == 0x09		4822895	1		==			
ANR	4824896	Identifier	c		4822895	0					
ANR	4824897	PrimaryExpression	0x09		4822895	1					
ANR	4824898	ExpressionStatement	j = i	6786:47:242877:242886	4822895	1	True				
ANR	4824899	AssignmentExpression	j = i		4822895	0		=			
ANR	4824900	Identifier	j		4822895	0					
ANR	4824901	Identifier	i		4822895	1					
ANR	4824902	ElseStatement	else		4822895	0					
ANR	4824903	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		4822895	0					
ANR	4824904	Condition	( 0x30 > c ) || ( c > 0x39 )	6787:19:242907:242932	4822895	0	True				
ANR	4824905	OrExpression	( 0x30 > c ) || ( c > 0x39 )		4822895	0		||			
ANR	4824906	RelationalExpression	0x30 > c		4822895	0		>			
ANR	4824907	PrimaryExpression	0x30		4822895	0					
ANR	4824908	Identifier	c		4822895	1					
ANR	4824909	RelationalExpression	c > 0x39		4822895	1		>			
ANR	4824910	Identifier	c		4822895	0					
ANR	4824911	PrimaryExpression	0x39		4822895	1					
ANR	4824912	ExpressionStatement	state = 18	6787:47:242935:242945	4822895	1	True				
ANR	4824913	AssignmentExpression	state = 18		4822895	0		=			
ANR	4824914	Identifier	state		4822895	0					
ANR	4824915	PrimaryExpression	18		4822895	1					
ANR	4824916	ElseStatement	else		4822895	0					
ANR	4824917	ExpressionStatement	state = 40	6788:47:242994:243004	4822895	0	True				
ANR	4824918	AssignmentExpression	state = 40		4822895	0		=			
ANR	4824919	Identifier	state		4822895	0					
ANR	4824920	PrimaryExpression	40		4822895	1					
ANR	4824921	BreakStatement	break ;	6789:9:243015:243020	4822895	133	True				
ANR	4824922	Label	case 40 :	6791:9:243032:243039	4822895	134	True				
ANR	4824923	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		4822895	135					
ANR	4824924	Condition	( 0x30 > c ) || ( c > 0x39 )	6792:14:243082:243105	4822895	0	True				
ANR	4824925	OrExpression	( 0x30 > c ) || ( c > 0x39 )		4822895	0		||			
ANR	4824926	RelationalExpression	0x30 > c		4822895	0		>			
ANR	4824927	PrimaryExpression	0x30		4822895	0					
ANR	4824928	Identifier	c		4822895	1					
ANR	4824929	RelationalExpression	c > 0x39		4822895	1		>			
ANR	4824930	Identifier	c		4822895	0					
ANR	4824931	PrimaryExpression	0x39		4822895	1					
ANR	4824932	CompoundStatement		362:40:13907:13907	4822895	1					
ANR	4824933	IfStatement	if ( B_PAGEWIDTH & upd -> flags )		4822895	0					
ANR	4824934	Condition	B_PAGEWIDTH & upd -> flags	6794:16:243147:243171	4822895	0	True				
ANR	4824935	BitAndExpression	B_PAGEWIDTH & upd -> flags		4822895	0		&			
ANR	4824936	Identifier	B_PAGEWIDTH		4822895	0					
ANR	4824937	PtrMemberAccess	upd -> flags		4822895	1					
ANR	4824938	Identifier	upd		4822895	0					
ANR	4824939	Identifier	flags		4822895	1					
ANR	4824940	CompoundStatement		364:43:13973:13973	4822895	1					
ANR	4824941	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , ( int ) ( 720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5 ) )"	6796:15:243216:243312	4822895	0	True				
ANR	4824942	CallExpression	"gs_sprintf ( cv , ""%d"" , ( int ) ( 720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5 ) )"		4822895	0					
ANR	4824943	Callee	gs_sprintf		4822895	0					
ANR	4824944	Identifier	gs_sprintf		4822895	0					
ANR	4824945	ArgumentList	cv		4822895	1					
ANR	4824946	Argument	cv		4822895	0					
ANR	4824947	Identifier	cv		4822895	0					
ANR	4824948	Argument	"""%d"""		4822895	1					
ANR	4824949	PrimaryExpression	"""%d"""		4822895	0					
ANR	4824950	Argument	( int ) ( 720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5 )		4822895	2					
ANR	4824951	CastExpression	( int ) ( 720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5 )		4822895	0					
ANR	4824952	CastTarget	int		4822895	0					
ANR	4824953	AdditiveExpression	720.0 * udev -> width / udev -> x_pixels_per_inch + 0.5		4822895	1		+			
ANR	4824954	MultiplicativeExpression	720.0 * udev -> width / udev -> x_pixels_per_inch		4822895	0		*			
ANR	4824955	PrimaryExpression	720.0		4822895	0					
ANR	4824956	MultiplicativeExpression	udev -> width / udev -> x_pixels_per_inch		4822895	1		/			
ANR	4824957	PtrMemberAccess	udev -> width		4822895	0					
ANR	4824958	Identifier	udev		4822895	0					
ANR	4824959	Identifier	width		4822895	1					
ANR	4824960	PtrMemberAccess	udev -> x_pixels_per_inch		4822895	1					
ANR	4824961	Identifier	udev		4822895	0					
ANR	4824962	Identifier	x_pixels_per_inch		4822895	1					
ANR	4824963	PrimaryExpression	0.5		4822895	1					
ANR	4824964	ExpressionStatement	ncv = strlen ( cv )	6798:15:243329:243345	4822895	1	True				
ANR	4824965	AssignmentExpression	ncv = strlen ( cv )		4822895	0		=			
ANR	4824966	Identifier	ncv		4822895	0					
ANR	4824967	CallExpression	strlen ( cv )		4822895	1					
ANR	4824968	Callee	strlen		4822895	0					
ANR	4824969	Identifier	strlen		4822895	0					
ANR	4824970	ArgumentList	cv		4822895	1					
ANR	4824971	Argument	cv		4822895	0					
ANR	4824972	Identifier	cv		4822895	0					
ANR	4824973	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6800:15:243363:243413	4822895	2	True				
ANR	4824974	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	0		=			
ANR	4824975	Identifier	nbp		4822895	0					
ANR	4824976	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4824977	AdditiveExpression	j + 1		4822895	0		+			
ANR	4824978	Identifier	j		4822895	0					
ANR	4824979	PrimaryExpression	1		4822895	1					
ANR	4824980	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4824981	Identifier	ncv		4822895	0					
ANR	4824982	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	1		-			
ANR	4824983	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4824984	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4824985	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4824986	Identifier	upd		4822895	0					
ANR	4824987	Identifier	strings		4822895	1					
ANR	4824988	Identifier	S_BEGIN		4822895	1					
ANR	4824989	Identifier	size		4822895	1					
ANR	4824990	Identifier	i		4822895	1					
ANR	4824991	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6801:15:243430:243468	4822895	3	True				
ANR	4824992	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		4822895	0					
ANR	4824993	Callee	UPD_MM_GET_ARRAY		4822895	0					
ANR	4824994	Identifier	UPD_MM_GET_ARRAY		4822895	0					
ANR	4824995	ArgumentList	udev -> memory		4822895	1					
ANR	4824996	Argument	udev -> memory		4822895	0					
ANR	4824997	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4824998	Identifier	udev		4822895	0					
ANR	4824999	Identifier	memory		4822895	1					
ANR	4825000	Argument	bp		4822895	1					
ANR	4825001	Identifier	bp		4822895	0					
ANR	4825002	Argument	nbp		4822895	2					
ANR	4825003	Identifier	nbp		4822895	0					
ANR	4825004	IfStatement	if ( 0 <= j )		4822895	4					
ANR	4825005	Condition	0 <= j	6803:18:243489:243494	4822895	0	True				
ANR	4825006	RelationalExpression	0 <= j		4822895	0		<=			
ANR	4825007	PrimaryExpression	0		4822895	0					
ANR	4825008	Identifier	j		4822895	1					
ANR	4825009	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6803:26:243497:243538	4822895	1	True				
ANR	4825010	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		4822895	0					
ANR	4825011	Callee	memcpy		4822895	0					
ANR	4825012	Identifier	memcpy		4822895	0					
ANR	4825013	ArgumentList	bp		4822895	1					
ANR	4825014	Argument	bp		4822895	0					
ANR	4825015	Identifier	bp		4822895	0					
ANR	4825016	Argument	upd -> strings [ S_BEGIN ] . data		4822895	1					
ANR	4825017	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4825018	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825019	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825020	Identifier	upd		4822895	0					
ANR	4825021	Identifier	strings		4822895	1					
ANR	4825022	Identifier	S_BEGIN		4822895	1					
ANR	4825023	Identifier	data		4822895	1					
ANR	4825024	Argument	j + 1		4822895	2					
ANR	4825025	AdditiveExpression	j + 1		4822895	0		+			
ANR	4825026	Identifier	j		4822895	0					
ANR	4825027	PrimaryExpression	1		4822895	1					
ANR	4825028	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6804:15:243555:243580	4822895	5	True				
ANR	4825029	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		4822895	0					
ANR	4825030	Callee	memcpy		4822895	0					
ANR	4825031	Identifier	memcpy		4822895	0					
ANR	4825032	ArgumentList	bp + j + 1		4822895	1					
ANR	4825033	Argument	bp + j + 1		4822895	0					
ANR	4825034	AdditiveExpression	bp + j + 1		4822895	0		+			
ANR	4825035	Identifier	bp		4822895	0					
ANR	4825036	AdditiveExpression	j + 1		4822895	1		+			
ANR	4825037	Identifier	j		4822895	0					
ANR	4825038	PrimaryExpression	1		4822895	1					
ANR	4825039	Argument	cv		4822895	1					
ANR	4825040	Identifier	cv		4822895	0					
ANR	4825041	Argument	ncv		4822895	2					
ANR	4825042	Identifier	ncv		4822895	0					
ANR	4825043	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6805:15:243597:243705	4822895	6	True				
ANR	4825044	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		4822895	0					
ANR	4825045	Callee	memcpy		4822895	0					
ANR	4825046	Identifier	memcpy		4822895	0					
ANR	4825047	ArgumentList	bp + j + 1 + ncv		4822895	1					
ANR	4825048	Argument	bp + j + 1 + ncv		4822895	0					
ANR	4825049	AdditiveExpression	bp + j + 1 + ncv		4822895	0		+			
ANR	4825050	Identifier	bp		4822895	0					
ANR	4825051	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4825052	Identifier	j		4822895	0					
ANR	4825053	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4825054	PrimaryExpression	1		4822895	0					
ANR	4825055	Identifier	ncv		4822895	1					
ANR	4825056	Argument	upd -> strings [ S_BEGIN ] . data + i		4822895	1					
ANR	4825057	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		4822895	0		+			
ANR	4825058	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4825059	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825060	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825061	Identifier	upd		4822895	0					
ANR	4825062	Identifier	strings		4822895	1					
ANR	4825063	Identifier	S_BEGIN		4822895	1					
ANR	4825064	Identifier	data		4822895	1					
ANR	4825065	Identifier	i		4822895	1					
ANR	4825066	Argument	upd -> strings [ S_BEGIN ] . size - i		4822895	2					
ANR	4825067	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	0		-			
ANR	4825068	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4825069	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825070	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825071	Identifier	upd		4822895	0					
ANR	4825072	Identifier	strings		4822895	1					
ANR	4825073	Identifier	S_BEGIN		4822895	1					
ANR	4825074	Identifier	size		4822895	1					
ANR	4825075	Identifier	i		4822895	1					
ANR	4825076	ExpressionStatement	i = j + 1 + ncv	6807:15:243722:243733	4822895	7	True				
ANR	4825077	AssignmentExpression	i = j + 1 + ncv		4822895	0		=			
ANR	4825078	Identifier	i		4822895	0					
ANR	4825079	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4825080	Identifier	j		4822895	0					
ANR	4825081	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4825082	PrimaryExpression	1		4822895	0					
ANR	4825083	Identifier	ncv		4822895	1					
ANR	4825084	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6808:15:243750:243803	4822895	8	True				
ANR	4825085	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		4822895	0					
ANR	4825086	Callee	UPD_MM_DEL_PARAM		4822895	0					
ANR	4825087	Identifier	UPD_MM_DEL_PARAM		4822895	0					
ANR	4825088	ArgumentList	udev -> memory		4822895	1					
ANR	4825089	Argument	udev -> memory		4822895	0					
ANR	4825090	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4825091	Identifier	udev		4822895	0					
ANR	4825092	Identifier	memory		4822895	1					
ANR	4825093	Argument	upd -> strings [ S_BEGIN ]		4822895	1					
ANR	4825094	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825095	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825096	Identifier	upd		4822895	0					
ANR	4825097	Identifier	strings		4822895	1					
ANR	4825098	Identifier	S_BEGIN		4822895	1					
ANR	4825099	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6809:15:243820:243851	4822895	9	True				
ANR	4825100	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		4822895	0		=			
ANR	4825101	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4825102	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825103	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825104	Identifier	upd		4822895	0					
ANR	4825105	Identifier	strings		4822895	1					
ANR	4825106	Identifier	S_BEGIN		4822895	1					
ANR	4825107	Identifier	data		4822895	1					
ANR	4825108	Identifier	bp		4822895	1					
ANR	4825109	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6810:15:243868:243900	4822895	10	True				
ANR	4825110	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		4822895	0		=			
ANR	4825111	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4825112	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825113	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825114	Identifier	upd		4822895	0					
ANR	4825115	Identifier	strings		4822895	1					
ANR	4825116	Identifier	S_BEGIN		4822895	1					
ANR	4825117	Identifier	size		4822895	1					
ANR	4825118	Identifier	nbp		4822895	1					
ANR	4825119	IfStatement	if ( c == 0x0a )		4822895	1					
ANR	4825120	Condition	c == 0x0a	6813:17:243990:243998	4822895	0	True				
ANR	4825121	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825122	Identifier	c		4822895	0					
ANR	4825123	PrimaryExpression	0x0a		4822895	1					
ANR	4825124	ExpressionStatement	state = 12	6813:29:244002:244012	4822895	1	True				
ANR	4825125	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825126	Identifier	state		4822895	0					
ANR	4825127	PrimaryExpression	12		4822895	1					
ANR	4825128	ElseStatement	else		4822895	0					
ANR	4825129	ExpressionStatement	state = 18	6814:29:244043:244053	4822895	0	True				
ANR	4825130	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825131	Identifier	state		4822895	0					
ANR	4825132	PrimaryExpression	18		4822895	1					
ANR	4825133	BreakStatement	break ;	6816:9:244077:244082	4822895	136	True				
ANR	4825134	Label	case 41 :	6818:9:244094:244101	4822895	137	True				
ANR	4825135	IfStatement	if ( ( c == 0x45 ) || ( c == 0x65 ) )		4822895	138					
ANR	4825136	Condition	( c == 0x45 ) || ( c == 0x65 )	6819:19:244148:244173	4822895	0	True				
ANR	4825137	OrExpression	( c == 0x45 ) || ( c == 0x65 )		4822895	0		||			
ANR	4825138	EqualityExpression	c == 0x45		4822895	0		==			
ANR	4825139	Identifier	c		4822895	0					
ANR	4825140	PrimaryExpression	0x45		4822895	1					
ANR	4825141	EqualityExpression	c == 0x65		4822895	1		==			
ANR	4825142	Identifier	c		4822895	0					
ANR	4825143	PrimaryExpression	0x65		4822895	1					
ANR	4825144	ExpressionStatement	state = 42	6819:47:244176:244186	4822895	1	True				
ANR	4825145	AssignmentExpression	state = 42		4822895	0		=			
ANR	4825146	Identifier	state		4822895	0					
ANR	4825147	PrimaryExpression	42		4822895	1					
ANR	4825148	ElseStatement	else		4822895	0					
ANR	4825149	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825150	Condition	c == 0x0a	6820:20:244221:244229	4822895	0	True				
ANR	4825151	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825152	Identifier	c		4822895	0					
ANR	4825153	PrimaryExpression	0x0a		4822895	1					
ANR	4825154	ExpressionStatement	state = 12	6820:47:244248:244258	4822895	1	True				
ANR	4825155	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825156	Identifier	state		4822895	0					
ANR	4825157	PrimaryExpression	12		4822895	1					
ANR	4825158	ElseStatement	else		4822895	0					
ANR	4825159	ExpressionStatement	state = 18	6821:47:244317:244327	4822895	0	True				
ANR	4825160	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825161	Identifier	state		4822895	0					
ANR	4825162	PrimaryExpression	18		4822895	1					
ANR	4825163	BreakStatement	break ;	6822:9:244338:244343	4822895	139	True				
ANR	4825164	Label	case 42 :	6824:9:244355:244362	4822895	140	True				
ANR	4825165	IfStatement	if ( ( c == 0x53 ) || ( c == 0x73 ) )		4822895	141					
ANR	4825166	Condition	( c == 0x53 ) || ( c == 0x73 )	6825:19:244409:244434	4822895	0	True				
ANR	4825167	OrExpression	( c == 0x53 ) || ( c == 0x73 )		4822895	0		||			
ANR	4825168	EqualityExpression	c == 0x53		4822895	0		==			
ANR	4825169	Identifier	c		4822895	0					
ANR	4825170	PrimaryExpression	0x53		4822895	1					
ANR	4825171	EqualityExpression	c == 0x73		4822895	1		==			
ANR	4825172	Identifier	c		4822895	0					
ANR	4825173	PrimaryExpression	0x73		4822895	1					
ANR	4825174	ExpressionStatement	state = 43	6825:47:244437:244447	4822895	1	True				
ANR	4825175	AssignmentExpression	state = 43		4822895	0		=			
ANR	4825176	Identifier	state		4822895	0					
ANR	4825177	PrimaryExpression	43		4822895	1					
ANR	4825178	ElseStatement	else		4822895	0					
ANR	4825179	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825180	Condition	c == 0x0a	6826:20:244483:244491	4822895	0	True				
ANR	4825181	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825182	Identifier	c		4822895	0					
ANR	4825183	PrimaryExpression	0x0a		4822895	1					
ANR	4825184	ExpressionStatement	state = 12	6826:47:244510:244520	4822895	1	True				
ANR	4825185	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825186	Identifier	state		4822895	0					
ANR	4825187	PrimaryExpression	12		4822895	1					
ANR	4825188	ElseStatement	else		4822895	0					
ANR	4825189	ExpressionStatement	state = 18	6827:47:244579:244589	4822895	0	True				
ANR	4825190	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825191	Identifier	state		4822895	0					
ANR	4825192	PrimaryExpression	18		4822895	1					
ANR	4825193	BreakStatement	break ;	6828:9:244600:244605	4822895	142	True				
ANR	4825194	Label	case 43 :	6830:9:244617:244624	4822895	143	True				
ANR	4825195	IfStatement	if ( ( c == 0x4f ) || ( c == 0x6f ) )		4822895	144					
ANR	4825196	Condition	( c == 0x4f ) || ( c == 0x6f )	6831:19:244671:244696	4822895	0	True				
ANR	4825197	OrExpression	( c == 0x4f ) || ( c == 0x6f )		4822895	0		||			
ANR	4825198	EqualityExpression	c == 0x4f		4822895	0		==			
ANR	4825199	Identifier	c		4822895	0					
ANR	4825200	PrimaryExpression	0x4f		4822895	1					
ANR	4825201	EqualityExpression	c == 0x6f		4822895	1		==			
ANR	4825202	Identifier	c		4822895	0					
ANR	4825203	PrimaryExpression	0x6f		4822895	1					
ANR	4825204	ExpressionStatement	state = 44	6831:47:244699:244709	4822895	1	True				
ANR	4825205	AssignmentExpression	state = 44		4822895	0		=			
ANR	4825206	Identifier	state		4822895	0					
ANR	4825207	PrimaryExpression	44		4822895	1					
ANR	4825208	ElseStatement	else		4822895	0					
ANR	4825209	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825210	Condition	c == 0x0a	6832:20:244746:244754	4822895	0	True				
ANR	4825211	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825212	Identifier	c		4822895	0					
ANR	4825213	PrimaryExpression	0x0a		4822895	1					
ANR	4825214	ExpressionStatement	state = 12	6832:47:244773:244783	4822895	1	True				
ANR	4825215	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825216	Identifier	state		4822895	0					
ANR	4825217	PrimaryExpression	12		4822895	1					
ANR	4825218	ElseStatement	else		4822895	0					
ANR	4825219	ExpressionStatement	state = 18	6833:47:244842:244852	4822895	0	True				
ANR	4825220	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825221	Identifier	state		4822895	0					
ANR	4825222	PrimaryExpression	18		4822895	1					
ANR	4825223	BreakStatement	break ;	6834:9:244863:244868	4822895	145	True				
ANR	4825224	Label	case 44 :	6836:9:244880:244887	4822895	146	True				
ANR	4825225	IfStatement	if ( ( c == 0x4c ) || ( c == 0x6c ) )		4822895	147					
ANR	4825226	Condition	( c == 0x4c ) || ( c == 0x6c )	6837:19:244934:244959	4822895	0	True				
ANR	4825227	OrExpression	( c == 0x4c ) || ( c == 0x6c )		4822895	0		||			
ANR	4825228	EqualityExpression	c == 0x4c		4822895	0		==			
ANR	4825229	Identifier	c		4822895	0					
ANR	4825230	PrimaryExpression	0x4c		4822895	1					
ANR	4825231	EqualityExpression	c == 0x6c		4822895	1		==			
ANR	4825232	Identifier	c		4822895	0					
ANR	4825233	PrimaryExpression	0x6c		4822895	1					
ANR	4825234	ExpressionStatement	state = 45	6837:47:244962:244972	4822895	1	True				
ANR	4825235	AssignmentExpression	state = 45		4822895	0		=			
ANR	4825236	Identifier	state		4822895	0					
ANR	4825237	PrimaryExpression	45		4822895	1					
ANR	4825238	ElseStatement	else		4822895	0					
ANR	4825239	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825240	Condition	c == 0x0a	6838:20:245010:245018	4822895	0	True				
ANR	4825241	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825242	Identifier	c		4822895	0					
ANR	4825243	PrimaryExpression	0x0a		4822895	1					
ANR	4825244	ExpressionStatement	state = 12	6838:47:245037:245047	4822895	1	True				
ANR	4825245	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825246	Identifier	state		4822895	0					
ANR	4825247	PrimaryExpression	12		4822895	1					
ANR	4825248	ElseStatement	else		4822895	0					
ANR	4825249	ExpressionStatement	state = 18	6839:47:245106:245116	4822895	0	True				
ANR	4825250	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825251	Identifier	state		4822895	0					
ANR	4825252	PrimaryExpression	18		4822895	1					
ANR	4825253	BreakStatement	break ;	6840:9:245127:245132	4822895	148	True				
ANR	4825254	Label	case 45 :	6842:9:245144:245151	4822895	149	True				
ANR	4825255	IfStatement	if ( ( c == 0x55 ) || ( c == 0x75 ) )		4822895	150					
ANR	4825256	Condition	( c == 0x55 ) || ( c == 0x75 )	6843:19:245198:245223	4822895	0	True				
ANR	4825257	OrExpression	( c == 0x55 ) || ( c == 0x75 )		4822895	0		||			
ANR	4825258	EqualityExpression	c == 0x55		4822895	0		==			
ANR	4825259	Identifier	c		4822895	0					
ANR	4825260	PrimaryExpression	0x55		4822895	1					
ANR	4825261	EqualityExpression	c == 0x75		4822895	1		==			
ANR	4825262	Identifier	c		4822895	0					
ANR	4825263	PrimaryExpression	0x75		4822895	1					
ANR	4825264	ExpressionStatement	state = 46	6843:47:245226:245236	4822895	1	True				
ANR	4825265	AssignmentExpression	state = 46		4822895	0		=			
ANR	4825266	Identifier	state		4822895	0					
ANR	4825267	PrimaryExpression	46		4822895	1					
ANR	4825268	ElseStatement	else		4822895	0					
ANR	4825269	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825270	Condition	c == 0x0a	6844:20:245275:245283	4822895	0	True				
ANR	4825271	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825272	Identifier	c		4822895	0					
ANR	4825273	PrimaryExpression	0x0a		4822895	1					
ANR	4825274	ExpressionStatement	state = 12	6844:47:245302:245312	4822895	1	True				
ANR	4825275	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825276	Identifier	state		4822895	0					
ANR	4825277	PrimaryExpression	12		4822895	1					
ANR	4825278	ElseStatement	else		4822895	0					
ANR	4825279	ExpressionStatement	state = 18	6845:47:245371:245381	4822895	0	True				
ANR	4825280	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825281	Identifier	state		4822895	0					
ANR	4825282	PrimaryExpression	18		4822895	1					
ANR	4825283	BreakStatement	break ;	6846:9:245392:245397	4822895	151	True				
ANR	4825284	Label	case 46 :	6848:9:245409:245416	4822895	152	True				
ANR	4825285	IfStatement	if ( ( c == 0x54 ) || ( c == 0x74 ) )		4822895	153					
ANR	4825286	Condition	( c == 0x54 ) || ( c == 0x74 )	6849:19:245463:245488	4822895	0	True				
ANR	4825287	OrExpression	( c == 0x54 ) || ( c == 0x74 )		4822895	0		||			
ANR	4825288	EqualityExpression	c == 0x54		4822895	0		==			
ANR	4825289	Identifier	c		4822895	0					
ANR	4825290	PrimaryExpression	0x54		4822895	1					
ANR	4825291	EqualityExpression	c == 0x74		4822895	1		==			
ANR	4825292	Identifier	c		4822895	0					
ANR	4825293	PrimaryExpression	0x74		4822895	1					
ANR	4825294	ExpressionStatement	state = 47	6849:47:245491:245501	4822895	1	True				
ANR	4825295	AssignmentExpression	state = 47		4822895	0		=			
ANR	4825296	Identifier	state		4822895	0					
ANR	4825297	PrimaryExpression	47		4822895	1					
ANR	4825298	ElseStatement	else		4822895	0					
ANR	4825299	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825300	Condition	c == 0x0a	6850:20:245541:245549	4822895	0	True				
ANR	4825301	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825302	Identifier	c		4822895	0					
ANR	4825303	PrimaryExpression	0x0a		4822895	1					
ANR	4825304	ExpressionStatement	state = 12	6850:47:245568:245578	4822895	1	True				
ANR	4825305	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825306	Identifier	state		4822895	0					
ANR	4825307	PrimaryExpression	12		4822895	1					
ANR	4825308	ElseStatement	else		4822895	0					
ANR	4825309	ExpressionStatement	state = 18	6851:47:245637:245647	4822895	0	True				
ANR	4825310	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825311	Identifier	state		4822895	0					
ANR	4825312	PrimaryExpression	18		4822895	1					
ANR	4825313	BreakStatement	break ;	6852:9:245658:245663	4822895	154	True				
ANR	4825314	Label	case 47 :	6854:9:245675:245682	4822895	155	True				
ANR	4825315	IfStatement	if ( ( c == 0x49 ) || ( c == 0x69 ) )		4822895	156					
ANR	4825316	Condition	( c == 0x49 ) || ( c == 0x69 )	6855:19:245729:245754	4822895	0	True				
ANR	4825317	OrExpression	( c == 0x49 ) || ( c == 0x69 )		4822895	0		||			
ANR	4825318	EqualityExpression	c == 0x49		4822895	0		==			
ANR	4825319	Identifier	c		4822895	0					
ANR	4825320	PrimaryExpression	0x49		4822895	1					
ANR	4825321	EqualityExpression	c == 0x69		4822895	1		==			
ANR	4825322	Identifier	c		4822895	0					
ANR	4825323	PrimaryExpression	0x69		4822895	1					
ANR	4825324	ExpressionStatement	state = 48	6855:47:245757:245767	4822895	1	True				
ANR	4825325	AssignmentExpression	state = 48		4822895	0		=			
ANR	4825326	Identifier	state		4822895	0					
ANR	4825327	PrimaryExpression	48		4822895	1					
ANR	4825328	ElseStatement	else		4822895	0					
ANR	4825329	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825330	Condition	c == 0x0a	6856:20:245808:245816	4822895	0	True				
ANR	4825331	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825332	Identifier	c		4822895	0					
ANR	4825333	PrimaryExpression	0x0a		4822895	1					
ANR	4825334	ExpressionStatement	state = 12	6856:47:245835:245845	4822895	1	True				
ANR	4825335	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825336	Identifier	state		4822895	0					
ANR	4825337	PrimaryExpression	12		4822895	1					
ANR	4825338	ElseStatement	else		4822895	0					
ANR	4825339	ExpressionStatement	state = 18	6857:47:245904:245914	4822895	0	True				
ANR	4825340	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825341	Identifier	state		4822895	0					
ANR	4825342	PrimaryExpression	18		4822895	1					
ANR	4825343	BreakStatement	break ;	6858:9:245925:245930	4822895	157	True				
ANR	4825344	Label	case 48 :	6860:9:245942:245949	4822895	158	True				
ANR	4825345	IfStatement	if ( ( c == 0x4f ) || ( c == 0x6f ) )		4822895	159					
ANR	4825346	Condition	( c == 0x4f ) || ( c == 0x6f )	6861:19:245996:246021	4822895	0	True				
ANR	4825347	OrExpression	( c == 0x4f ) || ( c == 0x6f )		4822895	0		||			
ANR	4825348	EqualityExpression	c == 0x4f		4822895	0		==			
ANR	4825349	Identifier	c		4822895	0					
ANR	4825350	PrimaryExpression	0x4f		4822895	1					
ANR	4825351	EqualityExpression	c == 0x6f		4822895	1		==			
ANR	4825352	Identifier	c		4822895	0					
ANR	4825353	PrimaryExpression	0x6f		4822895	1					
ANR	4825354	ExpressionStatement	state = 49	6861:47:246024:246034	4822895	1	True				
ANR	4825355	AssignmentExpression	state = 49		4822895	0		=			
ANR	4825356	Identifier	state		4822895	0					
ANR	4825357	PrimaryExpression	49		4822895	1					
ANR	4825358	ElseStatement	else		4822895	0					
ANR	4825359	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825360	Condition	c == 0x0a	6862:20:246076:246084	4822895	0	True				
ANR	4825361	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825362	Identifier	c		4822895	0					
ANR	4825363	PrimaryExpression	0x0a		4822895	1					
ANR	4825364	ExpressionStatement	state = 12	6862:47:246103:246113	4822895	1	True				
ANR	4825365	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825366	Identifier	state		4822895	0					
ANR	4825367	PrimaryExpression	12		4822895	1					
ANR	4825368	ElseStatement	else		4822895	0					
ANR	4825369	ExpressionStatement	state = 18	6863:47:246172:246182	4822895	0	True				
ANR	4825370	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825371	Identifier	state		4822895	0					
ANR	4825372	PrimaryExpression	18		4822895	1					
ANR	4825373	BreakStatement	break ;	6864:9:246193:246198	4822895	160	True				
ANR	4825374	Label	case 49 :	6866:9:246210:246217	4822895	161	True				
ANR	4825375	IfStatement	if ( ( c == 0x4e ) || ( c == 0x6e ) )		4822895	162					
ANR	4825376	Condition	( c == 0x4e ) || ( c == 0x6e )	6867:19:246264:246289	4822895	0	True				
ANR	4825377	OrExpression	( c == 0x4e ) || ( c == 0x6e )		4822895	0		||			
ANR	4825378	EqualityExpression	c == 0x4e		4822895	0		==			
ANR	4825379	Identifier	c		4822895	0					
ANR	4825380	PrimaryExpression	0x4e		4822895	1					
ANR	4825381	EqualityExpression	c == 0x6e		4822895	1		==			
ANR	4825382	Identifier	c		4822895	0					
ANR	4825383	PrimaryExpression	0x6e		4822895	1					
ANR	4825384	ExpressionStatement	state = 54	6867:47:246292:246302	4822895	1	True				
ANR	4825385	AssignmentExpression	state = 54		4822895	0		=			
ANR	4825386	Identifier	state		4822895	0					
ANR	4825387	PrimaryExpression	54		4822895	1					
ANR	4825388	ElseStatement	else		4822895	0					
ANR	4825389	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825390	Condition	c == 0x0a	6868:20:246345:246353	4822895	0	True				
ANR	4825391	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825392	Identifier	c		4822895	0					
ANR	4825393	PrimaryExpression	0x0a		4822895	1					
ANR	4825394	ExpressionStatement	state = 12	6868:47:246372:246382	4822895	1	True				
ANR	4825395	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825396	Identifier	state		4822895	0					
ANR	4825397	PrimaryExpression	12		4822895	1					
ANR	4825398	ElseStatement	else		4822895	0					
ANR	4825399	ExpressionStatement	state = 18	6869:47:246441:246451	4822895	0	True				
ANR	4825400	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825401	Identifier	state		4822895	0					
ANR	4825402	PrimaryExpression	18		4822895	1					
ANR	4825403	BreakStatement	break ;	6870:9:246462:246467	4822895	163	True				
ANR	4825404	Label	case 54 :	6872:9:246479:246486	4822895	164	True				
ANR	4825405	ExpressionStatement	j = i	6873:11:246526:246531	4822895	165	True				
ANR	4825406	AssignmentExpression	j = i		4822895	0		=			
ANR	4825407	Identifier	j		4822895	0					
ANR	4825408	Identifier	i		4822895	1					
ANR	4825409	IfStatement	if ( c == 0x3d )		4822895	166					
ANR	4825410	Condition	c == 0x3d	6874:20:246607:246615	4822895	0	True				
ANR	4825411	EqualityExpression	c == 0x3d		4822895	0		==			
ANR	4825412	Identifier	c		4822895	0					
ANR	4825413	PrimaryExpression	0x3d		4822895	1					
ANR	4825414	ExpressionStatement	state = 55	6874:47:246634:246644	4822895	1	True				
ANR	4825415	AssignmentExpression	state = 55		4822895	0		=			
ANR	4825416	Identifier	state		4822895	0					
ANR	4825417	PrimaryExpression	55		4822895	1					
ANR	4825418	ElseStatement	else		4822895	0					
ANR	4825419	IfStatement	if ( c == 0x0a )		4822895	0					
ANR	4825420	Condition	c == 0x0a	6875:20:246687:246695	4822895	0	True				
ANR	4825421	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825422	Identifier	c		4822895	0					
ANR	4825423	PrimaryExpression	0x0a		4822895	1					
ANR	4825424	ExpressionStatement	state = 12	6875:47:246714:246724	4822895	1	True				
ANR	4825425	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825426	Identifier	state		4822895	0					
ANR	4825427	PrimaryExpression	12		4822895	1					
ANR	4825428	ElseStatement	else		4822895	0					
ANR	4825429	IfStatement	if ( ( c != 0x20 ) && ( c != 0x09 ) )		4822895	0					
ANR	4825430	Condition	( c != 0x20 ) && ( c != 0x09 )	6876:19:246755:246780	4822895	0	True				
ANR	4825431	AndExpression	( c != 0x20 ) && ( c != 0x09 )		4822895	0		&&			
ANR	4825432	EqualityExpression	c != 0x20		4822895	0		!=			
ANR	4825433	Identifier	c		4822895	0					
ANR	4825434	PrimaryExpression	0x20		4822895	1					
ANR	4825435	EqualityExpression	c != 0x09		4822895	1		!=			
ANR	4825436	Identifier	c		4822895	0					
ANR	4825437	PrimaryExpression	0x09		4822895	1					
ANR	4825438	ExpressionStatement	state = 18	6876:47:246783:246793	4822895	1	True				
ANR	4825439	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825440	Identifier	state		4822895	0					
ANR	4825441	PrimaryExpression	18		4822895	1					
ANR	4825442	BreakStatement	break ;	6877:9:246804:246809	4822895	167	True				
ANR	4825443	Label	case 55 :	6879:9:246821:246828	4822895	168	True				
ANR	4825444	IfStatement	if ( c == 0x0a )		4822895	169					
ANR	4825445	Condition	c == 0x0a	6880:19:246880:246888	4822895	0	True				
ANR	4825446	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825447	Identifier	c		4822895	0					
ANR	4825448	PrimaryExpression	0x0a		4822895	1					
ANR	4825449	ExpressionStatement	state = 12	6880:47:246908:246918	4822895	1	True				
ANR	4825450	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825451	Identifier	state		4822895	0					
ANR	4825452	PrimaryExpression	12		4822895	1					
ANR	4825453	ElseStatement	else		4822895	0					
ANR	4825454	IfStatement	if ( ( c == 0x20 ) || ( c == 0x09 ) )		4822895	0					
ANR	4825455	Condition	( c == 0x20 ) || ( c == 0x09 )	6881:19:246939:246964	4822895	0	True				
ANR	4825456	OrExpression	( c == 0x20 ) || ( c == 0x09 )		4822895	0		||			
ANR	4825457	EqualityExpression	c == 0x20		4822895	0		==			
ANR	4825458	Identifier	c		4822895	0					
ANR	4825459	PrimaryExpression	0x20		4822895	1					
ANR	4825460	EqualityExpression	c == 0x09		4822895	1		==			
ANR	4825461	Identifier	c		4822895	0					
ANR	4825462	PrimaryExpression	0x09		4822895	1					
ANR	4825463	ExpressionStatement	j = i	6881:47:246967:246976	4822895	1	True				
ANR	4825464	AssignmentExpression	j = i		4822895	0		=			
ANR	4825465	Identifier	j		4822895	0					
ANR	4825466	Identifier	i		4822895	1					
ANR	4825467	ElseStatement	else		4822895	0					
ANR	4825468	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		4822895	0					
ANR	4825469	Condition	( 0x30 > c ) || ( c > 0x39 )	6882:19:246997:247022	4822895	0	True				
ANR	4825470	OrExpression	( 0x30 > c ) || ( c > 0x39 )		4822895	0		||			
ANR	4825471	RelationalExpression	0x30 > c		4822895	0		>			
ANR	4825472	PrimaryExpression	0x30		4822895	0					
ANR	4825473	Identifier	c		4822895	1					
ANR	4825474	RelationalExpression	c > 0x39		4822895	1		>			
ANR	4825475	Identifier	c		4822895	0					
ANR	4825476	PrimaryExpression	0x39		4822895	1					
ANR	4825477	ExpressionStatement	state = 18	6882:47:247025:247035	4822895	1	True				
ANR	4825478	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825479	Identifier	state		4822895	0					
ANR	4825480	PrimaryExpression	18		4822895	1					
ANR	4825481	ElseStatement	else		4822895	0					
ANR	4825482	ExpressionStatement	state = 50	6883:47:247084:247094	4822895	0	True				
ANR	4825483	AssignmentExpression	state = 50		4822895	0		=			
ANR	4825484	Identifier	state		4822895	0					
ANR	4825485	PrimaryExpression	50		4822895	1					
ANR	4825486	BreakStatement	break ;	6884:9:247105:247110	4822895	170	True				
ANR	4825487	Label	case 50 :	6886:9:247122:247129	4822895	171	True				
ANR	4825488	IfStatement	if ( ( 0x30 > c ) || ( c > 0x39 ) )		4822895	172					
ANR	4825489	Condition	( 0x30 > c ) || ( c > 0x39 )	6887:14:247171:247194	4822895	0	True				
ANR	4825490	OrExpression	( 0x30 > c ) || ( c > 0x39 )		4822895	0		||			
ANR	4825491	RelationalExpression	0x30 > c		4822895	0		>			
ANR	4825492	PrimaryExpression	0x30		4822895	0					
ANR	4825493	Identifier	c		4822895	1					
ANR	4825494	RelationalExpression	c > 0x39		4822895	1		>			
ANR	4825495	Identifier	c		4822895	0					
ANR	4825496	PrimaryExpression	0x39		4822895	1					
ANR	4825497	CompoundStatement		457:40:17996:17996	4822895	1					
ANR	4825498	IfStatement	if ( B_RESOLUTION & upd -> flags )		4822895	0					
ANR	4825499	Condition	B_RESOLUTION & upd -> flags	6889:16:247236:247261	4822895	0	True				
ANR	4825500	BitAndExpression	B_RESOLUTION & upd -> flags		4822895	0		&			
ANR	4825501	Identifier	B_RESOLUTION		4822895	0					
ANR	4825502	PtrMemberAccess	upd -> flags		4822895	1					
ANR	4825503	Identifier	upd		4822895	0					
ANR	4825504	Identifier	flags		4822895	1					
ANR	4825505	CompoundStatement		459:44:18063:18063	4822895	1					
ANR	4825506	ExpressionStatement	"gs_sprintf ( cv , ""%d"" , ( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 ) )"	6891:15:247306:247495	4822895	0	True				
ANR	4825507	CallExpression	"gs_sprintf ( cv , ""%d"" , ( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 ) )"		4822895	0					
ANR	4825508	Callee	gs_sprintf		4822895	0					
ANR	4825509	Identifier	gs_sprintf		4822895	0					
ANR	4825510	ArgumentList	cv		4822895	1					
ANR	4825511	Argument	cv		4822895	0					
ANR	4825512	Identifier	cv		4822895	0					
ANR	4825513	Argument	"""%d"""		4822895	1					
ANR	4825514	PrimaryExpression	"""%d"""		4822895	0					
ANR	4825515	Argument	( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 )		4822895	2					
ANR	4825516	CastExpression	( int ) ( ( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5 )		4822895	0					
ANR	4825517	CastTarget	int		4822895	0					
ANR	4825518	AdditiveExpression	( udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch ) + 0.5		4822895	1		+			
ANR	4825519	ConditionalExpression	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch ? udev -> x_pixels_per_inch : udev -> y_pixels_per_inch		4822895	0					
ANR	4825520	Condition	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch		4822895	0					
ANR	4825521	RelationalExpression	udev -> y_pixels_per_inch < udev -> x_pixels_per_inch		4822895	0		<			
ANR	4825522	PtrMemberAccess	udev -> y_pixels_per_inch		4822895	0					
ANR	4825523	Identifier	udev		4822895	0					
ANR	4825524	Identifier	y_pixels_per_inch		4822895	1					
ANR	4825525	PtrMemberAccess	udev -> x_pixels_per_inch		4822895	1					
ANR	4825526	Identifier	udev		4822895	0					
ANR	4825527	Identifier	x_pixels_per_inch		4822895	1					
ANR	4825528	PtrMemberAccess	udev -> x_pixels_per_inch		4822895	1					
ANR	4825529	Identifier	udev		4822895	0					
ANR	4825530	Identifier	x_pixels_per_inch		4822895	1					
ANR	4825531	PtrMemberAccess	udev -> y_pixels_per_inch		4822895	2					
ANR	4825532	Identifier	udev		4822895	0					
ANR	4825533	Identifier	y_pixels_per_inch		4822895	1					
ANR	4825534	PrimaryExpression	0.5		4822895	1					
ANR	4825535	ExpressionStatement	ncv = strlen ( cv )	6895:15:247512:247528	4822895	1	True				
ANR	4825536	AssignmentExpression	ncv = strlen ( cv )		4822895	0		=			
ANR	4825537	Identifier	ncv		4822895	0					
ANR	4825538	CallExpression	strlen ( cv )		4822895	1					
ANR	4825539	Callee	strlen		4822895	0					
ANR	4825540	Identifier	strlen		4822895	0					
ANR	4825541	ArgumentList	cv		4822895	1					
ANR	4825542	Argument	cv		4822895	0					
ANR	4825543	Identifier	cv		4822895	0					
ANR	4825544	ExpressionStatement	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )	6897:15:247546:247596	4822895	2	True				
ANR	4825545	AssignmentExpression	nbp = ( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	0		=			
ANR	4825546	Identifier	nbp		4822895	0					
ANR	4825547	AdditiveExpression	( j + 1 ) + ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4825548	AdditiveExpression	j + 1		4822895	0		+			
ANR	4825549	Identifier	j		4822895	0					
ANR	4825550	PrimaryExpression	1		4822895	1					
ANR	4825551	AdditiveExpression	ncv + ( upd -> strings [ S_BEGIN ] . size - i )		4822895	1		+			
ANR	4825552	Identifier	ncv		4822895	0					
ANR	4825553	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	1		-			
ANR	4825554	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4825555	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825556	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825557	Identifier	upd		4822895	0					
ANR	4825558	Identifier	strings		4822895	1					
ANR	4825559	Identifier	S_BEGIN		4822895	1					
ANR	4825560	Identifier	size		4822895	1					
ANR	4825561	Identifier	i		4822895	1					
ANR	4825562	ExpressionStatement	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"	6898:15:247613:247651	4822895	3	True				
ANR	4825563	CallExpression	"UPD_MM_GET_ARRAY ( udev -> memory , bp , nbp )"		4822895	0					
ANR	4825564	Callee	UPD_MM_GET_ARRAY		4822895	0					
ANR	4825565	Identifier	UPD_MM_GET_ARRAY		4822895	0					
ANR	4825566	ArgumentList	udev -> memory		4822895	1					
ANR	4825567	Argument	udev -> memory		4822895	0					
ANR	4825568	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4825569	Identifier	udev		4822895	0					
ANR	4825570	Identifier	memory		4822895	1					
ANR	4825571	Argument	bp		4822895	1					
ANR	4825572	Identifier	bp		4822895	0					
ANR	4825573	Argument	nbp		4822895	2					
ANR	4825574	Identifier	nbp		4822895	0					
ANR	4825575	IfStatement	if ( 0 <= j )		4822895	4					
ANR	4825576	Condition	0 <= j	6900:18:247672:247677	4822895	0	True				
ANR	4825577	RelationalExpression	0 <= j		4822895	0		<=			
ANR	4825578	PrimaryExpression	0		4822895	0					
ANR	4825579	Identifier	j		4822895	1					
ANR	4825580	ExpressionStatement	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"	6900:26:247680:247721	4822895	1	True				
ANR	4825581	CallExpression	"memcpy ( bp , upd -> strings [ S_BEGIN ] . data , j + 1 )"		4822895	0					
ANR	4825582	Callee	memcpy		4822895	0					
ANR	4825583	Identifier	memcpy		4822895	0					
ANR	4825584	ArgumentList	bp		4822895	1					
ANR	4825585	Argument	bp		4822895	0					
ANR	4825586	Identifier	bp		4822895	0					
ANR	4825587	Argument	upd -> strings [ S_BEGIN ] . data		4822895	1					
ANR	4825588	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4825589	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825590	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825591	Identifier	upd		4822895	0					
ANR	4825592	Identifier	strings		4822895	1					
ANR	4825593	Identifier	S_BEGIN		4822895	1					
ANR	4825594	Identifier	data		4822895	1					
ANR	4825595	Argument	j + 1		4822895	2					
ANR	4825596	AdditiveExpression	j + 1		4822895	0		+			
ANR	4825597	Identifier	j		4822895	0					
ANR	4825598	PrimaryExpression	1		4822895	1					
ANR	4825599	ExpressionStatement	"memcpy ( bp + j + 1 , cv , ncv )"	6901:15:247738:247763	4822895	5	True				
ANR	4825600	CallExpression	"memcpy ( bp + j + 1 , cv , ncv )"		4822895	0					
ANR	4825601	Callee	memcpy		4822895	0					
ANR	4825602	Identifier	memcpy		4822895	0					
ANR	4825603	ArgumentList	bp + j + 1		4822895	1					
ANR	4825604	Argument	bp + j + 1		4822895	0					
ANR	4825605	AdditiveExpression	bp + j + 1		4822895	0		+			
ANR	4825606	Identifier	bp		4822895	0					
ANR	4825607	AdditiveExpression	j + 1		4822895	1		+			
ANR	4825608	Identifier	j		4822895	0					
ANR	4825609	PrimaryExpression	1		4822895	1					
ANR	4825610	Argument	cv		4822895	1					
ANR	4825611	Identifier	cv		4822895	0					
ANR	4825612	Argument	ncv		4822895	2					
ANR	4825613	Identifier	ncv		4822895	0					
ANR	4825614	ExpressionStatement	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"	6902:15:247780:247888	4822895	6	True				
ANR	4825615	CallExpression	"memcpy ( bp + j + 1 + ncv , upd -> strings [ S_BEGIN ] . data + i , upd -> strings [ S_BEGIN ] . size - i )"		4822895	0					
ANR	4825616	Callee	memcpy		4822895	0					
ANR	4825617	Identifier	memcpy		4822895	0					
ANR	4825618	ArgumentList	bp + j + 1 + ncv		4822895	1					
ANR	4825619	Argument	bp + j + 1 + ncv		4822895	0					
ANR	4825620	AdditiveExpression	bp + j + 1 + ncv		4822895	0		+			
ANR	4825621	Identifier	bp		4822895	0					
ANR	4825622	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4825623	Identifier	j		4822895	0					
ANR	4825624	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4825625	PrimaryExpression	1		4822895	0					
ANR	4825626	Identifier	ncv		4822895	1					
ANR	4825627	Argument	upd -> strings [ S_BEGIN ] . data + i		4822895	1					
ANR	4825628	AdditiveExpression	upd -> strings [ S_BEGIN ] . data + i		4822895	0		+			
ANR	4825629	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4825630	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825631	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825632	Identifier	upd		4822895	0					
ANR	4825633	Identifier	strings		4822895	1					
ANR	4825634	Identifier	S_BEGIN		4822895	1					
ANR	4825635	Identifier	data		4822895	1					
ANR	4825636	Identifier	i		4822895	1					
ANR	4825637	Argument	upd -> strings [ S_BEGIN ] . size - i		4822895	2					
ANR	4825638	AdditiveExpression	upd -> strings [ S_BEGIN ] . size - i		4822895	0		-			
ANR	4825639	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4825640	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825641	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825642	Identifier	upd		4822895	0					
ANR	4825643	Identifier	strings		4822895	1					
ANR	4825644	Identifier	S_BEGIN		4822895	1					
ANR	4825645	Identifier	size		4822895	1					
ANR	4825646	Identifier	i		4822895	1					
ANR	4825647	ExpressionStatement	i = j + 1 + ncv	6904:15:247905:247916	4822895	7	True				
ANR	4825648	AssignmentExpression	i = j + 1 + ncv		4822895	0		=			
ANR	4825649	Identifier	i		4822895	0					
ANR	4825650	AdditiveExpression	j + 1 + ncv		4822895	1		+			
ANR	4825651	Identifier	j		4822895	0					
ANR	4825652	AdditiveExpression	1 + ncv		4822895	1		+			
ANR	4825653	PrimaryExpression	1		4822895	0					
ANR	4825654	Identifier	ncv		4822895	1					
ANR	4825655	ExpressionStatement	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"	6905:15:247933:247986	4822895	8	True				
ANR	4825656	CallExpression	"UPD_MM_DEL_PARAM ( udev -> memory , upd -> strings [ S_BEGIN ] )"		4822895	0					
ANR	4825657	Callee	UPD_MM_DEL_PARAM		4822895	0					
ANR	4825658	Identifier	UPD_MM_DEL_PARAM		4822895	0					
ANR	4825659	ArgumentList	udev -> memory		4822895	1					
ANR	4825660	Argument	udev -> memory		4822895	0					
ANR	4825661	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4825662	Identifier	udev		4822895	0					
ANR	4825663	Identifier	memory		4822895	1					
ANR	4825664	Argument	upd -> strings [ S_BEGIN ]		4822895	1					
ANR	4825665	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825666	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825667	Identifier	upd		4822895	0					
ANR	4825668	Identifier	strings		4822895	1					
ANR	4825669	Identifier	S_BEGIN		4822895	1					
ANR	4825670	ExpressionStatement	upd -> strings [ S_BEGIN ] . data = bp	6906:15:248003:248034	4822895	9	True				
ANR	4825671	AssignmentExpression	upd -> strings [ S_BEGIN ] . data = bp		4822895	0		=			
ANR	4825672	MemberAccess	upd -> strings [ S_BEGIN ] . data		4822895	0					
ANR	4825673	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825674	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825675	Identifier	upd		4822895	0					
ANR	4825676	Identifier	strings		4822895	1					
ANR	4825677	Identifier	S_BEGIN		4822895	1					
ANR	4825678	Identifier	data		4822895	1					
ANR	4825679	Identifier	bp		4822895	1					
ANR	4825680	ExpressionStatement	upd -> strings [ S_BEGIN ] . size = nbp	6907:15:248051:248083	4822895	10	True				
ANR	4825681	AssignmentExpression	upd -> strings [ S_BEGIN ] . size = nbp		4822895	0		=			
ANR	4825682	MemberAccess	upd -> strings [ S_BEGIN ] . size		4822895	0					
ANR	4825683	ArrayIndexing	upd -> strings [ S_BEGIN ]		4822895	0					
ANR	4825684	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825685	Identifier	upd		4822895	0					
ANR	4825686	Identifier	strings		4822895	1					
ANR	4825687	Identifier	S_BEGIN		4822895	1					
ANR	4825688	Identifier	size		4822895	1					
ANR	4825689	Identifier	nbp		4822895	1					
ANR	4825690	IfStatement	if ( c == 0x0a )		4822895	1					
ANR	4825691	Condition	c == 0x0a	6910:17:248173:248181	4822895	0	True				
ANR	4825692	EqualityExpression	c == 0x0a		4822895	0		==			
ANR	4825693	Identifier	c		4822895	0					
ANR	4825694	PrimaryExpression	0x0a		4822895	1					
ANR	4825695	ExpressionStatement	state = 12	6910:29:248185:248195	4822895	1	True				
ANR	4825696	AssignmentExpression	state = 12		4822895	0		=			
ANR	4825697	Identifier	state		4822895	0					
ANR	4825698	PrimaryExpression	12		4822895	1					
ANR	4825699	ElseStatement	else		4822895	0					
ANR	4825700	ExpressionStatement	state = 18	6911:29:248226:248236	4822895	0	True				
ANR	4825701	AssignmentExpression	state = 18		4822895	0		=			
ANR	4825702	Identifier	state		4822895	0					
ANR	4825703	PrimaryExpression	18		4822895	1					
ANR	4825704	BreakStatement	break ;	6913:9:248260:248265	4822895	173	True				
ANR	4825705	Label	default :	6915:9:248277:248284	4822895	174	True				
ANR	4825706	Identifier	default		4822895	0					
ANR	4825707	ExpressionStatement	"errprintf ( udev -> memory , ""UNIPRINT-Coding error, wrrtl, state = %d\\n"" , state )"	6917:11:248328:248424	4822895	175	True				
ANR	4825708	CallExpression	"errprintf ( udev -> memory , ""UNIPRINT-Coding error, wrrtl, state = %d\\n"" , state )"		4822895	0					
ANR	4825709	Callee	errprintf		4822895	0					
ANR	4825710	Identifier	errprintf		4822895	0					
ANR	4825711	ArgumentList	udev -> memory		4822895	1					
ANR	4825712	Argument	udev -> memory		4822895	0					
ANR	4825713	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4825714	Identifier	udev		4822895	0					
ANR	4825715	Identifier	memory		4822895	1					
ANR	4825716	Argument	"""UNIPRINT-Coding error, wrrtl, state = %d\\n"""		4822895	1					
ANR	4825717	PrimaryExpression	"""UNIPRINT-Coding error, wrrtl, state = %d\\n"""		4822895	0					
ANR	4825718	Argument	state		4822895	2					
ANR	4825719	Identifier	state		4822895	0					
ANR	4825720	ExpressionStatement	state = 0	6920:11:248444:248453	4822895	176	True				
ANR	4825721	AssignmentExpression	state = 0		4822895	0		=			
ANR	4825722	Identifier	state		4822895	0					
ANR	4825723	PrimaryExpression	0		4822895	1					
ANR	4825724	BreakStatement	break ;	6921:9:248464:248469	4822895	177	True				
ANR	4825725	IfStatement	if ( upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size )		4822895	3					
ANR	4825726	Condition	upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size	6927:6:248586:248630	4822895	0	True				
ANR	4825727	RelationalExpression	upd -> ocomp > upd -> string_a [ SA_WRITECOMP ] . size		4822895	0		>			
ANR	4825728	PtrMemberAccess	upd -> ocomp		4822895	0					
ANR	4825729	Identifier	upd		4822895	0					
ANR	4825730	Identifier	ocomp		4822895	1					
ANR	4825731	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . size		4822895	1					
ANR	4825732	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4822895	0					
ANR	4825733	PtrMemberAccess	upd -> string_a		4822895	0					
ANR	4825734	Identifier	upd		4822895	0					
ANR	4825735	Identifier	string_a		4822895	1					
ANR	4825736	Identifier	SA_WRITECOMP		4822895	1					
ANR	4825737	Identifier	size		4822895	1					
ANR	4825738	CompoundStatement		497:53:19432:19432	4822895	1					
ANR	4825739	ExpressionStatement	"errprintf ( udev -> memory , ""PCL-Open: WRITECOMP-Commands must be given\\n"" )"	6929:6:248674:248754	4822895	0	True				
ANR	4825740	CallExpression	"errprintf ( udev -> memory , ""PCL-Open: WRITECOMP-Commands must be given\\n"" )"		4822895	0					
ANR	4825741	Callee	errprintf		4822895	0					
ANR	4825742	Identifier	errprintf		4822895	0					
ANR	4825743	ArgumentList	udev -> memory		4822895	1					
ANR	4825744	Argument	udev -> memory		4822895	0					
ANR	4825745	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4825746	Identifier	udev		4822895	0					
ANR	4825747	Identifier	memory		4822895	1					
ANR	4825748	Argument	"""PCL-Open: WRITECOMP-Commands must be given\\n"""		4822895	1					
ANR	4825749	PrimaryExpression	"""PCL-Open: WRITECOMP-Commands must be given\\n"""		4822895	0					
ANR	4825750	ExpressionStatement	error = - 1	6932:6:248769:248779	4822895	1	True				
ANR	4825751	AssignmentExpression	error = - 1		4822895	0		=			
ANR	4825752	Identifier	error		4822895	0					
ANR	4825753	UnaryOperationExpression	- 1		4822895	1					
ANR	4825754	UnaryOperator	-		4822895	0					
ANR	4825755	PrimaryExpression	1		4822895	1					
ANR	4825756	IfStatement	if ( 0 <= error )		4822895	4					
ANR	4825757	Condition	0 <= error	6941:6:248929:248938	4822895	0	True				
ANR	4825758	RelationalExpression	0 <= error		4822895	0		<=			
ANR	4825759	PrimaryExpression	0		4822895	0					
ANR	4825760	Identifier	error		4822895	1					
ANR	4825761	CompoundStatement		513:6:19774:19787	4822895	1					
ANR	4825762	IdentifierDeclStatement	"int32_t ny , noutbuf ;"	6942:6:248949:248967	4822895	0	True				
ANR	4825763	IdentifierDecl	ny		4822895	0					
ANR	4825764	IdentifierDeclType	int32_t		4822895	0					
ANR	4825765	Identifier	ny		4822895	1					
ANR	4825766	IdentifierDecl	noutbuf		4822895	1					
ANR	4825767	IdentifierDeclType	int32_t		4822895	0					
ANR	4825768	Identifier	noutbuf		4822895	1					
ANR	4825769	IdentifierDeclStatement	char tmp [ 16 ] ;	6943:6:248975:248988	4822895	1	True				
ANR	4825770	IdentifierDecl	tmp [ 16 ]		4822895	0					
ANR	4825771	IdentifierDeclType	char [ 16 ]		4822895	0					
ANR	4825772	Identifier	tmp		4822895	1					
ANR	4825773	PrimaryExpression	16		4822895	2					
ANR	4825774	IfStatement	if ( 0 < upd -> strings [ S_YMOVE ] . size )		4822895	2					
ANR	4825775	Condition	0 < upd -> strings [ S_YMOVE ] . size	6945:9:249000:249029	4822895	0	True				
ANR	4825776	RelationalExpression	0 < upd -> strings [ S_YMOVE ] . size		4822895	0		<			
ANR	4825777	PrimaryExpression	0		4822895	0					
ANR	4825778	MemberAccess	upd -> strings [ S_YMOVE ] . size		4822895	1					
ANR	4825779	ArrayIndexing	upd -> strings [ S_YMOVE ]		4822895	0					
ANR	4825780	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825781	Identifier	upd		4822895	0					
ANR	4825782	Identifier	strings		4822895	1					
ANR	4825783	Identifier	S_YMOVE		4822895	1					
ANR	4825784	Identifier	size		4822895	1					
ANR	4825785	CompoundStatement		515:41:19831:19831	4822895	1					
ANR	4825786	ExpressionStatement	"gs_sprintf ( tmp , ""%d"" , upd -> pheight )"	6946:9:249043:249076	4822895	0	True				
ANR	4825787	CallExpression	"gs_sprintf ( tmp , ""%d"" , upd -> pheight )"		4822895	0					
ANR	4825788	Callee	gs_sprintf		4822895	0					
ANR	4825789	Identifier	gs_sprintf		4822895	0					
ANR	4825790	ArgumentList	tmp		4822895	1					
ANR	4825791	Argument	tmp		4822895	0					
ANR	4825792	Identifier	tmp		4822895	0					
ANR	4825793	Argument	"""%d"""		4822895	1					
ANR	4825794	PrimaryExpression	"""%d"""		4822895	0					
ANR	4825795	Argument	upd -> pheight		4822895	2					
ANR	4825796	PtrMemberAccess	upd -> pheight		4822895	0					
ANR	4825797	Identifier	upd		4822895	0					
ANR	4825798	Identifier	pheight		4822895	1					
ANR	4825799	ExpressionStatement	ny = upd -> strings [ S_YMOVE ] . size + strlen ( tmp )	6947:9:249087:249132	4822895	1	True				
ANR	4825800	AssignmentExpression	ny = upd -> strings [ S_YMOVE ] . size + strlen ( tmp )		4822895	0		=			
ANR	4825801	Identifier	ny		4822895	0					
ANR	4825802	AdditiveExpression	upd -> strings [ S_YMOVE ] . size + strlen ( tmp )		4822895	1		+			
ANR	4825803	MemberAccess	upd -> strings [ S_YMOVE ] . size		4822895	0					
ANR	4825804	ArrayIndexing	upd -> strings [ S_YMOVE ]		4822895	0					
ANR	4825805	PtrMemberAccess	upd -> strings		4822895	0					
ANR	4825806	Identifier	upd		4822895	0					
ANR	4825807	Identifier	strings		4822895	1					
ANR	4825808	Identifier	S_YMOVE		4822895	1					
ANR	4825809	Identifier	size		4822895	1					
ANR	4825810	CallExpression	strlen ( tmp )		4822895	1					
ANR	4825811	Callee	strlen		4822895	0					
ANR	4825812	Identifier	strlen		4822895	0					
ANR	4825813	ArgumentList	tmp		4822895	1					
ANR	4825814	Argument	tmp		4822895	0					
ANR	4825815	Identifier	tmp		4822895	0					
ANR	4825816	ElseStatement	else		4822895	0					
ANR	4825817	CompoundStatement		518:13:19946:19946	4822895	0					
ANR	4825818	ExpressionStatement	ny = 1 + upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size	6949:9:249158:249218	4822895	0	True				
ANR	4825819	AssignmentExpression	ny = 1 + upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size		4822895	0		=			
ANR	4825820	Identifier	ny		4822895	0					
ANR	4825821	AdditiveExpression	1 + upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size		4822895	1		+			
ANR	4825822	PrimaryExpression	1		4822895	0					
ANR	4825823	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size		4822895	1					
ANR	4825824	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ]		4822895	0					
ANR	4825825	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4822895	0					
ANR	4825826	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4822895	0					
ANR	4825827	PtrMemberAccess	upd -> string_a		4822895	0					
ANR	4825828	Identifier	upd		4822895	0					
ANR	4825829	Identifier	string_a		4822895	1					
ANR	4825830	Identifier	SA_WRITECOMP		4822895	1					
ANR	4825831	Identifier	data		4822895	1					
ANR	4825832	AdditiveExpression	upd -> ocomp - 1		4822895	1		-			
ANR	4825833	PtrMemberAccess	upd -> ocomp		4822895	0					
ANR	4825834	Identifier	upd		4822895	0					
ANR	4825835	Identifier	ocomp		4822895	1					
ANR	4825836	PrimaryExpression	1		4822895	1					
ANR	4825837	Identifier	size		4822895	1					
ANR	4825838	ExpressionStatement	ny *= upd -> pheight	6950:9:249229:249247	4822895	1	True				
ANR	4825839	AssignmentExpression	ny *= upd -> pheight		4822895	0		*=			
ANR	4825840	Identifier	ny		4822895	0					
ANR	4825841	PtrMemberAccess	upd -> pheight		4822895	1					
ANR	4825842	Identifier	upd		4822895	0					
ANR	4825843	Identifier	pheight		4822895	1					
ANR	4825844	ExpressionStatement	noutbuf = upd -> nbytes + ( upd -> nbytes + 127 ) / 128	6953:6:249264:249313	4822895	3	True				
ANR	4825845	AssignmentExpression	noutbuf = upd -> nbytes + ( upd -> nbytes + 127 ) / 128		4822895	0		=			
ANR	4825846	Identifier	noutbuf		4822895	0					
ANR	4825847	AdditiveExpression	upd -> nbytes + ( upd -> nbytes + 127 ) / 128		4822895	1		+			
ANR	4825848	PtrMemberAccess	upd -> nbytes		4822895	0					
ANR	4825849	Identifier	upd		4822895	0					
ANR	4825850	Identifier	nbytes		4822895	1					
ANR	4825851	MultiplicativeExpression	( upd -> nbytes + 127 ) / 128		4822895	1		/			
ANR	4825852	AdditiveExpression	upd -> nbytes + 127		4822895	0		+			
ANR	4825853	PtrMemberAccess	upd -> nbytes		4822895	0					
ANR	4825854	Identifier	upd		4822895	0					
ANR	4825855	Identifier	nbytes		4822895	1					
ANR	4825856	PrimaryExpression	127		4822895	1					
ANR	4825857	PrimaryExpression	128		4822895	1					
ANR	4825858	IfStatement	if ( ny > noutbuf )		4822895	4					
ANR	4825859	Condition	ny > noutbuf	6955:9:249325:249336	4822895	0	True				
ANR	4825860	RelationalExpression	ny > noutbuf		4822895	0		>			
ANR	4825861	Identifier	ny		4822895	0					
ANR	4825862	Identifier	noutbuf		4822895	1					
ANR	4825863	ExpressionStatement	noutbuf = ny	6955:23:249339:249351	4822895	1	True				
ANR	4825864	AssignmentExpression	noutbuf = ny		4822895	0		=			
ANR	4825865	Identifier	noutbuf		4822895	0					
ANR	4825866	Identifier	ny		4822895	1					
ANR	4825867	ExpressionStatement	noutbuf += 16	6956:6:249359:249372	4822895	5	True				
ANR	4825868	AssignmentExpression	noutbuf += 16		4822895	0		+=			
ANR	4825869	Identifier	noutbuf		4822895	0					
ANR	4825870	PrimaryExpression	16		4822895	1					
ANR	4825871	IfStatement	if ( noutbuf > 0 )		4822895	6					
ANR	4825872	Condition	noutbuf > 0	6958:9:249384:249394	4822895	0	True				
ANR	4825873	RelationalExpression	noutbuf > 0		4822895	0		>			
ANR	4825874	Identifier	noutbuf		4822895	0					
ANR	4825875	PrimaryExpression	0		4822895	1					
ANR	4825876	CompoundStatement		528:22:20196:20196	4822895	1					
ANR	4825877	ExpressionStatement	upd -> noutbuf = noutbuf	6959:9:249408:249435	4822895	0	True				
ANR	4825878	AssignmentExpression	upd -> noutbuf = noutbuf		4822895	0		=			
ANR	4825879	PtrMemberAccess	upd -> noutbuf		4822895	0					
ANR	4825880	Identifier	upd		4822895	0					
ANR	4825881	Identifier	noutbuf		4822895	1					
ANR	4825882	Identifier	noutbuf		4822895	1					
ANR	4825883	ExpressionStatement	upd -> writer = upd_wrtrtl	6960:9:249446:249476	4822895	1	True				
ANR	4825884	AssignmentExpression	upd -> writer = upd_wrtrtl		4822895	0		=			
ANR	4825885	PtrMemberAccess	upd -> writer		4822895	0					
ANR	4825886	Identifier	upd		4822895	0					
ANR	4825887	Identifier	writer		4822895	1					
ANR	4825888	Identifier	upd_wrtrtl		4822895	1					
ANR	4825889	ExpressionStatement	error = 1	6961:9:249487:249508	4822895	2	True				
ANR	4825890	AssignmentExpression	error = 1		4822895	0		=			
ANR	4825891	Identifier	error		4822895	0					
ANR	4825892	PrimaryExpression	1		4822895	1					
ANR	4825893	ElseStatement	else		4822895	0					
ANR	4825894	CompoundStatement		532:13:20322:20322	4822895	0					
ANR	4825895	ExpressionStatement	error = - 1	6963:9:249534:249544	4822895	0	True				
ANR	4825896	AssignmentExpression	error = - 1		4822895	0		=			
ANR	4825897	Identifier	error		4822895	0					
ANR	4825898	UnaryOperationExpression	- 1		4822895	1					
ANR	4825899	UnaryOperator	-		4822895	0					
ANR	4825900	PrimaryExpression	1		4822895	1					
ANR	4825901	ExpressionStatement	"errprintf ( udev -> memory , ""PCL-Open: %ld is unreasonable size of Outputbuffer\\n"" , ( long ) noutbuf )"	6965:12:249596:249719	4822895	1	True				
ANR	4825902	CallExpression	"errprintf ( udev -> memory , ""PCL-Open: %ld is unreasonable size of Outputbuffer\\n"" , ( long ) noutbuf )"		4822895	0					
ANR	4825903	Callee	errprintf		4822895	0					
ANR	4825904	Identifier	errprintf		4822895	0					
ANR	4825905	ArgumentList	udev -> memory		4822895	1					
ANR	4825906	Argument	udev -> memory		4822895	0					
ANR	4825907	PtrMemberAccess	udev -> memory		4822895	0					
ANR	4825908	Identifier	udev		4822895	0					
ANR	4825909	Identifier	memory		4822895	1					
ANR	4825910	Argument	"""PCL-Open: %ld is unreasonable size of Outputbuffer\\n"""		4822895	1					
ANR	4825911	PrimaryExpression	"""PCL-Open: %ld is unreasonable size of Outputbuffer\\n"""		4822895	0					
ANR	4825912	Argument	( long ) noutbuf		4822895	2					
ANR	4825913	CastExpression	( long ) noutbuf		4822895	0					
ANR	4825914	CastTarget	long		4822895	0					
ANR	4825915	Identifier	noutbuf		4822895	1					
ANR	4825916	ReturnStatement	return error ;	6972:3:249745:249757	4822895	5	True				
ANR	4825917	Identifier	error		4822895	0					
ANR	4825918	ReturnType	static int		4822895	1					
ANR	4825919	Identifier	upd_open_wrtrtl		4822895	2					
ANR	4825920	ParameterList	upd_device * udev		4822895	3					
ANR	4825921	Parameter	upd_device * udev	6430:16:229182:229197	4822895	0	True				
ANR	4825922	ParameterType	upd_device *		4822895	0					
ANR	4825923	Identifier	udev		4822895	1					
ANR	4825924	CFGEntryNode	ENTRY		4822895		True				
ANR	4825925	CFGExitNode	EXIT		4822895		True				
ANR	4825926	Symbol	* upd -> string_a		4822895						
ANR	4825927	Symbol	* upd -> strings [ S_BEGIN ] . data		4822895						
ANR	4825928	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		4822895						
ANR	4825929	Symbol	strlen		4822895						
ANR	4825930	Symbol	* udev		4822895						
ANR	4825931	Symbol	tmp		4822895						
ANR	4825932	Symbol	S_BEGIN		4822895						
ANR	4825933	Symbol	state		4822895						
ANR	4825934	Symbol	udev -> height		4822895						
ANR	4825935	Symbol	upd -> nbytes		4822895						
ANR	4825936	Symbol	* * S_BEGIN		4822895						
ANR	4825937	Symbol	upd		4822895						
ANR	4825938	Symbol	* SA_WRITECOMP		4822895						
ANR	4825939	Symbol	SA_WRITECOMP		4822895						
ANR	4825940	Symbol	udev -> y_pixels_per_inch		4822895						
ANR	4825941	Symbol	noutbuf		4822895						
ANR	4825942	Symbol	udev -> width		4822895						
ANR	4825943	Symbol	udev		4822895						
ANR	4825944	Symbol	nbp		4822895						
ANR	4825945	Symbol	upd -> pwidth		4822895						
ANR	4825946	Symbol	upd -> pheight		4822895						
ANR	4825947	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ upd -> ocomp - 1 ] . size		4822895						
ANR	4825948	Symbol	upd -> strings [ S_BEGIN ] . size		4822895						
ANR	4825949	Symbol	* S_BEGIN		4822895						
ANR	4825950	Symbol	upd -> strings		4822895						
ANR	4825951	Symbol	ny		4822895						
ANR	4825952	Symbol	error		4822895						
ANR	4825953	Symbol	bp		4822895						
ANR	4825954	Symbol	upd -> flags		4822895						
ANR	4825955	Symbol	udev -> upd		4822895						
ANR	4825956	Symbol	* upd		4822895						
ANR	4825957	Symbol	upd_wrtrtl		4822895						
ANR	4825958	Symbol	* * upd -> string_a		4822895						
ANR	4825959	Symbol	upd -> string_a [ SA_WRITECOMP ] . size		4822895						
ANR	4825960	Symbol	upd -> ocomp		4822895						
ANR	4825961	Symbol	* upd -> strings		4822895						
ANR	4825962	Symbol	* * SA_WRITECOMP		4822895						
ANR	4825963	Symbol	ncv		4822895						
ANR	4825964	Symbol	* upd -> ocomp		4822895						
ANR	4825965	Symbol	upd -> strings [ S_YMOVE ] . size		4822895						
ANR	4825966	Symbol	c		4822895						
ANR	4825967	Symbol	* S_YMOVE		4822895						
ANR	4825968	Symbol	udev -> memory		4822895						
ANR	4825969	Symbol	* * * upd		4822895						
ANR	4825970	Symbol	i		4822895						
ANR	4825971	Symbol	j		4822895						
ANR	4825972	Symbol	upd -> string_a		4822895						
ANR	4825973	Symbol	B_PAGEWIDTH		4822895						
ANR	4825974	Symbol	upd -> noutbuf		4822895						
ANR	4825975	Symbol	upd -> strings [ S_BEGIN ] . data		4822895						
ANR	4825976	Symbol	udev -> x_pixels_per_inch		4822895						
ANR	4825977	Symbol	cv		4822895						
ANR	4825978	Symbol	* i		4822895						
ANR	4825979	Symbol	B_PAGELENGTH		4822895						
ANR	4825980	Symbol	S_YMOVE		4822895						
ANR	4825981	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		4822895						
ANR	4825982	Symbol	upd -> writer		4822895						
ANR	4825983	Symbol	* * upd		4822895						
ANR	4825984	Symbol	* * upd -> strings		4822895						
ANR	4825985	Symbol	B_RESOLUTION		4822895						
ANR	4825986	Function	upd_wrtrtl	6979:0:249985:252181							
ANR	4825987	FunctionDef	"upd_wrtrtl (upd_p upd , FILE * out)"		4825986	0					
ANR	4825988	CompoundStatement		6981:0:250029:252181	4825986	0					
ANR	4825989	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ] ;	6982:3:250034:250094	4825986	0	True				
ANR	4825990	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		4825986	0					
ANR	4825991	IdentifierDeclType	const updscan_p		4825986	0					
ANR	4825992	Identifier	scan		4825986	1					
ANR	4825993	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		4825986	2		=			
ANR	4825994	Identifier	scan		4825986	0					
ANR	4825995	ArrayIndexing	upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		4825986	1					
ANR	4825996	PtrMemberAccess	upd -> scnbuf		4825986	0					
ANR	4825997	Identifier	upd		4825986	0					
ANR	4825998	Identifier	scnbuf		4825986	1					
ANR	4825999	BitAndExpression	upd -> yscan & upd -> scnmsk		4825986	1		&			
ANR	4826000	PtrMemberAccess	upd -> yscan		4825986	0					
ANR	4826001	Identifier	upd		4825986	0					
ANR	4826002	Identifier	yscan		4825986	1					
ANR	4826003	PtrMemberAccess	upd -> scnmsk		4825986	1					
ANR	4826004	Identifier	upd		4825986	0					
ANR	4826005	Identifier	scnmsk		4825986	1					
ANR	4826006	IdentifierDeclStatement	"int x , xend , icomp , ioutbuf ;"	6984:3:250100:250125	4825986	1	True				
ANR	4826007	IdentifierDecl	x		4825986	0					
ANR	4826008	IdentifierDeclType	int		4825986	0					
ANR	4826009	Identifier	x		4825986	1					
ANR	4826010	IdentifierDecl	xend		4825986	1					
ANR	4826011	IdentifierDeclType	int		4825986	0					
ANR	4826012	Identifier	xend		4825986	1					
ANR	4826013	IdentifierDecl	icomp		4825986	2					
ANR	4826014	IdentifierDeclType	int		4825986	0					
ANR	4826015	Identifier	icomp		4825986	1					
ANR	4826016	IdentifierDecl	ioutbuf		4825986	3					
ANR	4826017	IdentifierDeclType	int		4825986	0					
ANR	4826018	Identifier	ioutbuf		4825986	1					
ANR	4826019	IdentifierDeclStatement	byte * data ;	6985:3:250130:250140	4825986	2	True				
ANR	4826020	IdentifierDecl	* data		4825986	0					
ANR	4826021	IdentifierDeclType	byte *		4825986	0					
ANR	4826022	Identifier	data		4825986	1					
ANR	4826023	ExpressionStatement	xend = - 1	6989:3:250183:250194	4825986	3	True				
ANR	4826024	AssignmentExpression	xend = - 1		4825986	0		=			
ANR	4826025	Identifier	xend		4825986	0					
ANR	4826026	UnaryOperationExpression	- 1		4825986	1					
ANR	4826027	UnaryOperator	-		4825986	0					
ANR	4826028	PrimaryExpression	1		4825986	1					
ANR	4826029	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4825986	4					
ANR	4826030	ForInit	icomp = 0 ;	6990:7:250203:250212	4825986	0	True				
ANR	4826031	AssignmentExpression	icomp = 0		4825986	0		=			
ANR	4826032	Identifier	icomp		4825986	0					
ANR	4826033	PrimaryExpression	0		4825986	1					
ANR	4826034	Condition	icomp < upd -> ocomp	6990:18:250214:250231	4825986	1	True				
ANR	4826035	RelationalExpression	icomp < upd -> ocomp		4825986	0		<			
ANR	4826036	Identifier	icomp		4825986	0					
ANR	4826037	PtrMemberAccess	upd -> ocomp		4825986	1					
ANR	4826038	Identifier	upd		4825986	0					
ANR	4826039	Identifier	ocomp		4825986	1					
ANR	4826040	UnaryExpression	++ icomp	6990:38:250234:250240	4825986	2	True				
ANR	4826041	IncDec	++		4825986	0					
ANR	4826042	Identifier	icomp		4825986	1					
ANR	4826043	CompoundStatement		10:47:213:213	4825986	3					
ANR	4826044	ExpressionStatement	data = scan [ icomp ] . bytes	6992:6:250252:250276	4825986	0	True				
ANR	4826045	AssignmentExpression	data = scan [ icomp ] . bytes		4825986	0		=			
ANR	4826046	Identifier	data		4825986	0					
ANR	4826047	MemberAccess	scan [ icomp ] . bytes		4825986	1					
ANR	4826048	ArrayIndexing	scan [ icomp ]		4825986	0					
ANR	4826049	Identifier	scan		4825986	0					
ANR	4826050	Identifier	icomp		4825986	1					
ANR	4826051	Identifier	bytes		4825986	1					
ANR	4826052	ForStatement	for ( x = upd -> nbytes - 1 ; 0 <= x ; -- x )		4825986	1					
ANR	4826053	ForInit	x = upd -> nbytes - 1 ;	6994:10:250289:250306	4825986	0	True				
ANR	4826054	AssignmentExpression	x = upd -> nbytes - 1		4825986	0		=			
ANR	4826055	Identifier	x		4825986	0					
ANR	4826056	AdditiveExpression	upd -> nbytes - 1		4825986	1		-			
ANR	4826057	PtrMemberAccess	upd -> nbytes		4825986	0					
ANR	4826058	Identifier	upd		4825986	0					
ANR	4826059	Identifier	nbytes		4825986	1					
ANR	4826060	PrimaryExpression	1		4825986	1					
ANR	4826061	Condition	0 <= x	6994:29:250308:250313	4825986	1	True				
ANR	4826062	RelationalExpression	0 <= x		4825986	0		<=			
ANR	4826063	PrimaryExpression	0		4825986	0					
ANR	4826064	Identifier	x		4825986	1					
ANR	4826065	UnaryExpression	-- x	6994:37:250316:250318	4825986	2	True				
ANR	4826066	IncDec	--		4825986	0					
ANR	4826067	Identifier	x		4825986	1					
ANR	4826068	IfStatement	if ( data [ x ] )		4825986	3					
ANR	4826069	Condition	data [ x ]	6994:45:250324:250330	4825986	0	True				
ANR	4826070	ArrayIndexing	data [ x ]		4825986	0					
ANR	4826071	Identifier	data		4825986	0					
ANR	4826072	Identifier	x		4825986	1					
ANR	4826073	BreakStatement	break ;	6994:54:250333:250338	4825986	1	True				
ANR	4826074	IfStatement	if ( x > xend )		4825986	2					
ANR	4826075	Condition	x > xend	6995:9:250349:250356	4825986	0	True				
ANR	4826076	RelationalExpression	x > xend		4825986	0		>			
ANR	4826077	Identifier	x		4825986	0					
ANR	4826078	Identifier	xend		4825986	1					
ANR	4826079	ExpressionStatement	xend = x	6995:19:250359:250368	4825986	1	True				
ANR	4826080	AssignmentExpression	xend = x		4825986	0		=			
ANR	4826081	Identifier	xend		4825986	0					
ANR	4826082	Identifier	x		4825986	1					
ANR	4826083	IfStatement	if ( 0 <= xend )		4825986	5					
ANR	4826084	Condition	0 <= xend	6998:6:250382:250390	4825986	0	True				
ANR	4826085	RelationalExpression	0 <= xend		4825986	0		<=			
ANR	4826086	PrimaryExpression	0		4825986	0					
ANR	4826087	Identifier	xend		4825986	1					
ANR	4826088	CompoundStatement		18:17:363:363	4825986	1					
ANR	4826089	ExpressionStatement	ioutbuf = 0	7000:6:250427:250438	4825986	0	True				
ANR	4826090	AssignmentExpression	ioutbuf = 0		4825986	0		=			
ANR	4826091	Identifier	ioutbuf		4825986	0					
ANR	4826092	PrimaryExpression	0		4825986	1					
ANR	4826093	ExpressionStatement	xend += 1	7001:6:250446:250457	4825986	1	True				
ANR	4826094	AssignmentExpression	xend += 1		4825986	0		+=			
ANR	4826095	Identifier	xend		4825986	0					
ANR	4826096	PrimaryExpression	1		4825986	1					
ANR	4826097	IfStatement	if ( upd -> yscan != upd -> yprinter )		4825986	2					
ANR	4826098	Condition	upd -> yscan != upd -> yprinter	7005:9:250512:250538	4825986	0	True				
ANR	4826099	EqualityExpression	upd -> yscan != upd -> yprinter		4825986	0		!=			
ANR	4826100	PtrMemberAccess	upd -> yscan		4825986	0					
ANR	4826101	Identifier	upd		4825986	0					
ANR	4826102	Identifier	yscan		4825986	1					
ANR	4826103	PtrMemberAccess	upd -> yprinter		4825986	1					
ANR	4826104	Identifier	upd		4825986	0					
ANR	4826105	Identifier	yprinter		4825986	1					
ANR	4826106	CompoundStatement		25:38:511:511	4825986	1					
ANR	4826107	IfStatement	if ( 1 < upd -> strings [ S_YMOVE ] . size )		4825986	0					
ANR	4826108	Condition	1 < upd -> strings [ S_YMOVE ] . size	7006:12:250579:250608	4825986	0	True				
ANR	4826109	RelationalExpression	1 < upd -> strings [ S_YMOVE ] . size		4825986	0		<			
ANR	4826110	PrimaryExpression	1		4825986	0					
ANR	4826111	MemberAccess	upd -> strings [ S_YMOVE ] . size		4825986	1					
ANR	4826112	ArrayIndexing	upd -> strings [ S_YMOVE ]		4825986	0					
ANR	4826113	PtrMemberAccess	upd -> strings		4825986	0					
ANR	4826114	Identifier	upd		4825986	0					
ANR	4826115	Identifier	strings		4825986	1					
ANR	4826116	Identifier	S_YMOVE		4825986	1					
ANR	4826117	Identifier	size		4825986	1					
ANR	4826118	CompoundStatement		26:44:581:581	4825986	1					
ANR	4826119	ExpressionStatement	"gs_sprintf ( ( char * ) upd -> outbuf + ioutbuf , ( const char * ) upd -> strings [ S_YMOVE ] . data , upd -> yscan - upd -> yprinter )"	7007:11:250624:250760	4825986	0	True				
ANR	4826120	CallExpression	"gs_sprintf ( ( char * ) upd -> outbuf + ioutbuf , ( const char * ) upd -> strings [ S_YMOVE ] . data , upd -> yscan - upd -> yprinter )"		4825986	0					
ANR	4826121	Callee	gs_sprintf		4825986	0					
ANR	4826122	Identifier	gs_sprintf		4825986	0					
ANR	4826123	ArgumentList	( char * ) upd -> outbuf + ioutbuf		4825986	1					
ANR	4826124	Argument	( char * ) upd -> outbuf + ioutbuf		4825986	0					
ANR	4826125	AdditiveExpression	( char * ) upd -> outbuf + ioutbuf		4825986	0		+			
ANR	4826126	CastExpression	( char * ) upd -> outbuf		4825986	0					
ANR	4826127	CastTarget	char *		4825986	0					
ANR	4826128	PtrMemberAccess	upd -> outbuf		4825986	1					
ANR	4826129	Identifier	upd		4825986	0					
ANR	4826130	Identifier	outbuf		4825986	1					
ANR	4826131	Identifier	ioutbuf		4825986	1					
ANR	4826132	Argument	( const char * ) upd -> strings [ S_YMOVE ] . data		4825986	1					
ANR	4826133	CastExpression	( const char * ) upd -> strings [ S_YMOVE ] . data		4825986	0					
ANR	4826134	CastTarget	const char *		4825986	0					
ANR	4826135	MemberAccess	upd -> strings [ S_YMOVE ] . data		4825986	1					
ANR	4826136	ArrayIndexing	upd -> strings [ S_YMOVE ]		4825986	0					
ANR	4826137	PtrMemberAccess	upd -> strings		4825986	0					
ANR	4826138	Identifier	upd		4825986	0					
ANR	4826139	Identifier	strings		4825986	1					
ANR	4826140	Identifier	S_YMOVE		4825986	1					
ANR	4826141	Identifier	data		4825986	1					
ANR	4826142	Argument	upd -> yscan - upd -> yprinter		4825986	2					
ANR	4826143	AdditiveExpression	upd -> yscan - upd -> yprinter		4825986	0		-			
ANR	4826144	PtrMemberAccess	upd -> yscan		4825986	0					
ANR	4826145	Identifier	upd		4825986	0					
ANR	4826146	Identifier	yscan		4825986	1					
ANR	4826147	PtrMemberAccess	upd -> yprinter		4825986	1					
ANR	4826148	Identifier	upd		4825986	0					
ANR	4826149	Identifier	yprinter		4825986	1					
ANR	4826150	ExpressionStatement	ioutbuf += strlen ( ( char * ) upd -> outbuf + ioutbuf )	7010:11:250773:250819	4825986	1	True				
ANR	4826151	AssignmentExpression	ioutbuf += strlen ( ( char * ) upd -> outbuf + ioutbuf )		4825986	0		+=			
ANR	4826152	Identifier	ioutbuf		4825986	0					
ANR	4826153	CallExpression	strlen ( ( char * ) upd -> outbuf + ioutbuf )		4825986	1					
ANR	4826154	Callee	strlen		4825986	0					
ANR	4826155	Identifier	strlen		4825986	0					
ANR	4826156	ArgumentList	( char * ) upd -> outbuf + ioutbuf		4825986	1					
ANR	4826157	Argument	( char * ) upd -> outbuf + ioutbuf		4825986	0					
ANR	4826158	AdditiveExpression	( char * ) upd -> outbuf + ioutbuf		4825986	0		+			
ANR	4826159	CastExpression	( char * ) upd -> outbuf		4825986	0					
ANR	4826160	CastTarget	char *		4825986	0					
ANR	4826161	PtrMemberAccess	upd -> outbuf		4825986	1					
ANR	4826162	Identifier	upd		4825986	0					
ANR	4826163	Identifier	outbuf		4825986	1					
ANR	4826164	Identifier	ioutbuf		4825986	1					
ANR	4826165	ElseStatement	else		4825986	0					
ANR	4826166	CompoundStatement		31:16:807:807	4825986	0					
ANR	4826167	WhileStatement	while ( upd -> yscan > upd -> yprinter )		4825986	0					
ANR	4826168	Condition	upd -> yscan > upd -> yprinter	7012:17:250856:250881	4825986	0	True				
ANR	4826169	RelationalExpression	upd -> yscan > upd -> yprinter		4825986	0		>			
ANR	4826170	PtrMemberAccess	upd -> yscan		4825986	0					
ANR	4826171	Identifier	upd		4825986	0					
ANR	4826172	Identifier	yscan		4825986	1					
ANR	4826173	PtrMemberAccess	upd -> yprinter		4825986	1					
ANR	4826174	Identifier	upd		4825986	0					
ANR	4826175	Identifier	yprinter		4825986	1					
ANR	4826176	CompoundStatement		32:45:854:854	4825986	1					
ANR	4826177	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4825986	0					
ANR	4826178	ForInit	icomp = 0 ;	7013:17:250903:250912	4825986	0	True				
ANR	4826179	AssignmentExpression	icomp = 0		4825986	0		=			
ANR	4826180	Identifier	icomp		4825986	0					
ANR	4826181	PrimaryExpression	0		4825986	1					
ANR	4826182	Condition	icomp < upd -> ocomp	7013:28:250914:250931	4825986	1	True				
ANR	4826183	RelationalExpression	icomp < upd -> ocomp		4825986	0		<			
ANR	4826184	Identifier	icomp		4825986	0					
ANR	4826185	PtrMemberAccess	upd -> ocomp		4825986	1					
ANR	4826186	Identifier	upd		4825986	0					
ANR	4826187	Identifier	ocomp		4825986	1					
ANR	4826188	UnaryExpression	++ icomp	7013:48:250934:250940	4825986	2	True				
ANR	4826189	IncDec	++		4825986	0					
ANR	4826190	Identifier	icomp		4825986	1					
ANR	4826191	CompoundStatement		33:57:913:913	4825986	3					
ANR	4826192	ExpressionStatement	"gs_sprintf ( ( char * ) upd -> outbuf + ioutbuf , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , 0 )"	7014:15:250960:251079	4825986	0	True				
ANR	4826193	CallExpression	"gs_sprintf ( ( char * ) upd -> outbuf + ioutbuf , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , 0 )"		4825986	0					
ANR	4826194	Callee	gs_sprintf		4825986	0					
ANR	4826195	Identifier	gs_sprintf		4825986	0					
ANR	4826196	ArgumentList	( char * ) upd -> outbuf + ioutbuf		4825986	1					
ANR	4826197	Argument	( char * ) upd -> outbuf + ioutbuf		4825986	0					
ANR	4826198	AdditiveExpression	( char * ) upd -> outbuf + ioutbuf		4825986	0		+			
ANR	4826199	CastExpression	( char * ) upd -> outbuf		4825986	0					
ANR	4826200	CastTarget	char *		4825986	0					
ANR	4826201	PtrMemberAccess	upd -> outbuf		4825986	1					
ANR	4826202	Identifier	upd		4825986	0					
ANR	4826203	Identifier	outbuf		4825986	1					
ANR	4826204	Identifier	ioutbuf		4825986	1					
ANR	4826205	Argument	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986	1					
ANR	4826206	CastExpression	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986	0					
ANR	4826207	CastTarget	const char *		4825986	0					
ANR	4826208	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986	1					
ANR	4826209	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4825986	0					
ANR	4826210	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4825986	0					
ANR	4826211	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4825986	0					
ANR	4826212	PtrMemberAccess	upd -> string_a		4825986	0					
ANR	4826213	Identifier	upd		4825986	0					
ANR	4826214	Identifier	string_a		4825986	1					
ANR	4826215	Identifier	SA_WRITECOMP		4825986	1					
ANR	4826216	Identifier	data		4825986	1					
ANR	4826217	Identifier	icomp		4825986	1					
ANR	4826218	Identifier	data		4825986	1					
ANR	4826219	Argument	0		4825986	2					
ANR	4826220	PrimaryExpression	0		4825986	0					
ANR	4826221	ExpressionStatement	ioutbuf += strlen ( ( char * ) upd -> outbuf + ioutbuf )	7016:15:251096:251142	4825986	1	True				
ANR	4826222	AssignmentExpression	ioutbuf += strlen ( ( char * ) upd -> outbuf + ioutbuf )		4825986	0		+=			
ANR	4826223	Identifier	ioutbuf		4825986	0					
ANR	4826224	CallExpression	strlen ( ( char * ) upd -> outbuf + ioutbuf )		4825986	1					
ANR	4826225	Callee	strlen		4825986	0					
ANR	4826226	Identifier	strlen		4825986	0					
ANR	4826227	ArgumentList	( char * ) upd -> outbuf + ioutbuf		4825986	1					
ANR	4826228	Argument	( char * ) upd -> outbuf + ioutbuf		4825986	0					
ANR	4826229	AdditiveExpression	( char * ) upd -> outbuf + ioutbuf		4825986	0		+			
ANR	4826230	CastExpression	( char * ) upd -> outbuf		4825986	0					
ANR	4826231	CastTarget	char *		4825986	0					
ANR	4826232	PtrMemberAccess	upd -> outbuf		4825986	1					
ANR	4826233	Identifier	upd		4825986	0					
ANR	4826234	Identifier	outbuf		4825986	1					
ANR	4826235	Identifier	ioutbuf		4825986	1					
ANR	4826236	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	7018:13:251172:251205	4825986	1	True				
ANR	4826237	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4825986	0					
ANR	4826238	Callee	fwrite		4825986	0					
ANR	4826239	Identifier	fwrite		4825986	0					
ANR	4826240	ArgumentList	upd -> outbuf		4825986	1					
ANR	4826241	Argument	upd -> outbuf		4825986	0					
ANR	4826242	PtrMemberAccess	upd -> outbuf		4825986	0					
ANR	4826243	Identifier	upd		4825986	0					
ANR	4826244	Identifier	outbuf		4825986	1					
ANR	4826245	Argument	1		4825986	1					
ANR	4826246	PrimaryExpression	1		4825986	0					
ANR	4826247	Argument	ioutbuf		4825986	2					
ANR	4826248	Identifier	ioutbuf		4825986	0					
ANR	4826249	Argument	out		4825986	3					
ANR	4826250	Identifier	out		4825986	0					
ANR	4826251	ExpressionStatement	ioutbuf = 0	7019:13:251220:251231	4825986	2	True				
ANR	4826252	AssignmentExpression	ioutbuf = 0		4825986	0		=			
ANR	4826253	Identifier	ioutbuf		4825986	0					
ANR	4826254	PrimaryExpression	0		4825986	1					
ANR	4826255	ExpressionStatement	upd -> yprinter += 1	7020:13:251246:251264	4825986	3	True				
ANR	4826256	AssignmentExpression	upd -> yprinter += 1		4825986	0		+=			
ANR	4826257	PtrMemberAccess	upd -> yprinter		4825986	0					
ANR	4826258	Identifier	upd		4825986	0					
ANR	4826259	Identifier	yprinter		4825986	1					
ANR	4826260	PrimaryExpression	1		4825986	1					
ANR	4826261	ExpressionStatement	upd -> yprinter = upd -> yscan	7023:9:251299:251325	4825986	1	True				
ANR	4826262	AssignmentExpression	upd -> yprinter = upd -> yscan		4825986	0		=			
ANR	4826263	PtrMemberAccess	upd -> yprinter		4825986	0					
ANR	4826264	Identifier	upd		4825986	0					
ANR	4826265	Identifier	yprinter		4825986	1					
ANR	4826266	PtrMemberAccess	upd -> yscan		4825986	1					
ANR	4826267	Identifier	upd		4825986	0					
ANR	4826268	Identifier	yscan		4825986	1					
ANR	4826269	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	7024:9:251336:251369	4825986	2	True				
ANR	4826270	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4825986	0					
ANR	4826271	Callee	fwrite		4825986	0					
ANR	4826272	Identifier	fwrite		4825986	0					
ANR	4826273	ArgumentList	upd -> outbuf		4825986	1					
ANR	4826274	Argument	upd -> outbuf		4825986	0					
ANR	4826275	PtrMemberAccess	upd -> outbuf		4825986	0					
ANR	4826276	Identifier	upd		4825986	0					
ANR	4826277	Identifier	outbuf		4825986	1					
ANR	4826278	Argument	1		4825986	1					
ANR	4826279	PrimaryExpression	1		4825986	0					
ANR	4826280	Argument	ioutbuf		4825986	2					
ANR	4826281	Identifier	ioutbuf		4825986	0					
ANR	4826282	Argument	out		4825986	3					
ANR	4826283	Identifier	out		4825986	0					
ANR	4826284	ExpressionStatement	ioutbuf = 0	7025:9:251380:251391	4825986	3	True				
ANR	4826285	AssignmentExpression	ioutbuf = 0		4825986	0		=			
ANR	4826286	Identifier	ioutbuf		4825986	0					
ANR	4826287	PrimaryExpression	0		4825986	1					
ANR	4826288	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4825986	3					
ANR	4826289	ForInit	icomp = 0 ;	7030:10:251507:251516	4825986	0	True				
ANR	4826290	AssignmentExpression	icomp = 0		4825986	0		=			
ANR	4826291	Identifier	icomp		4825986	0					
ANR	4826292	PrimaryExpression	0		4825986	1					
ANR	4826293	Condition	icomp < upd -> ocomp	7030:21:251518:251535	4825986	1	True				
ANR	4826294	RelationalExpression	icomp < upd -> ocomp		4825986	0		<			
ANR	4826295	Identifier	icomp		4825986	0					
ANR	4826296	PtrMemberAccess	upd -> ocomp		4825986	1					
ANR	4826297	Identifier	upd		4825986	0					
ANR	4826298	Identifier	ocomp		4825986	1					
ANR	4826299	UnaryExpression	++ icomp	7030:41:251538:251544	4825986	2	True				
ANR	4826300	IncDec	++		4825986	0					
ANR	4826301	Identifier	icomp		4825986	1					
ANR	4826302	CompoundStatement		50:50:1517:1517	4825986	3					
ANR	4826303	ExpressionStatement	data = scan [ icomp ] . bytes	7031:9:251580:251604	4825986	0	True				
ANR	4826304	AssignmentExpression	data = scan [ icomp ] . bytes		4825986	0		=			
ANR	4826305	Identifier	data		4825986	0					
ANR	4826306	MemberAccess	scan [ icomp ] . bytes		4825986	1					
ANR	4826307	ArrayIndexing	scan [ icomp ]		4825986	0					
ANR	4826308	Identifier	scan		4825986	0					
ANR	4826309	Identifier	icomp		4825986	1					
ANR	4826310	Identifier	bytes		4825986	1					
ANR	4826311	ForStatement	for ( x = 0 ; x <= xend ; ++ x )		4825986	1					
ANR	4826312	ForInit	x = 0 ;	7032:13:251619:251624	4825986	0	True				
ANR	4826313	AssignmentExpression	x = 0		4825986	0		=			
ANR	4826314	Identifier	x		4825986	0					
ANR	4826315	PrimaryExpression	0		4825986	1					
ANR	4826316	Condition	x <= xend	7032:20:251626:251634	4825986	1	True				
ANR	4826317	RelationalExpression	x <= xend		4825986	0		<=			
ANR	4826318	Identifier	x		4825986	0					
ANR	4826319	Identifier	xend		4825986	1					
ANR	4826320	UnaryExpression	++ x	7032:31:251637:251639	4825986	2	True				
ANR	4826321	IncDec	++		4825986	0					
ANR	4826322	Identifier	x		4825986	1					
ANR	4826323	IfStatement	if ( data [ x ] )		4825986	3					
ANR	4826324	Condition	data [ x ]	7032:39:251645:251651	4825986	0	True				
ANR	4826325	ArrayIndexing	data [ x ]		4825986	0					
ANR	4826326	Identifier	data		4825986	0					
ANR	4826327	Identifier	x		4825986	1					
ANR	4826328	BreakStatement	break ;	7032:48:251654:251659	4825986	1	True				
ANR	4826329	IfStatement	if ( x <= xend )		4825986	2					
ANR	4826330	Condition	x <= xend	7033:12:251673:251681	4825986	0	True				
ANR	4826331	RelationalExpression	x <= xend		4825986	0		<=			
ANR	4826332	Identifier	x		4825986	0					
ANR	4826333	Identifier	xend		4825986	1					
ANR	4826334	CompoundStatement		53:23:1654:1654	4825986	1					
ANR	4826335	ExpressionStatement	"ioutbuf = upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"	7034:11:251697:251750	4825986	0	True				
ANR	4826336	AssignmentExpression	"ioutbuf = upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"		4825986	0		=			
ANR	4826337	Identifier	ioutbuf		4825986	0					
ANR	4826338	CallExpression	"upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"		4825986	1					
ANR	4826339	Callee	upd_rle		4825986	0					
ANR	4826340	Identifier	upd_rle		4825986	0					
ANR	4826341	ArgumentList	upd -> outbuf		4825986	1					
ANR	4826342	Argument	upd -> outbuf		4825986	0					
ANR	4826343	PtrMemberAccess	upd -> outbuf		4825986	0					
ANR	4826344	Identifier	upd		4825986	0					
ANR	4826345	Identifier	outbuf		4825986	1					
ANR	4826346	Argument	scan [ icomp ] . bytes		4825986	1					
ANR	4826347	MemberAccess	scan [ icomp ] . bytes		4825986	0					
ANR	4826348	ArrayIndexing	scan [ icomp ]		4825986	0					
ANR	4826349	Identifier	scan		4825986	0					
ANR	4826350	Identifier	icomp		4825986	1					
ANR	4826351	Identifier	bytes		4825986	1					
ANR	4826352	Argument	xend		4825986	2					
ANR	4826353	Identifier	xend		4825986	0					
ANR	4826354	ExpressionStatement	"fprintf ( out , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , ioutbuf )"	7035:11:251763:251855	4825986	1	True				
ANR	4826355	CallExpression	"fprintf ( out , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , ioutbuf )"		4825986	0					
ANR	4826356	Callee	fprintf		4825986	0					
ANR	4826357	Identifier	fprintf		4825986	0					
ANR	4826358	ArgumentList	out		4825986	1					
ANR	4826359	Argument	out		4825986	0					
ANR	4826360	Identifier	out		4825986	0					
ANR	4826361	Argument	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986	1					
ANR	4826362	CastExpression	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986	0					
ANR	4826363	CastTarget	const char *		4825986	0					
ANR	4826364	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986	1					
ANR	4826365	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4825986	0					
ANR	4826366	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4825986	0					
ANR	4826367	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4825986	0					
ANR	4826368	PtrMemberAccess	upd -> string_a		4825986	0					
ANR	4826369	Identifier	upd		4825986	0					
ANR	4826370	Identifier	string_a		4825986	1					
ANR	4826371	Identifier	SA_WRITECOMP		4825986	1					
ANR	4826372	Identifier	data		4825986	1					
ANR	4826373	Identifier	icomp		4825986	1					
ANR	4826374	Identifier	data		4825986	1					
ANR	4826375	Argument	ioutbuf		4825986	2					
ANR	4826376	Identifier	ioutbuf		4825986	0					
ANR	4826377	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	7037:12:251869:251902	4825986	2	True				
ANR	4826378	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4825986	0					
ANR	4826379	Callee	fwrite		4825986	0					
ANR	4826380	Identifier	fwrite		4825986	0					
ANR	4826381	ArgumentList	upd -> outbuf		4825986	1					
ANR	4826382	Argument	upd -> outbuf		4825986	0					
ANR	4826383	PtrMemberAccess	upd -> outbuf		4825986	0					
ANR	4826384	Identifier	upd		4825986	0					
ANR	4826385	Identifier	outbuf		4825986	1					
ANR	4826386	Argument	1		4825986	1					
ANR	4826387	PrimaryExpression	1		4825986	0					
ANR	4826388	Argument	ioutbuf		4825986	2					
ANR	4826389	Identifier	ioutbuf		4825986	0					
ANR	4826390	Argument	out		4825986	3					
ANR	4826391	Identifier	out		4825986	0					
ANR	4826392	ElseStatement	else		4825986	0					
ANR	4826393	CompoundStatement		58:16:1890:1890	4825986	0					
ANR	4826394	ExpressionStatement	"fprintf ( out , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , 0 )"	7039:11:251933:252020	4825986	0	True				
ANR	4826395	CallExpression	"fprintf ( out , ( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data , 0 )"		4825986	0					
ANR	4826396	Callee	fprintf		4825986	0					
ANR	4826397	Identifier	fprintf		4825986	0					
ANR	4826398	ArgumentList	out		4825986	1					
ANR	4826399	Argument	out		4825986	0					
ANR	4826400	Identifier	out		4825986	0					
ANR	4826401	Argument	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986	1					
ANR	4826402	CastExpression	( const char * ) upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986	0					
ANR	4826403	CastTarget	const char *		4825986	0					
ANR	4826404	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986	1					
ANR	4826405	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ]		4825986	0					
ANR	4826406	MemberAccess	upd -> string_a [ SA_WRITECOMP ] . data		4825986	0					
ANR	4826407	ArrayIndexing	upd -> string_a [ SA_WRITECOMP ]		4825986	0					
ANR	4826408	PtrMemberAccess	upd -> string_a		4825986	0					
ANR	4826409	Identifier	upd		4825986	0					
ANR	4826410	Identifier	string_a		4825986	1					
ANR	4826411	Identifier	SA_WRITECOMP		4825986	1					
ANR	4826412	Identifier	data		4825986	1					
ANR	4826413	Identifier	icomp		4825986	1					
ANR	4826414	Identifier	data		4825986	1					
ANR	4826415	Argument	0		4825986	2					
ANR	4826416	PrimaryExpression	0		4825986	0					
ANR	4826417	ExpressionStatement	upd -> yprinter += 1	7044:6:252048:252066	4825986	4	True				
ANR	4826418	AssignmentExpression	upd -> yprinter += 1		4825986	0		+=			
ANR	4826419	PtrMemberAccess	upd -> yprinter		4825986	0					
ANR	4826420	Identifier	upd		4825986	0					
ANR	4826421	Identifier	yprinter		4825986	1					
ANR	4826422	PrimaryExpression	1		4825986	1					
ANR	4826423	ExpressionStatement	upd -> yscan += 1	7050:3:252150:252165	4825986	6	True				
ANR	4826424	AssignmentExpression	upd -> yscan += 1		4825986	0		+=			
ANR	4826425	PtrMemberAccess	upd -> yscan		4825986	0					
ANR	4826426	Identifier	upd		4825986	0					
ANR	4826427	Identifier	yscan		4825986	1					
ANR	4826428	PrimaryExpression	1		4825986	1					
ANR	4826429	ReturnStatement	return 0 ;	7052:3:252171:252179	4825986	7	True				
ANR	4826430	PrimaryExpression	0		4825986	0					
ANR	4826431	ReturnType	static int		4825986	1					
ANR	4826432	Identifier	upd_wrtrtl		4825986	2					
ANR	4826433	ParameterList	"upd_p upd , FILE * out"		4825986	3					
ANR	4826434	Parameter	upd_p upd	6980:11:250007:250015	4825986	0	True				
ANR	4826435	ParameterType	upd_p		4825986	0					
ANR	4826436	Identifier	upd		4825986	1					
ANR	4826437	Parameter	FILE * out	6980:22:250018:250026	4825986	1	True				
ANR	4826438	ParameterType	FILE *		4825986	0					
ANR	4826439	Identifier	out		4825986	1					
ANR	4826440	CFGEntryNode	ENTRY		4825986		True				
ANR	4826441	CFGExitNode	EXIT		4825986		True				
ANR	4826442	Symbol	* upd -> string_a		4825986						
ANR	4826443	Symbol	* x		4825986						
ANR	4826444	Symbol	data		4825986						
ANR	4826445	Symbol	* upd -> yscan		4825986						
ANR	4826446	Symbol	scan		4825986						
ANR	4826447	Symbol	upd -> strings		4825986						
ANR	4826448	Symbol	icomp		4825986						
ANR	4826449	Symbol	scan [ icomp ] . bytes		4825986						
ANR	4826450	Symbol	out		4825986						
ANR	4826451	Symbol	upd -> yscan		4825986						
ANR	4826452	Symbol	* upd -> string_a [ SA_WRITECOMP ] . data		4825986						
ANR	4826453	Symbol	upd_rle		4825986						
ANR	4826454	Symbol	strlen		4825986						
ANR	4826455	Symbol	* upd		4825986						
ANR	4826456	Symbol	* icomp		4825986						
ANR	4826457	Symbol	upd -> strings [ S_YMOVE ] . data		4825986						
ANR	4826458	Symbol	* scan		4825986						
ANR	4826459	Symbol	* * upd -> string_a		4825986						
ANR	4826460	Symbol	* upd -> scnmsk		4825986						
ANR	4826461	Symbol	xend		4825986						
ANR	4826462	Symbol	upd -> ocomp		4825986						
ANR	4826463	Symbol	upd -> nbytes		4825986						
ANR	4826464	Symbol	* upd -> strings		4825986						
ANR	4826465	Symbol	* * SA_WRITECOMP		4825986						
ANR	4826466	Symbol	upd -> strings [ S_YMOVE ] . size		4825986						
ANR	4826467	Symbol	* S_YMOVE		4825986						
ANR	4826468	Symbol	upd -> scnmsk		4825986						
ANR	4826469	Symbol	* upd -> scnbuf		4825986						
ANR	4826470	Symbol	* * * upd		4825986						
ANR	4826471	Symbol	upd		4825986						
ANR	4826472	Symbol	* SA_WRITECOMP		4825986						
ANR	4826473	Symbol	SA_WRITECOMP		4825986						
ANR	4826474	Symbol	upd -> yprinter		4825986						
ANR	4826475	Symbol	upd -> string_a		4825986						
ANR	4826476	Symbol	ioutbuf		4825986						
ANR	4826477	Symbol	upd -> scnbuf		4825986						
ANR	4826478	Symbol	S_YMOVE		4825986						
ANR	4826479	Symbol	upd -> string_a [ SA_WRITECOMP ] . data		4825986						
ANR	4826480	Symbol	x		4825986						
ANR	4826481	Symbol	upd -> outbuf		4825986						
ANR	4826482	Symbol	upd -> string_a [ SA_WRITECOMP ] . data [ icomp ] . data		4825986						
ANR	4826483	Symbol	* * upd		4825986						
ANR	4826484	Symbol	* data		4825986						
ANR	4826485	Function	upd_open_wrtcanon	7059:0:252407:252670							
ANR	4826486	FunctionDef	upd_open_wrtcanon (upd_device * udev)		4826485	0					
ANR	4826487	CompoundStatement		7061:0:252454:252670	4826485	0					
ANR	4826488	IdentifierDeclStatement	const upd_p upd = udev -> upd ;	7062:2:252458:252485	4826485	0	True				
ANR	4826489	IdentifierDecl	upd = udev -> upd		4826485	0					
ANR	4826490	IdentifierDeclType	const upd_p		4826485	0					
ANR	4826491	Identifier	upd		4826485	1					
ANR	4826492	AssignmentExpression	upd = udev -> upd		4826485	2		=			
ANR	4826493	Identifier	upd		4826485	0					
ANR	4826494	PtrMemberAccess	udev -> upd		4826485	1					
ANR	4826495	Identifier	udev		4826485	0					
ANR	4826496	Identifier	upd		4826485	1					
ANR	4826497	IdentifierDeclStatement	int error = 0 ;	7063:2:252489:252502	4826485	1	True				
ANR	4826498	IdentifierDecl	error = 0		4826485	0					
ANR	4826499	IdentifierDeclType	int		4826485	0					
ANR	4826500	Identifier	error		4826485	1					
ANR	4826501	AssignmentExpression	error = 0		4826485	2		=			
ANR	4826502	Identifier	error		4826485	0					
ANR	4826503	PrimaryExpression	0		4826485	1					
ANR	4826504	ExpressionStatement	upd -> noutbuf = upd -> nbytes + ( upd -> nbytes + 127 ) / 128	7066:2:252546:252600	4826485	2	True				
ANR	4826505	AssignmentExpression	upd -> noutbuf = upd -> nbytes + ( upd -> nbytes + 127 ) / 128		4826485	0		=			
ANR	4826506	PtrMemberAccess	upd -> noutbuf		4826485	0					
ANR	4826507	Identifier	upd		4826485	0					
ANR	4826508	Identifier	noutbuf		4826485	1					
ANR	4826509	AdditiveExpression	upd -> nbytes + ( upd -> nbytes + 127 ) / 128		4826485	1		+			
ANR	4826510	PtrMemberAccess	upd -> nbytes		4826485	0					
ANR	4826511	Identifier	upd		4826485	0					
ANR	4826512	Identifier	nbytes		4826485	1					
ANR	4826513	MultiplicativeExpression	( upd -> nbytes + 127 ) / 128		4826485	1		/			
ANR	4826514	AdditiveExpression	upd -> nbytes + 127		4826485	0		+			
ANR	4826515	PtrMemberAccess	upd -> nbytes		4826485	0					
ANR	4826516	Identifier	upd		4826485	0					
ANR	4826517	Identifier	nbytes		4826485	1					
ANR	4826518	PrimaryExpression	127		4826485	1					
ANR	4826519	PrimaryExpression	128		4826485	1					
ANR	4826520	ExpressionStatement	upd -> writer = upd_wrtcanon	7067:2:252604:252631	4826485	3	True				
ANR	4826521	AssignmentExpression	upd -> writer = upd_wrtcanon		4826485	0		=			
ANR	4826522	PtrMemberAccess	upd -> writer		4826485	0					
ANR	4826523	Identifier	upd		4826485	0					
ANR	4826524	Identifier	writer		4826485	1					
ANR	4826525	Identifier	upd_wrtcanon		4826485	1					
ANR	4826526	ExpressionStatement	error = 1	7068:2:252635:252651	4826485	4	True				
ANR	4826527	AssignmentExpression	error = 1		4826485	0		=			
ANR	4826528	Identifier	error		4826485	0					
ANR	4826529	PrimaryExpression	1		4826485	1					
ANR	4826530	ReturnStatement	return error ;	7070:2:252656:252668	4826485	5	True				
ANR	4826531	Identifier	error		4826485	0					
ANR	4826532	ReturnType	static int		4826485	1					
ANR	4826533	Identifier	upd_open_wrtcanon		4826485	2					
ANR	4826534	ParameterList	upd_device * udev		4826485	3					
ANR	4826535	Parameter	upd_device * udev	7060:18:252436:252451	4826485	0	True				
ANR	4826536	ParameterType	upd_device *		4826485	0					
ANR	4826537	Identifier	udev		4826485	1					
ANR	4826538	CFGEntryNode	ENTRY		4826485		True				
ANR	4826539	CFGExitNode	EXIT		4826485		True				
ANR	4826540	Symbol	udev -> upd		4826485						
ANR	4826541	Symbol	upd -> noutbuf		4826485						
ANR	4826542	Symbol	* udev		4826485						
ANR	4826543	Symbol	* upd		4826485						
ANR	4826544	Symbol	upd_wrtcanon		4826485						
ANR	4826545	Symbol	upd -> writer		4826485						
ANR	4826546	Symbol	udev		4826485						
ANR	4826547	Symbol	upd		4826485						
ANR	4826548	Symbol	error		4826485						
ANR	4826549	Symbol	upd -> nbytes		4826485						
ANR	4826550	Function	upd_wrtcanon	7082:0:252989:255269							
ANR	4826551	FunctionDef	"upd_wrtcanon (upd_p upd , FILE * out)"		4826550	0					
ANR	4826552	CompoundStatement		7084:0:253035:255269	4826550	0					
ANR	4826553	IdentifierDeclStatement	const updscan_p scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ] ;	7085:2:253039:253099	4826550	0	True				
ANR	4826554	IdentifierDecl	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		4826550	0					
ANR	4826555	IdentifierDeclType	const updscan_p		4826550	0					
ANR	4826556	Identifier	scan		4826550	1					
ANR	4826557	AssignmentExpression	scan = upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		4826550	2		=			
ANR	4826558	Identifier	scan		4826550	0					
ANR	4826559	ArrayIndexing	upd -> scnbuf [ upd -> yscan & upd -> scnmsk ]		4826550	1					
ANR	4826560	PtrMemberAccess	upd -> scnbuf		4826550	0					
ANR	4826561	Identifier	upd		4826550	0					
ANR	4826562	Identifier	scnbuf		4826550	1					
ANR	4826563	BitAndExpression	upd -> yscan & upd -> scnmsk		4826550	1		&			
ANR	4826564	PtrMemberAccess	upd -> yscan		4826550	0					
ANR	4826565	Identifier	upd		4826550	0					
ANR	4826566	Identifier	yscan		4826550	1					
ANR	4826567	PtrMemberAccess	upd -> scnmsk		4826550	1					
ANR	4826568	Identifier	upd		4826550	0					
ANR	4826569	Identifier	scnmsk		4826550	1					
ANR	4826570	IdentifierDeclStatement	"int x , xend , icomp , ioutbuf , step , ioutbuf1 ;"	7087:2:253104:253147	4826550	1	True				
ANR	4826571	IdentifierDecl	x		4826550	0					
ANR	4826572	IdentifierDeclType	int		4826550	0					
ANR	4826573	Identifier	x		4826550	1					
ANR	4826574	IdentifierDecl	xend		4826550	1					
ANR	4826575	IdentifierDeclType	int		4826550	0					
ANR	4826576	Identifier	xend		4826550	1					
ANR	4826577	IdentifierDecl	icomp		4826550	2					
ANR	4826578	IdentifierDeclType	int		4826550	0					
ANR	4826579	Identifier	icomp		4826550	1					
ANR	4826580	IdentifierDecl	ioutbuf		4826550	3					
ANR	4826581	IdentifierDeclType	int		4826550	0					
ANR	4826582	Identifier	ioutbuf		4826550	1					
ANR	4826583	IdentifierDecl	step		4826550	4					
ANR	4826584	IdentifierDeclType	int		4826550	0					
ANR	4826585	Identifier	step		4826550	1					
ANR	4826586	IdentifierDecl	ioutbuf1		4826550	5					
ANR	4826587	IdentifierDeclType	int		4826550	0					
ANR	4826588	Identifier	ioutbuf1		4826550	1					
ANR	4826589	IdentifierDeclStatement	byte * data ;	7088:2:253151:253161	4826550	2	True				
ANR	4826590	IdentifierDecl	* data		4826550	0					
ANR	4826591	IdentifierDeclType	byte *		4826550	0					
ANR	4826592	Identifier	data		4826550	1					
ANR	4826593	ExpressionStatement	xend = - 1	7091:2:253209:253218	4826550	3	True				
ANR	4826594	AssignmentExpression	xend = - 1		4826550	0		=			
ANR	4826595	Identifier	xend		4826550	0					
ANR	4826596	UnaryOperationExpression	- 1		4826550	1					
ANR	4826597	UnaryOperator	-		4826550	0					
ANR	4826598	PrimaryExpression	1		4826550	1					
ANR	4826599	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4826550	4					
ANR	4826600	ForInit	icomp = 0 ;	7092:6:253226:253235	4826550	0	True				
ANR	4826601	AssignmentExpression	icomp = 0		4826550	0		=			
ANR	4826602	Identifier	icomp		4826550	0					
ANR	4826603	PrimaryExpression	0		4826550	1					
ANR	4826604	Condition	icomp < upd -> ocomp	7092:17:253237:253254	4826550	1	True				
ANR	4826605	RelationalExpression	icomp < upd -> ocomp		4826550	0		<			
ANR	4826606	Identifier	icomp		4826550	0					
ANR	4826607	PtrMemberAccess	upd -> ocomp		4826550	1					
ANR	4826608	Identifier	upd		4826550	0					
ANR	4826609	Identifier	ocomp		4826550	1					
ANR	4826610	UnaryExpression	++ icomp	7092:37:253257:253263	4826550	2	True				
ANR	4826611	IncDec	++		4826550	0					
ANR	4826612	Identifier	icomp		4826550	1					
ANR	4826613	CompoundStatement		9:46:230:230	4826550	3					
ANR	4826614	ExpressionStatement	data = scan [ icomp ] . bytes	7093:4:253272:253296	4826550	0	True				
ANR	4826615	AssignmentExpression	data = scan [ icomp ] . bytes		4826550	0		=			
ANR	4826616	Identifier	data		4826550	0					
ANR	4826617	MemberAccess	scan [ icomp ] . bytes		4826550	1					
ANR	4826618	ArrayIndexing	scan [ icomp ]		4826550	0					
ANR	4826619	Identifier	scan		4826550	0					
ANR	4826620	Identifier	icomp		4826550	1					
ANR	4826621	Identifier	bytes		4826550	1					
ANR	4826622	ForStatement	for ( x = upd -> nbytes - 1 ; 0 <= x ; -- x )		4826550	1					
ANR	4826623	ForInit	x = upd -> nbytes - 1 ;	7095:8:253307:253324	4826550	0	True				
ANR	4826624	AssignmentExpression	x = upd -> nbytes - 1		4826550	0		=			
ANR	4826625	Identifier	x		4826550	0					
ANR	4826626	AdditiveExpression	upd -> nbytes - 1		4826550	1		-			
ANR	4826627	PtrMemberAccess	upd -> nbytes		4826550	0					
ANR	4826628	Identifier	upd		4826550	0					
ANR	4826629	Identifier	nbytes		4826550	1					
ANR	4826630	PrimaryExpression	1		4826550	1					
ANR	4826631	Condition	0 <= x	7095:27:253326:253331	4826550	1	True				
ANR	4826632	RelationalExpression	0 <= x		4826550	0		<=			
ANR	4826633	PrimaryExpression	0		4826550	0					
ANR	4826634	Identifier	x		4826550	1					
ANR	4826635	UnaryExpression	-- x	7095:35:253334:253336	4826550	2	True				
ANR	4826636	IncDec	--		4826550	0					
ANR	4826637	Identifier	x		4826550	1					
ANR	4826638	IfStatement	if ( data [ x ] )		4826550	3					
ANR	4826639	Condition	data [ x ]	7095:43:253342:253348	4826550	0	True				
ANR	4826640	ArrayIndexing	data [ x ]		4826550	0					
ANR	4826641	Identifier	data		4826550	0					
ANR	4826642	Identifier	x		4826550	1					
ANR	4826643	BreakStatement	break ;	7095:52:253351:253356	4826550	1	True				
ANR	4826644	IfStatement	if ( x > xend )		4826550	2					
ANR	4826645	Condition	x > xend	7097:7:253366:253373	4826550	0	True				
ANR	4826646	RelationalExpression	x > xend		4826550	0		>			
ANR	4826647	Identifier	x		4826550	0					
ANR	4826648	Identifier	xend		4826550	1					
ANR	4826649	ExpressionStatement	xend = x	7097:17:253376:253385	4826550	1	True				
ANR	4826650	AssignmentExpression	xend = x		4826550	0		=			
ANR	4826651	Identifier	xend		4826550	0					
ANR	4826652	Identifier	x		4826550	1					
ANR	4826653	IfStatement	if ( 0 <= xend )		4826550	5					
ANR	4826654	Condition	0 <= xend	7101:5:253427:253435	4826550	0	True				
ANR	4826655	RelationalExpression	0 <= xend		4826550	0		<=			
ANR	4826656	PrimaryExpression	0		4826550	0					
ANR	4826657	Identifier	xend		4826550	1					
ANR	4826658	CompoundStatement		18:16:402:402	4826550	1					
ANR	4826659	ExpressionStatement	ioutbuf = 0	7102:4:253469:253480	4826550	0	True				
ANR	4826660	AssignmentExpression	ioutbuf = 0		4826550	0		=			
ANR	4826661	Identifier	ioutbuf		4826550	0					
ANR	4826662	PrimaryExpression	0		4826550	1					
ANR	4826663	ExpressionStatement	xend += 1	7103:4:253486:253497	4826550	1	True				
ANR	4826664	AssignmentExpression	xend += 1		4826550	0		+=			
ANR	4826665	Identifier	xend		4826550	0					
ANR	4826666	PrimaryExpression	1		4826550	1					
ANR	4826667	IfStatement	if ( upd -> yscan != upd -> yprinter )		4826550	2					
ANR	4826668	Condition	upd -> yscan != upd -> yprinter	7106:7:253538:253564	4826550	0	True				
ANR	4826669	EqualityExpression	upd -> yscan != upd -> yprinter		4826550	0		!=			
ANR	4826670	PtrMemberAccess	upd -> yscan		4826550	0					
ANR	4826671	Identifier	upd		4826550	0					
ANR	4826672	Identifier	yscan		4826550	1					
ANR	4826673	PtrMemberAccess	upd -> yprinter		4826550	1					
ANR	4826674	Identifier	upd		4826550	0					
ANR	4826675	Identifier	yprinter		4826550	1					
ANR	4826676	CompoundStatement		23:36:531:531	4826550	1					
ANR	4826677	ExpressionStatement	step = upd -> yscan - upd -> yprinter	7107:6:253575:253608	4826550	0	True				
ANR	4826678	AssignmentExpression	step = upd -> yscan - upd -> yprinter		4826550	0		=			
ANR	4826679	Identifier	step		4826550	0					
ANR	4826680	AdditiveExpression	upd -> yscan - upd -> yprinter		4826550	1		-			
ANR	4826681	PtrMemberAccess	upd -> yscan		4826550	0					
ANR	4826682	Identifier	upd		4826550	0					
ANR	4826683	Identifier	yscan		4826550	1					
ANR	4826684	PtrMemberAccess	upd -> yprinter		4826550	1					
ANR	4826685	Identifier	upd		4826550	0					
ANR	4826686	Identifier	yprinter		4826550	1					
ANR	4826687	ExpressionStatement	"fputc ( ESC , out )"	7109:6:253617:253639	4826550	1	True				
ANR	4826688	CallExpression	"fputc ( ESC , out )"		4826550	0					
ANR	4826689	Callee	fputc		4826550	0					
ANR	4826690	Identifier	fputc		4826550	0					
ANR	4826691	ArgumentList	ESC		4826550	1					
ANR	4826692	Argument	ESC		4826550	0					
ANR	4826693	Identifier	ESC		4826550	0					
ANR	4826694	Argument	out		4826550	1					
ANR	4826695	Identifier	out		4826550	0					
ANR	4826696	ExpressionStatement	"fputc ( '(' , out )"	7110:6:253647:253669	4826550	2	True				
ANR	4826697	CallExpression	"fputc ( '(' , out )"		4826550	0					
ANR	4826698	Callee	fputc		4826550	0					
ANR	4826699	Identifier	fputc		4826550	0					
ANR	4826700	ArgumentList	'('		4826550	1					
ANR	4826701	Argument	'('		4826550	0					
ANR	4826702	PrimaryExpression	'('		4826550	0					
ANR	4826703	Argument	out		4826550	1					
ANR	4826704	Identifier	out		4826550	0					
ANR	4826705	ExpressionStatement	"fputc ( 'e' , out )"	7111:6:253677:253699	4826550	3	True				
ANR	4826706	CallExpression	"fputc ( 'e' , out )"		4826550	0					
ANR	4826707	Callee	fputc		4826550	0					
ANR	4826708	Identifier	fputc		4826550	0					
ANR	4826709	ArgumentList	'e'		4826550	1					
ANR	4826710	Argument	'e'		4826550	0					
ANR	4826711	PrimaryExpression	'e'		4826550	0					
ANR	4826712	Argument	out		4826550	1					
ANR	4826713	Identifier	out		4826550	0					
ANR	4826714	ExpressionStatement	"fputc ( 2 , out )"	7112:6:253707:253729	4826550	4	True				
ANR	4826715	CallExpression	"fputc ( 2 , out )"		4826550	0					
ANR	4826716	Callee	fputc		4826550	0					
ANR	4826717	Identifier	fputc		4826550	0					
ANR	4826718	ArgumentList	2		4826550	1					
ANR	4826719	Argument	2		4826550	0					
ANR	4826720	PrimaryExpression	2		4826550	0					
ANR	4826721	Argument	out		4826550	1					
ANR	4826722	Identifier	out		4826550	0					
ANR	4826723	ExpressionStatement	"fputc ( 0 , out )"	7113:6:253737:253759	4826550	5	True				
ANR	4826724	CallExpression	"fputc ( 0 , out )"		4826550	0					
ANR	4826725	Callee	fputc		4826550	0					
ANR	4826726	Identifier	fputc		4826550	0					
ANR	4826727	ArgumentList	0		4826550	1					
ANR	4826728	Argument	0		4826550	0					
ANR	4826729	PrimaryExpression	0		4826550	0					
ANR	4826730	Argument	out		4826550	1					
ANR	4826731	Identifier	out		4826550	0					
ANR	4826732	ExpressionStatement	"fputc ( HIGH ( step ) , out )"	7114:6:253767:253789	4826550	6	True				
ANR	4826733	CallExpression	"fputc ( HIGH ( step ) , out )"		4826550	0					
ANR	4826734	Callee	fputc		4826550	0					
ANR	4826735	Identifier	fputc		4826550	0					
ANR	4826736	ArgumentList	HIGH ( step )		4826550	1					
ANR	4826737	Argument	HIGH ( step )		4826550	0					
ANR	4826738	CallExpression	HIGH ( step )		4826550	0					
ANR	4826739	Callee	HIGH		4826550	0					
ANR	4826740	Identifier	HIGH		4826550	0					
ANR	4826741	ArgumentList	step		4826550	1					
ANR	4826742	Argument	step		4826550	0					
ANR	4826743	Identifier	step		4826550	0					
ANR	4826744	Argument	out		4826550	1					
ANR	4826745	Identifier	out		4826550	0					
ANR	4826746	ExpressionStatement	"fputc ( LOW ( step ) , out )"	7115:6:253797:253819	4826550	7	True				
ANR	4826747	CallExpression	"fputc ( LOW ( step ) , out )"		4826550	0					
ANR	4826748	Callee	fputc		4826550	0					
ANR	4826749	Identifier	fputc		4826550	0					
ANR	4826750	ArgumentList	LOW ( step )		4826550	1					
ANR	4826751	Argument	LOW ( step )		4826550	0					
ANR	4826752	CallExpression	LOW ( step )		4826550	0					
ANR	4826753	Callee	LOW		4826550	0					
ANR	4826754	Identifier	LOW		4826550	0					
ANR	4826755	ArgumentList	step		4826550	1					
ANR	4826756	Argument	step		4826550	0					
ANR	4826757	Identifier	step		4826550	0					
ANR	4826758	Argument	out		4826550	1					
ANR	4826759	Identifier	out		4826550	0					
ANR	4826760	ExpressionStatement	upd -> yprinter = upd -> yscan	7117:6:253828:253854	4826550	8	True				
ANR	4826761	AssignmentExpression	upd -> yprinter = upd -> yscan		4826550	0		=			
ANR	4826762	PtrMemberAccess	upd -> yprinter		4826550	0					
ANR	4826763	Identifier	upd		4826550	0					
ANR	4826764	Identifier	yprinter		4826550	1					
ANR	4826765	PtrMemberAccess	upd -> yscan		4826550	1					
ANR	4826766	Identifier	upd		4826550	0					
ANR	4826767	Identifier	yscan		4826550	1					
ANR	4826768	ForStatement	for ( icomp = 0 ; icomp < upd -> ocomp ; ++ icomp )		4826550	3					
ANR	4826769	ForInit	icomp = 0 ;	7120:8:253871:253880	4826550	0	True				
ANR	4826770	AssignmentExpression	icomp = 0		4826550	0		=			
ANR	4826771	Identifier	icomp		4826550	0					
ANR	4826772	PrimaryExpression	0		4826550	1					
ANR	4826773	Condition	icomp < upd -> ocomp	7120:19:253882:253899	4826550	1	True				
ANR	4826774	RelationalExpression	icomp < upd -> ocomp		4826550	0		<			
ANR	4826775	Identifier	icomp		4826550	0					
ANR	4826776	PtrMemberAccess	upd -> ocomp		4826550	1					
ANR	4826777	Identifier	upd		4826550	0					
ANR	4826778	Identifier	ocomp		4826550	1					
ANR	4826779	UnaryExpression	++ icomp	7120:39:253902:253908	4826550	2	True				
ANR	4826780	IncDec	++		4826550	0					
ANR	4826781	Identifier	icomp		4826550	1					
ANR	4826782	CompoundStatement		37:48:875:875	4826550	3					
ANR	4826783	ExpressionStatement	data = scan [ icomp ] . bytes	7123:6:253989:254013	4826550	0	True				
ANR	4826784	AssignmentExpression	data = scan [ icomp ] . bytes		4826550	0		=			
ANR	4826785	Identifier	data		4826550	0					
ANR	4826786	MemberAccess	scan [ icomp ] . bytes		4826550	1					
ANR	4826787	ArrayIndexing	scan [ icomp ]		4826550	0					
ANR	4826788	Identifier	scan		4826550	0					
ANR	4826789	Identifier	icomp		4826550	1					
ANR	4826790	Identifier	bytes		4826550	1					
ANR	4826791	ForStatement	for ( x = 0 ; x <= xend ; ++ x )		4826550	1					
ANR	4826792	ForInit	x = 0 ;	7124:10:254025:254030	4826550	0	True				
ANR	4826793	AssignmentExpression	x = 0		4826550	0		=			
ANR	4826794	Identifier	x		4826550	0					
ANR	4826795	PrimaryExpression	0		4826550	1					
ANR	4826796	Condition	x <= xend	7124:17:254032:254040	4826550	1	True				
ANR	4826797	RelationalExpression	x <= xend		4826550	0		<=			
ANR	4826798	Identifier	x		4826550	0					
ANR	4826799	Identifier	xend		4826550	1					
ANR	4826800	UnaryExpression	++ x	7124:28:254043:254045	4826550	2	True				
ANR	4826801	IncDec	++		4826550	0					
ANR	4826802	Identifier	x		4826550	1					
ANR	4826803	IfStatement	if ( data [ x ] )		4826550	3					
ANR	4826804	Condition	data [ x ]	7124:36:254051:254057	4826550	0	True				
ANR	4826805	ArrayIndexing	data [ x ]		4826550	0					
ANR	4826806	Identifier	data		4826550	0					
ANR	4826807	Identifier	x		4826550	1					
ANR	4826808	BreakStatement	break ;	7124:45:254060:254065	4826550	1	True				
ANR	4826809	IfStatement	if ( x <= xend )		4826550	2					
ANR	4826810	Condition	x <= xend	7127:9:254118:254126	4826550	0	True				
ANR	4826811	RelationalExpression	x <= xend		4826550	0		<=			
ANR	4826812	Identifier	x		4826550	0					
ANR	4826813	Identifier	xend		4826550	1					
ANR	4826814	CompoundStatement		44:20:1093:1093	4826550	1					
ANR	4826815	ExpressionStatement	"ioutbuf = upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"	7128:8:254139:254194	4826550	0	True				
ANR	4826816	AssignmentExpression	"ioutbuf = upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"		4826550	0		=			
ANR	4826817	Identifier	ioutbuf		4826550	0					
ANR	4826818	CallExpression	"upd_rle ( upd -> outbuf , scan [ icomp ] . bytes , xend )"		4826550	1					
ANR	4826819	Callee	upd_rle		4826550	0					
ANR	4826820	Identifier	upd_rle		4826550	0					
ANR	4826821	ArgumentList	upd -> outbuf		4826550	1					
ANR	4826822	Argument	upd -> outbuf		4826550	0					
ANR	4826823	PtrMemberAccess	upd -> outbuf		4826550	0					
ANR	4826824	Identifier	upd		4826550	0					
ANR	4826825	Identifier	outbuf		4826550	1					
ANR	4826826	Argument	scan [ icomp ] . bytes		4826550	1					
ANR	4826827	MemberAccess	scan [ icomp ] . bytes		4826550	0					
ANR	4826828	ArrayIndexing	scan [ icomp ]		4826550	0					
ANR	4826829	Identifier	scan		4826550	0					
ANR	4826830	Identifier	icomp		4826550	1					
ANR	4826831	Identifier	bytes		4826550	1					
ANR	4826832	Argument	xend		4826550	2					
ANR	4826833	Identifier	xend		4826550	0					
ANR	4826834	ElseStatement	else		4826550	0					
ANR	4826835	CompoundStatement		46:13:1173:1173	4826550	0					
ANR	4826836	ExpressionStatement	ioutbuf = 0	7130:8:254219:254230	4826550	0	True				
ANR	4826837	AssignmentExpression	ioutbuf = 0		4826550	0		=			
ANR	4826838	Identifier	ioutbuf		4826550	0					
ANR	4826839	PrimaryExpression	0		4826550	1					
ANR	4826840	ExpressionStatement	ioutbuf1 = ioutbuf + 1	7133:6:254247:254269	4826550	3	True				
ANR	4826841	AssignmentExpression	ioutbuf1 = ioutbuf + 1		4826550	0		=			
ANR	4826842	Identifier	ioutbuf1		4826550	0					
ANR	4826843	AdditiveExpression	ioutbuf + 1		4826550	1		+			
ANR	4826844	Identifier	ioutbuf		4826550	0					
ANR	4826845	PrimaryExpression	1		4826550	1					
ANR	4826846	ExpressionStatement	"fputc ( ESC , out )"	7136:6:254311:254337	4826550	4	True				
ANR	4826847	CallExpression	"fputc ( ESC , out )"		4826550	0					
ANR	4826848	Callee	fputc		4826550	0					
ANR	4826849	Identifier	fputc		4826550	0					
ANR	4826850	ArgumentList	ESC		4826550	1					
ANR	4826851	Argument	ESC		4826550	0					
ANR	4826852	Identifier	ESC		4826550	0					
ANR	4826853	Argument	out		4826550	1					
ANR	4826854	Identifier	out		4826550	0					
ANR	4826855	ExpressionStatement	"fputc ( '(' , out )"	7137:6:254345:254371	4826550	5	True				
ANR	4826856	CallExpression	"fputc ( '(' , out )"		4826550	0					
ANR	4826857	Callee	fputc		4826550	0					
ANR	4826858	Identifier	fputc		4826550	0					
ANR	4826859	ArgumentList	'('		4826550	1					
ANR	4826860	Argument	'('		4826550	0					
ANR	4826861	PrimaryExpression	'('		4826550	0					
ANR	4826862	Argument	out		4826550	1					
ANR	4826863	Identifier	out		4826550	0					
ANR	4826864	ExpressionStatement	"fputc ( 'A' , out )"	7138:6:254379:254405	4826550	6	True				
ANR	4826865	CallExpression	"fputc ( 'A' , out )"		4826550	0					
ANR	4826866	Callee	fputc		4826550	0					
ANR	4826867	Identifier	fputc		4826550	0					
ANR	4826868	ArgumentList	'A'		4826550	1					
ANR	4826869	Argument	'A'		4826550	0					
ANR	4826870	PrimaryExpression	'A'		4826550	0					
ANR	4826871	Argument	out		4826550	1					
ANR	4826872	Identifier	out		4826550	0					
ANR	4826873	ExpressionStatement	"fputc ( LOW ( ioutbuf1 ) , out )"	7139:6:254413:254439	4826550	7	True				
ANR	4826874	CallExpression	"fputc ( LOW ( ioutbuf1 ) , out )"		4826550	0					
ANR	4826875	Callee	fputc		4826550	0					
ANR	4826876	Identifier	fputc		4826550	0					
ANR	4826877	ArgumentList	LOW ( ioutbuf1 )		4826550	1					
ANR	4826878	Argument	LOW ( ioutbuf1 )		4826550	0					
ANR	4826879	CallExpression	LOW ( ioutbuf1 )		4826550	0					
ANR	4826880	Callee	LOW		4826550	0					
ANR	4826881	Identifier	LOW		4826550	0					
ANR	4826882	ArgumentList	ioutbuf1		4826550	1					
ANR	4826883	Argument	ioutbuf1		4826550	0					
ANR	4826884	Identifier	ioutbuf1		4826550	0					
ANR	4826885	Argument	out		4826550	1					
ANR	4826886	Identifier	out		4826550	0					
ANR	4826887	ExpressionStatement	"fputc ( HIGH ( ioutbuf1 ) , out )"	7140:6:254447:254473	4826550	8	True				
ANR	4826888	CallExpression	"fputc ( HIGH ( ioutbuf1 ) , out )"		4826550	0					
ANR	4826889	Callee	fputc		4826550	0					
ANR	4826890	Identifier	fputc		4826550	0					
ANR	4826891	ArgumentList	HIGH ( ioutbuf1 )		4826550	1					
ANR	4826892	Argument	HIGH ( ioutbuf1 )		4826550	0					
ANR	4826893	CallExpression	HIGH ( ioutbuf1 )		4826550	0					
ANR	4826894	Callee	HIGH		4826550	0					
ANR	4826895	Identifier	HIGH		4826550	0					
ANR	4826896	ArgumentList	ioutbuf1		4826550	1					
ANR	4826897	Argument	ioutbuf1		4826550	0					
ANR	4826898	Identifier	ioutbuf1		4826550	0					
ANR	4826899	Argument	out		4826550	1					
ANR	4826900	Identifier	out		4826550	0					
ANR	4826901	SwitchStatement	switch ( upd -> ocomp )		4826550	9					
ANR	4826902	Condition	upd -> ocomp	7141:13:254488:254497	4826550	0	True				
ANR	4826903	PtrMemberAccess	upd -> ocomp		4826550	0					
ANR	4826904	Identifier	upd		4826550	0					
ANR	4826905	Identifier	ocomp		4826550	1					
ANR	4826906	CompoundStatement		58:25:1464:1464	4826550	1					
ANR	4826907	Label	case 1 :	7142:8:254510:254516	4826550	0	True				
ANR	4826908	ExpressionStatement	"fputc ( 'K' , out )"	7142:17:254519:254533	4826550	1	True				
ANR	4826909	CallExpression	"fputc ( 'K' , out )"		4826550	0					
ANR	4826910	Callee	fputc		4826550	0					
ANR	4826911	Identifier	fputc		4826550	0					
ANR	4826912	ArgumentList	'K'		4826550	1					
ANR	4826913	Argument	'K'		4826550	0					
ANR	4826914	PrimaryExpression	'K'		4826550	0					
ANR	4826915	Argument	out		4826550	1					
ANR	4826916	Identifier	out		4826550	0					
ANR	4826917	BreakStatement	break ;	7142:33:254535:254540	4826550	2	True				
ANR	4826918	Label	case 3 :	7143:8:254550:254556	4826550	3	True				
ANR	4826919	Label	case 4 :	7144:8:254566:254572	4826550	4	True				
ANR	4826920	ExpressionStatement	"fputc ( ""YMCK"" [ icomp ] , out )"	7144:17:254575:254599	4826550	5	True				
ANR	4826921	CallExpression	"fputc ( ""YMCK"" [ icomp ] , out )"		4826550	0					
ANR	4826922	Callee	fputc		4826550	0					
ANR	4826923	Identifier	fputc		4826550	0					
ANR	4826924	ArgumentList	"""YMCK"" [ icomp ]"		4826550	1					
ANR	4826925	Argument	"""YMCK"" [ icomp ]"		4826550	0					
ANR	4826926	ArrayIndexing	"""YMCK"" [ icomp ]"		4826550	0					
ANR	4826927	PrimaryExpression	"""YMCK"""		4826550	0					
ANR	4826928	Identifier	icomp		4826550	1					
ANR	4826929	Argument	out		4826550	1					
ANR	4826930	Identifier	out		4826550	0					
ANR	4826931	BreakStatement	break ;	7144:43:254601:254606	4826550	6	True				
ANR	4826932	Label	default :	7151:8:254812:254819	4826550	7	True				
ANR	4826933	Identifier	default		4826550	0					
ANR	4826934	ExpressionStatement	"fputc ( 'K' , out )"	7151:17:254821:254835	4826550	8	True				
ANR	4826935	CallExpression	"fputc ( 'K' , out )"		4826550	0					
ANR	4826936	Callee	fputc		4826550	0					
ANR	4826937	Identifier	fputc		4826550	0					
ANR	4826938	ArgumentList	'K'		4826550	1					
ANR	4826939	Argument	'K'		4826550	0					
ANR	4826940	PrimaryExpression	'K'		4826550	0					
ANR	4826941	Argument	out		4826550	1					
ANR	4826942	Identifier	out		4826550	0					
ANR	4826943	BreakStatement	break ;	7151:33:254837:254842	4826550	9	True				
ANR	4826944	ExpressionStatement	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"	7154:6:254859:254895	4826550	10	True				
ANR	4826945	CallExpression	"fwrite ( upd -> outbuf , 1 , ioutbuf , out )"		4826550	0					
ANR	4826946	Callee	fwrite		4826550	0					
ANR	4826947	Identifier	fwrite		4826550	0					
ANR	4826948	ArgumentList	upd -> outbuf		4826550	1					
ANR	4826949	Argument	upd -> outbuf		4826550	0					
ANR	4826950	PtrMemberAccess	upd -> outbuf		4826550	0					
ANR	4826951	Identifier	upd		4826550	0					
ANR	4826952	Identifier	outbuf		4826550	1					
ANR	4826953	Argument	1		4826550	1					
ANR	4826954	PrimaryExpression	1		4826550	0					
ANR	4826955	Argument	ioutbuf		4826550	2					
ANR	4826956	Identifier	ioutbuf		4826550	0					
ANR	4826957	Argument	out		4826550	3					
ANR	4826958	Identifier	out		4826550	0					
ANR	4826959	ExpressionStatement	"fputc ( CR , out )"	7156:6:254904:254930	4826550	11	True				
ANR	4826960	CallExpression	"fputc ( CR , out )"		4826550	0					
ANR	4826961	Callee	fputc		4826550	0					
ANR	4826962	Identifier	fputc		4826550	0					
ANR	4826963	ArgumentList	CR		4826550	1					
ANR	4826964	Argument	CR		4826550	0					
ANR	4826965	Identifier	CR		4826550	0					
ANR	4826966	Argument	out		4826550	1					
ANR	4826967	Identifier	out		4826550	0					
ANR	4826968	ExpressionStatement	"fputc ( ESC , out )"	7160:4:254986:255008	4826550	4	True				
ANR	4826969	CallExpression	"fputc ( ESC , out )"		4826550	0					
ANR	4826970	Callee	fputc		4826550	0					
ANR	4826971	Identifier	fputc		4826550	0					
ANR	4826972	ArgumentList	ESC		4826550	1					
ANR	4826973	Argument	ESC		4826550	0					
ANR	4826974	Identifier	ESC		4826550	0					
ANR	4826975	Argument	out		4826550	1					
ANR	4826976	Identifier	out		4826550	0					
ANR	4826977	ExpressionStatement	"fputc ( '(' , out )"	7161:4:255014:255036	4826550	5	True				
ANR	4826978	CallExpression	"fputc ( '(' , out )"		4826550	0					
ANR	4826979	Callee	fputc		4826550	0					
ANR	4826980	Identifier	fputc		4826550	0					
ANR	4826981	ArgumentList	'('		4826550	1					
ANR	4826982	Argument	'('		4826550	0					
ANR	4826983	PrimaryExpression	'('		4826550	0					
ANR	4826984	Argument	out		4826550	1					
ANR	4826985	Identifier	out		4826550	0					
ANR	4826986	ExpressionStatement	"fputc ( 'e' , out )"	7162:4:255042:255064	4826550	6	True				
ANR	4826987	CallExpression	"fputc ( 'e' , out )"		4826550	0					
ANR	4826988	Callee	fputc		4826550	0					
ANR	4826989	Identifier	fputc		4826550	0					
ANR	4826990	ArgumentList	'e'		4826550	1					
ANR	4826991	Argument	'e'		4826550	0					
ANR	4826992	PrimaryExpression	'e'		4826550	0					
ANR	4826993	Argument	out		4826550	1					
ANR	4826994	Identifier	out		4826550	0					
ANR	4826995	ExpressionStatement	"fputc ( 2 , out )"	7163:4:255070:255092	4826550	7	True				
ANR	4826996	CallExpression	"fputc ( 2 , out )"		4826550	0					
ANR	4826997	Callee	fputc		4826550	0					
ANR	4826998	Identifier	fputc		4826550	0					
ANR	4826999	ArgumentList	2		4826550	1					
ANR	4827000	Argument	2		4826550	0					
ANR	4827001	PrimaryExpression	2		4826550	0					
ANR	4827002	Argument	out		4826550	1					
ANR	4827003	Identifier	out		4826550	0					
ANR	4827004	ExpressionStatement	"fputc ( 0 , out )"	7164:4:255098:255120	4826550	8	True				
ANR	4827005	CallExpression	"fputc ( 0 , out )"		4826550	0					
ANR	4827006	Callee	fputc		4826550	0					
ANR	4827007	Identifier	fputc		4826550	0					
ANR	4827008	ArgumentList	0		4826550	1					
ANR	4827009	Argument	0		4826550	0					
ANR	4827010	PrimaryExpression	0		4826550	0					
ANR	4827011	Argument	out		4826550	1					
ANR	4827012	Identifier	out		4826550	0					
ANR	4827013	ExpressionStatement	"fputc ( HIGH ( 1 ) , out )"	7165:4:255126:255148	4826550	9	True				
ANR	4827014	CallExpression	"fputc ( HIGH ( 1 ) , out )"		4826550	0					
ANR	4827015	Callee	fputc		4826550	0					
ANR	4827016	Identifier	fputc		4826550	0					
ANR	4827017	ArgumentList	HIGH ( 1 )		4826550	1					
ANR	4827018	Argument	HIGH ( 1 )		4826550	0					
ANR	4827019	CallExpression	HIGH ( 1 )		4826550	0					
ANR	4827020	Callee	HIGH		4826550	0					
ANR	4827021	Identifier	HIGH		4826550	0					
ANR	4827022	ArgumentList	1		4826550	1					
ANR	4827023	Argument	1		4826550	0					
ANR	4827024	PrimaryExpression	1		4826550	0					
ANR	4827025	Argument	out		4826550	1					
ANR	4827026	Identifier	out		4826550	0					
ANR	4827027	ExpressionStatement	"fputc ( LOW ( 1 ) , out )"	7166:4:255154:255176	4826550	10	True				
ANR	4827028	CallExpression	"fputc ( LOW ( 1 ) , out )"		4826550	0					
ANR	4827029	Callee	fputc		4826550	0					
ANR	4827030	Identifier	fputc		4826550	0					
ANR	4827031	ArgumentList	LOW ( 1 )		4826550	1					
ANR	4827032	Argument	LOW ( 1 )		4826550	0					
ANR	4827033	CallExpression	LOW ( 1 )		4826550	0					
ANR	4827034	Callee	LOW		4826550	0					
ANR	4827035	Identifier	LOW		4826550	0					
ANR	4827036	ArgumentList	1		4826550	1					
ANR	4827037	Argument	1		4826550	0					
ANR	4827038	PrimaryExpression	1		4826550	0					
ANR	4827039	Argument	out		4826550	1					
ANR	4827040	Identifier	out		4826550	0					
ANR	4827041	ExpressionStatement	upd -> yprinter += 1	7168:4:255183:255201	4826550	11	True				
ANR	4827042	AssignmentExpression	upd -> yprinter += 1		4826550	0		+=			
ANR	4827043	PtrMemberAccess	upd -> yprinter		4826550	0					
ANR	4827044	Identifier	upd		4826550	0					
ANR	4827045	Identifier	yprinter		4826550	1					
ANR	4827046	PrimaryExpression	1		4826550	1					
ANR	4827047	ExpressionStatement	upd -> yscan += 1	7173:2:255239:255254	4826550	6	True				
ANR	4827048	AssignmentExpression	upd -> yscan += 1		4826550	0		+=			
ANR	4827049	PtrMemberAccess	upd -> yscan		4826550	0					
ANR	4827050	Identifier	upd		4826550	0					
ANR	4827051	Identifier	yscan		4826550	1					
ANR	4827052	PrimaryExpression	1		4826550	1					
ANR	4827053	ReturnStatement	return 0 ;	7175:2:255259:255267	4826550	7	True				
ANR	4827054	PrimaryExpression	0		4826550	0					
ANR	4827055	ReturnType	static int		4826550	1					
ANR	4827056	Identifier	upd_wrtcanon		4826550	2					
ANR	4827057	ParameterList	"upd_p upd , FILE * out"		4826550	3					
ANR	4827058	Parameter	upd_p upd	7083:13:253013:253021	4826550	0	True				
ANR	4827059	ParameterType	upd_p		4826550	0					
ANR	4827060	Identifier	upd		4826550	1					
ANR	4827061	Parameter	FILE * out	7083:24:253024:253032	4826550	1	True				
ANR	4827062	ParameterType	FILE *		4826550	0					
ANR	4827063	Identifier	out		4826550	1					
ANR	4827064	CFGEntryNode	ENTRY		4826550		True				
ANR	4827065	CFGExitNode	EXIT		4826550		True				
ANR	4827066	Symbol	* x		4826550						
ANR	4827067	Symbol	HIGH		4826550						
ANR	4827068	Symbol	ioutbuf1		4826550						
ANR	4827069	Symbol	data		4826550						
ANR	4827070	Symbol	* upd -> yscan		4826550						
ANR	4827071	Symbol	scan		4826550						
ANR	4827072	Symbol	icomp		4826550						
ANR	4827073	Symbol	scan [ icomp ] . bytes		4826550						
ANR	4827074	Symbol	out		4826550						
ANR	4827075	Symbol	upd -> yscan		4826550						
ANR	4827076	Symbol	upd_rle		4826550						
ANR	4827077	Symbol	* upd		4826550						
ANR	4827078	Symbol	ESC		4826550						
ANR	4827079	Symbol	* icomp		4826550						
ANR	4827080	Symbol	* scan		4826550						
ANR	4827081	Symbol	* upd -> scnmsk		4826550						
ANR	4827082	Symbol	xend		4826550						
ANR	4827083	Symbol	upd -> ocomp		4826550						
ANR	4827084	Symbol	upd -> nbytes		4826550						
ANR	4827085	Symbol	upd -> scnmsk		4826550						
ANR	4827086	Symbol	* upd -> scnbuf		4826550						
ANR	4827087	Symbol	upd		4826550						
ANR	4827088	Symbol	CR		4826550						
ANR	4827089	Symbol	upd -> yprinter		4826550						
ANR	4827090	Symbol	ioutbuf		4826550						
ANR	4827091	Symbol	upd -> scnbuf		4826550						
ANR	4827092	Symbol	LOW		4826550						
ANR	4827093	Symbol	x		4826550						
ANR	4827094	Symbol	step		4826550						
ANR	4827095	Symbol	upd -> outbuf		4826550						
ANR	4827096	Symbol	* * upd		4826550						
ANR	4827097	Symbol	* data		4826550						
ANR	4827098	Function	upd_pxlfwd	7234:0:257318:258155							
ANR	4827099	FunctionDef	upd_pxlfwd (upd_p upd)		4827098	0					
ANR	4827100	CompoundStatement		7236:0:257356:258155	4827098	0					
ANR	4827101	IfStatement	if ( ! ( upd -> pxlptr = upd -> gsscan ) )		4827098	0					
ANR	4827102	Condition	! ( upd -> pxlptr = upd -> gsscan )	7237:6:257364:257391	4827098	0	True				
ANR	4827103	UnaryOperationExpression	! ( upd -> pxlptr = upd -> gsscan )		4827098	0					
ANR	4827104	UnaryOperator	!		4827098	0					
ANR	4827105	AssignmentExpression	upd -> pxlptr = upd -> gsscan		4827098	1		=			
ANR	4827106	PtrMemberAccess	upd -> pxlptr		4827098	0					
ANR	4827107	Identifier	upd		4827098	0					
ANR	4827108	Identifier	pxlptr		4827098	1					
ANR	4827109	PtrMemberAccess	upd -> gsscan		4827098	1					
ANR	4827110	Identifier	upd		4827098	0					
ANR	4827111	Identifier	gsscan		4827098	1					
ANR	4827112	CompoundStatement		2:36:37:37	4827098	1					
ANR	4827113	ExpressionStatement	upd -> pxlget = upd_pxlgetnix	7239:6:257403:257430	4827098	0	True				
ANR	4827114	AssignmentExpression	upd -> pxlget = upd_pxlgetnix		4827098	0		=			
ANR	4827115	PtrMemberAccess	upd -> pxlget		4827098	0					
ANR	4827116	Identifier	upd		4827098	0					
ANR	4827117	Identifier	pxlget		4827098	1					
ANR	4827118	Identifier	upd_pxlgetnix		4827098	1					
ANR	4827119	ElseStatement	else		4827098	0					
ANR	4827120	CompoundStatement		6:10:86:86	4827098	0					
ANR	4827121	SwitchStatement	switch ( upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )		4827098	0					
ANR	4827122	Condition	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]	7242:13:257458:257490	4827098	0	True				
ANR	4827123	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		4827098	0					
ANR	4827124	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		4827098	0					
ANR	4827125	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		4827098	0					
ANR	4827126	PtrMemberAccess	upd -> int_a		4827098	0					
ANR	4827127	Identifier	upd		4827098	0					
ANR	4827128	Identifier	int_a		4827098	1					
ANR	4827129	Identifier	IA_COLOR_INFO		4827098	1					
ANR	4827130	Identifier	data		4827098	1					
ANR	4827131	PrimaryExpression	1		4827098	1					
ANR	4827132	CompoundStatement		7:48:136:136	4827098	1					
ANR	4827133	Label	case 1 :	7243:9:257504:257511	4827098	0	True				
ANR	4827134	ExpressionStatement	upd -> pxlget = upd_pxlget1f1	7243:18:257513:257540	4827098	1	True				
ANR	4827135	AssignmentExpression	upd -> pxlget = upd_pxlget1f1		4827098	0		=			
ANR	4827136	PtrMemberAccess	upd -> pxlget		4827098	0					
ANR	4827137	Identifier	upd		4827098	0					
ANR	4827138	Identifier	pxlget		4827098	1					
ANR	4827139	Identifier	upd_pxlget1f1		4827098	1					
ANR	4827140	BreakStatement	break ;	7243:47:257542:257547	4827098	2	True				
ANR	4827141	Label	case 2 :	7244:9:257558:257565	4827098	3	True				
ANR	4827142	ExpressionStatement	upd -> pxlget = upd_pxlget2f1	7244:18:257567:257594	4827098	4	True				
ANR	4827143	AssignmentExpression	upd -> pxlget = upd_pxlget2f1		4827098	0		=			
ANR	4827144	PtrMemberAccess	upd -> pxlget		4827098	0					
ANR	4827145	Identifier	upd		4827098	0					
ANR	4827146	Identifier	pxlget		4827098	1					
ANR	4827147	Identifier	upd_pxlget2f1		4827098	1					
ANR	4827148	BreakStatement	break ;	7244:47:257596:257601	4827098	5	True				
ANR	4827149	Label	case 4 :	7245:9:257612:257619	4827098	6	True				
ANR	4827150	ExpressionStatement	upd -> pxlget = upd_pxlget4f1	7245:18:257621:257648	4827098	7	True				
ANR	4827151	AssignmentExpression	upd -> pxlget = upd_pxlget4f1		4827098	0		=			
ANR	4827152	PtrMemberAccess	upd -> pxlget		4827098	0					
ANR	4827153	Identifier	upd		4827098	0					
ANR	4827154	Identifier	pxlget		4827098	1					
ANR	4827155	Identifier	upd_pxlget4f1		4827098	1					
ANR	4827156	BreakStatement	break ;	7245:47:257650:257655	4827098	8	True				
ANR	4827157	Label	case 8 :	7246:9:257666:257673	4827098	9	True				
ANR	4827158	ExpressionStatement	upd -> pxlget = upd_pxlget8f	7246:18:257675:257701	4827098	10	True				
ANR	4827159	AssignmentExpression	upd -> pxlget = upd_pxlget8f		4827098	0		=			
ANR	4827160	PtrMemberAccess	upd -> pxlget		4827098	0					
ANR	4827161	Identifier	upd		4827098	0					
ANR	4827162	Identifier	pxlget		4827098	1					
ANR	4827163	Identifier	upd_pxlget8f		4827098	1					
ANR	4827164	BreakStatement	break ;	7246:47:257704:257709	4827098	11	True				
ANR	4827165	Label	case 16 :	7247:9:257720:257727	4827098	12	True				
ANR	4827166	ExpressionStatement	upd -> pxlget = upd_pxlget16f	7247:18:257729:257756	4827098	13	True				
ANR	4827167	AssignmentExpression	upd -> pxlget = upd_pxlget16f		4827098	0		=			
ANR	4827168	PtrMemberAccess	upd -> pxlget		4827098	0					
ANR	4827169	Identifier	upd		4827098	0					
ANR	4827170	Identifier	pxlget		4827098	1					
ANR	4827171	Identifier	upd_pxlget16f		4827098	1					
ANR	4827172	BreakStatement	break ;	7247:47:257758:257763	4827098	14	True				
ANR	4827173	Label	case 24 :	7248:9:257774:257781	4827098	15	True				
ANR	4827174	ExpressionStatement	upd -> pxlget = upd_pxlget24f	7248:18:257783:257810	4827098	16	True				
ANR	4827175	AssignmentExpression	upd -> pxlget = upd_pxlget24f		4827098	0		=			
ANR	4827176	PtrMemberAccess	upd -> pxlget		4827098	0					
ANR	4827177	Identifier	upd		4827098	0					
ANR	4827178	Identifier	pxlget		4827098	1					
ANR	4827179	Identifier	upd_pxlget24f		4827098	1					
ANR	4827180	BreakStatement	break ;	7248:47:257812:257817	4827098	17	True				
ANR	4827181	Label	case 32 :	7249:9:257828:257835	4827098	18	True				
ANR	4827182	ExpressionStatement	upd -> pxlget = upd_pxlget32f	7249:18:257837:257864	4827098	19	True				
ANR	4827183	AssignmentExpression	upd -> pxlget = upd_pxlget32f		4827098	0		=			
ANR	4827184	PtrMemberAccess	upd -> pxlget		4827098	0					
ANR	4827185	Identifier	upd		4827098	0					
ANR	4827186	Identifier	pxlget		4827098	1					
ANR	4827187	Identifier	upd_pxlget32f		4827098	1					
ANR	4827188	BreakStatement	break ;	7249:47:257866:257871	4827098	20	True				
ANR	4827189	Label	default :	7250:9:257882:257889	4827098	21	True				
ANR	4827190	Identifier	default		4827098	0					
ANR	4827191	ExpressionStatement	"errprintf ( upd -> memory , ""upd_pxlfwd: unsupported depth (%d)\\n"" , upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )"	7252:11:257933:258051	4827098	22	True				
ANR	4827192	CallExpression	"errprintf ( upd -> memory , ""upd_pxlfwd: unsupported depth (%d)\\n"" , upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )"		4827098	0					
ANR	4827193	Callee	errprintf		4827098	0					
ANR	4827194	Identifier	errprintf		4827098	0					
ANR	4827195	ArgumentList	upd -> memory		4827098	1					
ANR	4827196	Argument	upd -> memory		4827098	0					
ANR	4827197	PtrMemberAccess	upd -> memory		4827098	0					
ANR	4827198	Identifier	upd		4827098	0					
ANR	4827199	Identifier	memory		4827098	1					
ANR	4827200	Argument	"""upd_pxlfwd: unsupported depth (%d)\\n"""		4827098	1					
ANR	4827201	PrimaryExpression	"""upd_pxlfwd: unsupported depth (%d)\\n"""		4827098	0					
ANR	4827202	Argument	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		4827098	2					
ANR	4827203	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		4827098	0					
ANR	4827204	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		4827098	0					
ANR	4827205	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		4827098	0					
ANR	4827206	PtrMemberAccess	upd -> int_a		4827098	0					
ANR	4827207	Identifier	upd		4827098	0					
ANR	4827208	Identifier	int_a		4827098	1					
ANR	4827209	Identifier	IA_COLOR_INFO		4827098	1					
ANR	4827210	Identifier	data		4827098	1					
ANR	4827211	PrimaryExpression	1		4827098	1					
ANR	4827212	ExpressionStatement	upd -> pxlget = upd_pxlgetnix	7255:11:258071:258098	4827098	23	True				
ANR	4827213	AssignmentExpression	upd -> pxlget = upd_pxlgetnix		4827098	0		=			
ANR	4827214	PtrMemberAccess	upd -> pxlget		4827098	0					
ANR	4827215	Identifier	upd		4827098	0					
ANR	4827216	Identifier	pxlget		4827098	1					
ANR	4827217	Identifier	upd_pxlgetnix		4827098	1					
ANR	4827218	BreakStatement	break ;	7256:11:258111:258116	4827098	24	True				
ANR	4827219	ReturnStatement	return ( uint32_t ) 0 ;	7259:3:258134:258153	4827098	1	True				
ANR	4827220	CastExpression	( uint32_t ) 0		4827098	0					
ANR	4827221	CastTarget	uint32_t		4827098	0					
ANR	4827222	PrimaryExpression	0		4827098	1					
ANR	4827223	ReturnType	static uint32_t		4827098	1					
ANR	4827224	Identifier	upd_pxlfwd		4827098	2					
ANR	4827225	ParameterList	upd_p upd		4827098	3					
ANR	4827226	Parameter	upd_p upd	7235:11:257345:257353	4827098	0	True				
ANR	4827227	ParameterType	upd_p		4827098	0					
ANR	4827228	Identifier	upd		4827098	1					
ANR	4827229	CFGEntryNode	ENTRY		4827098		True				
ANR	4827230	CFGExitNode	EXIT		4827098		True				
ANR	4827231	Symbol	upd -> pxlptr		4827098						
ANR	4827232	Symbol	upd_pxlget4f1		4827098						
ANR	4827233	Symbol	* upd -> int_a		4827098						
ANR	4827234	Symbol	upd -> memory		4827098						
ANR	4827235	Symbol	upd -> gsscan		4827098						
ANR	4827236	Symbol	upd -> int_a [ IA_COLOR_INFO ] . data		4827098						
ANR	4827237	Symbol	upd_pxlget2f1		4827098						
ANR	4827238	Symbol	upd_pxlget1f1		4827098						
ANR	4827239	Symbol	* * * upd		4827098						
ANR	4827240	Symbol	upd		4827098						
ANR	4827241	Symbol	upd -> pxlget		4827098						
ANR	4827242	Symbol	upd_pxlget32f		4827098						
ANR	4827243	Symbol	* * IA_COLOR_INFO		4827098						
ANR	4827244	Symbol	upd_pxlget24f		4827098						
ANR	4827245	Symbol	IA_COLOR_INFO		4827098						
ANR	4827246	Symbol	upd_pxlgetnix		4827098						
ANR	4827247	Symbol	* IA_COLOR_INFO		4827098						
ANR	4827248	Symbol	upd_pxlget16f		4827098						
ANR	4827249	Symbol	* * upd -> int_a		4827098						
ANR	4827250	Symbol	* upd -> int_a [ IA_COLOR_INFO ] . data		4827098						
ANR	4827251	Symbol	* upd		4827098						
ANR	4827252	Symbol	upd -> int_a		4827098						
ANR	4827253	Symbol	upd_pxlget8f		4827098						
ANR	4827254	Symbol	* * upd		4827098						
ANR	4827255	Function	upd_pxlget1f1	7264:0:258179:258317							
ANR	4827256	FunctionDef	upd_pxlget1f1 (upd_p upd)		4827255	0					
ANR	4827257	CompoundStatement		7266:0:258220:258317	4827255	0					
ANR	4827258	ExpressionStatement	upd -> pxlget = upd_pxlget1f2	7267:3:258225:258252	4827255	0	True				
ANR	4827259	AssignmentExpression	upd -> pxlget = upd_pxlget1f2		4827255	0		=			
ANR	4827260	PtrMemberAccess	upd -> pxlget		4827255	0					
ANR	4827261	Identifier	upd		4827255	0					
ANR	4827262	Identifier	pxlget		4827255	1					
ANR	4827263	Identifier	upd_pxlget1f2		4827255	1					
ANR	4827264	ReturnStatement	return * upd -> pxlptr & 0x80 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7268:3:258257:258315	4827255	1	True				
ANR	4827265	ConditionalExpression	* upd -> pxlptr & 0x80 ? ( uint32_t ) 1 : ( uint32_t ) 0		4827255	0					
ANR	4827266	Condition	* upd -> pxlptr & 0x80		4827255	0					
ANR	4827267	BitAndExpression	* upd -> pxlptr & 0x80		4827255	0		&			
ANR	4827268	UnaryOperationExpression	* upd -> pxlptr		4827255	0					
ANR	4827269	UnaryOperator	*		4827255	0					
ANR	4827270	PtrMemberAccess	upd -> pxlptr		4827255	1					
ANR	4827271	Identifier	upd		4827255	0					
ANR	4827272	Identifier	pxlptr		4827255	1					
ANR	4827273	PrimaryExpression	0x80		4827255	1					
ANR	4827274	CastExpression	( uint32_t ) 1		4827255	1					
ANR	4827275	CastTarget	uint32_t		4827255	0					
ANR	4827276	PrimaryExpression	1		4827255	1					
ANR	4827277	CastExpression	( uint32_t ) 0		4827255	2					
ANR	4827278	CastTarget	uint32_t		4827255	0					
ANR	4827279	PrimaryExpression	0		4827255	1					
ANR	4827280	ReturnType	static uint32_t		4827255	1					
ANR	4827281	Identifier	upd_pxlget1f1		4827255	2					
ANR	4827282	ParameterList	upd_p upd		4827255	3					
ANR	4827283	Parameter	upd_p upd	7265:14:258209:258217	4827255	0	True				
ANR	4827284	ParameterType	upd_p		4827255	0					
ANR	4827285	Identifier	upd		4827255	1					
ANR	4827286	CFGEntryNode	ENTRY		4827255		True				
ANR	4827287	CFGExitNode	EXIT		4827255		True				
ANR	4827288	Symbol	upd -> pxlptr		4827255						
ANR	4827289	Symbol	upd_pxlget1f2		4827255						
ANR	4827290	Symbol	* upd		4827255						
ANR	4827291	Symbol	* upd -> pxlptr		4827255						
ANR	4827292	Symbol	upd		4827255						
ANR	4827293	Symbol	upd -> pxlget		4827255						
ANR	4827294	Symbol	* * upd		4827255						
ANR	4827295	Function	upd_pxlget1f2	7271:0:258320:258458							
ANR	4827296	FunctionDef	upd_pxlget1f2 (upd_p upd)		4827295	0					
ANR	4827297	CompoundStatement		7273:0:258361:258458	4827295	0					
ANR	4827298	ExpressionStatement	upd -> pxlget = upd_pxlget1f3	7274:3:258366:258393	4827295	0	True				
ANR	4827299	AssignmentExpression	upd -> pxlget = upd_pxlget1f3		4827295	0		=			
ANR	4827300	PtrMemberAccess	upd -> pxlget		4827295	0					
ANR	4827301	Identifier	upd		4827295	0					
ANR	4827302	Identifier	pxlget		4827295	1					
ANR	4827303	Identifier	upd_pxlget1f3		4827295	1					
ANR	4827304	ReturnStatement	return * upd -> pxlptr & 0x40 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7275:3:258398:258456	4827295	1	True				
ANR	4827305	ConditionalExpression	* upd -> pxlptr & 0x40 ? ( uint32_t ) 1 : ( uint32_t ) 0		4827295	0					
ANR	4827306	Condition	* upd -> pxlptr & 0x40		4827295	0					
ANR	4827307	BitAndExpression	* upd -> pxlptr & 0x40		4827295	0		&			
ANR	4827308	UnaryOperationExpression	* upd -> pxlptr		4827295	0					
ANR	4827309	UnaryOperator	*		4827295	0					
ANR	4827310	PtrMemberAccess	upd -> pxlptr		4827295	1					
ANR	4827311	Identifier	upd		4827295	0					
ANR	4827312	Identifier	pxlptr		4827295	1					
ANR	4827313	PrimaryExpression	0x40		4827295	1					
ANR	4827314	CastExpression	( uint32_t ) 1		4827295	1					
ANR	4827315	CastTarget	uint32_t		4827295	0					
ANR	4827316	PrimaryExpression	1		4827295	1					
ANR	4827317	CastExpression	( uint32_t ) 0		4827295	2					
ANR	4827318	CastTarget	uint32_t		4827295	0					
ANR	4827319	PrimaryExpression	0		4827295	1					
ANR	4827320	ReturnType	static uint32_t		4827295	1					
ANR	4827321	Identifier	upd_pxlget1f2		4827295	2					
ANR	4827322	ParameterList	upd_p upd		4827295	3					
ANR	4827323	Parameter	upd_p upd	7272:14:258350:258358	4827295	0	True				
ANR	4827324	ParameterType	upd_p		4827295	0					
ANR	4827325	Identifier	upd		4827295	1					
ANR	4827326	CFGEntryNode	ENTRY		4827295		True				
ANR	4827327	CFGExitNode	EXIT		4827295		True				
ANR	4827328	Symbol	upd -> pxlptr		4827295						
ANR	4827329	Symbol	upd_pxlget1f3		4827295						
ANR	4827330	Symbol	* upd		4827295						
ANR	4827331	Symbol	* upd -> pxlptr		4827295						
ANR	4827332	Symbol	upd		4827295						
ANR	4827333	Symbol	upd -> pxlget		4827295						
ANR	4827334	Symbol	* * upd		4827295						
ANR	4827335	Function	upd_pxlget1f3	7278:0:258461:258599							
ANR	4827336	FunctionDef	upd_pxlget1f3 (upd_p upd)		4827335	0					
ANR	4827337	CompoundStatement		7280:0:258502:258599	4827335	0					
ANR	4827338	ExpressionStatement	upd -> pxlget = upd_pxlget1f4	7281:3:258507:258534	4827335	0	True				
ANR	4827339	AssignmentExpression	upd -> pxlget = upd_pxlget1f4		4827335	0		=			
ANR	4827340	PtrMemberAccess	upd -> pxlget		4827335	0					
ANR	4827341	Identifier	upd		4827335	0					
ANR	4827342	Identifier	pxlget		4827335	1					
ANR	4827343	Identifier	upd_pxlget1f4		4827335	1					
ANR	4827344	ReturnStatement	return * upd -> pxlptr & 0x20 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7282:3:258539:258597	4827335	1	True				
ANR	4827345	ConditionalExpression	* upd -> pxlptr & 0x20 ? ( uint32_t ) 1 : ( uint32_t ) 0		4827335	0					
ANR	4827346	Condition	* upd -> pxlptr & 0x20		4827335	0					
ANR	4827347	BitAndExpression	* upd -> pxlptr & 0x20		4827335	0		&			
ANR	4827348	UnaryOperationExpression	* upd -> pxlptr		4827335	0					
ANR	4827349	UnaryOperator	*		4827335	0					
ANR	4827350	PtrMemberAccess	upd -> pxlptr		4827335	1					
ANR	4827351	Identifier	upd		4827335	0					
ANR	4827352	Identifier	pxlptr		4827335	1					
ANR	4827353	PrimaryExpression	0x20		4827335	1					
ANR	4827354	CastExpression	( uint32_t ) 1		4827335	1					
ANR	4827355	CastTarget	uint32_t		4827335	0					
ANR	4827356	PrimaryExpression	1		4827335	1					
ANR	4827357	CastExpression	( uint32_t ) 0		4827335	2					
ANR	4827358	CastTarget	uint32_t		4827335	0					
ANR	4827359	PrimaryExpression	0		4827335	1					
ANR	4827360	ReturnType	static uint32_t		4827335	1					
ANR	4827361	Identifier	upd_pxlget1f3		4827335	2					
ANR	4827362	ParameterList	upd_p upd		4827335	3					
ANR	4827363	Parameter	upd_p upd	7279:14:258491:258499	4827335	0	True				
ANR	4827364	ParameterType	upd_p		4827335	0					
ANR	4827365	Identifier	upd		4827335	1					
ANR	4827366	CFGEntryNode	ENTRY		4827335		True				
ANR	4827367	CFGExitNode	EXIT		4827335		True				
ANR	4827368	Symbol	upd_pxlget1f4		4827335						
ANR	4827369	Symbol	upd -> pxlptr		4827335						
ANR	4827370	Symbol	* upd		4827335						
ANR	4827371	Symbol	* upd -> pxlptr		4827335						
ANR	4827372	Symbol	upd		4827335						
ANR	4827373	Symbol	upd -> pxlget		4827335						
ANR	4827374	Symbol	* * upd		4827335						
ANR	4827375	Function	upd_pxlget1f4	7285:0:258602:258740							
ANR	4827376	FunctionDef	upd_pxlget1f4 (upd_p upd)		4827375	0					
ANR	4827377	CompoundStatement		7287:0:258643:258740	4827375	0					
ANR	4827378	ExpressionStatement	upd -> pxlget = upd_pxlget1f5	7288:3:258648:258675	4827375	0	True				
ANR	4827379	AssignmentExpression	upd -> pxlget = upd_pxlget1f5		4827375	0		=			
ANR	4827380	PtrMemberAccess	upd -> pxlget		4827375	0					
ANR	4827381	Identifier	upd		4827375	0					
ANR	4827382	Identifier	pxlget		4827375	1					
ANR	4827383	Identifier	upd_pxlget1f5		4827375	1					
ANR	4827384	ReturnStatement	return * upd -> pxlptr & 0x10 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7289:3:258680:258738	4827375	1	True				
ANR	4827385	ConditionalExpression	* upd -> pxlptr & 0x10 ? ( uint32_t ) 1 : ( uint32_t ) 0		4827375	0					
ANR	4827386	Condition	* upd -> pxlptr & 0x10		4827375	0					
ANR	4827387	BitAndExpression	* upd -> pxlptr & 0x10		4827375	0		&			
ANR	4827388	UnaryOperationExpression	* upd -> pxlptr		4827375	0					
ANR	4827389	UnaryOperator	*		4827375	0					
ANR	4827390	PtrMemberAccess	upd -> pxlptr		4827375	1					
ANR	4827391	Identifier	upd		4827375	0					
ANR	4827392	Identifier	pxlptr		4827375	1					
ANR	4827393	PrimaryExpression	0x10		4827375	1					
ANR	4827394	CastExpression	( uint32_t ) 1		4827375	1					
ANR	4827395	CastTarget	uint32_t		4827375	0					
ANR	4827396	PrimaryExpression	1		4827375	1					
ANR	4827397	CastExpression	( uint32_t ) 0		4827375	2					
ANR	4827398	CastTarget	uint32_t		4827375	0					
ANR	4827399	PrimaryExpression	0		4827375	1					
ANR	4827400	ReturnType	static uint32_t		4827375	1					
ANR	4827401	Identifier	upd_pxlget1f4		4827375	2					
ANR	4827402	ParameterList	upd_p upd		4827375	3					
ANR	4827403	Parameter	upd_p upd	7286:14:258632:258640	4827375	0	True				
ANR	4827404	ParameterType	upd_p		4827375	0					
ANR	4827405	Identifier	upd		4827375	1					
ANR	4827406	CFGEntryNode	ENTRY		4827375		True				
ANR	4827407	CFGExitNode	EXIT		4827375		True				
ANR	4827408	Symbol	upd -> pxlptr		4827375						
ANR	4827409	Symbol	* upd		4827375						
ANR	4827410	Symbol	* upd -> pxlptr		4827375						
ANR	4827411	Symbol	upd		4827375						
ANR	4827412	Symbol	upd -> pxlget		4827375						
ANR	4827413	Symbol	* * upd		4827375						
ANR	4827414	Symbol	upd_pxlget1f5		4827375						
ANR	4827415	Function	upd_pxlget1f5	7292:0:258743:258881							
ANR	4827416	FunctionDef	upd_pxlget1f5 (upd_p upd)		4827415	0					
ANR	4827417	CompoundStatement		7294:0:258784:258881	4827415	0					
ANR	4827418	ExpressionStatement	upd -> pxlget = upd_pxlget1f6	7295:3:258789:258816	4827415	0	True				
ANR	4827419	AssignmentExpression	upd -> pxlget = upd_pxlget1f6		4827415	0		=			
ANR	4827420	PtrMemberAccess	upd -> pxlget		4827415	0					
ANR	4827421	Identifier	upd		4827415	0					
ANR	4827422	Identifier	pxlget		4827415	1					
ANR	4827423	Identifier	upd_pxlget1f6		4827415	1					
ANR	4827424	ReturnStatement	return * upd -> pxlptr & 0x08 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7296:3:258821:258879	4827415	1	True				
ANR	4827425	ConditionalExpression	* upd -> pxlptr & 0x08 ? ( uint32_t ) 1 : ( uint32_t ) 0		4827415	0					
ANR	4827426	Condition	* upd -> pxlptr & 0x08		4827415	0					
ANR	4827427	BitAndExpression	* upd -> pxlptr & 0x08		4827415	0		&			
ANR	4827428	UnaryOperationExpression	* upd -> pxlptr		4827415	0					
ANR	4827429	UnaryOperator	*		4827415	0					
ANR	4827430	PtrMemberAccess	upd -> pxlptr		4827415	1					
ANR	4827431	Identifier	upd		4827415	0					
ANR	4827432	Identifier	pxlptr		4827415	1					
ANR	4827433	PrimaryExpression	0x08		4827415	1					
ANR	4827434	CastExpression	( uint32_t ) 1		4827415	1					
ANR	4827435	CastTarget	uint32_t		4827415	0					
ANR	4827436	PrimaryExpression	1		4827415	1					
ANR	4827437	CastExpression	( uint32_t ) 0		4827415	2					
ANR	4827438	CastTarget	uint32_t		4827415	0					
ANR	4827439	PrimaryExpression	0		4827415	1					
ANR	4827440	ReturnType	static uint32_t		4827415	1					
ANR	4827441	Identifier	upd_pxlget1f5		4827415	2					
ANR	4827442	ParameterList	upd_p upd		4827415	3					
ANR	4827443	Parameter	upd_p upd	7293:14:258773:258781	4827415	0	True				
ANR	4827444	ParameterType	upd_p		4827415	0					
ANR	4827445	Identifier	upd		4827415	1					
ANR	4827446	CFGEntryNode	ENTRY		4827415		True				
ANR	4827447	CFGExitNode	EXIT		4827415		True				
ANR	4827448	Symbol	upd -> pxlptr		4827415						
ANR	4827449	Symbol	* upd		4827415						
ANR	4827450	Symbol	* upd -> pxlptr		4827415						
ANR	4827451	Symbol	upd		4827415						
ANR	4827452	Symbol	upd -> pxlget		4827415						
ANR	4827453	Symbol	* * upd		4827415						
ANR	4827454	Symbol	upd_pxlget1f6		4827415						
ANR	4827455	Function	upd_pxlget1f6	7299:0:258884:259022							
ANR	4827456	FunctionDef	upd_pxlget1f6 (upd_p upd)		4827455	0					
ANR	4827457	CompoundStatement		7301:0:258925:259022	4827455	0					
ANR	4827458	ExpressionStatement	upd -> pxlget = upd_pxlget1f7	7302:3:258930:258957	4827455	0	True				
ANR	4827459	AssignmentExpression	upd -> pxlget = upd_pxlget1f7		4827455	0		=			
ANR	4827460	PtrMemberAccess	upd -> pxlget		4827455	0					
ANR	4827461	Identifier	upd		4827455	0					
ANR	4827462	Identifier	pxlget		4827455	1					
ANR	4827463	Identifier	upd_pxlget1f7		4827455	1					
ANR	4827464	ReturnStatement	return * upd -> pxlptr & 0x04 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7303:3:258962:259020	4827455	1	True				
ANR	4827465	ConditionalExpression	* upd -> pxlptr & 0x04 ? ( uint32_t ) 1 : ( uint32_t ) 0		4827455	0					
ANR	4827466	Condition	* upd -> pxlptr & 0x04		4827455	0					
ANR	4827467	BitAndExpression	* upd -> pxlptr & 0x04		4827455	0		&			
ANR	4827468	UnaryOperationExpression	* upd -> pxlptr		4827455	0					
ANR	4827469	UnaryOperator	*		4827455	0					
ANR	4827470	PtrMemberAccess	upd -> pxlptr		4827455	1					
ANR	4827471	Identifier	upd		4827455	0					
ANR	4827472	Identifier	pxlptr		4827455	1					
ANR	4827473	PrimaryExpression	0x04		4827455	1					
ANR	4827474	CastExpression	( uint32_t ) 1		4827455	1					
ANR	4827475	CastTarget	uint32_t		4827455	0					
ANR	4827476	PrimaryExpression	1		4827455	1					
ANR	4827477	CastExpression	( uint32_t ) 0		4827455	2					
ANR	4827478	CastTarget	uint32_t		4827455	0					
ANR	4827479	PrimaryExpression	0		4827455	1					
ANR	4827480	ReturnType	static uint32_t		4827455	1					
ANR	4827481	Identifier	upd_pxlget1f6		4827455	2					
ANR	4827482	ParameterList	upd_p upd		4827455	3					
ANR	4827483	Parameter	upd_p upd	7300:14:258914:258922	4827455	0	True				
ANR	4827484	ParameterType	upd_p		4827455	0					
ANR	4827485	Identifier	upd		4827455	1					
ANR	4827486	CFGEntryNode	ENTRY		4827455		True				
ANR	4827487	CFGExitNode	EXIT		4827455		True				
ANR	4827488	Symbol	upd -> pxlptr		4827455						
ANR	4827489	Symbol	* upd		4827455						
ANR	4827490	Symbol	* upd -> pxlptr		4827455						
ANR	4827491	Symbol	upd		4827455						
ANR	4827492	Symbol	upd -> pxlget		4827455						
ANR	4827493	Symbol	upd_pxlget1f7		4827455						
ANR	4827494	Symbol	* * upd		4827455						
ANR	4827495	Function	upd_pxlget1f7	7306:0:259025:259163							
ANR	4827496	FunctionDef	upd_pxlget1f7 (upd_p upd)		4827495	0					
ANR	4827497	CompoundStatement		7308:0:259066:259163	4827495	0					
ANR	4827498	ExpressionStatement	upd -> pxlget = upd_pxlget1f8	7309:3:259071:259098	4827495	0	True				
ANR	4827499	AssignmentExpression	upd -> pxlget = upd_pxlget1f8		4827495	0		=			
ANR	4827500	PtrMemberAccess	upd -> pxlget		4827495	0					
ANR	4827501	Identifier	upd		4827495	0					
ANR	4827502	Identifier	pxlget		4827495	1					
ANR	4827503	Identifier	upd_pxlget1f8		4827495	1					
ANR	4827504	ReturnStatement	return * upd -> pxlptr & 0x02 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7310:3:259103:259161	4827495	1	True				
ANR	4827505	ConditionalExpression	* upd -> pxlptr & 0x02 ? ( uint32_t ) 1 : ( uint32_t ) 0		4827495	0					
ANR	4827506	Condition	* upd -> pxlptr & 0x02		4827495	0					
ANR	4827507	BitAndExpression	* upd -> pxlptr & 0x02		4827495	0		&			
ANR	4827508	UnaryOperationExpression	* upd -> pxlptr		4827495	0					
ANR	4827509	UnaryOperator	*		4827495	0					
ANR	4827510	PtrMemberAccess	upd -> pxlptr		4827495	1					
ANR	4827511	Identifier	upd		4827495	0					
ANR	4827512	Identifier	pxlptr		4827495	1					
ANR	4827513	PrimaryExpression	0x02		4827495	1					
ANR	4827514	CastExpression	( uint32_t ) 1		4827495	1					
ANR	4827515	CastTarget	uint32_t		4827495	0					
ANR	4827516	PrimaryExpression	1		4827495	1					
ANR	4827517	CastExpression	( uint32_t ) 0		4827495	2					
ANR	4827518	CastTarget	uint32_t		4827495	0					
ANR	4827519	PrimaryExpression	0		4827495	1					
ANR	4827520	ReturnType	static uint32_t		4827495	1					
ANR	4827521	Identifier	upd_pxlget1f7		4827495	2					
ANR	4827522	ParameterList	upd_p upd		4827495	3					
ANR	4827523	Parameter	upd_p upd	7307:14:259055:259063	4827495	0	True				
ANR	4827524	ParameterType	upd_p		4827495	0					
ANR	4827525	Identifier	upd		4827495	1					
ANR	4827526	CFGEntryNode	ENTRY		4827495		True				
ANR	4827527	CFGExitNode	EXIT		4827495		True				
ANR	4827528	Symbol	upd -> pxlptr		4827495						
ANR	4827529	Symbol	* upd		4827495						
ANR	4827530	Symbol	* upd -> pxlptr		4827495						
ANR	4827531	Symbol	upd		4827495						
ANR	4827532	Symbol	upd -> pxlget		4827495						
ANR	4827533	Symbol	upd_pxlget1f8		4827495						
ANR	4827534	Symbol	* * upd		4827495						
ANR	4827535	Function	upd_pxlget1f8	7313:0:259166:259304							
ANR	4827536	FunctionDef	upd_pxlget1f8 (upd_p upd)		4827535	0					
ANR	4827537	CompoundStatement		7315:0:259207:259304	4827535	0					
ANR	4827538	ExpressionStatement	upd -> pxlget = upd_pxlget1f1	7316:3:259212:259239	4827535	0	True				
ANR	4827539	AssignmentExpression	upd -> pxlget = upd_pxlget1f1		4827535	0		=			
ANR	4827540	PtrMemberAccess	upd -> pxlget		4827535	0					
ANR	4827541	Identifier	upd		4827535	0					
ANR	4827542	Identifier	pxlget		4827535	1					
ANR	4827543	Identifier	upd_pxlget1f1		4827535	1					
ANR	4827544	ReturnStatement	return * upd -> pxlptr ++ & 0x01 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7317:3:259244:259302	4827535	1	True				
ANR	4827545	ConditionalExpression	* upd -> pxlptr ++ & 0x01 ? ( uint32_t ) 1 : ( uint32_t ) 0		4827535	0					
ANR	4827546	Condition	* upd -> pxlptr ++ & 0x01		4827535	0					
ANR	4827547	BitAndExpression	* upd -> pxlptr ++ & 0x01		4827535	0		&			
ANR	4827548	UnaryOperationExpression	* upd -> pxlptr ++		4827535	0					
ANR	4827549	UnaryOperator	*		4827535	0					
ANR	4827550	PostIncDecOperationExpression	upd -> pxlptr ++		4827535	1					
ANR	4827551	PtrMemberAccess	upd -> pxlptr		4827535	0					
ANR	4827552	Identifier	upd		4827535	0					
ANR	4827553	Identifier	pxlptr		4827535	1					
ANR	4827554	IncDec	++		4827535	1					
ANR	4827555	PrimaryExpression	0x01		4827535	1					
ANR	4827556	CastExpression	( uint32_t ) 1		4827535	1					
ANR	4827557	CastTarget	uint32_t		4827535	0					
ANR	4827558	PrimaryExpression	1		4827535	1					
ANR	4827559	CastExpression	( uint32_t ) 0		4827535	2					
ANR	4827560	CastTarget	uint32_t		4827535	0					
ANR	4827561	PrimaryExpression	0		4827535	1					
ANR	4827562	ReturnType	static uint32_t		4827535	1					
ANR	4827563	Identifier	upd_pxlget1f8		4827535	2					
ANR	4827564	ParameterList	upd_p upd		4827535	3					
ANR	4827565	Parameter	upd_p upd	7314:14:259196:259204	4827535	0	True				
ANR	4827566	ParameterType	upd_p		4827535	0					
ANR	4827567	Identifier	upd		4827535	1					
ANR	4827568	CFGEntryNode	ENTRY		4827535		True				
ANR	4827569	CFGExitNode	EXIT		4827535		True				
ANR	4827570	Symbol	upd -> pxlptr		4827535						
ANR	4827571	Symbol	upd_pxlget1f1		4827535						
ANR	4827572	Symbol	* upd		4827535						
ANR	4827573	Symbol	* upd -> pxlptr ++		4827535						
ANR	4827574	Symbol	upd		4827535						
ANR	4827575	Symbol	upd -> pxlget		4827535						
ANR	4827576	Function	upd_pxlget2f1	7322:0:259328:259467							
ANR	4827577	FunctionDef	upd_pxlget2f1 (upd_p upd)		4827576	0					
ANR	4827578	CompoundStatement		7324:0:259369:259467	4827576	0					
ANR	4827579	ExpressionStatement	upd -> pxlget = upd_pxlget2f2	7325:3:259374:259401	4827576	0	True				
ANR	4827580	AssignmentExpression	upd -> pxlget = upd_pxlget2f2		4827576	0		=			
ANR	4827581	PtrMemberAccess	upd -> pxlget		4827576	0					
ANR	4827582	Identifier	upd		4827576	0					
ANR	4827583	Identifier	pxlget		4827576	1					
ANR	4827584	Identifier	upd_pxlget2f2		4827576	1					
ANR	4827585	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xC0 ) >> 6 ;	7326:3:259406:259465	4827576	1	True				
ANR	4827586	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xC0 ) >> 6		4827576	0		>>			
ANR	4827587	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xC0		4827576	0		&			
ANR	4827588	CastExpression	( uint32_t ) ( * upd -> pxlptr )		4827576	0					
ANR	4827589	CastTarget	uint32_t		4827576	0					
ANR	4827590	UnaryOperationExpression	* upd -> pxlptr		4827576	1					
ANR	4827591	UnaryOperator	*		4827576	0					
ANR	4827592	PtrMemberAccess	upd -> pxlptr		4827576	1					
ANR	4827593	Identifier	upd		4827576	0					
ANR	4827594	Identifier	pxlptr		4827576	1					
ANR	4827595	CastExpression	( uint32_t ) 0xC0		4827576	1					
ANR	4827596	CastTarget	uint32_t		4827576	0					
ANR	4827597	PrimaryExpression	0xC0		4827576	1					
ANR	4827598	PrimaryExpression	6		4827576	1					
ANR	4827599	ReturnType	static uint32_t		4827576	1					
ANR	4827600	Identifier	upd_pxlget2f1		4827576	2					
ANR	4827601	ParameterList	upd_p upd		4827576	3					
ANR	4827602	Parameter	upd_p upd	7323:14:259358:259366	4827576	0	True				
ANR	4827603	ParameterType	upd_p		4827576	0					
ANR	4827604	Identifier	upd		4827576	1					
ANR	4827605	CFGEntryNode	ENTRY		4827576		True				
ANR	4827606	CFGExitNode	EXIT		4827576		True				
ANR	4827607	Symbol	upd -> pxlptr		4827576						
ANR	4827608	Symbol	upd_pxlget2f2		4827576						
ANR	4827609	Symbol	* upd		4827576						
ANR	4827610	Symbol	* upd -> pxlptr		4827576						
ANR	4827611	Symbol	upd		4827576						
ANR	4827612	Symbol	upd -> pxlget		4827576						
ANR	4827613	Symbol	* * upd		4827576						
ANR	4827614	Function	upd_pxlget2f2	7329:0:259470:259609							
ANR	4827615	FunctionDef	upd_pxlget2f2 (upd_p upd)		4827614	0					
ANR	4827616	CompoundStatement		7331:0:259511:259609	4827614	0					
ANR	4827617	ExpressionStatement	upd -> pxlget = upd_pxlget2f3	7332:3:259516:259543	4827614	0	True				
ANR	4827618	AssignmentExpression	upd -> pxlget = upd_pxlget2f3		4827614	0		=			
ANR	4827619	PtrMemberAccess	upd -> pxlget		4827614	0					
ANR	4827620	Identifier	upd		4827614	0					
ANR	4827621	Identifier	pxlget		4827614	1					
ANR	4827622	Identifier	upd_pxlget2f3		4827614	1					
ANR	4827623	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30 ) >> 4 ;	7333:3:259548:259607	4827614	1	True				
ANR	4827624	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30 ) >> 4		4827614	0		>>			
ANR	4827625	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30		4827614	0		&			
ANR	4827626	CastExpression	( uint32_t ) ( * upd -> pxlptr )		4827614	0					
ANR	4827627	CastTarget	uint32_t		4827614	0					
ANR	4827628	UnaryOperationExpression	* upd -> pxlptr		4827614	1					
ANR	4827629	UnaryOperator	*		4827614	0					
ANR	4827630	PtrMemberAccess	upd -> pxlptr		4827614	1					
ANR	4827631	Identifier	upd		4827614	0					
ANR	4827632	Identifier	pxlptr		4827614	1					
ANR	4827633	CastExpression	( uint32_t ) 0x30		4827614	1					
ANR	4827634	CastTarget	uint32_t		4827614	0					
ANR	4827635	PrimaryExpression	0x30		4827614	1					
ANR	4827636	PrimaryExpression	4		4827614	1					
ANR	4827637	ReturnType	static uint32_t		4827614	1					
ANR	4827638	Identifier	upd_pxlget2f2		4827614	2					
ANR	4827639	ParameterList	upd_p upd		4827614	3					
ANR	4827640	Parameter	upd_p upd	7330:14:259500:259508	4827614	0	True				
ANR	4827641	ParameterType	upd_p		4827614	0					
ANR	4827642	Identifier	upd		4827614	1					
ANR	4827643	CFGEntryNode	ENTRY		4827614		True				
ANR	4827644	CFGExitNode	EXIT		4827614		True				
ANR	4827645	Symbol	upd_pxlget2f3		4827614						
ANR	4827646	Symbol	upd -> pxlptr		4827614						
ANR	4827647	Symbol	* upd		4827614						
ANR	4827648	Symbol	* upd -> pxlptr		4827614						
ANR	4827649	Symbol	upd		4827614						
ANR	4827650	Symbol	upd -> pxlget		4827614						
ANR	4827651	Symbol	* * upd		4827614						
ANR	4827652	Function	upd_pxlget2f3	7336:0:259612:259751							
ANR	4827653	FunctionDef	upd_pxlget2f3 (upd_p upd)		4827652	0					
ANR	4827654	CompoundStatement		7338:0:259653:259751	4827652	0					
ANR	4827655	ExpressionStatement	upd -> pxlget = upd_pxlget2f4	7339:3:259658:259685	4827652	0	True				
ANR	4827656	AssignmentExpression	upd -> pxlget = upd_pxlget2f4		4827652	0		=			
ANR	4827657	PtrMemberAccess	upd -> pxlget		4827652	0					
ANR	4827658	Identifier	upd		4827652	0					
ANR	4827659	Identifier	pxlget		4827652	1					
ANR	4827660	Identifier	upd_pxlget2f4		4827652	1					
ANR	4827661	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C ) >> 2 ;	7340:3:259690:259749	4827652	1	True				
ANR	4827662	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C ) >> 2		4827652	0		>>			
ANR	4827663	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C		4827652	0		&			
ANR	4827664	CastExpression	( uint32_t ) ( * upd -> pxlptr )		4827652	0					
ANR	4827665	CastTarget	uint32_t		4827652	0					
ANR	4827666	UnaryOperationExpression	* upd -> pxlptr		4827652	1					
ANR	4827667	UnaryOperator	*		4827652	0					
ANR	4827668	PtrMemberAccess	upd -> pxlptr		4827652	1					
ANR	4827669	Identifier	upd		4827652	0					
ANR	4827670	Identifier	pxlptr		4827652	1					
ANR	4827671	CastExpression	( uint32_t ) 0x0C		4827652	1					
ANR	4827672	CastTarget	uint32_t		4827652	0					
ANR	4827673	PrimaryExpression	0x0C		4827652	1					
ANR	4827674	PrimaryExpression	2		4827652	1					
ANR	4827675	ReturnType	static uint32_t		4827652	1					
ANR	4827676	Identifier	upd_pxlget2f3		4827652	2					
ANR	4827677	ParameterList	upd_p upd		4827652	3					
ANR	4827678	Parameter	upd_p upd	7337:14:259642:259650	4827652	0	True				
ANR	4827679	ParameterType	upd_p		4827652	0					
ANR	4827680	Identifier	upd		4827652	1					
ANR	4827681	CFGEntryNode	ENTRY		4827652		True				
ANR	4827682	CFGExitNode	EXIT		4827652		True				
ANR	4827683	Symbol	upd -> pxlptr		4827652						
ANR	4827684	Symbol	* upd		4827652						
ANR	4827685	Symbol	* upd -> pxlptr		4827652						
ANR	4827686	Symbol	upd		4827652						
ANR	4827687	Symbol	upd -> pxlget		4827652						
ANR	4827688	Symbol	* * upd		4827652						
ANR	4827689	Symbol	upd_pxlget2f4		4827652						
ANR	4827690	Function	upd_pxlget2f4	7343:0:259754:259887							
ANR	4827691	FunctionDef	upd_pxlget2f4 (upd_p upd)		4827690	0					
ANR	4827692	CompoundStatement		7345:0:259795:259887	4827690	0					
ANR	4827693	ExpressionStatement	upd -> pxlget = upd_pxlget2f1	7346:3:259800:259827	4827690	0	True				
ANR	4827694	AssignmentExpression	upd -> pxlget = upd_pxlget2f1		4827690	0		=			
ANR	4827695	PtrMemberAccess	upd -> pxlget		4827690	0					
ANR	4827696	Identifier	upd		4827690	0					
ANR	4827697	Identifier	pxlget		4827690	1					
ANR	4827698	Identifier	upd_pxlget2f1		4827690	1					
ANR	4827699	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ++ ) & ( uint32_t ) 0x03 ;	7347:3:259832:259885	4827690	1	True				
ANR	4827700	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ++ ) & ( uint32_t ) 0x03		4827690	0		&			
ANR	4827701	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		4827690	0					
ANR	4827702	CastTarget	uint32_t		4827690	0					
ANR	4827703	UnaryOperationExpression	* upd -> pxlptr ++		4827690	1					
ANR	4827704	UnaryOperator	*		4827690	0					
ANR	4827705	PostIncDecOperationExpression	upd -> pxlptr ++		4827690	1					
ANR	4827706	PtrMemberAccess	upd -> pxlptr		4827690	0					
ANR	4827707	Identifier	upd		4827690	0					
ANR	4827708	Identifier	pxlptr		4827690	1					
ANR	4827709	IncDec	++		4827690	1					
ANR	4827710	CastExpression	( uint32_t ) 0x03		4827690	1					
ANR	4827711	CastTarget	uint32_t		4827690	0					
ANR	4827712	PrimaryExpression	0x03		4827690	1					
ANR	4827713	ReturnType	static uint32_t		4827690	1					
ANR	4827714	Identifier	upd_pxlget2f4		4827690	2					
ANR	4827715	ParameterList	upd_p upd		4827690	3					
ANR	4827716	Parameter	upd_p upd	7344:14:259784:259792	4827690	0	True				
ANR	4827717	ParameterType	upd_p		4827690	0					
ANR	4827718	Identifier	upd		4827690	1					
ANR	4827719	CFGEntryNode	ENTRY		4827690		True				
ANR	4827720	CFGExitNode	EXIT		4827690		True				
ANR	4827721	Symbol	upd -> pxlptr		4827690						
ANR	4827722	Symbol	upd_pxlget2f1		4827690						
ANR	4827723	Symbol	* upd		4827690						
ANR	4827724	Symbol	* upd -> pxlptr ++		4827690						
ANR	4827725	Symbol	upd		4827690						
ANR	4827726	Symbol	upd -> pxlget		4827690						
ANR	4827727	Function	upd_pxlget4f1	7351:0:259910:260049							
ANR	4827728	FunctionDef	upd_pxlget4f1 (upd_p upd)		4827727	0					
ANR	4827729	CompoundStatement		7353:0:259951:260049	4827727	0					
ANR	4827730	ExpressionStatement	upd -> pxlget = upd_pxlget4f2	7354:3:259956:259983	4827727	0	True				
ANR	4827731	AssignmentExpression	upd -> pxlget = upd_pxlget4f2		4827727	0		=			
ANR	4827732	PtrMemberAccess	upd -> pxlget		4827727	0					
ANR	4827733	Identifier	upd		4827727	0					
ANR	4827734	Identifier	pxlget		4827727	1					
ANR	4827735	Identifier	upd_pxlget4f2		4827727	1					
ANR	4827736	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xF0 ) >> 4 ;	7355:3:259988:260047	4827727	1	True				
ANR	4827737	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xF0 ) >> 4		4827727	0		>>			
ANR	4827738	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0xF0		4827727	0		&			
ANR	4827739	CastExpression	( uint32_t ) ( * upd -> pxlptr )		4827727	0					
ANR	4827740	CastTarget	uint32_t		4827727	0					
ANR	4827741	UnaryOperationExpression	* upd -> pxlptr		4827727	1					
ANR	4827742	UnaryOperator	*		4827727	0					
ANR	4827743	PtrMemberAccess	upd -> pxlptr		4827727	1					
ANR	4827744	Identifier	upd		4827727	0					
ANR	4827745	Identifier	pxlptr		4827727	1					
ANR	4827746	CastExpression	( uint32_t ) 0xF0		4827727	1					
ANR	4827747	CastTarget	uint32_t		4827727	0					
ANR	4827748	PrimaryExpression	0xF0		4827727	1					
ANR	4827749	PrimaryExpression	4		4827727	1					
ANR	4827750	ReturnType	static uint32_t		4827727	1					
ANR	4827751	Identifier	upd_pxlget4f1		4827727	2					
ANR	4827752	ParameterList	upd_p upd		4827727	3					
ANR	4827753	Parameter	upd_p upd	7352:14:259940:259948	4827727	0	True				
ANR	4827754	ParameterType	upd_p		4827727	0					
ANR	4827755	Identifier	upd		4827727	1					
ANR	4827756	CFGEntryNode	ENTRY		4827727		True				
ANR	4827757	CFGExitNode	EXIT		4827727		True				
ANR	4827758	Symbol	upd -> pxlptr		4827727						
ANR	4827759	Symbol	* upd		4827727						
ANR	4827760	Symbol	* upd -> pxlptr		4827727						
ANR	4827761	Symbol	upd		4827727						
ANR	4827762	Symbol	upd -> pxlget		4827727						
ANR	4827763	Symbol	* * upd		4827727						
ANR	4827764	Symbol	upd_pxlget4f2		4827727						
ANR	4827765	Function	upd_pxlget4f2	7358:0:260052:260185							
ANR	4827766	FunctionDef	upd_pxlget4f2 (upd_p upd)		4827765	0					
ANR	4827767	CompoundStatement		7360:0:260093:260185	4827765	0					
ANR	4827768	ExpressionStatement	upd -> pxlget = upd_pxlget4f1	7361:3:260098:260125	4827765	0	True				
ANR	4827769	AssignmentExpression	upd -> pxlget = upd_pxlget4f1		4827765	0		=			
ANR	4827770	PtrMemberAccess	upd -> pxlget		4827765	0					
ANR	4827771	Identifier	upd		4827765	0					
ANR	4827772	Identifier	pxlget		4827765	1					
ANR	4827773	Identifier	upd_pxlget4f1		4827765	1					
ANR	4827774	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ++ ) & ( uint32_t ) 0x0F ;	7362:3:260130:260183	4827765	1	True				
ANR	4827775	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ++ ) & ( uint32_t ) 0x0F		4827765	0		&			
ANR	4827776	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		4827765	0					
ANR	4827777	CastTarget	uint32_t		4827765	0					
ANR	4827778	UnaryOperationExpression	* upd -> pxlptr ++		4827765	1					
ANR	4827779	UnaryOperator	*		4827765	0					
ANR	4827780	PostIncDecOperationExpression	upd -> pxlptr ++		4827765	1					
ANR	4827781	PtrMemberAccess	upd -> pxlptr		4827765	0					
ANR	4827782	Identifier	upd		4827765	0					
ANR	4827783	Identifier	pxlptr		4827765	1					
ANR	4827784	IncDec	++		4827765	1					
ANR	4827785	CastExpression	( uint32_t ) 0x0F		4827765	1					
ANR	4827786	CastTarget	uint32_t		4827765	0					
ANR	4827787	PrimaryExpression	0x0F		4827765	1					
ANR	4827788	ReturnType	static uint32_t		4827765	1					
ANR	4827789	Identifier	upd_pxlget4f2		4827765	2					
ANR	4827790	ParameterList	upd_p upd		4827765	3					
ANR	4827791	Parameter	upd_p upd	7359:14:260082:260090	4827765	0	True				
ANR	4827792	ParameterType	upd_p		4827765	0					
ANR	4827793	Identifier	upd		4827765	1					
ANR	4827794	CFGEntryNode	ENTRY		4827765		True				
ANR	4827795	CFGExitNode	EXIT		4827765		True				
ANR	4827796	Symbol	upd_pxlget4f1		4827765						
ANR	4827797	Symbol	upd -> pxlptr		4827765						
ANR	4827798	Symbol	* upd		4827765						
ANR	4827799	Symbol	* upd -> pxlptr ++		4827765						
ANR	4827800	Symbol	upd		4827765						
ANR	4827801	Symbol	upd -> pxlget		4827765						
ANR	4827802	Function	upd_pxlget8f	7366:0:260208:260289							
ANR	4827803	FunctionDef	upd_pxlget8f (upd_p upd)		4827802	0					
ANR	4827804	CompoundStatement		7368:0:260248:260289	4827802	0					
ANR	4827805	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ++ ) ;	7369:3:260253:260287	4827802	0	True				
ANR	4827806	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		4827802	0					
ANR	4827807	CastTarget	uint32_t		4827802	0					
ANR	4827808	UnaryOperationExpression	* upd -> pxlptr ++		4827802	1					
ANR	4827809	UnaryOperator	*		4827802	0					
ANR	4827810	PostIncDecOperationExpression	upd -> pxlptr ++		4827802	1					
ANR	4827811	PtrMemberAccess	upd -> pxlptr		4827802	0					
ANR	4827812	Identifier	upd		4827802	0					
ANR	4827813	Identifier	pxlptr		4827802	1					
ANR	4827814	IncDec	++		4827802	1					
ANR	4827815	ReturnType	static uint32_t		4827802	1					
ANR	4827816	Identifier	upd_pxlget8f		4827802	2					
ANR	4827817	ParameterList	upd_p upd		4827802	3					
ANR	4827818	Parameter	upd_p upd	7367:13:260237:260245	4827802	0	True				
ANR	4827819	ParameterType	upd_p		4827802	0					
ANR	4827820	Identifier	upd		4827802	1					
ANR	4827821	CFGEntryNode	ENTRY		4827802		True				
ANR	4827822	CFGExitNode	EXIT		4827802		True				
ANR	4827823	Symbol	upd -> pxlptr		4827802						
ANR	4827824	Symbol	* upd		4827802						
ANR	4827825	Symbol	* upd -> pxlptr ++		4827802						
ANR	4827826	Symbol	upd		4827802						
ANR	4827827	Function	upd_pxlget16f	7373:0:260313:260488							
ANR	4827828	FunctionDef	upd_pxlget16f (upd_p upd)		4827827	0					
ANR	4827829	CompoundStatement		7375:0:260354:260488	4827827	0					
ANR	4827830	IdentifierDeclStatement	uint32_t ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 8 ;	7376:3:260359:260406	4827827	0	True				
ANR	4827831	IdentifierDecl	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 8		4827827	0					
ANR	4827832	IdentifierDeclType	uint32_t		4827827	0					
ANR	4827833	Identifier	ci		4827827	1					
ANR	4827834	AssignmentExpression	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 8		4827827	2		=			
ANR	4827835	Identifier	ci		4827827	0					
ANR	4827836	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 8		4827827	1		<<			
ANR	4827837	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		4827827	0					
ANR	4827838	CastTarget	uint32_t		4827827	0					
ANR	4827839	UnaryOperationExpression	* upd -> pxlptr ++		4827827	1					
ANR	4827840	UnaryOperator	*		4827827	0					
ANR	4827841	PostIncDecOperationExpression	upd -> pxlptr ++		4827827	1					
ANR	4827842	PtrMemberAccess	upd -> pxlptr		4827827	0					
ANR	4827843	Identifier	upd		4827827	0					
ANR	4827844	Identifier	pxlptr		4827827	1					
ANR	4827845	IncDec	++		4827827	1					
ANR	4827846	PrimaryExpression	8		4827827	1					
ANR	4827847	ExpressionStatement	ci |= * upd -> pxlptr ++	7377:18:260426:260464	4827827	1	True				
ANR	4827848	AssignmentExpression	ci |= * upd -> pxlptr ++		4827827	0		|=			
ANR	4827849	Identifier	ci		4827827	0					
ANR	4827850	UnaryOperationExpression	* upd -> pxlptr ++		4827827	1					
ANR	4827851	UnaryOperator	*		4827827	0					
ANR	4827852	PostIncDecOperationExpression	upd -> pxlptr ++		4827827	1					
ANR	4827853	PtrMemberAccess	upd -> pxlptr		4827827	0					
ANR	4827854	Identifier	upd		4827827	0					
ANR	4827855	Identifier	pxlptr		4827827	1					
ANR	4827856	IncDec	++		4827827	1					
ANR	4827857	ReturnStatement	return ci ;	7378:3:260469:260486	4827827	2	True				
ANR	4827858	Identifier	ci		4827827	0					
ANR	4827859	ReturnType	static uint32_t		4827827	1					
ANR	4827860	Identifier	upd_pxlget16f		4827827	2					
ANR	4827861	ParameterList	upd_p upd		4827827	3					
ANR	4827862	Parameter	upd_p upd	7374:14:260343:260351	4827827	0	True				
ANR	4827863	ParameterType	upd_p		4827827	0					
ANR	4827864	Identifier	upd		4827827	1					
ANR	4827865	CFGEntryNode	ENTRY		4827827		True				
ANR	4827866	CFGExitNode	EXIT		4827827		True				
ANR	4827867	Symbol	upd -> pxlptr		4827827						
ANR	4827868	Symbol	* upd		4827827						
ANR	4827869	Symbol	* upd -> pxlptr ++		4827827						
ANR	4827870	Symbol	ci		4827827						
ANR	4827871	Symbol	upd		4827827						
ANR	4827872	Function	upd_pxlget24f	7382:0:260512:260715							
ANR	4827873	FunctionDef	upd_pxlget24f (upd_p upd)		4827872	0					
ANR	4827874	CompoundStatement		7384:0:260553:260715	4827872	0					
ANR	4827875	IdentifierDeclStatement	uint32_t ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 16 ;	7385:3:260558:260606	4827872	0	True				
ANR	4827876	IdentifierDecl	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 16		4827872	0					
ANR	4827877	IdentifierDeclType	uint32_t		4827872	0					
ANR	4827878	Identifier	ci		4827872	1					
ANR	4827879	AssignmentExpression	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 16		4827872	2		=			
ANR	4827880	Identifier	ci		4827872	0					
ANR	4827881	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 16		4827872	1		<<			
ANR	4827882	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		4827872	0					
ANR	4827883	CastTarget	uint32_t		4827872	0					
ANR	4827884	UnaryOperationExpression	* upd -> pxlptr ++		4827872	1					
ANR	4827885	UnaryOperator	*		4827872	0					
ANR	4827886	PostIncDecOperationExpression	upd -> pxlptr ++		4827872	1					
ANR	4827887	PtrMemberAccess	upd -> pxlptr		4827872	0					
ANR	4827888	Identifier	upd		4827872	0					
ANR	4827889	Identifier	pxlptr		4827872	1					
ANR	4827890	IncDec	++		4827872	1					
ANR	4827891	PrimaryExpression	16		4827872	1					
ANR	4827892	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 8	7386:10:260618:260657	4827872	1	True				
ANR	4827893	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 8		4827872	0		|=			
ANR	4827894	Identifier	ci		4827872	0					
ANR	4827895	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 8		4827872	1		<<			
ANR	4827896	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		4827872	0					
ANR	4827897	CastTarget	uint32_t		4827872	0					
ANR	4827898	UnaryOperationExpression	* upd -> pxlptr ++		4827872	1					
ANR	4827899	UnaryOperator	*		4827872	0					
ANR	4827900	PostIncDecOperationExpression	upd -> pxlptr ++		4827872	1					
ANR	4827901	PtrMemberAccess	upd -> pxlptr		4827872	0					
ANR	4827902	Identifier	upd		4827872	0					
ANR	4827903	Identifier	pxlptr		4827872	1					
ANR	4827904	IncDec	++		4827872	1					
ANR	4827905	PrimaryExpression	8		4827872	1					
ANR	4827906	ExpressionStatement	ci |= * upd -> pxlptr ++	7387:10:260669:260699	4827872	2	True				
ANR	4827907	AssignmentExpression	ci |= * upd -> pxlptr ++		4827872	0		|=			
ANR	4827908	Identifier	ci		4827872	0					
ANR	4827909	UnaryOperationExpression	* upd -> pxlptr ++		4827872	1					
ANR	4827910	UnaryOperator	*		4827872	0					
ANR	4827911	PostIncDecOperationExpression	upd -> pxlptr ++		4827872	1					
ANR	4827912	PtrMemberAccess	upd -> pxlptr		4827872	0					
ANR	4827913	Identifier	upd		4827872	0					
ANR	4827914	Identifier	pxlptr		4827872	1					
ANR	4827915	IncDec	++		4827872	1					
ANR	4827916	ReturnStatement	return ci ;	7388:3:260704:260713	4827872	3	True				
ANR	4827917	Identifier	ci		4827872	0					
ANR	4827918	ReturnType	static uint32_t		4827872	1					
ANR	4827919	Identifier	upd_pxlget24f		4827872	2					
ANR	4827920	ParameterList	upd_p upd		4827872	3					
ANR	4827921	Parameter	upd_p upd	7383:14:260542:260550	4827872	0	True				
ANR	4827922	ParameterType	upd_p		4827872	0					
ANR	4827923	Identifier	upd		4827872	1					
ANR	4827924	CFGEntryNode	ENTRY		4827872		True				
ANR	4827925	CFGExitNode	EXIT		4827872		True				
ANR	4827926	Symbol	upd -> pxlptr		4827872						
ANR	4827927	Symbol	* upd -> pxlptr ++		4827872						
ANR	4827928	Symbol	* upd		4827872						
ANR	4827929	Symbol	ci		4827872						
ANR	4827930	Symbol	upd		4827872						
ANR	4827931	Function	upd_pxlget32f	7392:0:260739:261033							
ANR	4827932	FunctionDef	upd_pxlget32f (upd_p upd)		4827931	0					
ANR	4827933	CompoundStatement		7394:0:260780:261033	4827931	0					
ANR	4827934	IdentifierDeclStatement	uint32_t ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 24 ;	7395:3:260785:260833	4827931	0	True				
ANR	4827935	IdentifierDecl	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 24		4827931	0					
ANR	4827936	IdentifierDeclType	uint32_t		4827931	0					
ANR	4827937	Identifier	ci		4827931	1					
ANR	4827938	AssignmentExpression	ci = ( uint32_t ) ( * upd -> pxlptr ++ ) << 24		4827931	2		=			
ANR	4827939	Identifier	ci		4827931	0					
ANR	4827940	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 24		4827931	1		<<			
ANR	4827941	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		4827931	0					
ANR	4827942	CastTarget	uint32_t		4827931	0					
ANR	4827943	UnaryOperationExpression	* upd -> pxlptr ++		4827931	1					
ANR	4827944	UnaryOperator	*		4827931	0					
ANR	4827945	PostIncDecOperationExpression	upd -> pxlptr ++		4827931	1					
ANR	4827946	PtrMemberAccess	upd -> pxlptr		4827931	0					
ANR	4827947	Identifier	upd		4827931	0					
ANR	4827948	Identifier	pxlptr		4827931	1					
ANR	4827949	IncDec	++		4827931	1					
ANR	4827950	PrimaryExpression	24		4827931	1					
ANR	4827951	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 16	7396:18:260853:260892	4827931	1	True				
ANR	4827952	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 16		4827931	0		|=			
ANR	4827953	Identifier	ci		4827931	0					
ANR	4827954	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 16		4827931	1		<<			
ANR	4827955	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		4827931	0					
ANR	4827956	CastTarget	uint32_t		4827931	0					
ANR	4827957	UnaryOperationExpression	* upd -> pxlptr ++		4827931	1					
ANR	4827958	UnaryOperator	*		4827931	0					
ANR	4827959	PostIncDecOperationExpression	upd -> pxlptr ++		4827931	1					
ANR	4827960	PtrMemberAccess	upd -> pxlptr		4827931	0					
ANR	4827961	Identifier	upd		4827931	0					
ANR	4827962	Identifier	pxlptr		4827931	1					
ANR	4827963	IncDec	++		4827931	1					
ANR	4827964	PrimaryExpression	16		4827931	1					
ANR	4827965	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 8	7397:18:260912:260951	4827931	2	True				
ANR	4827966	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr ++ ) << 8		4827931	0		|=			
ANR	4827967	Identifier	ci		4827931	0					
ANR	4827968	ShiftExpression	( uint32_t ) ( * upd -> pxlptr ++ ) << 8		4827931	1		<<			
ANR	4827969	CastExpression	( uint32_t ) ( * upd -> pxlptr ++ )		4827931	0					
ANR	4827970	CastTarget	uint32_t		4827931	0					
ANR	4827971	UnaryOperationExpression	* upd -> pxlptr ++		4827931	1					
ANR	4827972	UnaryOperator	*		4827931	0					
ANR	4827973	PostIncDecOperationExpression	upd -> pxlptr ++		4827931	1					
ANR	4827974	PtrMemberAccess	upd -> pxlptr		4827931	0					
ANR	4827975	Identifier	upd		4827931	0					
ANR	4827976	Identifier	pxlptr		4827931	1					
ANR	4827977	IncDec	++		4827931	1					
ANR	4827978	PrimaryExpression	8		4827931	1					
ANR	4827979	ExpressionStatement	ci |= * upd -> pxlptr ++	7398:18:260971:261009	4827931	3	True				
ANR	4827980	AssignmentExpression	ci |= * upd -> pxlptr ++		4827931	0		|=			
ANR	4827981	Identifier	ci		4827931	0					
ANR	4827982	UnaryOperationExpression	* upd -> pxlptr ++		4827931	1					
ANR	4827983	UnaryOperator	*		4827931	0					
ANR	4827984	PostIncDecOperationExpression	upd -> pxlptr ++		4827931	1					
ANR	4827985	PtrMemberAccess	upd -> pxlptr		4827931	0					
ANR	4827986	Identifier	upd		4827931	0					
ANR	4827987	Identifier	pxlptr		4827931	1					
ANR	4827988	IncDec	++		4827931	1					
ANR	4827989	ReturnStatement	return ci ;	7399:3:261014:261031	4827931	4	True				
ANR	4827990	Identifier	ci		4827931	0					
ANR	4827991	ReturnType	static uint32_t		4827931	1					
ANR	4827992	Identifier	upd_pxlget32f		4827931	2					
ANR	4827993	ParameterList	upd_p upd		4827931	3					
ANR	4827994	Parameter	upd_p upd	7393:14:260769:260777	4827931	0	True				
ANR	4827995	ParameterType	upd_p		4827931	0					
ANR	4827996	Identifier	upd		4827931	1					
ANR	4827997	CFGEntryNode	ENTRY		4827931		True				
ANR	4827998	CFGExitNode	EXIT		4827931		True				
ANR	4827999	Symbol	upd -> pxlptr		4827931						
ANR	4828000	Symbol	* upd -> pxlptr ++		4827931						
ANR	4828001	Symbol	* upd		4827931						
ANR	4828002	Symbol	ci		4827931						
ANR	4828003	Symbol	upd		4827931						
ANR	4828004	Function	upd_pxlgetnix	7404:0:261057:261124							
ANR	4828005	FunctionDef	upd_pxlgetnix (upd_p upd)		4828004	0					
ANR	4828006	CompoundStatement		7406:0:261098:261124	4828004	0					
ANR	4828007	ReturnStatement	return ( uint32_t ) 0 ;	7407:3:261103:261122	4828004	0	True				
ANR	4828008	CastExpression	( uint32_t ) 0		4828004	0					
ANR	4828009	CastTarget	uint32_t		4828004	0					
ANR	4828010	PrimaryExpression	0		4828004	1					
ANR	4828011	ReturnType	static uint32_t		4828004	1					
ANR	4828012	Identifier	upd_pxlgetnix		4828004	2					
ANR	4828013	ParameterList	upd_p upd		4828004	3					
ANR	4828014	Parameter	upd_p upd	7405:14:261087:261095	4828004	0	True				
ANR	4828015	ParameterType	upd_p		4828004	0					
ANR	4828016	Identifier	upd		4828004	1					
ANR	4828017	CFGEntryNode	ENTRY		4828004		True				
ANR	4828018	CFGExitNode	EXIT		4828004		True				
ANR	4828019	Symbol	upd		4828004						
ANR	4828020	Function	upd_pxlrev	7412:0:261157:263201							
ANR	4828021	FunctionDef	upd_pxlrev (upd_p upd)		4828020	0					
ANR	4828022	CompoundStatement		7414:0:261195:263201	4828020	0					
ANR	4828023	IdentifierDeclStatement	const uint width = upd -> pwidth < upd -> gswidth ? upd -> pwidth : upd -> gswidth ;	7415:3:261200:261274	4828020	0	True				
ANR	4828024	IdentifierDecl	width = upd -> pwidth < upd -> gswidth ? upd -> pwidth : upd -> gswidth		4828020	0					
ANR	4828025	IdentifierDeclType	const uint		4828020	0					
ANR	4828026	Identifier	width		4828020	1					
ANR	4828027	AssignmentExpression	width = upd -> pwidth < upd -> gswidth ? upd -> pwidth : upd -> gswidth		4828020	2		=			
ANR	4828028	Identifier	width		4828020	0					
ANR	4828029	ConditionalExpression	upd -> pwidth < upd -> gswidth ? upd -> pwidth : upd -> gswidth		4828020	1					
ANR	4828030	Condition	upd -> pwidth < upd -> gswidth		4828020	0					
ANR	4828031	RelationalExpression	upd -> pwidth < upd -> gswidth		4828020	0		<			
ANR	4828032	PtrMemberAccess	upd -> pwidth		4828020	0					
ANR	4828033	Identifier	upd		4828020	0					
ANR	4828034	Identifier	pwidth		4828020	1					
ANR	4828035	PtrMemberAccess	upd -> gswidth		4828020	1					
ANR	4828036	Identifier	upd		4828020	0					
ANR	4828037	Identifier	gswidth		4828020	1					
ANR	4828038	PtrMemberAccess	upd -> pwidth		4828020	1					
ANR	4828039	Identifier	upd		4828020	0					
ANR	4828040	Identifier	pwidth		4828020	1					
ANR	4828041	PtrMemberAccess	upd -> gswidth		4828020	2					
ANR	4828042	Identifier	upd		4828020	0					
ANR	4828043	Identifier	gswidth		4828020	1					
ANR	4828044	IfStatement	if ( ! ( upd -> pxlptr = upd -> gsscan ) )		4828020	1					
ANR	4828045	Condition	! ( upd -> pxlptr = upd -> gsscan )	7417:6:261283:261310	4828020	0	True				
ANR	4828046	UnaryOperationExpression	! ( upd -> pxlptr = upd -> gsscan )		4828020	0					
ANR	4828047	UnaryOperator	!		4828020	0					
ANR	4828048	AssignmentExpression	upd -> pxlptr = upd -> gsscan		4828020	1		=			
ANR	4828049	PtrMemberAccess	upd -> pxlptr		4828020	0					
ANR	4828050	Identifier	upd		4828020	0					
ANR	4828051	Identifier	pxlptr		4828020	1					
ANR	4828052	PtrMemberAccess	upd -> gsscan		4828020	1					
ANR	4828053	Identifier	upd		4828020	0					
ANR	4828054	Identifier	gsscan		4828020	1					
ANR	4828055	CompoundStatement		4:36:117:117	4828020	1					
ANR	4828056	ExpressionStatement	upd -> pxlget = upd_pxlgetnix	7419:6:261322:261349	4828020	0	True				
ANR	4828057	AssignmentExpression	upd -> pxlget = upd_pxlgetnix		4828020	0		=			
ANR	4828058	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828059	Identifier	upd		4828020	0					
ANR	4828060	Identifier	pxlget		4828020	1					
ANR	4828061	Identifier	upd_pxlgetnix		4828020	1					
ANR	4828062	ElseStatement	else		4828020	0					
ANR	4828063	CompoundStatement		9:6:174:245	4828020	0					
ANR	4828064	IdentifierDeclStatement	uint32_t ofs = ( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] * ( width - 1 ) ;	7422:6:261370:261441	4828020	0	True				
ANR	4828065	IdentifierDecl	ofs = ( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] * ( width - 1 )		4828020	0					
ANR	4828066	IdentifierDeclType	uint32_t		4828020	0					
ANR	4828067	Identifier	ofs		4828020	1					
ANR	4828068	AssignmentExpression	ofs = ( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] * ( width - 1 )		4828020	2		=			
ANR	4828069	Identifier	ofs		4828020	0					
ANR	4828070	MultiplicativeExpression	( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] * ( width - 1 )		4828020	1		*			
ANR	4828071	CastExpression	( uint32_t ) upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		4828020	0					
ANR	4828072	CastTarget	uint32_t		4828020	0					
ANR	4828073	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		4828020	1					
ANR	4828074	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		4828020	0					
ANR	4828075	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		4828020	0					
ANR	4828076	PtrMemberAccess	upd -> int_a		4828020	0					
ANR	4828077	Identifier	upd		4828020	0					
ANR	4828078	Identifier	int_a		4828020	1					
ANR	4828079	Identifier	IA_COLOR_INFO		4828020	1					
ANR	4828080	Identifier	data		4828020	1					
ANR	4828081	PrimaryExpression	1		4828020	1					
ANR	4828082	AdditiveExpression	width - 1		4828020	1		-			
ANR	4828083	Identifier	width		4828020	0					
ANR	4828084	PrimaryExpression	1		4828020	1					
ANR	4828085	ExpressionStatement	upd -> pxlptr += ofs >> 3	7424:6:261450:261471	4828020	1	True				
ANR	4828086	AssignmentExpression	upd -> pxlptr += ofs >> 3		4828020	0		+=			
ANR	4828087	PtrMemberAccess	upd -> pxlptr		4828020	0					
ANR	4828088	Identifier	upd		4828020	0					
ANR	4828089	Identifier	pxlptr		4828020	1					
ANR	4828090	ShiftExpression	ofs >> 3		4828020	1		>>			
ANR	4828091	Identifier	ofs		4828020	0					
ANR	4828092	PrimaryExpression	3		4828020	1					
ANR	4828093	ExpressionStatement	ofs &= 7	7426:6:261480:261488	4828020	2	True				
ANR	4828094	AssignmentExpression	ofs &= 7		4828020	0		&=			
ANR	4828095	Identifier	ofs		4828020	0					
ANR	4828096	PrimaryExpression	7		4828020	1					
ANR	4828097	SwitchStatement	switch ( upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )		4828020	3					
ANR	4828098	Condition	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]	7428:13:261504:261536	4828020	0	True				
ANR	4828099	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		4828020	0					
ANR	4828100	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		4828020	0					
ANR	4828101	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		4828020	0					
ANR	4828102	PtrMemberAccess	upd -> int_a		4828020	0					
ANR	4828103	Identifier	upd		4828020	0					
ANR	4828104	Identifier	int_a		4828020	1					
ANR	4828105	Identifier	IA_COLOR_INFO		4828020	1					
ANR	4828106	Identifier	data		4828020	1					
ANR	4828107	PrimaryExpression	1		4828020	1					
ANR	4828108	CompoundStatement		15:48:343:343	4828020	1					
ANR	4828109	Label	case 1 :	7429:9:261550:261557	4828020	0	True				
ANR	4828110	SwitchStatement	switch ( ofs )		4828020	1					
ANR	4828111	Condition	ofs	7429:25:261566:261568	4828020	0	True				
ANR	4828112	Identifier	ofs		4828020	0					
ANR	4828113	CompoundStatement		16:30:375:375	4828020	1					
ANR	4828114	Label	case 0 :	7430:15:261588:261594	4828020	0	True				
ANR	4828115	ExpressionStatement	upd -> pxlget = upd_pxlget1r1	7430:24:261597:261624	4828020	1	True				
ANR	4828116	AssignmentExpression	upd -> pxlget = upd_pxlget1r1		4828020	0		=			
ANR	4828117	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828118	Identifier	upd		4828020	0					
ANR	4828119	Identifier	pxlget		4828020	1					
ANR	4828120	Identifier	upd_pxlget1r1		4828020	1					
ANR	4828121	BreakStatement	break ;	7430:53:261626:261631	4828020	2	True				
ANR	4828122	Label	case 1 :	7431:15:261648:261654	4828020	3	True				
ANR	4828123	ExpressionStatement	upd -> pxlget = upd_pxlget1r2	7431:24:261657:261684	4828020	4	True				
ANR	4828124	AssignmentExpression	upd -> pxlget = upd_pxlget1r2		4828020	0		=			
ANR	4828125	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828126	Identifier	upd		4828020	0					
ANR	4828127	Identifier	pxlget		4828020	1					
ANR	4828128	Identifier	upd_pxlget1r2		4828020	1					
ANR	4828129	BreakStatement	break ;	7431:53:261686:261691	4828020	5	True				
ANR	4828130	Label	case 2 :	7432:15:261708:261714	4828020	6	True				
ANR	4828131	ExpressionStatement	upd -> pxlget = upd_pxlget1r3	7432:24:261717:261744	4828020	7	True				
ANR	4828132	AssignmentExpression	upd -> pxlget = upd_pxlget1r3		4828020	0		=			
ANR	4828133	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828134	Identifier	upd		4828020	0					
ANR	4828135	Identifier	pxlget		4828020	1					
ANR	4828136	Identifier	upd_pxlget1r3		4828020	1					
ANR	4828137	BreakStatement	break ;	7432:53:261746:261751	4828020	8	True				
ANR	4828138	Label	case 3 :	7433:15:261768:261774	4828020	9	True				
ANR	4828139	ExpressionStatement	upd -> pxlget = upd_pxlget1r4	7433:24:261777:261804	4828020	10	True				
ANR	4828140	AssignmentExpression	upd -> pxlget = upd_pxlget1r4		4828020	0		=			
ANR	4828141	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828142	Identifier	upd		4828020	0					
ANR	4828143	Identifier	pxlget		4828020	1					
ANR	4828144	Identifier	upd_pxlget1r4		4828020	1					
ANR	4828145	BreakStatement	break ;	7433:53:261806:261811	4828020	11	True				
ANR	4828146	Label	case 4 :	7434:15:261828:261834	4828020	12	True				
ANR	4828147	ExpressionStatement	upd -> pxlget = upd_pxlget1r5	7434:24:261837:261864	4828020	13	True				
ANR	4828148	AssignmentExpression	upd -> pxlget = upd_pxlget1r5		4828020	0		=			
ANR	4828149	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828150	Identifier	upd		4828020	0					
ANR	4828151	Identifier	pxlget		4828020	1					
ANR	4828152	Identifier	upd_pxlget1r5		4828020	1					
ANR	4828153	BreakStatement	break ;	7434:53:261866:261871	4828020	14	True				
ANR	4828154	Label	case 5 :	7435:15:261888:261894	4828020	15	True				
ANR	4828155	ExpressionStatement	upd -> pxlget = upd_pxlget1r6	7435:24:261897:261924	4828020	16	True				
ANR	4828156	AssignmentExpression	upd -> pxlget = upd_pxlget1r6		4828020	0		=			
ANR	4828157	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828158	Identifier	upd		4828020	0					
ANR	4828159	Identifier	pxlget		4828020	1					
ANR	4828160	Identifier	upd_pxlget1r6		4828020	1					
ANR	4828161	BreakStatement	break ;	7435:53:261926:261931	4828020	17	True				
ANR	4828162	Label	case 6 :	7436:15:261948:261954	4828020	18	True				
ANR	4828163	ExpressionStatement	upd -> pxlget = upd_pxlget1r7	7436:24:261957:261984	4828020	19	True				
ANR	4828164	AssignmentExpression	upd -> pxlget = upd_pxlget1r7		4828020	0		=			
ANR	4828165	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828166	Identifier	upd		4828020	0					
ANR	4828167	Identifier	pxlget		4828020	1					
ANR	4828168	Identifier	upd_pxlget1r7		4828020	1					
ANR	4828169	BreakStatement	break ;	7436:53:261986:261991	4828020	20	True				
ANR	4828170	Label	case 7 :	7437:15:262008:262014	4828020	21	True				
ANR	4828171	ExpressionStatement	upd -> pxlget = upd_pxlget1r8	7437:24:262017:262044	4828020	22	True				
ANR	4828172	AssignmentExpression	upd -> pxlget = upd_pxlget1r8		4828020	0		=			
ANR	4828173	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828174	Identifier	upd		4828020	0					
ANR	4828175	Identifier	pxlget		4828020	1					
ANR	4828176	Identifier	upd_pxlget1r8		4828020	1					
ANR	4828177	BreakStatement	break ;	7437:53:262046:262051	4828020	23	True				
ANR	4828178	BreakStatement	break ;	7438:14:262067:262072	4828020	2	True				
ANR	4828179	Label	case 2 :	7439:9:262083:262090	4828020	3	True				
ANR	4828180	SwitchStatement	switch ( ofs )		4828020	4					
ANR	4828181	Condition	ofs	7439:25:262099:262101	4828020	0	True				
ANR	4828182	Identifier	ofs		4828020	0					
ANR	4828183	CompoundStatement		26:30:908:908	4828020	1					
ANR	4828184	Label	case 0 :	7440:15:262121:262127	4828020	0	True				
ANR	4828185	ExpressionStatement	upd -> pxlget = upd_pxlget2r1	7440:24:262130:262157	4828020	1	True				
ANR	4828186	AssignmentExpression	upd -> pxlget = upd_pxlget2r1		4828020	0		=			
ANR	4828187	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828188	Identifier	upd		4828020	0					
ANR	4828189	Identifier	pxlget		4828020	1					
ANR	4828190	Identifier	upd_pxlget2r1		4828020	1					
ANR	4828191	BreakStatement	break ;	7440:53:262159:262164	4828020	2	True				
ANR	4828192	Label	case 2 :	7441:15:262181:262187	4828020	3	True				
ANR	4828193	ExpressionStatement	upd -> pxlget = upd_pxlget2r2	7441:24:262190:262217	4828020	4	True				
ANR	4828194	AssignmentExpression	upd -> pxlget = upd_pxlget2r2		4828020	0		=			
ANR	4828195	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828196	Identifier	upd		4828020	0					
ANR	4828197	Identifier	pxlget		4828020	1					
ANR	4828198	Identifier	upd_pxlget2r2		4828020	1					
ANR	4828199	BreakStatement	break ;	7441:53:262219:262224	4828020	5	True				
ANR	4828200	Label	case 4 :	7442:15:262241:262247	4828020	6	True				
ANR	4828201	ExpressionStatement	upd -> pxlget = upd_pxlget2r3	7442:24:262250:262277	4828020	7	True				
ANR	4828202	AssignmentExpression	upd -> pxlget = upd_pxlget2r3		4828020	0		=			
ANR	4828203	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828204	Identifier	upd		4828020	0					
ANR	4828205	Identifier	pxlget		4828020	1					
ANR	4828206	Identifier	upd_pxlget2r3		4828020	1					
ANR	4828207	BreakStatement	break ;	7442:53:262279:262284	4828020	8	True				
ANR	4828208	Label	case 6 :	7443:15:262301:262307	4828020	9	True				
ANR	4828209	ExpressionStatement	upd -> pxlget = upd_pxlget2r4	7443:24:262310:262337	4828020	10	True				
ANR	4828210	AssignmentExpression	upd -> pxlget = upd_pxlget2r4		4828020	0		=			
ANR	4828211	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828212	Identifier	upd		4828020	0					
ANR	4828213	Identifier	pxlget		4828020	1					
ANR	4828214	Identifier	upd_pxlget2r4		4828020	1					
ANR	4828215	BreakStatement	break ;	7443:53:262339:262344	4828020	11	True				
ANR	4828216	BreakStatement	break ;	7444:14:262360:262365	4828020	5	True				
ANR	4828217	Label	case 4 :	7445:9:262376:262383	4828020	6	True				
ANR	4828218	SwitchStatement	switch ( ofs )		4828020	7					
ANR	4828219	Condition	ofs	7445:25:262392:262394	4828020	0	True				
ANR	4828220	Identifier	ofs		4828020	0					
ANR	4828221	CompoundStatement		32:30:1201:1201	4828020	1					
ANR	4828222	Label	case 0 :	7446:15:262414:262420	4828020	0	True				
ANR	4828223	ExpressionStatement	upd -> pxlget = upd_pxlget4r1	7446:24:262423:262450	4828020	1	True				
ANR	4828224	AssignmentExpression	upd -> pxlget = upd_pxlget4r1		4828020	0		=			
ANR	4828225	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828226	Identifier	upd		4828020	0					
ANR	4828227	Identifier	pxlget		4828020	1					
ANR	4828228	Identifier	upd_pxlget4r1		4828020	1					
ANR	4828229	BreakStatement	break ;	7446:53:262452:262457	4828020	2	True				
ANR	4828230	Label	case 4 :	7447:15:262474:262480	4828020	3	True				
ANR	4828231	ExpressionStatement	upd -> pxlget = upd_pxlget4r2	7447:24:262483:262510	4828020	4	True				
ANR	4828232	AssignmentExpression	upd -> pxlget = upd_pxlget4r2		4828020	0		=			
ANR	4828233	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828234	Identifier	upd		4828020	0					
ANR	4828235	Identifier	pxlget		4828020	1					
ANR	4828236	Identifier	upd_pxlget4r2		4828020	1					
ANR	4828237	BreakStatement	break ;	7447:53:262512:262517	4828020	5	True				
ANR	4828238	BreakStatement	break ;	7448:14:262533:262538	4828020	8	True				
ANR	4828239	Label	case 8 :	7449:9:262549:262556	4828020	9	True				
ANR	4828240	ExpressionStatement	upd -> pxlget = upd_pxlget8r	7449:18:262558:262584	4828020	10	True				
ANR	4828241	AssignmentExpression	upd -> pxlget = upd_pxlget8r		4828020	0		=			
ANR	4828242	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828243	Identifier	upd		4828020	0					
ANR	4828244	Identifier	pxlget		4828020	1					
ANR	4828245	Identifier	upd_pxlget8r		4828020	1					
ANR	4828246	BreakStatement	break ;	7449:47:262587:262592	4828020	11	True				
ANR	4828247	Label	case 16 :	7450:9:262603:262610	4828020	12	True				
ANR	4828248	ExpressionStatement	upd -> pxlget = upd_pxlget16r	7451:12:262624:262652	4828020	13	True				
ANR	4828249	AssignmentExpression	upd -> pxlget = upd_pxlget16r		4828020	0		=			
ANR	4828250	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828251	Identifier	upd		4828020	0					
ANR	4828252	Identifier	pxlget		4828020	1					
ANR	4828253	Identifier	upd_pxlget16r		4828020	1					
ANR	4828254	ExpressionStatement	upd -> pxlptr += 1	7452:12:262666:262682	4828020	14	True				
ANR	4828255	AssignmentExpression	upd -> pxlptr += 1		4828020	0		+=			
ANR	4828256	PtrMemberAccess	upd -> pxlptr		4828020	0					
ANR	4828257	Identifier	upd		4828020	0					
ANR	4828258	Identifier	pxlptr		4828020	1					
ANR	4828259	PrimaryExpression	1		4828020	1					
ANR	4828260	BreakStatement	break ;	7453:12:262696:262701	4828020	15	True				
ANR	4828261	Label	case 24 :	7454:9:262712:262719	4828020	16	True				
ANR	4828262	ExpressionStatement	upd -> pxlget = upd_pxlget24r	7455:12:262733:262760	4828020	17	True				
ANR	4828263	AssignmentExpression	upd -> pxlget = upd_pxlget24r		4828020	0		=			
ANR	4828264	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828265	Identifier	upd		4828020	0					
ANR	4828266	Identifier	pxlget		4828020	1					
ANR	4828267	Identifier	upd_pxlget24r		4828020	1					
ANR	4828268	ExpressionStatement	upd -> pxlptr += 2	7456:12:262774:262790	4828020	18	True				
ANR	4828269	AssignmentExpression	upd -> pxlptr += 2		4828020	0		+=			
ANR	4828270	PtrMemberAccess	upd -> pxlptr		4828020	0					
ANR	4828271	Identifier	upd		4828020	0					
ANR	4828272	Identifier	pxlptr		4828020	1					
ANR	4828273	PrimaryExpression	2		4828020	1					
ANR	4828274	BreakStatement	break ;	7457:12:262804:262809	4828020	19	True				
ANR	4828275	Label	case 32 :	7458:9:262820:262827	4828020	20	True				
ANR	4828276	ExpressionStatement	upd -> pxlget = upd_pxlget32r	7459:12:262841:262868	4828020	21	True				
ANR	4828277	AssignmentExpression	upd -> pxlget = upd_pxlget32r		4828020	0		=			
ANR	4828278	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828279	Identifier	upd		4828020	0					
ANR	4828280	Identifier	pxlget		4828020	1					
ANR	4828281	Identifier	upd_pxlget32r		4828020	1					
ANR	4828282	ExpressionStatement	upd -> pxlptr += 3	7460:12:262882:262898	4828020	22	True				
ANR	4828283	AssignmentExpression	upd -> pxlptr += 3		4828020	0		+=			
ANR	4828284	PtrMemberAccess	upd -> pxlptr		4828020	0					
ANR	4828285	Identifier	upd		4828020	0					
ANR	4828286	Identifier	pxlptr		4828020	1					
ANR	4828287	PrimaryExpression	3		4828020	1					
ANR	4828288	BreakStatement	break ;	7461:12:262912:262917	4828020	23	True				
ANR	4828289	Label	default :	7462:9:262928:262935	4828020	24	True				
ANR	4828290	Identifier	default		4828020	0					
ANR	4828291	ExpressionStatement	"errprintf ( upd -> memory , ""upd_pxlrev: unsupported depth (%d)\\n"" , upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )"	7464:11:262979:263097	4828020	25	True				
ANR	4828292	CallExpression	"errprintf ( upd -> memory , ""upd_pxlrev: unsupported depth (%d)\\n"" , upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ] )"		4828020	0					
ANR	4828293	Callee	errprintf		4828020	0					
ANR	4828294	Identifier	errprintf		4828020	0					
ANR	4828295	ArgumentList	upd -> memory		4828020	1					
ANR	4828296	Argument	upd -> memory		4828020	0					
ANR	4828297	PtrMemberAccess	upd -> memory		4828020	0					
ANR	4828298	Identifier	upd		4828020	0					
ANR	4828299	Identifier	memory		4828020	1					
ANR	4828300	Argument	"""upd_pxlrev: unsupported depth (%d)\\n"""		4828020	1					
ANR	4828301	PrimaryExpression	"""upd_pxlrev: unsupported depth (%d)\\n"""		4828020	0					
ANR	4828302	Argument	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		4828020	2					
ANR	4828303	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ] . data [ 1 ]		4828020	0					
ANR	4828304	MemberAccess	upd -> int_a [ IA_COLOR_INFO ] . data		4828020	0					
ANR	4828305	ArrayIndexing	upd -> int_a [ IA_COLOR_INFO ]		4828020	0					
ANR	4828306	PtrMemberAccess	upd -> int_a		4828020	0					
ANR	4828307	Identifier	upd		4828020	0					
ANR	4828308	Identifier	int_a		4828020	1					
ANR	4828309	Identifier	IA_COLOR_INFO		4828020	1					
ANR	4828310	Identifier	data		4828020	1					
ANR	4828311	PrimaryExpression	1		4828020	1					
ANR	4828312	ExpressionStatement	upd -> pxlget = upd_pxlgetnix	7467:11:263117:263144	4828020	26	True				
ANR	4828313	AssignmentExpression	upd -> pxlget = upd_pxlgetnix		4828020	0		=			
ANR	4828314	PtrMemberAccess	upd -> pxlget		4828020	0					
ANR	4828315	Identifier	upd		4828020	0					
ANR	4828316	Identifier	pxlget		4828020	1					
ANR	4828317	Identifier	upd_pxlgetnix		4828020	1					
ANR	4828318	BreakStatement	break ;	7468:11:263157:263162	4828020	27	True				
ANR	4828319	ReturnStatement	return ( uint32_t ) 0 ;	7471:3:263180:263199	4828020	2	True				
ANR	4828320	CastExpression	( uint32_t ) 0		4828020	0					
ANR	4828321	CastTarget	uint32_t		4828020	0					
ANR	4828322	PrimaryExpression	0		4828020	1					
ANR	4828323	ReturnType	static uint32_t		4828020	1					
ANR	4828324	Identifier	upd_pxlrev		4828020	2					
ANR	4828325	ParameterList	upd_p upd		4828020	3					
ANR	4828326	Parameter	upd_p upd	7413:11:261184:261192	4828020	0	True				
ANR	4828327	ParameterType	upd_p		4828020	0					
ANR	4828328	Identifier	upd		4828020	1					
ANR	4828329	CFGEntryNode	ENTRY		4828020		True				
ANR	4828330	CFGExitNode	EXIT		4828020		True				
ANR	4828331	Symbol	upd -> pxlptr		4828020						
ANR	4828332	Symbol	* upd -> int_a		4828020						
ANR	4828333	Symbol	upd -> gsscan		4828020						
ANR	4828334	Symbol	upd -> int_a [ IA_COLOR_INFO ] . data		4828020						
ANR	4828335	Symbol	upd_pxlgetnix		4828020						
ANR	4828336	Symbol	* upd		4828020						
ANR	4828337	Symbol	upd -> int_a		4828020						
ANR	4828338	Symbol	upd -> memory		4828020						
ANR	4828339	Symbol	* * * upd		4828020						
ANR	4828340	Symbol	upd		4828020						
ANR	4828341	Symbol	upd -> pxlget		4828020						
ANR	4828342	Symbol	upd_pxlget8r		4828020						
ANR	4828343	Symbol	* * IA_COLOR_INFO		4828020						
ANR	4828344	Symbol	upd -> gswidth		4828020						
ANR	4828345	Symbol	IA_COLOR_INFO		4828020						
ANR	4828346	Symbol	* IA_COLOR_INFO		4828020						
ANR	4828347	Symbol	* * upd -> int_a		4828020						
ANR	4828348	Symbol	* upd -> int_a [ IA_COLOR_INFO ] . data		4828020						
ANR	4828349	Symbol	upd_pxlget16r		4828020						
ANR	4828350	Symbol	width		4828020						
ANR	4828351	Symbol	upd_pxlget1r8		4828020						
ANR	4828352	Symbol	upd_pxlget1r7		4828020						
ANR	4828353	Symbol	upd_pxlget1r6		4828020						
ANR	4828354	Symbol	upd_pxlget1r5		4828020						
ANR	4828355	Symbol	upd_pxlget2r4		4828020						
ANR	4828356	Symbol	upd_pxlget4r2		4828020						
ANR	4828357	Symbol	upd_pxlget1r4		4828020						
ANR	4828358	Symbol	upd_pxlget2r3		4828020						
ANR	4828359	Symbol	upd_pxlget4r1		4828020						
ANR	4828360	Symbol	upd_pxlget32r		4828020						
ANR	4828361	Symbol	upd -> pwidth		4828020						
ANR	4828362	Symbol	ofs		4828020						
ANR	4828363	Symbol	* * upd		4828020						
ANR	4828364	Symbol	upd_pxlget1r3		4828020						
ANR	4828365	Symbol	upd_pxlget2r2		4828020						
ANR	4828366	Symbol	upd_pxlget1r2		4828020						
ANR	4828367	Symbol	upd_pxlget2r1		4828020						
ANR	4828368	Symbol	upd_pxlget1r1		4828020						
ANR	4828369	Symbol	upd_pxlget24r		4828020						
ANR	4828370	Function	upd_pxlget1r1	7476:0:263225:263363							
ANR	4828371	FunctionDef	upd_pxlget1r1 (upd_p upd)		4828370	0					
ANR	4828372	CompoundStatement		7478:0:263266:263363	4828370	0					
ANR	4828373	ExpressionStatement	upd -> pxlget = upd_pxlget1r8	7479:3:263271:263298	4828370	0	True				
ANR	4828374	AssignmentExpression	upd -> pxlget = upd_pxlget1r8		4828370	0		=			
ANR	4828375	PtrMemberAccess	upd -> pxlget		4828370	0					
ANR	4828376	Identifier	upd		4828370	0					
ANR	4828377	Identifier	pxlget		4828370	1					
ANR	4828378	Identifier	upd_pxlget1r8		4828370	1					
ANR	4828379	ReturnStatement	return * upd -> pxlptr -- & 0x80 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7480:3:263303:263361	4828370	1	True				
ANR	4828380	ConditionalExpression	* upd -> pxlptr -- & 0x80 ? ( uint32_t ) 1 : ( uint32_t ) 0		4828370	0					
ANR	4828381	Condition	* upd -> pxlptr -- & 0x80		4828370	0					
ANR	4828382	BitAndExpression	* upd -> pxlptr -- & 0x80		4828370	0		&			
ANR	4828383	UnaryOperationExpression	* upd -> pxlptr --		4828370	0					
ANR	4828384	UnaryOperator	*		4828370	0					
ANR	4828385	PostIncDecOperationExpression	upd -> pxlptr --		4828370	1					
ANR	4828386	PtrMemberAccess	upd -> pxlptr		4828370	0					
ANR	4828387	Identifier	upd		4828370	0					
ANR	4828388	Identifier	pxlptr		4828370	1					
ANR	4828389	IncDec	--		4828370	1					
ANR	4828390	PrimaryExpression	0x80		4828370	1					
ANR	4828391	CastExpression	( uint32_t ) 1		4828370	1					
ANR	4828392	CastTarget	uint32_t		4828370	0					
ANR	4828393	PrimaryExpression	1		4828370	1					
ANR	4828394	CastExpression	( uint32_t ) 0		4828370	2					
ANR	4828395	CastTarget	uint32_t		4828370	0					
ANR	4828396	PrimaryExpression	0		4828370	1					
ANR	4828397	ReturnType	static uint32_t		4828370	1					
ANR	4828398	Identifier	upd_pxlget1r1		4828370	2					
ANR	4828399	ParameterList	upd_p upd		4828370	3					
ANR	4828400	Parameter	upd_p upd	7477:14:263255:263263	4828370	0	True				
ANR	4828401	ParameterType	upd_p		4828370	0					
ANR	4828402	Identifier	upd		4828370	1					
ANR	4828403	CFGEntryNode	ENTRY		4828370		True				
ANR	4828404	CFGExitNode	EXIT		4828370		True				
ANR	4828405	Symbol	upd -> pxlptr		4828370						
ANR	4828406	Symbol	* upd		4828370						
ANR	4828407	Symbol	* upd -> pxlptr --		4828370						
ANR	4828408	Symbol	upd		4828370						
ANR	4828409	Symbol	upd -> pxlget		4828370						
ANR	4828410	Symbol	upd_pxlget1r8		4828370						
ANR	4828411	Function	upd_pxlget1r2	7483:0:263366:263504							
ANR	4828412	FunctionDef	upd_pxlget1r2 (upd_p upd)		4828411	0					
ANR	4828413	CompoundStatement		7485:0:263407:263504	4828411	0					
ANR	4828414	ExpressionStatement	upd -> pxlget = upd_pxlget1r1	7486:3:263412:263439	4828411	0	True				
ANR	4828415	AssignmentExpression	upd -> pxlget = upd_pxlget1r1		4828411	0		=			
ANR	4828416	PtrMemberAccess	upd -> pxlget		4828411	0					
ANR	4828417	Identifier	upd		4828411	0					
ANR	4828418	Identifier	pxlget		4828411	1					
ANR	4828419	Identifier	upd_pxlget1r1		4828411	1					
ANR	4828420	ReturnStatement	return * upd -> pxlptr & 0x40 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7487:3:263444:263502	4828411	1	True				
ANR	4828421	ConditionalExpression	* upd -> pxlptr & 0x40 ? ( uint32_t ) 1 : ( uint32_t ) 0		4828411	0					
ANR	4828422	Condition	* upd -> pxlptr & 0x40		4828411	0					
ANR	4828423	BitAndExpression	* upd -> pxlptr & 0x40		4828411	0		&			
ANR	4828424	UnaryOperationExpression	* upd -> pxlptr		4828411	0					
ANR	4828425	UnaryOperator	*		4828411	0					
ANR	4828426	PtrMemberAccess	upd -> pxlptr		4828411	1					
ANR	4828427	Identifier	upd		4828411	0					
ANR	4828428	Identifier	pxlptr		4828411	1					
ANR	4828429	PrimaryExpression	0x40		4828411	1					
ANR	4828430	CastExpression	( uint32_t ) 1		4828411	1					
ANR	4828431	CastTarget	uint32_t		4828411	0					
ANR	4828432	PrimaryExpression	1		4828411	1					
ANR	4828433	CastExpression	( uint32_t ) 0		4828411	2					
ANR	4828434	CastTarget	uint32_t		4828411	0					
ANR	4828435	PrimaryExpression	0		4828411	1					
ANR	4828436	ReturnType	static uint32_t		4828411	1					
ANR	4828437	Identifier	upd_pxlget1r2		4828411	2					
ANR	4828438	ParameterList	upd_p upd		4828411	3					
ANR	4828439	Parameter	upd_p upd	7484:14:263396:263404	4828411	0	True				
ANR	4828440	ParameterType	upd_p		4828411	0					
ANR	4828441	Identifier	upd		4828411	1					
ANR	4828442	CFGEntryNode	ENTRY		4828411		True				
ANR	4828443	CFGExitNode	EXIT		4828411		True				
ANR	4828444	Symbol	upd -> pxlptr		4828411						
ANR	4828445	Symbol	* upd		4828411						
ANR	4828446	Symbol	* upd -> pxlptr		4828411						
ANR	4828447	Symbol	upd		4828411						
ANR	4828448	Symbol	upd -> pxlget		4828411						
ANR	4828449	Symbol	* * upd		4828411						
ANR	4828450	Symbol	upd_pxlget1r1		4828411						
ANR	4828451	Function	upd_pxlget1r3	7490:0:263507:263645							
ANR	4828452	FunctionDef	upd_pxlget1r3 (upd_p upd)		4828451	0					
ANR	4828453	CompoundStatement		7492:0:263548:263645	4828451	0					
ANR	4828454	ExpressionStatement	upd -> pxlget = upd_pxlget1r2	7493:3:263553:263580	4828451	0	True				
ANR	4828455	AssignmentExpression	upd -> pxlget = upd_pxlget1r2		4828451	0		=			
ANR	4828456	PtrMemberAccess	upd -> pxlget		4828451	0					
ANR	4828457	Identifier	upd		4828451	0					
ANR	4828458	Identifier	pxlget		4828451	1					
ANR	4828459	Identifier	upd_pxlget1r2		4828451	1					
ANR	4828460	ReturnStatement	return * upd -> pxlptr & 0x20 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7494:3:263585:263643	4828451	1	True				
ANR	4828461	ConditionalExpression	* upd -> pxlptr & 0x20 ? ( uint32_t ) 1 : ( uint32_t ) 0		4828451	0					
ANR	4828462	Condition	* upd -> pxlptr & 0x20		4828451	0					
ANR	4828463	BitAndExpression	* upd -> pxlptr & 0x20		4828451	0		&			
ANR	4828464	UnaryOperationExpression	* upd -> pxlptr		4828451	0					
ANR	4828465	UnaryOperator	*		4828451	0					
ANR	4828466	PtrMemberAccess	upd -> pxlptr		4828451	1					
ANR	4828467	Identifier	upd		4828451	0					
ANR	4828468	Identifier	pxlptr		4828451	1					
ANR	4828469	PrimaryExpression	0x20		4828451	1					
ANR	4828470	CastExpression	( uint32_t ) 1		4828451	1					
ANR	4828471	CastTarget	uint32_t		4828451	0					
ANR	4828472	PrimaryExpression	1		4828451	1					
ANR	4828473	CastExpression	( uint32_t ) 0		4828451	2					
ANR	4828474	CastTarget	uint32_t		4828451	0					
ANR	4828475	PrimaryExpression	0		4828451	1					
ANR	4828476	ReturnType	static uint32_t		4828451	1					
ANR	4828477	Identifier	upd_pxlget1r3		4828451	2					
ANR	4828478	ParameterList	upd_p upd		4828451	3					
ANR	4828479	Parameter	upd_p upd	7491:14:263537:263545	4828451	0	True				
ANR	4828480	ParameterType	upd_p		4828451	0					
ANR	4828481	Identifier	upd		4828451	1					
ANR	4828482	CFGEntryNode	ENTRY		4828451		True				
ANR	4828483	CFGExitNode	EXIT		4828451		True				
ANR	4828484	Symbol	upd -> pxlptr		4828451						
ANR	4828485	Symbol	* upd		4828451						
ANR	4828486	Symbol	* upd -> pxlptr		4828451						
ANR	4828487	Symbol	upd		4828451						
ANR	4828488	Symbol	upd -> pxlget		4828451						
ANR	4828489	Symbol	* * upd		4828451						
ANR	4828490	Symbol	upd_pxlget1r2		4828451						
ANR	4828491	Function	upd_pxlget1r4	7497:0:263648:263786							
ANR	4828492	FunctionDef	upd_pxlget1r4 (upd_p upd)		4828491	0					
ANR	4828493	CompoundStatement		7499:0:263689:263786	4828491	0					
ANR	4828494	ExpressionStatement	upd -> pxlget = upd_pxlget1r3	7500:3:263694:263721	4828491	0	True				
ANR	4828495	AssignmentExpression	upd -> pxlget = upd_pxlget1r3		4828491	0		=			
ANR	4828496	PtrMemberAccess	upd -> pxlget		4828491	0					
ANR	4828497	Identifier	upd		4828491	0					
ANR	4828498	Identifier	pxlget		4828491	1					
ANR	4828499	Identifier	upd_pxlget1r3		4828491	1					
ANR	4828500	ReturnStatement	return * upd -> pxlptr & 0x10 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7501:3:263726:263784	4828491	1	True				
ANR	4828501	ConditionalExpression	* upd -> pxlptr & 0x10 ? ( uint32_t ) 1 : ( uint32_t ) 0		4828491	0					
ANR	4828502	Condition	* upd -> pxlptr & 0x10		4828491	0					
ANR	4828503	BitAndExpression	* upd -> pxlptr & 0x10		4828491	0		&			
ANR	4828504	UnaryOperationExpression	* upd -> pxlptr		4828491	0					
ANR	4828505	UnaryOperator	*		4828491	0					
ANR	4828506	PtrMemberAccess	upd -> pxlptr		4828491	1					
ANR	4828507	Identifier	upd		4828491	0					
ANR	4828508	Identifier	pxlptr		4828491	1					
ANR	4828509	PrimaryExpression	0x10		4828491	1					
ANR	4828510	CastExpression	( uint32_t ) 1		4828491	1					
ANR	4828511	CastTarget	uint32_t		4828491	0					
ANR	4828512	PrimaryExpression	1		4828491	1					
ANR	4828513	CastExpression	( uint32_t ) 0		4828491	2					
ANR	4828514	CastTarget	uint32_t		4828491	0					
ANR	4828515	PrimaryExpression	0		4828491	1					
ANR	4828516	ReturnType	static uint32_t		4828491	1					
ANR	4828517	Identifier	upd_pxlget1r4		4828491	2					
ANR	4828518	ParameterList	upd_p upd		4828491	3					
ANR	4828519	Parameter	upd_p upd	7498:14:263678:263686	4828491	0	True				
ANR	4828520	ParameterType	upd_p		4828491	0					
ANR	4828521	Identifier	upd		4828491	1					
ANR	4828522	CFGEntryNode	ENTRY		4828491		True				
ANR	4828523	CFGExitNode	EXIT		4828491		True				
ANR	4828524	Symbol	upd -> pxlptr		4828491						
ANR	4828525	Symbol	* upd		4828491						
ANR	4828526	Symbol	* upd -> pxlptr		4828491						
ANR	4828527	Symbol	upd		4828491						
ANR	4828528	Symbol	upd -> pxlget		4828491						
ANR	4828529	Symbol	upd_pxlget1r3		4828491						
ANR	4828530	Symbol	* * upd		4828491						
ANR	4828531	Function	upd_pxlget1r5	7504:0:263789:263927							
ANR	4828532	FunctionDef	upd_pxlget1r5 (upd_p upd)		4828531	0					
ANR	4828533	CompoundStatement		7506:0:263830:263927	4828531	0					
ANR	4828534	ExpressionStatement	upd -> pxlget = upd_pxlget1r4	7507:3:263835:263862	4828531	0	True				
ANR	4828535	AssignmentExpression	upd -> pxlget = upd_pxlget1r4		4828531	0		=			
ANR	4828536	PtrMemberAccess	upd -> pxlget		4828531	0					
ANR	4828537	Identifier	upd		4828531	0					
ANR	4828538	Identifier	pxlget		4828531	1					
ANR	4828539	Identifier	upd_pxlget1r4		4828531	1					
ANR	4828540	ReturnStatement	return * upd -> pxlptr & 0x08 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7508:3:263867:263925	4828531	1	True				
ANR	4828541	ConditionalExpression	* upd -> pxlptr & 0x08 ? ( uint32_t ) 1 : ( uint32_t ) 0		4828531	0					
ANR	4828542	Condition	* upd -> pxlptr & 0x08		4828531	0					
ANR	4828543	BitAndExpression	* upd -> pxlptr & 0x08		4828531	0		&			
ANR	4828544	UnaryOperationExpression	* upd -> pxlptr		4828531	0					
ANR	4828545	UnaryOperator	*		4828531	0					
ANR	4828546	PtrMemberAccess	upd -> pxlptr		4828531	1					
ANR	4828547	Identifier	upd		4828531	0					
ANR	4828548	Identifier	pxlptr		4828531	1					
ANR	4828549	PrimaryExpression	0x08		4828531	1					
ANR	4828550	CastExpression	( uint32_t ) 1		4828531	1					
ANR	4828551	CastTarget	uint32_t		4828531	0					
ANR	4828552	PrimaryExpression	1		4828531	1					
ANR	4828553	CastExpression	( uint32_t ) 0		4828531	2					
ANR	4828554	CastTarget	uint32_t		4828531	0					
ANR	4828555	PrimaryExpression	0		4828531	1					
ANR	4828556	ReturnType	static uint32_t		4828531	1					
ANR	4828557	Identifier	upd_pxlget1r5		4828531	2					
ANR	4828558	ParameterList	upd_p upd		4828531	3					
ANR	4828559	Parameter	upd_p upd	7505:14:263819:263827	4828531	0	True				
ANR	4828560	ParameterType	upd_p		4828531	0					
ANR	4828561	Identifier	upd		4828531	1					
ANR	4828562	CFGEntryNode	ENTRY		4828531		True				
ANR	4828563	CFGExitNode	EXIT		4828531		True				
ANR	4828564	Symbol	upd -> pxlptr		4828531						
ANR	4828565	Symbol	* upd		4828531						
ANR	4828566	Symbol	* upd -> pxlptr		4828531						
ANR	4828567	Symbol	upd		4828531						
ANR	4828568	Symbol	upd -> pxlget		4828531						
ANR	4828569	Symbol	upd_pxlget1r4		4828531						
ANR	4828570	Symbol	* * upd		4828531						
ANR	4828571	Function	upd_pxlget1r6	7511:0:263930:264068							
ANR	4828572	FunctionDef	upd_pxlget1r6 (upd_p upd)		4828571	0					
ANR	4828573	CompoundStatement		7513:0:263971:264068	4828571	0					
ANR	4828574	ExpressionStatement	upd -> pxlget = upd_pxlget1r5	7514:3:263976:264003	4828571	0	True				
ANR	4828575	AssignmentExpression	upd -> pxlget = upd_pxlget1r5		4828571	0		=			
ANR	4828576	PtrMemberAccess	upd -> pxlget		4828571	0					
ANR	4828577	Identifier	upd		4828571	0					
ANR	4828578	Identifier	pxlget		4828571	1					
ANR	4828579	Identifier	upd_pxlget1r5		4828571	1					
ANR	4828580	ReturnStatement	return * upd -> pxlptr & 0x04 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7515:3:264008:264066	4828571	1	True				
ANR	4828581	ConditionalExpression	* upd -> pxlptr & 0x04 ? ( uint32_t ) 1 : ( uint32_t ) 0		4828571	0					
ANR	4828582	Condition	* upd -> pxlptr & 0x04		4828571	0					
ANR	4828583	BitAndExpression	* upd -> pxlptr & 0x04		4828571	0		&			
ANR	4828584	UnaryOperationExpression	* upd -> pxlptr		4828571	0					
ANR	4828585	UnaryOperator	*		4828571	0					
ANR	4828586	PtrMemberAccess	upd -> pxlptr		4828571	1					
ANR	4828587	Identifier	upd		4828571	0					
ANR	4828588	Identifier	pxlptr		4828571	1					
ANR	4828589	PrimaryExpression	0x04		4828571	1					
ANR	4828590	CastExpression	( uint32_t ) 1		4828571	1					
ANR	4828591	CastTarget	uint32_t		4828571	0					
ANR	4828592	PrimaryExpression	1		4828571	1					
ANR	4828593	CastExpression	( uint32_t ) 0		4828571	2					
ANR	4828594	CastTarget	uint32_t		4828571	0					
ANR	4828595	PrimaryExpression	0		4828571	1					
ANR	4828596	ReturnType	static uint32_t		4828571	1					
ANR	4828597	Identifier	upd_pxlget1r6		4828571	2					
ANR	4828598	ParameterList	upd_p upd		4828571	3					
ANR	4828599	Parameter	upd_p upd	7512:14:263960:263968	4828571	0	True				
ANR	4828600	ParameterType	upd_p		4828571	0					
ANR	4828601	Identifier	upd		4828571	1					
ANR	4828602	CFGEntryNode	ENTRY		4828571		True				
ANR	4828603	CFGExitNode	EXIT		4828571		True				
ANR	4828604	Symbol	upd -> pxlptr		4828571						
ANR	4828605	Symbol	* upd		4828571						
ANR	4828606	Symbol	* upd -> pxlptr		4828571						
ANR	4828607	Symbol	upd		4828571						
ANR	4828608	Symbol	upd -> pxlget		4828571						
ANR	4828609	Symbol	upd_pxlget1r5		4828571						
ANR	4828610	Symbol	* * upd		4828571						
ANR	4828611	Function	upd_pxlget1r7	7518:0:264071:264209							
ANR	4828612	FunctionDef	upd_pxlget1r7 (upd_p upd)		4828611	0					
ANR	4828613	CompoundStatement		7520:0:264112:264209	4828611	0					
ANR	4828614	ExpressionStatement	upd -> pxlget = upd_pxlget1r6	7521:3:264117:264144	4828611	0	True				
ANR	4828615	AssignmentExpression	upd -> pxlget = upd_pxlget1r6		4828611	0		=			
ANR	4828616	PtrMemberAccess	upd -> pxlget		4828611	0					
ANR	4828617	Identifier	upd		4828611	0					
ANR	4828618	Identifier	pxlget		4828611	1					
ANR	4828619	Identifier	upd_pxlget1r6		4828611	1					
ANR	4828620	ReturnStatement	return * upd -> pxlptr & 0x02 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7522:3:264149:264207	4828611	1	True				
ANR	4828621	ConditionalExpression	* upd -> pxlptr & 0x02 ? ( uint32_t ) 1 : ( uint32_t ) 0		4828611	0					
ANR	4828622	Condition	* upd -> pxlptr & 0x02		4828611	0					
ANR	4828623	BitAndExpression	* upd -> pxlptr & 0x02		4828611	0		&			
ANR	4828624	UnaryOperationExpression	* upd -> pxlptr		4828611	0					
ANR	4828625	UnaryOperator	*		4828611	0					
ANR	4828626	PtrMemberAccess	upd -> pxlptr		4828611	1					
ANR	4828627	Identifier	upd		4828611	0					
ANR	4828628	Identifier	pxlptr		4828611	1					
ANR	4828629	PrimaryExpression	0x02		4828611	1					
ANR	4828630	CastExpression	( uint32_t ) 1		4828611	1					
ANR	4828631	CastTarget	uint32_t		4828611	0					
ANR	4828632	PrimaryExpression	1		4828611	1					
ANR	4828633	CastExpression	( uint32_t ) 0		4828611	2					
ANR	4828634	CastTarget	uint32_t		4828611	0					
ANR	4828635	PrimaryExpression	0		4828611	1					
ANR	4828636	ReturnType	static uint32_t		4828611	1					
ANR	4828637	Identifier	upd_pxlget1r7		4828611	2					
ANR	4828638	ParameterList	upd_p upd		4828611	3					
ANR	4828639	Parameter	upd_p upd	7519:14:264101:264109	4828611	0	True				
ANR	4828640	ParameterType	upd_p		4828611	0					
ANR	4828641	Identifier	upd		4828611	1					
ANR	4828642	CFGEntryNode	ENTRY		4828611		True				
ANR	4828643	CFGExitNode	EXIT		4828611		True				
ANR	4828644	Symbol	upd -> pxlptr		4828611						
ANR	4828645	Symbol	* upd		4828611						
ANR	4828646	Symbol	* upd -> pxlptr		4828611						
ANR	4828647	Symbol	upd		4828611						
ANR	4828648	Symbol	upd -> pxlget		4828611						
ANR	4828649	Symbol	upd_pxlget1r6		4828611						
ANR	4828650	Symbol	* * upd		4828611						
ANR	4828651	Function	upd_pxlget1r8	7525:0:264212:264350							
ANR	4828652	FunctionDef	upd_pxlget1r8 (upd_p upd)		4828651	0					
ANR	4828653	CompoundStatement		7527:0:264253:264350	4828651	0					
ANR	4828654	ExpressionStatement	upd -> pxlget = upd_pxlget1r7	7528:3:264258:264285	4828651	0	True				
ANR	4828655	AssignmentExpression	upd -> pxlget = upd_pxlget1r7		4828651	0		=			
ANR	4828656	PtrMemberAccess	upd -> pxlget		4828651	0					
ANR	4828657	Identifier	upd		4828651	0					
ANR	4828658	Identifier	pxlget		4828651	1					
ANR	4828659	Identifier	upd_pxlget1r7		4828651	1					
ANR	4828660	ReturnStatement	return * upd -> pxlptr & 0x01 ? ( uint32_t ) 1 : ( uint32_t ) 0 ;	7529:3:264290:264348	4828651	1	True				
ANR	4828661	ConditionalExpression	* upd -> pxlptr & 0x01 ? ( uint32_t ) 1 : ( uint32_t ) 0		4828651	0					
ANR	4828662	Condition	* upd -> pxlptr & 0x01		4828651	0					
ANR	4828663	BitAndExpression	* upd -> pxlptr & 0x01		4828651	0		&			
ANR	4828664	UnaryOperationExpression	* upd -> pxlptr		4828651	0					
ANR	4828665	UnaryOperator	*		4828651	0					
ANR	4828666	PtrMemberAccess	upd -> pxlptr		4828651	1					
ANR	4828667	Identifier	upd		4828651	0					
ANR	4828668	Identifier	pxlptr		4828651	1					
ANR	4828669	PrimaryExpression	0x01		4828651	1					
ANR	4828670	CastExpression	( uint32_t ) 1		4828651	1					
ANR	4828671	CastTarget	uint32_t		4828651	0					
ANR	4828672	PrimaryExpression	1		4828651	1					
ANR	4828673	CastExpression	( uint32_t ) 0		4828651	2					
ANR	4828674	CastTarget	uint32_t		4828651	0					
ANR	4828675	PrimaryExpression	0		4828651	1					
ANR	4828676	ReturnType	static uint32_t		4828651	1					
ANR	4828677	Identifier	upd_pxlget1r8		4828651	2					
ANR	4828678	ParameterList	upd_p upd		4828651	3					
ANR	4828679	Parameter	upd_p upd	7526:14:264242:264250	4828651	0	True				
ANR	4828680	ParameterType	upd_p		4828651	0					
ANR	4828681	Identifier	upd		4828651	1					
ANR	4828682	CFGEntryNode	ENTRY		4828651		True				
ANR	4828683	CFGExitNode	EXIT		4828651		True				
ANR	4828684	Symbol	upd -> pxlptr		4828651						
ANR	4828685	Symbol	* upd		4828651						
ANR	4828686	Symbol	* upd -> pxlptr		4828651						
ANR	4828687	Symbol	upd		4828651						
ANR	4828688	Symbol	upd -> pxlget		4828651						
ANR	4828689	Symbol	upd_pxlget1r7		4828651						
ANR	4828690	Symbol	* * upd		4828651						
ANR	4828691	Function	upd_pxlget2r1	7534:0:264374:264513							
ANR	4828692	FunctionDef	upd_pxlget2r1 (upd_p upd)		4828691	0					
ANR	4828693	CompoundStatement		7536:0:264415:264513	4828691	0					
ANR	4828694	ExpressionStatement	upd -> pxlget = upd_pxlget2r4	7537:3:264420:264447	4828691	0	True				
ANR	4828695	AssignmentExpression	upd -> pxlget = upd_pxlget2r4		4828691	0		=			
ANR	4828696	PtrMemberAccess	upd -> pxlget		4828691	0					
ANR	4828697	Identifier	upd		4828691	0					
ANR	4828698	Identifier	pxlget		4828691	1					
ANR	4828699	Identifier	upd_pxlget2r4		4828691	1					
ANR	4828700	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xC0 ) >> 6 ;	7538:3:264452:264511	4828691	1	True				
ANR	4828701	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xC0 ) >> 6		4828691	0		>>			
ANR	4828702	BitAndExpression	( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xC0		4828691	0		&			
ANR	4828703	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		4828691	0					
ANR	4828704	CastTarget	uint32_t		4828691	0					
ANR	4828705	UnaryOperationExpression	* upd -> pxlptr --		4828691	1					
ANR	4828706	UnaryOperator	*		4828691	0					
ANR	4828707	PostIncDecOperationExpression	upd -> pxlptr --		4828691	1					
ANR	4828708	PtrMemberAccess	upd -> pxlptr		4828691	0					
ANR	4828709	Identifier	upd		4828691	0					
ANR	4828710	Identifier	pxlptr		4828691	1					
ANR	4828711	IncDec	--		4828691	1					
ANR	4828712	CastExpression	( uint32_t ) 0xC0		4828691	1					
ANR	4828713	CastTarget	uint32_t		4828691	0					
ANR	4828714	PrimaryExpression	0xC0		4828691	1					
ANR	4828715	PrimaryExpression	6		4828691	1					
ANR	4828716	ReturnType	static uint32_t		4828691	1					
ANR	4828717	Identifier	upd_pxlget2r1		4828691	2					
ANR	4828718	ParameterList	upd_p upd		4828691	3					
ANR	4828719	Parameter	upd_p upd	7535:14:264404:264412	4828691	0	True				
ANR	4828720	ParameterType	upd_p		4828691	0					
ANR	4828721	Identifier	upd		4828691	1					
ANR	4828722	CFGEntryNode	ENTRY		4828691		True				
ANR	4828723	CFGExitNode	EXIT		4828691		True				
ANR	4828724	Symbol	upd -> pxlptr		4828691						
ANR	4828725	Symbol	* upd		4828691						
ANR	4828726	Symbol	* upd -> pxlptr --		4828691						
ANR	4828727	Symbol	upd		4828691						
ANR	4828728	Symbol	upd -> pxlget		4828691						
ANR	4828729	Symbol	upd_pxlget2r4		4828691						
ANR	4828730	Function	upd_pxlget2r2	7541:0:264516:264655							
ANR	4828731	FunctionDef	upd_pxlget2r2 (upd_p upd)		4828730	0					
ANR	4828732	CompoundStatement		7543:0:264557:264655	4828730	0					
ANR	4828733	ExpressionStatement	upd -> pxlget = upd_pxlget2r1	7544:3:264562:264589	4828730	0	True				
ANR	4828734	AssignmentExpression	upd -> pxlget = upd_pxlget2r1		4828730	0		=			
ANR	4828735	PtrMemberAccess	upd -> pxlget		4828730	0					
ANR	4828736	Identifier	upd		4828730	0					
ANR	4828737	Identifier	pxlget		4828730	1					
ANR	4828738	Identifier	upd_pxlget2r1		4828730	1					
ANR	4828739	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30 ) >> 4 ;	7545:3:264594:264653	4828730	1	True				
ANR	4828740	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30 ) >> 4		4828730	0		>>			
ANR	4828741	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x30		4828730	0		&			
ANR	4828742	CastExpression	( uint32_t ) ( * upd -> pxlptr )		4828730	0					
ANR	4828743	CastTarget	uint32_t		4828730	0					
ANR	4828744	UnaryOperationExpression	* upd -> pxlptr		4828730	1					
ANR	4828745	UnaryOperator	*		4828730	0					
ANR	4828746	PtrMemberAccess	upd -> pxlptr		4828730	1					
ANR	4828747	Identifier	upd		4828730	0					
ANR	4828748	Identifier	pxlptr		4828730	1					
ANR	4828749	CastExpression	( uint32_t ) 0x30		4828730	1					
ANR	4828750	CastTarget	uint32_t		4828730	0					
ANR	4828751	PrimaryExpression	0x30		4828730	1					
ANR	4828752	PrimaryExpression	4		4828730	1					
ANR	4828753	ReturnType	static uint32_t		4828730	1					
ANR	4828754	Identifier	upd_pxlget2r2		4828730	2					
ANR	4828755	ParameterList	upd_p upd		4828730	3					
ANR	4828756	Parameter	upd_p upd	7542:14:264546:264554	4828730	0	True				
ANR	4828757	ParameterType	upd_p		4828730	0					
ANR	4828758	Identifier	upd		4828730	1					
ANR	4828759	CFGEntryNode	ENTRY		4828730		True				
ANR	4828760	CFGExitNode	EXIT		4828730		True				
ANR	4828761	Symbol	upd -> pxlptr		4828730						
ANR	4828762	Symbol	* upd		4828730						
ANR	4828763	Symbol	* upd -> pxlptr		4828730						
ANR	4828764	Symbol	upd		4828730						
ANR	4828765	Symbol	upd -> pxlget		4828730						
ANR	4828766	Symbol	* * upd		4828730						
ANR	4828767	Symbol	upd_pxlget2r1		4828730						
ANR	4828768	Function	upd_pxlget2r3	7548:0:264658:264797							
ANR	4828769	FunctionDef	upd_pxlget2r3 (upd_p upd)		4828768	0					
ANR	4828770	CompoundStatement		7550:0:264699:264797	4828768	0					
ANR	4828771	ExpressionStatement	upd -> pxlget = upd_pxlget2r2	7551:3:264704:264731	4828768	0	True				
ANR	4828772	AssignmentExpression	upd -> pxlget = upd_pxlget2r2		4828768	0		=			
ANR	4828773	PtrMemberAccess	upd -> pxlget		4828768	0					
ANR	4828774	Identifier	upd		4828768	0					
ANR	4828775	Identifier	pxlget		4828768	1					
ANR	4828776	Identifier	upd_pxlget2r2		4828768	1					
ANR	4828777	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C ) >> 2 ;	7552:3:264736:264795	4828768	1	True				
ANR	4828778	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C ) >> 2		4828768	0		>>			
ANR	4828779	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0C		4828768	0		&			
ANR	4828780	CastExpression	( uint32_t ) ( * upd -> pxlptr )		4828768	0					
ANR	4828781	CastTarget	uint32_t		4828768	0					
ANR	4828782	UnaryOperationExpression	* upd -> pxlptr		4828768	1					
ANR	4828783	UnaryOperator	*		4828768	0					
ANR	4828784	PtrMemberAccess	upd -> pxlptr		4828768	1					
ANR	4828785	Identifier	upd		4828768	0					
ANR	4828786	Identifier	pxlptr		4828768	1					
ANR	4828787	CastExpression	( uint32_t ) 0x0C		4828768	1					
ANR	4828788	CastTarget	uint32_t		4828768	0					
ANR	4828789	PrimaryExpression	0x0C		4828768	1					
ANR	4828790	PrimaryExpression	2		4828768	1					
ANR	4828791	ReturnType	static uint32_t		4828768	1					
ANR	4828792	Identifier	upd_pxlget2r3		4828768	2					
ANR	4828793	ParameterList	upd_p upd		4828768	3					
ANR	4828794	Parameter	upd_p upd	7549:14:264688:264696	4828768	0	True				
ANR	4828795	ParameterType	upd_p		4828768	0					
ANR	4828796	Identifier	upd		4828768	1					
ANR	4828797	CFGEntryNode	ENTRY		4828768		True				
ANR	4828798	CFGExitNode	EXIT		4828768		True				
ANR	4828799	Symbol	upd -> pxlptr		4828768						
ANR	4828800	Symbol	* upd		4828768						
ANR	4828801	Symbol	* upd -> pxlptr		4828768						
ANR	4828802	Symbol	upd		4828768						
ANR	4828803	Symbol	upd -> pxlget		4828768						
ANR	4828804	Symbol	upd_pxlget2r2		4828768						
ANR	4828805	Symbol	* * upd		4828768						
ANR	4828806	Function	upd_pxlget2r4	7555:0:264800:264933							
ANR	4828807	FunctionDef	upd_pxlget2r4 (upd_p upd)		4828806	0					
ANR	4828808	CompoundStatement		7557:0:264841:264933	4828806	0					
ANR	4828809	ExpressionStatement	upd -> pxlget = upd_pxlget2r3	7558:3:264846:264873	4828806	0	True				
ANR	4828810	AssignmentExpression	upd -> pxlget = upd_pxlget2r3		4828806	0		=			
ANR	4828811	PtrMemberAccess	upd -> pxlget		4828806	0					
ANR	4828812	Identifier	upd		4828806	0					
ANR	4828813	Identifier	pxlget		4828806	1					
ANR	4828814	Identifier	upd_pxlget2r3		4828806	1					
ANR	4828815	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x03 ;	7559:3:264878:264931	4828806	1	True				
ANR	4828816	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x03		4828806	0		&			
ANR	4828817	CastExpression	( uint32_t ) ( * upd -> pxlptr )		4828806	0					
ANR	4828818	CastTarget	uint32_t		4828806	0					
ANR	4828819	UnaryOperationExpression	* upd -> pxlptr		4828806	1					
ANR	4828820	UnaryOperator	*		4828806	0					
ANR	4828821	PtrMemberAccess	upd -> pxlptr		4828806	1					
ANR	4828822	Identifier	upd		4828806	0					
ANR	4828823	Identifier	pxlptr		4828806	1					
ANR	4828824	CastExpression	( uint32_t ) 0x03		4828806	1					
ANR	4828825	CastTarget	uint32_t		4828806	0					
ANR	4828826	PrimaryExpression	0x03		4828806	1					
ANR	4828827	ReturnType	static uint32_t		4828806	1					
ANR	4828828	Identifier	upd_pxlget2r4		4828806	2					
ANR	4828829	ParameterList	upd_p upd		4828806	3					
ANR	4828830	Parameter	upd_p upd	7556:14:264830:264838	4828806	0	True				
ANR	4828831	ParameterType	upd_p		4828806	0					
ANR	4828832	Identifier	upd		4828806	1					
ANR	4828833	CFGEntryNode	ENTRY		4828806		True				
ANR	4828834	CFGExitNode	EXIT		4828806		True				
ANR	4828835	Symbol	upd -> pxlptr		4828806						
ANR	4828836	Symbol	* upd		4828806						
ANR	4828837	Symbol	* upd -> pxlptr		4828806						
ANR	4828838	Symbol	upd		4828806						
ANR	4828839	Symbol	upd -> pxlget		4828806						
ANR	4828840	Symbol	upd_pxlget2r3		4828806						
ANR	4828841	Symbol	* * upd		4828806						
ANR	4828842	Function	upd_pxlget4r1	7564:0:264957:265096							
ANR	4828843	FunctionDef	upd_pxlget4r1 (upd_p upd)		4828842	0					
ANR	4828844	CompoundStatement		7566:0:264998:265096	4828842	0					
ANR	4828845	ExpressionStatement	upd -> pxlget = upd_pxlget4r2	7567:3:265003:265030	4828842	0	True				
ANR	4828846	AssignmentExpression	upd -> pxlget = upd_pxlget4r2		4828842	0		=			
ANR	4828847	PtrMemberAccess	upd -> pxlget		4828842	0					
ANR	4828848	Identifier	upd		4828842	0					
ANR	4828849	Identifier	pxlget		4828842	1					
ANR	4828850	Identifier	upd_pxlget4r2		4828842	1					
ANR	4828851	ReturnStatement	return ( ( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xF0 ) >> 4 ;	7568:3:265035:265094	4828842	1	True				
ANR	4828852	ShiftExpression	( ( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xF0 ) >> 4		4828842	0		>>			
ANR	4828853	BitAndExpression	( uint32_t ) ( * upd -> pxlptr -- ) & ( uint32_t ) 0xF0		4828842	0		&			
ANR	4828854	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		4828842	0					
ANR	4828855	CastTarget	uint32_t		4828842	0					
ANR	4828856	UnaryOperationExpression	* upd -> pxlptr --		4828842	1					
ANR	4828857	UnaryOperator	*		4828842	0					
ANR	4828858	PostIncDecOperationExpression	upd -> pxlptr --		4828842	1					
ANR	4828859	PtrMemberAccess	upd -> pxlptr		4828842	0					
ANR	4828860	Identifier	upd		4828842	0					
ANR	4828861	Identifier	pxlptr		4828842	1					
ANR	4828862	IncDec	--		4828842	1					
ANR	4828863	CastExpression	( uint32_t ) 0xF0		4828842	1					
ANR	4828864	CastTarget	uint32_t		4828842	0					
ANR	4828865	PrimaryExpression	0xF0		4828842	1					
ANR	4828866	PrimaryExpression	4		4828842	1					
ANR	4828867	ReturnType	static uint32_t		4828842	1					
ANR	4828868	Identifier	upd_pxlget4r1		4828842	2					
ANR	4828869	ParameterList	upd_p upd		4828842	3					
ANR	4828870	Parameter	upd_p upd	7565:14:264987:264995	4828842	0	True				
ANR	4828871	ParameterType	upd_p		4828842	0					
ANR	4828872	Identifier	upd		4828842	1					
ANR	4828873	CFGEntryNode	ENTRY		4828842		True				
ANR	4828874	CFGExitNode	EXIT		4828842		True				
ANR	4828875	Symbol	upd -> pxlptr		4828842						
ANR	4828876	Symbol	* upd		4828842						
ANR	4828877	Symbol	* upd -> pxlptr --		4828842						
ANR	4828878	Symbol	upd		4828842						
ANR	4828879	Symbol	upd -> pxlget		4828842						
ANR	4828880	Symbol	upd_pxlget4r2		4828842						
ANR	4828881	Function	upd_pxlget4r2	7571:0:265099:265232							
ANR	4828882	FunctionDef	upd_pxlget4r2 (upd_p upd)		4828881	0					
ANR	4828883	CompoundStatement		7573:0:265140:265232	4828881	0					
ANR	4828884	ExpressionStatement	upd -> pxlget = upd_pxlget4r1	7574:3:265145:265172	4828881	0	True				
ANR	4828885	AssignmentExpression	upd -> pxlget = upd_pxlget4r1		4828881	0		=			
ANR	4828886	PtrMemberAccess	upd -> pxlget		4828881	0					
ANR	4828887	Identifier	upd		4828881	0					
ANR	4828888	Identifier	pxlget		4828881	1					
ANR	4828889	Identifier	upd_pxlget4r1		4828881	1					
ANR	4828890	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0F ;	7575:3:265177:265230	4828881	1	True				
ANR	4828891	BitAndExpression	( uint32_t ) ( * upd -> pxlptr ) & ( uint32_t ) 0x0F		4828881	0		&			
ANR	4828892	CastExpression	( uint32_t ) ( * upd -> pxlptr )		4828881	0					
ANR	4828893	CastTarget	uint32_t		4828881	0					
ANR	4828894	UnaryOperationExpression	* upd -> pxlptr		4828881	1					
ANR	4828895	UnaryOperator	*		4828881	0					
ANR	4828896	PtrMemberAccess	upd -> pxlptr		4828881	1					
ANR	4828897	Identifier	upd		4828881	0					
ANR	4828898	Identifier	pxlptr		4828881	1					
ANR	4828899	CastExpression	( uint32_t ) 0x0F		4828881	1					
ANR	4828900	CastTarget	uint32_t		4828881	0					
ANR	4828901	PrimaryExpression	0x0F		4828881	1					
ANR	4828902	ReturnType	static uint32_t		4828881	1					
ANR	4828903	Identifier	upd_pxlget4r2		4828881	2					
ANR	4828904	ParameterList	upd_p upd		4828881	3					
ANR	4828905	Parameter	upd_p upd	7572:14:265129:265137	4828881	0	True				
ANR	4828906	ParameterType	upd_p		4828881	0					
ANR	4828907	Identifier	upd		4828881	1					
ANR	4828908	CFGEntryNode	ENTRY		4828881		True				
ANR	4828909	CFGExitNode	EXIT		4828881		True				
ANR	4828910	Symbol	upd -> pxlptr		4828881						
ANR	4828911	Symbol	* upd		4828881						
ANR	4828912	Symbol	* upd -> pxlptr		4828881						
ANR	4828913	Symbol	upd		4828881						
ANR	4828914	Symbol	upd -> pxlget		4828881						
ANR	4828915	Symbol	upd_pxlget4r1		4828881						
ANR	4828916	Symbol	* * upd		4828881						
ANR	4828917	Function	upd_pxlget8r	7579:0:265255:265336							
ANR	4828918	FunctionDef	upd_pxlget8r (upd_p upd)		4828917	0					
ANR	4828919	CompoundStatement		7581:0:265295:265336	4828917	0					
ANR	4828920	ReturnStatement	return ( uint32_t ) ( * upd -> pxlptr -- ) ;	7582:3:265300:265334	4828917	0	True				
ANR	4828921	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		4828917	0					
ANR	4828922	CastTarget	uint32_t		4828917	0					
ANR	4828923	UnaryOperationExpression	* upd -> pxlptr --		4828917	1					
ANR	4828924	UnaryOperator	*		4828917	0					
ANR	4828925	PostIncDecOperationExpression	upd -> pxlptr --		4828917	1					
ANR	4828926	PtrMemberAccess	upd -> pxlptr		4828917	0					
ANR	4828927	Identifier	upd		4828917	0					
ANR	4828928	Identifier	pxlptr		4828917	1					
ANR	4828929	IncDec	--		4828917	1					
ANR	4828930	ReturnType	static uint32_t		4828917	1					
ANR	4828931	Identifier	upd_pxlget8r		4828917	2					
ANR	4828932	ParameterList	upd_p upd		4828917	3					
ANR	4828933	Parameter	upd_p upd	7580:13:265284:265292	4828917	0	True				
ANR	4828934	ParameterType	upd_p		4828917	0					
ANR	4828935	Identifier	upd		4828917	1					
ANR	4828936	CFGEntryNode	ENTRY		4828917		True				
ANR	4828937	CFGExitNode	EXIT		4828917		True				
ANR	4828938	Symbol	upd -> pxlptr		4828917						
ANR	4828939	Symbol	* upd		4828917						
ANR	4828940	Symbol	* upd -> pxlptr --		4828917						
ANR	4828941	Symbol	upd		4828917						
ANR	4828942	Function	upd_pxlget16r	7586:0:265360:265535							
ANR	4828943	FunctionDef	upd_pxlget16r (upd_p upd)		4828942	0					
ANR	4828944	CompoundStatement		7588:0:265401:265535	4828942	0					
ANR	4828945	IdentifierDeclStatement	uint32_t ci = * upd -> pxlptr -- ;	7589:3:265406:265453	4828942	0	True				
ANR	4828946	IdentifierDecl	ci = * upd -> pxlptr --		4828942	0					
ANR	4828947	IdentifierDeclType	uint32_t		4828942	0					
ANR	4828948	Identifier	ci		4828942	1					
ANR	4828949	AssignmentExpression	ci = * upd -> pxlptr --		4828942	2		=			
ANR	4828950	Identifier	ci		4828942	0					
ANR	4828951	UnaryOperationExpression	* upd -> pxlptr --		4828942	1					
ANR	4828952	UnaryOperator	*		4828942	0					
ANR	4828953	PostIncDecOperationExpression	upd -> pxlptr --		4828942	1					
ANR	4828954	PtrMemberAccess	upd -> pxlptr		4828942	0					
ANR	4828955	Identifier	upd		4828942	0					
ANR	4828956	Identifier	pxlptr		4828942	1					
ANR	4828957	IncDec	--		4828942	1					
ANR	4828958	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8	7590:18:265473:265511	4828942	1	True				
ANR	4828959	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8		4828942	0		|=			
ANR	4828960	Identifier	ci		4828942	0					
ANR	4828961	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 8		4828942	1		<<			
ANR	4828962	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		4828942	0					
ANR	4828963	CastTarget	uint32_t		4828942	0					
ANR	4828964	UnaryOperationExpression	* upd -> pxlptr --		4828942	1					
ANR	4828965	UnaryOperator	*		4828942	0					
ANR	4828966	PostIncDecOperationExpression	upd -> pxlptr --		4828942	1					
ANR	4828967	PtrMemberAccess	upd -> pxlptr		4828942	0					
ANR	4828968	Identifier	upd		4828942	0					
ANR	4828969	Identifier	pxlptr		4828942	1					
ANR	4828970	IncDec	--		4828942	1					
ANR	4828971	PrimaryExpression	8		4828942	1					
ANR	4828972	ReturnStatement	return ci ;	7591:3:265516:265533	4828942	2	True				
ANR	4828973	Identifier	ci		4828942	0					
ANR	4828974	ReturnType	static uint32_t		4828942	1					
ANR	4828975	Identifier	upd_pxlget16r		4828942	2					
ANR	4828976	ParameterList	upd_p upd		4828942	3					
ANR	4828977	Parameter	upd_p upd	7587:14:265390:265398	4828942	0	True				
ANR	4828978	ParameterType	upd_p		4828942	0					
ANR	4828979	Identifier	upd		4828942	1					
ANR	4828980	CFGEntryNode	ENTRY		4828942		True				
ANR	4828981	CFGExitNode	EXIT		4828942		True				
ANR	4828982	Symbol	upd -> pxlptr		4828942						
ANR	4828983	Symbol	* upd		4828942						
ANR	4828984	Symbol	* upd -> pxlptr --		4828942						
ANR	4828985	Symbol	ci		4828942						
ANR	4828986	Symbol	upd		4828942						
ANR	4828987	Function	upd_pxlget24r	7595:0:265559:265762							
ANR	4828988	FunctionDef	upd_pxlget24r (upd_p upd)		4828987	0					
ANR	4828989	CompoundStatement		7597:0:265600:265762	4828987	0					
ANR	4828990	IdentifierDeclStatement	uint32_t ci = * upd -> pxlptr -- ;	7598:3:265605:265644	4828987	0	True				
ANR	4828991	IdentifierDecl	ci = * upd -> pxlptr --		4828987	0					
ANR	4828992	IdentifierDeclType	uint32_t		4828987	0					
ANR	4828993	Identifier	ci		4828987	1					
ANR	4828994	AssignmentExpression	ci = * upd -> pxlptr --		4828987	2		=			
ANR	4828995	Identifier	ci		4828987	0					
ANR	4828996	UnaryOperationExpression	* upd -> pxlptr --		4828987	1					
ANR	4828997	UnaryOperator	*		4828987	0					
ANR	4828998	PostIncDecOperationExpression	upd -> pxlptr --		4828987	1					
ANR	4828999	PtrMemberAccess	upd -> pxlptr		4828987	0					
ANR	4829000	Identifier	upd		4828987	0					
ANR	4829001	Identifier	pxlptr		4828987	1					
ANR	4829002	IncDec	--		4828987	1					
ANR	4829003	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8	7599:10:265656:265695	4828987	1	True				
ANR	4829004	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8		4828987	0		|=			
ANR	4829005	Identifier	ci		4828987	0					
ANR	4829006	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 8		4828987	1		<<			
ANR	4829007	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		4828987	0					
ANR	4829008	CastTarget	uint32_t		4828987	0					
ANR	4829009	UnaryOperationExpression	* upd -> pxlptr --		4828987	1					
ANR	4829010	UnaryOperator	*		4828987	0					
ANR	4829011	PostIncDecOperationExpression	upd -> pxlptr --		4828987	1					
ANR	4829012	PtrMemberAccess	upd -> pxlptr		4828987	0					
ANR	4829013	Identifier	upd		4828987	0					
ANR	4829014	Identifier	pxlptr		4828987	1					
ANR	4829015	IncDec	--		4828987	1					
ANR	4829016	PrimaryExpression	8		4828987	1					
ANR	4829017	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 16	7600:10:265707:265746	4828987	2	True				
ANR	4829018	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 16		4828987	0		|=			
ANR	4829019	Identifier	ci		4828987	0					
ANR	4829020	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 16		4828987	1		<<			
ANR	4829021	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		4828987	0					
ANR	4829022	CastTarget	uint32_t		4828987	0					
ANR	4829023	UnaryOperationExpression	* upd -> pxlptr --		4828987	1					
ANR	4829024	UnaryOperator	*		4828987	0					
ANR	4829025	PostIncDecOperationExpression	upd -> pxlptr --		4828987	1					
ANR	4829026	PtrMemberAccess	upd -> pxlptr		4828987	0					
ANR	4829027	Identifier	upd		4828987	0					
ANR	4829028	Identifier	pxlptr		4828987	1					
ANR	4829029	IncDec	--		4828987	1					
ANR	4829030	PrimaryExpression	16		4828987	1					
ANR	4829031	ReturnStatement	return ci ;	7601:3:265751:265760	4828987	3	True				
ANR	4829032	Identifier	ci		4828987	0					
ANR	4829033	ReturnType	static uint32_t		4828987	1					
ANR	4829034	Identifier	upd_pxlget24r		4828987	2					
ANR	4829035	ParameterList	upd_p upd		4828987	3					
ANR	4829036	Parameter	upd_p upd	7596:14:265589:265597	4828987	0	True				
ANR	4829037	ParameterType	upd_p		4828987	0					
ANR	4829038	Identifier	upd		4828987	1					
ANR	4829039	CFGEntryNode	ENTRY		4828987		True				
ANR	4829040	CFGExitNode	EXIT		4828987		True				
ANR	4829041	Symbol	upd -> pxlptr		4828987						
ANR	4829042	Symbol	* upd		4828987						
ANR	4829043	Symbol	* upd -> pxlptr --		4828987						
ANR	4829044	Symbol	ci		4828987						
ANR	4829045	Symbol	upd		4828987						
ANR	4829046	Function	upd_pxlget32r	7605:0:265786:266080							
ANR	4829047	FunctionDef	upd_pxlget32r (upd_p upd)		4829046	0					
ANR	4829048	CompoundStatement		7607:0:265827:266080	4829046	0					
ANR	4829049	IdentifierDeclStatement	uint32_t ci = * upd -> pxlptr -- ;	7608:3:265832:265879	4829046	0	True				
ANR	4829050	IdentifierDecl	ci = * upd -> pxlptr --		4829046	0					
ANR	4829051	IdentifierDeclType	uint32_t		4829046	0					
ANR	4829052	Identifier	ci		4829046	1					
ANR	4829053	AssignmentExpression	ci = * upd -> pxlptr --		4829046	2		=			
ANR	4829054	Identifier	ci		4829046	0					
ANR	4829055	UnaryOperationExpression	* upd -> pxlptr --		4829046	1					
ANR	4829056	UnaryOperator	*		4829046	0					
ANR	4829057	PostIncDecOperationExpression	upd -> pxlptr --		4829046	1					
ANR	4829058	PtrMemberAccess	upd -> pxlptr		4829046	0					
ANR	4829059	Identifier	upd		4829046	0					
ANR	4829060	Identifier	pxlptr		4829046	1					
ANR	4829061	IncDec	--		4829046	1					
ANR	4829062	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8	7609:18:265899:265938	4829046	1	True				
ANR	4829063	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 8		4829046	0		|=			
ANR	4829064	Identifier	ci		4829046	0					
ANR	4829065	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 8		4829046	1		<<			
ANR	4829066	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		4829046	0					
ANR	4829067	CastTarget	uint32_t		4829046	0					
ANR	4829068	UnaryOperationExpression	* upd -> pxlptr --		4829046	1					
ANR	4829069	UnaryOperator	*		4829046	0					
ANR	4829070	PostIncDecOperationExpression	upd -> pxlptr --		4829046	1					
ANR	4829071	PtrMemberAccess	upd -> pxlptr		4829046	0					
ANR	4829072	Identifier	upd		4829046	0					
ANR	4829073	Identifier	pxlptr		4829046	1					
ANR	4829074	IncDec	--		4829046	1					
ANR	4829075	PrimaryExpression	8		4829046	1					
ANR	4829076	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 16	7610:18:265958:265997	4829046	2	True				
ANR	4829077	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 16		4829046	0		|=			
ANR	4829078	Identifier	ci		4829046	0					
ANR	4829079	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 16		4829046	1		<<			
ANR	4829080	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		4829046	0					
ANR	4829081	CastTarget	uint32_t		4829046	0					
ANR	4829082	UnaryOperationExpression	* upd -> pxlptr --		4829046	1					
ANR	4829083	UnaryOperator	*		4829046	0					
ANR	4829084	PostIncDecOperationExpression	upd -> pxlptr --		4829046	1					
ANR	4829085	PtrMemberAccess	upd -> pxlptr		4829046	0					
ANR	4829086	Identifier	upd		4829046	0					
ANR	4829087	Identifier	pxlptr		4829046	1					
ANR	4829088	IncDec	--		4829046	1					
ANR	4829089	PrimaryExpression	16		4829046	1					
ANR	4829090	ExpressionStatement	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 24	7611:18:266017:266056	4829046	3	True				
ANR	4829091	AssignmentExpression	ci |= ( uint32_t ) ( * upd -> pxlptr -- ) << 24		4829046	0		|=			
ANR	4829092	Identifier	ci		4829046	0					
ANR	4829093	ShiftExpression	( uint32_t ) ( * upd -> pxlptr -- ) << 24		4829046	1		<<			
ANR	4829094	CastExpression	( uint32_t ) ( * upd -> pxlptr -- )		4829046	0					
ANR	4829095	CastTarget	uint32_t		4829046	0					
ANR	4829096	UnaryOperationExpression	* upd -> pxlptr --		4829046	1					
ANR	4829097	UnaryOperator	*		4829046	0					
ANR	4829098	PostIncDecOperationExpression	upd -> pxlptr --		4829046	1					
ANR	4829099	PtrMemberAccess	upd -> pxlptr		4829046	0					
ANR	4829100	Identifier	upd		4829046	0					
ANR	4829101	Identifier	pxlptr		4829046	1					
ANR	4829102	IncDec	--		4829046	1					
ANR	4829103	PrimaryExpression	24		4829046	1					
ANR	4829104	ReturnStatement	return ci ;	7612:3:266061:266078	4829046	4	True				
ANR	4829105	Identifier	ci		4829046	0					
ANR	4829106	ReturnType	static uint32_t		4829046	1					
ANR	4829107	Identifier	upd_pxlget32r		4829046	2					
ANR	4829108	ParameterList	upd_p upd		4829046	3					
ANR	4829109	Parameter	upd_p upd	7606:14:265816:265824	4829046	0	True				
ANR	4829110	ParameterType	upd_p		4829046	0					
ANR	4829111	Identifier	upd		4829046	1					
ANR	4829112	CFGEntryNode	ENTRY		4829046		True				
ANR	4829113	CFGExitNode	EXIT		4829046		True				
ANR	4829114	Symbol	upd -> pxlptr		4829046						
ANR	4829115	Symbol	* upd -> pxlptr --		4829046						
ANR	4829116	Symbol	* upd		4829046						
ANR	4829117	Symbol	ci		4829046						
ANR	4829118	Symbol	upd		4829046						
