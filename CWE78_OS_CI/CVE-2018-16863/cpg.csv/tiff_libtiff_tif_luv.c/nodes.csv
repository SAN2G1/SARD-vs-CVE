command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10137587	File	data/converged/CVE-2018-16863_ghostpdl/tiff_libtiff_tif_luv.c								
ANR	10137588	DeclStmt									
ANR	10137589	Decl							struct logLuvState	struct logLuvState	LogLuvState
ANR	10137590	ClassDef	logLuvState	160:0:6987:7596							
ANR	10137591	DeclStmt									
ANR	10137592	Decl							int	int	encoder_state
ANR	10137593	DeclStmt									
ANR	10137594	Decl							int	int	user_datafmt
ANR	10137595	DeclStmt									
ANR	10137596	Decl							int	int	encode_meth
ANR	10137597	DeclStmt									
ANR	10137598	Decl							int	int	pixel_size
ANR	10137599	DeclStmt									
ANR	10137600	Decl							uint8	uint8 *	tbuf
ANR	10137601	DeclStmt									
ANR	10137602	Decl							tmsize_t	tmsize_t	tbuflen
ANR	10137603	DeclStmt									
ANR	10137604	Decl							"void ( * ) ( LogLuvState * , uint8 * , tmsize_t )"	"void ( * ) ( LogLuvState * , uint8 * , tmsize_t )"	tfunc
ANR	10137605	DeclStmt									
ANR	10137606	Decl							TIFFVSetMethod	TIFFVSetMethod	vgetparent
ANR	10137607	DeclStmt									
ANR	10137608	Decl							TIFFVSetMethod	TIFFVSetMethod	vsetparent
ANR	10137609	Function	LogL16Decode	184:0:7845:9632							
ANR	10137610	FunctionDef	"LogL16Decode (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		10137609	0					
ANR	10137611	CompoundStatement		186:0:7915:9632	10137609	0					
ANR	10137612	Statement	static	187:1:7918:7923	10137609	0	True				
ANR	10137613	IdentifierDeclStatement	"const char module [ ] = ""LogL16Decode"" ;"	187:8:7925:7961	10137609	1	True				
ANR	10137614	IdentifierDecl	"module [ ] = ""LogL16Decode"""		10137609	0					
ANR	10137615	IdentifierDeclType	const char [ ]		10137609	0					
ANR	10137616	Identifier	module		10137609	1					
ANR	10137617	AssignmentExpression	"module [ ] = ""LogL16Decode"""		10137609	2		=			
ANR	10137618	Identifier	module		10137609	0					
ANR	10137619	PrimaryExpression	"""LogL16Decode"""		10137609	1					
ANR	10137620	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	188:1:7964:7999	10137609	2	True				
ANR	10137621	IdentifierDecl	* sp = DecoderState ( tif )		10137609	0					
ANR	10137622	IdentifierDeclType	LogLuvState *		10137609	0					
ANR	10137623	Identifier	sp		10137609	1					
ANR	10137624	AssignmentExpression	* sp = DecoderState ( tif )		10137609	2		=			
ANR	10137625	Identifier	sp		10137609	0					
ANR	10137626	CallExpression	DecoderState ( tif )		10137609	1					
ANR	10137627	Callee	DecoderState		10137609	0					
ANR	10137628	Identifier	DecoderState		10137609	0					
ANR	10137629	ArgumentList	tif		10137609	1					
ANR	10137630	Argument	tif		10137609	0					
ANR	10137631	Identifier	tif		10137609	0					
ANR	10137632	IdentifierDeclStatement	int shft ;	189:1:8002:8010	10137609	3	True				
ANR	10137633	IdentifierDecl	shft		10137609	0					
ANR	10137634	IdentifierDeclType	int		10137609	0					
ANR	10137635	Identifier	shft		10137609	1					
ANR	10137636	IdentifierDeclStatement	tmsize_t i ;	190:1:8013:8023	10137609	4	True				
ANR	10137637	IdentifierDecl	i		10137609	0					
ANR	10137638	IdentifierDeclType	tmsize_t		10137609	0					
ANR	10137639	Identifier	i		10137609	1					
ANR	10137640	IdentifierDeclStatement	tmsize_t npixels ;	191:1:8026:8042	10137609	5	True				
ANR	10137641	IdentifierDecl	npixels		10137609	0					
ANR	10137642	IdentifierDeclType	tmsize_t		10137609	0					
ANR	10137643	Identifier	npixels		10137609	1					
ANR	10137644	IdentifierDeclStatement	unsigned char * bp ;	192:1:8045:8062	10137609	6	True				
ANR	10137645	IdentifierDecl	* bp		10137609	0					
ANR	10137646	IdentifierDeclType	unsigned char *		10137609	0					
ANR	10137647	Identifier	bp		10137609	1					
ANR	10137648	IdentifierDeclStatement	int16 * tp ;	193:1:8065:8074	10137609	7	True				
ANR	10137649	IdentifierDecl	* tp		10137609	0					
ANR	10137650	IdentifierDeclType	int16 *		10137609	0					
ANR	10137651	Identifier	tp		10137609	1					
ANR	10137652	IdentifierDeclStatement	int16 b ;	194:1:8077:8084	10137609	8	True				
ANR	10137653	IdentifierDecl	b		10137609	0					
ANR	10137654	IdentifierDeclType	int16		10137609	0					
ANR	10137655	Identifier	b		10137609	1					
ANR	10137656	IdentifierDeclStatement	tmsize_t cc ;	195:1:8087:8098	10137609	9	True				
ANR	10137657	IdentifierDecl	cc		10137609	0					
ANR	10137658	IdentifierDeclType	tmsize_t		10137609	0					
ANR	10137659	Identifier	cc		10137609	1					
ANR	10137660	IdentifierDeclStatement	int rc ;	196:1:8101:8107	10137609	10	True				
ANR	10137661	IdentifierDecl	rc		10137609	0					
ANR	10137662	IdentifierDeclType	int		10137609	0					
ANR	10137663	Identifier	rc		10137609	1					
ANR	10137664	ExpressionStatement	assert ( s == 0 )	198:1:8111:8125	10137609	11	True				
ANR	10137665	CallExpression	assert ( s == 0 )		10137609	0					
ANR	10137666	Callee	assert		10137609	0					
ANR	10137667	Identifier	assert		10137609	0					
ANR	10137668	ArgumentList	s == 0		10137609	1					
ANR	10137669	Argument	s == 0		10137609	0					
ANR	10137670	EqualityExpression	s == 0		10137609	0		==			
ANR	10137671	Identifier	s		10137609	0					
ANR	10137672	PrimaryExpression	0		10137609	1					
ANR	10137673	ExpressionStatement	assert ( sp != NULL )	199:1:8128:8146	10137609	12	True				
ANR	10137674	CallExpression	assert ( sp != NULL )		10137609	0					
ANR	10137675	Callee	assert		10137609	0					
ANR	10137676	Identifier	assert		10137609	0					
ANR	10137677	ArgumentList	sp != NULL		10137609	1					
ANR	10137678	Argument	sp != NULL		10137609	0					
ANR	10137679	EqualityExpression	sp != NULL		10137609	0		!=			
ANR	10137680	Identifier	sp		10137609	0					
ANR	10137681	Identifier	NULL		10137609	1					
ANR	10137682	ExpressionStatement	npixels = occ / sp -> pixel_size	201:1:8150:8180	10137609	13	True				
ANR	10137683	AssignmentExpression	npixels = occ / sp -> pixel_size		10137609	0		=			
ANR	10137684	Identifier	npixels		10137609	0					
ANR	10137685	MultiplicativeExpression	occ / sp -> pixel_size		10137609	1		/			
ANR	10137686	Identifier	occ		10137609	0					
ANR	10137687	PtrMemberAccess	sp -> pixel_size		10137609	1					
ANR	10137688	Identifier	sp		10137609	0					
ANR	10137689	Identifier	pixel_size		10137609	1					
ANR	10137690	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_16BIT )		10137609	14					
ANR	10137691	Condition	sp -> user_datafmt == SGILOGDATAFMT_16BIT	203:5:8188:8226	10137609	0	True				
ANR	10137692	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_16BIT		10137609	0		==			
ANR	10137693	PtrMemberAccess	sp -> user_datafmt		10137609	0					
ANR	10137694	Identifier	sp		10137609	0					
ANR	10137695	Identifier	user_datafmt		10137609	1					
ANR	10137696	Identifier	SGILOGDATAFMT_16BIT		10137609	1					
ANR	10137697	ExpressionStatement	tp = ( int16 * ) op	204:2:8231:8247	10137609	1	True				
ANR	10137698	AssignmentExpression	tp = ( int16 * ) op		10137609	0		=			
ANR	10137699	Identifier	tp		10137609	0					
ANR	10137700	CastExpression	( int16 * ) op		10137609	1					
ANR	10137701	CastTarget	int16 *		10137609	0					
ANR	10137702	Identifier	op		10137609	1					
ANR	10137703	ElseStatement	else		10137609	0					
ANR	10137704	CompoundStatement		20:6:339:339	10137609	0					
ANR	10137705	IfStatement	if ( sp -> tbuflen < npixels )		10137609	0					
ANR	10137706	Condition	sp -> tbuflen < npixels	206:5:8262:8282	10137609	0	True				
ANR	10137707	RelationalExpression	sp -> tbuflen < npixels		10137609	0		<			
ANR	10137708	PtrMemberAccess	sp -> tbuflen		10137609	0					
ANR	10137709	Identifier	sp		10137609	0					
ANR	10137710	Identifier	tbuflen		10137609	1					
ANR	10137711	Identifier	npixels		10137609	1					
ANR	10137712	CompoundStatement		21:28:369:369	10137609	1					
ANR	10137713	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	207:3:8290:8370	10137609	0	True				
ANR	10137714	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		10137609	0					
ANR	10137715	Callee	TIFFErrorExt		10137609	0					
ANR	10137716	Identifier	TIFFErrorExt		10137609	0					
ANR	10137717	ArgumentList	tif -> tif_clientdata		10137609	1					
ANR	10137718	Argument	tif -> tif_clientdata		10137609	0					
ANR	10137719	PtrMemberAccess	tif -> tif_clientdata		10137609	0					
ANR	10137720	Identifier	tif		10137609	0					
ANR	10137721	Identifier	tif_clientdata		10137609	1					
ANR	10137722	Argument	module		10137609	1					
ANR	10137723	Identifier	module		10137609	0					
ANR	10137724	Argument	"""Translation buffer too short"""		10137609	2					
ANR	10137725	PrimaryExpression	"""Translation buffer too short"""		10137609	0					
ANR	10137726	ReturnStatement	return ( 0 ) ;	209:3:8375:8385	10137609	1	True				
ANR	10137727	PrimaryExpression	0		10137609	0					
ANR	10137728	ExpressionStatement	tp = ( int16 * ) sp -> tbuf	211:2:8393:8415	10137609	1	True				
ANR	10137729	AssignmentExpression	tp = ( int16 * ) sp -> tbuf		10137609	0		=			
ANR	10137730	Identifier	tp		10137609	0					
ANR	10137731	CastExpression	( int16 * ) sp -> tbuf		10137609	1					
ANR	10137732	CastTarget	int16 *		10137609	0					
ANR	10137733	PtrMemberAccess	sp -> tbuf		10137609	1					
ANR	10137734	Identifier	sp		10137609	0					
ANR	10137735	Identifier	tbuf		10137609	1					
ANR	10137736	ExpressionStatement	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"	213:1:8421:8471	10137609	15	True				
ANR	10137737	CallExpression	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"		10137609	0					
ANR	10137738	Callee	_TIFFmemset		10137609	0					
ANR	10137739	Identifier	_TIFFmemset		10137609	0					
ANR	10137740	ArgumentList	( void * ) tp		10137609	1					
ANR	10137741	Argument	( void * ) tp		10137609	0					
ANR	10137742	CastExpression	( void * ) tp		10137609	0					
ANR	10137743	CastTarget	void *		10137609	0					
ANR	10137744	Identifier	tp		10137609	1					
ANR	10137745	Argument	0		10137609	1					
ANR	10137746	PrimaryExpression	0		10137609	0					
ANR	10137747	Argument	npixels * sizeof ( tp [ 0 ] )		10137609	2					
ANR	10137748	MultiplicativeExpression	npixels * sizeof ( tp [ 0 ] )		10137609	0		*			
ANR	10137749	Identifier	npixels		10137609	0					
ANR	10137750	SizeofExpression	sizeof ( tp [ 0 ] )		10137609	1					
ANR	10137751	Sizeof	sizeof		10137609	0					
ANR	10137752	ArrayIndexing	tp [ 0 ]		10137609	1					
ANR	10137753	Identifier	tp		10137609	0					
ANR	10137754	PrimaryExpression	0		10137609	1					
ANR	10137755	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	215:1:8475:8511	10137609	16	True				
ANR	10137756	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		10137609	0		=			
ANR	10137757	Identifier	bp		10137609	0					
ANR	10137758	CastExpression	( unsigned char * ) tif -> tif_rawcp		10137609	1					
ANR	10137759	CastTarget	unsigned char *		10137609	0					
ANR	10137760	PtrMemberAccess	tif -> tif_rawcp		10137609	1					
ANR	10137761	Identifier	tif		10137609	0					
ANR	10137762	Identifier	tif_rawcp		10137609	1					
ANR	10137763	ExpressionStatement	cc = tif -> tif_rawcc	216:1:8514:8533	10137609	17	True				
ANR	10137764	AssignmentExpression	cc = tif -> tif_rawcc		10137609	0		=			
ANR	10137765	Identifier	cc		10137609	0					
ANR	10137766	PtrMemberAccess	tif -> tif_rawcc		10137609	1					
ANR	10137767	Identifier	tif		10137609	0					
ANR	10137768	Identifier	tif_rawcc		10137609	1					
ANR	10137769	ForStatement	for ( shft = 2 * 8 ; ( shft -= 8 ) >= 0 ; )		10137609	18					
ANR	10137770	ForInit	shft = 2 * 8 ;	218:6:8569:8579	10137609	0	True				
ANR	10137771	AssignmentExpression	shft = 2 * 8		10137609	0		=			
ANR	10137772	Identifier	shft		10137609	0					
ANR	10137773	MultiplicativeExpression	2 * 8		10137609	1		*			
ANR	10137774	PrimaryExpression	2		10137609	0					
ANR	10137775	PrimaryExpression	8		10137609	1					
ANR	10137776	Condition	( shft -= 8 ) >= 0	218:18:8581:8596	10137609	1	True				
ANR	10137777	RelationalExpression	( shft -= 8 ) >= 0		10137609	0		>=			
ANR	10137778	AssignmentExpression	shft -= 8		10137609	0		-=			
ANR	10137779	Identifier	shft		10137609	0					
ANR	10137780	PrimaryExpression	8		10137609	1					
ANR	10137781	PrimaryExpression	0		10137609	1					
ANR	10137782	CompoundStatement		33:38:685:685	10137609	2					
ANR	10137783	ForStatement	for ( i = 0 ; i < npixels && cc > 0 ; )		10137609	0					
ANR	10137784	ForInit	i = 0 ;	219:7:8610:8615	10137609	0	True				
ANR	10137785	AssignmentExpression	i = 0		10137609	0		=			
ANR	10137786	Identifier	i		10137609	0					
ANR	10137787	PrimaryExpression	0		10137609	1					
ANR	10137788	Condition	i < npixels && cc > 0	219:14:8617:8637	10137609	1	True				
ANR	10137789	AndExpression	i < npixels && cc > 0		10137609	0		&&			
ANR	10137790	RelationalExpression	i < npixels		10137609	0		<			
ANR	10137791	Identifier	i		10137609	0					
ANR	10137792	Identifier	npixels		10137609	1					
ANR	10137793	RelationalExpression	cc > 0		10137609	1		>			
ANR	10137794	Identifier	cc		10137609	0					
ANR	10137795	PrimaryExpression	0		10137609	1					
ANR	10137796	CompoundStatement		34:39:726:726	10137609	2					
ANR	10137797	IfStatement	if ( * bp >= 128 )		10137609	0					
ANR	10137798	Condition	* bp >= 128	220:7:8651:8660	10137609	0	True				
ANR	10137799	RelationalExpression	* bp >= 128		10137609	0		>=			
ANR	10137800	UnaryOperationExpression	* bp		10137609	0					
ANR	10137801	UnaryOperator	*		10137609	0					
ANR	10137802	Identifier	bp		10137609	1					
ANR	10137803	PrimaryExpression	128		10137609	1					
ANR	10137804	CompoundStatement		35:19:747:747	10137609	1					
ANR	10137805	IfStatement	if ( cc < 2 )		10137609	0					
ANR	10137806	Condition	cc < 2	221:8:8684:8689	10137609	0	True				
ANR	10137807	RelationalExpression	cc < 2		10137609	0		<			
ANR	10137808	Identifier	cc		10137609	0					
ANR	10137809	PrimaryExpression	2		10137609	1					
ANR	10137810	BreakStatement	break ;	222:5:8698:8703	10137609	1	True				
ANR	10137811	ExpressionStatement	rc = * bp ++ + ( 2 - 128 )	223:4:8709:8729	10137609	1	True				
ANR	10137812	AssignmentExpression	rc = * bp ++ + ( 2 - 128 )		10137609	0		=			
ANR	10137813	Identifier	rc		10137609	0					
ANR	10137814	AdditiveExpression	* bp ++ + ( 2 - 128 )		10137609	1		+			
ANR	10137815	UnaryOperationExpression	* bp ++		10137609	0					
ANR	10137816	UnaryOperator	*		10137609	0					
ANR	10137817	PostIncDecOperationExpression	bp ++		10137609	1					
ANR	10137818	Identifier	bp		10137609	0					
ANR	10137819	IncDec	++		10137609	1					
ANR	10137820	AdditiveExpression	2 - 128		10137609	1		-			
ANR	10137821	PrimaryExpression	2		10137609	0					
ANR	10137822	PrimaryExpression	128		10137609	1					
ANR	10137823	ExpressionStatement	b = ( int16 ) ( * bp ++ << shft )	224:4:8735:8761	10137609	2	True				
ANR	10137824	AssignmentExpression	b = ( int16 ) ( * bp ++ << shft )		10137609	0		=			
ANR	10137825	Identifier	b		10137609	0					
ANR	10137826	CastExpression	( int16 ) ( * bp ++ << shft )		10137609	1					
ANR	10137827	CastTarget	int16		10137609	0					
ANR	10137828	ShiftExpression	* bp ++ << shft		10137609	1		<<			
ANR	10137829	UnaryOperationExpression	* bp ++		10137609	0					
ANR	10137830	UnaryOperator	*		10137609	0					
ANR	10137831	PostIncDecOperationExpression	bp ++		10137609	1					
ANR	10137832	Identifier	bp		10137609	0					
ANR	10137833	IncDec	++		10137609	1					
ANR	10137834	Identifier	shft		10137609	1					
ANR	10137835	ExpressionStatement	cc -= 2	225:4:8767:8774	10137609	3	True				
ANR	10137836	AssignmentExpression	cc -= 2		10137609	0		-=			
ANR	10137837	Identifier	cc		10137609	0					
ANR	10137838	PrimaryExpression	2		10137609	1					
ANR	10137839	WhileStatement	while ( rc -- && i < npixels )		10137609	4					
ANR	10137840	Condition	rc -- && i < npixels	226:11:8787:8805	10137609	0	True				
ANR	10137841	AndExpression	rc -- && i < npixels		10137609	0		&&			
ANR	10137842	PostIncDecOperationExpression	rc --		10137609	0					
ANR	10137843	Identifier	rc		10137609	0					
ANR	10137844	IncDec	--		10137609	1					
ANR	10137845	RelationalExpression	i < npixels		10137609	1		<			
ANR	10137846	Identifier	i		10137609	0					
ANR	10137847	Identifier	npixels		10137609	1					
ANR	10137848	ExpressionStatement	tp [ i ++ ] |= b	227:5:8813:8825	10137609	1	True				
ANR	10137849	AssignmentExpression	tp [ i ++ ] |= b		10137609	0		|=			
ANR	10137850	ArrayIndexing	tp [ i ++ ]		10137609	0					
ANR	10137851	Identifier	tp		10137609	0					
ANR	10137852	PostIncDecOperationExpression	i ++		10137609	1					
ANR	10137853	Identifier	i		10137609	0					
ANR	10137854	IncDec	++		10137609	1					
ANR	10137855	Identifier	b		10137609	1					
ANR	10137856	ElseStatement	else		10137609	0					
ANR	10137857	CompoundStatement		43:10:921:921	10137609	0					
ANR	10137858	ExpressionStatement	rc = * bp ++	229:4:8859:8869	10137609	0	True				
ANR	10137859	AssignmentExpression	rc = * bp ++		10137609	0		=			
ANR	10137860	Identifier	rc		10137609	0					
ANR	10137861	UnaryOperationExpression	* bp ++		10137609	1					
ANR	10137862	UnaryOperator	*		10137609	0					
ANR	10137863	PostIncDecOperationExpression	bp ++		10137609	1					
ANR	10137864	Identifier	bp		10137609	0					
ANR	10137865	IncDec	++		10137609	1					
ANR	10137866	WhileStatement	while ( -- cc && rc -- && i < npixels )		10137609	1					
ANR	10137867	Condition	-- cc && rc -- && i < npixels	230:11:8901:8927	10137609	0	True				
ANR	10137868	AndExpression	-- cc && rc -- && i < npixels		10137609	0		&&			
ANR	10137869	UnaryExpression	-- cc		10137609	0					
ANR	10137870	IncDec	--		10137609	0					
ANR	10137871	Identifier	cc		10137609	1					
ANR	10137872	AndExpression	rc -- && i < npixels		10137609	1		&&			
ANR	10137873	PostIncDecOperationExpression	rc --		10137609	0					
ANR	10137874	Identifier	rc		10137609	0					
ANR	10137875	IncDec	--		10137609	1					
ANR	10137876	RelationalExpression	i < npixels		10137609	1		<			
ANR	10137877	Identifier	i		10137609	0					
ANR	10137878	Identifier	npixels		10137609	1					
ANR	10137879	ExpressionStatement	tp [ i ++ ] |= ( int16 ) * bp ++ << shft	231:5:8935:8966	10137609	1	True				
ANR	10137880	AssignmentExpression	tp [ i ++ ] |= ( int16 ) * bp ++ << shft		10137609	0		|=			
ANR	10137881	ArrayIndexing	tp [ i ++ ]		10137609	0					
ANR	10137882	Identifier	tp		10137609	0					
ANR	10137883	PostIncDecOperationExpression	i ++		10137609	1					
ANR	10137884	Identifier	i		10137609	0					
ANR	10137885	IncDec	++		10137609	1					
ANR	10137886	ShiftExpression	( int16 ) * bp ++ << shft		10137609	1		<<			
ANR	10137887	CastExpression	( int16 ) * bp ++		10137609	0					
ANR	10137888	CastTarget	int16		10137609	0					
ANR	10137889	UnaryOperationExpression	* bp ++		10137609	1					
ANR	10137890	UnaryOperator	*		10137609	0					
ANR	10137891	PostIncDecOperationExpression	bp ++		10137609	1					
ANR	10137892	Identifier	bp		10137609	0					
ANR	10137893	IncDec	++		10137609	1					
ANR	10137894	Identifier	shft		10137609	1					
ANR	10137895	IfStatement	if ( i != npixels )		10137609	1					
ANR	10137896	Condition	i != npixels	234:6:8983:8994	10137609	0	True				
ANR	10137897	EqualityExpression	i != npixels		10137609	0		!=			
ANR	10137898	Identifier	i		10137609	0					
ANR	10137899	Identifier	npixels		10137609	1					
ANR	10137900	CompoundStatement		49:20:1081:1081	10137609	1					
ANR	10137901	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"	236:3:9072:9253	10137609	0	True				
ANR	10137902	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"		10137609	0					
ANR	10137903	Callee	TIFFErrorExt		10137609	0					
ANR	10137904	Identifier	TIFFErrorExt		10137609	0					
ANR	10137905	ArgumentList	tif -> tif_clientdata		10137609	1					
ANR	10137906	Argument	tif -> tif_clientdata		10137609	0					
ANR	10137907	PtrMemberAccess	tif -> tif_clientdata		10137609	0					
ANR	10137908	Identifier	tif		10137609	0					
ANR	10137909	Identifier	tif_clientdata		10137609	1					
ANR	10137910	Argument	module		10137609	1					
ANR	10137911	Identifier	module		10137609	0					
ANR	10137912	Argument	"""Not enough data at row %lu (short %I64d pixels)"""		10137609	2					
ANR	10137913	PrimaryExpression	"""Not enough data at row %lu (short %I64d pixels)"""		10137609	0					
ANR	10137914	Argument	( unsigned long ) tif -> tif_row		10137609	3					
ANR	10137915	CastExpression	( unsigned long ) tif -> tif_row		10137609	0					
ANR	10137916	CastTarget	unsigned long		10137609	0					
ANR	10137917	PtrMemberAccess	tif -> tif_row		10137609	1					
ANR	10137918	Identifier	tif		10137609	0					
ANR	10137919	Identifier	tif_row		10137609	1					
ANR	10137920	Argument	( unsigned __int64 ) ( npixels - i )		10137609	4					
ANR	10137921	CastExpression	( unsigned __int64 ) ( npixels - i )		10137609	0					
ANR	10137922	CastTarget	unsigned __int64		10137609	0					
ANR	10137923	AdditiveExpression	npixels - i		10137609	1		-			
ANR	10137924	Identifier	npixels		10137609	0					
ANR	10137925	Identifier	i		10137609	1					
ANR	10137926	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	246:3:9458:9486	10137609	1	True				
ANR	10137927	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		10137609	0		=			
ANR	10137928	PtrMemberAccess	tif -> tif_rawcp		10137609	0					
ANR	10137929	Identifier	tif		10137609	0					
ANR	10137930	Identifier	tif_rawcp		10137609	1					
ANR	10137931	CastExpression	( uint8 * ) bp		10137609	1					
ANR	10137932	CastTarget	uint8 *		10137609	0					
ANR	10137933	Identifier	bp		10137609	1					
ANR	10137934	ExpressionStatement	tif -> tif_rawcc = cc	247:3:9491:9510	10137609	2	True				
ANR	10137935	AssignmentExpression	tif -> tif_rawcc = cc		10137609	0		=			
ANR	10137936	PtrMemberAccess	tif -> tif_rawcc		10137609	0					
ANR	10137937	Identifier	tif		10137609	0					
ANR	10137938	Identifier	tif_rawcc		10137609	1					
ANR	10137939	Identifier	cc		10137609	1					
ANR	10137940	ReturnStatement	return ( 0 ) ;	248:3:9515:9525	10137609	3	True				
ANR	10137941	PrimaryExpression	0		10137609	0					
ANR	10137942	ExpressionStatement	"( * sp -> tfunc ) ( sp , op , npixels )"	251:1:9535:9564	10137609	19	True				
ANR	10137943	CallExpression	"( * sp -> tfunc ) ( sp , op , npixels )"		10137609	0					
ANR	10137944	Callee	* sp -> tfunc		10137609	0					
ANR	10137945	UnaryOperationExpression	* sp -> tfunc		10137609	0					
ANR	10137946	UnaryOperator	*		10137609	0					
ANR	10137947	PtrMemberAccess	sp -> tfunc		10137609	1					
ANR	10137948	Identifier	sp		10137609	0					
ANR	10137949	Identifier	tfunc		10137609	1					
ANR	10137950	ArgumentList	sp		10137609	1					
ANR	10137951	Argument	sp		10137609	0					
ANR	10137952	Identifier	sp		10137609	0					
ANR	10137953	Argument	op		10137609	1					
ANR	10137954	Identifier	op		10137609	0					
ANR	10137955	Argument	npixels		10137609	2					
ANR	10137956	Identifier	npixels		10137609	0					
ANR	10137957	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	252:1:9567:9595	10137609	20	True				
ANR	10137958	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		10137609	0		=			
ANR	10137959	PtrMemberAccess	tif -> tif_rawcp		10137609	0					
ANR	10137960	Identifier	tif		10137609	0					
ANR	10137961	Identifier	tif_rawcp		10137609	1					
ANR	10137962	CastExpression	( uint8 * ) bp		10137609	1					
ANR	10137963	CastTarget	uint8 *		10137609	0					
ANR	10137964	Identifier	bp		10137609	1					
ANR	10137965	ExpressionStatement	tif -> tif_rawcc = cc	253:1:9598:9617	10137609	21	True				
ANR	10137966	AssignmentExpression	tif -> tif_rawcc = cc		10137609	0		=			
ANR	10137967	PtrMemberAccess	tif -> tif_rawcc		10137609	0					
ANR	10137968	Identifier	tif		10137609	0					
ANR	10137969	Identifier	tif_rawcc		10137609	1					
ANR	10137970	Identifier	cc		10137609	1					
ANR	10137971	ReturnStatement	return ( 1 ) ;	254:1:9620:9630	10137609	22	True				
ANR	10137972	PrimaryExpression	1		10137609	0					
ANR	10137973	ReturnType	static int		10137609	1					
ANR	10137974	Identifier	LogL16Decode		10137609	2					
ANR	10137975	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		10137609	3					
ANR	10137976	Parameter	TIFF * tif	185:13:7869:7877	10137609	0	True				
ANR	10137977	ParameterType	TIFF *		10137609	0					
ANR	10137978	Identifier	tif		10137609	1					
ANR	10137979	Parameter	uint8 * op	185:24:7880:7888	10137609	1	True				
ANR	10137980	ParameterType	uint8 *		10137609	0					
ANR	10137981	Identifier	op		10137609	1					
ANR	10137982	Parameter	tmsize_t occ	185:35:7891:7902	10137609	2	True				
ANR	10137983	ParameterType	tmsize_t		10137609	0					
ANR	10137984	Identifier	occ		10137609	1					
ANR	10137985	Parameter	uint16 s	185:49:7905:7912	10137609	3	True				
ANR	10137986	ParameterType	uint16		10137609	0					
ANR	10137987	Identifier	s		10137609	1					
ANR	10137988	CFGEntryNode	ENTRY		10137609		True				
ANR	10137989	CFGExitNode	EXIT		10137609		True				
ANR	10137990	Symbol	* sp		10137609						
ANR	10137991	Symbol	* bp ++		10137609						
ANR	10137992	Symbol	sp -> user_datafmt		10137609						
ANR	10137993	Symbol	occ		10137609						
ANR	10137994	Symbol	bp		10137609						
ANR	10137995	Symbol	tif		10137609						
ANR	10137996	Symbol	npixels		10137609						
ANR	10137997	Symbol	sp -> tbuflen		10137609						
ANR	10137998	Symbol	tif -> tif_rawcc		10137609						
ANR	10137999	Symbol	sp -> pixel_size		10137609						
ANR	10138000	Symbol	DecoderState		10137609						
ANR	10138001	Symbol	SGILOGDATAFMT_16BIT		10137609						
ANR	10138002	Symbol	shft		10137609						
ANR	10138003	Symbol	* bp		10137609						
ANR	10138004	Symbol	sp -> tbuf		10137609						
ANR	10138005	Symbol	sp -> tfunc		10137609						
ANR	10138006	Symbol	sp		10137609						
ANR	10138007	Symbol	cc		10137609						
ANR	10138008	Symbol	op		10137609						
ANR	10138009	Symbol	* tp		10137609						
ANR	10138010	Symbol	b		10137609						
ANR	10138011	Symbol	NULL		10137609						
ANR	10138012	Symbol	module		10137609						
ANR	10138013	Symbol	i		10137609						
ANR	10138014	Symbol	tif -> tif_row		10137609						
ANR	10138015	Symbol	tif -> tif_rawcp		10137609						
ANR	10138016	Symbol	tif -> tif_clientdata		10137609						
ANR	10138017	Symbol	rc		10137609						
ANR	10138018	Symbol	s		10137609						
ANR	10138019	Symbol	* tif		10137609						
ANR	10138020	Symbol	tp		10137609						
ANR	10138021	Function	LogLuvDecode24	260:0:9679:11013							
ANR	10138022	FunctionDef	"LogLuvDecode24 (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		10138021	0					
ANR	10138023	CompoundStatement		262:0:9751:11013	10138021	0					
ANR	10138024	Statement	static	263:1:9754:9759	10138021	0	True				
ANR	10138025	IdentifierDeclStatement	"const char module [ ] = ""LogLuvDecode24"" ;"	263:8:9761:9799	10138021	1	True				
ANR	10138026	IdentifierDecl	"module [ ] = ""LogLuvDecode24"""		10138021	0					
ANR	10138027	IdentifierDeclType	const char [ ]		10138021	0					
ANR	10138028	Identifier	module		10138021	1					
ANR	10138029	AssignmentExpression	"module [ ] = ""LogLuvDecode24"""		10138021	2		=			
ANR	10138030	Identifier	module		10138021	0					
ANR	10138031	PrimaryExpression	"""LogLuvDecode24"""		10138021	1					
ANR	10138032	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	264:1:9802:9837	10138021	2	True				
ANR	10138033	IdentifierDecl	* sp = DecoderState ( tif )		10138021	0					
ANR	10138034	IdentifierDeclType	LogLuvState *		10138021	0					
ANR	10138035	Identifier	sp		10138021	1					
ANR	10138036	AssignmentExpression	* sp = DecoderState ( tif )		10138021	2		=			
ANR	10138037	Identifier	sp		10138021	0					
ANR	10138038	CallExpression	DecoderState ( tif )		10138021	1					
ANR	10138039	Callee	DecoderState		10138021	0					
ANR	10138040	Identifier	DecoderState		10138021	0					
ANR	10138041	ArgumentList	tif		10138021	1					
ANR	10138042	Argument	tif		10138021	0					
ANR	10138043	Identifier	tif		10138021	0					
ANR	10138044	IdentifierDeclStatement	tmsize_t cc ;	265:1:9840:9851	10138021	3	True				
ANR	10138045	IdentifierDecl	cc		10138021	0					
ANR	10138046	IdentifierDeclType	tmsize_t		10138021	0					
ANR	10138047	Identifier	cc		10138021	1					
ANR	10138048	IdentifierDeclStatement	tmsize_t i ;	266:1:9854:9864	10138021	4	True				
ANR	10138049	IdentifierDecl	i		10138021	0					
ANR	10138050	IdentifierDeclType	tmsize_t		10138021	0					
ANR	10138051	Identifier	i		10138021	1					
ANR	10138052	IdentifierDeclStatement	tmsize_t npixels ;	267:1:9867:9883	10138021	5	True				
ANR	10138053	IdentifierDecl	npixels		10138021	0					
ANR	10138054	IdentifierDeclType	tmsize_t		10138021	0					
ANR	10138055	Identifier	npixels		10138021	1					
ANR	10138056	IdentifierDeclStatement	unsigned char * bp ;	268:1:9886:9903	10138021	6	True				
ANR	10138057	IdentifierDecl	* bp		10138021	0					
ANR	10138058	IdentifierDeclType	unsigned char *		10138021	0					
ANR	10138059	Identifier	bp		10138021	1					
ANR	10138060	IdentifierDeclStatement	uint32 * tp ;	269:1:9906:9916	10138021	7	True				
ANR	10138061	IdentifierDecl	* tp		10138021	0					
ANR	10138062	IdentifierDeclType	uint32 *		10138021	0					
ANR	10138063	Identifier	tp		10138021	1					
ANR	10138064	ExpressionStatement	assert ( s == 0 )	271:1:9920:9934	10138021	8	True				
ANR	10138065	CallExpression	assert ( s == 0 )		10138021	0					
ANR	10138066	Callee	assert		10138021	0					
ANR	10138067	Identifier	assert		10138021	0					
ANR	10138068	ArgumentList	s == 0		10138021	1					
ANR	10138069	Argument	s == 0		10138021	0					
ANR	10138070	EqualityExpression	s == 0		10138021	0		==			
ANR	10138071	Identifier	s		10138021	0					
ANR	10138072	PrimaryExpression	0		10138021	1					
ANR	10138073	ExpressionStatement	assert ( sp != NULL )	272:1:9937:9955	10138021	9	True				
ANR	10138074	CallExpression	assert ( sp != NULL )		10138021	0					
ANR	10138075	Callee	assert		10138021	0					
ANR	10138076	Identifier	assert		10138021	0					
ANR	10138077	ArgumentList	sp != NULL		10138021	1					
ANR	10138078	Argument	sp != NULL		10138021	0					
ANR	10138079	EqualityExpression	sp != NULL		10138021	0		!=			
ANR	10138080	Identifier	sp		10138021	0					
ANR	10138081	Identifier	NULL		10138021	1					
ANR	10138082	ExpressionStatement	npixels = occ / sp -> pixel_size	274:1:9959:9989	10138021	10	True				
ANR	10138083	AssignmentExpression	npixels = occ / sp -> pixel_size		10138021	0		=			
ANR	10138084	Identifier	npixels		10138021	0					
ANR	10138085	MultiplicativeExpression	occ / sp -> pixel_size		10138021	1		/			
ANR	10138086	Identifier	occ		10138021	0					
ANR	10138087	PtrMemberAccess	sp -> pixel_size		10138021	1					
ANR	10138088	Identifier	sp		10138021	0					
ANR	10138089	Identifier	pixel_size		10138021	1					
ANR	10138090	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		10138021	11					
ANR	10138091	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	276:5:9997:10033	10138021	0	True				
ANR	10138092	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		10138021	0		==			
ANR	10138093	PtrMemberAccess	sp -> user_datafmt		10138021	0					
ANR	10138094	Identifier	sp		10138021	0					
ANR	10138095	Identifier	user_datafmt		10138021	1					
ANR	10138096	Identifier	SGILOGDATAFMT_RAW		10138021	1					
ANR	10138097	ExpressionStatement	tp = ( uint32 * ) op	277:2:10038:10055	10138021	1	True				
ANR	10138098	AssignmentExpression	tp = ( uint32 * ) op		10138021	0		=			
ANR	10138099	Identifier	tp		10138021	0					
ANR	10138100	CastExpression	( uint32 * ) op		10138021	1					
ANR	10138101	CastTarget	uint32 *		10138021	0					
ANR	10138102	Identifier	op		10138021	1					
ANR	10138103	ElseStatement	else		10138021	0					
ANR	10138104	CompoundStatement		17:6:311:311	10138021	0					
ANR	10138105	IfStatement	if ( sp -> tbuflen < npixels )		10138021	0					
ANR	10138106	Condition	sp -> tbuflen < npixels	279:5:10070:10090	10138021	0	True				
ANR	10138107	RelationalExpression	sp -> tbuflen < npixels		10138021	0		<			
ANR	10138108	PtrMemberAccess	sp -> tbuflen		10138021	0					
ANR	10138109	Identifier	sp		10138021	0					
ANR	10138110	Identifier	tbuflen		10138021	1					
ANR	10138111	Identifier	npixels		10138021	1					
ANR	10138112	CompoundStatement		18:28:341:341	10138021	1					
ANR	10138113	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	280:3:10098:10178	10138021	0	True				
ANR	10138114	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		10138021	0					
ANR	10138115	Callee	TIFFErrorExt		10138021	0					
ANR	10138116	Identifier	TIFFErrorExt		10138021	0					
ANR	10138117	ArgumentList	tif -> tif_clientdata		10138021	1					
ANR	10138118	Argument	tif -> tif_clientdata		10138021	0					
ANR	10138119	PtrMemberAccess	tif -> tif_clientdata		10138021	0					
ANR	10138120	Identifier	tif		10138021	0					
ANR	10138121	Identifier	tif_clientdata		10138021	1					
ANR	10138122	Argument	module		10138021	1					
ANR	10138123	Identifier	module		10138021	0					
ANR	10138124	Argument	"""Translation buffer too short"""		10138021	2					
ANR	10138125	PrimaryExpression	"""Translation buffer too short"""		10138021	0					
ANR	10138126	ReturnStatement	return ( 0 ) ;	282:3:10183:10193	10138021	1	True				
ANR	10138127	PrimaryExpression	0		10138021	0					
ANR	10138128	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	284:2:10201:10225	10138021	1	True				
ANR	10138129	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		10138021	0		=			
ANR	10138130	Identifier	tp		10138021	0					
ANR	10138131	CastExpression	( uint32 * ) sp -> tbuf		10138021	1					
ANR	10138132	CastTarget	uint32 *		10138021	0					
ANR	10138133	PtrMemberAccess	sp -> tbuf		10138021	1					
ANR	10138134	Identifier	sp		10138021	0					
ANR	10138135	Identifier	tbuf		10138021	1					
ANR	10138136	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	287:1:10262:10298	10138021	12	True				
ANR	10138137	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		10138021	0		=			
ANR	10138138	Identifier	bp		10138021	0					
ANR	10138139	CastExpression	( unsigned char * ) tif -> tif_rawcp		10138021	1					
ANR	10138140	CastTarget	unsigned char *		10138021	0					
ANR	10138141	PtrMemberAccess	tif -> tif_rawcp		10138021	1					
ANR	10138142	Identifier	tif		10138021	0					
ANR	10138143	Identifier	tif_rawcp		10138021	1					
ANR	10138144	ExpressionStatement	cc = tif -> tif_rawcc	288:1:10301:10320	10138021	13	True				
ANR	10138145	AssignmentExpression	cc = tif -> tif_rawcc		10138021	0		=			
ANR	10138146	Identifier	cc		10138021	0					
ANR	10138147	PtrMemberAccess	tif -> tif_rawcc		10138021	1					
ANR	10138148	Identifier	tif		10138021	0					
ANR	10138149	Identifier	tif_rawcc		10138021	1					
ANR	10138150	ForStatement	for ( i = 0 ; i < npixels && cc >= 3 ; i ++ )		10138021	14					
ANR	10138151	ForInit	i = 0 ;	289:6:10328:10333	10138021	0	True				
ANR	10138152	AssignmentExpression	i = 0		10138021	0		=			
ANR	10138153	Identifier	i		10138021	0					
ANR	10138154	PrimaryExpression	0		10138021	1					
ANR	10138155	Condition	i < npixels && cc >= 3	289:13:10335:10356	10138021	1	True				
ANR	10138156	AndExpression	i < npixels && cc >= 3		10138021	0		&&			
ANR	10138157	RelationalExpression	i < npixels		10138021	0		<			
ANR	10138158	Identifier	i		10138021	0					
ANR	10138159	Identifier	npixels		10138021	1					
ANR	10138160	RelationalExpression	cc >= 3		10138021	1		>=			
ANR	10138161	Identifier	cc		10138021	0					
ANR	10138162	PrimaryExpression	3		10138021	1					
ANR	10138163	PostIncDecOperationExpression	i ++	289:37:10359:10361	10138021	2	True				
ANR	10138164	Identifier	i		10138021	0					
ANR	10138165	IncDec	++		10138021	1					
ANR	10138166	CompoundStatement		28:42:612:612	10138021	3					
ANR	10138167	ExpressionStatement	tp [ i ] = bp [ 0 ] << 16 | bp [ 1 ] << 8 | bp [ 2 ]	290:2:10368:10408	10138021	0	True				
ANR	10138168	AssignmentExpression	tp [ i ] = bp [ 0 ] << 16 | bp [ 1 ] << 8 | bp [ 2 ]		10138021	0		=			
ANR	10138169	ArrayIndexing	tp [ i ]		10138021	0					
ANR	10138170	Identifier	tp		10138021	0					
ANR	10138171	Identifier	i		10138021	1					
ANR	10138172	InclusiveOrExpression	bp [ 0 ] << 16 | bp [ 1 ] << 8 | bp [ 2 ]		10138021	1		|			
ANR	10138173	ShiftExpression	bp [ 0 ] << 16		10138021	0		<<			
ANR	10138174	ArrayIndexing	bp [ 0 ]		10138021	0					
ANR	10138175	Identifier	bp		10138021	0					
ANR	10138176	PrimaryExpression	0		10138021	1					
ANR	10138177	PrimaryExpression	16		10138021	1					
ANR	10138178	InclusiveOrExpression	bp [ 1 ] << 8 | bp [ 2 ]		10138021	1		|			
ANR	10138179	ShiftExpression	bp [ 1 ] << 8		10138021	0		<<			
ANR	10138180	ArrayIndexing	bp [ 1 ]		10138021	0					
ANR	10138181	Identifier	bp		10138021	0					
ANR	10138182	PrimaryExpression	1		10138021	1					
ANR	10138183	PrimaryExpression	8		10138021	1					
ANR	10138184	ArrayIndexing	bp [ 2 ]		10138021	1					
ANR	10138185	Identifier	bp		10138021	0					
ANR	10138186	PrimaryExpression	2		10138021	1					
ANR	10138187	ExpressionStatement	bp += 3	291:2:10412:10419	10138021	1	True				
ANR	10138188	AssignmentExpression	bp += 3		10138021	0		+=			
ANR	10138189	Identifier	bp		10138021	0					
ANR	10138190	PrimaryExpression	3		10138021	1					
ANR	10138191	ExpressionStatement	cc -= 3	292:2:10423:10430	10138021	2	True				
ANR	10138192	AssignmentExpression	cc -= 3		10138021	0		-=			
ANR	10138193	Identifier	cc		10138021	0					
ANR	10138194	PrimaryExpression	3		10138021	1					
ANR	10138195	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	294:1:10436:10464	10138021	15	True				
ANR	10138196	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		10138021	0		=			
ANR	10138197	PtrMemberAccess	tif -> tif_rawcp		10138021	0					
ANR	10138198	Identifier	tif		10138021	0					
ANR	10138199	Identifier	tif_rawcp		10138021	1					
ANR	10138200	CastExpression	( uint8 * ) bp		10138021	1					
ANR	10138201	CastTarget	uint8 *		10138021	0					
ANR	10138202	Identifier	bp		10138021	1					
ANR	10138203	ExpressionStatement	tif -> tif_rawcc = cc	295:1:10467:10486	10138021	16	True				
ANR	10138204	AssignmentExpression	tif -> tif_rawcc = cc		10138021	0		=			
ANR	10138205	PtrMemberAccess	tif -> tif_rawcc		10138021	0					
ANR	10138206	Identifier	tif		10138021	0					
ANR	10138207	Identifier	tif_rawcc		10138021	1					
ANR	10138208	Identifier	cc		10138021	1					
ANR	10138209	IfStatement	if ( i != npixels )		10138021	17					
ANR	10138210	Condition	i != npixels	296:5:10493:10504	10138021	0	True				
ANR	10138211	EqualityExpression	i != npixels		10138021	0		!=			
ANR	10138212	Identifier	i		10138021	0					
ANR	10138213	Identifier	npixels		10138021	1					
ANR	10138214	CompoundStatement		35:19:755:755	10138021	1					
ANR	10138215	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"	298:2:10581:10756	10138021	0	True				
ANR	10138216	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"		10138021	0					
ANR	10138217	Callee	TIFFErrorExt		10138021	0					
ANR	10138218	Identifier	TIFFErrorExt		10138021	0					
ANR	10138219	ArgumentList	tif -> tif_clientdata		10138021	1					
ANR	10138220	Argument	tif -> tif_clientdata		10138021	0					
ANR	10138221	PtrMemberAccess	tif -> tif_clientdata		10138021	0					
ANR	10138222	Identifier	tif		10138021	0					
ANR	10138223	Identifier	tif_clientdata		10138021	1					
ANR	10138224	Argument	module		10138021	1					
ANR	10138225	Identifier	module		10138021	0					
ANR	10138226	Argument	"""Not enough data at row %lu (short %I64d pixels)"""		10138021	2					
ANR	10138227	PrimaryExpression	"""Not enough data at row %lu (short %I64d pixels)"""		10138021	0					
ANR	10138228	Argument	( unsigned long ) tif -> tif_row		10138021	3					
ANR	10138229	CastExpression	( unsigned long ) tif -> tif_row		10138021	0					
ANR	10138230	CastTarget	unsigned long		10138021	0					
ANR	10138231	PtrMemberAccess	tif -> tif_row		10138021	1					
ANR	10138232	Identifier	tif		10138021	0					
ANR	10138233	Identifier	tif_row		10138021	1					
ANR	10138234	Argument	( unsigned __int64 ) ( npixels - i )		10138021	4					
ANR	10138235	CastExpression	( unsigned __int64 ) ( npixels - i )		10138021	0					
ANR	10138236	CastTarget	unsigned __int64		10138021	0					
ANR	10138237	AdditiveExpression	npixels - i		10138021	1		-			
ANR	10138238	Identifier	npixels		10138021	0					
ANR	10138239	Identifier	i		10138021	1					
ANR	10138240	ReturnStatement	return ( 0 ) ;	308:2:10953:10963	10138021	1	True				
ANR	10138241	PrimaryExpression	0		10138021	0					
ANR	10138242	ExpressionStatement	"( * sp -> tfunc ) ( sp , op , npixels )"	310:1:10969:10998	10138021	18	True				
ANR	10138243	CallExpression	"( * sp -> tfunc ) ( sp , op , npixels )"		10138021	0					
ANR	10138244	Callee	* sp -> tfunc		10138021	0					
ANR	10138245	UnaryOperationExpression	* sp -> tfunc		10138021	0					
ANR	10138246	UnaryOperator	*		10138021	0					
ANR	10138247	PtrMemberAccess	sp -> tfunc		10138021	1					
ANR	10138248	Identifier	sp		10138021	0					
ANR	10138249	Identifier	tfunc		10138021	1					
ANR	10138250	ArgumentList	sp		10138021	1					
ANR	10138251	Argument	sp		10138021	0					
ANR	10138252	Identifier	sp		10138021	0					
ANR	10138253	Argument	op		10138021	1					
ANR	10138254	Identifier	op		10138021	0					
ANR	10138255	Argument	npixels		10138021	2					
ANR	10138256	Identifier	npixels		10138021	0					
ANR	10138257	ReturnStatement	return ( 1 ) ;	311:1:11001:11011	10138021	19	True				
ANR	10138258	PrimaryExpression	1		10138021	0					
ANR	10138259	ReturnType	static int		10138021	1					
ANR	10138260	Identifier	LogLuvDecode24		10138021	2					
ANR	10138261	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		10138021	3					
ANR	10138262	Parameter	TIFF * tif	261:15:9705:9713	10138021	0	True				
ANR	10138263	ParameterType	TIFF *		10138021	0					
ANR	10138264	Identifier	tif		10138021	1					
ANR	10138265	Parameter	uint8 * op	261:26:9716:9724	10138021	1	True				
ANR	10138266	ParameterType	uint8 *		10138021	0					
ANR	10138267	Identifier	op		10138021	1					
ANR	10138268	Parameter	tmsize_t occ	261:37:9727:9738	10138021	2	True				
ANR	10138269	ParameterType	tmsize_t		10138021	0					
ANR	10138270	Identifier	occ		10138021	1					
ANR	10138271	Parameter	uint16 s	261:51:9741:9748	10138021	3	True				
ANR	10138272	ParameterType	uint16		10138021	0					
ANR	10138273	Identifier	s		10138021	1					
ANR	10138274	CFGEntryNode	ENTRY		10138021		True				
ANR	10138275	CFGExitNode	EXIT		10138021		True				
ANR	10138276	Symbol	* sp		10138021						
ANR	10138277	Symbol	sp -> user_datafmt		10138021						
ANR	10138278	Symbol	SGILOGDATAFMT_RAW		10138021						
ANR	10138279	Symbol	occ		10138021						
ANR	10138280	Symbol	bp		10138021						
ANR	10138281	Symbol	tif		10138021						
ANR	10138282	Symbol	npixels		10138021						
ANR	10138283	Symbol	sp -> tbuflen		10138021						
ANR	10138284	Symbol	tif -> tif_rawcc		10138021						
ANR	10138285	Symbol	sp -> pixel_size		10138021						
ANR	10138286	Symbol	DecoderState		10138021						
ANR	10138287	Symbol	* bp		10138021						
ANR	10138288	Symbol	sp -> tbuf		10138021						
ANR	10138289	Symbol	sp -> tfunc		10138021						
ANR	10138290	Symbol	sp		10138021						
ANR	10138291	Symbol	cc		10138021						
ANR	10138292	Symbol	op		10138021						
ANR	10138293	Symbol	* tp		10138021						
ANR	10138294	Symbol	NULL		10138021						
ANR	10138295	Symbol	module		10138021						
ANR	10138296	Symbol	i		10138021						
ANR	10138297	Symbol	tif -> tif_row		10138021						
ANR	10138298	Symbol	tif -> tif_rawcp		10138021						
ANR	10138299	Symbol	tif -> tif_clientdata		10138021						
ANR	10138300	Symbol	s		10138021						
ANR	10138301	Symbol	* i		10138021						
ANR	10138302	Symbol	* tif		10138021						
ANR	10138303	Symbol	tp		10138021						
ANR	10138304	Function	LogLuvDecode32	317:0:11060:12850							
ANR	10138305	FunctionDef	"LogLuvDecode32 (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		10138304	0					
ANR	10138306	CompoundStatement		319:0:11132:12850	10138304	0					
ANR	10138307	Statement	static	320:1:11135:11140	10138304	0	True				
ANR	10138308	IdentifierDeclStatement	"const char module [ ] = ""LogLuvDecode32"" ;"	320:8:11142:11180	10138304	1	True				
ANR	10138309	IdentifierDecl	"module [ ] = ""LogLuvDecode32"""		10138304	0					
ANR	10138310	IdentifierDeclType	const char [ ]		10138304	0					
ANR	10138311	Identifier	module		10138304	1					
ANR	10138312	AssignmentExpression	"module [ ] = ""LogLuvDecode32"""		10138304	2		=			
ANR	10138313	Identifier	module		10138304	0					
ANR	10138314	PrimaryExpression	"""LogLuvDecode32"""		10138304	1					
ANR	10138315	IdentifierDeclStatement	LogLuvState * sp ;	321:1:11183:11198	10138304	2	True				
ANR	10138316	IdentifierDecl	* sp		10138304	0					
ANR	10138317	IdentifierDeclType	LogLuvState *		10138304	0					
ANR	10138318	Identifier	sp		10138304	1					
ANR	10138319	IdentifierDeclStatement	int shft ;	322:1:11201:11209	10138304	3	True				
ANR	10138320	IdentifierDecl	shft		10138304	0					
ANR	10138321	IdentifierDeclType	int		10138304	0					
ANR	10138322	Identifier	shft		10138304	1					
ANR	10138323	IdentifierDeclStatement	tmsize_t i ;	323:1:11212:11222	10138304	4	True				
ANR	10138324	IdentifierDecl	i		10138304	0					
ANR	10138325	IdentifierDeclType	tmsize_t		10138304	0					
ANR	10138326	Identifier	i		10138304	1					
ANR	10138327	IdentifierDeclStatement	tmsize_t npixels ;	324:1:11225:11241	10138304	5	True				
ANR	10138328	IdentifierDecl	npixels		10138304	0					
ANR	10138329	IdentifierDeclType	tmsize_t		10138304	0					
ANR	10138330	Identifier	npixels		10138304	1					
ANR	10138331	IdentifierDeclStatement	unsigned char * bp ;	325:1:11244:11261	10138304	6	True				
ANR	10138332	IdentifierDecl	* bp		10138304	0					
ANR	10138333	IdentifierDeclType	unsigned char *		10138304	0					
ANR	10138334	Identifier	bp		10138304	1					
ANR	10138335	IdentifierDeclStatement	uint32 * tp ;	326:1:11264:11274	10138304	7	True				
ANR	10138336	IdentifierDecl	* tp		10138304	0					
ANR	10138337	IdentifierDeclType	uint32 *		10138304	0					
ANR	10138338	Identifier	tp		10138304	1					
ANR	10138339	IdentifierDeclStatement	uint32 b ;	327:1:11277:11285	10138304	8	True				
ANR	10138340	IdentifierDecl	b		10138304	0					
ANR	10138341	IdentifierDeclType	uint32		10138304	0					
ANR	10138342	Identifier	b		10138304	1					
ANR	10138343	IdentifierDeclStatement	tmsize_t cc ;	328:1:11288:11299	10138304	9	True				
ANR	10138344	IdentifierDecl	cc		10138304	0					
ANR	10138345	IdentifierDeclType	tmsize_t		10138304	0					
ANR	10138346	Identifier	cc		10138304	1					
ANR	10138347	IdentifierDeclStatement	int rc ;	329:1:11302:11308	10138304	10	True				
ANR	10138348	IdentifierDecl	rc		10138304	0					
ANR	10138349	IdentifierDeclType	int		10138304	0					
ANR	10138350	Identifier	rc		10138304	1					
ANR	10138351	ExpressionStatement	assert ( s == 0 )	331:1:11312:11326	10138304	11	True				
ANR	10138352	CallExpression	assert ( s == 0 )		10138304	0					
ANR	10138353	Callee	assert		10138304	0					
ANR	10138354	Identifier	assert		10138304	0					
ANR	10138355	ArgumentList	s == 0		10138304	1					
ANR	10138356	Argument	s == 0		10138304	0					
ANR	10138357	EqualityExpression	s == 0		10138304	0		==			
ANR	10138358	Identifier	s		10138304	0					
ANR	10138359	PrimaryExpression	0		10138304	1					
ANR	10138360	ExpressionStatement	sp = DecoderState ( tif )	332:1:11329:11351	10138304	12	True				
ANR	10138361	AssignmentExpression	sp = DecoderState ( tif )		10138304	0		=			
ANR	10138362	Identifier	sp		10138304	0					
ANR	10138363	CallExpression	DecoderState ( tif )		10138304	1					
ANR	10138364	Callee	DecoderState		10138304	0					
ANR	10138365	Identifier	DecoderState		10138304	0					
ANR	10138366	ArgumentList	tif		10138304	1					
ANR	10138367	Argument	tif		10138304	0					
ANR	10138368	Identifier	tif		10138304	0					
ANR	10138369	ExpressionStatement	assert ( sp != NULL )	333:1:11354:11372	10138304	13	True				
ANR	10138370	CallExpression	assert ( sp != NULL )		10138304	0					
ANR	10138371	Callee	assert		10138304	0					
ANR	10138372	Identifier	assert		10138304	0					
ANR	10138373	ArgumentList	sp != NULL		10138304	1					
ANR	10138374	Argument	sp != NULL		10138304	0					
ANR	10138375	EqualityExpression	sp != NULL		10138304	0		!=			
ANR	10138376	Identifier	sp		10138304	0					
ANR	10138377	Identifier	NULL		10138304	1					
ANR	10138378	ExpressionStatement	npixels = occ / sp -> pixel_size	335:1:11376:11406	10138304	14	True				
ANR	10138379	AssignmentExpression	npixels = occ / sp -> pixel_size		10138304	0		=			
ANR	10138380	Identifier	npixels		10138304	0					
ANR	10138381	MultiplicativeExpression	occ / sp -> pixel_size		10138304	1		/			
ANR	10138382	Identifier	occ		10138304	0					
ANR	10138383	PtrMemberAccess	sp -> pixel_size		10138304	1					
ANR	10138384	Identifier	sp		10138304	0					
ANR	10138385	Identifier	pixel_size		10138304	1					
ANR	10138386	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		10138304	15					
ANR	10138387	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	337:5:11414:11450	10138304	0	True				
ANR	10138388	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		10138304	0		==			
ANR	10138389	PtrMemberAccess	sp -> user_datafmt		10138304	0					
ANR	10138390	Identifier	sp		10138304	0					
ANR	10138391	Identifier	user_datafmt		10138304	1					
ANR	10138392	Identifier	SGILOGDATAFMT_RAW		10138304	1					
ANR	10138393	ExpressionStatement	tp = ( uint32 * ) op	338:2:11455:11472	10138304	1	True				
ANR	10138394	AssignmentExpression	tp = ( uint32 * ) op		10138304	0		=			
ANR	10138395	Identifier	tp		10138304	0					
ANR	10138396	CastExpression	( uint32 * ) op		10138304	1					
ANR	10138397	CastTarget	uint32 *		10138304	0					
ANR	10138398	Identifier	op		10138304	1					
ANR	10138399	ElseStatement	else		10138304	0					
ANR	10138400	CompoundStatement		21:6:347:347	10138304	0					
ANR	10138401	IfStatement	if ( sp -> tbuflen < npixels )		10138304	0					
ANR	10138402	Condition	sp -> tbuflen < npixels	340:5:11487:11507	10138304	0	True				
ANR	10138403	RelationalExpression	sp -> tbuflen < npixels		10138304	0		<			
ANR	10138404	PtrMemberAccess	sp -> tbuflen		10138304	0					
ANR	10138405	Identifier	sp		10138304	0					
ANR	10138406	Identifier	tbuflen		10138304	1					
ANR	10138407	Identifier	npixels		10138304	1					
ANR	10138408	CompoundStatement		22:28:377:377	10138304	1					
ANR	10138409	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	341:3:11515:11595	10138304	0	True				
ANR	10138410	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		10138304	0					
ANR	10138411	Callee	TIFFErrorExt		10138304	0					
ANR	10138412	Identifier	TIFFErrorExt		10138304	0					
ANR	10138413	ArgumentList	tif -> tif_clientdata		10138304	1					
ANR	10138414	Argument	tif -> tif_clientdata		10138304	0					
ANR	10138415	PtrMemberAccess	tif -> tif_clientdata		10138304	0					
ANR	10138416	Identifier	tif		10138304	0					
ANR	10138417	Identifier	tif_clientdata		10138304	1					
ANR	10138418	Argument	module		10138304	1					
ANR	10138419	Identifier	module		10138304	0					
ANR	10138420	Argument	"""Translation buffer too short"""		10138304	2					
ANR	10138421	PrimaryExpression	"""Translation buffer too short"""		10138304	0					
ANR	10138422	ReturnStatement	return ( 0 ) ;	343:3:11600:11610	10138304	1	True				
ANR	10138423	PrimaryExpression	0		10138304	0					
ANR	10138424	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	345:2:11618:11641	10138304	1	True				
ANR	10138425	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		10138304	0		=			
ANR	10138426	Identifier	tp		10138304	0					
ANR	10138427	CastExpression	( uint32 * ) sp -> tbuf		10138304	1					
ANR	10138428	CastTarget	uint32 *		10138304	0					
ANR	10138429	PtrMemberAccess	sp -> tbuf		10138304	1					
ANR	10138430	Identifier	sp		10138304	0					
ANR	10138431	Identifier	tbuf		10138304	1					
ANR	10138432	ExpressionStatement	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"	347:1:11647:11697	10138304	16	True				
ANR	10138433	CallExpression	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"		10138304	0					
ANR	10138434	Callee	_TIFFmemset		10138304	0					
ANR	10138435	Identifier	_TIFFmemset		10138304	0					
ANR	10138436	ArgumentList	( void * ) tp		10138304	1					
ANR	10138437	Argument	( void * ) tp		10138304	0					
ANR	10138438	CastExpression	( void * ) tp		10138304	0					
ANR	10138439	CastTarget	void *		10138304	0					
ANR	10138440	Identifier	tp		10138304	1					
ANR	10138441	Argument	0		10138304	1					
ANR	10138442	PrimaryExpression	0		10138304	0					
ANR	10138443	Argument	npixels * sizeof ( tp [ 0 ] )		10138304	2					
ANR	10138444	MultiplicativeExpression	npixels * sizeof ( tp [ 0 ] )		10138304	0		*			
ANR	10138445	Identifier	npixels		10138304	0					
ANR	10138446	SizeofExpression	sizeof ( tp [ 0 ] )		10138304	1					
ANR	10138447	Sizeof	sizeof		10138304	0					
ANR	10138448	ArrayIndexing	tp [ 0 ]		10138304	1					
ANR	10138449	Identifier	tp		10138304	0					
ANR	10138450	PrimaryExpression	0		10138304	1					
ANR	10138451	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	349:1:11701:11737	10138304	17	True				
ANR	10138452	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		10138304	0		=			
ANR	10138453	Identifier	bp		10138304	0					
ANR	10138454	CastExpression	( unsigned char * ) tif -> tif_rawcp		10138304	1					
ANR	10138455	CastTarget	unsigned char *		10138304	0					
ANR	10138456	PtrMemberAccess	tif -> tif_rawcp		10138304	1					
ANR	10138457	Identifier	tif		10138304	0					
ANR	10138458	Identifier	tif_rawcp		10138304	1					
ANR	10138459	ExpressionStatement	cc = tif -> tif_rawcc	350:1:11740:11759	10138304	18	True				
ANR	10138460	AssignmentExpression	cc = tif -> tif_rawcc		10138304	0		=			
ANR	10138461	Identifier	cc		10138304	0					
ANR	10138462	PtrMemberAccess	tif -> tif_rawcc		10138304	1					
ANR	10138463	Identifier	tif		10138304	0					
ANR	10138464	Identifier	tif_rawcc		10138304	1					
ANR	10138465	ForStatement	for ( shft = 4 * 8 ; ( shft -= 8 ) >= 0 ; )		10138304	19					
ANR	10138466	ForInit	shft = 4 * 8 ;	352:6:11795:11805	10138304	0	True				
ANR	10138467	AssignmentExpression	shft = 4 * 8		10138304	0		=			
ANR	10138468	Identifier	shft		10138304	0					
ANR	10138469	MultiplicativeExpression	4 * 8		10138304	1		*			
ANR	10138470	PrimaryExpression	4		10138304	0					
ANR	10138471	PrimaryExpression	8		10138304	1					
ANR	10138472	Condition	( shft -= 8 ) >= 0	352:18:11807:11822	10138304	1	True				
ANR	10138473	RelationalExpression	( shft -= 8 ) >= 0		10138304	0		>=			
ANR	10138474	AssignmentExpression	shft -= 8		10138304	0		-=			
ANR	10138475	Identifier	shft		10138304	0					
ANR	10138476	PrimaryExpression	8		10138304	1					
ANR	10138477	PrimaryExpression	0		10138304	1					
ANR	10138478	CompoundStatement		34:38:694:694	10138304	2					
ANR	10138479	ForStatement	for ( i = 0 ; i < npixels && cc > 0 ; )		10138304	0					
ANR	10138480	ForInit	i = 0 ;	353:7:11836:11841	10138304	0	True				
ANR	10138481	AssignmentExpression	i = 0		10138304	0		=			
ANR	10138482	Identifier	i		10138304	0					
ANR	10138483	PrimaryExpression	0		10138304	1					
ANR	10138484	Condition	i < npixels && cc > 0	353:14:11843:11863	10138304	1	True				
ANR	10138485	AndExpression	i < npixels && cc > 0		10138304	0		&&			
ANR	10138486	RelationalExpression	i < npixels		10138304	0		<			
ANR	10138487	Identifier	i		10138304	0					
ANR	10138488	Identifier	npixels		10138304	1					
ANR	10138489	RelationalExpression	cc > 0		10138304	1		>			
ANR	10138490	Identifier	cc		10138304	0					
ANR	10138491	PrimaryExpression	0		10138304	1					
ANR	10138492	CompoundStatement		35:39:735:735	10138304	2					
ANR	10138493	IfStatement	if ( * bp >= 128 )		10138304	0					
ANR	10138494	Condition	* bp >= 128	354:7:11877:11886	10138304	0	True				
ANR	10138495	RelationalExpression	* bp >= 128		10138304	0		>=			
ANR	10138496	UnaryOperationExpression	* bp		10138304	0					
ANR	10138497	UnaryOperator	*		10138304	0					
ANR	10138498	Identifier	bp		10138304	1					
ANR	10138499	PrimaryExpression	128		10138304	1					
ANR	10138500	CompoundStatement		36:19:756:756	10138304	1					
ANR	10138501	IfStatement	if ( cc < 2 )		10138304	0					
ANR	10138502	Condition	cc < 2	355:8:11910:11915	10138304	0	True				
ANR	10138503	RelationalExpression	cc < 2		10138304	0		<			
ANR	10138504	Identifier	cc		10138304	0					
ANR	10138505	PrimaryExpression	2		10138304	1					
ANR	10138506	BreakStatement	break ;	356:5:11924:11929	10138304	1	True				
ANR	10138507	ExpressionStatement	rc = * bp ++ + ( 2 - 128 )	357:4:11935:11955	10138304	1	True				
ANR	10138508	AssignmentExpression	rc = * bp ++ + ( 2 - 128 )		10138304	0		=			
ANR	10138509	Identifier	rc		10138304	0					
ANR	10138510	AdditiveExpression	* bp ++ + ( 2 - 128 )		10138304	1		+			
ANR	10138511	UnaryOperationExpression	* bp ++		10138304	0					
ANR	10138512	UnaryOperator	*		10138304	0					
ANR	10138513	PostIncDecOperationExpression	bp ++		10138304	1					
ANR	10138514	Identifier	bp		10138304	0					
ANR	10138515	IncDec	++		10138304	1					
ANR	10138516	AdditiveExpression	2 - 128		10138304	1		-			
ANR	10138517	PrimaryExpression	2		10138304	0					
ANR	10138518	PrimaryExpression	128		10138304	1					
ANR	10138519	ExpressionStatement	b = ( uint32 ) * bp ++ << shft	358:4:11961:11986	10138304	2	True				
ANR	10138520	AssignmentExpression	b = ( uint32 ) * bp ++ << shft		10138304	0		=			
ANR	10138521	Identifier	b		10138304	0					
ANR	10138522	ShiftExpression	( uint32 ) * bp ++ << shft		10138304	1		<<			
ANR	10138523	CastExpression	( uint32 ) * bp ++		10138304	0					
ANR	10138524	CastTarget	uint32		10138304	0					
ANR	10138525	UnaryOperationExpression	* bp ++		10138304	1					
ANR	10138526	UnaryOperator	*		10138304	0					
ANR	10138527	PostIncDecOperationExpression	bp ++		10138304	1					
ANR	10138528	Identifier	bp		10138304	0					
ANR	10138529	IncDec	++		10138304	1					
ANR	10138530	Identifier	shft		10138304	1					
ANR	10138531	ExpressionStatement	cc -= 2	359:4:11992:11999	10138304	3	True				
ANR	10138532	AssignmentExpression	cc -= 2		10138304	0		-=			
ANR	10138533	Identifier	cc		10138304	0					
ANR	10138534	PrimaryExpression	2		10138304	1					
ANR	10138535	WhileStatement	while ( rc -- && i < npixels )		10138304	4					
ANR	10138536	Condition	rc -- && i < npixels	360:11:12012:12030	10138304	0	True				
ANR	10138537	AndExpression	rc -- && i < npixels		10138304	0		&&			
ANR	10138538	PostIncDecOperationExpression	rc --		10138304	0					
ANR	10138539	Identifier	rc		10138304	0					
ANR	10138540	IncDec	--		10138304	1					
ANR	10138541	RelationalExpression	i < npixels		10138304	1		<			
ANR	10138542	Identifier	i		10138304	0					
ANR	10138543	Identifier	npixels		10138304	1					
ANR	10138544	ExpressionStatement	tp [ i ++ ] |= b	361:5:12038:12050	10138304	1	True				
ANR	10138545	AssignmentExpression	tp [ i ++ ] |= b		10138304	0		|=			
ANR	10138546	ArrayIndexing	tp [ i ++ ]		10138304	0					
ANR	10138547	Identifier	tp		10138304	0					
ANR	10138548	PostIncDecOperationExpression	i ++		10138304	1					
ANR	10138549	Identifier	i		10138304	0					
ANR	10138550	IncDec	++		10138304	1					
ANR	10138551	Identifier	b		10138304	1					
ANR	10138552	ElseStatement	else		10138304	0					
ANR	10138553	CompoundStatement		44:10:929:929	10138304	0					
ANR	10138554	ExpressionStatement	rc = * bp ++	363:4:12084:12094	10138304	0	True				
ANR	10138555	AssignmentExpression	rc = * bp ++		10138304	0		=			
ANR	10138556	Identifier	rc		10138304	0					
ANR	10138557	UnaryOperationExpression	* bp ++		10138304	1					
ANR	10138558	UnaryOperator	*		10138304	0					
ANR	10138559	PostIncDecOperationExpression	bp ++		10138304	1					
ANR	10138560	Identifier	bp		10138304	0					
ANR	10138561	IncDec	++		10138304	1					
ANR	10138562	WhileStatement	while ( -- cc && rc -- && i < npixels )		10138304	1					
ANR	10138563	Condition	-- cc && rc -- && i < npixels	364:11:12126:12152	10138304	0	True				
ANR	10138564	AndExpression	-- cc && rc -- && i < npixels		10138304	0		&&			
ANR	10138565	UnaryExpression	-- cc		10138304	0					
ANR	10138566	IncDec	--		10138304	0					
ANR	10138567	Identifier	cc		10138304	1					
ANR	10138568	AndExpression	rc -- && i < npixels		10138304	1		&&			
ANR	10138569	PostIncDecOperationExpression	rc --		10138304	0					
ANR	10138570	Identifier	rc		10138304	0					
ANR	10138571	IncDec	--		10138304	1					
ANR	10138572	RelationalExpression	i < npixels		10138304	1		<			
ANR	10138573	Identifier	i		10138304	0					
ANR	10138574	Identifier	npixels		10138304	1					
ANR	10138575	ExpressionStatement	tp [ i ++ ] |= ( uint32 ) * bp ++ << shft	365:5:12160:12192	10138304	1	True				
ANR	10138576	AssignmentExpression	tp [ i ++ ] |= ( uint32 ) * bp ++ << shft		10138304	0		|=			
ANR	10138577	ArrayIndexing	tp [ i ++ ]		10138304	0					
ANR	10138578	Identifier	tp		10138304	0					
ANR	10138579	PostIncDecOperationExpression	i ++		10138304	1					
ANR	10138580	Identifier	i		10138304	0					
ANR	10138581	IncDec	++		10138304	1					
ANR	10138582	ShiftExpression	( uint32 ) * bp ++ << shft		10138304	1		<<			
ANR	10138583	CastExpression	( uint32 ) * bp ++		10138304	0					
ANR	10138584	CastTarget	uint32		10138304	0					
ANR	10138585	UnaryOperationExpression	* bp ++		10138304	1					
ANR	10138586	UnaryOperator	*		10138304	0					
ANR	10138587	PostIncDecOperationExpression	bp ++		10138304	1					
ANR	10138588	Identifier	bp		10138304	0					
ANR	10138589	IncDec	++		10138304	1					
ANR	10138590	Identifier	shft		10138304	1					
ANR	10138591	IfStatement	if ( i != npixels )		10138304	1					
ANR	10138592	Condition	i != npixels	368:6:12209:12220	10138304	0	True				
ANR	10138593	EqualityExpression	i != npixels		10138304	0		!=			
ANR	10138594	Identifier	i		10138304	0					
ANR	10138595	Identifier	npixels		10138304	1					
ANR	10138596	CompoundStatement		50:20:1090:1090	10138304	1					
ANR	10138597	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"	370:3:12298:12475	10138304	0	True				
ANR	10138598	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"		10138304	0					
ANR	10138599	Callee	TIFFErrorExt		10138304	0					
ANR	10138600	Identifier	TIFFErrorExt		10138304	0					
ANR	10138601	ArgumentList	tif -> tif_clientdata		10138304	1					
ANR	10138602	Argument	tif -> tif_clientdata		10138304	0					
ANR	10138603	PtrMemberAccess	tif -> tif_clientdata		10138304	0					
ANR	10138604	Identifier	tif		10138304	0					
ANR	10138605	Identifier	tif_clientdata		10138304	1					
ANR	10138606	Argument	module		10138304	1					
ANR	10138607	Identifier	module		10138304	0					
ANR	10138608	Argument	"""Not enough data at row %lu (short %I64d pixels)"""		10138304	2					
ANR	10138609	PrimaryExpression	"""Not enough data at row %lu (short %I64d pixels)"""		10138304	0					
ANR	10138610	Argument	( unsigned long ) tif -> tif_row		10138304	3					
ANR	10138611	CastExpression	( unsigned long ) tif -> tif_row		10138304	0					
ANR	10138612	CastTarget	unsigned long		10138304	0					
ANR	10138613	PtrMemberAccess	tif -> tif_row		10138304	1					
ANR	10138614	Identifier	tif		10138304	0					
ANR	10138615	Identifier	tif_row		10138304	1					
ANR	10138616	Argument	( unsigned __int64 ) ( npixels - i )		10138304	4					
ANR	10138617	CastExpression	( unsigned __int64 ) ( npixels - i )		10138304	0					
ANR	10138618	CastTarget	unsigned __int64		10138304	0					
ANR	10138619	AdditiveExpression	npixels - i		10138304	1		-			
ANR	10138620	Identifier	npixels		10138304	0					
ANR	10138621	Identifier	i		10138304	1					
ANR	10138622	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	380:3:12676:12704	10138304	1	True				
ANR	10138623	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		10138304	0		=			
ANR	10138624	PtrMemberAccess	tif -> tif_rawcp		10138304	0					
ANR	10138625	Identifier	tif		10138304	0					
ANR	10138626	Identifier	tif_rawcp		10138304	1					
ANR	10138627	CastExpression	( uint8 * ) bp		10138304	1					
ANR	10138628	CastTarget	uint8 *		10138304	0					
ANR	10138629	Identifier	bp		10138304	1					
ANR	10138630	ExpressionStatement	tif -> tif_rawcc = cc	381:3:12709:12728	10138304	2	True				
ANR	10138631	AssignmentExpression	tif -> tif_rawcc = cc		10138304	0		=			
ANR	10138632	PtrMemberAccess	tif -> tif_rawcc		10138304	0					
ANR	10138633	Identifier	tif		10138304	0					
ANR	10138634	Identifier	tif_rawcc		10138304	1					
ANR	10138635	Identifier	cc		10138304	1					
ANR	10138636	ReturnStatement	return ( 0 ) ;	382:3:12733:12743	10138304	3	True				
ANR	10138637	PrimaryExpression	0		10138304	0					
ANR	10138638	ExpressionStatement	"( * sp -> tfunc ) ( sp , op , npixels )"	385:1:12753:12782	10138304	20	True				
ANR	10138639	CallExpression	"( * sp -> tfunc ) ( sp , op , npixels )"		10138304	0					
ANR	10138640	Callee	* sp -> tfunc		10138304	0					
ANR	10138641	UnaryOperationExpression	* sp -> tfunc		10138304	0					
ANR	10138642	UnaryOperator	*		10138304	0					
ANR	10138643	PtrMemberAccess	sp -> tfunc		10138304	1					
ANR	10138644	Identifier	sp		10138304	0					
ANR	10138645	Identifier	tfunc		10138304	1					
ANR	10138646	ArgumentList	sp		10138304	1					
ANR	10138647	Argument	sp		10138304	0					
ANR	10138648	Identifier	sp		10138304	0					
ANR	10138649	Argument	op		10138304	1					
ANR	10138650	Identifier	op		10138304	0					
ANR	10138651	Argument	npixels		10138304	2					
ANR	10138652	Identifier	npixels		10138304	0					
ANR	10138653	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	386:1:12785:12813	10138304	21	True				
ANR	10138654	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		10138304	0		=			
ANR	10138655	PtrMemberAccess	tif -> tif_rawcp		10138304	0					
ANR	10138656	Identifier	tif		10138304	0					
ANR	10138657	Identifier	tif_rawcp		10138304	1					
ANR	10138658	CastExpression	( uint8 * ) bp		10138304	1					
ANR	10138659	CastTarget	uint8 *		10138304	0					
ANR	10138660	Identifier	bp		10138304	1					
ANR	10138661	ExpressionStatement	tif -> tif_rawcc = cc	387:1:12816:12835	10138304	22	True				
ANR	10138662	AssignmentExpression	tif -> tif_rawcc = cc		10138304	0		=			
ANR	10138663	PtrMemberAccess	tif -> tif_rawcc		10138304	0					
ANR	10138664	Identifier	tif		10138304	0					
ANR	10138665	Identifier	tif_rawcc		10138304	1					
ANR	10138666	Identifier	cc		10138304	1					
ANR	10138667	ReturnStatement	return ( 1 ) ;	388:1:12838:12848	10138304	23	True				
ANR	10138668	PrimaryExpression	1		10138304	0					
ANR	10138669	ReturnType	static int		10138304	1					
ANR	10138670	Identifier	LogLuvDecode32		10138304	2					
ANR	10138671	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		10138304	3					
ANR	10138672	Parameter	TIFF * tif	318:15:11086:11094	10138304	0	True				
ANR	10138673	ParameterType	TIFF *		10138304	0					
ANR	10138674	Identifier	tif		10138304	1					
ANR	10138675	Parameter	uint8 * op	318:26:11097:11105	10138304	1	True				
ANR	10138676	ParameterType	uint8 *		10138304	0					
ANR	10138677	Identifier	op		10138304	1					
ANR	10138678	Parameter	tmsize_t occ	318:37:11108:11119	10138304	2	True				
ANR	10138679	ParameterType	tmsize_t		10138304	0					
ANR	10138680	Identifier	occ		10138304	1					
ANR	10138681	Parameter	uint16 s	318:51:11122:11129	10138304	3	True				
ANR	10138682	ParameterType	uint16		10138304	0					
ANR	10138683	Identifier	s		10138304	1					
ANR	10138684	CFGEntryNode	ENTRY		10138304		True				
ANR	10138685	CFGExitNode	EXIT		10138304		True				
ANR	10138686	Symbol	* sp		10138304						
ANR	10138687	Symbol	* bp ++		10138304						
ANR	10138688	Symbol	sp -> user_datafmt		10138304						
ANR	10138689	Symbol	SGILOGDATAFMT_RAW		10138304						
ANR	10138690	Symbol	occ		10138304						
ANR	10138691	Symbol	bp		10138304						
ANR	10138692	Symbol	tif		10138304						
ANR	10138693	Symbol	npixels		10138304						
ANR	10138694	Symbol	sp -> tbuflen		10138304						
ANR	10138695	Symbol	tif -> tif_rawcc		10138304						
ANR	10138696	Symbol	sp -> pixel_size		10138304						
ANR	10138697	Symbol	DecoderState		10138304						
ANR	10138698	Symbol	shft		10138304						
ANR	10138699	Symbol	* bp		10138304						
ANR	10138700	Symbol	sp -> tbuf		10138304						
ANR	10138701	Symbol	sp -> tfunc		10138304						
ANR	10138702	Symbol	sp		10138304						
ANR	10138703	Symbol	cc		10138304						
ANR	10138704	Symbol	op		10138304						
ANR	10138705	Symbol	* tp		10138304						
ANR	10138706	Symbol	b		10138304						
ANR	10138707	Symbol	NULL		10138304						
ANR	10138708	Symbol	module		10138304						
ANR	10138709	Symbol	i		10138304						
ANR	10138710	Symbol	tif -> tif_row		10138304						
ANR	10138711	Symbol	tif -> tif_rawcp		10138304						
ANR	10138712	Symbol	tif -> tif_clientdata		10138304						
ANR	10138713	Symbol	rc		10138304						
ANR	10138714	Symbol	s		10138304						
ANR	10138715	Symbol	* tif		10138304						
ANR	10138716	Symbol	tp		10138304						
ANR	10138717	Function	LogLuvDecodeStrip	396:0:12988:13297							
ANR	10138718	FunctionDef	"LogLuvDecodeStrip (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		10138717	0					
ANR	10138719	CompoundStatement		398:0:13062:13297	10138717	0					
ANR	10138720	IdentifierDeclStatement	tmsize_t rowlen = TIFFScanlineSize ( tif ) ;	399:1:13065:13104	10138717	0	True				
ANR	10138721	IdentifierDecl	rowlen = TIFFScanlineSize ( tif )		10138717	0					
ANR	10138722	IdentifierDeclType	tmsize_t		10138717	0					
ANR	10138723	Identifier	rowlen		10138717	1					
ANR	10138724	AssignmentExpression	rowlen = TIFFScanlineSize ( tif )		10138717	2		=			
ANR	10138725	Identifier	rowlen		10138717	0					
ANR	10138726	CallExpression	TIFFScanlineSize ( tif )		10138717	1					
ANR	10138727	Callee	TIFFScanlineSize		10138717	0					
ANR	10138728	Identifier	TIFFScanlineSize		10138717	0					
ANR	10138729	ArgumentList	tif		10138717	1					
ANR	10138730	Argument	tif		10138717	0					
ANR	10138731	Identifier	tif		10138717	0					
ANR	10138732	IfStatement	if ( rowlen == 0 )		10138717	1					
ANR	10138733	Condition	rowlen == 0	401:12:13119:13129	10138717	0	True				
ANR	10138734	EqualityExpression	rowlen == 0		10138717	0		==			
ANR	10138735	Identifier	rowlen		10138717	0					
ANR	10138736	PrimaryExpression	0		10138717	1					
ANR	10138737	ReturnStatement	return 0 ;	402:16:13148:13156	10138717	1	True				
ANR	10138738	PrimaryExpression	0		10138717	0					
ANR	10138739	ExpressionStatement	assert ( cc % rowlen == 0 )	404:1:13160:13182	10138717	2	True				
ANR	10138740	CallExpression	assert ( cc % rowlen == 0 )		10138717	0					
ANR	10138741	Callee	assert		10138717	0					
ANR	10138742	Identifier	assert		10138717	0					
ANR	10138743	ArgumentList	cc % rowlen == 0		10138717	1					
ANR	10138744	Argument	cc % rowlen == 0		10138717	0					
ANR	10138745	EqualityExpression	cc % rowlen == 0		10138717	0		==			
ANR	10138746	MultiplicativeExpression	cc % rowlen		10138717	0		%			
ANR	10138747	Identifier	cc		10138717	0					
ANR	10138748	Identifier	rowlen		10138717	1					
ANR	10138749	PrimaryExpression	0		10138717	1					
ANR	10138750	WhileStatement	"while ( cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s ) )"		10138717	3					
ANR	10138751	Condition	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"	405:8:13192:13238	10138717	0	True				
ANR	10138752	AndExpression	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		10138717	0		&&			
ANR	10138753	Identifier	cc		10138717	0					
ANR	10138754	CallExpression	"( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		10138717	1					
ANR	10138755	Callee	* tif -> tif_decoderow		10138717	0					
ANR	10138756	UnaryOperationExpression	* tif -> tif_decoderow		10138717	0					
ANR	10138757	UnaryOperator	*		10138717	0					
ANR	10138758	PtrMemberAccess	tif -> tif_decoderow		10138717	1					
ANR	10138759	Identifier	tif		10138717	0					
ANR	10138760	Identifier	tif_decoderow		10138717	1					
ANR	10138761	ArgumentList	tif		10138717	1					
ANR	10138762	Argument	tif		10138717	0					
ANR	10138763	Identifier	tif		10138717	0					
ANR	10138764	Argument	bp		10138717	1					
ANR	10138765	Identifier	bp		10138717	0					
ANR	10138766	Argument	rowlen		10138717	2					
ANR	10138767	Identifier	rowlen		10138717	0					
ANR	10138768	Argument	s		10138717	3					
ANR	10138769	Identifier	s		10138717	0					
ANR	10138770	CompoundStatement		8:57:178:178	10138717	1					
ANR	10138771	ExpressionStatement	bp += rowlen	406:2:13245:13257	10138717	0	True				
ANR	10138772	AssignmentExpression	bp += rowlen		10138717	0		+=			
ANR	10138773	Identifier	bp		10138717	0					
ANR	10138774	Identifier	rowlen		10138717	1					
ANR	10138775	ExpressionStatement	cc -= rowlen	407:2:13261:13273	10138717	1	True				
ANR	10138776	AssignmentExpression	cc -= rowlen		10138717	0		-=			
ANR	10138777	Identifier	cc		10138717	0					
ANR	10138778	Identifier	rowlen		10138717	1					
ANR	10138779	ReturnStatement	return ( cc == 0 ) ;	409:1:13279:13295	10138717	4	True				
ANR	10138780	EqualityExpression	cc == 0		10138717	0		==			
ANR	10138781	Identifier	cc		10138717	0					
ANR	10138782	PrimaryExpression	0		10138717	1					
ANR	10138783	ReturnType	static int		10138717	1					
ANR	10138784	Identifier	LogLuvDecodeStrip		10138717	2					
ANR	10138785	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		10138717	3					
ANR	10138786	Parameter	TIFF * tif	397:18:13017:13025	10138717	0	True				
ANR	10138787	ParameterType	TIFF *		10138717	0					
ANR	10138788	Identifier	tif		10138717	1					
ANR	10138789	Parameter	uint8 * bp	397:29:13028:13036	10138717	1	True				
ANR	10138790	ParameterType	uint8 *		10138717	0					
ANR	10138791	Identifier	bp		10138717	1					
ANR	10138792	Parameter	tmsize_t cc	397:40:13039:13049	10138717	2	True				
ANR	10138793	ParameterType	tmsize_t		10138717	0					
ANR	10138794	Identifier	cc		10138717	1					
ANR	10138795	Parameter	uint16 s	397:53:13052:13059	10138717	3	True				
ANR	10138796	ParameterType	uint16		10138717	0					
ANR	10138797	Identifier	s		10138717	1					
ANR	10138798	CFGEntryNode	ENTRY		10138717		True				
ANR	10138799	CFGExitNode	EXIT		10138717		True				
ANR	10138800	Symbol	tif		10138717						
ANR	10138801	Symbol	cc		10138717						
ANR	10138802	Symbol	* tif -> tif_decoderow		10138717						
ANR	10138803	Symbol	TIFFScanlineSize		10138717						
ANR	10138804	Symbol	s		10138717						
ANR	10138805	Symbol	* * tif		10138717						
ANR	10138806	Symbol	rowlen		10138717						
ANR	10138807	Symbol	* tif		10138717						
ANR	10138808	Symbol	tif -> tif_decoderow		10138717						
ANR	10138809	Symbol	bp		10138717						
ANR	10138810	Function	LogLuvDecodeTile	417:0:13434:13741							
ANR	10138811	FunctionDef	"LogLuvDecodeTile (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		10138810	0					
ANR	10138812	CompoundStatement		419:0:13507:13741	10138810	0					
ANR	10138813	IdentifierDeclStatement	tmsize_t rowlen = TIFFTileRowSize ( tif ) ;	420:1:13510:13548	10138810	0	True				
ANR	10138814	IdentifierDecl	rowlen = TIFFTileRowSize ( tif )		10138810	0					
ANR	10138815	IdentifierDeclType	tmsize_t		10138810	0					
ANR	10138816	Identifier	rowlen		10138810	1					
ANR	10138817	AssignmentExpression	rowlen = TIFFTileRowSize ( tif )		10138810	2		=			
ANR	10138818	Identifier	rowlen		10138810	0					
ANR	10138819	CallExpression	TIFFTileRowSize ( tif )		10138810	1					
ANR	10138820	Callee	TIFFTileRowSize		10138810	0					
ANR	10138821	Identifier	TIFFTileRowSize		10138810	0					
ANR	10138822	ArgumentList	tif		10138810	1					
ANR	10138823	Argument	tif		10138810	0					
ANR	10138824	Identifier	tif		10138810	0					
ANR	10138825	IfStatement	if ( rowlen == 0 )		10138810	1					
ANR	10138826	Condition	rowlen == 0	422:12:13563:13573	10138810	0	True				
ANR	10138827	EqualityExpression	rowlen == 0		10138810	0		==			
ANR	10138828	Identifier	rowlen		10138810	0					
ANR	10138829	PrimaryExpression	0		10138810	1					
ANR	10138830	ReturnStatement	return 0 ;	423:16:13592:13600	10138810	1	True				
ANR	10138831	PrimaryExpression	0		10138810	0					
ANR	10138832	ExpressionStatement	assert ( cc % rowlen == 0 )	425:1:13604:13626	10138810	2	True				
ANR	10138833	CallExpression	assert ( cc % rowlen == 0 )		10138810	0					
ANR	10138834	Callee	assert		10138810	0					
ANR	10138835	Identifier	assert		10138810	0					
ANR	10138836	ArgumentList	cc % rowlen == 0		10138810	1					
ANR	10138837	Argument	cc % rowlen == 0		10138810	0					
ANR	10138838	EqualityExpression	cc % rowlen == 0		10138810	0		==			
ANR	10138839	MultiplicativeExpression	cc % rowlen		10138810	0		%			
ANR	10138840	Identifier	cc		10138810	0					
ANR	10138841	Identifier	rowlen		10138810	1					
ANR	10138842	PrimaryExpression	0		10138810	1					
ANR	10138843	WhileStatement	"while ( cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s ) )"		10138810	3					
ANR	10138844	Condition	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"	426:8:13636:13682	10138810	0	True				
ANR	10138845	AndExpression	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		10138810	0		&&			
ANR	10138846	Identifier	cc		10138810	0					
ANR	10138847	CallExpression	"( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		10138810	1					
ANR	10138848	Callee	* tif -> tif_decoderow		10138810	0					
ANR	10138849	UnaryOperationExpression	* tif -> tif_decoderow		10138810	0					
ANR	10138850	UnaryOperator	*		10138810	0					
ANR	10138851	PtrMemberAccess	tif -> tif_decoderow		10138810	1					
ANR	10138852	Identifier	tif		10138810	0					
ANR	10138853	Identifier	tif_decoderow		10138810	1					
ANR	10138854	ArgumentList	tif		10138810	1					
ANR	10138855	Argument	tif		10138810	0					
ANR	10138856	Identifier	tif		10138810	0					
ANR	10138857	Argument	bp		10138810	1					
ANR	10138858	Identifier	bp		10138810	0					
ANR	10138859	Argument	rowlen		10138810	2					
ANR	10138860	Identifier	rowlen		10138810	0					
ANR	10138861	Argument	s		10138810	3					
ANR	10138862	Identifier	s		10138810	0					
ANR	10138863	CompoundStatement		8:57:177:177	10138810	1					
ANR	10138864	ExpressionStatement	bp += rowlen	427:2:13689:13701	10138810	0	True				
ANR	10138865	AssignmentExpression	bp += rowlen		10138810	0		+=			
ANR	10138866	Identifier	bp		10138810	0					
ANR	10138867	Identifier	rowlen		10138810	1					
ANR	10138868	ExpressionStatement	cc -= rowlen	428:2:13705:13717	10138810	1	True				
ANR	10138869	AssignmentExpression	cc -= rowlen		10138810	0		-=			
ANR	10138870	Identifier	cc		10138810	0					
ANR	10138871	Identifier	rowlen		10138810	1					
ANR	10138872	ReturnStatement	return ( cc == 0 ) ;	430:1:13723:13739	10138810	4	True				
ANR	10138873	EqualityExpression	cc == 0		10138810	0		==			
ANR	10138874	Identifier	cc		10138810	0					
ANR	10138875	PrimaryExpression	0		10138810	1					
ANR	10138876	ReturnType	static int		10138810	1					
ANR	10138877	Identifier	LogLuvDecodeTile		10138810	2					
ANR	10138878	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		10138810	3					
ANR	10138879	Parameter	TIFF * tif	418:17:13462:13470	10138810	0	True				
ANR	10138880	ParameterType	TIFF *		10138810	0					
ANR	10138881	Identifier	tif		10138810	1					
ANR	10138882	Parameter	uint8 * bp	418:28:13473:13481	10138810	1	True				
ANR	10138883	ParameterType	uint8 *		10138810	0					
ANR	10138884	Identifier	bp		10138810	1					
ANR	10138885	Parameter	tmsize_t cc	418:39:13484:13494	10138810	2	True				
ANR	10138886	ParameterType	tmsize_t		10138810	0					
ANR	10138887	Identifier	cc		10138810	1					
ANR	10138888	Parameter	uint16 s	418:52:13497:13504	10138810	3	True				
ANR	10138889	ParameterType	uint16		10138810	0					
ANR	10138890	Identifier	s		10138810	1					
ANR	10138891	CFGEntryNode	ENTRY		10138810		True				
ANR	10138892	CFGExitNode	EXIT		10138810		True				
ANR	10138893	Symbol	tif		10138810						
ANR	10138894	Symbol	cc		10138810						
ANR	10138895	Symbol	* tif -> tif_decoderow		10138810						
ANR	10138896	Symbol	s		10138810						
ANR	10138897	Symbol	* * tif		10138810						
ANR	10138898	Symbol	rowlen		10138810						
ANR	10138899	Symbol	TIFFTileRowSize		10138810						
ANR	10138900	Symbol	* tif		10138810						
ANR	10138901	Symbol	tif -> tif_decoderow		10138810						
ANR	10138902	Symbol	bp		10138810						
ANR	10138903	Function	LogL16Encode	436:0:13785:16052							
ANR	10138904	FunctionDef	"LogL16Encode (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		10138903	0					
ANR	10138905	CompoundStatement		438:0:13854:16052	10138903	0					
ANR	10138906	Statement	static	439:1:13857:13862	10138903	0	True				
ANR	10138907	IdentifierDeclStatement	"const char module [ ] = ""LogL16Encode"" ;"	439:8:13864:13900	10138903	1	True				
ANR	10138908	IdentifierDecl	"module [ ] = ""LogL16Encode"""		10138903	0					
ANR	10138909	IdentifierDeclType	const char [ ]		10138903	0					
ANR	10138910	Identifier	module		10138903	1					
ANR	10138911	AssignmentExpression	"module [ ] = ""LogL16Encode"""		10138903	2		=			
ANR	10138912	Identifier	module		10138903	0					
ANR	10138913	PrimaryExpression	"""LogL16Encode"""		10138903	1					
ANR	10138914	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	440:1:13903:13938	10138903	2	True				
ANR	10138915	IdentifierDecl	* sp = EncoderState ( tif )		10138903	0					
ANR	10138916	IdentifierDeclType	LogLuvState *		10138903	0					
ANR	10138917	Identifier	sp		10138903	1					
ANR	10138918	AssignmentExpression	* sp = EncoderState ( tif )		10138903	2		=			
ANR	10138919	Identifier	sp		10138903	0					
ANR	10138920	CallExpression	EncoderState ( tif )		10138903	1					
ANR	10138921	Callee	EncoderState		10138903	0					
ANR	10138922	Identifier	EncoderState		10138903	0					
ANR	10138923	ArgumentList	tif		10138903	1					
ANR	10138924	Argument	tif		10138903	0					
ANR	10138925	Identifier	tif		10138903	0					
ANR	10138926	IdentifierDeclStatement	int shft ;	441:1:13941:13949	10138903	3	True				
ANR	10138927	IdentifierDecl	shft		10138903	0					
ANR	10138928	IdentifierDeclType	int		10138903	0					
ANR	10138929	Identifier	shft		10138903	1					
ANR	10138930	IdentifierDeclStatement	tmsize_t i ;	442:1:13952:13962	10138903	4	True				
ANR	10138931	IdentifierDecl	i		10138903	0					
ANR	10138932	IdentifierDeclType	tmsize_t		10138903	0					
ANR	10138933	Identifier	i		10138903	1					
ANR	10138934	IdentifierDeclStatement	tmsize_t j ;	443:1:13965:13975	10138903	5	True				
ANR	10138935	IdentifierDecl	j		10138903	0					
ANR	10138936	IdentifierDeclType	tmsize_t		10138903	0					
ANR	10138937	Identifier	j		10138903	1					
ANR	10138938	IdentifierDeclStatement	tmsize_t npixels ;	444:1:13978:13994	10138903	6	True				
ANR	10138939	IdentifierDecl	npixels		10138903	0					
ANR	10138940	IdentifierDeclType	tmsize_t		10138903	0					
ANR	10138941	Identifier	npixels		10138903	1					
ANR	10138942	IdentifierDeclStatement	uint8 * op ;	445:1:13997:14006	10138903	7	True				
ANR	10138943	IdentifierDecl	* op		10138903	0					
ANR	10138944	IdentifierDeclType	uint8 *		10138903	0					
ANR	10138945	Identifier	op		10138903	1					
ANR	10138946	IdentifierDeclStatement	int16 * tp ;	446:1:14009:14018	10138903	8	True				
ANR	10138947	IdentifierDecl	* tp		10138903	0					
ANR	10138948	IdentifierDeclType	int16 *		10138903	0					
ANR	10138949	Identifier	tp		10138903	1					
ANR	10138950	IdentifierDeclStatement	int16 b ;	447:1:14021:14028	10138903	9	True				
ANR	10138951	IdentifierDecl	b		10138903	0					
ANR	10138952	IdentifierDeclType	int16		10138903	0					
ANR	10138953	Identifier	b		10138903	1					
ANR	10138954	IdentifierDeclStatement	tmsize_t occ ;	448:1:14031:14043	10138903	10	True				
ANR	10138955	IdentifierDecl	occ		10138903	0					
ANR	10138956	IdentifierDeclType	tmsize_t		10138903	0					
ANR	10138957	Identifier	occ		10138903	1					
ANR	10138958	IdentifierDeclStatement	"int rc = 0 , mask ;"	449:1:14046:14060	10138903	11	True				
ANR	10138959	IdentifierDecl	rc = 0		10138903	0					
ANR	10138960	IdentifierDeclType	int		10138903	0					
ANR	10138961	Identifier	rc		10138903	1					
ANR	10138962	AssignmentExpression	rc = 0		10138903	2		=			
ANR	10138963	Identifier	rc		10138903	0					
ANR	10138964	PrimaryExpression	0		10138903	1					
ANR	10138965	IdentifierDecl	mask		10138903	1					
ANR	10138966	IdentifierDeclType	int		10138903	0					
ANR	10138967	Identifier	mask		10138903	1					
ANR	10138968	IdentifierDeclStatement	tmsize_t beg ;	450:1:14063:14075	10138903	12	True				
ANR	10138969	IdentifierDecl	beg		10138903	0					
ANR	10138970	IdentifierDeclType	tmsize_t		10138903	0					
ANR	10138971	Identifier	beg		10138903	1					
ANR	10138972	ExpressionStatement	assert ( s == 0 )	452:1:14079:14093	10138903	13	True				
ANR	10138973	CallExpression	assert ( s == 0 )		10138903	0					
ANR	10138974	Callee	assert		10138903	0					
ANR	10138975	Identifier	assert		10138903	0					
ANR	10138976	ArgumentList	s == 0		10138903	1					
ANR	10138977	Argument	s == 0		10138903	0					
ANR	10138978	EqualityExpression	s == 0		10138903	0		==			
ANR	10138979	Identifier	s		10138903	0					
ANR	10138980	PrimaryExpression	0		10138903	1					
ANR	10138981	ExpressionStatement	assert ( sp != NULL )	453:1:14096:14114	10138903	14	True				
ANR	10138982	CallExpression	assert ( sp != NULL )		10138903	0					
ANR	10138983	Callee	assert		10138903	0					
ANR	10138984	Identifier	assert		10138903	0					
ANR	10138985	ArgumentList	sp != NULL		10138903	1					
ANR	10138986	Argument	sp != NULL		10138903	0					
ANR	10138987	EqualityExpression	sp != NULL		10138903	0		!=			
ANR	10138988	Identifier	sp		10138903	0					
ANR	10138989	Identifier	NULL		10138903	1					
ANR	10138990	ExpressionStatement	npixels = cc / sp -> pixel_size	454:1:14117:14146	10138903	15	True				
ANR	10138991	AssignmentExpression	npixels = cc / sp -> pixel_size		10138903	0		=			
ANR	10138992	Identifier	npixels		10138903	0					
ANR	10138993	MultiplicativeExpression	cc / sp -> pixel_size		10138903	1		/			
ANR	10138994	Identifier	cc		10138903	0					
ANR	10138995	PtrMemberAccess	sp -> pixel_size		10138903	1					
ANR	10138996	Identifier	sp		10138903	0					
ANR	10138997	Identifier	pixel_size		10138903	1					
ANR	10138998	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_16BIT )		10138903	16					
ANR	10138999	Condition	sp -> user_datafmt == SGILOGDATAFMT_16BIT	456:5:14154:14192	10138903	0	True				
ANR	10139000	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_16BIT		10138903	0		==			
ANR	10139001	PtrMemberAccess	sp -> user_datafmt		10138903	0					
ANR	10139002	Identifier	sp		10138903	0					
ANR	10139003	Identifier	user_datafmt		10138903	1					
ANR	10139004	Identifier	SGILOGDATAFMT_16BIT		10138903	1					
ANR	10139005	ExpressionStatement	tp = ( int16 * ) bp	457:2:14197:14213	10138903	1	True				
ANR	10139006	AssignmentExpression	tp = ( int16 * ) bp		10138903	0		=			
ANR	10139007	Identifier	tp		10138903	0					
ANR	10139008	CastExpression	( int16 * ) bp		10138903	1					
ANR	10139009	CastTarget	int16 *		10138903	0					
ANR	10139010	Identifier	bp		10138903	1					
ANR	10139011	ElseStatement	else		10138903	0					
ANR	10139012	CompoundStatement		21:6:366:366	10138903	0					
ANR	10139013	ExpressionStatement	tp = ( int16 * ) sp -> tbuf	459:2:14225:14247	10138903	0	True				
ANR	10139014	AssignmentExpression	tp = ( int16 * ) sp -> tbuf		10138903	0		=			
ANR	10139015	Identifier	tp		10138903	0					
ANR	10139016	CastExpression	( int16 * ) sp -> tbuf		10138903	1					
ANR	10139017	CastTarget	int16 *		10138903	0					
ANR	10139018	PtrMemberAccess	sp -> tbuf		10138903	1					
ANR	10139019	Identifier	sp		10138903	0					
ANR	10139020	Identifier	tbuf		10138903	1					
ANR	10139021	IfStatement	if ( sp -> tbuflen < npixels )		10138903	1					
ANR	10139022	Condition	sp -> tbuflen < npixels	460:5:14254:14274	10138903	0	True				
ANR	10139023	RelationalExpression	sp -> tbuflen < npixels		10138903	0		<			
ANR	10139024	PtrMemberAccess	sp -> tbuflen		10138903	0					
ANR	10139025	Identifier	sp		10138903	0					
ANR	10139026	Identifier	tbuflen		10138903	1					
ANR	10139027	Identifier	npixels		10138903	1					
ANR	10139028	CompoundStatement		23:28:422:422	10138903	1					
ANR	10139029	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	461:3:14282:14362	10138903	0	True				
ANR	10139030	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		10138903	0					
ANR	10139031	Callee	TIFFErrorExt		10138903	0					
ANR	10139032	Identifier	TIFFErrorExt		10138903	0					
ANR	10139033	ArgumentList	tif -> tif_clientdata		10138903	1					
ANR	10139034	Argument	tif -> tif_clientdata		10138903	0					
ANR	10139035	PtrMemberAccess	tif -> tif_clientdata		10138903	0					
ANR	10139036	Identifier	tif		10138903	0					
ANR	10139037	Identifier	tif_clientdata		10138903	1					
ANR	10139038	Argument	module		10138903	1					
ANR	10139039	Identifier	module		10138903	0					
ANR	10139040	Argument	"""Translation buffer too short"""		10138903	2					
ANR	10139041	PrimaryExpression	"""Translation buffer too short"""		10138903	0					
ANR	10139042	ReturnStatement	return ( 0 ) ;	463:3:14367:14377	10138903	1	True				
ANR	10139043	PrimaryExpression	0		10138903	0					
ANR	10139044	ExpressionStatement	"( * sp -> tfunc ) ( sp , bp , npixels )"	465:2:14385:14414	10138903	2	True				
ANR	10139045	CallExpression	"( * sp -> tfunc ) ( sp , bp , npixels )"		10138903	0					
ANR	10139046	Callee	* sp -> tfunc		10138903	0					
ANR	10139047	UnaryOperationExpression	* sp -> tfunc		10138903	0					
ANR	10139048	UnaryOperator	*		10138903	0					
ANR	10139049	PtrMemberAccess	sp -> tfunc		10138903	1					
ANR	10139050	Identifier	sp		10138903	0					
ANR	10139051	Identifier	tfunc		10138903	1					
ANR	10139052	ArgumentList	sp		10138903	1					
ANR	10139053	Argument	sp		10138903	0					
ANR	10139054	Identifier	sp		10138903	0					
ANR	10139055	Argument	bp		10138903	1					
ANR	10139056	Identifier	bp		10138903	0					
ANR	10139057	Argument	npixels		10138903	2					
ANR	10139058	Identifier	npixels		10138903	0					
ANR	10139059	ExpressionStatement	op = tif -> tif_rawcp	468:1:14453:14472	10138903	17	True				
ANR	10139060	AssignmentExpression	op = tif -> tif_rawcp		10138903	0		=			
ANR	10139061	Identifier	op		10138903	0					
ANR	10139062	PtrMemberAccess	tif -> tif_rawcp		10138903	1					
ANR	10139063	Identifier	tif		10138903	0					
ANR	10139064	Identifier	tif_rawcp		10138903	1					
ANR	10139065	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	469:1:14475:14518	10138903	18	True				
ANR	10139066	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		10138903	0		=			
ANR	10139067	Identifier	occ		10138903	0					
ANR	10139068	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		10138903	1		-			
ANR	10139069	PtrMemberAccess	tif -> tif_rawdatasize		10138903	0					
ANR	10139070	Identifier	tif		10138903	0					
ANR	10139071	Identifier	tif_rawdatasize		10138903	1					
ANR	10139072	PtrMemberAccess	tif -> tif_rawcc		10138903	1					
ANR	10139073	Identifier	tif		10138903	0					
ANR	10139074	Identifier	tif_rawcc		10138903	1					
ANR	10139075	ForStatement	for ( shft = 2 * 8 ; ( shft -= 8 ) >= 0 ; )		10138903	19					
ANR	10139076	ForInit	shft = 2 * 8 ;	470:6:14526:14536	10138903	0	True				
ANR	10139077	AssignmentExpression	shft = 2 * 8		10138903	0		=			
ANR	10139078	Identifier	shft		10138903	0					
ANR	10139079	MultiplicativeExpression	2 * 8		10138903	1		*			
ANR	10139080	PrimaryExpression	2		10138903	0					
ANR	10139081	PrimaryExpression	8		10138903	1					
ANR	10139082	Condition	( shft -= 8 ) >= 0	470:18:14538:14553	10138903	1	True				
ANR	10139083	RelationalExpression	( shft -= 8 ) >= 0		10138903	0		>=			
ANR	10139084	AssignmentExpression	shft -= 8		10138903	0		-=			
ANR	10139085	Identifier	shft		10138903	0					
ANR	10139086	PrimaryExpression	8		10138903	1					
ANR	10139087	PrimaryExpression	0		10138903	1					
ANR	10139088	ForStatement	for ( i = 0 ; i < npixels ; i += rc )		10138903	2					
ANR	10139089	ForInit	i = 0 ;	471:7:14565:14570	10138903	0	True				
ANR	10139090	AssignmentExpression	i = 0		10138903	0		=			
ANR	10139091	Identifier	i		10138903	0					
ANR	10139092	PrimaryExpression	0		10138903	1					
ANR	10139093	Condition	i < npixels	471:14:14572:14582	10138903	1	True				
ANR	10139094	RelationalExpression	i < npixels		10138903	0		<			
ANR	10139095	Identifier	i		10138903	0					
ANR	10139096	Identifier	npixels		10138903	1					
ANR	10139097	AssignmentExpression	i += rc	471:27:14585:14591	10138903	2	True	+=			
ANR	10139098	Identifier	i		10138903	0					
ANR	10139099	Identifier	rc		10138903	1					
ANR	10139100	CompoundStatement		34:36:739:739	10138903	3					
ANR	10139101	IfStatement	if ( occ < 4 )		10138903	0					
ANR	10139102	Condition	occ < 4	472:7:14603:14609	10138903	0	True				
ANR	10139103	RelationalExpression	occ < 4		10138903	0		<			
ANR	10139104	Identifier	occ		10138903	0					
ANR	10139105	PrimaryExpression	4		10138903	1					
ANR	10139106	CompoundStatement		35:16:757:757	10138903	1					
ANR	10139107	ExpressionStatement	tif -> tif_rawcp = op	473:4:14618:14637	10138903	0	True				
ANR	10139108	AssignmentExpression	tif -> tif_rawcp = op		10138903	0		=			
ANR	10139109	PtrMemberAccess	tif -> tif_rawcp		10138903	0					
ANR	10139110	Identifier	tif		10138903	0					
ANR	10139111	Identifier	tif_rawcp		10138903	1					
ANR	10139112	Identifier	op		10138903	1					
ANR	10139113	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	474:4:14643:14686	10138903	1	True				
ANR	10139114	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		10138903	0		=			
ANR	10139115	PtrMemberAccess	tif -> tif_rawcc		10138903	0					
ANR	10139116	Identifier	tif		10138903	0					
ANR	10139117	Identifier	tif_rawcc		10138903	1					
ANR	10139118	AdditiveExpression	tif -> tif_rawdatasize - occ		10138903	1		-			
ANR	10139119	PtrMemberAccess	tif -> tif_rawdatasize		10138903	0					
ANR	10139120	Identifier	tif		10138903	0					
ANR	10139121	Identifier	tif_rawdatasize		10138903	1					
ANR	10139122	Identifier	occ		10138903	1					
ANR	10139123	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		10138903	2					
ANR	10139124	Condition	! TIFFFlushData1 ( tif )	475:8:14696:14715	10138903	0	True				
ANR	10139125	UnaryOperationExpression	! TIFFFlushData1 ( tif )		10138903	0					
ANR	10139126	UnaryOperator	!		10138903	0					
ANR	10139127	CallExpression	TIFFFlushData1 ( tif )		10138903	1					
ANR	10139128	Callee	TIFFFlushData1		10138903	0					
ANR	10139129	Identifier	TIFFFlushData1		10138903	0					
ANR	10139130	ArgumentList	tif		10138903	1					
ANR	10139131	Argument	tif		10138903	0					
ANR	10139132	Identifier	tif		10138903	0					
ANR	10139133	ReturnStatement	return ( 0 ) ;	476:5:14723:14733	10138903	1	True				
ANR	10139134	PrimaryExpression	0		10138903	0					
ANR	10139135	ExpressionStatement	op = tif -> tif_rawcp	477:4:14739:14758	10138903	3	True				
ANR	10139136	AssignmentExpression	op = tif -> tif_rawcp		10138903	0		=			
ANR	10139137	Identifier	op		10138903	0					
ANR	10139138	PtrMemberAccess	tif -> tif_rawcp		10138903	1					
ANR	10139139	Identifier	tif		10138903	0					
ANR	10139140	Identifier	tif_rawcp		10138903	1					
ANR	10139141	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	478:4:14764:14807	10138903	4	True				
ANR	10139142	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		10138903	0		=			
ANR	10139143	Identifier	occ		10138903	0					
ANR	10139144	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		10138903	1		-			
ANR	10139145	PtrMemberAccess	tif -> tif_rawdatasize		10138903	0					
ANR	10139146	Identifier	tif		10138903	0					
ANR	10139147	Identifier	tif_rawdatasize		10138903	1					
ANR	10139148	PtrMemberAccess	tif -> tif_rawcc		10138903	1					
ANR	10139149	Identifier	tif		10138903	0					
ANR	10139150	Identifier	tif_rawcc		10138903	1					
ANR	10139151	ExpressionStatement	mask = 0xff << shft	480:3:14817:14836	10138903	1	True				
ANR	10139152	AssignmentExpression	mask = 0xff << shft		10138903	0		=			
ANR	10139153	Identifier	mask		10138903	0					
ANR	10139154	ShiftExpression	0xff << shft		10138903	1		<<			
ANR	10139155	PrimaryExpression	0xff		10138903	0					
ANR	10139156	Identifier	shft		10138903	1					
ANR	10139157	ForStatement	for ( beg = i ; beg < npixels ; beg += rc )		10138903	2					
ANR	10139158	ForInit	beg = i ;	481:8:14867:14874	10138903	0	True				
ANR	10139159	AssignmentExpression	beg = i		10138903	0		=			
ANR	10139160	Identifier	beg		10138903	0					
ANR	10139161	Identifier	i		10138903	1					
ANR	10139162	Condition	beg < npixels	481:17:14876:14888	10138903	1	True				
ANR	10139163	RelationalExpression	beg < npixels		10138903	0		<			
ANR	10139164	Identifier	beg		10138903	0					
ANR	10139165	Identifier	npixels		10138903	1					
ANR	10139166	AssignmentExpression	beg += rc	481:32:14891:14899	10138903	2	True	+=			
ANR	10139167	Identifier	beg		10138903	0					
ANR	10139168	Identifier	rc		10138903	1					
ANR	10139169	CompoundStatement		44:43:1047:1047	10138903	3					
ANR	10139170	ExpressionStatement	b = ( int16 ) ( tp [ beg ] & mask )	482:4:14908:14936	10138903	0	True				
ANR	10139171	AssignmentExpression	b = ( int16 ) ( tp [ beg ] & mask )		10138903	0		=			
ANR	10139172	Identifier	b		10138903	0					
ANR	10139173	CastExpression	( int16 ) ( tp [ beg ] & mask )		10138903	1					
ANR	10139174	CastTarget	int16		10138903	0					
ANR	10139175	BitAndExpression	tp [ beg ] & mask		10138903	1		&			
ANR	10139176	ArrayIndexing	tp [ beg ]		10138903	0					
ANR	10139177	Identifier	tp		10138903	0					
ANR	10139178	Identifier	beg		10138903	1					
ANR	10139179	Identifier	mask		10138903	1					
ANR	10139180	ExpressionStatement	rc = 1	483:4:14942:14948	10138903	1	True				
ANR	10139181	AssignmentExpression	rc = 1		10138903	0		=			
ANR	10139182	Identifier	rc		10138903	0					
ANR	10139183	PrimaryExpression	1		10138903	1					
ANR	10139184	WhileStatement	while ( rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b )		10138903	2					
ANR	10139185	Condition	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b	484:11:14961:15026	10138903	0	True				
ANR	10139186	AndExpression	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		10138903	0		&&			
ANR	10139187	RelationalExpression	rc < 127 + 2		10138903	0		<			
ANR	10139188	Identifier	rc		10138903	0					
ANR	10139189	AdditiveExpression	127 + 2		10138903	1		+			
ANR	10139190	PrimaryExpression	127		10138903	0					
ANR	10139191	PrimaryExpression	2		10138903	1					
ANR	10139192	AndExpression	beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		10138903	1		&&			
ANR	10139193	RelationalExpression	beg + rc < npixels		10138903	0		<			
ANR	10139194	AdditiveExpression	beg + rc		10138903	0		+			
ANR	10139195	Identifier	beg		10138903	0					
ANR	10139196	Identifier	rc		10138903	1					
ANR	10139197	Identifier	npixels		10138903	1					
ANR	10139198	EqualityExpression	( tp [ beg + rc ] & mask ) == b		10138903	1		==			
ANR	10139199	BitAndExpression	tp [ beg + rc ] & mask		10138903	0		&			
ANR	10139200	ArrayIndexing	tp [ beg + rc ]		10138903	0					
ANR	10139201	Identifier	tp		10138903	0					
ANR	10139202	AdditiveExpression	beg + rc		10138903	1		+			
ANR	10139203	Identifier	beg		10138903	0					
ANR	10139204	Identifier	rc		10138903	1					
ANR	10139205	Identifier	mask		10138903	1					
ANR	10139206	Identifier	b		10138903	1					
ANR	10139207	ExpressionStatement	rc ++	486:5:15034:15038	10138903	1	True				
ANR	10139208	PostIncDecOperationExpression	rc ++		10138903	0					
ANR	10139209	Identifier	rc		10138903	0					
ANR	10139210	IncDec	++		10138903	1					
ANR	10139211	IfStatement	if ( rc >= MINRUN )		10138903	3					
ANR	10139212	Condition	rc >= MINRUN	487:8:15048:15059	10138903	0	True				
ANR	10139213	RelationalExpression	rc >= MINRUN		10138903	0		>=			
ANR	10139214	Identifier	rc		10138903	0					
ANR	10139215	Identifier	MINRUN		10138903	1					
ANR	10139216	BreakStatement	break ;	488:5:15067:15072	10138903	1	True				
ANR	10139217	IfStatement	if ( beg - i > 1 && beg - i < MINRUN )		10138903	3					
ANR	10139218	Condition	beg - i > 1 && beg - i < MINRUN	490:7:15105:15131	10138903	0	True				
ANR	10139219	AndExpression	beg - i > 1 && beg - i < MINRUN		10138903	0		&&			
ANR	10139220	RelationalExpression	beg - i > 1		10138903	0		>			
ANR	10139221	AdditiveExpression	beg - i		10138903	0		-			
ANR	10139222	Identifier	beg		10138903	0					
ANR	10139223	Identifier	i		10138903	1					
ANR	10139224	PrimaryExpression	1		10138903	1					
ANR	10139225	RelationalExpression	beg - i < MINRUN		10138903	1		<			
ANR	10139226	AdditiveExpression	beg - i		10138903	0		-			
ANR	10139227	Identifier	beg		10138903	0					
ANR	10139228	Identifier	i		10138903	1					
ANR	10139229	Identifier	MINRUN		10138903	1					
ANR	10139230	CompoundStatement		53:36:1279:1279	10138903	1					
ANR	10139231	ExpressionStatement	b = ( int16 ) ( tp [ i ] & mask )	491:4:15140:15166	10138903	0	True				
ANR	10139232	AssignmentExpression	b = ( int16 ) ( tp [ i ] & mask )		10138903	0		=			
ANR	10139233	Identifier	b		10138903	0					
ANR	10139234	CastExpression	( int16 ) ( tp [ i ] & mask )		10138903	1					
ANR	10139235	CastTarget	int16		10138903	0					
ANR	10139236	BitAndExpression	tp [ i ] & mask		10138903	1		&			
ANR	10139237	ArrayIndexing	tp [ i ]		10138903	0					
ANR	10139238	Identifier	tp		10138903	0					
ANR	10139239	Identifier	i		10138903	1					
ANR	10139240	Identifier	mask		10138903	1					
ANR	10139241	ExpressionStatement	j = i + 1	492:4:15192:15199	10138903	1	True				
ANR	10139242	AssignmentExpression	j = i + 1		10138903	0		=			
ANR	10139243	Identifier	j		10138903	0					
ANR	10139244	AdditiveExpression	i + 1		10138903	1		+			
ANR	10139245	Identifier	i		10138903	0					
ANR	10139246	PrimaryExpression	1		10138903	1					
ANR	10139247	WhileStatement	while ( ( tp [ j ++ ] & mask ) == b )		10138903	2					
ANR	10139248	Condition	( tp [ j ++ ] & mask ) == b	493:11:15212:15232	10138903	0	True				
ANR	10139249	EqualityExpression	( tp [ j ++ ] & mask ) == b		10138903	0		==			
ANR	10139250	BitAndExpression	tp [ j ++ ] & mask		10138903	0		&			
ANR	10139251	ArrayIndexing	tp [ j ++ ]		10138903	0					
ANR	10139252	Identifier	tp		10138903	0					
ANR	10139253	PostIncDecOperationExpression	j ++		10138903	1					
ANR	10139254	Identifier	j		10138903	0					
ANR	10139255	IncDec	++		10138903	1					
ANR	10139256	Identifier	mask		10138903	1					
ANR	10139257	Identifier	b		10138903	1					
ANR	10139258	IfStatement	if ( j == beg )		10138903	1					
ANR	10139259	Condition	j == beg	494:9:15244:15251	10138903	0	True				
ANR	10139260	EqualityExpression	j == beg		10138903	0		==			
ANR	10139261	Identifier	j		10138903	0					
ANR	10139262	Identifier	beg		10138903	1					
ANR	10139263	CompoundStatement		57:19:1399:1399	10138903	1					
ANR	10139264	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + j - i )	495:6:15262:15288	10138903	0	True				
ANR	10139265	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + j - i )		10138903	0		=			
ANR	10139266	UnaryOperationExpression	* op ++		10138903	0					
ANR	10139267	UnaryOperator	*		10138903	0					
ANR	10139268	PostIncDecOperationExpression	op ++		10138903	1					
ANR	10139269	Identifier	op		10138903	0					
ANR	10139270	IncDec	++		10138903	1					
ANR	10139271	CastExpression	( uint8 ) ( 128 - 2 + j - i )		10138903	1					
ANR	10139272	CastTarget	uint8		10138903	0					
ANR	10139273	AdditiveExpression	128 - 2 + j - i		10138903	1		-			
ANR	10139274	PrimaryExpression	128		10138903	0					
ANR	10139275	AdditiveExpression	2 + j - i		10138903	1		+			
ANR	10139276	PrimaryExpression	2		10138903	0					
ANR	10139277	AdditiveExpression	j - i		10138903	1		-			
ANR	10139278	Identifier	j		10138903	0					
ANR	10139279	Identifier	i		10138903	1					
ANR	10139280	ExpressionStatement	* op ++ = ( uint8 ) ( b >> shft )	496:6:15296:15322	10138903	1	True				
ANR	10139281	AssignmentExpression	* op ++ = ( uint8 ) ( b >> shft )		10138903	0		=			
ANR	10139282	UnaryOperationExpression	* op ++		10138903	0					
ANR	10139283	UnaryOperator	*		10138903	0					
ANR	10139284	PostIncDecOperationExpression	op ++		10138903	1					
ANR	10139285	Identifier	op		10138903	0					
ANR	10139286	IncDec	++		10138903	1					
ANR	10139287	CastExpression	( uint8 ) ( b >> shft )		10138903	1					
ANR	10139288	CastTarget	uint8		10138903	0					
ANR	10139289	ShiftExpression	b >> shft		10138903	1		>>			
ANR	10139290	Identifier	b		10138903	0					
ANR	10139291	Identifier	shft		10138903	1					
ANR	10139292	ExpressionStatement	occ -= 2	497:6:15330:15338	10138903	2	True				
ANR	10139293	AssignmentExpression	occ -= 2		10138903	0		-=			
ANR	10139294	Identifier	occ		10138903	0					
ANR	10139295	PrimaryExpression	2		10138903	1					
ANR	10139296	ExpressionStatement	i = beg	498:6:15346:15353	10138903	3	True				
ANR	10139297	AssignmentExpression	i = beg		10138903	0		=			
ANR	10139298	Identifier	i		10138903	0					
ANR	10139299	Identifier	beg		10138903	1					
ANR	10139300	BreakStatement	break ;	499:6:15361:15366	10138903	4	True				
ANR	10139301	WhileStatement	while ( i < beg )		10138903	4					
ANR	10139302	Condition	i < beg	502:10:15390:15396	10138903	0	True				
ANR	10139303	RelationalExpression	i < beg		10138903	0		<			
ANR	10139304	Identifier	i		10138903	0					
ANR	10139305	Identifier	beg		10138903	1					
ANR	10139306	CompoundStatement		65:19:1544:1544	10138903	1					
ANR	10139307	IfStatement	if ( ( j = beg - i ) > 127 )		10138903	0					
ANR	10139308	Condition	( j = beg - i ) > 127	503:8:15434:15450	10138903	0	True				
ANR	10139309	RelationalExpression	( j = beg - i ) > 127		10138903	0		>			
ANR	10139310	AssignmentExpression	j = beg - i		10138903	0		=			
ANR	10139311	Identifier	j		10138903	0					
ANR	10139312	AdditiveExpression	beg - i		10138903	1		-			
ANR	10139313	Identifier	beg		10138903	0					
ANR	10139314	Identifier	i		10138903	1					
ANR	10139315	PrimaryExpression	127		10138903	1					
ANR	10139316	ExpressionStatement	j = 127	503:27:15453:15460	10138903	1	True				
ANR	10139317	AssignmentExpression	j = 127		10138903	0		=			
ANR	10139318	Identifier	j		10138903	0					
ANR	10139319	PrimaryExpression	127		10138903	1					
ANR	10139320	IfStatement	if ( occ < j + 3 )		10138903	1					
ANR	10139321	Condition	occ < j + 3	504:8:15470:15478	10138903	0	True				
ANR	10139322	RelationalExpression	occ < j + 3		10138903	0		<			
ANR	10139323	Identifier	occ		10138903	0					
ANR	10139324	AdditiveExpression	j + 3		10138903	1		+			
ANR	10139325	Identifier	j		10138903	0					
ANR	10139326	PrimaryExpression	3		10138903	1					
ANR	10139327	CompoundStatement		67:19:1626:1626	10138903	1					
ANR	10139328	ExpressionStatement	tif -> tif_rawcp = op	505:5:15488:15507	10138903	0	True				
ANR	10139329	AssignmentExpression	tif -> tif_rawcp = op		10138903	0		=			
ANR	10139330	PtrMemberAccess	tif -> tif_rawcp		10138903	0					
ANR	10139331	Identifier	tif		10138903	0					
ANR	10139332	Identifier	tif_rawcp		10138903	1					
ANR	10139333	Identifier	op		10138903	1					
ANR	10139334	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	506:5:15514:15557	10138903	1	True				
ANR	10139335	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		10138903	0		=			
ANR	10139336	PtrMemberAccess	tif -> tif_rawcc		10138903	0					
ANR	10139337	Identifier	tif		10138903	0					
ANR	10139338	Identifier	tif_rawcc		10138903	1					
ANR	10139339	AdditiveExpression	tif -> tif_rawdatasize - occ		10138903	1		-			
ANR	10139340	PtrMemberAccess	tif -> tif_rawdatasize		10138903	0					
ANR	10139341	Identifier	tif		10138903	0					
ANR	10139342	Identifier	tif_rawdatasize		10138903	1					
ANR	10139343	Identifier	occ		10138903	1					
ANR	10139344	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		10138903	2					
ANR	10139345	Condition	! TIFFFlushData1 ( tif )	507:9:15568:15587	10138903	0	True				
ANR	10139346	UnaryOperationExpression	! TIFFFlushData1 ( tif )		10138903	0					
ANR	10139347	UnaryOperator	!		10138903	0					
ANR	10139348	CallExpression	TIFFFlushData1 ( tif )		10138903	1					
ANR	10139349	Callee	TIFFFlushData1		10138903	0					
ANR	10139350	Identifier	TIFFFlushData1		10138903	0					
ANR	10139351	ArgumentList	tif		10138903	1					
ANR	10139352	Argument	tif		10138903	0					
ANR	10139353	Identifier	tif		10138903	0					
ANR	10139354	ReturnStatement	return ( 0 ) ;	508:6:15596:15606	10138903	1	True				
ANR	10139355	PrimaryExpression	0		10138903	0					
ANR	10139356	ExpressionStatement	op = tif -> tif_rawcp	509:5:15613:15632	10138903	3	True				
ANR	10139357	AssignmentExpression	op = tif -> tif_rawcp		10138903	0		=			
ANR	10139358	Identifier	op		10138903	0					
ANR	10139359	PtrMemberAccess	tif -> tif_rawcp		10138903	1					
ANR	10139360	Identifier	tif		10138903	0					
ANR	10139361	Identifier	tif_rawcp		10138903	1					
ANR	10139362	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	510:5:15639:15682	10138903	4	True				
ANR	10139363	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		10138903	0		=			
ANR	10139364	Identifier	occ		10138903	0					
ANR	10139365	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		10138903	1		-			
ANR	10139366	PtrMemberAccess	tif -> tif_rawdatasize		10138903	0					
ANR	10139367	Identifier	tif		10138903	0					
ANR	10139368	Identifier	tif_rawdatasize		10138903	1					
ANR	10139369	PtrMemberAccess	tif -> tif_rawcc		10138903	1					
ANR	10139370	Identifier	tif		10138903	0					
ANR	10139371	Identifier	tif_rawcc		10138903	1					
ANR	10139372	ExpressionStatement	* op ++ = ( uint8 ) j	512:4:15694:15711	10138903	2	True				
ANR	10139373	AssignmentExpression	* op ++ = ( uint8 ) j		10138903	0		=			
ANR	10139374	UnaryOperationExpression	* op ++		10138903	0					
ANR	10139375	UnaryOperator	*		10138903	0					
ANR	10139376	PostIncDecOperationExpression	op ++		10138903	1					
ANR	10139377	Identifier	op		10138903	0					
ANR	10139378	IncDec	++		10138903	1					
ANR	10139379	CastExpression	( uint8 ) j		10138903	1					
ANR	10139380	CastTarget	uint8		10138903	0					
ANR	10139381	Identifier	j		10138903	1					
ANR	10139382	ExpressionStatement	occ --	512:23:15713:15718	10138903	3	True				
ANR	10139383	PostIncDecOperationExpression	occ --		10138903	0					
ANR	10139384	Identifier	occ		10138903	0					
ANR	10139385	IncDec	--		10138903	1					
ANR	10139386	WhileStatement	while ( j -- )		10138903	4					
ANR	10139387	Condition	j --	513:11:15731:15733	10138903	0	True				
ANR	10139388	PostIncDecOperationExpression	j --		10138903	0					
ANR	10139389	Identifier	j		10138903	0					
ANR	10139390	IncDec	--		10138903	1					
ANR	10139391	CompoundStatement		76:16:1881:1881	10138903	1					
ANR	10139392	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )	514:5:15743:15783	10138903	0	True				
ANR	10139393	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		10138903	0		=			
ANR	10139394	UnaryOperationExpression	* op ++		10138903	0					
ANR	10139395	UnaryOperator	*		10138903	0					
ANR	10139396	PostIncDecOperationExpression	op ++		10138903	1					
ANR	10139397	Identifier	op		10138903	0					
ANR	10139398	IncDec	++		10138903	1					
ANR	10139399	CastExpression	( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		10138903	1					
ANR	10139400	CastTarget	uint8		10138903	0					
ANR	10139401	BitAndExpression	tp [ i ++ ] >> shft & 0xff		10138903	1		&			
ANR	10139402	ShiftExpression	tp [ i ++ ] >> shft		10138903	0		>>			
ANR	10139403	ArrayIndexing	tp [ i ++ ]		10138903	0					
ANR	10139404	Identifier	tp		10138903	0					
ANR	10139405	PostIncDecOperationExpression	i ++		10138903	1					
ANR	10139406	Identifier	i		10138903	0					
ANR	10139407	IncDec	++		10138903	1					
ANR	10139408	Identifier	shft		10138903	1					
ANR	10139409	PrimaryExpression	0xff		10138903	1					
ANR	10139410	ExpressionStatement	occ --	515:5:15790:15795	10138903	1	True				
ANR	10139411	PostIncDecOperationExpression	occ --		10138903	0					
ANR	10139412	Identifier	occ		10138903	0					
ANR	10139413	IncDec	--		10138903	1					
ANR	10139414	IfStatement	if ( rc >= MINRUN )		10138903	5					
ANR	10139415	Condition	rc >= MINRUN	518:7:15815:15826	10138903	0	True				
ANR	10139416	RelationalExpression	rc >= MINRUN		10138903	0		>=			
ANR	10139417	Identifier	rc		10138903	0					
ANR	10139418	Identifier	MINRUN		10138903	1					
ANR	10139419	CompoundStatement		81:21:1974:1974	10138903	1					
ANR	10139420	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + rc )	519:4:15856:15882	10138903	0	True				
ANR	10139421	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + rc )		10138903	0		=			
ANR	10139422	UnaryOperationExpression	* op ++		10138903	0					
ANR	10139423	UnaryOperator	*		10138903	0					
ANR	10139424	PostIncDecOperationExpression	op ++		10138903	1					
ANR	10139425	Identifier	op		10138903	0					
ANR	10139426	IncDec	++		10138903	1					
ANR	10139427	CastExpression	( uint8 ) ( 128 - 2 + rc )		10138903	1					
ANR	10139428	CastTarget	uint8		10138903	0					
ANR	10139429	AdditiveExpression	128 - 2 + rc		10138903	1		-			
ANR	10139430	PrimaryExpression	128		10138903	0					
ANR	10139431	AdditiveExpression	2 + rc		10138903	1		+			
ANR	10139432	PrimaryExpression	2		10138903	0					
ANR	10139433	Identifier	rc		10138903	1					
ANR	10139434	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )	520:4:15888:15928	10138903	1	True				
ANR	10139435	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )		10138903	0		=			
ANR	10139436	UnaryOperationExpression	* op ++		10138903	0					
ANR	10139437	UnaryOperator	*		10138903	0					
ANR	10139438	PostIncDecOperationExpression	op ++		10138903	1					
ANR	10139439	Identifier	op		10138903	0					
ANR	10139440	IncDec	++		10138903	1					
ANR	10139441	CastExpression	( uint8 ) ( tp [ beg ] >> shft & 0xff )		10138903	1					
ANR	10139442	CastTarget	uint8		10138903	0					
ANR	10139443	BitAndExpression	tp [ beg ] >> shft & 0xff		10138903	1		&			
ANR	10139444	ShiftExpression	tp [ beg ] >> shft		10138903	0		>>			
ANR	10139445	ArrayIndexing	tp [ beg ]		10138903	0					
ANR	10139446	Identifier	tp		10138903	0					
ANR	10139447	Identifier	beg		10138903	1					
ANR	10139448	Identifier	shft		10138903	1					
ANR	10139449	PrimaryExpression	0xff		10138903	1					
ANR	10139450	ExpressionStatement	occ -= 2	521:4:15934:15942	10138903	2	True				
ANR	10139451	AssignmentExpression	occ -= 2		10138903	0		-=			
ANR	10139452	Identifier	occ		10138903	0					
ANR	10139453	PrimaryExpression	2		10138903	1					
ANR	10139454	ElseStatement	else		10138903	0					
ANR	10139455	ExpressionStatement	rc = 0	523:4:15958:15964	10138903	0	True				
ANR	10139456	AssignmentExpression	rc = 0		10138903	0		=			
ANR	10139457	Identifier	rc		10138903	0					
ANR	10139458	PrimaryExpression	0		10138903	1					
ANR	10139459	ExpressionStatement	tif -> tif_rawcp = op	525:1:15971:15990	10138903	20	True				
ANR	10139460	AssignmentExpression	tif -> tif_rawcp = op		10138903	0		=			
ANR	10139461	PtrMemberAccess	tif -> tif_rawcp		10138903	0					
ANR	10139462	Identifier	tif		10138903	0					
ANR	10139463	Identifier	tif_rawcp		10138903	1					
ANR	10139464	Identifier	op		10138903	1					
ANR	10139465	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	526:1:15993:16036	10138903	21	True				
ANR	10139466	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		10138903	0		=			
ANR	10139467	PtrMemberAccess	tif -> tif_rawcc		10138903	0					
ANR	10139468	Identifier	tif		10138903	0					
ANR	10139469	Identifier	tif_rawcc		10138903	1					
ANR	10139470	AdditiveExpression	tif -> tif_rawdatasize - occ		10138903	1		-			
ANR	10139471	PtrMemberAccess	tif -> tif_rawdatasize		10138903	0					
ANR	10139472	Identifier	tif		10138903	0					
ANR	10139473	Identifier	tif_rawdatasize		10138903	1					
ANR	10139474	Identifier	occ		10138903	1					
ANR	10139475	ReturnStatement	return ( 1 ) ;	528:1:16040:16050	10138903	22	True				
ANR	10139476	PrimaryExpression	1		10138903	0					
ANR	10139477	ReturnType	static int		10138903	1					
ANR	10139478	Identifier	LogL16Encode		10138903	2					
ANR	10139479	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		10138903	3					
ANR	10139480	Parameter	TIFF * tif	437:13:13809:13817	10138903	0	True				
ANR	10139481	ParameterType	TIFF *		10138903	0					
ANR	10139482	Identifier	tif		10138903	1					
ANR	10139483	Parameter	uint8 * bp	437:24:13820:13828	10138903	1	True				
ANR	10139484	ParameterType	uint8 *		10138903	0					
ANR	10139485	Identifier	bp		10138903	1					
ANR	10139486	Parameter	tmsize_t cc	437:35:13831:13841	10138903	2	True				
ANR	10139487	ParameterType	tmsize_t		10138903	0					
ANR	10139488	Identifier	cc		10138903	1					
ANR	10139489	Parameter	uint16 s	437:48:13844:13851	10138903	3	True				
ANR	10139490	ParameterType	uint16		10138903	0					
ANR	10139491	Identifier	s		10138903	1					
ANR	10139492	CFGEntryNode	ENTRY		10138903		True				
ANR	10139493	CFGExitNode	EXIT		10138903		True				
ANR	10139494	Symbol	* sp		10138903						
ANR	10139495	Symbol	beg		10138903						
ANR	10139496	Symbol	sp -> user_datafmt		10138903						
ANR	10139497	Symbol	bp		10138903						
ANR	10139498	Symbol	occ		10138903						
ANR	10139499	Symbol	tif		10138903						
ANR	10139500	Symbol	npixels		10138903						
ANR	10139501	Symbol	sp -> tbuflen		10138903						
ANR	10139502	Symbol	tif -> tif_rawcc		10138903						
ANR	10139503	Symbol	* beg		10138903						
ANR	10139504	Symbol	sp -> pixel_size		10138903						
ANR	10139505	Symbol	SGILOGDATAFMT_16BIT		10138903						
ANR	10139506	Symbol	TIFFFlushData1		10138903						
ANR	10139507	Symbol	shft		10138903						
ANR	10139508	Symbol	sp -> tbuf		10138903						
ANR	10139509	Symbol	sp -> tfunc		10138903						
ANR	10139510	Symbol	sp		10138903						
ANR	10139511	Symbol	mask		10138903						
ANR	10139512	Symbol	cc		10138903						
ANR	10139513	Symbol	EncoderState		10138903						
ANR	10139514	Symbol	op		10138903						
ANR	10139515	Symbol	* tp		10138903						
ANR	10139516	Symbol	b		10138903						
ANR	10139517	Symbol	NULL		10138903						
ANR	10139518	Symbol	module		10138903						
ANR	10139519	Symbol	i		10138903						
ANR	10139520	Symbol	j		10138903						
ANR	10139521	Symbol	tif -> tif_rawcp		10138903						
ANR	10139522	Symbol	tif -> tif_clientdata		10138903						
ANR	10139523	Symbol	rc		10138903						
ANR	10139524	Symbol	s		10138903						
ANR	10139525	Symbol	* i		10138903						
ANR	10139526	Symbol	tif -> tif_rawdatasize		10138903						
ANR	10139527	Symbol	* rc		10138903						
ANR	10139528	Symbol	MINRUN		10138903						
ANR	10139529	Symbol	* op ++		10138903						
ANR	10139530	Symbol	* tif		10138903						
ANR	10139531	Symbol	tp		10138903						
ANR	10139532	Function	LogLuvEncode24	534:0:16096:17203							
ANR	10139533	FunctionDef	"LogLuvEncode24 (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		10139532	0					
ANR	10139534	CompoundStatement		536:0:16167:17203	10139532	0					
ANR	10139535	Statement	static	537:1:16170:16175	10139532	0	True				
ANR	10139536	IdentifierDeclStatement	"const char module [ ] = ""LogLuvEncode24"" ;"	537:8:16177:16215	10139532	1	True				
ANR	10139537	IdentifierDecl	"module [ ] = ""LogLuvEncode24"""		10139532	0					
ANR	10139538	IdentifierDeclType	const char [ ]		10139532	0					
ANR	10139539	Identifier	module		10139532	1					
ANR	10139540	AssignmentExpression	"module [ ] = ""LogLuvEncode24"""		10139532	2		=			
ANR	10139541	Identifier	module		10139532	0					
ANR	10139542	PrimaryExpression	"""LogLuvEncode24"""		10139532	1					
ANR	10139543	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	538:1:16218:16253	10139532	2	True				
ANR	10139544	IdentifierDecl	* sp = EncoderState ( tif )		10139532	0					
ANR	10139545	IdentifierDeclType	LogLuvState *		10139532	0					
ANR	10139546	Identifier	sp		10139532	1					
ANR	10139547	AssignmentExpression	* sp = EncoderState ( tif )		10139532	2		=			
ANR	10139548	Identifier	sp		10139532	0					
ANR	10139549	CallExpression	EncoderState ( tif )		10139532	1					
ANR	10139550	Callee	EncoderState		10139532	0					
ANR	10139551	Identifier	EncoderState		10139532	0					
ANR	10139552	ArgumentList	tif		10139532	1					
ANR	10139553	Argument	tif		10139532	0					
ANR	10139554	Identifier	tif		10139532	0					
ANR	10139555	IdentifierDeclStatement	tmsize_t i ;	539:1:16256:16266	10139532	3	True				
ANR	10139556	IdentifierDecl	i		10139532	0					
ANR	10139557	IdentifierDeclType	tmsize_t		10139532	0					
ANR	10139558	Identifier	i		10139532	1					
ANR	10139559	IdentifierDeclStatement	tmsize_t npixels ;	540:1:16269:16285	10139532	4	True				
ANR	10139560	IdentifierDecl	npixels		10139532	0					
ANR	10139561	IdentifierDeclType	tmsize_t		10139532	0					
ANR	10139562	Identifier	npixels		10139532	1					
ANR	10139563	IdentifierDeclStatement	tmsize_t occ ;	541:1:16288:16300	10139532	5	True				
ANR	10139564	IdentifierDecl	occ		10139532	0					
ANR	10139565	IdentifierDeclType	tmsize_t		10139532	0					
ANR	10139566	Identifier	occ		10139532	1					
ANR	10139567	IdentifierDeclStatement	uint8 * op ;	542:1:16303:16312	10139532	6	True				
ANR	10139568	IdentifierDecl	* op		10139532	0					
ANR	10139569	IdentifierDeclType	uint8 *		10139532	0					
ANR	10139570	Identifier	op		10139532	1					
ANR	10139571	IdentifierDeclStatement	uint32 * tp ;	543:1:16315:16325	10139532	7	True				
ANR	10139572	IdentifierDecl	* tp		10139532	0					
ANR	10139573	IdentifierDeclType	uint32 *		10139532	0					
ANR	10139574	Identifier	tp		10139532	1					
ANR	10139575	ExpressionStatement	assert ( s == 0 )	545:1:16329:16343	10139532	8	True				
ANR	10139576	CallExpression	assert ( s == 0 )		10139532	0					
ANR	10139577	Callee	assert		10139532	0					
ANR	10139578	Identifier	assert		10139532	0					
ANR	10139579	ArgumentList	s == 0		10139532	1					
ANR	10139580	Argument	s == 0		10139532	0					
ANR	10139581	EqualityExpression	s == 0		10139532	0		==			
ANR	10139582	Identifier	s		10139532	0					
ANR	10139583	PrimaryExpression	0		10139532	1					
ANR	10139584	ExpressionStatement	assert ( sp != NULL )	546:1:16346:16364	10139532	9	True				
ANR	10139585	CallExpression	assert ( sp != NULL )		10139532	0					
ANR	10139586	Callee	assert		10139532	0					
ANR	10139587	Identifier	assert		10139532	0					
ANR	10139588	ArgumentList	sp != NULL		10139532	1					
ANR	10139589	Argument	sp != NULL		10139532	0					
ANR	10139590	EqualityExpression	sp != NULL		10139532	0		!=			
ANR	10139591	Identifier	sp		10139532	0					
ANR	10139592	Identifier	NULL		10139532	1					
ANR	10139593	ExpressionStatement	npixels = cc / sp -> pixel_size	547:1:16367:16396	10139532	10	True				
ANR	10139594	AssignmentExpression	npixels = cc / sp -> pixel_size		10139532	0		=			
ANR	10139595	Identifier	npixels		10139532	0					
ANR	10139596	MultiplicativeExpression	cc / sp -> pixel_size		10139532	1		/			
ANR	10139597	Identifier	cc		10139532	0					
ANR	10139598	PtrMemberAccess	sp -> pixel_size		10139532	1					
ANR	10139599	Identifier	sp		10139532	0					
ANR	10139600	Identifier	pixel_size		10139532	1					
ANR	10139601	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		10139532	11					
ANR	10139602	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	549:5:16404:16440	10139532	0	True				
ANR	10139603	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		10139532	0		==			
ANR	10139604	PtrMemberAccess	sp -> user_datafmt		10139532	0					
ANR	10139605	Identifier	sp		10139532	0					
ANR	10139606	Identifier	user_datafmt		10139532	1					
ANR	10139607	Identifier	SGILOGDATAFMT_RAW		10139532	1					
ANR	10139608	ExpressionStatement	tp = ( uint32 * ) bp	550:2:16445:16462	10139532	1	True				
ANR	10139609	AssignmentExpression	tp = ( uint32 * ) bp		10139532	0		=			
ANR	10139610	Identifier	tp		10139532	0					
ANR	10139611	CastExpression	( uint32 * ) bp		10139532	1					
ANR	10139612	CastTarget	uint32 *		10139532	0					
ANR	10139613	Identifier	bp		10139532	1					
ANR	10139614	ElseStatement	else		10139532	0					
ANR	10139615	CompoundStatement		16:6:302:302	10139532	0					
ANR	10139616	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	552:2:16474:16497	10139532	0	True				
ANR	10139617	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		10139532	0		=			
ANR	10139618	Identifier	tp		10139532	0					
ANR	10139619	CastExpression	( uint32 * ) sp -> tbuf		10139532	1					
ANR	10139620	CastTarget	uint32 *		10139532	0					
ANR	10139621	PtrMemberAccess	sp -> tbuf		10139532	1					
ANR	10139622	Identifier	sp		10139532	0					
ANR	10139623	Identifier	tbuf		10139532	1					
ANR	10139624	IfStatement	if ( sp -> tbuflen < npixels )		10139532	1					
ANR	10139625	Condition	sp -> tbuflen < npixels	553:5:16504:16524	10139532	0	True				
ANR	10139626	RelationalExpression	sp -> tbuflen < npixels		10139532	0		<			
ANR	10139627	PtrMemberAccess	sp -> tbuflen		10139532	0					
ANR	10139628	Identifier	sp		10139532	0					
ANR	10139629	Identifier	tbuflen		10139532	1					
ANR	10139630	Identifier	npixels		10139532	1					
ANR	10139631	CompoundStatement		18:28:359:359	10139532	1					
ANR	10139632	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	554:3:16532:16612	10139532	0	True				
ANR	10139633	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		10139532	0					
ANR	10139634	Callee	TIFFErrorExt		10139532	0					
ANR	10139635	Identifier	TIFFErrorExt		10139532	0					
ANR	10139636	ArgumentList	tif -> tif_clientdata		10139532	1					
ANR	10139637	Argument	tif -> tif_clientdata		10139532	0					
ANR	10139638	PtrMemberAccess	tif -> tif_clientdata		10139532	0					
ANR	10139639	Identifier	tif		10139532	0					
ANR	10139640	Identifier	tif_clientdata		10139532	1					
ANR	10139641	Argument	module		10139532	1					
ANR	10139642	Identifier	module		10139532	0					
ANR	10139643	Argument	"""Translation buffer too short"""		10139532	2					
ANR	10139644	PrimaryExpression	"""Translation buffer too short"""		10139532	0					
ANR	10139645	ReturnStatement	return ( 0 ) ;	556:3:16617:16627	10139532	1	True				
ANR	10139646	PrimaryExpression	0		10139532	0					
ANR	10139647	ExpressionStatement	"( * sp -> tfunc ) ( sp , bp , npixels )"	558:2:16635:16664	10139532	2	True				
ANR	10139648	CallExpression	"( * sp -> tfunc ) ( sp , bp , npixels )"		10139532	0					
ANR	10139649	Callee	* sp -> tfunc		10139532	0					
ANR	10139650	UnaryOperationExpression	* sp -> tfunc		10139532	0					
ANR	10139651	UnaryOperator	*		10139532	0					
ANR	10139652	PtrMemberAccess	sp -> tfunc		10139532	1					
ANR	10139653	Identifier	sp		10139532	0					
ANR	10139654	Identifier	tfunc		10139532	1					
ANR	10139655	ArgumentList	sp		10139532	1					
ANR	10139656	Argument	sp		10139532	0					
ANR	10139657	Identifier	sp		10139532	0					
ANR	10139658	Argument	bp		10139532	1					
ANR	10139659	Identifier	bp		10139532	0					
ANR	10139660	Argument	npixels		10139532	2					
ANR	10139661	Identifier	npixels		10139532	0					
ANR	10139662	ExpressionStatement	op = tif -> tif_rawcp	561:1:16702:16721	10139532	12	True				
ANR	10139663	AssignmentExpression	op = tif -> tif_rawcp		10139532	0		=			
ANR	10139664	Identifier	op		10139532	0					
ANR	10139665	PtrMemberAccess	tif -> tif_rawcp		10139532	1					
ANR	10139666	Identifier	tif		10139532	0					
ANR	10139667	Identifier	tif_rawcp		10139532	1					
ANR	10139668	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	562:1:16724:16767	10139532	13	True				
ANR	10139669	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		10139532	0		=			
ANR	10139670	Identifier	occ		10139532	0					
ANR	10139671	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		10139532	1		-			
ANR	10139672	PtrMemberAccess	tif -> tif_rawdatasize		10139532	0					
ANR	10139673	Identifier	tif		10139532	0					
ANR	10139674	Identifier	tif_rawdatasize		10139532	1					
ANR	10139675	PtrMemberAccess	tif -> tif_rawcc		10139532	1					
ANR	10139676	Identifier	tif		10139532	0					
ANR	10139677	Identifier	tif_rawcc		10139532	1					
ANR	10139678	ForStatement	for ( i = npixels ; i -- ; )		10139532	14					
ANR	10139679	ForInit	i = npixels ;	563:6:16775:16786	10139532	0	True				
ANR	10139680	AssignmentExpression	i = npixels		10139532	0		=			
ANR	10139681	Identifier	i		10139532	0					
ANR	10139682	Identifier	npixels		10139532	1					
ANR	10139683	Condition	i --	563:19:16788:16790	10139532	1	True				
ANR	10139684	PostIncDecOperationExpression	i --		10139532	0					
ANR	10139685	Identifier	i		10139532	0					
ANR	10139686	IncDec	--		10139532	1					
ANR	10139687	CompoundStatement		28:26:627:627	10139532	2					
ANR	10139688	IfStatement	if ( occ < 3 )		10139532	0					
ANR	10139689	Condition	occ < 3	564:6:16803:16809	10139532	0	True				
ANR	10139690	RelationalExpression	occ < 3		10139532	0		<			
ANR	10139691	Identifier	occ		10139532	0					
ANR	10139692	PrimaryExpression	3		10139532	1					
ANR	10139693	CompoundStatement		29:15:644:644	10139532	1					
ANR	10139694	ExpressionStatement	tif -> tif_rawcp = op	565:3:16817:16836	10139532	0	True				
ANR	10139695	AssignmentExpression	tif -> tif_rawcp = op		10139532	0		=			
ANR	10139696	PtrMemberAccess	tif -> tif_rawcp		10139532	0					
ANR	10139697	Identifier	tif		10139532	0					
ANR	10139698	Identifier	tif_rawcp		10139532	1					
ANR	10139699	Identifier	op		10139532	1					
ANR	10139700	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	566:3:16841:16884	10139532	1	True				
ANR	10139701	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		10139532	0		=			
ANR	10139702	PtrMemberAccess	tif -> tif_rawcc		10139532	0					
ANR	10139703	Identifier	tif		10139532	0					
ANR	10139704	Identifier	tif_rawcc		10139532	1					
ANR	10139705	AdditiveExpression	tif -> tif_rawdatasize - occ		10139532	1		-			
ANR	10139706	PtrMemberAccess	tif -> tif_rawdatasize		10139532	0					
ANR	10139707	Identifier	tif		10139532	0					
ANR	10139708	Identifier	tif_rawdatasize		10139532	1					
ANR	10139709	Identifier	occ		10139532	1					
ANR	10139710	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		10139532	2					
ANR	10139711	Condition	! TIFFFlushData1 ( tif )	567:7:16893:16912	10139532	0	True				
ANR	10139712	UnaryOperationExpression	! TIFFFlushData1 ( tif )		10139532	0					
ANR	10139713	UnaryOperator	!		10139532	0					
ANR	10139714	CallExpression	TIFFFlushData1 ( tif )		10139532	1					
ANR	10139715	Callee	TIFFFlushData1		10139532	0					
ANR	10139716	Identifier	TIFFFlushData1		10139532	0					
ANR	10139717	ArgumentList	tif		10139532	1					
ANR	10139718	Argument	tif		10139532	0					
ANR	10139719	Identifier	tif		10139532	0					
ANR	10139720	ReturnStatement	return ( 0 ) ;	568:4:16919:16929	10139532	1	True				
ANR	10139721	PrimaryExpression	0		10139532	0					
ANR	10139722	ExpressionStatement	op = tif -> tif_rawcp	569:3:16934:16953	10139532	3	True				
ANR	10139723	AssignmentExpression	op = tif -> tif_rawcp		10139532	0		=			
ANR	10139724	Identifier	op		10139532	0					
ANR	10139725	PtrMemberAccess	tif -> tif_rawcp		10139532	1					
ANR	10139726	Identifier	tif		10139532	0					
ANR	10139727	Identifier	tif_rawcp		10139532	1					
ANR	10139728	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	570:3:16958:17001	10139532	4	True				
ANR	10139729	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		10139532	0		=			
ANR	10139730	Identifier	occ		10139532	0					
ANR	10139731	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		10139532	1		-			
ANR	10139732	PtrMemberAccess	tif -> tif_rawdatasize		10139532	0					
ANR	10139733	Identifier	tif		10139532	0					
ANR	10139734	Identifier	tif_rawdatasize		10139532	1					
ANR	10139735	PtrMemberAccess	tif -> tif_rawcc		10139532	1					
ANR	10139736	Identifier	tif		10139532	0					
ANR	10139737	Identifier	tif_rawcc		10139532	1					
ANR	10139738	ExpressionStatement	* op ++ = ( uint8 ) ( * tp >> 16 )	572:2:17009:17035	10139532	1	True				
ANR	10139739	AssignmentExpression	* op ++ = ( uint8 ) ( * tp >> 16 )		10139532	0		=			
ANR	10139740	UnaryOperationExpression	* op ++		10139532	0					
ANR	10139741	UnaryOperator	*		10139532	0					
ANR	10139742	PostIncDecOperationExpression	op ++		10139532	1					
ANR	10139743	Identifier	op		10139532	0					
ANR	10139744	IncDec	++		10139532	1					
ANR	10139745	CastExpression	( uint8 ) ( * tp >> 16 )		10139532	1					
ANR	10139746	CastTarget	uint8		10139532	0					
ANR	10139747	ShiftExpression	* tp >> 16		10139532	1		>>			
ANR	10139748	UnaryOperationExpression	* tp		10139532	0					
ANR	10139749	UnaryOperator	*		10139532	0					
ANR	10139750	Identifier	tp		10139532	1					
ANR	10139751	PrimaryExpression	16		10139532	1					
ANR	10139752	ExpressionStatement	* op ++ = ( uint8 ) ( * tp >> 8 & 0xff )	573:2:17039:17071	10139532	2	True				
ANR	10139753	AssignmentExpression	* op ++ = ( uint8 ) ( * tp >> 8 & 0xff )		10139532	0		=			
ANR	10139754	UnaryOperationExpression	* op ++		10139532	0					
ANR	10139755	UnaryOperator	*		10139532	0					
ANR	10139756	PostIncDecOperationExpression	op ++		10139532	1					
ANR	10139757	Identifier	op		10139532	0					
ANR	10139758	IncDec	++		10139532	1					
ANR	10139759	CastExpression	( uint8 ) ( * tp >> 8 & 0xff )		10139532	1					
ANR	10139760	CastTarget	uint8		10139532	0					
ANR	10139761	BitAndExpression	* tp >> 8 & 0xff		10139532	1		&			
ANR	10139762	ShiftExpression	* tp >> 8		10139532	0		>>			
ANR	10139763	UnaryOperationExpression	* tp		10139532	0					
ANR	10139764	UnaryOperator	*		10139532	0					
ANR	10139765	Identifier	tp		10139532	1					
ANR	10139766	PrimaryExpression	8		10139532	1					
ANR	10139767	PrimaryExpression	0xff		10139532	1					
ANR	10139768	ExpressionStatement	* op ++ = ( uint8 ) ( * tp ++ & 0xff )	574:2:17075:17104	10139532	3	True				
ANR	10139769	AssignmentExpression	* op ++ = ( uint8 ) ( * tp ++ & 0xff )		10139532	0		=			
ANR	10139770	UnaryOperationExpression	* op ++		10139532	0					
ANR	10139771	UnaryOperator	*		10139532	0					
ANR	10139772	PostIncDecOperationExpression	op ++		10139532	1					
ANR	10139773	Identifier	op		10139532	0					
ANR	10139774	IncDec	++		10139532	1					
ANR	10139775	CastExpression	( uint8 ) ( * tp ++ & 0xff )		10139532	1					
ANR	10139776	CastTarget	uint8		10139532	0					
ANR	10139777	BitAndExpression	* tp ++ & 0xff		10139532	1		&			
ANR	10139778	UnaryOperationExpression	* tp ++		10139532	0					
ANR	10139779	UnaryOperator	*		10139532	0					
ANR	10139780	PostIncDecOperationExpression	tp ++		10139532	1					
ANR	10139781	Identifier	tp		10139532	0					
ANR	10139782	IncDec	++		10139532	1					
ANR	10139783	PrimaryExpression	0xff		10139532	1					
ANR	10139784	ExpressionStatement	occ -= 3	575:2:17108:17116	10139532	4	True				
ANR	10139785	AssignmentExpression	occ -= 3		10139532	0		-=			
ANR	10139786	Identifier	occ		10139532	0					
ANR	10139787	PrimaryExpression	3		10139532	1					
ANR	10139788	ExpressionStatement	tif -> tif_rawcp = op	577:1:17122:17141	10139532	15	True				
ANR	10139789	AssignmentExpression	tif -> tif_rawcp = op		10139532	0		=			
ANR	10139790	PtrMemberAccess	tif -> tif_rawcp		10139532	0					
ANR	10139791	Identifier	tif		10139532	0					
ANR	10139792	Identifier	tif_rawcp		10139532	1					
ANR	10139793	Identifier	op		10139532	1					
ANR	10139794	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	578:1:17144:17187	10139532	16	True				
ANR	10139795	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		10139532	0		=			
ANR	10139796	PtrMemberAccess	tif -> tif_rawcc		10139532	0					
ANR	10139797	Identifier	tif		10139532	0					
ANR	10139798	Identifier	tif_rawcc		10139532	1					
ANR	10139799	AdditiveExpression	tif -> tif_rawdatasize - occ		10139532	1		-			
ANR	10139800	PtrMemberAccess	tif -> tif_rawdatasize		10139532	0					
ANR	10139801	Identifier	tif		10139532	0					
ANR	10139802	Identifier	tif_rawdatasize		10139532	1					
ANR	10139803	Identifier	occ		10139532	1					
ANR	10139804	ReturnStatement	return ( 1 ) ;	580:1:17191:17201	10139532	17	True				
ANR	10139805	PrimaryExpression	1		10139532	0					
ANR	10139806	ReturnType	static int		10139532	1					
ANR	10139807	Identifier	LogLuvEncode24		10139532	2					
ANR	10139808	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		10139532	3					
ANR	10139809	Parameter	TIFF * tif	535:15:16122:16130	10139532	0	True				
ANR	10139810	ParameterType	TIFF *		10139532	0					
ANR	10139811	Identifier	tif		10139532	1					
ANR	10139812	Parameter	uint8 * bp	535:26:16133:16141	10139532	1	True				
ANR	10139813	ParameterType	uint8 *		10139532	0					
ANR	10139814	Identifier	bp		10139532	1					
ANR	10139815	Parameter	tmsize_t cc	535:37:16144:16154	10139532	2	True				
ANR	10139816	ParameterType	tmsize_t		10139532	0					
ANR	10139817	Identifier	cc		10139532	1					
ANR	10139818	Parameter	uint16 s	535:50:16157:16164	10139532	3	True				
ANR	10139819	ParameterType	uint16		10139532	0					
ANR	10139820	Identifier	s		10139532	1					
ANR	10139821	CFGEntryNode	ENTRY		10139532		True				
ANR	10139822	CFGExitNode	EXIT		10139532		True				
ANR	10139823	Symbol	* sp		10139532						
ANR	10139824	Symbol	sp -> user_datafmt		10139532						
ANR	10139825	Symbol	SGILOGDATAFMT_RAW		10139532						
ANR	10139826	Symbol	bp		10139532						
ANR	10139827	Symbol	occ		10139532						
ANR	10139828	Symbol	tif		10139532						
ANR	10139829	Symbol	npixels		10139532						
ANR	10139830	Symbol	sp -> tbuflen		10139532						
ANR	10139831	Symbol	tif -> tif_rawcc		10139532						
ANR	10139832	Symbol	sp -> pixel_size		10139532						
ANR	10139833	Symbol	TIFFFlushData1		10139532						
ANR	10139834	Symbol	sp -> tbuf		10139532						
ANR	10139835	Symbol	sp -> tfunc		10139532						
ANR	10139836	Symbol	sp		10139532						
ANR	10139837	Symbol	cc		10139532						
ANR	10139838	Symbol	EncoderState		10139532						
ANR	10139839	Symbol	op		10139532						
ANR	10139840	Symbol	* tp		10139532						
ANR	10139841	Symbol	NULL		10139532						
ANR	10139842	Symbol	module		10139532						
ANR	10139843	Symbol	i		10139532						
ANR	10139844	Symbol	tif -> tif_rawcp		10139532						
ANR	10139845	Symbol	tif -> tif_clientdata		10139532						
ANR	10139846	Symbol	s		10139532						
ANR	10139847	Symbol	tif -> tif_rawdatasize		10139532						
ANR	10139848	Symbol	* tp ++		10139532						
ANR	10139849	Symbol	* op ++		10139532						
ANR	10139850	Symbol	* tif		10139532						
ANR	10139851	Symbol	tp		10139532						
ANR	10139852	Function	LogLuvEncode32	586:0:17247:19499							
ANR	10139853	FunctionDef	"LogLuvEncode32 (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		10139852	0					
ANR	10139854	CompoundStatement		588:0:17318:19499	10139852	0					
ANR	10139855	Statement	static	589:1:17321:17326	10139852	0	True				
ANR	10139856	IdentifierDeclStatement	"const char module [ ] = ""LogLuvEncode32"" ;"	589:8:17328:17366	10139852	1	True				
ANR	10139857	IdentifierDecl	"module [ ] = ""LogLuvEncode32"""		10139852	0					
ANR	10139858	IdentifierDeclType	const char [ ]		10139852	0					
ANR	10139859	Identifier	module		10139852	1					
ANR	10139860	AssignmentExpression	"module [ ] = ""LogLuvEncode32"""		10139852	2		=			
ANR	10139861	Identifier	module		10139852	0					
ANR	10139862	PrimaryExpression	"""LogLuvEncode32"""		10139852	1					
ANR	10139863	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	590:1:17369:17404	10139852	2	True				
ANR	10139864	IdentifierDecl	* sp = EncoderState ( tif )		10139852	0					
ANR	10139865	IdentifierDeclType	LogLuvState *		10139852	0					
ANR	10139866	Identifier	sp		10139852	1					
ANR	10139867	AssignmentExpression	* sp = EncoderState ( tif )		10139852	2		=			
ANR	10139868	Identifier	sp		10139852	0					
ANR	10139869	CallExpression	EncoderState ( tif )		10139852	1					
ANR	10139870	Callee	EncoderState		10139852	0					
ANR	10139871	Identifier	EncoderState		10139852	0					
ANR	10139872	ArgumentList	tif		10139852	1					
ANR	10139873	Argument	tif		10139852	0					
ANR	10139874	Identifier	tif		10139852	0					
ANR	10139875	IdentifierDeclStatement	int shft ;	591:1:17407:17415	10139852	3	True				
ANR	10139876	IdentifierDecl	shft		10139852	0					
ANR	10139877	IdentifierDeclType	int		10139852	0					
ANR	10139878	Identifier	shft		10139852	1					
ANR	10139879	IdentifierDeclStatement	tmsize_t i ;	592:1:17418:17428	10139852	4	True				
ANR	10139880	IdentifierDecl	i		10139852	0					
ANR	10139881	IdentifierDeclType	tmsize_t		10139852	0					
ANR	10139882	Identifier	i		10139852	1					
ANR	10139883	IdentifierDeclStatement	tmsize_t j ;	593:1:17431:17441	10139852	5	True				
ANR	10139884	IdentifierDecl	j		10139852	0					
ANR	10139885	IdentifierDeclType	tmsize_t		10139852	0					
ANR	10139886	Identifier	j		10139852	1					
ANR	10139887	IdentifierDeclStatement	tmsize_t npixels ;	594:1:17444:17460	10139852	6	True				
ANR	10139888	IdentifierDecl	npixels		10139852	0					
ANR	10139889	IdentifierDeclType	tmsize_t		10139852	0					
ANR	10139890	Identifier	npixels		10139852	1					
ANR	10139891	IdentifierDeclStatement	uint8 * op ;	595:1:17463:17472	10139852	7	True				
ANR	10139892	IdentifierDecl	* op		10139852	0					
ANR	10139893	IdentifierDeclType	uint8 *		10139852	0					
ANR	10139894	Identifier	op		10139852	1					
ANR	10139895	IdentifierDeclStatement	uint32 * tp ;	596:1:17475:17485	10139852	8	True				
ANR	10139896	IdentifierDecl	* tp		10139852	0					
ANR	10139897	IdentifierDeclType	uint32 *		10139852	0					
ANR	10139898	Identifier	tp		10139852	1					
ANR	10139899	IdentifierDeclStatement	uint32 b ;	597:1:17488:17496	10139852	9	True				
ANR	10139900	IdentifierDecl	b		10139852	0					
ANR	10139901	IdentifierDeclType	uint32		10139852	0					
ANR	10139902	Identifier	b		10139852	1					
ANR	10139903	IdentifierDeclStatement	tmsize_t occ ;	598:1:17499:17511	10139852	10	True				
ANR	10139904	IdentifierDecl	occ		10139852	0					
ANR	10139905	IdentifierDeclType	tmsize_t		10139852	0					
ANR	10139906	Identifier	occ		10139852	1					
ANR	10139907	IdentifierDeclStatement	"int rc = 0 , mask ;"	599:1:17514:17528	10139852	11	True				
ANR	10139908	IdentifierDecl	rc = 0		10139852	0					
ANR	10139909	IdentifierDeclType	int		10139852	0					
ANR	10139910	Identifier	rc		10139852	1					
ANR	10139911	AssignmentExpression	rc = 0		10139852	2		=			
ANR	10139912	Identifier	rc		10139852	0					
ANR	10139913	PrimaryExpression	0		10139852	1					
ANR	10139914	IdentifierDecl	mask		10139852	1					
ANR	10139915	IdentifierDeclType	int		10139852	0					
ANR	10139916	Identifier	mask		10139852	1					
ANR	10139917	IdentifierDeclStatement	tmsize_t beg ;	600:1:17531:17543	10139852	12	True				
ANR	10139918	IdentifierDecl	beg		10139852	0					
ANR	10139919	IdentifierDeclType	tmsize_t		10139852	0					
ANR	10139920	Identifier	beg		10139852	1					
ANR	10139921	ExpressionStatement	assert ( s == 0 )	602:1:17547:17561	10139852	13	True				
ANR	10139922	CallExpression	assert ( s == 0 )		10139852	0					
ANR	10139923	Callee	assert		10139852	0					
ANR	10139924	Identifier	assert		10139852	0					
ANR	10139925	ArgumentList	s == 0		10139852	1					
ANR	10139926	Argument	s == 0		10139852	0					
ANR	10139927	EqualityExpression	s == 0		10139852	0		==			
ANR	10139928	Identifier	s		10139852	0					
ANR	10139929	PrimaryExpression	0		10139852	1					
ANR	10139930	ExpressionStatement	assert ( sp != NULL )	603:1:17564:17582	10139852	14	True				
ANR	10139931	CallExpression	assert ( sp != NULL )		10139852	0					
ANR	10139932	Callee	assert		10139852	0					
ANR	10139933	Identifier	assert		10139852	0					
ANR	10139934	ArgumentList	sp != NULL		10139852	1					
ANR	10139935	Argument	sp != NULL		10139852	0					
ANR	10139936	EqualityExpression	sp != NULL		10139852	0		!=			
ANR	10139937	Identifier	sp		10139852	0					
ANR	10139938	Identifier	NULL		10139852	1					
ANR	10139939	ExpressionStatement	npixels = cc / sp -> pixel_size	605:1:17586:17615	10139852	15	True				
ANR	10139940	AssignmentExpression	npixels = cc / sp -> pixel_size		10139852	0		=			
ANR	10139941	Identifier	npixels		10139852	0					
ANR	10139942	MultiplicativeExpression	cc / sp -> pixel_size		10139852	1		/			
ANR	10139943	Identifier	cc		10139852	0					
ANR	10139944	PtrMemberAccess	sp -> pixel_size		10139852	1					
ANR	10139945	Identifier	sp		10139852	0					
ANR	10139946	Identifier	pixel_size		10139852	1					
ANR	10139947	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		10139852	16					
ANR	10139948	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	607:5:17623:17659	10139852	0	True				
ANR	10139949	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		10139852	0		==			
ANR	10139950	PtrMemberAccess	sp -> user_datafmt		10139852	0					
ANR	10139951	Identifier	sp		10139852	0					
ANR	10139952	Identifier	user_datafmt		10139852	1					
ANR	10139953	Identifier	SGILOGDATAFMT_RAW		10139852	1					
ANR	10139954	ExpressionStatement	tp = ( uint32 * ) bp	608:2:17664:17681	10139852	1	True				
ANR	10139955	AssignmentExpression	tp = ( uint32 * ) bp		10139852	0		=			
ANR	10139956	Identifier	tp		10139852	0					
ANR	10139957	CastExpression	( uint32 * ) bp		10139852	1					
ANR	10139958	CastTarget	uint32 *		10139852	0					
ANR	10139959	Identifier	bp		10139852	1					
ANR	10139960	ElseStatement	else		10139852	0					
ANR	10139961	CompoundStatement		22:6:370:370	10139852	0					
ANR	10139962	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	610:2:17693:17716	10139852	0	True				
ANR	10139963	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		10139852	0		=			
ANR	10139964	Identifier	tp		10139852	0					
ANR	10139965	CastExpression	( uint32 * ) sp -> tbuf		10139852	1					
ANR	10139966	CastTarget	uint32 *		10139852	0					
ANR	10139967	PtrMemberAccess	sp -> tbuf		10139852	1					
ANR	10139968	Identifier	sp		10139852	0					
ANR	10139969	Identifier	tbuf		10139852	1					
ANR	10139970	IfStatement	if ( sp -> tbuflen < npixels )		10139852	1					
ANR	10139971	Condition	sp -> tbuflen < npixels	611:5:17723:17743	10139852	0	True				
ANR	10139972	RelationalExpression	sp -> tbuflen < npixels		10139852	0		<			
ANR	10139973	PtrMemberAccess	sp -> tbuflen		10139852	0					
ANR	10139974	Identifier	sp		10139852	0					
ANR	10139975	Identifier	tbuflen		10139852	1					
ANR	10139976	Identifier	npixels		10139852	1					
ANR	10139977	CompoundStatement		24:28:427:427	10139852	1					
ANR	10139978	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	612:3:17751:17831	10139852	0	True				
ANR	10139979	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		10139852	0					
ANR	10139980	Callee	TIFFErrorExt		10139852	0					
ANR	10139981	Identifier	TIFFErrorExt		10139852	0					
ANR	10139982	ArgumentList	tif -> tif_clientdata		10139852	1					
ANR	10139983	Argument	tif -> tif_clientdata		10139852	0					
ANR	10139984	PtrMemberAccess	tif -> tif_clientdata		10139852	0					
ANR	10139985	Identifier	tif		10139852	0					
ANR	10139986	Identifier	tif_clientdata		10139852	1					
ANR	10139987	Argument	module		10139852	1					
ANR	10139988	Identifier	module		10139852	0					
ANR	10139989	Argument	"""Translation buffer too short"""		10139852	2					
ANR	10139990	PrimaryExpression	"""Translation buffer too short"""		10139852	0					
ANR	10139991	ReturnStatement	return ( 0 ) ;	614:3:17836:17846	10139852	1	True				
ANR	10139992	PrimaryExpression	0		10139852	0					
ANR	10139993	ExpressionStatement	"( * sp -> tfunc ) ( sp , bp , npixels )"	616:2:17854:17883	10139852	2	True				
ANR	10139994	CallExpression	"( * sp -> tfunc ) ( sp , bp , npixels )"		10139852	0					
ANR	10139995	Callee	* sp -> tfunc		10139852	0					
ANR	10139996	UnaryOperationExpression	* sp -> tfunc		10139852	0					
ANR	10139997	UnaryOperator	*		10139852	0					
ANR	10139998	PtrMemberAccess	sp -> tfunc		10139852	1					
ANR	10139999	Identifier	sp		10139852	0					
ANR	10140000	Identifier	tfunc		10139852	1					
ANR	10140001	ArgumentList	sp		10139852	1					
ANR	10140002	Argument	sp		10139852	0					
ANR	10140003	Identifier	sp		10139852	0					
ANR	10140004	Argument	bp		10139852	1					
ANR	10140005	Identifier	bp		10139852	0					
ANR	10140006	Argument	npixels		10139852	2					
ANR	10140007	Identifier	npixels		10139852	0					
ANR	10140008	ExpressionStatement	op = tif -> tif_rawcp	619:1:17922:17941	10139852	17	True				
ANR	10140009	AssignmentExpression	op = tif -> tif_rawcp		10139852	0		=			
ANR	10140010	Identifier	op		10139852	0					
ANR	10140011	PtrMemberAccess	tif -> tif_rawcp		10139852	1					
ANR	10140012	Identifier	tif		10139852	0					
ANR	10140013	Identifier	tif_rawcp		10139852	1					
ANR	10140014	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	620:1:17944:17987	10139852	18	True				
ANR	10140015	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		10139852	0		=			
ANR	10140016	Identifier	occ		10139852	0					
ANR	10140017	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		10139852	1		-			
ANR	10140018	PtrMemberAccess	tif -> tif_rawdatasize		10139852	0					
ANR	10140019	Identifier	tif		10139852	0					
ANR	10140020	Identifier	tif_rawdatasize		10139852	1					
ANR	10140021	PtrMemberAccess	tif -> tif_rawcc		10139852	1					
ANR	10140022	Identifier	tif		10139852	0					
ANR	10140023	Identifier	tif_rawcc		10139852	1					
ANR	10140024	ForStatement	for ( shft = 4 * 8 ; ( shft -= 8 ) >= 0 ; )		10139852	19					
ANR	10140025	ForInit	shft = 4 * 8 ;	621:6:17995:18005	10139852	0	True				
ANR	10140026	AssignmentExpression	shft = 4 * 8		10139852	0		=			
ANR	10140027	Identifier	shft		10139852	0					
ANR	10140028	MultiplicativeExpression	4 * 8		10139852	1		*			
ANR	10140029	PrimaryExpression	4		10139852	0					
ANR	10140030	PrimaryExpression	8		10139852	1					
ANR	10140031	Condition	( shft -= 8 ) >= 0	621:18:18007:18022	10139852	1	True				
ANR	10140032	RelationalExpression	( shft -= 8 ) >= 0		10139852	0		>=			
ANR	10140033	AssignmentExpression	shft -= 8		10139852	0		-=			
ANR	10140034	Identifier	shft		10139852	0					
ANR	10140035	PrimaryExpression	8		10139852	1					
ANR	10140036	PrimaryExpression	0		10139852	1					
ANR	10140037	ForStatement	for ( i = 0 ; i < npixels ; i += rc )		10139852	2					
ANR	10140038	ForInit	i = 0 ;	622:7:18034:18039	10139852	0	True				
ANR	10140039	AssignmentExpression	i = 0		10139852	0		=			
ANR	10140040	Identifier	i		10139852	0					
ANR	10140041	PrimaryExpression	0		10139852	1					
ANR	10140042	Condition	i < npixels	622:14:18041:18051	10139852	1	True				
ANR	10140043	RelationalExpression	i < npixels		10139852	0		<			
ANR	10140044	Identifier	i		10139852	0					
ANR	10140045	Identifier	npixels		10139852	1					
ANR	10140046	AssignmentExpression	i += rc	622:27:18054:18060	10139852	2	True	+=			
ANR	10140047	Identifier	i		10139852	0					
ANR	10140048	Identifier	rc		10139852	1					
ANR	10140049	CompoundStatement		35:36:744:744	10139852	3					
ANR	10140050	IfStatement	if ( occ < 4 )		10139852	0					
ANR	10140051	Condition	occ < 4	623:7:18072:18078	10139852	0	True				
ANR	10140052	RelationalExpression	occ < 4		10139852	0		<			
ANR	10140053	Identifier	occ		10139852	0					
ANR	10140054	PrimaryExpression	4		10139852	1					
ANR	10140055	CompoundStatement		36:16:762:762	10139852	1					
ANR	10140056	ExpressionStatement	tif -> tif_rawcp = op	624:4:18087:18106	10139852	0	True				
ANR	10140057	AssignmentExpression	tif -> tif_rawcp = op		10139852	0		=			
ANR	10140058	PtrMemberAccess	tif -> tif_rawcp		10139852	0					
ANR	10140059	Identifier	tif		10139852	0					
ANR	10140060	Identifier	tif_rawcp		10139852	1					
ANR	10140061	Identifier	op		10139852	1					
ANR	10140062	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	625:4:18112:18155	10139852	1	True				
ANR	10140063	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		10139852	0		=			
ANR	10140064	PtrMemberAccess	tif -> tif_rawcc		10139852	0					
ANR	10140065	Identifier	tif		10139852	0					
ANR	10140066	Identifier	tif_rawcc		10139852	1					
ANR	10140067	AdditiveExpression	tif -> tif_rawdatasize - occ		10139852	1		-			
ANR	10140068	PtrMemberAccess	tif -> tif_rawdatasize		10139852	0					
ANR	10140069	Identifier	tif		10139852	0					
ANR	10140070	Identifier	tif_rawdatasize		10139852	1					
ANR	10140071	Identifier	occ		10139852	1					
ANR	10140072	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		10139852	2					
ANR	10140073	Condition	! TIFFFlushData1 ( tif )	626:8:18165:18184	10139852	0	True				
ANR	10140074	UnaryOperationExpression	! TIFFFlushData1 ( tif )		10139852	0					
ANR	10140075	UnaryOperator	!		10139852	0					
ANR	10140076	CallExpression	TIFFFlushData1 ( tif )		10139852	1					
ANR	10140077	Callee	TIFFFlushData1		10139852	0					
ANR	10140078	Identifier	TIFFFlushData1		10139852	0					
ANR	10140079	ArgumentList	tif		10139852	1					
ANR	10140080	Argument	tif		10139852	0					
ANR	10140081	Identifier	tif		10139852	0					
ANR	10140082	ReturnStatement	return ( 0 ) ;	627:5:18192:18202	10139852	1	True				
ANR	10140083	PrimaryExpression	0		10139852	0					
ANR	10140084	ExpressionStatement	op = tif -> tif_rawcp	628:4:18208:18227	10139852	3	True				
ANR	10140085	AssignmentExpression	op = tif -> tif_rawcp		10139852	0		=			
ANR	10140086	Identifier	op		10139852	0					
ANR	10140087	PtrMemberAccess	tif -> tif_rawcp		10139852	1					
ANR	10140088	Identifier	tif		10139852	0					
ANR	10140089	Identifier	tif_rawcp		10139852	1					
ANR	10140090	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	629:4:18233:18276	10139852	4	True				
ANR	10140091	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		10139852	0		=			
ANR	10140092	Identifier	occ		10139852	0					
ANR	10140093	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		10139852	1		-			
ANR	10140094	PtrMemberAccess	tif -> tif_rawdatasize		10139852	0					
ANR	10140095	Identifier	tif		10139852	0					
ANR	10140096	Identifier	tif_rawdatasize		10139852	1					
ANR	10140097	PtrMemberAccess	tif -> tif_rawcc		10139852	1					
ANR	10140098	Identifier	tif		10139852	0					
ANR	10140099	Identifier	tif_rawcc		10139852	1					
ANR	10140100	ExpressionStatement	mask = 0xff << shft	631:3:18286:18305	10139852	1	True				
ANR	10140101	AssignmentExpression	mask = 0xff << shft		10139852	0		=			
ANR	10140102	Identifier	mask		10139852	0					
ANR	10140103	ShiftExpression	0xff << shft		10139852	1		<<			
ANR	10140104	PrimaryExpression	0xff		10139852	0					
ANR	10140105	Identifier	shft		10139852	1					
ANR	10140106	ForStatement	for ( beg = i ; beg < npixels ; beg += rc )		10139852	2					
ANR	10140107	ForInit	beg = i ;	632:8:18336:18343	10139852	0	True				
ANR	10140108	AssignmentExpression	beg = i		10139852	0		=			
ANR	10140109	Identifier	beg		10139852	0					
ANR	10140110	Identifier	i		10139852	1					
ANR	10140111	Condition	beg < npixels	632:17:18345:18357	10139852	1	True				
ANR	10140112	RelationalExpression	beg < npixels		10139852	0		<			
ANR	10140113	Identifier	beg		10139852	0					
ANR	10140114	Identifier	npixels		10139852	1					
ANR	10140115	AssignmentExpression	beg += rc	632:32:18360:18368	10139852	2	True	+=			
ANR	10140116	Identifier	beg		10139852	0					
ANR	10140117	Identifier	rc		10139852	1					
ANR	10140118	CompoundStatement		45:43:1052:1052	10139852	3					
ANR	10140119	ExpressionStatement	b = tp [ beg ] & mask	633:4:18377:18395	10139852	0	True				
ANR	10140120	AssignmentExpression	b = tp [ beg ] & mask		10139852	0		=			
ANR	10140121	Identifier	b		10139852	0					
ANR	10140122	BitAndExpression	tp [ beg ] & mask		10139852	1		&			
ANR	10140123	ArrayIndexing	tp [ beg ]		10139852	0					
ANR	10140124	Identifier	tp		10139852	0					
ANR	10140125	Identifier	beg		10139852	1					
ANR	10140126	Identifier	mask		10139852	1					
ANR	10140127	ExpressionStatement	rc = 1	634:4:18401:18407	10139852	1	True				
ANR	10140128	AssignmentExpression	rc = 1		10139852	0		=			
ANR	10140129	Identifier	rc		10139852	0					
ANR	10140130	PrimaryExpression	1		10139852	1					
ANR	10140131	WhileStatement	while ( rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b )		10139852	2					
ANR	10140132	Condition	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b	635:11:18420:18483	10139852	0	True				
ANR	10140133	AndExpression	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		10139852	0		&&			
ANR	10140134	RelationalExpression	rc < 127 + 2		10139852	0		<			
ANR	10140135	Identifier	rc		10139852	0					
ANR	10140136	AdditiveExpression	127 + 2		10139852	1		+			
ANR	10140137	PrimaryExpression	127		10139852	0					
ANR	10140138	PrimaryExpression	2		10139852	1					
ANR	10140139	AndExpression	beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		10139852	1		&&			
ANR	10140140	RelationalExpression	beg + rc < npixels		10139852	0		<			
ANR	10140141	AdditiveExpression	beg + rc		10139852	0		+			
ANR	10140142	Identifier	beg		10139852	0					
ANR	10140143	Identifier	rc		10139852	1					
ANR	10140144	Identifier	npixels		10139852	1					
ANR	10140145	EqualityExpression	( tp [ beg + rc ] & mask ) == b		10139852	1		==			
ANR	10140146	BitAndExpression	tp [ beg + rc ] & mask		10139852	0		&			
ANR	10140147	ArrayIndexing	tp [ beg + rc ]		10139852	0					
ANR	10140148	Identifier	tp		10139852	0					
ANR	10140149	AdditiveExpression	beg + rc		10139852	1		+			
ANR	10140150	Identifier	beg		10139852	0					
ANR	10140151	Identifier	rc		10139852	1					
ANR	10140152	Identifier	mask		10139852	1					
ANR	10140153	Identifier	b		10139852	1					
ANR	10140154	ExpressionStatement	rc ++	637:5:18491:18495	10139852	1	True				
ANR	10140155	PostIncDecOperationExpression	rc ++		10139852	0					
ANR	10140156	Identifier	rc		10139852	0					
ANR	10140157	IncDec	++		10139852	1					
ANR	10140158	IfStatement	if ( rc >= MINRUN )		10139852	3					
ANR	10140159	Condition	rc >= MINRUN	638:8:18505:18516	10139852	0	True				
ANR	10140160	RelationalExpression	rc >= MINRUN		10139852	0		>=			
ANR	10140161	Identifier	rc		10139852	0					
ANR	10140162	Identifier	MINRUN		10139852	1					
ANR	10140163	BreakStatement	break ;	639:5:18524:18529	10139852	1	True				
ANR	10140164	IfStatement	if ( beg - i > 1 && beg - i < MINRUN )		10139852	3					
ANR	10140165	Condition	beg - i > 1 && beg - i < MINRUN	641:7:18562:18588	10139852	0	True				
ANR	10140166	AndExpression	beg - i > 1 && beg - i < MINRUN		10139852	0		&&			
ANR	10140167	RelationalExpression	beg - i > 1		10139852	0		>			
ANR	10140168	AdditiveExpression	beg - i		10139852	0		-			
ANR	10140169	Identifier	beg		10139852	0					
ANR	10140170	Identifier	i		10139852	1					
ANR	10140171	PrimaryExpression	1		10139852	1					
ANR	10140172	RelationalExpression	beg - i < MINRUN		10139852	1		<			
ANR	10140173	AdditiveExpression	beg - i		10139852	0		-			
ANR	10140174	Identifier	beg		10139852	0					
ANR	10140175	Identifier	i		10139852	1					
ANR	10140176	Identifier	MINRUN		10139852	1					
ANR	10140177	CompoundStatement		54:36:1272:1272	10139852	1					
ANR	10140178	ExpressionStatement	b = tp [ i ] & mask	642:4:18597:18613	10139852	0	True				
ANR	10140179	AssignmentExpression	b = tp [ i ] & mask		10139852	0		=			
ANR	10140180	Identifier	b		10139852	0					
ANR	10140181	BitAndExpression	tp [ i ] & mask		10139852	1		&			
ANR	10140182	ArrayIndexing	tp [ i ]		10139852	0					
ANR	10140183	Identifier	tp		10139852	0					
ANR	10140184	Identifier	i		10139852	1					
ANR	10140185	Identifier	mask		10139852	1					
ANR	10140186	ExpressionStatement	j = i + 1	643:4:18641:18648	10139852	1	True				
ANR	10140187	AssignmentExpression	j = i + 1		10139852	0		=			
ANR	10140188	Identifier	j		10139852	0					
ANR	10140189	AdditiveExpression	i + 1		10139852	1		+			
ANR	10140190	Identifier	i		10139852	0					
ANR	10140191	PrimaryExpression	1		10139852	1					
ANR	10140192	WhileStatement	while ( ( tp [ j ++ ] & mask ) == b )		10139852	2					
ANR	10140193	Condition	( tp [ j ++ ] & mask ) == b	644:11:18661:18681	10139852	0	True				
ANR	10140194	EqualityExpression	( tp [ j ++ ] & mask ) == b		10139852	0		==			
ANR	10140195	BitAndExpression	tp [ j ++ ] & mask		10139852	0		&			
ANR	10140196	ArrayIndexing	tp [ j ++ ]		10139852	0					
ANR	10140197	Identifier	tp		10139852	0					
ANR	10140198	PostIncDecOperationExpression	j ++		10139852	1					
ANR	10140199	Identifier	j		10139852	0					
ANR	10140200	IncDec	++		10139852	1					
ANR	10140201	Identifier	mask		10139852	1					
ANR	10140202	Identifier	b		10139852	1					
ANR	10140203	IfStatement	if ( j == beg )		10139852	1					
ANR	10140204	Condition	j == beg	645:9:18693:18700	10139852	0	True				
ANR	10140205	EqualityExpression	j == beg		10139852	0		==			
ANR	10140206	Identifier	j		10139852	0					
ANR	10140207	Identifier	beg		10139852	1					
ANR	10140208	CompoundStatement		58:19:1384:1384	10139852	1					
ANR	10140209	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + j - i )	646:6:18711:18737	10139852	0	True				
ANR	10140210	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + j - i )		10139852	0		=			
ANR	10140211	UnaryOperationExpression	* op ++		10139852	0					
ANR	10140212	UnaryOperator	*		10139852	0					
ANR	10140213	PostIncDecOperationExpression	op ++		10139852	1					
ANR	10140214	Identifier	op		10139852	0					
ANR	10140215	IncDec	++		10139852	1					
ANR	10140216	CastExpression	( uint8 ) ( 128 - 2 + j - i )		10139852	1					
ANR	10140217	CastTarget	uint8		10139852	0					
ANR	10140218	AdditiveExpression	128 - 2 + j - i		10139852	1		-			
ANR	10140219	PrimaryExpression	128		10139852	0					
ANR	10140220	AdditiveExpression	2 + j - i		10139852	1		+			
ANR	10140221	PrimaryExpression	2		10139852	0					
ANR	10140222	AdditiveExpression	j - i		10139852	1		-			
ANR	10140223	Identifier	j		10139852	0					
ANR	10140224	Identifier	i		10139852	1					
ANR	10140225	ExpressionStatement	* op ++ = ( uint8 ) ( b >> shft )	647:6:18745:18771	10139852	1	True				
ANR	10140226	AssignmentExpression	* op ++ = ( uint8 ) ( b >> shft )		10139852	0		=			
ANR	10140227	UnaryOperationExpression	* op ++		10139852	0					
ANR	10140228	UnaryOperator	*		10139852	0					
ANR	10140229	PostIncDecOperationExpression	op ++		10139852	1					
ANR	10140230	Identifier	op		10139852	0					
ANR	10140231	IncDec	++		10139852	1					
ANR	10140232	CastExpression	( uint8 ) ( b >> shft )		10139852	1					
ANR	10140233	CastTarget	uint8		10139852	0					
ANR	10140234	ShiftExpression	b >> shft		10139852	1		>>			
ANR	10140235	Identifier	b		10139852	0					
ANR	10140236	Identifier	shft		10139852	1					
ANR	10140237	ExpressionStatement	occ -= 2	648:6:18779:18787	10139852	2	True				
ANR	10140238	AssignmentExpression	occ -= 2		10139852	0		-=			
ANR	10140239	Identifier	occ		10139852	0					
ANR	10140240	PrimaryExpression	2		10139852	1					
ANR	10140241	ExpressionStatement	i = beg	649:6:18795:18802	10139852	3	True				
ANR	10140242	AssignmentExpression	i = beg		10139852	0		=			
ANR	10140243	Identifier	i		10139852	0					
ANR	10140244	Identifier	beg		10139852	1					
ANR	10140245	BreakStatement	break ;	650:6:18810:18815	10139852	4	True				
ANR	10140246	WhileStatement	while ( i < beg )		10139852	4					
ANR	10140247	Condition	i < beg	653:10:18839:18845	10139852	0	True				
ANR	10140248	RelationalExpression	i < beg		10139852	0		<			
ANR	10140249	Identifier	i		10139852	0					
ANR	10140250	Identifier	beg		10139852	1					
ANR	10140251	CompoundStatement		66:19:1529:1529	10139852	1					
ANR	10140252	IfStatement	if ( ( j = beg - i ) > 127 )		10139852	0					
ANR	10140253	Condition	( j = beg - i ) > 127	654:8:18883:18899	10139852	0	True				
ANR	10140254	RelationalExpression	( j = beg - i ) > 127		10139852	0		>			
ANR	10140255	AssignmentExpression	j = beg - i		10139852	0		=			
ANR	10140256	Identifier	j		10139852	0					
ANR	10140257	AdditiveExpression	beg - i		10139852	1		-			
ANR	10140258	Identifier	beg		10139852	0					
ANR	10140259	Identifier	i		10139852	1					
ANR	10140260	PrimaryExpression	127		10139852	1					
ANR	10140261	ExpressionStatement	j = 127	654:27:18902:18909	10139852	1	True				
ANR	10140262	AssignmentExpression	j = 127		10139852	0		=			
ANR	10140263	Identifier	j		10139852	0					
ANR	10140264	PrimaryExpression	127		10139852	1					
ANR	10140265	IfStatement	if ( occ < j + 3 )		10139852	1					
ANR	10140266	Condition	occ < j + 3	655:8:18919:18927	10139852	0	True				
ANR	10140267	RelationalExpression	occ < j + 3		10139852	0		<			
ANR	10140268	Identifier	occ		10139852	0					
ANR	10140269	AdditiveExpression	j + 3		10139852	1		+			
ANR	10140270	Identifier	j		10139852	0					
ANR	10140271	PrimaryExpression	3		10139852	1					
ANR	10140272	CompoundStatement		68:19:1611:1611	10139852	1					
ANR	10140273	ExpressionStatement	tif -> tif_rawcp = op	656:5:18937:18956	10139852	0	True				
ANR	10140274	AssignmentExpression	tif -> tif_rawcp = op		10139852	0		=			
ANR	10140275	PtrMemberAccess	tif -> tif_rawcp		10139852	0					
ANR	10140276	Identifier	tif		10139852	0					
ANR	10140277	Identifier	tif_rawcp		10139852	1					
ANR	10140278	Identifier	op		10139852	1					
ANR	10140279	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	657:5:18963:19006	10139852	1	True				
ANR	10140280	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		10139852	0		=			
ANR	10140281	PtrMemberAccess	tif -> tif_rawcc		10139852	0					
ANR	10140282	Identifier	tif		10139852	0					
ANR	10140283	Identifier	tif_rawcc		10139852	1					
ANR	10140284	AdditiveExpression	tif -> tif_rawdatasize - occ		10139852	1		-			
ANR	10140285	PtrMemberAccess	tif -> tif_rawdatasize		10139852	0					
ANR	10140286	Identifier	tif		10139852	0					
ANR	10140287	Identifier	tif_rawdatasize		10139852	1					
ANR	10140288	Identifier	occ		10139852	1					
ANR	10140289	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		10139852	2					
ANR	10140290	Condition	! TIFFFlushData1 ( tif )	658:9:19017:19036	10139852	0	True				
ANR	10140291	UnaryOperationExpression	! TIFFFlushData1 ( tif )		10139852	0					
ANR	10140292	UnaryOperator	!		10139852	0					
ANR	10140293	CallExpression	TIFFFlushData1 ( tif )		10139852	1					
ANR	10140294	Callee	TIFFFlushData1		10139852	0					
ANR	10140295	Identifier	TIFFFlushData1		10139852	0					
ANR	10140296	ArgumentList	tif		10139852	1					
ANR	10140297	Argument	tif		10139852	0					
ANR	10140298	Identifier	tif		10139852	0					
ANR	10140299	ReturnStatement	return ( 0 ) ;	659:6:19045:19055	10139852	1	True				
ANR	10140300	PrimaryExpression	0		10139852	0					
ANR	10140301	ExpressionStatement	op = tif -> tif_rawcp	660:5:19062:19081	10139852	3	True				
ANR	10140302	AssignmentExpression	op = tif -> tif_rawcp		10139852	0		=			
ANR	10140303	Identifier	op		10139852	0					
ANR	10140304	PtrMemberAccess	tif -> tif_rawcp		10139852	1					
ANR	10140305	Identifier	tif		10139852	0					
ANR	10140306	Identifier	tif_rawcp		10139852	1					
ANR	10140307	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	661:5:19088:19131	10139852	4	True				
ANR	10140308	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		10139852	0		=			
ANR	10140309	Identifier	occ		10139852	0					
ANR	10140310	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		10139852	1		-			
ANR	10140311	PtrMemberAccess	tif -> tif_rawdatasize		10139852	0					
ANR	10140312	Identifier	tif		10139852	0					
ANR	10140313	Identifier	tif_rawdatasize		10139852	1					
ANR	10140314	PtrMemberAccess	tif -> tif_rawcc		10139852	1					
ANR	10140315	Identifier	tif		10139852	0					
ANR	10140316	Identifier	tif_rawcc		10139852	1					
ANR	10140317	ExpressionStatement	* op ++ = ( uint8 ) j	663:4:19143:19160	10139852	2	True				
ANR	10140318	AssignmentExpression	* op ++ = ( uint8 ) j		10139852	0		=			
ANR	10140319	UnaryOperationExpression	* op ++		10139852	0					
ANR	10140320	UnaryOperator	*		10139852	0					
ANR	10140321	PostIncDecOperationExpression	op ++		10139852	1					
ANR	10140322	Identifier	op		10139852	0					
ANR	10140323	IncDec	++		10139852	1					
ANR	10140324	CastExpression	( uint8 ) j		10139852	1					
ANR	10140325	CastTarget	uint8		10139852	0					
ANR	10140326	Identifier	j		10139852	1					
ANR	10140327	ExpressionStatement	occ --	663:23:19162:19167	10139852	3	True				
ANR	10140328	PostIncDecOperationExpression	occ --		10139852	0					
ANR	10140329	Identifier	occ		10139852	0					
ANR	10140330	IncDec	--		10139852	1					
ANR	10140331	WhileStatement	while ( j -- )		10139852	4					
ANR	10140332	Condition	j --	664:11:19180:19182	10139852	0	True				
ANR	10140333	PostIncDecOperationExpression	j --		10139852	0					
ANR	10140334	Identifier	j		10139852	0					
ANR	10140335	IncDec	--		10139852	1					
ANR	10140336	CompoundStatement		77:16:1866:1866	10139852	1					
ANR	10140337	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )	665:5:19192:19231	10139852	0	True				
ANR	10140338	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		10139852	0		=			
ANR	10140339	UnaryOperationExpression	* op ++		10139852	0					
ANR	10140340	UnaryOperator	*		10139852	0					
ANR	10140341	PostIncDecOperationExpression	op ++		10139852	1					
ANR	10140342	Identifier	op		10139852	0					
ANR	10140343	IncDec	++		10139852	1					
ANR	10140344	CastExpression	( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		10139852	1					
ANR	10140345	CastTarget	uint8		10139852	0					
ANR	10140346	BitAndExpression	tp [ i ++ ] >> shft & 0xff		10139852	1		&			
ANR	10140347	ShiftExpression	tp [ i ++ ] >> shft		10139852	0		>>			
ANR	10140348	ArrayIndexing	tp [ i ++ ]		10139852	0					
ANR	10140349	Identifier	tp		10139852	0					
ANR	10140350	PostIncDecOperationExpression	i ++		10139852	1					
ANR	10140351	Identifier	i		10139852	0					
ANR	10140352	IncDec	++		10139852	1					
ANR	10140353	Identifier	shft		10139852	1					
ANR	10140354	PrimaryExpression	0xff		10139852	1					
ANR	10140355	ExpressionStatement	occ --	666:5:19238:19243	10139852	1	True				
ANR	10140356	PostIncDecOperationExpression	occ --		10139852	0					
ANR	10140357	Identifier	occ		10139852	0					
ANR	10140358	IncDec	--		10139852	1					
ANR	10140359	IfStatement	if ( rc >= MINRUN )		10139852	5					
ANR	10140360	Condition	rc >= MINRUN	669:7:19263:19274	10139852	0	True				
ANR	10140361	RelationalExpression	rc >= MINRUN		10139852	0		>=			
ANR	10140362	Identifier	rc		10139852	0					
ANR	10140363	Identifier	MINRUN		10139852	1					
ANR	10140364	CompoundStatement		82:21:1958:1958	10139852	1					
ANR	10140365	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + rc )	670:4:19304:19330	10139852	0	True				
ANR	10140366	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + rc )		10139852	0		=			
ANR	10140367	UnaryOperationExpression	* op ++		10139852	0					
ANR	10140368	UnaryOperator	*		10139852	0					
ANR	10140369	PostIncDecOperationExpression	op ++		10139852	1					
ANR	10140370	Identifier	op		10139852	0					
ANR	10140371	IncDec	++		10139852	1					
ANR	10140372	CastExpression	( uint8 ) ( 128 - 2 + rc )		10139852	1					
ANR	10140373	CastTarget	uint8		10139852	0					
ANR	10140374	AdditiveExpression	128 - 2 + rc		10139852	1		-			
ANR	10140375	PrimaryExpression	128		10139852	0					
ANR	10140376	AdditiveExpression	2 + rc		10139852	1		+			
ANR	10140377	PrimaryExpression	2		10139852	0					
ANR	10140378	Identifier	rc		10139852	1					
ANR	10140379	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )	671:4:19336:19375	10139852	1	True				
ANR	10140380	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )		10139852	0		=			
ANR	10140381	UnaryOperationExpression	* op ++		10139852	0					
ANR	10140382	UnaryOperator	*		10139852	0					
ANR	10140383	PostIncDecOperationExpression	op ++		10139852	1					
ANR	10140384	Identifier	op		10139852	0					
ANR	10140385	IncDec	++		10139852	1					
ANR	10140386	CastExpression	( uint8 ) ( tp [ beg ] >> shft & 0xff )		10139852	1					
ANR	10140387	CastTarget	uint8		10139852	0					
ANR	10140388	BitAndExpression	tp [ beg ] >> shft & 0xff		10139852	1		&			
ANR	10140389	ShiftExpression	tp [ beg ] >> shft		10139852	0		>>			
ANR	10140390	ArrayIndexing	tp [ beg ]		10139852	0					
ANR	10140391	Identifier	tp		10139852	0					
ANR	10140392	Identifier	beg		10139852	1					
ANR	10140393	Identifier	shft		10139852	1					
ANR	10140394	PrimaryExpression	0xff		10139852	1					
ANR	10140395	ExpressionStatement	occ -= 2	672:4:19381:19389	10139852	2	True				
ANR	10140396	AssignmentExpression	occ -= 2		10139852	0		-=			
ANR	10140397	Identifier	occ		10139852	0					
ANR	10140398	PrimaryExpression	2		10139852	1					
ANR	10140399	ElseStatement	else		10139852	0					
ANR	10140400	ExpressionStatement	rc = 0	674:4:19405:19411	10139852	0	True				
ANR	10140401	AssignmentExpression	rc = 0		10139852	0		=			
ANR	10140402	Identifier	rc		10139852	0					
ANR	10140403	PrimaryExpression	0		10139852	1					
ANR	10140404	ExpressionStatement	tif -> tif_rawcp = op	676:1:19418:19437	10139852	20	True				
ANR	10140405	AssignmentExpression	tif -> tif_rawcp = op		10139852	0		=			
ANR	10140406	PtrMemberAccess	tif -> tif_rawcp		10139852	0					
ANR	10140407	Identifier	tif		10139852	0					
ANR	10140408	Identifier	tif_rawcp		10139852	1					
ANR	10140409	Identifier	op		10139852	1					
ANR	10140410	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	677:1:19440:19483	10139852	21	True				
ANR	10140411	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		10139852	0		=			
ANR	10140412	PtrMemberAccess	tif -> tif_rawcc		10139852	0					
ANR	10140413	Identifier	tif		10139852	0					
ANR	10140414	Identifier	tif_rawcc		10139852	1					
ANR	10140415	AdditiveExpression	tif -> tif_rawdatasize - occ		10139852	1		-			
ANR	10140416	PtrMemberAccess	tif -> tif_rawdatasize		10139852	0					
ANR	10140417	Identifier	tif		10139852	0					
ANR	10140418	Identifier	tif_rawdatasize		10139852	1					
ANR	10140419	Identifier	occ		10139852	1					
ANR	10140420	ReturnStatement	return ( 1 ) ;	679:1:19487:19497	10139852	22	True				
ANR	10140421	PrimaryExpression	1		10139852	0					
ANR	10140422	ReturnType	static int		10139852	1					
ANR	10140423	Identifier	LogLuvEncode32		10139852	2					
ANR	10140424	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		10139852	3					
ANR	10140425	Parameter	TIFF * tif	587:15:17273:17281	10139852	0	True				
ANR	10140426	ParameterType	TIFF *		10139852	0					
ANR	10140427	Identifier	tif		10139852	1					
ANR	10140428	Parameter	uint8 * bp	587:26:17284:17292	10139852	1	True				
ANR	10140429	ParameterType	uint8 *		10139852	0					
ANR	10140430	Identifier	bp		10139852	1					
ANR	10140431	Parameter	tmsize_t cc	587:37:17295:17305	10139852	2	True				
ANR	10140432	ParameterType	tmsize_t		10139852	0					
ANR	10140433	Identifier	cc		10139852	1					
ANR	10140434	Parameter	uint16 s	587:50:17308:17315	10139852	3	True				
ANR	10140435	ParameterType	uint16		10139852	0					
ANR	10140436	Identifier	s		10139852	1					
ANR	10140437	CFGEntryNode	ENTRY		10139852		True				
ANR	10140438	CFGExitNode	EXIT		10139852		True				
ANR	10140439	Symbol	* sp		10139852						
ANR	10140440	Symbol	beg		10139852						
ANR	10140441	Symbol	sp -> user_datafmt		10139852						
ANR	10140442	Symbol	SGILOGDATAFMT_RAW		10139852						
ANR	10140443	Symbol	bp		10139852						
ANR	10140444	Symbol	occ		10139852						
ANR	10140445	Symbol	tif		10139852						
ANR	10140446	Symbol	npixels		10139852						
ANR	10140447	Symbol	sp -> tbuflen		10139852						
ANR	10140448	Symbol	tif -> tif_rawcc		10139852						
ANR	10140449	Symbol	* beg		10139852						
ANR	10140450	Symbol	sp -> pixel_size		10139852						
ANR	10140451	Symbol	TIFFFlushData1		10139852						
ANR	10140452	Symbol	shft		10139852						
ANR	10140453	Symbol	sp -> tbuf		10139852						
ANR	10140454	Symbol	sp -> tfunc		10139852						
ANR	10140455	Symbol	sp		10139852						
ANR	10140456	Symbol	mask		10139852						
ANR	10140457	Symbol	cc		10139852						
ANR	10140458	Symbol	EncoderState		10139852						
ANR	10140459	Symbol	op		10139852						
ANR	10140460	Symbol	* tp		10139852						
ANR	10140461	Symbol	b		10139852						
ANR	10140462	Symbol	NULL		10139852						
ANR	10140463	Symbol	module		10139852						
ANR	10140464	Symbol	i		10139852						
ANR	10140465	Symbol	j		10139852						
ANR	10140466	Symbol	tif -> tif_rawcp		10139852						
ANR	10140467	Symbol	tif -> tif_clientdata		10139852						
ANR	10140468	Symbol	rc		10139852						
ANR	10140469	Symbol	s		10139852						
ANR	10140470	Symbol	* i		10139852						
ANR	10140471	Symbol	tif -> tif_rawdatasize		10139852						
ANR	10140472	Symbol	* rc		10139852						
ANR	10140473	Symbol	MINRUN		10139852						
ANR	10140474	Symbol	* op ++		10139852						
ANR	10140475	Symbol	* tif		10139852						
ANR	10140476	Symbol	tp		10139852						
ANR	10140477	Function	LogLuvEncodeStrip	686:0:19610:19924							
ANR	10140478	FunctionDef	"LogLuvEncodeStrip (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		10140477	0					
ANR	10140479	CompoundStatement		688:0:19684:19924	10140477	0					
ANR	10140480	IdentifierDeclStatement	tmsize_t rowlen = TIFFScanlineSize ( tif ) ;	689:1:19687:19726	10140477	0	True				
ANR	10140481	IdentifierDecl	rowlen = TIFFScanlineSize ( tif )		10140477	0					
ANR	10140482	IdentifierDeclType	tmsize_t		10140477	0					
ANR	10140483	Identifier	rowlen		10140477	1					
ANR	10140484	AssignmentExpression	rowlen = TIFFScanlineSize ( tif )		10140477	2		=			
ANR	10140485	Identifier	rowlen		10140477	0					
ANR	10140486	CallExpression	TIFFScanlineSize ( tif )		10140477	1					
ANR	10140487	Callee	TIFFScanlineSize		10140477	0					
ANR	10140488	Identifier	TIFFScanlineSize		10140477	0					
ANR	10140489	ArgumentList	tif		10140477	1					
ANR	10140490	Argument	tif		10140477	0					
ANR	10140491	Identifier	tif		10140477	0					
ANR	10140492	IfStatement	if ( rowlen == 0 )		10140477	1					
ANR	10140493	Condition	rowlen == 0	691:12:19741:19751	10140477	0	True				
ANR	10140494	EqualityExpression	rowlen == 0		10140477	0		==			
ANR	10140495	Identifier	rowlen		10140477	0					
ANR	10140496	PrimaryExpression	0		10140477	1					
ANR	10140497	ReturnStatement	return 0 ;	692:16:19770:19778	10140477	1	True				
ANR	10140498	PrimaryExpression	0		10140477	0					
ANR	10140499	ExpressionStatement	assert ( cc % rowlen == 0 )	694:1:19782:19804	10140477	2	True				
ANR	10140500	CallExpression	assert ( cc % rowlen == 0 )		10140477	0					
ANR	10140501	Callee	assert		10140477	0					
ANR	10140502	Identifier	assert		10140477	0					
ANR	10140503	ArgumentList	cc % rowlen == 0		10140477	1					
ANR	10140504	Argument	cc % rowlen == 0		10140477	0					
ANR	10140505	EqualityExpression	cc % rowlen == 0		10140477	0		==			
ANR	10140506	MultiplicativeExpression	cc % rowlen		10140477	0		%			
ANR	10140507	Identifier	cc		10140477	0					
ANR	10140508	Identifier	rowlen		10140477	1					
ANR	10140509	PrimaryExpression	0		10140477	1					
ANR	10140510	WhileStatement	"while ( cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1 )"		10140477	3					
ANR	10140511	Condition	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"	695:8:19814:19865	10140477	0	True				
ANR	10140512	AndExpression	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		10140477	0		&&			
ANR	10140513	Identifier	cc		10140477	0					
ANR	10140514	EqualityExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		10140477	1		==			
ANR	10140515	CallExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s )"		10140477	0					
ANR	10140516	Callee	* tif -> tif_encoderow		10140477	0					
ANR	10140517	UnaryOperationExpression	* tif -> tif_encoderow		10140477	0					
ANR	10140518	UnaryOperator	*		10140477	0					
ANR	10140519	PtrMemberAccess	tif -> tif_encoderow		10140477	1					
ANR	10140520	Identifier	tif		10140477	0					
ANR	10140521	Identifier	tif_encoderow		10140477	1					
ANR	10140522	ArgumentList	tif		10140477	1					
ANR	10140523	Argument	tif		10140477	0					
ANR	10140524	Identifier	tif		10140477	0					
ANR	10140525	Argument	bp		10140477	1					
ANR	10140526	Identifier	bp		10140477	0					
ANR	10140527	Argument	rowlen		10140477	2					
ANR	10140528	Identifier	rowlen		10140477	0					
ANR	10140529	Argument	s		10140477	3					
ANR	10140530	Identifier	s		10140477	0					
ANR	10140531	PrimaryExpression	1		10140477	1					
ANR	10140532	CompoundStatement		8:62:183:183	10140477	1					
ANR	10140533	ExpressionStatement	bp += rowlen	696:2:19872:19884	10140477	0	True				
ANR	10140534	AssignmentExpression	bp += rowlen		10140477	0		+=			
ANR	10140535	Identifier	bp		10140477	0					
ANR	10140536	Identifier	rowlen		10140477	1					
ANR	10140537	ExpressionStatement	cc -= rowlen	697:2:19888:19900	10140477	1	True				
ANR	10140538	AssignmentExpression	cc -= rowlen		10140477	0		-=			
ANR	10140539	Identifier	cc		10140477	0					
ANR	10140540	Identifier	rowlen		10140477	1					
ANR	10140541	ReturnStatement	return ( cc == 0 ) ;	699:1:19906:19922	10140477	4	True				
ANR	10140542	EqualityExpression	cc == 0		10140477	0		==			
ANR	10140543	Identifier	cc		10140477	0					
ANR	10140544	PrimaryExpression	0		10140477	1					
ANR	10140545	ReturnType	static int		10140477	1					
ANR	10140546	Identifier	LogLuvEncodeStrip		10140477	2					
ANR	10140547	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		10140477	3					
ANR	10140548	Parameter	TIFF * tif	687:18:19639:19647	10140477	0	True				
ANR	10140549	ParameterType	TIFF *		10140477	0					
ANR	10140550	Identifier	tif		10140477	1					
ANR	10140551	Parameter	uint8 * bp	687:29:19650:19658	10140477	1	True				
ANR	10140552	ParameterType	uint8 *		10140477	0					
ANR	10140553	Identifier	bp		10140477	1					
ANR	10140554	Parameter	tmsize_t cc	687:40:19661:19671	10140477	2	True				
ANR	10140555	ParameterType	tmsize_t		10140477	0					
ANR	10140556	Identifier	cc		10140477	1					
ANR	10140557	Parameter	uint16 s	687:53:19674:19681	10140477	3	True				
ANR	10140558	ParameterType	uint16		10140477	0					
ANR	10140559	Identifier	s		10140477	1					
ANR	10140560	CFGEntryNode	ENTRY		10140477		True				
ANR	10140561	CFGExitNode	EXIT		10140477		True				
ANR	10140562	Symbol	tif		10140477						
ANR	10140563	Symbol	cc		10140477						
ANR	10140564	Symbol	TIFFScanlineSize		10140477						
ANR	10140565	Symbol	tif -> tif_encoderow		10140477						
ANR	10140566	Symbol	s		10140477						
ANR	10140567	Symbol	* * tif		10140477						
ANR	10140568	Symbol	rowlen		10140477						
ANR	10140569	Symbol	* tif -> tif_encoderow		10140477						
ANR	10140570	Symbol	* tif		10140477						
ANR	10140571	Symbol	bp		10140477						
ANR	10140572	Function	LogLuvEncodeTile	706:0:20034:20346							
ANR	10140573	FunctionDef	"LogLuvEncodeTile (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		10140572	0					
ANR	10140574	CompoundStatement		708:0:20107:20346	10140572	0					
ANR	10140575	IdentifierDeclStatement	tmsize_t rowlen = TIFFTileRowSize ( tif ) ;	709:1:20110:20148	10140572	0	True				
ANR	10140576	IdentifierDecl	rowlen = TIFFTileRowSize ( tif )		10140572	0					
ANR	10140577	IdentifierDeclType	tmsize_t		10140572	0					
ANR	10140578	Identifier	rowlen		10140572	1					
ANR	10140579	AssignmentExpression	rowlen = TIFFTileRowSize ( tif )		10140572	2		=			
ANR	10140580	Identifier	rowlen		10140572	0					
ANR	10140581	CallExpression	TIFFTileRowSize ( tif )		10140572	1					
ANR	10140582	Callee	TIFFTileRowSize		10140572	0					
ANR	10140583	Identifier	TIFFTileRowSize		10140572	0					
ANR	10140584	ArgumentList	tif		10140572	1					
ANR	10140585	Argument	tif		10140572	0					
ANR	10140586	Identifier	tif		10140572	0					
ANR	10140587	IfStatement	if ( rowlen == 0 )		10140572	1					
ANR	10140588	Condition	rowlen == 0	711:12:20163:20173	10140572	0	True				
ANR	10140589	EqualityExpression	rowlen == 0		10140572	0		==			
ANR	10140590	Identifier	rowlen		10140572	0					
ANR	10140591	PrimaryExpression	0		10140572	1					
ANR	10140592	ReturnStatement	return 0 ;	712:16:20192:20200	10140572	1	True				
ANR	10140593	PrimaryExpression	0		10140572	0					
ANR	10140594	ExpressionStatement	assert ( cc % rowlen == 0 )	714:1:20204:20226	10140572	2	True				
ANR	10140595	CallExpression	assert ( cc % rowlen == 0 )		10140572	0					
ANR	10140596	Callee	assert		10140572	0					
ANR	10140597	Identifier	assert		10140572	0					
ANR	10140598	ArgumentList	cc % rowlen == 0		10140572	1					
ANR	10140599	Argument	cc % rowlen == 0		10140572	0					
ANR	10140600	EqualityExpression	cc % rowlen == 0		10140572	0		==			
ANR	10140601	MultiplicativeExpression	cc % rowlen		10140572	0		%			
ANR	10140602	Identifier	cc		10140572	0					
ANR	10140603	Identifier	rowlen		10140572	1					
ANR	10140604	PrimaryExpression	0		10140572	1					
ANR	10140605	WhileStatement	"while ( cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1 )"		10140572	3					
ANR	10140606	Condition	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"	715:8:20236:20287	10140572	0	True				
ANR	10140607	AndExpression	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		10140572	0		&&			
ANR	10140608	Identifier	cc		10140572	0					
ANR	10140609	EqualityExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		10140572	1		==			
ANR	10140610	CallExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s )"		10140572	0					
ANR	10140611	Callee	* tif -> tif_encoderow		10140572	0					
ANR	10140612	UnaryOperationExpression	* tif -> tif_encoderow		10140572	0					
ANR	10140613	UnaryOperator	*		10140572	0					
ANR	10140614	PtrMemberAccess	tif -> tif_encoderow		10140572	1					
ANR	10140615	Identifier	tif		10140572	0					
ANR	10140616	Identifier	tif_encoderow		10140572	1					
ANR	10140617	ArgumentList	tif		10140572	1					
ANR	10140618	Argument	tif		10140572	0					
ANR	10140619	Identifier	tif		10140572	0					
ANR	10140620	Argument	bp		10140572	1					
ANR	10140621	Identifier	bp		10140572	0					
ANR	10140622	Argument	rowlen		10140572	2					
ANR	10140623	Identifier	rowlen		10140572	0					
ANR	10140624	Argument	s		10140572	3					
ANR	10140625	Identifier	s		10140572	0					
ANR	10140626	PrimaryExpression	1		10140572	1					
ANR	10140627	CompoundStatement		8:62:182:182	10140572	1					
ANR	10140628	ExpressionStatement	bp += rowlen	716:2:20294:20306	10140572	0	True				
ANR	10140629	AssignmentExpression	bp += rowlen		10140572	0		+=			
ANR	10140630	Identifier	bp		10140572	0					
ANR	10140631	Identifier	rowlen		10140572	1					
ANR	10140632	ExpressionStatement	cc -= rowlen	717:2:20310:20322	10140572	1	True				
ANR	10140633	AssignmentExpression	cc -= rowlen		10140572	0		-=			
ANR	10140634	Identifier	cc		10140572	0					
ANR	10140635	Identifier	rowlen		10140572	1					
ANR	10140636	ReturnStatement	return ( cc == 0 ) ;	719:1:20328:20344	10140572	4	True				
ANR	10140637	EqualityExpression	cc == 0		10140572	0		==			
ANR	10140638	Identifier	cc		10140572	0					
ANR	10140639	PrimaryExpression	0		10140572	1					
ANR	10140640	ReturnType	static int		10140572	1					
ANR	10140641	Identifier	LogLuvEncodeTile		10140572	2					
ANR	10140642	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		10140572	3					
ANR	10140643	Parameter	TIFF * tif	707:17:20062:20070	10140572	0	True				
ANR	10140644	ParameterType	TIFF *		10140572	0					
ANR	10140645	Identifier	tif		10140572	1					
ANR	10140646	Parameter	uint8 * bp	707:28:20073:20081	10140572	1	True				
ANR	10140647	ParameterType	uint8 *		10140572	0					
ANR	10140648	Identifier	bp		10140572	1					
ANR	10140649	Parameter	tmsize_t cc	707:39:20084:20094	10140572	2	True				
ANR	10140650	ParameterType	tmsize_t		10140572	0					
ANR	10140651	Identifier	cc		10140572	1					
ANR	10140652	Parameter	uint16 s	707:52:20097:20104	10140572	3	True				
ANR	10140653	ParameterType	uint16		10140572	0					
ANR	10140654	Identifier	s		10140572	1					
ANR	10140655	CFGEntryNode	ENTRY		10140572		True				
ANR	10140656	CFGExitNode	EXIT		10140572		True				
ANR	10140657	Symbol	tif		10140572						
ANR	10140658	Symbol	cc		10140572						
ANR	10140659	Symbol	tif -> tif_encoderow		10140572						
ANR	10140660	Symbol	s		10140572						
ANR	10140661	Symbol	* * tif		10140572						
ANR	10140662	Symbol	rowlen		10140572						
ANR	10140663	Symbol	* tif -> tif_encoderow		10140572						
ANR	10140664	Symbol	TIFFTileRowSize		10140572						
ANR	10140665	Symbol	* tif		10140572						
ANR	10140666	Symbol	bp		10140572						
ANR	10140667	Function	LogL16toY	752:0:20972:21181							
ANR	10140668	FunctionDef	LogL16toY (int p16)		10140667	0					
ANR	10140669	CompoundStatement		754:0:21040:21181	10140667	0					
ANR	10140670	IdentifierDeclStatement	int Le = p16 & 0x7fff ;	755:1:21043:21064	10140667	0	True				
ANR	10140671	IdentifierDecl	Le = p16 & 0x7fff		10140667	0					
ANR	10140672	IdentifierDeclType	int		10140667	0					
ANR	10140673	Identifier	Le		10140667	1					
ANR	10140674	AssignmentExpression	Le = p16 & 0x7fff		10140667	2		=			
ANR	10140675	Identifier	Le		10140667	0					
ANR	10140676	BitAndExpression	p16 & 0x7fff		10140667	1		&			
ANR	10140677	Identifier	p16		10140667	0					
ANR	10140678	PrimaryExpression	0x7fff		10140667	1					
ANR	10140679	IdentifierDeclStatement	double Y ;	756:1:21067:21075	10140667	1	True				
ANR	10140680	IdentifierDecl	Y		10140667	0					
ANR	10140681	IdentifierDeclType	double		10140667	0					
ANR	10140682	Identifier	Y		10140667	1					
ANR	10140683	IfStatement	if ( ! Le )		10140667	2					
ANR	10140684	Condition	! Le	758:5:21083:21085	10140667	0	True				
ANR	10140685	UnaryOperationExpression	! Le		10140667	0					
ANR	10140686	UnaryOperator	!		10140667	0					
ANR	10140687	Identifier	Le		10140667	1					
ANR	10140688	ReturnStatement	return ( 0. ) ;	759:2:21090:21101	10140667	1	True				
ANR	10140689	PrimaryExpression	0.		10140667	0					
ANR	10140690	ExpressionStatement	Y = exp ( M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64. )	760:1:21104:21143	10140667	3	True				
ANR	10140691	AssignmentExpression	Y = exp ( M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64. )		10140667	0		=			
ANR	10140692	Identifier	Y		10140667	0					
ANR	10140693	CallExpression	exp ( M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64. )		10140667	1					
ANR	10140694	Callee	exp		10140667	0					
ANR	10140695	Identifier	exp		10140667	0					
ANR	10140696	ArgumentList	M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64.		10140667	1					
ANR	10140697	Argument	M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64.		10140667	0					
ANR	10140698	AdditiveExpression	M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64.		10140667	0		-			
ANR	10140699	MultiplicativeExpression	M_LN2 / 256. * ( Le + .5 )		10140667	0		/			
ANR	10140700	Identifier	M_LN2		10140667	0					
ANR	10140701	MultiplicativeExpression	256. * ( Le + .5 )		10140667	1		*			
ANR	10140702	PrimaryExpression	256.		10140667	0					
ANR	10140703	AdditiveExpression	Le + .5		10140667	1		+			
ANR	10140704	Identifier	Le		10140667	0					
ANR	10140705	PrimaryExpression	.5		10140667	1					
ANR	10140706	MultiplicativeExpression	M_LN2 * 64.		10140667	1		*			
ANR	10140707	Identifier	M_LN2		10140667	0					
ANR	10140708	PrimaryExpression	64.		10140667	1					
ANR	10140709	ReturnStatement	return ( ! ( p16 & 0x8000 ) ? Y : - Y ) ;	761:1:21146:21179	10140667	4	True				
ANR	10140710	ConditionalExpression	! ( p16 & 0x8000 ) ? Y : - Y		10140667	0					
ANR	10140711	Condition	! ( p16 & 0x8000 )		10140667	0					
ANR	10140712	UnaryOperationExpression	! ( p16 & 0x8000 )		10140667	0					
ANR	10140713	UnaryOperator	!		10140667	0					
ANR	10140714	BitAndExpression	p16 & 0x8000		10140667	1		&			
ANR	10140715	Identifier	p16		10140667	0					
ANR	10140716	PrimaryExpression	0x8000		10140667	1					
ANR	10140717	Identifier	Y		10140667	1					
ANR	10140718	UnaryOperationExpression	- Y		10140667	2					
ANR	10140719	UnaryOperator	-		10140667	0					
ANR	10140720	Identifier	Y		10140667	1					
ANR	10140721	ReturnType	double		10140667	1					
ANR	10140722	Identifier	LogL16toY		10140667	2					
ANR	10140723	ParameterList	int p16		10140667	3					
ANR	10140724	Parameter	int p16	753:10:20989:20995	10140667	0	True				
ANR	10140725	ParameterType	int		10140667	0					
ANR	10140726	Identifier	p16		10140667	1					
ANR	10140727	CFGEntryNode	ENTRY		10140667		True				
ANR	10140728	CFGExitNode	EXIT		10140667		True				
ANR	10140729	Symbol	p16		10140667						
ANR	10140730	Symbol	M_LN2		10140667						
ANR	10140731	Symbol	Le		10140667						
ANR	10140732	Symbol	Y		10140667						
ANR	10140733	Symbol	exp		10140667						
ANR	10140734	Function	LogL16fromY	767:0:21217:21530							
ANR	10140735	FunctionDef	"LogL16fromY (double Y , int em)"		10140734	0					
ANR	10140736	CompoundStatement		769:0:21280:21530	10140734	0					
ANR	10140737	IfStatement	if ( Y >= 1.8371976e19 )		10140734	0					
ANR	10140738	Condition	Y >= 1.8371976e19	770:5:21287:21303	10140734	0	True				
ANR	10140739	RelationalExpression	Y >= 1.8371976e19		10140734	0		>=			
ANR	10140740	Identifier	Y		10140734	0					
ANR	10140741	PrimaryExpression	1.8371976e19		10140734	1					
ANR	10140742	ReturnStatement	return ( 0x7fff ) ;	771:2:21308:21323	10140734	1	True				
ANR	10140743	PrimaryExpression	0x7fff		10140734	0					
ANR	10140744	IfStatement	if ( Y <= - 1.8371976e19 )		10140734	1					
ANR	10140745	Condition	Y <= - 1.8371976e19	772:5:21330:21347	10140734	0	True				
ANR	10140746	RelationalExpression	Y <= - 1.8371976e19		10140734	0		<=			
ANR	10140747	Identifier	Y		10140734	0					
ANR	10140748	UnaryOperationExpression	- 1.8371976e19		10140734	1					
ANR	10140749	UnaryOperator	-		10140734	0					
ANR	10140750	PrimaryExpression	1.8371976e19		10140734	1					
ANR	10140751	ReturnStatement	return ( 0xffff ) ;	773:2:21352:21367	10140734	1	True				
ANR	10140752	PrimaryExpression	0xffff		10140734	0					
ANR	10140753	IfStatement	if ( Y > 5.4136769e-20 )		10140734	2					
ANR	10140754	Condition	Y > 5.4136769e-20	774:5:21374:21390	10140734	0	True				
ANR	10140755	RelationalExpression	Y > 5.4136769e-20		10140734	0		>			
ANR	10140756	Identifier	Y		10140734	0					
ANR	10140757	PrimaryExpression	5.4136769e-20		10140734	1					
ANR	10140758	ReturnStatement	"return itrunc ( 256. * ( log2 ( Y ) + 64. ) , em ) ;"	775:2:21395:21434	10140734	1	True				
ANR	10140759	CallExpression	"itrunc ( 256. * ( log2 ( Y ) + 64. ) , em )"		10140734	0					
ANR	10140760	Callee	itrunc		10140734	0					
ANR	10140761	Identifier	itrunc		10140734	0					
ANR	10140762	ArgumentList	256. * ( log2 ( Y ) + 64. )		10140734	1					
ANR	10140763	Argument	256. * ( log2 ( Y ) + 64. )		10140734	0					
ANR	10140764	MultiplicativeExpression	256. * ( log2 ( Y ) + 64. )		10140734	0		*			
ANR	10140765	PrimaryExpression	256.		10140734	0					
ANR	10140766	AdditiveExpression	log2 ( Y ) + 64.		10140734	1		+			
ANR	10140767	CallExpression	log2 ( Y )		10140734	0					
ANR	10140768	Callee	log2		10140734	0					
ANR	10140769	Identifier	log2		10140734	0					
ANR	10140770	ArgumentList	Y		10140734	1					
ANR	10140771	Argument	Y		10140734	0					
ANR	10140772	Identifier	Y		10140734	0					
ANR	10140773	PrimaryExpression	64.		10140734	1					
ANR	10140774	Argument	em		10140734	1					
ANR	10140775	Identifier	em		10140734	0					
ANR	10140776	IfStatement	if ( Y < - 5.4136769e-20 )		10140734	3					
ANR	10140777	Condition	Y < - 5.4136769e-20	776:5:21441:21458	10140734	0	True				
ANR	10140778	RelationalExpression	Y < - 5.4136769e-20		10140734	0		<			
ANR	10140779	Identifier	Y		10140734	0					
ANR	10140780	UnaryOperationExpression	- 5.4136769e-20		10140734	1					
ANR	10140781	UnaryOperator	-		10140734	0					
ANR	10140782	PrimaryExpression	5.4136769e-20		10140734	1					
ANR	10140783	ReturnStatement	"return ( ~0x7fff | itrunc ( 256. * ( log2 ( - Y ) + 64. ) , em ) ) ;"	777:2:21463:21515	10140734	1	True				
ANR	10140784	InclusiveOrExpression	"~0x7fff | itrunc ( 256. * ( log2 ( - Y ) + 64. ) , em )"		10140734	0		|			
ANR	10140785	Identifier	~0x7fff		10140734	0					
ANR	10140786	CallExpression	"itrunc ( 256. * ( log2 ( - Y ) + 64. ) , em )"		10140734	1					
ANR	10140787	Callee	itrunc		10140734	0					
ANR	10140788	Identifier	itrunc		10140734	0					
ANR	10140789	ArgumentList	256. * ( log2 ( - Y ) + 64. )		10140734	1					
ANR	10140790	Argument	256. * ( log2 ( - Y ) + 64. )		10140734	0					
ANR	10140791	MultiplicativeExpression	256. * ( log2 ( - Y ) + 64. )		10140734	0		*			
ANR	10140792	PrimaryExpression	256.		10140734	0					
ANR	10140793	AdditiveExpression	log2 ( - Y ) + 64.		10140734	1		+			
ANR	10140794	CallExpression	log2 ( - Y )		10140734	0					
ANR	10140795	Callee	log2		10140734	0					
ANR	10140796	Identifier	log2		10140734	0					
ANR	10140797	ArgumentList	- Y		10140734	1					
ANR	10140798	Argument	- Y		10140734	0					
ANR	10140799	UnaryOperationExpression	- Y		10140734	0					
ANR	10140800	UnaryOperator	-		10140734	0					
ANR	10140801	Identifier	Y		10140734	1					
ANR	10140802	PrimaryExpression	64.		10140734	1					
ANR	10140803	Argument	em		10140734	1					
ANR	10140804	Identifier	em		10140734	0					
ANR	10140805	ReturnStatement	return ( 0 ) ;	778:1:21518:21528	10140734	4	True				
ANR	10140806	PrimaryExpression	0		10140734	0					
ANR	10140807	ReturnType	int		10140734	1					
ANR	10140808	Identifier	LogL16fromY		10140734	2					
ANR	10140809	ParameterList	"double Y , int em"		10140734	3					
ANR	10140810	Parameter	double Y	768:12:21233:21240	10140734	0	True				
ANR	10140811	ParameterType	double		10140734	0					
ANR	10140812	Identifier	Y		10140734	1					
ANR	10140813	Parameter	int em	768:22:21243:21248	10140734	1	True				
ANR	10140814	ParameterType	int		10140734	0					
ANR	10140815	Identifier	em		10140734	1					
ANR	10140816	CFGEntryNode	ENTRY		10140734		True				
ANR	10140817	CFGExitNode	EXIT		10140734		True				
ANR	10140818	Symbol	itrunc		10140734						
ANR	10140819	Symbol	em		10140734						
ANR	10140820	Symbol	Y		10140734						
ANR	10140821	Symbol	~0x7fff		10140734						
ANR	10140822	Symbol	log2		10140734						
ANR	10140823	Function	L16toY	781:0:21533:21707							
ANR	10140824	FunctionDef	"L16toY (LogLuvState * sp , uint8 * op , tmsize_t n)"		10140823	0					
ANR	10140825	CompoundStatement		783:0:21592:21707	10140823	0					
ANR	10140826	IdentifierDeclStatement	int16 * l16 = ( int16 * ) sp -> tbuf ;	784:1:21595:21625	10140823	0	True				
ANR	10140827	IdentifierDecl	* l16 = ( int16 * ) sp -> tbuf		10140823	0					
ANR	10140828	IdentifierDeclType	int16 *		10140823	0					
ANR	10140829	Identifier	l16		10140823	1					
ANR	10140830	AssignmentExpression	* l16 = ( int16 * ) sp -> tbuf		10140823	2		=			
ANR	10140831	Identifier	l16		10140823	0					
ANR	10140832	CastExpression	( int16 * ) sp -> tbuf		10140823	1					
ANR	10140833	CastTarget	int16 *		10140823	0					
ANR	10140834	PtrMemberAccess	sp -> tbuf		10140823	1					
ANR	10140835	Identifier	sp		10140823	0					
ANR	10140836	Identifier	tbuf		10140823	1					
ANR	10140837	IdentifierDeclStatement	float * yp = ( float * ) op ;	785:1:21628:21651	10140823	1	True				
ANR	10140838	IdentifierDecl	* yp = ( float * ) op		10140823	0					
ANR	10140839	IdentifierDeclType	float *		10140823	0					
ANR	10140840	Identifier	yp		10140823	1					
ANR	10140841	AssignmentExpression	* yp = ( float * ) op		10140823	2		=			
ANR	10140842	Identifier	yp		10140823	0					
ANR	10140843	CastExpression	( float * ) op		10140823	1					
ANR	10140844	CastTarget	float *		10140823	0					
ANR	10140845	Identifier	op		10140823	1					
ANR	10140846	WhileStatement	while ( n -- > 0 )		10140823	2					
ANR	10140847	Condition	n -- > 0	787:8:21662:21668	10140823	0	True				
ANR	10140848	RelationalExpression	n -- > 0		10140823	0		>			
ANR	10140849	PostIncDecOperationExpression	n --		10140823	0					
ANR	10140850	Identifier	n		10140823	0					
ANR	10140851	IncDec	--		10140823	1					
ANR	10140852	PrimaryExpression	0		10140823	1					
ANR	10140853	ExpressionStatement	* yp ++ = ( float ) LogL16toY ( * l16 ++ )	788:2:21673:21705	10140823	1	True				
ANR	10140854	AssignmentExpression	* yp ++ = ( float ) LogL16toY ( * l16 ++ )		10140823	0		=			
ANR	10140855	UnaryOperationExpression	* yp ++		10140823	0					
ANR	10140856	UnaryOperator	*		10140823	0					
ANR	10140857	PostIncDecOperationExpression	yp ++		10140823	1					
ANR	10140858	Identifier	yp		10140823	0					
ANR	10140859	IncDec	++		10140823	1					
ANR	10140860	CastExpression	( float ) LogL16toY ( * l16 ++ )		10140823	1					
ANR	10140861	CastTarget	float		10140823	0					
ANR	10140862	CallExpression	LogL16toY ( * l16 ++ )		10140823	1					
ANR	10140863	Callee	LogL16toY		10140823	0					
ANR	10140864	Identifier	LogL16toY		10140823	0					
ANR	10140865	ArgumentList	* l16 ++		10140823	1					
ANR	10140866	Argument	* l16 ++		10140823	0					
ANR	10140867	UnaryOperationExpression	* l16 ++		10140823	0					
ANR	10140868	UnaryOperator	*		10140823	0					
ANR	10140869	PostIncDecOperationExpression	l16 ++		10140823	1					
ANR	10140870	Identifier	l16		10140823	0					
ANR	10140871	IncDec	++		10140823	1					
ANR	10140872	ReturnType	static void		10140823	1					
ANR	10140873	Identifier	L16toY		10140823	2					
ANR	10140874	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10140823	3					
ANR	10140875	Parameter	LogLuvState * sp	782:7:21552:21566	10140823	0	True				
ANR	10140876	ParameterType	LogLuvState *		10140823	0					
ANR	10140877	Identifier	sp		10140823	1					
ANR	10140878	Parameter	uint8 * op	782:24:21569:21577	10140823	1	True				
ANR	10140879	ParameterType	uint8 *		10140823	0					
ANR	10140880	Identifier	op		10140823	1					
ANR	10140881	Parameter	tmsize_t n	782:35:21580:21589	10140823	2	True				
ANR	10140882	ParameterType	tmsize_t		10140823	0					
ANR	10140883	Identifier	n		10140823	1					
ANR	10140884	CFGEntryNode	ENTRY		10140823		True				
ANR	10140885	CFGExitNode	EXIT		10140823		True				
ANR	10140886	Symbol	* sp		10140823						
ANR	10140887	Symbol	l16		10140823						
ANR	10140888	Symbol	op		10140823						
ANR	10140889	Symbol	LogL16toY		10140823						
ANR	10140890	Symbol	yp		10140823						
ANR	10140891	Symbol	sp -> tbuf		10140823						
ANR	10140892	Symbol	* l16 ++		10140823						
ANR	10140893	Symbol	sp		10140823						
ANR	10140894	Symbol	n		10140823						
ANR	10140895	Symbol	* yp ++		10140823						
ANR	10140896	Function	L16toGry	791:0:21710:21962							
ANR	10140897	FunctionDef	"L16toGry (LogLuvState * sp , uint8 * op , tmsize_t n)"		10140896	0					
ANR	10140898	CompoundStatement		793:0:21771:21962	10140896	0					
ANR	10140899	IdentifierDeclStatement	int16 * l16 = ( int16 * ) sp -> tbuf ;	794:1:21774:21804	10140896	0	True				
ANR	10140900	IdentifierDecl	* l16 = ( int16 * ) sp -> tbuf		10140896	0					
ANR	10140901	IdentifierDeclType	int16 *		10140896	0					
ANR	10140902	Identifier	l16		10140896	1					
ANR	10140903	AssignmentExpression	* l16 = ( int16 * ) sp -> tbuf		10140896	2		=			
ANR	10140904	Identifier	l16		10140896	0					
ANR	10140905	CastExpression	( int16 * ) sp -> tbuf		10140896	1					
ANR	10140906	CastTarget	int16 *		10140896	0					
ANR	10140907	PtrMemberAccess	sp -> tbuf		10140896	1					
ANR	10140908	Identifier	sp		10140896	0					
ANR	10140909	Identifier	tbuf		10140896	1					
ANR	10140910	IdentifierDeclStatement	uint8 * gp = ( uint8 * ) op ;	795:1:21807:21830	10140896	1	True				
ANR	10140911	IdentifierDecl	* gp = ( uint8 * ) op		10140896	0					
ANR	10140912	IdentifierDeclType	uint8 *		10140896	0					
ANR	10140913	Identifier	gp		10140896	1					
ANR	10140914	AssignmentExpression	* gp = ( uint8 * ) op		10140896	2		=			
ANR	10140915	Identifier	gp		10140896	0					
ANR	10140916	CastExpression	( uint8 * ) op		10140896	1					
ANR	10140917	CastTarget	uint8 *		10140896	0					
ANR	10140918	Identifier	op		10140896	1					
ANR	10140919	WhileStatement	while ( n -- > 0 )		10140896	2					
ANR	10140920	Condition	n -- > 0	797:8:21841:21847	10140896	0	True				
ANR	10140921	RelationalExpression	n -- > 0		10140896	0		>			
ANR	10140922	PostIncDecOperationExpression	n --		10140896	0					
ANR	10140923	Identifier	n		10140896	0					
ANR	10140924	IncDec	--		10140896	1					
ANR	10140925	PrimaryExpression	0		10140896	1					
ANR	10140926	CompoundStatement		6:2:82:110	10140896	1					
ANR	10140927	IdentifierDeclStatement	double Y = LogL16toY ( * l16 ++ ) ;	798:2:21854:21882	10140896	0	True				
ANR	10140928	IdentifierDecl	Y = LogL16toY ( * l16 ++ )		10140896	0					
ANR	10140929	IdentifierDeclType	double		10140896	0					
ANR	10140930	Identifier	Y		10140896	1					
ANR	10140931	AssignmentExpression	Y = LogL16toY ( * l16 ++ )		10140896	2		=			
ANR	10140932	Identifier	Y		10140896	0					
ANR	10140933	CallExpression	LogL16toY ( * l16 ++ )		10140896	1					
ANR	10140934	Callee	LogL16toY		10140896	0					
ANR	10140935	Identifier	LogL16toY		10140896	0					
ANR	10140936	ArgumentList	* l16 ++		10140896	1					
ANR	10140937	Argument	* l16 ++		10140896	0					
ANR	10140938	UnaryOperationExpression	* l16 ++		10140896	0					
ANR	10140939	UnaryOperator	*		10140896	0					
ANR	10140940	PostIncDecOperationExpression	l16 ++		10140896	1					
ANR	10140941	Identifier	l16		10140896	0					
ANR	10140942	IncDec	++		10140896	1					
ANR	10140943	ExpressionStatement	* gp ++ = ( uint8 ) ( ( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) ) )	799:2:21886:21957	10140896	1	True				
ANR	10140944	AssignmentExpression	* gp ++ = ( uint8 ) ( ( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) ) )		10140896	0		=			
ANR	10140945	UnaryOperationExpression	* gp ++		10140896	0					
ANR	10140946	UnaryOperator	*		10140896	0					
ANR	10140947	PostIncDecOperationExpression	gp ++		10140896	1					
ANR	10140948	Identifier	gp		10140896	0					
ANR	10140949	IncDec	++		10140896	1					
ANR	10140950	CastExpression	( uint8 ) ( ( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) ) )		10140896	1					
ANR	10140951	CastTarget	uint8		10140896	0					
ANR	10140952	ConditionalExpression	( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) )		10140896	1					
ANR	10140953	Condition	Y <= 0.		10140896	0					
ANR	10140954	RelationalExpression	Y <= 0.		10140896	0		<=			
ANR	10140955	Identifier	Y		10140896	0					
ANR	10140956	PrimaryExpression	0.		10140896	1					
ANR	10140957	PrimaryExpression	0		10140896	1					
ANR	10140958	ConditionalExpression	( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) )		10140896	2					
ANR	10140959	Condition	Y >= 1.		10140896	0					
ANR	10140960	RelationalExpression	Y >= 1.		10140896	0		>=			
ANR	10140961	Identifier	Y		10140896	0					
ANR	10140962	PrimaryExpression	1.		10140896	1					
ANR	10140963	PrimaryExpression	255		10140896	1					
ANR	10140964	CastExpression	( int ) ( 256. * sqrt ( Y ) )		10140896	2					
ANR	10140965	CastTarget	int		10140896	0					
ANR	10140966	MultiplicativeExpression	256. * sqrt ( Y )		10140896	1		*			
ANR	10140967	PrimaryExpression	256.		10140896	0					
ANR	10140968	CallExpression	sqrt ( Y )		10140896	1					
ANR	10140969	Callee	sqrt		10140896	0					
ANR	10140970	Identifier	sqrt		10140896	0					
ANR	10140971	ArgumentList	Y		10140896	1					
ANR	10140972	Argument	Y		10140896	0					
ANR	10140973	Identifier	Y		10140896	0					
ANR	10140974	ReturnType	static void		10140896	1					
ANR	10140975	Identifier	L16toGry		10140896	2					
ANR	10140976	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10140896	3					
ANR	10140977	Parameter	LogLuvState * sp	792:9:21731:21745	10140896	0	True				
ANR	10140978	ParameterType	LogLuvState *		10140896	0					
ANR	10140979	Identifier	sp		10140896	1					
ANR	10140980	Parameter	uint8 * op	792:26:21748:21756	10140896	1	True				
ANR	10140981	ParameterType	uint8 *		10140896	0					
ANR	10140982	Identifier	op		10140896	1					
ANR	10140983	Parameter	tmsize_t n	792:37:21759:21768	10140896	2	True				
ANR	10140984	ParameterType	tmsize_t		10140896	0					
ANR	10140985	Identifier	n		10140896	1					
ANR	10140986	CFGEntryNode	ENTRY		10140896		True				
ANR	10140987	CFGExitNode	EXIT		10140896		True				
ANR	10140988	Symbol	* sp		10140896						
ANR	10140989	Symbol	l16		10140896						
ANR	10140990	Symbol	op		10140896						
ANR	10140991	Symbol	LogL16toY		10140896						
ANR	10140992	Symbol	sqrt		10140896						
ANR	10140993	Symbol	sp -> tbuf		10140896						
ANR	10140994	Symbol	gp		10140896						
ANR	10140995	Symbol	Y		10140896						
ANR	10140996	Symbol	* l16 ++		10140896						
ANR	10140997	Symbol	sp		10140896						
ANR	10140998	Symbol	n		10140896						
ANR	10140999	Symbol	* gp ++		10140896						
ANR	10141000	Function	L16fromY	803:0:21965:22163							
ANR	10141001	FunctionDef	"L16fromY (LogLuvState * sp , uint8 * op , tmsize_t n)"		10141000	0					
ANR	10141002	CompoundStatement		805:0:22026:22163	10141000	0					
ANR	10141003	IdentifierDeclStatement	int16 * l16 = ( int16 * ) sp -> tbuf ;	806:1:22029:22059	10141000	0	True				
ANR	10141004	IdentifierDecl	* l16 = ( int16 * ) sp -> tbuf		10141000	0					
ANR	10141005	IdentifierDeclType	int16 *		10141000	0					
ANR	10141006	Identifier	l16		10141000	1					
ANR	10141007	AssignmentExpression	* l16 = ( int16 * ) sp -> tbuf		10141000	2		=			
ANR	10141008	Identifier	l16		10141000	0					
ANR	10141009	CastExpression	( int16 * ) sp -> tbuf		10141000	1					
ANR	10141010	CastTarget	int16 *		10141000	0					
ANR	10141011	PtrMemberAccess	sp -> tbuf		10141000	1					
ANR	10141012	Identifier	sp		10141000	0					
ANR	10141013	Identifier	tbuf		10141000	1					
ANR	10141014	IdentifierDeclStatement	float * yp = ( float * ) op ;	807:1:22062:22085	10141000	1	True				
ANR	10141015	IdentifierDecl	* yp = ( float * ) op		10141000	0					
ANR	10141016	IdentifierDeclType	float *		10141000	0					
ANR	10141017	Identifier	yp		10141000	1					
ANR	10141018	AssignmentExpression	* yp = ( float * ) op		10141000	2		=			
ANR	10141019	Identifier	yp		10141000	0					
ANR	10141020	CastExpression	( float * ) op		10141000	1					
ANR	10141021	CastTarget	float *		10141000	0					
ANR	10141022	Identifier	op		10141000	1					
ANR	10141023	WhileStatement	while ( n -- > 0 )		10141000	2					
ANR	10141024	Condition	n -- > 0	809:8:22096:22102	10141000	0	True				
ANR	10141025	RelationalExpression	n -- > 0		10141000	0		>			
ANR	10141026	PostIncDecOperationExpression	n --		10141000	0					
ANR	10141027	Identifier	n		10141000	0					
ANR	10141028	IncDec	--		10141000	1					
ANR	10141029	PrimaryExpression	0		10141000	1					
ANR	10141030	ExpressionStatement	"* l16 ++ = ( int16 ) ( LogL16fromY ( * yp ++ , sp -> encode_meth ) )"	810:2:22107:22161	10141000	1	True				
ANR	10141031	AssignmentExpression	"* l16 ++ = ( int16 ) ( LogL16fromY ( * yp ++ , sp -> encode_meth ) )"		10141000	0		=			
ANR	10141032	UnaryOperationExpression	* l16 ++		10141000	0					
ANR	10141033	UnaryOperator	*		10141000	0					
ANR	10141034	PostIncDecOperationExpression	l16 ++		10141000	1					
ANR	10141035	Identifier	l16		10141000	0					
ANR	10141036	IncDec	++		10141000	1					
ANR	10141037	CastExpression	"( int16 ) ( LogL16fromY ( * yp ++ , sp -> encode_meth ) )"		10141000	1					
ANR	10141038	CastTarget	int16		10141000	0					
ANR	10141039	CallExpression	"LogL16fromY ( * yp ++ , sp -> encode_meth )"		10141000	1					
ANR	10141040	Callee	LogL16fromY		10141000	0					
ANR	10141041	Identifier	LogL16fromY		10141000	0					
ANR	10141042	ArgumentList	* yp ++		10141000	1					
ANR	10141043	Argument	* yp ++		10141000	0					
ANR	10141044	UnaryOperationExpression	* yp ++		10141000	0					
ANR	10141045	UnaryOperator	*		10141000	0					
ANR	10141046	PostIncDecOperationExpression	yp ++		10141000	1					
ANR	10141047	Identifier	yp		10141000	0					
ANR	10141048	IncDec	++		10141000	1					
ANR	10141049	Argument	sp -> encode_meth		10141000	1					
ANR	10141050	PtrMemberAccess	sp -> encode_meth		10141000	0					
ANR	10141051	Identifier	sp		10141000	0					
ANR	10141052	Identifier	encode_meth		10141000	1					
ANR	10141053	ReturnType	static void		10141000	1					
ANR	10141054	Identifier	L16fromY		10141000	2					
ANR	10141055	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10141000	3					
ANR	10141056	Parameter	LogLuvState * sp	804:9:21986:22000	10141000	0	True				
ANR	10141057	ParameterType	LogLuvState *		10141000	0					
ANR	10141058	Identifier	sp		10141000	1					
ANR	10141059	Parameter	uint8 * op	804:26:22003:22011	10141000	1	True				
ANR	10141060	ParameterType	uint8 *		10141000	0					
ANR	10141061	Identifier	op		10141000	1					
ANR	10141062	Parameter	tmsize_t n	804:37:22014:22023	10141000	2	True				
ANR	10141063	ParameterType	tmsize_t		10141000	0					
ANR	10141064	Identifier	n		10141000	1					
ANR	10141065	CFGEntryNode	ENTRY		10141000		True				
ANR	10141066	CFGExitNode	EXIT		10141000		True				
ANR	10141067	Symbol	* sp		10141000						
ANR	10141068	Symbol	l16		10141000						
ANR	10141069	Symbol	op		10141000						
ANR	10141070	Symbol	yp		10141000						
ANR	10141071	Symbol	sp -> tbuf		10141000						
ANR	10141072	Symbol	* l16 ++		10141000						
ANR	10141073	Symbol	LogL16fromY		10141000						
ANR	10141074	Symbol	sp -> encode_meth		10141000						
ANR	10141075	Symbol	sp		10141000						
ANR	10141076	Symbol	n		10141000						
ANR	10141077	Symbol	* yp ++		10141000						
ANR	10141078	Function	XYZtoRGB24	816:0:22199:22776							
ANR	10141079	FunctionDef	"XYZtoRGB24 (float xyz [ 3 ] , uint8 rgb [ 3 ])"		10141078	0					
ANR	10141080	CompoundStatement		818:0:22243:22776	10141078	0					
ANR	10141081	IdentifierDeclStatement	"double r , g , b ;"	819:1:22246:22260	10141078	0	True				
ANR	10141082	IdentifierDecl	r		10141078	0					
ANR	10141083	IdentifierDeclType	double		10141078	0					
ANR	10141084	Identifier	r		10141078	1					
ANR	10141085	IdentifierDecl	g		10141078	1					
ANR	10141086	IdentifierDeclType	double		10141078	0					
ANR	10141087	Identifier	g		10141078	1					
ANR	10141088	IdentifierDecl	b		10141078	2					
ANR	10141089	IdentifierDeclType	double		10141078	0					
ANR	10141090	Identifier	b		10141078	1					
ANR	10141091	ExpressionStatement	r = 2.690 * xyz [ 0 ] + - 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]	821:1:22300:22349	10141078	1	True				
ANR	10141092	AssignmentExpression	r = 2.690 * xyz [ 0 ] + - 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]		10141078	0		=			
ANR	10141093	Identifier	r		10141078	0					
ANR	10141094	AdditiveExpression	2.690 * xyz [ 0 ] + - 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]		10141078	1		+			
ANR	10141095	MultiplicativeExpression	2.690 * xyz [ 0 ]		10141078	0		*			
ANR	10141096	PrimaryExpression	2.690		10141078	0					
ANR	10141097	ArrayIndexing	xyz [ 0 ]		10141078	1					
ANR	10141098	Identifier	xyz		10141078	0					
ANR	10141099	PrimaryExpression	0		10141078	1					
ANR	10141100	AdditiveExpression	- 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]		10141078	1		+			
ANR	10141101	MultiplicativeExpression	- 1.276 * xyz [ 1 ]		10141078	0		*			
ANR	10141102	UnaryOperationExpression	- 1.276		10141078	0					
ANR	10141103	UnaryOperator	-		10141078	0					
ANR	10141104	PrimaryExpression	1.276		10141078	1					
ANR	10141105	ArrayIndexing	xyz [ 1 ]		10141078	1					
ANR	10141106	Identifier	xyz		10141078	0					
ANR	10141107	PrimaryExpression	1		10141078	1					
ANR	10141108	MultiplicativeExpression	- 0.414 * xyz [ 2 ]		10141078	1		*			
ANR	10141109	UnaryOperationExpression	- 0.414		10141078	0					
ANR	10141110	UnaryOperator	-		10141078	0					
ANR	10141111	PrimaryExpression	0.414		10141078	1					
ANR	10141112	ArrayIndexing	xyz [ 2 ]		10141078	1					
ANR	10141113	Identifier	xyz		10141078	0					
ANR	10141114	PrimaryExpression	2		10141078	1					
ANR	10141115	ExpressionStatement	g = - 1.022 * xyz [ 0 ] + 1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]	822:1:22352:22401	10141078	2	True				
ANR	10141116	AssignmentExpression	g = - 1.022 * xyz [ 0 ] + 1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]		10141078	0		=			
ANR	10141117	Identifier	g		10141078	0					
ANR	10141118	AdditiveExpression	- 1.022 * xyz [ 0 ] + 1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]		10141078	1		+			
ANR	10141119	MultiplicativeExpression	- 1.022 * xyz [ 0 ]		10141078	0		*			
ANR	10141120	UnaryOperationExpression	- 1.022		10141078	0					
ANR	10141121	UnaryOperator	-		10141078	0					
ANR	10141122	PrimaryExpression	1.022		10141078	1					
ANR	10141123	ArrayIndexing	xyz [ 0 ]		10141078	1					
ANR	10141124	Identifier	xyz		10141078	0					
ANR	10141125	PrimaryExpression	0		10141078	1					
ANR	10141126	AdditiveExpression	1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]		10141078	1		+			
ANR	10141127	MultiplicativeExpression	1.978 * xyz [ 1 ]		10141078	0		*			
ANR	10141128	PrimaryExpression	1.978		10141078	0					
ANR	10141129	ArrayIndexing	xyz [ 1 ]		10141078	1					
ANR	10141130	Identifier	xyz		10141078	0					
ANR	10141131	PrimaryExpression	1		10141078	1					
ANR	10141132	MultiplicativeExpression	0.044 * xyz [ 2 ]		10141078	1		*			
ANR	10141133	PrimaryExpression	0.044		10141078	0					
ANR	10141134	ArrayIndexing	xyz [ 2 ]		10141078	1					
ANR	10141135	Identifier	xyz		10141078	0					
ANR	10141136	PrimaryExpression	2		10141078	1					
ANR	10141137	ExpressionStatement	b = 0.061 * xyz [ 0 ] + - 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]	823:1:22404:22453	10141078	3	True				
ANR	10141138	AssignmentExpression	b = 0.061 * xyz [ 0 ] + - 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]		10141078	0		=			
ANR	10141139	Identifier	b		10141078	0					
ANR	10141140	AdditiveExpression	0.061 * xyz [ 0 ] + - 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]		10141078	1		+			
ANR	10141141	MultiplicativeExpression	0.061 * xyz [ 0 ]		10141078	0		*			
ANR	10141142	PrimaryExpression	0.061		10141078	0					
ANR	10141143	ArrayIndexing	xyz [ 0 ]		10141078	1					
ANR	10141144	Identifier	xyz		10141078	0					
ANR	10141145	PrimaryExpression	0		10141078	1					
ANR	10141146	AdditiveExpression	- 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]		10141078	1		+			
ANR	10141147	MultiplicativeExpression	- 0.224 * xyz [ 1 ]		10141078	0		*			
ANR	10141148	UnaryOperationExpression	- 0.224		10141078	0					
ANR	10141149	UnaryOperator	-		10141078	0					
ANR	10141150	PrimaryExpression	0.224		10141078	1					
ANR	10141151	ArrayIndexing	xyz [ 1 ]		10141078	1					
ANR	10141152	Identifier	xyz		10141078	0					
ANR	10141153	PrimaryExpression	1		10141078	1					
ANR	10141154	MultiplicativeExpression	1.163 * xyz [ 2 ]		10141078	1		*			
ANR	10141155	PrimaryExpression	1.163		10141078	0					
ANR	10141156	ArrayIndexing	xyz [ 2 ]		10141078	1					
ANR	10141157	Identifier	xyz		10141078	0					
ANR	10141158	PrimaryExpression	2		10141078	1					
ANR	10141159	ExpressionStatement	rgb [ 0 ] = ( uint8 ) ( ( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) ) )	826:1:22561:22630	10141078	4	True				
ANR	10141160	AssignmentExpression	rgb [ 0 ] = ( uint8 ) ( ( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) ) )		10141078	0		=			
ANR	10141161	ArrayIndexing	rgb [ 0 ]		10141078	0					
ANR	10141162	Identifier	rgb		10141078	0					
ANR	10141163	PrimaryExpression	0		10141078	1					
ANR	10141164	CastExpression	( uint8 ) ( ( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) ) )		10141078	1					
ANR	10141165	CastTarget	uint8		10141078	0					
ANR	10141166	ConditionalExpression	( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) )		10141078	1					
ANR	10141167	Condition	r <= 0.		10141078	0					
ANR	10141168	RelationalExpression	r <= 0.		10141078	0		<=			
ANR	10141169	Identifier	r		10141078	0					
ANR	10141170	PrimaryExpression	0.		10141078	1					
ANR	10141171	PrimaryExpression	0		10141078	1					
ANR	10141172	ConditionalExpression	( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) )		10141078	2					
ANR	10141173	Condition	r >= 1.		10141078	0					
ANR	10141174	RelationalExpression	r >= 1.		10141078	0		>=			
ANR	10141175	Identifier	r		10141078	0					
ANR	10141176	PrimaryExpression	1.		10141078	1					
ANR	10141177	PrimaryExpression	255		10141078	1					
ANR	10141178	CastExpression	( int ) ( 256. * sqrt ( r ) )		10141078	2					
ANR	10141179	CastTarget	int		10141078	0					
ANR	10141180	MultiplicativeExpression	256. * sqrt ( r )		10141078	1		*			
ANR	10141181	PrimaryExpression	256.		10141078	0					
ANR	10141182	CallExpression	sqrt ( r )		10141078	1					
ANR	10141183	Callee	sqrt		10141078	0					
ANR	10141184	Identifier	sqrt		10141078	0					
ANR	10141185	ArgumentList	r		10141078	1					
ANR	10141186	Argument	r		10141078	0					
ANR	10141187	Identifier	r		10141078	0					
ANR	10141188	ExpressionStatement	rgb [ 1 ] = ( uint8 ) ( ( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) ) )	827:1:22633:22702	10141078	5	True				
ANR	10141189	AssignmentExpression	rgb [ 1 ] = ( uint8 ) ( ( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) ) )		10141078	0		=			
ANR	10141190	ArrayIndexing	rgb [ 1 ]		10141078	0					
ANR	10141191	Identifier	rgb		10141078	0					
ANR	10141192	PrimaryExpression	1		10141078	1					
ANR	10141193	CastExpression	( uint8 ) ( ( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) ) )		10141078	1					
ANR	10141194	CastTarget	uint8		10141078	0					
ANR	10141195	ConditionalExpression	( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) )		10141078	1					
ANR	10141196	Condition	g <= 0.		10141078	0					
ANR	10141197	RelationalExpression	g <= 0.		10141078	0		<=			
ANR	10141198	Identifier	g		10141078	0					
ANR	10141199	PrimaryExpression	0.		10141078	1					
ANR	10141200	PrimaryExpression	0		10141078	1					
ANR	10141201	ConditionalExpression	( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) )		10141078	2					
ANR	10141202	Condition	g >= 1.		10141078	0					
ANR	10141203	RelationalExpression	g >= 1.		10141078	0		>=			
ANR	10141204	Identifier	g		10141078	0					
ANR	10141205	PrimaryExpression	1.		10141078	1					
ANR	10141206	PrimaryExpression	255		10141078	1					
ANR	10141207	CastExpression	( int ) ( 256. * sqrt ( g ) )		10141078	2					
ANR	10141208	CastTarget	int		10141078	0					
ANR	10141209	MultiplicativeExpression	256. * sqrt ( g )		10141078	1		*			
ANR	10141210	PrimaryExpression	256.		10141078	0					
ANR	10141211	CallExpression	sqrt ( g )		10141078	1					
ANR	10141212	Callee	sqrt		10141078	0					
ANR	10141213	Identifier	sqrt		10141078	0					
ANR	10141214	ArgumentList	g		10141078	1					
ANR	10141215	Argument	g		10141078	0					
ANR	10141216	Identifier	g		10141078	0					
ANR	10141217	ExpressionStatement	rgb [ 2 ] = ( uint8 ) ( ( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) ) )	828:1:22705:22774	10141078	6	True				
ANR	10141218	AssignmentExpression	rgb [ 2 ] = ( uint8 ) ( ( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) ) )		10141078	0		=			
ANR	10141219	ArrayIndexing	rgb [ 2 ]		10141078	0					
ANR	10141220	Identifier	rgb		10141078	0					
ANR	10141221	PrimaryExpression	2		10141078	1					
ANR	10141222	CastExpression	( uint8 ) ( ( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) ) )		10141078	1					
ANR	10141223	CastTarget	uint8		10141078	0					
ANR	10141224	ConditionalExpression	( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) )		10141078	1					
ANR	10141225	Condition	b <= 0.		10141078	0					
ANR	10141226	RelationalExpression	b <= 0.		10141078	0		<=			
ANR	10141227	Identifier	b		10141078	0					
ANR	10141228	PrimaryExpression	0.		10141078	1					
ANR	10141229	PrimaryExpression	0		10141078	1					
ANR	10141230	ConditionalExpression	( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) )		10141078	2					
ANR	10141231	Condition	b >= 1.		10141078	0					
ANR	10141232	RelationalExpression	b >= 1.		10141078	0		>=			
ANR	10141233	Identifier	b		10141078	0					
ANR	10141234	PrimaryExpression	1.		10141078	1					
ANR	10141235	PrimaryExpression	255		10141078	1					
ANR	10141236	CastExpression	( int ) ( 256. * sqrt ( b ) )		10141078	2					
ANR	10141237	CastTarget	int		10141078	0					
ANR	10141238	MultiplicativeExpression	256. * sqrt ( b )		10141078	1		*			
ANR	10141239	PrimaryExpression	256.		10141078	0					
ANR	10141240	CallExpression	sqrt ( b )		10141078	1					
ANR	10141241	Callee	sqrt		10141078	0					
ANR	10141242	Identifier	sqrt		10141078	0					
ANR	10141243	ArgumentList	b		10141078	1					
ANR	10141244	Argument	b		10141078	0					
ANR	10141245	Identifier	b		10141078	0					
ANR	10141246	ReturnType	void		10141078	1					
ANR	10141247	Identifier	XYZtoRGB24		10141078	2					
ANR	10141248	ParameterList	"float xyz [ 3 ] , uint8 rgb [ 3 ]"		10141078	3					
ANR	10141249	Parameter	float xyz [ 3 ]	817:11:22215:22226	10141078	0	True				
ANR	10141250	ParameterType	float [ 3 ]		10141078	0					
ANR	10141251	Identifier	xyz		10141078	1					
ANR	10141252	Parameter	uint8 rgb [ 3 ]	817:25:22229:22240	10141078	1	True				
ANR	10141253	ParameterType	uint8 [ 3 ]		10141078	0					
ANR	10141254	Identifier	rgb		10141078	1					
ANR	10141255	CFGEntryNode	ENTRY		10141078		True				
ANR	10141256	CFGExitNode	EXIT		10141078		True				
ANR	10141257	Symbol	r		10141078						
ANR	10141258	Symbol	b		10141078						
ANR	10141259	Symbol	* xyz		10141078						
ANR	10141260	Symbol	sqrt		10141078						
ANR	10141261	Symbol	g		10141078						
ANR	10141262	Symbol	* rgb		10141078						
ANR	10141263	Symbol	xyz		10141078						
ANR	10141264	Symbol	rgb		10141078						
ANR	10141265	Function	LogL10toY	834:0:22812:22959							
ANR	10141266	FunctionDef	LogL10toY (int p10)		10141265	0					
ANR	10141267	CompoundStatement		836:0:22880:22959	10141265	0					
ANR	10141268	IfStatement	if ( p10 == 0 )		10141265	0					
ANR	10141269	Condition	p10 == 0	837:5:22887:22894	10141265	0	True				
ANR	10141270	EqualityExpression	p10 == 0		10141265	0		==			
ANR	10141271	Identifier	p10		10141265	0					
ANR	10141272	PrimaryExpression	0		10141265	1					
ANR	10141273	ReturnStatement	return ( 0. ) ;	838:2:22899:22910	10141265	1	True				
ANR	10141274	PrimaryExpression	0.		10141265	0					
ANR	10141275	ReturnStatement	return ( exp ( M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12. ) ) ;	839:1:22913:22957	10141265	1	True				
ANR	10141276	CallExpression	exp ( M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12. )		10141265	0					
ANR	10141277	Callee	exp		10141265	0					
ANR	10141278	Identifier	exp		10141265	0					
ANR	10141279	ArgumentList	M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12.		10141265	1					
ANR	10141280	Argument	M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12.		10141265	0					
ANR	10141281	AdditiveExpression	M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12.		10141265	0		-			
ANR	10141282	MultiplicativeExpression	M_LN2 / 64. * ( p10 + .5 )		10141265	0		/			
ANR	10141283	Identifier	M_LN2		10141265	0					
ANR	10141284	MultiplicativeExpression	64. * ( p10 + .5 )		10141265	1		*			
ANR	10141285	PrimaryExpression	64.		10141265	0					
ANR	10141286	AdditiveExpression	p10 + .5		10141265	1		+			
ANR	10141287	Identifier	p10		10141265	0					
ANR	10141288	PrimaryExpression	.5		10141265	1					
ANR	10141289	MultiplicativeExpression	M_LN2 * 12.		10141265	1		*			
ANR	10141290	Identifier	M_LN2		10141265	0					
ANR	10141291	PrimaryExpression	12.		10141265	1					
ANR	10141292	ReturnType	double		10141265	1					
ANR	10141293	Identifier	LogL10toY		10141265	2					
ANR	10141294	ParameterList	int p10		10141265	3					
ANR	10141295	Parameter	int p10	835:10:22829:22835	10141265	0	True				
ANR	10141296	ParameterType	int		10141265	0					
ANR	10141297	Identifier	p10		10141265	1					
ANR	10141298	CFGEntryNode	ENTRY		10141265		True				
ANR	10141299	CFGExitNode	EXIT		10141265		True				
ANR	10141300	Symbol	M_LN2		10141265						
ANR	10141301	Symbol	exp		10141265						
ANR	10141302	Symbol	p10		10141265						
ANR	10141303	Function	LogL10fromY	845:0:22995:23184							
ANR	10141304	FunctionDef	"LogL10fromY (double Y , int em)"		10141303	0					
ANR	10141305	CompoundStatement		847:0:23058:23184	10141303	0					
ANR	10141306	IfStatement	if ( Y >= 15.742 )		10141303	0					
ANR	10141307	Condition	Y >= 15.742	848:5:23065:23075	10141303	0	True				
ANR	10141308	RelationalExpression	Y >= 15.742		10141303	0		>=			
ANR	10141309	Identifier	Y		10141303	0					
ANR	10141310	PrimaryExpression	15.742		10141303	1					
ANR	10141311	ReturnStatement	return ( 0x3ff ) ;	849:2:23080:23094	10141303	1	True				
ANR	10141312	PrimaryExpression	0x3ff		10141303	0					
ANR	10141313	ElseStatement	else		10141303	0					
ANR	10141314	IfStatement	if ( Y <= .00024283 )		10141303	0					
ANR	10141315	Condition	Y <= .00024283	850:10:23106:23119	10141303	0	True				
ANR	10141316	RelationalExpression	Y <= .00024283		10141303	0		<=			
ANR	10141317	Identifier	Y		10141303	0					
ANR	10141318	PrimaryExpression	.00024283		10141303	1					
ANR	10141319	ReturnStatement	return ( 0 ) ;	851:2:23124:23134	10141303	1	True				
ANR	10141320	PrimaryExpression	0		10141303	0					
ANR	10141321	ElseStatement	else		10141303	0					
ANR	10141322	ReturnStatement	"return itrunc ( 64. * ( log2 ( Y ) + 12. ) , em ) ;"	853:2:23144:23182	10141303	0	True				
ANR	10141323	CallExpression	"itrunc ( 64. * ( log2 ( Y ) + 12. ) , em )"		10141303	0					
ANR	10141324	Callee	itrunc		10141303	0					
ANR	10141325	Identifier	itrunc		10141303	0					
ANR	10141326	ArgumentList	64. * ( log2 ( Y ) + 12. )		10141303	1					
ANR	10141327	Argument	64. * ( log2 ( Y ) + 12. )		10141303	0					
ANR	10141328	MultiplicativeExpression	64. * ( log2 ( Y ) + 12. )		10141303	0		*			
ANR	10141329	PrimaryExpression	64.		10141303	0					
ANR	10141330	AdditiveExpression	log2 ( Y ) + 12.		10141303	1		+			
ANR	10141331	CallExpression	log2 ( Y )		10141303	0					
ANR	10141332	Callee	log2		10141303	0					
ANR	10141333	Identifier	log2		10141303	0					
ANR	10141334	ArgumentList	Y		10141303	1					
ANR	10141335	Argument	Y		10141303	0					
ANR	10141336	Identifier	Y		10141303	0					
ANR	10141337	PrimaryExpression	12.		10141303	1					
ANR	10141338	Argument	em		10141303	1					
ANR	10141339	Identifier	em		10141303	0					
ANR	10141340	ReturnType	int		10141303	1					
ANR	10141341	Identifier	LogL10fromY		10141303	2					
ANR	10141342	ParameterList	"double Y , int em"		10141303	3					
ANR	10141343	Parameter	double Y	846:12:23011:23018	10141303	0	True				
ANR	10141344	ParameterType	double		10141303	0					
ANR	10141345	Identifier	Y		10141303	1					
ANR	10141346	Parameter	int em	846:22:23021:23026	10141303	1	True				
ANR	10141347	ParameterType	int		10141303	0					
ANR	10141348	Identifier	em		10141303	1					
ANR	10141349	CFGEntryNode	ENTRY		10141303		True				
ANR	10141350	CFGExitNode	EXIT		10141303		True				
ANR	10141351	Symbol	itrunc		10141303						
ANR	10141352	Symbol	em		10141303						
ANR	10141353	Symbol	Y		10141303						
ANR	10141354	Symbol	log2		10141303						
ANR	10141355	Function	oog_encode	860:0:23308:24574							
ANR	10141356	FunctionDef	"oog_encode (double u , double v)"		10141355	0					
ANR	10141357	CompoundStatement		862:0:23384:24574	10141355	0					
ANR	10141358	Statement	static	863:1:23387:23392	10141355	0	True				
ANR	10141359	IdentifierDeclStatement	int oog_table [ NANGLES ] ;	863:8:23394:23416	10141355	1	True				
ANR	10141360	IdentifierDecl	oog_table [ NANGLES ]		10141355	0					
ANR	10141361	IdentifierDeclType	int [ NANGLES ]		10141355	0					
ANR	10141362	Identifier	oog_table		10141355	1					
ANR	10141363	Identifier	NANGLES		10141355	2					
ANR	10141364	Statement	static	864:1:23419:23424	10141355	2	True				
ANR	10141365	IdentifierDeclStatement	int initialized = 0 ;	864:8:23426:23445	10141355	3	True				
ANR	10141366	IdentifierDecl	initialized = 0		10141355	0					
ANR	10141367	IdentifierDeclType	int		10141355	0					
ANR	10141368	Identifier	initialized		10141355	1					
ANR	10141369	AssignmentExpression	initialized = 0		10141355	2		=			
ANR	10141370	Identifier	initialized		10141355	0					
ANR	10141371	PrimaryExpression	0		10141355	1					
ANR	10141372	Statement	register	865:1:23448:23455	10141355	4	True				
ANR	10141373	IdentifierDeclStatement	int i ;	865:10:23457:23462	10141355	5	True				
ANR	10141374	IdentifierDecl	i		10141355	0					
ANR	10141375	IdentifierDeclType	int		10141355	0					
ANR	10141376	Identifier	i		10141355	1					
ANR	10141377	IfStatement	if ( ! initialized )		10141355	6					
ANR	10141378	Condition	! initialized	867:5:23470:23481	10141355	0	True				
ANR	10141379	UnaryOperationExpression	! initialized		10141355	0					
ANR	10141380	UnaryOperator	!		10141355	0					
ANR	10141381	Identifier	initialized		10141355	1					
ANR	10141382	CompoundStatement		8:2:175:192	10141355	1					
ANR	10141383	IdentifierDeclStatement	"double eps [ NANGLES ] , ua , va , ang , epsa ;"	868:2:23518:23556	10141355	0	True				
ANR	10141384	IdentifierDecl	eps [ NANGLES ]		10141355	0					
ANR	10141385	IdentifierDeclType	double [ NANGLES ]		10141355	0					
ANR	10141386	Identifier	eps		10141355	1					
ANR	10141387	Identifier	NANGLES		10141355	2					
ANR	10141388	IdentifierDecl	ua		10141355	1					
ANR	10141389	IdentifierDeclType	double		10141355	0					
ANR	10141390	Identifier	ua		10141355	1					
ANR	10141391	IdentifierDecl	va		10141355	2					
ANR	10141392	IdentifierDeclType	double		10141355	0					
ANR	10141393	Identifier	va		10141355	1					
ANR	10141394	IdentifierDecl	ang		10141355	3					
ANR	10141395	IdentifierDeclType	double		10141355	0					
ANR	10141396	Identifier	ang		10141355	1					
ANR	10141397	IdentifierDecl	epsa		10141355	4					
ANR	10141398	IdentifierDeclType	double		10141355	0					
ANR	10141399	Identifier	epsa		10141355	1					
ANR	10141400	IdentifierDeclStatement	"int ui , vi , ustep ;"	869:2:23560:23577	10141355	1	True				
ANR	10141401	IdentifierDecl	ui		10141355	0					
ANR	10141402	IdentifierDeclType	int		10141355	0					
ANR	10141403	Identifier	ui		10141355	1					
ANR	10141404	IdentifierDecl	vi		10141355	1					
ANR	10141405	IdentifierDeclType	int		10141355	0					
ANR	10141406	Identifier	vi		10141355	1					
ANR	10141407	IdentifierDecl	ustep		10141355	2					
ANR	10141408	IdentifierDeclType	int		10141355	0					
ANR	10141409	Identifier	ustep		10141355	1					
ANR	10141410	ForStatement	for ( i = NANGLES ; i -- ; )		10141355	2					
ANR	10141411	ForInit	i = NANGLES ;	870:7:23586:23597	10141355	0	True				
ANR	10141412	AssignmentExpression	i = NANGLES		10141355	0		=			
ANR	10141413	Identifier	i		10141355	0					
ANR	10141414	Identifier	NANGLES		10141355	1					
ANR	10141415	Condition	i --	870:20:23599:23601	10141355	1	True				
ANR	10141416	PostIncDecOperationExpression	i --		10141355	0					
ANR	10141417	Identifier	i		10141355	0					
ANR	10141418	IncDec	--		10141355	1					
ANR	10141419	ExpressionStatement	eps [ i ] = 2.	871:3:23609:23620	10141355	2	True				
ANR	10141420	AssignmentExpression	eps [ i ] = 2.		10141355	0		=			
ANR	10141421	ArrayIndexing	eps [ i ]		10141355	0					
ANR	10141422	Identifier	eps		10141355	0					
ANR	10141423	Identifier	i		10141355	1					
ANR	10141424	PrimaryExpression	2.		10141355	1					
ANR	10141425	ForStatement	for ( vi = UV_NVS ; vi -- ; )		10141355	3					
ANR	10141426	ForInit	vi = UV_NVS ;	872:7:23629:23640	10141355	0	True				
ANR	10141427	AssignmentExpression	vi = UV_NVS		10141355	0		=			
ANR	10141428	Identifier	vi		10141355	0					
ANR	10141429	Identifier	UV_NVS		10141355	1					
ANR	10141430	Condition	vi --	872:20:23642:23645	10141355	1	True				
ANR	10141431	PostIncDecOperationExpression	vi --		10141355	0					
ANR	10141432	Identifier	vi		10141355	0					
ANR	10141433	IncDec	--		10141355	1					
ANR	10141434	CompoundStatement		11:28:265:265	10141355	2					
ANR	10141435	ExpressionStatement	va = UV_VSTART + ( vi + .5 ) * UV_SQSIZ	873:3:23655:23688	10141355	0	True				
ANR	10141436	AssignmentExpression	va = UV_VSTART + ( vi + .5 ) * UV_SQSIZ		10141355	0		=			
ANR	10141437	Identifier	va		10141355	0					
ANR	10141438	AdditiveExpression	UV_VSTART + ( vi + .5 ) * UV_SQSIZ		10141355	1		+			
ANR	10141439	Identifier	UV_VSTART		10141355	0					
ANR	10141440	MultiplicativeExpression	( vi + .5 ) * UV_SQSIZ		10141355	1		*			
ANR	10141441	AdditiveExpression	vi + .5		10141355	0		+			
ANR	10141442	Identifier	vi		10141355	0					
ANR	10141443	PrimaryExpression	.5		10141355	1					
ANR	10141444	Identifier	UV_SQSIZ		10141355	1					
ANR	10141445	ExpressionStatement	ustep = uv_row [ vi ] . nus - 1	874:3:23693:23717	10141355	1	True				
ANR	10141446	AssignmentExpression	ustep = uv_row [ vi ] . nus - 1		10141355	0		=			
ANR	10141447	Identifier	ustep		10141355	0					
ANR	10141448	AdditiveExpression	uv_row [ vi ] . nus - 1		10141355	1		-			
ANR	10141449	MemberAccess	uv_row [ vi ] . nus		10141355	0					
ANR	10141450	ArrayIndexing	uv_row [ vi ]		10141355	0					
ANR	10141451	Identifier	uv_row		10141355	0					
ANR	10141452	Identifier	vi		10141355	1					
ANR	10141453	Identifier	nus		10141355	1					
ANR	10141454	PrimaryExpression	1		10141355	1					
ANR	10141455	IfStatement	if ( vi == UV_NVS - 1 || vi == 0 || ustep <= 0 )		10141355	2					
ANR	10141456	Condition	vi == UV_NVS - 1 || vi == 0 || ustep <= 0	875:7:23726:23764	10141355	0	True				
ANR	10141457	OrExpression	vi == UV_NVS - 1 || vi == 0 || ustep <= 0		10141355	0		||			
ANR	10141458	EqualityExpression	vi == UV_NVS - 1		10141355	0		==			
ANR	10141459	Identifier	vi		10141355	0					
ANR	10141460	AdditiveExpression	UV_NVS - 1		10141355	1		-			
ANR	10141461	Identifier	UV_NVS		10141355	0					
ANR	10141462	PrimaryExpression	1		10141355	1					
ANR	10141463	OrExpression	vi == 0 || ustep <= 0		10141355	1		||			
ANR	10141464	EqualityExpression	vi == 0		10141355	0		==			
ANR	10141465	Identifier	vi		10141355	0					
ANR	10141466	PrimaryExpression	0		10141355	1					
ANR	10141467	RelationalExpression	ustep <= 0		10141355	1		<=			
ANR	10141468	Identifier	ustep		10141355	0					
ANR	10141469	PrimaryExpression	0		10141355	1					
ANR	10141470	ExpressionStatement	ustep = 1	876:4:23771:23780	10141355	1	True				
ANR	10141471	AssignmentExpression	ustep = 1		10141355	0		=			
ANR	10141472	Identifier	ustep		10141355	0					
ANR	10141473	PrimaryExpression	1		10141355	1					
ANR	10141474	ForStatement	for ( ui = uv_row [ vi ] . nus - 1 ; ui >= 0 ; ui -= ustep )		10141355	3					
ANR	10141475	ForInit	ui = uv_row [ vi ] . nus - 1 ;	877:8:23790:23811	10141355	0	True				
ANR	10141476	AssignmentExpression	ui = uv_row [ vi ] . nus - 1		10141355	0		=			
ANR	10141477	Identifier	ui		10141355	0					
ANR	10141478	AdditiveExpression	uv_row [ vi ] . nus - 1		10141355	1		-			
ANR	10141479	MemberAccess	uv_row [ vi ] . nus		10141355	0					
ANR	10141480	ArrayIndexing	uv_row [ vi ]		10141355	0					
ANR	10141481	Identifier	uv_row		10141355	0					
ANR	10141482	Identifier	vi		10141355	1					
ANR	10141483	Identifier	nus		10141355	1					
ANR	10141484	PrimaryExpression	1		10141355	1					
ANR	10141485	Condition	ui >= 0	877:31:23813:23819	10141355	1	True				
ANR	10141486	RelationalExpression	ui >= 0		10141355	0		>=			
ANR	10141487	Identifier	ui		10141355	0					
ANR	10141488	PrimaryExpression	0		10141355	1					
ANR	10141489	AssignmentExpression	ui -= ustep	877:40:23822:23832	10141355	2	True	-=			
ANR	10141490	Identifier	ui		10141355	0					
ANR	10141491	Identifier	ustep		10141355	1					
ANR	10141492	CompoundStatement		16:53:450:450	10141355	3					
ANR	10141493	ExpressionStatement	ua = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ	878:4:23841:23882	10141355	0	True				
ANR	10141494	AssignmentExpression	ua = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		10141355	0		=			
ANR	10141495	Identifier	ua		10141355	0					
ANR	10141496	AdditiveExpression	uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		10141355	1		+			
ANR	10141497	MemberAccess	uv_row [ vi ] . ustart		10141355	0					
ANR	10141498	ArrayIndexing	uv_row [ vi ]		10141355	0					
ANR	10141499	Identifier	uv_row		10141355	0					
ANR	10141500	Identifier	vi		10141355	1					
ANR	10141501	Identifier	ustart		10141355	1					
ANR	10141502	MultiplicativeExpression	( ui + .5 ) * UV_SQSIZ		10141355	1		*			
ANR	10141503	AdditiveExpression	ui + .5		10141355	0		+			
ANR	10141504	Identifier	ui		10141355	0					
ANR	10141505	PrimaryExpression	.5		10141355	1					
ANR	10141506	Identifier	UV_SQSIZ		10141355	1					
ANR	10141507	ExpressionStatement	"ang = uv2ang ( ua , va )"	879:4:23888:23908	10141355	1	True				
ANR	10141508	AssignmentExpression	"ang = uv2ang ( ua , va )"		10141355	0		=			
ANR	10141509	Identifier	ang		10141355	0					
ANR	10141510	CallExpression	"uv2ang ( ua , va )"		10141355	1					
ANR	10141511	Callee	uv2ang		10141355	0					
ANR	10141512	Identifier	uv2ang		10141355	0					
ANR	10141513	ArgumentList	ua		10141355	1					
ANR	10141514	Argument	ua		10141355	0					
ANR	10141515	Identifier	ua		10141355	0					
ANR	10141516	Argument	va		10141355	1					
ANR	10141517	Identifier	va		10141355	0					
ANR	10141518	ExpressionStatement	i = ( int ) ang	880:4:23914:23927	10141355	2	True				
ANR	10141519	AssignmentExpression	i = ( int ) ang		10141355	0		=			
ANR	10141520	Identifier	i		10141355	0					
ANR	10141521	CastExpression	( int ) ang		10141355	1					
ANR	10141522	CastTarget	int		10141355	0					
ANR	10141523	Identifier	ang		10141355	1					
ANR	10141524	ExpressionStatement	epsa = fabs ( ang - ( i + .5 ) )	881:4:23933:23958	10141355	3	True				
ANR	10141525	AssignmentExpression	epsa = fabs ( ang - ( i + .5 ) )		10141355	0		=			
ANR	10141526	Identifier	epsa		10141355	0					
ANR	10141527	CallExpression	fabs ( ang - ( i + .5 ) )		10141355	1					
ANR	10141528	Callee	fabs		10141355	0					
ANR	10141529	Identifier	fabs		10141355	0					
ANR	10141530	ArgumentList	ang - ( i + .5 )		10141355	1					
ANR	10141531	Argument	ang - ( i + .5 )		10141355	0					
ANR	10141532	AdditiveExpression	ang - ( i + .5 )		10141355	0		-			
ANR	10141533	Identifier	ang		10141355	0					
ANR	10141534	AdditiveExpression	i + .5		10141355	1		+			
ANR	10141535	Identifier	i		10141355	0					
ANR	10141536	PrimaryExpression	.5		10141355	1					
ANR	10141537	IfStatement	if ( epsa < eps [ i ] )		10141355	4					
ANR	10141538	Condition	epsa < eps [ i ]	882:8:23968:23980	10141355	0	True				
ANR	10141539	RelationalExpression	epsa < eps [ i ]		10141355	0		<			
ANR	10141540	Identifier	epsa		10141355	0					
ANR	10141541	ArrayIndexing	eps [ i ]		10141355	1					
ANR	10141542	Identifier	eps		10141355	0					
ANR	10141543	Identifier	i		10141355	1					
ANR	10141544	CompoundStatement		21:23:598:598	10141355	1					
ANR	10141545	ExpressionStatement	oog_table [ i ] = uv_row [ vi ] . ncum + ui	883:5:23990:24025	10141355	0	True				
ANR	10141546	AssignmentExpression	oog_table [ i ] = uv_row [ vi ] . ncum + ui		10141355	0		=			
ANR	10141547	ArrayIndexing	oog_table [ i ]		10141355	0					
ANR	10141548	Identifier	oog_table		10141355	0					
ANR	10141549	Identifier	i		10141355	1					
ANR	10141550	AdditiveExpression	uv_row [ vi ] . ncum + ui		10141355	1		+			
ANR	10141551	MemberAccess	uv_row [ vi ] . ncum		10141355	0					
ANR	10141552	ArrayIndexing	uv_row [ vi ]		10141355	0					
ANR	10141553	Identifier	uv_row		10141355	0					
ANR	10141554	Identifier	vi		10141355	1					
ANR	10141555	Identifier	ncum		10141355	1					
ANR	10141556	Identifier	ui		10141355	1					
ANR	10141557	ExpressionStatement	eps [ i ] = epsa	884:5:24032:24045	10141355	1	True				
ANR	10141558	AssignmentExpression	eps [ i ] = epsa		10141355	0		=			
ANR	10141559	ArrayIndexing	eps [ i ]		10141355	0					
ANR	10141560	Identifier	eps		10141355	0					
ANR	10141561	Identifier	i		10141355	1					
ANR	10141562	Identifier	epsa		10141355	1					
ANR	10141563	ForStatement	for ( i = NANGLES ; i -- ; )		10141355	4					
ANR	10141564	ForInit	i = NANGLES ;	888:7:24069:24080	10141355	0	True				
ANR	10141565	AssignmentExpression	i = NANGLES		10141355	0		=			
ANR	10141566	Identifier	i		10141355	0					
ANR	10141567	Identifier	NANGLES		10141355	1					
ANR	10141568	Condition	i --	888:20:24082:24084	10141355	1	True				
ANR	10141569	PostIncDecOperationExpression	i --		10141355	0					
ANR	10141570	Identifier	i		10141355	0					
ANR	10141571	IncDec	--		10141355	1					
ANR	10141572	IfStatement	if ( eps [ i ] > 1.5 )		10141355	2					
ANR	10141573	Condition	eps [ i ] > 1.5	889:7:24117:24128	10141355	0	True				
ANR	10141574	RelationalExpression	eps [ i ] > 1.5		10141355	0		>			
ANR	10141575	ArrayIndexing	eps [ i ]		10141355	0					
ANR	10141576	Identifier	eps		10141355	0					
ANR	10141577	Identifier	i		10141355	1					
ANR	10141578	PrimaryExpression	1.5		10141355	1					
ANR	10141579	CompoundStatement		29:4:752:762	10141355	1					
ANR	10141580	IdentifierDeclStatement	"int i1 , i2 ;"	890:4:24137:24147	10141355	0	True				
ANR	10141581	IdentifierDecl	i1		10141355	0					
ANR	10141582	IdentifierDeclType	int		10141355	0					
ANR	10141583	Identifier	i1		10141355	1					
ANR	10141584	IdentifierDecl	i2		10141355	1					
ANR	10141585	IdentifierDeclType	int		10141355	0					
ANR	10141586	Identifier	i2		10141355	1					
ANR	10141587	ForStatement	for ( i1 = 1 ; i1 < NANGLES / 2 ; i1 ++ )		10141355	1					
ANR	10141588	ForInit	i1 = 1 ;	891:9:24158:24164	10141355	0	True				
ANR	10141589	AssignmentExpression	i1 = 1		10141355	0		=			
ANR	10141590	Identifier	i1		10141355	0					
ANR	10141591	PrimaryExpression	1		10141355	1					
ANR	10141592	Condition	i1 < NANGLES / 2	891:17:24166:24179	10141355	1	True				
ANR	10141593	RelationalExpression	i1 < NANGLES / 2		10141355	0		<			
ANR	10141594	Identifier	i1		10141355	0					
ANR	10141595	MultiplicativeExpression	NANGLES / 2		10141355	1		/			
ANR	10141596	Identifier	NANGLES		10141355	0					
ANR	10141597	PrimaryExpression	2		10141355	1					
ANR	10141598	PostIncDecOperationExpression	i1 ++	891:33:24182:24185	10141355	2	True				
ANR	10141599	Identifier	i1		10141355	0					
ANR	10141600	IncDec	++		10141355	1					
ANR	10141601	IfStatement	if ( eps [ ( i + i1 ) % NANGLES ] < 1.5 )		10141355	3					
ANR	10141602	Condition	eps [ ( i + i1 ) % NANGLES ] < 1.5	892:9:24197:24221	10141355	0	True				
ANR	10141603	RelationalExpression	eps [ ( i + i1 ) % NANGLES ] < 1.5		10141355	0		<			
ANR	10141604	ArrayIndexing	eps [ ( i + i1 ) % NANGLES ]		10141355	0					
ANR	10141605	Identifier	eps		10141355	0					
ANR	10141606	MultiplicativeExpression	( i + i1 ) % NANGLES		10141355	1		%			
ANR	10141607	AdditiveExpression	i + i1		10141355	0		+			
ANR	10141608	Identifier	i		10141355	0					
ANR	10141609	Identifier	i1		10141355	1					
ANR	10141610	Identifier	NANGLES		10141355	1					
ANR	10141611	PrimaryExpression	1.5		10141355	1					
ANR	10141612	BreakStatement	break ;	893:6:24230:24235	10141355	1	True				
ANR	10141613	ForStatement	for ( i2 = 1 ; i2 < NANGLES / 2 ; i2 ++ )		10141355	2					
ANR	10141614	ForInit	i2 = 1 ;	894:9:24246:24252	10141355	0	True				
ANR	10141615	AssignmentExpression	i2 = 1		10141355	0		=			
ANR	10141616	Identifier	i2		10141355	0					
ANR	10141617	PrimaryExpression	1		10141355	1					
ANR	10141618	Condition	i2 < NANGLES / 2	894:17:24254:24267	10141355	1	True				
ANR	10141619	RelationalExpression	i2 < NANGLES / 2		10141355	0		<			
ANR	10141620	Identifier	i2		10141355	0					
ANR	10141621	MultiplicativeExpression	NANGLES / 2		10141355	1		/			
ANR	10141622	Identifier	NANGLES		10141355	0					
ANR	10141623	PrimaryExpression	2		10141355	1					
ANR	10141624	PostIncDecOperationExpression	i2 ++	894:33:24270:24273	10141355	2	True				
ANR	10141625	Identifier	i2		10141355	0					
ANR	10141626	IncDec	++		10141355	1					
ANR	10141627	IfStatement	if ( eps [ ( i + NANGLES - i2 ) % NANGLES ] < 1.5 )		10141355	3					
ANR	10141628	Condition	eps [ ( i + NANGLES - i2 ) % NANGLES ] < 1.5	895:9:24285:24317	10141355	0	True				
ANR	10141629	RelationalExpression	eps [ ( i + NANGLES - i2 ) % NANGLES ] < 1.5		10141355	0		<			
ANR	10141630	ArrayIndexing	eps [ ( i + NANGLES - i2 ) % NANGLES ]		10141355	0					
ANR	10141631	Identifier	eps		10141355	0					
ANR	10141632	MultiplicativeExpression	( i + NANGLES - i2 ) % NANGLES		10141355	1		%			
ANR	10141633	AdditiveExpression	i + NANGLES - i2		10141355	0		+			
ANR	10141634	Identifier	i		10141355	0					
ANR	10141635	AdditiveExpression	NANGLES - i2		10141355	1		-			
ANR	10141636	Identifier	NANGLES		10141355	0					
ANR	10141637	Identifier	i2		10141355	1					
ANR	10141638	Identifier	NANGLES		10141355	1					
ANR	10141639	PrimaryExpression	1.5		10141355	1					
ANR	10141640	BreakStatement	break ;	896:6:24326:24331	10141355	1	True				
ANR	10141641	IfStatement	if ( i1 < i2 )		10141355	3					
ANR	10141642	Condition	i1 < i2	897:8:24341:24347	10141355	0	True				
ANR	10141643	RelationalExpression	i1 < i2		10141355	0		<			
ANR	10141644	Identifier	i1		10141355	0					
ANR	10141645	Identifier	i2		10141355	1					
ANR	10141646	ExpressionStatement	oog_table [ i ] = oog_table [ ( i + i1 ) % NANGLES ]	898:5:24355:24401	10141355	1	True				
ANR	10141647	AssignmentExpression	oog_table [ i ] = oog_table [ ( i + i1 ) % NANGLES ]		10141355	0		=			
ANR	10141648	ArrayIndexing	oog_table [ i ]		10141355	0					
ANR	10141649	Identifier	oog_table		10141355	0					
ANR	10141650	Identifier	i		10141355	1					
ANR	10141651	ArrayIndexing	oog_table [ ( i + i1 ) % NANGLES ]		10141355	1					
ANR	10141652	Identifier	oog_table		10141355	0					
ANR	10141653	MultiplicativeExpression	( i + i1 ) % NANGLES		10141355	1		%			
ANR	10141654	AdditiveExpression	i + i1		10141355	0		+			
ANR	10141655	Identifier	i		10141355	0					
ANR	10141656	Identifier	i1		10141355	1					
ANR	10141657	Identifier	NANGLES		10141355	1					
ANR	10141658	ElseStatement	else		10141355	0					
ANR	10141659	ExpressionStatement	oog_table [ i ] = oog_table [ ( i + NANGLES - i2 ) % NANGLES ]	901:5:24417:24471	10141355	0	True				
ANR	10141660	AssignmentExpression	oog_table [ i ] = oog_table [ ( i + NANGLES - i2 ) % NANGLES ]		10141355	0		=			
ANR	10141661	ArrayIndexing	oog_table [ i ]		10141355	0					
ANR	10141662	Identifier	oog_table		10141355	0					
ANR	10141663	Identifier	i		10141355	1					
ANR	10141664	ArrayIndexing	oog_table [ ( i + NANGLES - i2 ) % NANGLES ]		10141355	1					
ANR	10141665	Identifier	oog_table		10141355	0					
ANR	10141666	MultiplicativeExpression	( i + NANGLES - i2 ) % NANGLES		10141355	1		%			
ANR	10141667	AdditiveExpression	i + NANGLES - i2		10141355	0		+			
ANR	10141668	Identifier	i		10141355	0					
ANR	10141669	AdditiveExpression	NANGLES - i2		10141355	1		-			
ANR	10141670	Identifier	NANGLES		10141355	0					
ANR	10141671	Identifier	i2		10141355	1					
ANR	10141672	Identifier	NANGLES		10141355	1					
ANR	10141673	ExpressionStatement	initialized = 1	904:2:24480:24495	10141355	5	True				
ANR	10141674	AssignmentExpression	initialized = 1		10141355	0		=			
ANR	10141675	Identifier	initialized		10141355	0					
ANR	10141676	PrimaryExpression	1		10141355	1					
ANR	10141677	ExpressionStatement	"i = ( int ) uv2ang ( u , v )"	906:1:24501:24523	10141355	7	True				
ANR	10141678	AssignmentExpression	"i = ( int ) uv2ang ( u , v )"		10141355	0		=			
ANR	10141679	Identifier	i		10141355	0					
ANR	10141680	CastExpression	"( int ) uv2ang ( u , v )"		10141355	1					
ANR	10141681	CastTarget	int		10141355	0					
ANR	10141682	CallExpression	"uv2ang ( u , v )"		10141355	1					
ANR	10141683	Callee	uv2ang		10141355	0					
ANR	10141684	Identifier	uv2ang		10141355	0					
ANR	10141685	ArgumentList	u		10141355	1					
ANR	10141686	Argument	u		10141355	0					
ANR	10141687	Identifier	u		10141355	0					
ANR	10141688	Argument	v		10141355	1					
ANR	10141689	Identifier	v		10141355	0					
ANR	10141690	ReturnStatement	return ( oog_table [ i ] ) ;	907:1:24551:24572	10141355	8	True				
ANR	10141691	ArrayIndexing	oog_table [ i ]		10141355	0					
ANR	10141692	Identifier	oog_table		10141355	0					
ANR	10141693	Identifier	i		10141355	1					
ANR	10141694	ReturnType	static int		10141355	1					
ANR	10141695	Identifier	oog_encode		10141355	2					
ANR	10141696	ParameterList	"double u , double v"		10141355	3					
ANR	10141697	Parameter	double u	861:11:23330:23337	10141355	0	True				
ANR	10141698	ParameterType	double		10141355	0					
ANR	10141699	Identifier	u		10141355	1					
ANR	10141700	Parameter	double v	861:21:23340:23347	10141355	1	True				
ANR	10141701	ParameterType	double		10141355	0					
ANR	10141702	Identifier	v		10141355	1					
ANR	10141703	CFGEntryNode	ENTRY		10141355		True				
ANR	10141704	CFGExitNode	EXIT		10141355		True				
ANR	10141705	Symbol	* NANGLES		10141355						
ANR	10141706	Symbol	oog_table		10141355						
ANR	10141707	Symbol	ua		10141355						
ANR	10141708	Symbol	* i2		10141355						
ANR	10141709	Symbol	UV_VSTART		10141355						
ANR	10141710	Symbol	* i1		10141355						
ANR	10141711	Symbol	ui		10141355						
ANR	10141712	Symbol	epsa		10141355						
ANR	10141713	Symbol	initialized		10141355						
ANR	10141714	Symbol	UV_NVS		10141355						
ANR	10141715	Symbol	ang		10141355						
ANR	10141716	Symbol	fabs		10141355						
ANR	10141717	Symbol	ustep		10141355						
ANR	10141718	Symbol	UV_SQSIZ		10141355						
ANR	10141719	Symbol	i1		10141355						
ANR	10141720	Symbol	i		10141355						
ANR	10141721	Symbol	eps		10141355						
ANR	10141722	Symbol	i2		10141355						
ANR	10141723	Symbol	va		10141355						
ANR	10141724	Symbol	* eps		10141355						
ANR	10141725	Symbol	uv_row		10141355						
ANR	10141726	Symbol	uv_row [ vi ] . ncum		10141355						
ANR	10141727	Symbol	uv_row [ vi ] . nus		10141355						
ANR	10141728	Symbol	* oog_table		10141355						
ANR	10141729	Symbol	vi		10141355						
ANR	10141730	Symbol	NANGLES		10141355						
ANR	10141731	Symbol	* i		10141355						
ANR	10141732	Symbol	u		10141355						
ANR	10141733	Symbol	v		10141355						
ANR	10141734	Symbol	uv2ang		10141355						
ANR	10141735	Symbol	* uv_row		10141355						
ANR	10141736	Symbol	* vi		10141355						
ANR	10141737	Symbol	uv_row [ vi ] . ustart		10141355						
ANR	10141738	Function	uv_encode	916:0:24640:25081							
ANR	10141739	FunctionDef	"uv_encode (double u , double v , int em)"		10141738	0					
ANR	10141740	CompoundStatement		918:0:24715:25081	10141738	0					
ANR	10141741	Statement	register	919:1:24718:24725	10141738	0	True				
ANR	10141742	IdentifierDeclStatement	"int vi , ui ;"	919:10:24727:24737	10141738	1	True				
ANR	10141743	IdentifierDecl	vi		10141738	0					
ANR	10141744	IdentifierDeclType	int		10141738	0					
ANR	10141745	Identifier	vi		10141738	1					
ANR	10141746	IdentifierDecl	ui		10141738	1					
ANR	10141747	IdentifierDeclType	int		10141738	0					
ANR	10141748	Identifier	ui		10141738	1					
ANR	10141749	IfStatement	if ( v < UV_VSTART )		10141738	2					
ANR	10141750	Condition	v < UV_VSTART	921:5:24745:24757	10141738	0	True				
ANR	10141751	RelationalExpression	v < UV_VSTART		10141738	0		<			
ANR	10141752	Identifier	v		10141738	0					
ANR	10141753	Identifier	UV_VSTART		10141738	1					
ANR	10141754	ReturnStatement	"return oog_encode ( u , v ) ;"	922:2:24762:24785	10141738	1	True				
ANR	10141755	CallExpression	"oog_encode ( u , v )"		10141738	0					
ANR	10141756	Callee	oog_encode		10141738	0					
ANR	10141757	Identifier	oog_encode		10141738	0					
ANR	10141758	ArgumentList	u		10141738	1					
ANR	10141759	Argument	u		10141738	0					
ANR	10141760	Identifier	u		10141738	0					
ANR	10141761	Argument	v		10141738	1					
ANR	10141762	Identifier	v		10141738	0					
ANR	10141763	ExpressionStatement	"vi = itrunc ( ( v - UV_VSTART ) * ( 1. / UV_SQSIZ ) , em )"	923:1:24788:24834	10141738	3	True				
ANR	10141764	AssignmentExpression	"vi = itrunc ( ( v - UV_VSTART ) * ( 1. / UV_SQSIZ ) , em )"		10141738	0		=			
ANR	10141765	Identifier	vi		10141738	0					
ANR	10141766	CallExpression	"itrunc ( ( v - UV_VSTART ) * ( 1. / UV_SQSIZ ) , em )"		10141738	1					
ANR	10141767	Callee	itrunc		10141738	0					
ANR	10141768	Identifier	itrunc		10141738	0					
ANR	10141769	ArgumentList	( v - UV_VSTART ) * ( 1. / UV_SQSIZ )		10141738	1					
ANR	10141770	Argument	( v - UV_VSTART ) * ( 1. / UV_SQSIZ )		10141738	0					
ANR	10141771	MultiplicativeExpression	( v - UV_VSTART ) * ( 1. / UV_SQSIZ )		10141738	0		*			
ANR	10141772	AdditiveExpression	v - UV_VSTART		10141738	0		-			
ANR	10141773	Identifier	v		10141738	0					
ANR	10141774	Identifier	UV_VSTART		10141738	1					
ANR	10141775	MultiplicativeExpression	1. / UV_SQSIZ		10141738	1		/			
ANR	10141776	PrimaryExpression	1.		10141738	0					
ANR	10141777	Identifier	UV_SQSIZ		10141738	1					
ANR	10141778	Argument	em		10141738	1					
ANR	10141779	Identifier	em		10141738	0					
ANR	10141780	IfStatement	if ( vi >= UV_NVS )		10141738	4					
ANR	10141781	Condition	vi >= UV_NVS	924:5:24841:24852	10141738	0	True				
ANR	10141782	RelationalExpression	vi >= UV_NVS		10141738	0		>=			
ANR	10141783	Identifier	vi		10141738	0					
ANR	10141784	Identifier	UV_NVS		10141738	1					
ANR	10141785	ReturnStatement	"return oog_encode ( u , v ) ;"	925:2:24857:24880	10141738	1	True				
ANR	10141786	CallExpression	"oog_encode ( u , v )"		10141738	0					
ANR	10141787	Callee	oog_encode		10141738	0					
ANR	10141788	Identifier	oog_encode		10141738	0					
ANR	10141789	ArgumentList	u		10141738	1					
ANR	10141790	Argument	u		10141738	0					
ANR	10141791	Identifier	u		10141738	0					
ANR	10141792	Argument	v		10141738	1					
ANR	10141793	Identifier	v		10141738	0					
ANR	10141794	IfStatement	if ( u < uv_row [ vi ] . ustart )		10141738	5					
ANR	10141795	Condition	u < uv_row [ vi ] . ustart	926:5:24887:24907	10141738	0	True				
ANR	10141796	RelationalExpression	u < uv_row [ vi ] . ustart		10141738	0		<			
ANR	10141797	Identifier	u		10141738	0					
ANR	10141798	MemberAccess	uv_row [ vi ] . ustart		10141738	1					
ANR	10141799	ArrayIndexing	uv_row [ vi ]		10141738	0					
ANR	10141800	Identifier	uv_row		10141738	0					
ANR	10141801	Identifier	vi		10141738	1					
ANR	10141802	Identifier	ustart		10141738	1					
ANR	10141803	ReturnStatement	"return oog_encode ( u , v ) ;"	927:2:24912:24935	10141738	1	True				
ANR	10141804	CallExpression	"oog_encode ( u , v )"		10141738	0					
ANR	10141805	Callee	oog_encode		10141738	0					
ANR	10141806	Identifier	oog_encode		10141738	0					
ANR	10141807	ArgumentList	u		10141738	1					
ANR	10141808	Argument	u		10141738	0					
ANR	10141809	Identifier	u		10141738	0					
ANR	10141810	Argument	v		10141738	1					
ANR	10141811	Identifier	v		10141738	0					
ANR	10141812	ExpressionStatement	"ui = itrunc ( ( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ ) , em )"	928:1:24938:24992	10141738	6	True				
ANR	10141813	AssignmentExpression	"ui = itrunc ( ( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ ) , em )"		10141738	0		=			
ANR	10141814	Identifier	ui		10141738	0					
ANR	10141815	CallExpression	"itrunc ( ( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ ) , em )"		10141738	1					
ANR	10141816	Callee	itrunc		10141738	0					
ANR	10141817	Identifier	itrunc		10141738	0					
ANR	10141818	ArgumentList	( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ )		10141738	1					
ANR	10141819	Argument	( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ )		10141738	0					
ANR	10141820	MultiplicativeExpression	( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ )		10141738	0		*			
ANR	10141821	AdditiveExpression	u - uv_row [ vi ] . ustart		10141738	0		-			
ANR	10141822	Identifier	u		10141738	0					
ANR	10141823	MemberAccess	uv_row [ vi ] . ustart		10141738	1					
ANR	10141824	ArrayIndexing	uv_row [ vi ]		10141738	0					
ANR	10141825	Identifier	uv_row		10141738	0					
ANR	10141826	Identifier	vi		10141738	1					
ANR	10141827	Identifier	ustart		10141738	1					
ANR	10141828	MultiplicativeExpression	1. / UV_SQSIZ		10141738	1		/			
ANR	10141829	PrimaryExpression	1.		10141738	0					
ANR	10141830	Identifier	UV_SQSIZ		10141738	1					
ANR	10141831	Argument	em		10141738	1					
ANR	10141832	Identifier	em		10141738	0					
ANR	10141833	IfStatement	if ( ui >= uv_row [ vi ] . nus )		10141738	7					
ANR	10141834	Condition	ui >= uv_row [ vi ] . nus	929:5:24999:25018	10141738	0	True				
ANR	10141835	RelationalExpression	ui >= uv_row [ vi ] . nus		10141738	0		>=			
ANR	10141836	Identifier	ui		10141738	0					
ANR	10141837	MemberAccess	uv_row [ vi ] . nus		10141738	1					
ANR	10141838	ArrayIndexing	uv_row [ vi ]		10141738	0					
ANR	10141839	Identifier	uv_row		10141738	0					
ANR	10141840	Identifier	vi		10141738	1					
ANR	10141841	Identifier	nus		10141738	1					
ANR	10141842	ReturnStatement	"return oog_encode ( u , v ) ;"	930:2:25023:25046	10141738	1	True				
ANR	10141843	CallExpression	"oog_encode ( u , v )"		10141738	0					
ANR	10141844	Callee	oog_encode		10141738	0					
ANR	10141845	Identifier	oog_encode		10141738	0					
ANR	10141846	ArgumentList	u		10141738	1					
ANR	10141847	Argument	u		10141738	0					
ANR	10141848	Identifier	u		10141738	0					
ANR	10141849	Argument	v		10141738	1					
ANR	10141850	Identifier	v		10141738	0					
ANR	10141851	ReturnStatement	return ( uv_row [ vi ] . ncum + ui ) ;	932:1:25050:25079	10141738	8	True				
ANR	10141852	AdditiveExpression	uv_row [ vi ] . ncum + ui		10141738	0		+			
ANR	10141853	MemberAccess	uv_row [ vi ] . ncum		10141738	0					
ANR	10141854	ArrayIndexing	uv_row [ vi ]		10141738	0					
ANR	10141855	Identifier	uv_row		10141738	0					
ANR	10141856	Identifier	vi		10141738	1					
ANR	10141857	Identifier	ncum		10141738	1					
ANR	10141858	Identifier	ui		10141738	1					
ANR	10141859	ReturnType	int		10141738	1					
ANR	10141860	Identifier	uv_encode		10141738	2					
ANR	10141861	ParameterList	"double u , double v , int em"		10141738	3					
ANR	10141862	Parameter	double u	917:10:24654:24661	10141738	0	True				
ANR	10141863	ParameterType	double		10141738	0					
ANR	10141864	Identifier	u		10141738	1					
ANR	10141865	Parameter	double v	917:20:24664:24671	10141738	1	True				
ANR	10141866	ParameterType	double		10141738	0					
ANR	10141867	Identifier	v		10141738	1					
ANR	10141868	Parameter	int em	917:30:24674:24679	10141738	2	True				
ANR	10141869	ParameterType	int		10141738	0					
ANR	10141870	Identifier	em		10141738	1					
ANR	10141871	CFGEntryNode	ENTRY		10141738		True				
ANR	10141872	CFGExitNode	EXIT		10141738		True				
ANR	10141873	Symbol	itrunc		10141738						
ANR	10141874	Symbol	UV_SQSIZ		10141738						
ANR	10141875	Symbol	em		10141738						
ANR	10141876	Symbol	UV_VSTART		10141738						
ANR	10141877	Symbol	oog_encode		10141738						
ANR	10141878	Symbol	uv_row		10141738						
ANR	10141879	Symbol	uv_row [ vi ] . ncum		10141738						
ANR	10141880	Symbol	uv_row [ vi ] . nus		10141738						
ANR	10141881	Symbol	vi		10141738						
ANR	10141882	Symbol	ui		10141738						
ANR	10141883	Symbol	u		10141738						
ANR	10141884	Symbol	v		10141738						
ANR	10141885	Symbol	UV_NVS		10141738						
ANR	10141886	Symbol	* uv_row		10141738						
ANR	10141887	Symbol	* vi		10141738						
ANR	10141888	Symbol	uv_row [ vi ] . ustart		10141738						
ANR	10141889	Function	uv_decode	938:0:25117:25654							
ANR	10141890	FunctionDef	"uv_decode (double * up , double * vp , int c)"		10141889	0					
ANR	10141891	CompoundStatement		940:0:25189:25654	10141889	0					
ANR	10141892	IdentifierDeclStatement	"int upper , lower ;"	941:1:25192:25208	10141889	0	True				
ANR	10141893	IdentifierDecl	upper		10141889	0					
ANR	10141894	IdentifierDeclType	int		10141889	0					
ANR	10141895	Identifier	upper		10141889	1					
ANR	10141896	IdentifierDecl	lower		10141889	1					
ANR	10141897	IdentifierDeclType	int		10141889	0					
ANR	10141898	Identifier	lower		10141889	1					
ANR	10141899	Statement	register	942:1:25211:25218	10141889	1	True				
ANR	10141900	IdentifierDeclStatement	"int ui , vi ;"	942:10:25220:25230	10141889	2	True				
ANR	10141901	IdentifierDecl	ui		10141889	0					
ANR	10141902	IdentifierDeclType	int		10141889	0					
ANR	10141903	Identifier	ui		10141889	1					
ANR	10141904	IdentifierDecl	vi		10141889	1					
ANR	10141905	IdentifierDeclType	int		10141889	0					
ANR	10141906	Identifier	vi		10141889	1					
ANR	10141907	IfStatement	if ( c < 0 || c >= UV_NDIVS )		10141889	3					
ANR	10141908	Condition	c < 0 || c >= UV_NDIVS	944:5:25238:25259	10141889	0	True				
ANR	10141909	OrExpression	c < 0 || c >= UV_NDIVS		10141889	0		||			
ANR	10141910	RelationalExpression	c < 0		10141889	0		<			
ANR	10141911	Identifier	c		10141889	0					
ANR	10141912	PrimaryExpression	0		10141889	1					
ANR	10141913	RelationalExpression	c >= UV_NDIVS		10141889	1		>=			
ANR	10141914	Identifier	c		10141889	0					
ANR	10141915	Identifier	UV_NDIVS		10141889	1					
ANR	10141916	ReturnStatement	return ( - 1 ) ;	945:2:25264:25275	10141889	1	True				
ANR	10141917	UnaryOperationExpression	- 1		10141889	0					
ANR	10141918	UnaryOperator	-		10141889	0					
ANR	10141919	PrimaryExpression	1		10141889	1					
ANR	10141920	ExpressionStatement	lower = 0	946:1:25278:25287	10141889	4	True				
ANR	10141921	AssignmentExpression	lower = 0		10141889	0		=			
ANR	10141922	Identifier	lower		10141889	0					
ANR	10141923	PrimaryExpression	0		10141889	1					
ANR	10141924	ExpressionStatement	upper = UV_NVS	947:1:25313:25327	10141889	5	True				
ANR	10141925	AssignmentExpression	upper = UV_NVS		10141889	0		=			
ANR	10141926	Identifier	upper		10141889	0					
ANR	10141927	Identifier	UV_NVS		10141889	1					
ANR	10141928	WhileStatement	while ( upper - lower > 1 )		10141889	6					
ANR	10141929	Condition	upper - lower > 1	948:8:25337:25353	10141889	0	True				
ANR	10141930	RelationalExpression	upper - lower > 1		10141889	0		>			
ANR	10141931	AdditiveExpression	upper - lower		10141889	0		-			
ANR	10141932	Identifier	upper		10141889	0					
ANR	10141933	Identifier	lower		10141889	1					
ANR	10141934	PrimaryExpression	1		10141889	1					
ANR	10141935	CompoundStatement		9:27:166:166	10141889	1					
ANR	10141936	ExpressionStatement	vi = ( lower + upper ) >> 1	949:2:25360:25385	10141889	0	True				
ANR	10141937	AssignmentExpression	vi = ( lower + upper ) >> 1		10141889	0		=			
ANR	10141938	Identifier	vi		10141889	0					
ANR	10141939	ShiftExpression	( lower + upper ) >> 1		10141889	1		>>			
ANR	10141940	AdditiveExpression	lower + upper		10141889	0		+			
ANR	10141941	Identifier	lower		10141889	0					
ANR	10141942	Identifier	upper		10141889	1					
ANR	10141943	PrimaryExpression	1		10141889	1					
ANR	10141944	ExpressionStatement	ui = c - uv_row [ vi ] . ncum	950:2:25389:25413	10141889	1	True				
ANR	10141945	AssignmentExpression	ui = c - uv_row [ vi ] . ncum		10141889	0		=			
ANR	10141946	Identifier	ui		10141889	0					
ANR	10141947	AdditiveExpression	c - uv_row [ vi ] . ncum		10141889	1		-			
ANR	10141948	Identifier	c		10141889	0					
ANR	10141949	MemberAccess	uv_row [ vi ] . ncum		10141889	1					
ANR	10141950	ArrayIndexing	uv_row [ vi ]		10141889	0					
ANR	10141951	Identifier	uv_row		10141889	0					
ANR	10141952	Identifier	vi		10141889	1					
ANR	10141953	Identifier	ncum		10141889	1					
ANR	10141954	IfStatement	if ( ui > 0 )		10141889	2					
ANR	10141955	Condition	ui > 0	951:6:25421:25426	10141889	0	True				
ANR	10141956	RelationalExpression	ui > 0		10141889	0		>			
ANR	10141957	Identifier	ui		10141889	0					
ANR	10141958	PrimaryExpression	0		10141889	1					
ANR	10141959	ExpressionStatement	lower = vi	952:3:25432:25442	10141889	1	True				
ANR	10141960	AssignmentExpression	lower = vi		10141889	0		=			
ANR	10141961	Identifier	lower		10141889	0					
ANR	10141962	Identifier	vi		10141889	1					
ANR	10141963	ElseStatement	else		10141889	0					
ANR	10141964	IfStatement	if ( ui < 0 )		10141889	0					
ANR	10141965	Condition	ui < 0	953:11:25455:25460	10141889	0	True				
ANR	10141966	RelationalExpression	ui < 0		10141889	0		<			
ANR	10141967	Identifier	ui		10141889	0					
ANR	10141968	PrimaryExpression	0		10141889	1					
ANR	10141969	ExpressionStatement	upper = vi	954:3:25466:25476	10141889	1	True				
ANR	10141970	AssignmentExpression	upper = vi		10141889	0		=			
ANR	10141971	Identifier	upper		10141889	0					
ANR	10141972	Identifier	vi		10141889	1					
ANR	10141973	ElseStatement	else		10141889	0					
ANR	10141974	CompoundStatement		16:7:295:295	10141889	0					
ANR	10141975	ExpressionStatement	lower = vi	956:3:25490:25500	10141889	0	True				
ANR	10141976	AssignmentExpression	lower = vi		10141889	0		=			
ANR	10141977	Identifier	lower		10141889	0					
ANR	10141978	Identifier	vi		10141889	1					
ANR	10141979	BreakStatement	break ;	957:3:25505:25510	10141889	1	True				
ANR	10141980	ExpressionStatement	vi = lower	960:1:25520:25530	10141889	7	True				
ANR	10141981	AssignmentExpression	vi = lower		10141889	0		=			
ANR	10141982	Identifier	vi		10141889	0					
ANR	10141983	Identifier	lower		10141889	1					
ANR	10141984	ExpressionStatement	ui = c - uv_row [ vi ] . ncum	961:1:25533:25557	10141889	8	True				
ANR	10141985	AssignmentExpression	ui = c - uv_row [ vi ] . ncum		10141889	0		=			
ANR	10141986	Identifier	ui		10141889	0					
ANR	10141987	AdditiveExpression	c - uv_row [ vi ] . ncum		10141889	1		-			
ANR	10141988	Identifier	c		10141889	0					
ANR	10141989	MemberAccess	uv_row [ vi ] . ncum		10141889	1					
ANR	10141990	ArrayIndexing	uv_row [ vi ]		10141889	0					
ANR	10141991	Identifier	uv_row		10141889	0					
ANR	10141992	Identifier	vi		10141889	1					
ANR	10141993	Identifier	ncum		10141889	1					
ANR	10141994	ExpressionStatement	* up = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ	962:1:25560:25602	10141889	9	True				
ANR	10141995	AssignmentExpression	* up = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		10141889	0		=			
ANR	10141996	UnaryOperationExpression	* up		10141889	0					
ANR	10141997	UnaryOperator	*		10141889	0					
ANR	10141998	Identifier	up		10141889	1					
ANR	10141999	AdditiveExpression	uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		10141889	1		+			
ANR	10142000	MemberAccess	uv_row [ vi ] . ustart		10141889	0					
ANR	10142001	ArrayIndexing	uv_row [ vi ]		10141889	0					
ANR	10142002	Identifier	uv_row		10141889	0					
ANR	10142003	Identifier	vi		10141889	1					
ANR	10142004	Identifier	ustart		10141889	1					
ANR	10142005	MultiplicativeExpression	( ui + .5 ) * UV_SQSIZ		10141889	1		*			
ANR	10142006	AdditiveExpression	ui + .5		10141889	0		+			
ANR	10142007	Identifier	ui		10141889	0					
ANR	10142008	PrimaryExpression	.5		10141889	1					
ANR	10142009	Identifier	UV_SQSIZ		10141889	1					
ANR	10142010	ExpressionStatement	* vp = UV_VSTART + ( vi + .5 ) * UV_SQSIZ	963:1:25605:25639	10141889	10	True				
ANR	10142011	AssignmentExpression	* vp = UV_VSTART + ( vi + .5 ) * UV_SQSIZ		10141889	0		=			
ANR	10142012	UnaryOperationExpression	* vp		10141889	0					
ANR	10142013	UnaryOperator	*		10141889	0					
ANR	10142014	Identifier	vp		10141889	1					
ANR	10142015	AdditiveExpression	UV_VSTART + ( vi + .5 ) * UV_SQSIZ		10141889	1		+			
ANR	10142016	Identifier	UV_VSTART		10141889	0					
ANR	10142017	MultiplicativeExpression	( vi + .5 ) * UV_SQSIZ		10141889	1		*			
ANR	10142018	AdditiveExpression	vi + .5		10141889	0		+			
ANR	10142019	Identifier	vi		10141889	0					
ANR	10142020	PrimaryExpression	.5		10141889	1					
ANR	10142021	Identifier	UV_SQSIZ		10141889	1					
ANR	10142022	ReturnStatement	return ( 0 ) ;	964:1:25642:25652	10141889	11	True				
ANR	10142023	PrimaryExpression	0		10141889	0					
ANR	10142024	ReturnType	int		10141889	1					
ANR	10142025	Identifier	uv_decode		10141889	2					
ANR	10142026	ParameterList	"double * up , double * vp , int c"		10141889	3					
ANR	10142027	Parameter	double * up	939:10:25131:25140	10141889	0	True				
ANR	10142028	ParameterType	double *		10141889	0					
ANR	10142029	Identifier	up		10141889	1					
ANR	10142030	Parameter	double * vp	939:22:25143:25152	10141889	1	True				
ANR	10142031	ParameterType	double *		10141889	0					
ANR	10142032	Identifier	vp		10141889	1					
ANR	10142033	Parameter	int c	939:34:25155:25159	10141889	2	True				
ANR	10142034	ParameterType	int		10141889	0					
ANR	10142035	Identifier	c		10141889	1					
ANR	10142036	CFGEntryNode	ENTRY		10141889		True				
ANR	10142037	CFGExitNode	EXIT		10141889		True				
ANR	10142038	Symbol	* up		10141889						
ANR	10142039	Symbol	c		10141889						
ANR	10142040	Symbol	* vp		10141889						
ANR	10142041	Symbol	upper		10141889						
ANR	10142042	Symbol	lower		10141889						
ANR	10142043	Symbol	UV_SQSIZ		10141889						
ANR	10142044	Symbol	UV_VSTART		10141889						
ANR	10142045	Symbol	uv_row		10141889						
ANR	10142046	Symbol	uv_row [ vi ] . ncum		10141889						
ANR	10142047	Symbol	UV_NDIVS		10141889						
ANR	10142048	Symbol	vi		10141889						
ANR	10142049	Symbol	ui		10141889						
ANR	10142050	Symbol	UV_NVS		10141889						
ANR	10142051	Symbol	* uv_row		10141889						
ANR	10142052	Symbol	vp		10141889						
ANR	10142053	Symbol	* vi		10141889						
ANR	10142054	Symbol	up		10141889						
ANR	10142055	Symbol	uv_row [ vi ] . ustart		10141889						
ANR	10142056	Function	LogLuv24toXYZ	970:0:25690:26163							
ANR	10142057	FunctionDef	"LogLuv24toXYZ (uint32 p , float XYZ [ 3 ])"		10142056	0					
ANR	10142058	CompoundStatement		972:0:25733:26163	10142056	0					
ANR	10142059	IdentifierDeclStatement	int Ce ;	973:1:25736:25742	10142056	0	True				
ANR	10142060	IdentifierDecl	Ce		10142056	0					
ANR	10142061	IdentifierDeclType	int		10142056	0					
ANR	10142062	Identifier	Ce		10142056	1					
ANR	10142063	IdentifierDeclStatement	"double L , u , v , s , x , y ;"	974:1:25745:25768	10142056	1	True				
ANR	10142064	IdentifierDecl	L		10142056	0					
ANR	10142065	IdentifierDeclType	double		10142056	0					
ANR	10142066	Identifier	L		10142056	1					
ANR	10142067	IdentifierDecl	u		10142056	1					
ANR	10142068	IdentifierDeclType	double		10142056	0					
ANR	10142069	Identifier	u		10142056	1					
ANR	10142070	IdentifierDecl	v		10142056	2					
ANR	10142071	IdentifierDeclType	double		10142056	0					
ANR	10142072	Identifier	v		10142056	1					
ANR	10142073	IdentifierDecl	s		10142056	3					
ANR	10142074	IdentifierDeclType	double		10142056	0					
ANR	10142075	Identifier	s		10142056	1					
ANR	10142076	IdentifierDecl	x		10142056	4					
ANR	10142077	IdentifierDeclType	double		10142056	0					
ANR	10142078	Identifier	x		10142056	1					
ANR	10142079	IdentifierDecl	y		10142056	5					
ANR	10142080	IdentifierDeclType	double		10142056	0					
ANR	10142081	Identifier	y		10142056	1					
ANR	10142082	ExpressionStatement	L = LogL10toY ( p >> 14 & 0x3ff )	976:1:25799:25827	10142056	2	True				
ANR	10142083	AssignmentExpression	L = LogL10toY ( p >> 14 & 0x3ff )		10142056	0		=			
ANR	10142084	Identifier	L		10142056	0					
ANR	10142085	CallExpression	LogL10toY ( p >> 14 & 0x3ff )		10142056	1					
ANR	10142086	Callee	LogL10toY		10142056	0					
ANR	10142087	Identifier	LogL10toY		10142056	0					
ANR	10142088	ArgumentList	p >> 14 & 0x3ff		10142056	1					
ANR	10142089	Argument	p >> 14 & 0x3ff		10142056	0					
ANR	10142090	BitAndExpression	p >> 14 & 0x3ff		10142056	0		&			
ANR	10142091	ShiftExpression	p >> 14		10142056	0		>>			
ANR	10142092	Identifier	p		10142056	0					
ANR	10142093	PrimaryExpression	14		10142056	1					
ANR	10142094	PrimaryExpression	0x3ff		10142056	1					
ANR	10142095	IfStatement	if ( L <= 0. )		10142056	3					
ANR	10142096	Condition	L <= 0.	977:5:25834:25840	10142056	0	True				
ANR	10142097	RelationalExpression	L <= 0.		10142056	0		<=			
ANR	10142098	Identifier	L		10142056	0					
ANR	10142099	PrimaryExpression	0.		10142056	1					
ANR	10142100	CompoundStatement		6:14:109:109	10142056	1					
ANR	10142101	ExpressionStatement	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.	978:2:25847:25876	10142056	0	True				
ANR	10142102	AssignmentExpression	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.		10142056	0		=			
ANR	10142103	ArrayIndexing	XYZ [ 0 ]		10142056	0					
ANR	10142104	Identifier	XYZ		10142056	0					
ANR	10142105	PrimaryExpression	0		10142056	1					
ANR	10142106	AssignmentExpression	XYZ [ 1 ] = XYZ [ 2 ] = 0.		10142056	1		=			
ANR	10142107	ArrayIndexing	XYZ [ 1 ]		10142056	0					
ANR	10142108	Identifier	XYZ		10142056	0					
ANR	10142109	PrimaryExpression	1		10142056	1					
ANR	10142110	AssignmentExpression	XYZ [ 2 ] = 0.		10142056	1		=			
ANR	10142111	ArrayIndexing	XYZ [ 2 ]		10142056	0					
ANR	10142112	Identifier	XYZ		10142056	0					
ANR	10142113	PrimaryExpression	2		10142056	1					
ANR	10142114	PrimaryExpression	0.		10142056	1					
ANR	10142115	ReturnStatement	return ;	979:2:25880:25886	10142056	1	True				
ANR	10142116	ExpressionStatement	Ce = p & 0x3fff	982:1:25916:25931	10142056	4	True				
ANR	10142117	AssignmentExpression	Ce = p & 0x3fff		10142056	0		=			
ANR	10142118	Identifier	Ce		10142056	0					
ANR	10142119	BitAndExpression	p & 0x3fff		10142056	1		&			
ANR	10142120	Identifier	p		10142056	0					
ANR	10142121	PrimaryExpression	0x3fff		10142056	1					
ANR	10142122	IfStatement	"if ( uv_decode ( & u , & v , Ce ) < 0 )"		10142056	5					
ANR	10142123	Condition	"uv_decode ( & u , & v , Ce ) < 0"	983:5:25938:25962	10142056	0	True				
ANR	10142124	RelationalExpression	"uv_decode ( & u , & v , Ce ) < 0"		10142056	0		<			
ANR	10142125	CallExpression	"uv_decode ( & u , & v , Ce )"		10142056	0					
ANR	10142126	Callee	uv_decode		10142056	0					
ANR	10142127	Identifier	uv_decode		10142056	0					
ANR	10142128	ArgumentList	& u		10142056	1					
ANR	10142129	Argument	& u		10142056	0					
ANR	10142130	UnaryOperationExpression	& u		10142056	0					
ANR	10142131	UnaryOperator	&		10142056	0					
ANR	10142132	Identifier	u		10142056	1					
ANR	10142133	Argument	& v		10142056	1					
ANR	10142134	UnaryOperationExpression	& v		10142056	0					
ANR	10142135	UnaryOperator	&		10142056	0					
ANR	10142136	Identifier	v		10142056	1					
ANR	10142137	Argument	Ce		10142056	2					
ANR	10142138	Identifier	Ce		10142056	0					
ANR	10142139	PrimaryExpression	0		10142056	1					
ANR	10142140	CompoundStatement		12:32:231:231	10142056	1					
ANR	10142141	ExpressionStatement	u = U_NEU	984:2:25969:25978	10142056	0	True				
ANR	10142142	AssignmentExpression	u = U_NEU		10142056	0		=			
ANR	10142143	Identifier	u		10142056	0					
ANR	10142144	Identifier	U_NEU		10142056	1					
ANR	10142145	ExpressionStatement	v = V_NEU	984:13:25980:25989	10142056	1	True				
ANR	10142146	AssignmentExpression	v = V_NEU		10142056	0		=			
ANR	10142147	Identifier	v		10142056	0					
ANR	10142148	Identifier	V_NEU		10142056	1					
ANR	10142149	ExpressionStatement	s = 1. / ( 6. * u - 16. * v + 12. )	986:1:25995:26022	10142056	6	True				
ANR	10142150	AssignmentExpression	s = 1. / ( 6. * u - 16. * v + 12. )		10142056	0		=			
ANR	10142151	Identifier	s		10142056	0					
ANR	10142152	MultiplicativeExpression	1. / ( 6. * u - 16. * v + 12. )		10142056	1		/			
ANR	10142153	PrimaryExpression	1.		10142056	0					
ANR	10142154	AdditiveExpression	6. * u - 16. * v + 12.		10142056	1		-			
ANR	10142155	MultiplicativeExpression	6. * u		10142056	0		*			
ANR	10142156	PrimaryExpression	6.		10142056	0					
ANR	10142157	Identifier	u		10142056	1					
ANR	10142158	AdditiveExpression	16. * v + 12.		10142056	1		+			
ANR	10142159	MultiplicativeExpression	16. * v		10142056	0		*			
ANR	10142160	PrimaryExpression	16.		10142056	0					
ANR	10142161	Identifier	v		10142056	1					
ANR	10142162	PrimaryExpression	12.		10142056	1					
ANR	10142163	ExpressionStatement	x = 9. * u * s	987:1:26025:26037	10142056	7	True				
ANR	10142164	AssignmentExpression	x = 9. * u * s		10142056	0		=			
ANR	10142165	Identifier	x		10142056	0					
ANR	10142166	MultiplicativeExpression	9. * u * s		10142056	1		*			
ANR	10142167	PrimaryExpression	9.		10142056	0					
ANR	10142168	MultiplicativeExpression	u * s		10142056	1		*			
ANR	10142169	Identifier	u		10142056	0					
ANR	10142170	Identifier	s		10142056	1					
ANR	10142171	ExpressionStatement	y = 4. * v * s	988:1:26040:26052	10142056	8	True				
ANR	10142172	AssignmentExpression	y = 4. * v * s		10142056	0		=			
ANR	10142173	Identifier	y		10142056	0					
ANR	10142174	MultiplicativeExpression	4. * v * s		10142056	1		*			
ANR	10142175	PrimaryExpression	4.		10142056	0					
ANR	10142176	MultiplicativeExpression	v * s		10142056	1		*			
ANR	10142177	Identifier	v		10142056	0					
ANR	10142178	Identifier	s		10142056	1					
ANR	10142179	ExpressionStatement	XYZ [ 0 ] = ( float ) ( x / y * L )	990:1:26081:26106	10142056	9	True				
ANR	10142180	AssignmentExpression	XYZ [ 0 ] = ( float ) ( x / y * L )		10142056	0		=			
ANR	10142181	ArrayIndexing	XYZ [ 0 ]		10142056	0					
ANR	10142182	Identifier	XYZ		10142056	0					
ANR	10142183	PrimaryExpression	0		10142056	1					
ANR	10142184	CastExpression	( float ) ( x / y * L )		10142056	1					
ANR	10142185	CastTarget	float		10142056	0					
ANR	10142186	MultiplicativeExpression	x / y * L		10142056	1		/			
ANR	10142187	Identifier	x		10142056	0					
ANR	10142188	MultiplicativeExpression	y * L		10142056	1		*			
ANR	10142189	Identifier	y		10142056	0					
ANR	10142190	Identifier	L		10142056	1					
ANR	10142191	ExpressionStatement	XYZ [ 1 ] = ( float ) L	991:1:26109:26126	10142056	10	True				
ANR	10142192	AssignmentExpression	XYZ [ 1 ] = ( float ) L		10142056	0		=			
ANR	10142193	ArrayIndexing	XYZ [ 1 ]		10142056	0					
ANR	10142194	Identifier	XYZ		10142056	0					
ANR	10142195	PrimaryExpression	1		10142056	1					
ANR	10142196	CastExpression	( float ) L		10142056	1					
ANR	10142197	CastTarget	float		10142056	0					
ANR	10142198	Identifier	L		10142056	1					
ANR	10142199	ExpressionStatement	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )	992:1:26129:26161	10142056	11	True				
ANR	10142200	AssignmentExpression	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )		10142056	0		=			
ANR	10142201	ArrayIndexing	XYZ [ 2 ]		10142056	0					
ANR	10142202	Identifier	XYZ		10142056	0					
ANR	10142203	PrimaryExpression	2		10142056	1					
ANR	10142204	CastExpression	( float ) ( ( 1. - x - y ) / y * L )		10142056	1					
ANR	10142205	CastTarget	float		10142056	0					
ANR	10142206	MultiplicativeExpression	( 1. - x - y ) / y * L		10142056	1		/			
ANR	10142207	AdditiveExpression	1. - x - y		10142056	0		-			
ANR	10142208	PrimaryExpression	1.		10142056	0					
ANR	10142209	AdditiveExpression	x - y		10142056	1		-			
ANR	10142210	Identifier	x		10142056	0					
ANR	10142211	Identifier	y		10142056	1					
ANR	10142212	MultiplicativeExpression	y * L		10142056	1		*			
ANR	10142213	Identifier	y		10142056	0					
ANR	10142214	Identifier	L		10142056	1					
ANR	10142215	ReturnType	void		10142056	1					
ANR	10142216	Identifier	LogLuv24toXYZ		10142056	2					
ANR	10142217	ParameterList	"uint32 p , float XYZ [ 3 ]"		10142056	3					
ANR	10142218	Parameter	uint32 p	971:14:25709:25716	10142056	0	True				
ANR	10142219	ParameterType	uint32		10142056	0					
ANR	10142220	Identifier	p		10142056	1					
ANR	10142221	Parameter	float XYZ [ 3 ]	971:24:25719:25730	10142056	1	True				
ANR	10142222	ParameterType	float [ 3 ]		10142056	0					
ANR	10142223	Identifier	XYZ		10142056	1					
ANR	10142224	CFGEntryNode	ENTRY		10142056		True				
ANR	10142225	CFGExitNode	EXIT		10142056		True				
ANR	10142226	Symbol	Ce		10142056						
ANR	10142227	Symbol	L		10142056						
ANR	10142228	Symbol	U_NEU		10142056						
ANR	10142229	Symbol	uv_decode		10142056						
ANR	10142230	Symbol	p		10142056						
ANR	10142231	Symbol	s		10142056						
ANR	10142232	Symbol	u		10142056						
ANR	10142233	Symbol	v		10142056						
ANR	10142234	Symbol	XYZ		10142056						
ANR	10142235	Symbol	x		10142056						
ANR	10142236	Symbol	LogL10toY		10142056						
ANR	10142237	Symbol	y		10142056						
ANR	10142238	Symbol	& u		10142056						
ANR	10142239	Symbol	* XYZ		10142056						
ANR	10142240	Symbol	& v		10142056						
ANR	10142241	Symbol	V_NEU		10142056						
ANR	10142242	Function	LogLuv24fromXYZ	998:0:26199:26672							
ANR	10142243	FunctionDef	"LogLuv24fromXYZ (float XYZ [ 3 ] , int em)"		10142242	0					
ANR	10142244	CompoundStatement		1000:0:26244:26672	10142242	0					
ANR	10142245	IdentifierDeclStatement	"int Le , Ce ;"	1001:1:26247:26257	10142242	0	True				
ANR	10142246	IdentifierDecl	Le		10142242	0					
ANR	10142247	IdentifierDeclType	int		10142242	0					
ANR	10142248	Identifier	Le		10142242	1					
ANR	10142249	IdentifierDecl	Ce		10142242	1					
ANR	10142250	IdentifierDeclType	int		10142242	0					
ANR	10142251	Identifier	Ce		10142242	1					
ANR	10142252	IdentifierDeclStatement	"double u , v , s ;"	1002:1:26260:26274	10142242	1	True				
ANR	10142253	IdentifierDecl	u		10142242	0					
ANR	10142254	IdentifierDeclType	double		10142242	0					
ANR	10142255	Identifier	u		10142242	1					
ANR	10142256	IdentifierDecl	v		10142242	1					
ANR	10142257	IdentifierDeclType	double		10142242	0					
ANR	10142258	Identifier	v		10142242	1					
ANR	10142259	IdentifierDecl	s		10142242	2					
ANR	10142260	IdentifierDeclType	double		10142242	0					
ANR	10142261	Identifier	s		10142242	1					
ANR	10142262	ExpressionStatement	"Le = LogL10fromY ( XYZ [ 1 ] , em )"	1004:1:26305:26333	10142242	2	True				
ANR	10142263	AssignmentExpression	"Le = LogL10fromY ( XYZ [ 1 ] , em )"		10142242	0		=			
ANR	10142264	Identifier	Le		10142242	0					
ANR	10142265	CallExpression	"LogL10fromY ( XYZ [ 1 ] , em )"		10142242	1					
ANR	10142266	Callee	LogL10fromY		10142242	0					
ANR	10142267	Identifier	LogL10fromY		10142242	0					
ANR	10142268	ArgumentList	XYZ [ 1 ]		10142242	1					
ANR	10142269	Argument	XYZ [ 1 ]		10142242	0					
ANR	10142270	ArrayIndexing	XYZ [ 1 ]		10142242	0					
ANR	10142271	Identifier	XYZ		10142242	0					
ANR	10142272	PrimaryExpression	1		10142242	1					
ANR	10142273	Argument	em		10142242	1					
ANR	10142274	Identifier	em		10142242	0					
ANR	10142275	ExpressionStatement	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]	1006:1:26360:26395	10142242	3	True				
ANR	10142276	AssignmentExpression	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		10142242	0		=			
ANR	10142277	Identifier	s		10142242	0					
ANR	10142278	AdditiveExpression	XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		10142242	1		+			
ANR	10142279	ArrayIndexing	XYZ [ 0 ]		10142242	0					
ANR	10142280	Identifier	XYZ		10142242	0					
ANR	10142281	PrimaryExpression	0		10142242	1					
ANR	10142282	AdditiveExpression	15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		10142242	1		+			
ANR	10142283	MultiplicativeExpression	15. * XYZ [ 1 ]		10142242	0		*			
ANR	10142284	PrimaryExpression	15.		10142242	0					
ANR	10142285	ArrayIndexing	XYZ [ 1 ]		10142242	1					
ANR	10142286	Identifier	XYZ		10142242	0					
ANR	10142287	PrimaryExpression	1		10142242	1					
ANR	10142288	MultiplicativeExpression	3. * XYZ [ 2 ]		10142242	1		*			
ANR	10142289	PrimaryExpression	3.		10142242	0					
ANR	10142290	ArrayIndexing	XYZ [ 2 ]		10142242	1					
ANR	10142291	Identifier	XYZ		10142242	0					
ANR	10142292	PrimaryExpression	2		10142242	1					
ANR	10142293	IfStatement	if ( ! Le || s <= 0. )		10142242	4					
ANR	10142294	Condition	! Le || s <= 0.	1007:5:26402:26415	10142242	0	True				
ANR	10142295	OrExpression	! Le || s <= 0.		10142242	0		||			
ANR	10142296	UnaryOperationExpression	! Le		10142242	0					
ANR	10142297	UnaryOperator	!		10142242	0					
ANR	10142298	Identifier	Le		10142242	1					
ANR	10142299	RelationalExpression	s <= 0.		10142242	1		<=			
ANR	10142300	Identifier	s		10142242	0					
ANR	10142301	PrimaryExpression	0.		10142242	1					
ANR	10142302	CompoundStatement		8:21:173:173	10142242	1					
ANR	10142303	ExpressionStatement	u = U_NEU	1008:2:26422:26431	10142242	0	True				
ANR	10142304	AssignmentExpression	u = U_NEU		10142242	0		=			
ANR	10142305	Identifier	u		10142242	0					
ANR	10142306	Identifier	U_NEU		10142242	1					
ANR	10142307	ExpressionStatement	v = V_NEU	1009:2:26435:26444	10142242	1	True				
ANR	10142308	AssignmentExpression	v = V_NEU		10142242	0		=			
ANR	10142309	Identifier	v		10142242	0					
ANR	10142310	Identifier	V_NEU		10142242	1					
ANR	10142311	ElseStatement	else		10142242	0					
ANR	10142312	CompoundStatement		11:8:209:209	10142242	0					
ANR	10142313	ExpressionStatement	u = 4. * XYZ [ 0 ] / s	1011:2:26458:26475	10142242	0	True				
ANR	10142314	AssignmentExpression	u = 4. * XYZ [ 0 ] / s		10142242	0		=			
ANR	10142315	Identifier	u		10142242	0					
ANR	10142316	MultiplicativeExpression	4. * XYZ [ 0 ] / s		10142242	1		*			
ANR	10142317	PrimaryExpression	4.		10142242	0					
ANR	10142318	MultiplicativeExpression	XYZ [ 0 ] / s		10142242	1		/			
ANR	10142319	ArrayIndexing	XYZ [ 0 ]		10142242	0					
ANR	10142320	Identifier	XYZ		10142242	0					
ANR	10142321	PrimaryExpression	0		10142242	1					
ANR	10142322	Identifier	s		10142242	1					
ANR	10142323	ExpressionStatement	v = 9. * XYZ [ 1 ] / s	1012:2:26479:26496	10142242	1	True				
ANR	10142324	AssignmentExpression	v = 9. * XYZ [ 1 ] / s		10142242	0		=			
ANR	10142325	Identifier	v		10142242	0					
ANR	10142326	MultiplicativeExpression	9. * XYZ [ 1 ] / s		10142242	1		*			
ANR	10142327	PrimaryExpression	9.		10142242	0					
ANR	10142328	MultiplicativeExpression	XYZ [ 1 ] / s		10142242	1		/			
ANR	10142329	ArrayIndexing	XYZ [ 1 ]		10142242	0					
ANR	10142330	Identifier	XYZ		10142242	0					
ANR	10142331	PrimaryExpression	1		10142242	1					
ANR	10142332	Identifier	s		10142242	1					
ANR	10142333	ExpressionStatement	"Ce = uv_encode ( u , v , em )"	1014:1:26502:26526	10142242	5	True				
ANR	10142334	AssignmentExpression	"Ce = uv_encode ( u , v , em )"		10142242	0		=			
ANR	10142335	Identifier	Ce		10142242	0					
ANR	10142336	CallExpression	"uv_encode ( u , v , em )"		10142242	1					
ANR	10142337	Callee	uv_encode		10142242	0					
ANR	10142338	Identifier	uv_encode		10142242	0					
ANR	10142339	ArgumentList	u		10142242	1					
ANR	10142340	Argument	u		10142242	0					
ANR	10142341	Identifier	u		10142242	0					
ANR	10142342	Argument	v		10142242	1					
ANR	10142343	Identifier	v		10142242	0					
ANR	10142344	Argument	em		10142242	2					
ANR	10142345	Identifier	em		10142242	0					
ANR	10142346	IfStatement	if ( Ce < 0 )		10142242	6					
ANR	10142347	Condition	Ce < 0	1015:5:26533:26538	10142242	0	True				
ANR	10142348	RelationalExpression	Ce < 0		10142242	0		<			
ANR	10142349	Identifier	Ce		10142242	0					
ANR	10142350	PrimaryExpression	0		10142242	1					
ANR	10142351	ExpressionStatement	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"	1016:2:26565:26616	10142242	1	True				
ANR	10142352	AssignmentExpression	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		10142242	0		=			
ANR	10142353	Identifier	Ce		10142242	0					
ANR	10142354	CallExpression	"uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		10142242	1					
ANR	10142355	Callee	uv_encode		10142242	0					
ANR	10142356	Identifier	uv_encode		10142242	0					
ANR	10142357	ArgumentList	U_NEU		10142242	1					
ANR	10142358	Argument	U_NEU		10142242	0					
ANR	10142359	Identifier	U_NEU		10142242	0					
ANR	10142360	Argument	V_NEU		10142242	1					
ANR	10142361	Identifier	V_NEU		10142242	0					
ANR	10142362	Argument	SGILOGENCODE_NODITHER		10142242	2					
ANR	10142363	Identifier	SGILOGENCODE_NODITHER		10142242	0					
ANR	10142364	ReturnStatement	return ( Le << 14 | Ce ) ;	1018:1:26648:26670	10142242	7	True				
ANR	10142365	InclusiveOrExpression	Le << 14 | Ce		10142242	0		|			
ANR	10142366	ShiftExpression	Le << 14		10142242	0		<<			
ANR	10142367	Identifier	Le		10142242	0					
ANR	10142368	PrimaryExpression	14		10142242	1					
ANR	10142369	Identifier	Ce		10142242	1					
ANR	10142370	ReturnType	uint32		10142242	1					
ANR	10142371	Identifier	LogLuv24fromXYZ		10142242	2					
ANR	10142372	ParameterList	"float XYZ [ 3 ] , int em"		10142242	3					
ANR	10142373	Parameter	float XYZ [ 3 ]	999:16:26222:26233	10142242	0	True				
ANR	10142374	ParameterType	float [ 3 ]		10142242	0					
ANR	10142375	Identifier	XYZ		10142242	1					
ANR	10142376	Parameter	int em	999:30:26236:26241	10142242	1	True				
ANR	10142377	ParameterType	int		10142242	0					
ANR	10142378	Identifier	em		10142242	1					
ANR	10142379	CFGEntryNode	ENTRY		10142242		True				
ANR	10142380	CFGExitNode	EXIT		10142242		True				
ANR	10142381	Symbol	SGILOGENCODE_NODITHER		10142242						
ANR	10142382	Symbol	Ce		10142242						
ANR	10142383	Symbol	LogL10fromY		10142242						
ANR	10142384	Symbol	uv_encode		10142242						
ANR	10142385	Symbol	em		10142242						
ANR	10142386	Symbol	U_NEU		10142242						
ANR	10142387	Symbol	s		10142242						
ANR	10142388	Symbol	u		10142242						
ANR	10142389	Symbol	v		10142242						
ANR	10142390	Symbol	XYZ		10142242						
ANR	10142391	Symbol	Le		10142242						
ANR	10142392	Symbol	* XYZ		10142242						
ANR	10142393	Symbol	V_NEU		10142242						
ANR	10142394	Function	Luv24toXYZ	1021:0:26675:26876							
ANR	10142395	FunctionDef	"Luv24toXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		10142394	0					
ANR	10142396	CompoundStatement		1023:0:26738:26876	10142394	0					
ANR	10142397	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1024:1:26741:26773	10142394	0	True				
ANR	10142398	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10142394	0					
ANR	10142399	IdentifierDeclType	uint32 *		10142394	0					
ANR	10142400	Identifier	luv		10142394	1					
ANR	10142401	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10142394	2		=			
ANR	10142402	Identifier	luv		10142394	0					
ANR	10142403	CastExpression	( uint32 * ) sp -> tbuf		10142394	1					
ANR	10142404	CastTarget	uint32 *		10142394	0					
ANR	10142405	PtrMemberAccess	sp -> tbuf		10142394	1					
ANR	10142406	Identifier	sp		10142394	0					
ANR	10142407	Identifier	tbuf		10142394	1					
ANR	10142408	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1025:1:26778:26802	10142394	1	True				
ANR	10142409	IdentifierDecl	* xyz = ( float * ) op		10142394	0					
ANR	10142410	IdentifierDeclType	float *		10142394	0					
ANR	10142411	Identifier	xyz		10142394	1					
ANR	10142412	AssignmentExpression	* xyz = ( float * ) op		10142394	2		=			
ANR	10142413	Identifier	xyz		10142394	0					
ANR	10142414	CastExpression	( float * ) op		10142394	1					
ANR	10142415	CastTarget	float *		10142394	0					
ANR	10142416	Identifier	op		10142394	1					
ANR	10142417	WhileStatement	while ( n -- > 0 )		10142394	2					
ANR	10142418	Condition	n -- > 0	1027:8:26813:26819	10142394	0	True				
ANR	10142419	RelationalExpression	n -- > 0		10142394	0		>			
ANR	10142420	PostIncDecOperationExpression	n --		10142394	0					
ANR	10142421	Identifier	n		10142394	0					
ANR	10142422	IncDec	--		10142394	1					
ANR	10142423	PrimaryExpression	0		10142394	1					
ANR	10142424	CompoundStatement		5:17:83:83	10142394	1					
ANR	10142425	ExpressionStatement	"LogLuv24toXYZ ( * luv , xyz )"	1028:2:26826:26850	10142394	0	True				
ANR	10142426	CallExpression	"LogLuv24toXYZ ( * luv , xyz )"		10142394	0					
ANR	10142427	Callee	LogLuv24toXYZ		10142394	0					
ANR	10142428	Identifier	LogLuv24toXYZ		10142394	0					
ANR	10142429	ArgumentList	* luv		10142394	1					
ANR	10142430	Argument	* luv		10142394	0					
ANR	10142431	UnaryOperationExpression	* luv		10142394	0					
ANR	10142432	UnaryOperator	*		10142394	0					
ANR	10142433	Identifier	luv		10142394	1					
ANR	10142434	Argument	xyz		10142394	1					
ANR	10142435	Identifier	xyz		10142394	0					
ANR	10142436	ExpressionStatement	xyz += 3	1029:2:26854:26862	10142394	1	True				
ANR	10142437	AssignmentExpression	xyz += 3		10142394	0		+=			
ANR	10142438	Identifier	xyz		10142394	0					
ANR	10142439	PrimaryExpression	3		10142394	1					
ANR	10142440	ExpressionStatement	luv ++	1030:2:26866:26871	10142394	2	True				
ANR	10142441	PostIncDecOperationExpression	luv ++		10142394	0					
ANR	10142442	Identifier	luv		10142394	0					
ANR	10142443	IncDec	++		10142394	1					
ANR	10142444	ReturnType	static void		10142394	1					
ANR	10142445	Identifier	Luv24toXYZ		10142394	2					
ANR	10142446	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10142394	3					
ANR	10142447	Parameter	LogLuvState * sp	1022:11:26698:26712	10142394	0	True				
ANR	10142448	ParameterType	LogLuvState *		10142394	0					
ANR	10142449	Identifier	sp		10142394	1					
ANR	10142450	Parameter	uint8 * op	1022:28:26715:26723	10142394	1	True				
ANR	10142451	ParameterType	uint8 *		10142394	0					
ANR	10142452	Identifier	op		10142394	1					
ANR	10142453	Parameter	tmsize_t n	1022:39:26726:26735	10142394	2	True				
ANR	10142454	ParameterType	tmsize_t		10142394	0					
ANR	10142455	Identifier	n		10142394	1					
ANR	10142456	CFGEntryNode	ENTRY		10142394		True				
ANR	10142457	CFGExitNode	EXIT		10142394		True				
ANR	10142458	Symbol	* sp		10142394						
ANR	10142459	Symbol	op		10142394						
ANR	10142460	Symbol	* luv		10142394						
ANR	10142461	Symbol	xyz		10142394						
ANR	10142462	Symbol	sp -> tbuf		10142394						
ANR	10142463	Symbol	luv		10142394						
ANR	10142464	Symbol	sp		10142394						
ANR	10142465	Symbol	n		10142394						
ANR	10142466	Function	Luv24toLuv48	1034:0:26879:27256							
ANR	10142467	FunctionDef	"Luv24toLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		10142466	0					
ANR	10142468	CompoundStatement		1036:0:26944:27256	10142466	0					
ANR	10142469	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1037:1:26947:26979	10142466	0	True				
ANR	10142470	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10142466	0					
ANR	10142471	IdentifierDeclType	uint32 *		10142466	0					
ANR	10142472	Identifier	luv		10142466	1					
ANR	10142473	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10142466	2		=			
ANR	10142474	Identifier	luv		10142466	0					
ANR	10142475	CastExpression	( uint32 * ) sp -> tbuf		10142466	1					
ANR	10142476	CastTarget	uint32 *		10142466	0					
ANR	10142477	PtrMemberAccess	sp -> tbuf		10142466	1					
ANR	10142478	Identifier	sp		10142466	0					
ANR	10142479	Identifier	tbuf		10142466	1					
ANR	10142480	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1038:1:26984:27009	10142466	1	True				
ANR	10142481	IdentifierDecl	* luv3 = ( int16 * ) op		10142466	0					
ANR	10142482	IdentifierDeclType	int16 *		10142466	0					
ANR	10142483	Identifier	luv3		10142466	1					
ANR	10142484	AssignmentExpression	* luv3 = ( int16 * ) op		10142466	2		=			
ANR	10142485	Identifier	luv3		10142466	0					
ANR	10142486	CastExpression	( int16 * ) op		10142466	1					
ANR	10142487	CastTarget	int16 *		10142466	0					
ANR	10142488	Identifier	op		10142466	1					
ANR	10142489	WhileStatement	while ( n -- > 0 )		10142466	2					
ANR	10142490	Condition	n -- > 0	1040:8:27020:27026	10142466	0	True				
ANR	10142491	RelationalExpression	n -- > 0		10142466	0		>			
ANR	10142492	PostIncDecOperationExpression	n --		10142466	0					
ANR	10142493	Identifier	n		10142466	0					
ANR	10142494	IncDec	--		10142466	1					
ANR	10142495	PrimaryExpression	0		10142466	1					
ANR	10142496	CompoundStatement		6:2:88:99	10142466	1					
ANR	10142497	IdentifierDeclStatement	"double u , v ;"	1041:2:27033:27044	10142466	0	True				
ANR	10142498	IdentifierDecl	u		10142466	0					
ANR	10142499	IdentifierDeclType	double		10142466	0					
ANR	10142500	Identifier	u		10142466	1					
ANR	10142501	IdentifierDecl	v		10142466	1					
ANR	10142502	IdentifierDeclType	double		10142466	0					
ANR	10142503	Identifier	v		10142466	1					
ANR	10142504	ExpressionStatement	* luv3 ++ = ( int16 ) ( ( * luv >> 12 & 0xffd ) + 13314 )	1043:2:27049:27096	10142466	1	True				
ANR	10142505	AssignmentExpression	* luv3 ++ = ( int16 ) ( ( * luv >> 12 & 0xffd ) + 13314 )		10142466	0		=			
ANR	10142506	UnaryOperationExpression	* luv3 ++		10142466	0					
ANR	10142507	UnaryOperator	*		10142466	0					
ANR	10142508	PostIncDecOperationExpression	luv3 ++		10142466	1					
ANR	10142509	Identifier	luv3		10142466	0					
ANR	10142510	IncDec	++		10142466	1					
ANR	10142511	CastExpression	( int16 ) ( ( * luv >> 12 & 0xffd ) + 13314 )		10142466	1					
ANR	10142512	CastTarget	int16		10142466	0					
ANR	10142513	AdditiveExpression	( * luv >> 12 & 0xffd ) + 13314		10142466	1		+			
ANR	10142514	BitAndExpression	* luv >> 12 & 0xffd		10142466	0		&			
ANR	10142515	ShiftExpression	* luv >> 12		10142466	0		>>			
ANR	10142516	UnaryOperationExpression	* luv		10142466	0					
ANR	10142517	UnaryOperator	*		10142466	0					
ANR	10142518	Identifier	luv		10142466	1					
ANR	10142519	PrimaryExpression	12		10142466	1					
ANR	10142520	PrimaryExpression	0xffd		10142466	1					
ANR	10142521	PrimaryExpression	13314		10142466	1					
ANR	10142522	IfStatement	"if ( uv_decode ( & u , & v , * luv & 0x3fff ) < 0 )"		10142466	2					
ANR	10142523	Condition	"uv_decode ( & u , & v , * luv & 0x3fff ) < 0"	1044:6:27104:27137	10142466	0	True				
ANR	10142524	RelationalExpression	"uv_decode ( & u , & v , * luv & 0x3fff ) < 0"		10142466	0		<			
ANR	10142525	CallExpression	"uv_decode ( & u , & v , * luv & 0x3fff )"		10142466	0					
ANR	10142526	Callee	uv_decode		10142466	0					
ANR	10142527	Identifier	uv_decode		10142466	0					
ANR	10142528	ArgumentList	& u		10142466	1					
ANR	10142529	Argument	& u		10142466	0					
ANR	10142530	UnaryOperationExpression	& u		10142466	0					
ANR	10142531	UnaryOperator	&		10142466	0					
ANR	10142532	Identifier	u		10142466	1					
ANR	10142533	Argument	& v		10142466	1					
ANR	10142534	UnaryOperationExpression	& v		10142466	0					
ANR	10142535	UnaryOperator	&		10142466	0					
ANR	10142536	Identifier	v		10142466	1					
ANR	10142537	Argument	* luv & 0x3fff		10142466	2					
ANR	10142538	BitAndExpression	* luv & 0x3fff		10142466	0		&			
ANR	10142539	UnaryOperationExpression	* luv		10142466	0					
ANR	10142540	UnaryOperator	*		10142466	0					
ANR	10142541	Identifier	luv		10142466	1					
ANR	10142542	PrimaryExpression	0x3fff		10142466	1					
ANR	10142543	PrimaryExpression	0		10142466	1					
ANR	10142544	CompoundStatement		9:42:195:195	10142466	1					
ANR	10142545	ExpressionStatement	u = U_NEU	1045:3:27145:27154	10142466	0	True				
ANR	10142546	AssignmentExpression	u = U_NEU		10142466	0		=			
ANR	10142547	Identifier	u		10142466	0					
ANR	10142548	Identifier	U_NEU		10142466	1					
ANR	10142549	ExpressionStatement	v = V_NEU	1046:3:27159:27168	10142466	1	True				
ANR	10142550	AssignmentExpression	v = V_NEU		10142466	0		=			
ANR	10142551	Identifier	v		10142466	0					
ANR	10142552	Identifier	V_NEU		10142466	1					
ANR	10142553	ExpressionStatement	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )	1048:2:27176:27207	10142466	3	True				
ANR	10142554	AssignmentExpression	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )		10142466	0		=			
ANR	10142555	UnaryOperationExpression	* luv3 ++		10142466	0					
ANR	10142556	UnaryOperator	*		10142466	0					
ANR	10142557	PostIncDecOperationExpression	luv3 ++		10142466	1					
ANR	10142558	Identifier	luv3		10142466	0					
ANR	10142559	IncDec	++		10142466	1					
ANR	10142560	CastExpression	( int16 ) ( u * ( 1L << 15 ) )		10142466	1					
ANR	10142561	CastTarget	int16		10142466	0					
ANR	10142562	MultiplicativeExpression	u * ( 1L << 15 )		10142466	1		*			
ANR	10142563	Identifier	u		10142466	0					
ANR	10142564	ShiftExpression	1L << 15		10142466	1		<<			
ANR	10142565	PrimaryExpression	1L		10142466	0					
ANR	10142566	PrimaryExpression	15		10142466	1					
ANR	10142567	ExpressionStatement	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )	1049:2:27211:27242	10142466	4	True				
ANR	10142568	AssignmentExpression	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )		10142466	0		=			
ANR	10142569	UnaryOperationExpression	* luv3 ++		10142466	0					
ANR	10142570	UnaryOperator	*		10142466	0					
ANR	10142571	PostIncDecOperationExpression	luv3 ++		10142466	1					
ANR	10142572	Identifier	luv3		10142466	0					
ANR	10142573	IncDec	++		10142466	1					
ANR	10142574	CastExpression	( int16 ) ( v * ( 1L << 15 ) )		10142466	1					
ANR	10142575	CastTarget	int16		10142466	0					
ANR	10142576	MultiplicativeExpression	v * ( 1L << 15 )		10142466	1		*			
ANR	10142577	Identifier	v		10142466	0					
ANR	10142578	ShiftExpression	1L << 15		10142466	1		<<			
ANR	10142579	PrimaryExpression	1L		10142466	0					
ANR	10142580	PrimaryExpression	15		10142466	1					
ANR	10142581	ExpressionStatement	luv ++	1050:2:27246:27251	10142466	5	True				
ANR	10142582	PostIncDecOperationExpression	luv ++		10142466	0					
ANR	10142583	Identifier	luv		10142466	0					
ANR	10142584	IncDec	++		10142466	1					
ANR	10142585	ReturnType	static void		10142466	1					
ANR	10142586	Identifier	Luv24toLuv48		10142466	2					
ANR	10142587	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10142466	3					
ANR	10142588	Parameter	LogLuvState * sp	1035:13:26904:26918	10142466	0	True				
ANR	10142589	ParameterType	LogLuvState *		10142466	0					
ANR	10142590	Identifier	sp		10142466	1					
ANR	10142591	Parameter	uint8 * op	1035:30:26921:26929	10142466	1	True				
ANR	10142592	ParameterType	uint8 *		10142466	0					
ANR	10142593	Identifier	op		10142466	1					
ANR	10142594	Parameter	tmsize_t n	1035:41:26932:26941	10142466	2	True				
ANR	10142595	ParameterType	tmsize_t		10142466	0					
ANR	10142596	Identifier	n		10142466	1					
ANR	10142597	CFGEntryNode	ENTRY		10142466		True				
ANR	10142598	CFGExitNode	EXIT		10142466		True				
ANR	10142599	Symbol	* sp		10142466						
ANR	10142600	Symbol	op		10142466						
ANR	10142601	Symbol	luv		10142466						
ANR	10142602	Symbol	n		10142466						
ANR	10142603	Symbol	U_NEU		10142466						
ANR	10142604	Symbol	uv_decode		10142466						
ANR	10142605	Symbol	luv3		10142466						
ANR	10142606	Symbol	u		10142466						
ANR	10142607	Symbol	v		10142466						
ANR	10142608	Symbol	* luv		10142466						
ANR	10142609	Symbol	sp -> tbuf		10142466						
ANR	10142610	Symbol	* luv3 ++		10142466						
ANR	10142611	Symbol	& u		10142466						
ANR	10142612	Symbol	& v		10142466						
ANR	10142613	Symbol	sp		10142466						
ANR	10142614	Symbol	V_NEU		10142466						
ANR	10142615	Function	Luv24toRGB	1054:0:27259:27494							
ANR	10142616	FunctionDef	"Luv24toRGB (LogLuvState * sp , uint8 * op , tmsize_t n)"		10142615	0					
ANR	10142617	CompoundStatement		1056:0:27322:27494	10142615	0					
ANR	10142618	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1057:1:27325:27357	10142615	0	True				
ANR	10142619	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10142615	0					
ANR	10142620	IdentifierDeclType	uint32 *		10142615	0					
ANR	10142621	Identifier	luv		10142615	1					
ANR	10142622	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10142615	2		=			
ANR	10142623	Identifier	luv		10142615	0					
ANR	10142624	CastExpression	( uint32 * ) sp -> tbuf		10142615	1					
ANR	10142625	CastTarget	uint32 *		10142615	0					
ANR	10142626	PtrMemberAccess	sp -> tbuf		10142615	1					
ANR	10142627	Identifier	sp		10142615	0					
ANR	10142628	Identifier	tbuf		10142615	1					
ANR	10142629	IdentifierDeclStatement	uint8 * rgb = ( uint8 * ) op ;	1058:1:27362:27386	10142615	1	True				
ANR	10142630	IdentifierDecl	* rgb = ( uint8 * ) op		10142615	0					
ANR	10142631	IdentifierDeclType	uint8 *		10142615	0					
ANR	10142632	Identifier	rgb		10142615	1					
ANR	10142633	AssignmentExpression	* rgb = ( uint8 * ) op		10142615	2		=			
ANR	10142634	Identifier	rgb		10142615	0					
ANR	10142635	CastExpression	( uint8 * ) op		10142615	1					
ANR	10142636	CastTarget	uint8 *		10142615	0					
ANR	10142637	Identifier	op		10142615	1					
ANR	10142638	WhileStatement	while ( n -- > 0 )		10142615	2					
ANR	10142639	Condition	n -- > 0	1060:8:27397:27403	10142615	0	True				
ANR	10142640	RelationalExpression	n -- > 0		10142615	0		>			
ANR	10142641	PostIncDecOperationExpression	n --		10142615	0					
ANR	10142642	Identifier	n		10142615	0					
ANR	10142643	IncDec	--		10142615	1					
ANR	10142644	PrimaryExpression	0		10142615	1					
ANR	10142645	CompoundStatement		6:2:87:99	10142615	1					
ANR	10142646	IdentifierDeclStatement	float xyz [ 3 ] ;	1061:2:27410:27422	10142615	0	True				
ANR	10142647	IdentifierDecl	xyz [ 3 ]		10142615	0					
ANR	10142648	IdentifierDeclType	float [ 3 ]		10142615	0					
ANR	10142649	Identifier	xyz		10142615	1					
ANR	10142650	PrimaryExpression	3		10142615	2					
ANR	10142651	ExpressionStatement	"LogLuv24toXYZ ( * luv ++ , xyz )"	1063:2:27427:27453	10142615	1	True				
ANR	10142652	CallExpression	"LogLuv24toXYZ ( * luv ++ , xyz )"		10142615	0					
ANR	10142653	Callee	LogLuv24toXYZ		10142615	0					
ANR	10142654	Identifier	LogLuv24toXYZ		10142615	0					
ANR	10142655	ArgumentList	* luv ++		10142615	1					
ANR	10142656	Argument	* luv ++		10142615	0					
ANR	10142657	UnaryOperationExpression	* luv ++		10142615	0					
ANR	10142658	UnaryOperator	*		10142615	0					
ANR	10142659	PostIncDecOperationExpression	luv ++		10142615	1					
ANR	10142660	Identifier	luv		10142615	0					
ANR	10142661	IncDec	++		10142615	1					
ANR	10142662	Argument	xyz		10142615	1					
ANR	10142663	Identifier	xyz		10142615	0					
ANR	10142664	ExpressionStatement	"XYZtoRGB24 ( xyz , rgb )"	1064:2:27457:27477	10142615	2	True				
ANR	10142665	CallExpression	"XYZtoRGB24 ( xyz , rgb )"		10142615	0					
ANR	10142666	Callee	XYZtoRGB24		10142615	0					
ANR	10142667	Identifier	XYZtoRGB24		10142615	0					
ANR	10142668	ArgumentList	xyz		10142615	1					
ANR	10142669	Argument	xyz		10142615	0					
ANR	10142670	Identifier	xyz		10142615	0					
ANR	10142671	Argument	rgb		10142615	1					
ANR	10142672	Identifier	rgb		10142615	0					
ANR	10142673	ExpressionStatement	rgb += 3	1065:2:27481:27489	10142615	3	True				
ANR	10142674	AssignmentExpression	rgb += 3		10142615	0		+=			
ANR	10142675	Identifier	rgb		10142615	0					
ANR	10142676	PrimaryExpression	3		10142615	1					
ANR	10142677	ReturnType	static void		10142615	1					
ANR	10142678	Identifier	Luv24toRGB		10142615	2					
ANR	10142679	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10142615	3					
ANR	10142680	Parameter	LogLuvState * sp	1055:11:27282:27296	10142615	0	True				
ANR	10142681	ParameterType	LogLuvState *		10142615	0					
ANR	10142682	Identifier	sp		10142615	1					
ANR	10142683	Parameter	uint8 * op	1055:28:27299:27307	10142615	1	True				
ANR	10142684	ParameterType	uint8 *		10142615	0					
ANR	10142685	Identifier	op		10142615	1					
ANR	10142686	Parameter	tmsize_t n	1055:39:27310:27319	10142615	2	True				
ANR	10142687	ParameterType	tmsize_t		10142615	0					
ANR	10142688	Identifier	n		10142615	1					
ANR	10142689	CFGEntryNode	ENTRY		10142615		True				
ANR	10142690	CFGExitNode	EXIT		10142615		True				
ANR	10142691	Symbol	* sp		10142615						
ANR	10142692	Symbol	op		10142615						
ANR	10142693	Symbol	* luv ++		10142615						
ANR	10142694	Symbol	xyz		10142615						
ANR	10142695	Symbol	sp -> tbuf		10142615						
ANR	10142696	Symbol	luv		10142615						
ANR	10142697	Symbol	rgb		10142615						
ANR	10142698	Symbol	sp		10142615						
ANR	10142699	Symbol	n		10142615						
ANR	10142700	Function	Luv24fromXYZ	1069:0:27497:27713							
ANR	10142701	FunctionDef	"Luv24fromXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		10142700	0					
ANR	10142702	CompoundStatement		1071:0:27562:27713	10142700	0					
ANR	10142703	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1072:1:27565:27597	10142700	0	True				
ANR	10142704	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10142700	0					
ANR	10142705	IdentifierDeclType	uint32 *		10142700	0					
ANR	10142706	Identifier	luv		10142700	1					
ANR	10142707	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10142700	2		=			
ANR	10142708	Identifier	luv		10142700	0					
ANR	10142709	CastExpression	( uint32 * ) sp -> tbuf		10142700	1					
ANR	10142710	CastTarget	uint32 *		10142700	0					
ANR	10142711	PtrMemberAccess	sp -> tbuf		10142700	1					
ANR	10142712	Identifier	sp		10142700	0					
ANR	10142713	Identifier	tbuf		10142700	1					
ANR	10142714	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1073:1:27602:27626	10142700	1	True				
ANR	10142715	IdentifierDecl	* xyz = ( float * ) op		10142700	0					
ANR	10142716	IdentifierDeclType	float *		10142700	0					
ANR	10142717	Identifier	xyz		10142700	1					
ANR	10142718	AssignmentExpression	* xyz = ( float * ) op		10142700	2		=			
ANR	10142719	Identifier	xyz		10142700	0					
ANR	10142720	CastExpression	( float * ) op		10142700	1					
ANR	10142721	CastTarget	float *		10142700	0					
ANR	10142722	Identifier	op		10142700	1					
ANR	10142723	WhileStatement	while ( n -- > 0 )		10142700	2					
ANR	10142724	Condition	n -- > 0	1075:8:27637:27643	10142700	0	True				
ANR	10142725	RelationalExpression	n -- > 0		10142700	0		>			
ANR	10142726	PostIncDecOperationExpression	n --		10142700	0					
ANR	10142727	Identifier	n		10142700	0					
ANR	10142728	IncDec	--		10142700	1					
ANR	10142729	PrimaryExpression	0		10142700	1					
ANR	10142730	CompoundStatement		5:17:83:83	10142700	1					
ANR	10142731	ExpressionStatement	"* luv ++ = LogLuv24fromXYZ ( xyz , sp -> encode_meth )"	1076:2:27650:27696	10142700	0	True				
ANR	10142732	AssignmentExpression	"* luv ++ = LogLuv24fromXYZ ( xyz , sp -> encode_meth )"		10142700	0		=			
ANR	10142733	UnaryOperationExpression	* luv ++		10142700	0					
ANR	10142734	UnaryOperator	*		10142700	0					
ANR	10142735	PostIncDecOperationExpression	luv ++		10142700	1					
ANR	10142736	Identifier	luv		10142700	0					
ANR	10142737	IncDec	++		10142700	1					
ANR	10142738	CallExpression	"LogLuv24fromXYZ ( xyz , sp -> encode_meth )"		10142700	1					
ANR	10142739	Callee	LogLuv24fromXYZ		10142700	0					
ANR	10142740	Identifier	LogLuv24fromXYZ		10142700	0					
ANR	10142741	ArgumentList	xyz		10142700	1					
ANR	10142742	Argument	xyz		10142700	0					
ANR	10142743	Identifier	xyz		10142700	0					
ANR	10142744	Argument	sp -> encode_meth		10142700	1					
ANR	10142745	PtrMemberAccess	sp -> encode_meth		10142700	0					
ANR	10142746	Identifier	sp		10142700	0					
ANR	10142747	Identifier	encode_meth		10142700	1					
ANR	10142748	ExpressionStatement	xyz += 3	1077:2:27700:27708	10142700	1	True				
ANR	10142749	AssignmentExpression	xyz += 3		10142700	0		+=			
ANR	10142750	Identifier	xyz		10142700	0					
ANR	10142751	PrimaryExpression	3		10142700	1					
ANR	10142752	ReturnType	static void		10142700	1					
ANR	10142753	Identifier	Luv24fromXYZ		10142700	2					
ANR	10142754	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10142700	3					
ANR	10142755	Parameter	LogLuvState * sp	1070:13:27522:27536	10142700	0	True				
ANR	10142756	ParameterType	LogLuvState *		10142700	0					
ANR	10142757	Identifier	sp		10142700	1					
ANR	10142758	Parameter	uint8 * op	1070:30:27539:27547	10142700	1	True				
ANR	10142759	ParameterType	uint8 *		10142700	0					
ANR	10142760	Identifier	op		10142700	1					
ANR	10142761	Parameter	tmsize_t n	1070:41:27550:27559	10142700	2	True				
ANR	10142762	ParameterType	tmsize_t		10142700	0					
ANR	10142763	Identifier	n		10142700	1					
ANR	10142764	CFGEntryNode	ENTRY		10142700		True				
ANR	10142765	CFGExitNode	EXIT		10142700		True				
ANR	10142766	Symbol	* sp		10142700						
ANR	10142767	Symbol	op		10142700						
ANR	10142768	Symbol	* luv ++		10142700						
ANR	10142769	Symbol	LogLuv24fromXYZ		10142700						
ANR	10142770	Symbol	xyz		10142700						
ANR	10142771	Symbol	sp -> tbuf		10142700						
ANR	10142772	Symbol	sp -> encode_meth		10142700						
ANR	10142773	Symbol	luv		10142700						
ANR	10142774	Symbol	sp		10142700						
ANR	10142775	Symbol	n		10142700						
ANR	10142776	Function	Luv24fromLuv48	1081:0:27716:28341							
ANR	10142777	FunctionDef	"Luv24fromLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		10142776	0					
ANR	10142778	CompoundStatement		1083:0:27783:28341	10142776	0					
ANR	10142779	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1084:1:27786:27818	10142776	0	True				
ANR	10142780	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10142776	0					
ANR	10142781	IdentifierDeclType	uint32 *		10142776	0					
ANR	10142782	Identifier	luv		10142776	1					
ANR	10142783	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10142776	2		=			
ANR	10142784	Identifier	luv		10142776	0					
ANR	10142785	CastExpression	( uint32 * ) sp -> tbuf		10142776	1					
ANR	10142786	CastTarget	uint32 *		10142776	0					
ANR	10142787	PtrMemberAccess	sp -> tbuf		10142776	1					
ANR	10142788	Identifier	sp		10142776	0					
ANR	10142789	Identifier	tbuf		10142776	1					
ANR	10142790	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1085:1:27823:27848	10142776	1	True				
ANR	10142791	IdentifierDecl	* luv3 = ( int16 * ) op		10142776	0					
ANR	10142792	IdentifierDeclType	int16 *		10142776	0					
ANR	10142793	Identifier	luv3		10142776	1					
ANR	10142794	AssignmentExpression	* luv3 = ( int16 * ) op		10142776	2		=			
ANR	10142795	Identifier	luv3		10142776	0					
ANR	10142796	CastExpression	( int16 * ) op		10142776	1					
ANR	10142797	CastTarget	int16 *		10142776	0					
ANR	10142798	Identifier	op		10142776	1					
ANR	10142799	WhileStatement	while ( n -- > 0 )		10142776	2					
ANR	10142800	Condition	n -- > 0	1087:8:27859:27865	10142776	0	True				
ANR	10142801	RelationalExpression	n -- > 0		10142776	0		>			
ANR	10142802	PostIncDecOperationExpression	n --		10142776	0					
ANR	10142803	Identifier	n		10142776	0					
ANR	10142804	IncDec	--		10142776	1					
ANR	10142805	PrimaryExpression	0		10142776	1					
ANR	10142806	CompoundStatement		6:2:88:98	10142776	1					
ANR	10142807	IdentifierDeclStatement	"int Le , Ce ;"	1088:2:27872:27882	10142776	0	True				
ANR	10142808	IdentifierDecl	Le		10142776	0					
ANR	10142809	IdentifierDeclType	int		10142776	0					
ANR	10142810	Identifier	Le		10142776	1					
ANR	10142811	IdentifierDecl	Ce		10142776	1					
ANR	10142812	IdentifierDeclType	int		10142776	0					
ANR	10142813	Identifier	Ce		10142776	1					
ANR	10142814	IfStatement	if ( luv3 [ 0 ] <= 0 )		10142776	1					
ANR	10142815	Condition	luv3 [ 0 ] <= 0	1090:6:27891:27902	10142776	0	True				
ANR	10142816	RelationalExpression	luv3 [ 0 ] <= 0		10142776	0		<=			
ANR	10142817	ArrayIndexing	luv3 [ 0 ]		10142776	0					
ANR	10142818	Identifier	luv3		10142776	0					
ANR	10142819	PrimaryExpression	0		10142776	1					
ANR	10142820	PrimaryExpression	0		10142776	1					
ANR	10142821	ExpressionStatement	Le = 0	1091:3:27908:27914	10142776	1	True				
ANR	10142822	AssignmentExpression	Le = 0		10142776	0		=			
ANR	10142823	Identifier	Le		10142776	0					
ANR	10142824	PrimaryExpression	0		10142776	1					
ANR	10142825	ElseStatement	else		10142776	0					
ANR	10142826	IfStatement	if ( luv3 [ 0 ] >= ( 1 << 12 ) + 3314 )		10142776	0					
ANR	10142827	Condition	luv3 [ 0 ] >= ( 1 << 12 ) + 3314	1092:11:27927:27949	10142776	0	True				
ANR	10142828	RelationalExpression	luv3 [ 0 ] >= ( 1 << 12 ) + 3314		10142776	0		>=			
ANR	10142829	ArrayIndexing	luv3 [ 0 ]		10142776	0					
ANR	10142830	Identifier	luv3		10142776	0					
ANR	10142831	PrimaryExpression	0		10142776	1					
ANR	10142832	AdditiveExpression	( 1 << 12 ) + 3314		10142776	1		+			
ANR	10142833	ShiftExpression	1 << 12		10142776	0		<<			
ANR	10142834	PrimaryExpression	1		10142776	0					
ANR	10142835	PrimaryExpression	12		10142776	1					
ANR	10142836	PrimaryExpression	3314		10142776	1					
ANR	10142837	ExpressionStatement	Le = ( 1 << 10 ) - 1	1093:3:27955:27971	10142776	1	True				
ANR	10142838	AssignmentExpression	Le = ( 1 << 10 ) - 1		10142776	0		=			
ANR	10142839	Identifier	Le		10142776	0					
ANR	10142840	AdditiveExpression	( 1 << 10 ) - 1		10142776	1		-			
ANR	10142841	ShiftExpression	1 << 10		10142776	0		<<			
ANR	10142842	PrimaryExpression	1		10142776	0					
ANR	10142843	PrimaryExpression	10		10142776	1					
ANR	10142844	PrimaryExpression	1		10142776	1					
ANR	10142845	ElseStatement	else		10142776	0					
ANR	10142846	IfStatement	if ( sp -> encode_meth == SGILOGENCODE_NODITHER )		10142776	0					
ANR	10142847	Condition	sp -> encode_meth == SGILOGENCODE_NODITHER	1094:11:27984:28023	10142776	0	True				
ANR	10142848	EqualityExpression	sp -> encode_meth == SGILOGENCODE_NODITHER		10142776	0		==			
ANR	10142849	PtrMemberAccess	sp -> encode_meth		10142776	0					
ANR	10142850	Identifier	sp		10142776	0					
ANR	10142851	Identifier	encode_meth		10142776	1					
ANR	10142852	Identifier	SGILOGENCODE_NODITHER		10142776	1					
ANR	10142853	ExpressionStatement	Le = ( luv3 [ 0 ] - 3314 ) >> 2	1095:3:28029:28053	10142776	1	True				
ANR	10142854	AssignmentExpression	Le = ( luv3 [ 0 ] - 3314 ) >> 2		10142776	0		=			
ANR	10142855	Identifier	Le		10142776	0					
ANR	10142856	ShiftExpression	( luv3 [ 0 ] - 3314 ) >> 2		10142776	1		>>			
ANR	10142857	AdditiveExpression	luv3 [ 0 ] - 3314		10142776	0		-			
ANR	10142858	ArrayIndexing	luv3 [ 0 ]		10142776	0					
ANR	10142859	Identifier	luv3		10142776	0					
ANR	10142860	PrimaryExpression	0		10142776	1					
ANR	10142861	PrimaryExpression	3314		10142776	1					
ANR	10142862	PrimaryExpression	2		10142776	1					
ANR	10142863	ElseStatement	else		10142776	0					
ANR	10142864	ExpressionStatement	"Le = itrunc ( .25 * ( luv3 [ 0 ] - 3314. ) , sp -> encode_meth )"	1097:3:28065:28114	10142776	0	True				
ANR	10142865	AssignmentExpression	"Le = itrunc ( .25 * ( luv3 [ 0 ] - 3314. ) , sp -> encode_meth )"		10142776	0		=			
ANR	10142866	Identifier	Le		10142776	0					
ANR	10142867	CallExpression	"itrunc ( .25 * ( luv3 [ 0 ] - 3314. ) , sp -> encode_meth )"		10142776	1					
ANR	10142868	Callee	itrunc		10142776	0					
ANR	10142869	Identifier	itrunc		10142776	0					
ANR	10142870	ArgumentList	.25 * ( luv3 [ 0 ] - 3314. )		10142776	1					
ANR	10142871	Argument	.25 * ( luv3 [ 0 ] - 3314. )		10142776	0					
ANR	10142872	MultiplicativeExpression	.25 * ( luv3 [ 0 ] - 3314. )		10142776	0		*			
ANR	10142873	PrimaryExpression	.25		10142776	0					
ANR	10142874	AdditiveExpression	luv3 [ 0 ] - 3314.		10142776	1		-			
ANR	10142875	ArrayIndexing	luv3 [ 0 ]		10142776	0					
ANR	10142876	Identifier	luv3		10142776	0					
ANR	10142877	PrimaryExpression	0		10142776	1					
ANR	10142878	PrimaryExpression	3314.		10142776	1					
ANR	10142879	Argument	sp -> encode_meth		10142776	1					
ANR	10142880	PtrMemberAccess	sp -> encode_meth		10142776	0					
ANR	10142881	Identifier	sp		10142776	0					
ANR	10142882	Identifier	encode_meth		10142776	1					
ANR	10142883	ExpressionStatement	"Ce = uv_encode ( ( luv3 [ 1 ] + .5 ) / ( 1 << 15 ) , ( luv3 [ 2 ] + .5 ) / ( 1 << 15 ) , sp -> encode_meth )"	1099:2:28119:28199	10142776	2	True				
ANR	10142884	AssignmentExpression	"Ce = uv_encode ( ( luv3 [ 1 ] + .5 ) / ( 1 << 15 ) , ( luv3 [ 2 ] + .5 ) / ( 1 << 15 ) , sp -> encode_meth )"		10142776	0		=			
ANR	10142885	Identifier	Ce		10142776	0					
ANR	10142886	CallExpression	"uv_encode ( ( luv3 [ 1 ] + .5 ) / ( 1 << 15 ) , ( luv3 [ 2 ] + .5 ) / ( 1 << 15 ) , sp -> encode_meth )"		10142776	1					
ANR	10142887	Callee	uv_encode		10142776	0					
ANR	10142888	Identifier	uv_encode		10142776	0					
ANR	10142889	ArgumentList	( luv3 [ 1 ] + .5 ) / ( 1 << 15 )		10142776	1					
ANR	10142890	Argument	( luv3 [ 1 ] + .5 ) / ( 1 << 15 )		10142776	0					
ANR	10142891	MultiplicativeExpression	( luv3 [ 1 ] + .5 ) / ( 1 << 15 )		10142776	0		/			
ANR	10142892	AdditiveExpression	luv3 [ 1 ] + .5		10142776	0		+			
ANR	10142893	ArrayIndexing	luv3 [ 1 ]		10142776	0					
ANR	10142894	Identifier	luv3		10142776	0					
ANR	10142895	PrimaryExpression	1		10142776	1					
ANR	10142896	PrimaryExpression	.5		10142776	1					
ANR	10142897	ShiftExpression	1 << 15		10142776	1		<<			
ANR	10142898	PrimaryExpression	1		10142776	0					
ANR	10142899	PrimaryExpression	15		10142776	1					
ANR	10142900	Argument	( luv3 [ 2 ] + .5 ) / ( 1 << 15 )		10142776	1					
ANR	10142901	MultiplicativeExpression	( luv3 [ 2 ] + .5 ) / ( 1 << 15 )		10142776	0		/			
ANR	10142902	AdditiveExpression	luv3 [ 2 ] + .5		10142776	0		+			
ANR	10142903	ArrayIndexing	luv3 [ 2 ]		10142776	0					
ANR	10142904	Identifier	luv3		10142776	0					
ANR	10142905	PrimaryExpression	2		10142776	1					
ANR	10142906	PrimaryExpression	.5		10142776	1					
ANR	10142907	ShiftExpression	1 << 15		10142776	1		<<			
ANR	10142908	PrimaryExpression	1		10142776	0					
ANR	10142909	PrimaryExpression	15		10142776	1					
ANR	10142910	Argument	sp -> encode_meth		10142776	2					
ANR	10142911	PtrMemberAccess	sp -> encode_meth		10142776	0					
ANR	10142912	Identifier	sp		10142776	0					
ANR	10142913	Identifier	encode_meth		10142776	1					
ANR	10142914	IfStatement	if ( Ce < 0 )		10142776	3					
ANR	10142915	Condition	Ce < 0	1101:6:28207:28212	10142776	0	True				
ANR	10142916	RelationalExpression	Ce < 0		10142776	0		<			
ANR	10142917	Identifier	Ce		10142776	0					
ANR	10142918	PrimaryExpression	0		10142776	1					
ANR	10142919	ExpressionStatement	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"	1102:3:28238:28289	10142776	1	True				
ANR	10142920	AssignmentExpression	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		10142776	0		=			
ANR	10142921	Identifier	Ce		10142776	0					
ANR	10142922	CallExpression	"uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		10142776	1					
ANR	10142923	Callee	uv_encode		10142776	0					
ANR	10142924	Identifier	uv_encode		10142776	0					
ANR	10142925	ArgumentList	U_NEU		10142776	1					
ANR	10142926	Argument	U_NEU		10142776	0					
ANR	10142927	Identifier	U_NEU		10142776	0					
ANR	10142928	Argument	V_NEU		10142776	1					
ANR	10142929	Identifier	V_NEU		10142776	0					
ANR	10142930	Argument	SGILOGENCODE_NODITHER		10142776	2					
ANR	10142931	Identifier	SGILOGENCODE_NODITHER		10142776	0					
ANR	10142932	ExpressionStatement	* luv ++ = ( uint32 ) Le << 14 | Ce	1103:2:28293:28323	10142776	4	True				
ANR	10142933	AssignmentExpression	* luv ++ = ( uint32 ) Le << 14 | Ce		10142776	0		=			
ANR	10142934	UnaryOperationExpression	* luv ++		10142776	0					
ANR	10142935	UnaryOperator	*		10142776	0					
ANR	10142936	PostIncDecOperationExpression	luv ++		10142776	1					
ANR	10142937	Identifier	luv		10142776	0					
ANR	10142938	IncDec	++		10142776	1					
ANR	10142939	InclusiveOrExpression	( uint32 ) Le << 14 | Ce		10142776	1		|			
ANR	10142940	ShiftExpression	( uint32 ) Le << 14		10142776	0		<<			
ANR	10142941	CastExpression	( uint32 ) Le		10142776	0					
ANR	10142942	CastTarget	uint32		10142776	0					
ANR	10142943	Identifier	Le		10142776	1					
ANR	10142944	PrimaryExpression	14		10142776	1					
ANR	10142945	Identifier	Ce		10142776	1					
ANR	10142946	ExpressionStatement	luv3 += 3	1104:2:28327:28336	10142776	5	True				
ANR	10142947	AssignmentExpression	luv3 += 3		10142776	0		+=			
ANR	10142948	Identifier	luv3		10142776	0					
ANR	10142949	PrimaryExpression	3		10142776	1					
ANR	10142950	ReturnType	static void		10142776	1					
ANR	10142951	Identifier	Luv24fromLuv48		10142776	2					
ANR	10142952	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10142776	3					
ANR	10142953	Parameter	LogLuvState * sp	1082:15:27743:27757	10142776	0	True				
ANR	10142954	ParameterType	LogLuvState *		10142776	0					
ANR	10142955	Identifier	sp		10142776	1					
ANR	10142956	Parameter	uint8 * op	1082:32:27760:27768	10142776	1	True				
ANR	10142957	ParameterType	uint8 *		10142776	0					
ANR	10142958	Identifier	op		10142776	1					
ANR	10142959	Parameter	tmsize_t n	1082:43:27771:27780	10142776	2	True				
ANR	10142960	ParameterType	tmsize_t		10142776	0					
ANR	10142961	Identifier	n		10142776	1					
ANR	10142962	CFGEntryNode	ENTRY		10142776		True				
ANR	10142963	CFGExitNode	EXIT		10142776		True				
ANR	10142964	Symbol	* sp		10142776						
ANR	10142965	Symbol	op		10142776						
ANR	10142966	Symbol	SGILOGENCODE_NODITHER		10142776						
ANR	10142967	Symbol	Ce		10142776						
ANR	10142968	Symbol	* luv ++		10142776						
ANR	10142969	Symbol	uv_encode		10142776						
ANR	10142970	Symbol	itrunc		10142776						
ANR	10142971	Symbol	luv		10142776						
ANR	10142972	Symbol	n		10142776						
ANR	10142973	Symbol	U_NEU		10142776						
ANR	10142974	Symbol	luv3		10142776						
ANR	10142975	Symbol	sp -> tbuf		10142776						
ANR	10142976	Symbol	Le		10142776						
ANR	10142977	Symbol	sp -> encode_meth		10142776						
ANR	10142978	Symbol	sp		10142776						
ANR	10142979	Symbol	* luv3		10142776						
ANR	10142980	Symbol	V_NEU		10142776						
ANR	10142981	Function	LogLuv32toXYZ	1111:0:28377:28838							
ANR	10142982	FunctionDef	"LogLuv32toXYZ (uint32 p , float XYZ [ 3 ])"		10142981	0					
ANR	10142983	CompoundStatement		1113:0:28420:28838	10142981	0					
ANR	10142984	IdentifierDeclStatement	"double L , u , v , s , x , y ;"	1114:1:28423:28446	10142981	0	True				
ANR	10142985	IdentifierDecl	L		10142981	0					
ANR	10142986	IdentifierDeclType	double		10142981	0					
ANR	10142987	Identifier	L		10142981	1					
ANR	10142988	IdentifierDecl	u		10142981	1					
ANR	10142989	IdentifierDeclType	double		10142981	0					
ANR	10142990	Identifier	u		10142981	1					
ANR	10142991	IdentifierDecl	v		10142981	2					
ANR	10142992	IdentifierDeclType	double		10142981	0					
ANR	10142993	Identifier	v		10142981	1					
ANR	10142994	IdentifierDecl	s		10142981	3					
ANR	10142995	IdentifierDeclType	double		10142981	0					
ANR	10142996	Identifier	s		10142981	1					
ANR	10142997	IdentifierDecl	x		10142981	4					
ANR	10142998	IdentifierDeclType	double		10142981	0					
ANR	10142999	Identifier	x		10142981	1					
ANR	10143000	IdentifierDecl	y		10142981	5					
ANR	10143001	IdentifierDeclType	double		10142981	0					
ANR	10143002	Identifier	y		10142981	1					
ANR	10143003	ExpressionStatement	L = LogL16toY ( ( int ) p >> 16 )	1116:1:28477:28504	10142981	1	True				
ANR	10143004	AssignmentExpression	L = LogL16toY ( ( int ) p >> 16 )		10142981	0		=			
ANR	10143005	Identifier	L		10142981	0					
ANR	10143006	CallExpression	LogL16toY ( ( int ) p >> 16 )		10142981	1					
ANR	10143007	Callee	LogL16toY		10142981	0					
ANR	10143008	Identifier	LogL16toY		10142981	0					
ANR	10143009	ArgumentList	( int ) p >> 16		10142981	1					
ANR	10143010	Argument	( int ) p >> 16		10142981	0					
ANR	10143011	ShiftExpression	( int ) p >> 16		10142981	0		>>			
ANR	10143012	CastExpression	( int ) p		10142981	0					
ANR	10143013	CastTarget	int		10142981	0					
ANR	10143014	Identifier	p		10142981	1					
ANR	10143015	PrimaryExpression	16		10142981	1					
ANR	10143016	IfStatement	if ( L <= 0. )		10142981	2					
ANR	10143017	Condition	L <= 0.	1117:5:28511:28517	10142981	0	True				
ANR	10143018	RelationalExpression	L <= 0.		10142981	0		<=			
ANR	10143019	Identifier	L		10142981	0					
ANR	10143020	PrimaryExpression	0.		10142981	1					
ANR	10143021	CompoundStatement		5:14:99:99	10142981	1					
ANR	10143022	ExpressionStatement	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.	1118:2:28524:28553	10142981	0	True				
ANR	10143023	AssignmentExpression	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.		10142981	0		=			
ANR	10143024	ArrayIndexing	XYZ [ 0 ]		10142981	0					
ANR	10143025	Identifier	XYZ		10142981	0					
ANR	10143026	PrimaryExpression	0		10142981	1					
ANR	10143027	AssignmentExpression	XYZ [ 1 ] = XYZ [ 2 ] = 0.		10142981	1		=			
ANR	10143028	ArrayIndexing	XYZ [ 1 ]		10142981	0					
ANR	10143029	Identifier	XYZ		10142981	0					
ANR	10143030	PrimaryExpression	1		10142981	1					
ANR	10143031	AssignmentExpression	XYZ [ 2 ] = 0.		10142981	1		=			
ANR	10143032	ArrayIndexing	XYZ [ 2 ]		10142981	0					
ANR	10143033	Identifier	XYZ		10142981	0					
ANR	10143034	PrimaryExpression	2		10142981	1					
ANR	10143035	PrimaryExpression	0.		10142981	1					
ANR	10143036	ReturnStatement	return ;	1119:2:28557:28563	10142981	1	True				
ANR	10143037	ExpressionStatement	u = 1. / UVSCALE * ( ( p >> 8 & 0xff ) + .5 )	1122:1:28593:28630	10142981	3	True				
ANR	10143038	AssignmentExpression	u = 1. / UVSCALE * ( ( p >> 8 & 0xff ) + .5 )		10142981	0		=			
ANR	10143039	Identifier	u		10142981	0					
ANR	10143040	MultiplicativeExpression	1. / UVSCALE * ( ( p >> 8 & 0xff ) + .5 )		10142981	1		/			
ANR	10143041	PrimaryExpression	1.		10142981	0					
ANR	10143042	MultiplicativeExpression	UVSCALE * ( ( p >> 8 & 0xff ) + .5 )		10142981	1		*			
ANR	10143043	Identifier	UVSCALE		10142981	0					
ANR	10143044	AdditiveExpression	( p >> 8 & 0xff ) + .5		10142981	1		+			
ANR	10143045	BitAndExpression	p >> 8 & 0xff		10142981	0		&			
ANR	10143046	ShiftExpression	p >> 8		10142981	0		>>			
ANR	10143047	Identifier	p		10142981	0					
ANR	10143048	PrimaryExpression	8		10142981	1					
ANR	10143049	PrimaryExpression	0xff		10142981	1					
ANR	10143050	PrimaryExpression	.5		10142981	1					
ANR	10143051	ExpressionStatement	v = 1. / UVSCALE * ( ( p & 0xff ) + .5 )	1123:1:28633:28667	10142981	4	True				
ANR	10143052	AssignmentExpression	v = 1. / UVSCALE * ( ( p & 0xff ) + .5 )		10142981	0		=			
ANR	10143053	Identifier	v		10142981	0					
ANR	10143054	MultiplicativeExpression	1. / UVSCALE * ( ( p & 0xff ) + .5 )		10142981	1		/			
ANR	10143055	PrimaryExpression	1.		10142981	0					
ANR	10143056	MultiplicativeExpression	UVSCALE * ( ( p & 0xff ) + .5 )		10142981	1		*			
ANR	10143057	Identifier	UVSCALE		10142981	0					
ANR	10143058	AdditiveExpression	( p & 0xff ) + .5		10142981	1		+			
ANR	10143059	BitAndExpression	p & 0xff		10142981	0		&			
ANR	10143060	Identifier	p		10142981	0					
ANR	10143061	PrimaryExpression	0xff		10142981	1					
ANR	10143062	PrimaryExpression	.5		10142981	1					
ANR	10143063	ExpressionStatement	s = 1. / ( 6. * u - 16. * v + 12. )	1124:1:28670:28697	10142981	5	True				
ANR	10143064	AssignmentExpression	s = 1. / ( 6. * u - 16. * v + 12. )		10142981	0		=			
ANR	10143065	Identifier	s		10142981	0					
ANR	10143066	MultiplicativeExpression	1. / ( 6. * u - 16. * v + 12. )		10142981	1		/			
ANR	10143067	PrimaryExpression	1.		10142981	0					
ANR	10143068	AdditiveExpression	6. * u - 16. * v + 12.		10142981	1		-			
ANR	10143069	MultiplicativeExpression	6. * u		10142981	0		*			
ANR	10143070	PrimaryExpression	6.		10142981	0					
ANR	10143071	Identifier	u		10142981	1					
ANR	10143072	AdditiveExpression	16. * v + 12.		10142981	1		+			
ANR	10143073	MultiplicativeExpression	16. * v		10142981	0		*			
ANR	10143074	PrimaryExpression	16.		10142981	0					
ANR	10143075	Identifier	v		10142981	1					
ANR	10143076	PrimaryExpression	12.		10142981	1					
ANR	10143077	ExpressionStatement	x = 9. * u * s	1125:1:28700:28712	10142981	6	True				
ANR	10143078	AssignmentExpression	x = 9. * u * s		10142981	0		=			
ANR	10143079	Identifier	x		10142981	0					
ANR	10143080	MultiplicativeExpression	9. * u * s		10142981	1		*			
ANR	10143081	PrimaryExpression	9.		10142981	0					
ANR	10143082	MultiplicativeExpression	u * s		10142981	1		*			
ANR	10143083	Identifier	u		10142981	0					
ANR	10143084	Identifier	s		10142981	1					
ANR	10143085	ExpressionStatement	y = 4. * v * s	1126:1:28715:28727	10142981	7	True				
ANR	10143086	AssignmentExpression	y = 4. * v * s		10142981	0		=			
ANR	10143087	Identifier	y		10142981	0					
ANR	10143088	MultiplicativeExpression	4. * v * s		10142981	1		*			
ANR	10143089	PrimaryExpression	4.		10142981	0					
ANR	10143090	MultiplicativeExpression	v * s		10142981	1		*			
ANR	10143091	Identifier	v		10142981	0					
ANR	10143092	Identifier	s		10142981	1					
ANR	10143093	ExpressionStatement	XYZ [ 0 ] = ( float ) ( x / y * L )	1128:1:28756:28781	10142981	8	True				
ANR	10143094	AssignmentExpression	XYZ [ 0 ] = ( float ) ( x / y * L )		10142981	0		=			
ANR	10143095	ArrayIndexing	XYZ [ 0 ]		10142981	0					
ANR	10143096	Identifier	XYZ		10142981	0					
ANR	10143097	PrimaryExpression	0		10142981	1					
ANR	10143098	CastExpression	( float ) ( x / y * L )		10142981	1					
ANR	10143099	CastTarget	float		10142981	0					
ANR	10143100	MultiplicativeExpression	x / y * L		10142981	1		/			
ANR	10143101	Identifier	x		10142981	0					
ANR	10143102	MultiplicativeExpression	y * L		10142981	1		*			
ANR	10143103	Identifier	y		10142981	0					
ANR	10143104	Identifier	L		10142981	1					
ANR	10143105	ExpressionStatement	XYZ [ 1 ] = ( float ) L	1129:1:28784:28801	10142981	9	True				
ANR	10143106	AssignmentExpression	XYZ [ 1 ] = ( float ) L		10142981	0		=			
ANR	10143107	ArrayIndexing	XYZ [ 1 ]		10142981	0					
ANR	10143108	Identifier	XYZ		10142981	0					
ANR	10143109	PrimaryExpression	1		10142981	1					
ANR	10143110	CastExpression	( float ) L		10142981	1					
ANR	10143111	CastTarget	float		10142981	0					
ANR	10143112	Identifier	L		10142981	1					
ANR	10143113	ExpressionStatement	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )	1130:1:28804:28836	10142981	10	True				
ANR	10143114	AssignmentExpression	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )		10142981	0		=			
ANR	10143115	ArrayIndexing	XYZ [ 2 ]		10142981	0					
ANR	10143116	Identifier	XYZ		10142981	0					
ANR	10143117	PrimaryExpression	2		10142981	1					
ANR	10143118	CastExpression	( float ) ( ( 1. - x - y ) / y * L )		10142981	1					
ANR	10143119	CastTarget	float		10142981	0					
ANR	10143120	MultiplicativeExpression	( 1. - x - y ) / y * L		10142981	1		/			
ANR	10143121	AdditiveExpression	1. - x - y		10142981	0		-			
ANR	10143122	PrimaryExpression	1.		10142981	0					
ANR	10143123	AdditiveExpression	x - y		10142981	1		-			
ANR	10143124	Identifier	x		10142981	0					
ANR	10143125	Identifier	y		10142981	1					
ANR	10143126	MultiplicativeExpression	y * L		10142981	1		*			
ANR	10143127	Identifier	y		10142981	0					
ANR	10143128	Identifier	L		10142981	1					
ANR	10143129	ReturnType	void		10142981	1					
ANR	10143130	Identifier	LogLuv32toXYZ		10142981	2					
ANR	10143131	ParameterList	"uint32 p , float XYZ [ 3 ]"		10142981	3					
ANR	10143132	Parameter	uint32 p	1112:14:28396:28403	10142981	0	True				
ANR	10143133	ParameterType	uint32		10142981	0					
ANR	10143134	Identifier	p		10142981	1					
ANR	10143135	Parameter	float XYZ [ 3 ]	1112:24:28406:28417	10142981	1	True				
ANR	10143136	ParameterType	float [ 3 ]		10142981	0					
ANR	10143137	Identifier	XYZ		10142981	1					
ANR	10143138	CFGEntryNode	ENTRY		10142981		True				
ANR	10143139	CFGExitNode	EXIT		10142981		True				
ANR	10143140	Symbol	p		10142981						
ANR	10143141	Symbol	s		10142981						
ANR	10143142	Symbol	LogL16toY		10142981						
ANR	10143143	Symbol	u		10142981						
ANR	10143144	Symbol	v		10142981						
ANR	10143145	Symbol	XYZ		10142981						
ANR	10143146	Symbol	x		10142981						
ANR	10143147	Symbol	y		10142981						
ANR	10143148	Symbol	UVSCALE		10142981						
ANR	10143149	Symbol	L		10142981						
ANR	10143150	Symbol	* XYZ		10142981						
ANR	10143151	Function	LogLuv32fromXYZ	1136:0:28874:29429							
ANR	10143152	FunctionDef	"LogLuv32fromXYZ (float XYZ [ 3 ] , int em)"		10143151	0					
ANR	10143153	CompoundStatement		1138:0:28919:29429	10143151	0					
ANR	10143154	IdentifierDeclStatement	"unsigned int Le , ue , ve ;"	1139:1:28922:28945	10143151	0	True				
ANR	10143155	IdentifierDecl	Le		10143151	0					
ANR	10143156	IdentifierDeclType	unsigned int		10143151	0					
ANR	10143157	Identifier	Le		10143151	1					
ANR	10143158	IdentifierDecl	ue		10143151	1					
ANR	10143159	IdentifierDeclType	unsigned int		10143151	0					
ANR	10143160	Identifier	ue		10143151	1					
ANR	10143161	IdentifierDecl	ve		10143151	2					
ANR	10143162	IdentifierDeclType	unsigned int		10143151	0					
ANR	10143163	Identifier	ve		10143151	1					
ANR	10143164	IdentifierDeclStatement	"double u , v , s ;"	1140:1:28948:28962	10143151	1	True				
ANR	10143165	IdentifierDecl	u		10143151	0					
ANR	10143166	IdentifierDeclType	double		10143151	0					
ANR	10143167	Identifier	u		10143151	1					
ANR	10143168	IdentifierDecl	v		10143151	1					
ANR	10143169	IdentifierDeclType	double		10143151	0					
ANR	10143170	Identifier	v		10143151	1					
ANR	10143171	IdentifierDecl	s		10143151	2					
ANR	10143172	IdentifierDeclType	double		10143151	0					
ANR	10143173	Identifier	s		10143151	1					
ANR	10143174	ExpressionStatement	"Le = ( unsigned int ) LogL16fromY ( XYZ [ 1 ] , em )"	1142:1:28993:29035	10143151	2	True				
ANR	10143175	AssignmentExpression	"Le = ( unsigned int ) LogL16fromY ( XYZ [ 1 ] , em )"		10143151	0		=			
ANR	10143176	Identifier	Le		10143151	0					
ANR	10143177	CastExpression	"( unsigned int ) LogL16fromY ( XYZ [ 1 ] , em )"		10143151	1					
ANR	10143178	CastTarget	unsigned int		10143151	0					
ANR	10143179	CallExpression	"LogL16fromY ( XYZ [ 1 ] , em )"		10143151	1					
ANR	10143180	Callee	LogL16fromY		10143151	0					
ANR	10143181	Identifier	LogL16fromY		10143151	0					
ANR	10143182	ArgumentList	XYZ [ 1 ]		10143151	1					
ANR	10143183	Argument	XYZ [ 1 ]		10143151	0					
ANR	10143184	ArrayIndexing	XYZ [ 1 ]		10143151	0					
ANR	10143185	Identifier	XYZ		10143151	0					
ANR	10143186	PrimaryExpression	1		10143151	1					
ANR	10143187	Argument	em		10143151	1					
ANR	10143188	Identifier	em		10143151	0					
ANR	10143189	ExpressionStatement	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]	1144:1:29062:29097	10143151	3	True				
ANR	10143190	AssignmentExpression	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		10143151	0		=			
ANR	10143191	Identifier	s		10143151	0					
ANR	10143192	AdditiveExpression	XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		10143151	1		+			
ANR	10143193	ArrayIndexing	XYZ [ 0 ]		10143151	0					
ANR	10143194	Identifier	XYZ		10143151	0					
ANR	10143195	PrimaryExpression	0		10143151	1					
ANR	10143196	AdditiveExpression	15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		10143151	1		+			
ANR	10143197	MultiplicativeExpression	15. * XYZ [ 1 ]		10143151	0		*			
ANR	10143198	PrimaryExpression	15.		10143151	0					
ANR	10143199	ArrayIndexing	XYZ [ 1 ]		10143151	1					
ANR	10143200	Identifier	XYZ		10143151	0					
ANR	10143201	PrimaryExpression	1		10143151	1					
ANR	10143202	MultiplicativeExpression	3. * XYZ [ 2 ]		10143151	1		*			
ANR	10143203	PrimaryExpression	3.		10143151	0					
ANR	10143204	ArrayIndexing	XYZ [ 2 ]		10143151	1					
ANR	10143205	Identifier	XYZ		10143151	0					
ANR	10143206	PrimaryExpression	2		10143151	1					
ANR	10143207	IfStatement	if ( ! Le || s <= 0. )		10143151	4					
ANR	10143208	Condition	! Le || s <= 0.	1145:5:29104:29117	10143151	0	True				
ANR	10143209	OrExpression	! Le || s <= 0.		10143151	0		||			
ANR	10143210	UnaryOperationExpression	! Le		10143151	0					
ANR	10143211	UnaryOperator	!		10143151	0					
ANR	10143212	Identifier	Le		10143151	1					
ANR	10143213	RelationalExpression	s <= 0.		10143151	1		<=			
ANR	10143214	Identifier	s		10143151	0					
ANR	10143215	PrimaryExpression	0.		10143151	1					
ANR	10143216	CompoundStatement		8:21:200:200	10143151	1					
ANR	10143217	ExpressionStatement	u = U_NEU	1146:2:29124:29133	10143151	0	True				
ANR	10143218	AssignmentExpression	u = U_NEU		10143151	0		=			
ANR	10143219	Identifier	u		10143151	0					
ANR	10143220	Identifier	U_NEU		10143151	1					
ANR	10143221	ExpressionStatement	v = V_NEU	1147:2:29137:29146	10143151	1	True				
ANR	10143222	AssignmentExpression	v = V_NEU		10143151	0		=			
ANR	10143223	Identifier	v		10143151	0					
ANR	10143224	Identifier	V_NEU		10143151	1					
ANR	10143225	ElseStatement	else		10143151	0					
ANR	10143226	CompoundStatement		11:8:236:236	10143151	0					
ANR	10143227	ExpressionStatement	u = 4. * XYZ [ 0 ] / s	1149:2:29160:29177	10143151	0	True				
ANR	10143228	AssignmentExpression	u = 4. * XYZ [ 0 ] / s		10143151	0		=			
ANR	10143229	Identifier	u		10143151	0					
ANR	10143230	MultiplicativeExpression	4. * XYZ [ 0 ] / s		10143151	1		*			
ANR	10143231	PrimaryExpression	4.		10143151	0					
ANR	10143232	MultiplicativeExpression	XYZ [ 0 ] / s		10143151	1		/			
ANR	10143233	ArrayIndexing	XYZ [ 0 ]		10143151	0					
ANR	10143234	Identifier	XYZ		10143151	0					
ANR	10143235	PrimaryExpression	0		10143151	1					
ANR	10143236	Identifier	s		10143151	1					
ANR	10143237	ExpressionStatement	v = 9. * XYZ [ 1 ] / s	1150:2:29181:29198	10143151	1	True				
ANR	10143238	AssignmentExpression	v = 9. * XYZ [ 1 ] / s		10143151	0		=			
ANR	10143239	Identifier	v		10143151	0					
ANR	10143240	MultiplicativeExpression	9. * XYZ [ 1 ] / s		10143151	1		*			
ANR	10143241	PrimaryExpression	9.		10143151	0					
ANR	10143242	MultiplicativeExpression	XYZ [ 1 ] / s		10143151	1		/			
ANR	10143243	ArrayIndexing	XYZ [ 1 ]		10143151	0					
ANR	10143244	Identifier	XYZ		10143151	0					
ANR	10143245	PrimaryExpression	1		10143151	1					
ANR	10143246	Identifier	s		10143151	1					
ANR	10143247	IfStatement	if ( u <= 0. )		10143151	5					
ANR	10143248	Condition	u <= 0.	1152:5:29208:29214	10143151	0	True				
ANR	10143249	RelationalExpression	u <= 0.		10143151	0		<=			
ANR	10143250	Identifier	u		10143151	0					
ANR	10143251	PrimaryExpression	0.		10143151	1					
ANR	10143252	ExpressionStatement	ue = 0	1152:14:29217:29223	10143151	1	True				
ANR	10143253	AssignmentExpression	ue = 0		10143151	0		=			
ANR	10143254	Identifier	ue		10143151	0					
ANR	10143255	PrimaryExpression	0		10143151	1					
ANR	10143256	ElseStatement	else		10143151	0					
ANR	10143257	ExpressionStatement	"ue = itrunc ( UVSCALE * u , em )"	1153:6:29231:29257	10143151	0	True				
ANR	10143258	AssignmentExpression	"ue = itrunc ( UVSCALE * u , em )"		10143151	0		=			
ANR	10143259	Identifier	ue		10143151	0					
ANR	10143260	CallExpression	"itrunc ( UVSCALE * u , em )"		10143151	1					
ANR	10143261	Callee	itrunc		10143151	0					
ANR	10143262	Identifier	itrunc		10143151	0					
ANR	10143263	ArgumentList	UVSCALE * u		10143151	1					
ANR	10143264	Argument	UVSCALE * u		10143151	0					
ANR	10143265	MultiplicativeExpression	UVSCALE * u		10143151	0		*			
ANR	10143266	Identifier	UVSCALE		10143151	0					
ANR	10143267	Identifier	u		10143151	1					
ANR	10143268	Argument	em		10143151	1					
ANR	10143269	Identifier	em		10143151	0					
ANR	10143270	IfStatement	if ( ue > 255 )		10143151	6					
ANR	10143271	Condition	ue > 255	1154:5:29264:29271	10143151	0	True				
ANR	10143272	RelationalExpression	ue > 255		10143151	0		>			
ANR	10143273	Identifier	ue		10143151	0					
ANR	10143274	PrimaryExpression	255		10143151	1					
ANR	10143275	ExpressionStatement	ue = 255	1154:15:29274:29282	10143151	1	True				
ANR	10143276	AssignmentExpression	ue = 255		10143151	0		=			
ANR	10143277	Identifier	ue		10143151	0					
ANR	10143278	PrimaryExpression	255		10143151	1					
ANR	10143279	IfStatement	if ( v <= 0. )		10143151	7					
ANR	10143280	Condition	v <= 0.	1155:5:29289:29295	10143151	0	True				
ANR	10143281	RelationalExpression	v <= 0.		10143151	0		<=			
ANR	10143282	Identifier	v		10143151	0					
ANR	10143283	PrimaryExpression	0.		10143151	1					
ANR	10143284	ExpressionStatement	ve = 0	1155:14:29298:29304	10143151	1	True				
ANR	10143285	AssignmentExpression	ve = 0		10143151	0		=			
ANR	10143286	Identifier	ve		10143151	0					
ANR	10143287	PrimaryExpression	0		10143151	1					
ANR	10143288	ElseStatement	else		10143151	0					
ANR	10143289	ExpressionStatement	"ve = itrunc ( UVSCALE * v , em )"	1156:6:29312:29338	10143151	0	True				
ANR	10143290	AssignmentExpression	"ve = itrunc ( UVSCALE * v , em )"		10143151	0		=			
ANR	10143291	Identifier	ve		10143151	0					
ANR	10143292	CallExpression	"itrunc ( UVSCALE * v , em )"		10143151	1					
ANR	10143293	Callee	itrunc		10143151	0					
ANR	10143294	Identifier	itrunc		10143151	0					
ANR	10143295	ArgumentList	UVSCALE * v		10143151	1					
ANR	10143296	Argument	UVSCALE * v		10143151	0					
ANR	10143297	MultiplicativeExpression	UVSCALE * v		10143151	0		*			
ANR	10143298	Identifier	UVSCALE		10143151	0					
ANR	10143299	Identifier	v		10143151	1					
ANR	10143300	Argument	em		10143151	1					
ANR	10143301	Identifier	em		10143151	0					
ANR	10143302	IfStatement	if ( ve > 255 )		10143151	8					
ANR	10143303	Condition	ve > 255	1157:5:29345:29352	10143151	0	True				
ANR	10143304	RelationalExpression	ve > 255		10143151	0		>			
ANR	10143305	Identifier	ve		10143151	0					
ANR	10143306	PrimaryExpression	255		10143151	1					
ANR	10143307	ExpressionStatement	ve = 255	1157:15:29355:29363	10143151	1	True				
ANR	10143308	AssignmentExpression	ve = 255		10143151	0		=			
ANR	10143309	Identifier	ve		10143151	0					
ANR	10143310	PrimaryExpression	255		10143151	1					
ANR	10143311	ReturnStatement	return ( Le << 16 | ue << 8 | ve ) ;	1159:1:29395:29427	10143151	9	True				
ANR	10143312	InclusiveOrExpression	Le << 16 | ue << 8 | ve		10143151	0		|			
ANR	10143313	ShiftExpression	Le << 16		10143151	0		<<			
ANR	10143314	Identifier	Le		10143151	0					
ANR	10143315	PrimaryExpression	16		10143151	1					
ANR	10143316	InclusiveOrExpression	ue << 8 | ve		10143151	1		|			
ANR	10143317	ShiftExpression	ue << 8		10143151	0		<<			
ANR	10143318	Identifier	ue		10143151	0					
ANR	10143319	PrimaryExpression	8		10143151	1					
ANR	10143320	Identifier	ve		10143151	1					
ANR	10143321	ReturnType	uint32		10143151	1					
ANR	10143322	Identifier	LogLuv32fromXYZ		10143151	2					
ANR	10143323	ParameterList	"float XYZ [ 3 ] , int em"		10143151	3					
ANR	10143324	Parameter	float XYZ [ 3 ]	1137:16:28897:28908	10143151	0	True				
ANR	10143325	ParameterType	float [ 3 ]		10143151	0					
ANR	10143326	Identifier	XYZ		10143151	1					
ANR	10143327	Parameter	int em	1137:30:28911:28916	10143151	1	True				
ANR	10143328	ParameterType	int		10143151	0					
ANR	10143329	Identifier	em		10143151	1					
ANR	10143330	CFGEntryNode	ENTRY		10143151		True				
ANR	10143331	CFGExitNode	EXIT		10143151		True				
ANR	10143332	Symbol	itrunc		10143151						
ANR	10143333	Symbol	em		10143151						
ANR	10143334	Symbol	UVSCALE		10143151						
ANR	10143335	Symbol	LogL16fromY		10143151						
ANR	10143336	Symbol	U_NEU		10143151						
ANR	10143337	Symbol	ve		10143151						
ANR	10143338	Symbol	ue		10143151						
ANR	10143339	Symbol	s		10143151						
ANR	10143340	Symbol	u		10143151						
ANR	10143341	Symbol	v		10143151						
ANR	10143342	Symbol	XYZ		10143151						
ANR	10143343	Symbol	Le		10143151						
ANR	10143344	Symbol	* XYZ		10143151						
ANR	10143345	Symbol	V_NEU		10143151						
ANR	10143346	Function	Luv32toXYZ	1162:0:29432:29626							
ANR	10143347	FunctionDef	"Luv32toXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		10143346	0					
ANR	10143348	CompoundStatement		1164:0:29495:29626	10143346	0					
ANR	10143349	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1165:1:29498:29530	10143346	0	True				
ANR	10143350	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10143346	0					
ANR	10143351	IdentifierDeclType	uint32 *		10143346	0					
ANR	10143352	Identifier	luv		10143346	1					
ANR	10143353	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10143346	2		=			
ANR	10143354	Identifier	luv		10143346	0					
ANR	10143355	CastExpression	( uint32 * ) sp -> tbuf		10143346	1					
ANR	10143356	CastTarget	uint32 *		10143346	0					
ANR	10143357	PtrMemberAccess	sp -> tbuf		10143346	1					
ANR	10143358	Identifier	sp		10143346	0					
ANR	10143359	Identifier	tbuf		10143346	1					
ANR	10143360	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1166:1:29535:29559	10143346	1	True				
ANR	10143361	IdentifierDecl	* xyz = ( float * ) op		10143346	0					
ANR	10143362	IdentifierDeclType	float *		10143346	0					
ANR	10143363	Identifier	xyz		10143346	1					
ANR	10143364	AssignmentExpression	* xyz = ( float * ) op		10143346	2		=			
ANR	10143365	Identifier	xyz		10143346	0					
ANR	10143366	CastExpression	( float * ) op		10143346	1					
ANR	10143367	CastTarget	float *		10143346	0					
ANR	10143368	Identifier	op		10143346	1					
ANR	10143369	WhileStatement	while ( n -- > 0 )		10143346	2					
ANR	10143370	Condition	n -- > 0	1168:8:29570:29576	10143346	0	True				
ANR	10143371	RelationalExpression	n -- > 0		10143346	0		>			
ANR	10143372	PostIncDecOperationExpression	n --		10143346	0					
ANR	10143373	Identifier	n		10143346	0					
ANR	10143374	IncDec	--		10143346	1					
ANR	10143375	PrimaryExpression	0		10143346	1					
ANR	10143376	CompoundStatement		5:17:83:83	10143346	1					
ANR	10143377	ExpressionStatement	"LogLuv32toXYZ ( * luv ++ , xyz )"	1169:2:29583:29609	10143346	0	True				
ANR	10143378	CallExpression	"LogLuv32toXYZ ( * luv ++ , xyz )"		10143346	0					
ANR	10143379	Callee	LogLuv32toXYZ		10143346	0					
ANR	10143380	Identifier	LogLuv32toXYZ		10143346	0					
ANR	10143381	ArgumentList	* luv ++		10143346	1					
ANR	10143382	Argument	* luv ++		10143346	0					
ANR	10143383	UnaryOperationExpression	* luv ++		10143346	0					
ANR	10143384	UnaryOperator	*		10143346	0					
ANR	10143385	PostIncDecOperationExpression	luv ++		10143346	1					
ANR	10143386	Identifier	luv		10143346	0					
ANR	10143387	IncDec	++		10143346	1					
ANR	10143388	Argument	xyz		10143346	1					
ANR	10143389	Identifier	xyz		10143346	0					
ANR	10143390	ExpressionStatement	xyz += 3	1170:2:29613:29621	10143346	1	True				
ANR	10143391	AssignmentExpression	xyz += 3		10143346	0		+=			
ANR	10143392	Identifier	xyz		10143346	0					
ANR	10143393	PrimaryExpression	3		10143346	1					
ANR	10143394	ReturnType	static void		10143346	1					
ANR	10143395	Identifier	Luv32toXYZ		10143346	2					
ANR	10143396	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10143346	3					
ANR	10143397	Parameter	LogLuvState * sp	1163:11:29455:29469	10143346	0	True				
ANR	10143398	ParameterType	LogLuvState *		10143346	0					
ANR	10143399	Identifier	sp		10143346	1					
ANR	10143400	Parameter	uint8 * op	1163:28:29472:29480	10143346	1	True				
ANR	10143401	ParameterType	uint8 *		10143346	0					
ANR	10143402	Identifier	op		10143346	1					
ANR	10143403	Parameter	tmsize_t n	1163:39:29483:29492	10143346	2	True				
ANR	10143404	ParameterType	tmsize_t		10143346	0					
ANR	10143405	Identifier	n		10143346	1					
ANR	10143406	CFGEntryNode	ENTRY		10143346		True				
ANR	10143407	CFGExitNode	EXIT		10143346		True				
ANR	10143408	Symbol	* sp		10143346						
ANR	10143409	Symbol	op		10143346						
ANR	10143410	Symbol	* luv ++		10143346						
ANR	10143411	Symbol	xyz		10143346						
ANR	10143412	Symbol	sp -> tbuf		10143346						
ANR	10143413	Symbol	luv		10143346						
ANR	10143414	Symbol	sp		10143346						
ANR	10143415	Symbol	n		10143346						
ANR	10143416	Function	Luv32toLuv48	1174:0:29629:29997							
ANR	10143417	FunctionDef	"Luv32toLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		10143416	0					
ANR	10143418	CompoundStatement		1176:0:29694:29997	10143416	0					
ANR	10143419	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1177:1:29697:29729	10143416	0	True				
ANR	10143420	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10143416	0					
ANR	10143421	IdentifierDeclType	uint32 *		10143416	0					
ANR	10143422	Identifier	luv		10143416	1					
ANR	10143423	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10143416	2		=			
ANR	10143424	Identifier	luv		10143416	0					
ANR	10143425	CastExpression	( uint32 * ) sp -> tbuf		10143416	1					
ANR	10143426	CastTarget	uint32 *		10143416	0					
ANR	10143427	PtrMemberAccess	sp -> tbuf		10143416	1					
ANR	10143428	Identifier	sp		10143416	0					
ANR	10143429	Identifier	tbuf		10143416	1					
ANR	10143430	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1178:1:29734:29759	10143416	1	True				
ANR	10143431	IdentifierDecl	* luv3 = ( int16 * ) op		10143416	0					
ANR	10143432	IdentifierDeclType	int16 *		10143416	0					
ANR	10143433	Identifier	luv3		10143416	1					
ANR	10143434	AssignmentExpression	* luv3 = ( int16 * ) op		10143416	2		=			
ANR	10143435	Identifier	luv3		10143416	0					
ANR	10143436	CastExpression	( int16 * ) op		10143416	1					
ANR	10143437	CastTarget	int16 *		10143416	0					
ANR	10143438	Identifier	op		10143416	1					
ANR	10143439	WhileStatement	while ( n -- > 0 )		10143416	2					
ANR	10143440	Condition	n -- > 0	1180:8:29770:29776	10143416	0	True				
ANR	10143441	RelationalExpression	n -- > 0		10143416	0		>			
ANR	10143442	PostIncDecOperationExpression	n --		10143416	0					
ANR	10143443	Identifier	n		10143416	0					
ANR	10143444	IncDec	--		10143416	1					
ANR	10143445	PrimaryExpression	0		10143416	1					
ANR	10143446	CompoundStatement		6:2:88:99	10143416	1					
ANR	10143447	IdentifierDeclStatement	"double u , v ;"	1181:2:29783:29794	10143416	0	True				
ANR	10143448	IdentifierDecl	u		10143416	0					
ANR	10143449	IdentifierDeclType	double		10143416	0					
ANR	10143450	Identifier	u		10143416	1					
ANR	10143451	IdentifierDecl	v		10143416	1					
ANR	10143452	IdentifierDeclType	double		10143416	0					
ANR	10143453	Identifier	v		10143416	1					
ANR	10143454	ExpressionStatement	* luv3 ++ = ( int16 ) ( * luv >> 16 )	1183:2:29799:29828	10143416	1	True				
ANR	10143455	AssignmentExpression	* luv3 ++ = ( int16 ) ( * luv >> 16 )		10143416	0		=			
ANR	10143456	UnaryOperationExpression	* luv3 ++		10143416	0					
ANR	10143457	UnaryOperator	*		10143416	0					
ANR	10143458	PostIncDecOperationExpression	luv3 ++		10143416	1					
ANR	10143459	Identifier	luv3		10143416	0					
ANR	10143460	IncDec	++		10143416	1					
ANR	10143461	CastExpression	( int16 ) ( * luv >> 16 )		10143416	1					
ANR	10143462	CastTarget	int16		10143416	0					
ANR	10143463	ShiftExpression	* luv >> 16		10143416	1		>>			
ANR	10143464	UnaryOperationExpression	* luv		10143416	0					
ANR	10143465	UnaryOperator	*		10143416	0					
ANR	10143466	Identifier	luv		10143416	1					
ANR	10143467	PrimaryExpression	16		10143416	1					
ANR	10143468	ExpressionStatement	u = 1. / UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )	1184:2:29832:29872	10143416	2	True				
ANR	10143469	AssignmentExpression	u = 1. / UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )		10143416	0		=			
ANR	10143470	Identifier	u		10143416	0					
ANR	10143471	MultiplicativeExpression	1. / UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )		10143416	1		/			
ANR	10143472	PrimaryExpression	1.		10143416	0					
ANR	10143473	MultiplicativeExpression	UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )		10143416	1		*			
ANR	10143474	Identifier	UVSCALE		10143416	0					
ANR	10143475	AdditiveExpression	( * luv >> 8 & 0xff ) + .5		10143416	1		+			
ANR	10143476	BitAndExpression	* luv >> 8 & 0xff		10143416	0		&			
ANR	10143477	ShiftExpression	* luv >> 8		10143416	0		>>			
ANR	10143478	UnaryOperationExpression	* luv		10143416	0					
ANR	10143479	UnaryOperator	*		10143416	0					
ANR	10143480	Identifier	luv		10143416	1					
ANR	10143481	PrimaryExpression	8		10143416	1					
ANR	10143482	PrimaryExpression	0xff		10143416	1					
ANR	10143483	PrimaryExpression	.5		10143416	1					
ANR	10143484	ExpressionStatement	v = 1. / UVSCALE * ( ( * luv & 0xff ) + .5 )	1185:2:29876:29913	10143416	3	True				
ANR	10143485	AssignmentExpression	v = 1. / UVSCALE * ( ( * luv & 0xff ) + .5 )		10143416	0		=			
ANR	10143486	Identifier	v		10143416	0					
ANR	10143487	MultiplicativeExpression	1. / UVSCALE * ( ( * luv & 0xff ) + .5 )		10143416	1		/			
ANR	10143488	PrimaryExpression	1.		10143416	0					
ANR	10143489	MultiplicativeExpression	UVSCALE * ( ( * luv & 0xff ) + .5 )		10143416	1		*			
ANR	10143490	Identifier	UVSCALE		10143416	0					
ANR	10143491	AdditiveExpression	( * luv & 0xff ) + .5		10143416	1		+			
ANR	10143492	BitAndExpression	* luv & 0xff		10143416	0		&			
ANR	10143493	UnaryOperationExpression	* luv		10143416	0					
ANR	10143494	UnaryOperator	*		10143416	0					
ANR	10143495	Identifier	luv		10143416	1					
ANR	10143496	PrimaryExpression	0xff		10143416	1					
ANR	10143497	PrimaryExpression	.5		10143416	1					
ANR	10143498	ExpressionStatement	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )	1186:2:29917:29948	10143416	4	True				
ANR	10143499	AssignmentExpression	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )		10143416	0		=			
ANR	10143500	UnaryOperationExpression	* luv3 ++		10143416	0					
ANR	10143501	UnaryOperator	*		10143416	0					
ANR	10143502	PostIncDecOperationExpression	luv3 ++		10143416	1					
ANR	10143503	Identifier	luv3		10143416	0					
ANR	10143504	IncDec	++		10143416	1					
ANR	10143505	CastExpression	( int16 ) ( u * ( 1L << 15 ) )		10143416	1					
ANR	10143506	CastTarget	int16		10143416	0					
ANR	10143507	MultiplicativeExpression	u * ( 1L << 15 )		10143416	1		*			
ANR	10143508	Identifier	u		10143416	0					
ANR	10143509	ShiftExpression	1L << 15		10143416	1		<<			
ANR	10143510	PrimaryExpression	1L		10143416	0					
ANR	10143511	PrimaryExpression	15		10143416	1					
ANR	10143512	ExpressionStatement	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )	1187:2:29952:29983	10143416	5	True				
ANR	10143513	AssignmentExpression	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )		10143416	0		=			
ANR	10143514	UnaryOperationExpression	* luv3 ++		10143416	0					
ANR	10143515	UnaryOperator	*		10143416	0					
ANR	10143516	PostIncDecOperationExpression	luv3 ++		10143416	1					
ANR	10143517	Identifier	luv3		10143416	0					
ANR	10143518	IncDec	++		10143416	1					
ANR	10143519	CastExpression	( int16 ) ( v * ( 1L << 15 ) )		10143416	1					
ANR	10143520	CastTarget	int16		10143416	0					
ANR	10143521	MultiplicativeExpression	v * ( 1L << 15 )		10143416	1		*			
ANR	10143522	Identifier	v		10143416	0					
ANR	10143523	ShiftExpression	1L << 15		10143416	1		<<			
ANR	10143524	PrimaryExpression	1L		10143416	0					
ANR	10143525	PrimaryExpression	15		10143416	1					
ANR	10143526	ExpressionStatement	luv ++	1188:2:29987:29992	10143416	6	True				
ANR	10143527	PostIncDecOperationExpression	luv ++		10143416	0					
ANR	10143528	Identifier	luv		10143416	0					
ANR	10143529	IncDec	++		10143416	1					
ANR	10143530	ReturnType	static void		10143416	1					
ANR	10143531	Identifier	Luv32toLuv48		10143416	2					
ANR	10143532	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10143416	3					
ANR	10143533	Parameter	LogLuvState * sp	1175:13:29654:29668	10143416	0	True				
ANR	10143534	ParameterType	LogLuvState *		10143416	0					
ANR	10143535	Identifier	sp		10143416	1					
ANR	10143536	Parameter	uint8 * op	1175:30:29671:29679	10143416	1	True				
ANR	10143537	ParameterType	uint8 *		10143416	0					
ANR	10143538	Identifier	op		10143416	1					
ANR	10143539	Parameter	tmsize_t n	1175:41:29682:29691	10143416	2	True				
ANR	10143540	ParameterType	tmsize_t		10143416	0					
ANR	10143541	Identifier	n		10143416	1					
ANR	10143542	CFGEntryNode	ENTRY		10143416		True				
ANR	10143543	CFGExitNode	EXIT		10143416		True				
ANR	10143544	Symbol	* sp		10143416						
ANR	10143545	Symbol	op		10143416						
ANR	10143546	Symbol	luv3		10143416						
ANR	10143547	Symbol	u		10143416						
ANR	10143548	Symbol	v		10143416						
ANR	10143549	Symbol	* luv		10143416						
ANR	10143550	Symbol	sp -> tbuf		10143416						
ANR	10143551	Symbol	* luv3 ++		10143416						
ANR	10143552	Symbol	UVSCALE		10143416						
ANR	10143553	Symbol	luv		10143416						
ANR	10143554	Symbol	sp		10143416						
ANR	10143555	Symbol	n		10143416						
ANR	10143556	Function	Luv32toRGB	1192:0:30000:30235							
ANR	10143557	FunctionDef	"Luv32toRGB (LogLuvState * sp , uint8 * op , tmsize_t n)"		10143556	0					
ANR	10143558	CompoundStatement		1194:0:30063:30235	10143556	0					
ANR	10143559	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1195:1:30066:30098	10143556	0	True				
ANR	10143560	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10143556	0					
ANR	10143561	IdentifierDeclType	uint32 *		10143556	0					
ANR	10143562	Identifier	luv		10143556	1					
ANR	10143563	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10143556	2		=			
ANR	10143564	Identifier	luv		10143556	0					
ANR	10143565	CastExpression	( uint32 * ) sp -> tbuf		10143556	1					
ANR	10143566	CastTarget	uint32 *		10143556	0					
ANR	10143567	PtrMemberAccess	sp -> tbuf		10143556	1					
ANR	10143568	Identifier	sp		10143556	0					
ANR	10143569	Identifier	tbuf		10143556	1					
ANR	10143570	IdentifierDeclStatement	uint8 * rgb = ( uint8 * ) op ;	1196:1:30103:30127	10143556	1	True				
ANR	10143571	IdentifierDecl	* rgb = ( uint8 * ) op		10143556	0					
ANR	10143572	IdentifierDeclType	uint8 *		10143556	0					
ANR	10143573	Identifier	rgb		10143556	1					
ANR	10143574	AssignmentExpression	* rgb = ( uint8 * ) op		10143556	2		=			
ANR	10143575	Identifier	rgb		10143556	0					
ANR	10143576	CastExpression	( uint8 * ) op		10143556	1					
ANR	10143577	CastTarget	uint8 *		10143556	0					
ANR	10143578	Identifier	op		10143556	1					
ANR	10143579	WhileStatement	while ( n -- > 0 )		10143556	2					
ANR	10143580	Condition	n -- > 0	1198:8:30138:30144	10143556	0	True				
ANR	10143581	RelationalExpression	n -- > 0		10143556	0		>			
ANR	10143582	PostIncDecOperationExpression	n --		10143556	0					
ANR	10143583	Identifier	n		10143556	0					
ANR	10143584	IncDec	--		10143556	1					
ANR	10143585	PrimaryExpression	0		10143556	1					
ANR	10143586	CompoundStatement		6:2:87:99	10143556	1					
ANR	10143587	IdentifierDeclStatement	float xyz [ 3 ] ;	1199:2:30151:30163	10143556	0	True				
ANR	10143588	IdentifierDecl	xyz [ 3 ]		10143556	0					
ANR	10143589	IdentifierDeclType	float [ 3 ]		10143556	0					
ANR	10143590	Identifier	xyz		10143556	1					
ANR	10143591	PrimaryExpression	3		10143556	2					
ANR	10143592	ExpressionStatement	"LogLuv32toXYZ ( * luv ++ , xyz )"	1201:2:30168:30194	10143556	1	True				
ANR	10143593	CallExpression	"LogLuv32toXYZ ( * luv ++ , xyz )"		10143556	0					
ANR	10143594	Callee	LogLuv32toXYZ		10143556	0					
ANR	10143595	Identifier	LogLuv32toXYZ		10143556	0					
ANR	10143596	ArgumentList	* luv ++		10143556	1					
ANR	10143597	Argument	* luv ++		10143556	0					
ANR	10143598	UnaryOperationExpression	* luv ++		10143556	0					
ANR	10143599	UnaryOperator	*		10143556	0					
ANR	10143600	PostIncDecOperationExpression	luv ++		10143556	1					
ANR	10143601	Identifier	luv		10143556	0					
ANR	10143602	IncDec	++		10143556	1					
ANR	10143603	Argument	xyz		10143556	1					
ANR	10143604	Identifier	xyz		10143556	0					
ANR	10143605	ExpressionStatement	"XYZtoRGB24 ( xyz , rgb )"	1202:2:30198:30218	10143556	2	True				
ANR	10143606	CallExpression	"XYZtoRGB24 ( xyz , rgb )"		10143556	0					
ANR	10143607	Callee	XYZtoRGB24		10143556	0					
ANR	10143608	Identifier	XYZtoRGB24		10143556	0					
ANR	10143609	ArgumentList	xyz		10143556	1					
ANR	10143610	Argument	xyz		10143556	0					
ANR	10143611	Identifier	xyz		10143556	0					
ANR	10143612	Argument	rgb		10143556	1					
ANR	10143613	Identifier	rgb		10143556	0					
ANR	10143614	ExpressionStatement	rgb += 3	1203:2:30222:30230	10143556	3	True				
ANR	10143615	AssignmentExpression	rgb += 3		10143556	0		+=			
ANR	10143616	Identifier	rgb		10143556	0					
ANR	10143617	PrimaryExpression	3		10143556	1					
ANR	10143618	ReturnType	static void		10143556	1					
ANR	10143619	Identifier	Luv32toRGB		10143556	2					
ANR	10143620	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10143556	3					
ANR	10143621	Parameter	LogLuvState * sp	1193:11:30023:30037	10143556	0	True				
ANR	10143622	ParameterType	LogLuvState *		10143556	0					
ANR	10143623	Identifier	sp		10143556	1					
ANR	10143624	Parameter	uint8 * op	1193:28:30040:30048	10143556	1	True				
ANR	10143625	ParameterType	uint8 *		10143556	0					
ANR	10143626	Identifier	op		10143556	1					
ANR	10143627	Parameter	tmsize_t n	1193:39:30051:30060	10143556	2	True				
ANR	10143628	ParameterType	tmsize_t		10143556	0					
ANR	10143629	Identifier	n		10143556	1					
ANR	10143630	CFGEntryNode	ENTRY		10143556		True				
ANR	10143631	CFGExitNode	EXIT		10143556		True				
ANR	10143632	Symbol	* sp		10143556						
ANR	10143633	Symbol	op		10143556						
ANR	10143634	Symbol	* luv ++		10143556						
ANR	10143635	Symbol	xyz		10143556						
ANR	10143636	Symbol	sp -> tbuf		10143556						
ANR	10143637	Symbol	luv		10143556						
ANR	10143638	Symbol	rgb		10143556						
ANR	10143639	Symbol	sp		10143556						
ANR	10143640	Symbol	n		10143556						
ANR	10143641	Function	Luv32fromXYZ	1207:0:30238:30454							
ANR	10143642	FunctionDef	"Luv32fromXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		10143641	0					
ANR	10143643	CompoundStatement		1209:0:30303:30454	10143641	0					
ANR	10143644	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1210:1:30306:30338	10143641	0	True				
ANR	10143645	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10143641	0					
ANR	10143646	IdentifierDeclType	uint32 *		10143641	0					
ANR	10143647	Identifier	luv		10143641	1					
ANR	10143648	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10143641	2		=			
ANR	10143649	Identifier	luv		10143641	0					
ANR	10143650	CastExpression	( uint32 * ) sp -> tbuf		10143641	1					
ANR	10143651	CastTarget	uint32 *		10143641	0					
ANR	10143652	PtrMemberAccess	sp -> tbuf		10143641	1					
ANR	10143653	Identifier	sp		10143641	0					
ANR	10143654	Identifier	tbuf		10143641	1					
ANR	10143655	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1211:1:30343:30367	10143641	1	True				
ANR	10143656	IdentifierDecl	* xyz = ( float * ) op		10143641	0					
ANR	10143657	IdentifierDeclType	float *		10143641	0					
ANR	10143658	Identifier	xyz		10143641	1					
ANR	10143659	AssignmentExpression	* xyz = ( float * ) op		10143641	2		=			
ANR	10143660	Identifier	xyz		10143641	0					
ANR	10143661	CastExpression	( float * ) op		10143641	1					
ANR	10143662	CastTarget	float *		10143641	0					
ANR	10143663	Identifier	op		10143641	1					
ANR	10143664	WhileStatement	while ( n -- > 0 )		10143641	2					
ANR	10143665	Condition	n -- > 0	1213:8:30378:30384	10143641	0	True				
ANR	10143666	RelationalExpression	n -- > 0		10143641	0		>			
ANR	10143667	PostIncDecOperationExpression	n --		10143641	0					
ANR	10143668	Identifier	n		10143641	0					
ANR	10143669	IncDec	--		10143641	1					
ANR	10143670	PrimaryExpression	0		10143641	1					
ANR	10143671	CompoundStatement		5:17:83:83	10143641	1					
ANR	10143672	ExpressionStatement	"* luv ++ = LogLuv32fromXYZ ( xyz , sp -> encode_meth )"	1214:2:30391:30437	10143641	0	True				
ANR	10143673	AssignmentExpression	"* luv ++ = LogLuv32fromXYZ ( xyz , sp -> encode_meth )"		10143641	0		=			
ANR	10143674	UnaryOperationExpression	* luv ++		10143641	0					
ANR	10143675	UnaryOperator	*		10143641	0					
ANR	10143676	PostIncDecOperationExpression	luv ++		10143641	1					
ANR	10143677	Identifier	luv		10143641	0					
ANR	10143678	IncDec	++		10143641	1					
ANR	10143679	CallExpression	"LogLuv32fromXYZ ( xyz , sp -> encode_meth )"		10143641	1					
ANR	10143680	Callee	LogLuv32fromXYZ		10143641	0					
ANR	10143681	Identifier	LogLuv32fromXYZ		10143641	0					
ANR	10143682	ArgumentList	xyz		10143641	1					
ANR	10143683	Argument	xyz		10143641	0					
ANR	10143684	Identifier	xyz		10143641	0					
ANR	10143685	Argument	sp -> encode_meth		10143641	1					
ANR	10143686	PtrMemberAccess	sp -> encode_meth		10143641	0					
ANR	10143687	Identifier	sp		10143641	0					
ANR	10143688	Identifier	encode_meth		10143641	1					
ANR	10143689	ExpressionStatement	xyz += 3	1215:2:30441:30449	10143641	1	True				
ANR	10143690	AssignmentExpression	xyz += 3		10143641	0		+=			
ANR	10143691	Identifier	xyz		10143641	0					
ANR	10143692	PrimaryExpression	3		10143641	1					
ANR	10143693	ReturnType	static void		10143641	1					
ANR	10143694	Identifier	Luv32fromXYZ		10143641	2					
ANR	10143695	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10143641	3					
ANR	10143696	Parameter	LogLuvState * sp	1208:13:30263:30277	10143641	0	True				
ANR	10143697	ParameterType	LogLuvState *		10143641	0					
ANR	10143698	Identifier	sp		10143641	1					
ANR	10143699	Parameter	uint8 * op	1208:30:30280:30288	10143641	1	True				
ANR	10143700	ParameterType	uint8 *		10143641	0					
ANR	10143701	Identifier	op		10143641	1					
ANR	10143702	Parameter	tmsize_t n	1208:41:30291:30300	10143641	2	True				
ANR	10143703	ParameterType	tmsize_t		10143641	0					
ANR	10143704	Identifier	n		10143641	1					
ANR	10143705	CFGEntryNode	ENTRY		10143641		True				
ANR	10143706	CFGExitNode	EXIT		10143641		True				
ANR	10143707	Symbol	* sp		10143641						
ANR	10143708	Symbol	op		10143641						
ANR	10143709	Symbol	* luv ++		10143641						
ANR	10143710	Symbol	LogLuv32fromXYZ		10143641						
ANR	10143711	Symbol	xyz		10143641						
ANR	10143712	Symbol	sp -> tbuf		10143641						
ANR	10143713	Symbol	sp -> encode_meth		10143641						
ANR	10143714	Symbol	luv		10143641						
ANR	10143715	Symbol	sp		10143641						
ANR	10143716	Symbol	n		10143641						
ANR	10143717	Function	Luv32fromLuv48	1219:0:30457:31029							
ANR	10143718	FunctionDef	"Luv32fromLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		10143717	0					
ANR	10143719	CompoundStatement		1221:0:30524:31029	10143717	0					
ANR	10143720	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1222:1:30527:30559	10143717	0	True				
ANR	10143721	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		10143717	0					
ANR	10143722	IdentifierDeclType	uint32 *		10143717	0					
ANR	10143723	Identifier	luv		10143717	1					
ANR	10143724	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		10143717	2		=			
ANR	10143725	Identifier	luv		10143717	0					
ANR	10143726	CastExpression	( uint32 * ) sp -> tbuf		10143717	1					
ANR	10143727	CastTarget	uint32 *		10143717	0					
ANR	10143728	PtrMemberAccess	sp -> tbuf		10143717	1					
ANR	10143729	Identifier	sp		10143717	0					
ANR	10143730	Identifier	tbuf		10143717	1					
ANR	10143731	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1223:1:30562:30587	10143717	1	True				
ANR	10143732	IdentifierDecl	* luv3 = ( int16 * ) op		10143717	0					
ANR	10143733	IdentifierDeclType	int16 *		10143717	0					
ANR	10143734	Identifier	luv3		10143717	1					
ANR	10143735	AssignmentExpression	* luv3 = ( int16 * ) op		10143717	2		=			
ANR	10143736	Identifier	luv3		10143717	0					
ANR	10143737	CastExpression	( int16 * ) op		10143717	1					
ANR	10143738	CastTarget	int16 *		10143717	0					
ANR	10143739	Identifier	op		10143717	1					
ANR	10143740	IfStatement	if ( sp -> encode_meth == SGILOGENCODE_NODITHER )		10143717	2					
ANR	10143741	Condition	sp -> encode_meth == SGILOGENCODE_NODITHER	1225:5:30595:30634	10143717	0	True				
ANR	10143742	EqualityExpression	sp -> encode_meth == SGILOGENCODE_NODITHER		10143717	0		==			
ANR	10143743	PtrMemberAccess	sp -> encode_meth		10143717	0					
ANR	10143744	Identifier	sp		10143717	0					
ANR	10143745	Identifier	encode_meth		10143717	1					
ANR	10143746	Identifier	SGILOGENCODE_NODITHER		10143717	1					
ANR	10143747	CompoundStatement		5:47:112:112	10143717	1					
ANR	10143748	WhileStatement	while ( n -- > 0 )		10143717	0					
ANR	10143749	Condition	n -- > 0	1226:9:30648:30654	10143717	0	True				
ANR	10143750	RelationalExpression	n -- > 0		10143717	0		>			
ANR	10143751	PostIncDecOperationExpression	n --		10143717	0					
ANR	10143752	Identifier	n		10143717	0					
ANR	10143753	IncDec	--		10143717	1					
ANR	10143754	PrimaryExpression	0		10143717	1					
ANR	10143755	CompoundStatement		6:18:132:132	10143717	1					
ANR	10143756	ExpressionStatement	* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )	1227:3:30662:30793	10143717	0	True				
ANR	10143757	AssignmentExpression	* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )		10143717	0		=			
ANR	10143758	UnaryOperationExpression	* luv ++		10143717	0					
ANR	10143759	UnaryOperator	*		10143717	0					
ANR	10143760	PostIncDecOperationExpression	luv ++		10143717	1					
ANR	10143761	Identifier	luv		10143717	0					
ANR	10143762	IncDec	++		10143717	1					
ANR	10143763	InclusiveOrExpression	( uint32 ) luv3 [ 0 ] << 16 | ( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )		10143717	1		|			
ANR	10143764	ShiftExpression	( uint32 ) luv3 [ 0 ] << 16		10143717	0		<<			
ANR	10143765	CastExpression	( uint32 ) luv3 [ 0 ]		10143717	0					
ANR	10143766	CastTarget	uint32		10143717	0					
ANR	10143767	ArrayIndexing	luv3 [ 0 ]		10143717	1					
ANR	10143768	Identifier	luv3		10143717	0					
ANR	10143769	PrimaryExpression	0		10143717	1					
ANR	10143770	PrimaryExpression	16		10143717	1					
ANR	10143771	InclusiveOrExpression	( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )		10143717	1		|			
ANR	10143772	BitAndExpression	luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00		10143717	0		&			
ANR	10143773	ShiftExpression	luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7		10143717	0		>>			
ANR	10143774	MultiplicativeExpression	luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 )		10143717	0		*			
ANR	10143775	ArrayIndexing	luv3 [ 1 ]		10143717	0					
ANR	10143776	Identifier	luv3		10143717	0					
ANR	10143777	PrimaryExpression	1		10143717	1					
ANR	10143778	CastExpression	( uint32 ) ( UVSCALE + .5 )		10143717	1					
ANR	10143779	CastTarget	uint32		10143717	0					
ANR	10143780	AdditiveExpression	UVSCALE + .5		10143717	1		+			
ANR	10143781	Identifier	UVSCALE		10143717	0					
ANR	10143782	PrimaryExpression	.5		10143717	1					
ANR	10143783	PrimaryExpression	7		10143717	1					
ANR	10143784	PrimaryExpression	0xff00		10143717	1					
ANR	10143785	BitAndExpression	luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff		10143717	1		&			
ANR	10143786	ShiftExpression	luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15		10143717	0		>>			
ANR	10143787	MultiplicativeExpression	luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 )		10143717	0		*			
ANR	10143788	ArrayIndexing	luv3 [ 2 ]		10143717	0					
ANR	10143789	Identifier	luv3		10143717	0					
ANR	10143790	PrimaryExpression	2		10143717	1					
ANR	10143791	CastExpression	( uint32 ) ( UVSCALE + .5 )		10143717	1					
ANR	10143792	CastTarget	uint32		10143717	0					
ANR	10143793	AdditiveExpression	UVSCALE + .5		10143717	1		+			
ANR	10143794	Identifier	UVSCALE		10143717	0					
ANR	10143795	PrimaryExpression	.5		10143717	1					
ANR	10143796	PrimaryExpression	15		10143717	1					
ANR	10143797	PrimaryExpression	0xff		10143717	1					
ANR	10143798	ExpressionStatement	luv3 += 3	1230:3:30798:30807	10143717	1	True				
ANR	10143799	AssignmentExpression	luv3 += 3		10143717	0		+=			
ANR	10143800	Identifier	luv3		10143717	0					
ANR	10143801	PrimaryExpression	3		10143717	1					
ANR	10143802	ReturnStatement	return ;	1232:2:30815:30821	10143717	1	True				
ANR	10143803	WhileStatement	while ( n -- > 0 )		10143717	3					
ANR	10143804	Condition	n -- > 0	1234:8:30834:30840	10143717	0	True				
ANR	10143805	RelationalExpression	n -- > 0		10143717	0		>			
ANR	10143806	PostIncDecOperationExpression	n --		10143717	0					
ANR	10143807	Identifier	n		10143717	0					
ANR	10143808	IncDec	--		10143717	1					
ANR	10143809	PrimaryExpression	0		10143717	1					
ANR	10143810	CompoundStatement		14:17:318:318	10143717	1					
ANR	10143811	ExpressionStatement	"* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"	1235:2:30847:31011	10143717	0	True				
ANR	10143812	AssignmentExpression	"* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"		10143717	0		=			
ANR	10143813	UnaryOperationExpression	* luv ++		10143717	0					
ANR	10143814	UnaryOperator	*		10143717	0					
ANR	10143815	PostIncDecOperationExpression	luv ++		10143717	1					
ANR	10143816	Identifier	luv		10143717	0					
ANR	10143817	IncDec	++		10143717	1					
ANR	10143818	InclusiveOrExpression	"( uint32 ) luv3 [ 0 ] << 16 | ( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"		10143717	1		|			
ANR	10143819	ShiftExpression	( uint32 ) luv3 [ 0 ] << 16		10143717	0		<<			
ANR	10143820	CastExpression	( uint32 ) luv3 [ 0 ]		10143717	0					
ANR	10143821	CastTarget	uint32		10143717	0					
ANR	10143822	ArrayIndexing	luv3 [ 0 ]		10143717	1					
ANR	10143823	Identifier	luv3		10143717	0					
ANR	10143824	PrimaryExpression	0		10143717	1					
ANR	10143825	PrimaryExpression	16		10143717	1					
ANR	10143826	InclusiveOrExpression	"( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"		10143717	1		|			
ANR	10143827	BitAndExpression	"itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00"		10143717	0		&			
ANR	10143828	ShiftExpression	"itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8"		10143717	0		<<			
ANR	10143829	CallExpression	"itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth )"		10143717	0					
ANR	10143830	Callee	itrunc		10143717	0					
ANR	10143831	Identifier	itrunc		10143717	0					
ANR	10143832	ArgumentList	luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) )		10143717	1					
ANR	10143833	Argument	luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) )		10143717	0					
ANR	10143834	MultiplicativeExpression	luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) )		10143717	0		*			
ANR	10143835	ArrayIndexing	luv3 [ 1 ]		10143717	0					
ANR	10143836	Identifier	luv3		10143717	0					
ANR	10143837	PrimaryExpression	1		10143717	1					
ANR	10143838	MultiplicativeExpression	UVSCALE / ( 1 << 15 )		10143717	1		/			
ANR	10143839	Identifier	UVSCALE		10143717	0					
ANR	10143840	ShiftExpression	1 << 15		10143717	1		<<			
ANR	10143841	PrimaryExpression	1		10143717	0					
ANR	10143842	PrimaryExpression	15		10143717	1					
ANR	10143843	Argument	sp -> encode_meth		10143717	1					
ANR	10143844	PtrMemberAccess	sp -> encode_meth		10143717	0					
ANR	10143845	Identifier	sp		10143717	0					
ANR	10143846	Identifier	encode_meth		10143717	1					
ANR	10143847	PrimaryExpression	8		10143717	1					
ANR	10143848	PrimaryExpression	0xff00		10143717	1					
ANR	10143849	BitAndExpression	"itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff"		10143717	1		&			
ANR	10143850	CallExpression	"itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth )"		10143717	0					
ANR	10143851	Callee	itrunc		10143717	0					
ANR	10143852	Identifier	itrunc		10143717	0					
ANR	10143853	ArgumentList	luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) )		10143717	1					
ANR	10143854	Argument	luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) )		10143717	0					
ANR	10143855	MultiplicativeExpression	luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) )		10143717	0		*			
ANR	10143856	ArrayIndexing	luv3 [ 2 ]		10143717	0					
ANR	10143857	Identifier	luv3		10143717	0					
ANR	10143858	PrimaryExpression	2		10143717	1					
ANR	10143859	MultiplicativeExpression	UVSCALE / ( 1 << 15 )		10143717	1		/			
ANR	10143860	Identifier	UVSCALE		10143717	0					
ANR	10143861	ShiftExpression	1 << 15		10143717	1		<<			
ANR	10143862	PrimaryExpression	1		10143717	0					
ANR	10143863	PrimaryExpression	15		10143717	1					
ANR	10143864	Argument	sp -> encode_meth		10143717	1					
ANR	10143865	PtrMemberAccess	sp -> encode_meth		10143717	0					
ANR	10143866	Identifier	sp		10143717	0					
ANR	10143867	Identifier	encode_meth		10143717	1					
ANR	10143868	PrimaryExpression	0xff		10143717	1					
ANR	10143869	ExpressionStatement	luv3 += 3	1238:2:31015:31024	10143717	1	True				
ANR	10143870	AssignmentExpression	luv3 += 3		10143717	0		+=			
ANR	10143871	Identifier	luv3		10143717	0					
ANR	10143872	PrimaryExpression	3		10143717	1					
ANR	10143873	ReturnType	static void		10143717	1					
ANR	10143874	Identifier	Luv32fromLuv48		10143717	2					
ANR	10143875	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10143717	3					
ANR	10143876	Parameter	LogLuvState * sp	1220:15:30484:30498	10143717	0	True				
ANR	10143877	ParameterType	LogLuvState *		10143717	0					
ANR	10143878	Identifier	sp		10143717	1					
ANR	10143879	Parameter	uint8 * op	1220:32:30501:30509	10143717	1	True				
ANR	10143880	ParameterType	uint8 *		10143717	0					
ANR	10143881	Identifier	op		10143717	1					
ANR	10143882	Parameter	tmsize_t n	1220:43:30512:30521	10143717	2	True				
ANR	10143883	ParameterType	tmsize_t		10143717	0					
ANR	10143884	Identifier	n		10143717	1					
ANR	10143885	CFGEntryNode	ENTRY		10143717		True				
ANR	10143886	CFGExitNode	EXIT		10143717		True				
ANR	10143887	Symbol	* sp		10143717						
ANR	10143888	Symbol	op		10143717						
ANR	10143889	Symbol	SGILOGENCODE_NODITHER		10143717						
ANR	10143890	Symbol	* luv ++		10143717						
ANR	10143891	Symbol	itrunc		10143717						
ANR	10143892	Symbol	UVSCALE		10143717						
ANR	10143893	Symbol	luv		10143717						
ANR	10143894	Symbol	n		10143717						
ANR	10143895	Symbol	luv3		10143717						
ANR	10143896	Symbol	sp -> tbuf		10143717						
ANR	10143897	Symbol	sp -> encode_meth		10143717						
ANR	10143898	Symbol	sp		10143717						
ANR	10143899	Symbol	* luv3		10143717						
ANR	10143900	Function	_logLuvNop	1242:0:31032:31130							
ANR	10143901	FunctionDef	"_logLuvNop (LogLuvState * sp , uint8 * op , tmsize_t n)"		10143900	0					
ANR	10143902	CompoundStatement		1244:0:31095:31130	10143900	0					
ANR	10143903	ExpressionStatement	( void ) sp	1245:1:31098:31107	10143900	0	True				
ANR	10143904	CastExpression	( void ) sp		10143900	0					
ANR	10143905	CastTarget	void		10143900	0					
ANR	10143906	Identifier	sp		10143900	1					
ANR	10143907	ExpressionStatement	( void ) op	1245:12:31109:31118	10143900	1	True				
ANR	10143908	CastExpression	( void ) op		10143900	0					
ANR	10143909	CastTarget	void		10143900	0					
ANR	10143910	Identifier	op		10143900	1					
ANR	10143911	ExpressionStatement	( void ) n	1245:23:31120:31128	10143900	2	True				
ANR	10143912	CastExpression	( void ) n		10143900	0					
ANR	10143913	CastTarget	void		10143900	0					
ANR	10143914	Identifier	n		10143900	1					
ANR	10143915	ReturnType	static void		10143900	1					
ANR	10143916	Identifier	_logLuvNop		10143900	2					
ANR	10143917	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		10143900	3					
ANR	10143918	Parameter	LogLuvState * sp	1243:11:31055:31069	10143900	0	True				
ANR	10143919	ParameterType	LogLuvState *		10143900	0					
ANR	10143920	Identifier	sp		10143900	1					
ANR	10143921	Parameter	uint8 * op	1243:28:31072:31080	10143900	1	True				
ANR	10143922	ParameterType	uint8 *		10143900	0					
ANR	10143923	Identifier	op		10143900	1					
ANR	10143924	Parameter	tmsize_t n	1243:39:31083:31092	10143900	2	True				
ANR	10143925	ParameterType	tmsize_t		10143900	0					
ANR	10143926	Identifier	n		10143900	1					
ANR	10143927	CFGEntryNode	ENTRY		10143900		True				
ANR	10143928	CFGExitNode	EXIT		10143900		True				
ANR	10143929	Symbol	op		10143900						
ANR	10143930	Symbol	sp		10143900						
ANR	10143931	Symbol	n		10143900						
ANR	10143932	Function	LogL16GuessDataFmt	1248:0:31133:31684							
ANR	10143933	FunctionDef	LogL16GuessDataFmt (TIFFDirectory * td)		10143932	0					
ANR	10143934	CompoundStatement		1250:0:31182:31684	10143932	0					
ANR	10143935	Statement	define	1251:1:31185:31190	10143932	0	True				
ANR	10143936	Statement	PACK	1251:8:31192:31195	10143932	1	True				
ANR	10143937	Statement	(	1251:12:31196:31196	10143932	2	True				
ANR	10143938	Statement	s	1251:13:31197:31197	10143932	3	True				
ANR	10143939	Statement	","	1251:14:31198:31198	10143932	4	True				
ANR	10143940	Statement	b	1251:15:31199:31199	10143932	5	True				
ANR	10143941	Statement	","	1251:16:31200:31200	10143932	6	True				
ANR	10143942	Statement	f	1251:17:31201:31201	10143932	7	True				
ANR	10143943	Statement	)	1251:18:31202:31202	10143932	8	True				
ANR	10143944	Statement	(	1251:20:31204:31204	10143932	9	True				
ANR	10143945	Statement	(	1251:21:31205:31205	10143932	10	True				
ANR	10143946	Statement	(	1251:22:31206:31206	10143932	11	True				
ANR	10143947	Statement	b	1251:23:31207:31207	10143932	12	True				
ANR	10143948	Statement	)	1251:24:31208:31208	10143932	13	True				
ANR	10143949	Statement	<<	1251:25:31209:31210	10143932	14	True				
ANR	10143950	Statement	6	1251:27:31211:31211	10143932	15	True				
ANR	10143951	Statement	)	1251:28:31212:31212	10143932	16	True				
ANR	10143952	Statement	|	1251:29:31213:31213	10143932	17	True				
ANR	10143953	Statement	(	1251:30:31214:31214	10143932	18	True				
ANR	10143954	Statement	(	1251:31:31215:31215	10143932	19	True				
ANR	10143955	Statement	s	1251:32:31216:31216	10143932	20	True				
ANR	10143956	Statement	)	1251:33:31217:31217	10143932	21	True				
ANR	10143957	Statement	<<	1251:34:31218:31219	10143932	22	True				
ANR	10143958	Statement	3	1251:36:31220:31220	10143932	23	True				
ANR	10143959	Statement	)	1251:37:31221:31221	10143932	24	True				
ANR	10143960	Statement	|	1251:38:31222:31222	10143932	25	True				
ANR	10143961	Statement	(	1251:39:31223:31223	10143932	26	True				
ANR	10143962	Statement	f	1251:40:31224:31224	10143932	27	True				
ANR	10143963	Statement	)	1251:41:31225:31225	10143932	28	True				
ANR	10143964	Statement	)	1251:42:31226:31226	10143932	29	True				
ANR	10143965	SwitchStatement	"switch ( PACK ( td -> td_samplesperpixel , td -> td_bitspersample , td -> td_sampleformat ) )"		10143932	30					
ANR	10143966	Condition	"PACK ( td -> td_samplesperpixel , td -> td_bitspersample , td -> td_sampleformat )"	1252:9:31237:31307	10143932	0	True				
ANR	10143967	CallExpression	"PACK ( td -> td_samplesperpixel , td -> td_bitspersample , td -> td_sampleformat )"		10143932	0					
ANR	10143968	Callee	PACK		10143932	0					
ANR	10143969	Identifier	PACK		10143932	0					
ANR	10143970	ArgumentList	td -> td_samplesperpixel		10143932	1					
ANR	10143971	Argument	td -> td_samplesperpixel		10143932	0					
ANR	10143972	PtrMemberAccess	td -> td_samplesperpixel		10143932	0					
ANR	10143973	Identifier	td		10143932	0					
ANR	10143974	Identifier	td_samplesperpixel		10143932	1					
ANR	10143975	Argument	td -> td_bitspersample		10143932	1					
ANR	10143976	PtrMemberAccess	td -> td_bitspersample		10143932	0					
ANR	10143977	Identifier	td		10143932	0					
ANR	10143978	Identifier	td_bitspersample		10143932	1					
ANR	10143979	Argument	td -> td_sampleformat		10143932	2					
ANR	10143980	PtrMemberAccess	td -> td_sampleformat		10143932	0					
ANR	10143981	Identifier	td		10143932	0					
ANR	10143982	Identifier	td_sampleformat		10143932	1					
ANR	10143983	CompoundStatement		3:82:127:127	10143932	1					
ANR	10143984	Statement	case	1253:1:31313:31316	10143932	0	True				
ANR	10143985	Statement	PACK	1253:6:31318:31321	10143932	1	True				
ANR	10143986	Statement	(	1253:10:31322:31322	10143932	2	True				
ANR	10143987	Statement	1	1253:11:31323:31323	10143932	3	True				
ANR	10143988	Statement	","	1253:12:31324:31324	10143932	4	True				
ANR	10143989	Statement	32	1253:14:31326:31327	10143932	5	True				
ANR	10143990	Statement	","	1253:16:31328:31328	10143932	6	True				
ANR	10143991	Statement	SAMPLEFORMAT_IEEEFP	1253:18:31330:31348	10143932	7	True				
ANR	10143992	Statement	)	1253:37:31349:31349	10143932	8	True				
ANR	10143993	Statement	:	1253:38:31350:31350	10143932	9	True				
ANR	10143994	ReturnStatement	return ( SGILOGDATAFMT_FLOAT ) ;	1254:2:31354:31382	10143932	10	True				
ANR	10143995	Identifier	SGILOGDATAFMT_FLOAT		10143932	0					
ANR	10143996	Statement	case	1255:1:31385:31388	10143932	11	True				
ANR	10143997	Statement	PACK	1255:6:31390:31393	10143932	12	True				
ANR	10143998	Statement	(	1255:10:31394:31394	10143932	13	True				
ANR	10143999	Statement	1	1255:11:31395:31395	10143932	14	True				
ANR	10144000	Statement	","	1255:12:31396:31396	10143932	15	True				
ANR	10144001	Statement	16	1255:14:31398:31399	10143932	16	True				
ANR	10144002	Statement	","	1255:16:31400:31400	10143932	17	True				
ANR	10144003	Statement	SAMPLEFORMAT_VOID	1255:18:31402:31418	10143932	18	True				
ANR	10144004	Statement	)	1255:35:31419:31419	10143932	19	True				
ANR	10144005	Statement	:	1255:36:31420:31420	10143932	20	True				
ANR	10144006	Statement	case	1256:1:31423:31426	10143932	21	True				
ANR	10144007	Statement	PACK	1256:6:31428:31431	10143932	22	True				
ANR	10144008	Statement	(	1256:10:31432:31432	10143932	23	True				
ANR	10144009	Statement	1	1256:11:31433:31433	10143932	24	True				
ANR	10144010	Statement	","	1256:12:31434:31434	10143932	25	True				
ANR	10144011	Statement	16	1256:14:31436:31437	10143932	26	True				
ANR	10144012	Statement	","	1256:16:31438:31438	10143932	27	True				
ANR	10144013	Statement	SAMPLEFORMAT_INT	1256:18:31440:31455	10143932	28	True				
ANR	10144014	Statement	)	1256:34:31456:31456	10143932	29	True				
ANR	10144015	Statement	:	1256:35:31457:31457	10143932	30	True				
ANR	10144016	Statement	case	1257:1:31460:31463	10143932	31	True				
ANR	10144017	Statement	PACK	1257:6:31465:31468	10143932	32	True				
ANR	10144018	Statement	(	1257:10:31469:31469	10143932	33	True				
ANR	10144019	Statement	1	1257:11:31470:31470	10143932	34	True				
ANR	10144020	Statement	","	1257:12:31471:31471	10143932	35	True				
ANR	10144021	Statement	16	1257:14:31473:31474	10143932	36	True				
ANR	10144022	Statement	","	1257:16:31475:31475	10143932	37	True				
ANR	10144023	Statement	SAMPLEFORMAT_UINT	1257:18:31477:31493	10143932	38	True				
ANR	10144024	Statement	)	1257:35:31494:31494	10143932	39	True				
ANR	10144025	Statement	:	1257:36:31495:31495	10143932	40	True				
ANR	10144026	ReturnStatement	return ( SGILOGDATAFMT_16BIT ) ;	1258:2:31499:31527	10143932	41	True				
ANR	10144027	Identifier	SGILOGDATAFMT_16BIT		10143932	0					
ANR	10144028	Statement	case	1259:1:31530:31533	10143932	42	True				
ANR	10144029	Statement	PACK	1259:6:31535:31538	10143932	43	True				
ANR	10144030	Statement	(	1259:10:31539:31539	10143932	44	True				
ANR	10144031	Statement	1	1259:11:31540:31540	10143932	45	True				
ANR	10144032	Statement	","	1259:12:31541:31541	10143932	46	True				
ANR	10144033	Statement	8	1259:15:31544:31544	10143932	47	True				
ANR	10144034	Statement	","	1259:16:31545:31545	10143932	48	True				
ANR	10144035	Statement	SAMPLEFORMAT_VOID	1259:18:31547:31563	10143932	49	True				
ANR	10144036	Statement	)	1259:35:31564:31564	10143932	50	True				
ANR	10144037	Statement	:	1259:36:31565:31565	10143932	51	True				
ANR	10144038	Statement	case	1260:1:31568:31571	10143932	52	True				
ANR	10144039	Statement	PACK	1260:6:31573:31576	10143932	53	True				
ANR	10144040	Statement	(	1260:10:31577:31577	10143932	54	True				
ANR	10144041	Statement	1	1260:11:31578:31578	10143932	55	True				
ANR	10144042	Statement	","	1260:12:31579:31579	10143932	56	True				
ANR	10144043	Statement	8	1260:15:31582:31582	10143932	57	True				
ANR	10144044	Statement	","	1260:16:31583:31583	10143932	58	True				
ANR	10144045	Statement	SAMPLEFORMAT_UINT	1260:18:31585:31601	10143932	59	True				
ANR	10144046	Statement	)	1260:35:31602:31602	10143932	60	True				
ANR	10144047	Statement	:	1260:36:31603:31603	10143932	61	True				
ANR	10144048	ReturnStatement	return ( SGILOGDATAFMT_8BIT ) ;	1261:2:31607:31634	10143932	62	True				
ANR	10144049	Identifier	SGILOGDATAFMT_8BIT		10143932	0					
ANR	10144050	Statement	undef	1263:1:31640:31644	10143932	31	True				
ANR	10144051	Statement	PACK	1263:7:31646:31649	10143932	32	True				
ANR	10144052	ReturnStatement	return ( SGILOGDATAFMT_UNKNOWN ) ;	1264:1:31652:31682	10143932	33	True				
ANR	10144053	Identifier	SGILOGDATAFMT_UNKNOWN		10143932	0					
ANR	10144054	ReturnType	static int		10143932	1					
ANR	10144055	Identifier	LogL16GuessDataFmt		10143932	2					
ANR	10144056	ParameterList	TIFFDirectory * td		10143932	3					
ANR	10144057	Parameter	TIFFDirectory * td	1249:19:31163:31179	10143932	0	True				
ANR	10144058	ParameterType	TIFFDirectory *		10143932	0					
ANR	10144059	Identifier	td		10143932	1					
ANR	10144060	CFGEntryNode	ENTRY		10143932		True				
ANR	10144061	CFGExitNode	EXIT		10143932		True				
ANR	10144062	Symbol	td		10143932						
ANR	10144063	Symbol	td -> td_samplesperpixel		10143932						
ANR	10144064	Symbol	* td		10143932						
ANR	10144065	Symbol	td -> td_sampleformat		10143932						
ANR	10144066	Symbol	SGILOGDATAFMT_16BIT		10143932						
ANR	10144067	Symbol	SGILOGDATAFMT_8BIT		10143932						
ANR	10144068	Symbol	SGILOGDATAFMT_UNKNOWN		10143932						
ANR	10144069	Symbol	SGILOGDATAFMT_FLOAT		10143932						
ANR	10144070	Symbol	PACK		10143932						
ANR	10144071	Symbol	td -> td_bitspersample		10143932						
ANR	10144072	Function	multiply_ms	1271:0:31797:31952							
ANR	10144073	FunctionDef	"multiply_ms (tmsize_t m1 , tmsize_t m2)"		10144072	0					
ANR	10144074	CompoundStatement		1273:0:31851:31952	10144072	0					
ANR	10144075	IfStatement	if ( m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1 )		10144072	0					
ANR	10144076	Condition	m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1	1274:12:31865:31902	10144072	0	True				
ANR	10144077	OrExpression	m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1		10144072	0		||			
ANR	10144078	EqualityExpression	m1 == 0		10144072	0		==			
ANR	10144079	Identifier	m1		10144072	0					
ANR	10144080	PrimaryExpression	0		10144072	1					
ANR	10144081	RelationalExpression	m2 > TIFF_TMSIZE_T_MAX / m1		10144072	1		>			
ANR	10144082	Identifier	m2		10144072	0					
ANR	10144083	MultiplicativeExpression	TIFF_TMSIZE_T_MAX / m1		10144072	1		/			
ANR	10144084	Identifier	TIFF_TMSIZE_T_MAX		10144072	0					
ANR	10144085	Identifier	m1		10144072	1					
ANR	10144086	ReturnStatement	return 0 ;	1275:12:31918:31926	10144072	1	True				
ANR	10144087	PrimaryExpression	0		10144072	0					
ANR	10144088	ReturnStatement	return m1 * m2 ;	1276:8:31936:31950	10144072	1	True				
ANR	10144089	MultiplicativeExpression	m1 * m2		10144072	0		*			
ANR	10144090	Identifier	m1		10144072	0					
ANR	10144091	Identifier	m2		10144072	1					
ANR	10144092	ReturnType	static tmsize_t		10144072	1					
ANR	10144093	Identifier	multiply_ms		10144072	2					
ANR	10144094	ParameterList	"tmsize_t m1 , tmsize_t m2"		10144072	3					
ANR	10144095	Parameter	tmsize_t m1	1272:12:31825:31835	10144072	0	True				
ANR	10144096	ParameterType	tmsize_t		10144072	0					
ANR	10144097	Identifier	m1		10144072	1					
ANR	10144098	Parameter	tmsize_t m2	1272:25:31838:31848	10144072	1	True				
ANR	10144099	ParameterType	tmsize_t		10144072	0					
ANR	10144100	Identifier	m2		10144072	1					
ANR	10144101	CFGEntryNode	ENTRY		10144072		True				
ANR	10144102	CFGExitNode	EXIT		10144072		True				
ANR	10144103	Symbol	m1		10144072						
ANR	10144104	Symbol	m2		10144072						
ANR	10144105	Symbol	TIFF_TMSIZE_T_MAX		10144072						
ANR	10144106	Function	LogL16InitState	1279:0:31955:33509							
ANR	10144107	FunctionDef	LogL16InitState (TIFF * tif)		10144106	0					
ANR	10144108	CompoundStatement		1281:0:31993:33509	10144106	0					
ANR	10144109	Statement	static	1282:1:31996:32001	10144106	0	True				
ANR	10144110	IdentifierDeclStatement	"const char module [ ] = ""LogL16InitState"" ;"	1282:8:32003:32042	10144106	1	True				
ANR	10144111	IdentifierDecl	"module [ ] = ""LogL16InitState"""		10144106	0					
ANR	10144112	IdentifierDeclType	const char [ ]		10144106	0					
ANR	10144113	Identifier	module		10144106	1					
ANR	10144114	AssignmentExpression	"module [ ] = ""LogL16InitState"""		10144106	2		=			
ANR	10144115	Identifier	module		10144106	0					
ANR	10144116	PrimaryExpression	"""LogL16InitState"""		10144106	1					
ANR	10144117	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1283:1:32045:32078	10144106	2	True				
ANR	10144118	IdentifierDecl	* td = & tif -> tif_dir		10144106	0					
ANR	10144119	IdentifierDeclType	TIFFDirectory *		10144106	0					
ANR	10144120	Identifier	td		10144106	1					
ANR	10144121	AssignmentExpression	* td = & tif -> tif_dir		10144106	2		=			
ANR	10144122	Identifier	td		10144106	0					
ANR	10144123	UnaryOperationExpression	& tif -> tif_dir		10144106	1					
ANR	10144124	UnaryOperator	&		10144106	0					
ANR	10144125	PtrMemberAccess	tif -> tif_dir		10144106	1					
ANR	10144126	Identifier	tif		10144106	0					
ANR	10144127	Identifier	tif_dir		10144106	1					
ANR	10144128	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1284:1:32081:32116	10144106	3	True				
ANR	10144129	IdentifierDecl	* sp = DecoderState ( tif )		10144106	0					
ANR	10144130	IdentifierDeclType	LogLuvState *		10144106	0					
ANR	10144131	Identifier	sp		10144106	1					
ANR	10144132	AssignmentExpression	* sp = DecoderState ( tif )		10144106	2		=			
ANR	10144133	Identifier	sp		10144106	0					
ANR	10144134	CallExpression	DecoderState ( tif )		10144106	1					
ANR	10144135	Callee	DecoderState		10144106	0					
ANR	10144136	Identifier	DecoderState		10144106	0					
ANR	10144137	ArgumentList	tif		10144106	1					
ANR	10144138	Argument	tif		10144106	0					
ANR	10144139	Identifier	tif		10144106	0					
ANR	10144140	ExpressionStatement	assert ( sp != NULL )	1286:1:32120:32138	10144106	4	True				
ANR	10144141	CallExpression	assert ( sp != NULL )		10144106	0					
ANR	10144142	Callee	assert		10144106	0					
ANR	10144143	Identifier	assert		10144106	0					
ANR	10144144	ArgumentList	sp != NULL		10144106	1					
ANR	10144145	Argument	sp != NULL		10144106	0					
ANR	10144146	EqualityExpression	sp != NULL		10144106	0		!=			
ANR	10144147	Identifier	sp		10144106	0					
ANR	10144148	Identifier	NULL		10144106	1					
ANR	10144149	ExpressionStatement	assert ( td -> td_photometric == PHOTOMETRIC_LOGL )	1287:1:32141:32187	10144106	5	True				
ANR	10144150	CallExpression	assert ( td -> td_photometric == PHOTOMETRIC_LOGL )		10144106	0					
ANR	10144151	Callee	assert		10144106	0					
ANR	10144152	Identifier	assert		10144106	0					
ANR	10144153	ArgumentList	td -> td_photometric == PHOTOMETRIC_LOGL		10144106	1					
ANR	10144154	Argument	td -> td_photometric == PHOTOMETRIC_LOGL		10144106	0					
ANR	10144155	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGL		10144106	0		==			
ANR	10144156	PtrMemberAccess	td -> td_photometric		10144106	0					
ANR	10144157	Identifier	td		10144106	0					
ANR	10144158	Identifier	td_photometric		10144106	1					
ANR	10144159	Identifier	PHOTOMETRIC_LOGL		10144106	1					
ANR	10144160	IfStatement	if ( td -> td_samplesperpixel != 1 )		10144106	6					
ANR	10144161	Condition	td -> td_samplesperpixel != 1	1289:5:32195:32221	10144106	0	True				
ANR	10144162	EqualityExpression	td -> td_samplesperpixel != 1		10144106	0		!=			
ANR	10144163	PtrMemberAccess	td -> td_samplesperpixel		10144106	0					
ANR	10144164	Identifier	td		10144106	0					
ANR	10144165	Identifier	td_samplesperpixel		10144106	1					
ANR	10144166	PrimaryExpression	1		10144106	1					
ANR	10144167	CompoundStatement		10:1:232:232	10144106	1					
ANR	10144168	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Sorry, can not handle LogL image with %s=%d"" , ""Samples/pixel"" , td -> td_samplesperpixel )"	1291:2:32230:32382	10144106	0	True				
ANR	10144169	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Sorry, can not handle LogL image with %s=%d"" , ""Samples/pixel"" , td -> td_samplesperpixel )"		10144106	0					
ANR	10144170	Callee	TIFFErrorExt		10144106	0					
ANR	10144171	Identifier	TIFFErrorExt		10144106	0					
ANR	10144172	ArgumentList	tif -> tif_clientdata		10144106	1					
ANR	10144173	Argument	tif -> tif_clientdata		10144106	0					
ANR	10144174	PtrMemberAccess	tif -> tif_clientdata		10144106	0					
ANR	10144175	Identifier	tif		10144106	0					
ANR	10144176	Identifier	tif_clientdata		10144106	1					
ANR	10144177	Argument	module		10144106	1					
ANR	10144178	Identifier	module		10144106	0					
ANR	10144179	Argument	"""Sorry, can not handle LogL image with %s=%d"""		10144106	2					
ANR	10144180	PrimaryExpression	"""Sorry, can not handle LogL image with %s=%d"""		10144106	0					
ANR	10144181	Argument	"""Samples/pixel"""		10144106	3					
ANR	10144182	PrimaryExpression	"""Samples/pixel"""		10144106	0					
ANR	10144183	Argument	td -> td_samplesperpixel		10144106	4					
ANR	10144184	PtrMemberAccess	td -> td_samplesperpixel		10144106	0					
ANR	10144185	Identifier	td		10144106	0					
ANR	10144186	Identifier	td_samplesperpixel		10144106	1					
ANR	10144187	ReturnStatement	return 0 ;	1294:2:32386:32394	10144106	1	True				
ANR	10144188	PrimaryExpression	0		10144106	0					
ANR	10144189	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN )		10144106	7					
ANR	10144190	Condition	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN	1298:5:32464:32504	10144106	0	True				
ANR	10144191	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN		10144106	0		==			
ANR	10144192	PtrMemberAccess	sp -> user_datafmt		10144106	0					
ANR	10144193	Identifier	sp		10144106	0					
ANR	10144194	Identifier	user_datafmt		10144106	1					
ANR	10144195	Identifier	SGILOGDATAFMT_UNKNOWN		10144106	1					
ANR	10144196	ExpressionStatement	sp -> user_datafmt = LogL16GuessDataFmt ( td )	1299:2:32509:32550	10144106	1	True				
ANR	10144197	AssignmentExpression	sp -> user_datafmt = LogL16GuessDataFmt ( td )		10144106	0		=			
ANR	10144198	PtrMemberAccess	sp -> user_datafmt		10144106	0					
ANR	10144199	Identifier	sp		10144106	0					
ANR	10144200	Identifier	user_datafmt		10144106	1					
ANR	10144201	CallExpression	LogL16GuessDataFmt ( td )		10144106	1					
ANR	10144202	Callee	LogL16GuessDataFmt		10144106	0					
ANR	10144203	Identifier	LogL16GuessDataFmt		10144106	0					
ANR	10144204	ArgumentList	td		10144106	1					
ANR	10144205	Argument	td		10144106	0					
ANR	10144206	Identifier	td		10144106	0					
ANR	10144207	SwitchStatement	switch ( sp -> user_datafmt )		10144106	8					
ANR	10144208	Condition	sp -> user_datafmt	1300:9:32561:32576	10144106	0	True				
ANR	10144209	PtrMemberAccess	sp -> user_datafmt		10144106	0					
ANR	10144210	Identifier	sp		10144106	0					
ANR	10144211	Identifier	user_datafmt		10144106	1					
ANR	10144212	CompoundStatement		20:27:585:585	10144106	1					
ANR	10144213	Label	case SGILOGDATAFMT_FLOAT :	1301:1:32582:32606	10144106	0	True				
ANR	10144214	Identifier	SGILOGDATAFMT_FLOAT		10144106	0					
ANR	10144215	ExpressionStatement	sp -> pixel_size = sizeof ( float )	1302:2:32610:32641	10144106	1	True				
ANR	10144216	AssignmentExpression	sp -> pixel_size = sizeof ( float )		10144106	0		=			
ANR	10144217	PtrMemberAccess	sp -> pixel_size		10144106	0					
ANR	10144218	Identifier	sp		10144106	0					
ANR	10144219	Identifier	pixel_size		10144106	1					
ANR	10144220	SizeofExpression	sizeof ( float )		10144106	1					
ANR	10144221	Sizeof	sizeof		10144106	0					
ANR	10144222	SizeofOperand	float		10144106	1					
ANR	10144223	BreakStatement	break ;	1303:2:32645:32650	10144106	2	True				
ANR	10144224	Label	case SGILOGDATAFMT_16BIT :	1304:1:32653:32677	10144106	3	True				
ANR	10144225	Identifier	SGILOGDATAFMT_16BIT		10144106	0					
ANR	10144226	ExpressionStatement	sp -> pixel_size = sizeof ( int16 )	1305:2:32681:32712	10144106	4	True				
ANR	10144227	AssignmentExpression	sp -> pixel_size = sizeof ( int16 )		10144106	0		=			
ANR	10144228	PtrMemberAccess	sp -> pixel_size		10144106	0					
ANR	10144229	Identifier	sp		10144106	0					
ANR	10144230	Identifier	pixel_size		10144106	1					
ANR	10144231	SizeofExpression	sizeof ( int16 )		10144106	1					
ANR	10144232	Sizeof	sizeof		10144106	0					
ANR	10144233	SizeofOperand	int16		10144106	1					
ANR	10144234	BreakStatement	break ;	1306:2:32716:32721	10144106	5	True				
ANR	10144235	Label	case SGILOGDATAFMT_8BIT :	1307:1:32724:32747	10144106	6	True				
ANR	10144236	Identifier	SGILOGDATAFMT_8BIT		10144106	0					
ANR	10144237	ExpressionStatement	sp -> pixel_size = sizeof ( uint8 )	1308:2:32751:32782	10144106	7	True				
ANR	10144238	AssignmentExpression	sp -> pixel_size = sizeof ( uint8 )		10144106	0		=			
ANR	10144239	PtrMemberAccess	sp -> pixel_size		10144106	0					
ANR	10144240	Identifier	sp		10144106	0					
ANR	10144241	Identifier	pixel_size		10144106	1					
ANR	10144242	SizeofExpression	sizeof ( uint8 )		10144106	1					
ANR	10144243	Sizeof	sizeof		10144106	0					
ANR	10144244	SizeofOperand	uint8		10144106	1					
ANR	10144245	BreakStatement	break ;	1309:2:32786:32791	10144106	8	True				
ANR	10144246	Label	default :	1310:1:32794:32801	10144106	9	True				
ANR	10144247	Identifier	default		10144106	0					
ANR	10144248	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogL"" )"	1311:2:32805:32906	10144106	10	True				
ANR	10144249	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogL"" )"		10144106	0					
ANR	10144250	Callee	TIFFErrorExt		10144106	0					
ANR	10144251	Identifier	TIFFErrorExt		10144106	0					
ANR	10144252	ArgumentList	tif -> tif_clientdata		10144106	1					
ANR	10144253	Argument	tif -> tif_clientdata		10144106	0					
ANR	10144254	PtrMemberAccess	tif -> tif_clientdata		10144106	0					
ANR	10144255	Identifier	tif		10144106	0					
ANR	10144256	Identifier	tif_clientdata		10144106	1					
ANR	10144257	Argument	module		10144106	1					
ANR	10144258	Identifier	module		10144106	0					
ANR	10144259	Argument	"""No support for converting user data format to LogL"""		10144106	2					
ANR	10144260	PrimaryExpression	"""No support for converting user data format to LogL"""		10144106	0					
ANR	10144261	ReturnStatement	return ( 0 ) ;	1313:2:32910:32920	10144106	11	True				
ANR	10144262	PrimaryExpression	0		10144106	0					
ANR	10144263	IfStatement	if ( isTiled ( tif ) )		10144106	9					
ANR	10144264	Condition	isTiled ( tif )	1315:12:32937:32948	10144106	0	True				
ANR	10144265	CallExpression	isTiled ( tif )		10144106	0					
ANR	10144266	Callee	isTiled		10144106	0					
ANR	10144267	Identifier	isTiled		10144106	0					
ANR	10144268	ArgumentList	tif		10144106	1					
ANR	10144269	Argument	tif		10144106	0					
ANR	10144270	Identifier	tif		10144106	0					
ANR	10144271	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"	1316:12:32964:33026	10144106	1	True				
ANR	10144272	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		10144106	0		=			
ANR	10144273	PtrMemberAccess	sp -> tbuflen		10144106	0					
ANR	10144274	Identifier	sp		10144106	0					
ANR	10144275	Identifier	tbuflen		10144106	1					
ANR	10144276	CallExpression	"multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		10144106	1					
ANR	10144277	Callee	multiply_ms		10144106	0					
ANR	10144278	Identifier	multiply_ms		10144106	0					
ANR	10144279	ArgumentList	td -> td_tilewidth		10144106	1					
ANR	10144280	Argument	td -> td_tilewidth		10144106	0					
ANR	10144281	PtrMemberAccess	td -> td_tilewidth		10144106	0					
ANR	10144282	Identifier	td		10144106	0					
ANR	10144283	Identifier	td_tilewidth		10144106	1					
ANR	10144284	Argument	td -> td_tilelength		10144106	1					
ANR	10144285	PtrMemberAccess	td -> td_tilelength		10144106	0					
ANR	10144286	Identifier	td		10144106	0					
ANR	10144287	Identifier	td_tilelength		10144106	1					
ANR	10144288	ElseStatement	else		10144106	0					
ANR	10144289	IfStatement	if ( td -> td_rowsperstrip < td -> td_imagelength )		10144106	0					
ANR	10144290	Condition	td -> td_rowsperstrip < td -> td_imagelength	1317:17:33045:33084	10144106	0	True				
ANR	10144291	RelationalExpression	td -> td_rowsperstrip < td -> td_imagelength		10144106	0		<			
ANR	10144292	PtrMemberAccess	td -> td_rowsperstrip		10144106	0					
ANR	10144293	Identifier	td		10144106	0					
ANR	10144294	Identifier	td_rowsperstrip		10144106	1					
ANR	10144295	PtrMemberAccess	td -> td_imagelength		10144106	1					
ANR	10144296	Identifier	td		10144106	0					
ANR	10144297	Identifier	td_imagelength		10144106	1					
ANR	10144298	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"	1318:12:33100:33165	10144106	1	True				
ANR	10144299	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		10144106	0		=			
ANR	10144300	PtrMemberAccess	sp -> tbuflen		10144106	0					
ANR	10144301	Identifier	sp		10144106	0					
ANR	10144302	Identifier	tbuflen		10144106	1					
ANR	10144303	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		10144106	1					
ANR	10144304	Callee	multiply_ms		10144106	0					
ANR	10144305	Identifier	multiply_ms		10144106	0					
ANR	10144306	ArgumentList	td -> td_imagewidth		10144106	1					
ANR	10144307	Argument	td -> td_imagewidth		10144106	0					
ANR	10144308	PtrMemberAccess	td -> td_imagewidth		10144106	0					
ANR	10144309	Identifier	td		10144106	0					
ANR	10144310	Identifier	td_imagewidth		10144106	1					
ANR	10144311	Argument	td -> td_rowsperstrip		10144106	1					
ANR	10144312	PtrMemberAccess	td -> td_rowsperstrip		10144106	0					
ANR	10144313	Identifier	td		10144106	0					
ANR	10144314	Identifier	td_rowsperstrip		10144106	1					
ANR	10144315	ElseStatement	else		10144106	0					
ANR	10144316	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"	1320:12:33192:33256	10144106	0	True				
ANR	10144317	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"		10144106	0		=			
ANR	10144318	PtrMemberAccess	sp -> tbuflen		10144106	0					
ANR	10144319	Identifier	sp		10144106	0					
ANR	10144320	Identifier	tbuflen		10144106	1					
ANR	10144321	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"		10144106	1					
ANR	10144322	Callee	multiply_ms		10144106	0					
ANR	10144323	Identifier	multiply_ms		10144106	0					
ANR	10144324	ArgumentList	td -> td_imagewidth		10144106	1					
ANR	10144325	Argument	td -> td_imagewidth		10144106	0					
ANR	10144326	PtrMemberAccess	td -> td_imagewidth		10144106	0					
ANR	10144327	Identifier	td		10144106	0					
ANR	10144328	Identifier	td_imagewidth		10144106	1					
ANR	10144329	Argument	td -> td_imagelength		10144106	1					
ANR	10144330	PtrMemberAccess	td -> td_imagelength		10144106	0					
ANR	10144331	Identifier	td		10144106	0					
ANR	10144332	Identifier	td_imagelength		10144106	1					
ANR	10144333	IfStatement	"if ( multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL )"		10144106	10					
ANR	10144334	Condition	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL"	1321:5:33263:33387	10144106	0	True				
ANR	10144335	OrExpression	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL"		10144106	0		||			
ANR	10144336	EqualityExpression	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0"		10144106	0		==			
ANR	10144337	CallExpression	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) )"		10144106	0					
ANR	10144338	Callee	multiply_ms		10144106	0					
ANR	10144339	Identifier	multiply_ms		10144106	0					
ANR	10144340	ArgumentList	sp -> tbuflen		10144106	1					
ANR	10144341	Argument	sp -> tbuflen		10144106	0					
ANR	10144342	PtrMemberAccess	sp -> tbuflen		10144106	0					
ANR	10144343	Identifier	sp		10144106	0					
ANR	10144344	Identifier	tbuflen		10144106	1					
ANR	10144345	Argument	sizeof ( int16 )		10144106	1					
ANR	10144346	SizeofExpression	sizeof ( int16 )		10144106	0					
ANR	10144347	Sizeof	sizeof		10144106	0					
ANR	10144348	SizeofOperand	int16		10144106	1					
ANR	10144349	PrimaryExpression	0		10144106	1					
ANR	10144350	EqualityExpression	( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL		10144106	1		==			
ANR	10144351	AssignmentExpression	sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) )		10144106	0		=			
ANR	10144352	PtrMemberAccess	sp -> tbuf		10144106	0					
ANR	10144353	Identifier	sp		10144106	0					
ANR	10144354	Identifier	tbuf		10144106	1					
ANR	10144355	CastExpression	( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) )		10144106	1					
ANR	10144356	CastTarget	uint8 *		10144106	0					
ANR	10144357	CallExpression	_TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) )		10144106	1					
ANR	10144358	Callee	_TIFFmalloc		10144106	0					
ANR	10144359	Identifier	_TIFFmalloc		10144106	0					
ANR	10144360	ArgumentList	sp -> tbuflen * sizeof ( int16 )		10144106	1					
ANR	10144361	Argument	sp -> tbuflen * sizeof ( int16 )		10144106	0					
ANR	10144362	MultiplicativeExpression	sp -> tbuflen * sizeof ( int16 )		10144106	0		*			
ANR	10144363	PtrMemberAccess	sp -> tbuflen		10144106	0					
ANR	10144364	Identifier	sp		10144106	0					
ANR	10144365	Identifier	tbuflen		10144106	1					
ANR	10144366	SizeofExpression	sizeof ( int16 )		10144106	1					
ANR	10144367	Sizeof	sizeof		10144106	0					
ANR	10144368	SizeofOperand	int16		10144106	1					
ANR	10144369	Identifier	NULL		10144106	1					
ANR	10144370	CompoundStatement		42:78:1396:1396	10144106	1					
ANR	10144371	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"	1323:2:33394:33477	10144106	0	True				
ANR	10144372	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"		10144106	0					
ANR	10144373	Callee	TIFFErrorExt		10144106	0					
ANR	10144374	Identifier	TIFFErrorExt		10144106	0					
ANR	10144375	ArgumentList	tif -> tif_clientdata		10144106	1					
ANR	10144376	Argument	tif -> tif_clientdata		10144106	0					
ANR	10144377	PtrMemberAccess	tif -> tif_clientdata		10144106	0					
ANR	10144378	Identifier	tif		10144106	0					
ANR	10144379	Identifier	tif_clientdata		10144106	1					
ANR	10144380	Argument	module		10144106	1					
ANR	10144381	Identifier	module		10144106	0					
ANR	10144382	Argument	"""No space for SGILog translation buffer"""		10144106	2					
ANR	10144383	PrimaryExpression	"""No space for SGILog translation buffer"""		10144106	0					
ANR	10144384	ReturnStatement	return ( 0 ) ;	1324:2:33481:33491	10144106	1	True				
ANR	10144385	PrimaryExpression	0		10144106	0					
ANR	10144386	ReturnStatement	return ( 1 ) ;	1326:1:33497:33507	10144106	11	True				
ANR	10144387	PrimaryExpression	1		10144106	0					
ANR	10144388	ReturnType	static int		10144106	1					
ANR	10144389	Identifier	LogL16InitState		10144106	2					
ANR	10144390	ParameterList	TIFF * tif		10144106	3					
ANR	10144391	Parameter	TIFF * tif	1280:16:31982:31990	10144106	0	True				
ANR	10144392	ParameterType	TIFF *		10144106	0					
ANR	10144393	Identifier	tif		10144106	1					
ANR	10144394	CFGEntryNode	ENTRY		10144106		True				
ANR	10144395	CFGExitNode	EXIT		10144106		True				
ANR	10144396	Symbol	* sp		10144106						
ANR	10144397	Symbol	& tif -> tif_dir		10144106						
ANR	10144398	Symbol	td -> td_imagelength		10144106						
ANR	10144399	Symbol	sp -> user_datafmt		10144106						
ANR	10144400	Symbol	td -> td_tilelength		10144106						
ANR	10144401	Symbol	tif		10144106						
ANR	10144402	Symbol	isTiled		10144106						
ANR	10144403	Symbol	sp -> tbuflen		10144106						
ANR	10144404	Symbol	LogL16GuessDataFmt		10144106						
ANR	10144405	Symbol	sp -> pixel_size		10144106						
ANR	10144406	Symbol	DecoderState		10144106						
ANR	10144407	Symbol	PHOTOMETRIC_LOGL		10144106						
ANR	10144408	Symbol	sp -> tbuf		10144106						
ANR	10144409	Symbol	SGILOGDATAFMT_UNKNOWN		10144106						
ANR	10144410	Symbol	sp		10144106						
ANR	10144411	Symbol	NULL		10144106						
ANR	10144412	Symbol	td -> td_imagewidth		10144106						
ANR	10144413	Symbol	module		10144106						
ANR	10144414	Symbol	td -> td_tilewidth		10144106						
ANR	10144415	Symbol	multiply_ms		10144106						
ANR	10144416	Symbol	tif -> tif_clientdata		10144106						
ANR	10144417	Symbol	td		10144106						
ANR	10144418	Symbol	td -> td_samplesperpixel		10144106						
ANR	10144419	Symbol	* td		10144106						
ANR	10144420	Symbol	_TIFFmalloc		10144106						
ANR	10144421	Symbol	td -> td_photometric		10144106						
ANR	10144422	Symbol	* tif		10144106						
ANR	10144423	Symbol	td -> td_rowsperstrip		10144106						
ANR	10144424	Function	LogLuvGuessDataFmt	1329:0:33512:34635							
ANR	10144425	FunctionDef	LogLuvGuessDataFmt (TIFFDirectory * td)		10144424	0					
ANR	10144426	CompoundStatement		1331:0:33561:34635	10144424	0					
ANR	10144427	IdentifierDeclStatement	int guess ;	1332:1:33564:33573	10144424	0	True				
ANR	10144428	IdentifierDecl	guess		10144424	0					
ANR	10144429	IdentifierDeclType	int		10144424	0					
ANR	10144430	Identifier	guess		10144424	1					
ANR	10144431	Statement	define	1338:1:33680:33685	10144424	1	True				
ANR	10144432	Statement	PACK	1338:8:33687:33690	10144424	2	True				
ANR	10144433	Statement	(	1338:12:33691:33691	10144424	3	True				
ANR	10144434	Statement	a	1338:13:33692:33692	10144424	4	True				
ANR	10144435	Statement	","	1338:14:33693:33693	10144424	5	True				
ANR	10144436	Statement	b	1338:15:33694:33694	10144424	6	True				
ANR	10144437	Statement	)	1338:16:33695:33695	10144424	7	True				
ANR	10144438	Statement	(	1338:18:33697:33697	10144424	8	True				
ANR	10144439	Statement	(	1338:19:33698:33698	10144424	9	True				
ANR	10144440	Statement	(	1338:20:33699:33699	10144424	10	True				
ANR	10144441	Statement	a	1338:21:33700:33700	10144424	11	True				
ANR	10144442	Statement	)	1338:22:33701:33701	10144424	12	True				
ANR	10144443	Statement	<<	1338:23:33702:33703	10144424	13	True				
ANR	10144444	Statement	3	1338:25:33704:33704	10144424	14	True				
ANR	10144445	Statement	)	1338:26:33705:33705	10144424	15	True				
ANR	10144446	Statement	|	1338:27:33706:33706	10144424	16	True				
ANR	10144447	Statement	(	1338:28:33707:33707	10144424	17	True				
ANR	10144448	Statement	b	1338:29:33708:33708	10144424	18	True				
ANR	10144449	Statement	)	1338:30:33709:33709	10144424	19	True				
ANR	10144450	Statement	)	1338:31:33710:33710	10144424	20	True				
ANR	10144451	SwitchStatement	"switch ( PACK ( td -> td_bitspersample , td -> td_sampleformat ) )"		10144424	21					
ANR	10144452	Condition	"PACK ( td -> td_bitspersample , td -> td_sampleformat )"	1339:9:33721:33767	10144424	0	True				
ANR	10144453	CallExpression	"PACK ( td -> td_bitspersample , td -> td_sampleformat )"		10144424	0					
ANR	10144454	Callee	PACK		10144424	0					
ANR	10144455	Identifier	PACK		10144424	0					
ANR	10144456	ArgumentList	td -> td_bitspersample		10144424	1					
ANR	10144457	Argument	td -> td_bitspersample		10144424	0					
ANR	10144458	PtrMemberAccess	td -> td_bitspersample		10144424	0					
ANR	10144459	Identifier	td		10144424	0					
ANR	10144460	Identifier	td_bitspersample		10144424	1					
ANR	10144461	Argument	td -> td_sampleformat		10144424	1					
ANR	10144462	PtrMemberAccess	td -> td_sampleformat		10144424	0					
ANR	10144463	Identifier	td		10144424	0					
ANR	10144464	Identifier	td_sampleformat		10144424	1					
ANR	10144465	CompoundStatement		9:58:208:208	10144424	1					
ANR	10144466	Statement	case	1340:1:33773:33776	10144424	0	True				
ANR	10144467	Statement	PACK	1340:6:33778:33781	10144424	1	True				
ANR	10144468	Statement	(	1340:10:33782:33782	10144424	2	True				
ANR	10144469	Statement	32	1340:11:33783:33784	10144424	3	True				
ANR	10144470	Statement	","	1340:13:33785:33785	10144424	4	True				
ANR	10144471	Statement	SAMPLEFORMAT_IEEEFP	1340:15:33787:33805	10144424	5	True				
ANR	10144472	Statement	)	1340:34:33806:33806	10144424	6	True				
ANR	10144473	Statement	:	1340:35:33807:33807	10144424	7	True				
ANR	10144474	ExpressionStatement	guess = SGILOGDATAFMT_FLOAT	1341:2:33811:33838	10144424	8	True				
ANR	10144475	AssignmentExpression	guess = SGILOGDATAFMT_FLOAT		10144424	0		=			
ANR	10144476	Identifier	guess		10144424	0					
ANR	10144477	Identifier	SGILOGDATAFMT_FLOAT		10144424	1					
ANR	10144478	BreakStatement	break ;	1342:2:33842:33847	10144424	9	True				
ANR	10144479	Statement	case	1343:1:33850:33853	10144424	10	True				
ANR	10144480	Statement	PACK	1343:6:33855:33858	10144424	11	True				
ANR	10144481	Statement	(	1343:10:33859:33859	10144424	12	True				
ANR	10144482	Statement	32	1343:11:33860:33861	10144424	13	True				
ANR	10144483	Statement	","	1343:13:33862:33862	10144424	14	True				
ANR	10144484	Statement	SAMPLEFORMAT_VOID	1343:15:33864:33880	10144424	15	True				
ANR	10144485	Statement	)	1343:32:33881:33881	10144424	16	True				
ANR	10144486	Statement	:	1343:33:33882:33882	10144424	17	True				
ANR	10144487	Statement	case	1344:1:33885:33888	10144424	18	True				
ANR	10144488	Statement	PACK	1344:6:33890:33893	10144424	19	True				
ANR	10144489	Statement	(	1344:10:33894:33894	10144424	20	True				
ANR	10144490	Statement	32	1344:11:33895:33896	10144424	21	True				
ANR	10144491	Statement	","	1344:13:33897:33897	10144424	22	True				
ANR	10144492	Statement	SAMPLEFORMAT_UINT	1344:15:33899:33915	10144424	23	True				
ANR	10144493	Statement	)	1344:32:33916:33916	10144424	24	True				
ANR	10144494	Statement	:	1344:33:33917:33917	10144424	25	True				
ANR	10144495	Statement	case	1345:1:33920:33923	10144424	26	True				
ANR	10144496	Statement	PACK	1345:6:33925:33928	10144424	27	True				
ANR	10144497	Statement	(	1345:10:33929:33929	10144424	28	True				
ANR	10144498	Statement	32	1345:11:33930:33931	10144424	29	True				
ANR	10144499	Statement	","	1345:13:33932:33932	10144424	30	True				
ANR	10144500	Statement	SAMPLEFORMAT_INT	1345:15:33934:33949	10144424	31	True				
ANR	10144501	Statement	)	1345:31:33950:33950	10144424	32	True				
ANR	10144502	Statement	:	1345:32:33951:33951	10144424	33	True				
ANR	10144503	ExpressionStatement	guess = SGILOGDATAFMT_RAW	1346:2:33955:33980	10144424	34	True				
ANR	10144504	AssignmentExpression	guess = SGILOGDATAFMT_RAW		10144424	0		=			
ANR	10144505	Identifier	guess		10144424	0					
ANR	10144506	Identifier	SGILOGDATAFMT_RAW		10144424	1					
ANR	10144507	BreakStatement	break ;	1347:2:33984:33989	10144424	35	True				
ANR	10144508	Statement	case	1348:1:33992:33995	10144424	36	True				
ANR	10144509	Statement	PACK	1348:6:33997:34000	10144424	37	True				
ANR	10144510	Statement	(	1348:10:34001:34001	10144424	38	True				
ANR	10144511	Statement	16	1348:11:34002:34003	10144424	39	True				
ANR	10144512	Statement	","	1348:13:34004:34004	10144424	40	True				
ANR	10144513	Statement	SAMPLEFORMAT_VOID	1348:15:34006:34022	10144424	41	True				
ANR	10144514	Statement	)	1348:32:34023:34023	10144424	42	True				
ANR	10144515	Statement	:	1348:33:34024:34024	10144424	43	True				
ANR	10144516	Statement	case	1349:1:34027:34030	10144424	44	True				
ANR	10144517	Statement	PACK	1349:6:34032:34035	10144424	45	True				
ANR	10144518	Statement	(	1349:10:34036:34036	10144424	46	True				
ANR	10144519	Statement	16	1349:11:34037:34038	10144424	47	True				
ANR	10144520	Statement	","	1349:13:34039:34039	10144424	48	True				
ANR	10144521	Statement	SAMPLEFORMAT_INT	1349:15:34041:34056	10144424	49	True				
ANR	10144522	Statement	)	1349:31:34057:34057	10144424	50	True				
ANR	10144523	Statement	:	1349:32:34058:34058	10144424	51	True				
ANR	10144524	Statement	case	1350:1:34061:34064	10144424	52	True				
ANR	10144525	Statement	PACK	1350:6:34066:34069	10144424	53	True				
ANR	10144526	Statement	(	1350:10:34070:34070	10144424	54	True				
ANR	10144527	Statement	16	1350:11:34071:34072	10144424	55	True				
ANR	10144528	Statement	","	1350:13:34073:34073	10144424	56	True				
ANR	10144529	Statement	SAMPLEFORMAT_UINT	1350:15:34075:34091	10144424	57	True				
ANR	10144530	Statement	)	1350:32:34092:34092	10144424	58	True				
ANR	10144531	Statement	:	1350:33:34093:34093	10144424	59	True				
ANR	10144532	ExpressionStatement	guess = SGILOGDATAFMT_16BIT	1351:2:34097:34124	10144424	60	True				
ANR	10144533	AssignmentExpression	guess = SGILOGDATAFMT_16BIT		10144424	0		=			
ANR	10144534	Identifier	guess		10144424	0					
ANR	10144535	Identifier	SGILOGDATAFMT_16BIT		10144424	1					
ANR	10144536	BreakStatement	break ;	1352:2:34128:34133	10144424	61	True				
ANR	10144537	Statement	case	1353:1:34136:34139	10144424	62	True				
ANR	10144538	Statement	PACK	1353:6:34141:34144	10144424	63	True				
ANR	10144539	Statement	(	1353:10:34145:34145	10144424	64	True				
ANR	10144540	Statement	8	1353:12:34147:34147	10144424	65	True				
ANR	10144541	Statement	","	1353:13:34148:34148	10144424	66	True				
ANR	10144542	Statement	SAMPLEFORMAT_VOID	1353:15:34150:34166	10144424	67	True				
ANR	10144543	Statement	)	1353:32:34167:34167	10144424	68	True				
ANR	10144544	Statement	:	1353:33:34168:34168	10144424	69	True				
ANR	10144545	Statement	case	1354:1:34171:34174	10144424	70	True				
ANR	10144546	Statement	PACK	1354:6:34176:34179	10144424	71	True				
ANR	10144547	Statement	(	1354:10:34180:34180	10144424	72	True				
ANR	10144548	Statement	8	1354:12:34182:34182	10144424	73	True				
ANR	10144549	Statement	","	1354:13:34183:34183	10144424	74	True				
ANR	10144550	Statement	SAMPLEFORMAT_UINT	1354:15:34185:34201	10144424	75	True				
ANR	10144551	Statement	)	1354:32:34202:34202	10144424	76	True				
ANR	10144552	Statement	:	1354:33:34203:34203	10144424	77	True				
ANR	10144553	ExpressionStatement	guess = SGILOGDATAFMT_8BIT	1355:2:34207:34233	10144424	78	True				
ANR	10144554	AssignmentExpression	guess = SGILOGDATAFMT_8BIT		10144424	0		=			
ANR	10144555	Identifier	guess		10144424	0					
ANR	10144556	Identifier	SGILOGDATAFMT_8BIT		10144424	1					
ANR	10144557	BreakStatement	break ;	1356:2:34237:34242	10144424	79	True				
ANR	10144558	Label	default :	1357:1:34245:34252	10144424	80	True				
ANR	10144559	Identifier	default		10144424	0					
ANR	10144560	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1358:2:34256:34285	10144424	81	True				
ANR	10144561	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		10144424	0		=			
ANR	10144562	Identifier	guess		10144424	0					
ANR	10144563	Identifier	SGILOGDATAFMT_UNKNOWN		10144424	1					
ANR	10144564	BreakStatement	break ;	1359:2:34289:34294	10144424	82	True				
ANR	10144565	Statement	undef	1360:1:34297:34301	10144424	83	True				
ANR	10144566	Statement	PACK	1360:7:34303:34306	10144424	84	True				
ANR	10144567	SwitchStatement	switch ( td -> td_samplesperpixel )		10144424	22					
ANR	10144568	Condition	td -> td_samplesperpixel	1365:9:34365:34386	10144424	0	True				
ANR	10144569	PtrMemberAccess	td -> td_samplesperpixel		10144424	0					
ANR	10144570	Identifier	td		10144424	0					
ANR	10144571	Identifier	td_samplesperpixel		10144424	1					
ANR	10144572	CompoundStatement		35:33:827:827	10144424	1					
ANR	10144573	Label	case 1 :	1366:1:34392:34398	10144424	0	True				
ANR	10144574	IfStatement	if ( guess != SGILOGDATAFMT_RAW )		10144424	1					
ANR	10144575	Condition	guess != SGILOGDATAFMT_RAW	1367:6:34406:34431	10144424	0	True				
ANR	10144576	EqualityExpression	guess != SGILOGDATAFMT_RAW		10144424	0		!=			
ANR	10144577	Identifier	guess		10144424	0					
ANR	10144578	Identifier	SGILOGDATAFMT_RAW		10144424	1					
ANR	10144579	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1368:3:34437:34466	10144424	1	True				
ANR	10144580	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		10144424	0		=			
ANR	10144581	Identifier	guess		10144424	0					
ANR	10144582	Identifier	SGILOGDATAFMT_UNKNOWN		10144424	1					
ANR	10144583	BreakStatement	break ;	1369:2:34470:34475	10144424	2	True				
ANR	10144584	Label	case 3 :	1370:1:34478:34484	10144424	3	True				
ANR	10144585	IfStatement	if ( guess == SGILOGDATAFMT_RAW )		10144424	4					
ANR	10144586	Condition	guess == SGILOGDATAFMT_RAW	1371:6:34492:34517	10144424	0	True				
ANR	10144587	EqualityExpression	guess == SGILOGDATAFMT_RAW		10144424	0		==			
ANR	10144588	Identifier	guess		10144424	0					
ANR	10144589	Identifier	SGILOGDATAFMT_RAW		10144424	1					
ANR	10144590	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1372:3:34523:34552	10144424	1	True				
ANR	10144591	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		10144424	0		=			
ANR	10144592	Identifier	guess		10144424	0					
ANR	10144593	Identifier	SGILOGDATAFMT_UNKNOWN		10144424	1					
ANR	10144594	BreakStatement	break ;	1373:2:34556:34561	10144424	5	True				
ANR	10144595	Label	default :	1374:1:34564:34571	10144424	6	True				
ANR	10144596	Identifier	default		10144424	0					
ANR	10144597	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1375:2:34575:34604	10144424	7	True				
ANR	10144598	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		10144424	0		=			
ANR	10144599	Identifier	guess		10144424	0					
ANR	10144600	Identifier	SGILOGDATAFMT_UNKNOWN		10144424	1					
ANR	10144601	BreakStatement	break ;	1376:2:34608:34613	10144424	8	True				
ANR	10144602	ReturnStatement	return ( guess ) ;	1378:1:34619:34633	10144424	23	True				
ANR	10144603	Identifier	guess		10144424	0					
ANR	10144604	ReturnType	static int		10144424	1					
ANR	10144605	Identifier	LogLuvGuessDataFmt		10144424	2					
ANR	10144606	ParameterList	TIFFDirectory * td		10144424	3					
ANR	10144607	Parameter	TIFFDirectory * td	1330:19:33542:33558	10144424	0	True				
ANR	10144608	ParameterType	TIFFDirectory *		10144424	0					
ANR	10144609	Identifier	td		10144424	1					
ANR	10144610	CFGEntryNode	ENTRY		10144424		True				
ANR	10144611	CFGExitNode	EXIT		10144424		True				
ANR	10144612	Symbol	td		10144424						
ANR	10144613	Symbol	td -> td_samplesperpixel		10144424						
ANR	10144614	Symbol	guess		10144424						
ANR	10144615	Symbol	td -> td_sampleformat		10144424						
ANR	10144616	Symbol	* td		10144424						
ANR	10144617	Symbol	SGILOGDATAFMT_16BIT		10144424						
ANR	10144618	Symbol	SGILOGDATAFMT_8BIT		10144424						
ANR	10144619	Symbol	SGILOGDATAFMT_UNKNOWN		10144424						
ANR	10144620	Symbol	SGILOGDATAFMT_FLOAT		10144424						
ANR	10144621	Symbol	PACK		10144424						
ANR	10144622	Symbol	td -> td_bitspersample		10144424						
ANR	10144623	Symbol	SGILOGDATAFMT_RAW		10144424						
ANR	10144624	Function	LogLuvInitState	1381:0:34638:36239							
ANR	10144625	FunctionDef	LogLuvInitState (TIFF * tif)		10144624	0					
ANR	10144626	CompoundStatement		1383:0:34676:36239	10144624	0					
ANR	10144627	Statement	static	1384:1:34679:34684	10144624	0	True				
ANR	10144628	IdentifierDeclStatement	"const char module [ ] = ""LogLuvInitState"" ;"	1384:8:34686:34725	10144624	1	True				
ANR	10144629	IdentifierDecl	"module [ ] = ""LogLuvInitState"""		10144624	0					
ANR	10144630	IdentifierDeclType	const char [ ]		10144624	0					
ANR	10144631	Identifier	module		10144624	1					
ANR	10144632	AssignmentExpression	"module [ ] = ""LogLuvInitState"""		10144624	2		=			
ANR	10144633	Identifier	module		10144624	0					
ANR	10144634	PrimaryExpression	"""LogLuvInitState"""		10144624	1					
ANR	10144635	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1385:1:34728:34761	10144624	2	True				
ANR	10144636	IdentifierDecl	* td = & tif -> tif_dir		10144624	0					
ANR	10144637	IdentifierDeclType	TIFFDirectory *		10144624	0					
ANR	10144638	Identifier	td		10144624	1					
ANR	10144639	AssignmentExpression	* td = & tif -> tif_dir		10144624	2		=			
ANR	10144640	Identifier	td		10144624	0					
ANR	10144641	UnaryOperationExpression	& tif -> tif_dir		10144624	1					
ANR	10144642	UnaryOperator	&		10144624	0					
ANR	10144643	PtrMemberAccess	tif -> tif_dir		10144624	1					
ANR	10144644	Identifier	tif		10144624	0					
ANR	10144645	Identifier	tif_dir		10144624	1					
ANR	10144646	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1386:1:34764:34799	10144624	3	True				
ANR	10144647	IdentifierDecl	* sp = DecoderState ( tif )		10144624	0					
ANR	10144648	IdentifierDeclType	LogLuvState *		10144624	0					
ANR	10144649	Identifier	sp		10144624	1					
ANR	10144650	AssignmentExpression	* sp = DecoderState ( tif )		10144624	2		=			
ANR	10144651	Identifier	sp		10144624	0					
ANR	10144652	CallExpression	DecoderState ( tif )		10144624	1					
ANR	10144653	Callee	DecoderState		10144624	0					
ANR	10144654	Identifier	DecoderState		10144624	0					
ANR	10144655	ArgumentList	tif		10144624	1					
ANR	10144656	Argument	tif		10144624	0					
ANR	10144657	Identifier	tif		10144624	0					
ANR	10144658	ExpressionStatement	assert ( sp != NULL )	1388:1:34803:34821	10144624	4	True				
ANR	10144659	CallExpression	assert ( sp != NULL )		10144624	0					
ANR	10144660	Callee	assert		10144624	0					
ANR	10144661	Identifier	assert		10144624	0					
ANR	10144662	ArgumentList	sp != NULL		10144624	1					
ANR	10144663	Argument	sp != NULL		10144624	0					
ANR	10144664	EqualityExpression	sp != NULL		10144624	0		!=			
ANR	10144665	Identifier	sp		10144624	0					
ANR	10144666	Identifier	NULL		10144624	1					
ANR	10144667	ExpressionStatement	assert ( td -> td_photometric == PHOTOMETRIC_LOGLUV )	1389:1:34824:34872	10144624	5	True				
ANR	10144668	CallExpression	assert ( td -> td_photometric == PHOTOMETRIC_LOGLUV )		10144624	0					
ANR	10144669	Callee	assert		10144624	0					
ANR	10144670	Identifier	assert		10144624	0					
ANR	10144671	ArgumentList	td -> td_photometric == PHOTOMETRIC_LOGLUV		10144624	1					
ANR	10144672	Argument	td -> td_photometric == PHOTOMETRIC_LOGLUV		10144624	0					
ANR	10144673	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGLUV		10144624	0		==			
ANR	10144674	PtrMemberAccess	td -> td_photometric		10144624	0					
ANR	10144675	Identifier	td		10144624	0					
ANR	10144676	Identifier	td_photometric		10144624	1					
ANR	10144677	Identifier	PHOTOMETRIC_LOGLUV		10144624	1					
ANR	10144678	IfStatement	if ( td -> td_planarconfig != PLANARCONFIG_CONTIG )		10144624	6					
ANR	10144679	Condition	td -> td_planarconfig != PLANARCONFIG_CONTIG	1392:5:34939:34980	10144624	0	True				
ANR	10144680	EqualityExpression	td -> td_planarconfig != PLANARCONFIG_CONTIG		10144624	0		!=			
ANR	10144681	PtrMemberAccess	td -> td_planarconfig		10144624	0					
ANR	10144682	Identifier	td		10144624	0					
ANR	10144683	Identifier	td_planarconfig		10144624	1					
ANR	10144684	Identifier	PLANARCONFIG_CONTIG		10144624	1					
ANR	10144685	CompoundStatement		10:49:306:306	10144624	1					
ANR	10144686	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression cannot handle non-contiguous data"" )"	1393:2:34987:35090	10144624	0	True				
ANR	10144687	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression cannot handle non-contiguous data"" )"		10144624	0					
ANR	10144688	Callee	TIFFErrorExt		10144624	0					
ANR	10144689	Identifier	TIFFErrorExt		10144624	0					
ANR	10144690	ArgumentList	tif -> tif_clientdata		10144624	1					
ANR	10144691	Argument	tif -> tif_clientdata		10144624	0					
ANR	10144692	PtrMemberAccess	tif -> tif_clientdata		10144624	0					
ANR	10144693	Identifier	tif		10144624	0					
ANR	10144694	Identifier	tif_clientdata		10144624	1					
ANR	10144695	Argument	module		10144624	1					
ANR	10144696	Identifier	module		10144624	0					
ANR	10144697	Argument	"""SGILog compression cannot handle non-contiguous data"""		10144624	2					
ANR	10144698	PrimaryExpression	"""SGILog compression cannot handle non-contiguous data"""		10144624	0					
ANR	10144699	ReturnStatement	return ( 0 ) ;	1395:2:35094:35104	10144624	1	True				
ANR	10144700	PrimaryExpression	0		10144624	0					
ANR	10144701	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN )		10144624	7					
ANR	10144702	Condition	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN	1397:5:35114:35154	10144624	0	True				
ANR	10144703	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN		10144624	0		==			
ANR	10144704	PtrMemberAccess	sp -> user_datafmt		10144624	0					
ANR	10144705	Identifier	sp		10144624	0					
ANR	10144706	Identifier	user_datafmt		10144624	1					
ANR	10144707	Identifier	SGILOGDATAFMT_UNKNOWN		10144624	1					
ANR	10144708	ExpressionStatement	sp -> user_datafmt = LogLuvGuessDataFmt ( td )	1398:2:35159:35200	10144624	1	True				
ANR	10144709	AssignmentExpression	sp -> user_datafmt = LogLuvGuessDataFmt ( td )		10144624	0		=			
ANR	10144710	PtrMemberAccess	sp -> user_datafmt		10144624	0					
ANR	10144711	Identifier	sp		10144624	0					
ANR	10144712	Identifier	user_datafmt		10144624	1					
ANR	10144713	CallExpression	LogLuvGuessDataFmt ( td )		10144624	1					
ANR	10144714	Callee	LogLuvGuessDataFmt		10144624	0					
ANR	10144715	Identifier	LogLuvGuessDataFmt		10144624	0					
ANR	10144716	ArgumentList	td		10144624	1					
ANR	10144717	Argument	td		10144624	0					
ANR	10144718	Identifier	td		10144624	0					
ANR	10144719	SwitchStatement	switch ( sp -> user_datafmt )		10144624	8					
ANR	10144720	Condition	sp -> user_datafmt	1399:9:35211:35226	10144624	0	True				
ANR	10144721	PtrMemberAccess	sp -> user_datafmt		10144624	0					
ANR	10144722	Identifier	sp		10144624	0					
ANR	10144723	Identifier	user_datafmt		10144624	1					
ANR	10144724	CompoundStatement		17:27:552:552	10144624	1					
ANR	10144725	Label	case SGILOGDATAFMT_FLOAT :	1400:1:35232:35256	10144624	0	True				
ANR	10144726	Identifier	SGILOGDATAFMT_FLOAT		10144624	0					
ANR	10144727	ExpressionStatement	sp -> pixel_size = 3 * sizeof ( float )	1401:2:35260:35293	10144624	1	True				
ANR	10144728	AssignmentExpression	sp -> pixel_size = 3 * sizeof ( float )		10144624	0		=			
ANR	10144729	PtrMemberAccess	sp -> pixel_size		10144624	0					
ANR	10144730	Identifier	sp		10144624	0					
ANR	10144731	Identifier	pixel_size		10144624	1					
ANR	10144732	MultiplicativeExpression	3 * sizeof ( float )		10144624	1		*			
ANR	10144733	PrimaryExpression	3		10144624	0					
ANR	10144734	SizeofExpression	sizeof ( float )		10144624	1					
ANR	10144735	Sizeof	sizeof		10144624	0					
ANR	10144736	SizeofOperand	float		10144624	1					
ANR	10144737	BreakStatement	break ;	1402:2:35297:35302	10144624	2	True				
ANR	10144738	Label	case SGILOGDATAFMT_16BIT :	1403:1:35305:35329	10144624	3	True				
ANR	10144739	Identifier	SGILOGDATAFMT_16BIT		10144624	0					
ANR	10144740	ExpressionStatement	sp -> pixel_size = 3 * sizeof ( int16 )	1404:2:35333:35366	10144624	4	True				
ANR	10144741	AssignmentExpression	sp -> pixel_size = 3 * sizeof ( int16 )		10144624	0		=			
ANR	10144742	PtrMemberAccess	sp -> pixel_size		10144624	0					
ANR	10144743	Identifier	sp		10144624	0					
ANR	10144744	Identifier	pixel_size		10144624	1					
ANR	10144745	MultiplicativeExpression	3 * sizeof ( int16 )		10144624	1		*			
ANR	10144746	PrimaryExpression	3		10144624	0					
ANR	10144747	SizeofExpression	sizeof ( int16 )		10144624	1					
ANR	10144748	Sizeof	sizeof		10144624	0					
ANR	10144749	SizeofOperand	int16		10144624	1					
ANR	10144750	BreakStatement	break ;	1405:2:35370:35375	10144624	5	True				
ANR	10144751	Label	case SGILOGDATAFMT_RAW :	1406:1:35378:35400	10144624	6	True				
ANR	10144752	Identifier	SGILOGDATAFMT_RAW		10144624	0					
ANR	10144753	ExpressionStatement	sp -> pixel_size = sizeof ( uint32 )	1407:2:35404:35436	10144624	7	True				
ANR	10144754	AssignmentExpression	sp -> pixel_size = sizeof ( uint32 )		10144624	0		=			
ANR	10144755	PtrMemberAccess	sp -> pixel_size		10144624	0					
ANR	10144756	Identifier	sp		10144624	0					
ANR	10144757	Identifier	pixel_size		10144624	1					
ANR	10144758	SizeofExpression	sizeof ( uint32 )		10144624	1					
ANR	10144759	Sizeof	sizeof		10144624	0					
ANR	10144760	SizeofOperand	uint32		10144624	1					
ANR	10144761	BreakStatement	break ;	1408:2:35440:35445	10144624	8	True				
ANR	10144762	Label	case SGILOGDATAFMT_8BIT :	1409:1:35448:35471	10144624	9	True				
ANR	10144763	Identifier	SGILOGDATAFMT_8BIT		10144624	0					
ANR	10144764	ExpressionStatement	sp -> pixel_size = 3 * sizeof ( uint8 )	1410:2:35475:35508	10144624	10	True				
ANR	10144765	AssignmentExpression	sp -> pixel_size = 3 * sizeof ( uint8 )		10144624	0		=			
ANR	10144766	PtrMemberAccess	sp -> pixel_size		10144624	0					
ANR	10144767	Identifier	sp		10144624	0					
ANR	10144768	Identifier	pixel_size		10144624	1					
ANR	10144769	MultiplicativeExpression	3 * sizeof ( uint8 )		10144624	1		*			
ANR	10144770	PrimaryExpression	3		10144624	0					
ANR	10144771	SizeofExpression	sizeof ( uint8 )		10144624	1					
ANR	10144772	Sizeof	sizeof		10144624	0					
ANR	10144773	SizeofOperand	uint8		10144624	1					
ANR	10144774	BreakStatement	break ;	1411:2:35512:35517	10144624	11	True				
ANR	10144775	Label	default :	1412:1:35520:35527	10144624	12	True				
ANR	10144776	Identifier	default		10144624	0					
ANR	10144777	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogLuv"" )"	1413:2:35531:35634	10144624	13	True				
ANR	10144778	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogLuv"" )"		10144624	0					
ANR	10144779	Callee	TIFFErrorExt		10144624	0					
ANR	10144780	Identifier	TIFFErrorExt		10144624	0					
ANR	10144781	ArgumentList	tif -> tif_clientdata		10144624	1					
ANR	10144782	Argument	tif -> tif_clientdata		10144624	0					
ANR	10144783	PtrMemberAccess	tif -> tif_clientdata		10144624	0					
ANR	10144784	Identifier	tif		10144624	0					
ANR	10144785	Identifier	tif_clientdata		10144624	1					
ANR	10144786	Argument	module		10144624	1					
ANR	10144787	Identifier	module		10144624	0					
ANR	10144788	Argument	"""No support for converting user data format to LogLuv"""		10144624	2					
ANR	10144789	PrimaryExpression	"""No support for converting user data format to LogLuv"""		10144624	0					
ANR	10144790	ReturnStatement	return ( 0 ) ;	1415:2:35638:35648	10144624	14	True				
ANR	10144791	PrimaryExpression	0		10144624	0					
ANR	10144792	IfStatement	if ( isTiled ( tif ) )		10144624	9					
ANR	10144793	Condition	isTiled ( tif )	1417:12:35665:35676	10144624	0	True				
ANR	10144794	CallExpression	isTiled ( tif )		10144624	0					
ANR	10144795	Callee	isTiled		10144624	0					
ANR	10144796	Identifier	isTiled		10144624	0					
ANR	10144797	ArgumentList	tif		10144624	1					
ANR	10144798	Argument	tif		10144624	0					
ANR	10144799	Identifier	tif		10144624	0					
ANR	10144800	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"	1418:12:35692:35754	10144624	1	True				
ANR	10144801	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		10144624	0		=			
ANR	10144802	PtrMemberAccess	sp -> tbuflen		10144624	0					
ANR	10144803	Identifier	sp		10144624	0					
ANR	10144804	Identifier	tbuflen		10144624	1					
ANR	10144805	CallExpression	"multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		10144624	1					
ANR	10144806	Callee	multiply_ms		10144624	0					
ANR	10144807	Identifier	multiply_ms		10144624	0					
ANR	10144808	ArgumentList	td -> td_tilewidth		10144624	1					
ANR	10144809	Argument	td -> td_tilewidth		10144624	0					
ANR	10144810	PtrMemberAccess	td -> td_tilewidth		10144624	0					
ANR	10144811	Identifier	td		10144624	0					
ANR	10144812	Identifier	td_tilewidth		10144624	1					
ANR	10144813	Argument	td -> td_tilelength		10144624	1					
ANR	10144814	PtrMemberAccess	td -> td_tilelength		10144624	0					
ANR	10144815	Identifier	td		10144624	0					
ANR	10144816	Identifier	td_tilelength		10144624	1					
ANR	10144817	ElseStatement	else		10144624	0					
ANR	10144818	IfStatement	if ( td -> td_rowsperstrip < td -> td_imagelength )		10144624	0					
ANR	10144819	Condition	td -> td_rowsperstrip < td -> td_imagelength	1419:17:35773:35812	10144624	0	True				
ANR	10144820	RelationalExpression	td -> td_rowsperstrip < td -> td_imagelength		10144624	0		<			
ANR	10144821	PtrMemberAccess	td -> td_rowsperstrip		10144624	0					
ANR	10144822	Identifier	td		10144624	0					
ANR	10144823	Identifier	td_rowsperstrip		10144624	1					
ANR	10144824	PtrMemberAccess	td -> td_imagelength		10144624	1					
ANR	10144825	Identifier	td		10144624	0					
ANR	10144826	Identifier	td_imagelength		10144624	1					
ANR	10144827	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"	1420:12:35828:35893	10144624	1	True				
ANR	10144828	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		10144624	0		=			
ANR	10144829	PtrMemberAccess	sp -> tbuflen		10144624	0					
ANR	10144830	Identifier	sp		10144624	0					
ANR	10144831	Identifier	tbuflen		10144624	1					
ANR	10144832	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		10144624	1					
ANR	10144833	Callee	multiply_ms		10144624	0					
ANR	10144834	Identifier	multiply_ms		10144624	0					
ANR	10144835	ArgumentList	td -> td_imagewidth		10144624	1					
ANR	10144836	Argument	td -> td_imagewidth		10144624	0					
ANR	10144837	PtrMemberAccess	td -> td_imagewidth		10144624	0					
ANR	10144838	Identifier	td		10144624	0					
ANR	10144839	Identifier	td_imagewidth		10144624	1					
ANR	10144840	Argument	td -> td_rowsperstrip		10144624	1					
ANR	10144841	PtrMemberAccess	td -> td_rowsperstrip		10144624	0					
ANR	10144842	Identifier	td		10144624	0					
ANR	10144843	Identifier	td_rowsperstrip		10144624	1					
ANR	10144844	ElseStatement	else		10144624	0					
ANR	10144845	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"	1422:12:35920:35984	10144624	0	True				
ANR	10144846	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"		10144624	0		=			
ANR	10144847	PtrMemberAccess	sp -> tbuflen		10144624	0					
ANR	10144848	Identifier	sp		10144624	0					
ANR	10144849	Identifier	tbuflen		10144624	1					
ANR	10144850	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"		10144624	1					
ANR	10144851	Callee	multiply_ms		10144624	0					
ANR	10144852	Identifier	multiply_ms		10144624	0					
ANR	10144853	ArgumentList	td -> td_imagewidth		10144624	1					
ANR	10144854	Argument	td -> td_imagewidth		10144624	0					
ANR	10144855	PtrMemberAccess	td -> td_imagewidth		10144624	0					
ANR	10144856	Identifier	td		10144624	0					
ANR	10144857	Identifier	td_imagewidth		10144624	1					
ANR	10144858	Argument	td -> td_imagelength		10144624	1					
ANR	10144859	PtrMemberAccess	td -> td_imagelength		10144624	0					
ANR	10144860	Identifier	td		10144624	0					
ANR	10144861	Identifier	td_imagelength		10144624	1					
ANR	10144862	IfStatement	"if ( multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL )"		10144624	10					
ANR	10144863	Condition	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL"	1423:5:35991:36117	10144624	0	True				
ANR	10144864	OrExpression	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL"		10144624	0		||			
ANR	10144865	EqualityExpression	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0"		10144624	0		==			
ANR	10144866	CallExpression	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) )"		10144624	0					
ANR	10144867	Callee	multiply_ms		10144624	0					
ANR	10144868	Identifier	multiply_ms		10144624	0					
ANR	10144869	ArgumentList	sp -> tbuflen		10144624	1					
ANR	10144870	Argument	sp -> tbuflen		10144624	0					
ANR	10144871	PtrMemberAccess	sp -> tbuflen		10144624	0					
ANR	10144872	Identifier	sp		10144624	0					
ANR	10144873	Identifier	tbuflen		10144624	1					
ANR	10144874	Argument	sizeof ( uint32 )		10144624	1					
ANR	10144875	SizeofExpression	sizeof ( uint32 )		10144624	0					
ANR	10144876	Sizeof	sizeof		10144624	0					
ANR	10144877	SizeofOperand	uint32		10144624	1					
ANR	10144878	PrimaryExpression	0		10144624	1					
ANR	10144879	EqualityExpression	( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL		10144624	1		==			
ANR	10144880	AssignmentExpression	sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) )		10144624	0		=			
ANR	10144881	PtrMemberAccess	sp -> tbuf		10144624	0					
ANR	10144882	Identifier	sp		10144624	0					
ANR	10144883	Identifier	tbuf		10144624	1					
ANR	10144884	CastExpression	( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) )		10144624	1					
ANR	10144885	CastTarget	uint8 *		10144624	0					
ANR	10144886	CallExpression	_TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) )		10144624	1					
ANR	10144887	Callee	_TIFFmalloc		10144624	0					
ANR	10144888	Identifier	_TIFFmalloc		10144624	0					
ANR	10144889	ArgumentList	sp -> tbuflen * sizeof ( uint32 )		10144624	1					
ANR	10144890	Argument	sp -> tbuflen * sizeof ( uint32 )		10144624	0					
ANR	10144891	MultiplicativeExpression	sp -> tbuflen * sizeof ( uint32 )		10144624	0		*			
ANR	10144892	PtrMemberAccess	sp -> tbuflen		10144624	0					
ANR	10144893	Identifier	sp		10144624	0					
ANR	10144894	Identifier	tbuflen		10144624	1					
ANR	10144895	SizeofExpression	sizeof ( uint32 )		10144624	1					
ANR	10144896	Sizeof	sizeof		10144624	0					
ANR	10144897	SizeofOperand	uint32		10144624	1					
ANR	10144898	Identifier	NULL		10144624	1					
ANR	10144899	CompoundStatement		42:79:1443:1443	10144624	1					
ANR	10144900	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"	1425:2:36124:36207	10144624	0	True				
ANR	10144901	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"		10144624	0					
ANR	10144902	Callee	TIFFErrorExt		10144624	0					
ANR	10144903	Identifier	TIFFErrorExt		10144624	0					
ANR	10144904	ArgumentList	tif -> tif_clientdata		10144624	1					
ANR	10144905	Argument	tif -> tif_clientdata		10144624	0					
ANR	10144906	PtrMemberAccess	tif -> tif_clientdata		10144624	0					
ANR	10144907	Identifier	tif		10144624	0					
ANR	10144908	Identifier	tif_clientdata		10144624	1					
ANR	10144909	Argument	module		10144624	1					
ANR	10144910	Identifier	module		10144624	0					
ANR	10144911	Argument	"""No space for SGILog translation buffer"""		10144624	2					
ANR	10144912	PrimaryExpression	"""No space for SGILog translation buffer"""		10144624	0					
ANR	10144913	ReturnStatement	return ( 0 ) ;	1426:2:36211:36221	10144624	1	True				
ANR	10144914	PrimaryExpression	0		10144624	0					
ANR	10144915	ReturnStatement	return ( 1 ) ;	1428:1:36227:36237	10144624	11	True				
ANR	10144916	PrimaryExpression	1		10144624	0					
ANR	10144917	ReturnType	static int		10144624	1					
ANR	10144918	Identifier	LogLuvInitState		10144624	2					
ANR	10144919	ParameterList	TIFF * tif		10144624	3					
ANR	10144920	Parameter	TIFF * tif	1382:16:34665:34673	10144624	0	True				
ANR	10144921	ParameterType	TIFF *		10144624	0					
ANR	10144922	Identifier	tif		10144624	1					
ANR	10144923	CFGEntryNode	ENTRY		10144624		True				
ANR	10144924	CFGExitNode	EXIT		10144624		True				
ANR	10144925	Symbol	td -> td_planarconfig		10144624						
ANR	10144926	Symbol	* sp		10144624						
ANR	10144927	Symbol	& tif -> tif_dir		10144624						
ANR	10144928	Symbol	td -> td_imagelength		10144624						
ANR	10144929	Symbol	sp -> user_datafmt		10144624						
ANR	10144930	Symbol	td -> td_tilelength		10144624						
ANR	10144931	Symbol	tif		10144624						
ANR	10144932	Symbol	isTiled		10144624						
ANR	10144933	Symbol	sp -> tbuflen		10144624						
ANR	10144934	Symbol	sp -> pixel_size		10144624						
ANR	10144935	Symbol	DecoderState		10144624						
ANR	10144936	Symbol	sp -> tbuf		10144624						
ANR	10144937	Symbol	SGILOGDATAFMT_UNKNOWN		10144624						
ANR	10144938	Symbol	sp		10144624						
ANR	10144939	Symbol	PHOTOMETRIC_LOGLUV		10144624						
ANR	10144940	Symbol	NULL		10144624						
ANR	10144941	Symbol	LogLuvGuessDataFmt		10144624						
ANR	10144942	Symbol	td -> td_imagewidth		10144624						
ANR	10144943	Symbol	module		10144624						
ANR	10144944	Symbol	PLANARCONFIG_CONTIG		10144624						
ANR	10144945	Symbol	td -> td_tilewidth		10144624						
ANR	10144946	Symbol	multiply_ms		10144624						
ANR	10144947	Symbol	tif -> tif_clientdata		10144624						
ANR	10144948	Symbol	td		10144624						
ANR	10144949	Symbol	* td		10144624						
ANR	10144950	Symbol	_TIFFmalloc		10144624						
ANR	10144951	Symbol	td -> td_photometric		10144624						
ANR	10144952	Symbol	* tif		10144624						
ANR	10144953	Symbol	td -> td_rowsperstrip		10144624						
ANR	10144954	Function	LogLuvFixupTags	1431:0:36242:36308							
ANR	10144955	FunctionDef	LogLuvFixupTags (TIFF * tif)		10144954	0					
ANR	10144956	CompoundStatement		1433:0:36280:36308	10144954	0					
ANR	10144957	ExpressionStatement	( void ) tif	1434:1:36283:36293	10144954	0	True				
ANR	10144958	CastExpression	( void ) tif		10144954	0					
ANR	10144959	CastTarget	void		10144954	0					
ANR	10144960	Identifier	tif		10144954	1					
ANR	10144961	ReturnStatement	return ( 1 ) ;	1435:1:36296:36306	10144954	1	True				
ANR	10144962	PrimaryExpression	1		10144954	0					
ANR	10144963	ReturnType	static int		10144954	1					
ANR	10144964	Identifier	LogLuvFixupTags		10144954	2					
ANR	10144965	ParameterList	TIFF * tif		10144954	3					
ANR	10144966	Parameter	TIFF * tif	1432:16:36269:36277	10144954	0	True				
ANR	10144967	ParameterType	TIFF *		10144954	0					
ANR	10144968	Identifier	tif		10144954	1					
ANR	10144969	CFGEntryNode	ENTRY		10144954		True				
ANR	10144970	CFGExitNode	EXIT		10144954		True				
ANR	10144971	Symbol	tif		10144954						
ANR	10144972	Function	LogLuvSetupDecode	1438:0:36311:37754							
ANR	10144973	FunctionDef	LogLuvSetupDecode (TIFF * tif)		10144972	0					
ANR	10144974	CompoundStatement		1440:0:36351:37754	10144972	0					
ANR	10144975	Statement	static	1441:1:36354:36359	10144972	0	True				
ANR	10144976	IdentifierDeclStatement	"const char module [ ] = ""LogLuvSetupDecode"" ;"	1441:8:36361:36402	10144972	1	True				
ANR	10144977	IdentifierDecl	"module [ ] = ""LogLuvSetupDecode"""		10144972	0					
ANR	10144978	IdentifierDeclType	const char [ ]		10144972	0					
ANR	10144979	Identifier	module		10144972	1					
ANR	10144980	AssignmentExpression	"module [ ] = ""LogLuvSetupDecode"""		10144972	2		=			
ANR	10144981	Identifier	module		10144972	0					
ANR	10144982	PrimaryExpression	"""LogLuvSetupDecode"""		10144972	1					
ANR	10144983	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1442:1:36405:36440	10144972	2	True				
ANR	10144984	IdentifierDecl	* sp = DecoderState ( tif )		10144972	0					
ANR	10144985	IdentifierDeclType	LogLuvState *		10144972	0					
ANR	10144986	Identifier	sp		10144972	1					
ANR	10144987	AssignmentExpression	* sp = DecoderState ( tif )		10144972	2		=			
ANR	10144988	Identifier	sp		10144972	0					
ANR	10144989	CallExpression	DecoderState ( tif )		10144972	1					
ANR	10144990	Callee	DecoderState		10144972	0					
ANR	10144991	Identifier	DecoderState		10144972	0					
ANR	10144992	ArgumentList	tif		10144972	1					
ANR	10144993	Argument	tif		10144972	0					
ANR	10144994	Identifier	tif		10144972	0					
ANR	10144995	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1443:1:36443:36476	10144972	3	True				
ANR	10144996	IdentifierDecl	* td = & tif -> tif_dir		10144972	0					
ANR	10144997	IdentifierDeclType	TIFFDirectory *		10144972	0					
ANR	10144998	Identifier	td		10144972	1					
ANR	10144999	AssignmentExpression	* td = & tif -> tif_dir		10144972	2		=			
ANR	10145000	Identifier	td		10144972	0					
ANR	10145001	UnaryOperationExpression	& tif -> tif_dir		10144972	1					
ANR	10145002	UnaryOperator	&		10144972	0					
ANR	10145003	PtrMemberAccess	tif -> tif_dir		10144972	1					
ANR	10145004	Identifier	tif		10144972	0					
ANR	10145005	Identifier	tif_dir		10144972	1					
ANR	10145006	ExpressionStatement	tif -> tif_postdecode = _TIFFNoPostDecode	1445:1:36480:36519	10144972	4	True				
ANR	10145007	AssignmentExpression	tif -> tif_postdecode = _TIFFNoPostDecode		10144972	0		=			
ANR	10145008	PtrMemberAccess	tif -> tif_postdecode		10144972	0					
ANR	10145009	Identifier	tif		10144972	0					
ANR	10145010	Identifier	tif_postdecode		10144972	1					
ANR	10145011	Identifier	_TIFFNoPostDecode		10144972	1					
ANR	10145012	SwitchStatement	switch ( td -> td_photometric )		10144972	5					
ANR	10145013	Condition	td -> td_photometric	1446:9:36530:36547	10144972	0	True				
ANR	10145014	PtrMemberAccess	td -> td_photometric		10144972	0					
ANR	10145015	Identifier	td		10144972	0					
ANR	10145016	Identifier	td_photometric		10144972	1					
ANR	10145017	CompoundStatement		7:29:198:198	10144972	1					
ANR	10145018	Label	case PHOTOMETRIC_LOGLUV :	1447:1:36553:36576	10144972	0	True				
ANR	10145019	Identifier	PHOTOMETRIC_LOGLUV		10144972	0					
ANR	10145020	IfStatement	if ( ! LogLuvInitState ( tif ) )		10144972	1					
ANR	10145021	Condition	! LogLuvInitState ( tif )	1448:6:36584:36604	10144972	0	True				
ANR	10145022	UnaryOperationExpression	! LogLuvInitState ( tif )		10144972	0					
ANR	10145023	UnaryOperator	!		10144972	0					
ANR	10145024	CallExpression	LogLuvInitState ( tif )		10144972	1					
ANR	10145025	Callee	LogLuvInitState		10144972	0					
ANR	10145026	Identifier	LogLuvInitState		10144972	0					
ANR	10145027	ArgumentList	tif		10144972	1					
ANR	10145028	Argument	tif		10144972	0					
ANR	10145029	Identifier	tif		10144972	0					
ANR	10145030	BreakStatement	break ;	1449:3:36610:36615	10144972	1	True				
ANR	10145031	IfStatement	if ( td -> td_compression == COMPRESSION_SGILOG24 )		10144972	2					
ANR	10145032	Condition	td -> td_compression == COMPRESSION_SGILOG24	1450:6:36623:36664	10144972	0	True				
ANR	10145033	EqualityExpression	td -> td_compression == COMPRESSION_SGILOG24		10144972	0		==			
ANR	10145034	PtrMemberAccess	td -> td_compression		10144972	0					
ANR	10145035	Identifier	td		10144972	0					
ANR	10145036	Identifier	td_compression		10144972	1					
ANR	10145037	Identifier	COMPRESSION_SGILOG24		10144972	1					
ANR	10145038	CompoundStatement		11:50:315:315	10144972	1					
ANR	10145039	ExpressionStatement	tif -> tif_decoderow = LogLuvDecode24	1451:3:36672:36707	10144972	0	True				
ANR	10145040	AssignmentExpression	tif -> tif_decoderow = LogLuvDecode24		10144972	0		=			
ANR	10145041	PtrMemberAccess	tif -> tif_decoderow		10144972	0					
ANR	10145042	Identifier	tif		10144972	0					
ANR	10145043	Identifier	tif_decoderow		10144972	1					
ANR	10145044	Identifier	LogLuvDecode24		10144972	1					
ANR	10145045	SwitchStatement	switch ( sp -> user_datafmt )		10144972	1					
ANR	10145046	Condition	sp -> user_datafmt	1452:11:36720:36735	10144972	0	True				
ANR	10145047	PtrMemberAccess	sp -> user_datafmt		10144972	0					
ANR	10145048	Identifier	sp		10144972	0					
ANR	10145049	Identifier	user_datafmt		10144972	1					
ANR	10145050	CompoundStatement		13:29:386:386	10144972	1					
ANR	10145051	Label	case SGILOGDATAFMT_FLOAT :	1453:3:36743:36767	10144972	0	True				
ANR	10145052	Identifier	SGILOGDATAFMT_FLOAT		10144972	0					
ANR	10145053	ExpressionStatement	sp -> tfunc = Luv24toXYZ	1454:4:36773:36795	10144972	1	True				
ANR	10145054	AssignmentExpression	sp -> tfunc = Luv24toXYZ		10144972	0		=			
ANR	10145055	PtrMemberAccess	sp -> tfunc		10144972	0					
ANR	10145056	Identifier	sp		10144972	0					
ANR	10145057	Identifier	tfunc		10144972	1					
ANR	10145058	Identifier	Luv24toXYZ		10144972	1					
ANR	10145059	BreakStatement	break ;	1455:4:36803:36808	10144972	2	True				
ANR	10145060	Label	case SGILOGDATAFMT_16BIT :	1456:3:36813:36837	10144972	3	True				
ANR	10145061	Identifier	SGILOGDATAFMT_16BIT		10144972	0					
ANR	10145062	ExpressionStatement	sp -> tfunc = Luv24toLuv48	1457:4:36843:36867	10144972	4	True				
ANR	10145063	AssignmentExpression	sp -> tfunc = Luv24toLuv48		10144972	0		=			
ANR	10145064	PtrMemberAccess	sp -> tfunc		10144972	0					
ANR	10145065	Identifier	sp		10144972	0					
ANR	10145066	Identifier	tfunc		10144972	1					
ANR	10145067	Identifier	Luv24toLuv48		10144972	1					
ANR	10145068	BreakStatement	break ;	1458:4:36875:36880	10144972	5	True				
ANR	10145069	Label	case SGILOGDATAFMT_8BIT :	1459:3:36885:36908	10144972	6	True				
ANR	10145070	Identifier	SGILOGDATAFMT_8BIT		10144972	0					
ANR	10145071	ExpressionStatement	sp -> tfunc = Luv24toRGB	1460:4:36914:36936	10144972	7	True				
ANR	10145072	AssignmentExpression	sp -> tfunc = Luv24toRGB		10144972	0		=			
ANR	10145073	PtrMemberAccess	sp -> tfunc		10144972	0					
ANR	10145074	Identifier	sp		10144972	0					
ANR	10145075	Identifier	tfunc		10144972	1					
ANR	10145076	Identifier	Luv24toRGB		10144972	1					
ANR	10145077	BreakStatement	break ;	1461:4:36942:36947	10144972	8	True				
ANR	10145078	ElseStatement	else		10144972	0					
ANR	10145079	CompoundStatement		24:9:611:611	10144972	0					
ANR	10145080	ExpressionStatement	tif -> tif_decoderow = LogLuvDecode32	1464:3:36968:37003	10144972	0	True				
ANR	10145081	AssignmentExpression	tif -> tif_decoderow = LogLuvDecode32		10144972	0		=			
ANR	10145082	PtrMemberAccess	tif -> tif_decoderow		10144972	0					
ANR	10145083	Identifier	tif		10144972	0					
ANR	10145084	Identifier	tif_decoderow		10144972	1					
ANR	10145085	Identifier	LogLuvDecode32		10144972	1					
ANR	10145086	SwitchStatement	switch ( sp -> user_datafmt )		10144972	1					
ANR	10145087	Condition	sp -> user_datafmt	1465:11:37016:37031	10144972	0	True				
ANR	10145088	PtrMemberAccess	sp -> user_datafmt		10144972	0					
ANR	10145089	Identifier	sp		10144972	0					
ANR	10145090	Identifier	user_datafmt		10144972	1					
ANR	10145091	CompoundStatement		26:29:682:682	10144972	1					
ANR	10145092	Label	case SGILOGDATAFMT_FLOAT :	1466:3:37039:37063	10144972	0	True				
ANR	10145093	Identifier	SGILOGDATAFMT_FLOAT		10144972	0					
ANR	10145094	ExpressionStatement	sp -> tfunc = Luv32toXYZ	1467:4:37069:37091	10144972	1	True				
ANR	10145095	AssignmentExpression	sp -> tfunc = Luv32toXYZ		10144972	0		=			
ANR	10145096	PtrMemberAccess	sp -> tfunc		10144972	0					
ANR	10145097	Identifier	sp		10144972	0					
ANR	10145098	Identifier	tfunc		10144972	1					
ANR	10145099	Identifier	Luv32toXYZ		10144972	1					
ANR	10145100	BreakStatement	break ;	1468:4:37097:37102	10144972	2	True				
ANR	10145101	Label	case SGILOGDATAFMT_16BIT :	1469:3:37107:37131	10144972	3	True				
ANR	10145102	Identifier	SGILOGDATAFMT_16BIT		10144972	0					
ANR	10145103	ExpressionStatement	sp -> tfunc = Luv32toLuv48	1470:4:37137:37161	10144972	4	True				
ANR	10145104	AssignmentExpression	sp -> tfunc = Luv32toLuv48		10144972	0		=			
ANR	10145105	PtrMemberAccess	sp -> tfunc		10144972	0					
ANR	10145106	Identifier	sp		10144972	0					
ANR	10145107	Identifier	tfunc		10144972	1					
ANR	10145108	Identifier	Luv32toLuv48		10144972	1					
ANR	10145109	BreakStatement	break ;	1471:4:37167:37172	10144972	5	True				
ANR	10145110	Label	case SGILOGDATAFMT_8BIT :	1472:3:37177:37200	10144972	6	True				
ANR	10145111	Identifier	SGILOGDATAFMT_8BIT		10144972	0					
ANR	10145112	ExpressionStatement	sp -> tfunc = Luv32toRGB	1473:4:37206:37228	10144972	7	True				
ANR	10145113	AssignmentExpression	sp -> tfunc = Luv32toRGB		10144972	0		=			
ANR	10145114	PtrMemberAccess	sp -> tfunc		10144972	0					
ANR	10145115	Identifier	sp		10144972	0					
ANR	10145116	Identifier	tfunc		10144972	1					
ANR	10145117	Identifier	Luv32toRGB		10144972	1					
ANR	10145118	BreakStatement	break ;	1474:4:37234:37239	10144972	8	True				
ANR	10145119	ReturnStatement	return ( 1 ) ;	1477:2:37252:37262	10144972	3	True				
ANR	10145120	PrimaryExpression	1		10144972	0					
ANR	10145121	Label	case PHOTOMETRIC_LOGL :	1478:1:37265:37286	10144972	4	True				
ANR	10145122	Identifier	PHOTOMETRIC_LOGL		10144972	0					
ANR	10145123	IfStatement	if ( ! LogL16InitState ( tif ) )		10144972	5					
ANR	10145124	Condition	! LogL16InitState ( tif )	1479:6:37294:37314	10144972	0	True				
ANR	10145125	UnaryOperationExpression	! LogL16InitState ( tif )		10144972	0					
ANR	10145126	UnaryOperator	!		10144972	0					
ANR	10145127	CallExpression	LogL16InitState ( tif )		10144972	1					
ANR	10145128	Callee	LogL16InitState		10144972	0					
ANR	10145129	Identifier	LogL16InitState		10144972	0					
ANR	10145130	ArgumentList	tif		10144972	1					
ANR	10145131	Argument	tif		10144972	0					
ANR	10145132	Identifier	tif		10144972	0					
ANR	10145133	BreakStatement	break ;	1480:3:37320:37325	10144972	1	True				
ANR	10145134	ExpressionStatement	tif -> tif_decoderow = LogL16Decode	1481:2:37329:37362	10144972	6	True				
ANR	10145135	AssignmentExpression	tif -> tif_decoderow = LogL16Decode		10144972	0		=			
ANR	10145136	PtrMemberAccess	tif -> tif_decoderow		10144972	0					
ANR	10145137	Identifier	tif		10144972	0					
ANR	10145138	Identifier	tif_decoderow		10144972	1					
ANR	10145139	Identifier	LogL16Decode		10144972	1					
ANR	10145140	SwitchStatement	switch ( sp -> user_datafmt )		10144972	7					
ANR	10145141	Condition	sp -> user_datafmt	1482:10:37374:37389	10144972	0	True				
ANR	10145142	PtrMemberAccess	sp -> user_datafmt		10144972	0					
ANR	10145143	Identifier	sp		10144972	0					
ANR	10145144	Identifier	user_datafmt		10144972	1					
ANR	10145145	CompoundStatement		43:28:1040:1040	10144972	1					
ANR	10145146	Label	case SGILOGDATAFMT_FLOAT :	1483:2:37396:37420	10144972	0	True				
ANR	10145147	Identifier	SGILOGDATAFMT_FLOAT		10144972	0					
ANR	10145148	ExpressionStatement	sp -> tfunc = L16toY	1484:3:37425:37443	10144972	1	True				
ANR	10145149	AssignmentExpression	sp -> tfunc = L16toY		10144972	0		=			
ANR	10145150	PtrMemberAccess	sp -> tfunc		10144972	0					
ANR	10145151	Identifier	sp		10144972	0					
ANR	10145152	Identifier	tfunc		10144972	1					
ANR	10145153	Identifier	L16toY		10144972	1					
ANR	10145154	BreakStatement	break ;	1485:3:37448:37453	10144972	2	True				
ANR	10145155	Label	case SGILOGDATAFMT_8BIT :	1486:2:37457:37480	10144972	3	True				
ANR	10145156	Identifier	SGILOGDATAFMT_8BIT		10144972	0					
ANR	10145157	ExpressionStatement	sp -> tfunc = L16toGry	1487:3:37485:37505	10144972	4	True				
ANR	10145158	AssignmentExpression	sp -> tfunc = L16toGry		10144972	0		=			
ANR	10145159	PtrMemberAccess	sp -> tfunc		10144972	0					
ANR	10145160	Identifier	sp		10144972	0					
ANR	10145161	Identifier	tfunc		10144972	1					
ANR	10145162	Identifier	L16toGry		10144972	1					
ANR	10145163	BreakStatement	break ;	1488:3:37510:37515	10144972	5	True				
ANR	10145164	ReturnStatement	return ( 1 ) ;	1490:2:37523:37533	10144972	8	True				
ANR	10145165	PrimaryExpression	1		10144972	0					
ANR	10145166	Label	default :	1491:1:37536:37543	10144972	9	True				
ANR	10145167	Identifier	default		10144972	0					
ANR	10145168	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"	1492:2:37547:37727	10144972	10	True				
ANR	10145169	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"		10144972	0					
ANR	10145170	Callee	TIFFErrorExt		10144972	0					
ANR	10145171	Identifier	TIFFErrorExt		10144972	0					
ANR	10145172	ArgumentList	tif -> tif_clientdata		10144972	1					
ANR	10145173	Argument	tif -> tif_clientdata		10144972	0					
ANR	10145174	PtrMemberAccess	tif -> tif_clientdata		10144972	0					
ANR	10145175	Identifier	tif		10144972	0					
ANR	10145176	Identifier	tif_clientdata		10144972	1					
ANR	10145177	Argument	module		10144972	1					
ANR	10145178	Identifier	module		10144972	0					
ANR	10145179	Argument	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		10144972	2					
ANR	10145180	PrimaryExpression	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		10144972	0					
ANR	10145181	Argument	td -> td_photometric		10144972	3					
ANR	10145182	PtrMemberAccess	td -> td_photometric		10144972	0					
ANR	10145183	Identifier	td		10144972	0					
ANR	10145184	Identifier	td_photometric		10144972	1					
ANR	10145185	Argument	"""must be either LogLUV or LogL"""		10144972	4					
ANR	10145186	PrimaryExpression	"""must be either LogLUV or LogL"""		10144972	0					
ANR	10145187	BreakStatement	break ;	1495:2:37731:37736	10144972	11	True				
ANR	10145188	ReturnStatement	return ( 0 ) ;	1497:1:37742:37752	10144972	6	True				
ANR	10145189	PrimaryExpression	0		10144972	0					
ANR	10145190	ReturnType	static int		10144972	1					
ANR	10145191	Identifier	LogLuvSetupDecode		10144972	2					
ANR	10145192	ParameterList	TIFF * tif		10144972	3					
ANR	10145193	Parameter	TIFF * tif	1439:18:36340:36348	10144972	0	True				
ANR	10145194	ParameterType	TIFF *		10144972	0					
ANR	10145195	Identifier	tif		10144972	1					
ANR	10145196	CFGEntryNode	ENTRY		10144972		True				
ANR	10145197	CFGExitNode	EXIT		10144972		True				
ANR	10145198	Symbol	* sp		10144972						
ANR	10145199	Symbol	COMPRESSION_SGILOG24		10144972						
ANR	10145200	Symbol	& tif -> tif_dir		10144972						
ANR	10145201	Symbol	L16toGry		10144972						
ANR	10145202	Symbol	tif -> tif_postdecode		10144972						
ANR	10145203	Symbol	td -> td_compression		10144972						
ANR	10145204	Symbol	sp -> user_datafmt		10144972						
ANR	10145205	Symbol	tif		10144972						
ANR	10145206	Symbol	L16toY		10144972						
ANR	10145207	Symbol	DecoderState		10144972						
ANR	10145208	Symbol	Luv32toLuv48		10144972						
ANR	10145209	Symbol	LogLuvInitState		10144972						
ANR	10145210	Symbol	_TIFFNoPostDecode		10144972						
ANR	10145211	Symbol	LogLuvDecode24		10144972						
ANR	10145212	Symbol	tif -> tif_decoderow		10144972						
ANR	10145213	Symbol	sp -> tfunc		10144972						
ANR	10145214	Symbol	sp		10144972						
ANR	10145215	Symbol	Luv24toLuv48		10144972						
ANR	10145216	Symbol	Luv32toRGB		10144972						
ANR	10145217	Symbol	Luv24toXYZ		10144972						
ANR	10145218	Symbol	module		10144972						
ANR	10145219	Symbol	LogL16InitState		10144972						
ANR	10145220	Symbol	Luv24toRGB		10144972						
ANR	10145221	Symbol	LogL16Decode		10144972						
ANR	10145222	Symbol	tif -> tif_clientdata		10144972						
ANR	10145223	Symbol	td		10144972						
ANR	10145224	Symbol	LogLuvDecode32		10144972						
ANR	10145225	Symbol	* td		10144972						
ANR	10145226	Symbol	Luv32toXYZ		10144972						
ANR	10145227	Symbol	* tif		10144972						
ANR	10145228	Symbol	td -> td_photometric		10144972						
ANR	10145229	Function	LogLuvSetupEncode	1500:0:37757:39409							
ANR	10145230	FunctionDef	LogLuvSetupEncode (TIFF * tif)		10145229	0					
ANR	10145231	CompoundStatement		1502:0:37797:39409	10145229	0					
ANR	10145232	Statement	static	1503:1:37800:37805	10145229	0	True				
ANR	10145233	IdentifierDeclStatement	"const char module [ ] = ""LogLuvSetupEncode"" ;"	1503:8:37807:37848	10145229	1	True				
ANR	10145234	IdentifierDecl	"module [ ] = ""LogLuvSetupEncode"""		10145229	0					
ANR	10145235	IdentifierDeclType	const char [ ]		10145229	0					
ANR	10145236	Identifier	module		10145229	1					
ANR	10145237	AssignmentExpression	"module [ ] = ""LogLuvSetupEncode"""		10145229	2		=			
ANR	10145238	Identifier	module		10145229	0					
ANR	10145239	PrimaryExpression	"""LogLuvSetupEncode"""		10145229	1					
ANR	10145240	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	1504:1:37851:37886	10145229	2	True				
ANR	10145241	IdentifierDecl	* sp = EncoderState ( tif )		10145229	0					
ANR	10145242	IdentifierDeclType	LogLuvState *		10145229	0					
ANR	10145243	Identifier	sp		10145229	1					
ANR	10145244	AssignmentExpression	* sp = EncoderState ( tif )		10145229	2		=			
ANR	10145245	Identifier	sp		10145229	0					
ANR	10145246	CallExpression	EncoderState ( tif )		10145229	1					
ANR	10145247	Callee	EncoderState		10145229	0					
ANR	10145248	Identifier	EncoderState		10145229	0					
ANR	10145249	ArgumentList	tif		10145229	1					
ANR	10145250	Argument	tif		10145229	0					
ANR	10145251	Identifier	tif		10145229	0					
ANR	10145252	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1505:1:37889:37922	10145229	3	True				
ANR	10145253	IdentifierDecl	* td = & tif -> tif_dir		10145229	0					
ANR	10145254	IdentifierDeclType	TIFFDirectory *		10145229	0					
ANR	10145255	Identifier	td		10145229	1					
ANR	10145256	AssignmentExpression	* td = & tif -> tif_dir		10145229	2		=			
ANR	10145257	Identifier	td		10145229	0					
ANR	10145258	UnaryOperationExpression	& tif -> tif_dir		10145229	1					
ANR	10145259	UnaryOperator	&		10145229	0					
ANR	10145260	PtrMemberAccess	tif -> tif_dir		10145229	1					
ANR	10145261	Identifier	tif		10145229	0					
ANR	10145262	Identifier	tif_dir		10145229	1					
ANR	10145263	SwitchStatement	switch ( td -> td_photometric )		10145229	4					
ANR	10145264	Condition	td -> td_photometric	1507:9:37934:37951	10145229	0	True				
ANR	10145265	PtrMemberAccess	td -> td_photometric		10145229	0					
ANR	10145266	Identifier	td		10145229	0					
ANR	10145267	Identifier	td_photometric		10145229	1					
ANR	10145268	CompoundStatement		6:29:156:156	10145229	1					
ANR	10145269	Label	case PHOTOMETRIC_LOGLUV :	1508:1:37957:37980	10145229	0	True				
ANR	10145270	Identifier	PHOTOMETRIC_LOGLUV		10145229	0					
ANR	10145271	IfStatement	if ( ! LogLuvInitState ( tif ) )		10145229	1					
ANR	10145272	Condition	! LogLuvInitState ( tif )	1509:6:37988:38008	10145229	0	True				
ANR	10145273	UnaryOperationExpression	! LogLuvInitState ( tif )		10145229	0					
ANR	10145274	UnaryOperator	!		10145229	0					
ANR	10145275	CallExpression	LogLuvInitState ( tif )		10145229	1					
ANR	10145276	Callee	LogLuvInitState		10145229	0					
ANR	10145277	Identifier	LogLuvInitState		10145229	0					
ANR	10145278	ArgumentList	tif		10145229	1					
ANR	10145279	Argument	tif		10145229	0					
ANR	10145280	Identifier	tif		10145229	0					
ANR	10145281	BreakStatement	break ;	1510:3:38014:38019	10145229	1	True				
ANR	10145282	IfStatement	if ( td -> td_compression == COMPRESSION_SGILOG24 )		10145229	2					
ANR	10145283	Condition	td -> td_compression == COMPRESSION_SGILOG24	1511:6:38027:38068	10145229	0	True				
ANR	10145284	EqualityExpression	td -> td_compression == COMPRESSION_SGILOG24		10145229	0		==			
ANR	10145285	PtrMemberAccess	td -> td_compression		10145229	0					
ANR	10145286	Identifier	td		10145229	0					
ANR	10145287	Identifier	td_compression		10145229	1					
ANR	10145288	Identifier	COMPRESSION_SGILOG24		10145229	1					
ANR	10145289	CompoundStatement		10:50:273:273	10145229	1					
ANR	10145290	ExpressionStatement	tif -> tif_encoderow = LogLuvEncode24	1512:3:38076:38111	10145229	0	True				
ANR	10145291	AssignmentExpression	tif -> tif_encoderow = LogLuvEncode24		10145229	0		=			
ANR	10145292	PtrMemberAccess	tif -> tif_encoderow		10145229	0					
ANR	10145293	Identifier	tif		10145229	0					
ANR	10145294	Identifier	tif_encoderow		10145229	1					
ANR	10145295	Identifier	LogLuvEncode24		10145229	1					
ANR	10145296	SwitchStatement	switch ( sp -> user_datafmt )		10145229	1					
ANR	10145297	Condition	sp -> user_datafmt	1513:11:38124:38139	10145229	0	True				
ANR	10145298	PtrMemberAccess	sp -> user_datafmt		10145229	0					
ANR	10145299	Identifier	sp		10145229	0					
ANR	10145300	Identifier	user_datafmt		10145229	1					
ANR	10145301	CompoundStatement		12:29:344:344	10145229	1					
ANR	10145302	Label	case SGILOGDATAFMT_FLOAT :	1514:3:38147:38171	10145229	0	True				
ANR	10145303	Identifier	SGILOGDATAFMT_FLOAT		10145229	0					
ANR	10145304	ExpressionStatement	sp -> tfunc = Luv24fromXYZ	1515:4:38177:38201	10145229	1	True				
ANR	10145305	AssignmentExpression	sp -> tfunc = Luv24fromXYZ		10145229	0		=			
ANR	10145306	PtrMemberAccess	sp -> tfunc		10145229	0					
ANR	10145307	Identifier	sp		10145229	0					
ANR	10145308	Identifier	tfunc		10145229	1					
ANR	10145309	Identifier	Luv24fromXYZ		10145229	1					
ANR	10145310	BreakStatement	break ;	1516:4:38207:38212	10145229	2	True				
ANR	10145311	Label	case SGILOGDATAFMT_16BIT :	1517:3:38217:38241	10145229	3	True				
ANR	10145312	Identifier	SGILOGDATAFMT_16BIT		10145229	0					
ANR	10145313	ExpressionStatement	sp -> tfunc = Luv24fromLuv48	1518:4:38247:38273	10145229	4	True				
ANR	10145314	AssignmentExpression	sp -> tfunc = Luv24fromLuv48		10145229	0		=			
ANR	10145315	PtrMemberAccess	sp -> tfunc		10145229	0					
ANR	10145316	Identifier	sp		10145229	0					
ANR	10145317	Identifier	tfunc		10145229	1					
ANR	10145318	Identifier	Luv24fromLuv48		10145229	1					
ANR	10145319	BreakStatement	break ;	1519:4:38281:38286	10145229	5	True				
ANR	10145320	Label	case SGILOGDATAFMT_RAW :	1520:3:38291:38313	10145229	6	True				
ANR	10145321	Identifier	SGILOGDATAFMT_RAW		10145229	0					
ANR	10145322	BreakStatement	break ;	1521:4:38319:38324	10145229	7	True				
ANR	10145323	Label	default :	1522:3:38329:38336	10145229	8	True				
ANR	10145324	Identifier	default		10145229	0					
ANR	10145325	GotoStatement	goto notsupported ;	1523:4:38342:38359	10145229	9	True				
ANR	10145326	Identifier	notsupported		10145229	0					
ANR	10145327	ElseStatement	else		10145229	0					
ANR	10145328	CompoundStatement		24:9:577:577	10145229	0					
ANR	10145329	ExpressionStatement	tif -> tif_encoderow = LogLuvEncode32	1526:3:38380:38415	10145229	0	True				
ANR	10145330	AssignmentExpression	tif -> tif_encoderow = LogLuvEncode32		10145229	0		=			
ANR	10145331	PtrMemberAccess	tif -> tif_encoderow		10145229	0					
ANR	10145332	Identifier	tif		10145229	0					
ANR	10145333	Identifier	tif_encoderow		10145229	1					
ANR	10145334	Identifier	LogLuvEncode32		10145229	1					
ANR	10145335	SwitchStatement	switch ( sp -> user_datafmt )		10145229	1					
ANR	10145336	Condition	sp -> user_datafmt	1527:11:38430:38445	10145229	0	True				
ANR	10145337	PtrMemberAccess	sp -> user_datafmt		10145229	0					
ANR	10145338	Identifier	sp		10145229	0					
ANR	10145339	Identifier	user_datafmt		10145229	1					
ANR	10145340	CompoundStatement		26:29:650:650	10145229	1					
ANR	10145341	Label	case SGILOGDATAFMT_FLOAT :	1528:3:38453:38477	10145229	0	True				
ANR	10145342	Identifier	SGILOGDATAFMT_FLOAT		10145229	0					
ANR	10145343	ExpressionStatement	sp -> tfunc = Luv32fromXYZ	1529:4:38483:38507	10145229	1	True				
ANR	10145344	AssignmentExpression	sp -> tfunc = Luv32fromXYZ		10145229	0		=			
ANR	10145345	PtrMemberAccess	sp -> tfunc		10145229	0					
ANR	10145346	Identifier	sp		10145229	0					
ANR	10145347	Identifier	tfunc		10145229	1					
ANR	10145348	Identifier	Luv32fromXYZ		10145229	1					
ANR	10145349	BreakStatement	break ;	1530:4:38515:38520	10145229	2	True				
ANR	10145350	Label	case SGILOGDATAFMT_16BIT :	1531:3:38525:38549	10145229	3	True				
ANR	10145351	Identifier	SGILOGDATAFMT_16BIT		10145229	0					
ANR	10145352	ExpressionStatement	sp -> tfunc = Luv32fromLuv48	1532:4:38555:38581	10145229	4	True				
ANR	10145353	AssignmentExpression	sp -> tfunc = Luv32fromLuv48		10145229	0		=			
ANR	10145354	PtrMemberAccess	sp -> tfunc		10145229	0					
ANR	10145355	Identifier	sp		10145229	0					
ANR	10145356	Identifier	tfunc		10145229	1					
ANR	10145357	Identifier	Luv32fromLuv48		10145229	1					
ANR	10145358	BreakStatement	break ;	1533:4:38589:38594	10145229	5	True				
ANR	10145359	Label	case SGILOGDATAFMT_RAW :	1534:3:38599:38621	10145229	6	True				
ANR	10145360	Identifier	SGILOGDATAFMT_RAW		10145229	0					
ANR	10145361	BreakStatement	break ;	1535:4:38627:38632	10145229	7	True				
ANR	10145362	Label	default :	1536:3:38637:38644	10145229	8	True				
ANR	10145363	Identifier	default		10145229	0					
ANR	10145364	GotoStatement	goto notsupported ;	1537:4:38650:38667	10145229	9	True				
ANR	10145365	Identifier	notsupported		10145229	0					
ANR	10145366	BreakStatement	break ;	1540:2:38680:38685	10145229	3	True				
ANR	10145367	Label	case PHOTOMETRIC_LOGL :	1541:1:38688:38709	10145229	4	True				
ANR	10145368	Identifier	PHOTOMETRIC_LOGL		10145229	0					
ANR	10145369	IfStatement	if ( ! LogL16InitState ( tif ) )		10145229	5					
ANR	10145370	Condition	! LogL16InitState ( tif )	1542:6:38717:38737	10145229	0	True				
ANR	10145371	UnaryOperationExpression	! LogL16InitState ( tif )		10145229	0					
ANR	10145372	UnaryOperator	!		10145229	0					
ANR	10145373	CallExpression	LogL16InitState ( tif )		10145229	1					
ANR	10145374	Callee	LogL16InitState		10145229	0					
ANR	10145375	Identifier	LogL16InitState		10145229	0					
ANR	10145376	ArgumentList	tif		10145229	1					
ANR	10145377	Argument	tif		10145229	0					
ANR	10145378	Identifier	tif		10145229	0					
ANR	10145379	BreakStatement	break ;	1543:3:38743:38748	10145229	1	True				
ANR	10145380	ExpressionStatement	tif -> tif_encoderow = LogL16Encode	1544:2:38752:38785	10145229	6	True				
ANR	10145381	AssignmentExpression	tif -> tif_encoderow = LogL16Encode		10145229	0		=			
ANR	10145382	PtrMemberAccess	tif -> tif_encoderow		10145229	0					
ANR	10145383	Identifier	tif		10145229	0					
ANR	10145384	Identifier	tif_encoderow		10145229	1					
ANR	10145385	Identifier	LogL16Encode		10145229	1					
ANR	10145386	SwitchStatement	switch ( sp -> user_datafmt )		10145229	7					
ANR	10145387	Condition	sp -> user_datafmt	1545:10:38799:38814	10145229	0	True				
ANR	10145388	PtrMemberAccess	sp -> user_datafmt		10145229	0					
ANR	10145389	Identifier	sp		10145229	0					
ANR	10145390	Identifier	user_datafmt		10145229	1					
ANR	10145391	CompoundStatement		44:28:1019:1019	10145229	1					
ANR	10145392	Label	case SGILOGDATAFMT_FLOAT :	1546:2:38821:38845	10145229	0	True				
ANR	10145393	Identifier	SGILOGDATAFMT_FLOAT		10145229	0					
ANR	10145394	ExpressionStatement	sp -> tfunc = L16fromY	1547:3:38850:38870	10145229	1	True				
ANR	10145395	AssignmentExpression	sp -> tfunc = L16fromY		10145229	0		=			
ANR	10145396	PtrMemberAccess	sp -> tfunc		10145229	0					
ANR	10145397	Identifier	sp		10145229	0					
ANR	10145398	Identifier	tfunc		10145229	1					
ANR	10145399	Identifier	L16fromY		10145229	1					
ANR	10145400	BreakStatement	break ;	1548:3:38875:38880	10145229	2	True				
ANR	10145401	Label	case SGILOGDATAFMT_16BIT :	1549:2:38884:38908	10145229	3	True				
ANR	10145402	Identifier	SGILOGDATAFMT_16BIT		10145229	0					
ANR	10145403	BreakStatement	break ;	1550:3:38913:38918	10145229	4	True				
ANR	10145404	Label	default :	1551:2:38922:38929	10145229	5	True				
ANR	10145405	Identifier	default		10145229	0					
ANR	10145406	GotoStatement	goto notsupported ;	1552:3:38934:38951	10145229	6	True				
ANR	10145407	Identifier	notsupported		10145229	0					
ANR	10145408	BreakStatement	break ;	1554:2:38959:38964	10145229	8	True				
ANR	10145409	Label	default :	1555:1:38967:38974	10145229	9	True				
ANR	10145410	Identifier	default		10145229	0					
ANR	10145411	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"	1556:2:38978:39158	10145229	10	True				
ANR	10145412	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"		10145229	0					
ANR	10145413	Callee	TIFFErrorExt		10145229	0					
ANR	10145414	Identifier	TIFFErrorExt		10145229	0					
ANR	10145415	ArgumentList	tif -> tif_clientdata		10145229	1					
ANR	10145416	Argument	tif -> tif_clientdata		10145229	0					
ANR	10145417	PtrMemberAccess	tif -> tif_clientdata		10145229	0					
ANR	10145418	Identifier	tif		10145229	0					
ANR	10145419	Identifier	tif_clientdata		10145229	1					
ANR	10145420	Argument	module		10145229	1					
ANR	10145421	Identifier	module		10145229	0					
ANR	10145422	Argument	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		10145229	2					
ANR	10145423	PrimaryExpression	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		10145229	0					
ANR	10145424	Argument	td -> td_photometric		10145229	3					
ANR	10145425	PtrMemberAccess	td -> td_photometric		10145229	0					
ANR	10145426	Identifier	td		10145229	0					
ANR	10145427	Identifier	td_photometric		10145229	1					
ANR	10145428	Argument	"""must be either LogLUV or LogL"""		10145229	4					
ANR	10145429	PrimaryExpression	"""must be either LogLUV or LogL"""		10145229	0					
ANR	10145430	BreakStatement	break ;	1559:2:39162:39167	10145229	11	True				
ANR	10145431	ExpressionStatement	sp -> encoder_state = 1	1561:1:39173:39194	10145229	5	True				
ANR	10145432	AssignmentExpression	sp -> encoder_state = 1		10145229	0		=			
ANR	10145433	PtrMemberAccess	sp -> encoder_state		10145229	0					
ANR	10145434	Identifier	sp		10145229	0					
ANR	10145435	Identifier	encoder_state		10145229	1					
ANR	10145436	PrimaryExpression	1		10145229	1					
ANR	10145437	ReturnStatement	return ( 1 ) ;	1562:1:39197:39207	10145229	6	True				
ANR	10145438	PrimaryExpression	1		10145229	0					
ANR	10145439	Label	notsupported :	1563:0:39209:39221	10145229	7	True				
ANR	10145440	Identifier	notsupported		10145229	0					
ANR	10145441	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression supported only for %s, or raw data"" , td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"" )"	1564:1:39224:39394	10145229	8	True				
ANR	10145442	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression supported only for %s, or raw data"" , td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"" )"		10145229	0					
ANR	10145443	Callee	TIFFErrorExt		10145229	0					
ANR	10145444	Identifier	TIFFErrorExt		10145229	0					
ANR	10145445	ArgumentList	tif -> tif_clientdata		10145229	1					
ANR	10145446	Argument	tif -> tif_clientdata		10145229	0					
ANR	10145447	PtrMemberAccess	tif -> tif_clientdata		10145229	0					
ANR	10145448	Identifier	tif		10145229	0					
ANR	10145449	Identifier	tif_clientdata		10145229	1					
ANR	10145450	Argument	module		10145229	1					
ANR	10145451	Identifier	module		10145229	0					
ANR	10145452	Argument	"""SGILog compression supported only for %s, or raw data"""		10145229	2					
ANR	10145453	PrimaryExpression	"""SGILog compression supported only for %s, or raw data"""		10145229	0					
ANR	10145454	Argument	"td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"""		10145229	3					
ANR	10145455	ConditionalExpression	"td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"""		10145229	0					
ANR	10145456	Condition	td -> td_photometric == PHOTOMETRIC_LOGL		10145229	0					
ANR	10145457	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGL		10145229	0		==			
ANR	10145458	PtrMemberAccess	td -> td_photometric		10145229	0					
ANR	10145459	Identifier	td		10145229	0					
ANR	10145460	Identifier	td_photometric		10145229	1					
ANR	10145461	Identifier	PHOTOMETRIC_LOGL		10145229	1					
ANR	10145462	PrimaryExpression	"""Y, L"""		10145229	1					
ANR	10145463	PrimaryExpression	"""XYZ, Luv"""		10145229	2					
ANR	10145464	ReturnStatement	return ( 0 ) ;	1567:1:39397:39407	10145229	9	True				
ANR	10145465	PrimaryExpression	0		10145229	0					
ANR	10145466	ReturnType	static int		10145229	1					
ANR	10145467	Identifier	LogLuvSetupEncode		10145229	2					
ANR	10145468	ParameterList	TIFF * tif		10145229	3					
ANR	10145469	Parameter	TIFF * tif	1501:18:37786:37794	10145229	0	True				
ANR	10145470	ParameterType	TIFF *		10145229	0					
ANR	10145471	Identifier	tif		10145229	1					
ANR	10145472	CFGEntryNode	ENTRY		10145229		True				
ANR	10145473	CFGExitNode	EXIT		10145229		True				
ANR	10145474	Symbol	* sp		10145229						
ANR	10145475	Symbol	COMPRESSION_SGILOG24		10145229						
ANR	10145476	Symbol	tif -> tif_encoderow		10145229						
ANR	10145477	Symbol	& tif -> tif_dir		10145229						
ANR	10145478	Symbol	td -> td_compression		10145229						
ANR	10145479	Symbol	sp -> user_datafmt		10145229						
ANR	10145480	Symbol	Luv24fromXYZ		10145229						
ANR	10145481	Symbol	sp -> encoder_state		10145229						
ANR	10145482	Symbol	Luv24fromLuv48		10145229						
ANR	10145483	Symbol	Luv32fromXYZ		10145229						
ANR	10145484	Symbol	tif		10145229						
ANR	10145485	Symbol	PHOTOMETRIC_LOGL		10145229						
ANR	10145486	Symbol	LogLuvInitState		10145229						
ANR	10145487	Symbol	sp -> tfunc		10145229						
ANR	10145488	Symbol	sp		10145229						
ANR	10145489	Symbol	EncoderState		10145229						
ANR	10145490	Symbol	LogLuvEncode32		10145229						
ANR	10145491	Symbol	module		10145229						
ANR	10145492	Symbol	LogL16InitState		10145229						
ANR	10145493	Symbol	LogL16Encode		10145229						
ANR	10145494	Symbol	tif -> tif_clientdata		10145229						
ANR	10145495	Symbol	td		10145229						
ANR	10145496	Symbol	* td		10145229						
ANR	10145497	Symbol	LogLuvEncode24		10145229						
ANR	10145498	Symbol	td -> td_photometric		10145229						
ANR	10145499	Symbol	* tif		10145229						
ANR	10145500	Symbol	Luv32fromLuv48		10145229						
ANR	10145501	Symbol	L16fromY		10145229						
ANR	10145502	Function	LogLuvClose	1570:0:39412:40346							
ANR	10145503	FunctionDef	LogLuvClose (TIFF * tif)		10145502	0					
ANR	10145504	CompoundStatement		1572:0:39447:40346	10145502	0					
ANR	10145505	IdentifierDeclStatement	LogLuvState * sp = ( LogLuvState * ) tif -> tif_data ;	1573:8:39457:39503	10145502	0	True				
ANR	10145506	IdentifierDecl	* sp = ( LogLuvState * ) tif -> tif_data		10145502	0					
ANR	10145507	IdentifierDeclType	LogLuvState *		10145502	0					
ANR	10145508	Identifier	sp		10145502	1					
ANR	10145509	AssignmentExpression	* sp = ( LogLuvState * ) tif -> tif_data		10145502	2		=			
ANR	10145510	Identifier	sp		10145502	0					
ANR	10145511	CastExpression	( LogLuvState * ) tif -> tif_data		10145502	1					
ANR	10145512	CastTarget	LogLuvState *		10145502	0					
ANR	10145513	PtrMemberAccess	tif -> tif_data		10145502	1					
ANR	10145514	Identifier	tif		10145502	0					
ANR	10145515	Identifier	tif_data		10145502	1					
ANR	10145516	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1574:1:39506:39539	10145502	1	True				
ANR	10145517	IdentifierDecl	* td = & tif -> tif_dir		10145502	0					
ANR	10145518	IdentifierDeclType	TIFFDirectory *		10145502	0					
ANR	10145519	Identifier	td		10145502	1					
ANR	10145520	AssignmentExpression	* td = & tif -> tif_dir		10145502	2		=			
ANR	10145521	Identifier	td		10145502	0					
ANR	10145522	UnaryOperationExpression	& tif -> tif_dir		10145502	1					
ANR	10145523	UnaryOperator	&		10145502	0					
ANR	10145524	PtrMemberAccess	tif -> tif_dir		10145502	1					
ANR	10145525	Identifier	tif		10145502	0					
ANR	10145526	Identifier	tif_dir		10145502	1					
ANR	10145527	ExpressionStatement	assert ( sp != 0 )	1576:1:39543:39558	10145502	2	True				
ANR	10145528	CallExpression	assert ( sp != 0 )		10145502	0					
ANR	10145529	Callee	assert		10145502	0					
ANR	10145530	Identifier	assert		10145502	0					
ANR	10145531	ArgumentList	sp != 0		10145502	1					
ANR	10145532	Argument	sp != 0		10145502	0					
ANR	10145533	EqualityExpression	sp != 0		10145502	0		!=			
ANR	10145534	Identifier	sp		10145502	0					
ANR	10145535	PrimaryExpression	0		10145502	1					
ANR	10145536	IfStatement	if ( sp -> encoder_state )		10145502	3					
ANR	10145537	Condition	sp -> encoder_state	1585:12:39956:39972	10145502	0	True				
ANR	10145538	PtrMemberAccess	sp -> encoder_state		10145502	0					
ANR	10145539	Identifier	sp		10145502	0					
ANR	10145540	Identifier	encoder_state		10145502	1					
ANR	10145541	CompoundStatement		15:8:536:536	10145502	1					
ANR	10145542	ExpressionStatement	td -> td_samplesperpixel = ( td -> td_photometric == PHOTOMETRIC_LOGL ) ? 1 : 3	1589:12:40154:40243	10145502	0	True				
ANR	10145543	AssignmentExpression	td -> td_samplesperpixel = ( td -> td_photometric == PHOTOMETRIC_LOGL ) ? 1 : 3		10145502	0		=			
ANR	10145544	PtrMemberAccess	td -> td_samplesperpixel		10145502	0					
ANR	10145545	Identifier	td		10145502	0					
ANR	10145546	Identifier	td_samplesperpixel		10145502	1					
ANR	10145547	ConditionalExpression	( td -> td_photometric == PHOTOMETRIC_LOGL ) ? 1 : 3		10145502	1					
ANR	10145548	Condition	td -> td_photometric == PHOTOMETRIC_LOGL		10145502	0					
ANR	10145549	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGL		10145502	0		==			
ANR	10145550	PtrMemberAccess	td -> td_photometric		10145502	0					
ANR	10145551	Identifier	td		10145502	0					
ANR	10145552	Identifier	td_photometric		10145502	1					
ANR	10145553	Identifier	PHOTOMETRIC_LOGL		10145502	1					
ANR	10145554	PrimaryExpression	1		10145502	1					
ANR	10145555	PrimaryExpression	3		10145502	2					
ANR	10145556	ExpressionStatement	td -> td_bitspersample = 16	1591:12:40257:40282	10145502	1	True				
ANR	10145557	AssignmentExpression	td -> td_bitspersample = 16		10145502	0		=			
ANR	10145558	PtrMemberAccess	td -> td_bitspersample		10145502	0					
ANR	10145559	Identifier	td		10145502	0					
ANR	10145560	Identifier	td_bitspersample		10145502	1					
ANR	10145561	PrimaryExpression	16		10145502	1					
ANR	10145562	ExpressionStatement	td -> td_sampleformat = SAMPLEFORMAT_INT	1592:12:40296:40334	10145502	2	True				
ANR	10145563	AssignmentExpression	td -> td_sampleformat = SAMPLEFORMAT_INT		10145502	0		=			
ANR	10145564	PtrMemberAccess	td -> td_sampleformat		10145502	0					
ANR	10145565	Identifier	td		10145502	0					
ANR	10145566	Identifier	td_sampleformat		10145502	1					
ANR	10145567	Identifier	SAMPLEFORMAT_INT		10145502	1					
ANR	10145568	ReturnType	static void		10145502	1					
ANR	10145569	Identifier	LogLuvClose		10145502	2					
ANR	10145570	ParameterList	TIFF * tif		10145502	3					
ANR	10145571	Parameter	TIFF * tif	1571:12:39436:39444	10145502	0	True				
ANR	10145572	ParameterType	TIFF *		10145502	0					
ANR	10145573	Identifier	tif		10145502	1					
ANR	10145574	CFGEntryNode	ENTRY		10145502		True				
ANR	10145575	CFGExitNode	EXIT		10145502		True				
ANR	10145576	Symbol	* sp		10145502						
ANR	10145577	Symbol	& tif -> tif_dir		10145502						
ANR	10145578	Symbol	SAMPLEFORMAT_INT		10145502						
ANR	10145579	Symbol	sp -> encoder_state		10145502						
ANR	10145580	Symbol	tif		10145502						
ANR	10145581	Symbol	td		10145502						
ANR	10145582	Symbol	td -> td_samplesperpixel		10145502						
ANR	10145583	Symbol	* td		10145502						
ANR	10145584	Symbol	PHOTOMETRIC_LOGL		10145502						
ANR	10145585	Symbol	td -> td_sampleformat		10145502						
ANR	10145586	Symbol	* tif		10145502						
ANR	10145587	Symbol	td -> td_photometric		10145502						
ANR	10145588	Symbol	sp		10145502						
ANR	10145589	Symbol	td -> td_bitspersample		10145502						
ANR	10145590	Symbol	tif -> tif_data		10145502						
ANR	10145591	Function	LogLuvCleanup	1596:0:40349:40673							
ANR	10145592	FunctionDef	LogLuvCleanup (TIFF * tif)		10145591	0					
ANR	10145593	CompoundStatement		1598:0:40386:40673	10145591	0					
ANR	10145594	IdentifierDeclStatement	LogLuvState * sp = ( LogLuvState * ) tif -> tif_data ;	1599:1:40389:40435	10145591	0	True				
ANR	10145595	IdentifierDecl	* sp = ( LogLuvState * ) tif -> tif_data		10145591	0					
ANR	10145596	IdentifierDeclType	LogLuvState *		10145591	0					
ANR	10145597	Identifier	sp		10145591	1					
ANR	10145598	AssignmentExpression	* sp = ( LogLuvState * ) tif -> tif_data		10145591	2		=			
ANR	10145599	Identifier	sp		10145591	0					
ANR	10145600	CastExpression	( LogLuvState * ) tif -> tif_data		10145591	1					
ANR	10145601	CastTarget	LogLuvState *		10145591	0					
ANR	10145602	PtrMemberAccess	tif -> tif_data		10145591	1					
ANR	10145603	Identifier	tif		10145591	0					
ANR	10145604	Identifier	tif_data		10145591	1					
ANR	10145605	ExpressionStatement	assert ( sp != 0 )	1601:1:40439:40454	10145591	1	True				
ANR	10145606	CallExpression	assert ( sp != 0 )		10145591	0					
ANR	10145607	Callee	assert		10145591	0					
ANR	10145608	Identifier	assert		10145591	0					
ANR	10145609	ArgumentList	sp != 0		10145591	1					
ANR	10145610	Argument	sp != 0		10145591	0					
ANR	10145611	EqualityExpression	sp != 0		10145591	0		!=			
ANR	10145612	Identifier	sp		10145591	0					
ANR	10145613	PrimaryExpression	0		10145591	1					
ANR	10145614	ExpressionStatement	tif -> tif_tagmethods . vgetfield = sp -> vgetparent	1603:1:40458:40504	10145591	2	True				
ANR	10145615	AssignmentExpression	tif -> tif_tagmethods . vgetfield = sp -> vgetparent		10145591	0		=			
ANR	10145616	MemberAccess	tif -> tif_tagmethods . vgetfield		10145591	0					
ANR	10145617	PtrMemberAccess	tif -> tif_tagmethods		10145591	0					
ANR	10145618	Identifier	tif		10145591	0					
ANR	10145619	Identifier	tif_tagmethods		10145591	1					
ANR	10145620	Identifier	vgetfield		10145591	1					
ANR	10145621	PtrMemberAccess	sp -> vgetparent		10145591	1					
ANR	10145622	Identifier	sp		10145591	0					
ANR	10145623	Identifier	vgetparent		10145591	1					
ANR	10145624	ExpressionStatement	tif -> tif_tagmethods . vsetfield = sp -> vsetparent	1604:1:40507:40553	10145591	3	True				
ANR	10145625	AssignmentExpression	tif -> tif_tagmethods . vsetfield = sp -> vsetparent		10145591	0		=			
ANR	10145626	MemberAccess	tif -> tif_tagmethods . vsetfield		10145591	0					
ANR	10145627	PtrMemberAccess	tif -> tif_tagmethods		10145591	0					
ANR	10145628	Identifier	tif		10145591	0					
ANR	10145629	Identifier	tif_tagmethods		10145591	1					
ANR	10145630	Identifier	vsetfield		10145591	1					
ANR	10145631	PtrMemberAccess	sp -> vsetparent		10145591	1					
ANR	10145632	Identifier	sp		10145591	0					
ANR	10145633	Identifier	vsetparent		10145591	1					
ANR	10145634	IfStatement	if ( sp -> tbuf )		10145591	4					
ANR	10145635	Condition	sp -> tbuf	1606:5:40561:40568	10145591	0	True				
ANR	10145636	PtrMemberAccess	sp -> tbuf		10145591	0					
ANR	10145637	Identifier	sp		10145591	0					
ANR	10145638	Identifier	tbuf		10145591	1					
ANR	10145639	ExpressionStatement	_TIFFfree ( sp -> tbuf )	1607:2:40573:40592	10145591	1	True				
ANR	10145640	CallExpression	_TIFFfree ( sp -> tbuf )		10145591	0					
ANR	10145641	Callee	_TIFFfree		10145591	0					
ANR	10145642	Identifier	_TIFFfree		10145591	0					
ANR	10145643	ArgumentList	sp -> tbuf		10145591	1					
ANR	10145644	Argument	sp -> tbuf		10145591	0					
ANR	10145645	PtrMemberAccess	sp -> tbuf		10145591	0					
ANR	10145646	Identifier	sp		10145591	0					
ANR	10145647	Identifier	tbuf		10145591	1					
ANR	10145648	ExpressionStatement	_TIFFfree ( sp )	1608:1:40595:40608	10145591	5	True				
ANR	10145649	CallExpression	_TIFFfree ( sp )		10145591	0					
ANR	10145650	Callee	_TIFFfree		10145591	0					
ANR	10145651	Identifier	_TIFFfree		10145591	0					
ANR	10145652	ArgumentList	sp		10145591	1					
ANR	10145653	Argument	sp		10145591	0					
ANR	10145654	Identifier	sp		10145591	0					
ANR	10145655	ExpressionStatement	tif -> tif_data = NULL	1609:1:40611:40631	10145591	6	True				
ANR	10145656	AssignmentExpression	tif -> tif_data = NULL		10145591	0		=			
ANR	10145657	PtrMemberAccess	tif -> tif_data		10145591	0					
ANR	10145658	Identifier	tif		10145591	0					
ANR	10145659	Identifier	tif_data		10145591	1					
ANR	10145660	Identifier	NULL		10145591	1					
ANR	10145661	ExpressionStatement	_TIFFSetDefaultCompressionState ( tif )	1611:1:40635:40671	10145591	7	True				
ANR	10145662	CallExpression	_TIFFSetDefaultCompressionState ( tif )		10145591	0					
ANR	10145663	Callee	_TIFFSetDefaultCompressionState		10145591	0					
ANR	10145664	Identifier	_TIFFSetDefaultCompressionState		10145591	0					
ANR	10145665	ArgumentList	tif		10145591	1					
ANR	10145666	Argument	tif		10145591	0					
ANR	10145667	Identifier	tif		10145591	0					
ANR	10145668	ReturnType	static void		10145591	1					
ANR	10145669	Identifier	LogLuvCleanup		10145591	2					
ANR	10145670	ParameterList	TIFF * tif		10145591	3					
ANR	10145671	Parameter	TIFF * tif	1597:14:40375:40383	10145591	0	True				
ANR	10145672	ParameterType	TIFF *		10145591	0					
ANR	10145673	Identifier	tif		10145591	1					
ANR	10145674	CFGEntryNode	ENTRY		10145591		True				
ANR	10145675	CFGExitNode	EXIT		10145591		True				
ANR	10145676	Symbol	tif		10145591						
ANR	10145677	Symbol	* sp		10145591						
ANR	10145678	Symbol	tif -> tif_tagmethods . vsetfield		10145591						
ANR	10145679	Symbol	NULL		10145591						
ANR	10145680	Symbol	tif -> tif_tagmethods		10145591						
ANR	10145681	Symbol	sp -> tbuf		10145591						
ANR	10145682	Symbol	tif -> tif_tagmethods . vgetfield		10145591						
ANR	10145683	Symbol	* tif		10145591						
ANR	10145684	Symbol	sp -> vgetparent		10145591						
ANR	10145685	Symbol	sp		10145591						
ANR	10145686	Symbol	sp -> vsetparent		10145591						
ANR	10145687	Symbol	tif -> tif_data		10145591						
ANR	10145688	Function	LogLuvVSetField	1614:0:40676:42415							
ANR	10145689	FunctionDef	"LogLuvVSetField (TIFF * tif , uint32 tag , va_list ap)"		10145688	0					
ANR	10145690	CompoundStatement		1616:0:40738:42415	10145688	0					
ANR	10145691	Statement	static	1617:1:40741:40746	10145688	0	True				
ANR	10145692	IdentifierDeclStatement	"const char module [ ] = ""LogLuvVSetField"" ;"	1617:8:40748:40787	10145688	1	True				
ANR	10145693	IdentifierDecl	"module [ ] = ""LogLuvVSetField"""		10145688	0					
ANR	10145694	IdentifierDeclType	const char [ ]		10145688	0					
ANR	10145695	Identifier	module		10145688	1					
ANR	10145696	AssignmentExpression	"module [ ] = ""LogLuvVSetField"""		10145688	2		=			
ANR	10145697	Identifier	module		10145688	0					
ANR	10145698	PrimaryExpression	"""LogLuvVSetField"""		10145688	1					
ANR	10145699	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1618:1:40790:40825	10145688	2	True				
ANR	10145700	IdentifierDecl	* sp = DecoderState ( tif )		10145688	0					
ANR	10145701	IdentifierDeclType	LogLuvState *		10145688	0					
ANR	10145702	Identifier	sp		10145688	1					
ANR	10145703	AssignmentExpression	* sp = DecoderState ( tif )		10145688	2		=			
ANR	10145704	Identifier	sp		10145688	0					
ANR	10145705	CallExpression	DecoderState ( tif )		10145688	1					
ANR	10145706	Callee	DecoderState		10145688	0					
ANR	10145707	Identifier	DecoderState		10145688	0					
ANR	10145708	ArgumentList	tif		10145688	1					
ANR	10145709	Argument	tif		10145688	0					
ANR	10145710	Identifier	tif		10145688	0					
ANR	10145711	IdentifierDeclStatement	"int bps , fmt ;"	1619:1:40828:40840	10145688	3	True				
ANR	10145712	IdentifierDecl	bps		10145688	0					
ANR	10145713	IdentifierDeclType	int		10145688	0					
ANR	10145714	Identifier	bps		10145688	1					
ANR	10145715	IdentifierDecl	fmt		10145688	1					
ANR	10145716	IdentifierDeclType	int		10145688	0					
ANR	10145717	Identifier	fmt		10145688	1					
ANR	10145718	SwitchStatement	switch ( tag )		10145688	4					
ANR	10145719	Condition	tag	1621:9:40852:40854	10145688	0	True				
ANR	10145720	Identifier	tag		10145688	0					
ANR	10145721	CompoundStatement		6:14:118:118	10145688	1					
ANR	10145722	Label	case TIFFTAG_SGILOGDATAFMT :	1622:1:40860:40886	10145688	0	True				
ANR	10145723	Identifier	TIFFTAG_SGILOGDATAFMT		10145688	0					
ANR	10145724	ExpressionStatement	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"	1623:2:40890:40930	10145688	1	True				
ANR	10145725	AssignmentExpression	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"		10145688	0		=			
ANR	10145726	PtrMemberAccess	sp -> user_datafmt		10145688	0					
ANR	10145727	Identifier	sp		10145688	0					
ANR	10145728	Identifier	user_datafmt		10145688	1					
ANR	10145729	CastExpression	"( int ) va_arg ( ap , int )"		10145688	1					
ANR	10145730	CastTarget	int		10145688	0					
ANR	10145731	CallExpression	"va_arg ( ap , int )"		10145688	1					
ANR	10145732	Callee	va_arg		10145688	0					
ANR	10145733	Identifier	va_arg		10145688	0					
ANR	10145734	ArgumentList	ap		10145688	1					
ANR	10145735	Argument	ap		10145688	0					
ANR	10145736	Identifier	ap		10145688	0					
ANR	10145737	Argument	int		10145688	1					
ANR	10145738	Identifier	int		10145688	0					
ANR	10145739	SwitchStatement	switch ( sp -> user_datafmt )		10145688	2					
ANR	10145740	Condition	sp -> user_datafmt	1630:10:41187:41202	10145688	0	True				
ANR	10145741	PtrMemberAccess	sp -> user_datafmt		10145688	0					
ANR	10145742	Identifier	sp		10145688	0					
ANR	10145743	Identifier	user_datafmt		10145688	1					
ANR	10145744	CompoundStatement		15:28:466:466	10145688	1					
ANR	10145745	Label	case SGILOGDATAFMT_FLOAT :	1631:2:41209:41233	10145688	0	True				
ANR	10145746	Identifier	SGILOGDATAFMT_FLOAT		10145688	0					
ANR	10145747	ExpressionStatement	bps = 32	1632:3:41238:41246	10145688	1	True				
ANR	10145748	AssignmentExpression	bps = 32		10145688	0		=			
ANR	10145749	Identifier	bps		10145688	0					
ANR	10145750	PrimaryExpression	32		10145688	1					
ANR	10145751	ExpressionStatement	fmt = SAMPLEFORMAT_IEEEFP	1633:3:41251:41276	10145688	2	True				
ANR	10145752	AssignmentExpression	fmt = SAMPLEFORMAT_IEEEFP		10145688	0		=			
ANR	10145753	Identifier	fmt		10145688	0					
ANR	10145754	Identifier	SAMPLEFORMAT_IEEEFP		10145688	1					
ANR	10145755	BreakStatement	break ;	1634:3:41281:41286	10145688	3	True				
ANR	10145756	Label	case SGILOGDATAFMT_16BIT :	1635:2:41290:41314	10145688	4	True				
ANR	10145757	Identifier	SGILOGDATAFMT_16BIT		10145688	0					
ANR	10145758	ExpressionStatement	bps = 16	1636:3:41319:41327	10145688	5	True				
ANR	10145759	AssignmentExpression	bps = 16		10145688	0		=			
ANR	10145760	Identifier	bps		10145688	0					
ANR	10145761	PrimaryExpression	16		10145688	1					
ANR	10145762	ExpressionStatement	fmt = SAMPLEFORMAT_INT	1637:3:41332:41354	10145688	6	True				
ANR	10145763	AssignmentExpression	fmt = SAMPLEFORMAT_INT		10145688	0		=			
ANR	10145764	Identifier	fmt		10145688	0					
ANR	10145765	Identifier	SAMPLEFORMAT_INT		10145688	1					
ANR	10145766	BreakStatement	break ;	1638:3:41359:41364	10145688	7	True				
ANR	10145767	Label	case SGILOGDATAFMT_RAW :	1639:2:41368:41390	10145688	8	True				
ANR	10145768	Identifier	SGILOGDATAFMT_RAW		10145688	0					
ANR	10145769	ExpressionStatement	bps = 32	1640:3:41395:41403	10145688	9	True				
ANR	10145770	AssignmentExpression	bps = 32		10145688	0		=			
ANR	10145771	Identifier	bps		10145688	0					
ANR	10145772	PrimaryExpression	32		10145688	1					
ANR	10145773	ExpressionStatement	fmt = SAMPLEFORMAT_UINT	1641:3:41408:41431	10145688	10	True				
ANR	10145774	AssignmentExpression	fmt = SAMPLEFORMAT_UINT		10145688	0		=			
ANR	10145775	Identifier	fmt		10145688	0					
ANR	10145776	Identifier	SAMPLEFORMAT_UINT		10145688	1					
ANR	10145777	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , 1 )"	1642:3:41436:41481	10145688	11	True				
ANR	10145778	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , 1 )"		10145688	0					
ANR	10145779	Callee	TIFFSetField		10145688	0					
ANR	10145780	Identifier	TIFFSetField		10145688	0					
ANR	10145781	ArgumentList	tif		10145688	1					
ANR	10145782	Argument	tif		10145688	0					
ANR	10145783	Identifier	tif		10145688	0					
ANR	10145784	Argument	TIFFTAG_SAMPLESPERPIXEL		10145688	1					
ANR	10145785	Identifier	TIFFTAG_SAMPLESPERPIXEL		10145688	0					
ANR	10145786	Argument	1		10145688	2					
ANR	10145787	PrimaryExpression	1		10145688	0					
ANR	10145788	BreakStatement	break ;	1643:3:41486:41491	10145688	12	True				
ANR	10145789	Label	case SGILOGDATAFMT_8BIT :	1644:2:41495:41518	10145688	13	True				
ANR	10145790	Identifier	SGILOGDATAFMT_8BIT		10145688	0					
ANR	10145791	ExpressionStatement	bps = 8	1645:3:41523:41530	10145688	14	True				
ANR	10145792	AssignmentExpression	bps = 8		10145688	0		=			
ANR	10145793	Identifier	bps		10145688	0					
ANR	10145794	PrimaryExpression	8		10145688	1					
ANR	10145795	ExpressionStatement	fmt = SAMPLEFORMAT_UINT	1646:3:41535:41558	10145688	15	True				
ANR	10145796	AssignmentExpression	fmt = SAMPLEFORMAT_UINT		10145688	0		=			
ANR	10145797	Identifier	fmt		10145688	0					
ANR	10145798	Identifier	SAMPLEFORMAT_UINT		10145688	1					
ANR	10145799	BreakStatement	break ;	1647:3:41563:41568	10145688	16	True				
ANR	10145800	Label	default :	1648:2:41572:41579	10145688	17	True				
ANR	10145801	Identifier	default		10145688	0					
ANR	10145802	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""Unknown data format %d for LogLuv compression"" , sp -> user_datafmt )"	1649:3:41584:41713	10145688	18	True				
ANR	10145803	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""Unknown data format %d for LogLuv compression"" , sp -> user_datafmt )"		10145688	0					
ANR	10145804	Callee	TIFFErrorExt		10145688	0					
ANR	10145805	Identifier	TIFFErrorExt		10145688	0					
ANR	10145806	ArgumentList	tif -> tif_clientdata		10145688	1					
ANR	10145807	Argument	tif -> tif_clientdata		10145688	0					
ANR	10145808	PtrMemberAccess	tif -> tif_clientdata		10145688	0					
ANR	10145809	Identifier	tif		10145688	0					
ANR	10145810	Identifier	tif_clientdata		10145688	1					
ANR	10145811	Argument	tif -> tif_name		10145688	1					
ANR	10145812	PtrMemberAccess	tif -> tif_name		10145688	0					
ANR	10145813	Identifier	tif		10145688	0					
ANR	10145814	Identifier	tif_name		10145688	1					
ANR	10145815	Argument	"""Unknown data format %d for LogLuv compression"""		10145688	2					
ANR	10145816	PrimaryExpression	"""Unknown data format %d for LogLuv compression"""		10145688	0					
ANR	10145817	Argument	sp -> user_datafmt		10145688	3					
ANR	10145818	PtrMemberAccess	sp -> user_datafmt		10145688	0					
ANR	10145819	Identifier	sp		10145688	0					
ANR	10145820	Identifier	user_datafmt		10145688	1					
ANR	10145821	ReturnStatement	return ( 0 ) ;	1652:3:41718:41728	10145688	19	True				
ANR	10145822	PrimaryExpression	0		10145688	0					
ANR	10145823	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )"	1654:2:41736:41781	10145688	3	True				
ANR	10145824	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )"		10145688	0					
ANR	10145825	Callee	TIFFSetField		10145688	0					
ANR	10145826	Identifier	TIFFSetField		10145688	0					
ANR	10145827	ArgumentList	tif		10145688	1					
ANR	10145828	Argument	tif		10145688	0					
ANR	10145829	Identifier	tif		10145688	0					
ANR	10145830	Argument	TIFFTAG_BITSPERSAMPLE		10145688	1					
ANR	10145831	Identifier	TIFFTAG_BITSPERSAMPLE		10145688	0					
ANR	10145832	Argument	bps		10145688	2					
ANR	10145833	Identifier	bps		10145688	0					
ANR	10145834	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , fmt )"	1655:2:41785:41829	10145688	4	True				
ANR	10145835	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , fmt )"		10145688	0					
ANR	10145836	Callee	TIFFSetField		10145688	0					
ANR	10145837	Identifier	TIFFSetField		10145688	0					
ANR	10145838	ArgumentList	tif		10145688	1					
ANR	10145839	Argument	tif		10145688	0					
ANR	10145840	Identifier	tif		10145688	0					
ANR	10145841	Argument	TIFFTAG_SAMPLEFORMAT		10145688	1					
ANR	10145842	Identifier	TIFFTAG_SAMPLEFORMAT		10145688	0					
ANR	10145843	Argument	fmt		10145688	2					
ANR	10145844	Identifier	fmt		10145688	0					
ANR	10145845	ExpressionStatement	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) - 1	1659:2:41899:41967	10145688	5	True				
ANR	10145846	AssignmentExpression	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) - 1		10145688	0		=			
ANR	10145847	PtrMemberAccess	tif -> tif_tilesize		10145688	0					
ANR	10145848	Identifier	tif		10145688	0					
ANR	10145849	Identifier	tif_tilesize		10145688	1					
ANR	10145850	ConditionalExpression	isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) - 1		10145688	1					
ANR	10145851	Condition	isTiled ( tif )		10145688	0					
ANR	10145852	CallExpression	isTiled ( tif )		10145688	0					
ANR	10145853	Callee	isTiled		10145688	0					
ANR	10145854	Identifier	isTiled		10145688	0					
ANR	10145855	ArgumentList	tif		10145688	1					
ANR	10145856	Argument	tif		10145688	0					
ANR	10145857	Identifier	tif		10145688	0					
ANR	10145858	CallExpression	TIFFTileSize ( tif )		10145688	1					
ANR	10145859	Callee	TIFFTileSize		10145688	0					
ANR	10145860	Identifier	TIFFTileSize		10145688	0					
ANR	10145861	ArgumentList	tif		10145688	1					
ANR	10145862	Argument	tif		10145688	0					
ANR	10145863	Identifier	tif		10145688	0					
ANR	10145864	CastExpression	( tmsize_t ) - 1		10145688	2					
ANR	10145865	CastTarget	tmsize_t		10145688	0					
ANR	10145866	UnaryOperationExpression	- 1		10145688	1					
ANR	10145867	UnaryOperator	-		10145688	0					
ANR	10145868	PrimaryExpression	1		10145688	1					
ANR	10145869	ExpressionStatement	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )	1660:2:41971:42016	10145688	6	True				
ANR	10145870	AssignmentExpression	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )		10145688	0		=			
ANR	10145871	PtrMemberAccess	tif -> tif_scanlinesize		10145688	0					
ANR	10145872	Identifier	tif		10145688	0					
ANR	10145873	Identifier	tif_scanlinesize		10145688	1					
ANR	10145874	CallExpression	TIFFScanlineSize ( tif )		10145688	1					
ANR	10145875	Callee	TIFFScanlineSize		10145688	0					
ANR	10145876	Identifier	TIFFScanlineSize		10145688	0					
ANR	10145877	ArgumentList	tif		10145688	1					
ANR	10145878	Argument	tif		10145688	0					
ANR	10145879	Identifier	tif		10145688	0					
ANR	10145880	ReturnStatement	return ( 1 ) ;	1661:2:42020:42030	10145688	7	True				
ANR	10145881	PrimaryExpression	1		10145688	0					
ANR	10145882	Label	case TIFFTAG_SGILOGENCODE :	1662:1:42033:42058	10145688	8	True				
ANR	10145883	Identifier	TIFFTAG_SGILOGENCODE		10145688	0					
ANR	10145884	ExpressionStatement	"sp -> encode_meth = ( int ) va_arg ( ap , int )"	1663:2:42062:42101	10145688	9	True				
ANR	10145885	AssignmentExpression	"sp -> encode_meth = ( int ) va_arg ( ap , int )"		10145688	0		=			
ANR	10145886	PtrMemberAccess	sp -> encode_meth		10145688	0					
ANR	10145887	Identifier	sp		10145688	0					
ANR	10145888	Identifier	encode_meth		10145688	1					
ANR	10145889	CastExpression	"( int ) va_arg ( ap , int )"		10145688	1					
ANR	10145890	CastTarget	int		10145688	0					
ANR	10145891	CallExpression	"va_arg ( ap , int )"		10145688	1					
ANR	10145892	Callee	va_arg		10145688	0					
ANR	10145893	Identifier	va_arg		10145688	0					
ANR	10145894	ArgumentList	ap		10145688	1					
ANR	10145895	Argument	ap		10145688	0					
ANR	10145896	Identifier	ap		10145688	0					
ANR	10145897	Argument	int		10145688	1					
ANR	10145898	Identifier	int		10145688	0					
ANR	10145899	IfStatement	if ( sp -> encode_meth != SGILOGENCODE_NODITHER && sp -> encode_meth != SGILOGENCODE_RANDITHER )		10145688	10					
ANR	10145900	Condition	sp -> encode_meth != SGILOGENCODE_NODITHER && sp -> encode_meth != SGILOGENCODE_RANDITHER	1664:6:42109:42199	10145688	0	True				
ANR	10145901	AndExpression	sp -> encode_meth != SGILOGENCODE_NODITHER && sp -> encode_meth != SGILOGENCODE_RANDITHER		10145688	0		&&			
ANR	10145902	EqualityExpression	sp -> encode_meth != SGILOGENCODE_NODITHER		10145688	0		!=			
ANR	10145903	PtrMemberAccess	sp -> encode_meth		10145688	0					
ANR	10145904	Identifier	sp		10145688	0					
ANR	10145905	Identifier	encode_meth		10145688	1					
ANR	10145906	Identifier	SGILOGENCODE_NODITHER		10145688	1					
ANR	10145907	EqualityExpression	sp -> encode_meth != SGILOGENCODE_RANDITHER		10145688	1		!=			
ANR	10145908	PtrMemberAccess	sp -> encode_meth		10145688	0					
ANR	10145909	Identifier	sp		10145688	0					
ANR	10145910	Identifier	encode_meth		10145688	1					
ANR	10145911	Identifier	SGILOGENCODE_RANDITHER		10145688	1					
ANR	10145912	CompoundStatement		50:49:1463:1463	10145688	1					
ANR	10145913	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unknown encoding %d for LogLuv compression"" , sp -> encode_meth )"	1666:3:42207:42325	10145688	0	True				
ANR	10145914	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unknown encoding %d for LogLuv compression"" , sp -> encode_meth )"		10145688	0					
ANR	10145915	Callee	TIFFErrorExt		10145688	0					
ANR	10145916	Identifier	TIFFErrorExt		10145688	0					
ANR	10145917	ArgumentList	tif -> tif_clientdata		10145688	1					
ANR	10145918	Argument	tif -> tif_clientdata		10145688	0					
ANR	10145919	PtrMemberAccess	tif -> tif_clientdata		10145688	0					
ANR	10145920	Identifier	tif		10145688	0					
ANR	10145921	Identifier	tif_clientdata		10145688	1					
ANR	10145922	Argument	module		10145688	1					
ANR	10145923	Identifier	module		10145688	0					
ANR	10145924	Argument	"""Unknown encoding %d for LogLuv compression"""		10145688	2					
ANR	10145925	PrimaryExpression	"""Unknown encoding %d for LogLuv compression"""		10145688	0					
ANR	10145926	Argument	sp -> encode_meth		10145688	3					
ANR	10145927	PtrMemberAccess	sp -> encode_meth		10145688	0					
ANR	10145928	Identifier	sp		10145688	0					
ANR	10145929	Identifier	encode_meth		10145688	1					
ANR	10145930	ReturnStatement	return ( 0 ) ;	1669:3:42330:42340	10145688	1	True				
ANR	10145931	PrimaryExpression	0		10145688	0					
ANR	10145932	ReturnStatement	return ( 1 ) ;	1671:2:42348:42358	10145688	11	True				
ANR	10145933	PrimaryExpression	1		10145688	0					
ANR	10145934	Label	default :	1672:1:42361:42368	10145688	12	True				
ANR	10145935	Identifier	default		10145688	0					
ANR	10145936	ReturnStatement	"return ( * sp -> vsetparent ) ( tif , tag , ap ) ;"	1673:2:42372:42410	10145688	13	True				
ANR	10145937	CallExpression	"( * sp -> vsetparent ) ( tif , tag , ap )"		10145688	0					
ANR	10145938	Callee	* sp -> vsetparent		10145688	0					
ANR	10145939	UnaryOperationExpression	* sp -> vsetparent		10145688	0					
ANR	10145940	UnaryOperator	*		10145688	0					
ANR	10145941	PtrMemberAccess	sp -> vsetparent		10145688	1					
ANR	10145942	Identifier	sp		10145688	0					
ANR	10145943	Identifier	vsetparent		10145688	1					
ANR	10145944	ArgumentList	tif		10145688	1					
ANR	10145945	Argument	tif		10145688	0					
ANR	10145946	Identifier	tif		10145688	0					
ANR	10145947	Argument	tag		10145688	1					
ANR	10145948	Identifier	tag		10145688	0					
ANR	10145949	Argument	ap		10145688	2					
ANR	10145950	Identifier	ap		10145688	0					
ANR	10145951	ReturnType	static int		10145688	1					
ANR	10145952	Identifier	LogLuvVSetField		10145688	2					
ANR	10145953	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		10145688	3					
ANR	10145954	Parameter	TIFF * tif	1615:16:40703:40711	10145688	0	True				
ANR	10145955	ParameterType	TIFF *		10145688	0					
ANR	10145956	Identifier	tif		10145688	1					
ANR	10145957	Parameter	uint32 tag	1615:27:40714:40723	10145688	1	True				
ANR	10145958	ParameterType	uint32		10145688	0					
ANR	10145959	Identifier	tag		10145688	1					
ANR	10145960	Parameter	va_list ap	1615:39:40726:40735	10145688	2	True				
ANR	10145961	ParameterType	va_list		10145688	0					
ANR	10145962	Identifier	ap		10145688	1					
ANR	10145963	CFGEntryNode	ENTRY		10145688		True				
ANR	10145964	CFGExitNode	EXIT		10145688		True				
ANR	10145965	Symbol	* sp		10145688						
ANR	10145966	Symbol	SAMPLEFORMAT_UINT		10145688						
ANR	10145967	Symbol	TIFFTAG_SAMPLEFORMAT		10145688						
ANR	10145968	Symbol	tif -> tif_tilesize		10145688						
ANR	10145969	Symbol	sp -> user_datafmt		10145688						
ANR	10145970	Symbol	TIFFTAG_SAMPLESPERPIXEL		10145688						
ANR	10145971	Symbol	* * sp		10145688						
ANR	10145972	Symbol	fmt		10145688						
ANR	10145973	Symbol	tif		10145688						
ANR	10145974	Symbol	isTiled		10145688						
ANR	10145975	Symbol	DecoderState		10145688						
ANR	10145976	Symbol	tif -> tif_scanlinesize		10145688						
ANR	10145977	Symbol	SGILOGENCODE_RANDITHER		10145688						
ANR	10145978	Symbol	tag		10145688						
ANR	10145979	Symbol	sp -> encode_meth		10145688						
ANR	10145980	Symbol	sp		10145688						
ANR	10145981	Symbol	va_arg		10145688						
ANR	10145982	Symbol	SGILOGENCODE_NODITHER		10145688						
ANR	10145983	Symbol	TIFFScanlineSize		10145688						
ANR	10145984	Symbol	* sp -> vsetparent		10145688						
ANR	10145985	Symbol	bps		10145688						
ANR	10145986	Symbol	SAMPLEFORMAT_INT		10145688						
ANR	10145987	Symbol	module		10145688						
ANR	10145988	Symbol	SAMPLEFORMAT_IEEEFP		10145688						
ANR	10145989	Symbol	sp -> vsetparent		10145688						
ANR	10145990	Symbol	int		10145688						
ANR	10145991	Symbol	ap		10145688						
ANR	10145992	Symbol	tif -> tif_clientdata		10145688						
ANR	10145993	Symbol	TIFFTAG_BITSPERSAMPLE		10145688						
ANR	10145994	Symbol	tif -> tif_name		10145688						
ANR	10145995	Symbol	* tif		10145688						
ANR	10145996	Symbol	TIFFTileSize		10145688						
ANR	10145997	Function	LogLuvVGetField	1677:0:42418:42686							
ANR	10145998	FunctionDef	"LogLuvVGetField (TIFF * tif , uint32 tag , va_list ap)"		10145997	0					
ANR	10145999	CompoundStatement		1679:0:42480:42686	10145997	0					
ANR	10146000	IdentifierDeclStatement	LogLuvState * sp = ( LogLuvState * ) tif -> tif_data ;	1680:1:42483:42529	10145997	0	True				
ANR	10146001	IdentifierDecl	* sp = ( LogLuvState * ) tif -> tif_data		10145997	0					
ANR	10146002	IdentifierDeclType	LogLuvState *		10145997	0					
ANR	10146003	Identifier	sp		10145997	1					
ANR	10146004	AssignmentExpression	* sp = ( LogLuvState * ) tif -> tif_data		10145997	2		=			
ANR	10146005	Identifier	sp		10145997	0					
ANR	10146006	CastExpression	( LogLuvState * ) tif -> tif_data		10145997	1					
ANR	10146007	CastTarget	LogLuvState *		10145997	0					
ANR	10146008	PtrMemberAccess	tif -> tif_data		10145997	1					
ANR	10146009	Identifier	tif		10145997	0					
ANR	10146010	Identifier	tif_data		10145997	1					
ANR	10146011	SwitchStatement	switch ( tag )		10145997	1					
ANR	10146012	Condition	tag	1682:9:42541:42543	10145997	0	True				
ANR	10146013	Identifier	tag		10145997	0					
ANR	10146014	CompoundStatement		4:14:65:65	10145997	1					
ANR	10146015	Label	case TIFFTAG_SGILOGDATAFMT :	1683:1:42549:42575	10145997	0	True				
ANR	10146016	Identifier	TIFFTAG_SGILOGDATAFMT		10145997	0					
ANR	10146017	Statement	*	1684:2:42579:42579	10145997	1	True				
ANR	10146018	Statement	va_arg	1684:3:42580:42585	10145997	2	True				
ANR	10146019	Statement	(	1684:9:42586:42586	10145997	3	True				
ANR	10146020	Statement	ap	1684:10:42587:42588	10145997	4	True				
ANR	10146021	Statement	","	1684:12:42589:42589	10145997	5	True				
ANR	10146022	Statement	int	1684:14:42591:42593	10145997	6	True				
ANR	10146023	Statement	*	1684:17:42594:42594	10145997	7	True				
ANR	10146024	Statement	)	1684:18:42595:42595	10145997	8	True				
ANR	10146025	Statement	=	1684:20:42597:42597	10145997	9	True				
ANR	10146026	ExpressionStatement	sp -> user_datafmt	1684:22:42599:42615	10145997	10	True				
ANR	10146027	PtrMemberAccess	sp -> user_datafmt		10145997	0					
ANR	10146028	Identifier	sp		10145997	0					
ANR	10146029	Identifier	user_datafmt		10145997	1					
ANR	10146030	ReturnStatement	return ( 1 ) ;	1685:2:42619:42629	10145997	11	True				
ANR	10146031	PrimaryExpression	1		10145997	0					
ANR	10146032	Label	default :	1686:1:42632:42639	10145997	12	True				
ANR	10146033	Identifier	default		10145997	0					
ANR	10146034	ReturnStatement	"return ( * sp -> vgetparent ) ( tif , tag , ap ) ;"	1687:2:42643:42681	10145997	13	True				
ANR	10146035	CallExpression	"( * sp -> vgetparent ) ( tif , tag , ap )"		10145997	0					
ANR	10146036	Callee	* sp -> vgetparent		10145997	0					
ANR	10146037	UnaryOperationExpression	* sp -> vgetparent		10145997	0					
ANR	10146038	UnaryOperator	*		10145997	0					
ANR	10146039	PtrMemberAccess	sp -> vgetparent		10145997	1					
ANR	10146040	Identifier	sp		10145997	0					
ANR	10146041	Identifier	vgetparent		10145997	1					
ANR	10146042	ArgumentList	tif		10145997	1					
ANR	10146043	Argument	tif		10145997	0					
ANR	10146044	Identifier	tif		10145997	0					
ANR	10146045	Argument	tag		10145997	1					
ANR	10146046	Identifier	tag		10145997	0					
ANR	10146047	Argument	ap		10145997	2					
ANR	10146048	Identifier	ap		10145997	0					
ANR	10146049	ReturnType	static int		10145997	1					
ANR	10146050	Identifier	LogLuvVGetField		10145997	2					
ANR	10146051	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		10145997	3					
ANR	10146052	Parameter	TIFF * tif	1678:16:42445:42453	10145997	0	True				
ANR	10146053	ParameterType	TIFF *		10145997	0					
ANR	10146054	Identifier	tif		10145997	1					
ANR	10146055	Parameter	uint32 tag	1678:27:42456:42465	10145997	1	True				
ANR	10146056	ParameterType	uint32		10145997	0					
ANR	10146057	Identifier	tag		10145997	1					
ANR	10146058	Parameter	va_list ap	1678:39:42468:42477	10145997	2	True				
ANR	10146059	ParameterType	va_list		10145997	0					
ANR	10146060	Identifier	ap		10145997	1					
ANR	10146061	CFGEntryNode	ENTRY		10145997		True				
ANR	10146062	CFGExitNode	EXIT		10145997		True				
ANR	10146063	Symbol	tif		10145997						
ANR	10146064	Symbol	* sp		10145997						
ANR	10146065	Symbol	* sp -> vgetparent		10145997						
ANR	10146066	Symbol	tag		10145997						
ANR	10146067	Symbol	* tif		10145997						
ANR	10146068	Symbol	* * sp		10145997						
ANR	10146069	Symbol	sp -> vgetparent		10145997						
ANR	10146070	Symbol	sp		10145997						
ANR	10146071	Symbol	tif -> tif_data		10145997						
ANR	10146072	Symbol	ap		10145997						
ANR	10146073	DeclStmt									
ANR	10146074	Decl							const TIFFField	const TIFFField [ ]	LogLuvFields
ANR	10146075	Function	TIFFInitSGILog	1696:0:43014:44799							
ANR	10146076	FunctionDef	"TIFFInitSGILog (TIFF * tif , int scheme)"		10146075	0					
ANR	10146077	CompoundStatement		1698:0:43056:44799	10146075	0					
ANR	10146078	Statement	static	1699:1:43059:43064	10146075	0	True				
ANR	10146079	IdentifierDeclStatement	"const char module [ ] = ""TIFFInitSGILog"" ;"	1699:8:43066:43104	10146075	1	True				
ANR	10146080	IdentifierDecl	"module [ ] = ""TIFFInitSGILog"""		10146075	0					
ANR	10146081	IdentifierDeclType	const char [ ]		10146075	0					
ANR	10146082	Identifier	module		10146075	1					
ANR	10146083	AssignmentExpression	"module [ ] = ""TIFFInitSGILog"""		10146075	2		=			
ANR	10146084	Identifier	module		10146075	0					
ANR	10146085	PrimaryExpression	"""TIFFInitSGILog"""		10146075	1					
ANR	10146086	IdentifierDeclStatement	LogLuvState * sp ;	1700:1:43107:43122	10146075	2	True				
ANR	10146087	IdentifierDecl	* sp		10146075	0					
ANR	10146088	IdentifierDeclType	LogLuvState *		10146075	0					
ANR	10146089	Identifier	sp		10146075	1					
ANR	10146090	ExpressionStatement	assert ( scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG )	1702:1:43126:43196	10146075	3	True				
ANR	10146091	CallExpression	assert ( scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG )		10146075	0					
ANR	10146092	Callee	assert		10146075	0					
ANR	10146093	Identifier	assert		10146075	0					
ANR	10146094	ArgumentList	scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG		10146075	1					
ANR	10146095	Argument	scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG		10146075	0					
ANR	10146096	OrExpression	scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG		10146075	0		||			
ANR	10146097	EqualityExpression	scheme == COMPRESSION_SGILOG24		10146075	0		==			
ANR	10146098	Identifier	scheme		10146075	0					
ANR	10146099	Identifier	COMPRESSION_SGILOG24		10146075	1					
ANR	10146100	EqualityExpression	scheme == COMPRESSION_SGILOG		10146075	1		==			
ANR	10146101	Identifier	scheme		10146075	0					
ANR	10146102	Identifier	COMPRESSION_SGILOG		10146075	1					
ANR	10146103	IfStatement	"if ( ! _TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) ) )"		10146075	4					
ANR	10146104	Condition	"! _TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) )"	1707:5:43255:43329	10146075	0	True				
ANR	10146105	UnaryOperationExpression	"! _TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) )"		10146075	0					
ANR	10146106	UnaryOperator	!		10146075	0					
ANR	10146107	CallExpression	"_TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) )"		10146075	1					
ANR	10146108	Callee	_TIFFMergeFields		10146075	0					
ANR	10146109	Identifier	_TIFFMergeFields		10146075	0					
ANR	10146110	ArgumentList	tif		10146075	1					
ANR	10146111	Argument	tif		10146075	0					
ANR	10146112	Identifier	tif		10146075	0					
ANR	10146113	Argument	LogLuvFields		10146075	1					
ANR	10146114	Identifier	LogLuvFields		10146075	0					
ANR	10146115	Argument	TIFFArrayCount ( LogLuvFields )		10146075	2					
ANR	10146116	CallExpression	TIFFArrayCount ( LogLuvFields )		10146075	0					
ANR	10146117	Callee	TIFFArrayCount		10146075	0					
ANR	10146118	Identifier	TIFFArrayCount		10146075	0					
ANR	10146119	ArgumentList	LogLuvFields		10146075	1					
ANR	10146120	Argument	LogLuvFields		10146075	0					
ANR	10146121	Identifier	LogLuvFields		10146075	0					
ANR	10146122	CompoundStatement		11:40:275:275	10146075	1					
ANR	10146123	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging SGILog codec-specific tags failed"" )"	1709:2:43336:43428	10146075	0	True				
ANR	10146124	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging SGILog codec-specific tags failed"" )"		10146075	0					
ANR	10146125	Callee	TIFFErrorExt		10146075	0					
ANR	10146126	Identifier	TIFFErrorExt		10146075	0					
ANR	10146127	ArgumentList	tif -> tif_clientdata		10146075	1					
ANR	10146128	Argument	tif -> tif_clientdata		10146075	0					
ANR	10146129	PtrMemberAccess	tif -> tif_clientdata		10146075	0					
ANR	10146130	Identifier	tif		10146075	0					
ANR	10146131	Identifier	tif_clientdata		10146075	1					
ANR	10146132	Argument	module		10146075	1					
ANR	10146133	Identifier	module		10146075	0					
ANR	10146134	Argument	"""Merging SGILog codec-specific tags failed"""		10146075	2					
ANR	10146135	PrimaryExpression	"""Merging SGILog codec-specific tags failed"""		10146075	0					
ANR	10146136	ReturnStatement	return 0 ;	1711:2:43432:43440	10146075	1	True				
ANR	10146137	PrimaryExpression	0		10146075	0					
ANR	10146138	ExpressionStatement	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LogLuvState ) )	1717:1:43527:43585	10146075	5	True				
ANR	10146139	AssignmentExpression	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LogLuvState ) )		10146075	0		=			
ANR	10146140	PtrMemberAccess	tif -> tif_data		10146075	0					
ANR	10146141	Identifier	tif		10146075	0					
ANR	10146142	Identifier	tif_data		10146075	1					
ANR	10146143	CastExpression	( uint8 * ) _TIFFmalloc ( sizeof ( LogLuvState ) )		10146075	1					
ANR	10146144	CastTarget	uint8 *		10146075	0					
ANR	10146145	CallExpression	_TIFFmalloc ( sizeof ( LogLuvState ) )		10146075	1					
ANR	10146146	Callee	_TIFFmalloc		10146075	0					
ANR	10146147	Identifier	_TIFFmalloc		10146075	0					
ANR	10146148	ArgumentList	sizeof ( LogLuvState )		10146075	1					
ANR	10146149	Argument	sizeof ( LogLuvState )		10146075	0					
ANR	10146150	SizeofExpression	sizeof ( LogLuvState )		10146075	0					
ANR	10146151	Sizeof	sizeof		10146075	0					
ANR	10146152	SizeofOperand	LogLuvState		10146075	1					
ANR	10146153	IfStatement	if ( tif -> tif_data == NULL )		10146075	6					
ANR	10146154	Condition	tif -> tif_data == NULL	1718:5:43592:43612	10146075	0	True				
ANR	10146155	EqualityExpression	tif -> tif_data == NULL		10146075	0		==			
ANR	10146156	PtrMemberAccess	tif -> tif_data		10146075	0					
ANR	10146157	Identifier	tif		10146075	0					
ANR	10146158	Identifier	tif_data		10146075	1					
ANR	10146159	Identifier	NULL		10146075	1					
ANR	10146160	GotoStatement	goto bad ;	1719:2:43617:43625	10146075	1	True				
ANR	10146161	Identifier	bad		10146075	0					
ANR	10146162	ExpressionStatement	sp = ( LogLuvState * ) tif -> tif_data	1720:1:43628:43661	10146075	7	True				
ANR	10146163	AssignmentExpression	sp = ( LogLuvState * ) tif -> tif_data		10146075	0		=			
ANR	10146164	Identifier	sp		10146075	0					
ANR	10146165	CastExpression	( LogLuvState * ) tif -> tif_data		10146075	1					
ANR	10146166	CastTarget	LogLuvState *		10146075	0					
ANR	10146167	PtrMemberAccess	tif -> tif_data		10146075	1					
ANR	10146168	Identifier	tif		10146075	0					
ANR	10146169	Identifier	tif_data		10146075	1					
ANR	10146170	ExpressionStatement	"_TIFFmemset ( ( void * ) sp , 0 , sizeof ( * sp ) )"	1721:1:43664:43703	10146075	8	True				
ANR	10146171	CallExpression	"_TIFFmemset ( ( void * ) sp , 0 , sizeof ( * sp ) )"		10146075	0					
ANR	10146172	Callee	_TIFFmemset		10146075	0					
ANR	10146173	Identifier	_TIFFmemset		10146075	0					
ANR	10146174	ArgumentList	( void * ) sp		10146075	1					
ANR	10146175	Argument	( void * ) sp		10146075	0					
ANR	10146176	CastExpression	( void * ) sp		10146075	0					
ANR	10146177	CastTarget	void *		10146075	0					
ANR	10146178	Identifier	sp		10146075	1					
ANR	10146179	Argument	0		10146075	1					
ANR	10146180	PrimaryExpression	0		10146075	0					
ANR	10146181	Argument	sizeof ( * sp )		10146075	2					
ANR	10146182	SizeofExpression	sizeof ( * sp )		10146075	0					
ANR	10146183	Sizeof	sizeof		10146075	0					
ANR	10146184	UnaryOperationExpression	* sp		10146075	1					
ANR	10146185	UnaryOperator	*		10146075	0					
ANR	10146186	Identifier	sp		10146075	1					
ANR	10146187	ExpressionStatement	sp -> user_datafmt = SGILOGDATAFMT_UNKNOWN	1722:1:43706:43746	10146075	9	True				
ANR	10146188	AssignmentExpression	sp -> user_datafmt = SGILOGDATAFMT_UNKNOWN		10146075	0		=			
ANR	10146189	PtrMemberAccess	sp -> user_datafmt		10146075	0					
ANR	10146190	Identifier	sp		10146075	0					
ANR	10146191	Identifier	user_datafmt		10146075	1					
ANR	10146192	Identifier	SGILOGDATAFMT_UNKNOWN		10146075	1					
ANR	10146193	ExpressionStatement	sp -> encode_meth = ( scheme == COMPRESSION_SGILOG24 ) ? SGILOGENCODE_RANDITHER : SGILOGENCODE_NODITHER	1723:1:43749:43853	10146075	10	True				
ANR	10146194	AssignmentExpression	sp -> encode_meth = ( scheme == COMPRESSION_SGILOG24 ) ? SGILOGENCODE_RANDITHER : SGILOGENCODE_NODITHER		10146075	0		=			
ANR	10146195	PtrMemberAccess	sp -> encode_meth		10146075	0					
ANR	10146196	Identifier	sp		10146075	0					
ANR	10146197	Identifier	encode_meth		10146075	1					
ANR	10146198	ConditionalExpression	( scheme == COMPRESSION_SGILOG24 ) ? SGILOGENCODE_RANDITHER : SGILOGENCODE_NODITHER		10146075	1					
ANR	10146199	Condition	scheme == COMPRESSION_SGILOG24		10146075	0					
ANR	10146200	EqualityExpression	scheme == COMPRESSION_SGILOG24		10146075	0		==			
ANR	10146201	Identifier	scheme		10146075	0					
ANR	10146202	Identifier	COMPRESSION_SGILOG24		10146075	1					
ANR	10146203	Identifier	SGILOGENCODE_RANDITHER		10146075	1					
ANR	10146204	Identifier	SGILOGENCODE_NODITHER		10146075	2					
ANR	10146205	ExpressionStatement	sp -> tfunc = _logLuvNop	1725:1:43856:43878	10146075	11	True				
ANR	10146206	AssignmentExpression	sp -> tfunc = _logLuvNop		10146075	0		=			
ANR	10146207	PtrMemberAccess	sp -> tfunc		10146075	0					
ANR	10146208	Identifier	sp		10146075	0					
ANR	10146209	Identifier	tfunc		10146075	1					
ANR	10146210	Identifier	_logLuvNop		10146075	1					
ANR	10146211	ExpressionStatement	tif -> tif_fixuptags = LogLuvFixupTags	1732:1:43993:44029	10146075	12	True				
ANR	10146212	AssignmentExpression	tif -> tif_fixuptags = LogLuvFixupTags		10146075	0		=			
ANR	10146213	PtrMemberAccess	tif -> tif_fixuptags		10146075	0					
ANR	10146214	Identifier	tif		10146075	0					
ANR	10146215	Identifier	tif_fixuptags		10146075	1					
ANR	10146216	Identifier	LogLuvFixupTags		10146075	1					
ANR	10146217	ExpressionStatement	tif -> tif_setupdecode = LogLuvSetupDecode	1733:1:44034:44074	10146075	13	True				
ANR	10146218	AssignmentExpression	tif -> tif_setupdecode = LogLuvSetupDecode		10146075	0		=			
ANR	10146219	PtrMemberAccess	tif -> tif_setupdecode		10146075	0					
ANR	10146220	Identifier	tif		10146075	0					
ANR	10146221	Identifier	tif_setupdecode		10146075	1					
ANR	10146222	Identifier	LogLuvSetupDecode		10146075	1					
ANR	10146223	ExpressionStatement	tif -> tif_decodestrip = LogLuvDecodeStrip	1734:1:44077:44117	10146075	14	True				
ANR	10146224	AssignmentExpression	tif -> tif_decodestrip = LogLuvDecodeStrip		10146075	0		=			
ANR	10146225	PtrMemberAccess	tif -> tif_decodestrip		10146075	0					
ANR	10146226	Identifier	tif		10146075	0					
ANR	10146227	Identifier	tif_decodestrip		10146075	1					
ANR	10146228	Identifier	LogLuvDecodeStrip		10146075	1					
ANR	10146229	ExpressionStatement	tif -> tif_decodetile = LogLuvDecodeTile	1735:1:44120:44158	10146075	15	True				
ANR	10146230	AssignmentExpression	tif -> tif_decodetile = LogLuvDecodeTile		10146075	0		=			
ANR	10146231	PtrMemberAccess	tif -> tif_decodetile		10146075	0					
ANR	10146232	Identifier	tif		10146075	0					
ANR	10146233	Identifier	tif_decodetile		10146075	1					
ANR	10146234	Identifier	LogLuvDecodeTile		10146075	1					
ANR	10146235	ExpressionStatement	tif -> tif_setupencode = LogLuvSetupEncode	1736:1:44161:44201	10146075	16	True				
ANR	10146236	AssignmentExpression	tif -> tif_setupencode = LogLuvSetupEncode		10146075	0		=			
ANR	10146237	PtrMemberAccess	tif -> tif_setupencode		10146075	0					
ANR	10146238	Identifier	tif		10146075	0					
ANR	10146239	Identifier	tif_setupencode		10146075	1					
ANR	10146240	Identifier	LogLuvSetupEncode		10146075	1					
ANR	10146241	ExpressionStatement	tif -> tif_encodestrip = LogLuvEncodeStrip	1737:1:44204:44244	10146075	17	True				
ANR	10146242	AssignmentExpression	tif -> tif_encodestrip = LogLuvEncodeStrip		10146075	0		=			
ANR	10146243	PtrMemberAccess	tif -> tif_encodestrip		10146075	0					
ANR	10146244	Identifier	tif		10146075	0					
ANR	10146245	Identifier	tif_encodestrip		10146075	1					
ANR	10146246	Identifier	LogLuvEncodeStrip		10146075	1					
ANR	10146247	ExpressionStatement	tif -> tif_encodetile = LogLuvEncodeTile	1738:1:44249:44287	10146075	18	True				
ANR	10146248	AssignmentExpression	tif -> tif_encodetile = LogLuvEncodeTile		10146075	0		=			
ANR	10146249	PtrMemberAccess	tif -> tif_encodetile		10146075	0					
ANR	10146250	Identifier	tif		10146075	0					
ANR	10146251	Identifier	tif_encodetile		10146075	1					
ANR	10146252	Identifier	LogLuvEncodeTile		10146075	1					
ANR	10146253	ExpressionStatement	tif -> tif_close = LogLuvClose	1739:1:44290:44318	10146075	19	True				
ANR	10146254	AssignmentExpression	tif -> tif_close = LogLuvClose		10146075	0		=			
ANR	10146255	PtrMemberAccess	tif -> tif_close		10146075	0					
ANR	10146256	Identifier	tif		10146075	0					
ANR	10146257	Identifier	tif_close		10146075	1					
ANR	10146258	Identifier	LogLuvClose		10146075	1					
ANR	10146259	ExpressionStatement	tif -> tif_cleanup = LogLuvCleanup	1740:1:44321:44353	10146075	20	True				
ANR	10146260	AssignmentExpression	tif -> tif_cleanup = LogLuvCleanup		10146075	0		=			
ANR	10146261	PtrMemberAccess	tif -> tif_cleanup		10146075	0					
ANR	10146262	Identifier	tif		10146075	0					
ANR	10146263	Identifier	tif_cleanup		10146075	1					
ANR	10146264	Identifier	LogLuvCleanup		10146075	1					
ANR	10146265	ExpressionStatement	sp -> vgetparent = tif -> tif_tagmethods . vgetfield	1745:1:44409:44455	10146075	21	True				
ANR	10146266	AssignmentExpression	sp -> vgetparent = tif -> tif_tagmethods . vgetfield		10146075	0		=			
ANR	10146267	PtrMemberAccess	sp -> vgetparent		10146075	0					
ANR	10146268	Identifier	sp		10146075	0					
ANR	10146269	Identifier	vgetparent		10146075	1					
ANR	10146270	MemberAccess	tif -> tif_tagmethods . vgetfield		10146075	1					
ANR	10146271	PtrMemberAccess	tif -> tif_tagmethods		10146075	0					
ANR	10146272	Identifier	tif		10146075	0					
ANR	10146273	Identifier	tif_tagmethods		10146075	1					
ANR	10146274	Identifier	vgetfield		10146075	1					
ANR	10146275	ExpressionStatement	tif -> tif_tagmethods . vgetfield = LogLuvVGetField	1746:1:44458:44505	10146075	22	True				
ANR	10146276	AssignmentExpression	tif -> tif_tagmethods . vgetfield = LogLuvVGetField		10146075	0		=			
ANR	10146277	MemberAccess	tif -> tif_tagmethods . vgetfield		10146075	0					
ANR	10146278	PtrMemberAccess	tif -> tif_tagmethods		10146075	0					
ANR	10146279	Identifier	tif		10146075	0					
ANR	10146280	Identifier	tif_tagmethods		10146075	1					
ANR	10146281	Identifier	vgetfield		10146075	1					
ANR	10146282	Identifier	LogLuvVGetField		10146075	1					
ANR	10146283	ExpressionStatement	sp -> vsetparent = tif -> tif_tagmethods . vsetfield	1747:1:44536:44582	10146075	23	True				
ANR	10146284	AssignmentExpression	sp -> vsetparent = tif -> tif_tagmethods . vsetfield		10146075	0		=			
ANR	10146285	PtrMemberAccess	sp -> vsetparent		10146075	0					
ANR	10146286	Identifier	sp		10146075	0					
ANR	10146287	Identifier	vsetparent		10146075	1					
ANR	10146288	MemberAccess	tif -> tif_tagmethods . vsetfield		10146075	1					
ANR	10146289	PtrMemberAccess	tif -> tif_tagmethods		10146075	0					
ANR	10146290	Identifier	tif		10146075	0					
ANR	10146291	Identifier	tif_tagmethods		10146075	1					
ANR	10146292	Identifier	vsetfield		10146075	1					
ANR	10146293	ExpressionStatement	tif -> tif_tagmethods . vsetfield = LogLuvVSetField	1748:1:44585:44632	10146075	24	True				
ANR	10146294	AssignmentExpression	tif -> tif_tagmethods . vsetfield = LogLuvVSetField		10146075	0		=			
ANR	10146295	MemberAccess	tif -> tif_tagmethods . vsetfield		10146075	0					
ANR	10146296	PtrMemberAccess	tif -> tif_tagmethods		10146075	0					
ANR	10146297	Identifier	tif		10146075	0					
ANR	10146298	Identifier	tif_tagmethods		10146075	1					
ANR	10146299	Identifier	vsetfield		10146075	1					
ANR	10146300	Identifier	LogLuvVSetField		10146075	1					
ANR	10146301	ReturnStatement	return ( 1 ) ;	1750:1:44664:44674	10146075	25	True				
ANR	10146302	PrimaryExpression	1		10146075	0					
ANR	10146303	Label	bad :	1751:0:44676:44679	10146075	26	True				
ANR	10146304	Identifier	bad		10146075	0					
ANR	10146305	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s: No space for LogLuv state block"" , tif -> tif_name )"	1752:1:44682:44784	10146075	27	True				
ANR	10146306	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s: No space for LogLuv state block"" , tif -> tif_name )"		10146075	0					
ANR	10146307	Callee	TIFFErrorExt		10146075	0					
ANR	10146308	Identifier	TIFFErrorExt		10146075	0					
ANR	10146309	ArgumentList	tif -> tif_clientdata		10146075	1					
ANR	10146310	Argument	tif -> tif_clientdata		10146075	0					
ANR	10146311	PtrMemberAccess	tif -> tif_clientdata		10146075	0					
ANR	10146312	Identifier	tif		10146075	0					
ANR	10146313	Identifier	tif_clientdata		10146075	1					
ANR	10146314	Argument	module		10146075	1					
ANR	10146315	Identifier	module		10146075	0					
ANR	10146316	Argument	"""%s: No space for LogLuv state block"""		10146075	2					
ANR	10146317	PrimaryExpression	"""%s: No space for LogLuv state block"""		10146075	0					
ANR	10146318	Argument	tif -> tif_name		10146075	3					
ANR	10146319	PtrMemberAccess	tif -> tif_name		10146075	0					
ANR	10146320	Identifier	tif		10146075	0					
ANR	10146321	Identifier	tif_name		10146075	1					
ANR	10146322	ReturnStatement	return ( 0 ) ;	1754:1:44787:44797	10146075	28	True				
ANR	10146323	PrimaryExpression	0		10146075	0					
ANR	10146324	ReturnType	int		10146075	1					
ANR	10146325	Identifier	TIFFInitSGILog		10146075	2					
ANR	10146326	ParameterList	"TIFF * tif , int scheme"		10146075	3					
ANR	10146327	Parameter	TIFF * tif	1697:15:43033:43041	10146075	0	True				
ANR	10146328	ParameterType	TIFF *		10146075	0					
ANR	10146329	Identifier	tif		10146075	1					
ANR	10146330	Parameter	int scheme	1697:26:43044:43053	10146075	1	True				
ANR	10146331	ParameterType	int		10146075	0					
ANR	10146332	Identifier	scheme		10146075	1					
ANR	10146333	CFGEntryNode	ENTRY		10146075		True				
ANR	10146334	CFGExitNode	EXIT		10146075		True				
ANR	10146335	Symbol	* sp		10146075						
ANR	10146336	Symbol	COMPRESSION_SGILOG24		10146075						
ANR	10146337	Symbol	LogLuvCleanup		10146075						
ANR	10146338	Symbol	scheme		10146075						
ANR	10146339	Symbol	COMPRESSION_SGILOG		10146075						
ANR	10146340	Symbol	_TIFFMergeFields		10146075						
ANR	10146341	Symbol	sp -> user_datafmt		10146075						
ANR	10146342	Symbol	tif -> tif_encodestrip		10146075						
ANR	10146343	Symbol	sp -> vgetparent		10146075						
ANR	10146344	Symbol	tif		10146075						
ANR	10146345	Symbol	tif -> tif_cleanup		10146075						
ANR	10146346	Symbol	tif -> tif_tagmethods		10146075						
ANR	10146347	Symbol	LogLuvFields		10146075						
ANR	10146348	Symbol	LogLuvDecodeTile		10146075						
ANR	10146349	Symbol	SGILOGENCODE_RANDITHER		10146075						
ANR	10146350	Symbol	tif -> tif_fixuptags		10146075						
ANR	10146351	Symbol	tif -> tif_setupdecode		10146075						
ANR	10146352	Symbol	SGILOGDATAFMT_UNKNOWN		10146075						
ANR	10146353	Symbol	tif -> tif_tagmethods . vgetfield		10146075						
ANR	10146354	Symbol	sp -> encode_meth		10146075						
ANR	10146355	Symbol	tif -> tif_decodetile		10146075						
ANR	10146356	Symbol	_logLuvNop		10146075						
ANR	10146357	Symbol	sp -> tfunc		10146075						
ANR	10146358	Symbol	sp		10146075						
ANR	10146359	Symbol	tif -> tif_data		10146075						
ANR	10146360	Symbol	tif -> tif_decodestrip		10146075						
ANR	10146361	Symbol	LogLuvSetupDecode		10146075						
ANR	10146362	Symbol	tif -> tif_tagmethods . vsetfield		10146075						
ANR	10146363	Symbol	SGILOGENCODE_NODITHER		10146075						
ANR	10146364	Symbol	NULL		10146075						
ANR	10146365	Symbol	module		10146075						
ANR	10146366	Symbol	LogLuvEncodeTile		10146075						
ANR	10146367	Symbol	sp -> vsetparent		10146075						
ANR	10146368	Symbol	tif -> tif_clientdata		10146075						
ANR	10146369	Symbol	tif -> tif_encodetile		10146075						
ANR	10146370	Symbol	LogLuvVSetField		10146075						
ANR	10146371	Symbol	tif -> tif_setupencode		10146075						
ANR	10146372	Symbol	tif -> tif_name		10146075						
ANR	10146373	Symbol	TIFFArrayCount		10146075						
ANR	10146374	Symbol	LogLuvEncodeStrip		10146075						
ANR	10146375	Symbol	LogLuvDecodeStrip		10146075						
ANR	10146376	Symbol	_TIFFmalloc		10146075						
ANR	10146377	Symbol	tif -> tif_close		10146075						
ANR	10146378	Symbol	LogLuvVGetField		10146075						
ANR	10146379	Symbol	LogLuvFixupTags		10146075						
ANR	10146380	Symbol	LogLuvClose		10146075						
ANR	10146381	Symbol	* tif		10146075						
ANR	10146382	Symbol	LogLuvSetupEncode		10146075						
