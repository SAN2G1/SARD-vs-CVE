command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3266175	File	data/converged/CVE-2018-16863_ghostpdl/freetype_builds_windows_ftdebug.c								
ANR	3266176	Function	FT_Message	60:2:3275:3569							
ANR	3266177	FunctionDef	FT_Message (const char * fmt)		3266176	0					
ANR	3266178	CompoundStatement		62:2:3327:3569	3266176	0					
ANR	3266179	Statement	static	63:4:3333:3338	3266176	0	True				
ANR	3266180	IdentifierDeclStatement	char buf [ 8192 ] ;	63:11:3340:3355	3266176	1	True				
ANR	3266181	IdentifierDecl	buf [ 8192 ]		3266176	0					
ANR	3266182	IdentifierDeclType	char [ 8192 ]		3266176	0					
ANR	3266183	Identifier	buf		3266176	1					
ANR	3266184	PrimaryExpression	8192		3266176	2					
ANR	3266185	IdentifierDeclStatement	va_list ap ;	64:4:3361:3376	3266176	2	True				
ANR	3266186	IdentifierDecl	ap		3266176	0					
ANR	3266187	IdentifierDeclType	va_list		3266176	0					
ANR	3266188	Identifier	ap		3266176	1					
ANR	3266189	ExpressionStatement	"va_start ( ap , fmt )"	67:4:3384:3403	3266176	3	True				
ANR	3266190	CallExpression	"va_start ( ap , fmt )"		3266176	0					
ANR	3266191	Callee	va_start		3266176	0					
ANR	3266192	Identifier	va_start		3266176	0					
ANR	3266193	ArgumentList	ap		3266176	1					
ANR	3266194	Argument	ap		3266176	0					
ANR	3266195	Identifier	ap		3266176	0					
ANR	3266196	Argument	fmt		3266176	1					
ANR	3266197	Identifier	fmt		3266176	0					
ANR	3266198	ExpressionStatement	"vfprintf ( stderr , fmt , ap )"	68:4:3409:3436	3266176	4	True				
ANR	3266199	CallExpression	"vfprintf ( stderr , fmt , ap )"		3266176	0					
ANR	3266200	Callee	vfprintf		3266176	0					
ANR	3266201	Identifier	vfprintf		3266176	0					
ANR	3266202	ArgumentList	stderr		3266176	1					
ANR	3266203	Argument	stderr		3266176	0					
ANR	3266204	Identifier	stderr		3266176	0					
ANR	3266205	Argument	fmt		3266176	1					
ANR	3266206	Identifier	fmt		3266176	0					
ANR	3266207	Argument	ap		3266176	2					
ANR	3266208	Identifier	ap		3266176	0					
ANR	3266209	ExpressionStatement	"vsprintf ( buf , fmt , ap )"	70:4:3492:3516	3266176	5	True				
ANR	3266210	CallExpression	"vsprintf ( buf , fmt , ap )"		3266176	0					
ANR	3266211	Callee	vsprintf		3266176	0					
ANR	3266212	Identifier	vsprintf		3266176	0					
ANR	3266213	ArgumentList	buf		3266176	1					
ANR	3266214	Argument	buf		3266176	0					
ANR	3266215	Identifier	buf		3266176	0					
ANR	3266216	Argument	fmt		3266176	1					
ANR	3266217	Identifier	fmt		3266176	0					
ANR	3266218	Argument	ap		3266176	2					
ANR	3266219	Identifier	ap		3266176	0					
ANR	3266220	ExpressionStatement	OutputDebugStringA ( buf )	71:4:3522:3547	3266176	6	True				
ANR	3266221	CallExpression	OutputDebugStringA ( buf )		3266176	0					
ANR	3266222	Callee	OutputDebugStringA		3266176	0					
ANR	3266223	Identifier	OutputDebugStringA		3266176	0					
ANR	3266224	ArgumentList	buf		3266176	1					
ANR	3266225	Argument	buf		3266176	0					
ANR	3266226	Identifier	buf		3266176	0					
ANR	3266227	ExpressionStatement	va_end ( ap )	72:4:3553:3565	3266176	7	True				
ANR	3266228	CallExpression	va_end ( ap )		3266176	0					
ANR	3266229	Callee	va_end		3266176	0					
ANR	3266230	Identifier	va_end		3266176	0					
ANR	3266231	ArgumentList	ap		3266176	1					
ANR	3266232	Argument	ap		3266176	0					
ANR	3266233	Identifier	ap		3266176	0					
ANR	3266234	Identifier	FT_Message		3266176	1					
ANR	3266235	ParameterList	const char * fmt		3266176	2					
ANR	3266236	Parameter	const char * fmt	60:14:3287:3302	3266176	0	True				
ANR	3266237	ParameterType	const char *		3266176	0					
ANR	3266238	Identifier	fmt		3266176	1					
ANR	3266239	CFGEntryNode	ENTRY		3266176		True				
ANR	3266240	CFGExitNode	EXIT		3266176		True				
ANR	3266241	Symbol	buf		3266176						
ANR	3266242	Symbol	fmt		3266176						
ANR	3266243	Symbol	stderr		3266176						
ANR	3266244	Symbol	ap		3266176						
ANR	3266245	Function	FT_Panic	79:2:3636:3870							
ANR	3266246	FunctionDef	FT_Panic (const char * fmt)		3266245	0					
ANR	3266247	CompoundStatement		81:2:3684:3870	3266245	0					
ANR	3266248	Statement	static	82:4:3690:3695	3266245	0	True				
ANR	3266249	IdentifierDeclStatement	char buf [ 8192 ] ;	82:11:3697:3712	3266245	1	True				
ANR	3266250	IdentifierDecl	buf [ 8192 ]		3266245	0					
ANR	3266251	IdentifierDeclType	char [ 8192 ]		3266245	0					
ANR	3266252	Identifier	buf		3266245	1					
ANR	3266253	PrimaryExpression	8192		3266245	2					
ANR	3266254	IdentifierDeclStatement	va_list ap ;	83:4:3718:3733	3266245	2	True				
ANR	3266255	IdentifierDecl	ap		3266245	0					
ANR	3266256	IdentifierDeclType	va_list		3266245	0					
ANR	3266257	Identifier	ap		3266245	1					
ANR	3266258	ExpressionStatement	"va_start ( ap , fmt )"	86:4:3741:3760	3266245	3	True				
ANR	3266259	CallExpression	"va_start ( ap , fmt )"		3266245	0					
ANR	3266260	Callee	va_start		3266245	0					
ANR	3266261	Identifier	va_start		3266245	0					
ANR	3266262	ArgumentList	ap		3266245	1					
ANR	3266263	Argument	ap		3266245	0					
ANR	3266264	Identifier	ap		3266245	0					
ANR	3266265	Argument	fmt		3266245	1					
ANR	3266266	Identifier	fmt		3266245	0					
ANR	3266267	ExpressionStatement	"vsprintf ( buf , fmt , ap )"	87:4:3766:3790	3266245	4	True				
ANR	3266268	CallExpression	"vsprintf ( buf , fmt , ap )"		3266245	0					
ANR	3266269	Callee	vsprintf		3266245	0					
ANR	3266270	Identifier	vsprintf		3266245	0					
ANR	3266271	ArgumentList	buf		3266245	1					
ANR	3266272	Argument	buf		3266245	0					
ANR	3266273	Identifier	buf		3266245	0					
ANR	3266274	Argument	fmt		3266245	1					
ANR	3266275	Identifier	fmt		3266245	0					
ANR	3266276	Argument	ap		3266245	2					
ANR	3266277	Identifier	ap		3266245	0					
ANR	3266278	ExpressionStatement	OutputDebugStringA ( buf )	88:4:3796:3821	3266245	5	True				
ANR	3266279	CallExpression	OutputDebugStringA ( buf )		3266245	0					
ANR	3266280	Callee	OutputDebugStringA		3266245	0					
ANR	3266281	Identifier	OutputDebugStringA		3266245	0					
ANR	3266282	ArgumentList	buf		3266245	1					
ANR	3266283	Argument	buf		3266245	0					
ANR	3266284	Identifier	buf		3266245	0					
ANR	3266285	ExpressionStatement	va_end ( ap )	89:4:3827:3839	3266245	6	True				
ANR	3266286	CallExpression	va_end ( ap )		3266245	0					
ANR	3266287	Callee	va_end		3266245	0					
ANR	3266288	Identifier	va_end		3266245	0					
ANR	3266289	ArgumentList	ap		3266245	1					
ANR	3266290	Argument	ap		3266245	0					
ANR	3266291	Identifier	ap		3266245	0					
ANR	3266292	ExpressionStatement	exit ( EXIT_FAILURE )	91:4:3846:3866	3266245	7	True				
ANR	3266293	CallExpression	exit ( EXIT_FAILURE )		3266245	0					
ANR	3266294	Callee	exit		3266245	0					
ANR	3266295	Identifier	exit		3266245	0					
ANR	3266296	ArgumentList	EXIT_FAILURE		3266245	1					
ANR	3266297	Argument	EXIT_FAILURE		3266245	0					
ANR	3266298	Identifier	EXIT_FAILURE		3266245	0					
ANR	3266299	Identifier	FT_Panic		3266245	1					
ANR	3266300	ParameterList	const char * fmt		3266245	2					
ANR	3266301	Parameter	const char * fmt	79:12:3646:3661	3266245	0	True				
ANR	3266302	ParameterType	const char *		3266245	0					
ANR	3266303	Identifier	fmt		3266245	1					
ANR	3266304	CFGEntryNode	ENTRY		3266245		True				
ANR	3266305	CFGExitNode	EXIT		3266245		True				
ANR	3266306	Symbol	buf		3266245						
ANR	3266307	Symbol	EXIT_FAILURE		3266245						
ANR	3266308	Symbol	fmt		3266245						
ANR	3266309	Symbol	ap		3266245						
ANR	3266310	Function	FT_Throw	98:2:3936:4120							
ANR	3266311	FunctionDef	"FT_Throw (FT_Error error , int line , const char * file)"		3266310	0					
ANR	3266312	CompoundStatement		101:2:4031:4120	3266310	0					
ANR	3266313	ExpressionStatement	FT_UNUSED ( error )	102:4:4037:4055	3266310	0	True				
ANR	3266314	CallExpression	FT_UNUSED ( error )		3266310	0					
ANR	3266315	Callee	FT_UNUSED		3266310	0					
ANR	3266316	Identifier	FT_UNUSED		3266310	0					
ANR	3266317	ArgumentList	error		3266310	1					
ANR	3266318	Argument	error		3266310	0					
ANR	3266319	Identifier	error		3266310	0					
ANR	3266320	ExpressionStatement	FT_UNUSED ( line )	103:4:4061:4078	3266310	1	True				
ANR	3266321	CallExpression	FT_UNUSED ( line )		3266310	0					
ANR	3266322	Callee	FT_UNUSED		3266310	0					
ANR	3266323	Identifier	FT_UNUSED		3266310	0					
ANR	3266324	ArgumentList	line		3266310	1					
ANR	3266325	Argument	line		3266310	0					
ANR	3266326	Identifier	line		3266310	0					
ANR	3266327	ExpressionStatement	FT_UNUSED ( file )	104:4:4084:4101	3266310	2	True				
ANR	3266328	CallExpression	FT_UNUSED ( file )		3266310	0					
ANR	3266329	Callee	FT_UNUSED		3266310	0					
ANR	3266330	Identifier	FT_UNUSED		3266310	0					
ANR	3266331	ArgumentList	file		3266310	1					
ANR	3266332	Argument	file		3266310	0					
ANR	3266333	Identifier	file		3266310	0					
ANR	3266334	ReturnStatement	return 0 ;	106:4:4108:4116	3266310	3	True				
ANR	3266335	PrimaryExpression	0		3266310	0					
ANR	3266336	Identifier	FT_Throw		3266310	1					
ANR	3266337	ParameterList	"FT_Error error , int line , const char * file"		3266310	2					
ANR	3266338	Parameter	FT_Error error	98:12:3946:3963	3266310	0	True				
ANR	3266339	ParameterType	FT_Error		3266310	0					
ANR	3266340	Identifier	error		3266310	1					
ANR	3266341	Parameter	int line	99:12:3978:3994	3266310	1	True				
ANR	3266342	ParameterType	int		3266310	0					
ANR	3266343	Identifier	line		3266310	1					
ANR	3266344	Parameter	const char * file	100:12:4009:4025	3266310	2	True				
ANR	3266345	ParameterType	const char *		3266310	0					
ANR	3266346	Identifier	file		3266310	1					
ANR	3266347	CFGEntryNode	ENTRY		3266310		True				
ANR	3266348	CFGExitNode	EXIT		3266310		True				
ANR	3266349	Symbol	file		3266310						
ANR	3266350	Symbol	line		3266310						
ANR	3266351	Symbol	error		3266310						
ANR	3266352	DeclStmt									
ANR	3266353	Decl							int	int [ trace_count ]	ft_trace_levels
ANR	3266354	DeclStmt									
ANR	3266355	Decl							const char	const char * [ trace_count + 1 ]	ft_trace_toggles
ANR	3266356	Function	ft_debug_init	147:2:5872:7421							
ANR	3266357	FunctionDef	ft_debug_init ()		3266356	0					
ANR	3266358	CompoundStatement		148:2:5896:7421	3266356	0					
ANR	3266359	IdentifierDeclStatement	"const char * ft2_debug = getenv ( ""FT2_DEBUG"" ) ;"	149:4:5902:5948	3266356	0	True				
ANR	3266360	IdentifierDecl	"* ft2_debug = getenv ( ""FT2_DEBUG"" )"		3266356	0					
ANR	3266361	IdentifierDeclType	const char *		3266356	0					
ANR	3266362	Identifier	ft2_debug		3266356	1					
ANR	3266363	AssignmentExpression	"* ft2_debug = getenv ( ""FT2_DEBUG"" )"		3266356	2		=			
ANR	3266364	Identifier	ft2_debug		3266356	0					
ANR	3266365	CallExpression	"getenv ( ""FT2_DEBUG"" )"		3266356	1					
ANR	3266366	Callee	getenv		3266356	0					
ANR	3266367	Identifier	getenv		3266356	0					
ANR	3266368	ArgumentList	"""FT2_DEBUG"""		3266356	1					
ANR	3266369	Argument	"""FT2_DEBUG"""		3266356	0					
ANR	3266370	PrimaryExpression	"""FT2_DEBUG"""		3266356	0					
ANR	3266371	IfStatement	if ( ft2_debug )		3266356	1					
ANR	3266372	Condition	ft2_debug	152:9:5961:5969	3266356	0	True				
ANR	3266373	Identifier	ft2_debug		3266356	0					
ANR	3266374	CompoundStatement		8:6:122:136	3266356	1					
ANR	3266375	IdentifierDeclStatement	const char * p = ft2_debug ;	154:6:5985:6011	3266356	0	True				
ANR	3266376	IdentifierDecl	* p = ft2_debug		3266356	0					
ANR	3266377	IdentifierDeclType	const char *		3266356	0					
ANR	3266378	Identifier	p		3266356	1					
ANR	3266379	AssignmentExpression	* p = ft2_debug		3266356	2		=			
ANR	3266380	Identifier	ft2_debug		3266356	0					
ANR	3266381	Identifier	ft2_debug		3266356	1					
ANR	3266382	IdentifierDeclStatement	const char * q ;	155:6:6019:6033	3266356	1	True				
ANR	3266383	IdentifierDecl	* q		3266356	0					
ANR	3266384	IdentifierDeclType	const char *		3266356	0					
ANR	3266385	Identifier	q		3266356	1					
ANR	3266386	ForStatement	for ( ; * p ; p ++ )		3266356	2					
ANR	3266387	Condition	* p	158:14:6051:6052	3266356	0	True				
ANR	3266388	UnaryOperationExpression	* p		3266356	0					
ANR	3266389	UnaryOperator	*		3266356	0					
ANR	3266390	Identifier	p		3266356	1					
ANR	3266391	PostIncDecOperationExpression	p ++	158:18:6055:6057	3266356	1	True				
ANR	3266392	Identifier	p		3266356	0					
ANR	3266393	IncDec	++		3266356	1					
ANR	3266394	CompoundStatement		12:6:170:170	3266356	2					
ANR	3266395	IfStatement	"if ( * p == ' ' || * p == '\\t' || * p == ',' || * p == ';' || * p == '=' )"		3266356	0					
ANR	3266396	Condition	"* p == ' ' || * p == '\\t' || * p == ',' || * p == ';' || * p == '='"	161:13:6135:6196	3266356	0	True				
ANR	3266397	OrExpression	"* p == ' ' || * p == '\\t' || * p == ',' || * p == ';' || * p == '='"		3266356	0		||			
ANR	3266398	EqualityExpression	* p == ' '		3266356	0		==			
ANR	3266399	UnaryOperationExpression	* p		3266356	0					
ANR	3266400	UnaryOperator	*		3266356	0					
ANR	3266401	Identifier	p		3266356	1					
ANR	3266402	PrimaryExpression	' '		3266356	1					
ANR	3266403	OrExpression	"* p == '\\t' || * p == ',' || * p == ';' || * p == '='"		3266356	1		||			
ANR	3266404	EqualityExpression	* p == '\\t'		3266356	0		==			
ANR	3266405	UnaryOperationExpression	* p		3266356	0					
ANR	3266406	UnaryOperator	*		3266356	0					
ANR	3266407	Identifier	p		3266356	1					
ANR	3266408	PrimaryExpression	'\\t'		3266356	1					
ANR	3266409	OrExpression	"* p == ',' || * p == ';' || * p == '='"		3266356	1		||			
ANR	3266410	EqualityExpression	"* p == ','"		3266356	0		==			
ANR	3266411	UnaryOperationExpression	* p		3266356	0					
ANR	3266412	UnaryOperator	*		3266356	0					
ANR	3266413	Identifier	p		3266356	1					
ANR	3266414	PrimaryExpression	"','"		3266356	1					
ANR	3266415	OrExpression	* p == ';' || * p == '='		3266356	1		||			
ANR	3266416	EqualityExpression	* p == ';'		3266356	0		==			
ANR	3266417	UnaryOperationExpression	* p		3266356	0					
ANR	3266418	UnaryOperator	*		3266356	0					
ANR	3266419	Identifier	p		3266356	1					
ANR	3266420	PrimaryExpression	';'		3266356	1					
ANR	3266421	EqualityExpression	* p == '='		3266356	1		==			
ANR	3266422	UnaryOperationExpression	* p		3266356	0					
ANR	3266423	UnaryOperator	*		3266356	0					
ANR	3266424	Identifier	p		3266356	1					
ANR	3266425	PrimaryExpression	'='		3266356	1					
ANR	3266426	ContinueStatement	continue ;	162:10:6210:6218	3266356	1	True				
ANR	3266427	ExpressionStatement	q = p	165:8:6277:6282	3266356	1	True				
ANR	3266428	AssignmentExpression	q = p		3266356	0		=			
ANR	3266429	Identifier	q		3266356	0					
ANR	3266430	Identifier	p		3266356	1					
ANR	3266431	WhileStatement	while ( * p && * p != ':' )		3266356	2					
ANR	3266432	Condition	* p && * p != ':'	166:16:6300:6314	3266356	0	True				
ANR	3266433	AndExpression	* p && * p != ':'		3266356	0		&&			
ANR	3266434	UnaryOperationExpression	* p		3266356	0					
ANR	3266435	UnaryOperator	*		3266356	0					
ANR	3266436	Identifier	p		3266356	1					
ANR	3266437	EqualityExpression	* p != ':'		3266356	1		!=			
ANR	3266438	UnaryOperationExpression	* p		3266356	0					
ANR	3266439	UnaryOperator	*		3266356	0					
ANR	3266440	Identifier	p		3266356	1					
ANR	3266441	PrimaryExpression	':'		3266356	1					
ANR	3266442	ExpressionStatement	p ++	167:10:6328:6331	3266356	1	True				
ANR	3266443	PostIncDecOperationExpression	p ++		3266356	0					
ANR	3266444	Identifier	p		3266356	0					
ANR	3266445	IncDec	++		3266356	1					
ANR	3266446	IfStatement	if ( ! * p )		3266356	3					
ANR	3266447	Condition	! * p	169:13:6347:6349	3266356	0	True				
ANR	3266448	UnaryOperationExpression	! * p		3266356	0					
ANR	3266449	UnaryOperator	!		3266356	0					
ANR	3266450	UnaryOperationExpression	* p		3266356	1					
ANR	3266451	UnaryOperator	*		3266356	0					
ANR	3266452	Identifier	p		3266356	1					
ANR	3266453	BreakStatement	break ;	170:10:6363:6368	3266356	1	True				
ANR	3266454	IfStatement	if ( * p == ':' && p > q )		3266356	4					
ANR	3266455	Condition	* p == ':' && p > q	172:13:6384:6401	3266356	0	True				
ANR	3266456	AndExpression	* p == ':' && p > q		3266356	0		&&			
ANR	3266457	EqualityExpression	* p == ':'		3266356	0		==			
ANR	3266458	UnaryOperationExpression	* p		3266356	0					
ANR	3266459	UnaryOperator	*		3266356	0					
ANR	3266460	Identifier	p		3266356	1					
ANR	3266461	PrimaryExpression	':'		3266356	1					
ANR	3266462	RelationalExpression	p > q		3266356	1		>			
ANR	3266463	Identifier	p		3266356	0					
ANR	3266464	Identifier	q		3266356	1					
ANR	3266465	CompoundStatement		28:10:571:598	3266356	1					
ANR	3266466	IdentifierDeclStatement	"int n , i , len = ( int ) ( p - q ) ;"	174:10:6425:6456	3266356	0	True				
ANR	3266467	IdentifierDecl	n		3266356	0					
ANR	3266468	IdentifierDeclType	int		3266356	0					
ANR	3266469	Identifier	n		3266356	1					
ANR	3266470	IdentifierDecl	i		3266356	1					
ANR	3266471	IdentifierDeclType	int		3266356	0					
ANR	3266472	Identifier	i		3266356	1					
ANR	3266473	IdentifierDecl	len = ( int ) ( p - q )		3266356	2					
ANR	3266474	IdentifierDeclType	int		3266356	0					
ANR	3266475	Identifier	len		3266356	1					
ANR	3266476	AssignmentExpression	len = ( int ) ( p - q )		3266356	2		=			
ANR	3266477	Identifier	len		3266356	0					
ANR	3266478	CastExpression	( int ) ( p - q )		3266356	1					
ANR	3266479	CastTarget	int		3266356	0					
ANR	3266480	AdditiveExpression	p - q		3266356	1		-			
ANR	3266481	Identifier	p		3266356	0					
ANR	3266482	Identifier	q		3266356	1					
ANR	3266483	IdentifierDeclStatement	"int level = - 1 , found = - 1 ;"	175:10:6468:6495	3266356	1	True				
ANR	3266484	IdentifierDecl	level = - 1		3266356	0					
ANR	3266485	IdentifierDeclType	int		3266356	0					
ANR	3266486	Identifier	level		3266356	1					
ANR	3266487	AssignmentExpression	level = - 1		3266356	2		=			
ANR	3266488	Identifier	level		3266356	0					
ANR	3266489	UnaryOperationExpression	- 1		3266356	1					
ANR	3266490	UnaryOperator	-		3266356	0					
ANR	3266491	PrimaryExpression	1		3266356	1					
ANR	3266492	IdentifierDecl	found = - 1		3266356	1					
ANR	3266493	IdentifierDeclType	int		3266356	0					
ANR	3266494	Identifier	found		3266356	1					
ANR	3266495	AssignmentExpression	found = - 1		3266356	2		=			
ANR	3266496	Identifier	found		3266356	0					
ANR	3266497	UnaryOperationExpression	- 1		3266356	1					
ANR	3266498	UnaryOperator	-		3266356	0					
ANR	3266499	PrimaryExpression	1		3266356	1					
ANR	3266500	ForStatement	for ( n = 0 ; n < trace_count ; n ++ )		3266356	2					
ANR	3266501	ForInit	n = 0 ;	178:16:6515:6520	3266356	0	True				
ANR	3266502	AssignmentExpression	n = 0		3266356	0		=			
ANR	3266503	Identifier	n		3266356	0					
ANR	3266504	PrimaryExpression	0		3266356	1					
ANR	3266505	Condition	n < trace_count	178:23:6522:6536	3266356	1	True				
ANR	3266506	RelationalExpression	n < trace_count		3266356	0		<			
ANR	3266507	Identifier	n		3266356	0					
ANR	3266508	Identifier	trace_count		3266356	1					
ANR	3266509	PostIncDecOperationExpression	n ++	178:40:6539:6541	3266356	2	True				
ANR	3266510	Identifier	n		3266356	0					
ANR	3266511	IncDec	++		3266356	1					
ANR	3266512	CompoundStatement		33:12:672:713	3266356	3					
ANR	3266513	IdentifierDeclStatement	const char * toggle = ft_trace_toggles [ n ] ;	180:12:6569:6610	3266356	0	True				
ANR	3266514	IdentifierDecl	* toggle = ft_trace_toggles [ n ]		3266356	0					
ANR	3266515	IdentifierDeclType	const char *		3266356	0					
ANR	3266516	Identifier	toggle		3266356	1					
ANR	3266517	AssignmentExpression	* toggle = ft_trace_toggles [ n ]		3266356	2		=			
ANR	3266518	Identifier	toggle		3266356	0					
ANR	3266519	ArrayIndexing	ft_trace_toggles [ n ]		3266356	1					
ANR	3266520	Identifier	ft_trace_toggles		3266356	0					
ANR	3266521	Identifier	n		3266356	1					
ANR	3266522	ForStatement	for ( i = 0 ; i < len ; i ++ )		3266356	1					
ANR	3266523	ForInit	i = 0 ;	183:18:6632:6637	3266356	0	True				
ANR	3266524	AssignmentExpression	i = 0		3266356	0		=			
ANR	3266525	Identifier	i		3266356	0					
ANR	3266526	PrimaryExpression	0		3266356	1					
ANR	3266527	Condition	i < len	183:25:6639:6645	3266356	1	True				
ANR	3266528	RelationalExpression	i < len		3266356	0		<			
ANR	3266529	Identifier	i		3266356	0					
ANR	3266530	Identifier	len		3266356	1					
ANR	3266531	PostIncDecOperationExpression	i ++	183:34:6648:6650	3266356	2	True				
ANR	3266532	Identifier	i		3266356	0					
ANR	3266533	IncDec	++		3266356	1					
ANR	3266534	CompoundStatement		37:12:769:769	3266356	3					
ANR	3266535	IfStatement	if ( toggle [ i ] != q [ i ] )		3266356	0					
ANR	3266536	Condition	toggle [ i ] != q [ i ]	185:19:6687:6703	3266356	0	True				
ANR	3266537	EqualityExpression	toggle [ i ] != q [ i ]		3266356	0		!=			
ANR	3266538	ArrayIndexing	toggle [ i ]		3266356	0					
ANR	3266539	Identifier	toggle		3266356	0					
ANR	3266540	Identifier	i		3266356	1					
ANR	3266541	ArrayIndexing	q [ i ]		3266356	1					
ANR	3266542	Identifier	q		3266356	0					
ANR	3266543	Identifier	i		3266356	1					
ANR	3266544	BreakStatement	break ;	186:16:6723:6728	3266356	1	True				
ANR	3266545	IfStatement	if ( i == len && toggle [ i ] == 0 )		3266356	2					
ANR	3266546	Condition	i == len && toggle [ i ] == 0	189:17:6762:6787	3266356	0	True				
ANR	3266547	AndExpression	i == len && toggle [ i ] == 0		3266356	0		&&			
ANR	3266548	EqualityExpression	i == len		3266356	0		==			
ANR	3266549	Identifier	i		3266356	0					
ANR	3266550	Identifier	len		3266356	1					
ANR	3266551	EqualityExpression	toggle [ i ] == 0		3266356	1		==			
ANR	3266552	ArrayIndexing	toggle [ i ]		3266356	0					
ANR	3266553	Identifier	toggle		3266356	0					
ANR	3266554	Identifier	i		3266356	1					
ANR	3266555	PrimaryExpression	0		3266356	1					
ANR	3266556	CompoundStatement		43:12:906:906	3266356	1					
ANR	3266557	ExpressionStatement	found = n	191:14:6819:6828	3266356	0	True				
ANR	3266558	AssignmentExpression	found = n		3266356	0		=			
ANR	3266559	Identifier	found		3266356	0					
ANR	3266560	Identifier	n		3266356	1					
ANR	3266561	BreakStatement	break ;	192:14:6844:6849	3266356	1	True				
ANR	3266562	ExpressionStatement	p ++	197:10:6915:6918	3266356	3	True				
ANR	3266563	PostIncDecOperationExpression	p ++		3266356	0					
ANR	3266564	Identifier	p		3266356	0					
ANR	3266565	IncDec	++		3266356	1					
ANR	3266566	IfStatement	if ( * p )		3266356	4					
ANR	3266567	Condition	* p	198:15:6935:6936	3266356	0	True				
ANR	3266568	UnaryOperationExpression	* p		3266356	0					
ANR	3266569	UnaryOperator	*		3266356	0					
ANR	3266570	Identifier	p		3266356	1					
ANR	3266571	CompoundStatement		52:10:1053:1053	3266356	1					
ANR	3266572	ExpressionStatement	level = * p - '0'	200:12:6964:6980	3266356	0	True				
ANR	3266573	AssignmentExpression	level = * p - '0'		3266356	0		=			
ANR	3266574	Identifier	level		3266356	0					
ANR	3266575	AdditiveExpression	* p - '0'		3266356	1		-			
ANR	3266576	UnaryOperationExpression	* p		3266356	0					
ANR	3266577	UnaryOperator	*		3266356	0					
ANR	3266578	Identifier	p		3266356	1					
ANR	3266579	PrimaryExpression	'0'		3266356	1					
ANR	3266580	IfStatement	if ( level < 0 || level > 7 )		3266356	1					
ANR	3266581	Condition	level < 0 || level > 7	201:17:6999:7020	3266356	0	True				
ANR	3266582	OrExpression	level < 0 || level > 7		3266356	0		||			
ANR	3266583	RelationalExpression	level < 0		3266356	0		<			
ANR	3266584	Identifier	level		3266356	0					
ANR	3266585	PrimaryExpression	0		3266356	1					
ANR	3266586	RelationalExpression	level > 7		3266356	1		>			
ANR	3266587	Identifier	level		3266356	0					
ANR	3266588	PrimaryExpression	7		3266356	1					
ANR	3266589	ExpressionStatement	level = - 1	202:14:7038:7048	3266356	1	True				
ANR	3266590	AssignmentExpression	level = - 1		3266356	0		=			
ANR	3266591	Identifier	level		3266356	0					
ANR	3266592	UnaryOperationExpression	- 1		3266356	1					
ANR	3266593	UnaryOperator	-		3266356	0					
ANR	3266594	PrimaryExpression	1		3266356	1					
ANR	3266595	IfStatement	if ( found >= 0 && level >= 0 )		3266356	5					
ANR	3266596	Condition	found >= 0 && level >= 0	205:15:7078:7101	3266356	0	True				
ANR	3266597	AndExpression	found >= 0 && level >= 0		3266356	0		&&			
ANR	3266598	RelationalExpression	found >= 0		3266356	0		>=			
ANR	3266599	Identifier	found		3266356	0					
ANR	3266600	PrimaryExpression	0		3266356	1					
ANR	3266601	RelationalExpression	level >= 0		3266356	1		>=			
ANR	3266602	Identifier	level		3266356	0					
ANR	3266603	PrimaryExpression	0		3266356	1					
ANR	3266604	CompoundStatement		59:10:1218:1218	3266356	1					
ANR	3266605	IfStatement	if ( found == trace_any )		3266356	0					
ANR	3266606	Condition	found == trace_any	207:17:7134:7151	3266356	0	True				
ANR	3266607	EqualityExpression	found == trace_any		3266356	0		==			
ANR	3266608	Identifier	found		3266356	0					
ANR	3266609	Identifier	trace_any		3266356	1					
ANR	3266610	CompoundStatement		61:12:1270:1270	3266356	1					
ANR	3266611	ForStatement	for ( n = 0 ; n < trace_count ; n ++ )		3266356	0					
ANR	3266612	ForInit	n = 0 ;	210:20:7232:7237	3266356	0	True				
ANR	3266613	AssignmentExpression	n = 0		3266356	0		=			
ANR	3266614	Identifier	n		3266356	0					
ANR	3266615	PrimaryExpression	0		3266356	1					
ANR	3266616	Condition	n < trace_count	210:27:7239:7253	3266356	1	True				
ANR	3266617	RelationalExpression	n < trace_count		3266356	0		<			
ANR	3266618	Identifier	n		3266356	0					
ANR	3266619	Identifier	trace_count		3266356	1					
ANR	3266620	PostIncDecOperationExpression	n ++	210:44:7256:7258	3266356	2	True				
ANR	3266621	Identifier	n		3266356	0					
ANR	3266622	IncDec	++		3266356	1					
ANR	3266623	ExpressionStatement	ft_trace_levels [ n ] = level	211:16:7278:7304	3266356	3	True				
ANR	3266624	AssignmentExpression	ft_trace_levels [ n ] = level		3266356	0		=			
ANR	3266625	ArrayIndexing	ft_trace_levels [ n ]		3266356	0					
ANR	3266626	Identifier	ft_trace_levels		3266356	0					
ANR	3266627	Identifier	n		3266356	1					
ANR	3266628	Identifier	level		3266356	1					
ANR	3266629	ElseStatement	else		3266356	0					
ANR	3266630	ExpressionStatement	ft_trace_levels [ found ] = level	214:14:7351:7381	3266356	0	True				
ANR	3266631	AssignmentExpression	ft_trace_levels [ found ] = level		3266356	0		=			
ANR	3266632	ArrayIndexing	ft_trace_levels [ found ]		3266356	0					
ANR	3266633	Identifier	ft_trace_levels		3266356	0					
ANR	3266634	Identifier	found		3266356	1					
ANR	3266635	Identifier	level		3266356	1					
ANR	3266636	Identifier	ft_debug_init		3266356	1					
ANR	3266637	ParameterList			3266356	2					
ANR	3266638	CFGEntryNode	ENTRY		3266356		True				
ANR	3266639	CFGExitNode	EXIT		3266356		True				
ANR	3266640	Symbol	trace_any		3266356						
ANR	3266641	Symbol	level		3266356						
ANR	3266642	Symbol	trace_count		3266356						
ANR	3266643	Symbol	ft2_debug		3266356						
ANR	3266644	Symbol	i		3266356						
ANR	3266645	Symbol	toggle		3266356						
ANR	3266646	Symbol	n		3266356						
ANR	3266647	Symbol	p		3266356						
ANR	3266648	Symbol	q		3266356						
ANR	3266649	Symbol	found		3266356						
ANR	3266650	Symbol	* i		3266356						
ANR	3266651	Symbol	len		3266356						
ANR	3266652	Symbol	* n		3266356						
ANR	3266653	Symbol	* p		3266356						
ANR	3266654	Symbol	* q		3266356						
ANR	3266655	Symbol	* ft_trace_levels		3266356						
ANR	3266656	Symbol	ft_trace_toggles		3266356						
ANR	3266657	Symbol	* toggle		3266356						
ANR	3266658	Symbol	* ft_trace_toggles		3266356						
ANR	3266659	Symbol	ft_trace_levels		3266356						
ANR	3266660	Symbol	* found		3266356						
ANR	3266661	Symbol	getenv		3266356						
ANR	3266662	Function	ft_debug_init	226:2:7486:7532							
ANR	3266663	FunctionDef	ft_debug_init ()		3266662	0					
ANR	3266664	CompoundStatement		227:2:7510:7532	3266662	0					
ANR	3266665	Identifier	ft_debug_init		3266662	1					
ANR	3266666	ParameterList			3266662	2					
ANR	3266667	CFGEntryNode	ENTRY		3266662		True				
ANR	3266668	CFGExitNode	EXIT		3266662		True				
