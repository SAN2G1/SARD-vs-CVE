command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8099397	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pctext.c								
ANR	8099398	Function	set_gs_font	52:0:1407:1641							
ANR	8099399	FunctionDef	set_gs_font (pcl_state_t * pcs)		8099398	0					
ANR	8099400	CompoundStatement		54:0:1450:1641	8099398	0					
ANR	8099401	IdentifierDeclStatement	gs_font * pfont = ( gs_font * ) pcs -> font -> pfont ;	55:4:1456:1501	8099398	0	True				
ANR	8099402	IdentifierDecl	* pfont = ( gs_font * ) pcs -> font -> pfont		8099398	0					
ANR	8099403	IdentifierDeclType	gs_font *		8099398	0					
ANR	8099404	Identifier	pfont		8099398	1					
ANR	8099405	AssignmentExpression	* pfont = ( gs_font * ) pcs -> font -> pfont		8099398	2		=			
ANR	8099406	Identifier	pfont		8099398	0					
ANR	8099407	CastExpression	( gs_font * ) pcs -> font -> pfont		8099398	1					
ANR	8099408	CastTarget	gs_font *		8099398	0					
ANR	8099409	PtrMemberAccess	pcs -> font -> pfont		8099398	1					
ANR	8099410	PtrMemberAccess	pcs -> font		8099398	0					
ANR	8099411	Identifier	pcs		8099398	0					
ANR	8099412	Identifier	font		8099398	1					
ANR	8099413	Identifier	pfont		8099398	1					
ANR	8099414	ExpressionStatement	"gs_setfont ( pcs -> pgs , pfont )"	57:4:1508:1535	8099398	1	True				
ANR	8099415	CallExpression	"gs_setfont ( pcs -> pgs , pfont )"		8099398	0					
ANR	8099416	Callee	gs_setfont		8099398	0					
ANR	8099417	Identifier	gs_setfont		8099398	0					
ANR	8099418	ArgumentList	pcs -> pgs		8099398	1					
ANR	8099419	Argument	pcs -> pgs		8099398	0					
ANR	8099420	PtrMemberAccess	pcs -> pgs		8099398	0					
ANR	8099421	Identifier	pcs		8099398	0					
ANR	8099422	Identifier	pgs		8099398	1					
ANR	8099423	Argument	pfont		8099398	1					
ANR	8099424	Identifier	pfont		8099398	0					
ANR	8099425	ExpressionStatement	pfont -> FontMatrix = pfont -> orig_FontMatrix	59:4:1597:1639	8099398	2	True				
ANR	8099426	AssignmentExpression	pfont -> FontMatrix = pfont -> orig_FontMatrix		8099398	0		=			
ANR	8099427	PtrMemberAccess	pfont -> FontMatrix		8099398	0					
ANR	8099428	Identifier	pfont		8099398	0					
ANR	8099429	Identifier	FontMatrix		8099398	1					
ANR	8099430	PtrMemberAccess	pfont -> orig_FontMatrix		8099398	1					
ANR	8099431	Identifier	pfont		8099398	0					
ANR	8099432	Identifier	orig_FontMatrix		8099398	1					
ANR	8099433	ReturnType	static void		8099398	1					
ANR	8099434	Identifier	set_gs_font		8099398	2					
ANR	8099435	ParameterList	pcl_state_t * pcs		8099398	3					
ANR	8099436	Parameter	pcl_state_t * pcs	53:12:1431:1447	8099398	0	True				
ANR	8099437	ParameterType	pcl_state_t *		8099398	0					
ANR	8099438	Identifier	pcs		8099398	1					
ANR	8099439	CFGEntryNode	ENTRY		8099398		True				
ANR	8099440	CFGExitNode	EXIT		8099398		True				
ANR	8099441	Symbol	pfont -> orig_FontMatrix		8099398						
ANR	8099442	Symbol	pcs		8099398						
ANR	8099443	Symbol	* pfont		8099398						
ANR	8099444	Symbol	* * pcs		8099398						
ANR	8099445	Symbol	pfont		8099398						
ANR	8099446	Symbol	pcs -> pgs		8099398						
ANR	8099447	Symbol	pcs -> font -> pfont		8099398						
ANR	8099448	Symbol	* pcs		8099398						
ANR	8099449	Symbol	* pcs -> font		8099398						
ANR	8099450	Symbol	pcs -> font		8099398						
ANR	8099451	Symbol	pfont -> FontMatrix		8099398						
ANR	8099452	Function	pcl_downloaded_and_bound	62:0:1644:1777							
ANR	8099453	FunctionDef	pcl_downloaded_and_bound (const pl_font_t * plfont)		8099452	0					
ANR	8099454	CompoundStatement		64:0:1700:1777	8099452	0					
ANR	8099455	ReturnStatement	return ( plfont -> storage != pcds_internal && pl_font_is_bound ( plfont ) ) ;	65:4:1706:1775	8099452	0	True				
ANR	8099456	AndExpression	plfont -> storage != pcds_internal && pl_font_is_bound ( plfont )		8099452	0		&&			
ANR	8099457	EqualityExpression	plfont -> storage != pcds_internal		8099452	0		!=			
ANR	8099458	PtrMemberAccess	plfont -> storage		8099452	0					
ANR	8099459	Identifier	plfont		8099452	0					
ANR	8099460	Identifier	storage		8099452	1					
ANR	8099461	Identifier	pcds_internal		8099452	1					
ANR	8099462	CallExpression	pl_font_is_bound ( plfont )		8099452	1					
ANR	8099463	Callee	pl_font_is_bound		8099452	0					
ANR	8099464	Identifier	pl_font_is_bound		8099452	0					
ANR	8099465	ArgumentList	plfont		8099452	1					
ANR	8099466	Argument	plfont		8099452	0					
ANR	8099467	Identifier	plfont		8099452	0					
ANR	8099468	ReturnType	bool		8099452	1					
ANR	8099469	Identifier	pcl_downloaded_and_bound		8099452	2					
ANR	8099470	ParameterList	const pl_font_t * plfont		8099452	3					
ANR	8099471	Parameter	const pl_font_t * plfont	63:25:1674:1697	8099452	0	True				
ANR	8099472	ParameterType	const pl_font_t *		8099452	0					
ANR	8099473	Identifier	plfont		8099452	1					
ANR	8099474	CFGEntryNode	ENTRY		8099452		True				
ANR	8099475	CFGExitNode	EXIT		8099452		True				
ANR	8099476	Symbol	pcds_internal		8099452						
ANR	8099477	Symbol	plfont -> storage		8099452						
ANR	8099478	Symbol	* plfont		8099452						
ANR	8099479	Symbol	plfont		8099452						
ANR	8099480	Symbol	pl_font_is_bound		8099452						
ANR	8099481	Function	char_is_printable	78:0:2126:3452							
ANR	8099482	FunctionDef	"char_is_printable (const pl_font_t * font , const pl_symbol_map_t * map , gs_char chr , bool is_stick , bool literal)"		8099481	0					
ANR	8099483	CompoundStatement		80:0:2242:3452	8099481	0					
ANR	8099484	IdentifierDeclStatement	bool printable = false ;	81:4:2248:2270	8099481	0	True				
ANR	8099485	IdentifierDecl	printable = false		8099481	0					
ANR	8099486	IdentifierDeclType	bool		8099481	0					
ANR	8099487	Identifier	printable		8099481	1					
ANR	8099488	AssignmentExpression	printable = false		8099481	2		=			
ANR	8099489	Identifier	false		8099481	0					
ANR	8099490	Identifier	false		8099481	1					
ANR	8099491	IfStatement	if ( literal )		8099481	1					
ANR	8099492	Condition	literal	83:8:2281:2287	8099481	0	True				
ANR	8099493	Identifier	literal		8099481	0					
ANR	8099494	CompoundStatement		4:17:47:47	8099481	1					
ANR	8099495	ExpressionStatement	printable = true	84:8:2336:2352	8099481	0	True				
ANR	8099496	AssignmentExpression	printable = true		8099481	0		=			
ANR	8099497	Identifier	printable		8099481	0					
ANR	8099498	Identifier	true		8099481	1					
ANR	8099499	ElseStatement	else		8099481	0					
ANR	8099500	CompoundStatement		6:11:122:122	8099481	0					
ANR	8099501	IfStatement	if ( is_stick )		8099481	0					
ANR	8099502	Condition	is_stick	86:8:2375:2382	8099481	0	True				
ANR	8099503	Identifier	is_stick		8099481	0					
ANR	8099504	CompoundStatement		7:18:142:142	8099481	1					
ANR	8099505	ExpressionStatement	printable = ( chr >= ' ' ) && ( chr <= 0xff )	87:8:2395:2436	8099481	0	True				
ANR	8099506	AssignmentExpression	printable = ( chr >= ' ' ) && ( chr <= 0xff )		8099481	0		=			
ANR	8099507	Identifier	printable		8099481	0					
ANR	8099508	AndExpression	( chr >= ' ' ) && ( chr <= 0xff )		8099481	1		&&			
ANR	8099509	RelationalExpression	chr >= ' '		8099481	0		>=			
ANR	8099510	Identifier	chr		8099481	0					
ANR	8099511	PrimaryExpression	' '		8099481	1					
ANR	8099512	RelationalExpression	chr <= 0xff		8099481	1		<=			
ANR	8099513	Identifier	chr		8099481	0					
ANR	8099514	PrimaryExpression	0xff		8099481	1					
ANR	8099515	ElseStatement	else		8099481	0					
ANR	8099516	CompoundStatement		10:8:216:232	8099481	0					
ANR	8099517	IdentifierDeclStatement	int map_type = 0 ;	89:8:2459:2475	8099481	0	True				
ANR	8099518	IdentifierDecl	map_type = 0		8099481	0					
ANR	8099519	IdentifierDeclType	int		8099481	0					
ANR	8099520	Identifier	map_type		8099481	1					
ANR	8099521	AssignmentExpression	map_type = 0		8099481	2		=			
ANR	8099522	Identifier	map_type		8099481	0					
ANR	8099523	PrimaryExpression	0		8099481	1					
ANR	8099524	IfStatement	if ( map == 0 || pcl_downloaded_and_bound ( font ) )		8099481	1					
ANR	8099525	Condition	map == 0 || pcl_downloaded_and_bound ( font )	90:12:2489:2530	8099481	0	True				
ANR	8099526	OrExpression	map == 0 || pcl_downloaded_and_bound ( font )		8099481	0		||			
ANR	8099527	EqualityExpression	map == 0		8099481	0		==			
ANR	8099528	Identifier	map		8099481	0					
ANR	8099529	PrimaryExpression	0		8099481	1					
ANR	8099530	CallExpression	pcl_downloaded_and_bound ( font )		8099481	1					
ANR	8099531	Callee	pcl_downloaded_and_bound		8099481	0					
ANR	8099532	Identifier	pcl_downloaded_and_bound		8099481	0					
ANR	8099533	ArgumentList	font		8099481	1					
ANR	8099534	Argument	font		8099481	0					
ANR	8099535	Identifier	font		8099481	0					
ANR	8099536	CompoundStatement		11:56:290:290	8099481	1					
ANR	8099537	IfStatement	if ( font )		8099481	0					
ANR	8099538	Condition	font	92:16:2579:2582	8099481	0	True				
ANR	8099539	Identifier	font		8099481	0					
ANR	8099540	CompoundStatement		14:12:354:354	8099481	1					
ANR	8099541	ExpressionStatement	map_type = font -> font_type	94:12:2611:2637	8099481	0	True				
ANR	8099542	AssignmentExpression	map_type = font -> font_type		8099481	0		=			
ANR	8099543	Identifier	map_type		8099481	0					
ANR	8099544	PtrMemberAccess	font -> font_type		8099481	1					
ANR	8099545	Identifier	font		8099481	0					
ANR	8099546	Identifier	font_type		8099481	1					
ANR	8099547	ElseStatement	else		8099481	0					
ANR	8099548	CompoundStatement		17:15:421:421	8099481	0					
ANR	8099549	ExpressionStatement	map_type = map -> type	100:8:2762:2782	8099481	0	True				
ANR	8099550	AssignmentExpression	map_type = map -> type		8099481	0		=			
ANR	8099551	Identifier	map_type		8099481	0					
ANR	8099552	PtrMemberAccess	map -> type		8099481	1					
ANR	8099553	Identifier	map		8099481	0					
ANR	8099554	Identifier	type		8099481	1					
ANR	8099555	IfStatement	if ( map_type == 0 )		8099481	2					
ANR	8099556	Condition	map_type == 0	104:12:2845:2857	8099481	0	True				
ANR	8099557	EqualityExpression	map_type == 0		8099481	0		==			
ANR	8099558	Identifier	map_type		8099481	0					
ANR	8099559	PrimaryExpression	0		8099481	1					
ANR	8099560	ExpressionStatement	map_type = 1	105:8:2868:2880	8099481	1	True				
ANR	8099561	AssignmentExpression	map_type = 1		8099481	0		=			
ANR	8099562	Identifier	map_type		8099481	0					
ANR	8099563	PrimaryExpression	1		8099481	1					
ANR	8099564	IfStatement	if ( map_type == 0 )		8099481	3					
ANR	8099565	Condition	map_type == 0	108:12:2938:2950	8099481	0	True				
ANR	8099566	EqualityExpression	map_type == 0		8099481	0		==			
ANR	8099567	Identifier	map_type		8099481	0					
ANR	8099568	PrimaryExpression	0		8099481	1					
ANR	8099569	ExpressionStatement	printable = ( chr >= ' ' ) && ( chr <= '\\177' )	109:8:2961:3004	8099481	1	True				
ANR	8099570	AssignmentExpression	printable = ( chr >= ' ' ) && ( chr <= '\\177' )		8099481	0		=			
ANR	8099571	Identifier	printable		8099481	0					
ANR	8099572	AndExpression	( chr >= ' ' ) && ( chr <= '\\177' )		8099481	1		&&			
ANR	8099573	RelationalExpression	chr >= ' '		8099481	0		>=			
ANR	8099574	Identifier	chr		8099481	0					
ANR	8099575	PrimaryExpression	' '		8099481	1					
ANR	8099576	RelationalExpression	chr <= '\\177'		8099481	1		<=			
ANR	8099577	Identifier	chr		8099481	0					
ANR	8099578	PrimaryExpression	'\\177'		8099481	1					
ANR	8099579	ElseStatement	else		8099481	0					
ANR	8099580	IfStatement	if ( map_type == 1 )		8099481	0					
ANR	8099581	Condition	map_type == 1	110:17:3023:3035	8099481	0	True				
ANR	8099582	EqualityExpression	map_type == 1		8099481	0		==			
ANR	8099583	Identifier	map_type		8099481	0					
ANR	8099584	PrimaryExpression	1		8099481	1					
ANR	8099585	CompoundStatement		31:32:795:795	8099481	1					
ANR	8099586	ExpressionStatement	chr &= 0x7f	111:8:3048:3059	8099481	0	True				
ANR	8099587	AssignmentExpression	chr &= 0x7f		8099481	0		&=			
ANR	8099588	Identifier	chr		8099481	0					
ANR	8099589	PrimaryExpression	0x7f		8099481	1					
ANR	8099590	ExpressionStatement	printable = ( chr >= ' ' )	112:8:3069:3093	8099481	1	True				
ANR	8099591	AssignmentExpression	printable = ( chr >= ' ' )		8099481	0		=			
ANR	8099592	Identifier	printable		8099481	0					
ANR	8099593	RelationalExpression	chr >= ' '		8099481	1		>=			
ANR	8099594	Identifier	chr		8099481	0					
ANR	8099595	PrimaryExpression	' '		8099481	1					
ANR	8099596	ElseStatement	else		8099481	0					
ANR	8099597	IfStatement	if ( map_type >= 2 )		8099481	0					
ANR	8099598	Condition	map_type >= 2	113:19:3157:3169	8099481	0	True				
ANR	8099599	RelationalExpression	map_type >= 2		8099481	0		>=			
ANR	8099600	Identifier	map_type		8099481	0					
ANR	8099601	PrimaryExpression	2		8099481	1					
ANR	8099602	CompoundStatement		34:34:929:929	8099481	1					
ANR	8099603	IfStatement	if ( ( chr == 0 ) || ( chr == '\\033' ) || ( ( chr >= '\\007' ) && ( chr <= '\\017' ) ) )		8099481	0					
ANR	8099604	Condition	( chr == 0 ) || ( chr == '\\033' ) || ( ( chr >= '\\007' ) && ( chr <= '\\017' ) )	115:12:3251:3331	8099481	0	True				
ANR	8099605	OrExpression	( chr == 0 ) || ( chr == '\\033' ) || ( ( chr >= '\\007' ) && ( chr <= '\\017' ) )		8099481	0		||			
ANR	8099606	EqualityExpression	chr == 0		8099481	0		==			
ANR	8099607	Identifier	chr		8099481	0					
ANR	8099608	PrimaryExpression	0		8099481	1					
ANR	8099609	OrExpression	( chr == '\\033' ) || ( ( chr >= '\\007' ) && ( chr <= '\\017' ) )		8099481	1		||			
ANR	8099610	EqualityExpression	chr == '\\033'		8099481	0		==			
ANR	8099611	Identifier	chr		8099481	0					
ANR	8099612	PrimaryExpression	'\\033'		8099481	1					
ANR	8099613	AndExpression	( chr >= '\\007' ) && ( chr <= '\\017' )		8099481	1		&&			
ANR	8099614	RelationalExpression	chr >= '\\007'		8099481	0		>=			
ANR	8099615	Identifier	chr		8099481	0					
ANR	8099616	PrimaryExpression	'\\007'		8099481	1					
ANR	8099617	RelationalExpression	chr <= '\\017'		8099481	1		<=			
ANR	8099618	Identifier	chr		8099481	0					
ANR	8099619	PrimaryExpression	'\\017'		8099481	1					
ANR	8099620	ExpressionStatement	printable = false	117:12:3346:3363	8099481	1	True				
ANR	8099621	AssignmentExpression	printable = false		8099481	0		=			
ANR	8099622	Identifier	printable		8099481	0					
ANR	8099623	Identifier	false		8099481	1					
ANR	8099624	ElseStatement	else		8099481	0					
ANR	8099625	ExpressionStatement	printable = true	119:12:3390:3406	8099481	0	True				
ANR	8099626	AssignmentExpression	printable = true		8099481	0		=			
ANR	8099627	Identifier	printable		8099481	0					
ANR	8099628	Identifier	true		8099481	1					
ANR	8099629	ReturnStatement	return printable ;	123:4:3434:3450	8099481	2	True				
ANR	8099630	Identifier	printable		8099481	0					
ANR	8099631	ReturnType	bool		8099481	1					
ANR	8099632	Identifier	char_is_printable		8099481	2					
ANR	8099633	ParameterList	"const pl_font_t * font , const pl_symbol_map_t * map , gs_char chr , bool is_stick , bool literal"		8099481	3					
ANR	8099634	Parameter	const pl_font_t * font	79:18:2149:2169	8099481	0	True				
ANR	8099635	ParameterType	const pl_font_t *		8099481	0					
ANR	8099636	Identifier	font		8099481	1					
ANR	8099637	Parameter	const pl_symbol_map_t * map	79:41:2172:2197	8099481	1	True				
ANR	8099638	ParameterType	const pl_symbol_map_t *		8099481	0					
ANR	8099639	Identifier	map		8099481	1					
ANR	8099640	Parameter	gs_char chr	79:69:2200:2210	8099481	2	True				
ANR	8099641	ParameterType	gs_char		8099481	0					
ANR	8099642	Identifier	chr		8099481	1					
ANR	8099643	Parameter	bool is_stick	79:82:2213:2225	8099481	3	True				
ANR	8099644	ParameterType	bool		8099481	0					
ANR	8099645	Identifier	is_stick		8099481	1					
ANR	8099646	Parameter	bool literal	79:97:2228:2239	8099481	4	True				
ANR	8099647	ParameterType	bool		8099481	0					
ANR	8099648	Identifier	literal		8099481	1					
ANR	8099649	CFGEntryNode	ENTRY		8099481		True				
ANR	8099650	CFGExitNode	EXIT		8099481		True				
ANR	8099651	Symbol	* map		8099481						
ANR	8099652	Symbol	false		8099481						
ANR	8099653	Symbol	chr		8099481						
ANR	8099654	Symbol	printable		8099481						
ANR	8099655	Symbol	map -> type		8099481						
ANR	8099656	Symbol	literal		8099481						
ANR	8099657	Symbol	map_type		8099481						
ANR	8099658	Symbol	pcl_downloaded_and_bound		8099481						
ANR	8099659	Symbol	is_stick		8099481						
ANR	8099660	Symbol	font -> font_type		8099481						
ANR	8099661	Symbol	true		8099481						
ANR	8099662	Symbol	* font		8099481						
ANR	8099663	Symbol	map		8099481						
ANR	8099664	Symbol	font		8099481						
ANR	8099665	Function	substituting_allowed	126:0:3455:5638							
ANR	8099666	FunctionDef	"substituting_allowed (pcl_state_t * pcs , gs_char mapped_chr)"		8099665	0					
ANR	8099667	CompoundStatement		128:0:3527:5638	8099665	0					
ANR	8099668	IdentifierDeclStatement	gs_char remapped_chr ;	129:4:3533:3553	8099665	0	True				
ANR	8099669	IdentifierDecl	remapped_chr		8099665	0					
ANR	8099670	IdentifierDeclType	gs_char		8099665	0					
ANR	8099671	Identifier	remapped_chr		8099665	1					
ANR	8099672	IfStatement	if ( ( pcs -> map && pcs -> map -> format == 1 ) || ( pcs -> font -> scaling_technology == plfst_bitmap ) || ( ! ( pcs -> font -> storage & pcds_downloaded ) ) )		8099665	1					
ANR	8099673	Condition	( pcs -> map && pcs -> map -> format == 1 ) || ( pcs -> font -> scaling_technology == plfst_bitmap ) || ( ! ( pcs -> font -> storage & pcds_downloaded ) )	133:11:3642:3921	8099665	0	True				
ANR	8099674	OrExpression	( pcs -> map && pcs -> map -> format == 1 ) || ( pcs -> font -> scaling_technology == plfst_bitmap ) || ( ! ( pcs -> font -> storage & pcds_downloaded ) )		8099665	0		||			
ANR	8099675	AndExpression	pcs -> map && pcs -> map -> format == 1		8099665	0		&&			
ANR	8099676	PtrMemberAccess	pcs -> map		8099665	0					
ANR	8099677	Identifier	pcs		8099665	0					
ANR	8099678	Identifier	map		8099665	1					
ANR	8099679	EqualityExpression	pcs -> map -> format == 1		8099665	1		==			
ANR	8099680	PtrMemberAccess	pcs -> map -> format		8099665	0					
ANR	8099681	PtrMemberAccess	pcs -> map		8099665	0					
ANR	8099682	Identifier	pcs		8099665	0					
ANR	8099683	Identifier	map		8099665	1					
ANR	8099684	Identifier	format		8099665	1					
ANR	8099685	PrimaryExpression	1		8099665	1					
ANR	8099686	OrExpression	( pcs -> font -> scaling_technology == plfst_bitmap ) || ( ! ( pcs -> font -> storage & pcds_downloaded ) )		8099665	1		||			
ANR	8099687	EqualityExpression	pcs -> font -> scaling_technology == plfst_bitmap		8099665	0		==			
ANR	8099688	PtrMemberAccess	pcs -> font -> scaling_technology		8099665	0					
ANR	8099689	PtrMemberAccess	pcs -> font		8099665	0					
ANR	8099690	Identifier	pcs		8099665	0					
ANR	8099691	Identifier	font		8099665	1					
ANR	8099692	Identifier	scaling_technology		8099665	1					
ANR	8099693	Identifier	plfst_bitmap		8099665	1					
ANR	8099694	UnaryOperationExpression	! ( pcs -> font -> storage & pcds_downloaded )		8099665	1					
ANR	8099695	UnaryOperator	!		8099665	0					
ANR	8099696	BitAndExpression	pcs -> font -> storage & pcds_downloaded		8099665	1		&			
ANR	8099697	PtrMemberAccess	pcs -> font -> storage		8099665	0					
ANR	8099698	PtrMemberAccess	pcs -> font		8099665	0					
ANR	8099699	Identifier	pcs		8099665	0					
ANR	8099700	Identifier	font		8099665	1					
ANR	8099701	Identifier	storage		8099665	1					
ANR	8099702	Identifier	pcds_downloaded		8099665	1					
ANR	8099703	ReturnStatement	return false ;	138:8:3932:3944	8099665	1	True				
ANR	8099704	Identifier	false		8099665	0					
ANR	8099705	ExpressionStatement	"remapped_chr = pl_map_symbol ( pcs -> map , mapped_chr , false , false , pcs -> memory )"	143:4:4074:4268	8099665	2	True				
ANR	8099706	AssignmentExpression	"remapped_chr = pl_map_symbol ( pcs -> map , mapped_chr , false , false , pcs -> memory )"		8099665	0		=			
ANR	8099707	Identifier	remapped_chr		8099665	0					
ANR	8099708	CallExpression	"pl_map_symbol ( pcs -> map , mapped_chr , false , false , pcs -> memory )"		8099665	1					
ANR	8099709	Callee	pl_map_symbol		8099665	0					
ANR	8099710	Identifier	pl_map_symbol		8099665	0					
ANR	8099711	ArgumentList	pcs -> map		8099665	1					
ANR	8099712	Argument	pcs -> map		8099665	0					
ANR	8099713	PtrMemberAccess	pcs -> map		8099665	0					
ANR	8099714	Identifier	pcs		8099665	0					
ANR	8099715	Identifier	map		8099665	1					
ANR	8099716	Argument	mapped_chr		8099665	1					
ANR	8099717	Identifier	mapped_chr		8099665	0					
ANR	8099718	Argument	false		8099665	2					
ANR	8099719	Identifier	false		8099665	0					
ANR	8099720	Argument	false		8099665	3					
ANR	8099721	Identifier	false		8099665	0					
ANR	8099722	Argument	pcs -> memory		8099665	4					
ANR	8099723	PtrMemberAccess	pcs -> memory		8099665	0					
ANR	8099724	Identifier	pcs		8099665	0					
ANR	8099725	Identifier	memory		8099665	1					
ANR	8099726	IfStatement	if ( ( ( remapped_chr >= 0x2190 ) && ( remapped_chr <= 0x21FF ) ) || ( ( remapped_chr >= 0x0370 ) && ( remapped_chr <= 0x03FF ) ) || ( ( remapped_chr >= 0x2200 ) && ( remapped_chr <= 0x22FF ) ) || ( ( remapped_chr >= 0x2500 ) && ( remapped_chr <= 0x257F ) ) || ( ( remapped_chr >= 0x2580 ) && ( remapped_chr <= 0x259F ) ) || ( ( remapped_chr >= 0x25A0 ) && ( remapped_chr <= 0x25FF ) ) || ( ( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF ) ) || ( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) ) )		8099665	3					
ANR	8099727	Condition	( ( remapped_chr >= 0x2190 ) && ( remapped_chr <= 0x21FF ) ) || ( ( remapped_chr >= 0x0370 ) && ( remapped_chr <= 0x03FF ) ) || ( ( remapped_chr >= 0x2200 ) && ( remapped_chr <= 0x22FF ) ) || ( ( remapped_chr >= 0x2500 ) && ( remapped_chr <= 0x257F ) ) || ( ( remapped_chr >= 0x2580 ) && ( remapped_chr <= 0x259F ) ) || ( ( remapped_chr >= 0x25A0 ) && ( remapped_chr <= 0x25FF ) ) || ( ( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF ) ) || ( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )	150:11:4370:5587	8099665	0	True				
ANR	8099728	OrExpression	( ( remapped_chr >= 0x2190 ) && ( remapped_chr <= 0x21FF ) ) || ( ( remapped_chr >= 0x0370 ) && ( remapped_chr <= 0x03FF ) ) || ( ( remapped_chr >= 0x2200 ) && ( remapped_chr <= 0x22FF ) ) || ( ( remapped_chr >= 0x2500 ) && ( remapped_chr <= 0x257F ) ) || ( ( remapped_chr >= 0x2580 ) && ( remapped_chr <= 0x259F ) ) || ( ( remapped_chr >= 0x25A0 ) && ( remapped_chr <= 0x25FF ) ) || ( ( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF ) ) || ( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )		8099665	0		||			
ANR	8099729	AndExpression	( remapped_chr >= 0x2190 ) && ( remapped_chr <= 0x21FF )		8099665	0		&&			
ANR	8099730	RelationalExpression	remapped_chr >= 0x2190		8099665	0		>=			
ANR	8099731	Identifier	remapped_chr		8099665	0					
ANR	8099732	PrimaryExpression	0x2190		8099665	1					
ANR	8099733	RelationalExpression	remapped_chr <= 0x21FF		8099665	1		<=			
ANR	8099734	Identifier	remapped_chr		8099665	0					
ANR	8099735	PrimaryExpression	0x21FF		8099665	1					
ANR	8099736	OrExpression	( ( remapped_chr >= 0x0370 ) && ( remapped_chr <= 0x03FF ) ) || ( ( remapped_chr >= 0x2200 ) && ( remapped_chr <= 0x22FF ) ) || ( ( remapped_chr >= 0x2500 ) && ( remapped_chr <= 0x257F ) ) || ( ( remapped_chr >= 0x2580 ) && ( remapped_chr <= 0x259F ) ) || ( ( remapped_chr >= 0x25A0 ) && ( remapped_chr <= 0x25FF ) ) || ( ( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF ) ) || ( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )		8099665	1		||			
ANR	8099737	AndExpression	( remapped_chr >= 0x0370 ) && ( remapped_chr <= 0x03FF )		8099665	0		&&			
ANR	8099738	RelationalExpression	remapped_chr >= 0x0370		8099665	0		>=			
ANR	8099739	Identifier	remapped_chr		8099665	0					
ANR	8099740	PrimaryExpression	0x0370		8099665	1					
ANR	8099741	RelationalExpression	remapped_chr <= 0x03FF		8099665	1		<=			
ANR	8099742	Identifier	remapped_chr		8099665	0					
ANR	8099743	PrimaryExpression	0x03FF		8099665	1					
ANR	8099744	OrExpression	( ( remapped_chr >= 0x2200 ) && ( remapped_chr <= 0x22FF ) ) || ( ( remapped_chr >= 0x2500 ) && ( remapped_chr <= 0x257F ) ) || ( ( remapped_chr >= 0x2580 ) && ( remapped_chr <= 0x259F ) ) || ( ( remapped_chr >= 0x25A0 ) && ( remapped_chr <= 0x25FF ) ) || ( ( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF ) ) || ( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )		8099665	1		||			
ANR	8099745	AndExpression	( remapped_chr >= 0x2200 ) && ( remapped_chr <= 0x22FF )		8099665	0		&&			
ANR	8099746	RelationalExpression	remapped_chr >= 0x2200		8099665	0		>=			
ANR	8099747	Identifier	remapped_chr		8099665	0					
ANR	8099748	PrimaryExpression	0x2200		8099665	1					
ANR	8099749	RelationalExpression	remapped_chr <= 0x22FF		8099665	1		<=			
ANR	8099750	Identifier	remapped_chr		8099665	0					
ANR	8099751	PrimaryExpression	0x22FF		8099665	1					
ANR	8099752	OrExpression	( ( remapped_chr >= 0x2500 ) && ( remapped_chr <= 0x257F ) ) || ( ( remapped_chr >= 0x2580 ) && ( remapped_chr <= 0x259F ) ) || ( ( remapped_chr >= 0x25A0 ) && ( remapped_chr <= 0x25FF ) ) || ( ( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF ) ) || ( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )		8099665	1		||			
ANR	8099753	AndExpression	( remapped_chr >= 0x2500 ) && ( remapped_chr <= 0x257F )		8099665	0		&&			
ANR	8099754	RelationalExpression	remapped_chr >= 0x2500		8099665	0		>=			
ANR	8099755	Identifier	remapped_chr		8099665	0					
ANR	8099756	PrimaryExpression	0x2500		8099665	1					
ANR	8099757	RelationalExpression	remapped_chr <= 0x257F		8099665	1		<=			
ANR	8099758	Identifier	remapped_chr		8099665	0					
ANR	8099759	PrimaryExpression	0x257F		8099665	1					
ANR	8099760	OrExpression	( ( remapped_chr >= 0x2580 ) && ( remapped_chr <= 0x259F ) ) || ( ( remapped_chr >= 0x25A0 ) && ( remapped_chr <= 0x25FF ) ) || ( ( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF ) ) || ( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )		8099665	1		||			
ANR	8099761	AndExpression	( remapped_chr >= 0x2580 ) && ( remapped_chr <= 0x259F )		8099665	0		&&			
ANR	8099762	RelationalExpression	remapped_chr >= 0x2580		8099665	0		>=			
ANR	8099763	Identifier	remapped_chr		8099665	0					
ANR	8099764	PrimaryExpression	0x2580		8099665	1					
ANR	8099765	RelationalExpression	remapped_chr <= 0x259F		8099665	1		<=			
ANR	8099766	Identifier	remapped_chr		8099665	0					
ANR	8099767	PrimaryExpression	0x259F		8099665	1					
ANR	8099768	OrExpression	( ( remapped_chr >= 0x25A0 ) && ( remapped_chr <= 0x25FF ) ) || ( ( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF ) ) || ( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )		8099665	1		||			
ANR	8099769	AndExpression	( remapped_chr >= 0x25A0 ) && ( remapped_chr <= 0x25FF )		8099665	0		&&			
ANR	8099770	RelationalExpression	remapped_chr >= 0x25A0		8099665	0		>=			
ANR	8099771	Identifier	remapped_chr		8099665	0					
ANR	8099772	PrimaryExpression	0x25A0		8099665	1					
ANR	8099773	RelationalExpression	remapped_chr <= 0x25FF		8099665	1		<=			
ANR	8099774	Identifier	remapped_chr		8099665	0					
ANR	8099775	PrimaryExpression	0x25FF		8099665	1					
ANR	8099776	OrExpression	( ( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF ) ) || ( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )		8099665	1		||			
ANR	8099777	AndExpression	( remapped_chr >= 0x2600 ) && ( remapped_chr <= 0x26FF )		8099665	0		&&			
ANR	8099778	RelationalExpression	remapped_chr >= 0x2600		8099665	0		>=			
ANR	8099779	Identifier	remapped_chr		8099665	0					
ANR	8099780	PrimaryExpression	0x2600		8099665	1					
ANR	8099781	RelationalExpression	remapped_chr <= 0x26FF		8099665	1		<=			
ANR	8099782	Identifier	remapped_chr		8099665	0					
ANR	8099783	PrimaryExpression	0x26FF		8099665	1					
ANR	8099784	OrExpression	( ( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF ) ) || ( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )		8099665	1		||			
ANR	8099785	AndExpression	( remapped_chr >= 0x2300 ) && ( remapped_chr <= 0x23FF )		8099665	0		&&			
ANR	8099786	RelationalExpression	remapped_chr >= 0x2300		8099665	0		>=			
ANR	8099787	Identifier	remapped_chr		8099665	0					
ANR	8099788	PrimaryExpression	0x2300		8099665	1					
ANR	8099789	RelationalExpression	remapped_chr <= 0x23FF		8099665	1		<=			
ANR	8099790	Identifier	remapped_chr		8099665	0					
ANR	8099791	PrimaryExpression	0x23FF		8099665	1					
ANR	8099792	OrExpression	( ( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F ) ) || ( ( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 ) )		8099665	1		||			
ANR	8099793	AndExpression	( remapped_chr >= 0x2000 ) && ( remapped_chr <= 0x206F )		8099665	0		&&			
ANR	8099794	RelationalExpression	remapped_chr >= 0x2000		8099665	0		>=			
ANR	8099795	Identifier	remapped_chr		8099665	0					
ANR	8099796	PrimaryExpression	0x2000		8099665	1					
ANR	8099797	RelationalExpression	remapped_chr <= 0x206F		8099665	1		<=			
ANR	8099798	Identifier	remapped_chr		8099665	0					
ANR	8099799	PrimaryExpression	0x206F		8099665	1					
ANR	8099800	OrExpression	( remapped_chr == 0x007C ) || ( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 )		8099665	1		||			
ANR	8099801	EqualityExpression	remapped_chr == 0x007C		8099665	0		==			
ANR	8099802	Identifier	remapped_chr		8099665	0					
ANR	8099803	PrimaryExpression	0x007C		8099665	1					
ANR	8099804	OrExpression	( remapped_chr == 0x003C ) || ( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 )		8099665	1		||			
ANR	8099805	EqualityExpression	remapped_chr == 0x003C		8099665	0		==			
ANR	8099806	Identifier	remapped_chr		8099665	0					
ANR	8099807	PrimaryExpression	0x003C		8099665	1					
ANR	8099808	OrExpression	( remapped_chr == 0x003E ) || ( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 )		8099665	1		||			
ANR	8099809	EqualityExpression	remapped_chr == 0x003E		8099665	0		==			
ANR	8099810	Identifier	remapped_chr		8099665	0					
ANR	8099811	PrimaryExpression	0x003E		8099665	1					
ANR	8099812	OrExpression	( remapped_chr == 0x005F ) || ( remapped_chr == 0x00B5 )		8099665	1		||			
ANR	8099813	EqualityExpression	remapped_chr == 0x005F		8099665	0		==			
ANR	8099814	Identifier	remapped_chr		8099665	0					
ANR	8099815	PrimaryExpression	0x005F		8099665	1					
ANR	8099816	EqualityExpression	remapped_chr == 0x00B5		8099665	1		==			
ANR	8099817	Identifier	remapped_chr		8099665	0					
ANR	8099818	PrimaryExpression	0x00B5		8099665	1					
ANR	8099819	ReturnStatement	return true ;	172:8:5607:5618	8099665	1	True				
ANR	8099820	Identifier	true		8099665	0					
ANR	8099821	ReturnStatement	return false ;	173:4:5624:5636	8099665	4	True				
ANR	8099822	Identifier	false		8099665	0					
ANR	8099823	ReturnType	static bool		8099665	1					
ANR	8099824	Identifier	substituting_allowed		8099665	2					
ANR	8099825	ParameterList	"pcl_state_t * pcs , gs_char mapped_chr"		8099665	3					
ANR	8099826	Parameter	pcl_state_t * pcs	127:21:3488:3504	8099665	0	True				
ANR	8099827	ParameterType	pcl_state_t *		8099665	0					
ANR	8099828	Identifier	pcs		8099665	1					
ANR	8099829	Parameter	gs_char mapped_chr	127:40:3507:3524	8099665	1	True				
ANR	8099830	ParameterType	gs_char		8099665	0					
ANR	8099831	Identifier	mapped_chr		8099665	1					
ANR	8099832	CFGEntryNode	ENTRY		8099665		True				
ANR	8099833	CFGExitNode	EXIT		8099665		True				
ANR	8099834	Symbol	pcs		8099665						
ANR	8099835	Symbol	* pcs -> map		8099665						
ANR	8099836	Symbol	plfst_bitmap		8099665						
ANR	8099837	Symbol	pcs -> map		8099665						
ANR	8099838	Symbol	false		8099665						
ANR	8099839	Symbol	pcs -> font -> scaling_technology		8099665						
ANR	8099840	Symbol	* pcs		8099665						
ANR	8099841	Symbol	pcds_downloaded		8099665						
ANR	8099842	Symbol	* pcs -> font		8099665						
ANR	8099843	Symbol	pcs -> font		8099665						
ANR	8099844	Symbol	* * pcs		8099665						
ANR	8099845	Symbol	pcs -> map -> format		8099665						
ANR	8099846	Symbol	pcs -> font -> storage		8099665						
ANR	8099847	Symbol	true		8099665						
ANR	8099848	Symbol	mapped_chr		8099665						
ANR	8099849	Symbol	remapped_chr		8099665						
ANR	8099850	Symbol	pcs -> memory		8099665						
ANR	8099851	Symbol	pl_map_symbol		8099665						
ANR	8099852	Function	get_next_char	200:0:6912:10811							
ANR	8099853	FunctionDef	"get_next_char (pcl_state_t * pcs , const byte * * ppb , uint * plen , gs_char * pchr , gs_char * porig_char , bool * pis_space , bool * pprint_undefined , bool literal , gs_point * pwidth , bool * unstyled_substitution)"		8099852	0					
ANR	8099854	CompoundStatement		209:0:7230:10811	8099852	0					
ANR	8099855	IdentifierDeclStatement	const byte * pb = * ppb ;	210:4:7236:7257	8099852	0	True				
ANR	8099856	IdentifierDecl	* pb = * ppb		8099852	0					
ANR	8099857	IdentifierDeclType	const byte *		8099852	0					
ANR	8099858	Identifier	pb		8099852	1					
ANR	8099859	AssignmentExpression	* pb = * ppb		8099852	2		=			
ANR	8099860	Identifier	pb		8099852	0					
ANR	8099861	UnaryOperationExpression	* ppb		8099852	1					
ANR	8099862	UnaryOperator	*		8099852	0					
ANR	8099863	Identifier	ppb		8099852	1					
ANR	8099864	IdentifierDeclStatement	int len = * plen ;	211:4:7263:7278	8099852	1	True				
ANR	8099865	IdentifierDecl	len = * plen		8099852	0					
ANR	8099866	IdentifierDeclType	int		8099852	0					
ANR	8099867	Identifier	len		8099852	1					
ANR	8099868	AssignmentExpression	len = * plen		8099852	2		=			
ANR	8099869	Identifier	len		8099852	0					
ANR	8099870	UnaryOperationExpression	* plen		8099852	1					
ANR	8099871	UnaryOperator	*		8099852	0					
ANR	8099872	Identifier	plen		8099852	1					
ANR	8099873	IdentifierDeclStatement	pl_font_t * plfont = pcs -> font ;	212:4:7284:7313	8099852	2	True				
ANR	8099874	IdentifierDecl	* plfont = pcs -> font		8099852	0					
ANR	8099875	IdentifierDeclType	pl_font_t *		8099852	0					
ANR	8099876	Identifier	plfont		8099852	1					
ANR	8099877	AssignmentExpression	* plfont = pcs -> font		8099852	2		=			
ANR	8099878	Identifier	plfont		8099852	0					
ANR	8099879	PtrMemberAccess	pcs -> font		8099852	1					
ANR	8099880	Identifier	pcs		8099852	0					
ANR	8099881	Identifier	font		8099852	1					
ANR	8099882	IdentifierDeclStatement	bool substituting = false ;	213:4:7319:7344	8099852	3	True				
ANR	8099883	IdentifierDecl	substituting = false		8099852	0					
ANR	8099884	IdentifierDeclType	bool		8099852	0					
ANR	8099885	Identifier	substituting		8099852	1					
ANR	8099886	AssignmentExpression	substituting = false		8099852	2		=			
ANR	8099887	Identifier	false		8099852	0					
ANR	8099888	Identifier	false		8099852	1					
ANR	8099889	IdentifierDeclStatement	int code = 0 ;	214:4:7350:7362	8099852	4	True				
ANR	8099890	IdentifierDecl	code = 0		8099852	0					
ANR	8099891	IdentifierDeclType	int		8099852	0					
ANR	8099892	Identifier	code		8099852	1					
ANR	8099893	AssignmentExpression	code = 0		8099852	2		=			
ANR	8099894	Identifier	code		8099852	0					
ANR	8099895	PrimaryExpression	0		8099852	1					
ANR	8099896	IdentifierDeclStatement	gs_char chr ;	215:4:7368:7379	8099852	5	True				
ANR	8099897	IdentifierDecl	chr		8099852	0					
ANR	8099898	IdentifierDeclType	gs_char		8099852	0					
ANR	8099899	Identifier	chr		8099852	1					
ANR	8099900	IdentifierDeclStatement	gs_char mapped_chr ;	216:4:7385:7403	8099852	6	True				
ANR	8099901	IdentifierDecl	mapped_chr		8099852	0					
ANR	8099902	IdentifierDeclType	gs_char		8099852	0					
ANR	8099903	Identifier	mapped_chr		8099852	1					
ANR	8099904	IdentifierDeclStatement	bool db ;	217:4:7437:7444	8099852	7	True				
ANR	8099905	IdentifierDecl	db		8099852	0					
ANR	8099906	IdentifierDeclType	bool		8099852	0					
ANR	8099907	Identifier	db		8099852	1					
ANR	8099908	IfStatement	if ( len <= 0 )		8099852	8					
ANR	8099909	Condition	len <= 0	219:8:7455:7462	8099852	0	True				
ANR	8099910	RelationalExpression	len <= 0		8099852	0		<=			
ANR	8099911	Identifier	len		8099852	0					
ANR	8099912	PrimaryExpression	0		8099852	1					
ANR	8099913	ReturnStatement	return 2 ;	220:8:7473:7481	8099852	1	True				
ANR	8099914	PrimaryExpression	2		8099852	0					
ANR	8099915	ExpressionStatement	* pis_space = false	221:4:7487:7505	8099852	9	True				
ANR	8099916	AssignmentExpression	* pis_space = false		8099852	0		=			
ANR	8099917	UnaryOperationExpression	* pis_space		8099852	0					
ANR	8099918	UnaryOperator	*		8099852	0					
ANR	8099919	Identifier	pis_space		8099852	1					
ANR	8099920	Identifier	false		8099852	1					
ANR	8099921	ExpressionStatement	* unstyled_substitution = false	222:4:7511:7541	8099852	10	True				
ANR	8099922	AssignmentExpression	* unstyled_substitution = false		8099852	0		=			
ANR	8099923	UnaryOperationExpression	* unstyled_substitution		8099852	0					
ANR	8099924	UnaryOperator	*		8099852	0					
ANR	8099925	Identifier	unstyled_substitution		8099852	1					
ANR	8099926	Identifier	false		8099852	1					
ANR	8099927	ExpressionStatement	"chr = pcl_char_get_char ( pcs -> text_parsing_method , & pb , len )"	223:4:7547:7606	8099852	11	True				
ANR	8099928	AssignmentExpression	"chr = pcl_char_get_char ( pcs -> text_parsing_method , & pb , len )"		8099852	0		=			
ANR	8099929	Identifier	chr		8099852	0					
ANR	8099930	CallExpression	"pcl_char_get_char ( pcs -> text_parsing_method , & pb , len )"		8099852	1					
ANR	8099931	Callee	pcl_char_get_char		8099852	0					
ANR	8099932	Identifier	pcl_char_get_char		8099852	0					
ANR	8099933	ArgumentList	pcs -> text_parsing_method		8099852	1					
ANR	8099934	Argument	pcs -> text_parsing_method		8099852	0					
ANR	8099935	PtrMemberAccess	pcs -> text_parsing_method		8099852	0					
ANR	8099936	Identifier	pcs		8099852	0					
ANR	8099937	Identifier	text_parsing_method		8099852	1					
ANR	8099938	Argument	& pb		8099852	1					
ANR	8099939	UnaryOperationExpression	& pb		8099852	0					
ANR	8099940	UnaryOperator	&		8099852	0					
ANR	8099941	Identifier	pb		8099852	1					
ANR	8099942	Argument	len		8099852	2					
ANR	8099943	Identifier	len		8099852	0					
ANR	8099944	IfStatement	if ( pb == * ppb )		8099852	12					
ANR	8099945	Condition	pb == * ppb	225:8:7668:7677	8099852	0	True				
ANR	8099946	EqualityExpression	pb == * ppb		8099852	0		==			
ANR	8099947	Identifier	pb		8099852	0					
ANR	8099948	UnaryOperationExpression	* ppb		8099852	1					
ANR	8099949	UnaryOperator	*		8099852	0					
ANR	8099950	Identifier	ppb		8099852	1					
ANR	8099951	CompoundStatement		17:20:449:449	8099852	1					
ANR	8099952	ExpressionStatement	pb ++	226:8:7690:7694	8099852	0	True				
ANR	8099953	PostIncDecOperationExpression	pb ++		8099852	0					
ANR	8099954	Identifier	pb		8099852	0					
ANR	8099955	IncDec	++		8099852	1					
ANR	8099956	ExpressionStatement	len -= ( pb - * ppb )	228:4:7706:7724	8099852	13	True				
ANR	8099957	AssignmentExpression	len -= ( pb - * ppb )		8099852	0		-=			
ANR	8099958	Identifier	len		8099852	0					
ANR	8099959	AdditiveExpression	pb - * ppb		8099852	1		-			
ANR	8099960	Identifier	pb		8099852	0					
ANR	8099961	UnaryOperationExpression	* ppb		8099852	1					
ANR	8099962	UnaryOperator	*		8099852	0					
ANR	8099963	Identifier	ppb		8099852	1					
ANR	8099964	ExpressionStatement	* ppb = pb	229:4:7730:7739	8099852	14	True				
ANR	8099965	AssignmentExpression	* ppb = pb		8099852	0		=			
ANR	8099966	UnaryOperationExpression	* ppb		8099852	0					
ANR	8099967	UnaryOperator	*		8099852	0					
ANR	8099968	Identifier	ppb		8099852	1					
ANR	8099969	Identifier	pb		8099852	1					
ANR	8099970	ExpressionStatement	* plen = len	230:4:7745:7756	8099852	15	True				
ANR	8099971	AssignmentExpression	* plen = len		8099852	0		=			
ANR	8099972	UnaryOperationExpression	* plen		8099852	0					
ANR	8099973	UnaryOperator	*		8099852	0					
ANR	8099974	Identifier	plen		8099852	1					
ANR	8099975	Identifier	len		8099852	1					
ANR	8099976	ExpressionStatement	* porig_char = chr	231:4:7762:7779	8099852	16	True				
ANR	8099977	AssignmentExpression	* porig_char = chr		8099852	0		=			
ANR	8099978	UnaryOperationExpression	* porig_char		8099852	0					
ANR	8099979	UnaryOperator	*		8099852	0					
ANR	8099980	Identifier	porig_char		8099852	1					
ANR	8099981	Identifier	chr		8099852	1					
ANR	8099982	IfStatement	"if ( ! char_is_printable ( pcs -> font , pcs -> map , chr , false , literal ) )"		8099852	17					
ANR	8099983	Condition	"! char_is_printable ( pcs -> font , pcs -> map , chr , false , literal )"	233:8:7869:7928	8099852	0	True				
ANR	8099984	UnaryOperationExpression	"! char_is_printable ( pcs -> font , pcs -> map , chr , false , literal )"		8099852	0					
ANR	8099985	UnaryOperator	!		8099852	0					
ANR	8099986	CallExpression	"char_is_printable ( pcs -> font , pcs -> map , chr , false , literal )"		8099852	1					
ANR	8099987	Callee	char_is_printable		8099852	0					
ANR	8099988	Identifier	char_is_printable		8099852	0					
ANR	8099989	ArgumentList	pcs -> font		8099852	1					
ANR	8099990	Argument	pcs -> font		8099852	0					
ANR	8099991	PtrMemberAccess	pcs -> font		8099852	0					
ANR	8099992	Identifier	pcs		8099852	0					
ANR	8099993	Identifier	font		8099852	1					
ANR	8099994	Argument	pcs -> map		8099852	1					
ANR	8099995	PtrMemberAccess	pcs -> map		8099852	0					
ANR	8099996	Identifier	pcs		8099852	0					
ANR	8099997	Identifier	map		8099852	1					
ANR	8099998	Argument	chr		8099852	2					
ANR	8099999	Identifier	chr		8099852	0					
ANR	8100000	Argument	false		8099852	3					
ANR	8100001	Identifier	false		8099852	0					
ANR	8100002	Argument	literal		8099852	4					
ANR	8100003	Identifier	literal		8099852	0					
ANR	8100004	CompoundStatement		25:70:700:700	8099852	1					
ANR	8100005	ExpressionStatement	* pis_space = literal	234:8:7941:7961	8099852	0	True				
ANR	8100006	AssignmentExpression	* pis_space = literal		8099852	0		=			
ANR	8100007	UnaryOperationExpression	* pis_space		8099852	0					
ANR	8100008	UnaryOperator	*		8099852	0					
ANR	8100009	Identifier	pis_space		8099852	1					
ANR	8100010	Identifier	literal		8099852	1					
ANR	8100011	ExpressionStatement	* pchr = 0xffff	235:8:7971:7985	8099852	1	True				
ANR	8100012	AssignmentExpression	* pchr = 0xffff		8099852	0		=			
ANR	8100013	UnaryOperationExpression	* pchr		8099852	0					
ANR	8100014	UnaryOperator	*		8099852	0					
ANR	8100015	Identifier	pchr		8099852	1					
ANR	8100016	PrimaryExpression	0xffff		8099852	1					
ANR	8100017	ReturnStatement	return 0 ;	236:8:7995:8003	8099852	2	True				
ANR	8100018	PrimaryExpression	0		8099852	0					
ANR	8100019	Label	r :	242:2:8210:8211	8099852	18	True				
ANR	8100020	Identifier	r		8099852	0					
ANR	8100021	ExpressionStatement	db = pcl_downloaded_and_bound ( plfont )	242:4:8212:8249	8099852	19	True				
ANR	8100022	AssignmentExpression	db = pcl_downloaded_and_bound ( plfont )		8099852	0		=			
ANR	8100023	Identifier	db		8099852	0					
ANR	8100024	CallExpression	pcl_downloaded_and_bound ( plfont )		8099852	1					
ANR	8100025	Callee	pcl_downloaded_and_bound		8099852	0					
ANR	8100026	Identifier	pcl_downloaded_and_bound		8099852	0					
ANR	8100027	ArgumentList	plfont		8099852	1					
ANR	8100028	Argument	plfont		8099852	0					
ANR	8100029	Identifier	plfont		8099852	0					
ANR	8100030	ExpressionStatement	"mapped_chr = pl_map_symbol ( ( db ? NULL : pcs -> map ) , chr , plfont -> storage == pcds_internal , plfont -> font_type == plft_MSL , pcs -> memory )"	243:4:8255:8481	8099852	20	True				
ANR	8100031	AssignmentExpression	"mapped_chr = pl_map_symbol ( ( db ? NULL : pcs -> map ) , chr , plfont -> storage == pcds_internal , plfont -> font_type == plft_MSL , pcs -> memory )"		8099852	0		=			
ANR	8100032	Identifier	mapped_chr		8099852	0					
ANR	8100033	CallExpression	"pl_map_symbol ( ( db ? NULL : pcs -> map ) , chr , plfont -> storage == pcds_internal , plfont -> font_type == plft_MSL , pcs -> memory )"		8099852	1					
ANR	8100034	Callee	pl_map_symbol		8099852	0					
ANR	8100035	Identifier	pl_map_symbol		8099852	0					
ANR	8100036	ArgumentList	db ? NULL : pcs -> map		8099852	1					
ANR	8100037	Argument	db ? NULL : pcs -> map		8099852	0					
ANR	8100038	ConditionalExpression	db ? NULL : pcs -> map		8099852	0					
ANR	8100039	Condition	db		8099852	0					
ANR	8100040	Identifier	db		8099852	0					
ANR	8100041	Identifier	NULL		8099852	1					
ANR	8100042	PtrMemberAccess	pcs -> map		8099852	2					
ANR	8100043	Identifier	pcs		8099852	0					
ANR	8100044	Identifier	map		8099852	1					
ANR	8100045	Argument	chr		8099852	1					
ANR	8100046	Identifier	chr		8099852	0					
ANR	8100047	Argument	plfont -> storage == pcds_internal		8099852	2					
ANR	8100048	EqualityExpression	plfont -> storage == pcds_internal		8099852	0		==			
ANR	8100049	PtrMemberAccess	plfont -> storage		8099852	0					
ANR	8100050	Identifier	plfont		8099852	0					
ANR	8100051	Identifier	storage		8099852	1					
ANR	8100052	Identifier	pcds_internal		8099852	1					
ANR	8100053	Argument	plfont -> font_type == plft_MSL		8099852	3					
ANR	8100054	EqualityExpression	plfont -> font_type == plft_MSL		8099852	0		==			
ANR	8100055	PtrMemberAccess	plfont -> font_type		8099852	0					
ANR	8100056	Identifier	plfont		8099852	0					
ANR	8100057	Identifier	font_type		8099852	1					
ANR	8100058	Identifier	plft_MSL		8099852	1					
ANR	8100059	Argument	pcs -> memory		8099852	4					
ANR	8100060	PtrMemberAccess	pcs -> memory		8099852	0					
ANR	8100061	Identifier	pcs		8099852	0					
ANR	8100062	Identifier	memory		8099852	1					
ANR	8100063	ExpressionStatement	* pchr = mapped_chr	247:4:8487:8505	8099852	21	True				
ANR	8100064	AssignmentExpression	* pchr = mapped_chr		8099852	0		=			
ANR	8100065	UnaryOperationExpression	* pchr		8099852	0					
ANR	8100066	UnaryOperator	*		8099852	0					
ANR	8100067	Identifier	pchr		8099852	1					
ANR	8100068	Identifier	mapped_chr		8099852	1					
ANR	8100069	IfStatement	if ( mapped_chr == 0xffff )		8099852	22					
ANR	8100070	Condition	mapped_chr == 0xffff	248:8:8515:8534	8099852	0	True				
ANR	8100071	EqualityExpression	mapped_chr == 0xffff		8099852	0		==			
ANR	8100072	Identifier	mapped_chr		8099852	0					
ANR	8100073	PrimaryExpression	0xffff		8099852	1					
ANR	8100074	CompoundStatement		40:30:1306:1306	8099852	1					
ANR	8100075	IfStatement	"if ( ( plfont -> storage != pcds_internal ) && ( pl_font_char_width ( plfont , ( void * ) ( pcs -> pgs ) , mapped_chr , pwidth ) == 0 ) )"		8099852	0					
ANR	8100076	Condition	"( plfont -> storage != pcds_internal ) && ( pl_font_char_width ( plfont , ( void * ) ( pcs -> pgs ) , mapped_chr , pwidth ) == 0 )"	249:12:8551:8687	8099852	0	True				
ANR	8100077	AndExpression	"( plfont -> storage != pcds_internal ) && ( pl_font_char_width ( plfont , ( void * ) ( pcs -> pgs ) , mapped_chr , pwidth ) == 0 )"		8099852	0		&&			
ANR	8100078	EqualityExpression	plfont -> storage != pcds_internal		8099852	0		!=			
ANR	8100079	PtrMemberAccess	plfont -> storage		8099852	0					
ANR	8100080	Identifier	plfont		8099852	0					
ANR	8100081	Identifier	storage		8099852	1					
ANR	8100082	Identifier	pcds_internal		8099852	1					
ANR	8100083	EqualityExpression	"pl_font_char_width ( plfont , ( void * ) ( pcs -> pgs ) , mapped_chr , pwidth ) == 0"		8099852	1		==			
ANR	8100084	CallExpression	"pl_font_char_width ( plfont , ( void * ) ( pcs -> pgs ) , mapped_chr , pwidth )"		8099852	0					
ANR	8100085	Callee	pl_font_char_width		8099852	0					
ANR	8100086	Identifier	pl_font_char_width		8099852	0					
ANR	8100087	ArgumentList	plfont		8099852	1					
ANR	8100088	Argument	plfont		8099852	0					
ANR	8100089	Identifier	plfont		8099852	0					
ANR	8100090	Argument	( void * ) ( pcs -> pgs )		8099852	1					
ANR	8100091	CastExpression	( void * ) ( pcs -> pgs )		8099852	0					
ANR	8100092	CastTarget	void *		8099852	0					
ANR	8100093	PtrMemberAccess	pcs -> pgs		8099852	1					
ANR	8100094	Identifier	pcs		8099852	0					
ANR	8100095	Identifier	pgs		8099852	1					
ANR	8100096	Argument	mapped_chr		8099852	2					
ANR	8100097	Identifier	mapped_chr		8099852	0					
ANR	8100098	Argument	pwidth		8099852	3					
ANR	8100099	Identifier	pwidth		8099852	0					
ANR	8100100	PrimaryExpression	0		8099852	1					
ANR	8100101	CompoundStatement		43:69:1459:1459	8099852	1					
ANR	8100102	ExpressionStatement	* pprint_undefined = true	252:12:8704:8728	8099852	0	True				
ANR	8100103	AssignmentExpression	* pprint_undefined = true		8099852	0		=			
ANR	8100104	UnaryOperationExpression	* pprint_undefined		8099852	0					
ANR	8100105	UnaryOperator	*		8099852	0					
ANR	8100106	Identifier	pprint_undefined		8099852	1					
ANR	8100107	Identifier	true		8099852	1					
ANR	8100108	ReturnStatement	return 0 ;	253:12:8742:8750	8099852	1	True				
ANR	8100109	PrimaryExpression	0		8099852	0					
ANR	8100110	ExpressionStatement	* pis_space = true	255:8:8770:8787	8099852	1	True				
ANR	8100111	AssignmentExpression	* pis_space = true		8099852	0		=			
ANR	8100112	UnaryOperationExpression	* pis_space		8099852	0					
ANR	8100113	UnaryOperator	*		8099852	0					
ANR	8100114	Identifier	pis_space		8099852	1					
ANR	8100115	Identifier	true		8099852	1					
ANR	8100116	ReturnStatement	return 0 ;	256:8:8797:8805	8099852	2	True				
ANR	8100117	PrimaryExpression	0		8099852	0					
ANR	8100118	IfStatement	if ( plfont -> storage == pcds_internal && mapped_chr == 0x0020 && ! substituting )		8099852	23					
ANR	8100119	Condition	plfont -> storage == pcds_internal && mapped_chr == 0x0020 && ! substituting	260:8:8876:8956	8099852	0	True				
ANR	8100120	AndExpression	plfont -> storage == pcds_internal && mapped_chr == 0x0020 && ! substituting		8099852	0		&&			
ANR	8100121	EqualityExpression	plfont -> storage == pcds_internal		8099852	0		==			
ANR	8100122	PtrMemberAccess	plfont -> storage		8099852	0					
ANR	8100123	Identifier	plfont		8099852	0					
ANR	8100124	Identifier	storage		8099852	1					
ANR	8100125	Identifier	pcds_internal		8099852	1					
ANR	8100126	AndExpression	mapped_chr == 0x0020 && ! substituting		8099852	1		&&			
ANR	8100127	EqualityExpression	mapped_chr == 0x0020		8099852	0		==			
ANR	8100128	Identifier	mapped_chr		8099852	0					
ANR	8100129	PrimaryExpression	0x0020		8099852	1					
ANR	8100130	UnaryOperationExpression	! substituting		8099852	1					
ANR	8100131	UnaryOperator	!		8099852	0					
ANR	8100132	Identifier	substituting		8099852	1					
ANR	8100133	CompoundStatement		53:26:1728:1728	8099852	1					
ANR	8100134	ExpressionStatement	* pis_space = true	262:8:8969:8986	8099852	0	True				
ANR	8100135	AssignmentExpression	* pis_space = true		8099852	0		=			
ANR	8100136	UnaryOperationExpression	* pis_space		8099852	0					
ANR	8100137	UnaryOperator	*		8099852	0					
ANR	8100138	Identifier	pis_space		8099852	1					
ANR	8100139	Identifier	true		8099852	1					
ANR	8100140	ExpressionStatement	* pchr = 0xffff	263:8:8996:9010	8099852	1	True				
ANR	8100141	AssignmentExpression	* pchr = 0xffff		8099852	0		=			
ANR	8100142	UnaryOperationExpression	* pchr		8099852	0					
ANR	8100143	UnaryOperator	*		8099852	0					
ANR	8100144	Identifier	pchr		8099852	1					
ANR	8100145	PrimaryExpression	0xffff		8099852	1					
ANR	8100146	ReturnStatement	return 0 ;	264:8:9020:9028	8099852	2	True				
ANR	8100147	PrimaryExpression	0		8099852	0					
ANR	8100148	IfStatement	if ( plfont -> storage == pcds_internal && chr == 0x0020 && plfont -> character_complement [ 5 ] == 0x3f && pl_complement_to_vocab ( plfont -> character_complement ) == plgv_Unicode )		8099852	24					
ANR	8100149	Condition	plfont -> storage == pcds_internal && chr == 0x0020 && plfont -> character_complement [ 5 ] == 0x3f && pl_complement_to_vocab ( plfont -> character_complement ) == plgv_Unicode	273:8:9421:9616	8099852	0	True				
ANR	8100150	AndExpression	plfont -> storage == pcds_internal && chr == 0x0020 && plfont -> character_complement [ 5 ] == 0x3f && pl_complement_to_vocab ( plfont -> character_complement ) == plgv_Unicode		8099852	0		&&			
ANR	8100151	EqualityExpression	plfont -> storage == pcds_internal		8099852	0		==			
ANR	8100152	PtrMemberAccess	plfont -> storage		8099852	0					
ANR	8100153	Identifier	plfont		8099852	0					
ANR	8100154	Identifier	storage		8099852	1					
ANR	8100155	Identifier	pcds_internal		8099852	1					
ANR	8100156	AndExpression	chr == 0x0020 && plfont -> character_complement [ 5 ] == 0x3f && pl_complement_to_vocab ( plfont -> character_complement ) == plgv_Unicode		8099852	1		&&			
ANR	8100157	EqualityExpression	chr == 0x0020		8099852	0		==			
ANR	8100158	Identifier	chr		8099852	0					
ANR	8100159	PrimaryExpression	0x0020		8099852	1					
ANR	8100160	AndExpression	plfont -> character_complement [ 5 ] == 0x3f && pl_complement_to_vocab ( plfont -> character_complement ) == plgv_Unicode		8099852	1		&&			
ANR	8100161	EqualityExpression	plfont -> character_complement [ 5 ] == 0x3f		8099852	0		==			
ANR	8100162	ArrayIndexing	plfont -> character_complement [ 5 ]		8099852	0					
ANR	8100163	PtrMemberAccess	plfont -> character_complement		8099852	0					
ANR	8100164	Identifier	plfont		8099852	0					
ANR	8100165	Identifier	character_complement		8099852	1					
ANR	8100166	PrimaryExpression	5		8099852	1					
ANR	8100167	PrimaryExpression	0x3f		8099852	1					
ANR	8100168	EqualityExpression	pl_complement_to_vocab ( plfont -> character_complement ) == plgv_Unicode		8099852	1		==			
ANR	8100169	CallExpression	pl_complement_to_vocab ( plfont -> character_complement )		8099852	0					
ANR	8100170	Callee	pl_complement_to_vocab		8099852	0					
ANR	8100171	Identifier	pl_complement_to_vocab		8099852	0					
ANR	8100172	ArgumentList	plfont -> character_complement		8099852	1					
ANR	8100173	Argument	plfont -> character_complement		8099852	0					
ANR	8100174	PtrMemberAccess	plfont -> character_complement		8099852	0					
ANR	8100175	Identifier	plfont		8099852	0					
ANR	8100176	Identifier	character_complement		8099852	1					
ANR	8100177	Identifier	plgv_Unicode		8099852	1					
ANR	8100178	CompoundStatement		69:22:2388:2388	8099852	1					
ANR	8100179	ExpressionStatement	* pis_space = true	278:8:9629:9646	8099852	0	True				
ANR	8100180	AssignmentExpression	* pis_space = true		8099852	0		=			
ANR	8100181	UnaryOperationExpression	* pis_space		8099852	0					
ANR	8100182	UnaryOperator	*		8099852	0					
ANR	8100183	Identifier	pis_space		8099852	1					
ANR	8100184	Identifier	true		8099852	1					
ANR	8100185	ExpressionStatement	* pchr = 0xffff	279:8:9656:9670	8099852	1	True				
ANR	8100186	AssignmentExpression	* pchr = 0xffff		8099852	0		=			
ANR	8100187	UnaryOperationExpression	* pchr		8099852	0					
ANR	8100188	UnaryOperator	*		8099852	0					
ANR	8100189	Identifier	pchr		8099852	1					
ANR	8100190	PrimaryExpression	0xffff		8099852	1					
ANR	8100191	ReturnStatement	return 0 ;	280:8:9680:9688	8099852	2	True				
ANR	8100192	PrimaryExpression	0		8099852	0					
ANR	8100193	IfStatement	if ( * pis_space == false )		8099852	25					
ANR	8100194	Condition	* pis_space == false	285:8:9805:9823	8099852	0	True				
ANR	8100195	EqualityExpression	* pis_space == false		8099852	0		==			
ANR	8100196	UnaryOperationExpression	* pis_space		8099852	0					
ANR	8100197	UnaryOperator	*		8099852	0					
ANR	8100198	Identifier	pis_space		8099852	1					
ANR	8100199	Identifier	false		8099852	1					
ANR	8100200	IfStatement	"if ( pl_font_char_width ( plfont , ( void * ) ( pcs -> pgs ) , mapped_chr , pwidth ) == 0 )"		8099852	1					
ANR	8100201	Condition	"pl_font_char_width ( plfont , ( void * ) ( pcs -> pgs ) , mapped_chr , pwidth ) == 0"	286:12:9838:9920	8099852	0	True				
ANR	8100202	EqualityExpression	"pl_font_char_width ( plfont , ( void * ) ( pcs -> pgs ) , mapped_chr , pwidth ) == 0"		8099852	0		==			
ANR	8100203	CallExpression	"pl_font_char_width ( plfont , ( void * ) ( pcs -> pgs ) , mapped_chr , pwidth )"		8099852	0					
ANR	8100204	Callee	pl_font_char_width		8099852	0					
ANR	8100205	Identifier	pl_font_char_width		8099852	0					
ANR	8100206	ArgumentList	plfont		8099852	1					
ANR	8100207	Argument	plfont		8099852	0					
ANR	8100208	Identifier	plfont		8099852	0					
ANR	8100209	Argument	( void * ) ( pcs -> pgs )		8099852	1					
ANR	8100210	CastExpression	( void * ) ( pcs -> pgs )		8099852	0					
ANR	8100211	CastTarget	void *		8099852	0					
ANR	8100212	PtrMemberAccess	pcs -> pgs		8099852	1					
ANR	8100213	Identifier	pcs		8099852	0					
ANR	8100214	Identifier	pgs		8099852	1					
ANR	8100215	Argument	mapped_chr		8099852	2					
ANR	8100216	Identifier	mapped_chr		8099852	0					
ANR	8100217	Argument	pwidth		8099852	3					
ANR	8100218	Identifier	pwidth		8099852	0					
ANR	8100219	PrimaryExpression	0		8099852	1					
ANR	8100220	ReturnStatement	return 0 ;	288:12:9935:9943	8099852	1	True				
ANR	8100221	PrimaryExpression	0		8099852	0					
ANR	8100222	IfStatement	"if ( ! substituting && substituting_allowed ( pcs , db ? mapped_chr : chr ) )"		8099852	26					
ANR	8100223	Condition	"! substituting && substituting_allowed ( pcs , db ? mapped_chr : chr )"	293:8:10005:10069	8099852	0	True				
ANR	8100224	AndExpression	"! substituting && substituting_allowed ( pcs , db ? mapped_chr : chr )"		8099852	0		&&			
ANR	8100225	UnaryOperationExpression	! substituting		8099852	0					
ANR	8100226	UnaryOperator	!		8099852	0					
ANR	8100227	Identifier	substituting		8099852	1					
ANR	8100228	CallExpression	"substituting_allowed ( pcs , db ? mapped_chr : chr )"		8099852	1					
ANR	8100229	Callee	substituting_allowed		8099852	0					
ANR	8100230	Identifier	substituting_allowed		8099852	0					
ANR	8100231	ArgumentList	pcs		8099852	1					
ANR	8100232	Argument	pcs		8099852	0					
ANR	8100233	Identifier	pcs		8099852	0					
ANR	8100234	Argument	db ? mapped_chr : chr		8099852	1					
ANR	8100235	ConditionalExpression	db ? mapped_chr : chr		8099852	0					
ANR	8100236	Condition	db		8099852	0					
ANR	8100237	Identifier	db		8099852	0					
ANR	8100238	Identifier	mapped_chr		8099852	1					
ANR	8100239	Identifier	chr		8099852	2					
ANR	8100240	CompoundStatement		85:75:2841:2841	8099852	1					
ANR	8100241	ExpressionStatement	"pcl_decache_font ( pcs , - 1 , true )"	294:8:10082:10113	8099852	0	True				
ANR	8100242	CallExpression	"pcl_decache_font ( pcs , - 1 , true )"		8099852	0					
ANR	8100243	Callee	pcl_decache_font		8099852	0					
ANR	8100244	Identifier	pcl_decache_font		8099852	0					
ANR	8100245	ArgumentList	pcs		8099852	1					
ANR	8100246	Argument	pcs		8099852	0					
ANR	8100247	Identifier	pcs		8099852	0					
ANR	8100248	Argument	- 1		8099852	1					
ANR	8100249	UnaryOperationExpression	- 1		8099852	0					
ANR	8100250	UnaryOperator	-		8099852	0					
ANR	8100251	PrimaryExpression	1		8099852	1					
ANR	8100252	Argument	true		8099852	2					
ANR	8100253	Identifier	true		8099852	0					
ANR	8100254	ExpressionStatement	"code = pcl_recompute_font ( pcs , true )"	295:8:10123:10159	8099852	1	True				
ANR	8100255	AssignmentExpression	"code = pcl_recompute_font ( pcs , true )"		8099852	0		=			
ANR	8100256	Identifier	code		8099852	0					
ANR	8100257	CallExpression	"pcl_recompute_font ( pcs , true )"		8099852	1					
ANR	8100258	Callee	pcl_recompute_font		8099852	0					
ANR	8100259	Identifier	pcl_recompute_font		8099852	0					
ANR	8100260	ArgumentList	pcs		8099852	1					
ANR	8100261	Argument	pcs		8099852	0					
ANR	8100262	Identifier	pcs		8099852	0					
ANR	8100263	Argument	true		8099852	1					
ANR	8100264	Identifier	true		8099852	0					
ANR	8100265	IfStatement	if ( code < 0 )		8099852	2					
ANR	8100266	Condition	code < 0	296:12:10173:10180	8099852	0	True				
ANR	8100267	RelationalExpression	code < 0		8099852	0		<			
ANR	8100268	Identifier	code		8099852	0					
ANR	8100269	PrimaryExpression	0		8099852	1					
ANR	8100270	ReturnStatement	return code ;	297:12:10195:10206	8099852	1	True				
ANR	8100271	Identifier	code		8099852	0					
ANR	8100272	ExpressionStatement	substituting = true	298:8:10216:10235	8099852	3	True				
ANR	8100273	AssignmentExpression	substituting = true		8099852	0		=			
ANR	8100274	Identifier	substituting		8099852	0					
ANR	8100275	Identifier	true		8099852	1					
ANR	8100276	ExpressionStatement	* unstyled_substitution = true	299:8:10245:10274	8099852	4	True				
ANR	8100277	AssignmentExpression	* unstyled_substitution = true		8099852	0		=			
ANR	8100278	UnaryOperationExpression	* unstyled_substitution		8099852	0					
ANR	8100279	UnaryOperator	*		8099852	0					
ANR	8100280	Identifier	unstyled_substitution		8099852	1					
ANR	8100281	Identifier	true		8099852	1					
ANR	8100282	ExpressionStatement	plfont = pcs -> font	300:8:10284:10302	8099852	5	True				
ANR	8100283	AssignmentExpression	plfont = pcs -> font		8099852	0		=			
ANR	8100284	Identifier	plfont		8099852	0					
ANR	8100285	PtrMemberAccess	pcs -> font		8099852	1					
ANR	8100286	Identifier	pcs		8099852	0					
ANR	8100287	Identifier	font		8099852	1					
ANR	8100288	ExpressionStatement	set_gs_font ( pcs )	301:8:10312:10328	8099852	6	True				
ANR	8100289	CallExpression	set_gs_font ( pcs )		8099852	0					
ANR	8100290	Callee	set_gs_font		8099852	0					
ANR	8100291	Identifier	set_gs_font		8099852	0					
ANR	8100292	ArgumentList	pcs		8099852	1					
ANR	8100293	Argument	pcs		8099852	0					
ANR	8100294	Identifier	pcs		8099852	0					
ANR	8100295	GotoStatement	goto r ;	302:8:10338:10344	8099852	7	True				
ANR	8100296	Identifier	r		8099852	0					
ANR	8100297	IfStatement	if ( substituting )		8099852	27					
ANR	8100298	Condition	substituting	307:8:10457:10468	8099852	0	True				
ANR	8100299	Identifier	substituting		8099852	0					
ANR	8100300	CompoundStatement		99:22:3240:3240	8099852	1					
ANR	8100301	ExpressionStatement	"pcl_decache_font ( pcs , - 1 , true )"	308:8:10481:10512	8099852	0	True				
ANR	8100302	CallExpression	"pcl_decache_font ( pcs , - 1 , true )"		8099852	0					
ANR	8100303	Callee	pcl_decache_font		8099852	0					
ANR	8100304	Identifier	pcl_decache_font		8099852	0					
ANR	8100305	ArgumentList	pcs		8099852	1					
ANR	8100306	Argument	pcs		8099852	0					
ANR	8100307	Identifier	pcs		8099852	0					
ANR	8100308	Argument	- 1		8099852	1					
ANR	8100309	UnaryOperationExpression	- 1		8099852	0					
ANR	8100310	UnaryOperator	-		8099852	0					
ANR	8100311	PrimaryExpression	1		8099852	1					
ANR	8100312	Argument	true		8099852	2					
ANR	8100313	Identifier	true		8099852	0					
ANR	8100314	ExpressionStatement	"code = pcl_recompute_font ( pcs , false )"	309:8:10522:10559	8099852	1	True				
ANR	8100315	AssignmentExpression	"code = pcl_recompute_font ( pcs , false )"		8099852	0		=			
ANR	8100316	Identifier	code		8099852	0					
ANR	8100317	CallExpression	"pcl_recompute_font ( pcs , false )"		8099852	1					
ANR	8100318	Callee	pcl_recompute_font		8099852	0					
ANR	8100319	Identifier	pcl_recompute_font		8099852	0					
ANR	8100320	ArgumentList	pcs		8099852	1					
ANR	8100321	Argument	pcs		8099852	0					
ANR	8100322	Identifier	pcs		8099852	0					
ANR	8100323	Argument	false		8099852	1					
ANR	8100324	Identifier	false		8099852	0					
ANR	8100325	IfStatement	if ( code < 0 )		8099852	2					
ANR	8100326	Condition	code < 0	310:12:10573:10580	8099852	0	True				
ANR	8100327	RelationalExpression	code < 0		8099852	0		<			
ANR	8100328	Identifier	code		8099852	0					
ANR	8100329	PrimaryExpression	0		8099852	1					
ANR	8100330	ReturnStatement	return code ;	311:12:10595:10606	8099852	1	True				
ANR	8100331	Identifier	code		8099852	0					
ANR	8100332	ExpressionStatement	set_gs_font ( pcs )	312:8:10616:10632	8099852	3	True				
ANR	8100333	CallExpression	set_gs_font ( pcs )		8099852	0					
ANR	8100334	Callee	set_gs_font		8099852	0					
ANR	8100335	Identifier	set_gs_font		8099852	0					
ANR	8100336	ArgumentList	pcs		8099852	1					
ANR	8100337	Argument	pcs		8099852	0					
ANR	8100338	Identifier	pcs		8099852	0					
ANR	8100339	ExpressionStatement	* pis_space = true	319:4:10758:10775	8099852	28	True				
ANR	8100340	AssignmentExpression	* pis_space = true		8099852	0		=			
ANR	8100341	UnaryOperationExpression	* pis_space		8099852	0					
ANR	8100342	UnaryOperator	*		8099852	0					
ANR	8100343	Identifier	pis_space		8099852	1					
ANR	8100344	Identifier	true		8099852	1					
ANR	8100345	ExpressionStatement	* pchr = 0xffff	320:4:10781:10795	8099852	29	True				
ANR	8100346	AssignmentExpression	* pchr = 0xffff		8099852	0		=			
ANR	8100347	UnaryOperationExpression	* pchr		8099852	0					
ANR	8100348	UnaryOperator	*		8099852	0					
ANR	8100349	Identifier	pchr		8099852	1					
ANR	8100350	PrimaryExpression	0xffff		8099852	1					
ANR	8100351	ReturnStatement	return 0 ;	321:4:10801:10809	8099852	30	True				
ANR	8100352	PrimaryExpression	0		8099852	0					
ANR	8100353	ReturnType	static int		8099852	1					
ANR	8100354	Identifier	get_next_char		8099852	2					
ANR	8100355	ParameterList	"pcl_state_t * pcs , const byte * * ppb , uint * plen , gs_char * pchr , gs_char * porig_char , bool * pis_space , bool * pprint_undefined , bool literal , gs_point * pwidth , bool * unstyled_substitution"		8099852	3					
ANR	8100356	Parameter	pcl_state_t * pcs	201:14:6937:6953	8099852	0	True				
ANR	8100357	ParameterType	pcl_state_t *		8099852	0					
ANR	8100358	Identifier	pcs		8099852	1					
ANR	8100359	Parameter	const byte * * ppb	202:14:6970:6986	8099852	1	True				
ANR	8100360	ParameterType	const byte * *		8099852	0					
ANR	8100361	Identifier	ppb		8099852	1					
ANR	8100362	Parameter	uint * plen	203:14:7003:7013	8099852	2	True				
ANR	8100363	ParameterType	uint *		8099852	0					
ANR	8100364	Identifier	plen		8099852	1					
ANR	8100365	Parameter	gs_char * pchr	204:14:7030:7043	8099852	3	True				
ANR	8100366	ParameterType	gs_char *		8099852	0					
ANR	8100367	Identifier	pchr		8099852	1					
ANR	8100368	Parameter	gs_char * porig_char	205:14:7060:7079	8099852	4	True				
ANR	8100369	ParameterType	gs_char *		8099852	0					
ANR	8100370	Identifier	porig_char		8099852	1					
ANR	8100371	Parameter	bool * pis_space	206:14:7096:7111	8099852	5	True				
ANR	8100372	ParameterType	bool *		8099852	0					
ANR	8100373	Identifier	pis_space		8099852	1					
ANR	8100374	Parameter	bool * pprint_undefined	207:14:7128:7150	8099852	6	True				
ANR	8100375	ParameterType	bool *		8099852	0					
ANR	8100376	Identifier	pprint_undefined		8099852	1					
ANR	8100377	Parameter	bool literal	208:14:7167:7178	8099852	7	True				
ANR	8100378	ParameterType	bool		8099852	0					
ANR	8100379	Identifier	literal		8099852	1					
ANR	8100380	Parameter	gs_point * pwidth	208:28:7181:7197	8099852	8	True				
ANR	8100381	ParameterType	gs_point *		8099852	0					
ANR	8100382	Identifier	pwidth		8099852	1					
ANR	8100383	Parameter	bool * unstyled_substitution	208:47:7200:7227	8099852	9	True				
ANR	8100384	ParameterType	bool *		8099852	0					
ANR	8100385	Identifier	unstyled_substitution		8099852	1					
ANR	8100386	CFGEntryNode	ENTRY		8099852		True				
ANR	8100387	CFGExitNode	EXIT		8099852		True				
ANR	8100388	Symbol	pchr		8099852						
ANR	8100389	Symbol	porig_char		8099852						
ANR	8100390	Symbol	pwidth		8099852						
ANR	8100391	Symbol	* pcs		8099852						
ANR	8100392	Symbol	plfont		8099852						
ANR	8100393	Symbol	* ppb		8099852						
ANR	8100394	Symbol	pcs -> font		8099852						
ANR	8100395	Symbol	pl_font_char_width		8099852						
ANR	8100396	Symbol	plen		8099852						
ANR	8100397	Symbol	plgv_Unicode		8099852						
ANR	8100398	Symbol	substituting_allowed		8099852						
ANR	8100399	Symbol	len		8099852						
ANR	8100400	Symbol	pcs -> memory		8099852						
ANR	8100401	Symbol	pl_map_symbol		8099852						
ANR	8100402	Symbol	plfont -> font_type		8099852						
ANR	8100403	Symbol	NULL		8099852						
ANR	8100404	Symbol	plfont -> storage		8099852						
ANR	8100405	Symbol	pcds_internal		8099852						
ANR	8100406	Symbol	* * plfont		8099852						
ANR	8100407	Symbol	plfont -> character_complement		8099852						
ANR	8100408	Symbol	chr		8099852						
ANR	8100409	Symbol	plft_MSL		8099852						
ANR	8100410	Symbol	pcl_recompute_font		8099852						
ANR	8100411	Symbol	pl_complement_to_vocab		8099852						
ANR	8100412	Symbol	* porig_char		8099852						
ANR	8100413	Symbol	true		8099852						
ANR	8100414	Symbol	* pis_space		8099852						
ANR	8100415	Symbol	& pb		8099852						
ANR	8100416	Symbol	pcs -> text_parsing_method		8099852						
ANR	8100417	Symbol	code		8099852						
ANR	8100418	Symbol	char_is_printable		8099852						
ANR	8100419	Symbol	unstyled_substitution		8099852						
ANR	8100420	Symbol	* plfont -> character_complement		8099852						
ANR	8100421	Symbol	literal		8099852						
ANR	8100422	Symbol	* pchr		8099852						
ANR	8100423	Symbol	* pprint_undefined		8099852						
ANR	8100424	Symbol	mapped_chr		8099852						
ANR	8100425	Symbol	pcs		8099852						
ANR	8100426	Symbol	ppb		8099852						
ANR	8100427	Symbol	pcs -> map		8099852						
ANR	8100428	Symbol	pcs -> pgs		8099852						
ANR	8100429	Symbol	false		8099852						
ANR	8100430	Symbol	pprint_undefined		8099852						
ANR	8100431	Symbol	substituting		8099852						
ANR	8100432	Symbol	* unstyled_substitution		8099852						
ANR	8100433	Symbol	pcl_downloaded_and_bound		8099852						
ANR	8100434	Symbol	pb		8099852						
ANR	8100435	Symbol	* plen		8099852						
ANR	8100436	Symbol	pcl_char_get_char		8099852						
ANR	8100437	Symbol	* plfont		8099852						
ANR	8100438	Symbol	pis_space		8099852						
ANR	8100439	Symbol	db		8099852						
ANR	8100440	Function	pcl_char_bytelen	329:0:11047:12856							
ANR	8100441	FunctionDef	"pcl_char_bytelen (byte ch , pcl_text_parsing_method_t tpm)"		8100440	0					
ANR	8100442	CompoundStatement		331:0:11108:12856	8100440	0					
ANR	8100443	IdentifierDeclStatement	int bytelen = 1 ;	333:4:11115:11130	8100440	0	True				
ANR	8100444	IdentifierDecl	bytelen = 1		8100440	0					
ANR	8100445	IdentifierDeclType	int		8100440	0					
ANR	8100446	Identifier	bytelen		8100440	1					
ANR	8100447	AssignmentExpression	bytelen = 1		8100440	2		=			
ANR	8100448	Identifier	bytelen		8100440	0					
ANR	8100449	PrimaryExpression	1		8100440	1					
ANR	8100450	SwitchStatement	switch ( tpm )		8100440	1					
ANR	8100451	Condition	tpm	335:12:11145:11147	8100440	0	True				
ANR	8100452	Identifier	tpm		8100440	0					
ANR	8100453	CompoundStatement		5:17:41:41	8100440	1					
ANR	8100454	Label	default :	336:8:11160:11167	8100440	0	True				
ANR	8100455	Identifier	default		8100440	0					
ANR	8100456	BreakStatement	break ;	338:12:11225:11230	8100440	1	True				
ANR	8100457	Label	case tpm_21_DBCS7 :	340:8:11241:11258	8100440	2	True				
ANR	8100458	Identifier	tpm_21_DBCS7		8100440	0					
ANR	8100459	ExpressionStatement	bytelen = ( ch < 0x21 ) ? 1 : 2	342:12:11316:11345	8100440	3	True				
ANR	8100460	AssignmentExpression	bytelen = ( ch < 0x21 ) ? 1 : 2		8100440	0		=			
ANR	8100461	Identifier	bytelen		8100440	0					
ANR	8100462	ConditionalExpression	( ch < 0x21 ) ? 1 : 2		8100440	1					
ANR	8100463	Condition	ch < 0x21		8100440	0					
ANR	8100464	RelationalExpression	ch < 0x21		8100440	0		<			
ANR	8100465	Identifier	ch		8100440	0					
ANR	8100466	PrimaryExpression	0x21		8100440	1					
ANR	8100467	PrimaryExpression	1		8100440	1					
ANR	8100468	PrimaryExpression	2		8100440	2					
ANR	8100469	BreakStatement	break ;	343:12:11359:11364	8100440	4	True				
ANR	8100470	Label	case tpm_31_sjis :	345:8:11375:11391	8100440	5	True				
ANR	8100471	Identifier	tpm_31_sjis		8100440	0					
ANR	8100472	ExpressionStatement	bytelen = ( ch < 0x81 || ( ch > 0x9f && ch < 0xe0 ) || ch > 0xfc ) ? 1 : 2	347:12:11460:11553	8100440	6	True				
ANR	8100473	AssignmentExpression	bytelen = ( ch < 0x81 || ( ch > 0x9f && ch < 0xe0 ) || ch > 0xfc ) ? 1 : 2		8100440	0		=			
ANR	8100474	Identifier	bytelen		8100440	0					
ANR	8100475	ConditionalExpression	( ch < 0x81 || ( ch > 0x9f && ch < 0xe0 ) || ch > 0xfc ) ? 1 : 2		8100440	1					
ANR	8100476	Condition	ch < 0x81 || ( ch > 0x9f && ch < 0xe0 ) || ch > 0xfc		8100440	0					
ANR	8100477	OrExpression	ch < 0x81 || ( ch > 0x9f && ch < 0xe0 ) || ch > 0xfc		8100440	0		||			
ANR	8100478	RelationalExpression	ch < 0x81		8100440	0		<			
ANR	8100479	Identifier	ch		8100440	0					
ANR	8100480	PrimaryExpression	0x81		8100440	1					
ANR	8100481	OrExpression	( ch > 0x9f && ch < 0xe0 ) || ch > 0xfc		8100440	1		||			
ANR	8100482	AndExpression	ch > 0x9f && ch < 0xe0		8100440	0		&&			
ANR	8100483	RelationalExpression	ch > 0x9f		8100440	0		>			
ANR	8100484	Identifier	ch		8100440	0					
ANR	8100485	PrimaryExpression	0x9f		8100440	1					
ANR	8100486	RelationalExpression	ch < 0xe0		8100440	1		<			
ANR	8100487	Identifier	ch		8100440	0					
ANR	8100488	PrimaryExpression	0xe0		8100440	1					
ANR	8100489	RelationalExpression	ch > 0xfc		8100440	1		>			
ANR	8100490	Identifier	ch		8100440	0					
ANR	8100491	PrimaryExpression	0xfc		8100440	1					
ANR	8100492	PrimaryExpression	1		8100440	1					
ANR	8100493	PrimaryExpression	2		8100440	2					
ANR	8100494	BreakStatement	break ;	349:12:11567:11572	8100440	7	True				
ANR	8100495	Label	case tpm_38_DBCS8 :	351:8:11583:11600	8100440	8	True				
ANR	8100496	Identifier	tpm_38_DBCS8		8100440	0					
ANR	8100497	ExpressionStatement	bytelen = ( ch < 0x80 ) ? 1 : 2	353:12:11658:11687	8100440	9	True				
ANR	8100498	AssignmentExpression	bytelen = ( ch < 0x80 ) ? 1 : 2		8100440	0		=			
ANR	8100499	Identifier	bytelen		8100440	0					
ANR	8100500	ConditionalExpression	( ch < 0x80 ) ? 1 : 2		8100440	1					
ANR	8100501	Condition	ch < 0x80		8100440	0					
ANR	8100502	RelationalExpression	ch < 0x80		8100440	0		<			
ANR	8100503	Identifier	ch		8100440	0					
ANR	8100504	PrimaryExpression	0x80		8100440	1					
ANR	8100505	PrimaryExpression	1		8100440	1					
ANR	8100506	PrimaryExpression	2		8100440	2					
ANR	8100507	BreakStatement	break ;	354:12:11701:11706	8100440	10	True				
ANR	8100508	Label	case tpm_83_utf8 :	355:8:11716:11732	8100440	11	True				
ANR	8100509	Identifier	tpm_83_utf8		8100440	0					
ANR	8100510	Label	case tpm_1008_utf8 :	356:8:11742:11760	8100440	12	True				
ANR	8100511	Identifier	tpm_1008_utf8		8100440	0					
ANR	8100512	IfStatement	if ( ch < 0x80 )		8100440	13					
ANR	8100513	Condition	ch < 0x80	357:16:11778:11786	8100440	0	True				
ANR	8100514	RelationalExpression	ch < 0x80		8100440	0		<			
ANR	8100515	Identifier	ch		8100440	0					
ANR	8100516	PrimaryExpression	0x80		8100440	1					
ANR	8100517	CompoundStatement		27:27:680:680	8100440	1					
ANR	8100518	ExpressionStatement	bytelen = 1	359:16:11838:11849	8100440	0	True				
ANR	8100519	AssignmentExpression	bytelen = 1		8100440	0		=			
ANR	8100520	Identifier	bytelen		8100440	0					
ANR	8100521	PrimaryExpression	1		8100440	1					
ANR	8100522	BreakStatement	break ;	360:16:11867:11872	8100440	1	True				
ANR	8100523	IfStatement	if ( ch < 0xc2 )		8100440	14					
ANR	8100524	Condition	ch < 0xc2	362:16:11904:11912	8100440	0	True				
ANR	8100525	RelationalExpression	ch < 0xc2		8100440	0		<			
ANR	8100526	Identifier	ch		8100440	0					
ANR	8100527	PrimaryExpression	0xc2		8100440	1					
ANR	8100528	CompoundStatement		32:27:806:806	8100440	1					
ANR	8100529	ExpressionStatement	bytelen = 0	363:16:11933:11944	8100440	0	True				
ANR	8100530	AssignmentExpression	bytelen = 0		8100440	0		=			
ANR	8100531	Identifier	bytelen		8100440	0					
ANR	8100532	PrimaryExpression	0		8100440	1					
ANR	8100533	BreakStatement	break ;	364:16:11979:11984	8100440	1	True				
ANR	8100534	IfStatement	if ( ch < 0xe0 )		8100440	15					
ANR	8100535	Condition	ch < 0xe0	366:16:12016:12024	8100440	0	True				
ANR	8100536	RelationalExpression	ch < 0xe0		8100440	0		<			
ANR	8100537	Identifier	ch		8100440	0					
ANR	8100538	PrimaryExpression	0xe0		8100440	1					
ANR	8100539	CompoundStatement		36:27:918:918	8100440	1					
ANR	8100540	ExpressionStatement	bytelen = 2	368:16:12085:12096	8100440	0	True				
ANR	8100541	AssignmentExpression	bytelen = 2		8100440	0		=			
ANR	8100542	Identifier	bytelen		8100440	0					
ANR	8100543	PrimaryExpression	2		8100440	1					
ANR	8100544	BreakStatement	break ;	369:16:12114:12119	8100440	1	True				
ANR	8100545	IfStatement	if ( ch < 0xf0 )		8100440	16					
ANR	8100546	Condition	ch < 0xf0	371:16:12151:12159	8100440	0	True				
ANR	8100547	RelationalExpression	ch < 0xf0		8100440	0		<			
ANR	8100548	Identifier	ch		8100440	0					
ANR	8100549	PrimaryExpression	0xf0		8100440	1					
ANR	8100550	CompoundStatement		41:27:1053:1053	8100440	1					
ANR	8100551	ExpressionStatement	bytelen = 3	373:16:12229:12240	8100440	0	True				
ANR	8100552	AssignmentExpression	bytelen = 3		8100440	0		=			
ANR	8100553	Identifier	bytelen		8100440	0					
ANR	8100554	PrimaryExpression	3		8100440	1					
ANR	8100555	BreakStatement	break ;	374:16:12258:12263	8100440	1	True				
ANR	8100556	IfStatement	if ( ch < 0xf8 )		8100440	17					
ANR	8100557	Condition	ch < 0xf8	376:16:12295:12303	8100440	0	True				
ANR	8100558	RelationalExpression	ch < 0xf8		8100440	0		<			
ANR	8100559	Identifier	ch		8100440	0					
ANR	8100560	PrimaryExpression	0xf8		8100440	1					
ANR	8100561	CompoundStatement		46:27:1197:1197	8100440	1					
ANR	8100562	ExpressionStatement	bytelen = 4	378:16:12382:12393	8100440	0	True				
ANR	8100563	AssignmentExpression	bytelen = 4		8100440	0		=			
ANR	8100564	Identifier	bytelen		8100440	0					
ANR	8100565	PrimaryExpression	4		8100440	1					
ANR	8100566	BreakStatement	break ;	379:16:12411:12416	8100440	1	True				
ANR	8100567	IfStatement	if ( ch < 0xfc )		8100440	18					
ANR	8100568	Condition	ch < 0xfc	381:16:12448:12456	8100440	0	True				
ANR	8100569	RelationalExpression	ch < 0xfc		8100440	0		<			
ANR	8100570	Identifier	ch		8100440	0					
ANR	8100571	PrimaryExpression	0xfc		8100440	1					
ANR	8100572	CompoundStatement		51:27:1350:1350	8100440	1					
ANR	8100573	ExpressionStatement	bytelen = 5	383:16:12544:12555	8100440	0	True				
ANR	8100574	AssignmentExpression	bytelen = 5		8100440	0		=			
ANR	8100575	Identifier	bytelen		8100440	0					
ANR	8100576	PrimaryExpression	5		8100440	1					
ANR	8100577	BreakStatement	break ;	384:16:12573:12578	8100440	1	True				
ANR	8100578	IfStatement	if ( ch < 0xfe )		8100440	19					
ANR	8100579	Condition	ch < 0xfe	386:16:12610:12618	8100440	0	True				
ANR	8100580	RelationalExpression	ch < 0xfe		8100440	0		<			
ANR	8100581	Identifier	ch		8100440	0					
ANR	8100582	PrimaryExpression	0xfe		8100440	1					
ANR	8100583	CompoundStatement		56:27:1512:1512	8100440	1					
ANR	8100584	ExpressionStatement	bytelen = 6	388:16:12715:12726	8100440	0	True				
ANR	8100585	AssignmentExpression	bytelen = 6		8100440	0		=			
ANR	8100586	Identifier	bytelen		8100440	0					
ANR	8100587	PrimaryExpression	6		8100440	1					
ANR	8100588	BreakStatement	break ;	389:16:12744:12749	8100440	1	True				
ANR	8100589	ExpressionStatement	bytelen = 0	391:12:12777:12788	8100440	20	True				
ANR	8100590	AssignmentExpression	bytelen = 0		8100440	0		=			
ANR	8100591	Identifier	bytelen		8100440	0					
ANR	8100592	PrimaryExpression	0		8100440	1					
ANR	8100593	BreakStatement	break ;	392:12:12823:12828	8100440	21	True				
ANR	8100594	ReturnStatement	return bytelen ;	394:4:12840:12854	8100440	2	True				
ANR	8100595	Identifier	bytelen		8100440	0					
ANR	8100596	ReturnType	int		8100440	1					
ANR	8100597	Identifier	pcl_char_bytelen		8100440	2					
ANR	8100598	ParameterList	"byte ch , pcl_text_parsing_method_t tpm"		8100440	3					
ANR	8100599	Parameter	byte ch	330:17:11068:11074	8100440	0	True				
ANR	8100600	ParameterType	byte		8100440	0					
ANR	8100601	Identifier	ch		8100440	1					
ANR	8100602	Parameter	pcl_text_parsing_method_t tpm	330:26:11077:11105	8100440	1	True				
ANR	8100603	ParameterType	pcl_text_parsing_method_t		8100440	0					
ANR	8100604	Identifier	tpm		8100440	1					
ANR	8100605	CFGEntryNode	ENTRY		8100440		True				
ANR	8100606	CFGExitNode	EXIT		8100440		True				
ANR	8100607	Symbol	tpm		8100440						
ANR	8100608	Symbol	bytelen		8100440						
ANR	8100609	Symbol	ch		8100440						
ANR	8100610	Function	pcl_char_get_char	402:0:13053:15500							
ANR	8100611	FunctionDef	"pcl_char_get_char (pcl_text_parsing_method_t tpm , const byte * * psrc , int src_len)"		8100610	0					
ANR	8100612	CompoundStatement		406:0:13185:15500	8100610	0					
ANR	8100613	IdentifierDeclStatement	gs_char chr ;	407:4:13191:13202	8100610	0	True				
ANR	8100614	IdentifierDecl	chr		8100610	0					
ANR	8100615	IdentifierDeclType	gs_char		8100610	0					
ANR	8100616	Identifier	chr		8100610	1					
ANR	8100617	IdentifierDeclStatement	const byte * src = * psrc ;	408:4:13208:13231	8100610	1	True				
ANR	8100618	IdentifierDecl	* src = * psrc		8100610	0					
ANR	8100619	IdentifierDeclType	const byte *		8100610	0					
ANR	8100620	Identifier	src		8100610	1					
ANR	8100621	AssignmentExpression	* src = * psrc		8100610	2		=			
ANR	8100622	Identifier	src		8100610	0					
ANR	8100623	UnaryOperationExpression	* psrc		8100610	1					
ANR	8100624	UnaryOperator	*		8100610	0					
ANR	8100625	Identifier	psrc		8100610	1					
ANR	8100626	IdentifierDeclStatement	"int bytelen = pcl_char_bytelen ( src [ 0 ] , tpm ) ;"	409:4:13237:13280	8100610	2	True				
ANR	8100627	IdentifierDecl	"bytelen = pcl_char_bytelen ( src [ 0 ] , tpm )"		8100610	0					
ANR	8100628	IdentifierDeclType	int		8100610	0					
ANR	8100629	Identifier	bytelen		8100610	1					
ANR	8100630	AssignmentExpression	"bytelen = pcl_char_bytelen ( src [ 0 ] , tpm )"		8100610	2		=			
ANR	8100631	Identifier	bytelen		8100610	0					
ANR	8100632	CallExpression	"pcl_char_bytelen ( src [ 0 ] , tpm )"		8100610	1					
ANR	8100633	Callee	pcl_char_bytelen		8100610	0					
ANR	8100634	Identifier	pcl_char_bytelen		8100610	0					
ANR	8100635	ArgumentList	src [ 0 ]		8100610	1					
ANR	8100636	Argument	src [ 0 ]		8100610	0					
ANR	8100637	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100638	Identifier	src		8100610	0					
ANR	8100639	PrimaryExpression	0		8100610	1					
ANR	8100640	Argument	tpm		8100610	1					
ANR	8100641	Identifier	tpm		8100610	0					
ANR	8100642	IfStatement	if ( bytelen == 0 || bytelen > src_len )		8100610	3					
ANR	8100643	Condition	bytelen == 0 || bytelen > src_len	411:8:13291:13323	8100610	0	True				
ANR	8100644	OrExpression	bytelen == 0 || bytelen > src_len		8100610	0		||			
ANR	8100645	EqualityExpression	bytelen == 0		8100610	0		==			
ANR	8100646	Identifier	bytelen		8100610	0					
ANR	8100647	PrimaryExpression	0		8100610	1					
ANR	8100648	RelationalExpression	bytelen > src_len		8100610	1		>			
ANR	8100649	Identifier	bytelen		8100610	0					
ANR	8100650	Identifier	src_len		8100610	1					
ANR	8100651	CompoundStatement		6:43:140:140	8100610	1					
ANR	8100652	ReturnStatement	return INVALID_UC ;	412:8:13336:13353	8100610	0	True				
ANR	8100653	Identifier	INVALID_UC		8100610	0					
ANR	8100654	SwitchStatement	switch ( tpm )		8100610	4					
ANR	8100655	Condition	tpm	414:12:13373:13375	8100610	0	True				
ANR	8100656	Identifier	tpm		8100610	0					
ANR	8100657	CompoundStatement		9:17:192:192	8100610	1					
ANR	8100658	Label	default :	415:8:13388:13395	8100610	0	True				
ANR	8100659	Identifier	default		8100610	0					
ANR	8100660	ExpressionStatement	chr = src [ 0 ]	416:12:13409:13421	8100610	1	True				
ANR	8100661	AssignmentExpression	chr = src [ 0 ]		8100610	0		=			
ANR	8100662	Identifier	chr		8100610	0					
ANR	8100663	ArrayIndexing	src [ 0 ]		8100610	1					
ANR	8100664	Identifier	src		8100610	0					
ANR	8100665	PrimaryExpression	0		8100610	1					
ANR	8100666	BreakStatement	break ;	417:12:13435:13440	8100610	2	True				
ANR	8100667	Label	case tpm_21_DBCS7 :	419:8:13451:13468	8100610	3	True				
ANR	8100668	Identifier	tpm_21_DBCS7		8100610	0					
ANR	8100669	ExpressionStatement	chr = ( src [ 0 ] < 0x21 ) ? src [ 0 ] : ( src [ 0 ] << 8 | src [ 1 ] )	421:12:13526:13581	8100610	4	True				
ANR	8100670	AssignmentExpression	chr = ( src [ 0 ] < 0x21 ) ? src [ 0 ] : ( src [ 0 ] << 8 | src [ 1 ] )		8100610	0		=			
ANR	8100671	Identifier	chr		8100610	0					
ANR	8100672	ConditionalExpression	( src [ 0 ] < 0x21 ) ? src [ 0 ] : ( src [ 0 ] << 8 | src [ 1 ] )		8100610	1					
ANR	8100673	Condition	src [ 0 ] < 0x21		8100610	0					
ANR	8100674	RelationalExpression	src [ 0 ] < 0x21		8100610	0		<			
ANR	8100675	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100676	Identifier	src		8100610	0					
ANR	8100677	PrimaryExpression	0		8100610	1					
ANR	8100678	PrimaryExpression	0x21		8100610	1					
ANR	8100679	ArrayIndexing	src [ 0 ]		8100610	1					
ANR	8100680	Identifier	src		8100610	0					
ANR	8100681	PrimaryExpression	0		8100610	1					
ANR	8100682	InclusiveOrExpression	src [ 0 ] << 8 | src [ 1 ]		8100610	2		|			
ANR	8100683	ShiftExpression	src [ 0 ] << 8		8100610	0		<<			
ANR	8100684	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100685	Identifier	src		8100610	0					
ANR	8100686	PrimaryExpression	0		8100610	1					
ANR	8100687	PrimaryExpression	8		8100610	1					
ANR	8100688	ArrayIndexing	src [ 1 ]		8100610	1					
ANR	8100689	Identifier	src		8100610	0					
ANR	8100690	PrimaryExpression	1		8100610	1					
ANR	8100691	BreakStatement	break ;	422:12:13595:13600	8100610	5	True				
ANR	8100692	Label	case tpm_31_sjis :	424:8:13611:13627	8100610	6	True				
ANR	8100693	Identifier	tpm_31_sjis		8100610	0					
ANR	8100694	ExpressionStatement	chr = ( src [ 0 ] < 0x81 || ( src [ 0 ] > 0x9f && src [ 0 ] < 0xe0 ) || src [ 0 ] > 0xfc ) ? src [ 0 ] : ( src [ 0 ] << 8 | src [ 1 ] )	426:12:13696:13823	8100610	7	True				
ANR	8100695	AssignmentExpression	chr = ( src [ 0 ] < 0x81 || ( src [ 0 ] > 0x9f && src [ 0 ] < 0xe0 ) || src [ 0 ] > 0xfc ) ? src [ 0 ] : ( src [ 0 ] << 8 | src [ 1 ] )		8100610	0		=			
ANR	8100696	Identifier	chr		8100610	0					
ANR	8100697	ConditionalExpression	( src [ 0 ] < 0x81 || ( src [ 0 ] > 0x9f && src [ 0 ] < 0xe0 ) || src [ 0 ] > 0xfc ) ? src [ 0 ] : ( src [ 0 ] << 8 | src [ 1 ] )		8100610	1					
ANR	8100698	Condition	src [ 0 ] < 0x81 || ( src [ 0 ] > 0x9f && src [ 0 ] < 0xe0 ) || src [ 0 ] > 0xfc		8100610	0					
ANR	8100699	OrExpression	src [ 0 ] < 0x81 || ( src [ 0 ] > 0x9f && src [ 0 ] < 0xe0 ) || src [ 0 ] > 0xfc		8100610	0		||			
ANR	8100700	RelationalExpression	src [ 0 ] < 0x81		8100610	0		<			
ANR	8100701	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100702	Identifier	src		8100610	0					
ANR	8100703	PrimaryExpression	0		8100610	1					
ANR	8100704	PrimaryExpression	0x81		8100610	1					
ANR	8100705	OrExpression	( src [ 0 ] > 0x9f && src [ 0 ] < 0xe0 ) || src [ 0 ] > 0xfc		8100610	1		||			
ANR	8100706	AndExpression	src [ 0 ] > 0x9f && src [ 0 ] < 0xe0		8100610	0		&&			
ANR	8100707	RelationalExpression	src [ 0 ] > 0x9f		8100610	0		>			
ANR	8100708	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100709	Identifier	src		8100610	0					
ANR	8100710	PrimaryExpression	0		8100610	1					
ANR	8100711	PrimaryExpression	0x9f		8100610	1					
ANR	8100712	RelationalExpression	src [ 0 ] < 0xe0		8100610	1		<			
ANR	8100713	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100714	Identifier	src		8100610	0					
ANR	8100715	PrimaryExpression	0		8100610	1					
ANR	8100716	PrimaryExpression	0xe0		8100610	1					
ANR	8100717	RelationalExpression	src [ 0 ] > 0xfc		8100610	1		>			
ANR	8100718	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100719	Identifier	src		8100610	0					
ANR	8100720	PrimaryExpression	0		8100610	1					
ANR	8100721	PrimaryExpression	0xfc		8100610	1					
ANR	8100722	ArrayIndexing	src [ 0 ]		8100610	1					
ANR	8100723	Identifier	src		8100610	0					
ANR	8100724	PrimaryExpression	0		8100610	1					
ANR	8100725	InclusiveOrExpression	src [ 0 ] << 8 | src [ 1 ]		8100610	2		|			
ANR	8100726	ShiftExpression	src [ 0 ] << 8		8100610	0		<<			
ANR	8100727	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100728	Identifier	src		8100610	0					
ANR	8100729	PrimaryExpression	0		8100610	1					
ANR	8100730	PrimaryExpression	8		8100610	1					
ANR	8100731	ArrayIndexing	src [ 1 ]		8100610	1					
ANR	8100732	Identifier	src		8100610	0					
ANR	8100733	PrimaryExpression	1		8100610	1					
ANR	8100734	BreakStatement	break ;	428:12:13837:13842	8100610	8	True				
ANR	8100735	Label	case tpm_38_DBCS8 :	430:8:13853:13870	8100610	9	True				
ANR	8100736	Identifier	tpm_38_DBCS8		8100610	0					
ANR	8100737	ExpressionStatement	chr = ( src [ 0 ] < 0x80 ) ? src [ 0 ] : ( src [ 0 ] << 8 | src [ 1 ] )	432:12:13928:13983	8100610	10	True				
ANR	8100738	AssignmentExpression	chr = ( src [ 0 ] < 0x80 ) ? src [ 0 ] : ( src [ 0 ] << 8 | src [ 1 ] )		8100610	0		=			
ANR	8100739	Identifier	chr		8100610	0					
ANR	8100740	ConditionalExpression	( src [ 0 ] < 0x80 ) ? src [ 0 ] : ( src [ 0 ] << 8 | src [ 1 ] )		8100610	1					
ANR	8100741	Condition	src [ 0 ] < 0x80		8100610	0					
ANR	8100742	RelationalExpression	src [ 0 ] < 0x80		8100610	0		<			
ANR	8100743	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100744	Identifier	src		8100610	0					
ANR	8100745	PrimaryExpression	0		8100610	1					
ANR	8100746	PrimaryExpression	0x80		8100610	1					
ANR	8100747	ArrayIndexing	src [ 0 ]		8100610	1					
ANR	8100748	Identifier	src		8100610	0					
ANR	8100749	PrimaryExpression	0		8100610	1					
ANR	8100750	InclusiveOrExpression	src [ 0 ] << 8 | src [ 1 ]		8100610	2		|			
ANR	8100751	ShiftExpression	src [ 0 ] << 8		8100610	0		<<			
ANR	8100752	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100753	Identifier	src		8100610	0					
ANR	8100754	PrimaryExpression	0		8100610	1					
ANR	8100755	PrimaryExpression	8		8100610	1					
ANR	8100756	ArrayIndexing	src [ 1 ]		8100610	1					
ANR	8100757	Identifier	src		8100610	0					
ANR	8100758	PrimaryExpression	1		8100610	1					
ANR	8100759	BreakStatement	break ;	433:12:13997:14002	8100610	11	True				
ANR	8100760	Label	case tpm_83_utf8 :	434:8:14012:14028	8100610	12	True				
ANR	8100761	Identifier	tpm_83_utf8		8100610	0					
ANR	8100762	Label	case tpm_1008_utf8 :	435:8:14038:14056	8100610	13	True				
ANR	8100763	Identifier	tpm_1008_utf8		8100610	0					
ANR	8100764	IfStatement	if ( src [ 0 ] < 0x80 )		8100610	14					
ANR	8100765	Condition	src [ 0 ] < 0x80	436:16:14074:14086	8100610	0	True				
ANR	8100766	RelationalExpression	src [ 0 ] < 0x80		8100610	0		<			
ANR	8100767	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100768	Identifier	src		8100610	0					
ANR	8100769	PrimaryExpression	0		8100610	1					
ANR	8100770	PrimaryExpression	0x80		8100610	1					
ANR	8100771	CompoundStatement		31:31:903:903	8100610	1					
ANR	8100772	ExpressionStatement	chr = src [ 0 ]	438:16:14138:14150	8100610	0	True				
ANR	8100773	AssignmentExpression	chr = src [ 0 ]		8100610	0		=			
ANR	8100774	Identifier	chr		8100610	0					
ANR	8100775	ArrayIndexing	src [ 0 ]		8100610	1					
ANR	8100776	Identifier	src		8100610	0					
ANR	8100777	PrimaryExpression	0		8100610	1					
ANR	8100778	BreakStatement	break ;	439:16:14168:14173	8100610	1	True				
ANR	8100779	IfStatement	if ( src [ 0 ] < 0xc2 )		8100610	15					
ANR	8100780	Condition	src [ 0 ] < 0xc2	441:16:14205:14217	8100610	0	True				
ANR	8100781	RelationalExpression	src [ 0 ] < 0xc2		8100610	0		<			
ANR	8100782	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100783	Identifier	src		8100610	0					
ANR	8100784	PrimaryExpression	0		8100610	1					
ANR	8100785	PrimaryExpression	0xc2		8100610	1					
ANR	8100786	CompoundStatement		36:31:1034:1034	8100610	1					
ANR	8100787	ExpressionStatement	chr = INVALID_UC	442:16:14238:14254	8100610	0	True				
ANR	8100788	AssignmentExpression	chr = INVALID_UC		8100610	0		=			
ANR	8100789	Identifier	chr		8100610	0					
ANR	8100790	Identifier	INVALID_UC		8100610	1					
ANR	8100791	BreakStatement	break ;	443:16:14272:14277	8100610	1	True				
ANR	8100792	IfStatement	if ( src [ 0 ] < 0xe0 )		8100610	16					
ANR	8100793	Condition	src [ 0 ] < 0xe0	445:16:14309:14321	8100610	0	True				
ANR	8100794	RelationalExpression	src [ 0 ] < 0xe0		8100610	0		<			
ANR	8100795	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100796	Identifier	src		8100610	0					
ANR	8100797	PrimaryExpression	0		8100610	1					
ANR	8100798	PrimaryExpression	0xe0		8100610	1					
ANR	8100799	CompoundStatement		40:31:1138:1138	8100610	1					
ANR	8100800	ExpressionStatement	chr = ( src [ 0 ] & 0x1f )	447:16:14382:14403	8100610	0	True				
ANR	8100801	AssignmentExpression	chr = ( src [ 0 ] & 0x1f )		8100610	0		=			
ANR	8100802	Identifier	chr		8100610	0					
ANR	8100803	BitAndExpression	src [ 0 ] & 0x1f		8100610	1		&			
ANR	8100804	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100805	Identifier	src		8100610	0					
ANR	8100806	PrimaryExpression	0		8100610	1					
ANR	8100807	PrimaryExpression	0x1f		8100610	1					
ANR	8100808	ExpressionStatement	chr = ( chr << 6 ) | ( src [ 1 ] & 0x3f )	448:16:14421:14455	8100610	1	True				
ANR	8100809	AssignmentExpression	chr = ( chr << 6 ) | ( src [ 1 ] & 0x3f )		8100610	0		=			
ANR	8100810	Identifier	chr		8100610	0					
ANR	8100811	InclusiveOrExpression	( chr << 6 ) | ( src [ 1 ] & 0x3f )		8100610	1		|			
ANR	8100812	ShiftExpression	chr << 6		8100610	0		<<			
ANR	8100813	Identifier	chr		8100610	0					
ANR	8100814	PrimaryExpression	6		8100610	1					
ANR	8100815	BitAndExpression	src [ 1 ] & 0x3f		8100610	1		&			
ANR	8100816	ArrayIndexing	src [ 1 ]		8100610	0					
ANR	8100817	Identifier	src		8100610	0					
ANR	8100818	PrimaryExpression	1		8100610	1					
ANR	8100819	PrimaryExpression	0x3f		8100610	1					
ANR	8100820	BreakStatement	break ;	449:16:14473:14478	8100610	2	True				
ANR	8100821	IfStatement	if ( src [ 0 ] < 0xf0 )		8100610	17					
ANR	8100822	Condition	src [ 0 ] < 0xf0	451:16:14510:14522	8100610	0	True				
ANR	8100823	RelationalExpression	src [ 0 ] < 0xf0		8100610	0		<			
ANR	8100824	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100825	Identifier	src		8100610	0					
ANR	8100826	PrimaryExpression	0		8100610	1					
ANR	8100827	PrimaryExpression	0xf0		8100610	1					
ANR	8100828	CompoundStatement		46:31:1339:1339	8100610	1					
ANR	8100829	ExpressionStatement	chr = ( src [ 0 ] & 0x0f )	453:16:14592:14613	8100610	0	True				
ANR	8100830	AssignmentExpression	chr = ( src [ 0 ] & 0x0f )		8100610	0		=			
ANR	8100831	Identifier	chr		8100610	0					
ANR	8100832	BitAndExpression	src [ 0 ] & 0x0f		8100610	1		&			
ANR	8100833	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100834	Identifier	src		8100610	0					
ANR	8100835	PrimaryExpression	0		8100610	1					
ANR	8100836	PrimaryExpression	0x0f		8100610	1					
ANR	8100837	ExpressionStatement	chr = ( chr << 6 ) | ( src [ 1 ] & 0x3f )	454:16:14631:14665	8100610	1	True				
ANR	8100838	AssignmentExpression	chr = ( chr << 6 ) | ( src [ 1 ] & 0x3f )		8100610	0		=			
ANR	8100839	Identifier	chr		8100610	0					
ANR	8100840	InclusiveOrExpression	( chr << 6 ) | ( src [ 1 ] & 0x3f )		8100610	1		|			
ANR	8100841	ShiftExpression	chr << 6		8100610	0		<<			
ANR	8100842	Identifier	chr		8100610	0					
ANR	8100843	PrimaryExpression	6		8100610	1					
ANR	8100844	BitAndExpression	src [ 1 ] & 0x3f		8100610	1		&			
ANR	8100845	ArrayIndexing	src [ 1 ]		8100610	0					
ANR	8100846	Identifier	src		8100610	0					
ANR	8100847	PrimaryExpression	1		8100610	1					
ANR	8100848	PrimaryExpression	0x3f		8100610	1					
ANR	8100849	ExpressionStatement	chr = ( chr << 6 ) | ( src [ 2 ] & 0x3f )	455:16:14683:14717	8100610	2	True				
ANR	8100850	AssignmentExpression	chr = ( chr << 6 ) | ( src [ 2 ] & 0x3f )		8100610	0		=			
ANR	8100851	Identifier	chr		8100610	0					
ANR	8100852	InclusiveOrExpression	( chr << 6 ) | ( src [ 2 ] & 0x3f )		8100610	1		|			
ANR	8100853	ShiftExpression	chr << 6		8100610	0		<<			
ANR	8100854	Identifier	chr		8100610	0					
ANR	8100855	PrimaryExpression	6		8100610	1					
ANR	8100856	BitAndExpression	src [ 2 ] & 0x3f		8100610	1		&			
ANR	8100857	ArrayIndexing	src [ 2 ]		8100610	0					
ANR	8100858	Identifier	src		8100610	0					
ANR	8100859	PrimaryExpression	2		8100610	1					
ANR	8100860	PrimaryExpression	0x3f		8100610	1					
ANR	8100861	BreakStatement	break ;	456:16:14735:14740	8100610	3	True				
ANR	8100862	IfStatement	if ( src [ 0 ] < 0xf8 )		8100610	18					
ANR	8100863	Condition	src [ 0 ] < 0xf8	458:16:14772:14784	8100610	0	True				
ANR	8100864	RelationalExpression	src [ 0 ] < 0xf8		8100610	0		<			
ANR	8100865	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100866	Identifier	src		8100610	0					
ANR	8100867	PrimaryExpression	0		8100610	1					
ANR	8100868	PrimaryExpression	0xf8		8100610	1					
ANR	8100869	CompoundStatement		53:31:1601:1601	8100610	1					
ANR	8100870	ExpressionStatement	chr = INVALID_UC	461:16:14909:14925	8100610	0	True				
ANR	8100871	AssignmentExpression	chr = INVALID_UC		8100610	0		=			
ANR	8100872	Identifier	chr		8100610	0					
ANR	8100873	Identifier	INVALID_UC		8100610	1					
ANR	8100874	BreakStatement	break ;	462:16:14943:14948	8100610	1	True				
ANR	8100875	IfStatement	if ( src [ 0 ] < 0xfc )		8100610	19					
ANR	8100876	Condition	src [ 0 ] < 0xfc	464:16:14980:14992	8100610	0	True				
ANR	8100877	RelationalExpression	src [ 0 ] < 0xfc		8100610	0		<			
ANR	8100878	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100879	Identifier	src		8100610	0					
ANR	8100880	PrimaryExpression	0		8100610	1					
ANR	8100881	PrimaryExpression	0xfc		8100610	1					
ANR	8100882	CompoundStatement		59:31:1809:1809	8100610	1					
ANR	8100883	ExpressionStatement	chr = INVALID_UC	467:16:15126:15142	8100610	0	True				
ANR	8100884	AssignmentExpression	chr = INVALID_UC		8100610	0		=			
ANR	8100885	Identifier	chr		8100610	0					
ANR	8100886	Identifier	INVALID_UC		8100610	1					
ANR	8100887	BreakStatement	break ;	468:16:15160:15165	8100610	1	True				
ANR	8100888	IfStatement	if ( src [ 0 ] < 0xfe )		8100610	20					
ANR	8100889	Condition	src [ 0 ] < 0xfe	470:16:15197:15209	8100610	0	True				
ANR	8100890	RelationalExpression	src [ 0 ] < 0xfe		8100610	0		<			
ANR	8100891	ArrayIndexing	src [ 0 ]		8100610	0					
ANR	8100892	Identifier	src		8100610	0					
ANR	8100893	PrimaryExpression	0		8100610	1					
ANR	8100894	PrimaryExpression	0xfe		8100610	1					
ANR	8100895	CompoundStatement		65:31:2026:2026	8100610	1					
ANR	8100896	ExpressionStatement	chr = INVALID_UC	473:16:15352:15368	8100610	0	True				
ANR	8100897	AssignmentExpression	chr = INVALID_UC		8100610	0		=			
ANR	8100898	Identifier	chr		8100610	0					
ANR	8100899	Identifier	INVALID_UC		8100610	1					
ANR	8100900	BreakStatement	break ;	474:16:15386:15391	8100610	1	True				
ANR	8100901	ExpressionStatement	chr = INVALID_UC	476:12:15419:15435	8100610	21	True				
ANR	8100902	AssignmentExpression	chr = INVALID_UC		8100610	0		=			
ANR	8100903	Identifier	chr		8100610	0					
ANR	8100904	Identifier	INVALID_UC		8100610	1					
ANR	8100905	BreakStatement	break ;	477:12:15449:15454	8100610	22	True				
ANR	8100906	ExpressionStatement	* psrc += bytelen	479:4:15466:15482	8100610	5	True				
ANR	8100907	AssignmentExpression	* psrc += bytelen		8100610	0		+=			
ANR	8100908	UnaryOperationExpression	* psrc		8100610	0					
ANR	8100909	UnaryOperator	*		8100610	0					
ANR	8100910	Identifier	psrc		8100610	1					
ANR	8100911	Identifier	bytelen		8100610	1					
ANR	8100912	ReturnStatement	return chr ;	480:4:15488:15498	8100610	6	True				
ANR	8100913	Identifier	chr		8100610	0					
ANR	8100914	ReturnType	gs_char		8100610	1					
ANR	8100915	Identifier	pcl_char_get_char		8100610	2					
ANR	8100916	ParameterList	"pcl_text_parsing_method_t tpm , const byte * * psrc , int src_len"		8100610	3					
ANR	8100917	Parameter	pcl_text_parsing_method_t tpm	403:18:13079:13107	8100610	0	True				
ANR	8100918	ParameterType	pcl_text_parsing_method_t		8100610	0					
ANR	8100919	Identifier	tpm		8100610	1					
ANR	8100920	Parameter	const byte * * psrc	403:49:13110:13127	8100610	1	True				
ANR	8100921	ParameterType	const byte * *		8100610	0					
ANR	8100922	Identifier	psrc		8100610	1					
ANR	8100923	Parameter	int src_len	404:18:13148:13158	8100610	2	True				
ANR	8100924	ParameterType	int		8100610	0					
ANR	8100925	Identifier	src_len		8100610	1					
ANR	8100926	CFGEntryNode	ENTRY		8100610		True				
ANR	8100927	CFGExitNode	EXIT		8100610		True				
ANR	8100928	Symbol	tpm		8100610						
ANR	8100929	Symbol	psrc		8100610						
ANR	8100930	Symbol	bytelen		8100610						
ANR	8100931	Symbol	src		8100610						
ANR	8100932	Symbol	* psrc		8100610						
ANR	8100933	Symbol	pcl_char_bytelen		8100610						
ANR	8100934	Symbol	chr		8100610						
ANR	8100935	Symbol	INVALID_UC		8100610						
ANR	8100936	Symbol	src_len		8100610						
ANR	8100937	Symbol	* src		8100610						
ANR	8100938	Function	show_char_foreground	487:0:15615:16391							
ANR	8100939	FunctionDef	"show_char_foreground (const pcl_state_t * pcs , const gs_char * pbuff)"		8100938	0					
ANR	8100940	CompoundStatement		489:0:15695:16391	8100938	0					
ANR	8100941	IdentifierDeclStatement	int code = 0 ;	490:4:15701:15713	8100938	0	True				
ANR	8100942	IdentifierDecl	code = 0		8100938	0					
ANR	8100943	IdentifierDeclType	int		8100938	0					
ANR	8100944	Identifier	code		8100938	1					
ANR	8100945	AssignmentExpression	code = 0		8100938	2		=			
ANR	8100946	Identifier	code		8100938	0					
ANR	8100947	PrimaryExpression	0		8100938	1					
ANR	8100948	IdentifierDeclStatement	gs_text_enum_t * penum ;	491:4:15719:15740	8100938	1	True				
ANR	8100949	IdentifierDecl	* penum		8100938	0					
ANR	8100950	IdentifierDeclType	gs_text_enum_t *		8100938	0					
ANR	8100951	Identifier	penum		8100938	1					
ANR	8100952	IdentifierDeclStatement	pl_font_t * plfont = pcs -> font ;	492:4:15746:15775	8100938	2	True				
ANR	8100953	IdentifierDecl	* plfont = pcs -> font		8100938	0					
ANR	8100954	IdentifierDeclType	pl_font_t *		8100938	0					
ANR	8100955	Identifier	plfont		8100938	1					
ANR	8100956	AssignmentExpression	* plfont = pcs -> font		8100938	2		=			
ANR	8100957	Identifier	plfont		8100938	0					
ANR	8100958	PtrMemberAccess	pcs -> font		8100938	1					
ANR	8100959	Identifier	pcs		8100938	0					
ANR	8100960	Identifier	font		8100938	1					
ANR	8100961	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	493:4:15781:15811	8100938	3	True				
ANR	8100962	IdentifierDecl	* pfont = plfont -> pfont		8100938	0					
ANR	8100963	IdentifierDeclType	gs_font *		8100938	0					
ANR	8100964	Identifier	pfont		8100938	1					
ANR	8100965	AssignmentExpression	* pfont = plfont -> pfont		8100938	2		=			
ANR	8100966	Identifier	pfont		8100938	0					
ANR	8100967	PtrMemberAccess	plfont -> pfont		8100938	1					
ANR	8100968	Identifier	plfont		8100938	0					
ANR	8100969	Identifier	pfont		8100938	1					
ANR	8100970	IdentifierDeclStatement	gs_text_params_t text ;	494:4:15817:15838	8100938	4	True				
ANR	8100971	IdentifierDecl	text		8100938	0					
ANR	8100972	IdentifierDeclType	gs_text_params_t		8100938	0					
ANR	8100973	Identifier	text		8100938	1					
ANR	8100974	IfStatement	if ( ( pcs -> text_path == - 1 && ( ( pbuff [ 0 ] & 0xff00 ) != 0 ) ) || ( pcs -> text_path == 1 ) )		8100938	5					
ANR	8100975	Condition	( pcs -> text_path == - 1 && ( ( pbuff [ 0 ] & 0xff00 ) != 0 ) ) || ( pcs -> text_path == 1 )	497:8:15919:16003	8100938	0	True				
ANR	8100976	OrExpression	( pcs -> text_path == - 1 && ( ( pbuff [ 0 ] & 0xff00 ) != 0 ) ) || ( pcs -> text_path == 1 )		8100938	0		||			
ANR	8100977	AndExpression	pcs -> text_path == - 1 && ( ( pbuff [ 0 ] & 0xff00 ) != 0 )		8100938	0		&&			
ANR	8100978	EqualityExpression	pcs -> text_path == - 1		8100938	0		==			
ANR	8100979	PtrMemberAccess	pcs -> text_path		8100938	0					
ANR	8100980	Identifier	pcs		8100938	0					
ANR	8100981	Identifier	text_path		8100938	1					
ANR	8100982	UnaryOperationExpression	- 1		8100938	1					
ANR	8100983	UnaryOperator	-		8100938	0					
ANR	8100984	PrimaryExpression	1		8100938	1					
ANR	8100985	EqualityExpression	( pbuff [ 0 ] & 0xff00 ) != 0		8100938	1		!=			
ANR	8100986	BitAndExpression	pbuff [ 0 ] & 0xff00		8100938	0		&			
ANR	8100987	ArrayIndexing	pbuff [ 0 ]		8100938	0					
ANR	8100988	Identifier	pbuff		8100938	0					
ANR	8100989	PrimaryExpression	0		8100938	1					
ANR	8100990	PrimaryExpression	0xff00		8100938	1					
ANR	8100991	PrimaryExpression	0		8100938	1					
ANR	8100992	EqualityExpression	pcs -> text_path == 1		8100938	1		==			
ANR	8100993	PtrMemberAccess	pcs -> text_path		8100938	0					
ANR	8100994	Identifier	pcs		8100938	0					
ANR	8100995	Identifier	text_path		8100938	1					
ANR	8100996	PrimaryExpression	1		8100938	1					
ANR	8100997	ExpressionStatement	pfont -> WMode = 1	499:8:16014:16030	8100938	1	True				
ANR	8100998	AssignmentExpression	pfont -> WMode = 1		8100938	0		=			
ANR	8100999	PtrMemberAccess	pfont -> WMode		8100938	0					
ANR	8101000	Identifier	pfont		8100938	0					
ANR	8101001	Identifier	WMode		8100938	1					
ANR	8101002	PrimaryExpression	1		8100938	1					
ANR	8101003	ElseStatement	else		8100938	0					
ANR	8101004	ExpressionStatement	pfont -> WMode = 0	501:8:16049:16065	8100938	0	True				
ANR	8101005	AssignmentExpression	pfont -> WMode = 0		8100938	0		=			
ANR	8101006	PtrMemberAccess	pfont -> WMode		8100938	0					
ANR	8101007	Identifier	pfont		8100938	0					
ANR	8101008	Identifier	WMode		8100938	1					
ANR	8101009	PrimaryExpression	0		8100938	1					
ANR	8101010	ExpressionStatement	text . operation = TEXT_FROM_CHARS | TEXT_DO_DRAW | TEXT_RETURN_WIDTH	502:4:16071:16138	8100938	6	True				
ANR	8101011	AssignmentExpression	text . operation = TEXT_FROM_CHARS | TEXT_DO_DRAW | TEXT_RETURN_WIDTH		8100938	0		=			
ANR	8101012	MemberAccess	text . operation		8100938	0					
ANR	8101013	Identifier	text		8100938	0					
ANR	8101014	Identifier	operation		8100938	1					
ANR	8101015	InclusiveOrExpression	TEXT_FROM_CHARS | TEXT_DO_DRAW | TEXT_RETURN_WIDTH		8100938	1		|			
ANR	8101016	Identifier	TEXT_FROM_CHARS		8100938	0					
ANR	8101017	InclusiveOrExpression	TEXT_DO_DRAW | TEXT_RETURN_WIDTH		8100938	1		|			
ANR	8101018	Identifier	TEXT_DO_DRAW		8100938	0					
ANR	8101019	Identifier	TEXT_RETURN_WIDTH		8100938	1					
ANR	8101020	ExpressionStatement	text . data . chars = pbuff	503:4:16144:16167	8100938	7	True				
ANR	8101021	AssignmentExpression	text . data . chars = pbuff		8100938	0		=			
ANR	8101022	MemberAccess	text . data . chars		8100938	0					
ANR	8101023	MemberAccess	text . data		8100938	0					
ANR	8101024	Identifier	text		8100938	0					
ANR	8101025	Identifier	data		8100938	1					
ANR	8101026	Identifier	chars		8100938	1					
ANR	8101027	Identifier	pbuff		8100938	1					
ANR	8101028	ExpressionStatement	text . size = 1	504:4:16173:16186	8100938	8	True				
ANR	8101029	AssignmentExpression	text . size = 1		8100938	0		=			
ANR	8101030	MemberAccess	text . size		8100938	0					
ANR	8101031	Identifier	text		8100938	0					
ANR	8101032	Identifier	size		8100938	1					
ANR	8101033	PrimaryExpression	1		8100938	1					
ANR	8101034	ExpressionStatement	"code = gs_text_begin ( pcs -> pgs , & text , pcs -> memory , & penum )"	505:4:16192:16250	8100938	9	True				
ANR	8101035	AssignmentExpression	"code = gs_text_begin ( pcs -> pgs , & text , pcs -> memory , & penum )"		8100938	0		=			
ANR	8101036	Identifier	code		8100938	0					
ANR	8101037	CallExpression	"gs_text_begin ( pcs -> pgs , & text , pcs -> memory , & penum )"		8100938	1					
ANR	8101038	Callee	gs_text_begin		8100938	0					
ANR	8101039	Identifier	gs_text_begin		8100938	0					
ANR	8101040	ArgumentList	pcs -> pgs		8100938	1					
ANR	8101041	Argument	pcs -> pgs		8100938	0					
ANR	8101042	PtrMemberAccess	pcs -> pgs		8100938	0					
ANR	8101043	Identifier	pcs		8100938	0					
ANR	8101044	Identifier	pgs		8100938	1					
ANR	8101045	Argument	& text		8100938	1					
ANR	8101046	UnaryOperationExpression	& text		8100938	0					
ANR	8101047	UnaryOperator	&		8100938	0					
ANR	8101048	Identifier	text		8100938	1					
ANR	8101049	Argument	pcs -> memory		8100938	2					
ANR	8101050	PtrMemberAccess	pcs -> memory		8100938	0					
ANR	8101051	Identifier	pcs		8100938	0					
ANR	8101052	Identifier	memory		8100938	1					
ANR	8101053	Argument	& penum		8100938	3					
ANR	8101054	UnaryOperationExpression	& penum		8100938	0					
ANR	8101055	UnaryOperator	&		8100938	0					
ANR	8101056	Identifier	penum		8100938	1					
ANR	8101057	IfStatement	if ( code >= 0 )		8100938	10					
ANR	8101058	Condition	code >= 0	506:8:16260:16268	8100938	0	True				
ANR	8101059	RelationalExpression	code >= 0		8100938	0		>=			
ANR	8101060	Identifier	code		8100938	0					
ANR	8101061	PrimaryExpression	0		8100938	1					
ANR	8101062	CompoundStatement		18:19:575:575	8100938	1					
ANR	8101063	ExpressionStatement	code = gs_text_process ( penum )	507:8:16281:16310	8100938	0	True				
ANR	8101064	AssignmentExpression	code = gs_text_process ( penum )		8100938	0		=			
ANR	8101065	Identifier	code		8100938	0					
ANR	8101066	CallExpression	gs_text_process ( penum )		8100938	1					
ANR	8101067	Callee	gs_text_process		8100938	0					
ANR	8101068	Identifier	gs_text_process		8100938	0					
ANR	8101069	ArgumentList	penum		8100938	1					
ANR	8101070	Argument	penum		8100938	0					
ANR	8101071	Identifier	penum		8100938	0					
ANR	8101072	ExpressionStatement	"gs_text_release ( penum , ""show_char_foreground"" )"	508:8:16320:16366	8100938	1	True				
ANR	8101073	CallExpression	"gs_text_release ( penum , ""show_char_foreground"" )"		8100938	0					
ANR	8101074	Callee	gs_text_release		8100938	0					
ANR	8101075	Identifier	gs_text_release		8100938	0					
ANR	8101076	ArgumentList	penum		8100938	1					
ANR	8101077	Argument	penum		8100938	0					
ANR	8101078	Identifier	penum		8100938	0					
ANR	8101079	Argument	"""show_char_foreground"""		8100938	1					
ANR	8101080	PrimaryExpression	"""show_char_foreground"""		8100938	0					
ANR	8101081	ReturnStatement	return code ;	510:4:16378:16389	8100938	11	True				
ANR	8101082	Identifier	code		8100938	0					
ANR	8101083	ReturnType	static int		8100938	1					
ANR	8101084	Identifier	show_char_foreground		8100938	2					
ANR	8101085	ParameterList	"const pcl_state_t * pcs , const gs_char * pbuff"		8100938	3					
ANR	8101086	Parameter	const pcl_state_t * pcs	488:21:15647:15669	8100938	0	True				
ANR	8101087	ParameterType	const pcl_state_t *		8100938	0					
ANR	8101088	Identifier	pcs		8100938	1					
ANR	8101089	Parameter	const gs_char * pbuff	488:46:15672:15692	8100938	1	True				
ANR	8101090	ParameterType	const gs_char *		8100938	0					
ANR	8101091	Identifier	pbuff		8100938	1					
ANR	8101092	CFGEntryNode	ENTRY		8100938		True				
ANR	8101093	CFGExitNode	EXIT		8100938		True				
ANR	8101094	Symbol	text . data		8100938						
ANR	8101095	Symbol	code		8100938						
ANR	8101096	Symbol	* pcs		8100938						
ANR	8101097	Symbol	plfont		8100938						
ANR	8101098	Symbol	pcs -> font		8100938						
ANR	8101099	Symbol	pfont -> WMode		8100938						
ANR	8101100	Symbol	text . data . chars		8100938						
ANR	8101101	Symbol	text . operation		8100938						
ANR	8101102	Symbol	& penum		8100938						
ANR	8101103	Symbol	pcs -> text_path		8100938						
ANR	8101104	Symbol	pcs -> memory		8100938						
ANR	8101105	Symbol	pbuff		8100938						
ANR	8101106	Symbol	text		8100938						
ANR	8101107	Symbol	TEXT_FROM_CHARS		8100938						
ANR	8101108	Symbol	gs_text_process		8100938						
ANR	8101109	Symbol	pcs		8100938						
ANR	8101110	Symbol	TEXT_RETURN_WIDTH		8100938						
ANR	8101111	Symbol	TEXT_DO_DRAW		8100938						
ANR	8101112	Symbol	pfont		8100938						
ANR	8101113	Symbol	pcs -> pgs		8100938						
ANR	8101114	Symbol	penum		8100938						
ANR	8101115	Symbol	text . size		8100938						
ANR	8101116	Symbol	gs_text_begin		8100938						
ANR	8101117	Symbol	* pfont		8100938						
ANR	8101118	Symbol	plfont -> pfont		8100938						
ANR	8101119	Symbol	* pbuff		8100938						
ANR	8101120	Symbol	& text		8100938						
ANR	8101121	Symbol	* plfont		8100938						
ANR	8101122	Function	show_char_invisible_foreground	513:0:16394:18625							
ANR	8101123	FunctionDef	"show_char_invisible_foreground (const pcl_state_t * pcs , const gs_char * pbuff)"		8101122	0					
ANR	8101124	CompoundStatement		515:0:16484:18625	8101122	0					
ANR	8101125	IdentifierDeclStatement	gs_c_param_list list ;	517:4:16491:16511	8101122	0	True				
ANR	8101126	IdentifierDecl	list		8101122	0					
ANR	8101127	IdentifierDeclType	gs_c_param_list		8101122	0					
ANR	8101128	Identifier	list		8101122	1					
ANR	8101129	IdentifierDeclStatement	dev_param_req_t request ;	518:4:16517:16540	8101122	1	True				
ANR	8101130	IdentifierDecl	request		8101122	0					
ANR	8101131	IdentifierDeclType	dev_param_req_t		8101122	0					
ANR	8101132	Identifier	request		8101122	1					
ANR	8101133	IdentifierDeclStatement	"gs_param_name ParamName = ""PreserveTrMode"" ;"	519:4:16546:16588	8101122	2	True				
ANR	8101134	IdentifierDecl	"ParamName = ""PreserveTrMode"""		8101122	0					
ANR	8101135	IdentifierDeclType	gs_param_name		8101122	0					
ANR	8101136	Identifier	ParamName		8101122	1					
ANR	8101137	AssignmentExpression	"ParamName = ""PreserveTrMode"""		8101122	2		=			
ANR	8101138	Identifier	ParamName		8101122	0					
ANR	8101139	PrimaryExpression	"""PreserveTrMode"""		8101122	1					
ANR	8101140	IdentifierDeclStatement	gs_param_typed_value Param ;	520:4:16594:16620	8101122	3	True				
ANR	8101141	IdentifierDecl	Param		8101122	0					
ANR	8101142	IdentifierDeclType	gs_param_typed_value		8101122	0					
ANR	8101143	Identifier	Param		8101122	1					
ANR	8101144	IdentifierDeclStatement	char * data ;	521:4:16626:16636	8101122	4	True				
ANR	8101145	IdentifierDecl	* data		8101122	0					
ANR	8101146	IdentifierDeclType	char *		8101122	0					
ANR	8101147	Identifier	data		8101122	1					
ANR	8101148	IdentifierDeclStatement	gs_gstate * pgs = pcs -> pgs ;	522:4:16642:16667	8101122	5	True				
ANR	8101149	IdentifierDecl	* pgs = pcs -> pgs		8101122	0					
ANR	8101150	IdentifierDeclType	gs_gstate *		8101122	0					
ANR	8101151	Identifier	pgs		8101122	1					
ANR	8101152	AssignmentExpression	* pgs = pcs -> pgs		8101122	2		=			
ANR	8101153	Identifier	pgs		8101122	0					
ANR	8101154	PtrMemberAccess	pcs -> pgs		8101122	1					
ANR	8101155	Identifier	pcs		8101122	0					
ANR	8101156	Identifier	pgs		8101122	1					
ANR	8101157	IdentifierDeclStatement	uint saved_mode = gs_currenttextrenderingmode ( pgs ) ;	523:4:16673:16723	8101122	6	True				
ANR	8101158	IdentifierDecl	saved_mode = gs_currenttextrenderingmode ( pgs )		8101122	0					
ANR	8101159	IdentifierDeclType	uint		8101122	0					
ANR	8101160	Identifier	saved_mode		8101122	1					
ANR	8101161	AssignmentExpression	saved_mode = gs_currenttextrenderingmode ( pgs )		8101122	2		=			
ANR	8101162	Identifier	saved_mode		8101122	0					
ANR	8101163	CallExpression	gs_currenttextrenderingmode ( pgs )		8101122	1					
ANR	8101164	Callee	gs_currenttextrenderingmode		8101122	0					
ANR	8101165	Identifier	gs_currenttextrenderingmode		8101122	0					
ANR	8101166	ArgumentList	pgs		8101122	1					
ANR	8101167	Argument	pgs		8101122	0					
ANR	8101168	Identifier	pgs		8101122	0					
ANR	8101169	IdentifierDeclStatement	int code = 0 ;	524:4:16729:16741	8101122	7	True				
ANR	8101170	IdentifierDecl	code = 0		8101122	0					
ANR	8101171	IdentifierDeclType	int		8101122	0					
ANR	8101172	Identifier	code		8101122	1					
ANR	8101173	AssignmentExpression	code = 0		8101122	2		=			
ANR	8101174	Identifier	code		8101122	0					
ANR	8101175	PrimaryExpression	0		8101122	1					
ANR	8101176	ExpressionStatement	"data = ( char * ) gs_alloc_bytes ( pcs -> memory , 15 , ""temporary special_op string"" )"	530:4:16941:17018	8101122	8	True				
ANR	8101177	AssignmentExpression	"data = ( char * ) gs_alloc_bytes ( pcs -> memory , 15 , ""temporary special_op string"" )"		8101122	0		=			
ANR	8101178	Identifier	data		8101122	0					
ANR	8101179	CastExpression	"( char * ) gs_alloc_bytes ( pcs -> memory , 15 , ""temporary special_op string"" )"		8101122	1					
ANR	8101180	CastTarget	char *		8101122	0					
ANR	8101181	CallExpression	"gs_alloc_bytes ( pcs -> memory , 15 , ""temporary special_op string"" )"		8101122	1					
ANR	8101182	Callee	gs_alloc_bytes		8101122	0					
ANR	8101183	Identifier	gs_alloc_bytes		8101122	0					
ANR	8101184	ArgumentList	pcs -> memory		8101122	1					
ANR	8101185	Argument	pcs -> memory		8101122	0					
ANR	8101186	PtrMemberAccess	pcs -> memory		8101122	0					
ANR	8101187	Identifier	pcs		8101122	0					
ANR	8101188	Identifier	memory		8101122	1					
ANR	8101189	Argument	15		8101122	1					
ANR	8101190	PrimaryExpression	15		8101122	0					
ANR	8101191	Argument	"""temporary special_op string"""		8101122	2					
ANR	8101192	PrimaryExpression	"""temporary special_op string"""		8101122	0					
ANR	8101193	ExpressionStatement	"memset ( data , 0x00 , 15 )"	531:4:17024:17046	8101122	9	True				
ANR	8101194	CallExpression	"memset ( data , 0x00 , 15 )"		8101122	0					
ANR	8101195	Callee	memset		8101122	0					
ANR	8101196	Identifier	memset		8101122	0					
ANR	8101197	ArgumentList	data		8101122	1					
ANR	8101198	Argument	data		8101122	0					
ANR	8101199	Identifier	data		8101122	0					
ANR	8101200	Argument	0x00		8101122	1					
ANR	8101201	PrimaryExpression	0x00		8101122	0					
ANR	8101202	Argument	15		8101122	2					
ANR	8101203	PrimaryExpression	15		8101122	0					
ANR	8101204	ExpressionStatement	"memcpy ( data , ""PreserveTrMode"" , 15 )"	532:4:17052:17086	8101122	10	True				
ANR	8101205	CallExpression	"memcpy ( data , ""PreserveTrMode"" , 15 )"		8101122	0					
ANR	8101206	Callee	memcpy		8101122	0					
ANR	8101207	Identifier	memcpy		8101122	0					
ANR	8101208	ArgumentList	data		8101122	1					
ANR	8101209	Argument	data		8101122	0					
ANR	8101210	Identifier	data		8101122	0					
ANR	8101211	Argument	"""PreserveTrMode"""		8101122	1					
ANR	8101212	PrimaryExpression	"""PreserveTrMode"""		8101122	0					
ANR	8101213	Argument	15		8101122	2					
ANR	8101214	PrimaryExpression	15		8101122	0					
ANR	8101215	ExpressionStatement	"gs_c_param_list_write ( & list , pcs -> memory )"	533:4:17092:17133	8101122	11	True				
ANR	8101216	CallExpression	"gs_c_param_list_write ( & list , pcs -> memory )"		8101122	0					
ANR	8101217	Callee	gs_c_param_list_write		8101122	0					
ANR	8101218	Identifier	gs_c_param_list_write		8101122	0					
ANR	8101219	ArgumentList	& list		8101122	1					
ANR	8101220	Argument	& list		8101122	0					
ANR	8101221	UnaryOperationExpression	& list		8101122	0					
ANR	8101222	UnaryOperator	&		8101122	0					
ANR	8101223	Identifier	list		8101122	1					
ANR	8101224	Argument	pcs -> memory		8101122	1					
ANR	8101225	PtrMemberAccess	pcs -> memory		8101122	0					
ANR	8101226	Identifier	pcs		8101122	0					
ANR	8101227	Identifier	memory		8101122	1					
ANR	8101228	ExpressionStatement	Param . type = gs_param_type_null	535:4:17216:17247	8101122	12	True				
ANR	8101229	AssignmentExpression	Param . type = gs_param_type_null		8101122	0		=			
ANR	8101230	MemberAccess	Param . type		8101122	0					
ANR	8101231	Identifier	Param		8101122	0					
ANR	8101232	Identifier	type		8101122	1					
ANR	8101233	Identifier	gs_param_type_null		8101122	1					
ANR	8101234	ExpressionStatement	"list . procs -> xmit_typed ( ( gs_param_list * ) & list , ParamName , & Param )"	536:4:17253:17318	8101122	13	True				
ANR	8101235	CallExpression	"list . procs -> xmit_typed ( ( gs_param_list * ) & list , ParamName , & Param )"		8101122	0					
ANR	8101236	Callee	list . procs -> xmit_typed		8101122	0					
ANR	8101237	PtrMemberAccess	list . procs -> xmit_typed		8101122	0					
ANR	8101238	MemberAccess	list . procs		8101122	0					
ANR	8101239	Identifier	list		8101122	0					
ANR	8101240	Identifier	procs		8101122	1					
ANR	8101241	Identifier	xmit_typed		8101122	1					
ANR	8101242	ArgumentList	( gs_param_list * ) & list		8101122	1					
ANR	8101243	Argument	( gs_param_list * ) & list		8101122	0					
ANR	8101244	CastExpression	( gs_param_list * ) & list		8101122	0					
ANR	8101245	CastTarget	gs_param_list *		8101122	0					
ANR	8101246	UnaryOperationExpression	& list		8101122	1					
ANR	8101247	UnaryOperator	&		8101122	0					
ANR	8101248	Identifier	list		8101122	1					
ANR	8101249	Argument	ParamName		8101122	1					
ANR	8101250	Identifier	ParamName		8101122	0					
ANR	8101251	Argument	& Param		8101122	2					
ANR	8101252	UnaryOperationExpression	& Param		8101122	0					
ANR	8101253	UnaryOperator	&		8101122	0					
ANR	8101254	Identifier	Param		8101122	1					
ANR	8101255	ExpressionStatement	request . Param = data	538:4:17393:17413	8101122	14	True				
ANR	8101256	AssignmentExpression	request . Param = data		8101122	0		=			
ANR	8101257	MemberAccess	request . Param		8101122	0					
ANR	8101258	Identifier	request		8101122	0					
ANR	8101259	Identifier	Param		8101122	1					
ANR	8101260	Identifier	data		8101122	1					
ANR	8101261	ExpressionStatement	request . list = & list	539:4:17419:17439	8101122	15	True				
ANR	8101262	AssignmentExpression	request . list = & list		8101122	0		=			
ANR	8101263	MemberAccess	request . list		8101122	0					
ANR	8101264	Identifier	request		8101122	0					
ANR	8101265	Identifier	list		8101122	1					
ANR	8101266	UnaryOperationExpression	& list		8101122	1					
ANR	8101267	UnaryOperator	&		8101122	0					
ANR	8101268	Identifier	list		8101122	1					
ANR	8101269	ExpressionStatement	"code = dev_proc ( gs_currentdevice ( pgs ) , dev_spec_op ) ( gs_currentdevice ( pgs ) , gxdso_get_dev_param , & request , sizeof ( dev_param_req_t ) )"	541:4:17446:17632	8101122	16	True				
ANR	8101270	AssignmentExpression	"code = dev_proc ( gs_currentdevice ( pgs ) , dev_spec_op ) ( gs_currentdevice ( pgs ) , gxdso_get_dev_param , & request , sizeof ( dev_param_req_t ) )"		8101122	0		=			
ANR	8101271	Identifier	code		8101122	0					
ANR	8101272	CallExpression	"dev_proc ( gs_currentdevice ( pgs ) , dev_spec_op ) ( gs_currentdevice ( pgs ) , gxdso_get_dev_param , & request , sizeof ( dev_param_req_t ) )"		8101122	1					
ANR	8101273	Callee	"dev_proc ( gs_currentdevice ( pgs ) , dev_spec_op )"		8101122	0					
ANR	8101274	CallExpression	"dev_proc ( gs_currentdevice ( pgs ) , dev_spec_op )"		8101122	0					
ANR	8101275	Callee	dev_proc		8101122	0					
ANR	8101276	Identifier	dev_proc		8101122	0					
ANR	8101277	ArgumentList	gs_currentdevice ( pgs )		8101122	1					
ANR	8101278	Argument	gs_currentdevice ( pgs )		8101122	0					
ANR	8101279	CallExpression	gs_currentdevice ( pgs )		8101122	0					
ANR	8101280	Callee	gs_currentdevice		8101122	0					
ANR	8101281	Identifier	gs_currentdevice		8101122	0					
ANR	8101282	ArgumentList	pgs		8101122	1					
ANR	8101283	Argument	pgs		8101122	0					
ANR	8101284	Identifier	pgs		8101122	0					
ANR	8101285	Argument	dev_spec_op		8101122	1					
ANR	8101286	Identifier	dev_spec_op		8101122	0					
ANR	8101287	ArgumentList	gs_currentdevice ( pgs )		8101122	1					
ANR	8101288	Argument	gs_currentdevice ( pgs )		8101122	0					
ANR	8101289	CallExpression	gs_currentdevice ( pgs )		8101122	0					
ANR	8101290	Callee	gs_currentdevice		8101122	0					
ANR	8101291	Identifier	gs_currentdevice		8101122	0					
ANR	8101292	ArgumentList	pgs		8101122	1					
ANR	8101293	Argument	pgs		8101122	0					
ANR	8101294	Identifier	pgs		8101122	0					
ANR	8101295	Argument	gxdso_get_dev_param		8101122	1					
ANR	8101296	Identifier	gxdso_get_dev_param		8101122	0					
ANR	8101297	Argument	& request		8101122	2					
ANR	8101298	UnaryOperationExpression	& request		8101122	0					
ANR	8101299	UnaryOperator	&		8101122	0					
ANR	8101300	Identifier	request		8101122	1					
ANR	8101301	Argument	sizeof ( dev_param_req_t )		8101122	3					
ANR	8101302	SizeofExpression	sizeof ( dev_param_req_t )		8101122	0					
ANR	8101303	Sizeof	sizeof		8101122	0					
ANR	8101304	SizeofOperand	dev_param_req_t		8101122	1					
ANR	8101305	IfStatement	if ( code != gs_error_undefined )		8101122	17					
ANR	8101306	Condition	code != gs_error_undefined	544:8:17643:17668	8101122	0	True				
ANR	8101307	EqualityExpression	code != gs_error_undefined		8101122	0		!=			
ANR	8101308	Identifier	code		8101122	0					
ANR	8101309	Identifier	gs_error_undefined		8101122	1					
ANR	8101310	CompoundStatement		30:36:1186:1186	8101122	1					
ANR	8101311	ExpressionStatement	gs_c_param_list_read ( & list )	546:8:17764:17791	8101122	0	True				
ANR	8101312	CallExpression	gs_c_param_list_read ( & list )		8101122	0					
ANR	8101313	Callee	gs_c_param_list_read		8101122	0					
ANR	8101314	Identifier	gs_c_param_list_read		8101122	0					
ANR	8101315	ArgumentList	& list		8101122	1					
ANR	8101316	Argument	& list		8101122	0					
ANR	8101317	UnaryOperationExpression	& list		8101122	0					
ANR	8101318	UnaryOperator	&		8101122	0					
ANR	8101319	Identifier	list		8101122	1					
ANR	8101320	ExpressionStatement	"list . procs -> xmit_typed ( ( gs_param_list * ) & list , ParamName , & Param )"	547:8:17801:17866	8101122	1	True				
ANR	8101321	CallExpression	"list . procs -> xmit_typed ( ( gs_param_list * ) & list , ParamName , & Param )"		8101122	0					
ANR	8101322	Callee	list . procs -> xmit_typed		8101122	0					
ANR	8101323	PtrMemberAccess	list . procs -> xmit_typed		8101122	0					
ANR	8101324	MemberAccess	list . procs		8101122	0					
ANR	8101325	Identifier	list		8101122	0					
ANR	8101326	Identifier	procs		8101122	1					
ANR	8101327	Identifier	xmit_typed		8101122	1					
ANR	8101328	ArgumentList	( gs_param_list * ) & list		8101122	1					
ANR	8101329	Argument	( gs_param_list * ) & list		8101122	0					
ANR	8101330	CastExpression	( gs_param_list * ) & list		8101122	0					
ANR	8101331	CastTarget	gs_param_list *		8101122	0					
ANR	8101332	UnaryOperationExpression	& list		8101122	1					
ANR	8101333	UnaryOperator	&		8101122	0					
ANR	8101334	Identifier	list		8101122	1					
ANR	8101335	Argument	ParamName		8101122	1					
ANR	8101336	Identifier	ParamName		8101122	0					
ANR	8101337	Argument	& Param		8101122	2					
ANR	8101338	UnaryOperationExpression	& Param		8101122	0					
ANR	8101339	UnaryOperator	&		8101122	0					
ANR	8101340	Identifier	Param		8101122	1					
ANR	8101341	IfStatement	if ( Param . type != gs_param_type_bool )		8101122	2					
ANR	8101342	Condition	Param . type != gs_param_type_bool	549:12:17881:17912	8101122	0	True				
ANR	8101343	EqualityExpression	Param . type != gs_param_type_bool		8101122	0		!=			
ANR	8101344	MemberAccess	Param . type		8101122	0					
ANR	8101345	Identifier	Param		8101122	0					
ANR	8101346	Identifier	type		8101122	1					
ANR	8101347	Identifier	gs_param_type_bool		8101122	1					
ANR	8101348	CompoundStatement		35:46:1430:1430	8101122	1					
ANR	8101349	ExpressionStatement	"gs_free_object ( pcs -> memory , data , ""temporary special_op string"" )"	551:12:18000:18063	8101122	0	True				
ANR	8101350	CallExpression	"gs_free_object ( pcs -> memory , data , ""temporary special_op string"" )"		8101122	0					
ANR	8101351	Callee	gs_free_object		8101122	0					
ANR	8101352	Identifier	gs_free_object		8101122	0					
ANR	8101353	ArgumentList	pcs -> memory		8101122	1					
ANR	8101354	Argument	pcs -> memory		8101122	0					
ANR	8101355	PtrMemberAccess	pcs -> memory		8101122	0					
ANR	8101356	Identifier	pcs		8101122	0					
ANR	8101357	Identifier	memory		8101122	1					
ANR	8101358	Argument	data		8101122	1					
ANR	8101359	Identifier	data		8101122	0					
ANR	8101360	Argument	"""temporary special_op string"""		8101122	2					
ANR	8101361	PrimaryExpression	"""temporary special_op string"""		8101122	0					
ANR	8101362	ExpressionStatement	gs_c_param_list_release ( & list )	552:12:18077:18107	8101122	1	True				
ANR	8101363	CallExpression	gs_c_param_list_release ( & list )		8101122	0					
ANR	8101364	Callee	gs_c_param_list_release		8101122	0					
ANR	8101365	Identifier	gs_c_param_list_release		8101122	0					
ANR	8101366	ArgumentList	& list		8101122	1					
ANR	8101367	Argument	& list		8101122	0					
ANR	8101368	UnaryOperationExpression	& list		8101122	0					
ANR	8101369	UnaryOperator	&		8101122	0					
ANR	8101370	Identifier	list		8101122	1					
ANR	8101371	ReturnStatement	return gs_error_typecheck ;	553:12:18121:18146	8101122	2	True				
ANR	8101372	Identifier	gs_error_typecheck		8101122	0					
ANR	8101373	IfStatement	if ( Param . value . b )		8101122	3					
ANR	8101374	Condition	Param . value . b	556:12:18171:18183	8101122	0	True				
ANR	8101375	MemberAccess	Param . value . b		8101122	0					
ANR	8101376	MemberAccess	Param . value		8101122	0					
ANR	8101377	Identifier	Param		8101122	0					
ANR	8101378	Identifier	value		8101122	1					
ANR	8101379	Identifier	b		8101122	1					
ANR	8101380	CompoundStatement		42:27:1701:1701	8101122	1					
ANR	8101381	ExpressionStatement	"gs_settextrenderingmode ( pgs , 3 )"	559:12:18316:18347	8101122	0	True				
ANR	8101382	CallExpression	"gs_settextrenderingmode ( pgs , 3 )"		8101122	0					
ANR	8101383	Callee	gs_settextrenderingmode		8101122	0					
ANR	8101384	Identifier	gs_settextrenderingmode		8101122	0					
ANR	8101385	ArgumentList	pgs		8101122	1					
ANR	8101386	Argument	pgs		8101122	0					
ANR	8101387	Identifier	pgs		8101122	0					
ANR	8101388	Argument	3		8101122	1					
ANR	8101389	PrimaryExpression	3		8101122	0					
ANR	8101390	ExpressionStatement	"code = show_char_foreground ( pcs , pbuff )"	560:12:18361:18400	8101122	1	True				
ANR	8101391	AssignmentExpression	"code = show_char_foreground ( pcs , pbuff )"		8101122	0		=			
ANR	8101392	Identifier	code		8101122	0					
ANR	8101393	CallExpression	"show_char_foreground ( pcs , pbuff )"		8101122	1					
ANR	8101394	Callee	show_char_foreground		8101122	0					
ANR	8101395	Identifier	show_char_foreground		8101122	0					
ANR	8101396	ArgumentList	pcs		8101122	1					
ANR	8101397	Argument	pcs		8101122	0					
ANR	8101398	Identifier	pcs		8101122	0					
ANR	8101399	Argument	pbuff		8101122	1					
ANR	8101400	Identifier	pbuff		8101122	0					
ANR	8101401	ExpressionStatement	"gs_settextrenderingmode ( pgs , saved_mode )"	561:12:18414:18454	8101122	2	True				
ANR	8101402	CallExpression	"gs_settextrenderingmode ( pgs , saved_mode )"		8101122	0					
ANR	8101403	Callee	gs_settextrenderingmode		8101122	0					
ANR	8101404	Identifier	gs_settextrenderingmode		8101122	0					
ANR	8101405	ArgumentList	pgs		8101122	1					
ANR	8101406	Argument	pgs		8101122	0					
ANR	8101407	Identifier	pgs		8101122	0					
ANR	8101408	Argument	saved_mode		8101122	1					
ANR	8101409	Identifier	saved_mode		8101122	0					
ANR	8101410	ElseStatement	else		8101122	0					
ANR	8101411	CompoundStatement		49:11:1992:1992	8101122	0					
ANR	8101412	ExpressionStatement	code = 0	564:8:18487:18495	8101122	0	True				
ANR	8101413	AssignmentExpression	code = 0		8101122	0		=			
ANR	8101414	Identifier	code		8101122	0					
ANR	8101415	PrimaryExpression	0		8101122	1					
ANR	8101416	ExpressionStatement	"gs_free_object ( pcs -> memory , data , ""temporary special_op string"" )"	566:4:18507:18570	8101122	18	True				
ANR	8101417	CallExpression	"gs_free_object ( pcs -> memory , data , ""temporary special_op string"" )"		8101122	0					
ANR	8101418	Callee	gs_free_object		8101122	0					
ANR	8101419	Identifier	gs_free_object		8101122	0					
ANR	8101420	ArgumentList	pcs -> memory		8101122	1					
ANR	8101421	Argument	pcs -> memory		8101122	0					
ANR	8101422	PtrMemberAccess	pcs -> memory		8101122	0					
ANR	8101423	Identifier	pcs		8101122	0					
ANR	8101424	Identifier	memory		8101122	1					
ANR	8101425	Argument	data		8101122	1					
ANR	8101426	Identifier	data		8101122	0					
ANR	8101427	Argument	"""temporary special_op string"""		8101122	2					
ANR	8101428	PrimaryExpression	"""temporary special_op string"""		8101122	0					
ANR	8101429	ExpressionStatement	gs_c_param_list_release ( & list )	567:4:18576:18606	8101122	19	True				
ANR	8101430	CallExpression	gs_c_param_list_release ( & list )		8101122	0					
ANR	8101431	Callee	gs_c_param_list_release		8101122	0					
ANR	8101432	Identifier	gs_c_param_list_release		8101122	0					
ANR	8101433	ArgumentList	& list		8101122	1					
ANR	8101434	Argument	& list		8101122	0					
ANR	8101435	UnaryOperationExpression	& list		8101122	0					
ANR	8101436	UnaryOperator	&		8101122	0					
ANR	8101437	Identifier	list		8101122	1					
ANR	8101438	ReturnStatement	return code ;	568:4:18612:18623	8101122	20	True				
ANR	8101439	Identifier	code		8101122	0					
ANR	8101440	ReturnType	static int		8101122	1					
ANR	8101441	Identifier	show_char_invisible_foreground		8101122	2					
ANR	8101442	ParameterList	"const pcl_state_t * pcs , const gs_char * pbuff"		8101122	3					
ANR	8101443	Parameter	const pcl_state_t * pcs	514:31:16436:16458	8101122	0	True				
ANR	8101444	ParameterType	const pcl_state_t *		8101122	0					
ANR	8101445	Identifier	pcs		8101122	1					
ANR	8101446	Parameter	const gs_char * pbuff	514:56:16461:16481	8101122	1	True				
ANR	8101447	ParameterType	const gs_char *		8101122	0					
ANR	8101448	Identifier	pbuff		8101122	1					
ANR	8101449	CFGEntryNode	ENTRY		8101122		True				
ANR	8101450	CFGExitNode	EXIT		8101122		True				
ANR	8101451	Symbol	request		8101122						
ANR	8101452	Symbol	request . Param		8101122						
ANR	8101453	Symbol	gs_param_type_null		8101122						
ANR	8101454	Symbol	code		8101122						
ANR	8101455	Symbol	data		8101122						
ANR	8101456	Symbol	saved_mode		8101122						
ANR	8101457	Symbol	& request		8101122						
ANR	8101458	Symbol	dev_spec_op		8101122						
ANR	8101459	Symbol	gs_error_undefined		8101122						
ANR	8101460	Symbol	gs_currentdevice		8101122						
ANR	8101461	Symbol	* pcs		8101122						
ANR	8101462	Symbol	Param . value		8101122						
ANR	8101463	Symbol	Param . type		8101122						
ANR	8101464	Symbol	gs_error_typecheck		8101122						
ANR	8101465	Symbol	& list		8101122						
ANR	8101466	Symbol	show_char_foreground		8101122						
ANR	8101467	Symbol	dev_proc		8101122						
ANR	8101468	Symbol	list . procs		8101122						
ANR	8101469	Symbol	pcs -> memory		8101122						
ANR	8101470	Symbol	pbuff		8101122						
ANR	8101471	Symbol	pgs		8101122						
ANR	8101472	Symbol	pcs		8101122						
ANR	8101473	Symbol	request . list		8101122						
ANR	8101474	Symbol	gs_alloc_bytes		8101122						
ANR	8101475	Symbol	pcs -> pgs		8101122						
ANR	8101476	Symbol	gs_param_type_bool		8101122						
ANR	8101477	Symbol	list		8101122						
ANR	8101478	Symbol	& Param		8101122						
ANR	8101479	Symbol	gs_currenttextrenderingmode		8101122						
ANR	8101480	Symbol	Param		8101122						
ANR	8101481	Symbol	gxdso_get_dev_param		8101122						
ANR	8101482	Symbol	Param . value . b		8101122						
ANR	8101483	Symbol	ParamName		8101122						
ANR	8101484	Function	show_char_background	605:0:20352:23576							
ANR	8101485	FunctionDef	"show_char_background (pcl_state_t * pcs , const gs_char * pbuff)"		8101484	0					
ANR	8101486	CompoundStatement		607:0:20426:23576	8101484	0					
ANR	8101487	IdentifierDeclStatement	gs_gstate * pgs = pcs -> pgs ;	608:4:20432:20457	8101484	0	True				
ANR	8101488	IdentifierDecl	* pgs = pcs -> pgs		8101484	0					
ANR	8101489	IdentifierDeclType	gs_gstate *		8101484	0					
ANR	8101490	Identifier	pgs		8101484	1					
ANR	8101491	AssignmentExpression	* pgs = pcs -> pgs		8101484	2		=			
ANR	8101492	Identifier	pgs		8101484	0					
ANR	8101493	PtrMemberAccess	pcs -> pgs		8101484	1					
ANR	8101494	Identifier	pcs		8101484	0					
ANR	8101495	Identifier	pgs		8101484	1					
ANR	8101496	IdentifierDeclStatement	gs_rop3_t rop = ( gs_rop3_t ) ( pcs -> logical_op ) ;	609:4:20463:20508	8101484	1	True				
ANR	8101497	IdentifierDecl	rop = ( gs_rop3_t ) ( pcs -> logical_op )		8101484	0					
ANR	8101498	IdentifierDeclType	gs_rop3_t		8101484	0					
ANR	8101499	Identifier	rop		8101484	1					
ANR	8101500	AssignmentExpression	rop = ( gs_rop3_t ) ( pcs -> logical_op )		8101484	2		=			
ANR	8101501	Identifier	rop		8101484	0					
ANR	8101502	CastExpression	( gs_rop3_t ) ( pcs -> logical_op )		8101484	1					
ANR	8101503	CastTarget	gs_rop3_t		8101484	0					
ANR	8101504	PtrMemberAccess	pcs -> logical_op		8101484	1					
ANR	8101505	Identifier	pcs		8101484	0					
ANR	8101506	Identifier	logical_op		8101484	1					
ANR	8101507	IdentifierDeclStatement	const pl_font_t * plfont = pcs -> font ;	610:4:20514:20549	8101484	2	True				
ANR	8101508	IdentifierDecl	* plfont = pcs -> font		8101484	0					
ANR	8101509	IdentifierDeclType	const pl_font_t *		8101484	0					
ANR	8101510	Identifier	plfont		8101484	1					
ANR	8101511	AssignmentExpression	* plfont = pcs -> font		8101484	2		=			
ANR	8101512	Identifier	plfont		8101484	0					
ANR	8101513	PtrMemberAccess	pcs -> font		8101484	1					
ANR	8101514	Identifier	pcs		8101484	0					
ANR	8101515	Identifier	font		8101484	1					
ANR	8101516	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	611:4:20555:20585	8101484	3	True				
ANR	8101517	IdentifierDecl	* pfont = plfont -> pfont		8101484	0					
ANR	8101518	IdentifierDeclType	gs_font *		8101484	0					
ANR	8101519	Identifier	pfont		8101484	1					
ANR	8101520	AssignmentExpression	* pfont = plfont -> pfont		8101484	2		=			
ANR	8101521	Identifier	pfont		8101484	0					
ANR	8101522	PtrMemberAccess	plfont -> pfont		8101484	1					
ANR	8101523	Identifier	plfont		8101484	0					
ANR	8101524	Identifier	pfont		8101484	1					
ANR	8101525	IdentifierDeclStatement	gs_point pt ;	612:4:20591:20602	8101484	4	True				
ANR	8101526	IdentifierDecl	pt		8101484	0					
ANR	8101527	IdentifierDeclType	gs_point		8101484	0					
ANR	8101528	Identifier	pt		8101484	1					
ANR	8101529	IdentifierDeclStatement	int code = 0 ;	613:4:20608:20620	8101484	5	True				
ANR	8101530	IdentifierDecl	code = 0		8101484	0					
ANR	8101531	IdentifierDeclType	int		8101484	0					
ANR	8101532	Identifier	code		8101484	1					
ANR	8101533	AssignmentExpression	code = 0		8101484	2		=			
ANR	8101534	Identifier	code		8101484	0					
ANR	8101535	PrimaryExpression	0		8101484	1					
ANR	8101536	ExpressionStatement	code = pcl_gsave ( pcs )	616:4:20700:20721	8101484	6	True				
ANR	8101537	AssignmentExpression	code = pcl_gsave ( pcs )		8101484	0		=			
ANR	8101538	Identifier	code		8101484	0					
ANR	8101539	CallExpression	pcl_gsave ( pcs )		8101484	1					
ANR	8101540	Callee	pcl_gsave		8101484	0					
ANR	8101541	Identifier	pcl_gsave		8101484	0					
ANR	8101542	ArgumentList	pcs		8101484	1					
ANR	8101543	Argument	pcs		8101484	0					
ANR	8101544	Identifier	pcs		8101484	0					
ANR	8101545	IfStatement	if ( code < 0 )		8101484	7					
ANR	8101546	Condition	code < 0	617:8:20731:20738	8101484	0	True				
ANR	8101547	RelationalExpression	code < 0		8101484	0		<			
ANR	8101548	Identifier	code		8101484	0					
ANR	8101549	PrimaryExpression	0		8101484	1					
ANR	8101550	ReturnStatement	return code ;	618:8:20749:20760	8101484	1	True				
ANR	8101551	Identifier	code		8101484	0					
ANR	8101552	IfStatement	if ( pcs -> pattern_transparent )		8101484	8					
ANR	8101553	Condition	pcs -> pattern_transparent	619:8:20770:20793	8101484	0	True				
ANR	8101554	PtrMemberAccess	pcs -> pattern_transparent		8101484	0					
ANR	8101555	Identifier	pcs		8101484	0					
ANR	8101556	Identifier	pattern_transparent		8101484	1					
ANR	8101557	CompoundStatement		13:34:369:369	8101484	1					
ANR	8101558	ExpressionStatement	"code = pcl_set_drawing_color ( pcs , pcl_pattern_solid_white , 0 , false )"	620:8:20806:20874	8101484	0	True				
ANR	8101559	AssignmentExpression	"code = pcl_set_drawing_color ( pcs , pcl_pattern_solid_white , 0 , false )"		8101484	0		=			
ANR	8101560	Identifier	code		8101484	0					
ANR	8101561	CallExpression	"pcl_set_drawing_color ( pcs , pcl_pattern_solid_white , 0 , false )"		8101484	1					
ANR	8101562	Callee	pcl_set_drawing_color		8101484	0					
ANR	8101563	Identifier	pcl_set_drawing_color		8101484	0					
ANR	8101564	ArgumentList	pcs		8101484	1					
ANR	8101565	Argument	pcs		8101484	0					
ANR	8101566	Identifier	pcs		8101484	0					
ANR	8101567	Argument	pcl_pattern_solid_white		8101484	1					
ANR	8101568	Identifier	pcl_pattern_solid_white		8101484	0					
ANR	8101569	Argument	0		8101484	2					
ANR	8101570	PrimaryExpression	0		8101484	0					
ANR	8101571	Argument	false		8101484	3					
ANR	8101572	Identifier	false		8101484	0					
ANR	8101573	IfStatement	if ( code < 0 )		8101484	1					
ANR	8101574	Condition	code < 0	621:12:20888:20895	8101484	0	True				
ANR	8101575	RelationalExpression	code < 0		8101484	0		<			
ANR	8101576	Identifier	code		8101484	0					
ANR	8101577	PrimaryExpression	0		8101484	1					
ANR	8101578	ReturnStatement	return code ;	622:12:20910:20921	8101484	1	True				
ANR	8101579	Identifier	code		8101484	0					
ANR	8101580	IfStatement	"if ( ( ( code = gs_setrasterop ( pgs , ( gs_rop3_t ) rop3_know_S_1 ( ( int ) rop ) ) ) < 0 ) || ( ( code = gs_currentpoint ( pgs , & pt ) ) < 0 ) )"		8101484	9					
ANR	8101581	Condition	"( ( code = gs_setrasterop ( pgs , ( gs_rop3_t ) rop3_know_S_1 ( ( int ) rop ) ) ) < 0 ) || ( ( code = gs_currentpoint ( pgs , & pt ) ) < 0 )"	624:8:20937:21059	8101484	0	True				
ANR	8101582	OrExpression	"( ( code = gs_setrasterop ( pgs , ( gs_rop3_t ) rop3_know_S_1 ( ( int ) rop ) ) ) < 0 ) || ( ( code = gs_currentpoint ( pgs , & pt ) ) < 0 )"		8101484	0		||			
ANR	8101583	RelationalExpression	"( code = gs_setrasterop ( pgs , ( gs_rop3_t ) rop3_know_S_1 ( ( int ) rop ) ) ) < 0"		8101484	0		<			
ANR	8101584	AssignmentExpression	"code = gs_setrasterop ( pgs , ( gs_rop3_t ) rop3_know_S_1 ( ( int ) rop ) )"		8101484	0		=			
ANR	8101585	Identifier	code		8101484	0					
ANR	8101586	CallExpression	"gs_setrasterop ( pgs , ( gs_rop3_t ) rop3_know_S_1 ( ( int ) rop ) )"		8101484	1					
ANR	8101587	Callee	gs_setrasterop		8101484	0					
ANR	8101588	Identifier	gs_setrasterop		8101484	0					
ANR	8101589	ArgumentList	pgs		8101484	1					
ANR	8101590	Argument	pgs		8101484	0					
ANR	8101591	Identifier	pgs		8101484	0					
ANR	8101592	Argument	( gs_rop3_t ) rop3_know_S_1 ( ( int ) rop )		8101484	1					
ANR	8101593	CastExpression	( gs_rop3_t ) rop3_know_S_1 ( ( int ) rop )		8101484	0					
ANR	8101594	CastTarget	gs_rop3_t		8101484	0					
ANR	8101595	CallExpression	rop3_know_S_1 ( ( int ) rop )		8101484	1					
ANR	8101596	Callee	rop3_know_S_1		8101484	0					
ANR	8101597	Identifier	rop3_know_S_1		8101484	0					
ANR	8101598	ArgumentList	( int ) rop		8101484	1					
ANR	8101599	Argument	( int ) rop		8101484	0					
ANR	8101600	CastExpression	( int ) rop		8101484	0					
ANR	8101601	CastTarget	int		8101484	0					
ANR	8101602	Identifier	rop		8101484	1					
ANR	8101603	PrimaryExpression	0		8101484	1					
ANR	8101604	RelationalExpression	"( code = gs_currentpoint ( pgs , & pt ) ) < 0"		8101484	1		<			
ANR	8101605	AssignmentExpression	"code = gs_currentpoint ( pgs , & pt )"		8101484	0		=			
ANR	8101606	Identifier	code		8101484	0					
ANR	8101607	CallExpression	"gs_currentpoint ( pgs , & pt )"		8101484	1					
ANR	8101608	Callee	gs_currentpoint		8101484	0					
ANR	8101609	Identifier	gs_currentpoint		8101484	0					
ANR	8101610	ArgumentList	pgs		8101484	1					
ANR	8101611	Argument	pgs		8101484	0					
ANR	8101612	Identifier	pgs		8101484	0					
ANR	8101613	Argument	& pt		8101484	1					
ANR	8101614	UnaryOperationExpression	& pt		8101484	0					
ANR	8101615	UnaryOperator	&		8101484	0					
ANR	8101616	Identifier	pt		8101484	1					
ANR	8101617	PrimaryExpression	0		8101484	1					
ANR	8101618	CompoundStatement		19:50:635:635	8101484	1					
ANR	8101619	ReturnStatement	return code ;	626:8:21072:21083	8101484	0	True				
ANR	8101620	Identifier	code		8101484	0					
ANR	8101621	IfStatement	if ( plfont -> scaling_technology == plfst_bitmap )		8101484	10					
ANR	8101622	Condition	plfont -> scaling_technology == plfst_bitmap	629:8:21100:21141	8101484	0	True				
ANR	8101623	EqualityExpression	plfont -> scaling_technology == plfst_bitmap		8101484	0		==			
ANR	8101624	PtrMemberAccess	plfont -> scaling_technology		8101484	0					
ANR	8101625	Identifier	plfont		8101484	0					
ANR	8101626	Identifier	scaling_technology		8101484	1					
ANR	8101627	Identifier	plfst_bitmap		8101484	1					
ANR	8101628	CompoundStatement		30:8:977:993	8101484	1					
ANR	8101629	IdentifierDeclStatement	gs_char chr = pbuff [ 0 ] ;	630:8:21154:21176	8101484	0	True				
ANR	8101630	IdentifierDecl	chr = pbuff [ 0 ]		8101484	0					
ANR	8101631	IdentifierDeclType	gs_char		8101484	0					
ANR	8101632	Identifier	chr		8101484	1					
ANR	8101633	AssignmentExpression	chr = pbuff [ 0 ]		8101484	2		=			
ANR	8101634	Identifier	chr		8101484	0					
ANR	8101635	ArrayIndexing	pbuff [ 0 ]		8101484	1					
ANR	8101636	Identifier	pbuff		8101484	0					
ANR	8101637	PrimaryExpression	0		8101484	1					
ANR	8101638	IdentifierDeclStatement	"gs_glyph glyph = pfont -> procs . encode_char ( pfont , chr , GS_NO_GLYPH ) ;"	631:8:21186:21252	8101484	1	True				
ANR	8101639	IdentifierDecl	"glyph = pfont -> procs . encode_char ( pfont , chr , GS_NO_GLYPH )"		8101484	0					
ANR	8101640	IdentifierDeclType	gs_glyph		8101484	0					
ANR	8101641	Identifier	glyph		8101484	1					
ANR	8101642	AssignmentExpression	"glyph = pfont -> procs . encode_char ( pfont , chr , GS_NO_GLYPH )"		8101484	2		=			
ANR	8101643	Identifier	glyph		8101484	0					
ANR	8101644	CallExpression	"pfont -> procs . encode_char ( pfont , chr , GS_NO_GLYPH )"		8101484	1					
ANR	8101645	Callee	pfont -> procs . encode_char		8101484	0					
ANR	8101646	MemberAccess	pfont -> procs . encode_char		8101484	0					
ANR	8101647	PtrMemberAccess	pfont -> procs		8101484	0					
ANR	8101648	Identifier	pfont		8101484	0					
ANR	8101649	Identifier	procs		8101484	1					
ANR	8101650	Identifier	encode_char		8101484	1					
ANR	8101651	ArgumentList	pfont		8101484	1					
ANR	8101652	Argument	pfont		8101484	0					
ANR	8101653	Identifier	pfont		8101484	0					
ANR	8101654	Argument	chr		8101484	1					
ANR	8101655	Identifier	chr		8101484	0					
ANR	8101656	Argument	GS_NO_GLYPH		8101484	2					
ANR	8101657	Identifier	GS_NO_GLYPH		8101484	0					
ANR	8101658	IdentifierDeclStatement	"const byte * cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data ;"	632:8:21262:21323	8101484	2	True				
ANR	8101659	IdentifierDecl	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8101484	0					
ANR	8101660	IdentifierDeclType	const byte *		8101484	0					
ANR	8101661	Identifier	cdata		8101484	1					
ANR	8101662	AssignmentExpression	"* cdata = pl_font_lookup_glyph ( plfont , glyph ) -> data"		8101484	2		=			
ANR	8101663	Identifier	cdata		8101484	0					
ANR	8101664	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8101484	1					
ANR	8101665	CallExpression	"pl_font_lookup_glyph ( plfont , glyph )"		8101484	0					
ANR	8101666	Callee	pl_font_lookup_glyph		8101484	0					
ANR	8101667	Identifier	pl_font_lookup_glyph		8101484	0					
ANR	8101668	ArgumentList	plfont		8101484	1					
ANR	8101669	Argument	plfont		8101484	0					
ANR	8101670	Identifier	plfont		8101484	0					
ANR	8101671	Argument	glyph		8101484	1					
ANR	8101672	Identifier	glyph		8101484	0					
ANR	8101673	Identifier	data		8101484	1					
ANR	8101674	IdentifierDeclStatement	int nbytes ;	633:8:21333:21343	8101484	3	True				
ANR	8101675	IdentifierDecl	nbytes		8101484	0					
ANR	8101676	IdentifierDeclType	int		8101484	0					
ANR	8101677	Identifier	nbytes		8101484	1					
ANR	8101678	IdentifierDeclStatement	uint used ;	634:8:21353:21362	8101484	4	True				
ANR	8101679	IdentifierDecl	used		8101484	0					
ANR	8101680	IdentifierDeclType	uint		8101484	0					
ANR	8101681	Identifier	used		8101484	1					
ANR	8101682	IdentifierDeclStatement	gs_image_enum * pen = 0 ;	635:8:21372:21394	8101484	5	True				
ANR	8101683	IdentifierDecl	* pen = 0		8101484	0					
ANR	8101684	IdentifierDeclType	gs_image_enum *		8101484	0					
ANR	8101685	Identifier	pen		8101484	1					
ANR	8101686	AssignmentExpression	* pen = 0		8101484	2		=			
ANR	8101687	Identifier	pen		8101484	0					
ANR	8101688	PrimaryExpression	0		8101484	1					
ANR	8101689	IdentifierDeclStatement	gs_image1_t mask ;	636:8:21404:21420	8101484	6	True				
ANR	8101690	IdentifierDecl	mask		8101484	0					
ANR	8101691	IdentifierDeclType	gs_image1_t		8101484	0					
ANR	8101692	Identifier	mask		8101484	1					
ANR	8101693	IfStatement	if ( cdata == 0 )		8101484	7					
ANR	8101694	Condition	cdata == 0	639:12:21485:21494	8101484	0	True				
ANR	8101695	EqualityExpression	cdata == 0		8101484	0		==			
ANR	8101696	Identifier	cdata		8101484	0					
ANR	8101697	PrimaryExpression	0		8101484	1					
ANR	8101698	CompoundStatement		33:24:1070:1070	8101484	1					
ANR	8101699	ReturnStatement	return pcl_grestore ( pcs ) ;	640:12:21511:21535	8101484	0	True				
ANR	8101700	CallExpression	pcl_grestore ( pcs )		8101484	0					
ANR	8101701	Callee	pcl_grestore		8101484	0					
ANR	8101702	Identifier	pcl_grestore		8101484	0					
ANR	8101703	ArgumentList	pcs		8101484	1					
ANR	8101704	Argument	pcs		8101484	0					
ANR	8101705	Identifier	pcs		8101484	0					
ANR	8101706	ExpressionStatement	"pen = gs_image_enum_alloc ( gs_gstate_memory ( pgs ) , ""bitmap font background"" )"	644:8:21600:21718	8101484	8	True				
ANR	8101707	AssignmentExpression	"pen = gs_image_enum_alloc ( gs_gstate_memory ( pgs ) , ""bitmap font background"" )"		8101484	0		=			
ANR	8101708	Identifier	pen		8101484	0					
ANR	8101709	CallExpression	"gs_image_enum_alloc ( gs_gstate_memory ( pgs ) , ""bitmap font background"" )"		8101484	1					
ANR	8101710	Callee	gs_image_enum_alloc		8101484	0					
ANR	8101711	Identifier	gs_image_enum_alloc		8101484	0					
ANR	8101712	ArgumentList	gs_gstate_memory ( pgs )		8101484	1					
ANR	8101713	Argument	gs_gstate_memory ( pgs )		8101484	0					
ANR	8101714	CallExpression	gs_gstate_memory ( pgs )		8101484	0					
ANR	8101715	Callee	gs_gstate_memory		8101484	0					
ANR	8101716	Identifier	gs_gstate_memory		8101484	0					
ANR	8101717	ArgumentList	pgs		8101484	1					
ANR	8101718	Argument	pgs		8101484	0					
ANR	8101719	Identifier	pgs		8101484	0					
ANR	8101720	Argument	"""bitmap font background"""		8101484	1					
ANR	8101721	PrimaryExpression	"""bitmap font background"""		8101484	0					
ANR	8101722	IfStatement	if ( pen == 0 )		8101484	9					
ANR	8101723	Condition	pen == 0	647:12:21732:21739	8101484	0	True				
ANR	8101724	EqualityExpression	pen == 0		8101484	0		==			
ANR	8101725	Identifier	pen		8101484	0					
ANR	8101726	PrimaryExpression	0		8101484	1					
ANR	8101727	CompoundStatement		41:22:1315:1315	8101484	1					
ANR	8101728	ExpressionStatement	pcl_grestore ( pcs )	648:12:21756:21773	8101484	0	True				
ANR	8101729	CallExpression	pcl_grestore ( pcs )		8101484	0					
ANR	8101730	Callee	pcl_grestore		8101484	0					
ANR	8101731	Identifier	pcl_grestore		8101484	0					
ANR	8101732	ArgumentList	pcs		8101484	1					
ANR	8101733	Argument	pcs		8101484	0					
ANR	8101734	Identifier	pcs		8101484	0					
ANR	8101735	ReturnStatement	return e_Memory ;	649:12:21787:21802	8101484	1	True				
ANR	8101736	Identifier	e_Memory		8101484	0					
ANR	8101737	ExpressionStatement	pt . x += ( float ) pl_get_int16 ( cdata + 6 )	653:8:21888:21926	8101484	10	True				
ANR	8101738	AssignmentExpression	pt . x += ( float ) pl_get_int16 ( cdata + 6 )		8101484	0		+=			
ANR	8101739	MemberAccess	pt . x		8101484	0					
ANR	8101740	Identifier	pt		8101484	0					
ANR	8101741	Identifier	x		8101484	1					
ANR	8101742	CastExpression	( float ) pl_get_int16 ( cdata + 6 )		8101484	1					
ANR	8101743	CastTarget	float		8101484	0					
ANR	8101744	CallExpression	pl_get_int16 ( cdata + 6 )		8101484	1					
ANR	8101745	Callee	pl_get_int16		8101484	0					
ANR	8101746	Identifier	pl_get_int16		8101484	0					
ANR	8101747	ArgumentList	cdata + 6		8101484	1					
ANR	8101748	Argument	cdata + 6		8101484	0					
ANR	8101749	AdditiveExpression	cdata + 6		8101484	0		+			
ANR	8101750	Identifier	cdata		8101484	0					
ANR	8101751	PrimaryExpression	6		8101484	1					
ANR	8101752	ExpressionStatement	pt . y -= ( float ) pl_get_int16 ( cdata + 8 )	654:8:21936:21974	8101484	11	True				
ANR	8101753	AssignmentExpression	pt . y -= ( float ) pl_get_int16 ( cdata + 8 )		8101484	0		-=			
ANR	8101754	MemberAccess	pt . y		8101484	0					
ANR	8101755	Identifier	pt		8101484	0					
ANR	8101756	Identifier	y		8101484	1					
ANR	8101757	CastExpression	( float ) pl_get_int16 ( cdata + 8 )		8101484	1					
ANR	8101758	CastTarget	float		8101484	0					
ANR	8101759	CallExpression	pl_get_int16 ( cdata + 8 )		8101484	1					
ANR	8101760	Callee	pl_get_int16		8101484	0					
ANR	8101761	Identifier	pl_get_int16		8101484	0					
ANR	8101762	ArgumentList	cdata + 8		8101484	1					
ANR	8101763	Argument	cdata + 8		8101484	0					
ANR	8101764	AdditiveExpression	cdata + 8		8101484	0		+			
ANR	8101765	Identifier	cdata		8101484	0					
ANR	8101766	PrimaryExpression	8		8101484	1					
ANR	8101767	ExpressionStatement	"gs_translate ( pgs , pt . x , pt . y )"	655:8:21984:22013	8101484	12	True				
ANR	8101768	CallExpression	"gs_translate ( pgs , pt . x , pt . y )"		8101484	0					
ANR	8101769	Callee	gs_translate		8101484	0					
ANR	8101770	Identifier	gs_translate		8101484	0					
ANR	8101771	ArgumentList	pgs		8101484	1					
ANR	8101772	Argument	pgs		8101484	0					
ANR	8101773	Identifier	pgs		8101484	0					
ANR	8101774	Argument	pt . x		8101484	1					
ANR	8101775	MemberAccess	pt . x		8101484	0					
ANR	8101776	Identifier	pt		8101484	0					
ANR	8101777	Identifier	x		8101484	1					
ANR	8101778	Argument	pt . y		8101484	2					
ANR	8101779	MemberAccess	pt . y		8101484	0					
ANR	8101780	Identifier	pt		8101484	0					
ANR	8101781	Identifier	y		8101484	1					
ANR	8101782	ExpressionStatement	"gs_image_t_init_mask ( & mask , false )"	658:8:22071:22105	8101484	13	True				
ANR	8101783	CallExpression	"gs_image_t_init_mask ( & mask , false )"		8101484	0					
ANR	8101784	Callee	gs_image_t_init_mask		8101484	0					
ANR	8101785	Identifier	gs_image_t_init_mask		8101484	0					
ANR	8101786	ArgumentList	& mask		8101484	1					
ANR	8101787	Argument	& mask		8101484	0					
ANR	8101788	UnaryOperationExpression	& mask		8101484	0					
ANR	8101789	UnaryOperator	&		8101484	0					
ANR	8101790	Identifier	mask		8101484	1					
ANR	8101791	Argument	false		8101484	1					
ANR	8101792	Identifier	false		8101484	0					
ANR	8101793	ExpressionStatement	mask . adjust = false	659:8:22115:22134	8101484	14	True				
ANR	8101794	AssignmentExpression	mask . adjust = false		8101484	0		=			
ANR	8101795	MemberAccess	mask . adjust		8101484	0					
ANR	8101796	Identifier	mask		8101484	0					
ANR	8101797	Identifier	adjust		8101484	1					
ANR	8101798	Identifier	false		8101484	1					
ANR	8101799	ExpressionStatement	mask . Width = pl_get_uint16 ( cdata + 10 )	660:8:22144:22182	8101484	15	True				
ANR	8101800	AssignmentExpression	mask . Width = pl_get_uint16 ( cdata + 10 )		8101484	0		=			
ANR	8101801	MemberAccess	mask . Width		8101484	0					
ANR	8101802	Identifier	mask		8101484	0					
ANR	8101803	Identifier	Width		8101484	1					
ANR	8101804	CallExpression	pl_get_uint16 ( cdata + 10 )		8101484	1					
ANR	8101805	Callee	pl_get_uint16		8101484	0					
ANR	8101806	Identifier	pl_get_uint16		8101484	0					
ANR	8101807	ArgumentList	cdata + 10		8101484	1					
ANR	8101808	Argument	cdata + 10		8101484	0					
ANR	8101809	AdditiveExpression	cdata + 10		8101484	0		+			
ANR	8101810	Identifier	cdata		8101484	0					
ANR	8101811	PrimaryExpression	10		8101484	1					
ANR	8101812	ExpressionStatement	mask . Height = pl_get_uint16 ( cdata + 12 )	661:8:22192:22231	8101484	16	True				
ANR	8101813	AssignmentExpression	mask . Height = pl_get_uint16 ( cdata + 12 )		8101484	0		=			
ANR	8101814	MemberAccess	mask . Height		8101484	0					
ANR	8101815	Identifier	mask		8101484	0					
ANR	8101816	Identifier	Height		8101484	1					
ANR	8101817	CallExpression	pl_get_uint16 ( cdata + 12 )		8101484	1					
ANR	8101818	Callee	pl_get_uint16		8101484	0					
ANR	8101819	Identifier	pl_get_uint16		8101484	0					
ANR	8101820	ArgumentList	cdata + 12		8101484	1					
ANR	8101821	Argument	cdata + 12		8101484	0					
ANR	8101822	AdditiveExpression	cdata + 12		8101484	0		+			
ANR	8101823	Identifier	cdata		8101484	0					
ANR	8101824	PrimaryExpression	12		8101484	1					
ANR	8101825	ExpressionStatement	nbytes = ( ( mask . Width + 7 ) / 8 ) * mask . Height	662:8:22241:22286	8101484	17	True				
ANR	8101826	AssignmentExpression	nbytes = ( ( mask . Width + 7 ) / 8 ) * mask . Height		8101484	0		=			
ANR	8101827	Identifier	nbytes		8101484	0					
ANR	8101828	MultiplicativeExpression	( ( mask . Width + 7 ) / 8 ) * mask . Height		8101484	1		*			
ANR	8101829	MultiplicativeExpression	( mask . Width + 7 ) / 8		8101484	0		/			
ANR	8101830	AdditiveExpression	mask . Width + 7		8101484	0		+			
ANR	8101831	MemberAccess	mask . Width		8101484	0					
ANR	8101832	Identifier	mask		8101484	0					
ANR	8101833	Identifier	Width		8101484	1					
ANR	8101834	PrimaryExpression	7		8101484	1					
ANR	8101835	PrimaryExpression	8		8101484	1					
ANR	8101836	MemberAccess	mask . Height		8101484	1					
ANR	8101837	Identifier	mask		8101484	0					
ANR	8101838	Identifier	Height		8101484	1					
ANR	8101839	ExpressionStatement	"gs_image_init ( pen , & mask , false , false , pgs )"	663:8:22296:22340	8101484	18	True				
ANR	8101840	CallExpression	"gs_image_init ( pen , & mask , false , false , pgs )"		8101484	0					
ANR	8101841	Callee	gs_image_init		8101484	0					
ANR	8101842	Identifier	gs_image_init		8101484	0					
ANR	8101843	ArgumentList	pen		8101484	1					
ANR	8101844	Argument	pen		8101484	0					
ANR	8101845	Identifier	pen		8101484	0					
ANR	8101846	Argument	& mask		8101484	1					
ANR	8101847	UnaryOperationExpression	& mask		8101484	0					
ANR	8101848	UnaryOperator	&		8101484	0					
ANR	8101849	Identifier	mask		8101484	1					
ANR	8101850	Argument	false		8101484	2					
ANR	8101851	Identifier	false		8101484	0					
ANR	8101852	Argument	false		8101484	3					
ANR	8101853	Identifier	false		8101484	0					
ANR	8101854	Argument	pgs		8101484	4					
ANR	8101855	Identifier	pgs		8101484	0					
ANR	8101856	ExpressionStatement	"code = gs_image_next ( pen , cdata + 16 , nbytes , & used )"	664:8:22350:22402	8101484	19	True				
ANR	8101857	AssignmentExpression	"code = gs_image_next ( pen , cdata + 16 , nbytes , & used )"		8101484	0		=			
ANR	8101858	Identifier	code		8101484	0					
ANR	8101859	CallExpression	"gs_image_next ( pen , cdata + 16 , nbytes , & used )"		8101484	1					
ANR	8101860	Callee	gs_image_next		8101484	0					
ANR	8101861	Identifier	gs_image_next		8101484	0					
ANR	8101862	ArgumentList	pen		8101484	1					
ANR	8101863	Argument	pen		8101484	0					
ANR	8101864	Identifier	pen		8101484	0					
ANR	8101865	Argument	cdata + 16		8101484	1					
ANR	8101866	AdditiveExpression	cdata + 16		8101484	0		+			
ANR	8101867	Identifier	cdata		8101484	0					
ANR	8101868	PrimaryExpression	16		8101484	1					
ANR	8101869	Argument	nbytes		8101484	2					
ANR	8101870	Identifier	nbytes		8101484	0					
ANR	8101871	Argument	& used		8101484	3					
ANR	8101872	UnaryOperationExpression	& used		8101484	0					
ANR	8101873	UnaryOperator	&		8101484	0					
ANR	8101874	Identifier	used		8101484	1					
ANR	8101875	ExpressionStatement	"gs_image_cleanup ( pen , pgs )"	667:8:22436:22462	8101484	20	True				
ANR	8101876	CallExpression	"gs_image_cleanup ( pen , pgs )"		8101484	0					
ANR	8101877	Callee	gs_image_cleanup		8101484	0					
ANR	8101878	Identifier	gs_image_cleanup		8101484	0					
ANR	8101879	ArgumentList	pen		8101484	1					
ANR	8101880	Argument	pen		8101484	0					
ANR	8101881	Identifier	pen		8101484	0					
ANR	8101882	Argument	pgs		8101484	1					
ANR	8101883	Identifier	pgs		8101484	0					
ANR	8101884	ExpressionStatement	"gs_free_object ( gs_gstate_memory ( pgs ) , pen , ""bitmap font background"" )"	668:8:22472:22540	8101484	21	True				
ANR	8101885	CallExpression	"gs_free_object ( gs_gstate_memory ( pgs ) , pen , ""bitmap font background"" )"		8101484	0					
ANR	8101886	Callee	gs_free_object		8101484	0					
ANR	8101887	Identifier	gs_free_object		8101484	0					
ANR	8101888	ArgumentList	gs_gstate_memory ( pgs )		8101484	1					
ANR	8101889	Argument	gs_gstate_memory ( pgs )		8101484	0					
ANR	8101890	CallExpression	gs_gstate_memory ( pgs )		8101484	0					
ANR	8101891	Callee	gs_gstate_memory		8101484	0					
ANR	8101892	Identifier	gs_gstate_memory		8101484	0					
ANR	8101893	ArgumentList	pgs		8101484	1					
ANR	8101894	Argument	pgs		8101484	0					
ANR	8101895	Identifier	pgs		8101484	0					
ANR	8101896	Argument	pen		8101484	1					
ANR	8101897	Identifier	pen		8101484	0					
ANR	8101898	Argument	"""bitmap font background"""		8101484	2					
ANR	8101899	PrimaryExpression	"""bitmap font background"""		8101484	0					
ANR	8101900	ElseStatement	else		8101484	0					
ANR	8101901	CompoundStatement		67:8:2190:2211	8101484	0					
ANR	8101902	IdentifierDeclStatement	gs_text_params_t text ;	671:8:22564:22585	8101484	0	True				
ANR	8101903	IdentifierDecl	text		8101484	0					
ANR	8101904	IdentifierDeclType	gs_text_params_t		8101484	0					
ANR	8101905	Identifier	text		8101484	1					
ANR	8101906	IdentifierDeclStatement	gs_rect bbox ;	672:8:22595:22607	8101484	1	True				
ANR	8101907	IdentifierDecl	bbox		8101484	0					
ANR	8101908	IdentifierDeclType	gs_rect		8101484	0					
ANR	8101909	Identifier	bbox		8101484	1					
ANR	8101910	IdentifierDeclStatement	gs_text_enum_t * penum ;	673:8:22617:22638	8101484	2	True				
ANR	8101911	IdentifierDecl	* penum		8101484	0					
ANR	8101912	IdentifierDeclType	gs_text_enum_t *		8101484	0					
ANR	8101913	Identifier	penum		8101484	1					
ANR	8101914	IfStatement	"if ( ( ( code = gs_newpath ( pgs ) ) < 0 ) || ( ( code = gs_moveto ( pgs , pt . x , pt . y ) ) < 0 ) )"		8101484	3					
ANR	8101915	Condition	"( ( code = gs_newpath ( pgs ) ) < 0 ) || ( ( code = gs_moveto ( pgs , pt . x , pt . y ) ) < 0 )"	676:12:22724:22810	8101484	0	True				
ANR	8101916	OrExpression	"( ( code = gs_newpath ( pgs ) ) < 0 ) || ( ( code = gs_moveto ( pgs , pt . x , pt . y ) ) < 0 )"		8101484	0		||			
ANR	8101917	RelationalExpression	( code = gs_newpath ( pgs ) ) < 0		8101484	0		<			
ANR	8101918	AssignmentExpression	code = gs_newpath ( pgs )		8101484	0		=			
ANR	8101919	Identifier	code		8101484	0					
ANR	8101920	CallExpression	gs_newpath ( pgs )		8101484	1					
ANR	8101921	Callee	gs_newpath		8101484	0					
ANR	8101922	Identifier	gs_newpath		8101484	0					
ANR	8101923	ArgumentList	pgs		8101484	1					
ANR	8101924	Argument	pgs		8101484	0					
ANR	8101925	Identifier	pgs		8101484	0					
ANR	8101926	PrimaryExpression	0		8101484	1					
ANR	8101927	RelationalExpression	"( code = gs_moveto ( pgs , pt . x , pt . y ) ) < 0"		8101484	1		<			
ANR	8101928	AssignmentExpression	"code = gs_moveto ( pgs , pt . x , pt . y )"		8101484	0		=			
ANR	8101929	Identifier	code		8101484	0					
ANR	8101930	CallExpression	"gs_moveto ( pgs , pt . x , pt . y )"		8101484	1					
ANR	8101931	Callee	gs_moveto		8101484	0					
ANR	8101932	Identifier	gs_moveto		8101484	0					
ANR	8101933	ArgumentList	pgs		8101484	1					
ANR	8101934	Argument	pgs		8101484	0					
ANR	8101935	Identifier	pgs		8101484	0					
ANR	8101936	Argument	pt . x		8101484	1					
ANR	8101937	MemberAccess	pt . x		8101484	0					
ANR	8101938	Identifier	pt		8101484	0					
ANR	8101939	Identifier	x		8101484	1					
ANR	8101940	Argument	pt . y		8101484	2					
ANR	8101941	MemberAccess	pt . y		8101484	0					
ANR	8101942	Identifier	pt		8101484	0					
ANR	8101943	Identifier	y		8101484	1					
ANR	8101944	PrimaryExpression	0		8101484	1					
ANR	8101945	CompoundStatement		71:55:2386:2386	8101484	1					
ANR	8101946	ReturnStatement	return code ;	678:12:22827:22838	8101484	0	True				
ANR	8101947	Identifier	code		8101484	0					
ANR	8101948	ExpressionStatement	text . data . chars = pbuff	680:8:22858:22881	8101484	4	True				
ANR	8101949	AssignmentExpression	text . data . chars = pbuff		8101484	0		=			
ANR	8101950	MemberAccess	text . data . chars		8101484	0					
ANR	8101951	MemberAccess	text . data		8101484	0					
ANR	8101952	Identifier	text		8101484	0					
ANR	8101953	Identifier	data		8101484	1					
ANR	8101954	Identifier	chars		8101484	1					
ANR	8101955	Identifier	pbuff		8101484	1					
ANR	8101956	ExpressionStatement	text . size = 1	681:8:22891:22904	8101484	5	True				
ANR	8101957	AssignmentExpression	text . size = 1		8101484	0		=			
ANR	8101958	MemberAccess	text . size		8101484	0					
ANR	8101959	Identifier	text		8101484	0					
ANR	8101960	Identifier	size		8101484	1					
ANR	8101961	PrimaryExpression	1		8101484	1					
ANR	8101962	ExpressionStatement	text . operation = TEXT_FROM_CHARS | TEXT_DO_TRUE_CHARPATH | TEXT_RETURN_WIDTH	682:8:22914:23002	8101484	6	True				
ANR	8101963	AssignmentExpression	text . operation = TEXT_FROM_CHARS | TEXT_DO_TRUE_CHARPATH | TEXT_RETURN_WIDTH		8101484	0		=			
ANR	8101964	MemberAccess	text . operation		8101484	0					
ANR	8101965	Identifier	text		8101484	0					
ANR	8101966	Identifier	operation		8101484	1					
ANR	8101967	InclusiveOrExpression	TEXT_FROM_CHARS | TEXT_DO_TRUE_CHARPATH | TEXT_RETURN_WIDTH		8101484	1		|			
ANR	8101968	Identifier	TEXT_FROM_CHARS		8101484	0					
ANR	8101969	InclusiveOrExpression	TEXT_DO_TRUE_CHARPATH | TEXT_RETURN_WIDTH		8101484	1		|			
ANR	8101970	Identifier	TEXT_DO_TRUE_CHARPATH		8101484	0					
ANR	8101971	Identifier	TEXT_RETURN_WIDTH		8101484	1					
ANR	8101972	ExpressionStatement	"code = gs_text_begin ( pgs , & text , pcs -> memory , & penum )"	684:8:23012:23065	8101484	7	True				
ANR	8101973	AssignmentExpression	"code = gs_text_begin ( pgs , & text , pcs -> memory , & penum )"		8101484	0		=			
ANR	8101974	Identifier	code		8101484	0					
ANR	8101975	CallExpression	"gs_text_begin ( pgs , & text , pcs -> memory , & penum )"		8101484	1					
ANR	8101976	Callee	gs_text_begin		8101484	0					
ANR	8101977	Identifier	gs_text_begin		8101484	0					
ANR	8101978	ArgumentList	pgs		8101484	1					
ANR	8101979	Argument	pgs		8101484	0					
ANR	8101980	Identifier	pgs		8101484	0					
ANR	8101981	Argument	& text		8101484	1					
ANR	8101982	UnaryOperationExpression	& text		8101484	0					
ANR	8101983	UnaryOperator	&		8101484	0					
ANR	8101984	Identifier	text		8101484	1					
ANR	8101985	Argument	pcs -> memory		8101484	2					
ANR	8101986	PtrMemberAccess	pcs -> memory		8101484	0					
ANR	8101987	Identifier	pcs		8101484	0					
ANR	8101988	Identifier	memory		8101484	1					
ANR	8101989	Argument	& penum		8101484	3					
ANR	8101990	UnaryOperationExpression	& penum		8101484	0					
ANR	8101991	UnaryOperator	&		8101484	0					
ANR	8101992	Identifier	penum		8101484	1					
ANR	8101993	IfStatement	if ( code >= 0 )		8101484	8					
ANR	8101994	Condition	code >= 0	685:12:23079:23087	8101484	0	True				
ANR	8101995	RelationalExpression	code >= 0		8101484	0		>=			
ANR	8101996	Identifier	code		8101484	0					
ANR	8101997	PrimaryExpression	0		8101484	1					
ANR	8101998	ExpressionStatement	code = gs_text_process ( penum )	686:12:23102:23131	8101484	1	True				
ANR	8101999	AssignmentExpression	code = gs_text_process ( penum )		8101484	0		=			
ANR	8102000	Identifier	code		8101484	0					
ANR	8102001	CallExpression	gs_text_process ( penum )		8101484	1					
ANR	8102002	Callee	gs_text_process		8101484	0					
ANR	8102003	Identifier	gs_text_process		8101484	0					
ANR	8102004	ArgumentList	penum		8101484	1					
ANR	8102005	Argument	penum		8101484	0					
ANR	8102006	Identifier	penum		8101484	0					
ANR	8102007	IfStatement	if ( code >= 0 )		8101484	9					
ANR	8102008	Condition	code >= 0	687:12:23145:23153	8101484	0	True				
ANR	8102009	RelationalExpression	code >= 0		8101484	0		>=			
ANR	8102010	Identifier	code		8101484	0					
ANR	8102011	PrimaryExpression	0		8101484	1					
ANR	8102012	CompoundStatement		81:23:2729:2729	8101484	1					
ANR	8102013	IfStatement	"if ( ( code = gs_pathbbox ( pgs , & bbox ) ) >= 0 && ( code = gs_rectappend ( pgs , & bbox , 1 ) ) >= 0 && ( code = gs_eofill ( pgs ) ) >= 0 )"		8101484	0					
ANR	8102014	Condition	"( code = gs_pathbbox ( pgs , & bbox ) ) >= 0 && ( code = gs_rectappend ( pgs , & bbox , 1 ) ) >= 0 && ( code = gs_eofill ( pgs ) ) >= 0"	689:16:23242:23388	8101484	0	True				
ANR	8102015	AndExpression	"( code = gs_pathbbox ( pgs , & bbox ) ) >= 0 && ( code = gs_rectappend ( pgs , & bbox , 1 ) ) >= 0 && ( code = gs_eofill ( pgs ) ) >= 0"		8101484	0		&&			
ANR	8102016	RelationalExpression	"( code = gs_pathbbox ( pgs , & bbox ) ) >= 0"		8101484	0		>=			
ANR	8102017	AssignmentExpression	"code = gs_pathbbox ( pgs , & bbox )"		8101484	0		=			
ANR	8102018	Identifier	code		8101484	0					
ANR	8102019	CallExpression	"gs_pathbbox ( pgs , & bbox )"		8101484	1					
ANR	8102020	Callee	gs_pathbbox		8101484	0					
ANR	8102021	Identifier	gs_pathbbox		8101484	0					
ANR	8102022	ArgumentList	pgs		8101484	1					
ANR	8102023	Argument	pgs		8101484	0					
ANR	8102024	Identifier	pgs		8101484	0					
ANR	8102025	Argument	& bbox		8101484	1					
ANR	8102026	UnaryOperationExpression	& bbox		8101484	0					
ANR	8102027	UnaryOperator	&		8101484	0					
ANR	8102028	Identifier	bbox		8101484	1					
ANR	8102029	PrimaryExpression	0		8101484	1					
ANR	8102030	AndExpression	"( code = gs_rectappend ( pgs , & bbox , 1 ) ) >= 0 && ( code = gs_eofill ( pgs ) ) >= 0"		8101484	1		&&			
ANR	8102031	RelationalExpression	"( code = gs_rectappend ( pgs , & bbox , 1 ) ) >= 0"		8101484	0		>=			
ANR	8102032	AssignmentExpression	"code = gs_rectappend ( pgs , & bbox , 1 )"		8101484	0		=			
ANR	8102033	Identifier	code		8101484	0					
ANR	8102034	CallExpression	"gs_rectappend ( pgs , & bbox , 1 )"		8101484	1					
ANR	8102035	Callee	gs_rectappend		8101484	0					
ANR	8102036	Identifier	gs_rectappend		8101484	0					
ANR	8102037	ArgumentList	pgs		8101484	1					
ANR	8102038	Argument	pgs		8101484	0					
ANR	8102039	Identifier	pgs		8101484	0					
ANR	8102040	Argument	& bbox		8101484	1					
ANR	8102041	UnaryOperationExpression	& bbox		8101484	0					
ANR	8102042	UnaryOperator	&		8101484	0					
ANR	8102043	Identifier	bbox		8101484	1					
ANR	8102044	Argument	1		8101484	2					
ANR	8102045	PrimaryExpression	1		8101484	0					
ANR	8102046	PrimaryExpression	0		8101484	1					
ANR	8102047	RelationalExpression	( code = gs_eofill ( pgs ) ) >= 0		8101484	1		>=			
ANR	8102048	AssignmentExpression	code = gs_eofill ( pgs )		8101484	0		=			
ANR	8102049	Identifier	code		8101484	0					
ANR	8102050	CallExpression	gs_eofill ( pgs )		8101484	1					
ANR	8102051	Callee	gs_eofill		8101484	0					
ANR	8102052	Identifier	gs_eofill		8101484	0					
ANR	8102053	ArgumentList	pgs		8101484	1					
ANR	8102054	Argument	pgs		8101484	0					
ANR	8102055	Identifier	pgs		8101484	0					
ANR	8102056	PrimaryExpression	0		8101484	1					
ANR	8102057	CompoundStatement		86:12:2976:2976	8101484	1					
ANR	8102058	ExpressionStatement	"gs_text_release ( penum , ""show_char_background"" )"	693:16:23421:23467	8101484	0	True				
ANR	8102059	CallExpression	"gs_text_release ( penum , ""show_char_background"" )"		8101484	0					
ANR	8102060	Callee	gs_text_release		8101484	0					
ANR	8102061	Identifier	gs_text_release		8101484	0					
ANR	8102062	ArgumentList	penum		8101484	1					
ANR	8102063	Argument	penum		8101484	0					
ANR	8102064	Identifier	penum		8101484	0					
ANR	8102065	Argument	"""show_char_background"""		8101484	1					
ANR	8102066	PrimaryExpression	"""show_char_background"""		8101484	0					
ANR	8102067	ElseStatement	else		8101484	0					
ANR	8102068	ReturnStatement	return code ;	696:16:23516:23527	8101484	0	True				
ANR	8102069	Identifier	code		8101484	0					
ANR	8102070	ReturnStatement	return pcl_grestore ( pcs ) ;	700:4:23550:23574	8101484	11	True				
ANR	8102071	CallExpression	pcl_grestore ( pcs )		8101484	0					
ANR	8102072	Callee	pcl_grestore		8101484	0					
ANR	8102073	Identifier	pcl_grestore		8101484	0					
ANR	8102074	ArgumentList	pcs		8101484	1					
ANR	8102075	Argument	pcs		8101484	0					
ANR	8102076	Identifier	pcs		8101484	0					
ANR	8102077	ReturnType	static int		8101484	1					
ANR	8102078	Identifier	show_char_background		8101484	2					
ANR	8102079	ParameterList	"pcl_state_t * pcs , const gs_char * pbuff"		8101484	3					
ANR	8102080	Parameter	pcl_state_t * pcs	606:21:20384:20400	8101484	0	True				
ANR	8102081	ParameterType	pcl_state_t *		8101484	0					
ANR	8102082	Identifier	pcs		8101484	1					
ANR	8102083	Parameter	const gs_char * pbuff	606:40:20403:20423	8101484	1	True				
ANR	8102084	ParameterType	const gs_char *		8101484	0					
ANR	8102085	Identifier	pbuff		8101484	1					
ANR	8102086	CFGEntryNode	ENTRY		8101484		True				
ANR	8102087	CFGExitNode	EXIT		8101484		True				
ANR	8102088	Symbol	plfont -> scaling_technology		8101484						
ANR	8102089	Symbol	pt		8101484						
ANR	8102090	Symbol	bbox		8101484						
ANR	8102091	Symbol	pcl_pattern_solid_white		8101484						
ANR	8102092	Symbol	pcs -> pattern_transparent		8101484						
ANR	8102093	Symbol	* pcs		8101484						
ANR	8102094	Symbol	plfont		8101484						
ANR	8102095	Symbol	used		8101484						
ANR	8102096	Symbol	pcs -> font		8101484						
ANR	8102097	Symbol	gs_newpath		8101484						
ANR	8102098	Symbol	rop3_know_S_1		8101484						
ANR	8102099	Symbol	pl_get_int16		8101484						
ANR	8102100	Symbol	text . operation		8101484						
ANR	8102101	Symbol	pcl_set_drawing_color		8101484						
ANR	8102102	Symbol	pen		8101484						
ANR	8102103	Symbol	pcs -> memory		8101484						
ANR	8102104	Symbol	pbuff		8101484						
ANR	8102105	Symbol	text		8101484						
ANR	8102106	Symbol	TEXT_FROM_CHARS		8101484						
ANR	8102107	Symbol	gs_text_process		8101484						
ANR	8102108	Symbol	TEXT_RETURN_WIDTH		8101484						
ANR	8102109	Symbol	gs_setrasterop		8101484						
ANR	8102110	Symbol	& used		8101484						
ANR	8102111	Symbol	gs_eofill		8101484						
ANR	8102112	Symbol	penum		8101484						
ANR	8102113	Symbol	gs_currentpoint		8101484						
ANR	8102114	Symbol	& bbox		8101484						
ANR	8102115	Symbol	* pl_font_lookup_glyph		8101484						
ANR	8102116	Symbol	chr		8101484						
ANR	8102117	Symbol	& pt		8101484						
ANR	8102118	Symbol	cdata		8101484						
ANR	8102119	Symbol	pcs -> logical_op		8101484						
ANR	8102120	Symbol	& text		8101484						
ANR	8102121	Symbol	"pl_font_lookup_glyph ( plfont , glyph ) -> data"		8101484						
ANR	8102122	Symbol	pfont -> procs		8101484						
ANR	8102123	Symbol	text . data		8101484						
ANR	8102124	Symbol	gs_pathbbox		8101484						
ANR	8102125	Symbol	code		8101484						
ANR	8102126	Symbol	gs_image_enum_alloc		8101484						
ANR	8102127	Symbol	pl_font_lookup_glyph		8101484						
ANR	8102128	Symbol	plfst_bitmap		8101484						
ANR	8102129	Symbol	gs_moveto		8101484						
ANR	8102130	Symbol	rop		8101484						
ANR	8102131	Symbol	text . data . chars		8101484						
ANR	8102132	Symbol	gs_rectappend		8101484						
ANR	8102133	Symbol	e_Memory		8101484						
ANR	8102134	Symbol	& penum		8101484						
ANR	8102135	Symbol	gs_gstate_memory		8101484						
ANR	8102136	Symbol	pgs		8101484						
ANR	8102137	Symbol	pcl_gsave		8101484						
ANR	8102138	Symbol	mask . Height		8101484						
ANR	8102139	Symbol	mask		8101484						
ANR	8102140	Symbol	pcs		8101484						
ANR	8102141	Symbol	pl_get_uint16		8101484						
ANR	8102142	Symbol	pcl_grestore		8101484						
ANR	8102143	Symbol	pfont		8101484						
ANR	8102144	Symbol	pcs -> pgs		8101484						
ANR	8102145	Symbol	pfont -> procs . encode_char		8101484						
ANR	8102146	Symbol	false		8101484						
ANR	8102147	Symbol	& mask		8101484						
ANR	8102148	Symbol	gs_image_next		8101484						
ANR	8102149	Symbol	nbytes		8101484						
ANR	8102150	Symbol	text . size		8101484						
ANR	8102151	Symbol	gs_text_begin		8101484						
ANR	8102152	Symbol	GS_NO_GLYPH		8101484						
ANR	8102153	Symbol	glyph		8101484						
ANR	8102154	Symbol	* pfont		8101484						
ANR	8102155	Symbol	plfont -> pfont		8101484						
ANR	8102156	Symbol	* pbuff		8101484						
ANR	8102157	Symbol	* plfont		8101484						
ANR	8102158	Symbol	mask . adjust		8101484						
ANR	8102159	Symbol	TEXT_DO_TRUE_CHARPATH		8101484						
ANR	8102160	Symbol	pt . x		8101484						
ANR	8102161	Symbol	pt . y		8101484						
ANR	8102162	Symbol	mask . Width		8101484						
ANR	8102163	Function	pcl_get_width	706:0:23612:24745							
ANR	8102164	FunctionDef	"pcl_get_width (pcl_state_t * pcs , gs_point * advance_vector , const gs_point * pscale , gs_char chr , bool is_space , bool print_undefined)"		8102163	0					
ANR	8102165	CompoundStatement		710:0:23789:24745	8102163	0					
ANR	8102166	IdentifierDeclStatement	pcl_font_selection_t * pfp = & ( pcs -> font_selection [ pcs -> font_selected ] ) ;	711:4:23795:23865	8102163	0	True				
ANR	8102167	IdentifierDecl	* pfp = & ( pcs -> font_selection [ pcs -> font_selected ] )		8102163	0					
ANR	8102168	IdentifierDeclType	pcl_font_selection_t *		8102163	0					
ANR	8102169	Identifier	pfp		8102163	1					
ANR	8102170	AssignmentExpression	* pfp = & ( pcs -> font_selection [ pcs -> font_selected ] )		8102163	2		=			
ANR	8102171	Identifier	pfp		8102163	0					
ANR	8102172	UnaryOperationExpression	& ( pcs -> font_selection [ pcs -> font_selected ] )		8102163	1					
ANR	8102173	UnaryOperator	&		8102163	0					
ANR	8102174	ArrayIndexing	pcs -> font_selection [ pcs -> font_selected ]		8102163	1					
ANR	8102175	PtrMemberAccess	pcs -> font_selection		8102163	0					
ANR	8102176	Identifier	pcs		8102163	0					
ANR	8102177	Identifier	font_selection		8102163	1					
ANR	8102178	PtrMemberAccess	pcs -> font_selected		8102163	1					
ANR	8102179	Identifier	pcs		8102163	0					
ANR	8102180	Identifier	font_selected		8102163	1					
ANR	8102181	IdentifierDeclStatement	double width ;	712:4:23871:23883	8102163	1	True				
ANR	8102182	IdentifierDecl	width		8102163	0					
ANR	8102183	IdentifierDeclType	double		8102163	0					
ANR	8102184	Identifier	width		8102163	1					
ANR	8102185	IfStatement	if ( chr != 0xffff || print_undefined )		8102163	2					
ANR	8102186	Condition	chr != 0xffff || print_undefined	714:8:23894:23925	8102163	0	True				
ANR	8102187	OrExpression	chr != 0xffff || print_undefined		8102163	0		||			
ANR	8102188	EqualityExpression	chr != 0xffff		8102163	0		!=			
ANR	8102189	Identifier	chr		8102163	0					
ANR	8102190	PrimaryExpression	0xffff		8102163	1					
ANR	8102191	Identifier	print_undefined		8102163	1					
ANR	8102192	CompoundStatement		5:42:138:138	8102163	1					
ANR	8102193	IfStatement	if ( ! pfp -> params . proportional_spacing || is_space )		8102163	0					
ANR	8102194	Condition	! pfp -> params . proportional_spacing || is_space	715:12:23942:23986	8102163	0	True				
ANR	8102195	OrExpression	! pfp -> params . proportional_spacing || is_space		8102163	0		||			
ANR	8102196	UnaryOperationExpression	! pfp -> params . proportional_spacing		8102163	0					
ANR	8102197	UnaryOperator	!		8102163	0					
ANR	8102198	MemberAccess	pfp -> params . proportional_spacing		8102163	1					
ANR	8102199	PtrMemberAccess	pfp -> params		8102163	0					
ANR	8102200	Identifier	pfp		8102163	0					
ANR	8102201	Identifier	params		8102163	1					
ANR	8102202	Identifier	proportional_spacing		8102163	1					
ANR	8102203	Identifier	is_space		8102163	1					
ANR	8102204	ExpressionStatement	width = pcl_hmi ( pcs )	716:12:24001:24021	8102163	1	True				
ANR	8102205	AssignmentExpression	width = pcl_hmi ( pcs )		8102163	0		=			
ANR	8102206	Identifier	width		8102163	0					
ANR	8102207	CallExpression	pcl_hmi ( pcs )		8102163	1					
ANR	8102208	Callee	pcl_hmi		8102163	0					
ANR	8102209	Identifier	pcl_hmi		8102163	0					
ANR	8102210	ArgumentList	pcs		8102163	1					
ANR	8102211	Argument	pcs		8102163	0					
ANR	8102212	Identifier	pcs		8102163	0					
ANR	8102213	ElseStatement	else		8102163	0					
ANR	8102214	CompoundStatement		8:13:246:246	8102163	0					
ANR	8102215	IfStatement	if ( pcs -> font -> scaling_technology == plfst_TrueType || pcs -> font -> scaling_technology == plfst_MicroType )		8102163	0					
ANR	8102216	Condition	pcs -> font -> scaling_technology == plfst_TrueType || pcs -> font -> scaling_technology == plfst_MicroType	718:16:24054:24168	8102163	0	True				
ANR	8102217	OrExpression	pcs -> font -> scaling_technology == plfst_TrueType || pcs -> font -> scaling_technology == plfst_MicroType		8102163	0		||			
ANR	8102218	EqualityExpression	pcs -> font -> scaling_technology == plfst_TrueType		8102163	0		==			
ANR	8102219	PtrMemberAccess	pcs -> font -> scaling_technology		8102163	0					
ANR	8102220	PtrMemberAccess	pcs -> font		8102163	0					
ANR	8102221	Identifier	pcs		8102163	0					
ANR	8102222	Identifier	font		8102163	1					
ANR	8102223	Identifier	scaling_technology		8102163	1					
ANR	8102224	Identifier	plfst_TrueType		8102163	1					
ANR	8102225	EqualityExpression	pcs -> font -> scaling_technology == plfst_MicroType		8102163	1		==			
ANR	8102226	PtrMemberAccess	pcs -> font -> scaling_technology		8102163	0					
ANR	8102227	PtrMemberAccess	pcs -> font		8102163	0					
ANR	8102228	Identifier	pcs		8102163	0					
ANR	8102229	Identifier	font		8102163	1					
ANR	8102230	Identifier	scaling_technology		8102163	1					
ANR	8102231	Identifier	plfst_MicroType		8102163	1					
ANR	8102232	CompoundStatement		11:16:399:409	8102163	1					
ANR	8102233	IdentifierDeclStatement	double tmp ;	720:16:24189:24199	8102163	0	True				
ANR	8102234	IdentifierDecl	tmp		8102163	0					
ANR	8102235	IdentifierDeclType	double		8102163	0					
ANR	8102236	Identifier	tmp		8102163	1					
ANR	8102237	ExpressionStatement	tmp = pscale -> x / ( double ) pcs -> uom_cp + 0.5	722:16:24218:24262	8102163	1	True				
ANR	8102238	AssignmentExpression	tmp = pscale -> x / ( double ) pcs -> uom_cp + 0.5		8102163	0		=			
ANR	8102239	Identifier	tmp		8102163	0					
ANR	8102240	AdditiveExpression	pscale -> x / ( double ) pcs -> uom_cp + 0.5		8102163	1		+			
ANR	8102241	MultiplicativeExpression	pscale -> x / ( double ) pcs -> uom_cp		8102163	0		/			
ANR	8102242	PtrMemberAccess	pscale -> x		8102163	0					
ANR	8102243	Identifier	pscale		8102163	0					
ANR	8102244	Identifier	x		8102163	1					
ANR	8102245	CastExpression	( double ) pcs -> uom_cp		8102163	1					
ANR	8102246	CastTarget	double		8102163	0					
ANR	8102247	PtrMemberAccess	pcs -> uom_cp		8102163	1					
ANR	8102248	Identifier	pcs		8102163	0					
ANR	8102249	Identifier	uom_cp		8102163	1					
ANR	8102250	PrimaryExpression	0.5		8102163	1					
ANR	8102251	ExpressionStatement	"tmp -= fmod ( tmp , ( double ) 1.0 )"	723:16:24280:24310	8102163	2	True				
ANR	8102252	AssignmentExpression	"tmp -= fmod ( tmp , ( double ) 1.0 )"		8102163	0		-=			
ANR	8102253	Identifier	tmp		8102163	0					
ANR	8102254	CallExpression	"fmod ( tmp , ( double ) 1.0 )"		8102163	1					
ANR	8102255	Callee	fmod		8102163	0					
ANR	8102256	Identifier	fmod		8102163	0					
ANR	8102257	ArgumentList	tmp		8102163	1					
ANR	8102258	Argument	tmp		8102163	0					
ANR	8102259	Identifier	tmp		8102163	0					
ANR	8102260	Argument	( double ) 1.0		8102163	1					
ANR	8102261	CastExpression	( double ) 1.0		8102163	0					
ANR	8102262	CastTarget	double		8102163	0					
ANR	8102263	PrimaryExpression	1.0		8102163	1					
ANR	8102264	ExpressionStatement	tmp *= ( double ) pcs -> uom_cp	724:16:24328:24355	8102163	3	True				
ANR	8102265	AssignmentExpression	tmp *= ( double ) pcs -> uom_cp		8102163	0		*=			
ANR	8102266	Identifier	tmp		8102163	0					
ANR	8102267	CastExpression	( double ) pcs -> uom_cp		8102163	1					
ANR	8102268	CastTarget	double		8102163	0					
ANR	8102269	PtrMemberAccess	pcs -> uom_cp		8102163	1					
ANR	8102270	Identifier	pcs		8102163	0					
ANR	8102271	Identifier	uom_cp		8102163	1					
ANR	8102272	ExpressionStatement	width = advance_vector -> x * tmp	725:16:24373:24404	8102163	4	True				
ANR	8102273	AssignmentExpression	width = advance_vector -> x * tmp		8102163	0		=			
ANR	8102274	Identifier	width		8102163	0					
ANR	8102275	MultiplicativeExpression	advance_vector -> x * tmp		8102163	1		*			
ANR	8102276	PtrMemberAccess	advance_vector -> x		8102163	0					
ANR	8102277	Identifier	advance_vector		8102163	0					
ANR	8102278	Identifier	x		8102163	1					
ANR	8102279	Identifier	tmp		8102163	1					
ANR	8102280	ElseStatement	else		8102163	0					
ANR	8102281	ExpressionStatement	width = advance_vector -> x * pscale -> x	728:16:24442:24479	8102163	0	True				
ANR	8102282	AssignmentExpression	width = advance_vector -> x * pscale -> x		8102163	0		=			
ANR	8102283	Identifier	width		8102163	0					
ANR	8102284	MultiplicativeExpression	advance_vector -> x * pscale -> x		8102163	1		*			
ANR	8102285	PtrMemberAccess	advance_vector -> x		8102163	0					
ANR	8102286	Identifier	advance_vector		8102163	0					
ANR	8102287	Identifier	x		8102163	1					
ANR	8102288	PtrMemberAccess	pscale -> x		8102163	1					
ANR	8102289	Identifier	pscale		8102163	0					
ANR	8102290	Identifier	x		8102163	1					
ANR	8102291	ExpressionStatement	width += ( double ) pcs -> uom_cp / 2.0	729:12:24493:24528	8102163	1	True				
ANR	8102292	AssignmentExpression	width += ( double ) pcs -> uom_cp / 2.0		8102163	0		+=			
ANR	8102293	Identifier	width		8102163	0					
ANR	8102294	MultiplicativeExpression	( double ) pcs -> uom_cp / 2.0		8102163	1		/			
ANR	8102295	CastExpression	( double ) pcs -> uom_cp		8102163	0					
ANR	8102296	CastTarget	double		8102163	0					
ANR	8102297	PtrMemberAccess	pcs -> uom_cp		8102163	1					
ANR	8102298	Identifier	pcs		8102163	0					
ANR	8102299	Identifier	uom_cp		8102163	1					
ANR	8102300	PrimaryExpression	2.0		8102163	1					
ANR	8102301	ExpressionStatement	"width -= fmod ( width , ( double ) pcs -> uom_cp )"	730:12:24542:24584	8102163	2	True				
ANR	8102302	AssignmentExpression	"width -= fmod ( width , ( double ) pcs -> uom_cp )"		8102163	0		-=			
ANR	8102303	Identifier	width		8102163	0					
ANR	8102304	CallExpression	"fmod ( width , ( double ) pcs -> uom_cp )"		8102163	1					
ANR	8102305	Callee	fmod		8102163	0					
ANR	8102306	Identifier	fmod		8102163	0					
ANR	8102307	ArgumentList	width		8102163	1					
ANR	8102308	Argument	width		8102163	0					
ANR	8102309	Identifier	width		8102163	0					
ANR	8102310	Argument	( double ) pcs -> uom_cp		8102163	1					
ANR	8102311	CastExpression	( double ) pcs -> uom_cp		8102163	0					
ANR	8102312	CastTarget	double		8102163	0					
ANR	8102313	PtrMemberAccess	pcs -> uom_cp		8102163	1					
ANR	8102314	Identifier	pcs		8102163	0					
ANR	8102315	Identifier	uom_cp		8102163	1					
ANR	8102316	ElseStatement	else		8102163	0					
ANR	8102317	IfStatement	if ( is_space )		8102163	0					
ANR	8102318	Condition	is_space	732:15:24611:24618	8102163	0	True				
ANR	8102319	Identifier	is_space		8102163	0					
ANR	8102320	ExpressionStatement	width = pcl_hmi ( pcs )	733:8:24629:24649	8102163	1	True				
ANR	8102321	AssignmentExpression	width = pcl_hmi ( pcs )		8102163	0		=			
ANR	8102322	Identifier	width		8102163	0					
ANR	8102323	CallExpression	pcl_hmi ( pcs )		8102163	1					
ANR	8102324	Callee	pcl_hmi		8102163	0					
ANR	8102325	Identifier	pcl_hmi		8102163	0					
ANR	8102326	ArgumentList	pcs		8102163	1					
ANR	8102327	Argument	pcs		8102163	0					
ANR	8102328	Identifier	pcs		8102163	0					
ANR	8102329	ElseStatement	else		8102163	0					
ANR	8102330	ExpressionStatement	width = 0.0	735:8:24668:24679	8102163	0	True				
ANR	8102331	AssignmentExpression	width = 0.0		8102163	0		=			
ANR	8102332	Identifier	width		8102163	0					
ANR	8102333	PrimaryExpression	0.0		8102163	1					
ANR	8102334	ReturnStatement	return width ;	737:4:24731:24743	8102163	3	True				
ANR	8102335	Identifier	width		8102163	0					
ANR	8102336	ReturnType	static double		8102163	1					
ANR	8102337	Identifier	pcl_get_width		8102163	2					
ANR	8102338	ParameterList	"pcl_state_t * pcs , gs_point * advance_vector , const gs_point * pscale , gs_char chr , bool is_space , bool print_undefined"		8102163	3					
ANR	8102339	Parameter	pcl_state_t * pcs	707:14:23640:23656	8102163	0	True				
ANR	8102340	ParameterType	pcl_state_t *		8102163	0					
ANR	8102341	Identifier	pcs		8102163	1					
ANR	8102342	Parameter	gs_point * advance_vector	707:33:23659:23683	8102163	1	True				
ANR	8102343	ParameterType	gs_point *		8102163	0					
ANR	8102344	Identifier	advance_vector		8102163	1					
ANR	8102345	Parameter	const gs_point * pscale	708:14:23700:23722	8102163	2	True				
ANR	8102346	ParameterType	const gs_point *		8102163	0					
ANR	8102347	Identifier	pscale		8102163	1					
ANR	8102348	Parameter	gs_char chr	708:39:23725:23735	8102163	3	True				
ANR	8102349	ParameterType	gs_char		8102163	0					
ANR	8102350	Identifier	chr		8102163	1					
ANR	8102351	Parameter	bool is_space	708:52:23738:23750	8102163	4	True				
ANR	8102352	ParameterType	bool		8102163	0					
ANR	8102353	Identifier	is_space		8102163	1					
ANR	8102354	Parameter	bool print_undefined	709:14:23767:23786	8102163	5	True				
ANR	8102355	ParameterType	bool		8102163	0					
ANR	8102356	Identifier	print_undefined		8102163	1					
ANR	8102357	CFGEntryNode	ENTRY		8102163		True				
ANR	8102358	CFGExitNode	EXIT		8102163		True				
ANR	8102359	Symbol	advance_vector		8102163						
ANR	8102360	Symbol	pcs -> font -> scaling_technology		8102163						
ANR	8102361	Symbol	* pcs		8102163						
ANR	8102362	Symbol	* pscale		8102163						
ANR	8102363	Symbol	pcs -> font		8102163						
ANR	8102364	Symbol	* advance_vector		8102163						
ANR	8102365	Symbol	pfp -> params . proportional_spacing		8102163						
ANR	8102366	Symbol	pcl_hmi		8102163						
ANR	8102367	Symbol	tmp		8102163						
ANR	8102368	Symbol	pcs -> uom_cp		8102163						
ANR	8102369	Symbol	advance_vector -> x		8102163						
ANR	8102370	Symbol	is_space		8102163						
ANR	8102371	Symbol	pcs		8102163						
ANR	8102372	Symbol	* pfp		8102163						
ANR	8102373	Symbol	print_undefined		8102163						
ANR	8102374	Symbol	pscale -> x		8102163						
ANR	8102375	Symbol	pcs -> font_selection		8102163						
ANR	8102376	Symbol	chr		8102163						
ANR	8102377	Symbol	* pcs -> font		8102163						
ANR	8102378	Symbol	fmod		8102163						
ANR	8102379	Symbol	plfst_MicroType		8102163						
ANR	8102380	Symbol	* * pcs		8102163						
ANR	8102381	Symbol	pcs -> font_selected		8102163						
ANR	8102382	Symbol	pfp -> params		8102163						
ANR	8102383	Symbol	width		8102163						
ANR	8102384	Symbol	plfst_TrueType		8102163						
ANR	8102385	Symbol	pscale		8102163						
ANR	8102386	Symbol	pfp		8102163						
ANR	8102387	Function	pcl_show_chars_slow	795:0:27892:34041							
ANR	8102388	FunctionDef	"pcl_show_chars_slow (pcl_state_t * pcs , const gs_point * pscale , const byte * str , uint size , bool literal)"		8102387	0					
ANR	8102389	CompoundStatement		799:0:28050:34041	8102387	0					
ANR	8102390	IdentifierDeclStatement	gs_gstate * pgs = pcs -> pgs ;	800:4:28056:28081	8102387	0	True				
ANR	8102391	IdentifierDecl	* pgs = pcs -> pgs		8102387	0					
ANR	8102392	IdentifierDeclType	gs_gstate *		8102387	0					
ANR	8102393	Identifier	pgs		8102387	1					
ANR	8102394	AssignmentExpression	* pgs = pcs -> pgs		8102387	2		=			
ANR	8102395	Identifier	pgs		8102387	0					
ANR	8102396	PtrMemberAccess	pcs -> pgs		8102387	1					
ANR	8102397	Identifier	pcs		8102387	0					
ANR	8102398	Identifier	pgs		8102387	1					
ANR	8102399	IdentifierDeclStatement	gs_char buff [ 1 ] ;	801:4:28087:28102	8102387	1	True				
ANR	8102400	IdentifierDecl	buff [ 1 ]		8102387	0					
ANR	8102401	IdentifierDeclType	gs_char [ 1 ]		8102387	0					
ANR	8102402	Identifier	buff		8102387	1					
ANR	8102403	PrimaryExpression	1		8102387	2					
ANR	8102404	IdentifierDeclStatement	double rmargin = pcs -> margins . right ;	802:4:28108:28143	8102387	2	True				
ANR	8102405	IdentifierDecl	rmargin = pcs -> margins . right		8102387	0					
ANR	8102406	IdentifierDeclType	double		8102387	0					
ANR	8102407	Identifier	rmargin		8102387	1					
ANR	8102408	AssignmentExpression	rmargin = pcs -> margins . right		8102387	2		=			
ANR	8102409	Identifier	rmargin		8102387	0					
ANR	8102410	MemberAccess	pcs -> margins . right		8102387	1					
ANR	8102411	PtrMemberAccess	pcs -> margins		8102387	0					
ANR	8102412	Identifier	pcs		8102387	0					
ANR	8102413	Identifier	margins		8102387	1					
ANR	8102414	Identifier	right		8102387	1					
ANR	8102415	IdentifierDeclStatement	double page_size = pcs -> xfm_state . pd_size . x ;	803:4:28149:28192	8102387	3	True				
ANR	8102416	IdentifierDecl	page_size = pcs -> xfm_state . pd_size . x		8102387	0					
ANR	8102417	IdentifierDeclType	double		8102387	0					
ANR	8102418	Identifier	page_size		8102387	1					
ANR	8102419	AssignmentExpression	page_size = pcs -> xfm_state . pd_size . x		8102387	2		=			
ANR	8102420	Identifier	page_size		8102387	0					
ANR	8102421	MemberAccess	pcs -> xfm_state . pd_size . x		8102387	1					
ANR	8102422	MemberAccess	pcs -> xfm_state . pd_size		8102387	0					
ANR	8102423	PtrMemberAccess	pcs -> xfm_state		8102387	0					
ANR	8102424	Identifier	pcs		8102387	0					
ANR	8102425	Identifier	xfm_state		8102387	1					
ANR	8102426	Identifier	pd_size		8102387	1					
ANR	8102427	Identifier	x		8102387	1					
ANR	8102428	IdentifierDeclStatement	bool source_opaque = ! pcs -> source_transparent ;	804:4:28198:28243	8102387	4	True				
ANR	8102429	IdentifierDecl	source_opaque = ! pcs -> source_transparent		8102387	0					
ANR	8102430	IdentifierDeclType	bool		8102387	0					
ANR	8102431	Identifier	source_opaque		8102387	1					
ANR	8102432	AssignmentExpression	source_opaque = ! pcs -> source_transparent		8102387	2		=			
ANR	8102433	Identifier	source_opaque		8102387	0					
ANR	8102434	UnaryOperationExpression	! pcs -> source_transparent		8102387	1					
ANR	8102435	UnaryOperator	!		8102387	0					
ANR	8102436	PtrMemberAccess	pcs -> source_transparent		8102387	1					
ANR	8102437	Identifier	pcs		8102387	0					
ANR	8102438	Identifier	source_transparent		8102387	1					
ANR	8102439	IdentifierDeclStatement	bool invisible_pattern = is_invisible_pattern ( pcs ) ;	805:4:28249:28299	8102387	5	True				
ANR	8102440	IdentifierDecl	invisible_pattern = is_invisible_pattern ( pcs )		8102387	0					
ANR	8102441	IdentifierDeclType	bool		8102387	0					
ANR	8102442	Identifier	invisible_pattern		8102387	1					
ANR	8102443	AssignmentExpression	invisible_pattern = is_invisible_pattern ( pcs )		8102387	2		=			
ANR	8102444	Identifier	invisible_pattern		8102387	0					
ANR	8102445	CallExpression	is_invisible_pattern ( pcs )		8102387	1					
ANR	8102446	Callee	is_invisible_pattern		8102387	0					
ANR	8102447	Identifier	is_invisible_pattern		8102387	0					
ANR	8102448	ArgumentList	pcs		8102387	1					
ANR	8102449	Argument	pcs		8102387	0					
ANR	8102450	Identifier	pcs		8102387	0					
ANR	8102451	IdentifierDeclStatement	bool wrap = pcs -> end_of_line_wrap ;	806:4:28305:28338	8102387	6	True				
ANR	8102452	IdentifierDecl	wrap = pcs -> end_of_line_wrap		8102387	0					
ANR	8102453	IdentifierDeclType	bool		8102387	0					
ANR	8102454	Identifier	wrap		8102387	1					
ANR	8102455	AssignmentExpression	wrap = pcs -> end_of_line_wrap		8102387	2		=			
ANR	8102456	Identifier	wrap		8102387	0					
ANR	8102457	PtrMemberAccess	pcs -> end_of_line_wrap		8102387	1					
ANR	8102458	Identifier	pcs		8102387	0					
ANR	8102459	Identifier	end_of_line_wrap		8102387	1					
ANR	8102460	IdentifierDeclStatement	bool is_space = false ;	807:4:28344:28365	8102387	7	True				
ANR	8102461	IdentifierDecl	is_space = false		8102387	0					
ANR	8102462	IdentifierDeclType	bool		8102387	0					
ANR	8102463	Identifier	is_space		8102387	1					
ANR	8102464	AssignmentExpression	is_space = false		8102387	2		=			
ANR	8102465	Identifier	false		8102387	0					
ANR	8102466	Identifier	false		8102387	1					
ANR	8102467	IdentifierDeclStatement	bool print_undefined = false ;	808:4:28371:28399	8102387	8	True				
ANR	8102468	IdentifierDecl	print_undefined = false		8102387	0					
ANR	8102469	IdentifierDeclType	bool		8102387	0					
ANR	8102470	Identifier	print_undefined		8102387	1					
ANR	8102471	AssignmentExpression	print_undefined = false		8102387	2		=			
ANR	8102472	Identifier	false		8102387	0					
ANR	8102473	Identifier	false		8102387	1					
ANR	8102474	IdentifierDeclStatement	bool use_rmargin = ( pcs -> cap . x <= rmargin ) ;	809:4:28405:28447	8102387	9	True				
ANR	8102475	IdentifierDecl	use_rmargin = ( pcs -> cap . x <= rmargin )		8102387	0					
ANR	8102476	IdentifierDeclType	bool		8102387	0					
ANR	8102477	Identifier	use_rmargin		8102387	1					
ANR	8102478	AssignmentExpression	use_rmargin = ( pcs -> cap . x <= rmargin )		8102387	2		=			
ANR	8102479	Identifier	use_rmargin		8102387	0					
ANR	8102480	RelationalExpression	pcs -> cap . x <= rmargin		8102387	1		<=			
ANR	8102481	MemberAccess	pcs -> cap . x		8102387	0					
ANR	8102482	PtrMemberAccess	pcs -> cap		8102387	0					
ANR	8102483	Identifier	pcs		8102387	0					
ANR	8102484	Identifier	cap		8102387	1					
ANR	8102485	Identifier	x		8102387	1					
ANR	8102486	Identifier	rmargin		8102387	1					
ANR	8102487	IdentifierDeclStatement	"gs_char chr , orig_chr ;"	810:4:28453:28474	8102387	10	True				
ANR	8102488	IdentifierDecl	chr		8102387	0					
ANR	8102489	IdentifierDeclType	gs_char		8102387	0					
ANR	8102490	Identifier	chr		8102387	1					
ANR	8102491	IdentifierDecl	orig_chr		8102387	1					
ANR	8102492	IdentifierDeclType	gs_char		8102387	0					
ANR	8102493	Identifier	orig_chr		8102387	1					
ANR	8102494	IdentifierDeclStatement	int code = 0 ;	811:4:28480:28492	8102387	11	True				
ANR	8102495	IdentifierDecl	code = 0		8102387	0					
ANR	8102496	IdentifierDeclType	int		8102387	0					
ANR	8102497	Identifier	code		8102387	1					
ANR	8102498	AssignmentExpression	code = 0		8102387	2		=			
ANR	8102499	Identifier	code		8102387	0					
ANR	8102500	PrimaryExpression	0		8102387	1					
ANR	8102501	IdentifierDeclStatement	double width ;	812:4:28498:28510	8102387	12	True				
ANR	8102502	IdentifierDecl	width		8102387	0					
ANR	8102503	IdentifierDeclType	double		8102387	0					
ANR	8102504	Identifier	width		8102387	1					
ANR	8102505	IdentifierDeclStatement	gs_point cpt ;	813:4:28516:28528	8102387	13	True				
ANR	8102506	IdentifierDecl	cpt		8102387	0					
ANR	8102507	IdentifierDeclType	gs_point		8102387	0					
ANR	8102508	Identifier	cpt		8102387	1					
ANR	8102509	IdentifierDeclStatement	gs_point advance_vector ;	814:4:28534:28557	8102387	14	True				
ANR	8102510	IdentifierDecl	advance_vector		8102387	0					
ANR	8102511	IdentifierDeclType	gs_point		8102387	0					
ANR	8102512	Identifier	advance_vector		8102387	1					
ANR	8102513	IdentifierDeclStatement	bool unstyled_substitution ;	815:4:28563:28589	8102387	15	True				
ANR	8102514	IdentifierDecl	unstyled_substitution		8102387	0					
ANR	8102515	IdentifierDeclType	bool		8102387	0					
ANR	8102516	Identifier	unstyled_substitution		8102387	1					
ANR	8102517	ExpressionStatement	cpt . x = pcs -> cap . x	817:4:28596:28614	8102387	16	True				
ANR	8102518	AssignmentExpression	cpt . x = pcs -> cap . x		8102387	0		=			
ANR	8102519	MemberAccess	cpt . x		8102387	0					
ANR	8102520	Identifier	cpt		8102387	0					
ANR	8102521	Identifier	x		8102387	1					
ANR	8102522	MemberAccess	pcs -> cap . x		8102387	1					
ANR	8102523	PtrMemberAccess	pcs -> cap		8102387	0					
ANR	8102524	Identifier	pcs		8102387	0					
ANR	8102525	Identifier	cap		8102387	1					
ANR	8102526	Identifier	x		8102387	1					
ANR	8102527	ExpressionStatement	cpt . y = pcs -> cap . y	818:4:28620:28638	8102387	17	True				
ANR	8102528	AssignmentExpression	cpt . y = pcs -> cap . y		8102387	0		=			
ANR	8102529	MemberAccess	cpt . y		8102387	0					
ANR	8102530	Identifier	cpt		8102387	0					
ANR	8102531	Identifier	y		8102387	1					
ANR	8102532	MemberAccess	pcs -> cap . y		8102387	1					
ANR	8102533	PtrMemberAccess	pcs -> cap		8102387	0					
ANR	8102534	Identifier	pcs		8102387	0					
ANR	8102535	Identifier	cap		8102387	1					
ANR	8102536	Identifier	y		8102387	1					
ANR	8102537	ExpressionStatement	width = pcs -> last_width	819:4:28644:28667	8102387	18	True				
ANR	8102538	AssignmentExpression	width = pcs -> last_width		8102387	0		=			
ANR	8102539	Identifier	width		8102387	0					
ANR	8102540	PtrMemberAccess	pcs -> last_width		8102387	1					
ANR	8102541	Identifier	pcs		8102387	0					
ANR	8102542	Identifier	last_width		8102387	1					
ANR	8102543	WhileStatement	"while ( get_next_char ( pcs , & str , & size , & chr , & orig_chr , & is_space , & print_undefined , literal , & advance_vector , & unstyled_substitution ) == 0 )"		8102387	19					
ANR	8102544	Condition	"get_next_char ( pcs , & str , & size , & chr , & orig_chr , & is_space , & print_undefined , literal , & advance_vector , & unstyled_substitution ) == 0"	821:11:28681:28862	8102387	0	True				
ANR	8102545	EqualityExpression	"get_next_char ( pcs , & str , & size , & chr , & orig_chr , & is_space , & print_undefined , literal , & advance_vector , & unstyled_substitution ) == 0"		8102387	0		==			
ANR	8102546	CallExpression	"get_next_char ( pcs , & str , & size , & chr , & orig_chr , & is_space , & print_undefined , literal , & advance_vector , & unstyled_substitution )"		8102387	0					
ANR	8102547	Callee	get_next_char		8102387	0					
ANR	8102548	Identifier	get_next_char		8102387	0					
ANR	8102549	ArgumentList	pcs		8102387	1					
ANR	8102550	Argument	pcs		8102387	0					
ANR	8102551	Identifier	pcs		8102387	0					
ANR	8102552	Argument	& str		8102387	1					
ANR	8102553	UnaryOperationExpression	& str		8102387	0					
ANR	8102554	UnaryOperator	&		8102387	0					
ANR	8102555	Identifier	str		8102387	1					
ANR	8102556	Argument	& size		8102387	2					
ANR	8102557	UnaryOperationExpression	& size		8102387	0					
ANR	8102558	UnaryOperator	&		8102387	0					
ANR	8102559	Identifier	size		8102387	1					
ANR	8102560	Argument	& chr		8102387	3					
ANR	8102561	UnaryOperationExpression	& chr		8102387	0					
ANR	8102562	UnaryOperator	&		8102387	0					
ANR	8102563	Identifier	chr		8102387	1					
ANR	8102564	Argument	& orig_chr		8102387	4					
ANR	8102565	UnaryOperationExpression	& orig_chr		8102387	0					
ANR	8102566	UnaryOperator	&		8102387	0					
ANR	8102567	Identifier	orig_chr		8102387	1					
ANR	8102568	Argument	& is_space		8102387	5					
ANR	8102569	UnaryOperationExpression	& is_space		8102387	0					
ANR	8102570	UnaryOperator	&		8102387	0					
ANR	8102571	Identifier	is_space		8102387	1					
ANR	8102572	Argument	& print_undefined		8102387	6					
ANR	8102573	UnaryOperationExpression	& print_undefined		8102387	0					
ANR	8102574	UnaryOperator	&		8102387	0					
ANR	8102575	Identifier	print_undefined		8102387	1					
ANR	8102576	Argument	literal		8102387	7					
ANR	8102577	Identifier	literal		8102387	0					
ANR	8102578	Argument	& advance_vector		8102387	8					
ANR	8102579	UnaryOperationExpression	& advance_vector		8102387	0					
ANR	8102580	UnaryOperator	&		8102387	0					
ANR	8102581	Identifier	advance_vector		8102387	1					
ANR	8102582	Argument	& unstyled_substitution		8102387	9					
ANR	8102583	UnaryOperationExpression	& unstyled_substitution		8102387	0					
ANR	8102584	UnaryOperator	&		8102387	0					
ANR	8102585	Identifier	unstyled_substitution		8102387	1					
ANR	8102586	PrimaryExpression	0		8102387	1					
ANR	8102587	CompoundStatement		26:8:824:836	8102387	1					
ANR	8102588	IdentifierDeclStatement	double tmp_x ;	824:8:28875:28887	8102387	0	True				
ANR	8102589	IdentifierDecl	tmp_x		8102387	0					
ANR	8102590	IdentifierDeclType	double		8102387	0					
ANR	8102591	Identifier	tmp_x		8102387	1					
ANR	8102592	ExpressionStatement	buff [ 0 ] = chr	827:8:28943:28956	8102387	1	True				
ANR	8102593	AssignmentExpression	buff [ 0 ] = chr		8102387	0		=			
ANR	8102594	ArrayIndexing	buff [ 0 ]		8102387	0					
ANR	8102595	Identifier	buff		8102387	0					
ANR	8102596	PrimaryExpression	0		8102387	1					
ANR	8102597	Identifier	chr		8102387	1					
ANR	8102598	ExpressionStatement	"width = ( pcl_get_width ( pcs , & advance_vector , pscale , chr , is_space , print_undefined ) )"	830:8:29023:29134	8102387	2	True				
ANR	8102599	AssignmentExpression	"width = ( pcl_get_width ( pcs , & advance_vector , pscale , chr , is_space , print_undefined ) )"		8102387	0		=			
ANR	8102600	Identifier	width		8102387	0					
ANR	8102601	CallExpression	"pcl_get_width ( pcs , & advance_vector , pscale , chr , is_space , print_undefined )"		8102387	1					
ANR	8102602	Callee	pcl_get_width		8102387	0					
ANR	8102603	Identifier	pcl_get_width		8102387	0					
ANR	8102604	ArgumentList	pcs		8102387	1					
ANR	8102605	Argument	pcs		8102387	0					
ANR	8102606	Identifier	pcs		8102387	0					
ANR	8102607	Argument	& advance_vector		8102387	1					
ANR	8102608	UnaryOperationExpression	& advance_vector		8102387	0					
ANR	8102609	UnaryOperator	&		8102387	0					
ANR	8102610	Identifier	advance_vector		8102387	1					
ANR	8102611	Argument	pscale		8102387	2					
ANR	8102612	Identifier	pscale		8102387	0					
ANR	8102613	Argument	chr		8102387	3					
ANR	8102614	Identifier	chr		8102387	0					
ANR	8102615	Argument	is_space		8102387	4					
ANR	8102616	Identifier	is_space		8102387	0					
ANR	8102617	Argument	print_undefined		8102387	5					
ANR	8102618	Identifier	print_undefined		8102387	0					
ANR	8102619	IfStatement	if ( ! pcs -> last_was_BS )		8102387	3					
ANR	8102620	Condition	! pcs -> last_was_BS	851:12:30058:30074	8102387	0	True				
ANR	8102621	UnaryOperationExpression	! pcs -> last_was_BS		8102387	0					
ANR	8102622	UnaryOperator	!		8102387	0					
ANR	8102623	PtrMemberAccess	pcs -> last_was_BS		8102387	1					
ANR	8102624	Identifier	pcs		8102387	0					
ANR	8102625	Identifier	last_was_BS		8102387	1					
ANR	8102626	CompoundStatement		53:31:2026:2026	8102387	1					
ANR	8102627	IfStatement	if ( wrap )		8102387	0					
ANR	8102628	Condition	wrap	852:16:30095:30098	8102387	0	True				
ANR	8102629	Identifier	wrap		8102387	0					
ANR	8102630	CompoundStatement		54:22:2050:2050	8102387	1					
ANR	8102631	IfStatement	if ( ( use_rmargin && ( cpt . x + width > rmargin ) ) || ( cpt . x + width > page_size ) )		8102387	0					
ANR	8102632	Condition	( use_rmargin && ( cpt . x + width > rmargin ) ) || ( cpt . x + width > page_size )	853:20:30123:30215	8102387	0	True				
ANR	8102633	OrExpression	( use_rmargin && ( cpt . x + width > rmargin ) ) || ( cpt . x + width > page_size )		8102387	0		||			
ANR	8102634	AndExpression	use_rmargin && ( cpt . x + width > rmargin )		8102387	0		&&			
ANR	8102635	Identifier	use_rmargin		8102387	0					
ANR	8102636	RelationalExpression	cpt . x + width > rmargin		8102387	1		>			
ANR	8102637	AdditiveExpression	cpt . x + width		8102387	0		+			
ANR	8102638	MemberAccess	cpt . x		8102387	0					
ANR	8102639	Identifier	cpt		8102387	0					
ANR	8102640	Identifier	x		8102387	1					
ANR	8102641	Identifier	width		8102387	1					
ANR	8102642	Identifier	rmargin		8102387	1					
ANR	8102643	RelationalExpression	cpt . x + width > page_size		8102387	1		>			
ANR	8102644	AdditiveExpression	cpt . x + width		8102387	0		+			
ANR	8102645	MemberAccess	cpt . x		8102387	0					
ANR	8102646	Identifier	cpt		8102387	0					
ANR	8102647	Identifier	x		8102387	1					
ANR	8102648	Identifier	width		8102387	1					
ANR	8102649	Identifier	page_size		8102387	1					
ANR	8102650	CompoundStatement		56:49:2167:2167	8102387	1					
ANR	8102651	ExpressionStatement	pcs -> cap . x = ( coord ) cpt . x	861:20:30608:30634	8102387	0	True				
ANR	8102652	AssignmentExpression	pcs -> cap . x = ( coord ) cpt . x		8102387	0		=			
ANR	8102653	MemberAccess	pcs -> cap . x		8102387	0					
ANR	8102654	PtrMemberAccess	pcs -> cap		8102387	0					
ANR	8102655	Identifier	pcs		8102387	0					
ANR	8102656	Identifier	cap		8102387	1					
ANR	8102657	Identifier	x		8102387	1					
ANR	8102658	CastExpression	( coord ) cpt . x		8102387	1					
ANR	8102659	CastTarget	coord		8102387	0					
ANR	8102660	MemberAccess	cpt . x		8102387	1					
ANR	8102661	Identifier	cpt		8102387	0					
ANR	8102662	Identifier	x		8102387	1					
ANR	8102663	ExpressionStatement	pcs -> cap . y = ( coord ) cpt . y	862:20:30656:30682	8102387	1	True				
ANR	8102664	AssignmentExpression	pcs -> cap . y = ( coord ) cpt . y		8102387	0		=			
ANR	8102665	MemberAccess	pcs -> cap . y		8102387	0					
ANR	8102666	PtrMemberAccess	pcs -> cap		8102387	0					
ANR	8102667	Identifier	pcs		8102387	0					
ANR	8102668	Identifier	cap		8102387	1					
ANR	8102669	Identifier	y		8102387	1					
ANR	8102670	CastExpression	( coord ) cpt . y		8102387	1					
ANR	8102671	CastTarget	coord		8102387	0					
ANR	8102672	MemberAccess	cpt . y		8102387	1					
ANR	8102673	Identifier	cpt		8102387	0					
ANR	8102674	Identifier	y		8102387	1					
ANR	8102675	ExpressionStatement	pcl_do_CR ( pcs )	863:20:30704:30718	8102387	2	True				
ANR	8102676	CallExpression	pcl_do_CR ( pcs )		8102387	0					
ANR	8102677	Callee	pcl_do_CR		8102387	0					
ANR	8102678	Identifier	pcl_do_CR		8102387	0					
ANR	8102679	ArgumentList	pcs		8102387	1					
ANR	8102680	Argument	pcs		8102387	0					
ANR	8102681	Identifier	pcs		8102387	0					
ANR	8102682	ExpressionStatement	pcl_do_LF ( pcs )	864:20:30740:30754	8102387	3	True				
ANR	8102683	CallExpression	pcl_do_LF ( pcs )		8102387	0					
ANR	8102684	Callee	pcl_do_LF		8102387	0					
ANR	8102685	Identifier	pcl_do_LF		8102387	0					
ANR	8102686	ArgumentList	pcs		8102387	1					
ANR	8102687	Argument	pcs		8102387	0					
ANR	8102688	Identifier	pcs		8102387	0					
ANR	8102689	ExpressionStatement	cpt . x = pcs -> cap . x	865:20:30776:30794	8102387	4	True				
ANR	8102690	AssignmentExpression	cpt . x = pcs -> cap . x		8102387	0		=			
ANR	8102691	MemberAccess	cpt . x		8102387	0					
ANR	8102692	Identifier	cpt		8102387	0					
ANR	8102693	Identifier	x		8102387	1					
ANR	8102694	MemberAccess	pcs -> cap . x		8102387	1					
ANR	8102695	PtrMemberAccess	pcs -> cap		8102387	0					
ANR	8102696	Identifier	pcs		8102387	0					
ANR	8102697	Identifier	cap		8102387	1					
ANR	8102698	Identifier	x		8102387	1					
ANR	8102699	ExpressionStatement	cpt . y = pcs -> cap . y	866:20:30816:30834	8102387	5	True				
ANR	8102700	AssignmentExpression	cpt . y = pcs -> cap . y		8102387	0		=			
ANR	8102701	MemberAccess	cpt . y		8102387	0					
ANR	8102702	Identifier	cpt		8102387	0					
ANR	8102703	Identifier	y		8102387	1					
ANR	8102704	MemberAccess	pcs -> cap . y		8102387	1					
ANR	8102705	PtrMemberAccess	pcs -> cap		8102387	0					
ANR	8102706	Identifier	pcs		8102387	0					
ANR	8102707	Identifier	cap		8102387	1					
ANR	8102708	Identifier	y		8102387	1					
ANR	8102709	ExpressionStatement	use_rmargin = true	867:20:30856:30874	8102387	6	True				
ANR	8102710	AssignmentExpression	use_rmargin = true		8102387	0		=			
ANR	8102711	Identifier	use_rmargin		8102387	0					
ANR	8102712	Identifier	true		8102387	1					
ANR	8102713	ElseStatement	else		8102387	0					
ANR	8102714	CompoundStatement		71:19:2862:2862	8102387	0					
ANR	8102715	IfStatement	if ( use_rmargin && ( cpt . x == rmargin ) )		8102387	0					
ANR	8102716	Condition	use_rmargin && ( cpt . x == rmargin )	870:20:30935:30967	8102387	0	True				
ANR	8102717	AndExpression	use_rmargin && ( cpt . x == rmargin )		8102387	0		&&			
ANR	8102718	Identifier	use_rmargin		8102387	0					
ANR	8102719	EqualityExpression	cpt . x == rmargin		8102387	1		==			
ANR	8102720	MemberAccess	cpt . x		8102387	0					
ANR	8102721	Identifier	cpt		8102387	0					
ANR	8102722	Identifier	x		8102387	1					
ANR	8102723	Identifier	rmargin		8102387	1					
ANR	8102724	BreakStatement	break ;	871:20:30990:30995	8102387	1	True				
ANR	8102725	ElseStatement	else		8102387	0					
ANR	8102726	IfStatement	if ( cpt . x >= page_size )		8102387	0					
ANR	8102727	Condition	cpt . x >= page_size	872:25:31022:31039	8102387	0	True				
ANR	8102728	RelationalExpression	cpt . x >= page_size		8102387	0		>=			
ANR	8102729	MemberAccess	cpt . x		8102387	0					
ANR	8102730	Identifier	cpt		8102387	0					
ANR	8102731	Identifier	x		8102387	1					
ANR	8102732	Identifier	page_size		8102387	1					
ANR	8102733	CompoundStatement		74:45:2991:2991	8102387	1					
ANR	8102734	ExpressionStatement	cpt . x = page_size	873:20:31064:31081	8102387	0	True				
ANR	8102735	AssignmentExpression	cpt . x = page_size		8102387	0		=			
ANR	8102736	MemberAccess	cpt . x		8102387	0					
ANR	8102737	Identifier	cpt		8102387	0					
ANR	8102738	Identifier	x		8102387	1					
ANR	8102739	Identifier	page_size		8102387	1					
ANR	8102740	BreakStatement	break ;	874:20:31103:31108	8102387	1	True				
ANR	8102741	ExpressionStatement	tmp_x = cpt . x	885:8:31431:31444	8102387	4	True				
ANR	8102742	AssignmentExpression	tmp_x = cpt . x		8102387	0		=			
ANR	8102743	Identifier	tmp_x		8102387	0					
ANR	8102744	MemberAccess	cpt . x		8102387	1					
ANR	8102745	Identifier	cpt		8102387	0					
ANR	8102746	Identifier	x		8102387	1					
ANR	8102747	IfStatement	if ( pcs -> last_was_BS )		8102387	5					
ANR	8102748	Condition	pcs -> last_was_BS	886:12:31458:31473	8102387	0	True				
ANR	8102749	PtrMemberAccess	pcs -> last_was_BS		8102387	0					
ANR	8102750	Identifier	pcs		8102387	0					
ANR	8102751	Identifier	last_was_BS		8102387	1					
ANR	8102752	CompoundStatement		88:30:3425:3425	8102387	1					
ANR	8102753	IfStatement	if ( pcs -> last_width > pcs -> xfm_state . pd_size . x )		8102387	0					
ANR	8102754	Condition	pcs -> last_width > pcs -> xfm_state . pd_size . x	894:16:31961:32002	8102387	0	True				
ANR	8102755	RelationalExpression	pcs -> last_width > pcs -> xfm_state . pd_size . x		8102387	0		>			
ANR	8102756	PtrMemberAccess	pcs -> last_width		8102387	0					
ANR	8102757	Identifier	pcs		8102387	0					
ANR	8102758	Identifier	last_width		8102387	1					
ANR	8102759	MemberAccess	pcs -> xfm_state . pd_size . x		8102387	1					
ANR	8102760	MemberAccess	pcs -> xfm_state . pd_size		8102387	0					
ANR	8102761	PtrMemberAccess	pcs -> xfm_state		8102387	0					
ANR	8102762	Identifier	pcs		8102387	0					
ANR	8102763	Identifier	xfm_state		8102387	1					
ANR	8102764	Identifier	pd_size		8102387	1					
ANR	8102765	Identifier	x		8102387	1					
ANR	8102766	ExpressionStatement	tmp_x = 0	895:16:32021:32030	8102387	1	True				
ANR	8102767	AssignmentExpression	tmp_x = 0		8102387	0		=			
ANR	8102768	Identifier	tmp_x		8102387	0					
ANR	8102769	PrimaryExpression	0		8102387	1					
ANR	8102770	ElseStatement	else		8102387	0					
ANR	8102771	ExpressionStatement	tmp_x += ( pcs -> last_width - width ) / 2	897:16:32065:32103	8102387	0	True				
ANR	8102772	AssignmentExpression	tmp_x += ( pcs -> last_width - width ) / 2		8102387	0		+=			
ANR	8102773	Identifier	tmp_x		8102387	0					
ANR	8102774	MultiplicativeExpression	( pcs -> last_width - width ) / 2		8102387	1		/			
ANR	8102775	AdditiveExpression	pcs -> last_width - width		8102387	0		-			
ANR	8102776	PtrMemberAccess	pcs -> last_width		8102387	0					
ANR	8102777	Identifier	pcs		8102387	0					
ANR	8102778	Identifier	last_width		8102387	1					
ANR	8102779	Identifier	width		8102387	1					
ANR	8102780	PrimaryExpression	2		8102387	1					
ANR	8102781	ExpressionStatement	"code = gs_moveto ( pgs , tmp_x / pscale -> x , cpt . y / pscale -> y )"	899:8:32123:32182	8102387	6	True				
ANR	8102782	AssignmentExpression	"code = gs_moveto ( pgs , tmp_x / pscale -> x , cpt . y / pscale -> y )"		8102387	0		=			
ANR	8102783	Identifier	code		8102387	0					
ANR	8102784	CallExpression	"gs_moveto ( pgs , tmp_x / pscale -> x , cpt . y / pscale -> y )"		8102387	1					
ANR	8102785	Callee	gs_moveto		8102387	0					
ANR	8102786	Identifier	gs_moveto		8102387	0					
ANR	8102787	ArgumentList	pgs		8102387	1					
ANR	8102788	Argument	pgs		8102387	0					
ANR	8102789	Identifier	pgs		8102387	0					
ANR	8102790	Argument	tmp_x / pscale -> x		8102387	1					
ANR	8102791	MultiplicativeExpression	tmp_x / pscale -> x		8102387	0		/			
ANR	8102792	Identifier	tmp_x		8102387	0					
ANR	8102793	PtrMemberAccess	pscale -> x		8102387	1					
ANR	8102794	Identifier	pscale		8102387	0					
ANR	8102795	Identifier	x		8102387	1					
ANR	8102796	Argument	cpt . y / pscale -> y		8102387	2					
ANR	8102797	MultiplicativeExpression	cpt . y / pscale -> y		8102387	0		/			
ANR	8102798	MemberAccess	cpt . y		8102387	0					
ANR	8102799	Identifier	cpt		8102387	0					
ANR	8102800	Identifier	y		8102387	1					
ANR	8102801	PtrMemberAccess	pscale -> y		8102387	1					
ANR	8102802	Identifier	pscale		8102387	0					
ANR	8102803	Identifier	y		8102387	1					
ANR	8102804	IfStatement	if ( code < 0 )		8102387	7					
ANR	8102805	Condition	code < 0	900:12:32196:32203	8102387	0	True				
ANR	8102806	RelationalExpression	code < 0		8102387	0		<			
ANR	8102807	Identifier	code		8102387	0					
ANR	8102808	PrimaryExpression	0		8102387	1					
ANR	8102809	ReturnStatement	return code ;	901:12:32218:32229	8102387	1	True				
ANR	8102810	Identifier	code		8102387	0					
ANR	8102811	IfStatement	if ( chr != 0xffff || print_undefined )		8102387	8					
ANR	8102812	Condition	chr != 0xffff || print_undefined	903:12:32244:32275	8102387	0	True				
ANR	8102813	OrExpression	chr != 0xffff || print_undefined		8102387	0		||			
ANR	8102814	EqualityExpression	chr != 0xffff		8102387	0		!=			
ANR	8102815	Identifier	chr		8102387	0					
ANR	8102816	PrimaryExpression	0xffff		8102387	1					
ANR	8102817	Identifier	print_undefined		8102387	1					
ANR	8102818	CompoundStatement		108:12:4378:4395	8102387	1					
ANR	8102819	IdentifierDeclStatement	gs_fixed_point pt ;	906:12:32429:32446	8102387	0	True				
ANR	8102820	IdentifierDecl	pt		8102387	0					
ANR	8102821	IdentifierDeclType	gs_fixed_point		8102387	0					
ANR	8102822	Identifier	pt		8102387	1					
ANR	8102823	ExpressionStatement	"code = gx_path_current_point ( gx_current_path ( pcs -> pgs ) , & pt )"	907:12:32460:32520	8102387	1	True				
ANR	8102824	AssignmentExpression	"code = gx_path_current_point ( gx_current_path ( pcs -> pgs ) , & pt )"		8102387	0		=			
ANR	8102825	Identifier	code		8102387	0					
ANR	8102826	CallExpression	"gx_path_current_point ( gx_current_path ( pcs -> pgs ) , & pt )"		8102387	1					
ANR	8102827	Callee	gx_path_current_point		8102387	0					
ANR	8102828	Identifier	gx_path_current_point		8102387	0					
ANR	8102829	ArgumentList	gx_current_path ( pcs -> pgs )		8102387	1					
ANR	8102830	Argument	gx_current_path ( pcs -> pgs )		8102387	0					
ANR	8102831	CallExpression	gx_current_path ( pcs -> pgs )		8102387	0					
ANR	8102832	Callee	gx_current_path		8102387	0					
ANR	8102833	Identifier	gx_current_path		8102387	0					
ANR	8102834	ArgumentList	pcs -> pgs		8102387	1					
ANR	8102835	Argument	pcs -> pgs		8102387	0					
ANR	8102836	PtrMemberAccess	pcs -> pgs		8102387	0					
ANR	8102837	Identifier	pcs		8102387	0					
ANR	8102838	Identifier	pgs		8102387	1					
ANR	8102839	Argument	& pt		8102387	1					
ANR	8102840	UnaryOperationExpression	& pt		8102387	0					
ANR	8102841	UnaryOperator	&		8102387	0					
ANR	8102842	Identifier	pt		8102387	1					
ANR	8102843	IfStatement	if ( source_opaque )		8102387	2					
ANR	8102844	Condition	source_opaque	908:16:32538:32550	8102387	0	True				
ANR	8102845	Identifier	source_opaque		8102387	0					
ANR	8102846	ExpressionStatement	"code = show_char_background ( pcs , buff )"	909:16:32569:32607	8102387	1	True				
ANR	8102847	AssignmentExpression	"code = show_char_background ( pcs , buff )"		8102387	0		=			
ANR	8102848	Identifier	code		8102387	0					
ANR	8102849	CallExpression	"show_char_background ( pcs , buff )"		8102387	1					
ANR	8102850	Callee	show_char_background		8102387	0					
ANR	8102851	Identifier	show_char_background		8102387	0					
ANR	8102852	ArgumentList	pcs		8102387	1					
ANR	8102853	Argument	pcs		8102387	0					
ANR	8102854	Identifier	pcs		8102387	0					
ANR	8102855	Argument	buff		8102387	1					
ANR	8102856	Identifier	buff		8102387	0					
ANR	8102857	IfStatement	if ( code < 0 )		8102387	3					
ANR	8102858	Condition	code < 0	910:16:32625:32632	8102387	0	True				
ANR	8102859	RelationalExpression	code < 0		8102387	0		<			
ANR	8102860	Identifier	code		8102387	0					
ANR	8102861	PrimaryExpression	0		8102387	1					
ANR	8102862	BreakStatement	break ;	911:16:32651:32656	8102387	1	True				
ANR	8102863	IfStatement	if ( invisible_pattern )		8102387	4					
ANR	8102864	Condition	invisible_pattern	913:16:32675:32691	8102387	0	True				
ANR	8102865	Identifier	invisible_pattern		8102387	0					
ANR	8102866	ExpressionStatement	"code = show_char_invisible_foreground ( pcs , buff )"	914:16:32710:32758	8102387	1	True				
ANR	8102867	AssignmentExpression	"code = show_char_invisible_foreground ( pcs , buff )"		8102387	0		=			
ANR	8102868	Identifier	code		8102387	0					
ANR	8102869	CallExpression	"show_char_invisible_foreground ( pcs , buff )"		8102387	1					
ANR	8102870	Callee	show_char_invisible_foreground		8102387	0					
ANR	8102871	Identifier	show_char_invisible_foreground		8102387	0					
ANR	8102872	ArgumentList	pcs		8102387	1					
ANR	8102873	Argument	pcs		8102387	0					
ANR	8102874	Identifier	pcs		8102387	0					
ANR	8102875	Argument	buff		8102387	1					
ANR	8102876	Identifier	buff		8102387	0					
ANR	8102877	ElseStatement	else		8102387	0					
ANR	8102878	ExpressionStatement	"code = show_char_foreground ( pcs , buff )"	916:16:32793:32831	8102387	0	True				
ANR	8102879	AssignmentExpression	"code = show_char_foreground ( pcs , buff )"		8102387	0		=			
ANR	8102880	Identifier	code		8102387	0					
ANR	8102881	CallExpression	"show_char_foreground ( pcs , buff )"		8102387	1					
ANR	8102882	Callee	show_char_foreground		8102387	0					
ANR	8102883	Identifier	show_char_foreground		8102387	0					
ANR	8102884	ArgumentList	pcs		8102387	1					
ANR	8102885	Argument	pcs		8102387	0					
ANR	8102886	Identifier	pcs		8102387	0					
ANR	8102887	Argument	buff		8102387	1					
ANR	8102888	Identifier	buff		8102387	0					
ANR	8102889	IfStatement	if ( code < 0 )		8102387	5					
ANR	8102890	Condition	code < 0	918:16:32850:32857	8102387	0	True				
ANR	8102891	RelationalExpression	code < 0		8102387	0		<			
ANR	8102892	Identifier	code		8102387	0					
ANR	8102893	PrimaryExpression	0		8102387	1					
ANR	8102894	BreakStatement	break ;	919:16:32876:32881	8102387	1	True				
ANR	8102895	IfStatement	"if ( ( code = pcl_mark_page_for_character ( pcs , & pt ) ) < 0 )"		8102387	6					
ANR	8102896	Condition	"( code = pcl_mark_page_for_character ( pcs , & pt ) ) < 0"	921:16:32900:32949	8102387	0	True				
ANR	8102897	RelationalExpression	"( code = pcl_mark_page_for_character ( pcs , & pt ) ) < 0"		8102387	0		<			
ANR	8102898	AssignmentExpression	"code = pcl_mark_page_for_character ( pcs , & pt )"		8102387	0		=			
ANR	8102899	Identifier	code		8102387	0					
ANR	8102900	CallExpression	"pcl_mark_page_for_character ( pcs , & pt )"		8102387	1					
ANR	8102901	Callee	pcl_mark_page_for_character		8102387	0					
ANR	8102902	Identifier	pcl_mark_page_for_character		8102387	0					
ANR	8102903	ArgumentList	pcs		8102387	1					
ANR	8102904	Argument	pcs		8102387	0					
ANR	8102905	Identifier	pcs		8102387	0					
ANR	8102906	Argument	& pt		8102387	1					
ANR	8102907	UnaryOperationExpression	& pt		8102387	0					
ANR	8102908	UnaryOperator	&		8102387	0					
ANR	8102909	Identifier	pt		8102387	1					
ANR	8102910	PrimaryExpression	0		8102387	1					
ANR	8102911	ReturnStatement	return code ;	922:16:32968:32979	8102387	1	True				
ANR	8102912	Identifier	code		8102387	0					
ANR	8102913	IfStatement	if ( pcs -> last_was_BS )		8102387	9					
ANR	8102914	Condition	pcs -> last_was_BS	929:12:33164:33179	8102387	0	True				
ANR	8102915	PtrMemberAccess	pcs -> last_was_BS		8102387	0					
ANR	8102916	Identifier	pcs		8102387	0					
ANR	8102917	Identifier	last_was_BS		8102387	1					
ANR	8102918	CompoundStatement		131:30:5131:5131	8102387	1					
ANR	8102919	ExpressionStatement	cpt . x += pcs -> last_width	930:12:33196:33220	8102387	0	True				
ANR	8102920	AssignmentExpression	cpt . x += pcs -> last_width		8102387	0		+=			
ANR	8102921	MemberAccess	cpt . x		8102387	0					
ANR	8102922	Identifier	cpt		8102387	0					
ANR	8102923	Identifier	x		8102387	1					
ANR	8102924	PtrMemberAccess	pcs -> last_width		8102387	1					
ANR	8102925	Identifier	pcs		8102387	0					
ANR	8102926	Identifier	last_width		8102387	1					
ANR	8102927	ExpressionStatement	pcs -> last_was_BS = false	931:12:33234:33258	8102387	1	True				
ANR	8102928	AssignmentExpression	pcs -> last_was_BS = false		8102387	0		=			
ANR	8102929	PtrMemberAccess	pcs -> last_was_BS		8102387	0					
ANR	8102930	Identifier	pcs		8102387	0					
ANR	8102931	Identifier	last_was_BS		8102387	1					
ANR	8102932	Identifier	false		8102387	1					
ANR	8102933	ElseStatement	else		8102387	0					
ANR	8102934	ExpressionStatement	cpt . x += width	933:12:33287:33301	8102387	0	True				
ANR	8102935	AssignmentExpression	cpt . x += width		8102387	0		+=			
ANR	8102936	MemberAccess	cpt . x		8102387	0					
ANR	8102937	Identifier	cpt		8102387	0					
ANR	8102938	Identifier	x		8102387	1					
ANR	8102939	Identifier	width		8102387	1					
ANR	8102940	IfStatement	if ( ! wrap )		8102387	10					
ANR	8102941	Condition	! wrap	936:12:33380:33384	8102387	0	True				
ANR	8102942	UnaryOperationExpression	! wrap		8102387	0					
ANR	8102943	UnaryOperator	!		8102387	0					
ANR	8102944	Identifier	wrap		8102387	1					
ANR	8102945	CompoundStatement		138:19:5336:5336	8102387	1					
ANR	8102946	IfStatement	if ( use_rmargin && ( cpt . x > rmargin ) )		8102387	0					
ANR	8102947	Condition	use_rmargin && ( cpt . x > rmargin )	937:16:33405:33436	8102387	0	True				
ANR	8102948	AndExpression	use_rmargin && ( cpt . x > rmargin )		8102387	0		&&			
ANR	8102949	Identifier	use_rmargin		8102387	0					
ANR	8102950	RelationalExpression	cpt . x > rmargin		8102387	1		>			
ANR	8102951	MemberAccess	cpt . x		8102387	0					
ANR	8102952	Identifier	cpt		8102387	0					
ANR	8102953	Identifier	x		8102387	1					
ANR	8102954	Identifier	rmargin		8102387	1					
ANR	8102955	CompoundStatement		139:50:5388:5388	8102387	1					
ANR	8102956	ExpressionStatement	cpt . x = rmargin	938:16:33457:33472	8102387	0	True				
ANR	8102957	AssignmentExpression	cpt . x = rmargin		8102387	0		=			
ANR	8102958	MemberAccess	cpt . x		8102387	0					
ANR	8102959	Identifier	cpt		8102387	0					
ANR	8102960	Identifier	x		8102387	1					
ANR	8102961	Identifier	rmargin		8102387	1					
ANR	8102962	BreakStatement	break ;	939:16:33490:33495	8102387	1	True				
ANR	8102963	ElseStatement	else		8102387	0					
ANR	8102964	IfStatement	if ( cpt . x >= page_size )		8102387	0					
ANR	8102965	Condition	cpt . x >= page_size	940:23:33520:33537	8102387	0	True				
ANR	8102966	RelationalExpression	cpt . x >= page_size		8102387	0		>=			
ANR	8102967	MemberAccess	cpt . x		8102387	0					
ANR	8102968	Identifier	cpt		8102387	0					
ANR	8102969	Identifier	x		8102387	1					
ANR	8102970	Identifier	page_size		8102387	1					
ANR	8102971	CompoundStatement		142:43:5489:5489	8102387	1					
ANR	8102972	ExpressionStatement	cpt . x = page_size	941:16:33558:33575	8102387	0	True				
ANR	8102973	AssignmentExpression	cpt . x = page_size		8102387	0		=			
ANR	8102974	MemberAccess	cpt . x		8102387	0					
ANR	8102975	Identifier	cpt		8102387	0					
ANR	8102976	Identifier	x		8102387	1					
ANR	8102977	Identifier	page_size		8102387	1					
ANR	8102978	BreakStatement	break ;	942:16:33593:33598	8102387	1	True				
ANR	8102979	IfStatement	if ( unstyled_substitution )		8102387	11					
ANR	8102980	Condition	unstyled_substitution	945:12:33636:33656	8102387	0	True				
ANR	8102981	Identifier	unstyled_substitution		8102387	0					
ANR	8102982	CompoundStatement		147:35:5608:5608	8102387	1					
ANR	8102983	ExpressionStatement	"pcl_decache_font ( pcs , - 1 , true )"	946:12:33673:33704	8102387	0	True				
ANR	8102984	CallExpression	"pcl_decache_font ( pcs , - 1 , true )"		8102387	0					
ANR	8102985	Callee	pcl_decache_font		8102387	0					
ANR	8102986	Identifier	pcl_decache_font		8102387	0					
ANR	8102987	ArgumentList	pcs		8102387	1					
ANR	8102988	Argument	pcs		8102387	0					
ANR	8102989	Identifier	pcs		8102387	0					
ANR	8102990	Argument	- 1		8102387	1					
ANR	8102991	UnaryOperationExpression	- 1		8102387	0					
ANR	8102992	UnaryOperator	-		8102387	0					
ANR	8102993	PrimaryExpression	1		8102387	1					
ANR	8102994	Argument	true		8102387	2					
ANR	8102995	Identifier	true		8102387	0					
ANR	8102996	ExpressionStatement	"code = pcl_recompute_font ( pcs , false )"	947:12:33718:33755	8102387	1	True				
ANR	8102997	AssignmentExpression	"code = pcl_recompute_font ( pcs , false )"		8102387	0		=			
ANR	8102998	Identifier	code		8102387	0					
ANR	8102999	CallExpression	"pcl_recompute_font ( pcs , false )"		8102387	1					
ANR	8103000	Callee	pcl_recompute_font		8102387	0					
ANR	8103001	Identifier	pcl_recompute_font		8102387	0					
ANR	8103002	ArgumentList	pcs		8102387	1					
ANR	8103003	Argument	pcs		8102387	0					
ANR	8103004	Identifier	pcs		8102387	0					
ANR	8103005	Argument	false		8102387	1					
ANR	8103006	Identifier	false		8102387	0					
ANR	8103007	IfStatement	if ( code < 0 )		8102387	2					
ANR	8103008	Condition	code < 0	948:16:33773:33780	8102387	0	True				
ANR	8103009	RelationalExpression	code < 0		8102387	0		<			
ANR	8103010	Identifier	code		8102387	0					
ANR	8103011	PrimaryExpression	0		8102387	1					
ANR	8103012	ReturnStatement	return code ;	949:16:33799:33810	8102387	1	True				
ANR	8103013	Identifier	code		8102387	0					
ANR	8103014	ExpressionStatement	set_gs_font ( pcs )	950:12:33824:33840	8102387	3	True				
ANR	8103015	CallExpression	set_gs_font ( pcs )		8102387	0					
ANR	8103016	Callee	set_gs_font		8102387	0					
ANR	8103017	Identifier	set_gs_font		8102387	0					
ANR	8103018	ArgumentList	pcs		8102387	1					
ANR	8103019	Argument	pcs		8102387	0					
ANR	8103020	Identifier	pcs		8102387	0					
ANR	8103021	ExpressionStatement	pcs -> last_width = width	955:4:33895:33918	8102387	20	True				
ANR	8103022	AssignmentExpression	pcs -> last_width = width		8102387	0		=			
ANR	8103023	PtrMemberAccess	pcs -> last_width		8102387	0					
ANR	8103024	Identifier	pcs		8102387	0					
ANR	8103025	Identifier	last_width		8102387	1					
ANR	8103026	Identifier	width		8102387	1					
ANR	8103027	ExpressionStatement	pcs -> cap . x = ( coord ) cpt . x	958:4:33963:33989	8102387	21	True				
ANR	8103028	AssignmentExpression	pcs -> cap . x = ( coord ) cpt . x		8102387	0		=			
ANR	8103029	MemberAccess	pcs -> cap . x		8102387	0					
ANR	8103030	PtrMemberAccess	pcs -> cap		8102387	0					
ANR	8103031	Identifier	pcs		8102387	0					
ANR	8103032	Identifier	cap		8102387	1					
ANR	8103033	Identifier	x		8102387	1					
ANR	8103034	CastExpression	( coord ) cpt . x		8102387	1					
ANR	8103035	CastTarget	coord		8102387	0					
ANR	8103036	MemberAccess	cpt . x		8102387	1					
ANR	8103037	Identifier	cpt		8102387	0					
ANR	8103038	Identifier	x		8102387	1					
ANR	8103039	ExpressionStatement	pcs -> cap . y = ( coord ) cpt . y	959:4:33995:34021	8102387	22	True				
ANR	8103040	AssignmentExpression	pcs -> cap . y = ( coord ) cpt . y		8102387	0		=			
ANR	8103041	MemberAccess	pcs -> cap . y		8102387	0					
ANR	8103042	PtrMemberAccess	pcs -> cap		8102387	0					
ANR	8103043	Identifier	pcs		8102387	0					
ANR	8103044	Identifier	cap		8102387	1					
ANR	8103045	Identifier	y		8102387	1					
ANR	8103046	CastExpression	( coord ) cpt . y		8102387	1					
ANR	8103047	CastTarget	coord		8102387	0					
ANR	8103048	MemberAccess	cpt . y		8102387	1					
ANR	8103049	Identifier	cpt		8102387	0					
ANR	8103050	Identifier	y		8102387	1					
ANR	8103051	ReturnStatement	return code ;	961:4:34028:34039	8102387	23	True				
ANR	8103052	Identifier	code		8102387	0					
ANR	8103053	ReturnType	static int		8102387	1					
ANR	8103054	Identifier	pcl_show_chars_slow		8102387	2					
ANR	8103055	ParameterList	"pcl_state_t * pcs , const gs_point * pscale , const byte * str , uint size , bool literal"		8102387	3					
ANR	8103056	Parameter	pcl_state_t * pcs	796:20:27923:27939	8102387	0	True				
ANR	8103057	ParameterType	pcl_state_t *		8102387	0					
ANR	8103058	Identifier	pcs		8102387	1					
ANR	8103059	Parameter	const gs_point * pscale	797:20:27962:27984	8102387	1	True				
ANR	8103060	ParameterType	const gs_point *		8102387	0					
ANR	8103061	Identifier	pscale		8102387	1					
ANR	8103062	Parameter	const byte * str	798:20:28007:28022	8102387	2	True				
ANR	8103063	ParameterType	const byte *		8102387	0					
ANR	8103064	Identifier	str		8102387	1					
ANR	8103065	Parameter	uint size	798:38:28025:28033	8102387	3	True				
ANR	8103066	ParameterType	uint		8102387	0					
ANR	8103067	Identifier	size		8102387	1					
ANR	8103068	Parameter	bool literal	798:49:28036:28047	8102387	4	True				
ANR	8103069	ParameterType	bool		8102387	0					
ANR	8103070	Identifier	literal		8102387	1					
ANR	8103071	CFGEntryNode	ENTRY		8102387		True				
ANR	8103072	CFGExitNode	EXIT		8102387		True				
ANR	8103073	Symbol	is_invisible_pattern		8102387						
ANR	8103074	Symbol	orig_chr		8102387						
ANR	8103075	Symbol	pt		8102387						
ANR	8103076	Symbol	pcs -> last_was_BS		8102387						
ANR	8103077	Symbol	advance_vector		8102387						
ANR	8103078	Symbol	pcs -> cap . x		8102387						
ANR	8103079	Symbol	& is_space		8102387						
ANR	8103080	Symbol	* pcs		8102387						
ANR	8103081	Symbol	pcs -> last_width		8102387						
ANR	8103082	Symbol	pcs -> cap . y		8102387						
ANR	8103083	Symbol	& print_undefined		8102387						
ANR	8103084	Symbol	& str		8102387						
ANR	8103085	Symbol	pcs -> xfm_state . pd_size . x		8102387						
ANR	8103086	Symbol	cpt . x		8102387						
ANR	8103087	Symbol	& chr		8102387						
ANR	8103088	Symbol	* buff		8102387						
ANR	8103089	Symbol	show_char_foreground		8102387						
ANR	8103090	Symbol	pcs -> source_transparent		8102387						
ANR	8103091	Symbol	cpt . y		8102387						
ANR	8103092	Symbol	show_char_background		8102387						
ANR	8103093	Symbol	page_size		8102387						
ANR	8103094	Symbol	cpt		8102387						
ANR	8103095	Symbol	chr		8102387						
ANR	8103096	Symbol	& pt		8102387						
ANR	8103097	Symbol	str		8102387						
ANR	8103098	Symbol	pcl_recompute_font		8102387						
ANR	8103099	Symbol	rmargin		8102387						
ANR	8103100	Symbol	size		8102387						
ANR	8103101	Symbol	true		8102387						
ANR	8103102	Symbol	& unstyled_substitution		8102387						
ANR	8103103	Symbol	pcs -> xfm_state . pd_size		8102387						
ANR	8103104	Symbol	code		8102387						
ANR	8103105	Symbol	pcl_mark_page_for_character		8102387						
ANR	8103106	Symbol	pcs -> margins . right		8102387						
ANR	8103107	Symbol	tmp_x		8102387						
ANR	8103108	Symbol	show_char_invisible_foreground		8102387						
ANR	8103109	Symbol	* pscale		8102387						
ANR	8103110	Symbol	unstyled_substitution		8102387						
ANR	8103111	Symbol	& orig_chr		8102387						
ANR	8103112	Symbol	get_next_char		8102387						
ANR	8103113	Symbol	gs_moveto		8102387						
ANR	8103114	Symbol	use_rmargin		8102387						
ANR	8103115	Symbol	literal		8102387						
ANR	8103116	Symbol	pcs -> end_of_line_wrap		8102387						
ANR	8103117	Symbol	gx_current_path		8102387						
ANR	8103118	Symbol	pcs -> xfm_state		8102387						
ANR	8103119	Symbol	source_opaque		8102387						
ANR	8103120	Symbol	is_space		8102387						
ANR	8103121	Symbol	pgs		8102387						
ANR	8103122	Symbol	pcs		8102387						
ANR	8103123	Symbol	invisible_pattern		8102387						
ANR	8103124	Symbol	& advance_vector		8102387						
ANR	8103125	Symbol	pcs -> pgs		8102387						
ANR	8103126	Symbol	false		8102387						
ANR	8103127	Symbol	print_undefined		8102387						
ANR	8103128	Symbol	pscale -> x		8102387						
ANR	8103129	Symbol	pcs -> cap		8102387						
ANR	8103130	Symbol	pcs -> margins		8102387						
ANR	8103131	Symbol	& size		8102387						
ANR	8103132	Symbol	gx_path_current_point		8102387						
ANR	8103133	Symbol	pscale -> y		8102387						
ANR	8103134	Symbol	width		8102387						
ANR	8103135	Symbol	pcl_get_width		8102387						
ANR	8103136	Symbol	pscale		8102387						
ANR	8103137	Symbol	buff		8102387						
ANR	8103138	Symbol	wrap		8102387						
ANR	8103139	Function	pcl_font_scale	964:0:34044:35774							
ANR	8103140	FunctionDef	"pcl_font_scale (pcl_state_t * pcs , gs_point * pscale)"		8103139	0					
ANR	8103141	CompoundStatement		966:0:34102:35774	8103139	0					
ANR	8103142	IfStatement	if ( pcs -> font -> scaling_technology == plfst_bitmap )		8103139	0					
ANR	8103143	Condition	pcs -> font -> scaling_technology == plfst_bitmap	968:8:34153:34197	8103139	0	True				
ANR	8103144	EqualityExpression	pcs -> font -> scaling_technology == plfst_bitmap		8103139	0		==			
ANR	8103145	PtrMemberAccess	pcs -> font -> scaling_technology		8103139	0					
ANR	8103146	PtrMemberAccess	pcs -> font		8103139	0					
ANR	8103147	Identifier	pcs		8103139	0					
ANR	8103148	Identifier	font		8103139	1					
ANR	8103149	Identifier	scaling_technology		8103139	1					
ANR	8103150	Identifier	plfst_bitmap		8103139	1					
ANR	8103151	CompoundStatement		3:55:97:97	8103139	1					
ANR	8103152	ExpressionStatement	pscale -> x = pcl_coord_scale / pcs -> font -> resolution . x	969:8:34210:34263	8103139	0	True				
ANR	8103153	AssignmentExpression	pscale -> x = pcl_coord_scale / pcs -> font -> resolution . x		8103139	0		=			
ANR	8103154	PtrMemberAccess	pscale -> x		8103139	0					
ANR	8103155	Identifier	pscale		8103139	0					
ANR	8103156	Identifier	x		8103139	1					
ANR	8103157	MultiplicativeExpression	pcl_coord_scale / pcs -> font -> resolution . x		8103139	1		/			
ANR	8103158	Identifier	pcl_coord_scale		8103139	0					
ANR	8103159	MemberAccess	pcs -> font -> resolution . x		8103139	1					
ANR	8103160	PtrMemberAccess	pcs -> font -> resolution		8103139	0					
ANR	8103161	PtrMemberAccess	pcs -> font		8103139	0					
ANR	8103162	Identifier	pcs		8103139	0					
ANR	8103163	Identifier	font		8103139	1					
ANR	8103164	Identifier	resolution		8103139	1					
ANR	8103165	Identifier	x		8103139	1					
ANR	8103166	ExpressionStatement	pscale -> y = pcl_coord_scale / pcs -> font -> resolution . y	970:8:34273:34326	8103139	1	True				
ANR	8103167	AssignmentExpression	pscale -> y = pcl_coord_scale / pcs -> font -> resolution . y		8103139	0		=			
ANR	8103168	PtrMemberAccess	pscale -> y		8103139	0					
ANR	8103169	Identifier	pscale		8103139	0					
ANR	8103170	Identifier	y		8103139	1					
ANR	8103171	MultiplicativeExpression	pcl_coord_scale / pcs -> font -> resolution . y		8103139	1		/			
ANR	8103172	Identifier	pcl_coord_scale		8103139	0					
ANR	8103173	MemberAccess	pcs -> font -> resolution . y		8103139	1					
ANR	8103174	PtrMemberAccess	pcs -> font -> resolution		8103139	0					
ANR	8103175	PtrMemberAccess	pcs -> font		8103139	0					
ANR	8103176	Identifier	pcs		8103139	0					
ANR	8103177	Identifier	font		8103139	1					
ANR	8103178	Identifier	resolution		8103139	1					
ANR	8103179	Identifier	y		8103139	1					
ANR	8103180	ElseStatement	else		8103139	0					
ANR	8103181	CompoundStatement		16:8:661:767	8103139	0					
ANR	8103182	IdentifierDeclStatement	pcl_font_selection_t * pfp = & pcs -> font_selection [ pcs -> font_selected ] ;	978:8:34616:34684	8103139	0	True				
ANR	8103183	IdentifierDecl	* pfp = & pcs -> font_selection [ pcs -> font_selected ]		8103139	0					
ANR	8103184	IdentifierDeclType	pcl_font_selection_t *		8103139	0					
ANR	8103185	Identifier	pfp		8103139	1					
ANR	8103186	AssignmentExpression	* pfp = & pcs -> font_selection [ pcs -> font_selected ]		8103139	2		=			
ANR	8103187	Identifier	pfp		8103139	0					
ANR	8103188	UnaryOperationExpression	& pcs -> font_selection [ pcs -> font_selected ]		8103139	1					
ANR	8103189	UnaryOperator	&		8103139	0					
ANR	8103190	ArrayIndexing	pcs -> font_selection [ pcs -> font_selected ]		8103139	1					
ANR	8103191	PtrMemberAccess	pcs -> font_selection		8103139	0					
ANR	8103192	Identifier	pcs		8103139	0					
ANR	8103193	Identifier	font_selection		8103139	1					
ANR	8103194	PtrMemberAccess	pcs -> font_selected		8103139	1					
ANR	8103195	Identifier	pcs		8103139	0					
ANR	8103196	Identifier	font_selected		8103139	1					
ANR	8103197	IdentifierDeclStatement	double ppi = ( pfp -> font -> scaling_technology == plfst_Intellifont ) ? 72.307 : 72.0 ;	981:8:34764:34870	8103139	1	True				
ANR	8103198	IdentifierDecl	ppi = ( pfp -> font -> scaling_technology == plfst_Intellifont ) ? 72.307 : 72.0		8103139	0					
ANR	8103199	IdentifierDeclType	double		8103139	0					
ANR	8103200	Identifier	ppi		8103139	1					
ANR	8103201	AssignmentExpression	ppi = ( pfp -> font -> scaling_technology == plfst_Intellifont ) ? 72.307 : 72.0		8103139	2		=			
ANR	8103202	Identifier	ppi		8103139	0					
ANR	8103203	ConditionalExpression	( pfp -> font -> scaling_technology == plfst_Intellifont ) ? 72.307 : 72.0		8103139	1					
ANR	8103204	Condition	pfp -> font -> scaling_technology == plfst_Intellifont		8103139	0					
ANR	8103205	EqualityExpression	pfp -> font -> scaling_technology == plfst_Intellifont		8103139	0		==			
ANR	8103206	PtrMemberAccess	pfp -> font -> scaling_technology		8103139	0					
ANR	8103207	PtrMemberAccess	pfp -> font		8103139	0					
ANR	8103208	Identifier	pfp		8103139	0					
ANR	8103209	Identifier	font		8103139	1					
ANR	8103210	Identifier	scaling_technology		8103139	1					
ANR	8103211	Identifier	plfst_Intellifont		8103139	1					
ANR	8103212	PrimaryExpression	72.307		8103139	1					
ANR	8103213	PrimaryExpression	72.0		8103139	2					
ANR	8103214	IfStatement	if ( pfp -> font -> params . proportional_spacing )		8103139	2					
ANR	8103215	Condition	pfp -> font -> params . proportional_spacing	984:12:34884:34921	8103139	0	True				
ANR	8103216	MemberAccess	pfp -> font -> params . proportional_spacing		8103139	0					
ANR	8103217	PtrMemberAccess	pfp -> font -> params		8103139	0					
ANR	8103218	PtrMemberAccess	pfp -> font		8103139	0					
ANR	8103219	Identifier	pfp		8103139	0					
ANR	8103220	Identifier	font		8103139	1					
ANR	8103221	Identifier	params		8103139	1					
ANR	8103222	Identifier	proportional_spacing		8103139	1					
ANR	8103223	CompoundStatement		19:52:821:821	8103139	1					
ANR	8103224	ExpressionStatement	pscale -> x = pscale -> y = pfp -> params . height_4ths * 0.25 * 7200.0 / ppi	985:12:34938:35023	8103139	0	True				
ANR	8103225	AssignmentExpression	pscale -> x = pscale -> y = pfp -> params . height_4ths * 0.25 * 7200.0 / ppi		8103139	0		=			
ANR	8103226	PtrMemberAccess	pscale -> x		8103139	0					
ANR	8103227	Identifier	pscale		8103139	0					
ANR	8103228	Identifier	x		8103139	1					
ANR	8103229	AssignmentExpression	pscale -> y = pfp -> params . height_4ths * 0.25 * 7200.0 / ppi		8103139	1		=			
ANR	8103230	PtrMemberAccess	pscale -> y		8103139	0					
ANR	8103231	Identifier	pscale		8103139	0					
ANR	8103232	Identifier	y		8103139	1					
ANR	8103233	MultiplicativeExpression	pfp -> params . height_4ths * 0.25 * 7200.0 / ppi		8103139	1		*			
ANR	8103234	MemberAccess	pfp -> params . height_4ths		8103139	0					
ANR	8103235	PtrMemberAccess	pfp -> params		8103139	0					
ANR	8103236	Identifier	pfp		8103139	0					
ANR	8103237	Identifier	params		8103139	1					
ANR	8103238	Identifier	height_4ths		8103139	1					
ANR	8103239	MultiplicativeExpression	0.25 * 7200.0 / ppi		8103139	1		*			
ANR	8103240	PrimaryExpression	0.25		8103139	0					
ANR	8103241	MultiplicativeExpression	7200.0 / ppi		8103139	1		/			
ANR	8103242	PrimaryExpression	7200.0		8103139	0					
ANR	8103243	Identifier	ppi		8103139	1					
ANR	8103244	ElseStatement	else		8103139	0					
ANR	8103245	CompoundStatement		22:15:937:937	8103139	0					
ANR	8103246	ExpressionStatement	pscale -> x = pscale -> y = pl_fp_pitch_cp ( & pfp -> params ) * ( 1000.0 / pl_fp_pitch_cp ( & pfp -> font -> params ) ) * ( 7200.0 / ( 100.0 * ppi ) )	988:12:35054:35213	8103139	0	True				
ANR	8103247	AssignmentExpression	pscale -> x = pscale -> y = pl_fp_pitch_cp ( & pfp -> params ) * ( 1000.0 / pl_fp_pitch_cp ( & pfp -> font -> params ) ) * ( 7200.0 / ( 100.0 * ppi ) )		8103139	0		=			
ANR	8103248	PtrMemberAccess	pscale -> x		8103139	0					
ANR	8103249	Identifier	pscale		8103139	0					
ANR	8103250	Identifier	x		8103139	1					
ANR	8103251	AssignmentExpression	pscale -> y = pl_fp_pitch_cp ( & pfp -> params ) * ( 1000.0 / pl_fp_pitch_cp ( & pfp -> font -> params ) ) * ( 7200.0 / ( 100.0 * ppi ) )		8103139	1		=			
ANR	8103252	PtrMemberAccess	pscale -> y		8103139	0					
ANR	8103253	Identifier	pscale		8103139	0					
ANR	8103254	Identifier	y		8103139	1					
ANR	8103255	MultiplicativeExpression	pl_fp_pitch_cp ( & pfp -> params ) * ( 1000.0 / pl_fp_pitch_cp ( & pfp -> font -> params ) ) * ( 7200.0 / ( 100.0 * ppi ) )		8103139	1		*			
ANR	8103256	CallExpression	pl_fp_pitch_cp ( & pfp -> params )		8103139	0					
ANR	8103257	Callee	pl_fp_pitch_cp		8103139	0					
ANR	8103258	Identifier	pl_fp_pitch_cp		8103139	0					
ANR	8103259	ArgumentList	& pfp -> params		8103139	1					
ANR	8103260	Argument	& pfp -> params		8103139	0					
ANR	8103261	UnaryOperationExpression	& pfp -> params		8103139	0					
ANR	8103262	UnaryOperator	&		8103139	0					
ANR	8103263	PtrMemberAccess	pfp -> params		8103139	1					
ANR	8103264	Identifier	pfp		8103139	0					
ANR	8103265	Identifier	params		8103139	1					
ANR	8103266	MultiplicativeExpression	( 1000.0 / pl_fp_pitch_cp ( & pfp -> font -> params ) ) * ( 7200.0 / ( 100.0 * ppi ) )		8103139	1		*			
ANR	8103267	MultiplicativeExpression	1000.0 / pl_fp_pitch_cp ( & pfp -> font -> params )		8103139	0		/			
ANR	8103268	PrimaryExpression	1000.0		8103139	0					
ANR	8103269	CallExpression	pl_fp_pitch_cp ( & pfp -> font -> params )		8103139	1					
ANR	8103270	Callee	pl_fp_pitch_cp		8103139	0					
ANR	8103271	Identifier	pl_fp_pitch_cp		8103139	0					
ANR	8103272	ArgumentList	& pfp -> font -> params		8103139	1					
ANR	8103273	Argument	& pfp -> font -> params		8103139	0					
ANR	8103274	UnaryOperationExpression	& pfp -> font -> params		8103139	0					
ANR	8103275	UnaryOperator	&		8103139	0					
ANR	8103276	PtrMemberAccess	pfp -> font -> params		8103139	1					
ANR	8103277	PtrMemberAccess	pfp -> font		8103139	0					
ANR	8103278	Identifier	pfp		8103139	0					
ANR	8103279	Identifier	font		8103139	1					
ANR	8103280	Identifier	params		8103139	1					
ANR	8103281	MultiplicativeExpression	7200.0 / ( 100.0 * ppi )		8103139	1		/			
ANR	8103282	PrimaryExpression	7200.0		8103139	0					
ANR	8103283	MultiplicativeExpression	100.0 * ppi		8103139	1		*			
ANR	8103284	PrimaryExpression	100.0		8103139	0					
ANR	8103285	Identifier	ppi		8103139	1					
ANR	8103286	IfStatement	if ( ( pfp -> font -> params . typeface_family == 0 ) && ( pfp -> font -> storage == pcds_internal ) )		8103139	1					
ANR	8103287	Condition	( pfp -> font -> params . typeface_family == 0 ) && ( pfp -> font -> storage == pcds_internal )	995:16:35429:35525	8103139	0	True				
ANR	8103288	AndExpression	( pfp -> font -> params . typeface_family == 0 ) && ( pfp -> font -> storage == pcds_internal )		8103139	0		&&			
ANR	8103289	EqualityExpression	pfp -> font -> params . typeface_family == 0		8103139	0		==			
ANR	8103290	MemberAccess	pfp -> font -> params . typeface_family		8103139	0					
ANR	8103291	PtrMemberAccess	pfp -> font -> params		8103139	0					
ANR	8103292	PtrMemberAccess	pfp -> font		8103139	0					
ANR	8103293	Identifier	pfp		8103139	0					
ANR	8103294	Identifier	font		8103139	1					
ANR	8103295	Identifier	params		8103139	1					
ANR	8103296	Identifier	typeface_family		8103139	1					
ANR	8103297	PrimaryExpression	0		8103139	1					
ANR	8103298	EqualityExpression	pfp -> font -> storage == pcds_internal		8103139	1		==			
ANR	8103299	PtrMemberAccess	pfp -> font -> storage		8103139	0					
ANR	8103300	PtrMemberAccess	pfp -> font		8103139	0					
ANR	8103301	Identifier	pfp		8103139	0					
ANR	8103302	Identifier	font		8103139	1					
ANR	8103303	Identifier	storage		8103139	1					
ANR	8103304	Identifier	pcds_internal		8103139	1					
ANR	8103305	CompoundStatement		31:55:1425:1425	8103139	1					
ANR	8103306	ExpressionStatement	pscale -> x = pscale -> y = 850.0	997:16:35546:35575	8103139	0	True				
ANR	8103307	AssignmentExpression	pscale -> x = pscale -> y = 850.0		8103139	0		=			
ANR	8103308	PtrMemberAccess	pscale -> x		8103139	0					
ANR	8103309	Identifier	pscale		8103139	0					
ANR	8103310	Identifier	x		8103139	1					
ANR	8103311	AssignmentExpression	pscale -> y = 850.0		8103139	1		=			
ANR	8103312	PtrMemberAccess	pscale -> y		8103139	0					
ANR	8103313	Identifier	pscale		8103139	0					
ANR	8103314	Identifier	y		8103139	1					
ANR	8103315	PrimaryExpression	850.0		8103139	1					
ANR	8103316	ExpressionStatement	pscale -> y = - pscale -> y	1005:8:35744:35766	8103139	3	True				
ANR	8103317	AssignmentExpression	pscale -> y = - pscale -> y		8103139	0		=			
ANR	8103318	PtrMemberAccess	pscale -> y		8103139	0					
ANR	8103319	Identifier	pscale		8103139	0					
ANR	8103320	Identifier	y		8103139	1					
ANR	8103321	UnaryOperationExpression	- pscale -> y		8103139	1					
ANR	8103322	UnaryOperator	-		8103139	0					
ANR	8103323	PtrMemberAccess	pscale -> y		8103139	1					
ANR	8103324	Identifier	pscale		8103139	0					
ANR	8103325	Identifier	y		8103139	1					
ANR	8103326	ReturnType	void		8103139	1					
ANR	8103327	Identifier	pcl_font_scale		8103139	2					
ANR	8103328	ParameterList	"pcl_state_t * pcs , gs_point * pscale"		8103139	3					
ANR	8103329	Parameter	pcl_state_t * pcs	965:15:34064:34080	8103139	0	True				
ANR	8103330	ParameterType	pcl_state_t *		8103139	0					
ANR	8103331	Identifier	pcs		8103139	1					
ANR	8103332	Parameter	gs_point * pscale	965:34:34083:34099	8103139	1	True				
ANR	8103333	ParameterType	gs_point *		8103139	0					
ANR	8103334	Identifier	pscale		8103139	1					
ANR	8103335	CFGEntryNode	ENTRY		8103139		True				
ANR	8103336	CFGExitNode	EXIT		8103139		True				
ANR	8103337	Symbol	pfp -> font -> params . typeface_family		8103139						
ANR	8103338	Symbol	pcs -> font -> resolution		8103139						
ANR	8103339	Symbol	pfp -> font -> scaling_technology		8103139						
ANR	8103340	Symbol	plfst_bitmap		8103139						
ANR	8103341	Symbol	& pfp -> font -> params		8103139						
ANR	8103342	Symbol	pcs -> font -> scaling_technology		8103139						
ANR	8103343	Symbol	* pcs		8103139						
ANR	8103344	Symbol	* pscale		8103139						
ANR	8103345	Symbol	pfp -> params . height_4ths		8103139						
ANR	8103346	Symbol	pfp -> font -> params		8103139						
ANR	8103347	Symbol	pcs -> font		8103139						
ANR	8103348	Symbol	* * pfp		8103139						
ANR	8103349	Symbol	pcs -> font -> resolution . x		8103139						
ANR	8103350	Symbol	pfp -> font -> params . proportional_spacing		8103139						
ANR	8103351	Symbol	* pfp -> font		8103139						
ANR	8103352	Symbol	& pfp -> params		8103139						
ANR	8103353	Symbol	pcl_coord_scale		8103139						
ANR	8103354	Symbol	pcs		8103139						
ANR	8103355	Symbol	* pfp		8103139						
ANR	8103356	Symbol	pcds_internal		8103139						
ANR	8103357	Symbol	pfp -> font		8103139						
ANR	8103358	Symbol	pscale -> x		8103139						
ANR	8103359	Symbol	ppi		8103139						
ANR	8103360	Symbol	pfp -> font -> storage		8103139						
ANR	8103361	Symbol	pcs -> font_selection		8103139						
ANR	8103362	Symbol	* pcs -> font		8103139						
ANR	8103363	Symbol	pcs -> font -> resolution . y		8103139						
ANR	8103364	Symbol	* * pcs		8103139						
ANR	8103365	Symbol	pcs -> font_selected		8103139						
ANR	8103366	Symbol	pfp -> params		8103139						
ANR	8103367	Symbol	pscale -> y		8103139						
ANR	8103368	Symbol	pl_fp_pitch_cp		8103139						
ANR	8103369	Symbol	plfst_Intellifont		8103139						
ANR	8103370	Symbol	pscale		8103139						
ANR	8103371	Symbol	pfp		8103139						
ANR	8103372	Function	pcl_text	1016:0:36041:38074							
ANR	8103373	FunctionDef	"pcl_text (const byte * str , uint size , pcl_state_t * pcs , bool literal)"		8103372	0					
ANR	8103374	CompoundStatement		1018:0:36116:38074	8103372	0					
ANR	8103375	IdentifierDeclStatement	gs_gstate * pgs = pcs -> pgs ;	1019:4:36122:36147	8103372	0	True				
ANR	8103376	IdentifierDecl	* pgs = pcs -> pgs		8103372	0					
ANR	8103377	IdentifierDeclType	gs_gstate *		8103372	0					
ANR	8103378	Identifier	pgs		8103372	1					
ANR	8103379	AssignmentExpression	* pgs = pcs -> pgs		8103372	2		=			
ANR	8103380	Identifier	pgs		8103372	0					
ANR	8103381	PtrMemberAccess	pcs -> pgs		8103372	1					
ANR	8103382	Identifier	pcs		8103372	0					
ANR	8103383	Identifier	pgs		8103372	1					
ANR	8103384	IdentifierDeclStatement	gs_matrix user_ctm ;	1020:4:36153:36171	8103372	1	True				
ANR	8103385	IdentifierDecl	user_ctm		8103372	0					
ANR	8103386	IdentifierDeclType	gs_matrix		8103372	0					
ANR	8103387	Identifier	user_ctm		8103372	1					
ANR	8103388	IdentifierDeclStatement	gs_point scale ;	1021:4:36177:36191	8103372	2	True				
ANR	8103389	IdentifierDecl	scale		8103372	0					
ANR	8103390	IdentifierDeclType	gs_point		8103372	0					
ANR	8103391	Identifier	scale		8103372	1					
ANR	8103392	IdentifierDeclStatement	int code ;	1022:4:36197:36205	8103372	3	True				
ANR	8103393	IdentifierDecl	code		8103372	0					
ANR	8103394	IdentifierDeclType	int		8103372	0					
ANR	8103395	Identifier	code		8103372	1					
ANR	8103396	IfStatement	if ( pcs -> personality == rtl )		8103372	4					
ANR	8103397	Condition	pcs -> personality == rtl	1026:8:36304:36326	8103372	0	True				
ANR	8103398	EqualityExpression	pcs -> personality == rtl		8103372	0		==			
ANR	8103399	PtrMemberAccess	pcs -> personality		8103372	0					
ANR	8103400	Identifier	pcs		8103372	0					
ANR	8103401	Identifier	personality		8103372	1					
ANR	8103402	Identifier	rtl		8103372	1					
ANR	8103403	ReturnStatement	return 0 ;	1027:8:36337:36345	8103372	1	True				
ANR	8103404	PrimaryExpression	0		8103372	0					
ANR	8103405	IfStatement	if ( ( pcs -> font == 0 ) || pcs -> font_selection [ pcs -> font_selected ] . font == 0 )		8103372	5					
ANR	8103406	Condition	( pcs -> font == 0 ) || pcs -> font_selection [ pcs -> font_selected ] . font == 0	1029:8:36397:36465	8103372	0	True				
ANR	8103407	OrExpression	( pcs -> font == 0 ) || pcs -> font_selection [ pcs -> font_selected ] . font == 0		8103372	0		||			
ANR	8103408	EqualityExpression	pcs -> font == 0		8103372	0		==			
ANR	8103409	PtrMemberAccess	pcs -> font		8103372	0					
ANR	8103410	Identifier	pcs		8103372	0					
ANR	8103411	Identifier	font		8103372	1					
ANR	8103412	PrimaryExpression	0		8103372	1					
ANR	8103413	EqualityExpression	pcs -> font_selection [ pcs -> font_selected ] . font == 0		8103372	1		==			
ANR	8103414	MemberAccess	pcs -> font_selection [ pcs -> font_selected ] . font		8103372	0					
ANR	8103415	ArrayIndexing	pcs -> font_selection [ pcs -> font_selected ]		8103372	0					
ANR	8103416	PtrMemberAccess	pcs -> font_selection		8103372	0					
ANR	8103417	Identifier	pcs		8103372	0					
ANR	8103418	Identifier	font_selection		8103372	1					
ANR	8103419	PtrMemberAccess	pcs -> font_selected		8103372	1					
ANR	8103420	Identifier	pcs		8103372	0					
ANR	8103421	Identifier	font_selected		8103372	1					
ANR	8103422	Identifier	font		8103372	1					
ANR	8103423	PrimaryExpression	0		8103372	1					
ANR	8103424	CompoundStatement		12:79:351:351	8103372	1					
ANR	8103425	ExpressionStatement	"code = pcl_recompute_font ( pcs , false )"	1030:8:36478:36515	8103372	0	True				
ANR	8103426	AssignmentExpression	"code = pcl_recompute_font ( pcs , false )"		8103372	0		=			
ANR	8103427	Identifier	code		8103372	0					
ANR	8103428	CallExpression	"pcl_recompute_font ( pcs , false )"		8103372	1					
ANR	8103429	Callee	pcl_recompute_font		8103372	0					
ANR	8103430	Identifier	pcl_recompute_font		8103372	0					
ANR	8103431	ArgumentList	pcs		8103372	1					
ANR	8103432	Argument	pcs		8103372	0					
ANR	8103433	Identifier	pcs		8103372	0					
ANR	8103434	Argument	false		8103372	1					
ANR	8103435	Identifier	false		8103372	0					
ANR	8103436	IfStatement	if ( code < 0 )		8103372	1					
ANR	8103437	Condition	code < 0	1031:12:36529:36536	8103372	0	True				
ANR	8103438	RelationalExpression	code < 0		8103372	0		<			
ANR	8103439	Identifier	code		8103372	0					
ANR	8103440	PrimaryExpression	0		8103372	1					
ANR	8103441	ReturnStatement	return gs_rethrow_code ( code ) ;	1032:12:36551:36579	8103372	1	True				
ANR	8103442	CallExpression	gs_rethrow_code ( code )		8103372	0					
ANR	8103443	Callee	gs_rethrow_code		8103372	0					
ANR	8103444	Identifier	gs_rethrow_code		8103372	0					
ANR	8103445	ArgumentList	code		8103372	1					
ANR	8103446	Argument	code		8103372	0					
ANR	8103447	Identifier	code		8103372	0					
ANR	8103448	ExpressionStatement	"code = pcl_set_drawing_color ( pcs , pcs -> pattern_type , pcs -> current_pattern_id , false )"	1036:4:36627:36777	8103372	6	True				
ANR	8103449	AssignmentExpression	"code = pcl_set_drawing_color ( pcs , pcs -> pattern_type , pcs -> current_pattern_id , false )"		8103372	0		=			
ANR	8103450	Identifier	code		8103372	0					
ANR	8103451	CallExpression	"pcl_set_drawing_color ( pcs , pcs -> pattern_type , pcs -> current_pattern_id , false )"		8103372	1					
ANR	8103452	Callee	pcl_set_drawing_color		8103372	0					
ANR	8103453	Identifier	pcl_set_drawing_color		8103372	0					
ANR	8103454	ArgumentList	pcs		8103372	1					
ANR	8103455	Argument	pcs		8103372	0					
ANR	8103456	Identifier	pcs		8103372	0					
ANR	8103457	Argument	pcs -> pattern_type		8103372	1					
ANR	8103458	PtrMemberAccess	pcs -> pattern_type		8103372	0					
ANR	8103459	Identifier	pcs		8103372	0					
ANR	8103460	Identifier	pattern_type		8103372	1					
ANR	8103461	Argument	pcs -> current_pattern_id		8103372	2					
ANR	8103462	PtrMemberAccess	pcs -> current_pattern_id		8103372	0					
ANR	8103463	Identifier	pcs		8103372	0					
ANR	8103464	Identifier	current_pattern_id		8103372	1					
ANR	8103465	Argument	false		8103372	3					
ANR	8103466	Identifier	false		8103372	0					
ANR	8103467	IfStatement	if ( code >= 0 )		8103372	7					
ANR	8103468	Condition	code >= 0	1039:8:36787:36795	8103372	0	True				
ANR	8103469	RelationalExpression	code >= 0		8103372	0		>=			
ANR	8103470	Identifier	code		8103372	0					
ANR	8103471	PrimaryExpression	0		8103372	1					
ANR	8103472	ExpressionStatement	code = pcl_set_graphics_state ( pcs )	1040:8:36806:36840	8103372	1	True				
ANR	8103473	AssignmentExpression	code = pcl_set_graphics_state ( pcs )		8103372	0		=			
ANR	8103474	Identifier	code		8103372	0					
ANR	8103475	CallExpression	pcl_set_graphics_state ( pcs )		8103372	1					
ANR	8103476	Callee	pcl_set_graphics_state		8103372	0					
ANR	8103477	Identifier	pcl_set_graphics_state		8103372	0					
ANR	8103478	ArgumentList	pcs		8103372	1					
ANR	8103479	Argument	pcs		8103372	0					
ANR	8103480	Identifier	pcs		8103372	0					
ANR	8103481	IfStatement	if ( code < 0 )		8103372	8					
ANR	8103482	Condition	code < 0	1041:8:36850:36857	8103372	0	True				
ANR	8103483	RelationalExpression	code < 0		8103372	0		<			
ANR	8103484	Identifier	code		8103372	0					
ANR	8103485	PrimaryExpression	0		8103372	1					
ANR	8103486	ReturnStatement	return code ;	1042:8:36868:36879	8103372	1	True				
ANR	8103487	Identifier	code		8103372	0					
ANR	8103488	ExpressionStatement	set_gs_font ( pcs )	1043:4:36885:36901	8103372	9	True				
ANR	8103489	CallExpression	set_gs_font ( pcs )		8103372	0					
ANR	8103490	Callee	set_gs_font		8103372	0					
ANR	8103491	Identifier	set_gs_font		8103372	0					
ANR	8103492	ArgumentList	pcs		8103372	1					
ANR	8103493	Argument	pcs		8103372	0					
ANR	8103494	Identifier	pcs		8103372	0					
ANR	8103495	ExpressionStatement	"gs_currentmatrix ( pgs , & user_ctm )"	1045:4:36908:36940	8103372	10	True				
ANR	8103496	CallExpression	"gs_currentmatrix ( pgs , & user_ctm )"		8103372	0					
ANR	8103497	Callee	gs_currentmatrix		8103372	0					
ANR	8103498	Identifier	gs_currentmatrix		8103372	0					
ANR	8103499	ArgumentList	pgs		8103372	1					
ANR	8103500	Argument	pgs		8103372	0					
ANR	8103501	Identifier	pgs		8103372	0					
ANR	8103502	Argument	& user_ctm		8103372	1					
ANR	8103503	UnaryOperationExpression	& user_ctm		8103372	0					
ANR	8103504	UnaryOperator	&		8103372	0					
ANR	8103505	Identifier	user_ctm		8103372	1					
ANR	8103506	ExpressionStatement	"pcl_font_scale ( pcs , & scale )"	1046:4:36946:36973	8103372	11	True				
ANR	8103507	CallExpression	"pcl_font_scale ( pcs , & scale )"		8103372	0					
ANR	8103508	Callee	pcl_font_scale		8103372	0					
ANR	8103509	Identifier	pcl_font_scale		8103372	0					
ANR	8103510	ArgumentList	pcs		8103372	1					
ANR	8103511	Argument	pcs		8103372	0					
ANR	8103512	Identifier	pcs		8103372	0					
ANR	8103513	Argument	& scale		8103372	1					
ANR	8103514	UnaryOperationExpression	& scale		8103372	0					
ANR	8103515	UnaryOperator	&		8103372	0					
ANR	8103516	Identifier	scale		8103372	1					
ANR	8103517	ExpressionStatement	"gs_scale ( pgs , scale . x , scale . y )"	1047:4:36979:37010	8103372	12	True				
ANR	8103518	CallExpression	"gs_scale ( pgs , scale . x , scale . y )"		8103372	0					
ANR	8103519	Callee	gs_scale		8103372	0					
ANR	8103520	Identifier	gs_scale		8103372	0					
ANR	8103521	ArgumentList	pgs		8103372	1					
ANR	8103522	Argument	pgs		8103372	0					
ANR	8103523	Identifier	pgs		8103372	0					
ANR	8103524	Argument	scale . x		8103372	1					
ANR	8103525	MemberAccess	scale . x		8103372	0					
ANR	8103526	Identifier	scale		8103372	0					
ANR	8103527	Identifier	x		8103372	1					
ANR	8103528	Argument	scale . y		8103372	2					
ANR	8103529	MemberAccess	scale . y		8103372	0					
ANR	8103530	Identifier	scale		8103372	0					
ANR	8103531	Identifier	y		8103372	1					
ANR	8103532	IfStatement	if ( pcs -> underline_enabled && pcs -> underline_floating )		8103372	13					
ANR	8103533	Condition	pcs -> underline_enabled && pcs -> underline_floating	1057:8:37391:37439	8103372	0	True				
ANR	8103534	AndExpression	pcs -> underline_enabled && pcs -> underline_floating		8103372	0		&&			
ANR	8103535	PtrMemberAccess	pcs -> underline_enabled		8103372	0					
ANR	8103536	Identifier	pcs		8103372	0					
ANR	8103537	Identifier	underline_enabled		8103372	1					
ANR	8103538	PtrMemberAccess	pcs -> underline_floating		8103372	1					
ANR	8103539	Identifier	pcs		8103372	0					
ANR	8103540	Identifier	underline_floating		8103372	1					
ANR	8103541	CompoundStatement		41:8:1335:1365	8103372	1					
ANR	8103542	IdentifierDeclStatement	float yu = fabs ( scale . y ) / 5.0 ;	1058:8:37452:37482	8103372	0	True				
ANR	8103543	IdentifierDecl	yu = fabs ( scale . y ) / 5.0		8103372	0					
ANR	8103544	IdentifierDeclType	float		8103372	0					
ANR	8103545	Identifier	yu		8103372	1					
ANR	8103546	AssignmentExpression	yu = fabs ( scale . y ) / 5.0		8103372	2		=			
ANR	8103547	Identifier	yu		8103372	0					
ANR	8103548	MultiplicativeExpression	fabs ( scale . y ) / 5.0		8103372	1		/			
ANR	8103549	CallExpression	fabs ( scale . y )		8103372	0					
ANR	8103550	Callee	fabs		8103372	0					
ANR	8103551	Identifier	fabs		8103372	0					
ANR	8103552	ArgumentList	scale . y		8103372	1					
ANR	8103553	Argument	scale . y		8103372	0					
ANR	8103554	MemberAccess	scale . y		8103372	0					
ANR	8103555	Identifier	scale		8103372	0					
ANR	8103556	Identifier	y		8103372	1					
ANR	8103557	PrimaryExpression	5.0		8103372	1					
ANR	8103558	IfStatement	if ( yu > pcs -> underline_position )		8103372	1					
ANR	8103559	Condition	yu > pcs -> underline_position	1060:12:37497:37524	8103372	0	True				
ANR	8103560	RelationalExpression	yu > pcs -> underline_position		8103372	0		>			
ANR	8103561	Identifier	yu		8103372	0					
ANR	8103562	PtrMemberAccess	pcs -> underline_position		8103372	1					
ANR	8103563	Identifier	pcs		8103372	0					
ANR	8103564	Identifier	underline_position		8103372	1					
ANR	8103565	ExpressionStatement	pcs -> underline_position = yu	1061:12:37539:37567	8103372	1	True				
ANR	8103566	AssignmentExpression	pcs -> underline_position = yu		8103372	0		=			
ANR	8103567	PtrMemberAccess	pcs -> underline_position		8103372	0					
ANR	8103568	Identifier	pcs		8103372	0					
ANR	8103569	Identifier	underline_position		8103372	1					
ANR	8103570	Identifier	yu		8103372	1					
ANR	8103571	IfStatement	if ( pcs -> text_path != 0 )		8103372	14					
ANR	8103572	Condition	pcs -> text_path != 0	1065:8:37657:37675	8103372	0	True				
ANR	8103573	EqualityExpression	pcs -> text_path != 0		8103372	0		!=			
ANR	8103574	PtrMemberAccess	pcs -> text_path		8103372	0					
ANR	8103575	Identifier	pcs		8103372	0					
ANR	8103576	Identifier	text_path		8103372	1					
ANR	8103577	PrimaryExpression	0		8103372	1					
ANR	8103578	ExpressionStatement	pcs -> font -> allow_vertical_substitutes = true	1066:8:37686:37730	8103372	1	True				
ANR	8103579	AssignmentExpression	pcs -> font -> allow_vertical_substitutes = true		8103372	0		=			
ANR	8103580	PtrMemberAccess	pcs -> font -> allow_vertical_substitutes		8103372	0					
ANR	8103581	PtrMemberAccess	pcs -> font		8103372	0					
ANR	8103582	Identifier	pcs		8103372	0					
ANR	8103583	Identifier	font		8103372	1					
ANR	8103584	Identifier	allow_vertical_substitutes		8103372	1					
ANR	8103585	Identifier	true		8103372	1					
ANR	8103586	ElseStatement	else		8103372	0					
ANR	8103587	ExpressionStatement	pcs -> font -> allow_vertical_substitutes = false	1068:8:37749:37794	8103372	0	True				
ANR	8103588	AssignmentExpression	pcs -> font -> allow_vertical_substitutes = false		8103372	0		=			
ANR	8103589	PtrMemberAccess	pcs -> font -> allow_vertical_substitutes		8103372	0					
ANR	8103590	PtrMemberAccess	pcs -> font		8103372	0					
ANR	8103591	Identifier	pcs		8103372	0					
ANR	8103592	Identifier	font		8103372	1					
ANR	8103593	Identifier	allow_vertical_substitutes		8103372	1					
ANR	8103594	Identifier	false		8103372	1					
ANR	8103595	ExpressionStatement	"code = pcl_show_chars_slow ( pcs , & scale , str , size , literal )"	1071:4:37855:37914	8103372	15	True				
ANR	8103596	AssignmentExpression	"code = pcl_show_chars_slow ( pcs , & scale , str , size , literal )"		8103372	0		=			
ANR	8103597	Identifier	code		8103372	0					
ANR	8103598	CallExpression	"pcl_show_chars_slow ( pcs , & scale , str , size , literal )"		8103372	1					
ANR	8103599	Callee	pcl_show_chars_slow		8103372	0					
ANR	8103600	Identifier	pcl_show_chars_slow		8103372	0					
ANR	8103601	ArgumentList	pcs		8103372	1					
ANR	8103602	Argument	pcs		8103372	0					
ANR	8103603	Identifier	pcs		8103372	0					
ANR	8103604	Argument	& scale		8103372	1					
ANR	8103605	UnaryOperationExpression	& scale		8103372	0					
ANR	8103606	UnaryOperator	&		8103372	0					
ANR	8103607	Identifier	scale		8103372	1					
ANR	8103608	Argument	str		8103372	2					
ANR	8103609	Identifier	str		8103372	0					
ANR	8103610	Argument	size		8103372	3					
ANR	8103611	Identifier	size		8103372	0					
ANR	8103612	Argument	literal		8103372	4					
ANR	8103613	Identifier	literal		8103372	0					
ANR	8103614	ExpressionStatement	"gs_setmatrix ( pgs , & user_ctm )"	1072:4:37920:37948	8103372	16	True				
ANR	8103615	CallExpression	"gs_setmatrix ( pgs , & user_ctm )"		8103372	0					
ANR	8103616	Callee	gs_setmatrix		8103372	0					
ANR	8103617	Identifier	gs_setmatrix		8103372	0					
ANR	8103618	ArgumentList	pgs		8103372	1					
ANR	8103619	Argument	pgs		8103372	0					
ANR	8103620	Identifier	pgs		8103372	0					
ANR	8103621	Argument	& user_ctm		8103372	1					
ANR	8103622	UnaryOperationExpression	& user_ctm		8103372	0					
ANR	8103623	UnaryOperator	&		8103372	0					
ANR	8103624	Identifier	user_ctm		8103372	1					
ANR	8103625	IfStatement	if ( code > 0 )		8103372	17					
ANR	8103626	Condition	code > 0	1073:8:37958:37965	8103372	0	True				
ANR	8103627	RelationalExpression	code > 0		8103372	0		>			
ANR	8103628	Identifier	code		8103372	0					
ANR	8103629	PrimaryExpression	0		8103372	1					
ANR	8103630	ExpressionStatement	code = gs_note_error ( gs_error_invalidfont )	1074:8:38013:38055	8103372	1	True				
ANR	8103631	AssignmentExpression	code = gs_note_error ( gs_error_invalidfont )		8103372	0		=			
ANR	8103632	Identifier	code		8103372	0					
ANR	8103633	CallExpression	gs_note_error ( gs_error_invalidfont )		8103372	1					
ANR	8103634	Callee	gs_note_error		8103372	0					
ANR	8103635	Identifier	gs_note_error		8103372	0					
ANR	8103636	ArgumentList	gs_error_invalidfont		8103372	1					
ANR	8103637	Argument	gs_error_invalidfont		8103372	0					
ANR	8103638	Identifier	gs_error_invalidfont		8103372	0					
ANR	8103639	ReturnStatement	return code ;	1075:4:38061:38072	8103372	18	True				
ANR	8103640	Identifier	code		8103372	0					
ANR	8103641	ReturnType	int		8103372	1					
ANR	8103642	Identifier	pcl_text		8103372	2					
ANR	8103643	ParameterList	"const byte * str , uint size , pcl_state_t * pcs , bool literal"		8103372	3					
ANR	8103644	Parameter	const byte * str	1017:9:36054:36069	8103372	0	True				
ANR	8103645	ParameterType	const byte *		8103372	0					
ANR	8103646	Identifier	str		8103372	1					
ANR	8103647	Parameter	uint size	1017:27:36072:36080	8103372	1	True				
ANR	8103648	ParameterType	uint		8103372	0					
ANR	8103649	Identifier	size		8103372	1					
ANR	8103650	Parameter	pcl_state_t * pcs	1017:38:36083:36099	8103372	2	True				
ANR	8103651	ParameterType	pcl_state_t *		8103372	0					
ANR	8103652	Identifier	pcs		8103372	1					
ANR	8103653	Parameter	bool literal	1017:57:36102:36113	8103372	3	True				
ANR	8103654	ParameterType	bool		8103372	0					
ANR	8103655	Identifier	literal		8103372	1					
ANR	8103656	CFGEntryNode	ENTRY		8103372		True				
ANR	8103657	CFGExitNode	EXIT		8103372		True				
ANR	8103658	Symbol	code		8103372						
ANR	8103659	Symbol	pcs -> current_pattern_id		8103372						
ANR	8103660	Symbol	pcs -> underline_floating		8103372						
ANR	8103661	Symbol	pcs -> font -> allow_vertical_substitutes		8103372						
ANR	8103662	Symbol	scale . x		8103372						
ANR	8103663	Symbol	scale		8103372						
ANR	8103664	Symbol	scale . y		8103372						
ANR	8103665	Symbol	* pcs		8103372						
ANR	8103666	Symbol	user_ctm		8103372						
ANR	8103667	Symbol	gs_rethrow_code		8103372						
ANR	8103668	Symbol	pcs -> font		8103372						
ANR	8103669	Symbol	pcs -> pattern_type		8103372						
ANR	8103670	Symbol	literal		8103372						
ANR	8103671	Symbol	pcs -> underline_enabled		8103372						
ANR	8103672	Symbol	pcl_set_drawing_color		8103372						
ANR	8103673	Symbol	pcs -> text_path		8103372						
ANR	8103674	Symbol	pcl_show_chars_slow		8103372						
ANR	8103675	Symbol	& scale		8103372						
ANR	8103676	Symbol	yu		8103372						
ANR	8103677	Symbol	gs_error_invalidfont		8103372						
ANR	8103678	Symbol	pgs		8103372						
ANR	8103679	Symbol	pcs -> personality		8103372						
ANR	8103680	Symbol	pcs		8103372						
ANR	8103681	Symbol	fabs		8103372						
ANR	8103682	Symbol	pcs -> underline_position		8103372						
ANR	8103683	Symbol	pcs -> pgs		8103372						
ANR	8103684	Symbol	false		8103372						
ANR	8103685	Symbol	* pcs -> font_selection		8103372						
ANR	8103686	Symbol	pcs -> font_selection		8103372						
ANR	8103687	Symbol	* pcs -> font_selected		8103372						
ANR	8103688	Symbol	rtl		8103372						
ANR	8103689	Symbol	* pcs -> font		8103372						
ANR	8103690	Symbol	str		8103372						
ANR	8103691	Symbol	pcl_recompute_font		8103372						
ANR	8103692	Symbol	gs_note_error		8103372						
ANR	8103693	Symbol	size		8103372						
ANR	8103694	Symbol	* * pcs		8103372						
ANR	8103695	Symbol	pcs -> font_selected		8103372						
ANR	8103696	Symbol	pcs -> font_selection [ pcs -> font_selected ] . font		8103372						
ANR	8103697	Symbol	& user_ctm		8103372						
ANR	8103698	Symbol	true		8103372						
ANR	8103699	Symbol	pcl_set_graphics_state		8103372						
ANR	8103700	Function	pcl_plain_char	1081:0:38129:38295							
ANR	8103701	FunctionDef	"pcl_plain_char (pcl_args_t * pargs , pcl_state_t * pcs)"		8103700	0					
ANR	8103702	CompoundStatement		1083:0:38187:38295	8103700	0					
ANR	8103703	ReturnStatement	"return pcl_text ( ( const byte * ) & ( pargs -> command ) , 1 , pcs , pcs -> display_functions ) ;"	1084:4:38193:38293	8103700	0	True				
ANR	8103704	CallExpression	"pcl_text ( ( const byte * ) & ( pargs -> command ) , 1 , pcs , pcs -> display_functions )"		8103700	0					
ANR	8103705	Callee	pcl_text		8103700	0					
ANR	8103706	Identifier	pcl_text		8103700	0					
ANR	8103707	ArgumentList	( const byte * ) & ( pargs -> command )		8103700	1					
ANR	8103708	Argument	( const byte * ) & ( pargs -> command )		8103700	0					
ANR	8103709	CastExpression	( const byte * ) & ( pargs -> command )		8103700	0					
ANR	8103710	CastTarget	const byte *		8103700	0					
ANR	8103711	UnaryOperationExpression	& ( pargs -> command )		8103700	1					
ANR	8103712	UnaryOperator	&		8103700	0					
ANR	8103713	PtrMemberAccess	pargs -> command		8103700	1					
ANR	8103714	Identifier	pargs		8103700	0					
ANR	8103715	Identifier	command		8103700	1					
ANR	8103716	Argument	1		8103700	1					
ANR	8103717	PrimaryExpression	1		8103700	0					
ANR	8103718	Argument	pcs		8103700	2					
ANR	8103719	Identifier	pcs		8103700	0					
ANR	8103720	Argument	pcs -> display_functions		8103700	3					
ANR	8103721	PtrMemberAccess	pcs -> display_functions		8103700	0					
ANR	8103722	Identifier	pcs		8103700	0					
ANR	8103723	Identifier	display_functions		8103700	1					
ANR	8103724	ReturnType	int		8103700	1					
ANR	8103725	Identifier	pcl_plain_char		8103700	2					
ANR	8103726	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8103700	3					
ANR	8103727	Parameter	pcl_args_t * pargs	1082:15:38148:38165	8103700	0	True				
ANR	8103728	ParameterType	pcl_args_t *		8103700	0					
ANR	8103729	Identifier	pargs		8103700	1					
ANR	8103730	Parameter	pcl_state_t * pcs	1082:35:38168:38184	8103700	1	True				
ANR	8103731	ParameterType	pcl_state_t *		8103700	0					
ANR	8103732	Identifier	pcs		8103700	1					
ANR	8103733	CFGEntryNode	ENTRY		8103700		True				
ANR	8103734	CFGExitNode	EXIT		8103700		True				
ANR	8103735	Symbol	pcs		8103700						
ANR	8103736	Symbol	& pargs -> command		8103700						
ANR	8103737	Symbol	pargs		8103700						
ANR	8103738	Symbol	pcs -> display_functions		8103700						
ANR	8103739	Symbol	* pcs		8103700						
ANR	8103740	Symbol	pcl_text		8103700						
ANR	8103741	Function	pcl_do_underline	1091:0:38358:39644							
ANR	8103742	FunctionDef	pcl_do_underline (pcl_state_t * pcs)		8103741	0					
ANR	8103743	CompoundStatement		1093:0:38399:39644	8103741	0					
ANR	8103744	IfStatement	if ( pcs -> underline_start . x != pcs -> cap . x )		8103741	0					
ANR	8103745	Condition	pcs -> underline_start . x != pcs -> cap . x	1094:8:38409:38444	8103741	0	True				
ANR	8103746	EqualityExpression	pcs -> underline_start . x != pcs -> cap . x		8103741	0		!=			
ANR	8103747	MemberAccess	pcs -> underline_start . x		8103741	0					
ANR	8103748	PtrMemberAccess	pcs -> underline_start		8103741	0					
ANR	8103749	Identifier	pcs		8103741	0					
ANR	8103750	Identifier	underline_start		8103741	1					
ANR	8103751	Identifier	x		8103741	1					
ANR	8103752	MemberAccess	pcs -> cap . x		8103741	1					
ANR	8103753	PtrMemberAccess	pcs -> cap		8103741	0					
ANR	8103754	Identifier	pcs		8103741	0					
ANR	8103755	Identifier	cap		8103741	1					
ANR	8103756	Identifier	x		8103741	1					
ANR	8103757	CompoundStatement		5:8:160:168	8103741	1					
ANR	8103758	IdentifierDeclStatement	gs_gstate * pgs = pcs -> pgs ;	1095:8:38457:38482	8103741	0	True				
ANR	8103759	IdentifierDecl	* pgs = pcs -> pgs		8103741	0					
ANR	8103760	IdentifierDeclType	gs_gstate *		8103741	0					
ANR	8103761	Identifier	pgs		8103741	1					
ANR	8103762	AssignmentExpression	* pgs = pcs -> pgs		8103741	2		=			
ANR	8103763	Identifier	pgs		8103741	0					
ANR	8103764	PtrMemberAccess	pcs -> pgs		8103741	1					
ANR	8103765	Identifier	pcs		8103741	0					
ANR	8103766	Identifier	pgs		8103741	1					
ANR	8103767	IdentifierDeclStatement	float y = pcs -> underline_start . y + pcs -> underline_position ;	1096:8:38492:38550	8103741	1	True				
ANR	8103768	IdentifierDecl	y = pcs -> underline_start . y + pcs -> underline_position		8103741	0					
ANR	8103769	IdentifierDeclType	float		8103741	0					
ANR	8103770	Identifier	y		8103741	1					
ANR	8103771	AssignmentExpression	y = pcs -> underline_start . y + pcs -> underline_position		8103741	2		=			
ANR	8103772	Identifier	y		8103741	0					
ANR	8103773	AdditiveExpression	pcs -> underline_start . y + pcs -> underline_position		8103741	1		+			
ANR	8103774	MemberAccess	pcs -> underline_start . y		8103741	0					
ANR	8103775	PtrMemberAccess	pcs -> underline_start		8103741	0					
ANR	8103776	Identifier	pcs		8103741	0					
ANR	8103777	Identifier	underline_start		8103741	1					
ANR	8103778	Identifier	y		8103741	1					
ANR	8103779	PtrMemberAccess	pcs -> underline_position		8103741	1					
ANR	8103780	Identifier	pcs		8103741	0					
ANR	8103781	Identifier	underline_position		8103741	1					
ANR	8103782	IdentifierDeclStatement	int code ;	1097:8:38560:38568	8103741	2	True				
ANR	8103783	IdentifierDecl	code		8103741	0					
ANR	8103784	IdentifierDeclType	int		8103741	0					
ANR	8103785	Identifier	code		8103741	1					
ANR	8103786	ExpressionStatement	code = pcl_gsave ( pcs )	1100:8:38616:38637	8103741	3	True				
ANR	8103787	AssignmentExpression	code = pcl_gsave ( pcs )		8103741	0		=			
ANR	8103788	Identifier	code		8103741	0					
ANR	8103789	CallExpression	pcl_gsave ( pcs )		8103741	1					
ANR	8103790	Callee	pcl_gsave		8103741	0					
ANR	8103791	Identifier	pcl_gsave		8103741	0					
ANR	8103792	ArgumentList	pcs		8103741	1					
ANR	8103793	Argument	pcs		8103741	0					
ANR	8103794	Identifier	pcs		8103741	0					
ANR	8103795	IfStatement	if ( code < 0 )		8103741	4					
ANR	8103796	Condition	code < 0	1101:12:38651:38658	8103741	0	True				
ANR	8103797	RelationalExpression	code < 0		8103741	0		<			
ANR	8103798	Identifier	code		8103741	0					
ANR	8103799	PrimaryExpression	0		8103741	1					
ANR	8103800	ReturnStatement	return ;	1102:12:38673:38679	8103741	1	True				
ANR	8103801	ExpressionStatement	"code = pcl_set_drawing_color ( pcs , pcs -> pattern_type , pcs -> current_pattern_id , false )"	1104:8:38690:38848	8103741	5	True				
ANR	8103802	AssignmentExpression	"code = pcl_set_drawing_color ( pcs , pcs -> pattern_type , pcs -> current_pattern_id , false )"		8103741	0		=			
ANR	8103803	Identifier	code		8103741	0					
ANR	8103804	CallExpression	"pcl_set_drawing_color ( pcs , pcs -> pattern_type , pcs -> current_pattern_id , false )"		8103741	1					
ANR	8103805	Callee	pcl_set_drawing_color		8103741	0					
ANR	8103806	Identifier	pcl_set_drawing_color		8103741	0					
ANR	8103807	ArgumentList	pcs		8103741	1					
ANR	8103808	Argument	pcs		8103741	0					
ANR	8103809	Identifier	pcs		8103741	0					
ANR	8103810	Argument	pcs -> pattern_type		8103741	1					
ANR	8103811	PtrMemberAccess	pcs -> pattern_type		8103741	0					
ANR	8103812	Identifier	pcs		8103741	0					
ANR	8103813	Identifier	pattern_type		8103741	1					
ANR	8103814	Argument	pcs -> current_pattern_id		8103741	2					
ANR	8103815	PtrMemberAccess	pcs -> current_pattern_id		8103741	0					
ANR	8103816	Identifier	pcs		8103741	0					
ANR	8103817	Identifier	current_pattern_id		8103741	1					
ANR	8103818	Argument	false		8103741	3					
ANR	8103819	Identifier	false		8103741	0					
ANR	8103820	IfStatement	if ( code >= 0 )		8103741	6					
ANR	8103821	Condition	code >= 0	1107:12:38862:38870	8103741	0	True				
ANR	8103822	RelationalExpression	code >= 0		8103741	0		>=			
ANR	8103823	Identifier	code		8103741	0					
ANR	8103824	PrimaryExpression	0		8103741	1					
ANR	8103825	ExpressionStatement	code = pcl_set_graphics_state ( pcs )	1108:12:38885:38919	8103741	1	True				
ANR	8103826	AssignmentExpression	code = pcl_set_graphics_state ( pcs )		8103741	0		=			
ANR	8103827	Identifier	code		8103741	0					
ANR	8103828	CallExpression	pcl_set_graphics_state ( pcs )		8103741	1					
ANR	8103829	Callee	pcl_set_graphics_state		8103741	0					
ANR	8103830	Identifier	pcl_set_graphics_state		8103741	0					
ANR	8103831	ArgumentList	pcs		8103741	1					
ANR	8103832	Argument	pcs		8103741	0					
ANR	8103833	Identifier	pcs		8103741	0					
ANR	8103834	IfStatement	if ( code < 0 )		8103741	7					
ANR	8103835	Condition	code < 0	1109:12:38933:38940	8103741	0	True				
ANR	8103836	RelationalExpression	code < 0		8103741	0		<			
ANR	8103837	Identifier	code		8103741	0					
ANR	8103838	PrimaryExpression	0		8103741	1					
ANR	8103839	ReturnStatement	return ;	1110:12:38955:38961	8103741	1	True				
ANR	8103840	ExpressionStatement	"gs_setlinewidth ( pgs , dots ( 3 ) )"	1117:8:39168:39197	8103741	8	True				
ANR	8103841	CallExpression	"gs_setlinewidth ( pgs , dots ( 3 ) )"		8103741	0					
ANR	8103842	Callee	gs_setlinewidth		8103741	0					
ANR	8103843	Identifier	gs_setlinewidth		8103741	0					
ANR	8103844	ArgumentList	pgs		8103741	1					
ANR	8103845	Argument	pgs		8103741	0					
ANR	8103846	Identifier	pgs		8103741	0					
ANR	8103847	Argument	dots ( 3 )		8103741	1					
ANR	8103848	CallExpression	dots ( 3 )		8103741	0					
ANR	8103849	Callee	dots		8103741	0					
ANR	8103850	Identifier	dots		8103741	0					
ANR	8103851	ArgumentList	3		8103741	1					
ANR	8103852	Argument	3		8103741	0					
ANR	8103853	PrimaryExpression	3		8103741	0					
ANR	8103854	IfStatement	"if ( ( gs_moveto ( pgs , pcs -> underline_start . x , y ) < 0 ) || ( gs_lineto ( pgs , pcs -> cap . x , y ) < 0 ) || ( gs_stroke ( pgs ) < 0 ) )"		8103741	9					
ANR	8103855	Condition	"( gs_moveto ( pgs , pcs -> underline_start . x , y ) < 0 ) || ( gs_lineto ( pgs , pcs -> cap . x , y ) < 0 ) || ( gs_stroke ( pgs ) < 0 )"	1118:12:39211:39344	8103741	0	True				
ANR	8103856	OrExpression	"( gs_moveto ( pgs , pcs -> underline_start . x , y ) < 0 ) || ( gs_lineto ( pgs , pcs -> cap . x , y ) < 0 ) || ( gs_stroke ( pgs ) < 0 )"		8103741	0		||			
ANR	8103857	RelationalExpression	"gs_moveto ( pgs , pcs -> underline_start . x , y ) < 0"		8103741	0		<			
ANR	8103858	CallExpression	"gs_moveto ( pgs , pcs -> underline_start . x , y )"		8103741	0					
ANR	8103859	Callee	gs_moveto		8103741	0					
ANR	8103860	Identifier	gs_moveto		8103741	0					
ANR	8103861	ArgumentList	pgs		8103741	1					
ANR	8103862	Argument	pgs		8103741	0					
ANR	8103863	Identifier	pgs		8103741	0					
ANR	8103864	Argument	pcs -> underline_start . x		8103741	1					
ANR	8103865	MemberAccess	pcs -> underline_start . x		8103741	0					
ANR	8103866	PtrMemberAccess	pcs -> underline_start		8103741	0					
ANR	8103867	Identifier	pcs		8103741	0					
ANR	8103868	Identifier	underline_start		8103741	1					
ANR	8103869	Identifier	x		8103741	1					
ANR	8103870	Argument	y		8103741	2					
ANR	8103871	Identifier	y		8103741	0					
ANR	8103872	PrimaryExpression	0		8103741	1					
ANR	8103873	OrExpression	"( gs_lineto ( pgs , pcs -> cap . x , y ) < 0 ) || ( gs_stroke ( pgs ) < 0 )"		8103741	1		||			
ANR	8103874	RelationalExpression	"gs_lineto ( pgs , pcs -> cap . x , y ) < 0"		8103741	0		<			
ANR	8103875	CallExpression	"gs_lineto ( pgs , pcs -> cap . x , y )"		8103741	0					
ANR	8103876	Callee	gs_lineto		8103741	0					
ANR	8103877	Identifier	gs_lineto		8103741	0					
ANR	8103878	ArgumentList	pgs		8103741	1					
ANR	8103879	Argument	pgs		8103741	0					
ANR	8103880	Identifier	pgs		8103741	0					
ANR	8103881	Argument	pcs -> cap . x		8103741	1					
ANR	8103882	MemberAccess	pcs -> cap . x		8103741	0					
ANR	8103883	PtrMemberAccess	pcs -> cap		8103741	0					
ANR	8103884	Identifier	pcs		8103741	0					
ANR	8103885	Identifier	cap		8103741	1					
ANR	8103886	Identifier	x		8103741	1					
ANR	8103887	Argument	y		8103741	2					
ANR	8103888	Identifier	y		8103741	0					
ANR	8103889	PrimaryExpression	0		8103741	1					
ANR	8103890	RelationalExpression	gs_stroke ( pgs ) < 0		8103741	1		<			
ANR	8103891	CallExpression	gs_stroke ( pgs )		8103741	0					
ANR	8103892	Callee	gs_stroke		8103741	0					
ANR	8103893	Identifier	gs_stroke		8103741	0					
ANR	8103894	ArgumentList	pgs		8103741	1					
ANR	8103895	Argument	pgs		8103741	0					
ANR	8103896	Identifier	pgs		8103741	0					
ANR	8103897	PrimaryExpression	0		8103741	1					
ANR	8103898	CompoundStatement		28:34:947:947	8103741	1					
ANR	8103899	ReturnStatement	return ;	1121:12:39361:39367	8103741	0	True				
ANR	8103900	ExpressionStatement	pcl_grestore ( pcs )	1124:8:39388:39405	8103741	10	True				
ANR	8103901	CallExpression	pcl_grestore ( pcs )		8103741	0					
ANR	8103902	Callee	pcl_grestore		8103741	0					
ANR	8103903	Identifier	pcl_grestore		8103741	0					
ANR	8103904	ArgumentList	pcs		8103741	1					
ANR	8103905	Argument	pcs		8103741	0					
ANR	8103906	Identifier	pcs		8103741	0					
ANR	8103907	ExpressionStatement	pcs -> underline_start = pcs -> cap	1131:4:39540:39571	8103741	1	True				
ANR	8103908	AssignmentExpression	pcs -> underline_start = pcs -> cap		8103741	0		=			
ANR	8103909	PtrMemberAccess	pcs -> underline_start		8103741	0					
ANR	8103910	Identifier	pcs		8103741	0					
ANR	8103911	Identifier	underline_start		8103741	1					
ANR	8103912	PtrMemberAccess	pcs -> cap		8103741	1					
ANR	8103913	Identifier	pcs		8103741	0					
ANR	8103914	Identifier	cap		8103741	1					
ANR	8103915	ExpressionStatement	pcs -> underline_position = pcs -> underline_floating ? 0.0 : dots ( 5 )	1132:4:39577:39642	8103741	2	True				
ANR	8103916	AssignmentExpression	pcs -> underline_position = pcs -> underline_floating ? 0.0 : dots ( 5 )		8103741	0		=			
ANR	8103917	PtrMemberAccess	pcs -> underline_position		8103741	0					
ANR	8103918	Identifier	pcs		8103741	0					
ANR	8103919	Identifier	underline_position		8103741	1					
ANR	8103920	ConditionalExpression	pcs -> underline_floating ? 0.0 : dots ( 5 )		8103741	1					
ANR	8103921	Condition	pcs -> underline_floating		8103741	0					
ANR	8103922	PtrMemberAccess	pcs -> underline_floating		8103741	0					
ANR	8103923	Identifier	pcs		8103741	0					
ANR	8103924	Identifier	underline_floating		8103741	1					
ANR	8103925	PrimaryExpression	0.0		8103741	1					
ANR	8103926	CallExpression	dots ( 5 )		8103741	2					
ANR	8103927	Callee	dots		8103741	0					
ANR	8103928	Identifier	dots		8103741	0					
ANR	8103929	ArgumentList	5		8103741	1					
ANR	8103930	Argument	5		8103741	0					
ANR	8103931	PrimaryExpression	5		8103741	0					
ANR	8103932	ReturnType	void		8103741	1					
ANR	8103933	Identifier	pcl_do_underline		8103741	2					
ANR	8103934	ParameterList	pcl_state_t * pcs		8103741	3					
ANR	8103935	Parameter	pcl_state_t * pcs	1092:17:38380:38396	8103741	0	True				
ANR	8103936	ParameterType	pcl_state_t *		8103741	0					
ANR	8103937	Identifier	pcs		8103741	1					
ANR	8103938	CFGEntryNode	ENTRY		8103741		True				
ANR	8103939	CFGExitNode	EXIT		8103741		True				
ANR	8103940	Symbol	pcs		8103741						
ANR	8103941	Symbol	code		8103741						
ANR	8103942	Symbol	pcs -> current_pattern_id		8103741						
ANR	8103943	Symbol	pcs -> underline_position		8103741						
ANR	8103944	Symbol	gs_lineto		8103741						
ANR	8103945	Symbol	pcs -> underline_floating		8103741						
ANR	8103946	Symbol	dots		8103741						
ANR	8103947	Symbol	pcs -> pgs		8103741						
ANR	8103948	Symbol	pcs -> underline_start		8103741						
ANR	8103949	Symbol	pcs -> cap . x		8103741						
ANR	8103950	Symbol	false		8103741						
ANR	8103951	Symbol	pcs -> cap		8103741						
ANR	8103952	Symbol	* pcs		8103741						
ANR	8103953	Symbol	gs_moveto		8103741						
ANR	8103954	Symbol	pcs -> pattern_type		8103741						
ANR	8103955	Symbol	pcs -> underline_start . y		8103741						
ANR	8103956	Symbol	pcs -> underline_start . x		8103741						
ANR	8103957	Symbol	pcl_set_drawing_color		8103741						
ANR	8103958	Symbol	y		8103741						
ANR	8103959	Symbol	pgs		8103741						
ANR	8103960	Symbol	pcl_gsave		8103741						
ANR	8103961	Symbol	pcl_set_graphics_state		8103741						
ANR	8103962	Symbol	gs_stroke		8103741						
ANR	8103963	Function	pcl_transparent_mode	1142:0:39733:40003							
ANR	8103964	FunctionDef	"pcl_transparent_mode (pcl_args_t * pargs , pcl_state_t * pcs)"		8103963	0					
ANR	8103965	CompoundStatement		1144:0:39804:40003	8103963	0					
ANR	8103966	IfStatement	if ( gs_debug_c ( 'i' ) )		8103963	0					
ANR	8103967	Condition	gs_debug_c ( 'i' )	1147:8:39828:39842	8103963	0	True				
ANR	8103968	CallExpression	gs_debug_c ( 'i' )		8103963	0					
ANR	8103969	Callee	gs_debug_c		8103963	0					
ANR	8103970	Identifier	gs_debug_c		8103963	0					
ANR	8103971	ArgumentList	'i'		8103963	1					
ANR	8103972	Argument	'i'		8103963	0					
ANR	8103973	PrimaryExpression	'i'		8103963	0					
ANR	8103974	CompoundStatement		4:25:40:40	8103963	1					
ANR	8103975	ExpressionStatement	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"	1148:8:39855:39921	8103963	0	True				
ANR	8103976	CallExpression	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"		8103963	0					
ANR	8103977	Callee	pcl_debug_dump_data		8103963	0					
ANR	8103978	Identifier	pcl_debug_dump_data		8103963	0					
ANR	8103979	ArgumentList	pcs -> memory		8103963	1					
ANR	8103980	Argument	pcs -> memory		8103963	0					
ANR	8103981	PtrMemberAccess	pcs -> memory		8103963	0					
ANR	8103982	Identifier	pcs		8103963	0					
ANR	8103983	Identifier	memory		8103963	1					
ANR	8103984	Argument	arg_data ( pargs )		8103963	1					
ANR	8103985	CallExpression	arg_data ( pargs )		8103963	0					
ANR	8103986	Callee	arg_data		8103963	0					
ANR	8103987	Identifier	arg_data		8103963	0					
ANR	8103988	ArgumentList	pargs		8103963	1					
ANR	8103989	Argument	pargs		8103963	0					
ANR	8103990	Identifier	pargs		8103963	0					
ANR	8103991	Argument	uint_arg ( pargs )		8103963	2					
ANR	8103992	CallExpression	uint_arg ( pargs )		8103963	0					
ANR	8103993	Callee	uint_arg		8103963	0					
ANR	8103994	Identifier	uint_arg		8103963	0					
ANR	8103995	ArgumentList	pargs		8103963	1					
ANR	8103996	Argument	pargs		8103963	0					
ANR	8103997	Identifier	pargs		8103963	0					
ANR	8103998	ReturnStatement	"return pcl_text ( arg_data ( pargs ) , uint_arg ( pargs ) , pcs , true ) ;"	1152:4:39941:40001	8103963	1	True				
ANR	8103999	CallExpression	"pcl_text ( arg_data ( pargs ) , uint_arg ( pargs ) , pcs , true )"		8103963	0					
ANR	8104000	Callee	pcl_text		8103963	0					
ANR	8104001	Identifier	pcl_text		8103963	0					
ANR	8104002	ArgumentList	arg_data ( pargs )		8103963	1					
ANR	8104003	Argument	arg_data ( pargs )		8103963	0					
ANR	8104004	CallExpression	arg_data ( pargs )		8103963	0					
ANR	8104005	Callee	arg_data		8103963	0					
ANR	8104006	Identifier	arg_data		8103963	0					
ANR	8104007	ArgumentList	pargs		8103963	1					
ANR	8104008	Argument	pargs		8103963	0					
ANR	8104009	Identifier	pargs		8103963	0					
ANR	8104010	Argument	uint_arg ( pargs )		8103963	1					
ANR	8104011	CallExpression	uint_arg ( pargs )		8103963	0					
ANR	8104012	Callee	uint_arg		8103963	0					
ANR	8104013	Identifier	uint_arg		8103963	0					
ANR	8104014	ArgumentList	pargs		8103963	1					
ANR	8104015	Argument	pargs		8103963	0					
ANR	8104016	Identifier	pargs		8103963	0					
ANR	8104017	Argument	pcs		8103963	2					
ANR	8104018	Identifier	pcs		8103963	0					
ANR	8104019	Argument	true		8103963	3					
ANR	8104020	Identifier	true		8103963	0					
ANR	8104021	ReturnType	static int		8103963	1					
ANR	8104022	Identifier	pcl_transparent_mode		8103963	2					
ANR	8104023	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8103963	3					
ANR	8104024	Parameter	pcl_args_t * pargs	1143:21:39765:39782	8103963	0	True				
ANR	8104025	ParameterType	pcl_args_t *		8103963	0					
ANR	8104026	Identifier	pargs		8103963	1					
ANR	8104027	Parameter	pcl_state_t * pcs	1143:41:39785:39801	8103963	1	True				
ANR	8104028	ParameterType	pcl_state_t *		8103963	0					
ANR	8104029	Identifier	pcs		8103963	1					
ANR	8104030	CFGEntryNode	ENTRY		8103963		True				
ANR	8104031	CFGExitNode	EXIT		8103963		True				
ANR	8104032	Symbol	pcs		8103963						
ANR	8104033	Symbol	pargs		8103963						
ANR	8104034	Symbol	arg_data		8103963						
ANR	8104035	Symbol	true		8103963						
ANR	8104036	Symbol	gs_debug_c		8103963						
ANR	8104037	Symbol	pcs -> memory		8103963						
ANR	8104038	Symbol	* pcs		8103963						
ANR	8104039	Symbol	pcl_text		8103963						
ANR	8104040	Symbol	uint_arg		8103963						
ANR	8104041	Function	pcl_enable_underline	1163:0:40235:40795							
ANR	8104042	FunctionDef	"pcl_enable_underline (pcl_args_t * pargs , pcl_state_t * pcs)"		8104041	0					
ANR	8104043	CompoundStatement		1165:0:40306:40795	8104041	0					
ANR	8104044	IdentifierDeclStatement	int type = int_arg ( pargs ) ;	1166:4:40312:40337	8104041	0	True				
ANR	8104045	IdentifierDecl	type = int_arg ( pargs )		8104041	0					
ANR	8104046	IdentifierDeclType	int		8104041	0					
ANR	8104047	Identifier	type		8104041	1					
ANR	8104048	AssignmentExpression	type = int_arg ( pargs )		8104041	2		=			
ANR	8104049	Identifier	type		8104041	0					
ANR	8104050	CallExpression	int_arg ( pargs )		8104041	1					
ANR	8104051	Callee	int_arg		8104041	0					
ANR	8104052	Identifier	int_arg		8104041	0					
ANR	8104053	ArgumentList	pargs		8104041	1					
ANR	8104054	Argument	pargs		8104041	0					
ANR	8104055	Identifier	pargs		8104041	0					
ANR	8104056	IfStatement	if ( pcs -> underline_enabled )		8104041	1					
ANR	8104057	Condition	pcs -> underline_enabled	1169:8:40407:40428	8104041	0	True				
ANR	8104058	PtrMemberAccess	pcs -> underline_enabled		8104041	0					
ANR	8104059	Identifier	pcs		8104041	0					
ANR	8104060	Identifier	underline_enabled		8104041	1					
ANR	8104061	ReturnStatement	return 0 ;	1170:8:40439:40447	8104041	1	True				
ANR	8104062	PrimaryExpression	0		8104041	0					
ANR	8104063	IfStatement	if ( ( type == 0 ) || ( type == 1 ) )		8104041	2					
ANR	8104064	Condition	( type == 0 ) || ( type == 1 )	1172:8:40458:40483	8104041	0	True				
ANR	8104065	OrExpression	( type == 0 ) || ( type == 1 )		8104041	0		||			
ANR	8104066	EqualityExpression	type == 0		8104041	0		==			
ANR	8104067	Identifier	type		8104041	0					
ANR	8104068	PrimaryExpression	0		8104041	1					
ANR	8104069	EqualityExpression	type == 1		8104041	1		==			
ANR	8104070	Identifier	type		8104041	0					
ANR	8104071	PrimaryExpression	1		8104041	1					
ANR	8104072	CompoundStatement		8:36:179:179	8104041	1					
ANR	8104073	ExpressionStatement	pcs -> underline_floating = false	1173:8:40496:40527	8104041	0	True				
ANR	8104074	AssignmentExpression	pcs -> underline_floating = false		8104041	0		=			
ANR	8104075	PtrMemberAccess	pcs -> underline_floating		8104041	0					
ANR	8104076	Identifier	pcs		8104041	0					
ANR	8104077	Identifier	underline_floating		8104041	1					
ANR	8104078	Identifier	false		8104041	1					
ANR	8104079	ExpressionStatement	pcs -> underline_position = dots ( 5 )	1174:8:40537:40570	8104041	1	True				
ANR	8104080	AssignmentExpression	pcs -> underline_position = dots ( 5 )		8104041	0		=			
ANR	8104081	PtrMemberAccess	pcs -> underline_position		8104041	0					
ANR	8104082	Identifier	pcs		8104041	0					
ANR	8104083	Identifier	underline_position		8104041	1					
ANR	8104084	CallExpression	dots ( 5 )		8104041	1					
ANR	8104085	Callee	dots		8104041	0					
ANR	8104086	Identifier	dots		8104041	0					
ANR	8104087	ArgumentList	5		8104041	1					
ANR	8104088	Argument	5		8104041	0					
ANR	8104089	PrimaryExpression	5		8104041	0					
ANR	8104090	ElseStatement	else		8104041	0					
ANR	8104091	IfStatement	if ( type == 3 )		8104041	0					
ANR	8104092	Condition	type == 3	1175:15:40587:40595	8104041	0	True				
ANR	8104093	EqualityExpression	type == 3		8104041	0		==			
ANR	8104094	Identifier	type		8104041	0					
ANR	8104095	PrimaryExpression	3		8104041	1					
ANR	8104096	CompoundStatement		11:26:291:291	8104041	1					
ANR	8104097	ExpressionStatement	pcs -> underline_floating = true	1176:8:40608:40638	8104041	0	True				
ANR	8104098	AssignmentExpression	pcs -> underline_floating = true		8104041	0		=			
ANR	8104099	PtrMemberAccess	pcs -> underline_floating		8104041	0					
ANR	8104100	Identifier	pcs		8104041	0					
ANR	8104101	Identifier	underline_floating		8104041	1					
ANR	8104102	Identifier	true		8104041	1					
ANR	8104103	ExpressionStatement	pcs -> underline_position = 0.0	1177:8:40648:40677	8104041	1	True				
ANR	8104104	AssignmentExpression	pcs -> underline_position = 0.0		8104041	0		=			
ANR	8104105	PtrMemberAccess	pcs -> underline_position		8104041	0					
ANR	8104106	Identifier	pcs		8104041	0					
ANR	8104107	Identifier	underline_position		8104041	1					
ANR	8104108	PrimaryExpression	0.0		8104041	1					
ANR	8104109	ElseStatement	else		8104041	0					
ANR	8104110	ReturnStatement	return 0 ;	1179:8:40698:40706	8104041	0	True				
ANR	8104111	PrimaryExpression	0		8104041	0					
ANR	8104112	ExpressionStatement	pcs -> underline_enabled = true	1181:4:40713:40742	8104041	3	True				
ANR	8104113	AssignmentExpression	pcs -> underline_enabled = true		8104041	0		=			
ANR	8104114	PtrMemberAccess	pcs -> underline_enabled		8104041	0					
ANR	8104115	Identifier	pcs		8104041	0					
ANR	8104116	Identifier	underline_enabled		8104041	1					
ANR	8104117	Identifier	true		8104041	1					
ANR	8104118	ExpressionStatement	pcs -> underline_start = pcs -> cap	1182:4:40748:40779	8104041	4	True				
ANR	8104119	AssignmentExpression	pcs -> underline_start = pcs -> cap		8104041	0		=			
ANR	8104120	PtrMemberAccess	pcs -> underline_start		8104041	0					
ANR	8104121	Identifier	pcs		8104041	0					
ANR	8104122	Identifier	underline_start		8104041	1					
ANR	8104123	PtrMemberAccess	pcs -> cap		8104041	1					
ANR	8104124	Identifier	pcs		8104041	0					
ANR	8104125	Identifier	cap		8104041	1					
ANR	8104126	ReturnStatement	return 0 ;	1183:4:40785:40793	8104041	5	True				
ANR	8104127	PrimaryExpression	0		8104041	0					
ANR	8104128	ReturnType	static int		8104041	1					
ANR	8104129	Identifier	pcl_enable_underline		8104041	2					
ANR	8104130	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8104041	3					
ANR	8104131	Parameter	pcl_args_t * pargs	1164:21:40267:40284	8104041	0	True				
ANR	8104132	ParameterType	pcl_args_t *		8104041	0					
ANR	8104133	Identifier	pargs		8104041	1					
ANR	8104134	Parameter	pcl_state_t * pcs	1164:41:40287:40303	8104041	1	True				
ANR	8104135	ParameterType	pcl_state_t *		8104041	0					
ANR	8104136	Identifier	pcs		8104041	1					
ANR	8104137	CFGEntryNode	ENTRY		8104041		True				
ANR	8104138	CFGExitNode	EXIT		8104041		True				
ANR	8104139	Symbol	pcs		8104041						
ANR	8104140	Symbol	pcs -> underline_floating		8104041						
ANR	8104141	Symbol	pcs -> underline_position		8104041						
ANR	8104142	Symbol	dots		8104041						
ANR	8104143	Symbol	false		8104041						
ANR	8104144	Symbol	pcs -> underline_start		8104041						
ANR	8104145	Symbol	pcs -> cap		8104041						
ANR	8104146	Symbol	* pcs		8104041						
ANR	8104147	Symbol	type		8104041						
ANR	8104148	Symbol	pcs -> underline_enabled		8104041						
ANR	8104149	Symbol	int_arg		8104041						
ANR	8104150	Symbol	pargs		8104041						
ANR	8104151	Symbol	true		8104041						
ANR	8104152	Function	pcl_disable_underline	1191:0:40844:41200							
ANR	8104153	FunctionDef	"pcl_disable_underline (pcl_args_t * pargs , pcl_state_t * pcs)"		8104152	0					
ANR	8104154	CompoundStatement		1193:0:40916:41200	8104152	0					
ANR	8104155	IfStatement	if ( pcs -> underline_enabled == true )		8104152	0					
ANR	8104156	Condition	pcs -> underline_enabled == true	1197:8:41075:41104	8104152	0	True				
ANR	8104157	EqualityExpression	pcs -> underline_enabled == true		8104152	0		==			
ANR	8104158	PtrMemberAccess	pcs -> underline_enabled		8104152	0					
ANR	8104159	Identifier	pcs		8104152	0					
ANR	8104160	Identifier	underline_enabled		8104152	1					
ANR	8104161	Identifier	true		8104152	1					
ANR	8104162	CompoundStatement		5:40:190:190	8104152	1					
ANR	8104163	ExpressionStatement	pcl_do_underline ( pcs )	1198:8:41117:41138	8104152	0	True				
ANR	8104164	CallExpression	pcl_do_underline ( pcs )		8104152	0					
ANR	8104165	Callee	pcl_do_underline		8104152	0					
ANR	8104166	Identifier	pcl_do_underline		8104152	0					
ANR	8104167	ArgumentList	pcs		8104152	1					
ANR	8104168	Argument	pcs		8104152	0					
ANR	8104169	Identifier	pcs		8104152	0					
ANR	8104170	ExpressionStatement	pcs -> underline_enabled = false	1199:8:41148:41178	8104152	1	True				
ANR	8104171	AssignmentExpression	pcs -> underline_enabled = false		8104152	0		=			
ANR	8104172	PtrMemberAccess	pcs -> underline_enabled		8104152	0					
ANR	8104173	Identifier	pcs		8104152	0					
ANR	8104174	Identifier	underline_enabled		8104152	1					
ANR	8104175	Identifier	false		8104152	1					
ANR	8104176	ReturnStatement	return 0 ;	1201:4:41190:41198	8104152	1	True				
ANR	8104177	PrimaryExpression	0		8104152	0					
ANR	8104178	ReturnType	static int		8104152	1					
ANR	8104179	Identifier	pcl_disable_underline		8104152	2					
ANR	8104180	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8104152	3					
ANR	8104181	Parameter	pcl_args_t * pargs	1192:22:40877:40894	8104152	0	True				
ANR	8104182	ParameterType	pcl_args_t *		8104152	0					
ANR	8104183	Identifier	pargs		8104152	1					
ANR	8104184	Parameter	pcl_state_t * pcs	1192:42:40897:40913	8104152	1	True				
ANR	8104185	ParameterType	pcl_state_t *		8104152	0					
ANR	8104186	Identifier	pcs		8104152	1					
ANR	8104187	CFGEntryNode	ENTRY		8104152		True				
ANR	8104188	CFGExitNode	EXIT		8104152		True				
ANR	8104189	Symbol	pcs		8104152						
ANR	8104190	Symbol	pcs -> underline_enabled		8104152						
ANR	8104191	Symbol	pargs		8104152						
ANR	8104192	Symbol	true		8104152						
ANR	8104193	Symbol	false		8104152						
ANR	8104194	Symbol	* pcs		8104152						
ANR	8104195	Function	pcl_text_parsing_method	1211:0:41315:42042							
ANR	8104196	FunctionDef	"pcl_text_parsing_method (pcl_args_t * pargs , pcl_state_t * pcs)"		8104195	0					
ANR	8104197	CompoundStatement		1213:0:41389:42042	8104195	0					
ANR	8104198	SwitchStatement	switch ( int_arg ( pargs ) )		8104195	0					
ANR	8104199	Condition	int_arg ( pargs )	1214:12:41403:41416	8104195	0	True				
ANR	8104200	CallExpression	int_arg ( pargs )		8104195	0					
ANR	8104201	Callee	int_arg		8104195	0					
ANR	8104202	Identifier	int_arg		8104195	0					
ANR	8104203	ArgumentList	pargs		8104195	1					
ANR	8104204	Argument	pargs		8104195	0					
ANR	8104205	Identifier	pargs		8104195	0					
ANR	8104206	CompoundStatement		2:28:29:29	8104195	1					
ANR	8104207	Label	case 0 :	1216:8:41430:41436	8104195	0	True				
ANR	8104208	Label	case 1 :	1217:8:41446:41452	8104195	1	True				
ANR	8104209	ExpressionStatement	pcs -> text_parsing_method = tpm_0_SBCS	1218:12:41466:41503	8104195	2	True				
ANR	8104210	AssignmentExpression	pcs -> text_parsing_method = tpm_0_SBCS		8104195	0		=			
ANR	8104211	PtrMemberAccess	pcs -> text_parsing_method		8104195	0					
ANR	8104212	Identifier	pcs		8104195	0					
ANR	8104213	Identifier	text_parsing_method		8104195	1					
ANR	8104214	Identifier	tpm_0_SBCS		8104195	1					
ANR	8104215	BreakStatement	break ;	1219:12:41517:41522	8104195	3	True				
ANR	8104216	Label	case 21 :	1221:8:41533:41540	8104195	4	True				
ANR	8104217	ExpressionStatement	pcs -> text_parsing_method = tpm_21_DBCS7	1222:12:41554:41593	8104195	5	True				
ANR	8104218	AssignmentExpression	pcs -> text_parsing_method = tpm_21_DBCS7		8104195	0		=			
ANR	8104219	PtrMemberAccess	pcs -> text_parsing_method		8104195	0					
ANR	8104220	Identifier	pcs		8104195	0					
ANR	8104221	Identifier	text_parsing_method		8104195	1					
ANR	8104222	Identifier	tpm_21_DBCS7		8104195	1					
ANR	8104223	BreakStatement	break ;	1223:12:41607:41612	8104195	6	True				
ANR	8104224	Label	case 31 :	1225:8:41623:41630	8104195	7	True				
ANR	8104225	ExpressionStatement	pcs -> text_parsing_method = tpm_31_sjis	1226:12:41644:41682	8104195	8	True				
ANR	8104226	AssignmentExpression	pcs -> text_parsing_method = tpm_31_sjis		8104195	0		=			
ANR	8104227	PtrMemberAccess	pcs -> text_parsing_method		8104195	0					
ANR	8104228	Identifier	pcs		8104195	0					
ANR	8104229	Identifier	text_parsing_method		8104195	1					
ANR	8104230	Identifier	tpm_31_sjis		8104195	1					
ANR	8104231	BreakStatement	break ;	1227:12:41696:41701	8104195	9	True				
ANR	8104232	Label	case 38 :	1229:8:41712:41719	8104195	10	True				
ANR	8104233	ExpressionStatement	pcs -> text_parsing_method = tpm_38_DBCS8	1230:12:41733:41772	8104195	11	True				
ANR	8104234	AssignmentExpression	pcs -> text_parsing_method = tpm_38_DBCS8		8104195	0		=			
ANR	8104235	PtrMemberAccess	pcs -> text_parsing_method		8104195	0					
ANR	8104236	Identifier	pcs		8104195	0					
ANR	8104237	Identifier	text_parsing_method		8104195	1					
ANR	8104238	Identifier	tpm_38_DBCS8		8104195	1					
ANR	8104239	BreakStatement	break ;	1231:12:41786:41791	8104195	12	True				
ANR	8104240	Label	case 83 :	1233:8:41802:41809	8104195	13	True				
ANR	8104241	ExpressionStatement	pcs -> text_parsing_method = tpm_83_utf8	1234:12:41823:41861	8104195	14	True				
ANR	8104242	AssignmentExpression	pcs -> text_parsing_method = tpm_83_utf8		8104195	0		=			
ANR	8104243	PtrMemberAccess	pcs -> text_parsing_method		8104195	0					
ANR	8104244	Identifier	pcs		8104195	0					
ANR	8104245	Identifier	text_parsing_method		8104195	1					
ANR	8104246	Identifier	tpm_83_utf8		8104195	1					
ANR	8104247	BreakStatement	break ;	1235:12:41875:41880	8104195	15	True				
ANR	8104248	Label	case 1008 :	1237:8:41891:41900	8104195	16	True				
ANR	8104249	ExpressionStatement	pcs -> text_parsing_method = tpm_1008_utf8	1238:12:41914:41954	8104195	17	True				
ANR	8104250	AssignmentExpression	pcs -> text_parsing_method = tpm_1008_utf8		8104195	0		=			
ANR	8104251	PtrMemberAccess	pcs -> text_parsing_method		8104195	0					
ANR	8104252	Identifier	pcs		8104195	0					
ANR	8104253	Identifier	text_parsing_method		8104195	1					
ANR	8104254	Identifier	tpm_1008_utf8		8104195	1					
ANR	8104255	BreakStatement	break ;	1239:12:41968:41973	8104195	18	True				
ANR	8104256	Label	default :	1241:8:41984:41991	8104195	19	True				
ANR	8104257	Identifier	default		8104195	0					
ANR	8104258	ReturnStatement	return e_Range ;	1242:12:42005:42019	8104195	20	True				
ANR	8104259	Identifier	e_Range		8104195	0					
ANR	8104260	ReturnStatement	return 0 ;	1245:4:42032:42040	8104195	1	True				
ANR	8104261	PrimaryExpression	0		8104195	0					
ANR	8104262	ReturnType	static int		8104195	1					
ANR	8104263	Identifier	pcl_text_parsing_method		8104195	2					
ANR	8104264	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8104195	3					
ANR	8104265	Parameter	pcl_args_t * pargs	1212:24:41350:41367	8104195	0	True				
ANR	8104266	ParameterType	pcl_args_t *		8104195	0					
ANR	8104267	Identifier	pargs		8104195	1					
ANR	8104268	Parameter	pcl_state_t * pcs	1212:44:41370:41386	8104195	1	True				
ANR	8104269	ParameterType	pcl_state_t *		8104195	0					
ANR	8104270	Identifier	pcs		8104195	1					
ANR	8104271	CFGEntryNode	ENTRY		8104195		True				
ANR	8104272	CFGExitNode	EXIT		8104195		True				
ANR	8104273	Symbol	pcs -> text_parsing_method		8104195						
ANR	8104274	Symbol	e_Range		8104195						
ANR	8104275	Symbol	pcs		8104195						
ANR	8104276	Symbol	int_arg		8104195						
ANR	8104277	Symbol	tpm_38_DBCS8		8104195						
ANR	8104278	Symbol	pargs		8104195						
ANR	8104279	Symbol	tpm_31_sjis		8104195						
ANR	8104280	Symbol	* pcs		8104195						
ANR	8104281	Symbol	tpm_21_DBCS7		8104195						
ANR	8104282	Symbol	tpm_83_utf8		8104195						
ANR	8104283	Symbol	tpm_0_SBCS		8104195						
ANR	8104284	Symbol	tpm_1008_utf8		8104195						
ANR	8104285	Function	pcl_text_path_direction	1255:0:42179:42485							
ANR	8104286	FunctionDef	"pcl_text_path_direction (pcl_args_t * pargs , pcl_state_t * pcs)"		8104285	0					
ANR	8104287	CompoundStatement		1257:0:42253:42485	8104285	0					
ANR	8104288	IdentifierDeclStatement	int direction = int_arg ( pargs ) ;	1258:4:42259:42289	8104285	0	True				
ANR	8104289	IdentifierDecl	direction = int_arg ( pargs )		8104285	0					
ANR	8104290	IdentifierDeclType	int		8104285	0					
ANR	8104291	Identifier	direction		8104285	1					
ANR	8104292	AssignmentExpression	direction = int_arg ( pargs )		8104285	2		=			
ANR	8104293	Identifier	direction		8104285	0					
ANR	8104294	CallExpression	int_arg ( pargs )		8104285	1					
ANR	8104295	Callee	int_arg		8104285	0					
ANR	8104296	Identifier	int_arg		8104285	0					
ANR	8104297	ArgumentList	pargs		8104285	1					
ANR	8104298	Argument	pargs		8104285	0					
ANR	8104299	Identifier	pargs		8104285	0					
ANR	8104300	SwitchStatement	switch ( direction )		8104285	1					
ANR	8104301	Condition	direction	1260:12:42304:42312	8104285	0	True				
ANR	8104302	Identifier	direction		8104285	0					
ANR	8104303	CompoundStatement		4:23:61:61	8104285	1					
ANR	8104304	Label	case 0 :	1262:8:42326:42332	8104285	0	True				
ANR	8104305	Label	case 1 :	1263:8:42342:42348	8104285	1	True				
ANR	8104306	Statement	case	1264:8:42358:42361	8104285	2	True				
ANR	8104307	Statement	-	1264:13:42363:42363	8104285	3	True				
ANR	8104308	Label	1 :	1264:14:42364:42365	8104285	4	True				
ANR	8104309	BreakStatement	break ;	1265:12:42379:42384	8104285	5	True				
ANR	8104310	Label	default :	1267:8:42395:42402	8104285	6	True				
ANR	8104311	Identifier	default		8104285	0					
ANR	8104312	ReturnStatement	return e_Range ;	1268:12:42416:42430	8104285	7	True				
ANR	8104313	Identifier	e_Range		8104285	0					
ANR	8104314	ExpressionStatement	pcs -> text_path = direction	1271:4:42443:42469	8104285	2	True				
ANR	8104315	AssignmentExpression	pcs -> text_path = direction		8104285	0		=			
ANR	8104316	PtrMemberAccess	pcs -> text_path		8104285	0					
ANR	8104317	Identifier	pcs		8104285	0					
ANR	8104318	Identifier	text_path		8104285	1					
ANR	8104319	Identifier	direction		8104285	1					
ANR	8104320	ReturnStatement	return 0 ;	1272:4:42475:42483	8104285	3	True				
ANR	8104321	PrimaryExpression	0		8104285	0					
ANR	8104322	ReturnType	static int		8104285	1					
ANR	8104323	Identifier	pcl_text_path_direction		8104285	2					
ANR	8104324	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8104285	3					
ANR	8104325	Parameter	pcl_args_t * pargs	1256:24:42214:42231	8104285	0	True				
ANR	8104326	ParameterType	pcl_args_t *		8104285	0					
ANR	8104327	Identifier	pargs		8104285	1					
ANR	8104328	Parameter	pcl_state_t * pcs	1256:44:42234:42250	8104285	1	True				
ANR	8104329	ParameterType	pcl_state_t *		8104285	0					
ANR	8104330	Identifier	pcs		8104285	1					
ANR	8104331	CFGEntryNode	ENTRY		8104285		True				
ANR	8104332	CFGExitNode	EXIT		8104285		True				
ANR	8104333	Symbol	e_Range		8104285						
ANR	8104334	Symbol	pcs		8104285						
ANR	8104335	Symbol	int_arg		8104285						
ANR	8104336	Symbol	pargs		8104285						
ANR	8104337	Symbol	pcs -> text_path		8104285						
ANR	8104338	Symbol	* pcs		8104285						
ANR	8104339	Symbol	direction		8104285						
ANR	8104340	Function	pctext_do_registration	1276:0:42523:43637							
ANR	8104341	FunctionDef	"pctext_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8104340	0					
ANR	8104342	CompoundStatement		1279:0:42638:43637	8104340	0					
ANR	8104343	ExpressionStatement	"DEFINE_CONTROL ( 0 , ""(plain char)"" , pcl_plain_char )"	1281:4:42672:42721	8104340	0	True				
ANR	8104344	CallExpression	"DEFINE_CONTROL ( 0 , ""(plain char)"" , pcl_plain_char )"		8104340	0					
ANR	8104345	Callee	DEFINE_CONTROL		8104340	0					
ANR	8104346	Identifier	DEFINE_CONTROL		8104340	0					
ANR	8104347	ArgumentList	0		8104340	1					
ANR	8104348	Argument	0		8104340	0					
ANR	8104349	PrimaryExpression	0		8104340	0					
ANR	8104350	Argument	"""(plain char)"""		8104340	1					
ANR	8104351	PrimaryExpression	"""(plain char)"""		8104340	0					
ANR	8104352	Argument	pcl_plain_char		8104340	2					
ANR	8104353	Identifier	pcl_plain_char		8104340	0					
ANR	8104354	Statement	DEFINE_CLASS	1283:4:42728:42739	8104340	1	True				
ANR	8104355	Statement	(	1283:16:42740:42740	8104340	2	True				
ANR	8104356	Statement	'&'	1283:17:42741:42743	8104340	3	True				
ANR	8104357	Statement	)	1283:20:42744:42744	8104340	4	True				
ANR	8104358	CompoundStatement		5:22:107:107	8104340	5					
ANR	8104359	Statement	'p'	1284:8:42756:42758	8104340	0	True				
ANR	8104360	Statement	","	1284:11:42759:42759	8104340	1	True				
ANR	8104361	Statement	'X'	1284:13:42761:42763	8104340	2	True				
ANR	8104362	Statement	","	1284:16:42764:42764	8104340	3	True				
ANR	8104363	Statement	PCL_COMMAND	1285:12:42778:42788	8104340	4	True				
ANR	8104364	Statement	(	1285:23:42789:42789	8104340	5	True				
ANR	8104365	Statement	"""Transparent Mode"""	1285:24:42790:42807	8104340	6	True				
ANR	8104366	Statement	","	1285:42:42808:42808	8104340	7	True				
ANR	8104367	Statement	pcl_transparent_mode	1285:44:42810:42829	8104340	8	True				
ANR	8104368	Statement	","	1285:64:42830:42830	8104340	9	True				
ANR	8104369	Statement	pca_bytes	1285:66:42832:42840	8104340	10	True				
ANR	8104370	Statement	)	1285:75:42841:42841	8104340	11	True				
ANR	8104371	Statement	","	1286:5:42848:42848	8104340	6	True				
ANR	8104372	CompoundStatement		8:7:211:211	8104340	7					
ANR	8104373	Statement	'd'	1287:8:42860:42862	8104340	0	True				
ANR	8104374	Statement	","	1287:11:42863:42863	8104340	1	True				
ANR	8104375	Statement	'D'	1287:13:42865:42867	8104340	2	True				
ANR	8104376	Statement	","	1287:16:42868:42868	8104340	3	True				
ANR	8104377	Statement	PCL_COMMAND	1288:12:42882:42892	8104340	4	True				
ANR	8104378	Statement	(	1288:23:42893:42893	8104340	5	True				
ANR	8104379	Statement	"""Enable Underline"""	1288:24:42894:42911	8104340	6	True				
ANR	8104380	Statement	","	1288:42:42912:42912	8104340	7	True				
ANR	8104381	Statement	pcl_enable_underline	1289:24:42938:42957	8104340	8	True				
ANR	8104382	Statement	","	1289:44:42958:42958	8104340	9	True				
ANR	8104383	Statement	pca_neg_ignore	1289:46:42960:42973	8104340	10	True				
ANR	8104384	Statement	|	1289:61:42975:42975	8104340	11	True				
ANR	8104385	Statement	pca_big_ignore	1289:63:42977:42990	8104340	12	True				
ANR	8104386	Statement	)	1289:77:42991:42991	8104340	13	True				
ANR	8104387	Statement	","	1290:5:42998:42998	8104340	8	True				
ANR	8104388	CompoundStatement		12:7:361:361	8104340	9					
ANR	8104389	Statement	'd'	1291:8:43010:43012	8104340	0	True				
ANR	8104390	Statement	","	1291:11:43013:43013	8104340	1	True				
ANR	8104391	Statement	'@'	1291:13:43015:43017	8104340	2	True				
ANR	8104392	Statement	","	1291:16:43018:43018	8104340	3	True				
ANR	8104393	Statement	PCL_COMMAND	1292:12:43032:43042	8104340	4	True				
ANR	8104394	Statement	(	1292:23:43043:43043	8104340	5	True				
ANR	8104395	Statement	"""Disable Underline"""	1292:24:43044:43062	8104340	6	True				
ANR	8104396	Statement	","	1292:43:43063:43063	8104340	7	True				
ANR	8104397	Statement	pcl_disable_underline	1293:24:43089:43109	8104340	8	True				
ANR	8104398	Statement	","	1293:45:43110:43110	8104340	9	True				
ANR	8104399	Statement	pca_neg_ignore	1294:24:43136:43149	8104340	10	True				
ANR	8104400	Statement	|	1294:39:43151:43151	8104340	11	True				
ANR	8104401	Statement	pca_big_ignore	1294:41:43153:43166	8104340	12	True				
ANR	8104402	Statement	)	1294:55:43167:43167	8104340	13	True				
ANR	8104403	Statement	","	1295:5:43174:43174	8104340	10	True				
ANR	8104404	Statement	END_CLASS	1295:7:43176:43184	8104340	11	True				
ANR	8104405	Statement	DEFINE_CLASS	1295:17:43186:43197	8104340	12	True				
ANR	8104406	Statement	(	1295:29:43198:43198	8104340	13	True				
ANR	8104407	Statement	'&'	1295:30:43199:43201	8104340	14	True				
ANR	8104408	Statement	)	1295:33:43202:43202	8104340	15	True				
ANR	8104409	CompoundStatement		17:35:565:565	8104340	16					
ANR	8104410	Statement	't'	1296:8:43214:43216	8104340	0	True				
ANR	8104411	Statement	","	1296:11:43217:43217	8104340	1	True				
ANR	8104412	Statement	'P'	1296:13:43219:43221	8104340	2	True				
ANR	8104413	Statement	","	1296:16:43222:43222	8104340	3	True				
ANR	8104414	Statement	PCL_COMMAND	1297:12:43236:43246	8104340	4	True				
ANR	8104415	Statement	(	1297:23:43247:43247	8104340	5	True				
ANR	8104416	Statement	"""Text Parsing Method"""	1297:24:43248:43268	8104340	6	True				
ANR	8104417	Statement	","	1297:45:43269:43269	8104340	7	True				
ANR	8104418	Statement	pcl_text_parsing_method	1298:24:43295:43317	8104340	8	True				
ANR	8104419	Statement	","	1298:47:43318:43318	8104340	9	True				
ANR	8104420	Statement	pca_neg_error	1299:24:43344:43356	8104340	10	True				
ANR	8104421	Statement	|	1299:38:43358:43358	8104340	11	True				
ANR	8104422	Statement	pca_big_error	1299:40:43360:43372	8104340	12	True				
ANR	8104423	Statement	)	1299:53:43373:43373	8104340	13	True				
ANR	8104424	Statement	","	1300:5:43380:43380	8104340	17	True				
ANR	8104425	CompoundStatement		22:7:743:743	8104340	18					
ANR	8104426	Statement	'c'	1301:8:43392:43394	8104340	0	True				
ANR	8104427	Statement	","	1301:11:43395:43395	8104340	1	True				
ANR	8104428	Statement	'T'	1301:13:43397:43399	8104340	2	True				
ANR	8104429	Statement	","	1301:16:43400:43400	8104340	3	True				
ANR	8104430	Statement	PCL_COMMAND	1302:12:43414:43424	8104340	4	True				
ANR	8104431	Statement	(	1302:23:43425:43425	8104340	5	True				
ANR	8104432	Statement	"""Text Path Direction"""	1302:24:43426:43446	8104340	6	True				
ANR	8104433	Statement	","	1302:45:43447:43447	8104340	7	True				
ANR	8104434	Statement	pcl_text_path_direction	1303:24:43473:43495	8104340	8	True				
ANR	8104435	Statement	","	1303:47:43496:43496	8104340	9	True				
ANR	8104436	Statement	pca_neg_ok	1303:49:43498:43507	8104340	10	True				
ANR	8104437	Statement	|	1303:60:43509:43509	8104340	11	True				
ANR	8104438	Statement	pca_big_error	1303:62:43511:43523	8104340	12	True				
ANR	8104439	Statement	)	1303:75:43524:43524	8104340	13	True				
ANR	8104440	Statement	","	1304:5:43531:43531	8104340	19	True				
ANR	8104441	IdentifierDeclStatement	"END_CLASS DEFINE_CONTROL ( 1 , ""(plain char)"" , pcl_plain_char ) ;"	1304:7:43533:43592	8104340	20	True				
ANR	8104442	IdentifierDecl	"DEFINE_CONTROL ( 1 , ""(plain char)"" , pcl_plain_char )"		8104340	0					
ANR	8104443	IdentifierDeclType	END_CLASS		8104340	0					
ANR	8104444	Identifier	DEFINE_CONTROL		8104340	1					
ANR	8104445	Expression	"1 , ""(plain char)"" , pcl_plain_char"		8104340	2					
ANR	8104446	PrimaryExpression	1		8104340	0					
ANR	8104447	Expression	"""(plain char)"" , pcl_plain_char"		8104340	1					
ANR	8104448	PrimaryExpression	"""(plain char)"""		8104340	0					
ANR	8104449	Identifier	pcl_plain_char		8104340	1					
ANR	8104450	ReturnStatement	return 0 ;	1306:4:43627:43635	8104340	21	True				
ANR	8104451	PrimaryExpression	0		8104340	0					
ANR	8104452	ReturnType	static int		8104340	1					
ANR	8104453	Identifier	pctext_do_registration		8104340	2					
ANR	8104454	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8104340	3					
ANR	8104455	Parameter	pcl_parser_state_t * pcl_parser_state	1277:23:42557:42593	8104340	0	True				
ANR	8104456	ParameterType	pcl_parser_state_t *		8104340	0					
ANR	8104457	Identifier	pcl_parser_state		8104340	1					
ANR	8104458	Parameter	gs_memory_t * mem	1278:23:42619:42635	8104340	1	True				
ANR	8104459	ParameterType	gs_memory_t *		8104340	0					
ANR	8104460	Identifier	mem		8104340	1					
ANR	8104461	CFGEntryNode	ENTRY		8104340		True				
ANR	8104462	CFGExitNode	EXIT		8104340		True				
ANR	8104463	Symbol	DEFINE_CONTROL		8104340						
ANR	8104464	Symbol	pcl_plain_char		8104340						
ANR	8104465	Symbol	mem		8104340						
ANR	8104466	Symbol	pcl_parser_state		8104340						
ANR	8104467	Function	pctext_do_reset	1309:0:43640:44081							
ANR	8104468	FunctionDef	"pctext_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8104467	0					
ANR	8104469	CompoundStatement		1311:0:43709:44081	8104467	0					
ANR	8104470	Statement	static	1312:4:43715:43720	8104467	0	True				
ANR	8104471	IdentifierDeclStatement	const uint mask = ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay ) ;	1312:11:43722:43829	8104467	1	True				
ANR	8104472	IdentifierDecl	mask = ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay )		8104467	0					
ANR	8104473	IdentifierDeclType	const uint		8104467	0					
ANR	8104474	Identifier	mask		8104467	1					
ANR	8104475	AssignmentExpression	mask = ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay )		8104467	2		=			
ANR	8104476	Identifier	mask		8104467	0					
ANR	8104477	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay		8104467	1		|			
ANR	8104478	Identifier	pcl_reset_initial		8104467	0					
ANR	8104479	InclusiveOrExpression	pcl_reset_printer | pcl_reset_overlay		8104467	1		|			
ANR	8104480	Identifier	pcl_reset_printer		8104467	0					
ANR	8104481	Identifier	pcl_reset_overlay		8104467	1					
ANR	8104482	IfStatement	if ( ( type & mask ) != 0 )		8104467	2					
ANR	8104483	Condition	( type & mask ) != 0	1315:8:43840:43857	8104467	0	True				
ANR	8104484	EqualityExpression	( type & mask ) != 0		8104467	0		!=			
ANR	8104485	BitAndExpression	type & mask		8104467	0		&			
ANR	8104486	Identifier	type		8104467	0					
ANR	8104487	Identifier	mask		8104467	1					
ANR	8104488	PrimaryExpression	0		8104467	1					
ANR	8104489	CompoundStatement		5:28:150:150	8104467	1					
ANR	8104490	ExpressionStatement	pcs -> underline_enabled = false	1316:8:43870:43900	8104467	0	True				
ANR	8104491	AssignmentExpression	pcs -> underline_enabled = false		8104467	0		=			
ANR	8104492	PtrMemberAccess	pcs -> underline_enabled		8104467	0					
ANR	8104493	Identifier	pcs		8104467	0					
ANR	8104494	Identifier	underline_enabled		8104467	1					
ANR	8104495	Identifier	false		8104467	1					
ANR	8104496	ExpressionStatement	pcs -> last_was_BS = false	1317:8:43910:43934	8104467	1	True				
ANR	8104497	AssignmentExpression	pcs -> last_was_BS = false		8104467	0		=			
ANR	8104498	PtrMemberAccess	pcs -> last_was_BS		8104467	0					
ANR	8104499	Identifier	pcs		8104467	0					
ANR	8104500	Identifier	last_was_BS		8104467	1					
ANR	8104501	Identifier	false		8104467	1					
ANR	8104502	ExpressionStatement	pcs -> last_width = inch2coord ( 1.0 / 10.0 )	1318:8:43944:43984	8104467	2	True				
ANR	8104503	AssignmentExpression	pcs -> last_width = inch2coord ( 1.0 / 10.0 )		8104467	0		=			
ANR	8104504	PtrMemberAccess	pcs -> last_width		8104467	0					
ANR	8104505	Identifier	pcs		8104467	0					
ANR	8104506	Identifier	last_width		8104467	1					
ANR	8104507	CallExpression	inch2coord ( 1.0 / 10.0 )		8104467	1					
ANR	8104508	Callee	inch2coord		8104467	0					
ANR	8104509	Identifier	inch2coord		8104467	0					
ANR	8104510	ArgumentList	1.0 / 10.0		8104467	1					
ANR	8104511	Argument	1.0 / 10.0		8104467	0					
ANR	8104512	MultiplicativeExpression	1.0 / 10.0		8104467	0		/			
ANR	8104513	PrimaryExpression	1.0		8104467	0					
ANR	8104514	PrimaryExpression	10.0		8104467	1					
ANR	8104515	ExpressionStatement	pcs -> text_parsing_method = tpm_0_SBCS	1319:8:43994:44031	8104467	3	True				
ANR	8104516	AssignmentExpression	pcs -> text_parsing_method = tpm_0_SBCS		8104467	0		=			
ANR	8104517	PtrMemberAccess	pcs -> text_parsing_method		8104467	0					
ANR	8104518	Identifier	pcs		8104467	0					
ANR	8104519	Identifier	text_parsing_method		8104467	1					
ANR	8104520	Identifier	tpm_0_SBCS		8104467	1					
ANR	8104521	ExpressionStatement	pcs -> text_path = 0	1320:8:44041:44059	8104467	4	True				
ANR	8104522	AssignmentExpression	pcs -> text_path = 0		8104467	0		=			
ANR	8104523	PtrMemberAccess	pcs -> text_path		8104467	0					
ANR	8104524	Identifier	pcs		8104467	0					
ANR	8104525	Identifier	text_path		8104467	1					
ANR	8104526	PrimaryExpression	0		8104467	1					
ANR	8104527	ReturnStatement	return 0 ;	1322:4:44071:44079	8104467	3	True				
ANR	8104528	PrimaryExpression	0		8104467	0					
ANR	8104529	ReturnType	static int		8104467	1					
ANR	8104530	Identifier	pctext_do_reset		8104467	2					
ANR	8104531	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8104467	3					
ANR	8104532	Parameter	pcl_state_t * pcs	1310:16:43667:43683	8104467	0	True				
ANR	8104533	ParameterType	pcl_state_t *		8104467	0					
ANR	8104534	Identifier	pcs		8104467	1					
ANR	8104535	Parameter	pcl_reset_type_t type	1310:35:43686:43706	8104467	1	True				
ANR	8104536	ParameterType	pcl_reset_type_t		8104467	0					
ANR	8104537	Identifier	type		8104467	1					
ANR	8104538	CFGEntryNode	ENTRY		8104467		True				
ANR	8104539	CFGExitNode	EXIT		8104467		True				
ANR	8104540	Symbol	pcs -> text_parsing_method		8104467						
ANR	8104541	Symbol	pcs		8104467						
ANR	8104542	Symbol	pcs -> last_was_BS		8104467						
ANR	8104543	Symbol	false		8104467						
ANR	8104544	Symbol	pcl_reset_printer		8104467						
ANR	8104545	Symbol	* pcs		8104467						
ANR	8104546	Symbol	pcs -> last_width		8104467						
ANR	8104547	Symbol	type		8104467						
ANR	8104548	Symbol	tpm_0_SBCS		8104467						
ANR	8104549	Symbol	inch2coord		8104467						
ANR	8104550	Symbol	pcs -> underline_enabled		8104467						
ANR	8104551	Symbol	pcs -> text_path		8104467						
ANR	8104552	Symbol	pcl_reset_overlay		8104467						
ANR	8104553	Symbol	pcl_reset_initial		8104467						
ANR	8104554	Symbol	mask		8104467						
ANR	8104555	DeclStmt									
ANR	8104556	Decl							const pcl_init_t	const pcl_init_t	pctext_init
