command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10646051	File	data/converged/CVE-2018-16863_ghostpdl/usersys.c								
ANR	10646052	Function	cupsEncryption	72:0:2031:2278							
ANR	10646053	FunctionDef	cupsEncryption ()		10646052	0					
ANR	10646054	CompoundStatement		74:0:2102:2278	10646052	0					
ANR	10646055	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	75:2:2106:2142	10646052	0	True				
ANR	10646056	IdentifierDecl	* cg = _cupsGlobals ( )		10646052	0					
ANR	10646057	IdentifierDeclType	_cups_globals_t *		10646052	0					
ANR	10646058	Identifier	cg		10646052	1					
ANR	10646059	AssignmentExpression	* cg = _cupsGlobals ( )		10646052	2		=			
ANR	10646060	Identifier	cg		10646052	0					
ANR	10646061	CallExpression	_cupsGlobals ( )		10646052	1					
ANR	10646062	Callee	_cupsGlobals		10646052	0					
ANR	10646063	Identifier	_cupsGlobals		10646052	0					
ANR	10646064	ArgumentList			10646052	1					
ANR	10646065	IfStatement	if ( cg -> encryption == ( http_encryption_t ) - 1 )		10646052	1					
ANR	10646066	Condition	cg -> encryption == ( http_encryption_t ) - 1	78:6:2185:2223	10646052	0	True				
ANR	10646067	EqualityExpression	cg -> encryption == ( http_encryption_t ) - 1		10646052	0		==			
ANR	10646068	PtrMemberAccess	cg -> encryption		10646052	0					
ANR	10646069	Identifier	cg		10646052	0					
ANR	10646070	Identifier	encryption		10646052	1					
ANR	10646071	CastExpression	( http_encryption_t ) - 1		10646052	1					
ANR	10646072	CastTarget	http_encryption_t		10646052	0					
ANR	10646073	UnaryOperationExpression	- 1		10646052	1					
ANR	10646074	UnaryOperator	-		10646052	0					
ANR	10646075	PrimaryExpression	1		10646052	1					
ANR	10646076	ExpressionStatement	_cupsSetDefaults ( )	79:4:2230:2248	10646052	1	True				
ANR	10646077	CallExpression	_cupsSetDefaults ( )		10646052	0					
ANR	10646078	Callee	_cupsSetDefaults		10646052	0					
ANR	10646079	Identifier	_cupsSetDefaults		10646052	0					
ANR	10646080	ArgumentList			10646052	1					
ANR	10646081	ReturnStatement	return ( cg -> encryption ) ;	81:2:2253:2276	10646052	2	True				
ANR	10646082	PtrMemberAccess	cg -> encryption		10646052	0					
ANR	10646083	Identifier	cg		10646052	0					
ANR	10646084	Identifier	encryption		10646052	1					
ANR	10646085	ReturnType	http_encryption_t		10646052	1					
ANR	10646086	Identifier	cupsEncryption		10646052	2					
ANR	10646087	ParameterList			10646052	3					
ANR	10646088	CFGEntryNode	ENTRY		10646052		True				
ANR	10646089	CFGExitNode	EXIT		10646052		True				
ANR	10646090	Symbol	cg -> encryption		10646052						
ANR	10646091	Symbol	cg		10646052						
ANR	10646092	Symbol	_cupsGlobals		10646052						
ANR	10646093	Symbol	* cg		10646052						
ANR	10646094	Function	cupsGetPassword	97:0:2757:3004							
ANR	10646095	FunctionDef	cupsGetPassword (const char * prompt)		10646094	0					
ANR	10646096	CompoundStatement		99:0:2852:3004	10646094	0					
ANR	10646097	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	100:2:2856:2892	10646094	0	True				
ANR	10646098	IdentifierDecl	* cg = _cupsGlobals ( )		10646094	0					
ANR	10646099	IdentifierDeclType	_cups_globals_t *		10646094	0					
ANR	10646100	Identifier	cg		10646094	1					
ANR	10646101	AssignmentExpression	* cg = _cupsGlobals ( )		10646094	2		=			
ANR	10646102	Identifier	cg		10646094	0					
ANR	10646103	CallExpression	_cupsGlobals ( )		10646094	1					
ANR	10646104	Callee	_cupsGlobals		10646094	0					
ANR	10646105	Identifier	_cupsGlobals		10646094	0					
ANR	10646106	ArgumentList			10646094	1					
ANR	10646107	ReturnStatement	"return ( ( cg -> password_cb ) ( prompt , NULL , NULL , NULL , cg -> password_data ) ) ;"	103:2:2931:3002	10646094	1	True				
ANR	10646108	CallExpression	"( cg -> password_cb ) ( prompt , NULL , NULL , NULL , cg -> password_data )"		10646094	0					
ANR	10646109	Callee	cg -> password_cb		10646094	0					
ANR	10646110	PtrMemberAccess	cg -> password_cb		10646094	0					
ANR	10646111	Identifier	cg		10646094	0					
ANR	10646112	Identifier	password_cb		10646094	1					
ANR	10646113	ArgumentList	prompt		10646094	1					
ANR	10646114	Argument	prompt		10646094	0					
ANR	10646115	Identifier	prompt		10646094	0					
ANR	10646116	Argument	NULL		10646094	1					
ANR	10646117	Identifier	NULL		10646094	0					
ANR	10646118	Argument	NULL		10646094	2					
ANR	10646119	Identifier	NULL		10646094	0					
ANR	10646120	Argument	NULL		10646094	3					
ANR	10646121	Identifier	NULL		10646094	0					
ANR	10646122	Argument	cg -> password_data		10646094	4					
ANR	10646123	PtrMemberAccess	cg -> password_data		10646094	0					
ANR	10646124	Identifier	cg		10646094	0					
ANR	10646125	Identifier	password_data		10646094	1					
ANR	10646126	ReturnType	const char *		10646094	1					
ANR	10646127	Identifier	cupsGetPassword		10646094	2					
ANR	10646128	ParameterList	const char * prompt		10646094	3					
ANR	10646129	Parameter	const char * prompt	98:16:2808:2825	10646094	0	True				
ANR	10646130	ParameterType	const char *		10646094	0					
ANR	10646131	Identifier	prompt		10646094	1					
ANR	10646132	CFGEntryNode	ENTRY		10646094		True				
ANR	10646133	CFGExitNode	EXIT		10646094		True				
ANR	10646134	Symbol	NULL		10646094						
ANR	10646135	Symbol	cg		10646094						
ANR	10646136	Symbol	cg -> password_cb		10646094						
ANR	10646137	Symbol	_cupsGlobals		10646094						
ANR	10646138	Symbol	* cg		10646094						
ANR	10646139	Symbol	prompt		10646094						
ANR	10646140	Symbol	cg -> password_data		10646094						
ANR	10646141	Function	cupsGetPassword2	122:0:3580:4075							
ANR	10646142	FunctionDef	"cupsGetPassword2 (const char * prompt , http_t * http , const char * method , const char * resource)"		10646141	0					
ANR	10646143	CompoundStatement		127:0:3876:4075	10646141	0					
ANR	10646144	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	128:2:3880:3916	10646141	0	True				
ANR	10646145	IdentifierDecl	* cg = _cupsGlobals ( )		10646141	0					
ANR	10646146	IdentifierDeclType	_cups_globals_t *		10646141	0					
ANR	10646147	Identifier	cg		10646141	1					
ANR	10646148	AssignmentExpression	* cg = _cupsGlobals ( )		10646141	2		=			
ANR	10646149	Identifier	cg		10646141	0					
ANR	10646150	CallExpression	_cupsGlobals ( )		10646141	1					
ANR	10646151	Callee	_cupsGlobals		10646141	0					
ANR	10646152	Identifier	_cupsGlobals		10646141	0					
ANR	10646153	ArgumentList			10646141	1					
ANR	10646154	IfStatement	if ( ! http )		10646141	1					
ANR	10646155	Condition	! http	131:6:3959:3963	10646141	0	True				
ANR	10646156	UnaryOperationExpression	! http		10646141	0					
ANR	10646157	UnaryOperator	!		10646141	0					
ANR	10646158	Identifier	http		10646141	1					
ANR	10646159	ExpressionStatement	http = _cupsConnect ( )	132:4:3970:3991	10646141	1	True				
ANR	10646160	AssignmentExpression	http = _cupsConnect ( )		10646141	0		=			
ANR	10646161	Identifier	http		10646141	0					
ANR	10646162	CallExpression	_cupsConnect ( )		10646141	1					
ANR	10646163	Callee	_cupsConnect		10646141	0					
ANR	10646164	Identifier	_cupsConnect		10646141	0					
ANR	10646165	ArgumentList			10646141	1					
ANR	10646166	ReturnStatement	"return ( ( cg -> password_cb ) ( prompt , http , method , resource , cg -> password_data ) ) ;"	134:2:3996:4073	10646141	2	True				
ANR	10646167	CallExpression	"( cg -> password_cb ) ( prompt , http , method , resource , cg -> password_data )"		10646141	0					
ANR	10646168	Callee	cg -> password_cb		10646141	0					
ANR	10646169	PtrMemberAccess	cg -> password_cb		10646141	0					
ANR	10646170	Identifier	cg		10646141	0					
ANR	10646171	Identifier	password_cb		10646141	1					
ANR	10646172	ArgumentList	prompt		10646141	1					
ANR	10646173	Argument	prompt		10646141	0					
ANR	10646174	Identifier	prompt		10646141	0					
ANR	10646175	Argument	http		10646141	1					
ANR	10646176	Identifier	http		10646141	0					
ANR	10646177	Argument	method		10646141	2					
ANR	10646178	Identifier	method		10646141	0					
ANR	10646179	Argument	resource		10646141	3					
ANR	10646180	Identifier	resource		10646141	0					
ANR	10646181	Argument	cg -> password_data		10646141	4					
ANR	10646182	PtrMemberAccess	cg -> password_data		10646141	0					
ANR	10646183	Identifier	cg		10646141	0					
ANR	10646184	Identifier	password_data		10646141	1					
ANR	10646185	ReturnType	const char *		10646141	1					
ANR	10646186	Identifier	cupsGetPassword2		10646141	2					
ANR	10646187	ParameterList	"const char * prompt , http_t * http , const char * method , const char * resource"		10646141	3					
ANR	10646188	Parameter	const char * prompt	123:17:3632:3649	10646141	0	True				
ANR	10646189	ParameterType	const char *		10646141	0					
ANR	10646190	Identifier	prompt		10646141	1					
ANR	10646191	Parameter	http_t * http	124:3:3679:3694	10646141	1	True				
ANR	10646192	ParameterType	http_t *		10646141	0					
ANR	10646193	Identifier	http		10646141	1					
ANR	10646194	Parameter	const char * method	125:3:3759:3776	10646141	2	True				
ANR	10646195	ParameterType	const char *		10646141	0					
ANR	10646196	Identifier	method		10646141	1					
ANR	10646197	Parameter	const char * resource	126:3:3830:3849	10646141	3	True				
ANR	10646198	ParameterType	const char *		10646141	0					
ANR	10646199	Identifier	resource		10646141	1					
ANR	10646200	CFGEntryNode	ENTRY		10646141		True				
ANR	10646201	CFGExitNode	EXIT		10646141		True				
ANR	10646202	Symbol	method		10646141						
ANR	10646203	Symbol	cg		10646141						
ANR	10646204	Symbol	_cupsConnect		10646141						
ANR	10646205	Symbol	resource		10646141						
ANR	10646206	Symbol	cg -> password_cb		10646141						
ANR	10646207	Symbol	http		10646141						
ANR	10646208	Symbol	_cupsGlobals		10646141						
ANR	10646209	Symbol	* cg		10646141						
ANR	10646210	Symbol	prompt		10646141						
ANR	10646211	Symbol	cg -> password_data		10646141						
ANR	10646212	Function	cupsServer	155:0:4774:4976							
ANR	10646213	FunctionDef	cupsServer ()		10646212	0					
ANR	10646214	CompoundStatement		157:0:4829:4976	10646212	0					
ANR	10646215	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	158:2:4833:4869	10646212	0	True				
ANR	10646216	IdentifierDecl	* cg = _cupsGlobals ( )		10646212	0					
ANR	10646217	IdentifierDeclType	_cups_globals_t *		10646212	0					
ANR	10646218	Identifier	cg		10646212	1					
ANR	10646219	AssignmentExpression	* cg = _cupsGlobals ( )		10646212	2		=			
ANR	10646220	Identifier	cg		10646212	0					
ANR	10646221	CallExpression	_cupsGlobals ( )		10646212	1					
ANR	10646222	Callee	_cupsGlobals		10646212	0					
ANR	10646223	Identifier	_cupsGlobals		10646212	0					
ANR	10646224	ArgumentList			10646212	1					
ANR	10646225	IfStatement	if ( ! cg -> server [ 0 ] )		10646212	1					
ANR	10646226	Condition	! cg -> server [ 0 ]	161:6:4912:4925	10646212	0	True				
ANR	10646227	UnaryOperationExpression	! cg -> server [ 0 ]		10646212	0					
ANR	10646228	UnaryOperator	!		10646212	0					
ANR	10646229	ArrayIndexing	cg -> server [ 0 ]		10646212	1					
ANR	10646230	PtrMemberAccess	cg -> server		10646212	0					
ANR	10646231	Identifier	cg		10646212	0					
ANR	10646232	Identifier	server		10646212	1					
ANR	10646233	PrimaryExpression	0		10646212	1					
ANR	10646234	ExpressionStatement	_cupsSetDefaults ( )	162:4:4932:4950	10646212	1	True				
ANR	10646235	CallExpression	_cupsSetDefaults ( )		10646212	0					
ANR	10646236	Callee	_cupsSetDefaults		10646212	0					
ANR	10646237	Identifier	_cupsSetDefaults		10646212	0					
ANR	10646238	ArgumentList			10646212	1					
ANR	10646239	ReturnStatement	return ( cg -> server ) ;	164:2:4955:4974	10646212	2	True				
ANR	10646240	PtrMemberAccess	cg -> server		10646212	0					
ANR	10646241	Identifier	cg		10646212	0					
ANR	10646242	Identifier	server		10646212	1					
ANR	10646243	ReturnType	const char *		10646212	1					
ANR	10646244	Identifier	cupsServer		10646212	2					
ANR	10646245	ParameterList			10646212	3					
ANR	10646246	CFGEntryNode	ENTRY		10646212		True				
ANR	10646247	CFGExitNode	EXIT		10646212		True				
ANR	10646248	Symbol	* * cg		10646212						
ANR	10646249	Symbol	cg		10646212						
ANR	10646250	Symbol	cg -> server		10646212						
ANR	10646251	Symbol	_cupsGlobals		10646212						
ANR	10646252	Symbol	* cg		10646212						
ANR	10646253	Symbol	* cg -> server		10646212						
ANR	10646254	Function	cupsSetClientCertCB	180:0:5360:5651							
ANR	10646255	FunctionDef	"cupsSetClientCertCB (cups_client_cert_cb_t cb , void * user_data)"		10646254	0					
ANR	10646256	CompoundStatement		184:0:5511:5651	10646254	0					
ANR	10646257	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	185:2:5515:5551	10646254	0	True				
ANR	10646258	IdentifierDecl	* cg = _cupsGlobals ( )		10646254	0					
ANR	10646259	IdentifierDeclType	_cups_globals_t *		10646254	0					
ANR	10646260	Identifier	cg		10646254	1					
ANR	10646261	AssignmentExpression	* cg = _cupsGlobals ( )		10646254	2		=			
ANR	10646262	Identifier	cg		10646254	0					
ANR	10646263	CallExpression	_cupsGlobals ( )		10646254	1					
ANR	10646264	Callee	_cupsGlobals		10646254	0					
ANR	10646265	Identifier	_cupsGlobals		10646254	0					
ANR	10646266	ArgumentList			10646254	1					
ANR	10646267	ExpressionStatement	cg -> client_cert_cb = cb	188:2:5590:5613	10646254	1	True				
ANR	10646268	AssignmentExpression	cg -> client_cert_cb = cb		10646254	0		=			
ANR	10646269	PtrMemberAccess	cg -> client_cert_cb		10646254	0					
ANR	10646270	Identifier	cg		10646254	0					
ANR	10646271	Identifier	client_cert_cb		10646254	1					
ANR	10646272	Identifier	cb		10646254	1					
ANR	10646273	ExpressionStatement	cg -> client_cert_data = user_data	189:2:5617:5649	10646254	2	True				
ANR	10646274	AssignmentExpression	cg -> client_cert_data = user_data		10646254	0		=			
ANR	10646275	PtrMemberAccess	cg -> client_cert_data		10646254	0					
ANR	10646276	Identifier	cg		10646254	0					
ANR	10646277	Identifier	client_cert_data		10646254	1					
ANR	10646278	Identifier	user_data		10646254	1					
ANR	10646279	ReturnType	void		10646254	1					
ANR	10646280	Identifier	cupsSetClientCertCB		10646254	2					
ANR	10646281	ParameterList	"cups_client_cert_cb_t cb , void * user_data"		10646254	3					
ANR	10646282	Parameter	cups_client_cert_cb_t cb	182:4:5390:5413	10646254	0	True				
ANR	10646283	ParameterType	cups_client_cert_cb_t		10646254	0					
ANR	10646284	Identifier	cb		10646254	1					
ANR	10646285	Parameter	void * user_data	183:4:5449:5480	10646254	1	True				
ANR	10646286	ParameterType	void *		10646254	0					
ANR	10646287	Identifier	user_data		10646254	1					
ANR	10646288	CFGEntryNode	ENTRY		10646254		True				
ANR	10646289	CFGExitNode	EXIT		10646254		True				
ANR	10646290	Symbol	cg		10646254						
ANR	10646291	Symbol	cg -> client_cert_cb		10646254						
ANR	10646292	Symbol	_cupsGlobals		10646254						
ANR	10646293	Symbol	* cg		10646254						
ANR	10646294	Symbol	user_data		10646254						
ANR	10646295	Symbol	cg -> client_cert_data		10646254						
ANR	10646296	Symbol	cb		10646254						
ANR	10646297	Function	cupsSetCredentials	204:0:6004:6416							
ANR	10646298	FunctionDef	cupsSetCredentials (cups_array_t * credentials)		10646297	0					
ANR	10646299	CompoundStatement		207:0:6134:6416	10646297	0					
ANR	10646300	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	208:2:6138:6174	10646297	0	True				
ANR	10646301	IdentifierDecl	* cg = _cupsGlobals ( )		10646297	0					
ANR	10646302	IdentifierDeclType	_cups_globals_t *		10646297	0					
ANR	10646303	Identifier	cg		10646297	1					
ANR	10646304	AssignmentExpression	* cg = _cupsGlobals ( )		10646297	2		=			
ANR	10646305	Identifier	cg		10646297	0					
ANR	10646306	CallExpression	_cupsGlobals ( )		10646297	1					
ANR	10646307	Callee	_cupsGlobals		10646297	0					
ANR	10646308	Identifier	_cupsGlobals		10646297	0					
ANR	10646309	ArgumentList			10646297	1					
ANR	10646310	IfStatement	if ( cupsArrayCount ( credentials ) < 1 )		10646297	1					
ANR	10646311	Condition	cupsArrayCount ( credentials ) < 1	211:6:6217:6247	10646297	0	True				
ANR	10646312	RelationalExpression	cupsArrayCount ( credentials ) < 1		10646297	0		<			
ANR	10646313	CallExpression	cupsArrayCount ( credentials )		10646297	0					
ANR	10646314	Callee	cupsArrayCount		10646297	0					
ANR	10646315	Identifier	cupsArrayCount		10646297	0					
ANR	10646316	ArgumentList	credentials		10646297	1					
ANR	10646317	Argument	credentials		10646297	0					
ANR	10646318	Identifier	credentials		10646297	0					
ANR	10646319	PrimaryExpression	1		10646297	1					
ANR	10646320	ReturnStatement	return ( - 1 ) ;	212:4:6254:6265	10646297	1	True				
ANR	10646321	UnaryOperationExpression	- 1		10646297	0					
ANR	10646322	UnaryOperator	-		10646297	0					
ANR	10646323	PrimaryExpression	1		10646297	1					
ANR	10646324	ExpressionStatement	_httpFreeCredentials ( cg -> tls_credentials )	214:2:6270:6311	10646297	2	True				
ANR	10646325	CallExpression	_httpFreeCredentials ( cg -> tls_credentials )		10646297	0					
ANR	10646326	Callee	_httpFreeCredentials		10646297	0					
ANR	10646327	Identifier	_httpFreeCredentials		10646297	0					
ANR	10646328	ArgumentList	cg -> tls_credentials		10646297	1					
ANR	10646329	Argument	cg -> tls_credentials		10646297	0					
ANR	10646330	PtrMemberAccess	cg -> tls_credentials		10646297	0					
ANR	10646331	Identifier	cg		10646297	0					
ANR	10646332	Identifier	tls_credentials		10646297	1					
ANR	10646333	ExpressionStatement	cg -> tls_credentials = _httpCreateCredentials ( credentials )	215:2:6315:6372	10646297	3	True				
ANR	10646334	AssignmentExpression	cg -> tls_credentials = _httpCreateCredentials ( credentials )		10646297	0		=			
ANR	10646335	PtrMemberAccess	cg -> tls_credentials		10646297	0					
ANR	10646336	Identifier	cg		10646297	0					
ANR	10646337	Identifier	tls_credentials		10646297	1					
ANR	10646338	CallExpression	_httpCreateCredentials ( credentials )		10646297	1					
ANR	10646339	Callee	_httpCreateCredentials		10646297	0					
ANR	10646340	Identifier	_httpCreateCredentials		10646297	0					
ANR	10646341	ArgumentList	credentials		10646297	1					
ANR	10646342	Argument	credentials		10646297	0					
ANR	10646343	Identifier	credentials		10646297	0					
ANR	10646344	ReturnStatement	return ( cg -> tls_credentials ? 0 : - 1 ) ;	217:2:6377:6414	10646297	4	True				
ANR	10646345	ConditionalExpression	cg -> tls_credentials ? 0 : - 1		10646297	0					
ANR	10646346	Condition	cg -> tls_credentials		10646297	0					
ANR	10646347	PtrMemberAccess	cg -> tls_credentials		10646297	0					
ANR	10646348	Identifier	cg		10646297	0					
ANR	10646349	Identifier	tls_credentials		10646297	1					
ANR	10646350	PrimaryExpression	0		10646297	1					
ANR	10646351	UnaryOperationExpression	- 1		10646297	2					
ANR	10646352	UnaryOperator	-		10646297	0					
ANR	10646353	PrimaryExpression	1		10646297	1					
ANR	10646354	ReturnType	int		10646297	1					
ANR	10646355	Identifier	cupsSetCredentials		10646297	2					
ANR	10646356	ParameterList	cups_array_t * credentials		10646297	3					
ANR	10646357	Parameter	cups_array_t * credentials	206:4:6075:6099	10646297	0	True				
ANR	10646358	ParameterType	cups_array_t *		10646297	0					
ANR	10646359	Identifier	credentials		10646297	1					
ANR	10646360	CFGEntryNode	ENTRY		10646297		True				
ANR	10646361	CFGExitNode	EXIT		10646297		True				
ANR	10646362	Symbol	cupsArrayCount		10646297						
ANR	10646363	Symbol	cg		10646297						
ANR	10646364	Symbol	credentials		10646297						
ANR	10646365	Symbol	_httpCreateCredentials		10646297						
ANR	10646366	Symbol	cg -> tls_credentials		10646297						
ANR	10646367	Symbol	_cupsGlobals		10646297						
ANR	10646368	Symbol	* cg		10646297						
ANR	10646369	Function	cupsSetEncryption	234:0:6941:7170							
ANR	10646370	FunctionDef	cupsSetEncryption (http_encryption_t e)		10646369	0					
ANR	10646371	CompoundStatement		236:0:7021:7170	10646369	0					
ANR	10646372	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	237:2:7025:7061	10646369	0	True				
ANR	10646373	IdentifierDecl	* cg = _cupsGlobals ( )		10646369	0					
ANR	10646374	IdentifierDeclType	_cups_globals_t *		10646369	0					
ANR	10646375	Identifier	cg		10646369	1					
ANR	10646376	AssignmentExpression	* cg = _cupsGlobals ( )		10646369	2		=			
ANR	10646377	Identifier	cg		10646369	0					
ANR	10646378	CallExpression	_cupsGlobals ( )		10646369	1					
ANR	10646379	Callee	_cupsGlobals		10646369	0					
ANR	10646380	Identifier	_cupsGlobals		10646369	0					
ANR	10646381	ArgumentList			10646369	1					
ANR	10646382	ExpressionStatement	cg -> encryption = e	240:2:7100:7118	10646369	1	True				
ANR	10646383	AssignmentExpression	cg -> encryption = e		10646369	0		=			
ANR	10646384	PtrMemberAccess	cg -> encryption		10646369	0					
ANR	10646385	Identifier	cg		10646369	0					
ANR	10646386	Identifier	encryption		10646369	1					
ANR	10646387	Identifier	e		10646369	1					
ANR	10646388	IfStatement	if ( cg -> http )		10646369	2					
ANR	10646389	Condition	cg -> http	242:6:7127:7134	10646369	0	True				
ANR	10646390	PtrMemberAccess	cg -> http		10646369	0					
ANR	10646391	Identifier	cg		10646369	0					
ANR	10646392	Identifier	http		10646369	1					
ANR	10646393	ExpressionStatement	"httpEncryption ( cg -> http , e )"	243:4:7141:7168	10646369	1	True				
ANR	10646394	CallExpression	"httpEncryption ( cg -> http , e )"		10646369	0					
ANR	10646395	Callee	httpEncryption		10646369	0					
ANR	10646396	Identifier	httpEncryption		10646369	0					
ANR	10646397	ArgumentList	cg -> http		10646369	1					
ANR	10646398	Argument	cg -> http		10646369	0					
ANR	10646399	PtrMemberAccess	cg -> http		10646369	0					
ANR	10646400	Identifier	cg		10646369	0					
ANR	10646401	Identifier	http		10646369	1					
ANR	10646402	Argument	e		10646369	1					
ANR	10646403	Identifier	e		10646369	0					
ANR	10646404	ReturnType	void		10646369	1					
ANR	10646405	Identifier	cupsSetEncryption		10646369	2					
ANR	10646406	ParameterList	http_encryption_t e		10646369	3					
ANR	10646407	Parameter	http_encryption_t e	235:18:6964:6982	10646369	0	True				
ANR	10646408	ParameterType	http_encryption_t		10646369	0					
ANR	10646409	Identifier	e		10646369	1					
ANR	10646410	CFGEntryNode	ENTRY		10646369		True				
ANR	10646411	CFGExitNode	EXIT		10646369		True				
ANR	10646412	Symbol	cg -> encryption		10646369						
ANR	10646413	Symbol	cg		10646369						
ANR	10646414	Symbol	e		10646369						
ANR	10646415	Symbol	cg -> http		10646369						
ANR	10646416	Symbol	_cupsGlobals		10646369						
ANR	10646417	Symbol	* cg		10646369						
ANR	10646418	Function	cupsSetPasswordCB	260:0:7722:8051							
ANR	10646419	FunctionDef	cupsSetPasswordCB (cups_password_cb_t cb)		10646418	0					
ANR	10646420	CompoundStatement		262:0:7795:8051	10646418	0					
ANR	10646421	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	263:2:7799:7835	10646418	0	True				
ANR	10646422	IdentifierDecl	* cg = _cupsGlobals ( )		10646418	0					
ANR	10646423	IdentifierDeclType	_cups_globals_t *		10646418	0					
ANR	10646424	Identifier	cg		10646418	1					
ANR	10646425	AssignmentExpression	* cg = _cupsGlobals ( )		10646418	2		=			
ANR	10646426	Identifier	cg		10646418	0					
ANR	10646427	CallExpression	_cupsGlobals ( )		10646418	1					
ANR	10646428	Callee	_cupsGlobals		10646418	0					
ANR	10646429	Identifier	_cupsGlobals		10646418	0					
ANR	10646430	ArgumentList			10646418	1					
ANR	10646431	IfStatement	if ( cb == ( cups_password_cb_t ) 0 )		10646418	1					
ANR	10646432	Condition	cb == ( cups_password_cb_t ) 0	266:6:7878:7904	10646418	0	True				
ANR	10646433	EqualityExpression	cb == ( cups_password_cb_t ) 0		10646418	0		==			
ANR	10646434	Identifier	cb		10646418	0					
ANR	10646435	CastExpression	( cups_password_cb_t ) 0		10646418	1					
ANR	10646436	CastTarget	cups_password_cb_t		10646418	0					
ANR	10646437	PrimaryExpression	0		10646418	1					
ANR	10646438	ExpressionStatement	cg -> password_cb = ( cups_password_cb2_t ) _cupsGetPassword	267:4:7911:7966	10646418	1	True				
ANR	10646439	AssignmentExpression	cg -> password_cb = ( cups_password_cb2_t ) _cupsGetPassword		10646418	0		=			
ANR	10646440	PtrMemberAccess	cg -> password_cb		10646418	0					
ANR	10646441	Identifier	cg		10646418	0					
ANR	10646442	Identifier	password_cb		10646418	1					
ANR	10646443	CastExpression	( cups_password_cb2_t ) _cupsGetPassword		10646418	1					
ANR	10646444	CastTarget	cups_password_cb2_t		10646418	0					
ANR	10646445	Identifier	_cupsGetPassword		10646418	1					
ANR	10646446	ElseStatement	else		10646418	0					
ANR	10646447	ExpressionStatement	cg -> password_cb = ( cups_password_cb2_t ) cb	269:4:7979:8020	10646418	0	True				
ANR	10646448	AssignmentExpression	cg -> password_cb = ( cups_password_cb2_t ) cb		10646418	0		=			
ANR	10646449	PtrMemberAccess	cg -> password_cb		10646418	0					
ANR	10646450	Identifier	cg		10646418	0					
ANR	10646451	Identifier	password_cb		10646418	1					
ANR	10646452	CastExpression	( cups_password_cb2_t ) cb		10646418	1					
ANR	10646453	CastTarget	cups_password_cb2_t		10646418	0					
ANR	10646454	Identifier	cb		10646418	1					
ANR	10646455	ExpressionStatement	cg -> password_data = NULL	271:2:8025:8049	10646418	2	True				
ANR	10646456	AssignmentExpression	cg -> password_data = NULL		10646418	0		=			
ANR	10646457	PtrMemberAccess	cg -> password_data		10646418	0					
ANR	10646458	Identifier	cg		10646418	0					
ANR	10646459	Identifier	password_data		10646418	1					
ANR	10646460	Identifier	NULL		10646418	1					
ANR	10646461	ReturnType	void		10646418	1					
ANR	10646462	Identifier	cupsSetPasswordCB		10646418	2					
ANR	10646463	ParameterList	cups_password_cb_t cb		10646418	3					
ANR	10646464	Parameter	cups_password_cb_t cb	261:18:7745:7765	10646418	0	True				
ANR	10646465	ParameterType	cups_password_cb_t		10646418	0					
ANR	10646466	Identifier	cb		10646418	1					
ANR	10646467	CFGEntryNode	ENTRY		10646418		True				
ANR	10646468	CFGExitNode	EXIT		10646418		True				
ANR	10646469	Symbol	NULL		10646418						
ANR	10646470	Symbol	cg		10646418						
ANR	10646471	Symbol	cg -> password_cb		10646418						
ANR	10646472	Symbol	_cupsGlobals		10646418						
ANR	10646473	Symbol	* cg		10646418						
ANR	10646474	Symbol	_cupsGetPassword		10646418						
ANR	10646475	Symbol	cg -> password_data		10646418						
ANR	10646476	Symbol	cb		10646418						
ANR	10646477	Function	cupsSetPasswordCB2	290:0:8646:9033							
ANR	10646478	FunctionDef	"cupsSetPasswordCB2 (cups_password_cb2_t cb , void * user_data)"		10646477	0					
ANR	10646479	CompoundStatement		294:0:8792:9033	10646477	0					
ANR	10646480	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	295:2:8796:8832	10646477	0	True				
ANR	10646481	IdentifierDecl	* cg = _cupsGlobals ( )		10646477	0					
ANR	10646482	IdentifierDeclType	_cups_globals_t *		10646477	0					
ANR	10646483	Identifier	cg		10646477	1					
ANR	10646484	AssignmentExpression	* cg = _cupsGlobals ( )		10646477	2		=			
ANR	10646485	Identifier	cg		10646477	0					
ANR	10646486	CallExpression	_cupsGlobals ( )		10646477	1					
ANR	10646487	Callee	_cupsGlobals		10646477	0					
ANR	10646488	Identifier	_cupsGlobals		10646477	0					
ANR	10646489	ArgumentList			10646477	1					
ANR	10646490	IfStatement	if ( cb == ( cups_password_cb2_t ) 0 )		10646477	1					
ANR	10646491	Condition	cb == ( cups_password_cb2_t ) 0	298:6:8875:8902	10646477	0	True				
ANR	10646492	EqualityExpression	cb == ( cups_password_cb2_t ) 0		10646477	0		==			
ANR	10646493	Identifier	cb		10646477	0					
ANR	10646494	CastExpression	( cups_password_cb2_t ) 0		10646477	1					
ANR	10646495	CastTarget	cups_password_cb2_t		10646477	0					
ANR	10646496	PrimaryExpression	0		10646477	1					
ANR	10646497	ExpressionStatement	cg -> password_cb = ( cups_password_cb2_t ) _cupsGetPassword	299:4:8909:8964	10646477	1	True				
ANR	10646498	AssignmentExpression	cg -> password_cb = ( cups_password_cb2_t ) _cupsGetPassword		10646477	0		=			
ANR	10646499	PtrMemberAccess	cg -> password_cb		10646477	0					
ANR	10646500	Identifier	cg		10646477	0					
ANR	10646501	Identifier	password_cb		10646477	1					
ANR	10646502	CastExpression	( cups_password_cb2_t ) _cupsGetPassword		10646477	1					
ANR	10646503	CastTarget	cups_password_cb2_t		10646477	0					
ANR	10646504	Identifier	_cupsGetPassword		10646477	1					
ANR	10646505	ElseStatement	else		10646477	0					
ANR	10646506	ExpressionStatement	cg -> password_cb = cb	301:4:8977:8997	10646477	0	True				
ANR	10646507	AssignmentExpression	cg -> password_cb = cb		10646477	0		=			
ANR	10646508	PtrMemberAccess	cg -> password_cb		10646477	0					
ANR	10646509	Identifier	cg		10646477	0					
ANR	10646510	Identifier	password_cb		10646477	1					
ANR	10646511	Identifier	cb		10646477	1					
ANR	10646512	ExpressionStatement	cg -> password_data = user_data	303:2:9002:9031	10646477	2	True				
ANR	10646513	AssignmentExpression	cg -> password_data = user_data		10646477	0		=			
ANR	10646514	PtrMemberAccess	cg -> password_data		10646477	0					
ANR	10646515	Identifier	cg		10646477	0					
ANR	10646516	Identifier	password_data		10646477	1					
ANR	10646517	Identifier	user_data		10646477	1					
ANR	10646518	ReturnType	void		10646477	1					
ANR	10646519	Identifier	cupsSetPasswordCB2		10646477	2					
ANR	10646520	ParameterList	"cups_password_cb2_t cb , void * user_data"		10646477	3					
ANR	10646521	Parameter	cups_password_cb2_t cb	292:4:8675:8696	10646477	0	True				
ANR	10646522	ParameterType	cups_password_cb2_t		10646477	0					
ANR	10646523	Identifier	cb		10646477	1					
ANR	10646524	Parameter	void * user_data	293:4:8732:8761	10646477	1	True				
ANR	10646525	ParameterType	void *		10646477	0					
ANR	10646526	Identifier	user_data		10646477	1					
ANR	10646527	CFGEntryNode	ENTRY		10646477		True				
ANR	10646528	CFGExitNode	EXIT		10646477		True				
ANR	10646529	Symbol	cg		10646477						
ANR	10646530	Symbol	cg -> password_cb		10646477						
ANR	10646531	Symbol	_cupsGlobals		10646477						
ANR	10646532	Symbol	* cg		10646477						
ANR	10646533	Symbol	user_data		10646477						
ANR	10646534	Symbol	_cupsGetPassword		10646477						
ANR	10646535	Symbol	cg -> password_data		10646477						
ANR	10646536	Symbol	cb		10646477						
ANR	10646537	Function	cupsSetServer	321:0:9646:11034							
ANR	10646538	FunctionDef	cupsSetServer (const char * server)		10646537	0					
ANR	10646539	CompoundStatement		323:0:9707:11034	10646537	0					
ANR	10646540	IdentifierDeclStatement	"char * options , * port ;"	324:2:9711:9749	10646537	0	True				
ANR	10646541	IdentifierDecl	* options		10646537	0					
ANR	10646542	IdentifierDeclType	char *		10646537	0					
ANR	10646543	Identifier	options		10646537	1					
ANR	10646544	IdentifierDecl	* port		10646537	1					
ANR	10646545	IdentifierDeclType	char *		10646537	0					
ANR	10646546	Identifier	port		10646537	1					
ANR	10646547	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	326:2:9777:9813	10646537	1	True				
ANR	10646548	IdentifierDecl	* cg = _cupsGlobals ( )		10646537	0					
ANR	10646549	IdentifierDeclType	_cups_globals_t *		10646537	0					
ANR	10646550	Identifier	cg		10646537	1					
ANR	10646551	AssignmentExpression	* cg = _cupsGlobals ( )		10646537	2		=			
ANR	10646552	Identifier	cg		10646537	0					
ANR	10646553	CallExpression	_cupsGlobals ( )		10646537	1					
ANR	10646554	Callee	_cupsGlobals		10646537	0					
ANR	10646555	Identifier	_cupsGlobals		10646537	0					
ANR	10646556	ArgumentList			10646537	1					
ANR	10646557	IfStatement	if ( server )		10646537	2					
ANR	10646558	Condition	server	329:6:9856:9861	10646537	0	True				
ANR	10646559	Identifier	server		10646537	0					
ANR	10646560	CompoundStatement		8:2:158:158	10646537	1					
ANR	10646561	ExpressionStatement	"strlcpy ( cg -> server , server , sizeof ( cg -> server ) )"	331:4:9872:9919	10646537	0	True				
ANR	10646562	CallExpression	"strlcpy ( cg -> server , server , sizeof ( cg -> server ) )"		10646537	0					
ANR	10646563	Callee	strlcpy		10646537	0					
ANR	10646564	Identifier	strlcpy		10646537	0					
ANR	10646565	ArgumentList	cg -> server		10646537	1					
ANR	10646566	Argument	cg -> server		10646537	0					
ANR	10646567	PtrMemberAccess	cg -> server		10646537	0					
ANR	10646568	Identifier	cg		10646537	0					
ANR	10646569	Identifier	server		10646537	1					
ANR	10646570	Argument	server		10646537	1					
ANR	10646571	Identifier	server		10646537	0					
ANR	10646572	Argument	sizeof ( cg -> server )		10646537	2					
ANR	10646573	SizeofExpression	sizeof ( cg -> server )		10646537	0					
ANR	10646574	Sizeof	sizeof		10646537	0					
ANR	10646575	PtrMemberAccess	cg -> server		10646537	1					
ANR	10646576	Identifier	cg		10646537	0					
ANR	10646577	Identifier	server		10646537	1					
ANR	10646578	IfStatement	"if ( cg -> server [ 0 ] != '/' && ( options = strrchr ( cg -> server , '/' ) ) != NULL )"		10646537	1					
ANR	10646579	Condition	"cg -> server [ 0 ] != '/' && ( options = strrchr ( cg -> server , '/' ) ) != NULL"	333:8:9930:9997	10646537	0	True				
ANR	10646580	AndExpression	"cg -> server [ 0 ] != '/' && ( options = strrchr ( cg -> server , '/' ) ) != NULL"		10646537	0		&&			
ANR	10646581	EqualityExpression	cg -> server [ 0 ] != '/'		10646537	0		!=			
ANR	10646582	ArrayIndexing	cg -> server [ 0 ]		10646537	0					
ANR	10646583	PtrMemberAccess	cg -> server		10646537	0					
ANR	10646584	Identifier	cg		10646537	0					
ANR	10646585	Identifier	server		10646537	1					
ANR	10646586	PrimaryExpression	0		10646537	1					
ANR	10646587	PrimaryExpression	'/'		10646537	1					
ANR	10646588	EqualityExpression	"( options = strrchr ( cg -> server , '/' ) ) != NULL"		10646537	1		!=			
ANR	10646589	AssignmentExpression	"options = strrchr ( cg -> server , '/' )"		10646537	0		=			
ANR	10646590	Identifier	options		10646537	0					
ANR	10646591	CallExpression	"strrchr ( cg -> server , '/' )"		10646537	1					
ANR	10646592	Callee	strrchr		10646537	0					
ANR	10646593	Identifier	strrchr		10646537	0					
ANR	10646594	ArgumentList	cg -> server		10646537	1					
ANR	10646595	Argument	cg -> server		10646537	0					
ANR	10646596	PtrMemberAccess	cg -> server		10646537	0					
ANR	10646597	Identifier	cg		10646537	0					
ANR	10646598	Identifier	server		10646537	1					
ANR	10646599	Argument	'/'		10646537	1					
ANR	10646600	PrimaryExpression	'/'		10646537	0					
ANR	10646601	Identifier	NULL		10646537	1					
ANR	10646602	CompoundStatement		12:4:296:296	10646537	1					
ANR	10646603	ExpressionStatement	* options ++ = '\\0'	335:6:10012:10029	10646537	0	True				
ANR	10646604	AssignmentExpression	* options ++ = '\\0'		10646537	0		=			
ANR	10646605	UnaryOperationExpression	* options ++		10646537	0					
ANR	10646606	UnaryOperator	*		10646537	0					
ANR	10646607	PostIncDecOperationExpression	options ++		10646537	1					
ANR	10646608	Identifier	options		10646537	0					
ANR	10646609	IncDec	++		10646537	1					
ANR	10646610	PrimaryExpression	'\\0'		10646537	1					
ANR	10646611	IfStatement	"if ( ! strcmp ( options , ""version=1.0"" ) )"		10646537	1					
ANR	10646612	Condition	"! strcmp ( options , ""version=1.0"" )"	337:10:10042:10072	10646537	0	True				
ANR	10646613	UnaryOperationExpression	"! strcmp ( options , ""version=1.0"" )"		10646537	0					
ANR	10646614	UnaryOperator	!		10646537	0					
ANR	10646615	CallExpression	"strcmp ( options , ""version=1.0"" )"		10646537	1					
ANR	10646616	Callee	strcmp		10646537	0					
ANR	10646617	Identifier	strcmp		10646537	0					
ANR	10646618	ArgumentList	options		10646537	1					
ANR	10646619	Argument	options		10646537	0					
ANR	10646620	Identifier	options		10646537	0					
ANR	10646621	Argument	"""version=1.0"""		10646537	1					
ANR	10646622	PrimaryExpression	"""version=1.0"""		10646537	0					
ANR	10646623	ExpressionStatement	cg -> server_version = 10	338:8:10083:10106	10646537	1	True				
ANR	10646624	AssignmentExpression	cg -> server_version = 10		10646537	0		=			
ANR	10646625	PtrMemberAccess	cg -> server_version		10646537	0					
ANR	10646626	Identifier	cg		10646537	0					
ANR	10646627	Identifier	server_version		10646537	1					
ANR	10646628	PrimaryExpression	10		10646537	1					
ANR	10646629	ElseStatement	else		10646537	0					
ANR	10646630	IfStatement	"if ( ! strcmp ( options , ""version=1.1"" ) )"		10646537	0					
ANR	10646631	Condition	"! strcmp ( options , ""version=1.1"" )"	339:15:10123:10153	10646537	0	True				
ANR	10646632	UnaryOperationExpression	"! strcmp ( options , ""version=1.1"" )"		10646537	0					
ANR	10646633	UnaryOperator	!		10646537	0					
ANR	10646634	CallExpression	"strcmp ( options , ""version=1.1"" )"		10646537	1					
ANR	10646635	Callee	strcmp		10646537	0					
ANR	10646636	Identifier	strcmp		10646537	0					
ANR	10646637	ArgumentList	options		10646537	1					
ANR	10646638	Argument	options		10646537	0					
ANR	10646639	Identifier	options		10646537	0					
ANR	10646640	Argument	"""version=1.1"""		10646537	1					
ANR	10646641	PrimaryExpression	"""version=1.1"""		10646537	0					
ANR	10646642	ExpressionStatement	cg -> server_version = 11	340:8:10164:10187	10646537	1	True				
ANR	10646643	AssignmentExpression	cg -> server_version = 11		10646537	0		=			
ANR	10646644	PtrMemberAccess	cg -> server_version		10646537	0					
ANR	10646645	Identifier	cg		10646537	0					
ANR	10646646	Identifier	server_version		10646537	1					
ANR	10646647	PrimaryExpression	11		10646537	1					
ANR	10646648	ElseStatement	else		10646537	0					
ANR	10646649	IfStatement	"if ( ! strcmp ( options , ""version=2.0"" ) )"		10646537	0					
ANR	10646650	Condition	"! strcmp ( options , ""version=2.0"" )"	341:15:10204:10234	10646537	0	True				
ANR	10646651	UnaryOperationExpression	"! strcmp ( options , ""version=2.0"" )"		10646537	0					
ANR	10646652	UnaryOperator	!		10646537	0					
ANR	10646653	CallExpression	"strcmp ( options , ""version=2.0"" )"		10646537	1					
ANR	10646654	Callee	strcmp		10646537	0					
ANR	10646655	Identifier	strcmp		10646537	0					
ANR	10646656	ArgumentList	options		10646537	1					
ANR	10646657	Argument	options		10646537	0					
ANR	10646658	Identifier	options		10646537	0					
ANR	10646659	Argument	"""version=2.0"""		10646537	1					
ANR	10646660	PrimaryExpression	"""version=2.0"""		10646537	0					
ANR	10646661	ExpressionStatement	cg -> server_version = 20	342:8:10245:10268	10646537	1	True				
ANR	10646662	AssignmentExpression	cg -> server_version = 20		10646537	0		=			
ANR	10646663	PtrMemberAccess	cg -> server_version		10646537	0					
ANR	10646664	Identifier	cg		10646537	0					
ANR	10646665	Identifier	server_version		10646537	1					
ANR	10646666	PrimaryExpression	20		10646537	1					
ANR	10646667	ElseStatement	else		10646537	0					
ANR	10646668	IfStatement	"if ( ! strcmp ( options , ""version=2.1"" ) )"		10646537	0					
ANR	10646669	Condition	"! strcmp ( options , ""version=2.1"" )"	343:15:10285:10315	10646537	0	True				
ANR	10646670	UnaryOperationExpression	"! strcmp ( options , ""version=2.1"" )"		10646537	0					
ANR	10646671	UnaryOperator	!		10646537	0					
ANR	10646672	CallExpression	"strcmp ( options , ""version=2.1"" )"		10646537	1					
ANR	10646673	Callee	strcmp		10646537	0					
ANR	10646674	Identifier	strcmp		10646537	0					
ANR	10646675	ArgumentList	options		10646537	1					
ANR	10646676	Argument	options		10646537	0					
ANR	10646677	Identifier	options		10646537	0					
ANR	10646678	Argument	"""version=2.1"""		10646537	1					
ANR	10646679	PrimaryExpression	"""version=2.1"""		10646537	0					
ANR	10646680	ExpressionStatement	cg -> server_version = 21	344:8:10326:10349	10646537	1	True				
ANR	10646681	AssignmentExpression	cg -> server_version = 21		10646537	0		=			
ANR	10646682	PtrMemberAccess	cg -> server_version		10646537	0					
ANR	10646683	Identifier	cg		10646537	0					
ANR	10646684	Identifier	server_version		10646537	1					
ANR	10646685	PrimaryExpression	21		10646537	1					
ANR	10646686	ElseStatement	else		10646537	0					
ANR	10646687	IfStatement	"if ( ! strcmp ( options , ""version=2.2"" ) )"		10646537	0					
ANR	10646688	Condition	"! strcmp ( options , ""version=2.2"" )"	345:15:10366:10396	10646537	0	True				
ANR	10646689	UnaryOperationExpression	"! strcmp ( options , ""version=2.2"" )"		10646537	0					
ANR	10646690	UnaryOperator	!		10646537	0					
ANR	10646691	CallExpression	"strcmp ( options , ""version=2.2"" )"		10646537	1					
ANR	10646692	Callee	strcmp		10646537	0					
ANR	10646693	Identifier	strcmp		10646537	0					
ANR	10646694	ArgumentList	options		10646537	1					
ANR	10646695	Argument	options		10646537	0					
ANR	10646696	Identifier	options		10646537	0					
ANR	10646697	Argument	"""version=2.2"""		10646537	1					
ANR	10646698	PrimaryExpression	"""version=2.2"""		10646537	0					
ANR	10646699	ExpressionStatement	cg -> server_version = 22	346:8:10407:10430	10646537	1	True				
ANR	10646700	AssignmentExpression	cg -> server_version = 22		10646537	0		=			
ANR	10646701	PtrMemberAccess	cg -> server_version		10646537	0					
ANR	10646702	Identifier	cg		10646537	0					
ANR	10646703	Identifier	server_version		10646537	1					
ANR	10646704	PrimaryExpression	22		10646537	1					
ANR	10646705	ElseStatement	else		10646537	0					
ANR	10646706	ExpressionStatement	cg -> server_version = 20	349:6:10453:10476	10646537	0	True				
ANR	10646707	AssignmentExpression	cg -> server_version = 20		10646537	0		=			
ANR	10646708	PtrMemberAccess	cg -> server_version		10646537	0					
ANR	10646709	Identifier	cg		10646537	0					
ANR	10646710	Identifier	server_version		10646537	1					
ANR	10646711	PrimaryExpression	20		10646537	1					
ANR	10646712	IfStatement	"if ( cg -> server [ 0 ] != '/' && ( port = strrchr ( cg -> server , ':' ) ) != NULL && ! strchr ( port , ']' ) && isdigit ( port [ 1 ] & 255 ) )"		10646537	2					
ANR	10646713	Condition	"cg -> server [ 0 ] != '/' && ( port = strrchr ( cg -> server , ':' ) ) != NULL && ! strchr ( port , ']' ) && isdigit ( port [ 1 ] & 255 )"	351:8:10487:10607	10646537	0	True				
ANR	10646714	AndExpression	"cg -> server [ 0 ] != '/' && ( port = strrchr ( cg -> server , ':' ) ) != NULL && ! strchr ( port , ']' ) && isdigit ( port [ 1 ] & 255 )"		10646537	0		&&			
ANR	10646715	EqualityExpression	cg -> server [ 0 ] != '/'		10646537	0		!=			
ANR	10646716	ArrayIndexing	cg -> server [ 0 ]		10646537	0					
ANR	10646717	PtrMemberAccess	cg -> server		10646537	0					
ANR	10646718	Identifier	cg		10646537	0					
ANR	10646719	Identifier	server		10646537	1					
ANR	10646720	PrimaryExpression	0		10646537	1					
ANR	10646721	PrimaryExpression	'/'		10646537	1					
ANR	10646722	AndExpression	"( port = strrchr ( cg -> server , ':' ) ) != NULL && ! strchr ( port , ']' ) && isdigit ( port [ 1 ] & 255 )"		10646537	1		&&			
ANR	10646723	EqualityExpression	"( port = strrchr ( cg -> server , ':' ) ) != NULL"		10646537	0		!=			
ANR	10646724	AssignmentExpression	"port = strrchr ( cg -> server , ':' )"		10646537	0		=			
ANR	10646725	Identifier	port		10646537	0					
ANR	10646726	CallExpression	"strrchr ( cg -> server , ':' )"		10646537	1					
ANR	10646727	Callee	strrchr		10646537	0					
ANR	10646728	Identifier	strrchr		10646537	0					
ANR	10646729	ArgumentList	cg -> server		10646537	1					
ANR	10646730	Argument	cg -> server		10646537	0					
ANR	10646731	PtrMemberAccess	cg -> server		10646537	0					
ANR	10646732	Identifier	cg		10646537	0					
ANR	10646733	Identifier	server		10646537	1					
ANR	10646734	Argument	':'		10646537	1					
ANR	10646735	PrimaryExpression	':'		10646537	0					
ANR	10646736	Identifier	NULL		10646537	1					
ANR	10646737	AndExpression	"! strchr ( port , ']' ) && isdigit ( port [ 1 ] & 255 )"		10646537	1		&&			
ANR	10646738	UnaryOperationExpression	"! strchr ( port , ']' )"		10646537	0					
ANR	10646739	UnaryOperator	!		10646537	0					
ANR	10646740	CallExpression	"strchr ( port , ']' )"		10646537	1					
ANR	10646741	Callee	strchr		10646537	0					
ANR	10646742	Identifier	strchr		10646537	0					
ANR	10646743	ArgumentList	port		10646537	1					
ANR	10646744	Argument	port		10646537	0					
ANR	10646745	Identifier	port		10646537	0					
ANR	10646746	Argument	']'		10646537	1					
ANR	10646747	PrimaryExpression	']'		10646537	0					
ANR	10646748	CallExpression	isdigit ( port [ 1 ] & 255 )		10646537	1					
ANR	10646749	Callee	isdigit		10646537	0					
ANR	10646750	Identifier	isdigit		10646537	0					
ANR	10646751	ArgumentList	port [ 1 ] & 255		10646537	1					
ANR	10646752	Argument	port [ 1 ] & 255		10646537	0					
ANR	10646753	BitAndExpression	port [ 1 ] & 255		10646537	0		&			
ANR	10646754	ArrayIndexing	port [ 1 ]		10646537	0					
ANR	10646755	Identifier	port		10646537	0					
ANR	10646756	PrimaryExpression	1		10646537	1					
ANR	10646757	PrimaryExpression	255		10646537	1					
ANR	10646758	CompoundStatement		31:4:906:906	10646537	1					
ANR	10646759	ExpressionStatement	* port ++ = '\\0'	354:6:10622:10636	10646537	0	True				
ANR	10646760	AssignmentExpression	* port ++ = '\\0'		10646537	0		=			
ANR	10646761	UnaryOperationExpression	* port ++		10646537	0					
ANR	10646762	UnaryOperator	*		10646537	0					
ANR	10646763	PostIncDecOperationExpression	port ++		10646537	1					
ANR	10646764	Identifier	port		10646537	0					
ANR	10646765	IncDec	++		10646537	1					
ANR	10646766	PrimaryExpression	'\\0'		10646537	1					
ANR	10646767	ExpressionStatement	cg -> ipp_port = atoi ( port )	356:6:10645:10670	10646537	1	True				
ANR	10646768	AssignmentExpression	cg -> ipp_port = atoi ( port )		10646537	0		=			
ANR	10646769	PtrMemberAccess	cg -> ipp_port		10646537	0					
ANR	10646770	Identifier	cg		10646537	0					
ANR	10646771	Identifier	ipp_port		10646537	1					
ANR	10646772	CallExpression	atoi ( port )		10646537	1					
ANR	10646773	Callee	atoi		10646537	0					
ANR	10646774	Identifier	atoi		10646537	0					
ANR	10646775	ArgumentList	port		10646537	1					
ANR	10646776	Argument	port		10646537	0					
ANR	10646777	Identifier	port		10646537	0					
ANR	10646778	IfStatement	if ( cg -> server [ 0 ] == '/' )		10646537	3					
ANR	10646779	Condition	cg -> server [ 0 ] == '/'	359:8:10687:10706	10646537	0	True				
ANR	10646780	EqualityExpression	cg -> server [ 0 ] == '/'		10646537	0		==			
ANR	10646781	ArrayIndexing	cg -> server [ 0 ]		10646537	0					
ANR	10646782	PtrMemberAccess	cg -> server		10646537	0					
ANR	10646783	Identifier	cg		10646537	0					
ANR	10646784	Identifier	server		10646537	1					
ANR	10646785	PrimaryExpression	0		10646537	1					
ANR	10646786	PrimaryExpression	'/'		10646537	1					
ANR	10646787	ExpressionStatement	"strlcpy ( cg -> servername , ""localhost"" , sizeof ( cg -> servername ) )"	360:6:10715:10775	10646537	1	True				
ANR	10646788	CallExpression	"strlcpy ( cg -> servername , ""localhost"" , sizeof ( cg -> servername ) )"		10646537	0					
ANR	10646789	Callee	strlcpy		10646537	0					
ANR	10646790	Identifier	strlcpy		10646537	0					
ANR	10646791	ArgumentList	cg -> servername		10646537	1					
ANR	10646792	Argument	cg -> servername		10646537	0					
ANR	10646793	PtrMemberAccess	cg -> servername		10646537	0					
ANR	10646794	Identifier	cg		10646537	0					
ANR	10646795	Identifier	servername		10646537	1					
ANR	10646796	Argument	"""localhost"""		10646537	1					
ANR	10646797	PrimaryExpression	"""localhost"""		10646537	0					
ANR	10646798	Argument	sizeof ( cg -> servername )		10646537	2					
ANR	10646799	SizeofExpression	sizeof ( cg -> servername )		10646537	0					
ANR	10646800	Sizeof	sizeof		10646537	0					
ANR	10646801	PtrMemberAccess	cg -> servername		10646537	1					
ANR	10646802	Identifier	cg		10646537	0					
ANR	10646803	Identifier	servername		10646537	1					
ANR	10646804	ElseStatement	else		10646537	0					
ANR	10646805	ExpressionStatement	"strlcpy ( cg -> servername , cg -> server , sizeof ( cg -> servername ) )"	362:6:10792:10851	10646537	0	True				
ANR	10646806	CallExpression	"strlcpy ( cg -> servername , cg -> server , sizeof ( cg -> servername ) )"		10646537	0					
ANR	10646807	Callee	strlcpy		10646537	0					
ANR	10646808	Identifier	strlcpy		10646537	0					
ANR	10646809	ArgumentList	cg -> servername		10646537	1					
ANR	10646810	Argument	cg -> servername		10646537	0					
ANR	10646811	PtrMemberAccess	cg -> servername		10646537	0					
ANR	10646812	Identifier	cg		10646537	0					
ANR	10646813	Identifier	servername		10646537	1					
ANR	10646814	Argument	cg -> server		10646537	1					
ANR	10646815	PtrMemberAccess	cg -> server		10646537	0					
ANR	10646816	Identifier	cg		10646537	0					
ANR	10646817	Identifier	server		10646537	1					
ANR	10646818	Argument	sizeof ( cg -> servername )		10646537	2					
ANR	10646819	SizeofExpression	sizeof ( cg -> servername )		10646537	0					
ANR	10646820	Sizeof	sizeof		10646537	0					
ANR	10646821	PtrMemberAccess	cg -> servername		10646537	1					
ANR	10646822	Identifier	cg		10646537	0					
ANR	10646823	Identifier	servername		10646537	1					
ANR	10646824	ElseStatement	else		10646537	0					
ANR	10646825	CompoundStatement		43:2:1158:1158	10646537	0					
ANR	10646826	ExpressionStatement	cg -> server [ 0 ] = '\\0'	366:4:10872:10897	10646537	0	True				
ANR	10646827	AssignmentExpression	cg -> server [ 0 ] = '\\0'		10646537	0		=			
ANR	10646828	ArrayIndexing	cg -> server [ 0 ]		10646537	0					
ANR	10646829	PtrMemberAccess	cg -> server		10646537	0					
ANR	10646830	Identifier	cg		10646537	0					
ANR	10646831	Identifier	server		10646537	1					
ANR	10646832	PrimaryExpression	0		10646537	1					
ANR	10646833	PrimaryExpression	'\\0'		10646537	1					
ANR	10646834	ExpressionStatement	cg -> servername [ 0 ] = '\\0'	367:4:10903:10928	10646537	1	True				
ANR	10646835	AssignmentExpression	cg -> servername [ 0 ] = '\\0'		10646537	0		=			
ANR	10646836	ArrayIndexing	cg -> servername [ 0 ]		10646537	0					
ANR	10646837	PtrMemberAccess	cg -> servername		10646537	0					
ANR	10646838	Identifier	cg		10646537	0					
ANR	10646839	Identifier	servername		10646537	1					
ANR	10646840	PrimaryExpression	0		10646537	1					
ANR	10646841	PrimaryExpression	'\\0'		10646537	1					
ANR	10646842	ExpressionStatement	cg -> server_version = 20	368:4:10934:10957	10646537	2	True				
ANR	10646843	AssignmentExpression	cg -> server_version = 20		10646537	0		=			
ANR	10646844	PtrMemberAccess	cg -> server_version		10646537	0					
ANR	10646845	Identifier	cg		10646537	0					
ANR	10646846	Identifier	server_version		10646537	1					
ANR	10646847	PrimaryExpression	20		10646537	1					
ANR	10646848	IfStatement	if ( cg -> http )		10646537	3					
ANR	10646849	Condition	cg -> http	371:6:10970:10977	10646537	0	True				
ANR	10646850	PtrMemberAccess	cg -> http		10646537	0					
ANR	10646851	Identifier	cg		10646537	0					
ANR	10646852	Identifier	http		10646537	1					
ANR	10646853	CompoundStatement		50:2:1274:1274	10646537	1					
ANR	10646854	ExpressionStatement	httpClose ( cg -> http )	373:4:10988:11007	10646537	0	True				
ANR	10646855	CallExpression	httpClose ( cg -> http )		10646537	0					
ANR	10646856	Callee	httpClose		10646537	0					
ANR	10646857	Identifier	httpClose		10646537	0					
ANR	10646858	ArgumentList	cg -> http		10646537	1					
ANR	10646859	Argument	cg -> http		10646537	0					
ANR	10646860	PtrMemberAccess	cg -> http		10646537	0					
ANR	10646861	Identifier	cg		10646537	0					
ANR	10646862	Identifier	http		10646537	1					
ANR	10646863	ExpressionStatement	cg -> http = NULL	374:4:11013:11028	10646537	1	True				
ANR	10646864	AssignmentExpression	cg -> http = NULL		10646537	0		=			
ANR	10646865	PtrMemberAccess	cg -> http		10646537	0					
ANR	10646866	Identifier	cg		10646537	0					
ANR	10646867	Identifier	http		10646537	1					
ANR	10646868	Identifier	NULL		10646537	1					
ANR	10646869	ReturnType	void		10646537	1					
ANR	10646870	Identifier	cupsSetServer		10646537	2					
ANR	10646871	ParameterList	const char * server		10646537	3					
ANR	10646872	Parameter	const char * server	322:14:9665:9682	10646537	0	True				
ANR	10646873	ParameterType	const char *		10646537	0					
ANR	10646874	Identifier	server		10646537	1					
ANR	10646875	CFGEntryNode	ENTRY		10646537		True				
ANR	10646876	CFGExitNode	EXIT		10646537		True				
ANR	10646877	Symbol	strcmp		10646537						
ANR	10646878	Symbol	atoi		10646537						
ANR	10646879	Symbol	server		10646537						
ANR	10646880	Symbol	cg -> server_version		10646537						
ANR	10646881	Symbol	NULL		10646537						
ANR	10646882	Symbol	cg		10646537						
ANR	10646883	Symbol	cg -> servername		10646537						
ANR	10646884	Symbol	cg -> server		10646537						
ANR	10646885	Symbol	_cupsGlobals		10646537						
ANR	10646886	Symbol	* cg		10646537						
ANR	10646887	Symbol	strchr		10646537						
ANR	10646888	Symbol	* cg -> server		10646537						
ANR	10646889	Symbol	* * cg		10646537						
ANR	10646890	Symbol	* port		10646537						
ANR	10646891	Symbol	port		10646537						
ANR	10646892	Symbol	cg -> ipp_port		10646537						
ANR	10646893	Symbol	strrchr		10646537						
ANR	10646894	Symbol	* port ++		10646537						
ANR	10646895	Symbol	cg -> http		10646537						
ANR	10646896	Symbol	options		10646537						
ANR	10646897	Symbol	* cg -> servername		10646537						
ANR	10646898	Symbol	isdigit		10646537						
ANR	10646899	Symbol	* options ++		10646537						
ANR	10646900	Function	cupsSetServerCertCB	391:0:11418:11695							
ANR	10646901	FunctionDef	"cupsSetServerCertCB (cups_server_cert_cb_t cb , void * user_data)"		10646900	0					
ANR	10646902	CompoundStatement		395:0:11555:11695	10646900	0					
ANR	10646903	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	396:2:11559:11595	10646900	0	True				
ANR	10646904	IdentifierDecl	* cg = _cupsGlobals ( )		10646900	0					
ANR	10646905	IdentifierDeclType	_cups_globals_t *		10646900	0					
ANR	10646906	Identifier	cg		10646900	1					
ANR	10646907	AssignmentExpression	* cg = _cupsGlobals ( )		10646900	2		=			
ANR	10646908	Identifier	cg		10646900	0					
ANR	10646909	CallExpression	_cupsGlobals ( )		10646900	1					
ANR	10646910	Callee	_cupsGlobals		10646900	0					
ANR	10646911	Identifier	_cupsGlobals		10646900	0					
ANR	10646912	ArgumentList			10646900	1					
ANR	10646913	ExpressionStatement	cg -> server_cert_cb = cb	399:2:11634:11657	10646900	1	True				
ANR	10646914	AssignmentExpression	cg -> server_cert_cb = cb		10646900	0		=			
ANR	10646915	PtrMemberAccess	cg -> server_cert_cb		10646900	0					
ANR	10646916	Identifier	cg		10646900	0					
ANR	10646917	Identifier	server_cert_cb		10646900	1					
ANR	10646918	Identifier	cb		10646900	1					
ANR	10646919	ExpressionStatement	cg -> server_cert_data = user_data	400:2:11661:11693	10646900	2	True				
ANR	10646920	AssignmentExpression	cg -> server_cert_data = user_data		10646900	0		=			
ANR	10646921	PtrMemberAccess	cg -> server_cert_data		10646900	0					
ANR	10646922	Identifier	cg		10646900	0					
ANR	10646923	Identifier	server_cert_data		10646900	1					
ANR	10646924	Identifier	user_data		10646900	1					
ANR	10646925	ReturnType	void		10646900	1					
ANR	10646926	Identifier	cupsSetServerCertCB		10646900	2					
ANR	10646927	ParameterList	"cups_server_cert_cb_t cb , void * user_data"		10646900	3					
ANR	10646928	Parameter	cups_server_cert_cb_t cb	393:4:11448:11471	10646900	0	True				
ANR	10646929	ParameterType	cups_server_cert_cb_t		10646900	0					
ANR	10646930	Identifier	cb		10646900	1					
ANR	10646931	Parameter	void * user_data	394:4:11507:11524	10646900	1	True				
ANR	10646932	ParameterType	void *		10646900	0					
ANR	10646933	Identifier	user_data		10646900	1					
ANR	10646934	CFGEntryNode	ENTRY		10646900		True				
ANR	10646935	CFGExitNode	EXIT		10646900		True				
ANR	10646936	Symbol	cg -> server_cert_data		10646900						
ANR	10646937	Symbol	cg		10646900						
ANR	10646938	Symbol	cg -> server_cert_cb		10646900						
ANR	10646939	Symbol	_cupsGlobals		10646900						
ANR	10646940	Symbol	* cg		10646900						
ANR	10646941	Symbol	user_data		10646900						
ANR	10646942	Symbol	cb		10646900						
ANR	10646943	Function	cupsSetUser	414:0:12020:12243							
ANR	10646944	FunctionDef	cupsSetUser (const char * user)		10646943	0					
ANR	10646945	CompoundStatement		416:0:12076:12243	10646943	0					
ANR	10646946	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	417:2:12080:12116	10646943	0	True				
ANR	10646947	IdentifierDecl	* cg = _cupsGlobals ( )		10646943	0					
ANR	10646948	IdentifierDeclType	_cups_globals_t *		10646943	0					
ANR	10646949	Identifier	cg		10646943	1					
ANR	10646950	AssignmentExpression	* cg = _cupsGlobals ( )		10646943	2		=			
ANR	10646951	Identifier	cg		10646943	0					
ANR	10646952	CallExpression	_cupsGlobals ( )		10646943	1					
ANR	10646953	Callee	_cupsGlobals		10646943	0					
ANR	10646954	Identifier	_cupsGlobals		10646943	0					
ANR	10646955	ArgumentList			10646943	1					
ANR	10646956	IfStatement	if ( user )		10646943	1					
ANR	10646957	Condition	user	420:6:12159:12162	10646943	0	True				
ANR	10646958	Identifier	user		10646943	0					
ANR	10646959	ExpressionStatement	"strlcpy ( cg -> user , user , sizeof ( cg -> user ) )"	421:4:12169:12210	10646943	1	True				
ANR	10646960	CallExpression	"strlcpy ( cg -> user , user , sizeof ( cg -> user ) )"		10646943	0					
ANR	10646961	Callee	strlcpy		10646943	0					
ANR	10646962	Identifier	strlcpy		10646943	0					
ANR	10646963	ArgumentList	cg -> user		10646943	1					
ANR	10646964	Argument	cg -> user		10646943	0					
ANR	10646965	PtrMemberAccess	cg -> user		10646943	0					
ANR	10646966	Identifier	cg		10646943	0					
ANR	10646967	Identifier	user		10646943	1					
ANR	10646968	Argument	user		10646943	1					
ANR	10646969	Identifier	user		10646943	0					
ANR	10646970	Argument	sizeof ( cg -> user )		10646943	2					
ANR	10646971	SizeofExpression	sizeof ( cg -> user )		10646943	0					
ANR	10646972	Sizeof	sizeof		10646943	0					
ANR	10646973	PtrMemberAccess	cg -> user		10646943	1					
ANR	10646974	Identifier	cg		10646943	0					
ANR	10646975	Identifier	user		10646943	1					
ANR	10646976	ElseStatement	else		10646943	0					
ANR	10646977	ExpressionStatement	cg -> user [ 0 ] = '\\0'	423:4:12223:12241	10646943	0	True				
ANR	10646978	AssignmentExpression	cg -> user [ 0 ] = '\\0'		10646943	0		=			
ANR	10646979	ArrayIndexing	cg -> user [ 0 ]		10646943	0					
ANR	10646980	PtrMemberAccess	cg -> user		10646943	0					
ANR	10646981	Identifier	cg		10646943	0					
ANR	10646982	Identifier	user		10646943	1					
ANR	10646983	PrimaryExpression	0		10646943	1					
ANR	10646984	PrimaryExpression	'\\0'		10646943	1					
ANR	10646985	ReturnType	void		10646943	1					
ANR	10646986	Identifier	cupsSetUser		10646943	2					
ANR	10646987	ParameterList	const char * user		10646943	3					
ANR	10646988	Parameter	const char * user	415:12:12037:12052	10646943	0	True				
ANR	10646989	ParameterType	const char *		10646943	0					
ANR	10646990	Identifier	user		10646943	1					
ANR	10646991	CFGEntryNode	ENTRY		10646943		True				
ANR	10646992	CFGExitNode	EXIT		10646943		True				
ANR	10646993	Symbol	* * cg		10646943						
ANR	10646994	Symbol	cg		10646943						
ANR	10646995	Symbol	_cupsGlobals		10646943						
ANR	10646996	Symbol	* cg		10646943						
ANR	10646997	Symbol	* cg -> user		10646943						
ANR	10646998	Symbol	user		10646943						
ANR	10646999	Symbol	cg -> user		10646943						
ANR	10647000	Function	cupsSetUserAgent	436:0:12504:13829							
ANR	10647001	FunctionDef	cupsSetUserAgent (const char * user_agent)		10647000	0					
ANR	10647002	CompoundStatement		438:0:12592:13829	10647000	0					
ANR	10647003	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	439:2:12596:12632	10647000	0	True				
ANR	10647004	IdentifierDecl	* cg = _cupsGlobals ( )		10647000	0					
ANR	10647005	IdentifierDeclType	_cups_globals_t *		10647000	0					
ANR	10647006	Identifier	cg		10647000	1					
ANR	10647007	AssignmentExpression	* cg = _cupsGlobals ( )		10647000	2		=			
ANR	10647008	Identifier	cg		10647000	0					
ANR	10647009	CallExpression	_cupsGlobals ( )		10647000	1					
ANR	10647010	Callee	_cupsGlobals		10647000	0					
ANR	10647011	Identifier	_cupsGlobals		10647000	0					
ANR	10647012	ArgumentList			10647000	1					
ANR	10647013	IdentifierDeclStatement	SYSTEM_INFO sysinfo ;	442:2:12675:12695	10647000	1	True				
ANR	10647014	IdentifierDecl	sysinfo		10647000	0					
ANR	10647015	IdentifierDeclType	SYSTEM_INFO		10647000	0					
ANR	10647016	Identifier	sysinfo		10647000	1					
ANR	10647017	IdentifierDeclStatement	OSVERSIONINFO version ;	443:2:12724:12746	10647000	2	True				
ANR	10647018	IdentifierDecl	version		10647000	0					
ANR	10647019	IdentifierDeclType	OSVERSIONINFO		10647000	0					
ANR	10647020	Identifier	version		10647000	1					
ANR	10647021	IfStatement	if ( user_agent )		10647000	3					
ANR	10647022	Condition	user_agent	449:6:12844:12853	10647000	0	True				
ANR	10647023	Identifier	user_agent		10647000	0					
ANR	10647024	CompoundStatement		13:2:265:265	10647000	1					
ANR	10647025	ExpressionStatement	"strlcpy ( cg -> user_agent , user_agent , sizeof ( cg -> user_agent ) )"	451:4:12864:12923	10647000	0	True				
ANR	10647026	CallExpression	"strlcpy ( cg -> user_agent , user_agent , sizeof ( cg -> user_agent ) )"		10647000	0					
ANR	10647027	Callee	strlcpy		10647000	0					
ANR	10647028	Identifier	strlcpy		10647000	0					
ANR	10647029	ArgumentList	cg -> user_agent		10647000	1					
ANR	10647030	Argument	cg -> user_agent		10647000	0					
ANR	10647031	PtrMemberAccess	cg -> user_agent		10647000	0					
ANR	10647032	Identifier	cg		10647000	0					
ANR	10647033	Identifier	user_agent		10647000	1					
ANR	10647034	Argument	user_agent		10647000	1					
ANR	10647035	Identifier	user_agent		10647000	0					
ANR	10647036	Argument	sizeof ( cg -> user_agent )		10647000	2					
ANR	10647037	SizeofExpression	sizeof ( cg -> user_agent )		10647000	0					
ANR	10647038	Sizeof	sizeof		10647000	0					
ANR	10647039	PtrMemberAccess	cg -> user_agent		10647000	1					
ANR	10647040	Identifier	cg		10647000	0					
ANR	10647041	Identifier	user_agent		10647000	1					
ANR	10647042	ReturnStatement	return ;	452:4:12929:12935	10647000	1	True				
ANR	10647043	ExpressionStatement	version . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )	456:2:12957:13008	10647000	4	True				
ANR	10647044	AssignmentExpression	version . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )		10647000	0		=			
ANR	10647045	MemberAccess	version . dwOSVersionInfoSize		10647000	0					
ANR	10647046	Identifier	version		10647000	0					
ANR	10647047	Identifier	dwOSVersionInfoSize		10647000	1					
ANR	10647048	SizeofExpression	sizeof ( OSVERSIONINFO )		10647000	1					
ANR	10647049	Sizeof	sizeof		10647000	0					
ANR	10647050	SizeofOperand	OSVERSIONINFO		10647000	1					
ANR	10647051	ExpressionStatement	GetVersionEx ( & version )	457:2:13012:13034	10647000	5	True				
ANR	10647052	CallExpression	GetVersionEx ( & version )		10647000	0					
ANR	10647053	Callee	GetVersionEx		10647000	0					
ANR	10647054	Identifier	GetVersionEx		10647000	0					
ANR	10647055	ArgumentList	& version		10647000	1					
ANR	10647056	Argument	& version		10647000	0					
ANR	10647057	UnaryOperationExpression	& version		10647000	0					
ANR	10647058	UnaryOperator	&		10647000	0					
ANR	10647059	Identifier	version		10647000	1					
ANR	10647060	ExpressionStatement	GetNativeSystemInfo ( & sysinfo )	459:2:13044:13073	10647000	6	True				
ANR	10647061	CallExpression	GetNativeSystemInfo ( & sysinfo )		10647000	0					
ANR	10647062	Callee	GetNativeSystemInfo		10647000	0					
ANR	10647063	Identifier	GetNativeSystemInfo		10647000	0					
ANR	10647064	ArgumentList	& sysinfo		10647000	1					
ANR	10647065	Argument	& sysinfo		10647000	0					
ANR	10647066	UnaryOperationExpression	& sysinfo		10647000	0					
ANR	10647067	UnaryOperator	&		10647000	0					
ANR	10647068	Identifier	sysinfo		10647000	1					
ANR	10647069	Statement	snprintf	464:2:13118:13125	10647000	7	True				
ANR	10647070	Statement	(	464:10:13126:13126	10647000	8	True				
ANR	10647071	Statement	cg	464:11:13127:13128	10647000	9	True				
ANR	10647072	Statement	->	464:13:13129:13130	10647000	10	True				
ANR	10647073	Statement	user_agent	464:15:13131:13140	10647000	11	True				
ANR	10647074	Statement	","	464:25:13141:13141	10647000	12	True				
ANR	10647075	Statement	sizeof	464:27:13143:13148	10647000	13	True				
ANR	10647076	Statement	(	464:33:13149:13149	10647000	14	True				
ANR	10647077	Statement	cg	464:34:13150:13151	10647000	15	True				
ANR	10647078	Statement	->	464:36:13152:13153	10647000	16	True				
ANR	10647079	Statement	user_agent	464:38:13154:13163	10647000	17	True				
ANR	10647080	Statement	)	464:48:13164:13164	10647000	18	True				
ANR	10647081	Statement	","	464:49:13165:13165	10647000	19	True				
ANR	10647082	Statement	CUPS_MINIMAL	465:11:13178:13189	10647000	20	True				
ANR	10647083	Statement	""" (Windows %d.%d; %s) IPP/2.0"""	465:24:13191:13220	10647000	21	True				
ANR	10647084	Statement	","	465:54:13221:13221	10647000	22	True				
ANR	10647085	Statement	version	466:4:13227:13233	10647000	23	True				
ANR	10647086	Statement	.	466:11:13234:13234	10647000	24	True				
ANR	10647087	Statement	dwMajorVersion	466:12:13235:13248	10647000	25	True				
ANR	10647088	Statement	","	466:26:13249:13249	10647000	26	True				
ANR	10647089	Statement	version	466:28:13251:13257	10647000	27	True				
ANR	10647090	Statement	.	466:35:13258:13258	10647000	28	True				
ANR	10647091	Statement	dwMinorVersion	466:36:13259:13272	10647000	29	True				
ANR	10647092	Statement	","	466:50:13273:13273	10647000	30	True				
ANR	10647093	Statement	sysinfo	467:4:13279:13285	10647000	31	True				
ANR	10647094	Statement	.	467:11:13286:13286	10647000	32	True				
ANR	10647095	Statement	wProcessorArchitecture	467:12:13287:13308	10647000	33	True				
ANR	10647096	Statement	==	468:8:13318:13319	10647000	34	True				
ANR	10647097	Statement	PROCESSOR_ARCHITECTURE_AMD64	468:11:13321:13348	10647000	35	True				
ANR	10647098	Statement	?	468:40:13350:13350	10647000	36	True				
ANR	10647099	Statement	"""amd64"""	468:42:13352:13358	10647000	37	True				
ANR	10647100	Statement	:	468:50:13360:13360	10647000	38	True				
ANR	10647101	Statement	sysinfo	469:8:13370:13376	10647000	39	True				
ANR	10647102	Statement	.	469:15:13377:13377	10647000	40	True				
ANR	10647103	Statement	wProcessorArchitecture	469:16:13378:13399	10647000	41	True				
ANR	10647104	Statement	==	470:5:13406:13407	10647000	42	True				
ANR	10647105	Statement	PROCESSOR_ARCHITECTURE_ARM	470:8:13409:13434	10647000	43	True				
ANR	10647106	Statement	?	470:35:13436:13436	10647000	44	True				
ANR	10647107	Statement	"""arm"""	470:37:13438:13442	10647000	45	True				
ANR	10647108	Statement	:	470:43:13444:13444	10647000	46	True				
ANR	10647109	Statement	sysinfo	471:8:13454:13460	10647000	47	True				
ANR	10647110	Statement	.	471:15:13461:13461	10647000	48	True				
ANR	10647111	Statement	wProcessorArchitecture	471:16:13462:13483	10647000	49	True				
ANR	10647112	Statement	==	472:5:13490:13491	10647000	50	True				
ANR	10647113	Statement	PROCESSOR_ARCHITECTURE_IA64	472:8:13493:13519	10647000	51	True				
ANR	10647114	Statement	?	472:36:13521:13521	10647000	52	True				
ANR	10647115	Statement	"""ia64"""	472:38:13523:13528	10647000	53	True				
ANR	10647116	Statement	:	472:45:13530:13530	10647000	54	True				
ANR	10647117	Statement	sysinfo	473:8:13540:13546	10647000	55	True				
ANR	10647118	Statement	.	473:15:13547:13547	10647000	56	True				
ANR	10647119	Statement	wProcessorArchitecture	473:16:13548:13569	10647000	57	True				
ANR	10647120	Statement	==	474:5:13576:13577	10647000	58	True				
ANR	10647121	Statement	PROCESSOR_ARCHITECTURE_INTEL	474:8:13579:13606	10647000	59	True				
ANR	10647122	Statement	?	474:37:13608:13608	10647000	60	True				
ANR	10647123	Statement	"""intel"""	474:39:13610:13616	10647000	61	True				
ANR	10647124	Statement	:	474:47:13618:13618	10647000	62	True				
ANR	10647125	Statement	"""unknown"""	475:8:13628:13636	10647000	63	True				
ANR	10647126	Statement	)	475:17:13637:13637	10647000	64	True				
ANR	10647127	ExpressionStatement		475:18:13638:13638	10647000	65	True				
ANR	10647128	ReturnType	void		10647000	1					
ANR	10647129	Identifier	cupsSetUserAgent		10647000	2					
ANR	10647130	ParameterList	const char * user_agent		10647000	3					
ANR	10647131	Parameter	const char * user_agent	437:17:12526:12547	10647000	0	True				
ANR	10647132	ParameterType	const char *		10647000	0					
ANR	10647133	Identifier	user_agent		10647000	1					
ANR	10647134	CFGEntryNode	ENTRY		10647000		True				
ANR	10647135	CFGExitNode	EXIT		10647000		True				
ANR	10647136	Symbol	cg		10647000						
ANR	10647137	Symbol	version . dwOSVersionInfoSize		10647000						
ANR	10647138	Symbol	sysinfo		10647000						
ANR	10647139	Symbol	_cupsGlobals		10647000						
ANR	10647140	Symbol	* cg		10647000						
ANR	10647141	Symbol	cg -> user_agent		10647000						
ANR	10647142	Symbol	& sysinfo		10647000						
ANR	10647143	Symbol	version		10647000						
ANR	10647144	Symbol	& version		10647000						
ANR	10647145	Symbol	user_agent		10647000						
ANR	10647146	Function	cupsUser	496:0:14139:14333							
ANR	10647147	FunctionDef	cupsUser ()		10647146	0					
ANR	10647148	CompoundStatement		498:0:14190:14333	10647146	0					
ANR	10647149	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	499:2:14194:14230	10647146	0	True				
ANR	10647150	IdentifierDecl	* cg = _cupsGlobals ( )		10647146	0					
ANR	10647151	IdentifierDeclType	_cups_globals_t *		10647146	0					
ANR	10647152	Identifier	cg		10647146	1					
ANR	10647153	AssignmentExpression	* cg = _cupsGlobals ( )		10647146	2		=			
ANR	10647154	Identifier	cg		10647146	0					
ANR	10647155	CallExpression	_cupsGlobals ( )		10647146	1					
ANR	10647156	Callee	_cupsGlobals		10647146	0					
ANR	10647157	Identifier	_cupsGlobals		10647146	0					
ANR	10647158	ArgumentList			10647146	1					
ANR	10647159	IfStatement	if ( ! cg -> user [ 0 ] )		10647146	1					
ANR	10647160	Condition	! cg -> user [ 0 ]	502:6:14273:14284	10647146	0	True				
ANR	10647161	UnaryOperationExpression	! cg -> user [ 0 ]		10647146	0					
ANR	10647162	UnaryOperator	!		10647146	0					
ANR	10647163	ArrayIndexing	cg -> user [ 0 ]		10647146	1					
ANR	10647164	PtrMemberAccess	cg -> user		10647146	0					
ANR	10647165	Identifier	cg		10647146	0					
ANR	10647166	Identifier	user		10647146	1					
ANR	10647167	PrimaryExpression	0		10647146	1					
ANR	10647168	ExpressionStatement	_cupsSetDefaults ( )	503:4:14291:14309	10647146	1	True				
ANR	10647169	CallExpression	_cupsSetDefaults ( )		10647146	0					
ANR	10647170	Callee	_cupsSetDefaults		10647146	0					
ANR	10647171	Identifier	_cupsSetDefaults		10647146	0					
ANR	10647172	ArgumentList			10647146	1					
ANR	10647173	ReturnStatement	return ( cg -> user ) ;	505:2:14314:14331	10647146	2	True				
ANR	10647174	PtrMemberAccess	cg -> user		10647146	0					
ANR	10647175	Identifier	cg		10647146	0					
ANR	10647176	Identifier	user		10647146	1					
ANR	10647177	ReturnType	const char *		10647146	1					
ANR	10647178	Identifier	cupsUser		10647146	2					
ANR	10647179	ParameterList			10647146	3					
ANR	10647180	CFGEntryNode	ENTRY		10647146		True				
ANR	10647181	CFGExitNode	EXIT		10647146		True				
ANR	10647182	Symbol	* * cg		10647146						
ANR	10647183	Symbol	cg		10647146						
ANR	10647184	Symbol	_cupsGlobals		10647146						
ANR	10647185	Symbol	* cg		10647146						
ANR	10647186	Symbol	* cg -> user		10647146						
ANR	10647187	Symbol	cg -> user		10647146						
ANR	10647188	Function	cupsUserAgent	515:0:14444:14655							
ANR	10647189	FunctionDef	cupsUserAgent ()		10647188	0					
ANR	10647190	CompoundStatement		517:0:14508:14655	10647188	0					
ANR	10647191	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	518:2:14512:14548	10647188	0	True				
ANR	10647192	IdentifierDecl	* cg = _cupsGlobals ( )		10647188	0					
ANR	10647193	IdentifierDeclType	_cups_globals_t *		10647188	0					
ANR	10647194	Identifier	cg		10647188	1					
ANR	10647195	AssignmentExpression	* cg = _cupsGlobals ( )		10647188	2		=			
ANR	10647196	Identifier	cg		10647188	0					
ANR	10647197	CallExpression	_cupsGlobals ( )		10647188	1					
ANR	10647198	Callee	_cupsGlobals		10647188	0					
ANR	10647199	Identifier	_cupsGlobals		10647188	0					
ANR	10647200	ArgumentList			10647188	1					
ANR	10647201	IfStatement	if ( ! cg -> user_agent [ 0 ] )		10647188	1					
ANR	10647202	Condition	! cg -> user_agent [ 0 ]	521:6:14579:14596	10647188	0	True				
ANR	10647203	UnaryOperationExpression	! cg -> user_agent [ 0 ]		10647188	0					
ANR	10647204	UnaryOperator	!		10647188	0					
ANR	10647205	ArrayIndexing	cg -> user_agent [ 0 ]		10647188	1					
ANR	10647206	PtrMemberAccess	cg -> user_agent		10647188	0					
ANR	10647207	Identifier	cg		10647188	0					
ANR	10647208	Identifier	user_agent		10647188	1					
ANR	10647209	PrimaryExpression	0		10647188	1					
ANR	10647210	ExpressionStatement	cupsSetUserAgent ( NULL )	522:4:14603:14625	10647188	1	True				
ANR	10647211	CallExpression	cupsSetUserAgent ( NULL )		10647188	0					
ANR	10647212	Callee	cupsSetUserAgent		10647188	0					
ANR	10647213	Identifier	cupsSetUserAgent		10647188	0					
ANR	10647214	ArgumentList	NULL		10647188	1					
ANR	10647215	Argument	NULL		10647188	0					
ANR	10647216	Identifier	NULL		10647188	0					
ANR	10647217	ReturnStatement	return ( cg -> user_agent ) ;	524:2:14630:14653	10647188	2	True				
ANR	10647218	PtrMemberAccess	cg -> user_agent		10647188	0					
ANR	10647219	Identifier	cg		10647188	0					
ANR	10647220	Identifier	user_agent		10647188	1					
ANR	10647221	ReturnType	const char *		10647188	1					
ANR	10647222	Identifier	cupsUserAgent		10647188	2					
ANR	10647223	ParameterList			10647188	3					
ANR	10647224	CFGEntryNode	ENTRY		10647188		True				
ANR	10647225	CFGExitNode	EXIT		10647188		True				
ANR	10647226	Symbol	* cg -> user_agent		10647188						
ANR	10647227	Symbol	* * cg		10647188						
ANR	10647228	Symbol	NULL		10647188						
ANR	10647229	Symbol	cg		10647188						
ANR	10647230	Symbol	_cupsGlobals		10647188						
ANR	10647231	Symbol	* cg		10647188						
ANR	10647232	Symbol	cg -> user_agent		10647188						
ANR	10647233	Function	_cupsGetPassword	532:0:14723:19714							
ANR	10647234	FunctionDef	_cupsGetPassword (const char * prompt)		10647233	0					
ANR	10647235	CompoundStatement		534:0:14842:19714	10647233	0					
ANR	10647236	IdentifierDeclStatement	HANDLE tty ;	536:2:14859:14870	10647233	0	True				
ANR	10647237	IdentifierDecl	tty		10647233	0					
ANR	10647238	IdentifierDeclType	HANDLE		10647233	0					
ANR	10647239	Identifier	tty		10647233	1					
ANR	10647240	IdentifierDeclStatement	DWORD mode ;	537:2:14896:14908	10647233	1	True				
ANR	10647241	IdentifierDecl	mode		10647233	0					
ANR	10647242	IdentifierDeclType	DWORD		10647233	0					
ANR	10647243	Identifier	mode		10647233	1					
ANR	10647244	IdentifierDeclStatement	"char passch , * passptr , * passend ;"	538:2:14932:15031	10647233	2	True				
ANR	10647245	IdentifierDecl	passch		10647233	0					
ANR	10647246	IdentifierDeclType	char		10647233	0					
ANR	10647247	Identifier	passch		10647233	1					
ANR	10647248	IdentifierDecl	* passptr		10647233	1					
ANR	10647249	IdentifierDeclType	char *		10647233	0					
ANR	10647250	Identifier	passptr		10647233	1					
ANR	10647251	IdentifierDecl	* passend		10647233	2					
ANR	10647252	IdentifierDeclType	char *		10647233	0					
ANR	10647253	Identifier	passend		10647233	1					
ANR	10647254	IdentifierDeclStatement	DWORD passbytes ;	541:2:15064:15081	10647233	3	True				
ANR	10647255	IdentifierDecl	passbytes		10647233	0					
ANR	10647256	IdentifierDeclType	DWORD		10647233	0					
ANR	10647257	Identifier	passbytes		10647233	1					
ANR	10647258	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	542:2:15102:15138	10647233	4	True				
ANR	10647259	IdentifierDecl	* cg = _cupsGlobals ( )		10647233	0					
ANR	10647260	IdentifierDeclType	_cups_globals_t *		10647233	0					
ANR	10647261	Identifier	cg		10647233	1					
ANR	10647262	AssignmentExpression	* cg = _cupsGlobals ( )		10647233	2		=			
ANR	10647263	Identifier	cg		10647233	0					
ANR	10647264	CallExpression	_cupsGlobals ( )		10647233	1					
ANR	10647265	Callee	_cupsGlobals		10647233	0					
ANR	10647266	Identifier	_cupsGlobals		10647233	0					
ANR	10647267	ArgumentList			10647233	1					
ANR	10647268	IfStatement	if ( ( tty = GetStdHandle ( STD_INPUT_HANDLE ) ) == INVALID_HANDLE_VALUE )		10647233	5					
ANR	10647269	Condition	( tty = GetStdHandle ( STD_INPUT_HANDLE ) ) == INVALID_HANDLE_VALUE	550:6:15228:15289	10647233	0	True				
ANR	10647270	EqualityExpression	( tty = GetStdHandle ( STD_INPUT_HANDLE ) ) == INVALID_HANDLE_VALUE		10647233	0		==			
ANR	10647271	AssignmentExpression	tty = GetStdHandle ( STD_INPUT_HANDLE )		10647233	0		=			
ANR	10647272	Identifier	tty		10647233	0					
ANR	10647273	CallExpression	GetStdHandle ( STD_INPUT_HANDLE )		10647233	1					
ANR	10647274	Callee	GetStdHandle		10647233	0					
ANR	10647275	Identifier	GetStdHandle		10647233	0					
ANR	10647276	ArgumentList	STD_INPUT_HANDLE		10647233	1					
ANR	10647277	Argument	STD_INPUT_HANDLE		10647233	0					
ANR	10647278	Identifier	STD_INPUT_HANDLE		10647233	0					
ANR	10647279	Identifier	INVALID_HANDLE_VALUE		10647233	1					
ANR	10647280	ReturnStatement	return ( NULL ) ;	551:4:15296:15309	10647233	1	True				
ANR	10647281	Identifier	NULL		10647233	0					
ANR	10647282	IfStatement	"if ( ! GetConsoleMode ( tty , & mode ) )"		10647233	6					
ANR	10647283	Condition	"! GetConsoleMode ( tty , & mode )"	553:6:15318:15344	10647233	0	True				
ANR	10647284	UnaryOperationExpression	"! GetConsoleMode ( tty , & mode )"		10647233	0					
ANR	10647285	UnaryOperator	!		10647233	0					
ANR	10647286	CallExpression	"GetConsoleMode ( tty , & mode )"		10647233	1					
ANR	10647287	Callee	GetConsoleMode		10647233	0					
ANR	10647288	Identifier	GetConsoleMode		10647233	0					
ANR	10647289	ArgumentList	tty		10647233	1					
ANR	10647290	Argument	tty		10647233	0					
ANR	10647291	Identifier	tty		10647233	0					
ANR	10647292	Argument	& mode		10647233	1					
ANR	10647293	UnaryOperationExpression	& mode		10647233	0					
ANR	10647294	UnaryOperator	&		10647233	0					
ANR	10647295	Identifier	mode		10647233	1					
ANR	10647296	ReturnStatement	return ( NULL ) ;	554:4:15351:15364	10647233	1	True				
ANR	10647297	Identifier	NULL		10647233	0					
ANR	10647298	IfStatement	"if ( ! SetConsoleMode ( tty , 0 ) )"		10647233	7					
ANR	10647299	Condition	"! SetConsoleMode ( tty , 0 )"	556:6:15373:15395	10647233	0	True				
ANR	10647300	UnaryOperationExpression	"! SetConsoleMode ( tty , 0 )"		10647233	0					
ANR	10647301	UnaryOperator	!		10647233	0					
ANR	10647302	CallExpression	"SetConsoleMode ( tty , 0 )"		10647233	1					
ANR	10647303	Callee	SetConsoleMode		10647233	0					
ANR	10647304	Identifier	SetConsoleMode		10647233	0					
ANR	10647305	ArgumentList	tty		10647233	1					
ANR	10647306	Argument	tty		10647233	0					
ANR	10647307	Identifier	tty		10647233	0					
ANR	10647308	Argument	0		10647233	1					
ANR	10647309	PrimaryExpression	0		10647233	0					
ANR	10647310	ReturnStatement	return ( NULL ) ;	557:4:15402:15415	10647233	1	True				
ANR	10647311	Identifier	NULL		10647233	0					
ANR	10647312	ExpressionStatement	"printf ( ""%s "" , prompt )"	563:2:15456:15477	10647233	8	True				
ANR	10647313	CallExpression	"printf ( ""%s "" , prompt )"		10647233	0					
ANR	10647314	Callee	printf		10647233	0					
ANR	10647315	Identifier	printf		10647233	0					
ANR	10647316	ArgumentList	"""%s """		10647233	1					
ANR	10647317	Argument	"""%s """		10647233	0					
ANR	10647318	PrimaryExpression	"""%s """		10647233	0					
ANR	10647319	Argument	prompt		10647233	1					
ANR	10647320	Identifier	prompt		10647233	0					
ANR	10647321	ExpressionStatement	fflush ( stdout )	564:2:15481:15495	10647233	9	True				
ANR	10647322	CallExpression	fflush ( stdout )		10647233	0					
ANR	10647323	Callee	fflush		10647233	0					
ANR	10647324	Identifier	fflush		10647233	0					
ANR	10647325	ArgumentList	stdout		10647233	1					
ANR	10647326	Argument	stdout		10647233	0					
ANR	10647327	Identifier	stdout		10647233	0					
ANR	10647328	ExpressionStatement	passptr = cg -> password	571:2:15621:15643	10647233	10	True				
ANR	10647329	AssignmentExpression	passptr = cg -> password		10647233	0		=			
ANR	10647330	Identifier	passptr		10647233	0					
ANR	10647331	PtrMemberAccess	cg -> password		10647233	1					
ANR	10647332	Identifier	cg		10647233	0					
ANR	10647333	Identifier	password		10647233	1					
ANR	10647334	ExpressionStatement	passend = cg -> password + sizeof ( cg -> password ) - 1	572:2:15647:15696	10647233	11	True				
ANR	10647335	AssignmentExpression	passend = cg -> password + sizeof ( cg -> password ) - 1		10647233	0		=			
ANR	10647336	Identifier	passend		10647233	0					
ANR	10647337	AdditiveExpression	cg -> password + sizeof ( cg -> password ) - 1		10647233	1		+			
ANR	10647338	PtrMemberAccess	cg -> password		10647233	0					
ANR	10647339	Identifier	cg		10647233	0					
ANR	10647340	Identifier	password		10647233	1					
ANR	10647341	AdditiveExpression	sizeof ( cg -> password ) - 1		10647233	1		-			
ANR	10647342	SizeofExpression	sizeof ( cg -> password )		10647233	0					
ANR	10647343	Sizeof	sizeof		10647233	0					
ANR	10647344	PtrMemberAccess	cg -> password		10647233	1					
ANR	10647345	Identifier	cg		10647233	0					
ANR	10647346	Identifier	password		10647233	1					
ANR	10647347	PrimaryExpression	1		10647233	1					
ANR	10647348	WhileStatement	"while ( ReadFile ( tty , & passch , 1 , & passbytes , NULL ) )"		10647233	12					
ANR	10647349	Condition	"ReadFile ( tty , & passch , 1 , & passbytes , NULL )"	574:9:15708:15750	10647233	0	True				
ANR	10647350	CallExpression	"ReadFile ( tty , & passch , 1 , & passbytes , NULL )"		10647233	0					
ANR	10647351	Callee	ReadFile		10647233	0					
ANR	10647352	Identifier	ReadFile		10647233	0					
ANR	10647353	ArgumentList	tty		10647233	1					
ANR	10647354	Argument	tty		10647233	0					
ANR	10647355	Identifier	tty		10647233	0					
ANR	10647356	Argument	& passch		10647233	1					
ANR	10647357	UnaryOperationExpression	& passch		10647233	0					
ANR	10647358	UnaryOperator	&		10647233	0					
ANR	10647359	Identifier	passch		10647233	1					
ANR	10647360	Argument	1		10647233	2					
ANR	10647361	PrimaryExpression	1		10647233	0					
ANR	10647362	Argument	& passbytes		10647233	3					
ANR	10647363	UnaryOperationExpression	& passbytes		10647233	0					
ANR	10647364	UnaryOperator	&		10647233	0					
ANR	10647365	Identifier	passbytes		10647233	1					
ANR	10647366	Argument	NULL		10647233	4					
ANR	10647367	Identifier	NULL		10647233	0					
ANR	10647368	CompoundStatement		42:2:912:912	10647233	1					
ANR	10647369	IfStatement	if ( passch == 0x0A || passch == 0x0D )		10647233	0					
ANR	10647370	Condition	passch == 0x0A || passch == 0x0D	576:8:15765:15796	10647233	0	True				
ANR	10647371	OrExpression	passch == 0x0A || passch == 0x0D		10647233	0		||			
ANR	10647372	EqualityExpression	passch == 0x0A		10647233	0		==			
ANR	10647373	Identifier	passch		10647233	0					
ANR	10647374	PrimaryExpression	0x0A		10647233	1					
ANR	10647375	EqualityExpression	passch == 0x0D		10647233	1		==			
ANR	10647376	Identifier	passch		10647233	0					
ANR	10647377	PrimaryExpression	0x0D		10647233	1					
ANR	10647378	CompoundStatement		44:4:960:960	10647233	1					
ANR	10647379	BreakStatement	break ;	582:6:15853:15858	10647233	0	True				
ANR	10647380	ElseStatement	else		10647233	0					
ANR	10647381	IfStatement	if ( passch == 0x08 || passch == 0x7F )		10647233	0					
ANR	10647382	Condition	passch == 0x08 || passch == 0x7F	584:13:15879:15910	10647233	0	True				
ANR	10647383	OrExpression	passch == 0x08 || passch == 0x7F		10647233	0		||			
ANR	10647384	EqualityExpression	passch == 0x08		10647233	0		==			
ANR	10647385	Identifier	passch		10647233	0					
ANR	10647386	PrimaryExpression	0x08		10647233	1					
ANR	10647387	EqualityExpression	passch == 0x7F		10647233	1		==			
ANR	10647388	Identifier	passch		10647233	0					
ANR	10647389	PrimaryExpression	0x7F		10647233	1					
ANR	10647390	CompoundStatement		52:4:1074:1074	10647233	1					
ANR	10647391	IfStatement	if ( passptr > cg -> password )		10647233	0					
ANR	10647392	Condition	passptr > cg -> password	590:10:15993:16014	10647233	0	True				
ANR	10647393	RelationalExpression	passptr > cg -> password		10647233	0		>			
ANR	10647394	Identifier	passptr		10647233	0					
ANR	10647395	PtrMemberAccess	cg -> password		10647233	1					
ANR	10647396	Identifier	cg		10647233	0					
ANR	10647397	Identifier	password		10647233	1					
ANR	10647398	CompoundStatement		58:6:1180:1180	10647233	1					
ANR	10647399	ExpressionStatement	passptr --	592:8:16033:16043	10647233	0	True				
ANR	10647400	PostIncDecOperationExpression	passptr --		10647233	0					
ANR	10647401	Identifier	passptr		10647233	0					
ANR	10647402	IncDec	--		10647233	1					
ANR	10647403	ExpressionStatement	"fputs ( ""\\010 \\010"" , stdout )"	593:8:16053:16079	10647233	1	True				
ANR	10647404	CallExpression	"fputs ( ""\\010 \\010"" , stdout )"		10647233	0					
ANR	10647405	Callee	fputs		10647233	0					
ANR	10647406	Identifier	fputs		10647233	0					
ANR	10647407	ArgumentList	"""\\010 \\010"""		10647233	1					
ANR	10647408	Argument	"""\\010 \\010"""		10647233	0					
ANR	10647409	PrimaryExpression	"""\\010 \\010"""		10647233	0					
ANR	10647410	Argument	stdout		10647233	1					
ANR	10647411	Identifier	stdout		10647233	0					
ANR	10647412	ElseStatement	else		10647233	0					
ANR	10647413	ExpressionStatement	putchar ( 0x07 )	596:8:16108:16121	10647233	0	True				
ANR	10647414	CallExpression	putchar ( 0x07 )		10647233	0					
ANR	10647415	Callee	putchar		10647233	0					
ANR	10647416	Identifier	putchar		10647233	0					
ANR	10647417	ArgumentList	0x07		10647233	1					
ANR	10647418	Argument	0x07		10647233	0					
ANR	10647419	PrimaryExpression	0x07		10647233	0					
ANR	10647420	ElseStatement	else		10647233	0					
ANR	10647421	IfStatement	if ( passch == 0x15 )		10647233	0					
ANR	10647422	Condition	passch == 0x15	598:13:16142:16155	10647233	0	True				
ANR	10647423	EqualityExpression	passch == 0x15		10647233	0		==			
ANR	10647424	Identifier	passch		10647233	0					
ANR	10647425	PrimaryExpression	0x15		10647233	1					
ANR	10647426	CompoundStatement		66:4:1319:1319	10647233	1					
ANR	10647427	IfStatement	if ( passptr > cg -> password )		10647233	0					
ANR	10647428	Condition	passptr > cg -> password	604:10:16220:16241	10647233	0	True				
ANR	10647429	RelationalExpression	passptr > cg -> password		10647233	0		>			
ANR	10647430	Identifier	passptr		10647233	0					
ANR	10647431	PtrMemberAccess	cg -> password		10647233	1					
ANR	10647432	Identifier	cg		10647233	0					
ANR	10647433	Identifier	password		10647233	1					
ANR	10647434	CompoundStatement		72:6:1407:1407	10647233	1					
ANR	10647435	WhileStatement	while ( passptr > cg -> password )		10647233	0					
ANR	10647436	Condition	passptr > cg -> password	606:8:16260:16281	10647233	0	True				
ANR	10647437	RelationalExpression	passptr > cg -> password		10647233	0		>			
ANR	10647438	Identifier	passptr		10647233	0					
ANR	10647439	PtrMemberAccess	cg -> password		10647233	1					
ANR	10647440	Identifier	cg		10647233	0					
ANR	10647441	Identifier	password		10647233	1					
ANR	10647442	CompoundStatement		74:1:1442:1442	10647233	1					
ANR	10647443	ExpressionStatement	passptr --	608:10:16297:16307	10647233	0	True				
ANR	10647444	PostIncDecOperationExpression	passptr --		10647233	0					
ANR	10647445	Identifier	passptr		10647233	0					
ANR	10647446	IncDec	--		10647233	1					
ANR	10647447	ExpressionStatement	"fputs ( ""\\010 \\010"" , stdout )"	609:10:16319:16345	10647233	1	True				
ANR	10647448	CallExpression	"fputs ( ""\\010 \\010"" , stdout )"		10647233	0					
ANR	10647449	Callee	fputs		10647233	0					
ANR	10647450	Identifier	fputs		10647233	0					
ANR	10647451	ArgumentList	"""\\010 \\010"""		10647233	1					
ANR	10647452	Argument	"""\\010 \\010"""		10647233	0					
ANR	10647453	PrimaryExpression	"""\\010 \\010"""		10647233	0					
ANR	10647454	Argument	stdout		10647233	1					
ANR	10647455	Identifier	stdout		10647233	0					
ANR	10647456	ElseStatement	else		10647233	0					
ANR	10647457	ExpressionStatement	putchar ( 0x07 )	613:8:16384:16397	10647233	0	True				
ANR	10647458	CallExpression	putchar ( 0x07 )		10647233	0					
ANR	10647459	Callee	putchar		10647233	0					
ANR	10647460	Identifier	putchar		10647233	0					
ANR	10647461	ArgumentList	0x07		10647233	1					
ANR	10647462	Argument	0x07		10647233	0					
ANR	10647463	PrimaryExpression	0x07		10647233	0					
ANR	10647464	ElseStatement	else		10647233	0					
ANR	10647465	IfStatement	if ( passch == 0x03 )		10647233	0					
ANR	10647466	Condition	passch == 0x03	615:13:16418:16431	10647233	0	True				
ANR	10647467	EqualityExpression	passch == 0x03		10647233	0		==			
ANR	10647468	Identifier	passch		10647233	0					
ANR	10647469	PrimaryExpression	0x03		10647233	1					
ANR	10647470	CompoundStatement		83:4:1595:1595	10647233	1					
ANR	10647471	ExpressionStatement	passptr = cg -> password	621:6:16482:16504	10647233	0	True				
ANR	10647472	AssignmentExpression	passptr = cg -> password		10647233	0		=			
ANR	10647473	Identifier	passptr		10647233	0					
ANR	10647474	PtrMemberAccess	cg -> password		10647233	1					
ANR	10647475	Identifier	cg		10647233	0					
ANR	10647476	Identifier	password		10647233	1					
ANR	10647477	BreakStatement	break ;	622:6:16512:16517	10647233	1	True				
ANR	10647478	ElseStatement	else		10647233	0					
ANR	10647479	IfStatement	if ( ( passch & 255 ) < 0x20 || passptr >= passend )		10647233	0					
ANR	10647480	Condition	( passch & 255 ) < 0x20 || passptr >= passend	624:13:16538:16580	10647233	0	True				
ANR	10647481	OrExpression	( passch & 255 ) < 0x20 || passptr >= passend		10647233	0		||			
ANR	10647482	RelationalExpression	( passch & 255 ) < 0x20		10647233	0		<			
ANR	10647483	BitAndExpression	passch & 255		10647233	0		&			
ANR	10647484	Identifier	passch		10647233	0					
ANR	10647485	PrimaryExpression	255		10647233	1					
ANR	10647486	PrimaryExpression	0x20		10647233	1					
ANR	10647487	RelationalExpression	passptr >= passend		10647233	1		>=			
ANR	10647488	Identifier	passptr		10647233	0					
ANR	10647489	Identifier	passend		10647233	1					
ANR	10647490	ExpressionStatement	putchar ( 0x07 )	625:6:16589:16602	10647233	1	True				
ANR	10647491	CallExpression	putchar ( 0x07 )		10647233	0					
ANR	10647492	Callee	putchar		10647233	0					
ANR	10647493	Identifier	putchar		10647233	0					
ANR	10647494	ArgumentList	0x07		10647233	1					
ANR	10647495	Argument	0x07		10647233	0					
ANR	10647496	PrimaryExpression	0x07		10647233	0					
ANR	10647497	ElseStatement	else		10647233	0					
ANR	10647498	CompoundStatement		94:4:1774:1774	10647233	0					
ANR	10647499	ExpressionStatement	* passptr ++ = passch	628:6:16625:16644	10647233	0	True				
ANR	10647500	AssignmentExpression	* passptr ++ = passch		10647233	0		=			
ANR	10647501	UnaryOperationExpression	* passptr ++		10647233	0					
ANR	10647502	UnaryOperator	*		10647233	0					
ANR	10647503	PostIncDecOperationExpression	passptr ++		10647233	1					
ANR	10647504	Identifier	passptr		10647233	0					
ANR	10647505	IncDec	++		10647233	1					
ANR	10647506	Identifier	passch		10647233	1					
ANR	10647507	ExpressionStatement	putchar ( _CUPS_PASSCHAR )	629:6:16652:16675	10647233	1	True				
ANR	10647508	CallExpression	putchar ( _CUPS_PASSCHAR )		10647233	0					
ANR	10647509	Callee	putchar		10647233	0					
ANR	10647510	Identifier	putchar		10647233	0					
ANR	10647511	ArgumentList	_CUPS_PASSCHAR		10647233	1					
ANR	10647512	Argument	_CUPS_PASSCHAR		10647233	0					
ANR	10647513	Identifier	_CUPS_PASSCHAR		10647233	0					
ANR	10647514	ExpressionStatement	fflush ( stdout )	632:4:16688:16702	10647233	1	True				
ANR	10647515	CallExpression	fflush ( stdout )		10647233	0					
ANR	10647516	Callee	fflush		10647233	0					
ANR	10647517	Identifier	fflush		10647233	0					
ANR	10647518	ArgumentList	stdout		10647233	1					
ANR	10647519	Argument	stdout		10647233	0					
ANR	10647520	Identifier	stdout		10647233	0					
ANR	10647521	ExpressionStatement	putchar ( '\\n' )	635:2:16711:16724	10647233	13	True				
ANR	10647522	CallExpression	putchar ( '\\n' )		10647233	0					
ANR	10647523	Callee	putchar		10647233	0					
ANR	10647524	Identifier	putchar		10647233	0					
ANR	10647525	ArgumentList	'\\n'		10647233	1					
ANR	10647526	Argument	'\\n'		10647233	0					
ANR	10647527	PrimaryExpression	'\\n'		10647233	0					
ANR	10647528	ExpressionStatement	fflush ( stdout )	636:2:16728:16742	10647233	14	True				
ANR	10647529	CallExpression	fflush ( stdout )		10647233	0					
ANR	10647530	Callee	fflush		10647233	0					
ANR	10647531	Identifier	fflush		10647233	0					
ANR	10647532	ArgumentList	stdout		10647233	1					
ANR	10647533	Argument	stdout		10647233	0					
ANR	10647534	Identifier	stdout		10647233	0					
ANR	10647535	ExpressionStatement	"SetConsoleMode ( tty , mode )"	642:2:16772:16797	10647233	15	True				
ANR	10647536	CallExpression	"SetConsoleMode ( tty , mode )"		10647233	0					
ANR	10647537	Callee	SetConsoleMode		10647233	0					
ANR	10647538	Identifier	SetConsoleMode		10647233	0					
ANR	10647539	ArgumentList	tty		10647233	1					
ANR	10647540	Argument	tty		10647233	0					
ANR	10647541	Identifier	tty		10647233	0					
ANR	10647542	Argument	mode		10647233	1					
ANR	10647543	Identifier	mode		10647233	0					
ANR	10647544	IfStatement	if ( passbytes == 1 && passptr > cg -> password )		10647233	16					
ANR	10647545	Condition	passbytes == 1 && passptr > cg -> password	648:6:16847:16886	10647233	0	True				
ANR	10647546	AndExpression	passbytes == 1 && passptr > cg -> password		10647233	0		&&			
ANR	10647547	EqualityExpression	passbytes == 1		10647233	0		==			
ANR	10647548	Identifier	passbytes		10647233	0					
ANR	10647549	PrimaryExpression	1		10647233	1					
ANR	10647550	RelationalExpression	passptr > cg -> password		10647233	1		>			
ANR	10647551	Identifier	passptr		10647233	0					
ANR	10647552	PtrMemberAccess	cg -> password		10647233	1					
ANR	10647553	Identifier	cg		10647233	0					
ANR	10647554	Identifier	password		10647233	1					
ANR	10647555	CompoundStatement		116:2:2048:2048	10647233	1					
ANR	10647556	ExpressionStatement	* passptr = '\\0'	650:4:16897:16912	10647233	0	True				
ANR	10647557	AssignmentExpression	* passptr = '\\0'		10647233	0		=			
ANR	10647558	UnaryOperationExpression	* passptr		10647233	0					
ANR	10647559	UnaryOperator	*		10647233	0					
ANR	10647560	Identifier	passptr		10647233	1					
ANR	10647561	PrimaryExpression	'\\0'		10647233	1					
ANR	10647562	ReturnStatement	return ( cg -> password ) ;	651:4:16918:16939	10647233	1	True				
ANR	10647563	PtrMemberAccess	cg -> password		10647233	0					
ANR	10647564	Identifier	cg		10647233	0					
ANR	10647565	Identifier	password		10647233	1					
ANR	10647566	ElseStatement	else		10647233	0					
ANR	10647567	CompoundStatement		121:2:2111:2111	10647233	0					
ANR	10647568	ExpressionStatement	"memset ( cg -> password , 0 , sizeof ( cg -> password ) )"	655:4:16960:17005	10647233	0	True				
ANR	10647569	CallExpression	"memset ( cg -> password , 0 , sizeof ( cg -> password ) )"		10647233	0					
ANR	10647570	Callee	memset		10647233	0					
ANR	10647571	Identifier	memset		10647233	0					
ANR	10647572	ArgumentList	cg -> password		10647233	1					
ANR	10647573	Argument	cg -> password		10647233	0					
ANR	10647574	PtrMemberAccess	cg -> password		10647233	0					
ANR	10647575	Identifier	cg		10647233	0					
ANR	10647576	Identifier	password		10647233	1					
ANR	10647577	Argument	0		10647233	1					
ANR	10647578	PrimaryExpression	0		10647233	0					
ANR	10647579	Argument	sizeof ( cg -> password )		10647233	2					
ANR	10647580	SizeofExpression	sizeof ( cg -> password )		10647233	0					
ANR	10647581	Sizeof	sizeof		10647233	0					
ANR	10647582	PtrMemberAccess	cg -> password		10647233	1					
ANR	10647583	Identifier	cg		10647233	0					
ANR	10647584	Identifier	password		10647233	1					
ANR	10647585	ReturnStatement	return ( NULL ) ;	656:4:17011:17024	10647233	1	True				
ANR	10647586	Identifier	NULL		10647233	0					
ANR	10647587	ReturnType	const char *		10647233	1					
ANR	10647588	Identifier	_cupsGetPassword		10647233	2					
ANR	10647589	ParameterList	const char * prompt		10647233	3					
ANR	10647590	Parameter	const char * prompt	533:17:14798:14815	10647233	0	True				
ANR	10647591	ParameterType	const char *		10647233	0					
ANR	10647592	Identifier	prompt		10647233	1					
ANR	10647593	CFGEntryNode	ENTRY		10647233		True				
ANR	10647594	CFGExitNode	EXIT		10647233		True				
ANR	10647595	Symbol	GetStdHandle		10647233						
ANR	10647596	Symbol	stdout		10647233						
ANR	10647597	Symbol	_cupsGlobals		10647233						
ANR	10647598	Symbol	* cg		10647233						
ANR	10647599	Symbol	GetConsoleMode		10647233						
ANR	10647600	Symbol	ReadFile		10647233						
ANR	10647601	Symbol	* passptr ++		10647233						
ANR	10647602	Symbol	mode		10647233						
ANR	10647603	Symbol	& mode		10647233						
ANR	10647604	Symbol	SetConsoleMode		10647233						
ANR	10647605	Symbol	_CUPS_PASSCHAR		10647233						
ANR	10647606	Symbol	passch		10647233						
ANR	10647607	Symbol	passend		10647233						
ANR	10647608	Symbol	NULL		10647233						
ANR	10647609	Symbol	cg		10647233						
ANR	10647610	Symbol	STD_INPUT_HANDLE		10647233						
ANR	10647611	Symbol	& passbytes		10647233						
ANR	10647612	Symbol	cg -> password		10647233						
ANR	10647613	Symbol	INVALID_HANDLE_VALUE		10647233						
ANR	10647614	Symbol	* passptr		10647233						
ANR	10647615	Symbol	& passch		10647233						
ANR	10647616	Symbol	passbytes		10647233						
ANR	10647617	Symbol	passptr		10647233						
ANR	10647618	Symbol	tty		10647233						
ANR	10647619	Symbol	prompt		10647233						
ANR	10647620	Function	_cupsGSSServiceName	808:0:19811:20005							
ANR	10647621	FunctionDef	_cupsGSSServiceName ()		10647620	0					
ANR	10647622	CompoundStatement		810:0:19850:20005	10647620	0					
ANR	10647623	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	811:2:19854:19890	10647620	0	True				
ANR	10647624	IdentifierDecl	* cg = _cupsGlobals ( )		10647620	0					
ANR	10647625	IdentifierDeclType	_cups_globals_t *		10647620	0					
ANR	10647626	Identifier	cg		10647620	1					
ANR	10647627	AssignmentExpression	* cg = _cupsGlobals ( )		10647620	2		=			
ANR	10647628	Identifier	cg		10647620	0					
ANR	10647629	CallExpression	_cupsGlobals ( )		10647620	1					
ANR	10647630	Callee	_cupsGlobals		10647620	0					
ANR	10647631	Identifier	_cupsGlobals		10647620	0					
ANR	10647632	ArgumentList			10647620	1					
ANR	10647633	IfStatement	if ( ! cg -> gss_service_name [ 0 ] )		10647620	1					
ANR	10647634	Condition	! cg -> gss_service_name [ 0 ]	814:6:19921:19944	10647620	0	True				
ANR	10647635	UnaryOperationExpression	! cg -> gss_service_name [ 0 ]		10647620	0					
ANR	10647636	UnaryOperator	!		10647620	0					
ANR	10647637	ArrayIndexing	cg -> gss_service_name [ 0 ]		10647620	1					
ANR	10647638	PtrMemberAccess	cg -> gss_service_name		10647620	0					
ANR	10647639	Identifier	cg		10647620	0					
ANR	10647640	Identifier	gss_service_name		10647620	1					
ANR	10647641	PrimaryExpression	0		10647620	1					
ANR	10647642	ExpressionStatement	_cupsSetDefaults ( )	815:4:19951:19969	10647620	1	True				
ANR	10647643	CallExpression	_cupsSetDefaults ( )		10647620	0					
ANR	10647644	Callee	_cupsSetDefaults		10647620	0					
ANR	10647645	Identifier	_cupsSetDefaults		10647620	0					
ANR	10647646	ArgumentList			10647620	1					
ANR	10647647	ReturnStatement	return ( cg -> gss_service_name ) ;	817:2:19974:20003	10647620	2	True				
ANR	10647648	PtrMemberAccess	cg -> gss_service_name		10647620	0					
ANR	10647649	Identifier	cg		10647620	0					
ANR	10647650	Identifier	gss_service_name		10647620	1					
ANR	10647651	ReturnType	const char *		10647620	1					
ANR	10647652	Identifier	_cupsGSSServiceName		10647620	2					
ANR	10647653	ParameterList			10647620	3					
ANR	10647654	CFGEntryNode	ENTRY		10647620		True				
ANR	10647655	CFGExitNode	EXIT		10647620		True				
ANR	10647656	Symbol	* * cg		10647620						
ANR	10647657	Symbol	cg		10647620						
ANR	10647658	Symbol	cg -> gss_service_name		10647620						
ANR	10647659	Symbol	_cupsGlobals		10647620						
ANR	10647660	Symbol	* cg		10647620						
ANR	10647661	Symbol	* cg -> gss_service_name		10647620						
ANR	10647662	Function	_cupsSetDefaults	826:0:20114:23071							
ANR	10647663	FunctionDef	_cupsSetDefaults ()		10647662	0					
ANR	10647664	CompoundStatement		828:0:20142:23071	10647662	0					
ANR	10647665	IdentifierDeclStatement	cups_file_t * fp ;	829:2:20146:20161	10647662	0	True				
ANR	10647666	IdentifierDecl	* fp		10647662	0					
ANR	10647667	IdentifierDeclType	cups_file_t *		10647662	0					
ANR	10647668	Identifier	fp		10647662	1					
ANR	10647669	Statement	const	830:2:20178:20182	10647662	1	True				
ANR	10647670	Statement	char	830:8:20184:20187	10647662	2	True				
ANR	10647671	Statement	*	830:13:20189:20189	10647662	3	True				
ANR	10647672	Statement	home	830:14:20190:20193	10647662	4	True				
ANR	10647673	Statement	","	830:18:20194:20194	10647662	5	True				
ANR	10647674	Statement	*	831:2:20229:20229	10647662	6	True				
ANR	10647675	Statement	cups_encryption	831:3:20230:20244	10647662	7	True				
ANR	10647676	Statement	","	831:18:20245:20245	10647662	8	True				
ANR	10647677	Statement	*	832:2:20279:20279	10647662	9	True				
ANR	10647678	Statement	cups_server	832:3:20280:20290	10647662	10	True				
ANR	10647679	Statement	","	832:14:20291:20291	10647662	11	True				
ANR	10647680	Statement	*	833:2:20322:20322	10647662	12	True				
ANR	10647681	Statement	cups_user	833:3:20323:20331	10647662	13	True				
ANR	10647682	Statement	","	833:12:20332:20332	10647662	14	True				
ANR	10647683	Statement	*	835:2:20385:20385	10647662	15	True				
ANR	10647684	Statement	cups_gssservicename	835:3:20386:20404	10647662	16	True				
ANR	10647685	Statement	","	835:22:20405:20405	10647662	17	True				
ANR	10647686	ExpressionStatement	"* cups_anyroot , * cups_expiredroot , * cups_expiredcerts"	837:2:20468:20583	10647662	18	True				
ANR	10647687	Expression	"* cups_anyroot , * cups_expiredroot , * cups_expiredcerts"		10647662	0					
ANR	10647688	UnaryOperationExpression	* cups_anyroot		10647662	0					
ANR	10647689	UnaryOperator	*		10647662	0					
ANR	10647690	Identifier	cups_anyroot		10647662	1					
ANR	10647691	Expression	"* cups_expiredroot , * cups_expiredcerts"		10647662	1					
ANR	10647692	UnaryOperationExpression	* cups_expiredroot		10647662	0					
ANR	10647693	UnaryOperator	*		10647662	0					
ANR	10647694	Identifier	cups_expiredroot		10647662	1					
ANR	10647695	UnaryOperationExpression	* cups_expiredcerts		10647662	1					
ANR	10647696	UnaryOperator	*		10647662	0					
ANR	10647697	Identifier	cups_expiredcerts		10647662	1					
ANR	10647698	IdentifierDeclStatement	char filename [ 1024 ] ;	840:2:20619:20639	10647662	19	True				
ANR	10647699	IdentifierDecl	filename [ 1024 ]		10647662	0					
ANR	10647700	IdentifierDeclType	char [ 1024 ]		10647662	0					
ANR	10647701	Identifier	filename		10647662	1					
ANR	10647702	PrimaryExpression	1024		10647662	2					
ANR	10647703	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	841:2:20659:20695	10647662	20	True				
ANR	10647704	IdentifierDecl	* cg = _cupsGlobals ( )		10647662	0					
ANR	10647705	IdentifierDeclType	_cups_globals_t *		10647662	0					
ANR	10647706	Identifier	cg		10647662	1					
ANR	10647707	AssignmentExpression	* cg = _cupsGlobals ( )		10647662	2		=			
ANR	10647708	Identifier	cg		10647662	0					
ANR	10647709	CallExpression	_cupsGlobals ( )		10647662	1					
ANR	10647710	Callee	_cupsGlobals		10647662	0					
ANR	10647711	Identifier	_cupsGlobals		10647662	0					
ANR	10647712	ArgumentList			10647662	1					
ANR	10647713	ExpressionStatement	"DEBUG_puts ( ""_cupsSetDefaults()"" )"	844:2:20734:20766	10647662	21	True				
ANR	10647714	CallExpression	"DEBUG_puts ( ""_cupsSetDefaults()"" )"		10647662	0					
ANR	10647715	Callee	DEBUG_puts		10647662	0					
ANR	10647716	Identifier	DEBUG_puts		10647662	0					
ANR	10647717	ArgumentList	"""_cupsSetDefaults()"""		10647662	1					
ANR	10647718	Argument	"""_cupsSetDefaults()"""		10647662	0					
ANR	10647719	PrimaryExpression	"""_cupsSetDefaults()"""		10647662	0					
ANR	10647720	ExpressionStatement	"cups_encryption = getenv ( ""CUPS_ENCRYPTION"" )"	850:2:20824:20871	10647662	22	True				
ANR	10647721	AssignmentExpression	"cups_encryption = getenv ( ""CUPS_ENCRYPTION"" )"		10647662	0		=			
ANR	10647722	Identifier	cups_encryption		10647662	0					
ANR	10647723	CallExpression	"getenv ( ""CUPS_ENCRYPTION"" )"		10647662	1					
ANR	10647724	Callee	getenv		10647662	0					
ANR	10647725	Identifier	getenv		10647662	0					
ANR	10647726	ArgumentList	"""CUPS_ENCRYPTION"""		10647662	1					
ANR	10647727	Argument	"""CUPS_ENCRYPTION"""		10647662	0					
ANR	10647728	PrimaryExpression	"""CUPS_ENCRYPTION"""		10647662	0					
ANR	10647729	ExpressionStatement	"cups_server = getenv ( ""CUPS_SERVER"" )"	851:2:20875:20916	10647662	23	True				
ANR	10647730	AssignmentExpression	"cups_server = getenv ( ""CUPS_SERVER"" )"		10647662	0		=			
ANR	10647731	Identifier	cups_server		10647662	0					
ANR	10647732	CallExpression	"getenv ( ""CUPS_SERVER"" )"		10647662	1					
ANR	10647733	Callee	getenv		10647662	0					
ANR	10647734	Identifier	getenv		10647662	0					
ANR	10647735	ArgumentList	"""CUPS_SERVER"""		10647662	1					
ANR	10647736	Argument	"""CUPS_SERVER"""		10647662	0					
ANR	10647737	PrimaryExpression	"""CUPS_SERVER"""		10647662	0					
ANR	10647738	ExpressionStatement	"cups_gssservicename = getenv ( ""CUPS_GSSSERVICENAME"" )"	853:2:20939:20990	10647662	24	True				
ANR	10647739	AssignmentExpression	"cups_gssservicename = getenv ( ""CUPS_GSSSERVICENAME"" )"		10647662	0		=			
ANR	10647740	Identifier	cups_gssservicename		10647662	0					
ANR	10647741	CallExpression	"getenv ( ""CUPS_GSSSERVICENAME"" )"		10647662	1					
ANR	10647742	Callee	getenv		10647662	0					
ANR	10647743	Identifier	getenv		10647662	0					
ANR	10647744	ArgumentList	"""CUPS_GSSSERVICENAME"""		10647662	1					
ANR	10647745	Argument	"""CUPS_GSSSERVICENAME"""		10647662	0					
ANR	10647746	PrimaryExpression	"""CUPS_GSSSERVICENAME"""		10647662	0					
ANR	10647747	ExpressionStatement	"cups_anyroot = getenv ( ""CUPS_ANYROOT"" )"	855:2:21019:21062	10647662	25	True				
ANR	10647748	AssignmentExpression	"cups_anyroot = getenv ( ""CUPS_ANYROOT"" )"		10647662	0		=			
ANR	10647749	Identifier	cups_anyroot		10647662	0					
ANR	10647750	CallExpression	"getenv ( ""CUPS_ANYROOT"" )"		10647662	1					
ANR	10647751	Callee	getenv		10647662	0					
ANR	10647752	Identifier	getenv		10647662	0					
ANR	10647753	ArgumentList	"""CUPS_ANYROOT"""		10647662	1					
ANR	10647754	Argument	"""CUPS_ANYROOT"""		10647662	0					
ANR	10647755	PrimaryExpression	"""CUPS_ANYROOT"""		10647662	0					
ANR	10647756	ExpressionStatement	"cups_expiredroot = getenv ( ""CUPS_EXPIREDROOT"" )"	856:2:21066:21114	10647662	26	True				
ANR	10647757	AssignmentExpression	"cups_expiredroot = getenv ( ""CUPS_EXPIREDROOT"" )"		10647662	0		=			
ANR	10647758	Identifier	cups_expiredroot		10647662	0					
ANR	10647759	CallExpression	"getenv ( ""CUPS_EXPIREDROOT"" )"		10647662	1					
ANR	10647760	Callee	getenv		10647662	0					
ANR	10647761	Identifier	getenv		10647662	0					
ANR	10647762	ArgumentList	"""CUPS_EXPIREDROOT"""		10647662	1					
ANR	10647763	Argument	"""CUPS_EXPIREDROOT"""		10647662	0					
ANR	10647764	PrimaryExpression	"""CUPS_EXPIREDROOT"""		10647662	0					
ANR	10647765	ExpressionStatement	"cups_expiredcerts = getenv ( ""CUPS_EXPIREDCERTS"" )"	857:2:21118:21167	10647662	27	True				
ANR	10647766	AssignmentExpression	"cups_expiredcerts = getenv ( ""CUPS_EXPIREDCERTS"" )"		10647662	0		=			
ANR	10647767	Identifier	cups_expiredcerts		10647662	0					
ANR	10647768	CallExpression	"getenv ( ""CUPS_EXPIREDCERTS"" )"		10647662	1					
ANR	10647769	Callee	getenv		10647662	0					
ANR	10647770	Identifier	getenv		10647662	0					
ANR	10647771	ArgumentList	"""CUPS_EXPIREDCERTS"""		10647662	1					
ANR	10647772	Argument	"""CUPS_EXPIREDCERTS"""		10647662	0					
ANR	10647773	PrimaryExpression	"""CUPS_EXPIREDCERTS"""		10647662	0					
ANR	10647774	IfStatement	"if ( ( cups_user = getenv ( ""CUPS_USER"" ) ) == NULL )"		10647662	28					
ANR	10647775	Condition	"( cups_user = getenv ( ""CUPS_USER"" ) ) == NULL"	859:6:21176:21216	10647662	0	True				
ANR	10647776	EqualityExpression	"( cups_user = getenv ( ""CUPS_USER"" ) ) == NULL"		10647662	0		==			
ANR	10647777	AssignmentExpression	"cups_user = getenv ( ""CUPS_USER"" )"		10647662	0		=			
ANR	10647778	Identifier	cups_user		10647662	0					
ANR	10647779	CallExpression	"getenv ( ""CUPS_USER"" )"		10647662	1					
ANR	10647780	Callee	getenv		10647662	0					
ANR	10647781	Identifier	getenv		10647662	0					
ANR	10647782	ArgumentList	"""CUPS_USER"""		10647662	1					
ANR	10647783	Argument	"""CUPS_USER"""		10647662	0					
ANR	10647784	PrimaryExpression	"""CUPS_USER"""		10647662	0					
ANR	10647785	Identifier	NULL		10647662	1					
ANR	10647786	CompoundStatement		33:2:1078:1078	10647662	1					
ANR	10647787	IfStatement	"if ( ( cups_user = getenv ( ""USER"" ) ) != NULL )"		10647662	0					
ANR	10647788	Condition	"( cups_user = getenv ( ""USER"" ) ) != NULL"	866:8:21302:21337	10647662	0	True				
ANR	10647789	EqualityExpression	"( cups_user = getenv ( ""USER"" ) ) != NULL"		10647662	0		!=			
ANR	10647790	AssignmentExpression	"cups_user = getenv ( ""USER"" )"		10647662	0		=			
ANR	10647791	Identifier	cups_user		10647662	0					
ANR	10647792	CallExpression	"getenv ( ""USER"" )"		10647662	1					
ANR	10647793	Callee	getenv		10647662	0					
ANR	10647794	Identifier	getenv		10647662	0					
ANR	10647795	ArgumentList	"""USER"""		10647662	1					
ANR	10647796	Argument	"""USER"""		10647662	0					
ANR	10647797	PrimaryExpression	"""USER"""		10647662	0					
ANR	10647798	Identifier	NULL		10647662	1					
ANR	10647799	CompoundStatement		47:6:1421:1438	10647662	1					
ANR	10647800	IdentifierDeclStatement	struct passwd * pw ;	874:6:21564:21581	10647662	0	True				
ANR	10647801	IdentifierDecl	* pw		10647662	0					
ANR	10647802	IdentifierDeclType	struct passwd *		10647662	0					
ANR	10647803	Identifier	pw		10647662	1					
ANR	10647804	IfStatement	if ( ( pw = getpwnam ( cups_user ) ) == NULL || pw -> pw_uid != getuid ( ) )		10647662	1					
ANR	10647805	Condition	( pw = getpwnam ( cups_user ) ) == NULL || pw -> pw_uid != getuid ( )	876:10:21621:21680	10647662	0	True				
ANR	10647806	OrExpression	( pw = getpwnam ( cups_user ) ) == NULL || pw -> pw_uid != getuid ( )		10647662	0		||			
ANR	10647807	EqualityExpression	( pw = getpwnam ( cups_user ) ) == NULL		10647662	0		==			
ANR	10647808	AssignmentExpression	pw = getpwnam ( cups_user )		10647662	0		=			
ANR	10647809	Identifier	pw		10647662	0					
ANR	10647810	CallExpression	getpwnam ( cups_user )		10647662	1					
ANR	10647811	Callee	getpwnam		10647662	0					
ANR	10647812	Identifier	getpwnam		10647662	0					
ANR	10647813	ArgumentList	cups_user		10647662	1					
ANR	10647814	Argument	cups_user		10647662	0					
ANR	10647815	Identifier	cups_user		10647662	0					
ANR	10647816	Identifier	NULL		10647662	1					
ANR	10647817	EqualityExpression	pw -> pw_uid != getuid ( )		10647662	1		!=			
ANR	10647818	PtrMemberAccess	pw -> pw_uid		10647662	0					
ANR	10647819	Identifier	pw		10647662	0					
ANR	10647820	Identifier	pw_uid		10647662	1					
ANR	10647821	CallExpression	getuid ( )		10647662	1					
ANR	10647822	Callee	getuid		10647662	0					
ANR	10647823	Identifier	getuid		10647662	0					
ANR	10647824	ArgumentList			10647662	1					
ANR	10647825	ExpressionStatement	cups_user = NULL	877:8:21691:21707	10647662	1	True				
ANR	10647826	AssignmentExpression	cups_user = NULL		10647662	0		=			
ANR	10647827	Identifier	cups_user		10647662	0					
ANR	10647828	Identifier	NULL		10647662	1					
ANR	10647829	IfStatement	if ( cg -> encryption == ( http_encryption_t ) - 1 || ! cg -> server [ 0 ] || ! cg -> user [ 0 ] || ! cg -> ipp_port )		10647662	29					
ANR	10647830	Condition	cg -> encryption == ( http_encryption_t ) - 1 || ! cg -> server [ 0 ] || ! cg -> user [ 0 ] || ! cg -> ipp_port	887:6:21870:21965	10647662	0	True				
ANR	10647831	OrExpression	cg -> encryption == ( http_encryption_t ) - 1 || ! cg -> server [ 0 ] || ! cg -> user [ 0 ] || ! cg -> ipp_port		10647662	0		||			
ANR	10647832	EqualityExpression	cg -> encryption == ( http_encryption_t ) - 1		10647662	0		==			
ANR	10647833	PtrMemberAccess	cg -> encryption		10647662	0					
ANR	10647834	Identifier	cg		10647662	0					
ANR	10647835	Identifier	encryption		10647662	1					
ANR	10647836	CastExpression	( http_encryption_t ) - 1		10647662	1					
ANR	10647837	CastTarget	http_encryption_t		10647662	0					
ANR	10647838	UnaryOperationExpression	- 1		10647662	1					
ANR	10647839	UnaryOperator	-		10647662	0					
ANR	10647840	PrimaryExpression	1		10647662	1					
ANR	10647841	OrExpression	! cg -> server [ 0 ] || ! cg -> user [ 0 ] || ! cg -> ipp_port		10647662	1		||			
ANR	10647842	UnaryOperationExpression	! cg -> server [ 0 ]		10647662	0					
ANR	10647843	UnaryOperator	!		10647662	0					
ANR	10647844	ArrayIndexing	cg -> server [ 0 ]		10647662	1					
ANR	10647845	PtrMemberAccess	cg -> server		10647662	0					
ANR	10647846	Identifier	cg		10647662	0					
ANR	10647847	Identifier	server		10647662	1					
ANR	10647848	PrimaryExpression	0		10647662	1					
ANR	10647849	OrExpression	! cg -> user [ 0 ] || ! cg -> ipp_port		10647662	1		||			
ANR	10647850	UnaryOperationExpression	! cg -> user [ 0 ]		10647662	0					
ANR	10647851	UnaryOperator	!		10647662	0					
ANR	10647852	ArrayIndexing	cg -> user [ 0 ]		10647662	1					
ANR	10647853	PtrMemberAccess	cg -> user		10647662	0					
ANR	10647854	Identifier	cg		10647662	0					
ANR	10647855	Identifier	user		10647662	1					
ANR	10647856	PrimaryExpression	0		10647662	1					
ANR	10647857	UnaryOperationExpression	! cg -> ipp_port		10647662	1					
ANR	10647858	UnaryOperator	!		10647662	0					
ANR	10647859	PtrMemberAccess	cg -> ipp_port		10647662	1					
ANR	10647860	Identifier	cg		10647662	0					
ANR	10647861	Identifier	ipp_port		10647662	1					
ANR	10647862	CompoundStatement		62:2:1827:1827	10647662	1					
ANR	10647863	Statement	ifdef	890:3:21975:21979	10647662	0	True				
ANR	10647864	Statement	HAVE_GETEUID	890:9:21981:21992	10647662	1	True				
ANR	10647865	IfStatement	"if ( ( geteuid ( ) == getuid ( ) || ! getuid ( ) ) && getegid ( ) == getgid ( ) && ( home = getenv ( ""HOME"" ) ) != NULL )"		10647662	2					
ANR	10647866	Condition	"( geteuid ( ) == getuid ( ) || ! getuid ( ) ) && getegid ( ) == getgid ( ) && ( home = getenv ( ""HOME"" ) ) != NULL"	891:8:22002:22097	10647662	0	True				
ANR	10647867	AndExpression	"( geteuid ( ) == getuid ( ) || ! getuid ( ) ) && getegid ( ) == getgid ( ) && ( home = getenv ( ""HOME"" ) ) != NULL"		10647662	0		&&			
ANR	10647868	OrExpression	geteuid ( ) == getuid ( ) || ! getuid ( )		10647662	0		||			
ANR	10647869	EqualityExpression	geteuid ( ) == getuid ( )		10647662	0		==			
ANR	10647870	CallExpression	geteuid ( )		10647662	0					
ANR	10647871	Callee	geteuid		10647662	0					
ANR	10647872	Identifier	geteuid		10647662	0					
ANR	10647873	ArgumentList			10647662	1					
ANR	10647874	CallExpression	getuid ( )		10647662	1					
ANR	10647875	Callee	getuid		10647662	0					
ANR	10647876	Identifier	getuid		10647662	0					
ANR	10647877	ArgumentList			10647662	1					
ANR	10647878	UnaryOperationExpression	! getuid ( )		10647662	1					
ANR	10647879	UnaryOperator	!		10647662	0					
ANR	10647880	CallExpression	getuid ( )		10647662	1					
ANR	10647881	Callee	getuid		10647662	0					
ANR	10647882	Identifier	getuid		10647662	0					
ANR	10647883	ArgumentList			10647662	1					
ANR	10647884	AndExpression	"getegid ( ) == getgid ( ) && ( home = getenv ( ""HOME"" ) ) != NULL"		10647662	1		&&			
ANR	10647885	EqualityExpression	getegid ( ) == getgid ( )		10647662	0		==			
ANR	10647886	CallExpression	getegid ( )		10647662	0					
ANR	10647887	Callee	getegid		10647662	0					
ANR	10647888	Identifier	getegid		10647662	0					
ANR	10647889	ArgumentList			10647662	1					
ANR	10647890	CallExpression	getgid ( )		10647662	1					
ANR	10647891	Callee	getgid		10647662	0					
ANR	10647892	Identifier	getgid		10647662	0					
ANR	10647893	ArgumentList			10647662	1					
ANR	10647894	EqualityExpression	"( home = getenv ( ""HOME"" ) ) != NULL"		10647662	1		!=			
ANR	10647895	AssignmentExpression	"home = getenv ( ""HOME"" )"		10647662	0		=			
ANR	10647896	Identifier	home		10647662	0					
ANR	10647897	CallExpression	"getenv ( ""HOME"" )"		10647662	1					
ANR	10647898	Callee	getenv		10647662	0					
ANR	10647899	Identifier	getenv		10647662	0					
ANR	10647900	ArgumentList	"""HOME"""		10647662	1					
ANR	10647901	Argument	"""HOME"""		10647662	0					
ANR	10647902	PrimaryExpression	"""HOME"""		10647662	0					
ANR	10647903	Identifier	NULL		10647662	1					
ANR	10647904	Statement	elif	892:3:22103:22106	10647662	1	True				
ANR	10647905	Statement	!	892:8:22108:22108	10647662	3	True				
ANR	10647906	Statement	defined	892:9:22109:22115	10647662	4	True				
ANR	10647907	Statement	(	892:16:22116:22116	10647662	5	True				
ANR	10647908	Statement	WIN32	892:17:22117:22121	10647662	6	True				
ANR	10647909	Statement	)	892:22:22122:22122	10647662	7	True				
ANR	10647910	IfStatement	"if ( getuid ( ) && ( home = getenv ( ""HOME"" ) ) != NULL )"		10647662	8					
ANR	10647911	Condition	"getuid ( ) && ( home = getenv ( ""HOME"" ) ) != NULL"	893:8:22132:22174	10647662	0	True				
ANR	10647912	AndExpression	"getuid ( ) && ( home = getenv ( ""HOME"" ) ) != NULL"		10647662	0		&&			
ANR	10647913	CallExpression	getuid ( )		10647662	0					
ANR	10647914	Callee	getuid		10647662	0					
ANR	10647915	Identifier	getuid		10647662	0					
ANR	10647916	ArgumentList			10647662	1					
ANR	10647917	EqualityExpression	"( home = getenv ( ""HOME"" ) ) != NULL"		10647662	1		!=			
ANR	10647918	AssignmentExpression	"home = getenv ( ""HOME"" )"		10647662	0		=			
ANR	10647919	Identifier	home		10647662	0					
ANR	10647920	CallExpression	"getenv ( ""HOME"" )"		10647662	1					
ANR	10647921	Callee	getenv		10647662	0					
ANR	10647922	Identifier	getenv		10647662	0					
ANR	10647923	ArgumentList	"""HOME"""		10647662	1					
ANR	10647924	Argument	"""HOME"""		10647662	0					
ANR	10647925	PrimaryExpression	"""HOME"""		10647662	0					
ANR	10647926	Identifier	NULL		10647662	1					
ANR	10647927	CompoundStatement		70:4:2115:2115	10647662	1					
ANR	10647928	ExpressionStatement	"snprintf ( filename , sizeof ( filename ) , ""%s/.cups/client.conf"" , home )"	902:6:22324:22390	10647662	0	True				
ANR	10647929	CallExpression	"snprintf ( filename , sizeof ( filename ) , ""%s/.cups/client.conf"" , home )"		10647662	0					
ANR	10647930	Callee	snprintf		10647662	0					
ANR	10647931	Identifier	snprintf		10647662	0					
ANR	10647932	ArgumentList	filename		10647662	1					
ANR	10647933	Argument	filename		10647662	0					
ANR	10647934	Identifier	filename		10647662	0					
ANR	10647935	Argument	sizeof ( filename )		10647662	1					
ANR	10647936	SizeofExpression	sizeof ( filename )		10647662	0					
ANR	10647937	Sizeof	sizeof		10647662	0					
ANR	10647938	SizeofOperand	filename		10647662	1					
ANR	10647939	Argument	"""%s/.cups/client.conf"""		10647662	2					
ANR	10647940	PrimaryExpression	"""%s/.cups/client.conf"""		10647662	0					
ANR	10647941	Argument	home		10647662	3					
ANR	10647942	Identifier	home		10647662	0					
ANR	10647943	ExpressionStatement	"fp = cupsFileOpen ( filename , ""r"" )"	903:6:22398:22430	10647662	1	True				
ANR	10647944	AssignmentExpression	"fp = cupsFileOpen ( filename , ""r"" )"		10647662	0		=			
ANR	10647945	Identifier	fp		10647662	0					
ANR	10647946	CallExpression	"cupsFileOpen ( filename , ""r"" )"		10647662	1					
ANR	10647947	Callee	cupsFileOpen		10647662	0					
ANR	10647948	Identifier	cupsFileOpen		10647662	0					
ANR	10647949	ArgumentList	filename		10647662	1					
ANR	10647950	Argument	filename		10647662	0					
ANR	10647951	Identifier	filename		10647662	0					
ANR	10647952	Argument	"""r"""		10647662	1					
ANR	10647953	PrimaryExpression	"""r"""		10647662	0					
ANR	10647954	ElseStatement	else		10647662	0					
ANR	10647955	IfStatement	"if ( ( home = getenv ( ""HOME"" ) ) != NULL )"		10647662	0					
ANR	10647956	Condition	"( home = getenv ( ""HOME"" ) ) != NULL"	895:8:22193:22223	10647662	0	True				
ANR	10647957	EqualityExpression	"( home = getenv ( ""HOME"" ) ) != NULL"		10647662	0		!=			
ANR	10647958	AssignmentExpression	"home = getenv ( ""HOME"" )"		10647662	0		=			
ANR	10647959	Identifier	home		10647662	0					
ANR	10647960	CallExpression	"getenv ( ""HOME"" )"		10647662	1					
ANR	10647961	Callee	getenv		10647662	0					
ANR	10647962	Identifier	getenv		10647662	0					
ANR	10647963	ArgumentList	"""HOME"""		10647662	1					
ANR	10647964	Argument	"""HOME"""		10647662	0					
ANR	10647965	PrimaryExpression	"""HOME"""		10647662	0					
ANR	10647966	Identifier	NULL		10647662	1					
ANR	10647967	Statement	endif	896:3:22229:22233	10647662	1	True				
ANR	10647968	ElseStatement	else		10647662	0					
ANR	10647969	ExpressionStatement	fp = NULL	906:6:22453:22462	10647662	0	True				
ANR	10647970	AssignmentExpression	fp = NULL		10647662	0		=			
ANR	10647971	Identifier	fp		10647662	0					
ANR	10647972	Identifier	NULL		10647662	1					
ANR	10647973	IfStatement	if ( ! fp )		10647662	9					
ANR	10647974	Condition	! fp	908:8:22473:22475	10647662	0	True				
ANR	10647975	UnaryOperationExpression	! fp		10647662	0					
ANR	10647976	UnaryOperator	!		10647662	0					
ANR	10647977	Identifier	fp		10647662	1					
ANR	10647978	CompoundStatement		82:4:2339:2339	10647662	1					
ANR	10647979	ExpressionStatement	"snprintf ( filename , sizeof ( filename ) , ""%s/client.conf"" , cg -> cups_serverroot )"	914:6:22556:22646	10647662	0	True				
ANR	10647980	CallExpression	"snprintf ( filename , sizeof ( filename ) , ""%s/client.conf"" , cg -> cups_serverroot )"		10647662	0					
ANR	10647981	Callee	snprintf		10647662	0					
ANR	10647982	Identifier	snprintf		10647662	0					
ANR	10647983	ArgumentList	filename		10647662	1					
ANR	10647984	Argument	filename		10647662	0					
ANR	10647985	Identifier	filename		10647662	0					
ANR	10647986	Argument	sizeof ( filename )		10647662	1					
ANR	10647987	SizeofExpression	sizeof ( filename )		10647662	0					
ANR	10647988	Sizeof	sizeof		10647662	0					
ANR	10647989	SizeofOperand	filename		10647662	1					
ANR	10647990	Argument	"""%s/client.conf"""		10647662	2					
ANR	10647991	PrimaryExpression	"""%s/client.conf"""		10647662	0					
ANR	10647992	Argument	cg -> cups_serverroot		10647662	3					
ANR	10647993	PtrMemberAccess	cg -> cups_serverroot		10647662	0					
ANR	10647994	Identifier	cg		10647662	0					
ANR	10647995	Identifier	cups_serverroot		10647662	1					
ANR	10647996	ExpressionStatement	"fp = cupsFileOpen ( filename , ""r"" )"	916:6:22654:22686	10647662	1	True				
ANR	10647997	AssignmentExpression	"fp = cupsFileOpen ( filename , ""r"" )"		10647662	0		=			
ANR	10647998	Identifier	fp		10647662	0					
ANR	10647999	CallExpression	"cupsFileOpen ( filename , ""r"" )"		10647662	1					
ANR	10648000	Callee	cupsFileOpen		10647662	0					
ANR	10648001	Identifier	cupsFileOpen		10647662	0					
ANR	10648002	ArgumentList	filename		10647662	1					
ANR	10648003	Argument	filename		10647662	0					
ANR	10648004	Identifier	filename		10647662	0					
ANR	10648005	Argument	"""r"""		10647662	1					
ANR	10648006	PrimaryExpression	"""r"""		10647662	0					
ANR	10648007	Statement	cups_read_client_conf	924:4:22841:22861	10647662	10	True				
ANR	10648008	Statement	(	924:25:22862:22862	10647662	11	True				
ANR	10648009	Statement	fp	924:26:22863:22864	10647662	12	True				
ANR	10648010	Statement	","	924:28:22865:22865	10647662	13	True				
ANR	10648011	Statement	cg	924:30:22867:22868	10647662	14	True				
ANR	10648012	Statement	","	924:32:22869:22869	10647662	15	True				
ANR	10648013	Statement	cups_encryption	924:34:22871:22885	10647662	16	True				
ANR	10648014	Statement	","	924:49:22886:22886	10647662	17	True				
ANR	10648015	Statement	cups_server	924:51:22888:22898	10647662	18	True				
ANR	10648016	Statement	","	924:62:22899:22899	10647662	19	True				
ANR	10648017	Statement	cups_user	924:64:22901:22909	10647662	20	True				
ANR	10648018	Statement	","	924:73:22910:22910	10647662	21	True				
ANR	10648019	Statement	cups_gssservicename	926:5:22936:22954	10647662	22	True				
ANR	10648020	Statement	","	926:24:22955:22955	10647662	23	True				
ANR	10648021	Statement	cups_anyroot	928:5:22987:22998	10647662	24	True				
ANR	10648022	Statement	","	928:17:22999:22999	10647662	25	True				
ANR	10648023	Statement	cups_expiredroot	928:19:23001:23016	10647662	26	True				
ANR	10648024	Statement	","	928:35:23017:23017	10647662	27	True				
ANR	10648025	Statement	cups_expiredcerts	929:5:23024:23040	10647662	28	True				
ANR	10648026	Statement	)	929:22:23041:23041	10647662	29	True				
ANR	10648027	ExpressionStatement		929:23:23042:23042	10647662	30	True				
ANR	10648028	ExpressionStatement	cupsFileClose ( fp )	930:4:23048:23065	10647662	31	True				
ANR	10648029	CallExpression	cupsFileClose ( fp )		10647662	0					
ANR	10648030	Callee	cupsFileClose		10647662	0					
ANR	10648031	Identifier	cupsFileClose		10647662	0					
ANR	10648032	ArgumentList	fp		10647662	1					
ANR	10648033	Argument	fp		10647662	0					
ANR	10648034	Identifier	fp		10647662	0					
ANR	10648035	ReturnType	void		10647662	1					
ANR	10648036	Identifier	_cupsSetDefaults		10647662	2					
ANR	10648037	ParameterList			10647662	3					
ANR	10648038	CFGEntryNode	ENTRY		10647662		True				
ANR	10648039	CFGExitNode	EXIT		10647662		True				
ANR	10648040	Symbol	cups_encryption		10647662						
ANR	10648041	Symbol	cups_server		10647662						
ANR	10648042	Symbol	pw		10647662						
ANR	10648043	Symbol	_cupsGlobals		10647662						
ANR	10648044	Symbol	* cg		10647662						
ANR	10648045	Symbol	fp		10647662						
ANR	10648046	Symbol	cg -> user		10647662						
ANR	10648047	Symbol	* cg -> server		10647662						
ANR	10648048	Symbol	* * cg		10647662						
ANR	10648049	Symbol	* cg -> user		10647662						
ANR	10648050	Symbol	cups_user		10647662						
ANR	10648051	Symbol	getegid		10647662						
ANR	10648052	Symbol	getenv		10647662						
ANR	10648053	Symbol	getpwnam		10647662						
ANR	10648054	Symbol	NULL		10647662						
ANR	10648055	Symbol	cupsFileOpen		10647662						
ANR	10648056	Symbol	cg		10647662						
ANR	10648057	Symbol	getgid		10647662						
ANR	10648058	Symbol	pw -> pw_uid		10647662						
ANR	10648059	Symbol	cg -> server		10647662						
ANR	10648060	Symbol	geteuid		10647662						
ANR	10648061	Symbol	cups_expiredcerts		10647662						
ANR	10648062	Symbol	* pw		10647662						
ANR	10648063	Symbol	home		10647662						
ANR	10648064	Symbol	getuid		10647662						
ANR	10648065	Symbol	cups_anyroot		10647662						
ANR	10648066	Symbol	filename		10647662						
ANR	10648067	Symbol	cg -> encryption		10647662						
ANR	10648068	Symbol	cg -> ipp_port		10647662						
ANR	10648069	Symbol	cups_expiredroot		10647662						
ANR	10648070	Symbol	cups_gssservicename		10647662						
ANR	10648071	Symbol	cg -> cups_serverroot		10647662						
ANR	10648072	DeclStmt									
ANR	10648073	Decl							int	int	linenum
ANR	10648074	DeclStmt									
ANR	10648075	Decl							char	char [ 32 ]	gss_service_name
ANR	10648076	DeclStmt									
ANR	10648077	Decl							struct stat	struct stat	sockinfo
ANR	10648078	DeclStmt									
ANR	10648079	Decl							const char	const char *	ipp_port
ANR	10648080	DeclStmt									
ANR	10648081	Decl							DWORD	DWORD	size
ANR	10648082	DeclStmt									
ANR	10648083	Decl							struct passwd	struct passwd *	pwd
