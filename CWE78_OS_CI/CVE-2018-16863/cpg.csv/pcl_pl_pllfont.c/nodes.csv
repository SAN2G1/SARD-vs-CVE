command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8202518	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pl_pllfont.c								
ANR	8202519	DeclStmt									
ANR	8202520	Decl							const char	const char	gp_file_name_list_separator
ANR	8202521	Function	get_name_from_tt_file	59:0:1707:4759							
ANR	8202522	FunctionDef	"get_name_from_tt_file (stream * tt_file , gs_memory_t * mem , char * pfontfilename , int nameoffset)"		8202521	0					
ANR	8202523	CompoundStatement		62:0:1836:4759	8202521	0					
ANR	8202524	IdentifierDeclStatement	long pos ;	64:4:1922:1930	8202521	0	True				
ANR	8202525	IdentifierDecl	pos		8202521	0					
ANR	8202526	IdentifierDeclType	long		8202521	0					
ANR	8202527	Identifier	pos		8202521	1					
ANR	8202528	IdentifierDeclStatement	unsigned long len ;	65:4:1980:1997	8202521	1	True				
ANR	8202529	IdentifierDecl	len		8202521	0					
ANR	8202530	IdentifierDeclType	unsigned long		8202521	0					
ANR	8202531	Identifier	len		8202521	1					
ANR	8202532	IdentifierDeclStatement	char * ptr = pfontfilename ;	66:4:2003:2028	8202521	2	True				
ANR	8202533	IdentifierDecl	* ptr = pfontfilename		8202521	0					
ANR	8202534	IdentifierDeclType	char *		8202521	0					
ANR	8202535	Identifier	ptr		8202521	1					
ANR	8202536	AssignmentExpression	* ptr = pfontfilename		8202521	2		=			
ANR	8202537	Identifier	pfontfilename		8202521	0					
ANR	8202538	Identifier	pfontfilename		8202521	1					
ANR	8202539	IdentifierDeclStatement	byte * ptt_font_data ;	67:4:2034:2053	8202521	3	True				
ANR	8202540	IdentifierDecl	* ptt_font_data		8202521	0					
ANR	8202541	IdentifierDeclType	byte *		8202521	0					
ANR	8202542	Identifier	ptt_font_data		8202521	1					
ANR	8202543	IfStatement	if ( ( pos = sftell ( tt_file ) ) < 0 )		8202521	4					
ANR	8202544	Condition	( pos = sftell ( tt_file ) ) < 0	69:8:2064:2090	8202521	0	True				
ANR	8202545	RelationalExpression	( pos = sftell ( tt_file ) ) < 0		8202521	0		<			
ANR	8202546	AssignmentExpression	pos = sftell ( tt_file )		8202521	0		=			
ANR	8202547	Identifier	pos		8202521	0					
ANR	8202548	CallExpression	sftell ( tt_file )		8202521	1					
ANR	8202549	Callee	sftell		8202521	0					
ANR	8202550	Identifier	sftell		8202521	0					
ANR	8202551	ArgumentList	tt_file		8202521	1					
ANR	8202552	Argument	tt_file		8202521	0					
ANR	8202553	Identifier	tt_file		8202521	0					
ANR	8202554	PrimaryExpression	0		8202521	1					
ANR	8202555	ReturnStatement	return - 1 ;	70:8:2101:2110	8202521	1	True				
ANR	8202556	UnaryOperationExpression	- 1		8202521	0					
ANR	8202557	UnaryOperator	-		8202521	0					
ANR	8202558	PrimaryExpression	1		8202521	1					
ANR	8202559	IfStatement	"if ( sfseek ( tt_file , 0L , SEEK_END ) )"		8202521	5					
ANR	8202560	Condition	"sfseek ( tt_file , 0L , SEEK_END )"	73:8:2215:2243	8202521	0	True				
ANR	8202561	CallExpression	"sfseek ( tt_file , 0L , SEEK_END )"		8202521	0					
ANR	8202562	Callee	sfseek		8202521	0					
ANR	8202563	Identifier	sfseek		8202521	0					
ANR	8202564	ArgumentList	tt_file		8202521	1					
ANR	8202565	Argument	tt_file		8202521	0					
ANR	8202566	Identifier	tt_file		8202521	0					
ANR	8202567	Argument	0L		8202521	1					
ANR	8202568	PrimaryExpression	0L		8202521	0					
ANR	8202569	Argument	SEEK_END		8202521	2					
ANR	8202570	Identifier	SEEK_END		8202521	0					
ANR	8202571	ReturnStatement	return - 1 ;	74:8:2254:2263	8202521	1	True				
ANR	8202572	UnaryOperationExpression	- 1		8202521	0					
ANR	8202573	UnaryOperator	-		8202521	0					
ANR	8202574	PrimaryExpression	1		8202521	1					
ANR	8202575	ExpressionStatement	len = sftell ( tt_file )	75:4:2269:2290	8202521	6	True				
ANR	8202576	AssignmentExpression	len = sftell ( tt_file )		8202521	0		=			
ANR	8202577	Identifier	len		8202521	0					
ANR	8202578	CallExpression	sftell ( tt_file )		8202521	1					
ANR	8202579	Callee	sftell		8202521	0					
ANR	8202580	Identifier	sftell		8202521	0					
ANR	8202581	ArgumentList	tt_file		8202521	1					
ANR	8202582	Argument	tt_file		8202521	0					
ANR	8202583	Identifier	tt_file		8202521	0					
ANR	8202584	ExpressionStatement	"ptt_font_data = gs_alloc_bytes ( mem , len , ""get_name_from_tt_file"" )"	78:4:2345:2410	8202521	7	True				
ANR	8202585	AssignmentExpression	"ptt_font_data = gs_alloc_bytes ( mem , len , ""get_name_from_tt_file"" )"		8202521	0		=			
ANR	8202586	Identifier	ptt_font_data		8202521	0					
ANR	8202587	CallExpression	"gs_alloc_bytes ( mem , len , ""get_name_from_tt_file"" )"		8202521	1					
ANR	8202588	Callee	gs_alloc_bytes		8202521	0					
ANR	8202589	Identifier	gs_alloc_bytes		8202521	0					
ANR	8202590	ArgumentList	mem		8202521	1					
ANR	8202591	Argument	mem		8202521	0					
ANR	8202592	Identifier	mem		8202521	0					
ANR	8202593	Argument	len		8202521	1					
ANR	8202594	Identifier	len		8202521	0					
ANR	8202595	Argument	"""get_name_from_tt_file"""		8202521	2					
ANR	8202596	PrimaryExpression	"""get_name_from_tt_file"""		8202521	0					
ANR	8202597	IfStatement	if ( ptt_font_data == NULL )		8202521	8					
ANR	8202598	Condition	ptt_font_data == NULL	79:8:2420:2440	8202521	0	True				
ANR	8202599	EqualityExpression	ptt_font_data == NULL		8202521	0		==			
ANR	8202600	Identifier	ptt_font_data		8202521	0					
ANR	8202601	Identifier	NULL		8202521	1					
ANR	8202602	ExpressionStatement	return_error ( gs_error_VMerror )	80:8:2451:2481	8202521	1	True				
ANR	8202603	CallExpression	return_error ( gs_error_VMerror )		8202521	0					
ANR	8202604	Callee	return_error		8202521	0					
ANR	8202605	Identifier	return_error		8202521	0					
ANR	8202606	ArgumentList	gs_error_VMerror		8202521	1					
ANR	8202607	Argument	gs_error_VMerror		8202521	0					
ANR	8202608	Identifier	gs_error_VMerror		8202521	0					
ANR	8202609	IfStatement	"if ( ( sfseek ( tt_file , 0L , SEEK_SET ) == 0 ) && ( sfread ( ptt_font_data , 1 , len , tt_file ) == len ) )"		8202521	9					
ANR	8202610	Condition	"( sfseek ( tt_file , 0L , SEEK_SET ) == 0 ) && ( sfread ( ptt_font_data , 1 , len , tt_file ) == len )"	84:8:2582:2668	8202521	0	True				
ANR	8202611	AndExpression	"( sfseek ( tt_file , 0L , SEEK_SET ) == 0 ) && ( sfread ( ptt_font_data , 1 , len , tt_file ) == len )"		8202521	0		&&			
ANR	8202612	EqualityExpression	"sfseek ( tt_file , 0L , SEEK_SET ) == 0"		8202521	0		==			
ANR	8202613	CallExpression	"sfseek ( tt_file , 0L , SEEK_SET )"		8202521	0					
ANR	8202614	Callee	sfseek		8202521	0					
ANR	8202615	Identifier	sfseek		8202521	0					
ANR	8202616	ArgumentList	tt_file		8202521	1					
ANR	8202617	Argument	tt_file		8202521	0					
ANR	8202618	Identifier	tt_file		8202521	0					
ANR	8202619	Argument	0L		8202521	1					
ANR	8202620	PrimaryExpression	0L		8202521	0					
ANR	8202621	Argument	SEEK_SET		8202521	2					
ANR	8202622	Identifier	SEEK_SET		8202521	0					
ANR	8202623	PrimaryExpression	0		8202521	1					
ANR	8202624	EqualityExpression	"sfread ( ptt_font_data , 1 , len , tt_file ) == len"		8202521	1		==			
ANR	8202625	CallExpression	"sfread ( ptt_font_data , 1 , len , tt_file )"		8202521	0					
ANR	8202626	Callee	sfread		8202521	0					
ANR	8202627	Identifier	sfread		8202521	0					
ANR	8202628	ArgumentList	ptt_font_data		8202521	1					
ANR	8202629	Argument	ptt_font_data		8202521	0					
ANR	8202630	Identifier	ptt_font_data		8202521	0					
ANR	8202631	Argument	1		8202521	1					
ANR	8202632	PrimaryExpression	1		8202521	0					
ANR	8202633	Argument	len		8202521	2					
ANR	8202634	Identifier	len		8202521	0					
ANR	8202635	Argument	tt_file		8202521	3					
ANR	8202636	Identifier	tt_file		8202521	0					
ANR	8202637	Identifier	len		8202521	1					
ANR	8202638	ExpressionStatement		84:96:2670:2670	8202521	1	True				
ANR	8202639	ElseStatement	else		8202521	0					
ANR	8202640	CompoundStatement		24:9:859:859	8202521	0					
ANR	8202641	ExpressionStatement	"gs_free_object ( mem , ptt_font_data , ""get_name_from_tt_file"" )"	86:8:2706:2765	8202521	0	True				
ANR	8202642	CallExpression	"gs_free_object ( mem , ptt_font_data , ""get_name_from_tt_file"" )"		8202521	0					
ANR	8202643	Callee	gs_free_object		8202521	0					
ANR	8202644	Identifier	gs_free_object		8202521	0					
ANR	8202645	ArgumentList	mem		8202521	1					
ANR	8202646	Argument	mem		8202521	0					
ANR	8202647	Identifier	mem		8202521	0					
ANR	8202648	Argument	ptt_font_data		8202521	1					
ANR	8202649	Identifier	ptt_font_data		8202521	0					
ANR	8202650	Argument	"""get_name_from_tt_file"""		8202521	2					
ANR	8202651	PrimaryExpression	"""get_name_from_tt_file"""		8202521	0					
ANR	8202652	ReturnStatement	return - 1 ;	87:8:2775:2784	8202521	1	True				
ANR	8202653	UnaryOperationExpression	- 1		8202521	0					
ANR	8202654	UnaryOperator	-		8202521	0					
ANR	8202655	PrimaryExpression	1		8202521	1					
ANR	8202656	CompoundStatement		33:8:1116:1125	8202521	10					
ANR	8202657	IdentifierDeclStatement	byte * pnum_tables_data = ptt_font_data + 4 ;	92:8:2843:2885	8202521	0	True				
ANR	8202658	IdentifierDecl	* pnum_tables_data = ptt_font_data + 4		8202521	0					
ANR	8202659	IdentifierDeclType	byte *		8202521	0					
ANR	8202660	Identifier	pnum_tables_data		8202521	1					
ANR	8202661	AssignmentExpression	* pnum_tables_data = ptt_font_data + 4		8202521	2		=			
ANR	8202662	Identifier	pnum_tables_data		8202521	0					
ANR	8202663	AdditiveExpression	ptt_font_data + 4		8202521	1		+			
ANR	8202664	Identifier	ptt_font_data		8202521	0					
ANR	8202665	PrimaryExpression	4		8202521	1					
ANR	8202666	IdentifierDeclStatement	byte * ptable_directory_data = ptt_font_data + 12 ;	93:8:2895:2943	8202521	1	True				
ANR	8202667	IdentifierDecl	* ptable_directory_data = ptt_font_data + 12		8202521	0					
ANR	8202668	IdentifierDeclType	byte *		8202521	0					
ANR	8202669	Identifier	ptable_directory_data		8202521	1					
ANR	8202670	AssignmentExpression	* ptable_directory_data = ptt_font_data + 12		8202521	2		=			
ANR	8202671	Identifier	ptable_directory_data		8202521	0					
ANR	8202672	AdditiveExpression	ptt_font_data + 12		8202521	1		+			
ANR	8202673	Identifier	ptt_font_data		8202521	0					
ANR	8202674	PrimaryExpression	12		8202521	1					
ANR	8202675	IdentifierDeclStatement	int table ;	94:8:2953:2962	8202521	2	True				
ANR	8202676	IdentifierDecl	table		8202521	0					
ANR	8202677	IdentifierDeclType	int		8202521	0					
ANR	8202678	Identifier	table		8202521	1					
ANR	8202679	ForStatement	for ( table = 0 ; table < pl_get_uint16 ( pnum_tables_data ) ; table ++ )		8202521	3					
ANR	8202680	ForInit	table = 0 ;	96:13:2978:2987	8202521	0	True				
ANR	8202681	AssignmentExpression	table = 0		8202521	0		=			
ANR	8202682	Identifier	table		8202521	0					
ANR	8202683	PrimaryExpression	0		8202521	1					
ANR	8202684	Condition	table < pl_get_uint16 ( pnum_tables_data )	96:24:2989:3027	8202521	1	True				
ANR	8202685	RelationalExpression	table < pl_get_uint16 ( pnum_tables_data )		8202521	0		<			
ANR	8202686	Identifier	table		8202521	0					
ANR	8202687	CallExpression	pl_get_uint16 ( pnum_tables_data )		8202521	1					
ANR	8202688	Callee	pl_get_uint16		8202521	0					
ANR	8202689	Identifier	pl_get_uint16		8202521	0					
ANR	8202690	ArgumentList	pnum_tables_data		8202521	1					
ANR	8202691	Argument	pnum_tables_data		8202521	0					
ANR	8202692	Identifier	pnum_tables_data		8202521	0					
ANR	8202693	PostIncDecOperationExpression	table ++	96:65:3030:3036	8202521	2	True				
ANR	8202694	Identifier	table		8202521	0					
ANR	8202695	IncDec	++		8202521	1					
ANR	8202696	IfStatement	"if ( ! memcmp ( ptable_directory_data + ( table * 16 ) , ""name"" , 4 ) )"		8202521	3					
ANR	8202697	Condition	"! memcmp ( ptable_directory_data + ( table * 16 ) , ""name"" , 4 )"	97:16:3055:3110	8202521	0	True				
ANR	8202698	UnaryOperationExpression	"! memcmp ( ptable_directory_data + ( table * 16 ) , ""name"" , 4 )"		8202521	0					
ANR	8202699	UnaryOperator	!		8202521	0					
ANR	8202700	CallExpression	"memcmp ( ptable_directory_data + ( table * 16 ) , ""name"" , 4 )"		8202521	1					
ANR	8202701	Callee	memcmp		8202521	0					
ANR	8202702	Identifier	memcmp		8202521	0					
ANR	8202703	ArgumentList	ptable_directory_data + ( table * 16 )		8202521	1					
ANR	8202704	Argument	ptable_directory_data + ( table * 16 )		8202521	0					
ANR	8202705	AdditiveExpression	ptable_directory_data + ( table * 16 )		8202521	0		+			
ANR	8202706	Identifier	ptable_directory_data		8202521	0					
ANR	8202707	MultiplicativeExpression	table * 16		8202521	1		*			
ANR	8202708	Identifier	table		8202521	0					
ANR	8202709	PrimaryExpression	16		8202521	1					
ANR	8202710	Argument	"""name"""		8202521	1					
ANR	8202711	PrimaryExpression	"""name"""		8202521	0					
ANR	8202712	Argument	4		8202521	2					
ANR	8202713	PrimaryExpression	4		8202521	0					
ANR	8202714	CompoundStatement		42:16:1598:1630	8202521	1					
ANR	8202715	IdentifierDeclStatement	unsigned int offset = pl_get_uint32 ( ptable_directory_data + ( table * 16 ) + 8 ) ;	98:16:3131:3228	8202521	0	True				
ANR	8202716	IdentifierDecl	offset = pl_get_uint32 ( ptable_directory_data + ( table * 16 ) + 8 )		8202521	0					
ANR	8202717	IdentifierDeclType	unsigned int		8202521	0					
ANR	8202718	Identifier	offset		8202521	1					
ANR	8202719	AssignmentExpression	offset = pl_get_uint32 ( ptable_directory_data + ( table * 16 ) + 8 )		8202521	2		=			
ANR	8202720	Identifier	offset		8202521	0					
ANR	8202721	CallExpression	pl_get_uint32 ( ptable_directory_data + ( table * 16 ) + 8 )		8202521	1					
ANR	8202722	Callee	pl_get_uint32		8202521	0					
ANR	8202723	Identifier	pl_get_uint32		8202521	0					
ANR	8202724	ArgumentList	ptable_directory_data + ( table * 16 ) + 8		8202521	1					
ANR	8202725	Argument	ptable_directory_data + ( table * 16 ) + 8		8202521	0					
ANR	8202726	AdditiveExpression	ptable_directory_data + ( table * 16 ) + 8		8202521	0		+			
ANR	8202727	Identifier	ptable_directory_data		8202521	0					
ANR	8202728	AdditiveExpression	( table * 16 ) + 8		8202521	1		+			
ANR	8202729	MultiplicativeExpression	table * 16		8202521	0		*			
ANR	8202730	Identifier	table		8202521	0					
ANR	8202731	PrimaryExpression	16		8202521	1					
ANR	8202732	PrimaryExpression	8		8202521	1					
ANR	8202733	IdentifierDeclStatement	byte * name_table = ptt_font_data + offset ;	100:16:3246:3287	8202521	1	True				
ANR	8202734	IdentifierDecl	* name_table = ptt_font_data + offset		8202521	0					
ANR	8202735	IdentifierDeclType	byte *		8202521	0					
ANR	8202736	Identifier	name_table		8202521	1					
ANR	8202737	AssignmentExpression	* name_table = ptt_font_data + offset		8202521	2		=			
ANR	8202738	Identifier	name_table		8202521	0					
ANR	8202739	AdditiveExpression	ptt_font_data + offset		8202521	1		+			
ANR	8202740	Identifier	ptt_font_data		8202521	0					
ANR	8202741	Identifier	offset		8202521	1					
ANR	8202742	IdentifierDeclStatement	unsigned short storageOffset = pl_get_uint16 ( name_table + 4 ) ;	102:16:3357:3417	8202521	2	True				
ANR	8202743	IdentifierDecl	storageOffset = pl_get_uint16 ( name_table + 4 )		8202521	0					
ANR	8202744	IdentifierDeclType	unsigned short		8202521	0					
ANR	8202745	Identifier	storageOffset		8202521	1					
ANR	8202746	AssignmentExpression	storageOffset = pl_get_uint16 ( name_table + 4 )		8202521	2		=			
ANR	8202747	Identifier	storageOffset		8202521	0					
ANR	8202748	CallExpression	pl_get_uint16 ( name_table + 4 )		8202521	1					
ANR	8202749	Callee	pl_get_uint16		8202521	0					
ANR	8202750	Identifier	pl_get_uint16		8202521	0					
ANR	8202751	ArgumentList	name_table + 4		8202521	1					
ANR	8202752	Argument	name_table + 4		8202521	0					
ANR	8202753	AdditiveExpression	name_table + 4		8202521	0		+			
ANR	8202754	Identifier	name_table		8202521	0					
ANR	8202755	PrimaryExpression	4		8202521	1					
ANR	8202756	IdentifierDeclStatement	byte * name_recs = name_table + 6 ;	103:16:3435:3467	8202521	3	True				
ANR	8202757	IdentifierDecl	* name_recs = name_table + 6		8202521	0					
ANR	8202758	IdentifierDeclType	byte *		8202521	0					
ANR	8202759	Identifier	name_recs		8202521	1					
ANR	8202760	AssignmentExpression	* name_recs = name_table + 6		8202521	2		=			
ANR	8202761	Identifier	name_recs		8202521	0					
ANR	8202762	AdditiveExpression	name_table + 6		8202521	1		+			
ANR	8202763	Identifier	name_table		8202521	0					
ANR	8202764	PrimaryExpression	6		8202521	1					
ANR	8202765	CompoundStatement		50:20:1982:1987	8202521	4					
ANR	8202766	IdentifierDeclStatement	unsigned short length = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 8 ) ;	107:20:3582:3678	8202521	0	True				
ANR	8202767	IdentifierDecl	length = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 8 )		8202521	0					
ANR	8202768	IdentifierDeclType	unsigned short		8202521	0					
ANR	8202769	Identifier	length		8202521	1					
ANR	8202770	AssignmentExpression	length = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 8 )		8202521	2		=			
ANR	8202771	Identifier	length		8202521	0					
ANR	8202772	CallExpression	pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 8 )		8202521	1					
ANR	8202773	Callee	pl_get_uint16		8202521	0					
ANR	8202774	Identifier	pl_get_uint16		8202521	0					
ANR	8202775	ArgumentList	name_recs + ( 12 * nameoffset ) + 8		8202521	1					
ANR	8202776	Argument	name_recs + ( 12 * nameoffset ) + 8		8202521	0					
ANR	8202777	AdditiveExpression	name_recs + ( 12 * nameoffset ) + 8		8202521	0		+			
ANR	8202778	Identifier	name_recs		8202521	0					
ANR	8202779	AdditiveExpression	( 12 * nameoffset ) + 8		8202521	1		+			
ANR	8202780	MultiplicativeExpression	12 * nameoffset		8202521	0		*			
ANR	8202781	PrimaryExpression	12		8202521	0					
ANR	8202782	Identifier	nameoffset		8202521	1					
ANR	8202783	PrimaryExpression	8		8202521	1					
ANR	8202784	IdentifierDeclStatement	unsigned short offset = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 10 ) ;	109:20:3700:3797	8202521	1	True				
ANR	8202785	IdentifierDecl	offset = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 10 )		8202521	0					
ANR	8202786	IdentifierDeclType	unsigned short		8202521	0					
ANR	8202787	Identifier	offset		8202521	1					
ANR	8202788	AssignmentExpression	offset = pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 10 )		8202521	2		=			
ANR	8202789	Identifier	offset		8202521	0					
ANR	8202790	CallExpression	pl_get_uint16 ( name_recs + ( 12 * nameoffset ) + 10 )		8202521	1					
ANR	8202791	Callee	pl_get_uint16		8202521	0					
ANR	8202792	Identifier	pl_get_uint16		8202521	0					
ANR	8202793	ArgumentList	name_recs + ( 12 * nameoffset ) + 10		8202521	1					
ANR	8202794	Argument	name_recs + ( 12 * nameoffset ) + 10		8202521	0					
ANR	8202795	AdditiveExpression	name_recs + ( 12 * nameoffset ) + 10		8202521	0		+			
ANR	8202796	Identifier	name_recs		8202521	0					
ANR	8202797	AdditiveExpression	( 12 * nameoffset ) + 10		8202521	1		+			
ANR	8202798	MultiplicativeExpression	12 * nameoffset		8202521	0		*			
ANR	8202799	PrimaryExpression	12		8202521	0					
ANR	8202800	Identifier	nameoffset		8202521	1					
ANR	8202801	PrimaryExpression	10		8202521	1					
ANR	8202802	IdentifierDeclStatement	int k ;	111:20:3819:3824	8202521	2	True				
ANR	8202803	IdentifierDecl	k		8202521	0					
ANR	8202804	IdentifierDeclType	int		8202521	0					
ANR	8202805	Identifier	k		8202521	1					
ANR	8202806	ForStatement	for ( k = 0 ; k < length ; k ++ )		8202521	3					
ANR	8202807	ForInit	k = 0 ;	113:25:3852:3857	8202521	0	True				
ANR	8202808	AssignmentExpression	k = 0		8202521	0		=			
ANR	8202809	Identifier	k		8202521	0					
ANR	8202810	PrimaryExpression	0		8202521	1					
ANR	8202811	Condition	k < length	113:32:3859:3868	8202521	1	True				
ANR	8202812	RelationalExpression	k < length		8202521	0		<			
ANR	8202813	Identifier	k		8202521	0					
ANR	8202814	Identifier	length		8202521	1					
ANR	8202815	PostIncDecOperationExpression	k ++	113:44:3871:3873	8202521	2	True				
ANR	8202816	Identifier	k		8202521	0					
ANR	8202817	IncDec	++		8202521	1					
ANR	8202818	CompoundStatement		54:24:2128:2174	8202521	3					
ANR	8202819	IdentifierDeclStatement	int c = name_table [ storageOffset + offset + k ] ;	115:24:3965:4011	8202521	0	True				
ANR	8202820	IdentifierDecl	c = name_table [ storageOffset + offset + k ]		8202521	0					
ANR	8202821	IdentifierDeclType	int		8202521	0					
ANR	8202822	Identifier	c		8202521	1					
ANR	8202823	AssignmentExpression	c = name_table [ storageOffset + offset + k ]		8202521	2		=			
ANR	8202824	Identifier	c		8202521	0					
ANR	8202825	ArrayIndexing	name_table [ storageOffset + offset + k ]		8202521	1					
ANR	8202826	Identifier	name_table		8202521	0					
ANR	8202827	AdditiveExpression	storageOffset + offset + k		8202521	1		+			
ANR	8202828	Identifier	storageOffset		8202521	0					
ANR	8202829	AdditiveExpression	offset + k		8202521	1		+			
ANR	8202830	Identifier	offset		8202521	0					
ANR	8202831	Identifier	k		8202521	1					
ANR	8202832	IfStatement	if ( isprint ( c ) )		8202521	1					
ANR	8202833	Condition	isprint ( c )	117:28:4042:4051	8202521	0	True				
ANR	8202834	CallExpression	isprint ( c )		8202521	0					
ANR	8202835	Callee	isprint		8202521	0					
ANR	8202836	Identifier	isprint		8202521	0					
ANR	8202837	ArgumentList	c		8202521	1					
ANR	8202838	Argument	c		8202521	0					
ANR	8202839	Identifier	c		8202521	0					
ANR	8202840	ExpressionStatement	* ptr ++ = ( char ) c	118:28:4082:4098	8202521	1	True				
ANR	8202841	AssignmentExpression	* ptr ++ = ( char ) c		8202521	0		=			
ANR	8202842	UnaryOperationExpression	* ptr ++		8202521	0					
ANR	8202843	UnaryOperator	*		8202521	0					
ANR	8202844	PostIncDecOperationExpression	ptr ++		8202521	1					
ANR	8202845	Identifier	ptr		8202521	0					
ANR	8202846	IncDec	++		8202521	1					
ANR	8202847	CastExpression	( char ) c		8202521	1					
ANR	8202848	CastTarget	char		8202521	0					
ANR	8202849	Identifier	c		8202521	1					
ANR	8202850	BreakStatement	break ;	121:16:4156:4161	8202521	5	True				
ANR	8202851	ExpressionStatement	"gs_free_object ( mem , ptt_font_data , ""get_name_from_tt_file"" )"	125:4:4244:4303	8202521	11	True				
ANR	8202852	CallExpression	"gs_free_object ( mem , ptt_font_data , ""get_name_from_tt_file"" )"		8202521	0					
ANR	8202853	Callee	gs_free_object		8202521	0					
ANR	8202854	Identifier	gs_free_object		8202521	0					
ANR	8202855	ArgumentList	mem		8202521	1					
ANR	8202856	Argument	mem		8202521	0					
ANR	8202857	Identifier	mem		8202521	0					
ANR	8202858	Argument	ptt_font_data		8202521	1					
ANR	8202859	Identifier	ptt_font_data		8202521	0					
ANR	8202860	Argument	"""get_name_from_tt_file"""		8202521	2					
ANR	8202861	PrimaryExpression	"""get_name_from_tt_file"""		8202521	0					
ANR	8202862	IfStatement	"if ( sfseek ( tt_file , pos , SEEK_SET ) < 0 )"		8202521	12					
ANR	8202863	Condition	"sfseek ( tt_file , pos , SEEK_SET ) < 0"	126:8:4313:4346	8202521	0	True				
ANR	8202864	RelationalExpression	"sfseek ( tt_file , pos , SEEK_SET ) < 0"		8202521	0		<			
ANR	8202865	CallExpression	"sfseek ( tt_file , pos , SEEK_SET )"		8202521	0					
ANR	8202866	Callee	sfseek		8202521	0					
ANR	8202867	Identifier	sfseek		8202521	0					
ANR	8202868	ArgumentList	tt_file		8202521	1					
ANR	8202869	Argument	tt_file		8202521	0					
ANR	8202870	Identifier	tt_file		8202521	0					
ANR	8202871	Argument	pos		8202521	1					
ANR	8202872	Identifier	pos		8202521	0					
ANR	8202873	Argument	SEEK_SET		8202521	2					
ANR	8202874	Identifier	SEEK_SET		8202521	0					
ANR	8202875	PrimaryExpression	0		8202521	1					
ANR	8202876	ReturnStatement	return - 1 ;	127:8:4357:4366	8202521	1	True				
ANR	8202877	UnaryOperationExpression	- 1		8202521	0					
ANR	8202878	UnaryOperator	-		8202521	0					
ANR	8202879	PrimaryExpression	1		8202521	1					
ANR	8202880	ExpressionStatement	* ptr = '\\0'	130:4:4503:4514	8202521	13	True				
ANR	8202881	AssignmentExpression	* ptr = '\\0'		8202521	0		=			
ANR	8202882	UnaryOperationExpression	* ptr		8202521	0					
ANR	8202883	UnaryOperator	*		8202521	0					
ANR	8202884	Identifier	ptr		8202521	1					
ANR	8202885	PrimaryExpression	'\\0'		8202521	1					
ANR	8202886	CompoundStatement		73:8:2730:2759	8202521	14					
ANR	8202887	IdentifierDeclStatement	int i = strlen ( pfontfilename ) ;	134:8:4567:4596	8202521	0	True				
ANR	8202888	IdentifierDecl	i = strlen ( pfontfilename )		8202521	0					
ANR	8202889	IdentifierDeclType	int		8202521	0					
ANR	8202890	Identifier	i		8202521	1					
ANR	8202891	AssignmentExpression	i = strlen ( pfontfilename )		8202521	2		=			
ANR	8202892	Identifier	i		8202521	0					
ANR	8202893	CallExpression	strlen ( pfontfilename )		8202521	1					
ANR	8202894	Callee	strlen		8202521	0					
ANR	8202895	Identifier	strlen		8202521	0					
ANR	8202896	ArgumentList	pfontfilename		8202521	1					
ANR	8202897	Argument	pfontfilename		8202521	0					
ANR	8202898	Identifier	pfontfilename		8202521	0					
ANR	8202899	WhileStatement	while ( -- i >= 0 )		8202521	1					
ANR	8202900	Condition	-- i >= 0	136:15:4614:4621	8202521	0	True				
ANR	8202901	RelationalExpression	-- i >= 0		8202521	0		>=			
ANR	8202902	UnaryExpression	-- i		8202521	0					
ANR	8202903	IncDec	--		8202521	0					
ANR	8202904	Identifier	i		8202521	1					
ANR	8202905	PrimaryExpression	0		8202521	1					
ANR	8202906	CompoundStatement		75:25:2787:2787	8202521	1					
ANR	8202907	IfStatement	if ( ! isspace ( pfontfilename [ i ] ) )		8202521	0					
ANR	8202908	Condition	! isspace ( pfontfilename [ i ] )	137:16:4642:4667	8202521	0	True				
ANR	8202909	UnaryOperationExpression	! isspace ( pfontfilename [ i ] )		8202521	0					
ANR	8202910	UnaryOperator	!		8202521	0					
ANR	8202911	CallExpression	isspace ( pfontfilename [ i ] )		8202521	1					
ANR	8202912	Callee	isspace		8202521	0					
ANR	8202913	Identifier	isspace		8202521	0					
ANR	8202914	ArgumentList	pfontfilename [ i ]		8202521	1					
ANR	8202915	Argument	pfontfilename [ i ]		8202521	0					
ANR	8202916	ArrayIndexing	pfontfilename [ i ]		8202521	0					
ANR	8202917	Identifier	pfontfilename		8202521	0					
ANR	8202918	Identifier	i		8202521	1					
ANR	8202919	BreakStatement	break ;	138:16:4686:4691	8202521	1	True				
ANR	8202920	ExpressionStatement	pfontfilename [ ++ i ] = '\\0'	140:8:4711:4736	8202521	2	True				
ANR	8202921	AssignmentExpression	pfontfilename [ ++ i ] = '\\0'		8202521	0		=			
ANR	8202922	ArrayIndexing	pfontfilename [ ++ i ]		8202521	0					
ANR	8202923	Identifier	pfontfilename		8202521	0					
ANR	8202924	UnaryExpression	++ i		8202521	1					
ANR	8202925	IncDec	++		8202521	0					
ANR	8202926	Identifier	i		8202521	1					
ANR	8202927	PrimaryExpression	'\\0'		8202521	1					
ANR	8202928	ReturnStatement	return 0 ;	143:4:4749:4757	8202521	15	True				
ANR	8202929	PrimaryExpression	0		8202521	0					
ANR	8202930	ReturnType	static int		8202521	1					
ANR	8202931	Identifier	get_name_from_tt_file		8202521	2					
ANR	8202932	ParameterList	"stream * tt_file , gs_memory_t * mem , char * pfontfilename , int nameoffset"		8202521	3					
ANR	8202933	Parameter	stream * tt_file	60:22:1740:1755	8202521	0	True				
ANR	8202934	ParameterType	stream *		8202521	0					
ANR	8202935	Identifier	tt_file		8202521	1					
ANR	8202936	Parameter	gs_memory_t * mem	60:40:1758:1774	8202521	1	True				
ANR	8202937	ParameterType	gs_memory_t *		8202521	0					
ANR	8202938	Identifier	mem		8202521	1					
ANR	8202939	Parameter	char * pfontfilename	61:22:1799:1817	8202521	2	True				
ANR	8202940	ParameterType	char *		8202521	0					
ANR	8202941	Identifier	pfontfilename		8202521	1					
ANR	8202942	Parameter	int nameoffset	61:43:1820:1833	8202521	3	True				
ANR	8202943	ParameterType	int		8202521	0					
ANR	8202944	Identifier	nameoffset		8202521	1					
ANR	8202945	CFGEntryNode	ENTRY		8202521		True				
ANR	8202946	CFGExitNode	EXIT		8202521		True				
ANR	8202947	Symbol	name_table		8202521						
ANR	8202948	Symbol	isprint		8202521						
ANR	8202949	Symbol	ptable_directory_data		8202521						
ANR	8202950	Symbol	* name_table		8202521						
ANR	8202951	Symbol	pfontfilename		8202521						
ANR	8202952	Symbol	strlen		8202521						
ANR	8202953	Symbol	* storageOffset		8202521						
ANR	8202954	Symbol	* pfontfilename		8202521						
ANR	8202955	Symbol	memcmp		8202521						
ANR	8202956	Symbol	mem		8202521						
ANR	8202957	Symbol	len		8202521						
ANR	8202958	Symbol	sftell		8202521						
ANR	8202959	Symbol	pos		8202521						
ANR	8202960	Symbol	pnum_tables_data		8202521						
ANR	8202961	Symbol	* ptr		8202521						
ANR	8202962	Symbol	sfseek		8202521						
ANR	8202963	Symbol	name_recs		8202521						
ANR	8202964	Symbol	table		8202521						
ANR	8202965	Symbol	storageOffset		8202521						
ANR	8202966	Symbol	SEEK_SET		8202521						
ANR	8202967	Symbol	gs_alloc_bytes		8202521						
ANR	8202968	Symbol	pl_get_uint16		8202521						
ANR	8202969	Symbol	NULL		8202521						
ANR	8202970	Symbol	c		8202521						
ANR	8202971	Symbol	offset		8202521						
ANR	8202972	Symbol	* ptr ++		8202521						
ANR	8202973	Symbol	ptt_font_data		8202521						
ANR	8202974	Symbol	length		8202521						
ANR	8202975	Symbol	isspace		8202521						
ANR	8202976	Symbol	i		8202521						
ANR	8202977	Symbol	k		8202521						
ANR	8202978	Symbol	pl_get_uint32		8202521						
ANR	8202979	Symbol	ptr		8202521						
ANR	8202980	Symbol	SEEK_END		8202521						
ANR	8202981	Symbol	gs_error_VMerror		8202521						
ANR	8202982	Symbol	* i		8202521						
ANR	8202983	Symbol	tt_file		8202521						
ANR	8202984	Symbol	* k		8202521						
ANR	8202985	Symbol	nameoffset		8202521						
ANR	8202986	Symbol	sfread		8202521						
ANR	8202987	Symbol	* offset		8202521						
ANR	8202988	Function	check_resident_ufst_fonts	147:0:4775:6767							
ANR	8202989	FunctionDef	"check_resident_ufst_fonts (pl_dict_t * pfontdict , bool use_unicode_names_for_keys , gs_memory_t * mem)"		8202988	0					
ANR	8202990	CompoundStatement		150:0:4914:6767	8202988	0					
ANR	8202991	Statement	define	151:1:4917:4922	8202988	0	True				
ANR	8202992	Statement	fontnames	151:8:4924:4932	8202988	1	True				
ANR	8202993	Statement	(	151:17:4933:4933	8202988	2	True				
ANR	8202994	Statement	agfascreenfontname	151:18:4934:4951	8202988	3	True				
ANR	8202995	Statement	","	151:36:4952:4952	8202988	4	True				
ANR	8202996	Statement	agfaname	151:38:4954:4961	8202988	5	True				
ANR	8202997	Statement	","	151:46:4962:4962	8202988	6	True				
ANR	8202998	Statement	urwname	151:48:4964:4970	8202988	7	True				
ANR	8202999	Statement	)	151:55:4971:4971	8202988	8	True				
ANR	8203000	Statement	agfaname	151:57:4973:4980	8202988	9	True				
ANR	8203001	Statement	include	152:1:4983:4989	8202988	10	True				
ANR	8203002	Statement	"""plftable.h"""	152:9:4991:5002	8202988	11	True				
ANR	8203003	IdentifierDeclStatement	int j ;	153:4:5008:5013	8202988	12	True				
ANR	8203004	IdentifierDecl	j		8202988	0					
ANR	8203005	IdentifierDeclType	int		8202988	0					
ANR	8203006	Identifier	j		8202988	1					
ANR	8203007	ForStatement	for ( j = 0 ; strlen ( resident_table [ j ] . full_font_name ) != 0 && j < pl_built_in_resident_font_table_count ; j ++ )		8202988	13					
ANR	8203008	ForInit	j = 0 ;	155:9:5025:5030	8202988	0	True				
ANR	8203009	AssignmentExpression	j = 0		8202988	0		=			
ANR	8203010	Identifier	j		8202988	0					
ANR	8203011	PrimaryExpression	0		8202988	1					
ANR	8203012	Condition	strlen ( resident_table [ j ] . full_font_name ) != 0 && j < pl_built_in_resident_font_table_count	155:16:5032:5130	8202988	1	True				
ANR	8203013	AndExpression	strlen ( resident_table [ j ] . full_font_name ) != 0 && j < pl_built_in_resident_font_table_count		8202988	0		&&			
ANR	8203014	EqualityExpression	strlen ( resident_table [ j ] . full_font_name ) != 0		8202988	0		!=			
ANR	8203015	CallExpression	strlen ( resident_table [ j ] . full_font_name )		8202988	0					
ANR	8203016	Callee	strlen		8202988	0					
ANR	8203017	Identifier	strlen		8202988	0					
ANR	8203018	ArgumentList	resident_table [ j ] . full_font_name		8202988	1					
ANR	8203019	Argument	resident_table [ j ] . full_font_name		8202988	0					
ANR	8203020	MemberAccess	resident_table [ j ] . full_font_name		8202988	0					
ANR	8203021	ArrayIndexing	resident_table [ j ]		8202988	0					
ANR	8203022	Identifier	resident_table		8202988	0					
ANR	8203023	Identifier	j		8202988	1					
ANR	8203024	Identifier	full_font_name		8202988	1					
ANR	8203025	PrimaryExpression	0		8202988	1					
ANR	8203026	RelationalExpression	j < pl_built_in_resident_font_table_count		8202988	1		<			
ANR	8203027	Identifier	j		8202988	0					
ANR	8203028	Identifier	pl_built_in_resident_font_table_count		8202988	1					
ANR	8203029	PostIncDecOperationExpression	j ++	156:55:5133:5135	8202988	2	True				
ANR	8203030	Identifier	j		8202988	0					
ANR	8203031	IncDec	++		8202988	1					
ANR	8203032	CompoundStatement		8:8:233:244	8202988	3					
ANR	8203033	IdentifierDeclStatement	void * value ;	157:8:5148:5159	8202988	0	True				
ANR	8203034	IdentifierDecl	* value		8202988	0					
ANR	8203035	IdentifierDeclType	void *		8202988	0					
ANR	8203036	Identifier	value		8202988	1					
ANR	8203037	IfStatement	if ( use_unicode_names_for_keys )		8202988	1					
ANR	8203038	Condition	use_unicode_names_for_keys	160:12:5229:5254	8202988	0	True				
ANR	8203039	Identifier	use_unicode_names_for_keys		8202988	0					
ANR	8203040	CompoundStatement		11:40:342:342	8202988	1					
ANR	8203041	IfStatement	"if ( ! pl_dict_lookup ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL ) )"		8202988	0					
ANR	8203042	Condition	"! pl_dict_lookup ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"	161:16:5275:5575	8202988	0	True				
ANR	8203043	UnaryOperationExpression	"! pl_dict_lookup ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"		8202988	0					
ANR	8203044	UnaryOperator	!		8202988	0					
ANR	8203045	CallExpression	"pl_dict_lookup ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , sizeof ( resident_table [ j ] . unicode_fontname ) , & value , true , NULL )"		8202988	1					
ANR	8203046	Callee	pl_dict_lookup		8202988	0					
ANR	8203047	Identifier	pl_dict_lookup		8202988	0					
ANR	8203048	ArgumentList	pfontdict		8202988	1					
ANR	8203049	Argument	pfontdict		8202988	0					
ANR	8203050	Identifier	pfontdict		8202988	0					
ANR	8203051	Argument	( const byte * ) resident_table [ j ] . unicode_fontname		8202988	1					
ANR	8203052	CastExpression	( const byte * ) resident_table [ j ] . unicode_fontname		8202988	0					
ANR	8203053	CastTarget	const byte *		8202988	0					
ANR	8203054	MemberAccess	resident_table [ j ] . unicode_fontname		8202988	1					
ANR	8203055	ArrayIndexing	resident_table [ j ]		8202988	0					
ANR	8203056	Identifier	resident_table		8202988	0					
ANR	8203057	Identifier	j		8202988	1					
ANR	8203058	Identifier	unicode_fontname		8202988	1					
ANR	8203059	Argument	sizeof ( resident_table [ j ] . unicode_fontname )		8202988	2					
ANR	8203060	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname )		8202988	0					
ANR	8203061	Sizeof	sizeof		8202988	0					
ANR	8203062	MemberAccess	resident_table [ j ] . unicode_fontname		8202988	1					
ANR	8203063	ArrayIndexing	resident_table [ j ]		8202988	0					
ANR	8203064	Identifier	resident_table		8202988	0					
ANR	8203065	Identifier	j		8202988	1					
ANR	8203066	Identifier	unicode_fontname		8202988	1					
ANR	8203067	Argument	& value		8202988	3					
ANR	8203068	UnaryOperationExpression	& value		8202988	0					
ANR	8203069	UnaryOperator	&		8202988	0					
ANR	8203070	Identifier	value		8202988	1					
ANR	8203071	Argument	true		8202988	4					
ANR	8203072	Identifier	true		8202988	0					
ANR	8203073	Argument	NULL		8202988	5					
ANR	8203074	Identifier	NULL		8202988	0					
ANR	8203075	CompoundStatement		18:16:708:713	8202988	1					
ANR	8203076	IdentifierDeclStatement	int i ;	167:16:5623:5628	8202988	0	True				
ANR	8203077	IdentifierDecl	i		8202988	0					
ANR	8203078	IdentifierDeclType	int		8202988	0					
ANR	8203079	Identifier	i		8202988	1					
ANR	8203080	ExpressionStatement	"dmprintf ( mem , ""Font with unicode key: "" )"	169:16:5647:5687	8202988	1	True				
ANR	8203081	CallExpression	"dmprintf ( mem , ""Font with unicode key: "" )"		8202988	0					
ANR	8203082	Callee	dmprintf		8202988	0					
ANR	8203083	Identifier	dmprintf		8202988	0					
ANR	8203084	ArgumentList	mem		8202988	1					
ANR	8203085	Argument	mem		8202988	0					
ANR	8203086	Identifier	mem		8202988	0					
ANR	8203087	Argument	"""Font with unicode key: """		8202988	1					
ANR	8203088	PrimaryExpression	"""Font with unicode key: """		8202988	0					
ANR	8203089	ForStatement	for ( i = 0 ; i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] ) ; i ++ )		8202988	2					
ANR	8203090	ForInit	i = 0 ;	170:21:5710:5715	8202988	0	True				
ANR	8203091	AssignmentExpression	i = 0		8202988	0		=			
ANR	8203092	Identifier	i		8202988	0					
ANR	8203093	PrimaryExpression	0		8202988	1					
ANR	8203094	Condition	i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )	171:21:5738:5873	8202988	1	True				
ANR	8203095	RelationalExpression	i < sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8202988	0		<			
ANR	8203096	Identifier	i		8202988	0					
ANR	8203097	MultiplicativeExpression	sizeof ( resident_table [ j ] . unicode_fontname ) / sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8202988	1		/			
ANR	8203098	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname )		8202988	0					
ANR	8203099	Sizeof	sizeof		8202988	0					
ANR	8203100	MemberAccess	resident_table [ j ] . unicode_fontname		8202988	1					
ANR	8203101	ArrayIndexing	resident_table [ j ]		8202988	0					
ANR	8203102	Identifier	resident_table		8202988	0					
ANR	8203103	Identifier	j		8202988	1					
ANR	8203104	Identifier	unicode_fontname		8202988	1					
ANR	8203105	SizeofExpression	sizeof ( resident_table [ j ] . unicode_fontname [ 0 ] )		8202988	1					
ANR	8203106	Sizeof	sizeof		8202988	0					
ANR	8203107	ArrayIndexing	resident_table [ j ] . unicode_fontname [ 0 ]		8202988	1					
ANR	8203108	MemberAccess	resident_table [ j ] . unicode_fontname		8202988	0					
ANR	8203109	ArrayIndexing	resident_table [ j ]		8202988	0					
ANR	8203110	Identifier	resident_table		8202988	0					
ANR	8203111	Identifier	j		8202988	1					
ANR	8203112	Identifier	unicode_fontname		8202988	1					
ANR	8203113	PrimaryExpression	0		8202988	1					
ANR	8203114	PostIncDecOperationExpression	i ++	173:68:5876:5878	8202988	2	True				
ANR	8203115	Identifier	i		8202988	0					
ANR	8203116	IncDec	++		8202988	1					
ANR	8203117	CompoundStatement		24:73:966:966	8202988	3					
ANR	8203118	ExpressionStatement	"dmprintf1 ( mem , ""%c"" , ( char ) resident_table [ j ] . unicode_fontname [ i ] )"	174:20:5903:5998	8202988	0	True				
ANR	8203119	CallExpression	"dmprintf1 ( mem , ""%c"" , ( char ) resident_table [ j ] . unicode_fontname [ i ] )"		8202988	0					
ANR	8203120	Callee	dmprintf1		8202988	0					
ANR	8203121	Identifier	dmprintf1		8202988	0					
ANR	8203122	ArgumentList	mem		8202988	1					
ANR	8203123	Argument	mem		8202988	0					
ANR	8203124	Identifier	mem		8202988	0					
ANR	8203125	Argument	"""%c"""		8202988	1					
ANR	8203126	PrimaryExpression	"""%c"""		8202988	0					
ANR	8203127	Argument	( char ) resident_table [ j ] . unicode_fontname [ i ]		8202988	2					
ANR	8203128	CastExpression	( char ) resident_table [ j ] . unicode_fontname [ i ]		8202988	0					
ANR	8203129	CastTarget	char		8202988	0					
ANR	8203130	ArrayIndexing	resident_table [ j ] . unicode_fontname [ i ]		8202988	1					
ANR	8203131	MemberAccess	resident_table [ j ] . unicode_fontname		8202988	0					
ANR	8203132	ArrayIndexing	resident_table [ j ]		8202988	0					
ANR	8203133	Identifier	resident_table		8202988	0					
ANR	8203134	Identifier	j		8202988	1					
ANR	8203135	Identifier	unicode_fontname		8202988	1					
ANR	8203136	Identifier	i		8202988	1					
ANR	8203137	ExpressionStatement	"dmprintf1 ( mem , "" not available in font dictionary, resident table position: %d\\n"" , j )"	177:16:6034:6171	8202988	3	True				
ANR	8203138	CallExpression	"dmprintf1 ( mem , "" not available in font dictionary, resident table position: %d\\n"" , j )"		8202988	0					
ANR	8203139	Callee	dmprintf1		8202988	0					
ANR	8203140	Identifier	dmprintf1		8202988	0					
ANR	8203141	ArgumentList	mem		8202988	1					
ANR	8203142	Argument	mem		8202988	0					
ANR	8203143	Identifier	mem		8202988	0					
ANR	8203144	Argument	""" not available in font dictionary, resident table position: %d\\n"""		8202988	1					
ANR	8203145	PrimaryExpression	""" not available in font dictionary, resident table position: %d\\n"""		8202988	0					
ANR	8203146	Argument	j		8202988	2					
ANR	8203147	Identifier	j		8202988	0					
ANR	8203148	ElseStatement	else		8202988	0					
ANR	8203149	CompoundStatement		33:12:1301:1312	8202988	0					
ANR	8203150	IdentifierDeclStatement	byte key [ 3 ] ;	182:12:6216:6227	8202988	0	True				
ANR	8203151	IdentifierDecl	key [ 3 ]		8202988	0					
ANR	8203152	IdentifierDeclType	byte [ 3 ]		8202988	0					
ANR	8203153	Identifier	key		8202988	1					
ANR	8203154	PrimaryExpression	3		8202988	2					
ANR	8203155	ExpressionStatement	key [ 2 ] = ( byte ) j	184:12:6242:6259	8202988	1	True				
ANR	8203156	AssignmentExpression	key [ 2 ] = ( byte ) j		8202988	0		=			
ANR	8203157	ArrayIndexing	key [ 2 ]		8202988	0					
ANR	8203158	Identifier	key		8202988	0					
ANR	8203159	PrimaryExpression	2		8202988	1					
ANR	8203160	CastExpression	( byte ) j		8202988	1					
ANR	8203161	CastTarget	byte		8202988	0					
ANR	8203162	Identifier	j		8202988	1					
ANR	8203163	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	185:12:6273:6292	8202988	2	True				
ANR	8203164	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8202988	0		=			
ANR	8203165	ArrayIndexing	key [ 0 ]		8202988	0					
ANR	8203166	Identifier	key		8202988	0					
ANR	8203167	PrimaryExpression	0		8202988	1					
ANR	8203168	AssignmentExpression	key [ 1 ] = 0		8202988	1		=			
ANR	8203169	ArrayIndexing	key [ 1 ]		8202988	0					
ANR	8203170	Identifier	key		8202988	0					
ANR	8203171	PrimaryExpression	1		8202988	1					
ANR	8203172	PrimaryExpression	0		8202988	1					
ANR	8203173	IfStatement	"if ( ! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL ) )"		8202988	3					
ANR	8203174	Condition	"! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"	186:16:6310:6501	8202988	0	True				
ANR	8203175	UnaryOperationExpression	"! pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"		8202988	0					
ANR	8203176	UnaryOperator	!		8202988	0					
ANR	8203177	CallExpression	"pl_dict_lookup ( pfontdict , key , sizeof ( key ) , & value , true , NULL )"		8202988	1					
ANR	8203178	Callee	pl_dict_lookup		8202988	0					
ANR	8203179	Identifier	pl_dict_lookup		8202988	0					
ANR	8203180	ArgumentList	pfontdict		8202988	1					
ANR	8203181	Argument	pfontdict		8202988	0					
ANR	8203182	Identifier	pfontdict		8202988	0					
ANR	8203183	Argument	key		8202988	1					
ANR	8203184	Identifier	key		8202988	0					
ANR	8203185	Argument	sizeof ( key )		8202988	2					
ANR	8203186	SizeofExpression	sizeof ( key )		8202988	0					
ANR	8203187	Sizeof	sizeof		8202988	0					
ANR	8203188	SizeofOperand	key		8202988	1					
ANR	8203189	Argument	& value		8202988	3					
ANR	8203190	UnaryOperationExpression	& value		8202988	0					
ANR	8203191	UnaryOperator	&		8202988	0					
ANR	8203192	Identifier	value		8202988	1					
ANR	8203193	Argument	true		8202988	4					
ANR	8203194	Identifier	true		8202988	0					
ANR	8203195	Argument	NULL		8202988	5					
ANR	8203196	Identifier	NULL		8202988	0					
ANR	8203197	ExpressionStatement	"dmprintf2 ( mem , ""%s not available in font dictionary, resident table position: %d\\n"" , resident_table [ j ] . full_font_name , j )"	191:16:6547:6720	8202988	1	True				
ANR	8203198	CallExpression	"dmprintf2 ( mem , ""%s not available in font dictionary, resident table position: %d\\n"" , resident_table [ j ] . full_font_name , j )"		8202988	0					
ANR	8203199	Callee	dmprintf2		8202988	0					
ANR	8203200	Identifier	dmprintf2		8202988	0					
ANR	8203201	ArgumentList	mem		8202988	1					
ANR	8203202	Argument	mem		8202988	0					
ANR	8203203	Identifier	mem		8202988	0					
ANR	8203204	Argument	"""%s not available in font dictionary, resident table position: %d\\n"""		8202988	1					
ANR	8203205	PrimaryExpression	"""%s not available in font dictionary, resident table position: %d\\n"""		8202988	0					
ANR	8203206	Argument	resident_table [ j ] . full_font_name		8202988	2					
ANR	8203207	MemberAccess	resident_table [ j ] . full_font_name		8202988	0					
ANR	8203208	ArrayIndexing	resident_table [ j ]		8202988	0					
ANR	8203209	Identifier	resident_table		8202988	0					
ANR	8203210	Identifier	j		8202988	1					
ANR	8203211	Identifier	full_font_name		8202988	1					
ANR	8203212	Argument	j		8202988	3					
ANR	8203213	Identifier	j		8202988	0					
ANR	8203214	ReturnStatement	return ;	196:4:6742:6748	8202988	14	True				
ANR	8203215	Statement	undef	197:1:6751:6755	8202988	15	True				
ANR	8203216	Statement	fontnames	197:7:6757:6765	8202988	16	True				
ANR	8203217	ReturnType	static void		8202988	1					
ANR	8203218	Identifier	check_resident_ufst_fonts		8202988	2					
ANR	8203219	ParameterList	"pl_dict_t * pfontdict , bool use_unicode_names_for_keys , gs_memory_t * mem"		8202988	3					
ANR	8203220	Parameter	pl_dict_t * pfontdict	148:26:4813:4833	8202988	0	True				
ANR	8203221	ParameterType	pl_dict_t *		8202988	0					
ANR	8203222	Identifier	pfontdict		8202988	1					
ANR	8203223	Parameter	bool use_unicode_names_for_keys	149:26:4862:4892	8202988	1	True				
ANR	8203224	ParameterType	bool		8202988	0					
ANR	8203225	Identifier	use_unicode_names_for_keys		8202988	1					
ANR	8203226	Parameter	gs_memory_t * mem	149:59:4895:4911	8202988	2	True				
ANR	8203227	ParameterType	gs_memory_t *		8202988	0					
ANR	8203228	Identifier	mem		8202988	1					
ANR	8203229	CFGEntryNode	ENTRY		8202988		True				
ANR	8203230	CFGExitNode	EXIT		8202988		True				
ANR	8203231	Symbol	* * j		8202988						
ANR	8203232	Symbol	resident_table [ j ] . unicode_fontname		8202988						
ANR	8203233	Symbol	NULL		8202988						
ANR	8203234	Symbol	& value		8202988						
ANR	8203235	Symbol	* resident_table [ j ] . unicode_fontname		8202988						
ANR	8203236	Symbol	pl_built_in_resident_font_table_count		8202988						
ANR	8203237	Symbol	resident_table [ j ] . full_font_name		8202988						
ANR	8203238	Symbol	* resident_table		8202988						
ANR	8203239	Symbol	i		8202988						
ANR	8203240	Symbol	* key		8202988						
ANR	8203241	Symbol	j		8202988						
ANR	8203242	Symbol	use_unicode_names_for_keys		8202988						
ANR	8203243	Symbol	* * resident_table		8202988						
ANR	8203244	Symbol	strlen		8202988						
ANR	8203245	Symbol	* i		8202988						
ANR	8203246	Symbol	mem		8202988						
ANR	8203247	Symbol	* j		8202988						
ANR	8203248	Symbol	pfontdict		8202988						
ANR	8203249	Symbol	true		8202988						
ANR	8203250	Symbol	pl_dict_lookup		8202988						
ANR	8203251	Symbol	value		8202988						
ANR	8203252	Symbol	key		8202988						
ANR	8203253	Symbol	resident_table		8202988						
ANR	8203254	Function	check_resident_fonts	200:0:6770:7537							
ANR	8203255	FunctionDef	"check_resident_fonts (pl_dict_t * pfontdict , gs_memory_t * mem)"		8203254	0					
ANR	8203256	CompoundStatement		202:0:6845:7537	8203254	0					
ANR	8203257	Statement	define	203:1:6848:6853	8203254	0	True				
ANR	8203258	Statement	fontnames	203:8:6855:6863	8203254	1	True				
ANR	8203259	Statement	(	203:17:6864:6864	8203254	2	True				
ANR	8203260	Statement	agfascreenfontname	203:18:6865:6882	8203254	3	True				
ANR	8203261	Statement	","	203:36:6883:6883	8203254	4	True				
ANR	8203262	Statement	agfaname	203:38:6885:6892	8203254	5	True				
ANR	8203263	Statement	","	203:46:6893:6893	8203254	6	True				
ANR	8203264	Statement	urwname	203:48:6895:6901	8203254	7	True				
ANR	8203265	Statement	)	203:55:6902:6902	8203254	8	True				
ANR	8203266	Statement	urwname	203:57:6904:6910	8203254	9	True				
ANR	8203267	Statement	include	204:1:6913:6919	8203254	10	True				
ANR	8203268	Statement	"""plftable.h"""	204:9:6921:6932	8203254	11	True				
ANR	8203269	IdentifierDeclStatement	int i ;	205:4:6938:6943	8203254	12	True				
ANR	8203270	IdentifierDecl	i		8203254	0					
ANR	8203271	IdentifierDeclType	int		8203254	0					
ANR	8203272	Identifier	i		8203254	1					
ANR	8203273	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count ; i ++ )		8203254	13					
ANR	8203274	ForInit	i = 0 ;	207:9:6955:6960	8203254	0	True				
ANR	8203275	AssignmentExpression	i = 0		8203254	0		=			
ANR	8203276	Identifier	i		8203254	0					
ANR	8203277	PrimaryExpression	0		8203254	1					
ANR	8203278	Condition	strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count	208:9:6971:7069	8203254	1	True				
ANR	8203279	AndExpression	strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count		8203254	0		&&			
ANR	8203280	EqualityExpression	strlen ( resident_table [ i ] . full_font_name ) != 0		8203254	0		!=			
ANR	8203281	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8203254	0					
ANR	8203282	Callee	strlen		8203254	0					
ANR	8203283	Identifier	strlen		8203254	0					
ANR	8203284	ArgumentList	resident_table [ i ] . full_font_name		8203254	1					
ANR	8203285	Argument	resident_table [ i ] . full_font_name		8203254	0					
ANR	8203286	MemberAccess	resident_table [ i ] . full_font_name		8203254	0					
ANR	8203287	ArrayIndexing	resident_table [ i ]		8203254	0					
ANR	8203288	Identifier	resident_table		8203254	0					
ANR	8203289	Identifier	i		8203254	1					
ANR	8203290	Identifier	full_font_name		8203254	1					
ANR	8203291	PrimaryExpression	0		8203254	1					
ANR	8203292	RelationalExpression	i < pl_built_in_resident_font_table_count		8203254	1		<			
ANR	8203293	Identifier	i		8203254	0					
ANR	8203294	Identifier	pl_built_in_resident_font_table_count		8203254	1					
ANR	8203295	PostIncDecOperationExpression	i ++	209:55:7072:7074	8203254	2	True				
ANR	8203296	Identifier	i		8203254	0					
ANR	8203297	IncDec	++		8203254	1					
ANR	8203298	IfStatement	"if ( ! pl_lookup_font_by_pjl_number ( pfontdict , i ) )"		8203254	3					
ANR	8203299	Condition	"! pl_lookup_font_by_pjl_number ( pfontdict , i )"	210:12:7089:7131	8203254	0	True				
ANR	8203300	UnaryOperationExpression	"! pl_lookup_font_by_pjl_number ( pfontdict , i )"		8203254	0					
ANR	8203301	UnaryOperator	!		8203254	0					
ANR	8203302	CallExpression	"pl_lookup_font_by_pjl_number ( pfontdict , i )"		8203254	1					
ANR	8203303	Callee	pl_lookup_font_by_pjl_number		8203254	0					
ANR	8203304	Identifier	pl_lookup_font_by_pjl_number		8203254	0					
ANR	8203305	ArgumentList	pfontdict		8203254	1					
ANR	8203306	Argument	pfontdict		8203254	0					
ANR	8203307	Identifier	pfontdict		8203254	0					
ANR	8203308	Argument	i		8203254	1					
ANR	8203309	Identifier	i		8203254	0					
ANR	8203310	CompoundStatement		10:12:302:307	8203254	1					
ANR	8203311	IdentifierDeclStatement	int j ;	211:12:7148:7153	8203254	0	True				
ANR	8203312	IdentifierDecl	j		8203254	0					
ANR	8203313	IdentifierDeclType	int		8203254	0					
ANR	8203314	Identifier	j		8203254	1					
ANR	8203315	ExpressionStatement	"dmprintf2 ( mem , ""%s (entry %d) not found\\n"" , resident_table [ i ] . full_font_name , i )"	213:12:7168:7270	8203254	1	True				
ANR	8203316	CallExpression	"dmprintf2 ( mem , ""%s (entry %d) not found\\n"" , resident_table [ i ] . full_font_name , i )"		8203254	0					
ANR	8203317	Callee	dmprintf2		8203254	0					
ANR	8203318	Identifier	dmprintf2		8203254	0					
ANR	8203319	ArgumentList	mem		8203254	1					
ANR	8203320	Argument	mem		8203254	0					
ANR	8203321	Identifier	mem		8203254	0					
ANR	8203322	Argument	"""%s (entry %d) not found\\n"""		8203254	1					
ANR	8203323	PrimaryExpression	"""%s (entry %d) not found\\n"""		8203254	0					
ANR	8203324	Argument	resident_table [ i ] . full_font_name		8203254	2					
ANR	8203325	MemberAccess	resident_table [ i ] . full_font_name		8203254	0					
ANR	8203326	ArrayIndexing	resident_table [ i ]		8203254	0					
ANR	8203327	Identifier	resident_table		8203254	0					
ANR	8203328	Identifier	i		8203254	1					
ANR	8203329	Identifier	full_font_name		8203254	1					
ANR	8203330	Argument	i		8203254	3					
ANR	8203331	Identifier	i		8203254	0					
ANR	8203332	ExpressionStatement	"dmprintf ( mem , ""pxl unicode name:"" )"	215:12:7284:7318	8203254	2	True				
ANR	8203333	CallExpression	"dmprintf ( mem , ""pxl unicode name:"" )"		8203254	0					
ANR	8203334	Callee	dmprintf		8203254	0					
ANR	8203335	Identifier	dmprintf		8203254	0					
ANR	8203336	ArgumentList	mem		8203254	1					
ANR	8203337	Argument	mem		8203254	0					
ANR	8203338	Identifier	mem		8203254	0					
ANR	8203339	Argument	"""pxl unicode name:"""		8203254	1					
ANR	8203340	PrimaryExpression	"""pxl unicode name:"""		8203254	0					
ANR	8203341	ForStatement	for ( j = 0 ; j < countof ( resident_table [ i ] . unicode_fontname ) ; j ++ )		8203254	3					
ANR	8203342	ForInit	j = 0 ;	216:17:7337:7342	8203254	0	True				
ANR	8203343	AssignmentExpression	j = 0		8203254	0		=			
ANR	8203344	Identifier	j		8203254	0					
ANR	8203345	PrimaryExpression	0		8203254	1					
ANR	8203346	Condition	j < countof ( resident_table [ i ] . unicode_fontname )	216:24:7344:7390	8203254	1	True				
ANR	8203347	RelationalExpression	j < countof ( resident_table [ i ] . unicode_fontname )		8203254	0		<			
ANR	8203348	Identifier	j		8203254	0					
ANR	8203349	CallExpression	countof ( resident_table [ i ] . unicode_fontname )		8203254	1					
ANR	8203350	Callee	countof		8203254	0					
ANR	8203351	Identifier	countof		8203254	0					
ANR	8203352	ArgumentList	resident_table [ i ] . unicode_fontname		8203254	1					
ANR	8203353	Argument	resident_table [ i ] . unicode_fontname		8203254	0					
ANR	8203354	MemberAccess	resident_table [ i ] . unicode_fontname		8203254	0					
ANR	8203355	ArrayIndexing	resident_table [ i ]		8203254	0					
ANR	8203356	Identifier	resident_table		8203254	0					
ANR	8203357	Identifier	i		8203254	1					
ANR	8203358	Identifier	unicode_fontname		8203254	1					
ANR	8203359	PostIncDecOperationExpression	j ++	216:73:7393:7395	8203254	2	True				
ANR	8203360	Identifier	j		8203254	0					
ANR	8203361	IncDec	++		8203254	1					
ANR	8203362	ExpressionStatement	"dmprintf1 ( mem , ""'%c'"" , resident_table [ i ] . unicode_fontname [ j ] )"	217:16:7414:7475	8203254	3	True				
ANR	8203363	CallExpression	"dmprintf1 ( mem , ""'%c'"" , resident_table [ i ] . unicode_fontname [ j ] )"		8203254	0					
ANR	8203364	Callee	dmprintf1		8203254	0					
ANR	8203365	Identifier	dmprintf1		8203254	0					
ANR	8203366	ArgumentList	mem		8203254	1					
ANR	8203367	Argument	mem		8203254	0					
ANR	8203368	Identifier	mem		8203254	0					
ANR	8203369	Argument	"""'%c'"""		8203254	1					
ANR	8203370	PrimaryExpression	"""'%c'"""		8203254	0					
ANR	8203371	Argument	resident_table [ i ] . unicode_fontname [ j ]		8203254	2					
ANR	8203372	ArrayIndexing	resident_table [ i ] . unicode_fontname [ j ]		8203254	0					
ANR	8203373	MemberAccess	resident_table [ i ] . unicode_fontname		8203254	0					
ANR	8203374	ArrayIndexing	resident_table [ i ]		8203254	0					
ANR	8203375	Identifier	resident_table		8203254	0					
ANR	8203376	Identifier	i		8203254	1					
ANR	8203377	Identifier	unicode_fontname		8203254	1					
ANR	8203378	Identifier	j		8203254	1					
ANR	8203379	ExpressionStatement	"dmprintf ( mem , ""\\n"" )"	218:12:7489:7508	8203254	4	True				
ANR	8203380	CallExpression	"dmprintf ( mem , ""\\n"" )"		8203254	0					
ANR	8203381	Callee	dmprintf		8203254	0					
ANR	8203382	Identifier	dmprintf		8203254	0					
ANR	8203383	ArgumentList	mem		8203254	1					
ANR	8203384	Argument	mem		8203254	0					
ANR	8203385	Identifier	mem		8203254	0					
ANR	8203386	Argument	"""\\n"""		8203254	1					
ANR	8203387	PrimaryExpression	"""\\n"""		8203254	0					
ANR	8203388	Statement	undef	220:1:7521:7525	8203254	14	True				
ANR	8203389	Statement	fontnames	220:7:7527:7535	8203254	15	True				
ANR	8203390	ReturnType	static void		8203254	1					
ANR	8203391	Identifier	check_resident_fonts		8203254	2					
ANR	8203392	ParameterList	"pl_dict_t * pfontdict , gs_memory_t * mem"		8203254	3					
ANR	8203393	Parameter	pl_dict_t * pfontdict	201:21:6803:6823	8203254	0	True				
ANR	8203394	ParameterType	pl_dict_t *		8203254	0					
ANR	8203395	Identifier	pfontdict		8203254	1					
ANR	8203396	Parameter	gs_memory_t * mem	201:44:6826:6842	8203254	1	True				
ANR	8203397	ParameterType	gs_memory_t *		8203254	0					
ANR	8203398	Identifier	mem		8203254	1					
ANR	8203399	CFGEntryNode	ENTRY		8203254		True				
ANR	8203400	CFGExitNode	EXIT		8203254		True				
ANR	8203401	Symbol	* * i		8203254						
ANR	8203402	Symbol	resident_table [ i ] . unicode_fontname		8203254						
ANR	8203403	Symbol	pl_built_in_resident_font_table_count		8203254						
ANR	8203404	Symbol	i		8203254						
ANR	8203405	Symbol	* resident_table		8203254						
ANR	8203406	Symbol	j		8203254						
ANR	8203407	Symbol	pl_lookup_font_by_pjl_number		8203254						
ANR	8203408	Symbol	* * resident_table		8203254						
ANR	8203409	Symbol	resident_table [ i ] . full_font_name		8203254						
ANR	8203410	Symbol	strlen		8203254						
ANR	8203411	Symbol	countof		8203254						
ANR	8203412	Symbol	* i		8203254						
ANR	8203413	Symbol	mem		8203254						
ANR	8203414	Symbol	* j		8203254						
ANR	8203415	Symbol	pfontdict		8203254						
ANR	8203416	Symbol	* resident_table [ i ] . unicode_fontname		8203254						
ANR	8203417	Symbol	resident_table		8203254						
ANR	8203418	Function	pl_fill_in_mt_font	225:0:7589:9206							
ANR	8203419	FunctionDef	"pl_fill_in_mt_font (gs_font_base * pfont , pl_font_t * plfont , ushort handle , char * fco_path , gs_font_dir * pdir , gs_memory_t * mem , long unique_id)"		8203418	0					
ANR	8203420	CompoundStatement		229:0:7785:9206	8203418	0					
ANR	8203421	IdentifierDeclStatement	int code = 0 ;	230:4:7791:7803	8203418	0	True				
ANR	8203422	IdentifierDecl	code = 0		8203418	0					
ANR	8203423	IdentifierDeclType	int		8203418	0					
ANR	8203424	Identifier	code		8203418	1					
ANR	8203425	AssignmentExpression	code = 0		8203418	2		=			
ANR	8203426	Identifier	code		8203418	0					
ANR	8203427	PrimaryExpression	0		8203418	1					
ANR	8203428	IfStatement	if ( pfont == 0 || plfont == 0 )		8203418	1					
ANR	8203429	Condition	pfont == 0 || plfont == 0	232:8:7814:7838	8203418	0	True				
ANR	8203430	OrExpression	pfont == 0 || plfont == 0		8203418	0		||			
ANR	8203431	EqualityExpression	pfont == 0		8203418	0		==			
ANR	8203432	Identifier	pfont		8203418	0					
ANR	8203433	PrimaryExpression	0		8203418	1					
ANR	8203434	EqualityExpression	plfont == 0		8203418	1		==			
ANR	8203435	Identifier	plfont		8203418	0					
ANR	8203436	PrimaryExpression	0		8203418	1					
ANR	8203437	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	233:8:7849:7887	8203418	1	True				
ANR	8203438	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		8203418	0		=			
ANR	8203439	Identifier	code		8203418	0					
ANR	8203440	CallExpression	gs_note_error ( gs_error_VMerror )		8203418	1					
ANR	8203441	Callee	gs_note_error		8203418	0					
ANR	8203442	Identifier	gs_note_error		8203418	0					
ANR	8203443	ArgumentList	gs_error_VMerror		8203418	1					
ANR	8203444	Argument	gs_error_VMerror		8203418	0					
ANR	8203445	Identifier	gs_error_VMerror		8203418	0					
ANR	8203446	ElseStatement	else		8203418	0					
ANR	8203447	CompoundStatement		6:9:112:112	8203418	0					
ANR	8203448	ExpressionStatement	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pdir , mem , ""illegal_font"" )"	235:8:7972:8088	8203418	0	True				
ANR	8203449	AssignmentExpression	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pdir , mem , ""illegal_font"" )"		8203418	0		=			
ANR	8203450	Identifier	code		8203418	0					
ANR	8203451	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , pdir , mem , ""illegal_font"" )"		8203418	1					
ANR	8203452	Callee	pl_fill_in_font		8203418	0					
ANR	8203453	Identifier	pl_fill_in_font		8203418	0					
ANR	8203454	ArgumentList	( gs_font * ) pfont		8203418	1					
ANR	8203455	Argument	( gs_font * ) pfont		8203418	0					
ANR	8203456	CastExpression	( gs_font * ) pfont		8203418	0					
ANR	8203457	CastTarget	gs_font *		8203418	0					
ANR	8203458	Identifier	pfont		8203418	1					
ANR	8203459	Argument	plfont		8203418	1					
ANR	8203460	Identifier	plfont		8203418	0					
ANR	8203461	Argument	pdir		8203418	2					
ANR	8203462	Identifier	pdir		8203418	0					
ANR	8203463	Argument	mem		8203418	3					
ANR	8203464	Identifier	mem		8203418	0					
ANR	8203465	Argument	"""illegal_font"""		8203418	4					
ANR	8203466	PrimaryExpression	"""illegal_font"""		8203418	0					
ANR	8203467	IfStatement	if ( code >= 0 )		8203418	1					
ANR	8203468	Condition	code >= 0	238:12:8102:8110	8203418	0	True				
ANR	8203469	RelationalExpression	code >= 0		8203418	0		>=			
ANR	8203470	Identifier	code		8203418	0					
ANR	8203471	PrimaryExpression	0		8203418	1					
ANR	8203472	CompoundStatement		10:23:327:327	8203418	1					
ANR	8203473	ExpressionStatement	plfont -> header = 0	239:12:8179:8197	8203418	0	True				
ANR	8203474	AssignmentExpression	plfont -> header = 0		8203418	0		=			
ANR	8203475	PtrMemberAccess	plfont -> header		8203418	0					
ANR	8203476	Identifier	plfont		8203418	0					
ANR	8203477	Identifier	header		8203418	1					
ANR	8203478	PrimaryExpression	0		8203418	1					
ANR	8203479	ExpressionStatement	plfont -> header_size = 0	240:12:8211:8234	8203418	1	True				
ANR	8203480	AssignmentExpression	plfont -> header_size = 0		8203418	0		=			
ANR	8203481	PtrMemberAccess	plfont -> header_size		8203418	0					
ANR	8203482	Identifier	plfont		8203418	0					
ANR	8203483	Identifier	header_size		8203418	1					
ANR	8203484	PrimaryExpression	0		8203418	1					
ANR	8203485	ExpressionStatement	plfont -> scaling_technology = plfst_MicroType	241:12:8248:8292	8203418	2	True				
ANR	8203486	AssignmentExpression	plfont -> scaling_technology = plfst_MicroType		8203418	0		=			
ANR	8203487	PtrMemberAccess	plfont -> scaling_technology		8203418	0					
ANR	8203488	Identifier	plfont		8203418	0					
ANR	8203489	Identifier	scaling_technology		8203418	1					
ANR	8203490	Identifier	plfst_MicroType		8203418	1					
ANR	8203491	ExpressionStatement	plfont -> font_type = plft_Unicode	242:12:8306:8338	8203418	3	True				
ANR	8203492	AssignmentExpression	plfont -> font_type = plft_Unicode		8203418	0		=			
ANR	8203493	PtrMemberAccess	plfont -> font_type		8203418	0					
ANR	8203494	Identifier	plfont		8203418	0					
ANR	8203495	Identifier	font_type		8203418	1					
ANR	8203496	Identifier	plft_Unicode		8203418	1					
ANR	8203497	ExpressionStatement	plfont -> large_sizes = true	243:12:8352:8378	8203418	4	True				
ANR	8203498	AssignmentExpression	plfont -> large_sizes = true		8203418	0		=			
ANR	8203499	PtrMemberAccess	plfont -> large_sizes		8203418	0					
ANR	8203500	Identifier	plfont		8203418	0					
ANR	8203501	Identifier	large_sizes		8203418	1					
ANR	8203502	Identifier	true		8203418	1					
ANR	8203503	ExpressionStatement	plfont -> is_xl_format = false	244:12:8392:8420	8203418	5	True				
ANR	8203504	AssignmentExpression	plfont -> is_xl_format = false		8203418	0		=			
ANR	8203505	PtrMemberAccess	plfont -> is_xl_format		8203418	0					
ANR	8203506	Identifier	plfont		8203418	0					
ANR	8203507	Identifier	is_xl_format		8203418	1					
ANR	8203508	Identifier	false		8203418	1					
ANR	8203509	ExpressionStatement	plfont -> allow_vertical_substitutes = false	245:12:8434:8476	8203418	6	True				
ANR	8203510	AssignmentExpression	plfont -> allow_vertical_substitutes = false		8203418	0		=			
ANR	8203511	PtrMemberAccess	plfont -> allow_vertical_substitutes		8203418	0					
ANR	8203512	Identifier	plfont		8203418	0					
ANR	8203513	Identifier	allow_vertical_substitutes		8203418	1					
ANR	8203514	Identifier	false		8203418	1					
ANR	8203515	ExpressionStatement	gs_make_identity ( & pfont -> FontMatrix )	247:12:8491:8527	8203418	7	True				
ANR	8203516	CallExpression	gs_make_identity ( & pfont -> FontMatrix )		8203418	0					
ANR	8203517	Callee	gs_make_identity		8203418	0					
ANR	8203518	Identifier	gs_make_identity		8203418	0					
ANR	8203519	ArgumentList	& pfont -> FontMatrix		8203418	1					
ANR	8203520	Argument	& pfont -> FontMatrix		8203418	0					
ANR	8203521	UnaryOperationExpression	& pfont -> FontMatrix		8203418	0					
ANR	8203522	UnaryOperator	&		8203418	0					
ANR	8203523	PtrMemberAccess	pfont -> FontMatrix		8203418	1					
ANR	8203524	Identifier	pfont		8203418	0					
ANR	8203525	Identifier	FontMatrix		8203418	1					
ANR	8203526	ExpressionStatement	pfont -> FontMatrix . xx = pfont -> FontMatrix . yy = 0.001f	248:12:8541:8593	8203418	8	True				
ANR	8203527	AssignmentExpression	pfont -> FontMatrix . xx = pfont -> FontMatrix . yy = 0.001f		8203418	0		=			
ANR	8203528	MemberAccess	pfont -> FontMatrix . xx		8203418	0					
ANR	8203529	PtrMemberAccess	pfont -> FontMatrix		8203418	0					
ANR	8203530	Identifier	pfont		8203418	0					
ANR	8203531	Identifier	FontMatrix		8203418	1					
ANR	8203532	Identifier	xx		8203418	1					
ANR	8203533	AssignmentExpression	pfont -> FontMatrix . yy = 0.001f		8203418	1		=			
ANR	8203534	MemberAccess	pfont -> FontMatrix . yy		8203418	0					
ANR	8203535	PtrMemberAccess	pfont -> FontMatrix		8203418	0					
ANR	8203536	Identifier	pfont		8203418	0					
ANR	8203537	Identifier	FontMatrix		8203418	1					
ANR	8203538	Identifier	yy		8203418	1					
ANR	8203539	PrimaryExpression	0.001f		8203418	1					
ANR	8203540	ExpressionStatement	pfont -> FontType = ft_MicroType	249:12:8607:8637	8203418	9	True				
ANR	8203541	AssignmentExpression	pfont -> FontType = ft_MicroType		8203418	0		=			
ANR	8203542	PtrMemberAccess	pfont -> FontType		8203418	0					
ANR	8203543	Identifier	pfont		8203418	0					
ANR	8203544	Identifier	FontType		8203418	1					
ANR	8203545	Identifier	ft_MicroType		8203418	1					
ANR	8203546	ExpressionStatement	pfont -> BitmapWidths = true	250:12:8651:8677	8203418	10	True				
ANR	8203547	AssignmentExpression	pfont -> BitmapWidths = true		8203418	0		=			
ANR	8203548	PtrMemberAccess	pfont -> BitmapWidths		8203418	0					
ANR	8203549	Identifier	pfont		8203418	0					
ANR	8203550	Identifier	BitmapWidths		8203418	1					
ANR	8203551	Identifier	true		8203418	1					
ANR	8203552	ExpressionStatement	pfont -> ExactSize = fbit_use_outlines	251:12:8691:8727	8203418	11	True				
ANR	8203553	AssignmentExpression	pfont -> ExactSize = fbit_use_outlines		8203418	0		=			
ANR	8203554	PtrMemberAccess	pfont -> ExactSize		8203418	0					
ANR	8203555	Identifier	pfont		8203418	0					
ANR	8203556	Identifier	ExactSize		8203418	1					
ANR	8203557	Identifier	fbit_use_outlines		8203418	1					
ANR	8203558	ExpressionStatement	pfont -> InBetweenSize = fbit_use_outlines	252:12:8741:8781	8203418	12	True				
ANR	8203559	AssignmentExpression	pfont -> InBetweenSize = fbit_use_outlines		8203418	0		=			
ANR	8203560	PtrMemberAccess	pfont -> InBetweenSize		8203418	0					
ANR	8203561	Identifier	pfont		8203418	0					
ANR	8203562	Identifier	InBetweenSize		8203418	1					
ANR	8203563	Identifier	fbit_use_outlines		8203418	1					
ANR	8203564	ExpressionStatement	pfont -> TransformedChar = fbit_use_outlines	253:12:8795:8837	8203418	13	True				
ANR	8203565	AssignmentExpression	pfont -> TransformedChar = fbit_use_outlines		8203418	0		=			
ANR	8203566	PtrMemberAccess	pfont -> TransformedChar		8203418	0					
ANR	8203567	Identifier	pfont		8203418	0					
ANR	8203568	Identifier	TransformedChar		8203418	1					
ANR	8203569	Identifier	fbit_use_outlines		8203418	1					
ANR	8203570	ExpressionStatement	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0	255:12:8852:8957	8203418	14	True				
ANR	8203571	AssignmentExpression	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8203418	0		=			
ANR	8203572	MemberAccess	pfont -> FontBBox . p . x		8203418	0					
ANR	8203573	MemberAccess	pfont -> FontBBox . p		8203418	0					
ANR	8203574	PtrMemberAccess	pfont -> FontBBox		8203418	0					
ANR	8203575	Identifier	pfont		8203418	0					
ANR	8203576	Identifier	FontBBox		8203418	1					
ANR	8203577	Identifier	p		8203418	1					
ANR	8203578	Identifier	x		8203418	1					
ANR	8203579	AssignmentExpression	pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8203418	1		=			
ANR	8203580	MemberAccess	pfont -> FontBBox . p . y		8203418	0					
ANR	8203581	MemberAccess	pfont -> FontBBox . p		8203418	0					
ANR	8203582	PtrMemberAccess	pfont -> FontBBox		8203418	0					
ANR	8203583	Identifier	pfont		8203418	0					
ANR	8203584	Identifier	FontBBox		8203418	1					
ANR	8203585	Identifier	p		8203418	1					
ANR	8203586	Identifier	y		8203418	1					
ANR	8203587	AssignmentExpression	pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8203418	1		=			
ANR	8203588	MemberAccess	pfont -> FontBBox . q . x		8203418	0					
ANR	8203589	MemberAccess	pfont -> FontBBox . q		8203418	0					
ANR	8203590	PtrMemberAccess	pfont -> FontBBox		8203418	0					
ANR	8203591	Identifier	pfont		8203418	0					
ANR	8203592	Identifier	FontBBox		8203418	1					
ANR	8203593	Identifier	q		8203418	1					
ANR	8203594	Identifier	x		8203418	1					
ANR	8203595	AssignmentExpression	pfont -> FontBBox . q . y = 0		8203418	1		=			
ANR	8203596	MemberAccess	pfont -> FontBBox . q . y		8203418	0					
ANR	8203597	MemberAccess	pfont -> FontBBox . q		8203418	0					
ANR	8203598	PtrMemberAccess	pfont -> FontBBox		8203418	0					
ANR	8203599	Identifier	pfont		8203418	0					
ANR	8203600	Identifier	FontBBox		8203418	1					
ANR	8203601	Identifier	q		8203418	1					
ANR	8203602	Identifier	y		8203418	1					
ANR	8203603	PrimaryExpression	0		8203418	1					
ANR	8203604	ExpressionStatement	"uid_set_UniqueID ( & pfont -> UID , unique_id | ( handle << 16 ) )"	258:12:8972:9029	8203418	15	True				
ANR	8203605	CallExpression	"uid_set_UniqueID ( & pfont -> UID , unique_id | ( handle << 16 ) )"		8203418	0					
ANR	8203606	Callee	uid_set_UniqueID		8203418	0					
ANR	8203607	Identifier	uid_set_UniqueID		8203418	0					
ANR	8203608	ArgumentList	& pfont -> UID		8203418	1					
ANR	8203609	Argument	& pfont -> UID		8203418	0					
ANR	8203610	UnaryOperationExpression	& pfont -> UID		8203418	0					
ANR	8203611	UnaryOperator	&		8203418	0					
ANR	8203612	PtrMemberAccess	pfont -> UID		8203418	1					
ANR	8203613	Identifier	pfont		8203418	0					
ANR	8203614	Identifier	UID		8203418	1					
ANR	8203615	Argument	unique_id | ( handle << 16 )		8203418	1					
ANR	8203616	InclusiveOrExpression	unique_id | ( handle << 16 )		8203418	0		|			
ANR	8203617	Identifier	unique_id		8203418	0					
ANR	8203618	ShiftExpression	handle << 16		8203418	1		<<			
ANR	8203619	Identifier	handle		8203418	0					
ANR	8203620	PrimaryExpression	16		8203418	1					
ANR	8203621	ExpressionStatement	pfont -> encoding_index = 1	259:12:9043:9068	8203418	16	True				
ANR	8203622	AssignmentExpression	pfont -> encoding_index = 1		8203418	0		=			
ANR	8203623	PtrMemberAccess	pfont -> encoding_index		8203418	0					
ANR	8203624	Identifier	pfont		8203418	0					
ANR	8203625	Identifier	encoding_index		8203418	1					
ANR	8203626	PrimaryExpression	1		8203418	1					
ANR	8203627	ExpressionStatement	pfont -> nearest_encoding_index = 1	260:12:9109:9142	8203418	17	True				
ANR	8203628	AssignmentExpression	pfont -> nearest_encoding_index = 1		8203418	0		=			
ANR	8203629	PtrMemberAccess	pfont -> nearest_encoding_index		8203418	0					
ANR	8203630	Identifier	pfont		8203418	0					
ANR	8203631	Identifier	nearest_encoding_index		8203418	1					
ANR	8203632	PrimaryExpression	1		8203418	1					
ANR	8203633	ReturnStatement	return ( code ) ;	263:4:9191:9204	8203418	2	True				
ANR	8203634	Identifier	code		8203418	0					
ANR	8203635	ReturnType	static int		8203418	1					
ANR	8203636	Identifier	pl_fill_in_mt_font		8203418	2					
ANR	8203637	ParameterList	"gs_font_base * pfont , pl_font_t * plfont , ushort handle , char * fco_path , gs_font_dir * pdir , gs_memory_t * mem , long unique_id"		8203418	3					
ANR	8203638	Parameter	gs_font_base * pfont	226:19:7619:7638	8203418	0	True				
ANR	8203639	ParameterType	gs_font_base *		8203418	0					
ANR	8203640	Identifier	pfont		8203418	1					
ANR	8203641	Parameter	pl_font_t * plfont	226:41:7641:7658	8203418	1	True				
ANR	8203642	ParameterType	pl_font_t *		8203418	0					
ANR	8203643	Identifier	plfont		8203418	1					
ANR	8203644	Parameter	ushort handle	226:61:7661:7673	8203418	2	True				
ANR	8203645	ParameterType	ushort		8203418	0					
ANR	8203646	Identifier	handle		8203418	1					
ANR	8203647	Parameter	char * fco_path	227:19:7695:7708	8203418	3	True				
ANR	8203648	ParameterType	char *		8203418	0					
ANR	8203649	Identifier	fco_path		8203418	1					
ANR	8203650	Parameter	gs_font_dir * pdir	227:35:7711:7728	8203418	4	True				
ANR	8203651	ParameterType	gs_font_dir *		8203418	0					
ANR	8203652	Identifier	pdir		8203418	1					
ANR	8203653	Parameter	gs_memory_t * mem	227:55:7731:7747	8203418	5	True				
ANR	8203654	ParameterType	gs_memory_t *		8203418	0					
ANR	8203655	Identifier	mem		8203418	1					
ANR	8203656	Parameter	long unique_id	228:19:7769:7782	8203418	6	True				
ANR	8203657	ParameterType	long		8203418	0					
ANR	8203658	Identifier	unique_id		8203418	1					
ANR	8203659	CFGEntryNode	ENTRY		8203418		True				
ANR	8203660	CFGExitNode	EXIT		8203418		True				
ANR	8203661	Symbol	plfont -> scaling_technology		8203418						
ANR	8203662	Symbol	pfont -> FontBBox . q . y		8203418						
ANR	8203663	Symbol	code		8203418						
ANR	8203664	Symbol	& pfont -> FontMatrix		8203418						
ANR	8203665	Symbol	pfont -> FontBBox . q . x		8203418						
ANR	8203666	Symbol	plfont -> header		8203418						
ANR	8203667	Symbol	pfont -> FontMatrix . yy		8203418						
ANR	8203668	Symbol	plfont		8203418						
ANR	8203669	Symbol	plfont -> large_sizes		8203418						
ANR	8203670	Symbol	& pfont -> UID		8203418						
ANR	8203671	Symbol	pfont -> nearest_encoding_index		8203418						
ANR	8203672	Symbol	pfont -> TransformedChar		8203418						
ANR	8203673	Symbol	mem		8203418						
ANR	8203674	Symbol	pfont -> FontType		8203418						
ANR	8203675	Symbol	pfont -> InBetweenSize		8203418						
ANR	8203676	Symbol	pfont -> BitmapWidths		8203418						
ANR	8203677	Symbol	pfont -> FontBBox		8203418						
ANR	8203678	Symbol	plfont -> font_type		8203418						
ANR	8203679	Symbol	fbit_use_outlines		8203418						
ANR	8203680	Symbol	plfont -> allow_vertical_substitutes		8203418						
ANR	8203681	Symbol	pfont -> encoding_index		8203418						
ANR	8203682	Symbol	unique_id		8203418						
ANR	8203683	Symbol	plfont -> header_size		8203418						
ANR	8203684	Symbol	pfont		8203418						
ANR	8203685	Symbol	pfont -> FontMatrix . xx		8203418						
ANR	8203686	Symbol	false		8203418						
ANR	8203687	Symbol	pdir		8203418						
ANR	8203688	Symbol	plfont -> is_xl_format		8203418						
ANR	8203689	Symbol	handle		8203418						
ANR	8203690	Symbol	fco_path		8203418						
ANR	8203691	Symbol	pl_fill_in_font		8203418						
ANR	8203692	Symbol	plft_Unicode		8203418						
ANR	8203693	Symbol	pfont -> FontMatrix		8203418						
ANR	8203694	Symbol	gs_error_VMerror		8203418						
ANR	8203695	Symbol	gs_note_error		8203418						
ANR	8203696	Symbol	* pfont		8203418						
ANR	8203697	Symbol	plfst_MicroType		8203418						
ANR	8203698	Symbol	pfont -> FontBBox . p . x		8203418						
ANR	8203699	Symbol	pfont -> FontBBox . p . y		8203418						
ANR	8203700	Symbol	* plfont		8203418						
ANR	8203701	Symbol	true		8203418						
ANR	8203702	Symbol	pfont -> FontBBox . p		8203418						
ANR	8203703	Symbol	pfont -> ExactSize		8203418						
ANR	8203704	Symbol	pfont -> FontBBox . q		8203418						
ANR	8203705	Symbol	ft_MicroType		8203418						
ANR	8203706	Function	pl_load_ufst_lineprinter	266:0:9209:13094							
ANR	8203707	FunctionDef	"pl_load_ufst_lineprinter (gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8203706	0					
ANR	8203708	CompoundStatement		270:0:9396:13094	8203706	0					
ANR	8203709	Statement	define	271:1:9399:9404	8203706	0	True				
ANR	8203710	Statement	fontnames	271:8:9406:9414	8203706	1	True				
ANR	8203711	Statement	(	271:17:9415:9415	8203706	2	True				
ANR	8203712	Statement	agfascreenfontname	271:18:9416:9433	8203706	3	True				
ANR	8203713	Statement	","	271:36:9434:9434	8203706	4	True				
ANR	8203714	Statement	agfaname	271:38:9436:9443	8203706	5	True				
ANR	8203715	Statement	","	271:46:9444:9444	8203706	6	True				
ANR	8203716	Statement	urwname	271:48:9446:9452	8203706	7	True				
ANR	8203717	Statement	)	271:55:9453:9453	8203706	8	True				
ANR	8203718	Statement	agfaname	271:57:9455:9462	8203706	9	True				
ANR	8203719	Statement	include	272:1:9465:9471	8203706	10	True				
ANR	8203720	Statement	"""plftable.h"""	272:9:9473:9484	8203706	11	True				
ANR	8203721	IdentifierDeclStatement	int i ;	273:4:9490:9495	8203706	12	True				
ANR	8203722	IdentifierDecl	i		8203706	0					
ANR	8203723	IdentifierDeclType	int		8203706	0					
ANR	8203724	Identifier	i		8203706	1					
ANR	8203725	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count ; i ++ )		8203706	13					
ANR	8203726	ForInit	i = 0 ;	275:9:9507:9512	8203706	0	True				
ANR	8203727	AssignmentExpression	i = 0		8203706	0		=			
ANR	8203728	Identifier	i		8203706	0					
ANR	8203729	PrimaryExpression	0		8203706	1					
ANR	8203730	Condition	strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count	276:9:9523:9621	8203706	1	True				
ANR	8203731	AndExpression	strlen ( resident_table [ i ] . full_font_name ) != 0 && i < pl_built_in_resident_font_table_count		8203706	0		&&			
ANR	8203732	EqualityExpression	strlen ( resident_table [ i ] . full_font_name ) != 0		8203706	0		!=			
ANR	8203733	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8203706	0					
ANR	8203734	Callee	strlen		8203706	0					
ANR	8203735	Identifier	strlen		8203706	0					
ANR	8203736	ArgumentList	resident_table [ i ] . full_font_name		8203706	1					
ANR	8203737	Argument	resident_table [ i ] . full_font_name		8203706	0					
ANR	8203738	MemberAccess	resident_table [ i ] . full_font_name		8203706	0					
ANR	8203739	ArrayIndexing	resident_table [ i ]		8203706	0					
ANR	8203740	Identifier	resident_table		8203706	0					
ANR	8203741	Identifier	i		8203706	1					
ANR	8203742	Identifier	full_font_name		8203706	1					
ANR	8203743	PrimaryExpression	0		8203706	1					
ANR	8203744	RelationalExpression	i < pl_built_in_resident_font_table_count		8203706	1		<			
ANR	8203745	Identifier	i		8203706	0					
ANR	8203746	Identifier	pl_built_in_resident_font_table_count		8203706	1					
ANR	8203747	PostIncDecOperationExpression	i ++	277:55:9624:9626	8203706	2	True				
ANR	8203748	Identifier	i		8203706	0					
ANR	8203749	IncDec	++		8203706	1					
ANR	8203750	CompoundStatement		8:60:232:232	8203706	3					
ANR	8203751	IfStatement	if ( resident_table [ i ] . params . typeface_family == 0 )		8203706	0					
ANR	8203752	Condition	resident_table [ i ] . params . typeface_family == 0	278:12:9643:9687	8203706	0	True				
ANR	8203753	EqualityExpression	resident_table [ i ] . params . typeface_family == 0		8203706	0		==			
ANR	8203754	MemberAccess	resident_table [ i ] . params . typeface_family		8203706	0					
ANR	8203755	MemberAccess	resident_table [ i ] . params		8203706	0					
ANR	8203756	ArrayIndexing	resident_table [ i ]		8203706	0					
ANR	8203757	Identifier	resident_table		8203706	0					
ANR	8203758	Identifier	i		8203706	1					
ANR	8203759	Identifier	params		8203706	1					
ANR	8203760	Identifier	typeface_family		8203706	1					
ANR	8203761	PrimaryExpression	0		8203706	1					
ANR	8203762	CompoundStatement		17:12:663:671	8203706	1					
ANR	8203763	IdentifierDeclStatement	const byte * header = NULL ;	279:12:9704:9729	8203706	0	True				
ANR	8203764	IdentifierDecl	* header = NULL		8203706	0					
ANR	8203765	IdentifierDeclType	const byte *		8203706	0					
ANR	8203766	Identifier	header		8203706	1					
ANR	8203767	AssignmentExpression	* header = NULL		8203706	2		=			
ANR	8203768	Identifier	NULL		8203706	0					
ANR	8203769	Identifier	NULL		8203706	1					
ANR	8203770	IdentifierDeclStatement	const byte * char_data = NULL ;	280:12:9743:9771	8203706	1	True				
ANR	8203771	IdentifierDecl	* char_data = NULL		8203706	0					
ANR	8203772	IdentifierDeclType	const byte *		8203706	0					
ANR	8203773	Identifier	char_data		8203706	1					
ANR	8203774	AssignmentExpression	* char_data = NULL		8203706	2		=			
ANR	8203775	Identifier	NULL		8203706	0					
ANR	8203776	Identifier	NULL		8203706	1					
ANR	8203777	IdentifierDeclStatement	"pl_font_t * pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" ) ;"	281:12:9785:9876	8203706	2	True				
ANR	8203778	IdentifierDecl	"* pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8203706	0					
ANR	8203779	IdentifierDeclType	pl_font_t *		8203706	0					
ANR	8203780	Identifier	pplfont		8203706	1					
ANR	8203781	AssignmentExpression	"* pplfont = pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8203706	2		=			
ANR	8203782	Identifier	pplfont		8203706	0					
ANR	8203783	CallExpression	"pl_alloc_font ( mem , ""pl_load_ufst_lineprinter pplfont"" )"		8203706	1					
ANR	8203784	Callee	pl_alloc_font		8203706	0					
ANR	8203785	Identifier	pl_alloc_font		8203706	0					
ANR	8203786	ArgumentList	mem		8203706	1					
ANR	8203787	Argument	mem		8203706	0					
ANR	8203788	Identifier	mem		8203706	0					
ANR	8203789	Argument	"""pl_load_ufst_lineprinter pplfont"""		8203706	1					
ANR	8203790	PrimaryExpression	"""pl_load_ufst_lineprinter pplfont"""		8203706	0					
ANR	8203791	IdentifierDeclStatement	"gs_font_base * pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" ) ;"	283:12:9890:10046	8203706	3	True				
ANR	8203792	IdentifierDecl	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8203706	0					
ANR	8203793	IdentifierDeclType	gs_font_base *		8203706	0					
ANR	8203794	Identifier	pfont		8203706	1					
ANR	8203795	AssignmentExpression	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8203706	2		=			
ANR	8203796	Identifier	pfont		8203706	0					
ANR	8203797	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_load_ufst_lineprinter pfont"" )"		8203706	1					
ANR	8203798	Callee	gs_alloc_struct		8203706	0					
ANR	8203799	Identifier	gs_alloc_struct		8203706	0					
ANR	8203800	ArgumentList	mem		8203706	1					
ANR	8203801	Argument	mem		8203706	0					
ANR	8203802	Identifier	mem		8203706	0					
ANR	8203803	Argument	gs_font_base		8203706	1					
ANR	8203804	Identifier	gs_font_base		8203706	0					
ANR	8203805	Argument	& st_gs_font_base		8203706	2					
ANR	8203806	UnaryOperationExpression	& st_gs_font_base		8203706	0					
ANR	8203807	UnaryOperator	&		8203706	0					
ANR	8203808	Identifier	st_gs_font_base		8203706	1					
ANR	8203809	Argument	"""pl_load_ufst_lineprinter pfont"""		8203706	3					
ANR	8203810	PrimaryExpression	"""pl_load_ufst_lineprinter pfont"""		8203706	0					
ANR	8203811	IdentifierDeclStatement	int code ;	286:12:10060:10068	8203706	4	True				
ANR	8203812	IdentifierDecl	code		8203706	0					
ANR	8203813	IdentifierDeclType	int		8203706	0					
ANR	8203814	Identifier	code		8203706	1					
ANR	8203815	ExpressionStatement	"pl_get_ulp_character_data ( ( byte * * ) & header , ( byte * * ) & char_data )"	288:12:10083:10189	8203706	5	True				
ANR	8203816	CallExpression	"pl_get_ulp_character_data ( ( byte * * ) & header , ( byte * * ) & char_data )"		8203706	0					
ANR	8203817	Callee	pl_get_ulp_character_data		8203706	0					
ANR	8203818	Identifier	pl_get_ulp_character_data		8203706	0					
ANR	8203819	ArgumentList	( byte * * ) & header		8203706	1					
ANR	8203820	Argument	( byte * * ) & header		8203706	0					
ANR	8203821	CastExpression	( byte * * ) & header		8203706	0					
ANR	8203822	CastTarget	byte * *		8203706	0					
ANR	8203823	UnaryOperationExpression	& header		8203706	1					
ANR	8203824	UnaryOperator	&		8203706	0					
ANR	8203825	Identifier	header		8203706	1					
ANR	8203826	Argument	( byte * * ) & char_data		8203706	1					
ANR	8203827	CastExpression	( byte * * ) & char_data		8203706	0					
ANR	8203828	CastTarget	byte * *		8203706	0					
ANR	8203829	UnaryOperationExpression	& char_data		8203706	1					
ANR	8203830	UnaryOperator	&		8203706	0					
ANR	8203831	Identifier	char_data		8203706	1					
ANR	8203832	IfStatement	if ( ! header || ! char_data )		8203706	6					
ANR	8203833	Condition	! header || ! char_data	291:16:10208:10228	8203706	0	True				
ANR	8203834	OrExpression	! header || ! char_data		8203706	0		||			
ANR	8203835	UnaryOperationExpression	! header		8203706	0					
ANR	8203836	UnaryOperator	!		8203706	0					
ANR	8203837	Identifier	header		8203706	1					
ANR	8203838	UnaryOperationExpression	! char_data		8203706	1					
ANR	8203839	UnaryOperator	!		8203706	0					
ANR	8203840	Identifier	char_data		8203706	1					
ANR	8203841	CompoundStatement		22:39:834:834	8203706	1					
ANR	8203842	ReturnStatement	return - 1 ;	292:16:10249:10258	8203706	0	True				
ANR	8203843	UnaryOperationExpression	- 1		8203706	0					
ANR	8203844	UnaryOperator	-		8203706	0					
ANR	8203845	PrimaryExpression	1		8203706	1					
ANR	8203846	IfStatement	if ( pplfont == 0 || pfont == 0 )		8203706	7					
ANR	8203847	Condition	pplfont == 0 || pfont == 0	296:16:10352:10377	8203706	0	True				
ANR	8203848	OrExpression	pplfont == 0 || pfont == 0		8203706	0		||			
ANR	8203849	EqualityExpression	pplfont == 0		8203706	0		==			
ANR	8203850	Identifier	pplfont		8203706	0					
ANR	8203851	PrimaryExpression	0		8203706	1					
ANR	8203852	EqualityExpression	pfont == 0		8203706	1		==			
ANR	8203853	Identifier	pfont		8203706	0					
ANR	8203854	PrimaryExpression	0		8203706	1					
ANR	8203855	ReturnStatement	return - 1 ;	297:16:10396:10405	8203706	1	True				
ANR	8203856	UnaryOperationExpression	- 1		8203706	0					
ANR	8203857	UnaryOperator	-		8203706	0					
ANR	8203858	PrimaryExpression	1		8203706	1					
ANR	8203859	IfStatement	"if ( pl_fill_in_font ( ( gs_font * ) pfont , pplfont , pdir , mem , ""lineprinter_font"" ) < 0 )"		8203706	8					
ANR	8203860	Condition	"pl_fill_in_font ( ( gs_font * ) pfont , pplfont , pdir , mem , ""lineprinter_font"" ) < 0"	298:16:10423:10534	8203706	0	True				
ANR	8203861	RelationalExpression	"pl_fill_in_font ( ( gs_font * ) pfont , pplfont , pdir , mem , ""lineprinter_font"" ) < 0"		8203706	0		<			
ANR	8203862	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , pplfont , pdir , mem , ""lineprinter_font"" )"		8203706	0					
ANR	8203863	Callee	pl_fill_in_font		8203706	0					
ANR	8203864	Identifier	pl_fill_in_font		8203706	0					
ANR	8203865	ArgumentList	( gs_font * ) pfont		8203706	1					
ANR	8203866	Argument	( gs_font * ) pfont		8203706	0					
ANR	8203867	CastExpression	( gs_font * ) pfont		8203706	0					
ANR	8203868	CastTarget	gs_font *		8203706	0					
ANR	8203869	Identifier	pfont		8203706	1					
ANR	8203870	Argument	pplfont		8203706	1					
ANR	8203871	Identifier	pplfont		8203706	0					
ANR	8203872	Argument	pdir		8203706	2					
ANR	8203873	Identifier	pdir		8203706	0					
ANR	8203874	Argument	mem		8203706	3					
ANR	8203875	Identifier	mem		8203706	0					
ANR	8203876	Argument	"""lineprinter_font"""		8203706	4					
ANR	8203877	PrimaryExpression	"""lineprinter_font"""		8203706	0					
ANR	8203878	PrimaryExpression	0		8203706	1					
ANR	8203879	ReturnStatement	return - 1 ;	301:16:10553:10562	8203706	1	True				
ANR	8203880	UnaryOperationExpression	- 1		8203706	0					
ANR	8203881	UnaryOperator	-		8203706	0					
ANR	8203882	PrimaryExpression	1		8203706	1					
ANR	8203883	ExpressionStatement	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"	303:12:10577:10627	8203706	9	True				
ANR	8203884	CallExpression	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"		8203706	0					
ANR	8203885	Callee	pl_fill_in_bitmap_font		8203706	0					
ANR	8203886	Identifier	pl_fill_in_bitmap_font		8203706	0					
ANR	8203887	ArgumentList	pfont		8203706	1					
ANR	8203888	Argument	pfont		8203706	0					
ANR	8203889	Identifier	pfont		8203706	0					
ANR	8203890	Argument	"gs_next_ids ( mem , 1 )"		8203706	1					
ANR	8203891	CallExpression	"gs_next_ids ( mem , 1 )"		8203706	0					
ANR	8203892	Callee	gs_next_ids		8203706	0					
ANR	8203893	Identifier	gs_next_ids		8203706	0					
ANR	8203894	ArgumentList	mem		8203706	1					
ANR	8203895	Argument	mem		8203706	0					
ANR	8203896	Identifier	mem		8203706	0					
ANR	8203897	Argument	1		8203706	1					
ANR	8203898	PrimaryExpression	1		8203706	0					
ANR	8203899	ExpressionStatement	pplfont -> params = resident_table [ i ] . params	304:12:10641:10683	8203706	10	True				
ANR	8203900	AssignmentExpression	pplfont -> params = resident_table [ i ] . params		8203706	0		=			
ANR	8203901	PtrMemberAccess	pplfont -> params		8203706	0					
ANR	8203902	Identifier	pplfont		8203706	0					
ANR	8203903	Identifier	params		8203706	1					
ANR	8203904	MemberAccess	resident_table [ i ] . params		8203706	1					
ANR	8203905	ArrayIndexing	resident_table [ i ]		8203706	0					
ANR	8203906	Identifier	resident_table		8203706	0					
ANR	8203907	Identifier	i		8203706	1					
ANR	8203908	Identifier	params		8203706	1					
ANR	8203909	ExpressionStatement	"memcpy ( pplfont -> character_complement , resident_table [ i ] . character_complement , 8 )"	305:12:10697:10796	8203706	11	True				
ANR	8203910	CallExpression	"memcpy ( pplfont -> character_complement , resident_table [ i ] . character_complement , 8 )"		8203706	0					
ANR	8203911	Callee	memcpy		8203706	0					
ANR	8203912	Identifier	memcpy		8203706	0					
ANR	8203913	ArgumentList	pplfont -> character_complement		8203706	1					
ANR	8203914	Argument	pplfont -> character_complement		8203706	0					
ANR	8203915	PtrMemberAccess	pplfont -> character_complement		8203706	0					
ANR	8203916	Identifier	pplfont		8203706	0					
ANR	8203917	Identifier	character_complement		8203706	1					
ANR	8203918	Argument	resident_table [ i ] . character_complement		8203706	1					
ANR	8203919	MemberAccess	resident_table [ i ] . character_complement		8203706	0					
ANR	8203920	ArrayIndexing	resident_table [ i ]		8203706	0					
ANR	8203921	Identifier	resident_table		8203706	0					
ANR	8203922	Identifier	i		8203706	1					
ANR	8203923	Identifier	character_complement		8203706	1					
ANR	8203924	Argument	8		8203706	2					
ANR	8203925	PrimaryExpression	8		8203706	0					
ANR	8203926	IfStatement	if ( use_unicode_names_for_keys )		8203706	12					
ANR	8203927	Condition	use_unicode_names_for_keys	308:16:10815:10840	8203706	0	True				
ANR	8203928	Identifier	use_unicode_names_for_keys		8203706	0					
ANR	8203929	ExpressionStatement	"code = pl_dict_put ( pfontdict , ( const byte * ) resident_table [ i ] . unicode_fontname , 32 , pplfont )"	309:16:10859:11007	8203706	1	True				
ANR	8203930	AssignmentExpression	"code = pl_dict_put ( pfontdict , ( const byte * ) resident_table [ i ] . unicode_fontname , 32 , pplfont )"		8203706	0		=			
ANR	8203931	Identifier	code		8203706	0					
ANR	8203932	CallExpression	"pl_dict_put ( pfontdict , ( const byte * ) resident_table [ i ] . unicode_fontname , 32 , pplfont )"		8203706	1					
ANR	8203933	Callee	pl_dict_put		8203706	0					
ANR	8203934	Identifier	pl_dict_put		8203706	0					
ANR	8203935	ArgumentList	pfontdict		8203706	1					
ANR	8203936	Argument	pfontdict		8203706	0					
ANR	8203937	Identifier	pfontdict		8203706	0					
ANR	8203938	Argument	( const byte * ) resident_table [ i ] . unicode_fontname		8203706	1					
ANR	8203939	CastExpression	( const byte * ) resident_table [ i ] . unicode_fontname		8203706	0					
ANR	8203940	CastTarget	const byte *		8203706	0					
ANR	8203941	MemberAccess	resident_table [ i ] . unicode_fontname		8203706	1					
ANR	8203942	ArrayIndexing	resident_table [ i ]		8203706	0					
ANR	8203943	Identifier	resident_table		8203706	0					
ANR	8203944	Identifier	i		8203706	1					
ANR	8203945	Identifier	unicode_fontname		8203706	1					
ANR	8203946	Argument	32		8203706	2					
ANR	8203947	PrimaryExpression	32		8203706	0					
ANR	8203948	Argument	pplfont		8203706	3					
ANR	8203949	Identifier	pplfont		8203706	0					
ANR	8203950	ElseStatement	else		8203706	0					
ANR	8203951	CompoundStatement		44:16:1647:1658	8203706	0					
ANR	8203952	IdentifierDeclStatement	byte key [ 3 ] ;	313:16:11044:11055	8203706	0	True				
ANR	8203953	IdentifierDecl	key [ 3 ]		8203706	0					
ANR	8203954	IdentifierDeclType	byte [ 3 ]		8203706	0					
ANR	8203955	Identifier	key		8203706	1					
ANR	8203956	PrimaryExpression	3		8203706	2					
ANR	8203957	ExpressionStatement	key [ 2 ] = ( byte ) i	315:16:11074:11091	8203706	1	True				
ANR	8203958	AssignmentExpression	key [ 2 ] = ( byte ) i		8203706	0		=			
ANR	8203959	ArrayIndexing	key [ 2 ]		8203706	0					
ANR	8203960	Identifier	key		8203706	0					
ANR	8203961	PrimaryExpression	2		8203706	1					
ANR	8203962	CastExpression	( byte ) i		8203706	1					
ANR	8203963	CastTarget	byte		8203706	0					
ANR	8203964	Identifier	i		8203706	1					
ANR	8203965	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	316:16:11109:11128	8203706	2	True				
ANR	8203966	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8203706	0		=			
ANR	8203967	ArrayIndexing	key [ 0 ]		8203706	0					
ANR	8203968	Identifier	key		8203706	0					
ANR	8203969	PrimaryExpression	0		8203706	1					
ANR	8203970	AssignmentExpression	key [ 1 ] = 0		8203706	1		=			
ANR	8203971	ArrayIndexing	key [ 1 ]		8203706	0					
ANR	8203972	Identifier	key		8203706	0					
ANR	8203973	PrimaryExpression	1		8203706	1					
ANR	8203974	PrimaryExpression	0		8203706	1					
ANR	8203975	ExpressionStatement	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"	317:16:11146:11202	8203706	3	True				
ANR	8203976	AssignmentExpression	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"		8203706	0		=			
ANR	8203977	Identifier	code		8203706	0					
ANR	8203978	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , pplfont )"		8203706	1					
ANR	8203979	Callee	pl_dict_put		8203706	0					
ANR	8203980	Identifier	pl_dict_put		8203706	0					
ANR	8203981	ArgumentList	pfontdict		8203706	1					
ANR	8203982	Argument	pfontdict		8203706	0					
ANR	8203983	Identifier	pfontdict		8203706	0					
ANR	8203984	Argument	key		8203706	1					
ANR	8203985	Identifier	key		8203706	0					
ANR	8203986	Argument	sizeof ( key )		8203706	2					
ANR	8203987	SizeofExpression	sizeof ( key )		8203706	0					
ANR	8203988	Sizeof	sizeof		8203706	0					
ANR	8203989	SizeofOperand	key		8203706	1					
ANR	8203990	Argument	pplfont		8203706	3					
ANR	8203991	Identifier	pplfont		8203706	0					
ANR	8203992	IfStatement	if ( code < 0 )		8203706	13					
ANR	8203993	Condition	code < 0	319:16:11234:11241	8203706	0	True				
ANR	8203994	RelationalExpression	code < 0		8203706	0		<			
ANR	8203995	Identifier	code		8203706	0					
ANR	8203996	PrimaryExpression	0		8203706	1					
ANR	8203997	ReturnStatement	return code ;	320:16:11260:11271	8203706	1	True				
ANR	8203998	Identifier	code		8203706	0					
ANR	8203999	ExpressionStatement	pplfont -> storage = storage	321:12:11285:11311	8203706	14	True				
ANR	8204000	AssignmentExpression	pplfont -> storage = storage		8203706	0		=			
ANR	8204001	PtrMemberAccess	pplfont -> storage		8203706	0					
ANR	8204002	Identifier	pplfont		8203706	0					
ANR	8204003	Identifier	storage		8203706	1					
ANR	8204004	Identifier	storage		8203706	1					
ANR	8204005	ExpressionStatement	pplfont -> data_are_permanent = true	322:12:11358:11392	8203706	15	True				
ANR	8204006	AssignmentExpression	pplfont -> data_are_permanent = true		8203706	0		=			
ANR	8204007	PtrMemberAccess	pplfont -> data_are_permanent		8203706	0					
ANR	8204008	Identifier	pplfont		8203706	0					
ANR	8204009	Identifier	data_are_permanent		8203706	1					
ANR	8204010	Identifier	true		8203706	1					
ANR	8204011	ExpressionStatement	pplfont -> header = ( byte * ) header	323:12:11406:11439	8203706	16	True				
ANR	8204012	AssignmentExpression	pplfont -> header = ( byte * ) header		8203706	0		=			
ANR	8204013	PtrMemberAccess	pplfont -> header		8203706	0					
ANR	8204014	Identifier	pplfont		8203706	0					
ANR	8204015	Identifier	header		8203706	1					
ANR	8204016	CastExpression	( byte * ) header		8203706	1					
ANR	8204017	CastTarget	byte *		8203706	0					
ANR	8204018	Identifier	header		8203706	1					
ANR	8204019	ExpressionStatement	pplfont -> font_type = plft_8bit_printable	324:12:11453:11493	8203706	17	True				
ANR	8204020	AssignmentExpression	pplfont -> font_type = plft_8bit_printable		8203706	0		=			
ANR	8204021	PtrMemberAccess	pplfont -> font_type		8203706	0					
ANR	8204022	Identifier	pplfont		8203706	0					
ANR	8204023	Identifier	font_type		8203706	1					
ANR	8204024	Identifier	plft_8bit_printable		8203706	1					
ANR	8204025	ExpressionStatement	pplfont -> scaling_technology = plfst_bitmap	325:12:11507:11549	8203706	18	True				
ANR	8204026	AssignmentExpression	pplfont -> scaling_technology = plfst_bitmap		8203706	0		=			
ANR	8204027	PtrMemberAccess	pplfont -> scaling_technology		8203706	0					
ANR	8204028	Identifier	pplfont		8203706	0					
ANR	8204029	Identifier	scaling_technology		8203706	1					
ANR	8204030	Identifier	plfst_bitmap		8203706	1					
ANR	8204031	ExpressionStatement	pplfont -> is_xl_format = false	326:12:11563:11592	8203706	19	True				
ANR	8204032	AssignmentExpression	pplfont -> is_xl_format = false		8203706	0		=			
ANR	8204033	PtrMemberAccess	pplfont -> is_xl_format		8203706	0					
ANR	8204034	Identifier	pplfont		8203706	0					
ANR	8204035	Identifier	is_xl_format		8203706	1					
ANR	8204036	Identifier	false		8203706	1					
ANR	8204037	ExpressionStatement	pplfont -> resolution . x = pplfont -> resolution . y = 300	327:12:11606:11657	8203706	20	True				
ANR	8204038	AssignmentExpression	pplfont -> resolution . x = pplfont -> resolution . y = 300		8203706	0		=			
ANR	8204039	MemberAccess	pplfont -> resolution . x		8203706	0					
ANR	8204040	PtrMemberAccess	pplfont -> resolution		8203706	0					
ANR	8204041	Identifier	pplfont		8203706	0					
ANR	8204042	Identifier	resolution		8203706	1					
ANR	8204043	Identifier	x		8203706	1					
ANR	8204044	AssignmentExpression	pplfont -> resolution . y = 300		8203706	1		=			
ANR	8204045	MemberAccess	pplfont -> resolution . y		8203706	0					
ANR	8204046	PtrMemberAccess	pplfont -> resolution		8203706	0					
ANR	8204047	Identifier	pplfont		8203706	0					
ANR	8204048	Identifier	resolution		8203706	1					
ANR	8204049	Identifier	y		8203706	1					
ANR	8204050	PrimaryExpression	300		8203706	1					
ANR	8204051	ExpressionStatement	"code = pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"	329:12:11672:11818	8203706	21	True				
ANR	8204052	AssignmentExpression	"code = pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"		8203706	0		=			
ANR	8204053	Identifier	code		8203706	0					
ANR	8204054	CallExpression	"pl_font_alloc_glyph_table ( pplfont , 256 , mem , ""pl_load_ufst_lineprinter pplfont (glyph table)"" )"		8203706	1					
ANR	8204055	Callee	pl_font_alloc_glyph_table		8203706	0					
ANR	8204056	Identifier	pl_font_alloc_glyph_table		8203706	0					
ANR	8204057	ArgumentList	pplfont		8203706	1					
ANR	8204058	Argument	pplfont		8203706	0					
ANR	8204059	Identifier	pplfont		8203706	0					
ANR	8204060	Argument	256		8203706	1					
ANR	8204061	PrimaryExpression	256		8203706	0					
ANR	8204062	Argument	mem		8203706	2					
ANR	8204063	Identifier	mem		8203706	0					
ANR	8204064	Argument	"""pl_load_ufst_lineprinter pplfont (glyph table)"""		8203706	3					
ANR	8204065	PrimaryExpression	"""pl_load_ufst_lineprinter pplfont (glyph table)"""		8203706	0					
ANR	8204066	IfStatement	if ( code < 0 )		8203706	22					
ANR	8204067	Condition	code < 0	331:16:11836:11843	8203706	0	True				
ANR	8204068	RelationalExpression	code < 0		8203706	0		<			
ANR	8204069	Identifier	code		8203706	0					
ANR	8204070	PrimaryExpression	0		8203706	1					
ANR	8204071	ReturnStatement	return code ;	332:16:11862:11873	8203706	1	True				
ANR	8204072	Identifier	code		8203706	0					
ANR	8204073	WhileStatement	while ( 1 )		8203706	23					
ANR	8204074	Condition	1	334:19:11895:11895	8203706	0	True				
ANR	8204075	PrimaryExpression	1		8203706	0					
ANR	8204076	CompoundStatement		73:16:2853:2865	8203706	1					
ANR	8204077	IdentifierDeclStatement	uint width = pl_get_uint16 ( char_data + 12 ) ;	336:16:11917:11959	8203706	0	True				
ANR	8204078	IdentifierDecl	width = pl_get_uint16 ( char_data + 12 )		8203706	0					
ANR	8204079	IdentifierDeclType	uint		8203706	0					
ANR	8204080	Identifier	width		8203706	1					
ANR	8204081	AssignmentExpression	width = pl_get_uint16 ( char_data + 12 )		8203706	2		=			
ANR	8204082	Identifier	width		8203706	0					
ANR	8204083	CallExpression	pl_get_uint16 ( char_data + 12 )		8203706	1					
ANR	8204084	Callee	pl_get_uint16		8203706	0					
ANR	8204085	Identifier	pl_get_uint16		8203706	0					
ANR	8204086	ArgumentList	char_data + 12		8203706	1					
ANR	8204087	Argument	char_data + 12		8203706	0					
ANR	8204088	AdditiveExpression	char_data + 12		8203706	0		+			
ANR	8204089	Identifier	char_data		8203706	0					
ANR	8204090	PrimaryExpression	12		8203706	1					
ANR	8204091	IdentifierDeclStatement	uint height = pl_get_uint16 ( char_data + 14 ) ;	337:16:11977:12020	8203706	1	True				
ANR	8204092	IdentifierDecl	height = pl_get_uint16 ( char_data + 14 )		8203706	0					
ANR	8204093	IdentifierDeclType	uint		8203706	0					
ANR	8204094	Identifier	height		8203706	1					
ANR	8204095	AssignmentExpression	height = pl_get_uint16 ( char_data + 14 )		8203706	2		=			
ANR	8204096	Identifier	height		8203706	0					
ANR	8204097	CallExpression	pl_get_uint16 ( char_data + 14 )		8203706	1					
ANR	8204098	Callee	pl_get_uint16		8203706	0					
ANR	8204099	Identifier	pl_get_uint16		8203706	0					
ANR	8204100	ArgumentList	char_data + 14		8203706	1					
ANR	8204101	Argument	char_data + 14		8203706	0					
ANR	8204102	AdditiveExpression	char_data + 14		8203706	0		+			
ANR	8204103	Identifier	char_data		8203706	0					
ANR	8204104	PrimaryExpression	14		8203706	1					
ANR	8204105	IdentifierDeclStatement	uint ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height ) ;	338:16:12038:12131	8203706	2	True				
ANR	8204106	IdentifierDecl	ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8203706	0					
ANR	8204107	IdentifierDeclType	uint		8203706	0					
ANR	8204108	Identifier	ccode_plus_header_plus_data		8203706	1					
ANR	8204109	AssignmentExpression	ccode_plus_header_plus_data = 2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8203706	2		=			
ANR	8204110	Identifier	ccode_plus_header_plus_data		8203706	0					
ANR	8204111	AdditiveExpression	2 + 16 + ( ( ( width + 7 ) >> 3 ) * height )		8203706	1		+			
ANR	8204112	PrimaryExpression	2		8203706	0					
ANR	8204113	AdditiveExpression	16 + ( ( ( width + 7 ) >> 3 ) * height )		8203706	1		+			
ANR	8204114	PrimaryExpression	16		8203706	0					
ANR	8204115	MultiplicativeExpression	( ( width + 7 ) >> 3 ) * height		8203706	1		*			
ANR	8204116	ShiftExpression	( width + 7 ) >> 3		8203706	0		>>			
ANR	8204117	AdditiveExpression	width + 7		8203706	0		+			
ANR	8204118	Identifier	width		8203706	0					
ANR	8204119	PrimaryExpression	7		8203706	1					
ANR	8204120	PrimaryExpression	3		8203706	1					
ANR	8204121	Identifier	height		8203706	1					
ANR	8204122	IdentifierDeclStatement	"uint ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 ) ;"	340:16:12149:12232	8203706	3	True				
ANR	8204123	IdentifierDecl	"ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8203706	0					
ANR	8204124	IdentifierDeclType	uint		8203706	0					
ANR	8204125	Identifier	ucode		8203706	1					
ANR	8204126	AssignmentExpression	"ucode = pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8203706	2		=			
ANR	8204127	Identifier	ucode		8203706	0					
ANR	8204128	CallExpression	"pl_map_MSL_to_Unicode ( pl_get_uint16 ( char_data ) , 0 )"		8203706	1					
ANR	8204129	Callee	pl_map_MSL_to_Unicode		8203706	0					
ANR	8204130	Identifier	pl_map_MSL_to_Unicode		8203706	0					
ANR	8204131	ArgumentList	pl_get_uint16 ( char_data )		8203706	1					
ANR	8204132	Argument	pl_get_uint16 ( char_data )		8203706	0					
ANR	8204133	CallExpression	pl_get_uint16 ( char_data )		8203706	0					
ANR	8204134	Callee	pl_get_uint16		8203706	0					
ANR	8204135	Identifier	pl_get_uint16		8203706	0					
ANR	8204136	ArgumentList	char_data		8203706	1					
ANR	8204137	Argument	char_data		8203706	0					
ANR	8204138	Identifier	char_data		8203706	0					
ANR	8204139	Argument	0		8203706	1					
ANR	8204140	PrimaryExpression	0		8203706	0					
ANR	8204141	IdentifierDeclStatement	int code = 0 ;	342:16:12250:12262	8203706	4	True				
ANR	8204142	IdentifierDecl	code = 0		8203706	0					
ANR	8204143	IdentifierDeclType	int		8203706	0					
ANR	8204144	Identifier	code		8203706	1					
ANR	8204145	AssignmentExpression	code = 0		8203706	2		=			
ANR	8204146	Identifier	code		8203706	0					
ANR	8204147	PrimaryExpression	0		8203706	1					
ANR	8204148	IfStatement	if ( ucode != 0xffff )		8203706	5					
ANR	8204149	Condition	ucode != 0xffff	346:20:12384:12398	8203706	0	True				
ANR	8204150	EqualityExpression	ucode != 0xffff		8203706	0		!=			
ANR	8204151	Identifier	ucode		8203706	0					
ANR	8204152	PrimaryExpression	0xffff		8203706	1					
ANR	8204153	ExpressionStatement	"code = pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"	347:20:12421:12505	8203706	1	True				
ANR	8204154	AssignmentExpression	"code = pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"		8203706	0		=			
ANR	8204155	Identifier	code		8203706	0					
ANR	8204156	CallExpression	"pl_font_add_glyph ( pplfont , ucode , char_data + 2 , ccode_plus_header_plus_data )"		8203706	1					
ANR	8204157	Callee	pl_font_add_glyph		8203706	0					
ANR	8204158	Identifier	pl_font_add_glyph		8203706	0					
ANR	8204159	ArgumentList	pplfont		8203706	1					
ANR	8204160	Argument	pplfont		8203706	0					
ANR	8204161	Identifier	pplfont		8203706	0					
ANR	8204162	Argument	ucode		8203706	1					
ANR	8204163	Identifier	ucode		8203706	0					
ANR	8204164	Argument	char_data + 2		8203706	2					
ANR	8204165	AdditiveExpression	char_data + 2		8203706	0		+			
ANR	8204166	Identifier	char_data		8203706	0					
ANR	8204167	PrimaryExpression	2		8203706	1					
ANR	8204168	Argument	ccode_plus_header_plus_data		8203706	3					
ANR	8204169	Identifier	ccode_plus_header_plus_data		8203706	0					
ANR	8204170	IfStatement	if ( code < 0 )		8203706	6					
ANR	8204171	Condition	code < 0	349:20:12528:12535	8203706	0	True				
ANR	8204172	RelationalExpression	code < 0		8203706	0		<			
ANR	8204173	Identifier	code		8203706	0					
ANR	8204174	PrimaryExpression	0		8203706	1					
ANR	8204175	ReturnStatement	return - 1 ;	351:20:12601:12610	8203706	1	True				
ANR	8204176	UnaryOperationExpression	- 1		8203706	0					
ANR	8204177	UnaryOperator	-		8203706	0					
ANR	8204178	PrimaryExpression	1		8203706	1					
ANR	8204179	ExpressionStatement	char_data += ccode_plus_header_plus_data	353:16:12711:12751	8203706	7	True				
ANR	8204180	AssignmentExpression	char_data += ccode_plus_header_plus_data		8203706	0		+=			
ANR	8204181	Identifier	char_data		8203706	0					
ANR	8204182	Identifier	ccode_plus_header_plus_data		8203706	1					
ANR	8204183	IfStatement	if ( pl_get_uint16 ( char_data ) == 0 )		8203706	8					
ANR	8204184	Condition	pl_get_uint16 ( char_data ) == 0	356:20:12824:12852	8203706	0	True				
ANR	8204185	EqualityExpression	pl_get_uint16 ( char_data ) == 0		8203706	0		==			
ANR	8204186	CallExpression	pl_get_uint16 ( char_data )		8203706	0					
ANR	8204187	Callee	pl_get_uint16		8203706	0					
ANR	8204188	Identifier	pl_get_uint16		8203706	0					
ANR	8204189	ArgumentList	char_data		8203706	1					
ANR	8204190	Argument	char_data		8203706	0					
ANR	8204191	Identifier	char_data		8203706	0					
ANR	8204192	PrimaryExpression	0		8203706	1					
ANR	8204193	BreakStatement	break ;	357:20:12875:12880	8203706	1	True				
ANR	8204194	ExpressionStatement	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"	359:12:12908:12953	8203706	24	True				
ANR	8204195	AssignmentExpression	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"		8203706	0		=			
ANR	8204196	Identifier	code		8203706	0					
ANR	8204197	CallExpression	"gs_definefont ( pdir , ( gs_font * ) pfont )"		8203706	1					
ANR	8204198	Callee	gs_definefont		8203706	0					
ANR	8204199	Identifier	gs_definefont		8203706	0					
ANR	8204200	ArgumentList	pdir		8203706	1					
ANR	8204201	Argument	pdir		8203706	0					
ANR	8204202	Identifier	pdir		8203706	0					
ANR	8204203	Argument	( gs_font * ) pfont		8203706	1					
ANR	8204204	CastExpression	( gs_font * ) pfont		8203706	0					
ANR	8204205	CastTarget	gs_font *		8203706	0					
ANR	8204206	Identifier	pfont		8203706	1					
ANR	8204207	IfStatement	if ( code < 0 )		8203706	25					
ANR	8204208	Condition	code < 0	360:16:12971:12978	8203706	0	True				
ANR	8204209	RelationalExpression	code < 0		8203706	0		<			
ANR	8204210	Identifier	code		8203706	0					
ANR	8204211	PrimaryExpression	0		8203706	1					
ANR	8204212	ReturnStatement	return - 1 ;	362:16:13036:13045	8203706	1	True				
ANR	8204213	UnaryOperationExpression	- 1		8203706	0					
ANR	8204214	UnaryOperator	-		8203706	0					
ANR	8204215	PrimaryExpression	1		8203706	1					
ANR	8204216	ReturnStatement	return 0 ;	365:4:13067:13075	8203706	14	True				
ANR	8204217	PrimaryExpression	0		8203706	0					
ANR	8204218	Statement	undef	366:1:13078:13082	8203706	15	True				
ANR	8204219	Statement	fontnames	366:7:13084:13092	8203706	16	True				
ANR	8204220	ReturnType	int		8203706	1					
ANR	8204221	Identifier	pl_load_ufst_lineprinter		8203706	2					
ANR	8204222	ParameterList	"gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8203706	3					
ANR	8204223	Parameter	gs_memory_t * mem	267:25:9238:9254	8203706	0	True				
ANR	8204224	ParameterType	gs_memory_t *		8203706	0					
ANR	8204225	Identifier	mem		8203706	1					
ANR	8204226	Parameter	pl_dict_t * pfontdict	267:44:9257:9277	8203706	1	True				
ANR	8204227	ParameterType	pl_dict_t *		8203706	0					
ANR	8204228	Identifier	pfontdict		8203706	1					
ANR	8204229	Parameter	gs_font_dir * pdir	268:25:9305:9322	8203706	2	True				
ANR	8204230	ParameterType	gs_font_dir *		8203706	0					
ANR	8204231	Identifier	pdir		8203706	1					
ANR	8204232	Parameter	int storage	268:45:9325:9335	8203706	3	True				
ANR	8204233	ParameterType	int		8203706	0					
ANR	8204234	Identifier	storage		8203706	1					
ANR	8204235	Parameter	bool use_unicode_names_for_keys	269:25:9363:9393	8203706	4	True				
ANR	8204236	ParameterType	bool		8203706	0					
ANR	8204237	Identifier	use_unicode_names_for_keys		8203706	1					
ANR	8204238	CFGEntryNode	ENTRY		8203706		True				
ANR	8204239	CFGExitNode	EXIT		8203706		True				
ANR	8204240	Symbol	pplfont -> data_are_permanent		8203706						
ANR	8204241	Symbol	resident_table [ i ] . unicode_fontname		8203706						
ANR	8204242	Symbol	pl_built_in_resident_font_table_count		8203706						
ANR	8204243	Symbol	* resident_table		8203706						
ANR	8204244	Symbol	* key		8203706						
ANR	8204245	Symbol	gs_font_base		8203706						
ANR	8204246	Symbol	gs_next_ids		8203706						
ANR	8204247	Symbol	gs_definefont		8203706						
ANR	8204248	Symbol	strlen		8203706						
ANR	8204249	Symbol	pplfont -> is_xl_format		8203706						
ANR	8204250	Symbol	resident_table [ i ] . params		8203706						
ANR	8204251	Symbol	& st_gs_font_base		8203706						
ANR	8204252	Symbol	ccode_plus_header_plus_data		8203706						
ANR	8204253	Symbol	pplfont -> scaling_technology		8203706						
ANR	8204254	Symbol	resident_table		8203706						
ANR	8204255	Symbol	* pplfont		8203706						
ANR	8204256	Symbol	height		8203706						
ANR	8204257	Symbol	NULL		8203706						
ANR	8204258	Symbol	pplfont -> header		8203706						
ANR	8204259	Symbol	pplfont -> resolution . y		8203706						
ANR	8204260	Symbol	pplfont -> resolution . x		8203706						
ANR	8204261	Symbol	pdir		8203706						
ANR	8204262	Symbol	pplfont -> resolution		8203706						
ANR	8204263	Symbol	plft_8bit_printable		8203706						
ANR	8204264	Symbol	& header		8203706						
ANR	8204265	Symbol	pfontdict		8203706						
ANR	8204266	Symbol	pplfont -> params		8203706						
ANR	8204267	Symbol	true		8203706						
ANR	8204268	Symbol	pl_font_add_glyph		8203706						
ANR	8204269	Symbol	header		8203706						
ANR	8204270	Symbol	& char_data		8203706						
ANR	8204271	Symbol	pl_dict_put		8203706						
ANR	8204272	Symbol	pplfont -> font_type		8203706						
ANR	8204273	Symbol	pl_alloc_font		8203706						
ANR	8204274	Symbol	pplfont		8203706						
ANR	8204275	Symbol	code		8203706						
ANR	8204276	Symbol	plfst_bitmap		8203706						
ANR	8204277	Symbol	gs_alloc_struct		8203706						
ANR	8204278	Symbol	resident_table [ i ] . params . typeface_family		8203706						
ANR	8204279	Symbol	pl_map_MSL_to_Unicode		8203706						
ANR	8204280	Symbol	resident_table [ i ] . character_complement		8203706						
ANR	8204281	Symbol	storage		8203706						
ANR	8204282	Symbol	resident_table [ i ] . full_font_name		8203706						
ANR	8204283	Symbol	pplfont -> character_complement		8203706						
ANR	8204284	Symbol	mem		8203706						
ANR	8204285	Symbol	pl_font_alloc_glyph_table		8203706						
ANR	8204286	Symbol	key		8203706						
ANR	8204287	Symbol	pl_get_uint16		8203706						
ANR	8204288	Symbol	pfont		8203706						
ANR	8204289	Symbol	false		8203706						
ANR	8204290	Symbol	i		8203706						
ANR	8204291	Symbol	pplfont -> storage		8203706						
ANR	8204292	Symbol	use_unicode_names_for_keys		8203706						
ANR	8204293	Symbol	char_data		8203706						
ANR	8204294	Symbol	pl_fill_in_font		8203706						
ANR	8204295	Symbol	* i		8203706						
ANR	8204296	Symbol	width		8203706						
ANR	8204297	Symbol	ucode		8203706						
ANR	8204298	Function	pl_load_built_in_mtype_fonts	369:0:13097:21117							
ANR	8204299	FunctionDef	"pl_load_built_in_mtype_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8204298	0					
ANR	8204300	CompoundStatement		373:0:13325:21117	8204298	0					
ANR	8204301	Statement	define	374:1:13328:13333	8204298	0	True				
ANR	8204302	Statement	fontnames	374:8:13335:13343	8204298	1	True				
ANR	8204303	Statement	(	374:17:13344:13344	8204298	2	True				
ANR	8204304	Statement	agfascreenfontname	374:18:13345:13362	8204298	3	True				
ANR	8204305	Statement	","	374:36:13363:13363	8204298	4	True				
ANR	8204306	Statement	agfaname	374:38:13365:13372	8204298	5	True				
ANR	8204307	Statement	","	374:46:13373:13373	8204298	6	True				
ANR	8204308	Statement	urwname	374:48:13375:13381	8204298	7	True				
ANR	8204309	Statement	)	374:55:13382:13382	8204298	8	True				
ANR	8204310	Statement	agfaname	374:57:13384:13391	8204298	9	True				
ANR	8204311	Statement	include	375:1:13394:13400	8204298	10	True				
ANR	8204312	Statement	"""plftable.h"""	375:9:13402:13413	8204298	11	True				
ANR	8204313	IdentifierDeclStatement	"int i , k ;"	377:4:13420:13428	8204298	12	True				
ANR	8204314	IdentifierDecl	i		8204298	0					
ANR	8204315	IdentifierDeclType	int		8204298	0					
ANR	8204316	Identifier	i		8204298	1					
ANR	8204317	IdentifierDecl	k		8204298	1					
ANR	8204318	IdentifierDeclType	int		8204298	0					
ANR	8204319	Identifier	k		8204298	1					
ANR	8204320	IdentifierDeclStatement	short status = 0 ;	378:4:13434:13450	8204298	13	True				
ANR	8204321	IdentifierDecl	status = 0		8204298	0					
ANR	8204322	IdentifierDeclType	short		8204298	0					
ANR	8204323	Identifier	status		8204298	1					
ANR	8204324	AssignmentExpression	status = 0		8204298	2		=			
ANR	8204325	Identifier	status		8204298	0					
ANR	8204326	PrimaryExpression	0		8204298	1					
ANR	8204327	IdentifierDeclStatement	int bSize ;	379:4:13456:13465	8204298	14	True				
ANR	8204328	IdentifierDecl	bSize		8204298	0					
ANR	8204329	IdentifierDeclType	int		8204298	0					
ANR	8204330	Identifier	bSize		8204298	1					
ANR	8204331	IdentifierDeclStatement	byte key [ 3 ] ;	380:4:13471:13482	8204298	15	True				
ANR	8204332	IdentifierDecl	key [ 3 ]		8204298	0					
ANR	8204333	IdentifierDeclType	byte [ 3 ]		8204298	0					
ANR	8204334	Identifier	key		8204298	1					
ANR	8204335	PrimaryExpression	3		8204298	2					
ANR	8204336	IdentifierDeclStatement	char pthnm [ 1024 ] ;	381:4:13488:13504	8204298	16	True				
ANR	8204337	IdentifierDecl	pthnm [ 1024 ]		8204298	0					
ANR	8204338	IdentifierDeclType	char [ 1024 ]		8204298	0					
ANR	8204339	Identifier	pthnm		8204298	1					
ANR	8204340	PrimaryExpression	1024		8204298	2					
ANR	8204341	IdentifierDeclStatement	char * ufst_root_dir ;	382:4:13510:13529	8204298	17	True				
ANR	8204342	IdentifierDecl	* ufst_root_dir		8204298	0					
ANR	8204343	IdentifierDeclType	char *		8204298	0					
ANR	8204344	Identifier	ufst_root_dir		8204298	1					
ANR	8204345	IdentifierDeclStatement	char * fco ;	383:4:13535:13544	8204298	18	True				
ANR	8204346	IdentifierDecl	* fco		8204298	0					
ANR	8204347	IdentifierDeclType	char *		8204298	0					
ANR	8204348	Identifier	fco		8204298	1					
ANR	8204349	IdentifierDeclStatement	"char * fco_start , * fco_lim ;"	384:4:13550:13575	8204298	19	True				
ANR	8204350	IdentifierDecl	* fco_start		8204298	0					
ANR	8204351	IdentifierDeclType	char *		8204298	0					
ANR	8204352	Identifier	fco_start		8204298	1					
ANR	8204353	IdentifierDecl	* fco_lim		8204298	1					
ANR	8204354	IdentifierDeclType	char *		8204298	0					
ANR	8204355	Identifier	fco_lim		8204298	1					
ANR	8204356	IdentifierDeclStatement	pl_font_t * plfont = NULL ;	385:4:13581:13605	8204298	20	True				
ANR	8204357	IdentifierDecl	* plfont = NULL		8204298	0					
ANR	8204358	IdentifierDeclType	pl_font_t *		8204298	0					
ANR	8204359	Identifier	plfont		8204298	1					
ANR	8204360	AssignmentExpression	* plfont = NULL		8204298	2		=			
ANR	8204361	Identifier	NULL		8204298	0					
ANR	8204362	Identifier	NULL		8204298	1					
ANR	8204363	IdentifierDeclStatement	gs_font * pfont = NULL ;	386:4:13611:13632	8204298	21	True				
ANR	8204364	IdentifierDecl	* pfont = NULL		8204298	0					
ANR	8204365	IdentifierDeclType	gs_font *		8204298	0					
ANR	8204366	Identifier	pfont		8204298	1					
ANR	8204367	AssignmentExpression	* pfont = NULL		8204298	2		=			
ANR	8204368	Identifier	NULL		8204298	0					
ANR	8204369	Identifier	NULL		8204298	1					
ANR	8204370	IdentifierDeclStatement	gs_font_base * pbfont ;	387:4:13638:13658	8204298	22	True				
ANR	8204371	IdentifierDecl	* pbfont		8204298	0					
ANR	8204372	IdentifierDeclType	gs_font_base *		8204298	0					
ANR	8204373	Identifier	pbfont		8204298	1					
ANR	8204374	ExpressionStatement	( void ) pl_built_in_resident_font_table_count	389:4:13665:13708	8204298	23	True				
ANR	8204375	CastExpression	( void ) pl_built_in_resident_font_table_count		8204298	0					
ANR	8204376	CastTarget	void		8204298	0					
ANR	8204377	Identifier	pl_built_in_resident_font_table_count		8204298	1					
ANR	8204378	IfStatement	"if ( pl_dict_length ( pfontdict , true ) > 0 )"		8204298	24					
ANR	8204379	Condition	"pl_dict_length ( pfontdict , true ) > 0"	392:8:13761:13795	8204298	0	True				
ANR	8204380	RelationalExpression	"pl_dict_length ( pfontdict , true ) > 0"		8204298	0		>			
ANR	8204381	CallExpression	"pl_dict_length ( pfontdict , true )"		8204298	0					
ANR	8204382	Callee	pl_dict_length		8204298	0					
ANR	8204383	Identifier	pl_dict_length		8204298	0					
ANR	8204384	ArgumentList	pfontdict		8204298	1					
ANR	8204385	Argument	pfontdict		8204298	0					
ANR	8204386	Identifier	pfontdict		8204298	0					
ANR	8204387	Argument	true		8204298	1					
ANR	8204388	Identifier	true		8204298	0					
ANR	8204389	PrimaryExpression	0		8204298	1					
ANR	8204390	ReturnStatement	return 1 ;	393:8:13806:13814	8204298	1	True				
ANR	8204391	PrimaryExpression	1		8204298	0					
ANR	8204392	IfStatement	if ( ! pl_fapi_ufst_available ( mem ) )		8204298	25					
ANR	8204393	Condition	! pl_fapi_ufst_available ( mem )	395:8:13825:13852	8204298	0	True				
ANR	8204394	UnaryOperationExpression	! pl_fapi_ufst_available ( mem )		8204298	0					
ANR	8204395	UnaryOperator	!		8204298	0					
ANR	8204396	CallExpression	pl_fapi_ufst_available ( mem )		8204298	1					
ANR	8204397	Callee	pl_fapi_ufst_available		8204298	0					
ANR	8204398	Identifier	pl_fapi_ufst_available		8204298	0					
ANR	8204399	ArgumentList	mem		8204298	1					
ANR	8204400	Argument	mem		8204298	0					
ANR	8204401	Identifier	mem		8204298	0					
ANR	8204402	CompoundStatement		23:38:529:529	8204298	1					
ANR	8204403	ReturnStatement	return ( 0 ) ;	396:8:13865:13875	8204298	0	True				
ANR	8204404	PrimaryExpression	0		8204298	0					
ANR	8204405	ExpressionStatement	ufst_root_dir = ( char * ) pl_fapi_ufst_get_font_dir ( mem )	407:4:14131:14185	8204298	26	True				
ANR	8204406	AssignmentExpression	ufst_root_dir = ( char * ) pl_fapi_ufst_get_font_dir ( mem )		8204298	0		=			
ANR	8204407	Identifier	ufst_root_dir		8204298	0					
ANR	8204408	CastExpression	( char * ) pl_fapi_ufst_get_font_dir ( mem )		8204298	1					
ANR	8204409	CastTarget	char *		8204298	0					
ANR	8204410	CallExpression	pl_fapi_ufst_get_font_dir ( mem )		8204298	1					
ANR	8204411	Callee	pl_fapi_ufst_get_font_dir		8204298	0					
ANR	8204412	Identifier	pl_fapi_ufst_get_font_dir		8204298	0					
ANR	8204413	ArgumentList	mem		8204298	1					
ANR	8204414	Argument	mem		8204298	0					
ANR	8204415	Identifier	mem		8204298	0					
ANR	8204416	ExpressionStatement	fco_start = fco = ( char * ) pl_fapi_ufst_get_fco_list ( mem )	408:4:14191:14247	8204298	27	True				
ANR	8204417	AssignmentExpression	fco_start = fco = ( char * ) pl_fapi_ufst_get_fco_list ( mem )		8204298	0		=			
ANR	8204418	Identifier	fco_start		8204298	0					
ANR	8204419	AssignmentExpression	fco = ( char * ) pl_fapi_ufst_get_fco_list ( mem )		8204298	1		=			
ANR	8204420	Identifier	fco		8204298	0					
ANR	8204421	CastExpression	( char * ) pl_fapi_ufst_get_fco_list ( mem )		8204298	1					
ANR	8204422	CastTarget	char *		8204298	0					
ANR	8204423	CallExpression	pl_fapi_ufst_get_fco_list ( mem )		8204298	1					
ANR	8204424	Callee	pl_fapi_ufst_get_fco_list		8204298	0					
ANR	8204425	Identifier	pl_fapi_ufst_get_fco_list		8204298	0					
ANR	8204426	ArgumentList	mem		8204298	1					
ANR	8204427	Argument	mem		8204298	0					
ANR	8204428	Identifier	mem		8204298	0					
ANR	8204429	ExpressionStatement	fco_lim = fco_start + strlen ( fco_start ) + 1	409:4:14253:14296	8204298	28	True				
ANR	8204430	AssignmentExpression	fco_lim = fco_start + strlen ( fco_start ) + 1		8204298	0		=			
ANR	8204431	Identifier	fco_lim		8204298	0					
ANR	8204432	AdditiveExpression	fco_start + strlen ( fco_start ) + 1		8204298	1		+			
ANR	8204433	Identifier	fco_start		8204298	0					
ANR	8204434	AdditiveExpression	strlen ( fco_start ) + 1		8204298	1		+			
ANR	8204435	CallExpression	strlen ( fco_start )		8204298	0					
ANR	8204436	Callee	strlen		8204298	0					
ANR	8204437	Identifier	strlen		8204298	0					
ANR	8204438	ArgumentList	fco_start		8204298	1					
ANR	8204439	Argument	fco_start		8204298	0					
ANR	8204440	Identifier	fco_start		8204298	0					
ANR	8204441	PrimaryExpression	1		8204298	1					
ANR	8204442	ForStatement	for ( k = 0 ; strlen ( fco ) > 0 && fco < fco_lim ; k ++ )		8204298	29					
ANR	8204443	ForInit	k = 0 ;	411:9:14308:14313	8204298	0	True				
ANR	8204444	AssignmentExpression	k = 0		8204298	0		=			
ANR	8204445	Identifier	k		8204298	0					
ANR	8204446	PrimaryExpression	0		8204298	1					
ANR	8204447	Condition	strlen ( fco ) > 0 && fco < fco_lim	411:16:14315:14346	8204298	1	True				
ANR	8204448	AndExpression	strlen ( fco ) > 0 && fco < fco_lim		8204298	0		&&			
ANR	8204449	RelationalExpression	strlen ( fco ) > 0		8204298	0		>			
ANR	8204450	CallExpression	strlen ( fco )		8204298	0					
ANR	8204451	Callee	strlen		8204298	0					
ANR	8204452	Identifier	strlen		8204298	0					
ANR	8204453	ArgumentList	fco		8204298	1					
ANR	8204454	Argument	fco		8204298	0					
ANR	8204455	Identifier	fco		8204298	0					
ANR	8204456	PrimaryExpression	0		8204298	1					
ANR	8204457	RelationalExpression	fco < fco_lim		8204298	1		<			
ANR	8204458	Identifier	fco		8204298	0					
ANR	8204459	Identifier	fco_lim		8204298	1					
ANR	8204460	PostIncDecOperationExpression	k ++	411:50:14349:14351	8204298	2	True				
ANR	8204461	Identifier	k		8204298	0					
ANR	8204462	IncDec	++		8204298	1					
ANR	8204463	CompoundStatement		39:55:1028:1028	8204298	3					
ANR	8204464	ExpressionStatement	status = 0	412:8:14364:14374	8204298	0	True				
ANR	8204465	AssignmentExpression	status = 0		8204298	0		=			
ANR	8204466	Identifier	status		8204298	0					
ANR	8204467	PrimaryExpression	0		8204298	1					
ANR	8204468	ExpressionStatement	"gs_strlcpy ( ( char * ) pthnm , ufst_root_dir , sizeof pthnm )"	414:8:14453:14507	8204298	1	True				
ANR	8204469	CallExpression	"gs_strlcpy ( ( char * ) pthnm , ufst_root_dir , sizeof pthnm )"		8204298	0					
ANR	8204470	Callee	gs_strlcpy		8204298	0					
ANR	8204471	Identifier	gs_strlcpy		8204298	0					
ANR	8204472	ArgumentList	( char * ) pthnm		8204298	1					
ANR	8204473	Argument	( char * ) pthnm		8204298	0					
ANR	8204474	CastExpression	( char * ) pthnm		8204298	0					
ANR	8204475	CastTarget	char *		8204298	0					
ANR	8204476	Identifier	pthnm		8204298	1					
ANR	8204477	Argument	ufst_root_dir		8204298	1					
ANR	8204478	Identifier	ufst_root_dir		8204298	0					
ANR	8204479	Argument	sizeof pthnm		8204298	2					
ANR	8204480	SizeofExpression	sizeof pthnm		8204298	0					
ANR	8204481	Sizeof	sizeof		8204298	0					
ANR	8204482	Identifier	pthnm		8204298	1					
ANR	8204483	ForStatement	for ( i = 2 ; fco [ i ] != gp_file_name_list_separator && ( & fco [ i ] ) < fco_lim ; i ++ )		8204298	2					
ANR	8204484	ForInit	i = 2 ;	416:13:14523:14528	8204298	0	True				
ANR	8204485	AssignmentExpression	i = 2		8204298	0		=			
ANR	8204486	Identifier	i		8204298	0					
ANR	8204487	PrimaryExpression	2		8204298	1					
ANR	8204488	Condition	fco [ i ] != gp_file_name_list_separator && ( & fco [ i ] ) < fco_lim	416:20:14530:14589	8204298	1	True				
ANR	8204489	AndExpression	fco [ i ] != gp_file_name_list_separator && ( & fco [ i ] ) < fco_lim		8204298	0		&&			
ANR	8204490	EqualityExpression	fco [ i ] != gp_file_name_list_separator		8204298	0		!=			
ANR	8204491	ArrayIndexing	fco [ i ]		8204298	0					
ANR	8204492	Identifier	fco		8204298	0					
ANR	8204493	Identifier	i		8204298	1					
ANR	8204494	Identifier	gp_file_name_list_separator		8204298	1					
ANR	8204495	RelationalExpression	( & fco [ i ] ) < fco_lim		8204298	1		<			
ANR	8204496	UnaryOperationExpression	& fco [ i ]		8204298	0					
ANR	8204497	UnaryOperator	&		8204298	0					
ANR	8204498	ArrayIndexing	fco [ i ]		8204298	1					
ANR	8204499	Identifier	fco		8204298	0					
ANR	8204500	Identifier	i		8204298	1					
ANR	8204501	Identifier	fco_lim		8204298	1					
ANR	8204502	PostIncDecOperationExpression	i ++	416:82:14592:14594	8204298	2	True				
ANR	8204503	Identifier	i		8204298	0					
ANR	8204504	IncDec	++		8204298	1					
ANR	8204505	ExpressionStatement		416:86:14596:14596	8204298	3	True				
ANR	8204506	ExpressionStatement	"strncat ( pthnm , fco , i )"	418:8:14607:14629	8204298	3	True				
ANR	8204507	CallExpression	"strncat ( pthnm , fco , i )"		8204298	0					
ANR	8204508	Callee	strncat		8204298	0					
ANR	8204509	Identifier	strncat		8204298	0					
ANR	8204510	ArgumentList	pthnm		8204298	1					
ANR	8204511	Argument	pthnm		8204298	0					
ANR	8204512	Identifier	pthnm		8204298	0					
ANR	8204513	Argument	fco		8204298	1					
ANR	8204514	Identifier	fco		8204298	0					
ANR	8204515	Argument	i		8204298	2					
ANR	8204516	Identifier	i		8204298	0					
ANR	8204517	ExpressionStatement	fco += ( i + 1 )	419:8:14639:14653	8204298	4	True				
ANR	8204518	AssignmentExpression	fco += ( i + 1 )		8204298	0		+=			
ANR	8204519	Identifier	fco		8204298	0					
ANR	8204520	AdditiveExpression	i + 1		8204298	1		+			
ANR	8204521	Identifier	i		8204298	0					
ANR	8204522	PrimaryExpression	1		8204298	1					
ANR	8204523	ForStatement	"for ( i = 0 ; status == 0 ; i ++ , key [ 2 ] += 1 )"		8204298	5					
ANR	8204524	ForInit	i = 0 ;	422:13:14714:14719	8204298	0	True				
ANR	8204525	AssignmentExpression	i = 0		8204298	0		=			
ANR	8204526	Identifier	i		8204298	0					
ANR	8204527	PrimaryExpression	0		8204298	1					
ANR	8204528	Condition	status == 0	422:20:14721:14731	8204298	1	True				
ANR	8204529	EqualityExpression	status == 0		8204298	0		==			
ANR	8204530	Identifier	status		8204298	0					
ANR	8204531	PrimaryExpression	0		8204298	1					
ANR	8204532	Expression	"i ++ , key [ 2 ] += 1"	422:33:14734:14749	8204298	2	True				
ANR	8204533	PostIncDecOperationExpression	i ++		8204298	0					
ANR	8204534	Identifier	i		8204298	0					
ANR	8204535	IncDec	++		8204298	1					
ANR	8204536	AssignmentExpression	key [ 2 ] += 1		8204298	1		+=			
ANR	8204537	ArrayIndexing	key [ 2 ]		8204298	0					
ANR	8204538	Identifier	key		8204298	0					
ANR	8204539	PrimaryExpression	2		8204298	1					
ANR	8204540	PrimaryExpression	1		8204298	1					
ANR	8204541	CompoundStatement		51:12:1440:1458	8204298	3					
ANR	8204542	IdentifierDeclStatement	char * pname = NULL ;	423:12:14766:14784	8204298	0	True				
ANR	8204543	IdentifierDecl	* pname = NULL		8204298	0					
ANR	8204544	IdentifierDeclType	char *		8204298	0					
ANR	8204545	Identifier	pname		8204298	1					
ANR	8204546	AssignmentExpression	* pname = NULL		8204298	2		=			
ANR	8204547	Identifier	NULL		8204298	0					
ANR	8204548	Identifier	NULL		8204298	1					
ANR	8204549	IfStatement	if ( ! plfont )		8204298	1					
ANR	8204550	Condition	! plfont	428:16:14924:14930	8204298	0	True				
ANR	8204551	UnaryOperationExpression	! plfont		8204298	0					
ANR	8204552	UnaryOperator	!		8204298	0					
ANR	8204553	Identifier	plfont		8204298	1					
ANR	8204554	CompoundStatement		56:25:1607:1607	8204298	1					
ANR	8204555	ExpressionStatement	"pbfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_mt_load_font(gs_font_base)"" )"	430:16:14952:15102	8204298	0	True				
ANR	8204556	AssignmentExpression	"pbfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_mt_load_font(gs_font_base)"" )"		8204298	0		=			
ANR	8204557	Identifier	pbfont		8204298	0					
ANR	8204558	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pl_mt_load_font(gs_font_base)"" )"		8204298	1					
ANR	8204559	Callee	gs_alloc_struct		8204298	0					
ANR	8204560	Identifier	gs_alloc_struct		8204298	0					
ANR	8204561	ArgumentList	mem		8204298	1					
ANR	8204562	Argument	mem		8204298	0					
ANR	8204563	Identifier	mem		8204298	0					
ANR	8204564	Argument	gs_font_base		8204298	1					
ANR	8204565	Identifier	gs_font_base		8204298	0					
ANR	8204566	Argument	& st_gs_font_base		8204298	2					
ANR	8204567	UnaryOperationExpression	& st_gs_font_base		8204298	0					
ANR	8204568	UnaryOperator	&		8204298	0					
ANR	8204569	Identifier	st_gs_font_base		8204298	1					
ANR	8204570	Argument	"""pl_mt_load_font(gs_font_base)"""		8204298	3					
ANR	8204571	PrimaryExpression	"""pl_mt_load_font(gs_font_base)"""		8204298	0					
ANR	8204572	ExpressionStatement	"plfont = pl_alloc_font ( mem , ""pl_mt_load_font(pl_font_t)"" )"	433:16:15120:15177	8204298	1	True				
ANR	8204573	AssignmentExpression	"plfont = pl_alloc_font ( mem , ""pl_mt_load_font(pl_font_t)"" )"		8204298	0		=			
ANR	8204574	Identifier	plfont		8204298	0					
ANR	8204575	CallExpression	"pl_alloc_font ( mem , ""pl_mt_load_font(pl_font_t)"" )"		8204298	1					
ANR	8204576	Callee	pl_alloc_font		8204298	0					
ANR	8204577	Identifier	pl_alloc_font		8204298	0					
ANR	8204578	ArgumentList	mem		8204298	1					
ANR	8204579	Argument	mem		8204298	0					
ANR	8204580	Identifier	mem		8204298	0					
ANR	8204581	Argument	"""pl_mt_load_font(pl_font_t)"""		8204298	1					
ANR	8204582	PrimaryExpression	"""pl_mt_load_font(pl_font_t)"""		8204298	0					
ANR	8204583	IfStatement	if ( ! pbfont || ! plfont )		8204298	2					
ANR	8204584	Condition	! pbfont || ! plfont	434:20:15199:15216	8204298	0	True				
ANR	8204585	OrExpression	! pbfont || ! plfont		8204298	0		||			
ANR	8204586	UnaryOperationExpression	! pbfont		8204298	0					
ANR	8204587	UnaryOperator	!		8204298	0					
ANR	8204588	Identifier	pbfont		8204298	1					
ANR	8204589	UnaryOperationExpression	! plfont		8204298	1					
ANR	8204590	UnaryOperator	!		8204298	0					
ANR	8204591	Identifier	plfont		8204298	1					
ANR	8204592	CompoundStatement		62:40:1893:1893	8204298	1					
ANR	8204593	ExpressionStatement	"gs_free_object ( mem , plfont , ""pl_mt_load_font(pl_font_t)"" )"	435:20:15241:15298	8204298	0	True				
ANR	8204594	CallExpression	"gs_free_object ( mem , plfont , ""pl_mt_load_font(pl_font_t)"" )"		8204298	0					
ANR	8204595	Callee	gs_free_object		8204298	0					
ANR	8204596	Identifier	gs_free_object		8204298	0					
ANR	8204597	ArgumentList	mem		8204298	1					
ANR	8204598	Argument	mem		8204298	0					
ANR	8204599	Identifier	mem		8204298	0					
ANR	8204600	Argument	plfont		8204298	1					
ANR	8204601	Identifier	plfont		8204298	0					
ANR	8204602	Argument	"""pl_mt_load_font(pl_font_t)"""		8204298	2					
ANR	8204603	PrimaryExpression	"""pl_mt_load_font(pl_font_t)"""		8204298	0					
ANR	8204604	ExpressionStatement	"gs_free_object ( mem , pfont , ""pl_mt_load_font(gs_font_base)"" )"	436:20:15320:15414	8204298	1	True				
ANR	8204605	CallExpression	"gs_free_object ( mem , pfont , ""pl_mt_load_font(gs_font_base)"" )"		8204298	0					
ANR	8204606	Callee	gs_free_object		8204298	0					
ANR	8204607	Identifier	gs_free_object		8204298	0					
ANR	8204608	ArgumentList	mem		8204298	1					
ANR	8204609	Argument	mem		8204298	0					
ANR	8204610	Identifier	mem		8204298	0					
ANR	8204611	Argument	pfont		8204298	1					
ANR	8204612	Identifier	pfont		8204298	0					
ANR	8204613	Argument	"""pl_mt_load_font(gs_font_base)"""		8204298	2					
ANR	8204614	PrimaryExpression	"""pl_mt_load_font(gs_font_base)"""		8204298	0					
ANR	8204615	ExpressionStatement	"dmprintf1 ( mem , ""VM error for built-in font %d"" , i )"	438:20:15436:15486	8204298	2	True				
ANR	8204616	CallExpression	"dmprintf1 ( mem , ""VM error for built-in font %d"" , i )"		8204298	0					
ANR	8204617	Callee	dmprintf1		8204298	0					
ANR	8204618	Identifier	dmprintf1		8204298	0					
ANR	8204619	ArgumentList	mem		8204298	1					
ANR	8204620	Argument	mem		8204298	0					
ANR	8204621	Identifier	mem		8204298	0					
ANR	8204622	Argument	"""VM error for built-in font %d"""		8204298	1					
ANR	8204623	PrimaryExpression	"""VM error for built-in font %d"""		8204298	0					
ANR	8204624	Argument	i		8204298	2					
ANR	8204625	Identifier	i		8204298	0					
ANR	8204626	ContinueStatement	continue ;	439:20:15508:15516	8204298	3	True				
ANR	8204627	ExpressionStatement	pfont = ( gs_font * ) pbfont	442:12:15562:15588	8204298	2	True				
ANR	8204628	AssignmentExpression	pfont = ( gs_font * ) pbfont		8204298	0		=			
ANR	8204629	Identifier	pfont		8204298	0					
ANR	8204630	CastExpression	( gs_font * ) pbfont		8204298	1					
ANR	8204631	CastTarget	gs_font *		8204298	0					
ANR	8204632	Identifier	pbfont		8204298	1					
ANR	8204633	ExpressionStatement	"status = pl_fill_in_mt_font ( pbfont , plfont , i , pthnm , pdir , mem , i )"	444:12:15603:15686	8204298	3	True				
ANR	8204634	AssignmentExpression	"status = pl_fill_in_mt_font ( pbfont , plfont , i , pthnm , pdir , mem , i )"		8204298	0		=			
ANR	8204635	Identifier	status		8204298	0					
ANR	8204636	CallExpression	"pl_fill_in_mt_font ( pbfont , plfont , i , pthnm , pdir , mem , i )"		8204298	1					
ANR	8204637	Callee	pl_fill_in_mt_font		8204298	0					
ANR	8204638	Identifier	pl_fill_in_mt_font		8204298	0					
ANR	8204639	ArgumentList	pbfont		8204298	1					
ANR	8204640	Argument	pbfont		8204298	0					
ANR	8204641	Identifier	pbfont		8204298	0					
ANR	8204642	Argument	plfont		8204298	1					
ANR	8204643	Identifier	plfont		8204298	0					
ANR	8204644	Argument	i		8204298	2					
ANR	8204645	Identifier	i		8204298	0					
ANR	8204646	Argument	pthnm		8204298	3					
ANR	8204647	Identifier	pthnm		8204298	0					
ANR	8204648	Argument	pdir		8204298	4					
ANR	8204649	Identifier	pdir		8204298	0					
ANR	8204650	Argument	mem		8204298	5					
ANR	8204651	Identifier	mem		8204298	0					
ANR	8204652	Argument	i		8204298	6					
ANR	8204653	Identifier	i		8204298	0					
ANR	8204654	IfStatement	if ( status < 0 )		8204298	4					
ANR	8204655	Condition	status < 0	446:16:15704:15713	8204298	0	True				
ANR	8204656	RelationalExpression	status < 0		8204298	0		<			
ANR	8204657	Identifier	status		8204298	0					
ANR	8204658	PrimaryExpression	0		8204298	1					
ANR	8204659	CompoundStatement		74:28:2390:2390	8204298	1					
ANR	8204660	ExpressionStatement	"dmprintf2 ( mem , ""Error %d for built-in font %d"" , status , i )"	447:16:15734:15792	8204298	0	True				
ANR	8204661	CallExpression	"dmprintf2 ( mem , ""Error %d for built-in font %d"" , status , i )"		8204298	0					
ANR	8204662	Callee	dmprintf2		8204298	0					
ANR	8204663	Identifier	dmprintf2		8204298	0					
ANR	8204664	ArgumentList	mem		8204298	1					
ANR	8204665	Argument	mem		8204298	0					
ANR	8204666	Identifier	mem		8204298	0					
ANR	8204667	Argument	"""Error %d for built-in font %d"""		8204298	1					
ANR	8204668	PrimaryExpression	"""Error %d for built-in font %d"""		8204298	0					
ANR	8204669	Argument	status		8204298	2					
ANR	8204670	Identifier	status		8204298	0					
ANR	8204671	Argument	i		8204298	3					
ANR	8204672	Identifier	i		8204298	0					
ANR	8204673	ContinueStatement	continue ;	448:16:15810:15818	8204298	1	True				
ANR	8204674	ExpressionStatement	"status = pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"	451:12:15847:15931	8204298	5	True				
ANR	8204675	AssignmentExpression	"status = pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"		8204298	0		=			
ANR	8204676	Identifier	status		8204298	0					
ANR	8204677	CallExpression	"pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"		8204298	1					
ANR	8204678	Callee	pl_fapi_passfont		8204298	0					
ANR	8204679	Identifier	pl_fapi_passfont		8204298	0					
ANR	8204680	ArgumentList	plfont		8204298	1					
ANR	8204681	Argument	plfont		8204298	0					
ANR	8204682	Identifier	plfont		8204298	0					
ANR	8204683	Argument	i		8204298	1					
ANR	8204684	Identifier	i		8204298	0					
ANR	8204685	Argument	"( char * ) ""UFST"""		8204298	2					
ANR	8204686	CastExpression	"( char * ) ""UFST"""		8204298	0					
ANR	8204687	CastTarget	char *		8204298	0					
ANR	8204688	PrimaryExpression	"""UFST"""		8204298	1					
ANR	8204689	Argument	pthnm		8204298	3					
ANR	8204690	Identifier	pthnm		8204298	0					
ANR	8204691	Argument	NULL		8204298	4					
ANR	8204692	Identifier	NULL		8204298	0					
ANR	8204693	Argument	0		8204298	5					
ANR	8204694	PrimaryExpression	0		8204298	0					
ANR	8204695	IfStatement	if ( status != 0 )		8204298	6					
ANR	8204696	Condition	status != 0	454:16:15950:15960	8204298	0	True				
ANR	8204697	EqualityExpression	status != 0		8204298	0		!=			
ANR	8204698	Identifier	status		8204298	0					
ANR	8204699	PrimaryExpression	0		8204298	1					
ANR	8204700	CompoundStatement		82:29:2637:2637	8204298	1					
ANR	8204701	ExpressionStatement	"dmprintf1 ( mem , ""CGIFfco_Access error %d\\n"" , status )"	456:16:15994:16045	8204298	0	True				
ANR	8204702	CallExpression	"dmprintf1 ( mem , ""CGIFfco_Access error %d\\n"" , status )"		8204298	0					
ANR	8204703	Callee	dmprintf1		8204298	0					
ANR	8204704	Identifier	dmprintf1		8204298	0					
ANR	8204705	ArgumentList	mem		8204298	1					
ANR	8204706	Argument	mem		8204298	0					
ANR	8204707	Identifier	mem		8204298	0					
ANR	8204708	Argument	"""CGIFfco_Access error %d\\n"""		8204298	1					
ANR	8204709	PrimaryExpression	"""CGIFfco_Access error %d\\n"""		8204298	0					
ANR	8204710	Argument	status		8204298	2					
ANR	8204711	Identifier	status		8204298	0					
ANR	8204712	ElseStatement	else		8204298	0					
ANR	8204713	CompoundStatement		95:16:3117:3129	8204298	0					
ANR	8204714	IdentifierDeclStatement	int font_number = 0 ;	459:16:16091:16110	8204298	0	True				
ANR	8204715	IdentifierDecl	font_number = 0		8204298	0					
ANR	8204716	IdentifierDeclType	int		8204298	0					
ANR	8204717	Identifier	font_number		8204298	1					
ANR	8204718	AssignmentExpression	font_number = 0		8204298	2		=			
ANR	8204719	Identifier	font_number		8204298	0					
ANR	8204720	PrimaryExpression	0		8204298	1					
ANR	8204721	IdentifierDeclStatement	"char * symname = ( char * ) ""SymbPS"" ;"	462:16:16269:16301	8204298	1	True				
ANR	8204722	IdentifierDecl	"* symname = ( char * ) ""SymbPS"""		8204298	0					
ANR	8204723	IdentifierDeclType	char *		8204298	0					
ANR	8204724	Identifier	symname		8204298	1					
ANR	8204725	AssignmentExpression	"* symname = ( char * ) ""SymbPS"""		8204298	2		=			
ANR	8204726	Identifier	symname		8204298	0					
ANR	8204727	CastExpression	"( char * ) ""SymbPS"""		8204298	1					
ANR	8204728	CastTarget	char *		8204298	0					
ANR	8204729	PrimaryExpression	"""SymbPS"""		8204298	1					
ANR	8204730	IdentifierDeclStatement	int j ;	463:16:16319:16324	8204298	2	True				
ANR	8204731	IdentifierDecl	j		8204298	0					
ANR	8204732	IdentifierDeclType	int		8204298	0					
ANR	8204733	Identifier	j		8204298	1					
ANR	8204734	IdentifierDeclStatement	uint spaceBand ;	464:16:16342:16356	8204298	3	True				
ANR	8204735	IdentifierDecl	spaceBand		8204298	0					
ANR	8204736	IdentifierDeclType	uint		8204298	0					
ANR	8204737	Identifier	spaceBand		8204298	1					
ANR	8204738	IdentifierDeclStatement	uint scaleFactor ;	465:16:16374:16390	8204298	4	True				
ANR	8204739	IdentifierDecl	scaleFactor		8204298	0					
ANR	8204740	IdentifierDeclType	uint		8204298	0					
ANR	8204741	Identifier	scaleFactor		8204298	1					
ANR	8204742	IdentifierDeclStatement	bool used = false ;	466:16:16408:16425	8204298	5	True				
ANR	8204743	IdentifierDecl	used = false		8204298	0					
ANR	8204744	IdentifierDeclType	bool		8204298	0					
ANR	8204745	Identifier	used		8204298	1					
ANR	8204746	AssignmentExpression	used = false		8204298	2		=			
ANR	8204747	Identifier	false		8204298	0					
ANR	8204748	Identifier	false		8204298	1					
ANR	8204749	IdentifierDeclStatement	int code = 0 ;	467:16:16443:16455	8204298	6	True				
ANR	8204750	IdentifierDecl	code = 0		8204298	0					
ANR	8204751	IdentifierDeclType	int		8204298	0					
ANR	8204752	Identifier	code		8204298	1					
ANR	8204753	AssignmentExpression	code = 0		8204298	2		=			
ANR	8204754	Identifier	code		8204298	0					
ANR	8204755	PrimaryExpression	0		8204298	1					
ANR	8204756	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_name ( pfont , NULL , & bSize )"	473:16:16671:16725	8204298	7	True				
ANR	8204757	CastExpression	"( void ) pl_fapi_get_mtype_font_name ( pfont , NULL , & bSize )"		8204298	0					
ANR	8204758	CastTarget	void		8204298	0					
ANR	8204759	CallExpression	"pl_fapi_get_mtype_font_name ( pfont , NULL , & bSize )"		8204298	1					
ANR	8204760	Callee	pl_fapi_get_mtype_font_name		8204298	0					
ANR	8204761	Identifier	pl_fapi_get_mtype_font_name		8204298	0					
ANR	8204762	ArgumentList	pfont		8204298	1					
ANR	8204763	Argument	pfont		8204298	0					
ANR	8204764	Identifier	pfont		8204298	0					
ANR	8204765	Argument	NULL		8204298	1					
ANR	8204766	Identifier	NULL		8204298	0					
ANR	8204767	Argument	& bSize		8204298	2					
ANR	8204768	UnaryOperationExpression	& bSize		8204298	0					
ANR	8204769	UnaryOperator	&		8204298	0					
ANR	8204770	Identifier	bSize		8204298	1					
ANR	8204771	ExpressionStatement	"pname = ( char * ) gs_alloc_bytes ( mem , bSize , ""pl_mt_load_font: font name buffer"" )"	475:16:16744:16886	8204298	8	True				
ANR	8204772	AssignmentExpression	"pname = ( char * ) gs_alloc_bytes ( mem , bSize , ""pl_mt_load_font: font name buffer"" )"		8204298	0		=			
ANR	8204773	Identifier	pname		8204298	0					
ANR	8204774	CastExpression	"( char * ) gs_alloc_bytes ( mem , bSize , ""pl_mt_load_font: font name buffer"" )"		8204298	1					
ANR	8204775	CastTarget	char *		8204298	0					
ANR	8204776	CallExpression	"gs_alloc_bytes ( mem , bSize , ""pl_mt_load_font: font name buffer"" )"		8204298	1					
ANR	8204777	Callee	gs_alloc_bytes		8204298	0					
ANR	8204778	Identifier	gs_alloc_bytes		8204298	0					
ANR	8204779	ArgumentList	mem		8204298	1					
ANR	8204780	Argument	mem		8204298	0					
ANR	8204781	Identifier	mem		8204298	0					
ANR	8204782	Argument	bSize		8204298	1					
ANR	8204783	Identifier	bSize		8204298	0					
ANR	8204784	Argument	"""pl_mt_load_font: font name buffer"""		8204298	2					
ANR	8204785	PrimaryExpression	"""pl_mt_load_font: font name buffer"""		8204298	0					
ANR	8204786	IfStatement	if ( ! pname )		8204298	9					
ANR	8204787	Condition	! pname	478:20:16908:16913	8204298	0	True				
ANR	8204788	UnaryOperationExpression	! pname		8204298	0					
ANR	8204789	UnaryOperator	!		8204298	0					
ANR	8204790	Identifier	pname		8204298	1					
ANR	8204791	CompoundStatement		106:28:3590:3590	8204298	1					
ANR	8204792	ExpressionStatement	"dmprintf1 ( mem , ""VM Error for built-in font %d"" , i )"	479:20:16938:16988	8204298	0	True				
ANR	8204793	CallExpression	"dmprintf1 ( mem , ""VM Error for built-in font %d"" , i )"		8204298	0					
ANR	8204794	Callee	dmprintf1		8204298	0					
ANR	8204795	Identifier	dmprintf1		8204298	0					
ANR	8204796	ArgumentList	mem		8204298	1					
ANR	8204797	Argument	mem		8204298	0					
ANR	8204798	Identifier	mem		8204298	0					
ANR	8204799	Argument	"""VM Error for built-in font %d"""		8204298	1					
ANR	8204800	PrimaryExpression	"""VM Error for built-in font %d"""		8204298	0					
ANR	8204801	Argument	i		8204298	2					
ANR	8204802	Identifier	i		8204298	0					
ANR	8204803	ContinueStatement	continue ;	480:20:17010:17018	8204298	1	True				
ANR	8204804	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_name ( pfont , ( byte * ) pname , & bSize )"	483:16:17055:17169	8204298	10	True				
ANR	8204805	CastExpression	"( void ) pl_fapi_get_mtype_font_name ( pfont , ( byte * ) pname , & bSize )"		8204298	0					
ANR	8204806	CastTarget	void		8204298	0					
ANR	8204807	CallExpression	"pl_fapi_get_mtype_font_name ( pfont , ( byte * ) pname , & bSize )"		8204298	1					
ANR	8204808	Callee	pl_fapi_get_mtype_font_name		8204298	0					
ANR	8204809	Identifier	pl_fapi_get_mtype_font_name		8204298	0					
ANR	8204810	ArgumentList	pfont		8204298	1					
ANR	8204811	Argument	pfont		8204298	0					
ANR	8204812	Identifier	pfont		8204298	0					
ANR	8204813	Argument	( byte * ) pname		8204298	1					
ANR	8204814	CastExpression	( byte * ) pname		8204298	0					
ANR	8204815	CastTarget	byte *		8204298	0					
ANR	8204816	Identifier	pname		8204298	1					
ANR	8204817	Argument	& bSize		8204298	2					
ANR	8204818	UnaryOperationExpression	& bSize		8204298	0					
ANR	8204819	UnaryOperator	&		8204298	0					
ANR	8204820	Identifier	bSize		8204298	1					
ANR	8204821	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_number ( pfont , & font_number )"	486:16:17188:17244	8204298	11	True				
ANR	8204822	CastExpression	"( void ) pl_fapi_get_mtype_font_number ( pfont , & font_number )"		8204298	0					
ANR	8204823	CastTarget	void		8204298	0					
ANR	8204824	CallExpression	"pl_fapi_get_mtype_font_number ( pfont , & font_number )"		8204298	1					
ANR	8204825	Callee	pl_fapi_get_mtype_font_number		8204298	0					
ANR	8204826	Identifier	pl_fapi_get_mtype_font_number		8204298	0					
ANR	8204827	ArgumentList	pfont		8204298	1					
ANR	8204828	Argument	pfont		8204298	0					
ANR	8204829	Identifier	pfont		8204298	0					
ANR	8204830	Argument	& font_number		8204298	1					
ANR	8204831	UnaryOperationExpression	& font_number		8204298	0					
ANR	8204832	UnaryOperator	&		8204298	0					
ANR	8204833	Identifier	font_number		8204298	1					
ANR	8204834	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_spaceBand ( pfont , & spaceBand )"	487:16:17262:17319	8204298	12	True				
ANR	8204835	CastExpression	"( void ) pl_fapi_get_mtype_font_spaceBand ( pfont , & spaceBand )"		8204298	0					
ANR	8204836	CastTarget	void		8204298	0					
ANR	8204837	CallExpression	"pl_fapi_get_mtype_font_spaceBand ( pfont , & spaceBand )"		8204298	1					
ANR	8204838	Callee	pl_fapi_get_mtype_font_spaceBand		8204298	0					
ANR	8204839	Identifier	pl_fapi_get_mtype_font_spaceBand		8204298	0					
ANR	8204840	ArgumentList	pfont		8204298	1					
ANR	8204841	Argument	pfont		8204298	0					
ANR	8204842	Identifier	pfont		8204298	0					
ANR	8204843	Argument	& spaceBand		8204298	1					
ANR	8204844	UnaryOperationExpression	& spaceBand		8204298	0					
ANR	8204845	UnaryOperator	&		8204298	0					
ANR	8204846	Identifier	spaceBand		8204298	1					
ANR	8204847	ExpressionStatement	"( void ) pl_fapi_get_mtype_font_scaleFactor ( pfont , & scaleFactor )"	488:16:17337:17398	8204298	13	True				
ANR	8204848	CastExpression	"( void ) pl_fapi_get_mtype_font_scaleFactor ( pfont , & scaleFactor )"		8204298	0					
ANR	8204849	CastTarget	void		8204298	0					
ANR	8204850	CallExpression	"pl_fapi_get_mtype_font_scaleFactor ( pfont , & scaleFactor )"		8204298	1					
ANR	8204851	Callee	pl_fapi_get_mtype_font_scaleFactor		8204298	0					
ANR	8204852	Identifier	pl_fapi_get_mtype_font_scaleFactor		8204298	0					
ANR	8204853	ArgumentList	pfont		8204298	1					
ANR	8204854	Argument	pfont		8204298	0					
ANR	8204855	Identifier	pfont		8204298	0					
ANR	8204856	Argument	& scaleFactor		8204298	1					
ANR	8204857	UnaryOperationExpression	& scaleFactor		8204298	0					
ANR	8204858	UnaryOperator	&		8204298	0					
ANR	8204859	Identifier	scaleFactor		8204298	1					
ANR	8204860	IfStatement	if ( font_number == 24463 )		8204298	14					
ANR	8204861	Condition	font_number == 24463	490:20:17421:17440	8204298	0	True				
ANR	8204862	EqualityExpression	font_number == 24463		8204298	0		==			
ANR	8204863	Identifier	font_number		8204298	0					
ANR	8204864	PrimaryExpression	24463		8204298	1					
ANR	8204865	CompoundStatement		118:42:4117:4117	8204298	1					
ANR	8204866	ExpressionStatement	"gs_free_object ( mem , pname , ""pl_mt_load_font: font name buffer"" )"	491:20:17465:17563	8204298	0	True				
ANR	8204867	CallExpression	"gs_free_object ( mem , pname , ""pl_mt_load_font: font name buffer"" )"		8204298	0					
ANR	8204868	Callee	gs_free_object		8204298	0					
ANR	8204869	Identifier	gs_free_object		8204298	0					
ANR	8204870	ArgumentList	mem		8204298	1					
ANR	8204871	Argument	mem		8204298	0					
ANR	8204872	Identifier	mem		8204298	0					
ANR	8204873	Argument	pname		8204298	1					
ANR	8204874	Identifier	pname		8204298	0					
ANR	8204875	Argument	"""pl_mt_load_font: font name buffer"""		8204298	2					
ANR	8204876	PrimaryExpression	"""pl_mt_load_font: font name buffer"""		8204298	0					
ANR	8204877	ExpressionStatement	pname = symname	493:20:17585:17600	8204298	1	True				
ANR	8204878	AssignmentExpression	pname = symname		8204298	0		=			
ANR	8204879	Identifier	pname		8204298	0					
ANR	8204880	Identifier	symname		8204298	1					
ANR	8204881	ForStatement	for ( j = 0 ; strlen ( resident_table [ j ] . full_font_name ) ; j ++ )		8204298	15					
ANR	8204882	ForInit	j = 0 ;	496:21:17642:17647	8204298	0	True				
ANR	8204883	AssignmentExpression	j = 0		8204298	0		=			
ANR	8204884	Identifier	j		8204298	0					
ANR	8204885	PrimaryExpression	0		8204298	1					
ANR	8204886	Condition	strlen ( resident_table [ j ] . full_font_name )	496:28:17649:17688	8204298	1	True				
ANR	8204887	CallExpression	strlen ( resident_table [ j ] . full_font_name )		8204298	0					
ANR	8204888	Callee	strlen		8204298	0					
ANR	8204889	Identifier	strlen		8204298	0					
ANR	8204890	ArgumentList	resident_table [ j ] . full_font_name		8204298	1					
ANR	8204891	Argument	resident_table [ j ] . full_font_name		8204298	0					
ANR	8204892	MemberAccess	resident_table [ j ] . full_font_name		8204298	0					
ANR	8204893	ArrayIndexing	resident_table [ j ]		8204298	0					
ANR	8204894	Identifier	resident_table		8204298	0					
ANR	8204895	Identifier	j		8204298	1					
ANR	8204896	Identifier	full_font_name		8204298	1					
ANR	8204897	PostIncDecOperationExpression	j ++	496:70:17691:17693	8204298	2	True				
ANR	8204898	Identifier	j		8204298	0					
ANR	8204899	IncDec	++		8204298	1					
ANR	8204900	CompoundStatement		124:75:4370:4370	8204298	3					
ANR	8204901	IfStatement	"if ( strcmp ( ( char * ) resident_table [ j ] . full_font_name , ( char * ) pname ) != 0 )"		8204298	0					
ANR	8204902	Condition	"strcmp ( ( char * ) resident_table [ j ] . full_font_name , ( char * ) pname ) != 0"	497:24:17722:17839	8204298	0	True				
ANR	8204903	EqualityExpression	"strcmp ( ( char * ) resident_table [ j ] . full_font_name , ( char * ) pname ) != 0"		8204298	0		!=			
ANR	8204904	CallExpression	"strcmp ( ( char * ) resident_table [ j ] . full_font_name , ( char * ) pname )"		8204298	0					
ANR	8204905	Callee	strcmp		8204298	0					
ANR	8204906	Identifier	strcmp		8204298	0					
ANR	8204907	ArgumentList	( char * ) resident_table [ j ] . full_font_name		8204298	1					
ANR	8204908	Argument	( char * ) resident_table [ j ] . full_font_name		8204298	0					
ANR	8204909	CastExpression	( char * ) resident_table [ j ] . full_font_name		8204298	0					
ANR	8204910	CastTarget	char *		8204298	0					
ANR	8204911	MemberAccess	resident_table [ j ] . full_font_name		8204298	1					
ANR	8204912	ArrayIndexing	resident_table [ j ]		8204298	0					
ANR	8204913	Identifier	resident_table		8204298	0					
ANR	8204914	Identifier	j		8204298	1					
ANR	8204915	Identifier	full_font_name		8204298	1					
ANR	8204916	Argument	( char * ) pname		8204298	1					
ANR	8204917	CastExpression	( char * ) pname		8204298	0					
ANR	8204918	CastTarget	char *		8204298	0					
ANR	8204919	Identifier	pname		8204298	1					
ANR	8204920	PrimaryExpression	0		8204298	1					
ANR	8204921	ContinueStatement	continue ;	500:24:17866:17874	8204298	1	True				
ANR	8204922	IfStatement	if ( gs_debug_c ( '=' ) )		8204298	1					
ANR	8204923	Condition	gs_debug_c ( '=' )	503:24:17914:17928	8204298	0	True				
ANR	8204924	CallExpression	gs_debug_c ( '=' )		8204298	0					
ANR	8204925	Callee	gs_debug_c		8204298	0					
ANR	8204926	Identifier	gs_debug_c		8204298	0					
ANR	8204927	ArgumentList	'='		8204298	1					
ANR	8204928	Argument	'='		8204298	0					
ANR	8204929	PrimaryExpression	'='		8204298	0					
ANR	8204930	ExpressionStatement	"dmprintf2 ( mem , ""Loading %s from fco %s\\n"" , pname , pthnm )"	504:24:17955:18045	8204298	1	True				
ANR	8204931	CallExpression	"dmprintf2 ( mem , ""Loading %s from fco %s\\n"" , pname , pthnm )"		8204298	0					
ANR	8204932	Callee	dmprintf2		8204298	0					
ANR	8204933	Identifier	dmprintf2		8204298	0					
ANR	8204934	ArgumentList	mem		8204298	1					
ANR	8204935	Argument	mem		8204298	0					
ANR	8204936	Identifier	mem		8204298	0					
ANR	8204937	Argument	"""Loading %s from fco %s\\n"""		8204298	1					
ANR	8204938	PrimaryExpression	"""Loading %s from fco %s\\n"""		8204298	0					
ANR	8204939	Argument	pname		8204298	2					
ANR	8204940	Identifier	pname		8204298	0					
ANR	8204941	Argument	pthnm		8204298	3					
ANR	8204942	Identifier	pthnm		8204298	0					
ANR	8204943	IfStatement	if ( scaleFactor == 8782 )		8204298	2					
ANR	8204944	Condition	scaleFactor == 8782	510:24:18202:18220	8204298	0	True				
ANR	8204945	EqualityExpression	scaleFactor == 8782		8204298	0		==			
ANR	8204946	Identifier	scaleFactor		8204298	0					
ANR	8204947	PrimaryExpression	8782		8204298	1					
ANR	8204948	CompoundStatement		138:45:4897:4897	8204298	1					
ANR	8204949	ExpressionStatement	plfont -> pts_per_inch = 72.307f	511:24:18249:18279	8204298	0	True				
ANR	8204950	AssignmentExpression	plfont -> pts_per_inch = 72.307f		8204298	0		=			
ANR	8204951	PtrMemberAccess	plfont -> pts_per_inch		8204298	0					
ANR	8204952	Identifier	plfont		8204298	0					
ANR	8204953	Identifier	pts_per_inch		8204298	1					
ANR	8204954	PrimaryExpression	72.307f		8204298	1					
ANR	8204955	ExpressionStatement	plfont -> font_type = resident_table [ j ] . font_type	514:20:18324:18371	8204298	3	True				
ANR	8204956	AssignmentExpression	plfont -> font_type = resident_table [ j ] . font_type		8204298	0		=			
ANR	8204957	PtrMemberAccess	plfont -> font_type		8204298	0					
ANR	8204958	Identifier	plfont		8204298	0					
ANR	8204959	Identifier	font_type		8204298	1					
ANR	8204960	MemberAccess	resident_table [ j ] . font_type		8204298	1					
ANR	8204961	ArrayIndexing	resident_table [ j ]		8204298	0					
ANR	8204962	Identifier	resident_table		8204298	0					
ANR	8204963	Identifier	j		8204298	1					
ANR	8204964	Identifier	font_type		8204298	1					
ANR	8204965	ExpressionStatement	plfont -> storage = storage	515:20:18393:18418	8204298	4	True				
ANR	8204966	AssignmentExpression	plfont -> storage = storage		8204298	0		=			
ANR	8204967	PtrMemberAccess	plfont -> storage		8204298	0					
ANR	8204968	Identifier	plfont		8204298	0					
ANR	8204969	Identifier	storage		8204298	1					
ANR	8204970	Identifier	storage		8204298	1					
ANR	8204971	ExpressionStatement	plfont -> data_are_permanent = false	516:20:18440:18474	8204298	5	True				
ANR	8204972	AssignmentExpression	plfont -> data_are_permanent = false		8204298	0		=			
ANR	8204973	PtrMemberAccess	plfont -> data_are_permanent		8204298	0					
ANR	8204974	Identifier	plfont		8204298	0					
ANR	8204975	Identifier	data_are_permanent		8204298	1					
ANR	8204976	Identifier	false		8204298	1					
ANR	8204977	ExpressionStatement	plfont -> params = resident_table [ j ] . params	517:20:18496:18537	8204298	6	True				
ANR	8204978	AssignmentExpression	plfont -> params = resident_table [ j ] . params		8204298	0		=			
ANR	8204979	PtrMemberAccess	plfont -> params		8204298	0					
ANR	8204980	Identifier	plfont		8204298	0					
ANR	8204981	Identifier	params		8204298	1					
ANR	8204982	MemberAccess	resident_table [ j ] . params		8204298	1					
ANR	8204983	ArrayIndexing	resident_table [ j ]		8204298	0					
ANR	8204984	Identifier	resident_table		8204298	0					
ANR	8204985	Identifier	j		8204298	1					
ANR	8204986	Identifier	params		8204298	1					
ANR	8204987	ExpressionStatement	"memcpy ( plfont -> character_complement , resident_table [ j ] . character_complement , 8 )"	526:20:18946:19052	8204298	7	True				
ANR	8204988	CallExpression	"memcpy ( plfont -> character_complement , resident_table [ j ] . character_complement , 8 )"		8204298	0					
ANR	8204989	Callee	memcpy		8204298	0					
ANR	8204990	Identifier	memcpy		8204298	0					
ANR	8204991	ArgumentList	plfont -> character_complement		8204298	1					
ANR	8204992	Argument	plfont -> character_complement		8204298	0					
ANR	8204993	PtrMemberAccess	plfont -> character_complement		8204298	0					
ANR	8204994	Identifier	plfont		8204298	0					
ANR	8204995	Identifier	character_complement		8204298	1					
ANR	8204996	Argument	resident_table [ j ] . character_complement		8204298	1					
ANR	8204997	MemberAccess	resident_table [ j ] . character_complement		8204298	0					
ANR	8204998	ArrayIndexing	resident_table [ j ]		8204298	0					
ANR	8204999	Identifier	resident_table		8204298	0					
ANR	8205000	Identifier	j		8204298	1					
ANR	8205001	Identifier	character_complement		8204298	1					
ANR	8205002	Argument	8		8204298	2					
ANR	8205003	PrimaryExpression	8		8204298	0					
ANR	8205004	ExpressionStatement	"status = gs_definefont ( pdir , ( gs_font * ) pfont )"	529:20:19075:19122	8204298	8	True				
ANR	8205005	AssignmentExpression	"status = gs_definefont ( pdir , ( gs_font * ) pfont )"		8204298	0		=			
ANR	8205006	Identifier	status		8204298	0					
ANR	8205007	CallExpression	"gs_definefont ( pdir , ( gs_font * ) pfont )"		8204298	1					
ANR	8205008	Callee	gs_definefont		8204298	0					
ANR	8205009	Identifier	gs_definefont		8204298	0					
ANR	8205010	ArgumentList	pdir		8204298	1					
ANR	8205011	Argument	pdir		8204298	0					
ANR	8205012	Identifier	pdir		8204298	0					
ANR	8205013	Argument	( gs_font * ) pfont		8204298	1					
ANR	8205014	CastExpression	( gs_font * ) pfont		8204298	0					
ANR	8205015	CastTarget	gs_font *		8204298	0					
ANR	8205016	Identifier	pfont		8204298	1					
ANR	8205017	IfStatement	if ( status < 0 )		8204298	9					
ANR	8205018	Condition	status < 0	530:24:19148:19157	8204298	0	True				
ANR	8205019	RelationalExpression	status < 0		8204298	0		<			
ANR	8205020	Identifier	status		8204298	0					
ANR	8205021	PrimaryExpression	0		8204298	1					
ANR	8205022	CompoundStatement		158:36:5834:5834	8204298	1					
ANR	8205023	ExpressionStatement	status = 0	531:24:19186:19196	8204298	0	True				
ANR	8205024	AssignmentExpression	status = 0		8204298	0		=			
ANR	8205025	Identifier	status		8204298	0					
ANR	8205026	PrimaryExpression	0		8204298	1					
ANR	8205027	ContinueStatement	continue ;	532:24:19222:19230	8204298	1	True				
ANR	8205028	ExpressionStatement	"status = pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"	534:20:19274:19407	8204298	10	True				
ANR	8205029	AssignmentExpression	"status = pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"		8204298	0		=			
ANR	8205030	Identifier	status		8204298	0					
ANR	8205031	CallExpression	"pl_fapi_passfont ( plfont , i , ( char * ) ""UFST"" , pthnm , NULL , 0 )"		8204298	1					
ANR	8205032	Callee	pl_fapi_passfont		8204298	0					
ANR	8205033	Identifier	pl_fapi_passfont		8204298	0					
ANR	8205034	ArgumentList	plfont		8204298	1					
ANR	8205035	Argument	plfont		8204298	0					
ANR	8205036	Identifier	plfont		8204298	0					
ANR	8205037	Argument	i		8204298	1					
ANR	8205038	Identifier	i		8204298	0					
ANR	8205039	Argument	"( char * ) ""UFST"""		8204298	2					
ANR	8205040	CastExpression	"( char * ) ""UFST"""		8204298	0					
ANR	8205041	CastTarget	char *		8204298	0					
ANR	8205042	PrimaryExpression	"""UFST"""		8204298	1					
ANR	8205043	Argument	pthnm		8204298	3					
ANR	8205044	Identifier	pthnm		8204298	0					
ANR	8205045	Argument	NULL		8204298	4					
ANR	8205046	Identifier	NULL		8204298	0					
ANR	8205047	Argument	0		8204298	5					
ANR	8205048	PrimaryExpression	0		8204298	0					
ANR	8205049	IfStatement	if ( status < 0 )		8204298	11					
ANR	8205050	Condition	status < 0	537:24:19433:19442	8204298	0	True				
ANR	8205051	RelationalExpression	status < 0		8204298	0		<			
ANR	8205052	Identifier	status		8204298	0					
ANR	8205053	PrimaryExpression	0		8204298	1					
ANR	8205054	CompoundStatement		165:36:6119:6119	8204298	1					
ANR	8205055	ExpressionStatement	status = 0	538:24:19471:19481	8204298	0	True				
ANR	8205056	AssignmentExpression	status = 0		8204298	0		=			
ANR	8205057	Identifier	status		8204298	0					
ANR	8205058	PrimaryExpression	0		8204298	1					
ANR	8205059	ContinueStatement	continue ;	539:24:19507:19515	8204298	1	True				
ANR	8205060	IfStatement	if ( use_unicode_names_for_keys )		8204298	12					
ANR	8205061	Condition	use_unicode_names_for_keys	541:24:19563:19588	8204298	0	True				
ANR	8205062	Identifier	use_unicode_names_for_keys		8204298	0					
ANR	8205063	ExpressionStatement	"code = pl_dict_put ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , 32 , plfont )"	542:24:19615:19779	8204298	1	True				
ANR	8205064	AssignmentExpression	"code = pl_dict_put ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , 32 , plfont )"		8204298	0		=			
ANR	8205065	Identifier	code		8204298	0					
ANR	8205066	CallExpression	"pl_dict_put ( pfontdict , ( const byte * ) resident_table [ j ] . unicode_fontname , 32 , plfont )"		8204298	1					
ANR	8205067	Callee	pl_dict_put		8204298	0					
ANR	8205068	Identifier	pl_dict_put		8204298	0					
ANR	8205069	ArgumentList	pfontdict		8204298	1					
ANR	8205070	Argument	pfontdict		8204298	0					
ANR	8205071	Identifier	pfontdict		8204298	0					
ANR	8205072	Argument	( const byte * ) resident_table [ j ] . unicode_fontname		8204298	1					
ANR	8205073	CastExpression	( const byte * ) resident_table [ j ] . unicode_fontname		8204298	0					
ANR	8205074	CastTarget	const byte *		8204298	0					
ANR	8205075	MemberAccess	resident_table [ j ] . unicode_fontname		8204298	1					
ANR	8205076	ArrayIndexing	resident_table [ j ]		8204298	0					
ANR	8205077	Identifier	resident_table		8204298	0					
ANR	8205078	Identifier	j		8204298	1					
ANR	8205079	Identifier	unicode_fontname		8204298	1					
ANR	8205080	Argument	32		8204298	2					
ANR	8205081	PrimaryExpression	32		8204298	0					
ANR	8205082	Argument	plfont		8204298	3					
ANR	8205083	Identifier	plfont		8204298	0					
ANR	8205084	ElseStatement	else		8204298	0					
ANR	8205085	CompoundStatement		173:25:6480:6480	8204298	0					
ANR	8205086	ExpressionStatement	key [ 2 ] = ( byte ) j	546:24:19832:19849	8204298	0	True				
ANR	8205087	AssignmentExpression	key [ 2 ] = ( byte ) j		8204298	0		=			
ANR	8205088	ArrayIndexing	key [ 2 ]		8204298	0					
ANR	8205089	Identifier	key		8204298	0					
ANR	8205090	PrimaryExpression	2		8204298	1					
ANR	8205091	CastExpression	( byte ) j		8204298	1					
ANR	8205092	CastTarget	byte		8204298	0					
ANR	8205093	Identifier	j		8204298	1					
ANR	8205094	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	547:24:19875:19894	8204298	1	True				
ANR	8205095	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8204298	0		=			
ANR	8205096	ArrayIndexing	key [ 0 ]		8204298	0					
ANR	8205097	Identifier	key		8204298	0					
ANR	8205098	PrimaryExpression	0		8204298	1					
ANR	8205099	AssignmentExpression	key [ 1 ] = 0		8204298	1		=			
ANR	8205100	ArrayIndexing	key [ 1 ]		8204298	0					
ANR	8205101	Identifier	key		8204298	0					
ANR	8205102	PrimaryExpression	1		8204298	1					
ANR	8205103	PrimaryExpression	0		8204298	1					
ANR	8205104	ExpressionStatement	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"	548:24:19920:19975	8204298	2	True				
ANR	8205105	AssignmentExpression	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8204298	0		=			
ANR	8205106	Identifier	code		8204298	0					
ANR	8205107	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8204298	1					
ANR	8205108	Callee	pl_dict_put		8204298	0					
ANR	8205109	Identifier	pl_dict_put		8204298	0					
ANR	8205110	ArgumentList	pfontdict		8204298	1					
ANR	8205111	Argument	pfontdict		8204298	0					
ANR	8205112	Identifier	pfontdict		8204298	0					
ANR	8205113	Argument	key		8204298	1					
ANR	8205114	Identifier	key		8204298	0					
ANR	8205115	Argument	sizeof ( key )		8204298	2					
ANR	8205116	SizeofExpression	sizeof ( key )		8204298	0					
ANR	8205117	Sizeof	sizeof		8204298	0					
ANR	8205118	SizeofOperand	key		8204298	1					
ANR	8205119	Argument	plfont		8204298	3					
ANR	8205120	Identifier	plfont		8204298	0					
ANR	8205121	IfStatement	if ( code < 0 )		8204298	13					
ANR	8205122	Condition	code < 0	550:24:20023:20030	8204298	0	True				
ANR	8205123	RelationalExpression	code < 0		8204298	0		<			
ANR	8205124	Identifier	code		8204298	0					
ANR	8205125	PrimaryExpression	0		8204298	1					
ANR	8205126	ReturnStatement	return code ;	551:24:20057:20068	8204298	1	True				
ANR	8205127	Identifier	code		8204298	0					
ANR	8205128	ExpressionStatement	used = true	552:20:20090:20101	8204298	14	True				
ANR	8205129	AssignmentExpression	used = true		8204298	0		=			
ANR	8205130	Identifier	used		8204298	0					
ANR	8205131	Identifier	true		8204298	1					
ANR	8205132	IfStatement	if ( used )		8204298	16					
ANR	8205133	Condition	used	555:20:20214:20217	8204298	0	True				
ANR	8205134	Identifier	used		8204298	0					
ANR	8205135	CompoundStatement		183:26:6894:6894	8204298	1					
ANR	8205136	ExpressionStatement	plfont = NULL	556:20:20242:20255	8204298	0	True				
ANR	8205137	AssignmentExpression	plfont = NULL		8204298	0		=			
ANR	8205138	Identifier	plfont		8204298	0					
ANR	8205139	Identifier	NULL		8204298	1					
ANR	8205140	ExpressionStatement	pfont = NULL	557:20:20277:20289	8204298	1	True				
ANR	8205141	AssignmentExpression	pfont = NULL		8204298	0		=			
ANR	8205142	Identifier	pfont		8204298	0					
ANR	8205143	Identifier	NULL		8204298	1					
ANR	8205144	IfStatement	if ( pname != symname )		8204298	17					
ANR	8205145	Condition	pname != symname	559:20:20329:20344	8204298	0	True				
ANR	8205146	EqualityExpression	pname != symname		8204298	0		!=			
ANR	8205147	Identifier	pname		8204298	0					
ANR	8205148	Identifier	symname		8204298	1					
ANR	8205149	ExpressionStatement	"gs_free_object ( mem , pname , ""pl_mt_load_font: font name buffer"" )"	560:20:20367:20465	8204298	1	True				
ANR	8205150	CallExpression	"gs_free_object ( mem , pname , ""pl_mt_load_font: font name buffer"" )"		8204298	0					
ANR	8205151	Callee	gs_free_object		8204298	0					
ANR	8205152	Identifier	gs_free_object		8204298	0					
ANR	8205153	ArgumentList	mem		8204298	1					
ANR	8205154	Argument	mem		8204298	0					
ANR	8205155	Identifier	mem		8204298	0					
ANR	8205156	Argument	pname		8204298	1					
ANR	8205157	Identifier	pname		8204298	0					
ANR	8205158	Argument	"""pl_mt_load_font: font name buffer"""		8204298	2					
ANR	8205159	PrimaryExpression	"""pl_mt_load_font: font name buffer"""		8204298	0					
ANR	8205160	ExpressionStatement	pname = NULL	562:16:20483:20495	8204298	18	True				
ANR	8205161	AssignmentExpression	pname = NULL		8204298	0		=			
ANR	8205162	Identifier	pname		8204298	0					
ANR	8205163	Identifier	NULL		8204298	1					
ANR	8205164	ExpressionStatement	"gs_free_object ( mem , plfont , ""pl_mt_load_font(pl_font_t)"" )"	567:4:20587:20644	8204298	30	True				
ANR	8205165	CallExpression	"gs_free_object ( mem , plfont , ""pl_mt_load_font(pl_font_t)"" )"		8204298	0					
ANR	8205166	Callee	gs_free_object		8204298	0					
ANR	8205167	Identifier	gs_free_object		8204298	0					
ANR	8205168	ArgumentList	mem		8204298	1					
ANR	8205169	Argument	mem		8204298	0					
ANR	8205170	Identifier	mem		8204298	0					
ANR	8205171	Argument	plfont		8204298	1					
ANR	8205172	Identifier	plfont		8204298	0					
ANR	8205173	Argument	"""pl_mt_load_font(pl_font_t)"""		8204298	2					
ANR	8205174	PrimaryExpression	"""pl_mt_load_font(pl_font_t)"""		8204298	0					
ANR	8205175	ExpressionStatement	"gs_free_object ( mem , pfont , ""pl_mt_load_font(gs_font_base)"" )"	568:4:20650:20709	8204298	31	True				
ANR	8205176	CallExpression	"gs_free_object ( mem , pfont , ""pl_mt_load_font(gs_font_base)"" )"		8204298	0					
ANR	8205177	Callee	gs_free_object		8204298	0					
ANR	8205178	Identifier	gs_free_object		8204298	0					
ANR	8205179	ArgumentList	mem		8204298	1					
ANR	8205180	Argument	mem		8204298	0					
ANR	8205181	Identifier	mem		8204298	0					
ANR	8205182	Argument	pfont		8204298	1					
ANR	8205183	Identifier	pfont		8204298	0					
ANR	8205184	Argument	"""pl_mt_load_font(gs_font_base)"""		8204298	2					
ANR	8205185	PrimaryExpression	"""pl_mt_load_font(gs_font_base)"""		8204298	0					
ANR	8205186	ExpressionStatement	"( void ) pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"	571:4:20773:20897	8204298	32	True				
ANR	8205187	CastExpression	"( void ) pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8204298	0					
ANR	8205188	CastTarget	void		8204298	0					
ANR	8205189	CallExpression	"pl_load_ufst_lineprinter ( mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8204298	1					
ANR	8205190	Callee	pl_load_ufst_lineprinter		8204298	0					
ANR	8205191	Identifier	pl_load_ufst_lineprinter		8204298	0					
ANR	8205192	ArgumentList	mem		8204298	1					
ANR	8205193	Argument	mem		8204298	0					
ANR	8205194	Identifier	mem		8204298	0					
ANR	8205195	Argument	pfontdict		8204298	1					
ANR	8205196	Identifier	pfontdict		8204298	0					
ANR	8205197	Argument	pdir		8204298	2					
ANR	8205198	Identifier	pdir		8204298	0					
ANR	8205199	Argument	storage		8204298	3					
ANR	8205200	Identifier	storage		8204298	0					
ANR	8205201	Argument	use_unicode_names_for_keys		8204298	4					
ANR	8205202	Identifier	use_unicode_names_for_keys		8204298	0					
ANR	8205203	IfStatement	if ( gs_debug_c ( '=' ) )		8204298	33					
ANR	8205204	Condition	gs_debug_c ( '=' )	575:8:20921:20935	8204298	0	True				
ANR	8205205	CallExpression	gs_debug_c ( '=' )		8204298	0					
ANR	8205206	Callee	gs_debug_c		8204298	0					
ANR	8205207	Identifier	gs_debug_c		8204298	0					
ANR	8205208	ArgumentList	'='		8204298	1					
ANR	8205209	Argument	'='		8204298	0					
ANR	8205210	PrimaryExpression	'='		8204298	0					
ANR	8205211	ExpressionStatement	"check_resident_ufst_fonts ( pfontdict , use_unicode_names_for_keys , mem )"	576:8:20946:21015	8204298	1	True				
ANR	8205212	CallExpression	"check_resident_ufst_fonts ( pfontdict , use_unicode_names_for_keys , mem )"		8204298	0					
ANR	8205213	Callee	check_resident_ufst_fonts		8204298	0					
ANR	8205214	Identifier	check_resident_ufst_fonts		8204298	0					
ANR	8205215	ArgumentList	pfontdict		8204298	1					
ANR	8205216	Argument	pfontdict		8204298	0					
ANR	8205217	Identifier	pfontdict		8204298	0					
ANR	8205218	Argument	use_unicode_names_for_keys		8204298	1					
ANR	8205219	Identifier	use_unicode_names_for_keys		8204298	0					
ANR	8205220	Argument	mem		8204298	2					
ANR	8205221	Identifier	mem		8204298	0					
ANR	8205222	IfStatement	if ( status == 0 || status == - 10 )		8204298	34					
ANR	8205223	Condition	status == 0 || status == - 10	579:8:21033:21060	8204298	0	True				
ANR	8205224	OrExpression	status == 0 || status == - 10		8204298	0		||			
ANR	8205225	EqualityExpression	status == 0		8204298	0		==			
ANR	8205226	Identifier	status		8204298	0					
ANR	8205227	PrimaryExpression	0		8204298	1					
ANR	8205228	EqualityExpression	status == - 10		8204298	1		==			
ANR	8205229	Identifier	status		8204298	0					
ANR	8205230	UnaryOperationExpression	- 10		8204298	1					
ANR	8205231	UnaryOperator	-		8204298	0					
ANR	8205232	PrimaryExpression	10		8204298	1					
ANR	8205233	ReturnStatement	return ( 1 ) ;	580:8:21071:21081	8204298	1	True				
ANR	8205234	PrimaryExpression	1		8204298	0					
ANR	8205235	ReturnStatement	return ( 0 ) ;	582:4:21088:21098	8204298	35	True				
ANR	8205236	PrimaryExpression	0		8204298	0					
ANR	8205237	Statement	undef	583:1:21101:21105	8204298	36	True				
ANR	8205238	Statement	fontnames	583:7:21107:21115	8204298	37	True				
ANR	8205239	ReturnType	static int		8204298	1					
ANR	8205240	Identifier	pl_load_built_in_mtype_fonts		8204298	2					
ANR	8205241	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8204298	3					
ANR	8205242	Parameter	const char * pathname	370:29:13137:13156	8204298	0	True				
ANR	8205243	ParameterType	const char *		8204298	0					
ANR	8205244	Identifier	pathname		8204298	1					
ANR	8205245	Parameter	gs_memory_t * mem	370:51:13159:13175	8204298	1	True				
ANR	8205246	ParameterType	gs_memory_t *		8204298	0					
ANR	8205247	Identifier	mem		8204298	1					
ANR	8205248	Parameter	pl_dict_t * pfontdict	371:29:13207:13227	8204298	2	True				
ANR	8205249	ParameterType	pl_dict_t *		8204298	0					
ANR	8205250	Identifier	pfontdict		8204298	1					
ANR	8205251	Parameter	gs_font_dir * pdir	371:52:13230:13247	8204298	3	True				
ANR	8205252	ParameterType	gs_font_dir *		8204298	0					
ANR	8205253	Identifier	pdir		8204298	1					
ANR	8205254	Parameter	int storage	372:29:13279:13289	8204298	4	True				
ANR	8205255	ParameterType	int		8204298	0					
ANR	8205256	Identifier	storage		8204298	1					
ANR	8205257	Parameter	bool use_unicode_names_for_keys	372:42:13292:13322	8204298	5	True				
ANR	8205258	ParameterType	bool		8204298	0					
ANR	8205259	Identifier	use_unicode_names_for_keys		8204298	1					
ANR	8205260	CFGEntryNode	ENTRY		8204298		True				
ANR	8205261	CFGExitNode	EXIT		8204298		True				
ANR	8205262	Symbol	pl_fapi_passfont		8204298						
ANR	8205263	Symbol	* fco		8204298						
ANR	8205264	Symbol	resident_table [ j ] . full_font_name		8204298						
ANR	8205265	Symbol	pl_fapi_ufst_get_font_dir		8204298						
ANR	8205266	Symbol	* key		8204298						
ANR	8205267	Symbol	font_number		8204298						
ANR	8205268	Symbol	* resident_table		8204298						
ANR	8205269	Symbol	plfont		8204298						
ANR	8205270	Symbol	gs_font_base		8204298						
ANR	8205271	Symbol	used		8204298						
ANR	8205272	Symbol	plfont -> data_are_permanent		8204298						
ANR	8205273	Symbol	resident_table [ j ] . character_complement		8204298						
ANR	8205274	Symbol	bSize		8204298						
ANR	8205275	Symbol	gs_definefont		8204298						
ANR	8205276	Symbol	strlen		8204298						
ANR	8205277	Symbol	pl_fapi_ufst_get_fco_list		8204298						
ANR	8205278	Symbol	& st_gs_font_base		8204298						
ANR	8205279	Symbol	gs_debug_c		8204298						
ANR	8205280	Symbol	plfont -> font_type		8204298						
ANR	8205281	Symbol	resident_table		8204298						
ANR	8205282	Symbol	strcmp		8204298						
ANR	8205283	Symbol	NULL		8204298						
ANR	8205284	Symbol	plfont -> storage		8204298						
ANR	8205285	Symbol	pname		8204298						
ANR	8205286	Symbol	pdir		8204298						
ANR	8205287	Symbol	plfont -> character_complement		8204298						
ANR	8205288	Symbol	pathname		8204298						
ANR	8205289	Symbol	pl_fapi_ufst_available		8204298						
ANR	8205290	Symbol	resident_table [ j ] . font_type		8204298						
ANR	8205291	Symbol	pfontdict		8204298						
ANR	8205292	Symbol	ufst_root_dir		8204298						
ANR	8205293	Symbol	true		8204298						
ANR	8205294	Symbol	& scaleFactor		8204298						
ANR	8205295	Symbol	pl_dict_put		8204298						
ANR	8205296	Symbol	pl_alloc_font		8204298						
ANR	8205297	Symbol	status		8204298						
ANR	8205298	Symbol	pthnm		8204298						
ANR	8205299	Symbol	code		8204298						
ANR	8205300	Symbol	gs_alloc_struct		8204298						
ANR	8205301	Symbol	spaceBand		8204298						
ANR	8205302	Symbol	symname		8204298						
ANR	8205303	Symbol	storage		8204298						
ANR	8205304	Symbol	plfont -> pts_per_inch		8204298						
ANR	8205305	Symbol	fco		8204298						
ANR	8205306	Symbol	mem		8204298						
ANR	8205307	Symbol	pl_fill_in_mt_font		8204298						
ANR	8205308	Symbol	fco_lim		8204298						
ANR	8205309	Symbol	& spaceBand		8204298						
ANR	8205310	Symbol	& bSize		8204298						
ANR	8205311	Symbol	key		8204298						
ANR	8205312	Symbol	pl_dict_length		8204298						
ANR	8205313	Symbol	gs_alloc_bytes		8204298						
ANR	8205314	Symbol	resident_table [ j ] . unicode_fontname		8204298						
ANR	8205315	Symbol	pfont		8204298						
ANR	8205316	Symbol	fco_start		8204298						
ANR	8205317	Symbol	scaleFactor		8204298						
ANR	8205318	Symbol	false		8204298						
ANR	8205319	Symbol	& font_number		8204298						
ANR	8205320	Symbol	i		8204298						
ANR	8205321	Symbol	j		8204298						
ANR	8205322	Symbol	use_unicode_names_for_keys		8204298						
ANR	8205323	Symbol	k		8204298						
ANR	8205324	Symbol	pbfont		8204298						
ANR	8205325	Symbol	* i		8204298						
ANR	8205326	Symbol	* j		8204298						
ANR	8205327	Symbol	resident_table [ j ] . params		8204298						
ANR	8205328	Symbol	plfont -> params		8204298						
ANR	8205329	Symbol	* plfont		8204298						
ANR	8205330	Symbol	gp_file_name_list_separator		8204298						
ANR	8205331	Function	pl_load_built_in_fonts	588:0:21173:29265							
ANR	8205332	FunctionDef	"pl_load_built_in_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys)"		8205331	0					
ANR	8205333	CompoundStatement		592:0:21376:29265	8205331	0					
ANR	8205334	Statement	define	593:1:21379:21384	8205331	0	True				
ANR	8205335	Statement	fontnames	593:8:21386:21394	8205331	1	True				
ANR	8205336	Statement	(	593:17:21395:21395	8205331	2	True				
ANR	8205337	Statement	agfascreenfontname	593:18:21396:21413	8205331	3	True				
ANR	8205338	Statement	","	593:36:21414:21414	8205331	4	True				
ANR	8205339	Statement	agfaname	593:38:21416:21423	8205331	5	True				
ANR	8205340	Statement	","	593:46:21424:21424	8205331	6	True				
ANR	8205341	Statement	urwname	593:48:21426:21432	8205331	7	True				
ANR	8205342	Statement	)	593:55:21433:21433	8205331	8	True				
ANR	8205343	Statement	urwname	593:57:21435:21441	8205331	9	True				
ANR	8205344	Statement	include	594:1:21444:21450	8205331	10	True				
ANR	8205345	Statement	"""plftable.h"""	594:9:21452:21463	8205331	11	True				
ANR	8205346	IdentifierDeclStatement	const font_resident_t * residentp ;	595:4:21469:21501	8205331	12	True				
ANR	8205347	IdentifierDecl	* residentp		8205331	0					
ANR	8205348	IdentifierDeclType	const font_resident_t *		8205331	0					
ANR	8205349	Identifier	residentp		8205331	1					
ANR	8205350	IdentifierDeclStatement	byte key [ 3 ] ;	597:4:21568:21579	8205331	13	True				
ANR	8205351	IdentifierDecl	key [ 3 ]		8205331	0					
ANR	8205352	IdentifierDeclType	byte [ 3 ]		8205331	0					
ANR	8205353	Identifier	key		8205331	1					
ANR	8205354	PrimaryExpression	3		8205331	2					
ANR	8205355	IdentifierDeclStatement	char tmp_path_copy [ 1024 ] ;	599:4:21634:21658	8205331	14	True				
ANR	8205356	IdentifierDecl	tmp_path_copy [ 1024 ]		8205331	0					
ANR	8205357	IdentifierDeclType	char [ 1024 ]		8205331	0					
ANR	8205358	Identifier	tmp_path_copy		8205331	1					
ANR	8205359	PrimaryExpression	1024		8205331	2					
ANR	8205360	IdentifierDeclStatement	"char * tmp_pathp , * tplast = NULL ;"	600:4:21664:21695	8205331	15	True				
ANR	8205361	IdentifierDecl	* tmp_pathp		8205331	0					
ANR	8205362	IdentifierDeclType	char *		8205331	0					
ANR	8205363	Identifier	tmp_pathp		8205331	1					
ANR	8205364	IdentifierDecl	* tplast = NULL		8205331	1					
ANR	8205365	IdentifierDeclType	char *		8205331	0					
ANR	8205366	Identifier	tplast		8205331	1					
ANR	8205367	AssignmentExpression	* tplast = NULL		8205331	2		=			
ANR	8205368	Identifier	NULL		8205331	0					
ANR	8205369	Identifier	NULL		8205331	1					
ANR	8205370	IdentifierDeclStatement	bool found ;	601:4:21701:21711	8205331	16	True				
ANR	8205371	IdentifierDecl	found		8205331	0					
ANR	8205372	IdentifierDeclType	bool		8205331	0					
ANR	8205373	Identifier	found		8205331	1					
ANR	8205374	IdentifierDeclStatement	bool found_any = false ;	602:4:21717:21739	8205331	17	True				
ANR	8205375	IdentifierDecl	found_any = false		8205331	0					
ANR	8205376	IdentifierDeclType	bool		8205331	0					
ANR	8205377	Identifier	found_any		8205331	1					
ANR	8205378	AssignmentExpression	found_any = false		8205331	2		=			
ANR	8205379	Identifier	false		8205331	0					
ANR	8205380	Identifier	false		8205331	1					
ANR	8205381	IdentifierDeclStatement	"const char pattern [ ] = ""*"" ;"	603:4:21745:21771	8205331	18	True				
ANR	8205382	IdentifierDecl	"pattern [ ] = ""*"""		8205331	0					
ANR	8205383	IdentifierDeclType	const char [ ]		8205331	0					
ANR	8205384	Identifier	pattern		8205331	1					
ANR	8205385	AssignmentExpression	"pattern [ ] = ""*"""		8205331	2		=			
ANR	8205386	Identifier	pattern		8205331	0					
ANR	8205387	PrimaryExpression	"""*"""		8205331	1					
ANR	8205388	IdentifierDeclStatement	int code = 0 ;	604:4:21777:21789	8205331	19	True				
ANR	8205389	IdentifierDecl	code = 0		8205331	0					
ANR	8205390	IdentifierDeclType	int		8205331	0					
ANR	8205391	Identifier	code		8205331	1					
ANR	8205392	AssignmentExpression	code = 0		8205331	2		=			
ANR	8205393	Identifier	code		8205331	0					
ANR	8205394	PrimaryExpression	0		8205331	1					
ANR	8205395	ExpressionStatement	( void ) pl_built_in_resident_font_table_count	606:4:21796:21839	8205331	20	True				
ANR	8205396	CastExpression	( void ) pl_built_in_resident_font_table_count		8205331	0					
ANR	8205397	CastTarget	void		8205331	0					
ANR	8205398	Identifier	pl_built_in_resident_font_table_count		8205331	1					
ANR	8205399	IfStatement	"if ( ( code = pl_load_built_in_mtype_fonts ( pathname , mem , pfontdict , pdir , storage , use_unicode_names_for_keys ) ) )"		8205331	21					
ANR	8205400	Condition	"code = pl_load_built_in_mtype_fonts ( pathname , mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"	608:8:21850:22002	8205331	0	True				
ANR	8205401	AssignmentExpression	"code = pl_load_built_in_mtype_fonts ( pathname , mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8205331	0		=			
ANR	8205402	Identifier	code		8205331	0					
ANR	8205403	CallExpression	"pl_load_built_in_mtype_fonts ( pathname , mem , pfontdict , pdir , storage , use_unicode_names_for_keys )"		8205331	1					
ANR	8205404	Callee	pl_load_built_in_mtype_fonts		8205331	0					
ANR	8205405	Identifier	pl_load_built_in_mtype_fonts		8205331	0					
ANR	8205406	ArgumentList	pathname		8205331	1					
ANR	8205407	Argument	pathname		8205331	0					
ANR	8205408	Identifier	pathname		8205331	0					
ANR	8205409	Argument	mem		8205331	1					
ANR	8205410	Identifier	mem		8205331	0					
ANR	8205411	Argument	pfontdict		8205331	2					
ANR	8205412	Identifier	pfontdict		8205331	0					
ANR	8205413	Argument	pdir		8205331	3					
ANR	8205414	Identifier	pdir		8205331	0					
ANR	8205415	Argument	storage		8205331	4					
ANR	8205416	Identifier	storage		8205331	0					
ANR	8205417	Argument	use_unicode_names_for_keys		8205331	5					
ANR	8205418	Identifier	use_unicode_names_for_keys		8205331	0					
ANR	8205419	CompoundStatement		19:68:628:628	8205331	1					
ANR	8205420	ReturnStatement	return ( code ) ;	611:8:22015:22028	8205331	0	True				
ANR	8205421	Identifier	code		8205331	0					
ANR	8205422	IfStatement	"if ( pl_dict_length ( pfontdict , true ) > 0 )"		8205331	22					
ANR	8205423	Condition	"pl_dict_length ( pfontdict , true ) > 0"	614:8:22086:22120	8205331	0	True				
ANR	8205424	RelationalExpression	"pl_dict_length ( pfontdict , true ) > 0"		8205331	0		>			
ANR	8205425	CallExpression	"pl_dict_length ( pfontdict , true )"		8205331	0					
ANR	8205426	Callee	pl_dict_length		8205331	0					
ANR	8205427	Identifier	pl_dict_length		8205331	0					
ANR	8205428	ArgumentList	pfontdict		8205331	1					
ANR	8205429	Argument	pfontdict		8205331	0					
ANR	8205430	Identifier	pfontdict		8205331	0					
ANR	8205431	Argument	true		8205331	1					
ANR	8205432	Identifier	true		8205331	0					
ANR	8205433	PrimaryExpression	0		8205331	1					
ANR	8205434	CompoundStatement		23:45:746:746	8205331	1					
ANR	8205435	ReturnStatement	return 1 ;	615:8:22133:22141	8205331	0	True				
ANR	8205436	PrimaryExpression	1		8205331	0					
ANR	8205437	IfStatement	if ( pathname == NULL )		8205331	23					
ANR	8205438	Condition	pathname == NULL	618:8:22158:22173	8205331	0	True				
ANR	8205439	EqualityExpression	pathname == NULL		8205331	0		==			
ANR	8205440	Identifier	pathname		8205331	0					
ANR	8205441	Identifier	NULL		8205331	1					
ANR	8205442	CompoundStatement		27:26:799:799	8205331	1					
ANR	8205443	ReturnStatement	return 0 ;	620:8:22217:22225	8205331	0	True				
ANR	8205444	PrimaryExpression	0		8205331	0					
ANR	8205445	ExpressionStatement	"strcpy ( tmp_path_copy , pathname )"	625:4:22336:22367	8205331	24	True				
ANR	8205446	CallExpression	"strcpy ( tmp_path_copy , pathname )"		8205331	0					
ANR	8205447	Callee	strcpy		8205331	0					
ANR	8205448	Identifier	strcpy		8205331	0					
ANR	8205449	ArgumentList	tmp_path_copy		8205331	1					
ANR	8205450	Argument	tmp_path_copy		8205331	0					
ANR	8205451	Identifier	tmp_path_copy		8205331	0					
ANR	8205452	Argument	pathname		8205331	1					
ANR	8205453	Identifier	pathname		8205331	0					
ANR	8205454	ForStatement	"for ( tmp_pathp = tmp_path_copy ; ( tmp_pathp = gs_strtok ( tmp_pathp , "";"" , & tplast ) ) != NULL ; tmp_pathp = NULL )"		8205331	25					
ANR	8205455	ForInit	tmp_pathp = tmp_path_copy ;	626:9:22378:22403	8205331	0	True				
ANR	8205456	AssignmentExpression	tmp_pathp = tmp_path_copy		8205331	0		=			
ANR	8205457	Identifier	tmp_pathp		8205331	0					
ANR	8205458	Identifier	tmp_path_copy		8205331	1					
ANR	8205459	Condition	"( tmp_pathp = gs_strtok ( tmp_pathp , "";"" , & tplast ) ) != NULL"	626:36:22405:22460	8205331	1	True				
ANR	8205460	EqualityExpression	"( tmp_pathp = gs_strtok ( tmp_pathp , "";"" , & tplast ) ) != NULL"		8205331	0		!=			
ANR	8205461	AssignmentExpression	"tmp_pathp = gs_strtok ( tmp_pathp , "";"" , & tplast )"		8205331	0		=			
ANR	8205462	Identifier	tmp_pathp		8205331	0					
ANR	8205463	CallExpression	"gs_strtok ( tmp_pathp , "";"" , & tplast )"		8205331	1					
ANR	8205464	Callee	gs_strtok		8205331	0					
ANR	8205465	Identifier	gs_strtok		8205331	0					
ANR	8205466	ArgumentList	tmp_pathp		8205331	1					
ANR	8205467	Argument	tmp_pathp		8205331	0					
ANR	8205468	Identifier	tmp_pathp		8205331	0					
ANR	8205469	Argument	""";"""		8205331	1					
ANR	8205470	PrimaryExpression	""";"""		8205331	0					
ANR	8205471	Argument	& tplast		8205331	2					
ANR	8205472	UnaryOperationExpression	& tplast		8205331	0					
ANR	8205473	UnaryOperator	&		8205331	0					
ANR	8205474	Identifier	tplast		8205331	1					
ANR	8205475	Identifier	NULL		8205331	1					
ANR	8205476	AssignmentExpression	tmp_pathp = NULL	627:9:22472:22487	8205331	2	True	=			
ANR	8205477	Identifier	tmp_pathp		8205331	0					
ANR	8205478	Identifier	NULL		8205331	1					
ANR	8205479	CompoundStatement		43:8:1345:1394	8205331	3					
ANR	8205480	IdentifierDeclStatement	int code ;	628:8:22500:22508	8205331	0	True				
ANR	8205481	IdentifierDecl	code		8205331	0					
ANR	8205482	IdentifierDeclType	int		8205331	0					
ANR	8205483	Identifier	code		8205331	1					
ANR	8205484	IdentifierDeclStatement	file_enum * fe ;	629:8:22518:22531	8205331	1	True				
ANR	8205485	IdentifierDecl	* fe		8205331	0					
ANR	8205486	IdentifierDeclType	file_enum *		8205331	0					
ANR	8205487	Identifier	fe		8205331	1					
ANR	8205488	IdentifierDeclStatement	stream * in = NULL ;	630:8:22541:22558	8205331	2	True				
ANR	8205489	IdentifierDecl	* in = NULL		8205331	0					
ANR	8205490	IdentifierDeclType	stream *		8205331	0					
ANR	8205491	Identifier	in		8205331	1					
ANR	8205492	AssignmentExpression	* in = NULL		8205331	2		=			
ANR	8205493	Identifier	NULL		8205331	0					
ANR	8205494	Identifier	NULL		8205331	1					
ANR	8205495	IdentifierDeclStatement	bool append_separator = false ;	632:8:22608:22637	8205331	3	True				
ANR	8205496	IdentifierDecl	append_separator = false		8205331	0					
ANR	8205497	IdentifierDeclType	bool		8205331	0					
ANR	8205498	Identifier	append_separator		8205331	1					
ANR	8205499	AssignmentExpression	append_separator = false		8205331	2		=			
ANR	8205500	Identifier	false		8205331	0					
ANR	8205501	Identifier	false		8205331	1					
ANR	8205502	IdentifierDeclStatement	int separator_length = strlen ( gp_file_name_directory_separator ( ) ) ;	633:8:22647:22712	8205331	4	True				
ANR	8205503	IdentifierDecl	separator_length = strlen ( gp_file_name_directory_separator ( ) )		8205331	0					
ANR	8205504	IdentifierDeclType	int		8205331	0					
ANR	8205505	Identifier	separator_length		8205331	1					
ANR	8205506	AssignmentExpression	separator_length = strlen ( gp_file_name_directory_separator ( ) )		8205331	2		=			
ANR	8205507	Identifier	separator_length		8205331	0					
ANR	8205508	CallExpression	strlen ( gp_file_name_directory_separator ( ) )		8205331	1					
ANR	8205509	Callee	strlen		8205331	0					
ANR	8205510	Identifier	strlen		8205331	0					
ANR	8205511	ArgumentList	gp_file_name_directory_separator ( )		8205331	1					
ANR	8205512	Argument	gp_file_name_directory_separator ( )		8205331	0					
ANR	8205513	CallExpression	gp_file_name_directory_separator ( )		8205331	0					
ANR	8205514	Callee	gp_file_name_directory_separator		8205331	0					
ANR	8205515	Identifier	gp_file_name_directory_separator		8205331	0					
ANR	8205516	ArgumentList			8205331	1					
ANR	8205517	IdentifierDeclStatement	int offset = strlen ( tmp_pathp ) - separator_length ;	634:8:22722:22771	8205331	5	True				
ANR	8205518	IdentifierDecl	offset = strlen ( tmp_pathp ) - separator_length		8205331	0					
ANR	8205519	IdentifierDeclType	int		8205331	0					
ANR	8205520	Identifier	offset		8205331	1					
ANR	8205521	AssignmentExpression	offset = strlen ( tmp_pathp ) - separator_length		8205331	2		=			
ANR	8205522	Identifier	offset		8205331	0					
ANR	8205523	AdditiveExpression	strlen ( tmp_pathp ) - separator_length		8205331	1		-			
ANR	8205524	CallExpression	strlen ( tmp_pathp )		8205331	0					
ANR	8205525	Callee	strlen		8205331	0					
ANR	8205526	Identifier	strlen		8205331	0					
ANR	8205527	ArgumentList	tmp_pathp		8205331	1					
ANR	8205528	Argument	tmp_pathp		8205331	0					
ANR	8205529	Identifier	tmp_pathp		8205331	0					
ANR	8205530	Identifier	separator_length		8205331	1					
ANR	8205531	IfStatement	"if ( strcmp ( tmp_pathp + offset , gp_file_name_directory_separator ( ) ) != 0 )"		8205331	6					
ANR	8205532	Condition	"strcmp ( tmp_pathp + offset , gp_file_name_directory_separator ( ) ) != 0"	637:12:22858:22936	8205331	0	True				
ANR	8205533	EqualityExpression	"strcmp ( tmp_pathp + offset , gp_file_name_directory_separator ( ) ) != 0"		8205331	0		!=			
ANR	8205534	CallExpression	"strcmp ( tmp_pathp + offset , gp_file_name_directory_separator ( ) )"		8205331	0					
ANR	8205535	Callee	strcmp		8205331	0					
ANR	8205536	Identifier	strcmp		8205331	0					
ANR	8205537	ArgumentList	tmp_pathp + offset		8205331	1					
ANR	8205538	Argument	tmp_pathp + offset		8205331	0					
ANR	8205539	AdditiveExpression	tmp_pathp + offset		8205331	0		+			
ANR	8205540	Identifier	tmp_pathp		8205331	0					
ANR	8205541	Identifier	offset		8205331	1					
ANR	8205542	Argument	gp_file_name_directory_separator ( )		8205331	1					
ANR	8205543	CallExpression	gp_file_name_directory_separator ( )		8205331	0					
ANR	8205544	Callee	gp_file_name_directory_separator		8205331	0					
ANR	8205545	Identifier	gp_file_name_directory_separator		8205331	0					
ANR	8205546	ArgumentList			8205331	1					
ANR	8205547	PrimaryExpression	0		8205331	1					
ANR	8205548	ExpressionStatement	append_separator = true	639:12:22951:22974	8205331	1	True				
ANR	8205549	AssignmentExpression	append_separator = true		8205331	0		=			
ANR	8205550	Identifier	append_separator		8205331	0					
ANR	8205551	Identifier	true		8205331	1					
ANR	8205552	IfStatement	if ( ( strlen ( pattern ) + strlen ( tmp_pathp ) + 1 ) + ( append_separator ? separator_length : 0 ) > sizeof ( tmp_path_copy ) )		8205331	7					
ANR	8205553	Condition	( strlen ( pattern ) + strlen ( tmp_pathp ) + 1 ) + ( append_separator ? separator_length : 0 ) > sizeof ( tmp_path_copy )	642:12:23032:23177	8205331	0	True				
ANR	8205554	RelationalExpression	( strlen ( pattern ) + strlen ( tmp_pathp ) + 1 ) + ( append_separator ? separator_length : 0 ) > sizeof ( tmp_path_copy )		8205331	0		>			
ANR	8205555	AdditiveExpression	( strlen ( pattern ) + strlen ( tmp_pathp ) + 1 ) + ( append_separator ? separator_length : 0 )		8205331	0		+			
ANR	8205556	AdditiveExpression	strlen ( pattern ) + strlen ( tmp_pathp ) + 1		8205331	0		+			
ANR	8205557	CallExpression	strlen ( pattern )		8205331	0					
ANR	8205558	Callee	strlen		8205331	0					
ANR	8205559	Identifier	strlen		8205331	0					
ANR	8205560	ArgumentList	pattern		8205331	1					
ANR	8205561	Argument	pattern		8205331	0					
ANR	8205562	Identifier	pattern		8205331	0					
ANR	8205563	AdditiveExpression	strlen ( tmp_pathp ) + 1		8205331	1		+			
ANR	8205564	CallExpression	strlen ( tmp_pathp )		8205331	0					
ANR	8205565	Callee	strlen		8205331	0					
ANR	8205566	Identifier	strlen		8205331	0					
ANR	8205567	ArgumentList	tmp_pathp		8205331	1					
ANR	8205568	Argument	tmp_pathp		8205331	0					
ANR	8205569	Identifier	tmp_pathp		8205331	0					
ANR	8205570	PrimaryExpression	1		8205331	1					
ANR	8205571	ConditionalExpression	append_separator ? separator_length : 0		8205331	1					
ANR	8205572	Condition	append_separator		8205331	0					
ANR	8205573	Identifier	append_separator		8205331	0					
ANR	8205574	Identifier	separator_length		8205331	1					
ANR	8205575	PrimaryExpression	0		8205331	2					
ANR	8205576	SizeofExpression	sizeof ( tmp_path_copy )		8205331	1					
ANR	8205577	Sizeof	sizeof		8205331	0					
ANR	8205578	SizeofOperand	tmp_path_copy		8205331	1					
ANR	8205579	CompoundStatement		54:35:1803:1803	8205331	1					
ANR	8205580	ExpressionStatement	"dmprintf1 ( mem , ""path name %s too long\\n"" , tmp_pathp )"	646:12:23194:23246	8205331	0	True				
ANR	8205581	CallExpression	"dmprintf1 ( mem , ""path name %s too long\\n"" , tmp_pathp )"		8205331	0					
ANR	8205582	Callee	dmprintf1		8205331	0					
ANR	8205583	Identifier	dmprintf1		8205331	0					
ANR	8205584	ArgumentList	mem		8205331	1					
ANR	8205585	Argument	mem		8205331	0					
ANR	8205586	Identifier	mem		8205331	0					
ANR	8205587	Argument	"""path name %s too long\\n"""		8205331	1					
ANR	8205588	PrimaryExpression	"""path name %s too long\\n"""		8205331	0					
ANR	8205589	Argument	tmp_pathp		8205331	2					
ANR	8205590	Identifier	tmp_pathp		8205331	0					
ANR	8205591	ContinueStatement	continue ;	647:12:23260:23268	8205331	1	True				
ANR	8205592	ExpressionStatement	"memmove ( tmp_path_copy , tmp_pathp , strlen ( tmp_pathp ) + 1 )"	650:8:23289:23345	8205331	8	True				
ANR	8205593	CallExpression	"memmove ( tmp_path_copy , tmp_pathp , strlen ( tmp_pathp ) + 1 )"		8205331	0					
ANR	8205594	Callee	memmove		8205331	0					
ANR	8205595	Identifier	memmove		8205331	0					
ANR	8205596	ArgumentList	tmp_path_copy		8205331	1					
ANR	8205597	Argument	tmp_path_copy		8205331	0					
ANR	8205598	Identifier	tmp_path_copy		8205331	0					
ANR	8205599	Argument	tmp_pathp		8205331	1					
ANR	8205600	Identifier	tmp_pathp		8205331	0					
ANR	8205601	Argument	strlen ( tmp_pathp ) + 1		8205331	2					
ANR	8205602	AdditiveExpression	strlen ( tmp_pathp ) + 1		8205331	0		+			
ANR	8205603	CallExpression	strlen ( tmp_pathp )		8205331	0					
ANR	8205604	Callee	strlen		8205331	0					
ANR	8205605	Identifier	strlen		8205331	0					
ANR	8205606	ArgumentList	tmp_pathp		8205331	1					
ANR	8205607	Argument	tmp_pathp		8205331	0					
ANR	8205608	Identifier	tmp_pathp		8205331	0					
ANR	8205609	PrimaryExpression	1		8205331	1					
ANR	8205610	IfStatement	if ( append_separator == true )		8205331	9					
ANR	8205611	Condition	append_separator == true	652:12:23360:23383	8205331	0	True				
ANR	8205612	EqualityExpression	append_separator == true		8205331	0		==			
ANR	8205613	Identifier	append_separator		8205331	0					
ANR	8205614	Identifier	true		8205331	1					
ANR	8205615	ExpressionStatement	"strcat ( tmp_path_copy , gp_file_name_directory_separator ( ) )"	653:12:23398:23455	8205331	1	True				
ANR	8205616	CallExpression	"strcat ( tmp_path_copy , gp_file_name_directory_separator ( ) )"		8205331	0					
ANR	8205617	Callee	strcat		8205331	0					
ANR	8205618	Identifier	strcat		8205331	0					
ANR	8205619	ArgumentList	tmp_path_copy		8205331	1					
ANR	8205620	Argument	tmp_path_copy		8205331	0					
ANR	8205621	Identifier	tmp_path_copy		8205331	0					
ANR	8205622	Argument	gp_file_name_directory_separator ( )		8205331	1					
ANR	8205623	CallExpression	gp_file_name_directory_separator ( )		8205331	0					
ANR	8205624	Callee	gp_file_name_directory_separator		8205331	0					
ANR	8205625	Identifier	gp_file_name_directory_separator		8205331	0					
ANR	8205626	ArgumentList			8205331	1					
ANR	8205627	ExpressionStatement	"strcat ( tmp_path_copy , pattern )"	656:8:23536:23566	8205331	10	True				
ANR	8205628	CallExpression	"strcat ( tmp_path_copy , pattern )"		8205331	0					
ANR	8205629	Callee	strcat		8205331	0					
ANR	8205630	Identifier	strcat		8205331	0					
ANR	8205631	ArgumentList	tmp_path_copy		8205331	1					
ANR	8205632	Argument	tmp_path_copy		8205331	0					
ANR	8205633	Identifier	tmp_path_copy		8205331	0					
ANR	8205634	Argument	pattern		8205331	1					
ANR	8205635	Identifier	pattern		8205331	0					
ANR	8205636	ExpressionStatement	"fe = gs_enumerate_files_init ( tmp_path_copy , strlen ( tmp_path_copy ) , mem )"	659:8:23631:23739	8205331	11	True				
ANR	8205637	AssignmentExpression	"fe = gs_enumerate_files_init ( tmp_path_copy , strlen ( tmp_path_copy ) , mem )"		8205331	0		=			
ANR	8205638	Identifier	fe		8205331	0					
ANR	8205639	CallExpression	"gs_enumerate_files_init ( tmp_path_copy , strlen ( tmp_path_copy ) , mem )"		8205331	1					
ANR	8205640	Callee	gs_enumerate_files_init		8205331	0					
ANR	8205641	Identifier	gs_enumerate_files_init		8205331	0					
ANR	8205642	ArgumentList	tmp_path_copy		8205331	1					
ANR	8205643	Argument	tmp_path_copy		8205331	0					
ANR	8205644	Identifier	tmp_path_copy		8205331	0					
ANR	8205645	Argument	strlen ( tmp_path_copy )		8205331	1					
ANR	8205646	CallExpression	strlen ( tmp_path_copy )		8205331	0					
ANR	8205647	Callee	strlen		8205331	0					
ANR	8205648	Identifier	strlen		8205331	0					
ANR	8205649	ArgumentList	tmp_path_copy		8205331	1					
ANR	8205650	Argument	tmp_path_copy		8205331	0					
ANR	8205651	Identifier	tmp_path_copy		8205331	0					
ANR	8205652	Argument	mem		8205331	2					
ANR	8205653	Identifier	mem		8205331	0					
ANR	8205654	WhileStatement	"while ( ( code = gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) ) ) >= 0 )"		8205331	12					
ANR	8205655	Condition	"( code = gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) ) ) >= 0"	663:15:23794:23966	8205331	0	True				
ANR	8205656	RelationalExpression	"( code = gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) ) ) >= 0"		8205331	0		>=			
ANR	8205657	AssignmentExpression	"code = gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) )"		8205331	0		=			
ANR	8205658	Identifier	code		8205331	0					
ANR	8205659	CallExpression	"gs_enumerate_files_next ( fe , tmp_path_copy , sizeof ( tmp_path_copy ) )"		8205331	1					
ANR	8205660	Callee	gs_enumerate_files_next		8205331	0					
ANR	8205661	Identifier	gs_enumerate_files_next		8205331	0					
ANR	8205662	ArgumentList	fe		8205331	1					
ANR	8205663	Argument	fe		8205331	0					
ANR	8205664	Identifier	fe		8205331	0					
ANR	8205665	Argument	tmp_path_copy		8205331	1					
ANR	8205666	Identifier	tmp_path_copy		8205331	0					
ANR	8205667	Argument	sizeof ( tmp_path_copy )		8205331	2					
ANR	8205668	SizeofExpression	sizeof ( tmp_path_copy )		8205331	0					
ANR	8205669	Sizeof	sizeof		8205331	0					
ANR	8205670	SizeofOperand	tmp_path_copy		8205331	1					
ANR	8205671	PrimaryExpression	0		8205331	1					
ANR	8205672	CompoundStatement		76:12:2637:2654	8205331	1					
ANR	8205673	IdentifierDeclStatement	char buffer [ 1024 ] ;	666:12:23983:24000	8205331	0	True				
ANR	8205674	IdentifierDecl	buffer [ 1024 ]		8205331	0					
ANR	8205675	IdentifierDeclType	char [ 1024 ]		8205331	0					
ANR	8205676	Identifier	buffer		8205331	1					
ANR	8205677	PrimaryExpression	1024		8205331	2					
ANR	8205678	IdentifierDeclStatement	pl_font_t * plfont ;	667:12:24014:24031	8205331	1	True				
ANR	8205679	IdentifierDecl	* plfont		8205331	0					
ANR	8205680	IdentifierDeclType	pl_font_t *		8205331	0					
ANR	8205681	Identifier	plfont		8205331	1					
ANR	8205682	IfStatement	if ( code > sizeof ( tmp_path_copy ) )		8205331	2					
ANR	8205683	Condition	code > sizeof ( tmp_path_copy )	669:16:24050:24077	8205331	0	True				
ANR	8205684	RelationalExpression	code > sizeof ( tmp_path_copy )		8205331	0		>			
ANR	8205685	Identifier	code		8205331	0					
ANR	8205686	SizeofExpression	sizeof ( tmp_path_copy )		8205331	1					
ANR	8205687	Sizeof	sizeof		8205331	0					
ANR	8205688	SizeofOperand	tmp_path_copy		8205331	1					
ANR	8205689	CompoundStatement		78:46:2703:2703	8205331	1					
ANR	8205690	ExpressionStatement	"dmprintf ( mem , ""filename length exceeds file name storage buffer length\\n"" )"	670:16:24098:24197	8205331	0	True				
ANR	8205691	CallExpression	"dmprintf ( mem , ""filename length exceeds file name storage buffer length\\n"" )"		8205331	0					
ANR	8205692	Callee	dmprintf		8205331	0					
ANR	8205693	Identifier	dmprintf		8205331	0					
ANR	8205694	ArgumentList	mem		8205331	1					
ANR	8205695	Argument	mem		8205331	0					
ANR	8205696	Identifier	mem		8205331	0					
ANR	8205697	Argument	"""filename length exceeds file name storage buffer length\\n"""		8205331	1					
ANR	8205698	PrimaryExpression	"""filename length exceeds file name storage buffer length\\n"""		8205331	0					
ANR	8205699	ContinueStatement	continue ;	672:16:24215:24223	8205331	1	True				
ANR	8205700	ExpressionStatement	tmp_path_copy [ code ] = '\\0'	675:12:24295:24321	8205331	3	True				
ANR	8205701	AssignmentExpression	tmp_path_copy [ code ] = '\\0'		8205331	0		=			
ANR	8205702	ArrayIndexing	tmp_path_copy [ code ]		8205331	0					
ANR	8205703	Identifier	tmp_path_copy		8205331	0					
ANR	8205704	Identifier	code		8205331	1					
ANR	8205705	PrimaryExpression	'\\0'		8205331	1					
ANR	8205706	ExpressionStatement	"in = sfopen ( tmp_path_copy , ""r"" , mem )"	677:12:24336:24372	8205331	4	True				
ANR	8205707	AssignmentExpression	"in = sfopen ( tmp_path_copy , ""r"" , mem )"		8205331	0		=			
ANR	8205708	Identifier	in		8205331	0					
ANR	8205709	CallExpression	"sfopen ( tmp_path_copy , ""r"" , mem )"		8205331	1					
ANR	8205710	Callee	sfopen		8205331	0					
ANR	8205711	Identifier	sfopen		8205331	0					
ANR	8205712	ArgumentList	tmp_path_copy		8205331	1					
ANR	8205713	Argument	tmp_path_copy		8205331	0					
ANR	8205714	Identifier	tmp_path_copy		8205331	0					
ANR	8205715	Argument	"""r"""		8205331	1					
ANR	8205716	PrimaryExpression	"""r"""		8205331	0					
ANR	8205717	Argument	mem		8205331	2					
ANR	8205718	Identifier	mem		8205331	0					
ANR	8205719	IfStatement	if ( in == NULL )		8205331	5					
ANR	8205720	Condition	in == NULL	678:16:24390:24399	8205331	0	True				
ANR	8205721	EqualityExpression	in == NULL		8205331	0		==			
ANR	8205722	Identifier	in		8205331	0					
ANR	8205723	Identifier	NULL		8205331	1					
ANR	8205724	CompoundStatement		87:28:3025:3025	8205331	1					
ANR	8205725	ExpressionStatement	"dmprintf1 ( mem , ""cannot open file %s\\n"" , tmp_path_copy )"	679:16:24445:24499	8205331	0	True				
ANR	8205726	CallExpression	"dmprintf1 ( mem , ""cannot open file %s\\n"" , tmp_path_copy )"		8205331	0					
ANR	8205727	Callee	dmprintf1		8205331	0					
ANR	8205728	Identifier	dmprintf1		8205331	0					
ANR	8205729	ArgumentList	mem		8205331	1					
ANR	8205730	Argument	mem		8205331	0					
ANR	8205731	Identifier	mem		8205331	0					
ANR	8205732	Argument	"""cannot open file %s\\n"""		8205331	1					
ANR	8205733	PrimaryExpression	"""cannot open file %s\\n"""		8205331	0					
ANR	8205734	Argument	tmp_path_copy		8205331	2					
ANR	8205735	Identifier	tmp_path_copy		8205331	0					
ANR	8205736	ContinueStatement	continue ;	680:16:24517:24525	8205331	1	True				
ANR	8205737	ExpressionStatement	"code = get_name_from_tt_file ( in , mem , buffer , PSNAME )"	683:12:24554:24607	8205331	6	True				
ANR	8205738	AssignmentExpression	"code = get_name_from_tt_file ( in , mem , buffer , PSNAME )"		8205331	0		=			
ANR	8205739	Identifier	code		8205331	0					
ANR	8205740	CallExpression	"get_name_from_tt_file ( in , mem , buffer , PSNAME )"		8205331	1					
ANR	8205741	Callee	get_name_from_tt_file		8205331	0					
ANR	8205742	Identifier	get_name_from_tt_file		8205331	0					
ANR	8205743	ArgumentList	in		8205331	1					
ANR	8205744	Argument	in		8205331	0					
ANR	8205745	Identifier	in		8205331	0					
ANR	8205746	Argument	mem		8205331	1					
ANR	8205747	Identifier	mem		8205331	0					
ANR	8205748	Argument	buffer		8205331	2					
ANR	8205749	Identifier	buffer		8205331	0					
ANR	8205750	Argument	PSNAME		8205331	3					
ANR	8205751	Identifier	PSNAME		8205331	0					
ANR	8205752	IfStatement	if ( code < 0 )		8205331	7					
ANR	8205753	Condition	code < 0	684:16:24625:24632	8205331	0	True				
ANR	8205754	RelationalExpression	code < 0		8205331	0		<			
ANR	8205755	Identifier	code		8205331	0					
ANR	8205756	PrimaryExpression	0		8205331	1					
ANR	8205757	CompoundStatement		93:26:3258:3258	8205331	1					
ANR	8205758	ExpressionStatement	"dmprintf1 ( mem , ""input output failure on TrueType File %s\\n"" , tmp_path_copy )"	685:16:24653:24754	8205331	0	True				
ANR	8205759	CallExpression	"dmprintf1 ( mem , ""input output failure on TrueType File %s\\n"" , tmp_path_copy )"		8205331	0					
ANR	8205760	Callee	dmprintf1		8205331	0					
ANR	8205761	Identifier	dmprintf1		8205331	0					
ANR	8205762	ArgumentList	mem		8205331	1					
ANR	8205763	Argument	mem		8205331	0					
ANR	8205764	Identifier	mem		8205331	0					
ANR	8205765	Argument	"""input output failure on TrueType File %s\\n"""		8205331	1					
ANR	8205766	PrimaryExpression	"""input output failure on TrueType File %s\\n"""		8205331	0					
ANR	8205767	Argument	tmp_path_copy		8205331	2					
ANR	8205768	Identifier	tmp_path_copy		8205331	0					
ANR	8205769	ExpressionStatement	sfclose ( in )	687:16:24772:24783	8205331	1	True				
ANR	8205770	CallExpression	sfclose ( in )		8205331	0					
ANR	8205771	Callee	sfclose		8205331	0					
ANR	8205772	Identifier	sfclose		8205331	0					
ANR	8205773	ArgumentList	in		8205331	1					
ANR	8205774	Argument	in		8205331	0					
ANR	8205775	Identifier	in		8205331	0					
ANR	8205776	ContinueStatement	continue ;	688:16:24801:24809	8205331	2	True				
ANR	8205777	IfStatement	if ( strlen ( buffer ) == 0 )		8205331	8					
ANR	8205778	Condition	strlen ( buffer ) == 0	691:16:24842:24860	8205331	0	True				
ANR	8205779	EqualityExpression	strlen ( buffer ) == 0		8205331	0		==			
ANR	8205780	CallExpression	strlen ( buffer )		8205331	0					
ANR	8205781	Callee	strlen		8205331	0					
ANR	8205782	Identifier	strlen		8205331	0					
ANR	8205783	ArgumentList	buffer		8205331	1					
ANR	8205784	Argument	buffer		8205331	0					
ANR	8205785	Identifier	buffer		8205331	0					
ANR	8205786	PrimaryExpression	0		8205331	1					
ANR	8205787	CompoundStatement		100:37:3486:3486	8205331	1					
ANR	8205788	ExpressionStatement	"dmprintf1 ( mem , ""could not extract font file name from file %s\\n"" , tmp_path_copy )"	692:16:24881:25013	8205331	0	True				
ANR	8205789	CallExpression	"dmprintf1 ( mem , ""could not extract font file name from file %s\\n"" , tmp_path_copy )"		8205331	0					
ANR	8205790	Callee	dmprintf1		8205331	0					
ANR	8205791	Identifier	dmprintf1		8205331	0					
ANR	8205792	ArgumentList	mem		8205331	1					
ANR	8205793	Argument	mem		8205331	0					
ANR	8205794	Identifier	mem		8205331	0					
ANR	8205795	Argument	"""could not extract font file name from file %s\\n"""		8205331	1					
ANR	8205796	PrimaryExpression	"""could not extract font file name from file %s\\n"""		8205331	0					
ANR	8205797	Argument	tmp_path_copy		8205331	2					
ANR	8205798	Identifier	tmp_path_copy		8205331	0					
ANR	8205799	ExpressionStatement	sfclose ( in )	695:16:25031:25042	8205331	1	True				
ANR	8205800	CallExpression	sfclose ( in )		8205331	0					
ANR	8205801	Callee	sfclose		8205331	0					
ANR	8205802	Identifier	sfclose		8205331	0					
ANR	8205803	ArgumentList	in		8205331	1					
ANR	8205804	Argument	in		8205331	0					
ANR	8205805	Identifier	in		8205331	0					
ANR	8205806	ContinueStatement	continue ;	696:16:25060:25068	8205331	2	True				
ANR	8205807	ExpressionStatement	found = false	700:12:25163:25176	8205331	9	True				
ANR	8205808	AssignmentExpression	found = false		8205331	0		=			
ANR	8205809	Identifier	found		8205331	0					
ANR	8205810	Identifier	false		8205331	1					
ANR	8205811	ForStatement	for ( residentp = resident_table ; strlen ( residentp -> full_font_name ) ; ++ residentp )		8205331	10					
ANR	8205812	ForInit	residentp = resident_table ;	701:17:25195:25221	8205331	0	True				
ANR	8205813	AssignmentExpression	residentp = resident_table		8205331	0		=			
ANR	8205814	Identifier	residentp		8205331	0					
ANR	8205815	Identifier	resident_table		8205331	1					
ANR	8205816	Condition	strlen ( residentp -> full_font_name )	702:17:25240:25272	8205331	1	True				
ANR	8205817	CallExpression	strlen ( residentp -> full_font_name )		8205331	0					
ANR	8205818	Callee	strlen		8205331	0					
ANR	8205819	Identifier	strlen		8205331	0					
ANR	8205820	ArgumentList	residentp -> full_font_name		8205331	1					
ANR	8205821	Argument	residentp -> full_font_name		8205331	0					
ANR	8205822	PtrMemberAccess	residentp -> full_font_name		8205331	0					
ANR	8205823	Identifier	residentp		8205331	0					
ANR	8205824	Identifier	full_font_name		8205331	1					
ANR	8205825	UnaryExpression	++ residentp	702:52:25275:25285	8205331	2	True				
ANR	8205826	IncDec	++		8205331	0					
ANR	8205827	Identifier	residentp		8205331	1					
ANR	8205828	CompoundStatement		111:65:3911:3911	8205331	3					
ANR	8205829	IfStatement	"if ( strcmp ( buffer , residentp -> full_font_name ) != 0 )"		8205331	0					
ANR	8205830	Condition	"strcmp ( buffer , residentp -> full_font_name ) != 0"	703:20:25310:25355	8205331	0	True				
ANR	8205831	EqualityExpression	"strcmp ( buffer , residentp -> full_font_name ) != 0"		8205331	0		!=			
ANR	8205832	CallExpression	"strcmp ( buffer , residentp -> full_font_name )"		8205331	0					
ANR	8205833	Callee	strcmp		8205331	0					
ANR	8205834	Identifier	strcmp		8205331	0					
ANR	8205835	ArgumentList	buffer		8205331	1					
ANR	8205836	Argument	buffer		8205331	0					
ANR	8205837	Identifier	buffer		8205331	0					
ANR	8205838	Argument	residentp -> full_font_name		8205331	1					
ANR	8205839	PtrMemberAccess	residentp -> full_font_name		8205331	0					
ANR	8205840	Identifier	residentp		8205331	0					
ANR	8205841	Identifier	full_font_name		8205331	1					
ANR	8205842	PrimaryExpression	0		8205331	1					
ANR	8205843	ContinueStatement	continue ;	704:20:25378:25386	8205331	1	True				
ANR	8205844	IfStatement	"if ( pl_load_tt_font ( in , pdir , mem , gs_next_ids ( mem , 1 ) , & plfont , buffer ) < 0 )"		8205331	1					
ANR	8205845	Condition	"pl_load_tt_font ( in , pdir , mem , gs_next_ids ( mem , 1 ) , & plfont , buffer ) < 0"	706:20:25500:25643	8205331	0	True				
ANR	8205846	RelationalExpression	"pl_load_tt_font ( in , pdir , mem , gs_next_ids ( mem , 1 ) , & plfont , buffer ) < 0"		8205331	0		<			
ANR	8205847	CallExpression	"pl_load_tt_font ( in , pdir , mem , gs_next_ids ( mem , 1 ) , & plfont , buffer )"		8205331	0					
ANR	8205848	Callee	pl_load_tt_font		8205331	0					
ANR	8205849	Identifier	pl_load_tt_font		8205331	0					
ANR	8205850	ArgumentList	in		8205331	1					
ANR	8205851	Argument	in		8205331	0					
ANR	8205852	Identifier	in		8205331	0					
ANR	8205853	Argument	pdir		8205331	1					
ANR	8205854	Identifier	pdir		8205331	0					
ANR	8205855	Argument	mem		8205331	2					
ANR	8205856	Identifier	mem		8205331	0					
ANR	8205857	Argument	"gs_next_ids ( mem , 1 )"		8205331	3					
ANR	8205858	CallExpression	"gs_next_ids ( mem , 1 )"		8205331	0					
ANR	8205859	Callee	gs_next_ids		8205331	0					
ANR	8205860	Identifier	gs_next_ids		8205331	0					
ANR	8205861	ArgumentList	mem		8205331	1					
ANR	8205862	Argument	mem		8205331	0					
ANR	8205863	Identifier	mem		8205331	0					
ANR	8205864	Argument	1		8205331	1					
ANR	8205865	PrimaryExpression	1		8205331	0					
ANR	8205866	Argument	& plfont		8205331	4					
ANR	8205867	UnaryOperationExpression	& plfont		8205331	0					
ANR	8205868	UnaryOperator	&		8205331	0					
ANR	8205869	Identifier	plfont		8205331	1					
ANR	8205870	Argument	buffer		8205331	5					
ANR	8205871	Identifier	buffer		8205331	0					
ANR	8205872	PrimaryExpression	0		8205331	1					
ANR	8205873	CompoundStatement		117:49:4269:4269	8205331	1					
ANR	8205874	ExpressionStatement	gs_enumerate_files_close ( fe )	710:20:25703:25731	8205331	0	True				
ANR	8205875	CallExpression	gs_enumerate_files_close ( fe )		8205331	0					
ANR	8205876	Callee	gs_enumerate_files_close		8205331	0					
ANR	8205877	Identifier	gs_enumerate_files_close		8205331	0					
ANR	8205878	ArgumentList	fe		8205331	1					
ANR	8205879	Argument	fe		8205331	0					
ANR	8205880	Identifier	fe		8205331	0					
ANR	8205881	ReturnStatement	"return gs_throw1 ( 0 , ""An unrecoverable failure occurred while reading the resident font %s\\n"" , tmp_path_copy ) ;"	711:20:25753:25935	8205331	1	True				
ANR	8205882	CallExpression	"gs_throw1 ( 0 , ""An unrecoverable failure occurred while reading the resident font %s\\n"" , tmp_path_copy )"		8205331	0					
ANR	8205883	Callee	gs_throw1		8205331	0					
ANR	8205884	Identifier	gs_throw1		8205331	0					
ANR	8205885	ArgumentList	0		8205331	1					
ANR	8205886	Argument	0		8205331	0					
ANR	8205887	PrimaryExpression	0		8205331	0					
ANR	8205888	Argument	"""An unrecoverable failure occurred while reading the resident font %s\\n"""		8205331	1					
ANR	8205889	PrimaryExpression	"""An unrecoverable failure occurred while reading the resident font %s\\n"""		8205331	0					
ANR	8205890	Argument	tmp_path_copy		8205331	2					
ANR	8205891	Identifier	tmp_path_copy		8205331	0					
ANR	8205892	ExpressionStatement	"in = sfopen ( tmp_path_copy , ""r"" , mem )"	716:16:26009:26045	8205331	2	True				
ANR	8205893	AssignmentExpression	"in = sfopen ( tmp_path_copy , ""r"" , mem )"		8205331	0		=			
ANR	8205894	Identifier	in		8205331	0					
ANR	8205895	CallExpression	"sfopen ( tmp_path_copy , ""r"" , mem )"		8205331	1					
ANR	8205896	Callee	sfopen		8205331	0					
ANR	8205897	Identifier	sfopen		8205331	0					
ANR	8205898	ArgumentList	tmp_path_copy		8205331	1					
ANR	8205899	Argument	tmp_path_copy		8205331	0					
ANR	8205900	Identifier	tmp_path_copy		8205331	0					
ANR	8205901	Argument	"""r"""		8205331	1					
ANR	8205902	PrimaryExpression	"""r"""		8205331	0					
ANR	8205903	Argument	mem		8205331	2					
ANR	8205904	Identifier	mem		8205331	0					
ANR	8205905	IfStatement	if ( in == NULL )		8205331	3					
ANR	8205906	Condition	in == NULL	717:20:26067:26076	8205331	0	True				
ANR	8205907	EqualityExpression	in == NULL		8205331	0		==			
ANR	8205908	Identifier	in		8205331	0					
ANR	8205909	Identifier	NULL		8205331	1					
ANR	8205910	CompoundStatement		126:32:4702:4702	8205331	1					
ANR	8205911	ExpressionStatement	"gs_free_object ( mem , plfont -> pfont , ""pl_tt_load_font(gs_font_type42)"" )"	718:20:26101:26170	8205331	0	True				
ANR	8205912	CallExpression	"gs_free_object ( mem , plfont -> pfont , ""pl_tt_load_font(gs_font_type42)"" )"		8205331	0					
ANR	8205913	Callee	gs_free_object		8205331	0					
ANR	8205914	Identifier	gs_free_object		8205331	0					
ANR	8205915	ArgumentList	mem		8205331	1					
ANR	8205916	Argument	mem		8205331	0					
ANR	8205917	Identifier	mem		8205331	0					
ANR	8205918	Argument	plfont -> pfont		8205331	1					
ANR	8205919	PtrMemberAccess	plfont -> pfont		8205331	0					
ANR	8205920	Identifier	plfont		8205331	0					
ANR	8205921	Identifier	pfont		8205331	1					
ANR	8205922	Argument	"""pl_tt_load_font(gs_font_type42)"""		8205331	2					
ANR	8205923	PrimaryExpression	"""pl_tt_load_font(gs_font_type42)"""		8205331	0					
ANR	8205924	ExpressionStatement	"pl_free_tt_fontfile_buffer ( mem , plfont -> header )"	719:20:26192:26239	8205331	1	True				
ANR	8205925	CallExpression	"pl_free_tt_fontfile_buffer ( mem , plfont -> header )"		8205331	0					
ANR	8205926	Callee	pl_free_tt_fontfile_buffer		8205331	0					
ANR	8205927	Identifier	pl_free_tt_fontfile_buffer		8205331	0					
ANR	8205928	ArgumentList	mem		8205331	1					
ANR	8205929	Argument	mem		8205331	0					
ANR	8205930	Identifier	mem		8205331	0					
ANR	8205931	Argument	plfont -> header		8205331	1					
ANR	8205932	PtrMemberAccess	plfont -> header		8205331	0					
ANR	8205933	Identifier	plfont		8205331	0					
ANR	8205934	Identifier	header		8205331	1					
ANR	8205935	ExpressionStatement	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"	720:20:26261:26318	8205331	2	True				
ANR	8205936	CallExpression	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"		8205331	0					
ANR	8205937	Callee	gs_free_object		8205331	0					
ANR	8205938	Identifier	gs_free_object		8205331	0					
ANR	8205939	ArgumentList	mem		8205331	1					
ANR	8205940	Argument	mem		8205331	0					
ANR	8205941	Identifier	mem		8205331	0					
ANR	8205942	Argument	plfont		8205331	1					
ANR	8205943	Identifier	plfont		8205331	0					
ANR	8205944	Argument	"""pl_tt_load_font(pl_font_t)"""		8205331	2					
ANR	8205945	PrimaryExpression	"""pl_tt_load_font(pl_font_t)"""		8205331	0					
ANR	8205946	ExpressionStatement	gs_enumerate_files_close ( fe )	721:20:26340:26368	8205331	3	True				
ANR	8205947	CallExpression	gs_enumerate_files_close ( fe )		8205331	0					
ANR	8205948	Callee	gs_enumerate_files_close		8205331	0					
ANR	8205949	Identifier	gs_enumerate_files_close		8205331	0					
ANR	8205950	ArgumentList	fe		8205331	1					
ANR	8205951	Argument	fe		8205331	0					
ANR	8205952	Identifier	fe		8205331	0					
ANR	8205953	ReturnStatement	"return gs_throw1 ( 0 , ""An unrecoverable failure occurred while reading the resident font %s\\n"" , tmp_path_copy ) ;"	722:20:26390:26572	8205331	4	True				
ANR	8205954	CallExpression	"gs_throw1 ( 0 , ""An unrecoverable failure occurred while reading the resident font %s\\n"" , tmp_path_copy )"		8205331	0					
ANR	8205955	Callee	gs_throw1		8205331	0					
ANR	8205956	Identifier	gs_throw1		8205331	0					
ANR	8205957	ArgumentList	0		8205331	1					
ANR	8205958	Argument	0		8205331	0					
ANR	8205959	PrimaryExpression	0		8205331	0					
ANR	8205960	Argument	"""An unrecoverable failure occurred while reading the resident font %s\\n"""		8205331	1					
ANR	8205961	PrimaryExpression	"""An unrecoverable failure occurred while reading the resident font %s\\n"""		8205331	0					
ANR	8205962	Argument	tmp_path_copy		8205331	2					
ANR	8205963	Identifier	tmp_path_copy		8205331	0					
ANR	8205964	ExpressionStatement	plfont -> storage = storage	727:16:26609:26634	8205331	4	True				
ANR	8205965	AssignmentExpression	plfont -> storage = storage		8205331	0		=			
ANR	8205966	PtrMemberAccess	plfont -> storage		8205331	0					
ANR	8205967	Identifier	plfont		8205331	0					
ANR	8205968	Identifier	storage		8205331	1					
ANR	8205969	Identifier	storage		8205331	1					
ANR	8205970	ExpressionStatement	plfont -> data_are_permanent = false	728:16:26652:26686	8205331	5	True				
ANR	8205971	AssignmentExpression	plfont -> data_are_permanent = false		8205331	0		=			
ANR	8205972	PtrMemberAccess	plfont -> data_are_permanent		8205331	0					
ANR	8205973	Identifier	plfont		8205331	0					
ANR	8205974	Identifier	data_are_permanent		8205331	1					
ANR	8205975	Identifier	false		8205331	1					
ANR	8205976	ExpressionStatement	plfont -> font_type = residentp -> font_type	733:16:26907:26947	8205331	6	True				
ANR	8205977	AssignmentExpression	plfont -> font_type = residentp -> font_type		8205331	0		=			
ANR	8205978	PtrMemberAccess	plfont -> font_type		8205331	0					
ANR	8205979	Identifier	plfont		8205331	0					
ANR	8205980	Identifier	font_type		8205331	1					
ANR	8205981	PtrMemberAccess	residentp -> font_type		8205331	1					
ANR	8205982	Identifier	residentp		8205331	0					
ANR	8205983	Identifier	font_type		8205331	1					
ANR	8205984	ExpressionStatement	plfont -> params = residentp -> params	734:16:26965:26999	8205331	7	True				
ANR	8205985	AssignmentExpression	plfont -> params = residentp -> params		8205331	0		=			
ANR	8205986	PtrMemberAccess	plfont -> params		8205331	0					
ANR	8205987	Identifier	plfont		8205331	0					
ANR	8205988	Identifier	params		8205331	1					
ANR	8205989	PtrMemberAccess	residentp -> params		8205331	1					
ANR	8205990	Identifier	residentp		8205331	0					
ANR	8205991	Identifier	params		8205331	1					
ANR	8205992	ExpressionStatement	"memcpy ( plfont -> character_complement , residentp -> character_complement , 8 )"	735:16:27017:27112	8205331	8	True				
ANR	8205993	CallExpression	"memcpy ( plfont -> character_complement , residentp -> character_complement , 8 )"		8205331	0					
ANR	8205994	Callee	memcpy		8205331	0					
ANR	8205995	Identifier	memcpy		8205331	0					
ANR	8205996	ArgumentList	plfont -> character_complement		8205331	1					
ANR	8205997	Argument	plfont -> character_complement		8205331	0					
ANR	8205998	PtrMemberAccess	plfont -> character_complement		8205331	0					
ANR	8205999	Identifier	plfont		8205331	0					
ANR	8206000	Identifier	character_complement		8205331	1					
ANR	8206001	Argument	residentp -> character_complement		8205331	1					
ANR	8206002	PtrMemberAccess	residentp -> character_complement		8205331	0					
ANR	8206003	Identifier	residentp		8205331	0					
ANR	8206004	Identifier	character_complement		8205331	1					
ANR	8206005	Argument	8		8205331	2					
ANR	8206006	PrimaryExpression	8		8205331	0					
ANR	8206007	IfStatement	if ( use_unicode_names_for_keys )		8205331	9					
ANR	8206008	Condition	use_unicode_names_for_keys	737:20:27134:27159	8205331	0	True				
ANR	8206009	Identifier	use_unicode_names_for_keys		8205331	0					
ANR	8206010	ExpressionStatement	"code = pl_dict_put ( pfontdict , ( const byte * ) residentp -> unicode_fontname , 32 , plfont )"	738:20:27182:27330	8205331	1	True				
ANR	8206011	AssignmentExpression	"code = pl_dict_put ( pfontdict , ( const byte * ) residentp -> unicode_fontname , 32 , plfont )"		8205331	0		=			
ANR	8206012	Identifier	code		8205331	0					
ANR	8206013	CallExpression	"pl_dict_put ( pfontdict , ( const byte * ) residentp -> unicode_fontname , 32 , plfont )"		8205331	1					
ANR	8206014	Callee	pl_dict_put		8205331	0					
ANR	8206015	Identifier	pl_dict_put		8205331	0					
ANR	8206016	ArgumentList	pfontdict		8205331	1					
ANR	8206017	Argument	pfontdict		8205331	0					
ANR	8206018	Identifier	pfontdict		8205331	0					
ANR	8206019	Argument	( const byte * ) residentp -> unicode_fontname		8205331	1					
ANR	8206020	CastExpression	( const byte * ) residentp -> unicode_fontname		8205331	0					
ANR	8206021	CastTarget	const byte *		8205331	0					
ANR	8206022	PtrMemberAccess	residentp -> unicode_fontname		8205331	1					
ANR	8206023	Identifier	residentp		8205331	0					
ANR	8206024	Identifier	unicode_fontname		8205331	1					
ANR	8206025	Argument	32		8205331	2					
ANR	8206026	PrimaryExpression	32		8205331	0					
ANR	8206027	Argument	plfont		8205331	3					
ANR	8206028	Identifier	plfont		8205331	0					
ANR	8206029	ElseStatement	else		8205331	0					
ANR	8206030	CompoundStatement		150:21:5976:5976	8205331	0					
ANR	8206031	ExpressionStatement	key [ 2 ] = ( byte ) ( residentp - resident_table )	742:20:27375:27419	8205331	0	True				
ANR	8206032	AssignmentExpression	key [ 2 ] = ( byte ) ( residentp - resident_table )		8205331	0		=			
ANR	8206033	ArrayIndexing	key [ 2 ]		8205331	0					
ANR	8206034	Identifier	key		8205331	0					
ANR	8206035	PrimaryExpression	2		8205331	1					
ANR	8206036	CastExpression	( byte ) ( residentp - resident_table )		8205331	1					
ANR	8206037	CastTarget	byte		8205331	0					
ANR	8206038	AdditiveExpression	residentp - resident_table		8205331	1		-			
ANR	8206039	Identifier	residentp		8205331	0					
ANR	8206040	Identifier	resident_table		8205331	1					
ANR	8206041	ExpressionStatement	key [ 0 ] = key [ 1 ] = 0	743:20:27441:27460	8205331	1	True				
ANR	8206042	AssignmentExpression	key [ 0 ] = key [ 1 ] = 0		8205331	0		=			
ANR	8206043	ArrayIndexing	key [ 0 ]		8205331	0					
ANR	8206044	Identifier	key		8205331	0					
ANR	8206045	PrimaryExpression	0		8205331	1					
ANR	8206046	AssignmentExpression	key [ 1 ] = 0		8205331	1		=			
ANR	8206047	ArrayIndexing	key [ 1 ]		8205331	0					
ANR	8206048	Identifier	key		8205331	0					
ANR	8206049	PrimaryExpression	1		8205331	1					
ANR	8206050	PrimaryExpression	0		8205331	1					
ANR	8206051	ExpressionStatement	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"	744:20:27482:27537	8205331	2	True				
ANR	8206052	AssignmentExpression	"code = pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8205331	0		=			
ANR	8206053	Identifier	code		8205331	0					
ANR	8206054	CallExpression	"pl_dict_put ( pfontdict , key , sizeof ( key ) , plfont )"		8205331	1					
ANR	8206055	Callee	pl_dict_put		8205331	0					
ANR	8206056	Identifier	pl_dict_put		8205331	0					
ANR	8206057	ArgumentList	pfontdict		8205331	1					
ANR	8206058	Argument	pfontdict		8205331	0					
ANR	8206059	Identifier	pfontdict		8205331	0					
ANR	8206060	Argument	key		8205331	1					
ANR	8206061	Identifier	key		8205331	0					
ANR	8206062	Argument	sizeof ( key )		8205331	2					
ANR	8206063	SizeofExpression	sizeof ( key )		8205331	0					
ANR	8206064	Sizeof	sizeof		8205331	0					
ANR	8206065	SizeofOperand	key		8205331	1					
ANR	8206066	Argument	plfont		8205331	3					
ANR	8206067	Identifier	plfont		8205331	0					
ANR	8206068	IfStatement	"if ( ( code >= 0 ) && pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont ) < 0 )"		8205331	3					
ANR	8206069	Condition	"( code >= 0 ) && pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont ) < 0"	746:24:27659:27765	8205331	0	True				
ANR	8206070	AndExpression	"( code >= 0 ) && pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont ) < 0"		8205331	0		&&			
ANR	8206071	RelationalExpression	code >= 0		8205331	0		>=			
ANR	8206072	Identifier	code		8205331	0					
ANR	8206073	PrimaryExpression	0		8205331	1					
ANR	8206074	RelationalExpression	"pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont ) < 0"		8205331	1		<			
ANR	8206075	CallExpression	"pl_store_resident_font_data_in_file ( tmp_path_copy , mem , plfont )"		8205331	0					
ANR	8206076	Callee	pl_store_resident_font_data_in_file		8205331	0					
ANR	8206077	Identifier	pl_store_resident_font_data_in_file		8205331	0					
ANR	8206078	ArgumentList	tmp_path_copy		8205331	1					
ANR	8206079	Argument	tmp_path_copy		8205331	0					
ANR	8206080	Identifier	tmp_path_copy		8205331	0					
ANR	8206081	Argument	mem		8205331	1					
ANR	8206082	Identifier	mem		8205331	0					
ANR	8206083	Argument	plfont		8205331	2					
ANR	8206084	Identifier	plfont		8205331	0					
ANR	8206085	PrimaryExpression	0		8205331	1					
ANR	8206086	CompoundStatement		156:58:6391:6391	8205331	1					
ANR	8206087	ExpressionStatement	"dmprintf1 ( mem , ""%s could not store data"" , tmp_path_copy )"	748:24:27794:27884	8205331	0	True				
ANR	8206088	CallExpression	"dmprintf1 ( mem , ""%s could not store data"" , tmp_path_copy )"		8205331	0					
ANR	8206089	Callee	dmprintf1		8205331	0					
ANR	8206090	Identifier	dmprintf1		8205331	0					
ANR	8206091	ArgumentList	mem		8205331	1					
ANR	8206092	Argument	mem		8205331	0					
ANR	8206093	Identifier	mem		8205331	0					
ANR	8206094	Argument	"""%s could not store data"""		8205331	1					
ANR	8206095	PrimaryExpression	"""%s could not store data"""		8205331	0					
ANR	8206096	Argument	tmp_path_copy		8205331	2					
ANR	8206097	Identifier	tmp_path_copy		8205331	0					
ANR	8206098	ContinueStatement	continue ;	750:24:27910:27918	8205331	1	True				
ANR	8206099	IfStatement	if ( code < 0 )		8205331	10					
ANR	8206100	Condition	code < 0	753:20:27980:27987	8205331	0	True				
ANR	8206101	RelationalExpression	code < 0		8205331	0		<			
ANR	8206102	Identifier	code		8205331	0					
ANR	8206103	PrimaryExpression	0		8205331	1					
ANR	8206104	CompoundStatement		162:30:6613:6613	8205331	1					
ANR	8206105	ExpressionStatement	"gs_free_object ( mem , plfont -> pfont , ""pl_tt_load_font(gs_font_type42)"" )"	754:20:28012:28081	8205331	0	True				
ANR	8206106	CallExpression	"gs_free_object ( mem , plfont -> pfont , ""pl_tt_load_font(gs_font_type42)"" )"		8205331	0					
ANR	8206107	Callee	gs_free_object		8205331	0					
ANR	8206108	Identifier	gs_free_object		8205331	0					
ANR	8206109	ArgumentList	mem		8205331	1					
ANR	8206110	Argument	mem		8205331	0					
ANR	8206111	Identifier	mem		8205331	0					
ANR	8206112	Argument	plfont -> pfont		8205331	1					
ANR	8206113	PtrMemberAccess	plfont -> pfont		8205331	0					
ANR	8206114	Identifier	plfont		8205331	0					
ANR	8206115	Identifier	pfont		8205331	1					
ANR	8206116	Argument	"""pl_tt_load_font(gs_font_type42)"""		8205331	2					
ANR	8206117	PrimaryExpression	"""pl_tt_load_font(gs_font_type42)"""		8205331	0					
ANR	8206118	ExpressionStatement	"pl_free_tt_fontfile_buffer ( mem , plfont -> header )"	755:20:28103:28150	8205331	1	True				
ANR	8206119	CallExpression	"pl_free_tt_fontfile_buffer ( mem , plfont -> header )"		8205331	0					
ANR	8206120	Callee	pl_free_tt_fontfile_buffer		8205331	0					
ANR	8206121	Identifier	pl_free_tt_fontfile_buffer		8205331	0					
ANR	8206122	ArgumentList	mem		8205331	1					
ANR	8206123	Argument	mem		8205331	0					
ANR	8206124	Identifier	mem		8205331	0					
ANR	8206125	Argument	plfont -> header		8205331	1					
ANR	8206126	PtrMemberAccess	plfont -> header		8205331	0					
ANR	8206127	Identifier	plfont		8205331	0					
ANR	8206128	Identifier	header		8205331	1					
ANR	8206129	ExpressionStatement	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"	756:20:28172:28229	8205331	2	True				
ANR	8206130	CallExpression	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"		8205331	0					
ANR	8206131	Callee	gs_free_object		8205331	0					
ANR	8206132	Identifier	gs_free_object		8205331	0					
ANR	8206133	ArgumentList	mem		8205331	1					
ANR	8206134	Argument	mem		8205331	0					
ANR	8206135	Identifier	mem		8205331	0					
ANR	8206136	Argument	plfont		8205331	1					
ANR	8206137	Identifier	plfont		8205331	0					
ANR	8206138	Argument	"""pl_tt_load_font(pl_font_t)"""		8205331	2					
ANR	8206139	PrimaryExpression	"""pl_tt_load_font(pl_font_t)"""		8205331	0					
ANR	8206140	ContinueStatement	continue ;	757:20:28251:28259	8205331	3	True				
ANR	8206141	ExpressionStatement	found = true	759:16:28295:28307	8205331	11	True				
ANR	8206142	AssignmentExpression	found = true		8205331	0		=			
ANR	8206143	Identifier	found		8205331	0					
ANR	8206144	Identifier	true		8205331	1					
ANR	8206145	ExpressionStatement	found_any = true	760:16:28325:28341	8205331	12	True				
ANR	8206146	AssignmentExpression	found_any = true		8205331	0		=			
ANR	8206147	Identifier	found_any		8205331	0					
ANR	8206148	Identifier	true		8205331	1					
ANR	8206149	ExpressionStatement	sfclose ( in )	762:12:28369:28380	8205331	11	True				
ANR	8206150	CallExpression	sfclose ( in )		8205331	0					
ANR	8206151	Callee	sfclose		8205331	0					
ANR	8206152	Identifier	sfclose		8205331	0					
ANR	8206153	ArgumentList	in		8205331	1					
ANR	8206154	Argument	in		8205331	0					
ANR	8206155	Identifier	in		8205331	0					
ANR	8206156	IfStatement	if ( ! found )		8205331	12					
ANR	8206157	Condition	! found	765:16:28431:28436	8205331	0	True				
ANR	8206158	UnaryOperationExpression	! found		8205331	0					
ANR	8206159	UnaryOperator	!		8205331	0					
ANR	8206160	Identifier	found		8205331	1					
ANR	8206161	CompoundStatement		174:24:7062:7062	8205331	1					
ANR	8206162	IfStatement	if ( gs_debug_c ( '=' ) )		8205331	0					
ANR	8206163	Condition	gs_debug_c ( '=' )	767:20:28474:28488	8205331	0	True				
ANR	8206164	CallExpression	gs_debug_c ( '=' )		8205331	0					
ANR	8206165	Callee	gs_debug_c		8205331	0					
ANR	8206166	Identifier	gs_debug_c		8205331	0					
ANR	8206167	ArgumentList	'='		8205331	1					
ANR	8206168	Argument	'='		8205331	0					
ANR	8206169	PrimaryExpression	'='		8205331	0					
ANR	8206170	CompoundStatement		176:37:7114:7114	8205331	1					
ANR	8206171	ExpressionStatement	"dmprintf2 ( mem , ""TrueType font %s in file %s not found in table\\n"" , buffer , tmp_path_copy )"	768:20:28513:28662	8205331	0	True				
ANR	8206172	CallExpression	"dmprintf2 ( mem , ""TrueType font %s in file %s not found in table\\n"" , buffer , tmp_path_copy )"		8205331	0					
ANR	8206173	Callee	dmprintf2		8205331	0					
ANR	8206174	Identifier	dmprintf2		8205331	0					
ANR	8206175	ArgumentList	mem		8205331	1					
ANR	8206176	Argument	mem		8205331	0					
ANR	8206177	Identifier	mem		8205331	0					
ANR	8206178	Argument	"""TrueType font %s in file %s not found in table\\n"""		8205331	1					
ANR	8206179	PrimaryExpression	"""TrueType font %s in file %s not found in table\\n"""		8205331	0					
ANR	8206180	Argument	buffer		8205331	2					
ANR	8206181	Identifier	buffer		8205331	0					
ANR	8206182	Argument	tmp_path_copy		8205331	3					
ANR	8206183	Identifier	tmp_path_copy		8205331	0					
ANR	8206184	ExpressionStatement	"in = sfopen ( tmp_path_copy , ""r"" , mem )"	771:20:28684:28720	8205331	1	True				
ANR	8206185	AssignmentExpression	"in = sfopen ( tmp_path_copy , ""r"" , mem )"		8205331	0		=			
ANR	8206186	Identifier	in		8205331	0					
ANR	8206187	CallExpression	"sfopen ( tmp_path_copy , ""r"" , mem )"		8205331	1					
ANR	8206188	Callee	sfopen		8205331	0					
ANR	8206189	Identifier	sfopen		8205331	0					
ANR	8206190	ArgumentList	tmp_path_copy		8205331	1					
ANR	8206191	Argument	tmp_path_copy		8205331	0					
ANR	8206192	Identifier	tmp_path_copy		8205331	0					
ANR	8206193	Argument	"""r"""		8205331	1					
ANR	8206194	PrimaryExpression	"""r"""		8205331	0					
ANR	8206195	Argument	mem		8205331	2					
ANR	8206196	Identifier	mem		8205331	0					
ANR	8206197	ExpressionStatement	"code = get_name_from_tt_file ( in , mem , buffer , WINDOWSNAME )"	772:20:28742:28824	8205331	2	True				
ANR	8206198	AssignmentExpression	"code = get_name_from_tt_file ( in , mem , buffer , WINDOWSNAME )"		8205331	0		=			
ANR	8206199	Identifier	code		8205331	0					
ANR	8206200	CallExpression	"get_name_from_tt_file ( in , mem , buffer , WINDOWSNAME )"		8205331	1					
ANR	8206201	Callee	get_name_from_tt_file		8205331	0					
ANR	8206202	Identifier	get_name_from_tt_file		8205331	0					
ANR	8206203	ArgumentList	in		8205331	1					
ANR	8206204	Argument	in		8205331	0					
ANR	8206205	Identifier	in		8205331	0					
ANR	8206206	Argument	mem		8205331	1					
ANR	8206207	Identifier	mem		8205331	0					
ANR	8206208	Argument	buffer		8205331	2					
ANR	8206209	Identifier	buffer		8205331	0					
ANR	8206210	Argument	WINDOWSNAME		8205331	3					
ANR	8206211	Identifier	WINDOWSNAME		8205331	0					
ANR	8206212	ExpressionStatement	sfclose ( in )	774:20:28846:28857	8205331	3	True				
ANR	8206213	CallExpression	sfclose ( in )		8205331	0					
ANR	8206214	Callee	sfclose		8205331	0					
ANR	8206215	Identifier	sfclose		8205331	0					
ANR	8206216	ArgumentList	in		8205331	1					
ANR	8206217	Argument	in		8205331	0					
ANR	8206218	Identifier	in		8205331	0					
ANR	8206219	ExpressionStatement	"dmprintf1 ( mem , ""Windows name %s\\n"" , buffer )"	775:20:28879:28922	8205331	4	True				
ANR	8206220	CallExpression	"dmprintf1 ( mem , ""Windows name %s\\n"" , buffer )"		8205331	0					
ANR	8206221	Callee	dmprintf1		8205331	0					
ANR	8206222	Identifier	dmprintf1		8205331	0					
ANR	8206223	ArgumentList	mem		8205331	1					
ANR	8206224	Argument	mem		8205331	0					
ANR	8206225	Identifier	mem		8205331	0					
ANR	8206226	Argument	"""Windows name %s\\n"""		8205331	1					
ANR	8206227	PrimaryExpression	"""Windows name %s\\n"""		8205331	0					
ANR	8206228	Argument	buffer		8205331	2					
ANR	8206229	Identifier	buffer		8205331	0					
ANR	8206230	IfStatement	if ( code < 0 )		8205331	5					
ANR	8206231	Condition	code < 0	776:24:28948:28955	8205331	0	True				
ANR	8206232	RelationalExpression	code < 0		8205331	0		<			
ANR	8206233	Identifier	code		8205331	0					
ANR	8206234	PrimaryExpression	0		8205331	1					
ANR	8206235	ReturnStatement	return code ;	777:24:28982:28993	8205331	1	True				
ANR	8206236	Identifier	code		8205331	0					
ANR	8206237	IfStatement	if ( gs_debug_c ( '=' ) )		8205331	26					
ANR	8206238	Condition	gs_debug_c ( '=' )	784:8:29156:29170	8205331	0	True				
ANR	8206239	CallExpression	gs_debug_c ( '=' )		8205331	0					
ANR	8206240	Callee	gs_debug_c		8205331	0					
ANR	8206241	Identifier	gs_debug_c		8205331	0					
ANR	8206242	ArgumentList	'='		8205331	1					
ANR	8206243	Argument	'='		8205331	0					
ANR	8206244	PrimaryExpression	'='		8205331	0					
ANR	8206245	ExpressionStatement	"check_resident_fonts ( pfontdict , mem )"	785:8:29181:29217	8205331	1	True				
ANR	8206246	CallExpression	"check_resident_fonts ( pfontdict , mem )"		8205331	0					
ANR	8206247	Callee	check_resident_fonts		8205331	0					
ANR	8206248	Identifier	check_resident_fonts		8205331	0					
ANR	8206249	ArgumentList	pfontdict		8205331	1					
ANR	8206250	Argument	pfontdict		8205331	0					
ANR	8206251	Identifier	pfontdict		8205331	0					
ANR	8206252	Argument	mem		8205331	1					
ANR	8206253	Identifier	mem		8205331	0					
ANR	8206254	ReturnStatement	return found_any ;	787:4:29230:29246	8205331	27	True				
ANR	8206255	Identifier	found_any		8205331	0					
ANR	8206256	Statement	undef	788:1:29249:29253	8205331	28	True				
ANR	8206257	Statement	fontnames	788:7:29255:29263	8205331	29	True				
ANR	8206258	ReturnType	int		8205331	1					
ANR	8206259	Identifier	pl_load_built_in_fonts		8205331	2					
ANR	8206260	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage , bool use_unicode_names_for_keys"		8205331	3					
ANR	8206261	Parameter	const char * pathname	589:23:21200:21219	8205331	0	True				
ANR	8206262	ParameterType	const char *		8205331	0					
ANR	8206263	Identifier	pathname		8205331	1					
ANR	8206264	Parameter	gs_memory_t * mem	589:45:21222:21238	8205331	1	True				
ANR	8206265	ParameterType	gs_memory_t *		8205331	0					
ANR	8206266	Identifier	mem		8205331	1					
ANR	8206267	Parameter	pl_dict_t * pfontdict	590:23:21264:21284	8205331	2	True				
ANR	8206268	ParameterType	pl_dict_t *		8205331	0					
ANR	8206269	Identifier	pfontdict		8205331	1					
ANR	8206270	Parameter	gs_font_dir * pdir	590:46:21287:21304	8205331	3	True				
ANR	8206271	ParameterType	gs_font_dir *		8205331	0					
ANR	8206272	Identifier	pdir		8205331	1					
ANR	8206273	Parameter	int storage	591:23:21330:21340	8205331	4	True				
ANR	8206274	ParameterType	int		8205331	0					
ANR	8206275	Identifier	storage		8205331	1					
ANR	8206276	Parameter	bool use_unicode_names_for_keys	591:36:21343:21373	8205331	5	True				
ANR	8206277	ParameterType	bool		8205331	0					
ANR	8206278	Identifier	use_unicode_names_for_keys		8205331	1					
ANR	8206279	CFGEntryNode	ENTRY		8205331		True				
ANR	8206280	CFGExitNode	EXIT		8205331		True				
ANR	8206281	Symbol	residentp -> params		8205331						
ANR	8206282	Symbol	plfont -> header		8205331						
ANR	8206283	Symbol	* key		8205331						
ANR	8206284	Symbol	plfont		8205331						
ANR	8206285	Symbol	plfont -> data_are_permanent		8205331						
ANR	8206286	Symbol	gs_next_ids		8205331						
ANR	8206287	Symbol	strlen		8205331						
ANR	8206288	Symbol	sfopen		8205331						
ANR	8206289	Symbol	pl_load_built_in_mtype_fonts		8205331						
ANR	8206290	Symbol	gs_debug_c		8205331						
ANR	8206291	Symbol	buffer		8205331						
ANR	8206292	Symbol	plfont -> font_type		8205331						
ANR	8206293	Symbol	resident_table		8205331						
ANR	8206294	Symbol	strcmp		8205331						
ANR	8206295	Symbol	pl_load_tt_font		8205331						
ANR	8206296	Symbol	NULL		8205331						
ANR	8206297	Symbol	offset		8205331						
ANR	8206298	Symbol	gs_enumerate_files_next		8205331						
ANR	8206299	Symbol	plfont -> storage		8205331						
ANR	8206300	Symbol	in		8205331						
ANR	8206301	Symbol	pdir		8205331						
ANR	8206302	Symbol	plfont -> character_complement		8205331						
ANR	8206303	Symbol	found_any		8205331						
ANR	8206304	Symbol	pathname		8205331						
ANR	8206305	Symbol	* tmp_path_copy		8205331						
ANR	8206306	Symbol	append_separator		8205331						
ANR	8206307	Symbol	get_name_from_tt_file		8205331						
ANR	8206308	Symbol	pfontdict		8205331						
ANR	8206309	Symbol	PSNAME		8205331						
ANR	8206310	Symbol	true		8205331						
ANR	8206311	Symbol	residentp		8205331						
ANR	8206312	Symbol	pl_dict_put		8205331						
ANR	8206313	Symbol	* code		8205331						
ANR	8206314	Symbol	fe		8205331						
ANR	8206315	Symbol	gs_throw1		8205331						
ANR	8206316	Symbol	separator_length		8205331						
ANR	8206317	Symbol	code		8205331						
ANR	8206318	Symbol	residentp -> unicode_fontname		8205331						
ANR	8206319	Symbol	gs_strtok		8205331						
ANR	8206320	Symbol	pattern		8205331						
ANR	8206321	Symbol	storage		8205331						
ANR	8206322	Symbol	gs_enumerate_files_init		8205331						
ANR	8206323	Symbol	residentp -> character_complement		8205331						
ANR	8206324	Symbol	& tplast		8205331						
ANR	8206325	Symbol	tmp_pathp		8205331						
ANR	8206326	Symbol	found		8205331						
ANR	8206327	Symbol	mem		8205331						
ANR	8206328	Symbol	tplast		8205331						
ANR	8206329	Symbol	key		8205331						
ANR	8206330	Symbol	pl_dict_length		8205331						
ANR	8206331	Symbol	gp_file_name_directory_separator		8205331						
ANR	8206332	Symbol	WINDOWSNAME		8205331						
ANR	8206333	Symbol	* residentp		8205331						
ANR	8206334	Symbol	false		8205331						
ANR	8206335	Symbol	use_unicode_names_for_keys		8205331						
ANR	8206336	Symbol	tmp_path_copy		8205331						
ANR	8206337	Symbol	& plfont		8205331						
ANR	8206338	Symbol	plfont -> pfont		8205331						
ANR	8206339	Symbol	plfont -> params		8205331						
ANR	8206340	Symbol	* plfont		8205331						
ANR	8206341	Symbol	pl_store_resident_font_data_in_file		8205331						
ANR	8206342	Symbol	residentp -> font_type		8205331						
ANR	8206343	Symbol	residentp -> full_font_name		8205331						
ANR	8206344	Function	pl_load_simm_fonts	794:0:29336:29517							
ANR	8206345	FunctionDef	"pl_load_simm_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage)"		8206344	0					
ANR	8206346	CompoundStatement		797:0:29475:29517	8206344	0					
ANR	8206347	ReturnStatement	return 0 ;	799:4:29507:29515	8206344	0	True				
ANR	8206348	PrimaryExpression	0		8206344	0					
ANR	8206349	ReturnType	int		8206344	1					
ANR	8206350	Identifier	pl_load_simm_fonts		8206344	2					
ANR	8206351	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage"		8206344	3					
ANR	8206352	Parameter	const char * pathname	795:19:29359:29378	8206344	0	True				
ANR	8206353	ParameterType	const char *		8206344	0					
ANR	8206354	Identifier	pathname		8206344	1					
ANR	8206355	Parameter	gs_memory_t * mem	795:41:29381:29397	8206344	1	True				
ANR	8206356	ParameterType	gs_memory_t *		8206344	0					
ANR	8206357	Identifier	mem		8206344	1					
ANR	8206358	Parameter	pl_dict_t * pfontdict	796:19:29419:29439	8206344	2	True				
ANR	8206359	ParameterType	pl_dict_t *		8206344	0					
ANR	8206360	Identifier	pfontdict		8206344	1					
ANR	8206361	Parameter	gs_font_dir * pdir	796:42:29442:29459	8206344	3	True				
ANR	8206362	ParameterType	gs_font_dir *		8206344	0					
ANR	8206363	Identifier	pdir		8206344	1					
ANR	8206364	Parameter	int storage	796:62:29462:29472	8206344	4	True				
ANR	8206365	ParameterType	int		8206344	0					
ANR	8206366	Identifier	storage		8206344	1					
ANR	8206367	CFGEntryNode	ENTRY		8206344		True				
ANR	8206368	CFGExitNode	EXIT		8206344		True				
ANR	8206369	Symbol	mem		8206344						
ANR	8206370	Symbol	pfontdict		8206344						
ANR	8206371	Symbol	pdir		8206344						
ANR	8206372	Symbol	storage		8206344						
ANR	8206373	Symbol	pathname		8206344						
ANR	8206374	Function	pl_load_cartridge_fonts	803:0:29555:29770							
ANR	8206375	FunctionDef	"pl_load_cartridge_fonts (const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage)"		8206374	0					
ANR	8206376	CompoundStatement		807:0:29728:29770	8206374	0					
ANR	8206377	ReturnStatement	return 0 ;	809:4:29760:29768	8206374	0	True				
ANR	8206378	PrimaryExpression	0		8206374	0					
ANR	8206379	ReturnType	int		8206374	1					
ANR	8206380	Identifier	pl_load_cartridge_fonts		8206374	2					
ANR	8206381	ParameterList	"const char * pathname , gs_memory_t * mem , pl_dict_t * pfontdict , gs_font_dir * pdir , int storage"		8206374	3					
ANR	8206382	Parameter	const char * pathname	804:24:29583:29602	8206374	0	True				
ANR	8206383	ParameterType	const char *		8206374	0					
ANR	8206384	Identifier	pathname		8206374	1					
ANR	8206385	Parameter	gs_memory_t * mem	804:46:29605:29621	8206374	1	True				
ANR	8206386	ParameterType	gs_memory_t *		8206374	0					
ANR	8206387	Identifier	mem		8206374	1					
ANR	8206388	Parameter	pl_dict_t * pfontdict	805:24:29648:29668	8206374	2	True				
ANR	8206389	ParameterType	pl_dict_t *		8206374	0					
ANR	8206390	Identifier	pfontdict		8206374	1					
ANR	8206391	Parameter	gs_font_dir * pdir	805:47:29671:29688	8206374	3	True				
ANR	8206392	ParameterType	gs_font_dir *		8206374	0					
ANR	8206393	Identifier	pdir		8206374	1					
ANR	8206394	Parameter	int storage	806:24:29715:29725	8206374	4	True				
ANR	8206395	ParameterType	int		8206374	0					
ANR	8206396	Identifier	storage		8206374	1					
ANR	8206397	CFGEntryNode	ENTRY		8206374		True				
ANR	8206398	CFGExitNode	EXIT		8206374		True				
ANR	8206399	Symbol	mem		8206374						
ANR	8206400	Symbol	pfontdict		8206374						
ANR	8206401	Symbol	pdir		8206374						
ANR	8206402	Symbol	storage		8206374						
ANR	8206403	Symbol	pathname		8206374						
