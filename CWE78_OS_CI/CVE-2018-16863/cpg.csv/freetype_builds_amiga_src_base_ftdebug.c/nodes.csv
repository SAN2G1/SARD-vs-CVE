command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3257598	File	data/converged/CVE-2018-16863_ghostpdl/freetype_builds_amiga_src_base_ftdebug.c								
ANR	3257599	DeclStmt									
ANR	3257600	Decl							struct Library	struct Library *	DOSBase
ANR	3257601	DeclStmt									
ANR	3257602	Decl							struct DOSIFace	struct DOSIFace *	IDOS
ANR	3257603	Function	FT_Message	78:2:3701:3844							
ANR	3257604	FunctionDef	FT_Message (const char * fmt)		3257603	0					
ANR	3257605	CompoundStatement		80:2:3753:3844	3257603	0					
ANR	3257606	IdentifierDeclStatement	va_list ap ;	81:4:3759:3770	3257603	0	True				
ANR	3257607	IdentifierDecl	ap		3257603	0					
ANR	3257608	IdentifierDeclType	va_list		3257603	0					
ANR	3257609	Identifier	ap		3257603	1					
ANR	3257610	ExpressionStatement	"va_start ( ap , fmt )"	84:4:3778:3797	3257603	1	True				
ANR	3257611	CallExpression	"va_start ( ap , fmt )"		3257603	0					
ANR	3257612	Callee	va_start		3257603	0					
ANR	3257613	Identifier	va_start		3257603	0					
ANR	3257614	ArgumentList	ap		3257603	1					
ANR	3257615	Argument	ap		3257603	0					
ANR	3257616	Identifier	ap		3257603	0					
ANR	3257617	Argument	fmt		3257603	1					
ANR	3257618	Identifier	fmt		3257603	0					
ANR	3257619	ExpressionStatement	"KVPrintF ( fmt , ap )"	85:4:3803:3822	3257603	2	True				
ANR	3257620	CallExpression	"KVPrintF ( fmt , ap )"		3257603	0					
ANR	3257621	Callee	KVPrintF		3257603	0					
ANR	3257622	Identifier	KVPrintF		3257603	0					
ANR	3257623	ArgumentList	fmt		3257603	1					
ANR	3257624	Argument	fmt		3257603	0					
ANR	3257625	Identifier	fmt		3257603	0					
ANR	3257626	Argument	ap		3257603	1					
ANR	3257627	Identifier	ap		3257603	0					
ANR	3257628	ExpressionStatement	va_end ( ap )	86:4:3828:3840	3257603	3	True				
ANR	3257629	CallExpression	va_end ( ap )		3257603	0					
ANR	3257630	Callee	va_end		3257603	0					
ANR	3257631	Identifier	va_end		3257603	0					
ANR	3257632	ArgumentList	ap		3257603	1					
ANR	3257633	Argument	ap		3257603	0					
ANR	3257634	Identifier	ap		3257603	0					
ANR	3257635	Identifier	FT_Message		3257603	1					
ANR	3257636	ParameterList	const char * fmt		3257603	2					
ANR	3257637	Parameter	const char * fmt	78:14:3713:3728	3257603	0	True				
ANR	3257638	ParameterType	const char *		3257603	0					
ANR	3257639	Identifier	fmt		3257603	1					
ANR	3257640	CFGEntryNode	ENTRY		3257603		True				
ANR	3257641	CFGExitNode	EXIT		3257603		True				
ANR	3257642	Symbol	fmt		3257603						
ANR	3257643	Symbol	ap		3257603						
ANR	3257644	Function	FT_Panic	93:2:3911:4080							
ANR	3257645	FunctionDef	FT_Panic (const char * fmt)		3257644	0					
ANR	3257646	CompoundStatement		95:2:3959:4080	3257644	0					
ANR	3257647	IdentifierDeclStatement	va_list ap ;	96:4:3965:3976	3257644	0	True				
ANR	3257648	IdentifierDecl	ap		3257644	0					
ANR	3257649	IdentifierDeclType	va_list		3257644	0					
ANR	3257650	Identifier	ap		3257644	1					
ANR	3257651	ExpressionStatement	"va_start ( ap , fmt )"	99:4:3984:4003	3257644	1	True				
ANR	3257652	CallExpression	"va_start ( ap , fmt )"		3257644	0					
ANR	3257653	Callee	va_start		3257644	0					
ANR	3257654	Identifier	va_start		3257644	0					
ANR	3257655	ArgumentList	ap		3257644	1					
ANR	3257656	Argument	ap		3257644	0					
ANR	3257657	Identifier	ap		3257644	0					
ANR	3257658	Argument	fmt		3257644	1					
ANR	3257659	Identifier	fmt		3257644	0					
ANR	3257660	ExpressionStatement	"KVPrintF ( fmt , ap )"	100:4:4009:4028	3257644	2	True				
ANR	3257661	CallExpression	"KVPrintF ( fmt , ap )"		3257644	0					
ANR	3257662	Callee	KVPrintF		3257644	0					
ANR	3257663	Identifier	KVPrintF		3257644	0					
ANR	3257664	ArgumentList	fmt		3257644	1					
ANR	3257665	Argument	fmt		3257644	0					
ANR	3257666	Identifier	fmt		3257644	0					
ANR	3257667	Argument	ap		3257644	1					
ANR	3257668	Identifier	ap		3257644	0					
ANR	3257669	ExpressionStatement	va_end ( ap )	101:4:4034:4046	3257644	3	True				
ANR	3257670	CallExpression	va_end ( ap )		3257644	0					
ANR	3257671	Callee	va_end		3257644	0					
ANR	3257672	Identifier	va_end		3257644	0					
ANR	3257673	ArgumentList	ap		3257644	1					
ANR	3257674	Argument	ap		3257644	0					
ANR	3257675	Identifier	ap		3257644	0					
ANR	3257676	Identifier	FT_Panic		3257644	1					
ANR	3257677	ParameterList	const char * fmt		3257644	2					
ANR	3257678	Parameter	const char * fmt	93:12:3921:3936	3257644	0	True				
ANR	3257679	ParameterType	const char *		3257644	0					
ANR	3257680	Identifier	fmt		3257644	1					
ANR	3257681	CFGEntryNode	ENTRY		3257644		True				
ANR	3257682	CFGExitNode	EXIT		3257644		True				
ANR	3257683	Symbol	fmt		3257644						
ANR	3257684	Symbol	ap		3257644						
ANR	3257685	Function	FT_Throw	110:2:4146:4330							
ANR	3257686	FunctionDef	"FT_Throw (FT_Error error , int line , const char * file)"		3257685	0					
ANR	3257687	CompoundStatement		113:2:4241:4330	3257685	0					
ANR	3257688	ExpressionStatement	FT_UNUSED ( error )	114:4:4247:4265	3257685	0	True				
ANR	3257689	CallExpression	FT_UNUSED ( error )		3257685	0					
ANR	3257690	Callee	FT_UNUSED		3257685	0					
ANR	3257691	Identifier	FT_UNUSED		3257685	0					
ANR	3257692	ArgumentList	error		3257685	1					
ANR	3257693	Argument	error		3257685	0					
ANR	3257694	Identifier	error		3257685	0					
ANR	3257695	ExpressionStatement	FT_UNUSED ( line )	115:4:4271:4288	3257685	1	True				
ANR	3257696	CallExpression	FT_UNUSED ( line )		3257685	0					
ANR	3257697	Callee	FT_UNUSED		3257685	0					
ANR	3257698	Identifier	FT_UNUSED		3257685	0					
ANR	3257699	ArgumentList	line		3257685	1					
ANR	3257700	Argument	line		3257685	0					
ANR	3257701	Identifier	line		3257685	0					
ANR	3257702	ExpressionStatement	FT_UNUSED ( file )	116:4:4294:4311	3257685	2	True				
ANR	3257703	CallExpression	FT_UNUSED ( file )		3257685	0					
ANR	3257704	Callee	FT_UNUSED		3257685	0					
ANR	3257705	Identifier	FT_UNUSED		3257685	0					
ANR	3257706	ArgumentList	file		3257685	1					
ANR	3257707	Argument	file		3257685	0					
ANR	3257708	Identifier	file		3257685	0					
ANR	3257709	ReturnStatement	return 0 ;	118:4:4318:4326	3257685	3	True				
ANR	3257710	PrimaryExpression	0		3257685	0					
ANR	3257711	Identifier	FT_Throw		3257685	1					
ANR	3257712	ParameterList	"FT_Error error , int line , const char * file"		3257685	2					
ANR	3257713	Parameter	FT_Error error	110:12:4156:4173	3257685	0	True				
ANR	3257714	ParameterType	FT_Error		3257685	0					
ANR	3257715	Identifier	error		3257685	1					
ANR	3257716	Parameter	int line	111:12:4188:4204	3257685	1	True				
ANR	3257717	ParameterType	int		3257685	0					
ANR	3257718	Identifier	line		3257685	1					
ANR	3257719	Parameter	const char * file	112:12:4219:4235	3257685	2	True				
ANR	3257720	ParameterType	const char *		3257685	0					
ANR	3257721	Identifier	file		3257685	1					
ANR	3257722	CFGEntryNode	ENTRY		3257685		True				
ANR	3257723	CFGExitNode	EXIT		3257685		True				
ANR	3257724	Symbol	file		3257685						
ANR	3257725	Symbol	line		3257685						
ANR	3257726	Symbol	error		3257685						
ANR	3257727	DeclStmt									
ANR	3257728	Decl							int	int [ trace_count ]	ft_trace_levels
ANR	3257729	DeclStmt									
ANR	3257730	Decl							const char	const char * [ trace_count + 1 ]	ft_trace_toggles
ANR	3257731	Function	FT_Trace_Get_Count	146:2:4755:4812							
ANR	3257732	FunctionDef	FT_Trace_Get_Count ()		3257731	0					
ANR	3257733	CompoundStatement		147:2:4784:4812	3257731	0					
ANR	3257734	ReturnStatement	return trace_count ;	148:4:4790:4808	3257731	0	True				
ANR	3257735	Identifier	trace_count		3257731	0					
ANR	3257736	Identifier	FT_Trace_Get_Count		3257731	1					
ANR	3257737	ParameterList			3257731	2					
ANR	3257738	CFGEntryNode	ENTRY		3257731		True				
ANR	3257739	CFGExitNode	EXIT		3257731		True				
ANR	3257740	Symbol	trace_count		3257731						
ANR	3257741	Function	FT_Trace_Get_Name	155:2:4887:5050							
ANR	3257742	FunctionDef	FT_Trace_Get_Name (FT_Int idx)		3257741	0					
ANR	3257743	CompoundStatement		156:2:4922:5050	3257741	0					
ANR	3257744	IdentifierDeclStatement	int max = FT_Trace_Get_Count ( ) ;	157:4:4928:4959	3257741	0	True				
ANR	3257745	IdentifierDecl	max = FT_Trace_Get_Count ( )		3257741	0					
ANR	3257746	IdentifierDeclType	int		3257741	0					
ANR	3257747	Identifier	max		3257741	1					
ANR	3257748	AssignmentExpression	max = FT_Trace_Get_Count ( )		3257741	2		=			
ANR	3257749	Identifier	max		3257741	0					
ANR	3257750	CallExpression	FT_Trace_Get_Count ( )		3257741	1					
ANR	3257751	Callee	FT_Trace_Get_Count		3257741	0					
ANR	3257752	Identifier	FT_Trace_Get_Count		3257741	0					
ANR	3257753	ArgumentList			3257741	1					
ANR	3257754	IfStatement	if ( idx < max )		3257741	1					
ANR	3257755	Condition	idx < max	160:9:4972:4980	3257741	0	True				
ANR	3257756	RelationalExpression	idx < max		3257741	0		<			
ANR	3257757	Identifier	idx		3257741	0					
ANR	3257758	Identifier	max		3257741	1					
ANR	3257759	ReturnStatement	return ft_trace_toggles [ idx ] ;	161:6:4990:5018	3257741	1	True				
ANR	3257760	ArrayIndexing	ft_trace_toggles [ idx ]		3257741	0					
ANR	3257761	Identifier	ft_trace_toggles		3257741	0					
ANR	3257762	Identifier	idx		3257741	1					
ANR	3257763	ElseStatement	else		3257741	0					
ANR	3257764	ReturnStatement	return NULL ;	163:6:5035:5046	3257741	0	True				
ANR	3257765	Identifier	NULL		3257741	0					
ANR	3257766	Identifier	FT_Trace_Get_Name		3257741	1					
ANR	3257767	ParameterList	FT_Int idx		3257741	2					
ANR	3257768	Parameter	FT_Int idx	155:21:4906:4916	3257741	0	True				
ANR	3257769	ParameterType	FT_Int		3257741	0					
ANR	3257770	Identifier	idx		3257741	1					
ANR	3257771	CFGEntryNode	ENTRY		3257741		True				
ANR	3257772	CFGExitNode	EXIT		3257741		True				
ANR	3257773	Symbol	NULL		3257741						
ANR	3257774	Symbol	max		3257741						
ANR	3257775	Symbol	FT_Trace_Get_Count		3257741						
ANR	3257776	Symbol	* idx		3257741						
ANR	3257777	Symbol	idx		3257741						
ANR	3257778	Symbol	ft_trace_toggles		3257741						
ANR	3257779	Symbol	* ft_trace_toggles		3257741						
ANR	3257780	Function	ft_debug_init	186:2:6482:8180							
ANR	3257781	FunctionDef	ft_debug_init ()		3257780	0					
ANR	3257782	CompoundStatement		187:2:6506:8180	3257780	0					
ANR	3257783	IdentifierDeclStatement	char buf [ 256 ] ;	189:4:6567:6588	3257780	0	True				
ANR	3257784	IdentifierDecl	buf [ 256 ]		3257780	0					
ANR	3257785	IdentifierDeclType	char [ 256 ]		3257780	0					
ANR	3257786	Identifier	buf		3257780	1					
ANR	3257787	PrimaryExpression	256		3257780	2					
ANR	3257788	IdentifierDeclStatement	const char * ft2_debug = & buf [ 0 ] ;	190:4:6594:6626	3257780	1	True				
ANR	3257789	IdentifierDecl	* ft2_debug = & buf [ 0 ]		3257780	0					
ANR	3257790	IdentifierDeclType	const char *		3257780	0					
ANR	3257791	Identifier	ft2_debug		3257780	1					
ANR	3257792	AssignmentExpression	* ft2_debug = & buf [ 0 ]		3257780	2		=			
ANR	3257793	Identifier	ft2_debug		3257780	0					
ANR	3257794	UnaryOperationExpression	& buf [ 0 ]		3257780	1					
ANR	3257795	UnaryOperator	&		3257780	0					
ANR	3257796	ArrayIndexing	buf [ 0 ]		3257780	1					
ANR	3257797	Identifier	buf		3257780	0					
ANR	3257798	PrimaryExpression	0		3257780	1					
ANR	3257799	IfStatement	"if ( GetVar ( ""FT2_DEBUG"" , ( STRPTR ) ft2_debug , 256 , LV_VAR ) > 0 )"		3257780	2					
ANR	3257800	Condition	"GetVar ( ""FT2_DEBUG"" , ( STRPTR ) ft2_debug , 256 , LV_VAR ) > 0"	194:9:6663:6719	3257780	0	True				
ANR	3257801	RelationalExpression	"GetVar ( ""FT2_DEBUG"" , ( STRPTR ) ft2_debug , 256 , LV_VAR ) > 0"		3257780	0		>			
ANR	3257802	CallExpression	"GetVar ( ""FT2_DEBUG"" , ( STRPTR ) ft2_debug , 256 , LV_VAR )"		3257780	0					
ANR	3257803	Callee	GetVar		3257780	0					
ANR	3257804	Identifier	GetVar		3257780	0					
ANR	3257805	ArgumentList	"""FT2_DEBUG"""		3257780	1					
ANR	3257806	Argument	"""FT2_DEBUG"""		3257780	0					
ANR	3257807	PrimaryExpression	"""FT2_DEBUG"""		3257780	0					
ANR	3257808	Argument	( STRPTR ) ft2_debug		3257780	1					
ANR	3257809	CastExpression	( STRPTR ) ft2_debug		3257780	0					
ANR	3257810	CastTarget	STRPTR		3257780	0					
ANR	3257811	Identifier	ft2_debug		3257780	1					
ANR	3257812	Argument	256		3257780	2					
ANR	3257813	PrimaryExpression	256		3257780	0					
ANR	3257814	Argument	LV_VAR		3257780	3					
ANR	3257815	Identifier	LV_VAR		3257780	0					
ANR	3257816	PrimaryExpression	0		3257780	1					
ANR	3257817	CompoundStatement		11:6:262:276	3257780	1					
ANR	3257818	IdentifierDeclStatement	const char * p = ft2_debug ;	196:6:6735:6761	3257780	0	True				
ANR	3257819	IdentifierDecl	* p = ft2_debug		3257780	0					
ANR	3257820	IdentifierDeclType	const char *		3257780	0					
ANR	3257821	Identifier	p		3257780	1					
ANR	3257822	AssignmentExpression	* p = ft2_debug		3257780	2		=			
ANR	3257823	Identifier	ft2_debug		3257780	0					
ANR	3257824	Identifier	ft2_debug		3257780	1					
ANR	3257825	IdentifierDeclStatement	const char * q ;	197:6:6769:6783	3257780	1	True				
ANR	3257826	IdentifierDecl	* q		3257780	0					
ANR	3257827	IdentifierDeclType	const char *		3257780	0					
ANR	3257828	Identifier	q		3257780	1					
ANR	3257829	ForStatement	for ( ; * p ; p ++ )		3257780	2					
ANR	3257830	Condition	* p	200:14:6801:6802	3257780	0	True				
ANR	3257831	UnaryOperationExpression	* p		3257780	0					
ANR	3257832	UnaryOperator	*		3257780	0					
ANR	3257833	Identifier	p		3257780	1					
ANR	3257834	PostIncDecOperationExpression	p ++	200:18:6805:6807	3257780	1	True				
ANR	3257835	Identifier	p		3257780	0					
ANR	3257836	IncDec	++		3257780	1					
ANR	3257837	CompoundStatement		15:6:310:310	3257780	2					
ANR	3257838	IfStatement	"if ( * p == ' ' || * p == '\\t' || * p == ',' || * p == ';' || * p == '=' )"		3257780	0					
ANR	3257839	Condition	"* p == ' ' || * p == '\\t' || * p == ',' || * p == ';' || * p == '='"	203:13:6885:6946	3257780	0	True				
ANR	3257840	OrExpression	"* p == ' ' || * p == '\\t' || * p == ',' || * p == ';' || * p == '='"		3257780	0		||			
ANR	3257841	EqualityExpression	* p == ' '		3257780	0		==			
ANR	3257842	UnaryOperationExpression	* p		3257780	0					
ANR	3257843	UnaryOperator	*		3257780	0					
ANR	3257844	Identifier	p		3257780	1					
ANR	3257845	PrimaryExpression	' '		3257780	1					
ANR	3257846	OrExpression	"* p == '\\t' || * p == ',' || * p == ';' || * p == '='"		3257780	1		||			
ANR	3257847	EqualityExpression	* p == '\\t'		3257780	0		==			
ANR	3257848	UnaryOperationExpression	* p		3257780	0					
ANR	3257849	UnaryOperator	*		3257780	0					
ANR	3257850	Identifier	p		3257780	1					
ANR	3257851	PrimaryExpression	'\\t'		3257780	1					
ANR	3257852	OrExpression	"* p == ',' || * p == ';' || * p == '='"		3257780	1		||			
ANR	3257853	EqualityExpression	"* p == ','"		3257780	0		==			
ANR	3257854	UnaryOperationExpression	* p		3257780	0					
ANR	3257855	UnaryOperator	*		3257780	0					
ANR	3257856	Identifier	p		3257780	1					
ANR	3257857	PrimaryExpression	"','"		3257780	1					
ANR	3257858	OrExpression	* p == ';' || * p == '='		3257780	1		||			
ANR	3257859	EqualityExpression	* p == ';'		3257780	0		==			
ANR	3257860	UnaryOperationExpression	* p		3257780	0					
ANR	3257861	UnaryOperator	*		3257780	0					
ANR	3257862	Identifier	p		3257780	1					
ANR	3257863	PrimaryExpression	';'		3257780	1					
ANR	3257864	EqualityExpression	* p == '='		3257780	1		==			
ANR	3257865	UnaryOperationExpression	* p		3257780	0					
ANR	3257866	UnaryOperator	*		3257780	0					
ANR	3257867	Identifier	p		3257780	1					
ANR	3257868	PrimaryExpression	'='		3257780	1					
ANR	3257869	ContinueStatement	continue ;	204:10:6960:6968	3257780	1	True				
ANR	3257870	ExpressionStatement	q = p	207:8:7027:7032	3257780	1	True				
ANR	3257871	AssignmentExpression	q = p		3257780	0		=			
ANR	3257872	Identifier	q		3257780	0					
ANR	3257873	Identifier	p		3257780	1					
ANR	3257874	WhileStatement	while ( * p && * p != ':' )		3257780	2					
ANR	3257875	Condition	* p && * p != ':'	208:16:7050:7064	3257780	0	True				
ANR	3257876	AndExpression	* p && * p != ':'		3257780	0		&&			
ANR	3257877	UnaryOperationExpression	* p		3257780	0					
ANR	3257878	UnaryOperator	*		3257780	0					
ANR	3257879	Identifier	p		3257780	1					
ANR	3257880	EqualityExpression	* p != ':'		3257780	1		!=			
ANR	3257881	UnaryOperationExpression	* p		3257780	0					
ANR	3257882	UnaryOperator	*		3257780	0					
ANR	3257883	Identifier	p		3257780	1					
ANR	3257884	PrimaryExpression	':'		3257780	1					
ANR	3257885	ExpressionStatement	p ++	209:10:7078:7081	3257780	1	True				
ANR	3257886	PostIncDecOperationExpression	p ++		3257780	0					
ANR	3257887	Identifier	p		3257780	0					
ANR	3257888	IncDec	++		3257780	1					
ANR	3257889	IfStatement	if ( ! * p )		3257780	3					
ANR	3257890	Condition	! * p	211:13:7097:7099	3257780	0	True				
ANR	3257891	UnaryOperationExpression	! * p		3257780	0					
ANR	3257892	UnaryOperator	!		3257780	0					
ANR	3257893	UnaryOperationExpression	* p		3257780	1					
ANR	3257894	UnaryOperator	*		3257780	0					
ANR	3257895	Identifier	p		3257780	1					
ANR	3257896	BreakStatement	break ;	212:10:7113:7118	3257780	1	True				
ANR	3257897	IfStatement	if ( * p == ':' && p > q )		3257780	4					
ANR	3257898	Condition	* p == ':' && p > q	214:13:7134:7151	3257780	0	True				
ANR	3257899	AndExpression	* p == ':' && p > q		3257780	0		&&			
ANR	3257900	EqualityExpression	* p == ':'		3257780	0		==			
ANR	3257901	UnaryOperationExpression	* p		3257780	0					
ANR	3257902	UnaryOperator	*		3257780	0					
ANR	3257903	Identifier	p		3257780	1					
ANR	3257904	PrimaryExpression	':'		3257780	1					
ANR	3257905	RelationalExpression	p > q		3257780	1		>			
ANR	3257906	Identifier	p		3257780	0					
ANR	3257907	Identifier	q		3257780	1					
ANR	3257908	CompoundStatement		31:10:717:747	3257780	1					
ANR	3257909	IdentifierDeclStatement	"FT_Int n , i , len = ( FT_Int ) ( p - q ) ;"	216:10:7175:7212	3257780	0	True				
ANR	3257910	IdentifierDecl	n		3257780	0					
ANR	3257911	IdentifierDeclType	FT_Int		3257780	0					
ANR	3257912	Identifier	n		3257780	1					
ANR	3257913	IdentifierDecl	i		3257780	1					
ANR	3257914	IdentifierDeclType	FT_Int		3257780	0					
ANR	3257915	Identifier	i		3257780	1					
ANR	3257916	IdentifierDecl	len = ( FT_Int ) ( p - q )		3257780	2					
ANR	3257917	IdentifierDeclType	FT_Int		3257780	0					
ANR	3257918	Identifier	len		3257780	1					
ANR	3257919	AssignmentExpression	len = ( FT_Int ) ( p - q )		3257780	2		=			
ANR	3257920	Identifier	len		3257780	0					
ANR	3257921	CastExpression	( FT_Int ) ( p - q )		3257780	1					
ANR	3257922	CastTarget	FT_Int		3257780	0					
ANR	3257923	AdditiveExpression	p - q		3257780	1		-			
ANR	3257924	Identifier	p		3257780	0					
ANR	3257925	Identifier	q		3257780	1					
ANR	3257926	IdentifierDeclStatement	"FT_Int level = - 1 , found = - 1 ;"	217:10:7224:7254	3257780	1	True				
ANR	3257927	IdentifierDecl	level = - 1		3257780	0					
ANR	3257928	IdentifierDeclType	FT_Int		3257780	0					
ANR	3257929	Identifier	level		3257780	1					
ANR	3257930	AssignmentExpression	level = - 1		3257780	2		=			
ANR	3257931	Identifier	level		3257780	0					
ANR	3257932	UnaryOperationExpression	- 1		3257780	1					
ANR	3257933	UnaryOperator	-		3257780	0					
ANR	3257934	PrimaryExpression	1		3257780	1					
ANR	3257935	IdentifierDecl	found = - 1		3257780	1					
ANR	3257936	IdentifierDeclType	FT_Int		3257780	0					
ANR	3257937	Identifier	found		3257780	1					
ANR	3257938	AssignmentExpression	found = - 1		3257780	2		=			
ANR	3257939	Identifier	found		3257780	0					
ANR	3257940	UnaryOperationExpression	- 1		3257780	1					
ANR	3257941	UnaryOperator	-		3257780	0					
ANR	3257942	PrimaryExpression	1		3257780	1					
ANR	3257943	ForStatement	for ( n = 0 ; n < trace_count ; n ++ )		3257780	2					
ANR	3257944	ForInit	n = 0 ;	220:16:7274:7279	3257780	0	True				
ANR	3257945	AssignmentExpression	n = 0		3257780	0		=			
ANR	3257946	Identifier	n		3257780	0					
ANR	3257947	PrimaryExpression	0		3257780	1					
ANR	3257948	Condition	n < trace_count	220:23:7281:7295	3257780	1	True				
ANR	3257949	RelationalExpression	n < trace_count		3257780	0		<			
ANR	3257950	Identifier	n		3257780	0					
ANR	3257951	Identifier	trace_count		3257780	1					
ANR	3257952	PostIncDecOperationExpression	n ++	220:40:7298:7300	3257780	2	True				
ANR	3257953	Identifier	n		3257780	0					
ANR	3257954	IncDec	++		3257780	1					
ANR	3257955	CompoundStatement		36:12:821:862	3257780	3					
ANR	3257956	IdentifierDeclStatement	const char * toggle = ft_trace_toggles [ n ] ;	222:12:7328:7369	3257780	0	True				
ANR	3257957	IdentifierDecl	* toggle = ft_trace_toggles [ n ]		3257780	0					
ANR	3257958	IdentifierDeclType	const char *		3257780	0					
ANR	3257959	Identifier	toggle		3257780	1					
ANR	3257960	AssignmentExpression	* toggle = ft_trace_toggles [ n ]		3257780	2		=			
ANR	3257961	Identifier	toggle		3257780	0					
ANR	3257962	ArrayIndexing	ft_trace_toggles [ n ]		3257780	1					
ANR	3257963	Identifier	ft_trace_toggles		3257780	0					
ANR	3257964	Identifier	n		3257780	1					
ANR	3257965	ForStatement	for ( i = 0 ; i < len ; i ++ )		3257780	1					
ANR	3257966	ForInit	i = 0 ;	225:18:7391:7396	3257780	0	True				
ANR	3257967	AssignmentExpression	i = 0		3257780	0		=			
ANR	3257968	Identifier	i		3257780	0					
ANR	3257969	PrimaryExpression	0		3257780	1					
ANR	3257970	Condition	i < len	225:25:7398:7404	3257780	1	True				
ANR	3257971	RelationalExpression	i < len		3257780	0		<			
ANR	3257972	Identifier	i		3257780	0					
ANR	3257973	Identifier	len		3257780	1					
ANR	3257974	PostIncDecOperationExpression	i ++	225:34:7407:7409	3257780	2	True				
ANR	3257975	Identifier	i		3257780	0					
ANR	3257976	IncDec	++		3257780	1					
ANR	3257977	CompoundStatement		40:12:918:918	3257780	3					
ANR	3257978	IfStatement	if ( toggle [ i ] != q [ i ] )		3257780	0					
ANR	3257979	Condition	toggle [ i ] != q [ i ]	227:19:7446:7462	3257780	0	True				
ANR	3257980	EqualityExpression	toggle [ i ] != q [ i ]		3257780	0		!=			
ANR	3257981	ArrayIndexing	toggle [ i ]		3257780	0					
ANR	3257982	Identifier	toggle		3257780	0					
ANR	3257983	Identifier	i		3257780	1					
ANR	3257984	ArrayIndexing	q [ i ]		3257780	1					
ANR	3257985	Identifier	q		3257780	0					
ANR	3257986	Identifier	i		3257780	1					
ANR	3257987	BreakStatement	break ;	228:16:7482:7487	3257780	1	True				
ANR	3257988	IfStatement	if ( i == len && toggle [ i ] == 0 )		3257780	2					
ANR	3257989	Condition	i == len && toggle [ i ] == 0	231:17:7521:7546	3257780	0	True				
ANR	3257990	AndExpression	i == len && toggle [ i ] == 0		3257780	0		&&			
ANR	3257991	EqualityExpression	i == len		3257780	0		==			
ANR	3257992	Identifier	i		3257780	0					
ANR	3257993	Identifier	len		3257780	1					
ANR	3257994	EqualityExpression	toggle [ i ] == 0		3257780	1		==			
ANR	3257995	ArrayIndexing	toggle [ i ]		3257780	0					
ANR	3257996	Identifier	toggle		3257780	0					
ANR	3257997	Identifier	i		3257780	1					
ANR	3257998	PrimaryExpression	0		3257780	1					
ANR	3257999	CompoundStatement		46:12:1055:1055	3257780	1					
ANR	3258000	ExpressionStatement	found = n	233:14:7578:7587	3257780	0	True				
ANR	3258001	AssignmentExpression	found = n		3257780	0		=			
ANR	3258002	Identifier	found		3257780	0					
ANR	3258003	Identifier	n		3257780	1					
ANR	3258004	BreakStatement	break ;	234:14:7603:7608	3257780	1	True				
ANR	3258005	ExpressionStatement	p ++	239:10:7674:7677	3257780	3	True				
ANR	3258006	PostIncDecOperationExpression	p ++		3257780	0					
ANR	3258007	Identifier	p		3257780	0					
ANR	3258008	IncDec	++		3257780	1					
ANR	3258009	IfStatement	if ( * p )		3257780	4					
ANR	3258010	Condition	* p	240:15:7694:7695	3257780	0	True				
ANR	3258011	UnaryOperationExpression	* p		3257780	0					
ANR	3258012	UnaryOperator	*		3257780	0					
ANR	3258013	Identifier	p		3257780	1					
ANR	3258014	CompoundStatement		55:10:1202:1202	3257780	1					
ANR	3258015	ExpressionStatement	level = * p - '0'	242:12:7723:7739	3257780	0	True				
ANR	3258016	AssignmentExpression	level = * p - '0'		3257780	0		=			
ANR	3258017	Identifier	level		3257780	0					
ANR	3258018	AdditiveExpression	* p - '0'		3257780	1		-			
ANR	3258019	UnaryOperationExpression	* p		3257780	0					
ANR	3258020	UnaryOperator	*		3257780	0					
ANR	3258021	Identifier	p		3257780	1					
ANR	3258022	PrimaryExpression	'0'		3257780	1					
ANR	3258023	IfStatement	if ( level < 0 || level > 7 )		3257780	1					
ANR	3258024	Condition	level < 0 || level > 7	243:17:7758:7779	3257780	0	True				
ANR	3258025	OrExpression	level < 0 || level > 7		3257780	0		||			
ANR	3258026	RelationalExpression	level < 0		3257780	0		<			
ANR	3258027	Identifier	level		3257780	0					
ANR	3258028	PrimaryExpression	0		3257780	1					
ANR	3258029	RelationalExpression	level > 7		3257780	1		>			
ANR	3258030	Identifier	level		3257780	0					
ANR	3258031	PrimaryExpression	7		3257780	1					
ANR	3258032	ExpressionStatement	level = - 1	244:14:7797:7807	3257780	1	True				
ANR	3258033	AssignmentExpression	level = - 1		3257780	0		=			
ANR	3258034	Identifier	level		3257780	0					
ANR	3258035	UnaryOperationExpression	- 1		3257780	1					
ANR	3258036	UnaryOperator	-		3257780	0					
ANR	3258037	PrimaryExpression	1		3257780	1					
ANR	3258038	IfStatement	if ( found >= 0 && level >= 0 )		3257780	5					
ANR	3258039	Condition	found >= 0 && level >= 0	247:15:7837:7860	3257780	0	True				
ANR	3258040	AndExpression	found >= 0 && level >= 0		3257780	0		&&			
ANR	3258041	RelationalExpression	found >= 0		3257780	0		>=			
ANR	3258042	Identifier	found		3257780	0					
ANR	3258043	PrimaryExpression	0		3257780	1					
ANR	3258044	RelationalExpression	level >= 0		3257780	1		>=			
ANR	3258045	Identifier	level		3257780	0					
ANR	3258046	PrimaryExpression	0		3257780	1					
ANR	3258047	CompoundStatement		62:10:1367:1367	3257780	1					
ANR	3258048	IfStatement	if ( found == trace_any )		3257780	0					
ANR	3258049	Condition	found == trace_any	249:17:7893:7910	3257780	0	True				
ANR	3258050	EqualityExpression	found == trace_any		3257780	0		==			
ANR	3258051	Identifier	found		3257780	0					
ANR	3258052	Identifier	trace_any		3257780	1					
ANR	3258053	CompoundStatement		64:12:1419:1419	3257780	1					
ANR	3258054	ForStatement	for ( n = 0 ; n < trace_count ; n ++ )		3257780	0					
ANR	3258055	ForInit	n = 0 ;	252:20:7991:7996	3257780	0	True				
ANR	3258056	AssignmentExpression	n = 0		3257780	0		=			
ANR	3258057	Identifier	n		3257780	0					
ANR	3258058	PrimaryExpression	0		3257780	1					
ANR	3258059	Condition	n < trace_count	252:27:7998:8012	3257780	1	True				
ANR	3258060	RelationalExpression	n < trace_count		3257780	0		<			
ANR	3258061	Identifier	n		3257780	0					
ANR	3258062	Identifier	trace_count		3257780	1					
ANR	3258063	PostIncDecOperationExpression	n ++	252:44:8015:8017	3257780	2	True				
ANR	3258064	Identifier	n		3257780	0					
ANR	3258065	IncDec	++		3257780	1					
ANR	3258066	ExpressionStatement	ft_trace_levels [ n ] = level	253:16:8037:8063	3257780	3	True				
ANR	3258067	AssignmentExpression	ft_trace_levels [ n ] = level		3257780	0		=			
ANR	3258068	ArrayIndexing	ft_trace_levels [ n ]		3257780	0					
ANR	3258069	Identifier	ft_trace_levels		3257780	0					
ANR	3258070	Identifier	n		3257780	1					
ANR	3258071	Identifier	level		3257780	1					
ANR	3258072	ElseStatement	else		3257780	0					
ANR	3258073	ExpressionStatement	ft_trace_levels [ found ] = level	256:14:8110:8140	3257780	0	True				
ANR	3258074	AssignmentExpression	ft_trace_levels [ found ] = level		3257780	0		=			
ANR	3258075	ArrayIndexing	ft_trace_levels [ found ]		3257780	0					
ANR	3258076	Identifier	ft_trace_levels		3257780	0					
ANR	3258077	Identifier	found		3257780	1					
ANR	3258078	Identifier	level		3257780	1					
ANR	3258079	Identifier	ft_debug_init		3257780	1					
ANR	3258080	ParameterList			3257780	2					
ANR	3258081	CFGEntryNode	ENTRY		3257780		True				
ANR	3258082	CFGExitNode	EXIT		3257780		True				
ANR	3258083	Symbol	trace_any		3257780						
ANR	3258084	Symbol	level		3257780						
ANR	3258085	Symbol	trace_count		3257780						
ANR	3258086	Symbol	ft2_debug		3257780						
ANR	3258087	Symbol	i		3257780						
ANR	3258088	Symbol	LV_VAR		3257780						
ANR	3258089	Symbol	toggle		3257780						
ANR	3258090	Symbol	n		3257780						
ANR	3258091	Symbol	p		3257780						
ANR	3258092	Symbol	q		3257780						
ANR	3258093	Symbol	buf		3257780						
ANR	3258094	Symbol	found		3257780						
ANR	3258095	Symbol	* i		3257780						
ANR	3258096	Symbol	len		3257780						
ANR	3258097	Symbol	* n		3257780						
ANR	3258098	Symbol	* p		3257780						
ANR	3258099	Symbol	* q		3257780						
ANR	3258100	Symbol	* ft_trace_levels		3257780						
ANR	3258101	Symbol	GetVar		3257780						
ANR	3258102	Symbol	ft_trace_toggles		3257780						
ANR	3258103	Symbol	* toggle		3257780						
ANR	3258104	Symbol	* ft_trace_toggles		3257780						
ANR	3258105	Symbol	ft_trace_levels		3257780						
ANR	3258106	Symbol	* found		3257780						
ANR	3258107	Function	ft_debug_init	268:2:8245:8291							
ANR	3258108	FunctionDef	ft_debug_init ()		3258107	0					
ANR	3258109	CompoundStatement		269:2:8269:8291	3258107	0					
ANR	3258110	Identifier	ft_debug_init		3258107	1					
ANR	3258111	ParameterList			3258107	2					
ANR	3258112	CFGEntryNode	ENTRY		3258107		True				
ANR	3258113	CFGExitNode	EXIT		3258107		True				
ANR	3258114	Function	FT_Trace_Get_Count	275:2:8321:8368							
ANR	3258115	FunctionDef	FT_Trace_Get_Count ()		3258114	0					
ANR	3258116	CompoundStatement		276:2:8350:8368	3258114	0					
ANR	3258117	ReturnStatement	return 0 ;	277:4:8356:8364	3258114	0	True				
ANR	3258118	PrimaryExpression	0		3258114	0					
ANR	3258119	Identifier	FT_Trace_Get_Count		3258114	1					
ANR	3258120	ParameterList			3258114	2					
ANR	3258121	CFGEntryNode	ENTRY		3258114		True				
ANR	3258122	CFGExitNode	EXIT		3258114		True				
ANR	3258123	Function	FT_Trace_Get_Name	282:2:8404:8483							
ANR	3258124	FunctionDef	FT_Trace_Get_Name (FT_Int idx)		3258123	0					
ANR	3258125	CompoundStatement		283:2:8439:8483	3258123	0					
ANR	3258126	ExpressionStatement	FT_UNUSED ( idx )	284:4:8445:8461	3258123	0	True				
ANR	3258127	CallExpression	FT_UNUSED ( idx )		3258123	0					
ANR	3258128	Callee	FT_UNUSED		3258123	0					
ANR	3258129	Identifier	FT_UNUSED		3258123	0					
ANR	3258130	ArgumentList	idx		3258123	1					
ANR	3258131	Argument	idx		3258123	0					
ANR	3258132	Identifier	idx		3258123	0					
ANR	3258133	ReturnStatement	return NULL ;	286:4:8468:8479	3258123	1	True				
ANR	3258134	Identifier	NULL		3258123	0					
ANR	3258135	Identifier	FT_Trace_Get_Name		3258123	1					
ANR	3258136	ParameterList	FT_Int idx		3258123	2					
ANR	3258137	Parameter	FT_Int idx	282:21:8423:8433	3258123	0	True				
ANR	3258138	ParameterType	FT_Int		3258123	0					
ANR	3258139	Identifier	idx		3258123	1					
ANR	3258140	CFGEntryNode	ENTRY		3258123		True				
ANR	3258141	CFGExitNode	EXIT		3258123		True				
ANR	3258142	Symbol	NULL		3258123						
ANR	3258143	Symbol	idx		3258123						
