command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1195898	File	data/converged/CVE-2018-16863_ghostpdl/base_gxpcmap.c								
ANR	1195899	DeclStmt									
ANR	1195900	Decl							unsigned int	unsigned int	global_pat_index
ANR	1195901	Function	gx_pat_cache_default_tiles	53:0:1485:1760							
ANR	1195902	FunctionDef	gx_pat_cache_default_tiles ()		1195901	0					
ANR	1195903	CompoundStatement		55:0:1523:1760	1195901	0					
ANR	1195904	ReturnStatement	return max_cached_patterns_SMALL ;	57:4:1551:1583	1195901	0	True				
ANR	1195905	Identifier	max_cached_patterns_SMALL		1195901	0					
ANR	1195906	ReturnType	uint		1195901	1					
ANR	1195907	Identifier	gx_pat_cache_default_tiles		1195901	2					
ANR	1195908	ParameterList			1195901	3					
ANR	1195909	CFGEntryNode	ENTRY		1195901		True				
ANR	1195910	CFGExitNode	EXIT		1195901		True				
ANR	1195911	Symbol	max_cached_patterns_SMALL		1195901						
ANR	1195912	Function	gx_pat_cache_default_bits	67:0:1762:2025							
ANR	1195913	FunctionDef	gx_pat_cache_default_bits ()		1195912	0					
ANR	1195914	CompoundStatement		69:0:1800:2025	1195912	0					
ANR	1195915	ReturnStatement	return max_pattern_bits_SMALL ;	71:4:1828:1857	1195912	0	True				
ANR	1195916	Identifier	max_pattern_bits_SMALL		1195912	0					
ANR	1195917	ReturnType	ulong		1195912	1					
ANR	1195918	Identifier	gx_pat_cache_default_bits		1195912	2					
ANR	1195919	ParameterList			1195912	3					
ANR	1195920	CFGEntryNode	ENTRY		1195912		True				
ANR	1195921	CFGExitNode	EXIT		1195912		True				
ANR	1195922	Symbol	max_pattern_bits_SMALL		1195912						
ANR	1195923	DeclStmt									
ANR	1195924	Decl							const gx_device_pattern_accum	const gx_device_pattern_accum	gs_pattern_accum_device
ANR	1195925	Function	pattern_clist_open_device	186:0:6962:7123							
ANR	1195926	FunctionDef	pattern_clist_open_device (gx_device * dev)		1195925	0					
ANR	1195927	CompoundStatement		188:0:7008:7123	1195925	0					
ANR	1195928	ReturnStatement	return gs_clist_device_procs . open_device ( dev ) ;	190:4:7076:7121	1195925	0	True				
ANR	1195929	CallExpression	gs_clist_device_procs . open_device ( dev )		1195925	0					
ANR	1195930	Callee	gs_clist_device_procs . open_device		1195925	0					
ANR	1195931	MemberAccess	gs_clist_device_procs . open_device		1195925	0					
ANR	1195932	Identifier	gs_clist_device_procs		1195925	0					
ANR	1195933	Identifier	open_device		1195925	1					
ANR	1195934	ArgumentList	dev		1195925	1					
ANR	1195935	Argument	dev		1195925	0					
ANR	1195936	Identifier	dev		1195925	0					
ANR	1195937	ReturnType	int		1195925	1					
ANR	1195938	Identifier	pattern_clist_open_device		1195925	2					
ANR	1195939	ParameterList	gx_device * dev		1195925	3					
ANR	1195940	Parameter	gx_device * dev	187:26:6992:7005	1195925	0	True				
ANR	1195941	ParameterType	gx_device *		1195925	0					
ANR	1195942	Identifier	dev		1195925	1					
ANR	1195943	CFGEntryNode	ENTRY		1195925		True				
ANR	1195944	CFGExitNode	EXIT		1195925		True				
ANR	1195945	Symbol	gs_clist_device_procs . open_device		1195925						
ANR	1195946	Symbol	dev		1195925						
ANR	1195947	Symbol	gs_clist_device_procs		1195925						
ANR	1195948	DeclStmt									
ANR	1195949	Decl							gx_device_memory	gx_device_memory *	mdev
ANR	1195950	Function	gx_pattern_size_estimate	215:0:7837:8626							
ANR	1195951	FunctionDef	"gx_pattern_size_estimate (gs_pattern1_instance_t * pinst , bool has_tags)"		1195950	0					
ANR	1195952	CompoundStatement		217:0:7919:8626	1195950	0					
ANR	1195953	IdentifierDeclStatement	gx_device * tdev = pinst -> saved -> device ;	218:4:7925:7963	1195950	0	True				
ANR	1195954	IdentifierDecl	* tdev = pinst -> saved -> device		1195950	0					
ANR	1195955	IdentifierDeclType	gx_device *		1195950	0					
ANR	1195956	Identifier	tdev		1195950	1					
ANR	1195957	AssignmentExpression	* tdev = pinst -> saved -> device		1195950	2		=			
ANR	1195958	Identifier	tdev		1195950	0					
ANR	1195959	PtrMemberAccess	pinst -> saved -> device		1195950	1					
ANR	1195960	PtrMemberAccess	pinst -> saved		1195950	0					
ANR	1195961	Identifier	pinst		1195950	0					
ANR	1195962	Identifier	saved		1195950	1					
ANR	1195963	Identifier	device		1195950	1					
ANR	1195964	IdentifierDeclStatement	int depth = ( pinst -> templat . PaintType == 2 ? 1 : tdev -> color_info . depth ) ;	219:4:7969:8041	1195950	1	True				
ANR	1195965	IdentifierDecl	depth = ( pinst -> templat . PaintType == 2 ? 1 : tdev -> color_info . depth )		1195950	0					
ANR	1195966	IdentifierDeclType	int		1195950	0					
ANR	1195967	Identifier	depth		1195950	1					
ANR	1195968	AssignmentExpression	depth = ( pinst -> templat . PaintType == 2 ? 1 : tdev -> color_info . depth )		1195950	2		=			
ANR	1195969	Identifier	depth		1195950	0					
ANR	1195970	ConditionalExpression	pinst -> templat . PaintType == 2 ? 1 : tdev -> color_info . depth		1195950	1					
ANR	1195971	Condition	pinst -> templat . PaintType == 2		1195950	0					
ANR	1195972	EqualityExpression	pinst -> templat . PaintType == 2		1195950	0		==			
ANR	1195973	MemberAccess	pinst -> templat . PaintType		1195950	0					
ANR	1195974	PtrMemberAccess	pinst -> templat		1195950	0					
ANR	1195975	Identifier	pinst		1195950	0					
ANR	1195976	Identifier	templat		1195950	1					
ANR	1195977	Identifier	PaintType		1195950	1					
ANR	1195978	PrimaryExpression	2		1195950	1					
ANR	1195979	PrimaryExpression	1		1195950	1					
ANR	1195980	MemberAccess	tdev -> color_info . depth		1195950	2					
ANR	1195981	PtrMemberAccess	tdev -> color_info		1195950	0					
ANR	1195982	Identifier	tdev		1195950	0					
ANR	1195983	Identifier	color_info		1195950	1					
ANR	1195984	Identifier	depth		1195950	1					
ANR	1195985	IdentifierDeclStatement	int64_t raster ;	220:4:8047:8061	1195950	2	True				
ANR	1195986	IdentifierDecl	raster		1195950	0					
ANR	1195987	IdentifierDeclType	int64_t		1195950	0					
ANR	1195988	Identifier	raster		1195950	1					
ANR	1195989	IdentifierDeclStatement	int64_t size ;	221:4:8067:8079	1195950	3	True				
ANR	1195990	IdentifierDecl	size		1195950	0					
ANR	1195991	IdentifierDeclType	int64_t		1195950	0					
ANR	1195992	Identifier	size		1195950	1					
ANR	1195993	IfStatement	if ( pinst -> size . x == 0 || pinst -> size . y == 0 )		1195950	4					
ANR	1195994	Condition	pinst -> size . x == 0 || pinst -> size . y == 0	223:8:8090:8129	1195950	0	True				
ANR	1195995	OrExpression	pinst -> size . x == 0 || pinst -> size . y == 0		1195950	0		||			
ANR	1195996	EqualityExpression	pinst -> size . x == 0		1195950	0		==			
ANR	1195997	MemberAccess	pinst -> size . x		1195950	0					
ANR	1195998	PtrMemberAccess	pinst -> size		1195950	0					
ANR	1195999	Identifier	pinst		1195950	0					
ANR	1196000	Identifier	size		1195950	1					
ANR	1196001	Identifier	x		1195950	1					
ANR	1196002	PrimaryExpression	0		1195950	1					
ANR	1196003	EqualityExpression	pinst -> size . y == 0		1195950	1		==			
ANR	1196004	MemberAccess	pinst -> size . y		1195950	0					
ANR	1196005	PtrMemberAccess	pinst -> size		1195950	0					
ANR	1196006	Identifier	pinst		1195950	0					
ANR	1196007	Identifier	size		1195950	1					
ANR	1196008	Identifier	y		1195950	1					
ANR	1196009	PrimaryExpression	0		1195950	1					
ANR	1196010	ReturnStatement	return 0 ;	224:8:8140:8148	1195950	1	True				
ANR	1196011	PrimaryExpression	0		1195950	0					
ANR	1196012	IfStatement	if ( pinst -> templat . uses_transparency )		1195950	5					
ANR	1196013	Condition	pinst -> templat . uses_transparency	226:8:8159:8190	1195950	0	True				
ANR	1196014	MemberAccess	pinst -> templat . uses_transparency		1195950	0					
ANR	1196015	PtrMemberAccess	pinst -> templat		1195950	0					
ANR	1196016	Identifier	pinst		1195950	0					
ANR	1196017	Identifier	templat		1195950	1					
ANR	1196018	Identifier	uses_transparency		1195950	1					
ANR	1196019	CompoundStatement		10:42:273:273	1195950	1					
ANR	1196020	ExpressionStatement	raster = ( ( int64_t ) pinst -> size . x * ( ( depth / 8 ) + 1 + ( has_tags ? 1 : 0 ) ) )	228:8:8291:8363	1195950	0	True				
ANR	1196021	AssignmentExpression	raster = ( ( int64_t ) pinst -> size . x * ( ( depth / 8 ) + 1 + ( has_tags ? 1 : 0 ) ) )		1195950	0		=			
ANR	1196022	Identifier	raster		1195950	0					
ANR	1196023	MultiplicativeExpression	( int64_t ) pinst -> size . x * ( ( depth / 8 ) + 1 + ( has_tags ? 1 : 0 ) )		1195950	1		*			
ANR	1196024	CastExpression	( int64_t ) pinst -> size . x		1195950	0					
ANR	1196025	CastTarget	int64_t		1195950	0					
ANR	1196026	MemberAccess	pinst -> size . x		1195950	1					
ANR	1196027	PtrMemberAccess	pinst -> size		1195950	0					
ANR	1196028	Identifier	pinst		1195950	0					
ANR	1196029	Identifier	size		1195950	1					
ANR	1196030	Identifier	x		1195950	1					
ANR	1196031	AdditiveExpression	( depth / 8 ) + 1 + ( has_tags ? 1 : 0 )		1195950	1		+			
ANR	1196032	MultiplicativeExpression	depth / 8		1195950	0		/			
ANR	1196033	Identifier	depth		1195950	0					
ANR	1196034	PrimaryExpression	8		1195950	1					
ANR	1196035	AdditiveExpression	1 + ( has_tags ? 1 : 0 )		1195950	1		+			
ANR	1196036	PrimaryExpression	1		1195950	0					
ANR	1196037	ConditionalExpression	has_tags ? 1 : 0		1195950	1					
ANR	1196038	Condition	has_tags		1195950	0					
ANR	1196039	Identifier	has_tags		1195950	0					
ANR	1196040	PrimaryExpression	1		1195950	1					
ANR	1196041	PrimaryExpression	0		1195950	2					
ANR	1196042	ElseStatement	else		1195950	0					
ANR	1196043	CompoundStatement		13:11:456:456	1195950	0					
ANR	1196044	ExpressionStatement	raster = ( ( int64_t ) pinst -> size . x * depth + 7 ) / 8	230:8:8386:8435	1195950	0	True				
ANR	1196045	AssignmentExpression	raster = ( ( int64_t ) pinst -> size . x * depth + 7 ) / 8		1195950	0		=			
ANR	1196046	Identifier	raster		1195950	0					
ANR	1196047	MultiplicativeExpression	( ( int64_t ) pinst -> size . x * depth + 7 ) / 8		1195950	1		/			
ANR	1196048	AdditiveExpression	( int64_t ) pinst -> size . x * depth + 7		1195950	0		+			
ANR	1196049	MultiplicativeExpression	( int64_t ) pinst -> size . x * depth		1195950	0		*			
ANR	1196050	CastExpression	( int64_t ) pinst -> size . x		1195950	0					
ANR	1196051	CastTarget	int64_t		1195950	0					
ANR	1196052	MemberAccess	pinst -> size . x		1195950	1					
ANR	1196053	PtrMemberAccess	pinst -> size		1195950	0					
ANR	1196054	Identifier	pinst		1195950	0					
ANR	1196055	Identifier	size		1195950	1					
ANR	1196056	Identifier	x		1195950	1					
ANR	1196057	Identifier	depth		1195950	1					
ANR	1196058	PrimaryExpression	7		1195950	1					
ANR	1196059	PrimaryExpression	8		1195950	1					
ANR	1196060	ExpressionStatement	size = raster > max_int / pinst -> size . y ? ( max_int & ~0xFFFF ) : raster * pinst -> size . y	232:4:8447:8533	1195950	6	True				
ANR	1196061	AssignmentExpression	size = raster > max_int / pinst -> size . y ? ( max_int & ~0xFFFF ) : raster * pinst -> size . y		1195950	0		=			
ANR	1196062	Identifier	size		1195950	0					
ANR	1196063	ConditionalExpression	raster > max_int / pinst -> size . y ? ( max_int & ~0xFFFF ) : raster * pinst -> size . y		1195950	1					
ANR	1196064	Condition	raster > max_int / pinst -> size . y		1195950	0					
ANR	1196065	RelationalExpression	raster > max_int / pinst -> size . y		1195950	0		>			
ANR	1196066	Identifier	raster		1195950	0					
ANR	1196067	MultiplicativeExpression	max_int / pinst -> size . y		1195950	1		/			
ANR	1196068	Identifier	max_int		1195950	0					
ANR	1196069	MemberAccess	pinst -> size . y		1195950	1					
ANR	1196070	PtrMemberAccess	pinst -> size		1195950	0					
ANR	1196071	Identifier	pinst		1195950	0					
ANR	1196072	Identifier	size		1195950	1					
ANR	1196073	Identifier	y		1195950	1					
ANR	1196074	BitAndExpression	max_int & ~0xFFFF		1195950	1		&			
ANR	1196075	Identifier	max_int		1195950	0					
ANR	1196076	Identifier	~0xFFFF		1195950	1					
ANR	1196077	MultiplicativeExpression	raster * pinst -> size . y		1195950	2		*			
ANR	1196078	Identifier	raster		1195950	0					
ANR	1196079	MemberAccess	pinst -> size . y		1195950	1					
ANR	1196080	PtrMemberAccess	pinst -> size		1195950	0					
ANR	1196081	Identifier	pinst		1195950	0					
ANR	1196082	Identifier	size		1195950	1					
ANR	1196083	Identifier	y		1195950	1					
ANR	1196084	IfStatement	if ( size > ( int64_t ) max_int )		1195950	7					
ANR	1196085	Condition	size > ( int64_t ) max_int	233:8:8543:8565	1195950	0	True				
ANR	1196086	RelationalExpression	size > ( int64_t ) max_int		1195950	0		>			
ANR	1196087	Identifier	size		1195950	0					
ANR	1196088	CastExpression	( int64_t ) max_int		1195950	1					
ANR	1196089	CastTarget	int64_t		1195950	0					
ANR	1196090	Identifier	max_int		1195950	1					
ANR	1196091	ExpressionStatement	size = ( max_int & ~0xFFFF )	234:8:8576:8602	1195950	1	True				
ANR	1196092	AssignmentExpression	size = ( max_int & ~0xFFFF )		1195950	0		=			
ANR	1196093	Identifier	size		1195950	0					
ANR	1196094	BitAndExpression	max_int & ~0xFFFF		1195950	1		&			
ANR	1196095	Identifier	max_int		1195950	0					
ANR	1196096	Identifier	~0xFFFF		1195950	1					
ANR	1196097	ReturnStatement	return ( int ) size ;	235:4:8608:8624	1195950	8	True				
ANR	1196098	CastExpression	( int ) size		1195950	0					
ANR	1196099	CastTarget	int		1195950	0					
ANR	1196100	Identifier	size		1195950	1					
ANR	1196101	ReturnType	static int		1195950	1					
ANR	1196102	Identifier	gx_pattern_size_estimate		1195950	2					
ANR	1196103	ParameterList	"gs_pattern1_instance_t * pinst , bool has_tags"		1195950	3					
ANR	1196104	Parameter	gs_pattern1_instance_t * pinst	216:25:7873:7901	1195950	0	True				
ANR	1196105	ParameterType	gs_pattern1_instance_t *		1195950	0					
ANR	1196106	Identifier	pinst		1195950	1					
ANR	1196107	Parameter	bool has_tags	216:56:7904:7916	1195950	1	True				
ANR	1196108	ParameterType	bool		1195950	0					
ANR	1196109	Identifier	has_tags		1195950	1					
ANR	1196110	CFGEntryNode	ENTRY		1195950		True				
ANR	1196111	CFGExitNode	EXIT		1195950		True				
ANR	1196112	Symbol	max_int		1195950						
ANR	1196113	Symbol	pinst -> size . y		1195950						
ANR	1196114	Symbol	pinst -> saved		1195950						
ANR	1196115	Symbol	pinst -> size . x		1195950						
ANR	1196116	Symbol	* pinst -> saved		1195950						
ANR	1196117	Symbol	tdev -> color_info		1195950						
ANR	1196118	Symbol	tdev -> color_info . depth		1195950						
ANR	1196119	Symbol	raster		1195950						
ANR	1196120	Symbol	pinst -> templat		1195950						
ANR	1196121	Symbol	pinst		1195950						
ANR	1196122	Symbol	pinst -> size		1195950						
ANR	1196123	Symbol	pinst -> saved -> device		1195950						
ANR	1196124	Symbol	depth		1195950						
ANR	1196125	Symbol	* tdev		1195950						
ANR	1196126	Symbol	~0xFFFF		1195950						
ANR	1196127	Symbol	size		1195950						
ANR	1196128	Symbol	* * pinst		1195950						
ANR	1196129	Symbol	tdev		1195950						
ANR	1196130	Symbol	pinst -> templat . uses_transparency		1195950						
ANR	1196131	Symbol	pinst -> templat . PaintType		1195950						
ANR	1196132	Symbol	has_tags		1195950						
ANR	1196133	Symbol	* pinst		1195950						
ANR	1196134	Function	gx_pattern_accum_finalize_cw	238:0:8629:8826							
ANR	1196135	FunctionDef	gx_pattern_accum_finalize_cw (gx_device * dev)		1196134	0					
ANR	1196136	CompoundStatement		239:0:8687:8826	1196134	0					
ANR	1196137	IdentifierDeclStatement	gx_device_clist_writer * cwdev = ( gx_device_clist_writer * ) dev ;	240:4:8693:8754	1196134	0	True				
ANR	1196138	IdentifierDecl	* cwdev = ( gx_device_clist_writer * ) dev		1196134	0					
ANR	1196139	IdentifierDeclType	gx_device_clist_writer *		1196134	0					
ANR	1196140	Identifier	cwdev		1196134	1					
ANR	1196141	AssignmentExpression	* cwdev = ( gx_device_clist_writer * ) dev		1196134	2		=			
ANR	1196142	Identifier	cwdev		1196134	0					
ANR	1196143	CastExpression	( gx_device_clist_writer * ) dev		1196134	1					
ANR	1196144	CastTarget	gx_device_clist_writer *		1196134	0					
ANR	1196145	Identifier	dev		1196134	1					
ANR	1196146	ExpressionStatement	"rc_decrement_only ( cwdev -> target , ""gx_pattern_accum_finalize_cw"" )"	241:4:8760:8824	1196134	1	True				
ANR	1196147	CallExpression	"rc_decrement_only ( cwdev -> target , ""gx_pattern_accum_finalize_cw"" )"		1196134	0					
ANR	1196148	Callee	rc_decrement_only		1196134	0					
ANR	1196149	Identifier	rc_decrement_only		1196134	0					
ANR	1196150	ArgumentList	cwdev -> target		1196134	1					
ANR	1196151	Argument	cwdev -> target		1196134	0					
ANR	1196152	PtrMemberAccess	cwdev -> target		1196134	0					
ANR	1196153	Identifier	cwdev		1196134	0					
ANR	1196154	Identifier	target		1196134	1					
ANR	1196155	Argument	"""gx_pattern_accum_finalize_cw"""		1196134	1					
ANR	1196156	PrimaryExpression	"""gx_pattern_accum_finalize_cw"""		1196134	0					
ANR	1196157	ReturnType	static void		1196134	1					
ANR	1196158	Identifier	gx_pattern_accum_finalize_cw		1196134	2					
ANR	1196159	ParameterList	gx_device * dev		1196134	3					
ANR	1196160	Parameter	gx_device * dev	238:41:8670:8684	1196134	0	True				
ANR	1196161	ParameterType	gx_device *		1196134	0					
ANR	1196162	Identifier	dev		1196134	1					
ANR	1196163	CFGEntryNode	ENTRY		1196134		True				
ANR	1196164	CFGExitNode	EXIT		1196134		True				
ANR	1196165	Symbol	* cwdev		1196134						
ANR	1196166	Symbol	dev		1196134						
ANR	1196167	Symbol	cwdev -> target		1196134						
ANR	1196168	Symbol	cwdev		1196134						
ANR	1196169	Function	gx_device_is_pattern_accum	244:0:8829:8940							
ANR	1196170	FunctionDef	gx_device_is_pattern_accum (gx_device * dev)		1196169	0					
ANR	1196171	CompoundStatement		245:0:8877:8940	1196169	0					
ANR	1196172	ReturnStatement	"return dev_proc ( dev , open_device ) == pattern_accum_open ;"	246:4:8883:8938	1196169	0	True				
ANR	1196173	EqualityExpression	"dev_proc ( dev , open_device ) == pattern_accum_open"		1196169	0		==			
ANR	1196174	CallExpression	"dev_proc ( dev , open_device )"		1196169	0					
ANR	1196175	Callee	dev_proc		1196169	0					
ANR	1196176	Identifier	dev_proc		1196169	0					
ANR	1196177	ArgumentList	dev		1196169	1					
ANR	1196178	Argument	dev		1196169	0					
ANR	1196179	Identifier	dev		1196169	0					
ANR	1196180	Argument	open_device		1196169	1					
ANR	1196181	Identifier	open_device		1196169	0					
ANR	1196182	Identifier	pattern_accum_open		1196169	1					
ANR	1196183	ReturnType	bool		1196169	1					
ANR	1196184	Identifier	gx_device_is_pattern_accum		1196169	2					
ANR	1196185	ParameterList	gx_device * dev		1196169	3					
ANR	1196186	Parameter	gx_device * dev	244:32:8861:8874	1196169	0	True				
ANR	1196187	ParameterType	gx_device *		1196169	0					
ANR	1196188	Identifier	dev		1196169	1					
ANR	1196189	CFGEntryNode	ENTRY		1196169		True				
ANR	1196190	CFGExitNode	EXIT		1196169		True				
ANR	1196191	Symbol	dev		1196169						
ANR	1196192	Symbol	dev_proc		1196169						
ANR	1196193	Symbol	pattern_accum_open		1196169						
ANR	1196194	Symbol	open_device		1196169						
ANR	1196195	Function	gx_device_is_pattern_clist	249:0:8943:9061							
ANR	1196196	FunctionDef	gx_device_is_pattern_clist (gx_device * dev)		1196195	0					
ANR	1196197	CompoundStatement		250:0:8991:9061	1196195	0					
ANR	1196198	ReturnStatement	"return dev_proc ( dev , open_device ) == pattern_clist_open_device ;"	251:4:8997:9059	1196195	0	True				
ANR	1196199	EqualityExpression	"dev_proc ( dev , open_device ) == pattern_clist_open_device"		1196195	0		==			
ANR	1196200	CallExpression	"dev_proc ( dev , open_device )"		1196195	0					
ANR	1196201	Callee	dev_proc		1196195	0					
ANR	1196202	Identifier	dev_proc		1196195	0					
ANR	1196203	ArgumentList	dev		1196195	1					
ANR	1196204	Argument	dev		1196195	0					
ANR	1196205	Identifier	dev		1196195	0					
ANR	1196206	Argument	open_device		1196195	1					
ANR	1196207	Identifier	open_device		1196195	0					
ANR	1196208	Identifier	pattern_clist_open_device		1196195	1					
ANR	1196209	ReturnType	bool		1196195	1					
ANR	1196210	Identifier	gx_device_is_pattern_clist		1196195	2					
ANR	1196211	ParameterList	gx_device * dev		1196195	3					
ANR	1196212	Parameter	gx_device * dev	249:32:8975:8988	1196195	0	True				
ANR	1196213	ParameterType	gx_device *		1196195	0					
ANR	1196214	Identifier	dev		1196195	1					
ANR	1196215	CFGEntryNode	ENTRY		1196195		True				
ANR	1196216	CFGExitNode	EXIT		1196195		True				
ANR	1196217	Symbol	dev		1196195						
ANR	1196218	Symbol	pattern_clist_open_device		1196195						
ANR	1196219	Symbol	dev_proc		1196195						
ANR	1196220	Symbol	open_device		1196195						
ANR	1196221	Function	gx_pattern_accum_alloc	255:0:9130:13178							
ANR	1196222	FunctionDef	"gx_pattern_accum_alloc (gs_memory_t * mem , gs_memory_t * storage_memory , gs_pattern1_instance_t * pinst , client_name_t cname)"		1196221	0					
ANR	1196223	CompoundStatement		258:0:9297:13178	1196221	0					
ANR	1196224	IdentifierDeclStatement	gx_device * tdev = pinst -> saved -> device ;	259:4:9303:9341	1196221	0	True				
ANR	1196225	IdentifierDecl	* tdev = pinst -> saved -> device		1196221	0					
ANR	1196226	IdentifierDeclType	gx_device *		1196221	0					
ANR	1196227	Identifier	tdev		1196221	1					
ANR	1196228	AssignmentExpression	* tdev = pinst -> saved -> device		1196221	2		=			
ANR	1196229	Identifier	tdev		1196221	0					
ANR	1196230	PtrMemberAccess	pinst -> saved -> device		1196221	1					
ANR	1196231	PtrMemberAccess	pinst -> saved		1196221	0					
ANR	1196232	Identifier	pinst		1196221	0					
ANR	1196233	Identifier	saved		1196221	1					
ANR	1196234	Identifier	device		1196221	1					
ANR	1196235	IdentifierDeclStatement	bool has_tags = device_encodes_tags ( tdev ) ;	260:4:9347:9388	1196221	1	True				
ANR	1196236	IdentifierDecl	has_tags = device_encodes_tags ( tdev )		1196221	0					
ANR	1196237	IdentifierDeclType	bool		1196221	0					
ANR	1196238	Identifier	has_tags		1196221	1					
ANR	1196239	AssignmentExpression	has_tags = device_encodes_tags ( tdev )		1196221	2		=			
ANR	1196240	Identifier	has_tags		1196221	0					
ANR	1196241	CallExpression	device_encodes_tags ( tdev )		1196221	1					
ANR	1196242	Callee	device_encodes_tags		1196221	0					
ANR	1196243	Identifier	device_encodes_tags		1196221	0					
ANR	1196244	ArgumentList	tdev		1196221	1					
ANR	1196245	Argument	tdev		1196221	0					
ANR	1196246	Identifier	tdev		1196221	0					
ANR	1196247	IdentifierDeclStatement	"int size = gx_pattern_size_estimate ( pinst , has_tags ) ;"	261:4:9394:9446	1196221	2	True				
ANR	1196248	IdentifierDecl	"size = gx_pattern_size_estimate ( pinst , has_tags )"		1196221	0					
ANR	1196249	IdentifierDeclType	int		1196221	0					
ANR	1196250	Identifier	size		1196221	1					
ANR	1196251	AssignmentExpression	"size = gx_pattern_size_estimate ( pinst , has_tags )"		1196221	2		=			
ANR	1196252	Identifier	size		1196221	0					
ANR	1196253	CallExpression	"gx_pattern_size_estimate ( pinst , has_tags )"		1196221	1					
ANR	1196254	Callee	gx_pattern_size_estimate		1196221	0					
ANR	1196255	Identifier	gx_pattern_size_estimate		1196221	0					
ANR	1196256	ArgumentList	pinst		1196221	1					
ANR	1196257	Argument	pinst		1196221	0					
ANR	1196258	Identifier	pinst		1196221	0					
ANR	1196259	Argument	has_tags		1196221	1					
ANR	1196260	Identifier	has_tags		1196221	0					
ANR	1196261	IdentifierDeclStatement	gx_device_forward * fdev ;	262:4:9452:9475	1196221	3	True				
ANR	1196262	IdentifierDecl	* fdev		1196221	0					
ANR	1196263	IdentifierDeclType	gx_device_forward *		1196221	0					
ANR	1196264	Identifier	fdev		1196221	1					
ANR	1196265	IdentifierDeclStatement	int force_no_clist = 0 ;	263:4:9481:9503	1196221	4	True				
ANR	1196266	IdentifierDecl	force_no_clist = 0		1196221	0					
ANR	1196267	IdentifierDeclType	int		1196221	0					
ANR	1196268	Identifier	force_no_clist		1196221	1					
ANR	1196269	AssignmentExpression	force_no_clist = 0		1196221	2		=			
ANR	1196270	Identifier	force_no_clist		1196221	0					
ANR	1196271	PrimaryExpression	0		1196221	1					
ANR	1196272	IdentifierDeclStatement	int max_pattern_bitmap = tdev -> MaxPatternBitmap == 0 ? MaxPatternBitmap_DEFAULT : tdev -> MaxPatternBitmap ;	264:4:9509:9645	1196221	5	True				
ANR	1196273	IdentifierDecl	max_pattern_bitmap = tdev -> MaxPatternBitmap == 0 ? MaxPatternBitmap_DEFAULT : tdev -> MaxPatternBitmap		1196221	0					
ANR	1196274	IdentifierDeclType	int		1196221	0					
ANR	1196275	Identifier	max_pattern_bitmap		1196221	1					
ANR	1196276	AssignmentExpression	max_pattern_bitmap = tdev -> MaxPatternBitmap == 0 ? MaxPatternBitmap_DEFAULT : tdev -> MaxPatternBitmap		1196221	2		=			
ANR	1196277	Identifier	max_pattern_bitmap		1196221	0					
ANR	1196278	ConditionalExpression	tdev -> MaxPatternBitmap == 0 ? MaxPatternBitmap_DEFAULT : tdev -> MaxPatternBitmap		1196221	1					
ANR	1196279	Condition	tdev -> MaxPatternBitmap == 0		1196221	0					
ANR	1196280	EqualityExpression	tdev -> MaxPatternBitmap == 0		1196221	0		==			
ANR	1196281	PtrMemberAccess	tdev -> MaxPatternBitmap		1196221	0					
ANR	1196282	Identifier	tdev		1196221	0					
ANR	1196283	Identifier	MaxPatternBitmap		1196221	1					
ANR	1196284	PrimaryExpression	0		1196221	1					
ANR	1196285	Identifier	MaxPatternBitmap_DEFAULT		1196221	1					
ANR	1196286	PtrMemberAccess	tdev -> MaxPatternBitmap		1196221	2					
ANR	1196287	Identifier	tdev		1196221	0					
ANR	1196288	Identifier	MaxPatternBitmap		1196221	1					
ANR	1196289	ExpressionStatement	pinst -> is_planar = tdev -> is_planar	267:4:9652:9686	1196221	6	True				
ANR	1196290	AssignmentExpression	pinst -> is_planar = tdev -> is_planar		1196221	0		=			
ANR	1196291	PtrMemberAccess	pinst -> is_planar		1196221	0					
ANR	1196292	Identifier	pinst		1196221	0					
ANR	1196293	Identifier	is_planar		1196221	1					
ANR	1196294	PtrMemberAccess	tdev -> is_planar		1196221	1					
ANR	1196295	Identifier	tdev		1196221	0					
ANR	1196296	Identifier	is_planar		1196221	1					
ANR	1196297	IfStatement	"if ( pinst -> saved -> have_pattern_streams == 0 && ( * dev_proc ( pinst -> saved -> device , dev_spec_op ) ) ( ( gx_device * ) pinst -> saved -> device , gxdso_pattern_can_accum , pinst , 0 ) == 1 )"		1196221	7					
ANR	1196298	Condition	"pinst -> saved -> have_pattern_streams == 0 && ( * dev_proc ( pinst -> saved -> device , dev_spec_op ) ) ( ( gx_device * ) pinst -> saved -> device , gxdso_pattern_can_accum , pinst , 0 ) == 1"	282:8:10592:10771	1196221	0	True				
ANR	1196299	AndExpression	"pinst -> saved -> have_pattern_streams == 0 && ( * dev_proc ( pinst -> saved -> device , dev_spec_op ) ) ( ( gx_device * ) pinst -> saved -> device , gxdso_pattern_can_accum , pinst , 0 ) == 1"		1196221	0		&&			
ANR	1196300	EqualityExpression	pinst -> saved -> have_pattern_streams == 0		1196221	0		==			
ANR	1196301	PtrMemberAccess	pinst -> saved -> have_pattern_streams		1196221	0					
ANR	1196302	PtrMemberAccess	pinst -> saved		1196221	0					
ANR	1196303	Identifier	pinst		1196221	0					
ANR	1196304	Identifier	saved		1196221	1					
ANR	1196305	Identifier	have_pattern_streams		1196221	1					
ANR	1196306	PrimaryExpression	0		1196221	1					
ANR	1196307	EqualityExpression	"( * dev_proc ( pinst -> saved -> device , dev_spec_op ) ) ( ( gx_device * ) pinst -> saved -> device , gxdso_pattern_can_accum , pinst , 0 ) == 1"		1196221	1		==			
ANR	1196308	CallExpression	"( * dev_proc ( pinst -> saved -> device , dev_spec_op ) ) ( ( gx_device * ) pinst -> saved -> device , gxdso_pattern_can_accum , pinst , 0 )"		1196221	0					
ANR	1196309	Callee	"* dev_proc ( pinst -> saved -> device , dev_spec_op )"		1196221	0					
ANR	1196310	UnaryOperationExpression	"* dev_proc ( pinst -> saved -> device , dev_spec_op )"		1196221	0					
ANR	1196311	UnaryOperator	*		1196221	0					
ANR	1196312	CallExpression	"dev_proc ( pinst -> saved -> device , dev_spec_op )"		1196221	1					
ANR	1196313	Callee	dev_proc		1196221	0					
ANR	1196314	Identifier	dev_proc		1196221	0					
ANR	1196315	ArgumentList	pinst -> saved -> device		1196221	1					
ANR	1196316	Argument	pinst -> saved -> device		1196221	0					
ANR	1196317	PtrMemberAccess	pinst -> saved -> device		1196221	0					
ANR	1196318	PtrMemberAccess	pinst -> saved		1196221	0					
ANR	1196319	Identifier	pinst		1196221	0					
ANR	1196320	Identifier	saved		1196221	1					
ANR	1196321	Identifier	device		1196221	1					
ANR	1196322	Argument	dev_spec_op		1196221	1					
ANR	1196323	Identifier	dev_spec_op		1196221	0					
ANR	1196324	ArgumentList	( gx_device * ) pinst -> saved -> device		1196221	1					
ANR	1196325	Argument	( gx_device * ) pinst -> saved -> device		1196221	0					
ANR	1196326	CastExpression	( gx_device * ) pinst -> saved -> device		1196221	0					
ANR	1196327	CastTarget	gx_device *		1196221	0					
ANR	1196328	PtrMemberAccess	pinst -> saved -> device		1196221	1					
ANR	1196329	PtrMemberAccess	pinst -> saved		1196221	0					
ANR	1196330	Identifier	pinst		1196221	0					
ANR	1196331	Identifier	saved		1196221	1					
ANR	1196332	Identifier	device		1196221	1					
ANR	1196333	Argument	gxdso_pattern_can_accum		1196221	1					
ANR	1196334	Identifier	gxdso_pattern_can_accum		1196221	0					
ANR	1196335	Argument	pinst		1196221	2					
ANR	1196336	Identifier	pinst		1196221	0					
ANR	1196337	Argument	0		1196221	3					
ANR	1196338	PrimaryExpression	0		1196221	0					
ANR	1196339	PrimaryExpression	1		1196221	1					
ANR	1196340	ExpressionStatement	force_no_clist = 1	285:8:10782:10800	1196221	1	True				
ANR	1196341	AssignmentExpression	force_no_clist = 1		1196221	0		=			
ANR	1196342	Identifier	force_no_clist		1196221	0					
ANR	1196343	PrimaryExpression	1		1196221	1					
ANR	1196344	IfStatement	if ( force_no_clist || ( size < max_pattern_bitmap && ! pinst -> is_clist ) || pinst -> templat . PaintType != 1 )		1196221	8					
ANR	1196345	Condition	force_no_clist || ( size < max_pattern_bitmap && ! pinst -> is_clist ) || pinst -> templat . PaintType != 1	286:8:10848:10953	1196221	0	True				
ANR	1196346	OrExpression	force_no_clist || ( size < max_pattern_bitmap && ! pinst -> is_clist ) || pinst -> templat . PaintType != 1		1196221	0		||			
ANR	1196347	Identifier	force_no_clist		1196221	0					
ANR	1196348	OrExpression	( size < max_pattern_bitmap && ! pinst -> is_clist ) || pinst -> templat . PaintType != 1		1196221	1		||			
ANR	1196349	AndExpression	size < max_pattern_bitmap && ! pinst -> is_clist		1196221	0		&&			
ANR	1196350	RelationalExpression	size < max_pattern_bitmap		1196221	0		<			
ANR	1196351	Identifier	size		1196221	0					
ANR	1196352	Identifier	max_pattern_bitmap		1196221	1					
ANR	1196353	UnaryOperationExpression	! pinst -> is_clist		1196221	1					
ANR	1196354	UnaryOperator	!		1196221	0					
ANR	1196355	PtrMemberAccess	pinst -> is_clist		1196221	1					
ANR	1196356	Identifier	pinst		1196221	0					
ANR	1196357	Identifier	is_clist		1196221	1					
ANR	1196358	EqualityExpression	pinst -> templat . PaintType != 1		1196221	1		!=			
ANR	1196359	MemberAccess	pinst -> templat . PaintType		1196221	0					
ANR	1196360	PtrMemberAccess	pinst -> templat		1196221	0					
ANR	1196361	Identifier	pinst		1196221	0					
ANR	1196362	Identifier	templat		1196221	1					
ANR	1196363	Identifier	PaintType		1196221	1					
ANR	1196364	PrimaryExpression	1		1196221	1					
ANR	1196365	CompoundStatement		31:8:1669:1803	1196221	1					
ANR	1196366	IdentifierDeclStatement	"gx_device_pattern_accum * adev = gs_alloc_struct ( mem , gx_device_pattern_accum , & st_device_pattern_accum , cname ) ;"	288:8:10967:11101	1196221	0	True				
ANR	1196367	IdentifierDecl	"* adev = gs_alloc_struct ( mem , gx_device_pattern_accum , & st_device_pattern_accum , cname )"		1196221	0					
ANR	1196368	IdentifierDeclType	gx_device_pattern_accum *		1196221	0					
ANR	1196369	Identifier	adev		1196221	1					
ANR	1196370	AssignmentExpression	"* adev = gs_alloc_struct ( mem , gx_device_pattern_accum , & st_device_pattern_accum , cname )"		1196221	2		=			
ANR	1196371	Identifier	adev		1196221	0					
ANR	1196372	CallExpression	"gs_alloc_struct ( mem , gx_device_pattern_accum , & st_device_pattern_accum , cname )"		1196221	1					
ANR	1196373	Callee	gs_alloc_struct		1196221	0					
ANR	1196374	Identifier	gs_alloc_struct		1196221	0					
ANR	1196375	ArgumentList	mem		1196221	1					
ANR	1196376	Argument	mem		1196221	0					
ANR	1196377	Identifier	mem		1196221	0					
ANR	1196378	Argument	gx_device_pattern_accum		1196221	1					
ANR	1196379	Identifier	gx_device_pattern_accum		1196221	0					
ANR	1196380	Argument	& st_device_pattern_accum		1196221	2					
ANR	1196381	UnaryOperationExpression	& st_device_pattern_accum		1196221	0					
ANR	1196382	UnaryOperator	&		1196221	0					
ANR	1196383	Identifier	st_device_pattern_accum		1196221	1					
ANR	1196384	Argument	cname		1196221	3					
ANR	1196385	Identifier	cname		1196221	0					
ANR	1196386	IfStatement	if ( adev == 0 )		1196221	1					
ANR	1196387	Condition	adev == 0	290:12:11115:11123	1196221	0	True				
ANR	1196388	EqualityExpression	adev == 0		1196221	0		==			
ANR	1196389	Identifier	adev		1196221	0					
ANR	1196390	PrimaryExpression	0		1196221	1					
ANR	1196391	ReturnStatement	return 0 ;	291:12:11138:11146	1196221	1	True				
ANR	1196392	PrimaryExpression	0		1196221	0					
ANR	1196393	IfStatement	if ( pinst -> is_clist )		1196221	2					
ANR	1196394	Condition	pinst -> is_clist	293:12:11173:11187	1196221	0	True				
ANR	1196395	PtrMemberAccess	pinst -> is_clist		1196221	0					
ANR	1196396	Identifier	pinst		1196221	0					
ANR	1196397	Identifier	is_clist		1196221	1					
ANR	1196398	ExpressionStatement	"emprintf ( mem , ""not using clist even though clist is requested\\n"" )"	294:12:11202:11267	1196221	1	True				
ANR	1196399	CallExpression	"emprintf ( mem , ""not using clist even though clist is requested\\n"" )"		1196221	0					
ANR	1196400	Callee	emprintf		1196221	0					
ANR	1196401	Identifier	emprintf		1196221	0					
ANR	1196402	ArgumentList	mem		1196221	1					
ANR	1196403	Argument	mem		1196221	0					
ANR	1196404	Identifier	mem		1196221	0					
ANR	1196405	Argument	"""not using clist even though clist is requested\\n"""		1196221	1					
ANR	1196406	PrimaryExpression	"""not using clist even though clist is requested\\n"""		1196221	0					
ANR	1196407	ExpressionStatement	pinst -> is_clist = false	296:8:11284:11307	1196221	3	True				
ANR	1196408	AssignmentExpression	pinst -> is_clist = false		1196221	0		=			
ANR	1196409	PtrMemberAccess	pinst -> is_clist		1196221	0					
ANR	1196410	Identifier	pinst		1196221	0					
ANR	1196411	Identifier	is_clist		1196221	1					
ANR	1196412	Identifier	false		1196221	1					
ANR	1196413	ExpressionStatement	"gx_device_init ( ( gx_device * ) adev , ( const gx_device * ) & gs_pattern_accum_device , mem , true )"	297:8:11317:11452	1196221	4	True				
ANR	1196414	CallExpression	"gx_device_init ( ( gx_device * ) adev , ( const gx_device * ) & gs_pattern_accum_device , mem , true )"		1196221	0					
ANR	1196415	Callee	gx_device_init		1196221	0					
ANR	1196416	Identifier	gx_device_init		1196221	0					
ANR	1196417	ArgumentList	( gx_device * ) adev		1196221	1					
ANR	1196418	Argument	( gx_device * ) adev		1196221	0					
ANR	1196419	CastExpression	( gx_device * ) adev		1196221	0					
ANR	1196420	CastTarget	gx_device *		1196221	0					
ANR	1196421	Identifier	adev		1196221	1					
ANR	1196422	Argument	( const gx_device * ) & gs_pattern_accum_device		1196221	1					
ANR	1196423	CastExpression	( const gx_device * ) & gs_pattern_accum_device		1196221	0					
ANR	1196424	CastTarget	const gx_device *		1196221	0					
ANR	1196425	UnaryOperationExpression	& gs_pattern_accum_device		1196221	1					
ANR	1196426	UnaryOperator	&		1196221	0					
ANR	1196427	Identifier	gs_pattern_accum_device		1196221	1					
ANR	1196428	Argument	mem		1196221	2					
ANR	1196429	Identifier	mem		1196221	0					
ANR	1196430	Argument	true		1196221	3					
ANR	1196431	Identifier	true		1196221	0					
ANR	1196432	ExpressionStatement	adev -> instance = pinst	300:8:11462:11484	1196221	5	True				
ANR	1196433	AssignmentExpression	adev -> instance = pinst		1196221	0		=			
ANR	1196434	PtrMemberAccess	adev -> instance		1196221	0					
ANR	1196435	Identifier	adev		1196221	0					
ANR	1196436	Identifier	instance		1196221	1					
ANR	1196437	Identifier	pinst		1196221	1					
ANR	1196438	ExpressionStatement	adev -> bitmap_memory = storage_memory	301:8:11494:11530	1196221	6	True				
ANR	1196439	AssignmentExpression	adev -> bitmap_memory = storage_memory		1196221	0		=			
ANR	1196440	PtrMemberAccess	adev -> bitmap_memory		1196221	0					
ANR	1196441	Identifier	adev		1196221	0					
ANR	1196442	Identifier	bitmap_memory		1196221	1					
ANR	1196443	Identifier	storage_memory		1196221	1					
ANR	1196444	ExpressionStatement	fdev = ( gx_device_forward * ) adev	302:8:11540:11572	1196221	7	True				
ANR	1196445	AssignmentExpression	fdev = ( gx_device_forward * ) adev		1196221	0		=			
ANR	1196446	Identifier	fdev		1196221	0					
ANR	1196447	CastExpression	( gx_device_forward * ) adev		1196221	1					
ANR	1196448	CastTarget	gx_device_forward *		1196221	0					
ANR	1196449	Identifier	adev		1196221	1					
ANR	1196450	ElseStatement	else		1196221	0					
ANR	1196451	CompoundStatement		53:8:2603:2680	1196221	0					
ANR	1196452	IdentifierDeclStatement	"gx_device_buf_procs_t buf_procs = { dummy_create_buf_device , dummy_size_buf_device , dummy_setup_buf_device , dummy_destroy_buf_device } ;"	304:8:11595:11735	1196221	0	True				
ANR	1196453	IdentifierDecl	"buf_procs = { dummy_create_buf_device , dummy_size_buf_device , dummy_setup_buf_device , dummy_destroy_buf_device }"		1196221	0					
ANR	1196454	IdentifierDeclType	gx_device_buf_procs_t		1196221	0					
ANR	1196455	Identifier	buf_procs		1196221	1					
ANR	1196456	AssignmentExpression	"buf_procs = { dummy_create_buf_device , dummy_size_buf_device , dummy_setup_buf_device , dummy_destroy_buf_device }"		1196221	2		=			
ANR	1196457	Identifier	buf_procs		1196221	0					
ANR	1196458	InitializerList	dummy_create_buf_device		1196221	1					
ANR	1196459	Identifier	dummy_create_buf_device		1196221	0					
ANR	1196460	Identifier	dummy_size_buf_device		1196221	1					
ANR	1196461	Identifier	dummy_setup_buf_device		1196221	2					
ANR	1196462	Identifier	dummy_destroy_buf_device		1196221	3					
ANR	1196463	IdentifierDeclStatement	gx_device_clist * cdev ;	306:8:11745:11766	1196221	1	True				
ANR	1196464	IdentifierDecl	* cdev		1196221	0					
ANR	1196465	IdentifierDeclType	gx_device_clist *		1196221	0					
ANR	1196466	Identifier	cdev		1196221	1					
ANR	1196467	IdentifierDeclStatement	gx_device_clist_writer * cwdev ;	307:8:11776:11805	1196221	2	True				
ANR	1196468	IdentifierDecl	* cwdev		1196221	0					
ANR	1196469	IdentifierDeclType	gx_device_clist_writer *		1196221	0					
ANR	1196470	Identifier	cwdev		1196221	1					
ANR	1196471	IdentifierDeclStatement	const int data_size = 1024 * 128 ;	308:8:11815:11845	1196221	3	True				
ANR	1196472	IdentifierDecl	data_size = 1024 * 128		1196221	0					
ANR	1196473	IdentifierDeclType	const int		1196221	0					
ANR	1196474	Identifier	data_size		1196221	1					
ANR	1196475	AssignmentExpression	data_size = 1024 * 128		1196221	2		=			
ANR	1196476	Identifier	data_size		1196221	0					
ANR	1196477	MultiplicativeExpression	1024 * 128		1196221	1		*			
ANR	1196478	PrimaryExpression	1024		1196221	0					
ANR	1196479	PrimaryExpression	128		1196221	1					
ANR	1196480	IdentifierDeclStatement	gx_band_params_t band_params = { 0 } ;	309:8:11855:11891	1196221	4	True				
ANR	1196481	IdentifierDecl	band_params = { 0 }		1196221	0					
ANR	1196482	IdentifierDeclType	gx_band_params_t		1196221	0					
ANR	1196483	Identifier	band_params		1196221	1					
ANR	1196484	AssignmentExpression	band_params = { 0 }		1196221	2		=			
ANR	1196485	Identifier	band_params		1196221	0					
ANR	1196486	InitializerList	0		1196221	1					
ANR	1196487	PrimaryExpression	0		1196221	0					
ANR	1196488	IdentifierDeclStatement	"byte * data = gs_alloc_bytes ( storage_memory -> non_gc_memory , data_size , cname ) ;"	310:8:11901:11978	1196221	5	True				
ANR	1196489	IdentifierDecl	"* data = gs_alloc_bytes ( storage_memory -> non_gc_memory , data_size , cname )"		1196221	0					
ANR	1196490	IdentifierDeclType	byte *		1196221	0					
ANR	1196491	Identifier	data		1196221	1					
ANR	1196492	AssignmentExpression	"* data = gs_alloc_bytes ( storage_memory -> non_gc_memory , data_size , cname )"		1196221	2		=			
ANR	1196493	Identifier	data		1196221	0					
ANR	1196494	CallExpression	"gs_alloc_bytes ( storage_memory -> non_gc_memory , data_size , cname )"		1196221	1					
ANR	1196495	Callee	gs_alloc_bytes		1196221	0					
ANR	1196496	Identifier	gs_alloc_bytes		1196221	0					
ANR	1196497	ArgumentList	storage_memory -> non_gc_memory		1196221	1					
ANR	1196498	Argument	storage_memory -> non_gc_memory		1196221	0					
ANR	1196499	PtrMemberAccess	storage_memory -> non_gc_memory		1196221	0					
ANR	1196500	Identifier	storage_memory		1196221	0					
ANR	1196501	Identifier	non_gc_memory		1196221	1					
ANR	1196502	Argument	data_size		1196221	1					
ANR	1196503	Identifier	data_size		1196221	0					
ANR	1196504	Argument	cname		1196221	2					
ANR	1196505	Identifier	cname		1196221	0					
ANR	1196506	IfStatement	if ( data == NULL )		1196221	6					
ANR	1196507	Condition	data == NULL	312:12:11993:12004	1196221	0	True				
ANR	1196508	EqualityExpression	data == NULL		1196221	0		==			
ANR	1196509	Identifier	data		1196221	0					
ANR	1196510	Identifier	NULL		1196221	1					
ANR	1196511	ReturnStatement	return 0 ;	313:12:12019:12027	1196221	1	True				
ANR	1196512	PrimaryExpression	0		1196221	0					
ANR	1196513	ExpressionStatement	pinst -> is_clist = true	314:8:12037:12059	1196221	7	True				
ANR	1196514	AssignmentExpression	pinst -> is_clist = true		1196221	0		=			
ANR	1196515	PtrMemberAccess	pinst -> is_clist		1196221	0					
ANR	1196516	Identifier	pinst		1196221	0					
ANR	1196517	Identifier	is_clist		1196221	1					
ANR	1196518	Identifier	true		1196221	1					
ANR	1196519	ExpressionStatement	band_params . BandWidth = pinst -> size . x	316:8:12156:12193	1196221	8	True				
ANR	1196520	AssignmentExpression	band_params . BandWidth = pinst -> size . x		1196221	0		=			
ANR	1196521	MemberAccess	band_params . BandWidth		1196221	0					
ANR	1196522	Identifier	band_params		1196221	0					
ANR	1196523	Identifier	BandWidth		1196221	1					
ANR	1196524	MemberAccess	pinst -> size . x		1196221	1					
ANR	1196525	PtrMemberAccess	pinst -> size		1196221	0					
ANR	1196526	Identifier	pinst		1196221	0					
ANR	1196527	Identifier	size		1196221	1					
ANR	1196528	Identifier	x		1196221	1					
ANR	1196529	ExpressionStatement	band_params . BandHeight = pinst -> size . y	317:8:12203:12241	1196221	9	True				
ANR	1196530	AssignmentExpression	band_params . BandHeight = pinst -> size . y		1196221	0		=			
ANR	1196531	MemberAccess	band_params . BandHeight		1196221	0					
ANR	1196532	Identifier	band_params		1196221	0					
ANR	1196533	Identifier	BandHeight		1196221	1					
ANR	1196534	MemberAccess	pinst -> size . y		1196221	1					
ANR	1196535	PtrMemberAccess	pinst -> size		1196221	0					
ANR	1196536	Identifier	pinst		1196221	0					
ANR	1196537	Identifier	size		1196221	1					
ANR	1196538	Identifier	y		1196221	1					
ANR	1196539	ExpressionStatement	band_params . BandBufferSpace = 0	318:8:12251:12282	1196221	10	True				
ANR	1196540	AssignmentExpression	band_params . BandBufferSpace = 0		1196221	0		=			
ANR	1196541	MemberAccess	band_params . BandBufferSpace		1196221	0					
ANR	1196542	Identifier	band_params		1196221	0					
ANR	1196543	Identifier	BandBufferSpace		1196221	1					
ANR	1196544	PrimaryExpression	0		1196221	1					
ANR	1196545	ExpressionStatement	"cdev = clist_make_accum_device ( tdev , ""pattern-clist"" , data , data_size , & buf_procs , & band_params , true , pinst -> templat . uses_transparency , pinst )"	320:8:12293:12537	1196221	11	True				
ANR	1196546	AssignmentExpression	"cdev = clist_make_accum_device ( tdev , ""pattern-clist"" , data , data_size , & buf_procs , & band_params , true , pinst -> templat . uses_transparency , pinst )"		1196221	0		=			
ANR	1196547	Identifier	cdev		1196221	0					
ANR	1196548	CallExpression	"clist_make_accum_device ( tdev , ""pattern-clist"" , data , data_size , & buf_procs , & band_params , true , pinst -> templat . uses_transparency , pinst )"		1196221	1					
ANR	1196549	Callee	clist_make_accum_device		1196221	0					
ANR	1196550	Identifier	clist_make_accum_device		1196221	0					
ANR	1196551	ArgumentList	tdev		1196221	1					
ANR	1196552	Argument	tdev		1196221	0					
ANR	1196553	Identifier	tdev		1196221	0					
ANR	1196554	Argument	"""pattern-clist"""		1196221	1					
ANR	1196555	PrimaryExpression	"""pattern-clist"""		1196221	0					
ANR	1196556	Argument	data		1196221	2					
ANR	1196557	Identifier	data		1196221	0					
ANR	1196558	Argument	data_size		1196221	3					
ANR	1196559	Identifier	data_size		1196221	0					
ANR	1196560	Argument	& buf_procs		1196221	4					
ANR	1196561	UnaryOperationExpression	& buf_procs		1196221	0					
ANR	1196562	UnaryOperator	&		1196221	0					
ANR	1196563	Identifier	buf_procs		1196221	1					
ANR	1196564	Argument	& band_params		1196221	5					
ANR	1196565	UnaryOperationExpression	& band_params		1196221	0					
ANR	1196566	UnaryOperator	&		1196221	0					
ANR	1196567	Identifier	band_params		1196221	1					
ANR	1196568	Argument	true		1196221	6					
ANR	1196569	Identifier	true		1196221	0					
ANR	1196570	Argument	pinst -> templat . uses_transparency		1196221	7					
ANR	1196571	MemberAccess	pinst -> templat . uses_transparency		1196221	0					
ANR	1196572	PtrMemberAccess	pinst -> templat		1196221	0					
ANR	1196573	Identifier	pinst		1196221	0					
ANR	1196574	Identifier	templat		1196221	1					
ANR	1196575	Identifier	uses_transparency		1196221	1					
ANR	1196576	Argument	pinst		1196221	8					
ANR	1196577	Identifier	pinst		1196221	0					
ANR	1196578	IfStatement	if ( cdev == 0 )		1196221	12					
ANR	1196579	Condition	cdev == 0	323:12:12551:12559	1196221	0	True				
ANR	1196580	EqualityExpression	cdev == 0		1196221	0		==			
ANR	1196581	Identifier	cdev		1196221	0					
ANR	1196582	PrimaryExpression	0		1196221	1					
ANR	1196583	CompoundStatement		66:23:3264:3264	1196221	1					
ANR	1196584	ExpressionStatement	"gs_free_object ( storage_memory -> non_gc_memory , data , cname )"	324:12:12576:12634	1196221	0	True				
ANR	1196585	CallExpression	"gs_free_object ( storage_memory -> non_gc_memory , data , cname )"		1196221	0					
ANR	1196586	Callee	gs_free_object		1196221	0					
ANR	1196587	Identifier	gs_free_object		1196221	0					
ANR	1196588	ArgumentList	storage_memory -> non_gc_memory		1196221	1					
ANR	1196589	Argument	storage_memory -> non_gc_memory		1196221	0					
ANR	1196590	PtrMemberAccess	storage_memory -> non_gc_memory		1196221	0					
ANR	1196591	Identifier	storage_memory		1196221	0					
ANR	1196592	Identifier	non_gc_memory		1196221	1					
ANR	1196593	Argument	data		1196221	1					
ANR	1196594	Identifier	data		1196221	0					
ANR	1196595	Argument	cname		1196221	2					
ANR	1196596	Identifier	cname		1196221	0					
ANR	1196597	ReturnStatement	return 0 ;	325:12:12648:12656	1196221	1	True				
ANR	1196598	PrimaryExpression	0		1196221	0					
ANR	1196599	ExpressionStatement	cwdev = ( gx_device_clist_writer * ) cdev	327:8:12676:12714	1196221	13	True				
ANR	1196600	AssignmentExpression	cwdev = ( gx_device_clist_writer * ) cdev		1196221	0		=			
ANR	1196601	Identifier	cwdev		1196221	0					
ANR	1196602	CastExpression	( gx_device_clist_writer * ) cdev		1196221	1					
ANR	1196603	CastTarget	gx_device_clist_writer *		1196221	0					
ANR	1196604	Identifier	cdev		1196221	1					
ANR	1196605	ExpressionStatement	cwdev -> finalize = gx_pattern_accum_finalize_cw	328:8:12724:12770	1196221	14	True				
ANR	1196606	AssignmentExpression	cwdev -> finalize = gx_pattern_accum_finalize_cw		1196221	0		=			
ANR	1196607	PtrMemberAccess	cwdev -> finalize		1196221	0					
ANR	1196608	Identifier	cwdev		1196221	0					
ANR	1196609	Identifier	finalize		1196221	1					
ANR	1196610	Identifier	gx_pattern_accum_finalize_cw		1196221	1					
ANR	1196611	ExpressionStatement	"set_dev_proc ( cwdev , open_device , pattern_clist_open_device )"	329:8:12780:12839	1196221	15	True				
ANR	1196612	CallExpression	"set_dev_proc ( cwdev , open_device , pattern_clist_open_device )"		1196221	0					
ANR	1196613	Callee	set_dev_proc		1196221	0					
ANR	1196614	Identifier	set_dev_proc		1196221	0					
ANR	1196615	ArgumentList	cwdev		1196221	1					
ANR	1196616	Argument	cwdev		1196221	0					
ANR	1196617	Identifier	cwdev		1196221	0					
ANR	1196618	Argument	open_device		1196221	1					
ANR	1196619	Identifier	open_device		1196221	0					
ANR	1196620	Argument	pattern_clist_open_device		1196221	2					
ANR	1196621	Identifier	pattern_clist_open_device		1196221	0					
ANR	1196622	ExpressionStatement	fdev = ( gx_device_forward * ) cdev	330:8:12849:12881	1196221	16	True				
ANR	1196623	AssignmentExpression	fdev = ( gx_device_forward * ) cdev		1196221	0		=			
ANR	1196624	Identifier	fdev		1196221	0					
ANR	1196625	CastExpression	( gx_device_forward * ) cdev		1196221	1					
ANR	1196626	CastTarget	gx_device_forward *		1196221	0					
ANR	1196627	Identifier	cdev		1196221	1					
ANR	1196628	ExpressionStatement	fdev -> log2_align_mod = tdev -> log2_align_mod	332:4:12893:12936	1196221	9	True				
ANR	1196629	AssignmentExpression	fdev -> log2_align_mod = tdev -> log2_align_mod		1196221	0		=			
ANR	1196630	PtrMemberAccess	fdev -> log2_align_mod		1196221	0					
ANR	1196631	Identifier	fdev		1196221	0					
ANR	1196632	Identifier	log2_align_mod		1196221	1					
ANR	1196633	PtrMemberAccess	tdev -> log2_align_mod		1196221	1					
ANR	1196634	Identifier	tdev		1196221	0					
ANR	1196635	Identifier	log2_align_mod		1196221	1					
ANR	1196636	ExpressionStatement	fdev -> pad = tdev -> pad	333:4:12942:12963	1196221	10	True				
ANR	1196637	AssignmentExpression	fdev -> pad = tdev -> pad		1196221	0		=			
ANR	1196638	PtrMemberAccess	fdev -> pad		1196221	0					
ANR	1196639	Identifier	fdev		1196221	0					
ANR	1196640	Identifier	pad		1196221	1					
ANR	1196641	PtrMemberAccess	tdev -> pad		1196221	1					
ANR	1196642	Identifier	tdev		1196221	0					
ANR	1196643	Identifier	pad		1196221	1					
ANR	1196644	ExpressionStatement	fdev -> is_planar = tdev -> is_planar	334:4:12969:13002	1196221	11	True				
ANR	1196645	AssignmentExpression	fdev -> is_planar = tdev -> is_planar		1196221	0		=			
ANR	1196646	PtrMemberAccess	fdev -> is_planar		1196221	0					
ANR	1196647	Identifier	fdev		1196221	0					
ANR	1196648	Identifier	is_planar		1196221	1					
ANR	1196649	PtrMemberAccess	tdev -> is_planar		1196221	1					
ANR	1196650	Identifier	tdev		1196221	0					
ANR	1196651	Identifier	is_planar		1196221	1					
ANR	1196652	ExpressionStatement	fdev -> graphics_type_tag = tdev -> graphics_type_tag	335:4:13008:13057	1196221	12	True				
ANR	1196653	AssignmentExpression	fdev -> graphics_type_tag = tdev -> graphics_type_tag		1196221	0		=			
ANR	1196654	PtrMemberAccess	fdev -> graphics_type_tag		1196221	0					
ANR	1196655	Identifier	fdev		1196221	0					
ANR	1196656	Identifier	graphics_type_tag		1196221	1					
ANR	1196657	PtrMemberAccess	tdev -> graphics_type_tag		1196221	1					
ANR	1196658	Identifier	tdev		1196221	0					
ANR	1196659	Identifier	graphics_type_tag		1196221	1					
ANR	1196660	ExpressionStatement	fdev -> interpolate_control = tdev -> interpolate_control	336:4:13063:13116	1196221	13	True				
ANR	1196661	AssignmentExpression	fdev -> interpolate_control = tdev -> interpolate_control		1196221	0		=			
ANR	1196662	PtrMemberAccess	fdev -> interpolate_control		1196221	0					
ANR	1196663	Identifier	fdev		1196221	0					
ANR	1196664	Identifier	interpolate_control		1196221	1					
ANR	1196665	PtrMemberAccess	tdev -> interpolate_control		1196221	1					
ANR	1196666	Identifier	tdev		1196221	0					
ANR	1196667	Identifier	interpolate_control		1196221	1					
ANR	1196668	ExpressionStatement	gx_device_forward_fill_in_procs ( fdev )	337:4:13122:13159	1196221	14	True				
ANR	1196669	CallExpression	gx_device_forward_fill_in_procs ( fdev )		1196221	0					
ANR	1196670	Callee	gx_device_forward_fill_in_procs		1196221	0					
ANR	1196671	Identifier	gx_device_forward_fill_in_procs		1196221	0					
ANR	1196672	ArgumentList	fdev		1196221	1					
ANR	1196673	Argument	fdev		1196221	0					
ANR	1196674	Identifier	fdev		1196221	0					
ANR	1196675	ReturnStatement	return fdev ;	338:4:13165:13176	1196221	15	True				
ANR	1196676	Identifier	fdev		1196221	0					
ANR	1196677	ReturnType	gx_device_forward *		1196221	1					
ANR	1196678	Identifier	gx_pattern_accum_alloc		1196221	2					
ANR	1196679	ParameterList	"gs_memory_t * mem , gs_memory_t * storage_memory , gs_pattern1_instance_t * pinst , client_name_t cname"		1196221	3					
ANR	1196680	Parameter	gs_memory_t * mem	256:23:9173:9189	1196221	0	True				
ANR	1196681	ParameterType	gs_memory_t *		1196221	0					
ANR	1196682	Identifier	mem		1196221	1					
ANR	1196683	Parameter	gs_memory_t * storage_memory	256:42:9192:9219	1196221	1	True				
ANR	1196684	ParameterType	gs_memory_t *		1196221	0					
ANR	1196685	Identifier	storage_memory		1196221	1					
ANR	1196686	Parameter	gs_pattern1_instance_t * pinst	257:23:9245:9273	1196221	2	True				
ANR	1196687	ParameterType	gs_pattern1_instance_t *		1196221	0					
ANR	1196688	Identifier	pinst		1196221	1					
ANR	1196689	Parameter	client_name_t cname	257:54:9276:9294	1196221	3	True				
ANR	1196690	ParameterType	client_name_t		1196221	0					
ANR	1196691	Identifier	cname		1196221	1					
ANR	1196692	CFGEntryNode	ENTRY		1196221		True				
ANR	1196693	CFGExitNode	EXIT		1196221		True				
ANR	1196694	Symbol	tdev -> MaxPatternBitmap		1196221						
ANR	1196695	Symbol	storage_memory		1196221						
ANR	1196696	Symbol	band_params . BandBufferSpace		1196221						
ANR	1196697	Symbol	pinst -> size . y		1196221						
ANR	1196698	Symbol	pinst -> size . x		1196221						
ANR	1196699	Symbol	data		1196221						
ANR	1196700	Symbol	pinst -> is_planar		1196221						
ANR	1196701	Symbol	max_pattern_bitmap		1196221						
ANR	1196702	Symbol	dev_spec_op		1196221						
ANR	1196703	Symbol	band_params		1196221						
ANR	1196704	Symbol	gx_pattern_size_estimate		1196221						
ANR	1196705	Symbol	pinst -> templat		1196221						
ANR	1196706	Symbol	cwdev		1196221						
ANR	1196707	Symbol	open_device		1196221						
ANR	1196708	Symbol	cwdev -> finalize		1196221						
ANR	1196709	Symbol	fdev -> graphics_type_tag		1196221						
ANR	1196710	Symbol	tdev		1196221						
ANR	1196711	Symbol	clist_make_accum_device		1196221						
ANR	1196712	Symbol	dummy_destroy_buf_device		1196221						
ANR	1196713	Symbol	adev -> bitmap_memory		1196221						
ANR	1196714	Symbol	data_size		1196221						
ANR	1196715	Symbol	* cwdev		1196221						
ANR	1196716	Symbol	band_params . BandHeight		1196221						
ANR	1196717	Symbol	pinst -> saved		1196221						
ANR	1196718	Symbol	NULL		1196221						
ANR	1196719	Symbol	tdev -> interpolate_control		1196221						
ANR	1196720	Symbol	tdev -> pad		1196221						
ANR	1196721	Symbol	pattern_clist_open_device		1196221						
ANR	1196722	Symbol	gx_device_pattern_accum		1196221						
ANR	1196723	Symbol	force_no_clist		1196221						
ANR	1196724	Symbol	storage_memory -> non_gc_memory		1196221						
ANR	1196725	Symbol	& gs_pattern_accum_device		1196221						
ANR	1196726	Symbol	adev -> instance		1196221						
ANR	1196727	Symbol	pinst -> saved -> device		1196221						
ANR	1196728	Symbol	size		1196221						
ANR	1196729	Symbol	true		1196221						
ANR	1196730	Symbol	pinst -> templat . PaintType		1196221						
ANR	1196731	Symbol	adev		1196221						
ANR	1196732	Symbol	dummy_size_buf_device		1196221						
ANR	1196733	Symbol	fdev -> is_planar		1196221						
ANR	1196734	Symbol	* fdev		1196221						
ANR	1196735	Symbol	fdev -> interpolate_control		1196221						
ANR	1196736	Symbol	gx_pattern_accum_finalize_cw		1196221						
ANR	1196737	Symbol	fdev		1196221						
ANR	1196738	Symbol	pinst -> saved -> have_pattern_streams		1196221						
ANR	1196739	Symbol	MaxPatternBitmap_DEFAULT		1196221						
ANR	1196740	Symbol	buf_procs		1196221						
ANR	1196741	Symbol	* pinst -> saved		1196221						
ANR	1196742	Symbol	* dev_proc		1196221						
ANR	1196743	Symbol	gs_alloc_struct		1196221						
ANR	1196744	Symbol	dummy_setup_buf_device		1196221						
ANR	1196745	Symbol	cname		1196221						
ANR	1196746	Symbol	band_params . BandWidth		1196221						
ANR	1196747	Symbol	fdev -> pad		1196221						
ANR	1196748	Symbol	dummy_create_buf_device		1196221						
ANR	1196749	Symbol	mem		1196221						
ANR	1196750	Symbol	* * pinst		1196221						
ANR	1196751	Symbol	dev_proc		1196221						
ANR	1196752	Symbol	* adev		1196221						
ANR	1196753	Symbol	& band_params		1196221						
ANR	1196754	Symbol	pinst -> templat . uses_transparency		1196221						
ANR	1196755	Symbol	device_encodes_tags		1196221						
ANR	1196756	Symbol	* storage_memory		1196221						
ANR	1196757	Symbol	gs_alloc_bytes		1196221						
ANR	1196758	Symbol	& buf_procs		1196221						
ANR	1196759	Symbol	tdev -> graphics_type_tag		1196221						
ANR	1196760	Symbol	pinst -> is_clist		1196221						
ANR	1196761	Symbol	& st_device_pattern_accum		1196221						
ANR	1196762	Symbol	false		1196221						
ANR	1196763	Symbol	gxdso_pattern_can_accum		1196221						
ANR	1196764	Symbol	pinst		1196221						
ANR	1196765	Symbol	tdev -> is_planar		1196221						
ANR	1196766	Symbol	"* dev_proc ( pinst -> saved -> device , dev_spec_op )"		1196221						
ANR	1196767	Symbol	pinst -> size		1196221						
ANR	1196768	Symbol	* tdev		1196221						
ANR	1196769	Symbol	tdev -> log2_align_mod		1196221						
ANR	1196770	Symbol	fdev -> log2_align_mod		1196221						
ANR	1196771	Symbol	has_tags		1196221						
ANR	1196772	Symbol	* pinst		1196221						
ANR	1196773	Symbol	cdev		1196221						
ANR	1196774	Function	pattern_accum_open	347:0:13359:19769							
ANR	1196775	FunctionDef	pattern_accum_open (gx_device * dev)		1196774	0					
ANR	1196776	CompoundStatement		349:0:13406:19769	1196774	0					
ANR	1196777	Statement	gx_device_pattern_accum	350:4:13412:13434	1196774	0	True				
ANR	1196778	Statement	*	350:28:13436:13436	1196774	1	True				
ANR	1196779	Statement	const	350:29:13437:13441	1196774	2	True				
ANR	1196780	ExpressionStatement	padev = ( gx_device_pattern_accum * ) dev	350:35:13443:13482	1196774	3	True				
ANR	1196781	AssignmentExpression	padev = ( gx_device_pattern_accum * ) dev		1196774	0		=			
ANR	1196782	Identifier	padev		1196774	0					
ANR	1196783	CastExpression	( gx_device_pattern_accum * ) dev		1196774	1					
ANR	1196784	CastTarget	gx_device_pattern_accum *		1196774	0					
ANR	1196785	Identifier	dev		1196774	1					
ANR	1196786	IdentifierDeclStatement	const gs_pattern1_instance_t * pinst = padev -> instance ;	351:4:13488:13541	1196774	4	True				
ANR	1196787	IdentifierDecl	* pinst = padev -> instance		1196774	0					
ANR	1196788	IdentifierDeclType	const gs_pattern1_instance_t *		1196774	0					
ANR	1196789	Identifier	pinst		1196774	1					
ANR	1196790	AssignmentExpression	* pinst = padev -> instance		1196774	2		=			
ANR	1196791	Identifier	pinst		1196774	0					
ANR	1196792	PtrMemberAccess	padev -> instance		1196774	1					
ANR	1196793	Identifier	padev		1196774	0					
ANR	1196794	Identifier	instance		1196774	1					
ANR	1196795	IdentifierDeclStatement	gs_memory_t * mem = padev -> bitmap_memory ;	352:4:13547:13586	1196774	5	True				
ANR	1196796	IdentifierDecl	* mem = padev -> bitmap_memory		1196774	0					
ANR	1196797	IdentifierDeclType	gs_memory_t *		1196774	0					
ANR	1196798	Identifier	mem		1196774	1					
ANR	1196799	AssignmentExpression	* mem = padev -> bitmap_memory		1196774	2		=			
ANR	1196800	Identifier	mem		1196774	0					
ANR	1196801	PtrMemberAccess	padev -> bitmap_memory		1196774	1					
ANR	1196802	Identifier	padev		1196774	0					
ANR	1196803	Identifier	bitmap_memory		1196774	1					
ANR	1196804	IdentifierDeclStatement	gx_device_memory * mask = 0 ;	353:4:13592:13618	1196774	6	True				
ANR	1196805	IdentifierDecl	* mask = 0		1196774	0					
ANR	1196806	IdentifierDeclType	gx_device_memory *		1196774	0					
ANR	1196807	Identifier	mask		1196774	1					
ANR	1196808	AssignmentExpression	* mask = 0		1196774	2		=			
ANR	1196809	Identifier	mask		1196774	0					
ANR	1196810	PrimaryExpression	0		1196774	1					
ANR	1196811	IdentifierDeclStatement	gx_device_memory * bits = 0 ;	354:4:13624:13650	1196774	7	True				
ANR	1196812	IdentifierDecl	* bits = 0		1196774	0					
ANR	1196813	IdentifierDeclType	gx_device_memory *		1196774	0					
ANR	1196814	Identifier	bits		1196774	1					
ANR	1196815	AssignmentExpression	* bits = 0		1196774	2		=			
ANR	1196816	Identifier	bits		1196774	0					
ANR	1196817	PrimaryExpression	0		1196774	1					
ANR	1196818	IdentifierDeclStatement	gx_device * target = ( padev -> target == 0 ? gs_currentdevice ( pinst -> saved ) : padev -> target ) ;	360:4:13894:14000	1196774	8	True				
ANR	1196819	IdentifierDecl	* target = ( padev -> target == 0 ? gs_currentdevice ( pinst -> saved ) : padev -> target )		1196774	0					
ANR	1196820	IdentifierDeclType	gx_device *		1196774	0					
ANR	1196821	Identifier	target		1196774	1					
ANR	1196822	AssignmentExpression	* target = ( padev -> target == 0 ? gs_currentdevice ( pinst -> saved ) : padev -> target )		1196774	2		=			
ANR	1196823	Identifier	target		1196774	0					
ANR	1196824	ConditionalExpression	padev -> target == 0 ? gs_currentdevice ( pinst -> saved ) : padev -> target		1196774	1					
ANR	1196825	Condition	padev -> target == 0		1196774	0					
ANR	1196826	EqualityExpression	padev -> target == 0		1196774	0		==			
ANR	1196827	PtrMemberAccess	padev -> target		1196774	0					
ANR	1196828	Identifier	padev		1196774	0					
ANR	1196829	Identifier	target		1196774	1					
ANR	1196830	PrimaryExpression	0		1196774	1					
ANR	1196831	CallExpression	gs_currentdevice ( pinst -> saved )		1196774	1					
ANR	1196832	Callee	gs_currentdevice		1196774	0					
ANR	1196833	Identifier	gs_currentdevice		1196774	0					
ANR	1196834	ArgumentList	pinst -> saved		1196774	1					
ANR	1196835	Argument	pinst -> saved		1196774	0					
ANR	1196836	PtrMemberAccess	pinst -> saved		1196774	0					
ANR	1196837	Identifier	pinst		1196774	0					
ANR	1196838	Identifier	saved		1196774	1					
ANR	1196839	PtrMemberAccess	padev -> target		1196774	2					
ANR	1196840	Identifier	padev		1196774	0					
ANR	1196841	Identifier	target		1196774	1					
ANR	1196842	IdentifierDeclStatement	int width = pinst -> size . x ;	363:4:14006:14031	1196774	9	True				
ANR	1196843	IdentifierDecl	width = pinst -> size . x		1196774	0					
ANR	1196844	IdentifierDeclType	int		1196774	0					
ANR	1196845	Identifier	width		1196774	1					
ANR	1196846	AssignmentExpression	width = pinst -> size . x		1196774	2		=			
ANR	1196847	Identifier	width		1196774	0					
ANR	1196848	MemberAccess	pinst -> size . x		1196774	1					
ANR	1196849	PtrMemberAccess	pinst -> size		1196774	0					
ANR	1196850	Identifier	pinst		1196774	0					
ANR	1196851	Identifier	size		1196774	1					
ANR	1196852	Identifier	x		1196774	1					
ANR	1196853	IdentifierDeclStatement	int height = pinst -> size . y ;	364:4:14037:14063	1196774	10	True				
ANR	1196854	IdentifierDecl	height = pinst -> size . y		1196774	0					
ANR	1196855	IdentifierDeclType	int		1196774	0					
ANR	1196856	Identifier	height		1196774	1					
ANR	1196857	AssignmentExpression	height = pinst -> size . y		1196774	2		=			
ANR	1196858	Identifier	height		1196774	0					
ANR	1196859	MemberAccess	pinst -> size . y		1196774	1					
ANR	1196860	PtrMemberAccess	pinst -> size		1196774	0					
ANR	1196861	Identifier	pinst		1196774	0					
ANR	1196862	Identifier	size		1196774	1					
ANR	1196863	Identifier	y		1196774	1					
ANR	1196864	IdentifierDeclStatement	int code = 0 ;	365:4:14069:14081	1196774	11	True				
ANR	1196865	IdentifierDecl	code = 0		1196774	0					
ANR	1196866	IdentifierDeclType	int		1196774	0					
ANR	1196867	Identifier	code		1196774	1					
ANR	1196868	AssignmentExpression	code = 0		1196774	2		=			
ANR	1196869	Identifier	code		1196774	0					
ANR	1196870	PrimaryExpression	0		1196774	1					
ANR	1196871	IdentifierDeclStatement	bool mask_open = false ;	366:4:14087:14109	1196774	12	True				
ANR	1196872	IdentifierDecl	mask_open = false		1196774	0					
ANR	1196873	IdentifierDeclType	bool		1196774	0					
ANR	1196874	Identifier	mask_open		1196774	1					
ANR	1196875	AssignmentExpression	mask_open = false		1196774	2		=			
ANR	1196876	Identifier	false		1196774	0					
ANR	1196877	Identifier	false		1196774	1					
ANR	1196878	Statement	define	372:1:14248:14253	1196774	13	True				
ANR	1196879	Statement	PDSET	372:8:14255:14259	1196774	14	True				
ANR	1196880	Statement	(	372:13:14260:14260	1196774	15	True				
ANR	1196881	Statement	dev	372:14:14261:14263	1196774	16	True				
ANR	1196882	Statement	)	372:17:14264:14264	1196774	17	True				
ANR	1196883	Statement	(	373:2:14269:14269	1196774	18	True				
ANR	1196884	Statement	(	373:3:14270:14270	1196774	19	True				
ANR	1196885	Statement	dev	373:4:14271:14273	1196774	20	True				
ANR	1196886	Statement	)	373:7:14274:14274	1196774	21	True				
ANR	1196887	Statement	->	373:8:14275:14276	1196774	22	True				
ANR	1196888	Statement	width	373:10:14277:14281	1196774	23	True				
ANR	1196889	Statement	=	373:16:14283:14283	1196774	24	True				
ANR	1196890	Statement	width	373:18:14285:14289	1196774	25	True				
ANR	1196891	Statement	","	373:23:14290:14290	1196774	26	True				
ANR	1196892	Statement	(	373:25:14292:14292	1196774	27	True				
ANR	1196893	Statement	dev	373:26:14293:14295	1196774	28	True				
ANR	1196894	Statement	)	373:29:14296:14296	1196774	29	True				
ANR	1196895	Statement	->	373:30:14297:14298	1196774	30	True				
ANR	1196896	Statement	height	373:32:14299:14304	1196774	31	True				
ANR	1196897	Statement	=	373:39:14306:14306	1196774	32	True				
ANR	1196898	Statement	height	373:41:14308:14313	1196774	33	True				
ANR	1196899	Statement	","	373:47:14314:14314	1196774	34	True				
ANR	1196900	Statement	(	375:3:14371:14371	1196774	35	True				
ANR	1196901	Statement	dev	375:4:14372:14374	1196774	36	True				
ANR	1196902	Statement	)	375:7:14375:14375	1196774	37	True				
ANR	1196903	Statement	->	375:8:14376:14377	1196774	38	True				
ANR	1196904	Statement	HWResolution	375:10:14378:14389	1196774	39	True				
ANR	1196905	Statement	[	375:22:14390:14390	1196774	40	True				
ANR	1196906	Statement	0	375:23:14391:14391	1196774	41	True				
ANR	1196907	Statement	]	375:24:14392:14392	1196774	42	True				
ANR	1196908	Statement	=	375:26:14394:14394	1196774	43	True				
ANR	1196909	Statement	target	375:28:14396:14401	1196774	44	True				
ANR	1196910	Statement	->	375:34:14402:14403	1196774	45	True				
ANR	1196911	Statement	HWResolution	375:36:14404:14415	1196774	46	True				
ANR	1196912	Statement	[	375:48:14416:14416	1196774	47	True				
ANR	1196913	Statement	0	375:49:14417:14417	1196774	48	True				
ANR	1196914	Statement	]	375:50:14418:14418	1196774	49	True				
ANR	1196915	Statement	","	375:51:14419:14419	1196774	50	True				
ANR	1196916	Statement	(	376:3:14425:14425	1196774	51	True				
ANR	1196917	Statement	dev	376:4:14426:14428	1196774	52	True				
ANR	1196918	Statement	)	376:7:14429:14429	1196774	53	True				
ANR	1196919	Statement	->	376:8:14430:14431	1196774	54	True				
ANR	1196920	Statement	HWResolution	376:10:14432:14443	1196774	55	True				
ANR	1196921	Statement	[	376:22:14444:14444	1196774	56	True				
ANR	1196922	Statement	1	376:23:14445:14445	1196774	57	True				
ANR	1196923	Statement	]	376:24:14446:14446	1196774	58	True				
ANR	1196924	Statement	=	376:26:14448:14448	1196774	59	True				
ANR	1196925	Statement	target	376:28:14450:14455	1196774	60	True				
ANR	1196926	Statement	->	376:34:14456:14457	1196774	61	True				
ANR	1196927	Statement	HWResolution	376:36:14458:14469	1196774	62	True				
ANR	1196928	Statement	[	376:48:14470:14470	1196774	63	True				
ANR	1196929	Statement	1	376:49:14471:14471	1196774	64	True				
ANR	1196930	Statement	]	376:50:14472:14472	1196774	65	True				
ANR	1196931	Statement	)	376:51:14473:14473	1196774	66	True				
ANR	1196932	ExpressionStatement	PDSET ( padev )	378:4:14480:14492	1196774	67	True				
ANR	1196933	CallExpression	PDSET ( padev )		1196774	0					
ANR	1196934	Callee	PDSET		1196774	0					
ANR	1196935	Identifier	PDSET		1196774	0					
ANR	1196936	ArgumentList	padev		1196774	1					
ANR	1196937	Argument	padev		1196774	0					
ANR	1196938	Identifier	padev		1196774	0					
ANR	1196939	ExpressionStatement	padev -> color_info = target -> color_info	379:4:14498:14536	1196774	68	True				
ANR	1196940	AssignmentExpression	padev -> color_info = target -> color_info		1196774	0		=			
ANR	1196941	PtrMemberAccess	padev -> color_info		1196774	0					
ANR	1196942	Identifier	padev		1196774	0					
ANR	1196943	Identifier	color_info		1196774	1					
ANR	1196944	PtrMemberAccess	target -> color_info		1196774	1					
ANR	1196945	Identifier	target		1196774	0					
ANR	1196946	Identifier	color_info		1196774	1					
ANR	1196947	IfStatement	if ( pinst -> templat . PaintType == 2 )		1196774	69					
ANR	1196948	Condition	pinst -> templat . PaintType == 2	382:8:14675:14703	1196774	0	True				
ANR	1196949	EqualityExpression	pinst -> templat . PaintType == 2		1196774	0		==			
ANR	1196950	MemberAccess	pinst -> templat . PaintType		1196774	0					
ANR	1196951	PtrMemberAccess	pinst -> templat		1196774	0					
ANR	1196952	Identifier	pinst		1196774	0					
ANR	1196953	Identifier	templat		1196774	1					
ANR	1196954	Identifier	PaintType		1196774	1					
ANR	1196955	PrimaryExpression	2		1196774	1					
ANR	1196956	CompoundStatement		34:39:1299:1299	1196774	1					
ANR	1196957	ExpressionStatement	padev -> color_info . anti_alias . text_bits = 1	383:8:14716:14758	1196774	0	True				
ANR	1196958	AssignmentExpression	padev -> color_info . anti_alias . text_bits = 1		1196774	0		=			
ANR	1196959	MemberAccess	padev -> color_info . anti_alias . text_bits		1196774	0					
ANR	1196960	MemberAccess	padev -> color_info . anti_alias		1196774	0					
ANR	1196961	PtrMemberAccess	padev -> color_info		1196774	0					
ANR	1196962	Identifier	padev		1196774	0					
ANR	1196963	Identifier	color_info		1196774	1					
ANR	1196964	Identifier	anti_alias		1196774	1					
ANR	1196965	Identifier	text_bits		1196774	1					
ANR	1196966	PrimaryExpression	1		1196774	1					
ANR	1196967	ExpressionStatement	padev -> color_info . anti_alias . graphics_bits = 1	384:8:14768:14814	1196774	1	True				
ANR	1196968	AssignmentExpression	padev -> color_info . anti_alias . graphics_bits = 1		1196774	0		=			
ANR	1196969	MemberAccess	padev -> color_info . anti_alias . graphics_bits		1196774	0					
ANR	1196970	MemberAccess	padev -> color_info . anti_alias		1196774	0					
ANR	1196971	PtrMemberAccess	padev -> color_info		1196774	0					
ANR	1196972	Identifier	padev		1196774	0					
ANR	1196973	Identifier	color_info		1196774	1					
ANR	1196974	Identifier	anti_alias		1196774	1					
ANR	1196975	Identifier	graphics_bits		1196774	1					
ANR	1196976	PrimaryExpression	1		1196774	1					
ANR	1196977	IfStatement	if ( pinst -> templat . uses_transparency )		1196774	70					
ANR	1196978	Condition	pinst -> templat . uses_transparency	390:8:15045:15076	1196774	0	True				
ANR	1196979	MemberAccess	pinst -> templat . uses_transparency		1196774	0					
ANR	1196980	PtrMemberAccess	pinst -> templat		1196774	0					
ANR	1196981	Identifier	pinst		1196774	0					
ANR	1196982	Identifier	templat		1196774	1					
ANR	1196983	Identifier	uses_transparency		1196774	1					
ANR	1196984	CompoundStatement		42:42:1672:1672	1196774	1					
ANR	1196985	ExpressionStatement	"padev -> transbuff = gs_alloc_struct ( mem , gx_pattern_trans_t , & st_pattern_trans , ""pattern_accum_open(trans)"" )"	392:8:15161:15265	1196774	0	True				
ANR	1196986	AssignmentExpression	"padev -> transbuff = gs_alloc_struct ( mem , gx_pattern_trans_t , & st_pattern_trans , ""pattern_accum_open(trans)"" )"		1196774	0		=			
ANR	1196987	PtrMemberAccess	padev -> transbuff		1196774	0					
ANR	1196988	Identifier	padev		1196774	0					
ANR	1196989	Identifier	transbuff		1196774	1					
ANR	1196990	CallExpression	"gs_alloc_struct ( mem , gx_pattern_trans_t , & st_pattern_trans , ""pattern_accum_open(trans)"" )"		1196774	1					
ANR	1196991	Callee	gs_alloc_struct		1196774	0					
ANR	1196992	Identifier	gs_alloc_struct		1196774	0					
ANR	1196993	ArgumentList	mem		1196774	1					
ANR	1196994	Argument	mem		1196774	0					
ANR	1196995	Identifier	mem		1196774	0					
ANR	1196996	Argument	gx_pattern_trans_t		1196774	1					
ANR	1196997	Identifier	gx_pattern_trans_t		1196774	0					
ANR	1196998	Argument	& st_pattern_trans		1196774	2					
ANR	1196999	UnaryOperationExpression	& st_pattern_trans		1196774	0					
ANR	1197000	UnaryOperator	&		1196774	0					
ANR	1197001	Identifier	st_pattern_trans		1196774	1					
ANR	1197002	Argument	"""pattern_accum_open(trans)"""		1196774	3					
ANR	1197003	PrimaryExpression	"""pattern_accum_open(trans)"""		1196774	0					
ANR	1197004	ExpressionStatement	padev -> transbuff -> transbytes = NULL	393:8:15275:15310	1196774	1	True				
ANR	1197005	AssignmentExpression	padev -> transbuff -> transbytes = NULL		1196774	0		=			
ANR	1197006	PtrMemberAccess	padev -> transbuff -> transbytes		1196774	0					
ANR	1197007	PtrMemberAccess	padev -> transbuff		1196774	0					
ANR	1197008	Identifier	padev		1196774	0					
ANR	1197009	Identifier	transbuff		1196774	1					
ANR	1197010	Identifier	transbytes		1196774	1					
ANR	1197011	Identifier	NULL		1196774	1					
ANR	1197012	ExpressionStatement	padev -> transbuff -> mem = NULL	394:8:15320:15348	1196774	2	True				
ANR	1197013	AssignmentExpression	padev -> transbuff -> mem = NULL		1196774	0		=			
ANR	1197014	PtrMemberAccess	padev -> transbuff -> mem		1196774	0					
ANR	1197015	PtrMemberAccess	padev -> transbuff		1196774	0					
ANR	1197016	Identifier	padev		1196774	0					
ANR	1197017	Identifier	transbuff		1196774	1					
ANR	1197018	Identifier	mem		1196774	1					
ANR	1197019	Identifier	NULL		1196774	1					
ANR	1197020	ExpressionStatement	padev -> transbuff -> pdev14 = NULL	395:8:15358:15389	1196774	3	True				
ANR	1197021	AssignmentExpression	padev -> transbuff -> pdev14 = NULL		1196774	0		=			
ANR	1197022	PtrMemberAccess	padev -> transbuff -> pdev14		1196774	0					
ANR	1197023	PtrMemberAccess	padev -> transbuff		1196774	0					
ANR	1197024	Identifier	padev		1196774	0					
ANR	1197025	Identifier	transbuff		1196774	1					
ANR	1197026	Identifier	pdev14		1196774	1					
ANR	1197027	Identifier	NULL		1196774	1					
ANR	1197028	ExpressionStatement	padev -> transbuff -> fill_trans_buffer = NULL	396:8:15399:15441	1196774	4	True				
ANR	1197029	AssignmentExpression	padev -> transbuff -> fill_trans_buffer = NULL		1196774	0		=			
ANR	1197030	PtrMemberAccess	padev -> transbuff -> fill_trans_buffer		1196774	0					
ANR	1197031	PtrMemberAccess	padev -> transbuff		1196774	0					
ANR	1197032	Identifier	padev		1196774	0					
ANR	1197033	Identifier	transbuff		1196774	1					
ANR	1197034	Identifier	fill_trans_buffer		1196774	1					
ANR	1197035	Identifier	NULL		1196774	1					
ANR	1197036	ExpressionStatement	padev -> transbuff -> n_chan = 0	398:8:15510:15538	1196774	5	True				
ANR	1197037	AssignmentExpression	padev -> transbuff -> n_chan = 0		1196774	0		=			
ANR	1197038	PtrMemberAccess	padev -> transbuff -> n_chan		1196774	0					
ANR	1197039	PtrMemberAccess	padev -> transbuff		1196774	0					
ANR	1197040	Identifier	padev		1196774	0					
ANR	1197041	Identifier	transbuff		1196774	1					
ANR	1197042	Identifier	n_chan		1196774	1					
ANR	1197043	PrimaryExpression	0		1196774	1					
ANR	1197044	ElseStatement	else		1196774	0					
ANR	1197045	CompoundStatement		51:11:2144:2144	1196774	0					
ANR	1197046	ExpressionStatement	padev -> transbuff = NULL	400:8:15561:15584	1196774	0	True				
ANR	1197047	AssignmentExpression	padev -> transbuff = NULL		1196774	0		=			
ANR	1197048	PtrMemberAccess	padev -> transbuff		1196774	0					
ANR	1197049	Identifier	padev		1196774	0					
ANR	1197050	Identifier	transbuff		1196774	1					
ANR	1197051	Identifier	NULL		1196774	1					
ANR	1197052	IfStatement	if ( pinst -> uses_mask )		1196774	71					
ANR	1197053	Condition	pinst -> uses_mask	402:8:15600:15615	1196774	0	True				
ANR	1197054	PtrMemberAccess	pinst -> uses_mask		1196774	0					
ANR	1197055	Identifier	pinst		1196774	0					
ANR	1197056	Identifier	uses_mask		1196774	1					
ANR	1197057	CompoundStatement		54:26:2211:2211	1196774	1					
ANR	1197058	ExpressionStatement	"mask = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""pattern_accum_open(mask)"" )"	403:8:15628:15850	1196774	0	True				
ANR	1197059	AssignmentExpression	"mask = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""pattern_accum_open(mask)"" )"		1196774	0		=			
ANR	1197060	Identifier	mask		1196774	0					
ANR	1197061	CallExpression	"gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""pattern_accum_open(mask)"" )"		1196774	1					
ANR	1197062	Callee	gs_alloc_struct		1196774	0					
ANR	1197063	Identifier	gs_alloc_struct		1196774	0					
ANR	1197064	ArgumentList	mem		1196774	1					
ANR	1197065	Argument	mem		1196774	0					
ANR	1197066	Identifier	mem		1196774	0					
ANR	1197067	Argument	gx_device_memory		1196774	1					
ANR	1197068	Identifier	gx_device_memory		1196774	0					
ANR	1197069	Argument	& st_device_memory		1196774	2					
ANR	1197070	UnaryOperationExpression	& st_device_memory		1196774	0					
ANR	1197071	UnaryOperator	&		1196774	0					
ANR	1197072	Identifier	st_device_memory		1196774	1					
ANR	1197073	Argument	"""pattern_accum_open(mask)"""		1196774	3					
ANR	1197074	PrimaryExpression	"""pattern_accum_open(mask)"""		1196774	0					
ANR	1197075	IfStatement	if ( mask == 0 )		1196774	1					
ANR	1197076	Condition	mask == 0	408:12:15864:15872	1196774	0	True				
ANR	1197077	EqualityExpression	mask == 0		1196774	0		==			
ANR	1197078	Identifier	mask		1196774	0					
ANR	1197079	PrimaryExpression	0		1196774	1					
ANR	1197080	ExpressionStatement	return_error ( gs_error_VMerror )	409:12:15887:15917	1196774	1	True				
ANR	1197081	CallExpression	return_error ( gs_error_VMerror )		1196774	0					
ANR	1197082	Callee	return_error		1196774	0					
ANR	1197083	Identifier	return_error		1196774	0					
ANR	1197084	ArgumentList	gs_error_VMerror		1196774	1					
ANR	1197085	Argument	gs_error_VMerror		1196774	0					
ANR	1197086	Identifier	gs_error_VMerror		1196774	0					
ANR	1197087	ExpressionStatement	"gs_make_mem_mono_device ( mask , mem , 0 )"	410:8:15927:15964	1196774	2	True				
ANR	1197088	CallExpression	"gs_make_mem_mono_device ( mask , mem , 0 )"		1196774	0					
ANR	1197089	Callee	gs_make_mem_mono_device		1196774	0					
ANR	1197090	Identifier	gs_make_mem_mono_device		1196774	0					
ANR	1197091	ArgumentList	mask		1196774	1					
ANR	1197092	Argument	mask		1196774	0					
ANR	1197093	Identifier	mask		1196774	0					
ANR	1197094	Argument	mem		1196774	1					
ANR	1197095	Identifier	mem		1196774	0					
ANR	1197096	Argument	0		1196774	2					
ANR	1197097	PrimaryExpression	0		1196774	0					
ANR	1197098	ExpressionStatement	PDSET ( mask )	411:8:15974:15985	1196774	3	True				
ANR	1197099	CallExpression	PDSET ( mask )		1196774	0					
ANR	1197100	Callee	PDSET		1196774	0					
ANR	1197101	Identifier	PDSET		1196774	0					
ANR	1197102	ArgumentList	mask		1196774	1					
ANR	1197103	Argument	mask		1196774	0					
ANR	1197104	Identifier	mask		1196774	0					
ANR	1197105	ExpressionStatement	mask -> bitmap_memory = mem	412:8:15995:16020	1196774	4	True				
ANR	1197106	AssignmentExpression	mask -> bitmap_memory = mem		1196774	0		=			
ANR	1197107	PtrMemberAccess	mask -> bitmap_memory		1196774	0					
ANR	1197108	Identifier	mask		1196774	0					
ANR	1197109	Identifier	bitmap_memory		1196774	1					
ANR	1197110	Identifier	mem		1196774	1					
ANR	1197111	ExpressionStatement	mask -> base = 0	413:8:16030:16044	1196774	5	True				
ANR	1197112	AssignmentExpression	mask -> base = 0		1196774	0		=			
ANR	1197113	PtrMemberAccess	mask -> base		1196774	0					
ANR	1197114	Identifier	mask		1196774	0					
ANR	1197115	Identifier	base		1196774	1					
ANR	1197116	PrimaryExpression	0		1196774	1					
ANR	1197117	ExpressionStatement	"code = ( * dev_proc ( mask , open_device ) ) ( ( gx_device * ) mask )"	414:8:16054:16112	1196774	6	True				
ANR	1197118	AssignmentExpression	"code = ( * dev_proc ( mask , open_device ) ) ( ( gx_device * ) mask )"		1196774	0		=			
ANR	1197119	Identifier	code		1196774	0					
ANR	1197120	CallExpression	"( * dev_proc ( mask , open_device ) ) ( ( gx_device * ) mask )"		1196774	1					
ANR	1197121	Callee	"* dev_proc ( mask , open_device )"		1196774	0					
ANR	1197122	UnaryOperationExpression	"* dev_proc ( mask , open_device )"		1196774	0					
ANR	1197123	UnaryOperator	*		1196774	0					
ANR	1197124	CallExpression	"dev_proc ( mask , open_device )"		1196774	1					
ANR	1197125	Callee	dev_proc		1196774	0					
ANR	1197126	Identifier	dev_proc		1196774	0					
ANR	1197127	ArgumentList	mask		1196774	1					
ANR	1197128	Argument	mask		1196774	0					
ANR	1197129	Identifier	mask		1196774	0					
ANR	1197130	Argument	open_device		1196774	1					
ANR	1197131	Identifier	open_device		1196774	0					
ANR	1197132	ArgumentList	( gx_device * ) mask		1196774	1					
ANR	1197133	Argument	( gx_device * ) mask		1196774	0					
ANR	1197134	CastExpression	( gx_device * ) mask		1196774	0					
ANR	1197135	CastTarget	gx_device *		1196774	0					
ANR	1197136	Identifier	mask		1196774	1					
ANR	1197137	IfStatement	if ( code >= 0 )		1196774	7					
ANR	1197138	Condition	code >= 0	415:12:16126:16134	1196774	0	True				
ANR	1197139	RelationalExpression	code >= 0		1196774	0		>=			
ANR	1197140	Identifier	code		1196774	0					
ANR	1197141	PrimaryExpression	0		1196774	1					
ANR	1197142	CompoundStatement		67:23:2730:2730	1196774	1					
ANR	1197143	ExpressionStatement	mask_open = true	416:12:16151:16167	1196774	0	True				
ANR	1197144	AssignmentExpression	mask_open = true		1196774	0		=			
ANR	1197145	Identifier	mask_open		1196774	0					
ANR	1197146	Identifier	true		1196774	1					
ANR	1197147	ExpressionStatement	"memset ( mask -> base , 0 , mask -> raster * mask -> height )"	417:12:16181:16231	1196774	1	True				
ANR	1197148	CallExpression	"memset ( mask -> base , 0 , mask -> raster * mask -> height )"		1196774	0					
ANR	1197149	Callee	memset		1196774	0					
ANR	1197150	Identifier	memset		1196774	0					
ANR	1197151	ArgumentList	mask -> base		1196774	1					
ANR	1197152	Argument	mask -> base		1196774	0					
ANR	1197153	PtrMemberAccess	mask -> base		1196774	0					
ANR	1197154	Identifier	mask		1196774	0					
ANR	1197155	Identifier	base		1196774	1					
ANR	1197156	Argument	0		1196774	1					
ANR	1197157	PrimaryExpression	0		1196774	0					
ANR	1197158	Argument	mask -> raster * mask -> height		1196774	2					
ANR	1197159	MultiplicativeExpression	mask -> raster * mask -> height		1196774	0		*			
ANR	1197160	PtrMemberAccess	mask -> raster		1196774	0					
ANR	1197161	Identifier	mask		1196774	0					
ANR	1197162	Identifier	raster		1196774	1					
ANR	1197163	PtrMemberAccess	mask -> height		1196774	1					
ANR	1197164	Identifier	mask		1196774	0					
ANR	1197165	Identifier	height		1196774	1					
ANR	1197166	IfStatement	if ( code >= 0 )		1196774	72					
ANR	1197167	Condition	code >= 0	421:8:16258:16266	1196774	0	True				
ANR	1197168	RelationalExpression	code >= 0		1196774	0		>=			
ANR	1197169	Identifier	code		1196774	0					
ANR	1197170	PrimaryExpression	0		1196774	1					
ANR	1197171	CompoundStatement		73:19:2862:2862	1196774	1					
ANR	1197172	IfStatement	if ( pinst -> templat . uses_transparency )		1196774	0					
ANR	1197173	Condition	pinst -> templat . uses_transparency	422:12:16283:16314	1196774	0	True				
ANR	1197174	MemberAccess	pinst -> templat . uses_transparency		1196774	0					
ANR	1197175	PtrMemberAccess	pinst -> templat		1196774	0					
ANR	1197176	Identifier	pinst		1196774	0					
ANR	1197177	Identifier	templat		1196774	1					
ANR	1197178	Identifier	uses_transparency		1196774	1					
ANR	1197179	CompoundStatement		74:46:2910:2910	1196774	1					
ANR	1197180	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) padev , target )"	429:12:16723:16779	1196774	0	True				
ANR	1197181	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) padev , target )"		1196774	0					
ANR	1197182	Callee	gx_device_set_target		1196774	0					
ANR	1197183	Identifier	gx_device_set_target		1196774	0					
ANR	1197184	ArgumentList	( gx_device_forward * ) padev		1196774	1					
ANR	1197185	Argument	( gx_device_forward * ) padev		1196774	0					
ANR	1197186	CastExpression	( gx_device_forward * ) padev		1196774	0					
ANR	1197187	CastTarget	gx_device_forward *		1196774	0					
ANR	1197188	Identifier	padev		1196774	1					
ANR	1197189	Argument	target		1196774	1					
ANR	1197190	Identifier	target		1196774	0					
ANR	1197191	ElseStatement	else		1196774	0					
ANR	1197192	CompoundStatement		82:15:3389:3389	1196774	0					
ANR	1197193	SwitchStatement	switch ( pinst -> templat . PaintType )		1196774	0					
ANR	1197194	Condition	pinst -> templat . PaintType	431:20:16818:16841	1196774	0	True				
ANR	1197195	MemberAccess	pinst -> templat . PaintType		1196774	0					
ANR	1197196	PtrMemberAccess	pinst -> templat		1196774	0					
ANR	1197197	Identifier	pinst		1196774	0					
ANR	1197198	Identifier	templat		1196774	1					
ANR	1197199	Identifier	PaintType		1196774	1					
ANR	1197200	CompoundStatement		83:46:3437:3437	1196774	1					
ANR	1197201	Label	case 2 :	432:12:16858:16864	1196774	0	True				
ANR	1197202	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) padev , target )"	433:16:16910:16966	1196774	1	True				
ANR	1197203	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) padev , target )"		1196774	0					
ANR	1197204	Callee	gx_device_set_target		1196774	0					
ANR	1197205	Identifier	gx_device_set_target		1196774	0					
ANR	1197206	ArgumentList	( gx_device_forward * ) padev		1196774	1					
ANR	1197207	Argument	( gx_device_forward * ) padev		1196774	0					
ANR	1197208	CastExpression	( gx_device_forward * ) padev		1196774	0					
ANR	1197209	CastTarget	gx_device_forward *		1196774	0					
ANR	1197210	Identifier	padev		1196774	1					
ANR	1197211	Argument	target		1196774	1					
ANR	1197212	Identifier	target		1196774	0					
ANR	1197213	BreakStatement	break ;	434:16:16984:16989	1196774	2	True				
ANR	1197214	Label	case 1 :	435:12:17003:17009	1196774	3	True				
ANR	1197215	ExpressionStatement	"bits = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""pattern_accum_open(bits)"" )"	436:16:17053:17223	1196774	4	True				
ANR	1197216	AssignmentExpression	"bits = gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""pattern_accum_open(bits)"" )"		1196774	0		=			
ANR	1197217	Identifier	bits		1196774	0					
ANR	1197218	CallExpression	"gs_alloc_struct ( mem , gx_device_memory , & st_device_memory , ""pattern_accum_open(bits)"" )"		1196774	1					
ANR	1197219	Callee	gs_alloc_struct		1196774	0					
ANR	1197220	Identifier	gs_alloc_struct		1196774	0					
ANR	1197221	ArgumentList	mem		1196774	1					
ANR	1197222	Argument	mem		1196774	0					
ANR	1197223	Identifier	mem		1196774	0					
ANR	1197224	Argument	gx_device_memory		1196774	1					
ANR	1197225	Identifier	gx_device_memory		1196774	0					
ANR	1197226	Argument	& st_device_memory		1196774	2					
ANR	1197227	UnaryOperationExpression	& st_device_memory		1196774	0					
ANR	1197228	UnaryOperator	&		1196774	0					
ANR	1197229	Identifier	st_device_memory		1196774	1					
ANR	1197230	Argument	"""pattern_accum_open(bits)"""		1196774	3					
ANR	1197231	PrimaryExpression	"""pattern_accum_open(bits)"""		1196774	0					
ANR	1197232	IfStatement	if ( bits == 0 )		1196774	5					
ANR	1197233	Condition	bits == 0	439:20:17245:17253	1196774	0	True				
ANR	1197234	EqualityExpression	bits == 0		1196774	0		==			
ANR	1197235	Identifier	bits		1196774	0					
ANR	1197236	PrimaryExpression	0		1196774	1					
ANR	1197237	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	440:20:17276:17314	1196774	1	True				
ANR	1197238	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1196774	0		=			
ANR	1197239	Identifier	code		1196774	0					
ANR	1197240	CallExpression	gs_note_error ( gs_error_VMerror )		1196774	1					
ANR	1197241	Callee	gs_note_error		1196774	0					
ANR	1197242	Identifier	gs_note_error		1196774	0					
ANR	1197243	ArgumentList	gs_error_VMerror		1196774	1					
ANR	1197244	Argument	gs_error_VMerror		1196774	0					
ANR	1197245	Identifier	gs_error_VMerror		1196774	0					
ANR	1197246	ElseStatement	else		1196774	0					
ANR	1197247	CompoundStatement		93:21:3930:3930	1196774	0					
ANR	1197248	ExpressionStatement	"gs_make_mem_device ( bits , gdev_mem_device_for_bits ( padev -> color_info . depth ) , mem , - 1 , target )"	442:20:17359:17518	1196774	0	True				
ANR	1197249	CallExpression	"gs_make_mem_device ( bits , gdev_mem_device_for_bits ( padev -> color_info . depth ) , mem , - 1 , target )"		1196774	0					
ANR	1197250	Callee	gs_make_mem_device		1196774	0					
ANR	1197251	Identifier	gs_make_mem_device		1196774	0					
ANR	1197252	ArgumentList	bits		1196774	1					
ANR	1197253	Argument	bits		1196774	0					
ANR	1197254	Identifier	bits		1196774	0					
ANR	1197255	Argument	gdev_mem_device_for_bits ( padev -> color_info . depth )		1196774	1					
ANR	1197256	CallExpression	gdev_mem_device_for_bits ( padev -> color_info . depth )		1196774	0					
ANR	1197257	Callee	gdev_mem_device_for_bits		1196774	0					
ANR	1197258	Identifier	gdev_mem_device_for_bits		1196774	0					
ANR	1197259	ArgumentList	padev -> color_info . depth		1196774	1					
ANR	1197260	Argument	padev -> color_info . depth		1196774	0					
ANR	1197261	MemberAccess	padev -> color_info . depth		1196774	0					
ANR	1197262	PtrMemberAccess	padev -> color_info		1196774	0					
ANR	1197263	Identifier	padev		1196774	0					
ANR	1197264	Identifier	color_info		1196774	1					
ANR	1197265	Identifier	depth		1196774	1					
ANR	1197266	Argument	mem		1196774	2					
ANR	1197267	Identifier	mem		1196774	0					
ANR	1197268	Argument	- 1		1196774	3					
ANR	1197269	UnaryOperationExpression	- 1		1196774	0					
ANR	1197270	UnaryOperator	-		1196774	0					
ANR	1197271	PrimaryExpression	1		1196774	1					
ANR	1197272	Argument	target		1196774	4					
ANR	1197273	Identifier	target		1196774	0					
ANR	1197274	ExpressionStatement	PDSET ( bits )	445:20:17540:17551	1196774	1	True				
ANR	1197275	CallExpression	PDSET ( bits )		1196774	0					
ANR	1197276	Callee	PDSET		1196774	0					
ANR	1197277	Identifier	PDSET		1196774	0					
ANR	1197278	ArgumentList	bits		1196774	1					
ANR	1197279	Argument	bits		1196774	0					
ANR	1197280	Identifier	bits		1196774	0					
ANR	1197281	Statement	undef	446:1:17554:17558	1196774	2	True				
ANR	1197282	Statement	PDSET	446:7:17560:17564	1196774	3	True				
ANR	1197283	ExpressionStatement	bits -> color_info = padev -> color_info	447:20:17586:17622	1196774	4	True				
ANR	1197284	AssignmentExpression	bits -> color_info = padev -> color_info		1196774	0		=			
ANR	1197285	PtrMemberAccess	bits -> color_info		1196774	0					
ANR	1197286	Identifier	bits		1196774	0					
ANR	1197287	Identifier	color_info		1196774	1					
ANR	1197288	PtrMemberAccess	padev -> color_info		1196774	1					
ANR	1197289	Identifier	padev		1196774	0					
ANR	1197290	Identifier	color_info		1196774	1					
ANR	1197291	ExpressionStatement	bits -> bitmap_memory = mem	448:20:17644:17669	1196774	5	True				
ANR	1197292	AssignmentExpression	bits -> bitmap_memory = mem		1196774	0		=			
ANR	1197293	PtrMemberAccess	bits -> bitmap_memory		1196774	0					
ANR	1197294	Identifier	bits		1196774	0					
ANR	1197295	Identifier	bitmap_memory		1196774	1					
ANR	1197296	Identifier	mem		1196774	1					
ANR	1197297	IfStatement	if ( target -> is_planar > 0 )		1196774	6					
ANR	1197298	Condition	target -> is_planar > 0	449:24:17695:17715	1196774	0	True				
ANR	1197299	RelationalExpression	target -> is_planar > 0		1196774	0		>			
ANR	1197300	PtrMemberAccess	target -> is_planar		1196774	0					
ANR	1197301	Identifier	target		1196774	0					
ANR	1197302	Identifier	is_planar		1196774	1					
ANR	1197303	PrimaryExpression	0		1196774	1					
ANR	1197304	CompoundStatement		106:24:4547:4619	1196774	1					
ANR	1197305	IdentifierDeclStatement	gx_render_plane_t planes [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	451:24:17764:17820	1196774	0	True				
ANR	1197306	IdentifierDecl	planes [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		1196774	0					
ANR	1197307	IdentifierDeclType	gx_render_plane_t [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		1196774	0					
ANR	1197308	Identifier	planes		1196774	1					
ANR	1197309	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		1196774	2					
ANR	1197310	IdentifierDeclStatement	uchar num_comp = padev -> color_info . num_components ;	452:24:17846:17895	1196774	1	True				
ANR	1197311	IdentifierDecl	num_comp = padev -> color_info . num_components		1196774	0					
ANR	1197312	IdentifierDeclType	uchar		1196774	0					
ANR	1197313	Identifier	num_comp		1196774	1					
ANR	1197314	AssignmentExpression	num_comp = padev -> color_info . num_components		1196774	2		=			
ANR	1197315	Identifier	num_comp		1196774	0					
ANR	1197316	MemberAccess	padev -> color_info . num_components		1196774	1					
ANR	1197317	PtrMemberAccess	padev -> color_info		1196774	0					
ANR	1197318	Identifier	padev		1196774	0					
ANR	1197319	Identifier	color_info		1196774	1					
ANR	1197320	Identifier	num_components		1196774	1					
ANR	1197321	IdentifierDeclStatement	uchar i ;	453:24:17921:17928	1196774	2	True				
ANR	1197322	IdentifierDecl	i		1196774	0					
ANR	1197323	IdentifierDeclType	uchar		1196774	0					
ANR	1197324	Identifier	i		1196774	1					
ANR	1197325	IdentifierDeclStatement	int depth = target -> color_info . depth / target -> color_info . num_components ;	454:24:17954:18026	1196774	3	True				
ANR	1197326	IdentifierDecl	depth = target -> color_info . depth / target -> color_info . num_components		1196774	0					
ANR	1197327	IdentifierDeclType	int		1196774	0					
ANR	1197328	Identifier	depth		1196774	1					
ANR	1197329	AssignmentExpression	depth = target -> color_info . depth / target -> color_info . num_components		1196774	2		=			
ANR	1197330	Identifier	depth		1196774	0					
ANR	1197331	MultiplicativeExpression	target -> color_info . depth / target -> color_info . num_components		1196774	1		/			
ANR	1197332	MemberAccess	target -> color_info . depth		1196774	0					
ANR	1197333	PtrMemberAccess	target -> color_info		1196774	0					
ANR	1197334	Identifier	target		1196774	0					
ANR	1197335	Identifier	color_info		1196774	1					
ANR	1197336	Identifier	depth		1196774	1					
ANR	1197337	MemberAccess	target -> color_info . num_components		1196774	1					
ANR	1197338	PtrMemberAccess	target -> color_info		1196774	0					
ANR	1197339	Identifier	target		1196774	0					
ANR	1197340	Identifier	color_info		1196774	1					
ANR	1197341	Identifier	num_components		1196774	1					
ANR	1197342	ForStatement	for ( i = 0 ; i < num_comp ; i ++ )		1196774	4					
ANR	1197343	ForInit	i = 0 ;	455:29:18057:18062	1196774	0	True				
ANR	1197344	AssignmentExpression	i = 0		1196774	0		=			
ANR	1197345	Identifier	i		1196774	0					
ANR	1197346	PrimaryExpression	0		1196774	1					
ANR	1197347	Condition	i < num_comp	455:36:18064:18075	1196774	1	True				
ANR	1197348	RelationalExpression	i < num_comp		1196774	0		<			
ANR	1197349	Identifier	i		1196774	0					
ANR	1197350	Identifier	num_comp		1196774	1					
ANR	1197351	PostIncDecOperationExpression	i ++	455:50:18078:18080	1196774	2	True				
ANR	1197352	Identifier	i		1196774	0					
ANR	1197353	IncDec	++		1196774	1					
ANR	1197354	CompoundStatement		108:24:4700:4700	1196774	3					
ANR	1197355	ExpressionStatement	planes [ i ] . shift = depth * ( num_comp - 1 - i )	457:28:18137:18181	1196774	0	True				
ANR	1197356	AssignmentExpression	planes [ i ] . shift = depth * ( num_comp - 1 - i )		1196774	0		=			
ANR	1197357	MemberAccess	planes [ i ] . shift		1196774	0					
ANR	1197358	ArrayIndexing	planes [ i ]		1196774	0					
ANR	1197359	Identifier	planes		1196774	0					
ANR	1197360	Identifier	i		1196774	1					
ANR	1197361	Identifier	shift		1196774	1					
ANR	1197362	MultiplicativeExpression	depth * ( num_comp - 1 - i )		1196774	1		*			
ANR	1197363	Identifier	depth		1196774	0					
ANR	1197364	AdditiveExpression	num_comp - 1 - i		1196774	1		-			
ANR	1197365	Identifier	num_comp		1196774	0					
ANR	1197366	AdditiveExpression	1 - i		1196774	1		-			
ANR	1197367	PrimaryExpression	1		1196774	0					
ANR	1197368	Identifier	i		1196774	1					
ANR	1197369	ExpressionStatement	planes [ i ] . depth = depth	458:28:18211:18234	1196774	1	True				
ANR	1197370	AssignmentExpression	planes [ i ] . depth = depth		1196774	0		=			
ANR	1197371	MemberAccess	planes [ i ] . depth		1196774	0					
ANR	1197372	ArrayIndexing	planes [ i ]		1196774	0					
ANR	1197373	Identifier	planes		1196774	0					
ANR	1197374	Identifier	i		1196774	1					
ANR	1197375	Identifier	depth		1196774	1					
ANR	1197376	Identifier	depth		1196774	1					
ANR	1197377	ExpressionStatement	planes [ i ] . index = i	459:28:18264:18283	1196774	2	True				
ANR	1197378	AssignmentExpression	planes [ i ] . index = i		1196774	0		=			
ANR	1197379	MemberAccess	planes [ i ] . index		1196774	0					
ANR	1197380	ArrayIndexing	planes [ i ]		1196774	0					
ANR	1197381	Identifier	planes		1196774	0					
ANR	1197382	Identifier	i		1196774	1					
ANR	1197383	Identifier	index		1196774	1					
ANR	1197384	Identifier	i		1196774	1					
ANR	1197385	ExpressionStatement	"code = gdev_mem_set_planar ( bits , num_comp , planes )"	461:24:18335:18385	1196774	5	True				
ANR	1197386	AssignmentExpression	"code = gdev_mem_set_planar ( bits , num_comp , planes )"		1196774	0		=			
ANR	1197387	Identifier	code		1196774	0					
ANR	1197388	CallExpression	"gdev_mem_set_planar ( bits , num_comp , planes )"		1196774	1					
ANR	1197389	Callee	gdev_mem_set_planar		1196774	0					
ANR	1197390	Identifier	gdev_mem_set_planar		1196774	0					
ANR	1197391	ArgumentList	bits		1196774	1					
ANR	1197392	Argument	bits		1196774	0					
ANR	1197393	Identifier	bits		1196774	0					
ANR	1197394	Argument	num_comp		1196774	1					
ANR	1197395	Identifier	num_comp		1196774	0					
ANR	1197396	Argument	planes		1196774	2					
ANR	1197397	Identifier	planes		1196774	0					
ANR	1197398	IfStatement	if ( code >= 0 )		1196774	7					
ANR	1197399	Condition	code >= 0	463:24:18433:18441	1196774	0	True				
ANR	1197400	RelationalExpression	code >= 0		1196774	0		>=			
ANR	1197401	Identifier	code		1196774	0					
ANR	1197402	PrimaryExpression	0		1196774	1					
ANR	1197403	CompoundStatement		115:35:5037:5037	1196774	1					
ANR	1197404	ExpressionStatement	"code = ( * dev_proc ( bits , open_device ) ) ( ( gx_device * ) bits )"	464:24:18470:18528	1196774	0	True				
ANR	1197405	AssignmentExpression	"code = ( * dev_proc ( bits , open_device ) ) ( ( gx_device * ) bits )"		1196774	0		=			
ANR	1197406	Identifier	code		1196774	0					
ANR	1197407	CallExpression	"( * dev_proc ( bits , open_device ) ) ( ( gx_device * ) bits )"		1196774	1					
ANR	1197408	Callee	"* dev_proc ( bits , open_device )"		1196774	0					
ANR	1197409	UnaryOperationExpression	"* dev_proc ( bits , open_device )"		1196774	0					
ANR	1197410	UnaryOperator	*		1196774	0					
ANR	1197411	CallExpression	"dev_proc ( bits , open_device )"		1196774	1					
ANR	1197412	Callee	dev_proc		1196774	0					
ANR	1197413	Identifier	dev_proc		1196774	0					
ANR	1197414	ArgumentList	bits		1196774	1					
ANR	1197415	Argument	bits		1196774	0					
ANR	1197416	Identifier	bits		1196774	0					
ANR	1197417	Argument	open_device		1196774	1					
ANR	1197418	Identifier	open_device		1196774	0					
ANR	1197419	ArgumentList	( gx_device * ) bits		1196774	1					
ANR	1197420	Argument	( gx_device * ) bits		1196774	0					
ANR	1197421	CastExpression	( gx_device * ) bits		1196774	0					
ANR	1197422	CastTarget	gx_device *		1196774	0					
ANR	1197423	Identifier	bits		1196774	1					
ANR	1197424	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) padev , ( gx_device * ) bits )"	465:24:18554:18666	1196774	1	True				
ANR	1197425	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) padev , ( gx_device * ) bits )"		1196774	0					
ANR	1197426	Callee	gx_device_set_target		1196774	0					
ANR	1197427	Identifier	gx_device_set_target		1196774	0					
ANR	1197428	ArgumentList	( gx_device_forward * ) padev		1196774	1					
ANR	1197429	Argument	( gx_device_forward * ) padev		1196774	0					
ANR	1197430	CastExpression	( gx_device_forward * ) padev		1196774	0					
ANR	1197431	CastTarget	gx_device_forward *		1196774	0					
ANR	1197432	Identifier	padev		1196774	1					
ANR	1197433	Argument	( gx_device * ) bits		1196774	1					
ANR	1197434	CastExpression	( gx_device * ) bits		1196774	0					
ANR	1197435	CastTarget	gx_device *		1196774	0					
ANR	1197436	Identifier	bits		1196774	1					
ANR	1197437	ExpressionStatement	bits -> procs . update_spot_equivalent_colors = gx_forward_update_spot_equivalent_colors	472:24:19110:19194	1196774	2	True				
ANR	1197438	AssignmentExpression	bits -> procs . update_spot_equivalent_colors = gx_forward_update_spot_equivalent_colors		1196774	0		=			
ANR	1197439	MemberAccess	bits -> procs . update_spot_equivalent_colors		1196774	0					
ANR	1197440	PtrMemberAccess	bits -> procs		1196774	0					
ANR	1197441	Identifier	bits		1196774	0					
ANR	1197442	Identifier	procs		1196774	1					
ANR	1197443	Identifier	update_spot_equivalent_colors		1196774	1					
ANR	1197444	Identifier	gx_forward_update_spot_equivalent_colors		1196774	1					
ANR	1197445	IfStatement	if ( code < 0 )		1196774	73					
ANR	1197446	Condition	code < 0	478:8:19274:19281	1196774	0	True				
ANR	1197447	RelationalExpression	code < 0		1196774	0		<			
ANR	1197448	Identifier	code		1196774	0					
ANR	1197449	PrimaryExpression	0		1196774	1					
ANR	1197450	CompoundStatement		130:18:5877:5877	1196774	1					
ANR	1197451	IfStatement	if ( bits != 0 )		1196774	0					
ANR	1197452	Condition	bits != 0	479:12:19298:19306	1196774	0	True				
ANR	1197453	EqualityExpression	bits != 0		1196774	0		!=			
ANR	1197454	Identifier	bits		1196774	0					
ANR	1197455	PrimaryExpression	0		1196774	1					
ANR	1197456	ExpressionStatement	"gs_free_object ( mem , bits , ""pattern_accum_open(bits)"" )"	480:12:19321:19374	1196774	1	True				
ANR	1197457	CallExpression	"gs_free_object ( mem , bits , ""pattern_accum_open(bits)"" )"		1196774	0					
ANR	1197458	Callee	gs_free_object		1196774	0					
ANR	1197459	Identifier	gs_free_object		1196774	0					
ANR	1197460	ArgumentList	mem		1196774	1					
ANR	1197461	Argument	mem		1196774	0					
ANR	1197462	Identifier	mem		1196774	0					
ANR	1197463	Argument	bits		1196774	1					
ANR	1197464	Identifier	bits		1196774	0					
ANR	1197465	Argument	"""pattern_accum_open(bits)"""		1196774	2					
ANR	1197466	PrimaryExpression	"""pattern_accum_open(bits)"""		1196774	0					
ANR	1197467	IfStatement	if ( mask != 0 )		1196774	1					
ANR	1197468	Condition	mask != 0	481:12:19388:19396	1196774	0	True				
ANR	1197469	EqualityExpression	mask != 0		1196774	0		!=			
ANR	1197470	Identifier	mask		1196774	0					
ANR	1197471	PrimaryExpression	0		1196774	1					
ANR	1197472	CompoundStatement		133:23:5992:5992	1196774	1					
ANR	1197473	IfStatement	if ( mask_open )		1196774	0					
ANR	1197474	Condition	mask_open	482:16:19417:19425	1196774	0	True				
ANR	1197475	Identifier	mask_open		1196774	0					
ANR	1197476	ExpressionStatement	"( * dev_proc ( mask , close_device ) ) ( ( gx_device * ) mask )"	483:16:19444:19496	1196774	1	True				
ANR	1197477	CallExpression	"( * dev_proc ( mask , close_device ) ) ( ( gx_device * ) mask )"		1196774	0					
ANR	1197478	Callee	"* dev_proc ( mask , close_device )"		1196774	0					
ANR	1197479	UnaryOperationExpression	"* dev_proc ( mask , close_device )"		1196774	0					
ANR	1197480	UnaryOperator	*		1196774	0					
ANR	1197481	CallExpression	"dev_proc ( mask , close_device )"		1196774	1					
ANR	1197482	Callee	dev_proc		1196774	0					
ANR	1197483	Identifier	dev_proc		1196774	0					
ANR	1197484	ArgumentList	mask		1196774	1					
ANR	1197485	Argument	mask		1196774	0					
ANR	1197486	Identifier	mask		1196774	0					
ANR	1197487	Argument	close_device		1196774	1					
ANR	1197488	Identifier	close_device		1196774	0					
ANR	1197489	ArgumentList	( gx_device * ) mask		1196774	1					
ANR	1197490	Argument	( gx_device * ) mask		1196774	0					
ANR	1197491	CastExpression	( gx_device * ) mask		1196774	0					
ANR	1197492	CastTarget	gx_device *		1196774	0					
ANR	1197493	Identifier	mask		1196774	1					
ANR	1197494	ExpressionStatement	"gs_free_object ( mem , mask , ""pattern_accum_open(mask)"" )"	484:12:19510:19563	1196774	1	True				
ANR	1197495	CallExpression	"gs_free_object ( mem , mask , ""pattern_accum_open(mask)"" )"		1196774	0					
ANR	1197496	Callee	gs_free_object		1196774	0					
ANR	1197497	Identifier	gs_free_object		1196774	0					
ANR	1197498	ArgumentList	mem		1196774	1					
ANR	1197499	Argument	mem		1196774	0					
ANR	1197500	Identifier	mem		1196774	0					
ANR	1197501	Argument	mask		1196774	1					
ANR	1197502	Identifier	mask		1196774	0					
ANR	1197503	Argument	"""pattern_accum_open(mask)"""		1196774	2					
ANR	1197504	PrimaryExpression	"""pattern_accum_open(mask)"""		1196774	0					
ANR	1197505	ReturnStatement	return code ;	486:8:19583:19594	1196774	2	True				
ANR	1197506	Identifier	code		1196774	0					
ANR	1197507	ExpressionStatement	padev -> mask = mask	488:4:19606:19624	1196774	74	True				
ANR	1197508	AssignmentExpression	padev -> mask = mask		1196774	0		=			
ANR	1197509	PtrMemberAccess	padev -> mask		1196774	0					
ANR	1197510	Identifier	padev		1196774	0					
ANR	1197511	Identifier	mask		1196774	1					
ANR	1197512	Identifier	mask		1196774	1					
ANR	1197513	ExpressionStatement	padev -> bits = bits	489:4:19630:19648	1196774	75	True				
ANR	1197514	AssignmentExpression	padev -> bits = bits		1196774	0		=			
ANR	1197515	PtrMemberAccess	padev -> bits		1196774	0					
ANR	1197516	Identifier	padev		1196774	0					
ANR	1197517	Identifier	bits		1196774	1					
ANR	1197518	Identifier	bits		1196774	1					
ANR	1197519	ExpressionStatement	"gx_device_retain ( dev , true )"	491:4:19723:19750	1196774	76	True				
ANR	1197520	CallExpression	"gx_device_retain ( dev , true )"		1196774	0					
ANR	1197521	Callee	gx_device_retain		1196774	0					
ANR	1197522	Identifier	gx_device_retain		1196774	0					
ANR	1197523	ArgumentList	dev		1196774	1					
ANR	1197524	Argument	dev		1196774	0					
ANR	1197525	Identifier	dev		1196774	0					
ANR	1197526	Argument	true		1196774	1					
ANR	1197527	Identifier	true		1196774	0					
ANR	1197528	ReturnStatement	return code ;	492:4:19756:19767	1196774	77	True				
ANR	1197529	Identifier	code		1196774	0					
ANR	1197530	ReturnType	static int		1196774	1					
ANR	1197531	Identifier	pattern_accum_open		1196774	2					
ANR	1197532	ParameterList	gx_device * dev		1196774	3					
ANR	1197533	Parameter	gx_device * dev	348:19:13389:13403	1196774	0	True				
ANR	1197534	ParameterType	gx_device *		1196774	0					
ANR	1197535	Identifier	dev		1196774	1					
ANR	1197536	CFGEntryNode	ENTRY		1196774		True				
ANR	1197537	CFGExitNode	EXIT		1196774		True				
ANR	1197538	Symbol	* * padev		1196774						
ANR	1197539	Symbol	pinst -> size . y		1196774						
ANR	1197540	Symbol	padev -> mask		1196774						
ANR	1197541	Symbol	pinst -> size . x		1196774						
ANR	1197542	Symbol	padev -> color_info . anti_alias . graphics_bits		1196774						
ANR	1197543	Symbol	& st_pattern_trans		1196774						
ANR	1197544	Symbol	padev -> transbuff -> pdev14		1196774						
ANR	1197545	Symbol	* mask		1196774						
ANR	1197546	Symbol	gx_pattern_trans_t		1196774						
ANR	1197547	Symbol	padev -> color_info . num_components		1196774						
ANR	1197548	Symbol	gs_currentdevice		1196774						
ANR	1197549	Symbol	pinst -> templat		1196774						
ANR	1197550	Symbol	mask -> raster		1196774						
ANR	1197551	Symbol	close_device		1196774						
ANR	1197552	Symbol	open_device		1196774						
ANR	1197553	Symbol	gdev_mem_device_for_bits		1196774						
ANR	1197554	Symbol	bits -> procs		1196774						
ANR	1197555	Symbol	padev -> color_info . anti_alias		1196774						
ANR	1197556	Symbol	padev -> instance		1196774						
ANR	1197557	Symbol	padev -> bitmap_memory		1196774						
ANR	1197558	Symbol	mask -> base		1196774						
ANR	1197559	Symbol	dev		1196774						
ANR	1197560	Symbol	& st_device_memory		1196774						
ANR	1197561	Symbol	"* dev_proc ( bits , open_device )"		1196774						
ANR	1197562	Symbol	gx_device_memory		1196774						
ANR	1197563	Symbol	planes [ i ] . index		1196774						
ANR	1197564	Symbol	padev -> transbuff -> fill_trans_buffer		1196774						
ANR	1197565	Symbol	gx_forward_update_spot_equivalent_colors		1196774						
ANR	1197566	Symbol	height		1196774						
ANR	1197567	Symbol	* bits		1196774						
ANR	1197568	Symbol	padev -> bits		1196774						
ANR	1197569	Symbol	pinst -> saved		1196774						
ANR	1197570	Symbol	NULL		1196774						
ANR	1197571	Symbol	* padev -> transbuff		1196774						
ANR	1197572	Symbol	bits		1196774						
ANR	1197573	Symbol	planes		1196774						
ANR	1197574	Symbol	target -> color_info . num_components		1196774						
ANR	1197575	Symbol	pinst -> uses_mask		1196774						
ANR	1197576	Symbol	padev -> color_info . depth		1196774						
ANR	1197577	Symbol	padev -> color_info		1196774						
ANR	1197578	Symbol	padev -> transbuff -> mem		1196774						
ANR	1197579	Symbol	planes [ i ] . depth		1196774						
ANR	1197580	Symbol	"* dev_proc ( mask , open_device )"		1196774						
ANR	1197581	Symbol	* padev		1196774						
ANR	1197582	Symbol	padev -> transbuff		1196774						
ANR	1197583	Symbol	true		1196774						
ANR	1197584	Symbol	pinst -> templat . PaintType		1196774						
ANR	1197585	Symbol	* planes		1196774						
ANR	1197586	Symbol	target -> is_planar		1196774						
ANR	1197587	Symbol	code		1196774						
ANR	1197588	Symbol	bits -> bitmap_memory		1196774						
ANR	1197589	Symbol	* dev_proc		1196774						
ANR	1197590	Symbol	planes [ i ] . shift		1196774						
ANR	1197591	Symbol	gs_alloc_struct		1196774						
ANR	1197592	Symbol	num_comp		1196774						
ANR	1197593	Symbol	padev		1196774						
ANR	1197594	Symbol	mem		1196774						
ANR	1197595	Symbol	mask -> bitmap_memory		1196774						
ANR	1197596	Symbol	padev -> color_info . anti_alias . text_bits		1196774						
ANR	1197597	Symbol	dev_proc		1196774						
ANR	1197598	Symbol	pinst -> templat . uses_transparency		1196774						
ANR	1197599	Symbol	mask_open		1196774						
ANR	1197600	Symbol	bits -> color_info		1196774						
ANR	1197601	Symbol	mask		1196774						
ANR	1197602	Symbol	gdev_mem_set_planar		1196774						
ANR	1197603	Symbol	false		1196774						
ANR	1197604	Symbol	target -> color_info		1196774						
ANR	1197605	Symbol	i		1196774						
ANR	1197606	Symbol	pinst		1196774						
ANR	1197607	Symbol	target -> color_info . depth		1196774						
ANR	1197608	Symbol	target		1196774						
ANR	1197609	Symbol	bits -> procs . update_spot_equivalent_colors		1196774						
ANR	1197610	Symbol	* target		1196774						
ANR	1197611	Symbol	pinst -> size		1196774						
ANR	1197612	Symbol	padev -> transbuff -> n_chan		1196774						
ANR	1197613	Symbol	gs_error_VMerror		1196774						
ANR	1197614	Symbol	gs_note_error		1196774						
ANR	1197615	Symbol	padev -> transbuff -> transbytes		1196774						
ANR	1197616	Symbol	depth		1196774						
ANR	1197617	Symbol	* i		1196774						
ANR	1197618	Symbol	mask -> height		1196774						
ANR	1197619	Symbol	width		1196774						
ANR	1197620	Symbol	* pinst		1196774						
ANR	1197621	Symbol	padev -> target		1196774						
ANR	1197622	Function	new_pattern_trans_buff	495:0:19772:20177							
ANR	1197623	FunctionDef	new_pattern_trans_buff (gs_memory_t * mem)		1197622	0					
ANR	1197624	CompoundStatement		497:0:19833:20177	1197622	0					
ANR	1197625	IdentifierDeclStatement	gx_pattern_trans_t * result ;	498:4:19839:19865	1197622	0	True				
ANR	1197626	IdentifierDecl	* result		1197622	0					
ANR	1197627	IdentifierDeclType	gx_pattern_trans_t *		1197622	0					
ANR	1197628	Identifier	result		1197622	1					
ANR	1197629	ExpressionStatement	"result = gs_alloc_struct ( mem , gx_pattern_trans_t , & st_pattern_trans , ""new_pattern_trans_buff"" )"	501:4:19940:20034	1197622	1	True				
ANR	1197630	AssignmentExpression	"result = gs_alloc_struct ( mem , gx_pattern_trans_t , & st_pattern_trans , ""new_pattern_trans_buff"" )"		1197622	0		=			
ANR	1197631	Identifier	result		1197622	0					
ANR	1197632	CallExpression	"gs_alloc_struct ( mem , gx_pattern_trans_t , & st_pattern_trans , ""new_pattern_trans_buff"" )"		1197622	1					
ANR	1197633	Callee	gs_alloc_struct		1197622	0					
ANR	1197634	Identifier	gs_alloc_struct		1197622	0					
ANR	1197635	ArgumentList	mem		1197622	1					
ANR	1197636	Argument	mem		1197622	0					
ANR	1197637	Identifier	mem		1197622	0					
ANR	1197638	Argument	gx_pattern_trans_t		1197622	1					
ANR	1197639	Identifier	gx_pattern_trans_t		1197622	0					
ANR	1197640	Argument	& st_pattern_trans		1197622	2					
ANR	1197641	UnaryOperationExpression	& st_pattern_trans		1197622	0					
ANR	1197642	UnaryOperator	&		1197622	0					
ANR	1197643	Identifier	st_pattern_trans		1197622	1					
ANR	1197644	Argument	"""new_pattern_trans_buff"""		1197622	3					
ANR	1197645	PrimaryExpression	"""new_pattern_trans_buff"""		1197622	0					
ANR	1197646	ExpressionStatement	result -> transbytes = NULL	502:4:20040:20065	1197622	2	True				
ANR	1197647	AssignmentExpression	result -> transbytes = NULL		1197622	0		=			
ANR	1197648	PtrMemberAccess	result -> transbytes		1197622	0					
ANR	1197649	Identifier	result		1197622	0					
ANR	1197650	Identifier	transbytes		1197622	1					
ANR	1197651	Identifier	NULL		1197622	1					
ANR	1197652	ExpressionStatement	result -> pdev14 = NULL	503:4:20071:20092	1197622	3	True				
ANR	1197653	AssignmentExpression	result -> pdev14 = NULL		1197622	0		=			
ANR	1197654	PtrMemberAccess	result -> pdev14		1197622	0					
ANR	1197655	Identifier	result		1197622	0					
ANR	1197656	Identifier	pdev14		1197622	1					
ANR	1197657	Identifier	NULL		1197622	1					
ANR	1197658	ExpressionStatement	result -> mem = NULL	504:4:20098:20116	1197622	4	True				
ANR	1197659	AssignmentExpression	result -> mem = NULL		1197622	0		=			
ANR	1197660	PtrMemberAccess	result -> mem		1197622	0					
ANR	1197661	Identifier	result		1197622	0					
ANR	1197662	Identifier	mem		1197622	1					
ANR	1197663	Identifier	NULL		1197622	1					
ANR	1197664	ExpressionStatement	result -> fill_trans_buffer = NULL	505:4:20122:20154	1197622	5	True				
ANR	1197665	AssignmentExpression	result -> fill_trans_buffer = NULL		1197622	0		=			
ANR	1197666	PtrMemberAccess	result -> fill_trans_buffer		1197622	0					
ANR	1197667	Identifier	result		1197622	0					
ANR	1197668	Identifier	fill_trans_buffer		1197622	1					
ANR	1197669	Identifier	NULL		1197622	1					
ANR	1197670	ReturnStatement	return ( result ) ;	507:4:20161:20175	1197622	6	True				
ANR	1197671	Identifier	result		1197622	0					
ANR	1197672	ReturnType	gx_pattern_trans_t *		1197622	1					
ANR	1197673	Identifier	new_pattern_trans_buff		1197622	2					
ANR	1197674	ParameterList	gs_memory_t * mem		1197622	3					
ANR	1197675	Parameter	gs_memory_t * mem	496:23:19815:19830	1197622	0	True				
ANR	1197676	ParameterType	gs_memory_t *		1197622	0					
ANR	1197677	Identifier	mem		1197622	1					
ANR	1197678	CFGEntryNode	ENTRY		1197622		True				
ANR	1197679	CFGExitNode	EXIT		1197622		True				
ANR	1197680	Symbol	result		1197622						
ANR	1197681	Symbol	& st_pattern_trans		1197622						
ANR	1197682	Symbol	NULL		1197622						
ANR	1197683	Symbol	mem		1197622						
ANR	1197684	Symbol	gx_pattern_trans_t		1197622						
ANR	1197685	Symbol	* result		1197622						
ANR	1197686	Symbol	result -> pdev14		1197622						
ANR	1197687	Symbol	gs_alloc_struct		1197622						
ANR	1197688	Symbol	result -> mem		1197622						
ANR	1197689	Symbol	result -> fill_trans_buffer		1197622						
ANR	1197690	Symbol	result -> transbytes		1197622						
ANR	1197691	Function	pattern_accum_close	511:0:20226:21073							
ANR	1197692	FunctionDef	pattern_accum_close (gx_device * dev)		1197691	0					
ANR	1197693	CompoundStatement		513:0:20274:21073	1197691	0					
ANR	1197694	Statement	gx_device_pattern_accum	514:4:20280:20302	1197691	0	True				
ANR	1197695	Statement	*	514:28:20304:20304	1197691	1	True				
ANR	1197696	Statement	const	514:29:20305:20309	1197691	2	True				
ANR	1197697	ExpressionStatement	padev = ( gx_device_pattern_accum * ) dev	514:35:20311:20350	1197691	3	True				
ANR	1197698	AssignmentExpression	padev = ( gx_device_pattern_accum * ) dev		1197691	0		=			
ANR	1197699	Identifier	padev		1197691	0					
ANR	1197700	CastExpression	( gx_device_pattern_accum * ) dev		1197691	1					
ANR	1197701	CastTarget	gx_device_pattern_accum *		1197691	0					
ANR	1197702	Identifier	dev		1197691	1					
ANR	1197703	IdentifierDeclStatement	gs_memory_t * mem = padev -> bitmap_memory ;	515:4:20356:20395	1197691	4	True				
ANR	1197704	IdentifierDecl	* mem = padev -> bitmap_memory		1197691	0					
ANR	1197705	IdentifierDeclType	gs_memory_t *		1197691	0					
ANR	1197706	Identifier	mem		1197691	1					
ANR	1197707	AssignmentExpression	* mem = padev -> bitmap_memory		1197691	2		=			
ANR	1197708	Identifier	mem		1197691	0					
ANR	1197709	PtrMemberAccess	padev -> bitmap_memory		1197691	1					
ANR	1197710	Identifier	padev		1197691	0					
ANR	1197711	Identifier	bitmap_memory		1197691	1					
ANR	1197712	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) padev , NULL )"	521:4:20520:20574	1197691	5	True				
ANR	1197713	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) padev , NULL )"		1197691	0					
ANR	1197714	Callee	gx_device_set_target		1197691	0					
ANR	1197715	Identifier	gx_device_set_target		1197691	0					
ANR	1197716	ArgumentList	( gx_device_forward * ) padev		1197691	1					
ANR	1197717	Argument	( gx_device_forward * ) padev		1197691	0					
ANR	1197718	CastExpression	( gx_device_forward * ) padev		1197691	0					
ANR	1197719	CastTarget	gx_device_forward *		1197691	0					
ANR	1197720	Identifier	padev		1197691	1					
ANR	1197721	Argument	NULL		1197691	1					
ANR	1197722	Identifier	NULL		1197691	0					
ANR	1197723	ExpressionStatement	padev -> bits = 0	522:4:20580:20595	1197691	6	True				
ANR	1197724	AssignmentExpression	padev -> bits = 0		1197691	0		=			
ANR	1197725	PtrMemberAccess	padev -> bits		1197691	0					
ANR	1197726	Identifier	padev		1197691	0					
ANR	1197727	Identifier	bits		1197691	1					
ANR	1197728	PrimaryExpression	0		1197691	1					
ANR	1197729	IfStatement	if ( padev -> mask != 0 )		1197691	7					
ANR	1197730	Condition	padev -> mask != 0	523:8:20605:20620	1197691	0	True				
ANR	1197731	EqualityExpression	padev -> mask != 0		1197691	0		!=			
ANR	1197732	PtrMemberAccess	padev -> mask		1197691	0					
ANR	1197733	Identifier	padev		1197691	0					
ANR	1197734	Identifier	mask		1197691	1					
ANR	1197735	PrimaryExpression	0		1197691	1					
ANR	1197736	CompoundStatement		11:26:348:348	1197691	1					
ANR	1197737	ExpressionStatement	"( * dev_proc ( padev -> mask , close_device ) ) ( ( gx_device * ) padev -> mask )"	524:8:20633:20699	1197691	0	True				
ANR	1197738	CallExpression	"( * dev_proc ( padev -> mask , close_device ) ) ( ( gx_device * ) padev -> mask )"		1197691	0					
ANR	1197739	Callee	"* dev_proc ( padev -> mask , close_device )"		1197691	0					
ANR	1197740	UnaryOperationExpression	"* dev_proc ( padev -> mask , close_device )"		1197691	0					
ANR	1197741	UnaryOperator	*		1197691	0					
ANR	1197742	CallExpression	"dev_proc ( padev -> mask , close_device )"		1197691	1					
ANR	1197743	Callee	dev_proc		1197691	0					
ANR	1197744	Identifier	dev_proc		1197691	0					
ANR	1197745	ArgumentList	padev -> mask		1197691	1					
ANR	1197746	Argument	padev -> mask		1197691	0					
ANR	1197747	PtrMemberAccess	padev -> mask		1197691	0					
ANR	1197748	Identifier	padev		1197691	0					
ANR	1197749	Identifier	mask		1197691	1					
ANR	1197750	Argument	close_device		1197691	1					
ANR	1197751	Identifier	close_device		1197691	0					
ANR	1197752	ArgumentList	( gx_device * ) padev -> mask		1197691	1					
ANR	1197753	Argument	( gx_device * ) padev -> mask		1197691	0					
ANR	1197754	CastExpression	( gx_device * ) padev -> mask		1197691	0					
ANR	1197755	CastTarget	gx_device *		1197691	0					
ANR	1197756	PtrMemberAccess	padev -> mask		1197691	1					
ANR	1197757	Identifier	padev		1197691	0					
ANR	1197758	Identifier	mask		1197691	1					
ANR	1197759	ExpressionStatement	"gs_free_object ( mem , padev -> mask , ""pattern_accum_close(mask)"" )"	525:8:20709:20770	1197691	1	True				
ANR	1197760	CallExpression	"gs_free_object ( mem , padev -> mask , ""pattern_accum_close(mask)"" )"		1197691	0					
ANR	1197761	Callee	gs_free_object		1197691	0					
ANR	1197762	Identifier	gs_free_object		1197691	0					
ANR	1197763	ArgumentList	mem		1197691	1					
ANR	1197764	Argument	mem		1197691	0					
ANR	1197765	Identifier	mem		1197691	0					
ANR	1197766	Argument	padev -> mask		1197691	1					
ANR	1197767	PtrMemberAccess	padev -> mask		1197691	0					
ANR	1197768	Identifier	padev		1197691	0					
ANR	1197769	Identifier	mask		1197691	1					
ANR	1197770	Argument	"""pattern_accum_close(mask)"""		1197691	2					
ANR	1197771	PrimaryExpression	"""pattern_accum_close(mask)"""		1197691	0					
ANR	1197772	ExpressionStatement	padev -> mask = 0	526:8:20780:20795	1197691	2	True				
ANR	1197773	AssignmentExpression	padev -> mask = 0		1197691	0		=			
ANR	1197774	PtrMemberAccess	padev -> mask		1197691	0					
ANR	1197775	Identifier	padev		1197691	0					
ANR	1197776	Identifier	mask		1197691	1					
ANR	1197777	PrimaryExpression	0		1197691	1					
ANR	1197778	IfStatement	if ( padev -> transbuff != 0 )		1197691	8					
ANR	1197779	Condition	padev -> transbuff != 0	529:8:20812:20832	1197691	0	True				
ANR	1197780	EqualityExpression	padev -> transbuff != 0		1197691	0		!=			
ANR	1197781	PtrMemberAccess	padev -> transbuff		1197691	0					
ANR	1197782	Identifier	padev		1197691	0					
ANR	1197783	Identifier	transbuff		1197691	1					
ANR	1197784	PrimaryExpression	0		1197691	1					
ANR	1197785	CompoundStatement		17:31:560:560	1197691	1					
ANR	1197786	ExpressionStatement	"gs_free_object ( mem , padev -> target , ""pattern_accum_close(transbuff)"" )"	530:8:20845:20911	1197691	0	True				
ANR	1197787	CallExpression	"gs_free_object ( mem , padev -> target , ""pattern_accum_close(transbuff)"" )"		1197691	0					
ANR	1197788	Callee	gs_free_object		1197691	0					
ANR	1197789	Identifier	gs_free_object		1197691	0					
ANR	1197790	ArgumentList	mem		1197691	1					
ANR	1197791	Argument	mem		1197691	0					
ANR	1197792	Identifier	mem		1197691	0					
ANR	1197793	Argument	padev -> target		1197691	1					
ANR	1197794	PtrMemberAccess	padev -> target		1197691	0					
ANR	1197795	Identifier	padev		1197691	0					
ANR	1197796	Identifier	target		1197691	1					
ANR	1197797	Argument	"""pattern_accum_close(transbuff)"""		1197691	2					
ANR	1197798	PrimaryExpression	"""pattern_accum_close(transbuff)"""		1197691	0					
ANR	1197799	ExpressionStatement	padev -> transbuff = NULL	531:8:20921:20944	1197691	1	True				
ANR	1197800	AssignmentExpression	padev -> transbuff = NULL		1197691	0		=			
ANR	1197801	PtrMemberAccess	padev -> transbuff		1197691	0					
ANR	1197802	Identifier	padev		1197691	0					
ANR	1197803	Identifier	transbuff		1197691	1					
ANR	1197804	Identifier	NULL		1197691	1					
ANR	1197805	ExpressionStatement	"gx_device_retain ( dev , false )"	535:4:21029:21057	1197691	9	True				
ANR	1197806	CallExpression	"gx_device_retain ( dev , false )"		1197691	0					
ANR	1197807	Callee	gx_device_retain		1197691	0					
ANR	1197808	Identifier	gx_device_retain		1197691	0					
ANR	1197809	ArgumentList	dev		1197691	1					
ANR	1197810	Argument	dev		1197691	0					
ANR	1197811	Identifier	dev		1197691	0					
ANR	1197812	Argument	false		1197691	1					
ANR	1197813	Identifier	false		1197691	0					
ANR	1197814	ReturnStatement	return 0 ;	536:4:21063:21071	1197691	10	True				
ANR	1197815	PrimaryExpression	0		1197691	0					
ANR	1197816	ReturnType	static int		1197691	1					
ANR	1197817	Identifier	pattern_accum_close		1197691	2					
ANR	1197818	ParameterList	gx_device * dev		1197691	3					
ANR	1197819	Parameter	gx_device * dev	512:20:20257:20271	1197691	0	True				
ANR	1197820	ParameterType	gx_device *		1197691	0					
ANR	1197821	Identifier	dev		1197691	1					
ANR	1197822	CFGEntryNode	ENTRY		1197691		True				
ANR	1197823	CFGExitNode	EXIT		1197691		True				
ANR	1197824	Symbol	padev -> bits		1197691						
ANR	1197825	Symbol	padev -> mask		1197691						
ANR	1197826	Symbol	NULL		1197691						
ANR	1197827	Symbol	false		1197691						
ANR	1197828	Symbol	close_device		1197691						
ANR	1197829	Symbol	padev -> bitmap_memory		1197691						
ANR	1197830	Symbol	padev		1197691						
ANR	1197831	Symbol	dev		1197691						
ANR	1197832	Symbol	mem		1197691						
ANR	1197833	Symbol	* padev		1197691						
ANR	1197834	Symbol	dev_proc		1197691						
ANR	1197835	Symbol	padev -> transbuff		1197691						
ANR	1197836	Symbol	padev -> target		1197691						
ANR	1197837	Function	pattern_accum_fill_rectangle_hl_color	540:0:21092:22016							
ANR	1197838	FunctionDef	"pattern_accum_fill_rectangle_hl_color (gx_device * dev , const gs_fixed_rect * rect , const gs_gstate * pgs , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath)"		1197837	0					
ANR	1197839	CompoundStatement		545:0:21381:22016	1197837	0					
ANR	1197840	Statement	gx_device_pattern_accum	546:4:21387:21409	1197837	0	True				
ANR	1197841	Statement	*	546:28:21411:21411	1197837	1	True				
ANR	1197842	Statement	const	546:29:21412:21416	1197837	2	True				
ANR	1197843	ExpressionStatement	padev = ( gx_device_pattern_accum * ) dev	546:35:21418:21457	1197837	3	True				
ANR	1197844	AssignmentExpression	padev = ( gx_device_pattern_accum * ) dev		1197837	0		=			
ANR	1197845	Identifier	padev		1197837	0					
ANR	1197846	CastExpression	( gx_device_pattern_accum * ) dev		1197837	1					
ANR	1197847	CastTarget	gx_device_pattern_accum *		1197837	0					
ANR	1197848	Identifier	dev		1197837	1					
ANR	1197849	IdentifierDeclStatement	int code ;	547:4:21463:21471	1197837	4	True				
ANR	1197850	IdentifierDecl	code		1197837	0					
ANR	1197851	IdentifierDeclType	int		1197837	0					
ANR	1197852	Identifier	code		1197837	1					
ANR	1197853	IfStatement	if ( padev -> bits )		1197837	5					
ANR	1197854	Condition	padev -> bits	549:8:21482:21492	1197837	0	True				
ANR	1197855	PtrMemberAccess	padev -> bits		1197837	0					
ANR	1197856	Identifier	padev		1197837	0					
ANR	1197857	Identifier	bits		1197837	1					
ANR	1197858	CompoundStatement		5:21:113:113	1197837	1					
ANR	1197859	ExpressionStatement	"code = ( * dev_proc ( padev -> target , fill_rectangle_hl_color ) ) ( padev -> target , rect , pgs , pdcolor , pcpath )"	550:8:21505:21619	1197837	0	True				
ANR	1197860	AssignmentExpression	"code = ( * dev_proc ( padev -> target , fill_rectangle_hl_color ) ) ( padev -> target , rect , pgs , pdcolor , pcpath )"		1197837	0		=			
ANR	1197861	Identifier	code		1197837	0					
ANR	1197862	CallExpression	"( * dev_proc ( padev -> target , fill_rectangle_hl_color ) ) ( padev -> target , rect , pgs , pdcolor , pcpath )"		1197837	1					
ANR	1197863	Callee	"* dev_proc ( padev -> target , fill_rectangle_hl_color )"		1197837	0					
ANR	1197864	UnaryOperationExpression	"* dev_proc ( padev -> target , fill_rectangle_hl_color )"		1197837	0					
ANR	1197865	UnaryOperator	*		1197837	0					
ANR	1197866	CallExpression	"dev_proc ( padev -> target , fill_rectangle_hl_color )"		1197837	1					
ANR	1197867	Callee	dev_proc		1197837	0					
ANR	1197868	Identifier	dev_proc		1197837	0					
ANR	1197869	ArgumentList	padev -> target		1197837	1					
ANR	1197870	Argument	padev -> target		1197837	0					
ANR	1197871	PtrMemberAccess	padev -> target		1197837	0					
ANR	1197872	Identifier	padev		1197837	0					
ANR	1197873	Identifier	target		1197837	1					
ANR	1197874	Argument	fill_rectangle_hl_color		1197837	1					
ANR	1197875	Identifier	fill_rectangle_hl_color		1197837	0					
ANR	1197876	ArgumentList	padev -> target		1197837	1					
ANR	1197877	Argument	padev -> target		1197837	0					
ANR	1197878	PtrMemberAccess	padev -> target		1197837	0					
ANR	1197879	Identifier	padev		1197837	0					
ANR	1197880	Identifier	target		1197837	1					
ANR	1197881	Argument	rect		1197837	1					
ANR	1197882	Identifier	rect		1197837	0					
ANR	1197883	Argument	pgs		1197837	2					
ANR	1197884	Identifier	pgs		1197837	0					
ANR	1197885	Argument	pdcolor		1197837	3					
ANR	1197886	Identifier	pdcolor		1197837	0					
ANR	1197887	Argument	pcpath		1197837	4					
ANR	1197888	Identifier	pcpath		1197837	0					
ANR	1197889	IfStatement	if ( code < 0 )		1197837	1					
ANR	1197890	Condition	code < 0	552:12:21633:21640	1197837	0	True				
ANR	1197891	RelationalExpression	code < 0		1197837	0		<			
ANR	1197892	Identifier	code		1197837	0					
ANR	1197893	PrimaryExpression	0		1197837	1					
ANR	1197894	ReturnStatement	return code ;	553:12:21655:21666	1197837	1	True				
ANR	1197895	Identifier	code		1197837	0					
ANR	1197896	IfStatement	if ( padev -> mask )		1197837	6					
ANR	1197897	Condition	padev -> mask	555:8:21682:21692	1197837	0	True				
ANR	1197898	PtrMemberAccess	padev -> mask		1197837	0					
ANR	1197899	Identifier	padev		1197837	0					
ANR	1197900	Identifier	mask		1197837	1					
ANR	1197901	CompoundStatement		12:8:323:337	1197837	1					
ANR	1197902	IdentifierDeclStatement	"int x , y , w , h ;"	556:8:21705:21719	1197837	0	True				
ANR	1197903	IdentifierDecl	x		1197837	0					
ANR	1197904	IdentifierDeclType	int		1197837	0					
ANR	1197905	Identifier	x		1197837	1					
ANR	1197906	IdentifierDecl	y		1197837	1					
ANR	1197907	IdentifierDeclType	int		1197837	0					
ANR	1197908	Identifier	y		1197837	1					
ANR	1197909	IdentifierDecl	w		1197837	2					
ANR	1197910	IdentifierDeclType	int		1197837	0					
ANR	1197911	Identifier	w		1197837	1					
ANR	1197912	IdentifierDecl	h		1197837	3					
ANR	1197913	IdentifierDeclType	int		1197837	0					
ANR	1197914	Identifier	h		1197837	1					
ANR	1197915	ExpressionStatement	x = fixed2int ( rect -> p . x )	558:8:21730:21754	1197837	1	True				
ANR	1197916	AssignmentExpression	x = fixed2int ( rect -> p . x )		1197837	0		=			
ANR	1197917	Identifier	x		1197837	0					
ANR	1197918	CallExpression	fixed2int ( rect -> p . x )		1197837	1					
ANR	1197919	Callee	fixed2int		1197837	0					
ANR	1197920	Identifier	fixed2int		1197837	0					
ANR	1197921	ArgumentList	rect -> p . x		1197837	1					
ANR	1197922	Argument	rect -> p . x		1197837	0					
ANR	1197923	MemberAccess	rect -> p . x		1197837	0					
ANR	1197924	PtrMemberAccess	rect -> p		1197837	0					
ANR	1197925	Identifier	rect		1197837	0					
ANR	1197926	Identifier	p		1197837	1					
ANR	1197927	Identifier	x		1197837	1					
ANR	1197928	ExpressionStatement	y = fixed2int ( rect -> p . y )	559:8:21764:21788	1197837	2	True				
ANR	1197929	AssignmentExpression	y = fixed2int ( rect -> p . y )		1197837	0		=			
ANR	1197930	Identifier	y		1197837	0					
ANR	1197931	CallExpression	fixed2int ( rect -> p . y )		1197837	1					
ANR	1197932	Callee	fixed2int		1197837	0					
ANR	1197933	Identifier	fixed2int		1197837	0					
ANR	1197934	ArgumentList	rect -> p . y		1197837	1					
ANR	1197935	Argument	rect -> p . y		1197837	0					
ANR	1197936	MemberAccess	rect -> p . y		1197837	0					
ANR	1197937	PtrMemberAccess	rect -> p		1197837	0					
ANR	1197938	Identifier	rect		1197837	0					
ANR	1197939	Identifier	p		1197837	1					
ANR	1197940	Identifier	y		1197837	1					
ANR	1197941	ExpressionStatement	w = fixed2int ( rect -> q . x ) - x	560:8:21798:21826	1197837	3	True				
ANR	1197942	AssignmentExpression	w = fixed2int ( rect -> q . x ) - x		1197837	0		=			
ANR	1197943	Identifier	w		1197837	0					
ANR	1197944	AdditiveExpression	fixed2int ( rect -> q . x ) - x		1197837	1		-			
ANR	1197945	CallExpression	fixed2int ( rect -> q . x )		1197837	0					
ANR	1197946	Callee	fixed2int		1197837	0					
ANR	1197947	Identifier	fixed2int		1197837	0					
ANR	1197948	ArgumentList	rect -> q . x		1197837	1					
ANR	1197949	Argument	rect -> q . x		1197837	0					
ANR	1197950	MemberAccess	rect -> q . x		1197837	0					
ANR	1197951	PtrMemberAccess	rect -> q		1197837	0					
ANR	1197952	Identifier	rect		1197837	0					
ANR	1197953	Identifier	q		1197837	1					
ANR	1197954	Identifier	x		1197837	1					
ANR	1197955	Identifier	x		1197837	1					
ANR	1197956	ExpressionStatement	h = fixed2int ( rect -> q . y ) - y	561:8:21836:21864	1197837	4	True				
ANR	1197957	AssignmentExpression	h = fixed2int ( rect -> q . y ) - y		1197837	0		=			
ANR	1197958	Identifier	h		1197837	0					
ANR	1197959	AdditiveExpression	fixed2int ( rect -> q . y ) - y		1197837	1		-			
ANR	1197960	CallExpression	fixed2int ( rect -> q . y )		1197837	0					
ANR	1197961	Callee	fixed2int		1197837	0					
ANR	1197962	Identifier	fixed2int		1197837	0					
ANR	1197963	ArgumentList	rect -> q . y		1197837	1					
ANR	1197964	Argument	rect -> q . y		1197837	0					
ANR	1197965	MemberAccess	rect -> q . y		1197837	0					
ANR	1197966	PtrMemberAccess	rect -> q		1197837	0					
ANR	1197967	Identifier	rect		1197837	0					
ANR	1197968	Identifier	q		1197837	1					
ANR	1197969	Identifier	y		1197837	1					
ANR	1197970	Identifier	y		1197837	1					
ANR	1197971	ReturnStatement	"return ( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 ) ;"	563:8:21875:21994	1197837	5	True				
ANR	1197972	CallExpression	"( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 )"		1197837	0					
ANR	1197973	Callee	"* dev_proc ( padev -> mask , fill_rectangle )"		1197837	0					
ANR	1197974	UnaryOperationExpression	"* dev_proc ( padev -> mask , fill_rectangle )"		1197837	0					
ANR	1197975	UnaryOperator	*		1197837	0					
ANR	1197976	CallExpression	"dev_proc ( padev -> mask , fill_rectangle )"		1197837	1					
ANR	1197977	Callee	dev_proc		1197837	0					
ANR	1197978	Identifier	dev_proc		1197837	0					
ANR	1197979	ArgumentList	padev -> mask		1197837	1					
ANR	1197980	Argument	padev -> mask		1197837	0					
ANR	1197981	PtrMemberAccess	padev -> mask		1197837	0					
ANR	1197982	Identifier	padev		1197837	0					
ANR	1197983	Identifier	mask		1197837	1					
ANR	1197984	Argument	fill_rectangle		1197837	1					
ANR	1197985	Identifier	fill_rectangle		1197837	0					
ANR	1197986	ArgumentList	( gx_device * ) padev -> mask		1197837	1					
ANR	1197987	Argument	( gx_device * ) padev -> mask		1197837	0					
ANR	1197988	CastExpression	( gx_device * ) padev -> mask		1197837	0					
ANR	1197989	CastTarget	gx_device *		1197837	0					
ANR	1197990	PtrMemberAccess	padev -> mask		1197837	1					
ANR	1197991	Identifier	padev		1197837	0					
ANR	1197992	Identifier	mask		1197837	1					
ANR	1197993	Argument	x		1197837	1					
ANR	1197994	Identifier	x		1197837	0					
ANR	1197995	Argument	y		1197837	2					
ANR	1197996	Identifier	y		1197837	0					
ANR	1197997	Argument	w		1197837	3					
ANR	1197998	Identifier	w		1197837	0					
ANR	1197999	Argument	h		1197837	4					
ANR	1198000	Identifier	h		1197837	0					
ANR	1198001	Argument	( gx_color_index ) 1		1197837	5					
ANR	1198002	CastExpression	( gx_color_index ) 1		1197837	0					
ANR	1198003	CastTarget	gx_color_index		1197837	0					
ANR	1198004	PrimaryExpression	1		1197837	1					
ANR	1198005	ReturnStatement	return 0 ;	566:4:22006:22014	1197837	7	True				
ANR	1198006	PrimaryExpression	0		1197837	0					
ANR	1198007	ReturnType	static int		1197837	1					
ANR	1198008	Identifier	pattern_accum_fill_rectangle_hl_color		1197837	2					
ANR	1198009	ParameterList	"gx_device * dev , const gs_fixed_rect * rect , const gs_gstate * pgs , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath"		1197837	3					
ANR	1198010	Parameter	gx_device * dev	541:38:21141:21154	1197837	0	True				
ANR	1198011	ParameterType	gx_device *		1197837	0					
ANR	1198012	Identifier	dev		1197837	1					
ANR	1198013	Parameter	const gs_fixed_rect * rect	541:54:21157:21181	1197837	1	True				
ANR	1198014	ParameterType	const gs_fixed_rect *		1197837	0					
ANR	1198015	Identifier	rect		1197837	1					
ANR	1198016	Parameter	const gs_gstate * pgs	542:38:21222:21241	1197837	2	True				
ANR	1198017	ParameterType	const gs_gstate *		1197837	0					
ANR	1198018	Identifier	pgs		1197837	1					
ANR	1198019	Parameter	const gx_drawing_color * pdcolor	543:38:21282:21312	1197837	3	True				
ANR	1198020	ParameterType	const gx_drawing_color *		1197837	0					
ANR	1198021	Identifier	pdcolor		1197837	1					
ANR	1198022	Parameter	const gx_clip_path * pcpath	544:38:21353:21378	1197837	4	True				
ANR	1198023	ParameterType	const gx_clip_path *		1197837	0					
ANR	1198024	Identifier	pcpath		1197837	1					
ANR	1198025	CFGEntryNode	ENTRY		1197837		True				
ANR	1198026	CFGExitNode	EXIT		1197837		True				
ANR	1198027	Symbol	padev -> mask		1197837						
ANR	1198028	Symbol	rect -> p . x		1197837						
ANR	1198029	Symbol	code		1197837						
ANR	1198030	Symbol	rect -> p . y		1197837						
ANR	1198031	Symbol	* dev_proc		1197837						
ANR	1198032	Symbol	fill_rectangle_hl_color		1197837						
ANR	1198033	Symbol	rect -> q . y		1197837						
ANR	1198034	Symbol	rect -> q . x		1197837						
ANR	1198035	Symbol	fixed2int		1197837						
ANR	1198036	Symbol	rect		1197837						
ANR	1198037	Symbol	padev		1197837						
ANR	1198038	Symbol	dev		1197837						
ANR	1198039	Symbol	dev_proc		1197837						
ANR	1198040	Symbol	"* dev_proc ( padev -> mask , fill_rectangle )"		1197837						
ANR	1198041	Symbol	pgs		1197837						
ANR	1198042	Symbol	rect -> q		1197837						
ANR	1198043	Symbol	pcpath		1197837						
ANR	1198044	Symbol	rect -> p		1197837						
ANR	1198045	Symbol	padev -> bits		1197837						
ANR	1198046	Symbol	"* dev_proc ( padev -> target , fill_rectangle_hl_color )"		1197837						
ANR	1198047	Symbol	h		1197837						
ANR	1198048	Symbol	pdcolor		1197837						
ANR	1198049	Symbol	fill_rectangle		1197837						
ANR	1198050	Symbol	* padev		1197837						
ANR	1198051	Symbol	w		1197837						
ANR	1198052	Symbol	x		1197837						
ANR	1198053	Symbol	y		1197837						
ANR	1198054	Symbol	* rect		1197837						
ANR	1198055	Symbol	padev -> target		1197837						
ANR	1198056	Function	pattern_accum_fill_rectangle	570:0:22042:22555							
ANR	1198057	FunctionDef	"pattern_accum_fill_rectangle (gx_device * dev , int x , int y , int w , int h , gx_color_index color)"		1198056	0					
ANR	1198058	CompoundStatement		573:0:22178:22555	1198056	0					
ANR	1198059	Statement	gx_device_pattern_accum	574:4:22184:22206	1198056	0	True				
ANR	1198060	Statement	*	574:28:22208:22208	1198056	1	True				
ANR	1198061	Statement	const	574:29:22209:22213	1198056	2	True				
ANR	1198062	ExpressionStatement	padev = ( gx_device_pattern_accum * ) dev	574:35:22215:22254	1198056	3	True				
ANR	1198063	AssignmentExpression	padev = ( gx_device_pattern_accum * ) dev		1198056	0		=			
ANR	1198064	Identifier	padev		1198056	0					
ANR	1198065	CastExpression	( gx_device_pattern_accum * ) dev		1198056	1					
ANR	1198066	CastTarget	gx_device_pattern_accum *		1198056	0					
ANR	1198067	Identifier	dev		1198056	1					
ANR	1198068	IfStatement	if ( padev -> bits )		1198056	4					
ANR	1198069	Condition	padev -> bits	576:8:22265:22275	1198056	0	True				
ANR	1198070	PtrMemberAccess	padev -> bits		1198056	0					
ANR	1198071	Identifier	padev		1198056	0					
ANR	1198072	Identifier	bits		1198056	1					
ANR	1198073	ExpressionStatement	"( * dev_proc ( padev -> target , fill_rectangle ) ) ( padev -> target , x , y , w , h , color )"	577:8:22286:22375	1198056	1	True				
ANR	1198074	CallExpression	"( * dev_proc ( padev -> target , fill_rectangle ) ) ( padev -> target , x , y , w , h , color )"		1198056	0					
ANR	1198075	Callee	"* dev_proc ( padev -> target , fill_rectangle )"		1198056	0					
ANR	1198076	UnaryOperationExpression	"* dev_proc ( padev -> target , fill_rectangle )"		1198056	0					
ANR	1198077	UnaryOperator	*		1198056	0					
ANR	1198078	CallExpression	"dev_proc ( padev -> target , fill_rectangle )"		1198056	1					
ANR	1198079	Callee	dev_proc		1198056	0					
ANR	1198080	Identifier	dev_proc		1198056	0					
ANR	1198081	ArgumentList	padev -> target		1198056	1					
ANR	1198082	Argument	padev -> target		1198056	0					
ANR	1198083	PtrMemberAccess	padev -> target		1198056	0					
ANR	1198084	Identifier	padev		1198056	0					
ANR	1198085	Identifier	target		1198056	1					
ANR	1198086	Argument	fill_rectangle		1198056	1					
ANR	1198087	Identifier	fill_rectangle		1198056	0					
ANR	1198088	ArgumentList	padev -> target		1198056	1					
ANR	1198089	Argument	padev -> target		1198056	0					
ANR	1198090	PtrMemberAccess	padev -> target		1198056	0					
ANR	1198091	Identifier	padev		1198056	0					
ANR	1198092	Identifier	target		1198056	1					
ANR	1198093	Argument	x		1198056	1					
ANR	1198094	Identifier	x		1198056	0					
ANR	1198095	Argument	y		1198056	2					
ANR	1198096	Identifier	y		1198056	0					
ANR	1198097	Argument	w		1198056	3					
ANR	1198098	Identifier	w		1198056	0					
ANR	1198099	Argument	h		1198056	4					
ANR	1198100	Identifier	h		1198056	0					
ANR	1198101	Argument	color		1198056	5					
ANR	1198102	Identifier	color		1198056	0					
ANR	1198103	IfStatement	if ( padev -> mask )		1198056	5					
ANR	1198104	Condition	padev -> mask	579:8:22385:22395	1198056	0	True				
ANR	1198105	PtrMemberAccess	padev -> mask		1198056	0					
ANR	1198106	Identifier	padev		1198056	0					
ANR	1198107	Identifier	mask		1198056	1					
ANR	1198108	ReturnStatement	"return ( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 ) ;"	580:8:22406:22525	1198056	1	True				
ANR	1198109	CallExpression	"( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 )"		1198056	0					
ANR	1198110	Callee	"* dev_proc ( padev -> mask , fill_rectangle )"		1198056	0					
ANR	1198111	UnaryOperationExpression	"* dev_proc ( padev -> mask , fill_rectangle )"		1198056	0					
ANR	1198112	UnaryOperator	*		1198056	0					
ANR	1198113	CallExpression	"dev_proc ( padev -> mask , fill_rectangle )"		1198056	1					
ANR	1198114	Callee	dev_proc		1198056	0					
ANR	1198115	Identifier	dev_proc		1198056	0					
ANR	1198116	ArgumentList	padev -> mask		1198056	1					
ANR	1198117	Argument	padev -> mask		1198056	0					
ANR	1198118	PtrMemberAccess	padev -> mask		1198056	0					
ANR	1198119	Identifier	padev		1198056	0					
ANR	1198120	Identifier	mask		1198056	1					
ANR	1198121	Argument	fill_rectangle		1198056	1					
ANR	1198122	Identifier	fill_rectangle		1198056	0					
ANR	1198123	ArgumentList	( gx_device * ) padev -> mask		1198056	1					
ANR	1198124	Argument	( gx_device * ) padev -> mask		1198056	0					
ANR	1198125	CastExpression	( gx_device * ) padev -> mask		1198056	0					
ANR	1198126	CastTarget	gx_device *		1198056	0					
ANR	1198127	PtrMemberAccess	padev -> mask		1198056	1					
ANR	1198128	Identifier	padev		1198056	0					
ANR	1198129	Identifier	mask		1198056	1					
ANR	1198130	Argument	x		1198056	1					
ANR	1198131	Identifier	x		1198056	0					
ANR	1198132	Argument	y		1198056	2					
ANR	1198133	Identifier	y		1198056	0					
ANR	1198134	Argument	w		1198056	3					
ANR	1198135	Identifier	w		1198056	0					
ANR	1198136	Argument	h		1198056	4					
ANR	1198137	Identifier	h		1198056	0					
ANR	1198138	Argument	( gx_color_index ) 1		1198056	5					
ANR	1198139	CastExpression	( gx_color_index ) 1		1198056	0					
ANR	1198140	CastTarget	gx_color_index		1198056	0					
ANR	1198141	PrimaryExpression	1		1198056	1					
ANR	1198142	ElseStatement	else		1198056	0					
ANR	1198143	ReturnStatement	return 0 ;	583:8:22545:22553	1198056	0	True				
ANR	1198144	PrimaryExpression	0		1198056	0					
ANR	1198145	ReturnType	static int		1198056	1					
ANR	1198146	Identifier	pattern_accum_fill_rectangle		1198056	2					
ANR	1198147	ParameterList	"gx_device * dev , int x , int y , int w , int h , gx_color_index color"		1198056	3					
ANR	1198148	Parameter	gx_device * dev	571:29:22082:22096	1198056	0	True				
ANR	1198149	ParameterType	gx_device *		1198056	0					
ANR	1198150	Identifier	dev		1198056	1					
ANR	1198151	Parameter	int x	571:46:22099:22103	1198056	1	True				
ANR	1198152	ParameterType	int		1198056	0					
ANR	1198153	Identifier	x		1198056	1					
ANR	1198154	Parameter	int y	571:53:22106:22110	1198056	2	True				
ANR	1198155	ParameterType	int		1198056	0					
ANR	1198156	Identifier	y		1198056	1					
ANR	1198157	Parameter	int w	571:60:22113:22117	1198056	3	True				
ANR	1198158	ParameterType	int		1198056	0					
ANR	1198159	Identifier	w		1198056	1					
ANR	1198160	Parameter	int h	571:67:22120:22124	1198056	4	True				
ANR	1198161	ParameterType	int		1198056	0					
ANR	1198162	Identifier	h		1198056	1					
ANR	1198163	Parameter	gx_color_index color	572:29:22156:22175	1198056	5	True				
ANR	1198164	ParameterType	gx_color_index		1198056	0					
ANR	1198165	Identifier	color		1198056	1					
ANR	1198166	CFGEntryNode	ENTRY		1198056		True				
ANR	1198167	CFGExitNode	EXIT		1198056		True				
ANR	1198168	Symbol	padev -> bits		1198056						
ANR	1198169	Symbol	padev -> mask		1198056						
ANR	1198170	Symbol	color		1198056						
ANR	1198171	Symbol	* dev_proc		1198056						
ANR	1198172	Symbol	h		1198056						
ANR	1198173	Symbol	fill_rectangle		1198056						
ANR	1198174	Symbol	padev		1198056						
ANR	1198175	Symbol	dev		1198056						
ANR	1198176	Symbol	* padev		1198056						
ANR	1198177	Symbol	dev_proc		1198056						
ANR	1198178	Symbol	w		1198056						
ANR	1198179	Symbol	x		1198056						
ANR	1198180	Symbol	y		1198056						
ANR	1198181	Symbol	"* dev_proc ( padev -> mask , fill_rectangle )"		1198056						
ANR	1198182	Symbol	padev -> target		1198056						
ANR	1198183	Function	pattern_accum_copy_mono	587:0:22590:23764							
ANR	1198184	FunctionDef	"pattern_accum_copy_mono (gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index color0 , gx_color_index color1)"		1198183	0					
ANR	1198185	CompoundStatement		591:0:22820:23764	1198183	0					
ANR	1198186	Statement	gx_device_pattern_accum	592:4:22826:22848	1198183	0	True				
ANR	1198187	Statement	*	592:28:22850:22850	1198183	1	True				
ANR	1198188	Statement	const	592:29:22851:22855	1198183	2	True				
ANR	1198189	ExpressionStatement	padev = ( gx_device_pattern_accum * ) dev	592:35:22857:22896	1198183	3	True				
ANR	1198190	AssignmentExpression	padev = ( gx_device_pattern_accum * ) dev		1198183	0		=			
ANR	1198191	Identifier	padev		1198183	0					
ANR	1198192	CastExpression	( gx_device_pattern_accum * ) dev		1198183	1					
ANR	1198193	CastTarget	gx_device_pattern_accum *		1198183	0					
ANR	1198194	Identifier	dev		1198183	1					
ANR	1198195	IfStatement	if ( color0 == gx_no_color_index && color1 == gx_no_color_index )		1198183	4					
ANR	1198196	Condition	color0 == gx_no_color_index && color1 == gx_no_color_index	595:8:22980:23037	1198183	0	True				
ANR	1198197	AndExpression	color0 == gx_no_color_index && color1 == gx_no_color_index		1198183	0		&&			
ANR	1198198	EqualityExpression	color0 == gx_no_color_index		1198183	0		==			
ANR	1198199	Identifier	color0		1198183	0					
ANR	1198200	Identifier	gx_no_color_index		1198183	1					
ANR	1198201	EqualityExpression	color1 == gx_no_color_index		1198183	1		==			
ANR	1198202	Identifier	color1		1198183	0					
ANR	1198203	Identifier	gx_no_color_index		1198183	1					
ANR	1198204	ReturnStatement	return 0 ;	596:8:23048:23056	1198183	1	True				
ANR	1198205	PrimaryExpression	0		1198183	0					
ANR	1198206	IfStatement	if ( padev -> bits )		1198183	5					
ANR	1198207	Condition	padev -> bits	597:8:23066:23076	1198183	0	True				
ANR	1198208	PtrMemberAccess	padev -> bits		1198183	0					
ANR	1198209	Identifier	padev		1198183	0					
ANR	1198210	Identifier	bits		1198183	1					
ANR	1198211	ExpressionStatement	"( * dev_proc ( padev -> target , copy_mono ) ) ( padev -> target , data , data_x , raster , id , x , y , w , h , color0 , color1 )"	598:8:23087:23219	1198183	1	True				
ANR	1198212	CallExpression	"( * dev_proc ( padev -> target , copy_mono ) ) ( padev -> target , data , data_x , raster , id , x , y , w , h , color0 , color1 )"		1198183	0					
ANR	1198213	Callee	"* dev_proc ( padev -> target , copy_mono )"		1198183	0					
ANR	1198214	UnaryOperationExpression	"* dev_proc ( padev -> target , copy_mono )"		1198183	0					
ANR	1198215	UnaryOperator	*		1198183	0					
ANR	1198216	CallExpression	"dev_proc ( padev -> target , copy_mono )"		1198183	1					
ANR	1198217	Callee	dev_proc		1198183	0					
ANR	1198218	Identifier	dev_proc		1198183	0					
ANR	1198219	ArgumentList	padev -> target		1198183	1					
ANR	1198220	Argument	padev -> target		1198183	0					
ANR	1198221	PtrMemberAccess	padev -> target		1198183	0					
ANR	1198222	Identifier	padev		1198183	0					
ANR	1198223	Identifier	target		1198183	1					
ANR	1198224	Argument	copy_mono		1198183	1					
ANR	1198225	Identifier	copy_mono		1198183	0					
ANR	1198226	ArgumentList	padev -> target		1198183	1					
ANR	1198227	Argument	padev -> target		1198183	0					
ANR	1198228	PtrMemberAccess	padev -> target		1198183	0					
ANR	1198229	Identifier	padev		1198183	0					
ANR	1198230	Identifier	target		1198183	1					
ANR	1198231	Argument	data		1198183	1					
ANR	1198232	Identifier	data		1198183	0					
ANR	1198233	Argument	data_x		1198183	2					
ANR	1198234	Identifier	data_x		1198183	0					
ANR	1198235	Argument	raster		1198183	3					
ANR	1198236	Identifier	raster		1198183	0					
ANR	1198237	Argument	id		1198183	4					
ANR	1198238	Identifier	id		1198183	0					
ANR	1198239	Argument	x		1198183	5					
ANR	1198240	Identifier	x		1198183	0					
ANR	1198241	Argument	y		1198183	6					
ANR	1198242	Identifier	y		1198183	0					
ANR	1198243	Argument	w		1198183	7					
ANR	1198244	Identifier	w		1198183	0					
ANR	1198245	Argument	h		1198183	8					
ANR	1198246	Identifier	h		1198183	0					
ANR	1198247	Argument	color0		1198183	9					
ANR	1198248	Identifier	color0		1198183	0					
ANR	1198249	Argument	color1		1198183	10					
ANR	1198250	Identifier	color1		1198183	0					
ANR	1198251	IfStatement	if ( padev -> mask )		1198183	6					
ANR	1198252	Condition	padev -> mask	601:8:23229:23239	1198183	0	True				
ANR	1198253	PtrMemberAccess	padev -> mask		1198183	0					
ANR	1198254	Identifier	padev		1198183	0					
ANR	1198255	Identifier	mask		1198183	1					
ANR	1198256	CompoundStatement		11:21:421:421	1198183	1					
ANR	1198257	IfStatement	if ( color0 != gx_no_color_index )		1198183	0					
ANR	1198258	Condition	color0 != gx_no_color_index	602:12:23256:23282	1198183	0	True				
ANR	1198259	EqualityExpression	color0 != gx_no_color_index		1198183	0		!=			
ANR	1198260	Identifier	color0		1198183	0					
ANR	1198261	Identifier	gx_no_color_index		1198183	1					
ANR	1198262	ExpressionStatement	color0 = 1	603:12:23297:23307	1198183	1	True				
ANR	1198263	AssignmentExpression	color0 = 1		1198183	0		=			
ANR	1198264	Identifier	color0		1198183	0					
ANR	1198265	PrimaryExpression	1		1198183	1					
ANR	1198266	IfStatement	if ( color1 != gx_no_color_index )		1198183	1					
ANR	1198267	Condition	color1 != gx_no_color_index	604:12:23321:23347	1198183	0	True				
ANR	1198268	EqualityExpression	color1 != gx_no_color_index		1198183	0		!=			
ANR	1198269	Identifier	color1		1198183	0					
ANR	1198270	Identifier	gx_no_color_index		1198183	1					
ANR	1198271	ExpressionStatement	color1 = 1	605:12:23362:23372	1198183	1	True				
ANR	1198272	AssignmentExpression	color1 = 1		1198183	0		=			
ANR	1198273	Identifier	color1		1198183	0					
ANR	1198274	PrimaryExpression	1		1198183	1					
ANR	1198275	IfStatement	if ( color0 == 1 && color1 == 1 )		1198183	2					
ANR	1198276	Condition	color0 == 1 && color1 == 1	606:12:23386:23411	1198183	0	True				
ANR	1198277	AndExpression	color0 == 1 && color1 == 1		1198183	0		&&			
ANR	1198278	EqualityExpression	color0 == 1		1198183	0		==			
ANR	1198279	Identifier	color0		1198183	0					
ANR	1198280	PrimaryExpression	1		1198183	1					
ANR	1198281	EqualityExpression	color1 == 1		1198183	1		==			
ANR	1198282	Identifier	color1		1198183	0					
ANR	1198283	PrimaryExpression	1		1198183	1					
ANR	1198284	ReturnStatement	"return ( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 ) ;"	607:12:23426:23549	1198183	1	True				
ANR	1198285	CallExpression	"( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 )"		1198183	0					
ANR	1198286	Callee	"* dev_proc ( padev -> mask , fill_rectangle )"		1198183	0					
ANR	1198287	UnaryOperationExpression	"* dev_proc ( padev -> mask , fill_rectangle )"		1198183	0					
ANR	1198288	UnaryOperator	*		1198183	0					
ANR	1198289	CallExpression	"dev_proc ( padev -> mask , fill_rectangle )"		1198183	1					
ANR	1198290	Callee	dev_proc		1198183	0					
ANR	1198291	Identifier	dev_proc		1198183	0					
ANR	1198292	ArgumentList	padev -> mask		1198183	1					
ANR	1198293	Argument	padev -> mask		1198183	0					
ANR	1198294	PtrMemberAccess	padev -> mask		1198183	0					
ANR	1198295	Identifier	padev		1198183	0					
ANR	1198296	Identifier	mask		1198183	1					
ANR	1198297	Argument	fill_rectangle		1198183	1					
ANR	1198298	Identifier	fill_rectangle		1198183	0					
ANR	1198299	ArgumentList	( gx_device * ) padev -> mask		1198183	1					
ANR	1198300	Argument	( gx_device * ) padev -> mask		1198183	0					
ANR	1198301	CastExpression	( gx_device * ) padev -> mask		1198183	0					
ANR	1198302	CastTarget	gx_device *		1198183	0					
ANR	1198303	PtrMemberAccess	padev -> mask		1198183	1					
ANR	1198304	Identifier	padev		1198183	0					
ANR	1198305	Identifier	mask		1198183	1					
ANR	1198306	Argument	x		1198183	1					
ANR	1198307	Identifier	x		1198183	0					
ANR	1198308	Argument	y		1198183	2					
ANR	1198309	Identifier	y		1198183	0					
ANR	1198310	Argument	w		1198183	3					
ANR	1198311	Identifier	w		1198183	0					
ANR	1198312	Argument	h		1198183	4					
ANR	1198313	Identifier	h		1198183	0					
ANR	1198314	Argument	( gx_color_index ) 1		1198183	5					
ANR	1198315	CastExpression	( gx_color_index ) 1		1198183	0					
ANR	1198316	CastTarget	gx_color_index		1198183	0					
ANR	1198317	PrimaryExpression	1		1198183	1					
ANR	1198318	ElseStatement	else		1198183	0					
ANR	1198319	ReturnStatement	"return ( * dev_proc ( padev -> mask , copy_mono ) ) ( ( gx_device * ) padev -> mask , data , data_x , raster , id , x , y , w , h , color0 , color1 ) ;"	610:12:23576:23733	1198183	0	True				
ANR	1198320	CallExpression	"( * dev_proc ( padev -> mask , copy_mono ) ) ( ( gx_device * ) padev -> mask , data , data_x , raster , id , x , y , w , h , color0 , color1 )"		1198183	0					
ANR	1198321	Callee	"* dev_proc ( padev -> mask , copy_mono )"		1198183	0					
ANR	1198322	UnaryOperationExpression	"* dev_proc ( padev -> mask , copy_mono )"		1198183	0					
ANR	1198323	UnaryOperator	*		1198183	0					
ANR	1198324	CallExpression	"dev_proc ( padev -> mask , copy_mono )"		1198183	1					
ANR	1198325	Callee	dev_proc		1198183	0					
ANR	1198326	Identifier	dev_proc		1198183	0					
ANR	1198327	ArgumentList	padev -> mask		1198183	1					
ANR	1198328	Argument	padev -> mask		1198183	0					
ANR	1198329	PtrMemberAccess	padev -> mask		1198183	0					
ANR	1198330	Identifier	padev		1198183	0					
ANR	1198331	Identifier	mask		1198183	1					
ANR	1198332	Argument	copy_mono		1198183	1					
ANR	1198333	Identifier	copy_mono		1198183	0					
ANR	1198334	ArgumentList	( gx_device * ) padev -> mask		1198183	1					
ANR	1198335	Argument	( gx_device * ) padev -> mask		1198183	0					
ANR	1198336	CastExpression	( gx_device * ) padev -> mask		1198183	0					
ANR	1198337	CastTarget	gx_device *		1198183	0					
ANR	1198338	PtrMemberAccess	padev -> mask		1198183	1					
ANR	1198339	Identifier	padev		1198183	0					
ANR	1198340	Identifier	mask		1198183	1					
ANR	1198341	Argument	data		1198183	1					
ANR	1198342	Identifier	data		1198183	0					
ANR	1198343	Argument	data_x		1198183	2					
ANR	1198344	Identifier	data_x		1198183	0					
ANR	1198345	Argument	raster		1198183	3					
ANR	1198346	Identifier	raster		1198183	0					
ANR	1198347	Argument	id		1198183	4					
ANR	1198348	Identifier	id		1198183	0					
ANR	1198349	Argument	x		1198183	5					
ANR	1198350	Identifier	x		1198183	0					
ANR	1198351	Argument	y		1198183	6					
ANR	1198352	Identifier	y		1198183	0					
ANR	1198353	Argument	w		1198183	7					
ANR	1198354	Identifier	w		1198183	0					
ANR	1198355	Argument	h		1198183	8					
ANR	1198356	Identifier	h		1198183	0					
ANR	1198357	Argument	color0		1198183	9					
ANR	1198358	Identifier	color0		1198183	0					
ANR	1198359	Argument	color1		1198183	10					
ANR	1198360	Identifier	color1		1198183	0					
ANR	1198361	ElseStatement	else		1198183	0					
ANR	1198362	ReturnStatement	return 0 ;	614:8:23754:23762	1198183	0	True				
ANR	1198363	PrimaryExpression	0		1198183	0					
ANR	1198364	ReturnType	static int		1198183	1					
ANR	1198365	Identifier	pattern_accum_copy_mono		1198183	2					
ANR	1198366	ParameterList	"gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index color0 , gx_color_index color1"		1198183	3					
ANR	1198367	Parameter	gx_device * dev	588:24:22625:22639	1198183	0	True				
ANR	1198368	ParameterType	gx_device *		1198183	0					
ANR	1198369	Identifier	dev		1198183	1					
ANR	1198370	Parameter	const byte * data	588:41:22642:22658	1198183	1	True				
ANR	1198371	ParameterType	const byte *		1198183	0					
ANR	1198372	Identifier	data		1198183	1					
ANR	1198373	Parameter	int data_x	588:60:22661:22670	1198183	2	True				
ANR	1198374	ParameterType	int		1198183	0					
ANR	1198375	Identifier	data_x		1198183	1					
ANR	1198376	Parameter	int raster	589:20:22693:22702	1198183	3	True				
ANR	1198377	ParameterType	int		1198183	0					
ANR	1198378	Identifier	raster		1198183	1					
ANR	1198379	Parameter	gx_bitmap_id id	589:32:22705:22719	1198183	4	True				
ANR	1198380	ParameterType	gx_bitmap_id		1198183	0					
ANR	1198381	Identifier	id		1198183	1					
ANR	1198382	Parameter	int x	589:49:22722:22726	1198183	5	True				
ANR	1198383	ParameterType	int		1198183	0					
ANR	1198384	Identifier	x		1198183	1					
ANR	1198385	Parameter	int y	589:56:22729:22733	1198183	6	True				
ANR	1198386	ParameterType	int		1198183	0					
ANR	1198387	Identifier	y		1198183	1					
ANR	1198388	Parameter	int w	589:63:22736:22740	1198183	7	True				
ANR	1198389	ParameterType	int		1198183	0					
ANR	1198390	Identifier	w		1198183	1					
ANR	1198391	Parameter	int h	589:70:22743:22747	1198183	8	True				
ANR	1198392	ParameterType	int		1198183	0					
ANR	1198393	Identifier	h		1198183	1					
ANR	1198394	Parameter	gx_color_index color0	590:24:22774:22794	1198183	9	True				
ANR	1198395	ParameterType	gx_color_index		1198183	0					
ANR	1198396	Identifier	color0		1198183	1					
ANR	1198397	Parameter	gx_color_index color1	590:47:22797:22817	1198183	10	True				
ANR	1198398	ParameterType	gx_color_index		1198183	0					
ANR	1198399	Identifier	color1		1198183	1					
ANR	1198400	CFGEntryNode	ENTRY		1198183		True				
ANR	1198401	CFGExitNode	EXIT		1198183		True				
ANR	1198402	Symbol	padev -> bits		1198183						
ANR	1198403	Symbol	padev -> mask		1198183						
ANR	1198404	Symbol	data		1198183						
ANR	1198405	Symbol	* dev_proc		1198183						
ANR	1198406	Symbol	raster		1198183						
ANR	1198407	Symbol	h		1198183						
ANR	1198408	Symbol	fill_rectangle		1198183						
ANR	1198409	Symbol	color1		1198183						
ANR	1198410	Symbol	data_x		1198183						
ANR	1198411	Symbol	color0		1198183						
ANR	1198412	Symbol	padev		1198183						
ANR	1198413	Symbol	gx_no_color_index		1198183						
ANR	1198414	Symbol	dev		1198183						
ANR	1198415	Symbol	* padev		1198183						
ANR	1198416	Symbol	copy_mono		1198183						
ANR	1198417	Symbol	dev_proc		1198183						
ANR	1198418	Symbol	w		1198183						
ANR	1198419	Symbol	x		1198183						
ANR	1198420	Symbol	y		1198183						
ANR	1198421	Symbol	"* dev_proc ( padev -> mask , fill_rectangle )"		1198183						
ANR	1198422	Symbol	id		1198183						
ANR	1198423	Symbol	"* dev_proc ( padev -> mask , copy_mono )"		1198183						
ANR	1198424	Symbol	padev -> target		1198183						
ANR	1198425	Function	pattern_accum_copy_color	618:0:23794:24346							
ANR	1198426	FunctionDef	"pattern_accum_copy_color (gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h)"		1198425	0					
ANR	1198427	CompoundStatement		621:0:23955:24346	1198425	0					
ANR	1198428	Statement	gx_device_pattern_accum	622:4:23961:23983	1198425	0	True				
ANR	1198429	Statement	*	622:28:23985:23985	1198425	1	True				
ANR	1198430	Statement	const	622:29:23986:23990	1198425	2	True				
ANR	1198431	ExpressionStatement	padev = ( gx_device_pattern_accum * ) dev	622:35:23992:24031	1198425	3	True				
ANR	1198432	AssignmentExpression	padev = ( gx_device_pattern_accum * ) dev		1198425	0		=			
ANR	1198433	Identifier	padev		1198425	0					
ANR	1198434	CastExpression	( gx_device_pattern_accum * ) dev		1198425	1					
ANR	1198435	CastTarget	gx_device_pattern_accum *		1198425	0					
ANR	1198436	Identifier	dev		1198425	1					
ANR	1198437	IfStatement	if ( padev -> bits )		1198425	4					
ANR	1198438	Condition	padev -> bits	624:8:24042:24052	1198425	0	True				
ANR	1198439	PtrMemberAccess	padev -> bits		1198425	0					
ANR	1198440	Identifier	padev		1198425	0					
ANR	1198441	Identifier	bits		1198425	1					
ANR	1198442	ExpressionStatement	"( * dev_proc ( padev -> target , copy_color ) ) ( padev -> target , data , data_x , raster , id , x , y , w , h )"	625:8:24063:24167	1198425	1	True				
ANR	1198443	CallExpression	"( * dev_proc ( padev -> target , copy_color ) ) ( padev -> target , data , data_x , raster , id , x , y , w , h )"		1198425	0					
ANR	1198444	Callee	"* dev_proc ( padev -> target , copy_color )"		1198425	0					
ANR	1198445	UnaryOperationExpression	"* dev_proc ( padev -> target , copy_color )"		1198425	0					
ANR	1198446	UnaryOperator	*		1198425	0					
ANR	1198447	CallExpression	"dev_proc ( padev -> target , copy_color )"		1198425	1					
ANR	1198448	Callee	dev_proc		1198425	0					
ANR	1198449	Identifier	dev_proc		1198425	0					
ANR	1198450	ArgumentList	padev -> target		1198425	1					
ANR	1198451	Argument	padev -> target		1198425	0					
ANR	1198452	PtrMemberAccess	padev -> target		1198425	0					
ANR	1198453	Identifier	padev		1198425	0					
ANR	1198454	Identifier	target		1198425	1					
ANR	1198455	Argument	copy_color		1198425	1					
ANR	1198456	Identifier	copy_color		1198425	0					
ANR	1198457	ArgumentList	padev -> target		1198425	1					
ANR	1198458	Argument	padev -> target		1198425	0					
ANR	1198459	PtrMemberAccess	padev -> target		1198425	0					
ANR	1198460	Identifier	padev		1198425	0					
ANR	1198461	Identifier	target		1198425	1					
ANR	1198462	Argument	data		1198425	1					
ANR	1198463	Identifier	data		1198425	0					
ANR	1198464	Argument	data_x		1198425	2					
ANR	1198465	Identifier	data_x		1198425	0					
ANR	1198466	Argument	raster		1198425	3					
ANR	1198467	Identifier	raster		1198425	0					
ANR	1198468	Argument	id		1198425	4					
ANR	1198469	Identifier	id		1198425	0					
ANR	1198470	Argument	x		1198425	5					
ANR	1198471	Identifier	x		1198425	0					
ANR	1198472	Argument	y		1198425	6					
ANR	1198473	Identifier	y		1198425	0					
ANR	1198474	Argument	w		1198425	7					
ANR	1198475	Identifier	w		1198425	0					
ANR	1198476	Argument	h		1198425	8					
ANR	1198477	Identifier	h		1198425	0					
ANR	1198478	IfStatement	if ( padev -> mask )		1198425	5					
ANR	1198479	Condition	padev -> mask	627:8:24177:24187	1198425	0	True				
ANR	1198480	PtrMemberAccess	padev -> mask		1198425	0					
ANR	1198481	Identifier	padev		1198425	0					
ANR	1198482	Identifier	mask		1198425	1					
ANR	1198483	ReturnStatement	"return ( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 ) ;"	628:8:24198:24317	1198425	1	True				
ANR	1198484	CallExpression	"( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 )"		1198425	0					
ANR	1198485	Callee	"* dev_proc ( padev -> mask , fill_rectangle )"		1198425	0					
ANR	1198486	UnaryOperationExpression	"* dev_proc ( padev -> mask , fill_rectangle )"		1198425	0					
ANR	1198487	UnaryOperator	*		1198425	0					
ANR	1198488	CallExpression	"dev_proc ( padev -> mask , fill_rectangle )"		1198425	1					
ANR	1198489	Callee	dev_proc		1198425	0					
ANR	1198490	Identifier	dev_proc		1198425	0					
ANR	1198491	ArgumentList	padev -> mask		1198425	1					
ANR	1198492	Argument	padev -> mask		1198425	0					
ANR	1198493	PtrMemberAccess	padev -> mask		1198425	0					
ANR	1198494	Identifier	padev		1198425	0					
ANR	1198495	Identifier	mask		1198425	1					
ANR	1198496	Argument	fill_rectangle		1198425	1					
ANR	1198497	Identifier	fill_rectangle		1198425	0					
ANR	1198498	ArgumentList	( gx_device * ) padev -> mask		1198425	1					
ANR	1198499	Argument	( gx_device * ) padev -> mask		1198425	0					
ANR	1198500	CastExpression	( gx_device * ) padev -> mask		1198425	0					
ANR	1198501	CastTarget	gx_device *		1198425	0					
ANR	1198502	PtrMemberAccess	padev -> mask		1198425	1					
ANR	1198503	Identifier	padev		1198425	0					
ANR	1198504	Identifier	mask		1198425	1					
ANR	1198505	Argument	x		1198425	1					
ANR	1198506	Identifier	x		1198425	0					
ANR	1198507	Argument	y		1198425	2					
ANR	1198508	Identifier	y		1198425	0					
ANR	1198509	Argument	w		1198425	3					
ANR	1198510	Identifier	w		1198425	0					
ANR	1198511	Argument	h		1198425	4					
ANR	1198512	Identifier	h		1198425	0					
ANR	1198513	Argument	( gx_color_index ) 1		1198425	5					
ANR	1198514	CastExpression	( gx_color_index ) 1		1198425	0					
ANR	1198515	CastTarget	gx_color_index		1198425	0					
ANR	1198516	PrimaryExpression	1		1198425	1					
ANR	1198517	ElseStatement	else		1198425	0					
ANR	1198518	ReturnStatement	return 0 ;	631:8:24336:24344	1198425	0	True				
ANR	1198519	PrimaryExpression	0		1198425	0					
ANR	1198520	ReturnType	static int		1198425	1					
ANR	1198521	Identifier	pattern_accum_copy_color		1198425	2					
ANR	1198522	ParameterList	"gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h"		1198425	3					
ANR	1198523	Parameter	gx_device * dev	619:25:23830:23844	1198425	0	True				
ANR	1198524	ParameterType	gx_device *		1198425	0					
ANR	1198525	Identifier	dev		1198425	1					
ANR	1198526	Parameter	const byte * data	619:42:23847:23863	1198425	1	True				
ANR	1198527	ParameterType	const byte *		1198425	0					
ANR	1198528	Identifier	data		1198425	1					
ANR	1198529	Parameter	int data_x	619:61:23866:23875	1198425	2	True				
ANR	1198530	ParameterType	int		1198425	0					
ANR	1198531	Identifier	data_x		1198425	1					
ANR	1198532	Parameter	int raster	620:20:23898:23907	1198425	3	True				
ANR	1198533	ParameterType	int		1198425	0					
ANR	1198534	Identifier	raster		1198425	1					
ANR	1198535	Parameter	gx_bitmap_id id	620:32:23910:23924	1198425	4	True				
ANR	1198536	ParameterType	gx_bitmap_id		1198425	0					
ANR	1198537	Identifier	id		1198425	1					
ANR	1198538	Parameter	int x	620:49:23927:23931	1198425	5	True				
ANR	1198539	ParameterType	int		1198425	0					
ANR	1198540	Identifier	x		1198425	1					
ANR	1198541	Parameter	int y	620:56:23934:23938	1198425	6	True				
ANR	1198542	ParameterType	int		1198425	0					
ANR	1198543	Identifier	y		1198425	1					
ANR	1198544	Parameter	int w	620:63:23941:23945	1198425	7	True				
ANR	1198545	ParameterType	int		1198425	0					
ANR	1198546	Identifier	w		1198425	1					
ANR	1198547	Parameter	int h	620:70:23948:23952	1198425	8	True				
ANR	1198548	ParameterType	int		1198425	0					
ANR	1198549	Identifier	h		1198425	1					
ANR	1198550	CFGEntryNode	ENTRY		1198425		True				
ANR	1198551	CFGExitNode	EXIT		1198425		True				
ANR	1198552	Symbol	padev -> bits		1198425						
ANR	1198553	Symbol	padev -> mask		1198425						
ANR	1198554	Symbol	data		1198425						
ANR	1198555	Symbol	* dev_proc		1198425						
ANR	1198556	Symbol	raster		1198425						
ANR	1198557	Symbol	h		1198425						
ANR	1198558	Symbol	fill_rectangle		1198425						
ANR	1198559	Symbol	data_x		1198425						
ANR	1198560	Symbol	padev		1198425						
ANR	1198561	Symbol	dev		1198425						
ANR	1198562	Symbol	copy_color		1198425						
ANR	1198563	Symbol	* padev		1198425						
ANR	1198564	Symbol	dev_proc		1198425						
ANR	1198565	Symbol	w		1198425						
ANR	1198566	Symbol	x		1198425						
ANR	1198567	Symbol	y		1198425						
ANR	1198568	Symbol	"* dev_proc ( padev -> mask , fill_rectangle )"		1198425						
ANR	1198569	Symbol	id		1198425						
ANR	1198570	Symbol	padev -> target		1198425						
ANR	1198571	Function	pattern_accum_copy_planes	635:0:24375:24993							
ANR	1198572	FunctionDef	"pattern_accum_copy_planes (gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , int plane_height)"		1198571	0					
ANR	1198573	CompoundStatement		639:0:24587:24993	1198571	0					
ANR	1198574	Statement	gx_device_pattern_accum	640:4:24593:24615	1198571	0	True				
ANR	1198575	Statement	*	640:28:24617:24617	1198571	1	True				
ANR	1198576	Statement	const	640:29:24618:24622	1198571	2	True				
ANR	1198577	ExpressionStatement	padev = ( gx_device_pattern_accum * ) dev	640:35:24624:24663	1198571	3	True				
ANR	1198578	AssignmentExpression	padev = ( gx_device_pattern_accum * ) dev		1198571	0		=			
ANR	1198579	Identifier	padev		1198571	0					
ANR	1198580	CastExpression	( gx_device_pattern_accum * ) dev		1198571	1					
ANR	1198581	CastTarget	gx_device_pattern_accum *		1198571	0					
ANR	1198582	Identifier	dev		1198571	1					
ANR	1198583	IfStatement	if ( padev -> bits )		1198571	4					
ANR	1198584	Condition	padev -> bits	642:8:24674:24684	1198571	0	True				
ANR	1198585	PtrMemberAccess	padev -> bits		1198571	0					
ANR	1198586	Identifier	padev		1198571	0					
ANR	1198587	Identifier	bits		1198571	1					
ANR	1198588	ExpressionStatement	"( * dev_proc ( padev -> target , copy_planes ) ) ( padev -> target , data , data_x , raster , id , x , y , w , h , plane_height )"	643:8:24695:24814	1198571	1	True				
ANR	1198589	CallExpression	"( * dev_proc ( padev -> target , copy_planes ) ) ( padev -> target , data , data_x , raster , id , x , y , w , h , plane_height )"		1198571	0					
ANR	1198590	Callee	"* dev_proc ( padev -> target , copy_planes )"		1198571	0					
ANR	1198591	UnaryOperationExpression	"* dev_proc ( padev -> target , copy_planes )"		1198571	0					
ANR	1198592	UnaryOperator	*		1198571	0					
ANR	1198593	CallExpression	"dev_proc ( padev -> target , copy_planes )"		1198571	1					
ANR	1198594	Callee	dev_proc		1198571	0					
ANR	1198595	Identifier	dev_proc		1198571	0					
ANR	1198596	ArgumentList	padev -> target		1198571	1					
ANR	1198597	Argument	padev -> target		1198571	0					
ANR	1198598	PtrMemberAccess	padev -> target		1198571	0					
ANR	1198599	Identifier	padev		1198571	0					
ANR	1198600	Identifier	target		1198571	1					
ANR	1198601	Argument	copy_planes		1198571	1					
ANR	1198602	Identifier	copy_planes		1198571	0					
ANR	1198603	ArgumentList	padev -> target		1198571	1					
ANR	1198604	Argument	padev -> target		1198571	0					
ANR	1198605	PtrMemberAccess	padev -> target		1198571	0					
ANR	1198606	Identifier	padev		1198571	0					
ANR	1198607	Identifier	target		1198571	1					
ANR	1198608	Argument	data		1198571	1					
ANR	1198609	Identifier	data		1198571	0					
ANR	1198610	Argument	data_x		1198571	2					
ANR	1198611	Identifier	data_x		1198571	0					
ANR	1198612	Argument	raster		1198571	3					
ANR	1198613	Identifier	raster		1198571	0					
ANR	1198614	Argument	id		1198571	4					
ANR	1198615	Identifier	id		1198571	0					
ANR	1198616	Argument	x		1198571	5					
ANR	1198617	Identifier	x		1198571	0					
ANR	1198618	Argument	y		1198571	6					
ANR	1198619	Identifier	y		1198571	0					
ANR	1198620	Argument	w		1198571	7					
ANR	1198621	Identifier	w		1198571	0					
ANR	1198622	Argument	h		1198571	8					
ANR	1198623	Identifier	h		1198571	0					
ANR	1198624	Argument	plane_height		1198571	9					
ANR	1198625	Identifier	plane_height		1198571	0					
ANR	1198626	IfStatement	if ( padev -> mask )		1198571	5					
ANR	1198627	Condition	padev -> mask	645:8:24824:24834	1198571	0	True				
ANR	1198628	PtrMemberAccess	padev -> mask		1198571	0					
ANR	1198629	Identifier	padev		1198571	0					
ANR	1198630	Identifier	mask		1198571	1					
ANR	1198631	ReturnStatement	"return ( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 ) ;"	646:8:24845:24964	1198571	1	True				
ANR	1198632	CallExpression	"( * dev_proc ( padev -> mask , fill_rectangle ) ) ( ( gx_device * ) padev -> mask , x , y , w , h , ( gx_color_index ) 1 )"		1198571	0					
ANR	1198633	Callee	"* dev_proc ( padev -> mask , fill_rectangle )"		1198571	0					
ANR	1198634	UnaryOperationExpression	"* dev_proc ( padev -> mask , fill_rectangle )"		1198571	0					
ANR	1198635	UnaryOperator	*		1198571	0					
ANR	1198636	CallExpression	"dev_proc ( padev -> mask , fill_rectangle )"		1198571	1					
ANR	1198637	Callee	dev_proc		1198571	0					
ANR	1198638	Identifier	dev_proc		1198571	0					
ANR	1198639	ArgumentList	padev -> mask		1198571	1					
ANR	1198640	Argument	padev -> mask		1198571	0					
ANR	1198641	PtrMemberAccess	padev -> mask		1198571	0					
ANR	1198642	Identifier	padev		1198571	0					
ANR	1198643	Identifier	mask		1198571	1					
ANR	1198644	Argument	fill_rectangle		1198571	1					
ANR	1198645	Identifier	fill_rectangle		1198571	0					
ANR	1198646	ArgumentList	( gx_device * ) padev -> mask		1198571	1					
ANR	1198647	Argument	( gx_device * ) padev -> mask		1198571	0					
ANR	1198648	CastExpression	( gx_device * ) padev -> mask		1198571	0					
ANR	1198649	CastTarget	gx_device *		1198571	0					
ANR	1198650	PtrMemberAccess	padev -> mask		1198571	1					
ANR	1198651	Identifier	padev		1198571	0					
ANR	1198652	Identifier	mask		1198571	1					
ANR	1198653	Argument	x		1198571	1					
ANR	1198654	Identifier	x		1198571	0					
ANR	1198655	Argument	y		1198571	2					
ANR	1198656	Identifier	y		1198571	0					
ANR	1198657	Argument	w		1198571	3					
ANR	1198658	Identifier	w		1198571	0					
ANR	1198659	Argument	h		1198571	4					
ANR	1198660	Identifier	h		1198571	0					
ANR	1198661	Argument	( gx_color_index ) 1		1198571	5					
ANR	1198662	CastExpression	( gx_color_index ) 1		1198571	0					
ANR	1198663	CastTarget	gx_color_index		1198571	0					
ANR	1198664	PrimaryExpression	1		1198571	1					
ANR	1198665	ElseStatement	else		1198571	0					
ANR	1198666	ReturnStatement	return 0 ;	649:8:24983:24991	1198571	0	True				
ANR	1198667	PrimaryExpression	0		1198571	0					
ANR	1198668	ReturnType	static int		1198571	1					
ANR	1198669	Identifier	pattern_accum_copy_planes		1198571	2					
ANR	1198670	ParameterList	"gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , int plane_height"		1198571	3					
ANR	1198671	Parameter	gx_device * dev	636:26:24412:24426	1198571	0	True				
ANR	1198672	ParameterType	gx_device *		1198571	0					
ANR	1198673	Identifier	dev		1198571	1					
ANR	1198674	Parameter	const byte * data	636:43:24429:24445	1198571	1	True				
ANR	1198675	ParameterType	const byte *		1198571	0					
ANR	1198676	Identifier	data		1198571	1					
ANR	1198677	Parameter	int data_x	636:62:24448:24457	1198571	2	True				
ANR	1198678	ParameterType	int		1198571	0					
ANR	1198679	Identifier	data_x		1198571	1					
ANR	1198680	Parameter	int raster	637:26:24486:24495	1198571	3	True				
ANR	1198681	ParameterType	int		1198571	0					
ANR	1198682	Identifier	raster		1198571	1					
ANR	1198683	Parameter	gx_bitmap_id id	637:38:24498:24512	1198571	4	True				
ANR	1198684	ParameterType	gx_bitmap_id		1198571	0					
ANR	1198685	Identifier	id		1198571	1					
ANR	1198686	Parameter	int x	638:26:24541:24545	1198571	5	True				
ANR	1198687	ParameterType	int		1198571	0					
ANR	1198688	Identifier	x		1198571	1					
ANR	1198689	Parameter	int y	638:33:24548:24552	1198571	6	True				
ANR	1198690	ParameterType	int		1198571	0					
ANR	1198691	Identifier	y		1198571	1					
ANR	1198692	Parameter	int w	638:40:24555:24559	1198571	7	True				
ANR	1198693	ParameterType	int		1198571	0					
ANR	1198694	Identifier	w		1198571	1					
ANR	1198695	Parameter	int h	638:47:24562:24566	1198571	8	True				
ANR	1198696	ParameterType	int		1198571	0					
ANR	1198697	Identifier	h		1198571	1					
ANR	1198698	Parameter	int plane_height	638:54:24569:24584	1198571	9	True				
ANR	1198699	ParameterType	int		1198571	0					
ANR	1198700	Identifier	plane_height		1198571	1					
ANR	1198701	CFGEntryNode	ENTRY		1198571		True				
ANR	1198702	CFGExitNode	EXIT		1198571		True				
ANR	1198703	Symbol	padev -> bits		1198571						
ANR	1198704	Symbol	padev -> mask		1198571						
ANR	1198705	Symbol	data		1198571						
ANR	1198706	Symbol	plane_height		1198571						
ANR	1198707	Symbol	* dev_proc		1198571						
ANR	1198708	Symbol	raster		1198571						
ANR	1198709	Symbol	h		1198571						
ANR	1198710	Symbol	fill_rectangle		1198571						
ANR	1198711	Symbol	data_x		1198571						
ANR	1198712	Symbol	padev		1198571						
ANR	1198713	Symbol	dev		1198571						
ANR	1198714	Symbol	* padev		1198571						
ANR	1198715	Symbol	dev_proc		1198571						
ANR	1198716	Symbol	w		1198571						
ANR	1198717	Symbol	copy_planes		1198571						
ANR	1198718	Symbol	x		1198571						
ANR	1198719	Symbol	y		1198571						
ANR	1198720	Symbol	"* dev_proc ( padev -> mask , fill_rectangle )"		1198571						
ANR	1198721	Symbol	id		1198571						
ANR	1198722	Symbol	padev -> target		1198571						
ANR	1198723	Function	blank_unmasked_bits	652:0:24996:28208							
ANR	1198724	FunctionDef	"blank_unmasked_bits (gx_device * mask , int polarity , int num_comps , int depth , const gs_int_rect * prect , gs_get_bits_params_t * p)"		1198723	0					
ANR	1198725	CompoundStatement		659:0:25236:28208	1198723	0					
ANR	1198726	Statement	static	660:4:25242:25247	1198723	0	True				
ANR	1198727	IdentifierDeclStatement	const int required_options = GB_COLORS_NATIVE | GB_ALPHA_NONE | GB_RETURN_COPY | GB_ALIGN_STANDARD | GB_OFFSET_0 | GB_RASTER_STANDARD ;	660:11:25249:25497	1198723	1	True				
ANR	1198728	IdentifierDecl	required_options = GB_COLORS_NATIVE | GB_ALPHA_NONE | GB_RETURN_COPY | GB_ALIGN_STANDARD | GB_OFFSET_0 | GB_RASTER_STANDARD		1198723	0					
ANR	1198729	IdentifierDeclType	const int		1198723	0					
ANR	1198730	Identifier	required_options		1198723	1					
ANR	1198731	AssignmentExpression	required_options = GB_COLORS_NATIVE | GB_ALPHA_NONE | GB_RETURN_COPY | GB_ALIGN_STANDARD | GB_OFFSET_0 | GB_RASTER_STANDARD		1198723	2		=			
ANR	1198732	Identifier	required_options		1198723	0					
ANR	1198733	InclusiveOrExpression	GB_COLORS_NATIVE | GB_ALPHA_NONE | GB_RETURN_COPY | GB_ALIGN_STANDARD | GB_OFFSET_0 | GB_RASTER_STANDARD		1198723	1		|			
ANR	1198734	Identifier	GB_COLORS_NATIVE		1198723	0					
ANR	1198735	InclusiveOrExpression	GB_ALPHA_NONE | GB_RETURN_COPY | GB_ALIGN_STANDARD | GB_OFFSET_0 | GB_RASTER_STANDARD		1198723	1		|			
ANR	1198736	Identifier	GB_ALPHA_NONE		1198723	0					
ANR	1198737	InclusiveOrExpression	GB_RETURN_COPY | GB_ALIGN_STANDARD | GB_OFFSET_0 | GB_RASTER_STANDARD		1198723	1		|			
ANR	1198738	Identifier	GB_RETURN_COPY		1198723	0					
ANR	1198739	InclusiveOrExpression	GB_ALIGN_STANDARD | GB_OFFSET_0 | GB_RASTER_STANDARD		1198723	1		|			
ANR	1198740	Identifier	GB_ALIGN_STANDARD		1198723	0					
ANR	1198741	InclusiveOrExpression	GB_OFFSET_0 | GB_RASTER_STANDARD		1198723	1		|			
ANR	1198742	Identifier	GB_OFFSET_0		1198723	0					
ANR	1198743	Identifier	GB_RASTER_STANDARD		1198723	1					
ANR	1198744	IdentifierDeclStatement	int raster = p -> raster ;	666:4:25503:25525	1198723	2	True				
ANR	1198745	IdentifierDecl	raster = p -> raster		1198723	0					
ANR	1198746	IdentifierDeclType	int		1198723	0					
ANR	1198747	Identifier	raster		1198723	1					
ANR	1198748	AssignmentExpression	raster = p -> raster		1198723	2		=			
ANR	1198749	Identifier	raster		1198723	0					
ANR	1198750	PtrMemberAccess	p -> raster		1198723	1					
ANR	1198751	Identifier	p		1198723	0					
ANR	1198752	Identifier	raster		1198723	1					
ANR	1198753	IdentifierDeclStatement	byte * min ;	667:4:25531:25540	1198723	3	True				
ANR	1198754	IdentifierDecl	* min		1198723	0					
ANR	1198755	IdentifierDeclType	byte *		1198723	0					
ANR	1198756	Identifier	min		1198723	1					
ANR	1198757	IdentifierDeclStatement	int x0 = prect -> p . x ;	668:4:25546:25565	1198723	4	True				
ANR	1198758	IdentifierDecl	x0 = prect -> p . x		1198723	0					
ANR	1198759	IdentifierDeclType	int		1198723	0					
ANR	1198760	Identifier	x0		1198723	1					
ANR	1198761	AssignmentExpression	x0 = prect -> p . x		1198723	2		=			
ANR	1198762	Identifier	x0		1198723	0					
ANR	1198763	MemberAccess	prect -> p . x		1198723	1					
ANR	1198764	PtrMemberAccess	prect -> p		1198723	0					
ANR	1198765	Identifier	prect		1198723	0					
ANR	1198766	Identifier	p		1198723	1					
ANR	1198767	Identifier	x		1198723	1					
ANR	1198768	IdentifierDeclStatement	int y0 = prect -> p . y ;	669:4:25571:25590	1198723	5	True				
ANR	1198769	IdentifierDecl	y0 = prect -> p . y		1198723	0					
ANR	1198770	IdentifierDeclType	int		1198723	0					
ANR	1198771	Identifier	y0		1198723	1					
ANR	1198772	AssignmentExpression	y0 = prect -> p . y		1198723	2		=			
ANR	1198773	Identifier	y0		1198723	0					
ANR	1198774	MemberAccess	prect -> p . y		1198723	1					
ANR	1198775	PtrMemberAccess	prect -> p		1198723	0					
ANR	1198776	Identifier	prect		1198723	0					
ANR	1198777	Identifier	p		1198723	1					
ANR	1198778	Identifier	y		1198723	1					
ANR	1198779	IdentifierDeclStatement	"int x , y ;"	670:4:25596:25604	1198723	6	True				
ANR	1198780	IdentifierDecl	x		1198723	0					
ANR	1198781	IdentifierDeclType	int		1198723	0					
ANR	1198782	Identifier	x		1198723	1					
ANR	1198783	IdentifierDecl	y		1198723	1					
ANR	1198784	IdentifierDeclType	int		1198723	0					
ANR	1198785	Identifier	y		1198723	1					
ANR	1198786	IdentifierDeclStatement	int w = prect -> q . x - x0 ;	671:4:25610:25633	1198723	7	True				
ANR	1198787	IdentifierDecl	w = prect -> q . x - x0		1198723	0					
ANR	1198788	IdentifierDeclType	int		1198723	0					
ANR	1198789	Identifier	w		1198723	1					
ANR	1198790	AssignmentExpression	w = prect -> q . x - x0		1198723	2		=			
ANR	1198791	Identifier	w		1198723	0					
ANR	1198792	AdditiveExpression	prect -> q . x - x0		1198723	1		-			
ANR	1198793	MemberAccess	prect -> q . x		1198723	0					
ANR	1198794	PtrMemberAccess	prect -> q		1198723	0					
ANR	1198795	Identifier	prect		1198723	0					
ANR	1198796	Identifier	q		1198723	1					
ANR	1198797	Identifier	x		1198723	1					
ANR	1198798	Identifier	x0		1198723	1					
ANR	1198799	IdentifierDeclStatement	int h = prect -> q . y - y0 ;	672:4:25639:25662	1198723	8	True				
ANR	1198800	IdentifierDecl	h = prect -> q . y - y0		1198723	0					
ANR	1198801	IdentifierDeclType	int		1198723	0					
ANR	1198802	Identifier	h		1198723	1					
ANR	1198803	AssignmentExpression	h = prect -> q . y - y0		1198723	2		=			
ANR	1198804	Identifier	h		1198723	0					
ANR	1198805	AdditiveExpression	prect -> q . y - y0		1198723	1		-			
ANR	1198806	MemberAccess	prect -> q . y		1198723	0					
ANR	1198807	PtrMemberAccess	prect -> q		1198723	0					
ANR	1198808	Identifier	prect		1198723	0					
ANR	1198809	Identifier	q		1198723	1					
ANR	1198810	Identifier	y		1198723	1					
ANR	1198811	Identifier	y0		1198723	1					
ANR	1198812	IdentifierDeclStatement	int code = 0 ;	673:4:25668:25680	1198723	9	True				
ANR	1198813	IdentifierDecl	code = 0		1198723	0					
ANR	1198814	IdentifierDeclType	int		1198723	0					
ANR	1198815	Identifier	code		1198723	1					
ANR	1198816	AssignmentExpression	code = 0		1198723	2		=			
ANR	1198817	Identifier	code		1198723	0					
ANR	1198818	PrimaryExpression	0		1198723	1					
ANR	1198819	IdentifierDeclStatement	byte * ptr ;	674:4:25686:25695	1198723	10	True				
ANR	1198820	IdentifierDecl	* ptr		1198723	0					
ANR	1198821	IdentifierDeclType	byte *		1198723	0					
ANR	1198822	Identifier	ptr		1198723	1					
ANR	1198823	IdentifierDeclStatement	int blank = ( polarity == GX_CINFO_POLARITY_ADDITIVE ? 255 : 0 ) ;	675:4:25701:25763	1198723	11	True				
ANR	1198824	IdentifierDecl	blank = ( polarity == GX_CINFO_POLARITY_ADDITIVE ? 255 : 0 )		1198723	0					
ANR	1198825	IdentifierDeclType	int		1198723	0					
ANR	1198826	Identifier	blank		1198723	1					
ANR	1198827	AssignmentExpression	blank = ( polarity == GX_CINFO_POLARITY_ADDITIVE ? 255 : 0 )		1198723	2		=			
ANR	1198828	Identifier	blank		1198723	0					
ANR	1198829	ConditionalExpression	polarity == GX_CINFO_POLARITY_ADDITIVE ? 255 : 0		1198723	1					
ANR	1198830	Condition	polarity == GX_CINFO_POLARITY_ADDITIVE		1198723	0					
ANR	1198831	EqualityExpression	polarity == GX_CINFO_POLARITY_ADDITIVE		1198723	0		==			
ANR	1198832	Identifier	polarity		1198723	0					
ANR	1198833	Identifier	GX_CINFO_POLARITY_ADDITIVE		1198723	1					
ANR	1198834	PrimaryExpression	255		1198723	1					
ANR	1198835	PrimaryExpression	0		1198723	2					
ANR	1198836	IfStatement	if ( ( p -> options & required_options ) != required_options )		1198723	12					
ANR	1198837	Condition	( p -> options & required_options ) != required_options	677:8:25774:25824	1198723	0	True				
ANR	1198838	EqualityExpression	( p -> options & required_options ) != required_options		1198723	0		!=			
ANR	1198839	BitAndExpression	p -> options & required_options		1198723	0		&			
ANR	1198840	PtrMemberAccess	p -> options		1198723	0					
ANR	1198841	Identifier	p		1198723	0					
ANR	1198842	Identifier	options		1198723	1					
ANR	1198843	Identifier	required_options		1198723	1					
ANR	1198844	Identifier	required_options		1198723	1					
ANR	1198845	ExpressionStatement	return_error ( gs_error_rangecheck )	678:8:25835:25868	1198723	1	True				
ANR	1198846	CallExpression	return_error ( gs_error_rangecheck )		1198723	0					
ANR	1198847	Callee	return_error		1198723	0					
ANR	1198848	Identifier	return_error		1198723	0					
ANR	1198849	ArgumentList	gs_error_rangecheck		1198723	1					
ANR	1198850	Argument	gs_error_rangecheck		1198723	0					
ANR	1198851	Identifier	gs_error_rangecheck		1198723	0					
ANR	1198852	ExpressionStatement	"min = gs_alloc_bytes ( mask -> memory , ( w + 7 ) >> 3 , ""blank_unmasked_bits"" )"	680:4:25875:25942	1198723	13	True				
ANR	1198853	AssignmentExpression	"min = gs_alloc_bytes ( mask -> memory , ( w + 7 ) >> 3 , ""blank_unmasked_bits"" )"		1198723	0		=			
ANR	1198854	Identifier	min		1198723	0					
ANR	1198855	CallExpression	"gs_alloc_bytes ( mask -> memory , ( w + 7 ) >> 3 , ""blank_unmasked_bits"" )"		1198723	1					
ANR	1198856	Callee	gs_alloc_bytes		1198723	0					
ANR	1198857	Identifier	gs_alloc_bytes		1198723	0					
ANR	1198858	ArgumentList	mask -> memory		1198723	1					
ANR	1198859	Argument	mask -> memory		1198723	0					
ANR	1198860	PtrMemberAccess	mask -> memory		1198723	0					
ANR	1198861	Identifier	mask		1198723	0					
ANR	1198862	Identifier	memory		1198723	1					
ANR	1198863	Argument	( w + 7 ) >> 3		1198723	1					
ANR	1198864	ShiftExpression	( w + 7 ) >> 3		1198723	0		>>			
ANR	1198865	AdditiveExpression	w + 7		1198723	0		+			
ANR	1198866	Identifier	w		1198723	0					
ANR	1198867	PrimaryExpression	7		1198723	1					
ANR	1198868	PrimaryExpression	3		1198723	1					
ANR	1198869	Argument	"""blank_unmasked_bits"""		1198723	2					
ANR	1198870	PrimaryExpression	"""blank_unmasked_bits"""		1198723	0					
ANR	1198871	IfStatement	if ( min == NULL )		1198723	14					
ANR	1198872	Condition	min == NULL	681:8:25952:25962	1198723	0	True				
ANR	1198873	EqualityExpression	min == NULL		1198723	0		==			
ANR	1198874	Identifier	min		1198723	0					
ANR	1198875	Identifier	NULL		1198723	1					
ANR	1198876	ExpressionStatement	return_error ( gs_error_VMerror )	682:8:25973:26003	1198723	1	True				
ANR	1198877	CallExpression	return_error ( gs_error_VMerror )		1198723	0					
ANR	1198878	Callee	return_error		1198723	0					
ANR	1198879	Identifier	return_error		1198723	0					
ANR	1198880	ArgumentList	gs_error_VMerror		1198723	1					
ANR	1198881	Argument	gs_error_VMerror		1198723	0					
ANR	1198882	Identifier	gs_error_VMerror		1198723	0					
ANR	1198883	IfStatement	if ( p -> options & GB_PACKING_CHUNKY )		1198723	15					
ANR	1198884	Condition	p -> options & GB_PACKING_CHUNKY	684:8:26014:26043	1198723	0	True				
ANR	1198885	BitAndExpression	p -> options & GB_PACKING_CHUNKY		1198723	0		&			
ANR	1198886	PtrMemberAccess	p -> options		1198723	0					
ANR	1198887	Identifier	p		1198723	0					
ANR	1198888	Identifier	options		1198723	1					
ANR	1198889	Identifier	GB_PACKING_CHUNKY		1198723	1					
ANR	1198890	CompoundStatement		27:4:813:813	1198723	1					
ANR	1198891	IfStatement	if ( ( depth & 7 ) != 0 || depth > 64 )		1198723	0					
ANR	1198892	Condition	( depth & 7 ) != 0 || depth > 64	686:12:26064:26093	1198723	0	True				
ANR	1198893	OrExpression	( depth & 7 ) != 0 || depth > 64		1198723	0		||			
ANR	1198894	EqualityExpression	( depth & 7 ) != 0		1198723	0		!=			
ANR	1198895	BitAndExpression	depth & 7		1198723	0		&			
ANR	1198896	Identifier	depth		1198723	0					
ANR	1198897	PrimaryExpression	7		1198723	1					
ANR	1198898	PrimaryExpression	0		1198723	1					
ANR	1198899	RelationalExpression	depth > 64		1198723	1		>			
ANR	1198900	Identifier	depth		1198723	0					
ANR	1198901	PrimaryExpression	64		1198723	1					
ANR	1198902	ExpressionStatement	return_error ( gs_error_rangecheck )	687:12:26108:26141	1198723	1	True				
ANR	1198903	CallExpression	return_error ( gs_error_rangecheck )		1198723	0					
ANR	1198904	Callee	return_error		1198723	0					
ANR	1198905	Identifier	return_error		1198723	0					
ANR	1198906	ArgumentList	gs_error_rangecheck		1198723	1					
ANR	1198907	Argument	gs_error_rangecheck		1198723	0					
ANR	1198908	Identifier	gs_error_rangecheck		1198723	0					
ANR	1198909	ExpressionStatement	ptr = p -> data [ 0 ]	688:8:26151:26167	1198723	1	True				
ANR	1198910	AssignmentExpression	ptr = p -> data [ 0 ]		1198723	0		=			
ANR	1198911	Identifier	ptr		1198723	0					
ANR	1198912	ArrayIndexing	p -> data [ 0 ]		1198723	1					
ANR	1198913	PtrMemberAccess	p -> data		1198723	0					
ANR	1198914	Identifier	p		1198723	0					
ANR	1198915	Identifier	data		1198723	1					
ANR	1198916	PrimaryExpression	0		1198723	1					
ANR	1198917	ExpressionStatement	depth >>= 3	689:8:26177:26188	1198723	2	True				
ANR	1198918	AssignmentExpression	depth >>= 3		1198723	0		>>=			
ANR	1198919	Identifier	depth		1198723	0					
ANR	1198920	PrimaryExpression	3		1198723	1					
ANR	1198921	ExpressionStatement	raster -= w * depth	690:8:26198:26215	1198723	3	True				
ANR	1198922	AssignmentExpression	raster -= w * depth		1198723	0		-=			
ANR	1198923	Identifier	raster		1198723	0					
ANR	1198924	MultiplicativeExpression	w * depth		1198723	1		*			
ANR	1198925	Identifier	w		1198723	0					
ANR	1198926	Identifier	depth		1198723	1					
ANR	1198927	ForStatement	for ( y = 0 ; y < h ; y ++ )		1198723	4					
ANR	1198928	ForInit	y = 0 ;	691:13:26230:26235	1198723	0	True				
ANR	1198929	AssignmentExpression	y = 0		1198723	0		=			
ANR	1198930	Identifier	y		1198723	0					
ANR	1198931	PrimaryExpression	0		1198723	1					
ANR	1198932	Condition	y < h	691:20:26237:26241	1198723	1	True				
ANR	1198933	RelationalExpression	y < h		1198723	0		<			
ANR	1198934	Identifier	y		1198723	0					
ANR	1198935	Identifier	h		1198723	1					
ANR	1198936	PostIncDecOperationExpression	y ++	691:27:26244:26246	1198723	2	True				
ANR	1198937	Identifier	y		1198723	0					
ANR	1198938	IncDec	++		1198723	1					
ANR	1198939	CompoundStatement		35:12:1034:1044	1198723	3					
ANR	1198940	IdentifierDeclStatement	byte * mine ;	693:12:26271:26281	1198723	0	True				
ANR	1198941	IdentifierDecl	* mine		1198723	0					
ANR	1198942	IdentifierDeclType	byte *		1198723	0					
ANR	1198943	Identifier	mine		1198723	1					
ANR	1198944	ExpressionStatement	"code = dev_proc ( mask , get_bits ) ( mask , y + y0 , min , & mine )"	694:12:26295:26350	1198723	1	True				
ANR	1198945	AssignmentExpression	"code = dev_proc ( mask , get_bits ) ( mask , y + y0 , min , & mine )"		1198723	0		=			
ANR	1198946	Identifier	code		1198723	0					
ANR	1198947	CallExpression	"dev_proc ( mask , get_bits ) ( mask , y + y0 , min , & mine )"		1198723	1					
ANR	1198948	Callee	"dev_proc ( mask , get_bits )"		1198723	0					
ANR	1198949	CallExpression	"dev_proc ( mask , get_bits )"		1198723	0					
ANR	1198950	Callee	dev_proc		1198723	0					
ANR	1198951	Identifier	dev_proc		1198723	0					
ANR	1198952	ArgumentList	mask		1198723	1					
ANR	1198953	Argument	mask		1198723	0					
ANR	1198954	Identifier	mask		1198723	0					
ANR	1198955	Argument	get_bits		1198723	1					
ANR	1198956	Identifier	get_bits		1198723	0					
ANR	1198957	ArgumentList	mask		1198723	1					
ANR	1198958	Argument	mask		1198723	0					
ANR	1198959	Identifier	mask		1198723	0					
ANR	1198960	Argument	y + y0		1198723	1					
ANR	1198961	AdditiveExpression	y + y0		1198723	0		+			
ANR	1198962	Identifier	y		1198723	0					
ANR	1198963	Identifier	y0		1198723	1					
ANR	1198964	Argument	min		1198723	2					
ANR	1198965	Identifier	min		1198723	0					
ANR	1198966	Argument	& mine		1198723	3					
ANR	1198967	UnaryOperationExpression	& mine		1198723	0					
ANR	1198968	UnaryOperator	&		1198723	0					
ANR	1198969	Identifier	mine		1198723	1					
ANR	1198970	IfStatement	if ( code < 0 )		1198723	2					
ANR	1198971	Condition	code < 0	695:16:26368:26375	1198723	0	True				
ANR	1198972	RelationalExpression	code < 0		1198723	0		<			
ANR	1198973	Identifier	code		1198723	0					
ANR	1198974	PrimaryExpression	0		1198723	1					
ANR	1198975	GotoStatement	goto fail ;	696:16:26394:26403	1198723	1	True				
ANR	1198976	Identifier	fail		1198723	0					
ANR	1198977	ForStatement	for ( x = 0 ; x < w ; x ++ )		1198723	3					
ANR	1198978	ForInit	x = 0 ;	697:17:26422:26427	1198723	0	True				
ANR	1198979	AssignmentExpression	x = 0		1198723	0		=			
ANR	1198980	Identifier	x		1198723	0					
ANR	1198981	PrimaryExpression	0		1198723	1					
ANR	1198982	Condition	x < w	697:24:26429:26433	1198723	1	True				
ANR	1198983	RelationalExpression	x < w		1198723	0		<			
ANR	1198984	Identifier	x		1198723	0					
ANR	1198985	Identifier	w		1198723	1					
ANR	1198986	PostIncDecOperationExpression	x ++	697:31:26436:26438	1198723	2	True				
ANR	1198987	Identifier	x		1198723	0					
ANR	1198988	IncDec	++		1198723	1					
ANR	1198989	CompoundStatement		41:16:1234:1247	1198723	3					
ANR	1198990	IdentifierDeclStatement	int xx = x + x0 ;	699:16:26471:26484	1198723	0	True				
ANR	1198991	IdentifierDecl	xx = x + x0		1198723	0					
ANR	1198992	IdentifierDeclType	int		1198723	0					
ANR	1198993	Identifier	xx		1198723	1					
ANR	1198994	AssignmentExpression	xx = x + x0		1198723	2		=			
ANR	1198995	Identifier	xx		1198723	0					
ANR	1198996	AdditiveExpression	x + x0		1198723	1		+			
ANR	1198997	Identifier	x		1198723	0					
ANR	1198998	Identifier	x0		1198723	1					
ANR	1198999	IfStatement	if ( ( ( mine [ xx >> 3 ] >> ( x & 7 ) ) & 1 ) == 0 )		1198723	1					
ANR	1199000	Condition	( ( mine [ xx >> 3 ] >> ( x & 7 ) ) & 1 ) == 0	700:20:26506:26536	1198723	0	True				
ANR	1199001	EqualityExpression	( ( mine [ xx >> 3 ] >> ( x & 7 ) ) & 1 ) == 0		1198723	0		==			
ANR	1199002	BitAndExpression	( mine [ xx >> 3 ] >> ( x & 7 ) ) & 1		1198723	0		&			
ANR	1199003	ShiftExpression	mine [ xx >> 3 ] >> ( x & 7 )		1198723	0		>>			
ANR	1199004	ArrayIndexing	mine [ xx >> 3 ]		1198723	0					
ANR	1199005	Identifier	mine		1198723	0					
ANR	1199006	ShiftExpression	xx >> 3		1198723	1		>>			
ANR	1199007	Identifier	xx		1198723	0					
ANR	1199008	PrimaryExpression	3		1198723	1					
ANR	1199009	BitAndExpression	x & 7		1198723	1		&			
ANR	1199010	Identifier	x		1198723	0					
ANR	1199011	PrimaryExpression	7		1198723	1					
ANR	1199012	PrimaryExpression	1		1198723	1					
ANR	1199013	PrimaryExpression	0		1198723	1					
ANR	1199014	CompoundStatement		42:53:1302:1302	1198723	1					
ANR	1199015	SwitchStatement	switch ( depth )		1198723	0					
ANR	1199016	Condition	depth	701:28:26569:26573	1198723	0	True				
ANR	1199017	Identifier	depth		1198723	0					
ANR	1199018	CompoundStatement		44:20:1359:1359	1198723	1					
ANR	1199019	Label	case 8 :	703:20:26618:26624	1198723	0	True				
ANR	1199020	ExpressionStatement	* ptr ++ = blank	704:24:26650:26664	1198723	1	True				
ANR	1199021	AssignmentExpression	* ptr ++ = blank		1198723	0		=			
ANR	1199022	UnaryOperationExpression	* ptr ++		1198723	0					
ANR	1199023	UnaryOperator	*		1198723	0					
ANR	1199024	PostIncDecOperationExpression	ptr ++		1198723	1					
ANR	1199025	Identifier	ptr		1198723	0					
ANR	1199026	IncDec	++		1198723	1					
ANR	1199027	Identifier	blank		1198723	1					
ANR	1199028	Label	case 7 :	705:20:26686:26692	1198723	2	True				
ANR	1199029	ExpressionStatement	* ptr ++ = blank	706:24:26718:26732	1198723	3	True				
ANR	1199030	AssignmentExpression	* ptr ++ = blank		1198723	0		=			
ANR	1199031	UnaryOperationExpression	* ptr ++		1198723	0					
ANR	1199032	UnaryOperator	*		1198723	0					
ANR	1199033	PostIncDecOperationExpression	ptr ++		1198723	1					
ANR	1199034	Identifier	ptr		1198723	0					
ANR	1199035	IncDec	++		1198723	1					
ANR	1199036	Identifier	blank		1198723	1					
ANR	1199037	Label	case 6 :	707:20:26754:26760	1198723	4	True				
ANR	1199038	ExpressionStatement	* ptr ++ = blank	708:24:26786:26800	1198723	5	True				
ANR	1199039	AssignmentExpression	* ptr ++ = blank		1198723	0		=			
ANR	1199040	UnaryOperationExpression	* ptr ++		1198723	0					
ANR	1199041	UnaryOperator	*		1198723	0					
ANR	1199042	PostIncDecOperationExpression	ptr ++		1198723	1					
ANR	1199043	Identifier	ptr		1198723	0					
ANR	1199044	IncDec	++		1198723	1					
ANR	1199045	Identifier	blank		1198723	1					
ANR	1199046	Label	case 5 :	709:20:26822:26828	1198723	6	True				
ANR	1199047	ExpressionStatement	* ptr ++ = blank	710:24:26854:26868	1198723	7	True				
ANR	1199048	AssignmentExpression	* ptr ++ = blank		1198723	0		=			
ANR	1199049	UnaryOperationExpression	* ptr ++		1198723	0					
ANR	1199050	UnaryOperator	*		1198723	0					
ANR	1199051	PostIncDecOperationExpression	ptr ++		1198723	1					
ANR	1199052	Identifier	ptr		1198723	0					
ANR	1199053	IncDec	++		1198723	1					
ANR	1199054	Identifier	blank		1198723	1					
ANR	1199055	Label	case 4 :	711:20:26890:26896	1198723	8	True				
ANR	1199056	ExpressionStatement	* ptr ++ = blank	712:24:26922:26936	1198723	9	True				
ANR	1199057	AssignmentExpression	* ptr ++ = blank		1198723	0		=			
ANR	1199058	UnaryOperationExpression	* ptr ++		1198723	0					
ANR	1199059	UnaryOperator	*		1198723	0					
ANR	1199060	PostIncDecOperationExpression	ptr ++		1198723	1					
ANR	1199061	Identifier	ptr		1198723	0					
ANR	1199062	IncDec	++		1198723	1					
ANR	1199063	Identifier	blank		1198723	1					
ANR	1199064	Label	case 3 :	713:20:26958:26964	1198723	10	True				
ANR	1199065	ExpressionStatement	* ptr ++ = blank	714:24:26990:27004	1198723	11	True				
ANR	1199066	AssignmentExpression	* ptr ++ = blank		1198723	0		=			
ANR	1199067	UnaryOperationExpression	* ptr ++		1198723	0					
ANR	1199068	UnaryOperator	*		1198723	0					
ANR	1199069	PostIncDecOperationExpression	ptr ++		1198723	1					
ANR	1199070	Identifier	ptr		1198723	0					
ANR	1199071	IncDec	++		1198723	1					
ANR	1199072	Identifier	blank		1198723	1					
ANR	1199073	Label	case 2 :	715:20:27026:27032	1198723	12	True				
ANR	1199074	ExpressionStatement	* ptr ++ = blank	716:24:27058:27072	1198723	13	True				
ANR	1199075	AssignmentExpression	* ptr ++ = blank		1198723	0		=			
ANR	1199076	UnaryOperationExpression	* ptr ++		1198723	0					
ANR	1199077	UnaryOperator	*		1198723	0					
ANR	1199078	PostIncDecOperationExpression	ptr ++		1198723	1					
ANR	1199079	Identifier	ptr		1198723	0					
ANR	1199080	IncDec	++		1198723	1					
ANR	1199081	Identifier	blank		1198723	1					
ANR	1199082	Label	case 1 :	717:20:27094:27100	1198723	14	True				
ANR	1199083	ExpressionStatement	* ptr ++ = blank	718:24:27126:27140	1198723	15	True				
ANR	1199084	AssignmentExpression	* ptr ++ = blank		1198723	0		=			
ANR	1199085	UnaryOperationExpression	* ptr ++		1198723	0					
ANR	1199086	UnaryOperator	*		1198723	0					
ANR	1199087	PostIncDecOperationExpression	ptr ++		1198723	1					
ANR	1199088	Identifier	ptr		1198723	0					
ANR	1199089	IncDec	++		1198723	1					
ANR	1199090	Identifier	blank		1198723	1					
ANR	1199091	BreakStatement	break ;	719:24:27166:27171	1198723	16	True				
ANR	1199092	ElseStatement	else		1198723	0					
ANR	1199093	CompoundStatement		63:23:1981:1981	1198723	0					
ANR	1199094	ExpressionStatement	ptr += depth	722:20:27240:27252	1198723	0	True				
ANR	1199095	AssignmentExpression	ptr += depth		1198723	0		+=			
ANR	1199096	Identifier	ptr		1198723	0					
ANR	1199097	Identifier	depth		1198723	1					
ANR	1199098	ExpressionStatement	ptr += raster	725:12:27298:27311	1198723	4	True				
ANR	1199099	AssignmentExpression	ptr += raster		1198723	0		+=			
ANR	1199100	Identifier	ptr		1198723	0					
ANR	1199101	Identifier	raster		1198723	1					
ANR	1199102	ElseStatement	else		1198723	0					
ANR	1199103	CompoundStatement		69:11:2097:2097	1198723	0					
ANR	1199104	IfStatement	if ( depth / num_comps != 8 )		1198723	0					
ANR	1199105	Condition	depth / num_comps != 8	728:12:27348:27367	1198723	0	True				
ANR	1199106	EqualityExpression	depth / num_comps != 8		1198723	0		!=			
ANR	1199107	MultiplicativeExpression	depth / num_comps		1198723	0		/			
ANR	1199108	Identifier	depth		1198723	0					
ANR	1199109	Identifier	num_comps		1198723	1					
ANR	1199110	PrimaryExpression	8		1198723	1					
ANR	1199111	ExpressionStatement	return_error ( gs_error_rangecheck )	729:12:27382:27415	1198723	1	True				
ANR	1199112	CallExpression	return_error ( gs_error_rangecheck )		1198723	0					
ANR	1199113	Callee	return_error		1198723	0					
ANR	1199114	Identifier	return_error		1198723	0					
ANR	1199115	ArgumentList	gs_error_rangecheck		1198723	1					
ANR	1199116	Argument	gs_error_rangecheck		1198723	0					
ANR	1199117	Identifier	gs_error_rangecheck		1198723	0					
ANR	1199118	ForStatement	for ( y = 0 ; y < h ; y ++ )		1198723	1					
ANR	1199119	ForInit	y = 0 ;	730:13:27430:27435	1198723	0	True				
ANR	1199120	AssignmentExpression	y = 0		1198723	0		=			
ANR	1199121	Identifier	y		1198723	0					
ANR	1199122	PrimaryExpression	0		1198723	1					
ANR	1199123	Condition	y < h	730:20:27437:27441	1198723	1	True				
ANR	1199124	RelationalExpression	y < h		1198723	0		<			
ANR	1199125	Identifier	y		1198723	0					
ANR	1199126	Identifier	h		1198723	1					
ANR	1199127	PostIncDecOperationExpression	y ++	730:27:27444:27446	1198723	2	True				
ANR	1199128	Identifier	y		1198723	0					
ANR	1199129	IncDec	++		1198723	1					
ANR	1199130	CompoundStatement		75:12:2253:2263	1198723	3					
ANR	1199131	IdentifierDeclStatement	int c ;	732:12:27471:27476	1198723	0	True				
ANR	1199132	IdentifierDecl	c		1198723	0					
ANR	1199133	IdentifierDeclType	int		1198723	0					
ANR	1199134	Identifier	c		1198723	1					
ANR	1199135	IdentifierDeclStatement	byte * mine ;	733:12:27490:27500	1198723	1	True				
ANR	1199136	IdentifierDecl	* mine		1198723	0					
ANR	1199137	IdentifierDeclType	byte *		1198723	0					
ANR	1199138	Identifier	mine		1198723	1					
ANR	1199139	ExpressionStatement	"code = dev_proc ( mask , get_bits ) ( mask , y + y0 , min , & mine )"	734:12:27514:27569	1198723	2	True				
ANR	1199140	AssignmentExpression	"code = dev_proc ( mask , get_bits ) ( mask , y + y0 , min , & mine )"		1198723	0		=			
ANR	1199141	Identifier	code		1198723	0					
ANR	1199142	CallExpression	"dev_proc ( mask , get_bits ) ( mask , y + y0 , min , & mine )"		1198723	1					
ANR	1199143	Callee	"dev_proc ( mask , get_bits )"		1198723	0					
ANR	1199144	CallExpression	"dev_proc ( mask , get_bits )"		1198723	0					
ANR	1199145	Callee	dev_proc		1198723	0					
ANR	1199146	Identifier	dev_proc		1198723	0					
ANR	1199147	ArgumentList	mask		1198723	1					
ANR	1199148	Argument	mask		1198723	0					
ANR	1199149	Identifier	mask		1198723	0					
ANR	1199150	Argument	get_bits		1198723	1					
ANR	1199151	Identifier	get_bits		1198723	0					
ANR	1199152	ArgumentList	mask		1198723	1					
ANR	1199153	Argument	mask		1198723	0					
ANR	1199154	Identifier	mask		1198723	0					
ANR	1199155	Argument	y + y0		1198723	1					
ANR	1199156	AdditiveExpression	y + y0		1198723	0		+			
ANR	1199157	Identifier	y		1198723	0					
ANR	1199158	Identifier	y0		1198723	1					
ANR	1199159	Argument	min		1198723	2					
ANR	1199160	Identifier	min		1198723	0					
ANR	1199161	Argument	& mine		1198723	3					
ANR	1199162	UnaryOperationExpression	& mine		1198723	0					
ANR	1199163	UnaryOperator	&		1198723	0					
ANR	1199164	Identifier	mine		1198723	1					
ANR	1199165	IfStatement	if ( code < 0 )		1198723	3					
ANR	1199166	Condition	code < 0	735:16:27587:27594	1198723	0	True				
ANR	1199167	RelationalExpression	code < 0		1198723	0		<			
ANR	1199168	Identifier	code		1198723	0					
ANR	1199169	PrimaryExpression	0		1198723	1					
ANR	1199170	GotoStatement	goto fail ;	736:16:27613:27622	1198723	1	True				
ANR	1199171	Identifier	fail		1198723	0					
ANR	1199172	ForStatement	for ( c = 0 ; c < num_comps ; c ++ )		1198723	4					
ANR	1199173	ForInit	c = 0 ;	737:17:27641:27646	1198723	0	True				
ANR	1199174	AssignmentExpression	c = 0		1198723	0		=			
ANR	1199175	Identifier	c		1198723	0					
ANR	1199176	PrimaryExpression	0		1198723	1					
ANR	1199177	Condition	c < num_comps	737:24:27648:27660	1198723	1	True				
ANR	1199178	RelationalExpression	c < num_comps		1198723	0		<			
ANR	1199179	Identifier	c		1198723	0					
ANR	1199180	Identifier	num_comps		1198723	1					
ANR	1199181	PostIncDecOperationExpression	c ++	737:39:27663:27665	1198723	2	True				
ANR	1199182	Identifier	c		1198723	0					
ANR	1199183	IncDec	++		1198723	1					
ANR	1199184	CompoundStatement		80:12:2443:2443	1198723	3					
ANR	1199185	IfStatement	if ( p -> data [ c ] == NULL )		1198723	0					
ANR	1199186	Condition	p -> data [ c ] == NULL	739:20:27702:27719	1198723	0	True				
ANR	1199187	EqualityExpression	p -> data [ c ] == NULL		1198723	0		==			
ANR	1199188	ArrayIndexing	p -> data [ c ]		1198723	0					
ANR	1199189	PtrMemberAccess	p -> data		1198723	0					
ANR	1199190	Identifier	p		1198723	0					
ANR	1199191	Identifier	data		1198723	1					
ANR	1199192	Identifier	c		1198723	1					
ANR	1199193	Identifier	NULL		1198723	1					
ANR	1199194	ContinueStatement	continue ;	740:20:27742:27750	1198723	1	True				
ANR	1199195	ExpressionStatement	ptr = p -> data [ c ] + raster * y	741:16:27768:27797	1198723	1	True				
ANR	1199196	AssignmentExpression	ptr = p -> data [ c ] + raster * y		1198723	0		=			
ANR	1199197	Identifier	ptr		1198723	0					
ANR	1199198	AdditiveExpression	p -> data [ c ] + raster * y		1198723	1		+			
ANR	1199199	ArrayIndexing	p -> data [ c ]		1198723	0					
ANR	1199200	PtrMemberAccess	p -> data		1198723	0					
ANR	1199201	Identifier	p		1198723	0					
ANR	1199202	Identifier	data		1198723	1					
ANR	1199203	Identifier	c		1198723	1					
ANR	1199204	MultiplicativeExpression	raster * y		1198723	1		*			
ANR	1199205	Identifier	raster		1198723	0					
ANR	1199206	Identifier	y		1198723	1					
ANR	1199207	ForStatement	for ( x = 0 ; x < w ; x ++ )		1198723	2					
ANR	1199208	ForInit	x = 0 ;	742:21:27820:27825	1198723	0	True				
ANR	1199209	AssignmentExpression	x = 0		1198723	0		=			
ANR	1199210	Identifier	x		1198723	0					
ANR	1199211	PrimaryExpression	0		1198723	1					
ANR	1199212	Condition	x < w	742:28:27827:27831	1198723	1	True				
ANR	1199213	RelationalExpression	x < w		1198723	0		<			
ANR	1199214	Identifier	x		1198723	0					
ANR	1199215	Identifier	w		1198723	1					
ANR	1199216	PostIncDecOperationExpression	x ++	742:35:27834:27836	1198723	2	True				
ANR	1199217	Identifier	x		1198723	0					
ANR	1199218	IncDec	++		1198723	1					
ANR	1199219	CompoundStatement		86:20:2640:2653	1198723	3					
ANR	1199220	IdentifierDeclStatement	int xx = x + x0 ;	744:20:27877:27890	1198723	0	True				
ANR	1199221	IdentifierDecl	xx = x + x0		1198723	0					
ANR	1199222	IdentifierDeclType	int		1198723	0					
ANR	1199223	Identifier	xx		1198723	1					
ANR	1199224	AssignmentExpression	xx = x + x0		1198723	2		=			
ANR	1199225	Identifier	xx		1198723	0					
ANR	1199226	AdditiveExpression	x + x0		1198723	1		+			
ANR	1199227	Identifier	x		1198723	0					
ANR	1199228	Identifier	x0		1198723	1					
ANR	1199229	IfStatement	if ( ( ( mine [ xx >> 3 ] >> ( x & 7 ) ) & 1 ) == 0 )		1198723	1					
ANR	1199230	Condition	( ( mine [ xx >> 3 ] >> ( x & 7 ) ) & 1 ) == 0	745:24:27916:27946	1198723	0	True				
ANR	1199231	EqualityExpression	( ( mine [ xx >> 3 ] >> ( x & 7 ) ) & 1 ) == 0		1198723	0		==			
ANR	1199232	BitAndExpression	( mine [ xx >> 3 ] >> ( x & 7 ) ) & 1		1198723	0		&			
ANR	1199233	ShiftExpression	mine [ xx >> 3 ] >> ( x & 7 )		1198723	0		>>			
ANR	1199234	ArrayIndexing	mine [ xx >> 3 ]		1198723	0					
ANR	1199235	Identifier	mine		1198723	0					
ANR	1199236	ShiftExpression	xx >> 3		1198723	1		>>			
ANR	1199237	Identifier	xx		1198723	0					
ANR	1199238	PrimaryExpression	3		1198723	1					
ANR	1199239	BitAndExpression	x & 7		1198723	1		&			
ANR	1199240	Identifier	x		1198723	0					
ANR	1199241	PrimaryExpression	7		1198723	1					
ANR	1199242	PrimaryExpression	1		1198723	1					
ANR	1199243	PrimaryExpression	0		1198723	1					
ANR	1199244	CompoundStatement		87:57:2712:2712	1198723	1					
ANR	1199245	ExpressionStatement	* ptr ++ = blank	746:24:27975:27989	1198723	0	True				
ANR	1199246	AssignmentExpression	* ptr ++ = blank		1198723	0		=			
ANR	1199247	UnaryOperationExpression	* ptr ++		1198723	0					
ANR	1199248	UnaryOperator	*		1198723	0					
ANR	1199249	PostIncDecOperationExpression	ptr ++		1198723	1					
ANR	1199250	Identifier	ptr		1198723	0					
ANR	1199251	IncDec	++		1198723	1					
ANR	1199252	Identifier	blank		1198723	1					
ANR	1199253	ElseStatement	else		1198723	0					
ANR	1199254	CompoundStatement		89:27:2781:2781	1198723	0					
ANR	1199255	ExpressionStatement	ptr ++	748:24:28044:28049	1198723	0	True				
ANR	1199256	PostIncDecOperationExpression	ptr ++		1198723	0					
ANR	1199257	Identifier	ptr		1198723	0					
ANR	1199258	IncDec	++		1198723	1					
ANR	1199259	Label	fail :	755:0:28122:28126	1198723	16	True				
ANR	1199260	Identifier	fail		1198723	0					
ANR	1199261	ExpressionStatement	"gs_free_object ( mask -> memory , min , ""blank_unmasked_bits"" )"	756:4:28132:28188	1198723	17	True				
ANR	1199262	CallExpression	"gs_free_object ( mask -> memory , min , ""blank_unmasked_bits"" )"		1198723	0					
ANR	1199263	Callee	gs_free_object		1198723	0					
ANR	1199264	Identifier	gs_free_object		1198723	0					
ANR	1199265	ArgumentList	mask -> memory		1198723	1					
ANR	1199266	Argument	mask -> memory		1198723	0					
ANR	1199267	PtrMemberAccess	mask -> memory		1198723	0					
ANR	1199268	Identifier	mask		1198723	0					
ANR	1199269	Identifier	memory		1198723	1					
ANR	1199270	Argument	min		1198723	1					
ANR	1199271	Identifier	min		1198723	0					
ANR	1199272	Argument	"""blank_unmasked_bits"""		1198723	2					
ANR	1199273	PrimaryExpression	"""blank_unmasked_bits"""		1198723	0					
ANR	1199274	ReturnStatement	return code ;	758:4:28195:28206	1198723	18	True				
ANR	1199275	Identifier	code		1198723	0					
ANR	1199276	ReturnType	static int		1198723	1					
ANR	1199277	Identifier	blank_unmasked_bits		1198723	2					
ANR	1199278	ParameterList	"gx_device * mask , int polarity , int num_comps , int depth , const gs_int_rect * prect , gs_get_bits_params_t * p"		1198723	3					
ANR	1199279	Parameter	gx_device * mask	653:20:25027:25042	1198723	0	True				
ANR	1199280	ParameterType	gx_device *		1198723	0					
ANR	1199281	Identifier	mask		1198723	1					
ANR	1199282	Parameter	int polarity	654:20:25065:25076	1198723	1	True				
ANR	1199283	ParameterType	int		1198723	0					
ANR	1199284	Identifier	polarity		1198723	1					
ANR	1199285	Parameter	int num_comps	655:20:25099:25111	1198723	2	True				
ANR	1199286	ParameterType	int		1198723	0					
ANR	1199287	Identifier	num_comps		1198723	1					
ANR	1199288	Parameter	int depth	656:20:25134:25142	1198723	3	True				
ANR	1199289	ParameterType	int		1198723	0					
ANR	1199290	Identifier	depth		1198723	1					
ANR	1199291	Parameter	const gs_int_rect * prect	657:20:25165:25188	1198723	4	True				
ANR	1199292	ParameterType	const gs_int_rect *		1198723	0					
ANR	1199293	Identifier	prect		1198723	1					
ANR	1199294	Parameter	gs_get_bits_params_t * p	658:20:25211:25233	1198723	5	True				
ANR	1199295	ParameterType	gs_get_bits_params_t *		1198723	0					
ANR	1199296	Identifier	p		1198723	1					
ANR	1199297	CFGEntryNode	ENTRY		1198723		True				
ANR	1199298	CFGExitNode	EXIT		1198723		True				
ANR	1199299	Symbol	xx		1198723						
ANR	1199300	Symbol	prect -> q . y		1198723						
ANR	1199301	Symbol	prect -> q . x		1198723						
ANR	1199302	Symbol	* mask		1198723						
ANR	1199303	Symbol	gs_error_rangecheck		1198723						
ANR	1199304	Symbol	get_bits		1198723						
ANR	1199305	Symbol	prect		1198723						
ANR	1199306	Symbol	GX_CINFO_POLARITY_ADDITIVE		1198723						
ANR	1199307	Symbol	* p -> data		1198723						
ANR	1199308	Symbol	prect -> p . x		1198723						
ANR	1199309	Symbol	GB_ALPHA_NONE		1198723						
ANR	1199310	Symbol	prect -> p . y		1198723						
ANR	1199311	Symbol	* prect		1198723						
ANR	1199312	Symbol	polarity		1198723						
ANR	1199313	Symbol	GB_ALIGN_STANDARD		1198723						
ANR	1199314	Symbol	NULL		1198723						
ANR	1199315	Symbol	* xx		1198723						
ANR	1199316	Symbol	* mine		1198723						
ANR	1199317	Symbol	p -> options		1198723						
ANR	1199318	Symbol	GB_OFFSET_0		1198723						
ANR	1199319	Symbol	required_options		1198723						
ANR	1199320	Symbol	p -> raster		1198723						
ANR	1199321	Symbol	x0		1198723						
ANR	1199322	Symbol	code		1198723						
ANR	1199323	Symbol	blank		1198723						
ANR	1199324	Symbol	& mine		1198723						
ANR	1199325	Symbol	p -> data		1198723						
ANR	1199326	Symbol	prect -> p		1198723						
ANR	1199327	Symbol	prect -> q		1198723						
ANR	1199328	Symbol	GB_COLORS_NATIVE		1198723						
ANR	1199329	Symbol	min		1198723						
ANR	1199330	Symbol	dev_proc		1198723						
ANR	1199331	Symbol	num_comps		1198723						
ANR	1199332	Symbol	y0		1198723						
ANR	1199333	Symbol	* * p		1198723						
ANR	1199334	Symbol	mask -> memory		1198723						
ANR	1199335	Symbol	GB_PACKING_CHUNKY		1198723						
ANR	1199336	Symbol	mask		1198723						
ANR	1199337	Symbol	mine		1198723						
ANR	1199338	Symbol	gs_alloc_bytes		1198723						
ANR	1199339	Symbol	c		1198723						
ANR	1199340	Symbol	* ptr ++		1198723						
ANR	1199341	Symbol	raster		1198723						
ANR	1199342	Symbol	h		1198723						
ANR	1199343	Symbol	GB_RASTER_STANDARD		1198723						
ANR	1199344	Symbol	* c		1198723						
ANR	1199345	Symbol	GB_RETURN_COPY		1198723						
ANR	1199346	Symbol	ptr		1198723						
ANR	1199347	Symbol	p		1198723						
ANR	1199348	Symbol	gs_error_VMerror		1198723						
ANR	1199349	Symbol	depth		1198723						
ANR	1199350	Symbol	w		1198723						
ANR	1199351	Symbol	x		1198723						
ANR	1199352	Symbol	y		1198723						
ANR	1199353	Symbol	* p		1198723						
ANR	1199354	Function	pattern_accum_get_bits_rectangle	763:0:28301:29678							
ANR	1199355	FunctionDef	"pattern_accum_get_bits_rectangle (gx_device * dev , const gs_int_rect * prect , gs_get_bits_params_t * params , gs_int_rect * * unread)"		1199354	0					
ANR	1199356	CompoundStatement		766:0:28466:29678	1199354	0					
ANR	1199357	Statement	gx_device_pattern_accum	767:4:28472:28494	1199354	0	True				
ANR	1199358	Statement	*	767:28:28496:28496	1199354	1	True				
ANR	1199359	Statement	const	767:29:28497:28501	1199354	2	True				
ANR	1199360	ExpressionStatement	padev = ( gx_device_pattern_accum * ) dev	767:35:28503:28542	1199354	3	True				
ANR	1199361	AssignmentExpression	padev = ( gx_device_pattern_accum * ) dev		1199354	0		=			
ANR	1199362	Identifier	padev		1199354	0					
ANR	1199363	CastExpression	( gx_device_pattern_accum * ) dev		1199354	1					
ANR	1199364	CastTarget	gx_device_pattern_accum *		1199354	0					
ANR	1199365	Identifier	dev		1199354	1					
ANR	1199366	IdentifierDeclStatement	int code ;	768:4:28548:28556	1199354	4	True				
ANR	1199367	IdentifierDecl	code		1199354	0					
ANR	1199368	IdentifierDeclType	int		1199354	0					
ANR	1199369	Identifier	code		1199354	1					
ANR	1199370	IdentifierDeclStatement	gs_get_bits_params_t params2 = * params ;	769:4:28562:28600	1199354	5	True				
ANR	1199371	IdentifierDecl	params2 = * params		1199354	0					
ANR	1199372	IdentifierDeclType	gs_get_bits_params_t		1199354	0					
ANR	1199373	Identifier	params2		1199354	1					
ANR	1199374	AssignmentExpression	params2 = * params		1199354	2		=			
ANR	1199375	Identifier	params2		1199354	0					
ANR	1199376	UnaryOperationExpression	* params		1199354	1					
ANR	1199377	UnaryOperator	*		1199354	0					
ANR	1199378	Identifier	params		1199354	1					
ANR	1199379	IfStatement	if ( padev -> bits )		1199354	6					
ANR	1199380	Condition	padev -> bits	771:8:28611:28621	1199354	0	True				
ANR	1199381	PtrMemberAccess	padev -> bits		1199354	0					
ANR	1199382	Identifier	padev		1199354	0					
ANR	1199383	Identifier	bits		1199354	1					
ANR	1199384	CompoundStatement		6:21:157:157	1199354	1					
ANR	1199385	IfStatement	if ( padev -> mask )		1199354	0					
ANR	1199386	Condition	padev -> mask	772:12:28638:28648	1199354	0	True				
ANR	1199387	PtrMemberAccess	padev -> mask		1199354	0					
ANR	1199388	Identifier	padev		1199354	0					
ANR	1199389	Identifier	mask		1199354	1					
ANR	1199390	ExpressionStatement	params2 . options &= ~GB_RETURN_POINTER	773:12:28663:28700	1199354	1	True				
ANR	1199391	AssignmentExpression	params2 . options &= ~GB_RETURN_POINTER		1199354	0		&=			
ANR	1199392	MemberAccess	params2 . options		1199354	0					
ANR	1199393	Identifier	params2		1199354	0					
ANR	1199394	Identifier	options		1199354	1					
ANR	1199395	Identifier	~GB_RETURN_POINTER		1199354	1					
ANR	1199396	ExpressionStatement	"code = ( * dev_proc ( padev -> target , get_bits_rectangle ) ) ( padev -> target , prect , & params2 , unread )"	774:8:28710:28816	1199354	1	True				
ANR	1199397	AssignmentExpression	"code = ( * dev_proc ( padev -> target , get_bits_rectangle ) ) ( padev -> target , prect , & params2 , unread )"		1199354	0		=			
ANR	1199398	Identifier	code		1199354	0					
ANR	1199399	CallExpression	"( * dev_proc ( padev -> target , get_bits_rectangle ) ) ( padev -> target , prect , & params2 , unread )"		1199354	1					
ANR	1199400	Callee	"* dev_proc ( padev -> target , get_bits_rectangle )"		1199354	0					
ANR	1199401	UnaryOperationExpression	"* dev_proc ( padev -> target , get_bits_rectangle )"		1199354	0					
ANR	1199402	UnaryOperator	*		1199354	0					
ANR	1199403	CallExpression	"dev_proc ( padev -> target , get_bits_rectangle )"		1199354	1					
ANR	1199404	Callee	dev_proc		1199354	0					
ANR	1199405	Identifier	dev_proc		1199354	0					
ANR	1199406	ArgumentList	padev -> target		1199354	1					
ANR	1199407	Argument	padev -> target		1199354	0					
ANR	1199408	PtrMemberAccess	padev -> target		1199354	0					
ANR	1199409	Identifier	padev		1199354	0					
ANR	1199410	Identifier	target		1199354	1					
ANR	1199411	Argument	get_bits_rectangle		1199354	1					
ANR	1199412	Identifier	get_bits_rectangle		1199354	0					
ANR	1199413	ArgumentList	padev -> target		1199354	1					
ANR	1199414	Argument	padev -> target		1199354	0					
ANR	1199415	PtrMemberAccess	padev -> target		1199354	0					
ANR	1199416	Identifier	padev		1199354	0					
ANR	1199417	Identifier	target		1199354	1					
ANR	1199418	Argument	prect		1199354	1					
ANR	1199419	Identifier	prect		1199354	0					
ANR	1199420	Argument	& params2		1199354	2					
ANR	1199421	UnaryOperationExpression	& params2		1199354	0					
ANR	1199422	UnaryOperator	&		1199354	0					
ANR	1199423	Identifier	params2		1199354	1					
ANR	1199424	Argument	unread		1199354	3					
ANR	1199425	Identifier	unread		1199354	0					
ANR	1199426	IfStatement	if ( code >= 0 && padev -> mask )		1199354	2					
ANR	1199427	Condition	code >= 0 && padev -> mask	783:12:29217:29240	1199354	0	True				
ANR	1199428	AndExpression	code >= 0 && padev -> mask		1199354	0		&&			
ANR	1199429	RelationalExpression	code >= 0		1199354	0		>=			
ANR	1199430	Identifier	code		1199354	0					
ANR	1199431	PrimaryExpression	0		1199354	1					
ANR	1199432	PtrMemberAccess	padev -> mask		1199354	1					
ANR	1199433	Identifier	padev		1199354	0					
ANR	1199434	Identifier	mask		1199354	1					
ANR	1199435	ExpressionStatement	"code = blank_unmasked_bits ( ( gx_device * ) padev -> mask , padev -> target -> color_info . polarity , padev -> target -> color_info . num_components , padev -> target -> color_info . depth , prect , & params2 )"	784:12:29255:29591	1199354	1	True				
ANR	1199436	AssignmentExpression	"code = blank_unmasked_bits ( ( gx_device * ) padev -> mask , padev -> target -> color_info . polarity , padev -> target -> color_info . num_components , padev -> target -> color_info . depth , prect , & params2 )"		1199354	0		=			
ANR	1199437	Identifier	code		1199354	0					
ANR	1199438	CallExpression	"blank_unmasked_bits ( ( gx_device * ) padev -> mask , padev -> target -> color_info . polarity , padev -> target -> color_info . num_components , padev -> target -> color_info . depth , prect , & params2 )"		1199354	1					
ANR	1199439	Callee	blank_unmasked_bits		1199354	0					
ANR	1199440	Identifier	blank_unmasked_bits		1199354	0					
ANR	1199441	ArgumentList	( gx_device * ) padev -> mask		1199354	1					
ANR	1199442	Argument	( gx_device * ) padev -> mask		1199354	0					
ANR	1199443	CastExpression	( gx_device * ) padev -> mask		1199354	0					
ANR	1199444	CastTarget	gx_device *		1199354	0					
ANR	1199445	PtrMemberAccess	padev -> mask		1199354	1					
ANR	1199446	Identifier	padev		1199354	0					
ANR	1199447	Identifier	mask		1199354	1					
ANR	1199448	Argument	padev -> target -> color_info . polarity		1199354	1					
ANR	1199449	MemberAccess	padev -> target -> color_info . polarity		1199354	0					
ANR	1199450	PtrMemberAccess	padev -> target -> color_info		1199354	0					
ANR	1199451	PtrMemberAccess	padev -> target		1199354	0					
ANR	1199452	Identifier	padev		1199354	0					
ANR	1199453	Identifier	target		1199354	1					
ANR	1199454	Identifier	color_info		1199354	1					
ANR	1199455	Identifier	polarity		1199354	1					
ANR	1199456	Argument	padev -> target -> color_info . num_components		1199354	2					
ANR	1199457	MemberAccess	padev -> target -> color_info . num_components		1199354	0					
ANR	1199458	PtrMemberAccess	padev -> target -> color_info		1199354	0					
ANR	1199459	PtrMemberAccess	padev -> target		1199354	0					
ANR	1199460	Identifier	padev		1199354	0					
ANR	1199461	Identifier	target		1199354	1					
ANR	1199462	Identifier	color_info		1199354	1					
ANR	1199463	Identifier	num_components		1199354	1					
ANR	1199464	Argument	padev -> target -> color_info . depth		1199354	3					
ANR	1199465	MemberAccess	padev -> target -> color_info . depth		1199354	0					
ANR	1199466	PtrMemberAccess	padev -> target -> color_info		1199354	0					
ANR	1199467	PtrMemberAccess	padev -> target		1199354	0					
ANR	1199468	Identifier	padev		1199354	0					
ANR	1199469	Identifier	target		1199354	1					
ANR	1199470	Identifier	color_info		1199354	1					
ANR	1199471	Identifier	depth		1199354	1					
ANR	1199472	Argument	prect		1199354	4					
ANR	1199473	Identifier	prect		1199354	0					
ANR	1199474	Argument	& params2		1199354	5					
ANR	1199475	UnaryOperationExpression	& params2		1199354	0					
ANR	1199476	UnaryOperator	&		1199354	0					
ANR	1199477	Identifier	params2		1199354	1					
ANR	1199478	ReturnStatement	return code ;	789:8:29601:29612	1199354	3	True				
ANR	1199479	Identifier	code		1199354	0					
ANR	1199480	ExpressionStatement	return_error ( gs_error_Fatal )	792:4:29625:29653	1199354	7	True				
ANR	1199481	CallExpression	return_error ( gs_error_Fatal )		1199354	0					
ANR	1199482	Callee	return_error		1199354	0					
ANR	1199483	Identifier	return_error		1199354	0					
ANR	1199484	ArgumentList	gs_error_Fatal		1199354	1					
ANR	1199485	Argument	gs_error_Fatal		1199354	0					
ANR	1199486	Identifier	gs_error_Fatal		1199354	0					
ANR	1199487	ReturnType	static int		1199354	1					
ANR	1199488	Identifier	pattern_accum_get_bits_rectangle		1199354	2					
ANR	1199489	ParameterList	"gx_device * dev , const gs_int_rect * prect , gs_get_bits_params_t * params , gs_int_rect * * unread"		1199354	3					
ANR	1199490	Parameter	gx_device * dev	764:33:28345:28359	1199354	0	True				
ANR	1199491	ParameterType	gx_device *		1199354	0					
ANR	1199492	Identifier	dev		1199354	1					
ANR	1199493	Parameter	const gs_int_rect * prect	764:50:28362:28386	1199354	1	True				
ANR	1199494	ParameterType	const gs_int_rect *		1199354	0					
ANR	1199495	Identifier	prect		1199354	1					
ANR	1199496	Parameter	gs_get_bits_params_t * params	765:23:28412:28440	1199354	2	True				
ANR	1199497	ParameterType	gs_get_bits_params_t *		1199354	0					
ANR	1199498	Identifier	params		1199354	1					
ANR	1199499	Parameter	gs_int_rect * * unread	765:54:28443:28463	1199354	3	True				
ANR	1199500	ParameterType	gs_int_rect * *		1199354	0					
ANR	1199501	Identifier	unread		1199354	1					
ANR	1199502	CFGEntryNode	ENTRY		1199354		True				
ANR	1199503	CFGExitNode	EXIT		1199354		True				
ANR	1199504	Symbol	* * padev		1199354						
ANR	1199505	Symbol	padev -> mask		1199354						
ANR	1199506	Symbol	code		1199354						
ANR	1199507	Symbol	unread		1199354						
ANR	1199508	Symbol	params2 . options		1199354						
ANR	1199509	Symbol	* dev_proc		1199354						
ANR	1199510	Symbol	prect		1199354						
ANR	1199511	Symbol	get_bits_rectangle		1199354						
ANR	1199512	Symbol	padev -> target -> color_info . polarity		1199354						
ANR	1199513	Symbol	padev		1199354						
ANR	1199514	Symbol	dev		1199354						
ANR	1199515	Symbol	~GB_RETURN_POINTER		1199354						
ANR	1199516	Symbol	dev_proc		1199354						
ANR	1199517	Symbol	params2		1199354						
ANR	1199518	Symbol	padev -> target -> color_info . num_components		1199354						
ANR	1199519	Symbol	* padev -> target		1199354						
ANR	1199520	Symbol	* params		1199354						
ANR	1199521	Symbol	padev -> target -> color_info		1199354						
ANR	1199522	Symbol	gs_error_Fatal		1199354						
ANR	1199523	Symbol	padev -> bits		1199354						
ANR	1199524	Symbol	params		1199354						
ANR	1199525	Symbol	blank_unmasked_bits		1199354						
ANR	1199526	Symbol	& params2		1199354						
ANR	1199527	Symbol	padev -> target -> color_info . depth		1199354						
ANR	1199528	Symbol	* padev		1199354						
ANR	1199529	Symbol	"* dev_proc ( padev -> target , get_bits_rectangle )"		1199354						
ANR	1199530	Symbol	padev -> target		1199354						
ANR	1199531	Function	pattern_cache_choose_all	798:0:29772:29868							
ANR	1199532	FunctionDef	"pattern_cache_choose_all (gx_color_tile * ctile , void * proc_data)"		1199531	0					
ANR	1199533	CompoundStatement		800:0:29849:29868	1199531	0					
ANR	1199534	ReturnStatement	return true ;	801:4:29855:29866	1199531	0	True				
ANR	1199535	Identifier	true		1199531	0					
ANR	1199536	ReturnType	static bool		1199531	1					
ANR	1199537	Identifier	pattern_cache_choose_all		1199531	2					
ANR	1199538	ParameterList	"gx_color_tile * ctile , void * proc_data"		1199531	3					
ANR	1199539	Parameter	gx_color_tile * ctile	799:25:29809:29829	1199531	0	True				
ANR	1199540	ParameterType	gx_color_tile *		1199531	0					
ANR	1199541	Identifier	ctile		1199531	1					
ANR	1199542	Parameter	void * proc_data	799:48:29832:29846	1199531	1	True				
ANR	1199543	ParameterType	void *		1199531	0					
ANR	1199544	Identifier	proc_data		1199531	1					
ANR	1199545	CFGEntryNode	ENTRY		1199531		True				
ANR	1199546	CFGExitNode	EXIT		1199531		True				
ANR	1199547	Symbol	proc_data		1199531						
ANR	1199548	Symbol	ctile		1199531						
ANR	1199549	Symbol	true		1199531						
ANR	1199550	Function	pattern_cache_free_all	803:0:29870:30003							
ANR	1199551	FunctionDef	pattern_cache_free_all (gx_pattern_cache * pcache)		1199550	0					
ANR	1199552	CompoundStatement		805:0:29932:30003	1199550	0					
ANR	1199553	ExpressionStatement	"gx_pattern_cache_winnow ( pcache , pattern_cache_choose_all , NULL )"	806:4:29938:30001	1199550	0	True				
ANR	1199554	CallExpression	"gx_pattern_cache_winnow ( pcache , pattern_cache_choose_all , NULL )"		1199550	0					
ANR	1199555	Callee	gx_pattern_cache_winnow		1199550	0					
ANR	1199556	Identifier	gx_pattern_cache_winnow		1199550	0					
ANR	1199557	ArgumentList	pcache		1199550	1					
ANR	1199558	Argument	pcache		1199550	0					
ANR	1199559	Identifier	pcache		1199550	0					
ANR	1199560	Argument	pattern_cache_choose_all		1199550	1					
ANR	1199561	Identifier	pattern_cache_choose_all		1199550	0					
ANR	1199562	Argument	NULL		1199550	2					
ANR	1199563	Identifier	NULL		1199550	0					
ANR	1199564	ReturnType	static void		1199550	1					
ANR	1199565	Identifier	pattern_cache_free_all		1199550	2					
ANR	1199566	ParameterList	gx_pattern_cache * pcache		1199550	3					
ANR	1199567	Parameter	gx_pattern_cache * pcache	804:23:29905:29929	1199550	0	True				
ANR	1199568	ParameterType	gx_pattern_cache *		1199550	0					
ANR	1199569	Identifier	pcache		1199550	1					
ANR	1199570	CFGEntryNode	ENTRY		1199550		True				
ANR	1199571	CFGExitNode	EXIT		1199550		True				
ANR	1199572	Symbol	pattern_cache_choose_all		1199550						
ANR	1199573	Symbol	NULL		1199550						
ANR	1199574	Symbol	pcache		1199550						
ANR	1199575	Function	gx_pattern_alloc_cache	810:0:30038:32037							
ANR	1199576	FunctionDef	"gx_pattern_alloc_cache (gs_memory_t * mem , uint num_tiles , ulong max_bits)"		1199575	0					
ANR	1199577	CompoundStatement		812:0:30131:32037	1199575	0					
ANR	1199578	IdentifierDeclStatement	"gx_pattern_cache * pcache = gs_alloc_struct ( mem , gx_pattern_cache , & st_pattern_cache , ""gx_pattern_alloc_cache(struct)"" ) ;"	813:4:30137:30279	1199575	0	True				
ANR	1199579	IdentifierDecl	"* pcache = gs_alloc_struct ( mem , gx_pattern_cache , & st_pattern_cache , ""gx_pattern_alloc_cache(struct)"" )"		1199575	0					
ANR	1199580	IdentifierDeclType	gx_pattern_cache *		1199575	0					
ANR	1199581	Identifier	pcache		1199575	1					
ANR	1199582	AssignmentExpression	"* pcache = gs_alloc_struct ( mem , gx_pattern_cache , & st_pattern_cache , ""gx_pattern_alloc_cache(struct)"" )"		1199575	2		=			
ANR	1199583	Identifier	pcache		1199575	0					
ANR	1199584	CallExpression	"gs_alloc_struct ( mem , gx_pattern_cache , & st_pattern_cache , ""gx_pattern_alloc_cache(struct)"" )"		1199575	1					
ANR	1199585	Callee	gs_alloc_struct		1199575	0					
ANR	1199586	Identifier	gs_alloc_struct		1199575	0					
ANR	1199587	ArgumentList	mem		1199575	1					
ANR	1199588	Argument	mem		1199575	0					
ANR	1199589	Identifier	mem		1199575	0					
ANR	1199590	Argument	gx_pattern_cache		1199575	1					
ANR	1199591	Identifier	gx_pattern_cache		1199575	0					
ANR	1199592	Argument	& st_pattern_cache		1199575	2					
ANR	1199593	UnaryOperationExpression	& st_pattern_cache		1199575	0					
ANR	1199594	UnaryOperator	&		1199575	0					
ANR	1199595	Identifier	st_pattern_cache		1199575	1					
ANR	1199596	Argument	"""gx_pattern_alloc_cache(struct)"""		1199575	3					
ANR	1199597	PrimaryExpression	"""gx_pattern_alloc_cache(struct)"""		1199575	0					
ANR	1199598	IdentifierDeclStatement	"gx_color_tile * tiles = gs_alloc_struct_array ( mem , num_tiles , gx_color_tile , & st_color_tile_element , ""gx_pattern_alloc_cache(tiles)"" ) ;"	816:4:30285:30473	1199575	1	True				
ANR	1199599	IdentifierDecl	"* tiles = gs_alloc_struct_array ( mem , num_tiles , gx_color_tile , & st_color_tile_element , ""gx_pattern_alloc_cache(tiles)"" )"		1199575	0					
ANR	1199600	IdentifierDeclType	gx_color_tile *		1199575	0					
ANR	1199601	Identifier	tiles		1199575	1					
ANR	1199602	AssignmentExpression	"* tiles = gs_alloc_struct_array ( mem , num_tiles , gx_color_tile , & st_color_tile_element , ""gx_pattern_alloc_cache(tiles)"" )"		1199575	2		=			
ANR	1199603	Identifier	tiles		1199575	0					
ANR	1199604	CallExpression	"gs_alloc_struct_array ( mem , num_tiles , gx_color_tile , & st_color_tile_element , ""gx_pattern_alloc_cache(tiles)"" )"		1199575	1					
ANR	1199605	Callee	gs_alloc_struct_array		1199575	0					
ANR	1199606	Identifier	gs_alloc_struct_array		1199575	0					
ANR	1199607	ArgumentList	mem		1199575	1					
ANR	1199608	Argument	mem		1199575	0					
ANR	1199609	Identifier	mem		1199575	0					
ANR	1199610	Argument	num_tiles		1199575	1					
ANR	1199611	Identifier	num_tiles		1199575	0					
ANR	1199612	Argument	gx_color_tile		1199575	2					
ANR	1199613	Identifier	gx_color_tile		1199575	0					
ANR	1199614	Argument	& st_color_tile_element		1199575	3					
ANR	1199615	UnaryOperationExpression	& st_color_tile_element		1199575	0					
ANR	1199616	UnaryOperator	&		1199575	0					
ANR	1199617	Identifier	st_color_tile_element		1199575	1					
ANR	1199618	Argument	"""gx_pattern_alloc_cache(tiles)"""		1199575	4					
ANR	1199619	PrimaryExpression	"""gx_pattern_alloc_cache(tiles)"""		1199575	0					
ANR	1199620	IdentifierDeclStatement	uint i ;	820:4:30479:30485	1199575	2	True				
ANR	1199621	IdentifierDecl	i		1199575	0					
ANR	1199622	IdentifierDeclType	uint		1199575	0					
ANR	1199623	Identifier	i		1199575	1					
ANR	1199624	IfStatement	if ( pcache == 0 || tiles == 0 )		1199575	3					
ANR	1199625	Condition	pcache == 0 || tiles == 0	822:8:30496:30520	1199575	0	True				
ANR	1199626	OrExpression	pcache == 0 || tiles == 0		1199575	0		||			
ANR	1199627	EqualityExpression	pcache == 0		1199575	0		==			
ANR	1199628	Identifier	pcache		1199575	0					
ANR	1199629	PrimaryExpression	0		1199575	1					
ANR	1199630	EqualityExpression	tiles == 0		1199575	1		==			
ANR	1199631	Identifier	tiles		1199575	0					
ANR	1199632	PrimaryExpression	0		1199575	1					
ANR	1199633	CompoundStatement		11:35:391:391	1199575	1					
ANR	1199634	ExpressionStatement	"gs_free_object ( mem , tiles , ""gx_pattern_alloc_cache(tiles)"" )"	823:8:30533:30592	1199575	0	True				
ANR	1199635	CallExpression	"gs_free_object ( mem , tiles , ""gx_pattern_alloc_cache(tiles)"" )"		1199575	0					
ANR	1199636	Callee	gs_free_object		1199575	0					
ANR	1199637	Identifier	gs_free_object		1199575	0					
ANR	1199638	ArgumentList	mem		1199575	1					
ANR	1199639	Argument	mem		1199575	0					
ANR	1199640	Identifier	mem		1199575	0					
ANR	1199641	Argument	tiles		1199575	1					
ANR	1199642	Identifier	tiles		1199575	0					
ANR	1199643	Argument	"""gx_pattern_alloc_cache(tiles)"""		1199575	2					
ANR	1199644	PrimaryExpression	"""gx_pattern_alloc_cache(tiles)"""		1199575	0					
ANR	1199645	ExpressionStatement	"gs_free_object ( mem , pcache , ""gx_pattern_alloc_cache(struct)"" )"	824:8:30602:30663	1199575	1	True				
ANR	1199646	CallExpression	"gs_free_object ( mem , pcache , ""gx_pattern_alloc_cache(struct)"" )"		1199575	0					
ANR	1199647	Callee	gs_free_object		1199575	0					
ANR	1199648	Identifier	gs_free_object		1199575	0					
ANR	1199649	ArgumentList	mem		1199575	1					
ANR	1199650	Argument	mem		1199575	0					
ANR	1199651	Identifier	mem		1199575	0					
ANR	1199652	Argument	pcache		1199575	1					
ANR	1199653	Identifier	pcache		1199575	0					
ANR	1199654	Argument	"""gx_pattern_alloc_cache(struct)"""		1199575	2					
ANR	1199655	PrimaryExpression	"""gx_pattern_alloc_cache(struct)"""		1199575	0					
ANR	1199656	ReturnStatement	return 0 ;	825:8:30673:30681	1199575	2	True				
ANR	1199657	PrimaryExpression	0		1199575	0					
ANR	1199658	ExpressionStatement	pcache -> memory = mem	827:4:30693:30713	1199575	4	True				
ANR	1199659	AssignmentExpression	pcache -> memory = mem		1199575	0		=			
ANR	1199660	PtrMemberAccess	pcache -> memory		1199575	0					
ANR	1199661	Identifier	pcache		1199575	0					
ANR	1199662	Identifier	memory		1199575	1					
ANR	1199663	Identifier	mem		1199575	1					
ANR	1199664	ExpressionStatement	pcache -> tiles = tiles	828:4:30719:30740	1199575	5	True				
ANR	1199665	AssignmentExpression	pcache -> tiles = tiles		1199575	0		=			
ANR	1199666	PtrMemberAccess	pcache -> tiles		1199575	0					
ANR	1199667	Identifier	pcache		1199575	0					
ANR	1199668	Identifier	tiles		1199575	1					
ANR	1199669	Identifier	tiles		1199575	1					
ANR	1199670	ExpressionStatement	pcache -> num_tiles = num_tiles	829:4:30746:30775	1199575	6	True				
ANR	1199671	AssignmentExpression	pcache -> num_tiles = num_tiles		1199575	0		=			
ANR	1199672	PtrMemberAccess	pcache -> num_tiles		1199575	0					
ANR	1199673	Identifier	pcache		1199575	0					
ANR	1199674	Identifier	num_tiles		1199575	1					
ANR	1199675	Identifier	num_tiles		1199575	1					
ANR	1199676	ExpressionStatement	pcache -> tiles_used = 0	830:4:30781:30803	1199575	7	True				
ANR	1199677	AssignmentExpression	pcache -> tiles_used = 0		1199575	0		=			
ANR	1199678	PtrMemberAccess	pcache -> tiles_used		1199575	0					
ANR	1199679	Identifier	pcache		1199575	0					
ANR	1199680	Identifier	tiles_used		1199575	1					
ANR	1199681	PrimaryExpression	0		1199575	1					
ANR	1199682	ExpressionStatement	pcache -> next = 0	831:4:30809:30825	1199575	8	True				
ANR	1199683	AssignmentExpression	pcache -> next = 0		1199575	0		=			
ANR	1199684	PtrMemberAccess	pcache -> next		1199575	0					
ANR	1199685	Identifier	pcache		1199575	0					
ANR	1199686	Identifier	next		1199575	1					
ANR	1199687	PrimaryExpression	0		1199575	1					
ANR	1199688	ExpressionStatement	pcache -> bits_used = 0	832:4:30831:30852	1199575	9	True				
ANR	1199689	AssignmentExpression	pcache -> bits_used = 0		1199575	0		=			
ANR	1199690	PtrMemberAccess	pcache -> bits_used		1199575	0					
ANR	1199691	Identifier	pcache		1199575	0					
ANR	1199692	Identifier	bits_used		1199575	1					
ANR	1199693	PrimaryExpression	0		1199575	1					
ANR	1199694	ExpressionStatement	pcache -> max_bits = max_bits	833:4:30858:30885	1199575	10	True				
ANR	1199695	AssignmentExpression	pcache -> max_bits = max_bits		1199575	0		=			
ANR	1199696	PtrMemberAccess	pcache -> max_bits		1199575	0					
ANR	1199697	Identifier	pcache		1199575	0					
ANR	1199698	Identifier	max_bits		1199575	1					
ANR	1199699	Identifier	max_bits		1199575	1					
ANR	1199700	ExpressionStatement	pcache -> free_all = pattern_cache_free_all	834:4:30891:30932	1199575	11	True				
ANR	1199701	AssignmentExpression	pcache -> free_all = pattern_cache_free_all		1199575	0		=			
ANR	1199702	PtrMemberAccess	pcache -> free_all		1199575	0					
ANR	1199703	Identifier	pcache		1199575	0					
ANR	1199704	Identifier	free_all		1199575	1					
ANR	1199705	Identifier	pattern_cache_free_all		1199575	1					
ANR	1199706	ForStatement	"for ( i = 0 ; i < num_tiles ; tiles ++ , i ++ )"		1199575	12					
ANR	1199707	ForInit	i = 0 ;	835:9:30943:30948	1199575	0	True				
ANR	1199708	AssignmentExpression	i = 0		1199575	0		=			
ANR	1199709	Identifier	i		1199575	0					
ANR	1199710	PrimaryExpression	0		1199575	1					
ANR	1199711	Condition	i < num_tiles	835:16:30950:30962	1199575	1	True				
ANR	1199712	RelationalExpression	i < num_tiles		1199575	0		<			
ANR	1199713	Identifier	i		1199575	0					
ANR	1199714	Identifier	num_tiles		1199575	1					
ANR	1199715	Expression	"tiles ++ , i ++"	835:31:30965:30976	1199575	2	True				
ANR	1199716	PostIncDecOperationExpression	tiles ++		1199575	0					
ANR	1199717	Identifier	tiles		1199575	0					
ANR	1199718	IncDec	++		1199575	1					
ANR	1199719	PostIncDecOperationExpression	i ++		1199575	1					
ANR	1199720	Identifier	i		1199575	0					
ANR	1199721	IncDec	++		1199575	1					
ANR	1199722	CompoundStatement		24:45:847:847	1199575	3					
ANR	1199723	ExpressionStatement	tiles -> id = gx_no_bitmap_id	836:8:30989:31016	1199575	0	True				
ANR	1199724	AssignmentExpression	tiles -> id = gx_no_bitmap_id		1199575	0		=			
ANR	1199725	PtrMemberAccess	tiles -> id		1199575	0					
ANR	1199726	Identifier	tiles		1199575	0					
ANR	1199727	Identifier	id		1199575	1					
ANR	1199728	Identifier	gx_no_bitmap_id		1199575	1					
ANR	1199729	ExpressionStatement	uid_set_invalid ( & tiles -> uid )	838:8:31077:31105	1199575	1	True				
ANR	1199730	CallExpression	uid_set_invalid ( & tiles -> uid )		1199575	0					
ANR	1199731	Callee	uid_set_invalid		1199575	0					
ANR	1199732	Identifier	uid_set_invalid		1199575	0					
ANR	1199733	ArgumentList	& tiles -> uid		1199575	1					
ANR	1199734	Argument	& tiles -> uid		1199575	0					
ANR	1199735	UnaryOperationExpression	& tiles -> uid		1199575	0					
ANR	1199736	UnaryOperator	&		1199575	0					
ANR	1199737	PtrMemberAccess	tiles -> uid		1199575	1					
ANR	1199738	Identifier	tiles		1199575	0					
ANR	1199739	Identifier	uid		1199575	1					
ANR	1199740	ExpressionStatement	tiles -> bits_used = 0	839:8:31115:31135	1199575	2	True				
ANR	1199741	AssignmentExpression	tiles -> bits_used = 0		1199575	0		=			
ANR	1199742	PtrMemberAccess	tiles -> bits_used		1199575	0					
ANR	1199743	Identifier	tiles		1199575	0					
ANR	1199744	Identifier	bits_used		1199575	1					
ANR	1199745	PrimaryExpression	0		1199575	1					
ANR	1199746	ExpressionStatement	"memset ( & tiles -> tbits , 0 , sizeof ( tiles -> tbits ) )"	851:8:31715:31761	1199575	3	True				
ANR	1199747	CallExpression	"memset ( & tiles -> tbits , 0 , sizeof ( tiles -> tbits ) )"		1199575	0					
ANR	1199748	Callee	memset		1199575	0					
ANR	1199749	Identifier	memset		1199575	0					
ANR	1199750	ArgumentList	& tiles -> tbits		1199575	1					
ANR	1199751	Argument	& tiles -> tbits		1199575	0					
ANR	1199752	UnaryOperationExpression	& tiles -> tbits		1199575	0					
ANR	1199753	UnaryOperator	&		1199575	0					
ANR	1199754	PtrMemberAccess	tiles -> tbits		1199575	1					
ANR	1199755	Identifier	tiles		1199575	0					
ANR	1199756	Identifier	tbits		1199575	1					
ANR	1199757	Argument	0		1199575	1					
ANR	1199758	PrimaryExpression	0		1199575	0					
ANR	1199759	Argument	sizeof ( tiles -> tbits )		1199575	2					
ANR	1199760	SizeofExpression	sizeof ( tiles -> tbits )		1199575	0					
ANR	1199761	Sizeof	sizeof		1199575	0					
ANR	1199762	PtrMemberAccess	tiles -> tbits		1199575	1					
ANR	1199763	Identifier	tiles		1199575	0					
ANR	1199764	Identifier	tbits		1199575	1					
ANR	1199765	ExpressionStatement	"memset ( & tiles -> tmask , 0 , sizeof ( tiles -> tmask ) )"	852:8:31771:31817	1199575	4	True				
ANR	1199766	CallExpression	"memset ( & tiles -> tmask , 0 , sizeof ( tiles -> tmask ) )"		1199575	0					
ANR	1199767	Callee	memset		1199575	0					
ANR	1199768	Identifier	memset		1199575	0					
ANR	1199769	ArgumentList	& tiles -> tmask		1199575	1					
ANR	1199770	Argument	& tiles -> tmask		1199575	0					
ANR	1199771	UnaryOperationExpression	& tiles -> tmask		1199575	0					
ANR	1199772	UnaryOperator	&		1199575	0					
ANR	1199773	PtrMemberAccess	tiles -> tmask		1199575	1					
ANR	1199774	Identifier	tiles		1199575	0					
ANR	1199775	Identifier	tmask		1199575	1					
ANR	1199776	Argument	0		1199575	1					
ANR	1199777	PrimaryExpression	0		1199575	0					
ANR	1199778	Argument	sizeof ( tiles -> tmask )		1199575	2					
ANR	1199779	SizeofExpression	sizeof ( tiles -> tmask )		1199575	0					
ANR	1199780	Sizeof	sizeof		1199575	0					
ANR	1199781	PtrMemberAccess	tiles -> tmask		1199575	1					
ANR	1199782	Identifier	tiles		1199575	0					
ANR	1199783	Identifier	tmask		1199575	1					
ANR	1199784	ExpressionStatement	tiles -> index = i	857:8:31902:31918	1199575	5	True				
ANR	1199785	AssignmentExpression	tiles -> index = i		1199575	0		=			
ANR	1199786	PtrMemberAccess	tiles -> index		1199575	0					
ANR	1199787	Identifier	tiles		1199575	0					
ANR	1199788	Identifier	index		1199575	1					
ANR	1199789	Identifier	i		1199575	1					
ANR	1199790	ExpressionStatement	tiles -> cdev = NULL	858:8:31928:31946	1199575	6	True				
ANR	1199791	AssignmentExpression	tiles -> cdev = NULL		1199575	0		=			
ANR	1199792	PtrMemberAccess	tiles -> cdev		1199575	0					
ANR	1199793	Identifier	tiles		1199575	0					
ANR	1199794	Identifier	cdev		1199575	1					
ANR	1199795	Identifier	NULL		1199575	1					
ANR	1199796	ExpressionStatement	tiles -> ttrans = NULL	859:8:31956:31976	1199575	7	True				
ANR	1199797	AssignmentExpression	tiles -> ttrans = NULL		1199575	0		=			
ANR	1199798	PtrMemberAccess	tiles -> ttrans		1199575	0					
ANR	1199799	Identifier	tiles		1199575	0					
ANR	1199800	Identifier	ttrans		1199575	1					
ANR	1199801	Identifier	NULL		1199575	1					
ANR	1199802	ExpressionStatement	tiles -> is_planar = false	860:8:31986:32010	1199575	8	True				
ANR	1199803	AssignmentExpression	tiles -> is_planar = false		1199575	0		=			
ANR	1199804	PtrMemberAccess	tiles -> is_planar		1199575	0					
ANR	1199805	Identifier	tiles		1199575	0					
ANR	1199806	Identifier	is_planar		1199575	1					
ANR	1199807	Identifier	false		1199575	1					
ANR	1199808	ReturnStatement	return pcache ;	862:4:32022:32035	1199575	13	True				
ANR	1199809	Identifier	pcache		1199575	0					
ANR	1199810	ReturnType	gx_pattern_cache *		1199575	1					
ANR	1199811	Identifier	gx_pattern_alloc_cache		1199575	2					
ANR	1199812	ParameterList	"gs_memory_t * mem , uint num_tiles , ulong max_bits"		1199575	3					
ANR	1199813	Parameter	gs_memory_t * mem	811:23:30080:30096	1199575	0	True				
ANR	1199814	ParameterType	gs_memory_t *		1199575	0					
ANR	1199815	Identifier	mem		1199575	1					
ANR	1199816	Parameter	uint num_tiles	811:42:30099:30112	1199575	1	True				
ANR	1199817	ParameterType	uint		1199575	0					
ANR	1199818	Identifier	num_tiles		1199575	1					
ANR	1199819	Parameter	ulong max_bits	811:58:30115:30128	1199575	2	True				
ANR	1199820	ParameterType	ulong		1199575	0					
ANR	1199821	Identifier	max_bits		1199575	1					
ANR	1199822	CFGEntryNode	ENTRY		1199575		True				
ANR	1199823	CFGExitNode	EXIT		1199575		True				
ANR	1199824	Symbol	num_tiles		1199575						
ANR	1199825	Symbol	gs_alloc_struct		1199575						
ANR	1199826	Symbol	max_bits		1199575						
ANR	1199827	Symbol	pcache -> memory		1199575						
ANR	1199828	Symbol	& tiles -> tbits		1199575						
ANR	1199829	Symbol	tiles -> cdev		1199575						
ANR	1199830	Symbol	pcache -> tiles_used		1199575						
ANR	1199831	Symbol	tiles -> is_planar		1199575						
ANR	1199832	Symbol	pcache -> free_all		1199575						
ANR	1199833	Symbol	tiles		1199575						
ANR	1199834	Symbol	& tiles -> uid		1199575						
ANR	1199835	Symbol	tiles -> tmask		1199575						
ANR	1199836	Symbol	mem		1199575						
ANR	1199837	Symbol	gx_pattern_cache		1199575						
ANR	1199838	Symbol	tiles -> id		1199575						
ANR	1199839	Symbol	tiles -> bits_used		1199575						
ANR	1199840	Symbol	& st_color_tile_element		1199575						
ANR	1199841	Symbol	gs_alloc_struct_array		1199575						
ANR	1199842	Symbol	pcache -> next		1199575						
ANR	1199843	Symbol	gx_color_tile		1199575						
ANR	1199844	Symbol	NULL		1199575						
ANR	1199845	Symbol	tiles -> ttrans		1199575						
ANR	1199846	Symbol	false		1199575						
ANR	1199847	Symbol	i		1199575						
ANR	1199848	Symbol	pcache		1199575						
ANR	1199849	Symbol	pcache -> bits_used		1199575						
ANR	1199850	Symbol	& st_pattern_cache		1199575						
ANR	1199851	Symbol	* pcache		1199575						
ANR	1199852	Symbol	gx_no_bitmap_id		1199575						
ANR	1199853	Symbol	pcache -> tiles		1199575						
ANR	1199854	Symbol	& tiles -> tmask		1199575						
ANR	1199855	Symbol	pcache -> num_tiles		1199575						
ANR	1199856	Symbol	pcache -> max_bits		1199575						
ANR	1199857	Symbol	* tiles		1199575						
ANR	1199858	Symbol	tiles -> index		1199575						
ANR	1199859	Symbol	tiles -> tbits		1199575						
ANR	1199860	Symbol	pattern_cache_free_all		1199575						
ANR	1199861	Function	ensure_pattern_cache	865:0:32088:32502							
ANR	1199862	FunctionDef	ensure_pattern_cache (gs_gstate * pgs)		1199861	0					
ANR	1199863	CompoundStatement		867:0:32137:32502	1199861	0					
ANR	1199864	IfStatement	if ( pgs -> pattern_cache == 0 )		1199861	0					
ANR	1199865	Condition	pgs -> pattern_cache == 0	868:8:32147:32169	1199861	0	True				
ANR	1199866	EqualityExpression	pgs -> pattern_cache == 0		1199861	0		==			
ANR	1199867	PtrMemberAccess	pgs -> pattern_cache		1199861	0					
ANR	1199868	Identifier	pgs		1199861	0					
ANR	1199869	Identifier	pattern_cache		1199861	1					
ANR	1199870	PrimaryExpression	0		1199861	1					
ANR	1199871	CompoundStatement		3:8:44:235	1199861	1					
ANR	1199872	IdentifierDeclStatement	"gx_pattern_cache * pcache = gx_pattern_alloc_cache ( pgs -> memory , gx_pat_cache_default_tiles ( ) , gx_pat_cache_default_bits ( ) ) ;"	869:8:32182:32373	1199861	0	True				
ANR	1199873	IdentifierDecl	"* pcache = gx_pattern_alloc_cache ( pgs -> memory , gx_pat_cache_default_tiles ( ) , gx_pat_cache_default_bits ( ) )"		1199861	0					
ANR	1199874	IdentifierDeclType	gx_pattern_cache *		1199861	0					
ANR	1199875	Identifier	pcache		1199861	1					
ANR	1199876	AssignmentExpression	"* pcache = gx_pattern_alloc_cache ( pgs -> memory , gx_pat_cache_default_tiles ( ) , gx_pat_cache_default_bits ( ) )"		1199861	2		=			
ANR	1199877	Identifier	pcache		1199861	0					
ANR	1199878	CallExpression	"gx_pattern_alloc_cache ( pgs -> memory , gx_pat_cache_default_tiles ( ) , gx_pat_cache_default_bits ( ) )"		1199861	1					
ANR	1199879	Callee	gx_pattern_alloc_cache		1199861	0					
ANR	1199880	Identifier	gx_pattern_alloc_cache		1199861	0					
ANR	1199881	ArgumentList	pgs -> memory		1199861	1					
ANR	1199882	Argument	pgs -> memory		1199861	0					
ANR	1199883	PtrMemberAccess	pgs -> memory		1199861	0					
ANR	1199884	Identifier	pgs		1199861	0					
ANR	1199885	Identifier	memory		1199861	1					
ANR	1199886	Argument	gx_pat_cache_default_tiles ( )		1199861	1					
ANR	1199887	CallExpression	gx_pat_cache_default_tiles ( )		1199861	0					
ANR	1199888	Callee	gx_pat_cache_default_tiles		1199861	0					
ANR	1199889	Identifier	gx_pat_cache_default_tiles		1199861	0					
ANR	1199890	ArgumentList			1199861	1					
ANR	1199891	Argument	gx_pat_cache_default_bits ( )		1199861	2					
ANR	1199892	CallExpression	gx_pat_cache_default_bits ( )		1199861	0					
ANR	1199893	Callee	gx_pat_cache_default_bits		1199861	0					
ANR	1199894	Identifier	gx_pat_cache_default_bits		1199861	0					
ANR	1199895	ArgumentList			1199861	1					
ANR	1199896	IfStatement	if ( pcache == 0 )		1199861	1					
ANR	1199897	Condition	pcache == 0	874:12:32388:32398	1199861	0	True				
ANR	1199898	EqualityExpression	pcache == 0		1199861	0		==			
ANR	1199899	Identifier	pcache		1199861	0					
ANR	1199900	PrimaryExpression	0		1199861	1					
ANR	1199901	ExpressionStatement	return_error ( gs_error_VMerror )	875:12:32413:32443	1199861	1	True				
ANR	1199902	CallExpression	return_error ( gs_error_VMerror )		1199861	0					
ANR	1199903	Callee	return_error		1199861	0					
ANR	1199904	Identifier	return_error		1199861	0					
ANR	1199905	ArgumentList	gs_error_VMerror		1199861	1					
ANR	1199906	Argument	gs_error_VMerror		1199861	0					
ANR	1199907	Identifier	gs_error_VMerror		1199861	0					
ANR	1199908	ExpressionStatement	pgs -> pattern_cache = pcache	876:8:32453:32480	1199861	2	True				
ANR	1199909	AssignmentExpression	pgs -> pattern_cache = pcache		1199861	0		=			
ANR	1199910	PtrMemberAccess	pgs -> pattern_cache		1199861	0					
ANR	1199911	Identifier	pgs		1199861	0					
ANR	1199912	Identifier	pattern_cache		1199861	1					
ANR	1199913	Identifier	pcache		1199861	1					
ANR	1199914	ReturnStatement	return 0 ;	878:4:32492:32500	1199861	1	True				
ANR	1199915	PrimaryExpression	0		1199861	0					
ANR	1199916	ReturnType	static int		1199861	1					
ANR	1199917	Identifier	ensure_pattern_cache		1199861	2					
ANR	1199918	ParameterList	gs_gstate * pgs		1199861	3					
ANR	1199919	Parameter	gs_gstate * pgs	866:21:32120:32134	1199861	0	True				
ANR	1199920	ParameterType	gs_gstate *		1199861	0					
ANR	1199921	Identifier	pgs		1199861	1					
ANR	1199922	CFGEntryNode	ENTRY		1199861		True				
ANR	1199923	CFGExitNode	EXIT		1199861		True				
ANR	1199924	Symbol	gx_pattern_alloc_cache		1199861						
ANR	1199925	Symbol	gs_error_VMerror		1199861						
ANR	1199926	Symbol	gx_pat_cache_default_tiles		1199861						
ANR	1199927	Symbol	pgs -> pattern_cache		1199861						
ANR	1199928	Symbol	* pgs		1199861						
ANR	1199929	Symbol	gx_pat_cache_default_bits		1199861						
ANR	1199930	Symbol	pgs		1199861						
ANR	1199931	Symbol	pcache		1199861						
ANR	1199932	Symbol	pgs -> memory		1199861						
ANR	1199933	Function	gx_pattern_cache_free	882:0:32550:32812							
ANR	1199934	FunctionDef	gx_pattern_cache_free (gx_pattern_cache * pcache)		1199933	0					
ANR	1199935	CompoundStatement		884:0:32603:32812	1199933	0					
ANR	1199936	ExpressionStatement	pattern_cache_free_all ( pcache )	885:4:32609:32639	1199933	0	True				
ANR	1199937	CallExpression	pattern_cache_free_all ( pcache )		1199933	0					
ANR	1199938	Callee	pattern_cache_free_all		1199933	0					
ANR	1199939	Identifier	pattern_cache_free_all		1199933	0					
ANR	1199940	ArgumentList	pcache		1199933	1					
ANR	1199941	Argument	pcache		1199933	0					
ANR	1199942	Identifier	pcache		1199933	0					
ANR	1199943	ExpressionStatement	"gs_free_object ( pcache -> memory , pcache -> tiles , ""gx_pattern_cache_free"" )"	886:4:32645:32715	1199933	1	True				
ANR	1199944	CallExpression	"gs_free_object ( pcache -> memory , pcache -> tiles , ""gx_pattern_cache_free"" )"		1199933	0					
ANR	1199945	Callee	gs_free_object		1199933	0					
ANR	1199946	Identifier	gs_free_object		1199933	0					
ANR	1199947	ArgumentList	pcache -> memory		1199933	1					
ANR	1199948	Argument	pcache -> memory		1199933	0					
ANR	1199949	PtrMemberAccess	pcache -> memory		1199933	0					
ANR	1199950	Identifier	pcache		1199933	0					
ANR	1199951	Identifier	memory		1199933	1					
ANR	1199952	Argument	pcache -> tiles		1199933	1					
ANR	1199953	PtrMemberAccess	pcache -> tiles		1199933	0					
ANR	1199954	Identifier	pcache		1199933	0					
ANR	1199955	Identifier	tiles		1199933	1					
ANR	1199956	Argument	"""gx_pattern_cache_free"""		1199933	2					
ANR	1199957	PrimaryExpression	"""gx_pattern_cache_free"""		1199933	0					
ANR	1199958	ExpressionStatement	pcache -> tiles = NULL	887:4:32721:32741	1199933	2	True				
ANR	1199959	AssignmentExpression	pcache -> tiles = NULL		1199933	0		=			
ANR	1199960	PtrMemberAccess	pcache -> tiles		1199933	0					
ANR	1199961	Identifier	pcache		1199933	0					
ANR	1199962	Identifier	tiles		1199933	1					
ANR	1199963	Identifier	NULL		1199933	1					
ANR	1199964	ExpressionStatement	"gs_free_object ( pcache -> memory , pcache , ""gx_pattern_cache_free"" )"	888:4:32747:32810	1199933	3	True				
ANR	1199965	CallExpression	"gs_free_object ( pcache -> memory , pcache , ""gx_pattern_cache_free"" )"		1199933	0					
ANR	1199966	Callee	gs_free_object		1199933	0					
ANR	1199967	Identifier	gs_free_object		1199933	0					
ANR	1199968	ArgumentList	pcache -> memory		1199933	1					
ANR	1199969	Argument	pcache -> memory		1199933	0					
ANR	1199970	PtrMemberAccess	pcache -> memory		1199933	0					
ANR	1199971	Identifier	pcache		1199933	0					
ANR	1199972	Identifier	memory		1199933	1					
ANR	1199973	Argument	pcache		1199933	1					
ANR	1199974	Identifier	pcache		1199933	0					
ANR	1199975	Argument	"""gx_pattern_cache_free"""		1199933	2					
ANR	1199976	PrimaryExpression	"""gx_pattern_cache_free"""		1199933	0					
ANR	1199977	ReturnType	void		1199933	1					
ANR	1199978	Identifier	gx_pattern_cache_free		1199933	2					
ANR	1199979	ParameterList	gx_pattern_cache * pcache		1199933	3					
ANR	1199980	Parameter	gx_pattern_cache * pcache	883:22:32577:32600	1199933	0	True				
ANR	1199981	ParameterType	gx_pattern_cache *		1199933	0					
ANR	1199982	Identifier	pcache		1199933	1					
ANR	1199983	CFGEntryNode	ENTRY		1199933		True				
ANR	1199984	CFGExitNode	EXIT		1199933		True				
ANR	1199985	Symbol	* pcache		1199933						
ANR	1199986	Symbol	NULL		1199933						
ANR	1199987	Symbol	pcache -> tiles		1199933						
ANR	1199988	Symbol	pcache -> memory		1199933						
ANR	1199989	Symbol	pcache		1199933						
ANR	1199990	Function	gstate_pattern_cache	892:0:32864:32954							
ANR	1199991	FunctionDef	gstate_pattern_cache (gs_gstate * pgs)		1199990	0					
ANR	1199992	CompoundStatement		894:0:32921:32954	1199990	0					
ANR	1199993	ReturnStatement	return pgs -> pattern_cache ;	895:4:32927:32952	1199990	0	True				
ANR	1199994	PtrMemberAccess	pgs -> pattern_cache		1199990	0					
ANR	1199995	Identifier	pgs		1199990	0					
ANR	1199996	Identifier	pattern_cache		1199990	1					
ANR	1199997	ReturnType	gx_pattern_cache *		1199990	1					
ANR	1199998	Identifier	gstate_pattern_cache		1199990	2					
ANR	1199999	ParameterList	gs_gstate * pgs		1199990	3					
ANR	1200000	Parameter	gs_gstate * pgs	893:21:32904:32918	1199990	0	True				
ANR	1200001	ParameterType	gs_gstate *		1199990	0					
ANR	1200002	Identifier	pgs		1199990	1					
ANR	1200003	CFGEntryNode	ENTRY		1199990		True				
ANR	1200004	CFGExitNode	EXIT		1199990		True				
ANR	1200005	Symbol	pgs -> pattern_cache		1199990						
ANR	1200006	Symbol	* pgs		1199990						
ANR	1200007	Symbol	pgs		1199990						
ANR	1200008	Function	gstate_set_pattern_cache	897:0:32956:33065							
ANR	1200009	FunctionDef	"gstate_set_pattern_cache (gs_gstate * pgs , gx_pattern_cache * pcache)"		1200008	0					
ANR	1200010	CompoundStatement		899:0:33030:33065	1200008	0					
ANR	1200011	ExpressionStatement	pgs -> pattern_cache = pcache	900:4:33036:33063	1200008	0	True				
ANR	1200012	AssignmentExpression	pgs -> pattern_cache = pcache		1200008	0		=			
ANR	1200013	PtrMemberAccess	pgs -> pattern_cache		1200008	0					
ANR	1200014	Identifier	pgs		1200008	0					
ANR	1200015	Identifier	pattern_cache		1200008	1					
ANR	1200016	Identifier	pcache		1200008	1					
ANR	1200017	ReturnType	void		1200008	1					
ANR	1200018	Identifier	gstate_set_pattern_cache		1200008	2					
ANR	1200019	ParameterList	"gs_gstate * pgs , gx_pattern_cache * pcache"		1200008	3					
ANR	1200020	Parameter	gs_gstate * pgs	898:25:32986:33000	1200008	0	True				
ANR	1200021	ParameterType	gs_gstate *		1200008	0					
ANR	1200022	Identifier	pgs		1200008	1					
ANR	1200023	Parameter	gx_pattern_cache * pcache	898:42:33003:33027	1200008	1	True				
ANR	1200024	ParameterType	gx_pattern_cache *		1200008	0					
ANR	1200025	Identifier	pcache		1200008	1					
ANR	1200026	CFGEntryNode	ENTRY		1200008		True				
ANR	1200027	CFGExitNode	EXIT		1200008		True				
ANR	1200028	Symbol	pgs -> pattern_cache		1200008						
ANR	1200029	Symbol	* pgs		1200008						
ANR	1200030	Symbol	pgs		1200008						
ANR	1200031	Symbol	pcache		1200008						
ANR	1200032	Function	gx_pattern_cache_free_entry	904:0:33102:36606							
ANR	1200033	FunctionDef	"gx_pattern_cache_free_entry (gx_pattern_cache * pcache , gx_color_tile * ctile)"		1200032	0					
ANR	1200034	CompoundStatement		906:0:33192:36606	1200032	0					
ANR	1200035	IdentifierDeclStatement	gx_device * temp_device ;	907:4:33198:33220	1200032	0	True				
ANR	1200036	IdentifierDecl	* temp_device		1200032	0					
ANR	1200037	IdentifierDeclType	gx_device *		1200032	0					
ANR	1200038	Identifier	temp_device		1200032	1					
ANR	1200039	IfStatement	if ( ( ctile -> id != gx_no_bitmap_id ) && ! ctile -> is_dummy )		1200032	1					
ANR	1200040	Condition	( ctile -> id != gx_no_bitmap_id ) && ! ctile -> is_dummy	909:8:33231:33280	1200032	0	True				
ANR	1200041	AndExpression	( ctile -> id != gx_no_bitmap_id ) && ! ctile -> is_dummy		1200032	0		&&			
ANR	1200042	EqualityExpression	ctile -> id != gx_no_bitmap_id		1200032	0		!=			
ANR	1200043	PtrMemberAccess	ctile -> id		1200032	0					
ANR	1200044	Identifier	ctile		1200032	0					
ANR	1200045	Identifier	id		1200032	1					
ANR	1200046	Identifier	gx_no_bitmap_id		1200032	1					
ANR	1200047	UnaryOperationExpression	! ctile -> is_dummy		1200032	1					
ANR	1200048	UnaryOperator	!		1200032	0					
ANR	1200049	PtrMemberAccess	ctile -> is_dummy		1200032	1					
ANR	1200050	Identifier	ctile		1200032	0					
ANR	1200051	Identifier	is_dummy		1200032	1					
ANR	1200052	CompoundStatement		5:8:100:133	1200032	1					
ANR	1200053	IdentifierDeclStatement	gs_memory_t * mem = pcache -> memory ;	910:8:33293:33326	1200032	0	True				
ANR	1200054	IdentifierDecl	* mem = pcache -> memory		1200032	0					
ANR	1200055	IdentifierDeclType	gs_memory_t *		1200032	0					
ANR	1200056	Identifier	mem		1200032	1					
ANR	1200057	AssignmentExpression	* mem = pcache -> memory		1200032	2		=			
ANR	1200058	Identifier	mem		1200032	0					
ANR	1200059	PtrMemberAccess	pcache -> memory		1200032	1					
ANR	1200060	Identifier	pcache		1200032	0					
ANR	1200061	Identifier	memory		1200032	1					
ANR	1200062	IfStatement	if ( ctile -> tmask . data != 0 )		1200032	1					
ANR	1200063	Condition	ctile -> tmask . data != 0	916:12:33477:33498	1200032	0	True				
ANR	1200064	EqualityExpression	ctile -> tmask . data != 0		1200032	0		!=			
ANR	1200065	MemberAccess	ctile -> tmask . data		1200032	0					
ANR	1200066	PtrMemberAccess	ctile -> tmask		1200032	0					
ANR	1200067	Identifier	ctile		1200032	0					
ANR	1200068	Identifier	tmask		1200032	1					
ANR	1200069	Identifier	data		1200032	1					
ANR	1200070	PrimaryExpression	0		1200032	1					
ANR	1200071	CompoundStatement		11:36:308:308	1200032	1					
ANR	1200072	ExpressionStatement	"gs_free_object ( mem , ctile -> tmask . data , ""free_pattern_cache_entry(mask data)"" )"	917:12:33515:33619	1200032	0	True				
ANR	1200073	CallExpression	"gs_free_object ( mem , ctile -> tmask . data , ""free_pattern_cache_entry(mask data)"" )"		1200032	0					
ANR	1200074	Callee	gs_free_object		1200032	0					
ANR	1200075	Identifier	gs_free_object		1200032	0					
ANR	1200076	ArgumentList	mem		1200032	1					
ANR	1200077	Argument	mem		1200032	0					
ANR	1200078	Identifier	mem		1200032	0					
ANR	1200079	Argument	ctile -> tmask . data		1200032	1					
ANR	1200080	MemberAccess	ctile -> tmask . data		1200032	0					
ANR	1200081	PtrMemberAccess	ctile -> tmask		1200032	0					
ANR	1200082	Identifier	ctile		1200032	0					
ANR	1200083	Identifier	tmask		1200032	1					
ANR	1200084	Identifier	data		1200032	1					
ANR	1200085	Argument	"""free_pattern_cache_entry(mask data)"""		1200032	2					
ANR	1200086	PrimaryExpression	"""free_pattern_cache_entry(mask data)"""		1200032	0					
ANR	1200087	ExpressionStatement	ctile -> tmask . data = 0	919:12:33633:33654	1200032	1	True				
ANR	1200088	AssignmentExpression	ctile -> tmask . data = 0		1200032	0		=			
ANR	1200089	MemberAccess	ctile -> tmask . data		1200032	0					
ANR	1200090	PtrMemberAccess	ctile -> tmask		1200032	0					
ANR	1200091	Identifier	ctile		1200032	0					
ANR	1200092	Identifier	tmask		1200032	1					
ANR	1200093	Identifier	data		1200032	1					
ANR	1200094	PrimaryExpression	0		1200032	1					
ANR	1200095	IfStatement	if ( ctile -> tbits . data != 0 )		1200032	2					
ANR	1200096	Condition	ctile -> tbits . data != 0	921:12:33696:33717	1200032	0	True				
ANR	1200097	EqualityExpression	ctile -> tbits . data != 0		1200032	0		!=			
ANR	1200098	MemberAccess	ctile -> tbits . data		1200032	0					
ANR	1200099	PtrMemberAccess	ctile -> tbits		1200032	0					
ANR	1200100	Identifier	ctile		1200032	0					
ANR	1200101	Identifier	tbits		1200032	1					
ANR	1200102	Identifier	data		1200032	1					
ANR	1200103	PrimaryExpression	0		1200032	1					
ANR	1200104	CompoundStatement		16:36:527:527	1200032	1					
ANR	1200105	ExpressionStatement	"gs_free_object ( mem , ctile -> tbits . data , ""free_pattern_cache_entry(bits data)"" )"	922:12:33734:33838	1200032	0	True				
ANR	1200106	CallExpression	"gs_free_object ( mem , ctile -> tbits . data , ""free_pattern_cache_entry(bits data)"" )"		1200032	0					
ANR	1200107	Callee	gs_free_object		1200032	0					
ANR	1200108	Identifier	gs_free_object		1200032	0					
ANR	1200109	ArgumentList	mem		1200032	1					
ANR	1200110	Argument	mem		1200032	0					
ANR	1200111	Identifier	mem		1200032	0					
ANR	1200112	Argument	ctile -> tbits . data		1200032	1					
ANR	1200113	MemberAccess	ctile -> tbits . data		1200032	0					
ANR	1200114	PtrMemberAccess	ctile -> tbits		1200032	0					
ANR	1200115	Identifier	ctile		1200032	0					
ANR	1200116	Identifier	tbits		1200032	1					
ANR	1200117	Identifier	data		1200032	1					
ANR	1200118	Argument	"""free_pattern_cache_entry(bits data)"""		1200032	2					
ANR	1200119	PrimaryExpression	"""free_pattern_cache_entry(bits data)"""		1200032	0					
ANR	1200120	ExpressionStatement	ctile -> tbits . data = 0	924:12:33852:33873	1200032	1	True				
ANR	1200121	AssignmentExpression	ctile -> tbits . data = 0		1200032	0		=			
ANR	1200122	MemberAccess	ctile -> tbits . data		1200032	0					
ANR	1200123	PtrMemberAccess	ctile -> tbits		1200032	0					
ANR	1200124	Identifier	ctile		1200032	0					
ANR	1200125	Identifier	tbits		1200032	1					
ANR	1200126	Identifier	data		1200032	1					
ANR	1200127	PrimaryExpression	0		1200032	1					
ANR	1200128	IfStatement	if ( ctile -> cdev != NULL )		1200032	3					
ANR	1200129	Condition	ctile -> cdev != NULL	926:12:33915:33933	1200032	0	True				
ANR	1200130	EqualityExpression	ctile -> cdev != NULL		1200032	0		!=			
ANR	1200131	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200132	Identifier	ctile		1200032	0					
ANR	1200133	Identifier	cdev		1200032	1					
ANR	1200134	Identifier	NULL		1200032	1					
ANR	1200135	CompoundStatement		21:33:743:743	1200032	1					
ANR	1200136	ExpressionStatement	ctile -> cdev -> common . do_not_open_or_close_bandfiles = false	927:12:33950:34008	1200032	0	True				
ANR	1200137	AssignmentExpression	ctile -> cdev -> common . do_not_open_or_close_bandfiles = false		1200032	0		=			
ANR	1200138	MemberAccess	ctile -> cdev -> common . do_not_open_or_close_bandfiles		1200032	0					
ANR	1200139	PtrMemberAccess	ctile -> cdev -> common		1200032	0					
ANR	1200140	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200141	Identifier	ctile		1200032	0					
ANR	1200142	Identifier	cdev		1200032	1					
ANR	1200143	Identifier	common		1200032	1					
ANR	1200144	Identifier	do_not_open_or_close_bandfiles		1200032	1					
ANR	1200145	Identifier	false		1200032	1					
ANR	1200146	ExpressionStatement	"dev_proc ( & ctile -> cdev -> common , close_device ) ( ( gx_device * ) & ctile -> cdev -> common )"	928:12:34065:34144	1200032	1	True				
ANR	1200147	CallExpression	"dev_proc ( & ctile -> cdev -> common , close_device ) ( ( gx_device * ) & ctile -> cdev -> common )"		1200032	0					
ANR	1200148	Callee	"dev_proc ( & ctile -> cdev -> common , close_device )"		1200032	0					
ANR	1200149	CallExpression	"dev_proc ( & ctile -> cdev -> common , close_device )"		1200032	0					
ANR	1200150	Callee	dev_proc		1200032	0					
ANR	1200151	Identifier	dev_proc		1200032	0					
ANR	1200152	ArgumentList	& ctile -> cdev -> common		1200032	1					
ANR	1200153	Argument	& ctile -> cdev -> common		1200032	0					
ANR	1200154	UnaryOperationExpression	& ctile -> cdev -> common		1200032	0					
ANR	1200155	UnaryOperator	&		1200032	0					
ANR	1200156	PtrMemberAccess	ctile -> cdev -> common		1200032	1					
ANR	1200157	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200158	Identifier	ctile		1200032	0					
ANR	1200159	Identifier	cdev		1200032	1					
ANR	1200160	Identifier	common		1200032	1					
ANR	1200161	Argument	close_device		1200032	1					
ANR	1200162	Identifier	close_device		1200032	0					
ANR	1200163	ArgumentList	( gx_device * ) & ctile -> cdev -> common		1200032	1					
ANR	1200164	Argument	( gx_device * ) & ctile -> cdev -> common		1200032	0					
ANR	1200165	CastExpression	( gx_device * ) & ctile -> cdev -> common		1200032	0					
ANR	1200166	CastTarget	gx_device *		1200032	0					
ANR	1200167	UnaryOperationExpression	& ctile -> cdev -> common		1200032	1					
ANR	1200168	UnaryOperator	&		1200032	0					
ANR	1200169	PtrMemberAccess	ctile -> cdev -> common		1200032	1					
ANR	1200170	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200171	Identifier	ctile		1200032	0					
ANR	1200172	Identifier	cdev		1200032	1					
ANR	1200173	Identifier	common		1200032	1					
ANR	1200174	ExpressionStatement	"clist_free_icc_table ( ctile -> cdev -> common . icc_table , ctile -> cdev -> common . memory )"	931:12:34293:34400	1200032	2	True				
ANR	1200175	CallExpression	"clist_free_icc_table ( ctile -> cdev -> common . icc_table , ctile -> cdev -> common . memory )"		1200032	0					
ANR	1200176	Callee	clist_free_icc_table		1200032	0					
ANR	1200177	Identifier	clist_free_icc_table		1200032	0					
ANR	1200178	ArgumentList	ctile -> cdev -> common . icc_table		1200032	1					
ANR	1200179	Argument	ctile -> cdev -> common . icc_table		1200032	0					
ANR	1200180	MemberAccess	ctile -> cdev -> common . icc_table		1200032	0					
ANR	1200181	PtrMemberAccess	ctile -> cdev -> common		1200032	0					
ANR	1200182	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200183	Identifier	ctile		1200032	0					
ANR	1200184	Identifier	cdev		1200032	1					
ANR	1200185	Identifier	common		1200032	1					
ANR	1200186	Identifier	icc_table		1200032	1					
ANR	1200187	Argument	ctile -> cdev -> common . memory		1200032	1					
ANR	1200188	MemberAccess	ctile -> cdev -> common . memory		1200032	0					
ANR	1200189	PtrMemberAccess	ctile -> cdev -> common		1200032	0					
ANR	1200190	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200191	Identifier	ctile		1200032	0					
ANR	1200192	Identifier	cdev		1200032	1					
ANR	1200193	Identifier	common		1200032	1					
ANR	1200194	Identifier	memory		1200032	1					
ANR	1200195	ExpressionStatement	ctile -> cdev -> common . icc_table = NULL	933:12:34414:34450	1200032	3	True				
ANR	1200196	AssignmentExpression	ctile -> cdev -> common . icc_table = NULL		1200032	0		=			
ANR	1200197	MemberAccess	ctile -> cdev -> common . icc_table		1200032	0					
ANR	1200198	PtrMemberAccess	ctile -> cdev -> common		1200032	0					
ANR	1200199	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200200	Identifier	ctile		1200032	0					
ANR	1200201	Identifier	cdev		1200032	1					
ANR	1200202	Identifier	common		1200032	1					
ANR	1200203	Identifier	icc_table		1200032	1					
ANR	1200204	Identifier	NULL		1200032	1					
ANR	1200205	ExpressionStatement	"rc_decrement ( ctile -> cdev -> common . icc_cache_cl , ""gx_pattern_cache_free_entry"" )"	934:12:34464:34569	1200032	4	True				
ANR	1200206	CallExpression	"rc_decrement ( ctile -> cdev -> common . icc_cache_cl , ""gx_pattern_cache_free_entry"" )"		1200032	0					
ANR	1200207	Callee	rc_decrement		1200032	0					
ANR	1200208	Identifier	rc_decrement		1200032	0					
ANR	1200209	ArgumentList	ctile -> cdev -> common . icc_cache_cl		1200032	1					
ANR	1200210	Argument	ctile -> cdev -> common . icc_cache_cl		1200032	0					
ANR	1200211	MemberAccess	ctile -> cdev -> common . icc_cache_cl		1200032	0					
ANR	1200212	PtrMemberAccess	ctile -> cdev -> common		1200032	0					
ANR	1200213	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200214	Identifier	ctile		1200032	0					
ANR	1200215	Identifier	cdev		1200032	1					
ANR	1200216	Identifier	common		1200032	1					
ANR	1200217	Identifier	icc_cache_cl		1200032	1					
ANR	1200218	Argument	"""gx_pattern_cache_free_entry"""		1200032	1					
ANR	1200219	PrimaryExpression	"""gx_pattern_cache_free_entry"""		1200032	0					
ANR	1200220	ExpressionStatement	ctile -> cdev -> common . icc_cache_cl = NULL	936:12:34583:34622	1200032	5	True				
ANR	1200221	AssignmentExpression	ctile -> cdev -> common . icc_cache_cl = NULL		1200032	0		=			
ANR	1200222	MemberAccess	ctile -> cdev -> common . icc_cache_cl		1200032	0					
ANR	1200223	PtrMemberAccess	ctile -> cdev -> common		1200032	0					
ANR	1200224	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200225	Identifier	ctile		1200032	0					
ANR	1200226	Identifier	cdev		1200032	1					
ANR	1200227	Identifier	common		1200032	1					
ANR	1200228	Identifier	icc_cache_cl		1200032	1					
ANR	1200229	Identifier	NULL		1200032	1					
ANR	1200230	ExpressionStatement	ctile -> cdev -> writer . pinst = NULL	937:12:34636:34668	1200032	6	True				
ANR	1200231	AssignmentExpression	ctile -> cdev -> writer . pinst = NULL		1200032	0		=			
ANR	1200232	MemberAccess	ctile -> cdev -> writer . pinst		1200032	0					
ANR	1200233	PtrMemberAccess	ctile -> cdev -> writer		1200032	0					
ANR	1200234	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200235	Identifier	ctile		1200032	0					
ANR	1200236	Identifier	cdev		1200032	1					
ANR	1200237	Identifier	writer		1200032	1					
ANR	1200238	Identifier	pinst		1200032	1					
ANR	1200239	Identifier	NULL		1200032	1					
ANR	1200240	ExpressionStatement	"gs_free_object ( ctile -> cdev -> common . memory -> non_gc_memory , ctile -> cdev -> common . cache_chunk , ""free tile cache for clist"" )"	938:12:34682:34801	1200032	7	True				
ANR	1200241	CallExpression	"gs_free_object ( ctile -> cdev -> common . memory -> non_gc_memory , ctile -> cdev -> common . cache_chunk , ""free tile cache for clist"" )"		1200032	0					
ANR	1200242	Callee	gs_free_object		1200032	0					
ANR	1200243	Identifier	gs_free_object		1200032	0					
ANR	1200244	ArgumentList	ctile -> cdev -> common . memory -> non_gc_memory		1200032	1					
ANR	1200245	Argument	ctile -> cdev -> common . memory -> non_gc_memory		1200032	0					
ANR	1200246	PtrMemberAccess	ctile -> cdev -> common . memory -> non_gc_memory		1200032	0					
ANR	1200247	MemberAccess	ctile -> cdev -> common . memory		1200032	0					
ANR	1200248	PtrMemberAccess	ctile -> cdev -> common		1200032	0					
ANR	1200249	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200250	Identifier	ctile		1200032	0					
ANR	1200251	Identifier	cdev		1200032	1					
ANR	1200252	Identifier	common		1200032	1					
ANR	1200253	Identifier	memory		1200032	1					
ANR	1200254	Identifier	non_gc_memory		1200032	1					
ANR	1200255	Argument	ctile -> cdev -> common . cache_chunk		1200032	1					
ANR	1200256	MemberAccess	ctile -> cdev -> common . cache_chunk		1200032	0					
ANR	1200257	PtrMemberAccess	ctile -> cdev -> common		1200032	0					
ANR	1200258	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200259	Identifier	ctile		1200032	0					
ANR	1200260	Identifier	cdev		1200032	1					
ANR	1200261	Identifier	common		1200032	1					
ANR	1200262	Identifier	cache_chunk		1200032	1					
ANR	1200263	Argument	"""free tile cache for clist"""		1200032	2					
ANR	1200264	PrimaryExpression	"""free tile cache for clist"""		1200032	0					
ANR	1200265	ExpressionStatement	ctile -> cdev -> common . cache_chunk = 0	939:12:34815:34850	1200032	8	True				
ANR	1200266	AssignmentExpression	ctile -> cdev -> common . cache_chunk = 0		1200032	0		=			
ANR	1200267	MemberAccess	ctile -> cdev -> common . cache_chunk		1200032	0					
ANR	1200268	PtrMemberAccess	ctile -> cdev -> common		1200032	0					
ANR	1200269	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200270	Identifier	ctile		1200032	0					
ANR	1200271	Identifier	cdev		1200032	1					
ANR	1200272	Identifier	common		1200032	1					
ANR	1200273	Identifier	cache_chunk		1200032	1					
ANR	1200274	PrimaryExpression	0		1200032	1					
ANR	1200275	ExpressionStatement	temp_device = ( gx_device * ) ctile -> cdev	940:12:34864:34902	1200032	9	True				
ANR	1200276	AssignmentExpression	temp_device = ( gx_device * ) ctile -> cdev		1200032	0		=			
ANR	1200277	Identifier	temp_device		1200032	0					
ANR	1200278	CastExpression	( gx_device * ) ctile -> cdev		1200032	1					
ANR	1200279	CastTarget	gx_device *		1200032	0					
ANR	1200280	PtrMemberAccess	ctile -> cdev		1200032	1					
ANR	1200281	Identifier	ctile		1200032	0					
ANR	1200282	Identifier	cdev		1200032	1					
ANR	1200283	ExpressionStatement	"gx_device_retain ( temp_device , false )"	941:12:34916:34952	1200032	10	True				
ANR	1200284	CallExpression	"gx_device_retain ( temp_device , false )"		1200032	0					
ANR	1200285	Callee	gx_device_retain		1200032	0					
ANR	1200286	Identifier	gx_device_retain		1200032	0					
ANR	1200287	ArgumentList	temp_device		1200032	1					
ANR	1200288	Argument	temp_device		1200032	0					
ANR	1200289	Identifier	temp_device		1200032	0					
ANR	1200290	Argument	false		1200032	1					
ANR	1200291	Identifier	false		1200032	0					
ANR	1200292	ExpressionStatement	ctile -> cdev = NULL	942:12:34966:34984	1200032	11	True				
ANR	1200293	AssignmentExpression	ctile -> cdev = NULL		1200032	0		=			
ANR	1200294	PtrMemberAccess	ctile -> cdev		1200032	0					
ANR	1200295	Identifier	ctile		1200032	0					
ANR	1200296	Identifier	cdev		1200032	1					
ANR	1200297	Identifier	NULL		1200032	1					
ANR	1200298	IfStatement	if ( ctile -> ttrans != NULL )		1200032	4					
ANR	1200299	Condition	ctile -> ttrans != NULL	945:12:35009:35029	1200032	0	True				
ANR	1200300	EqualityExpression	ctile -> ttrans != NULL		1200032	0		!=			
ANR	1200301	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200302	Identifier	ctile		1200032	0					
ANR	1200303	Identifier	ttrans		1200032	1					
ANR	1200304	Identifier	NULL		1200032	1					
ANR	1200305	CompoundStatement		40:35:1839:1839	1200032	1					
ANR	1200306	ExpressionStatement	"if_debug2m ( 'v' , mem , ""[v*] Freeing trans pattern from cache, uid = %ld id = %ld \\n"" , ctile -> uid . id , ctile -> id )"	946:12:35046:35202	1200032	0	True				
ANR	1200307	CallExpression	"if_debug2m ( 'v' , mem , ""[v*] Freeing trans pattern from cache, uid = %ld id = %ld \\n"" , ctile -> uid . id , ctile -> id )"		1200032	0					
ANR	1200308	Callee	if_debug2m		1200032	0					
ANR	1200309	Identifier	if_debug2m		1200032	0					
ANR	1200310	ArgumentList	'v'		1200032	1					
ANR	1200311	Argument	'v'		1200032	0					
ANR	1200312	PrimaryExpression	'v'		1200032	0					
ANR	1200313	Argument	mem		1200032	1					
ANR	1200314	Identifier	mem		1200032	0					
ANR	1200315	Argument	"""[v*] Freeing trans pattern from cache, uid = %ld id = %ld \\n"""		1200032	2					
ANR	1200316	PrimaryExpression	"""[v*] Freeing trans pattern from cache, uid = %ld id = %ld \\n"""		1200032	0					
ANR	1200317	Argument	ctile -> uid . id		1200032	3					
ANR	1200318	MemberAccess	ctile -> uid . id		1200032	0					
ANR	1200319	PtrMemberAccess	ctile -> uid		1200032	0					
ANR	1200320	Identifier	ctile		1200032	0					
ANR	1200321	Identifier	uid		1200032	1					
ANR	1200322	Identifier	id		1200032	1					
ANR	1200323	Argument	ctile -> id		1200032	4					
ANR	1200324	PtrMemberAccess	ctile -> id		1200032	0					
ANR	1200325	Identifier	ctile		1200032	0					
ANR	1200326	Identifier	id		1200032	1					
ANR	1200327	IfStatement	if ( ctile -> ttrans -> pdev14 == NULL )		1200032	1					
ANR	1200328	Condition	ctile -> ttrans -> pdev14 == NULL	949:17:35221:35249	1200032	0	True				
ANR	1200329	EqualityExpression	ctile -> ttrans -> pdev14 == NULL		1200032	0		==			
ANR	1200330	PtrMemberAccess	ctile -> ttrans -> pdev14		1200032	0					
ANR	1200331	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200332	Identifier	ctile		1200032	0					
ANR	1200333	Identifier	ttrans		1200032	1					
ANR	1200334	Identifier	pdev14		1200032	1					
ANR	1200335	Identifier	NULL		1200032	1					
ANR	1200336	CompoundStatement		44:48:2059:2059	1200032	1					
ANR	1200337	IfStatement	if ( ctile -> ttrans -> mem != NULL )		1200032	0					
ANR	1200338	Condition	ctile -> ttrans -> mem != NULL	951:20:35338:35363	1200032	0	True				
ANR	1200339	EqualityExpression	ctile -> ttrans -> mem != NULL		1200032	0		!=			
ANR	1200340	PtrMemberAccess	ctile -> ttrans -> mem		1200032	0					
ANR	1200341	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200342	Identifier	ctile		1200032	0					
ANR	1200343	Identifier	ttrans		1200032	1					
ANR	1200344	Identifier	mem		1200032	1					
ANR	1200345	Identifier	NULL		1200032	1					
ANR	1200346	ExpressionStatement	"gs_free_object ( ctile -> ttrans -> mem , ctile -> ttrans -> transbytes , ""free_pattern_cache_entry(transbytes)"" )"	952:20:35386:35522	1200032	1	True				
ANR	1200347	CallExpression	"gs_free_object ( ctile -> ttrans -> mem , ctile -> ttrans -> transbytes , ""free_pattern_cache_entry(transbytes)"" )"		1200032	0					
ANR	1200348	Callee	gs_free_object		1200032	0					
ANR	1200349	Identifier	gs_free_object		1200032	0					
ANR	1200350	ArgumentList	ctile -> ttrans -> mem		1200032	1					
ANR	1200351	Argument	ctile -> ttrans -> mem		1200032	0					
ANR	1200352	PtrMemberAccess	ctile -> ttrans -> mem		1200032	0					
ANR	1200353	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200354	Identifier	ctile		1200032	0					
ANR	1200355	Identifier	ttrans		1200032	1					
ANR	1200356	Identifier	mem		1200032	1					
ANR	1200357	Argument	ctile -> ttrans -> transbytes		1200032	1					
ANR	1200358	PtrMemberAccess	ctile -> ttrans -> transbytes		1200032	0					
ANR	1200359	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200360	Identifier	ctile		1200032	0					
ANR	1200361	Identifier	ttrans		1200032	1					
ANR	1200362	Identifier	transbytes		1200032	1					
ANR	1200363	Argument	"""free_pattern_cache_entry(transbytes)"""		1200032	2					
ANR	1200364	PrimaryExpression	"""free_pattern_cache_entry(transbytes)"""		1200032	0					
ANR	1200365	ExpressionStatement	"gs_free_object ( mem , ctile -> ttrans -> fill_trans_buffer , ""free_pattern_cache_entry(fill_trans_buffer)"" )"	954:16:35540:35671	1200032	1	True				
ANR	1200366	CallExpression	"gs_free_object ( mem , ctile -> ttrans -> fill_trans_buffer , ""free_pattern_cache_entry(fill_trans_buffer)"" )"		1200032	0					
ANR	1200367	Callee	gs_free_object		1200032	0					
ANR	1200368	Identifier	gs_free_object		1200032	0					
ANR	1200369	ArgumentList	mem		1200032	1					
ANR	1200370	Argument	mem		1200032	0					
ANR	1200371	Identifier	mem		1200032	0					
ANR	1200372	Argument	ctile -> ttrans -> fill_trans_buffer		1200032	1					
ANR	1200373	PtrMemberAccess	ctile -> ttrans -> fill_trans_buffer		1200032	0					
ANR	1200374	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200375	Identifier	ctile		1200032	0					
ANR	1200376	Identifier	ttrans		1200032	1					
ANR	1200377	Identifier	fill_trans_buffer		1200032	1					
ANR	1200378	Argument	"""free_pattern_cache_entry(fill_trans_buffer)"""		1200032	2					
ANR	1200379	PrimaryExpression	"""free_pattern_cache_entry(fill_trans_buffer)"""		1200032	0					
ANR	1200380	ExpressionStatement	ctile -> ttrans -> transbytes = NULL	956:16:35689:35721	1200032	2	True				
ANR	1200381	AssignmentExpression	ctile -> ttrans -> transbytes = NULL		1200032	0		=			
ANR	1200382	PtrMemberAccess	ctile -> ttrans -> transbytes		1200032	0					
ANR	1200383	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200384	Identifier	ctile		1200032	0					
ANR	1200385	Identifier	ttrans		1200032	1					
ANR	1200386	Identifier	transbytes		1200032	1					
ANR	1200387	Identifier	NULL		1200032	1					
ANR	1200388	ExpressionStatement	ctile -> ttrans -> fill_trans_buffer = NULL	957:16:35739:35778	1200032	3	True				
ANR	1200389	AssignmentExpression	ctile -> ttrans -> fill_trans_buffer = NULL		1200032	0		=			
ANR	1200390	PtrMemberAccess	ctile -> ttrans -> fill_trans_buffer		1200032	0					
ANR	1200391	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200392	Identifier	ctile		1200032	0					
ANR	1200393	Identifier	ttrans		1200032	1					
ANR	1200394	Identifier	fill_trans_buffer		1200032	1					
ANR	1200395	Identifier	NULL		1200032	1					
ANR	1200396	ElseStatement	else		1200032	0					
ANR	1200397	CompoundStatement		53:19:2606:2606	1200032	0					
ANR	1200398	ExpressionStatement	"dev_proc ( ctile -> ttrans -> pdev14 , close_device ) ( ( gx_device * ) ctile -> ttrans -> pdev14 )"	959:16:35817:35898	1200032	0	True				
ANR	1200399	CallExpression	"dev_proc ( ctile -> ttrans -> pdev14 , close_device ) ( ( gx_device * ) ctile -> ttrans -> pdev14 )"		1200032	0					
ANR	1200400	Callee	"dev_proc ( ctile -> ttrans -> pdev14 , close_device )"		1200032	0					
ANR	1200401	CallExpression	"dev_proc ( ctile -> ttrans -> pdev14 , close_device )"		1200032	0					
ANR	1200402	Callee	dev_proc		1200032	0					
ANR	1200403	Identifier	dev_proc		1200032	0					
ANR	1200404	ArgumentList	ctile -> ttrans -> pdev14		1200032	1					
ANR	1200405	Argument	ctile -> ttrans -> pdev14		1200032	0					
ANR	1200406	PtrMemberAccess	ctile -> ttrans -> pdev14		1200032	0					
ANR	1200407	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200408	Identifier	ctile		1200032	0					
ANR	1200409	Identifier	ttrans		1200032	1					
ANR	1200410	Identifier	pdev14		1200032	1					
ANR	1200411	Argument	close_device		1200032	1					
ANR	1200412	Identifier	close_device		1200032	0					
ANR	1200413	ArgumentList	( gx_device * ) ctile -> ttrans -> pdev14		1200032	1					
ANR	1200414	Argument	( gx_device * ) ctile -> ttrans -> pdev14		1200032	0					
ANR	1200415	CastExpression	( gx_device * ) ctile -> ttrans -> pdev14		1200032	0					
ANR	1200416	CastTarget	gx_device *		1200032	0					
ANR	1200417	PtrMemberAccess	ctile -> ttrans -> pdev14		1200032	1					
ANR	1200418	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200419	Identifier	ctile		1200032	0					
ANR	1200420	Identifier	ttrans		1200032	1					
ANR	1200421	Identifier	pdev14		1200032	1					
ANR	1200422	ExpressionStatement	temp_device = ( gx_device * ) ( ctile -> ttrans -> pdev14 )	960:16:35916:35966	1200032	1	True				
ANR	1200423	AssignmentExpression	temp_device = ( gx_device * ) ( ctile -> ttrans -> pdev14 )		1200032	0		=			
ANR	1200424	Identifier	temp_device		1200032	0					
ANR	1200425	CastExpression	( gx_device * ) ( ctile -> ttrans -> pdev14 )		1200032	1					
ANR	1200426	CastTarget	gx_device *		1200032	0					
ANR	1200427	PtrMemberAccess	ctile -> ttrans -> pdev14		1200032	1					
ANR	1200428	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200429	Identifier	ctile		1200032	0					
ANR	1200430	Identifier	ttrans		1200032	1					
ANR	1200431	Identifier	pdev14		1200032	1					
ANR	1200432	ExpressionStatement	"gx_device_retain ( temp_device , false )"	961:16:35984:36020	1200032	2	True				
ANR	1200433	CallExpression	"gx_device_retain ( temp_device , false )"		1200032	0					
ANR	1200434	Callee	gx_device_retain		1200032	0					
ANR	1200435	Identifier	gx_device_retain		1200032	0					
ANR	1200436	ArgumentList	temp_device		1200032	1					
ANR	1200437	Argument	temp_device		1200032	0					
ANR	1200438	Identifier	temp_device		1200032	0					
ANR	1200439	Argument	false		1200032	1					
ANR	1200440	Identifier	false		1200032	0					
ANR	1200441	ExpressionStatement	"rc_decrement ( temp_device , ""gx_pattern_cache_free_entry"" )"	962:16:36038:36093	1200032	3	True				
ANR	1200442	CallExpression	"rc_decrement ( temp_device , ""gx_pattern_cache_free_entry"" )"		1200032	0					
ANR	1200443	Callee	rc_decrement		1200032	0					
ANR	1200444	Identifier	rc_decrement		1200032	0					
ANR	1200445	ArgumentList	temp_device		1200032	1					
ANR	1200446	Argument	temp_device		1200032	0					
ANR	1200447	Identifier	temp_device		1200032	0					
ANR	1200448	Argument	"""gx_pattern_cache_free_entry"""		1200032	1					
ANR	1200449	PrimaryExpression	"""gx_pattern_cache_free_entry"""		1200032	0					
ANR	1200450	ExpressionStatement	ctile -> ttrans -> pdev14 = NULL	963:16:36111:36139	1200032	4	True				
ANR	1200451	AssignmentExpression	ctile -> ttrans -> pdev14 = NULL		1200032	0		=			
ANR	1200452	PtrMemberAccess	ctile -> ttrans -> pdev14		1200032	0					
ANR	1200453	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200454	Identifier	ctile		1200032	0					
ANR	1200455	Identifier	ttrans		1200032	1					
ANR	1200456	Identifier	pdev14		1200032	1					
ANR	1200457	Identifier	NULL		1200032	1					
ANR	1200458	ExpressionStatement	ctile -> ttrans -> transbytes = NULL	964:16:36157:36189	1200032	5	True				
ANR	1200459	AssignmentExpression	ctile -> ttrans -> transbytes = NULL		1200032	0		=			
ANR	1200460	PtrMemberAccess	ctile -> ttrans -> transbytes		1200032	0					
ANR	1200461	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200462	Identifier	ctile		1200032	0					
ANR	1200463	Identifier	ttrans		1200032	1					
ANR	1200464	Identifier	transbytes		1200032	1					
ANR	1200465	Identifier	NULL		1200032	1					
ANR	1200466	ExpressionStatement	ctile -> ttrans -> fill_trans_buffer = NULL	965:16:36246:36285	1200032	6	True				
ANR	1200467	AssignmentExpression	ctile -> ttrans -> fill_trans_buffer = NULL		1200032	0		=			
ANR	1200468	PtrMemberAccess	ctile -> ttrans -> fill_trans_buffer		1200032	0					
ANR	1200469	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200470	Identifier	ctile		1200032	0					
ANR	1200471	Identifier	ttrans		1200032	1					
ANR	1200472	Identifier	fill_trans_buffer		1200032	1					
ANR	1200473	Identifier	NULL		1200032	1					
ANR	1200474	ExpressionStatement	"gs_free_object ( mem , ctile -> ttrans , ""free_pattern_cache_entry(ttrans)"" )"	968:12:36341:36438	1200032	2	True				
ANR	1200475	CallExpression	"gs_free_object ( mem , ctile -> ttrans , ""free_pattern_cache_entry(ttrans)"" )"		1200032	0					
ANR	1200476	Callee	gs_free_object		1200032	0					
ANR	1200477	Identifier	gs_free_object		1200032	0					
ANR	1200478	ArgumentList	mem		1200032	1					
ANR	1200479	Argument	mem		1200032	0					
ANR	1200480	Identifier	mem		1200032	0					
ANR	1200481	Argument	ctile -> ttrans		1200032	1					
ANR	1200482	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200483	Identifier	ctile		1200032	0					
ANR	1200484	Identifier	ttrans		1200032	1					
ANR	1200485	Argument	"""free_pattern_cache_entry(ttrans)"""		1200032	2					
ANR	1200486	PrimaryExpression	"""free_pattern_cache_entry(ttrans)"""		1200032	0					
ANR	1200487	ExpressionStatement	ctile -> ttrans = NULL	970:12:36452:36472	1200032	3	True				
ANR	1200488	AssignmentExpression	ctile -> ttrans = NULL		1200032	0		=			
ANR	1200489	PtrMemberAccess	ctile -> ttrans		1200032	0					
ANR	1200490	Identifier	ctile		1200032	0					
ANR	1200491	Identifier	ttrans		1200032	1					
ANR	1200492	Identifier	NULL		1200032	1					
ANR	1200493	ExpressionStatement	pcache -> tiles_used --	974:8:36494:36514	1200032	5	True				
ANR	1200494	PostIncDecOperationExpression	pcache -> tiles_used --		1200032	0					
ANR	1200495	PtrMemberAccess	pcache -> tiles_used		1200032	0					
ANR	1200496	Identifier	pcache		1200032	0					
ANR	1200497	Identifier	tiles_used		1200032	1					
ANR	1200498	IncDec	--		1200032	1					
ANR	1200499	ExpressionStatement	pcache -> bits_used -= ctile -> bits_used	975:8:36524:36561	1200032	6	True				
ANR	1200500	AssignmentExpression	pcache -> bits_used -= ctile -> bits_used		1200032	0		-=			
ANR	1200501	PtrMemberAccess	pcache -> bits_used		1200032	0					
ANR	1200502	Identifier	pcache		1200032	0					
ANR	1200503	Identifier	bits_used		1200032	1					
ANR	1200504	PtrMemberAccess	ctile -> bits_used		1200032	1					
ANR	1200505	Identifier	ctile		1200032	0					
ANR	1200506	Identifier	bits_used		1200032	1					
ANR	1200507	ExpressionStatement	ctile -> id = gx_no_bitmap_id	976:8:36571:36598	1200032	7	True				
ANR	1200508	AssignmentExpression	ctile -> id = gx_no_bitmap_id		1200032	0		=			
ANR	1200509	PtrMemberAccess	ctile -> id		1200032	0					
ANR	1200510	Identifier	ctile		1200032	0					
ANR	1200511	Identifier	id		1200032	1					
ANR	1200512	Identifier	gx_no_bitmap_id		1200032	1					
ANR	1200513	ReturnType	static void		1200032	1					
ANR	1200514	Identifier	gx_pattern_cache_free_entry		1200032	2					
ANR	1200515	ParameterList	"gx_pattern_cache * pcache , gx_color_tile * ctile"		1200032	3					
ANR	1200516	Parameter	gx_pattern_cache * pcache	905:28:33142:33166	1200032	0	True				
ANR	1200517	ParameterType	gx_pattern_cache *		1200032	0					
ANR	1200518	Identifier	pcache		1200032	1					
ANR	1200519	Parameter	gx_color_tile * ctile	905:55:33169:33189	1200032	1	True				
ANR	1200520	ParameterType	gx_color_tile *		1200032	0					
ANR	1200521	Identifier	ctile		1200032	1					
ANR	1200522	CFGEntryNode	ENTRY		1200032		True				
ANR	1200523	CFGExitNode	EXIT		1200032		True				
ANR	1200524	Symbol	ctile -> cdev -> common . do_not_open_or_close_bandfiles		1200032						
ANR	1200525	Symbol	& ctile -> cdev -> common		1200032						
ANR	1200526	Symbol	ctile -> uid . id		1200032						
ANR	1200527	Symbol	* * ctile -> cdev		1200032						
ANR	1200528	Symbol	ctile -> tmask . data		1200032						
ANR	1200529	Symbol	* ctile -> cdev -> common		1200032						
ANR	1200530	Symbol	ctile -> ttrans -> fill_trans_buffer		1200032						
ANR	1200531	Symbol	ctile -> id		1200032						
ANR	1200532	Symbol	close_device		1200032						
ANR	1200533	Symbol	pcache -> memory		1200032						
ANR	1200534	Symbol	pcache -> tiles_used		1200032						
ANR	1200535	Symbol	* * ctile		1200032						
ANR	1200536	Symbol	* ctile		1200032						
ANR	1200537	Symbol	ctile -> cdev -> common . cache_chunk		1200032						
ANR	1200538	Symbol	ctile -> cdev -> common . memory -> non_gc_memory		1200032						
ANR	1200539	Symbol	ctile -> bits_used		1200032						
ANR	1200540	Symbol	* ctile -> ttrans		1200032						
ANR	1200541	Symbol	mem		1200032						
ANR	1200542	Symbol	ctile -> cdev -> common . icc_table		1200032						
ANR	1200543	Symbol	* ctile -> cdev		1200032						
ANR	1200544	Symbol	ctile -> tbits . data		1200032						
ANR	1200545	Symbol	ctile -> cdev		1200032						
ANR	1200546	Symbol	NULL		1200032						
ANR	1200547	Symbol	ctile -> uid		1200032						
ANR	1200548	Symbol	ctile -> ttrans -> mem		1200032						
ANR	1200549	Symbol	ctile -> cdev -> common . memory		1200032						
ANR	1200550	Symbol	ctile -> cdev -> writer . pinst		1200032						
ANR	1200551	Symbol	ctile -> ttrans		1200032						
ANR	1200552	Symbol	false		1200032						
ANR	1200553	Symbol	ctile -> cdev -> common . icc_cache_cl		1200032						
ANR	1200554	Symbol	ctile -> cdev -> writer		1200032						
ANR	1200555	Symbol	ctile -> tmask		1200032						
ANR	1200556	Symbol	pcache		1200032						
ANR	1200557	Symbol	pcache -> bits_used		1200032						
ANR	1200558	Symbol	* pcache		1200032						
ANR	1200559	Symbol	gx_no_bitmap_id		1200032						
ANR	1200560	Symbol	* * * ctile		1200032						
ANR	1200561	Symbol	* ctile -> cdev -> common . memory		1200032						
ANR	1200562	Symbol	ctile -> is_dummy		1200032						
ANR	1200563	Symbol	ctile		1200032						
ANR	1200564	Symbol	ctile -> cdev -> common		1200032						
ANR	1200565	Symbol	ctile -> ttrans -> pdev14		1200032						
ANR	1200566	Symbol	ctile -> tbits		1200032						
ANR	1200567	Symbol	temp_device		1200032						
ANR	1200568	Symbol	ctile -> ttrans -> transbytes		1200032						
ANR	1200569	Function	gx_pattern_cache_ensure_space	983:0:36846:37466							
ANR	1200570	FunctionDef	"gx_pattern_cache_ensure_space (gs_gstate * pgs , int needed)"		1200569	0					
ANR	1200571	CompoundStatement		985:0:36910:37466	1200569	0					
ANR	1200572	IdentifierDeclStatement	int code = ensure_pattern_cache ( pgs ) ;	986:4:36916:36952	1200569	0	True				
ANR	1200573	IdentifierDecl	code = ensure_pattern_cache ( pgs )		1200569	0					
ANR	1200574	IdentifierDeclType	int		1200569	0					
ANR	1200575	Identifier	code		1200569	1					
ANR	1200576	AssignmentExpression	code = ensure_pattern_cache ( pgs )		1200569	2		=			
ANR	1200577	Identifier	code		1200569	0					
ANR	1200578	CallExpression	ensure_pattern_cache ( pgs )		1200569	1					
ANR	1200579	Callee	ensure_pattern_cache		1200569	0					
ANR	1200580	Identifier	ensure_pattern_cache		1200569	0					
ANR	1200581	ArgumentList	pgs		1200569	1					
ANR	1200582	Argument	pgs		1200569	0					
ANR	1200583	Identifier	pgs		1200569	0					
ANR	1200584	IdentifierDeclStatement	gx_pattern_cache * pcache ;	987:4:36958:36982	1200569	1	True				
ANR	1200585	IdentifierDecl	* pcache		1200569	0					
ANR	1200586	IdentifierDeclType	gx_pattern_cache *		1200569	0					
ANR	1200587	Identifier	pcache		1200569	1					
ANR	1200588	IfStatement	if ( code < 0 )		1200569	2					
ANR	1200589	Condition	code < 0	989:8:36993:37000	1200569	0	True				
ANR	1200590	RelationalExpression	code < 0		1200569	0		<			
ANR	1200591	Identifier	code		1200569	0					
ANR	1200592	PrimaryExpression	0		1200569	1					
ANR	1200593	ReturnStatement	return ;	990:8:37011:37017	1200569	1	True				
ANR	1200594	ExpressionStatement	pcache = pgs -> pattern_cache	992:4:37068:37095	1200569	3	True				
ANR	1200595	AssignmentExpression	pcache = pgs -> pattern_cache		1200569	0		=			
ANR	1200596	Identifier	pcache		1200569	0					
ANR	1200597	PtrMemberAccess	pgs -> pattern_cache		1200569	1					
ANR	1200598	Identifier	pgs		1200569	0					
ANR	1200599	Identifier	pattern_cache		1200569	1					
ANR	1200600	WhileStatement	while ( pcache -> bits_used + needed > pcache -> max_bits && pcache -> bits_used != 0 )		1200569	4					
ANR	1200601	Condition	pcache -> bits_used + needed > pcache -> max_bits && pcache -> bits_used != 0	996:11:37236:37317	1200569	0	True				
ANR	1200602	AndExpression	pcache -> bits_used + needed > pcache -> max_bits && pcache -> bits_used != 0		1200569	0		&&			
ANR	1200603	RelationalExpression	pcache -> bits_used + needed > pcache -> max_bits		1200569	0		>			
ANR	1200604	AdditiveExpression	pcache -> bits_used + needed		1200569	0		+			
ANR	1200605	PtrMemberAccess	pcache -> bits_used		1200569	0					
ANR	1200606	Identifier	pcache		1200569	0					
ANR	1200607	Identifier	bits_used		1200569	1					
ANR	1200608	Identifier	needed		1200569	1					
ANR	1200609	PtrMemberAccess	pcache -> max_bits		1200569	1					
ANR	1200610	Identifier	pcache		1200569	0					
ANR	1200611	Identifier	max_bits		1200569	1					
ANR	1200612	EqualityExpression	pcache -> bits_used != 0		1200569	1		!=			
ANR	1200613	PtrMemberAccess	pcache -> bits_used		1200569	0					
ANR	1200614	Identifier	pcache		1200569	0					
ANR	1200615	Identifier	bits_used		1200569	1					
ANR	1200616	PrimaryExpression	0		1200569	1					
ANR	1200617	CompoundStatement		13:35:409:409	1200569	1					
ANR	1200618	ExpressionStatement	pcache -> next = ( pcache -> next + 1 ) % pcache -> num_tiles	998:8:37330:37383	1200569	0	True				
ANR	1200619	AssignmentExpression	pcache -> next = ( pcache -> next + 1 ) % pcache -> num_tiles		1200569	0		=			
ANR	1200620	PtrMemberAccess	pcache -> next		1200569	0					
ANR	1200621	Identifier	pcache		1200569	0					
ANR	1200622	Identifier	next		1200569	1					
ANR	1200623	MultiplicativeExpression	( pcache -> next + 1 ) % pcache -> num_tiles		1200569	1		%			
ANR	1200624	AdditiveExpression	pcache -> next + 1		1200569	0		+			
ANR	1200625	PtrMemberAccess	pcache -> next		1200569	0					
ANR	1200626	Identifier	pcache		1200569	0					
ANR	1200627	Identifier	next		1200569	1					
ANR	1200628	PrimaryExpression	1		1200569	1					
ANR	1200629	PtrMemberAccess	pcache -> num_tiles		1200569	1					
ANR	1200630	Identifier	pcache		1200569	0					
ANR	1200631	Identifier	num_tiles		1200569	1					
ANR	1200632	ExpressionStatement	"gx_pattern_cache_free_entry ( pcache , & pcache -> tiles [ pcache -> next ] )"	999:8:37393:37458	1200569	1	True				
ANR	1200633	CallExpression	"gx_pattern_cache_free_entry ( pcache , & pcache -> tiles [ pcache -> next ] )"		1200569	0					
ANR	1200634	Callee	gx_pattern_cache_free_entry		1200569	0					
ANR	1200635	Identifier	gx_pattern_cache_free_entry		1200569	0					
ANR	1200636	ArgumentList	pcache		1200569	1					
ANR	1200637	Argument	pcache		1200569	0					
ANR	1200638	Identifier	pcache		1200569	0					
ANR	1200639	Argument	& pcache -> tiles [ pcache -> next ]		1200569	1					
ANR	1200640	UnaryOperationExpression	& pcache -> tiles [ pcache -> next ]		1200569	0					
ANR	1200641	UnaryOperator	&		1200569	0					
ANR	1200642	ArrayIndexing	pcache -> tiles [ pcache -> next ]		1200569	1					
ANR	1200643	PtrMemberAccess	pcache -> tiles		1200569	0					
ANR	1200644	Identifier	pcache		1200569	0					
ANR	1200645	Identifier	tiles		1200569	1					
ANR	1200646	PtrMemberAccess	pcache -> next		1200569	1					
ANR	1200647	Identifier	pcache		1200569	0					
ANR	1200648	Identifier	next		1200569	1					
ANR	1200649	ReturnType	void		1200569	1					
ANR	1200650	Identifier	gx_pattern_cache_ensure_space		1200569	2					
ANR	1200651	ParameterList	"gs_gstate * pgs , int needed"		1200569	3					
ANR	1200652	Parameter	gs_gstate * pgs	984:30:36881:36895	1200569	0	True				
ANR	1200653	ParameterType	gs_gstate *		1200569	0					
ANR	1200654	Identifier	pgs		1200569	1					
ANR	1200655	Parameter	int needed	984:47:36898:36907	1200569	1	True				
ANR	1200656	ParameterType	int		1200569	0					
ANR	1200657	Identifier	needed		1200569	1					
ANR	1200658	CFGEntryNode	ENTRY		1200569		True				
ANR	1200659	CFGExitNode	EXIT		1200569		True				
ANR	1200660	Symbol	code		1200569						
ANR	1200661	Symbol	needed		1200569						
ANR	1200662	Symbol	* pgs		1200569						
ANR	1200663	Symbol	pcache		1200569						
ANR	1200664	Symbol	pcache -> bits_used		1200569						
ANR	1200665	Symbol	* pcache		1200569						
ANR	1200666	Symbol	pgs -> pattern_cache		1200569						
ANR	1200667	Symbol	pcache -> tiles		1200569						
ANR	1200668	Symbol	pcache -> num_tiles		1200569						
ANR	1200669	Symbol	pcache -> max_bits		1200569						
ANR	1200670	Symbol	ensure_pattern_cache		1200569						
ANR	1200671	Symbol	pgs		1200569						
ANR	1200672	Symbol	pcache -> next		1200569						
ANR	1200673	Function	gx_pattern_cache_update_used	1004:0:37552:37725							
ANR	1200674	FunctionDef	"gx_pattern_cache_update_used (gs_gstate * pgs , ulong used)"		1200673	0					
ANR	1200675	CompoundStatement		1006:0:37614:37725	1200673	0					
ANR	1200676	IdentifierDeclStatement	gx_pattern_cache * pcache = pgs -> pattern_cache ;	1007:4:37620:37665	1200673	0	True				
ANR	1200677	IdentifierDecl	* pcache = pgs -> pattern_cache		1200673	0					
ANR	1200678	IdentifierDeclType	gx_pattern_cache *		1200673	0					
ANR	1200679	Identifier	pcache		1200673	1					
ANR	1200680	AssignmentExpression	* pcache = pgs -> pattern_cache		1200673	2		=			
ANR	1200681	Identifier	pcache		1200673	0					
ANR	1200682	PtrMemberAccess	pgs -> pattern_cache		1200673	1					
ANR	1200683	Identifier	pgs		1200673	0					
ANR	1200684	Identifier	pattern_cache		1200673	1					
ANR	1200685	ExpressionStatement	pcache -> bits_used += used	1009:4:37672:37697	1200673	1	True				
ANR	1200686	AssignmentExpression	pcache -> bits_used += used		1200673	0		+=			
ANR	1200687	PtrMemberAccess	pcache -> bits_used		1200673	0					
ANR	1200688	Identifier	pcache		1200673	0					
ANR	1200689	Identifier	bits_used		1200673	1					
ANR	1200690	Identifier	used		1200673	1					
ANR	1200691	ExpressionStatement	pcache -> tiles_used ++	1010:4:37703:37723	1200673	2	True				
ANR	1200692	PostIncDecOperationExpression	pcache -> tiles_used ++		1200673	0					
ANR	1200693	PtrMemberAccess	pcache -> tiles_used		1200673	0					
ANR	1200694	Identifier	pcache		1200673	0					
ANR	1200695	Identifier	tiles_used		1200673	1					
ANR	1200696	IncDec	++		1200673	1					
ANR	1200697	ReturnType	void		1200673	1					
ANR	1200698	Identifier	gx_pattern_cache_update_used		1200673	2					
ANR	1200699	ParameterList	"gs_gstate * pgs , ulong used"		1200673	3					
ANR	1200700	Parameter	gs_gstate * pgs	1005:29:37586:37599	1200673	0	True				
ANR	1200701	ParameterType	gs_gstate *		1200673	0					
ANR	1200702	Identifier	pgs		1200673	1					
ANR	1200703	Parameter	ulong used	1005:45:37602:37611	1200673	1	True				
ANR	1200704	ParameterType	ulong		1200673	0					
ANR	1200705	Identifier	used		1200673	1					
ANR	1200706	CFGEntryNode	ENTRY		1200673		True				
ANR	1200707	CFGExitNode	EXIT		1200673		True				
ANR	1200708	Symbol	* pcache		1200673						
ANR	1200709	Symbol	pgs -> pattern_cache		1200673						
ANR	1200710	Symbol	* pgs		1200673						
ANR	1200711	Symbol	used		1200673						
ANR	1200712	Symbol	pgs		1200673						
ANR	1200713	Symbol	pcache		1200673						
ANR	1200714	Symbol	pcache -> tiles_used		1200673						
ANR	1200715	Symbol	pcache -> bits_used		1200673						
ANR	1200716	DeclStmt									
ANR	1200717	Decl							void	"void ( gx_strip_bitmap * , const gx_device_memory * , gx_bitmap_id )"	make_bitmap
ANR	1200718	Function	gx_pattern_cache_add_entry	1020:0:38095:43020							
ANR	1200719	FunctionDef	"gx_pattern_cache_add_entry (gs_gstate * pgs , gx_device_forward * fdev , gx_color_tile * * pctile)"		1200718	0					
ANR	1200720	CompoundStatement		1023:0:38213:43020	1200718	0					
ANR	1200721	IdentifierDeclStatement	gx_pattern_cache * pcache ;	1024:4:38219:38243	1200718	0	True				
ANR	1200722	IdentifierDecl	* pcache		1200718	0					
ANR	1200723	IdentifierDeclType	gx_pattern_cache *		1200718	0					
ANR	1200724	Identifier	pcache		1200718	1					
ANR	1200725	IdentifierDeclStatement	const gs_pattern1_instance_t * pinst ;	1025:4:38249:38284	1200718	1	True				
ANR	1200726	IdentifierDecl	* pinst		1200718	0					
ANR	1200727	IdentifierDeclType	const gs_pattern1_instance_t *		1200718	0					
ANR	1200728	Identifier	pinst		1200718	1					
ANR	1200729	IdentifierDeclStatement	"ulong used = 0 , mask_used = 0 , trans_used = 0 ;"	1026:4:38290:38335	1200718	2	True				
ANR	1200730	IdentifierDecl	used = 0		1200718	0					
ANR	1200731	IdentifierDeclType	ulong		1200718	0					
ANR	1200732	Identifier	used		1200718	1					
ANR	1200733	AssignmentExpression	used = 0		1200718	2		=			
ANR	1200734	Identifier	used		1200718	0					
ANR	1200735	PrimaryExpression	0		1200718	1					
ANR	1200736	IdentifierDecl	mask_used = 0		1200718	1					
ANR	1200737	IdentifierDeclType	ulong		1200718	0					
ANR	1200738	Identifier	mask_used		1200718	1					
ANR	1200739	AssignmentExpression	mask_used = 0		1200718	2		=			
ANR	1200740	Identifier	mask_used		1200718	0					
ANR	1200741	PrimaryExpression	0		1200718	1					
ANR	1200742	IdentifierDecl	trans_used = 0		1200718	2					
ANR	1200743	IdentifierDeclType	ulong		1200718	0					
ANR	1200744	Identifier	trans_used		1200718	1					
ANR	1200745	AssignmentExpression	trans_used = 0		1200718	2		=			
ANR	1200746	Identifier	trans_used		1200718	0					
ANR	1200747	PrimaryExpression	0		1200718	1					
ANR	1200748	IdentifierDeclStatement	gx_bitmap_id id ;	1027:4:38341:38356	1200718	3	True				
ANR	1200749	IdentifierDecl	id		1200718	0					
ANR	1200750	IdentifierDeclType	gx_bitmap_id		1200718	0					
ANR	1200751	Identifier	id		1200718	1					
ANR	1200752	IdentifierDeclStatement	gx_color_tile * ctile ;	1028:4:38362:38382	1200718	4	True				
ANR	1200753	IdentifierDecl	* ctile		1200718	0					
ANR	1200754	IdentifierDeclType	gx_color_tile *		1200718	0					
ANR	1200755	Identifier	ctile		1200718	1					
ANR	1200756	IdentifierDeclStatement	int code = ensure_pattern_cache ( pgs ) ;	1029:4:38388:38424	1200718	5	True				
ANR	1200757	IdentifierDecl	code = ensure_pattern_cache ( pgs )		1200718	0					
ANR	1200758	IdentifierDeclType	int		1200718	0					
ANR	1200759	Identifier	code		1200718	1					
ANR	1200760	AssignmentExpression	code = ensure_pattern_cache ( pgs )		1200718	2		=			
ANR	1200761	Identifier	code		1200718	0					
ANR	1200762	CallExpression	ensure_pattern_cache ( pgs )		1200718	1					
ANR	1200763	Callee	ensure_pattern_cache		1200718	0					
ANR	1200764	Identifier	ensure_pattern_cache		1200718	0					
ANR	1200765	ArgumentList	pgs		1200718	1					
ANR	1200766	Argument	pgs		1200718	0					
ANR	1200767	Identifier	pgs		1200718	0					
ANR	1200768	IdentifierDeclStatement	extern dev_proc_open_device ( pattern_clist_open_device ) ;	1030:4:38430:38484	1200718	6	True				
ANR	1200769	IdentifierDecl	dev_proc_open_device ( pattern_clist_open_device )		1200718	0					
ANR	1200770	IdentifierDeclType	extern		1200718	0					
ANR	1200771	Identifier	dev_proc_open_device		1200718	1					
ANR	1200772	Identifier	pattern_clist_open_device		1200718	2					
ANR	1200773	IdentifierDeclStatement	gx_device_memory * mmask = NULL ;	1031:4:38490:38520	1200718	7	True				
ANR	1200774	IdentifierDecl	* mmask = NULL		1200718	0					
ANR	1200775	IdentifierDeclType	gx_device_memory *		1200718	0					
ANR	1200776	Identifier	mmask		1200718	1					
ANR	1200777	AssignmentExpression	* mmask = NULL		1200718	2		=			
ANR	1200778	Identifier	NULL		1200718	0					
ANR	1200779	Identifier	NULL		1200718	1					
ANR	1200780	IdentifierDeclStatement	gx_device_memory * mbits = NULL ;	1032:4:38526:38556	1200718	8	True				
ANR	1200781	IdentifierDecl	* mbits = NULL		1200718	0					
ANR	1200782	IdentifierDeclType	gx_device_memory *		1200718	0					
ANR	1200783	Identifier	mbits		1200718	1					
ANR	1200784	AssignmentExpression	* mbits = NULL		1200718	2		=			
ANR	1200785	Identifier	NULL		1200718	0					
ANR	1200786	Identifier	NULL		1200718	1					
ANR	1200787	IdentifierDeclStatement	gx_pattern_trans_t * trans = NULL ;	1033:4:38562:38594	1200718	9	True				
ANR	1200788	IdentifierDecl	* trans = NULL		1200718	0					
ANR	1200789	IdentifierDeclType	gx_pattern_trans_t *		1200718	0					
ANR	1200790	Identifier	trans		1200718	1					
ANR	1200791	AssignmentExpression	* trans = NULL		1200718	2		=			
ANR	1200792	Identifier	NULL		1200718	0					
ANR	1200793	Identifier	NULL		1200718	1					
ANR	1200794	IdentifierDeclStatement	"int size_b , size_c ;"	1034:4:38600:38618	1200718	10	True				
ANR	1200795	IdentifierDecl	size_b		1200718	0					
ANR	1200796	IdentifierDeclType	int		1200718	0					
ANR	1200797	Identifier	size_b		1200718	1					
ANR	1200798	IdentifierDecl	size_c		1200718	1					
ANR	1200799	IdentifierDeclType	int		1200718	0					
ANR	1200800	Identifier	size_c		1200718	1					
ANR	1200801	IfStatement	if ( code < 0 )		1200718	11					
ANR	1200802	Condition	code < 0	1036:8:38629:38636	1200718	0	True				
ANR	1200803	RelationalExpression	code < 0		1200718	0		<			
ANR	1200804	Identifier	code		1200718	0					
ANR	1200805	PrimaryExpression	0		1200718	1					
ANR	1200806	ReturnStatement	return code ;	1037:8:38647:38658	1200718	1	True				
ANR	1200807	Identifier	code		1200718	0					
ANR	1200808	ExpressionStatement	pcache = pgs -> pattern_cache	1038:4:38664:38691	1200718	12	True				
ANR	1200809	AssignmentExpression	pcache = pgs -> pattern_cache		1200718	0		=			
ANR	1200810	Identifier	pcache		1200718	0					
ANR	1200811	PtrMemberAccess	pgs -> pattern_cache		1200718	1					
ANR	1200812	Identifier	pgs		1200718	0					
ANR	1200813	Identifier	pattern_cache		1200718	1					
ANR	1200814	IfStatement	"if ( dev_proc ( fdev , open_device ) != pattern_clist_open_device )"		1200718	13					
ANR	1200815	Condition	"dev_proc ( fdev , open_device ) != pattern_clist_open_device"	1040:8:38702:38757	1200718	0	True				
ANR	1200816	EqualityExpression	"dev_proc ( fdev , open_device ) != pattern_clist_open_device"		1200718	0		!=			
ANR	1200817	CallExpression	"dev_proc ( fdev , open_device )"		1200718	0					
ANR	1200818	Callee	dev_proc		1200718	0					
ANR	1200819	Identifier	dev_proc		1200718	0					
ANR	1200820	ArgumentList	fdev		1200718	1					
ANR	1200821	Argument	fdev		1200718	0					
ANR	1200822	Identifier	fdev		1200718	0					
ANR	1200823	Argument	open_device		1200718	1					
ANR	1200824	Identifier	open_device		1200718	0					
ANR	1200825	Identifier	pattern_clist_open_device		1200718	1					
ANR	1200826	CompoundStatement		19:8:556:620	1200718	1					
ANR	1200827	IdentifierDeclStatement	gx_device_pattern_accum * padev = ( gx_device_pattern_accum * ) fdev ;	1041:8:38770:38834	1200718	0	True				
ANR	1200828	IdentifierDecl	* padev = ( gx_device_pattern_accum * ) fdev		1200718	0					
ANR	1200829	IdentifierDeclType	gx_device_pattern_accum *		1200718	0					
ANR	1200830	Identifier	padev		1200718	1					
ANR	1200831	AssignmentExpression	* padev = ( gx_device_pattern_accum * ) fdev		1200718	2		=			
ANR	1200832	Identifier	padev		1200718	0					
ANR	1200833	CastExpression	( gx_device_pattern_accum * ) fdev		1200718	1					
ANR	1200834	CastTarget	gx_device_pattern_accum *		1200718	0					
ANR	1200835	Identifier	fdev		1200718	1					
ANR	1200836	ExpressionStatement	mbits = padev -> bits	1043:8:38845:38864	1200718	1	True				
ANR	1200837	AssignmentExpression	mbits = padev -> bits		1200718	0		=			
ANR	1200838	Identifier	mbits		1200718	0					
ANR	1200839	PtrMemberAccess	padev -> bits		1200718	1					
ANR	1200840	Identifier	padev		1200718	0					
ANR	1200841	Identifier	bits		1200718	1					
ANR	1200842	ExpressionStatement	mmask = padev -> mask	1044:8:38874:38893	1200718	2	True				
ANR	1200843	AssignmentExpression	mmask = padev -> mask		1200718	0		=			
ANR	1200844	Identifier	mmask		1200718	0					
ANR	1200845	PtrMemberAccess	padev -> mask		1200718	1					
ANR	1200846	Identifier	padev		1200718	0					
ANR	1200847	Identifier	mask		1200718	1					
ANR	1200848	ExpressionStatement	pinst = padev -> instance	1045:8:38903:38926	1200718	3	True				
ANR	1200849	AssignmentExpression	pinst = padev -> instance		1200718	0		=			
ANR	1200850	Identifier	pinst		1200718	0					
ANR	1200851	PtrMemberAccess	padev -> instance		1200718	1					
ANR	1200852	Identifier	padev		1200718	0					
ANR	1200853	Identifier	instance		1200718	1					
ANR	1200854	ExpressionStatement	trans = padev -> transbuff	1046:8:38936:38960	1200718	4	True				
ANR	1200855	AssignmentExpression	trans = padev -> transbuff		1200718	0		=			
ANR	1200856	Identifier	trans		1200718	0					
ANR	1200857	PtrMemberAccess	padev -> transbuff		1200718	1					
ANR	1200858	Identifier	padev		1200718	0					
ANR	1200859	Identifier	transbuff		1200718	1					
ANR	1200860	IfStatement	if ( mmask != 0 )		1200718	5					
ANR	1200861	Condition	mmask != 0	1053:12:39160:39169	1200718	0	True				
ANR	1200862	EqualityExpression	mmask != 0		1200718	0		!=			
ANR	1200863	Identifier	mmask		1200718	0					
ANR	1200864	PrimaryExpression	0		1200718	1					
ANR	1200865	CompoundStatement		32:12:972:977	1200718	1					
ANR	1200866	IdentifierDeclStatement	int y ;	1054:12:39186:39191	1200718	0	True				
ANR	1200867	IdentifierDecl	y		1200718	0					
ANR	1200868	IdentifierDeclType	int		1200718	0					
ANR	1200869	Identifier	y		1200718	1					
ANR	1200870	ForStatement	for ( y = 0 ; y < mmask -> height ; y ++ )		1200718	1					
ANR	1200871	ForInit	y = 0 ;	1056:17:39211:39216	1200718	0	True				
ANR	1200872	AssignmentExpression	y = 0		1200718	0		=			
ANR	1200873	Identifier	y		1200718	0					
ANR	1200874	PrimaryExpression	0		1200718	1					
ANR	1200875	Condition	y < mmask -> height	1056:24:39218:39234	1200718	1	True				
ANR	1200876	RelationalExpression	y < mmask -> height		1200718	0		<			
ANR	1200877	Identifier	y		1200718	0					
ANR	1200878	PtrMemberAccess	mmask -> height		1200718	1					
ANR	1200879	Identifier	mmask		1200718	0					
ANR	1200880	Identifier	height		1200718	1					
ANR	1200881	PostIncDecOperationExpression	y ++	1056:43:39237:39239	1200718	2	True				
ANR	1200882	Identifier	y		1200718	0					
ANR	1200883	IncDec	++		1200718	1					
ANR	1200884	CompoundStatement		36:16:1106:1111	1200718	3					
ANR	1200885	IdentifierDeclStatement	"const byte * row = scan_line_base ( mmask , y ) ;"	1057:16:39260:39302	1200718	0	True				
ANR	1200886	IdentifierDecl	"* row = scan_line_base ( mmask , y )"		1200718	0					
ANR	1200887	IdentifierDeclType	const byte *		1200718	0					
ANR	1200888	Identifier	row		1200718	1					
ANR	1200889	AssignmentExpression	"* row = scan_line_base ( mmask , y )"		1200718	2		=			
ANR	1200890	Identifier	row		1200718	0					
ANR	1200891	CallExpression	"scan_line_base ( mmask , y )"		1200718	1					
ANR	1200892	Callee	scan_line_base		1200718	0					
ANR	1200893	Identifier	scan_line_base		1200718	0					
ANR	1200894	ArgumentList	mmask		1200718	1					
ANR	1200895	Argument	mmask		1200718	0					
ANR	1200896	Identifier	mmask		1200718	0					
ANR	1200897	Argument	y		1200718	1					
ANR	1200898	Identifier	y		1200718	0					
ANR	1200899	IdentifierDeclStatement	int w ;	1058:16:39320:39325	1200718	1	True				
ANR	1200900	IdentifierDecl	w		1200718	0					
ANR	1200901	IdentifierDeclType	int		1200718	0					
ANR	1200902	Identifier	w		1200718	1					
ANR	1200903	ForStatement	for ( w = mmask -> width ; w > 8 ; w -= 8 )		1200718	2					
ANR	1200904	ForInit	w = mmask -> width ;	1060:21:39349:39365	1200718	0	True				
ANR	1200905	AssignmentExpression	w = mmask -> width		1200718	0		=			
ANR	1200906	Identifier	w		1200718	0					
ANR	1200907	PtrMemberAccess	mmask -> width		1200718	1					
ANR	1200908	Identifier	mmask		1200718	0					
ANR	1200909	Identifier	width		1200718	1					
ANR	1200910	Condition	w > 8	1060:39:39367:39371	1200718	1	True				
ANR	1200911	RelationalExpression	w > 8		1200718	0		>			
ANR	1200912	Identifier	w		1200718	0					
ANR	1200913	PrimaryExpression	8		1200718	1					
ANR	1200914	AssignmentExpression	w -= 8	1060:46:39374:39379	1200718	2	True	-=			
ANR	1200915	Identifier	w		1200718	0					
ANR	1200916	PrimaryExpression	8		1200718	1					
ANR	1200917	IfStatement	if ( * row ++ != 0xff )		1200718	3					
ANR	1200918	Condition	* row ++ != 0xff	1061:24:39406:39419	1200718	0	True				
ANR	1200919	EqualityExpression	* row ++ != 0xff		1200718	0		!=			
ANR	1200920	UnaryOperationExpression	* row ++		1200718	0					
ANR	1200921	UnaryOperator	*		1200718	0					
ANR	1200922	PostIncDecOperationExpression	row ++		1200718	1					
ANR	1200923	Identifier	row		1200718	0					
ANR	1200924	IncDec	++		1200718	1					
ANR	1200925	PrimaryExpression	0xff		1200718	1					
ANR	1200926	GotoStatement	goto keep ;	1062:24:39446:39455	1200718	1	True				
ANR	1200927	Identifier	keep		1200718	0					
ANR	1200928	IfStatement	if ( ( * row | ( 0xff >> w ) ) != 0xff )		1200718	3					
ANR	1200929	Condition	( * row | ( 0xff >> w ) ) != 0xff	1063:20:39477:39504	1200718	0	True				
ANR	1200930	EqualityExpression	( * row | ( 0xff >> w ) ) != 0xff		1200718	0		!=			
ANR	1200931	InclusiveOrExpression	* row | ( 0xff >> w )		1200718	0		|			
ANR	1200932	UnaryOperationExpression	* row		1200718	0					
ANR	1200933	UnaryOperator	*		1200718	0					
ANR	1200934	Identifier	row		1200718	1					
ANR	1200935	ShiftExpression	0xff >> w		1200718	1		>>			
ANR	1200936	PrimaryExpression	0xff		1200718	0					
ANR	1200937	Identifier	w		1200718	1					
ANR	1200938	PrimaryExpression	0xff		1200718	1					
ANR	1200939	GotoStatement	goto keep ;	1064:20:39527:39536	1200718	1	True				
ANR	1200940	Identifier	keep		1200718	0					
ANR	1200941	ExpressionStatement	mmask = 0	1067:12:39604:39613	1200718	2	True				
ANR	1200942	AssignmentExpression	mmask = 0		1200718	0		=			
ANR	1200943	Identifier	mmask		1200718	0					
ANR	1200944	PrimaryExpression	0		1200718	1					
ANR	1200945	Label	keep :	1068:10:39625:39629	1200718	3	True				
ANR	1200946	Identifier	keep		1200718	0					
ANR	1200947	ExpressionStatement		1068:15:39630:39630	1200718	4	True				
ANR	1200948	IfStatement	if ( mbits != 0 )		1200718	6					
ANR	1200949	Condition	mbits != 0	1071:12:39730:39739	1200718	0	True				
ANR	1200950	EqualityExpression	mbits != 0		1200718	0		!=			
ANR	1200951	Identifier	mbits		1200718	0					
ANR	1200952	PrimaryExpression	0		1200718	1					
ANR	1200953	ExpressionStatement	"gdev_mem_bitmap_size ( mbits , & used )"	1072:12:39754:39788	1200718	1	True				
ANR	1200954	CallExpression	"gdev_mem_bitmap_size ( mbits , & used )"		1200718	0					
ANR	1200955	Callee	gdev_mem_bitmap_size		1200718	0					
ANR	1200956	Identifier	gdev_mem_bitmap_size		1200718	0					
ANR	1200957	ArgumentList	mbits		1200718	1					
ANR	1200958	Argument	mbits		1200718	0					
ANR	1200959	Identifier	mbits		1200718	0					
ANR	1200960	Argument	& used		1200718	1					
ANR	1200961	UnaryOperationExpression	& used		1200718	0					
ANR	1200962	UnaryOperator	&		1200718	0					
ANR	1200963	Identifier	used		1200718	1					
ANR	1200964	IfStatement	if ( mmask != 0 )		1200718	7					
ANR	1200965	Condition	mmask != 0	1073:12:39802:39811	1200718	0	True				
ANR	1200966	EqualityExpression	mmask != 0		1200718	0		!=			
ANR	1200967	Identifier	mmask		1200718	0					
ANR	1200968	PrimaryExpression	0		1200718	1					
ANR	1200969	CompoundStatement		51:24:1600:1600	1200718	1					
ANR	1200970	ExpressionStatement	"gdev_mem_bitmap_size ( mmask , & mask_used )"	1074:12:39828:39867	1200718	0	True				
ANR	1200971	CallExpression	"gdev_mem_bitmap_size ( mmask , & mask_used )"		1200718	0					
ANR	1200972	Callee	gdev_mem_bitmap_size		1200718	0					
ANR	1200973	Identifier	gdev_mem_bitmap_size		1200718	0					
ANR	1200974	ArgumentList	mmask		1200718	1					
ANR	1200975	Argument	mmask		1200718	0					
ANR	1200976	Identifier	mmask		1200718	0					
ANR	1200977	Argument	& mask_used		1200718	1					
ANR	1200978	UnaryOperationExpression	& mask_used		1200718	0					
ANR	1200979	UnaryOperator	&		1200718	0					
ANR	1200980	Identifier	mask_used		1200718	1					
ANR	1200981	ExpressionStatement	used += mask_used	1075:12:39881:39898	1200718	1	True				
ANR	1200982	AssignmentExpression	used += mask_used		1200718	0		+=			
ANR	1200983	Identifier	used		1200718	0					
ANR	1200984	Identifier	mask_used		1200718	1					
ANR	1200985	IfStatement	if ( trans != 0 )		1200718	8					
ANR	1200986	Condition	trans != 0	1077:12:39922:39931	1200718	0	True				
ANR	1200987	EqualityExpression	trans != 0		1200718	0		!=			
ANR	1200988	Identifier	trans		1200718	0					
ANR	1200989	PrimaryExpression	0		1200718	1					
ANR	1200990	CompoundStatement		55:24:1720:1720	1200718	1					
ANR	1200991	ExpressionStatement	trans_used = trans -> planestride * trans -> n_chan	1078:12:39948:39993	1200718	0	True				
ANR	1200992	AssignmentExpression	trans_used = trans -> planestride * trans -> n_chan		1200718	0		=			
ANR	1200993	Identifier	trans_used		1200718	0					
ANR	1200994	MultiplicativeExpression	trans -> planestride * trans -> n_chan		1200718	1		*			
ANR	1200995	PtrMemberAccess	trans -> planestride		1200718	0					
ANR	1200996	Identifier	trans		1200718	0					
ANR	1200997	Identifier	planestride		1200718	1					
ANR	1200998	PtrMemberAccess	trans -> n_chan		1200718	1					
ANR	1200999	Identifier	trans		1200718	0					
ANR	1201000	Identifier	n_chan		1200718	1					
ANR	1201001	ExpressionStatement	used += trans_used	1079:12:40007:40025	1200718	1	True				
ANR	1201002	AssignmentExpression	used += trans_used		1200718	0		+=			
ANR	1201003	Identifier	used		1200718	0					
ANR	1201004	Identifier	trans_used		1200718	1					
ANR	1201005	ElseStatement	else		1200718	0					
ANR	1201006	CompoundStatement		61:8:1901:1964	1200718	0					
ANR	1201007	IdentifierDeclStatement	gx_device_clist * cdev = ( gx_device_clist * ) fdev ;	1082:8:40058:40105	1200718	0	True				
ANR	1201008	IdentifierDecl	* cdev = ( gx_device_clist * ) fdev		1200718	0					
ANR	1201009	IdentifierDeclType	gx_device_clist *		1200718	0					
ANR	1201010	Identifier	cdev		1200718	1					
ANR	1201011	AssignmentExpression	* cdev = ( gx_device_clist * ) fdev		1200718	2		=			
ANR	1201012	Identifier	cdev		1200718	0					
ANR	1201013	CastExpression	( gx_device_clist * ) fdev		1200718	1					
ANR	1201014	CastTarget	gx_device_clist *		1200718	0					
ANR	1201015	Identifier	fdev		1200718	1					
ANR	1201016	IdentifierDeclStatement	gx_device_clist_writer * cldev = ( gx_device_clist_writer * ) cdev ;	1083:8:40115:40178	1200718	1	True				
ANR	1201017	IdentifierDecl	* cldev = ( gx_device_clist_writer * ) cdev		1200718	0					
ANR	1201018	IdentifierDeclType	gx_device_clist_writer *		1200718	0					
ANR	1201019	Identifier	cldev		1200718	1					
ANR	1201020	AssignmentExpression	* cldev = ( gx_device_clist_writer * ) cdev		1200718	2		=			
ANR	1201021	Identifier	cldev		1200718	0					
ANR	1201022	CastExpression	( gx_device_clist_writer * ) cdev		1200718	1					
ANR	1201023	CastTarget	gx_device_clist_writer *		1200718	0					
ANR	1201024	Identifier	cdev		1200718	1					
ANR	1201025	ExpressionStatement	code = clist_end_page ( cldev )	1085:8:40189:40217	1200718	2	True				
ANR	1201026	AssignmentExpression	code = clist_end_page ( cldev )		1200718	0		=			
ANR	1201027	Identifier	code		1200718	0					
ANR	1201028	CallExpression	clist_end_page ( cldev )		1200718	1					
ANR	1201029	Callee	clist_end_page		1200718	0					
ANR	1201030	Identifier	clist_end_page		1200718	0					
ANR	1201031	ArgumentList	cldev		1200718	1					
ANR	1201032	Argument	cldev		1200718	0					
ANR	1201033	Identifier	cldev		1200718	0					
ANR	1201034	IfStatement	if ( code < 0 )		1200718	3					
ANR	1201035	Condition	code < 0	1086:12:40231:40238	1200718	0	True				
ANR	1201036	RelationalExpression	code < 0		1200718	0		<			
ANR	1201037	Identifier	code		1200718	0					
ANR	1201038	PrimaryExpression	0		1200718	1					
ANR	1201039	ReturnStatement	return code ;	1087:12:40253:40264	1200718	1	True				
ANR	1201040	Identifier	code		1200718	0					
ANR	1201041	ExpressionStatement	pinst = cdev -> writer . pinst	1088:8:40274:40300	1200718	4	True				
ANR	1201042	AssignmentExpression	pinst = cdev -> writer . pinst		1200718	0		=			
ANR	1201043	Identifier	pinst		1200718	0					
ANR	1201044	MemberAccess	cdev -> writer . pinst		1200718	1					
ANR	1201045	PtrMemberAccess	cdev -> writer		1200718	0					
ANR	1201046	Identifier	cdev		1200718	0					
ANR	1201047	Identifier	writer		1200718	1					
ANR	1201048	Identifier	pinst		1200718	1					
ANR	1201049	ExpressionStatement	"size_b = clist_data_size ( cdev , 0 )"	1089:8:40310:40343	1200718	5	True				
ANR	1201050	AssignmentExpression	"size_b = clist_data_size ( cdev , 0 )"		1200718	0		=			
ANR	1201051	Identifier	size_b		1200718	0					
ANR	1201052	CallExpression	"clist_data_size ( cdev , 0 )"		1200718	1					
ANR	1201053	Callee	clist_data_size		1200718	0					
ANR	1201054	Identifier	clist_data_size		1200718	0					
ANR	1201055	ArgumentList	cdev		1200718	1					
ANR	1201056	Argument	cdev		1200718	0					
ANR	1201057	Identifier	cdev		1200718	0					
ANR	1201058	Argument	0		1200718	1					
ANR	1201059	PrimaryExpression	0		1200718	0					
ANR	1201060	IfStatement	if ( size_b < 0 )		1200718	6					
ANR	1201061	Condition	size_b < 0	1090:12:40357:40366	1200718	0	True				
ANR	1201062	RelationalExpression	size_b < 0		1200718	0		<			
ANR	1201063	Identifier	size_b		1200718	0					
ANR	1201064	PrimaryExpression	0		1200718	1					
ANR	1201065	ExpressionStatement	return_error ( gs_error_unregistered )	1091:12:40381:40416	1200718	1	True				
ANR	1201066	CallExpression	return_error ( gs_error_unregistered )		1200718	0					
ANR	1201067	Callee	return_error		1200718	0					
ANR	1201068	Identifier	return_error		1200718	0					
ANR	1201069	ArgumentList	gs_error_unregistered		1200718	1					
ANR	1201070	Argument	gs_error_unregistered		1200718	0					
ANR	1201071	Identifier	gs_error_unregistered		1200718	0					
ANR	1201072	ExpressionStatement	"size_c = clist_data_size ( cdev , 1 )"	1092:8:40426:40459	1200718	7	True				
ANR	1201073	AssignmentExpression	"size_c = clist_data_size ( cdev , 1 )"		1200718	0		=			
ANR	1201074	Identifier	size_c		1200718	0					
ANR	1201075	CallExpression	"clist_data_size ( cdev , 1 )"		1200718	1					
ANR	1201076	Callee	clist_data_size		1200718	0					
ANR	1201077	Identifier	clist_data_size		1200718	0					
ANR	1201078	ArgumentList	cdev		1200718	1					
ANR	1201079	Argument	cdev		1200718	0					
ANR	1201080	Identifier	cdev		1200718	0					
ANR	1201081	Argument	1		1200718	1					
ANR	1201082	PrimaryExpression	1		1200718	0					
ANR	1201083	IfStatement	if ( size_c < 0 )		1200718	8					
ANR	1201084	Condition	size_c < 0	1093:12:40473:40482	1200718	0	True				
ANR	1201085	RelationalExpression	size_c < 0		1200718	0		<			
ANR	1201086	Identifier	size_c		1200718	0					
ANR	1201087	PrimaryExpression	0		1200718	1					
ANR	1201088	ExpressionStatement	return_error ( gs_error_unregistered )	1094:12:40497:40532	1200718	1	True				
ANR	1201089	CallExpression	return_error ( gs_error_unregistered )		1200718	0					
ANR	1201090	Callee	return_error		1200718	0					
ANR	1201091	Identifier	return_error		1200718	0					
ANR	1201092	ArgumentList	gs_error_unregistered		1200718	1					
ANR	1201093	Argument	gs_error_unregistered		1200718	0					
ANR	1201094	Identifier	gs_error_unregistered		1200718	0					
ANR	1201095	ExpressionStatement	used = size_b + size_c	1096:8:40636:40658	1200718	9	True				
ANR	1201096	AssignmentExpression	used = size_b + size_c		1200718	0		=			
ANR	1201097	Identifier	used		1200718	0					
ANR	1201098	AdditiveExpression	size_b + size_c		1200718	1		+			
ANR	1201099	Identifier	size_b		1200718	0					
ANR	1201100	Identifier	size_c		1200718	1					
ANR	1201101	ExpressionStatement	id = pinst -> id	1098:4:40670:40684	1200718	14	True				
ANR	1201102	AssignmentExpression	id = pinst -> id		1200718	0		=			
ANR	1201103	Identifier	id		1200718	0					
ANR	1201104	PtrMemberAccess	pinst -> id		1200718	1					
ANR	1201105	Identifier	pinst		1200718	0					
ANR	1201106	Identifier	id		1200718	1					
ANR	1201107	ExpressionStatement	ctile = & pcache -> tiles [ id % pcache -> num_tiles ]	1099:4:40690:40736	1200718	15	True				
ANR	1201108	AssignmentExpression	ctile = & pcache -> tiles [ id % pcache -> num_tiles ]		1200718	0		=			
ANR	1201109	Identifier	ctile		1200718	0					
ANR	1201110	UnaryOperationExpression	& pcache -> tiles [ id % pcache -> num_tiles ]		1200718	1					
ANR	1201111	UnaryOperator	&		1200718	0					
ANR	1201112	ArrayIndexing	pcache -> tiles [ id % pcache -> num_tiles ]		1200718	1					
ANR	1201113	PtrMemberAccess	pcache -> tiles		1200718	0					
ANR	1201114	Identifier	pcache		1200718	0					
ANR	1201115	Identifier	tiles		1200718	1					
ANR	1201116	MultiplicativeExpression	id % pcache -> num_tiles		1200718	1		%			
ANR	1201117	Identifier	id		1200718	0					
ANR	1201118	PtrMemberAccess	pcache -> num_tiles		1200718	1					
ANR	1201119	Identifier	pcache		1200718	0					
ANR	1201120	Identifier	num_tiles		1200718	1					
ANR	1201121	ExpressionStatement	"gx_pattern_cache_free_entry ( pcache , ctile )"	1100:4:40742:40784	1200718	16	True				
ANR	1201122	CallExpression	"gx_pattern_cache_free_entry ( pcache , ctile )"		1200718	0					
ANR	1201123	Callee	gx_pattern_cache_free_entry		1200718	0					
ANR	1201124	Identifier	gx_pattern_cache_free_entry		1200718	0					
ANR	1201125	ArgumentList	pcache		1200718	1					
ANR	1201126	Argument	pcache		1200718	0					
ANR	1201127	Identifier	pcache		1200718	0					
ANR	1201128	Argument	ctile		1200718	1					
ANR	1201129	Identifier	ctile		1200718	0					
ANR	1201130	ExpressionStatement	ctile -> id = id	1101:4:40841:40855	1200718	17	True				
ANR	1201131	AssignmentExpression	ctile -> id = id		1200718	0		=			
ANR	1201132	PtrMemberAccess	ctile -> id		1200718	0					
ANR	1201133	Identifier	ctile		1200718	0					
ANR	1201134	Identifier	id		1200718	1					
ANR	1201135	Identifier	id		1200718	1					
ANR	1201136	ExpressionStatement	ctile -> is_planar = pinst -> is_planar	1102:4:40861:40896	1200718	18	True				
ANR	1201137	AssignmentExpression	ctile -> is_planar = pinst -> is_planar		1200718	0		=			
ANR	1201138	PtrMemberAccess	ctile -> is_planar		1200718	0					
ANR	1201139	Identifier	ctile		1200718	0					
ANR	1201140	Identifier	is_planar		1200718	1					
ANR	1201141	PtrMemberAccess	pinst -> is_planar		1200718	1					
ANR	1201142	Identifier	pinst		1200718	0					
ANR	1201143	Identifier	is_planar		1200718	1					
ANR	1201144	ExpressionStatement	ctile -> depth = fdev -> color_info . depth	1103:4:40902:40939	1200718	19	True				
ANR	1201145	AssignmentExpression	ctile -> depth = fdev -> color_info . depth		1200718	0		=			
ANR	1201146	PtrMemberAccess	ctile -> depth		1200718	0					
ANR	1201147	Identifier	ctile		1200718	0					
ANR	1201148	Identifier	depth		1200718	1					
ANR	1201149	MemberAccess	fdev -> color_info . depth		1200718	1					
ANR	1201150	PtrMemberAccess	fdev -> color_info		1200718	0					
ANR	1201151	Identifier	fdev		1200718	0					
ANR	1201152	Identifier	color_info		1200718	1					
ANR	1201153	Identifier	depth		1200718	1					
ANR	1201154	ExpressionStatement	ctile -> uid = pinst -> templat . uid	1104:4:40945:40976	1200718	20	True				
ANR	1201155	AssignmentExpression	ctile -> uid = pinst -> templat . uid		1200718	0		=			
ANR	1201156	PtrMemberAccess	ctile -> uid		1200718	0					
ANR	1201157	Identifier	ctile		1200718	0					
ANR	1201158	Identifier	uid		1200718	1					
ANR	1201159	MemberAccess	pinst -> templat . uid		1200718	1					
ANR	1201160	PtrMemberAccess	pinst -> templat		1200718	0					
ANR	1201161	Identifier	pinst		1200718	0					
ANR	1201162	Identifier	templat		1200718	1					
ANR	1201163	Identifier	uid		1200718	1					
ANR	1201164	ExpressionStatement	ctile -> tiling_type = pinst -> templat . TilingType	1105:4:40982:41028	1200718	21	True				
ANR	1201165	AssignmentExpression	ctile -> tiling_type = pinst -> templat . TilingType		1200718	0		=			
ANR	1201166	PtrMemberAccess	ctile -> tiling_type		1200718	0					
ANR	1201167	Identifier	ctile		1200718	0					
ANR	1201168	Identifier	tiling_type		1200718	1					
ANR	1201169	MemberAccess	pinst -> templat . TilingType		1200718	1					
ANR	1201170	PtrMemberAccess	pinst -> templat		1200718	0					
ANR	1201171	Identifier	pinst		1200718	0					
ANR	1201172	Identifier	templat		1200718	1					
ANR	1201173	Identifier	TilingType		1200718	1					
ANR	1201174	ExpressionStatement	ctile -> step_matrix = pinst -> step_matrix	1106:4:41034:41073	1200718	22	True				
ANR	1201175	AssignmentExpression	ctile -> step_matrix = pinst -> step_matrix		1200718	0		=			
ANR	1201176	PtrMemberAccess	ctile -> step_matrix		1200718	0					
ANR	1201177	Identifier	ctile		1200718	0					
ANR	1201178	Identifier	step_matrix		1200718	1					
ANR	1201179	PtrMemberAccess	pinst -> step_matrix		1200718	1					
ANR	1201180	Identifier	pinst		1200718	0					
ANR	1201181	Identifier	step_matrix		1200718	1					
ANR	1201182	ExpressionStatement	ctile -> bbox = pinst -> bbox	1107:4:41079:41104	1200718	23	True				
ANR	1201183	AssignmentExpression	ctile -> bbox = pinst -> bbox		1200718	0		=			
ANR	1201184	PtrMemberAccess	ctile -> bbox		1200718	0					
ANR	1201185	Identifier	ctile		1200718	0					
ANR	1201186	Identifier	bbox		1200718	1					
ANR	1201187	PtrMemberAccess	pinst -> bbox		1200718	1					
ANR	1201188	Identifier	pinst		1200718	0					
ANR	1201189	Identifier	bbox		1200718	1					
ANR	1201190	ExpressionStatement	ctile -> is_simple = pinst -> is_simple	1108:4:41110:41145	1200718	24	True				
ANR	1201191	AssignmentExpression	ctile -> is_simple = pinst -> is_simple		1200718	0		=			
ANR	1201192	PtrMemberAccess	ctile -> is_simple		1200718	0					
ANR	1201193	Identifier	ctile		1200718	0					
ANR	1201194	Identifier	is_simple		1200718	1					
ANR	1201195	PtrMemberAccess	pinst -> is_simple		1200718	1					
ANR	1201196	Identifier	pinst		1200718	0					
ANR	1201197	Identifier	is_simple		1200718	1					
ANR	1201198	ExpressionStatement	ctile -> has_overlap = pinst -> has_overlap	1109:4:41151:41190	1200718	25	True				
ANR	1201199	AssignmentExpression	ctile -> has_overlap = pinst -> has_overlap		1200718	0		=			
ANR	1201200	PtrMemberAccess	ctile -> has_overlap		1200718	0					
ANR	1201201	Identifier	ctile		1200718	0					
ANR	1201202	Identifier	has_overlap		1200718	1					
ANR	1201203	PtrMemberAccess	pinst -> has_overlap		1200718	1					
ANR	1201204	Identifier	pinst		1200718	0					
ANR	1201205	Identifier	has_overlap		1200718	1					
ANR	1201206	ExpressionStatement	ctile -> is_dummy = false	1110:4:41196:41219	1200718	26	True				
ANR	1201207	AssignmentExpression	ctile -> is_dummy = false		1200718	0		=			
ANR	1201208	PtrMemberAccess	ctile -> is_dummy		1200718	0					
ANR	1201209	Identifier	ctile		1200718	0					
ANR	1201210	Identifier	is_dummy		1200718	1					
ANR	1201211	Identifier	false		1200718	1					
ANR	1201212	IfStatement	if ( pinst -> templat . uses_transparency )		1200718	27					
ANR	1201213	Condition	pinst -> templat . uses_transparency	1111:8:41229:41260	1200718	0	True				
ANR	1201214	MemberAccess	pinst -> templat . uses_transparency		1200718	0					
ANR	1201215	PtrMemberAccess	pinst -> templat		1200718	0					
ANR	1201216	Identifier	pinst		1200718	0					
ANR	1201217	Identifier	templat		1200718	1					
ANR	1201218	Identifier	uses_transparency		1200718	1					
ANR	1201219	ExpressionStatement	ctile -> blending_mode = ( ( pdf14_device * ) ( pgs -> device ) ) -> blend_mode	1112:8:41271:41337	1200718	1	True				
ANR	1201220	AssignmentExpression	ctile -> blending_mode = ( ( pdf14_device * ) ( pgs -> device ) ) -> blend_mode		1200718	0		=			
ANR	1201221	PtrMemberAccess	ctile -> blending_mode		1200718	0					
ANR	1201222	Identifier	ctile		1200718	0					
ANR	1201223	Identifier	blending_mode		1200718	1					
ANR	1201224	PtrMemberAccess	( ( pdf14_device * ) ( pgs -> device ) ) -> blend_mode		1200718	1					
ANR	1201225	CastExpression	( pdf14_device * ) ( pgs -> device )		1200718	0					
ANR	1201226	CastTarget	pdf14_device *		1200718	0					
ANR	1201227	PtrMemberAccess	pgs -> device		1200718	1					
ANR	1201228	Identifier	pgs		1200718	0					
ANR	1201229	Identifier	device		1200718	1					
ANR	1201230	Identifier	blend_mode		1200718	1					
ANR	1201231	ElseStatement	else		1200718	0					
ANR	1201232	ExpressionStatement	ctile -> blending_mode = 0	1114:8:41356:41380	1200718	0	True				
ANR	1201233	AssignmentExpression	ctile -> blending_mode = 0		1200718	0		=			
ANR	1201234	PtrMemberAccess	ctile -> blending_mode		1200718	0					
ANR	1201235	Identifier	ctile		1200718	0					
ANR	1201236	Identifier	blending_mode		1200718	1					
ANR	1201237	PrimaryExpression	0		1200718	1					
ANR	1201238	IfStatement	"if ( dev_proc ( fdev , open_device ) != pattern_clist_open_device )"		1200718	28					
ANR	1201239	Condition	"dev_proc ( fdev , open_device ) != pattern_clist_open_device"	1115:8:41390:41445	1200718	0	True				
ANR	1201240	EqualityExpression	"dev_proc ( fdev , open_device ) != pattern_clist_open_device"		1200718	0		!=			
ANR	1201241	CallExpression	"dev_proc ( fdev , open_device )"		1200718	0					
ANR	1201242	Callee	dev_proc		1200718	0					
ANR	1201243	Identifier	dev_proc		1200718	0					
ANR	1201244	ArgumentList	fdev		1200718	1					
ANR	1201245	Argument	fdev		1200718	0					
ANR	1201246	Identifier	fdev		1200718	0					
ANR	1201247	Argument	open_device		1200718	1					
ANR	1201248	Identifier	open_device		1200718	0					
ANR	1201249	Identifier	pattern_clist_open_device		1200718	1					
ANR	1201250	CompoundStatement		93:66:3234:3234	1200718	1					
ANR	1201251	IfStatement	if ( mbits != 0 )		1200718	0					
ANR	1201252	Condition	mbits != 0	1116:12:41462:41471	1200718	0	True				
ANR	1201253	EqualityExpression	mbits != 0		1200718	0		!=			
ANR	1201254	Identifier	mbits		1200718	0					
ANR	1201255	PrimaryExpression	0		1200718	1					
ANR	1201256	CompoundStatement		94:24:3260:3260	1200718	1					
ANR	1201257	ExpressionStatement	"make_bitmap ( & ctile -> tbits , mbits , gs_next_ids ( pgs -> memory , 1 ) )"	1117:12:41488:41550	1200718	0	True				
ANR	1201258	CallExpression	"make_bitmap ( & ctile -> tbits , mbits , gs_next_ids ( pgs -> memory , 1 ) )"		1200718	0					
ANR	1201259	Callee	make_bitmap		1200718	0					
ANR	1201260	Identifier	make_bitmap		1200718	0					
ANR	1201261	ArgumentList	& ctile -> tbits		1200718	1					
ANR	1201262	Argument	& ctile -> tbits		1200718	0					
ANR	1201263	UnaryOperationExpression	& ctile -> tbits		1200718	0					
ANR	1201264	UnaryOperator	&		1200718	0					
ANR	1201265	PtrMemberAccess	ctile -> tbits		1200718	1					
ANR	1201266	Identifier	ctile		1200718	0					
ANR	1201267	Identifier	tbits		1200718	1					
ANR	1201268	Argument	mbits		1200718	1					
ANR	1201269	Identifier	mbits		1200718	0					
ANR	1201270	Argument	"gs_next_ids ( pgs -> memory , 1 )"		1200718	2					
ANR	1201271	CallExpression	"gs_next_ids ( pgs -> memory , 1 )"		1200718	0					
ANR	1201272	Callee	gs_next_ids		1200718	0					
ANR	1201273	Identifier	gs_next_ids		1200718	0					
ANR	1201274	ArgumentList	pgs -> memory		1200718	1					
ANR	1201275	Argument	pgs -> memory		1200718	0					
ANR	1201276	PtrMemberAccess	pgs -> memory		1200718	0					
ANR	1201277	Identifier	pgs		1200718	0					
ANR	1201278	Identifier	memory		1200718	1					
ANR	1201279	Argument	1		1200718	1					
ANR	1201280	PrimaryExpression	1		1200718	0					
ANR	1201281	ExpressionStatement	mbits -> bitmap_memory = 0	1118:12:41564:41588	1200718	1	True				
ANR	1201282	AssignmentExpression	mbits -> bitmap_memory = 0		1200718	0		=			
ANR	1201283	PtrMemberAccess	mbits -> bitmap_memory		1200718	0					
ANR	1201284	Identifier	mbits		1200718	0					
ANR	1201285	Identifier	bitmap_memory		1200718	1					
ANR	1201286	PrimaryExpression	0		1200718	1					
ANR	1201287	ElseStatement	else		1200718	0					
ANR	1201288	ExpressionStatement	ctile -> tbits . data = 0	1120:12:41645:41666	1200718	0	True				
ANR	1201289	AssignmentExpression	ctile -> tbits . data = 0		1200718	0		=			
ANR	1201290	MemberAccess	ctile -> tbits . data		1200718	0					
ANR	1201291	PtrMemberAccess	ctile -> tbits		1200718	0					
ANR	1201292	Identifier	ctile		1200718	0					
ANR	1201293	Identifier	tbits		1200718	1					
ANR	1201294	Identifier	data		1200718	1					
ANR	1201295	PrimaryExpression	0		1200718	1					
ANR	1201296	IfStatement	if ( mmask != 0 )		1200718	1					
ANR	1201297	Condition	mmask != 0	1121:12:41680:41689	1200718	0	True				
ANR	1201298	EqualityExpression	mmask != 0		1200718	0		!=			
ANR	1201299	Identifier	mmask		1200718	0					
ANR	1201300	PrimaryExpression	0		1200718	1					
ANR	1201301	CompoundStatement		99:24:3478:3478	1200718	1					
ANR	1201302	ExpressionStatement	"make_bitmap ( & ctile -> tmask , mmask , id )"	1122:12:41706:41743	1200718	0	True				
ANR	1201303	CallExpression	"make_bitmap ( & ctile -> tmask , mmask , id )"		1200718	0					
ANR	1201304	Callee	make_bitmap		1200718	0					
ANR	1201305	Identifier	make_bitmap		1200718	0					
ANR	1201306	ArgumentList	& ctile -> tmask		1200718	1					
ANR	1201307	Argument	& ctile -> tmask		1200718	0					
ANR	1201308	UnaryOperationExpression	& ctile -> tmask		1200718	0					
ANR	1201309	UnaryOperator	&		1200718	0					
ANR	1201310	PtrMemberAccess	ctile -> tmask		1200718	1					
ANR	1201311	Identifier	ctile		1200718	0					
ANR	1201312	Identifier	tmask		1200718	1					
ANR	1201313	Argument	mmask		1200718	1					
ANR	1201314	Identifier	mmask		1200718	0					
ANR	1201315	Argument	id		1200718	2					
ANR	1201316	Identifier	id		1200718	0					
ANR	1201317	ExpressionStatement	mmask -> bitmap_memory = 0	1123:12:41757:41781	1200718	1	True				
ANR	1201318	AssignmentExpression	mmask -> bitmap_memory = 0		1200718	0		=			
ANR	1201319	PtrMemberAccess	mmask -> bitmap_memory		1200718	0					
ANR	1201320	Identifier	mmask		1200718	0					
ANR	1201321	Identifier	bitmap_memory		1200718	1					
ANR	1201322	PrimaryExpression	0		1200718	1					
ANR	1201323	ElseStatement	else		1200718	0					
ANR	1201324	ExpressionStatement	ctile -> tmask . data = 0	1125:12:41838:41859	1200718	0	True				
ANR	1201325	AssignmentExpression	ctile -> tmask . data = 0		1200718	0		=			
ANR	1201326	MemberAccess	ctile -> tmask . data		1200718	0					
ANR	1201327	PtrMemberAccess	ctile -> tmask		1200718	0					
ANR	1201328	Identifier	ctile		1200718	0					
ANR	1201329	Identifier	tmask		1200718	1					
ANR	1201330	Identifier	data		1200718	1					
ANR	1201331	PrimaryExpression	0		1200718	1					
ANR	1201332	IfStatement	if ( trans != 0 )		1200718	2					
ANR	1201333	Condition	trans != 0	1126:12:41873:41882	1200718	0	True				
ANR	1201334	EqualityExpression	trans != 0		1200718	0		!=			
ANR	1201335	Identifier	trans		1200718	0					
ANR	1201336	PrimaryExpression	0		1200718	1					
ANR	1201337	CompoundStatement		104:24:3671:3671	1200718	1					
ANR	1201338	ExpressionStatement	"if_debug2m ( 'v' , pgs -> memory , ""[v*] Adding trans pattern to cache, uid = %ld id = %ld \\n"" , ctile -> uid . id , ctile -> id )"	1127:12:41899:42060	1200718	0	True				
ANR	1201339	CallExpression	"if_debug2m ( 'v' , pgs -> memory , ""[v*] Adding trans pattern to cache, uid = %ld id = %ld \\n"" , ctile -> uid . id , ctile -> id )"		1200718	0					
ANR	1201340	Callee	if_debug2m		1200718	0					
ANR	1201341	Identifier	if_debug2m		1200718	0					
ANR	1201342	ArgumentList	'v'		1200718	1					
ANR	1201343	Argument	'v'		1200718	0					
ANR	1201344	PrimaryExpression	'v'		1200718	0					
ANR	1201345	Argument	pgs -> memory		1200718	1					
ANR	1201346	PtrMemberAccess	pgs -> memory		1200718	0					
ANR	1201347	Identifier	pgs		1200718	0					
ANR	1201348	Identifier	memory		1200718	1					
ANR	1201349	Argument	"""[v*] Adding trans pattern to cache, uid = %ld id = %ld \\n"""		1200718	2					
ANR	1201350	PrimaryExpression	"""[v*] Adding trans pattern to cache, uid = %ld id = %ld \\n"""		1200718	0					
ANR	1201351	Argument	ctile -> uid . id		1200718	3					
ANR	1201352	MemberAccess	ctile -> uid . id		1200718	0					
ANR	1201353	PtrMemberAccess	ctile -> uid		1200718	0					
ANR	1201354	Identifier	ctile		1200718	0					
ANR	1201355	Identifier	uid		1200718	1					
ANR	1201356	Identifier	id		1200718	1					
ANR	1201357	Argument	ctile -> id		1200718	4					
ANR	1201358	PtrMemberAccess	ctile -> id		1200718	0					
ANR	1201359	Identifier	ctile		1200718	0					
ANR	1201360	Identifier	id		1200718	1					
ANR	1201361	ExpressionStatement	ctile -> ttrans = trans	1130:12:42074:42095	1200718	1	True				
ANR	1201362	AssignmentExpression	ctile -> ttrans = trans		1200718	0		=			
ANR	1201363	PtrMemberAccess	ctile -> ttrans		1200718	0					
ANR	1201364	Identifier	ctile		1200718	0					
ANR	1201365	Identifier	ttrans		1200718	1					
ANR	1201366	Identifier	trans		1200718	1					
ANR	1201367	ExpressionStatement	ctile -> cdev = NULL	1133:8:42116:42134	1200718	3	True				
ANR	1201368	AssignmentExpression	ctile -> cdev = NULL		1200718	0		=			
ANR	1201369	PtrMemberAccess	ctile -> cdev		1200718	0					
ANR	1201370	Identifier	ctile		1200718	0					
ANR	1201371	Identifier	cdev		1200718	1					
ANR	1201372	Identifier	NULL		1200718	1					
ANR	1201373	ElseStatement	else		1200718	0					
ANR	1201374	CompoundStatement		114:8:4000:4062	1200718	0					
ANR	1201375	IdentifierDeclStatement	gx_device_clist * cdev = ( gx_device_clist * ) fdev ;	1135:8:42157:42204	1200718	0	True				
ANR	1201376	IdentifierDecl	* cdev = ( gx_device_clist * ) fdev		1200718	0					
ANR	1201377	IdentifierDeclType	gx_device_clist *		1200718	0					
ANR	1201378	Identifier	cdev		1200718	1					
ANR	1201379	AssignmentExpression	* cdev = ( gx_device_clist * ) fdev		1200718	2		=			
ANR	1201380	Identifier	cdev		1200718	0					
ANR	1201381	CastExpression	( gx_device_clist * ) fdev		1200718	1					
ANR	1201382	CastTarget	gx_device_clist *		1200718	0					
ANR	1201383	Identifier	fdev		1200718	1					
ANR	1201384	IdentifierDeclStatement	gx_device_clist_writer * cwdev = ( gx_device_clist_writer * ) fdev ;	1136:8:42214:42276	1200718	1	True				
ANR	1201385	IdentifierDecl	* cwdev = ( gx_device_clist_writer * ) fdev		1200718	0					
ANR	1201386	IdentifierDeclType	gx_device_clist_writer *		1200718	0					
ANR	1201387	Identifier	cwdev		1200718	1					
ANR	1201388	AssignmentExpression	* cwdev = ( gx_device_clist_writer * ) fdev		1200718	2		=			
ANR	1201389	Identifier	cwdev		1200718	0					
ANR	1201390	CastExpression	( gx_device_clist_writer * ) fdev		1200718	1					
ANR	1201391	CastTarget	gx_device_clist_writer *		1200718	0					
ANR	1201392	Identifier	fdev		1200718	1					
ANR	1201393	ExpressionStatement	ctile -> tbits . data = 0	1138:8:42287:42308	1200718	2	True				
ANR	1201394	AssignmentExpression	ctile -> tbits . data = 0		1200718	0		=			
ANR	1201395	MemberAccess	ctile -> tbits . data		1200718	0					
ANR	1201396	PtrMemberAccess	ctile -> tbits		1200718	0					
ANR	1201397	Identifier	ctile		1200718	0					
ANR	1201398	Identifier	tbits		1200718	1					
ANR	1201399	Identifier	data		1200718	1					
ANR	1201400	PrimaryExpression	0		1200718	1					
ANR	1201401	ExpressionStatement	ctile -> tbits . size . x = 0	1139:8:42318:42341	1200718	3	True				
ANR	1201402	AssignmentExpression	ctile -> tbits . size . x = 0		1200718	0		=			
ANR	1201403	MemberAccess	ctile -> tbits . size . x		1200718	0					
ANR	1201404	MemberAccess	ctile -> tbits . size		1200718	0					
ANR	1201405	PtrMemberAccess	ctile -> tbits		1200718	0					
ANR	1201406	Identifier	ctile		1200718	0					
ANR	1201407	Identifier	tbits		1200718	1					
ANR	1201408	Identifier	size		1200718	1					
ANR	1201409	Identifier	x		1200718	1					
ANR	1201410	PrimaryExpression	0		1200718	1					
ANR	1201411	ExpressionStatement	ctile -> tbits . size . y = 0	1140:8:42351:42374	1200718	4	True				
ANR	1201412	AssignmentExpression	ctile -> tbits . size . y = 0		1200718	0		=			
ANR	1201413	MemberAccess	ctile -> tbits . size . y		1200718	0					
ANR	1201414	MemberAccess	ctile -> tbits . size		1200718	0					
ANR	1201415	PtrMemberAccess	ctile -> tbits		1200718	0					
ANR	1201416	Identifier	ctile		1200718	0					
ANR	1201417	Identifier	tbits		1200718	1					
ANR	1201418	Identifier	size		1200718	1					
ANR	1201419	Identifier	y		1200718	1					
ANR	1201420	PrimaryExpression	0		1200718	1					
ANR	1201421	ExpressionStatement	ctile -> tmask . data = 0	1141:8:42384:42405	1200718	5	True				
ANR	1201422	AssignmentExpression	ctile -> tmask . data = 0		1200718	0		=			
ANR	1201423	MemberAccess	ctile -> tmask . data		1200718	0					
ANR	1201424	PtrMemberAccess	ctile -> tmask		1200718	0					
ANR	1201425	Identifier	ctile		1200718	0					
ANR	1201426	Identifier	tmask		1200718	1					
ANR	1201427	Identifier	data		1200718	1					
ANR	1201428	PrimaryExpression	0		1200718	1					
ANR	1201429	ExpressionStatement	ctile -> tmask . size . x = 0	1142:8:42415:42438	1200718	6	True				
ANR	1201430	AssignmentExpression	ctile -> tmask . size . x = 0		1200718	0		=			
ANR	1201431	MemberAccess	ctile -> tmask . size . x		1200718	0					
ANR	1201432	MemberAccess	ctile -> tmask . size		1200718	0					
ANR	1201433	PtrMemberAccess	ctile -> tmask		1200718	0					
ANR	1201434	Identifier	ctile		1200718	0					
ANR	1201435	Identifier	tmask		1200718	1					
ANR	1201436	Identifier	size		1200718	1					
ANR	1201437	Identifier	x		1200718	1					
ANR	1201438	PrimaryExpression	0		1200718	1					
ANR	1201439	ExpressionStatement	ctile -> tmask . size . y = 0	1143:8:42448:42471	1200718	7	True				
ANR	1201440	AssignmentExpression	ctile -> tmask . size . y = 0		1200718	0		=			
ANR	1201441	MemberAccess	ctile -> tmask . size . y		1200718	0					
ANR	1201442	MemberAccess	ctile -> tmask . size		1200718	0					
ANR	1201443	PtrMemberAccess	ctile -> tmask		1200718	0					
ANR	1201444	Identifier	ctile		1200718	0					
ANR	1201445	Identifier	tmask		1200718	1					
ANR	1201446	Identifier	size		1200718	1					
ANR	1201447	Identifier	y		1200718	1					
ANR	1201448	PrimaryExpression	0		1200718	1					
ANR	1201449	ExpressionStatement	ctile -> cdev = cdev	1144:8:42481:42499	1200718	8	True				
ANR	1201450	AssignmentExpression	ctile -> cdev = cdev		1200718	0		=			
ANR	1201451	PtrMemberAccess	ctile -> cdev		1200718	0					
ANR	1201452	Identifier	ctile		1200718	0					
ANR	1201453	Identifier	cdev		1200718	1					
ANR	1201454	Identifier	cdev		1200718	1					
ANR	1201455	ExpressionStatement	cwdev -> do_not_open_or_close_bandfiles = true	1146:8:42572:42616	1200718	9	True				
ANR	1201456	AssignmentExpression	cwdev -> do_not_open_or_close_bandfiles = true		1200718	0		=			
ANR	1201457	PtrMemberAccess	cwdev -> do_not_open_or_close_bandfiles		1200718	0					
ANR	1201458	Identifier	cwdev		1200718	0					
ANR	1201459	Identifier	do_not_open_or_close_bandfiles		1200718	1					
ANR	1201460	Identifier	true		1200718	1					
ANR	1201461	ExpressionStatement	ctile -> bits_used = used	1152:4:42914:42937	1200718	29	True				
ANR	1201462	AssignmentExpression	ctile -> bits_used = used		1200718	0		=			
ANR	1201463	PtrMemberAccess	ctile -> bits_used		1200718	0					
ANR	1201464	Identifier	ctile		1200718	0					
ANR	1201465	Identifier	bits_used		1200718	1					
ANR	1201466	Identifier	used		1200718	1					
ANR	1201467	ExpressionStatement	"gx_pattern_cache_update_used ( pgs , used )"	1153:4:42943:42982	1200718	30	True				
ANR	1201468	CallExpression	"gx_pattern_cache_update_used ( pgs , used )"		1200718	0					
ANR	1201469	Callee	gx_pattern_cache_update_used		1200718	0					
ANR	1201470	Identifier	gx_pattern_cache_update_used		1200718	0					
ANR	1201471	ArgumentList	pgs		1200718	1					
ANR	1201472	Argument	pgs		1200718	0					
ANR	1201473	Identifier	pgs		1200718	0					
ANR	1201474	Argument	used		1200718	1					
ANR	1201475	Identifier	used		1200718	0					
ANR	1201476	ExpressionStatement	* pctile = ctile	1155:4:42989:43004	1200718	31	True				
ANR	1201477	AssignmentExpression	* pctile = ctile		1200718	0		=			
ANR	1201478	UnaryOperationExpression	* pctile		1200718	0					
ANR	1201479	UnaryOperator	*		1200718	0					
ANR	1201480	Identifier	pctile		1200718	1					
ANR	1201481	Identifier	ctile		1200718	1					
ANR	1201482	ReturnStatement	return 0 ;	1156:4:43010:43018	1200718	32	True				
ANR	1201483	PrimaryExpression	0		1200718	0					
ANR	1201484	ReturnType	int		1200718	1					
ANR	1201485	Identifier	gx_pattern_cache_add_entry		1200718	2					
ANR	1201486	ParameterList	"gs_gstate * pgs , gx_device_forward * fdev , gx_color_tile * * pctile"		1200718	3					
ANR	1201487	Parameter	gs_gstate * pgs	1021:27:38126:38140	1200718	0	True				
ANR	1201488	ParameterType	gs_gstate *		1200718	0					
ANR	1201489	Identifier	pgs		1200718	1					
ANR	1201490	Parameter	gx_device_forward * fdev	1022:19:38162:38185	1200718	1	True				
ANR	1201491	ParameterType	gx_device_forward *		1200718	0					
ANR	1201492	Identifier	fdev		1200718	1					
ANR	1201493	Parameter	gx_color_tile * * pctile	1022:45:38188:38210	1200718	2	True				
ANR	1201494	ParameterType	gx_color_tile * *		1200718	0					
ANR	1201495	Identifier	pctile		1200718	1					
ANR	1201496	CFGEntryNode	ENTRY		1200718		True				
ANR	1201497	CFGExitNode	EXIT		1200718		True				
ANR	1201498	Symbol	trans -> planestride		1200718						
ANR	1201499	Symbol	ctile -> uid . id		1200718						
ANR	1201500	Symbol	pinst -> is_planar		1200718						
ANR	1201501	Symbol	ctile -> tmask . data		1200718						
ANR	1201502	Symbol	* pgs		1200718						
ANR	1201503	Symbol	pinst -> templat		1200718						
ANR	1201504	Symbol	fdev -> color_info		1200718						
ANR	1201505	Symbol	open_device		1200718						
ANR	1201506	Symbol	ctile -> has_overlap		1200718						
ANR	1201507	Symbol	gs_next_ids		1200718						
ANR	1201508	Symbol	* ctile		1200718						
ANR	1201509	Symbol	ctile -> is_planar		1200718						
ANR	1201510	Symbol	clist_data_size		1200718						
ANR	1201511	Symbol	cwdev -> do_not_open_or_close_bandfiles		1200718						
ANR	1201512	Symbol	id		1200718						
ANR	1201513	Symbol	ctile -> blending_mode		1200718						
ANR	1201514	Symbol	ctile -> tbits . data		1200718						
ANR	1201515	Symbol	ctile -> cdev		1200718						
ANR	1201516	Symbol	pinst -> bbox		1200718						
ANR	1201517	Symbol	* * pgs		1200718						
ANR	1201518	Symbol	ctile -> tbits . size . y		1200718						
ANR	1201519	Symbol	pgs -> pattern_cache		1200718						
ANR	1201520	Symbol	ctile		1200718						
ANR	1201521	Symbol	trans		1200718						
ANR	1201522	Symbol	pinst -> id		1200718						
ANR	1201523	Symbol	pinst -> has_overlap		1200718						
ANR	1201524	Symbol	ctile -> id		1200718						
ANR	1201525	Symbol	mmask -> height		1200718						
ANR	1201526	Symbol	ctile -> tmask . size		1200718						
ANR	1201527	Symbol	* pctile		1200718						
ANR	1201528	Symbol	clist_end_page		1200718						
ANR	1201529	Symbol	* pgs -> device		1200718						
ANR	1201530	Symbol	trans_used		1200718						
ANR	1201531	Symbol	ensure_pattern_cache		1200718						
ANR	1201532	Symbol	pgs		1200718						
ANR	1201533	Symbol	pgs -> memory		1200718						
ANR	1201534	Symbol	ctile -> ttrans		1200718						
ANR	1201535	Symbol	ctile -> tmask		1200718						
ANR	1201536	Symbol	( ( pdf14_device * ) ( pgs -> device ) ) -> blend_mode		1200718						
ANR	1201537	Symbol	cdev -> writer		1200718						
ANR	1201538	Symbol	w		1200718						
ANR	1201539	Symbol	y		1200718						
ANR	1201540	Symbol	mmask -> bitmap_memory		1200718						
ANR	1201541	Symbol	ctile -> tbits		1200718						
ANR	1201542	Symbol	padev -> mask		1200718						
ANR	1201543	Symbol	* row		1200718						
ANR	1201544	Symbol	& ctile -> tmask		1200718						
ANR	1201545	Symbol	mbits -> bitmap_memory		1200718						
ANR	1201546	Symbol	* row ++		1200718						
ANR	1201547	Symbol	cdev -> writer . pinst		1200718						
ANR	1201548	Symbol	used		1200718						
ANR	1201549	Symbol	dev_proc_open_device		1200718						
ANR	1201550	Symbol	cwdev		1200718						
ANR	1201551	Symbol	padev -> instance		1200718						
ANR	1201552	Symbol	fdev -> color_info . depth		1200718						
ANR	1201553	Symbol	pinst -> templat . uid		1200718						
ANR	1201554	Symbol	* cdev		1200718						
ANR	1201555	Symbol	size_c		1200718						
ANR	1201556	Symbol	pgs -> device		1200718						
ANR	1201557	Symbol	size_b		1200718						
ANR	1201558	Symbol	ctile -> step_matrix		1200718						
ANR	1201559	Symbol	* cwdev		1200718						
ANR	1201560	Symbol	padev -> bits		1200718						
ANR	1201561	Symbol	NULL		1200718						
ANR	1201562	Symbol	pattern_clist_open_device		1200718						
ANR	1201563	Symbol	& used		1200718						
ANR	1201564	Symbol	cldev		1200718						
ANR	1201565	Symbol	pinst -> is_simple		1200718						
ANR	1201566	Symbol	pcache		1200718						
ANR	1201567	Symbol	& ctile -> tbits		1200718						
ANR	1201568	Symbol	* pcache		1200718						
ANR	1201569	Symbol	ctile -> is_simple		1200718						
ANR	1201570	Symbol	ctile -> is_dummy		1200718						
ANR	1201571	Symbol	* padev		1200718						
ANR	1201572	Symbol	pcache -> tiles		1200718						
ANR	1201573	Symbol	padev -> transbuff		1200718						
ANR	1201574	Symbol	pcache -> num_tiles		1200718						
ANR	1201575	Symbol	true		1200718						
ANR	1201576	Symbol	* fdev		1200718						
ANR	1201577	Symbol	& mask_used		1200718						
ANR	1201578	Symbol	fdev		1200718						
ANR	1201579	Symbol	gs_error_unregistered		1200718						
ANR	1201580	Symbol	ctile -> tiling_type		1200718						
ANR	1201581	Symbol	code		1200718						
ANR	1201582	Symbol	* trans		1200718						
ANR	1201583	Symbol	mmask -> width		1200718						
ANR	1201584	Symbol	ctile -> tbits . size . x		1200718						
ANR	1201585	Symbol	trans -> n_chan		1200718						
ANR	1201586	Symbol	ctile -> bits_used		1200718						
ANR	1201587	Symbol	padev		1200718						
ANR	1201588	Symbol	dev_proc		1200718						
ANR	1201589	Symbol	pinst -> templat . uses_transparency		1200718						
ANR	1201590	Symbol	mask_used		1200718						
ANR	1201591	Symbol	row		1200718						
ANR	1201592	Symbol	mbits		1200718						
ANR	1201593	Symbol	ctile -> uid		1200718						
ANR	1201594	Symbol	ctile -> depth		1200718						
ANR	1201595	Symbol	ctile -> bbox		1200718						
ANR	1201596	Symbol	false		1200718						
ANR	1201597	Symbol	pctile		1200718						
ANR	1201598	Symbol	mmask		1200718						
ANR	1201599	Symbol	pinst -> step_matrix		1200718						
ANR	1201600	Symbol	pinst		1200718						
ANR	1201601	Symbol	pinst -> templat . TilingType		1200718						
ANR	1201602	Symbol	* mmask		1200718						
ANR	1201603	Symbol	* mbits		1200718						
ANR	1201604	Symbol	scan_line_base		1200718						
ANR	1201605	Symbol	ctile -> tmask . size . x		1200718						
ANR	1201606	Symbol	ctile -> tmask . size . y		1200718						
ANR	1201607	Symbol	cdev		1200718						
ANR	1201608	Symbol	* pinst		1200718						
ANR	1201609	Symbol	ctile -> tbits . size		1200718						
ANR	1201610	Function	gx_pattern_cache_get_entry	1160:0:43073:43496							
ANR	1201611	FunctionDef	"gx_pattern_cache_get_entry (gs_gstate * pgs , gs_id id , gx_color_tile * * pctile)"		1201610	0					
ANR	1201612	CompoundStatement		1162:0:43156:43496	1201610	0					
ANR	1201613	IdentifierDeclStatement	gx_pattern_cache * pcache ;	1163:4:43162:43186	1201610	0	True				
ANR	1201614	IdentifierDecl	* pcache		1201610	0					
ANR	1201615	IdentifierDeclType	gx_pattern_cache *		1201610	0					
ANR	1201616	Identifier	pcache		1201610	1					
ANR	1201617	IdentifierDeclStatement	gx_color_tile * ctile ;	1164:4:43192:43212	1201610	1	True				
ANR	1201618	IdentifierDecl	* ctile		1201610	0					
ANR	1201619	IdentifierDeclType	gx_color_tile *		1201610	0					
ANR	1201620	Identifier	ctile		1201610	1					
ANR	1201621	IdentifierDeclStatement	int code = ensure_pattern_cache ( pgs ) ;	1165:4:43218:43254	1201610	2	True				
ANR	1201622	IdentifierDecl	code = ensure_pattern_cache ( pgs )		1201610	0					
ANR	1201623	IdentifierDeclType	int		1201610	0					
ANR	1201624	Identifier	code		1201610	1					
ANR	1201625	AssignmentExpression	code = ensure_pattern_cache ( pgs )		1201610	2		=			
ANR	1201626	Identifier	code		1201610	0					
ANR	1201627	CallExpression	ensure_pattern_cache ( pgs )		1201610	1					
ANR	1201628	Callee	ensure_pattern_cache		1201610	0					
ANR	1201629	Identifier	ensure_pattern_cache		1201610	0					
ANR	1201630	ArgumentList	pgs		1201610	1					
ANR	1201631	Argument	pgs		1201610	0					
ANR	1201632	Identifier	pgs		1201610	0					
ANR	1201633	IfStatement	if ( code < 0 )		1201610	3					
ANR	1201634	Condition	code < 0	1167:8:43265:43272	1201610	0	True				
ANR	1201635	RelationalExpression	code < 0		1201610	0		<			
ANR	1201636	Identifier	code		1201610	0					
ANR	1201637	PrimaryExpression	0		1201610	1					
ANR	1201638	ReturnStatement	return code ;	1168:8:43283:43294	1201610	1	True				
ANR	1201639	Identifier	code		1201610	0					
ANR	1201640	ExpressionStatement	pcache = pgs -> pattern_cache	1169:4:43300:43327	1201610	4	True				
ANR	1201641	AssignmentExpression	pcache = pgs -> pattern_cache		1201610	0		=			
ANR	1201642	Identifier	pcache		1201610	0					
ANR	1201643	PtrMemberAccess	pgs -> pattern_cache		1201610	1					
ANR	1201644	Identifier	pgs		1201610	0					
ANR	1201645	Identifier	pattern_cache		1201610	1					
ANR	1201646	ExpressionStatement	ctile = & pcache -> tiles [ id % pcache -> num_tiles ]	1170:4:43333:43379	1201610	5	True				
ANR	1201647	AssignmentExpression	ctile = & pcache -> tiles [ id % pcache -> num_tiles ]		1201610	0		=			
ANR	1201648	Identifier	ctile		1201610	0					
ANR	1201649	UnaryOperationExpression	& pcache -> tiles [ id % pcache -> num_tiles ]		1201610	1					
ANR	1201650	UnaryOperator	&		1201610	0					
ANR	1201651	ArrayIndexing	pcache -> tiles [ id % pcache -> num_tiles ]		1201610	1					
ANR	1201652	PtrMemberAccess	pcache -> tiles		1201610	0					
ANR	1201653	Identifier	pcache		1201610	0					
ANR	1201654	Identifier	tiles		1201610	1					
ANR	1201655	MultiplicativeExpression	id % pcache -> num_tiles		1201610	1		%			
ANR	1201656	Identifier	id		1201610	0					
ANR	1201657	PtrMemberAccess	pcache -> num_tiles		1201610	1					
ANR	1201658	Identifier	pcache		1201610	0					
ANR	1201659	Identifier	num_tiles		1201610	1					
ANR	1201660	ExpressionStatement	"gx_pattern_cache_free_entry ( pgs -> pattern_cache , ctile )"	1171:4:43385:43439	1201610	6	True				
ANR	1201661	CallExpression	"gx_pattern_cache_free_entry ( pgs -> pattern_cache , ctile )"		1201610	0					
ANR	1201662	Callee	gx_pattern_cache_free_entry		1201610	0					
ANR	1201663	Identifier	gx_pattern_cache_free_entry		1201610	0					
ANR	1201664	ArgumentList	pgs -> pattern_cache		1201610	1					
ANR	1201665	Argument	pgs -> pattern_cache		1201610	0					
ANR	1201666	PtrMemberAccess	pgs -> pattern_cache		1201610	0					
ANR	1201667	Identifier	pgs		1201610	0					
ANR	1201668	Identifier	pattern_cache		1201610	1					
ANR	1201669	Argument	ctile		1201610	1					
ANR	1201670	Identifier	ctile		1201610	0					
ANR	1201671	ExpressionStatement	ctile -> id = id	1172:4:43445:43459	1201610	7	True				
ANR	1201672	AssignmentExpression	ctile -> id = id		1201610	0		=			
ANR	1201673	PtrMemberAccess	ctile -> id		1201610	0					
ANR	1201674	Identifier	ctile		1201610	0					
ANR	1201675	Identifier	id		1201610	1					
ANR	1201676	Identifier	id		1201610	1					
ANR	1201677	ExpressionStatement	* pctile = ctile	1173:4:43465:43480	1201610	8	True				
ANR	1201678	AssignmentExpression	* pctile = ctile		1201610	0		=			
ANR	1201679	UnaryOperationExpression	* pctile		1201610	0					
ANR	1201680	UnaryOperator	*		1201610	0					
ANR	1201681	Identifier	pctile		1201610	1					
ANR	1201682	Identifier	ctile		1201610	1					
ANR	1201683	ReturnStatement	return 0 ;	1174:4:43486:43494	1201610	9	True				
ANR	1201684	PrimaryExpression	0		1201610	0					
ANR	1201685	ReturnType	int		1201610	1					
ANR	1201686	Identifier	gx_pattern_cache_get_entry		1201610	2					
ANR	1201687	ParameterList	"gs_gstate * pgs , gs_id id , gx_color_tile * * pctile"		1201610	3					
ANR	1201688	Parameter	gs_gstate * pgs	1161:27:43104:43118	1201610	0	True				
ANR	1201689	ParameterType	gs_gstate *		1201610	0					
ANR	1201690	Identifier	pgs		1201610	1					
ANR	1201691	Parameter	gs_id id	1161:44:43121:43128	1201610	1	True				
ANR	1201692	ParameterType	gs_id		1201610	0					
ANR	1201693	Identifier	id		1201610	1					
ANR	1201694	Parameter	gx_color_tile * * pctile	1161:54:43131:43153	1201610	2	True				
ANR	1201695	ParameterType	gx_color_tile * *		1201610	0					
ANR	1201696	Identifier	pctile		1201610	1					
ANR	1201697	CFGEntryNode	ENTRY		1201610		True				
ANR	1201698	CFGExitNode	EXIT		1201610		True				
ANR	1201699	Symbol	code		1201610						
ANR	1201700	Symbol	* pgs		1201610						
ANR	1201701	Symbol	pctile		1201610						
ANR	1201702	Symbol	ctile -> id		1201610						
ANR	1201703	Symbol	pcache		1201610						
ANR	1201704	Symbol	* pcache		1201610						
ANR	1201705	Symbol	* ctile		1201610						
ANR	1201706	Symbol	pgs -> pattern_cache		1201610						
ANR	1201707	Symbol	pcache -> tiles		1201610						
ANR	1201708	Symbol	* pctile		1201610						
ANR	1201709	Symbol	ctile		1201610						
ANR	1201710	Symbol	pcache -> num_tiles		1201610						
ANR	1201711	Symbol	id		1201610						
ANR	1201712	Symbol	ensure_pattern_cache		1201610						
ANR	1201713	Symbol	pgs		1201610						
ANR	1201714	Function	gx_pattern_tile_is_clist	1177:0:43499:43602							
ANR	1201715	FunctionDef	gx_pattern_tile_is_clist (gx_color_tile * ptile)		1201714	0					
ANR	1201716	CompoundStatement		1179:0:43551:43602	1201714	0					
ANR	1201717	ReturnStatement	return ptile != NULL && ptile -> cdev != NULL ;	1180:4:43557:43600	1201714	0	True				
ANR	1201718	AndExpression	ptile != NULL && ptile -> cdev != NULL		1201714	0		&&			
ANR	1201719	EqualityExpression	ptile != NULL		1201714	0		!=			
ANR	1201720	Identifier	ptile		1201714	0					
ANR	1201721	Identifier	NULL		1201714	1					
ANR	1201722	EqualityExpression	ptile -> cdev != NULL		1201714	1		!=			
ANR	1201723	PtrMemberAccess	ptile -> cdev		1201714	0					
ANR	1201724	Identifier	ptile		1201714	0					
ANR	1201725	Identifier	cdev		1201714	1					
ANR	1201726	Identifier	NULL		1201714	1					
ANR	1201727	ReturnType	bool		1201714	1					
ANR	1201728	Identifier	gx_pattern_tile_is_clist		1201714	2					
ANR	1201729	ParameterList	gx_color_tile * ptile		1201714	3					
ANR	1201730	Parameter	gx_color_tile * ptile	1178:25:43529:43548	1201714	0	True				
ANR	1201731	ParameterType	gx_color_tile *		1201714	0					
ANR	1201732	Identifier	ptile		1201714	1					
ANR	1201733	CFGEntryNode	ENTRY		1201714		True				
ANR	1201734	CFGExitNode	EXIT		1201714		True				
ANR	1201735	Symbol	NULL		1201714						
ANR	1201736	Symbol	ptile -> cdev		1201714						
ANR	1201737	Symbol	* ptile		1201714						
ANR	1201738	Symbol	ptile		1201714						
ANR	1201739	Function	gx_pattern_cache_add_dummy_entry	1185:0:43726:44762							
ANR	1201740	FunctionDef	"gx_pattern_cache_add_dummy_entry (gs_gstate * pgs , gs_pattern1_instance_t * pinst , int depth)"		1201739	0					
ANR	1201741	CompoundStatement		1188:0:43833:44762	1201739	0					
ANR	1201742	IdentifierDeclStatement	gx_color_tile * ctile ;	1189:4:43839:43859	1201739	0	True				
ANR	1201743	IdentifierDecl	* ctile		1201739	0					
ANR	1201744	IdentifierDeclType	gx_color_tile *		1201739	0					
ANR	1201745	Identifier	ctile		1201739	1					
ANR	1201746	IdentifierDeclStatement	gx_pattern_cache * pcache ;	1190:4:43865:43889	1201739	1	True				
ANR	1201747	IdentifierDecl	* pcache		1201739	0					
ANR	1201748	IdentifierDeclType	gx_pattern_cache *		1201739	0					
ANR	1201749	Identifier	pcache		1201739	1					
ANR	1201750	IdentifierDeclStatement	gx_bitmap_id id = pinst -> id ;	1191:4:43895:43922	1201739	2	True				
ANR	1201751	IdentifierDecl	id = pinst -> id		1201739	0					
ANR	1201752	IdentifierDeclType	gx_bitmap_id		1201739	0					
ANR	1201753	Identifier	id		1201739	1					
ANR	1201754	AssignmentExpression	id = pinst -> id		1201739	2		=			
ANR	1201755	Identifier	id		1201739	0					
ANR	1201756	PtrMemberAccess	pinst -> id		1201739	1					
ANR	1201757	Identifier	pinst		1201739	0					
ANR	1201758	Identifier	id		1201739	1					
ANR	1201759	IdentifierDeclStatement	int code = ensure_pattern_cache ( pgs ) ;	1192:4:43928:43964	1201739	3	True				
ANR	1201760	IdentifierDecl	code = ensure_pattern_cache ( pgs )		1201739	0					
ANR	1201761	IdentifierDeclType	int		1201739	0					
ANR	1201762	Identifier	code		1201739	1					
ANR	1201763	AssignmentExpression	code = ensure_pattern_cache ( pgs )		1201739	2		=			
ANR	1201764	Identifier	code		1201739	0					
ANR	1201765	CallExpression	ensure_pattern_cache ( pgs )		1201739	1					
ANR	1201766	Callee	ensure_pattern_cache		1201739	0					
ANR	1201767	Identifier	ensure_pattern_cache		1201739	0					
ANR	1201768	ArgumentList	pgs		1201739	1					
ANR	1201769	Argument	pgs		1201739	0					
ANR	1201770	Identifier	pgs		1201739	0					
ANR	1201771	IfStatement	if ( code < 0 )		1201739	4					
ANR	1201772	Condition	code < 0	1194:8:43975:43982	1201739	0	True				
ANR	1201773	RelationalExpression	code < 0		1201739	0		<			
ANR	1201774	Identifier	code		1201739	0					
ANR	1201775	PrimaryExpression	0		1201739	1					
ANR	1201776	ReturnStatement	return code ;	1195:8:43993:44004	1201739	1	True				
ANR	1201777	Identifier	code		1201739	0					
ANR	1201778	ExpressionStatement	pcache = pgs -> pattern_cache	1196:4:44010:44037	1201739	5	True				
ANR	1201779	AssignmentExpression	pcache = pgs -> pattern_cache		1201739	0		=			
ANR	1201780	Identifier	pcache		1201739	0					
ANR	1201781	PtrMemberAccess	pgs -> pattern_cache		1201739	1					
ANR	1201782	Identifier	pgs		1201739	0					
ANR	1201783	Identifier	pattern_cache		1201739	1					
ANR	1201784	ExpressionStatement	ctile = & pcache -> tiles [ id % pcache -> num_tiles ]	1197:4:44043:44089	1201739	6	True				
ANR	1201785	AssignmentExpression	ctile = & pcache -> tiles [ id % pcache -> num_tiles ]		1201739	0		=			
ANR	1201786	Identifier	ctile		1201739	0					
ANR	1201787	UnaryOperationExpression	& pcache -> tiles [ id % pcache -> num_tiles ]		1201739	1					
ANR	1201788	UnaryOperator	&		1201739	0					
ANR	1201789	ArrayIndexing	pcache -> tiles [ id % pcache -> num_tiles ]		1201739	1					
ANR	1201790	PtrMemberAccess	pcache -> tiles		1201739	0					
ANR	1201791	Identifier	pcache		1201739	0					
ANR	1201792	Identifier	tiles		1201739	1					
ANR	1201793	MultiplicativeExpression	id % pcache -> num_tiles		1201739	1		%			
ANR	1201794	Identifier	id		1201739	0					
ANR	1201795	PtrMemberAccess	pcache -> num_tiles		1201739	1					
ANR	1201796	Identifier	pcache		1201739	0					
ANR	1201797	Identifier	num_tiles		1201739	1					
ANR	1201798	ExpressionStatement	"gx_pattern_cache_free_entry ( pcache , ctile )"	1198:4:44095:44137	1201739	7	True				
ANR	1201799	CallExpression	"gx_pattern_cache_free_entry ( pcache , ctile )"		1201739	0					
ANR	1201800	Callee	gx_pattern_cache_free_entry		1201739	0					
ANR	1201801	Identifier	gx_pattern_cache_free_entry		1201739	0					
ANR	1201802	ArgumentList	pcache		1201739	1					
ANR	1201803	Argument	pcache		1201739	0					
ANR	1201804	Identifier	pcache		1201739	0					
ANR	1201805	Argument	ctile		1201739	1					
ANR	1201806	Identifier	ctile		1201739	0					
ANR	1201807	ExpressionStatement	ctile -> id = id	1199:4:44143:44157	1201739	8	True				
ANR	1201808	AssignmentExpression	ctile -> id = id		1201739	0		=			
ANR	1201809	PtrMemberAccess	ctile -> id		1201739	0					
ANR	1201810	Identifier	ctile		1201739	0					
ANR	1201811	Identifier	id		1201739	1					
ANR	1201812	Identifier	id		1201739	1					
ANR	1201813	ExpressionStatement	ctile -> depth = depth	1200:4:44163:44183	1201739	9	True				
ANR	1201814	AssignmentExpression	ctile -> depth = depth		1201739	0		=			
ANR	1201815	PtrMemberAccess	ctile -> depth		1201739	0					
ANR	1201816	Identifier	ctile		1201739	0					
ANR	1201817	Identifier	depth		1201739	1					
ANR	1201818	Identifier	depth		1201739	1					
ANR	1201819	ExpressionStatement	ctile -> uid = pinst -> templat . uid	1201:4:44189:44220	1201739	10	True				
ANR	1201820	AssignmentExpression	ctile -> uid = pinst -> templat . uid		1201739	0		=			
ANR	1201821	PtrMemberAccess	ctile -> uid		1201739	0					
ANR	1201822	Identifier	ctile		1201739	0					
ANR	1201823	Identifier	uid		1201739	1					
ANR	1201824	MemberAccess	pinst -> templat . uid		1201739	1					
ANR	1201825	PtrMemberAccess	pinst -> templat		1201739	0					
ANR	1201826	Identifier	pinst		1201739	0					
ANR	1201827	Identifier	templat		1201739	1					
ANR	1201828	Identifier	uid		1201739	1					
ANR	1201829	ExpressionStatement	ctile -> tiling_type = pinst -> templat . TilingType	1202:4:44226:44272	1201739	11	True				
ANR	1201830	AssignmentExpression	ctile -> tiling_type = pinst -> templat . TilingType		1201739	0		=			
ANR	1201831	PtrMemberAccess	ctile -> tiling_type		1201739	0					
ANR	1201832	Identifier	ctile		1201739	0					
ANR	1201833	Identifier	tiling_type		1201739	1					
ANR	1201834	MemberAccess	pinst -> templat . TilingType		1201739	1					
ANR	1201835	PtrMemberAccess	pinst -> templat		1201739	0					
ANR	1201836	Identifier	pinst		1201739	0					
ANR	1201837	Identifier	templat		1201739	1					
ANR	1201838	Identifier	TilingType		1201739	1					
ANR	1201839	ExpressionStatement	ctile -> step_matrix = pinst -> step_matrix	1203:4:44278:44317	1201739	12	True				
ANR	1201840	AssignmentExpression	ctile -> step_matrix = pinst -> step_matrix		1201739	0		=			
ANR	1201841	PtrMemberAccess	ctile -> step_matrix		1201739	0					
ANR	1201842	Identifier	ctile		1201739	0					
ANR	1201843	Identifier	step_matrix		1201739	1					
ANR	1201844	PtrMemberAccess	pinst -> step_matrix		1201739	1					
ANR	1201845	Identifier	pinst		1201739	0					
ANR	1201846	Identifier	step_matrix		1201739	1					
ANR	1201847	ExpressionStatement	ctile -> bbox = pinst -> bbox	1204:4:44323:44348	1201739	13	True				
ANR	1201848	AssignmentExpression	ctile -> bbox = pinst -> bbox		1201739	0		=			
ANR	1201849	PtrMemberAccess	ctile -> bbox		1201739	0					
ANR	1201850	Identifier	ctile		1201739	0					
ANR	1201851	Identifier	bbox		1201739	1					
ANR	1201852	PtrMemberAccess	pinst -> bbox		1201739	1					
ANR	1201853	Identifier	pinst		1201739	0					
ANR	1201854	Identifier	bbox		1201739	1					
ANR	1201855	ExpressionStatement	ctile -> is_simple = pinst -> is_simple	1205:4:44354:44389	1201739	14	True				
ANR	1201856	AssignmentExpression	ctile -> is_simple = pinst -> is_simple		1201739	0		=			
ANR	1201857	PtrMemberAccess	ctile -> is_simple		1201739	0					
ANR	1201858	Identifier	ctile		1201739	0					
ANR	1201859	Identifier	is_simple		1201739	1					
ANR	1201860	PtrMemberAccess	pinst -> is_simple		1201739	1					
ANR	1201861	Identifier	pinst		1201739	0					
ANR	1201862	Identifier	is_simple		1201739	1					
ANR	1201863	ExpressionStatement	ctile -> has_overlap = pinst -> has_overlap	1206:4:44395:44434	1201739	15	True				
ANR	1201864	AssignmentExpression	ctile -> has_overlap = pinst -> has_overlap		1201739	0		=			
ANR	1201865	PtrMemberAccess	ctile -> has_overlap		1201739	0					
ANR	1201866	Identifier	ctile		1201739	0					
ANR	1201867	Identifier	has_overlap		1201739	1					
ANR	1201868	PtrMemberAccess	pinst -> has_overlap		1201739	1					
ANR	1201869	Identifier	pinst		1201739	0					
ANR	1201870	Identifier	has_overlap		1201739	1					
ANR	1201871	ExpressionStatement	ctile -> is_dummy = true	1207:4:44440:44462	1201739	16	True				
ANR	1201872	AssignmentExpression	ctile -> is_dummy = true		1201739	0		=			
ANR	1201873	PtrMemberAccess	ctile -> is_dummy		1201739	0					
ANR	1201874	Identifier	ctile		1201739	0					
ANR	1201875	Identifier	is_dummy		1201739	1					
ANR	1201876	Identifier	true		1201739	1					
ANR	1201877	ExpressionStatement	"memset ( & ctile -> tbits , 0 , sizeof ( ctile -> tbits ) )"	1208:4:44468:44515	1201739	17	True				
ANR	1201878	CallExpression	"memset ( & ctile -> tbits , 0 , sizeof ( ctile -> tbits ) )"		1201739	0					
ANR	1201879	Callee	memset		1201739	0					
ANR	1201880	Identifier	memset		1201739	0					
ANR	1201881	ArgumentList	& ctile -> tbits		1201739	1					
ANR	1201882	Argument	& ctile -> tbits		1201739	0					
ANR	1201883	UnaryOperationExpression	& ctile -> tbits		1201739	0					
ANR	1201884	UnaryOperator	&		1201739	0					
ANR	1201885	PtrMemberAccess	ctile -> tbits		1201739	1					
ANR	1201886	Identifier	ctile		1201739	0					
ANR	1201887	Identifier	tbits		1201739	1					
ANR	1201888	Argument	0		1201739	1					
ANR	1201889	PrimaryExpression	0		1201739	0					
ANR	1201890	Argument	sizeof ( ctile -> tbits )		1201739	2					
ANR	1201891	SizeofExpression	sizeof ( ctile -> tbits )		1201739	0					
ANR	1201892	Sizeof	sizeof		1201739	0					
ANR	1201893	PtrMemberAccess	ctile -> tbits		1201739	1					
ANR	1201894	Identifier	ctile		1201739	0					
ANR	1201895	Identifier	tbits		1201739	1					
ANR	1201896	ExpressionStatement	ctile -> tbits . size = pinst -> size	1209:4:44521:44552	1201739	18	True				
ANR	1201897	AssignmentExpression	ctile -> tbits . size = pinst -> size		1201739	0		=			
ANR	1201898	MemberAccess	ctile -> tbits . size		1201739	0					
ANR	1201899	PtrMemberAccess	ctile -> tbits		1201739	0					
ANR	1201900	Identifier	ctile		1201739	0					
ANR	1201901	Identifier	tbits		1201739	1					
ANR	1201902	Identifier	size		1201739	1					
ANR	1201903	PtrMemberAccess	pinst -> size		1201739	1					
ANR	1201904	Identifier	pinst		1201739	0					
ANR	1201905	Identifier	size		1201739	1					
ANR	1201906	ExpressionStatement	ctile -> tbits . id = gs_no_bitmap_id	1210:4:44558:44591	1201739	19	True				
ANR	1201907	AssignmentExpression	ctile -> tbits . id = gs_no_bitmap_id		1201739	0		=			
ANR	1201908	MemberAccess	ctile -> tbits . id		1201739	0					
ANR	1201909	PtrMemberAccess	ctile -> tbits		1201739	0					
ANR	1201910	Identifier	ctile		1201739	0					
ANR	1201911	Identifier	tbits		1201739	1					
ANR	1201912	Identifier	id		1201739	1					
ANR	1201913	Identifier	gs_no_bitmap_id		1201739	1					
ANR	1201914	ExpressionStatement	"memset ( & ctile -> tmask , 0 , sizeof ( ctile -> tmask ) )"	1211:4:44597:44644	1201739	20	True				
ANR	1201915	CallExpression	"memset ( & ctile -> tmask , 0 , sizeof ( ctile -> tmask ) )"		1201739	0					
ANR	1201916	Callee	memset		1201739	0					
ANR	1201917	Identifier	memset		1201739	0					
ANR	1201918	ArgumentList	& ctile -> tmask		1201739	1					
ANR	1201919	Argument	& ctile -> tmask		1201739	0					
ANR	1201920	UnaryOperationExpression	& ctile -> tmask		1201739	0					
ANR	1201921	UnaryOperator	&		1201739	0					
ANR	1201922	PtrMemberAccess	ctile -> tmask		1201739	1					
ANR	1201923	Identifier	ctile		1201739	0					
ANR	1201924	Identifier	tmask		1201739	1					
ANR	1201925	Argument	0		1201739	1					
ANR	1201926	PrimaryExpression	0		1201739	0					
ANR	1201927	Argument	sizeof ( ctile -> tmask )		1201739	2					
ANR	1201928	SizeofExpression	sizeof ( ctile -> tmask )		1201739	0					
ANR	1201929	Sizeof	sizeof		1201739	0					
ANR	1201930	PtrMemberAccess	ctile -> tmask		1201739	1					
ANR	1201931	Identifier	ctile		1201739	0					
ANR	1201932	Identifier	tmask		1201739	1					
ANR	1201933	ExpressionStatement	ctile -> cdev = NULL	1212:4:44650:44668	1201739	21	True				
ANR	1201934	AssignmentExpression	ctile -> cdev = NULL		1201739	0		=			
ANR	1201935	PtrMemberAccess	ctile -> cdev		1201739	0					
ANR	1201936	Identifier	ctile		1201739	0					
ANR	1201937	Identifier	cdev		1201739	1					
ANR	1201938	Identifier	NULL		1201739	1					
ANR	1201939	ExpressionStatement	ctile -> ttrans = NULL	1213:4:44674:44694	1201739	22	True				
ANR	1201940	AssignmentExpression	ctile -> ttrans = NULL		1201739	0		=			
ANR	1201941	PtrMemberAccess	ctile -> ttrans		1201739	0					
ANR	1201942	Identifier	ctile		1201739	0					
ANR	1201943	Identifier	ttrans		1201739	1					
ANR	1201944	Identifier	NULL		1201739	1					
ANR	1201945	ExpressionStatement	ctile -> bits_used = 0	1214:4:44700:44720	1201739	23	True				
ANR	1201946	AssignmentExpression	ctile -> bits_used = 0		1201739	0		=			
ANR	1201947	PtrMemberAccess	ctile -> bits_used		1201739	0					
ANR	1201948	Identifier	ctile		1201739	0					
ANR	1201949	Identifier	bits_used		1201739	1					
ANR	1201950	PrimaryExpression	0		1201739	1					
ANR	1201951	ExpressionStatement	pcache -> tiles_used ++	1215:4:44726:44746	1201739	24	True				
ANR	1201952	PostIncDecOperationExpression	pcache -> tiles_used ++		1201739	0					
ANR	1201953	PtrMemberAccess	pcache -> tiles_used		1201739	0					
ANR	1201954	Identifier	pcache		1201739	0					
ANR	1201955	Identifier	tiles_used		1201739	1					
ANR	1201956	IncDec	++		1201739	1					
ANR	1201957	ReturnStatement	return 0 ;	1216:4:44752:44760	1201739	25	True				
ANR	1201958	PrimaryExpression	0		1201739	0					
ANR	1201959	ReturnType	int		1201739	1					
ANR	1201960	Identifier	gx_pattern_cache_add_dummy_entry		1201739	2					
ANR	1201961	ParameterList	"gs_gstate * pgs , gs_pattern1_instance_t * pinst , int depth"		1201739	3					
ANR	1201962	Parameter	gs_gstate * pgs	1186:33:43763:43776	1201739	0	True				
ANR	1201963	ParameterType	gs_gstate *		1201739	0					
ANR	1201964	Identifier	pgs		1201739	1					
ANR	1201965	Parameter	gs_pattern1_instance_t * pinst	1187:12:43791:43819	1201739	1	True				
ANR	1201966	ParameterType	gs_pattern1_instance_t *		1201739	0					
ANR	1201967	Identifier	pinst		1201739	1					
ANR	1201968	Parameter	int depth	1187:43:43822:43830	1201739	2	True				
ANR	1201969	ParameterType	int		1201739	0					
ANR	1201970	Identifier	depth		1201739	1					
ANR	1201971	CFGEntryNode	ENTRY		1201739		True				
ANR	1201972	CFGExitNode	EXIT		1201739		True				
ANR	1201973	Symbol	pinst -> id		1201739						
ANR	1201974	Symbol	ctile -> tiling_type		1201739						
ANR	1201975	Symbol	code		1201739						
ANR	1201976	Symbol	pinst -> has_overlap		1201739						
ANR	1201977	Symbol	& ctile -> tmask		1201739						
ANR	1201978	Symbol	* pgs		1201739						
ANR	1201979	Symbol	pinst -> templat		1201739						
ANR	1201980	Symbol	ctile -> id		1201739						
ANR	1201981	Symbol	ctile -> has_overlap		1201739						
ANR	1201982	Symbol	pcache -> tiles_used		1201739						
ANR	1201983	Symbol	* ctile		1201739						
ANR	1201984	Symbol	ctile -> bits_used		1201739						
ANR	1201985	Symbol	pinst -> templat . uid		1201739						
ANR	1201986	Symbol	ctile -> tbits . id		1201739						
ANR	1201987	Symbol	gs_no_bitmap_id		1201739						
ANR	1201988	Symbol	id		1201739						
ANR	1201989	Symbol	ensure_pattern_cache		1201739						
ANR	1201990	Symbol	pgs		1201739						
ANR	1201991	Symbol	ctile -> cdev		1201739						
ANR	1201992	Symbol	pinst -> bbox		1201739						
ANR	1201993	Symbol	ctile -> step_matrix		1201739						
ANR	1201994	Symbol	NULL		1201739						
ANR	1201995	Symbol	ctile -> uid		1201739						
ANR	1201996	Symbol	ctile -> depth		1201739						
ANR	1201997	Symbol	ctile -> bbox		1201739						
ANR	1201998	Symbol	ctile -> ttrans		1201739						
ANR	1201999	Symbol	pinst -> step_matrix		1201739						
ANR	1202000	Symbol	pinst -> is_simple		1201739						
ANR	1202001	Symbol	ctile -> tmask		1201739						
ANR	1202002	Symbol	pinst		1201739						
ANR	1202003	Symbol	pcache		1201739						
ANR	1202004	Symbol	pinst -> templat . TilingType		1201739						
ANR	1202005	Symbol	& ctile -> tbits		1201739						
ANR	1202006	Symbol	* pcache		1201739						
ANR	1202007	Symbol	pinst -> size		1201739						
ANR	1202008	Symbol	ctile -> is_simple		1201739						
ANR	1202009	Symbol	depth		1201739						
ANR	1202010	Symbol	pgs -> pattern_cache		1201739						
ANR	1202011	Symbol	ctile -> is_dummy		1201739						
ANR	1202012	Symbol	pcache -> tiles		1201739						
ANR	1202013	Symbol	ctile		1201739						
ANR	1202014	Symbol	pcache -> num_tiles		1201739						
ANR	1202015	Symbol	true		1201739						
ANR	1202016	Symbol	* pinst		1201739						
ANR	1202017	Symbol	ctile -> tbits		1201739						
ANR	1202018	Symbol	ctile -> tbits . size		1201739						
ANR	1202019	Function	dump_raw_pattern	1223:0:44892:48062							
ANR	1202020	FunctionDef	"dump_raw_pattern (int height , int width , int n_chan , int depth , byte * Buffer , int raster , const gx_device_memory * mdev)"		1202019	0					
ANR	1202021	CompoundStatement		1226:0:45040:48062	1202019	0					
ANR	1202022	IdentifierDeclStatement	char full_file_name [ 50 ] ;	1227:4:45046:45069	1202019	0	True				
ANR	1202023	IdentifierDecl	full_file_name [ 50 ]		1202019	0					
ANR	1202024	IdentifierDeclType	char [ 50 ]		1202019	0					
ANR	1202025	Identifier	full_file_name		1202019	1					
ANR	1202026	PrimaryExpression	50		1202019	2					
ANR	1202027	IdentifierDeclStatement	FILE * fid ;	1228:4:45075:45084	1202019	1	True				
ANR	1202028	IdentifierDecl	* fid		1202019	0					
ANR	1202029	IdentifierDeclType	FILE *		1202019	0					
ANR	1202030	Identifier	fid		1202019	1					
ANR	1202031	IdentifierDeclStatement	int max_bands ;	1229:4:45090:45103	1202019	2	True				
ANR	1202032	IdentifierDecl	max_bands		1202019	0					
ANR	1202033	IdentifierDeclType	int		1202019	0					
ANR	1202034	Identifier	max_bands		1202019	1					
ANR	1202035	IdentifierDeclStatement	"int j , k , m ;"	1230:4:45109:45120	1202019	3	True				
ANR	1202036	IdentifierDecl	j		1202019	0					
ANR	1202037	IdentifierDeclType	int		1202019	0					
ANR	1202038	Identifier	j		1202019	1					
ANR	1202039	IdentifierDecl	k		1202019	1					
ANR	1202040	IdentifierDeclType	int		1202019	0					
ANR	1202041	Identifier	k		1202019	1					
ANR	1202042	IdentifierDecl	m		1202019	2					
ANR	1202043	IdentifierDeclType	int		1202019	0					
ANR	1202044	Identifier	m		1202019	1					
ANR	1202045	IdentifierDeclStatement	"int byte_number , bit_position ;"	1231:4:45126:45155	1202019	4	True				
ANR	1202046	IdentifierDecl	byte_number		1202019	0					
ANR	1202047	IdentifierDeclType	int		1202019	0					
ANR	1202048	Identifier	byte_number		1202019	1					
ANR	1202049	IdentifierDecl	bit_position		1202019	1					
ANR	1202050	IdentifierDeclType	int		1202019	0					
ANR	1202051	Identifier	bit_position		1202019	1					
ANR	1202052	IdentifierDeclStatement	unsigned char current_byte ;	1232:4:45161:45187	1202019	5	True				
ANR	1202053	IdentifierDecl	current_byte		1202019	0					
ANR	1202054	IdentifierDeclType	unsigned char		1202019	0					
ANR	1202055	Identifier	current_byte		1202019	1					
ANR	1202056	IdentifierDeclStatement	unsigned char output_val ;	1233:4:45193:45217	1202019	6	True				
ANR	1202057	IdentifierDecl	output_val		1202019	0					
ANR	1202058	IdentifierDeclType	unsigned char		1202019	0					
ANR	1202059	Identifier	output_val		1202019	1					
ANR	1202060	IdentifierDeclStatement	bool is_planar ;	1234:4:45223:45237	1202019	7	True				
ANR	1202061	IdentifierDecl	is_planar		1202019	0					
ANR	1202062	IdentifierDeclType	bool		1202019	0					
ANR	1202063	Identifier	is_planar		1202019	1					
ANR	1202064	IdentifierDeclStatement	byte * curr_ptr = Buffer ;	1235:4:45243:45266	1202019	8	True				
ANR	1202065	IdentifierDecl	* curr_ptr = Buffer		1202019	0					
ANR	1202066	IdentifierDeclType	byte *		1202019	0					
ANR	1202067	Identifier	curr_ptr		1202019	1					
ANR	1202068	AssignmentExpression	* curr_ptr = Buffer		1202019	2		=			
ANR	1202069	Identifier	Buffer		1202019	0					
ANR	1202070	Identifier	Buffer		1202019	1					
ANR	1202071	IdentifierDeclStatement	int plane_offset ;	1236:4:45272:45288	1202019	9	True				
ANR	1202072	IdentifierDecl	plane_offset		1202019	0					
ANR	1202073	IdentifierDeclType	int		1202019	0					
ANR	1202074	Identifier	plane_offset		1202019	1					
ANR	1202075	ExpressionStatement	is_planar = mdev -> is_planar	1238:4:45295:45322	1202019	10	True				
ANR	1202076	AssignmentExpression	is_planar = mdev -> is_planar		1202019	0		=			
ANR	1202077	Identifier	is_planar		1202019	0					
ANR	1202078	PtrMemberAccess	mdev -> is_planar		1202019	1					
ANR	1202079	Identifier	mdev		1202019	0					
ANR	1202080	Identifier	is_planar		1202019	1					
ANR	1202081	ExpressionStatement	max_bands = ( n_chan < 57 ? n_chan : 56 )	1239:4:45328:45368	1202019	11	True				
ANR	1202082	AssignmentExpression	max_bands = ( n_chan < 57 ? n_chan : 56 )		1202019	0		=			
ANR	1202083	Identifier	max_bands		1202019	0					
ANR	1202084	ConditionalExpression	n_chan < 57 ? n_chan : 56		1202019	1					
ANR	1202085	Condition	n_chan < 57		1202019	0					
ANR	1202086	RelationalExpression	n_chan < 57		1202019	0		<			
ANR	1202087	Identifier	n_chan		1202019	0					
ANR	1202088	PrimaryExpression	57		1202019	1					
ANR	1202089	Identifier	n_chan		1202019	1					
ANR	1202090	PrimaryExpression	56		1202019	2					
ANR	1202091	IfStatement	if ( is_planar )		1202019	12					
ANR	1202092	Condition	is_planar	1240:8:45421:45429	1202019	0	True				
ANR	1202093	Identifier	is_planar		1202019	0					
ANR	1202094	CompoundStatement		15:19:391:391	1202019	1					
ANR	1202095	ExpressionStatement	"gs_sprintf ( full_file_name , ""%d)PATTERN_PLANE_%dx%dx%d.raw"" , global_pat_index , mdev -> raster , height , max_bands )"	1241:8:45442:45568	1202019	0	True				
ANR	1202096	CallExpression	"gs_sprintf ( full_file_name , ""%d)PATTERN_PLANE_%dx%dx%d.raw"" , global_pat_index , mdev -> raster , height , max_bands )"		1202019	0					
ANR	1202097	Callee	gs_sprintf		1202019	0					
ANR	1202098	Identifier	gs_sprintf		1202019	0					
ANR	1202099	ArgumentList	full_file_name		1202019	1					
ANR	1202100	Argument	full_file_name		1202019	0					
ANR	1202101	Identifier	full_file_name		1202019	0					
ANR	1202102	Argument	"""%d)PATTERN_PLANE_%dx%dx%d.raw"""		1202019	1					
ANR	1202103	PrimaryExpression	"""%d)PATTERN_PLANE_%dx%dx%d.raw"""		1202019	0					
ANR	1202104	Argument	global_pat_index		1202019	2					
ANR	1202105	Identifier	global_pat_index		1202019	0					
ANR	1202106	Argument	mdev -> raster		1202019	3					
ANR	1202107	PtrMemberAccess	mdev -> raster		1202019	0					
ANR	1202108	Identifier	mdev		1202019	0					
ANR	1202109	Identifier	raster		1202019	1					
ANR	1202110	Argument	height		1202019	4					
ANR	1202111	Identifier	height		1202019	0					
ANR	1202112	Argument	max_bands		1202019	5					
ANR	1202113	Identifier	max_bands		1202019	0					
ANR	1202114	ElseStatement	else		1202019	0					
ANR	1202115	CompoundStatement		18:11:540:540	1202019	0					
ANR	1202116	ExpressionStatement	"gs_sprintf ( full_file_name , ""%d)PATTERN_CHUNK_%dx%dx%d.raw"" , global_pat_index , width , height , max_bands )"	1244:8:45591:45710	1202019	0	True				
ANR	1202117	CallExpression	"gs_sprintf ( full_file_name , ""%d)PATTERN_CHUNK_%dx%dx%d.raw"" , global_pat_index , width , height , max_bands )"		1202019	0					
ANR	1202118	Callee	gs_sprintf		1202019	0					
ANR	1202119	Identifier	gs_sprintf		1202019	0					
ANR	1202120	ArgumentList	full_file_name		1202019	1					
ANR	1202121	Argument	full_file_name		1202019	0					
ANR	1202122	Identifier	full_file_name		1202019	0					
ANR	1202123	Argument	"""%d)PATTERN_CHUNK_%dx%dx%d.raw"""		1202019	1					
ANR	1202124	PrimaryExpression	"""%d)PATTERN_CHUNK_%dx%dx%d.raw"""		1202019	0					
ANR	1202125	Argument	global_pat_index		1202019	2					
ANR	1202126	Identifier	global_pat_index		1202019	0					
ANR	1202127	Argument	width		1202019	3					
ANR	1202128	Identifier	width		1202019	0					
ANR	1202129	Argument	height		1202019	4					
ANR	1202130	Identifier	height		1202019	0					
ANR	1202131	Argument	max_bands		1202019	5					
ANR	1202132	Identifier	max_bands		1202019	0					
ANR	1202133	ExpressionStatement	"fid = gp_fopen ( full_file_name , ""wb"" )"	1247:4:45722:45757	1202019	13	True				
ANR	1202134	AssignmentExpression	"fid = gp_fopen ( full_file_name , ""wb"" )"		1202019	0		=			
ANR	1202135	Identifier	fid		1202019	0					
ANR	1202136	CallExpression	"gp_fopen ( full_file_name , ""wb"" )"		1202019	1					
ANR	1202137	Callee	gp_fopen		1202019	0					
ANR	1202138	Identifier	gp_fopen		1202019	0					
ANR	1202139	ArgumentList	full_file_name		1202019	1					
ANR	1202140	Argument	full_file_name		1202019	0					
ANR	1202141	Identifier	full_file_name		1202019	0					
ANR	1202142	Argument	"""wb"""		1202019	1					
ANR	1202143	PrimaryExpression	"""wb"""		1202019	0					
ANR	1202144	IfStatement	if ( depth >= 8 )		1202019	14					
ANR	1202145	Condition	depth >= 8	1248:8:45767:45776	1202019	0	True				
ANR	1202146	RelationalExpression	depth >= 8		1202019	0		>=			
ANR	1202147	Identifier	depth		1202019	0					
ANR	1202148	PrimaryExpression	8		1202019	1					
ANR	1202149	CompoundStatement		23:20:738:738	1202019	1					
ANR	1202150	IfStatement	if ( is_planar )		1202019	0					
ANR	1202151	Condition	is_planar	1250:12:45821:45829	1202019	0	True				
ANR	1202152	Identifier	is_planar		1202019	0					
ANR	1202153	CompoundStatement		25:23:791:791	1202019	1					
ANR	1202154	ForStatement	for ( m = 0 ; m < max_bands ; m ++ )		1202019	0					
ANR	1202155	ForInit	m = 0 ;	1251:17:45851:45856	1202019	0	True				
ANR	1202156	AssignmentExpression	m = 0		1202019	0		=			
ANR	1202157	Identifier	m		1202019	0					
ANR	1202158	PrimaryExpression	0		1202019	1					
ANR	1202159	Condition	m < max_bands	1251:24:45858:45870	1202019	1	True				
ANR	1202160	RelationalExpression	m < max_bands		1202019	0		<			
ANR	1202161	Identifier	m		1202019	0					
ANR	1202162	Identifier	max_bands		1202019	1					
ANR	1202163	PostIncDecOperationExpression	m ++	1251:39:45873:45875	1202019	2	True				
ANR	1202164	Identifier	m		1202019	0					
ANR	1202165	IncDec	++		1202019	1					
ANR	1202166	CompoundStatement		26:44:837:837	1202019	3					
ANR	1202167	ExpressionStatement	curr_ptr = mdev -> line_ptrs [ m * mdev -> height ]	1252:16:45896:45938	1202019	0	True				
ANR	1202168	AssignmentExpression	curr_ptr = mdev -> line_ptrs [ m * mdev -> height ]		1202019	0		=			
ANR	1202169	Identifier	curr_ptr		1202019	0					
ANR	1202170	ArrayIndexing	mdev -> line_ptrs [ m * mdev -> height ]		1202019	1					
ANR	1202171	PtrMemberAccess	mdev -> line_ptrs		1202019	0					
ANR	1202172	Identifier	mdev		1202019	0					
ANR	1202173	Identifier	line_ptrs		1202019	1					
ANR	1202174	MultiplicativeExpression	m * mdev -> height		1202019	1		*			
ANR	1202175	Identifier	m		1202019	0					
ANR	1202176	PtrMemberAccess	mdev -> height		1202019	1					
ANR	1202177	Identifier	mdev		1202019	0					
ANR	1202178	Identifier	height		1202019	1					
ANR	1202179	ExpressionStatement	"fwrite ( curr_ptr , 1 , mdev -> height * mdev -> raster , fid )"	1253:16:45956:46009	1202019	1	True				
ANR	1202180	CallExpression	"fwrite ( curr_ptr , 1 , mdev -> height * mdev -> raster , fid )"		1202019	0					
ANR	1202181	Callee	fwrite		1202019	0					
ANR	1202182	Identifier	fwrite		1202019	0					
ANR	1202183	ArgumentList	curr_ptr		1202019	1					
ANR	1202184	Argument	curr_ptr		1202019	0					
ANR	1202185	Identifier	curr_ptr		1202019	0					
ANR	1202186	Argument	1		1202019	1					
ANR	1202187	PrimaryExpression	1		1202019	0					
ANR	1202188	Argument	mdev -> height * mdev -> raster		1202019	2					
ANR	1202189	MultiplicativeExpression	mdev -> height * mdev -> raster		1202019	0		*			
ANR	1202190	PtrMemberAccess	mdev -> height		1202019	0					
ANR	1202191	Identifier	mdev		1202019	0					
ANR	1202192	Identifier	height		1202019	1					
ANR	1202193	PtrMemberAccess	mdev -> raster		1202019	1					
ANR	1202194	Identifier	mdev		1202019	0					
ANR	1202195	Identifier	raster		1202019	1					
ANR	1202196	Argument	fid		1202019	3					
ANR	1202197	Identifier	fid		1202019	0					
ANR	1202198	ElseStatement	else		1202019	0					
ANR	1202199	CompoundStatement		30:15:999:999	1202019	0					
ANR	1202200	ExpressionStatement	"fwrite ( Buffer , 1 , max_bands * height * width , fid )"	1257:12:46096:46146	1202019	0	True				
ANR	1202201	CallExpression	"fwrite ( Buffer , 1 , max_bands * height * width , fid )"		1202019	0					
ANR	1202202	Callee	fwrite		1202019	0					
ANR	1202203	Identifier	fwrite		1202019	0					
ANR	1202204	ArgumentList	Buffer		1202019	1					
ANR	1202205	Argument	Buffer		1202019	0					
ANR	1202206	Identifier	Buffer		1202019	0					
ANR	1202207	Argument	1		1202019	1					
ANR	1202208	PrimaryExpression	1		1202019	0					
ANR	1202209	Argument	max_bands * height * width		1202019	2					
ANR	1202210	MultiplicativeExpression	max_bands * height * width		1202019	0		*			
ANR	1202211	Identifier	max_bands		1202019	0					
ANR	1202212	MultiplicativeExpression	height * width		1202019	1		*			
ANR	1202213	Identifier	height		1202019	0					
ANR	1202214	Identifier	width		1202019	1					
ANR	1202215	Argument	fid		1202019	3					
ANR	1202216	Identifier	fid		1202019	0					
ANR	1202217	ElseStatement	else		1202019	0					
ANR	1202218	CompoundStatement		34:11:1128:1128	1202019	0					
ANR	1202219	IfStatement	if ( is_planar )		1202019	0					
ANR	1202220	Condition	is_planar	1263:12:46344:46352	1202019	0	True				
ANR	1202221	Identifier	is_planar		1202019	0					
ANR	1202222	CompoundStatement		38:23:1314:1314	1202019	1					
ANR	1202223	ExpressionStatement	plane_offset = mdev -> raster * mdev -> height	1264:12:46369:46411	1202019	0	True				
ANR	1202224	AssignmentExpression	plane_offset = mdev -> raster * mdev -> height		1202019	0		=			
ANR	1202225	Identifier	plane_offset		1202019	0					
ANR	1202226	MultiplicativeExpression	mdev -> raster * mdev -> height		1202019	1		*			
ANR	1202227	PtrMemberAccess	mdev -> raster		1202019	0					
ANR	1202228	Identifier	mdev		1202019	0					
ANR	1202229	Identifier	raster		1202019	1					
ANR	1202230	PtrMemberAccess	mdev -> height		1202019	1					
ANR	1202231	Identifier	mdev		1202019	0					
ANR	1202232	Identifier	height		1202019	1					
ANR	1202233	ForStatement	for ( m = 0 ; m < max_bands ; m ++ )		1202019	1					
ANR	1202234	ForInit	m = 0 ;	1265:17:46430:46435	1202019	0	True				
ANR	1202235	AssignmentExpression	m = 0		1202019	0		=			
ANR	1202236	Identifier	m		1202019	0					
ANR	1202237	PrimaryExpression	0		1202019	1					
ANR	1202238	Condition	m < max_bands	1265:24:46437:46449	1202019	1	True				
ANR	1202239	RelationalExpression	m < max_bands		1202019	0		<			
ANR	1202240	Identifier	m		1202019	0					
ANR	1202241	Identifier	max_bands		1202019	1					
ANR	1202242	PostIncDecOperationExpression	m ++	1265:39:46452:46454	1202019	2	True				
ANR	1202243	Identifier	m		1202019	0					
ANR	1202244	IncDec	++		1202019	1					
ANR	1202245	CompoundStatement		40:44:1416:1416	1202019	3					
ANR	1202246	ExpressionStatement	curr_ptr = mdev -> line_ptrs [ m * mdev -> height ]	1266:16:46475:46517	1202019	0	True				
ANR	1202247	AssignmentExpression	curr_ptr = mdev -> line_ptrs [ m * mdev -> height ]		1202019	0		=			
ANR	1202248	Identifier	curr_ptr		1202019	0					
ANR	1202249	ArrayIndexing	mdev -> line_ptrs [ m * mdev -> height ]		1202019	1					
ANR	1202250	PtrMemberAccess	mdev -> line_ptrs		1202019	0					
ANR	1202251	Identifier	mdev		1202019	0					
ANR	1202252	Identifier	line_ptrs		1202019	1					
ANR	1202253	MultiplicativeExpression	m * mdev -> height		1202019	1		*			
ANR	1202254	Identifier	m		1202019	0					
ANR	1202255	PtrMemberAccess	mdev -> height		1202019	1					
ANR	1202256	Identifier	mdev		1202019	0					
ANR	1202257	Identifier	height		1202019	1					
ANR	1202258	ForStatement	for ( j = 0 ; j < height ; j ++ )		1202019	1					
ANR	1202259	ForInit	j = 0 ;	1267:21:46540:46545	1202019	0	True				
ANR	1202260	AssignmentExpression	j = 0		1202019	0		=			
ANR	1202261	Identifier	j		1202019	0					
ANR	1202262	PrimaryExpression	0		1202019	1					
ANR	1202263	Condition	j < height	1267:28:46547:46556	1202019	1	True				
ANR	1202264	RelationalExpression	j < height		1202019	0		<			
ANR	1202265	Identifier	j		1202019	0					
ANR	1202266	Identifier	height		1202019	1					
ANR	1202267	PostIncDecOperationExpression	j ++	1267:40:46559:46561	1202019	2	True				
ANR	1202268	Identifier	j		1202019	0					
ANR	1202269	IncDec	++		1202019	1					
ANR	1202270	CompoundStatement		42:45:1523:1523	1202019	3					
ANR	1202271	ForStatement	for ( k = 0 ; k < width ; k ++ )		1202019	0					
ANR	1202272	ForInit	k = 0 ;	1268:25:46591:46596	1202019	0	True				
ANR	1202273	AssignmentExpression	k = 0		1202019	0		=			
ANR	1202274	Identifier	k		1202019	0					
ANR	1202275	PrimaryExpression	0		1202019	1					
ANR	1202276	Condition	k < width	1268:32:46598:46606	1202019	1	True				
ANR	1202277	RelationalExpression	k < width		1202019	0		<			
ANR	1202278	Identifier	k		1202019	0					
ANR	1202279	Identifier	width		1202019	1					
ANR	1202280	PostIncDecOperationExpression	k ++	1268:43:46609:46611	1202019	2	True				
ANR	1202281	Identifier	k		1202019	0					
ANR	1202282	IncDec	++		1202019	1					
ANR	1202283	CompoundStatement		43:48:1573:1573	1202019	3					
ANR	1202284	ExpressionStatement	byte_number = ( int ) ceil ( ( ( ( float ) k + 1.0 ) / 8.0 ) ) - 1	1269:24:46640:46696	1202019	0	True				
ANR	1202285	AssignmentExpression	byte_number = ( int ) ceil ( ( ( ( float ) k + 1.0 ) / 8.0 ) ) - 1		1202019	0		=			
ANR	1202286	Identifier	byte_number		1202019	0					
ANR	1202287	AdditiveExpression	( int ) ceil ( ( ( ( float ) k + 1.0 ) / 8.0 ) ) - 1		1202019	1		-			
ANR	1202288	CastExpression	( int ) ceil ( ( ( ( float ) k + 1.0 ) / 8.0 ) )		1202019	0					
ANR	1202289	CastTarget	int		1202019	0					
ANR	1202290	CallExpression	ceil ( ( ( ( float ) k + 1.0 ) / 8.0 ) )		1202019	1					
ANR	1202291	Callee	ceil		1202019	0					
ANR	1202292	Identifier	ceil		1202019	0					
ANR	1202293	ArgumentList	( ( float ) k + 1.0 ) / 8.0		1202019	1					
ANR	1202294	Argument	( ( float ) k + 1.0 ) / 8.0		1202019	0					
ANR	1202295	MultiplicativeExpression	( ( float ) k + 1.0 ) / 8.0		1202019	0		/			
ANR	1202296	AdditiveExpression	( float ) k + 1.0		1202019	0		+			
ANR	1202297	CastExpression	( float ) k		1202019	0					
ANR	1202298	CastTarget	float		1202019	0					
ANR	1202299	Identifier	k		1202019	1					
ANR	1202300	PrimaryExpression	1.0		1202019	1					
ANR	1202301	PrimaryExpression	8.0		1202019	1					
ANR	1202302	PrimaryExpression	1		1202019	1					
ANR	1202303	ExpressionStatement	current_byte = curr_ptr [ j * ( mdev -> raster ) + byte_number ]	1270:24:46722:46777	1202019	1	True				
ANR	1202304	AssignmentExpression	current_byte = curr_ptr [ j * ( mdev -> raster ) + byte_number ]		1202019	0		=			
ANR	1202305	Identifier	current_byte		1202019	0					
ANR	1202306	ArrayIndexing	curr_ptr [ j * ( mdev -> raster ) + byte_number ]		1202019	1					
ANR	1202307	Identifier	curr_ptr		1202019	0					
ANR	1202308	AdditiveExpression	j * ( mdev -> raster ) + byte_number		1202019	1		+			
ANR	1202309	MultiplicativeExpression	j * ( mdev -> raster )		1202019	0		*			
ANR	1202310	Identifier	j		1202019	0					
ANR	1202311	PtrMemberAccess	mdev -> raster		1202019	1					
ANR	1202312	Identifier	mdev		1202019	0					
ANR	1202313	Identifier	raster		1202019	1					
ANR	1202314	Identifier	byte_number		1202019	1					
ANR	1202315	ExpressionStatement	bit_position = 7 - ( k - byte_number * 8 )	1271:24:46803:46842	1202019	2	True				
ANR	1202316	AssignmentExpression	bit_position = 7 - ( k - byte_number * 8 )		1202019	0		=			
ANR	1202317	Identifier	bit_position		1202019	0					
ANR	1202318	AdditiveExpression	7 - ( k - byte_number * 8 )		1202019	1		-			
ANR	1202319	PrimaryExpression	7		1202019	0					
ANR	1202320	AdditiveExpression	k - byte_number * 8		1202019	1		-			
ANR	1202321	Identifier	k		1202019	0					
ANR	1202322	MultiplicativeExpression	byte_number * 8		1202019	1		*			
ANR	1202323	Identifier	byte_number		1202019	0					
ANR	1202324	PrimaryExpression	8		1202019	1					
ANR	1202325	ExpressionStatement	output_val = ( ( current_byte >> bit_position ) & 0x1 ) * 255	1272:24:46868:46925	1202019	3	True				
ANR	1202326	AssignmentExpression	output_val = ( ( current_byte >> bit_position ) & 0x1 ) * 255		1202019	0		=			
ANR	1202327	Identifier	output_val		1202019	0					
ANR	1202328	MultiplicativeExpression	( ( current_byte >> bit_position ) & 0x1 ) * 255		1202019	1		*			
ANR	1202329	BitAndExpression	( current_byte >> bit_position ) & 0x1		1202019	0		&			
ANR	1202330	ShiftExpression	current_byte >> bit_position		1202019	0		>>			
ANR	1202331	Identifier	current_byte		1202019	0					
ANR	1202332	Identifier	bit_position		1202019	1					
ANR	1202333	PrimaryExpression	0x1		1202019	1					
ANR	1202334	PrimaryExpression	255		1202019	1					
ANR	1202335	ExpressionStatement	"fwrite ( & output_val , 1 , 1 , fid )"	1273:24:46951:46978	1202019	4	True				
ANR	1202336	CallExpression	"fwrite ( & output_val , 1 , 1 , fid )"		1202019	0					
ANR	1202337	Callee	fwrite		1202019	0					
ANR	1202338	Identifier	fwrite		1202019	0					
ANR	1202339	ArgumentList	& output_val		1202019	1					
ANR	1202340	Argument	& output_val		1202019	0					
ANR	1202341	UnaryOperationExpression	& output_val		1202019	0					
ANR	1202342	UnaryOperator	&		1202019	0					
ANR	1202343	Identifier	output_val		1202019	1					
ANR	1202344	Argument	1		1202019	1					
ANR	1202345	PrimaryExpression	1		1202019	0					
ANR	1202346	Argument	1		1202019	2					
ANR	1202347	PrimaryExpression	1		1202019	0					
ANR	1202348	Argument	fid		1202019	3					
ANR	1202349	Identifier	fid		1202019	0					
ANR	1202350	ElseStatement	else		1202019	0					
ANR	1202351	CompoundStatement		52:15:2008:2008	1202019	0					
ANR	1202352	ForStatement	for ( j = 0 ; j < height ; j ++ )		1202019	0					
ANR	1202353	ForInit	j = 0 ;	1278:17:47068:47073	1202019	0	True				
ANR	1202354	AssignmentExpression	j = 0		1202019	0		=			
ANR	1202355	Identifier	j		1202019	0					
ANR	1202356	PrimaryExpression	0		1202019	1					
ANR	1202357	Condition	j < height	1278:24:47075:47084	1202019	1	True				
ANR	1202358	RelationalExpression	j < height		1202019	0		<			
ANR	1202359	Identifier	j		1202019	0					
ANR	1202360	Identifier	height		1202019	1					
ANR	1202361	PostIncDecOperationExpression	j ++	1278:36:47087:47089	1202019	2	True				
ANR	1202362	Identifier	j		1202019	0					
ANR	1202363	IncDec	++		1202019	1					
ANR	1202364	CompoundStatement		53:41:2051:2051	1202019	3					
ANR	1202365	ForStatement	for ( k = 0 ; k < width ; k ++ )		1202019	0					
ANR	1202366	ForInit	k = 0 ;	1279:21:47115:47120	1202019	0	True				
ANR	1202367	AssignmentExpression	k = 0		1202019	0		=			
ANR	1202368	Identifier	k		1202019	0					
ANR	1202369	PrimaryExpression	0		1202019	1					
ANR	1202370	Condition	k < width	1279:28:47122:47130	1202019	1	True				
ANR	1202371	RelationalExpression	k < width		1202019	0		<			
ANR	1202372	Identifier	k		1202019	0					
ANR	1202373	Identifier	width		1202019	1					
ANR	1202374	PostIncDecOperationExpression	k ++	1279:39:47133:47135	1202019	2	True				
ANR	1202375	Identifier	k		1202019	0					
ANR	1202376	IncDec	++		1202019	1					
ANR	1202377	CompoundStatement		54:44:2097:2097	1202019	3					
ANR	1202378	ForStatement	for ( m = 0 ; m < max_bands ; m ++ )		1202019	0					
ANR	1202379	ForInit	m = 0 ;	1280:25:47165:47170	1202019	0	True				
ANR	1202380	AssignmentExpression	m = 0		1202019	0		=			
ANR	1202381	Identifier	m		1202019	0					
ANR	1202382	PrimaryExpression	0		1202019	1					
ANR	1202383	Condition	m < max_bands	1280:32:47172:47184	1202019	1	True				
ANR	1202384	RelationalExpression	m < max_bands		1202019	0		<			
ANR	1202385	Identifier	m		1202019	0					
ANR	1202386	Identifier	max_bands		1202019	1					
ANR	1202387	PostIncDecOperationExpression	m ++	1280:47:47187:47189	1202019	2	True				
ANR	1202388	Identifier	m		1202019	0					
ANR	1202389	IncDec	++		1202019	1					
ANR	1202390	CompoundStatement		55:52:2151:2151	1202019	3					
ANR	1202391	ExpressionStatement	byte_number = ( int ) ceil ( ( ( ( float ) k * ( float ) max_bands + ( float ) m + 1.0 ) / 8.0 ) ) - 1	1282:24:47267:47425	1202019	0	True				
ANR	1202392	AssignmentExpression	byte_number = ( int ) ceil ( ( ( ( float ) k * ( float ) max_bands + ( float ) m + 1.0 ) / 8.0 ) ) - 1		1202019	0		=			
ANR	1202393	Identifier	byte_number		1202019	0					
ANR	1202394	AdditiveExpression	( int ) ceil ( ( ( ( float ) k * ( float ) max_bands + ( float ) m + 1.0 ) / 8.0 ) ) - 1		1202019	1		-			
ANR	1202395	CastExpression	( int ) ceil ( ( ( ( float ) k * ( float ) max_bands + ( float ) m + 1.0 ) / 8.0 ) )		1202019	0					
ANR	1202396	CastTarget	int		1202019	0					
ANR	1202397	CallExpression	ceil ( ( ( ( float ) k * ( float ) max_bands + ( float ) m + 1.0 ) / 8.0 ) )		1202019	1					
ANR	1202398	Callee	ceil		1202019	0					
ANR	1202399	Identifier	ceil		1202019	0					
ANR	1202400	ArgumentList	( ( float ) k * ( float ) max_bands + ( float ) m + 1.0 ) / 8.0		1202019	1					
ANR	1202401	Argument	( ( float ) k * ( float ) max_bands + ( float ) m + 1.0 ) / 8.0		1202019	0					
ANR	1202402	MultiplicativeExpression	( ( float ) k * ( float ) max_bands + ( float ) m + 1.0 ) / 8.0		1202019	0		/			
ANR	1202403	AdditiveExpression	( float ) k * ( float ) max_bands + ( float ) m + 1.0		1202019	0		+			
ANR	1202404	MultiplicativeExpression	( float ) k * ( float ) max_bands		1202019	0		*			
ANR	1202405	CastExpression	( float ) k		1202019	0					
ANR	1202406	CastTarget	float		1202019	0					
ANR	1202407	Identifier	k		1202019	1					
ANR	1202408	CastExpression	( float ) max_bands		1202019	1					
ANR	1202409	CastTarget	float		1202019	0					
ANR	1202410	Identifier	max_bands		1202019	1					
ANR	1202411	AdditiveExpression	( float ) m + 1.0		1202019	1		+			
ANR	1202412	CastExpression	( float ) m		1202019	0					
ANR	1202413	CastTarget	float		1202019	0					
ANR	1202414	Identifier	m		1202019	1					
ANR	1202415	PrimaryExpression	1.0		1202019	1					
ANR	1202416	PrimaryExpression	8.0		1202019	1					
ANR	1202417	PrimaryExpression	1		1202019	1					
ANR	1202418	ExpressionStatement	current_byte = curr_ptr [ j * ( mdev -> raster ) + byte_number ]	1286:24:47502:47589	1202019	1	True				
ANR	1202419	AssignmentExpression	current_byte = curr_ptr [ j * ( mdev -> raster ) + byte_number ]		1202019	0		=			
ANR	1202420	Identifier	current_byte		1202019	0					
ANR	1202421	ArrayIndexing	curr_ptr [ j * ( mdev -> raster ) + byte_number ]		1202019	1					
ANR	1202422	Identifier	curr_ptr		1202019	0					
ANR	1202423	AdditiveExpression	j * ( mdev -> raster ) + byte_number		1202019	1		+			
ANR	1202424	MultiplicativeExpression	j * ( mdev -> raster )		1202019	0		*			
ANR	1202425	Identifier	j		1202019	0					
ANR	1202426	PtrMemberAccess	mdev -> raster		1202019	1					
ANR	1202427	Identifier	mdev		1202019	0					
ANR	1202428	Identifier	raster		1202019	1					
ANR	1202429	Identifier	byte_number		1202019	1					
ANR	1202430	ExpressionStatement	bit_position = 7 - ( k * max_bands + m - byte_number * 8 )	1289:24:47662:47751	1202019	2	True				
ANR	1202431	AssignmentExpression	bit_position = 7 - ( k * max_bands + m - byte_number * 8 )		1202019	0		=			
ANR	1202432	Identifier	bit_position		1202019	0					
ANR	1202433	AdditiveExpression	7 - ( k * max_bands + m - byte_number * 8 )		1202019	1		-			
ANR	1202434	PrimaryExpression	7		1202019	0					
ANR	1202435	AdditiveExpression	k * max_bands + m - byte_number * 8		1202019	1		+			
ANR	1202436	MultiplicativeExpression	k * max_bands		1202019	0		*			
ANR	1202437	Identifier	k		1202019	0					
ANR	1202438	Identifier	max_bands		1202019	1					
ANR	1202439	AdditiveExpression	m - byte_number * 8		1202019	1		-			
ANR	1202440	Identifier	m		1202019	0					
ANR	1202441	MultiplicativeExpression	byte_number * 8		1202019	1		*			
ANR	1202442	Identifier	byte_number		1202019	0					
ANR	1202443	PrimaryExpression	8		1202019	1					
ANR	1202444	ExpressionStatement	output_val = ( ( current_byte >> bit_position ) & 0x1 ) * 255	1292:24:47831:47920	1202019	3	True				
ANR	1202445	AssignmentExpression	output_val = ( ( current_byte >> bit_position ) & 0x1 ) * 255		1202019	0		=			
ANR	1202446	Identifier	output_val		1202019	0					
ANR	1202447	MultiplicativeExpression	( ( current_byte >> bit_position ) & 0x1 ) * 255		1202019	1		*			
ANR	1202448	BitAndExpression	( current_byte >> bit_position ) & 0x1		1202019	0		&			
ANR	1202449	ShiftExpression	current_byte >> bit_position		1202019	0		>>			
ANR	1202450	Identifier	current_byte		1202019	0					
ANR	1202451	Identifier	bit_position		1202019	1					
ANR	1202452	PrimaryExpression	0x1		1202019	1					
ANR	1202453	PrimaryExpression	255		1202019	1					
ANR	1202454	ExpressionStatement	"fwrite ( & output_val , 1 , 1 , fid )"	1294:24:47946:47973	1202019	4	True				
ANR	1202455	CallExpression	"fwrite ( & output_val , 1 , 1 , fid )"		1202019	0					
ANR	1202456	Callee	fwrite		1202019	0					
ANR	1202457	Identifier	fwrite		1202019	0					
ANR	1202458	ArgumentList	& output_val		1202019	1					
ANR	1202459	Argument	& output_val		1202019	0					
ANR	1202460	UnaryOperationExpression	& output_val		1202019	0					
ANR	1202461	UnaryOperator	&		1202019	0					
ANR	1202462	Identifier	output_val		1202019	1					
ANR	1202463	Argument	1		1202019	1					
ANR	1202464	PrimaryExpression	1		1202019	0					
ANR	1202465	Argument	1		1202019	2					
ANR	1202466	PrimaryExpression	1		1202019	0					
ANR	1202467	Argument	fid		1202019	3					
ANR	1202468	Identifier	fid		1202019	0					
ANR	1202469	ExpressionStatement	fclose ( fid )	1300:4:48049:48060	1202019	15	True				
ANR	1202470	CallExpression	fclose ( fid )		1202019	0					
ANR	1202471	Callee	fclose		1202019	0					
ANR	1202472	Identifier	fclose		1202019	0					
ANR	1202473	ArgumentList	fid		1202019	1					
ANR	1202474	Argument	fid		1202019	0					
ANR	1202475	Identifier	fid		1202019	0					
ANR	1202476	ReturnType	static void		1202019	1					
ANR	1202477	Identifier	dump_raw_pattern		1202019	2					
ANR	1202478	ParameterList	"int height , int width , int n_chan , int depth , byte * Buffer , int raster , const gx_device_memory * mdev"		1202019	3					
ANR	1202479	Parameter	int height	1224:17:44921:44930	1202019	0	True				
ANR	1202480	ParameterType	int		1202019	0					
ANR	1202481	Identifier	height		1202019	1					
ANR	1202482	Parameter	int width	1224:29:44933:44941	1202019	1	True				
ANR	1202483	ParameterType	int		1202019	0					
ANR	1202484	Identifier	width		1202019	1					
ANR	1202485	Parameter	int n_chan	1224:40:44944:44953	1202019	2	True				
ANR	1202486	ParameterType	int		1202019	0					
ANR	1202487	Identifier	n_chan		1202019	1					
ANR	1202488	Parameter	int depth	1224:52:44956:44964	1202019	3	True				
ANR	1202489	ParameterType	int		1202019	0					
ANR	1202490	Identifier	depth		1202019	1					
ANR	1202491	Parameter	byte * Buffer	1225:16:44983:44994	1202019	4	True				
ANR	1202492	ParameterType	byte *		1202019	0					
ANR	1202493	Identifier	Buffer		1202019	1					
ANR	1202494	Parameter	int raster	1225:30:44997:45006	1202019	5	True				
ANR	1202495	ParameterType	int		1202019	0					
ANR	1202496	Identifier	raster		1202019	1					
ANR	1202497	Parameter	const gx_device_memory * mdev	1225:42:45009:45037	1202019	6	True				
ANR	1202498	ParameterType	const gx_device_memory *		1202019	0					
ANR	1202499	Identifier	mdev		1202019	1					
ANR	1202500	CFGEntryNode	ENTRY		1202019		True				
ANR	1202501	CFGExitNode	EXIT		1202019		True				
ANR	1202502	Symbol	fid		1202019						
ANR	1202503	Symbol	mdev -> height		1202019						
ANR	1202504	Symbol	byte_number		1202019						
ANR	1202505	Symbol	* mdev -> line_ptrs		1202019						
ANR	1202506	Symbol	full_file_name		1202019						
ANR	1202507	Symbol	current_byte		1202019						
ANR	1202508	Symbol	mdev -> raster		1202019						
ANR	1202509	Symbol	& output_val		1202019						
ANR	1202510	Symbol	max_bands		1202019						
ANR	1202511	Symbol	mdev -> is_planar		1202019						
ANR	1202512	Symbol	bit_position		1202019						
ANR	1202513	Symbol	global_pat_index		1202019						
ANR	1202514	Symbol	gp_fopen		1202019						
ANR	1202515	Symbol	n_chan		1202019						
ANR	1202516	Symbol	height		1202019						
ANR	1202517	Symbol	* mdev		1202019						
ANR	1202518	Symbol	Buffer		1202019						
ANR	1202519	Symbol	raster		1202019						
ANR	1202520	Symbol	is_planar		1202019						
ANR	1202521	Symbol	curr_ptr		1202019						
ANR	1202522	Symbol	j		1202019						
ANR	1202523	Symbol	k		1202019						
ANR	1202524	Symbol	ceil		1202019						
ANR	1202525	Symbol	* mdev -> height		1202019						
ANR	1202526	Symbol	m		1202019						
ANR	1202527	Symbol	* * mdev		1202019						
ANR	1202528	Symbol	mdev -> line_ptrs		1202019						
ANR	1202529	Symbol	* byte_number		1202019						
ANR	1202530	Symbol	depth		1202019						
ANR	1202531	Symbol	output_val		1202019						
ANR	1202532	Symbol	* curr_ptr		1202019						
ANR	1202533	Symbol	* j		1202019						
ANR	1202534	Symbol	* m		1202019						
ANR	1202535	Symbol	width		1202019						
ANR	1202536	Symbol	mdev		1202019						
ANR	1202537	Symbol	plane_offset		1202019						
ANR	1202538	Symbol	* mdev -> raster		1202019						
ANR	1202539	Function	make_bitmap	1304:0:48072:48847							
ANR	1202540	FunctionDef	"make_bitmap (register gx_strip_bitmap * pbm , const gx_device_memory * mdev , gx_bitmap_id id)"		1202539	0					
ANR	1202541	CompoundStatement		1307:0:48188:48847	1202539	0					
ANR	1202542	ExpressionStatement	pbm -> data = mdev -> base	1308:4:48194:48216	1202539	0	True				
ANR	1202543	AssignmentExpression	pbm -> data = mdev -> base		1202539	0		=			
ANR	1202544	PtrMemberAccess	pbm -> data		1202539	0					
ANR	1202545	Identifier	pbm		1202539	0					
ANR	1202546	Identifier	data		1202539	1					
ANR	1202547	PtrMemberAccess	mdev -> base		1202539	1					
ANR	1202548	Identifier	mdev		1202539	0					
ANR	1202549	Identifier	base		1202539	1					
ANR	1202550	ExpressionStatement	pbm -> raster = mdev -> raster	1309:4:48222:48248	1202539	1	True				
ANR	1202551	AssignmentExpression	pbm -> raster = mdev -> raster		1202539	0		=			
ANR	1202552	PtrMemberAccess	pbm -> raster		1202539	0					
ANR	1202553	Identifier	pbm		1202539	0					
ANR	1202554	Identifier	raster		1202539	1					
ANR	1202555	PtrMemberAccess	mdev -> raster		1202539	1					
ANR	1202556	Identifier	mdev		1202539	0					
ANR	1202557	Identifier	raster		1202539	1					
ANR	1202558	ExpressionStatement	pbm -> rep_width = pbm -> size . x = mdev -> width	1310:4:48254:48296	1202539	2	True				
ANR	1202559	AssignmentExpression	pbm -> rep_width = pbm -> size . x = mdev -> width		1202539	0		=			
ANR	1202560	PtrMemberAccess	pbm -> rep_width		1202539	0					
ANR	1202561	Identifier	pbm		1202539	0					
ANR	1202562	Identifier	rep_width		1202539	1					
ANR	1202563	AssignmentExpression	pbm -> size . x = mdev -> width		1202539	1		=			
ANR	1202564	MemberAccess	pbm -> size . x		1202539	0					
ANR	1202565	PtrMemberAccess	pbm -> size		1202539	0					
ANR	1202566	Identifier	pbm		1202539	0					
ANR	1202567	Identifier	size		1202539	1					
ANR	1202568	Identifier	x		1202539	1					
ANR	1202569	PtrMemberAccess	mdev -> width		1202539	1					
ANR	1202570	Identifier	mdev		1202539	0					
ANR	1202571	Identifier	width		1202539	1					
ANR	1202572	ExpressionStatement	pbm -> rep_height = pbm -> size . y = mdev -> height	1311:4:48302:48346	1202539	3	True				
ANR	1202573	AssignmentExpression	pbm -> rep_height = pbm -> size . y = mdev -> height		1202539	0		=			
ANR	1202574	PtrMemberAccess	pbm -> rep_height		1202539	0					
ANR	1202575	Identifier	pbm		1202539	0					
ANR	1202576	Identifier	rep_height		1202539	1					
ANR	1202577	AssignmentExpression	pbm -> size . y = mdev -> height		1202539	1		=			
ANR	1202578	MemberAccess	pbm -> size . y		1202539	0					
ANR	1202579	PtrMemberAccess	pbm -> size		1202539	0					
ANR	1202580	Identifier	pbm		1202539	0					
ANR	1202581	Identifier	size		1202539	1					
ANR	1202582	Identifier	y		1202539	1					
ANR	1202583	PtrMemberAccess	mdev -> height		1202539	1					
ANR	1202584	Identifier	mdev		1202539	0					
ANR	1202585	Identifier	height		1202539	1					
ANR	1202586	ExpressionStatement	pbm -> id = id	1312:4:48352:48364	1202539	4	True				
ANR	1202587	AssignmentExpression	pbm -> id = id		1202539	0		=			
ANR	1202588	PtrMemberAccess	pbm -> id		1202539	0					
ANR	1202589	Identifier	pbm		1202539	0					
ANR	1202590	Identifier	id		1202539	1					
ANR	1202591	Identifier	id		1202539	1					
ANR	1202592	ExpressionStatement	pbm -> rep_shift = pbm -> shift = 0	1313:4:48370:48401	1202539	5	True				
ANR	1202593	AssignmentExpression	pbm -> rep_shift = pbm -> shift = 0		1202539	0		=			
ANR	1202594	PtrMemberAccess	pbm -> rep_shift		1202539	0					
ANR	1202595	Identifier	pbm		1202539	0					
ANR	1202596	Identifier	rep_shift		1202539	1					
ANR	1202597	AssignmentExpression	pbm -> shift = 0		1202539	1		=			
ANR	1202598	PtrMemberAccess	pbm -> shift		1202539	0					
ANR	1202599	Identifier	pbm		1202539	0					
ANR	1202600	Identifier	shift		1202539	1					
ANR	1202601	PrimaryExpression	0		1202539	1					
ANR	1202602	ExpressionStatement	pbm -> num_planes = ( mdev -> is_planar ? mdev -> color_info . num_components : 1 )	1314:4:48407:48480	1202539	6	True				
ANR	1202603	AssignmentExpression	pbm -> num_planes = ( mdev -> is_planar ? mdev -> color_info . num_components : 1 )		1202539	0		=			
ANR	1202604	PtrMemberAccess	pbm -> num_planes		1202539	0					
ANR	1202605	Identifier	pbm		1202539	0					
ANR	1202606	Identifier	num_planes		1202539	1					
ANR	1202607	ConditionalExpression	mdev -> is_planar ? mdev -> color_info . num_components : 1		1202539	1					
ANR	1202608	Condition	mdev -> is_planar		1202539	0					
ANR	1202609	PtrMemberAccess	mdev -> is_planar		1202539	0					
ANR	1202610	Identifier	mdev		1202539	0					
ANR	1202611	Identifier	is_planar		1202539	1					
ANR	1202612	MemberAccess	mdev -> color_info . num_components		1202539	1					
ANR	1202613	PtrMemberAccess	mdev -> color_info		1202539	0					
ANR	1202614	Identifier	mdev		1202539	0					
ANR	1202615	Identifier	color_info		1202539	1					
ANR	1202616	Identifier	num_components		1202539	1					
ANR	1202617	PrimaryExpression	1		1202539	2					
ANR	1202618	ExpressionStatement	"dump_raw_pattern ( pbm -> rep_height , pbm -> rep_width , mdev -> color_info . num_components , mdev -> color_info . depth , ( unsigned char * ) mdev -> base , pbm -> raster , mdev )"	1319:4:48557:48807	1202539	7	True				
ANR	1202619	CallExpression	"dump_raw_pattern ( pbm -> rep_height , pbm -> rep_width , mdev -> color_info . num_components , mdev -> color_info . depth , ( unsigned char * ) mdev -> base , pbm -> raster , mdev )"		1202539	0					
ANR	1202620	Callee	dump_raw_pattern		1202539	0					
ANR	1202621	Identifier	dump_raw_pattern		1202539	0					
ANR	1202622	ArgumentList	pbm -> rep_height		1202539	1					
ANR	1202623	Argument	pbm -> rep_height		1202539	0					
ANR	1202624	PtrMemberAccess	pbm -> rep_height		1202539	0					
ANR	1202625	Identifier	pbm		1202539	0					
ANR	1202626	Identifier	rep_height		1202539	1					
ANR	1202627	Argument	pbm -> rep_width		1202539	1					
ANR	1202628	PtrMemberAccess	pbm -> rep_width		1202539	0					
ANR	1202629	Identifier	pbm		1202539	0					
ANR	1202630	Identifier	rep_width		1202539	1					
ANR	1202631	Argument	mdev -> color_info . num_components		1202539	2					
ANR	1202632	MemberAccess	mdev -> color_info . num_components		1202539	0					
ANR	1202633	PtrMemberAccess	mdev -> color_info		1202539	0					
ANR	1202634	Identifier	mdev		1202539	0					
ANR	1202635	Identifier	color_info		1202539	1					
ANR	1202636	Identifier	num_components		1202539	1					
ANR	1202637	Argument	mdev -> color_info . depth		1202539	3					
ANR	1202638	MemberAccess	mdev -> color_info . depth		1202539	0					
ANR	1202639	PtrMemberAccess	mdev -> color_info		1202539	0					
ANR	1202640	Identifier	mdev		1202539	0					
ANR	1202641	Identifier	color_info		1202539	1					
ANR	1202642	Identifier	depth		1202539	1					
ANR	1202643	Argument	( unsigned char * ) mdev -> base		1202539	4					
ANR	1202644	CastExpression	( unsigned char * ) mdev -> base		1202539	0					
ANR	1202645	CastTarget	unsigned char *		1202539	0					
ANR	1202646	PtrMemberAccess	mdev -> base		1202539	1					
ANR	1202647	Identifier	mdev		1202539	0					
ANR	1202648	Identifier	base		1202539	1					
ANR	1202649	Argument	pbm -> raster		1202539	5					
ANR	1202650	PtrMemberAccess	pbm -> raster		1202539	0					
ANR	1202651	Identifier	pbm		1202539	0					
ANR	1202652	Identifier	raster		1202539	1					
ANR	1202653	Argument	mdev		1202539	6					
ANR	1202654	Identifier	mdev		1202539	0					
ANR	1202655	ExpressionStatement	global_pat_index ++	1325:8:48818:48836	1202539	8	True				
ANR	1202656	PostIncDecOperationExpression	global_pat_index ++		1202539	0					
ANR	1202657	Identifier	global_pat_index		1202539	0					
ANR	1202658	IncDec	++		1202539	1					
ANR	1202659	ReturnType	static void		1202539	1					
ANR	1202660	Identifier	make_bitmap		1202539	2					
ANR	1202661	ParameterList	"register gx_strip_bitmap * pbm , const gx_device_memory * mdev , gx_bitmap_id id"		1202539	3					
ANR	1202662	Parameter	register gx_strip_bitmap * pbm	1305:12:48096:48125	1202539	0	True				
ANR	1202663	ParameterType	register gx_strip_bitmap *		1202539	0					
ANR	1202664	Identifier	pbm		1202539	1					
ANR	1202665	Parameter	const gx_device_memory * mdev	1305:44:48128:48156	1202539	1	True				
ANR	1202666	ParameterType	const gx_device_memory *		1202539	0					
ANR	1202667	Identifier	mdev		1202539	1					
ANR	1202668	Parameter	gx_bitmap_id id	1306:12:48171:48185	1202539	2	True				
ANR	1202669	ParameterType	gx_bitmap_id		1202539	0					
ANR	1202670	Identifier	id		1202539	1					
ANR	1202671	CFGEntryNode	ENTRY		1202539		True				
ANR	1202672	CFGExitNode	EXIT		1202539		True				
ANR	1202673	Symbol	pbm -> size . y		1202539						
ANR	1202674	Symbol	mdev -> color_info . num_components		1202539						
ANR	1202675	Symbol	mdev -> height		1202539						
ANR	1202676	Symbol	pbm -> size . x		1202539						
ANR	1202677	Symbol	mdev -> color_info . depth		1202539						
ANR	1202678	Symbol	mdev -> raster		1202539						
ANR	1202679	Symbol	pbm -> num_planes		1202539						
ANR	1202680	Symbol	mdev -> base		1202539						
ANR	1202681	Symbol	mdev -> is_planar		1202539						
ANR	1202682	Symbol	pbm -> shift		1202539						
ANR	1202683	Symbol	global_pat_index		1202539						
ANR	1202684	Symbol	pbm -> size		1202539						
ANR	1202685	Symbol	pbm -> id		1202539						
ANR	1202686	Symbol	id		1202539						
ANR	1202687	Symbol	mdev -> color_info		1202539						
ANR	1202688	Symbol	* mdev		1202539						
ANR	1202689	Symbol	pbm -> rep_shift		1202539						
ANR	1202690	Symbol	pbm -> rep_height		1202539						
ANR	1202691	Symbol	* pbm		1202539						
ANR	1202692	Symbol	pbm -> raster		1202539						
ANR	1202693	Symbol	mdev -> width		1202539						
ANR	1202694	Symbol	pbm -> rep_width		1202539						
ANR	1202695	Symbol	pbm		1202539						
ANR	1202696	Symbol	mdev		1202539						
ANR	1202697	Symbol	pbm -> data		1202539						
ANR	1202698	Function	gx_pattern_cache_winnow	1332:0:48903:49353							
ANR	1202699	FunctionDef	"gx_pattern_cache_winnow (gx_pattern_cache * pcache , bool ( * proc ) ( gx_color_tile * ctile , void * proc_data ) , void * proc_data)"		1202698	0					
ANR	1202700	CompoundStatement		1335:0:49032:49353	1202698	0					
ANR	1202701	IdentifierDeclStatement	uint i ;	1336:4:49038:49044	1202698	0	True				
ANR	1202702	IdentifierDecl	i		1202698	0					
ANR	1202703	IdentifierDeclType	uint		1202698	0					
ANR	1202704	Identifier	i		1202698	1					
ANR	1202705	IfStatement	if ( pcache == 0 )		1202698	1					
ANR	1202706	Condition	pcache == 0	1338:8:49055:49065	1202698	0	True				
ANR	1202707	EqualityExpression	pcache == 0		1202698	0		==			
ANR	1202708	Identifier	pcache		1202698	0					
ANR	1202709	PrimaryExpression	0		1202698	1					
ANR	1202710	ReturnStatement	return ;	1339:8:49114:49120	1202698	1	True				
ANR	1202711	ForStatement	for ( i = 0 ; i < pcache -> num_tiles ; ++ i )		1202698	2					
ANR	1202712	ForInit	i = 0 ;	1340:9:49131:49136	1202698	0	True				
ANR	1202713	AssignmentExpression	i = 0		1202698	0		=			
ANR	1202714	Identifier	i		1202698	0					
ANR	1202715	PrimaryExpression	0		1202698	1					
ANR	1202716	Condition	i < pcache -> num_tiles	1340:16:49138:49158	1202698	1	True				
ANR	1202717	RelationalExpression	i < pcache -> num_tiles		1202698	0		<			
ANR	1202718	Identifier	i		1202698	0					
ANR	1202719	PtrMemberAccess	pcache -> num_tiles		1202698	1					
ANR	1202720	Identifier	pcache		1202698	0					
ANR	1202721	Identifier	num_tiles		1202698	1					
ANR	1202722	UnaryExpression	++ i	1340:39:49161:49163	1202698	2	True				
ANR	1202723	IncDec	++		1202698	0					
ANR	1202724	Identifier	i		1202698	1					
ANR	1202725	CompoundStatement		7:8:143:183	1202698	3					
ANR	1202726	IdentifierDeclStatement	gx_color_tile * ctile = & pcache -> tiles [ i ] ;	1341:8:49176:49216	1202698	0	True				
ANR	1202727	IdentifierDecl	* ctile = & pcache -> tiles [ i ]		1202698	0					
ANR	1202728	IdentifierDeclType	gx_color_tile *		1202698	0					
ANR	1202729	Identifier	ctile		1202698	1					
ANR	1202730	AssignmentExpression	* ctile = & pcache -> tiles [ i ]		1202698	2		=			
ANR	1202731	Identifier	ctile		1202698	0					
ANR	1202732	UnaryOperationExpression	& pcache -> tiles [ i ]		1202698	1					
ANR	1202733	UnaryOperator	&		1202698	0					
ANR	1202734	ArrayIndexing	pcache -> tiles [ i ]		1202698	1					
ANR	1202735	PtrMemberAccess	pcache -> tiles		1202698	0					
ANR	1202736	Identifier	pcache		1202698	0					
ANR	1202737	Identifier	tiles		1202698	1					
ANR	1202738	Identifier	i		1202698	1					
ANR	1202739	IfStatement	"if ( ctile -> id != gx_no_bitmap_id && ( * proc ) ( ctile , proc_data ) )"		1202698	1					
ANR	1202740	Condition	"ctile -> id != gx_no_bitmap_id && ( * proc ) ( ctile , proc_data )"	1343:12:49231:49288	1202698	0	True				
ANR	1202741	AndExpression	"ctile -> id != gx_no_bitmap_id && ( * proc ) ( ctile , proc_data )"		1202698	0		&&			
ANR	1202742	EqualityExpression	ctile -> id != gx_no_bitmap_id		1202698	0		!=			
ANR	1202743	PtrMemberAccess	ctile -> id		1202698	0					
ANR	1202744	Identifier	ctile		1202698	0					
ANR	1202745	Identifier	id		1202698	1					
ANR	1202746	Identifier	gx_no_bitmap_id		1202698	1					
ANR	1202747	CallExpression	"( * proc ) ( ctile , proc_data )"		1202698	1					
ANR	1202748	Callee	* proc		1202698	0					
ANR	1202749	UnaryOperationExpression	* proc		1202698	0					
ANR	1202750	UnaryOperator	*		1202698	0					
ANR	1202751	Identifier	proc		1202698	1					
ANR	1202752	ArgumentList	ctile		1202698	1					
ANR	1202753	Argument	ctile		1202698	0					
ANR	1202754	Identifier	ctile		1202698	0					
ANR	1202755	Argument	proc_data		1202698	1					
ANR	1202756	Identifier	proc_data		1202698	0					
ANR	1202757	ExpressionStatement	"gx_pattern_cache_free_entry ( pcache , ctile )"	1344:12:49303:49345	1202698	1	True				
ANR	1202758	CallExpression	"gx_pattern_cache_free_entry ( pcache , ctile )"		1202698	0					
ANR	1202759	Callee	gx_pattern_cache_free_entry		1202698	0					
ANR	1202760	Identifier	gx_pattern_cache_free_entry		1202698	0					
ANR	1202761	ArgumentList	pcache		1202698	1					
ANR	1202762	Argument	pcache		1202698	0					
ANR	1202763	Identifier	pcache		1202698	0					
ANR	1202764	Argument	ctile		1202698	1					
ANR	1202765	Identifier	ctile		1202698	0					
ANR	1202766	ReturnType	void		1202698	1					
ANR	1202767	Identifier	gx_pattern_cache_winnow		1202698	2					
ANR	1202768	ParameterList	"gx_pattern_cache * pcache , bool ( * proc ) ( gx_color_tile * ctile , void * proc_data ) , void * proc_data"		1202698	3					
ANR	1202769	Parameter	gx_pattern_cache * pcache	1333:24:48932:48956	1202698	0	True				
ANR	1202770	ParameterType	gx_pattern_cache *		1202698	0					
ANR	1202771	Identifier	pcache		1202698	1					
ANR	1202772	Parameter	"bool ( * proc ) ( gx_color_tile * ctile , void * proc_data )"	1334:2:48961:49012	1202698	1	True				
ANR	1202773	ParameterType	"(( gx_color_tile * ctile , void * proc_data ) bool) *"		1202698	0					
ANR	1202774	Identifier	proc		1202698	1					
ANR	1202775	Parameter	void * proc_data	1334:56:49015:49029	1202698	2	True				
ANR	1202776	ParameterType	void *		1202698	0					
ANR	1202777	Identifier	proc_data		1202698	1					
ANR	1202778	CFGEntryNode	ENTRY		1202698		True				
ANR	1202779	CFGExitNode	EXIT		1202698		True				
ANR	1202780	Symbol	proc_data		1202698						
ANR	1202781	Symbol	* pcache		1202698						
ANR	1202782	Symbol	* ctile		1202698						
ANR	1202783	Symbol	proc		1202698						
ANR	1202784	Symbol	gx_no_bitmap_id		1202698						
ANR	1202785	Symbol	pcache -> tiles		1202698						
ANR	1202786	Symbol	pcache -> num_tiles		1202698						
ANR	1202787	Symbol	ctile		1202698						
ANR	1202788	Symbol	i		1202698						
ANR	1202789	Symbol	ctile -> id		1202698						
ANR	1202790	Symbol	pcache		1202698						
ANR	1202791	Symbol	* proc		1202698						
ANR	1202792	Function	gx_erase_colored_pattern	1350:0:49438:50537							
ANR	1202793	FunctionDef	gx_erase_colored_pattern (gs_gstate * pgs)		1202792	0					
ANR	1202794	CompoundStatement		1352:0:49483:50537	1202792	0					
ANR	1202795	IdentifierDeclStatement	int code ;	1353:4:49489:49497	1202792	0	True				
ANR	1202796	IdentifierDecl	code		1202792	0					
ANR	1202797	IdentifierDeclType	int		1202792	0					
ANR	1202798	Identifier	code		1202792	1					
ANR	1202799	IdentifierDeclStatement	gx_device_pattern_accum * pdev = ( gx_device_pattern_accum * ) gs_currentdevice ( pgs ) ;	1354:4:49503:49583	1202792	1	True				
ANR	1202800	IdentifierDecl	* pdev = ( gx_device_pattern_accum * ) gs_currentdevice ( pgs )		1202792	0					
ANR	1202801	IdentifierDeclType	gx_device_pattern_accum *		1202792	0					
ANR	1202802	Identifier	pdev		1202792	1					
ANR	1202803	AssignmentExpression	* pdev = ( gx_device_pattern_accum * ) gs_currentdevice ( pgs )		1202792	2		=			
ANR	1202804	Identifier	pdev		1202792	0					
ANR	1202805	CastExpression	( gx_device_pattern_accum * ) gs_currentdevice ( pgs )		1202792	1					
ANR	1202806	CastTarget	gx_device_pattern_accum *		1202792	0					
ANR	1202807	CallExpression	gs_currentdevice ( pgs )		1202792	1					
ANR	1202808	Callee	gs_currentdevice		1202792	0					
ANR	1202809	Identifier	gs_currentdevice		1202792	0					
ANR	1202810	ArgumentList	pgs		1202792	1					
ANR	1202811	Argument	pgs		1202792	0					
ANR	1202812	Identifier	pgs		1202792	0					
ANR	1202813	IfStatement	if ( ( code = gs_gsave ( pgs ) ) < 0 )		1202792	2					
ANR	1202814	Condition	( code = gs_gsave ( pgs ) ) < 0	1356:8:49594:49619	1202792	0	True				
ANR	1202815	RelationalExpression	( code = gs_gsave ( pgs ) ) < 0		1202792	0		<			
ANR	1202816	AssignmentExpression	code = gs_gsave ( pgs )		1202792	0		=			
ANR	1202817	Identifier	code		1202792	0					
ANR	1202818	CallExpression	gs_gsave ( pgs )		1202792	1					
ANR	1202819	Callee	gs_gsave		1202792	0					
ANR	1202820	Identifier	gs_gsave		1202792	0					
ANR	1202821	ArgumentList	pgs		1202792	1					
ANR	1202822	Argument	pgs		1202792	0					
ANR	1202823	Identifier	pgs		1202792	0					
ANR	1202824	PrimaryExpression	0		1202792	1					
ANR	1202825	ReturnStatement	return code ;	1357:8:49630:49641	1202792	1	True				
ANR	1202826	Identifier	code		1202792	0					
ANR	1202827	IfStatement	"if ( ( code = gs_setgray ( pgs , 1.0 ) ) >= 0 )"		1202792	3					
ANR	1202828	Condition	"( code = gs_setgray ( pgs , 1.0 ) ) >= 0"	1358:8:49651:49684	1202792	0	True				
ANR	1202829	RelationalExpression	"( code = gs_setgray ( pgs , 1.0 ) ) >= 0"		1202792	0		>=			
ANR	1202830	AssignmentExpression	"code = gs_setgray ( pgs , 1.0 )"		1202792	0		=			
ANR	1202831	Identifier	code		1202792	0					
ANR	1202832	CallExpression	"gs_setgray ( pgs , 1.0 )"		1202792	1					
ANR	1202833	Callee	gs_setgray		1202792	0					
ANR	1202834	Identifier	gs_setgray		1202792	0					
ANR	1202835	ArgumentList	pgs		1202792	1					
ANR	1202836	Argument	pgs		1202792	0					
ANR	1202837	Identifier	pgs		1202792	0					
ANR	1202838	Argument	1.0		1202792	1					
ANR	1202839	PrimaryExpression	1.0		1202792	0					
ANR	1202840	PrimaryExpression	0		1202792	1					
ANR	1202841	CompoundStatement		10:15:274:321	1202792	1					
ANR	1202842	IdentifierDeclStatement	gs_rect rect ;	1359:8:49697:49709	1202792	0	True				
ANR	1202843	IdentifierDecl	rect		1202792	0					
ANR	1202844	IdentifierDeclType	gs_rect		1202792	0					
ANR	1202845	Identifier	rect		1202792	1					
ANR	1202846	IdentifierDeclStatement	gx_device_memory * mask ;	1360:8:49719:49741	1202792	1	True				
ANR	1202847	IdentifierDecl	* mask		1202792	0					
ANR	1202848	IdentifierDeclType	gx_device_memory *		1202792	0					
ANR	1202849	Identifier	mask		1202792	1					
ANR	1202850	Statement	static	1361:8:49751:49756	1202792	2	True				
ANR	1202851	IdentifierDeclStatement	"const gs_matrix identity = { 1 , 0 , 0 , 1 , 0 , 0 } ;"	1361:15:49758:49805	1202792	3	True				
ANR	1202852	IdentifierDecl	"identity = { 1 , 0 , 0 , 1 , 0 , 0 }"		1202792	0					
ANR	1202853	IdentifierDeclType	const gs_matrix		1202792	0					
ANR	1202854	Identifier	identity		1202792	1					
ANR	1202855	AssignmentExpression	"identity = { 1 , 0 , 0 , 1 , 0 , 0 }"		1202792	2		=			
ANR	1202856	Identifier	identity		1202792	0					
ANR	1202857	InitializerList	1		1202792	1					
ANR	1202858	PrimaryExpression	1		1202792	0					
ANR	1202859	PrimaryExpression	0		1202792	1					
ANR	1202860	PrimaryExpression	0		1202792	2					
ANR	1202861	PrimaryExpression	1		1202792	3					
ANR	1202862	PrimaryExpression	0		1202792	4					
ANR	1202863	PrimaryExpression	0		1202792	5					
ANR	1202864	ExpressionStatement	pgs -> log_op = lop_default	1363:8:49816:49841	1202792	4	True				
ANR	1202865	AssignmentExpression	pgs -> log_op = lop_default		1202792	0		=			
ANR	1202866	PtrMemberAccess	pgs -> log_op		1202792	0					
ANR	1202867	Identifier	pgs		1202792	0					
ANR	1202868	Identifier	log_op		1202792	1					
ANR	1202869	Identifier	lop_default		1202792	1					
ANR	1202870	ExpressionStatement	rect . p . x = 0.0	1364:8:49851:49865	1202792	5	True				
ANR	1202871	AssignmentExpression	rect . p . x = 0.0		1202792	0		=			
ANR	1202872	MemberAccess	rect . p . x		1202792	0					
ANR	1202873	MemberAccess	rect . p		1202792	0					
ANR	1202874	Identifier	rect		1202792	0					
ANR	1202875	Identifier	p		1202792	1					
ANR	1202876	Identifier	x		1202792	1					
ANR	1202877	PrimaryExpression	0.0		1202792	1					
ANR	1202878	ExpressionStatement	rect . p . y = 0.0	1365:8:49875:49889	1202792	6	True				
ANR	1202879	AssignmentExpression	rect . p . y = 0.0		1202792	0		=			
ANR	1202880	MemberAccess	rect . p . y		1202792	0					
ANR	1202881	MemberAccess	rect . p		1202792	0					
ANR	1202882	Identifier	rect		1202792	0					
ANR	1202883	Identifier	p		1202792	1					
ANR	1202884	Identifier	y		1202792	1					
ANR	1202885	PrimaryExpression	0.0		1202792	1					
ANR	1202886	ExpressionStatement	rect . q . x = ( double ) pdev -> width	1366:8:49899:49929	1202792	7	True				
ANR	1202887	AssignmentExpression	rect . q . x = ( double ) pdev -> width		1202792	0		=			
ANR	1202888	MemberAccess	rect . q . x		1202792	0					
ANR	1202889	MemberAccess	rect . q		1202792	0					
ANR	1202890	Identifier	rect		1202792	0					
ANR	1202891	Identifier	q		1202792	1					
ANR	1202892	Identifier	x		1202792	1					
ANR	1202893	CastExpression	( double ) pdev -> width		1202792	1					
ANR	1202894	CastTarget	double		1202792	0					
ANR	1202895	PtrMemberAccess	pdev -> width		1202792	1					
ANR	1202896	Identifier	pdev		1202792	0					
ANR	1202897	Identifier	width		1202792	1					
ANR	1202898	ExpressionStatement	rect . q . y = ( double ) pdev -> height	1367:8:49939:49970	1202792	8	True				
ANR	1202899	AssignmentExpression	rect . q . y = ( double ) pdev -> height		1202792	0		=			
ANR	1202900	MemberAccess	rect . q . y		1202792	0					
ANR	1202901	MemberAccess	rect . q		1202792	0					
ANR	1202902	Identifier	rect		1202792	0					
ANR	1202903	Identifier	q		1202792	1					
ANR	1202904	Identifier	y		1202792	1					
ANR	1202905	CastExpression	( double ) pdev -> height		1202792	1					
ANR	1202906	CastTarget	double		1202792	0					
ANR	1202907	PtrMemberAccess	pdev -> height		1202792	1					
ANR	1202908	Identifier	pdev		1202792	0					
ANR	1202909	Identifier	height		1202792	1					
ANR	1202910	ExpressionStatement	"code = gs_setmatrix ( pgs , & identity )"	1369:8:49981:50016	1202792	9	True				
ANR	1202911	AssignmentExpression	"code = gs_setmatrix ( pgs , & identity )"		1202792	0		=			
ANR	1202912	Identifier	code		1202792	0					
ANR	1202913	CallExpression	"gs_setmatrix ( pgs , & identity )"		1202792	1					
ANR	1202914	Callee	gs_setmatrix		1202792	0					
ANR	1202915	Identifier	gs_setmatrix		1202792	0					
ANR	1202916	ArgumentList	pgs		1202792	1					
ANR	1202917	Argument	pgs		1202792	0					
ANR	1202918	Identifier	pgs		1202792	0					
ANR	1202919	Argument	& identity		1202792	1					
ANR	1202920	UnaryOperationExpression	& identity		1202792	0					
ANR	1202921	UnaryOperator	&		1202792	0					
ANR	1202922	Identifier	identity		1202792	1					
ANR	1202923	IfStatement	if ( code < 0 )		1202792	10					
ANR	1202924	Condition	code < 0	1370:12:50030:50037	1202792	0	True				
ANR	1202925	RelationalExpression	code < 0		1202792	0		<			
ANR	1202926	Identifier	code		1202792	0					
ANR	1202927	PrimaryExpression	0		1202792	1					
ANR	1202928	CompoundStatement		19:22:556:556	1202792	1					
ANR	1202929	ExpressionStatement	gs_grestore_only ( pgs )	1371:12:50054:50075	1202792	0	True				
ANR	1202930	CallExpression	gs_grestore_only ( pgs )		1202792	0					
ANR	1202931	Callee	gs_grestore_only		1202792	0					
ANR	1202932	Identifier	gs_grestore_only		1202792	0					
ANR	1202933	ArgumentList	pgs		1202792	1					
ANR	1202934	Argument	pgs		1202792	0					
ANR	1202935	Identifier	pgs		1202792	0					
ANR	1202936	ReturnStatement	return code ;	1372:12:50089:50100	1202792	1	True				
ANR	1202937	Identifier	code		1202792	0					
ANR	1202938	ExpressionStatement	mask = pdev -> mask	1376:8:50206:50223	1202792	11	True				
ANR	1202939	AssignmentExpression	mask = pdev -> mask		1202792	0		=			
ANR	1202940	Identifier	mask		1202792	0					
ANR	1202941	PtrMemberAccess	pdev -> mask		1202792	1					
ANR	1202942	Identifier	pdev		1202792	0					
ANR	1202943	Identifier	mask		1202792	1					
ANR	1202944	ExpressionStatement	pdev -> mask = NULL	1377:8:50233:50250	1202792	12	True				
ANR	1202945	AssignmentExpression	pdev -> mask = NULL		1202792	0		=			
ANR	1202946	PtrMemberAccess	pdev -> mask		1202792	0					
ANR	1202947	Identifier	pdev		1202792	0					
ANR	1202948	Identifier	mask		1202792	1					
ANR	1202949	Identifier	NULL		1202792	1					
ANR	1202950	ExpressionStatement	"code = gs_rectfill ( pgs , & rect , 1 )"	1378:8:50260:50293	1202792	13	True				
ANR	1202951	AssignmentExpression	"code = gs_rectfill ( pgs , & rect , 1 )"		1202792	0		=			
ANR	1202952	Identifier	code		1202792	0					
ANR	1202953	CallExpression	"gs_rectfill ( pgs , & rect , 1 )"		1202792	1					
ANR	1202954	Callee	gs_rectfill		1202792	0					
ANR	1202955	Identifier	gs_rectfill		1202792	0					
ANR	1202956	ArgumentList	pgs		1202792	1					
ANR	1202957	Argument	pgs		1202792	0					
ANR	1202958	Identifier	pgs		1202792	0					
ANR	1202959	Argument	& rect		1202792	1					
ANR	1202960	UnaryOperationExpression	& rect		1202792	0					
ANR	1202961	UnaryOperator	&		1202792	0					
ANR	1202962	Identifier	rect		1202792	1					
ANR	1202963	Argument	1		1202792	2					
ANR	1202964	PrimaryExpression	1		1202792	0					
ANR	1202965	ExpressionStatement	pdev -> mask = mask	1380:8:50334:50351	1202792	14	True				
ANR	1202966	AssignmentExpression	pdev -> mask = mask		1202792	0		=			
ANR	1202967	PtrMemberAccess	pdev -> mask		1202792	0					
ANR	1202968	Identifier	pdev		1202792	0					
ANR	1202969	Identifier	mask		1202792	1					
ANR	1202970	Identifier	mask		1202792	1					
ANR	1202971	IfStatement	if ( code < 0 )		1202792	15					
ANR	1202972	Condition	code < 0	1381:12:50365:50372	1202792	0	True				
ANR	1202973	RelationalExpression	code < 0		1202792	0		<			
ANR	1202974	Identifier	code		1202792	0					
ANR	1202975	PrimaryExpression	0		1202792	1					
ANR	1202976	CompoundStatement		30:22:891:891	1202792	1					
ANR	1202977	ExpressionStatement	gs_grestore_only ( pgs )	1382:12:50389:50410	1202792	0	True				
ANR	1202978	CallExpression	gs_grestore_only ( pgs )		1202792	0					
ANR	1202979	Callee	gs_grestore_only		1202792	0					
ANR	1202980	Identifier	gs_grestore_only		1202792	0					
ANR	1202981	ArgumentList	pgs		1202792	1					
ANR	1202982	Argument	pgs		1202792	0					
ANR	1202983	Identifier	pgs		1202792	0					
ANR	1202984	ReturnStatement	return code ;	1383:12:50424:50435	1202792	1	True				
ANR	1202985	Identifier	code		1202792	0					
ANR	1202986	ExpressionStatement	gs_grestore_only ( pgs )	1387:4:50497:50518	1202792	4	True				
ANR	1202987	CallExpression	gs_grestore_only ( pgs )		1202792	0					
ANR	1202988	Callee	gs_grestore_only		1202792	0					
ANR	1202989	Identifier	gs_grestore_only		1202792	0					
ANR	1202990	ArgumentList	pgs		1202792	1					
ANR	1202991	Argument	pgs		1202792	0					
ANR	1202992	Identifier	pgs		1202792	0					
ANR	1202993	ReturnStatement	return code ;	1388:4:50524:50535	1202792	5	True				
ANR	1202994	Identifier	code		1202792	0					
ANR	1202995	ReturnType	int		1202792	1					
ANR	1202996	Identifier	gx_erase_colored_pattern		1202792	2					
ANR	1202997	ParameterList	gs_gstate * pgs		1202792	3					
ANR	1202998	Parameter	gs_gstate * pgs	1351:25:49467:49480	1202792	0	True				
ANR	1202999	ParameterType	gs_gstate *		1202792	0					
ANR	1203000	Identifier	pgs		1202792	1					
ANR	1203001	CFGEntryNode	ENTRY		1202792		True				
ANR	1203002	CFGExitNode	EXIT		1202792		True				
ANR	1203003	Symbol	gs_setgray		1202792						
ANR	1203004	Symbol	code		1202792						
ANR	1203005	Symbol	* pgs		1202792						
ANR	1203006	Symbol	gs_currentdevice		1202792						
ANR	1203007	Symbol	rect . q . y		1202792						
ANR	1203008	Symbol	pdev -> height		1202792						
ANR	1203009	Symbol	& rect		1202792						
ANR	1203010	Symbol	rect . q . x		1202792						
ANR	1203011	Symbol	pdev		1202792						
ANR	1203012	Symbol	rect		1202792						
ANR	1203013	Symbol	gs_gsave		1202792						
ANR	1203014	Symbol	identity		1202792						
ANR	1203015	Symbol	pgs		1202792						
ANR	1203016	Symbol	gs_rectfill		1202792						
ANR	1203017	Symbol	mask		1202792						
ANR	1203018	Symbol	pgs -> log_op		1202792						
ANR	1203019	Symbol	NULL		1202792						
ANR	1203020	Symbol	& identity		1202792						
ANR	1203021	Symbol	lop_default		1202792						
ANR	1203022	Symbol	rect . p . x		1202792						
ANR	1203023	Symbol	rect . p . y		1202792						
ANR	1203024	Symbol	pdev -> mask		1202792						
ANR	1203025	Symbol	pdev -> width		1202792						
ANR	1203026	Symbol	* pdev		1202792						
ANR	1203027	Symbol	gs_setmatrix		1202792						
ANR	1203028	Symbol	rect . q		1202792						
ANR	1203029	Symbol	rect . p		1202792						
ANR	1203030	Function	gx_pattern_load	1393:0:50673:58222							
ANR	1203031	FunctionDef	"gx_pattern_load (gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		1203030	0					
ANR	1203032	CompoundStatement		1396:0:50798:58222	1203030	0					
ANR	1203033	IdentifierDeclStatement	gx_device_forward * adev = NULL ;	1397:4:50804:50834	1203030	0	True				
ANR	1203034	IdentifierDecl	* adev = NULL		1203030	0					
ANR	1203035	IdentifierDeclType	gx_device_forward *		1203030	0					
ANR	1203036	Identifier	adev		1203030	1					
ANR	1203037	AssignmentExpression	* adev = NULL		1203030	2		=			
ANR	1203038	Identifier	NULL		1203030	0					
ANR	1203039	Identifier	NULL		1203030	1					
ANR	1203040	IdentifierDeclStatement	gs_pattern1_instance_t * pinst = ( gs_pattern1_instance_t * ) pdc -> ccolor . pattern ;	1398:4:50840:50925	1203030	1	True				
ANR	1203041	IdentifierDecl	* pinst = ( gs_pattern1_instance_t * ) pdc -> ccolor . pattern		1203030	0					
ANR	1203042	IdentifierDeclType	gs_pattern1_instance_t *		1203030	0					
ANR	1203043	Identifier	pinst		1203030	1					
ANR	1203044	AssignmentExpression	* pinst = ( gs_pattern1_instance_t * ) pdc -> ccolor . pattern		1203030	2		=			
ANR	1203045	Identifier	pinst		1203030	0					
ANR	1203046	CastExpression	( gs_pattern1_instance_t * ) pdc -> ccolor . pattern		1203030	1					
ANR	1203047	CastTarget	gs_pattern1_instance_t *		1203030	0					
ANR	1203048	MemberAccess	pdc -> ccolor . pattern		1203030	1					
ANR	1203049	PtrMemberAccess	pdc -> ccolor		1203030	0					
ANR	1203050	Identifier	pdc		1203030	0					
ANR	1203051	Identifier	ccolor		1203030	1					
ANR	1203052	Identifier	pattern		1203030	1					
ANR	1203053	IdentifierDeclStatement	gs_gstate * saved ;	1400:4:50931:50947	1203030	2	True				
ANR	1203054	IdentifierDecl	* saved		1203030	0					
ANR	1203055	IdentifierDeclType	gs_gstate *		1203030	0					
ANR	1203056	Identifier	saved		1203030	1					
ANR	1203057	IdentifierDeclStatement	gx_color_tile * ctile ;	1401:4:50953:50973	1203030	3	True				
ANR	1203058	IdentifierDecl	* ctile		1203030	0					
ANR	1203059	IdentifierDeclType	gx_color_tile *		1203030	0					
ANR	1203060	Identifier	ctile		1203030	1					
ANR	1203061	IdentifierDeclStatement	gs_memory_t * mem = pgs -> memory ;	1402:4:50979:51009	1203030	4	True				
ANR	1203062	IdentifierDecl	* mem = pgs -> memory		1203030	0					
ANR	1203063	IdentifierDeclType	gs_memory_t *		1203030	0					
ANR	1203064	Identifier	mem		1203030	1					
ANR	1203065	AssignmentExpression	* mem = pgs -> memory		1203030	2		=			
ANR	1203066	Identifier	mem		1203030	0					
ANR	1203067	PtrMemberAccess	pgs -> memory		1203030	1					
ANR	1203068	Identifier	pgs		1203030	0					
ANR	1203069	Identifier	memory		1203030	1					
ANR	1203070	IdentifierDeclStatement	bool has_tags = device_encodes_tags ( dev ) ;	1403:4:51015:51055	1203030	5	True				
ANR	1203071	IdentifierDecl	has_tags = device_encodes_tags ( dev )		1203030	0					
ANR	1203072	IdentifierDeclType	bool		1203030	0					
ANR	1203073	Identifier	has_tags		1203030	1					
ANR	1203074	AssignmentExpression	has_tags = device_encodes_tags ( dev )		1203030	2		=			
ANR	1203075	Identifier	has_tags		1203030	0					
ANR	1203076	CallExpression	device_encodes_tags ( dev )		1203030	1					
ANR	1203077	Callee	device_encodes_tags		1203030	0					
ANR	1203078	Identifier	device_encodes_tags		1203030	0					
ANR	1203079	ArgumentList	dev		1203030	1					
ANR	1203080	Argument	dev		1203030	0					
ANR	1203081	Identifier	dev		1203030	0					
ANR	1203082	IdentifierDeclStatement	int code ;	1404:4:51061:51069	1203030	6	True				
ANR	1203083	IdentifierDecl	code		1203030	0					
ANR	1203084	IdentifierDeclType	int		1203030	0					
ANR	1203085	Identifier	code		1203030	1					
ANR	1203086	IfStatement	if ( pgs -> pattern_cache == NULL )		1203030	7					
ANR	1203087	Condition	pgs -> pattern_cache == NULL	1406:8:51080:51105	1203030	0	True				
ANR	1203088	EqualityExpression	pgs -> pattern_cache == NULL		1203030	0		==			
ANR	1203089	PtrMemberAccess	pgs -> pattern_cache		1203030	0					
ANR	1203090	Identifier	pgs		1203030	0					
ANR	1203091	Identifier	pattern_cache		1203030	1					
ANR	1203092	Identifier	NULL		1203030	1					
ANR	1203093	IfStatement	if ( ( code = ensure_pattern_cache ( ( gs_gstate * ) pgs ) ) < 0 )		1203030	1					
ANR	1203094	Condition	( code = ensure_pattern_cache ( ( gs_gstate * ) pgs ) ) < 0	1407:12:51120:51170	1203030	0	True				
ANR	1203095	RelationalExpression	( code = ensure_pattern_cache ( ( gs_gstate * ) pgs ) ) < 0		1203030	0		<			
ANR	1203096	AssignmentExpression	code = ensure_pattern_cache ( ( gs_gstate * ) pgs )		1203030	0		=			
ANR	1203097	Identifier	code		1203030	0					
ANR	1203098	CallExpression	ensure_pattern_cache ( ( gs_gstate * ) pgs )		1203030	1					
ANR	1203099	Callee	ensure_pattern_cache		1203030	0					
ANR	1203100	Identifier	ensure_pattern_cache		1203030	0					
ANR	1203101	ArgumentList	( gs_gstate * ) pgs		1203030	1					
ANR	1203102	Argument	( gs_gstate * ) pgs		1203030	0					
ANR	1203103	CastExpression	( gs_gstate * ) pgs		1203030	0					
ANR	1203104	CastTarget	gs_gstate *		1203030	0					
ANR	1203105	Identifier	pgs		1203030	1					
ANR	1203106	PrimaryExpression	0		1203030	1					
ANR	1203107	ReturnStatement	return code ;	1408:12:51217:51228	1203030	1	True				
ANR	1203108	Identifier	code		1203030	0					
ANR	1203109	IfStatement	"if ( gx_pattern_cache_lookup ( pdc , pgs , dev , select ) )"		1203030	8					
ANR	1203110	Condition	"gx_pattern_cache_lookup ( pdc , pgs , dev , select )"	1410:8:51239:51284	1203030	0	True				
ANR	1203111	CallExpression	"gx_pattern_cache_lookup ( pdc , pgs , dev , select )"		1203030	0					
ANR	1203112	Callee	gx_pattern_cache_lookup		1203030	0					
ANR	1203113	Identifier	gx_pattern_cache_lookup		1203030	0					
ANR	1203114	ArgumentList	pdc		1203030	1					
ANR	1203115	Argument	pdc		1203030	0					
ANR	1203116	Identifier	pdc		1203030	0					
ANR	1203117	Argument	pgs		1203030	1					
ANR	1203118	Identifier	pgs		1203030	0					
ANR	1203119	Argument	dev		1203030	2					
ANR	1203120	Identifier	dev		1203030	0					
ANR	1203121	Argument	select		1203030	3					
ANR	1203122	Identifier	select		1203030	0					
ANR	1203123	ReturnStatement	return 0 ;	1411:8:51295:51303	1203030	1	True				
ANR	1203124	PrimaryExpression	0		1203030	0					
ANR	1203125	ExpressionStatement	"gx_pattern_cache_ensure_space ( ( gs_gstate * ) pgs , gx_pattern_size_estimate ( pinst , has_tags ) )"	1414:4:51396:51486	1203030	9	True				
ANR	1203126	CallExpression	"gx_pattern_cache_ensure_space ( ( gs_gstate * ) pgs , gx_pattern_size_estimate ( pinst , has_tags ) )"		1203030	0					
ANR	1203127	Callee	gx_pattern_cache_ensure_space		1203030	0					
ANR	1203128	Identifier	gx_pattern_cache_ensure_space		1203030	0					
ANR	1203129	ArgumentList	( gs_gstate * ) pgs		1203030	1					
ANR	1203130	Argument	( gs_gstate * ) pgs		1203030	0					
ANR	1203131	CastExpression	( gs_gstate * ) pgs		1203030	0					
ANR	1203132	CastTarget	gs_gstate *		1203030	0					
ANR	1203133	Identifier	pgs		1203030	1					
ANR	1203134	Argument	"gx_pattern_size_estimate ( pinst , has_tags )"		1203030	1					
ANR	1203135	CallExpression	"gx_pattern_size_estimate ( pinst , has_tags )"		1203030	0					
ANR	1203136	Callee	gx_pattern_size_estimate		1203030	0					
ANR	1203137	Identifier	gx_pattern_size_estimate		1203030	0					
ANR	1203138	ArgumentList	pinst		1203030	1					
ANR	1203139	Argument	pinst		1203030	0					
ANR	1203140	Identifier	pinst		1203030	0					
ANR	1203141	Argument	has_tags		1203030	1					
ANR	1203142	Identifier	has_tags		1203030	0					
ANR	1203143	ExpressionStatement	"adev = gx_pattern_accum_alloc ( mem , pgs -> pattern_cache -> memory , pinst , ""gx_pattern_load"" )"	1419:4:51643:51731	1203030	10	True				
ANR	1203144	AssignmentExpression	"adev = gx_pattern_accum_alloc ( mem , pgs -> pattern_cache -> memory , pinst , ""gx_pattern_load"" )"		1203030	0		=			
ANR	1203145	Identifier	adev		1203030	0					
ANR	1203146	CallExpression	"gx_pattern_accum_alloc ( mem , pgs -> pattern_cache -> memory , pinst , ""gx_pattern_load"" )"		1203030	1					
ANR	1203147	Callee	gx_pattern_accum_alloc		1203030	0					
ANR	1203148	Identifier	gx_pattern_accum_alloc		1203030	0					
ANR	1203149	ArgumentList	mem		1203030	1					
ANR	1203150	Argument	mem		1203030	0					
ANR	1203151	Identifier	mem		1203030	0					
ANR	1203152	Argument	pgs -> pattern_cache -> memory		1203030	1					
ANR	1203153	PtrMemberAccess	pgs -> pattern_cache -> memory		1203030	0					
ANR	1203154	PtrMemberAccess	pgs -> pattern_cache		1203030	0					
ANR	1203155	Identifier	pgs		1203030	0					
ANR	1203156	Identifier	pattern_cache		1203030	1					
ANR	1203157	Identifier	memory		1203030	1					
ANR	1203158	Argument	pinst		1203030	2					
ANR	1203159	Identifier	pinst		1203030	0					
ANR	1203160	Argument	"""gx_pattern_load"""		1203030	3					
ANR	1203161	PrimaryExpression	"""gx_pattern_load"""		1203030	0					
ANR	1203162	IfStatement	if ( adev == 0 )		1203030	11					
ANR	1203163	Condition	adev == 0	1420:8:51741:51749	1203030	0	True				
ANR	1203164	EqualityExpression	adev == 0		1203030	0		==			
ANR	1203165	Identifier	adev		1203030	0					
ANR	1203166	PrimaryExpression	0		1203030	1					
ANR	1203167	ExpressionStatement	return_error ( gs_error_VMerror )	1421:8:51760:51790	1203030	1	True				
ANR	1203168	CallExpression	return_error ( gs_error_VMerror )		1203030	0					
ANR	1203169	Callee	return_error		1203030	0					
ANR	1203170	Identifier	return_error		1203030	0					
ANR	1203171	ArgumentList	gs_error_VMerror		1203030	1					
ANR	1203172	Argument	gs_error_VMerror		1203030	0					
ANR	1203173	Identifier	gs_error_VMerror		1203030	0					
ANR	1203174	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) adev , dev )"	1422:4:51796:51848	1203030	12	True				
ANR	1203175	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) adev , dev )"		1203030	0					
ANR	1203176	Callee	gx_device_set_target		1203030	0					
ANR	1203177	Identifier	gx_device_set_target		1203030	0					
ANR	1203178	ArgumentList	( gx_device_forward * ) adev		1203030	1					
ANR	1203179	Argument	( gx_device_forward * ) adev		1203030	0					
ANR	1203180	CastExpression	( gx_device_forward * ) adev		1203030	0					
ANR	1203181	CastTarget	gx_device_forward *		1203030	0					
ANR	1203182	Identifier	adev		1203030	1					
ANR	1203183	Argument	dev		1203030	1					
ANR	1203184	Identifier	dev		1203030	0					
ANR	1203185	ExpressionStatement	"code = dev_proc ( adev , open_device ) ( ( gx_device * ) adev )"	1423:4:51854:51907	1203030	13	True				
ANR	1203186	AssignmentExpression	"code = dev_proc ( adev , open_device ) ( ( gx_device * ) adev )"		1203030	0		=			
ANR	1203187	Identifier	code		1203030	0					
ANR	1203188	CallExpression	"dev_proc ( adev , open_device ) ( ( gx_device * ) adev )"		1203030	1					
ANR	1203189	Callee	"dev_proc ( adev , open_device )"		1203030	0					
ANR	1203190	CallExpression	"dev_proc ( adev , open_device )"		1203030	0					
ANR	1203191	Callee	dev_proc		1203030	0					
ANR	1203192	Identifier	dev_proc		1203030	0					
ANR	1203193	ArgumentList	adev		1203030	1					
ANR	1203194	Argument	adev		1203030	0					
ANR	1203195	Identifier	adev		1203030	0					
ANR	1203196	Argument	open_device		1203030	1					
ANR	1203197	Identifier	open_device		1203030	0					
ANR	1203198	ArgumentList	( gx_device * ) adev		1203030	1					
ANR	1203199	Argument	( gx_device * ) adev		1203030	0					
ANR	1203200	CastExpression	( gx_device * ) adev		1203030	0					
ANR	1203201	CastTarget	gx_device *		1203030	0					
ANR	1203202	Identifier	adev		1203030	1					
ANR	1203203	IfStatement	if ( code < 0 )		1203030	14					
ANR	1203204	Condition	code < 0	1424:8:51917:51924	1203030	0	True				
ANR	1203205	RelationalExpression	code < 0		1203030	0		<			
ANR	1203206	Identifier	code		1203030	0					
ANR	1203207	PrimaryExpression	0		1203030	1					
ANR	1203208	CompoundStatement		29:18:1128:1128	1203030	1					
ANR	1203209	ExpressionStatement	"gs_free_object ( mem , adev , ""gx_pattern_load"" )"	1425:8:51937:51981	1203030	0	True				
ANR	1203210	CallExpression	"gs_free_object ( mem , adev , ""gx_pattern_load"" )"		1203030	0					
ANR	1203211	Callee	gs_free_object		1203030	0					
ANR	1203212	Identifier	gs_free_object		1203030	0					
ANR	1203213	ArgumentList	mem		1203030	1					
ANR	1203214	Argument	mem		1203030	0					
ANR	1203215	Identifier	mem		1203030	0					
ANR	1203216	Argument	adev		1203030	1					
ANR	1203217	Identifier	adev		1203030	0					
ANR	1203218	Argument	"""gx_pattern_load"""		1203030	2					
ANR	1203219	PrimaryExpression	"""gx_pattern_load"""		1203030	0					
ANR	1203220	ReturnStatement	return code ;	1426:8:51991:52002	1203030	1	True				
ANR	1203221	Identifier	code		1203030	0					
ANR	1203222	ExpressionStatement	"saved = gs_gstate_copy ( pinst -> saved , pinst -> saved -> memory )"	1428:4:52014:52072	1203030	15	True				
ANR	1203223	AssignmentExpression	"saved = gs_gstate_copy ( pinst -> saved , pinst -> saved -> memory )"		1203030	0		=			
ANR	1203224	Identifier	saved		1203030	0					
ANR	1203225	CallExpression	"gs_gstate_copy ( pinst -> saved , pinst -> saved -> memory )"		1203030	1					
ANR	1203226	Callee	gs_gstate_copy		1203030	0					
ANR	1203227	Identifier	gs_gstate_copy		1203030	0					
ANR	1203228	ArgumentList	pinst -> saved		1203030	1					
ANR	1203229	Argument	pinst -> saved		1203030	0					
ANR	1203230	PtrMemberAccess	pinst -> saved		1203030	0					
ANR	1203231	Identifier	pinst		1203030	0					
ANR	1203232	Identifier	saved		1203030	1					
ANR	1203233	Argument	pinst -> saved -> memory		1203030	1					
ANR	1203234	PtrMemberAccess	pinst -> saved -> memory		1203030	0					
ANR	1203235	PtrMemberAccess	pinst -> saved		1203030	0					
ANR	1203236	Identifier	pinst		1203030	0					
ANR	1203237	Identifier	saved		1203030	1					
ANR	1203238	Identifier	memory		1203030	1					
ANR	1203239	IfStatement	if ( saved == 0 )		1203030	16					
ANR	1203240	Condition	saved == 0	1429:8:52082:52091	1203030	0	True				
ANR	1203241	EqualityExpression	saved == 0		1203030	0		==			
ANR	1203242	Identifier	saved		1203030	0					
ANR	1203243	PrimaryExpression	0		1203030	1					
ANR	1203244	CompoundStatement		34:20:1295:1295	1203030	1					
ANR	1203245	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1430:8:52104:52142	1203030	0	True				
ANR	1203246	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1203030	0		=			
ANR	1203247	Identifier	code		1203030	0					
ANR	1203248	CallExpression	gs_note_error ( gs_error_VMerror )		1203030	1					
ANR	1203249	Callee	gs_note_error		1203030	0					
ANR	1203250	Identifier	gs_note_error		1203030	0					
ANR	1203251	ArgumentList	gs_error_VMerror		1203030	1					
ANR	1203252	Argument	gs_error_VMerror		1203030	0					
ANR	1203253	Identifier	gs_error_VMerror		1203030	0					
ANR	1203254	GotoStatement	goto fail ;	1431:8:52152:52161	1203030	1	True				
ANR	1203255	Identifier	fail		1203030	0					
ANR	1203256	IfStatement	if ( saved -> pattern_cache == 0 )		1203030	17					
ANR	1203257	Condition	saved -> pattern_cache == 0	1433:8:52177:52201	1203030	0	True				
ANR	1203258	EqualityExpression	saved -> pattern_cache == 0		1203030	0		==			
ANR	1203259	PtrMemberAccess	saved -> pattern_cache		1203030	0					
ANR	1203260	Identifier	saved		1203030	0					
ANR	1203261	Identifier	pattern_cache		1203030	1					
ANR	1203262	PrimaryExpression	0		1203030	1					
ANR	1203263	ExpressionStatement	saved -> pattern_cache = pgs -> pattern_cache	1434:8:52212:52253	1203030	1	True				
ANR	1203264	AssignmentExpression	saved -> pattern_cache = pgs -> pattern_cache		1203030	0		=			
ANR	1203265	PtrMemberAccess	saved -> pattern_cache		1203030	0					
ANR	1203266	Identifier	saved		1203030	0					
ANR	1203267	Identifier	pattern_cache		1203030	1					
ANR	1203268	PtrMemberAccess	pgs -> pattern_cache		1203030	1					
ANR	1203269	Identifier	pgs		1203030	0					
ANR	1203270	Identifier	pattern_cache		1203030	1					
ANR	1203271	ExpressionStatement	"code = gs_setdevice_no_init ( saved , ( gx_device * ) adev )"	1435:4:52259:52312	1203030	18	True				
ANR	1203272	AssignmentExpression	"code = gs_setdevice_no_init ( saved , ( gx_device * ) adev )"		1203030	0		=			
ANR	1203273	Identifier	code		1203030	0					
ANR	1203274	CallExpression	"gs_setdevice_no_init ( saved , ( gx_device * ) adev )"		1203030	1					
ANR	1203275	Callee	gs_setdevice_no_init		1203030	0					
ANR	1203276	Identifier	gs_setdevice_no_init		1203030	0					
ANR	1203277	ArgumentList	saved		1203030	1					
ANR	1203278	Argument	saved		1203030	0					
ANR	1203279	Identifier	saved		1203030	0					
ANR	1203280	Argument	( gx_device * ) adev		1203030	1					
ANR	1203281	CastExpression	( gx_device * ) adev		1203030	0					
ANR	1203282	CastTarget	gx_device *		1203030	0					
ANR	1203283	Identifier	adev		1203030	1					
ANR	1203284	IfStatement	if ( code < 0 )		1203030	19					
ANR	1203285	Condition	code < 0	1436:8:52322:52329	1203030	0	True				
ANR	1203286	RelationalExpression	code < 0		1203030	0		<			
ANR	1203287	Identifier	code		1203030	0					
ANR	1203288	PrimaryExpression	0		1203030	1					
ANR	1203289	GotoStatement	goto fail ;	1437:8:52340:52349	1203030	1	True				
ANR	1203290	Identifier	fail		1203030	0					
ANR	1203291	IfStatement	if ( pinst -> templat . uses_transparency )		1203030	20					
ANR	1203292	Condition	pinst -> templat . uses_transparency	1438:8:52359:52390	1203030	0	True				
ANR	1203293	MemberAccess	pinst -> templat . uses_transparency		1203030	0					
ANR	1203294	PtrMemberAccess	pinst -> templat		1203030	0					
ANR	1203295	Identifier	pinst		1203030	0					
ANR	1203296	Identifier	templat		1203030	1					
ANR	1203297	Identifier	uses_transparency		1203030	1					
ANR	1203298	CompoundStatement		43:42:1594:1594	1203030	1					
ANR	1203299	ExpressionStatement	"if_debug0m ( 'v' , mem , ""gx_pattern_load: pushing the pdf14 compositor device into this graphics state\\n"" )"	1439:8:52403:52506	1203030	0	True				
ANR	1203300	CallExpression	"if_debug0m ( 'v' , mem , ""gx_pattern_load: pushing the pdf14 compositor device into this graphics state\\n"" )"		1203030	0					
ANR	1203301	Callee	if_debug0m		1203030	0					
ANR	1203302	Identifier	if_debug0m		1203030	0					
ANR	1203303	ArgumentList	'v'		1203030	1					
ANR	1203304	Argument	'v'		1203030	0					
ANR	1203305	PrimaryExpression	'v'		1203030	0					
ANR	1203306	Argument	mem		1203030	1					
ANR	1203307	Identifier	mem		1203030	0					
ANR	1203308	Argument	"""gx_pattern_load: pushing the pdf14 compositor device into this graphics state\\n"""		1203030	2					
ANR	1203309	PrimaryExpression	"""gx_pattern_load: pushing the pdf14 compositor device into this graphics state\\n"""		1203030	0					
ANR	1203310	IfStatement	"if ( ( code = gs_push_pdf14trans_device ( saved , true ) ) < 0 )"		1203030	1					
ANR	1203311	Condition	"( code = gs_push_pdf14trans_device ( saved , true ) ) < 0"	1440:12:52520:52570	1203030	0	True				
ANR	1203312	RelationalExpression	"( code = gs_push_pdf14trans_device ( saved , true ) ) < 0"		1203030	0		<			
ANR	1203313	AssignmentExpression	"code = gs_push_pdf14trans_device ( saved , true )"		1203030	0		=			
ANR	1203314	Identifier	code		1203030	0					
ANR	1203315	CallExpression	"gs_push_pdf14trans_device ( saved , true )"		1203030	1					
ANR	1203316	Callee	gs_push_pdf14trans_device		1203030	0					
ANR	1203317	Identifier	gs_push_pdf14trans_device		1203030	0					
ANR	1203318	ArgumentList	saved		1203030	1					
ANR	1203319	Argument	saved		1203030	0					
ANR	1203320	Identifier	saved		1203030	0					
ANR	1203321	Argument	true		1203030	1					
ANR	1203322	Identifier	true		1203030	0					
ANR	1203323	PrimaryExpression	0		1203030	1					
ANR	1203324	ReturnStatement	return code ;	1441:12:52585:52596	1203030	1	True				
ANR	1203325	Identifier	code		1203030	0					
ANR	1203326	ExpressionStatement	saved -> device -> is_open = true	1442:8:52606:52635	1203030	2	True				
ANR	1203327	AssignmentExpression	saved -> device -> is_open = true		1203030	0		=			
ANR	1203328	PtrMemberAccess	saved -> device -> is_open		1203030	0					
ANR	1203329	PtrMemberAccess	saved -> device		1203030	0					
ANR	1203330	Identifier	saved		1203030	0					
ANR	1203331	Identifier	device		1203030	1					
ANR	1203332	Identifier	is_open		1203030	1					
ANR	1203333	Identifier	true		1203030	1					
ANR	1203334	ElseStatement	else		1203030	0					
ANR	1203335	CompoundStatement		48:11:1849:1849	1203030	0					
ANR	1203336	IfStatement	"if ( pinst -> templat . PaintType == 1 && ! ( pinst -> is_clist ) && dev_proc ( pinst -> saved -> device , dev_spec_op ) ( pinst -> saved -> device , gxdso_pattern_can_accum , NULL , 0 ) == 0 )"		1203030	0					
ANR	1203337	Condition	"pinst -> templat . PaintType == 1 && ! ( pinst -> is_clist ) && dev_proc ( pinst -> saved -> device , dev_spec_op ) ( pinst -> saved -> device , gxdso_pattern_can_accum , NULL , 0 ) == 0"	1451:12:53081:53251	1203030	0	True				
ANR	1203338	AndExpression	"pinst -> templat . PaintType == 1 && ! ( pinst -> is_clist ) && dev_proc ( pinst -> saved -> device , dev_spec_op ) ( pinst -> saved -> device , gxdso_pattern_can_accum , NULL , 0 ) == 0"		1203030	0		&&			
ANR	1203339	EqualityExpression	pinst -> templat . PaintType == 1		1203030	0		==			
ANR	1203340	MemberAccess	pinst -> templat . PaintType		1203030	0					
ANR	1203341	PtrMemberAccess	pinst -> templat		1203030	0					
ANR	1203342	Identifier	pinst		1203030	0					
ANR	1203343	Identifier	templat		1203030	1					
ANR	1203344	Identifier	PaintType		1203030	1					
ANR	1203345	PrimaryExpression	1		1203030	1					
ANR	1203346	AndExpression	"! ( pinst -> is_clist ) && dev_proc ( pinst -> saved -> device , dev_spec_op ) ( pinst -> saved -> device , gxdso_pattern_can_accum , NULL , 0 ) == 0"		1203030	1		&&			
ANR	1203347	UnaryOperationExpression	! ( pinst -> is_clist )		1203030	0					
ANR	1203348	UnaryOperator	!		1203030	0					
ANR	1203349	PtrMemberAccess	pinst -> is_clist		1203030	1					
ANR	1203350	Identifier	pinst		1203030	0					
ANR	1203351	Identifier	is_clist		1203030	1					
ANR	1203352	EqualityExpression	"dev_proc ( pinst -> saved -> device , dev_spec_op ) ( pinst -> saved -> device , gxdso_pattern_can_accum , NULL , 0 ) == 0"		1203030	1		==			
ANR	1203353	CallExpression	"dev_proc ( pinst -> saved -> device , dev_spec_op ) ( pinst -> saved -> device , gxdso_pattern_can_accum , NULL , 0 )"		1203030	0					
ANR	1203354	Callee	"dev_proc ( pinst -> saved -> device , dev_spec_op )"		1203030	0					
ANR	1203355	CallExpression	"dev_proc ( pinst -> saved -> device , dev_spec_op )"		1203030	0					
ANR	1203356	Callee	dev_proc		1203030	0					
ANR	1203357	Identifier	dev_proc		1203030	0					
ANR	1203358	ArgumentList	pinst -> saved -> device		1203030	1					
ANR	1203359	Argument	pinst -> saved -> device		1203030	0					
ANR	1203360	PtrMemberAccess	pinst -> saved -> device		1203030	0					
ANR	1203361	PtrMemberAccess	pinst -> saved		1203030	0					
ANR	1203362	Identifier	pinst		1203030	0					
ANR	1203363	Identifier	saved		1203030	1					
ANR	1203364	Identifier	device		1203030	1					
ANR	1203365	Argument	dev_spec_op		1203030	1					
ANR	1203366	Identifier	dev_spec_op		1203030	0					
ANR	1203367	ArgumentList	pinst -> saved -> device		1203030	1					
ANR	1203368	Argument	pinst -> saved -> device		1203030	0					
ANR	1203369	PtrMemberAccess	pinst -> saved -> device		1203030	0					
ANR	1203370	PtrMemberAccess	pinst -> saved		1203030	0					
ANR	1203371	Identifier	pinst		1203030	0					
ANR	1203372	Identifier	saved		1203030	1					
ANR	1203373	Identifier	device		1203030	1					
ANR	1203374	Argument	gxdso_pattern_can_accum		1203030	1					
ANR	1203375	Identifier	gxdso_pattern_can_accum		1203030	0					
ANR	1203376	Argument	NULL		1203030	2					
ANR	1203377	Identifier	NULL		1203030	0					
ANR	1203378	Argument	0		1203030	3					
ANR	1203379	PrimaryExpression	0		1203030	0					
ANR	1203380	PrimaryExpression	0		1203030	1					
ANR	1203381	IfStatement	if ( ( code = gx_erase_colored_pattern ( saved ) ) < 0 )		1203030	1					
ANR	1203382	Condition	( code = gx_erase_colored_pattern ( saved ) ) < 0	1453:16:53270:53313	1203030	0	True				
ANR	1203383	RelationalExpression	( code = gx_erase_colored_pattern ( saved ) ) < 0		1203030	0		<			
ANR	1203384	AssignmentExpression	code = gx_erase_colored_pattern ( saved )		1203030	0		=			
ANR	1203385	Identifier	code		1203030	0					
ANR	1203386	CallExpression	gx_erase_colored_pattern ( saved )		1203030	1					
ANR	1203387	Callee	gx_erase_colored_pattern		1203030	0					
ANR	1203388	Identifier	gx_erase_colored_pattern		1203030	0					
ANR	1203389	ArgumentList	saved		1203030	1					
ANR	1203390	Argument	saved		1203030	0					
ANR	1203391	Identifier	saved		1203030	0					
ANR	1203392	PrimaryExpression	0		1203030	1					
ANR	1203393	GotoStatement	goto fail ;	1454:16:53332:53341	1203030	1	True				
ANR	1203394	Identifier	fail		1203030	0					
ANR	1203395	ExpressionStatement	"code = ( * pinst -> templat . PaintProc ) ( & pdc -> ccolor , saved )"	1457:4:53354:53409	1203030	21	True				
ANR	1203396	AssignmentExpression	"code = ( * pinst -> templat . PaintProc ) ( & pdc -> ccolor , saved )"		1203030	0		=			
ANR	1203397	Identifier	code		1203030	0					
ANR	1203398	CallExpression	"( * pinst -> templat . PaintProc ) ( & pdc -> ccolor , saved )"		1203030	1					
ANR	1203399	Callee	* pinst -> templat . PaintProc		1203030	0					
ANR	1203400	UnaryOperationExpression	* pinst -> templat . PaintProc		1203030	0					
ANR	1203401	UnaryOperator	*		1203030	0					
ANR	1203402	MemberAccess	pinst -> templat . PaintProc		1203030	1					
ANR	1203403	PtrMemberAccess	pinst -> templat		1203030	0					
ANR	1203404	Identifier	pinst		1203030	0					
ANR	1203405	Identifier	templat		1203030	1					
ANR	1203406	Identifier	PaintProc		1203030	1					
ANR	1203407	ArgumentList	& pdc -> ccolor		1203030	1					
ANR	1203408	Argument	& pdc -> ccolor		1203030	0					
ANR	1203409	UnaryOperationExpression	& pdc -> ccolor		1203030	0					
ANR	1203410	UnaryOperator	&		1203030	0					
ANR	1203411	PtrMemberAccess	pdc -> ccolor		1203030	1					
ANR	1203412	Identifier	pdc		1203030	0					
ANR	1203413	Identifier	ccolor		1203030	1					
ANR	1203414	Argument	saved		1203030	1					
ANR	1203415	Identifier	saved		1203030	0					
ANR	1203416	IfStatement	if ( code < 0 )		1203030	22					
ANR	1203417	Condition	code < 0	1458:8:53419:53426	1203030	0	True				
ANR	1203418	RelationalExpression	code < 0		1203030	0		<			
ANR	1203419	Identifier	code		1203030	0					
ANR	1203420	PrimaryExpression	0		1203030	1					
ANR	1203421	CompoundStatement		63:18:2630:2630	1203030	1					
ANR	1203422	IfStatement	"if ( dev_proc ( adev , open_device ) == pattern_accum_open )"		1203030	0					
ANR	1203423	Condition	"dev_proc ( adev , open_device ) == pattern_accum_open"	1459:12:53443:53491	1203030	0	True				
ANR	1203424	EqualityExpression	"dev_proc ( adev , open_device ) == pattern_accum_open"		1203030	0		==			
ANR	1203425	CallExpression	"dev_proc ( adev , open_device )"		1203030	0					
ANR	1203426	Callee	dev_proc		1203030	0					
ANR	1203427	Identifier	dev_proc		1203030	0					
ANR	1203428	ArgumentList	adev		1203030	1					
ANR	1203429	Argument	adev		1203030	0					
ANR	1203430	Identifier	adev		1203030	0					
ANR	1203431	Argument	open_device		1203030	1					
ANR	1203432	Identifier	open_device		1203030	0					
ANR	1203433	Identifier	pattern_accum_open		1203030	1					
ANR	1203434	CompoundStatement		66:12:2787:2852	1203030	1					
ANR	1203435	IdentifierDeclStatement	gx_device_pattern_accum * padev = ( gx_device_pattern_accum * ) adev ;	1461:12:53586:53651	1203030	0	True				
ANR	1203436	IdentifierDecl	* padev = ( gx_device_pattern_accum * ) adev		1203030	0					
ANR	1203437	IdentifierDeclType	gx_device_pattern_accum *		1203030	0					
ANR	1203438	Identifier	padev		1203030	1					
ANR	1203439	AssignmentExpression	* padev = ( gx_device_pattern_accum * ) adev		1203030	2		=			
ANR	1203440	Identifier	padev		1203030	0					
ANR	1203441	CastExpression	( gx_device_pattern_accum * ) adev		1203030	1					
ANR	1203442	CastTarget	gx_device_pattern_accum *		1203030	0					
ANR	1203443	Identifier	adev		1203030	1					
ANR	1203444	IfStatement	if ( ( padev -> bits != NULL ) && ( padev -> bits -> base != NULL ) )		1203030	1					
ANR	1203445	Condition	( padev -> bits != NULL ) && ( padev -> bits -> base != NULL )	1462:16:53669:53720	1203030	0	True				
ANR	1203446	AndExpression	( padev -> bits != NULL ) && ( padev -> bits -> base != NULL )		1203030	0		&&			
ANR	1203447	EqualityExpression	padev -> bits != NULL		1203030	0		!=			
ANR	1203448	PtrMemberAccess	padev -> bits		1203030	0					
ANR	1203449	Identifier	padev		1203030	0					
ANR	1203450	Identifier	bits		1203030	1					
ANR	1203451	Identifier	NULL		1203030	1					
ANR	1203452	EqualityExpression	padev -> bits -> base != NULL		1203030	1		!=			
ANR	1203453	PtrMemberAccess	padev -> bits -> base		1203030	0					
ANR	1203454	PtrMemberAccess	padev -> bits		1203030	0					
ANR	1203455	Identifier	padev		1203030	0					
ANR	1203456	Identifier	bits		1203030	1					
ANR	1203457	Identifier	base		1203030	1					
ANR	1203458	Identifier	NULL		1203030	1					
ANR	1203459	CompoundStatement		67:70:2924:2924	1203030	1					
ANR	1203460	ExpressionStatement	"gs_free_object ( padev -> bits -> memory , padev -> bits -> base , ""mem_open"" )"	1463:16:53741:53807	1203030	0	True				
ANR	1203461	CallExpression	"gs_free_object ( padev -> bits -> memory , padev -> bits -> base , ""mem_open"" )"		1203030	0					
ANR	1203462	Callee	gs_free_object		1203030	0					
ANR	1203463	Identifier	gs_free_object		1203030	0					
ANR	1203464	ArgumentList	padev -> bits -> memory		1203030	1					
ANR	1203465	Argument	padev -> bits -> memory		1203030	0					
ANR	1203466	PtrMemberAccess	padev -> bits -> memory		1203030	0					
ANR	1203467	PtrMemberAccess	padev -> bits		1203030	0					
ANR	1203468	Identifier	padev		1203030	0					
ANR	1203469	Identifier	bits		1203030	1					
ANR	1203470	Identifier	memory		1203030	1					
ANR	1203471	Argument	padev -> bits -> base		1203030	1					
ANR	1203472	PtrMemberAccess	padev -> bits -> base		1203030	0					
ANR	1203473	PtrMemberAccess	padev -> bits		1203030	0					
ANR	1203474	Identifier	padev		1203030	0					
ANR	1203475	Identifier	bits		1203030	1					
ANR	1203476	Identifier	base		1203030	1					
ANR	1203477	Argument	"""mem_open"""		1203030	2					
ANR	1203478	PrimaryExpression	"""mem_open"""		1203030	0					
ANR	1203479	ExpressionStatement	"gx_device_retain ( saved -> device , false )"	1472:8:54185:54223	1203030	1	True				
ANR	1203480	CallExpression	"gx_device_retain ( saved -> device , false )"		1203030	0					
ANR	1203481	Callee	gx_device_retain		1203030	0					
ANR	1203482	Identifier	gx_device_retain		1203030	0					
ANR	1203483	ArgumentList	saved -> device		1203030	1					
ANR	1203484	Argument	saved -> device		1203030	0					
ANR	1203485	PtrMemberAccess	saved -> device		1203030	0					
ANR	1203486	Identifier	saved		1203030	0					
ANR	1203487	Identifier	device		1203030	1					
ANR	1203488	Argument	false		1203030	1					
ANR	1203489	Identifier	false		1203030	0					
ANR	1203490	IfStatement	if ( pinst -> templat . uses_transparency )		1203030	2					
ANR	1203491	Condition	pinst -> templat . uses_transparency	1473:12:54277:54308	1203030	0	True				
ANR	1203492	MemberAccess	pinst -> templat . uses_transparency		1203030	0					
ANR	1203493	PtrMemberAccess	pinst -> templat		1203030	0					
ANR	1203494	Identifier	pinst		1203030	0					
ANR	1203495	Identifier	templat		1203030	1					
ANR	1203496	Identifier	uses_transparency		1203030	1					
ANR	1203497	CompoundStatement		78:46:3512:3512	1203030	1					
ANR	1203498	IfStatement	if ( pinst -> is_clist == 0 )		1203030	0					
ANR	1203499	Condition	pinst -> is_clist == 0	1474:16:54329:54348	1203030	0	True				
ANR	1203500	EqualityExpression	pinst -> is_clist == 0		1203030	0		==			
ANR	1203501	PtrMemberAccess	pinst -> is_clist		1203030	0					
ANR	1203502	Identifier	pinst		1203030	0					
ANR	1203503	Identifier	is_clist		1203030	1					
ANR	1203504	PrimaryExpression	0		1203030	1					
ANR	1203505	CompoundStatement		79:38:3552:3552	1203030	1					
ANR	1203506	ExpressionStatement	"gs_free_object ( ( ( gx_device_pattern_accum * ) adev ) -> bitmap_memory , ( ( gx_device_pattern_accum * ) adev ) -> transbuff , ""gx_pattern_load"" )"	1475:16:54369:54560	1203030	0	True				
ANR	1203507	CallExpression	"gs_free_object ( ( ( gx_device_pattern_accum * ) adev ) -> bitmap_memory , ( ( gx_device_pattern_accum * ) adev ) -> transbuff , ""gx_pattern_load"" )"		1203030	0					
ANR	1203508	Callee	gs_free_object		1203030	0					
ANR	1203509	Identifier	gs_free_object		1203030	0					
ANR	1203510	ArgumentList	( ( gx_device_pattern_accum * ) adev ) -> bitmap_memory		1203030	1					
ANR	1203511	Argument	( ( gx_device_pattern_accum * ) adev ) -> bitmap_memory		1203030	0					
ANR	1203512	PtrMemberAccess	( ( gx_device_pattern_accum * ) adev ) -> bitmap_memory		1203030	0					
ANR	1203513	CastExpression	( gx_device_pattern_accum * ) adev		1203030	0					
ANR	1203514	CastTarget	gx_device_pattern_accum *		1203030	0					
ANR	1203515	Identifier	adev		1203030	1					
ANR	1203516	Identifier	bitmap_memory		1203030	1					
ANR	1203517	Argument	( ( gx_device_pattern_accum * ) adev ) -> transbuff		1203030	1					
ANR	1203518	PtrMemberAccess	( ( gx_device_pattern_accum * ) adev ) -> transbuff		1203030	0					
ANR	1203519	CastExpression	( gx_device_pattern_accum * ) adev		1203030	0					
ANR	1203520	CastTarget	gx_device_pattern_accum *		1203030	0					
ANR	1203521	Identifier	adev		1203030	1					
ANR	1203522	Identifier	transbuff		1203030	1					
ANR	1203523	Argument	"""gx_pattern_load"""		1203030	2					
ANR	1203524	PrimaryExpression	"""gx_pattern_load"""		1203030	0					
ANR	1203525	ExpressionStatement	"dev_proc ( adev , close_device ) ( ( gx_device * ) adev )"	1479:12:54588:54635	1203030	1	True				
ANR	1203526	CallExpression	"dev_proc ( adev , close_device ) ( ( gx_device * ) adev )"		1203030	0					
ANR	1203527	Callee	"dev_proc ( adev , close_device )"		1203030	0					
ANR	1203528	CallExpression	"dev_proc ( adev , close_device )"		1203030	0					
ANR	1203529	Callee	dev_proc		1203030	0					
ANR	1203530	Identifier	dev_proc		1203030	0					
ANR	1203531	ArgumentList	adev		1203030	1					
ANR	1203532	Argument	adev		1203030	0					
ANR	1203533	Identifier	adev		1203030	0					
ANR	1203534	Argument	close_device		1203030	1					
ANR	1203535	Identifier	close_device		1203030	0					
ANR	1203536	ArgumentList	( gx_device * ) adev		1203030	1					
ANR	1203537	Argument	( gx_device * ) adev		1203030	0					
ANR	1203538	CastExpression	( gx_device * ) adev		1203030	0					
ANR	1203539	CastTarget	gx_device *		1203030	0					
ANR	1203540	Identifier	adev		1203030	1					
ANR	1203541	ExpressionStatement	"gx_device_retain ( ( gx_device * ) adev , false )"	1481:12:54738:54780	1203030	2	True				
ANR	1203542	CallExpression	"gx_device_retain ( ( gx_device * ) adev , false )"		1203030	0					
ANR	1203543	Callee	gx_device_retain		1203030	0					
ANR	1203544	Identifier	gx_device_retain		1203030	0					
ANR	1203545	ArgumentList	( gx_device * ) adev		1203030	1					
ANR	1203546	Argument	( gx_device * ) adev		1203030	0					
ANR	1203547	CastExpression	( gx_device * ) adev		1203030	0					
ANR	1203548	CastTarget	gx_device *		1203030	0					
ANR	1203549	Identifier	adev		1203030	1					
ANR	1203550	Argument	false		1203030	1					
ANR	1203551	Identifier	false		1203030	0					
ANR	1203552	ExpressionStatement	"dev_proc ( saved -> device , close_device ) ( ( gx_device * ) saved -> device )"	1483:8:54840:54905	1203030	3	True				
ANR	1203553	CallExpression	"dev_proc ( saved -> device , close_device ) ( ( gx_device * ) saved -> device )"		1203030	0					
ANR	1203554	Callee	"dev_proc ( saved -> device , close_device )"		1203030	0					
ANR	1203555	CallExpression	"dev_proc ( saved -> device , close_device )"		1203030	0					
ANR	1203556	Callee	dev_proc		1203030	0					
ANR	1203557	Identifier	dev_proc		1203030	0					
ANR	1203558	ArgumentList	saved -> device		1203030	1					
ANR	1203559	Argument	saved -> device		1203030	0					
ANR	1203560	PtrMemberAccess	saved -> device		1203030	0					
ANR	1203561	Identifier	saved		1203030	0					
ANR	1203562	Identifier	device		1203030	1					
ANR	1203563	Argument	close_device		1203030	1					
ANR	1203564	Identifier	close_device		1203030	0					
ANR	1203565	ArgumentList	( gx_device * ) saved -> device		1203030	1					
ANR	1203566	Argument	( gx_device * ) saved -> device		1203030	0					
ANR	1203567	CastExpression	( gx_device * ) saved -> device		1203030	0					
ANR	1203568	CastTarget	gx_device *		1203030	0					
ANR	1203569	PtrMemberAccess	saved -> device		1203030	1					
ANR	1203570	Identifier	saved		1203030	0					
ANR	1203571	Identifier	device		1203030	1					
ANR	1203572	ExpressionStatement	gs_gstate_free_chain ( saved )	1485:8:55009:55036	1203030	4	True				
ANR	1203573	CallExpression	gs_gstate_free_chain ( saved )		1203030	0					
ANR	1203574	Callee	gs_gstate_free_chain		1203030	0					
ANR	1203575	Identifier	gs_gstate_free_chain		1203030	0					
ANR	1203576	ArgumentList	saved		1203030	1					
ANR	1203577	Argument	saved		1203030	0					
ANR	1203578	Identifier	saved		1203030	0					
ANR	1203579	ReturnStatement	return code ;	1486:8:55046:55057	1203030	5	True				
ANR	1203580	Identifier	code		1203030	0					
ANR	1203581	IfStatement	if ( pinst -> templat . uses_transparency )		1203030	23					
ANR	1203582	Condition	pinst -> templat . uses_transparency	1488:8:55073:55104	1203030	0	True				
ANR	1203583	MemberAccess	pinst -> templat . uses_transparency		1203030	0					
ANR	1203584	PtrMemberAccess	pinst -> templat		1203030	0					
ANR	1203585	Identifier	pinst		1203030	0					
ANR	1203586	Identifier	templat		1203030	1					
ANR	1203587	Identifier	uses_transparency		1203030	1					
ANR	1203588	CompoundStatement		93:42:4308:4308	1203030	1					
ANR	1203589	IfStatement	if ( pinst -> is_clist )		1203030	0					
ANR	1203590	Condition	pinst -> is_clist	1492:16:55343:55357	1203030	0	True				
ANR	1203591	PtrMemberAccess	pinst -> is_clist		1203030	0					
ANR	1203592	Identifier	pinst		1203030	0					
ANR	1203593	Identifier	is_clist		1203030	1					
ANR	1203594	CompoundStatement		97:33:4561:4561	1203030	1					
ANR	1203595	ExpressionStatement	"code = gs_pop_pdf14trans_device ( saved , true )"	1494:16:55454:55498	1203030	0	True				
ANR	1203596	AssignmentExpression	"code = gs_pop_pdf14trans_device ( saved , true )"		1203030	0		=			
ANR	1203597	Identifier	code		1203030	0					
ANR	1203598	CallExpression	"gs_pop_pdf14trans_device ( saved , true )"		1203030	1					
ANR	1203599	Callee	gs_pop_pdf14trans_device		1203030	0					
ANR	1203600	Identifier	gs_pop_pdf14trans_device		1203030	0					
ANR	1203601	ArgumentList	saved		1203030	1					
ANR	1203602	Argument	saved		1203030	0					
ANR	1203603	Identifier	saved		1203030	0					
ANR	1203604	Argument	true		1203030	1					
ANR	1203605	Identifier	true		1203030	0					
ANR	1203606	IfStatement	if ( code < 0 )		1203030	1					
ANR	1203607	Condition	code < 0	1495:20:55520:55527	1203030	0	True				
ANR	1203608	RelationalExpression	code < 0		1203030	0		<			
ANR	1203609	Identifier	code		1203030	0					
ANR	1203610	PrimaryExpression	0		1203030	1					
ANR	1203611	ReturnStatement	return code ;	1496:20:55550:55561	1203030	1	True				
ANR	1203612	Identifier	code		1203030	0					
ANR	1203613	ElseStatement	else		1203030	0					
ANR	1203614	CompoundStatement		102:19:4783:4783	1203030	0					
ANR	1203615	ExpressionStatement	"code = pdf14_get_buffer_information ( saved -> device , ( ( gx_device_pattern_accum * ) adev ) -> transbuff , saved -> memory , true )"	1499:16:55664:55946	1203030	0	True				
ANR	1203616	AssignmentExpression	"code = pdf14_get_buffer_information ( saved -> device , ( ( gx_device_pattern_accum * ) adev ) -> transbuff , saved -> memory , true )"		1203030	0		=			
ANR	1203617	Identifier	code		1203030	0					
ANR	1203618	CallExpression	"pdf14_get_buffer_information ( saved -> device , ( ( gx_device_pattern_accum * ) adev ) -> transbuff , saved -> memory , true )"		1203030	1					
ANR	1203619	Callee	pdf14_get_buffer_information		1203030	0					
ANR	1203620	Identifier	pdf14_get_buffer_information		1203030	0					
ANR	1203621	ArgumentList	saved -> device		1203030	1					
ANR	1203622	Argument	saved -> device		1203030	0					
ANR	1203623	PtrMemberAccess	saved -> device		1203030	0					
ANR	1203624	Identifier	saved		1203030	0					
ANR	1203625	Identifier	device		1203030	1					
ANR	1203626	Argument	( ( gx_device_pattern_accum * ) adev ) -> transbuff		1203030	1					
ANR	1203627	PtrMemberAccess	( ( gx_device_pattern_accum * ) adev ) -> transbuff		1203030	0					
ANR	1203628	CastExpression	( gx_device_pattern_accum * ) adev		1203030	0					
ANR	1203629	CastTarget	gx_device_pattern_accum *		1203030	0					
ANR	1203630	Identifier	adev		1203030	1					
ANR	1203631	Identifier	transbuff		1203030	1					
ANR	1203632	Argument	saved -> memory		1203030	2					
ANR	1203633	PtrMemberAccess	saved -> memory		1203030	0					
ANR	1203634	Identifier	saved		1203030	0					
ANR	1203635	Identifier	memory		1203030	1					
ANR	1203636	Argument	true		1203030	3					
ANR	1203637	Identifier	true		1203030	0					
ANR	1203638	IfStatement	if ( code < 0 )		1203030	1					
ANR	1203639	Condition	code < 0	1506:20:56084:56091	1203030	0	True				
ANR	1203640	RelationalExpression	code < 0		1203030	0		<			
ANR	1203641	Identifier	code		1203030	0					
ANR	1203642	PrimaryExpression	0		1203030	1					
ANR	1203643	ReturnStatement	return code ;	1507:20:56114:56125	1203030	1	True				
ANR	1203644	Identifier	code		1203030	0					
ANR	1203645	ExpressionStatement	"code = gx_pattern_cache_add_entry ( ( gs_gstate * ) pgs , adev , & ctile )"	1511:4:56205:56286	1203030	24	True				
ANR	1203646	AssignmentExpression	"code = gx_pattern_cache_add_entry ( ( gs_gstate * ) pgs , adev , & ctile )"		1203030	0		=			
ANR	1203647	Identifier	code		1203030	0					
ANR	1203648	CallExpression	"gx_pattern_cache_add_entry ( ( gs_gstate * ) pgs , adev , & ctile )"		1203030	1					
ANR	1203649	Callee	gx_pattern_cache_add_entry		1203030	0					
ANR	1203650	Identifier	gx_pattern_cache_add_entry		1203030	0					
ANR	1203651	ArgumentList	( gs_gstate * ) pgs		1203030	1					
ANR	1203652	Argument	( gs_gstate * ) pgs		1203030	0					
ANR	1203653	CastExpression	( gs_gstate * ) pgs		1203030	0					
ANR	1203654	CastTarget	gs_gstate *		1203030	0					
ANR	1203655	Identifier	pgs		1203030	1					
ANR	1203656	Argument	adev		1203030	1					
ANR	1203657	Identifier	adev		1203030	0					
ANR	1203658	Argument	& ctile		1203030	2					
ANR	1203659	UnaryOperationExpression	& ctile		1203030	0					
ANR	1203660	UnaryOperator	&		1203030	0					
ANR	1203661	Identifier	ctile		1203030	1					
ANR	1203662	IfStatement	if ( code >= 0 )		1203030	25					
ANR	1203663	Condition	code >= 0	1513:8:56296:56304	1203030	0	True				
ANR	1203664	RelationalExpression	code >= 0		1203030	0		>=			
ANR	1203665	Identifier	code		1203030	0					
ANR	1203666	PrimaryExpression	0		1203030	1					
ANR	1203667	CompoundStatement		118:19:5508:5508	1203030	1					
ANR	1203668	IfStatement	"if ( ! gx_pattern_cache_lookup ( pdc , pgs , dev , select ) )"		1203030	0					
ANR	1203669	Condition	"! gx_pattern_cache_lookup ( pdc , pgs , dev , select )"	1514:12:56321:56367	1203030	0	True				
ANR	1203670	UnaryOperationExpression	"! gx_pattern_cache_lookup ( pdc , pgs , dev , select )"		1203030	0					
ANR	1203671	UnaryOperator	!		1203030	0					
ANR	1203672	CallExpression	"gx_pattern_cache_lookup ( pdc , pgs , dev , select )"		1203030	1					
ANR	1203673	Callee	gx_pattern_cache_lookup		1203030	0					
ANR	1203674	Identifier	gx_pattern_cache_lookup		1203030	0					
ANR	1203675	ArgumentList	pdc		1203030	1					
ANR	1203676	Argument	pdc		1203030	0					
ANR	1203677	Identifier	pdc		1203030	0					
ANR	1203678	Argument	pgs		1203030	1					
ANR	1203679	Identifier	pgs		1203030	0					
ANR	1203680	Argument	dev		1203030	2					
ANR	1203681	Identifier	dev		1203030	0					
ANR	1203682	Argument	select		1203030	3					
ANR	1203683	Identifier	select		1203030	0					
ANR	1203684	CompoundStatement		119:61:5571:5571	1203030	1					
ANR	1203685	ExpressionStatement	"mlprintf ( mem , ""Pattern cache lookup failed after insertion!\\n"" )"	1515:12:56384:56447	1203030	0	True				
ANR	1203686	CallExpression	"mlprintf ( mem , ""Pattern cache lookup failed after insertion!\\n"" )"		1203030	0					
ANR	1203687	Callee	mlprintf		1203030	0					
ANR	1203688	Identifier	mlprintf		1203030	0					
ANR	1203689	ArgumentList	mem		1203030	1					
ANR	1203690	Argument	mem		1203030	0					
ANR	1203691	Identifier	mem		1203030	0					
ANR	1203692	Argument	"""Pattern cache lookup failed after insertion!\\n"""		1203030	1					
ANR	1203693	PrimaryExpression	"""Pattern cache lookup failed after insertion!\\n"""		1203030	0					
ANR	1203694	ExpressionStatement	code = gs_note_error ( gs_error_Fatal )	1516:12:56461:56497	1203030	1	True				
ANR	1203695	AssignmentExpression	code = gs_note_error ( gs_error_Fatal )		1203030	0		=			
ANR	1203696	Identifier	code		1203030	0					
ANR	1203697	CallExpression	gs_note_error ( gs_error_Fatal )		1203030	1					
ANR	1203698	Callee	gs_note_error		1203030	0					
ANR	1203699	Identifier	gs_note_error		1203030	0					
ANR	1203700	ArgumentList	gs_error_Fatal		1203030	1					
ANR	1203701	Argument	gs_error_Fatal		1203030	0					
ANR	1203702	Identifier	gs_error_Fatal		1203030	0					
ANR	1203703	IfStatement	"if ( gs_debug_c ( 'B' ) && dev_proc ( adev , open_device ) == pattern_accum_open )"		1203030	26					
ANR	1203704	Condition	"gs_debug_c ( 'B' ) && dev_proc ( adev , open_device ) == pattern_accum_open"	1520:8:56536:56603	1203030	0	True				
ANR	1203705	AndExpression	"gs_debug_c ( 'B' ) && dev_proc ( adev , open_device ) == pattern_accum_open"		1203030	0		&&			
ANR	1203706	CallExpression	gs_debug_c ( 'B' )		1203030	0					
ANR	1203707	Callee	gs_debug_c		1203030	0					
ANR	1203708	Identifier	gs_debug_c		1203030	0					
ANR	1203709	ArgumentList	'B'		1203030	1					
ANR	1203710	Argument	'B'		1203030	0					
ANR	1203711	PrimaryExpression	'B'		1203030	0					
ANR	1203712	EqualityExpression	"dev_proc ( adev , open_device ) == pattern_accum_open"		1203030	1		==			
ANR	1203713	CallExpression	"dev_proc ( adev , open_device )"		1203030	0					
ANR	1203714	Callee	dev_proc		1203030	0					
ANR	1203715	Identifier	dev_proc		1203030	0					
ANR	1203716	ArgumentList	adev		1203030	1					
ANR	1203717	Argument	adev		1203030	0					
ANR	1203718	Identifier	adev		1203030	0					
ANR	1203719	Argument	open_device		1203030	1					
ANR	1203720	Identifier	open_device		1203030	0					
ANR	1203721	Identifier	pattern_accum_open		1203030	1					
ANR	1203722	CompoundStatement		126:8:5817:5880	1203030	1					
ANR	1203723	IdentifierDeclStatement	gx_device_pattern_accum * pdev = ( gx_device_pattern_accum * ) adev ;	1521:8:56616:56679	1203030	0	True				
ANR	1203724	IdentifierDecl	* pdev = ( gx_device_pattern_accum * ) adev		1203030	0					
ANR	1203725	IdentifierDeclType	gx_device_pattern_accum *		1203030	0					
ANR	1203726	Identifier	pdev		1203030	1					
ANR	1203727	AssignmentExpression	* pdev = ( gx_device_pattern_accum * ) adev		1203030	2		=			
ANR	1203728	Identifier	pdev		1203030	0					
ANR	1203729	CastExpression	( gx_device_pattern_accum * ) adev		1203030	1					
ANR	1203730	CastTarget	gx_device_pattern_accum *		1203030	0					
ANR	1203731	Identifier	adev		1203030	1					
ANR	1203732	IfStatement	if ( pdev -> mask )		1203030	1					
ANR	1203733	Condition	pdev -> mask	1523:12:56694:56703	1203030	0	True				
ANR	1203734	PtrMemberAccess	pdev -> mask		1203030	0					
ANR	1203735	Identifier	pdev		1203030	0					
ANR	1203736	Identifier	mask		1203030	1					
ANR	1203737	ExpressionStatement	"debug_dump_bitmap ( pdev -> memory , pdev -> mask -> base , pdev -> mask -> raster , pdev -> mask -> height , ""[B]Pattern mask"" )"	1524:12:56718:56886	1203030	1	True				
ANR	1203738	CallExpression	"debug_dump_bitmap ( pdev -> memory , pdev -> mask -> base , pdev -> mask -> raster , pdev -> mask -> height , ""[B]Pattern mask"" )"		1203030	0					
ANR	1203739	Callee	debug_dump_bitmap		1203030	0					
ANR	1203740	Identifier	debug_dump_bitmap		1203030	0					
ANR	1203741	ArgumentList	pdev -> memory		1203030	1					
ANR	1203742	Argument	pdev -> memory		1203030	0					
ANR	1203743	PtrMemberAccess	pdev -> memory		1203030	0					
ANR	1203744	Identifier	pdev		1203030	0					
ANR	1203745	Identifier	memory		1203030	1					
ANR	1203746	Argument	pdev -> mask -> base		1203030	1					
ANR	1203747	PtrMemberAccess	pdev -> mask -> base		1203030	0					
ANR	1203748	PtrMemberAccess	pdev -> mask		1203030	0					
ANR	1203749	Identifier	pdev		1203030	0					
ANR	1203750	Identifier	mask		1203030	1					
ANR	1203751	Identifier	base		1203030	1					
ANR	1203752	Argument	pdev -> mask -> raster		1203030	2					
ANR	1203753	PtrMemberAccess	pdev -> mask -> raster		1203030	0					
ANR	1203754	PtrMemberAccess	pdev -> mask		1203030	0					
ANR	1203755	Identifier	pdev		1203030	0					
ANR	1203756	Identifier	mask		1203030	1					
ANR	1203757	Identifier	raster		1203030	1					
ANR	1203758	Argument	pdev -> mask -> height		1203030	3					
ANR	1203759	PtrMemberAccess	pdev -> mask -> height		1203030	0					
ANR	1203760	PtrMemberAccess	pdev -> mask		1203030	0					
ANR	1203761	Identifier	pdev		1203030	0					
ANR	1203762	Identifier	mask		1203030	1					
ANR	1203763	Identifier	height		1203030	1					
ANR	1203764	Argument	"""[B]Pattern mask"""		1203030	4					
ANR	1203765	PrimaryExpression	"""[B]Pattern mask"""		1203030	0					
ANR	1203766	IfStatement	if ( pdev -> bits )		1203030	2					
ANR	1203767	Condition	pdev -> bits	1527:12:56900:56909	1203030	0	True				
ANR	1203768	PtrMemberAccess	pdev -> bits		1203030	0					
ANR	1203769	Identifier	pdev		1203030	0					
ANR	1203770	Identifier	bits		1203030	1					
ANR	1203771	ExpressionStatement	"debug_dump_bitmap ( pdev -> memory , ( ( gx_device_memory * ) pdev -> target ) -> base , ( ( gx_device_memory * ) pdev -> target ) -> raster , pdev -> target -> height , ""[B]Pattern bits"" )"	1528:12:56924:57174	1203030	1	True				
ANR	1203772	CallExpression	"debug_dump_bitmap ( pdev -> memory , ( ( gx_device_memory * ) pdev -> target ) -> base , ( ( gx_device_memory * ) pdev -> target ) -> raster , pdev -> target -> height , ""[B]Pattern bits"" )"		1203030	0					
ANR	1203773	Callee	debug_dump_bitmap		1203030	0					
ANR	1203774	Identifier	debug_dump_bitmap		1203030	0					
ANR	1203775	ArgumentList	pdev -> memory		1203030	1					
ANR	1203776	Argument	pdev -> memory		1203030	0					
ANR	1203777	PtrMemberAccess	pdev -> memory		1203030	0					
ANR	1203778	Identifier	pdev		1203030	0					
ANR	1203779	Identifier	memory		1203030	1					
ANR	1203780	Argument	( ( gx_device_memory * ) pdev -> target ) -> base		1203030	1					
ANR	1203781	PtrMemberAccess	( ( gx_device_memory * ) pdev -> target ) -> base		1203030	0					
ANR	1203782	CastExpression	( gx_device_memory * ) pdev -> target		1203030	0					
ANR	1203783	CastTarget	gx_device_memory *		1203030	0					
ANR	1203784	PtrMemberAccess	pdev -> target		1203030	1					
ANR	1203785	Identifier	pdev		1203030	0					
ANR	1203786	Identifier	target		1203030	1					
ANR	1203787	Identifier	base		1203030	1					
ANR	1203788	Argument	( ( gx_device_memory * ) pdev -> target ) -> raster		1203030	2					
ANR	1203789	PtrMemberAccess	( ( gx_device_memory * ) pdev -> target ) -> raster		1203030	0					
ANR	1203790	CastExpression	( gx_device_memory * ) pdev -> target		1203030	0					
ANR	1203791	CastTarget	gx_device_memory *		1203030	0					
ANR	1203792	PtrMemberAccess	pdev -> target		1203030	1					
ANR	1203793	Identifier	pdev		1203030	0					
ANR	1203794	Identifier	target		1203030	1					
ANR	1203795	Identifier	raster		1203030	1					
ANR	1203796	Argument	pdev -> target -> height		1203030	3					
ANR	1203797	PtrMemberAccess	pdev -> target -> height		1203030	0					
ANR	1203798	PtrMemberAccess	pdev -> target		1203030	0					
ANR	1203799	Identifier	pdev		1203030	0					
ANR	1203800	Identifier	target		1203030	1					
ANR	1203801	Identifier	height		1203030	1					
ANR	1203802	Argument	"""[B]Pattern bits"""		1203030	4					
ANR	1203803	PrimaryExpression	"""[B]Pattern bits"""		1203030	0					
ANR	1203804	ExpressionStatement	"dev_proc ( adev , close_device ) ( ( gx_device * ) adev )"	1536:4:57307:57354	1203030	27	True				
ANR	1203805	CallExpression	"dev_proc ( adev , close_device ) ( ( gx_device * ) adev )"		1203030	0					
ANR	1203806	Callee	"dev_proc ( adev , close_device )"		1203030	0					
ANR	1203807	CallExpression	"dev_proc ( adev , close_device )"		1203030	0					
ANR	1203808	Callee	dev_proc		1203030	0					
ANR	1203809	Identifier	dev_proc		1203030	0					
ANR	1203810	ArgumentList	adev		1203030	1					
ANR	1203811	Argument	adev		1203030	0					
ANR	1203812	Identifier	adev		1203030	0					
ANR	1203813	Argument	close_device		1203030	1					
ANR	1203814	Identifier	close_device		1203030	0					
ANR	1203815	ArgumentList	( gx_device * ) adev		1203030	1					
ANR	1203816	Argument	( gx_device * ) adev		1203030	0					
ANR	1203817	CastExpression	( gx_device * ) adev		1203030	0					
ANR	1203818	CastTarget	gx_device *		1203030	0					
ANR	1203819	Identifier	adev		1203030	1					
ANR	1203820	ExpressionStatement	gs_gstate_free_chain ( saved )	1538:4:57437:57464	1203030	28	True				
ANR	1203821	CallExpression	gs_gstate_free_chain ( saved )		1203030	0					
ANR	1203822	Callee	gs_gstate_free_chain		1203030	0					
ANR	1203823	Identifier	gs_gstate_free_chain		1203030	0					
ANR	1203824	ArgumentList	saved		1203030	1					
ANR	1203825	Argument	saved		1203030	0					
ANR	1203826	Identifier	saved		1203030	0					
ANR	1203827	ReturnStatement	return code ;	1539:4:57470:57481	1203030	29	True				
ANR	1203828	Identifier	code		1203030	0					
ANR	1203829	Label	fail :	1541:0:57484:57488	1203030	30	True				
ANR	1203830	Identifier	fail		1203030	0					
ANR	1203831	IfStatement	"if ( dev_proc ( adev , open_device ) == pattern_accum_open )"		1203030	31					
ANR	1203832	Condition	"dev_proc ( adev , open_device ) == pattern_accum_open"	1542:8:57498:57546	1203030	0	True				
ANR	1203833	EqualityExpression	"dev_proc ( adev , open_device ) == pattern_accum_open"		1203030	0		==			
ANR	1203834	CallExpression	"dev_proc ( adev , open_device )"		1203030	0					
ANR	1203835	Callee	dev_proc		1203030	0					
ANR	1203836	Identifier	dev_proc		1203030	0					
ANR	1203837	ArgumentList	adev		1203030	1					
ANR	1203838	Argument	adev		1203030	0					
ANR	1203839	Identifier	adev		1203030	0					
ANR	1203840	Argument	open_device		1203030	1					
ANR	1203841	Identifier	open_device		1203030	0					
ANR	1203842	Identifier	pattern_accum_open		1203030	1					
ANR	1203843	CompoundStatement		149:8:6834:6899	1203030	1					
ANR	1203844	IdentifierDeclStatement	gx_device_pattern_accum * padev = ( gx_device_pattern_accum * ) adev ;	1544:8:57633:57698	1203030	0	True				
ANR	1203845	IdentifierDecl	* padev = ( gx_device_pattern_accum * ) adev		1203030	0					
ANR	1203846	IdentifierDeclType	gx_device_pattern_accum *		1203030	0					
ANR	1203847	Identifier	padev		1203030	1					
ANR	1203848	AssignmentExpression	* padev = ( gx_device_pattern_accum * ) adev		1203030	2		=			
ANR	1203849	Identifier	padev		1203030	0					
ANR	1203850	CastExpression	( gx_device_pattern_accum * ) adev		1203030	1					
ANR	1203851	CastTarget	gx_device_pattern_accum *		1203030	0					
ANR	1203852	Identifier	adev		1203030	1					
ANR	1203853	IfStatement	if ( ( padev -> bits != NULL ) && ( padev -> bits -> base != NULL ) )		1203030	1					
ANR	1203854	Condition	( padev -> bits != NULL ) && ( padev -> bits -> base != NULL )	1545:12:57712:57763	1203030	0	True				
ANR	1203855	AndExpression	( padev -> bits != NULL ) && ( padev -> bits -> base != NULL )		1203030	0		&&			
ANR	1203856	EqualityExpression	padev -> bits != NULL		1203030	0		!=			
ANR	1203857	PtrMemberAccess	padev -> bits		1203030	0					
ANR	1203858	Identifier	padev		1203030	0					
ANR	1203859	Identifier	bits		1203030	1					
ANR	1203860	Identifier	NULL		1203030	1					
ANR	1203861	EqualityExpression	padev -> bits -> base != NULL		1203030	1		!=			
ANR	1203862	PtrMemberAccess	padev -> bits -> base		1203030	0					
ANR	1203863	PtrMemberAccess	padev -> bits		1203030	0					
ANR	1203864	Identifier	padev		1203030	0					
ANR	1203865	Identifier	bits		1203030	1					
ANR	1203866	Identifier	base		1203030	1					
ANR	1203867	Identifier	NULL		1203030	1					
ANR	1203868	CompoundStatement		150:66:6967:6967	1203030	1					
ANR	1203869	ExpressionStatement	"gs_free_object ( padev -> bits -> memory , padev -> bits -> base , ""mem_open"" )"	1546:12:57780:57846	1203030	0	True				
ANR	1203870	CallExpression	"gs_free_object ( padev -> bits -> memory , padev -> bits -> base , ""mem_open"" )"		1203030	0					
ANR	1203871	Callee	gs_free_object		1203030	0					
ANR	1203872	Identifier	gs_free_object		1203030	0					
ANR	1203873	ArgumentList	padev -> bits -> memory		1203030	1					
ANR	1203874	Argument	padev -> bits -> memory		1203030	0					
ANR	1203875	PtrMemberAccess	padev -> bits -> memory		1203030	0					
ANR	1203876	PtrMemberAccess	padev -> bits		1203030	0					
ANR	1203877	Identifier	padev		1203030	0					
ANR	1203878	Identifier	bits		1203030	1					
ANR	1203879	Identifier	memory		1203030	1					
ANR	1203880	Argument	padev -> bits -> base		1203030	1					
ANR	1203881	PtrMemberAccess	padev -> bits -> base		1203030	0					
ANR	1203882	PtrMemberAccess	padev -> bits		1203030	0					
ANR	1203883	Identifier	padev		1203030	0					
ANR	1203884	Identifier	bits		1203030	1					
ANR	1203885	Identifier	base		1203030	1					
ANR	1203886	Argument	"""mem_open"""		1203030	2					
ANR	1203887	PrimaryExpression	"""mem_open"""		1203030	0					
ANR	1203888	IfStatement	"if ( dev_proc ( adev , open_device ) == pattern_clist_open_device )"		1203030	32					
ANR	1203889	Condition	"dev_proc ( adev , open_device ) == pattern_clist_open_device"	1549:8:57872:57927	1203030	0	True				
ANR	1203890	EqualityExpression	"dev_proc ( adev , open_device ) == pattern_clist_open_device"		1203030	0		==			
ANR	1203891	CallExpression	"dev_proc ( adev , open_device )"		1203030	0					
ANR	1203892	Callee	dev_proc		1203030	0					
ANR	1203893	Identifier	dev_proc		1203030	0					
ANR	1203894	ArgumentList	adev		1203030	1					
ANR	1203895	Argument	adev		1203030	0					
ANR	1203896	Identifier	adev		1203030	0					
ANR	1203897	Argument	open_device		1203030	1					
ANR	1203898	Identifier	open_device		1203030	0					
ANR	1203899	Identifier	pattern_clist_open_device		1203030	1					
ANR	1203900	CompoundStatement		155:8:7141:7188	1203030	1					
ANR	1203901	IdentifierDeclStatement	gx_device_clist * cdev = ( gx_device_clist * ) adev ;	1550:8:57940:57987	1203030	0	True				
ANR	1203902	IdentifierDecl	* cdev = ( gx_device_clist * ) adev		1203030	0					
ANR	1203903	IdentifierDeclType	gx_device_clist *		1203030	0					
ANR	1203904	Identifier	cdev		1203030	1					
ANR	1203905	AssignmentExpression	* cdev = ( gx_device_clist * ) adev		1203030	2		=			
ANR	1203906	Identifier	cdev		1203030	0					
ANR	1203907	CastExpression	( gx_device_clist * ) adev		1203030	1					
ANR	1203908	CastTarget	gx_device_clist *		1203030	0					
ANR	1203909	Identifier	adev		1203030	1					
ANR	1203910	ExpressionStatement	"gs_free_object ( cdev -> writer . bandlist_memory , cdev -> common . data , ""gx_pattern_load"" )"	1552:8:57998:58080	1203030	1	True				
ANR	1203911	CallExpression	"gs_free_object ( cdev -> writer . bandlist_memory , cdev -> common . data , ""gx_pattern_load"" )"		1203030	0					
ANR	1203912	Callee	gs_free_object		1203030	0					
ANR	1203913	Identifier	gs_free_object		1203030	0					
ANR	1203914	ArgumentList	cdev -> writer . bandlist_memory		1203030	1					
ANR	1203915	Argument	cdev -> writer . bandlist_memory		1203030	0					
ANR	1203916	MemberAccess	cdev -> writer . bandlist_memory		1203030	0					
ANR	1203917	PtrMemberAccess	cdev -> writer		1203030	0					
ANR	1203918	Identifier	cdev		1203030	0					
ANR	1203919	Identifier	writer		1203030	1					
ANR	1203920	Identifier	bandlist_memory		1203030	1					
ANR	1203921	Argument	cdev -> common . data		1203030	1					
ANR	1203922	MemberAccess	cdev -> common . data		1203030	0					
ANR	1203923	PtrMemberAccess	cdev -> common		1203030	0					
ANR	1203924	Identifier	cdev		1203030	0					
ANR	1203925	Identifier	common		1203030	1					
ANR	1203926	Identifier	data		1203030	1					
ANR	1203927	Argument	"""gx_pattern_load"""		1203030	2					
ANR	1203928	PrimaryExpression	"""gx_pattern_load"""		1203030	0					
ANR	1203929	ExpressionStatement	cdev -> common . data = 0	1553:8:58090:58111	1203030	2	True				
ANR	1203930	AssignmentExpression	cdev -> common . data = 0		1203030	0		=			
ANR	1203931	MemberAccess	cdev -> common . data		1203030	0					
ANR	1203932	PtrMemberAccess	cdev -> common		1203030	0					
ANR	1203933	Identifier	cdev		1203030	0					
ANR	1203934	Identifier	common		1203030	1					
ANR	1203935	Identifier	data		1203030	1					
ANR	1203936	PrimaryExpression	0		1203030	1					
ANR	1203937	ExpressionStatement	"dev_proc ( adev , close_device ) ( ( gx_device * ) adev )"	1555:4:58123:58170	1203030	33	True				
ANR	1203938	CallExpression	"dev_proc ( adev , close_device ) ( ( gx_device * ) adev )"		1203030	0					
ANR	1203939	Callee	"dev_proc ( adev , close_device )"		1203030	0					
ANR	1203940	CallExpression	"dev_proc ( adev , close_device )"		1203030	0					
ANR	1203941	Callee	dev_proc		1203030	0					
ANR	1203942	Identifier	dev_proc		1203030	0					
ANR	1203943	ArgumentList	adev		1203030	1					
ANR	1203944	Argument	adev		1203030	0					
ANR	1203945	Identifier	adev		1203030	0					
ANR	1203946	Argument	close_device		1203030	1					
ANR	1203947	Identifier	close_device		1203030	0					
ANR	1203948	ArgumentList	( gx_device * ) adev		1203030	1					
ANR	1203949	Argument	( gx_device * ) adev		1203030	0					
ANR	1203950	CastExpression	( gx_device * ) adev		1203030	0					
ANR	1203951	CastTarget	gx_device *		1203030	0					
ANR	1203952	Identifier	adev		1203030	1					
ANR	1203953	ExpressionStatement	gs_gstate_free_chain ( saved )	1556:4:58176:58203	1203030	34	True				
ANR	1203954	CallExpression	gs_gstate_free_chain ( saved )		1203030	0					
ANR	1203955	Callee	gs_gstate_free_chain		1203030	0					
ANR	1203956	Identifier	gs_gstate_free_chain		1203030	0					
ANR	1203957	ArgumentList	saved		1203030	1					
ANR	1203958	Argument	saved		1203030	0					
ANR	1203959	Identifier	saved		1203030	0					
ANR	1203960	ReturnStatement	return code ;	1557:4:58209:58220	1203030	35	True				
ANR	1203961	Identifier	code		1203030	0					
ANR	1203962	ReturnType	int		1203030	1					
ANR	1203963	Identifier	gx_pattern_load		1203030	2					
ANR	1203964	ParameterList	"gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		1203030	3					
ANR	1203965	Parameter	gx_device_color * pdc	1394:16:50693:50713	1203030	0	True				
ANR	1203966	ParameterType	gx_device_color *		1203030	0					
ANR	1203967	Identifier	pdc		1203030	1					
ANR	1203968	Parameter	const gs_gstate * pgs	1394:39:50716:50736	1203030	1	True				
ANR	1203969	ParameterType	const gs_gstate *		1203030	0					
ANR	1203970	Identifier	pgs		1203030	1					
ANR	1203971	Parameter	gx_device * dev	1395:16:50755:50769	1203030	2	True				
ANR	1203972	ParameterType	gx_device *		1203030	0					
ANR	1203973	Identifier	dev		1203030	1					
ANR	1203974	Parameter	gs_color_select_t select	1395:33:50772:50795	1203030	3	True				
ANR	1203975	ParameterType	gs_color_select_t		1203030	0					
ANR	1203976	Identifier	select		1203030	1					
ANR	1203977	CFGEntryNode	ENTRY		1203030		True				
ANR	1203978	CFGExitNode	EXIT		1203030		True				
ANR	1203979	Symbol	* * padev		1203030						
ANR	1203980	Symbol	* pdev -> mask		1203030						
ANR	1203981	Symbol	select		1203030						
ANR	1203982	Symbol	saved		1203030						
ANR	1203983	Symbol	* pgs		1203030						
ANR	1203984	Symbol	* pinst -> templat		1203030						
ANR	1203985	Symbol	pdev -> target -> height		1203030						
ANR	1203986	Symbol	pgs -> pattern_cache -> memory		1203030						
ANR	1203987	Symbol	dev_spec_op		1203030						
ANR	1203988	Symbol	pinst -> templat		1203030						
ANR	1203989	Symbol	close_device		1203030						
ANR	1203990	Symbol	open_device		1203030						
ANR	1203991	Symbol	saved -> device		1203030						
ANR	1203992	Symbol	dev		1203030						
ANR	1203993	Symbol	pdev -> mask -> base		1203030						
ANR	1203994	Symbol	cdev -> common . data		1203030						
ANR	1203995	Symbol	* saved -> device		1203030						
ANR	1203996	Symbol	* * pgs		1203030						
ANR	1203997	Symbol	pgs -> pattern_cache		1203030						
ANR	1203998	Symbol	pattern_accum_open		1203030						
ANR	1203999	Symbol	ctile		1203030						
ANR	1204000	Symbol	adev		1203030						
ANR	1204001	Symbol	gx_pattern_cache_add_entry		1203030						
ANR	1204002	Symbol	gx_erase_colored_pattern		1203030						
ANR	1204003	Symbol	* pinst -> saved		1203030						
ANR	1204004	Symbol	saved -> memory		1203030						
ANR	1204005	Symbol	gs_gstate_copy		1203030						
ANR	1204006	Symbol	saved -> pattern_cache		1203030						
ANR	1204007	Symbol	& pdc -> ccolor		1203030						
ANR	1204008	Symbol	cdev -> common		1203030						
ANR	1204009	Symbol	* * pinst		1203030						
ANR	1204010	Symbol	* * saved		1203030						
ANR	1204011	Symbol	device_encodes_tags		1203030						
ANR	1204012	Symbol	* pinst -> templat . PaintProc		1203030						
ANR	1204013	Symbol	ensure_pattern_cache		1203030						
ANR	1204014	Symbol	pgs		1203030						
ANR	1204015	Symbol	pgs -> memory		1203030						
ANR	1204016	Symbol	pdev -> mask -> height		1203030						
ANR	1204017	Symbol	& ctile		1203030						
ANR	1204018	Symbol	pdev -> mask		1203030						
ANR	1204019	Symbol	* pgs -> pattern_cache		1203030						
ANR	1204020	Symbol	pdev -> bits		1203030						
ANR	1204021	Symbol	( ( gx_device_pattern_accum * ) adev ) -> transbuff		1203030						
ANR	1204022	Symbol	cdev -> writer		1203030						
ANR	1204023	Symbol	* pdev		1203030						
ANR	1204024	Symbol	pdc -> ccolor		1203030						
ANR	1204025	Symbol	padev -> bits -> base		1203030						
ANR	1204026	Symbol	gx_pattern_size_estimate		1203030						
ANR	1204027	Symbol	pdev		1203030						
ANR	1204028	Symbol	* padev -> bits		1203030						
ANR	1204029	Symbol	* cdev		1203030						
ANR	1204030	Symbol	pdev -> memory		1203030						
ANR	1204031	Symbol	* pdc		1203030						
ANR	1204032	Symbol	gs_debug_c		1203030						
ANR	1204033	Symbol	pinst -> templat . PaintProc		1203030						
ANR	1204034	Symbol	pdev -> target		1203030						
ANR	1204035	Symbol	gs_error_Fatal		1203030						
ANR	1204036	Symbol	padev -> bits		1203030						
ANR	1204037	Symbol	( ( gx_device_memory * ) pdev -> target ) -> base		1203030						
ANR	1204038	Symbol	NULL		1203030						
ANR	1204039	Symbol	pinst -> saved		1203030						
ANR	1204040	Symbol	pdf14_get_buffer_information		1203030						
ANR	1204041	Symbol	pattern_clist_open_device		1203030						
ANR	1204042	Symbol	( ( gx_device_pattern_accum * ) adev ) -> bitmap_memory		1203030						
ANR	1204043	Symbol	pinst -> saved -> device		1203030						
ANR	1204044	Symbol	* padev		1203030						
ANR	1204045	Symbol	true		1203030						
ANR	1204046	Symbol	pinst -> templat . PaintType		1203030						
ANR	1204047	Symbol	( ( gx_device_memory * ) pdev -> target ) -> raster		1203030						
ANR	1204048	Symbol	pdev -> mask -> raster		1203030						
ANR	1204049	Symbol	pinst -> saved -> memory		1203030						
ANR	1204050	Symbol	saved -> device -> is_open		1203030						
ANR	1204051	Symbol	gx_pattern_cache_lookup		1203030						
ANR	1204052	Symbol	code		1203030						
ANR	1204053	Symbol	gs_pop_pdf14trans_device		1203030						
ANR	1204054	Symbol	* * pdev		1203030						
ANR	1204055	Symbol	* pdev -> target		1203030						
ANR	1204056	Symbol	gx_pattern_accum_alloc		1203030						
ANR	1204057	Symbol	padev		1203030						
ANR	1204058	Symbol	mem		1203030						
ANR	1204059	Symbol	dev_proc		1203030						
ANR	1204060	Symbol	* adev		1203030						
ANR	1204061	Symbol	pinst -> templat . uses_transparency		1203030						
ANR	1204062	Symbol	pdc -> ccolor . pattern		1203030						
ANR	1204063	Symbol	cdev -> writer . bandlist_memory		1203030						
ANR	1204064	Symbol	pinst -> is_clist		1203030						
ANR	1204065	Symbol	false		1203030						
ANR	1204066	Symbol	padev -> bits -> memory		1203030						
ANR	1204067	Symbol	gxdso_pattern_can_accum		1203030						
ANR	1204068	Symbol	pinst		1203030						
ANR	1204069	Symbol	pdc		1203030						
ANR	1204070	Symbol	gs_push_pdf14trans_device		1203030						
ANR	1204071	Symbol	gs_error_VMerror		1203030						
ANR	1204072	Symbol	gs_note_error		1203030						
ANR	1204073	Symbol	* saved		1203030						
ANR	1204074	Symbol	has_tags		1203030						
ANR	1204075	Symbol	gs_setdevice_no_init		1203030						
ANR	1204076	Symbol	* pinst		1203030						
ANR	1204077	Symbol	cdev		1203030						
ANR	1204078	Function	gs_pattern1_remap_color	1562:0:58326:59787							
ANR	1204079	FunctionDef	"gs_pattern1_remap_color (const gs_client_color * pc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		1204078	0					
ANR	1204080	CompoundStatement		1566:0:58547:59787	1204078	0					
ANR	1204081	IdentifierDeclStatement	gs_pattern1_instance_t * pinst = ( gs_pattern1_instance_t * ) pc -> pattern ;	1567:4:58553:58622	1204078	0	True				
ANR	1204082	IdentifierDecl	* pinst = ( gs_pattern1_instance_t * ) pc -> pattern		1204078	0					
ANR	1204083	IdentifierDeclType	gs_pattern1_instance_t *		1204078	0					
ANR	1204084	Identifier	pinst		1204078	1					
ANR	1204085	AssignmentExpression	* pinst = ( gs_pattern1_instance_t * ) pc -> pattern		1204078	2		=			
ANR	1204086	Identifier	pinst		1204078	0					
ANR	1204087	CastExpression	( gs_pattern1_instance_t * ) pc -> pattern		1204078	1					
ANR	1204088	CastTarget	gs_pattern1_instance_t *		1204078	0					
ANR	1204089	PtrMemberAccess	pc -> pattern		1204078	1					
ANR	1204090	Identifier	pc		1204078	0					
ANR	1204091	Identifier	pattern		1204078	1					
ANR	1204092	IdentifierDeclStatement	int code ;	1568:4:58628:58636	1204078	1	True				
ANR	1204093	IdentifierDecl	code		1204078	0					
ANR	1204094	IdentifierDeclType	int		1204078	0					
ANR	1204095	Identifier	code		1204078	1					
ANR	1204096	ExpressionStatement	pdc -> ccolor = * pc	1571:4:58709:58726	1204078	2	True				
ANR	1204097	AssignmentExpression	pdc -> ccolor = * pc		1204078	0		=			
ANR	1204098	PtrMemberAccess	pdc -> ccolor		1204078	0					
ANR	1204099	Identifier	pdc		1204078	0					
ANR	1204100	Identifier	ccolor		1204078	1					
ANR	1204101	UnaryOperationExpression	* pc		1204078	1					
ANR	1204102	UnaryOperator	*		1204078	0					
ANR	1204103	Identifier	pc		1204078	1					
ANR	1204104	ExpressionStatement	pdc -> ccolor_valid = true	1572:4:58732:58756	1204078	3	True				
ANR	1204105	AssignmentExpression	pdc -> ccolor_valid = true		1204078	0		=			
ANR	1204106	PtrMemberAccess	pdc -> ccolor_valid		1204078	0					
ANR	1204107	Identifier	pdc		1204078	0					
ANR	1204108	Identifier	ccolor_valid		1204078	1					
ANR	1204109	Identifier	true		1204078	1					
ANR	1204110	IfStatement	if ( pinst == 0 )		1204078	4					
ANR	1204111	Condition	pinst == 0	1573:8:58766:58775	1204078	0	True				
ANR	1204112	EqualityExpression	pinst == 0		1204078	0		==			
ANR	1204113	Identifier	pinst		1204078	0					
ANR	1204114	PrimaryExpression	0		1204078	1					
ANR	1204115	CompoundStatement		8:20:230:230	1204078	1					
ANR	1204116	ExpressionStatement	color_set_null_pattern ( pdc )	1575:8:58815:58842	1204078	0	True				
ANR	1204117	CallExpression	color_set_null_pattern ( pdc )		1204078	0					
ANR	1204118	Callee	color_set_null_pattern		1204078	0					
ANR	1204119	Identifier	color_set_null_pattern		1204078	0					
ANR	1204120	ArgumentList	pdc		1204078	1					
ANR	1204121	Argument	pdc		1204078	0					
ANR	1204122	Identifier	pdc		1204078	0					
ANR	1204123	ReturnStatement	return 0 ;	1576:8:58852:58860	1204078	1	True				
ANR	1204124	PrimaryExpression	0		1204078	0					
ANR	1204125	IfStatement	if ( pinst -> templat . PaintType == 2 )		1204078	5					
ANR	1204126	Condition	pinst -> templat . PaintType == 2	1578:8:58876:58904	1204078	0	True				
ANR	1204127	EqualityExpression	pinst -> templat . PaintType == 2		1204078	0		==			
ANR	1204128	MemberAccess	pinst -> templat . PaintType		1204078	0					
ANR	1204129	PtrMemberAccess	pinst -> templat		1204078	0					
ANR	1204130	Identifier	pinst		1204078	0					
ANR	1204131	Identifier	templat		1204078	1					
ANR	1204132	Identifier	PaintType		1204078	1					
ANR	1204133	PrimaryExpression	2		1204078	1					
ANR	1204134	CompoundStatement		13:39:359:359	1204078	1					
ANR	1204135	IfStatement	if ( pcs -> base_space )		1204078	0					
ANR	1204136	Condition	pcs -> base_space	1579:12:58943:58957	1204078	0	True				
ANR	1204137	PtrMemberAccess	pcs -> base_space		1204078	0					
ANR	1204138	Identifier	pcs		1204078	0					
ANR	1204139	Identifier	base_space		1204078	1					
ANR	1204140	ExpressionStatement	"code = ( pcs -> base_space -> type -> remap_color ) ( pc , pcs -> base_space , pdc , pgs , dev , select )"	1580:12:58972:59076	1204078	1	True				
ANR	1204141	AssignmentExpression	"code = ( pcs -> base_space -> type -> remap_color ) ( pc , pcs -> base_space , pdc , pgs , dev , select )"		1204078	0		=			
ANR	1204142	Identifier	code		1204078	0					
ANR	1204143	CallExpression	"( pcs -> base_space -> type -> remap_color ) ( pc , pcs -> base_space , pdc , pgs , dev , select )"		1204078	1					
ANR	1204144	Callee	pcs -> base_space -> type -> remap_color		1204078	0					
ANR	1204145	PtrMemberAccess	pcs -> base_space -> type -> remap_color		1204078	0					
ANR	1204146	PtrMemberAccess	pcs -> base_space -> type		1204078	0					
ANR	1204147	PtrMemberAccess	pcs -> base_space		1204078	0					
ANR	1204148	Identifier	pcs		1204078	0					
ANR	1204149	Identifier	base_space		1204078	1					
ANR	1204150	Identifier	type		1204078	1					
ANR	1204151	Identifier	remap_color		1204078	1					
ANR	1204152	ArgumentList	pc		1204078	1					
ANR	1204153	Argument	pc		1204078	0					
ANR	1204154	Identifier	pc		1204078	0					
ANR	1204155	Argument	pcs -> base_space		1204078	1					
ANR	1204156	PtrMemberAccess	pcs -> base_space		1204078	0					
ANR	1204157	Identifier	pcs		1204078	0					
ANR	1204158	Identifier	base_space		1204078	1					
ANR	1204159	Argument	pdc		1204078	2					
ANR	1204160	Identifier	pdc		1204078	0					
ANR	1204161	Argument	pgs		1204078	3					
ANR	1204162	Identifier	pgs		1204078	0					
ANR	1204163	Argument	dev		1204078	4					
ANR	1204164	Identifier	dev		1204078	0					
ANR	1204165	Argument	select		1204078	5					
ANR	1204166	Identifier	select		1204078	0					
ANR	1204167	ElseStatement	else		1204078	0					
ANR	1204168	ExpressionStatement	code = gs_note_error ( gs_error_unregistered )	1583:12:59103:59146	1204078	0	True				
ANR	1204169	AssignmentExpression	code = gs_note_error ( gs_error_unregistered )		1204078	0		=			
ANR	1204170	Identifier	code		1204078	0					
ANR	1204171	CallExpression	gs_note_error ( gs_error_unregistered )		1204078	1					
ANR	1204172	Callee	gs_note_error		1204078	0					
ANR	1204173	Identifier	gs_note_error		1204078	0					
ANR	1204174	ArgumentList	gs_error_unregistered		1204078	1					
ANR	1204175	Argument	gs_error_unregistered		1204078	0					
ANR	1204176	Identifier	gs_error_unregistered		1204078	0					
ANR	1204177	IfStatement	if ( code < 0 )		1204078	1					
ANR	1204178	Condition	code < 0	1584:12:59160:59167	1204078	0	True				
ANR	1204179	RelationalExpression	code < 0		1204078	0		<			
ANR	1204180	Identifier	code		1204078	0					
ANR	1204181	PrimaryExpression	0		1204078	1					
ANR	1204182	ReturnStatement	return code ;	1585:12:59182:59193	1204078	1	True				
ANR	1204183	Identifier	code		1204078	0					
ANR	1204184	IfStatement	if ( pdc -> type == gx_dc_type_pure )		1204078	2					
ANR	1204185	Condition	pdc -> type == gx_dc_type_pure	1586:12:59207:59234	1204078	0	True				
ANR	1204186	EqualityExpression	pdc -> type == gx_dc_type_pure		1204078	0		==			
ANR	1204187	PtrMemberAccess	pdc -> type		1204078	0					
ANR	1204188	Identifier	pdc		1204078	0					
ANR	1204189	Identifier	type		1204078	1					
ANR	1204190	Identifier	gx_dc_type_pure		1204078	1					
ANR	1204191	ExpressionStatement	pdc -> type = & gx_dc_pure_masked	1587:12:59249:59279	1204078	1	True				
ANR	1204192	AssignmentExpression	pdc -> type = & gx_dc_pure_masked		1204078	0		=			
ANR	1204193	PtrMemberAccess	pdc -> type		1204078	0					
ANR	1204194	Identifier	pdc		1204078	0					
ANR	1204195	Identifier	type		1204078	1					
ANR	1204196	UnaryOperationExpression	& gx_dc_pure_masked		1204078	1					
ANR	1204197	UnaryOperator	&		1204078	0					
ANR	1204198	Identifier	gx_dc_pure_masked		1204078	1					
ANR	1204199	ElseStatement	else		1204078	0					
ANR	1204200	IfStatement	if ( pdc -> type == gx_dc_type_ht_binary )		1204078	0					
ANR	1204201	Condition	pdc -> type == gx_dc_type_ht_binary	1588:17:59298:59330	1204078	0	True				
ANR	1204202	EqualityExpression	pdc -> type == gx_dc_type_ht_binary		1204078	0		==			
ANR	1204203	PtrMemberAccess	pdc -> type		1204078	0					
ANR	1204204	Identifier	pdc		1204078	0					
ANR	1204205	Identifier	type		1204078	1					
ANR	1204206	Identifier	gx_dc_type_ht_binary		1204078	1					
ANR	1204207	ExpressionStatement	pdc -> type = & gx_dc_binary_masked	1589:12:59345:59377	1204078	1	True				
ANR	1204208	AssignmentExpression	pdc -> type = & gx_dc_binary_masked		1204078	0		=			
ANR	1204209	PtrMemberAccess	pdc -> type		1204078	0					
ANR	1204210	Identifier	pdc		1204078	0					
ANR	1204211	Identifier	type		1204078	1					
ANR	1204212	UnaryOperationExpression	& gx_dc_binary_masked		1204078	1					
ANR	1204213	UnaryOperator	&		1204078	0					
ANR	1204214	Identifier	gx_dc_binary_masked		1204078	1					
ANR	1204215	ElseStatement	else		1204078	0					
ANR	1204216	IfStatement	if ( pdc -> type == gx_dc_type_ht_colored )		1204078	0					
ANR	1204217	Condition	pdc -> type == gx_dc_type_ht_colored	1590:17:59396:59429	1204078	0	True				
ANR	1204218	EqualityExpression	pdc -> type == gx_dc_type_ht_colored		1204078	0		==			
ANR	1204219	PtrMemberAccess	pdc -> type		1204078	0					
ANR	1204220	Identifier	pdc		1204078	0					
ANR	1204221	Identifier	type		1204078	1					
ANR	1204222	Identifier	gx_dc_type_ht_colored		1204078	1					
ANR	1204223	ExpressionStatement	pdc -> type = & gx_dc_colored_masked	1591:12:59444:59477	1204078	1	True				
ANR	1204224	AssignmentExpression	pdc -> type = & gx_dc_colored_masked		1204078	0		=			
ANR	1204225	PtrMemberAccess	pdc -> type		1204078	0					
ANR	1204226	Identifier	pdc		1204078	0					
ANR	1204227	Identifier	type		1204078	1					
ANR	1204228	UnaryOperationExpression	& gx_dc_colored_masked		1204078	1					
ANR	1204229	UnaryOperator	&		1204078	0					
ANR	1204230	Identifier	gx_dc_colored_masked		1204078	1					
ANR	1204231	ElseStatement	else		1204078	0					
ANR	1204232	IfStatement	if ( pdc -> type == gx_dc_type_devn )		1204078	0					
ANR	1204233	Condition	pdc -> type == gx_dc_type_devn	1592:17:59496:59523	1204078	0	True				
ANR	1204234	EqualityExpression	pdc -> type == gx_dc_type_devn		1204078	0		==			
ANR	1204235	PtrMemberAccess	pdc -> type		1204078	0					
ANR	1204236	Identifier	pdc		1204078	0					
ANR	1204237	Identifier	type		1204078	1					
ANR	1204238	Identifier	gx_dc_type_devn		1204078	1					
ANR	1204239	ExpressionStatement	pdc -> type = & gx_dc_devn_masked	1593:12:59538:59568	1204078	1	True				
ANR	1204240	AssignmentExpression	pdc -> type = & gx_dc_devn_masked		1204078	0		=			
ANR	1204241	PtrMemberAccess	pdc -> type		1204078	0					
ANR	1204242	Identifier	pdc		1204078	0					
ANR	1204243	Identifier	type		1204078	1					
ANR	1204244	UnaryOperationExpression	& gx_dc_devn_masked		1204078	1					
ANR	1204245	UnaryOperator	&		1204078	0					
ANR	1204246	Identifier	gx_dc_devn_masked		1204078	1					
ANR	1204247	ElseStatement	else		1204078	0					
ANR	1204248	ExpressionStatement	return_error ( gs_error_unregistered )	1595:12:59595:59630	1204078	0	True				
ANR	1204249	CallExpression	return_error ( gs_error_unregistered )		1204078	0					
ANR	1204250	Callee	return_error		1204078	0					
ANR	1204251	Identifier	return_error		1204078	0					
ANR	1204252	ArgumentList	gs_error_unregistered		1204078	1					
ANR	1204253	Argument	gs_error_unregistered		1204078	0					
ANR	1204254	Identifier	gs_error_unregistered		1204078	0					
ANR	1204255	ElseStatement	else		1204078	0					
ANR	1204256	ExpressionStatement	color_set_null_pattern ( pdc )	1597:8:59651:59678	1204078	0	True				
ANR	1204257	CallExpression	color_set_null_pattern ( pdc )		1204078	0					
ANR	1204258	Callee	color_set_null_pattern		1204078	0					
ANR	1204259	Identifier	color_set_null_pattern		1204078	0					
ANR	1204260	ArgumentList	pdc		1204078	1					
ANR	1204261	Argument	pdc		1204078	0					
ANR	1204262	Identifier	pdc		1204078	0					
ANR	1204263	ExpressionStatement	pdc -> mask . id = pinst -> id	1598:4:59684:59708	1204078	6	True				
ANR	1204264	AssignmentExpression	pdc -> mask . id = pinst -> id		1204078	0		=			
ANR	1204265	MemberAccess	pdc -> mask . id		1204078	0					
ANR	1204266	PtrMemberAccess	pdc -> mask		1204078	0					
ANR	1204267	Identifier	pdc		1204078	0					
ANR	1204268	Identifier	mask		1204078	1					
ANR	1204269	Identifier	id		1204078	1					
ANR	1204270	PtrMemberAccess	pinst -> id		1204078	1					
ANR	1204271	Identifier	pinst		1204078	0					
ANR	1204272	Identifier	id		1204078	1					
ANR	1204273	ExpressionStatement	pdc -> mask . m_tile = 0	1599:4:59714:59734	1204078	7	True				
ANR	1204274	AssignmentExpression	pdc -> mask . m_tile = 0		1204078	0		=			
ANR	1204275	MemberAccess	pdc -> mask . m_tile		1204078	0					
ANR	1204276	PtrMemberAccess	pdc -> mask		1204078	0					
ANR	1204277	Identifier	pdc		1204078	0					
ANR	1204278	Identifier	mask		1204078	1					
ANR	1204279	Identifier	m_tile		1204078	1					
ANR	1204280	PrimaryExpression	0		1204078	1					
ANR	1204281	ReturnStatement	"return gx_pattern_load ( pdc , pgs , dev , select ) ;"	1600:4:59740:59785	1204078	8	True				
ANR	1204282	CallExpression	"gx_pattern_load ( pdc , pgs , dev , select )"		1204078	0					
ANR	1204283	Callee	gx_pattern_load		1204078	0					
ANR	1204284	Identifier	gx_pattern_load		1204078	0					
ANR	1204285	ArgumentList	pdc		1204078	1					
ANR	1204286	Argument	pdc		1204078	0					
ANR	1204287	Identifier	pdc		1204078	0					
ANR	1204288	Argument	pgs		1204078	1					
ANR	1204289	Identifier	pgs		1204078	0					
ANR	1204290	Argument	dev		1204078	2					
ANR	1204291	Identifier	dev		1204078	0					
ANR	1204292	Argument	select		1204078	3					
ANR	1204293	Identifier	select		1204078	0					
ANR	1204294	ReturnType	int		1204078	1					
ANR	1204295	Identifier	gs_pattern1_remap_color		1204078	2					
ANR	1204296	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		1204078	3					
ANR	1204297	Parameter	const gs_client_color * pc	1563:24:58354:58379	1204078	0	True				
ANR	1204298	ParameterType	const gs_client_color *		1204078	0					
ANR	1204299	Identifier	pc		1204078	1					
ANR	1204300	Parameter	const gs_color_space * pcs	1563:52:58382:58407	1204078	1	True				
ANR	1204301	ParameterType	const gs_color_space *		1204078	0					
ANR	1204302	Identifier	pcs		1204078	1					
ANR	1204303	Parameter	gx_device_color * pdc	1564:24:58434:58454	1204078	2	True				
ANR	1204304	ParameterType	gx_device_color *		1204078	0					
ANR	1204305	Identifier	pdc		1204078	1					
ANR	1204306	Parameter	const gs_gstate * pgs	1564:47:58457:58477	1204078	3	True				
ANR	1204307	ParameterType	const gs_gstate *		1204078	0					
ANR	1204308	Identifier	pgs		1204078	1					
ANR	1204309	Parameter	gx_device * dev	1565:24:58504:58518	1204078	4	True				
ANR	1204310	ParameterType	gx_device *		1204078	0					
ANR	1204311	Identifier	dev		1204078	1					
ANR	1204312	Parameter	gs_color_select_t select	1565:41:58521:58544	1204078	5	True				
ANR	1204313	ParameterType	gs_color_select_t		1204078	0					
ANR	1204314	Identifier	select		1204078	1					
ANR	1204315	CFGEntryNode	ENTRY		1204078		True				
ANR	1204316	CFGExitNode	EXIT		1204078		True				
ANR	1204317	Symbol	pdc -> type		1204078						
ANR	1204318	Symbol	pinst -> id		1204078						
ANR	1204319	Symbol	gs_error_unregistered		1204078						
ANR	1204320	Symbol	select		1204078						
ANR	1204321	Symbol	code		1204078						
ANR	1204322	Symbol	gx_pattern_load		1204078						
ANR	1204323	Symbol	pinst -> templat		1204078						
ANR	1204324	Symbol	& gx_dc_colored_masked		1204078						
ANR	1204325	Symbol	* pcs		1204078						
ANR	1204326	Symbol	gx_dc_type_pure		1204078						
ANR	1204327	Symbol	gx_dc_type_devn		1204078						
ANR	1204328	Symbol	pdc -> mask . m_tile		1204078						
ANR	1204329	Symbol	& gx_dc_binary_masked		1204078						
ANR	1204330	Symbol	pdc -> ccolor_valid		1204078						
ANR	1204331	Symbol	dev		1204078						
ANR	1204332	Symbol	& gx_dc_pure_masked		1204078						
ANR	1204333	Symbol	* pdc		1204078						
ANR	1204334	Symbol	& gx_dc_devn_masked		1204078						
ANR	1204335	Symbol	pgs		1204078						
ANR	1204336	Symbol	* * * pcs		1204078						
ANR	1204337	Symbol	pdc -> mask		1204078						
ANR	1204338	Symbol	pcs		1204078						
ANR	1204339	Symbol	* * pcs -> base_space		1204078						
ANR	1204340	Symbol	gx_dc_type_ht_binary		1204078						
ANR	1204341	Symbol	pdc -> mask . id		1204078						
ANR	1204342	Symbol	pinst		1204078						
ANR	1204343	Symbol	pdc		1204078						
ANR	1204344	Symbol	pcs -> base_space -> type		1204078						
ANR	1204345	Symbol	* pcs -> base_space -> type		1204078						
ANR	1204346	Symbol	pcs -> base_space		1204078						
ANR	1204347	Symbol	gs_note_error		1204078						
ANR	1204348	Symbol	pc		1204078						
ANR	1204349	Symbol	* * pcs		1204078						
ANR	1204350	Symbol	* pcs -> base_space		1204078						
ANR	1204351	Symbol	pcs -> base_space -> type -> remap_color		1204078						
ANR	1204352	Symbol	pc -> pattern		1204078						
ANR	1204353	Symbol	true		1204078						
ANR	1204354	Symbol	pinst -> templat . PaintType		1204078						
ANR	1204355	Symbol	* pc		1204078						
ANR	1204356	Symbol	gx_dc_type_ht_colored		1204078						
ANR	1204357	Symbol	pdc -> ccolor		1204078						
ANR	1204358	Symbol	* pinst		1204078						
ANR	1204359	Function	pattern_accum_dev_spec_op	1603:0:59790:60645							
ANR	1204360	FunctionDef	"pattern_accum_dev_spec_op (gx_device * dev , int dso , void * data , int size)"		1204359	0					
ANR	1204361	CompoundStatement		1605:0:59867:60645	1204359	0					
ANR	1204362	Statement	gx_device_pattern_accum	1606:4:59873:59895	1204359	0	True				
ANR	1204363	Statement	*	1606:28:59897:59897	1204359	1	True				
ANR	1204364	Statement	const	1606:29:59898:59902	1204359	2	True				
ANR	1204365	ExpressionStatement	padev = ( gx_device_pattern_accum * ) dev	1606:35:59904:59942	1204359	3	True				
ANR	1204366	AssignmentExpression	padev = ( gx_device_pattern_accum * ) dev		1204359	0		=			
ANR	1204367	Identifier	padev		1204359	0					
ANR	1204368	CastExpression	( gx_device_pattern_accum * ) dev		1204359	1					
ANR	1204369	CastTarget	gx_device_pattern_accum *		1204359	0					
ANR	1204370	Identifier	dev		1204359	1					
ANR	1204371	IdentifierDeclStatement	const gs_pattern1_instance_t * pinst = padev -> instance ;	1607:4:59948:60001	1204359	4	True				
ANR	1204372	IdentifierDecl	* pinst = padev -> instance		1204359	0					
ANR	1204373	IdentifierDeclType	const gs_pattern1_instance_t *		1204359	0					
ANR	1204374	Identifier	pinst		1204359	1					
ANR	1204375	AssignmentExpression	* pinst = padev -> instance		1204359	2		=			
ANR	1204376	Identifier	pinst		1204359	0					
ANR	1204377	PtrMemberAccess	padev -> instance		1204359	1					
ANR	1204378	Identifier	padev		1204359	0					
ANR	1204379	Identifier	instance		1204359	1					
ANR	1204380	IdentifierDeclStatement	gx_device * target = ( padev -> target == 0 ? gs_currentdevice ( pinst -> saved ) : padev -> target ) ;	1608:4:60007:60113	1204359	5	True				
ANR	1204381	IdentifierDecl	* target = ( padev -> target == 0 ? gs_currentdevice ( pinst -> saved ) : padev -> target )		1204359	0					
ANR	1204382	IdentifierDeclType	gx_device *		1204359	0					
ANR	1204383	Identifier	target		1204359	1					
ANR	1204384	AssignmentExpression	* target = ( padev -> target == 0 ? gs_currentdevice ( pinst -> saved ) : padev -> target )		1204359	2		=			
ANR	1204385	Identifier	target		1204359	0					
ANR	1204386	ConditionalExpression	padev -> target == 0 ? gs_currentdevice ( pinst -> saved ) : padev -> target		1204359	1					
ANR	1204387	Condition	padev -> target == 0		1204359	0					
ANR	1204388	EqualityExpression	padev -> target == 0		1204359	0		==			
ANR	1204389	PtrMemberAccess	padev -> target		1204359	0					
ANR	1204390	Identifier	padev		1204359	0					
ANR	1204391	Identifier	target		1204359	1					
ANR	1204392	PrimaryExpression	0		1204359	1					
ANR	1204393	CallExpression	gs_currentdevice ( pinst -> saved )		1204359	1					
ANR	1204394	Callee	gs_currentdevice		1204359	0					
ANR	1204395	Identifier	gs_currentdevice		1204359	0					
ANR	1204396	ArgumentList	pinst -> saved		1204359	1					
ANR	1204397	Argument	pinst -> saved		1204359	0					
ANR	1204398	PtrMemberAccess	pinst -> saved		1204359	0					
ANR	1204399	Identifier	pinst		1204359	0					
ANR	1204400	Identifier	saved		1204359	1					
ANR	1204401	PtrMemberAccess	padev -> target		1204359	2					
ANR	1204402	Identifier	padev		1204359	0					
ANR	1204403	Identifier	target		1204359	1					
ANR	1204404	IfStatement	if ( dso == gxdso_in_pattern_accumulator )		1204359	6					
ANR	1204405	Condition	dso == gxdso_in_pattern_accumulator	1612:8:60124:60158	1204359	0	True				
ANR	1204406	EqualityExpression	dso == gxdso_in_pattern_accumulator		1204359	0		==			
ANR	1204407	Identifier	dso		1204359	0					
ANR	1204408	Identifier	gxdso_in_pattern_accumulator		1204359	1					
ANR	1204409	ReturnStatement	return ( pinst -> templat . PaintType == 2 ? 2 : 1 ) ;	1613:8:60169:60215	1204359	1	True				
ANR	1204410	ConditionalExpression	pinst -> templat . PaintType == 2 ? 2 : 1		1204359	0					
ANR	1204411	Condition	pinst -> templat . PaintType == 2		1204359	0					
ANR	1204412	EqualityExpression	pinst -> templat . PaintType == 2		1204359	0		==			
ANR	1204413	MemberAccess	pinst -> templat . PaintType		1204359	0					
ANR	1204414	PtrMemberAccess	pinst -> templat		1204359	0					
ANR	1204415	Identifier	pinst		1204359	0					
ANR	1204416	Identifier	templat		1204359	1					
ANR	1204417	Identifier	PaintType		1204359	1					
ANR	1204418	PrimaryExpression	2		1204359	1					
ANR	1204419	PrimaryExpression	2		1204359	1					
ANR	1204420	PrimaryExpression	1		1204359	2					
ANR	1204421	IfStatement	if ( dso == gxdso_get_dev_param )		1204359	7					
ANR	1204422	Condition	dso == gxdso_get_dev_param	1614:8:60225:60250	1204359	0	True				
ANR	1204423	EqualityExpression	dso == gxdso_get_dev_param		1204359	0		==			
ANR	1204424	Identifier	dso		1204359	0					
ANR	1204425	Identifier	gxdso_get_dev_param		1204359	1					
ANR	1204426	CompoundStatement		13:8:519:537	1204359	1					
ANR	1204427	IdentifierDeclStatement	dev_param_req_t * request = ( dev_param_req_t * ) data ;	1615:8:60263:60313	1204359	0	True				
ANR	1204428	IdentifierDecl	* request = ( dev_param_req_t * ) data		1204359	0					
ANR	1204429	IdentifierDeclType	dev_param_req_t *		1204359	0					
ANR	1204430	Identifier	request		1204359	1					
ANR	1204431	AssignmentExpression	* request = ( dev_param_req_t * ) data		1204359	2		=			
ANR	1204432	Identifier	request		1204359	0					
ANR	1204433	CastExpression	( dev_param_req_t * ) data		1204359	1					
ANR	1204434	CastTarget	dev_param_req_t *		1204359	0					
ANR	1204435	Identifier	data		1204359	1					
ANR	1204436	IdentifierDeclStatement	gs_param_list * plist = ( gs_param_list * ) request -> list ;	1616:8:60323:60377	1204359	1	True				
ANR	1204437	IdentifierDecl	* plist = ( gs_param_list * ) request -> list		1204359	0					
ANR	1204438	IdentifierDeclType	gs_param_list *		1204359	0					
ANR	1204439	Identifier	plist		1204359	1					
ANR	1204440	AssignmentExpression	* plist = ( gs_param_list * ) request -> list		1204359	2		=			
ANR	1204441	Identifier	plist		1204359	0					
ANR	1204442	CastExpression	( gs_param_list * ) request -> list		1204359	1					
ANR	1204443	CastTarget	gs_param_list *		1204359	0					
ANR	1204444	PtrMemberAccess	request -> list		1204359	1					
ANR	1204445	Identifier	request		1204359	0					
ANR	1204446	Identifier	list		1204359	1					
ANR	1204447	IdentifierDeclStatement	bool bool_true = 1 ;	1617:8:60387:60405	1204359	2	True				
ANR	1204448	IdentifierDecl	bool_true = 1		1204359	0					
ANR	1204449	IdentifierDeclType	bool		1204359	0					
ANR	1204450	Identifier	bool_true		1204359	1					
ANR	1204451	AssignmentExpression	bool_true = 1		1204359	2		=			
ANR	1204452	Identifier	bool_true		1204359	0					
ANR	1204453	PrimaryExpression	1		1204359	1					
ANR	1204454	IfStatement	"if ( strcmp ( request -> Param , ""NoInterpolateImagemasks"" ) == 0 )"		1204359	3					
ANR	1204455	Condition	"strcmp ( request -> Param , ""NoInterpolateImagemasks"" ) == 0"	1619:12:60420:60473	1204359	0	True				
ANR	1204456	EqualityExpression	"strcmp ( request -> Param , ""NoInterpolateImagemasks"" ) == 0"		1204359	0		==			
ANR	1204457	CallExpression	"strcmp ( request -> Param , ""NoInterpolateImagemasks"" )"		1204359	0					
ANR	1204458	Callee	strcmp		1204359	0					
ANR	1204459	Identifier	strcmp		1204359	0					
ANR	1204460	ArgumentList	request -> Param		1204359	1					
ANR	1204461	Argument	request -> Param		1204359	0					
ANR	1204462	PtrMemberAccess	request -> Param		1204359	0					
ANR	1204463	Identifier	request		1204359	0					
ANR	1204464	Identifier	Param		1204359	1					
ANR	1204465	Argument	"""NoInterpolateImagemasks"""		1204359	1					
ANR	1204466	PrimaryExpression	"""NoInterpolateImagemasks"""		1204359	0					
ANR	1204467	PrimaryExpression	0		1204359	1					
ANR	1204468	CompoundStatement		15:68:608:608	1204359	1					
ANR	1204469	ReturnStatement	"return param_write_bool ( plist , ""NoInterpolateImagemasks"" , & bool_true ) ;"	1620:12:60490:60559	1204359	0	True				
ANR	1204470	CallExpression	"param_write_bool ( plist , ""NoInterpolateImagemasks"" , & bool_true )"		1204359	0					
ANR	1204471	Callee	param_write_bool		1204359	0					
ANR	1204472	Identifier	param_write_bool		1204359	0					
ANR	1204473	ArgumentList	plist		1204359	1					
ANR	1204474	Argument	plist		1204359	0					
ANR	1204475	Identifier	plist		1204359	0					
ANR	1204476	Argument	"""NoInterpolateImagemasks"""		1204359	1					
ANR	1204477	PrimaryExpression	"""NoInterpolateImagemasks"""		1204359	0					
ANR	1204478	Argument	& bool_true		1204359	2					
ANR	1204479	UnaryOperationExpression	& bool_true		1204359	0					
ANR	1204480	UnaryOperator	&		1204359	0					
ANR	1204481	Identifier	bool_true		1204359	1					
ANR	1204482	ReturnStatement	"return dev_proc ( target , dev_spec_op ) ( target , dso , data , size ) ;"	1624:4:60582:60643	1204359	8	True				
ANR	1204483	CallExpression	"dev_proc ( target , dev_spec_op ) ( target , dso , data , size )"		1204359	0					
ANR	1204484	Callee	"dev_proc ( target , dev_spec_op )"		1204359	0					
ANR	1204485	CallExpression	"dev_proc ( target , dev_spec_op )"		1204359	0					
ANR	1204486	Callee	dev_proc		1204359	0					
ANR	1204487	Identifier	dev_proc		1204359	0					
ANR	1204488	ArgumentList	target		1204359	1					
ANR	1204489	Argument	target		1204359	0					
ANR	1204490	Identifier	target		1204359	0					
ANR	1204491	Argument	dev_spec_op		1204359	1					
ANR	1204492	Identifier	dev_spec_op		1204359	0					
ANR	1204493	ArgumentList	target		1204359	1					
ANR	1204494	Argument	target		1204359	0					
ANR	1204495	Identifier	target		1204359	0					
ANR	1204496	Argument	dso		1204359	1					
ANR	1204497	Identifier	dso		1204359	0					
ANR	1204498	Argument	data		1204359	2					
ANR	1204499	Identifier	data		1204359	0					
ANR	1204500	Argument	size		1204359	3					
ANR	1204501	Identifier	size		1204359	0					
ANR	1204502	ReturnType	int		1204359	1					
ANR	1204503	Identifier	pattern_accum_dev_spec_op		1204359	2					
ANR	1204504	ParameterList	"gx_device * dev , int dso , void * data , int size"		1204359	3					
ANR	1204505	Parameter	gx_device * dev	1604:26:59820:59833	1204359	0	True				
ANR	1204506	ParameterType	gx_device *		1204359	0					
ANR	1204507	Identifier	dev		1204359	1					
ANR	1204508	Parameter	int dso	1604:42:59836:59842	1204359	1	True				
ANR	1204509	ParameterType	int		1204359	0					
ANR	1204510	Identifier	dso		1204359	1					
ANR	1204511	Parameter	void * data	1604:51:59845:59854	1204359	2	True				
ANR	1204512	ParameterType	void *		1204359	0					
ANR	1204513	Identifier	data		1204359	1					
ANR	1204514	Parameter	int size	1604:63:59857:59864	1204359	3	True				
ANR	1204515	ParameterType	int		1204359	0					
ANR	1204516	Identifier	size		1204359	1					
ANR	1204517	CFGEntryNode	ENTRY		1204359		True				
ANR	1204518	CFGExitNode	EXIT		1204359		True				
ANR	1204519	Symbol	dso		1204359						
ANR	1204520	Symbol	request		1204359						
ANR	1204521	Symbol	data		1204359						
ANR	1204522	Symbol	dev_spec_op		1204359						
ANR	1204523	Symbol	gs_currentdevice		1204359						
ANR	1204524	Symbol	pinst -> templat		1204359						
ANR	1204525	Symbol	request -> list		1204359						
ANR	1204526	Symbol	& bool_true		1204359						
ANR	1204527	Symbol	padev -> instance		1204359						
ANR	1204528	Symbol	param_write_bool		1204359						
ANR	1204529	Symbol	plist		1204359						
ANR	1204530	Symbol	padev		1204359						
ANR	1204531	Symbol	request -> Param		1204359						
ANR	1204532	Symbol	dev		1204359						
ANR	1204533	Symbol	dev_proc		1204359						
ANR	1204534	Symbol	gxdso_in_pattern_accumulator		1204359						
ANR	1204535	Symbol	strcmp		1204359						
ANR	1204536	Symbol	pinst -> saved		1204359						
ANR	1204537	Symbol	bool_true		1204359						
ANR	1204538	Symbol	pinst		1204359						
ANR	1204539	Symbol	target		1204359						
ANR	1204540	Symbol	size		1204359						
ANR	1204541	Symbol	* padev		1204359						
ANR	1204542	Symbol	* request		1204359						
ANR	1204543	Symbol	pinst -> templat . PaintType		1204359						
ANR	1204544	Symbol	* pinst		1204359						
ANR	1204545	Symbol	gxdso_get_dev_param		1204359						
ANR	1204546	Symbol	padev -> target		1204359						
