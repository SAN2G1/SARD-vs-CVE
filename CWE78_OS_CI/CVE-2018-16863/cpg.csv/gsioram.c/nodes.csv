command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5204723	File	data/converged/CVE-2018-16863_ghostpdl/gsioram.c								
ANR	5204724	DeclStmt									
ANR	5204725	Decl							void	"void ( const gs_memory_t * memory , void * vptr )"	ram_finalize
ANR	5204726	DeclStmt									
ANR	5204727	Decl							const gx_io_device	const gx_io_device	gs_iodev_ram
ANR	5204728	ClassDef	ramfs_state_s	72:8:2401:2477							
ANR	5204729	DeclStmt									
ANR	5204730	Decl							gs_memory_t	gs_memory_t *	memory
ANR	5204731	DeclStmt									
ANR	5204732	Decl							ramfs	ramfs *	fs
ANR	5204733	DeclStmt									
ANR	5204734	Decl							ramfs_state_s	ramfs_state_s	ramfs_state
ANR	5204735	ClassDef	gsram_enum_s	81:8:2639:2736							
ANR	5204736	DeclStmt									
ANR	5204737	Decl							char	char *	pattern
ANR	5204738	DeclStmt									
ANR	5204739	Decl							ramfs_enum	ramfs_enum *	e
ANR	5204740	DeclStmt									
ANR	5204741	Decl							gs_memory_t	gs_memory_t *	memory
ANR	5204742	DeclStmt									
ANR	5204743	Decl							gsram_enum_s	gsram_enum_s	gsram_enum
ANR	5204744	DeclStmt									
ANR	5204745	Decl							int	"int ( stream * , gs_offset_t * )"	s_ram_available
ANR	5204746	Decl							int	"int ( stream * , gs_offset_t )"	s_ram_read_seek
ANR	5204747	Decl							int	int ( stream * )	s_ram_read_close
ANR	5204748	Decl							int	"int ( stream_state * , stream_cursor_read * , stream_cursor_write * , bool )"	s_ram_read_process
ANR	5204749	DeclStmt									
ANR	5204750	Decl							int	"int ( stream * , gs_offset_t )"	s_ram_write_seek
ANR	5204751	Decl							int	int ( stream * )	s_ram_write_flush
ANR	5204752	Decl							int	int ( stream * )	s_ram_write_close
ANR	5204753	Decl							int	"int ( stream_state * , stream_cursor_read * , stream_cursor_write * , bool )"	s_ram_write_process
ANR	5204754	DeclStmt									
ANR	5204755	Decl							int	"int ( stream * , bool )"	s_ram_switch
ANR	5204756	Function	ramfs_errno_to_code	113:0:3545:3904							
ANR	5204757	FunctionDef	ramfs_errno_to_code (int errno)		5204756	0					
ANR	5204758	CompoundStatement		114:31:3587:3904	5204756	0					
ANR	5204759	SwitchStatement	switch ( errno )		5204756	0					
ANR	5204760	Condition	errno	115:12:3601:3605	5204756	0	True				
ANR	5204761	Identifier	errno		5204756	0					
ANR	5204762	CompoundStatement		2:19:20:20	5204756	1					
ANR	5204763	Label	case RAMFS_NOTFOUND :	116:4:3614:3633	5204756	0	True				
ANR	5204764	Identifier	RAMFS_NOTFOUND		5204756	0					
ANR	5204765	ExpressionStatement	return_error ( gs_error_undefinedfilename )	117:8:3643:3683	5204756	1	True				
ANR	5204766	CallExpression	return_error ( gs_error_undefinedfilename )		5204756	0					
ANR	5204767	Callee	return_error		5204756	0					
ANR	5204768	Identifier	return_error		5204756	0					
ANR	5204769	ArgumentList	gs_error_undefinedfilename		5204756	1					
ANR	5204770	Argument	gs_error_undefinedfilename		5204756	0					
ANR	5204771	Identifier	gs_error_undefinedfilename		5204756	0					
ANR	5204772	Label	case RAMFS_NOACCESS :	118:4:3689:3708	5204756	2	True				
ANR	5204773	Identifier	RAMFS_NOACCESS		5204756	0					
ANR	5204774	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	119:8:3718:3758	5204756	3	True				
ANR	5204775	CallExpression	return_error ( gs_error_invalidfileaccess )		5204756	0					
ANR	5204776	Callee	return_error		5204756	0					
ANR	5204777	Identifier	return_error		5204756	0					
ANR	5204778	ArgumentList	gs_error_invalidfileaccess		5204756	1					
ANR	5204779	Argument	gs_error_invalidfileaccess		5204756	0					
ANR	5204780	Identifier	gs_error_invalidfileaccess		5204756	0					
ANR	5204781	Label	case RAMFS_NOMEM :	120:4:3764:3780	5204756	4	True				
ANR	5204782	Identifier	RAMFS_NOMEM		5204756	0					
ANR	5204783	ExpressionStatement	return_error ( gs_error_VMerror )	121:8:3790:3820	5204756	5	True				
ANR	5204784	CallExpression	return_error ( gs_error_VMerror )		5204756	0					
ANR	5204785	Callee	return_error		5204756	0					
ANR	5204786	Identifier	return_error		5204756	0					
ANR	5204787	ArgumentList	gs_error_VMerror		5204756	1					
ANR	5204788	Argument	gs_error_VMerror		5204756	0					
ANR	5204789	Identifier	gs_error_VMerror		5204756	0					
ANR	5204790	Label	default :	123:4:3849:3856	5204756	6	True				
ANR	5204791	Identifier	default		5204756	0					
ANR	5204792	ExpressionStatement	return_error ( gs_error_ioerror )	124:8:3866:3896	5204756	7	True				
ANR	5204793	CallExpression	return_error ( gs_error_ioerror )		5204756	0					
ANR	5204794	Callee	return_error		5204756	0					
ANR	5204795	Identifier	return_error		5204756	0					
ANR	5204796	ArgumentList	gs_error_ioerror		5204756	1					
ANR	5204797	Argument	gs_error_ioerror		5204756	0					
ANR	5204798	Identifier	gs_error_ioerror		5204756	0					
ANR	5204799	ReturnType	static int		5204756	1					
ANR	5204800	Identifier	ramfs_errno_to_code		5204756	2					
ANR	5204801	ParameterList	int errno		5204756	3					
ANR	5204802	Parameter	int errno	114:20:3576:3584	5204756	0	True				
ANR	5204803	ParameterType	int		5204756	0					
ANR	5204804	Identifier	errno		5204756	1					
ANR	5204805	CFGEntryNode	ENTRY		5204756		True				
ANR	5204806	CFGExitNode	EXIT		5204756		True				
ANR	5204807	Symbol	gs_error_VMerror		5204756						
ANR	5204808	Symbol	errno		5204756						
ANR	5204809	Symbol	gs_error_ioerror		5204756						
ANR	5204810	Symbol	gs_error_undefinedfilename		5204756						
ANR	5204811	Symbol	gs_error_invalidfileaccess		5204756						
ANR	5204812	DeclStmt									
ANR	5204813	Decl							void	"void ( register stream * s , ramhandle * file , byte * buf , uint len )"	sread_ram
ANR	5204814	Decl							void	"void ( register stream * s , ramhandle * file , byte * buf , uint len )"	swrite_ram
ANR	5204815	Decl							void	"void ( register stream * s , ramhandle * file , byte * buf , uint len )"	sappend_ram
ANR	5204816	Function	ram_open_file	133:0:4141:6603							
ANR	5204817	FunctionDef	"ram_open_file (gx_io_device * iodev , const char * fname , uint len , const char * file_access , stream * * ps , gs_memory_t * mem)"		5204816	0					
ANR	5204818	CompoundStatement		136:0:4279:6603	5204816	0					
ANR	5204819	IdentifierDeclStatement	int code = 0 ;	137:4:4285:4297	5204816	0	True				
ANR	5204820	IdentifierDecl	code = 0		5204816	0					
ANR	5204821	IdentifierDeclType	int		5204816	0					
ANR	5204822	Identifier	code		5204816	1					
ANR	5204823	AssignmentExpression	code = 0		5204816	2		=			
ANR	5204824	Identifier	code		5204816	0					
ANR	5204825	PrimaryExpression	0		5204816	1					
ANR	5204826	IdentifierDeclStatement	ramhandle * file ;	138:4:4303:4319	5204816	1	True				
ANR	5204827	IdentifierDecl	* file		5204816	0					
ANR	5204828	IdentifierDeclType	ramhandle *		5204816	0					
ANR	5204829	Identifier	file		5204816	1					
ANR	5204830	IdentifierDeclStatement	char fmode [ 4 ] ;	139:4:4325:4338	5204816	2	True				
ANR	5204831	IdentifierDecl	fmode [ 4 ]		5204816	0					
ANR	5204832	IdentifierDeclType	char [ 4 ]		5204816	0					
ANR	5204833	Identifier	fmode		5204816	1					
ANR	5204834	PrimaryExpression	4		5204816	2					
ANR	5204835	IdentifierDeclStatement	int openmode = RAMFS_READ ;	140:4:4373:4396	5204816	3	True				
ANR	5204836	IdentifierDecl	openmode = RAMFS_READ		5204816	0					
ANR	5204837	IdentifierDeclType	int		5204816	0					
ANR	5204838	Identifier	openmode		5204816	1					
ANR	5204839	AssignmentExpression	openmode = RAMFS_READ		5204816	2		=			
ANR	5204840	Identifier	RAMFS_READ		5204816	0					
ANR	5204841	Identifier	RAMFS_READ		5204816	1					
ANR	5204842	IdentifierDeclStatement	ramfs * fs ;	141:4:4402:4412	5204816	4	True				
ANR	5204843	IdentifierDecl	* fs		5204816	0					
ANR	5204844	IdentifierDeclType	ramfs *		5204816	0					
ANR	5204845	Identifier	fs		5204816	1					
ANR	5204846	IdentifierDeclStatement	char * namestr = NULL ;	142:4:4418:4439	5204816	5	True				
ANR	5204847	IdentifierDecl	* namestr = NULL		5204816	0					
ANR	5204848	IdentifierDeclType	char *		5204816	0					
ANR	5204849	Identifier	namestr		5204816	1					
ANR	5204850	AssignmentExpression	* namestr = NULL		5204816	2		=			
ANR	5204851	Identifier	NULL		5204816	0					
ANR	5204852	Identifier	NULL		5204816	1					
ANR	5204853	ExpressionStatement	"namestr = ( char * ) gs_alloc_bytes ( mem , len + 1 , ""temporary filename string"" )"	145:4:4498:4573	5204816	6	True				
ANR	5204854	AssignmentExpression	"namestr = ( char * ) gs_alloc_bytes ( mem , len + 1 , ""temporary filename string"" )"		5204816	0		=			
ANR	5204855	Identifier	namestr		5204816	0					
ANR	5204856	CastExpression	"( char * ) gs_alloc_bytes ( mem , len + 1 , ""temporary filename string"" )"		5204816	1					
ANR	5204857	CastTarget	char *		5204816	0					
ANR	5204858	CallExpression	"gs_alloc_bytes ( mem , len + 1 , ""temporary filename string"" )"		5204816	1					
ANR	5204859	Callee	gs_alloc_bytes		5204816	0					
ANR	5204860	Identifier	gs_alloc_bytes		5204816	0					
ANR	5204861	ArgumentList	mem		5204816	1					
ANR	5204862	Argument	mem		5204816	0					
ANR	5204863	Identifier	mem		5204816	0					
ANR	5204864	Argument	len + 1		5204816	1					
ANR	5204865	AdditiveExpression	len + 1		5204816	0		+			
ANR	5204866	Identifier	len		5204816	0					
ANR	5204867	PrimaryExpression	1		5204816	1					
ANR	5204868	Argument	"""temporary filename string"""		5204816	2					
ANR	5204869	PrimaryExpression	"""temporary filename string"""		5204816	0					
ANR	5204870	IfStatement	if ( ! namestr )		5204816	7					
ANR	5204871	Condition	! namestr	146:7:4582:4589	5204816	0	True				
ANR	5204872	UnaryOperationExpression	! namestr		5204816	0					
ANR	5204873	UnaryOperator	!		5204816	0					
ANR	5204874	Identifier	namestr		5204816	1					
ANR	5204875	ExpressionStatement	return_error ( gs_error_VMerror )	147:8:4600:4630	5204816	1	True				
ANR	5204876	CallExpression	return_error ( gs_error_VMerror )		5204816	0					
ANR	5204877	Callee	return_error		5204816	0					
ANR	5204878	Identifier	return_error		5204816	0					
ANR	5204879	ArgumentList	gs_error_VMerror		5204816	1					
ANR	5204880	Argument	gs_error_VMerror		5204816	0					
ANR	5204881	Identifier	gs_error_VMerror		5204816	0					
ANR	5204882	ExpressionStatement	"strncpy ( namestr , fname , len )"	148:4:4636:4662	5204816	8	True				
ANR	5204883	CallExpression	"strncpy ( namestr , fname , len )"		5204816	0					
ANR	5204884	Callee	strncpy		5204816	0					
ANR	5204885	Identifier	strncpy		5204816	0					
ANR	5204886	ArgumentList	namestr		5204816	1					
ANR	5204887	Argument	namestr		5204816	0					
ANR	5204888	Identifier	namestr		5204816	0					
ANR	5204889	Argument	fname		5204816	1					
ANR	5204890	Identifier	fname		5204816	0					
ANR	5204891	Argument	len		5204816	2					
ANR	5204892	Identifier	len		5204816	0					
ANR	5204893	ExpressionStatement	namestr [ len ] = 0	149:4:4668:4684	5204816	9	True				
ANR	5204894	AssignmentExpression	namestr [ len ] = 0		5204816	0		=			
ANR	5204895	ArrayIndexing	namestr [ len ]		5204816	0					
ANR	5204896	Identifier	namestr		5204816	0					
ANR	5204897	Identifier	len		5204816	1					
ANR	5204898	PrimaryExpression	0		5204816	1					
ANR	5204899	IfStatement	if ( ! iodev )		5204816	10					
ANR	5204900	Condition	! iodev	151:8:4695:4700	5204816	0	True				
ANR	5204901	UnaryOperationExpression	! iodev		5204816	0					
ANR	5204902	UnaryOperator	!		5204816	0					
ANR	5204903	Identifier	iodev		5204816	1					
ANR	5204904	CompoundStatement		16:16:423:423	5204816	1					
ANR	5204905	ExpressionStatement	"gs_free_object ( mem , namestr , ""free temporary filename string"" )"	152:8:4739:4801	5204816	0	True				
ANR	5204906	CallExpression	"gs_free_object ( mem , namestr , ""free temporary filename string"" )"		5204816	0					
ANR	5204907	Callee	gs_free_object		5204816	0					
ANR	5204908	Identifier	gs_free_object		5204816	0					
ANR	5204909	ArgumentList	mem		5204816	1					
ANR	5204910	Argument	mem		5204816	0					
ANR	5204911	Identifier	mem		5204816	0					
ANR	5204912	Argument	namestr		5204816	1					
ANR	5204913	Identifier	namestr		5204816	0					
ANR	5204914	Argument	"""free temporary filename string"""		5204816	2					
ANR	5204915	PrimaryExpression	"""free temporary filename string"""		5204816	0					
ANR	5204916	ReturnStatement	return gs_note_error ( gs_error_invalidaccess ) ;	153:8:4811:4855	5204816	1	True				
ANR	5204917	CallExpression	gs_note_error ( gs_error_invalidaccess )		5204816	0					
ANR	5204918	Callee	gs_note_error		5204816	0					
ANR	5204919	Identifier	gs_note_error		5204816	0					
ANR	5204920	ArgumentList	gs_error_invalidaccess		5204816	1					
ANR	5204921	Argument	gs_error_invalidaccess		5204816	0					
ANR	5204922	Identifier	gs_error_invalidaccess		5204816	0					
ANR	5204923	ExpressionStatement	fs = GETRAMFS ( iodev -> state )	155:4:4867:4894	5204816	11	True				
ANR	5204924	AssignmentExpression	fs = GETRAMFS ( iodev -> state )		5204816	0		=			
ANR	5204925	Identifier	fs		5204816	0					
ANR	5204926	CallExpression	GETRAMFS ( iodev -> state )		5204816	1					
ANR	5204927	Callee	GETRAMFS		5204816	0					
ANR	5204928	Identifier	GETRAMFS		5204816	0					
ANR	5204929	ArgumentList	iodev -> state		5204816	1					
ANR	5204930	Argument	iodev -> state		5204816	0					
ANR	5204931	PtrMemberAccess	iodev -> state		5204816	0					
ANR	5204932	Identifier	iodev		5204816	0					
ANR	5204933	Identifier	state		5204816	1					
ANR	5204934	ExpressionStatement	"code = file_prepare_stream ( fname , len , file_access , DEFAULT_BUFFER_SIZE , ps , fmode , mem )"	156:4:4900:4997	5204816	12	True				
ANR	5204935	AssignmentExpression	"code = file_prepare_stream ( fname , len , file_access , DEFAULT_BUFFER_SIZE , ps , fmode , mem )"		5204816	0		=			
ANR	5204936	Identifier	code		5204816	0					
ANR	5204937	CallExpression	"file_prepare_stream ( fname , len , file_access , DEFAULT_BUFFER_SIZE , ps , fmode , mem )"		5204816	1					
ANR	5204938	Callee	file_prepare_stream		5204816	0					
ANR	5204939	Identifier	file_prepare_stream		5204816	0					
ANR	5204940	ArgumentList	fname		5204816	1					
ANR	5204941	Argument	fname		5204816	0					
ANR	5204942	Identifier	fname		5204816	0					
ANR	5204943	Argument	len		5204816	1					
ANR	5204944	Identifier	len		5204816	0					
ANR	5204945	Argument	file_access		5204816	2					
ANR	5204946	Identifier	file_access		5204816	0					
ANR	5204947	Argument	DEFAULT_BUFFER_SIZE		5204816	3					
ANR	5204948	Identifier	DEFAULT_BUFFER_SIZE		5204816	0					
ANR	5204949	Argument	ps		5204816	4					
ANR	5204950	Identifier	ps		5204816	0					
ANR	5204951	Argument	fmode		5204816	5					
ANR	5204952	Identifier	fmode		5204816	0					
ANR	5204953	Argument	mem		5204816	6					
ANR	5204954	Identifier	mem		5204816	0					
ANR	5204955	IfStatement	if ( code < 0 )		5204816	13					
ANR	5204956	Condition	code < 0	159:8:5007:5014	5204816	0	True				
ANR	5204957	RelationalExpression	code < 0		5204816	0		<			
ANR	5204958	Identifier	code		5204816	0					
ANR	5204959	PrimaryExpression	0		5204816	1					
ANR	5204960	GotoStatement	goto error ;	159:18:5017:5027	5204816	1	True				
ANR	5204961	Identifier	error		5204816	0					
ANR	5204962	IfStatement	if ( fname == 0 )		5204816	14					
ANR	5204963	Condition	fname == 0	160:8:5037:5046	5204816	0	True				
ANR	5204964	EqualityExpression	fname == 0		5204816	0		==			
ANR	5204965	Identifier	fname		5204816	0					
ANR	5204966	PrimaryExpression	0		5204816	1					
ANR	5204967	CompoundStatement		25:20:769:769	5204816	1					
ANR	5204968	ExpressionStatement	"gs_free_object ( mem , namestr , ""free temporary filename string"" )"	161:8:5059:5121	5204816	0	True				
ANR	5204969	CallExpression	"gs_free_object ( mem , namestr , ""free temporary filename string"" )"		5204816	0					
ANR	5204970	Callee	gs_free_object		5204816	0					
ANR	5204971	Identifier	gs_free_object		5204816	0					
ANR	5204972	ArgumentList	mem		5204816	1					
ANR	5204973	Argument	mem		5204816	0					
ANR	5204974	Identifier	mem		5204816	0					
ANR	5204975	Argument	namestr		5204816	1					
ANR	5204976	Identifier	namestr		5204816	0					
ANR	5204977	Argument	"""free temporary filename string"""		5204816	2					
ANR	5204978	PrimaryExpression	"""free temporary filename string"""		5204816	0					
ANR	5204979	ReturnStatement	return 0 ;	162:8:5131:5139	5204816	1	True				
ANR	5204980	PrimaryExpression	0		5204816	0					
ANR	5204981	SwitchStatement	switch ( fmode [ 0 ] )		5204816	15					
ANR	5204982	Condition	fmode [ 0 ]	165:12:5160:5167	5204816	0	True				
ANR	5204983	ArrayIndexing	fmode [ 0 ]		5204816	0					
ANR	5204984	Identifier	fmode		5204816	0					
ANR	5204985	PrimaryExpression	0		5204816	1					
ANR	5204986	CompoundStatement		30:22:890:890	5204816	1					
ANR	5204987	Label	case 'a' :	166:8:5180:5188	5204816	0	True				
ANR	5204988	ExpressionStatement	openmode = RAMFS_WRITE | RAMFS_APPEND	167:10:5200:5237	5204816	1	True				
ANR	5204989	AssignmentExpression	openmode = RAMFS_WRITE | RAMFS_APPEND		5204816	0		=			
ANR	5204990	Identifier	openmode		5204816	0					
ANR	5204991	InclusiveOrExpression	RAMFS_WRITE | RAMFS_APPEND		5204816	1		|			
ANR	5204992	Identifier	RAMFS_WRITE		5204816	0					
ANR	5204993	Identifier	RAMFS_APPEND		5204816	1					
ANR	5204994	BreakStatement	break ;	168:10:5249:5254	5204816	2	True				
ANR	5204995	Label	case 'r' :	169:8:5264:5272	5204816	3	True				
ANR	5204996	ExpressionStatement	openmode = RAMFS_READ	170:10:5284:5305	5204816	4	True				
ANR	5204997	AssignmentExpression	openmode = RAMFS_READ		5204816	0		=			
ANR	5204998	Identifier	openmode		5204816	0					
ANR	5204999	Identifier	RAMFS_READ		5204816	1					
ANR	5205000	IfStatement	if ( fmode [ 1 ] == '+' )		5204816	5					
ANR	5205001	Condition	fmode [ 1 ] == '+'	171:14:5321:5335	5204816	0	True				
ANR	5205002	EqualityExpression	fmode [ 1 ] == '+'		5204816	0		==			
ANR	5205003	ArrayIndexing	fmode [ 1 ]		5204816	0					
ANR	5205004	Identifier	fmode		5204816	0					
ANR	5205005	PrimaryExpression	1		5204816	1					
ANR	5205006	PrimaryExpression	'+'		5204816	1					
ANR	5205007	ExpressionStatement	openmode |= RAMFS_WRITE	172:12:5350:5373	5204816	1	True				
ANR	5205008	AssignmentExpression	openmode |= RAMFS_WRITE		5204816	0		|=			
ANR	5205009	Identifier	openmode		5204816	0					
ANR	5205010	Identifier	RAMFS_WRITE		5204816	1					
ANR	5205011	BreakStatement	break ;	173:10:5385:5390	5204816	6	True				
ANR	5205012	Label	case 'w' :	174:8:5400:5408	5204816	7	True				
ANR	5205013	ExpressionStatement	openmode |= RAMFS_WRITE | RAMFS_TRUNC | RAMFS_CREATE	175:10:5420:5472	5204816	8	True				
ANR	5205014	AssignmentExpression	openmode |= RAMFS_WRITE | RAMFS_TRUNC | RAMFS_CREATE		5204816	0		|=			
ANR	5205015	Identifier	openmode		5204816	0					
ANR	5205016	InclusiveOrExpression	RAMFS_WRITE | RAMFS_TRUNC | RAMFS_CREATE		5204816	1		|			
ANR	5205017	Identifier	RAMFS_WRITE		5204816	0					
ANR	5205018	InclusiveOrExpression	RAMFS_TRUNC | RAMFS_CREATE		5204816	1		|			
ANR	5205019	Identifier	RAMFS_TRUNC		5204816	0					
ANR	5205020	Identifier	RAMFS_CREATE		5204816	1					
ANR	5205021	IfStatement	if ( fmode [ 1 ] == '+' )		5204816	9					
ANR	5205022	Condition	fmode [ 1 ] == '+'	176:14:5488:5502	5204816	0	True				
ANR	5205023	EqualityExpression	fmode [ 1 ] == '+'		5204816	0		==			
ANR	5205024	ArrayIndexing	fmode [ 1 ]		5204816	0					
ANR	5205025	Identifier	fmode		5204816	0					
ANR	5205026	PrimaryExpression	1		5204816	1					
ANR	5205027	PrimaryExpression	'+'		5204816	1					
ANR	5205028	ExpressionStatement	openmode |= RAMFS_READ	177:13:5518:5540	5204816	1	True				
ANR	5205029	AssignmentExpression	openmode |= RAMFS_READ		5204816	0		|=			
ANR	5205030	Identifier	openmode		5204816	0					
ANR	5205031	Identifier	RAMFS_READ		5204816	1					
ANR	5205032	ExpressionStatement	"file = ramfs_open ( mem , fs , namestr , openmode )"	186:4:5911:5954	5204816	16	True				
ANR	5205033	AssignmentExpression	"file = ramfs_open ( mem , fs , namestr , openmode )"		5204816	0		=			
ANR	5205034	Identifier	file		5204816	0					
ANR	5205035	CallExpression	"ramfs_open ( mem , fs , namestr , openmode )"		5204816	1					
ANR	5205036	Callee	ramfs_open		5204816	0					
ANR	5205037	Identifier	ramfs_open		5204816	0					
ANR	5205038	ArgumentList	mem		5204816	1					
ANR	5205039	Argument	mem		5204816	0					
ANR	5205040	Identifier	mem		5204816	0					
ANR	5205041	Argument	fs		5204816	1					
ANR	5205042	Identifier	fs		5204816	0					
ANR	5205043	Argument	namestr		5204816	2					
ANR	5205044	Identifier	namestr		5204816	0					
ANR	5205045	Argument	openmode		5204816	3					
ANR	5205046	Identifier	openmode		5204816	0					
ANR	5205047	IfStatement	if ( ! file )		5204816	17					
ANR	5205048	Condition	! file	187:7:5963:5967	5204816	0	True				
ANR	5205049	UnaryOperationExpression	! file		5204816	0					
ANR	5205050	UnaryOperator	!		5204816	0					
ANR	5205051	Identifier	file		5204816	1					
ANR	5205052	CompoundStatement		52:14:1690:1690	5204816	1					
ANR	5205053	ExpressionStatement	code = ramfs_errno_to_code ( ramfs_error ( fs ) )	187:16:5972:6015	5204816	0	True				
ANR	5205054	AssignmentExpression	code = ramfs_errno_to_code ( ramfs_error ( fs ) )		5204816	0		=			
ANR	5205055	Identifier	code		5204816	0					
ANR	5205056	CallExpression	ramfs_errno_to_code ( ramfs_error ( fs ) )		5204816	1					
ANR	5205057	Callee	ramfs_errno_to_code		5204816	0					
ANR	5205058	Identifier	ramfs_errno_to_code		5204816	0					
ANR	5205059	ArgumentList	ramfs_error ( fs )		5204816	1					
ANR	5205060	Argument	ramfs_error ( fs )		5204816	0					
ANR	5205061	CallExpression	ramfs_error ( fs )		5204816	0					
ANR	5205062	Callee	ramfs_error		5204816	0					
ANR	5205063	Identifier	ramfs_error		5204816	0					
ANR	5205064	ArgumentList	fs		5204816	1					
ANR	5205065	Argument	fs		5204816	0					
ANR	5205066	Identifier	fs		5204816	0					
ANR	5205067	GotoStatement	goto error ;	187:61:6017:6027	5204816	1	True				
ANR	5205068	Identifier	error		5204816	0					
ANR	5205069	SwitchStatement	switch ( fmode [ 0 ] )		5204816	18					
ANR	5205070	Condition	fmode [ 0 ]	189:12:6044:6051	5204816	0	True				
ANR	5205071	ArrayIndexing	fmode [ 0 ]		5204816	0					
ANR	5205072	Identifier	fmode		5204816	0					
ANR	5205073	PrimaryExpression	0		5204816	1					
ANR	5205074	CompoundStatement		54:22:1774:1774	5204816	1					
ANR	5205075	Label	case 'a' :	190:4:6060:6068	5204816	0	True				
ANR	5205076	ExpressionStatement	"sappend_ram ( * ps , file , ( * ps ) -> cbuf , ( * ps ) -> bsize )"	191:4:6074:6123	5204816	1	True				
ANR	5205077	CallExpression	"sappend_ram ( * ps , file , ( * ps ) -> cbuf , ( * ps ) -> bsize )"		5204816	0					
ANR	5205078	Callee	sappend_ram		5204816	0					
ANR	5205079	Identifier	sappend_ram		5204816	0					
ANR	5205080	ArgumentList	* ps		5204816	1					
ANR	5205081	Argument	* ps		5204816	0					
ANR	5205082	UnaryOperationExpression	* ps		5204816	0					
ANR	5205083	UnaryOperator	*		5204816	0					
ANR	5205084	Identifier	ps		5204816	1					
ANR	5205085	Argument	file		5204816	1					
ANR	5205086	Identifier	file		5204816	0					
ANR	5205087	Argument	( * ps ) -> cbuf		5204816	2					
ANR	5205088	PtrMemberAccess	( * ps ) -> cbuf		5204816	0					
ANR	5205089	UnaryOperationExpression	* ps		5204816	0					
ANR	5205090	UnaryOperator	*		5204816	0					
ANR	5205091	Identifier	ps		5204816	1					
ANR	5205092	Identifier	cbuf		5204816	1					
ANR	5205093	Argument	( * ps ) -> bsize		5204816	3					
ANR	5205094	PtrMemberAccess	( * ps ) -> bsize		5204816	0					
ANR	5205095	UnaryOperationExpression	* ps		5204816	0					
ANR	5205096	UnaryOperator	*		5204816	0					
ANR	5205097	Identifier	ps		5204816	1					
ANR	5205098	Identifier	bsize		5204816	1					
ANR	5205099	BreakStatement	break ;	192:4:6129:6134	5204816	2	True				
ANR	5205100	Label	case 'r' :	193:4:6140:6148	5204816	3	True				
ANR	5205101	ExpressionStatement	"sread_ram ( * ps , file , ( * ps ) -> cbuf , ( * ps ) -> bsize )"	194:4:6154:6201	5204816	4	True				
ANR	5205102	CallExpression	"sread_ram ( * ps , file , ( * ps ) -> cbuf , ( * ps ) -> bsize )"		5204816	0					
ANR	5205103	Callee	sread_ram		5204816	0					
ANR	5205104	Identifier	sread_ram		5204816	0					
ANR	5205105	ArgumentList	* ps		5204816	1					
ANR	5205106	Argument	* ps		5204816	0					
ANR	5205107	UnaryOperationExpression	* ps		5204816	0					
ANR	5205108	UnaryOperator	*		5204816	0					
ANR	5205109	Identifier	ps		5204816	1					
ANR	5205110	Argument	file		5204816	1					
ANR	5205111	Identifier	file		5204816	0					
ANR	5205112	Argument	( * ps ) -> cbuf		5204816	2					
ANR	5205113	PtrMemberAccess	( * ps ) -> cbuf		5204816	0					
ANR	5205114	UnaryOperationExpression	* ps		5204816	0					
ANR	5205115	UnaryOperator	*		5204816	0					
ANR	5205116	Identifier	ps		5204816	1					
ANR	5205117	Identifier	cbuf		5204816	1					
ANR	5205118	Argument	( * ps ) -> bsize		5204816	3					
ANR	5205119	PtrMemberAccess	( * ps ) -> bsize		5204816	0					
ANR	5205120	UnaryOperationExpression	* ps		5204816	0					
ANR	5205121	UnaryOperator	*		5204816	0					
ANR	5205122	Identifier	ps		5204816	1					
ANR	5205123	Identifier	bsize		5204816	1					
ANR	5205124	BreakStatement	break ;	195:4:6207:6212	5204816	5	True				
ANR	5205125	Label	case 'w' :	196:4:6218:6226	5204816	6	True				
ANR	5205126	ExpressionStatement	"swrite_ram ( * ps , file , ( * ps ) -> cbuf , ( * ps ) -> bsize )"	197:4:6232:6280	5204816	7	True				
ANR	5205127	CallExpression	"swrite_ram ( * ps , file , ( * ps ) -> cbuf , ( * ps ) -> bsize )"		5204816	0					
ANR	5205128	Callee	swrite_ram		5204816	0					
ANR	5205129	Identifier	swrite_ram		5204816	0					
ANR	5205130	ArgumentList	* ps		5204816	1					
ANR	5205131	Argument	* ps		5204816	0					
ANR	5205132	UnaryOperationExpression	* ps		5204816	0					
ANR	5205133	UnaryOperator	*		5204816	0					
ANR	5205134	Identifier	ps		5204816	1					
ANR	5205135	Argument	file		5204816	1					
ANR	5205136	Identifier	file		5204816	0					
ANR	5205137	Argument	( * ps ) -> cbuf		5204816	2					
ANR	5205138	PtrMemberAccess	( * ps ) -> cbuf		5204816	0					
ANR	5205139	UnaryOperationExpression	* ps		5204816	0					
ANR	5205140	UnaryOperator	*		5204816	0					
ANR	5205141	Identifier	ps		5204816	1					
ANR	5205142	Identifier	cbuf		5204816	1					
ANR	5205143	Argument	( * ps ) -> bsize		5204816	3					
ANR	5205144	PtrMemberAccess	( * ps ) -> bsize		5204816	0					
ANR	5205145	UnaryOperationExpression	* ps		5204816	0					
ANR	5205146	UnaryOperator	*		5204816	0					
ANR	5205147	Identifier	ps		5204816	1					
ANR	5205148	Identifier	bsize		5204816	1					
ANR	5205149	IfStatement	if ( fmode [ 1 ] == '+' )		5204816	19					
ANR	5205150	Condition	fmode [ 1 ] == '+'	199:8:6296:6310	5204816	0	True				
ANR	5205151	EqualityExpression	fmode [ 1 ] == '+'		5204816	0		==			
ANR	5205152	ArrayIndexing	fmode [ 1 ]		5204816	0					
ANR	5205153	Identifier	fmode		5204816	0					
ANR	5205154	PrimaryExpression	1		5204816	1					
ANR	5205155	PrimaryExpression	'+'		5204816	1					
ANR	5205156	CompoundStatement		64:25:2033:2033	5204816	1					
ANR	5205157	ExpressionStatement	( * ps ) -> modes = ( * ps ) -> file_modes |= s_mode_read | s_mode_write	200:6:6321:6383	5204816	0	True				
ANR	5205158	AssignmentExpression	( * ps ) -> modes = ( * ps ) -> file_modes |= s_mode_read | s_mode_write		5204816	0		=			
ANR	5205159	PtrMemberAccess	( * ps ) -> modes		5204816	0					
ANR	5205160	UnaryOperationExpression	* ps		5204816	0					
ANR	5205161	UnaryOperator	*		5204816	0					
ANR	5205162	Identifier	ps		5204816	1					
ANR	5205163	Identifier	modes		5204816	1					
ANR	5205164	AssignmentExpression	( * ps ) -> file_modes |= s_mode_read | s_mode_write		5204816	1		|=			
ANR	5205165	PtrMemberAccess	( * ps ) -> file_modes		5204816	0					
ANR	5205166	UnaryOperationExpression	* ps		5204816	0					
ANR	5205167	UnaryOperator	*		5204816	0					
ANR	5205168	Identifier	ps		5204816	1					
ANR	5205169	Identifier	file_modes		5204816	1					
ANR	5205170	InclusiveOrExpression	s_mode_read | s_mode_write		5204816	1		|			
ANR	5205171	Identifier	s_mode_read		5204816	0					
ANR	5205172	Identifier	s_mode_write		5204816	1					
ANR	5205173	ExpressionStatement	( * ps ) -> save_close = ( * ps ) -> procs . close	202:4:6395:6433	5204816	20	True				
ANR	5205174	AssignmentExpression	( * ps ) -> save_close = ( * ps ) -> procs . close		5204816	0		=			
ANR	5205175	PtrMemberAccess	( * ps ) -> save_close		5204816	0					
ANR	5205176	UnaryOperationExpression	* ps		5204816	0					
ANR	5205177	UnaryOperator	*		5204816	0					
ANR	5205178	Identifier	ps		5204816	1					
ANR	5205179	Identifier	save_close		5204816	1					
ANR	5205180	MemberAccess	( * ps ) -> procs . close		5204816	1					
ANR	5205181	PtrMemberAccess	( * ps ) -> procs		5204816	0					
ANR	5205182	UnaryOperationExpression	* ps		5204816	0					
ANR	5205183	UnaryOperator	*		5204816	0					
ANR	5205184	Identifier	ps		5204816	1					
ANR	5205185	Identifier	procs		5204816	1					
ANR	5205186	Identifier	close		5204816	1					
ANR	5205187	ExpressionStatement	( * ps ) -> procs . close = file_close_file	203:4:6439:6475	5204816	21	True				
ANR	5205188	AssignmentExpression	( * ps ) -> procs . close = file_close_file		5204816	0		=			
ANR	5205189	MemberAccess	( * ps ) -> procs . close		5204816	0					
ANR	5205190	PtrMemberAccess	( * ps ) -> procs		5204816	0					
ANR	5205191	UnaryOperationExpression	* ps		5204816	0					
ANR	5205192	UnaryOperator	*		5204816	0					
ANR	5205193	Identifier	ps		5204816	1					
ANR	5205194	Identifier	procs		5204816	1					
ANR	5205195	Identifier	close		5204816	1					
ANR	5205196	Identifier	file_close_file		5204816	1					
ANR	5205197	Label	error :	204:1:6478:6483	5204816	22	True				
ANR	5205198	Identifier	error		5204816	0					
ANR	5205199	ExpressionStatement	"gs_free_object ( mem , namestr , ""free temporary filename string"" )"	205:4:6489:6551	5204816	23	True				
ANR	5205200	CallExpression	"gs_free_object ( mem , namestr , ""free temporary filename string"" )"		5204816	0					
ANR	5205201	Callee	gs_free_object		5204816	0					
ANR	5205202	Identifier	gs_free_object		5204816	0					
ANR	5205203	ArgumentList	mem		5204816	1					
ANR	5205204	Argument	mem		5204816	0					
ANR	5205205	Identifier	mem		5204816	0					
ANR	5205206	Argument	namestr		5204816	1					
ANR	5205207	Identifier	namestr		5204816	0					
ANR	5205208	Argument	"""free temporary filename string"""		5204816	2					
ANR	5205209	PrimaryExpression	"""free temporary filename string"""		5204816	0					
ANR	5205210	ReturnStatement	return code ;	207:4:6590:6601	5204816	24	True				
ANR	5205211	Identifier	code		5204816	0					
ANR	5205212	ReturnType	static int		5204816	1					
ANR	5205213	Identifier	ram_open_file		5204816	2					
ANR	5205214	ParameterList	"gx_io_device * iodev , const char * fname , uint len , const char * file_access , stream * * ps , gs_memory_t * mem"		5204816	3					
ANR	5205215	Parameter	gx_io_device * iodev	134:14:4166:4185	5204816	0	True				
ANR	5205216	ParameterType	gx_io_device *		5204816	0					
ANR	5205217	Identifier	iodev		5204816	1					
ANR	5205218	Parameter	const char * fname	134:36:4188:4204	5204816	1	True				
ANR	5205219	ParameterType	const char *		5204816	0					
ANR	5205220	Identifier	fname		5204816	1					
ANR	5205221	Parameter	uint len	134:55:4207:4214	5204816	2	True				
ANR	5205222	ParameterType	uint		5204816	0					
ANR	5205223	Identifier	len		5204816	1					
ANR	5205224	Parameter	const char * file_access	135:4:4221:4243	5204816	3	True				
ANR	5205225	ParameterType	const char *		5204816	0					
ANR	5205226	Identifier	file_access		5204816	1					
ANR	5205227	Parameter	stream * * ps	135:29:4246:4257	5204816	4	True				
ANR	5205228	ParameterType	stream * *		5204816	0					
ANR	5205229	Identifier	ps		5204816	1					
ANR	5205230	Parameter	gs_memory_t * mem	135:43:4260:4276	5204816	5	True				
ANR	5205231	ParameterType	gs_memory_t *		5204816	0					
ANR	5205232	Identifier	mem		5204816	1					
ANR	5205233	CFGEntryNode	ENTRY		5204816		True				
ANR	5205234	CFGExitNode	EXIT		5204816		True				
ANR	5205235	Symbol	ps		5204816						
ANR	5205236	Symbol	code		5204816						
ANR	5205237	Symbol	ramfs_errno_to_code		5204816						
ANR	5205238	Symbol	( * ps ) -> bsize		5204816						
ANR	5205239	Symbol	s_mode_write		5204816						
ANR	5205240	Symbol	RAMFS_WRITE		5204816						
ANR	5205241	Symbol	( * ps ) -> modes		5204816						
ANR	5205242	Symbol	file_access		5204816						
ANR	5205243	Symbol	( * ps ) -> procs		5204816						
ANR	5205244	Symbol	fs		5204816						
ANR	5205245	Symbol	RAMFS_TRUNC		5204816						
ANR	5205246	Symbol	file_prepare_stream		5204816						
ANR	5205247	Symbol	RAMFS_READ		5204816						
ANR	5205248	Symbol	file		5204816						
ANR	5205249	Symbol	* namestr		5204816						
ANR	5205250	Symbol	iodev		5204816						
ANR	5205251	Symbol	len		5204816						
ANR	5205252	Symbol	mem		5204816						
ANR	5205253	Symbol	( * ps ) -> save_close		5204816						
ANR	5205254	Symbol	fmode		5204816						
ANR	5205255	Symbol	openmode		5204816						
ANR	5205256	Symbol	gs_error_invalidaccess		5204816						
ANR	5205257	Symbol	s_mode_read		5204816						
ANR	5205258	Symbol	RAMFS_CREATE		5204816						
ANR	5205259	Symbol	ramfs_error		5204816						
ANR	5205260	Symbol	fname		5204816						
ANR	5205261	Symbol	RAMFS_APPEND		5204816						
ANR	5205262	Symbol	gs_alloc_bytes		5204816						
ANR	5205263	Symbol	* fmode		5204816						
ANR	5205264	Symbol	NULL		5204816						
ANR	5205265	Symbol	( * ps ) -> file_modes		5204816						
ANR	5205266	Symbol	( * ps ) -> procs . close		5204816						
ANR	5205267	Symbol	namestr		5204816						
ANR	5205268	Symbol	* iodev		5204816						
ANR	5205269	Symbol	DEFAULT_BUFFER_SIZE		5204816						
ANR	5205270	Symbol	( * ps ) -> cbuf		5204816						
ANR	5205271	Symbol	* ps		5204816						
ANR	5205272	Symbol	* * ps		5204816						
ANR	5205273	Symbol	GETRAMFS		5204816						
ANR	5205274	Symbol	gs_error_VMerror		5204816						
ANR	5205275	Symbol	gs_note_error		5204816						
ANR	5205276	Symbol	ramfs_open		5204816						
ANR	5205277	Symbol	iodev -> state		5204816						
ANR	5205278	Symbol	file_close_file		5204816						
ANR	5205279	Symbol	* len		5204816						
ANR	5205280	Function	sread_ram	211:0:6656:7184							
ANR	5205281	FunctionDef	"sread_ram (register stream * s , ramhandle * file , byte * buf , uint len)"		5205280	0					
ANR	5205282	CompoundStatement		213:0:6739:7184	5205280	0					
ANR	5205283	Statement	static	214:4:6745:6750	5205280	0	True				
ANR	5205284	IdentifierDeclStatement	"const stream_procs p = { s_ram_available , s_ram_read_seek , s_std_read_reset , s_std_read_flush , s_ram_read_close , s_ram_read_process , s_ram_switch } ;"	214:11:6752:6915	5205280	1	True				
ANR	5205285	IdentifierDecl	"p = { s_ram_available , s_ram_read_seek , s_std_read_reset , s_std_read_flush , s_ram_read_close , s_ram_read_process , s_ram_switch }"		5205280	0					
ANR	5205286	IdentifierDeclType	const stream_procs		5205280	0					
ANR	5205287	Identifier	p		5205280	1					
ANR	5205288	AssignmentExpression	"p = { s_ram_available , s_ram_read_seek , s_std_read_reset , s_std_read_flush , s_ram_read_close , s_ram_read_process , s_ram_switch }"		5205280	2		=			
ANR	5205289	Identifier	p		5205280	0					
ANR	5205290	InitializerList	s_ram_available		5205280	1					
ANR	5205291	Identifier	s_ram_available		5205280	0					
ANR	5205292	Identifier	s_ram_read_seek		5205280	1					
ANR	5205293	Identifier	s_std_read_reset		5205280	2					
ANR	5205294	Identifier	s_std_read_flush		5205280	3					
ANR	5205295	Identifier	s_ram_read_close		5205280	4					
ANR	5205296	Identifier	s_ram_read_process		5205280	5					
ANR	5205297	Identifier	s_ram_switch		5205280	6					
ANR	5205298	ExpressionStatement	"s_std_init ( s , buf , len , & p , s_mode_read + s_mode_seek )"	220:4:6922:6975	5205280	2	True				
ANR	5205299	CallExpression	"s_std_init ( s , buf , len , & p , s_mode_read + s_mode_seek )"		5205280	0					
ANR	5205300	Callee	s_std_init		5205280	0					
ANR	5205301	Identifier	s_std_init		5205280	0					
ANR	5205302	ArgumentList	s		5205280	1					
ANR	5205303	Argument	s		5205280	0					
ANR	5205304	Identifier	s		5205280	0					
ANR	5205305	Argument	buf		5205280	1					
ANR	5205306	Identifier	buf		5205280	0					
ANR	5205307	Argument	len		5205280	2					
ANR	5205308	Identifier	len		5205280	0					
ANR	5205309	Argument	& p		5205280	3					
ANR	5205310	UnaryOperationExpression	& p		5205280	0					
ANR	5205311	UnaryOperator	&		5205280	0					
ANR	5205312	Identifier	p		5205280	1					
ANR	5205313	Argument	s_mode_read + s_mode_seek		5205280	4					
ANR	5205314	AdditiveExpression	s_mode_read + s_mode_seek		5205280	0		+			
ANR	5205315	Identifier	s_mode_read		5205280	0					
ANR	5205316	Identifier	s_mode_seek		5205280	1					
ANR	5205317	ExpressionStatement	s -> file = ( FILE * ) file	221:4:6981:7002	5205280	3	True				
ANR	5205318	AssignmentExpression	s -> file = ( FILE * ) file		5205280	0		=			
ANR	5205319	PtrMemberAccess	s -> file		5205280	0					
ANR	5205320	Identifier	s		5205280	0					
ANR	5205321	Identifier	file		5205280	1					
ANR	5205322	CastExpression	( FILE * ) file		5205280	1					
ANR	5205323	CastTarget	FILE *		5205280	0					
ANR	5205324	Identifier	file		5205280	1					
ANR	5205325	ExpressionStatement	s -> file_modes = s -> modes	222:4:7008:7032	5205280	4	True				
ANR	5205326	AssignmentExpression	s -> file_modes = s -> modes		5205280	0		=			
ANR	5205327	PtrMemberAccess	s -> file_modes		5205280	0					
ANR	5205328	Identifier	s		5205280	0					
ANR	5205329	Identifier	file_modes		5205280	1					
ANR	5205330	PtrMemberAccess	s -> modes		5205280	1					
ANR	5205331	Identifier	s		5205280	0					
ANR	5205332	Identifier	modes		5205280	1					
ANR	5205333	ExpressionStatement	s -> file_offset = 0	223:4:7038:7056	5205280	5	True				
ANR	5205334	AssignmentExpression	s -> file_offset = 0		5205280	0		=			
ANR	5205335	PtrMemberAccess	s -> file_offset		5205280	0					
ANR	5205336	Identifier	s		5205280	0					
ANR	5205337	Identifier	file_offset		5205280	1					
ANR	5205338	PrimaryExpression	0		5205280	1					
ANR	5205339	ExpressionStatement	"ramfile_seek ( file , 0 , RAMFS_SEEK_END )"	224:4:7062:7099	5205280	6	True				
ANR	5205340	CallExpression	"ramfile_seek ( file , 0 , RAMFS_SEEK_END )"		5205280	0					
ANR	5205341	Callee	ramfile_seek		5205280	0					
ANR	5205342	Identifier	ramfile_seek		5205280	0					
ANR	5205343	ArgumentList	file		5205280	1					
ANR	5205344	Argument	file		5205280	0					
ANR	5205345	Identifier	file		5205280	0					
ANR	5205346	Argument	0		5205280	1					
ANR	5205347	PrimaryExpression	0		5205280	0					
ANR	5205348	Argument	RAMFS_SEEK_END		5205280	2					
ANR	5205349	Identifier	RAMFS_SEEK_END		5205280	0					
ANR	5205350	ExpressionStatement	s -> file_limit = ramfile_tell ( file )	225:4:7105:7139	5205280	7	True				
ANR	5205351	AssignmentExpression	s -> file_limit = ramfile_tell ( file )		5205280	0		=			
ANR	5205352	PtrMemberAccess	s -> file_limit		5205280	0					
ANR	5205353	Identifier	s		5205280	0					
ANR	5205354	Identifier	file_limit		5205280	1					
ANR	5205355	CallExpression	ramfile_tell ( file )		5205280	1					
ANR	5205356	Callee	ramfile_tell		5205280	0					
ANR	5205357	Identifier	ramfile_tell		5205280	0					
ANR	5205358	ArgumentList	file		5205280	1					
ANR	5205359	Argument	file		5205280	0					
ANR	5205360	Identifier	file		5205280	0					
ANR	5205361	ExpressionStatement	"ramfile_seek ( file , 0 , RAMFS_SEEK_SET )"	226:4:7145:7182	5205280	8	True				
ANR	5205362	CallExpression	"ramfile_seek ( file , 0 , RAMFS_SEEK_SET )"		5205280	0					
ANR	5205363	Callee	ramfile_seek		5205280	0					
ANR	5205364	Identifier	ramfile_seek		5205280	0					
ANR	5205365	ArgumentList	file		5205280	1					
ANR	5205366	Argument	file		5205280	0					
ANR	5205367	Identifier	file		5205280	0					
ANR	5205368	Argument	0		5205280	1					
ANR	5205369	PrimaryExpression	0		5205280	0					
ANR	5205370	Argument	RAMFS_SEEK_SET		5205280	2					
ANR	5205371	Identifier	RAMFS_SEEK_SET		5205280	0					
ANR	5205372	ReturnType	static void		5205280	1					
ANR	5205373	Identifier	sread_ram		5205280	2					
ANR	5205374	ParameterList	"register stream * s , ramhandle * file , byte * buf , uint len"		5205280	3					
ANR	5205375	Parameter	register stream * s	212:10:6678:6696	5205280	0	True				
ANR	5205376	ParameterType	register stream *		5205280	0					
ANR	5205377	Identifier	s		5205280	1					
ANR	5205378	Parameter	ramhandle * file	212:31:6699:6714	5205280	1	True				
ANR	5205379	ParameterType	ramhandle *		5205280	0					
ANR	5205380	Identifier	file		5205280	1					
ANR	5205381	Parameter	byte * buf	212:49:6717:6726	5205280	2	True				
ANR	5205382	ParameterType	byte *		5205280	0					
ANR	5205383	Identifier	buf		5205280	1					
ANR	5205384	Parameter	uint len	212:61:6729:6736	5205280	3	True				
ANR	5205385	ParameterType	uint		5205280	0					
ANR	5205386	Identifier	len		5205280	1					
ANR	5205387	CFGEntryNode	ENTRY		5205280		True				
ANR	5205388	CFGExitNode	EXIT		5205280		True				
ANR	5205389	Symbol	s -> file		5205280						
ANR	5205390	Symbol	ramfile_tell		5205280						
ANR	5205391	Symbol	s -> file_modes		5205280						
ANR	5205392	Symbol	s -> file_offset		5205280						
ANR	5205393	Symbol	s_ram_read_process		5205280						
ANR	5205394	Symbol	s_ram_read_close		5205280						
ANR	5205395	Symbol	s -> file_limit		5205280						
ANR	5205396	Symbol	p		5205280						
ANR	5205397	Symbol	s_std_read_reset		5205280						
ANR	5205398	Symbol	buf		5205280						
ANR	5205399	Symbol	s		5205280						
ANR	5205400	Symbol	file		5205280						
ANR	5205401	Symbol	len		5205280						
ANR	5205402	Symbol	s_mode_seek		5205280						
ANR	5205403	Symbol	s_ram_available		5205280						
ANR	5205404	Symbol	& p		5205280						
ANR	5205405	Symbol	s_ram_switch		5205280						
ANR	5205406	Symbol	RAMFS_SEEK_SET		5205280						
ANR	5205407	Symbol	s_std_read_flush		5205280						
ANR	5205408	Symbol	s_ram_read_seek		5205280						
ANR	5205409	Symbol	s_mode_read		5205280						
ANR	5205410	Symbol	* s		5205280						
ANR	5205411	Symbol	RAMFS_SEEK_END		5205280						
ANR	5205412	Symbol	s -> modes		5205280						
ANR	5205413	Function	s_ram_available	230:0:7228:7462							
ANR	5205414	FunctionDef	"s_ram_available (register stream * s , gs_offset_t * pl)"		5205413	0					
ANR	5205415	CompoundStatement		232:0:7293:7462	5205413	0					
ANR	5205416	IdentifierDeclStatement	long max_avail = s -> file_limit - stell ( s ) ;	233:4:7299:7340	5205413	0	True				
ANR	5205417	IdentifierDecl	max_avail = s -> file_limit - stell ( s )		5205413	0					
ANR	5205418	IdentifierDeclType	long		5205413	0					
ANR	5205419	Identifier	max_avail		5205413	1					
ANR	5205420	AssignmentExpression	max_avail = s -> file_limit - stell ( s )		5205413	2		=			
ANR	5205421	Identifier	max_avail		5205413	0					
ANR	5205422	AdditiveExpression	s -> file_limit - stell ( s )		5205413	1		-			
ANR	5205423	PtrMemberAccess	s -> file_limit		5205413	0					
ANR	5205424	Identifier	s		5205413	0					
ANR	5205425	Identifier	file_limit		5205413	1					
ANR	5205426	CallExpression	stell ( s )		5205413	1					
ANR	5205427	Callee	stell		5205413	0					
ANR	5205428	Identifier	stell		5205413	0					
ANR	5205429	ArgumentList	s		5205413	1					
ANR	5205430	Argument	s		5205413	0					
ANR	5205431	Identifier	s		5205413	0					
ANR	5205432	ExpressionStatement	* pl = max_avail	235:4:7347:7362	5205413	1	True				
ANR	5205433	AssignmentExpression	* pl = max_avail		5205413	0		=			
ANR	5205434	UnaryOperationExpression	* pl		5205413	0					
ANR	5205435	UnaryOperator	*		5205413	0					
ANR	5205436	Identifier	pl		5205413	1					
ANR	5205437	Identifier	max_avail		5205413	1					
ANR	5205438	IfStatement	if ( * pl == 0 && ramfile_eof ( ( ramhandle * ) s -> file ) )		5205413	2					
ANR	5205439	Condition	* pl == 0 && ramfile_eof ( ( ramhandle * ) s -> file )	236:7:7371:7414	5205413	0	True				
ANR	5205440	AndExpression	* pl == 0 && ramfile_eof ( ( ramhandle * ) s -> file )		5205413	0		&&			
ANR	5205441	EqualityExpression	* pl == 0		5205413	0		==			
ANR	5205442	UnaryOperationExpression	* pl		5205413	0					
ANR	5205443	UnaryOperator	*		5205413	0					
ANR	5205444	Identifier	pl		5205413	1					
ANR	5205445	PrimaryExpression	0		5205413	1					
ANR	5205446	CallExpression	ramfile_eof ( ( ramhandle * ) s -> file )		5205413	1					
ANR	5205447	Callee	ramfile_eof		5205413	0					
ANR	5205448	Identifier	ramfile_eof		5205413	0					
ANR	5205449	ArgumentList	( ramhandle * ) s -> file		5205413	1					
ANR	5205450	Argument	( ramhandle * ) s -> file		5205413	0					
ANR	5205451	CastExpression	( ramhandle * ) s -> file		5205413	0					
ANR	5205452	CastTarget	ramhandle *		5205413	0					
ANR	5205453	PtrMemberAccess	s -> file		5205413	1					
ANR	5205454	Identifier	s		5205413	0					
ANR	5205455	Identifier	file		5205413	1					
ANR	5205456	ExpressionStatement	* pl = - 1	237:4:7421:7429	5205413	1	True				
ANR	5205457	AssignmentExpression	* pl = - 1		5205413	0		=			
ANR	5205458	UnaryOperationExpression	* pl		5205413	0					
ANR	5205459	UnaryOperator	*		5205413	0					
ANR	5205460	Identifier	pl		5205413	1					
ANR	5205461	UnaryOperationExpression	- 1		5205413	1					
ANR	5205462	UnaryOperator	-		5205413	0					
ANR	5205463	PrimaryExpression	1		5205413	1					
ANR	5205464	ReturnStatement	return 0 ;	238:4:7452:7460	5205413	3	True				
ANR	5205465	PrimaryExpression	0		5205413	0					
ANR	5205466	ReturnType	static int		5205413	1					
ANR	5205467	Identifier	s_ram_available		5205413	2					
ANR	5205468	ParameterList	"register stream * s , gs_offset_t * pl"		5205413	3					
ANR	5205469	Parameter	register stream * s	231:16:7255:7273	5205413	0	True				
ANR	5205470	ParameterType	register stream *		5205413	0					
ANR	5205471	Identifier	s		5205413	1					
ANR	5205472	Parameter	gs_offset_t * pl	231:37:7276:7290	5205413	1	True				
ANR	5205473	ParameterType	gs_offset_t *		5205413	0					
ANR	5205474	Identifier	pl		5205413	1					
ANR	5205475	CFGEntryNode	ENTRY		5205413		True				
ANR	5205476	CFGExitNode	EXIT		5205413		True				
ANR	5205477	Symbol	* pl		5205413						
ANR	5205478	Symbol	s		5205413						
ANR	5205479	Symbol	s -> file		5205413						
ANR	5205480	Symbol	ramfile_eof		5205413						
ANR	5205481	Symbol	pl		5205413						
ANR	5205482	Symbol	s -> file_limit		5205413						
ANR	5205483	Symbol	* s		5205413						
ANR	5205484	Symbol	stell		5205413						
ANR	5205485	Symbol	max_avail		5205413						
ANR	5205486	Function	s_ram_read_seek	241:0:7465:7993							
ANR	5205487	FunctionDef	"s_ram_read_seek (register stream * s , gs_offset_t pos)"		5205486	0					
ANR	5205488	CompoundStatement		243:0:7530:7993	5205486	0					
ANR	5205489	IdentifierDeclStatement	uint end = s -> srlimit - s -> cbuf + 1 ;	244:4:7536:7571	5205486	0	True				
ANR	5205490	IdentifierDecl	end = s -> srlimit - s -> cbuf + 1		5205486	0					
ANR	5205491	IdentifierDeclType	uint		5205486	0					
ANR	5205492	Identifier	end		5205486	1					
ANR	5205493	AssignmentExpression	end = s -> srlimit - s -> cbuf + 1		5205486	2		=			
ANR	5205494	Identifier	end		5205486	0					
ANR	5205495	AdditiveExpression	s -> srlimit - s -> cbuf + 1		5205486	1		-			
ANR	5205496	PtrMemberAccess	s -> srlimit		5205486	0					
ANR	5205497	Identifier	s		5205486	0					
ANR	5205498	Identifier	srlimit		5205486	1					
ANR	5205499	AdditiveExpression	s -> cbuf + 1		5205486	1		+			
ANR	5205500	PtrMemberAccess	s -> cbuf		5205486	0					
ANR	5205501	Identifier	s		5205486	0					
ANR	5205502	Identifier	cbuf		5205486	1					
ANR	5205503	PrimaryExpression	1		5205486	1					
ANR	5205504	IdentifierDeclStatement	long offset = pos - s -> position ;	245:4:7577:7608	5205486	1	True				
ANR	5205505	IdentifierDecl	offset = pos - s -> position		5205486	0					
ANR	5205506	IdentifierDeclType	long		5205486	0					
ANR	5205507	Identifier	offset		5205486	1					
ANR	5205508	AssignmentExpression	offset = pos - s -> position		5205486	2		=			
ANR	5205509	Identifier	offset		5205486	0					
ANR	5205510	AdditiveExpression	pos - s -> position		5205486	1		-			
ANR	5205511	Identifier	pos		5205486	0					
ANR	5205512	PtrMemberAccess	s -> position		5205486	1					
ANR	5205513	Identifier	s		5205486	0					
ANR	5205514	Identifier	position		5205486	1					
ANR	5205515	IfStatement	if ( offset >= 0 && offset <= end )		5205486	2					
ANR	5205516	Condition	offset >= 0 && offset <= end	247:8:7619:7646	5205486	0	True				
ANR	5205517	AndExpression	offset >= 0 && offset <= end		5205486	0		&&			
ANR	5205518	RelationalExpression	offset >= 0		5205486	0		>=			
ANR	5205519	Identifier	offset		5205486	0					
ANR	5205520	PrimaryExpression	0		5205486	1					
ANR	5205521	RelationalExpression	offset <= end		5205486	1		<=			
ANR	5205522	Identifier	offset		5205486	0					
ANR	5205523	Identifier	end		5205486	1					
ANR	5205524	CompoundStatement		5:38:118:118	5205486	1					
ANR	5205525	ExpressionStatement	s -> srptr = s -> cbuf + offset - 1	248:4:7693:7724	5205486	0	True				
ANR	5205526	AssignmentExpression	s -> srptr = s -> cbuf + offset - 1		5205486	0		=			
ANR	5205527	PtrMemberAccess	s -> srptr		5205486	0					
ANR	5205528	Identifier	s		5205486	0					
ANR	5205529	Identifier	srptr		5205486	1					
ANR	5205530	AdditiveExpression	s -> cbuf + offset - 1		5205486	1		+			
ANR	5205531	PtrMemberAccess	s -> cbuf		5205486	0					
ANR	5205532	Identifier	s		5205486	0					
ANR	5205533	Identifier	cbuf		5205486	1					
ANR	5205534	AdditiveExpression	offset - 1		5205486	1		-			
ANR	5205535	Identifier	offset		5205486	0					
ANR	5205536	PrimaryExpression	1		5205486	1					
ANR	5205537	ReturnStatement	return 0 ;	249:4:7730:7738	5205486	1	True				
ANR	5205538	PrimaryExpression	0		5205486	0					
ANR	5205539	IfStatement	"if ( pos < 0 || pos > s -> file_limit || ramfile_seek ( ( ramhandle * ) s -> file , s -> file_offset + pos , RAMFS_SEEK_SET ) != 0 )"		5205486	3					
ANR	5205540	Condition	"pos < 0 || pos > s -> file_limit || ramfile_seek ( ( ramhandle * ) s -> file , s -> file_offset + pos , RAMFS_SEEK_SET ) != 0"	251:8:7754:7867	5205486	0	True				
ANR	5205541	OrExpression	"pos < 0 || pos > s -> file_limit || ramfile_seek ( ( ramhandle * ) s -> file , s -> file_offset + pos , RAMFS_SEEK_SET ) != 0"		5205486	0		||			
ANR	5205542	RelationalExpression	pos < 0		5205486	0		<			
ANR	5205543	Identifier	pos		5205486	0					
ANR	5205544	PrimaryExpression	0		5205486	1					
ANR	5205545	OrExpression	"pos > s -> file_limit || ramfile_seek ( ( ramhandle * ) s -> file , s -> file_offset + pos , RAMFS_SEEK_SET ) != 0"		5205486	1		||			
ANR	5205546	RelationalExpression	pos > s -> file_limit		5205486	0		>			
ANR	5205547	Identifier	pos		5205486	0					
ANR	5205548	PtrMemberAccess	s -> file_limit		5205486	1					
ANR	5205549	Identifier	s		5205486	0					
ANR	5205550	Identifier	file_limit		5205486	1					
ANR	5205551	EqualityExpression	"ramfile_seek ( ( ramhandle * ) s -> file , s -> file_offset + pos , RAMFS_SEEK_SET ) != 0"		5205486	1		!=			
ANR	5205552	CallExpression	"ramfile_seek ( ( ramhandle * ) s -> file , s -> file_offset + pos , RAMFS_SEEK_SET )"		5205486	0					
ANR	5205553	Callee	ramfile_seek		5205486	0					
ANR	5205554	Identifier	ramfile_seek		5205486	0					
ANR	5205555	ArgumentList	( ramhandle * ) s -> file		5205486	1					
ANR	5205556	Argument	( ramhandle * ) s -> file		5205486	0					
ANR	5205557	CastExpression	( ramhandle * ) s -> file		5205486	0					
ANR	5205558	CastTarget	ramhandle *		5205486	0					
ANR	5205559	PtrMemberAccess	s -> file		5205486	1					
ANR	5205560	Identifier	s		5205486	0					
ANR	5205561	Identifier	file		5205486	1					
ANR	5205562	Argument	s -> file_offset + pos		5205486	1					
ANR	5205563	AdditiveExpression	s -> file_offset + pos		5205486	0		+			
ANR	5205564	PtrMemberAccess	s -> file_offset		5205486	0					
ANR	5205565	Identifier	s		5205486	0					
ANR	5205566	Identifier	file_offset		5205486	1					
ANR	5205567	Identifier	pos		5205486	1					
ANR	5205568	Argument	RAMFS_SEEK_SET		5205486	2					
ANR	5205569	Identifier	RAMFS_SEEK_SET		5205486	0					
ANR	5205570	PrimaryExpression	0		5205486	1					
ANR	5205571	ReturnStatement	return ERRC ;	254:4:7879:7890	5205486	1	True				
ANR	5205572	Identifier	ERRC		5205486	0					
ANR	5205573	ExpressionStatement	s -> srptr = s -> srlimit = s -> cbuf - 1	255:4:7896:7931	5205486	4	True				
ANR	5205574	AssignmentExpression	s -> srptr = s -> srlimit = s -> cbuf - 1		5205486	0		=			
ANR	5205575	PtrMemberAccess	s -> srptr		5205486	0					
ANR	5205576	Identifier	s		5205486	0					
ANR	5205577	Identifier	srptr		5205486	1					
ANR	5205578	AssignmentExpression	s -> srlimit = s -> cbuf - 1		5205486	1		=			
ANR	5205579	PtrMemberAccess	s -> srlimit		5205486	0					
ANR	5205580	Identifier	s		5205486	0					
ANR	5205581	Identifier	srlimit		5205486	1					
ANR	5205582	AdditiveExpression	s -> cbuf - 1		5205486	1		-			
ANR	5205583	PtrMemberAccess	s -> cbuf		5205486	0					
ANR	5205584	Identifier	s		5205486	0					
ANR	5205585	Identifier	cbuf		5205486	1					
ANR	5205586	PrimaryExpression	1		5205486	1					
ANR	5205587	ExpressionStatement	s -> end_status = 0	256:4:7937:7954	5205486	5	True				
ANR	5205588	AssignmentExpression	s -> end_status = 0		5205486	0		=			
ANR	5205589	PtrMemberAccess	s -> end_status		5205486	0					
ANR	5205590	Identifier	s		5205486	0					
ANR	5205591	Identifier	end_status		5205486	1					
ANR	5205592	PrimaryExpression	0		5205486	1					
ANR	5205593	ExpressionStatement	s -> position = pos	257:4:7960:7977	5205486	6	True				
ANR	5205594	AssignmentExpression	s -> position = pos		5205486	0		=			
ANR	5205595	PtrMemberAccess	s -> position		5205486	0					
ANR	5205596	Identifier	s		5205486	0					
ANR	5205597	Identifier	position		5205486	1					
ANR	5205598	Identifier	pos		5205486	1					
ANR	5205599	ReturnStatement	return 0 ;	258:4:7983:7991	5205486	7	True				
ANR	5205600	PrimaryExpression	0		5205486	0					
ANR	5205601	ReturnType	static int		5205486	1					
ANR	5205602	Identifier	s_ram_read_seek		5205486	2					
ANR	5205603	ParameterList	"register stream * s , gs_offset_t pos"		5205486	3					
ANR	5205604	Parameter	register stream * s	242:16:7492:7510	5205486	0	True				
ANR	5205605	ParameterType	register stream *		5205486	0					
ANR	5205606	Identifier	s		5205486	1					
ANR	5205607	Parameter	gs_offset_t pos	242:37:7513:7527	5205486	1	True				
ANR	5205608	ParameterType	gs_offset_t		5205486	0					
ANR	5205609	Identifier	pos		5205486	1					
ANR	5205610	CFGEntryNode	ENTRY		5205486		True				
ANR	5205611	CFGExitNode	EXIT		5205486		True				
ANR	5205612	Symbol	offset		5205486						
ANR	5205613	Symbol	s -> srptr		5205486						
ANR	5205614	Symbol	s -> file		5205486						
ANR	5205615	Symbol	s -> position		5205486						
ANR	5205616	Symbol	s -> srlimit		5205486						
ANR	5205617	Symbol	s -> file_offset		5205486						
ANR	5205618	Symbol	s -> cbuf		5205486						
ANR	5205619	Symbol	s -> file_limit		5205486						
ANR	5205620	Symbol	ramfile_seek		5205486						
ANR	5205621	Symbol	s		5205486						
ANR	5205622	Symbol	pos		5205486						
ANR	5205623	Symbol	RAMFS_SEEK_SET		5205486						
ANR	5205624	Symbol	end		5205486						
ANR	5205625	Symbol	s -> end_status		5205486						
ANR	5205626	Symbol	* s		5205486						
ANR	5205627	Symbol	ERRC		5205486						
ANR	5205628	Function	s_ram_read_close	260:0:7995:8164							
ANR	5205629	FunctionDef	s_ram_read_close (stream * s)		5205628	0					
ANR	5205630	CompoundStatement		262:0:8035:8164	5205628	0					
ANR	5205631	IdentifierDeclStatement	ramhandle * file = ( ramhandle * ) s -> file ;	263:4:8041:8078	5205628	0	True				
ANR	5205632	IdentifierDecl	* file = ( ramhandle * ) s -> file		5205628	0					
ANR	5205633	IdentifierDeclType	ramhandle *		5205628	0					
ANR	5205634	Identifier	file		5205628	1					
ANR	5205635	AssignmentExpression	* file = ( ramhandle * ) s -> file		5205628	2		=			
ANR	5205636	Identifier	file		5205628	0					
ANR	5205637	CastExpression	( ramhandle * ) s -> file		5205628	1					
ANR	5205638	CastTarget	ramhandle *		5205628	0					
ANR	5205639	PtrMemberAccess	s -> file		5205628	1					
ANR	5205640	Identifier	s		5205628	0					
ANR	5205641	Identifier	file		5205628	1					
ANR	5205642	IfStatement	if ( file != 0 )		5205628	1					
ANR	5205643	Condition	file != 0	265:8:8089:8097	5205628	0	True				
ANR	5205644	EqualityExpression	file != 0		5205628	0		!=			
ANR	5205645	Identifier	file		5205628	0					
ANR	5205646	PrimaryExpression	0		5205628	1					
ANR	5205647	CompoundStatement		4:19:64:64	5205628	1					
ANR	5205648	ExpressionStatement	s -> file = 0	266:4:8106:8117	5205628	0	True				
ANR	5205649	AssignmentExpression	s -> file = 0		5205628	0		=			
ANR	5205650	PtrMemberAccess	s -> file		5205628	0					
ANR	5205651	Identifier	s		5205628	0					
ANR	5205652	Identifier	file		5205628	1					
ANR	5205653	PrimaryExpression	0		5205628	1					
ANR	5205654	ExpressionStatement	ramfile_close ( file )	267:4:8123:8142	5205628	1	True				
ANR	5205655	CallExpression	ramfile_close ( file )		5205628	0					
ANR	5205656	Callee	ramfile_close		5205628	0					
ANR	5205657	Identifier	ramfile_close		5205628	0					
ANR	5205658	ArgumentList	file		5205628	1					
ANR	5205659	Argument	file		5205628	0					
ANR	5205660	Identifier	file		5205628	0					
ANR	5205661	ReturnStatement	return 0 ;	269:4:8154:8162	5205628	2	True				
ANR	5205662	PrimaryExpression	0		5205628	0					
ANR	5205663	ReturnType	static int		5205628	1					
ANR	5205664	Identifier	s_ram_read_close		5205628	2					
ANR	5205665	ParameterList	stream * s		5205628	3					
ANR	5205666	Parameter	stream * s	261:17:8023:8032	5205628	0	True				
ANR	5205667	ParameterType	stream *		5205628	0					
ANR	5205668	Identifier	s		5205628	1					
ANR	5205669	CFGEntryNode	ENTRY		5205628		True				
ANR	5205670	CFGExitNode	EXIT		5205628		True				
ANR	5205671	Symbol	s		5205628						
ANR	5205672	Symbol	file		5205628						
ANR	5205673	Symbol	s -> file		5205628						
ANR	5205674	Symbol	* s		5205628						
ANR	5205675	Function	s_ram_read_process	276:0:8287:9000							
ANR	5205676	FunctionDef	"s_ram_read_process (stream_state * st , stream_cursor_read * ignore_pr , stream_cursor_write * pw , bool last)"		5205675	0					
ANR	5205677	CompoundStatement		279:0:8409:9000	5205675	0					
ANR	5205678	IdentifierDeclStatement	stream * s = ( stream * ) st ;	280:4:8415:8439	5205675	0	True				
ANR	5205679	IdentifierDecl	* s = ( stream * ) st		5205675	0					
ANR	5205680	IdentifierDeclType	stream *		5205675	0					
ANR	5205681	Identifier	s		5205675	1					
ANR	5205682	AssignmentExpression	* s = ( stream * ) st		5205675	2		=			
ANR	5205683	Identifier	s		5205675	0					
ANR	5205684	CastExpression	( stream * ) st		5205675	1					
ANR	5205685	CastTarget	stream *		5205675	0					
ANR	5205686	Identifier	st		5205675	1					
ANR	5205687	IdentifierDeclStatement	ramhandle * file = ( ramhandle * ) s -> file ;	281:4:8472:8509	5205675	1	True				
ANR	5205688	IdentifierDecl	* file = ( ramhandle * ) s -> file		5205675	0					
ANR	5205689	IdentifierDeclType	ramhandle *		5205675	0					
ANR	5205690	Identifier	file		5205675	1					
ANR	5205691	AssignmentExpression	* file = ( ramhandle * ) s -> file		5205675	2		=			
ANR	5205692	Identifier	file		5205675	0					
ANR	5205693	CastExpression	( ramhandle * ) s -> file		5205675	1					
ANR	5205694	CastTarget	ramhandle *		5205675	0					
ANR	5205695	PtrMemberAccess	s -> file		5205675	1					
ANR	5205696	Identifier	s		5205675	0					
ANR	5205697	Identifier	file		5205675	1					
ANR	5205698	IdentifierDeclStatement	uint max_count = pw -> limit - pw -> ptr ;	282:4:8515:8551	5205675	2	True				
ANR	5205699	IdentifierDecl	max_count = pw -> limit - pw -> ptr		5205675	0					
ANR	5205700	IdentifierDeclType	uint		5205675	0					
ANR	5205701	Identifier	max_count		5205675	1					
ANR	5205702	AssignmentExpression	max_count = pw -> limit - pw -> ptr		5205675	2		=			
ANR	5205703	Identifier	max_count		5205675	0					
ANR	5205704	AdditiveExpression	pw -> limit - pw -> ptr		5205675	1		-			
ANR	5205705	PtrMemberAccess	pw -> limit		5205675	0					
ANR	5205706	Identifier	pw		5205675	0					
ANR	5205707	Identifier	limit		5205675	1					
ANR	5205708	PtrMemberAccess	pw -> ptr		5205675	1					
ANR	5205709	Identifier	pw		5205675	0					
ANR	5205710	Identifier	ptr		5205675	1					
ANR	5205711	IdentifierDeclStatement	int status = 1 ;	283:4:8557:8571	5205675	3	True				
ANR	5205712	IdentifierDecl	status = 1		5205675	0					
ANR	5205713	IdentifierDeclType	int		5205675	0					
ANR	5205714	Identifier	status		5205675	1					
ANR	5205715	AssignmentExpression	status = 1		5205675	2		=			
ANR	5205716	Identifier	status		5205675	0					
ANR	5205717	PrimaryExpression	1		5205675	1					
ANR	5205718	IdentifierDeclStatement	int count ;	284:4:8577:8586	5205675	4	True				
ANR	5205719	IdentifierDecl	count		5205675	0					
ANR	5205720	IdentifierDeclType	int		5205675	0					
ANR	5205721	Identifier	count		5205675	1					
ANR	5205722	IfStatement	if ( s -> file_limit < S_FILE_LIMIT_MAX )		5205675	5					
ANR	5205723	Condition	s -> file_limit < S_FILE_LIMIT_MAX	286:8:8597:8628	5205675	0	True				
ANR	5205724	RelationalExpression	s -> file_limit < S_FILE_LIMIT_MAX		5205675	0		<			
ANR	5205725	PtrMemberAccess	s -> file_limit		5205675	0					
ANR	5205726	Identifier	s		5205675	0					
ANR	5205727	Identifier	file_limit		5205675	1					
ANR	5205728	Identifier	S_FILE_LIMIT_MAX		5205675	1					
ANR	5205729	CompoundStatement		9:4:227:301	5205675	1					
ANR	5205730	IdentifierDeclStatement	long limit_count = s -> file_offset + s -> file_limit - ramfile_tell ( file ) ;	287:4:8637:8711	5205675	0	True				
ANR	5205731	IdentifierDecl	limit_count = s -> file_offset + s -> file_limit - ramfile_tell ( file )		5205675	0					
ANR	5205732	IdentifierDeclType	long		5205675	0					
ANR	5205733	Identifier	limit_count		5205675	1					
ANR	5205734	AssignmentExpression	limit_count = s -> file_offset + s -> file_limit - ramfile_tell ( file )		5205675	2		=			
ANR	5205735	Identifier	limit_count		5205675	0					
ANR	5205736	AdditiveExpression	s -> file_offset + s -> file_limit - ramfile_tell ( file )		5205675	1		+			
ANR	5205737	PtrMemberAccess	s -> file_offset		5205675	0					
ANR	5205738	Identifier	s		5205675	0					
ANR	5205739	Identifier	file_offset		5205675	1					
ANR	5205740	AdditiveExpression	s -> file_limit - ramfile_tell ( file )		5205675	1		-			
ANR	5205741	PtrMemberAccess	s -> file_limit		5205675	0					
ANR	5205742	Identifier	s		5205675	0					
ANR	5205743	Identifier	file_limit		5205675	1					
ANR	5205744	CallExpression	ramfile_tell ( file )		5205675	1					
ANR	5205745	Callee	ramfile_tell		5205675	0					
ANR	5205746	Identifier	ramfile_tell		5205675	0					
ANR	5205747	ArgumentList	file		5205675	1					
ANR	5205748	Argument	file		5205675	0					
ANR	5205749	Identifier	file		5205675	0					
ANR	5205750	IfStatement	if ( max_count > limit_count )		5205675	1					
ANR	5205751	Condition	max_count > limit_count	290:8:8722:8744	5205675	0	True				
ANR	5205752	RelationalExpression	max_count > limit_count		5205675	0		>			
ANR	5205753	Identifier	max_count		5205675	0					
ANR	5205754	Identifier	limit_count		5205675	1					
ANR	5205755	ExpressionStatement	"max_count = limit_count , status = EOFC"	291:8:8755:8793	5205675	1	True				
ANR	5205756	Expression	"max_count = limit_count , status = EOFC"		5205675	0					
ANR	5205757	AssignmentExpression	max_count = limit_count		5205675	0		=			
ANR	5205758	Identifier	max_count		5205675	0					
ANR	5205759	Identifier	limit_count		5205675	1					
ANR	5205760	AssignmentExpression	status = EOFC		5205675	1		=			
ANR	5205761	Identifier	status		5205675	0					
ANR	5205762	Identifier	EOFC		5205675	1					
ANR	5205763	ExpressionStatement	"count = ramfile_read ( file , pw -> ptr + 1 , max_count )"	293:4:8805:8854	5205675	6	True				
ANR	5205764	AssignmentExpression	"count = ramfile_read ( file , pw -> ptr + 1 , max_count )"		5205675	0		=			
ANR	5205765	Identifier	count		5205675	0					
ANR	5205766	CallExpression	"ramfile_read ( file , pw -> ptr + 1 , max_count )"		5205675	1					
ANR	5205767	Callee	ramfile_read		5205675	0					
ANR	5205768	Identifier	ramfile_read		5205675	0					
ANR	5205769	ArgumentList	file		5205675	1					
ANR	5205770	Argument	file		5205675	0					
ANR	5205771	Identifier	file		5205675	0					
ANR	5205772	Argument	pw -> ptr + 1		5205675	1					
ANR	5205773	AdditiveExpression	pw -> ptr + 1		5205675	0		+			
ANR	5205774	PtrMemberAccess	pw -> ptr		5205675	0					
ANR	5205775	Identifier	pw		5205675	0					
ANR	5205776	Identifier	ptr		5205675	1					
ANR	5205777	PrimaryExpression	1		5205675	1					
ANR	5205778	Argument	max_count		5205675	2					
ANR	5205779	Identifier	max_count		5205675	0					
ANR	5205780	IfStatement	if ( count < 0 )		5205675	7					
ANR	5205781	Condition	count < 0	294:8:8864:8872	5205675	0	True				
ANR	5205782	RelationalExpression	count < 0		5205675	0		<			
ANR	5205783	Identifier	count		5205675	0					
ANR	5205784	PrimaryExpression	0		5205675	1					
ANR	5205785	ReturnStatement	return ERRC ;	294:19:8875:8886	5205675	1	True				
ANR	5205786	Identifier	ERRC		5205675	0					
ANR	5205787	ExpressionStatement	pw -> ptr += count	295:4:8892:8908	5205675	8	True				
ANR	5205788	AssignmentExpression	pw -> ptr += count		5205675	0		+=			
ANR	5205789	PtrMemberAccess	pw -> ptr		5205675	0					
ANR	5205790	Identifier	pw		5205675	0					
ANR	5205791	Identifier	ptr		5205675	1					
ANR	5205792	Identifier	count		5205675	1					
ANR	5205793	ReturnStatement	return ramfile_eof ( file ) ? EOFC : status ;	297:4:8958:8998	5205675	9	True				
ANR	5205794	ConditionalExpression	ramfile_eof ( file ) ? EOFC : status		5205675	0					
ANR	5205795	Condition	ramfile_eof ( file )		5205675	0					
ANR	5205796	CallExpression	ramfile_eof ( file )		5205675	0					
ANR	5205797	Callee	ramfile_eof		5205675	0					
ANR	5205798	Identifier	ramfile_eof		5205675	0					
ANR	5205799	ArgumentList	file		5205675	1					
ANR	5205800	Argument	file		5205675	0					
ANR	5205801	Identifier	file		5205675	0					
ANR	5205802	Identifier	EOFC		5205675	1					
ANR	5205803	Identifier	status		5205675	2					
ANR	5205804	ReturnType	static int		5205675	1					
ANR	5205805	Identifier	s_ram_read_process		5205675	2					
ANR	5205806	ParameterList	"stream_state * st , stream_cursor_read * ignore_pr , stream_cursor_write * pw , bool last"		5205675	3					
ANR	5205807	Parameter	stream_state * st	277:19:8317:8333	5205675	0	True				
ANR	5205808	ParameterType	stream_state *		5205675	0					
ANR	5205809	Identifier	st		5205675	1					
ANR	5205810	Parameter	stream_cursor_read * ignore_pr	277:38:8336:8365	5205675	1	True				
ANR	5205811	ParameterType	stream_cursor_read *		5205675	0					
ANR	5205812	Identifier	ignore_pr		5205675	1					
ANR	5205813	Parameter	stream_cursor_write * pw	278:4:8372:8395	5205675	2	True				
ANR	5205814	ParameterType	stream_cursor_write *		5205675	0					
ANR	5205815	Identifier	pw		5205675	1					
ANR	5205816	Parameter	bool last	278:30:8398:8406	5205675	3	True				
ANR	5205817	ParameterType	bool		5205675	0					
ANR	5205818	Identifier	last		5205675	1					
ANR	5205819	CFGEntryNode	ENTRY		5205675		True				
ANR	5205820	CFGExitNode	EXIT		5205675		True				
ANR	5205821	Symbol	st		5205675						
ANR	5205822	Symbol	last		5205675						
ANR	5205823	Symbol	s -> file		5205675						
ANR	5205824	Symbol	ramfile_tell		5205675						
ANR	5205825	Symbol	pw		5205675						
ANR	5205826	Symbol	EOFC		5205675						
ANR	5205827	Symbol	count		5205675						
ANR	5205828	Symbol	s -> file_offset		5205675						
ANR	5205829	Symbol	S_FILE_LIMIT_MAX		5205675						
ANR	5205830	Symbol	ramfile_read		5205675						
ANR	5205831	Symbol	ramfile_eof		5205675						
ANR	5205832	Symbol	s -> file_limit		5205675						
ANR	5205833	Symbol	* pw		5205675						
ANR	5205834	Symbol	max_count		5205675						
ANR	5205835	Symbol	pw -> limit		5205675						
ANR	5205836	Symbol	s		5205675						
ANR	5205837	Symbol	file		5205675						
ANR	5205838	Symbol	ignore_pr		5205675						
ANR	5205839	Symbol	limit_count		5205675						
ANR	5205840	Symbol	* s		5205675						
ANR	5205841	Symbol	ERRC		5205675						
ANR	5205842	Symbol	pw -> ptr		5205675						
ANR	5205843	Symbol	status		5205675						
ANR	5205844	Function	swrite_ram	303:0:9083:9581							
ANR	5205845	FunctionDef	"swrite_ram (register stream * s , ramhandle * file , byte * buf , uint len)"		5205844	0					
ANR	5205846	CompoundStatement		305:0:9167:9581	5205844	0					
ANR	5205847	Statement	static	306:4:9173:9178	5205844	0	True				
ANR	5205848	IdentifierDeclStatement	"const stream_procs p = { s_std_noavailable , s_ram_write_seek , s_std_write_reset , s_ram_write_flush , s_ram_write_close , s_ram_write_process , s_ram_switch } ;"	306:11:9180:9350	5205844	1	True				
ANR	5205849	IdentifierDecl	"p = { s_std_noavailable , s_ram_write_seek , s_std_write_reset , s_ram_write_flush , s_ram_write_close , s_ram_write_process , s_ram_switch }"		5205844	0					
ANR	5205850	IdentifierDeclType	const stream_procs		5205844	0					
ANR	5205851	Identifier	p		5205844	1					
ANR	5205852	AssignmentExpression	"p = { s_std_noavailable , s_ram_write_seek , s_std_write_reset , s_ram_write_flush , s_ram_write_close , s_ram_write_process , s_ram_switch }"		5205844	2		=			
ANR	5205853	Identifier	p		5205844	0					
ANR	5205854	InitializerList	s_std_noavailable		5205844	1					
ANR	5205855	Identifier	s_std_noavailable		5205844	0					
ANR	5205856	Identifier	s_ram_write_seek		5205844	1					
ANR	5205857	Identifier	s_std_write_reset		5205844	2					
ANR	5205858	Identifier	s_ram_write_flush		5205844	3					
ANR	5205859	Identifier	s_ram_write_close		5205844	4					
ANR	5205860	Identifier	s_ram_write_process		5205844	5					
ANR	5205861	Identifier	s_ram_switch		5205844	6					
ANR	5205862	ExpressionStatement	"s_std_init ( s , buf , len , & p , s_mode_write + s_mode_seek )"	312:4:9357:9412	5205844	2	True				
ANR	5205863	CallExpression	"s_std_init ( s , buf , len , & p , s_mode_write + s_mode_seek )"		5205844	0					
ANR	5205864	Callee	s_std_init		5205844	0					
ANR	5205865	Identifier	s_std_init		5205844	0					
ANR	5205866	ArgumentList	s		5205844	1					
ANR	5205867	Argument	s		5205844	0					
ANR	5205868	Identifier	s		5205844	0					
ANR	5205869	Argument	buf		5205844	1					
ANR	5205870	Identifier	buf		5205844	0					
ANR	5205871	Argument	len		5205844	2					
ANR	5205872	Identifier	len		5205844	0					
ANR	5205873	Argument	& p		5205844	3					
ANR	5205874	UnaryOperationExpression	& p		5205844	0					
ANR	5205875	UnaryOperator	&		5205844	0					
ANR	5205876	Identifier	p		5205844	1					
ANR	5205877	Argument	s_mode_write + s_mode_seek		5205844	4					
ANR	5205878	AdditiveExpression	s_mode_write + s_mode_seek		5205844	0		+			
ANR	5205879	Identifier	s_mode_write		5205844	0					
ANR	5205880	Identifier	s_mode_seek		5205844	1					
ANR	5205881	ExpressionStatement	s -> file = ( FILE * ) file	313:4:9418:9439	5205844	3	True				
ANR	5205882	AssignmentExpression	s -> file = ( FILE * ) file		5205844	0		=			
ANR	5205883	PtrMemberAccess	s -> file		5205844	0					
ANR	5205884	Identifier	s		5205844	0					
ANR	5205885	Identifier	file		5205844	1					
ANR	5205886	CastExpression	( FILE * ) file		5205844	1					
ANR	5205887	CastTarget	FILE *		5205844	0					
ANR	5205888	Identifier	file		5205844	1					
ANR	5205889	ExpressionStatement	s -> file_modes = s -> modes	314:4:9445:9469	5205844	4	True				
ANR	5205890	AssignmentExpression	s -> file_modes = s -> modes		5205844	0		=			
ANR	5205891	PtrMemberAccess	s -> file_modes		5205844	0					
ANR	5205892	Identifier	s		5205844	0					
ANR	5205893	Identifier	file_modes		5205844	1					
ANR	5205894	PtrMemberAccess	s -> modes		5205844	1					
ANR	5205895	Identifier	s		5205844	0					
ANR	5205896	Identifier	modes		5205844	1					
ANR	5205897	ExpressionStatement	s -> file_offset = 0	315:4:9475:9493	5205844	5	True				
ANR	5205898	AssignmentExpression	s -> file_offset = 0		5205844	0		=			
ANR	5205899	PtrMemberAccess	s -> file_offset		5205844	0					
ANR	5205900	Identifier	s		5205844	0					
ANR	5205901	Identifier	file_offset		5205844	1					
ANR	5205902	PrimaryExpression	0		5205844	1					
ANR	5205903	ExpressionStatement	s -> file_limit = S_FILE_LIMIT_MAX	316:4:9547:9579	5205844	6	True				
ANR	5205904	AssignmentExpression	s -> file_limit = S_FILE_LIMIT_MAX		5205844	0		=			
ANR	5205905	PtrMemberAccess	s -> file_limit		5205844	0					
ANR	5205906	Identifier	s		5205844	0					
ANR	5205907	Identifier	file_limit		5205844	1					
ANR	5205908	Identifier	S_FILE_LIMIT_MAX		5205844	1					
ANR	5205909	ReturnType	static void		5205844	1					
ANR	5205910	Identifier	swrite_ram		5205844	2					
ANR	5205911	ParameterList	"register stream * s , ramhandle * file , byte * buf , uint len"		5205844	3					
ANR	5205912	Parameter	register stream * s	304:11:9106:9124	5205844	0	True				
ANR	5205913	ParameterType	register stream *		5205844	0					
ANR	5205914	Identifier	s		5205844	1					
ANR	5205915	Parameter	ramhandle * file	304:32:9127:9142	5205844	1	True				
ANR	5205916	ParameterType	ramhandle *		5205844	0					
ANR	5205917	Identifier	file		5205844	1					
ANR	5205918	Parameter	byte * buf	304:50:9145:9154	5205844	2	True				
ANR	5205919	ParameterType	byte *		5205844	0					
ANR	5205920	Identifier	buf		5205844	1					
ANR	5205921	Parameter	uint len	304:62:9157:9164	5205844	3	True				
ANR	5205922	ParameterType	uint		5205844	0					
ANR	5205923	Identifier	len		5205844	1					
ANR	5205924	CFGEntryNode	ENTRY		5205844		True				
ANR	5205925	CFGExitNode	EXIT		5205844		True				
ANR	5205926	Symbol	s -> file		5205844						
ANR	5205927	Symbol	s_std_write_reset		5205844						
ANR	5205928	Symbol	s_ram_write_process		5205844						
ANR	5205929	Symbol	s -> file_modes		5205844						
ANR	5205930	Symbol	s -> file_offset		5205844						
ANR	5205931	Symbol	s_mode_write		5205844						
ANR	5205932	Symbol	S_FILE_LIMIT_MAX		5205844						
ANR	5205933	Symbol	s -> file_limit		5205844						
ANR	5205934	Symbol	p		5205844						
ANR	5205935	Symbol	buf		5205844						
ANR	5205936	Symbol	s_ram_write_close		5205844						
ANR	5205937	Symbol	s		5205844						
ANR	5205938	Symbol	file		5205844						
ANR	5205939	Symbol	s_ram_write_flush		5205844						
ANR	5205940	Symbol	len		5205844						
ANR	5205941	Symbol	s_mode_seek		5205844						
ANR	5205942	Symbol	s_ram_write_seek		5205844						
ANR	5205943	Symbol	& p		5205844						
ANR	5205944	Symbol	s_ram_switch		5205844						
ANR	5205945	Symbol	s_std_noavailable		5205844						
ANR	5205946	Symbol	* s		5205844						
ANR	5205947	Symbol	s -> modes		5205844						
ANR	5205948	Function	sappend_ram	320:0:9626:9919							
ANR	5205949	FunctionDef	"sappend_ram (register stream * s , ramhandle * file , byte * buf , uint len)"		5205948	0					
ANR	5205950	CompoundStatement		322:0:9711:9919	5205948	0					
ANR	5205951	ExpressionStatement	"swrite_ram ( s , file , buf , len )"	323:4:9717:9746	5205948	0	True				
ANR	5205952	CallExpression	"swrite_ram ( s , file , buf , len )"		5205948	0					
ANR	5205953	Callee	swrite_ram		5205948	0					
ANR	5205954	Identifier	swrite_ram		5205948	0					
ANR	5205955	ArgumentList	s		5205948	1					
ANR	5205956	Argument	s		5205948	0					
ANR	5205957	Identifier	s		5205948	0					
ANR	5205958	Argument	file		5205948	1					
ANR	5205959	Identifier	file		5205948	0					
ANR	5205960	Argument	buf		5205948	2					
ANR	5205961	Identifier	buf		5205948	0					
ANR	5205962	Argument	len		5205948	3					
ANR	5205963	Identifier	len		5205948	0					
ANR	5205964	ExpressionStatement	s -> modes = s_mode_write + s_mode_append	324:4:9752:9791	5205948	1	True				
ANR	5205965	AssignmentExpression	s -> modes = s_mode_write + s_mode_append		5205948	0		=			
ANR	5205966	PtrMemberAccess	s -> modes		5205948	0					
ANR	5205967	Identifier	s		5205948	0					
ANR	5205968	Identifier	modes		5205948	1					
ANR	5205969	AdditiveExpression	s_mode_write + s_mode_append		5205948	1		+			
ANR	5205970	Identifier	s_mode_write		5205948	0					
ANR	5205971	Identifier	s_mode_append		5205948	1					
ANR	5205972	ExpressionStatement	s -> file_modes = s -> modes	325:4:9814:9838	5205948	2	True				
ANR	5205973	AssignmentExpression	s -> file_modes = s -> modes		5205948	0		=			
ANR	5205974	PtrMemberAccess	s -> file_modes		5205948	0					
ANR	5205975	Identifier	s		5205948	0					
ANR	5205976	Identifier	file_modes		5205948	1					
ANR	5205977	PtrMemberAccess	s -> modes		5205948	1					
ANR	5205978	Identifier	s		5205948	0					
ANR	5205979	Identifier	modes		5205948	1					
ANR	5205980	ExpressionStatement	"ramfile_seek ( file , 0 , RAMFS_SEEK_END )"	326:4:9844:9879	5205948	3	True				
ANR	5205981	CallExpression	"ramfile_seek ( file , 0 , RAMFS_SEEK_END )"		5205948	0					
ANR	5205982	Callee	ramfile_seek		5205948	0					
ANR	5205983	Identifier	ramfile_seek		5205948	0					
ANR	5205984	ArgumentList	file		5205948	1					
ANR	5205985	Argument	file		5205948	0					
ANR	5205986	Identifier	file		5205948	0					
ANR	5205987	Argument	0		5205948	1					
ANR	5205988	PrimaryExpression	0		5205948	0					
ANR	5205989	Argument	RAMFS_SEEK_END		5205948	2					
ANR	5205990	Identifier	RAMFS_SEEK_END		5205948	0					
ANR	5205991	ExpressionStatement	s -> position = ramfile_tell ( file )	327:4:9885:9917	5205948	4	True				
ANR	5205992	AssignmentExpression	s -> position = ramfile_tell ( file )		5205948	0		=			
ANR	5205993	PtrMemberAccess	s -> position		5205948	0					
ANR	5205994	Identifier	s		5205948	0					
ANR	5205995	Identifier	position		5205948	1					
ANR	5205996	CallExpression	ramfile_tell ( file )		5205948	1					
ANR	5205997	Callee	ramfile_tell		5205948	0					
ANR	5205998	Identifier	ramfile_tell		5205948	0					
ANR	5205999	ArgumentList	file		5205948	1					
ANR	5206000	Argument	file		5205948	0					
ANR	5206001	Identifier	file		5205948	0					
ANR	5206002	ReturnType	static void		5205948	1					
ANR	5206003	Identifier	sappend_ram		5205948	2					
ANR	5206004	ParameterList	"register stream * s , ramhandle * file , byte * buf , uint len"		5205948	3					
ANR	5206005	Parameter	register stream * s	321:12:9650:9668	5205948	0	True				
ANR	5206006	ParameterType	register stream *		5205948	0					
ANR	5206007	Identifier	s		5205948	1					
ANR	5206008	Parameter	ramhandle * file	321:33:9671:9686	5205948	1	True				
ANR	5206009	ParameterType	ramhandle *		5205948	0					
ANR	5206010	Identifier	file		5205948	1					
ANR	5206011	Parameter	byte * buf	321:51:9689:9698	5205948	2	True				
ANR	5206012	ParameterType	byte *		5205948	0					
ANR	5206013	Identifier	buf		5205948	1					
ANR	5206014	Parameter	uint len	321:63:9701:9708	5205948	3	True				
ANR	5206015	ParameterType	uint		5205948	0					
ANR	5206016	Identifier	len		5205948	1					
ANR	5206017	CFGEntryNode	ENTRY		5205948		True				
ANR	5206018	CFGExitNode	EXIT		5205948		True				
ANR	5206019	Symbol	buf		5205948						
ANR	5206020	Symbol	s		5205948						
ANR	5206021	Symbol	file		5205948						
ANR	5206022	Symbol	len		5205948						
ANR	5206023	Symbol	ramfile_tell		5205948						
ANR	5206024	Symbol	s -> position		5205948						
ANR	5206025	Symbol	s -> file_modes		5205948						
ANR	5206026	Symbol	s_mode_write		5205948						
ANR	5206027	Symbol	* s		5205948						
ANR	5206028	Symbol	s_mode_append		5205948						
ANR	5206029	Symbol	RAMFS_SEEK_END		5205948						
ANR	5206030	Symbol	s -> modes		5205948						
ANR	5206031	Function	s_ram_write_seek	331:0:9961:10251							
ANR	5206032	FunctionDef	"s_ram_write_seek (stream * s , gs_offset_t pos)"		5206031	0					
ANR	5206033	CompoundStatement		333:0:10018:10251	5206031	0					
ANR	5206034	IdentifierDeclStatement	int code = sflush ( s ) ;	335:4:10074:10094	5206031	0	True				
ANR	5206035	IdentifierDecl	code = sflush ( s )		5206031	0					
ANR	5206036	IdentifierDeclType	int		5206031	0					
ANR	5206037	Identifier	code		5206031	1					
ANR	5206038	AssignmentExpression	code = sflush ( s )		5206031	2		=			
ANR	5206039	Identifier	code		5206031	0					
ANR	5206040	CallExpression	sflush ( s )		5206031	1					
ANR	5206041	Callee	sflush		5206031	0					
ANR	5206042	Identifier	sflush		5206031	0					
ANR	5206043	ArgumentList	s		5206031	1					
ANR	5206044	Argument	s		5206031	0					
ANR	5206045	Identifier	s		5206031	0					
ANR	5206046	IfStatement	if ( code < 0 )		5206031	1					
ANR	5206047	Condition	code < 0	337:8:10105:10112	5206031	0	True				
ANR	5206048	RelationalExpression	code < 0		5206031	0		<			
ANR	5206049	Identifier	code		5206031	0					
ANR	5206050	PrimaryExpression	0		5206031	1					
ANR	5206051	ReturnStatement	return code ;	337:18:10115:10126	5206031	1	True				
ANR	5206052	Identifier	code		5206031	0					
ANR	5206053	IfStatement	"if ( ramfile_seek ( ( ramhandle * ) s -> file , pos , RAMFS_SEEK_SET ) != 0 )"		5206031	2					
ANR	5206054	Condition	"ramfile_seek ( ( ramhandle * ) s -> file , pos , RAMFS_SEEK_SET ) != 0"	338:8:10136:10194	5206031	0	True				
ANR	5206055	EqualityExpression	"ramfile_seek ( ( ramhandle * ) s -> file , pos , RAMFS_SEEK_SET ) != 0"		5206031	0		!=			
ANR	5206056	CallExpression	"ramfile_seek ( ( ramhandle * ) s -> file , pos , RAMFS_SEEK_SET )"		5206031	0					
ANR	5206057	Callee	ramfile_seek		5206031	0					
ANR	5206058	Identifier	ramfile_seek		5206031	0					
ANR	5206059	ArgumentList	( ramhandle * ) s -> file		5206031	1					
ANR	5206060	Argument	( ramhandle * ) s -> file		5206031	0					
ANR	5206061	CastExpression	( ramhandle * ) s -> file		5206031	0					
ANR	5206062	CastTarget	ramhandle *		5206031	0					
ANR	5206063	PtrMemberAccess	s -> file		5206031	1					
ANR	5206064	Identifier	s		5206031	0					
ANR	5206065	Identifier	file		5206031	1					
ANR	5206066	Argument	pos		5206031	1					
ANR	5206067	Identifier	pos		5206031	0					
ANR	5206068	Argument	RAMFS_SEEK_SET		5206031	2					
ANR	5206069	Identifier	RAMFS_SEEK_SET		5206031	0					
ANR	5206070	PrimaryExpression	0		5206031	1					
ANR	5206071	ReturnStatement	return ERRC ;	339:4:10201:10212	5206031	1	True				
ANR	5206072	Identifier	ERRC		5206031	0					
ANR	5206073	ExpressionStatement	s -> position = pos	340:4:10218:10235	5206031	3	True				
ANR	5206074	AssignmentExpression	s -> position = pos		5206031	0		=			
ANR	5206075	PtrMemberAccess	s -> position		5206031	0					
ANR	5206076	Identifier	s		5206031	0					
ANR	5206077	Identifier	position		5206031	1					
ANR	5206078	Identifier	pos		5206031	1					
ANR	5206079	ReturnStatement	return 0 ;	341:4:10241:10249	5206031	4	True				
ANR	5206080	PrimaryExpression	0		5206031	0					
ANR	5206081	ReturnType	static int		5206031	1					
ANR	5206082	Identifier	s_ram_write_seek		5206031	2					
ANR	5206083	ParameterList	"stream * s , gs_offset_t pos"		5206031	3					
ANR	5206084	Parameter	stream * s	332:17:9989:9998	5206031	0	True				
ANR	5206085	ParameterType	stream *		5206031	0					
ANR	5206086	Identifier	s		5206031	1					
ANR	5206087	Parameter	gs_offset_t pos	332:29:10001:10015	5206031	1	True				
ANR	5206088	ParameterType	gs_offset_t		5206031	0					
ANR	5206089	Identifier	pos		5206031	1					
ANR	5206090	CFGEntryNode	ENTRY		5206031		True				
ANR	5206091	CFGExitNode	EXIT		5206031		True				
ANR	5206092	Symbol	s		5206031						
ANR	5206093	Symbol	code		5206031						
ANR	5206094	Symbol	pos		5206031						
ANR	5206095	Symbol	s -> file		5206031						
ANR	5206096	Symbol	s -> position		5206031						
ANR	5206097	Symbol	RAMFS_SEEK_SET		5206031						
ANR	5206098	Symbol	sflush		5206031						
ANR	5206099	Symbol	* s		5206031						
ANR	5206100	Symbol	ramfile_seek		5206031						
ANR	5206101	Symbol	ERRC		5206031						
ANR	5206102	Function	s_ram_write_flush	344:0:10254:10373							
ANR	5206103	FunctionDef	s_ram_write_flush (register stream * s)		5206102	0					
ANR	5206104	CompoundStatement		346:0:10304:10373	5206102	0					
ANR	5206105	IdentifierDeclStatement	"int result = s_process_write_buf ( s , false ) ;"	347:4:10310:10352	5206102	0	True				
ANR	5206106	IdentifierDecl	"result = s_process_write_buf ( s , false )"		5206102	0					
ANR	5206107	IdentifierDeclType	int		5206102	0					
ANR	5206108	Identifier	result		5206102	1					
ANR	5206109	AssignmentExpression	"result = s_process_write_buf ( s , false )"		5206102	2		=			
ANR	5206110	Identifier	result		5206102	0					
ANR	5206111	CallExpression	"s_process_write_buf ( s , false )"		5206102	1					
ANR	5206112	Callee	s_process_write_buf		5206102	0					
ANR	5206113	Identifier	s_process_write_buf		5206102	0					
ANR	5206114	ArgumentList	s		5206102	1					
ANR	5206115	Argument	s		5206102	0					
ANR	5206116	Identifier	s		5206102	0					
ANR	5206117	Argument	false		5206102	1					
ANR	5206118	Identifier	false		5206102	0					
ANR	5206119	ReturnStatement	return result ;	348:4:10358:10371	5206102	1	True				
ANR	5206120	Identifier	result		5206102	0					
ANR	5206121	ReturnType	static int		5206102	1					
ANR	5206122	Identifier	s_ram_write_flush		5206102	2					
ANR	5206123	ParameterList	register stream * s		5206102	3					
ANR	5206124	Parameter	register stream * s	345:18:10283:10301	5206102	0	True				
ANR	5206125	ParameterType	register stream *		5206102	0					
ANR	5206126	Identifier	s		5206102	1					
ANR	5206127	CFGEntryNode	ENTRY		5206102		True				
ANR	5206128	CFGExitNode	EXIT		5206102		True				
ANR	5206129	Symbol	result		5206102						
ANR	5206130	Symbol	s		5206102						
ANR	5206131	Symbol	false		5206102						
ANR	5206132	Symbol	s_process_write_buf		5206102						
ANR	5206133	Function	s_ram_write_close	351:0:10376:10494							
ANR	5206134	FunctionDef	s_ram_write_close (register stream * s)		5206133	0					
ANR	5206135	CompoundStatement		353:0:10426:10494	5206133	0					
ANR	5206136	ExpressionStatement	"s_process_write_buf ( s , true )"	354:4:10432:10460	5206133	0	True				
ANR	5206137	CallExpression	"s_process_write_buf ( s , true )"		5206133	0					
ANR	5206138	Callee	s_process_write_buf		5206133	0					
ANR	5206139	Identifier	s_process_write_buf		5206133	0					
ANR	5206140	ArgumentList	s		5206133	1					
ANR	5206141	Argument	s		5206133	0					
ANR	5206142	Identifier	s		5206133	0					
ANR	5206143	Argument	true		5206133	1					
ANR	5206144	Identifier	true		5206133	0					
ANR	5206145	ReturnStatement	return s_ram_read_close ( s ) ;	355:4:10466:10492	5206133	1	True				
ANR	5206146	CallExpression	s_ram_read_close ( s )		5206133	0					
ANR	5206147	Callee	s_ram_read_close		5206133	0					
ANR	5206148	Identifier	s_ram_read_close		5206133	0					
ANR	5206149	ArgumentList	s		5206133	1					
ANR	5206150	Argument	s		5206133	0					
ANR	5206151	Identifier	s		5206133	0					
ANR	5206152	ReturnType	static int		5206133	1					
ANR	5206153	Identifier	s_ram_write_close		5206133	2					
ANR	5206154	ParameterList	register stream * s		5206133	3					
ANR	5206155	Parameter	register stream * s	352:18:10405:10423	5206133	0	True				
ANR	5206156	ParameterType	register stream *		5206133	0					
ANR	5206157	Identifier	s		5206133	1					
ANR	5206158	CFGEntryNode	ENTRY		5206133		True				
ANR	5206159	CFGExitNode	EXIT		5206133		True				
ANR	5206160	Symbol	s		5206133						
ANR	5206161	Symbol	true		5206133						
ANR	5206162	Symbol	s_ram_read_close		5206133						
ANR	5206163	Function	s_ram_write_process	362:0:10616:10968							
ANR	5206164	FunctionDef	"s_ram_write_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last)"		5206163	0					
ANR	5206165	CompoundStatement		365:0:10739:10968	5206163	0					
ANR	5206166	IdentifierDeclStatement	uint count = pr -> limit - pr -> ptr ;	366:4:10745:10777	5206163	0	True				
ANR	5206167	IdentifierDecl	count = pr -> limit - pr -> ptr		5206163	0					
ANR	5206168	IdentifierDeclType	uint		5206163	0					
ANR	5206169	Identifier	count		5206163	1					
ANR	5206170	AssignmentExpression	count = pr -> limit - pr -> ptr		5206163	2		=			
ANR	5206171	Identifier	count		5206163	0					
ANR	5206172	AdditiveExpression	pr -> limit - pr -> ptr		5206163	1		-			
ANR	5206173	PtrMemberAccess	pr -> limit		5206163	0					
ANR	5206174	Identifier	pr		5206163	0					
ANR	5206175	Identifier	limit		5206163	1					
ANR	5206176	PtrMemberAccess	pr -> ptr		5206163	1					
ANR	5206177	Identifier	pr		5206163	0					
ANR	5206178	Identifier	ptr		5206163	1					
ANR	5206179	IdentifierDeclStatement	ramhandle * file = ( ramhandle * ) ( ( stream * ) st ) -> file ;	368:4:10784:10835	5206163	1	True				
ANR	5206180	IdentifierDecl	* file = ( ramhandle * ) ( ( stream * ) st ) -> file		5206163	0					
ANR	5206181	IdentifierDeclType	ramhandle *		5206163	0					
ANR	5206182	Identifier	file		5206163	1					
ANR	5206183	AssignmentExpression	* file = ( ramhandle * ) ( ( stream * ) st ) -> file		5206163	2		=			
ANR	5206184	Identifier	file		5206163	0					
ANR	5206185	CastExpression	( ramhandle * ) ( ( stream * ) st ) -> file		5206163	1					
ANR	5206186	CastTarget	ramhandle *		5206163	0					
ANR	5206187	PtrMemberAccess	( ( stream * ) st ) -> file		5206163	1					
ANR	5206188	CastExpression	( stream * ) st		5206163	0					
ANR	5206189	CastTarget	stream *		5206163	0					
ANR	5206190	Identifier	st		5206163	1					
ANR	5206191	Identifier	file		5206163	1					
ANR	5206192	IdentifierDeclStatement	"int written = ramfile_write ( file , pr -> ptr + 1 , count ) ;"	369:4:10841:10893	5206163	2	True				
ANR	5206193	IdentifierDecl	"written = ramfile_write ( file , pr -> ptr + 1 , count )"		5206163	0					
ANR	5206194	IdentifierDeclType	int		5206163	0					
ANR	5206195	Identifier	written		5206163	1					
ANR	5206196	AssignmentExpression	"written = ramfile_write ( file , pr -> ptr + 1 , count )"		5206163	2		=			
ANR	5206197	Identifier	written		5206163	0					
ANR	5206198	CallExpression	"ramfile_write ( file , pr -> ptr + 1 , count )"		5206163	1					
ANR	5206199	Callee	ramfile_write		5206163	0					
ANR	5206200	Identifier	ramfile_write		5206163	0					
ANR	5206201	ArgumentList	file		5206163	1					
ANR	5206202	Argument	file		5206163	0					
ANR	5206203	Identifier	file		5206163	0					
ANR	5206204	Argument	pr -> ptr + 1		5206163	1					
ANR	5206205	AdditiveExpression	pr -> ptr + 1		5206163	0		+			
ANR	5206206	PtrMemberAccess	pr -> ptr		5206163	0					
ANR	5206207	Identifier	pr		5206163	0					
ANR	5206208	Identifier	ptr		5206163	1					
ANR	5206209	PrimaryExpression	1		5206163	1					
ANR	5206210	Argument	count		5206163	2					
ANR	5206211	Identifier	count		5206163	0					
ANR	5206212	IfStatement	if ( written < 0 )		5206163	3					
ANR	5206213	Condition	written < 0	371:8:10904:10914	5206163	0	True				
ANR	5206214	RelationalExpression	written < 0		5206163	0		<			
ANR	5206215	Identifier	written		5206163	0					
ANR	5206216	PrimaryExpression	0		5206163	1					
ANR	5206217	ReturnStatement	return ERRC ;	371:21:10917:10928	5206163	1	True				
ANR	5206218	Identifier	ERRC		5206163	0					
ANR	5206219	ExpressionStatement	pr -> ptr += written	372:4:10934:10952	5206163	4	True				
ANR	5206220	AssignmentExpression	pr -> ptr += written		5206163	0		+=			
ANR	5206221	PtrMemberAccess	pr -> ptr		5206163	0					
ANR	5206222	Identifier	pr		5206163	0					
ANR	5206223	Identifier	ptr		5206163	1					
ANR	5206224	Identifier	written		5206163	1					
ANR	5206225	ReturnStatement	return 0 ;	373:4:10958:10966	5206163	5	True				
ANR	5206226	PrimaryExpression	0		5206163	0					
ANR	5206227	ReturnType	static int		5206163	1					
ANR	5206228	Identifier	s_ram_write_process		5206163	2					
ANR	5206229	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * ignore_pw , bool last"		5206163	3					
ANR	5206230	Parameter	stream_state * st	363:20:10647:10663	5206163	0	True				
ANR	5206231	ParameterType	stream_state *		5206163	0					
ANR	5206232	Identifier	st		5206163	1					
ANR	5206233	Parameter	stream_cursor_read * pr	363:39:10666:10688	5206163	1	True				
ANR	5206234	ParameterType	stream_cursor_read *		5206163	0					
ANR	5206235	Identifier	pr		5206163	1					
ANR	5206236	Parameter	stream_cursor_write * ignore_pw	364:4:10695:10725	5206163	2	True				
ANR	5206237	ParameterType	stream_cursor_write *		5206163	0					
ANR	5206238	Identifier	ignore_pw		5206163	1					
ANR	5206239	Parameter	bool last	364:37:10728:10736	5206163	3	True				
ANR	5206240	ParameterType	bool		5206163	0					
ANR	5206241	Identifier	last		5206163	1					
ANR	5206242	CFGEntryNode	ENTRY		5206163		True				
ANR	5206243	CFGExitNode	EXIT		5206163		True				
ANR	5206244	Symbol	st		5206163						
ANR	5206245	Symbol	pr		5206163						
ANR	5206246	Symbol	ignore_pw		5206163						
ANR	5206247	Symbol	last		5206163						
ANR	5206248	Symbol	* st		5206163						
ANR	5206249	Symbol	count		5206163						
ANR	5206250	Symbol	ramfile_write		5206163						
ANR	5206251	Symbol	* pr		5206163						
ANR	5206252	Symbol	pr -> limit		5206163						
ANR	5206253	Symbol	( ( stream * ) st ) -> file		5206163						
ANR	5206254	Symbol	file		5206163						
ANR	5206255	Symbol	written		5206163						
ANR	5206256	Symbol	pr -> ptr		5206163						
ANR	5206257	Symbol	ERRC		5206163						
ANR	5206258	Function	s_ram_switch	376:0:10971:11781							
ANR	5206259	FunctionDef	"s_ram_switch (stream * s , bool writing)"		5206258	0					
ANR	5206260	CompoundStatement		378:0:11021:11781	5206258	0					
ANR	5206261	IdentifierDeclStatement	uint modes = s -> file_modes ;	379:4:11027:11053	5206258	0	True				
ANR	5206262	IdentifierDecl	modes = s -> file_modes		5206258	0					
ANR	5206263	IdentifierDeclType	uint		5206258	0					
ANR	5206264	Identifier	modes		5206258	1					
ANR	5206265	AssignmentExpression	modes = s -> file_modes		5206258	2		=			
ANR	5206266	Identifier	modes		5206258	0					
ANR	5206267	PtrMemberAccess	s -> file_modes		5206258	1					
ANR	5206268	Identifier	s		5206258	0					
ANR	5206269	Identifier	file_modes		5206258	1					
ANR	5206270	IdentifierDeclStatement	ramhandle * file = ( ramhandle * ) s -> file ;	380:4:11059:11096	5206258	1	True				
ANR	5206271	IdentifierDecl	* file = ( ramhandle * ) s -> file		5206258	0					
ANR	5206272	IdentifierDeclType	ramhandle *		5206258	0					
ANR	5206273	Identifier	file		5206258	1					
ANR	5206274	AssignmentExpression	* file = ( ramhandle * ) s -> file		5206258	2		=			
ANR	5206275	Identifier	file		5206258	0					
ANR	5206276	CastExpression	( ramhandle * ) s -> file		5206258	1					
ANR	5206277	CastTarget	ramhandle *		5206258	0					
ANR	5206278	PtrMemberAccess	s -> file		5206258	1					
ANR	5206279	Identifier	s		5206258	0					
ANR	5206280	Identifier	file		5206258	1					
ANR	5206281	IdentifierDeclStatement	long pos ;	381:4:11102:11110	5206258	2	True				
ANR	5206282	IdentifierDecl	pos		5206258	0					
ANR	5206283	IdentifierDeclType	long		5206258	0					
ANR	5206284	Identifier	pos		5206258	1					
ANR	5206285	IfStatement	if ( writing )		5206258	3					
ANR	5206286	Condition	writing	383:8:11121:11127	5206258	0	True				
ANR	5206287	Identifier	writing		5206258	0					
ANR	5206288	CompoundStatement		6:17:108:108	5206258	1					
ANR	5206289	IfStatement	if ( ! ( s -> file_modes & s_mode_write ) )		5206258	0					
ANR	5206290	Condition	! ( s -> file_modes & s_mode_write )	384:8:11140:11170	5206258	0	True				
ANR	5206291	UnaryOperationExpression	! ( s -> file_modes & s_mode_write )		5206258	0					
ANR	5206292	UnaryOperator	!		5206258	0					
ANR	5206293	BitAndExpression	s -> file_modes & s_mode_write		5206258	1		&			
ANR	5206294	PtrMemberAccess	s -> file_modes		5206258	0					
ANR	5206295	Identifier	s		5206258	0					
ANR	5206296	Identifier	file_modes		5206258	1					
ANR	5206297	Identifier	s_mode_write		5206258	1					
ANR	5206298	ReturnStatement	return ERRC ;	384:41:11173:11184	5206258	1	True				
ANR	5206299	Identifier	ERRC		5206258	0					
ANR	5206300	ExpressionStatement	pos = stell ( s )	385:4:11190:11204	5206258	1	True				
ANR	5206301	AssignmentExpression	pos = stell ( s )		5206258	0		=			
ANR	5206302	Identifier	pos		5206258	0					
ANR	5206303	CallExpression	stell ( s )		5206258	1					
ANR	5206304	Callee	stell		5206258	0					
ANR	5206305	Identifier	stell		5206258	0					
ANR	5206306	ArgumentList	s		5206258	1					
ANR	5206307	Argument	s		5206258	0					
ANR	5206308	Identifier	s		5206258	0					
ANR	5206309	ExpressionStatement	"ramfile_seek ( file , pos , RAMFS_SEEK_SET )"	386:4:11210:11249	5206258	2	True				
ANR	5206310	CallExpression	"ramfile_seek ( file , pos , RAMFS_SEEK_SET )"		5206258	0					
ANR	5206311	Callee	ramfile_seek		5206258	0					
ANR	5206312	Identifier	ramfile_seek		5206258	0					
ANR	5206313	ArgumentList	file		5206258	1					
ANR	5206314	Argument	file		5206258	0					
ANR	5206315	Identifier	file		5206258	0					
ANR	5206316	Argument	pos		5206258	1					
ANR	5206317	Identifier	pos		5206258	0					
ANR	5206318	Argument	RAMFS_SEEK_SET		5206258	2					
ANR	5206319	Identifier	RAMFS_SEEK_SET		5206258	0					
ANR	5206320	IfStatement	if ( modes & s_mode_append )		5206258	3					
ANR	5206321	Condition	modes & s_mode_append	387:8:11259:11279	5206258	0	True				
ANR	5206322	BitAndExpression	modes & s_mode_append		5206258	0		&			
ANR	5206323	Identifier	modes		5206258	0					
ANR	5206324	Identifier	s_mode_append		5206258	1					
ANR	5206325	CompoundStatement		10:31:260:260	5206258	1					
ANR	5206326	ExpressionStatement	"sappend_ram ( s , file , s -> cbuf , s -> cbsize )"	388:8:11292:11332	5206258	0	True				
ANR	5206327	CallExpression	"sappend_ram ( s , file , s -> cbuf , s -> cbsize )"		5206258	0					
ANR	5206328	Callee	sappend_ram		5206258	0					
ANR	5206329	Identifier	sappend_ram		5206258	0					
ANR	5206330	ArgumentList	s		5206258	1					
ANR	5206331	Argument	s		5206258	0					
ANR	5206332	Identifier	s		5206258	0					
ANR	5206333	Argument	file		5206258	1					
ANR	5206334	Identifier	file		5206258	0					
ANR	5206335	Argument	s -> cbuf		5206258	2					
ANR	5206336	PtrMemberAccess	s -> cbuf		5206258	0					
ANR	5206337	Identifier	s		5206258	0					
ANR	5206338	Identifier	cbuf		5206258	1					
ANR	5206339	Argument	s -> cbsize		5206258	3					
ANR	5206340	PtrMemberAccess	s -> cbsize		5206258	0					
ANR	5206341	Identifier	s		5206258	0					
ANR	5206342	Identifier	cbsize		5206258	1					
ANR	5206343	ElseStatement	else		5206258	0					
ANR	5206344	CompoundStatement		12:11:346:346	5206258	0					
ANR	5206345	ExpressionStatement	"swrite_ram ( s , file , s -> cbuf , s -> cbsize )"	390:8:11378:11417	5206258	0	True				
ANR	5206346	CallExpression	"swrite_ram ( s , file , s -> cbuf , s -> cbsize )"		5206258	0					
ANR	5206347	Callee	swrite_ram		5206258	0					
ANR	5206348	Identifier	swrite_ram		5206258	0					
ANR	5206349	ArgumentList	s		5206258	1					
ANR	5206350	Argument	s		5206258	0					
ANR	5206351	Identifier	s		5206258	0					
ANR	5206352	Argument	file		5206258	1					
ANR	5206353	Identifier	file		5206258	0					
ANR	5206354	Argument	s -> cbuf		5206258	2					
ANR	5206355	PtrMemberAccess	s -> cbuf		5206258	0					
ANR	5206356	Identifier	s		5206258	0					
ANR	5206357	Identifier	cbuf		5206258	1					
ANR	5206358	Argument	s -> cbsize		5206258	3					
ANR	5206359	PtrMemberAccess	s -> cbsize		5206258	0					
ANR	5206360	Identifier	s		5206258	0					
ANR	5206361	Identifier	cbsize		5206258	1					
ANR	5206362	ExpressionStatement	s -> position = pos	391:8:11427:11444	5206258	1	True				
ANR	5206363	AssignmentExpression	s -> position = pos		5206258	0		=			
ANR	5206364	PtrMemberAccess	s -> position		5206258	0					
ANR	5206365	Identifier	s		5206258	0					
ANR	5206366	Identifier	position		5206258	1					
ANR	5206367	Identifier	pos		5206258	1					
ANR	5206368	ExpressionStatement	s -> modes = modes	393:4:11456:11472	5206258	4	True				
ANR	5206369	AssignmentExpression	s -> modes = modes		5206258	0		=			
ANR	5206370	PtrMemberAccess	s -> modes		5206258	0					
ANR	5206371	Identifier	s		5206258	0					
ANR	5206372	Identifier	modes		5206258	1					
ANR	5206373	Identifier	modes		5206258	1					
ANR	5206374	ElseStatement	else		5206258	0					
ANR	5206375	CompoundStatement		17:11:463:463	5206258	0					
ANR	5206376	IfStatement	if ( ! ( s -> file_modes & s_mode_read ) )		5206258	0					
ANR	5206377	Condition	! ( s -> file_modes & s_mode_read )	395:8:11495:11524	5206258	0	True				
ANR	5206378	UnaryOperationExpression	! ( s -> file_modes & s_mode_read )		5206258	0					
ANR	5206379	UnaryOperator	!		5206258	0					
ANR	5206380	BitAndExpression	s -> file_modes & s_mode_read		5206258	1		&			
ANR	5206381	PtrMemberAccess	s -> file_modes		5206258	0					
ANR	5206382	Identifier	s		5206258	0					
ANR	5206383	Identifier	file_modes		5206258	1					
ANR	5206384	Identifier	s_mode_read		5206258	1					
ANR	5206385	ReturnStatement	return ERRC ;	395:40:11527:11538	5206258	1	True				
ANR	5206386	Identifier	ERRC		5206258	0					
ANR	5206387	ExpressionStatement	pos = stell ( s )	396:4:11544:11558	5206258	1	True				
ANR	5206388	AssignmentExpression	pos = stell ( s )		5206258	0		=			
ANR	5206389	Identifier	pos		5206258	0					
ANR	5206390	CallExpression	stell ( s )		5206258	1					
ANR	5206391	Callee	stell		5206258	0					
ANR	5206392	Identifier	stell		5206258	0					
ANR	5206393	ArgumentList	s		5206258	1					
ANR	5206394	Argument	s		5206258	0					
ANR	5206395	Identifier	s		5206258	0					
ANR	5206396	IfStatement	if ( sflush ( s ) < 0 )		5206258	2					
ANR	5206397	Condition	sflush ( s ) < 0	397:8:11568:11580	5206258	0	True				
ANR	5206398	RelationalExpression	sflush ( s ) < 0		5206258	0		<			
ANR	5206399	CallExpression	sflush ( s )		5206258	0					
ANR	5206400	Callee	sflush		5206258	0					
ANR	5206401	Identifier	sflush		5206258	0					
ANR	5206402	ArgumentList	s		5206258	1					
ANR	5206403	Argument	s		5206258	0					
ANR	5206404	Identifier	s		5206258	0					
ANR	5206405	PrimaryExpression	0		5206258	1					
ANR	5206406	ReturnStatement	return ERRC ;	397:23:11583:11594	5206258	1	True				
ANR	5206407	Identifier	ERRC		5206258	0					
ANR	5206408	ExpressionStatement	"sread_ram ( s , file , s -> cbuf , s -> cbsize )"	398:4:11600:11638	5206258	3	True				
ANR	5206409	CallExpression	"sread_ram ( s , file , s -> cbuf , s -> cbsize )"		5206258	0					
ANR	5206410	Callee	sread_ram		5206258	0					
ANR	5206411	Identifier	sread_ram		5206258	0					
ANR	5206412	ArgumentList	s		5206258	1					
ANR	5206413	Argument	s		5206258	0					
ANR	5206414	Identifier	s		5206258	0					
ANR	5206415	Argument	file		5206258	1					
ANR	5206416	Identifier	file		5206258	0					
ANR	5206417	Argument	s -> cbuf		5206258	2					
ANR	5206418	PtrMemberAccess	s -> cbuf		5206258	0					
ANR	5206419	Identifier	s		5206258	0					
ANR	5206420	Identifier	cbuf		5206258	1					
ANR	5206421	Argument	s -> cbsize		5206258	3					
ANR	5206422	PtrMemberAccess	s -> cbsize		5206258	0					
ANR	5206423	Identifier	s		5206258	0					
ANR	5206424	Identifier	cbsize		5206258	1					
ANR	5206425	ExpressionStatement	s -> modes |= modes & s_mode_append	399:4:11644:11677	5206258	4	True				
ANR	5206426	AssignmentExpression	s -> modes |= modes & s_mode_append		5206258	0		|=			
ANR	5206427	PtrMemberAccess	s -> modes		5206258	0					
ANR	5206428	Identifier	s		5206258	0					
ANR	5206429	Identifier	modes		5206258	1					
ANR	5206430	BitAndExpression	modes & s_mode_append		5206258	1		&			
ANR	5206431	Identifier	modes		5206258	0					
ANR	5206432	Identifier	s_mode_append		5206258	1					
ANR	5206433	ExpressionStatement	s -> position = pos	400:4:11715:11732	5206258	5	True				
ANR	5206434	AssignmentExpression	s -> position = pos		5206258	0		=			
ANR	5206435	PtrMemberAccess	s -> position		5206258	0					
ANR	5206436	Identifier	s		5206258	0					
ANR	5206437	Identifier	position		5206258	1					
ANR	5206438	Identifier	pos		5206258	1					
ANR	5206439	ExpressionStatement	s -> file_modes = modes	402:4:11744:11765	5206258	4	True				
ANR	5206440	AssignmentExpression	s -> file_modes = modes		5206258	0		=			
ANR	5206441	PtrMemberAccess	s -> file_modes		5206258	0					
ANR	5206442	Identifier	s		5206258	0					
ANR	5206443	Identifier	file_modes		5206258	1					
ANR	5206444	Identifier	modes		5206258	1					
ANR	5206445	ReturnStatement	return 0 ;	403:4:11771:11779	5206258	5	True				
ANR	5206446	PrimaryExpression	0		5206258	0					
ANR	5206447	ReturnType	static int		5206258	1					
ANR	5206448	Identifier	s_ram_switch		5206258	2					
ANR	5206449	ParameterList	"stream * s , bool writing"		5206258	3					
ANR	5206450	Parameter	stream * s	377:13:10995:11004	5206258	0	True				
ANR	5206451	ParameterType	stream *		5206258	0					
ANR	5206452	Identifier	s		5206258	1					
ANR	5206453	Parameter	bool writing	377:25:11007:11018	5206258	1	True				
ANR	5206454	ParameterType	bool		5206258	0					
ANR	5206455	Identifier	writing		5206258	1					
ANR	5206456	CFGEntryNode	ENTRY		5206258		True				
ANR	5206457	CFGExitNode	EXIT		5206258		True				
ANR	5206458	Symbol	modes		5206258						
ANR	5206459	Symbol	s -> file		5206258						
ANR	5206460	Symbol	s -> position		5206258						
ANR	5206461	Symbol	s -> file_modes		5206258						
ANR	5206462	Symbol	s_mode_write		5206258						
ANR	5206463	Symbol	s -> cbuf		5206258						
ANR	5206464	Symbol	s_mode_append		5206258						
ANR	5206465	Symbol	stell		5206258						
ANR	5206466	Symbol	s -> cbsize		5206258						
ANR	5206467	Symbol	s		5206258						
ANR	5206468	Symbol	file		5206258						
ANR	5206469	Symbol	pos		5206258						
ANR	5206470	Symbol	writing		5206258						
ANR	5206471	Symbol	RAMFS_SEEK_SET		5206258						
ANR	5206472	Symbol	sflush		5206258						
ANR	5206473	Symbol	* s		5206258						
ANR	5206474	Symbol	s_mode_read		5206258						
ANR	5206475	Symbol	ERRC		5206258						
ANR	5206476	Symbol	s -> modes		5206258						
ANR	5206477	Function	iodev_ram_init	409:0:11811:12280							
ANR	5206478	FunctionDef	"iodev_ram_init (gx_io_device * iodev , gs_memory_t * mem)"		5206477	0					
ANR	5206479	CompoundStatement		411:0:11878:12280	5206477	0					
ANR	5206480	IdentifierDeclStatement	"ramfs * fs = ramfs_new ( mem , MAXBLOCKS ) ;"	412:4:11884:11921	5206477	0	True				
ANR	5206481	IdentifierDecl	"* fs = ramfs_new ( mem , MAXBLOCKS )"		5206477	0					
ANR	5206482	IdentifierDeclType	ramfs *		5206477	0					
ANR	5206483	Identifier	fs		5206477	1					
ANR	5206484	AssignmentExpression	"* fs = ramfs_new ( mem , MAXBLOCKS )"		5206477	2		=			
ANR	5206485	Identifier	fs		5206477	0					
ANR	5206486	CallExpression	"ramfs_new ( mem , MAXBLOCKS )"		5206477	1					
ANR	5206487	Callee	ramfs_new		5206477	0					
ANR	5206488	Identifier	ramfs_new		5206477	0					
ANR	5206489	ArgumentList	mem		5206477	1					
ANR	5206490	Argument	mem		5206477	0					
ANR	5206491	Identifier	mem		5206477	0					
ANR	5206492	Argument	MAXBLOCKS		5206477	1					
ANR	5206493	Identifier	MAXBLOCKS		5206477	0					
ANR	5206494	IdentifierDeclStatement	"ramfs_state * state = gs_alloc_struct ( mem , ramfs_state , & st_ramfs_state , ""ramfs_init(state)"" ) ;"	413:4:11927:12028	5206477	1	True				
ANR	5206495	IdentifierDecl	"* state = gs_alloc_struct ( mem , ramfs_state , & st_ramfs_state , ""ramfs_init(state)"" )"		5206477	0					
ANR	5206496	IdentifierDeclType	ramfs_state *		5206477	0					
ANR	5206497	Identifier	state		5206477	1					
ANR	5206498	AssignmentExpression	"* state = gs_alloc_struct ( mem , ramfs_state , & st_ramfs_state , ""ramfs_init(state)"" )"		5206477	2		=			
ANR	5206499	Identifier	state		5206477	0					
ANR	5206500	CallExpression	"gs_alloc_struct ( mem , ramfs_state , & st_ramfs_state , ""ramfs_init(state)"" )"		5206477	1					
ANR	5206501	Callee	gs_alloc_struct		5206477	0					
ANR	5206502	Identifier	gs_alloc_struct		5206477	0					
ANR	5206503	ArgumentList	mem		5206477	1					
ANR	5206504	Argument	mem		5206477	0					
ANR	5206505	Identifier	mem		5206477	0					
ANR	5206506	Argument	ramfs_state		5206477	1					
ANR	5206507	Identifier	ramfs_state		5206477	0					
ANR	5206508	Argument	& st_ramfs_state		5206477	2					
ANR	5206509	UnaryOperationExpression	& st_ramfs_state		5206477	0					
ANR	5206510	UnaryOperator	&		5206477	0					
ANR	5206511	Identifier	st_ramfs_state		5206477	1					
ANR	5206512	Argument	"""ramfs_init(state)"""		5206477	3					
ANR	5206513	PrimaryExpression	"""ramfs_init(state)"""		5206477	0					
ANR	5206514	IfStatement	if ( fs && state )		5206477	2					
ANR	5206515	Condition	fs && state	416:8:12038:12048	5206477	0	True				
ANR	5206516	AndExpression	fs && state		5206477	0		&&			
ANR	5206517	Identifier	fs		5206477	0					
ANR	5206518	Identifier	state		5206477	1					
ANR	5206519	CompoundStatement		6:21:172:172	5206477	1					
ANR	5206520	ExpressionStatement	state -> fs = fs	417:4:12057:12071	5206477	0	True				
ANR	5206521	AssignmentExpression	state -> fs = fs		5206477	0		=			
ANR	5206522	PtrMemberAccess	state -> fs		5206477	0					
ANR	5206523	Identifier	state		5206477	0					
ANR	5206524	Identifier	fs		5206477	1					
ANR	5206525	Identifier	fs		5206477	1					
ANR	5206526	ExpressionStatement	state -> memory = mem	418:4:12077:12096	5206477	1	True				
ANR	5206527	AssignmentExpression	state -> memory = mem		5206477	0		=			
ANR	5206528	PtrMemberAccess	state -> memory		5206477	0					
ANR	5206529	Identifier	state		5206477	0					
ANR	5206530	Identifier	memory		5206477	1					
ANR	5206531	Identifier	mem		5206477	1					
ANR	5206532	ExpressionStatement	iodev -> state = state	419:4:12102:12122	5206477	2	True				
ANR	5206533	AssignmentExpression	iodev -> state = state		5206477	0		=			
ANR	5206534	PtrMemberAccess	iodev -> state		5206477	0					
ANR	5206535	Identifier	iodev		5206477	0					
ANR	5206536	Identifier	state		5206477	1					
ANR	5206537	Identifier	state		5206477	1					
ANR	5206538	ReturnStatement	return 0 ;	420:4:12128:12136	5206477	3	True				
ANR	5206539	PrimaryExpression	0		5206477	0					
ANR	5206540	IfStatement	if ( fs )		5206477	3					
ANR	5206541	Condition	fs	422:7:12151:12152	5206477	0	True				
ANR	5206542	Identifier	fs		5206477	0					
ANR	5206543	ExpressionStatement	"ramfs_destroy ( mem , fs )"	422:11:12155:12177	5206477	1	True				
ANR	5206544	CallExpression	"ramfs_destroy ( mem , fs )"		5206477	0					
ANR	5206545	Callee	ramfs_destroy		5206477	0					
ANR	5206546	Identifier	ramfs_destroy		5206477	0					
ANR	5206547	ArgumentList	mem		5206477	1					
ANR	5206548	Argument	mem		5206477	0					
ANR	5206549	Identifier	mem		5206477	0					
ANR	5206550	Argument	fs		5206477	1					
ANR	5206551	Identifier	fs		5206477	0					
ANR	5206552	IfStatement	if ( state )		5206477	4					
ANR	5206553	Condition	state	423:7:12186:12190	5206477	0	True				
ANR	5206554	Identifier	state		5206477	0					
ANR	5206555	ExpressionStatement	"gs_free_object ( mem , state , ""iodev_ram_init(state)"" )"	423:14:12193:12242	5206477	1	True				
ANR	5206556	CallExpression	"gs_free_object ( mem , state , ""iodev_ram_init(state)"" )"		5206477	0					
ANR	5206557	Callee	gs_free_object		5206477	0					
ANR	5206558	Identifier	gs_free_object		5206477	0					
ANR	5206559	ArgumentList	mem		5206477	1					
ANR	5206560	Argument	mem		5206477	0					
ANR	5206561	Identifier	mem		5206477	0					
ANR	5206562	Argument	state		5206477	1					
ANR	5206563	Identifier	state		5206477	0					
ANR	5206564	Argument	"""iodev_ram_init(state)"""		5206477	2					
ANR	5206565	PrimaryExpression	"""iodev_ram_init(state)"""		5206477	0					
ANR	5206566	ExpressionStatement	return_error ( gs_error_VMerror )	424:4:12248:12278	5206477	5	True				
ANR	5206567	CallExpression	return_error ( gs_error_VMerror )		5206477	0					
ANR	5206568	Callee	return_error		5206477	0					
ANR	5206569	Identifier	return_error		5206477	0					
ANR	5206570	ArgumentList	gs_error_VMerror		5206477	1					
ANR	5206571	Argument	gs_error_VMerror		5206477	0					
ANR	5206572	Identifier	gs_error_VMerror		5206477	0					
ANR	5206573	ReturnType	static int		5206477	1					
ANR	5206574	Identifier	iodev_ram_init		5206477	2					
ANR	5206575	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		5206477	3					
ANR	5206576	Parameter	gx_io_device * iodev	410:15:11837:11856	5206477	0	True				
ANR	5206577	ParameterType	gx_io_device *		5206477	0					
ANR	5206578	Identifier	iodev		5206477	1					
ANR	5206579	Parameter	gs_memory_t * mem	410:37:11859:11875	5206477	1	True				
ANR	5206580	ParameterType	gs_memory_t *		5206477	0					
ANR	5206581	Identifier	mem		5206477	1					
ANR	5206582	CFGEntryNode	ENTRY		5206477		True				
ANR	5206583	CFGExitNode	EXIT		5206477		True				
ANR	5206584	Symbol	& st_ramfs_state		5206477						
ANR	5206585	Symbol	* iodev		5206477						
ANR	5206586	Symbol	gs_alloc_struct		5206477						
ANR	5206587	Symbol	ramfs_state		5206477						
ANR	5206588	Symbol	state -> fs		5206477						
ANR	5206589	Symbol	fs		5206477						
ANR	5206590	Symbol	ramfs_new		5206477						
ANR	5206591	Symbol	* state		5206477						
ANR	5206592	Symbol	gs_error_VMerror		5206477						
ANR	5206593	Symbol	MAXBLOCKS		5206477						
ANR	5206594	Symbol	iodev		5206477						
ANR	5206595	Symbol	mem		5206477						
ANR	5206596	Symbol	state -> memory		5206477						
ANR	5206597	Symbol	iodev -> state		5206477						
ANR	5206598	Symbol	state		5206477						
ANR	5206599	Function	iodev_ram_finit	427:0:12283:12549							
ANR	5206600	FunctionDef	"iodev_ram_finit (gx_io_device * iodev , gs_memory_t * mem)"		5206599	0					
ANR	5206601	CompoundStatement		429:0:12352:12549	5206599	0					
ANR	5206602	IdentifierDeclStatement	ramfs_state * state = ( ramfs_state * ) iodev -> state ;	430:4:12358:12406	5206599	0	True				
ANR	5206603	IdentifierDecl	* state = ( ramfs_state * ) iodev -> state		5206599	0					
ANR	5206604	IdentifierDeclType	ramfs_state *		5206599	0					
ANR	5206605	Identifier	state		5206599	1					
ANR	5206606	AssignmentExpression	* state = ( ramfs_state * ) iodev -> state		5206599	2		=			
ANR	5206607	Identifier	state		5206599	0					
ANR	5206608	CastExpression	( ramfs_state * ) iodev -> state		5206599	1					
ANR	5206609	CastTarget	ramfs_state *		5206599	0					
ANR	5206610	PtrMemberAccess	iodev -> state		5206599	1					
ANR	5206611	Identifier	iodev		5206599	0					
ANR	5206612	Identifier	state		5206599	1					
ANR	5206613	IfStatement	if ( state != NULL )		5206599	1					
ANR	5206614	Condition	state != NULL	431:8:12416:12428	5206599	0	True				
ANR	5206615	EqualityExpression	state != NULL		5206599	0		!=			
ANR	5206616	Identifier	state		5206599	0					
ANR	5206617	Identifier	NULL		5206599	1					
ANR	5206618	CompoundStatement		4:4:82:82	5206599	1					
ANR	5206619	ExpressionStatement	iodev -> state = NULL	433:8:12445:12464	5206599	0	True				
ANR	5206620	AssignmentExpression	iodev -> state = NULL		5206599	0		=			
ANR	5206621	PtrMemberAccess	iodev -> state		5206599	0					
ANR	5206622	Identifier	iodev		5206599	0					
ANR	5206623	Identifier	state		5206599	1					
ANR	5206624	Identifier	NULL		5206599	1					
ANR	5206625	ExpressionStatement	"gs_free_object ( state -> memory , state , ""iodev_ram_finit"" )"	434:8:12474:12529	5206599	1	True				
ANR	5206626	CallExpression	"gs_free_object ( state -> memory , state , ""iodev_ram_finit"" )"		5206599	0					
ANR	5206627	Callee	gs_free_object		5206599	0					
ANR	5206628	Identifier	gs_free_object		5206599	0					
ANR	5206629	ArgumentList	state -> memory		5206599	1					
ANR	5206630	Argument	state -> memory		5206599	0					
ANR	5206631	PtrMemberAccess	state -> memory		5206599	0					
ANR	5206632	Identifier	state		5206599	0					
ANR	5206633	Identifier	memory		5206599	1					
ANR	5206634	Argument	state		5206599	1					
ANR	5206635	Identifier	state		5206599	0					
ANR	5206636	Argument	"""iodev_ram_finit"""		5206599	2					
ANR	5206637	PrimaryExpression	"""iodev_ram_finit"""		5206599	0					
ANR	5206638	ReturnStatement	return ;	436:4:12541:12547	5206599	2	True				
ANR	5206639	ReturnType	static void		5206599	1					
ANR	5206640	Identifier	iodev_ram_finit		5206599	2					
ANR	5206641	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		5206599	3					
ANR	5206642	Parameter	gx_io_device * iodev	428:16:12311:12330	5206599	0	True				
ANR	5206643	ParameterType	gx_io_device *		5206599	0					
ANR	5206644	Identifier	iodev		5206599	1					
ANR	5206645	Parameter	gs_memory_t * mem	428:38:12333:12349	5206599	1	True				
ANR	5206646	ParameterType	gs_memory_t *		5206599	0					
ANR	5206647	Identifier	mem		5206599	1					
ANR	5206648	CFGEntryNode	ENTRY		5206599		True				
ANR	5206649	CFGExitNode	EXIT		5206599		True				
ANR	5206650	Symbol	* state		5206599						
ANR	5206651	Symbol	NULL		5206599						
ANR	5206652	Symbol	iodev		5206599						
ANR	5206653	Symbol	mem		5206599						
ANR	5206654	Symbol	* iodev		5206599						
ANR	5206655	Symbol	state -> memory		5206599						
ANR	5206656	Symbol	iodev -> state		5206599						
ANR	5206657	Symbol	state		5206599						
ANR	5206658	Function	ram_finalize	439:0:12552:12752							
ANR	5206659	FunctionDef	"ram_finalize (const gs_memory_t * memory , void * vptr)"		5206658	0					
ANR	5206660	CompoundStatement		441:0:12617:12752	5206658	0					
ANR	5206661	IdentifierDeclStatement	ramfs * fs = GETRAMFS ( ( ramfs_state * ) vptr ) ;	442:4:12623:12663	5206658	0	True				
ANR	5206662	IdentifierDecl	* fs = GETRAMFS ( ( ramfs_state * ) vptr )		5206658	0					
ANR	5206663	IdentifierDeclType	ramfs *		5206658	0					
ANR	5206664	Identifier	fs		5206658	1					
ANR	5206665	AssignmentExpression	* fs = GETRAMFS ( ( ramfs_state * ) vptr )		5206658	2		=			
ANR	5206666	Identifier	fs		5206658	0					
ANR	5206667	CallExpression	GETRAMFS ( ( ramfs_state * ) vptr )		5206658	1					
ANR	5206668	Callee	GETRAMFS		5206658	0					
ANR	5206669	Identifier	GETRAMFS		5206658	0					
ANR	5206670	ArgumentList	( ramfs_state * ) vptr		5206658	1					
ANR	5206671	Argument	( ramfs_state * ) vptr		5206658	0					
ANR	5206672	CastExpression	( ramfs_state * ) vptr		5206658	0					
ANR	5206673	CastTarget	ramfs_state *		5206658	0					
ANR	5206674	Identifier	vptr		5206658	1					
ANR	5206675	ExpressionStatement	"ramfs_destroy ( ( gs_memory_t * ) memory , fs )"	443:4:12669:12709	5206658	1	True				
ANR	5206676	CallExpression	"ramfs_destroy ( ( gs_memory_t * ) memory , fs )"		5206658	0					
ANR	5206677	Callee	ramfs_destroy		5206658	0					
ANR	5206678	Identifier	ramfs_destroy		5206658	0					
ANR	5206679	ArgumentList	( gs_memory_t * ) memory		5206658	1					
ANR	5206680	Argument	( gs_memory_t * ) memory		5206658	0					
ANR	5206681	CastExpression	( gs_memory_t * ) memory		5206658	0					
ANR	5206682	CastTarget	gs_memory_t *		5206658	0					
ANR	5206683	Identifier	memory		5206658	1					
ANR	5206684	Argument	fs		5206658	1					
ANR	5206685	Identifier	fs		5206658	0					
ANR	5206686	ExpressionStatement	GETRAMFS ( ( ramfs_state * ) vptr ) = NULL	444:4:12715:12750	5206658	2	True				
ANR	5206687	AssignmentExpression	GETRAMFS ( ( ramfs_state * ) vptr ) = NULL		5206658	0		=			
ANR	5206688	CallExpression	GETRAMFS ( ( ramfs_state * ) vptr )		5206658	0					
ANR	5206689	Callee	GETRAMFS		5206658	0					
ANR	5206690	Identifier	GETRAMFS		5206658	0					
ANR	5206691	ArgumentList	( ramfs_state * ) vptr		5206658	1					
ANR	5206692	Argument	( ramfs_state * ) vptr		5206658	0					
ANR	5206693	CastExpression	( ramfs_state * ) vptr		5206658	0					
ANR	5206694	CastTarget	ramfs_state *		5206658	0					
ANR	5206695	Identifier	vptr		5206658	1					
ANR	5206696	Identifier	NULL		5206658	1					
ANR	5206697	ReturnType	static void		5206658	1					
ANR	5206698	Identifier	ram_finalize		5206658	2					
ANR	5206699	ParameterList	"const gs_memory_t * memory , void * vptr"		5206658	3					
ANR	5206700	Parameter	const gs_memory_t * memory	440:13:12577:12601	5206658	0	True				
ANR	5206701	ParameterType	const gs_memory_t *		5206658	0					
ANR	5206702	Identifier	memory		5206658	1					
ANR	5206703	Parameter	void * vptr	440:40:12604:12614	5206658	1	True				
ANR	5206704	ParameterType	void *		5206658	0					
ANR	5206705	Identifier	vptr		5206658	1					
ANR	5206706	CFGEntryNode	ENTRY		5206658		True				
ANR	5206707	CFGExitNode	EXIT		5206658		True				
ANR	5206708	Symbol	memory		5206658						
ANR	5206709	Symbol	NULL		5206658						
ANR	5206710	Symbol	fs		5206658						
ANR	5206711	Symbol	vptr		5206658						
ANR	5206712	Symbol	GETRAMFS		5206658						
ANR	5206713	Function	ram_delete	447:0:12755:12973							
ANR	5206714	FunctionDef	"ram_delete (gx_io_device * iodev , const char * fname)"		5206713	0					
ANR	5206715	CompoundStatement		449:0:12818:12973	5206713	0					
ANR	5206716	IdentifierDeclStatement	ramfs * fs = GETRAMFS ( iodev -> state ) ;	450:4:12824:12858	5206713	0	True				
ANR	5206717	IdentifierDecl	* fs = GETRAMFS ( iodev -> state )		5206713	0					
ANR	5206718	IdentifierDeclType	ramfs *		5206713	0					
ANR	5206719	Identifier	fs		5206713	1					
ANR	5206720	AssignmentExpression	* fs = GETRAMFS ( iodev -> state )		5206713	2		=			
ANR	5206721	Identifier	fs		5206713	0					
ANR	5206722	CallExpression	GETRAMFS ( iodev -> state )		5206713	1					
ANR	5206723	Callee	GETRAMFS		5206713	0					
ANR	5206724	Identifier	GETRAMFS		5206713	0					
ANR	5206725	ArgumentList	iodev -> state		5206713	1					
ANR	5206726	Argument	iodev -> state		5206713	0					
ANR	5206727	PtrMemberAccess	iodev -> state		5206713	0					
ANR	5206728	Identifier	iodev		5206713	0					
ANR	5206729	Identifier	state		5206713	1					
ANR	5206730	IfStatement	"if ( ramfs_unlink ( fs , fname ) != 0 )"		5206713	1					
ANR	5206731	Condition	"ramfs_unlink ( fs , fname ) != 0"	452:7:12868:12892	5206713	0	True				
ANR	5206732	EqualityExpression	"ramfs_unlink ( fs , fname ) != 0"		5206713	0		!=			
ANR	5206733	CallExpression	"ramfs_unlink ( fs , fname )"		5206713	0					
ANR	5206734	Callee	ramfs_unlink		5206713	0					
ANR	5206735	Identifier	ramfs_unlink		5206713	0					
ANR	5206736	ArgumentList	fs		5206713	1					
ANR	5206737	Argument	fs		5206713	0					
ANR	5206738	Identifier	fs		5206713	0					
ANR	5206739	Argument	fname		5206713	1					
ANR	5206740	Identifier	fname		5206713	0					
ANR	5206741	PrimaryExpression	0		5206713	1					
ANR	5206742	CompoundStatement		4:34:76:76	5206713	1					
ANR	5206743	ExpressionStatement	return_error ( ramfs_errno_to_code ( ramfs_error ( fs ) ) )	453:4:12901:12951	5206713	0	True				
ANR	5206744	CallExpression	return_error ( ramfs_errno_to_code ( ramfs_error ( fs ) ) )		5206713	0					
ANR	5206745	Callee	return_error		5206713	0					
ANR	5206746	Identifier	return_error		5206713	0					
ANR	5206747	ArgumentList	ramfs_errno_to_code ( ramfs_error ( fs ) )		5206713	1					
ANR	5206748	Argument	ramfs_errno_to_code ( ramfs_error ( fs ) )		5206713	0					
ANR	5206749	CallExpression	ramfs_errno_to_code ( ramfs_error ( fs ) )		5206713	0					
ANR	5206750	Callee	ramfs_errno_to_code		5206713	0					
ANR	5206751	Identifier	ramfs_errno_to_code		5206713	0					
ANR	5206752	ArgumentList	ramfs_error ( fs )		5206713	1					
ANR	5206753	Argument	ramfs_error ( fs )		5206713	0					
ANR	5206754	CallExpression	ramfs_error ( fs )		5206713	0					
ANR	5206755	Callee	ramfs_error		5206713	0					
ANR	5206756	Identifier	ramfs_error		5206713	0					
ANR	5206757	ArgumentList	fs		5206713	1					
ANR	5206758	Argument	fs		5206713	0					
ANR	5206759	Identifier	fs		5206713	0					
ANR	5206760	ReturnStatement	return 0 ;	455:4:12963:12971	5206713	2	True				
ANR	5206761	PrimaryExpression	0		5206713	0					
ANR	5206762	ReturnType	static int		5206713	1					
ANR	5206763	Identifier	ram_delete		5206713	2					
ANR	5206764	ParameterList	"gx_io_device * iodev , const char * fname"		5206713	3					
ANR	5206765	Parameter	gx_io_device * iodev	448:11:12777:12796	5206713	0	True				
ANR	5206766	ParameterType	gx_io_device *		5206713	0					
ANR	5206767	Identifier	iodev		5206713	1					
ANR	5206768	Parameter	const char * fname	448:33:12799:12815	5206713	1	True				
ANR	5206769	ParameterType	const char *		5206713	0					
ANR	5206770	Identifier	fname		5206713	1					
ANR	5206771	CFGEntryNode	ENTRY		5206713		True				
ANR	5206772	CFGExitNode	EXIT		5206713		True				
ANR	5206773	Symbol	ramfs_error		5206713						
ANR	5206774	Symbol	fname		5206713						
ANR	5206775	Symbol	iodev		5206713						
ANR	5206776	Symbol	* iodev		5206713						
ANR	5206777	Symbol	iodev -> state		5206713						
ANR	5206778	Symbol	ramfs_errno_to_code		5206713						
ANR	5206779	Symbol	ramfs_unlink		5206713						
ANR	5206780	Symbol	fs		5206713						
ANR	5206781	Symbol	GETRAMFS		5206713						
ANR	5206782	Function	ram_rename	458:0:12976:13211							
ANR	5206783	FunctionDef	"ram_rename (gx_io_device * iodev , const char * from , const char * to)"		5206782	0					
ANR	5206784	CompoundStatement		460:0:13054:13211	5206782	0					
ANR	5206785	IdentifierDeclStatement	ramfs * fs = GETRAMFS ( iodev -> state ) ;	461:4:13060:13094	5206782	0	True				
ANR	5206786	IdentifierDecl	* fs = GETRAMFS ( iodev -> state )		5206782	0					
ANR	5206787	IdentifierDeclType	ramfs *		5206782	0					
ANR	5206788	Identifier	fs		5206782	1					
ANR	5206789	AssignmentExpression	* fs = GETRAMFS ( iodev -> state )		5206782	2		=			
ANR	5206790	Identifier	fs		5206782	0					
ANR	5206791	CallExpression	GETRAMFS ( iodev -> state )		5206782	1					
ANR	5206792	Callee	GETRAMFS		5206782	0					
ANR	5206793	Identifier	GETRAMFS		5206782	0					
ANR	5206794	ArgumentList	iodev -> state		5206782	1					
ANR	5206795	Argument	iodev -> state		5206782	0					
ANR	5206796	PtrMemberAccess	iodev -> state		5206782	0					
ANR	5206797	Identifier	iodev		5206782	0					
ANR	5206798	Identifier	state		5206782	1					
ANR	5206799	IfStatement	"if ( ramfs_rename ( fs , from , to ) != 0 )"		5206782	1					
ANR	5206800	Condition	"ramfs_rename ( fs , from , to ) != 0"	463:7:13104:13130	5206782	0	True				
ANR	5206801	EqualityExpression	"ramfs_rename ( fs , from , to ) != 0"		5206782	0		!=			
ANR	5206802	CallExpression	"ramfs_rename ( fs , from , to )"		5206782	0					
ANR	5206803	Callee	ramfs_rename		5206782	0					
ANR	5206804	Identifier	ramfs_rename		5206782	0					
ANR	5206805	ArgumentList	fs		5206782	1					
ANR	5206806	Argument	fs		5206782	0					
ANR	5206807	Identifier	fs		5206782	0					
ANR	5206808	Argument	from		5206782	1					
ANR	5206809	Identifier	from		5206782	0					
ANR	5206810	Argument	to		5206782	2					
ANR	5206811	Identifier	to		5206782	0					
ANR	5206812	PrimaryExpression	0		5206782	1					
ANR	5206813	CompoundStatement		4:36:78:78	5206782	1					
ANR	5206814	ExpressionStatement	return_error ( ramfs_errno_to_code ( ramfs_error ( fs ) ) )	464:4:13139:13189	5206782	0	True				
ANR	5206815	CallExpression	return_error ( ramfs_errno_to_code ( ramfs_error ( fs ) ) )		5206782	0					
ANR	5206816	Callee	return_error		5206782	0					
ANR	5206817	Identifier	return_error		5206782	0					
ANR	5206818	ArgumentList	ramfs_errno_to_code ( ramfs_error ( fs ) )		5206782	1					
ANR	5206819	Argument	ramfs_errno_to_code ( ramfs_error ( fs ) )		5206782	0					
ANR	5206820	CallExpression	ramfs_errno_to_code ( ramfs_error ( fs ) )		5206782	0					
ANR	5206821	Callee	ramfs_errno_to_code		5206782	0					
ANR	5206822	Identifier	ramfs_errno_to_code		5206782	0					
ANR	5206823	ArgumentList	ramfs_error ( fs )		5206782	1					
ANR	5206824	Argument	ramfs_error ( fs )		5206782	0					
ANR	5206825	CallExpression	ramfs_error ( fs )		5206782	0					
ANR	5206826	Callee	ramfs_error		5206782	0					
ANR	5206827	Identifier	ramfs_error		5206782	0					
ANR	5206828	ArgumentList	fs		5206782	1					
ANR	5206829	Argument	fs		5206782	0					
ANR	5206830	Identifier	fs		5206782	0					
ANR	5206831	ReturnStatement	return 0 ;	466:4:13201:13209	5206782	2	True				
ANR	5206832	PrimaryExpression	0		5206782	0					
ANR	5206833	ReturnType	static int		5206782	1					
ANR	5206834	Identifier	ram_rename		5206782	2					
ANR	5206835	ParameterList	"gx_io_device * iodev , const char * from , const char * to"		5206782	3					
ANR	5206836	Parameter	gx_io_device * iodev	459:11:12998:13017	5206782	0	True				
ANR	5206837	ParameterType	gx_io_device *		5206782	0					
ANR	5206838	Identifier	iodev		5206782	1					
ANR	5206839	Parameter	const char * from	459:33:13020:13035	5206782	1	True				
ANR	5206840	ParameterType	const char *		5206782	0					
ANR	5206841	Identifier	from		5206782	1					
ANR	5206842	Parameter	const char * to	459:51:13038:13051	5206782	2	True				
ANR	5206843	ParameterType	const char *		5206782	0					
ANR	5206844	Identifier	to		5206782	1					
ANR	5206845	CFGEntryNode	ENTRY		5206782		True				
ANR	5206846	CFGExitNode	EXIT		5206782		True				
ANR	5206847	Symbol	ramfs_error		5206782						
ANR	5206848	Symbol	iodev		5206782						
ANR	5206849	Symbol	* iodev		5206782						
ANR	5206850	Symbol	iodev -> state		5206782						
ANR	5206851	Symbol	ramfs_errno_to_code		5206782						
ANR	5206852	Symbol	from		5206782						
ANR	5206853	Symbol	to		5206782						
ANR	5206854	Symbol	fs		5206782						
ANR	5206855	Symbol	ramfs_rename		5206782						
ANR	5206856	Symbol	GETRAMFS		5206782						
ANR	5206857	Function	ram_status	469:0:13214:13792							
ANR	5206858	FunctionDef	"ram_status (gx_io_device * iodev , const char * fname , struct stat * pstat)"		5206857	0					
ANR	5206859	CompoundStatement		471:0:13297:13792	5206857	0					
ANR	5206860	IdentifierDeclStatement	ramhandle * f ;	472:4:13303:13316	5206857	0	True				
ANR	5206861	IdentifierDecl	* f		5206857	0					
ANR	5206862	IdentifierDeclType	ramhandle *		5206857	0					
ANR	5206863	Identifier	f		5206857	1					
ANR	5206864	IdentifierDeclStatement	ramfs * fs = GETRAMFS ( iodev -> state ) ;	473:4:13322:13356	5206857	1	True				
ANR	5206865	IdentifierDecl	* fs = GETRAMFS ( iodev -> state )		5206857	0					
ANR	5206866	IdentifierDeclType	ramfs *		5206857	0					
ANR	5206867	Identifier	fs		5206857	1					
ANR	5206868	AssignmentExpression	* fs = GETRAMFS ( iodev -> state )		5206857	2		=			
ANR	5206869	Identifier	fs		5206857	0					
ANR	5206870	CallExpression	GETRAMFS ( iodev -> state )		5206857	1					
ANR	5206871	Callee	GETRAMFS		5206857	0					
ANR	5206872	Identifier	GETRAMFS		5206857	0					
ANR	5206873	ArgumentList	iodev -> state		5206857	1					
ANR	5206874	Argument	iodev -> state		5206857	0					
ANR	5206875	PtrMemberAccess	iodev -> state		5206857	0					
ANR	5206876	Identifier	iodev		5206857	0					
ANR	5206877	Identifier	state		5206857	1					
ANR	5206878	ExpressionStatement	"f = ramfs_open ( ( ( ramfs_state * ) iodev -> state ) -> memory , fs , fname , RAMFS_READ )"	475:4:13363:13437	5206857	2	True				
ANR	5206879	AssignmentExpression	"f = ramfs_open ( ( ( ramfs_state * ) iodev -> state ) -> memory , fs , fname , RAMFS_READ )"		5206857	0		=			
ANR	5206880	Identifier	f		5206857	0					
ANR	5206881	CallExpression	"ramfs_open ( ( ( ramfs_state * ) iodev -> state ) -> memory , fs , fname , RAMFS_READ )"		5206857	1					
ANR	5206882	Callee	ramfs_open		5206857	0					
ANR	5206883	Identifier	ramfs_open		5206857	0					
ANR	5206884	ArgumentList	( ( ramfs_state * ) iodev -> state ) -> memory		5206857	1					
ANR	5206885	Argument	( ( ramfs_state * ) iodev -> state ) -> memory		5206857	0					
ANR	5206886	PtrMemberAccess	( ( ramfs_state * ) iodev -> state ) -> memory		5206857	0					
ANR	5206887	CastExpression	( ramfs_state * ) iodev -> state		5206857	0					
ANR	5206888	CastTarget	ramfs_state *		5206857	0					
ANR	5206889	PtrMemberAccess	iodev -> state		5206857	1					
ANR	5206890	Identifier	iodev		5206857	0					
ANR	5206891	Identifier	state		5206857	1					
ANR	5206892	Identifier	memory		5206857	1					
ANR	5206893	Argument	fs		5206857	1					
ANR	5206894	Identifier	fs		5206857	0					
ANR	5206895	Argument	fname		5206857	2					
ANR	5206896	Identifier	fname		5206857	0					
ANR	5206897	Argument	RAMFS_READ		5206857	3					
ANR	5206898	Identifier	RAMFS_READ		5206857	0					
ANR	5206899	IfStatement	if ( ! f )		5206857	3					
ANR	5206900	Condition	! f	476:7:13446:13447	5206857	0	True				
ANR	5206901	UnaryOperationExpression	! f		5206857	0					
ANR	5206902	UnaryOperator	!		5206857	0					
ANR	5206903	Identifier	f		5206857	1					
ANR	5206904	ExpressionStatement	return_error ( ramfs_errno_to_code ( ramfs_error ( fs ) ) )	476:11:13450:13500	5206857	1	True				
ANR	5206905	CallExpression	return_error ( ramfs_errno_to_code ( ramfs_error ( fs ) ) )		5206857	0					
ANR	5206906	Callee	return_error		5206857	0					
ANR	5206907	Identifier	return_error		5206857	0					
ANR	5206908	ArgumentList	ramfs_errno_to_code ( ramfs_error ( fs ) )		5206857	1					
ANR	5206909	Argument	ramfs_errno_to_code ( ramfs_error ( fs ) )		5206857	0					
ANR	5206910	CallExpression	ramfs_errno_to_code ( ramfs_error ( fs ) )		5206857	0					
ANR	5206911	Callee	ramfs_errno_to_code		5206857	0					
ANR	5206912	Identifier	ramfs_errno_to_code		5206857	0					
ANR	5206913	ArgumentList	ramfs_error ( fs )		5206857	1					
ANR	5206914	Argument	ramfs_error ( fs )		5206857	0					
ANR	5206915	CallExpression	ramfs_error ( fs )		5206857	0					
ANR	5206916	Callee	ramfs_error		5206857	0					
ANR	5206917	Identifier	ramfs_error		5206857	0					
ANR	5206918	ArgumentList	fs		5206857	1					
ANR	5206919	Argument	fs		5206857	0					
ANR	5206920	Identifier	fs		5206857	0					
ANR	5206921	ExpressionStatement	"memset ( pstat , 0 , sizeof ( * pstat ) )"	478:4:13507:13539	5206857	4	True				
ANR	5206922	CallExpression	"memset ( pstat , 0 , sizeof ( * pstat ) )"		5206857	0					
ANR	5206923	Callee	memset		5206857	0					
ANR	5206924	Identifier	memset		5206857	0					
ANR	5206925	ArgumentList	pstat		5206857	1					
ANR	5206926	Argument	pstat		5206857	0					
ANR	5206927	Identifier	pstat		5206857	0					
ANR	5206928	Argument	0		5206857	1					
ANR	5206929	PrimaryExpression	0		5206857	0					
ANR	5206930	Argument	sizeof ( * pstat )		5206857	2					
ANR	5206931	SizeofExpression	sizeof ( * pstat )		5206857	0					
ANR	5206932	Sizeof	sizeof		5206857	0					
ANR	5206933	UnaryOperationExpression	* pstat		5206857	1					
ANR	5206934	UnaryOperator	*		5206857	0					
ANR	5206935	Identifier	pstat		5206857	1					
ANR	5206936	ExpressionStatement	pstat -> st_size = ramfile_size ( f )	479:4:13545:13577	5206857	5	True				
ANR	5206937	AssignmentExpression	pstat -> st_size = ramfile_size ( f )		5206857	0		=			
ANR	5206938	PtrMemberAccess	pstat -> st_size		5206857	0					
ANR	5206939	Identifier	pstat		5206857	0					
ANR	5206940	Identifier	st_size		5206857	1					
ANR	5206941	CallExpression	ramfile_size ( f )		5206857	1					
ANR	5206942	Callee	ramfile_size		5206857	0					
ANR	5206943	Identifier	ramfile_size		5206857	0					
ANR	5206944	ArgumentList	f		5206857	1					
ANR	5206945	Argument	f		5206857	0					
ANR	5206946	Identifier	f		5206857	0					
ANR	5206947	ExpressionStatement	ramfile_close ( f )	483:4:13760:13776	5206857	6	True				
ANR	5206948	CallExpression	ramfile_close ( f )		5206857	0					
ANR	5206949	Callee	ramfile_close		5206857	0					
ANR	5206950	Identifier	ramfile_close		5206857	0					
ANR	5206951	ArgumentList	f		5206857	1					
ANR	5206952	Argument	f		5206857	0					
ANR	5206953	Identifier	f		5206857	0					
ANR	5206954	ReturnStatement	return 0 ;	484:4:13782:13790	5206857	7	True				
ANR	5206955	PrimaryExpression	0		5206857	0					
ANR	5206956	ReturnType	static int		5206857	1					
ANR	5206957	Identifier	ram_status		5206857	2					
ANR	5206958	ParameterList	"gx_io_device * iodev , const char * fname , struct stat * pstat"		5206857	3					
ANR	5206959	Parameter	gx_io_device * iodev	470:11:13236:13255	5206857	0	True				
ANR	5206960	ParameterType	gx_io_device *		5206857	0					
ANR	5206961	Identifier	iodev		5206857	1					
ANR	5206962	Parameter	const char * fname	470:33:13258:13274	5206857	1	True				
ANR	5206963	ParameterType	const char *		5206857	0					
ANR	5206964	Identifier	fname		5206857	1					
ANR	5206965	Parameter	struct stat * pstat	470:52:13277:13294	5206857	2	True				
ANR	5206966	ParameterType	struct stat *		5206857	0					
ANR	5206967	Identifier	pstat		5206857	1					
ANR	5206968	CFGEntryNode	ENTRY		5206857		True				
ANR	5206969	CFGExitNode	EXIT		5206857		True				
ANR	5206970	Symbol	ramfs_error		5206857						
ANR	5206971	Symbol	pstat -> st_size		5206857						
ANR	5206972	Symbol	fname		5206857						
ANR	5206973	Symbol	pstat		5206857						
ANR	5206974	Symbol	* iodev		5206857						
ANR	5206975	Symbol	f		5206857						
ANR	5206976	Symbol	ramfs_errno_to_code		5206857						
ANR	5206977	Symbol	fs		5206857						
ANR	5206978	Symbol	* iodev -> state		5206857						
ANR	5206979	Symbol	GETRAMFS		5206857						
ANR	5206980	Symbol	* pstat		5206857						
ANR	5206981	Symbol	RAMFS_READ		5206857						
ANR	5206982	Symbol	iodev		5206857						
ANR	5206983	Symbol	ramfs_open		5206857						
ANR	5206984	Symbol	ramfile_size		5206857						
ANR	5206985	Symbol	iodev -> state		5206857						
ANR	5206986	Symbol	( ( ramfs_state * ) iodev -> state ) -> memory		5206857						
ANR	5206987	Symbol	* * iodev		5206857						
ANR	5206988	Function	ram_enumerate_init	487:0:13795:14599							
ANR	5206989	FunctionDef	"ram_enumerate_init (gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem)"		5206988	0					
ANR	5206990	CompoundStatement		490:0:13906:14599	5206988	0					
ANR	5206991	IdentifierDeclStatement	"gsram_enum * penum = gs_alloc_struct ( mem , gsram_enum , & st_gsram_enum , ""ram_enumerate_files_init(file_enum)"" ) ;"	491:4:13912:14034	5206988	0	True				
ANR	5206992	IdentifierDecl	"* penum = gs_alloc_struct ( mem , gsram_enum , & st_gsram_enum , ""ram_enumerate_files_init(file_enum)"" )"		5206988	0					
ANR	5206993	IdentifierDeclType	gsram_enum *		5206988	0					
ANR	5206994	Identifier	penum		5206988	1					
ANR	5206995	AssignmentExpression	"* penum = gs_alloc_struct ( mem , gsram_enum , & st_gsram_enum , ""ram_enumerate_files_init(file_enum)"" )"		5206988	2		=			
ANR	5206996	Identifier	penum		5206988	0					
ANR	5206997	CallExpression	"gs_alloc_struct ( mem , gsram_enum , & st_gsram_enum , ""ram_enumerate_files_init(file_enum)"" )"		5206988	1					
ANR	5206998	Callee	gs_alloc_struct		5206988	0					
ANR	5206999	Identifier	gs_alloc_struct		5206988	0					
ANR	5207000	ArgumentList	mem		5206988	1					
ANR	5207001	Argument	mem		5206988	0					
ANR	5207002	Identifier	mem		5206988	0					
ANR	5207003	Argument	gsram_enum		5206988	1					
ANR	5207004	Identifier	gsram_enum		5206988	0					
ANR	5207005	Argument	& st_gsram_enum		5206988	2					
ANR	5207006	UnaryOperationExpression	& st_gsram_enum		5206988	0					
ANR	5207007	UnaryOperator	&		5206988	0					
ANR	5207008	Identifier	st_gsram_enum		5206988	1					
ANR	5207009	Argument	"""ram_enumerate_files_init(file_enum)"""		5206988	3					
ANR	5207010	PrimaryExpression	"""ram_enumerate_files_init(file_enum)"""		5206988	0					
ANR	5207011	IdentifierDeclStatement	"char * pattern = ( char * ) gs_alloc_bytes ( mem , patlen + 1 , ""ram_enumerate_file_init(pattern)"" ) ;"	495:4:14040:14139	5206988	1	True				
ANR	5207012	IdentifierDecl	"* pattern = ( char * ) gs_alloc_bytes ( mem , patlen + 1 , ""ram_enumerate_file_init(pattern)"" )"		5206988	0					
ANR	5207013	IdentifierDeclType	char *		5206988	0					
ANR	5207014	Identifier	pattern		5206988	1					
ANR	5207015	AssignmentExpression	"* pattern = ( char * ) gs_alloc_bytes ( mem , patlen + 1 , ""ram_enumerate_file_init(pattern)"" )"		5206988	2		=			
ANR	5207016	Identifier	pattern		5206988	0					
ANR	5207017	CastExpression	"( char * ) gs_alloc_bytes ( mem , patlen + 1 , ""ram_enumerate_file_init(pattern)"" )"		5206988	1					
ANR	5207018	CastTarget	char *		5206988	0					
ANR	5207019	CallExpression	"gs_alloc_bytes ( mem , patlen + 1 , ""ram_enumerate_file_init(pattern)"" )"		5206988	1					
ANR	5207020	Callee	gs_alloc_bytes		5206988	0					
ANR	5207021	Identifier	gs_alloc_bytes		5206988	0					
ANR	5207022	ArgumentList	mem		5206988	1					
ANR	5207023	Argument	mem		5206988	0					
ANR	5207024	Identifier	mem		5206988	0					
ANR	5207025	Argument	patlen + 1		5206988	1					
ANR	5207026	AdditiveExpression	patlen + 1		5206988	0		+			
ANR	5207027	Identifier	patlen		5206988	0					
ANR	5207028	PrimaryExpression	1		5206988	1					
ANR	5207029	Argument	"""ram_enumerate_file_init(pattern)"""		5206988	2					
ANR	5207030	PrimaryExpression	"""ram_enumerate_file_init(pattern)"""		5206988	0					
ANR	5207031	IdentifierDeclStatement	ramfs_enum * e = ramfs_enum_new ( GETRAMFS ( iodev -> state ) ) ;	498:4:14145:14200	5206988	2	True				
ANR	5207032	IdentifierDecl	* e = ramfs_enum_new ( GETRAMFS ( iodev -> state ) )		5206988	0					
ANR	5207033	IdentifierDeclType	ramfs_enum *		5206988	0					
ANR	5207034	Identifier	e		5206988	1					
ANR	5207035	AssignmentExpression	* e = ramfs_enum_new ( GETRAMFS ( iodev -> state ) )		5206988	2		=			
ANR	5207036	Identifier	e		5206988	0					
ANR	5207037	CallExpression	ramfs_enum_new ( GETRAMFS ( iodev -> state ) )		5206988	1					
ANR	5207038	Callee	ramfs_enum_new		5206988	0					
ANR	5207039	Identifier	ramfs_enum_new		5206988	0					
ANR	5207040	ArgumentList	GETRAMFS ( iodev -> state )		5206988	1					
ANR	5207041	Argument	GETRAMFS ( iodev -> state )		5206988	0					
ANR	5207042	CallExpression	GETRAMFS ( iodev -> state )		5206988	0					
ANR	5207043	Callee	GETRAMFS		5206988	0					
ANR	5207044	Identifier	GETRAMFS		5206988	0					
ANR	5207045	ArgumentList	iodev -> state		5206988	1					
ANR	5207046	Argument	iodev -> state		5206988	0					
ANR	5207047	PtrMemberAccess	iodev -> state		5206988	0					
ANR	5207048	Identifier	iodev		5206988	0					
ANR	5207049	Identifier	state		5206988	1					
ANR	5207050	IfStatement	if ( penum && pattern && e )		5206988	3					
ANR	5207051	Condition	penum && pattern && e	499:7:14209:14229	5206988	0	True				
ANR	5207052	AndExpression	penum && pattern && e		5206988	0		&&			
ANR	5207053	Identifier	penum		5206988	0					
ANR	5207054	AndExpression	pattern && e		5206988	1		&&			
ANR	5207055	Identifier	pattern		5206988	0					
ANR	5207056	Identifier	e		5206988	1					
ANR	5207057	CompoundStatement		10:30:325:325	5206988	1					
ANR	5207058	ExpressionStatement	"memcpy ( pattern , pat , patlen )"	500:4:14238:14266	5206988	0	True				
ANR	5207059	CallExpression	"memcpy ( pattern , pat , patlen )"		5206988	0					
ANR	5207060	Callee	memcpy		5206988	0					
ANR	5207061	Identifier	memcpy		5206988	0					
ANR	5207062	ArgumentList	pattern		5206988	1					
ANR	5207063	Argument	pattern		5206988	0					
ANR	5207064	Identifier	pattern		5206988	0					
ANR	5207065	Argument	pat		5206988	1					
ANR	5207066	Identifier	pat		5206988	0					
ANR	5207067	Argument	patlen		5206988	2					
ANR	5207068	Identifier	patlen		5206988	0					
ANR	5207069	ExpressionStatement	pattern [ patlen ] = 0	501:4:14272:14289	5206988	1	True				
ANR	5207070	AssignmentExpression	pattern [ patlen ] = 0		5206988	0		=			
ANR	5207071	ArrayIndexing	pattern [ patlen ]		5206988	0					
ANR	5207072	Identifier	pattern		5206988	0					
ANR	5207073	Identifier	patlen		5206988	1					
ANR	5207074	PrimaryExpression	0		5206988	1					
ANR	5207075	ExpressionStatement	penum -> memory = mem	503:4:14296:14315	5206988	2	True				
ANR	5207076	AssignmentExpression	penum -> memory = mem		5206988	0		=			
ANR	5207077	PtrMemberAccess	penum -> memory		5206988	0					
ANR	5207078	Identifier	penum		5206988	0					
ANR	5207079	Identifier	memory		5206988	1					
ANR	5207080	Identifier	mem		5206988	1					
ANR	5207081	ExpressionStatement	penum -> pattern = pattern	504:4:14321:14345	5206988	3	True				
ANR	5207082	AssignmentExpression	penum -> pattern = pattern		5206988	0		=			
ANR	5207083	PtrMemberAccess	penum -> pattern		5206988	0					
ANR	5207084	Identifier	penum		5206988	0					
ANR	5207085	Identifier	pattern		5206988	1					
ANR	5207086	Identifier	pattern		5206988	1					
ANR	5207087	ExpressionStatement	penum -> e = e	505:4:14351:14363	5206988	4	True				
ANR	5207088	AssignmentExpression	penum -> e = e		5206988	0		=			
ANR	5207089	PtrMemberAccess	penum -> e		5206988	0					
ANR	5207090	Identifier	penum		5206988	0					
ANR	5207091	Identifier	e		5206988	1					
ANR	5207092	Identifier	e		5206988	1					
ANR	5207093	ReturnStatement	return ( file_enum * ) penum ;	506:4:14369:14394	5206988	5	True				
ANR	5207094	CastExpression	( file_enum * ) penum		5206988	0					
ANR	5207095	CastTarget	file_enum *		5206988	0					
ANR	5207096	Identifier	penum		5206988	1					
ANR	5207097	IfStatement	if ( penum )		5206988	4					
ANR	5207098	Condition	penum	508:8:14410:14414	5206988	0	True				
ANR	5207099	Identifier	penum		5206988	0					
ANR	5207100	ExpressionStatement	"gs_free_object ( mem , penum , ""ramfs_enum_init(ramfs_enum)"" )"	508:15:14417:14472	5206988	1	True				
ANR	5207101	CallExpression	"gs_free_object ( mem , penum , ""ramfs_enum_init(ramfs_enum)"" )"		5206988	0					
ANR	5207102	Callee	gs_free_object		5206988	0					
ANR	5207103	Identifier	gs_free_object		5206988	0					
ANR	5207104	ArgumentList	mem		5206988	1					
ANR	5207105	Argument	mem		5206988	0					
ANR	5207106	Identifier	mem		5206988	0					
ANR	5207107	Argument	penum		5206988	1					
ANR	5207108	Identifier	penum		5206988	0					
ANR	5207109	Argument	"""ramfs_enum_init(ramfs_enum)"""		5206988	2					
ANR	5207110	PrimaryExpression	"""ramfs_enum_init(ramfs_enum)"""		5206988	0					
ANR	5207111	IfStatement	if ( pattern )		5206988	5					
ANR	5207112	Condition	pattern	509:8:14482:14488	5206988	0	True				
ANR	5207113	Identifier	pattern		5206988	0					
ANR	5207114	ExpressionStatement	"gs_free_object ( mem , pattern , ""ramfs_enum_init(pattern)"" )"	510:4:14495:14551	5206988	1	True				
ANR	5207115	CallExpression	"gs_free_object ( mem , pattern , ""ramfs_enum_init(pattern)"" )"		5206988	0					
ANR	5207116	Callee	gs_free_object		5206988	0					
ANR	5207117	Identifier	gs_free_object		5206988	0					
ANR	5207118	ArgumentList	mem		5206988	1					
ANR	5207119	Argument	mem		5206988	0					
ANR	5207120	Identifier	mem		5206988	0					
ANR	5207121	Argument	pattern		5206988	1					
ANR	5207122	Identifier	pattern		5206988	0					
ANR	5207123	Argument	"""ramfs_enum_init(pattern)"""		5206988	2					
ANR	5207124	PrimaryExpression	"""ramfs_enum_init(pattern)"""		5206988	0					
ANR	5207125	IfStatement	if ( e )		5206988	6					
ANR	5207126	Condition	e	511:7:14560:14560	5206988	0	True				
ANR	5207127	Identifier	e		5206988	0					
ANR	5207128	ExpressionStatement	ramfs_enum_end ( e )	511:10:14563:14580	5206988	1	True				
ANR	5207129	CallExpression	ramfs_enum_end ( e )		5206988	0					
ANR	5207130	Callee	ramfs_enum_end		5206988	0					
ANR	5207131	Identifier	ramfs_enum_end		5206988	0					
ANR	5207132	ArgumentList	e		5206988	1					
ANR	5207133	Argument	e		5206988	0					
ANR	5207134	Identifier	e		5206988	0					
ANR	5207135	ReturnStatement	return NULL ;	512:4:14586:14597	5206988	7	True				
ANR	5207136	Identifier	NULL		5206988	0					
ANR	5207137	ReturnType	static file_enum *		5206988	1					
ANR	5207138	Identifier	ram_enumerate_init		5206988	2					
ANR	5207139	ParameterList	"gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem"		5206988	3					
ANR	5207140	Parameter	gx_io_device * iodev	488:19:13833:13851	5206988	0	True				
ANR	5207141	ParameterType	gx_io_device *		5206988	0					
ANR	5207142	Identifier	iodev		5206988	1					
ANR	5207143	Parameter	const char * pat	488:40:13854:13868	5206988	1	True				
ANR	5207144	ParameterType	const char *		5206988	0					
ANR	5207145	Identifier	pat		5206988	1					
ANR	5207146	Parameter	uint patlen	488:57:13871:13881	5206988	2	True				
ANR	5207147	ParameterType	uint		5206988	0					
ANR	5207148	Identifier	patlen		5206988	1					
ANR	5207149	Parameter	gs_memory_t * mem	489:4:13888:13903	5206988	3	True				
ANR	5207150	ParameterType	gs_memory_t *		5206988	0					
ANR	5207151	Identifier	mem		5206988	1					
ANR	5207152	CFGEntryNode	ENTRY		5206988		True				
ANR	5207153	CFGExitNode	EXIT		5206988		True				
ANR	5207154	Symbol	* penum		5206988						
ANR	5207155	Symbol	pat		5206988						
ANR	5207156	Symbol	gs_alloc_bytes		5206988						
ANR	5207157	Symbol	* pattern		5206988						
ANR	5207158	Symbol	NULL		5206988						
ANR	5207159	Symbol	penum -> memory		5206988						
ANR	5207160	Symbol	e		5206988						
ANR	5207161	Symbol	* iodev		5206988						
ANR	5207162	Symbol	gs_alloc_struct		5206988						
ANR	5207163	Symbol	penum		5206988						
ANR	5207164	Symbol	pattern		5206988						
ANR	5207165	Symbol	& st_gsram_enum		5206988						
ANR	5207166	Symbol	* patlen		5206988						
ANR	5207167	Symbol	GETRAMFS		5206988						
ANR	5207168	Symbol	ramfs_enum_new		5206988						
ANR	5207169	Symbol	penum -> e		5206988						
ANR	5207170	Symbol	iodev		5206988						
ANR	5207171	Symbol	mem		5206988						
ANR	5207172	Symbol	penum -> pattern		5206988						
ANR	5207173	Symbol	iodev -> state		5206988						
ANR	5207174	Symbol	gsram_enum		5206988						
ANR	5207175	Symbol	patlen		5206988						
ANR	5207176	Function	ram_enumerate_close	515:0:14602:14898							
ANR	5207177	FunctionDef	ram_enumerate_close (file_enum * pfen)		5207176	0					
ANR	5207178	CompoundStatement		517:0:14651:14898	5207176	0					
ANR	5207179	IdentifierDeclStatement	gsram_enum * penum = ( gsram_enum * ) pfen ;	518:4:14657:14695	5207176	0	True				
ANR	5207180	IdentifierDecl	* penum = ( gsram_enum * ) pfen		5207176	0					
ANR	5207181	IdentifierDeclType	gsram_enum *		5207176	0					
ANR	5207182	Identifier	penum		5207176	1					
ANR	5207183	AssignmentExpression	* penum = ( gsram_enum * ) pfen		5207176	2		=			
ANR	5207184	Identifier	penum		5207176	0					
ANR	5207185	CastExpression	( gsram_enum * ) pfen		5207176	1					
ANR	5207186	CastTarget	gsram_enum *		5207176	0					
ANR	5207187	Identifier	pfen		5207176	1					
ANR	5207188	IdentifierDeclStatement	gs_memory_t * mem = penum -> memory ;	519:4:14701:14733	5207176	1	True				
ANR	5207189	IdentifierDecl	* mem = penum -> memory		5207176	0					
ANR	5207190	IdentifierDeclType	gs_memory_t *		5207176	0					
ANR	5207191	Identifier	mem		5207176	1					
ANR	5207192	AssignmentExpression	* mem = penum -> memory		5207176	2		=			
ANR	5207193	Identifier	mem		5207176	0					
ANR	5207194	PtrMemberAccess	penum -> memory		5207176	1					
ANR	5207195	Identifier	penum		5207176	0					
ANR	5207196	Identifier	memory		5207176	1					
ANR	5207197	ExpressionStatement	ramfs_enum_end ( penum -> e )	521:4:14740:14764	5207176	2	True				
ANR	5207198	CallExpression	ramfs_enum_end ( penum -> e )		5207176	0					
ANR	5207199	Callee	ramfs_enum_end		5207176	0					
ANR	5207200	Identifier	ramfs_enum_end		5207176	0					
ANR	5207201	ArgumentList	penum -> e		5207176	1					
ANR	5207202	Argument	penum -> e		5207176	0					
ANR	5207203	PtrMemberAccess	penum -> e		5207176	0					
ANR	5207204	Identifier	penum		5207176	0					
ANR	5207205	Identifier	e		5207176	1					
ANR	5207206	ExpressionStatement	"gs_free_object ( mem , penum -> pattern , ""ramfs_enum_init(pattern)"" )"	522:4:14770:14833	5207176	3	True				
ANR	5207207	CallExpression	"gs_free_object ( mem , penum -> pattern , ""ramfs_enum_init(pattern)"" )"		5207176	0					
ANR	5207208	Callee	gs_free_object		5207176	0					
ANR	5207209	Identifier	gs_free_object		5207176	0					
ANR	5207210	ArgumentList	mem		5207176	1					
ANR	5207211	Argument	mem		5207176	0					
ANR	5207212	Identifier	mem		5207176	0					
ANR	5207213	Argument	penum -> pattern		5207176	1					
ANR	5207214	PtrMemberAccess	penum -> pattern		5207176	0					
ANR	5207215	Identifier	penum		5207176	0					
ANR	5207216	Identifier	pattern		5207176	1					
ANR	5207217	Argument	"""ramfs_enum_init(pattern)"""		5207176	2					
ANR	5207218	PrimaryExpression	"""ramfs_enum_init(pattern)"""		5207176	0					
ANR	5207219	ExpressionStatement	"gs_free_object ( mem , penum , ""ramfs_enum_init(ramfs_enum)"" )"	523:4:14839:14896	5207176	4	True				
ANR	5207220	CallExpression	"gs_free_object ( mem , penum , ""ramfs_enum_init(ramfs_enum)"" )"		5207176	0					
ANR	5207221	Callee	gs_free_object		5207176	0					
ANR	5207222	Identifier	gs_free_object		5207176	0					
ANR	5207223	ArgumentList	mem		5207176	1					
ANR	5207224	Argument	mem		5207176	0					
ANR	5207225	Identifier	mem		5207176	0					
ANR	5207226	Argument	penum		5207176	1					
ANR	5207227	Identifier	penum		5207176	0					
ANR	5207228	Argument	"""ramfs_enum_init(ramfs_enum)"""		5207176	2					
ANR	5207229	PrimaryExpression	"""ramfs_enum_init(ramfs_enum)"""		5207176	0					
ANR	5207230	ReturnType	static void		5207176	1					
ANR	5207231	Identifier	ram_enumerate_close		5207176	2					
ANR	5207232	ParameterList	file_enum * pfen		5207176	3					
ANR	5207233	Parameter	file_enum * pfen	516:20:14634:14648	5207176	0	True				
ANR	5207234	ParameterType	file_enum *		5207176	0					
ANR	5207235	Identifier	pfen		5207176	1					
ANR	5207236	CFGEntryNode	ENTRY		5207176		True				
ANR	5207237	CFGExitNode	EXIT		5207176		True				
ANR	5207238	Symbol	* penum		5207176						
ANR	5207239	Symbol	penum -> e		5207176						
ANR	5207240	Symbol	penum -> memory		5207176						
ANR	5207241	Symbol	mem		5207176						
ANR	5207242	Symbol	penum -> pattern		5207176						
ANR	5207243	Symbol	penum		5207176						
ANR	5207244	Symbol	pfen		5207176						
ANR	5207245	Function	ram_enumerate_next	526:0:14901:15504							
ANR	5207246	FunctionDef	"ram_enumerate_next (file_enum * pfen , char * ptr , uint maxlen)"		5207245	0					
ANR	5207247	CompoundStatement		528:0:14973:15504	5207245	0					
ANR	5207248	IdentifierDeclStatement	gsram_enum * penum = ( gsram_enum * ) pfen ;	529:4:14979:15017	5207245	0	True				
ANR	5207249	IdentifierDecl	* penum = ( gsram_enum * ) pfen		5207245	0					
ANR	5207250	IdentifierDeclType	gsram_enum *		5207245	0					
ANR	5207251	Identifier	penum		5207245	1					
ANR	5207252	AssignmentExpression	* penum = ( gsram_enum * ) pfen		5207245	2		=			
ANR	5207253	Identifier	penum		5207245	0					
ANR	5207254	CastExpression	( gsram_enum * ) pfen		5207245	1					
ANR	5207255	CastTarget	gsram_enum *		5207245	0					
ANR	5207256	Identifier	pfen		5207245	1					
ANR	5207257	IdentifierDeclStatement	char * filename ;	531:4:15024:15039	5207245	1	True				
ANR	5207258	IdentifierDecl	* filename		5207245	0					
ANR	5207259	IdentifierDeclType	char *		5207245	0					
ANR	5207260	Identifier	filename		5207245	1					
ANR	5207261	WhileStatement	while ( ( filename = ramfs_enum_next ( penum -> e ) ) )		5207245	2					
ANR	5207262	Condition	filename = ramfs_enum_next ( penum -> e )	532:11:15052:15089	5207245	0	True				
ANR	5207263	AssignmentExpression	filename = ramfs_enum_next ( penum -> e )		5207245	0		=			
ANR	5207264	Identifier	filename		5207245	0					
ANR	5207265	CallExpression	ramfs_enum_next ( penum -> e )		5207245	1					
ANR	5207266	Callee	ramfs_enum_next		5207245	0					
ANR	5207267	Identifier	ramfs_enum_next		5207245	0					
ANR	5207268	ArgumentList	penum -> e		5207245	1					
ANR	5207269	Argument	penum -> e		5207245	0					
ANR	5207270	PtrMemberAccess	penum -> e		5207245	0					
ANR	5207271	Identifier	penum		5207245	0					
ANR	5207272	Identifier	e		5207245	1					
ANR	5207273	CompoundStatement		5:51:118:118	5207245	1					
ANR	5207274	IfStatement	"if ( string_match ( ( byte * ) filename , strlen ( filename ) , ( byte * ) penum -> pattern , strlen ( penum -> pattern ) , 0 ) )"		5207245	0					
ANR	5207275	Condition	"string_match ( ( byte * ) filename , strlen ( filename ) , ( byte * ) penum -> pattern , strlen ( penum -> pattern ) , 0 )"	533:8:15102:15216	5207245	0	True				
ANR	5207276	CallExpression	"string_match ( ( byte * ) filename , strlen ( filename ) , ( byte * ) penum -> pattern , strlen ( penum -> pattern ) , 0 )"		5207245	0					
ANR	5207277	Callee	string_match		5207245	0					
ANR	5207278	Identifier	string_match		5207245	0					
ANR	5207279	ArgumentList	( byte * ) filename		5207245	1					
ANR	5207280	Argument	( byte * ) filename		5207245	0					
ANR	5207281	CastExpression	( byte * ) filename		5207245	0					
ANR	5207282	CastTarget	byte *		5207245	0					
ANR	5207283	Identifier	filename		5207245	1					
ANR	5207284	Argument	strlen ( filename )		5207245	1					
ANR	5207285	CallExpression	strlen ( filename )		5207245	0					
ANR	5207286	Callee	strlen		5207245	0					
ANR	5207287	Identifier	strlen		5207245	0					
ANR	5207288	ArgumentList	filename		5207245	1					
ANR	5207289	Argument	filename		5207245	0					
ANR	5207290	Identifier	filename		5207245	0					
ANR	5207291	Argument	( byte * ) penum -> pattern		5207245	2					
ANR	5207292	CastExpression	( byte * ) penum -> pattern		5207245	0					
ANR	5207293	CastTarget	byte *		5207245	0					
ANR	5207294	PtrMemberAccess	penum -> pattern		5207245	1					
ANR	5207295	Identifier	penum		5207245	0					
ANR	5207296	Identifier	pattern		5207245	1					
ANR	5207297	Argument	strlen ( penum -> pattern )		5207245	3					
ANR	5207298	CallExpression	strlen ( penum -> pattern )		5207245	0					
ANR	5207299	Callee	strlen		5207245	0					
ANR	5207300	Identifier	strlen		5207245	0					
ANR	5207301	ArgumentList	penum -> pattern		5207245	1					
ANR	5207302	Argument	penum -> pattern		5207245	0					
ANR	5207303	PtrMemberAccess	penum -> pattern		5207245	0					
ANR	5207304	Identifier	penum		5207245	0					
ANR	5207305	Identifier	pattern		5207245	1					
ANR	5207306	Argument	0		5207245	4					
ANR	5207307	PrimaryExpression	0		5207245	0					
ANR	5207308	CompoundStatement		8:36:245:245	5207245	1					
ANR	5207309	IfStatement	if ( strlen ( filename ) < maxlen )		5207245	0					
ANR	5207310	Condition	strlen ( filename ) < maxlen	536:12:15233:15257	5207245	0	True				
ANR	5207311	RelationalExpression	strlen ( filename ) < maxlen		5207245	0		<			
ANR	5207312	CallExpression	strlen ( filename )		5207245	0					
ANR	5207313	Callee	strlen		5207245	0					
ANR	5207314	Identifier	strlen		5207245	0					
ANR	5207315	ArgumentList	filename		5207245	1					
ANR	5207316	Argument	filename		5207245	0					
ANR	5207317	Identifier	filename		5207245	0					
ANR	5207318	Identifier	maxlen		5207245	1					
ANR	5207319	ExpressionStatement	"memcpy ( ptr , filename , strlen ( filename ) )"	537:8:15268:15307	5207245	1	True				
ANR	5207320	CallExpression	"memcpy ( ptr , filename , strlen ( filename ) )"		5207245	0					
ANR	5207321	Callee	memcpy		5207245	0					
ANR	5207322	Identifier	memcpy		5207245	0					
ANR	5207323	ArgumentList	ptr		5207245	1					
ANR	5207324	Argument	ptr		5207245	0					
ANR	5207325	Identifier	ptr		5207245	0					
ANR	5207326	Argument	filename		5207245	1					
ANR	5207327	Identifier	filename		5207245	0					
ANR	5207328	Argument	strlen ( filename )		5207245	2					
ANR	5207329	CallExpression	strlen ( filename )		5207245	0					
ANR	5207330	Callee	strlen		5207245	0					
ANR	5207331	Identifier	strlen		5207245	0					
ANR	5207332	ArgumentList	filename		5207245	1					
ANR	5207333	Argument	filename		5207245	0					
ANR	5207334	Identifier	filename		5207245	0					
ANR	5207335	ReturnStatement	return strlen ( filename ) ;	538:8:15317:15340	5207245	1	True				
ANR	5207336	CallExpression	strlen ( filename )		5207245	0					
ANR	5207337	Callee	strlen		5207245	0					
ANR	5207338	Identifier	strlen		5207245	0					
ANR	5207339	ArgumentList	filename		5207245	1					
ANR	5207340	Argument	filename		5207245	0					
ANR	5207341	Identifier	filename		5207245	0					
ANR	5207342	ExpressionStatement	ram_enumerate_close ( pfen )	542:4:15456:15481	5207245	3	True				
ANR	5207343	CallExpression	ram_enumerate_close ( pfen )		5207245	0					
ANR	5207344	Callee	ram_enumerate_close		5207245	0					
ANR	5207345	Identifier	ram_enumerate_close		5207245	0					
ANR	5207346	ArgumentList	pfen		5207245	1					
ANR	5207347	Argument	pfen		5207245	0					
ANR	5207348	Identifier	pfen		5207245	0					
ANR	5207349	ReturnStatement	return ~ ( uint ) 0 ;	543:4:15487:15502	5207245	4	True				
ANR	5207350	UnaryOperationExpression	~ ( uint ) 0		5207245	0					
ANR	5207351	UnaryOperator	~		5207245	0					
ANR	5207352	CastExpression	( uint ) 0		5207245	1					
ANR	5207353	CastTarget	uint		5207245	0					
ANR	5207354	PrimaryExpression	0		5207245	1					
ANR	5207355	ReturnType	static uint		5207245	1					
ANR	5207356	Identifier	ram_enumerate_next		5207245	2					
ANR	5207357	ParameterList	"file_enum * pfen , char * ptr , uint maxlen"		5207245	3					
ANR	5207358	Parameter	file_enum * pfen	527:19:14932:14946	5207245	0	True				
ANR	5207359	ParameterType	file_enum *		5207245	0					
ANR	5207360	Identifier	pfen		5207245	1					
ANR	5207361	Parameter	char * ptr	527:36:14949:14957	5207245	1	True				
ANR	5207362	ParameterType	char *		5207245	0					
ANR	5207363	Identifier	ptr		5207245	1					
ANR	5207364	Parameter	uint maxlen	527:47:14960:14970	5207245	2	True				
ANR	5207365	ParameterType	uint		5207245	0					
ANR	5207366	Identifier	maxlen		5207245	1					
ANR	5207367	CFGEntryNode	ENTRY		5207245		True				
ANR	5207368	CFGExitNode	EXIT		5207245		True				
ANR	5207369	Symbol	penum -> e		5207245						
ANR	5207370	Symbol	* penum		5207245						
ANR	5207371	Symbol	strlen		5207245						
ANR	5207372	Symbol	filename		5207245						
ANR	5207373	Symbol	penum -> pattern		5207245						
ANR	5207374	Symbol	string_match		5207245						
ANR	5207375	Symbol	penum		5207245						
ANR	5207376	Symbol	pfen		5207245						
ANR	5207377	Symbol	ramfs_enum_next		5207245						
ANR	5207378	Symbol	maxlen		5207245						
ANR	5207379	Symbol	ptr		5207245						
ANR	5207380	Function	ram_get_params	546:0:15507:16602							
ANR	5207381	FunctionDef	"ram_get_params (gx_io_device * iodev , gs_param_list * plist)"		5207380	0					
ANR	5207382	CompoundStatement		548:0:15578:16602	5207380	0					
ANR	5207383	IdentifierDeclStatement	int code ;	549:4:15584:15592	5207380	0	True				
ANR	5207384	IdentifierDecl	code		5207380	0					
ANR	5207385	IdentifierDeclType	int		5207380	0					
ANR	5207386	Identifier	code		5207380	1					
ANR	5207387	IdentifierDeclStatement	"int i0 = 0 , so = 1 ;"	550:4:15598:15616	5207380	1	True				
ANR	5207388	IdentifierDecl	i0 = 0		5207380	0					
ANR	5207389	IdentifierDeclType	int		5207380	0					
ANR	5207390	Identifier	i0		5207380	1					
ANR	5207391	AssignmentExpression	i0 = 0		5207380	2		=			
ANR	5207392	Identifier	i0		5207380	0					
ANR	5207393	PrimaryExpression	0		5207380	1					
ANR	5207394	IdentifierDecl	so = 1		5207380	1					
ANR	5207395	IdentifierDeclType	int		5207380	0					
ANR	5207396	Identifier	so		5207380	1					
ANR	5207397	AssignmentExpression	so = 1		5207380	2		=			
ANR	5207398	Identifier	so		5207380	0					
ANR	5207399	PrimaryExpression	1		5207380	1					
ANR	5207400	IdentifierDeclStatement	"bool btrue = true , bfalse = false ;"	551:4:15622:15655	5207380	2	True				
ANR	5207401	IdentifierDecl	btrue = true		5207380	0					
ANR	5207402	IdentifierDeclType	bool		5207380	0					
ANR	5207403	Identifier	btrue		5207380	1					
ANR	5207404	AssignmentExpression	btrue = true		5207380	2		=			
ANR	5207405	Identifier	true		5207380	0					
ANR	5207406	Identifier	true		5207380	1					
ANR	5207407	IdentifierDecl	bfalse = false		5207380	1					
ANR	5207408	IdentifierDeclType	bool		5207380	0					
ANR	5207409	Identifier	bfalse		5207380	1					
ANR	5207410	AssignmentExpression	bfalse = false		5207380	2		=			
ANR	5207411	Identifier	false		5207380	0					
ANR	5207412	Identifier	false		5207380	1					
ANR	5207413	IdentifierDeclStatement	ramfs * fs = GETRAMFS ( iodev -> state ) ;	552:4:15661:15695	5207380	3	True				
ANR	5207414	IdentifierDecl	* fs = GETRAMFS ( iodev -> state )		5207380	0					
ANR	5207415	IdentifierDeclType	ramfs *		5207380	0					
ANR	5207416	Identifier	fs		5207380	1					
ANR	5207417	AssignmentExpression	* fs = GETRAMFS ( iodev -> state )		5207380	2		=			
ANR	5207418	Identifier	fs		5207380	0					
ANR	5207419	CallExpression	GETRAMFS ( iodev -> state )		5207380	1					
ANR	5207420	Callee	GETRAMFS		5207380	0					
ANR	5207421	Identifier	GETRAMFS		5207380	0					
ANR	5207422	ArgumentList	iodev -> state		5207380	1					
ANR	5207423	Argument	iodev -> state		5207380	0					
ANR	5207424	PtrMemberAccess	iodev -> state		5207380	0					
ANR	5207425	Identifier	iodev		5207380	0					
ANR	5207426	Identifier	state		5207380	1					
ANR	5207427	IdentifierDeclStatement	int BlockSize ;	553:4:15701:15714	5207380	4	True				
ANR	5207428	IdentifierDecl	BlockSize		5207380	0					
ANR	5207429	IdentifierDeclType	int		5207380	0					
ANR	5207430	Identifier	BlockSize		5207380	1					
ANR	5207431	IdentifierDeclStatement	"long Free , LogicalSize ;"	554:4:15720:15742	5207380	5	True				
ANR	5207432	IdentifierDecl	Free		5207380	0					
ANR	5207433	IdentifierDeclType	long		5207380	0					
ANR	5207434	Identifier	Free		5207380	1					
ANR	5207435	IdentifierDecl	LogicalSize		5207380	1					
ANR	5207436	IdentifierDeclType	long		5207380	0					
ANR	5207437	Identifier	LogicalSize		5207380	1					
ANR	5207438	ExpressionStatement	BlockSize = ramfs_blocksize ( fs )	556:4:15749:15780	5207380	6	True				
ANR	5207439	AssignmentExpression	BlockSize = ramfs_blocksize ( fs )		5207380	0		=			
ANR	5207440	Identifier	BlockSize		5207380	0					
ANR	5207441	CallExpression	ramfs_blocksize ( fs )		5207380	1					
ANR	5207442	Callee	ramfs_blocksize		5207380	0					
ANR	5207443	Identifier	ramfs_blocksize		5207380	0					
ANR	5207444	ArgumentList	fs		5207380	1					
ANR	5207445	Argument	fs		5207380	0					
ANR	5207446	Identifier	fs		5207380	0					
ANR	5207447	ExpressionStatement	LogicalSize = MAXBLOCKS	557:4:15786:15809	5207380	7	True				
ANR	5207448	AssignmentExpression	LogicalSize = MAXBLOCKS		5207380	0		=			
ANR	5207449	Identifier	LogicalSize		5207380	0					
ANR	5207450	Identifier	MAXBLOCKS		5207380	1					
ANR	5207451	ExpressionStatement	Free = ramfs_blocksfree ( fs )	558:4:15815:15842	5207380	8	True				
ANR	5207452	AssignmentExpression	Free = ramfs_blocksfree ( fs )		5207380	0		=			
ANR	5207453	Identifier	Free		5207380	0					
ANR	5207454	CallExpression	ramfs_blocksfree ( fs )		5207380	1					
ANR	5207455	Callee	ramfs_blocksfree		5207380	0					
ANR	5207456	Identifier	ramfs_blocksfree		5207380	0					
ANR	5207457	ArgumentList	fs		5207380	1					
ANR	5207458	Argument	fs		5207380	0					
ANR	5207459	Identifier	fs		5207380	0					
ANR	5207460	IfStatement	"if ( ( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0 )"		5207380	9					
ANR	5207461	Condition	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"	561:4:15858:16563	5207380	0	True				
ANR	5207462	OrExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	0		||			
ANR	5207463	RelationalExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0"		5207380	0		<			
ANR	5207464	AssignmentExpression	"code = param_write_bool ( plist , ""HasNames"" , & btrue )"		5207380	0		=			
ANR	5207465	Identifier	code		5207380	0					
ANR	5207466	CallExpression	"param_write_bool ( plist , ""HasNames"" , & btrue )"		5207380	1					
ANR	5207467	Callee	param_write_bool		5207380	0					
ANR	5207468	Identifier	param_write_bool		5207380	0					
ANR	5207469	ArgumentList	plist		5207380	1					
ANR	5207470	Argument	plist		5207380	0					
ANR	5207471	Identifier	plist		5207380	0					
ANR	5207472	Argument	"""HasNames"""		5207380	1					
ANR	5207473	PrimaryExpression	"""HasNames"""		5207380	0					
ANR	5207474	Argument	& btrue		5207380	2					
ANR	5207475	UnaryOperationExpression	& btrue		5207380	0					
ANR	5207476	UnaryOperator	&		5207380	0					
ANR	5207477	Identifier	btrue		5207380	1					
ANR	5207478	PrimaryExpression	0		5207380	1					
ANR	5207479	OrExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	1		||			
ANR	5207480	RelationalExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0"		5207380	0		<			
ANR	5207481	AssignmentExpression	"code = param_write_int ( plist , ""BlockSize"" , & BlockSize )"		5207380	0		=			
ANR	5207482	Identifier	code		5207380	0					
ANR	5207483	CallExpression	"param_write_int ( plist , ""BlockSize"" , & BlockSize )"		5207380	1					
ANR	5207484	Callee	param_write_int		5207380	0					
ANR	5207485	Identifier	param_write_int		5207380	0					
ANR	5207486	ArgumentList	plist		5207380	1					
ANR	5207487	Argument	plist		5207380	0					
ANR	5207488	Identifier	plist		5207380	0					
ANR	5207489	Argument	"""BlockSize"""		5207380	1					
ANR	5207490	PrimaryExpression	"""BlockSize"""		5207380	0					
ANR	5207491	Argument	& BlockSize		5207380	2					
ANR	5207492	UnaryOperationExpression	& BlockSize		5207380	0					
ANR	5207493	UnaryOperator	&		5207380	0					
ANR	5207494	Identifier	BlockSize		5207380	1					
ANR	5207495	PrimaryExpression	0		5207380	1					
ANR	5207496	OrExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	1		||			
ANR	5207497	RelationalExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0"		5207380	0		<			
ANR	5207498	AssignmentExpression	"code = param_write_long ( plist , ""Free"" , & Free )"		5207380	0		=			
ANR	5207499	Identifier	code		5207380	0					
ANR	5207500	CallExpression	"param_write_long ( plist , ""Free"" , & Free )"		5207380	1					
ANR	5207501	Callee	param_write_long		5207380	0					
ANR	5207502	Identifier	param_write_long		5207380	0					
ANR	5207503	ArgumentList	plist		5207380	1					
ANR	5207504	Argument	plist		5207380	0					
ANR	5207505	Identifier	plist		5207380	0					
ANR	5207506	Argument	"""Free"""		5207380	1					
ANR	5207507	PrimaryExpression	"""Free"""		5207380	0					
ANR	5207508	Argument	& Free		5207380	2					
ANR	5207509	UnaryOperationExpression	& Free		5207380	0					
ANR	5207510	UnaryOperator	&		5207380	0					
ANR	5207511	Identifier	Free		5207380	1					
ANR	5207512	PrimaryExpression	0		5207380	1					
ANR	5207513	OrExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	1		||			
ANR	5207514	RelationalExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0"		5207380	0		<			
ANR	5207515	AssignmentExpression	"code = param_write_int ( plist , ""InitializeAction"" , & i0 )"		5207380	0		=			
ANR	5207516	Identifier	code		5207380	0					
ANR	5207517	CallExpression	"param_write_int ( plist , ""InitializeAction"" , & i0 )"		5207380	1					
ANR	5207518	Callee	param_write_int		5207380	0					
ANR	5207519	Identifier	param_write_int		5207380	0					
ANR	5207520	ArgumentList	plist		5207380	1					
ANR	5207521	Argument	plist		5207380	0					
ANR	5207522	Identifier	plist		5207380	0					
ANR	5207523	Argument	"""InitializeAction"""		5207380	1					
ANR	5207524	PrimaryExpression	"""InitializeAction"""		5207380	0					
ANR	5207525	Argument	& i0		5207380	2					
ANR	5207526	UnaryOperationExpression	& i0		5207380	0					
ANR	5207527	UnaryOperator	&		5207380	0					
ANR	5207528	Identifier	i0		5207380	1					
ANR	5207529	PrimaryExpression	0		5207380	1					
ANR	5207530	OrExpression	"( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	1		||			
ANR	5207531	RelationalExpression	"( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0"		5207380	0		<			
ANR	5207532	AssignmentExpression	"code = param_write_bool ( plist , ""Mounted"" , & btrue )"		5207380	0		=			
ANR	5207533	Identifier	code		5207380	0					
ANR	5207534	CallExpression	"param_write_bool ( plist , ""Mounted"" , & btrue )"		5207380	1					
ANR	5207535	Callee	param_write_bool		5207380	0					
ANR	5207536	Identifier	param_write_bool		5207380	0					
ANR	5207537	ArgumentList	plist		5207380	1					
ANR	5207538	Argument	plist		5207380	0					
ANR	5207539	Identifier	plist		5207380	0					
ANR	5207540	Argument	"""Mounted"""		5207380	1					
ANR	5207541	PrimaryExpression	"""Mounted"""		5207380	0					
ANR	5207542	Argument	& btrue		5207380	2					
ANR	5207543	UnaryOperationExpression	& btrue		5207380	0					
ANR	5207544	UnaryOperator	&		5207380	0					
ANR	5207545	Identifier	btrue		5207380	1					
ANR	5207546	PrimaryExpression	0		5207380	1					
ANR	5207547	OrExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	1		||			
ANR	5207548	RelationalExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0"		5207380	0		<			
ANR	5207549	AssignmentExpression	"code = param_write_bool ( plist , ""Removable"" , & bfalse )"		5207380	0		=			
ANR	5207550	Identifier	code		5207380	0					
ANR	5207551	CallExpression	"param_write_bool ( plist , ""Removable"" , & bfalse )"		5207380	1					
ANR	5207552	Callee	param_write_bool		5207380	0					
ANR	5207553	Identifier	param_write_bool		5207380	0					
ANR	5207554	ArgumentList	plist		5207380	1					
ANR	5207555	Argument	plist		5207380	0					
ANR	5207556	Identifier	plist		5207380	0					
ANR	5207557	Argument	"""Removable"""		5207380	1					
ANR	5207558	PrimaryExpression	"""Removable"""		5207380	0					
ANR	5207559	Argument	& bfalse		5207380	2					
ANR	5207560	UnaryOperationExpression	& bfalse		5207380	0					
ANR	5207561	UnaryOperator	&		5207380	0					
ANR	5207562	Identifier	bfalse		5207380	1					
ANR	5207563	PrimaryExpression	0		5207380	1					
ANR	5207564	OrExpression	"( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	1		||			
ANR	5207565	RelationalExpression	"( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0"		5207380	0		<			
ANR	5207566	AssignmentExpression	"code = param_write_bool ( plist , ""Searchable"" , & btrue )"		5207380	0		=			
ANR	5207567	Identifier	code		5207380	0					
ANR	5207568	CallExpression	"param_write_bool ( plist , ""Searchable"" , & btrue )"		5207380	1					
ANR	5207569	Callee	param_write_bool		5207380	0					
ANR	5207570	Identifier	param_write_bool		5207380	0					
ANR	5207571	ArgumentList	plist		5207380	1					
ANR	5207572	Argument	plist		5207380	0					
ANR	5207573	Identifier	plist		5207380	0					
ANR	5207574	Argument	"""Searchable"""		5207380	1					
ANR	5207575	PrimaryExpression	"""Searchable"""		5207380	0					
ANR	5207576	Argument	& btrue		5207380	2					
ANR	5207577	UnaryOperationExpression	& btrue		5207380	0					
ANR	5207578	UnaryOperator	&		5207380	0					
ANR	5207579	Identifier	btrue		5207380	1					
ANR	5207580	PrimaryExpression	0		5207380	1					
ANR	5207581	OrExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	1		||			
ANR	5207582	RelationalExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0"		5207380	0		<			
ANR	5207583	AssignmentExpression	"code = param_write_int ( plist , ""SearchOrder"" , & so )"		5207380	0		=			
ANR	5207584	Identifier	code		5207380	0					
ANR	5207585	CallExpression	"param_write_int ( plist , ""SearchOrder"" , & so )"		5207380	1					
ANR	5207586	Callee	param_write_int		5207380	0					
ANR	5207587	Identifier	param_write_int		5207380	0					
ANR	5207588	ArgumentList	plist		5207380	1					
ANR	5207589	Argument	plist		5207380	0					
ANR	5207590	Identifier	plist		5207380	0					
ANR	5207591	Argument	"""SearchOrder"""		5207380	1					
ANR	5207592	PrimaryExpression	"""SearchOrder"""		5207380	0					
ANR	5207593	Argument	& so		5207380	2					
ANR	5207594	UnaryOperationExpression	& so		5207380	0					
ANR	5207595	UnaryOperator	&		5207380	0					
ANR	5207596	Identifier	so		5207380	1					
ANR	5207597	PrimaryExpression	0		5207380	1					
ANR	5207598	OrExpression	"( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	1		||			
ANR	5207599	RelationalExpression	"( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0"		5207380	0		<			
ANR	5207600	AssignmentExpression	"code = param_write_bool ( plist , ""Writeable"" , & btrue )"		5207380	0		=			
ANR	5207601	Identifier	code		5207380	0					
ANR	5207602	CallExpression	"param_write_bool ( plist , ""Writeable"" , & btrue )"		5207380	1					
ANR	5207603	Callee	param_write_bool		5207380	0					
ANR	5207604	Identifier	param_write_bool		5207380	0					
ANR	5207605	ArgumentList	plist		5207380	1					
ANR	5207606	Argument	plist		5207380	0					
ANR	5207607	Identifier	plist		5207380	0					
ANR	5207608	Argument	"""Writeable"""		5207380	1					
ANR	5207609	PrimaryExpression	"""Writeable"""		5207380	0					
ANR	5207610	Argument	& btrue		5207380	2					
ANR	5207611	UnaryOperationExpression	& btrue		5207380	0					
ANR	5207612	UnaryOperator	&		5207380	0					
ANR	5207613	Identifier	btrue		5207380	1					
ANR	5207614	PrimaryExpression	0		5207380	1					
ANR	5207615	RelationalExpression	"( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5207380	1		<			
ANR	5207616	AssignmentExpression	"code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		5207380	0		=			
ANR	5207617	Identifier	code		5207380	0					
ANR	5207618	CallExpression	"param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		5207380	1					
ANR	5207619	Callee	param_write_long		5207380	0					
ANR	5207620	Identifier	param_write_long		5207380	0					
ANR	5207621	ArgumentList	plist		5207380	1					
ANR	5207622	Argument	plist		5207380	0					
ANR	5207623	Identifier	plist		5207380	0					
ANR	5207624	Argument	"""LogicalSize"""		5207380	1					
ANR	5207625	PrimaryExpression	"""LogicalSize"""		5207380	0					
ANR	5207626	Argument	& LogicalSize		5207380	2					
ANR	5207627	UnaryOperationExpression	& LogicalSize		5207380	0					
ANR	5207628	UnaryOperator	&		5207380	0					
ANR	5207629	Identifier	LogicalSize		5207380	1					
ANR	5207630	PrimaryExpression	0		5207380	1					
ANR	5207631	ReturnStatement	return code ;	572:4:16575:16586	5207380	1	True				
ANR	5207632	Identifier	code		5207380	0					
ANR	5207633	ReturnStatement	return 0 ;	573:4:16592:16600	5207380	10	True				
ANR	5207634	PrimaryExpression	0		5207380	0					
ANR	5207635	ReturnType	static int		5207380	1					
ANR	5207636	Identifier	ram_get_params		5207380	2					
ANR	5207637	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		5207380	3					
ANR	5207638	Parameter	gx_io_device * iodev	547:15:15533:15552	5207380	0	True				
ANR	5207639	ParameterType	gx_io_device *		5207380	0					
ANR	5207640	Identifier	iodev		5207380	1					
ANR	5207641	Parameter	gs_param_list * plist	547:37:15555:15575	5207380	1	True				
ANR	5207642	ParameterType	gs_param_list *		5207380	0					
ANR	5207643	Identifier	plist		5207380	1					
ANR	5207644	CFGEntryNode	ENTRY		5207380		True				
ANR	5207645	CFGExitNode	EXIT		5207380		True				
ANR	5207646	Symbol	& bfalse		5207380						
ANR	5207647	Symbol	code		5207380						
ANR	5207648	Symbol	LogicalSize		5207380						
ANR	5207649	Symbol	& BlockSize		5207380						
ANR	5207650	Symbol	bfalse		5207380						
ANR	5207651	Symbol	& so		5207380						
ANR	5207652	Symbol	fs		5207380						
ANR	5207653	Symbol	param_write_bool		5207380						
ANR	5207654	Symbol	plist		5207380						
ANR	5207655	Symbol	MAXBLOCKS		5207380						
ANR	5207656	Symbol	iodev		5207380						
ANR	5207657	Symbol	& btrue		5207380						
ANR	5207658	Symbol	so		5207380						
ANR	5207659	Symbol	param_write_int		5207380						
ANR	5207660	Symbol	& LogicalSize		5207380						
ANR	5207661	Symbol	* iodev		5207380						
ANR	5207662	Symbol	ramfs_blocksize		5207380						
ANR	5207663	Symbol	i0		5207380						
ANR	5207664	Symbol	false		5207380						
ANR	5207665	Symbol	btrue		5207380						
ANR	5207666	Symbol	Free		5207380						
ANR	5207667	Symbol	GETRAMFS		5207380						
ANR	5207668	Symbol	ramfs_blocksfree		5207380						
ANR	5207669	Symbol	& i0		5207380						
ANR	5207670	Symbol	true		5207380						
ANR	5207671	Symbol	iodev -> state		5207380						
ANR	5207672	Symbol	& Free		5207380						
ANR	5207673	Symbol	BlockSize		5207380						
ANR	5207674	Symbol	param_write_long		5207380						
