command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1007305	File	data/converged/CVE-2018-16863_ghostpdl/base_gxdownscale.c								
ANR	1007306	ClassDef	<unnamed>	24:0:707:737							
ANR	1007307	ClassDef	<unnamed>	41:0:1322:1445							
ANR	1007308	Function	pack_8to1	51:0:1569:1929							
ANR	1007309	FunctionDef	"pack_8to1 (byte * outp , byte * inp , int w)"		1007308	0					
ANR	1007310	CompoundStatement		52:0:1621:1929	1007308	0					
ANR	1007311	IdentifierDeclStatement	int mask = 128 ;	53:4:1627:1642	1007308	0	True				
ANR	1007312	IdentifierDecl	mask = 128		1007308	0					
ANR	1007313	IdentifierDeclType	int		1007308	0					
ANR	1007314	Identifier	mask		1007308	1					
ANR	1007315	AssignmentExpression	mask = 128		1007308	2		=			
ANR	1007316	Identifier	mask		1007308	0					
ANR	1007317	PrimaryExpression	128		1007308	1					
ANR	1007318	IdentifierDeclStatement	int value = 0 ;	54:4:1648:1661	1007308	1	True				
ANR	1007319	IdentifierDecl	value = 0		1007308	0					
ANR	1007320	IdentifierDeclType	int		1007308	0					
ANR	1007321	Identifier	value		1007308	1					
ANR	1007322	AssignmentExpression	value = 0		1007308	2		=			
ANR	1007323	Identifier	value		1007308	0					
ANR	1007324	PrimaryExpression	0		1007308	1					
ANR	1007325	ForStatement	for ( ; w > 0 ; w -- )		1007308	2					
ANR	1007326	Condition	w > 0	55:11:1674:1678	1007308	0	True				
ANR	1007327	RelationalExpression	w > 0		1007308	0		>			
ANR	1007328	Identifier	w		1007308	0					
ANR	1007329	PrimaryExpression	0		1007308	1					
ANR	1007330	PostIncDecOperationExpression	w --	55:18:1681:1683	1007308	1	True				
ANR	1007331	Identifier	w		1007308	0					
ANR	1007332	IncDec	--		1007308	1					
ANR	1007333	CompoundStatement		5:4:68:68	1007308	2					
ANR	1007334	IfStatement	if ( * inp ++ )		1007308	0					
ANR	1007335	Condition	* inp ++	57:12:1704:1709	1007308	0	True				
ANR	1007336	UnaryOperationExpression	* inp ++		1007308	0					
ANR	1007337	UnaryOperator	*		1007308	0					
ANR	1007338	PostIncDecOperationExpression	inp ++		1007308	1					
ANR	1007339	Identifier	inp		1007308	0					
ANR	1007340	IncDec	++		1007308	1					
ANR	1007341	ExpressionStatement	value |= mask	58:12:1724:1737	1007308	1	True				
ANR	1007342	AssignmentExpression	value |= mask		1007308	0		|=			
ANR	1007343	Identifier	value		1007308	0					
ANR	1007344	Identifier	mask		1007308	1					
ANR	1007345	ExpressionStatement	mask >>= 1	59:8:1747:1757	1007308	1	True				
ANR	1007346	AssignmentExpression	mask >>= 1		1007308	0		>>=			
ANR	1007347	Identifier	mask		1007308	0					
ANR	1007348	PrimaryExpression	1		1007308	1					
ANR	1007349	IfStatement	if ( mask == 0 )		1007308	2					
ANR	1007350	Condition	mask == 0	60:12:1771:1779	1007308	0	True				
ANR	1007351	EqualityExpression	mask == 0		1007308	0		==			
ANR	1007352	Identifier	mask		1007308	0					
ANR	1007353	PrimaryExpression	0		1007308	1					
ANR	1007354	CompoundStatement		9:23:160:160	1007308	1					
ANR	1007355	ExpressionStatement	mask = 128	61:12:1796:1806	1007308	0	True				
ANR	1007356	AssignmentExpression	mask = 128		1007308	0		=			
ANR	1007357	Identifier	mask		1007308	0					
ANR	1007358	PrimaryExpression	128		1007308	1					
ANR	1007359	ExpressionStatement	* outp ++ = value	62:12:1820:1834	1007308	1	True				
ANR	1007360	AssignmentExpression	* outp ++ = value		1007308	0		=			
ANR	1007361	UnaryOperationExpression	* outp ++		1007308	0					
ANR	1007362	UnaryOperator	*		1007308	0					
ANR	1007363	PostIncDecOperationExpression	outp ++		1007308	1					
ANR	1007364	Identifier	outp		1007308	0					
ANR	1007365	IncDec	++		1007308	1					
ANR	1007366	Identifier	value		1007308	1					
ANR	1007367	ExpressionStatement	value = 0	63:12:1848:1857	1007308	2	True				
ANR	1007368	AssignmentExpression	value = 0		1007308	0		=			
ANR	1007369	Identifier	value		1007308	0					
ANR	1007370	PrimaryExpression	0		1007308	1					
ANR	1007371	IfStatement	if ( mask != 128 )		1007308	3					
ANR	1007372	Condition	mask != 128	66:8:1883:1893	1007308	0	True				
ANR	1007373	EqualityExpression	mask != 128		1007308	0		!=			
ANR	1007374	Identifier	mask		1007308	0					
ANR	1007375	PrimaryExpression	128		1007308	1					
ANR	1007376	CompoundStatement		15:21:274:274	1007308	1					
ANR	1007377	ExpressionStatement	* outp ++ = value	67:8:1906:1921	1007308	0	True				
ANR	1007378	AssignmentExpression	* outp ++ = value		1007308	0		=			
ANR	1007379	UnaryOperationExpression	* outp ++		1007308	0					
ANR	1007380	UnaryOperator	*		1007308	0					
ANR	1007381	PostIncDecOperationExpression	outp ++		1007308	1					
ANR	1007382	Identifier	outp		1007308	0					
ANR	1007383	IncDec	++		1007308	1					
ANR	1007384	Identifier	value		1007308	1					
ANR	1007385	ReturnType	static void		1007308	1					
ANR	1007386	Identifier	pack_8to1		1007308	2					
ANR	1007387	ParameterList	"byte * outp , byte * inp , int w"		1007308	3					
ANR	1007388	Parameter	byte * outp	51:22:1591:1600	1007308	0	True				
ANR	1007389	ParameterType	byte *		1007308	0					
ANR	1007390	Identifier	outp		1007308	1					
ANR	1007391	Parameter	byte * inp	51:34:1603:1611	1007308	1	True				
ANR	1007392	ParameterType	byte *		1007308	0					
ANR	1007393	Identifier	inp		1007308	1					
ANR	1007394	Parameter	int w	51:45:1614:1618	1007308	2	True				
ANR	1007395	ParameterType	int		1007308	0					
ANR	1007396	Identifier	w		1007308	1					
ANR	1007397	CFGEntryNode	ENTRY		1007308		True				
ANR	1007398	CFGExitNode	EXIT		1007308		True				
ANR	1007399	Symbol	outp		1007308						
ANR	1007400	Symbol	w		1007308						
ANR	1007401	Symbol	* outp ++		1007308						
ANR	1007402	Symbol	inp		1007308						
ANR	1007403	Symbol	* inp ++		1007308						
ANR	1007404	Symbol	value		1007308						
ANR	1007405	Symbol	mask		1007308						
ANR	1007406	Function	down_core	71:0:1932:5037							
ANR	1007407	FunctionDef	"down_core (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1007406	0					
ANR	1007408	CompoundStatement		77:0:2211:5037	1007406	0					
ANR	1007409	IdentifierDeclStatement	"int x , xx , y , value ;"	78:4:2217:2243	1007406	0	True				
ANR	1007410	IdentifierDecl	x		1007406	0					
ANR	1007411	IdentifierDeclType	int		1007406	0					
ANR	1007412	Identifier	x		1007406	1					
ANR	1007413	IdentifierDecl	xx		1007406	1					
ANR	1007414	IdentifierDeclType	int		1007406	0					
ANR	1007415	Identifier	xx		1007406	1					
ANR	1007416	IdentifierDecl	y		1007406	2					
ANR	1007417	IdentifierDeclType	int		1007406	0					
ANR	1007418	Identifier	y		1007406	1					
ANR	1007419	IdentifierDecl	value		1007406	3					
ANR	1007420	IdentifierDeclType	int		1007406	0					
ANR	1007421	Identifier	value		1007406	1					
ANR	1007422	IdentifierDeclStatement	"int e_downleft , e_down , e_forward = 0 ;"	79:4:2249:2293	1007406	1	True				
ANR	1007423	IdentifierDecl	e_downleft		1007406	0					
ANR	1007424	IdentifierDeclType	int		1007406	0					
ANR	1007425	Identifier	e_downleft		1007406	1					
ANR	1007426	IdentifierDecl	e_down		1007406	1					
ANR	1007427	IdentifierDeclType	int		1007406	0					
ANR	1007428	Identifier	e_down		1007406	1					
ANR	1007429	IdentifierDecl	e_forward = 0		1007406	2					
ANR	1007430	IdentifierDeclType	int		1007406	0					
ANR	1007431	Identifier	e_forward		1007406	1					
ANR	1007432	AssignmentExpression	e_forward = 0		1007406	2		=			
ANR	1007433	Identifier	e_forward		1007406	0					
ANR	1007434	PrimaryExpression	0		1007406	1					
ANR	1007435	IdentifierDeclStatement	int pad_white ;	80:4:2299:2319	1007406	2	True				
ANR	1007436	IdentifierDecl	pad_white		1007406	0					
ANR	1007437	IdentifierDeclType	int		1007406	0					
ANR	1007438	Identifier	pad_white		1007406	1					
ANR	1007439	IdentifierDeclStatement	"byte * inp , * outp ;"	81:4:2325:2346	1007406	3	True				
ANR	1007440	IdentifierDecl	* inp		1007406	0					
ANR	1007441	IdentifierDeclType	byte *		1007406	0					
ANR	1007442	Identifier	inp		1007406	1					
ANR	1007443	IdentifierDecl	* outp		1007406	1					
ANR	1007444	IdentifierDeclType	byte *		1007406	0					
ANR	1007445	Identifier	outp		1007406	1					
ANR	1007446	IdentifierDeclStatement	int width = ds -> width ;	82:4:2352:2384	1007406	4	True				
ANR	1007447	IdentifierDecl	width = ds -> width		1007406	0					
ANR	1007448	IdentifierDeclType	int		1007406	0					
ANR	1007449	Identifier	width		1007406	1					
ANR	1007450	AssignmentExpression	width = ds -> width		1007406	2		=			
ANR	1007451	Identifier	width		1007406	0					
ANR	1007452	PtrMemberAccess	ds -> width		1007406	1					
ANR	1007453	Identifier	ds		1007406	0					
ANR	1007454	Identifier	width		1007406	1					
ANR	1007455	IdentifierDeclStatement	int awidth = ds -> awidth ;	83:4:2390:2423	1007406	5	True				
ANR	1007456	IdentifierDecl	awidth = ds -> awidth		1007406	0					
ANR	1007457	IdentifierDeclType	int		1007406	0					
ANR	1007458	Identifier	awidth		1007406	1					
ANR	1007459	AssignmentExpression	awidth = ds -> awidth		1007406	2		=			
ANR	1007460	Identifier	awidth		1007406	0					
ANR	1007461	PtrMemberAccess	ds -> awidth		1007406	1					
ANR	1007462	Identifier	ds		1007406	0					
ANR	1007463	Identifier	awidth		1007406	1					
ANR	1007464	IdentifierDeclStatement	int factor = ds -> factor ;	84:4:2429:2462	1007406	6	True				
ANR	1007465	IdentifierDecl	factor = ds -> factor		1007406	0					
ANR	1007466	IdentifierDeclType	int		1007406	0					
ANR	1007467	Identifier	factor		1007406	1					
ANR	1007468	AssignmentExpression	factor = ds -> factor		1007406	2		=			
ANR	1007469	Identifier	factor		1007406	0					
ANR	1007470	PtrMemberAccess	ds -> factor		1007406	1					
ANR	1007471	Identifier	ds		1007406	0					
ANR	1007472	Identifier	factor		1007406	1					
ANR	1007473	IdentifierDeclStatement	int * errors = ds -> errors + ( awidth + 3 ) * plane ;	85:4:2468:2520	1007406	7	True				
ANR	1007474	IdentifierDecl	* errors = ds -> errors + ( awidth + 3 ) * plane		1007406	0					
ANR	1007475	IdentifierDeclType	int *		1007406	0					
ANR	1007476	Identifier	errors		1007406	1					
ANR	1007477	AssignmentExpression	* errors = ds -> errors + ( awidth + 3 ) * plane		1007406	2		=			
ANR	1007478	Identifier	errors		1007406	0					
ANR	1007479	AdditiveExpression	ds -> errors + ( awidth + 3 ) * plane		1007406	1		+			
ANR	1007480	PtrMemberAccess	ds -> errors		1007406	0					
ANR	1007481	Identifier	ds		1007406	0					
ANR	1007482	Identifier	errors		1007406	1					
ANR	1007483	MultiplicativeExpression	( awidth + 3 ) * plane		1007406	1		*			
ANR	1007484	AdditiveExpression	awidth + 3		1007406	0		+			
ANR	1007485	Identifier	awidth		1007406	0					
ANR	1007486	PrimaryExpression	3		1007406	1					
ANR	1007487	Identifier	plane		1007406	1					
ANR	1007488	IdentifierDeclStatement	const int threshold = factor * factor * 128 ;	86:4:2526:2566	1007406	8	True				
ANR	1007489	IdentifierDecl	threshold = factor * factor * 128		1007406	0					
ANR	1007490	IdentifierDeclType	const int		1007406	0					
ANR	1007491	Identifier	threshold		1007406	1					
ANR	1007492	AssignmentExpression	threshold = factor * factor * 128		1007406	2		=			
ANR	1007493	Identifier	threshold		1007406	0					
ANR	1007494	MultiplicativeExpression	factor * factor * 128		1007406	1		*			
ANR	1007495	Identifier	factor		1007406	0					
ANR	1007496	MultiplicativeExpression	factor * 128		1007406	1		*			
ANR	1007497	Identifier	factor		1007406	0					
ANR	1007498	PrimaryExpression	128		1007406	1					
ANR	1007499	IdentifierDeclStatement	const int max_value = factor * factor * 255 ;	87:4:2572:2612	1007406	9	True				
ANR	1007500	IdentifierDecl	max_value = factor * factor * 255		1007406	0					
ANR	1007501	IdentifierDeclType	const int		1007406	0					
ANR	1007502	Identifier	max_value		1007406	1					
ANR	1007503	AssignmentExpression	max_value = factor * factor * 255		1007406	2		=			
ANR	1007504	Identifier	max_value		1007406	0					
ANR	1007505	MultiplicativeExpression	factor * factor * 255		1007406	1		*			
ANR	1007506	Identifier	factor		1007406	0					
ANR	1007507	MultiplicativeExpression	factor * 255		1007406	1		*			
ANR	1007508	Identifier	factor		1007406	0					
ANR	1007509	PrimaryExpression	255		1007406	1					
ANR	1007510	ExpressionStatement	pad_white = ( awidth - width ) * factor	89:4:2619:2656	1007406	10	True				
ANR	1007511	AssignmentExpression	pad_white = ( awidth - width ) * factor		1007406	0		=			
ANR	1007512	Identifier	pad_white		1007406	0					
ANR	1007513	MultiplicativeExpression	( awidth - width ) * factor		1007406	1		*			
ANR	1007514	AdditiveExpression	awidth - width		1007406	0		-			
ANR	1007515	Identifier	awidth		1007406	0					
ANR	1007516	Identifier	width		1007406	1					
ANR	1007517	Identifier	factor		1007406	1					
ANR	1007518	IfStatement	if ( pad_white < 0 )		1007406	11					
ANR	1007519	Condition	pad_white < 0	90:8:2666:2678	1007406	0	True				
ANR	1007520	RelationalExpression	pad_white < 0		1007406	0		<			
ANR	1007521	Identifier	pad_white		1007406	0					
ANR	1007522	PrimaryExpression	0		1007406	1					
ANR	1007523	ExpressionStatement	pad_white = 0	91:8:2689:2702	1007406	1	True				
ANR	1007524	AssignmentExpression	pad_white = 0		1007406	0		=			
ANR	1007525	Identifier	pad_white		1007406	0					
ANR	1007526	PrimaryExpression	0		1007406	1					
ANR	1007527	IfStatement	if ( pad_white )		1007406	12					
ANR	1007528	Condition	pad_white	93:8:2713:2721	1007406	0	True				
ANR	1007529	Identifier	pad_white		1007406	0					
ANR	1007530	CompoundStatement		18:4:516:516	1007406	1					
ANR	1007531	ExpressionStatement	inp = in_buffer + width * factor	95:8:2738:2768	1007406	0	True				
ANR	1007532	AssignmentExpression	inp = in_buffer + width * factor		1007406	0		=			
ANR	1007533	Identifier	inp		1007406	0					
ANR	1007534	AdditiveExpression	in_buffer + width * factor		1007406	1		+			
ANR	1007535	Identifier	in_buffer		1007406	0					
ANR	1007536	MultiplicativeExpression	width * factor		1007406	1		*			
ANR	1007537	Identifier	width		1007406	0					
ANR	1007538	Identifier	factor		1007406	1					
ANR	1007539	ForStatement	for ( y = factor ; y > 0 ; y -- )		1007406	1					
ANR	1007540	ForInit	y = factor ;	96:13:2783:2793	1007406	0	True				
ANR	1007541	AssignmentExpression	y = factor		1007406	0		=			
ANR	1007542	Identifier	y		1007406	0					
ANR	1007543	Identifier	factor		1007406	1					
ANR	1007544	Condition	y > 0	96:25:2795:2799	1007406	1	True				
ANR	1007545	RelationalExpression	y > 0		1007406	0		>			
ANR	1007546	Identifier	y		1007406	0					
ANR	1007547	PrimaryExpression	0		1007406	1					
ANR	1007548	PostIncDecOperationExpression	y --	96:32:2802:2804	1007406	2	True				
ANR	1007549	Identifier	y		1007406	0					
ANR	1007550	IncDec	--		1007406	1					
ANR	1007551	CompoundStatement		21:8:603:603	1007406	3					
ANR	1007552	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	98:12:2829:2857	1007406	0	True				
ANR	1007553	CallExpression	"memset ( inp , 0xFF , pad_white )"		1007406	0					
ANR	1007554	Callee	memset		1007406	0					
ANR	1007555	Identifier	memset		1007406	0					
ANR	1007556	ArgumentList	inp		1007406	1					
ANR	1007557	Argument	inp		1007406	0					
ANR	1007558	Identifier	inp		1007406	0					
ANR	1007559	Argument	0xFF		1007406	1					
ANR	1007560	PrimaryExpression	0xFF		1007406	0					
ANR	1007561	Argument	pad_white		1007406	2					
ANR	1007562	Identifier	pad_white		1007406	0					
ANR	1007563	ExpressionStatement	inp += span	99:12:2871:2882	1007406	1	True				
ANR	1007564	AssignmentExpression	inp += span		1007406	0		+=			
ANR	1007565	Identifier	inp		1007406	0					
ANR	1007566	Identifier	span		1007406	1					
ANR	1007567	ExpressionStatement	inp = in_buffer	103:4:2905:2920	1007406	13	True				
ANR	1007568	AssignmentExpression	inp = in_buffer		1007406	0		=			
ANR	1007569	Identifier	inp		1007406	0					
ANR	1007570	Identifier	in_buffer		1007406	1					
ANR	1007571	IfStatement	if ( ( row & 1 ) == 0 )		1007406	14					
ANR	1007572	Condition	( row & 1 ) == 0	104:8:2930:2943	1007406	0	True				
ANR	1007573	EqualityExpression	( row & 1 ) == 0		1007406	0		==			
ANR	1007574	BitAndExpression	row & 1		1007406	0		&			
ANR	1007575	Identifier	row		1007406	0					
ANR	1007576	PrimaryExpression	1		1007406	1					
ANR	1007577	PrimaryExpression	0		1007406	1					
ANR	1007578	CompoundStatement		31:8:803:837	1007406	1					
ANR	1007579	IdentifierDeclStatement	const int back = span * factor - 1 ;	107:8:3015:3049	1007406	0	True				
ANR	1007580	IdentifierDecl	back = span * factor - 1		1007406	0					
ANR	1007581	IdentifierDeclType	const int		1007406	0					
ANR	1007582	Identifier	back		1007406	1					
ANR	1007583	AssignmentExpression	back = span * factor - 1		1007406	2		=			
ANR	1007584	Identifier	back		1007406	0					
ANR	1007585	AdditiveExpression	span * factor - 1		1007406	1		-			
ANR	1007586	MultiplicativeExpression	span * factor		1007406	0		*			
ANR	1007587	Identifier	span		1007406	0					
ANR	1007588	Identifier	factor		1007406	1					
ANR	1007589	PrimaryExpression	1		1007406	1					
ANR	1007590	ExpressionStatement	errors += 2	108:8:3059:3070	1007406	1	True				
ANR	1007591	AssignmentExpression	errors += 2		1007406	0		+=			
ANR	1007592	Identifier	errors		1007406	0					
ANR	1007593	PrimaryExpression	2		1007406	1					
ANR	1007594	ExpressionStatement	outp = inp	109:8:3080:3090	1007406	2	True				
ANR	1007595	AssignmentExpression	outp = inp		1007406	0		=			
ANR	1007596	Identifier	outp		1007406	0					
ANR	1007597	Identifier	inp		1007406	1					
ANR	1007598	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1007406	3					
ANR	1007599	ForInit	x = awidth ;	110:13:3105:3115	1007406	0	True				
ANR	1007600	AssignmentExpression	x = awidth		1007406	0		=			
ANR	1007601	Identifier	x		1007406	0					
ANR	1007602	Identifier	awidth		1007406	1					
ANR	1007603	Condition	x > 0	110:25:3117:3121	1007406	1	True				
ANR	1007604	RelationalExpression	x > 0		1007406	0		>			
ANR	1007605	Identifier	x		1007406	0					
ANR	1007606	PrimaryExpression	0		1007406	1					
ANR	1007607	PostIncDecOperationExpression	x --	110:32:3124:3126	1007406	2	True				
ANR	1007608	Identifier	x		1007406	0					
ANR	1007609	IncDec	--		1007406	1					
ANR	1007610	CompoundStatement		35:8:925:925	1007406	3					
ANR	1007611	ExpressionStatement	value = e_forward + * errors	112:12:3151:3178	1007406	0	True				
ANR	1007612	AssignmentExpression	value = e_forward + * errors		1007406	0		=			
ANR	1007613	Identifier	value		1007406	0					
ANR	1007614	AdditiveExpression	e_forward + * errors		1007406	1		+			
ANR	1007615	Identifier	e_forward		1007406	0					
ANR	1007616	UnaryOperationExpression	* errors		1007406	1					
ANR	1007617	UnaryOperator	*		1007406	0					
ANR	1007618	Identifier	errors		1007406	1					
ANR	1007619	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1007406	1					
ANR	1007620	ForInit	xx = factor ;	113:17:3197:3208	1007406	0	True				
ANR	1007621	AssignmentExpression	xx = factor		1007406	0		=			
ANR	1007622	Identifier	xx		1007406	0					
ANR	1007623	Identifier	factor		1007406	1					
ANR	1007624	Condition	xx > 0	113:30:3210:3215	1007406	1	True				
ANR	1007625	RelationalExpression	xx > 0		1007406	0		>			
ANR	1007626	Identifier	xx		1007406	0					
ANR	1007627	PrimaryExpression	0		1007406	1					
ANR	1007628	PostIncDecOperationExpression	xx --	113:38:3218:3221	1007406	2	True				
ANR	1007629	Identifier	xx		1007406	0					
ANR	1007630	IncDec	--		1007406	1					
ANR	1007631	CompoundStatement		38:12:1024:1024	1007406	3					
ANR	1007632	ForStatement	for ( y = factor ; y > 0 ; y -- )		1007406	0					
ANR	1007633	ForInit	y = factor ;	115:21:3259:3269	1007406	0	True				
ANR	1007634	AssignmentExpression	y = factor		1007406	0		=			
ANR	1007635	Identifier	y		1007406	0					
ANR	1007636	Identifier	factor		1007406	1					
ANR	1007637	Condition	y > 0	115:33:3271:3275	1007406	1	True				
ANR	1007638	RelationalExpression	y > 0		1007406	0		>			
ANR	1007639	Identifier	y		1007406	0					
ANR	1007640	PrimaryExpression	0		1007406	1					
ANR	1007641	PostIncDecOperationExpression	y --	115:40:3278:3280	1007406	2	True				
ANR	1007642	Identifier	y		1007406	0					
ANR	1007643	IncDec	--		1007406	1					
ANR	1007644	CompoundStatement		40:16:1087:1087	1007406	3					
ANR	1007645	ExpressionStatement	value += * inp	117:20:3321:3334	1007406	0	True				
ANR	1007646	AssignmentExpression	value += * inp		1007406	0		+=			
ANR	1007647	Identifier	value		1007406	0					
ANR	1007648	UnaryOperationExpression	* inp		1007406	1					
ANR	1007649	UnaryOperator	*		1007406	0					
ANR	1007650	Identifier	inp		1007406	1					
ANR	1007651	ExpressionStatement	inp += span	118:20:3356:3367	1007406	1	True				
ANR	1007652	AssignmentExpression	inp += span		1007406	0		+=			
ANR	1007653	Identifier	inp		1007406	0					
ANR	1007654	Identifier	span		1007406	1					
ANR	1007655	ExpressionStatement	inp -= back	120:16:3403:3414	1007406	1	True				
ANR	1007656	AssignmentExpression	inp -= back		1007406	0		-=			
ANR	1007657	Identifier	inp		1007406	0					
ANR	1007658	Identifier	back		1007406	1					
ANR	1007659	IfStatement	if ( value >= threshold )		1007406	2					
ANR	1007660	Condition	value >= threshold	122:16:3446:3463	1007406	0	True				
ANR	1007661	RelationalExpression	value >= threshold		1007406	0		>=			
ANR	1007662	Identifier	value		1007406	0					
ANR	1007663	Identifier	threshold		1007406	1					
ANR	1007664	CompoundStatement		47:12:1266:1266	1007406	1					
ANR	1007665	ExpressionStatement	* outp ++ = 1	124:16:3496:3507	1007406	0	True				
ANR	1007666	AssignmentExpression	* outp ++ = 1		1007406	0		=			
ANR	1007667	UnaryOperationExpression	* outp ++		1007406	0					
ANR	1007668	UnaryOperator	*		1007406	0					
ANR	1007669	PostIncDecOperationExpression	outp ++		1007406	1					
ANR	1007670	Identifier	outp		1007406	0					
ANR	1007671	IncDec	++		1007406	1					
ANR	1007672	PrimaryExpression	1		1007406	1					
ANR	1007673	ExpressionStatement	value -= max_value	125:16:3525:3543	1007406	1	True				
ANR	1007674	AssignmentExpression	value -= max_value		1007406	0		-=			
ANR	1007675	Identifier	value		1007406	0					
ANR	1007676	Identifier	max_value		1007406	1					
ANR	1007677	ElseStatement	else		1007406	0					
ANR	1007678	CompoundStatement		52:12:1376:1376	1007406	0					
ANR	1007679	ExpressionStatement	* outp ++ = 0	129:16:3606:3617	1007406	0	True				
ANR	1007680	AssignmentExpression	* outp ++ = 0		1007406	0		=			
ANR	1007681	UnaryOperationExpression	* outp ++		1007406	0					
ANR	1007682	UnaryOperator	*		1007406	0					
ANR	1007683	PostIncDecOperationExpression	outp ++		1007406	1					
ANR	1007684	Identifier	outp		1007406	0					
ANR	1007685	IncDec	++		1007406	1					
ANR	1007686	PrimaryExpression	0		1007406	1					
ANR	1007687	ExpressionStatement	e_forward = value * 7 / 16	131:12:3645:3670	1007406	3	True				
ANR	1007688	AssignmentExpression	e_forward = value * 7 / 16		1007406	0		=			
ANR	1007689	Identifier	e_forward		1007406	0					
ANR	1007690	MultiplicativeExpression	value * 7 / 16		1007406	1		*			
ANR	1007691	Identifier	value		1007406	0					
ANR	1007692	MultiplicativeExpression	7 / 16		1007406	1		/			
ANR	1007693	PrimaryExpression	7		1007406	0					
ANR	1007694	PrimaryExpression	16		1007406	1					
ANR	1007695	ExpressionStatement	e_downleft = value * 3 / 16	132:12:3684:3709	1007406	4	True				
ANR	1007696	AssignmentExpression	e_downleft = value * 3 / 16		1007406	0		=			
ANR	1007697	Identifier	e_downleft		1007406	0					
ANR	1007698	MultiplicativeExpression	value * 3 / 16		1007406	1		*			
ANR	1007699	Identifier	value		1007406	0					
ANR	1007700	MultiplicativeExpression	3 / 16		1007406	1		/			
ANR	1007701	PrimaryExpression	3		1007406	0					
ANR	1007702	PrimaryExpression	16		1007406	1					
ANR	1007703	ExpressionStatement	e_down = value * 5 / 16	133:12:3723:3748	1007406	5	True				
ANR	1007704	AssignmentExpression	e_down = value * 5 / 16		1007406	0		=			
ANR	1007705	Identifier	e_down		1007406	0					
ANR	1007706	MultiplicativeExpression	value * 5 / 16		1007406	1		*			
ANR	1007707	Identifier	value		1007406	0					
ANR	1007708	MultiplicativeExpression	5 / 16		1007406	1		/			
ANR	1007709	PrimaryExpression	5		1007406	0					
ANR	1007710	PrimaryExpression	16		1007406	1					
ANR	1007711	ExpressionStatement	value -= e_forward + e_downleft + e_down	134:12:3762:3806	1007406	6	True				
ANR	1007712	AssignmentExpression	value -= e_forward + e_downleft + e_down		1007406	0		-=			
ANR	1007713	Identifier	value		1007406	0					
ANR	1007714	AdditiveExpression	e_forward + e_downleft + e_down		1007406	1		+			
ANR	1007715	Identifier	e_forward		1007406	0					
ANR	1007716	AdditiveExpression	e_downleft + e_down		1007406	1		+			
ANR	1007717	Identifier	e_downleft		1007406	0					
ANR	1007718	Identifier	e_down		1007406	1					
ANR	1007719	ExpressionStatement	errors [ - 2 ] += e_downleft	135:12:3820:3844	1007406	7	True				
ANR	1007720	AssignmentExpression	errors [ - 2 ] += e_downleft		1007406	0		+=			
ANR	1007721	ArrayIndexing	errors [ - 2 ]		1007406	0					
ANR	1007722	Identifier	errors		1007406	0					
ANR	1007723	UnaryOperationExpression	- 2		1007406	1					
ANR	1007724	UnaryOperator	-		1007406	0					
ANR	1007725	PrimaryExpression	2		1007406	1					
ANR	1007726	Identifier	e_downleft		1007406	1					
ANR	1007727	ExpressionStatement	errors [ - 1 ] += e_down	136:12:3858:3878	1007406	8	True				
ANR	1007728	AssignmentExpression	errors [ - 1 ] += e_down		1007406	0		+=			
ANR	1007729	ArrayIndexing	errors [ - 1 ]		1007406	0					
ANR	1007730	Identifier	errors		1007406	0					
ANR	1007731	UnaryOperationExpression	- 1		1007406	1					
ANR	1007732	UnaryOperator	-		1007406	0					
ANR	1007733	PrimaryExpression	1		1007406	1					
ANR	1007734	Identifier	e_down		1007406	1					
ANR	1007735	ExpressionStatement	* errors ++ = value	137:12:3892:3911	1007406	9	True				
ANR	1007736	AssignmentExpression	* errors ++ = value		1007406	0		=			
ANR	1007737	UnaryOperationExpression	* errors ++		1007406	0					
ANR	1007738	UnaryOperator	*		1007406	0					
ANR	1007739	PostIncDecOperationExpression	errors ++		1007406	1					
ANR	1007740	Identifier	errors		1007406	0					
ANR	1007741	IncDec	++		1007406	1					
ANR	1007742	Identifier	value		1007406	1					
ANR	1007743	ExpressionStatement	outp -= awidth	139:8:3931:3945	1007406	4	True				
ANR	1007744	AssignmentExpression	outp -= awidth		1007406	0		-=			
ANR	1007745	Identifier	outp		1007406	0					
ANR	1007746	Identifier	awidth		1007406	1					
ANR	1007747	ElseStatement	else		1007406	0					
ANR	1007748	CompoundStatement		68:8:1819:1853	1007406	0					
ANR	1007749	IdentifierDeclStatement	const int back = span * factor + 1 ;	144:8:4031:4065	1007406	0	True				
ANR	1007750	IdentifierDecl	back = span * factor + 1		1007406	0					
ANR	1007751	IdentifierDeclType	const int		1007406	0					
ANR	1007752	Identifier	back		1007406	1					
ANR	1007753	AssignmentExpression	back = span * factor + 1		1007406	2		=			
ANR	1007754	Identifier	back		1007406	0					
ANR	1007755	AdditiveExpression	span * factor + 1		1007406	1		+			
ANR	1007756	MultiplicativeExpression	span * factor		1007406	0		*			
ANR	1007757	Identifier	span		1007406	0					
ANR	1007758	Identifier	factor		1007406	1					
ANR	1007759	PrimaryExpression	1		1007406	1					
ANR	1007760	ExpressionStatement	errors += awidth	145:8:4075:4091	1007406	1	True				
ANR	1007761	AssignmentExpression	errors += awidth		1007406	0		+=			
ANR	1007762	Identifier	errors		1007406	0					
ANR	1007763	Identifier	awidth		1007406	1					
ANR	1007764	ExpressionStatement	inp += awidth * factor - 1	146:8:4101:4123	1007406	2	True				
ANR	1007765	AssignmentExpression	inp += awidth * factor - 1		1007406	0		+=			
ANR	1007766	Identifier	inp		1007406	0					
ANR	1007767	AdditiveExpression	awidth * factor - 1		1007406	1		-			
ANR	1007768	MultiplicativeExpression	awidth * factor		1007406	0		*			
ANR	1007769	Identifier	awidth		1007406	0					
ANR	1007770	Identifier	factor		1007406	1					
ANR	1007771	PrimaryExpression	1		1007406	1					
ANR	1007772	ExpressionStatement	outp = inp	147:8:4133:4143	1007406	3	True				
ANR	1007773	AssignmentExpression	outp = inp		1007406	0		=			
ANR	1007774	Identifier	outp		1007406	0					
ANR	1007775	Identifier	inp		1007406	1					
ANR	1007776	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1007406	4					
ANR	1007777	ForInit	x = awidth ;	148:13:4158:4168	1007406	0	True				
ANR	1007778	AssignmentExpression	x = awidth		1007406	0		=			
ANR	1007779	Identifier	x		1007406	0					
ANR	1007780	Identifier	awidth		1007406	1					
ANR	1007781	Condition	x > 0	148:25:4170:4174	1007406	1	True				
ANR	1007782	RelationalExpression	x > 0		1007406	0		>			
ANR	1007783	Identifier	x		1007406	0					
ANR	1007784	PrimaryExpression	0		1007406	1					
ANR	1007785	PostIncDecOperationExpression	x --	148:32:4177:4179	1007406	2	True				
ANR	1007786	Identifier	x		1007406	0					
ANR	1007787	IncDec	--		1007406	1					
ANR	1007788	CompoundStatement		73:8:1978:1978	1007406	3					
ANR	1007789	ExpressionStatement	value = e_forward + * errors	150:12:4204:4231	1007406	0	True				
ANR	1007790	AssignmentExpression	value = e_forward + * errors		1007406	0		=			
ANR	1007791	Identifier	value		1007406	0					
ANR	1007792	AdditiveExpression	e_forward + * errors		1007406	1		+			
ANR	1007793	Identifier	e_forward		1007406	0					
ANR	1007794	UnaryOperationExpression	* errors		1007406	1					
ANR	1007795	UnaryOperator	*		1007406	0					
ANR	1007796	Identifier	errors		1007406	1					
ANR	1007797	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1007406	1					
ANR	1007798	ForInit	xx = factor ;	151:17:4250:4261	1007406	0	True				
ANR	1007799	AssignmentExpression	xx = factor		1007406	0		=			
ANR	1007800	Identifier	xx		1007406	0					
ANR	1007801	Identifier	factor		1007406	1					
ANR	1007802	Condition	xx > 0	151:30:4263:4268	1007406	1	True				
ANR	1007803	RelationalExpression	xx > 0		1007406	0		>			
ANR	1007804	Identifier	xx		1007406	0					
ANR	1007805	PrimaryExpression	0		1007406	1					
ANR	1007806	PostIncDecOperationExpression	xx --	151:38:4271:4274	1007406	2	True				
ANR	1007807	Identifier	xx		1007406	0					
ANR	1007808	IncDec	--		1007406	1					
ANR	1007809	CompoundStatement		76:12:2077:2077	1007406	3					
ANR	1007810	ForStatement	for ( y = factor ; y > 0 ; y -- )		1007406	0					
ANR	1007811	ForInit	y = factor ;	153:21:4312:4322	1007406	0	True				
ANR	1007812	AssignmentExpression	y = factor		1007406	0		=			
ANR	1007813	Identifier	y		1007406	0					
ANR	1007814	Identifier	factor		1007406	1					
ANR	1007815	Condition	y > 0	153:33:4324:4328	1007406	1	True				
ANR	1007816	RelationalExpression	y > 0		1007406	0		>			
ANR	1007817	Identifier	y		1007406	0					
ANR	1007818	PrimaryExpression	0		1007406	1					
ANR	1007819	PostIncDecOperationExpression	y --	153:40:4331:4333	1007406	2	True				
ANR	1007820	Identifier	y		1007406	0					
ANR	1007821	IncDec	--		1007406	1					
ANR	1007822	CompoundStatement		78:16:2140:2140	1007406	3					
ANR	1007823	ExpressionStatement	value += * inp	155:20:4374:4387	1007406	0	True				
ANR	1007824	AssignmentExpression	value += * inp		1007406	0		+=			
ANR	1007825	Identifier	value		1007406	0					
ANR	1007826	UnaryOperationExpression	* inp		1007406	1					
ANR	1007827	UnaryOperator	*		1007406	0					
ANR	1007828	Identifier	inp		1007406	1					
ANR	1007829	ExpressionStatement	inp += span	156:20:4409:4420	1007406	1	True				
ANR	1007830	AssignmentExpression	inp += span		1007406	0		+=			
ANR	1007831	Identifier	inp		1007406	0					
ANR	1007832	Identifier	span		1007406	1					
ANR	1007833	ExpressionStatement	inp -= back	158:16:4456:4467	1007406	1	True				
ANR	1007834	AssignmentExpression	inp -= back		1007406	0		-=			
ANR	1007835	Identifier	inp		1007406	0					
ANR	1007836	Identifier	back		1007406	1					
ANR	1007837	IfStatement	if ( value >= threshold )		1007406	2					
ANR	1007838	Condition	value >= threshold	160:16:4499:4516	1007406	0	True				
ANR	1007839	RelationalExpression	value >= threshold		1007406	0		>=			
ANR	1007840	Identifier	value		1007406	0					
ANR	1007841	Identifier	threshold		1007406	1					
ANR	1007842	CompoundStatement		85:12:2319:2319	1007406	1					
ANR	1007843	ExpressionStatement	* outp -- = 1	162:16:4549:4560	1007406	0	True				
ANR	1007844	AssignmentExpression	* outp -- = 1		1007406	0		=			
ANR	1007845	UnaryOperationExpression	* outp --		1007406	0					
ANR	1007846	UnaryOperator	*		1007406	0					
ANR	1007847	PostIncDecOperationExpression	outp --		1007406	1					
ANR	1007848	Identifier	outp		1007406	0					
ANR	1007849	IncDec	--		1007406	1					
ANR	1007850	PrimaryExpression	1		1007406	1					
ANR	1007851	ExpressionStatement	value -= max_value	163:16:4578:4596	1007406	1	True				
ANR	1007852	AssignmentExpression	value -= max_value		1007406	0		-=			
ANR	1007853	Identifier	value		1007406	0					
ANR	1007854	Identifier	max_value		1007406	1					
ANR	1007855	ElseStatement	else		1007406	0					
ANR	1007856	CompoundStatement		90:12:2429:2429	1007406	0					
ANR	1007857	ExpressionStatement	* outp -- = 0	167:16:4659:4670	1007406	0	True				
ANR	1007858	AssignmentExpression	* outp -- = 0		1007406	0		=			
ANR	1007859	UnaryOperationExpression	* outp --		1007406	0					
ANR	1007860	UnaryOperator	*		1007406	0					
ANR	1007861	PostIncDecOperationExpression	outp --		1007406	1					
ANR	1007862	Identifier	outp		1007406	0					
ANR	1007863	IncDec	--		1007406	1					
ANR	1007864	PrimaryExpression	0		1007406	1					
ANR	1007865	ExpressionStatement	e_forward = value * 7 / 16	169:12:4698:4723	1007406	3	True				
ANR	1007866	AssignmentExpression	e_forward = value * 7 / 16		1007406	0		=			
ANR	1007867	Identifier	e_forward		1007406	0					
ANR	1007868	MultiplicativeExpression	value * 7 / 16		1007406	1		*			
ANR	1007869	Identifier	value		1007406	0					
ANR	1007870	MultiplicativeExpression	7 / 16		1007406	1		/			
ANR	1007871	PrimaryExpression	7		1007406	0					
ANR	1007872	PrimaryExpression	16		1007406	1					
ANR	1007873	ExpressionStatement	e_downleft = value * 3 / 16	170:12:4737:4762	1007406	4	True				
ANR	1007874	AssignmentExpression	e_downleft = value * 3 / 16		1007406	0		=			
ANR	1007875	Identifier	e_downleft		1007406	0					
ANR	1007876	MultiplicativeExpression	value * 3 / 16		1007406	1		*			
ANR	1007877	Identifier	value		1007406	0					
ANR	1007878	MultiplicativeExpression	3 / 16		1007406	1		/			
ANR	1007879	PrimaryExpression	3		1007406	0					
ANR	1007880	PrimaryExpression	16		1007406	1					
ANR	1007881	ExpressionStatement	e_down = value * 5 / 16	171:12:4776:4801	1007406	5	True				
ANR	1007882	AssignmentExpression	e_down = value * 5 / 16		1007406	0		=			
ANR	1007883	Identifier	e_down		1007406	0					
ANR	1007884	MultiplicativeExpression	value * 5 / 16		1007406	1		*			
ANR	1007885	Identifier	value		1007406	0					
ANR	1007886	MultiplicativeExpression	5 / 16		1007406	1		/			
ANR	1007887	PrimaryExpression	5		1007406	0					
ANR	1007888	PrimaryExpression	16		1007406	1					
ANR	1007889	ExpressionStatement	value -= e_forward + e_downleft + e_down	172:12:4815:4859	1007406	6	True				
ANR	1007890	AssignmentExpression	value -= e_forward + e_downleft + e_down		1007406	0		-=			
ANR	1007891	Identifier	value		1007406	0					
ANR	1007892	AdditiveExpression	e_forward + e_downleft + e_down		1007406	1		+			
ANR	1007893	Identifier	e_forward		1007406	0					
ANR	1007894	AdditiveExpression	e_downleft + e_down		1007406	1		+			
ANR	1007895	Identifier	e_downleft		1007406	0					
ANR	1007896	Identifier	e_down		1007406	1					
ANR	1007897	ExpressionStatement	errors [ 2 ] += e_downleft	173:12:4873:4896	1007406	7	True				
ANR	1007898	AssignmentExpression	errors [ 2 ] += e_downleft		1007406	0		+=			
ANR	1007899	ArrayIndexing	errors [ 2 ]		1007406	0					
ANR	1007900	Identifier	errors		1007406	0					
ANR	1007901	PrimaryExpression	2		1007406	1					
ANR	1007902	Identifier	e_downleft		1007406	1					
ANR	1007903	ExpressionStatement	errors [ 1 ] += e_down	174:12:4910:4929	1007406	8	True				
ANR	1007904	AssignmentExpression	errors [ 1 ] += e_down		1007406	0		+=			
ANR	1007905	ArrayIndexing	errors [ 1 ]		1007406	0					
ANR	1007906	Identifier	errors		1007406	0					
ANR	1007907	PrimaryExpression	1		1007406	1					
ANR	1007908	Identifier	e_down		1007406	1					
ANR	1007909	ExpressionStatement	* errors -- = value	175:12:4943:4962	1007406	9	True				
ANR	1007910	AssignmentExpression	* errors -- = value		1007406	0		=			
ANR	1007911	UnaryOperationExpression	* errors --		1007406	0					
ANR	1007912	UnaryOperator	*		1007406	0					
ANR	1007913	PostIncDecOperationExpression	errors --		1007406	1					
ANR	1007914	Identifier	errors		1007406	0					
ANR	1007915	IncDec	--		1007406	1					
ANR	1007916	Identifier	value		1007406	1					
ANR	1007917	ExpressionStatement	outp ++	177:8:4982:4988	1007406	5	True				
ANR	1007918	PostIncDecOperationExpression	outp ++		1007406	0					
ANR	1007919	Identifier	outp		1007406	0					
ANR	1007920	IncDec	++		1007406	1					
ANR	1007921	ExpressionStatement	"pack_8to1 ( out_buffer , outp , awidth )"	179:4:5000:5035	1007406	15	True				
ANR	1007922	CallExpression	"pack_8to1 ( out_buffer , outp , awidth )"		1007406	0					
ANR	1007923	Callee	pack_8to1		1007406	0					
ANR	1007924	Identifier	pack_8to1		1007406	0					
ANR	1007925	ArgumentList	out_buffer		1007406	1					
ANR	1007926	Argument	out_buffer		1007406	0					
ANR	1007927	Identifier	out_buffer		1007406	0					
ANR	1007928	Argument	outp		1007406	1					
ANR	1007929	Identifier	outp		1007406	0					
ANR	1007930	Argument	awidth		1007406	2					
ANR	1007931	Identifier	awidth		1007406	0					
ANR	1007932	ReturnType	static void		1007406	1					
ANR	1007933	Identifier	down_core		1007406	2					
ANR	1007934	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1007406	3					
ANR	1007935	Parameter	gx_downscaler_t * ds	71:22:1954:1972	1007406	0	True				
ANR	1007936	ParameterType	gx_downscaler_t *		1007406	0					
ANR	1007937	Identifier	ds		1007406	1					
ANR	1007938	Parameter	byte * out_buffer	72:22:1997:2023	1007406	1	True				
ANR	1007939	ParameterType	byte *		1007406	0					
ANR	1007940	Identifier	out_buffer		1007406	1					
ANR	1007941	Parameter	byte * in_buffer	73:22:2048:2073	1007406	2	True				
ANR	1007942	ParameterType	byte *		1007406	0					
ANR	1007943	Identifier	in_buffer		1007406	1					
ANR	1007944	Parameter	int row	74:22:2098:2117	1007406	3	True				
ANR	1007945	ParameterType	int		1007406	0					
ANR	1007946	Identifier	row		1007406	1					
ANR	1007947	Parameter	int plane	75:22:2142:2163	1007406	4	True				
ANR	1007948	ParameterType	int		1007406	0					
ANR	1007949	Identifier	plane		1007406	1					
ANR	1007950	Parameter	int span	76:22:2188:2208	1007406	5	True				
ANR	1007951	ParameterType	int		1007406	0					
ANR	1007952	Identifier	span		1007406	1					
ANR	1007953	CFGEntryNode	ENTRY		1007406		True				
ANR	1007954	CFGExitNode	EXIT		1007406		True				
ANR	1007955	Symbol	plane		1007406						
ANR	1007956	Symbol	xx		1007406						
ANR	1007957	Symbol	awidth		1007406						
ANR	1007958	Symbol	in_buffer		1007406						
ANR	1007959	Symbol	back		1007406						
ANR	1007960	Symbol	threshold		1007406						
ANR	1007961	Symbol	ds		1007406						
ANR	1007962	Symbol	ds -> errors		1007406						
ANR	1007963	Symbol	outp		1007406						
ANR	1007964	Symbol	* ds		1007406						
ANR	1007965	Symbol	e_forward		1007406						
ANR	1007966	Symbol	* outp ++		1007406						
ANR	1007967	Symbol	* outp --		1007406						
ANR	1007968	Symbol	ds -> width		1007406						
ANR	1007969	Symbol	row		1007406						
ANR	1007970	Symbol	* errors ++		1007406						
ANR	1007971	Symbol	* errors --		1007406						
ANR	1007972	Symbol	factor		1007406						
ANR	1007973	Symbol	value		1007406						
ANR	1007974	Symbol	out_buffer		1007406						
ANR	1007975	Symbol	ds -> awidth		1007406						
ANR	1007976	Symbol	inp		1007406						
ANR	1007977	Symbol	* inp		1007406						
ANR	1007978	Symbol	* errors		1007406						
ANR	1007979	Symbol	pad_white		1007406						
ANR	1007980	Symbol	ds -> factor		1007406						
ANR	1007981	Symbol	x		1007406						
ANR	1007982	Symbol	width		1007406						
ANR	1007983	Symbol	y		1007406						
ANR	1007984	Symbol	e_downleft		1007406						
ANR	1007985	Symbol	errors		1007406						
ANR	1007986	Symbol	span		1007406						
ANR	1007987	Symbol	e_down		1007406						
ANR	1007988	Symbol	max_value		1007406						
ANR	1007989	Function	down_core_ets_1	182:0:5040:6093							
ANR	1007990	FunctionDef	"down_core_ets_1 (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1007989	0					
ANR	1007991	CompoundStatement		188:0:5355:6093	1007989	0					
ANR	1007992	IdentifierDeclStatement	unsigned char * dest [ MAX_ETS_PLANES ] ;	189:4:5361:5396	1007989	0	True				
ANR	1007993	IdentifierDecl	* dest [ MAX_ETS_PLANES ]		1007989	0					
ANR	1007994	IdentifierDeclType	unsigned char * [ MAX_ETS_PLANES ]		1007989	0					
ANR	1007995	Identifier	dest		1007989	1					
ANR	1007996	Identifier	MAX_ETS_PLANES		1007989	2					
ANR	1007997	IdentifierDeclStatement	ETS_SrcPixel * src [ MAX_ETS_PLANES ] ;	190:4:5402:5435	1007989	1	True				
ANR	1007998	IdentifierDecl	* src [ MAX_ETS_PLANES ]		1007989	0					
ANR	1007999	IdentifierDeclType	ETS_SrcPixel * [ MAX_ETS_PLANES ]		1007989	0					
ANR	1008000	Identifier	src		1007989	1					
ANR	1008001	Identifier	MAX_ETS_PLANES		1007989	2					
ANR	1008002	IdentifierDeclStatement	"int pad_white , y ;"	191:4:5441:5457	1007989	2	True				
ANR	1008003	IdentifierDecl	pad_white		1007989	0					
ANR	1008004	IdentifierDeclType	int		1007989	0					
ANR	1008005	Identifier	pad_white		1007989	1					
ANR	1008006	IdentifierDecl	y		1007989	1					
ANR	1008007	IdentifierDeclType	int		1007989	0					
ANR	1008008	Identifier	y		1007989	1					
ANR	1008009	IdentifierDeclStatement	int factor = ds -> factor ;	192:4:5463:5486	1007989	3	True				
ANR	1008010	IdentifierDecl	factor = ds -> factor		1007989	0					
ANR	1008011	IdentifierDeclType	int		1007989	0					
ANR	1008012	Identifier	factor		1007989	1					
ANR	1008013	AssignmentExpression	factor = ds -> factor		1007989	2		=			
ANR	1008014	Identifier	factor		1007989	0					
ANR	1008015	PtrMemberAccess	ds -> factor		1007989	1					
ANR	1008016	Identifier	ds		1007989	0					
ANR	1008017	Identifier	factor		1007989	1					
ANR	1008018	ExpressionStatement	pad_white = ( ds -> awidth - ds -> width ) * factor * 4	194:4:5493:5542	1007989	4	True				
ANR	1008019	AssignmentExpression	pad_white = ( ds -> awidth - ds -> width ) * factor * 4		1007989	0		=			
ANR	1008020	Identifier	pad_white		1007989	0					
ANR	1008021	MultiplicativeExpression	( ds -> awidth - ds -> width ) * factor * 4		1007989	1		*			
ANR	1008022	AdditiveExpression	ds -> awidth - ds -> width		1007989	0		-			
ANR	1008023	PtrMemberAccess	ds -> awidth		1007989	0					
ANR	1008024	Identifier	ds		1007989	0					
ANR	1008025	Identifier	awidth		1007989	1					
ANR	1008026	PtrMemberAccess	ds -> width		1007989	1					
ANR	1008027	Identifier	ds		1007989	0					
ANR	1008028	Identifier	width		1007989	1					
ANR	1008029	MultiplicativeExpression	factor * 4		1007989	1		*			
ANR	1008030	Identifier	factor		1007989	0					
ANR	1008031	PrimaryExpression	4		1007989	1					
ANR	1008032	IfStatement	if ( pad_white < 0 )		1007989	5					
ANR	1008033	Condition	pad_white < 0	195:8:5552:5564	1007989	0	True				
ANR	1008034	RelationalExpression	pad_white < 0		1007989	0		<			
ANR	1008035	Identifier	pad_white		1007989	0					
ANR	1008036	PrimaryExpression	0		1007989	1					
ANR	1008037	ExpressionStatement	pad_white = 0	196:8:5575:5588	1007989	1	True				
ANR	1008038	AssignmentExpression	pad_white = 0		1007989	0		=			
ANR	1008039	Identifier	pad_white		1007989	0					
ANR	1008040	PrimaryExpression	0		1007989	1					
ANR	1008041	IfStatement	if ( pad_white )		1007989	6					
ANR	1008042	Condition	pad_white	198:8:5599:5607	1007989	0	True				
ANR	1008043	Identifier	pad_white		1007989	0					
ANR	1008044	CompoundStatement		13:8:268:323	1007989	1					
ANR	1008045	IdentifierDeclStatement	unsigned char * inp = in_buffer + ds -> width * factor * 4 ;	200:8:5624:5679	1007989	0	True				
ANR	1008046	IdentifierDecl	* inp = in_buffer + ds -> width * factor * 4		1007989	0					
ANR	1008047	IdentifierDeclType	unsigned char *		1007989	0					
ANR	1008048	Identifier	inp		1007989	1					
ANR	1008049	AssignmentExpression	* inp = in_buffer + ds -> width * factor * 4		1007989	2		=			
ANR	1008050	Identifier	inp		1007989	0					
ANR	1008051	AdditiveExpression	in_buffer + ds -> width * factor * 4		1007989	1		+			
ANR	1008052	Identifier	in_buffer		1007989	0					
ANR	1008053	MultiplicativeExpression	ds -> width * factor * 4		1007989	1		*			
ANR	1008054	PtrMemberAccess	ds -> width		1007989	0					
ANR	1008055	Identifier	ds		1007989	0					
ANR	1008056	Identifier	width		1007989	1					
ANR	1008057	MultiplicativeExpression	factor * 4		1007989	1		*			
ANR	1008058	Identifier	factor		1007989	0					
ANR	1008059	PrimaryExpression	4		1007989	1					
ANR	1008060	ForStatement	for ( y = factor ; y > 0 ; y -- )		1007989	1					
ANR	1008061	ForInit	y = factor ;	201:13:5694:5704	1007989	0	True				
ANR	1008062	AssignmentExpression	y = factor		1007989	0		=			
ANR	1008063	Identifier	y		1007989	0					
ANR	1008064	Identifier	factor		1007989	1					
ANR	1008065	Condition	y > 0	201:25:5706:5710	1007989	1	True				
ANR	1008066	RelationalExpression	y > 0		1007989	0		>			
ANR	1008067	Identifier	y		1007989	0					
ANR	1008068	PrimaryExpression	0		1007989	1					
ANR	1008069	PostIncDecOperationExpression	y --	201:32:5713:5715	1007989	2	True				
ANR	1008070	Identifier	y		1007989	0					
ANR	1008071	IncDec	--		1007989	1					
ANR	1008072	CompoundStatement		15:8:370:370	1007989	3					
ANR	1008073	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	203:12:5740:5768	1007989	0	True				
ANR	1008074	CallExpression	"memset ( inp , 0xFF , pad_white )"		1007989	0					
ANR	1008075	Callee	memset		1007989	0					
ANR	1008076	Identifier	memset		1007989	0					
ANR	1008077	ArgumentList	inp		1007989	1					
ANR	1008078	Argument	inp		1007989	0					
ANR	1008079	Identifier	inp		1007989	0					
ANR	1008080	Argument	0xFF		1007989	1					
ANR	1008081	PrimaryExpression	0xFF		1007989	0					
ANR	1008082	Argument	pad_white		1007989	2					
ANR	1008083	Identifier	pad_white		1007989	0					
ANR	1008084	ExpressionStatement	inp += span	204:12:5782:5793	1007989	1	True				
ANR	1008085	AssignmentExpression	inp += span		1007989	0		+=			
ANR	1008086	Identifier	inp		1007989	0					
ANR	1008087	Identifier	span		1007989	1					
ANR	1008088	IfStatement	if ( ds -> ets_downscale )		1007989	7					
ANR	1008089	Condition	ds -> ets_downscale	208:8:5820:5836	1007989	0	True				
ANR	1008090	PtrMemberAccess	ds -> ets_downscale		1007989	0					
ANR	1008091	Identifier	ds		1007989	0					
ANR	1008092	Identifier	ets_downscale		1007989	1					
ANR	1008093	ExpressionStatement	"ds -> ets_downscale ( ds , in_buffer , in_buffer , row , plane , span )"	209:8:5847:5908	1007989	1	True				
ANR	1008094	CallExpression	"ds -> ets_downscale ( ds , in_buffer , in_buffer , row , plane , span )"		1007989	0					
ANR	1008095	Callee	ds -> ets_downscale		1007989	0					
ANR	1008096	PtrMemberAccess	ds -> ets_downscale		1007989	0					
ANR	1008097	Identifier	ds		1007989	0					
ANR	1008098	Identifier	ets_downscale		1007989	1					
ANR	1008099	ArgumentList	ds		1007989	1					
ANR	1008100	Argument	ds		1007989	0					
ANR	1008101	Identifier	ds		1007989	0					
ANR	1008102	Argument	in_buffer		1007989	1					
ANR	1008103	Identifier	in_buffer		1007989	0					
ANR	1008104	Argument	in_buffer		1007989	2					
ANR	1008105	Identifier	in_buffer		1007989	0					
ANR	1008106	Argument	row		1007989	3					
ANR	1008107	Identifier	row		1007989	0					
ANR	1008108	Argument	plane		1007989	4					
ANR	1008109	Identifier	plane		1007989	0					
ANR	1008110	Argument	span		1007989	5					
ANR	1008111	Identifier	span		1007989	0					
ANR	1008112	ExpressionStatement	src [ 0 ] = in_buffer	211:4:5915:5933	1007989	8	True				
ANR	1008113	AssignmentExpression	src [ 0 ] = in_buffer		1007989	0		=			
ANR	1008114	ArrayIndexing	src [ 0 ]		1007989	0					
ANR	1008115	Identifier	src		1007989	0					
ANR	1008116	PrimaryExpression	0		1007989	1					
ANR	1008117	Identifier	in_buffer		1007989	1					
ANR	1008118	ExpressionStatement	dest [ 0 ] = in_buffer	212:4:5939:5958	1007989	9	True				
ANR	1008119	AssignmentExpression	dest [ 0 ] = in_buffer		1007989	0		=			
ANR	1008120	ArrayIndexing	dest [ 0 ]		1007989	0					
ANR	1008121	Identifier	dest		1007989	0					
ANR	1008122	PrimaryExpression	0		1007989	1					
ANR	1008123	Identifier	in_buffer		1007989	1					
ANR	1008124	Statement	ets_line	213:4:5964:5971	1007989	10	True				
ANR	1008125	Statement	(	213:12:5972:5972	1007989	11	True				
ANR	1008126	Statement	(	213:13:5973:5973	1007989	12	True				
ANR	1008127	Statement	ETS_Ctx	213:14:5974:5980	1007989	13	True				
ANR	1008128	Statement	*	213:22:5982:5982	1007989	14	True				
ANR	1008129	Statement	)	213:23:5983:5983	1007989	15	True				
ANR	1008130	Statement	ds	213:24:5984:5985	1007989	16	True				
ANR	1008131	Statement	->	213:26:5986:5987	1007989	17	True				
ANR	1008132	Statement	ets_config	213:28:5988:5997	1007989	18	True				
ANR	1008133	Statement	","	213:38:5998:5998	1007989	19	True				
ANR	1008134	Statement	dest	213:40:6000:6003	1007989	20	True				
ANR	1008135	Statement	","	213:44:6004:6004	1007989	21	True				
ANR	1008136	Statement	(	213:46:6006:6006	1007989	22	True				
ANR	1008137	Statement	const	213:47:6007:6011	1007989	23	True				
ANR	1008138	Statement	ETS_SrcPixel	213:53:6013:6024	1007989	24	True				
ANR	1008139	Statement	*	213:66:6026:6026	1007989	25	True				
ANR	1008140	Statement	const	213:68:6028:6032	1007989	26	True				
ANR	1008141	Statement	*	213:74:6034:6034	1007989	27	True				
ANR	1008142	Statement	)	213:75:6035:6035	1007989	28	True				
ANR	1008143	Statement	src	213:76:6036:6038	1007989	29	True				
ANR	1008144	Statement	)	213:79:6039:6039	1007989	30	True				
ANR	1008145	ExpressionStatement		213:80:6040:6040	1007989	31	True				
ANR	1008146	ExpressionStatement	"pack_8to1 ( out_buffer , in_buffer , ds -> awidth )"	215:4:6047:6091	1007989	32	True				
ANR	1008147	CallExpression	"pack_8to1 ( out_buffer , in_buffer , ds -> awidth )"		1007989	0					
ANR	1008148	Callee	pack_8to1		1007989	0					
ANR	1008149	Identifier	pack_8to1		1007989	0					
ANR	1008150	ArgumentList	out_buffer		1007989	1					
ANR	1008151	Argument	out_buffer		1007989	0					
ANR	1008152	Identifier	out_buffer		1007989	0					
ANR	1008153	Argument	in_buffer		1007989	1					
ANR	1008154	Identifier	in_buffer		1007989	0					
ANR	1008155	Argument	ds -> awidth		1007989	2					
ANR	1008156	PtrMemberAccess	ds -> awidth		1007989	0					
ANR	1008157	Identifier	ds		1007989	0					
ANR	1008158	Identifier	awidth		1007989	1					
ANR	1008159	ReturnType	static void		1007989	1					
ANR	1008160	Identifier	down_core_ets_1		1007989	2					
ANR	1008161	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1007989	3					
ANR	1008162	Parameter	gx_downscaler_t * ds	182:28:5068:5086	1007989	0	True				
ANR	1008163	ParameterType	gx_downscaler_t *		1007989	0					
ANR	1008164	Identifier	ds		1007989	1					
ANR	1008165	Parameter	byte * out_buffer	183:28:5117:5143	1007989	1	True				
ANR	1008166	ParameterType	byte *		1007989	0					
ANR	1008167	Identifier	out_buffer		1007989	1					
ANR	1008168	Parameter	byte * in_buffer	184:28:5174:5199	1007989	2	True				
ANR	1008169	ParameterType	byte *		1007989	0					
ANR	1008170	Identifier	in_buffer		1007989	1					
ANR	1008171	Parameter	int row	185:28:5230:5249	1007989	3	True				
ANR	1008172	ParameterType	int		1007989	0					
ANR	1008173	Identifier	row		1007989	1					
ANR	1008174	Parameter	int plane	186:28:5280:5301	1007989	4	True				
ANR	1008175	ParameterType	int		1007989	0					
ANR	1008176	Identifier	plane		1007989	1					
ANR	1008177	Parameter	int span	187:28:5332:5352	1007989	5	True				
ANR	1008178	ParameterType	int		1007989	0					
ANR	1008179	Identifier	span		1007989	1					
ANR	1008180	CFGEntryNode	ENTRY		1007989		True				
ANR	1008181	CFGExitNode	EXIT		1007989		True				
ANR	1008182	Symbol	plane		1007989						
ANR	1008183	Symbol	out_buffer		1007989						
ANR	1008184	Symbol	in_buffer		1007989						
ANR	1008185	Symbol	src		1007989						
ANR	1008186	Symbol	* dest		1007989						
ANR	1008187	Symbol	ds -> awidth		1007989						
ANR	1008188	Symbol	inp		1007989						
ANR	1008189	Symbol	dest		1007989						
ANR	1008190	Symbol	* src		1007989						
ANR	1008191	Symbol	ds		1007989						
ANR	1008192	Symbol	ds -> ets_downscale		1007989						
ANR	1008193	Symbol	pad_white		1007989						
ANR	1008194	Symbol	* ds		1007989						
ANR	1008195	Symbol	ds -> factor		1007989						
ANR	1008196	Symbol	y		1007989						
ANR	1008197	Symbol	ds -> width		1007989						
ANR	1008198	Symbol	row		1007989						
ANR	1008199	Symbol	factor		1007989						
ANR	1008200	Symbol	span		1007989						
ANR	1008201	Function	down_core_1	218:0:6096:8441							
ANR	1008202	FunctionDef	"down_core_1 (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1008201	0					
ANR	1008203	CompoundStatement		224:0:6387:8441	1008201	0					
ANR	1008204	IdentifierDeclStatement	"int x , value ;"	225:4:6393:6412	1008201	0	True				
ANR	1008205	IdentifierDecl	x		1008201	0					
ANR	1008206	IdentifierDeclType	int		1008201	0					
ANR	1008207	Identifier	x		1008201	1					
ANR	1008208	IdentifierDecl	value		1008201	1					
ANR	1008209	IdentifierDeclType	int		1008201	0					
ANR	1008210	Identifier	value		1008201	1					
ANR	1008211	IdentifierDeclStatement	"int e_downleft , e_down , e_forward = 0 ;"	226:4:6418:6462	1008201	1	True				
ANR	1008212	IdentifierDecl	e_downleft		1008201	0					
ANR	1008213	IdentifierDeclType	int		1008201	0					
ANR	1008214	Identifier	e_downleft		1008201	1					
ANR	1008215	IdentifierDecl	e_down		1008201	1					
ANR	1008216	IdentifierDeclType	int		1008201	0					
ANR	1008217	Identifier	e_down		1008201	1					
ANR	1008218	IdentifierDecl	e_forward = 0		1008201	2					
ANR	1008219	IdentifierDeclType	int		1008201	0					
ANR	1008220	Identifier	e_forward		1008201	1					
ANR	1008221	AssignmentExpression	e_forward = 0		1008201	2		=			
ANR	1008222	Identifier	e_forward		1008201	0					
ANR	1008223	PrimaryExpression	0		1008201	1					
ANR	1008224	IdentifierDeclStatement	int pad_white ;	227:4:6468:6488	1008201	2	True				
ANR	1008225	IdentifierDecl	pad_white		1008201	0					
ANR	1008226	IdentifierDeclType	int		1008201	0					
ANR	1008227	Identifier	pad_white		1008201	1					
ANR	1008228	IdentifierDeclStatement	"byte * inp , * outp ;"	228:4:6494:6515	1008201	3	True				
ANR	1008229	IdentifierDecl	* inp		1008201	0					
ANR	1008230	IdentifierDeclType	byte *		1008201	0					
ANR	1008231	Identifier	inp		1008201	1					
ANR	1008232	IdentifierDecl	* outp		1008201	1					
ANR	1008233	IdentifierDeclType	byte *		1008201	0					
ANR	1008234	Identifier	outp		1008201	1					
ANR	1008235	IdentifierDeclStatement	int width = ds -> width ;	229:4:6521:6553	1008201	4	True				
ANR	1008236	IdentifierDecl	width = ds -> width		1008201	0					
ANR	1008237	IdentifierDeclType	int		1008201	0					
ANR	1008238	Identifier	width		1008201	1					
ANR	1008239	AssignmentExpression	width = ds -> width		1008201	2		=			
ANR	1008240	Identifier	width		1008201	0					
ANR	1008241	PtrMemberAccess	ds -> width		1008201	1					
ANR	1008242	Identifier	ds		1008201	0					
ANR	1008243	Identifier	width		1008201	1					
ANR	1008244	IdentifierDeclStatement	int awidth = ds -> awidth ;	230:4:6559:6592	1008201	5	True				
ANR	1008245	IdentifierDecl	awidth = ds -> awidth		1008201	0					
ANR	1008246	IdentifierDeclType	int		1008201	0					
ANR	1008247	Identifier	awidth		1008201	1					
ANR	1008248	AssignmentExpression	awidth = ds -> awidth		1008201	2		=			
ANR	1008249	Identifier	awidth		1008201	0					
ANR	1008250	PtrMemberAccess	ds -> awidth		1008201	1					
ANR	1008251	Identifier	ds		1008201	0					
ANR	1008252	Identifier	awidth		1008201	1					
ANR	1008253	IdentifierDeclStatement	int * errors = ds -> errors + ( awidth + 3 ) * plane ;	231:4:6598:6650	1008201	6	True				
ANR	1008254	IdentifierDecl	* errors = ds -> errors + ( awidth + 3 ) * plane		1008201	0					
ANR	1008255	IdentifierDeclType	int *		1008201	0					
ANR	1008256	Identifier	errors		1008201	1					
ANR	1008257	AssignmentExpression	* errors = ds -> errors + ( awidth + 3 ) * plane		1008201	2		=			
ANR	1008258	Identifier	errors		1008201	0					
ANR	1008259	AdditiveExpression	ds -> errors + ( awidth + 3 ) * plane		1008201	1		+			
ANR	1008260	PtrMemberAccess	ds -> errors		1008201	0					
ANR	1008261	Identifier	ds		1008201	0					
ANR	1008262	Identifier	errors		1008201	1					
ANR	1008263	MultiplicativeExpression	( awidth + 3 ) * plane		1008201	1		*			
ANR	1008264	AdditiveExpression	awidth + 3		1008201	0		+			
ANR	1008265	Identifier	awidth		1008201	0					
ANR	1008266	PrimaryExpression	3		1008201	1					
ANR	1008267	Identifier	plane		1008201	1					
ANR	1008268	IdentifierDeclStatement	const int threshold = 128 ;	232:4:6656:6682	1008201	7	True				
ANR	1008269	IdentifierDecl	threshold = 128		1008201	0					
ANR	1008270	IdentifierDeclType	const int		1008201	0					
ANR	1008271	Identifier	threshold		1008201	1					
ANR	1008272	AssignmentExpression	threshold = 128		1008201	2		=			
ANR	1008273	Identifier	threshold		1008201	0					
ANR	1008274	PrimaryExpression	128		1008201	1					
ANR	1008275	IdentifierDeclStatement	const int max_value = 255 ;	233:4:6688:6714	1008201	8	True				
ANR	1008276	IdentifierDecl	max_value = 255		1008201	0					
ANR	1008277	IdentifierDeclType	const int		1008201	0					
ANR	1008278	Identifier	max_value		1008201	1					
ANR	1008279	AssignmentExpression	max_value = 255		1008201	2		=			
ANR	1008280	Identifier	max_value		1008201	0					
ANR	1008281	PrimaryExpression	255		1008201	1					
ANR	1008282	ExpressionStatement	pad_white = ( awidth - width )	235:4:6721:6749	1008201	9	True				
ANR	1008283	AssignmentExpression	pad_white = ( awidth - width )		1008201	0		=			
ANR	1008284	Identifier	pad_white		1008201	0					
ANR	1008285	AdditiveExpression	awidth - width		1008201	1		-			
ANR	1008286	Identifier	awidth		1008201	0					
ANR	1008287	Identifier	width		1008201	1					
ANR	1008288	IfStatement	if ( pad_white < 0 )		1008201	10					
ANR	1008289	Condition	pad_white < 0	236:8:6759:6771	1008201	0	True				
ANR	1008290	RelationalExpression	pad_white < 0		1008201	0		<			
ANR	1008291	Identifier	pad_white		1008201	0					
ANR	1008292	PrimaryExpression	0		1008201	1					
ANR	1008293	ExpressionStatement	pad_white = 0	237:8:6782:6795	1008201	1	True				
ANR	1008294	AssignmentExpression	pad_white = 0		1008201	0		=			
ANR	1008295	Identifier	pad_white		1008201	0					
ANR	1008296	PrimaryExpression	0		1008201	1					
ANR	1008297	IfStatement	if ( pad_white )		1008201	11					
ANR	1008298	Condition	pad_white	239:8:6806:6814	1008201	0	True				
ANR	1008299	Identifier	pad_white		1008201	0					
ANR	1008300	CompoundStatement		17:4:433:433	1008201	1					
ANR	1008301	ExpressionStatement	"memset ( in_buffer + width , 0xFF , pad_white )"	241:8:6831:6873	1008201	0	True				
ANR	1008302	CallExpression	"memset ( in_buffer + width , 0xFF , pad_white )"		1008201	0					
ANR	1008303	Callee	memset		1008201	0					
ANR	1008304	Identifier	memset		1008201	0					
ANR	1008305	ArgumentList	in_buffer + width		1008201	1					
ANR	1008306	Argument	in_buffer + width		1008201	0					
ANR	1008307	AdditiveExpression	in_buffer + width		1008201	0		+			
ANR	1008308	Identifier	in_buffer		1008201	0					
ANR	1008309	Identifier	width		1008201	1					
ANR	1008310	Argument	0xFF		1008201	1					
ANR	1008311	PrimaryExpression	0xFF		1008201	0					
ANR	1008312	Argument	pad_white		1008201	2					
ANR	1008313	Identifier	pad_white		1008201	0					
ANR	1008314	ExpressionStatement	inp = in_buffer	244:4:6886:6901	1008201	12	True				
ANR	1008315	AssignmentExpression	inp = in_buffer		1008201	0		=			
ANR	1008316	Identifier	inp		1008201	0					
ANR	1008317	Identifier	in_buffer		1008201	1					
ANR	1008318	IfStatement	if ( ( row & 1 ) == 0 )		1008201	13					
ANR	1008319	Condition	( row & 1 ) == 0	245:8:6911:6924	1008201	0	True				
ANR	1008320	EqualityExpression	( row & 1 ) == 0		1008201	0		==			
ANR	1008321	BitAndExpression	row & 1		1008201	0		&			
ANR	1008322	Identifier	row		1008201	0					
ANR	1008323	PrimaryExpression	1		1008201	1					
ANR	1008324	PrimaryExpression	0		1008201	1					
ANR	1008325	CompoundStatement		23:4:543:543	1008201	1					
ANR	1008326	ExpressionStatement	errors += 2	248:8:6996:7007	1008201	0	True				
ANR	1008327	AssignmentExpression	errors += 2		1008201	0		+=			
ANR	1008328	Identifier	errors		1008201	0					
ANR	1008329	PrimaryExpression	2		1008201	1					
ANR	1008330	ExpressionStatement	outp = inp	249:8:7017:7027	1008201	1	True				
ANR	1008331	AssignmentExpression	outp = inp		1008201	0		=			
ANR	1008332	Identifier	outp		1008201	0					
ANR	1008333	Identifier	inp		1008201	1					
ANR	1008334	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1008201	2					
ANR	1008335	ForInit	x = awidth ;	250:13:7042:7052	1008201	0	True				
ANR	1008336	AssignmentExpression	x = awidth		1008201	0		=			
ANR	1008337	Identifier	x		1008201	0					
ANR	1008338	Identifier	awidth		1008201	1					
ANR	1008339	Condition	x > 0	250:25:7054:7058	1008201	1	True				
ANR	1008340	RelationalExpression	x > 0		1008201	0		>			
ANR	1008341	Identifier	x		1008201	0					
ANR	1008342	PrimaryExpression	0		1008201	1					
ANR	1008343	PostIncDecOperationExpression	x --	250:32:7061:7063	1008201	2	True				
ANR	1008344	Identifier	x		1008201	0					
ANR	1008345	IncDec	--		1008201	1					
ANR	1008346	CompoundStatement		28:8:686:686	1008201	3					
ANR	1008347	ExpressionStatement	value = e_forward + * errors + * inp ++	252:12:7088:7124	1008201	0	True				
ANR	1008348	AssignmentExpression	value = e_forward + * errors + * inp ++		1008201	0		=			
ANR	1008349	Identifier	value		1008201	0					
ANR	1008350	AdditiveExpression	e_forward + * errors + * inp ++		1008201	1		+			
ANR	1008351	Identifier	e_forward		1008201	0					
ANR	1008352	AdditiveExpression	* errors + * inp ++		1008201	1		+			
ANR	1008353	UnaryOperationExpression	* errors		1008201	0					
ANR	1008354	UnaryOperator	*		1008201	0					
ANR	1008355	Identifier	errors		1008201	1					
ANR	1008356	UnaryOperationExpression	* inp ++		1008201	1					
ANR	1008357	UnaryOperator	*		1008201	0					
ANR	1008358	PostIncDecOperationExpression	inp ++		1008201	1					
ANR	1008359	Identifier	inp		1008201	0					
ANR	1008360	IncDec	++		1008201	1					
ANR	1008361	IfStatement	if ( value >= threshold )		1008201	1					
ANR	1008362	Condition	value >= threshold	253:16:7142:7159	1008201	0	True				
ANR	1008363	RelationalExpression	value >= threshold		1008201	0		>=			
ANR	1008364	Identifier	value		1008201	0					
ANR	1008365	Identifier	threshold		1008201	1					
ANR	1008366	CompoundStatement		31:12:786:786	1008201	1					
ANR	1008367	ExpressionStatement	* outp ++ = 1	255:16:7192:7203	1008201	0	True				
ANR	1008368	AssignmentExpression	* outp ++ = 1		1008201	0		=			
ANR	1008369	UnaryOperationExpression	* outp ++		1008201	0					
ANR	1008370	UnaryOperator	*		1008201	0					
ANR	1008371	PostIncDecOperationExpression	outp ++		1008201	1					
ANR	1008372	Identifier	outp		1008201	0					
ANR	1008373	IncDec	++		1008201	1					
ANR	1008374	PrimaryExpression	1		1008201	1					
ANR	1008375	ExpressionStatement	value -= max_value	256:16:7221:7239	1008201	1	True				
ANR	1008376	AssignmentExpression	value -= max_value		1008201	0		-=			
ANR	1008377	Identifier	value		1008201	0					
ANR	1008378	Identifier	max_value		1008201	1					
ANR	1008379	ElseStatement	else		1008201	0					
ANR	1008380	CompoundStatement		36:12:896:896	1008201	0					
ANR	1008381	ExpressionStatement	* outp ++ = 0	260:16:7302:7313	1008201	0	True				
ANR	1008382	AssignmentExpression	* outp ++ = 0		1008201	0		=			
ANR	1008383	UnaryOperationExpression	* outp ++		1008201	0					
ANR	1008384	UnaryOperator	*		1008201	0					
ANR	1008385	PostIncDecOperationExpression	outp ++		1008201	1					
ANR	1008386	Identifier	outp		1008201	0					
ANR	1008387	IncDec	++		1008201	1					
ANR	1008388	PrimaryExpression	0		1008201	1					
ANR	1008389	ExpressionStatement	e_forward = value * 7 / 16	262:12:7341:7366	1008201	2	True				
ANR	1008390	AssignmentExpression	e_forward = value * 7 / 16		1008201	0		=			
ANR	1008391	Identifier	e_forward		1008201	0					
ANR	1008392	MultiplicativeExpression	value * 7 / 16		1008201	1		*			
ANR	1008393	Identifier	value		1008201	0					
ANR	1008394	MultiplicativeExpression	7 / 16		1008201	1		/			
ANR	1008395	PrimaryExpression	7		1008201	0					
ANR	1008396	PrimaryExpression	16		1008201	1					
ANR	1008397	ExpressionStatement	e_downleft = value * 3 / 16	263:12:7380:7405	1008201	3	True				
ANR	1008398	AssignmentExpression	e_downleft = value * 3 / 16		1008201	0		=			
ANR	1008399	Identifier	e_downleft		1008201	0					
ANR	1008400	MultiplicativeExpression	value * 3 / 16		1008201	1		*			
ANR	1008401	Identifier	value		1008201	0					
ANR	1008402	MultiplicativeExpression	3 / 16		1008201	1		/			
ANR	1008403	PrimaryExpression	3		1008201	0					
ANR	1008404	PrimaryExpression	16		1008201	1					
ANR	1008405	ExpressionStatement	e_down = value * 5 / 16	264:12:7419:7444	1008201	4	True				
ANR	1008406	AssignmentExpression	e_down = value * 5 / 16		1008201	0		=			
ANR	1008407	Identifier	e_down		1008201	0					
ANR	1008408	MultiplicativeExpression	value * 5 / 16		1008201	1		*			
ANR	1008409	Identifier	value		1008201	0					
ANR	1008410	MultiplicativeExpression	5 / 16		1008201	1		/			
ANR	1008411	PrimaryExpression	5		1008201	0					
ANR	1008412	PrimaryExpression	16		1008201	1					
ANR	1008413	ExpressionStatement	value -= e_forward + e_downleft + e_down	265:12:7458:7502	1008201	5	True				
ANR	1008414	AssignmentExpression	value -= e_forward + e_downleft + e_down		1008201	0		-=			
ANR	1008415	Identifier	value		1008201	0					
ANR	1008416	AdditiveExpression	e_forward + e_downleft + e_down		1008201	1		+			
ANR	1008417	Identifier	e_forward		1008201	0					
ANR	1008418	AdditiveExpression	e_downleft + e_down		1008201	1		+			
ANR	1008419	Identifier	e_downleft		1008201	0					
ANR	1008420	Identifier	e_down		1008201	1					
ANR	1008421	ExpressionStatement	errors [ - 2 ] += e_downleft	266:12:7516:7540	1008201	6	True				
ANR	1008422	AssignmentExpression	errors [ - 2 ] += e_downleft		1008201	0		+=			
ANR	1008423	ArrayIndexing	errors [ - 2 ]		1008201	0					
ANR	1008424	Identifier	errors		1008201	0					
ANR	1008425	UnaryOperationExpression	- 2		1008201	1					
ANR	1008426	UnaryOperator	-		1008201	0					
ANR	1008427	PrimaryExpression	2		1008201	1					
ANR	1008428	Identifier	e_downleft		1008201	1					
ANR	1008429	ExpressionStatement	errors [ - 1 ] += e_down	267:12:7554:7574	1008201	7	True				
ANR	1008430	AssignmentExpression	errors [ - 1 ] += e_down		1008201	0		+=			
ANR	1008431	ArrayIndexing	errors [ - 1 ]		1008201	0					
ANR	1008432	Identifier	errors		1008201	0					
ANR	1008433	UnaryOperationExpression	- 1		1008201	1					
ANR	1008434	UnaryOperator	-		1008201	0					
ANR	1008435	PrimaryExpression	1		1008201	1					
ANR	1008436	Identifier	e_down		1008201	1					
ANR	1008437	ExpressionStatement	* errors ++ = value	268:12:7588:7607	1008201	8	True				
ANR	1008438	AssignmentExpression	* errors ++ = value		1008201	0		=			
ANR	1008439	UnaryOperationExpression	* errors ++		1008201	0					
ANR	1008440	UnaryOperator	*		1008201	0					
ANR	1008441	PostIncDecOperationExpression	errors ++		1008201	1					
ANR	1008442	Identifier	errors		1008201	0					
ANR	1008443	IncDec	++		1008201	1					
ANR	1008444	Identifier	value		1008201	1					
ANR	1008445	ExpressionStatement	outp -= awidth	270:8:7627:7641	1008201	3	True				
ANR	1008446	AssignmentExpression	outp -= awidth		1008201	0		-=			
ANR	1008447	Identifier	outp		1008201	0					
ANR	1008448	Identifier	awidth		1008201	1					
ANR	1008449	ElseStatement	else		1008201	0					
ANR	1008450	CompoundStatement		50:4:1274:1274	1008201	0					
ANR	1008451	ExpressionStatement	errors += awidth	275:8:7727:7743	1008201	0	True				
ANR	1008452	AssignmentExpression	errors += awidth		1008201	0		+=			
ANR	1008453	Identifier	errors		1008201	0					
ANR	1008454	Identifier	awidth		1008201	1					
ANR	1008455	ExpressionStatement	inp += awidth - 1	276:8:7753:7768	1008201	1	True				
ANR	1008456	AssignmentExpression	inp += awidth - 1		1008201	0		+=			
ANR	1008457	Identifier	inp		1008201	0					
ANR	1008458	AdditiveExpression	awidth - 1		1008201	1		-			
ANR	1008459	Identifier	awidth		1008201	0					
ANR	1008460	PrimaryExpression	1		1008201	1					
ANR	1008461	ExpressionStatement	outp = inp	277:8:7778:7788	1008201	2	True				
ANR	1008462	AssignmentExpression	outp = inp		1008201	0		=			
ANR	1008463	Identifier	outp		1008201	0					
ANR	1008464	Identifier	inp		1008201	1					
ANR	1008465	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1008201	3					
ANR	1008466	ForInit	x = awidth ;	278:13:7803:7813	1008201	0	True				
ANR	1008467	AssignmentExpression	x = awidth		1008201	0		=			
ANR	1008468	Identifier	x		1008201	0					
ANR	1008469	Identifier	awidth		1008201	1					
ANR	1008470	Condition	x > 0	278:25:7815:7819	1008201	1	True				
ANR	1008471	RelationalExpression	x > 0		1008201	0		>			
ANR	1008472	Identifier	x		1008201	0					
ANR	1008473	PrimaryExpression	0		1008201	1					
ANR	1008474	PostIncDecOperationExpression	x --	278:32:7822:7824	1008201	2	True				
ANR	1008475	Identifier	x		1008201	0					
ANR	1008476	IncDec	--		1008201	1					
ANR	1008477	CompoundStatement		56:8:1447:1447	1008201	3					
ANR	1008478	ExpressionStatement	value = e_forward + * errors + * inp --	280:12:7849:7885	1008201	0	True				
ANR	1008479	AssignmentExpression	value = e_forward + * errors + * inp --		1008201	0		=			
ANR	1008480	Identifier	value		1008201	0					
ANR	1008481	AdditiveExpression	e_forward + * errors + * inp --		1008201	1		+			
ANR	1008482	Identifier	e_forward		1008201	0					
ANR	1008483	AdditiveExpression	* errors + * inp --		1008201	1		+			
ANR	1008484	UnaryOperationExpression	* errors		1008201	0					
ANR	1008485	UnaryOperator	*		1008201	0					
ANR	1008486	Identifier	errors		1008201	1					
ANR	1008487	UnaryOperationExpression	* inp --		1008201	1					
ANR	1008488	UnaryOperator	*		1008201	0					
ANR	1008489	PostIncDecOperationExpression	inp --		1008201	1					
ANR	1008490	Identifier	inp		1008201	0					
ANR	1008491	IncDec	--		1008201	1					
ANR	1008492	IfStatement	if ( value >= threshold )		1008201	1					
ANR	1008493	Condition	value >= threshold	281:16:7903:7920	1008201	0	True				
ANR	1008494	RelationalExpression	value >= threshold		1008201	0		>=			
ANR	1008495	Identifier	value		1008201	0					
ANR	1008496	Identifier	threshold		1008201	1					
ANR	1008497	CompoundStatement		59:12:1547:1547	1008201	1					
ANR	1008498	ExpressionStatement	* outp -- = 1	283:16:7953:7964	1008201	0	True				
ANR	1008499	AssignmentExpression	* outp -- = 1		1008201	0		=			
ANR	1008500	UnaryOperationExpression	* outp --		1008201	0					
ANR	1008501	UnaryOperator	*		1008201	0					
ANR	1008502	PostIncDecOperationExpression	outp --		1008201	1					
ANR	1008503	Identifier	outp		1008201	0					
ANR	1008504	IncDec	--		1008201	1					
ANR	1008505	PrimaryExpression	1		1008201	1					
ANR	1008506	ExpressionStatement	value -= max_value	284:16:7982:8000	1008201	1	True				
ANR	1008507	AssignmentExpression	value -= max_value		1008201	0		-=			
ANR	1008508	Identifier	value		1008201	0					
ANR	1008509	Identifier	max_value		1008201	1					
ANR	1008510	ElseStatement	else		1008201	0					
ANR	1008511	CompoundStatement		64:12:1657:1657	1008201	0					
ANR	1008512	ExpressionStatement	* outp -- = 0	288:16:8063:8074	1008201	0	True				
ANR	1008513	AssignmentExpression	* outp -- = 0		1008201	0		=			
ANR	1008514	UnaryOperationExpression	* outp --		1008201	0					
ANR	1008515	UnaryOperator	*		1008201	0					
ANR	1008516	PostIncDecOperationExpression	outp --		1008201	1					
ANR	1008517	Identifier	outp		1008201	0					
ANR	1008518	IncDec	--		1008201	1					
ANR	1008519	PrimaryExpression	0		1008201	1					
ANR	1008520	ExpressionStatement	e_forward = value * 7 / 16	290:12:8102:8127	1008201	2	True				
ANR	1008521	AssignmentExpression	e_forward = value * 7 / 16		1008201	0		=			
ANR	1008522	Identifier	e_forward		1008201	0					
ANR	1008523	MultiplicativeExpression	value * 7 / 16		1008201	1		*			
ANR	1008524	Identifier	value		1008201	0					
ANR	1008525	MultiplicativeExpression	7 / 16		1008201	1		/			
ANR	1008526	PrimaryExpression	7		1008201	0					
ANR	1008527	PrimaryExpression	16		1008201	1					
ANR	1008528	ExpressionStatement	e_downleft = value * 3 / 16	291:12:8141:8166	1008201	3	True				
ANR	1008529	AssignmentExpression	e_downleft = value * 3 / 16		1008201	0		=			
ANR	1008530	Identifier	e_downleft		1008201	0					
ANR	1008531	MultiplicativeExpression	value * 3 / 16		1008201	1		*			
ANR	1008532	Identifier	value		1008201	0					
ANR	1008533	MultiplicativeExpression	3 / 16		1008201	1		/			
ANR	1008534	PrimaryExpression	3		1008201	0					
ANR	1008535	PrimaryExpression	16		1008201	1					
ANR	1008536	ExpressionStatement	e_down = value * 5 / 16	292:12:8180:8205	1008201	4	True				
ANR	1008537	AssignmentExpression	e_down = value * 5 / 16		1008201	0		=			
ANR	1008538	Identifier	e_down		1008201	0					
ANR	1008539	MultiplicativeExpression	value * 5 / 16		1008201	1		*			
ANR	1008540	Identifier	value		1008201	0					
ANR	1008541	MultiplicativeExpression	5 / 16		1008201	1		/			
ANR	1008542	PrimaryExpression	5		1008201	0					
ANR	1008543	PrimaryExpression	16		1008201	1					
ANR	1008544	ExpressionStatement	value -= e_forward + e_downleft + e_down	293:12:8219:8263	1008201	5	True				
ANR	1008545	AssignmentExpression	value -= e_forward + e_downleft + e_down		1008201	0		-=			
ANR	1008546	Identifier	value		1008201	0					
ANR	1008547	AdditiveExpression	e_forward + e_downleft + e_down		1008201	1		+			
ANR	1008548	Identifier	e_forward		1008201	0					
ANR	1008549	AdditiveExpression	e_downleft + e_down		1008201	1		+			
ANR	1008550	Identifier	e_downleft		1008201	0					
ANR	1008551	Identifier	e_down		1008201	1					
ANR	1008552	ExpressionStatement	errors [ 2 ] += e_downleft	294:12:8277:8300	1008201	6	True				
ANR	1008553	AssignmentExpression	errors [ 2 ] += e_downleft		1008201	0		+=			
ANR	1008554	ArrayIndexing	errors [ 2 ]		1008201	0					
ANR	1008555	Identifier	errors		1008201	0					
ANR	1008556	PrimaryExpression	2		1008201	1					
ANR	1008557	Identifier	e_downleft		1008201	1					
ANR	1008558	ExpressionStatement	errors [ 1 ] += e_down	295:12:8314:8333	1008201	7	True				
ANR	1008559	AssignmentExpression	errors [ 1 ] += e_down		1008201	0		+=			
ANR	1008560	ArrayIndexing	errors [ 1 ]		1008201	0					
ANR	1008561	Identifier	errors		1008201	0					
ANR	1008562	PrimaryExpression	1		1008201	1					
ANR	1008563	Identifier	e_down		1008201	1					
ANR	1008564	ExpressionStatement	* errors -- = value	296:12:8347:8366	1008201	8	True				
ANR	1008565	AssignmentExpression	* errors -- = value		1008201	0		=			
ANR	1008566	UnaryOperationExpression	* errors --		1008201	0					
ANR	1008567	UnaryOperator	*		1008201	0					
ANR	1008568	PostIncDecOperationExpression	errors --		1008201	1					
ANR	1008569	Identifier	errors		1008201	0					
ANR	1008570	IncDec	--		1008201	1					
ANR	1008571	Identifier	value		1008201	1					
ANR	1008572	ExpressionStatement	outp ++	298:8:8386:8392	1008201	4	True				
ANR	1008573	PostIncDecOperationExpression	outp ++		1008201	0					
ANR	1008574	Identifier	outp		1008201	0					
ANR	1008575	IncDec	++		1008201	1					
ANR	1008576	ExpressionStatement	"pack_8to1 ( out_buffer , outp , awidth )"	300:4:8404:8439	1008201	14	True				
ANR	1008577	CallExpression	"pack_8to1 ( out_buffer , outp , awidth )"		1008201	0					
ANR	1008578	Callee	pack_8to1		1008201	0					
ANR	1008579	Identifier	pack_8to1		1008201	0					
ANR	1008580	ArgumentList	out_buffer		1008201	1					
ANR	1008581	Argument	out_buffer		1008201	0					
ANR	1008582	Identifier	out_buffer		1008201	0					
ANR	1008583	Argument	outp		1008201	1					
ANR	1008584	Identifier	outp		1008201	0					
ANR	1008585	Argument	awidth		1008201	2					
ANR	1008586	Identifier	awidth		1008201	0					
ANR	1008587	ReturnType	static void		1008201	1					
ANR	1008588	Identifier	down_core_1		1008201	2					
ANR	1008589	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1008201	3					
ANR	1008590	Parameter	gx_downscaler_t * ds	218:24:6120:6138	1008201	0	True				
ANR	1008591	ParameterType	gx_downscaler_t *		1008201	0					
ANR	1008592	Identifier	ds		1008201	1					
ANR	1008593	Parameter	byte * out_buffer	219:24:6165:6191	1008201	1	True				
ANR	1008594	ParameterType	byte *		1008201	0					
ANR	1008595	Identifier	out_buffer		1008201	1					
ANR	1008596	Parameter	byte * in_buffer	220:24:6218:6243	1008201	2	True				
ANR	1008597	ParameterType	byte *		1008201	0					
ANR	1008598	Identifier	in_buffer		1008201	1					
ANR	1008599	Parameter	int row	221:24:6270:6289	1008201	3	True				
ANR	1008600	ParameterType	int		1008201	0					
ANR	1008601	Identifier	row		1008201	1					
ANR	1008602	Parameter	int plane	222:24:6316:6337	1008201	4	True				
ANR	1008603	ParameterType	int		1008201	0					
ANR	1008604	Identifier	plane		1008201	1					
ANR	1008605	Parameter	int span	223:24:6364:6384	1008201	5	True				
ANR	1008606	ParameterType	int		1008201	0					
ANR	1008607	Identifier	span		1008201	1					
ANR	1008608	CFGEntryNode	ENTRY		1008201		True				
ANR	1008609	CFGExitNode	EXIT		1008201		True				
ANR	1008610	Symbol	plane		1008201						
ANR	1008611	Symbol	awidth		1008201						
ANR	1008612	Symbol	in_buffer		1008201						
ANR	1008613	Symbol	threshold		1008201						
ANR	1008614	Symbol	* inp ++		1008201						
ANR	1008615	Symbol	* inp --		1008201						
ANR	1008616	Symbol	ds		1008201						
ANR	1008617	Symbol	ds -> errors		1008201						
ANR	1008618	Symbol	outp		1008201						
ANR	1008619	Symbol	* ds		1008201						
ANR	1008620	Symbol	e_forward		1008201						
ANR	1008621	Symbol	* outp ++		1008201						
ANR	1008622	Symbol	* outp --		1008201						
ANR	1008623	Symbol	ds -> width		1008201						
ANR	1008624	Symbol	row		1008201						
ANR	1008625	Symbol	* errors ++		1008201						
ANR	1008626	Symbol	* errors --		1008201						
ANR	1008627	Symbol	value		1008201						
ANR	1008628	Symbol	out_buffer		1008201						
ANR	1008629	Symbol	ds -> awidth		1008201						
ANR	1008630	Symbol	inp		1008201						
ANR	1008631	Symbol	* errors		1008201						
ANR	1008632	Symbol	pad_white		1008201						
ANR	1008633	Symbol	x		1008201						
ANR	1008634	Symbol	width		1008201						
ANR	1008635	Symbol	e_downleft		1008201						
ANR	1008636	Symbol	errors		1008201						
ANR	1008637	Symbol	span		1008201						
ANR	1008638	Symbol	e_down		1008201						
ANR	1008639	Symbol	max_value		1008201						
ANR	1008640	Function	down_core_2	303:0:8444:11021							
ANR	1008641	FunctionDef	"down_core_2 (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1008640	0					
ANR	1008642	CompoundStatement		309:0:8735:11021	1008640	0					
ANR	1008643	IdentifierDeclStatement	"int x , value ;"	310:4:8741:8760	1008640	0	True				
ANR	1008644	IdentifierDecl	x		1008640	0					
ANR	1008645	IdentifierDeclType	int		1008640	0					
ANR	1008646	Identifier	x		1008640	1					
ANR	1008647	IdentifierDecl	value		1008640	1					
ANR	1008648	IdentifierDeclType	int		1008640	0					
ANR	1008649	Identifier	value		1008640	1					
ANR	1008650	IdentifierDeclStatement	"int e_downleft , e_down , e_forward = 0 ;"	311:4:8766:8810	1008640	1	True				
ANR	1008651	IdentifierDecl	e_downleft		1008640	0					
ANR	1008652	IdentifierDeclType	int		1008640	0					
ANR	1008653	Identifier	e_downleft		1008640	1					
ANR	1008654	IdentifierDecl	e_down		1008640	1					
ANR	1008655	IdentifierDeclType	int		1008640	0					
ANR	1008656	Identifier	e_down		1008640	1					
ANR	1008657	IdentifierDecl	e_forward = 0		1008640	2					
ANR	1008658	IdentifierDeclType	int		1008640	0					
ANR	1008659	Identifier	e_forward		1008640	1					
ANR	1008660	AssignmentExpression	e_forward = 0		1008640	2		=			
ANR	1008661	Identifier	e_forward		1008640	0					
ANR	1008662	PrimaryExpression	0		1008640	1					
ANR	1008663	IdentifierDeclStatement	int pad_white ;	312:4:8816:8836	1008640	2	True				
ANR	1008664	IdentifierDecl	pad_white		1008640	0					
ANR	1008665	IdentifierDeclType	int		1008640	0					
ANR	1008666	Identifier	pad_white		1008640	1					
ANR	1008667	IdentifierDeclStatement	"byte * inp , * outp ;"	313:4:8842:8863	1008640	3	True				
ANR	1008668	IdentifierDecl	* inp		1008640	0					
ANR	1008669	IdentifierDeclType	byte *		1008640	0					
ANR	1008670	Identifier	inp		1008640	1					
ANR	1008671	IdentifierDecl	* outp		1008640	1					
ANR	1008672	IdentifierDeclType	byte *		1008640	0					
ANR	1008673	Identifier	outp		1008640	1					
ANR	1008674	IdentifierDeclStatement	int width = ds -> width ;	314:4:8869:8901	1008640	4	True				
ANR	1008675	IdentifierDecl	width = ds -> width		1008640	0					
ANR	1008676	IdentifierDeclType	int		1008640	0					
ANR	1008677	Identifier	width		1008640	1					
ANR	1008678	AssignmentExpression	width = ds -> width		1008640	2		=			
ANR	1008679	Identifier	width		1008640	0					
ANR	1008680	PtrMemberAccess	ds -> width		1008640	1					
ANR	1008681	Identifier	ds		1008640	0					
ANR	1008682	Identifier	width		1008640	1					
ANR	1008683	IdentifierDeclStatement	int awidth = ds -> awidth ;	315:4:8907:8940	1008640	5	True				
ANR	1008684	IdentifierDecl	awidth = ds -> awidth		1008640	0					
ANR	1008685	IdentifierDeclType	int		1008640	0					
ANR	1008686	Identifier	awidth		1008640	1					
ANR	1008687	AssignmentExpression	awidth = ds -> awidth		1008640	2		=			
ANR	1008688	Identifier	awidth		1008640	0					
ANR	1008689	PtrMemberAccess	ds -> awidth		1008640	1					
ANR	1008690	Identifier	ds		1008640	0					
ANR	1008691	Identifier	awidth		1008640	1					
ANR	1008692	IdentifierDeclStatement	int * errors = ds -> errors + ( awidth + 3 ) * plane ;	316:4:8946:8998	1008640	6	True				
ANR	1008693	IdentifierDecl	* errors = ds -> errors + ( awidth + 3 ) * plane		1008640	0					
ANR	1008694	IdentifierDeclType	int *		1008640	0					
ANR	1008695	Identifier	errors		1008640	1					
ANR	1008696	AssignmentExpression	* errors = ds -> errors + ( awidth + 3 ) * plane		1008640	2		=			
ANR	1008697	Identifier	errors		1008640	0					
ANR	1008698	AdditiveExpression	ds -> errors + ( awidth + 3 ) * plane		1008640	1		+			
ANR	1008699	PtrMemberAccess	ds -> errors		1008640	0					
ANR	1008700	Identifier	ds		1008640	0					
ANR	1008701	Identifier	errors		1008640	1					
ANR	1008702	MultiplicativeExpression	( awidth + 3 ) * plane		1008640	1		*			
ANR	1008703	AdditiveExpression	awidth + 3		1008640	0		+			
ANR	1008704	Identifier	awidth		1008640	0					
ANR	1008705	PrimaryExpression	3		1008640	1					
ANR	1008706	Identifier	plane		1008640	1					
ANR	1008707	IdentifierDeclStatement	const int threshold = 2 * 2 * 128 ;	317:4:9004:9034	1008640	7	True				
ANR	1008708	IdentifierDecl	threshold = 2 * 2 * 128		1008640	0					
ANR	1008709	IdentifierDeclType	const int		1008640	0					
ANR	1008710	Identifier	threshold		1008640	1					
ANR	1008711	AssignmentExpression	threshold = 2 * 2 * 128		1008640	2		=			
ANR	1008712	Identifier	threshold		1008640	0					
ANR	1008713	MultiplicativeExpression	2 * 2 * 128		1008640	1		*			
ANR	1008714	PrimaryExpression	2		1008640	0					
ANR	1008715	MultiplicativeExpression	2 * 128		1008640	1		*			
ANR	1008716	PrimaryExpression	2		1008640	0					
ANR	1008717	PrimaryExpression	128		1008640	1					
ANR	1008718	IdentifierDeclStatement	const int max_value = 2 * 2 * 255 ;	318:4:9040:9070	1008640	8	True				
ANR	1008719	IdentifierDecl	max_value = 2 * 2 * 255		1008640	0					
ANR	1008720	IdentifierDeclType	const int		1008640	0					
ANR	1008721	Identifier	max_value		1008640	1					
ANR	1008722	AssignmentExpression	max_value = 2 * 2 * 255		1008640	2		=			
ANR	1008723	Identifier	max_value		1008640	0					
ANR	1008724	MultiplicativeExpression	2 * 2 * 255		1008640	1		*			
ANR	1008725	PrimaryExpression	2		1008640	0					
ANR	1008726	MultiplicativeExpression	2 * 255		1008640	1		*			
ANR	1008727	PrimaryExpression	2		1008640	0					
ANR	1008728	PrimaryExpression	255		1008640	1					
ANR	1008729	ExpressionStatement	pad_white = ( awidth - width ) * 2	320:4:9077:9109	1008640	9	True				
ANR	1008730	AssignmentExpression	pad_white = ( awidth - width ) * 2		1008640	0		=			
ANR	1008731	Identifier	pad_white		1008640	0					
ANR	1008732	MultiplicativeExpression	( awidth - width ) * 2		1008640	1		*			
ANR	1008733	AdditiveExpression	awidth - width		1008640	0		-			
ANR	1008734	Identifier	awidth		1008640	0					
ANR	1008735	Identifier	width		1008640	1					
ANR	1008736	PrimaryExpression	2		1008640	1					
ANR	1008737	IfStatement	if ( pad_white < 0 )		1008640	10					
ANR	1008738	Condition	pad_white < 0	321:8:9119:9131	1008640	0	True				
ANR	1008739	RelationalExpression	pad_white < 0		1008640	0		<			
ANR	1008740	Identifier	pad_white		1008640	0					
ANR	1008741	PrimaryExpression	0		1008640	1					
ANR	1008742	ExpressionStatement	pad_white = 0	322:8:9142:9155	1008640	1	True				
ANR	1008743	AssignmentExpression	pad_white = 0		1008640	0		=			
ANR	1008744	Identifier	pad_white		1008640	0					
ANR	1008745	PrimaryExpression	0		1008640	1					
ANR	1008746	IfStatement	if ( pad_white )		1008640	11					
ANR	1008747	Condition	pad_white	324:8:9166:9174	1008640	0	True				
ANR	1008748	Identifier	pad_white		1008640	0					
ANR	1008749	CompoundStatement		17:4:445:445	1008640	1					
ANR	1008750	ExpressionStatement	inp = in_buffer + width * 2	326:8:9191:9216	1008640	0	True				
ANR	1008751	AssignmentExpression	inp = in_buffer + width * 2		1008640	0		=			
ANR	1008752	Identifier	inp		1008640	0					
ANR	1008753	AdditiveExpression	in_buffer + width * 2		1008640	1		+			
ANR	1008754	Identifier	in_buffer		1008640	0					
ANR	1008755	MultiplicativeExpression	width * 2		1008640	1		*			
ANR	1008756	Identifier	width		1008640	0					
ANR	1008757	PrimaryExpression	2		1008640	1					
ANR	1008758	ForStatement	for ( x = 2 ; x > 0 ; x -- )		1008640	1					
ANR	1008759	ForInit	x = 2 ;	327:13:9231:9236	1008640	0	True				
ANR	1008760	AssignmentExpression	x = 2		1008640	0		=			
ANR	1008761	Identifier	x		1008640	0					
ANR	1008762	PrimaryExpression	2		1008640	1					
ANR	1008763	Condition	x > 0	327:20:9238:9242	1008640	1	True				
ANR	1008764	RelationalExpression	x > 0		1008640	0		>			
ANR	1008765	Identifier	x		1008640	0					
ANR	1008766	PrimaryExpression	0		1008640	1					
ANR	1008767	PostIncDecOperationExpression	x --	327:27:9245:9247	1008640	2	True				
ANR	1008768	Identifier	x		1008640	0					
ANR	1008769	IncDec	--		1008640	1					
ANR	1008770	CompoundStatement		20:8:522:522	1008640	3					
ANR	1008771	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	329:12:9272:9300	1008640	0	True				
ANR	1008772	CallExpression	"memset ( inp , 0xFF , pad_white )"		1008640	0					
ANR	1008773	Callee	memset		1008640	0					
ANR	1008774	Identifier	memset		1008640	0					
ANR	1008775	ArgumentList	inp		1008640	1					
ANR	1008776	Argument	inp		1008640	0					
ANR	1008777	Identifier	inp		1008640	0					
ANR	1008778	Argument	0xFF		1008640	1					
ANR	1008779	PrimaryExpression	0xFF		1008640	0					
ANR	1008780	Argument	pad_white		1008640	2					
ANR	1008781	Identifier	pad_white		1008640	0					
ANR	1008782	ExpressionStatement	inp += span	330:12:9314:9325	1008640	1	True				
ANR	1008783	AssignmentExpression	inp += span		1008640	0		+=			
ANR	1008784	Identifier	inp		1008640	0					
ANR	1008785	Identifier	span		1008640	1					
ANR	1008786	ExpressionStatement	inp = in_buffer	334:4:9348:9363	1008640	12	True				
ANR	1008787	AssignmentExpression	inp = in_buffer		1008640	0		=			
ANR	1008788	Identifier	inp		1008640	0					
ANR	1008789	Identifier	in_buffer		1008640	1					
ANR	1008790	IfStatement	if ( ( row & 1 ) == 0 )		1008640	13					
ANR	1008791	Condition	( row & 1 ) == 0	335:8:9373:9386	1008640	0	True				
ANR	1008792	EqualityExpression	( row & 1 ) == 0		1008640	0		==			
ANR	1008793	BitAndExpression	row & 1		1008640	0		&			
ANR	1008794	Identifier	row		1008640	0					
ANR	1008795	PrimaryExpression	1		1008640	1					
ANR	1008796	PrimaryExpression	0		1008640	1					
ANR	1008797	CompoundStatement		28:4:657:657	1008640	1					
ANR	1008798	ExpressionStatement	errors += 2	338:8:9458:9469	1008640	0	True				
ANR	1008799	AssignmentExpression	errors += 2		1008640	0		+=			
ANR	1008800	Identifier	errors		1008640	0					
ANR	1008801	PrimaryExpression	2		1008640	1					
ANR	1008802	ExpressionStatement	outp = inp	339:8:9479:9489	1008640	1	True				
ANR	1008803	AssignmentExpression	outp = inp		1008640	0		=			
ANR	1008804	Identifier	outp		1008640	0					
ANR	1008805	Identifier	inp		1008640	1					
ANR	1008806	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1008640	2					
ANR	1008807	ForInit	x = awidth ;	340:13:9504:9514	1008640	0	True				
ANR	1008808	AssignmentExpression	x = awidth		1008640	0		=			
ANR	1008809	Identifier	x		1008640	0					
ANR	1008810	Identifier	awidth		1008640	1					
ANR	1008811	Condition	x > 0	340:25:9516:9520	1008640	1	True				
ANR	1008812	RelationalExpression	x > 0		1008640	0		>			
ANR	1008813	Identifier	x		1008640	0					
ANR	1008814	PrimaryExpression	0		1008640	1					
ANR	1008815	PostIncDecOperationExpression	x --	340:32:9523:9525	1008640	2	True				
ANR	1008816	Identifier	x		1008640	0					
ANR	1008817	IncDec	--		1008640	1					
ANR	1008818	CompoundStatement		33:8:800:800	1008640	3					
ANR	1008819	ExpressionStatement	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]	342:12:9550:9621	1008640	0	True				
ANR	1008820	AssignmentExpression	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	0		=			
ANR	1008821	Identifier	value		1008640	0					
ANR	1008822	AdditiveExpression	e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008823	Identifier	e_forward		1008640	0					
ANR	1008824	AdditiveExpression	* errors + inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008825	UnaryOperationExpression	* errors		1008640	0					
ANR	1008826	UnaryOperator	*		1008640	0					
ANR	1008827	Identifier	errors		1008640	1					
ANR	1008828	AdditiveExpression	inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008829	ArrayIndexing	inp [ 0 ]		1008640	0					
ANR	1008830	Identifier	inp		1008640	0					
ANR	1008831	PrimaryExpression	0		1008640	1					
ANR	1008832	AdditiveExpression	inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008833	ArrayIndexing	inp [ 1 ]		1008640	0					
ANR	1008834	Identifier	inp		1008640	0					
ANR	1008835	PrimaryExpression	1		1008640	1					
ANR	1008836	AdditiveExpression	inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008837	ArrayIndexing	inp [ span ]		1008640	0					
ANR	1008838	Identifier	inp		1008640	0					
ANR	1008839	Identifier	span		1008640	1					
ANR	1008840	ArrayIndexing	inp [ span + 1 ]		1008640	1					
ANR	1008841	Identifier	inp		1008640	0					
ANR	1008842	AdditiveExpression	span + 1		1008640	1		+			
ANR	1008843	Identifier	span		1008640	0					
ANR	1008844	PrimaryExpression	1		1008640	1					
ANR	1008845	ExpressionStatement	inp += 2	343:12:9635:9643	1008640	1	True				
ANR	1008846	AssignmentExpression	inp += 2		1008640	0		+=			
ANR	1008847	Identifier	inp		1008640	0					
ANR	1008848	PrimaryExpression	2		1008640	1					
ANR	1008849	IfStatement	if ( value >= threshold )		1008640	2					
ANR	1008850	Condition	value >= threshold	344:16:9661:9678	1008640	0	True				
ANR	1008851	RelationalExpression	value >= threshold		1008640	0		>=			
ANR	1008852	Identifier	value		1008640	0					
ANR	1008853	Identifier	threshold		1008640	1					
ANR	1008854	CompoundStatement		37:12:957:957	1008640	1					
ANR	1008855	ExpressionStatement	* outp ++ = 1	346:16:9711:9722	1008640	0	True				
ANR	1008856	AssignmentExpression	* outp ++ = 1		1008640	0		=			
ANR	1008857	UnaryOperationExpression	* outp ++		1008640	0					
ANR	1008858	UnaryOperator	*		1008640	0					
ANR	1008859	PostIncDecOperationExpression	outp ++		1008640	1					
ANR	1008860	Identifier	outp		1008640	0					
ANR	1008861	IncDec	++		1008640	1					
ANR	1008862	PrimaryExpression	1		1008640	1					
ANR	1008863	ExpressionStatement	value -= max_value	347:16:9740:9758	1008640	1	True				
ANR	1008864	AssignmentExpression	value -= max_value		1008640	0		-=			
ANR	1008865	Identifier	value		1008640	0					
ANR	1008866	Identifier	max_value		1008640	1					
ANR	1008867	ElseStatement	else		1008640	0					
ANR	1008868	CompoundStatement		42:12:1067:1067	1008640	0					
ANR	1008869	ExpressionStatement	* outp ++ = 0	351:16:9821:9832	1008640	0	True				
ANR	1008870	AssignmentExpression	* outp ++ = 0		1008640	0		=			
ANR	1008871	UnaryOperationExpression	* outp ++		1008640	0					
ANR	1008872	UnaryOperator	*		1008640	0					
ANR	1008873	PostIncDecOperationExpression	outp ++		1008640	1					
ANR	1008874	Identifier	outp		1008640	0					
ANR	1008875	IncDec	++		1008640	1					
ANR	1008876	PrimaryExpression	0		1008640	1					
ANR	1008877	ExpressionStatement	e_forward = value * 7 / 16	353:12:9860:9885	1008640	3	True				
ANR	1008878	AssignmentExpression	e_forward = value * 7 / 16		1008640	0		=			
ANR	1008879	Identifier	e_forward		1008640	0					
ANR	1008880	MultiplicativeExpression	value * 7 / 16		1008640	1		*			
ANR	1008881	Identifier	value		1008640	0					
ANR	1008882	MultiplicativeExpression	7 / 16		1008640	1		/			
ANR	1008883	PrimaryExpression	7		1008640	0					
ANR	1008884	PrimaryExpression	16		1008640	1					
ANR	1008885	ExpressionStatement	e_downleft = value * 3 / 16	354:12:9899:9924	1008640	4	True				
ANR	1008886	AssignmentExpression	e_downleft = value * 3 / 16		1008640	0		=			
ANR	1008887	Identifier	e_downleft		1008640	0					
ANR	1008888	MultiplicativeExpression	value * 3 / 16		1008640	1		*			
ANR	1008889	Identifier	value		1008640	0					
ANR	1008890	MultiplicativeExpression	3 / 16		1008640	1		/			
ANR	1008891	PrimaryExpression	3		1008640	0					
ANR	1008892	PrimaryExpression	16		1008640	1					
ANR	1008893	ExpressionStatement	e_down = value * 5 / 16	355:12:9938:9963	1008640	5	True				
ANR	1008894	AssignmentExpression	e_down = value * 5 / 16		1008640	0		=			
ANR	1008895	Identifier	e_down		1008640	0					
ANR	1008896	MultiplicativeExpression	value * 5 / 16		1008640	1		*			
ANR	1008897	Identifier	value		1008640	0					
ANR	1008898	MultiplicativeExpression	5 / 16		1008640	1		/			
ANR	1008899	PrimaryExpression	5		1008640	0					
ANR	1008900	PrimaryExpression	16		1008640	1					
ANR	1008901	ExpressionStatement	value -= e_forward + e_downleft + e_down	356:12:9977:10021	1008640	6	True				
ANR	1008902	AssignmentExpression	value -= e_forward + e_downleft + e_down		1008640	0		-=			
ANR	1008903	Identifier	value		1008640	0					
ANR	1008904	AdditiveExpression	e_forward + e_downleft + e_down		1008640	1		+			
ANR	1008905	Identifier	e_forward		1008640	0					
ANR	1008906	AdditiveExpression	e_downleft + e_down		1008640	1		+			
ANR	1008907	Identifier	e_downleft		1008640	0					
ANR	1008908	Identifier	e_down		1008640	1					
ANR	1008909	ExpressionStatement	errors [ - 2 ] += e_downleft	357:12:10035:10059	1008640	7	True				
ANR	1008910	AssignmentExpression	errors [ - 2 ] += e_downleft		1008640	0		+=			
ANR	1008911	ArrayIndexing	errors [ - 2 ]		1008640	0					
ANR	1008912	Identifier	errors		1008640	0					
ANR	1008913	UnaryOperationExpression	- 2		1008640	1					
ANR	1008914	UnaryOperator	-		1008640	0					
ANR	1008915	PrimaryExpression	2		1008640	1					
ANR	1008916	Identifier	e_downleft		1008640	1					
ANR	1008917	ExpressionStatement	errors [ - 1 ] += e_down	358:12:10073:10093	1008640	8	True				
ANR	1008918	AssignmentExpression	errors [ - 1 ] += e_down		1008640	0		+=			
ANR	1008919	ArrayIndexing	errors [ - 1 ]		1008640	0					
ANR	1008920	Identifier	errors		1008640	0					
ANR	1008921	UnaryOperationExpression	- 1		1008640	1					
ANR	1008922	UnaryOperator	-		1008640	0					
ANR	1008923	PrimaryExpression	1		1008640	1					
ANR	1008924	Identifier	e_down		1008640	1					
ANR	1008925	ExpressionStatement	* errors ++ = value	359:12:10107:10126	1008640	9	True				
ANR	1008926	AssignmentExpression	* errors ++ = value		1008640	0		=			
ANR	1008927	UnaryOperationExpression	* errors ++		1008640	0					
ANR	1008928	UnaryOperator	*		1008640	0					
ANR	1008929	PostIncDecOperationExpression	errors ++		1008640	1					
ANR	1008930	Identifier	errors		1008640	0					
ANR	1008931	IncDec	++		1008640	1					
ANR	1008932	Identifier	value		1008640	1					
ANR	1008933	ExpressionStatement	outp -= awidth	361:8:10146:10160	1008640	3	True				
ANR	1008934	AssignmentExpression	outp -= awidth		1008640	0		-=			
ANR	1008935	Identifier	outp		1008640	0					
ANR	1008936	Identifier	awidth		1008640	1					
ANR	1008937	ElseStatement	else		1008640	0					
ANR	1008938	CompoundStatement		56:4:1445:1445	1008640	0					
ANR	1008939	ExpressionStatement	errors += awidth	366:8:10246:10262	1008640	0	True				
ANR	1008940	AssignmentExpression	errors += awidth		1008640	0		+=			
ANR	1008941	Identifier	errors		1008640	0					
ANR	1008942	Identifier	awidth		1008640	1					
ANR	1008943	ExpressionStatement	inp += ( awidth - 1 ) * 2	367:8:10272:10291	1008640	1	True				
ANR	1008944	AssignmentExpression	inp += ( awidth - 1 ) * 2		1008640	0		+=			
ANR	1008945	Identifier	inp		1008640	0					
ANR	1008946	MultiplicativeExpression	( awidth - 1 ) * 2		1008640	1		*			
ANR	1008947	AdditiveExpression	awidth - 1		1008640	0		-			
ANR	1008948	Identifier	awidth		1008640	0					
ANR	1008949	PrimaryExpression	1		1008640	1					
ANR	1008950	PrimaryExpression	2		1008640	1					
ANR	1008951	ExpressionStatement	outp = inp	368:8:10301:10311	1008640	2	True				
ANR	1008952	AssignmentExpression	outp = inp		1008640	0		=			
ANR	1008953	Identifier	outp		1008640	0					
ANR	1008954	Identifier	inp		1008640	1					
ANR	1008955	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1008640	3					
ANR	1008956	ForInit	x = awidth ;	369:13:10326:10336	1008640	0	True				
ANR	1008957	AssignmentExpression	x = awidth		1008640	0		=			
ANR	1008958	Identifier	x		1008640	0					
ANR	1008959	Identifier	awidth		1008640	1					
ANR	1008960	Condition	x > 0	369:25:10338:10342	1008640	1	True				
ANR	1008961	RelationalExpression	x > 0		1008640	0		>			
ANR	1008962	Identifier	x		1008640	0					
ANR	1008963	PrimaryExpression	0		1008640	1					
ANR	1008964	PostIncDecOperationExpression	x --	369:32:10345:10347	1008640	2	True				
ANR	1008965	Identifier	x		1008640	0					
ANR	1008966	IncDec	--		1008640	1					
ANR	1008967	CompoundStatement		62:8:1622:1622	1008640	3					
ANR	1008968	ExpressionStatement	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]	371:12:10372:10443	1008640	0	True				
ANR	1008969	AssignmentExpression	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	0		=			
ANR	1008970	Identifier	value		1008640	0					
ANR	1008971	AdditiveExpression	e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008972	Identifier	e_forward		1008640	0					
ANR	1008973	AdditiveExpression	* errors + inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008974	UnaryOperationExpression	* errors		1008640	0					
ANR	1008975	UnaryOperator	*		1008640	0					
ANR	1008976	Identifier	errors		1008640	1					
ANR	1008977	AdditiveExpression	inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008978	ArrayIndexing	inp [ 0 ]		1008640	0					
ANR	1008979	Identifier	inp		1008640	0					
ANR	1008980	PrimaryExpression	0		1008640	1					
ANR	1008981	AdditiveExpression	inp [ 1 ] + inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008982	ArrayIndexing	inp [ 1 ]		1008640	0					
ANR	1008983	Identifier	inp		1008640	0					
ANR	1008984	PrimaryExpression	1		1008640	1					
ANR	1008985	AdditiveExpression	inp [ span ] + inp [ span + 1 ]		1008640	1		+			
ANR	1008986	ArrayIndexing	inp [ span ]		1008640	0					
ANR	1008987	Identifier	inp		1008640	0					
ANR	1008988	Identifier	span		1008640	1					
ANR	1008989	ArrayIndexing	inp [ span + 1 ]		1008640	1					
ANR	1008990	Identifier	inp		1008640	0					
ANR	1008991	AdditiveExpression	span + 1		1008640	1		+			
ANR	1008992	Identifier	span		1008640	0					
ANR	1008993	PrimaryExpression	1		1008640	1					
ANR	1008994	ExpressionStatement	inp -= 2	372:12:10457:10465	1008640	1	True				
ANR	1008995	AssignmentExpression	inp -= 2		1008640	0		-=			
ANR	1008996	Identifier	inp		1008640	0					
ANR	1008997	PrimaryExpression	2		1008640	1					
ANR	1008998	IfStatement	if ( value >= threshold )		1008640	2					
ANR	1008999	Condition	value >= threshold	373:16:10483:10500	1008640	0	True				
ANR	1009000	RelationalExpression	value >= threshold		1008640	0		>=			
ANR	1009001	Identifier	value		1008640	0					
ANR	1009002	Identifier	threshold		1008640	1					
ANR	1009003	CompoundStatement		66:12:1779:1779	1008640	1					
ANR	1009004	ExpressionStatement	* outp -- = 1	375:16:10533:10544	1008640	0	True				
ANR	1009005	AssignmentExpression	* outp -- = 1		1008640	0		=			
ANR	1009006	UnaryOperationExpression	* outp --		1008640	0					
ANR	1009007	UnaryOperator	*		1008640	0					
ANR	1009008	PostIncDecOperationExpression	outp --		1008640	1					
ANR	1009009	Identifier	outp		1008640	0					
ANR	1009010	IncDec	--		1008640	1					
ANR	1009011	PrimaryExpression	1		1008640	1					
ANR	1009012	ExpressionStatement	value -= max_value	376:16:10562:10580	1008640	1	True				
ANR	1009013	AssignmentExpression	value -= max_value		1008640	0		-=			
ANR	1009014	Identifier	value		1008640	0					
ANR	1009015	Identifier	max_value		1008640	1					
ANR	1009016	ElseStatement	else		1008640	0					
ANR	1009017	CompoundStatement		71:12:1889:1889	1008640	0					
ANR	1009018	ExpressionStatement	* outp -- = 0	380:16:10643:10654	1008640	0	True				
ANR	1009019	AssignmentExpression	* outp -- = 0		1008640	0		=			
ANR	1009020	UnaryOperationExpression	* outp --		1008640	0					
ANR	1009021	UnaryOperator	*		1008640	0					
ANR	1009022	PostIncDecOperationExpression	outp --		1008640	1					
ANR	1009023	Identifier	outp		1008640	0					
ANR	1009024	IncDec	--		1008640	1					
ANR	1009025	PrimaryExpression	0		1008640	1					
ANR	1009026	ExpressionStatement	e_forward = value * 7 / 16	382:12:10682:10707	1008640	3	True				
ANR	1009027	AssignmentExpression	e_forward = value * 7 / 16		1008640	0		=			
ANR	1009028	Identifier	e_forward		1008640	0					
ANR	1009029	MultiplicativeExpression	value * 7 / 16		1008640	1		*			
ANR	1009030	Identifier	value		1008640	0					
ANR	1009031	MultiplicativeExpression	7 / 16		1008640	1		/			
ANR	1009032	PrimaryExpression	7		1008640	0					
ANR	1009033	PrimaryExpression	16		1008640	1					
ANR	1009034	ExpressionStatement	e_downleft = value * 3 / 16	383:12:10721:10746	1008640	4	True				
ANR	1009035	AssignmentExpression	e_downleft = value * 3 / 16		1008640	0		=			
ANR	1009036	Identifier	e_downleft		1008640	0					
ANR	1009037	MultiplicativeExpression	value * 3 / 16		1008640	1		*			
ANR	1009038	Identifier	value		1008640	0					
ANR	1009039	MultiplicativeExpression	3 / 16		1008640	1		/			
ANR	1009040	PrimaryExpression	3		1008640	0					
ANR	1009041	PrimaryExpression	16		1008640	1					
ANR	1009042	ExpressionStatement	e_down = value * 5 / 16	384:12:10760:10785	1008640	5	True				
ANR	1009043	AssignmentExpression	e_down = value * 5 / 16		1008640	0		=			
ANR	1009044	Identifier	e_down		1008640	0					
ANR	1009045	MultiplicativeExpression	value * 5 / 16		1008640	1		*			
ANR	1009046	Identifier	value		1008640	0					
ANR	1009047	MultiplicativeExpression	5 / 16		1008640	1		/			
ANR	1009048	PrimaryExpression	5		1008640	0					
ANR	1009049	PrimaryExpression	16		1008640	1					
ANR	1009050	ExpressionStatement	value -= e_forward + e_downleft + e_down	385:12:10799:10843	1008640	6	True				
ANR	1009051	AssignmentExpression	value -= e_forward + e_downleft + e_down		1008640	0		-=			
ANR	1009052	Identifier	value		1008640	0					
ANR	1009053	AdditiveExpression	e_forward + e_downleft + e_down		1008640	1		+			
ANR	1009054	Identifier	e_forward		1008640	0					
ANR	1009055	AdditiveExpression	e_downleft + e_down		1008640	1		+			
ANR	1009056	Identifier	e_downleft		1008640	0					
ANR	1009057	Identifier	e_down		1008640	1					
ANR	1009058	ExpressionStatement	errors [ 2 ] += e_downleft	386:12:10857:10880	1008640	7	True				
ANR	1009059	AssignmentExpression	errors [ 2 ] += e_downleft		1008640	0		+=			
ANR	1009060	ArrayIndexing	errors [ 2 ]		1008640	0					
ANR	1009061	Identifier	errors		1008640	0					
ANR	1009062	PrimaryExpression	2		1008640	1					
ANR	1009063	Identifier	e_downleft		1008640	1					
ANR	1009064	ExpressionStatement	errors [ 1 ] += e_down	387:12:10894:10913	1008640	8	True				
ANR	1009065	AssignmentExpression	errors [ 1 ] += e_down		1008640	0		+=			
ANR	1009066	ArrayIndexing	errors [ 1 ]		1008640	0					
ANR	1009067	Identifier	errors		1008640	0					
ANR	1009068	PrimaryExpression	1		1008640	1					
ANR	1009069	Identifier	e_down		1008640	1					
ANR	1009070	ExpressionStatement	* errors -- = value	388:12:10927:10946	1008640	9	True				
ANR	1009071	AssignmentExpression	* errors -- = value		1008640	0		=			
ANR	1009072	UnaryOperationExpression	* errors --		1008640	0					
ANR	1009073	UnaryOperator	*		1008640	0					
ANR	1009074	PostIncDecOperationExpression	errors --		1008640	1					
ANR	1009075	Identifier	errors		1008640	0					
ANR	1009076	IncDec	--		1008640	1					
ANR	1009077	Identifier	value		1008640	1					
ANR	1009078	ExpressionStatement	outp ++	390:8:10966:10972	1008640	4	True				
ANR	1009079	PostIncDecOperationExpression	outp ++		1008640	0					
ANR	1009080	Identifier	outp		1008640	0					
ANR	1009081	IncDec	++		1008640	1					
ANR	1009082	ExpressionStatement	"pack_8to1 ( out_buffer , outp , awidth )"	392:4:10984:11019	1008640	14	True				
ANR	1009083	CallExpression	"pack_8to1 ( out_buffer , outp , awidth )"		1008640	0					
ANR	1009084	Callee	pack_8to1		1008640	0					
ANR	1009085	Identifier	pack_8to1		1008640	0					
ANR	1009086	ArgumentList	out_buffer		1008640	1					
ANR	1009087	Argument	out_buffer		1008640	0					
ANR	1009088	Identifier	out_buffer		1008640	0					
ANR	1009089	Argument	outp		1008640	1					
ANR	1009090	Identifier	outp		1008640	0					
ANR	1009091	Argument	awidth		1008640	2					
ANR	1009092	Identifier	awidth		1008640	0					
ANR	1009093	ReturnType	static void		1008640	1					
ANR	1009094	Identifier	down_core_2		1008640	2					
ANR	1009095	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1008640	3					
ANR	1009096	Parameter	gx_downscaler_t * ds	303:24:8468:8486	1008640	0	True				
ANR	1009097	ParameterType	gx_downscaler_t *		1008640	0					
ANR	1009098	Identifier	ds		1008640	1					
ANR	1009099	Parameter	byte * out_buffer	304:24:8513:8539	1008640	1	True				
ANR	1009100	ParameterType	byte *		1008640	0					
ANR	1009101	Identifier	out_buffer		1008640	1					
ANR	1009102	Parameter	byte * in_buffer	305:24:8566:8591	1008640	2	True				
ANR	1009103	ParameterType	byte *		1008640	0					
ANR	1009104	Identifier	in_buffer		1008640	1					
ANR	1009105	Parameter	int row	306:24:8618:8637	1008640	3	True				
ANR	1009106	ParameterType	int		1008640	0					
ANR	1009107	Identifier	row		1008640	1					
ANR	1009108	Parameter	int plane	307:24:8664:8685	1008640	4	True				
ANR	1009109	ParameterType	int		1008640	0					
ANR	1009110	Identifier	plane		1008640	1					
ANR	1009111	Parameter	int span	308:24:8712:8732	1008640	5	True				
ANR	1009112	ParameterType	int		1008640	0					
ANR	1009113	Identifier	span		1008640	1					
ANR	1009114	CFGEntryNode	ENTRY		1008640		True				
ANR	1009115	CFGExitNode	EXIT		1008640		True				
ANR	1009116	Symbol	plane		1008640						
ANR	1009117	Symbol	awidth		1008640						
ANR	1009118	Symbol	in_buffer		1008640						
ANR	1009119	Symbol	threshold		1008640						
ANR	1009120	Symbol	ds		1008640						
ANR	1009121	Symbol	ds -> errors		1008640						
ANR	1009122	Symbol	outp		1008640						
ANR	1009123	Symbol	* ds		1008640						
ANR	1009124	Symbol	e_forward		1008640						
ANR	1009125	Symbol	* outp ++		1008640						
ANR	1009126	Symbol	* outp --		1008640						
ANR	1009127	Symbol	ds -> width		1008640						
ANR	1009128	Symbol	row		1008640						
ANR	1009129	Symbol	* errors ++		1008640						
ANR	1009130	Symbol	* errors --		1008640						
ANR	1009131	Symbol	value		1008640						
ANR	1009132	Symbol	out_buffer		1008640						
ANR	1009133	Symbol	* span		1008640						
ANR	1009134	Symbol	ds -> awidth		1008640						
ANR	1009135	Symbol	inp		1008640						
ANR	1009136	Symbol	* inp		1008640						
ANR	1009137	Symbol	* errors		1008640						
ANR	1009138	Symbol	pad_white		1008640						
ANR	1009139	Symbol	x		1008640						
ANR	1009140	Symbol	width		1008640						
ANR	1009141	Symbol	e_downleft		1008640						
ANR	1009142	Symbol	errors		1008640						
ANR	1009143	Symbol	span		1008640						
ANR	1009144	Symbol	e_down		1008640						
ANR	1009145	Symbol	max_value		1008640						
ANR	1009146	Function	down_core_3	395:0:11024:13909							
ANR	1009147	FunctionDef	"down_core_3 (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1009146	0					
ANR	1009148	CompoundStatement		401:0:11315:13909	1009146	0					
ANR	1009149	IdentifierDeclStatement	"int x , value ;"	402:4:11321:11340	1009146	0	True				
ANR	1009150	IdentifierDecl	x		1009146	0					
ANR	1009151	IdentifierDeclType	int		1009146	0					
ANR	1009152	Identifier	x		1009146	1					
ANR	1009153	IdentifierDecl	value		1009146	1					
ANR	1009154	IdentifierDeclType	int		1009146	0					
ANR	1009155	Identifier	value		1009146	1					
ANR	1009156	IdentifierDeclStatement	"int e_downleft , e_down , e_forward = 0 ;"	403:4:11346:11390	1009146	1	True				
ANR	1009157	IdentifierDecl	e_downleft		1009146	0					
ANR	1009158	IdentifierDeclType	int		1009146	0					
ANR	1009159	Identifier	e_downleft		1009146	1					
ANR	1009160	IdentifierDecl	e_down		1009146	1					
ANR	1009161	IdentifierDeclType	int		1009146	0					
ANR	1009162	Identifier	e_down		1009146	1					
ANR	1009163	IdentifierDecl	e_forward = 0		1009146	2					
ANR	1009164	IdentifierDeclType	int		1009146	0					
ANR	1009165	Identifier	e_forward		1009146	1					
ANR	1009166	AssignmentExpression	e_forward = 0		1009146	2		=			
ANR	1009167	Identifier	e_forward		1009146	0					
ANR	1009168	PrimaryExpression	0		1009146	1					
ANR	1009169	IdentifierDeclStatement	int pad_white ;	404:4:11396:11416	1009146	2	True				
ANR	1009170	IdentifierDecl	pad_white		1009146	0					
ANR	1009171	IdentifierDeclType	int		1009146	0					
ANR	1009172	Identifier	pad_white		1009146	1					
ANR	1009173	IdentifierDeclStatement	"byte * inp , * outp ;"	405:4:11422:11443	1009146	3	True				
ANR	1009174	IdentifierDecl	* inp		1009146	0					
ANR	1009175	IdentifierDeclType	byte *		1009146	0					
ANR	1009176	Identifier	inp		1009146	1					
ANR	1009177	IdentifierDecl	* outp		1009146	1					
ANR	1009178	IdentifierDeclType	byte *		1009146	0					
ANR	1009179	Identifier	outp		1009146	1					
ANR	1009180	IdentifierDeclStatement	int width = ds -> width ;	406:4:11449:11481	1009146	4	True				
ANR	1009181	IdentifierDecl	width = ds -> width		1009146	0					
ANR	1009182	IdentifierDeclType	int		1009146	0					
ANR	1009183	Identifier	width		1009146	1					
ANR	1009184	AssignmentExpression	width = ds -> width		1009146	2		=			
ANR	1009185	Identifier	width		1009146	0					
ANR	1009186	PtrMemberAccess	ds -> width		1009146	1					
ANR	1009187	Identifier	ds		1009146	0					
ANR	1009188	Identifier	width		1009146	1					
ANR	1009189	IdentifierDeclStatement	int awidth = ds -> awidth ;	407:4:11487:11520	1009146	5	True				
ANR	1009190	IdentifierDecl	awidth = ds -> awidth		1009146	0					
ANR	1009191	IdentifierDeclType	int		1009146	0					
ANR	1009192	Identifier	awidth		1009146	1					
ANR	1009193	AssignmentExpression	awidth = ds -> awidth		1009146	2		=			
ANR	1009194	Identifier	awidth		1009146	0					
ANR	1009195	PtrMemberAccess	ds -> awidth		1009146	1					
ANR	1009196	Identifier	ds		1009146	0					
ANR	1009197	Identifier	awidth		1009146	1					
ANR	1009198	IdentifierDeclStatement	int * errors = ds -> errors + ( awidth + 3 ) * plane ;	408:4:11526:11578	1009146	6	True				
ANR	1009199	IdentifierDecl	* errors = ds -> errors + ( awidth + 3 ) * plane		1009146	0					
ANR	1009200	IdentifierDeclType	int *		1009146	0					
ANR	1009201	Identifier	errors		1009146	1					
ANR	1009202	AssignmentExpression	* errors = ds -> errors + ( awidth + 3 ) * plane		1009146	2		=			
ANR	1009203	Identifier	errors		1009146	0					
ANR	1009204	AdditiveExpression	ds -> errors + ( awidth + 3 ) * plane		1009146	1		+			
ANR	1009205	PtrMemberAccess	ds -> errors		1009146	0					
ANR	1009206	Identifier	ds		1009146	0					
ANR	1009207	Identifier	errors		1009146	1					
ANR	1009208	MultiplicativeExpression	( awidth + 3 ) * plane		1009146	1		*			
ANR	1009209	AdditiveExpression	awidth + 3		1009146	0		+			
ANR	1009210	Identifier	awidth		1009146	0					
ANR	1009211	PrimaryExpression	3		1009146	1					
ANR	1009212	Identifier	plane		1009146	1					
ANR	1009213	IdentifierDeclStatement	const int threshold = 3 * 3 * 128 ;	409:4:11584:11614	1009146	7	True				
ANR	1009214	IdentifierDecl	threshold = 3 * 3 * 128		1009146	0					
ANR	1009215	IdentifierDeclType	const int		1009146	0					
ANR	1009216	Identifier	threshold		1009146	1					
ANR	1009217	AssignmentExpression	threshold = 3 * 3 * 128		1009146	2		=			
ANR	1009218	Identifier	threshold		1009146	0					
ANR	1009219	MultiplicativeExpression	3 * 3 * 128		1009146	1		*			
ANR	1009220	PrimaryExpression	3		1009146	0					
ANR	1009221	MultiplicativeExpression	3 * 128		1009146	1		*			
ANR	1009222	PrimaryExpression	3		1009146	0					
ANR	1009223	PrimaryExpression	128		1009146	1					
ANR	1009224	IdentifierDeclStatement	const int max_value = 3 * 3 * 255 ;	410:4:11620:11650	1009146	8	True				
ANR	1009225	IdentifierDecl	max_value = 3 * 3 * 255		1009146	0					
ANR	1009226	IdentifierDeclType	const int		1009146	0					
ANR	1009227	Identifier	max_value		1009146	1					
ANR	1009228	AssignmentExpression	max_value = 3 * 3 * 255		1009146	2		=			
ANR	1009229	Identifier	max_value		1009146	0					
ANR	1009230	MultiplicativeExpression	3 * 3 * 255		1009146	1		*			
ANR	1009231	PrimaryExpression	3		1009146	0					
ANR	1009232	MultiplicativeExpression	3 * 255		1009146	1		*			
ANR	1009233	PrimaryExpression	3		1009146	0					
ANR	1009234	PrimaryExpression	255		1009146	1					
ANR	1009235	ExpressionStatement	pad_white = ( awidth - width ) * 3	412:4:11657:11689	1009146	9	True				
ANR	1009236	AssignmentExpression	pad_white = ( awidth - width ) * 3		1009146	0		=			
ANR	1009237	Identifier	pad_white		1009146	0					
ANR	1009238	MultiplicativeExpression	( awidth - width ) * 3		1009146	1		*			
ANR	1009239	AdditiveExpression	awidth - width		1009146	0		-			
ANR	1009240	Identifier	awidth		1009146	0					
ANR	1009241	Identifier	width		1009146	1					
ANR	1009242	PrimaryExpression	3		1009146	1					
ANR	1009243	IfStatement	if ( pad_white < 0 )		1009146	10					
ANR	1009244	Condition	pad_white < 0	413:8:11699:11711	1009146	0	True				
ANR	1009245	RelationalExpression	pad_white < 0		1009146	0		<			
ANR	1009246	Identifier	pad_white		1009146	0					
ANR	1009247	PrimaryExpression	0		1009146	1					
ANR	1009248	ExpressionStatement	pad_white = 0	414:8:11722:11735	1009146	1	True				
ANR	1009249	AssignmentExpression	pad_white = 0		1009146	0		=			
ANR	1009250	Identifier	pad_white		1009146	0					
ANR	1009251	PrimaryExpression	0		1009146	1					
ANR	1009252	IfStatement	if ( pad_white )		1009146	11					
ANR	1009253	Condition	pad_white	416:8:11746:11754	1009146	0	True				
ANR	1009254	Identifier	pad_white		1009146	0					
ANR	1009255	CompoundStatement		17:4:445:445	1009146	1					
ANR	1009256	ExpressionStatement	inp = in_buffer + width * 3	418:8:11771:11796	1009146	0	True				
ANR	1009257	AssignmentExpression	inp = in_buffer + width * 3		1009146	0		=			
ANR	1009258	Identifier	inp		1009146	0					
ANR	1009259	AdditiveExpression	in_buffer + width * 3		1009146	1		+			
ANR	1009260	Identifier	in_buffer		1009146	0					
ANR	1009261	MultiplicativeExpression	width * 3		1009146	1		*			
ANR	1009262	Identifier	width		1009146	0					
ANR	1009263	PrimaryExpression	3		1009146	1					
ANR	1009264	ForStatement	for ( x = 3 ; x > 0 ; x -- )		1009146	1					
ANR	1009265	ForInit	x = 3 ;	419:13:11811:11816	1009146	0	True				
ANR	1009266	AssignmentExpression	x = 3		1009146	0		=			
ANR	1009267	Identifier	x		1009146	0					
ANR	1009268	PrimaryExpression	3		1009146	1					
ANR	1009269	Condition	x > 0	419:20:11818:11822	1009146	1	True				
ANR	1009270	RelationalExpression	x > 0		1009146	0		>			
ANR	1009271	Identifier	x		1009146	0					
ANR	1009272	PrimaryExpression	0		1009146	1					
ANR	1009273	PostIncDecOperationExpression	x --	419:27:11825:11827	1009146	2	True				
ANR	1009274	Identifier	x		1009146	0					
ANR	1009275	IncDec	--		1009146	1					
ANR	1009276	CompoundStatement		20:8:522:522	1009146	3					
ANR	1009277	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	421:12:11852:11880	1009146	0	True				
ANR	1009278	CallExpression	"memset ( inp , 0xFF , pad_white )"		1009146	0					
ANR	1009279	Callee	memset		1009146	0					
ANR	1009280	Identifier	memset		1009146	0					
ANR	1009281	ArgumentList	inp		1009146	1					
ANR	1009282	Argument	inp		1009146	0					
ANR	1009283	Identifier	inp		1009146	0					
ANR	1009284	Argument	0xFF		1009146	1					
ANR	1009285	PrimaryExpression	0xFF		1009146	0					
ANR	1009286	Argument	pad_white		1009146	2					
ANR	1009287	Identifier	pad_white		1009146	0					
ANR	1009288	ExpressionStatement	inp += span	422:12:11894:11905	1009146	1	True				
ANR	1009289	AssignmentExpression	inp += span		1009146	0		+=			
ANR	1009290	Identifier	inp		1009146	0					
ANR	1009291	Identifier	span		1009146	1					
ANR	1009292	ExpressionStatement	inp = in_buffer	426:4:11928:11943	1009146	12	True				
ANR	1009293	AssignmentExpression	inp = in_buffer		1009146	0		=			
ANR	1009294	Identifier	inp		1009146	0					
ANR	1009295	Identifier	in_buffer		1009146	1					
ANR	1009296	IfStatement	if ( ( row & 1 ) == 0 )		1009146	13					
ANR	1009297	Condition	( row & 1 ) == 0	427:8:11953:11966	1009146	0	True				
ANR	1009298	EqualityExpression	( row & 1 ) == 0		1009146	0		==			
ANR	1009299	BitAndExpression	row & 1		1009146	0		&			
ANR	1009300	Identifier	row		1009146	0					
ANR	1009301	PrimaryExpression	1		1009146	1					
ANR	1009302	PrimaryExpression	0		1009146	1					
ANR	1009303	CompoundStatement		28:4:657:657	1009146	1					
ANR	1009304	ExpressionStatement	errors += 2	430:8:12038:12049	1009146	0	True				
ANR	1009305	AssignmentExpression	errors += 2		1009146	0		+=			
ANR	1009306	Identifier	errors		1009146	0					
ANR	1009307	PrimaryExpression	2		1009146	1					
ANR	1009308	ExpressionStatement	outp = inp	431:8:12059:12069	1009146	1	True				
ANR	1009309	AssignmentExpression	outp = inp		1009146	0		=			
ANR	1009310	Identifier	outp		1009146	0					
ANR	1009311	Identifier	inp		1009146	1					
ANR	1009312	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1009146	2					
ANR	1009313	ForInit	x = awidth ;	432:13:12084:12094	1009146	0	True				
ANR	1009314	AssignmentExpression	x = awidth		1009146	0		=			
ANR	1009315	Identifier	x		1009146	0					
ANR	1009316	Identifier	awidth		1009146	1					
ANR	1009317	Condition	x > 0	432:25:12096:12100	1009146	1	True				
ANR	1009318	RelationalExpression	x > 0		1009146	0		>			
ANR	1009319	Identifier	x		1009146	0					
ANR	1009320	PrimaryExpression	0		1009146	1					
ANR	1009321	PostIncDecOperationExpression	x --	432:32:12103:12105	1009146	2	True				
ANR	1009322	Identifier	x		1009146	0					
ANR	1009323	IncDec	--		1009146	1					
ANR	1009324	CompoundStatement		33:8:800:800	1009146	3					
ANR	1009325	ExpressionStatement	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]	434:12:12130:12355	1009146	0	True				
ANR	1009326	AssignmentExpression	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	0		=			
ANR	1009327	Identifier	value		1009146	0					
ANR	1009328	AdditiveExpression	e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009329	Identifier	e_forward		1009146	0					
ANR	1009330	AdditiveExpression	* errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009331	UnaryOperationExpression	* errors		1009146	0					
ANR	1009332	UnaryOperator	*		1009146	0					
ANR	1009333	Identifier	errors		1009146	1					
ANR	1009334	AdditiveExpression	inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009335	ArrayIndexing	inp [ 0 ]		1009146	0					
ANR	1009336	Identifier	inp		1009146	0					
ANR	1009337	PrimaryExpression	0		1009146	1					
ANR	1009338	AdditiveExpression	inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009339	ArrayIndexing	inp [ 1 ]		1009146	0					
ANR	1009340	Identifier	inp		1009146	0					
ANR	1009341	PrimaryExpression	1		1009146	1					
ANR	1009342	AdditiveExpression	inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009343	ArrayIndexing	inp [ 2 ]		1009146	0					
ANR	1009344	Identifier	inp		1009146	0					
ANR	1009345	PrimaryExpression	2		1009146	1					
ANR	1009346	AdditiveExpression	inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009347	ArrayIndexing	inp [ span ]		1009146	0					
ANR	1009348	Identifier	inp		1009146	0					
ANR	1009349	Identifier	span		1009146	1					
ANR	1009350	AdditiveExpression	inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009351	ArrayIndexing	inp [ span + 1 ]		1009146	0					
ANR	1009352	Identifier	inp		1009146	0					
ANR	1009353	AdditiveExpression	span + 1		1009146	1		+			
ANR	1009354	Identifier	span		1009146	0					
ANR	1009355	PrimaryExpression	1		1009146	1					
ANR	1009356	AdditiveExpression	inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009357	ArrayIndexing	inp [ span + 2 ]		1009146	0					
ANR	1009358	Identifier	inp		1009146	0					
ANR	1009359	AdditiveExpression	span + 2		1009146	1		+			
ANR	1009360	Identifier	span		1009146	0					
ANR	1009361	PrimaryExpression	2		1009146	1					
ANR	1009362	AdditiveExpression	inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009363	ArrayIndexing	inp [ span * 2 ]		1009146	0					
ANR	1009364	Identifier	inp		1009146	0					
ANR	1009365	MultiplicativeExpression	span * 2		1009146	1		*			
ANR	1009366	Identifier	span		1009146	0					
ANR	1009367	PrimaryExpression	2		1009146	1					
ANR	1009368	AdditiveExpression	inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009369	ArrayIndexing	inp [ span * 2 + 1 ]		1009146	0					
ANR	1009370	Identifier	inp		1009146	0					
ANR	1009371	AdditiveExpression	span * 2 + 1		1009146	1		+			
ANR	1009372	MultiplicativeExpression	span * 2		1009146	0		*			
ANR	1009373	Identifier	span		1009146	0					
ANR	1009374	PrimaryExpression	2		1009146	1					
ANR	1009375	PrimaryExpression	1		1009146	1					
ANR	1009376	ArrayIndexing	inp [ span * 2 + 2 ]		1009146	1					
ANR	1009377	Identifier	inp		1009146	0					
ANR	1009378	AdditiveExpression	span * 2 + 2		1009146	1		+			
ANR	1009379	MultiplicativeExpression	span * 2		1009146	0		*			
ANR	1009380	Identifier	span		1009146	0					
ANR	1009381	PrimaryExpression	2		1009146	1					
ANR	1009382	PrimaryExpression	2		1009146	1					
ANR	1009383	ExpressionStatement	inp += 3	438:12:12369:12377	1009146	1	True				
ANR	1009384	AssignmentExpression	inp += 3		1009146	0		+=			
ANR	1009385	Identifier	inp		1009146	0					
ANR	1009386	PrimaryExpression	3		1009146	1					
ANR	1009387	IfStatement	if ( value >= threshold )		1009146	2					
ANR	1009388	Condition	value >= threshold	439:16:12395:12412	1009146	0	True				
ANR	1009389	RelationalExpression	value >= threshold		1009146	0		>=			
ANR	1009390	Identifier	value		1009146	0					
ANR	1009391	Identifier	threshold		1009146	1					
ANR	1009392	CompoundStatement		40:12:1111:1111	1009146	1					
ANR	1009393	ExpressionStatement	* outp ++ = 1	441:16:12445:12456	1009146	0	True				
ANR	1009394	AssignmentExpression	* outp ++ = 1		1009146	0		=			
ANR	1009395	UnaryOperationExpression	* outp ++		1009146	0					
ANR	1009396	UnaryOperator	*		1009146	0					
ANR	1009397	PostIncDecOperationExpression	outp ++		1009146	1					
ANR	1009398	Identifier	outp		1009146	0					
ANR	1009399	IncDec	++		1009146	1					
ANR	1009400	PrimaryExpression	1		1009146	1					
ANR	1009401	ExpressionStatement	value -= max_value	442:16:12474:12492	1009146	1	True				
ANR	1009402	AssignmentExpression	value -= max_value		1009146	0		-=			
ANR	1009403	Identifier	value		1009146	0					
ANR	1009404	Identifier	max_value		1009146	1					
ANR	1009405	ElseStatement	else		1009146	0					
ANR	1009406	CompoundStatement		45:12:1221:1221	1009146	0					
ANR	1009407	ExpressionStatement	* outp ++ = 0	446:16:12555:12566	1009146	0	True				
ANR	1009408	AssignmentExpression	* outp ++ = 0		1009146	0		=			
ANR	1009409	UnaryOperationExpression	* outp ++		1009146	0					
ANR	1009410	UnaryOperator	*		1009146	0					
ANR	1009411	PostIncDecOperationExpression	outp ++		1009146	1					
ANR	1009412	Identifier	outp		1009146	0					
ANR	1009413	IncDec	++		1009146	1					
ANR	1009414	PrimaryExpression	0		1009146	1					
ANR	1009415	ExpressionStatement	e_forward = value * 7 / 16	448:12:12594:12619	1009146	3	True				
ANR	1009416	AssignmentExpression	e_forward = value * 7 / 16		1009146	0		=			
ANR	1009417	Identifier	e_forward		1009146	0					
ANR	1009418	MultiplicativeExpression	value * 7 / 16		1009146	1		*			
ANR	1009419	Identifier	value		1009146	0					
ANR	1009420	MultiplicativeExpression	7 / 16		1009146	1		/			
ANR	1009421	PrimaryExpression	7		1009146	0					
ANR	1009422	PrimaryExpression	16		1009146	1					
ANR	1009423	ExpressionStatement	e_downleft = value * 3 / 16	449:12:12633:12658	1009146	4	True				
ANR	1009424	AssignmentExpression	e_downleft = value * 3 / 16		1009146	0		=			
ANR	1009425	Identifier	e_downleft		1009146	0					
ANR	1009426	MultiplicativeExpression	value * 3 / 16		1009146	1		*			
ANR	1009427	Identifier	value		1009146	0					
ANR	1009428	MultiplicativeExpression	3 / 16		1009146	1		/			
ANR	1009429	PrimaryExpression	3		1009146	0					
ANR	1009430	PrimaryExpression	16		1009146	1					
ANR	1009431	ExpressionStatement	e_down = value * 5 / 16	450:12:12672:12697	1009146	5	True				
ANR	1009432	AssignmentExpression	e_down = value * 5 / 16		1009146	0		=			
ANR	1009433	Identifier	e_down		1009146	0					
ANR	1009434	MultiplicativeExpression	value * 5 / 16		1009146	1		*			
ANR	1009435	Identifier	value		1009146	0					
ANR	1009436	MultiplicativeExpression	5 / 16		1009146	1		/			
ANR	1009437	PrimaryExpression	5		1009146	0					
ANR	1009438	PrimaryExpression	16		1009146	1					
ANR	1009439	ExpressionStatement	value -= e_forward + e_downleft + e_down	451:12:12711:12755	1009146	6	True				
ANR	1009440	AssignmentExpression	value -= e_forward + e_downleft + e_down		1009146	0		-=			
ANR	1009441	Identifier	value		1009146	0					
ANR	1009442	AdditiveExpression	e_forward + e_downleft + e_down		1009146	1		+			
ANR	1009443	Identifier	e_forward		1009146	0					
ANR	1009444	AdditiveExpression	e_downleft + e_down		1009146	1		+			
ANR	1009445	Identifier	e_downleft		1009146	0					
ANR	1009446	Identifier	e_down		1009146	1					
ANR	1009447	ExpressionStatement	errors [ - 2 ] += e_downleft	452:12:12769:12793	1009146	7	True				
ANR	1009448	AssignmentExpression	errors [ - 2 ] += e_downleft		1009146	0		+=			
ANR	1009449	ArrayIndexing	errors [ - 2 ]		1009146	0					
ANR	1009450	Identifier	errors		1009146	0					
ANR	1009451	UnaryOperationExpression	- 2		1009146	1					
ANR	1009452	UnaryOperator	-		1009146	0					
ANR	1009453	PrimaryExpression	2		1009146	1					
ANR	1009454	Identifier	e_downleft		1009146	1					
ANR	1009455	ExpressionStatement	errors [ - 1 ] += e_down	453:12:12807:12827	1009146	8	True				
ANR	1009456	AssignmentExpression	errors [ - 1 ] += e_down		1009146	0		+=			
ANR	1009457	ArrayIndexing	errors [ - 1 ]		1009146	0					
ANR	1009458	Identifier	errors		1009146	0					
ANR	1009459	UnaryOperationExpression	- 1		1009146	1					
ANR	1009460	UnaryOperator	-		1009146	0					
ANR	1009461	PrimaryExpression	1		1009146	1					
ANR	1009462	Identifier	e_down		1009146	1					
ANR	1009463	ExpressionStatement	* errors ++ = value	454:12:12841:12860	1009146	9	True				
ANR	1009464	AssignmentExpression	* errors ++ = value		1009146	0		=			
ANR	1009465	UnaryOperationExpression	* errors ++		1009146	0					
ANR	1009466	UnaryOperator	*		1009146	0					
ANR	1009467	PostIncDecOperationExpression	errors ++		1009146	1					
ANR	1009468	Identifier	errors		1009146	0					
ANR	1009469	IncDec	++		1009146	1					
ANR	1009470	Identifier	value		1009146	1					
ANR	1009471	ExpressionStatement	outp -= awidth	456:8:12880:12894	1009146	3	True				
ANR	1009472	AssignmentExpression	outp -= awidth		1009146	0		-=			
ANR	1009473	Identifier	outp		1009146	0					
ANR	1009474	Identifier	awidth		1009146	1					
ANR	1009475	ElseStatement	else		1009146	0					
ANR	1009476	CompoundStatement		59:4:1599:1599	1009146	0					
ANR	1009477	ExpressionStatement	errors += awidth	461:8:12980:12996	1009146	0	True				
ANR	1009478	AssignmentExpression	errors += awidth		1009146	0		+=			
ANR	1009479	Identifier	errors		1009146	0					
ANR	1009480	Identifier	awidth		1009146	1					
ANR	1009481	ExpressionStatement	inp += ( awidth - 1 ) * 3	462:8:13006:13025	1009146	1	True				
ANR	1009482	AssignmentExpression	inp += ( awidth - 1 ) * 3		1009146	0		+=			
ANR	1009483	Identifier	inp		1009146	0					
ANR	1009484	MultiplicativeExpression	( awidth - 1 ) * 3		1009146	1		*			
ANR	1009485	AdditiveExpression	awidth - 1		1009146	0		-			
ANR	1009486	Identifier	awidth		1009146	0					
ANR	1009487	PrimaryExpression	1		1009146	1					
ANR	1009488	PrimaryExpression	3		1009146	1					
ANR	1009489	ExpressionStatement	outp = inp	463:8:13035:13045	1009146	2	True				
ANR	1009490	AssignmentExpression	outp = inp		1009146	0		=			
ANR	1009491	Identifier	outp		1009146	0					
ANR	1009492	Identifier	inp		1009146	1					
ANR	1009493	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1009146	3					
ANR	1009494	ForInit	x = awidth ;	464:13:13060:13070	1009146	0	True				
ANR	1009495	AssignmentExpression	x = awidth		1009146	0		=			
ANR	1009496	Identifier	x		1009146	0					
ANR	1009497	Identifier	awidth		1009146	1					
ANR	1009498	Condition	x > 0	464:25:13072:13076	1009146	1	True				
ANR	1009499	RelationalExpression	x > 0		1009146	0		>			
ANR	1009500	Identifier	x		1009146	0					
ANR	1009501	PrimaryExpression	0		1009146	1					
ANR	1009502	PostIncDecOperationExpression	x --	464:32:13079:13081	1009146	2	True				
ANR	1009503	Identifier	x		1009146	0					
ANR	1009504	IncDec	--		1009146	1					
ANR	1009505	CompoundStatement		65:8:1776:1776	1009146	3					
ANR	1009506	ExpressionStatement	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]	466:12:13106:13331	1009146	0	True				
ANR	1009507	AssignmentExpression	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	0		=			
ANR	1009508	Identifier	value		1009146	0					
ANR	1009509	AdditiveExpression	e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009510	Identifier	e_forward		1009146	0					
ANR	1009511	AdditiveExpression	* errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009512	UnaryOperationExpression	* errors		1009146	0					
ANR	1009513	UnaryOperator	*		1009146	0					
ANR	1009514	Identifier	errors		1009146	1					
ANR	1009515	AdditiveExpression	inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009516	ArrayIndexing	inp [ 0 ]		1009146	0					
ANR	1009517	Identifier	inp		1009146	0					
ANR	1009518	PrimaryExpression	0		1009146	1					
ANR	1009519	AdditiveExpression	inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009520	ArrayIndexing	inp [ 1 ]		1009146	0					
ANR	1009521	Identifier	inp		1009146	0					
ANR	1009522	PrimaryExpression	1		1009146	1					
ANR	1009523	AdditiveExpression	inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009524	ArrayIndexing	inp [ 2 ]		1009146	0					
ANR	1009525	Identifier	inp		1009146	0					
ANR	1009526	PrimaryExpression	2		1009146	1					
ANR	1009527	AdditiveExpression	inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009528	ArrayIndexing	inp [ span ]		1009146	0					
ANR	1009529	Identifier	inp		1009146	0					
ANR	1009530	Identifier	span		1009146	1					
ANR	1009531	AdditiveExpression	inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009532	ArrayIndexing	inp [ span + 1 ]		1009146	0					
ANR	1009533	Identifier	inp		1009146	0					
ANR	1009534	AdditiveExpression	span + 1		1009146	1		+			
ANR	1009535	Identifier	span		1009146	0					
ANR	1009536	PrimaryExpression	1		1009146	1					
ANR	1009537	AdditiveExpression	inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009538	ArrayIndexing	inp [ span + 2 ]		1009146	0					
ANR	1009539	Identifier	inp		1009146	0					
ANR	1009540	AdditiveExpression	span + 2		1009146	1		+			
ANR	1009541	Identifier	span		1009146	0					
ANR	1009542	PrimaryExpression	2		1009146	1					
ANR	1009543	AdditiveExpression	inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009544	ArrayIndexing	inp [ span * 2 ]		1009146	0					
ANR	1009545	Identifier	inp		1009146	0					
ANR	1009546	MultiplicativeExpression	span * 2		1009146	1		*			
ANR	1009547	Identifier	span		1009146	0					
ANR	1009548	PrimaryExpression	2		1009146	1					
ANR	1009549	AdditiveExpression	inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ]		1009146	1		+			
ANR	1009550	ArrayIndexing	inp [ span * 2 + 1 ]		1009146	0					
ANR	1009551	Identifier	inp		1009146	0					
ANR	1009552	AdditiveExpression	span * 2 + 1		1009146	1		+			
ANR	1009553	MultiplicativeExpression	span * 2		1009146	0		*			
ANR	1009554	Identifier	span		1009146	0					
ANR	1009555	PrimaryExpression	2		1009146	1					
ANR	1009556	PrimaryExpression	1		1009146	1					
ANR	1009557	ArrayIndexing	inp [ span * 2 + 2 ]		1009146	1					
ANR	1009558	Identifier	inp		1009146	0					
ANR	1009559	AdditiveExpression	span * 2 + 2		1009146	1		+			
ANR	1009560	MultiplicativeExpression	span * 2		1009146	0		*			
ANR	1009561	Identifier	span		1009146	0					
ANR	1009562	PrimaryExpression	2		1009146	1					
ANR	1009563	PrimaryExpression	2		1009146	1					
ANR	1009564	ExpressionStatement	inp -= 3	470:12:13345:13353	1009146	1	True				
ANR	1009565	AssignmentExpression	inp -= 3		1009146	0		-=			
ANR	1009566	Identifier	inp		1009146	0					
ANR	1009567	PrimaryExpression	3		1009146	1					
ANR	1009568	IfStatement	if ( value >= threshold )		1009146	2					
ANR	1009569	Condition	value >= threshold	471:16:13371:13388	1009146	0	True				
ANR	1009570	RelationalExpression	value >= threshold		1009146	0		>=			
ANR	1009571	Identifier	value		1009146	0					
ANR	1009572	Identifier	threshold		1009146	1					
ANR	1009573	CompoundStatement		72:12:2087:2087	1009146	1					
ANR	1009574	ExpressionStatement	* outp -- = 1	473:16:13421:13432	1009146	0	True				
ANR	1009575	AssignmentExpression	* outp -- = 1		1009146	0		=			
ANR	1009576	UnaryOperationExpression	* outp --		1009146	0					
ANR	1009577	UnaryOperator	*		1009146	0					
ANR	1009578	PostIncDecOperationExpression	outp --		1009146	1					
ANR	1009579	Identifier	outp		1009146	0					
ANR	1009580	IncDec	--		1009146	1					
ANR	1009581	PrimaryExpression	1		1009146	1					
ANR	1009582	ExpressionStatement	value -= max_value	474:16:13450:13468	1009146	1	True				
ANR	1009583	AssignmentExpression	value -= max_value		1009146	0		-=			
ANR	1009584	Identifier	value		1009146	0					
ANR	1009585	Identifier	max_value		1009146	1					
ANR	1009586	ElseStatement	else		1009146	0					
ANR	1009587	CompoundStatement		77:12:2197:2197	1009146	0					
ANR	1009588	ExpressionStatement	* outp -- = 0	478:16:13531:13542	1009146	0	True				
ANR	1009589	AssignmentExpression	* outp -- = 0		1009146	0		=			
ANR	1009590	UnaryOperationExpression	* outp --		1009146	0					
ANR	1009591	UnaryOperator	*		1009146	0					
ANR	1009592	PostIncDecOperationExpression	outp --		1009146	1					
ANR	1009593	Identifier	outp		1009146	0					
ANR	1009594	IncDec	--		1009146	1					
ANR	1009595	PrimaryExpression	0		1009146	1					
ANR	1009596	ExpressionStatement	e_forward = value * 7 / 16	480:12:13570:13595	1009146	3	True				
ANR	1009597	AssignmentExpression	e_forward = value * 7 / 16		1009146	0		=			
ANR	1009598	Identifier	e_forward		1009146	0					
ANR	1009599	MultiplicativeExpression	value * 7 / 16		1009146	1		*			
ANR	1009600	Identifier	value		1009146	0					
ANR	1009601	MultiplicativeExpression	7 / 16		1009146	1		/			
ANR	1009602	PrimaryExpression	7		1009146	0					
ANR	1009603	PrimaryExpression	16		1009146	1					
ANR	1009604	ExpressionStatement	e_downleft = value * 3 / 16	481:12:13609:13634	1009146	4	True				
ANR	1009605	AssignmentExpression	e_downleft = value * 3 / 16		1009146	0		=			
ANR	1009606	Identifier	e_downleft		1009146	0					
ANR	1009607	MultiplicativeExpression	value * 3 / 16		1009146	1		*			
ANR	1009608	Identifier	value		1009146	0					
ANR	1009609	MultiplicativeExpression	3 / 16		1009146	1		/			
ANR	1009610	PrimaryExpression	3		1009146	0					
ANR	1009611	PrimaryExpression	16		1009146	1					
ANR	1009612	ExpressionStatement	e_down = value * 5 / 16	482:12:13648:13673	1009146	5	True				
ANR	1009613	AssignmentExpression	e_down = value * 5 / 16		1009146	0		=			
ANR	1009614	Identifier	e_down		1009146	0					
ANR	1009615	MultiplicativeExpression	value * 5 / 16		1009146	1		*			
ANR	1009616	Identifier	value		1009146	0					
ANR	1009617	MultiplicativeExpression	5 / 16		1009146	1		/			
ANR	1009618	PrimaryExpression	5		1009146	0					
ANR	1009619	PrimaryExpression	16		1009146	1					
ANR	1009620	ExpressionStatement	value -= e_forward + e_downleft + e_down	483:12:13687:13731	1009146	6	True				
ANR	1009621	AssignmentExpression	value -= e_forward + e_downleft + e_down		1009146	0		-=			
ANR	1009622	Identifier	value		1009146	0					
ANR	1009623	AdditiveExpression	e_forward + e_downleft + e_down		1009146	1		+			
ANR	1009624	Identifier	e_forward		1009146	0					
ANR	1009625	AdditiveExpression	e_downleft + e_down		1009146	1		+			
ANR	1009626	Identifier	e_downleft		1009146	0					
ANR	1009627	Identifier	e_down		1009146	1					
ANR	1009628	ExpressionStatement	errors [ 2 ] += e_downleft	484:12:13745:13768	1009146	7	True				
ANR	1009629	AssignmentExpression	errors [ 2 ] += e_downleft		1009146	0		+=			
ANR	1009630	ArrayIndexing	errors [ 2 ]		1009146	0					
ANR	1009631	Identifier	errors		1009146	0					
ANR	1009632	PrimaryExpression	2		1009146	1					
ANR	1009633	Identifier	e_downleft		1009146	1					
ANR	1009634	ExpressionStatement	errors [ 1 ] += e_down	485:12:13782:13801	1009146	8	True				
ANR	1009635	AssignmentExpression	errors [ 1 ] += e_down		1009146	0		+=			
ANR	1009636	ArrayIndexing	errors [ 1 ]		1009146	0					
ANR	1009637	Identifier	errors		1009146	0					
ANR	1009638	PrimaryExpression	1		1009146	1					
ANR	1009639	Identifier	e_down		1009146	1					
ANR	1009640	ExpressionStatement	* errors -- = value	486:12:13815:13834	1009146	9	True				
ANR	1009641	AssignmentExpression	* errors -- = value		1009146	0		=			
ANR	1009642	UnaryOperationExpression	* errors --		1009146	0					
ANR	1009643	UnaryOperator	*		1009146	0					
ANR	1009644	PostIncDecOperationExpression	errors --		1009146	1					
ANR	1009645	Identifier	errors		1009146	0					
ANR	1009646	IncDec	--		1009146	1					
ANR	1009647	Identifier	value		1009146	1					
ANR	1009648	ExpressionStatement	outp ++	488:8:13854:13860	1009146	4	True				
ANR	1009649	PostIncDecOperationExpression	outp ++		1009146	0					
ANR	1009650	Identifier	outp		1009146	0					
ANR	1009651	IncDec	++		1009146	1					
ANR	1009652	ExpressionStatement	"pack_8to1 ( out_buffer , outp , awidth )"	490:4:13872:13907	1009146	14	True				
ANR	1009653	CallExpression	"pack_8to1 ( out_buffer , outp , awidth )"		1009146	0					
ANR	1009654	Callee	pack_8to1		1009146	0					
ANR	1009655	Identifier	pack_8to1		1009146	0					
ANR	1009656	ArgumentList	out_buffer		1009146	1					
ANR	1009657	Argument	out_buffer		1009146	0					
ANR	1009658	Identifier	out_buffer		1009146	0					
ANR	1009659	Argument	outp		1009146	1					
ANR	1009660	Identifier	outp		1009146	0					
ANR	1009661	Argument	awidth		1009146	2					
ANR	1009662	Identifier	awidth		1009146	0					
ANR	1009663	ReturnType	static void		1009146	1					
ANR	1009664	Identifier	down_core_3		1009146	2					
ANR	1009665	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1009146	3					
ANR	1009666	Parameter	gx_downscaler_t * ds	395:24:11048:11066	1009146	0	True				
ANR	1009667	ParameterType	gx_downscaler_t *		1009146	0					
ANR	1009668	Identifier	ds		1009146	1					
ANR	1009669	Parameter	byte * out_buffer	396:24:11093:11119	1009146	1	True				
ANR	1009670	ParameterType	byte *		1009146	0					
ANR	1009671	Identifier	out_buffer		1009146	1					
ANR	1009672	Parameter	byte * in_buffer	397:24:11146:11171	1009146	2	True				
ANR	1009673	ParameterType	byte *		1009146	0					
ANR	1009674	Identifier	in_buffer		1009146	1					
ANR	1009675	Parameter	int row	398:24:11198:11217	1009146	3	True				
ANR	1009676	ParameterType	int		1009146	0					
ANR	1009677	Identifier	row		1009146	1					
ANR	1009678	Parameter	int plane	399:24:11244:11265	1009146	4	True				
ANR	1009679	ParameterType	int		1009146	0					
ANR	1009680	Identifier	plane		1009146	1					
ANR	1009681	Parameter	int span	400:24:11292:11312	1009146	5	True				
ANR	1009682	ParameterType	int		1009146	0					
ANR	1009683	Identifier	span		1009146	1					
ANR	1009684	CFGEntryNode	ENTRY		1009146		True				
ANR	1009685	CFGExitNode	EXIT		1009146		True				
ANR	1009686	Symbol	plane		1009146						
ANR	1009687	Symbol	awidth		1009146						
ANR	1009688	Symbol	in_buffer		1009146						
ANR	1009689	Symbol	threshold		1009146						
ANR	1009690	Symbol	ds		1009146						
ANR	1009691	Symbol	ds -> errors		1009146						
ANR	1009692	Symbol	outp		1009146						
ANR	1009693	Symbol	* ds		1009146						
ANR	1009694	Symbol	e_forward		1009146						
ANR	1009695	Symbol	* outp ++		1009146						
ANR	1009696	Symbol	* outp --		1009146						
ANR	1009697	Symbol	ds -> width		1009146						
ANR	1009698	Symbol	row		1009146						
ANR	1009699	Symbol	* errors ++		1009146						
ANR	1009700	Symbol	* errors --		1009146						
ANR	1009701	Symbol	value		1009146						
ANR	1009702	Symbol	out_buffer		1009146						
ANR	1009703	Symbol	* span		1009146						
ANR	1009704	Symbol	ds -> awidth		1009146						
ANR	1009705	Symbol	inp		1009146						
ANR	1009706	Symbol	* inp		1009146						
ANR	1009707	Symbol	* errors		1009146						
ANR	1009708	Symbol	pad_white		1009146						
ANR	1009709	Symbol	x		1009146						
ANR	1009710	Symbol	width		1009146						
ANR	1009711	Symbol	e_downleft		1009146						
ANR	1009712	Symbol	errors		1009146						
ANR	1009713	Symbol	span		1009146						
ANR	1009714	Symbol	e_down		1009146						
ANR	1009715	Symbol	max_value		1009146						
ANR	1009716	Function	down_core_4	493:0:13912:17057							
ANR	1009717	FunctionDef	"down_core_4 (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1009716	0					
ANR	1009718	CompoundStatement		499:0:14203:17057	1009716	0					
ANR	1009719	IdentifierDeclStatement	"int x , value ;"	500:4:14209:14228	1009716	0	True				
ANR	1009720	IdentifierDecl	x		1009716	0					
ANR	1009721	IdentifierDeclType	int		1009716	0					
ANR	1009722	Identifier	x		1009716	1					
ANR	1009723	IdentifierDecl	value		1009716	1					
ANR	1009724	IdentifierDeclType	int		1009716	0					
ANR	1009725	Identifier	value		1009716	1					
ANR	1009726	IdentifierDeclStatement	"int e_downleft , e_down , e_forward = 0 ;"	501:4:14234:14278	1009716	1	True				
ANR	1009727	IdentifierDecl	e_downleft		1009716	0					
ANR	1009728	IdentifierDeclType	int		1009716	0					
ANR	1009729	Identifier	e_downleft		1009716	1					
ANR	1009730	IdentifierDecl	e_down		1009716	1					
ANR	1009731	IdentifierDeclType	int		1009716	0					
ANR	1009732	Identifier	e_down		1009716	1					
ANR	1009733	IdentifierDecl	e_forward = 0		1009716	2					
ANR	1009734	IdentifierDeclType	int		1009716	0					
ANR	1009735	Identifier	e_forward		1009716	1					
ANR	1009736	AssignmentExpression	e_forward = 0		1009716	2		=			
ANR	1009737	Identifier	e_forward		1009716	0					
ANR	1009738	PrimaryExpression	0		1009716	1					
ANR	1009739	IdentifierDeclStatement	int pad_white ;	502:4:14284:14304	1009716	2	True				
ANR	1009740	IdentifierDecl	pad_white		1009716	0					
ANR	1009741	IdentifierDeclType	int		1009716	0					
ANR	1009742	Identifier	pad_white		1009716	1					
ANR	1009743	IdentifierDeclStatement	"byte * inp , * outp ;"	503:4:14310:14331	1009716	3	True				
ANR	1009744	IdentifierDecl	* inp		1009716	0					
ANR	1009745	IdentifierDeclType	byte *		1009716	0					
ANR	1009746	Identifier	inp		1009716	1					
ANR	1009747	IdentifierDecl	* outp		1009716	1					
ANR	1009748	IdentifierDeclType	byte *		1009716	0					
ANR	1009749	Identifier	outp		1009716	1					
ANR	1009750	IdentifierDeclStatement	int width = ds -> width ;	504:4:14337:14369	1009716	4	True				
ANR	1009751	IdentifierDecl	width = ds -> width		1009716	0					
ANR	1009752	IdentifierDeclType	int		1009716	0					
ANR	1009753	Identifier	width		1009716	1					
ANR	1009754	AssignmentExpression	width = ds -> width		1009716	2		=			
ANR	1009755	Identifier	width		1009716	0					
ANR	1009756	PtrMemberAccess	ds -> width		1009716	1					
ANR	1009757	Identifier	ds		1009716	0					
ANR	1009758	Identifier	width		1009716	1					
ANR	1009759	IdentifierDeclStatement	int awidth = ds -> awidth ;	505:4:14375:14408	1009716	5	True				
ANR	1009760	IdentifierDecl	awidth = ds -> awidth		1009716	0					
ANR	1009761	IdentifierDeclType	int		1009716	0					
ANR	1009762	Identifier	awidth		1009716	1					
ANR	1009763	AssignmentExpression	awidth = ds -> awidth		1009716	2		=			
ANR	1009764	Identifier	awidth		1009716	0					
ANR	1009765	PtrMemberAccess	ds -> awidth		1009716	1					
ANR	1009766	Identifier	ds		1009716	0					
ANR	1009767	Identifier	awidth		1009716	1					
ANR	1009768	IdentifierDeclStatement	int * errors = ds -> errors + ( awidth + 3 ) * plane ;	506:4:14414:14466	1009716	6	True				
ANR	1009769	IdentifierDecl	* errors = ds -> errors + ( awidth + 3 ) * plane		1009716	0					
ANR	1009770	IdentifierDeclType	int *		1009716	0					
ANR	1009771	Identifier	errors		1009716	1					
ANR	1009772	AssignmentExpression	* errors = ds -> errors + ( awidth + 3 ) * plane		1009716	2		=			
ANR	1009773	Identifier	errors		1009716	0					
ANR	1009774	AdditiveExpression	ds -> errors + ( awidth + 3 ) * plane		1009716	1		+			
ANR	1009775	PtrMemberAccess	ds -> errors		1009716	0					
ANR	1009776	Identifier	ds		1009716	0					
ANR	1009777	Identifier	errors		1009716	1					
ANR	1009778	MultiplicativeExpression	( awidth + 3 ) * plane		1009716	1		*			
ANR	1009779	AdditiveExpression	awidth + 3		1009716	0		+			
ANR	1009780	Identifier	awidth		1009716	0					
ANR	1009781	PrimaryExpression	3		1009716	1					
ANR	1009782	Identifier	plane		1009716	1					
ANR	1009783	IdentifierDeclStatement	const int threshold = 4 * 4 * 128 ;	507:4:14472:14502	1009716	7	True				
ANR	1009784	IdentifierDecl	threshold = 4 * 4 * 128		1009716	0					
ANR	1009785	IdentifierDeclType	const int		1009716	0					
ANR	1009786	Identifier	threshold		1009716	1					
ANR	1009787	AssignmentExpression	threshold = 4 * 4 * 128		1009716	2		=			
ANR	1009788	Identifier	threshold		1009716	0					
ANR	1009789	MultiplicativeExpression	4 * 4 * 128		1009716	1		*			
ANR	1009790	PrimaryExpression	4		1009716	0					
ANR	1009791	MultiplicativeExpression	4 * 128		1009716	1		*			
ANR	1009792	PrimaryExpression	4		1009716	0					
ANR	1009793	PrimaryExpression	128		1009716	1					
ANR	1009794	IdentifierDeclStatement	const int max_value = 4 * 4 * 255 ;	508:4:14508:14538	1009716	8	True				
ANR	1009795	IdentifierDecl	max_value = 4 * 4 * 255		1009716	0					
ANR	1009796	IdentifierDeclType	const int		1009716	0					
ANR	1009797	Identifier	max_value		1009716	1					
ANR	1009798	AssignmentExpression	max_value = 4 * 4 * 255		1009716	2		=			
ANR	1009799	Identifier	max_value		1009716	0					
ANR	1009800	MultiplicativeExpression	4 * 4 * 255		1009716	1		*			
ANR	1009801	PrimaryExpression	4		1009716	0					
ANR	1009802	MultiplicativeExpression	4 * 255		1009716	1		*			
ANR	1009803	PrimaryExpression	4		1009716	0					
ANR	1009804	PrimaryExpression	255		1009716	1					
ANR	1009805	ExpressionStatement	pad_white = ( awidth - width ) * 4	510:4:14545:14577	1009716	9	True				
ANR	1009806	AssignmentExpression	pad_white = ( awidth - width ) * 4		1009716	0		=			
ANR	1009807	Identifier	pad_white		1009716	0					
ANR	1009808	MultiplicativeExpression	( awidth - width ) * 4		1009716	1		*			
ANR	1009809	AdditiveExpression	awidth - width		1009716	0		-			
ANR	1009810	Identifier	awidth		1009716	0					
ANR	1009811	Identifier	width		1009716	1					
ANR	1009812	PrimaryExpression	4		1009716	1					
ANR	1009813	IfStatement	if ( pad_white < 0 )		1009716	10					
ANR	1009814	Condition	pad_white < 0	511:8:14587:14599	1009716	0	True				
ANR	1009815	RelationalExpression	pad_white < 0		1009716	0		<			
ANR	1009816	Identifier	pad_white		1009716	0					
ANR	1009817	PrimaryExpression	0		1009716	1					
ANR	1009818	ExpressionStatement	pad_white = 0	512:8:14610:14623	1009716	1	True				
ANR	1009819	AssignmentExpression	pad_white = 0		1009716	0		=			
ANR	1009820	Identifier	pad_white		1009716	0					
ANR	1009821	PrimaryExpression	0		1009716	1					
ANR	1009822	IfStatement	if ( pad_white )		1009716	11					
ANR	1009823	Condition	pad_white	514:8:14634:14642	1009716	0	True				
ANR	1009824	Identifier	pad_white		1009716	0					
ANR	1009825	CompoundStatement		17:4:445:445	1009716	1					
ANR	1009826	ExpressionStatement	inp = in_buffer + width * 4	516:8:14659:14684	1009716	0	True				
ANR	1009827	AssignmentExpression	inp = in_buffer + width * 4		1009716	0		=			
ANR	1009828	Identifier	inp		1009716	0					
ANR	1009829	AdditiveExpression	in_buffer + width * 4		1009716	1		+			
ANR	1009830	Identifier	in_buffer		1009716	0					
ANR	1009831	MultiplicativeExpression	width * 4		1009716	1		*			
ANR	1009832	Identifier	width		1009716	0					
ANR	1009833	PrimaryExpression	4		1009716	1					
ANR	1009834	ForStatement	for ( x = 4 ; x > 0 ; x -- )		1009716	1					
ANR	1009835	ForInit	x = 4 ;	517:13:14699:14704	1009716	0	True				
ANR	1009836	AssignmentExpression	x = 4		1009716	0		=			
ANR	1009837	Identifier	x		1009716	0					
ANR	1009838	PrimaryExpression	4		1009716	1					
ANR	1009839	Condition	x > 0	517:20:14706:14710	1009716	1	True				
ANR	1009840	RelationalExpression	x > 0		1009716	0		>			
ANR	1009841	Identifier	x		1009716	0					
ANR	1009842	PrimaryExpression	0		1009716	1					
ANR	1009843	PostIncDecOperationExpression	x --	517:27:14713:14715	1009716	2	True				
ANR	1009844	Identifier	x		1009716	0					
ANR	1009845	IncDec	--		1009716	1					
ANR	1009846	CompoundStatement		20:8:522:522	1009716	3					
ANR	1009847	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	519:12:14740:14768	1009716	0	True				
ANR	1009848	CallExpression	"memset ( inp , 0xFF , pad_white )"		1009716	0					
ANR	1009849	Callee	memset		1009716	0					
ANR	1009850	Identifier	memset		1009716	0					
ANR	1009851	ArgumentList	inp		1009716	1					
ANR	1009852	Argument	inp		1009716	0					
ANR	1009853	Identifier	inp		1009716	0					
ANR	1009854	Argument	0xFF		1009716	1					
ANR	1009855	PrimaryExpression	0xFF		1009716	0					
ANR	1009856	Argument	pad_white		1009716	2					
ANR	1009857	Identifier	pad_white		1009716	0					
ANR	1009858	ExpressionStatement	inp += span	520:12:14782:14793	1009716	1	True				
ANR	1009859	AssignmentExpression	inp += span		1009716	0		+=			
ANR	1009860	Identifier	inp		1009716	0					
ANR	1009861	Identifier	span		1009716	1					
ANR	1009862	ExpressionStatement	inp = in_buffer	524:4:14816:14831	1009716	12	True				
ANR	1009863	AssignmentExpression	inp = in_buffer		1009716	0		=			
ANR	1009864	Identifier	inp		1009716	0					
ANR	1009865	Identifier	in_buffer		1009716	1					
ANR	1009866	IfStatement	if ( ( row & 1 ) == 0 )		1009716	13					
ANR	1009867	Condition	( row & 1 ) == 0	525:8:14841:14854	1009716	0	True				
ANR	1009868	EqualityExpression	( row & 1 ) == 0		1009716	0		==			
ANR	1009869	BitAndExpression	row & 1		1009716	0		&			
ANR	1009870	Identifier	row		1009716	0					
ANR	1009871	PrimaryExpression	1		1009716	1					
ANR	1009872	PrimaryExpression	0		1009716	1					
ANR	1009873	CompoundStatement		28:4:657:657	1009716	1					
ANR	1009874	ExpressionStatement	errors += 2	528:8:14926:14937	1009716	0	True				
ANR	1009875	AssignmentExpression	errors += 2		1009716	0		+=			
ANR	1009876	Identifier	errors		1009716	0					
ANR	1009877	PrimaryExpression	2		1009716	1					
ANR	1009878	ExpressionStatement	outp = inp	529:8:14947:14957	1009716	1	True				
ANR	1009879	AssignmentExpression	outp = inp		1009716	0		=			
ANR	1009880	Identifier	outp		1009716	0					
ANR	1009881	Identifier	inp		1009716	1					
ANR	1009882	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1009716	2					
ANR	1009883	ForInit	x = awidth ;	530:13:14972:14982	1009716	0	True				
ANR	1009884	AssignmentExpression	x = awidth		1009716	0		=			
ANR	1009885	Identifier	x		1009716	0					
ANR	1009886	Identifier	awidth		1009716	1					
ANR	1009887	Condition	x > 0	530:25:14984:14988	1009716	1	True				
ANR	1009888	RelationalExpression	x > 0		1009716	0		>			
ANR	1009889	Identifier	x		1009716	0					
ANR	1009890	PrimaryExpression	0		1009716	1					
ANR	1009891	PostIncDecOperationExpression	x --	530:32:14991:14993	1009716	2	True				
ANR	1009892	Identifier	x		1009716	0					
ANR	1009893	IncDec	--		1009716	1					
ANR	1009894	CompoundStatement		33:8:800:800	1009716	3					
ANR	1009895	ExpressionStatement	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]	532:12:15018:15373	1009716	0	True				
ANR	1009896	AssignmentExpression	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	0		=			
ANR	1009897	Identifier	value		1009716	0					
ANR	1009898	AdditiveExpression	e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009899	Identifier	e_forward		1009716	0					
ANR	1009900	AdditiveExpression	* errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009901	UnaryOperationExpression	* errors		1009716	0					
ANR	1009902	UnaryOperator	*		1009716	0					
ANR	1009903	Identifier	errors		1009716	1					
ANR	1009904	AdditiveExpression	inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009905	ArrayIndexing	inp [ 0 ]		1009716	0					
ANR	1009906	Identifier	inp		1009716	0					
ANR	1009907	PrimaryExpression	0		1009716	1					
ANR	1009908	AdditiveExpression	inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009909	ArrayIndexing	inp [ 1 ]		1009716	0					
ANR	1009910	Identifier	inp		1009716	0					
ANR	1009911	PrimaryExpression	1		1009716	1					
ANR	1009912	AdditiveExpression	inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009913	ArrayIndexing	inp [ 2 ]		1009716	0					
ANR	1009914	Identifier	inp		1009716	0					
ANR	1009915	PrimaryExpression	2		1009716	1					
ANR	1009916	AdditiveExpression	inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009917	ArrayIndexing	inp [ 3 ]		1009716	0					
ANR	1009918	Identifier	inp		1009716	0					
ANR	1009919	PrimaryExpression	3		1009716	1					
ANR	1009920	AdditiveExpression	inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009921	ArrayIndexing	inp [ span ]		1009716	0					
ANR	1009922	Identifier	inp		1009716	0					
ANR	1009923	Identifier	span		1009716	1					
ANR	1009924	AdditiveExpression	inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009925	ArrayIndexing	inp [ span + 1 ]		1009716	0					
ANR	1009926	Identifier	inp		1009716	0					
ANR	1009927	AdditiveExpression	span + 1		1009716	1		+			
ANR	1009928	Identifier	span		1009716	0					
ANR	1009929	PrimaryExpression	1		1009716	1					
ANR	1009930	AdditiveExpression	inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009931	ArrayIndexing	inp [ span + 2 ]		1009716	0					
ANR	1009932	Identifier	inp		1009716	0					
ANR	1009933	AdditiveExpression	span + 2		1009716	1		+			
ANR	1009934	Identifier	span		1009716	0					
ANR	1009935	PrimaryExpression	2		1009716	1					
ANR	1009936	AdditiveExpression	inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009937	ArrayIndexing	inp [ span + 3 ]		1009716	0					
ANR	1009938	Identifier	inp		1009716	0					
ANR	1009939	AdditiveExpression	span + 3		1009716	1		+			
ANR	1009940	Identifier	span		1009716	0					
ANR	1009941	PrimaryExpression	3		1009716	1					
ANR	1009942	AdditiveExpression	inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009943	ArrayIndexing	inp [ span * 2 ]		1009716	0					
ANR	1009944	Identifier	inp		1009716	0					
ANR	1009945	MultiplicativeExpression	span * 2		1009716	1		*			
ANR	1009946	Identifier	span		1009716	0					
ANR	1009947	PrimaryExpression	2		1009716	1					
ANR	1009948	AdditiveExpression	inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009949	ArrayIndexing	inp [ span * 2 + 1 ]		1009716	0					
ANR	1009950	Identifier	inp		1009716	0					
ANR	1009951	AdditiveExpression	span * 2 + 1		1009716	1		+			
ANR	1009952	MultiplicativeExpression	span * 2		1009716	0		*			
ANR	1009953	Identifier	span		1009716	0					
ANR	1009954	PrimaryExpression	2		1009716	1					
ANR	1009955	PrimaryExpression	1		1009716	1					
ANR	1009956	AdditiveExpression	inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009957	ArrayIndexing	inp [ span * 2 + 2 ]		1009716	0					
ANR	1009958	Identifier	inp		1009716	0					
ANR	1009959	AdditiveExpression	span * 2 + 2		1009716	1		+			
ANR	1009960	MultiplicativeExpression	span * 2		1009716	0		*			
ANR	1009961	Identifier	span		1009716	0					
ANR	1009962	PrimaryExpression	2		1009716	1					
ANR	1009963	PrimaryExpression	2		1009716	1					
ANR	1009964	AdditiveExpression	inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009965	ArrayIndexing	inp [ span * 2 + 3 ]		1009716	0					
ANR	1009966	Identifier	inp		1009716	0					
ANR	1009967	AdditiveExpression	span * 2 + 3		1009716	1		+			
ANR	1009968	MultiplicativeExpression	span * 2		1009716	0		*			
ANR	1009969	Identifier	span		1009716	0					
ANR	1009970	PrimaryExpression	2		1009716	1					
ANR	1009971	PrimaryExpression	3		1009716	1					
ANR	1009972	AdditiveExpression	inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009973	ArrayIndexing	inp [ span * 3 ]		1009716	0					
ANR	1009974	Identifier	inp		1009716	0					
ANR	1009975	MultiplicativeExpression	span * 3		1009716	1		*			
ANR	1009976	Identifier	span		1009716	0					
ANR	1009977	PrimaryExpression	3		1009716	1					
ANR	1009978	AdditiveExpression	inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009979	ArrayIndexing	inp [ span * 3 + 1 ]		1009716	0					
ANR	1009980	Identifier	inp		1009716	0					
ANR	1009981	AdditiveExpression	span * 3 + 1		1009716	1		+			
ANR	1009982	MultiplicativeExpression	span * 3		1009716	0		*			
ANR	1009983	Identifier	span		1009716	0					
ANR	1009984	PrimaryExpression	3		1009716	1					
ANR	1009985	PrimaryExpression	1		1009716	1					
ANR	1009986	AdditiveExpression	inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1009987	ArrayIndexing	inp [ span * 3 + 2 ]		1009716	0					
ANR	1009988	Identifier	inp		1009716	0					
ANR	1009989	AdditiveExpression	span * 3 + 2		1009716	1		+			
ANR	1009990	MultiplicativeExpression	span * 3		1009716	0		*			
ANR	1009991	Identifier	span		1009716	0					
ANR	1009992	PrimaryExpression	3		1009716	1					
ANR	1009993	PrimaryExpression	2		1009716	1					
ANR	1009994	ArrayIndexing	inp [ span * 3 + 3 ]		1009716	1					
ANR	1009995	Identifier	inp		1009716	0					
ANR	1009996	AdditiveExpression	span * 3 + 3		1009716	1		+			
ANR	1009997	MultiplicativeExpression	span * 3		1009716	0		*			
ANR	1009998	Identifier	span		1009716	0					
ANR	1009999	PrimaryExpression	3		1009716	1					
ANR	1010000	PrimaryExpression	3		1009716	1					
ANR	1010001	ExpressionStatement	inp += 4	537:12:15387:15395	1009716	1	True				
ANR	1010002	AssignmentExpression	inp += 4		1009716	0		+=			
ANR	1010003	Identifier	inp		1009716	0					
ANR	1010004	PrimaryExpression	4		1009716	1					
ANR	1010005	IfStatement	if ( value >= threshold )		1009716	2					
ANR	1010006	Condition	value >= threshold	538:16:15413:15430	1009716	0	True				
ANR	1010007	RelationalExpression	value >= threshold		1009716	0		>=			
ANR	1010008	Identifier	value		1009716	0					
ANR	1010009	Identifier	threshold		1009716	1					
ANR	1010010	CompoundStatement		41:12:1241:1241	1009716	1					
ANR	1010011	ExpressionStatement	* outp ++ = 1	540:16:15463:15474	1009716	0	True				
ANR	1010012	AssignmentExpression	* outp ++ = 1		1009716	0		=			
ANR	1010013	UnaryOperationExpression	* outp ++		1009716	0					
ANR	1010014	UnaryOperator	*		1009716	0					
ANR	1010015	PostIncDecOperationExpression	outp ++		1009716	1					
ANR	1010016	Identifier	outp		1009716	0					
ANR	1010017	IncDec	++		1009716	1					
ANR	1010018	PrimaryExpression	1		1009716	1					
ANR	1010019	ExpressionStatement	value -= max_value	541:16:15492:15510	1009716	1	True				
ANR	1010020	AssignmentExpression	value -= max_value		1009716	0		-=			
ANR	1010021	Identifier	value		1009716	0					
ANR	1010022	Identifier	max_value		1009716	1					
ANR	1010023	ElseStatement	else		1009716	0					
ANR	1010024	CompoundStatement		46:12:1351:1351	1009716	0					
ANR	1010025	ExpressionStatement	* outp ++ = 0	545:16:15573:15584	1009716	0	True				
ANR	1010026	AssignmentExpression	* outp ++ = 0		1009716	0		=			
ANR	1010027	UnaryOperationExpression	* outp ++		1009716	0					
ANR	1010028	UnaryOperator	*		1009716	0					
ANR	1010029	PostIncDecOperationExpression	outp ++		1009716	1					
ANR	1010030	Identifier	outp		1009716	0					
ANR	1010031	IncDec	++		1009716	1					
ANR	1010032	PrimaryExpression	0		1009716	1					
ANR	1010033	ExpressionStatement	e_forward = value * 7 / 16	547:12:15612:15637	1009716	3	True				
ANR	1010034	AssignmentExpression	e_forward = value * 7 / 16		1009716	0		=			
ANR	1010035	Identifier	e_forward		1009716	0					
ANR	1010036	MultiplicativeExpression	value * 7 / 16		1009716	1		*			
ANR	1010037	Identifier	value		1009716	0					
ANR	1010038	MultiplicativeExpression	7 / 16		1009716	1		/			
ANR	1010039	PrimaryExpression	7		1009716	0					
ANR	1010040	PrimaryExpression	16		1009716	1					
ANR	1010041	ExpressionStatement	e_downleft = value * 3 / 16	548:12:15651:15676	1009716	4	True				
ANR	1010042	AssignmentExpression	e_downleft = value * 3 / 16		1009716	0		=			
ANR	1010043	Identifier	e_downleft		1009716	0					
ANR	1010044	MultiplicativeExpression	value * 3 / 16		1009716	1		*			
ANR	1010045	Identifier	value		1009716	0					
ANR	1010046	MultiplicativeExpression	3 / 16		1009716	1		/			
ANR	1010047	PrimaryExpression	3		1009716	0					
ANR	1010048	PrimaryExpression	16		1009716	1					
ANR	1010049	ExpressionStatement	e_down = value * 5 / 16	549:12:15690:15715	1009716	5	True				
ANR	1010050	AssignmentExpression	e_down = value * 5 / 16		1009716	0		=			
ANR	1010051	Identifier	e_down		1009716	0					
ANR	1010052	MultiplicativeExpression	value * 5 / 16		1009716	1		*			
ANR	1010053	Identifier	value		1009716	0					
ANR	1010054	MultiplicativeExpression	5 / 16		1009716	1		/			
ANR	1010055	PrimaryExpression	5		1009716	0					
ANR	1010056	PrimaryExpression	16		1009716	1					
ANR	1010057	ExpressionStatement	value -= e_forward + e_downleft + e_down	550:12:15729:15773	1009716	6	True				
ANR	1010058	AssignmentExpression	value -= e_forward + e_downleft + e_down		1009716	0		-=			
ANR	1010059	Identifier	value		1009716	0					
ANR	1010060	AdditiveExpression	e_forward + e_downleft + e_down		1009716	1		+			
ANR	1010061	Identifier	e_forward		1009716	0					
ANR	1010062	AdditiveExpression	e_downleft + e_down		1009716	1		+			
ANR	1010063	Identifier	e_downleft		1009716	0					
ANR	1010064	Identifier	e_down		1009716	1					
ANR	1010065	ExpressionStatement	errors [ - 2 ] += e_downleft	551:12:15787:15811	1009716	7	True				
ANR	1010066	AssignmentExpression	errors [ - 2 ] += e_downleft		1009716	0		+=			
ANR	1010067	ArrayIndexing	errors [ - 2 ]		1009716	0					
ANR	1010068	Identifier	errors		1009716	0					
ANR	1010069	UnaryOperationExpression	- 2		1009716	1					
ANR	1010070	UnaryOperator	-		1009716	0					
ANR	1010071	PrimaryExpression	2		1009716	1					
ANR	1010072	Identifier	e_downleft		1009716	1					
ANR	1010073	ExpressionStatement	errors [ - 1 ] += e_down	552:12:15825:15845	1009716	8	True				
ANR	1010074	AssignmentExpression	errors [ - 1 ] += e_down		1009716	0		+=			
ANR	1010075	ArrayIndexing	errors [ - 1 ]		1009716	0					
ANR	1010076	Identifier	errors		1009716	0					
ANR	1010077	UnaryOperationExpression	- 1		1009716	1					
ANR	1010078	UnaryOperator	-		1009716	0					
ANR	1010079	PrimaryExpression	1		1009716	1					
ANR	1010080	Identifier	e_down		1009716	1					
ANR	1010081	ExpressionStatement	* errors ++ = value	553:12:15859:15878	1009716	9	True				
ANR	1010082	AssignmentExpression	* errors ++ = value		1009716	0		=			
ANR	1010083	UnaryOperationExpression	* errors ++		1009716	0					
ANR	1010084	UnaryOperator	*		1009716	0					
ANR	1010085	PostIncDecOperationExpression	errors ++		1009716	1					
ANR	1010086	Identifier	errors		1009716	0					
ANR	1010087	IncDec	++		1009716	1					
ANR	1010088	Identifier	value		1009716	1					
ANR	1010089	ExpressionStatement	outp -= awidth	555:8:15898:15912	1009716	3	True				
ANR	1010090	AssignmentExpression	outp -= awidth		1009716	0		-=			
ANR	1010091	Identifier	outp		1009716	0					
ANR	1010092	Identifier	awidth		1009716	1					
ANR	1010093	ElseStatement	else		1009716	0					
ANR	1010094	CompoundStatement		60:4:1729:1729	1009716	0					
ANR	1010095	ExpressionStatement	errors += awidth	560:8:15998:16014	1009716	0	True				
ANR	1010096	AssignmentExpression	errors += awidth		1009716	0		+=			
ANR	1010097	Identifier	errors		1009716	0					
ANR	1010098	Identifier	awidth		1009716	1					
ANR	1010099	ExpressionStatement	inp += ( awidth - 1 ) * 4	561:8:16024:16043	1009716	1	True				
ANR	1010100	AssignmentExpression	inp += ( awidth - 1 ) * 4		1009716	0		+=			
ANR	1010101	Identifier	inp		1009716	0					
ANR	1010102	MultiplicativeExpression	( awidth - 1 ) * 4		1009716	1		*			
ANR	1010103	AdditiveExpression	awidth - 1		1009716	0		-			
ANR	1010104	Identifier	awidth		1009716	0					
ANR	1010105	PrimaryExpression	1		1009716	1					
ANR	1010106	PrimaryExpression	4		1009716	1					
ANR	1010107	ExpressionStatement	outp = inp	562:8:16053:16063	1009716	2	True				
ANR	1010108	AssignmentExpression	outp = inp		1009716	0		=			
ANR	1010109	Identifier	outp		1009716	0					
ANR	1010110	Identifier	inp		1009716	1					
ANR	1010111	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1009716	3					
ANR	1010112	ForInit	x = awidth ;	563:13:16078:16088	1009716	0	True				
ANR	1010113	AssignmentExpression	x = awidth		1009716	0		=			
ANR	1010114	Identifier	x		1009716	0					
ANR	1010115	Identifier	awidth		1009716	1					
ANR	1010116	Condition	x > 0	563:25:16090:16094	1009716	1	True				
ANR	1010117	RelationalExpression	x > 0		1009716	0		>			
ANR	1010118	Identifier	x		1009716	0					
ANR	1010119	PrimaryExpression	0		1009716	1					
ANR	1010120	PostIncDecOperationExpression	x --	563:32:16097:16099	1009716	2	True				
ANR	1010121	Identifier	x		1009716	0					
ANR	1010122	IncDec	--		1009716	1					
ANR	1010123	CompoundStatement		66:8:1906:1906	1009716	3					
ANR	1010124	ExpressionStatement	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]	565:12:16124:16479	1009716	0	True				
ANR	1010125	AssignmentExpression	value = e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	0		=			
ANR	1010126	Identifier	value		1009716	0					
ANR	1010127	AdditiveExpression	e_forward + * errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010128	Identifier	e_forward		1009716	0					
ANR	1010129	AdditiveExpression	* errors + inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010130	UnaryOperationExpression	* errors		1009716	0					
ANR	1010131	UnaryOperator	*		1009716	0					
ANR	1010132	Identifier	errors		1009716	1					
ANR	1010133	AdditiveExpression	inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010134	ArrayIndexing	inp [ 0 ]		1009716	0					
ANR	1010135	Identifier	inp		1009716	0					
ANR	1010136	PrimaryExpression	0		1009716	1					
ANR	1010137	AdditiveExpression	inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010138	ArrayIndexing	inp [ 1 ]		1009716	0					
ANR	1010139	Identifier	inp		1009716	0					
ANR	1010140	PrimaryExpression	1		1009716	1					
ANR	1010141	AdditiveExpression	inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010142	ArrayIndexing	inp [ 2 ]		1009716	0					
ANR	1010143	Identifier	inp		1009716	0					
ANR	1010144	PrimaryExpression	2		1009716	1					
ANR	1010145	AdditiveExpression	inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010146	ArrayIndexing	inp [ 3 ]		1009716	0					
ANR	1010147	Identifier	inp		1009716	0					
ANR	1010148	PrimaryExpression	3		1009716	1					
ANR	1010149	AdditiveExpression	inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010150	ArrayIndexing	inp [ span ]		1009716	0					
ANR	1010151	Identifier	inp		1009716	0					
ANR	1010152	Identifier	span		1009716	1					
ANR	1010153	AdditiveExpression	inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010154	ArrayIndexing	inp [ span + 1 ]		1009716	0					
ANR	1010155	Identifier	inp		1009716	0					
ANR	1010156	AdditiveExpression	span + 1		1009716	1		+			
ANR	1010157	Identifier	span		1009716	0					
ANR	1010158	PrimaryExpression	1		1009716	1					
ANR	1010159	AdditiveExpression	inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010160	ArrayIndexing	inp [ span + 2 ]		1009716	0					
ANR	1010161	Identifier	inp		1009716	0					
ANR	1010162	AdditiveExpression	span + 2		1009716	1		+			
ANR	1010163	Identifier	span		1009716	0					
ANR	1010164	PrimaryExpression	2		1009716	1					
ANR	1010165	AdditiveExpression	inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010166	ArrayIndexing	inp [ span + 3 ]		1009716	0					
ANR	1010167	Identifier	inp		1009716	0					
ANR	1010168	AdditiveExpression	span + 3		1009716	1		+			
ANR	1010169	Identifier	span		1009716	0					
ANR	1010170	PrimaryExpression	3		1009716	1					
ANR	1010171	AdditiveExpression	inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010172	ArrayIndexing	inp [ span * 2 ]		1009716	0					
ANR	1010173	Identifier	inp		1009716	0					
ANR	1010174	MultiplicativeExpression	span * 2		1009716	1		*			
ANR	1010175	Identifier	span		1009716	0					
ANR	1010176	PrimaryExpression	2		1009716	1					
ANR	1010177	AdditiveExpression	inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010178	ArrayIndexing	inp [ span * 2 + 1 ]		1009716	0					
ANR	1010179	Identifier	inp		1009716	0					
ANR	1010180	AdditiveExpression	span * 2 + 1		1009716	1		+			
ANR	1010181	MultiplicativeExpression	span * 2		1009716	0		*			
ANR	1010182	Identifier	span		1009716	0					
ANR	1010183	PrimaryExpression	2		1009716	1					
ANR	1010184	PrimaryExpression	1		1009716	1					
ANR	1010185	AdditiveExpression	inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010186	ArrayIndexing	inp [ span * 2 + 2 ]		1009716	0					
ANR	1010187	Identifier	inp		1009716	0					
ANR	1010188	AdditiveExpression	span * 2 + 2		1009716	1		+			
ANR	1010189	MultiplicativeExpression	span * 2		1009716	0		*			
ANR	1010190	Identifier	span		1009716	0					
ANR	1010191	PrimaryExpression	2		1009716	1					
ANR	1010192	PrimaryExpression	2		1009716	1					
ANR	1010193	AdditiveExpression	inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010194	ArrayIndexing	inp [ span * 2 + 3 ]		1009716	0					
ANR	1010195	Identifier	inp		1009716	0					
ANR	1010196	AdditiveExpression	span * 2 + 3		1009716	1		+			
ANR	1010197	MultiplicativeExpression	span * 2		1009716	0		*			
ANR	1010198	Identifier	span		1009716	0					
ANR	1010199	PrimaryExpression	2		1009716	1					
ANR	1010200	PrimaryExpression	3		1009716	1					
ANR	1010201	AdditiveExpression	inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010202	ArrayIndexing	inp [ span * 3 ]		1009716	0					
ANR	1010203	Identifier	inp		1009716	0					
ANR	1010204	MultiplicativeExpression	span * 3		1009716	1		*			
ANR	1010205	Identifier	span		1009716	0					
ANR	1010206	PrimaryExpression	3		1009716	1					
ANR	1010207	AdditiveExpression	inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010208	ArrayIndexing	inp [ span * 3 + 1 ]		1009716	0					
ANR	1010209	Identifier	inp		1009716	0					
ANR	1010210	AdditiveExpression	span * 3 + 1		1009716	1		+			
ANR	1010211	MultiplicativeExpression	span * 3		1009716	0		*			
ANR	1010212	Identifier	span		1009716	0					
ANR	1010213	PrimaryExpression	3		1009716	1					
ANR	1010214	PrimaryExpression	1		1009716	1					
ANR	1010215	AdditiveExpression	inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ]		1009716	1		+			
ANR	1010216	ArrayIndexing	inp [ span * 3 + 2 ]		1009716	0					
ANR	1010217	Identifier	inp		1009716	0					
ANR	1010218	AdditiveExpression	span * 3 + 2		1009716	1		+			
ANR	1010219	MultiplicativeExpression	span * 3		1009716	0		*			
ANR	1010220	Identifier	span		1009716	0					
ANR	1010221	PrimaryExpression	3		1009716	1					
ANR	1010222	PrimaryExpression	2		1009716	1					
ANR	1010223	ArrayIndexing	inp [ span * 3 + 3 ]		1009716	1					
ANR	1010224	Identifier	inp		1009716	0					
ANR	1010225	AdditiveExpression	span * 3 + 3		1009716	1		+			
ANR	1010226	MultiplicativeExpression	span * 3		1009716	0		*			
ANR	1010227	Identifier	span		1009716	0					
ANR	1010228	PrimaryExpression	3		1009716	1					
ANR	1010229	PrimaryExpression	3		1009716	1					
ANR	1010230	ExpressionStatement	inp -= 4	570:12:16493:16501	1009716	1	True				
ANR	1010231	AssignmentExpression	inp -= 4		1009716	0		-=			
ANR	1010232	Identifier	inp		1009716	0					
ANR	1010233	PrimaryExpression	4		1009716	1					
ANR	1010234	IfStatement	if ( value >= threshold )		1009716	2					
ANR	1010235	Condition	value >= threshold	571:16:16519:16536	1009716	0	True				
ANR	1010236	RelationalExpression	value >= threshold		1009716	0		>=			
ANR	1010237	Identifier	value		1009716	0					
ANR	1010238	Identifier	threshold		1009716	1					
ANR	1010239	CompoundStatement		74:12:2347:2347	1009716	1					
ANR	1010240	ExpressionStatement	* outp -- = 1	573:16:16569:16580	1009716	0	True				
ANR	1010241	AssignmentExpression	* outp -- = 1		1009716	0		=			
ANR	1010242	UnaryOperationExpression	* outp --		1009716	0					
ANR	1010243	UnaryOperator	*		1009716	0					
ANR	1010244	PostIncDecOperationExpression	outp --		1009716	1					
ANR	1010245	Identifier	outp		1009716	0					
ANR	1010246	IncDec	--		1009716	1					
ANR	1010247	PrimaryExpression	1		1009716	1					
ANR	1010248	ExpressionStatement	value -= max_value	574:16:16598:16616	1009716	1	True				
ANR	1010249	AssignmentExpression	value -= max_value		1009716	0		-=			
ANR	1010250	Identifier	value		1009716	0					
ANR	1010251	Identifier	max_value		1009716	1					
ANR	1010252	ElseStatement	else		1009716	0					
ANR	1010253	CompoundStatement		79:12:2457:2457	1009716	0					
ANR	1010254	ExpressionStatement	* outp -- = 0	578:16:16679:16690	1009716	0	True				
ANR	1010255	AssignmentExpression	* outp -- = 0		1009716	0		=			
ANR	1010256	UnaryOperationExpression	* outp --		1009716	0					
ANR	1010257	UnaryOperator	*		1009716	0					
ANR	1010258	PostIncDecOperationExpression	outp --		1009716	1					
ANR	1010259	Identifier	outp		1009716	0					
ANR	1010260	IncDec	--		1009716	1					
ANR	1010261	PrimaryExpression	0		1009716	1					
ANR	1010262	ExpressionStatement	e_forward = value * 7 / 16	580:12:16718:16743	1009716	3	True				
ANR	1010263	AssignmentExpression	e_forward = value * 7 / 16		1009716	0		=			
ANR	1010264	Identifier	e_forward		1009716	0					
ANR	1010265	MultiplicativeExpression	value * 7 / 16		1009716	1		*			
ANR	1010266	Identifier	value		1009716	0					
ANR	1010267	MultiplicativeExpression	7 / 16		1009716	1		/			
ANR	1010268	PrimaryExpression	7		1009716	0					
ANR	1010269	PrimaryExpression	16		1009716	1					
ANR	1010270	ExpressionStatement	e_downleft = value * 3 / 16	581:12:16757:16782	1009716	4	True				
ANR	1010271	AssignmentExpression	e_downleft = value * 3 / 16		1009716	0		=			
ANR	1010272	Identifier	e_downleft		1009716	0					
ANR	1010273	MultiplicativeExpression	value * 3 / 16		1009716	1		*			
ANR	1010274	Identifier	value		1009716	0					
ANR	1010275	MultiplicativeExpression	3 / 16		1009716	1		/			
ANR	1010276	PrimaryExpression	3		1009716	0					
ANR	1010277	PrimaryExpression	16		1009716	1					
ANR	1010278	ExpressionStatement	e_down = value * 5 / 16	582:12:16796:16821	1009716	5	True				
ANR	1010279	AssignmentExpression	e_down = value * 5 / 16		1009716	0		=			
ANR	1010280	Identifier	e_down		1009716	0					
ANR	1010281	MultiplicativeExpression	value * 5 / 16		1009716	1		*			
ANR	1010282	Identifier	value		1009716	0					
ANR	1010283	MultiplicativeExpression	5 / 16		1009716	1		/			
ANR	1010284	PrimaryExpression	5		1009716	0					
ANR	1010285	PrimaryExpression	16		1009716	1					
ANR	1010286	ExpressionStatement	value -= e_forward + e_downleft + e_down	583:12:16835:16879	1009716	6	True				
ANR	1010287	AssignmentExpression	value -= e_forward + e_downleft + e_down		1009716	0		-=			
ANR	1010288	Identifier	value		1009716	0					
ANR	1010289	AdditiveExpression	e_forward + e_downleft + e_down		1009716	1		+			
ANR	1010290	Identifier	e_forward		1009716	0					
ANR	1010291	AdditiveExpression	e_downleft + e_down		1009716	1		+			
ANR	1010292	Identifier	e_downleft		1009716	0					
ANR	1010293	Identifier	e_down		1009716	1					
ANR	1010294	ExpressionStatement	errors [ 2 ] += e_downleft	584:12:16893:16916	1009716	7	True				
ANR	1010295	AssignmentExpression	errors [ 2 ] += e_downleft		1009716	0		+=			
ANR	1010296	ArrayIndexing	errors [ 2 ]		1009716	0					
ANR	1010297	Identifier	errors		1009716	0					
ANR	1010298	PrimaryExpression	2		1009716	1					
ANR	1010299	Identifier	e_downleft		1009716	1					
ANR	1010300	ExpressionStatement	errors [ 1 ] += e_down	585:12:16930:16949	1009716	8	True				
ANR	1010301	AssignmentExpression	errors [ 1 ] += e_down		1009716	0		+=			
ANR	1010302	ArrayIndexing	errors [ 1 ]		1009716	0					
ANR	1010303	Identifier	errors		1009716	0					
ANR	1010304	PrimaryExpression	1		1009716	1					
ANR	1010305	Identifier	e_down		1009716	1					
ANR	1010306	ExpressionStatement	* errors -- = value	586:12:16963:16982	1009716	9	True				
ANR	1010307	AssignmentExpression	* errors -- = value		1009716	0		=			
ANR	1010308	UnaryOperationExpression	* errors --		1009716	0					
ANR	1010309	UnaryOperator	*		1009716	0					
ANR	1010310	PostIncDecOperationExpression	errors --		1009716	1					
ANR	1010311	Identifier	errors		1009716	0					
ANR	1010312	IncDec	--		1009716	1					
ANR	1010313	Identifier	value		1009716	1					
ANR	1010314	ExpressionStatement	outp ++	588:8:17002:17008	1009716	4	True				
ANR	1010315	PostIncDecOperationExpression	outp ++		1009716	0					
ANR	1010316	Identifier	outp		1009716	0					
ANR	1010317	IncDec	++		1009716	1					
ANR	1010318	ExpressionStatement	"pack_8to1 ( out_buffer , outp , awidth )"	590:4:17020:17055	1009716	14	True				
ANR	1010319	CallExpression	"pack_8to1 ( out_buffer , outp , awidth )"		1009716	0					
ANR	1010320	Callee	pack_8to1		1009716	0					
ANR	1010321	Identifier	pack_8to1		1009716	0					
ANR	1010322	ArgumentList	out_buffer		1009716	1					
ANR	1010323	Argument	out_buffer		1009716	0					
ANR	1010324	Identifier	out_buffer		1009716	0					
ANR	1010325	Argument	outp		1009716	1					
ANR	1010326	Identifier	outp		1009716	0					
ANR	1010327	Argument	awidth		1009716	2					
ANR	1010328	Identifier	awidth		1009716	0					
ANR	1010329	ReturnType	static void		1009716	1					
ANR	1010330	Identifier	down_core_4		1009716	2					
ANR	1010331	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1009716	3					
ANR	1010332	Parameter	gx_downscaler_t * ds	493:24:13936:13954	1009716	0	True				
ANR	1010333	ParameterType	gx_downscaler_t *		1009716	0					
ANR	1010334	Identifier	ds		1009716	1					
ANR	1010335	Parameter	byte * out_buffer	494:24:13981:14007	1009716	1	True				
ANR	1010336	ParameterType	byte *		1009716	0					
ANR	1010337	Identifier	out_buffer		1009716	1					
ANR	1010338	Parameter	byte * in_buffer	495:24:14034:14059	1009716	2	True				
ANR	1010339	ParameterType	byte *		1009716	0					
ANR	1010340	Identifier	in_buffer		1009716	1					
ANR	1010341	Parameter	int row	496:24:14086:14105	1009716	3	True				
ANR	1010342	ParameterType	int		1009716	0					
ANR	1010343	Identifier	row		1009716	1					
ANR	1010344	Parameter	int plane	497:24:14132:14153	1009716	4	True				
ANR	1010345	ParameterType	int		1009716	0					
ANR	1010346	Identifier	plane		1009716	1					
ANR	1010347	Parameter	int span	498:24:14180:14200	1009716	5	True				
ANR	1010348	ParameterType	int		1009716	0					
ANR	1010349	Identifier	span		1009716	1					
ANR	1010350	CFGEntryNode	ENTRY		1009716		True				
ANR	1010351	CFGExitNode	EXIT		1009716		True				
ANR	1010352	Symbol	plane		1009716						
ANR	1010353	Symbol	awidth		1009716						
ANR	1010354	Symbol	in_buffer		1009716						
ANR	1010355	Symbol	threshold		1009716						
ANR	1010356	Symbol	ds		1009716						
ANR	1010357	Symbol	ds -> errors		1009716						
ANR	1010358	Symbol	outp		1009716						
ANR	1010359	Symbol	* ds		1009716						
ANR	1010360	Symbol	e_forward		1009716						
ANR	1010361	Symbol	* outp ++		1009716						
ANR	1010362	Symbol	* outp --		1009716						
ANR	1010363	Symbol	ds -> width		1009716						
ANR	1010364	Symbol	row		1009716						
ANR	1010365	Symbol	* errors ++		1009716						
ANR	1010366	Symbol	* errors --		1009716						
ANR	1010367	Symbol	value		1009716						
ANR	1010368	Symbol	out_buffer		1009716						
ANR	1010369	Symbol	* span		1009716						
ANR	1010370	Symbol	ds -> awidth		1009716						
ANR	1010371	Symbol	inp		1009716						
ANR	1010372	Symbol	* inp		1009716						
ANR	1010373	Symbol	* errors		1009716						
ANR	1010374	Symbol	pad_white		1009716						
ANR	1010375	Symbol	x		1009716						
ANR	1010376	Symbol	width		1009716						
ANR	1010377	Symbol	e_downleft		1009716						
ANR	1010378	Symbol	errors		1009716						
ANR	1010379	Symbol	span		1009716						
ANR	1010380	Symbol	e_down		1009716						
ANR	1010381	Symbol	max_value		1009716						
ANR	1010382	Function	down_core_mfs	593:0:17060:22391							
ANR	1010383	FunctionDef	"down_core_mfs (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1010382	0					
ANR	1010384	CompoundStatement		599:0:17363:22391	1010382	0					
ANR	1010385	IdentifierDeclStatement	"int x , xx , y , value ;"	600:4:17369:17395	1010382	0	True				
ANR	1010386	IdentifierDecl	x		1010382	0					
ANR	1010387	IdentifierDeclType	int		1010382	0					
ANR	1010388	Identifier	x		1010382	1					
ANR	1010389	IdentifierDecl	xx		1010382	1					
ANR	1010390	IdentifierDeclType	int		1010382	0					
ANR	1010391	Identifier	xx		1010382	1					
ANR	1010392	IdentifierDecl	y		1010382	2					
ANR	1010393	IdentifierDeclType	int		1010382	0					
ANR	1010394	Identifier	y		1010382	1					
ANR	1010395	IdentifierDecl	value		1010382	3					
ANR	1010396	IdentifierDeclType	int		1010382	0					
ANR	1010397	Identifier	value		1010382	1					
ANR	1010398	IdentifierDeclStatement	"int e_downleft , e_down , e_forward = 0 ;"	601:4:17401:17445	1010382	1	True				
ANR	1010399	IdentifierDecl	e_downleft		1010382	0					
ANR	1010400	IdentifierDeclType	int		1010382	0					
ANR	1010401	Identifier	e_downleft		1010382	1					
ANR	1010402	IdentifierDecl	e_down		1010382	1					
ANR	1010403	IdentifierDeclType	int		1010382	0					
ANR	1010404	Identifier	e_down		1010382	1					
ANR	1010405	IdentifierDecl	e_forward = 0		1010382	2					
ANR	1010406	IdentifierDeclType	int		1010382	0					
ANR	1010407	Identifier	e_forward		1010382	1					
ANR	1010408	AssignmentExpression	e_forward = 0		1010382	2		=			
ANR	1010409	Identifier	e_forward		1010382	0					
ANR	1010410	PrimaryExpression	0		1010382	1					
ANR	1010411	IdentifierDeclStatement	int pad_white ;	602:4:17451:17471	1010382	2	True				
ANR	1010412	IdentifierDecl	pad_white		1010382	0					
ANR	1010413	IdentifierDeclType	int		1010382	0					
ANR	1010414	Identifier	pad_white		1010382	1					
ANR	1010415	IdentifierDeclStatement	"byte * inp , * outp ;"	603:4:17477:17498	1010382	3	True				
ANR	1010416	IdentifierDecl	* inp		1010382	0					
ANR	1010417	IdentifierDeclType	byte *		1010382	0					
ANR	1010418	Identifier	inp		1010382	1					
ANR	1010419	IdentifierDecl	* outp		1010382	1					
ANR	1010420	IdentifierDeclType	byte *		1010382	0					
ANR	1010421	Identifier	outp		1010382	1					
ANR	1010422	IdentifierDeclStatement	int width = ds -> width ;	604:4:17504:17536	1010382	4	True				
ANR	1010423	IdentifierDecl	width = ds -> width		1010382	0					
ANR	1010424	IdentifierDeclType	int		1010382	0					
ANR	1010425	Identifier	width		1010382	1					
ANR	1010426	AssignmentExpression	width = ds -> width		1010382	2		=			
ANR	1010427	Identifier	width		1010382	0					
ANR	1010428	PtrMemberAccess	ds -> width		1010382	1					
ANR	1010429	Identifier	ds		1010382	0					
ANR	1010430	Identifier	width		1010382	1					
ANR	1010431	IdentifierDeclStatement	int awidth = ds -> awidth ;	605:4:17542:17575	1010382	5	True				
ANR	1010432	IdentifierDecl	awidth = ds -> awidth		1010382	0					
ANR	1010433	IdentifierDeclType	int		1010382	0					
ANR	1010434	Identifier	awidth		1010382	1					
ANR	1010435	AssignmentExpression	awidth = ds -> awidth		1010382	2		=			
ANR	1010436	Identifier	awidth		1010382	0					
ANR	1010437	PtrMemberAccess	ds -> awidth		1010382	1					
ANR	1010438	Identifier	ds		1010382	0					
ANR	1010439	Identifier	awidth		1010382	1					
ANR	1010440	IdentifierDeclStatement	int factor = ds -> factor ;	606:4:17581:17614	1010382	6	True				
ANR	1010441	IdentifierDecl	factor = ds -> factor		1010382	0					
ANR	1010442	IdentifierDeclType	int		1010382	0					
ANR	1010443	Identifier	factor		1010382	1					
ANR	1010444	AssignmentExpression	factor = ds -> factor		1010382	2		=			
ANR	1010445	Identifier	factor		1010382	0					
ANR	1010446	PtrMemberAccess	ds -> factor		1010382	1					
ANR	1010447	Identifier	ds		1010382	0					
ANR	1010448	Identifier	factor		1010382	1					
ANR	1010449	IdentifierDeclStatement	int * errors = ds -> errors + ( awidth + 3 ) * plane ;	607:4:17620:17672	1010382	7	True				
ANR	1010450	IdentifierDecl	* errors = ds -> errors + ( awidth + 3 ) * plane		1010382	0					
ANR	1010451	IdentifierDeclType	int *		1010382	0					
ANR	1010452	Identifier	errors		1010382	1					
ANR	1010453	AssignmentExpression	* errors = ds -> errors + ( awidth + 3 ) * plane		1010382	2		=			
ANR	1010454	Identifier	errors		1010382	0					
ANR	1010455	AdditiveExpression	ds -> errors + ( awidth + 3 ) * plane		1010382	1		+			
ANR	1010456	PtrMemberAccess	ds -> errors		1010382	0					
ANR	1010457	Identifier	ds		1010382	0					
ANR	1010458	Identifier	errors		1010382	1					
ANR	1010459	MultiplicativeExpression	( awidth + 3 ) * plane		1010382	1		*			
ANR	1010460	AdditiveExpression	awidth + 3		1010382	0		+			
ANR	1010461	Identifier	awidth		1010382	0					
ANR	1010462	PrimaryExpression	3		1010382	1					
ANR	1010463	Identifier	plane		1010382	1					
ANR	1010464	IdentifierDeclStatement	byte * mfs_data = ds -> mfs_data + ( awidth + 1 ) * plane ;	608:4:17678:17732	1010382	8	True				
ANR	1010465	IdentifierDecl	* mfs_data = ds -> mfs_data + ( awidth + 1 ) * plane		1010382	0					
ANR	1010466	IdentifierDeclType	byte *		1010382	0					
ANR	1010467	Identifier	mfs_data		1010382	1					
ANR	1010468	AssignmentExpression	* mfs_data = ds -> mfs_data + ( awidth + 1 ) * plane		1010382	2		=			
ANR	1010469	Identifier	mfs_data		1010382	0					
ANR	1010470	AdditiveExpression	ds -> mfs_data + ( awidth + 1 ) * plane		1010382	1		+			
ANR	1010471	PtrMemberAccess	ds -> mfs_data		1010382	0					
ANR	1010472	Identifier	ds		1010382	0					
ANR	1010473	Identifier	mfs_data		1010382	1					
ANR	1010474	MultiplicativeExpression	( awidth + 1 ) * plane		1010382	1		*			
ANR	1010475	AdditiveExpression	awidth + 1		1010382	0		+			
ANR	1010476	Identifier	awidth		1010382	0					
ANR	1010477	PrimaryExpression	1		1010382	1					
ANR	1010478	Identifier	plane		1010382	1					
ANR	1010479	IdentifierDeclStatement	const int threshold = factor * factor * 128 ;	609:4:17738:17778	1010382	9	True				
ANR	1010480	IdentifierDecl	threshold = factor * factor * 128		1010382	0					
ANR	1010481	IdentifierDeclType	const int		1010382	0					
ANR	1010482	Identifier	threshold		1010382	1					
ANR	1010483	AssignmentExpression	threshold = factor * factor * 128		1010382	2		=			
ANR	1010484	Identifier	threshold		1010382	0					
ANR	1010485	MultiplicativeExpression	factor * factor * 128		1010382	1		*			
ANR	1010486	Identifier	factor		1010382	0					
ANR	1010487	MultiplicativeExpression	factor * 128		1010382	1		*			
ANR	1010488	Identifier	factor		1010382	0					
ANR	1010489	PrimaryExpression	128		1010382	1					
ANR	1010490	IdentifierDeclStatement	const int max_value = factor * factor * 255 ;	610:4:17784:17824	1010382	10	True				
ANR	1010491	IdentifierDecl	max_value = factor * factor * 255		1010382	0					
ANR	1010492	IdentifierDeclType	const int		1010382	0					
ANR	1010493	Identifier	max_value		1010382	1					
ANR	1010494	AssignmentExpression	max_value = factor * factor * 255		1010382	2		=			
ANR	1010495	Identifier	max_value		1010382	0					
ANR	1010496	MultiplicativeExpression	factor * factor * 255		1010382	1		*			
ANR	1010497	Identifier	factor		1010382	0					
ANR	1010498	MultiplicativeExpression	factor * 255		1010382	1		*			
ANR	1010499	Identifier	factor		1010382	0					
ANR	1010500	PrimaryExpression	255		1010382	1					
ANR	1010501	ExpressionStatement	pad_white = ( awidth - width ) * factor	612:4:17831:17868	1010382	11	True				
ANR	1010502	AssignmentExpression	pad_white = ( awidth - width ) * factor		1010382	0		=			
ANR	1010503	Identifier	pad_white		1010382	0					
ANR	1010504	MultiplicativeExpression	( awidth - width ) * factor		1010382	1		*			
ANR	1010505	AdditiveExpression	awidth - width		1010382	0		-			
ANR	1010506	Identifier	awidth		1010382	0					
ANR	1010507	Identifier	width		1010382	1					
ANR	1010508	Identifier	factor		1010382	1					
ANR	1010509	IfStatement	if ( pad_white < 0 )		1010382	12					
ANR	1010510	Condition	pad_white < 0	613:8:17878:17890	1010382	0	True				
ANR	1010511	RelationalExpression	pad_white < 0		1010382	0		<			
ANR	1010512	Identifier	pad_white		1010382	0					
ANR	1010513	PrimaryExpression	0		1010382	1					
ANR	1010514	ExpressionStatement	pad_white = 0	614:8:17901:17914	1010382	1	True				
ANR	1010515	AssignmentExpression	pad_white = 0		1010382	0		=			
ANR	1010516	Identifier	pad_white		1010382	0					
ANR	1010517	PrimaryExpression	0		1010382	1					
ANR	1010518	IfStatement	if ( pad_white )		1010382	13					
ANR	1010519	Condition	pad_white	616:8:17925:17933	1010382	0	True				
ANR	1010520	Identifier	pad_white		1010382	0					
ANR	1010521	CompoundStatement		19:4:576:576	1010382	1					
ANR	1010522	ExpressionStatement	inp = in_buffer + width * factor	618:8:17950:17980	1010382	0	True				
ANR	1010523	AssignmentExpression	inp = in_buffer + width * factor		1010382	0		=			
ANR	1010524	Identifier	inp		1010382	0					
ANR	1010525	AdditiveExpression	in_buffer + width * factor		1010382	1		+			
ANR	1010526	Identifier	in_buffer		1010382	0					
ANR	1010527	MultiplicativeExpression	width * factor		1010382	1		*			
ANR	1010528	Identifier	width		1010382	0					
ANR	1010529	Identifier	factor		1010382	1					
ANR	1010530	ForStatement	for ( y = factor ; y > 0 ; y -- )		1010382	1					
ANR	1010531	ForInit	y = factor ;	619:13:17995:18005	1010382	0	True				
ANR	1010532	AssignmentExpression	y = factor		1010382	0		=			
ANR	1010533	Identifier	y		1010382	0					
ANR	1010534	Identifier	factor		1010382	1					
ANR	1010535	Condition	y > 0	619:25:18007:18011	1010382	1	True				
ANR	1010536	RelationalExpression	y > 0		1010382	0		>			
ANR	1010537	Identifier	y		1010382	0					
ANR	1010538	PrimaryExpression	0		1010382	1					
ANR	1010539	PostIncDecOperationExpression	y --	619:32:18014:18016	1010382	2	True				
ANR	1010540	Identifier	y		1010382	0					
ANR	1010541	IncDec	--		1010382	1					
ANR	1010542	CompoundStatement		22:8:663:663	1010382	3					
ANR	1010543	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	621:12:18041:18069	1010382	0	True				
ANR	1010544	CallExpression	"memset ( inp , 0xFF , pad_white )"		1010382	0					
ANR	1010545	Callee	memset		1010382	0					
ANR	1010546	Identifier	memset		1010382	0					
ANR	1010547	ArgumentList	inp		1010382	1					
ANR	1010548	Argument	inp		1010382	0					
ANR	1010549	Identifier	inp		1010382	0					
ANR	1010550	Argument	0xFF		1010382	1					
ANR	1010551	PrimaryExpression	0xFF		1010382	0					
ANR	1010552	Argument	pad_white		1010382	2					
ANR	1010553	Identifier	pad_white		1010382	0					
ANR	1010554	ExpressionStatement	inp += span	622:12:18083:18094	1010382	1	True				
ANR	1010555	AssignmentExpression	inp += span		1010382	0		+=			
ANR	1010556	Identifier	inp		1010382	0					
ANR	1010557	Identifier	span		1010382	1					
ANR	1010558	ExpressionStatement	inp = in_buffer	626:4:18117:18132	1010382	14	True				
ANR	1010559	AssignmentExpression	inp = in_buffer		1010382	0		=			
ANR	1010560	Identifier	inp		1010382	0					
ANR	1010561	Identifier	in_buffer		1010382	1					
ANR	1010562	IfStatement	if ( ( row & 1 ) == 0 )		1010382	15					
ANR	1010563	Condition	( row & 1 ) == 0	627:8:18142:18155	1010382	0	True				
ANR	1010564	EqualityExpression	( row & 1 ) == 0		1010382	0		==			
ANR	1010565	BitAndExpression	row & 1		1010382	0		&			
ANR	1010566	Identifier	row		1010382	0					
ANR	1010567	PrimaryExpression	1		1010382	1					
ANR	1010568	PrimaryExpression	0		1010382	1					
ANR	1010569	CompoundStatement		33:8:912:939	1010382	1					
ANR	1010570	IdentifierDeclStatement	const int back = span * factor - 1 ;	630:8:18233:18266	1010382	0	True				
ANR	1010571	IdentifierDecl	back = span * factor - 1		1010382	0					
ANR	1010572	IdentifierDeclType	const int		1010382	0					
ANR	1010573	Identifier	back		1010382	1					
ANR	1010574	AssignmentExpression	back = span * factor - 1		1010382	2		=			
ANR	1010575	Identifier	back		1010382	0					
ANR	1010576	AdditiveExpression	span * factor - 1		1010382	1		-			
ANR	1010577	MultiplicativeExpression	span * factor		1010382	0		*			
ANR	1010578	Identifier	span		1010382	0					
ANR	1010579	Identifier	factor		1010382	1					
ANR	1010580	PrimaryExpression	1		1010382	1					
ANR	1010581	IdentifierDeclStatement	"byte mfs , force_forward = 0 ;"	631:8:18276:18303	1010382	1	True				
ANR	1010582	IdentifierDecl	mfs		1010382	0					
ANR	1010583	IdentifierDeclType	byte		1010382	0					
ANR	1010584	Identifier	mfs		1010382	1					
ANR	1010585	IdentifierDecl	force_forward = 0		1010382	1					
ANR	1010586	IdentifierDeclType	byte		1010382	0					
ANR	1010587	Identifier	force_forward		1010382	1					
ANR	1010588	AssignmentExpression	force_forward = 0		1010382	2		=			
ANR	1010589	Identifier	force_forward		1010382	0					
ANR	1010590	PrimaryExpression	0		1010382	1					
ANR	1010591	ExpressionStatement	errors += 2	632:8:18313:18324	1010382	2	True				
ANR	1010592	AssignmentExpression	errors += 2		1010382	0		+=			
ANR	1010593	Identifier	errors		1010382	0					
ANR	1010594	PrimaryExpression	2		1010382	1					
ANR	1010595	ExpressionStatement	outp = inp	633:8:18334:18344	1010382	3	True				
ANR	1010596	AssignmentExpression	outp = inp		1010382	0		=			
ANR	1010597	Identifier	outp		1010382	0					
ANR	1010598	Identifier	inp		1010382	1					
ANR	1010599	ExpressionStatement	* mfs_data ++ = mfs_clear	634:8:18354:18377	1010382	4	True				
ANR	1010600	AssignmentExpression	* mfs_data ++ = mfs_clear		1010382	0		=			
ANR	1010601	UnaryOperationExpression	* mfs_data ++		1010382	0					
ANR	1010602	UnaryOperator	*		1010382	0					
ANR	1010603	PostIncDecOperationExpression	mfs_data ++		1010382	1					
ANR	1010604	Identifier	mfs_data		1010382	0					
ANR	1010605	IncDec	++		1010382	1					
ANR	1010606	Identifier	mfs_clear		1010382	1					
ANR	1010607	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1010382	5					
ANR	1010608	ForInit	x = awidth ;	635:13:18392:18402	1010382	0	True				
ANR	1010609	AssignmentExpression	x = awidth		1010382	0		=			
ANR	1010610	Identifier	x		1010382	0					
ANR	1010611	Identifier	awidth		1010382	1					
ANR	1010612	Condition	x > 0	635:25:18404:18408	1010382	1	True				
ANR	1010613	RelationalExpression	x > 0		1010382	0		>			
ANR	1010614	Identifier	x		1010382	0					
ANR	1010615	PrimaryExpression	0		1010382	1					
ANR	1010616	PostIncDecOperationExpression	x --	635:32:18411:18413	1010382	2	True				
ANR	1010617	Identifier	x		1010382	0					
ANR	1010618	IncDec	--		1010382	1					
ANR	1010619	CompoundStatement		38:8:1060:1060	1010382	3					
ANR	1010620	ExpressionStatement	value = e_forward + * errors	637:12:18438:18465	1010382	0	True				
ANR	1010621	AssignmentExpression	value = e_forward + * errors		1010382	0		=			
ANR	1010622	Identifier	value		1010382	0					
ANR	1010623	AdditiveExpression	e_forward + * errors		1010382	1		+			
ANR	1010624	Identifier	e_forward		1010382	0					
ANR	1010625	UnaryOperationExpression	* errors		1010382	1					
ANR	1010626	UnaryOperator	*		1010382	0					
ANR	1010627	Identifier	errors		1010382	1					
ANR	1010628	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1010382	1					
ANR	1010629	ForInit	xx = factor ;	638:17:18484:18495	1010382	0	True				
ANR	1010630	AssignmentExpression	xx = factor		1010382	0		=			
ANR	1010631	Identifier	xx		1010382	0					
ANR	1010632	Identifier	factor		1010382	1					
ANR	1010633	Condition	xx > 0	638:30:18497:18502	1010382	1	True				
ANR	1010634	RelationalExpression	xx > 0		1010382	0		>			
ANR	1010635	Identifier	xx		1010382	0					
ANR	1010636	PrimaryExpression	0		1010382	1					
ANR	1010637	PostIncDecOperationExpression	xx --	638:38:18505:18508	1010382	2	True				
ANR	1010638	Identifier	xx		1010382	0					
ANR	1010639	IncDec	--		1010382	1					
ANR	1010640	CompoundStatement		41:12:1159:1159	1010382	3					
ANR	1010641	ForStatement	for ( y = factor ; y > 0 ; y -- )		1010382	0					
ANR	1010642	ForInit	y = factor ;	640:21:18546:18556	1010382	0	True				
ANR	1010643	AssignmentExpression	y = factor		1010382	0		=			
ANR	1010644	Identifier	y		1010382	0					
ANR	1010645	Identifier	factor		1010382	1					
ANR	1010646	Condition	y > 0	640:33:18558:18562	1010382	1	True				
ANR	1010647	RelationalExpression	y > 0		1010382	0		>			
ANR	1010648	Identifier	y		1010382	0					
ANR	1010649	PrimaryExpression	0		1010382	1					
ANR	1010650	PostIncDecOperationExpression	y --	640:40:18565:18567	1010382	2	True				
ANR	1010651	Identifier	y		1010382	0					
ANR	1010652	IncDec	--		1010382	1					
ANR	1010653	CompoundStatement		43:16:1222:1222	1010382	3					
ANR	1010654	ExpressionStatement	value += * inp	642:20:18608:18621	1010382	0	True				
ANR	1010655	AssignmentExpression	value += * inp		1010382	0		+=			
ANR	1010656	Identifier	value		1010382	0					
ANR	1010657	UnaryOperationExpression	* inp		1010382	1					
ANR	1010658	UnaryOperator	*		1010382	0					
ANR	1010659	Identifier	inp		1010382	1					
ANR	1010660	ExpressionStatement	inp += span	643:20:18643:18654	1010382	1	True				
ANR	1010661	AssignmentExpression	inp += span		1010382	0		+=			
ANR	1010662	Identifier	inp		1010382	0					
ANR	1010663	Identifier	span		1010382	1					
ANR	1010664	ExpressionStatement	inp -= back	645:16:18690:18701	1010382	1	True				
ANR	1010665	AssignmentExpression	inp -= back		1010382	0		-=			
ANR	1010666	Identifier	inp		1010382	0					
ANR	1010667	Identifier	back		1010382	1					
ANR	1010668	ExpressionStatement	mfs = * mfs_data	647:12:18729:18744	1010382	2	True				
ANR	1010669	AssignmentExpression	mfs = * mfs_data		1010382	0		=			
ANR	1010670	Identifier	mfs		1010382	0					
ANR	1010671	UnaryOperationExpression	* mfs_data		1010382	1					
ANR	1010672	UnaryOperator	*		1010382	0					
ANR	1010673	Identifier	mfs_data		1010382	1					
ANR	1010674	ExpressionStatement	* mfs_data ++ = mfs_clear	648:12:18758:18781	1010382	3	True				
ANR	1010675	AssignmentExpression	* mfs_data ++ = mfs_clear		1010382	0		=			
ANR	1010676	UnaryOperationExpression	* mfs_data ++		1010382	0					
ANR	1010677	UnaryOperator	*		1010382	0					
ANR	1010678	PostIncDecOperationExpression	mfs_data ++		1010382	1					
ANR	1010679	Identifier	mfs_data		1010382	0					
ANR	1010680	IncDec	++		1010382	1					
ANR	1010681	Identifier	mfs_clear		1010382	1					
ANR	1010682	IfStatement	if ( ( mfs & mfs_force_off ) || force_forward )		1010382	4					
ANR	1010683	Condition	( mfs & mfs_force_off ) || force_forward	649:16:18799:18836	1010382	0	True				
ANR	1010684	OrExpression	( mfs & mfs_force_off ) || force_forward		1010382	0		||			
ANR	1010685	BitAndExpression	mfs & mfs_force_off		1010382	0		&			
ANR	1010686	Identifier	mfs		1010382	0					
ANR	1010687	Identifier	mfs_force_off		1010382	1					
ANR	1010688	Identifier	force_forward		1010382	1					
ANR	1010689	CompoundStatement		52:12:1487:1487	1010382	1					
ANR	1010690	ExpressionStatement	* outp ++ = 0	652:16:18919:18930	1010382	0	True				
ANR	1010691	AssignmentExpression	* outp ++ = 0		1010382	0		=			
ANR	1010692	UnaryOperationExpression	* outp ++		1010382	0					
ANR	1010693	UnaryOperator	*		1010382	0					
ANR	1010694	PostIncDecOperationExpression	outp ++		1010382	1					
ANR	1010695	Identifier	outp		1010382	0					
ANR	1010696	IncDec	++		1010382	1					
ANR	1010697	PrimaryExpression	0		1010382	1					
ANR	1010698	ExpressionStatement	force_forward = 0	653:16:18948:18965	1010382	1	True				
ANR	1010699	AssignmentExpression	force_forward = 0		1010382	0		=			
ANR	1010700	Identifier	force_forward		1010382	0					
ANR	1010701	PrimaryExpression	0		1010382	1					
ANR	1010702	ElseStatement	else		1010382	0					
ANR	1010703	IfStatement	if ( value < threshold )		1010382	0					
ANR	1010704	Condition	value < threshold	655:21:19002:19018	1010382	0	True				
ANR	1010705	RelationalExpression	value < threshold		1010382	0		<			
ANR	1010706	Identifier	value		1010382	0					
ANR	1010707	Identifier	threshold		1010382	1					
ANR	1010708	CompoundStatement		58:12:1669:1669	1010382	1					
ANR	1010709	ExpressionStatement	* outp ++ = 0	658:16:19096:19107	1010382	0	True				
ANR	1010710	AssignmentExpression	* outp ++ = 0		1010382	0		=			
ANR	1010711	UnaryOperationExpression	* outp ++		1010382	0					
ANR	1010712	UnaryOperator	*		1010382	0					
ANR	1010713	PostIncDecOperationExpression	outp ++		1010382	1					
ANR	1010714	Identifier	outp		1010382	0					
ANR	1010715	IncDec	++		1010382	1					
ANR	1010716	PrimaryExpression	0		1010382	1					
ANR	1010717	IfStatement	if ( ( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 ) )		1010382	1					
ANR	1010718	Condition	( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 )	659:20:19129:19240	1010382	0	True				
ANR	1010719	EqualityExpression	( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 )		1010382	0		!=			
ANR	1010720	BitAndExpression	mfs & ( mfs_above_is_0 | mfs_above_left_is_0 )		1010382	0		&			
ANR	1010721	Identifier	mfs		1010382	0					
ANR	1010722	InclusiveOrExpression	mfs_above_is_0 | mfs_above_left_is_0		1010382	1		|			
ANR	1010723	Identifier	mfs_above_is_0		1010382	0					
ANR	1010724	Identifier	mfs_above_left_is_0		1010382	1					
ANR	1010725	InclusiveOrExpression	mfs_above_is_0 | mfs_above_left_is_0		1010382	1		|			
ANR	1010726	Identifier	mfs_above_is_0		1010382	0					
ANR	1010727	Identifier	mfs_above_left_is_0		1010382	1					
ANR	1010728	CompoundStatement		63:16:1895:1895	1010382	1					
ANR	1010729	ExpressionStatement	mfs_data [ - 2 ] |= mfs_force_off	664:20:19387:19416	1010382	0	True				
ANR	1010730	AssignmentExpression	mfs_data [ - 2 ] |= mfs_force_off		1010382	0		|=			
ANR	1010731	ArrayIndexing	mfs_data [ - 2 ]		1010382	0					
ANR	1010732	Identifier	mfs_data		1010382	0					
ANR	1010733	UnaryOperationExpression	- 2		1010382	1					
ANR	1010734	UnaryOperator	-		1010382	0					
ANR	1010735	PrimaryExpression	2		1010382	1					
ANR	1010736	Identifier	mfs_force_off		1010382	1					
ANR	1010737	ExpressionStatement	mfs_data [ - 1 ] |= mfs_force_off	665:20:19438:19467	1010382	1	True				
ANR	1010738	AssignmentExpression	mfs_data [ - 1 ] |= mfs_force_off		1010382	0		|=			
ANR	1010739	ArrayIndexing	mfs_data [ - 1 ]		1010382	0					
ANR	1010740	Identifier	mfs_data		1010382	0					
ANR	1010741	UnaryOperationExpression	- 1		1010382	1					
ANR	1010742	UnaryOperator	-		1010382	0					
ANR	1010743	PrimaryExpression	1		1010382	1					
ANR	1010744	Identifier	mfs_force_off		1010382	1					
ANR	1010745	ExpressionStatement	force_forward = 1	666:20:19489:19506	1010382	2	True				
ANR	1010746	AssignmentExpression	force_forward = 1		1010382	0		=			
ANR	1010747	Identifier	force_forward		1010382	0					
ANR	1010748	PrimaryExpression	1		1010382	1					
ANR	1010749	ElseStatement	else		1010382	0					
ANR	1010750	CompoundStatement		71:16:2199:2199	1010382	0					
ANR	1010751	ExpressionStatement	mfs_data [ - 2 ] |= mfs_above_is_0	672:20:19695:19725	1010382	0	True				
ANR	1010752	AssignmentExpression	mfs_data [ - 2 ] |= mfs_above_is_0		1010382	0		|=			
ANR	1010753	ArrayIndexing	mfs_data [ - 2 ]		1010382	0					
ANR	1010754	Identifier	mfs_data		1010382	0					
ANR	1010755	UnaryOperationExpression	- 2		1010382	1					
ANR	1010756	UnaryOperator	-		1010382	0					
ANR	1010757	PrimaryExpression	2		1010382	1					
ANR	1010758	Identifier	mfs_above_is_0		1010382	1					
ANR	1010759	ExpressionStatement	mfs_data [ - 1 ] |= mfs_above_left_is_0	673:20:19747:19782	1010382	1	True				
ANR	1010760	AssignmentExpression	mfs_data [ - 1 ] |= mfs_above_left_is_0		1010382	0		|=			
ANR	1010761	ArrayIndexing	mfs_data [ - 1 ]		1010382	0					
ANR	1010762	Identifier	mfs_data		1010382	0					
ANR	1010763	UnaryOperationExpression	- 1		1010382	1					
ANR	1010764	UnaryOperator	-		1010382	0					
ANR	1010765	PrimaryExpression	1		1010382	1					
ANR	1010766	Identifier	mfs_above_left_is_0		1010382	1					
ANR	1010767	ElseStatement	else		1010382	0					
ANR	1010768	CompoundStatement		79:12:2481:2481	1010382	0					
ANR	1010769	ExpressionStatement	* outp ++ = 1	678:16:19863:19874	1010382	0	True				
ANR	1010770	AssignmentExpression	* outp ++ = 1		1010382	0		=			
ANR	1010771	UnaryOperationExpression	* outp ++		1010382	0					
ANR	1010772	UnaryOperator	*		1010382	0					
ANR	1010773	PostIncDecOperationExpression	outp ++		1010382	1					
ANR	1010774	Identifier	outp		1010382	0					
ANR	1010775	IncDec	++		1010382	1					
ANR	1010776	PrimaryExpression	1		1010382	1					
ANR	1010777	ExpressionStatement	value -= max_value	679:16:19892:19910	1010382	1	True				
ANR	1010778	AssignmentExpression	value -= max_value		1010382	0		-=			
ANR	1010779	Identifier	value		1010382	0					
ANR	1010780	Identifier	max_value		1010382	1					
ANR	1010781	ExpressionStatement	e_forward = value * 7 / 16	681:12:19938:19963	1010382	5	True				
ANR	1010782	AssignmentExpression	e_forward = value * 7 / 16		1010382	0		=			
ANR	1010783	Identifier	e_forward		1010382	0					
ANR	1010784	MultiplicativeExpression	value * 7 / 16		1010382	1		*			
ANR	1010785	Identifier	value		1010382	0					
ANR	1010786	MultiplicativeExpression	7 / 16		1010382	1		/			
ANR	1010787	PrimaryExpression	7		1010382	0					
ANR	1010788	PrimaryExpression	16		1010382	1					
ANR	1010789	ExpressionStatement	e_downleft = value * 3 / 16	682:12:19977:20002	1010382	6	True				
ANR	1010790	AssignmentExpression	e_downleft = value * 3 / 16		1010382	0		=			
ANR	1010791	Identifier	e_downleft		1010382	0					
ANR	1010792	MultiplicativeExpression	value * 3 / 16		1010382	1		*			
ANR	1010793	Identifier	value		1010382	0					
ANR	1010794	MultiplicativeExpression	3 / 16		1010382	1		/			
ANR	1010795	PrimaryExpression	3		1010382	0					
ANR	1010796	PrimaryExpression	16		1010382	1					
ANR	1010797	ExpressionStatement	e_down = value * 5 / 16	683:12:20016:20041	1010382	7	True				
ANR	1010798	AssignmentExpression	e_down = value * 5 / 16		1010382	0		=			
ANR	1010799	Identifier	e_down		1010382	0					
ANR	1010800	MultiplicativeExpression	value * 5 / 16		1010382	1		*			
ANR	1010801	Identifier	value		1010382	0					
ANR	1010802	MultiplicativeExpression	5 / 16		1010382	1		/			
ANR	1010803	PrimaryExpression	5		1010382	0					
ANR	1010804	PrimaryExpression	16		1010382	1					
ANR	1010805	ExpressionStatement	value -= e_forward + e_downleft + e_down	684:12:20055:20099	1010382	8	True				
ANR	1010806	AssignmentExpression	value -= e_forward + e_downleft + e_down		1010382	0		-=			
ANR	1010807	Identifier	value		1010382	0					
ANR	1010808	AdditiveExpression	e_forward + e_downleft + e_down		1010382	1		+			
ANR	1010809	Identifier	e_forward		1010382	0					
ANR	1010810	AdditiveExpression	e_downleft + e_down		1010382	1		+			
ANR	1010811	Identifier	e_downleft		1010382	0					
ANR	1010812	Identifier	e_down		1010382	1					
ANR	1010813	ExpressionStatement	errors [ - 2 ] += e_downleft	685:12:20113:20137	1010382	9	True				
ANR	1010814	AssignmentExpression	errors [ - 2 ] += e_downleft		1010382	0		+=			
ANR	1010815	ArrayIndexing	errors [ - 2 ]		1010382	0					
ANR	1010816	Identifier	errors		1010382	0					
ANR	1010817	UnaryOperationExpression	- 2		1010382	1					
ANR	1010818	UnaryOperator	-		1010382	0					
ANR	1010819	PrimaryExpression	2		1010382	1					
ANR	1010820	Identifier	e_downleft		1010382	1					
ANR	1010821	ExpressionStatement	errors [ - 1 ] += e_down	686:12:20151:20171	1010382	10	True				
ANR	1010822	AssignmentExpression	errors [ - 1 ] += e_down		1010382	0		+=			
ANR	1010823	ArrayIndexing	errors [ - 1 ]		1010382	0					
ANR	1010824	Identifier	errors		1010382	0					
ANR	1010825	UnaryOperationExpression	- 1		1010382	1					
ANR	1010826	UnaryOperator	-		1010382	0					
ANR	1010827	PrimaryExpression	1		1010382	1					
ANR	1010828	Identifier	e_down		1010382	1					
ANR	1010829	ExpressionStatement	* errors ++ = value	687:12:20185:20204	1010382	11	True				
ANR	1010830	AssignmentExpression	* errors ++ = value		1010382	0		=			
ANR	1010831	UnaryOperationExpression	* errors ++		1010382	0					
ANR	1010832	UnaryOperator	*		1010382	0					
ANR	1010833	PostIncDecOperationExpression	errors ++		1010382	1					
ANR	1010834	Identifier	errors		1010382	0					
ANR	1010835	IncDec	++		1010382	1					
ANR	1010836	Identifier	value		1010382	1					
ANR	1010837	ExpressionStatement	outp -= awidth	689:8:20224:20238	1010382	6	True				
ANR	1010838	AssignmentExpression	outp -= awidth		1010382	0		-=			
ANR	1010839	Identifier	outp		1010382	0					
ANR	1010840	Identifier	awidth		1010382	1					
ANR	1010841	ElseStatement	else		1010382	0					
ANR	1010842	CompoundStatement		97:8:3010:3037	1010382	0					
ANR	1010843	IdentifierDeclStatement	const int back = span * factor + 1 ;	694:8:20330:20364	1010382	0	True				
ANR	1010844	IdentifierDecl	back = span * factor + 1		1010382	0					
ANR	1010845	IdentifierDeclType	const int		1010382	0					
ANR	1010846	Identifier	back		1010382	1					
ANR	1010847	AssignmentExpression	back = span * factor + 1		1010382	2		=			
ANR	1010848	Identifier	back		1010382	0					
ANR	1010849	AdditiveExpression	span * factor + 1		1010382	1		+			
ANR	1010850	MultiplicativeExpression	span * factor		1010382	0		*			
ANR	1010851	Identifier	span		1010382	0					
ANR	1010852	Identifier	factor		1010382	1					
ANR	1010853	PrimaryExpression	1		1010382	1					
ANR	1010854	IdentifierDeclStatement	"byte mfs , force_forward = 0 ;"	695:8:20374:20401	1010382	1	True				
ANR	1010855	IdentifierDecl	mfs		1010382	0					
ANR	1010856	IdentifierDeclType	byte		1010382	0					
ANR	1010857	Identifier	mfs		1010382	1					
ANR	1010858	IdentifierDecl	force_forward = 0		1010382	1					
ANR	1010859	IdentifierDeclType	byte		1010382	0					
ANR	1010860	Identifier	force_forward		1010382	1					
ANR	1010861	AssignmentExpression	force_forward = 0		1010382	2		=			
ANR	1010862	Identifier	force_forward		1010382	0					
ANR	1010863	PrimaryExpression	0		1010382	1					
ANR	1010864	ExpressionStatement	errors += awidth	696:8:20411:20427	1010382	2	True				
ANR	1010865	AssignmentExpression	errors += awidth		1010382	0		+=			
ANR	1010866	Identifier	errors		1010382	0					
ANR	1010867	Identifier	awidth		1010382	1					
ANR	1010868	ExpressionStatement	mfs_data += awidth	697:8:20437:20455	1010382	3	True				
ANR	1010869	AssignmentExpression	mfs_data += awidth		1010382	0		+=			
ANR	1010870	Identifier	mfs_data		1010382	0					
ANR	1010871	Identifier	awidth		1010382	1					
ANR	1010872	ExpressionStatement	inp += awidth * factor - 1	698:8:20465:20487	1010382	4	True				
ANR	1010873	AssignmentExpression	inp += awidth * factor - 1		1010382	0		+=			
ANR	1010874	Identifier	inp		1010382	0					
ANR	1010875	AdditiveExpression	awidth * factor - 1		1010382	1		-			
ANR	1010876	MultiplicativeExpression	awidth * factor		1010382	0		*			
ANR	1010877	Identifier	awidth		1010382	0					
ANR	1010878	Identifier	factor		1010382	1					
ANR	1010879	PrimaryExpression	1		1010382	1					
ANR	1010880	ExpressionStatement	outp = inp	699:8:20497:20507	1010382	5	True				
ANR	1010881	AssignmentExpression	outp = inp		1010382	0		=			
ANR	1010882	Identifier	outp		1010382	0					
ANR	1010883	Identifier	inp		1010382	1					
ANR	1010884	ExpressionStatement	* mfs_data -- = mfs_clear	700:8:20517:20540	1010382	6	True				
ANR	1010885	AssignmentExpression	* mfs_data -- = mfs_clear		1010382	0		=			
ANR	1010886	UnaryOperationExpression	* mfs_data --		1010382	0					
ANR	1010887	UnaryOperator	*		1010382	0					
ANR	1010888	PostIncDecOperationExpression	mfs_data --		1010382	1					
ANR	1010889	Identifier	mfs_data		1010382	0					
ANR	1010890	IncDec	--		1010382	1					
ANR	1010891	Identifier	mfs_clear		1010382	1					
ANR	1010892	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1010382	7					
ANR	1010893	ForInit	x = awidth ;	701:13:20555:20565	1010382	0	True				
ANR	1010894	AssignmentExpression	x = awidth		1010382	0		=			
ANR	1010895	Identifier	x		1010382	0					
ANR	1010896	Identifier	awidth		1010382	1					
ANR	1010897	Condition	x > 0	701:25:20567:20571	1010382	1	True				
ANR	1010898	RelationalExpression	x > 0		1010382	0		>			
ANR	1010899	Identifier	x		1010382	0					
ANR	1010900	PrimaryExpression	0		1010382	1					
ANR	1010901	PostIncDecOperationExpression	x --	701:32:20574:20576	1010382	2	True				
ANR	1010902	Identifier	x		1010382	0					
ANR	1010903	IncDec	--		1010382	1					
ANR	1010904	CompoundStatement		104:8:3223:3223	1010382	3					
ANR	1010905	ExpressionStatement	value = e_forward + * errors	703:12:20601:20628	1010382	0	True				
ANR	1010906	AssignmentExpression	value = e_forward + * errors		1010382	0		=			
ANR	1010907	Identifier	value		1010382	0					
ANR	1010908	AdditiveExpression	e_forward + * errors		1010382	1		+			
ANR	1010909	Identifier	e_forward		1010382	0					
ANR	1010910	UnaryOperationExpression	* errors		1010382	1					
ANR	1010911	UnaryOperator	*		1010382	0					
ANR	1010912	Identifier	errors		1010382	1					
ANR	1010913	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1010382	1					
ANR	1010914	ForInit	xx = factor ;	704:17:20647:20658	1010382	0	True				
ANR	1010915	AssignmentExpression	xx = factor		1010382	0		=			
ANR	1010916	Identifier	xx		1010382	0					
ANR	1010917	Identifier	factor		1010382	1					
ANR	1010918	Condition	xx > 0	704:30:20660:20665	1010382	1	True				
ANR	1010919	RelationalExpression	xx > 0		1010382	0		>			
ANR	1010920	Identifier	xx		1010382	0					
ANR	1010921	PrimaryExpression	0		1010382	1					
ANR	1010922	PostIncDecOperationExpression	xx --	704:38:20668:20671	1010382	2	True				
ANR	1010923	Identifier	xx		1010382	0					
ANR	1010924	IncDec	--		1010382	1					
ANR	1010925	CompoundStatement		107:12:3322:3322	1010382	3					
ANR	1010926	ForStatement	for ( y = factor ; y > 0 ; y -- )		1010382	0					
ANR	1010927	ForInit	y = factor ;	706:21:20709:20719	1010382	0	True				
ANR	1010928	AssignmentExpression	y = factor		1010382	0		=			
ANR	1010929	Identifier	y		1010382	0					
ANR	1010930	Identifier	factor		1010382	1					
ANR	1010931	Condition	y > 0	706:33:20721:20725	1010382	1	True				
ANR	1010932	RelationalExpression	y > 0		1010382	0		>			
ANR	1010933	Identifier	y		1010382	0					
ANR	1010934	PrimaryExpression	0		1010382	1					
ANR	1010935	PostIncDecOperationExpression	y --	706:40:20728:20730	1010382	2	True				
ANR	1010936	Identifier	y		1010382	0					
ANR	1010937	IncDec	--		1010382	1					
ANR	1010938	CompoundStatement		109:16:3385:3385	1010382	3					
ANR	1010939	ExpressionStatement	value += * inp	708:20:20771:20784	1010382	0	True				
ANR	1010940	AssignmentExpression	value += * inp		1010382	0		+=			
ANR	1010941	Identifier	value		1010382	0					
ANR	1010942	UnaryOperationExpression	* inp		1010382	1					
ANR	1010943	UnaryOperator	*		1010382	0					
ANR	1010944	Identifier	inp		1010382	1					
ANR	1010945	ExpressionStatement	inp += span	709:20:20806:20817	1010382	1	True				
ANR	1010946	AssignmentExpression	inp += span		1010382	0		+=			
ANR	1010947	Identifier	inp		1010382	0					
ANR	1010948	Identifier	span		1010382	1					
ANR	1010949	ExpressionStatement	inp -= back	711:16:20853:20864	1010382	1	True				
ANR	1010950	AssignmentExpression	inp -= back		1010382	0		-=			
ANR	1010951	Identifier	inp		1010382	0					
ANR	1010952	Identifier	back		1010382	1					
ANR	1010953	ExpressionStatement	mfs = * mfs_data	713:12:20892:20907	1010382	2	True				
ANR	1010954	AssignmentExpression	mfs = * mfs_data		1010382	0		=			
ANR	1010955	Identifier	mfs		1010382	0					
ANR	1010956	UnaryOperationExpression	* mfs_data		1010382	1					
ANR	1010957	UnaryOperator	*		1010382	0					
ANR	1010958	Identifier	mfs_data		1010382	1					
ANR	1010959	ExpressionStatement	* mfs_data -- = mfs_clear	714:12:20921:20944	1010382	3	True				
ANR	1010960	AssignmentExpression	* mfs_data -- = mfs_clear		1010382	0		=			
ANR	1010961	UnaryOperationExpression	* mfs_data --		1010382	0					
ANR	1010962	UnaryOperator	*		1010382	0					
ANR	1010963	PostIncDecOperationExpression	mfs_data --		1010382	1					
ANR	1010964	Identifier	mfs_data		1010382	0					
ANR	1010965	IncDec	--		1010382	1					
ANR	1010966	Identifier	mfs_clear		1010382	1					
ANR	1010967	IfStatement	if ( ( mfs & mfs_force_off ) || force_forward )		1010382	4					
ANR	1010968	Condition	( mfs & mfs_force_off ) || force_forward	715:16:20962:20999	1010382	0	True				
ANR	1010969	OrExpression	( mfs & mfs_force_off ) || force_forward		1010382	0		||			
ANR	1010970	BitAndExpression	mfs & mfs_force_off		1010382	0		&			
ANR	1010971	Identifier	mfs		1010382	0					
ANR	1010972	Identifier	mfs_force_off		1010382	1					
ANR	1010973	Identifier	force_forward		1010382	1					
ANR	1010974	CompoundStatement		118:12:3650:3650	1010382	1					
ANR	1010975	ExpressionStatement	* outp -- = 0	718:16:21082:21093	1010382	0	True				
ANR	1010976	AssignmentExpression	* outp -- = 0		1010382	0		=			
ANR	1010977	UnaryOperationExpression	* outp --		1010382	0					
ANR	1010978	UnaryOperator	*		1010382	0					
ANR	1010979	PostIncDecOperationExpression	outp --		1010382	1					
ANR	1010980	Identifier	outp		1010382	0					
ANR	1010981	IncDec	--		1010382	1					
ANR	1010982	PrimaryExpression	0		1010382	1					
ANR	1010983	ExpressionStatement	force_forward = 0	719:16:21111:21128	1010382	1	True				
ANR	1010984	AssignmentExpression	force_forward = 0		1010382	0		=			
ANR	1010985	Identifier	force_forward		1010382	0					
ANR	1010986	PrimaryExpression	0		1010382	1					
ANR	1010987	ElseStatement	else		1010382	0					
ANR	1010988	IfStatement	if ( value < threshold )		1010382	0					
ANR	1010989	Condition	value < threshold	721:21:21165:21181	1010382	0	True				
ANR	1010990	RelationalExpression	value < threshold		1010382	0		<			
ANR	1010991	Identifier	value		1010382	0					
ANR	1010992	Identifier	threshold		1010382	1					
ANR	1010993	CompoundStatement		124:12:3832:3832	1010382	1					
ANR	1010994	ExpressionStatement	* outp -- = 0	723:16:21214:21225	1010382	0	True				
ANR	1010995	AssignmentExpression	* outp -- = 0		1010382	0		=			
ANR	1010996	UnaryOperationExpression	* outp --		1010382	0					
ANR	1010997	UnaryOperator	*		1010382	0					
ANR	1010998	PostIncDecOperationExpression	outp --		1010382	1					
ANR	1010999	Identifier	outp		1010382	0					
ANR	1011000	IncDec	--		1010382	1					
ANR	1011001	PrimaryExpression	0		1010382	1					
ANR	1011002	IfStatement	if ( ( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 ) )		1010382	1					
ANR	1011003	Condition	( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 )	724:20:21247:21358	1010382	0	True				
ANR	1011004	EqualityExpression	( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 )		1010382	0		!=			
ANR	1011005	BitAndExpression	mfs & ( mfs_above_is_0 | mfs_above_left_is_0 )		1010382	0		&			
ANR	1011006	Identifier	mfs		1010382	0					
ANR	1011007	InclusiveOrExpression	mfs_above_is_0 | mfs_above_left_is_0		1010382	1		|			
ANR	1011008	Identifier	mfs_above_is_0		1010382	0					
ANR	1011009	Identifier	mfs_above_left_is_0		1010382	1					
ANR	1011010	InclusiveOrExpression	mfs_above_is_0 | mfs_above_left_is_0		1010382	1		|			
ANR	1011011	Identifier	mfs_above_is_0		1010382	0					
ANR	1011012	Identifier	mfs_above_left_is_0		1010382	1					
ANR	1011013	CompoundStatement		128:16:4013:4013	1010382	1					
ANR	1011014	ExpressionStatement	mfs_data [ 1 ] |= mfs_force_off	729:20:21505:21533	1010382	0	True				
ANR	1011015	AssignmentExpression	mfs_data [ 1 ] |= mfs_force_off		1010382	0		|=			
ANR	1011016	ArrayIndexing	mfs_data [ 1 ]		1010382	0					
ANR	1011017	Identifier	mfs_data		1010382	0					
ANR	1011018	PrimaryExpression	1		1010382	1					
ANR	1011019	Identifier	mfs_force_off		1010382	1					
ANR	1011020	ExpressionStatement	mfs_data [ 2 ] |= mfs_force_off	730:20:21555:21583	1010382	1	True				
ANR	1011021	AssignmentExpression	mfs_data [ 2 ] |= mfs_force_off		1010382	0		|=			
ANR	1011022	ArrayIndexing	mfs_data [ 2 ]		1010382	0					
ANR	1011023	Identifier	mfs_data		1010382	0					
ANR	1011024	PrimaryExpression	2		1010382	1					
ANR	1011025	Identifier	mfs_force_off		1010382	1					
ANR	1011026	ExpressionStatement	force_forward = 1	731:20:21605:21622	1010382	2	True				
ANR	1011027	AssignmentExpression	force_forward = 1		1010382	0		=			
ANR	1011028	Identifier	force_forward		1010382	0					
ANR	1011029	PrimaryExpression	1		1010382	1					
ANR	1011030	ElseStatement	else		1010382	0					
ANR	1011031	CompoundStatement		136:16:4315:4315	1010382	0					
ANR	1011032	ExpressionStatement	mfs_data [ 1 ] |= mfs_above_is_0	737:20:21811:21840	1010382	0	True				
ANR	1011033	AssignmentExpression	mfs_data [ 1 ] |= mfs_above_is_0		1010382	0		|=			
ANR	1011034	ArrayIndexing	mfs_data [ 1 ]		1010382	0					
ANR	1011035	Identifier	mfs_data		1010382	0					
ANR	1011036	PrimaryExpression	1		1010382	1					
ANR	1011037	Identifier	mfs_above_is_0		1010382	1					
ANR	1011038	ExpressionStatement	mfs_data [ 2 ] |= mfs_above_left_is_0	738:20:21862:21896	1010382	1	True				
ANR	1011039	AssignmentExpression	mfs_data [ 2 ] |= mfs_above_left_is_0		1010382	0		|=			
ANR	1011040	ArrayIndexing	mfs_data [ 2 ]		1010382	0					
ANR	1011041	Identifier	mfs_data		1010382	0					
ANR	1011042	PrimaryExpression	2		1010382	1					
ANR	1011043	Identifier	mfs_above_left_is_0		1010382	1					
ANR	1011044	ElseStatement	else		1010382	0					
ANR	1011045	CompoundStatement		144:12:4595:4595	1010382	0					
ANR	1011046	ExpressionStatement	* outp -- = 1	743:16:21977:21988	1010382	0	True				
ANR	1011047	AssignmentExpression	* outp -- = 1		1010382	0		=			
ANR	1011048	UnaryOperationExpression	* outp --		1010382	0					
ANR	1011049	UnaryOperator	*		1010382	0					
ANR	1011050	PostIncDecOperationExpression	outp --		1010382	1					
ANR	1011051	Identifier	outp		1010382	0					
ANR	1011052	IncDec	--		1010382	1					
ANR	1011053	PrimaryExpression	1		1010382	1					
ANR	1011054	ExpressionStatement	value -= max_value	744:16:22006:22024	1010382	1	True				
ANR	1011055	AssignmentExpression	value -= max_value		1010382	0		-=			
ANR	1011056	Identifier	value		1010382	0					
ANR	1011057	Identifier	max_value		1010382	1					
ANR	1011058	ExpressionStatement	e_forward = value * 7 / 16	746:12:22052:22077	1010382	5	True				
ANR	1011059	AssignmentExpression	e_forward = value * 7 / 16		1010382	0		=			
ANR	1011060	Identifier	e_forward		1010382	0					
ANR	1011061	MultiplicativeExpression	value * 7 / 16		1010382	1		*			
ANR	1011062	Identifier	value		1010382	0					
ANR	1011063	MultiplicativeExpression	7 / 16		1010382	1		/			
ANR	1011064	PrimaryExpression	7		1010382	0					
ANR	1011065	PrimaryExpression	16		1010382	1					
ANR	1011066	ExpressionStatement	e_downleft = value * 3 / 16	747:12:22091:22116	1010382	6	True				
ANR	1011067	AssignmentExpression	e_downleft = value * 3 / 16		1010382	0		=			
ANR	1011068	Identifier	e_downleft		1010382	0					
ANR	1011069	MultiplicativeExpression	value * 3 / 16		1010382	1		*			
ANR	1011070	Identifier	value		1010382	0					
ANR	1011071	MultiplicativeExpression	3 / 16		1010382	1		/			
ANR	1011072	PrimaryExpression	3		1010382	0					
ANR	1011073	PrimaryExpression	16		1010382	1					
ANR	1011074	ExpressionStatement	e_down = value * 5 / 16	748:12:22130:22155	1010382	7	True				
ANR	1011075	AssignmentExpression	e_down = value * 5 / 16		1010382	0		=			
ANR	1011076	Identifier	e_down		1010382	0					
ANR	1011077	MultiplicativeExpression	value * 5 / 16		1010382	1		*			
ANR	1011078	Identifier	value		1010382	0					
ANR	1011079	MultiplicativeExpression	5 / 16		1010382	1		/			
ANR	1011080	PrimaryExpression	5		1010382	0					
ANR	1011081	PrimaryExpression	16		1010382	1					
ANR	1011082	ExpressionStatement	value -= e_forward + e_downleft + e_down	749:12:22169:22213	1010382	8	True				
ANR	1011083	AssignmentExpression	value -= e_forward + e_downleft + e_down		1010382	0		-=			
ANR	1011084	Identifier	value		1010382	0					
ANR	1011085	AdditiveExpression	e_forward + e_downleft + e_down		1010382	1		+			
ANR	1011086	Identifier	e_forward		1010382	0					
ANR	1011087	AdditiveExpression	e_downleft + e_down		1010382	1		+			
ANR	1011088	Identifier	e_downleft		1010382	0					
ANR	1011089	Identifier	e_down		1010382	1					
ANR	1011090	ExpressionStatement	errors [ 2 ] += e_downleft	750:12:22227:22250	1010382	9	True				
ANR	1011091	AssignmentExpression	errors [ 2 ] += e_downleft		1010382	0		+=			
ANR	1011092	ArrayIndexing	errors [ 2 ]		1010382	0					
ANR	1011093	Identifier	errors		1010382	0					
ANR	1011094	PrimaryExpression	2		1010382	1					
ANR	1011095	Identifier	e_downleft		1010382	1					
ANR	1011096	ExpressionStatement	errors [ 1 ] += e_down	751:12:22264:22283	1010382	10	True				
ANR	1011097	AssignmentExpression	errors [ 1 ] += e_down		1010382	0		+=			
ANR	1011098	ArrayIndexing	errors [ 1 ]		1010382	0					
ANR	1011099	Identifier	errors		1010382	0					
ANR	1011100	PrimaryExpression	1		1010382	1					
ANR	1011101	Identifier	e_down		1010382	1					
ANR	1011102	ExpressionStatement	* errors -- = value	752:12:22297:22316	1010382	11	True				
ANR	1011103	AssignmentExpression	* errors -- = value		1010382	0		=			
ANR	1011104	UnaryOperationExpression	* errors --		1010382	0					
ANR	1011105	UnaryOperator	*		1010382	0					
ANR	1011106	PostIncDecOperationExpression	errors --		1010382	1					
ANR	1011107	Identifier	errors		1010382	0					
ANR	1011108	IncDec	--		1010382	1					
ANR	1011109	Identifier	value		1010382	1					
ANR	1011110	ExpressionStatement	outp ++	754:8:22336:22342	1010382	8	True				
ANR	1011111	PostIncDecOperationExpression	outp ++		1010382	0					
ANR	1011112	Identifier	outp		1010382	0					
ANR	1011113	IncDec	++		1010382	1					
ANR	1011114	ExpressionStatement	"pack_8to1 ( out_buffer , outp , awidth )"	756:4:22354:22389	1010382	16	True				
ANR	1011115	CallExpression	"pack_8to1 ( out_buffer , outp , awidth )"		1010382	0					
ANR	1011116	Callee	pack_8to1		1010382	0					
ANR	1011117	Identifier	pack_8to1		1010382	0					
ANR	1011118	ArgumentList	out_buffer		1010382	1					
ANR	1011119	Argument	out_buffer		1010382	0					
ANR	1011120	Identifier	out_buffer		1010382	0					
ANR	1011121	Argument	outp		1010382	1					
ANR	1011122	Identifier	outp		1010382	0					
ANR	1011123	Argument	awidth		1010382	2					
ANR	1011124	Identifier	awidth		1010382	0					
ANR	1011125	ReturnType	static void		1010382	1					
ANR	1011126	Identifier	down_core_mfs		1010382	2					
ANR	1011127	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1010382	3					
ANR	1011128	Parameter	gx_downscaler_t * ds	593:26:17086:17104	1010382	0	True				
ANR	1011129	ParameterType	gx_downscaler_t *		1010382	0					
ANR	1011130	Identifier	ds		1010382	1					
ANR	1011131	Parameter	byte * out_buffer	594:26:17133:17159	1010382	1	True				
ANR	1011132	ParameterType	byte *		1010382	0					
ANR	1011133	Identifier	out_buffer		1010382	1					
ANR	1011134	Parameter	byte * in_buffer	595:26:17188:17213	1010382	2	True				
ANR	1011135	ParameterType	byte *		1010382	0					
ANR	1011136	Identifier	in_buffer		1010382	1					
ANR	1011137	Parameter	int row	596:26:17242:17261	1010382	3	True				
ANR	1011138	ParameterType	int		1010382	0					
ANR	1011139	Identifier	row		1010382	1					
ANR	1011140	Parameter	int plane	597:26:17290:17311	1010382	4	True				
ANR	1011141	ParameterType	int		1010382	0					
ANR	1011142	Identifier	plane		1010382	1					
ANR	1011143	Parameter	int span	598:26:17340:17360	1010382	5	True				
ANR	1011144	ParameterType	int		1010382	0					
ANR	1011145	Identifier	span		1010382	1					
ANR	1011146	CFGEntryNode	ENTRY		1010382		True				
ANR	1011147	CFGExitNode	EXIT		1010382		True				
ANR	1011148	Symbol	plane		1010382						
ANR	1011149	Symbol	xx		1010382						
ANR	1011150	Symbol	awidth		1010382						
ANR	1011151	Symbol	mfs_clear		1010382						
ANR	1011152	Symbol	in_buffer		1010382						
ANR	1011153	Symbol	back		1010382						
ANR	1011154	Symbol	threshold		1010382						
ANR	1011155	Symbol	mfs_data		1010382						
ANR	1011156	Symbol	ds -> mfs_data		1010382						
ANR	1011157	Symbol	ds		1010382						
ANR	1011158	Symbol	mfs_above_left_is_0		1010382						
ANR	1011159	Symbol	ds -> errors		1010382						
ANR	1011160	Symbol	outp		1010382						
ANR	1011161	Symbol	* ds		1010382						
ANR	1011162	Symbol	e_forward		1010382						
ANR	1011163	Symbol	* mfs_data		1010382						
ANR	1011164	Symbol	* outp ++		1010382						
ANR	1011165	Symbol	* outp --		1010382						
ANR	1011166	Symbol	ds -> width		1010382						
ANR	1011167	Symbol	row		1010382						
ANR	1011168	Symbol	* errors ++		1010382						
ANR	1011169	Symbol	* errors --		1010382						
ANR	1011170	Symbol	factor		1010382						
ANR	1011171	Symbol	value		1010382						
ANR	1011172	Symbol	force_forward		1010382						
ANR	1011173	Symbol	out_buffer		1010382						
ANR	1011174	Symbol	ds -> awidth		1010382						
ANR	1011175	Symbol	inp		1010382						
ANR	1011176	Symbol	* inp		1010382						
ANR	1011177	Symbol	* errors		1010382						
ANR	1011178	Symbol	mfs_force_off		1010382						
ANR	1011179	Symbol	* mfs_data ++		1010382						
ANR	1011180	Symbol	* mfs_data --		1010382						
ANR	1011181	Symbol	pad_white		1010382						
ANR	1011182	Symbol	ds -> factor		1010382						
ANR	1011183	Symbol	x		1010382						
ANR	1011184	Symbol	width		1010382						
ANR	1011185	Symbol	y		1010382						
ANR	1011186	Symbol	e_downleft		1010382						
ANR	1011187	Symbol	mfs		1010382						
ANR	1011188	Symbol	errors		1010382						
ANR	1011189	Symbol	mfs_above_is_0		1010382						
ANR	1011190	Symbol	span		1010382						
ANR	1011191	Symbol	e_down		1010382						
ANR	1011192	Symbol	max_value		1010382						
ANR	1011193	Function	down_core4	760:0:22421:26092							
ANR	1011194	FunctionDef	"down_core4 (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1011193	0					
ANR	1011195	CompoundStatement		766:0:22719:26092	1011193	0					
ANR	1011196	IdentifierDeclStatement	"int x , xx , y , value , comp ;"	767:4:22725:22757	1011193	0	True				
ANR	1011197	IdentifierDecl	x		1011193	0					
ANR	1011198	IdentifierDeclType	int		1011193	0					
ANR	1011199	Identifier	x		1011193	1					
ANR	1011200	IdentifierDecl	xx		1011193	1					
ANR	1011201	IdentifierDeclType	int		1011193	0					
ANR	1011202	Identifier	xx		1011193	1					
ANR	1011203	IdentifierDecl	y		1011193	2					
ANR	1011204	IdentifierDeclType	int		1011193	0					
ANR	1011205	Identifier	y		1011193	1					
ANR	1011206	IdentifierDecl	value		1011193	3					
ANR	1011207	IdentifierDeclType	int		1011193	0					
ANR	1011208	Identifier	value		1011193	1					
ANR	1011209	IdentifierDecl	comp		1011193	4					
ANR	1011210	IdentifierDeclType	int		1011193	0					
ANR	1011211	Identifier	comp		1011193	1					
ANR	1011212	IdentifierDeclStatement	"int e_downleft , e_down , e_forward = 0 ;"	768:4:22763:22807	1011193	1	True				
ANR	1011213	IdentifierDecl	e_downleft		1011193	0					
ANR	1011214	IdentifierDeclType	int		1011193	0					
ANR	1011215	Identifier	e_downleft		1011193	1					
ANR	1011216	IdentifierDecl	e_down		1011193	1					
ANR	1011217	IdentifierDeclType	int		1011193	0					
ANR	1011218	Identifier	e_down		1011193	1					
ANR	1011219	IdentifierDecl	e_forward = 0		1011193	2					
ANR	1011220	IdentifierDeclType	int		1011193	0					
ANR	1011221	Identifier	e_forward		1011193	1					
ANR	1011222	AssignmentExpression	e_forward = 0		1011193	2		=			
ANR	1011223	Identifier	e_forward		1011193	0					
ANR	1011224	PrimaryExpression	0		1011193	1					
ANR	1011225	IdentifierDeclStatement	int pad_white ;	769:4:22813:22833	1011193	2	True				
ANR	1011226	IdentifierDecl	pad_white		1011193	0					
ANR	1011227	IdentifierDeclType	int		1011193	0					
ANR	1011228	Identifier	pad_white		1011193	1					
ANR	1011229	IdentifierDeclStatement	"byte * inp , * outp ;"	770:4:22839:22860	1011193	3	True				
ANR	1011230	IdentifierDecl	* inp		1011193	0					
ANR	1011231	IdentifierDeclType	byte *		1011193	0					
ANR	1011232	Identifier	inp		1011193	1					
ANR	1011233	IdentifierDecl	* outp		1011193	1					
ANR	1011234	IdentifierDeclType	byte *		1011193	0					
ANR	1011235	Identifier	outp		1011193	1					
ANR	1011236	IdentifierDeclStatement	int width = ds -> width ;	771:4:22866:22898	1011193	4	True				
ANR	1011237	IdentifierDecl	width = ds -> width		1011193	0					
ANR	1011238	IdentifierDeclType	int		1011193	0					
ANR	1011239	Identifier	width		1011193	1					
ANR	1011240	AssignmentExpression	width = ds -> width		1011193	2		=			
ANR	1011241	Identifier	width		1011193	0					
ANR	1011242	PtrMemberAccess	ds -> width		1011193	1					
ANR	1011243	Identifier	ds		1011193	0					
ANR	1011244	Identifier	width		1011193	1					
ANR	1011245	IdentifierDeclStatement	int awidth = ds -> awidth ;	772:4:22904:22937	1011193	5	True				
ANR	1011246	IdentifierDecl	awidth = ds -> awidth		1011193	0					
ANR	1011247	IdentifierDeclType	int		1011193	0					
ANR	1011248	Identifier	awidth		1011193	1					
ANR	1011249	AssignmentExpression	awidth = ds -> awidth		1011193	2		=			
ANR	1011250	Identifier	awidth		1011193	0					
ANR	1011251	PtrMemberAccess	ds -> awidth		1011193	1					
ANR	1011252	Identifier	ds		1011193	0					
ANR	1011253	Identifier	awidth		1011193	1					
ANR	1011254	IdentifierDeclStatement	int factor = ds -> factor ;	773:4:22943:22976	1011193	6	True				
ANR	1011255	IdentifierDecl	factor = ds -> factor		1011193	0					
ANR	1011256	IdentifierDeclType	int		1011193	0					
ANR	1011257	Identifier	factor		1011193	1					
ANR	1011258	AssignmentExpression	factor = ds -> factor		1011193	2		=			
ANR	1011259	Identifier	factor		1011193	0					
ANR	1011260	PtrMemberAccess	ds -> factor		1011193	1					
ANR	1011261	Identifier	ds		1011193	0					
ANR	1011262	Identifier	factor		1011193	1					
ANR	1011263	IdentifierDeclStatement	int * errors = ds -> errors ;	774:4:22982:23015	1011193	7	True				
ANR	1011264	IdentifierDecl	* errors = ds -> errors		1011193	0					
ANR	1011265	IdentifierDeclType	int *		1011193	0					
ANR	1011266	Identifier	errors		1011193	1					
ANR	1011267	AssignmentExpression	* errors = ds -> errors		1011193	2		=			
ANR	1011268	Identifier	errors		1011193	0					
ANR	1011269	PtrMemberAccess	ds -> errors		1011193	1					
ANR	1011270	Identifier	ds		1011193	0					
ANR	1011271	Identifier	errors		1011193	1					
ANR	1011272	IdentifierDeclStatement	const int threshold = factor * factor * 128 ;	775:4:23021:23061	1011193	8	True				
ANR	1011273	IdentifierDecl	threshold = factor * factor * 128		1011193	0					
ANR	1011274	IdentifierDeclType	const int		1011193	0					
ANR	1011275	Identifier	threshold		1011193	1					
ANR	1011276	AssignmentExpression	threshold = factor * factor * 128		1011193	2		=			
ANR	1011277	Identifier	threshold		1011193	0					
ANR	1011278	MultiplicativeExpression	factor * factor * 128		1011193	1		*			
ANR	1011279	Identifier	factor		1011193	0					
ANR	1011280	MultiplicativeExpression	factor * 128		1011193	1		*			
ANR	1011281	Identifier	factor		1011193	0					
ANR	1011282	PrimaryExpression	128		1011193	1					
ANR	1011283	IdentifierDeclStatement	const int max_value = factor * factor * 255 ;	776:4:23067:23107	1011193	9	True				
ANR	1011284	IdentifierDecl	max_value = factor * factor * 255		1011193	0					
ANR	1011285	IdentifierDeclType	const int		1011193	0					
ANR	1011286	Identifier	max_value		1011193	1					
ANR	1011287	AssignmentExpression	max_value = factor * factor * 255		1011193	2		=			
ANR	1011288	Identifier	max_value		1011193	0					
ANR	1011289	MultiplicativeExpression	factor * factor * 255		1011193	1		*			
ANR	1011290	Identifier	factor		1011193	0					
ANR	1011291	MultiplicativeExpression	factor * 255		1011193	1		*			
ANR	1011292	Identifier	factor		1011193	0					
ANR	1011293	PrimaryExpression	255		1011193	1					
ANR	1011294	ExpressionStatement	pad_white = ( awidth - width ) * factor * 4	778:4:23114:23155	1011193	10	True				
ANR	1011295	AssignmentExpression	pad_white = ( awidth - width ) * factor * 4		1011193	0		=			
ANR	1011296	Identifier	pad_white		1011193	0					
ANR	1011297	MultiplicativeExpression	( awidth - width ) * factor * 4		1011193	1		*			
ANR	1011298	AdditiveExpression	awidth - width		1011193	0		-			
ANR	1011299	Identifier	awidth		1011193	0					
ANR	1011300	Identifier	width		1011193	1					
ANR	1011301	MultiplicativeExpression	factor * 4		1011193	1		*			
ANR	1011302	Identifier	factor		1011193	0					
ANR	1011303	PrimaryExpression	4		1011193	1					
ANR	1011304	IfStatement	if ( pad_white < 0 )		1011193	11					
ANR	1011305	Condition	pad_white < 0	779:8:23165:23177	1011193	0	True				
ANR	1011306	RelationalExpression	pad_white < 0		1011193	0		<			
ANR	1011307	Identifier	pad_white		1011193	0					
ANR	1011308	PrimaryExpression	0		1011193	1					
ANR	1011309	ExpressionStatement	pad_white = 0	780:8:23188:23201	1011193	1	True				
ANR	1011310	AssignmentExpression	pad_white = 0		1011193	0		=			
ANR	1011311	Identifier	pad_white		1011193	0					
ANR	1011312	PrimaryExpression	0		1011193	1					
ANR	1011313	IfStatement	if ( pad_white )		1011193	12					
ANR	1011314	Condition	pad_white	782:8:23212:23220	1011193	0	True				
ANR	1011315	Identifier	pad_white		1011193	0					
ANR	1011316	CompoundStatement		18:4:507:507	1011193	1					
ANR	1011317	ExpressionStatement	inp = in_buffer + width * factor * 4	784:8:23237:23271	1011193	0	True				
ANR	1011318	AssignmentExpression	inp = in_buffer + width * factor * 4		1011193	0		=			
ANR	1011319	Identifier	inp		1011193	0					
ANR	1011320	AdditiveExpression	in_buffer + width * factor * 4		1011193	1		+			
ANR	1011321	Identifier	in_buffer		1011193	0					
ANR	1011322	MultiplicativeExpression	width * factor * 4		1011193	1		*			
ANR	1011323	Identifier	width		1011193	0					
ANR	1011324	MultiplicativeExpression	factor * 4		1011193	1		*			
ANR	1011325	Identifier	factor		1011193	0					
ANR	1011326	PrimaryExpression	4		1011193	1					
ANR	1011327	ForStatement	for ( y = factor ; y > 0 ; y -- )		1011193	1					
ANR	1011328	ForInit	y = factor ;	785:13:23286:23296	1011193	0	True				
ANR	1011329	AssignmentExpression	y = factor		1011193	0		=			
ANR	1011330	Identifier	y		1011193	0					
ANR	1011331	Identifier	factor		1011193	1					
ANR	1011332	Condition	y > 0	785:25:23298:23302	1011193	1	True				
ANR	1011333	RelationalExpression	y > 0		1011193	0		>			
ANR	1011334	Identifier	y		1011193	0					
ANR	1011335	PrimaryExpression	0		1011193	1					
ANR	1011336	PostIncDecOperationExpression	y --	785:32:23305:23307	1011193	2	True				
ANR	1011337	Identifier	y		1011193	0					
ANR	1011338	IncDec	--		1011193	1					
ANR	1011339	CompoundStatement		21:8:598:598	1011193	3					
ANR	1011340	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	787:12:23332:23360	1011193	0	True				
ANR	1011341	CallExpression	"memset ( inp , 0xFF , pad_white )"		1011193	0					
ANR	1011342	Callee	memset		1011193	0					
ANR	1011343	Identifier	memset		1011193	0					
ANR	1011344	ArgumentList	inp		1011193	1					
ANR	1011345	Argument	inp		1011193	0					
ANR	1011346	Identifier	inp		1011193	0					
ANR	1011347	Argument	0xFF		1011193	1					
ANR	1011348	PrimaryExpression	0xFF		1011193	0					
ANR	1011349	Argument	pad_white		1011193	2					
ANR	1011350	Identifier	pad_white		1011193	0					
ANR	1011351	ExpressionStatement	inp += span	788:12:23374:23385	1011193	1	True				
ANR	1011352	AssignmentExpression	inp += span		1011193	0		+=			
ANR	1011353	Identifier	inp		1011193	0					
ANR	1011354	Identifier	span		1011193	1					
ANR	1011355	IfStatement	if ( ( row & 1 ) == 0 )		1011193	13					
ANR	1011356	Condition	( row & 1 ) == 0	792:8:23412:23425	1011193	0	True				
ANR	1011357	EqualityExpression	( row & 1 ) == 0		1011193	0		==			
ANR	1011358	BitAndExpression	row & 1		1011193	0		&			
ANR	1011359	Identifier	row		1011193	0					
ANR	1011360	PrimaryExpression	1		1011193	1					
ANR	1011361	PrimaryExpression	0		1011193	1					
ANR	1011362	CompoundStatement		30:8:777:811	1011193	1					
ANR	1011363	IdentifierDeclStatement	const int back = span * factor - 4 ;	795:8:23497:23531	1011193	0	True				
ANR	1011364	IdentifierDecl	back = span * factor - 4		1011193	0					
ANR	1011365	IdentifierDeclType	const int		1011193	0					
ANR	1011366	Identifier	back		1011193	1					
ANR	1011367	AssignmentExpression	back = span * factor - 4		1011193	2		=			
ANR	1011368	Identifier	back		1011193	0					
ANR	1011369	AdditiveExpression	span * factor - 4		1011193	1		-			
ANR	1011370	MultiplicativeExpression	span * factor		1011193	0		*			
ANR	1011371	Identifier	span		1011193	0					
ANR	1011372	Identifier	factor		1011193	1					
ANR	1011373	PrimaryExpression	4		1011193	1					
ANR	1011374	ForStatement	for ( comp = 0 ; comp < 4 ; comp ++ )		1011193	1					
ANR	1011375	ForInit	comp = 0 ;	796:13:23546:23554	1011193	0	True				
ANR	1011376	AssignmentExpression	comp = 0		1011193	0		=			
ANR	1011377	Identifier	comp		1011193	0					
ANR	1011378	PrimaryExpression	0		1011193	1					
ANR	1011379	Condition	comp < 4	796:23:23556:23563	1011193	1	True				
ANR	1011380	RelationalExpression	comp < 4		1011193	0		<			
ANR	1011381	Identifier	comp		1011193	0					
ANR	1011382	PrimaryExpression	4		1011193	1					
ANR	1011383	PostIncDecOperationExpression	comp ++	796:33:23566:23571	1011193	2	True				
ANR	1011384	Identifier	comp		1011193	0					
ANR	1011385	IncDec	++		1011193	1					
ANR	1011386	CompoundStatement		32:8:862:862	1011193	3					
ANR	1011387	ExpressionStatement	errors = ds -> errors + ( awidth + 3 ) * comp + 2	798:12:23596:23637	1011193	0	True				
ANR	1011388	AssignmentExpression	errors = ds -> errors + ( awidth + 3 ) * comp + 2		1011193	0		=			
ANR	1011389	Identifier	errors		1011193	0					
ANR	1011390	AdditiveExpression	ds -> errors + ( awidth + 3 ) * comp + 2		1011193	1		+			
ANR	1011391	PtrMemberAccess	ds -> errors		1011193	0					
ANR	1011392	Identifier	ds		1011193	0					
ANR	1011393	Identifier	errors		1011193	1					
ANR	1011394	AdditiveExpression	( awidth + 3 ) * comp + 2		1011193	1		+			
ANR	1011395	MultiplicativeExpression	( awidth + 3 ) * comp		1011193	0		*			
ANR	1011396	AdditiveExpression	awidth + 3		1011193	0		+			
ANR	1011397	Identifier	awidth		1011193	0					
ANR	1011398	PrimaryExpression	3		1011193	1					
ANR	1011399	Identifier	comp		1011193	1					
ANR	1011400	PrimaryExpression	2		1011193	1					
ANR	1011401	ExpressionStatement	inp = in_buffer + comp	799:12:23651:23673	1011193	1	True				
ANR	1011402	AssignmentExpression	inp = in_buffer + comp		1011193	0		=			
ANR	1011403	Identifier	inp		1011193	0					
ANR	1011404	AdditiveExpression	in_buffer + comp		1011193	1		+			
ANR	1011405	Identifier	in_buffer		1011193	0					
ANR	1011406	Identifier	comp		1011193	1					
ANR	1011407	ExpressionStatement	outp = inp	800:12:23687:23697	1011193	2	True				
ANR	1011408	AssignmentExpression	outp = inp		1011193	0		=			
ANR	1011409	Identifier	outp		1011193	0					
ANR	1011410	Identifier	inp		1011193	1					
ANR	1011411	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1011193	3					
ANR	1011412	ForInit	x = awidth ;	801:17:23716:23726	1011193	0	True				
ANR	1011413	AssignmentExpression	x = awidth		1011193	0		=			
ANR	1011414	Identifier	x		1011193	0					
ANR	1011415	Identifier	awidth		1011193	1					
ANR	1011416	Condition	x > 0	801:29:23728:23732	1011193	1	True				
ANR	1011417	RelationalExpression	x > 0		1011193	0		>			
ANR	1011418	Identifier	x		1011193	0					
ANR	1011419	PrimaryExpression	0		1011193	1					
ANR	1011420	PostIncDecOperationExpression	x --	801:36:23735:23737	1011193	2	True				
ANR	1011421	Identifier	x		1011193	0					
ANR	1011422	IncDec	--		1011193	1					
ANR	1011423	CompoundStatement		37:12:1032:1032	1011193	3					
ANR	1011424	ExpressionStatement	value = e_forward + * errors	803:16:23770:23797	1011193	0	True				
ANR	1011425	AssignmentExpression	value = e_forward + * errors		1011193	0		=			
ANR	1011426	Identifier	value		1011193	0					
ANR	1011427	AdditiveExpression	e_forward + * errors		1011193	1		+			
ANR	1011428	Identifier	e_forward		1011193	0					
ANR	1011429	UnaryOperationExpression	* errors		1011193	1					
ANR	1011430	UnaryOperator	*		1011193	0					
ANR	1011431	Identifier	errors		1011193	1					
ANR	1011432	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1011193	1					
ANR	1011433	ForInit	xx = factor ;	804:21:23820:23831	1011193	0	True				
ANR	1011434	AssignmentExpression	xx = factor		1011193	0		=			
ANR	1011435	Identifier	xx		1011193	0					
ANR	1011436	Identifier	factor		1011193	1					
ANR	1011437	Condition	xx > 0	804:34:23833:23838	1011193	1	True				
ANR	1011438	RelationalExpression	xx > 0		1011193	0		>			
ANR	1011439	Identifier	xx		1011193	0					
ANR	1011440	PrimaryExpression	0		1011193	1					
ANR	1011441	PostIncDecOperationExpression	xx --	804:42:23841:23844	1011193	2	True				
ANR	1011442	Identifier	xx		1011193	0					
ANR	1011443	IncDec	--		1011193	1					
ANR	1011444	CompoundStatement		40:16:1143:1143	1011193	3					
ANR	1011445	ForStatement	for ( y = factor ; y > 0 ; y -- )		1011193	0					
ANR	1011446	ForInit	y = factor ;	806:25:23890:23900	1011193	0	True				
ANR	1011447	AssignmentExpression	y = factor		1011193	0		=			
ANR	1011448	Identifier	y		1011193	0					
ANR	1011449	Identifier	factor		1011193	1					
ANR	1011450	Condition	y > 0	806:37:23902:23906	1011193	1	True				
ANR	1011451	RelationalExpression	y > 0		1011193	0		>			
ANR	1011452	Identifier	y		1011193	0					
ANR	1011453	PrimaryExpression	0		1011193	1					
ANR	1011454	PostIncDecOperationExpression	y --	806:44:23909:23911	1011193	2	True				
ANR	1011455	Identifier	y		1011193	0					
ANR	1011456	IncDec	--		1011193	1					
ANR	1011457	CompoundStatement		42:20:1214:1214	1011193	3					
ANR	1011458	ExpressionStatement	value += * inp	808:24:23960:23973	1011193	0	True				
ANR	1011459	AssignmentExpression	value += * inp		1011193	0		+=			
ANR	1011460	Identifier	value		1011193	0					
ANR	1011461	UnaryOperationExpression	* inp		1011193	1					
ANR	1011462	UnaryOperator	*		1011193	0					
ANR	1011463	Identifier	inp		1011193	1					
ANR	1011464	ExpressionStatement	inp += span	809:24:23999:24010	1011193	1	True				
ANR	1011465	AssignmentExpression	inp += span		1011193	0		+=			
ANR	1011466	Identifier	inp		1011193	0					
ANR	1011467	Identifier	span		1011193	1					
ANR	1011468	ExpressionStatement	inp -= back	811:20:24054:24065	1011193	1	True				
ANR	1011469	AssignmentExpression	inp -= back		1011193	0		-=			
ANR	1011470	Identifier	inp		1011193	0					
ANR	1011471	Identifier	back		1011193	1					
ANR	1011472	IfStatement	if ( value >= threshold )		1011193	2					
ANR	1011473	Condition	value >= threshold	813:20:24105:24122	1011193	0	True				
ANR	1011474	RelationalExpression	value >= threshold		1011193	0		>=			
ANR	1011475	Identifier	value		1011193	0					
ANR	1011476	Identifier	threshold		1011193	1					
ANR	1011477	CompoundStatement		49:16:1421:1421	1011193	1					
ANR	1011478	ExpressionStatement	* outp = 1	815:20:24163:24172	1011193	0	True				
ANR	1011479	AssignmentExpression	* outp = 1		1011193	0		=			
ANR	1011480	UnaryOperationExpression	* outp		1011193	0					
ANR	1011481	UnaryOperator	*		1011193	0					
ANR	1011482	Identifier	outp		1011193	1					
ANR	1011483	PrimaryExpression	1		1011193	1					
ANR	1011484	ExpressionStatement	outp += 4	815:31:24174:24183	1011193	1	True				
ANR	1011485	AssignmentExpression	outp += 4		1011193	0		+=			
ANR	1011486	Identifier	outp		1011193	0					
ANR	1011487	PrimaryExpression	4		1011193	1					
ANR	1011488	ExpressionStatement	value -= max_value	816:20:24205:24223	1011193	2	True				
ANR	1011489	AssignmentExpression	value -= max_value		1011193	0		-=			
ANR	1011490	Identifier	value		1011193	0					
ANR	1011491	Identifier	max_value		1011193	1					
ANR	1011492	ElseStatement	else		1011193	0					
ANR	1011493	CompoundStatement		54:16:1560:1560	1011193	0					
ANR	1011494	ExpressionStatement	* outp = 0	820:20:24302:24311	1011193	0	True				
ANR	1011495	AssignmentExpression	* outp = 0		1011193	0		=			
ANR	1011496	UnaryOperationExpression	* outp		1011193	0					
ANR	1011497	UnaryOperator	*		1011193	0					
ANR	1011498	Identifier	outp		1011193	1					
ANR	1011499	PrimaryExpression	0		1011193	1					
ANR	1011500	ExpressionStatement	outp += 4	820:31:24313:24322	1011193	1	True				
ANR	1011501	AssignmentExpression	outp += 4		1011193	0		+=			
ANR	1011502	Identifier	outp		1011193	0					
ANR	1011503	PrimaryExpression	4		1011193	1					
ANR	1011504	ExpressionStatement	e_forward = value * 7 / 16	822:16:24358:24383	1011193	3	True				
ANR	1011505	AssignmentExpression	e_forward = value * 7 / 16		1011193	0		=			
ANR	1011506	Identifier	e_forward		1011193	0					
ANR	1011507	MultiplicativeExpression	value * 7 / 16		1011193	1		*			
ANR	1011508	Identifier	value		1011193	0					
ANR	1011509	MultiplicativeExpression	7 / 16		1011193	1		/			
ANR	1011510	PrimaryExpression	7		1011193	0					
ANR	1011511	PrimaryExpression	16		1011193	1					
ANR	1011512	ExpressionStatement	e_downleft = value * 3 / 16	823:16:24401:24426	1011193	4	True				
ANR	1011513	AssignmentExpression	e_downleft = value * 3 / 16		1011193	0		=			
ANR	1011514	Identifier	e_downleft		1011193	0					
ANR	1011515	MultiplicativeExpression	value * 3 / 16		1011193	1		*			
ANR	1011516	Identifier	value		1011193	0					
ANR	1011517	MultiplicativeExpression	3 / 16		1011193	1		/			
ANR	1011518	PrimaryExpression	3		1011193	0					
ANR	1011519	PrimaryExpression	16		1011193	1					
ANR	1011520	ExpressionStatement	e_down = value * 5 / 16	824:16:24444:24469	1011193	5	True				
ANR	1011521	AssignmentExpression	e_down = value * 5 / 16		1011193	0		=			
ANR	1011522	Identifier	e_down		1011193	0					
ANR	1011523	MultiplicativeExpression	value * 5 / 16		1011193	1		*			
ANR	1011524	Identifier	value		1011193	0					
ANR	1011525	MultiplicativeExpression	5 / 16		1011193	1		/			
ANR	1011526	PrimaryExpression	5		1011193	0					
ANR	1011527	PrimaryExpression	16		1011193	1					
ANR	1011528	ExpressionStatement	value -= e_forward + e_downleft + e_down	825:16:24487:24531	1011193	6	True				
ANR	1011529	AssignmentExpression	value -= e_forward + e_downleft + e_down		1011193	0		-=			
ANR	1011530	Identifier	value		1011193	0					
ANR	1011531	AdditiveExpression	e_forward + e_downleft + e_down		1011193	1		+			
ANR	1011532	Identifier	e_forward		1011193	0					
ANR	1011533	AdditiveExpression	e_downleft + e_down		1011193	1		+			
ANR	1011534	Identifier	e_downleft		1011193	0					
ANR	1011535	Identifier	e_down		1011193	1					
ANR	1011536	ExpressionStatement	errors [ - 2 ] += e_downleft	826:16:24549:24573	1011193	7	True				
ANR	1011537	AssignmentExpression	errors [ - 2 ] += e_downleft		1011193	0		+=			
ANR	1011538	ArrayIndexing	errors [ - 2 ]		1011193	0					
ANR	1011539	Identifier	errors		1011193	0					
ANR	1011540	UnaryOperationExpression	- 2		1011193	1					
ANR	1011541	UnaryOperator	-		1011193	0					
ANR	1011542	PrimaryExpression	2		1011193	1					
ANR	1011543	Identifier	e_downleft		1011193	1					
ANR	1011544	ExpressionStatement	errors [ - 1 ] += e_down	827:16:24591:24611	1011193	8	True				
ANR	1011545	AssignmentExpression	errors [ - 1 ] += e_down		1011193	0		+=			
ANR	1011546	ArrayIndexing	errors [ - 1 ]		1011193	0					
ANR	1011547	Identifier	errors		1011193	0					
ANR	1011548	UnaryOperationExpression	- 1		1011193	1					
ANR	1011549	UnaryOperator	-		1011193	0					
ANR	1011550	PrimaryExpression	1		1011193	1					
ANR	1011551	Identifier	e_down		1011193	1					
ANR	1011552	ExpressionStatement	* errors ++ = value	828:16:24629:24648	1011193	9	True				
ANR	1011553	AssignmentExpression	* errors ++ = value		1011193	0		=			
ANR	1011554	UnaryOperationExpression	* errors ++		1011193	0					
ANR	1011555	UnaryOperator	*		1011193	0					
ANR	1011556	PostIncDecOperationExpression	errors ++		1011193	1					
ANR	1011557	Identifier	errors		1011193	0					
ANR	1011558	IncDec	++		1011193	1					
ANR	1011559	Identifier	value		1011193	1					
ANR	1011560	ExpressionStatement	outp = in_buffer	831:8:24682:24698	1011193	2	True				
ANR	1011561	AssignmentExpression	outp = in_buffer		1011193	0		=			
ANR	1011562	Identifier	outp		1011193	0					
ANR	1011563	Identifier	in_buffer		1011193	1					
ANR	1011564	ElseStatement	else		1011193	0					
ANR	1011565	CompoundStatement		71:8:2064:2098	1011193	0					
ANR	1011566	IdentifierDeclStatement	const int back = span * factor + 4 ;	836:8:24784:24818	1011193	0	True				
ANR	1011567	IdentifierDecl	back = span * factor + 4		1011193	0					
ANR	1011568	IdentifierDeclType	const int		1011193	0					
ANR	1011569	Identifier	back		1011193	1					
ANR	1011570	AssignmentExpression	back = span * factor + 4		1011193	2		=			
ANR	1011571	Identifier	back		1011193	0					
ANR	1011572	AdditiveExpression	span * factor + 4		1011193	1		+			
ANR	1011573	MultiplicativeExpression	span * factor		1011193	0		*			
ANR	1011574	Identifier	span		1011193	0					
ANR	1011575	Identifier	factor		1011193	1					
ANR	1011576	PrimaryExpression	4		1011193	1					
ANR	1011577	ForStatement	for ( comp = 0 ; comp < 4 ; comp ++ )		1011193	1					
ANR	1011578	ForInit	comp = 0 ;	837:13:24833:24841	1011193	0	True				
ANR	1011579	AssignmentExpression	comp = 0		1011193	0		=			
ANR	1011580	Identifier	comp		1011193	0					
ANR	1011581	PrimaryExpression	0		1011193	1					
ANR	1011582	Condition	comp < 4	837:23:24843:24850	1011193	1	True				
ANR	1011583	RelationalExpression	comp < 4		1011193	0		<			
ANR	1011584	Identifier	comp		1011193	0					
ANR	1011585	PrimaryExpression	4		1011193	1					
ANR	1011586	PostIncDecOperationExpression	comp ++	837:33:24853:24858	1011193	2	True				
ANR	1011587	Identifier	comp		1011193	0					
ANR	1011588	IncDec	++		1011193	1					
ANR	1011589	CompoundStatement		73:8:2149:2149	1011193	3					
ANR	1011590	ExpressionStatement	errors = ds -> errors + ( awidth + 3 ) * comp + awidth	839:12:24883:24929	1011193	0	True				
ANR	1011591	AssignmentExpression	errors = ds -> errors + ( awidth + 3 ) * comp + awidth		1011193	0		=			
ANR	1011592	Identifier	errors		1011193	0					
ANR	1011593	AdditiveExpression	ds -> errors + ( awidth + 3 ) * comp + awidth		1011193	1		+			
ANR	1011594	PtrMemberAccess	ds -> errors		1011193	0					
ANR	1011595	Identifier	ds		1011193	0					
ANR	1011596	Identifier	errors		1011193	1					
ANR	1011597	AdditiveExpression	( awidth + 3 ) * comp + awidth		1011193	1		+			
ANR	1011598	MultiplicativeExpression	( awidth + 3 ) * comp		1011193	0		*			
ANR	1011599	AdditiveExpression	awidth + 3		1011193	0		+			
ANR	1011600	Identifier	awidth		1011193	0					
ANR	1011601	PrimaryExpression	3		1011193	1					
ANR	1011602	Identifier	comp		1011193	1					
ANR	1011603	Identifier	awidth		1011193	1					
ANR	1011604	ExpressionStatement	inp = in_buffer + awidth * factor * 4 - 4 + comp	840:12:24943:24987	1011193	1	True				
ANR	1011605	AssignmentExpression	inp = in_buffer + awidth * factor * 4 - 4 + comp		1011193	0		=			
ANR	1011606	Identifier	inp		1011193	0					
ANR	1011607	AdditiveExpression	in_buffer + awidth * factor * 4 - 4 + comp		1011193	1		+			
ANR	1011608	Identifier	in_buffer		1011193	0					
ANR	1011609	AdditiveExpression	awidth * factor * 4 - 4 + comp		1011193	1		-			
ANR	1011610	MultiplicativeExpression	awidth * factor * 4		1011193	0		*			
ANR	1011611	Identifier	awidth		1011193	0					
ANR	1011612	MultiplicativeExpression	factor * 4		1011193	1		*			
ANR	1011613	Identifier	factor		1011193	0					
ANR	1011614	PrimaryExpression	4		1011193	1					
ANR	1011615	AdditiveExpression	4 + comp		1011193	1		+			
ANR	1011616	PrimaryExpression	4		1011193	0					
ANR	1011617	Identifier	comp		1011193	1					
ANR	1011618	ExpressionStatement	outp = inp	841:12:25001:25011	1011193	2	True				
ANR	1011619	AssignmentExpression	outp = inp		1011193	0		=			
ANR	1011620	Identifier	outp		1011193	0					
ANR	1011621	Identifier	inp		1011193	1					
ANR	1011622	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1011193	3					
ANR	1011623	ForInit	x = awidth ;	842:17:25030:25040	1011193	0	True				
ANR	1011624	AssignmentExpression	x = awidth		1011193	0		=			
ANR	1011625	Identifier	x		1011193	0					
ANR	1011626	Identifier	awidth		1011193	1					
ANR	1011627	Condition	x > 0	842:29:25042:25046	1011193	1	True				
ANR	1011628	RelationalExpression	x > 0		1011193	0		>			
ANR	1011629	Identifier	x		1011193	0					
ANR	1011630	PrimaryExpression	0		1011193	1					
ANR	1011631	PostIncDecOperationExpression	x --	842:36:25049:25051	1011193	2	True				
ANR	1011632	Identifier	x		1011193	0					
ANR	1011633	IncDec	--		1011193	1					
ANR	1011634	CompoundStatement		78:12:2346:2346	1011193	3					
ANR	1011635	ExpressionStatement	value = e_forward + * errors	844:16:25084:25111	1011193	0	True				
ANR	1011636	AssignmentExpression	value = e_forward + * errors		1011193	0		=			
ANR	1011637	Identifier	value		1011193	0					
ANR	1011638	AdditiveExpression	e_forward + * errors		1011193	1		+			
ANR	1011639	Identifier	e_forward		1011193	0					
ANR	1011640	UnaryOperationExpression	* errors		1011193	1					
ANR	1011641	UnaryOperator	*		1011193	0					
ANR	1011642	Identifier	errors		1011193	1					
ANR	1011643	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1011193	1					
ANR	1011644	ForInit	xx = factor ;	845:21:25134:25145	1011193	0	True				
ANR	1011645	AssignmentExpression	xx = factor		1011193	0		=			
ANR	1011646	Identifier	xx		1011193	0					
ANR	1011647	Identifier	factor		1011193	1					
ANR	1011648	Condition	xx > 0	845:34:25147:25152	1011193	1	True				
ANR	1011649	RelationalExpression	xx > 0		1011193	0		>			
ANR	1011650	Identifier	xx		1011193	0					
ANR	1011651	PrimaryExpression	0		1011193	1					
ANR	1011652	PostIncDecOperationExpression	xx --	845:42:25155:25158	1011193	2	True				
ANR	1011653	Identifier	xx		1011193	0					
ANR	1011654	IncDec	--		1011193	1					
ANR	1011655	CompoundStatement		81:16:2457:2457	1011193	3					
ANR	1011656	ForStatement	for ( y = factor ; y > 0 ; y -- )		1011193	0					
ANR	1011657	ForInit	y = factor ;	847:25:25204:25214	1011193	0	True				
ANR	1011658	AssignmentExpression	y = factor		1011193	0		=			
ANR	1011659	Identifier	y		1011193	0					
ANR	1011660	Identifier	factor		1011193	1					
ANR	1011661	Condition	y > 0	847:37:25216:25220	1011193	1	True				
ANR	1011662	RelationalExpression	y > 0		1011193	0		>			
ANR	1011663	Identifier	y		1011193	0					
ANR	1011664	PrimaryExpression	0		1011193	1					
ANR	1011665	PostIncDecOperationExpression	y --	847:44:25223:25225	1011193	2	True				
ANR	1011666	Identifier	y		1011193	0					
ANR	1011667	IncDec	--		1011193	1					
ANR	1011668	CompoundStatement		83:20:2528:2528	1011193	3					
ANR	1011669	ExpressionStatement	value += * inp	849:24:25274:25287	1011193	0	True				
ANR	1011670	AssignmentExpression	value += * inp		1011193	0		+=			
ANR	1011671	Identifier	value		1011193	0					
ANR	1011672	UnaryOperationExpression	* inp		1011193	1					
ANR	1011673	UnaryOperator	*		1011193	0					
ANR	1011674	Identifier	inp		1011193	1					
ANR	1011675	ExpressionStatement	inp += span	850:24:25313:25324	1011193	1	True				
ANR	1011676	AssignmentExpression	inp += span		1011193	0		+=			
ANR	1011677	Identifier	inp		1011193	0					
ANR	1011678	Identifier	span		1011193	1					
ANR	1011679	ExpressionStatement	inp -= back	852:20:25368:25379	1011193	1	True				
ANR	1011680	AssignmentExpression	inp -= back		1011193	0		-=			
ANR	1011681	Identifier	inp		1011193	0					
ANR	1011682	Identifier	back		1011193	1					
ANR	1011683	IfStatement	if ( value >= threshold )		1011193	2					
ANR	1011684	Condition	value >= threshold	854:20:25419:25436	1011193	0	True				
ANR	1011685	RelationalExpression	value >= threshold		1011193	0		>=			
ANR	1011686	Identifier	value		1011193	0					
ANR	1011687	Identifier	threshold		1011193	1					
ANR	1011688	CompoundStatement		90:16:2735:2735	1011193	1					
ANR	1011689	ExpressionStatement	* outp = 1	856:20:25477:25486	1011193	0	True				
ANR	1011690	AssignmentExpression	* outp = 1		1011193	0		=			
ANR	1011691	UnaryOperationExpression	* outp		1011193	0					
ANR	1011692	UnaryOperator	*		1011193	0					
ANR	1011693	Identifier	outp		1011193	1					
ANR	1011694	PrimaryExpression	1		1011193	1					
ANR	1011695	ExpressionStatement	outp -= 4	856:31:25488:25497	1011193	1	True				
ANR	1011696	AssignmentExpression	outp -= 4		1011193	0		-=			
ANR	1011697	Identifier	outp		1011193	0					
ANR	1011698	PrimaryExpression	4		1011193	1					
ANR	1011699	ExpressionStatement	value -= max_value	857:20:25519:25537	1011193	2	True				
ANR	1011700	AssignmentExpression	value -= max_value		1011193	0		-=			
ANR	1011701	Identifier	value		1011193	0					
ANR	1011702	Identifier	max_value		1011193	1					
ANR	1011703	ElseStatement	else		1011193	0					
ANR	1011704	CompoundStatement		95:16:2874:2874	1011193	0					
ANR	1011705	ExpressionStatement	* outp = 0	861:20:25616:25625	1011193	0	True				
ANR	1011706	AssignmentExpression	* outp = 0		1011193	0		=			
ANR	1011707	UnaryOperationExpression	* outp		1011193	0					
ANR	1011708	UnaryOperator	*		1011193	0					
ANR	1011709	Identifier	outp		1011193	1					
ANR	1011710	PrimaryExpression	0		1011193	1					
ANR	1011711	ExpressionStatement	outp -= 4	861:31:25627:25636	1011193	1	True				
ANR	1011712	AssignmentExpression	outp -= 4		1011193	0		-=			
ANR	1011713	Identifier	outp		1011193	0					
ANR	1011714	PrimaryExpression	4		1011193	1					
ANR	1011715	ExpressionStatement	e_forward = value * 7 / 16	863:16:25672:25697	1011193	3	True				
ANR	1011716	AssignmentExpression	e_forward = value * 7 / 16		1011193	0		=			
ANR	1011717	Identifier	e_forward		1011193	0					
ANR	1011718	MultiplicativeExpression	value * 7 / 16		1011193	1		*			
ANR	1011719	Identifier	value		1011193	0					
ANR	1011720	MultiplicativeExpression	7 / 16		1011193	1		/			
ANR	1011721	PrimaryExpression	7		1011193	0					
ANR	1011722	PrimaryExpression	16		1011193	1					
ANR	1011723	ExpressionStatement	e_downleft = value * 3 / 16	864:16:25715:25740	1011193	4	True				
ANR	1011724	AssignmentExpression	e_downleft = value * 3 / 16		1011193	0		=			
ANR	1011725	Identifier	e_downleft		1011193	0					
ANR	1011726	MultiplicativeExpression	value * 3 / 16		1011193	1		*			
ANR	1011727	Identifier	value		1011193	0					
ANR	1011728	MultiplicativeExpression	3 / 16		1011193	1		/			
ANR	1011729	PrimaryExpression	3		1011193	0					
ANR	1011730	PrimaryExpression	16		1011193	1					
ANR	1011731	ExpressionStatement	e_down = value * 5 / 16	865:16:25758:25783	1011193	5	True				
ANR	1011732	AssignmentExpression	e_down = value * 5 / 16		1011193	0		=			
ANR	1011733	Identifier	e_down		1011193	0					
ANR	1011734	MultiplicativeExpression	value * 5 / 16		1011193	1		*			
ANR	1011735	Identifier	value		1011193	0					
ANR	1011736	MultiplicativeExpression	5 / 16		1011193	1		/			
ANR	1011737	PrimaryExpression	5		1011193	0					
ANR	1011738	PrimaryExpression	16		1011193	1					
ANR	1011739	ExpressionStatement	value -= e_forward + e_downleft + e_down	866:16:25801:25845	1011193	6	True				
ANR	1011740	AssignmentExpression	value -= e_forward + e_downleft + e_down		1011193	0		-=			
ANR	1011741	Identifier	value		1011193	0					
ANR	1011742	AdditiveExpression	e_forward + e_downleft + e_down		1011193	1		+			
ANR	1011743	Identifier	e_forward		1011193	0					
ANR	1011744	AdditiveExpression	e_downleft + e_down		1011193	1		+			
ANR	1011745	Identifier	e_downleft		1011193	0					
ANR	1011746	Identifier	e_down		1011193	1					
ANR	1011747	ExpressionStatement	errors [ 2 ] += e_downleft	867:16:25863:25886	1011193	7	True				
ANR	1011748	AssignmentExpression	errors [ 2 ] += e_downleft		1011193	0		+=			
ANR	1011749	ArrayIndexing	errors [ 2 ]		1011193	0					
ANR	1011750	Identifier	errors		1011193	0					
ANR	1011751	PrimaryExpression	2		1011193	1					
ANR	1011752	Identifier	e_downleft		1011193	1					
ANR	1011753	ExpressionStatement	errors [ 1 ] += e_down	868:16:25904:25923	1011193	8	True				
ANR	1011754	AssignmentExpression	errors [ 1 ] += e_down		1011193	0		+=			
ANR	1011755	ArrayIndexing	errors [ 1 ]		1011193	0					
ANR	1011756	Identifier	errors		1011193	0					
ANR	1011757	PrimaryExpression	1		1011193	1					
ANR	1011758	Identifier	e_down		1011193	1					
ANR	1011759	ExpressionStatement	* errors -- = value	869:16:25941:25960	1011193	9	True				
ANR	1011760	AssignmentExpression	* errors -- = value		1011193	0		=			
ANR	1011761	UnaryOperationExpression	* errors --		1011193	0					
ANR	1011762	UnaryOperator	*		1011193	0					
ANR	1011763	PostIncDecOperationExpression	errors --		1011193	1					
ANR	1011764	Identifier	errors		1011193	0					
ANR	1011765	IncDec	--		1011193	1					
ANR	1011766	Identifier	value		1011193	1					
ANR	1011767	ExpressionStatement	outp = in_buffer + awidth * factor * 4 - ( awidth * 4 )	872:8:25994:26041	1011193	2	True				
ANR	1011768	AssignmentExpression	outp = in_buffer + awidth * factor * 4 - ( awidth * 4 )		1011193	0		=			
ANR	1011769	Identifier	outp		1011193	0					
ANR	1011770	AdditiveExpression	in_buffer + awidth * factor * 4 - ( awidth * 4 )		1011193	1		+			
ANR	1011771	Identifier	in_buffer		1011193	0					
ANR	1011772	AdditiveExpression	awidth * factor * 4 - ( awidth * 4 )		1011193	1		-			
ANR	1011773	MultiplicativeExpression	awidth * factor * 4		1011193	0		*			
ANR	1011774	Identifier	awidth		1011193	0					
ANR	1011775	MultiplicativeExpression	factor * 4		1011193	1		*			
ANR	1011776	Identifier	factor		1011193	0					
ANR	1011777	PrimaryExpression	4		1011193	1					
ANR	1011778	MultiplicativeExpression	awidth * 4		1011193	1		*			
ANR	1011779	Identifier	awidth		1011193	0					
ANR	1011780	PrimaryExpression	4		1011193	1					
ANR	1011781	ExpressionStatement	"pack_8to1 ( out_buffer , outp , awidth * 4 )"	874:4:26053:26090	1011193	14	True				
ANR	1011782	CallExpression	"pack_8to1 ( out_buffer , outp , awidth * 4 )"		1011193	0					
ANR	1011783	Callee	pack_8to1		1011193	0					
ANR	1011784	Identifier	pack_8to1		1011193	0					
ANR	1011785	ArgumentList	out_buffer		1011193	1					
ANR	1011786	Argument	out_buffer		1011193	0					
ANR	1011787	Identifier	out_buffer		1011193	0					
ANR	1011788	Argument	outp		1011193	1					
ANR	1011789	Identifier	outp		1011193	0					
ANR	1011790	Argument	awidth * 4		1011193	2					
ANR	1011791	MultiplicativeExpression	awidth * 4		1011193	0		*			
ANR	1011792	Identifier	awidth		1011193	0					
ANR	1011793	PrimaryExpression	4		1011193	1					
ANR	1011794	ReturnType	static void		1011193	1					
ANR	1011795	Identifier	down_core4		1011193	2					
ANR	1011796	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1011193	3					
ANR	1011797	Parameter	gx_downscaler_t * ds	760:23:22444:22462	1011193	0	True				
ANR	1011798	ParameterType	gx_downscaler_t *		1011193	0					
ANR	1011799	Identifier	ds		1011193	1					
ANR	1011800	Parameter	byte * out_buffer	761:23:22488:22514	1011193	1	True				
ANR	1011801	ParameterType	byte *		1011193	0					
ANR	1011802	Identifier	out_buffer		1011193	1					
ANR	1011803	Parameter	byte * in_buffer	762:23:22540:22565	1011193	2	True				
ANR	1011804	ParameterType	byte *		1011193	0					
ANR	1011805	Identifier	in_buffer		1011193	1					
ANR	1011806	Parameter	int row	763:23:22591:22610	1011193	3	True				
ANR	1011807	ParameterType	int		1011193	0					
ANR	1011808	Identifier	row		1011193	1					
ANR	1011809	Parameter	int plane	764:23:22636:22657	1011193	4	True				
ANR	1011810	ParameterType	int		1011193	0					
ANR	1011811	Identifier	plane		1011193	1					
ANR	1011812	Parameter	int span	765:23:22696:22716	1011193	5	True				
ANR	1011813	ParameterType	int		1011193	0					
ANR	1011814	Identifier	span		1011193	1					
ANR	1011815	CFGEntryNode	ENTRY		1011193		True				
ANR	1011816	CFGExitNode	EXIT		1011193		True				
ANR	1011817	Symbol	plane		1011193						
ANR	1011818	Symbol	xx		1011193						
ANR	1011819	Symbol	awidth		1011193						
ANR	1011820	Symbol	in_buffer		1011193						
ANR	1011821	Symbol	back		1011193						
ANR	1011822	Symbol	threshold		1011193						
ANR	1011823	Symbol	ds		1011193						
ANR	1011824	Symbol	ds -> errors		1011193						
ANR	1011825	Symbol	outp		1011193						
ANR	1011826	Symbol	* ds		1011193						
ANR	1011827	Symbol	e_forward		1011193						
ANR	1011828	Symbol	ds -> width		1011193						
ANR	1011829	Symbol	row		1011193						
ANR	1011830	Symbol	* errors ++		1011193						
ANR	1011831	Symbol	* errors --		1011193						
ANR	1011832	Symbol	factor		1011193						
ANR	1011833	Symbol	value		1011193						
ANR	1011834	Symbol	comp		1011193						
ANR	1011835	Symbol	out_buffer		1011193						
ANR	1011836	Symbol	ds -> awidth		1011193						
ANR	1011837	Symbol	inp		1011193						
ANR	1011838	Symbol	* inp		1011193						
ANR	1011839	Symbol	* errors		1011193						
ANR	1011840	Symbol	pad_white		1011193						
ANR	1011841	Symbol	ds -> factor		1011193						
ANR	1011842	Symbol	x		1011193						
ANR	1011843	Symbol	width		1011193						
ANR	1011844	Symbol	y		1011193						
ANR	1011845	Symbol	e_downleft		1011193						
ANR	1011846	Symbol	* outp		1011193						
ANR	1011847	Symbol	errors		1011193						
ANR	1011848	Symbol	span		1011193						
ANR	1011849	Symbol	e_down		1011193						
ANR	1011850	Symbol	max_value		1011193						
ANR	1011851	Function	down_core4_ets	877:0:26095:27322							
ANR	1011852	FunctionDef	"down_core4_ets (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1011851	0					
ANR	1011853	CompoundStatement		883:0:26417:27322	1011851	0					
ANR	1011854	IdentifierDeclStatement	unsigned char * dest [ MAX_ETS_PLANES ] ;	884:4:26423:26458	1011851	0	True				
ANR	1011855	IdentifierDecl	* dest [ MAX_ETS_PLANES ]		1011851	0					
ANR	1011856	IdentifierDeclType	unsigned char * [ MAX_ETS_PLANES ]		1011851	0					
ANR	1011857	Identifier	dest		1011851	1					
ANR	1011858	Identifier	MAX_ETS_PLANES		1011851	2					
ANR	1011859	IdentifierDeclStatement	ETS_SrcPixel * src [ MAX_ETS_PLANES ] ;	885:4:26464:26497	1011851	1	True				
ANR	1011860	IdentifierDecl	* src [ MAX_ETS_PLANES ]		1011851	0					
ANR	1011861	IdentifierDeclType	ETS_SrcPixel * [ MAX_ETS_PLANES ]		1011851	0					
ANR	1011862	Identifier	src		1011851	1					
ANR	1011863	Identifier	MAX_ETS_PLANES		1011851	2					
ANR	1011864	IdentifierDeclStatement	"int pad_white , y ;"	886:4:26503:26519	1011851	2	True				
ANR	1011865	IdentifierDecl	pad_white		1011851	0					
ANR	1011866	IdentifierDeclType	int		1011851	0					
ANR	1011867	Identifier	pad_white		1011851	1					
ANR	1011868	IdentifierDecl	y		1011851	1					
ANR	1011869	IdentifierDeclType	int		1011851	0					
ANR	1011870	Identifier	y		1011851	1					
ANR	1011871	IdentifierDeclStatement	int factor = ds -> factor ;	887:4:26525:26548	1011851	3	True				
ANR	1011872	IdentifierDecl	factor = ds -> factor		1011851	0					
ANR	1011873	IdentifierDeclType	int		1011851	0					
ANR	1011874	Identifier	factor		1011851	1					
ANR	1011875	AssignmentExpression	factor = ds -> factor		1011851	2		=			
ANR	1011876	Identifier	factor		1011851	0					
ANR	1011877	PtrMemberAccess	ds -> factor		1011851	1					
ANR	1011878	Identifier	ds		1011851	0					
ANR	1011879	Identifier	factor		1011851	1					
ANR	1011880	ExpressionStatement	pad_white = ( ds -> awidth - ds -> width ) * factor * 4	889:4:26555:26604	1011851	4	True				
ANR	1011881	AssignmentExpression	pad_white = ( ds -> awidth - ds -> width ) * factor * 4		1011851	0		=			
ANR	1011882	Identifier	pad_white		1011851	0					
ANR	1011883	MultiplicativeExpression	( ds -> awidth - ds -> width ) * factor * 4		1011851	1		*			
ANR	1011884	AdditiveExpression	ds -> awidth - ds -> width		1011851	0		-			
ANR	1011885	PtrMemberAccess	ds -> awidth		1011851	0					
ANR	1011886	Identifier	ds		1011851	0					
ANR	1011887	Identifier	awidth		1011851	1					
ANR	1011888	PtrMemberAccess	ds -> width		1011851	1					
ANR	1011889	Identifier	ds		1011851	0					
ANR	1011890	Identifier	width		1011851	1					
ANR	1011891	MultiplicativeExpression	factor * 4		1011851	1		*			
ANR	1011892	Identifier	factor		1011851	0					
ANR	1011893	PrimaryExpression	4		1011851	1					
ANR	1011894	IfStatement	if ( pad_white < 0 )		1011851	5					
ANR	1011895	Condition	pad_white < 0	890:8:26614:26626	1011851	0	True				
ANR	1011896	RelationalExpression	pad_white < 0		1011851	0		<			
ANR	1011897	Identifier	pad_white		1011851	0					
ANR	1011898	PrimaryExpression	0		1011851	1					
ANR	1011899	ExpressionStatement	pad_white = 0	891:8:26637:26650	1011851	1	True				
ANR	1011900	AssignmentExpression	pad_white = 0		1011851	0		=			
ANR	1011901	Identifier	pad_white		1011851	0					
ANR	1011902	PrimaryExpression	0		1011851	1					
ANR	1011903	IfStatement	if ( pad_white )		1011851	6					
ANR	1011904	Condition	pad_white	893:8:26661:26669	1011851	0	True				
ANR	1011905	Identifier	pad_white		1011851	0					
ANR	1011906	CompoundStatement		13:8:268:323	1011851	1					
ANR	1011907	IdentifierDeclStatement	unsigned char * inp = in_buffer + ds -> width * factor * 4 ;	895:8:26686:26741	1011851	0	True				
ANR	1011908	IdentifierDecl	* inp = in_buffer + ds -> width * factor * 4		1011851	0					
ANR	1011909	IdentifierDeclType	unsigned char *		1011851	0					
ANR	1011910	Identifier	inp		1011851	1					
ANR	1011911	AssignmentExpression	* inp = in_buffer + ds -> width * factor * 4		1011851	2		=			
ANR	1011912	Identifier	inp		1011851	0					
ANR	1011913	AdditiveExpression	in_buffer + ds -> width * factor * 4		1011851	1		+			
ANR	1011914	Identifier	in_buffer		1011851	0					
ANR	1011915	MultiplicativeExpression	ds -> width * factor * 4		1011851	1		*			
ANR	1011916	PtrMemberAccess	ds -> width		1011851	0					
ANR	1011917	Identifier	ds		1011851	0					
ANR	1011918	Identifier	width		1011851	1					
ANR	1011919	MultiplicativeExpression	factor * 4		1011851	1		*			
ANR	1011920	Identifier	factor		1011851	0					
ANR	1011921	PrimaryExpression	4		1011851	1					
ANR	1011922	ForStatement	for ( y = factor ; y > 0 ; y -- )		1011851	1					
ANR	1011923	ForInit	y = factor ;	896:13:26756:26766	1011851	0	True				
ANR	1011924	AssignmentExpression	y = factor		1011851	0		=			
ANR	1011925	Identifier	y		1011851	0					
ANR	1011926	Identifier	factor		1011851	1					
ANR	1011927	Condition	y > 0	896:25:26768:26772	1011851	1	True				
ANR	1011928	RelationalExpression	y > 0		1011851	0		>			
ANR	1011929	Identifier	y		1011851	0					
ANR	1011930	PrimaryExpression	0		1011851	1					
ANR	1011931	PostIncDecOperationExpression	y --	896:32:26775:26777	1011851	2	True				
ANR	1011932	Identifier	y		1011851	0					
ANR	1011933	IncDec	--		1011851	1					
ANR	1011934	CompoundStatement		15:8:370:370	1011851	3					
ANR	1011935	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	898:12:26802:26830	1011851	0	True				
ANR	1011936	CallExpression	"memset ( inp , 0xFF , pad_white )"		1011851	0					
ANR	1011937	Callee	memset		1011851	0					
ANR	1011938	Identifier	memset		1011851	0					
ANR	1011939	ArgumentList	inp		1011851	1					
ANR	1011940	Argument	inp		1011851	0					
ANR	1011941	Identifier	inp		1011851	0					
ANR	1011942	Argument	0xFF		1011851	1					
ANR	1011943	PrimaryExpression	0xFF		1011851	0					
ANR	1011944	Argument	pad_white		1011851	2					
ANR	1011945	Identifier	pad_white		1011851	0					
ANR	1011946	ExpressionStatement	inp += span	899:12:26844:26855	1011851	1	True				
ANR	1011947	AssignmentExpression	inp += span		1011851	0		+=			
ANR	1011948	Identifier	inp		1011851	0					
ANR	1011949	Identifier	span		1011851	1					
ANR	1011950	IfStatement	if ( ds -> ets_downscale )		1011851	7					
ANR	1011951	Condition	ds -> ets_downscale	903:8:26882:26898	1011851	0	True				
ANR	1011952	PtrMemberAccess	ds -> ets_downscale		1011851	0					
ANR	1011953	Identifier	ds		1011851	0					
ANR	1011954	Identifier	ets_downscale		1011851	1					
ANR	1011955	ExpressionStatement	"ds -> ets_downscale ( ds , in_buffer , in_buffer , row , plane , span )"	904:8:26909:26970	1011851	1	True				
ANR	1011956	CallExpression	"ds -> ets_downscale ( ds , in_buffer , in_buffer , row , plane , span )"		1011851	0					
ANR	1011957	Callee	ds -> ets_downscale		1011851	0					
ANR	1011958	PtrMemberAccess	ds -> ets_downscale		1011851	0					
ANR	1011959	Identifier	ds		1011851	0					
ANR	1011960	Identifier	ets_downscale		1011851	1					
ANR	1011961	ArgumentList	ds		1011851	1					
ANR	1011962	Argument	ds		1011851	0					
ANR	1011963	Identifier	ds		1011851	0					
ANR	1011964	Argument	in_buffer		1011851	1					
ANR	1011965	Identifier	in_buffer		1011851	0					
ANR	1011966	Argument	in_buffer		1011851	2					
ANR	1011967	Identifier	in_buffer		1011851	0					
ANR	1011968	Argument	row		1011851	3					
ANR	1011969	Identifier	row		1011851	0					
ANR	1011970	Argument	plane		1011851	4					
ANR	1011971	Identifier	plane		1011851	0					
ANR	1011972	Argument	span		1011851	5					
ANR	1011973	Identifier	span		1011851	0					
ANR	1011974	ExpressionStatement	src [ 0 ] = in_buffer + 3	906:4:26977:26997	1011851	8	True				
ANR	1011975	AssignmentExpression	src [ 0 ] = in_buffer + 3		1011851	0		=			
ANR	1011976	ArrayIndexing	src [ 0 ]		1011851	0					
ANR	1011977	Identifier	src		1011851	0					
ANR	1011978	PrimaryExpression	0		1011851	1					
ANR	1011979	AdditiveExpression	in_buffer + 3		1011851	1		+			
ANR	1011980	Identifier	in_buffer		1011851	0					
ANR	1011981	PrimaryExpression	3		1011851	1					
ANR	1011982	ExpressionStatement	dest [ 0 ] = in_buffer + 3	907:4:27003:27024	1011851	9	True				
ANR	1011983	AssignmentExpression	dest [ 0 ] = in_buffer + 3		1011851	0		=			
ANR	1011984	ArrayIndexing	dest [ 0 ]		1011851	0					
ANR	1011985	Identifier	dest		1011851	0					
ANR	1011986	PrimaryExpression	0		1011851	1					
ANR	1011987	AdditiveExpression	in_buffer + 3		1011851	1		+			
ANR	1011988	Identifier	in_buffer		1011851	0					
ANR	1011989	PrimaryExpression	3		1011851	1					
ANR	1011990	ExpressionStatement	src [ 1 ] = in_buffer + 1	908:4:27030:27050	1011851	10	True				
ANR	1011991	AssignmentExpression	src [ 1 ] = in_buffer + 1		1011851	0		=			
ANR	1011992	ArrayIndexing	src [ 1 ]		1011851	0					
ANR	1011993	Identifier	src		1011851	0					
ANR	1011994	PrimaryExpression	1		1011851	1					
ANR	1011995	AdditiveExpression	in_buffer + 1		1011851	1		+			
ANR	1011996	Identifier	in_buffer		1011851	0					
ANR	1011997	PrimaryExpression	1		1011851	1					
ANR	1011998	ExpressionStatement	dest [ 1 ] = in_buffer + 1	909:4:27056:27077	1011851	11	True				
ANR	1011999	AssignmentExpression	dest [ 1 ] = in_buffer + 1		1011851	0		=			
ANR	1012000	ArrayIndexing	dest [ 1 ]		1011851	0					
ANR	1012001	Identifier	dest		1011851	0					
ANR	1012002	PrimaryExpression	1		1011851	1					
ANR	1012003	AdditiveExpression	in_buffer + 1		1011851	1		+			
ANR	1012004	Identifier	in_buffer		1011851	0					
ANR	1012005	PrimaryExpression	1		1011851	1					
ANR	1012006	ExpressionStatement	src [ 2 ] = in_buffer + 0	910:4:27083:27103	1011851	12	True				
ANR	1012007	AssignmentExpression	src [ 2 ] = in_buffer + 0		1011851	0		=			
ANR	1012008	ArrayIndexing	src [ 2 ]		1011851	0					
ANR	1012009	Identifier	src		1011851	0					
ANR	1012010	PrimaryExpression	2		1011851	1					
ANR	1012011	AdditiveExpression	in_buffer + 0		1011851	1		+			
ANR	1012012	Identifier	in_buffer		1011851	0					
ANR	1012013	PrimaryExpression	0		1011851	1					
ANR	1012014	ExpressionStatement	dest [ 2 ] = in_buffer + 0	911:4:27109:27130	1011851	13	True				
ANR	1012015	AssignmentExpression	dest [ 2 ] = in_buffer + 0		1011851	0		=			
ANR	1012016	ArrayIndexing	dest [ 2 ]		1011851	0					
ANR	1012017	Identifier	dest		1011851	0					
ANR	1012018	PrimaryExpression	2		1011851	1					
ANR	1012019	AdditiveExpression	in_buffer + 0		1011851	1		+			
ANR	1012020	Identifier	in_buffer		1011851	0					
ANR	1012021	PrimaryExpression	0		1011851	1					
ANR	1012022	ExpressionStatement	src [ 3 ] = in_buffer + 2	912:4:27136:27156	1011851	14	True				
ANR	1012023	AssignmentExpression	src [ 3 ] = in_buffer + 2		1011851	0		=			
ANR	1012024	ArrayIndexing	src [ 3 ]		1011851	0					
ANR	1012025	Identifier	src		1011851	0					
ANR	1012026	PrimaryExpression	3		1011851	1					
ANR	1012027	AdditiveExpression	in_buffer + 2		1011851	1		+			
ANR	1012028	Identifier	in_buffer		1011851	0					
ANR	1012029	PrimaryExpression	2		1011851	1					
ANR	1012030	ExpressionStatement	dest [ 3 ] = in_buffer + 2	913:4:27162:27183	1011851	15	True				
ANR	1012031	AssignmentExpression	dest [ 3 ] = in_buffer + 2		1011851	0		=			
ANR	1012032	ArrayIndexing	dest [ 3 ]		1011851	0					
ANR	1012033	Identifier	dest		1011851	0					
ANR	1012034	PrimaryExpression	3		1011851	1					
ANR	1012035	AdditiveExpression	in_buffer + 2		1011851	1		+			
ANR	1012036	Identifier	in_buffer		1011851	0					
ANR	1012037	PrimaryExpression	2		1011851	1					
ANR	1012038	Statement	ets_line	914:4:27189:27196	1011851	16	True				
ANR	1012039	Statement	(	914:12:27197:27197	1011851	17	True				
ANR	1012040	Statement	(	914:13:27198:27198	1011851	18	True				
ANR	1012041	Statement	ETS_Ctx	914:14:27199:27205	1011851	19	True				
ANR	1012042	Statement	*	914:22:27207:27207	1011851	20	True				
ANR	1012043	Statement	)	914:23:27208:27208	1011851	21	True				
ANR	1012044	Statement	ds	914:24:27209:27210	1011851	22	True				
ANR	1012045	Statement	->	914:26:27211:27212	1011851	23	True				
ANR	1012046	Statement	ets_config	914:28:27213:27222	1011851	24	True				
ANR	1012047	Statement	","	914:38:27223:27223	1011851	25	True				
ANR	1012048	Statement	dest	914:40:27225:27228	1011851	26	True				
ANR	1012049	Statement	","	914:44:27229:27229	1011851	27	True				
ANR	1012050	Statement	(	914:46:27231:27231	1011851	28	True				
ANR	1012051	Statement	const	914:47:27232:27236	1011851	29	True				
ANR	1012052	Statement	ETS_SrcPixel	914:53:27238:27249	1011851	30	True				
ANR	1012053	Statement	*	914:66:27251:27251	1011851	31	True				
ANR	1012054	Statement	const	914:68:27253:27257	1011851	32	True				
ANR	1012055	Statement	*	914:74:27259:27259	1011851	33	True				
ANR	1012056	Statement	)	914:75:27260:27260	1011851	34	True				
ANR	1012057	Statement	src	914:76:27261:27263	1011851	35	True				
ANR	1012058	Statement	)	914:79:27264:27264	1011851	36	True				
ANR	1012059	ExpressionStatement		914:80:27265:27265	1011851	37	True				
ANR	1012060	ExpressionStatement	"pack_8to1 ( out_buffer , in_buffer , ds -> awidth * 4 )"	916:4:27272:27320	1011851	38	True				
ANR	1012061	CallExpression	"pack_8to1 ( out_buffer , in_buffer , ds -> awidth * 4 )"		1011851	0					
ANR	1012062	Callee	pack_8to1		1011851	0					
ANR	1012063	Identifier	pack_8to1		1011851	0					
ANR	1012064	ArgumentList	out_buffer		1011851	1					
ANR	1012065	Argument	out_buffer		1011851	0					
ANR	1012066	Identifier	out_buffer		1011851	0					
ANR	1012067	Argument	in_buffer		1011851	1					
ANR	1012068	Identifier	in_buffer		1011851	0					
ANR	1012069	Argument	ds -> awidth * 4		1011851	2					
ANR	1012070	MultiplicativeExpression	ds -> awidth * 4		1011851	0		*			
ANR	1012071	PtrMemberAccess	ds -> awidth		1011851	0					
ANR	1012072	Identifier	ds		1011851	0					
ANR	1012073	Identifier	awidth		1011851	1					
ANR	1012074	PrimaryExpression	4		1011851	1					
ANR	1012075	ReturnType	static void		1011851	1					
ANR	1012076	Identifier	down_core4_ets		1011851	2					
ANR	1012077	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1011851	3					
ANR	1012078	Parameter	gx_downscaler_t * ds	877:27:26122:26140	1011851	0	True				
ANR	1012079	ParameterType	gx_downscaler_t *		1011851	0					
ANR	1012080	Identifier	ds		1011851	1					
ANR	1012081	Parameter	byte * out_buffer	878:27:26170:26196	1011851	1	True				
ANR	1012082	ParameterType	byte *		1011851	0					
ANR	1012083	Identifier	out_buffer		1011851	1					
ANR	1012084	Parameter	byte * in_buffer	879:27:26226:26251	1011851	2	True				
ANR	1012085	ParameterType	byte *		1011851	0					
ANR	1012086	Identifier	in_buffer		1011851	1					
ANR	1012087	Parameter	int row	880:27:26281:26300	1011851	3	True				
ANR	1012088	ParameterType	int		1011851	0					
ANR	1012089	Identifier	row		1011851	1					
ANR	1012090	Parameter	int plane	881:27:26330:26351	1011851	4	True				
ANR	1012091	ParameterType	int		1011851	0					
ANR	1012092	Identifier	plane		1011851	1					
ANR	1012093	Parameter	int span	882:27:26394:26414	1011851	5	True				
ANR	1012094	ParameterType	int		1011851	0					
ANR	1012095	Identifier	span		1011851	1					
ANR	1012096	CFGEntryNode	ENTRY		1011851		True				
ANR	1012097	CFGExitNode	EXIT		1011851		True				
ANR	1012098	Symbol	plane		1011851						
ANR	1012099	Symbol	out_buffer		1011851						
ANR	1012100	Symbol	in_buffer		1011851						
ANR	1012101	Symbol	src		1011851						
ANR	1012102	Symbol	* dest		1011851						
ANR	1012103	Symbol	ds -> awidth		1011851						
ANR	1012104	Symbol	inp		1011851						
ANR	1012105	Symbol	dest		1011851						
ANR	1012106	Symbol	* src		1011851						
ANR	1012107	Symbol	ds		1011851						
ANR	1012108	Symbol	ds -> ets_downscale		1011851						
ANR	1012109	Symbol	pad_white		1011851						
ANR	1012110	Symbol	* ds		1011851						
ANR	1012111	Symbol	ds -> factor		1011851						
ANR	1012112	Symbol	y		1011851						
ANR	1012113	Symbol	ds -> width		1011851						
ANR	1012114	Symbol	row		1011851						
ANR	1012115	Symbol	factor		1011851						
ANR	1012116	Symbol	span		1011851						
ANR	1012117	Function	down_core4_mfs	919:0:27325:33575							
ANR	1012118	FunctionDef	"down_core4_mfs (gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span)"		1012117	0					
ANR	1012119	CompoundStatement		925:0:27647:33575	1012117	0					
ANR	1012120	IdentifierDeclStatement	"int x , xx , y , value , comp ;"	926:4:27653:27685	1012117	0	True				
ANR	1012121	IdentifierDecl	x		1012117	0					
ANR	1012122	IdentifierDeclType	int		1012117	0					
ANR	1012123	Identifier	x		1012117	1					
ANR	1012124	IdentifierDecl	xx		1012117	1					
ANR	1012125	IdentifierDeclType	int		1012117	0					
ANR	1012126	Identifier	xx		1012117	1					
ANR	1012127	IdentifierDecl	y		1012117	2					
ANR	1012128	IdentifierDeclType	int		1012117	0					
ANR	1012129	Identifier	y		1012117	1					
ANR	1012130	IdentifierDecl	value		1012117	3					
ANR	1012131	IdentifierDeclType	int		1012117	0					
ANR	1012132	Identifier	value		1012117	1					
ANR	1012133	IdentifierDecl	comp		1012117	4					
ANR	1012134	IdentifierDeclType	int		1012117	0					
ANR	1012135	Identifier	comp		1012117	1					
ANR	1012136	IdentifierDeclStatement	"int e_downleft , e_down , e_forward = 0 ;"	927:4:27691:27735	1012117	1	True				
ANR	1012137	IdentifierDecl	e_downleft		1012117	0					
ANR	1012138	IdentifierDeclType	int		1012117	0					
ANR	1012139	Identifier	e_downleft		1012117	1					
ANR	1012140	IdentifierDecl	e_down		1012117	1					
ANR	1012141	IdentifierDeclType	int		1012117	0					
ANR	1012142	Identifier	e_down		1012117	1					
ANR	1012143	IdentifierDecl	e_forward = 0		1012117	2					
ANR	1012144	IdentifierDeclType	int		1012117	0					
ANR	1012145	Identifier	e_forward		1012117	1					
ANR	1012146	AssignmentExpression	e_forward = 0		1012117	2		=			
ANR	1012147	Identifier	e_forward		1012117	0					
ANR	1012148	PrimaryExpression	0		1012117	1					
ANR	1012149	IdentifierDeclStatement	int pad_white ;	928:4:27741:27761	1012117	2	True				
ANR	1012150	IdentifierDecl	pad_white		1012117	0					
ANR	1012151	IdentifierDeclType	int		1012117	0					
ANR	1012152	Identifier	pad_white		1012117	1					
ANR	1012153	IdentifierDeclStatement	"byte * inp , * outp ;"	929:4:27767:27788	1012117	3	True				
ANR	1012154	IdentifierDecl	* inp		1012117	0					
ANR	1012155	IdentifierDeclType	byte *		1012117	0					
ANR	1012156	Identifier	inp		1012117	1					
ANR	1012157	IdentifierDecl	* outp		1012117	1					
ANR	1012158	IdentifierDeclType	byte *		1012117	0					
ANR	1012159	Identifier	outp		1012117	1					
ANR	1012160	IdentifierDeclStatement	int width = ds -> width ;	930:4:27794:27826	1012117	4	True				
ANR	1012161	IdentifierDecl	width = ds -> width		1012117	0					
ANR	1012162	IdentifierDeclType	int		1012117	0					
ANR	1012163	Identifier	width		1012117	1					
ANR	1012164	AssignmentExpression	width = ds -> width		1012117	2		=			
ANR	1012165	Identifier	width		1012117	0					
ANR	1012166	PtrMemberAccess	ds -> width		1012117	1					
ANR	1012167	Identifier	ds		1012117	0					
ANR	1012168	Identifier	width		1012117	1					
ANR	1012169	IdentifierDeclStatement	int awidth = ds -> awidth ;	931:4:27832:27865	1012117	5	True				
ANR	1012170	IdentifierDecl	awidth = ds -> awidth		1012117	0					
ANR	1012171	IdentifierDeclType	int		1012117	0					
ANR	1012172	Identifier	awidth		1012117	1					
ANR	1012173	AssignmentExpression	awidth = ds -> awidth		1012117	2		=			
ANR	1012174	Identifier	awidth		1012117	0					
ANR	1012175	PtrMemberAccess	ds -> awidth		1012117	1					
ANR	1012176	Identifier	ds		1012117	0					
ANR	1012177	Identifier	awidth		1012117	1					
ANR	1012178	IdentifierDeclStatement	int factor = ds -> factor ;	932:4:27871:27904	1012117	6	True				
ANR	1012179	IdentifierDecl	factor = ds -> factor		1012117	0					
ANR	1012180	IdentifierDeclType	int		1012117	0					
ANR	1012181	Identifier	factor		1012117	1					
ANR	1012182	AssignmentExpression	factor = ds -> factor		1012117	2		=			
ANR	1012183	Identifier	factor		1012117	0					
ANR	1012184	PtrMemberAccess	ds -> factor		1012117	1					
ANR	1012185	Identifier	ds		1012117	0					
ANR	1012186	Identifier	factor		1012117	1					
ANR	1012187	IdentifierDeclStatement	int * errors ;	933:4:27910:27927	1012117	7	True				
ANR	1012188	IdentifierDecl	* errors		1012117	0					
ANR	1012189	IdentifierDeclType	int *		1012117	0					
ANR	1012190	Identifier	errors		1012117	1					
ANR	1012191	IdentifierDeclStatement	const int threshold = factor * factor * 128 ;	934:4:27933:27973	1012117	8	True				
ANR	1012192	IdentifierDecl	threshold = factor * factor * 128		1012117	0					
ANR	1012193	IdentifierDeclType	const int		1012117	0					
ANR	1012194	Identifier	threshold		1012117	1					
ANR	1012195	AssignmentExpression	threshold = factor * factor * 128		1012117	2		=			
ANR	1012196	Identifier	threshold		1012117	0					
ANR	1012197	MultiplicativeExpression	factor * factor * 128		1012117	1		*			
ANR	1012198	Identifier	factor		1012117	0					
ANR	1012199	MultiplicativeExpression	factor * 128		1012117	1		*			
ANR	1012200	Identifier	factor		1012117	0					
ANR	1012201	PrimaryExpression	128		1012117	1					
ANR	1012202	IdentifierDeclStatement	const int max_value = factor * factor * 255 ;	935:4:27979:28019	1012117	9	True				
ANR	1012203	IdentifierDecl	max_value = factor * factor * 255		1012117	0					
ANR	1012204	IdentifierDeclType	const int		1012117	0					
ANR	1012205	Identifier	max_value		1012117	1					
ANR	1012206	AssignmentExpression	max_value = factor * factor * 255		1012117	2		=			
ANR	1012207	Identifier	max_value		1012117	0					
ANR	1012208	MultiplicativeExpression	factor * factor * 255		1012117	1		*			
ANR	1012209	Identifier	factor		1012117	0					
ANR	1012210	MultiplicativeExpression	factor * 255		1012117	1		*			
ANR	1012211	Identifier	factor		1012117	0					
ANR	1012212	PrimaryExpression	255		1012117	1					
ANR	1012213	IdentifierDeclStatement	byte * mfs_data ;	936:4:28025:28044	1012117	10	True				
ANR	1012214	IdentifierDecl	* mfs_data		1012117	0					
ANR	1012215	IdentifierDeclType	byte *		1012117	0					
ANR	1012216	Identifier	mfs_data		1012117	1					
ANR	1012217	ExpressionStatement	pad_white = ( awidth - width ) * factor * 4	938:4:28051:28092	1012117	11	True				
ANR	1012218	AssignmentExpression	pad_white = ( awidth - width ) * factor * 4		1012117	0		=			
ANR	1012219	Identifier	pad_white		1012117	0					
ANR	1012220	MultiplicativeExpression	( awidth - width ) * factor * 4		1012117	1		*			
ANR	1012221	AdditiveExpression	awidth - width		1012117	0		-			
ANR	1012222	Identifier	awidth		1012117	0					
ANR	1012223	Identifier	width		1012117	1					
ANR	1012224	MultiplicativeExpression	factor * 4		1012117	1		*			
ANR	1012225	Identifier	factor		1012117	0					
ANR	1012226	PrimaryExpression	4		1012117	1					
ANR	1012227	IfStatement	if ( pad_white < 0 )		1012117	12					
ANR	1012228	Condition	pad_white < 0	939:8:28102:28114	1012117	0	True				
ANR	1012229	RelationalExpression	pad_white < 0		1012117	0		<			
ANR	1012230	Identifier	pad_white		1012117	0					
ANR	1012231	PrimaryExpression	0		1012117	1					
ANR	1012232	ExpressionStatement	pad_white = 0	940:8:28125:28138	1012117	1	True				
ANR	1012233	AssignmentExpression	pad_white = 0		1012117	0		=			
ANR	1012234	Identifier	pad_white		1012117	0					
ANR	1012235	PrimaryExpression	0		1012117	1					
ANR	1012236	IfStatement	if ( pad_white )		1012117	13					
ANR	1012237	Condition	pad_white	942:8:28149:28157	1012117	0	True				
ANR	1012238	Identifier	pad_white		1012117	0					
ANR	1012239	CompoundStatement		19:4:516:516	1012117	1					
ANR	1012240	ExpressionStatement	inp = in_buffer + width * factor * 4	944:8:28174:28206	1012117	0	True				
ANR	1012241	AssignmentExpression	inp = in_buffer + width * factor * 4		1012117	0		=			
ANR	1012242	Identifier	inp		1012117	0					
ANR	1012243	AdditiveExpression	in_buffer + width * factor * 4		1012117	1		+			
ANR	1012244	Identifier	in_buffer		1012117	0					
ANR	1012245	MultiplicativeExpression	width * factor * 4		1012117	1		*			
ANR	1012246	Identifier	width		1012117	0					
ANR	1012247	MultiplicativeExpression	factor * 4		1012117	1		*			
ANR	1012248	Identifier	factor		1012117	0					
ANR	1012249	PrimaryExpression	4		1012117	1					
ANR	1012250	ForStatement	for ( y = factor * 4 ; y > 0 ; y -- )		1012117	1					
ANR	1012251	ForInit	y = factor * 4 ;	945:13:28221:28233	1012117	0	True				
ANR	1012252	AssignmentExpression	y = factor * 4		1012117	0		=			
ANR	1012253	Identifier	y		1012117	0					
ANR	1012254	MultiplicativeExpression	factor * 4		1012117	1		*			
ANR	1012255	Identifier	factor		1012117	0					
ANR	1012256	PrimaryExpression	4		1012117	1					
ANR	1012257	Condition	y > 0	945:27:28235:28239	1012117	1	True				
ANR	1012258	RelationalExpression	y > 0		1012117	0		>			
ANR	1012259	Identifier	y		1012117	0					
ANR	1012260	PrimaryExpression	0		1012117	1					
ANR	1012261	PostIncDecOperationExpression	y --	945:34:28242:28244	1012117	2	True				
ANR	1012262	Identifier	y		1012117	0					
ANR	1012263	IncDec	--		1012117	1					
ANR	1012264	CompoundStatement		22:8:607:607	1012117	3					
ANR	1012265	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	947:12:28269:28297	1012117	0	True				
ANR	1012266	CallExpression	"memset ( inp , 0xFF , pad_white )"		1012117	0					
ANR	1012267	Callee	memset		1012117	0					
ANR	1012268	Identifier	memset		1012117	0					
ANR	1012269	ArgumentList	inp		1012117	1					
ANR	1012270	Argument	inp		1012117	0					
ANR	1012271	Identifier	inp		1012117	0					
ANR	1012272	Argument	0xFF		1012117	1					
ANR	1012273	PrimaryExpression	0xFF		1012117	0					
ANR	1012274	Argument	pad_white		1012117	2					
ANR	1012275	Identifier	pad_white		1012117	0					
ANR	1012276	ExpressionStatement	inp += span	948:12:28311:28322	1012117	1	True				
ANR	1012277	AssignmentExpression	inp += span		1012117	0		+=			
ANR	1012278	Identifier	inp		1012117	0					
ANR	1012279	Identifier	span		1012117	1					
ANR	1012280	IfStatement	if ( ( row & 1 ) == 0 )		1012117	14					
ANR	1012281	Condition	( row & 1 ) == 0	952:8:28349:28362	1012117	0	True				
ANR	1012282	EqualityExpression	( row & 1 ) == 0		1012117	0		==			
ANR	1012283	BitAndExpression	row & 1		1012117	0		&			
ANR	1012284	Identifier	row		1012117	0					
ANR	1012285	PrimaryExpression	1		1012117	1					
ANR	1012286	PrimaryExpression	0		1012117	1					
ANR	1012287	CompoundStatement		31:8:792:826	1012117	1					
ANR	1012288	IdentifierDeclStatement	const int back = span * factor - 4 ;	955:8:28440:28474	1012117	0	True				
ANR	1012289	IdentifierDecl	back = span * factor - 4		1012117	0					
ANR	1012290	IdentifierDeclType	const int		1012117	0					
ANR	1012291	Identifier	back		1012117	1					
ANR	1012292	AssignmentExpression	back = span * factor - 4		1012117	2		=			
ANR	1012293	Identifier	back		1012117	0					
ANR	1012294	AdditiveExpression	span * factor - 4		1012117	1		-			
ANR	1012295	MultiplicativeExpression	span * factor		1012117	0		*			
ANR	1012296	Identifier	span		1012117	0					
ANR	1012297	Identifier	factor		1012117	1					
ANR	1012298	PrimaryExpression	4		1012117	1					
ANR	1012299	ForStatement	for ( comp = 0 ; comp < 4 ; comp ++ )		1012117	1					
ANR	1012300	ForInit	comp = 0 ;	956:13:28489:28497	1012117	0	True				
ANR	1012301	AssignmentExpression	comp = 0		1012117	0		=			
ANR	1012302	Identifier	comp		1012117	0					
ANR	1012303	PrimaryExpression	0		1012117	1					
ANR	1012304	Condition	comp < 4	956:23:28499:28506	1012117	1	True				
ANR	1012305	RelationalExpression	comp < 4		1012117	0		<			
ANR	1012306	Identifier	comp		1012117	0					
ANR	1012307	PrimaryExpression	4		1012117	1					
ANR	1012308	PostIncDecOperationExpression	comp ++	956:33:28509:28514	1012117	2	True				
ANR	1012309	Identifier	comp		1012117	0					
ANR	1012310	IncDec	++		1012117	1					
ANR	1012311	CompoundStatement		34:12:891:918	1012117	3					
ANR	1012312	IdentifierDeclStatement	"byte mfs , force_forward = 0 ;"	958:12:28539:28566	1012117	0	True				
ANR	1012313	IdentifierDecl	mfs		1012117	0					
ANR	1012314	IdentifierDeclType	byte		1012117	0					
ANR	1012315	Identifier	mfs		1012117	1					
ANR	1012316	IdentifierDecl	force_forward = 0		1012117	1					
ANR	1012317	IdentifierDeclType	byte		1012117	0					
ANR	1012318	Identifier	force_forward		1012117	1					
ANR	1012319	AssignmentExpression	force_forward = 0		1012117	2		=			
ANR	1012320	Identifier	force_forward		1012117	0					
ANR	1012321	PrimaryExpression	0		1012117	1					
ANR	1012322	ExpressionStatement	errors = ds -> errors + ( awidth + 3 ) * comp + 2	959:12:28580:28621	1012117	1	True				
ANR	1012323	AssignmentExpression	errors = ds -> errors + ( awidth + 3 ) * comp + 2		1012117	0		=			
ANR	1012324	Identifier	errors		1012117	0					
ANR	1012325	AdditiveExpression	ds -> errors + ( awidth + 3 ) * comp + 2		1012117	1		+			
ANR	1012326	PtrMemberAccess	ds -> errors		1012117	0					
ANR	1012327	Identifier	ds		1012117	0					
ANR	1012328	Identifier	errors		1012117	1					
ANR	1012329	AdditiveExpression	( awidth + 3 ) * comp + 2		1012117	1		+			
ANR	1012330	MultiplicativeExpression	( awidth + 3 ) * comp		1012117	0		*			
ANR	1012331	AdditiveExpression	awidth + 3		1012117	0		+			
ANR	1012332	Identifier	awidth		1012117	0					
ANR	1012333	PrimaryExpression	3		1012117	1					
ANR	1012334	Identifier	comp		1012117	1					
ANR	1012335	PrimaryExpression	2		1012117	1					
ANR	1012336	ExpressionStatement	inp = in_buffer + comp	960:12:28635:28657	1012117	2	True				
ANR	1012337	AssignmentExpression	inp = in_buffer + comp		1012117	0		=			
ANR	1012338	Identifier	inp		1012117	0					
ANR	1012339	AdditiveExpression	in_buffer + comp		1012117	1		+			
ANR	1012340	Identifier	in_buffer		1012117	0					
ANR	1012341	Identifier	comp		1012117	1					
ANR	1012342	ExpressionStatement	outp = inp	961:12:28671:28681	1012117	3	True				
ANR	1012343	AssignmentExpression	outp = inp		1012117	0		=			
ANR	1012344	Identifier	outp		1012117	0					
ANR	1012345	Identifier	inp		1012117	1					
ANR	1012346	ExpressionStatement	mfs_data = ds -> mfs_data + ( awidth + 1 ) * comp	962:12:28695:28736	1012117	4	True				
ANR	1012347	AssignmentExpression	mfs_data = ds -> mfs_data + ( awidth + 1 ) * comp		1012117	0		=			
ANR	1012348	Identifier	mfs_data		1012117	0					
ANR	1012349	AdditiveExpression	ds -> mfs_data + ( awidth + 1 ) * comp		1012117	1		+			
ANR	1012350	PtrMemberAccess	ds -> mfs_data		1012117	0					
ANR	1012351	Identifier	ds		1012117	0					
ANR	1012352	Identifier	mfs_data		1012117	1					
ANR	1012353	MultiplicativeExpression	( awidth + 1 ) * comp		1012117	1		*			
ANR	1012354	AdditiveExpression	awidth + 1		1012117	0		+			
ANR	1012355	Identifier	awidth		1012117	0					
ANR	1012356	PrimaryExpression	1		1012117	1					
ANR	1012357	Identifier	comp		1012117	1					
ANR	1012358	ExpressionStatement	* mfs_data ++ = mfs_clear	963:12:28750:28773	1012117	5	True				
ANR	1012359	AssignmentExpression	* mfs_data ++ = mfs_clear		1012117	0		=			
ANR	1012360	UnaryOperationExpression	* mfs_data ++		1012117	0					
ANR	1012361	UnaryOperator	*		1012117	0					
ANR	1012362	PostIncDecOperationExpression	mfs_data ++		1012117	1					
ANR	1012363	Identifier	mfs_data		1012117	0					
ANR	1012364	IncDec	++		1012117	1					
ANR	1012365	Identifier	mfs_clear		1012117	1					
ANR	1012366	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1012117	6					
ANR	1012367	ForInit	x = awidth ;	964:17:28792:28802	1012117	0	True				
ANR	1012368	AssignmentExpression	x = awidth		1012117	0		=			
ANR	1012369	Identifier	x		1012117	0					
ANR	1012370	Identifier	awidth		1012117	1					
ANR	1012371	Condition	x > 0	964:29:28804:28808	1012117	1	True				
ANR	1012372	RelationalExpression	x > 0		1012117	0		>			
ANR	1012373	Identifier	x		1012117	0					
ANR	1012374	PrimaryExpression	0		1012117	1					
ANR	1012375	PostIncDecOperationExpression	x --	964:36:28811:28813	1012117	2	True				
ANR	1012376	Identifier	x		1012117	0					
ANR	1012377	IncDec	--		1012117	1					
ANR	1012378	CompoundStatement		41:12:1180:1180	1012117	3					
ANR	1012379	ExpressionStatement	value = e_forward + * errors	966:16:28846:28873	1012117	0	True				
ANR	1012380	AssignmentExpression	value = e_forward + * errors		1012117	0		=			
ANR	1012381	Identifier	value		1012117	0					
ANR	1012382	AdditiveExpression	e_forward + * errors		1012117	1		+			
ANR	1012383	Identifier	e_forward		1012117	0					
ANR	1012384	UnaryOperationExpression	* errors		1012117	1					
ANR	1012385	UnaryOperator	*		1012117	0					
ANR	1012386	Identifier	errors		1012117	1					
ANR	1012387	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1012117	1					
ANR	1012388	ForInit	xx = factor ;	967:21:28896:28907	1012117	0	True				
ANR	1012389	AssignmentExpression	xx = factor		1012117	0		=			
ANR	1012390	Identifier	xx		1012117	0					
ANR	1012391	Identifier	factor		1012117	1					
ANR	1012392	Condition	xx > 0	967:34:28909:28914	1012117	1	True				
ANR	1012393	RelationalExpression	xx > 0		1012117	0		>			
ANR	1012394	Identifier	xx		1012117	0					
ANR	1012395	PrimaryExpression	0		1012117	1					
ANR	1012396	PostIncDecOperationExpression	xx --	967:42:28917:28920	1012117	2	True				
ANR	1012397	Identifier	xx		1012117	0					
ANR	1012398	IncDec	--		1012117	1					
ANR	1012399	CompoundStatement		44:16:1291:1291	1012117	3					
ANR	1012400	ForStatement	for ( y = factor ; y > 0 ; y -- )		1012117	0					
ANR	1012401	ForInit	y = factor ;	969:25:28966:28976	1012117	0	True				
ANR	1012402	AssignmentExpression	y = factor		1012117	0		=			
ANR	1012403	Identifier	y		1012117	0					
ANR	1012404	Identifier	factor		1012117	1					
ANR	1012405	Condition	y > 0	969:37:28978:28982	1012117	1	True				
ANR	1012406	RelationalExpression	y > 0		1012117	0		>			
ANR	1012407	Identifier	y		1012117	0					
ANR	1012408	PrimaryExpression	0		1012117	1					
ANR	1012409	PostIncDecOperationExpression	y --	969:44:28985:28987	1012117	2	True				
ANR	1012410	Identifier	y		1012117	0					
ANR	1012411	IncDec	--		1012117	1					
ANR	1012412	CompoundStatement		46:20:1362:1362	1012117	3					
ANR	1012413	ExpressionStatement	value += * inp	971:24:29036:29049	1012117	0	True				
ANR	1012414	AssignmentExpression	value += * inp		1012117	0		+=			
ANR	1012415	Identifier	value		1012117	0					
ANR	1012416	UnaryOperationExpression	* inp		1012117	1					
ANR	1012417	UnaryOperator	*		1012117	0					
ANR	1012418	Identifier	inp		1012117	1					
ANR	1012419	ExpressionStatement	inp += span	972:24:29075:29086	1012117	1	True				
ANR	1012420	AssignmentExpression	inp += span		1012117	0		+=			
ANR	1012421	Identifier	inp		1012117	0					
ANR	1012422	Identifier	span		1012117	1					
ANR	1012423	ExpressionStatement	inp -= back	974:20:29130:29141	1012117	1	True				
ANR	1012424	AssignmentExpression	inp -= back		1012117	0		-=			
ANR	1012425	Identifier	inp		1012117	0					
ANR	1012426	Identifier	back		1012117	1					
ANR	1012427	ExpressionStatement	mfs = * mfs_data	976:16:29177:29192	1012117	2	True				
ANR	1012428	AssignmentExpression	mfs = * mfs_data		1012117	0		=			
ANR	1012429	Identifier	mfs		1012117	0					
ANR	1012430	UnaryOperationExpression	* mfs_data		1012117	1					
ANR	1012431	UnaryOperator	*		1012117	0					
ANR	1012432	Identifier	mfs_data		1012117	1					
ANR	1012433	ExpressionStatement	* mfs_data ++ = mfs_clear	977:16:29210:29233	1012117	3	True				
ANR	1012434	AssignmentExpression	* mfs_data ++ = mfs_clear		1012117	0		=			
ANR	1012435	UnaryOperationExpression	* mfs_data ++		1012117	0					
ANR	1012436	UnaryOperator	*		1012117	0					
ANR	1012437	PostIncDecOperationExpression	mfs_data ++		1012117	1					
ANR	1012438	Identifier	mfs_data		1012117	0					
ANR	1012439	IncDec	++		1012117	1					
ANR	1012440	Identifier	mfs_clear		1012117	1					
ANR	1012441	IfStatement	if ( ( mfs & mfs_force_off ) || force_forward )		1012117	4					
ANR	1012442	Condition	( mfs & mfs_force_off ) || force_forward	978:20:29255:29292	1012117	0	True				
ANR	1012443	OrExpression	( mfs & mfs_force_off ) || force_forward		1012117	0		||			
ANR	1012444	BitAndExpression	mfs & mfs_force_off		1012117	0		&			
ANR	1012445	Identifier	mfs		1012117	0					
ANR	1012446	Identifier	mfs_force_off		1012117	1					
ANR	1012447	Identifier	force_forward		1012117	1					
ANR	1012448	CompoundStatement		55:16:1663:1663	1012117	1					
ANR	1012449	ExpressionStatement	* outp = 1	981:20:29387:29396	1012117	0	True				
ANR	1012450	AssignmentExpression	* outp = 1		1012117	0		=			
ANR	1012451	UnaryOperationExpression	* outp		1012117	0					
ANR	1012452	UnaryOperator	*		1012117	0					
ANR	1012453	Identifier	outp		1012117	1					
ANR	1012454	PrimaryExpression	1		1012117	1					
ANR	1012455	ExpressionStatement	outp += 4	981:31:29398:29407	1012117	1	True				
ANR	1012456	AssignmentExpression	outp += 4		1012117	0		+=			
ANR	1012457	Identifier	outp		1012117	0					
ANR	1012458	PrimaryExpression	4		1012117	1					
ANR	1012459	ExpressionStatement	value -= max_value	982:20:29429:29447	1012117	2	True				
ANR	1012460	AssignmentExpression	value -= max_value		1012117	0		-=			
ANR	1012461	Identifier	value		1012117	0					
ANR	1012462	Identifier	max_value		1012117	1					
ANR	1012463	ExpressionStatement	force_forward = 0	983:20:29469:29486	1012117	3	True				
ANR	1012464	AssignmentExpression	force_forward = 0		1012117	0		=			
ANR	1012465	Identifier	force_forward		1012117	0					
ANR	1012466	PrimaryExpression	0		1012117	1					
ANR	1012467	ElseStatement	else		1012117	0					
ANR	1012468	IfStatement	if ( value >= threshold )		1012117	0					
ANR	1012469	Condition	value >= threshold	985:25:29531:29548	1012117	0	True				
ANR	1012470	RelationalExpression	value >= threshold		1012117	0		>=			
ANR	1012471	Identifier	value		1012117	0					
ANR	1012472	Identifier	threshold		1012117	1					
ANR	1012473	CompoundStatement		62:16:1919:1919	1012117	1					
ANR	1012474	ExpressionStatement	* outp = 1	988:20:29638:29647	1012117	0	True				
ANR	1012475	AssignmentExpression	* outp = 1		1012117	0		=			
ANR	1012476	UnaryOperationExpression	* outp		1012117	0					
ANR	1012477	UnaryOperator	*		1012117	0					
ANR	1012478	Identifier	outp		1012117	1					
ANR	1012479	PrimaryExpression	1		1012117	1					
ANR	1012480	ExpressionStatement	outp += 4	988:31:29649:29658	1012117	1	True				
ANR	1012481	AssignmentExpression	outp += 4		1012117	0		+=			
ANR	1012482	Identifier	outp		1012117	0					
ANR	1012483	PrimaryExpression	4		1012117	1					
ANR	1012484	ExpressionStatement	value -= max_value	989:20:29680:29698	1012117	2	True				
ANR	1012485	AssignmentExpression	value -= max_value		1012117	0		-=			
ANR	1012486	Identifier	value		1012117	0					
ANR	1012487	Identifier	max_value		1012117	1					
ANR	1012488	IfStatement	if ( ( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 ) )		1012117	3					
ANR	1012489	Condition	( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 )	990:24:29724:29839	1012117	0	True				
ANR	1012490	EqualityExpression	( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 )		1012117	0		!=			
ANR	1012491	BitAndExpression	mfs & ( mfs_above_is_0 | mfs_above_left_is_0 )		1012117	0		&			
ANR	1012492	Identifier	mfs		1012117	0					
ANR	1012493	InclusiveOrExpression	mfs_above_is_0 | mfs_above_left_is_0		1012117	1		|			
ANR	1012494	Identifier	mfs_above_is_0		1012117	0					
ANR	1012495	Identifier	mfs_above_left_is_0		1012117	1					
ANR	1012496	InclusiveOrExpression	mfs_above_is_0 | mfs_above_left_is_0		1012117	1		|			
ANR	1012497	Identifier	mfs_above_is_0		1012117	0					
ANR	1012498	Identifier	mfs_above_left_is_0		1012117	1					
ANR	1012499	CompoundStatement		68:20:2214:2214	1012117	1					
ANR	1012500	ExpressionStatement	mfs_data [ - 2 ] |= mfs_force_off	995:24:30002:30031	1012117	0	True				
ANR	1012501	AssignmentExpression	mfs_data [ - 2 ] |= mfs_force_off		1012117	0		|=			
ANR	1012502	ArrayIndexing	mfs_data [ - 2 ]		1012117	0					
ANR	1012503	Identifier	mfs_data		1012117	0					
ANR	1012504	UnaryOperationExpression	- 2		1012117	1					
ANR	1012505	UnaryOperator	-		1012117	0					
ANR	1012506	PrimaryExpression	2		1012117	1					
ANR	1012507	Identifier	mfs_force_off		1012117	1					
ANR	1012508	ExpressionStatement	mfs_data [ - 1 ] |= mfs_force_off	996:24:30057:30086	1012117	1	True				
ANR	1012509	AssignmentExpression	mfs_data [ - 1 ] |= mfs_force_off		1012117	0		|=			
ANR	1012510	ArrayIndexing	mfs_data [ - 1 ]		1012117	0					
ANR	1012511	Identifier	mfs_data		1012117	0					
ANR	1012512	UnaryOperationExpression	- 1		1012117	1					
ANR	1012513	UnaryOperator	-		1012117	0					
ANR	1012514	PrimaryExpression	1		1012117	1					
ANR	1012515	Identifier	mfs_force_off		1012117	1					
ANR	1012516	ExpressionStatement	force_forward = 1	997:24:30112:30129	1012117	2	True				
ANR	1012517	AssignmentExpression	force_forward = 1		1012117	0		=			
ANR	1012518	Identifier	force_forward		1012117	0					
ANR	1012519	PrimaryExpression	1		1012117	1					
ANR	1012520	ElseStatement	else		1012117	0					
ANR	1012521	CompoundStatement		76:20:2550:2550	1012117	0					
ANR	1012522	ExpressionStatement	mfs_data [ - 2 ] |= mfs_above_is_0	1003:24:30342:30372	1012117	0	True				
ANR	1012523	AssignmentExpression	mfs_data [ - 2 ] |= mfs_above_is_0		1012117	0		|=			
ANR	1012524	ArrayIndexing	mfs_data [ - 2 ]		1012117	0					
ANR	1012525	Identifier	mfs_data		1012117	0					
ANR	1012526	UnaryOperationExpression	- 2		1012117	1					
ANR	1012527	UnaryOperator	-		1012117	0					
ANR	1012528	PrimaryExpression	2		1012117	1					
ANR	1012529	Identifier	mfs_above_is_0		1012117	1					
ANR	1012530	ExpressionStatement	mfs_data [ - 1 ] |= mfs_above_left_is_0	1004:24:30398:30433	1012117	1	True				
ANR	1012531	AssignmentExpression	mfs_data [ - 1 ] |= mfs_above_left_is_0		1012117	0		|=			
ANR	1012532	ArrayIndexing	mfs_data [ - 1 ]		1012117	0					
ANR	1012533	Identifier	mfs_data		1012117	0					
ANR	1012534	UnaryOperationExpression	- 1		1012117	1					
ANR	1012535	UnaryOperator	-		1012117	0					
ANR	1012536	PrimaryExpression	1		1012117	1					
ANR	1012537	Identifier	mfs_above_left_is_0		1012117	1					
ANR	1012538	ElseStatement	else		1012117	0					
ANR	1012539	CompoundStatement		84:16:2864:2864	1012117	0					
ANR	1012540	ExpressionStatement	* outp = 0	1009:20:30534:30543	1012117	0	True				
ANR	1012541	AssignmentExpression	* outp = 0		1012117	0		=			
ANR	1012542	UnaryOperationExpression	* outp		1012117	0					
ANR	1012543	UnaryOperator	*		1012117	0					
ANR	1012544	Identifier	outp		1012117	1					
ANR	1012545	PrimaryExpression	0		1012117	1					
ANR	1012546	ExpressionStatement	outp += 4	1009:31:30545:30554	1012117	1	True				
ANR	1012547	AssignmentExpression	outp += 4		1012117	0		+=			
ANR	1012548	Identifier	outp		1012117	0					
ANR	1012549	PrimaryExpression	4		1012117	1					
ANR	1012550	ExpressionStatement	e_forward = value * 7 / 16	1011:16:30590:30615	1012117	5	True				
ANR	1012551	AssignmentExpression	e_forward = value * 7 / 16		1012117	0		=			
ANR	1012552	Identifier	e_forward		1012117	0					
ANR	1012553	MultiplicativeExpression	value * 7 / 16		1012117	1		*			
ANR	1012554	Identifier	value		1012117	0					
ANR	1012555	MultiplicativeExpression	7 / 16		1012117	1		/			
ANR	1012556	PrimaryExpression	7		1012117	0					
ANR	1012557	PrimaryExpression	16		1012117	1					
ANR	1012558	ExpressionStatement	e_downleft = value * 3 / 16	1012:16:30633:30658	1012117	6	True				
ANR	1012559	AssignmentExpression	e_downleft = value * 3 / 16		1012117	0		=			
ANR	1012560	Identifier	e_downleft		1012117	0					
ANR	1012561	MultiplicativeExpression	value * 3 / 16		1012117	1		*			
ANR	1012562	Identifier	value		1012117	0					
ANR	1012563	MultiplicativeExpression	3 / 16		1012117	1		/			
ANR	1012564	PrimaryExpression	3		1012117	0					
ANR	1012565	PrimaryExpression	16		1012117	1					
ANR	1012566	ExpressionStatement	e_down = value * 5 / 16	1013:16:30676:30701	1012117	7	True				
ANR	1012567	AssignmentExpression	e_down = value * 5 / 16		1012117	0		=			
ANR	1012568	Identifier	e_down		1012117	0					
ANR	1012569	MultiplicativeExpression	value * 5 / 16		1012117	1		*			
ANR	1012570	Identifier	value		1012117	0					
ANR	1012571	MultiplicativeExpression	5 / 16		1012117	1		/			
ANR	1012572	PrimaryExpression	5		1012117	0					
ANR	1012573	PrimaryExpression	16		1012117	1					
ANR	1012574	ExpressionStatement	value -= e_forward + e_downleft + e_down	1014:16:30719:30763	1012117	8	True				
ANR	1012575	AssignmentExpression	value -= e_forward + e_downleft + e_down		1012117	0		-=			
ANR	1012576	Identifier	value		1012117	0					
ANR	1012577	AdditiveExpression	e_forward + e_downleft + e_down		1012117	1		+			
ANR	1012578	Identifier	e_forward		1012117	0					
ANR	1012579	AdditiveExpression	e_downleft + e_down		1012117	1		+			
ANR	1012580	Identifier	e_downleft		1012117	0					
ANR	1012581	Identifier	e_down		1012117	1					
ANR	1012582	ExpressionStatement	errors [ - 2 ] += e_downleft	1015:16:30781:30805	1012117	9	True				
ANR	1012583	AssignmentExpression	errors [ - 2 ] += e_downleft		1012117	0		+=			
ANR	1012584	ArrayIndexing	errors [ - 2 ]		1012117	0					
ANR	1012585	Identifier	errors		1012117	0					
ANR	1012586	UnaryOperationExpression	- 2		1012117	1					
ANR	1012587	UnaryOperator	-		1012117	0					
ANR	1012588	PrimaryExpression	2		1012117	1					
ANR	1012589	Identifier	e_downleft		1012117	1					
ANR	1012590	ExpressionStatement	errors [ - 1 ] += e_down	1016:16:30823:30843	1012117	10	True				
ANR	1012591	AssignmentExpression	errors [ - 1 ] += e_down		1012117	0		+=			
ANR	1012592	ArrayIndexing	errors [ - 1 ]		1012117	0					
ANR	1012593	Identifier	errors		1012117	0					
ANR	1012594	UnaryOperationExpression	- 1		1012117	1					
ANR	1012595	UnaryOperator	-		1012117	0					
ANR	1012596	PrimaryExpression	1		1012117	1					
ANR	1012597	Identifier	e_down		1012117	1					
ANR	1012598	ExpressionStatement	* errors ++ = value	1017:16:30861:30880	1012117	11	True				
ANR	1012599	AssignmentExpression	* errors ++ = value		1012117	0		=			
ANR	1012600	UnaryOperationExpression	* errors ++		1012117	0					
ANR	1012601	UnaryOperator	*		1012117	0					
ANR	1012602	PostIncDecOperationExpression	errors ++		1012117	1					
ANR	1012603	Identifier	errors		1012117	0					
ANR	1012604	IncDec	++		1012117	1					
ANR	1012605	Identifier	value		1012117	1					
ANR	1012606	ExpressionStatement	outp = in_buffer	1020:8:30914:30930	1012117	2	True				
ANR	1012607	AssignmentExpression	outp = in_buffer		1012117	0		=			
ANR	1012608	Identifier	outp		1012117	0					
ANR	1012609	Identifier	in_buffer		1012117	1					
ANR	1012610	ElseStatement	else		1012117	0					
ANR	1012611	CompoundStatement		101:8:3374:3408	1012117	0					
ANR	1012612	IdentifierDeclStatement	const int back = span * factor + 4 ;	1025:8:31022:31056	1012117	0	True				
ANR	1012613	IdentifierDecl	back = span * factor + 4		1012117	0					
ANR	1012614	IdentifierDeclType	const int		1012117	0					
ANR	1012615	Identifier	back		1012117	1					
ANR	1012616	AssignmentExpression	back = span * factor + 4		1012117	2		=			
ANR	1012617	Identifier	back		1012117	0					
ANR	1012618	AdditiveExpression	span * factor + 4		1012117	1		+			
ANR	1012619	MultiplicativeExpression	span * factor		1012117	0		*			
ANR	1012620	Identifier	span		1012117	0					
ANR	1012621	Identifier	factor		1012117	1					
ANR	1012622	PrimaryExpression	4		1012117	1					
ANR	1012623	ForStatement	for ( comp = 0 ; comp < 4 ; comp ++ )		1012117	1					
ANR	1012624	ForInit	comp = 0 ;	1026:13:31071:31079	1012117	0	True				
ANR	1012625	AssignmentExpression	comp = 0		1012117	0		=			
ANR	1012626	Identifier	comp		1012117	0					
ANR	1012627	PrimaryExpression	0		1012117	1					
ANR	1012628	Condition	comp < 4	1026:23:31081:31088	1012117	1	True				
ANR	1012629	RelationalExpression	comp < 4		1012117	0		<			
ANR	1012630	Identifier	comp		1012117	0					
ANR	1012631	PrimaryExpression	4		1012117	1					
ANR	1012632	PostIncDecOperationExpression	comp ++	1026:33:31091:31096	1012117	2	True				
ANR	1012633	Identifier	comp		1012117	0					
ANR	1012634	IncDec	++		1012117	1					
ANR	1012635	CompoundStatement		104:12:3473:3500	1012117	3					
ANR	1012636	IdentifierDeclStatement	"byte mfs , force_forward = 0 ;"	1028:12:31121:31148	1012117	0	True				
ANR	1012637	IdentifierDecl	mfs		1012117	0					
ANR	1012638	IdentifierDeclType	byte		1012117	0					
ANR	1012639	Identifier	mfs		1012117	1					
ANR	1012640	IdentifierDecl	force_forward = 0		1012117	1					
ANR	1012641	IdentifierDeclType	byte		1012117	0					
ANR	1012642	Identifier	force_forward		1012117	1					
ANR	1012643	AssignmentExpression	force_forward = 0		1012117	2		=			
ANR	1012644	Identifier	force_forward		1012117	0					
ANR	1012645	PrimaryExpression	0		1012117	1					
ANR	1012646	ExpressionStatement	errors = ds -> errors + ( awidth + 3 ) * comp + awidth	1029:12:31162:31208	1012117	1	True				
ANR	1012647	AssignmentExpression	errors = ds -> errors + ( awidth + 3 ) * comp + awidth		1012117	0		=			
ANR	1012648	Identifier	errors		1012117	0					
ANR	1012649	AdditiveExpression	ds -> errors + ( awidth + 3 ) * comp + awidth		1012117	1		+			
ANR	1012650	PtrMemberAccess	ds -> errors		1012117	0					
ANR	1012651	Identifier	ds		1012117	0					
ANR	1012652	Identifier	errors		1012117	1					
ANR	1012653	AdditiveExpression	( awidth + 3 ) * comp + awidth		1012117	1		+			
ANR	1012654	MultiplicativeExpression	( awidth + 3 ) * comp		1012117	0		*			
ANR	1012655	AdditiveExpression	awidth + 3		1012117	0		+			
ANR	1012656	Identifier	awidth		1012117	0					
ANR	1012657	PrimaryExpression	3		1012117	1					
ANR	1012658	Identifier	comp		1012117	1					
ANR	1012659	Identifier	awidth		1012117	1					
ANR	1012660	ExpressionStatement	inp = in_buffer + awidth * factor * 4 - 4 + comp	1030:12:31222:31266	1012117	2	True				
ANR	1012661	AssignmentExpression	inp = in_buffer + awidth * factor * 4 - 4 + comp		1012117	0		=			
ANR	1012662	Identifier	inp		1012117	0					
ANR	1012663	AdditiveExpression	in_buffer + awidth * factor * 4 - 4 + comp		1012117	1		+			
ANR	1012664	Identifier	in_buffer		1012117	0					
ANR	1012665	AdditiveExpression	awidth * factor * 4 - 4 + comp		1012117	1		-			
ANR	1012666	MultiplicativeExpression	awidth * factor * 4		1012117	0		*			
ANR	1012667	Identifier	awidth		1012117	0					
ANR	1012668	MultiplicativeExpression	factor * 4		1012117	1		*			
ANR	1012669	Identifier	factor		1012117	0					
ANR	1012670	PrimaryExpression	4		1012117	1					
ANR	1012671	AdditiveExpression	4 + comp		1012117	1		+			
ANR	1012672	PrimaryExpression	4		1012117	0					
ANR	1012673	Identifier	comp		1012117	1					
ANR	1012674	ExpressionStatement	outp = inp	1031:12:31280:31290	1012117	3	True				
ANR	1012675	AssignmentExpression	outp = inp		1012117	0		=			
ANR	1012676	Identifier	outp		1012117	0					
ANR	1012677	Identifier	inp		1012117	1					
ANR	1012678	ExpressionStatement	mfs_data = ds -> mfs_data + ( awidth + 1 ) * comp + awidth	1032:12:31304:31354	1012117	4	True				
ANR	1012679	AssignmentExpression	mfs_data = ds -> mfs_data + ( awidth + 1 ) * comp + awidth		1012117	0		=			
ANR	1012680	Identifier	mfs_data		1012117	0					
ANR	1012681	AdditiveExpression	ds -> mfs_data + ( awidth + 1 ) * comp + awidth		1012117	1		+			
ANR	1012682	PtrMemberAccess	ds -> mfs_data		1012117	0					
ANR	1012683	Identifier	ds		1012117	0					
ANR	1012684	Identifier	mfs_data		1012117	1					
ANR	1012685	AdditiveExpression	( awidth + 1 ) * comp + awidth		1012117	1		+			
ANR	1012686	MultiplicativeExpression	( awidth + 1 ) * comp		1012117	0		*			
ANR	1012687	AdditiveExpression	awidth + 1		1012117	0		+			
ANR	1012688	Identifier	awidth		1012117	0					
ANR	1012689	PrimaryExpression	1		1012117	1					
ANR	1012690	Identifier	comp		1012117	1					
ANR	1012691	Identifier	awidth		1012117	1					
ANR	1012692	ExpressionStatement	* mfs_data -- = mfs_clear	1033:12:31368:31391	1012117	5	True				
ANR	1012693	AssignmentExpression	* mfs_data -- = mfs_clear		1012117	0		=			
ANR	1012694	UnaryOperationExpression	* mfs_data --		1012117	0					
ANR	1012695	UnaryOperator	*		1012117	0					
ANR	1012696	PostIncDecOperationExpression	mfs_data --		1012117	1					
ANR	1012697	Identifier	mfs_data		1012117	0					
ANR	1012698	IncDec	--		1012117	1					
ANR	1012699	Identifier	mfs_clear		1012117	1					
ANR	1012700	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1012117	6					
ANR	1012701	ForInit	x = awidth ;	1034:17:31410:31420	1012117	0	True				
ANR	1012702	AssignmentExpression	x = awidth		1012117	0		=			
ANR	1012703	Identifier	x		1012117	0					
ANR	1012704	Identifier	awidth		1012117	1					
ANR	1012705	Condition	x > 0	1034:29:31422:31426	1012117	1	True				
ANR	1012706	RelationalExpression	x > 0		1012117	0		>			
ANR	1012707	Identifier	x		1012117	0					
ANR	1012708	PrimaryExpression	0		1012117	1					
ANR	1012709	PostIncDecOperationExpression	x --	1034:36:31429:31431	1012117	2	True				
ANR	1012710	Identifier	x		1012117	0					
ANR	1012711	IncDec	--		1012117	1					
ANR	1012712	CompoundStatement		111:12:3798:3798	1012117	3					
ANR	1012713	ExpressionStatement	value = e_forward + * errors	1036:16:31464:31491	1012117	0	True				
ANR	1012714	AssignmentExpression	value = e_forward + * errors		1012117	0		=			
ANR	1012715	Identifier	value		1012117	0					
ANR	1012716	AdditiveExpression	e_forward + * errors		1012117	1		+			
ANR	1012717	Identifier	e_forward		1012117	0					
ANR	1012718	UnaryOperationExpression	* errors		1012117	1					
ANR	1012719	UnaryOperator	*		1012117	0					
ANR	1012720	Identifier	errors		1012117	1					
ANR	1012721	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1012117	1					
ANR	1012722	ForInit	xx = factor ;	1037:21:31514:31525	1012117	0	True				
ANR	1012723	AssignmentExpression	xx = factor		1012117	0		=			
ANR	1012724	Identifier	xx		1012117	0					
ANR	1012725	Identifier	factor		1012117	1					
ANR	1012726	Condition	xx > 0	1037:34:31527:31532	1012117	1	True				
ANR	1012727	RelationalExpression	xx > 0		1012117	0		>			
ANR	1012728	Identifier	xx		1012117	0					
ANR	1012729	PrimaryExpression	0		1012117	1					
ANR	1012730	PostIncDecOperationExpression	xx --	1037:42:31535:31538	1012117	2	True				
ANR	1012731	Identifier	xx		1012117	0					
ANR	1012732	IncDec	--		1012117	1					
ANR	1012733	CompoundStatement		114:16:3909:3909	1012117	3					
ANR	1012734	ForStatement	for ( y = factor ; y > 0 ; y -- )		1012117	0					
ANR	1012735	ForInit	y = factor ;	1039:25:31584:31594	1012117	0	True				
ANR	1012736	AssignmentExpression	y = factor		1012117	0		=			
ANR	1012737	Identifier	y		1012117	0					
ANR	1012738	Identifier	factor		1012117	1					
ANR	1012739	Condition	y > 0	1039:37:31596:31600	1012117	1	True				
ANR	1012740	RelationalExpression	y > 0		1012117	0		>			
ANR	1012741	Identifier	y		1012117	0					
ANR	1012742	PrimaryExpression	0		1012117	1					
ANR	1012743	PostIncDecOperationExpression	y --	1039:44:31603:31605	1012117	2	True				
ANR	1012744	Identifier	y		1012117	0					
ANR	1012745	IncDec	--		1012117	1					
ANR	1012746	CompoundStatement		116:20:3980:3980	1012117	3					
ANR	1012747	ExpressionStatement	value += * inp	1041:24:31654:31667	1012117	0	True				
ANR	1012748	AssignmentExpression	value += * inp		1012117	0		+=			
ANR	1012749	Identifier	value		1012117	0					
ANR	1012750	UnaryOperationExpression	* inp		1012117	1					
ANR	1012751	UnaryOperator	*		1012117	0					
ANR	1012752	Identifier	inp		1012117	1					
ANR	1012753	ExpressionStatement	inp += span	1042:24:31693:31704	1012117	1	True				
ANR	1012754	AssignmentExpression	inp += span		1012117	0		+=			
ANR	1012755	Identifier	inp		1012117	0					
ANR	1012756	Identifier	span		1012117	1					
ANR	1012757	ExpressionStatement	inp -= back	1044:20:31748:31759	1012117	1	True				
ANR	1012758	AssignmentExpression	inp -= back		1012117	0		-=			
ANR	1012759	Identifier	inp		1012117	0					
ANR	1012760	Identifier	back		1012117	1					
ANR	1012761	ExpressionStatement	mfs = * mfs_data	1046:16:31795:31810	1012117	2	True				
ANR	1012762	AssignmentExpression	mfs = * mfs_data		1012117	0		=			
ANR	1012763	Identifier	mfs		1012117	0					
ANR	1012764	UnaryOperationExpression	* mfs_data		1012117	1					
ANR	1012765	UnaryOperator	*		1012117	0					
ANR	1012766	Identifier	mfs_data		1012117	1					
ANR	1012767	ExpressionStatement	* mfs_data -- = mfs_clear	1047:16:31828:31851	1012117	3	True				
ANR	1012768	AssignmentExpression	* mfs_data -- = mfs_clear		1012117	0		=			
ANR	1012769	UnaryOperationExpression	* mfs_data --		1012117	0					
ANR	1012770	UnaryOperator	*		1012117	0					
ANR	1012771	PostIncDecOperationExpression	mfs_data --		1012117	1					
ANR	1012772	Identifier	mfs_data		1012117	0					
ANR	1012773	IncDec	--		1012117	1					
ANR	1012774	Identifier	mfs_clear		1012117	1					
ANR	1012775	IfStatement	if ( ( mfs & mfs_force_off ) || force_forward )		1012117	4					
ANR	1012776	Condition	( mfs & mfs_force_off ) || force_forward	1048:20:31873:31910	1012117	0	True				
ANR	1012777	OrExpression	( mfs & mfs_force_off ) || force_forward		1012117	0		||			
ANR	1012778	BitAndExpression	mfs & mfs_force_off		1012117	0		&			
ANR	1012779	Identifier	mfs		1012117	0					
ANR	1012780	Identifier	mfs_force_off		1012117	1					
ANR	1012781	Identifier	force_forward		1012117	1					
ANR	1012782	CompoundStatement		125:16:4281:4281	1012117	1					
ANR	1012783	ExpressionStatement	* outp = 1	1051:20:32005:32014	1012117	0	True				
ANR	1012784	AssignmentExpression	* outp = 1		1012117	0		=			
ANR	1012785	UnaryOperationExpression	* outp		1012117	0					
ANR	1012786	UnaryOperator	*		1012117	0					
ANR	1012787	Identifier	outp		1012117	1					
ANR	1012788	PrimaryExpression	1		1012117	1					
ANR	1012789	ExpressionStatement	outp -= 4	1051:31:32016:32025	1012117	1	True				
ANR	1012790	AssignmentExpression	outp -= 4		1012117	0		-=			
ANR	1012791	Identifier	outp		1012117	0					
ANR	1012792	PrimaryExpression	4		1012117	1					
ANR	1012793	ExpressionStatement	value -= max_value	1052:20:32047:32065	1012117	2	True				
ANR	1012794	AssignmentExpression	value -= max_value		1012117	0		-=			
ANR	1012795	Identifier	value		1012117	0					
ANR	1012796	Identifier	max_value		1012117	1					
ANR	1012797	ExpressionStatement	force_forward = 0	1053:20:32087:32104	1012117	3	True				
ANR	1012798	AssignmentExpression	force_forward = 0		1012117	0		=			
ANR	1012799	Identifier	force_forward		1012117	0					
ANR	1012800	PrimaryExpression	0		1012117	1					
ANR	1012801	ElseStatement	else		1012117	0					
ANR	1012802	IfStatement	if ( value >= threshold )		1012117	0					
ANR	1012803	Condition	value >= threshold	1055:25:32149:32166	1012117	0	True				
ANR	1012804	RelationalExpression	value >= threshold		1012117	0		>=			
ANR	1012805	Identifier	value		1012117	0					
ANR	1012806	Identifier	threshold		1012117	1					
ANR	1012807	CompoundStatement		132:16:4537:4537	1012117	1					
ANR	1012808	ExpressionStatement	* outp = 1	1057:20:32207:32216	1012117	0	True				
ANR	1012809	AssignmentExpression	* outp = 1		1012117	0		=			
ANR	1012810	UnaryOperationExpression	* outp		1012117	0					
ANR	1012811	UnaryOperator	*		1012117	0					
ANR	1012812	Identifier	outp		1012117	1					
ANR	1012813	PrimaryExpression	1		1012117	1					
ANR	1012814	ExpressionStatement	outp -= 4	1057:31:32218:32227	1012117	1	True				
ANR	1012815	AssignmentExpression	outp -= 4		1012117	0		-=			
ANR	1012816	Identifier	outp		1012117	0					
ANR	1012817	PrimaryExpression	4		1012117	1					
ANR	1012818	ExpressionStatement	value -= max_value	1058:20:32249:32267	1012117	2	True				
ANR	1012819	AssignmentExpression	value -= max_value		1012117	0		-=			
ANR	1012820	Identifier	value		1012117	0					
ANR	1012821	Identifier	max_value		1012117	1					
ANR	1012822	IfStatement	if ( ( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 ) )		1012117	3					
ANR	1012823	Condition	( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 )	1059:24:32293:32408	1012117	0	True				
ANR	1012824	EqualityExpression	( mfs & ( mfs_above_is_0 | mfs_above_left_is_0 ) ) != ( mfs_above_is_0 | mfs_above_left_is_0 )		1012117	0		!=			
ANR	1012825	BitAndExpression	mfs & ( mfs_above_is_0 | mfs_above_left_is_0 )		1012117	0		&			
ANR	1012826	Identifier	mfs		1012117	0					
ANR	1012827	InclusiveOrExpression	mfs_above_is_0 | mfs_above_left_is_0		1012117	1		|			
ANR	1012828	Identifier	mfs_above_is_0		1012117	0					
ANR	1012829	Identifier	mfs_above_left_is_0		1012117	1					
ANR	1012830	InclusiveOrExpression	mfs_above_is_0 | mfs_above_left_is_0		1012117	1		|			
ANR	1012831	Identifier	mfs_above_is_0		1012117	0					
ANR	1012832	Identifier	mfs_above_left_is_0		1012117	1					
ANR	1012833	CompoundStatement		137:20:4783:4783	1012117	1					
ANR	1012834	ExpressionStatement	mfs_data [ 1 ] |= mfs_force_off	1064:24:32571:32599	1012117	0	True				
ANR	1012835	AssignmentExpression	mfs_data [ 1 ] |= mfs_force_off		1012117	0		|=			
ANR	1012836	ArrayIndexing	mfs_data [ 1 ]		1012117	0					
ANR	1012837	Identifier	mfs_data		1012117	0					
ANR	1012838	PrimaryExpression	1		1012117	1					
ANR	1012839	Identifier	mfs_force_off		1012117	1					
ANR	1012840	ExpressionStatement	mfs_data [ 2 ] |= mfs_force_off	1065:24:32625:32653	1012117	1	True				
ANR	1012841	AssignmentExpression	mfs_data [ 2 ] |= mfs_force_off		1012117	0		|=			
ANR	1012842	ArrayIndexing	mfs_data [ 2 ]		1012117	0					
ANR	1012843	Identifier	mfs_data		1012117	0					
ANR	1012844	PrimaryExpression	2		1012117	1					
ANR	1012845	Identifier	mfs_force_off		1012117	1					
ANR	1012846	ExpressionStatement	force_forward = 1	1066:24:32679:32696	1012117	2	True				
ANR	1012847	AssignmentExpression	force_forward = 1		1012117	0		=			
ANR	1012848	Identifier	force_forward		1012117	0					
ANR	1012849	PrimaryExpression	1		1012117	1					
ANR	1012850	ElseStatement	else		1012117	0					
ANR	1012851	CompoundStatement		145:20:5117:5117	1012117	0					
ANR	1012852	ExpressionStatement	mfs_data [ 1 ] |= mfs_above_is_0	1072:24:32909:32938	1012117	0	True				
ANR	1012853	AssignmentExpression	mfs_data [ 1 ] |= mfs_above_is_0		1012117	0		|=			
ANR	1012854	ArrayIndexing	mfs_data [ 1 ]		1012117	0					
ANR	1012855	Identifier	mfs_data		1012117	0					
ANR	1012856	PrimaryExpression	1		1012117	1					
ANR	1012857	Identifier	mfs_above_is_0		1012117	1					
ANR	1012858	ExpressionStatement	mfs_data [ 2 ] |= mfs_above_left_is_0	1073:24:32964:32998	1012117	1	True				
ANR	1012859	AssignmentExpression	mfs_data [ 2 ] |= mfs_above_left_is_0		1012117	0		|=			
ANR	1012860	ArrayIndexing	mfs_data [ 2 ]		1012117	0					
ANR	1012861	Identifier	mfs_data		1012117	0					
ANR	1012862	PrimaryExpression	2		1012117	1					
ANR	1012863	Identifier	mfs_above_left_is_0		1012117	1					
ANR	1012864	ElseStatement	else		1012117	0					
ANR	1012865	CompoundStatement		153:16:5429:5429	1012117	0					
ANR	1012866	ExpressionStatement	* outp = 0	1078:20:33099:33108	1012117	0	True				
ANR	1012867	AssignmentExpression	* outp = 0		1012117	0		=			
ANR	1012868	UnaryOperationExpression	* outp		1012117	0					
ANR	1012869	UnaryOperator	*		1012117	0					
ANR	1012870	Identifier	outp		1012117	1					
ANR	1012871	PrimaryExpression	0		1012117	1					
ANR	1012872	ExpressionStatement	outp -= 4	1078:31:33110:33119	1012117	1	True				
ANR	1012873	AssignmentExpression	outp -= 4		1012117	0		-=			
ANR	1012874	Identifier	outp		1012117	0					
ANR	1012875	PrimaryExpression	4		1012117	1					
ANR	1012876	ExpressionStatement	e_forward = value * 7 / 16	1080:16:33155:33180	1012117	5	True				
ANR	1012877	AssignmentExpression	e_forward = value * 7 / 16		1012117	0		=			
ANR	1012878	Identifier	e_forward		1012117	0					
ANR	1012879	MultiplicativeExpression	value * 7 / 16		1012117	1		*			
ANR	1012880	Identifier	value		1012117	0					
ANR	1012881	MultiplicativeExpression	7 / 16		1012117	1		/			
ANR	1012882	PrimaryExpression	7		1012117	0					
ANR	1012883	PrimaryExpression	16		1012117	1					
ANR	1012884	ExpressionStatement	e_downleft = value * 3 / 16	1081:16:33198:33223	1012117	6	True				
ANR	1012885	AssignmentExpression	e_downleft = value * 3 / 16		1012117	0		=			
ANR	1012886	Identifier	e_downleft		1012117	0					
ANR	1012887	MultiplicativeExpression	value * 3 / 16		1012117	1		*			
ANR	1012888	Identifier	value		1012117	0					
ANR	1012889	MultiplicativeExpression	3 / 16		1012117	1		/			
ANR	1012890	PrimaryExpression	3		1012117	0					
ANR	1012891	PrimaryExpression	16		1012117	1					
ANR	1012892	ExpressionStatement	e_down = value * 5 / 16	1082:16:33241:33266	1012117	7	True				
ANR	1012893	AssignmentExpression	e_down = value * 5 / 16		1012117	0		=			
ANR	1012894	Identifier	e_down		1012117	0					
ANR	1012895	MultiplicativeExpression	value * 5 / 16		1012117	1		*			
ANR	1012896	Identifier	value		1012117	0					
ANR	1012897	MultiplicativeExpression	5 / 16		1012117	1		/			
ANR	1012898	PrimaryExpression	5		1012117	0					
ANR	1012899	PrimaryExpression	16		1012117	1					
ANR	1012900	ExpressionStatement	value -= e_forward + e_downleft + e_down	1083:16:33284:33328	1012117	8	True				
ANR	1012901	AssignmentExpression	value -= e_forward + e_downleft + e_down		1012117	0		-=			
ANR	1012902	Identifier	value		1012117	0					
ANR	1012903	AdditiveExpression	e_forward + e_downleft + e_down		1012117	1		+			
ANR	1012904	Identifier	e_forward		1012117	0					
ANR	1012905	AdditiveExpression	e_downleft + e_down		1012117	1		+			
ANR	1012906	Identifier	e_downleft		1012117	0					
ANR	1012907	Identifier	e_down		1012117	1					
ANR	1012908	ExpressionStatement	errors [ 2 ] += e_downleft	1084:16:33346:33369	1012117	9	True				
ANR	1012909	AssignmentExpression	errors [ 2 ] += e_downleft		1012117	0		+=			
ANR	1012910	ArrayIndexing	errors [ 2 ]		1012117	0					
ANR	1012911	Identifier	errors		1012117	0					
ANR	1012912	PrimaryExpression	2		1012117	1					
ANR	1012913	Identifier	e_downleft		1012117	1					
ANR	1012914	ExpressionStatement	errors [ 1 ] += e_down	1085:16:33387:33406	1012117	10	True				
ANR	1012915	AssignmentExpression	errors [ 1 ] += e_down		1012117	0		+=			
ANR	1012916	ArrayIndexing	errors [ 1 ]		1012117	0					
ANR	1012917	Identifier	errors		1012117	0					
ANR	1012918	PrimaryExpression	1		1012117	1					
ANR	1012919	Identifier	e_down		1012117	1					
ANR	1012920	ExpressionStatement	* errors -- = value	1086:16:33424:33443	1012117	11	True				
ANR	1012921	AssignmentExpression	* errors -- = value		1012117	0		=			
ANR	1012922	UnaryOperationExpression	* errors --		1012117	0					
ANR	1012923	UnaryOperator	*		1012117	0					
ANR	1012924	PostIncDecOperationExpression	errors --		1012117	1					
ANR	1012925	Identifier	errors		1012117	0					
ANR	1012926	IncDec	--		1012117	1					
ANR	1012927	Identifier	value		1012117	1					
ANR	1012928	ExpressionStatement	outp = in_buffer + awidth * factor * 4 - ( awidth * 4 )	1089:8:33477:33524	1012117	2	True				
ANR	1012929	AssignmentExpression	outp = in_buffer + awidth * factor * 4 - ( awidth * 4 )		1012117	0		=			
ANR	1012930	Identifier	outp		1012117	0					
ANR	1012931	AdditiveExpression	in_buffer + awidth * factor * 4 - ( awidth * 4 )		1012117	1		+			
ANR	1012932	Identifier	in_buffer		1012117	0					
ANR	1012933	AdditiveExpression	awidth * factor * 4 - ( awidth * 4 )		1012117	1		-			
ANR	1012934	MultiplicativeExpression	awidth * factor * 4		1012117	0		*			
ANR	1012935	Identifier	awidth		1012117	0					
ANR	1012936	MultiplicativeExpression	factor * 4		1012117	1		*			
ANR	1012937	Identifier	factor		1012117	0					
ANR	1012938	PrimaryExpression	4		1012117	1					
ANR	1012939	MultiplicativeExpression	awidth * 4		1012117	1		*			
ANR	1012940	Identifier	awidth		1012117	0					
ANR	1012941	PrimaryExpression	4		1012117	1					
ANR	1012942	ExpressionStatement	"pack_8to1 ( out_buffer , outp , awidth * 4 )"	1091:4:33536:33573	1012117	15	True				
ANR	1012943	CallExpression	"pack_8to1 ( out_buffer , outp , awidth * 4 )"		1012117	0					
ANR	1012944	Callee	pack_8to1		1012117	0					
ANR	1012945	Identifier	pack_8to1		1012117	0					
ANR	1012946	ArgumentList	out_buffer		1012117	1					
ANR	1012947	Argument	out_buffer		1012117	0					
ANR	1012948	Identifier	out_buffer		1012117	0					
ANR	1012949	Argument	outp		1012117	1					
ANR	1012950	Identifier	outp		1012117	0					
ANR	1012951	Argument	awidth * 4		1012117	2					
ANR	1012952	MultiplicativeExpression	awidth * 4		1012117	0		*			
ANR	1012953	Identifier	awidth		1012117	0					
ANR	1012954	PrimaryExpression	4		1012117	1					
ANR	1012955	ReturnType	static void		1012117	1					
ANR	1012956	Identifier	down_core4_mfs		1012117	2					
ANR	1012957	ParameterList	"gx_downscaler_t * ds , byte * out_buffer , byte * in_buffer , int row , int plane , int span"		1012117	3					
ANR	1012958	Parameter	gx_downscaler_t * ds	919:27:27352:27370	1012117	0	True				
ANR	1012959	ParameterType	gx_downscaler_t *		1012117	0					
ANR	1012960	Identifier	ds		1012117	1					
ANR	1012961	Parameter	byte * out_buffer	920:27:27400:27426	1012117	1	True				
ANR	1012962	ParameterType	byte *		1012117	0					
ANR	1012963	Identifier	out_buffer		1012117	1					
ANR	1012964	Parameter	byte * in_buffer	921:27:27456:27481	1012117	2	True				
ANR	1012965	ParameterType	byte *		1012117	0					
ANR	1012966	Identifier	in_buffer		1012117	1					
ANR	1012967	Parameter	int row	922:27:27511:27530	1012117	3	True				
ANR	1012968	ParameterType	int		1012117	0					
ANR	1012969	Identifier	row		1012117	1					
ANR	1012970	Parameter	int plane	923:27:27560:27581	1012117	4	True				
ANR	1012971	ParameterType	int		1012117	0					
ANR	1012972	Identifier	plane		1012117	1					
ANR	1012973	Parameter	int span	924:27:27624:27644	1012117	5	True				
ANR	1012974	ParameterType	int		1012117	0					
ANR	1012975	Identifier	span		1012117	1					
ANR	1012976	CFGEntryNode	ENTRY		1012117		True				
ANR	1012977	CFGExitNode	EXIT		1012117		True				
ANR	1012978	Symbol	plane		1012117						
ANR	1012979	Symbol	xx		1012117						
ANR	1012980	Symbol	awidth		1012117						
ANR	1012981	Symbol	mfs_clear		1012117						
ANR	1012982	Symbol	in_buffer		1012117						
ANR	1012983	Symbol	back		1012117						
ANR	1012984	Symbol	threshold		1012117						
ANR	1012985	Symbol	mfs_data		1012117						
ANR	1012986	Symbol	ds -> mfs_data		1012117						
ANR	1012987	Symbol	ds		1012117						
ANR	1012988	Symbol	mfs_above_left_is_0		1012117						
ANR	1012989	Symbol	ds -> errors		1012117						
ANR	1012990	Symbol	outp		1012117						
ANR	1012991	Symbol	* ds		1012117						
ANR	1012992	Symbol	e_forward		1012117						
ANR	1012993	Symbol	* mfs_data		1012117						
ANR	1012994	Symbol	ds -> width		1012117						
ANR	1012995	Symbol	row		1012117						
ANR	1012996	Symbol	* errors ++		1012117						
ANR	1012997	Symbol	* errors --		1012117						
ANR	1012998	Symbol	factor		1012117						
ANR	1012999	Symbol	value		1012117						
ANR	1013000	Symbol	force_forward		1012117						
ANR	1013001	Symbol	comp		1012117						
ANR	1013002	Symbol	out_buffer		1012117						
ANR	1013003	Symbol	ds -> awidth		1012117						
ANR	1013004	Symbol	inp		1012117						
ANR	1013005	Symbol	* inp		1012117						
ANR	1013006	Symbol	* errors		1012117						
ANR	1013007	Symbol	mfs_force_off		1012117						
ANR	1013008	Symbol	* mfs_data ++		1012117						
ANR	1013009	Symbol	* mfs_data --		1012117						
ANR	1013010	Symbol	pad_white		1012117						
ANR	1013011	Symbol	ds -> factor		1012117						
ANR	1013012	Symbol	x		1012117						
ANR	1013013	Symbol	width		1012117						
ANR	1013014	Symbol	y		1012117						
ANR	1013015	Symbol	e_downleft		1012117						
ANR	1013016	Symbol	* outp		1012117						
ANR	1013017	Symbol	mfs		1012117						
ANR	1013018	Symbol	errors		1012117						
ANR	1013019	Symbol	mfs_above_is_0		1012117						
ANR	1013020	Symbol	span		1012117						
ANR	1013021	Symbol	e_down		1012117						
ANR	1013022	Symbol	max_value		1012117						
ANR	1013023	Function	down_core16	1095:0:33616:35014							
ANR	1013024	FunctionDef	"down_core16 (gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span)"		1013023	0					
ANR	1013025	CompoundStatement		1101:0:33901:35014	1013023	0					
ANR	1013026	IdentifierDeclStatement	"int x , xx , y , value ;"	1102:4:33907:33928	1013023	0	True				
ANR	1013027	IdentifierDecl	x		1013023	0					
ANR	1013028	IdentifierDeclType	int		1013023	0					
ANR	1013029	Identifier	x		1013023	1					
ANR	1013030	IdentifierDecl	xx		1013023	1					
ANR	1013031	IdentifierDeclType	int		1013023	0					
ANR	1013032	Identifier	xx		1013023	1					
ANR	1013033	IdentifierDecl	y		1013023	2					
ANR	1013034	IdentifierDeclType	int		1013023	0					
ANR	1013035	Identifier	y		1013023	1					
ANR	1013036	IdentifierDecl	value		1013023	3					
ANR	1013037	IdentifierDeclType	int		1013023	0					
ANR	1013038	Identifier	value		1013023	1					
ANR	1013039	IdentifierDeclStatement	int pad_white ;	1103:4:33934:33949	1013023	1	True				
ANR	1013040	IdentifierDecl	pad_white		1013023	0					
ANR	1013041	IdentifierDeclType	int		1013023	0					
ANR	1013042	Identifier	pad_white		1013023	1					
ANR	1013043	IdentifierDeclStatement	byte * inp ;	1104:4:33955:33964	1013023	2	True				
ANR	1013044	IdentifierDecl	* inp		1013023	0					
ANR	1013045	IdentifierDeclType	byte *		1013023	0					
ANR	1013046	Identifier	inp		1013023	1					
ANR	1013047	IdentifierDeclStatement	int width = ds -> width ;	1105:4:33970:33994	1013023	3	True				
ANR	1013048	IdentifierDecl	width = ds -> width		1013023	0					
ANR	1013049	IdentifierDeclType	int		1013023	0					
ANR	1013050	Identifier	width		1013023	1					
ANR	1013051	AssignmentExpression	width = ds -> width		1013023	2		=			
ANR	1013052	Identifier	width		1013023	0					
ANR	1013053	PtrMemberAccess	ds -> width		1013023	1					
ANR	1013054	Identifier	ds		1013023	0					
ANR	1013055	Identifier	width		1013023	1					
ANR	1013056	IdentifierDeclStatement	int awidth = ds -> awidth ;	1106:4:34000:34025	1013023	4	True				
ANR	1013057	IdentifierDecl	awidth = ds -> awidth		1013023	0					
ANR	1013058	IdentifierDeclType	int		1013023	0					
ANR	1013059	Identifier	awidth		1013023	1					
ANR	1013060	AssignmentExpression	awidth = ds -> awidth		1013023	2		=			
ANR	1013061	Identifier	awidth		1013023	0					
ANR	1013062	PtrMemberAccess	ds -> awidth		1013023	1					
ANR	1013063	Identifier	ds		1013023	0					
ANR	1013064	Identifier	awidth		1013023	1					
ANR	1013065	IdentifierDeclStatement	int factor = ds -> factor ;	1107:4:34031:34056	1013023	5	True				
ANR	1013066	IdentifierDecl	factor = ds -> factor		1013023	0					
ANR	1013067	IdentifierDeclType	int		1013023	0					
ANR	1013068	Identifier	factor		1013023	1					
ANR	1013069	AssignmentExpression	factor = ds -> factor		1013023	2		=			
ANR	1013070	Identifier	factor		1013023	0					
ANR	1013071	PtrMemberAccess	ds -> factor		1013023	1					
ANR	1013072	Identifier	ds		1013023	0					
ANR	1013073	Identifier	factor		1013023	1					
ANR	1013074	IdentifierDeclStatement	int div = factor * factor ;	1108:4:34062:34090	1013023	6	True				
ANR	1013075	IdentifierDecl	div = factor * factor		1013023	0					
ANR	1013076	IdentifierDeclType	int		1013023	0					
ANR	1013077	Identifier	div		1013023	1					
ANR	1013078	AssignmentExpression	div = factor * factor		1013023	2		=			
ANR	1013079	Identifier	div		1013023	0					
ANR	1013080	MultiplicativeExpression	factor * factor		1013023	1		*			
ANR	1013081	Identifier	factor		1013023	0					
ANR	1013082	Identifier	factor		1013023	1					
ANR	1013083	ExpressionStatement	pad_white = ( awidth - width ) * factor	1110:4:34097:34134	1013023	7	True				
ANR	1013084	AssignmentExpression	pad_white = ( awidth - width ) * factor		1013023	0		=			
ANR	1013085	Identifier	pad_white		1013023	0					
ANR	1013086	MultiplicativeExpression	( awidth - width ) * factor		1013023	1		*			
ANR	1013087	AdditiveExpression	awidth - width		1013023	0		-			
ANR	1013088	Identifier	awidth		1013023	0					
ANR	1013089	Identifier	width		1013023	1					
ANR	1013090	Identifier	factor		1013023	1					
ANR	1013091	IfStatement	if ( pad_white < 0 )		1013023	8					
ANR	1013092	Condition	pad_white < 0	1111:8:34144:34156	1013023	0	True				
ANR	1013093	RelationalExpression	pad_white < 0		1013023	0		<			
ANR	1013094	Identifier	pad_white		1013023	0					
ANR	1013095	PrimaryExpression	0		1013023	1					
ANR	1013096	ExpressionStatement	pad_white = 0	1112:8:34167:34180	1013023	1	True				
ANR	1013097	AssignmentExpression	pad_white = 0		1013023	0		=			
ANR	1013098	Identifier	pad_white		1013023	0					
ANR	1013099	PrimaryExpression	0		1013023	1					
ANR	1013100	IfStatement	if ( pad_white )		1013023	9					
ANR	1013101	Condition	pad_white	1114:8:34191:34199	1013023	0	True				
ANR	1013102	Identifier	pad_white		1013023	0					
ANR	1013103	CompoundStatement		15:4:304:304	1013023	1					
ANR	1013104	ExpressionStatement	inp = in_buffer + width * 2 * factor	1116:8:34216:34248	1013023	0	True				
ANR	1013105	AssignmentExpression	inp = in_buffer + width * 2 * factor		1013023	0		=			
ANR	1013106	Identifier	inp		1013023	0					
ANR	1013107	AdditiveExpression	in_buffer + width * 2 * factor		1013023	1		+			
ANR	1013108	Identifier	in_buffer		1013023	0					
ANR	1013109	MultiplicativeExpression	width * 2 * factor		1013023	1		*			
ANR	1013110	Identifier	width		1013023	0					
ANR	1013111	MultiplicativeExpression	2 * factor		1013023	1		*			
ANR	1013112	PrimaryExpression	2		1013023	0					
ANR	1013113	Identifier	factor		1013023	1					
ANR	1013114	ForStatement	for ( y = factor ; y > 0 ; y -- )		1013023	1					
ANR	1013115	ForInit	y = factor ;	1117:13:34263:34273	1013023	0	True				
ANR	1013116	AssignmentExpression	y = factor		1013023	0		=			
ANR	1013117	Identifier	y		1013023	0					
ANR	1013118	Identifier	factor		1013023	1					
ANR	1013119	Condition	y > 0	1117:25:34275:34279	1013023	1	True				
ANR	1013120	RelationalExpression	y > 0		1013023	0		>			
ANR	1013121	Identifier	y		1013023	0					
ANR	1013122	PrimaryExpression	0		1013023	1					
ANR	1013123	PostIncDecOperationExpression	y --	1117:32:34282:34284	1013023	2	True				
ANR	1013124	Identifier	y		1013023	0					
ANR	1013125	IncDec	--		1013023	1					
ANR	1013126	CompoundStatement		18:8:393:393	1013023	3					
ANR	1013127	ExpressionStatement	"memset ( inp , 0xFF , pad_white * 2 )"	1119:12:34309:34339	1013023	0	True				
ANR	1013128	CallExpression	"memset ( inp , 0xFF , pad_white * 2 )"		1013023	0					
ANR	1013129	Callee	memset		1013023	0					
ANR	1013130	Identifier	memset		1013023	0					
ANR	1013131	ArgumentList	inp		1013023	1					
ANR	1013132	Argument	inp		1013023	0					
ANR	1013133	Identifier	inp		1013023	0					
ANR	1013134	Argument	0xFF		1013023	1					
ANR	1013135	PrimaryExpression	0xFF		1013023	0					
ANR	1013136	Argument	pad_white * 2		1013023	2					
ANR	1013137	MultiplicativeExpression	pad_white * 2		1013023	0		*			
ANR	1013138	Identifier	pad_white		1013023	0					
ANR	1013139	PrimaryExpression	2		1013023	1					
ANR	1013140	ExpressionStatement	inp += span	1120:12:34353:34364	1013023	1	True				
ANR	1013141	AssignmentExpression	inp += span		1013023	0		+=			
ANR	1013142	Identifier	inp		1013023	0					
ANR	1013143	Identifier	span		1013023	1					
ANR	1013144	ExpressionStatement	inp = in_buffer	1124:4:34387:34402	1013023	10	True				
ANR	1013145	AssignmentExpression	inp = in_buffer		1013023	0		=			
ANR	1013146	Identifier	inp		1013023	0					
ANR	1013147	Identifier	in_buffer		1013023	1					
ANR	1013148	CompoundStatement		27:8:571:604	1013023	11					
ANR	1013149	IdentifierDeclStatement	const int back = span * factor - 2 ;	1127:8:34473:34506	1013023	0	True				
ANR	1013150	IdentifierDecl	back = span * factor - 2		1013023	0					
ANR	1013151	IdentifierDeclType	const int		1013023	0					
ANR	1013152	Identifier	back		1013023	1					
ANR	1013153	AssignmentExpression	back = span * factor - 2		1013023	2		=			
ANR	1013154	Identifier	back		1013023	0					
ANR	1013155	AdditiveExpression	span * factor - 2		1013023	1		-			
ANR	1013156	MultiplicativeExpression	span * factor		1013023	0		*			
ANR	1013157	Identifier	span		1013023	0					
ANR	1013158	Identifier	factor		1013023	1					
ANR	1013159	PrimaryExpression	2		1013023	1					
ANR	1013160	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1013023	1					
ANR	1013161	ForInit	x = awidth ;	1128:13:34521:34531	1013023	0	True				
ANR	1013162	AssignmentExpression	x = awidth		1013023	0		=			
ANR	1013163	Identifier	x		1013023	0					
ANR	1013164	Identifier	awidth		1013023	1					
ANR	1013165	Condition	x > 0	1128:25:34533:34537	1013023	1	True				
ANR	1013166	RelationalExpression	x > 0		1013023	0		>			
ANR	1013167	Identifier	x		1013023	0					
ANR	1013168	PrimaryExpression	0		1013023	1					
ANR	1013169	PostIncDecOperationExpression	x --	1128:32:34540:34542	1013023	2	True				
ANR	1013170	Identifier	x		1013023	0					
ANR	1013171	IncDec	--		1013023	1					
ANR	1013172	CompoundStatement		29:8:651:651	1013023	3					
ANR	1013173	ExpressionStatement	value = 0	1130:12:34567:34576	1013023	0	True				
ANR	1013174	AssignmentExpression	value = 0		1013023	0		=			
ANR	1013175	Identifier	value		1013023	0					
ANR	1013176	PrimaryExpression	0		1013023	1					
ANR	1013177	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1013023	1					
ANR	1013178	ForInit	xx = factor ;	1131:17:34595:34606	1013023	0	True				
ANR	1013179	AssignmentExpression	xx = factor		1013023	0		=			
ANR	1013180	Identifier	xx		1013023	0					
ANR	1013181	Identifier	factor		1013023	1					
ANR	1013182	Condition	xx > 0	1131:30:34608:34613	1013023	1	True				
ANR	1013183	RelationalExpression	xx > 0		1013023	0		>			
ANR	1013184	Identifier	xx		1013023	0					
ANR	1013185	PrimaryExpression	0		1013023	1					
ANR	1013186	PostIncDecOperationExpression	xx --	1131:38:34616:34619	1013023	2	True				
ANR	1013187	Identifier	xx		1013023	0					
ANR	1013188	IncDec	--		1013023	1					
ANR	1013189	CompoundStatement		32:12:732:732	1013023	3					
ANR	1013190	ForStatement	for ( y = factor ; y > 0 ; y -- )		1013023	0					
ANR	1013191	ForInit	y = factor ;	1133:21:34657:34667	1013023	0	True				
ANR	1013192	AssignmentExpression	y = factor		1013023	0		=			
ANR	1013193	Identifier	y		1013023	0					
ANR	1013194	Identifier	factor		1013023	1					
ANR	1013195	Condition	y > 0	1133:33:34669:34673	1013023	1	True				
ANR	1013196	RelationalExpression	y > 0		1013023	0		>			
ANR	1013197	Identifier	y		1013023	0					
ANR	1013198	PrimaryExpression	0		1013023	1					
ANR	1013199	PostIncDecOperationExpression	y --	1133:40:34676:34678	1013023	2	True				
ANR	1013200	Identifier	y		1013023	0					
ANR	1013201	IncDec	--		1013023	1					
ANR	1013202	CompoundStatement		34:16:795:795	1013023	3					
ANR	1013203	ExpressionStatement	value += inp [ 0 ] << 8	1135:20:34719:34737	1013023	0	True				
ANR	1013204	AssignmentExpression	value += inp [ 0 ] << 8		1013023	0		+=			
ANR	1013205	Identifier	value		1013023	0					
ANR	1013206	ShiftExpression	inp [ 0 ] << 8		1013023	1		<<			
ANR	1013207	ArrayIndexing	inp [ 0 ]		1013023	0					
ANR	1013208	Identifier	inp		1013023	0					
ANR	1013209	PrimaryExpression	0		1013023	1					
ANR	1013210	PrimaryExpression	8		1013023	1					
ANR	1013211	ExpressionStatement	value += inp [ 1 ]	1136:20:34759:34774	1013023	1	True				
ANR	1013212	AssignmentExpression	value += inp [ 1 ]		1013023	0		+=			
ANR	1013213	Identifier	value		1013023	0					
ANR	1013214	ArrayIndexing	inp [ 1 ]		1013023	1					
ANR	1013215	Identifier	inp		1013023	0					
ANR	1013216	PrimaryExpression	1		1013023	1					
ANR	1013217	ExpressionStatement	inp += span	1137:20:34796:34807	1013023	2	True				
ANR	1013218	AssignmentExpression	inp += span		1013023	0		+=			
ANR	1013219	Identifier	inp		1013023	0					
ANR	1013220	Identifier	span		1013023	1					
ANR	1013221	ExpressionStatement	inp -= back	1139:16:34843:34854	1013023	1	True				
ANR	1013222	AssignmentExpression	inp -= back		1013023	0		-=			
ANR	1013223	Identifier	inp		1013023	0					
ANR	1013224	Identifier	back		1013023	1					
ANR	1013225	ExpressionStatement	value = ( value + ( div >> 1 ) ) / div	1141:12:34882:34912	1013023	2	True				
ANR	1013226	AssignmentExpression	value = ( value + ( div >> 1 ) ) / div		1013023	0		=			
ANR	1013227	Identifier	value		1013023	0					
ANR	1013228	MultiplicativeExpression	( value + ( div >> 1 ) ) / div		1013023	1		/			
ANR	1013229	AdditiveExpression	value + ( div >> 1 )		1013023	0		+			
ANR	1013230	Identifier	value		1013023	0					
ANR	1013231	ShiftExpression	div >> 1		1013023	1		>>			
ANR	1013232	Identifier	div		1013023	0					
ANR	1013233	PrimaryExpression	1		1013023	1					
ANR	1013234	Identifier	div		1013023	1					
ANR	1013235	ExpressionStatement	outp [ 0 ] = value >> 8	1142:12:34926:34944	1013023	3	True				
ANR	1013236	AssignmentExpression	outp [ 0 ] = value >> 8		1013023	0		=			
ANR	1013237	ArrayIndexing	outp [ 0 ]		1013023	0					
ANR	1013238	Identifier	outp		1013023	0					
ANR	1013239	PrimaryExpression	0		1013023	1					
ANR	1013240	ShiftExpression	value >> 8		1013023	1		>>			
ANR	1013241	Identifier	value		1013023	0					
ANR	1013242	PrimaryExpression	8		1013023	1					
ANR	1013243	ExpressionStatement	outp [ 1 ] = value	1143:12:34958:34973	1013023	4	True				
ANR	1013244	AssignmentExpression	outp [ 1 ] = value		1013023	0		=			
ANR	1013245	ArrayIndexing	outp [ 1 ]		1013023	0					
ANR	1013246	Identifier	outp		1013023	0					
ANR	1013247	PrimaryExpression	1		1013023	1					
ANR	1013248	Identifier	value		1013023	1					
ANR	1013249	ExpressionStatement	outp += 2	1144:12:34987:34996	1013023	5	True				
ANR	1013250	AssignmentExpression	outp += 2		1013023	0		+=			
ANR	1013251	Identifier	outp		1013023	0					
ANR	1013252	PrimaryExpression	2		1013023	1					
ANR	1013253	ReturnType	static void		1013023	1					
ANR	1013254	Identifier	down_core16		1013023	2					
ANR	1013255	ParameterList	"gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span"		1013023	3					
ANR	1013256	Parameter	gx_downscaler_t * ds	1095:24:33640:33658	1013023	0	True				
ANR	1013257	ParameterType	gx_downscaler_t *		1013023	0					
ANR	1013258	Identifier	ds		1013023	1					
ANR	1013259	Parameter	byte * outp	1096:24:33685:33705	1013023	1	True				
ANR	1013260	ParameterType	byte *		1013023	0					
ANR	1013261	Identifier	outp		1013023	1					
ANR	1013262	Parameter	byte * in_buffer	1097:24:33732:33757	1013023	2	True				
ANR	1013263	ParameterType	byte *		1013023	0					
ANR	1013264	Identifier	in_buffer		1013023	1					
ANR	1013265	Parameter	int row	1098:24:33784:33803	1013023	3	True				
ANR	1013266	ParameterType	int		1013023	0					
ANR	1013267	Identifier	row		1013023	1					
ANR	1013268	Parameter	int plane	1099:24:33830:33851	1013023	4	True				
ANR	1013269	ParameterType	int		1013023	0					
ANR	1013270	Identifier	plane		1013023	1					
ANR	1013271	Parameter	int span	1100:24:33878:33898	1013023	5	True				
ANR	1013272	ParameterType	int		1013023	0					
ANR	1013273	Identifier	span		1013023	1					
ANR	1013274	CFGEntryNode	ENTRY		1013023		True				
ANR	1013275	CFGExitNode	EXIT		1013023		True				
ANR	1013276	Symbol	plane		1013023						
ANR	1013277	Symbol	xx		1013023						
ANR	1013278	Symbol	awidth		1013023						
ANR	1013279	Symbol	in_buffer		1013023						
ANR	1013280	Symbol	ds -> awidth		1013023						
ANR	1013281	Symbol	back		1013023						
ANR	1013282	Symbol	inp		1013023						
ANR	1013283	Symbol	* inp		1013023						
ANR	1013284	Symbol	ds		1013023						
ANR	1013285	Symbol	div		1013023						
ANR	1013286	Symbol	outp		1013023						
ANR	1013287	Symbol	pad_white		1013023						
ANR	1013288	Symbol	* ds		1013023						
ANR	1013289	Symbol	ds -> factor		1013023						
ANR	1013290	Symbol	x		1013023						
ANR	1013291	Symbol	width		1013023						
ANR	1013292	Symbol	y		1013023						
ANR	1013293	Symbol	ds -> width		1013023						
ANR	1013294	Symbol	* outp		1013023						
ANR	1013295	Symbol	row		1013023						
ANR	1013296	Symbol	factor		1013023						
ANR	1013297	Symbol	value		1013023						
ANR	1013298	Symbol	span		1013023						
ANR	1013299	Function	down_core8	1149:0:35017:36279							
ANR	1013300	FunctionDef	"down_core8 (gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span)"		1013299	0					
ANR	1013301	CompoundStatement		1155:0:35296:36279	1013299	0					
ANR	1013302	IdentifierDeclStatement	"int x , xx , y , value ;"	1156:4:35302:35323	1013299	0	True				
ANR	1013303	IdentifierDecl	x		1013299	0					
ANR	1013304	IdentifierDeclType	int		1013299	0					
ANR	1013305	Identifier	x		1013299	1					
ANR	1013306	IdentifierDecl	xx		1013299	1					
ANR	1013307	IdentifierDeclType	int		1013299	0					
ANR	1013308	Identifier	xx		1013299	1					
ANR	1013309	IdentifierDecl	y		1013299	2					
ANR	1013310	IdentifierDeclType	int		1013299	0					
ANR	1013311	Identifier	y		1013299	1					
ANR	1013312	IdentifierDecl	value		1013299	3					
ANR	1013313	IdentifierDeclType	int		1013299	0					
ANR	1013314	Identifier	value		1013299	1					
ANR	1013315	IdentifierDeclStatement	int pad_white ;	1157:4:35329:35344	1013299	1	True				
ANR	1013316	IdentifierDecl	pad_white		1013299	0					
ANR	1013317	IdentifierDeclType	int		1013299	0					
ANR	1013318	Identifier	pad_white		1013299	1					
ANR	1013319	IdentifierDeclStatement	byte * inp ;	1158:4:35350:35359	1013299	2	True				
ANR	1013320	IdentifierDecl	* inp		1013299	0					
ANR	1013321	IdentifierDeclType	byte *		1013299	0					
ANR	1013322	Identifier	inp		1013299	1					
ANR	1013323	IdentifierDeclStatement	int width = ds -> width ;	1159:4:35365:35389	1013299	3	True				
ANR	1013324	IdentifierDecl	width = ds -> width		1013299	0					
ANR	1013325	IdentifierDeclType	int		1013299	0					
ANR	1013326	Identifier	width		1013299	1					
ANR	1013327	AssignmentExpression	width = ds -> width		1013299	2		=			
ANR	1013328	Identifier	width		1013299	0					
ANR	1013329	PtrMemberAccess	ds -> width		1013299	1					
ANR	1013330	Identifier	ds		1013299	0					
ANR	1013331	Identifier	width		1013299	1					
ANR	1013332	IdentifierDeclStatement	int awidth = ds -> awidth ;	1160:4:35395:35420	1013299	4	True				
ANR	1013333	IdentifierDecl	awidth = ds -> awidth		1013299	0					
ANR	1013334	IdentifierDeclType	int		1013299	0					
ANR	1013335	Identifier	awidth		1013299	1					
ANR	1013336	AssignmentExpression	awidth = ds -> awidth		1013299	2		=			
ANR	1013337	Identifier	awidth		1013299	0					
ANR	1013338	PtrMemberAccess	ds -> awidth		1013299	1					
ANR	1013339	Identifier	ds		1013299	0					
ANR	1013340	Identifier	awidth		1013299	1					
ANR	1013341	IdentifierDeclStatement	int factor = ds -> factor ;	1161:4:35426:35451	1013299	5	True				
ANR	1013342	IdentifierDecl	factor = ds -> factor		1013299	0					
ANR	1013343	IdentifierDeclType	int		1013299	0					
ANR	1013344	Identifier	factor		1013299	1					
ANR	1013345	AssignmentExpression	factor = ds -> factor		1013299	2		=			
ANR	1013346	Identifier	factor		1013299	0					
ANR	1013347	PtrMemberAccess	ds -> factor		1013299	1					
ANR	1013348	Identifier	ds		1013299	0					
ANR	1013349	Identifier	factor		1013299	1					
ANR	1013350	IdentifierDeclStatement	int div = factor * factor ;	1162:4:35457:35485	1013299	6	True				
ANR	1013351	IdentifierDecl	div = factor * factor		1013299	0					
ANR	1013352	IdentifierDeclType	int		1013299	0					
ANR	1013353	Identifier	div		1013299	1					
ANR	1013354	AssignmentExpression	div = factor * factor		1013299	2		=			
ANR	1013355	Identifier	div		1013299	0					
ANR	1013356	MultiplicativeExpression	factor * factor		1013299	1		*			
ANR	1013357	Identifier	factor		1013299	0					
ANR	1013358	Identifier	factor		1013299	1					
ANR	1013359	ExpressionStatement	pad_white = ( awidth - width ) * factor	1164:4:35492:35529	1013299	7	True				
ANR	1013360	AssignmentExpression	pad_white = ( awidth - width ) * factor		1013299	0		=			
ANR	1013361	Identifier	pad_white		1013299	0					
ANR	1013362	MultiplicativeExpression	( awidth - width ) * factor		1013299	1		*			
ANR	1013363	AdditiveExpression	awidth - width		1013299	0		-			
ANR	1013364	Identifier	awidth		1013299	0					
ANR	1013365	Identifier	width		1013299	1					
ANR	1013366	Identifier	factor		1013299	1					
ANR	1013367	IfStatement	if ( pad_white < 0 )		1013299	8					
ANR	1013368	Condition	pad_white < 0	1165:8:35539:35551	1013299	0	True				
ANR	1013369	RelationalExpression	pad_white < 0		1013299	0		<			
ANR	1013370	Identifier	pad_white		1013299	0					
ANR	1013371	PrimaryExpression	0		1013299	1					
ANR	1013372	ExpressionStatement	pad_white = 0	1166:8:35562:35575	1013299	1	True				
ANR	1013373	AssignmentExpression	pad_white = 0		1013299	0		=			
ANR	1013374	Identifier	pad_white		1013299	0					
ANR	1013375	PrimaryExpression	0		1013299	1					
ANR	1013376	IfStatement	if ( pad_white )		1013299	9					
ANR	1013377	Condition	pad_white	1168:8:35586:35594	1013299	0	True				
ANR	1013378	Identifier	pad_white		1013299	0					
ANR	1013379	CompoundStatement		15:4:304:304	1013299	1					
ANR	1013380	ExpressionStatement	inp = in_buffer + width * factor	1170:8:35611:35641	1013299	0	True				
ANR	1013381	AssignmentExpression	inp = in_buffer + width * factor		1013299	0		=			
ANR	1013382	Identifier	inp		1013299	0					
ANR	1013383	AdditiveExpression	in_buffer + width * factor		1013299	1		+			
ANR	1013384	Identifier	in_buffer		1013299	0					
ANR	1013385	MultiplicativeExpression	width * factor		1013299	1		*			
ANR	1013386	Identifier	width		1013299	0					
ANR	1013387	Identifier	factor		1013299	1					
ANR	1013388	ForStatement	for ( y = factor ; y > 0 ; y -- )		1013299	1					
ANR	1013389	ForInit	y = factor ;	1171:13:35656:35666	1013299	0	True				
ANR	1013390	AssignmentExpression	y = factor		1013299	0		=			
ANR	1013391	Identifier	y		1013299	0					
ANR	1013392	Identifier	factor		1013299	1					
ANR	1013393	Condition	y > 0	1171:25:35668:35672	1013299	1	True				
ANR	1013394	RelationalExpression	y > 0		1013299	0		>			
ANR	1013395	Identifier	y		1013299	0					
ANR	1013396	PrimaryExpression	0		1013299	1					
ANR	1013397	PostIncDecOperationExpression	y --	1171:32:35675:35677	1013299	2	True				
ANR	1013398	Identifier	y		1013299	0					
ANR	1013399	IncDec	--		1013299	1					
ANR	1013400	CompoundStatement		18:8:391:391	1013299	3					
ANR	1013401	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	1173:12:35702:35730	1013299	0	True				
ANR	1013402	CallExpression	"memset ( inp , 0xFF , pad_white )"		1013299	0					
ANR	1013403	Callee	memset		1013299	0					
ANR	1013404	Identifier	memset		1013299	0					
ANR	1013405	ArgumentList	inp		1013299	1					
ANR	1013406	Argument	inp		1013299	0					
ANR	1013407	Identifier	inp		1013299	0					
ANR	1013408	Argument	0xFF		1013299	1					
ANR	1013409	PrimaryExpression	0xFF		1013299	0					
ANR	1013410	Argument	pad_white		1013299	2					
ANR	1013411	Identifier	pad_white		1013299	0					
ANR	1013412	ExpressionStatement	inp += span	1174:12:35744:35755	1013299	1	True				
ANR	1013413	AssignmentExpression	inp += span		1013299	0		+=			
ANR	1013414	Identifier	inp		1013299	0					
ANR	1013415	Identifier	span		1013299	1					
ANR	1013416	ExpressionStatement	inp = in_buffer	1178:4:35778:35793	1013299	10	True				
ANR	1013417	AssignmentExpression	inp = in_buffer		1013299	0		=			
ANR	1013418	Identifier	inp		1013299	0					
ANR	1013419	Identifier	in_buffer		1013299	1					
ANR	1013420	CompoundStatement		27:8:567:600	1013299	11					
ANR	1013421	IdentifierDeclStatement	const int back = span * factor - 1 ;	1181:8:35864:35897	1013299	0	True				
ANR	1013422	IdentifierDecl	back = span * factor - 1		1013299	0					
ANR	1013423	IdentifierDeclType	const int		1013299	0					
ANR	1013424	Identifier	back		1013299	1					
ANR	1013425	AssignmentExpression	back = span * factor - 1		1013299	2		=			
ANR	1013426	Identifier	back		1013299	0					
ANR	1013427	AdditiveExpression	span * factor - 1		1013299	1		-			
ANR	1013428	MultiplicativeExpression	span * factor		1013299	0		*			
ANR	1013429	Identifier	span		1013299	0					
ANR	1013430	Identifier	factor		1013299	1					
ANR	1013431	PrimaryExpression	1		1013299	1					
ANR	1013432	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1013299	1					
ANR	1013433	ForInit	x = awidth ;	1182:13:35912:35922	1013299	0	True				
ANR	1013434	AssignmentExpression	x = awidth		1013299	0		=			
ANR	1013435	Identifier	x		1013299	0					
ANR	1013436	Identifier	awidth		1013299	1					
ANR	1013437	Condition	x > 0	1182:25:35924:35928	1013299	1	True				
ANR	1013438	RelationalExpression	x > 0		1013299	0		>			
ANR	1013439	Identifier	x		1013299	0					
ANR	1013440	PrimaryExpression	0		1013299	1					
ANR	1013441	PostIncDecOperationExpression	x --	1182:32:35931:35933	1013299	2	True				
ANR	1013442	Identifier	x		1013299	0					
ANR	1013443	IncDec	--		1013299	1					
ANR	1013444	CompoundStatement		29:8:647:647	1013299	3					
ANR	1013445	ExpressionStatement	value = 0	1184:12:35958:35967	1013299	0	True				
ANR	1013446	AssignmentExpression	value = 0		1013299	0		=			
ANR	1013447	Identifier	value		1013299	0					
ANR	1013448	PrimaryExpression	0		1013299	1					
ANR	1013449	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1013299	1					
ANR	1013450	ForInit	xx = factor ;	1185:17:35986:35997	1013299	0	True				
ANR	1013451	AssignmentExpression	xx = factor		1013299	0		=			
ANR	1013452	Identifier	xx		1013299	0					
ANR	1013453	Identifier	factor		1013299	1					
ANR	1013454	Condition	xx > 0	1185:30:35999:36004	1013299	1	True				
ANR	1013455	RelationalExpression	xx > 0		1013299	0		>			
ANR	1013456	Identifier	xx		1013299	0					
ANR	1013457	PrimaryExpression	0		1013299	1					
ANR	1013458	PostIncDecOperationExpression	xx --	1185:38:36007:36010	1013299	2	True				
ANR	1013459	Identifier	xx		1013299	0					
ANR	1013460	IncDec	--		1013299	1					
ANR	1013461	CompoundStatement		32:12:728:728	1013299	3					
ANR	1013462	ForStatement	for ( y = factor ; y > 0 ; y -- )		1013299	0					
ANR	1013463	ForInit	y = factor ;	1187:21:36048:36058	1013299	0	True				
ANR	1013464	AssignmentExpression	y = factor		1013299	0		=			
ANR	1013465	Identifier	y		1013299	0					
ANR	1013466	Identifier	factor		1013299	1					
ANR	1013467	Condition	y > 0	1187:33:36060:36064	1013299	1	True				
ANR	1013468	RelationalExpression	y > 0		1013299	0		>			
ANR	1013469	Identifier	y		1013299	0					
ANR	1013470	PrimaryExpression	0		1013299	1					
ANR	1013471	PostIncDecOperationExpression	y --	1187:40:36067:36069	1013299	2	True				
ANR	1013472	Identifier	y		1013299	0					
ANR	1013473	IncDec	--		1013299	1					
ANR	1013474	CompoundStatement		34:16:791:791	1013299	3					
ANR	1013475	ExpressionStatement	value += * inp	1189:20:36110:36123	1013299	0	True				
ANR	1013476	AssignmentExpression	value += * inp		1013299	0		+=			
ANR	1013477	Identifier	value		1013299	0					
ANR	1013478	UnaryOperationExpression	* inp		1013299	1					
ANR	1013479	UnaryOperator	*		1013299	0					
ANR	1013480	Identifier	inp		1013299	1					
ANR	1013481	ExpressionStatement	inp += span	1190:20:36145:36156	1013299	1	True				
ANR	1013482	AssignmentExpression	inp += span		1013299	0		+=			
ANR	1013483	Identifier	inp		1013299	0					
ANR	1013484	Identifier	span		1013299	1					
ANR	1013485	ExpressionStatement	inp -= back	1192:16:36192:36203	1013299	1	True				
ANR	1013486	AssignmentExpression	inp -= back		1013299	0		-=			
ANR	1013487	Identifier	inp		1013299	0					
ANR	1013488	Identifier	back		1013299	1					
ANR	1013489	ExpressionStatement	* outp ++ = ( value + ( div >> 1 ) ) / div	1194:12:36231:36261	1013299	2	True				
ANR	1013490	AssignmentExpression	* outp ++ = ( value + ( div >> 1 ) ) / div		1013299	0		=			
ANR	1013491	UnaryOperationExpression	* outp ++		1013299	0					
ANR	1013492	UnaryOperator	*		1013299	0					
ANR	1013493	PostIncDecOperationExpression	outp ++		1013299	1					
ANR	1013494	Identifier	outp		1013299	0					
ANR	1013495	IncDec	++		1013299	1					
ANR	1013496	MultiplicativeExpression	( value + ( div >> 1 ) ) / div		1013299	1		/			
ANR	1013497	AdditiveExpression	value + ( div >> 1 )		1013299	0		+			
ANR	1013498	Identifier	value		1013299	0					
ANR	1013499	ShiftExpression	div >> 1		1013299	1		>>			
ANR	1013500	Identifier	div		1013299	0					
ANR	1013501	PrimaryExpression	1		1013299	1					
ANR	1013502	Identifier	div		1013299	1					
ANR	1013503	ReturnType	static void		1013299	1					
ANR	1013504	Identifier	down_core8		1013299	2					
ANR	1013505	ParameterList	"gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span"		1013299	3					
ANR	1013506	Parameter	gx_downscaler_t * ds	1149:23:35040:35058	1013299	0	True				
ANR	1013507	ParameterType	gx_downscaler_t *		1013299	0					
ANR	1013508	Identifier	ds		1013299	1					
ANR	1013509	Parameter	byte * outp	1150:23:35084:35104	1013299	1	True				
ANR	1013510	ParameterType	byte *		1013299	0					
ANR	1013511	Identifier	outp		1013299	1					
ANR	1013512	Parameter	byte * in_buffer	1151:23:35130:35155	1013299	2	True				
ANR	1013513	ParameterType	byte *		1013299	0					
ANR	1013514	Identifier	in_buffer		1013299	1					
ANR	1013515	Parameter	int row	1152:23:35181:35200	1013299	3	True				
ANR	1013516	ParameterType	int		1013299	0					
ANR	1013517	Identifier	row		1013299	1					
ANR	1013518	Parameter	int plane	1153:23:35226:35247	1013299	4	True				
ANR	1013519	ParameterType	int		1013299	0					
ANR	1013520	Identifier	plane		1013299	1					
ANR	1013521	Parameter	int span	1154:23:35273:35293	1013299	5	True				
ANR	1013522	ParameterType	int		1013299	0					
ANR	1013523	Identifier	span		1013299	1					
ANR	1013524	CFGEntryNode	ENTRY		1013299		True				
ANR	1013525	CFGExitNode	EXIT		1013299		True				
ANR	1013526	Symbol	plane		1013299						
ANR	1013527	Symbol	xx		1013299						
ANR	1013528	Symbol	awidth		1013299						
ANR	1013529	Symbol	in_buffer		1013299						
ANR	1013530	Symbol	ds -> awidth		1013299						
ANR	1013531	Symbol	back		1013299						
ANR	1013532	Symbol	inp		1013299						
ANR	1013533	Symbol	* inp		1013299						
ANR	1013534	Symbol	ds		1013299						
ANR	1013535	Symbol	div		1013299						
ANR	1013536	Symbol	outp		1013299						
ANR	1013537	Symbol	pad_white		1013299						
ANR	1013538	Symbol	* ds		1013299						
ANR	1013539	Symbol	ds -> factor		1013299						
ANR	1013540	Symbol	x		1013299						
ANR	1013541	Symbol	width		1013299						
ANR	1013542	Symbol	* outp ++		1013299						
ANR	1013543	Symbol	y		1013299						
ANR	1013544	Symbol	ds -> width		1013299						
ANR	1013545	Symbol	row		1013299						
ANR	1013546	Symbol	factor		1013299						
ANR	1013547	Symbol	value		1013299						
ANR	1013548	Symbol	span		1013299						
ANR	1013549	Function	down_core8_2	1199:0:36282:37163							
ANR	1013550	FunctionDef	"down_core8_2 (gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span)"		1013549	0					
ANR	1013551	CompoundStatement		1205:0:36573:37163	1013549	0					
ANR	1013552	IdentifierDeclStatement	int x ;	1206:4:36579:36586	1013549	0	True				
ANR	1013553	IdentifierDecl	x		1013549	0					
ANR	1013554	IdentifierDeclType	int		1013549	0					
ANR	1013555	Identifier	x		1013549	1					
ANR	1013556	IdentifierDeclStatement	int pad_white ;	1207:4:36592:36607	1013549	1	True				
ANR	1013557	IdentifierDecl	pad_white		1013549	0					
ANR	1013558	IdentifierDeclType	int		1013549	0					
ANR	1013559	Identifier	pad_white		1013549	1					
ANR	1013560	IdentifierDeclStatement	byte * inp ;	1208:4:36613:36622	1013549	2	True				
ANR	1013561	IdentifierDecl	* inp		1013549	0					
ANR	1013562	IdentifierDeclType	byte *		1013549	0					
ANR	1013563	Identifier	inp		1013549	1					
ANR	1013564	IdentifierDeclStatement	int width = ds -> width ;	1209:4:36628:36652	1013549	3	True				
ANR	1013565	IdentifierDecl	width = ds -> width		1013549	0					
ANR	1013566	IdentifierDeclType	int		1013549	0					
ANR	1013567	Identifier	width		1013549	1					
ANR	1013568	AssignmentExpression	width = ds -> width		1013549	2		=			
ANR	1013569	Identifier	width		1013549	0					
ANR	1013570	PtrMemberAccess	ds -> width		1013549	1					
ANR	1013571	Identifier	ds		1013549	0					
ANR	1013572	Identifier	width		1013549	1					
ANR	1013573	IdentifierDeclStatement	int awidth = ds -> awidth ;	1210:4:36658:36683	1013549	4	True				
ANR	1013574	IdentifierDecl	awidth = ds -> awidth		1013549	0					
ANR	1013575	IdentifierDeclType	int		1013549	0					
ANR	1013576	Identifier	awidth		1013549	1					
ANR	1013577	AssignmentExpression	awidth = ds -> awidth		1013549	2		=			
ANR	1013578	Identifier	awidth		1013549	0					
ANR	1013579	PtrMemberAccess	ds -> awidth		1013549	1					
ANR	1013580	Identifier	ds		1013549	0					
ANR	1013581	Identifier	awidth		1013549	1					
ANR	1013582	ExpressionStatement	pad_white = ( awidth - width ) * 2	1212:4:36690:36722	1013549	5	True				
ANR	1013583	AssignmentExpression	pad_white = ( awidth - width ) * 2		1013549	0		=			
ANR	1013584	Identifier	pad_white		1013549	0					
ANR	1013585	MultiplicativeExpression	( awidth - width ) * 2		1013549	1		*			
ANR	1013586	AdditiveExpression	awidth - width		1013549	0		-			
ANR	1013587	Identifier	awidth		1013549	0					
ANR	1013588	Identifier	width		1013549	1					
ANR	1013589	PrimaryExpression	2		1013549	1					
ANR	1013590	IfStatement	if ( pad_white < 0 )		1013549	6					
ANR	1013591	Condition	pad_white < 0	1213:8:36732:36744	1013549	0	True				
ANR	1013592	RelationalExpression	pad_white < 0		1013549	0		<			
ANR	1013593	Identifier	pad_white		1013549	0					
ANR	1013594	PrimaryExpression	0		1013549	1					
ANR	1013595	ExpressionStatement	pad_white = 0	1214:8:36755:36768	1013549	1	True				
ANR	1013596	AssignmentExpression	pad_white = 0		1013549	0		=			
ANR	1013597	Identifier	pad_white		1013549	0					
ANR	1013598	PrimaryExpression	0		1013549	1					
ANR	1013599	IfStatement	if ( pad_white )		1013549	7					
ANR	1013600	Condition	pad_white	1216:8:36779:36787	1013549	0	True				
ANR	1013601	Identifier	pad_white		1013549	0					
ANR	1013602	CompoundStatement		13:4:220:220	1013549	1					
ANR	1013603	ExpressionStatement	inp = in_buffer + width * 2	1218:8:36804:36829	1013549	0	True				
ANR	1013604	AssignmentExpression	inp = in_buffer + width * 2		1013549	0		=			
ANR	1013605	Identifier	inp		1013549	0					
ANR	1013606	AdditiveExpression	in_buffer + width * 2		1013549	1		+			
ANR	1013607	Identifier	in_buffer		1013549	0					
ANR	1013608	MultiplicativeExpression	width * 2		1013549	1		*			
ANR	1013609	Identifier	width		1013549	0					
ANR	1013610	PrimaryExpression	2		1013549	1					
ANR	1013611	ForStatement	for ( x = 2 ; x > 0 ; x -- )		1013549	1					
ANR	1013612	ForInit	x = 2 ;	1219:13:36844:36849	1013549	0	True				
ANR	1013613	AssignmentExpression	x = 2		1013549	0		=			
ANR	1013614	Identifier	x		1013549	0					
ANR	1013615	PrimaryExpression	2		1013549	1					
ANR	1013616	Condition	x > 0	1219:20:36851:36855	1013549	1	True				
ANR	1013617	RelationalExpression	x > 0		1013549	0		>			
ANR	1013618	Identifier	x		1013549	0					
ANR	1013619	PrimaryExpression	0		1013549	1					
ANR	1013620	PostIncDecOperationExpression	x --	1219:27:36858:36860	1013549	2	True				
ANR	1013621	Identifier	x		1013549	0					
ANR	1013622	IncDec	--		1013549	1					
ANR	1013623	CompoundStatement		16:8:297:297	1013549	3					
ANR	1013624	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	1221:12:36885:36913	1013549	0	True				
ANR	1013625	CallExpression	"memset ( inp , 0xFF , pad_white )"		1013549	0					
ANR	1013626	Callee	memset		1013549	0					
ANR	1013627	Identifier	memset		1013549	0					
ANR	1013628	ArgumentList	inp		1013549	1					
ANR	1013629	Argument	inp		1013549	0					
ANR	1013630	Identifier	inp		1013549	0					
ANR	1013631	Argument	0xFF		1013549	1					
ANR	1013632	PrimaryExpression	0xFF		1013549	0					
ANR	1013633	Argument	pad_white		1013549	2					
ANR	1013634	Identifier	pad_white		1013549	0					
ANR	1013635	ExpressionStatement	inp += span	1222:12:36927:36938	1013549	1	True				
ANR	1013636	AssignmentExpression	inp += span		1013549	0		+=			
ANR	1013637	Identifier	inp		1013549	0					
ANR	1013638	Identifier	span		1013549	1					
ANR	1013639	ExpressionStatement	inp = in_buffer	1226:4:36961:36976	1013549	8	True				
ANR	1013640	AssignmentExpression	inp = in_buffer		1013549	0		=			
ANR	1013641	Identifier	inp		1013549	0					
ANR	1013642	Identifier	in_buffer		1013549	1					
ANR	1013643	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1013549	9					
ANR	1013644	ForInit	x = awidth ;	1229:9:37039:37049	1013549	0	True				
ANR	1013645	AssignmentExpression	x = awidth		1013549	0		=			
ANR	1013646	Identifier	x		1013549	0					
ANR	1013647	Identifier	awidth		1013549	1					
ANR	1013648	Condition	x > 0	1229:21:37051:37055	1013549	1	True				
ANR	1013649	RelationalExpression	x > 0		1013549	0		>			
ANR	1013650	Identifier	x		1013549	0					
ANR	1013651	PrimaryExpression	0		1013549	1					
ANR	1013652	PostIncDecOperationExpression	x --	1229:28:37058:37060	1013549	2	True				
ANR	1013653	Identifier	x		1013549	0					
ANR	1013654	IncDec	--		1013549	1					
ANR	1013655	CompoundStatement		26:4:493:493	1013549	3					
ANR	1013656	ExpressionStatement	* outp ++ = ( inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ] + 2 ) >> 2	1231:8:37077:37137	1013549	0	True				
ANR	1013657	AssignmentExpression	* outp ++ = ( inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ] + 2 ) >> 2		1013549	0		=			
ANR	1013658	UnaryOperationExpression	* outp ++		1013549	0					
ANR	1013659	UnaryOperator	*		1013549	0					
ANR	1013660	PostIncDecOperationExpression	outp ++		1013549	1					
ANR	1013661	Identifier	outp		1013549	0					
ANR	1013662	IncDec	++		1013549	1					
ANR	1013663	ShiftExpression	( inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ] + 2 ) >> 2		1013549	1		>>			
ANR	1013664	AdditiveExpression	inp [ 0 ] + inp [ 1 ] + inp [ span ] + inp [ span + 1 ] + 2		1013549	0		+			
ANR	1013665	ArrayIndexing	inp [ 0 ]		1013549	0					
ANR	1013666	Identifier	inp		1013549	0					
ANR	1013667	PrimaryExpression	0		1013549	1					
ANR	1013668	AdditiveExpression	inp [ 1 ] + inp [ span ] + inp [ span + 1 ] + 2		1013549	1		+			
ANR	1013669	ArrayIndexing	inp [ 1 ]		1013549	0					
ANR	1013670	Identifier	inp		1013549	0					
ANR	1013671	PrimaryExpression	1		1013549	1					
ANR	1013672	AdditiveExpression	inp [ span ] + inp [ span + 1 ] + 2		1013549	1		+			
ANR	1013673	ArrayIndexing	inp [ span ]		1013549	0					
ANR	1013674	Identifier	inp		1013549	0					
ANR	1013675	Identifier	span		1013549	1					
ANR	1013676	AdditiveExpression	inp [ span + 1 ] + 2		1013549	1		+			
ANR	1013677	ArrayIndexing	inp [ span + 1 ]		1013549	0					
ANR	1013678	Identifier	inp		1013549	0					
ANR	1013679	AdditiveExpression	span + 1		1013549	1		+			
ANR	1013680	Identifier	span		1013549	0					
ANR	1013681	PrimaryExpression	1		1013549	1					
ANR	1013682	PrimaryExpression	2		1013549	1					
ANR	1013683	PrimaryExpression	2		1013549	1					
ANR	1013684	ExpressionStatement	inp += 2	1232:8:37147:37155	1013549	1	True				
ANR	1013685	AssignmentExpression	inp += 2		1013549	0		+=			
ANR	1013686	Identifier	inp		1013549	0					
ANR	1013687	PrimaryExpression	2		1013549	1					
ANR	1013688	ReturnType	static void		1013549	1					
ANR	1013689	Identifier	down_core8_2		1013549	2					
ANR	1013690	ParameterList	"gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span"		1013549	3					
ANR	1013691	Parameter	gx_downscaler_t * ds	1199:25:36307:36325	1013549	0	True				
ANR	1013692	ParameterType	gx_downscaler_t *		1013549	0					
ANR	1013693	Identifier	ds		1013549	1					
ANR	1013694	Parameter	byte * outp	1200:25:36353:36373	1013549	1	True				
ANR	1013695	ParameterType	byte *		1013549	0					
ANR	1013696	Identifier	outp		1013549	1					
ANR	1013697	Parameter	byte * in_buffer	1201:25:36401:36426	1013549	2	True				
ANR	1013698	ParameterType	byte *		1013549	0					
ANR	1013699	Identifier	in_buffer		1013549	1					
ANR	1013700	Parameter	int row	1202:25:36454:36473	1013549	3	True				
ANR	1013701	ParameterType	int		1013549	0					
ANR	1013702	Identifier	row		1013549	1					
ANR	1013703	Parameter	int plane	1203:25:36501:36522	1013549	4	True				
ANR	1013704	ParameterType	int		1013549	0					
ANR	1013705	Identifier	plane		1013549	1					
ANR	1013706	Parameter	int span	1204:25:36550:36570	1013549	5	True				
ANR	1013707	ParameterType	int		1013549	0					
ANR	1013708	Identifier	span		1013549	1					
ANR	1013709	CFGEntryNode	ENTRY		1013549		True				
ANR	1013710	CFGExitNode	EXIT		1013549		True				
ANR	1013711	Symbol	plane		1013549						
ANR	1013712	Symbol	awidth		1013549						
ANR	1013713	Symbol	in_buffer		1013549						
ANR	1013714	Symbol	* span		1013549						
ANR	1013715	Symbol	ds -> awidth		1013549						
ANR	1013716	Symbol	inp		1013549						
ANR	1013717	Symbol	* inp		1013549						
ANR	1013718	Symbol	ds		1013549						
ANR	1013719	Symbol	outp		1013549						
ANR	1013720	Symbol	pad_white		1013549						
ANR	1013721	Symbol	* ds		1013549						
ANR	1013722	Symbol	x		1013549						
ANR	1013723	Symbol	width		1013549						
ANR	1013724	Symbol	* outp ++		1013549						
ANR	1013725	Symbol	ds -> width		1013549						
ANR	1013726	Symbol	row		1013549						
ANR	1013727	Symbol	span		1013549						
ANR	1013728	Function	down_core8_3	1236:0:37166:38178							
ANR	1013729	FunctionDef	"down_core8_3 (gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span)"		1013728	0					
ANR	1013730	CompoundStatement		1242:0:37457:38178	1013728	0					
ANR	1013731	IdentifierDeclStatement	int x ;	1243:4:37463:37470	1013728	0	True				
ANR	1013732	IdentifierDecl	x		1013728	0					
ANR	1013733	IdentifierDeclType	int		1013728	0					
ANR	1013734	Identifier	x		1013728	1					
ANR	1013735	IdentifierDeclStatement	int pad_white ;	1244:4:37476:37491	1013728	1	True				
ANR	1013736	IdentifierDecl	pad_white		1013728	0					
ANR	1013737	IdentifierDeclType	int		1013728	0					
ANR	1013738	Identifier	pad_white		1013728	1					
ANR	1013739	IdentifierDeclStatement	byte * inp ;	1245:4:37497:37506	1013728	2	True				
ANR	1013740	IdentifierDecl	* inp		1013728	0					
ANR	1013741	IdentifierDeclType	byte *		1013728	0					
ANR	1013742	Identifier	inp		1013728	1					
ANR	1013743	IdentifierDeclStatement	int width = ds -> width ;	1246:4:37512:37536	1013728	3	True				
ANR	1013744	IdentifierDecl	width = ds -> width		1013728	0					
ANR	1013745	IdentifierDeclType	int		1013728	0					
ANR	1013746	Identifier	width		1013728	1					
ANR	1013747	AssignmentExpression	width = ds -> width		1013728	2		=			
ANR	1013748	Identifier	width		1013728	0					
ANR	1013749	PtrMemberAccess	ds -> width		1013728	1					
ANR	1013750	Identifier	ds		1013728	0					
ANR	1013751	Identifier	width		1013728	1					
ANR	1013752	IdentifierDeclStatement	int awidth = ds -> awidth ;	1247:4:37542:37567	1013728	4	True				
ANR	1013753	IdentifierDecl	awidth = ds -> awidth		1013728	0					
ANR	1013754	IdentifierDeclType	int		1013728	0					
ANR	1013755	Identifier	awidth		1013728	1					
ANR	1013756	AssignmentExpression	awidth = ds -> awidth		1013728	2		=			
ANR	1013757	Identifier	awidth		1013728	0					
ANR	1013758	PtrMemberAccess	ds -> awidth		1013728	1					
ANR	1013759	Identifier	ds		1013728	0					
ANR	1013760	Identifier	awidth		1013728	1					
ANR	1013761	ExpressionStatement	pad_white = ( awidth - width ) * 3	1249:4:37574:37606	1013728	5	True				
ANR	1013762	AssignmentExpression	pad_white = ( awidth - width ) * 3		1013728	0		=			
ANR	1013763	Identifier	pad_white		1013728	0					
ANR	1013764	MultiplicativeExpression	( awidth - width ) * 3		1013728	1		*			
ANR	1013765	AdditiveExpression	awidth - width		1013728	0		-			
ANR	1013766	Identifier	awidth		1013728	0					
ANR	1013767	Identifier	width		1013728	1					
ANR	1013768	PrimaryExpression	3		1013728	1					
ANR	1013769	IfStatement	if ( pad_white < 0 )		1013728	6					
ANR	1013770	Condition	pad_white < 0	1250:8:37616:37628	1013728	0	True				
ANR	1013771	RelationalExpression	pad_white < 0		1013728	0		<			
ANR	1013772	Identifier	pad_white		1013728	0					
ANR	1013773	PrimaryExpression	0		1013728	1					
ANR	1013774	ExpressionStatement	pad_white = 0	1251:8:37639:37652	1013728	1	True				
ANR	1013775	AssignmentExpression	pad_white = 0		1013728	0		=			
ANR	1013776	Identifier	pad_white		1013728	0					
ANR	1013777	PrimaryExpression	0		1013728	1					
ANR	1013778	IfStatement	if ( pad_white )		1013728	7					
ANR	1013779	Condition	pad_white	1253:8:37663:37671	1013728	0	True				
ANR	1013780	Identifier	pad_white		1013728	0					
ANR	1013781	CompoundStatement		13:4:220:220	1013728	1					
ANR	1013782	ExpressionStatement	inp = in_buffer + width * 3	1255:8:37688:37713	1013728	0	True				
ANR	1013783	AssignmentExpression	inp = in_buffer + width * 3		1013728	0		=			
ANR	1013784	Identifier	inp		1013728	0					
ANR	1013785	AdditiveExpression	in_buffer + width * 3		1013728	1		+			
ANR	1013786	Identifier	in_buffer		1013728	0					
ANR	1013787	MultiplicativeExpression	width * 3		1013728	1		*			
ANR	1013788	Identifier	width		1013728	0					
ANR	1013789	PrimaryExpression	3		1013728	1					
ANR	1013790	ForStatement	for ( x = 3 ; x > 0 ; x -- )		1013728	1					
ANR	1013791	ForInit	x = 3 ;	1256:13:37728:37733	1013728	0	True				
ANR	1013792	AssignmentExpression	x = 3		1013728	0		=			
ANR	1013793	Identifier	x		1013728	0					
ANR	1013794	PrimaryExpression	3		1013728	1					
ANR	1013795	Condition	x > 0	1256:20:37735:37739	1013728	1	True				
ANR	1013796	RelationalExpression	x > 0		1013728	0		>			
ANR	1013797	Identifier	x		1013728	0					
ANR	1013798	PrimaryExpression	0		1013728	1					
ANR	1013799	PostIncDecOperationExpression	x --	1256:27:37742:37744	1013728	2	True				
ANR	1013800	Identifier	x		1013728	0					
ANR	1013801	IncDec	--		1013728	1					
ANR	1013802	CompoundStatement		16:8:297:297	1013728	3					
ANR	1013803	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	1258:12:37769:37797	1013728	0	True				
ANR	1013804	CallExpression	"memset ( inp , 0xFF , pad_white )"		1013728	0					
ANR	1013805	Callee	memset		1013728	0					
ANR	1013806	Identifier	memset		1013728	0					
ANR	1013807	ArgumentList	inp		1013728	1					
ANR	1013808	Argument	inp		1013728	0					
ANR	1013809	Identifier	inp		1013728	0					
ANR	1013810	Argument	0xFF		1013728	1					
ANR	1013811	PrimaryExpression	0xFF		1013728	0					
ANR	1013812	Argument	pad_white		1013728	2					
ANR	1013813	Identifier	pad_white		1013728	0					
ANR	1013814	ExpressionStatement	inp += span	1259:12:37811:37822	1013728	1	True				
ANR	1013815	AssignmentExpression	inp += span		1013728	0		+=			
ANR	1013816	Identifier	inp		1013728	0					
ANR	1013817	Identifier	span		1013728	1					
ANR	1013818	ExpressionStatement	inp = in_buffer	1263:4:37845:37860	1013728	8	True				
ANR	1013819	AssignmentExpression	inp = in_buffer		1013728	0		=			
ANR	1013820	Identifier	inp		1013728	0					
ANR	1013821	Identifier	in_buffer		1013728	1					
ANR	1013822	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1013728	9					
ANR	1013823	ForInit	x = awidth ;	1266:9:37923:37933	1013728	0	True				
ANR	1013824	AssignmentExpression	x = awidth		1013728	0		=			
ANR	1013825	Identifier	x		1013728	0					
ANR	1013826	Identifier	awidth		1013728	1					
ANR	1013827	Condition	x > 0	1266:21:37935:37939	1013728	1	True				
ANR	1013828	RelationalExpression	x > 0		1013728	0		>			
ANR	1013829	Identifier	x		1013728	0					
ANR	1013830	PrimaryExpression	0		1013728	1					
ANR	1013831	PostIncDecOperationExpression	x --	1266:28:37942:37944	1013728	2	True				
ANR	1013832	Identifier	x		1013728	0					
ANR	1013833	IncDec	--		1013728	1					
ANR	1013834	CompoundStatement		26:4:493:493	1013728	3					
ANR	1013835	ExpressionStatement	* outp ++ = ( inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4 ) / 9	1268:8:37961:38152	1013728	0	True				
ANR	1013836	AssignmentExpression	* outp ++ = ( inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4 ) / 9		1013728	0		=			
ANR	1013837	UnaryOperationExpression	* outp ++		1013728	0					
ANR	1013838	UnaryOperator	*		1013728	0					
ANR	1013839	PostIncDecOperationExpression	outp ++		1013728	1					
ANR	1013840	Identifier	outp		1013728	0					
ANR	1013841	IncDec	++		1013728	1					
ANR	1013842	MultiplicativeExpression	( inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4 ) / 9		1013728	1		/			
ANR	1013843	AdditiveExpression	inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4		1013728	0		+			
ANR	1013844	ArrayIndexing	inp [ 0 ]		1013728	0					
ANR	1013845	Identifier	inp		1013728	0					
ANR	1013846	PrimaryExpression	0		1013728	1					
ANR	1013847	AdditiveExpression	inp [ 1 ] + inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4		1013728	1		+			
ANR	1013848	ArrayIndexing	inp [ 1 ]		1013728	0					
ANR	1013849	Identifier	inp		1013728	0					
ANR	1013850	PrimaryExpression	1		1013728	1					
ANR	1013851	AdditiveExpression	inp [ 2 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4		1013728	1		+			
ANR	1013852	ArrayIndexing	inp [ 2 ]		1013728	0					
ANR	1013853	Identifier	inp		1013728	0					
ANR	1013854	PrimaryExpression	2		1013728	1					
ANR	1013855	AdditiveExpression	inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4		1013728	1		+			
ANR	1013856	ArrayIndexing	inp [ span ]		1013728	0					
ANR	1013857	Identifier	inp		1013728	0					
ANR	1013858	Identifier	span		1013728	1					
ANR	1013859	AdditiveExpression	inp [ span + 1 ] + inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4		1013728	1		+			
ANR	1013860	ArrayIndexing	inp [ span + 1 ]		1013728	0					
ANR	1013861	Identifier	inp		1013728	0					
ANR	1013862	AdditiveExpression	span + 1		1013728	1		+			
ANR	1013863	Identifier	span		1013728	0					
ANR	1013864	PrimaryExpression	1		1013728	1					
ANR	1013865	AdditiveExpression	inp [ span + 2 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4		1013728	1		+			
ANR	1013866	ArrayIndexing	inp [ span + 2 ]		1013728	0					
ANR	1013867	Identifier	inp		1013728	0					
ANR	1013868	AdditiveExpression	span + 2		1013728	1		+			
ANR	1013869	Identifier	span		1013728	0					
ANR	1013870	PrimaryExpression	2		1013728	1					
ANR	1013871	AdditiveExpression	inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4		1013728	1		+			
ANR	1013872	ArrayIndexing	inp [ span * 2 ]		1013728	0					
ANR	1013873	Identifier	inp		1013728	0					
ANR	1013874	MultiplicativeExpression	span * 2		1013728	1		*			
ANR	1013875	Identifier	span		1013728	0					
ANR	1013876	PrimaryExpression	2		1013728	1					
ANR	1013877	AdditiveExpression	inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + 4		1013728	1		+			
ANR	1013878	ArrayIndexing	inp [ span * 2 + 1 ]		1013728	0					
ANR	1013879	Identifier	inp		1013728	0					
ANR	1013880	AdditiveExpression	span * 2 + 1		1013728	1		+			
ANR	1013881	MultiplicativeExpression	span * 2		1013728	0		*			
ANR	1013882	Identifier	span		1013728	0					
ANR	1013883	PrimaryExpression	2		1013728	1					
ANR	1013884	PrimaryExpression	1		1013728	1					
ANR	1013885	AdditiveExpression	inp [ span * 2 + 2 ] + 4		1013728	1		+			
ANR	1013886	ArrayIndexing	inp [ span * 2 + 2 ]		1013728	0					
ANR	1013887	Identifier	inp		1013728	0					
ANR	1013888	AdditiveExpression	span * 2 + 2		1013728	1		+			
ANR	1013889	MultiplicativeExpression	span * 2		1013728	0		*			
ANR	1013890	Identifier	span		1013728	0					
ANR	1013891	PrimaryExpression	2		1013728	1					
ANR	1013892	PrimaryExpression	2		1013728	1					
ANR	1013893	PrimaryExpression	4		1013728	1					
ANR	1013894	PrimaryExpression	9		1013728	1					
ANR	1013895	ExpressionStatement	inp += 3	1271:8:38162:38170	1013728	1	True				
ANR	1013896	AssignmentExpression	inp += 3		1013728	0		+=			
ANR	1013897	Identifier	inp		1013728	0					
ANR	1013898	PrimaryExpression	3		1013728	1					
ANR	1013899	ReturnType	static void		1013728	1					
ANR	1013900	Identifier	down_core8_3		1013728	2					
ANR	1013901	ParameterList	"gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span"		1013728	3					
ANR	1013902	Parameter	gx_downscaler_t * ds	1236:25:37191:37209	1013728	0	True				
ANR	1013903	ParameterType	gx_downscaler_t *		1013728	0					
ANR	1013904	Identifier	ds		1013728	1					
ANR	1013905	Parameter	byte * outp	1237:25:37237:37257	1013728	1	True				
ANR	1013906	ParameterType	byte *		1013728	0					
ANR	1013907	Identifier	outp		1013728	1					
ANR	1013908	Parameter	byte * in_buffer	1238:25:37285:37310	1013728	2	True				
ANR	1013909	ParameterType	byte *		1013728	0					
ANR	1013910	Identifier	in_buffer		1013728	1					
ANR	1013911	Parameter	int row	1239:25:37338:37357	1013728	3	True				
ANR	1013912	ParameterType	int		1013728	0					
ANR	1013913	Identifier	row		1013728	1					
ANR	1013914	Parameter	int plane	1240:25:37385:37406	1013728	4	True				
ANR	1013915	ParameterType	int		1013728	0					
ANR	1013916	Identifier	plane		1013728	1					
ANR	1013917	Parameter	int span	1241:25:37434:37454	1013728	5	True				
ANR	1013918	ParameterType	int		1013728	0					
ANR	1013919	Identifier	span		1013728	1					
ANR	1013920	CFGEntryNode	ENTRY		1013728		True				
ANR	1013921	CFGExitNode	EXIT		1013728		True				
ANR	1013922	Symbol	plane		1013728						
ANR	1013923	Symbol	awidth		1013728						
ANR	1013924	Symbol	in_buffer		1013728						
ANR	1013925	Symbol	* span		1013728						
ANR	1013926	Symbol	ds -> awidth		1013728						
ANR	1013927	Symbol	inp		1013728						
ANR	1013928	Symbol	* inp		1013728						
ANR	1013929	Symbol	ds		1013728						
ANR	1013930	Symbol	outp		1013728						
ANR	1013931	Symbol	pad_white		1013728						
ANR	1013932	Symbol	* ds		1013728						
ANR	1013933	Symbol	x		1013728						
ANR	1013934	Symbol	width		1013728						
ANR	1013935	Symbol	* outp ++		1013728						
ANR	1013936	Symbol	ds -> width		1013728						
ANR	1013937	Symbol	row		1013728						
ANR	1013938	Symbol	span		1013728						
ANR	1013939	Function	down_core8_4	1275:0:38181:39342							
ANR	1013940	FunctionDef	"down_core8_4 (gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span)"		1013939	0					
ANR	1013941	CompoundStatement		1281:0:38472:39342	1013939	0					
ANR	1013942	IdentifierDeclStatement	int x ;	1282:4:38478:38485	1013939	0	True				
ANR	1013943	IdentifierDecl	x		1013939	0					
ANR	1013944	IdentifierDeclType	int		1013939	0					
ANR	1013945	Identifier	x		1013939	1					
ANR	1013946	IdentifierDeclStatement	int pad_white ;	1283:4:38491:38506	1013939	1	True				
ANR	1013947	IdentifierDecl	pad_white		1013939	0					
ANR	1013948	IdentifierDeclType	int		1013939	0					
ANR	1013949	Identifier	pad_white		1013939	1					
ANR	1013950	IdentifierDeclStatement	byte * inp ;	1284:4:38512:38521	1013939	2	True				
ANR	1013951	IdentifierDecl	* inp		1013939	0					
ANR	1013952	IdentifierDeclType	byte *		1013939	0					
ANR	1013953	Identifier	inp		1013939	1					
ANR	1013954	IdentifierDeclStatement	int width = ds -> width ;	1285:4:38527:38551	1013939	3	True				
ANR	1013955	IdentifierDecl	width = ds -> width		1013939	0					
ANR	1013956	IdentifierDeclType	int		1013939	0					
ANR	1013957	Identifier	width		1013939	1					
ANR	1013958	AssignmentExpression	width = ds -> width		1013939	2		=			
ANR	1013959	Identifier	width		1013939	0					
ANR	1013960	PtrMemberAccess	ds -> width		1013939	1					
ANR	1013961	Identifier	ds		1013939	0					
ANR	1013962	Identifier	width		1013939	1					
ANR	1013963	IdentifierDeclStatement	int awidth = ds -> awidth ;	1286:4:38557:38582	1013939	4	True				
ANR	1013964	IdentifierDecl	awidth = ds -> awidth		1013939	0					
ANR	1013965	IdentifierDeclType	int		1013939	0					
ANR	1013966	Identifier	awidth		1013939	1					
ANR	1013967	AssignmentExpression	awidth = ds -> awidth		1013939	2		=			
ANR	1013968	Identifier	awidth		1013939	0					
ANR	1013969	PtrMemberAccess	ds -> awidth		1013939	1					
ANR	1013970	Identifier	ds		1013939	0					
ANR	1013971	Identifier	awidth		1013939	1					
ANR	1013972	ExpressionStatement	pad_white = ( awidth - width ) * 4	1288:4:38589:38621	1013939	5	True				
ANR	1013973	AssignmentExpression	pad_white = ( awidth - width ) * 4		1013939	0		=			
ANR	1013974	Identifier	pad_white		1013939	0					
ANR	1013975	MultiplicativeExpression	( awidth - width ) * 4		1013939	1		*			
ANR	1013976	AdditiveExpression	awidth - width		1013939	0		-			
ANR	1013977	Identifier	awidth		1013939	0					
ANR	1013978	Identifier	width		1013939	1					
ANR	1013979	PrimaryExpression	4		1013939	1					
ANR	1013980	IfStatement	if ( pad_white < 0 )		1013939	6					
ANR	1013981	Condition	pad_white < 0	1289:8:38631:38643	1013939	0	True				
ANR	1013982	RelationalExpression	pad_white < 0		1013939	0		<			
ANR	1013983	Identifier	pad_white		1013939	0					
ANR	1013984	PrimaryExpression	0		1013939	1					
ANR	1013985	ExpressionStatement	pad_white = 0	1290:8:38654:38667	1013939	1	True				
ANR	1013986	AssignmentExpression	pad_white = 0		1013939	0		=			
ANR	1013987	Identifier	pad_white		1013939	0					
ANR	1013988	PrimaryExpression	0		1013939	1					
ANR	1013989	IfStatement	if ( pad_white )		1013939	7					
ANR	1013990	Condition	pad_white	1292:8:38678:38686	1013939	0	True				
ANR	1013991	Identifier	pad_white		1013939	0					
ANR	1013992	CompoundStatement		13:4:220:220	1013939	1					
ANR	1013993	ExpressionStatement	inp = in_buffer + width * 4	1294:8:38703:38728	1013939	0	True				
ANR	1013994	AssignmentExpression	inp = in_buffer + width * 4		1013939	0		=			
ANR	1013995	Identifier	inp		1013939	0					
ANR	1013996	AdditiveExpression	in_buffer + width * 4		1013939	1		+			
ANR	1013997	Identifier	in_buffer		1013939	0					
ANR	1013998	MultiplicativeExpression	width * 4		1013939	1		*			
ANR	1013999	Identifier	width		1013939	0					
ANR	1014000	PrimaryExpression	4		1013939	1					
ANR	1014001	ForStatement	for ( x = 4 ; x > 0 ; x -- )		1013939	1					
ANR	1014002	ForInit	x = 4 ;	1295:13:38743:38748	1013939	0	True				
ANR	1014003	AssignmentExpression	x = 4		1013939	0		=			
ANR	1014004	Identifier	x		1013939	0					
ANR	1014005	PrimaryExpression	4		1013939	1					
ANR	1014006	Condition	x > 0	1295:20:38750:38754	1013939	1	True				
ANR	1014007	RelationalExpression	x > 0		1013939	0		>			
ANR	1014008	Identifier	x		1013939	0					
ANR	1014009	PrimaryExpression	0		1013939	1					
ANR	1014010	PostIncDecOperationExpression	x --	1295:27:38757:38759	1013939	2	True				
ANR	1014011	Identifier	x		1013939	0					
ANR	1014012	IncDec	--		1013939	1					
ANR	1014013	CompoundStatement		16:8:297:297	1013939	3					
ANR	1014014	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	1297:12:38784:38812	1013939	0	True				
ANR	1014015	CallExpression	"memset ( inp , 0xFF , pad_white )"		1013939	0					
ANR	1014016	Callee	memset		1013939	0					
ANR	1014017	Identifier	memset		1013939	0					
ANR	1014018	ArgumentList	inp		1013939	1					
ANR	1014019	Argument	inp		1013939	0					
ANR	1014020	Identifier	inp		1013939	0					
ANR	1014021	Argument	0xFF		1013939	1					
ANR	1014022	PrimaryExpression	0xFF		1013939	0					
ANR	1014023	Argument	pad_white		1013939	2					
ANR	1014024	Identifier	pad_white		1013939	0					
ANR	1014025	ExpressionStatement	inp += span	1298:12:38826:38837	1013939	1	True				
ANR	1014026	AssignmentExpression	inp += span		1013939	0		+=			
ANR	1014027	Identifier	inp		1013939	0					
ANR	1014028	Identifier	span		1013939	1					
ANR	1014029	ExpressionStatement	inp = in_buffer	1302:4:38860:38875	1013939	8	True				
ANR	1014030	AssignmentExpression	inp = in_buffer		1013939	0		=			
ANR	1014031	Identifier	inp		1013939	0					
ANR	1014032	Identifier	in_buffer		1013939	1					
ANR	1014033	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1013939	9					
ANR	1014034	ForInit	x = awidth ;	1305:9:38938:38948	1013939	0	True				
ANR	1014035	AssignmentExpression	x = awidth		1013939	0		=			
ANR	1014036	Identifier	x		1013939	0					
ANR	1014037	Identifier	awidth		1013939	1					
ANR	1014038	Condition	x > 0	1305:21:38950:38954	1013939	1	True				
ANR	1014039	RelationalExpression	x > 0		1013939	0		>			
ANR	1014040	Identifier	x		1013939	0					
ANR	1014041	PrimaryExpression	0		1013939	1					
ANR	1014042	PostIncDecOperationExpression	x --	1305:28:38957:38959	1013939	2	True				
ANR	1014043	Identifier	x		1013939	0					
ANR	1014044	IncDec	--		1013939	1					
ANR	1014045	CompoundStatement		26:4:493:493	1013939	3					
ANR	1014046	ExpressionStatement	* outp ++ = ( inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8 ) >> 4	1307:8:38976:39316	1013939	0	True				
ANR	1014047	AssignmentExpression	* outp ++ = ( inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8 ) >> 4		1013939	0		=			
ANR	1014048	UnaryOperationExpression	* outp ++		1013939	0					
ANR	1014049	UnaryOperator	*		1013939	0					
ANR	1014050	PostIncDecOperationExpression	outp ++		1013939	1					
ANR	1014051	Identifier	outp		1013939	0					
ANR	1014052	IncDec	++		1013939	1					
ANR	1014053	ShiftExpression	( inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8 ) >> 4		1013939	1		>>			
ANR	1014054	AdditiveExpression	inp [ 0 ] + inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	0		+			
ANR	1014055	ArrayIndexing	inp [ 0 ]		1013939	0					
ANR	1014056	Identifier	inp		1013939	0					
ANR	1014057	PrimaryExpression	0		1013939	1					
ANR	1014058	AdditiveExpression	inp [ 1 ] + inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014059	ArrayIndexing	inp [ 1 ]		1013939	0					
ANR	1014060	Identifier	inp		1013939	0					
ANR	1014061	PrimaryExpression	1		1013939	1					
ANR	1014062	AdditiveExpression	inp [ 2 ] + inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014063	ArrayIndexing	inp [ 2 ]		1013939	0					
ANR	1014064	Identifier	inp		1013939	0					
ANR	1014065	PrimaryExpression	2		1013939	1					
ANR	1014066	AdditiveExpression	inp [ 3 ] + inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014067	ArrayIndexing	inp [ 3 ]		1013939	0					
ANR	1014068	Identifier	inp		1013939	0					
ANR	1014069	PrimaryExpression	3		1013939	1					
ANR	1014070	AdditiveExpression	inp [ span ] + inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014071	ArrayIndexing	inp [ span ]		1013939	0					
ANR	1014072	Identifier	inp		1013939	0					
ANR	1014073	Identifier	span		1013939	1					
ANR	1014074	AdditiveExpression	inp [ span + 1 ] + inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014075	ArrayIndexing	inp [ span + 1 ]		1013939	0					
ANR	1014076	Identifier	inp		1013939	0					
ANR	1014077	AdditiveExpression	span + 1		1013939	1		+			
ANR	1014078	Identifier	span		1013939	0					
ANR	1014079	PrimaryExpression	1		1013939	1					
ANR	1014080	AdditiveExpression	inp [ span + 2 ] + inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014081	ArrayIndexing	inp [ span + 2 ]		1013939	0					
ANR	1014082	Identifier	inp		1013939	0					
ANR	1014083	AdditiveExpression	span + 2		1013939	1		+			
ANR	1014084	Identifier	span		1013939	0					
ANR	1014085	PrimaryExpression	2		1013939	1					
ANR	1014086	AdditiveExpression	inp [ span + 3 ] + inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014087	ArrayIndexing	inp [ span + 3 ]		1013939	0					
ANR	1014088	Identifier	inp		1013939	0					
ANR	1014089	AdditiveExpression	span + 3		1013939	1		+			
ANR	1014090	Identifier	span		1013939	0					
ANR	1014091	PrimaryExpression	3		1013939	1					
ANR	1014092	AdditiveExpression	inp [ span * 2 ] + inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014093	ArrayIndexing	inp [ span * 2 ]		1013939	0					
ANR	1014094	Identifier	inp		1013939	0					
ANR	1014095	MultiplicativeExpression	span * 2		1013939	1		*			
ANR	1014096	Identifier	span		1013939	0					
ANR	1014097	PrimaryExpression	2		1013939	1					
ANR	1014098	AdditiveExpression	inp [ span * 2 + 1 ] + inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014099	ArrayIndexing	inp [ span * 2 + 1 ]		1013939	0					
ANR	1014100	Identifier	inp		1013939	0					
ANR	1014101	AdditiveExpression	span * 2 + 1		1013939	1		+			
ANR	1014102	MultiplicativeExpression	span * 2		1013939	0		*			
ANR	1014103	Identifier	span		1013939	0					
ANR	1014104	PrimaryExpression	2		1013939	1					
ANR	1014105	PrimaryExpression	1		1013939	1					
ANR	1014106	AdditiveExpression	inp [ span * 2 + 2 ] + inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014107	ArrayIndexing	inp [ span * 2 + 2 ]		1013939	0					
ANR	1014108	Identifier	inp		1013939	0					
ANR	1014109	AdditiveExpression	span * 2 + 2		1013939	1		+			
ANR	1014110	MultiplicativeExpression	span * 2		1013939	0		*			
ANR	1014111	Identifier	span		1013939	0					
ANR	1014112	PrimaryExpression	2		1013939	1					
ANR	1014113	PrimaryExpression	2		1013939	1					
ANR	1014114	AdditiveExpression	inp [ span * 2 + 3 ] + inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014115	ArrayIndexing	inp [ span * 2 + 3 ]		1013939	0					
ANR	1014116	Identifier	inp		1013939	0					
ANR	1014117	AdditiveExpression	span * 2 + 3		1013939	1		+			
ANR	1014118	MultiplicativeExpression	span * 2		1013939	0		*			
ANR	1014119	Identifier	span		1013939	0					
ANR	1014120	PrimaryExpression	2		1013939	1					
ANR	1014121	PrimaryExpression	3		1013939	1					
ANR	1014122	AdditiveExpression	inp [ span * 3 ] + inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014123	ArrayIndexing	inp [ span * 3 ]		1013939	0					
ANR	1014124	Identifier	inp		1013939	0					
ANR	1014125	MultiplicativeExpression	span * 3		1013939	1		*			
ANR	1014126	Identifier	span		1013939	0					
ANR	1014127	PrimaryExpression	3		1013939	1					
ANR	1014128	AdditiveExpression	inp [ span * 3 + 1 ] + inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014129	ArrayIndexing	inp [ span * 3 + 1 ]		1013939	0					
ANR	1014130	Identifier	inp		1013939	0					
ANR	1014131	AdditiveExpression	span * 3 + 1		1013939	1		+			
ANR	1014132	MultiplicativeExpression	span * 3		1013939	0		*			
ANR	1014133	Identifier	span		1013939	0					
ANR	1014134	PrimaryExpression	3		1013939	1					
ANR	1014135	PrimaryExpression	1		1013939	1					
ANR	1014136	AdditiveExpression	inp [ span * 3 + 2 ] + inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014137	ArrayIndexing	inp [ span * 3 + 2 ]		1013939	0					
ANR	1014138	Identifier	inp		1013939	0					
ANR	1014139	AdditiveExpression	span * 3 + 2		1013939	1		+			
ANR	1014140	MultiplicativeExpression	span * 3		1013939	0		*			
ANR	1014141	Identifier	span		1013939	0					
ANR	1014142	PrimaryExpression	3		1013939	1					
ANR	1014143	PrimaryExpression	2		1013939	1					
ANR	1014144	AdditiveExpression	inp [ span * 3 + 3 ] + 8		1013939	1		+			
ANR	1014145	ArrayIndexing	inp [ span * 3 + 3 ]		1013939	0					
ANR	1014146	Identifier	inp		1013939	0					
ANR	1014147	AdditiveExpression	span * 3 + 3		1013939	1		+			
ANR	1014148	MultiplicativeExpression	span * 3		1013939	0		*			
ANR	1014149	Identifier	span		1013939	0					
ANR	1014150	PrimaryExpression	3		1013939	1					
ANR	1014151	PrimaryExpression	3		1013939	1					
ANR	1014152	PrimaryExpression	8		1013939	1					
ANR	1014153	PrimaryExpression	4		1013939	1					
ANR	1014154	ExpressionStatement	inp += 4	1312:8:39326:39334	1013939	1	True				
ANR	1014155	AssignmentExpression	inp += 4		1013939	0		+=			
ANR	1014156	Identifier	inp		1013939	0					
ANR	1014157	PrimaryExpression	4		1013939	1					
ANR	1014158	ReturnType	static void		1013939	1					
ANR	1014159	Identifier	down_core8_4		1013939	2					
ANR	1014160	ParameterList	"gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span"		1013939	3					
ANR	1014161	Parameter	gx_downscaler_t * ds	1275:25:38206:38224	1013939	0	True				
ANR	1014162	ParameterType	gx_downscaler_t *		1013939	0					
ANR	1014163	Identifier	ds		1013939	1					
ANR	1014164	Parameter	byte * outp	1276:25:38252:38272	1013939	1	True				
ANR	1014165	ParameterType	byte *		1013939	0					
ANR	1014166	Identifier	outp		1013939	1					
ANR	1014167	Parameter	byte * in_buffer	1277:25:38300:38325	1013939	2	True				
ANR	1014168	ParameterType	byte *		1013939	0					
ANR	1014169	Identifier	in_buffer		1013939	1					
ANR	1014170	Parameter	int row	1278:25:38353:38372	1013939	3	True				
ANR	1014171	ParameterType	int		1013939	0					
ANR	1014172	Identifier	row		1013939	1					
ANR	1014173	Parameter	int plane	1279:25:38400:38421	1013939	4	True				
ANR	1014174	ParameterType	int		1013939	0					
ANR	1014175	Identifier	plane		1013939	1					
ANR	1014176	Parameter	int span	1280:25:38449:38469	1013939	5	True				
ANR	1014177	ParameterType	int		1013939	0					
ANR	1014178	Identifier	span		1013939	1					
ANR	1014179	CFGEntryNode	ENTRY		1013939		True				
ANR	1014180	CFGExitNode	EXIT		1013939		True				
ANR	1014181	Symbol	plane		1013939						
ANR	1014182	Symbol	awidth		1013939						
ANR	1014183	Symbol	in_buffer		1013939						
ANR	1014184	Symbol	* span		1013939						
ANR	1014185	Symbol	ds -> awidth		1013939						
ANR	1014186	Symbol	inp		1013939						
ANR	1014187	Symbol	* inp		1013939						
ANR	1014188	Symbol	ds		1013939						
ANR	1014189	Symbol	outp		1013939						
ANR	1014190	Symbol	pad_white		1013939						
ANR	1014191	Symbol	* ds		1013939						
ANR	1014192	Symbol	x		1013939						
ANR	1014193	Symbol	width		1013939						
ANR	1014194	Symbol	* outp ++		1013939						
ANR	1014195	Symbol	ds -> width		1013939						
ANR	1014196	Symbol	row		1013939						
ANR	1014197	Symbol	span		1013939						
ANR	1014198	Function	down_core8_3_2	1316:0:39345:40690							
ANR	1014199	FunctionDef	"down_core8_3_2 (gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span)"		1014198	0					
ANR	1014200	CompoundStatement		1322:0:39648:40690	1014198	0					
ANR	1014201	IdentifierDeclStatement	int x ;	1323:4:39654:39661	1014198	0	True				
ANR	1014202	IdentifierDecl	x		1014198	0					
ANR	1014203	IdentifierDeclType	int		1014198	0					
ANR	1014204	Identifier	x		1014198	1					
ANR	1014205	IdentifierDeclStatement	int pad_white ;	1324:4:39667:39682	1014198	1	True				
ANR	1014206	IdentifierDecl	pad_white		1014198	0					
ANR	1014207	IdentifierDeclType	int		1014198	0					
ANR	1014208	Identifier	pad_white		1014198	1					
ANR	1014209	IdentifierDeclStatement	byte * inp ;	1325:4:39688:39697	1014198	2	True				
ANR	1014210	IdentifierDecl	* inp		1014198	0					
ANR	1014211	IdentifierDeclType	byte *		1014198	0					
ANR	1014212	Identifier	inp		1014198	1					
ANR	1014213	IdentifierDeclStatement	int width = ds -> width ;	1326:4:39703:39727	1014198	3	True				
ANR	1014214	IdentifierDecl	width = ds -> width		1014198	0					
ANR	1014215	IdentifierDeclType	int		1014198	0					
ANR	1014216	Identifier	width		1014198	1					
ANR	1014217	AssignmentExpression	width = ds -> width		1014198	2		=			
ANR	1014218	Identifier	width		1014198	0					
ANR	1014219	PtrMemberAccess	ds -> width		1014198	1					
ANR	1014220	Identifier	ds		1014198	0					
ANR	1014221	Identifier	width		1014198	1					
ANR	1014222	IdentifierDeclStatement	int awidth = ds -> awidth ;	1327:4:39733:39758	1014198	4	True				
ANR	1014223	IdentifierDecl	awidth = ds -> awidth		1014198	0					
ANR	1014224	IdentifierDeclType	int		1014198	0					
ANR	1014225	Identifier	awidth		1014198	1					
ANR	1014226	AssignmentExpression	awidth = ds -> awidth		1014198	2		=			
ANR	1014227	Identifier	awidth		1014198	0					
ANR	1014228	PtrMemberAccess	ds -> awidth		1014198	1					
ANR	1014229	Identifier	ds		1014198	0					
ANR	1014230	Identifier	awidth		1014198	1					
ANR	1014231	IdentifierDeclStatement	int dspan = ds -> scaled_span ;	1328:4:39764:39794	1014198	5	True				
ANR	1014232	IdentifierDecl	dspan = ds -> scaled_span		1014198	0					
ANR	1014233	IdentifierDeclType	int		1014198	0					
ANR	1014234	Identifier	dspan		1014198	1					
ANR	1014235	AssignmentExpression	dspan = ds -> scaled_span		1014198	2		=			
ANR	1014236	Identifier	dspan		1014198	0					
ANR	1014237	PtrMemberAccess	ds -> scaled_span		1014198	1					
ANR	1014238	Identifier	ds		1014198	0					
ANR	1014239	Identifier	scaled_span		1014198	1					
ANR	1014240	ExpressionStatement	pad_white = ( awidth - width ) * 3 / 2	1330:4:39801:39837	1014198	6	True				
ANR	1014241	AssignmentExpression	pad_white = ( awidth - width ) * 3 / 2		1014198	0		=			
ANR	1014242	Identifier	pad_white		1014198	0					
ANR	1014243	MultiplicativeExpression	( awidth - width ) * 3 / 2		1014198	1		*			
ANR	1014244	AdditiveExpression	awidth - width		1014198	0		-			
ANR	1014245	Identifier	awidth		1014198	0					
ANR	1014246	Identifier	width		1014198	1					
ANR	1014247	MultiplicativeExpression	3 / 2		1014198	1		/			
ANR	1014248	PrimaryExpression	3		1014198	0					
ANR	1014249	PrimaryExpression	2		1014198	1					
ANR	1014250	IfStatement	if ( pad_white < 0 )		1014198	7					
ANR	1014251	Condition	pad_white < 0	1331:8:39847:39859	1014198	0	True				
ANR	1014252	RelationalExpression	pad_white < 0		1014198	0		<			
ANR	1014253	Identifier	pad_white		1014198	0					
ANR	1014254	PrimaryExpression	0		1014198	1					
ANR	1014255	ExpressionStatement	pad_white = 0	1332:8:39870:39883	1014198	1	True				
ANR	1014256	AssignmentExpression	pad_white = 0		1014198	0		=			
ANR	1014257	Identifier	pad_white		1014198	0					
ANR	1014258	PrimaryExpression	0		1014198	1					
ANR	1014259	IfStatement	if ( pad_white )		1014198	8					
ANR	1014260	Condition	pad_white	1334:8:39894:39902	1014198	0	True				
ANR	1014261	Identifier	pad_white		1014198	0					
ANR	1014262	CompoundStatement		14:4:260:260	1014198	1					
ANR	1014263	ExpressionStatement	inp = in_buffer + width * 3 / 2	1336:8:39919:39946	1014198	0	True				
ANR	1014264	AssignmentExpression	inp = in_buffer + width * 3 / 2		1014198	0		=			
ANR	1014265	Identifier	inp		1014198	0					
ANR	1014266	AdditiveExpression	in_buffer + width * 3 / 2		1014198	1		+			
ANR	1014267	Identifier	in_buffer		1014198	0					
ANR	1014268	MultiplicativeExpression	width * 3 / 2		1014198	1		*			
ANR	1014269	Identifier	width		1014198	0					
ANR	1014270	MultiplicativeExpression	3 / 2		1014198	1		/			
ANR	1014271	PrimaryExpression	3		1014198	0					
ANR	1014272	PrimaryExpression	2		1014198	1					
ANR	1014273	ForStatement	for ( x = 2 ; x > 0 ; x -- )		1014198	1					
ANR	1014274	ForInit	x = 2 ;	1337:13:39961:39966	1014198	0	True				
ANR	1014275	AssignmentExpression	x = 2		1014198	0		=			
ANR	1014276	Identifier	x		1014198	0					
ANR	1014277	PrimaryExpression	2		1014198	1					
ANR	1014278	Condition	x > 0	1337:20:39968:39972	1014198	1	True				
ANR	1014279	RelationalExpression	x > 0		1014198	0		>			
ANR	1014280	Identifier	x		1014198	0					
ANR	1014281	PrimaryExpression	0		1014198	1					
ANR	1014282	PostIncDecOperationExpression	x --	1337:27:39975:39977	1014198	2	True				
ANR	1014283	Identifier	x		1014198	0					
ANR	1014284	IncDec	--		1014198	1					
ANR	1014285	CompoundStatement		17:8:339:339	1014198	3					
ANR	1014286	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	1339:12:40002:40030	1014198	0	True				
ANR	1014287	CallExpression	"memset ( inp , 0xFF , pad_white )"		1014198	0					
ANR	1014288	Callee	memset		1014198	0					
ANR	1014289	Identifier	memset		1014198	0					
ANR	1014290	ArgumentList	inp		1014198	1					
ANR	1014291	Argument	inp		1014198	0					
ANR	1014292	Identifier	inp		1014198	0					
ANR	1014293	Argument	0xFF		1014198	1					
ANR	1014294	PrimaryExpression	0xFF		1014198	0					
ANR	1014295	Argument	pad_white		1014198	2					
ANR	1014296	Identifier	pad_white		1014198	0					
ANR	1014297	ExpressionStatement	inp += span	1340:12:40044:40055	1014198	1	True				
ANR	1014298	AssignmentExpression	inp += span		1014198	0		+=			
ANR	1014299	Identifier	inp		1014198	0					
ANR	1014300	Identifier	span		1014198	1					
ANR	1014301	ExpressionStatement	inp = in_buffer	1344:4:40078:40093	1014198	9	True				
ANR	1014302	AssignmentExpression	inp = in_buffer		1014198	0		=			
ANR	1014303	Identifier	inp		1014198	0					
ANR	1014304	Identifier	in_buffer		1014198	1					
ANR	1014305	ForStatement	for ( x = awidth / 2 ; x > 0 ; x -- )		1014198	10					
ANR	1014306	ForInit	x = awidth / 2 ;	1347:9:40156:40168	1014198	0	True				
ANR	1014307	AssignmentExpression	x = awidth / 2		1014198	0		=			
ANR	1014308	Identifier	x		1014198	0					
ANR	1014309	MultiplicativeExpression	awidth / 2		1014198	1		/			
ANR	1014310	Identifier	awidth		1014198	0					
ANR	1014311	PrimaryExpression	2		1014198	1					
ANR	1014312	Condition	x > 0	1347:23:40170:40174	1014198	1	True				
ANR	1014313	RelationalExpression	x > 0		1014198	0		>			
ANR	1014314	Identifier	x		1014198	0					
ANR	1014315	PrimaryExpression	0		1014198	1					
ANR	1014316	PostIncDecOperationExpression	x --	1347:30:40177:40179	1014198	2	True				
ANR	1014317	Identifier	x		1014198	0					
ANR	1014318	IncDec	--		1014198	1					
ANR	1014319	CompoundStatement		36:8:795:816	1014198	3					
ANR	1014320	IdentifierDeclStatement	int a = inp [ 0 ] ;	1349:8:40196:40217	1014198	0	True				
ANR	1014321	IdentifierDecl	a = inp [ 0 ]		1014198	0					
ANR	1014322	IdentifierDeclType	int		1014198	0					
ANR	1014323	Identifier	a		1014198	1					
ANR	1014324	AssignmentExpression	a = inp [ 0 ]		1014198	2		=			
ANR	1014325	Identifier	a		1014198	0					
ANR	1014326	ArrayIndexing	inp [ 0 ]		1014198	1					
ANR	1014327	Identifier	inp		1014198	0					
ANR	1014328	PrimaryExpression	0		1014198	1					
ANR	1014329	IdentifierDeclStatement	int b = inp [ 1 ] ;	1350:8:40227:40248	1014198	1	True				
ANR	1014330	IdentifierDecl	b = inp [ 1 ]		1014198	0					
ANR	1014331	IdentifierDeclType	int		1014198	0					
ANR	1014332	Identifier	b		1014198	1					
ANR	1014333	AssignmentExpression	b = inp [ 1 ]		1014198	2		=			
ANR	1014334	Identifier	b		1014198	0					
ANR	1014335	ArrayIndexing	inp [ 1 ]		1014198	1					
ANR	1014336	Identifier	inp		1014198	0					
ANR	1014337	PrimaryExpression	1		1014198	1					
ANR	1014338	IdentifierDeclStatement	int c = inp [ 2 ] ;	1351:8:40258:40279	1014198	2	True				
ANR	1014339	IdentifierDecl	c = inp [ 2 ]		1014198	0					
ANR	1014340	IdentifierDeclType	int		1014198	0					
ANR	1014341	Identifier	c		1014198	1					
ANR	1014342	AssignmentExpression	c = inp [ 2 ]		1014198	2		=			
ANR	1014343	Identifier	c		1014198	0					
ANR	1014344	ArrayIndexing	inp [ 2 ]		1014198	1					
ANR	1014345	Identifier	inp		1014198	0					
ANR	1014346	PrimaryExpression	2		1014198	1					
ANR	1014347	IdentifierDeclStatement	int d = inp [ span + 0 ] ;	1352:8:40289:40310	1014198	3	True				
ANR	1014348	IdentifierDecl	d = inp [ span + 0 ]		1014198	0					
ANR	1014349	IdentifierDeclType	int		1014198	0					
ANR	1014350	Identifier	d		1014198	1					
ANR	1014351	AssignmentExpression	d = inp [ span + 0 ]		1014198	2		=			
ANR	1014352	Identifier	d		1014198	0					
ANR	1014353	ArrayIndexing	inp [ span + 0 ]		1014198	1					
ANR	1014354	Identifier	inp		1014198	0					
ANR	1014355	AdditiveExpression	span + 0		1014198	1		+			
ANR	1014356	Identifier	span		1014198	0					
ANR	1014357	PrimaryExpression	0		1014198	1					
ANR	1014358	IdentifierDeclStatement	int e = inp [ span + 1 ] ;	1353:8:40320:40341	1014198	4	True				
ANR	1014359	IdentifierDecl	e = inp [ span + 1 ]		1014198	0					
ANR	1014360	IdentifierDeclType	int		1014198	0					
ANR	1014361	Identifier	e		1014198	1					
ANR	1014362	AssignmentExpression	e = inp [ span + 1 ]		1014198	2		=			
ANR	1014363	Identifier	e		1014198	0					
ANR	1014364	ArrayIndexing	inp [ span + 1 ]		1014198	1					
ANR	1014365	Identifier	inp		1014198	0					
ANR	1014366	AdditiveExpression	span + 1		1014198	1		+			
ANR	1014367	Identifier	span		1014198	0					
ANR	1014368	PrimaryExpression	1		1014198	1					
ANR	1014369	IdentifierDeclStatement	int f = inp [ span + 2 ] ;	1354:8:40351:40372	1014198	5	True				
ANR	1014370	IdentifierDecl	f = inp [ span + 2 ]		1014198	0					
ANR	1014371	IdentifierDeclType	int		1014198	0					
ANR	1014372	Identifier	f		1014198	1					
ANR	1014373	AssignmentExpression	f = inp [ span + 2 ]		1014198	2		=			
ANR	1014374	Identifier	f		1014198	0					
ANR	1014375	ArrayIndexing	inp [ span + 2 ]		1014198	1					
ANR	1014376	Identifier	inp		1014198	0					
ANR	1014377	AdditiveExpression	span + 2		1014198	1		+			
ANR	1014378	Identifier	span		1014198	0					
ANR	1014379	PrimaryExpression	2		1014198	1					
ANR	1014380	IdentifierDeclStatement	int g = inp [ 2 * span + 0 ] ;	1355:8:40382:40403	1014198	6	True				
ANR	1014381	IdentifierDecl	g = inp [ 2 * span + 0 ]		1014198	0					
ANR	1014382	IdentifierDeclType	int		1014198	0					
ANR	1014383	Identifier	g		1014198	1					
ANR	1014384	AssignmentExpression	g = inp [ 2 * span + 0 ]		1014198	2		=			
ANR	1014385	Identifier	g		1014198	0					
ANR	1014386	ArrayIndexing	inp [ 2 * span + 0 ]		1014198	1					
ANR	1014387	Identifier	inp		1014198	0					
ANR	1014388	AdditiveExpression	2 * span + 0		1014198	1		+			
ANR	1014389	MultiplicativeExpression	2 * span		1014198	0		*			
ANR	1014390	PrimaryExpression	2		1014198	0					
ANR	1014391	Identifier	span		1014198	1					
ANR	1014392	PrimaryExpression	0		1014198	1					
ANR	1014393	IdentifierDeclStatement	int h = inp [ 2 * span + 1 ] ;	1356:8:40413:40434	1014198	7	True				
ANR	1014394	IdentifierDecl	h = inp [ 2 * span + 1 ]		1014198	0					
ANR	1014395	IdentifierDeclType	int		1014198	0					
ANR	1014396	Identifier	h		1014198	1					
ANR	1014397	AssignmentExpression	h = inp [ 2 * span + 1 ]		1014198	2		=			
ANR	1014398	Identifier	h		1014198	0					
ANR	1014399	ArrayIndexing	inp [ 2 * span + 1 ]		1014198	1					
ANR	1014400	Identifier	inp		1014198	0					
ANR	1014401	AdditiveExpression	2 * span + 1		1014198	1		+			
ANR	1014402	MultiplicativeExpression	2 * span		1014198	0		*			
ANR	1014403	PrimaryExpression	2		1014198	0					
ANR	1014404	Identifier	span		1014198	1					
ANR	1014405	PrimaryExpression	1		1014198	1					
ANR	1014406	IdentifierDeclStatement	int i = inp [ 2 * span + 2 ] ;	1357:8:40444:40465	1014198	8	True				
ANR	1014407	IdentifierDecl	i = inp [ 2 * span + 2 ]		1014198	0					
ANR	1014408	IdentifierDeclType	int		1014198	0					
ANR	1014409	Identifier	i		1014198	1					
ANR	1014410	AssignmentExpression	i = inp [ 2 * span + 2 ]		1014198	2		=			
ANR	1014411	Identifier	i		1014198	0					
ANR	1014412	ArrayIndexing	inp [ 2 * span + 2 ]		1014198	1					
ANR	1014413	Identifier	inp		1014198	0					
ANR	1014414	AdditiveExpression	2 * span + 2		1014198	1		+			
ANR	1014415	MultiplicativeExpression	2 * span		1014198	0		*			
ANR	1014416	PrimaryExpression	2		1014198	0					
ANR	1014417	Identifier	span		1014198	1					
ANR	1014418	PrimaryExpression	2		1014198	1					
ANR	1014419	ExpressionStatement	outp [ 0 ] = ( 4 * a + 2 * b + 2 * d + e + 4 ) / 9	1358:8:40475:40510	1014198	9	True				
ANR	1014420	AssignmentExpression	outp [ 0 ] = ( 4 * a + 2 * b + 2 * d + e + 4 ) / 9		1014198	0		=			
ANR	1014421	ArrayIndexing	outp [ 0 ]		1014198	0					
ANR	1014422	Identifier	outp		1014198	0					
ANR	1014423	PrimaryExpression	0		1014198	1					
ANR	1014424	MultiplicativeExpression	( 4 * a + 2 * b + 2 * d + e + 4 ) / 9		1014198	1		/			
ANR	1014425	AdditiveExpression	4 * a + 2 * b + 2 * d + e + 4		1014198	0		+			
ANR	1014426	MultiplicativeExpression	4 * a		1014198	0		*			
ANR	1014427	PrimaryExpression	4		1014198	0					
ANR	1014428	Identifier	a		1014198	1					
ANR	1014429	AdditiveExpression	2 * b + 2 * d + e + 4		1014198	1		+			
ANR	1014430	MultiplicativeExpression	2 * b		1014198	0		*			
ANR	1014431	PrimaryExpression	2		1014198	0					
ANR	1014432	Identifier	b		1014198	1					
ANR	1014433	AdditiveExpression	2 * d + e + 4		1014198	1		+			
ANR	1014434	MultiplicativeExpression	2 * d		1014198	0		*			
ANR	1014435	PrimaryExpression	2		1014198	0					
ANR	1014436	Identifier	d		1014198	1					
ANR	1014437	AdditiveExpression	e + 4		1014198	1		+			
ANR	1014438	Identifier	e		1014198	0					
ANR	1014439	PrimaryExpression	4		1014198	1					
ANR	1014440	PrimaryExpression	9		1014198	1					
ANR	1014441	ExpressionStatement	outp [ 1 ] = ( 4 * c + 2 * b + 2 * f + e + 4 ) / 9	1359:8:40520:40555	1014198	10	True				
ANR	1014442	AssignmentExpression	outp [ 1 ] = ( 4 * c + 2 * b + 2 * f + e + 4 ) / 9		1014198	0		=			
ANR	1014443	ArrayIndexing	outp [ 1 ]		1014198	0					
ANR	1014444	Identifier	outp		1014198	0					
ANR	1014445	PrimaryExpression	1		1014198	1					
ANR	1014446	MultiplicativeExpression	( 4 * c + 2 * b + 2 * f + e + 4 ) / 9		1014198	1		/			
ANR	1014447	AdditiveExpression	4 * c + 2 * b + 2 * f + e + 4		1014198	0		+			
ANR	1014448	MultiplicativeExpression	4 * c		1014198	0		*			
ANR	1014449	PrimaryExpression	4		1014198	0					
ANR	1014450	Identifier	c		1014198	1					
ANR	1014451	AdditiveExpression	2 * b + 2 * f + e + 4		1014198	1		+			
ANR	1014452	MultiplicativeExpression	2 * b		1014198	0		*			
ANR	1014453	PrimaryExpression	2		1014198	0					
ANR	1014454	Identifier	b		1014198	1					
ANR	1014455	AdditiveExpression	2 * f + e + 4		1014198	1		+			
ANR	1014456	MultiplicativeExpression	2 * f		1014198	0		*			
ANR	1014457	PrimaryExpression	2		1014198	0					
ANR	1014458	Identifier	f		1014198	1					
ANR	1014459	AdditiveExpression	e + 4		1014198	1		+			
ANR	1014460	Identifier	e		1014198	0					
ANR	1014461	PrimaryExpression	4		1014198	1					
ANR	1014462	PrimaryExpression	9		1014198	1					
ANR	1014463	ExpressionStatement	outp [ dspan + 0 ] = ( 4 * g + 2 * h + 2 * d + e + 4 ) / 9	1360:8:40565:40600	1014198	11	True				
ANR	1014464	AssignmentExpression	outp [ dspan + 0 ] = ( 4 * g + 2 * h + 2 * d + e + 4 ) / 9		1014198	0		=			
ANR	1014465	ArrayIndexing	outp [ dspan + 0 ]		1014198	0					
ANR	1014466	Identifier	outp		1014198	0					
ANR	1014467	AdditiveExpression	dspan + 0		1014198	1		+			
ANR	1014468	Identifier	dspan		1014198	0					
ANR	1014469	PrimaryExpression	0		1014198	1					
ANR	1014470	MultiplicativeExpression	( 4 * g + 2 * h + 2 * d + e + 4 ) / 9		1014198	1		/			
ANR	1014471	AdditiveExpression	4 * g + 2 * h + 2 * d + e + 4		1014198	0		+			
ANR	1014472	MultiplicativeExpression	4 * g		1014198	0		*			
ANR	1014473	PrimaryExpression	4		1014198	0					
ANR	1014474	Identifier	g		1014198	1					
ANR	1014475	AdditiveExpression	2 * h + 2 * d + e + 4		1014198	1		+			
ANR	1014476	MultiplicativeExpression	2 * h		1014198	0		*			
ANR	1014477	PrimaryExpression	2		1014198	0					
ANR	1014478	Identifier	h		1014198	1					
ANR	1014479	AdditiveExpression	2 * d + e + 4		1014198	1		+			
ANR	1014480	MultiplicativeExpression	2 * d		1014198	0		*			
ANR	1014481	PrimaryExpression	2		1014198	0					
ANR	1014482	Identifier	d		1014198	1					
ANR	1014483	AdditiveExpression	e + 4		1014198	1		+			
ANR	1014484	Identifier	e		1014198	0					
ANR	1014485	PrimaryExpression	4		1014198	1					
ANR	1014486	PrimaryExpression	9		1014198	1					
ANR	1014487	ExpressionStatement	outp [ dspan + 1 ] = ( 4 * i + 2 * h + 2 * f + e + 4 ) / 9	1361:8:40610:40645	1014198	12	True				
ANR	1014488	AssignmentExpression	outp [ dspan + 1 ] = ( 4 * i + 2 * h + 2 * f + e + 4 ) / 9		1014198	0		=			
ANR	1014489	ArrayIndexing	outp [ dspan + 1 ]		1014198	0					
ANR	1014490	Identifier	outp		1014198	0					
ANR	1014491	AdditiveExpression	dspan + 1		1014198	1		+			
ANR	1014492	Identifier	dspan		1014198	0					
ANR	1014493	PrimaryExpression	1		1014198	1					
ANR	1014494	MultiplicativeExpression	( 4 * i + 2 * h + 2 * f + e + 4 ) / 9		1014198	1		/			
ANR	1014495	AdditiveExpression	4 * i + 2 * h + 2 * f + e + 4		1014198	0		+			
ANR	1014496	MultiplicativeExpression	4 * i		1014198	0		*			
ANR	1014497	PrimaryExpression	4		1014198	0					
ANR	1014498	Identifier	i		1014198	1					
ANR	1014499	AdditiveExpression	2 * h + 2 * f + e + 4		1014198	1		+			
ANR	1014500	MultiplicativeExpression	2 * h		1014198	0		*			
ANR	1014501	PrimaryExpression	2		1014198	0					
ANR	1014502	Identifier	h		1014198	1					
ANR	1014503	AdditiveExpression	2 * f + e + 4		1014198	1		+			
ANR	1014504	MultiplicativeExpression	2 * f		1014198	0		*			
ANR	1014505	PrimaryExpression	2		1014198	0					
ANR	1014506	Identifier	f		1014198	1					
ANR	1014507	AdditiveExpression	e + 4		1014198	1		+			
ANR	1014508	Identifier	e		1014198	0					
ANR	1014509	PrimaryExpression	4		1014198	1					
ANR	1014510	PrimaryExpression	9		1014198	1					
ANR	1014511	ExpressionStatement	outp += 2	1362:8:40655:40664	1014198	13	True				
ANR	1014512	AssignmentExpression	outp += 2		1014198	0		+=			
ANR	1014513	Identifier	outp		1014198	0					
ANR	1014514	PrimaryExpression	2		1014198	1					
ANR	1014515	ExpressionStatement	inp += 3	1363:8:40674:40682	1014198	14	True				
ANR	1014516	AssignmentExpression	inp += 3		1014198	0		+=			
ANR	1014517	Identifier	inp		1014198	0					
ANR	1014518	PrimaryExpression	3		1014198	1					
ANR	1014519	ReturnType	static void		1014198	1					
ANR	1014520	Identifier	down_core8_3_2		1014198	2					
ANR	1014521	ParameterList	"gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span"		1014198	3					
ANR	1014522	Parameter	gx_downscaler_t * ds	1316:27:39372:39390	1014198	0	True				
ANR	1014523	ParameterType	gx_downscaler_t *		1014198	0					
ANR	1014524	Identifier	ds		1014198	1					
ANR	1014525	Parameter	byte * outp	1317:27:39420:39440	1014198	1	True				
ANR	1014526	ParameterType	byte *		1014198	0					
ANR	1014527	Identifier	outp		1014198	1					
ANR	1014528	Parameter	byte * in_buffer	1318:27:39470:39495	1014198	2	True				
ANR	1014529	ParameterType	byte *		1014198	0					
ANR	1014530	Identifier	in_buffer		1014198	1					
ANR	1014531	Parameter	int row	1319:27:39525:39544	1014198	3	True				
ANR	1014532	ParameterType	int		1014198	0					
ANR	1014533	Identifier	row		1014198	1					
ANR	1014534	Parameter	int plane	1320:27:39574:39595	1014198	4	True				
ANR	1014535	ParameterType	int		1014198	0					
ANR	1014536	Identifier	plane		1014198	1					
ANR	1014537	Parameter	int span	1321:27:39625:39645	1014198	5	True				
ANR	1014538	ParameterType	int		1014198	0					
ANR	1014539	Identifier	span		1014198	1					
ANR	1014540	CFGEntryNode	ENTRY		1014198		True				
ANR	1014541	CFGExitNode	EXIT		1014198		True				
ANR	1014542	Symbol	plane		1014198						
ANR	1014543	Symbol	awidth		1014198						
ANR	1014544	Symbol	in_buffer		1014198						
ANR	1014545	Symbol	ds		1014198						
ANR	1014546	Symbol	outp		1014198						
ANR	1014547	Symbol	* ds		1014198						
ANR	1014548	Symbol	dspan		1014198						
ANR	1014549	Symbol	ds -> width		1014198						
ANR	1014550	Symbol	row		1014198						
ANR	1014551	Symbol	a		1014198						
ANR	1014552	Symbol	b		1014198						
ANR	1014553	Symbol	c		1014198						
ANR	1014554	Symbol	d		1014198						
ANR	1014555	Symbol	* span		1014198						
ANR	1014556	Symbol	e		1014198						
ANR	1014557	Symbol	f		1014198						
ANR	1014558	Symbol	ds -> scaled_span		1014198						
ANR	1014559	Symbol	g		1014198						
ANR	1014560	Symbol	ds -> awidth		1014198						
ANR	1014561	Symbol	h		1014198						
ANR	1014562	Symbol	i		1014198						
ANR	1014563	Symbol	inp		1014198						
ANR	1014564	Symbol	* inp		1014198						
ANR	1014565	Symbol	* dspan		1014198						
ANR	1014566	Symbol	pad_white		1014198						
ANR	1014567	Symbol	x		1014198						
ANR	1014568	Symbol	width		1014198						
ANR	1014569	Symbol	* outp		1014198						
ANR	1014570	Symbol	span		1014198						
ANR	1014571	Function	down_core8_3_4	1367:0:40693:42474							
ANR	1014572	FunctionDef	"down_core8_3_4 (gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span)"		1014571	0					
ANR	1014573	CompoundStatement		1373:0:40996:42474	1014571	0					
ANR	1014574	IdentifierDeclStatement	int x ;	1374:4:41002:41009	1014571	0	True				
ANR	1014575	IdentifierDecl	x		1014571	0					
ANR	1014576	IdentifierDeclType	int		1014571	0					
ANR	1014577	Identifier	x		1014571	1					
ANR	1014578	IdentifierDeclStatement	int pad_white ;	1375:4:41015:41030	1014571	1	True				
ANR	1014579	IdentifierDecl	pad_white		1014571	0					
ANR	1014580	IdentifierDeclType	int		1014571	0					
ANR	1014581	Identifier	pad_white		1014571	1					
ANR	1014582	IdentifierDeclStatement	byte * inp ;	1376:4:41036:41045	1014571	2	True				
ANR	1014583	IdentifierDecl	* inp		1014571	0					
ANR	1014584	IdentifierDeclType	byte *		1014571	0					
ANR	1014585	Identifier	inp		1014571	1					
ANR	1014586	IdentifierDeclStatement	int width = ds -> width ;	1377:4:41051:41075	1014571	3	True				
ANR	1014587	IdentifierDecl	width = ds -> width		1014571	0					
ANR	1014588	IdentifierDeclType	int		1014571	0					
ANR	1014589	Identifier	width		1014571	1					
ANR	1014590	AssignmentExpression	width = ds -> width		1014571	2		=			
ANR	1014591	Identifier	width		1014571	0					
ANR	1014592	PtrMemberAccess	ds -> width		1014571	1					
ANR	1014593	Identifier	ds		1014571	0					
ANR	1014594	Identifier	width		1014571	1					
ANR	1014595	IdentifierDeclStatement	int awidth = ds -> awidth ;	1378:4:41081:41106	1014571	4	True				
ANR	1014596	IdentifierDecl	awidth = ds -> awidth		1014571	0					
ANR	1014597	IdentifierDeclType	int		1014571	0					
ANR	1014598	Identifier	awidth		1014571	1					
ANR	1014599	AssignmentExpression	awidth = ds -> awidth		1014571	2		=			
ANR	1014600	Identifier	awidth		1014571	0					
ANR	1014601	PtrMemberAccess	ds -> awidth		1014571	1					
ANR	1014602	Identifier	ds		1014571	0					
ANR	1014603	Identifier	awidth		1014571	1					
ANR	1014604	IdentifierDeclStatement	int dspan = ds -> scaled_span ;	1379:4:41112:41142	1014571	5	True				
ANR	1014605	IdentifierDecl	dspan = ds -> scaled_span		1014571	0					
ANR	1014606	IdentifierDeclType	int		1014571	0					
ANR	1014607	Identifier	dspan		1014571	1					
ANR	1014608	AssignmentExpression	dspan = ds -> scaled_span		1014571	2		=			
ANR	1014609	Identifier	dspan		1014571	0					
ANR	1014610	PtrMemberAccess	ds -> scaled_span		1014571	1					
ANR	1014611	Identifier	ds		1014571	0					
ANR	1014612	Identifier	scaled_span		1014571	1					
ANR	1014613	ExpressionStatement	pad_white = ( awidth - width ) * 3 / 4	1381:4:41149:41185	1014571	6	True				
ANR	1014614	AssignmentExpression	pad_white = ( awidth - width ) * 3 / 4		1014571	0		=			
ANR	1014615	Identifier	pad_white		1014571	0					
ANR	1014616	MultiplicativeExpression	( awidth - width ) * 3 / 4		1014571	1		*			
ANR	1014617	AdditiveExpression	awidth - width		1014571	0		-			
ANR	1014618	Identifier	awidth		1014571	0					
ANR	1014619	Identifier	width		1014571	1					
ANR	1014620	MultiplicativeExpression	3 / 4		1014571	1		/			
ANR	1014621	PrimaryExpression	3		1014571	0					
ANR	1014622	PrimaryExpression	4		1014571	1					
ANR	1014623	IfStatement	if ( pad_white < 0 )		1014571	7					
ANR	1014624	Condition	pad_white < 0	1382:8:41195:41207	1014571	0	True				
ANR	1014625	RelationalExpression	pad_white < 0		1014571	0		<			
ANR	1014626	Identifier	pad_white		1014571	0					
ANR	1014627	PrimaryExpression	0		1014571	1					
ANR	1014628	ExpressionStatement	pad_white = 0	1383:8:41218:41231	1014571	1	True				
ANR	1014629	AssignmentExpression	pad_white = 0		1014571	0		=			
ANR	1014630	Identifier	pad_white		1014571	0					
ANR	1014631	PrimaryExpression	0		1014571	1					
ANR	1014632	IfStatement	if ( pad_white )		1014571	8					
ANR	1014633	Condition	pad_white	1385:8:41242:41250	1014571	0	True				
ANR	1014634	Identifier	pad_white		1014571	0					
ANR	1014635	CompoundStatement		14:4:260:260	1014571	1					
ANR	1014636	ExpressionStatement	inp = in_buffer + width * 3 / 4	1387:8:41267:41294	1014571	0	True				
ANR	1014637	AssignmentExpression	inp = in_buffer + width * 3 / 4		1014571	0		=			
ANR	1014638	Identifier	inp		1014571	0					
ANR	1014639	AdditiveExpression	in_buffer + width * 3 / 4		1014571	1		+			
ANR	1014640	Identifier	in_buffer		1014571	0					
ANR	1014641	MultiplicativeExpression	width * 3 / 4		1014571	1		*			
ANR	1014642	Identifier	width		1014571	0					
ANR	1014643	MultiplicativeExpression	3 / 4		1014571	1		/			
ANR	1014644	PrimaryExpression	3		1014571	0					
ANR	1014645	PrimaryExpression	4		1014571	1					
ANR	1014646	ForStatement	for ( x = 4 ; x > 0 ; x -- )		1014571	1					
ANR	1014647	ForInit	x = 4 ;	1388:13:41309:41314	1014571	0	True				
ANR	1014648	AssignmentExpression	x = 4		1014571	0		=			
ANR	1014649	Identifier	x		1014571	0					
ANR	1014650	PrimaryExpression	4		1014571	1					
ANR	1014651	Condition	x > 0	1388:20:41316:41320	1014571	1	True				
ANR	1014652	RelationalExpression	x > 0		1014571	0		>			
ANR	1014653	Identifier	x		1014571	0					
ANR	1014654	PrimaryExpression	0		1014571	1					
ANR	1014655	PostIncDecOperationExpression	x --	1388:27:41323:41325	1014571	2	True				
ANR	1014656	Identifier	x		1014571	0					
ANR	1014657	IncDec	--		1014571	1					
ANR	1014658	CompoundStatement		17:8:339:339	1014571	3					
ANR	1014659	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	1390:12:41350:41378	1014571	0	True				
ANR	1014660	CallExpression	"memset ( inp , 0xFF , pad_white )"		1014571	0					
ANR	1014661	Callee	memset		1014571	0					
ANR	1014662	Identifier	memset		1014571	0					
ANR	1014663	ArgumentList	inp		1014571	1					
ANR	1014664	Argument	inp		1014571	0					
ANR	1014665	Identifier	inp		1014571	0					
ANR	1014666	Argument	0xFF		1014571	1					
ANR	1014667	PrimaryExpression	0xFF		1014571	0					
ANR	1014668	Argument	pad_white		1014571	2					
ANR	1014669	Identifier	pad_white		1014571	0					
ANR	1014670	ExpressionStatement	inp += span	1391:12:41392:41403	1014571	1	True				
ANR	1014671	AssignmentExpression	inp += span		1014571	0		+=			
ANR	1014672	Identifier	inp		1014571	0					
ANR	1014673	Identifier	span		1014571	1					
ANR	1014674	ExpressionStatement	inp = in_buffer	1395:4:41426:41441	1014571	9	True				
ANR	1014675	AssignmentExpression	inp = in_buffer		1014571	0		=			
ANR	1014676	Identifier	inp		1014571	0					
ANR	1014677	Identifier	in_buffer		1014571	1					
ANR	1014678	ForStatement	for ( x = awidth / 4 ; x > 0 ; x -- )		1014571	10					
ANR	1014679	ForInit	x = awidth / 4 ;	1398:9:41504:41516	1014571	0	True				
ANR	1014680	AssignmentExpression	x = awidth / 4		1014571	0		=			
ANR	1014681	Identifier	x		1014571	0					
ANR	1014682	MultiplicativeExpression	awidth / 4		1014571	1		/			
ANR	1014683	Identifier	awidth		1014571	0					
ANR	1014684	PrimaryExpression	4		1014571	1					
ANR	1014685	Condition	x > 0	1398:23:41518:41522	1014571	1	True				
ANR	1014686	RelationalExpression	x > 0		1014571	0		>			
ANR	1014687	Identifier	x		1014571	0					
ANR	1014688	PrimaryExpression	0		1014571	1					
ANR	1014689	PostIncDecOperationExpression	x --	1398:30:41525:41527	1014571	2	True				
ANR	1014690	Identifier	x		1014571	0					
ANR	1014691	IncDec	--		1014571	1					
ANR	1014692	CompoundStatement		36:8:795:816	1014571	3					
ANR	1014693	IdentifierDeclStatement	int a = inp [ 0 ] ;	1400:8:41544:41565	1014571	0	True				
ANR	1014694	IdentifierDecl	a = inp [ 0 ]		1014571	0					
ANR	1014695	IdentifierDeclType	int		1014571	0					
ANR	1014696	Identifier	a		1014571	1					
ANR	1014697	AssignmentExpression	a = inp [ 0 ]		1014571	2		=			
ANR	1014698	Identifier	a		1014571	0					
ANR	1014699	ArrayIndexing	inp [ 0 ]		1014571	1					
ANR	1014700	Identifier	inp		1014571	0					
ANR	1014701	PrimaryExpression	0		1014571	1					
ANR	1014702	IdentifierDeclStatement	int b = inp [ 1 ] ;	1401:8:41575:41596	1014571	1	True				
ANR	1014703	IdentifierDecl	b = inp [ 1 ]		1014571	0					
ANR	1014704	IdentifierDeclType	int		1014571	0					
ANR	1014705	Identifier	b		1014571	1					
ANR	1014706	AssignmentExpression	b = inp [ 1 ]		1014571	2		=			
ANR	1014707	Identifier	b		1014571	0					
ANR	1014708	ArrayIndexing	inp [ 1 ]		1014571	1					
ANR	1014709	Identifier	inp		1014571	0					
ANR	1014710	PrimaryExpression	1		1014571	1					
ANR	1014711	IdentifierDeclStatement	int c = inp [ 2 ] ;	1402:8:41606:41627	1014571	2	True				
ANR	1014712	IdentifierDecl	c = inp [ 2 ]		1014571	0					
ANR	1014713	IdentifierDeclType	int		1014571	0					
ANR	1014714	Identifier	c		1014571	1					
ANR	1014715	AssignmentExpression	c = inp [ 2 ]		1014571	2		=			
ANR	1014716	Identifier	c		1014571	0					
ANR	1014717	ArrayIndexing	inp [ 2 ]		1014571	1					
ANR	1014718	Identifier	inp		1014571	0					
ANR	1014719	PrimaryExpression	2		1014571	1					
ANR	1014720	IdentifierDeclStatement	int d = inp [ span + 0 ] ;	1403:8:41637:41658	1014571	3	True				
ANR	1014721	IdentifierDecl	d = inp [ span + 0 ]		1014571	0					
ANR	1014722	IdentifierDeclType	int		1014571	0					
ANR	1014723	Identifier	d		1014571	1					
ANR	1014724	AssignmentExpression	d = inp [ span + 0 ]		1014571	2		=			
ANR	1014725	Identifier	d		1014571	0					
ANR	1014726	ArrayIndexing	inp [ span + 0 ]		1014571	1					
ANR	1014727	Identifier	inp		1014571	0					
ANR	1014728	AdditiveExpression	span + 0		1014571	1		+			
ANR	1014729	Identifier	span		1014571	0					
ANR	1014730	PrimaryExpression	0		1014571	1					
ANR	1014731	IdentifierDeclStatement	int e = inp [ span + 1 ] ;	1404:8:41668:41689	1014571	4	True				
ANR	1014732	IdentifierDecl	e = inp [ span + 1 ]		1014571	0					
ANR	1014733	IdentifierDeclType	int		1014571	0					
ANR	1014734	Identifier	e		1014571	1					
ANR	1014735	AssignmentExpression	e = inp [ span + 1 ]		1014571	2		=			
ANR	1014736	Identifier	e		1014571	0					
ANR	1014737	ArrayIndexing	inp [ span + 1 ]		1014571	1					
ANR	1014738	Identifier	inp		1014571	0					
ANR	1014739	AdditiveExpression	span + 1		1014571	1		+			
ANR	1014740	Identifier	span		1014571	0					
ANR	1014741	PrimaryExpression	1		1014571	1					
ANR	1014742	IdentifierDeclStatement	int f = inp [ span + 2 ] ;	1405:8:41699:41720	1014571	5	True				
ANR	1014743	IdentifierDecl	f = inp [ span + 2 ]		1014571	0					
ANR	1014744	IdentifierDeclType	int		1014571	0					
ANR	1014745	Identifier	f		1014571	1					
ANR	1014746	AssignmentExpression	f = inp [ span + 2 ]		1014571	2		=			
ANR	1014747	Identifier	f		1014571	0					
ANR	1014748	ArrayIndexing	inp [ span + 2 ]		1014571	1					
ANR	1014749	Identifier	inp		1014571	0					
ANR	1014750	AdditiveExpression	span + 2		1014571	1		+			
ANR	1014751	Identifier	span		1014571	0					
ANR	1014752	PrimaryExpression	2		1014571	1					
ANR	1014753	IdentifierDeclStatement	int g = inp [ 2 * span + 0 ] ;	1406:8:41730:41751	1014571	6	True				
ANR	1014754	IdentifierDecl	g = inp [ 2 * span + 0 ]		1014571	0					
ANR	1014755	IdentifierDeclType	int		1014571	0					
ANR	1014756	Identifier	g		1014571	1					
ANR	1014757	AssignmentExpression	g = inp [ 2 * span + 0 ]		1014571	2		=			
ANR	1014758	Identifier	g		1014571	0					
ANR	1014759	ArrayIndexing	inp [ 2 * span + 0 ]		1014571	1					
ANR	1014760	Identifier	inp		1014571	0					
ANR	1014761	AdditiveExpression	2 * span + 0		1014571	1		+			
ANR	1014762	MultiplicativeExpression	2 * span		1014571	0		*			
ANR	1014763	PrimaryExpression	2		1014571	0					
ANR	1014764	Identifier	span		1014571	1					
ANR	1014765	PrimaryExpression	0		1014571	1					
ANR	1014766	IdentifierDeclStatement	int h = inp [ 2 * span + 1 ] ;	1407:8:41761:41782	1014571	7	True				
ANR	1014767	IdentifierDecl	h = inp [ 2 * span + 1 ]		1014571	0					
ANR	1014768	IdentifierDeclType	int		1014571	0					
ANR	1014769	Identifier	h		1014571	1					
ANR	1014770	AssignmentExpression	h = inp [ 2 * span + 1 ]		1014571	2		=			
ANR	1014771	Identifier	h		1014571	0					
ANR	1014772	ArrayIndexing	inp [ 2 * span + 1 ]		1014571	1					
ANR	1014773	Identifier	inp		1014571	0					
ANR	1014774	AdditiveExpression	2 * span + 1		1014571	1		+			
ANR	1014775	MultiplicativeExpression	2 * span		1014571	0		*			
ANR	1014776	PrimaryExpression	2		1014571	0					
ANR	1014777	Identifier	span		1014571	1					
ANR	1014778	PrimaryExpression	1		1014571	1					
ANR	1014779	IdentifierDeclStatement	int i = inp [ 2 * span + 2 ] ;	1408:8:41792:41813	1014571	8	True				
ANR	1014780	IdentifierDecl	i = inp [ 2 * span + 2 ]		1014571	0					
ANR	1014781	IdentifierDeclType	int		1014571	0					
ANR	1014782	Identifier	i		1014571	1					
ANR	1014783	AssignmentExpression	i = inp [ 2 * span + 2 ]		1014571	2		=			
ANR	1014784	Identifier	i		1014571	0					
ANR	1014785	ArrayIndexing	inp [ 2 * span + 2 ]		1014571	1					
ANR	1014786	Identifier	inp		1014571	0					
ANR	1014787	AdditiveExpression	2 * span + 2		1014571	1		+			
ANR	1014788	MultiplicativeExpression	2 * span		1014571	0		*			
ANR	1014789	PrimaryExpression	2		1014571	0					
ANR	1014790	Identifier	span		1014571	1					
ANR	1014791	PrimaryExpression	2		1014571	1					
ANR	1014792	ExpressionStatement	outp [ 0 ] = a	1409:8:41823:41842	1014571	9	True				
ANR	1014793	AssignmentExpression	outp [ 0 ] = a		1014571	0		=			
ANR	1014794	ArrayIndexing	outp [ 0 ]		1014571	0					
ANR	1014795	Identifier	outp		1014571	0					
ANR	1014796	PrimaryExpression	0		1014571	1					
ANR	1014797	Identifier	a		1014571	1					
ANR	1014798	ExpressionStatement	outp [ 1 ] = ( a + 2 * b + 1 ) / 3	1410:8:41852:41881	1014571	10	True				
ANR	1014799	AssignmentExpression	outp [ 1 ] = ( a + 2 * b + 1 ) / 3		1014571	0		=			
ANR	1014800	ArrayIndexing	outp [ 1 ]		1014571	0					
ANR	1014801	Identifier	outp		1014571	0					
ANR	1014802	PrimaryExpression	1		1014571	1					
ANR	1014803	MultiplicativeExpression	( a + 2 * b + 1 ) / 3		1014571	1		/			
ANR	1014804	AdditiveExpression	a + 2 * b + 1		1014571	0		+			
ANR	1014805	Identifier	a		1014571	0					
ANR	1014806	AdditiveExpression	2 * b + 1		1014571	1		+			
ANR	1014807	MultiplicativeExpression	2 * b		1014571	0		*			
ANR	1014808	PrimaryExpression	2		1014571	0					
ANR	1014809	Identifier	b		1014571	1					
ANR	1014810	PrimaryExpression	1		1014571	1					
ANR	1014811	PrimaryExpression	3		1014571	1					
ANR	1014812	ExpressionStatement	outp [ 2 ] = ( c + 2 * b + 1 ) / 3	1411:8:41891:41920	1014571	11	True				
ANR	1014813	AssignmentExpression	outp [ 2 ] = ( c + 2 * b + 1 ) / 3		1014571	0		=			
ANR	1014814	ArrayIndexing	outp [ 2 ]		1014571	0					
ANR	1014815	Identifier	outp		1014571	0					
ANR	1014816	PrimaryExpression	2		1014571	1					
ANR	1014817	MultiplicativeExpression	( c + 2 * b + 1 ) / 3		1014571	1		/			
ANR	1014818	AdditiveExpression	c + 2 * b + 1		1014571	0		+			
ANR	1014819	Identifier	c		1014571	0					
ANR	1014820	AdditiveExpression	2 * b + 1		1014571	1		+			
ANR	1014821	MultiplicativeExpression	2 * b		1014571	0		*			
ANR	1014822	PrimaryExpression	2		1014571	0					
ANR	1014823	Identifier	b		1014571	1					
ANR	1014824	PrimaryExpression	1		1014571	1					
ANR	1014825	PrimaryExpression	3		1014571	1					
ANR	1014826	ExpressionStatement	outp [ 3 ] = c	1412:8:41930:41949	1014571	12	True				
ANR	1014827	AssignmentExpression	outp [ 3 ] = c		1014571	0		=			
ANR	1014828	ArrayIndexing	outp [ 3 ]		1014571	0					
ANR	1014829	Identifier	outp		1014571	0					
ANR	1014830	PrimaryExpression	3		1014571	1					
ANR	1014831	Identifier	c		1014571	1					
ANR	1014832	ExpressionStatement	outp [ dspan + 0 ] = ( a + 2 * d + 1 ) / 3	1413:8:41959:41988	1014571	13	True				
ANR	1014833	AssignmentExpression	outp [ dspan + 0 ] = ( a + 2 * d + 1 ) / 3		1014571	0		=			
ANR	1014834	ArrayIndexing	outp [ dspan + 0 ]		1014571	0					
ANR	1014835	Identifier	outp		1014571	0					
ANR	1014836	AdditiveExpression	dspan + 0		1014571	1		+			
ANR	1014837	Identifier	dspan		1014571	0					
ANR	1014838	PrimaryExpression	0		1014571	1					
ANR	1014839	MultiplicativeExpression	( a + 2 * d + 1 ) / 3		1014571	1		/			
ANR	1014840	AdditiveExpression	a + 2 * d + 1		1014571	0		+			
ANR	1014841	Identifier	a		1014571	0					
ANR	1014842	AdditiveExpression	2 * d + 1		1014571	1		+			
ANR	1014843	MultiplicativeExpression	2 * d		1014571	0		*			
ANR	1014844	PrimaryExpression	2		1014571	0					
ANR	1014845	Identifier	d		1014571	1					
ANR	1014846	PrimaryExpression	1		1014571	1					
ANR	1014847	PrimaryExpression	3		1014571	1					
ANR	1014848	ExpressionStatement	outp [ dspan + 1 ] = ( a + 2 * b + 2 * d + 4 * e + 3 ) / 9	1414:8:41998:42035	1014571	14	True				
ANR	1014849	AssignmentExpression	outp [ dspan + 1 ] = ( a + 2 * b + 2 * d + 4 * e + 3 ) / 9		1014571	0		=			
ANR	1014850	ArrayIndexing	outp [ dspan + 1 ]		1014571	0					
ANR	1014851	Identifier	outp		1014571	0					
ANR	1014852	AdditiveExpression	dspan + 1		1014571	1		+			
ANR	1014853	Identifier	dspan		1014571	0					
ANR	1014854	PrimaryExpression	1		1014571	1					
ANR	1014855	MultiplicativeExpression	( a + 2 * b + 2 * d + 4 * e + 3 ) / 9		1014571	1		/			
ANR	1014856	AdditiveExpression	a + 2 * b + 2 * d + 4 * e + 3		1014571	0		+			
ANR	1014857	Identifier	a		1014571	0					
ANR	1014858	AdditiveExpression	2 * b + 2 * d + 4 * e + 3		1014571	1		+			
ANR	1014859	MultiplicativeExpression	2 * b		1014571	0		*			
ANR	1014860	PrimaryExpression	2		1014571	0					
ANR	1014861	Identifier	b		1014571	1					
ANR	1014862	AdditiveExpression	2 * d + 4 * e + 3		1014571	1		+			
ANR	1014863	MultiplicativeExpression	2 * d		1014571	0		*			
ANR	1014864	PrimaryExpression	2		1014571	0					
ANR	1014865	Identifier	d		1014571	1					
ANR	1014866	AdditiveExpression	4 * e + 3		1014571	1		+			
ANR	1014867	MultiplicativeExpression	4 * e		1014571	0		*			
ANR	1014868	PrimaryExpression	4		1014571	0					
ANR	1014869	Identifier	e		1014571	1					
ANR	1014870	PrimaryExpression	3		1014571	1					
ANR	1014871	PrimaryExpression	9		1014571	1					
ANR	1014872	ExpressionStatement	outp [ dspan + 2 ] = ( c + 2 * b + 2 * f + 4 * e + 3 ) / 9	1415:8:42045:42082	1014571	15	True				
ANR	1014873	AssignmentExpression	outp [ dspan + 2 ] = ( c + 2 * b + 2 * f + 4 * e + 3 ) / 9		1014571	0		=			
ANR	1014874	ArrayIndexing	outp [ dspan + 2 ]		1014571	0					
ANR	1014875	Identifier	outp		1014571	0					
ANR	1014876	AdditiveExpression	dspan + 2		1014571	1		+			
ANR	1014877	Identifier	dspan		1014571	0					
ANR	1014878	PrimaryExpression	2		1014571	1					
ANR	1014879	MultiplicativeExpression	( c + 2 * b + 2 * f + 4 * e + 3 ) / 9		1014571	1		/			
ANR	1014880	AdditiveExpression	c + 2 * b + 2 * f + 4 * e + 3		1014571	0		+			
ANR	1014881	Identifier	c		1014571	0					
ANR	1014882	AdditiveExpression	2 * b + 2 * f + 4 * e + 3		1014571	1		+			
ANR	1014883	MultiplicativeExpression	2 * b		1014571	0		*			
ANR	1014884	PrimaryExpression	2		1014571	0					
ANR	1014885	Identifier	b		1014571	1					
ANR	1014886	AdditiveExpression	2 * f + 4 * e + 3		1014571	1		+			
ANR	1014887	MultiplicativeExpression	2 * f		1014571	0		*			
ANR	1014888	PrimaryExpression	2		1014571	0					
ANR	1014889	Identifier	f		1014571	1					
ANR	1014890	AdditiveExpression	4 * e + 3		1014571	1		+			
ANR	1014891	MultiplicativeExpression	4 * e		1014571	0		*			
ANR	1014892	PrimaryExpression	4		1014571	0					
ANR	1014893	Identifier	e		1014571	1					
ANR	1014894	PrimaryExpression	3		1014571	1					
ANR	1014895	PrimaryExpression	9		1014571	1					
ANR	1014896	ExpressionStatement	outp [ dspan + 3 ] = ( c + 2 * f + 1 ) / 3	1416:8:42092:42121	1014571	16	True				
ANR	1014897	AssignmentExpression	outp [ dspan + 3 ] = ( c + 2 * f + 1 ) / 3		1014571	0		=			
ANR	1014898	ArrayIndexing	outp [ dspan + 3 ]		1014571	0					
ANR	1014899	Identifier	outp		1014571	0					
ANR	1014900	AdditiveExpression	dspan + 3		1014571	1		+			
ANR	1014901	Identifier	dspan		1014571	0					
ANR	1014902	PrimaryExpression	3		1014571	1					
ANR	1014903	MultiplicativeExpression	( c + 2 * f + 1 ) / 3		1014571	1		/			
ANR	1014904	AdditiveExpression	c + 2 * f + 1		1014571	0		+			
ANR	1014905	Identifier	c		1014571	0					
ANR	1014906	AdditiveExpression	2 * f + 1		1014571	1		+			
ANR	1014907	MultiplicativeExpression	2 * f		1014571	0		*			
ANR	1014908	PrimaryExpression	2		1014571	0					
ANR	1014909	Identifier	f		1014571	1					
ANR	1014910	PrimaryExpression	1		1014571	1					
ANR	1014911	PrimaryExpression	3		1014571	1					
ANR	1014912	ExpressionStatement	outp [ 2 * dspan + 0 ] = ( g + 2 * d + 1 ) / 3	1417:8:42131:42160	1014571	17	True				
ANR	1014913	AssignmentExpression	outp [ 2 * dspan + 0 ] = ( g + 2 * d + 1 ) / 3		1014571	0		=			
ANR	1014914	ArrayIndexing	outp [ 2 * dspan + 0 ]		1014571	0					
ANR	1014915	Identifier	outp		1014571	0					
ANR	1014916	AdditiveExpression	2 * dspan + 0		1014571	1		+			
ANR	1014917	MultiplicativeExpression	2 * dspan		1014571	0		*			
ANR	1014918	PrimaryExpression	2		1014571	0					
ANR	1014919	Identifier	dspan		1014571	1					
ANR	1014920	PrimaryExpression	0		1014571	1					
ANR	1014921	MultiplicativeExpression	( g + 2 * d + 1 ) / 3		1014571	1		/			
ANR	1014922	AdditiveExpression	g + 2 * d + 1		1014571	0		+			
ANR	1014923	Identifier	g		1014571	0					
ANR	1014924	AdditiveExpression	2 * d + 1		1014571	1		+			
ANR	1014925	MultiplicativeExpression	2 * d		1014571	0		*			
ANR	1014926	PrimaryExpression	2		1014571	0					
ANR	1014927	Identifier	d		1014571	1					
ANR	1014928	PrimaryExpression	1		1014571	1					
ANR	1014929	PrimaryExpression	3		1014571	1					
ANR	1014930	ExpressionStatement	outp [ 2 * dspan + 1 ] = ( g + 2 * h + 2 * d + 4 * e + 3 ) / 9	1418:8:42170:42207	1014571	18	True				
ANR	1014931	AssignmentExpression	outp [ 2 * dspan + 1 ] = ( g + 2 * h + 2 * d + 4 * e + 3 ) / 9		1014571	0		=			
ANR	1014932	ArrayIndexing	outp [ 2 * dspan + 1 ]		1014571	0					
ANR	1014933	Identifier	outp		1014571	0					
ANR	1014934	AdditiveExpression	2 * dspan + 1		1014571	1		+			
ANR	1014935	MultiplicativeExpression	2 * dspan		1014571	0		*			
ANR	1014936	PrimaryExpression	2		1014571	0					
ANR	1014937	Identifier	dspan		1014571	1					
ANR	1014938	PrimaryExpression	1		1014571	1					
ANR	1014939	MultiplicativeExpression	( g + 2 * h + 2 * d + 4 * e + 3 ) / 9		1014571	1		/			
ANR	1014940	AdditiveExpression	g + 2 * h + 2 * d + 4 * e + 3		1014571	0		+			
ANR	1014941	Identifier	g		1014571	0					
ANR	1014942	AdditiveExpression	2 * h + 2 * d + 4 * e + 3		1014571	1		+			
ANR	1014943	MultiplicativeExpression	2 * h		1014571	0		*			
ANR	1014944	PrimaryExpression	2		1014571	0					
ANR	1014945	Identifier	h		1014571	1					
ANR	1014946	AdditiveExpression	2 * d + 4 * e + 3		1014571	1		+			
ANR	1014947	MultiplicativeExpression	2 * d		1014571	0		*			
ANR	1014948	PrimaryExpression	2		1014571	0					
ANR	1014949	Identifier	d		1014571	1					
ANR	1014950	AdditiveExpression	4 * e + 3		1014571	1		+			
ANR	1014951	MultiplicativeExpression	4 * e		1014571	0		*			
ANR	1014952	PrimaryExpression	4		1014571	0					
ANR	1014953	Identifier	e		1014571	1					
ANR	1014954	PrimaryExpression	3		1014571	1					
ANR	1014955	PrimaryExpression	9		1014571	1					
ANR	1014956	ExpressionStatement	outp [ 2 * dspan + 2 ] = ( i + 2 * h + 2 * f + 4 * e + 3 ) / 9	1419:8:42217:42254	1014571	19	True				
ANR	1014957	AssignmentExpression	outp [ 2 * dspan + 2 ] = ( i + 2 * h + 2 * f + 4 * e + 3 ) / 9		1014571	0		=			
ANR	1014958	ArrayIndexing	outp [ 2 * dspan + 2 ]		1014571	0					
ANR	1014959	Identifier	outp		1014571	0					
ANR	1014960	AdditiveExpression	2 * dspan + 2		1014571	1		+			
ANR	1014961	MultiplicativeExpression	2 * dspan		1014571	0		*			
ANR	1014962	PrimaryExpression	2		1014571	0					
ANR	1014963	Identifier	dspan		1014571	1					
ANR	1014964	PrimaryExpression	2		1014571	1					
ANR	1014965	MultiplicativeExpression	( i + 2 * h + 2 * f + 4 * e + 3 ) / 9		1014571	1		/			
ANR	1014966	AdditiveExpression	i + 2 * h + 2 * f + 4 * e + 3		1014571	0		+			
ANR	1014967	Identifier	i		1014571	0					
ANR	1014968	AdditiveExpression	2 * h + 2 * f + 4 * e + 3		1014571	1		+			
ANR	1014969	MultiplicativeExpression	2 * h		1014571	0		*			
ANR	1014970	PrimaryExpression	2		1014571	0					
ANR	1014971	Identifier	h		1014571	1					
ANR	1014972	AdditiveExpression	2 * f + 4 * e + 3		1014571	1		+			
ANR	1014973	MultiplicativeExpression	2 * f		1014571	0		*			
ANR	1014974	PrimaryExpression	2		1014571	0					
ANR	1014975	Identifier	f		1014571	1					
ANR	1014976	AdditiveExpression	4 * e + 3		1014571	1		+			
ANR	1014977	MultiplicativeExpression	4 * e		1014571	0		*			
ANR	1014978	PrimaryExpression	4		1014571	0					
ANR	1014979	Identifier	e		1014571	1					
ANR	1014980	PrimaryExpression	3		1014571	1					
ANR	1014981	PrimaryExpression	9		1014571	1					
ANR	1014982	ExpressionStatement	outp [ 2 * dspan + 3 ] = ( i + 2 * f + 1 ) / 3	1420:8:42264:42293	1014571	20	True				
ANR	1014983	AssignmentExpression	outp [ 2 * dspan + 3 ] = ( i + 2 * f + 1 ) / 3		1014571	0		=			
ANR	1014984	ArrayIndexing	outp [ 2 * dspan + 3 ]		1014571	0					
ANR	1014985	Identifier	outp		1014571	0					
ANR	1014986	AdditiveExpression	2 * dspan + 3		1014571	1		+			
ANR	1014987	MultiplicativeExpression	2 * dspan		1014571	0		*			
ANR	1014988	PrimaryExpression	2		1014571	0					
ANR	1014989	Identifier	dspan		1014571	1					
ANR	1014990	PrimaryExpression	3		1014571	1					
ANR	1014991	MultiplicativeExpression	( i + 2 * f + 1 ) / 3		1014571	1		/			
ANR	1014992	AdditiveExpression	i + 2 * f + 1		1014571	0		+			
ANR	1014993	Identifier	i		1014571	0					
ANR	1014994	AdditiveExpression	2 * f + 1		1014571	1		+			
ANR	1014995	MultiplicativeExpression	2 * f		1014571	0		*			
ANR	1014996	PrimaryExpression	2		1014571	0					
ANR	1014997	Identifier	f		1014571	1					
ANR	1014998	PrimaryExpression	1		1014571	1					
ANR	1014999	PrimaryExpression	3		1014571	1					
ANR	1015000	ExpressionStatement	outp [ 3 * dspan + 0 ] = g	1421:8:42303:42322	1014571	21	True				
ANR	1015001	AssignmentExpression	outp [ 3 * dspan + 0 ] = g		1014571	0		=			
ANR	1015002	ArrayIndexing	outp [ 3 * dspan + 0 ]		1014571	0					
ANR	1015003	Identifier	outp		1014571	0					
ANR	1015004	AdditiveExpression	3 * dspan + 0		1014571	1		+			
ANR	1015005	MultiplicativeExpression	3 * dspan		1014571	0		*			
ANR	1015006	PrimaryExpression	3		1014571	0					
ANR	1015007	Identifier	dspan		1014571	1					
ANR	1015008	PrimaryExpression	0		1014571	1					
ANR	1015009	Identifier	g		1014571	1					
ANR	1015010	ExpressionStatement	outp [ 3 * dspan + 1 ] = ( g + 2 * h + 1 ) / 3	1422:8:42332:42361	1014571	22	True				
ANR	1015011	AssignmentExpression	outp [ 3 * dspan + 1 ] = ( g + 2 * h + 1 ) / 3		1014571	0		=			
ANR	1015012	ArrayIndexing	outp [ 3 * dspan + 1 ]		1014571	0					
ANR	1015013	Identifier	outp		1014571	0					
ANR	1015014	AdditiveExpression	3 * dspan + 1		1014571	1		+			
ANR	1015015	MultiplicativeExpression	3 * dspan		1014571	0		*			
ANR	1015016	PrimaryExpression	3		1014571	0					
ANR	1015017	Identifier	dspan		1014571	1					
ANR	1015018	PrimaryExpression	1		1014571	1					
ANR	1015019	MultiplicativeExpression	( g + 2 * h + 1 ) / 3		1014571	1		/			
ANR	1015020	AdditiveExpression	g + 2 * h + 1		1014571	0		+			
ANR	1015021	Identifier	g		1014571	0					
ANR	1015022	AdditiveExpression	2 * h + 1		1014571	1		+			
ANR	1015023	MultiplicativeExpression	2 * h		1014571	0		*			
ANR	1015024	PrimaryExpression	2		1014571	0					
ANR	1015025	Identifier	h		1014571	1					
ANR	1015026	PrimaryExpression	1		1014571	1					
ANR	1015027	PrimaryExpression	3		1014571	1					
ANR	1015028	ExpressionStatement	outp [ 3 * dspan + 2 ] = ( i + 2 * h + 1 ) / 3	1423:8:42371:42400	1014571	23	True				
ANR	1015029	AssignmentExpression	outp [ 3 * dspan + 2 ] = ( i + 2 * h + 1 ) / 3		1014571	0		=			
ANR	1015030	ArrayIndexing	outp [ 3 * dspan + 2 ]		1014571	0					
ANR	1015031	Identifier	outp		1014571	0					
ANR	1015032	AdditiveExpression	3 * dspan + 2		1014571	1		+			
ANR	1015033	MultiplicativeExpression	3 * dspan		1014571	0		*			
ANR	1015034	PrimaryExpression	3		1014571	0					
ANR	1015035	Identifier	dspan		1014571	1					
ANR	1015036	PrimaryExpression	2		1014571	1					
ANR	1015037	MultiplicativeExpression	( i + 2 * h + 1 ) / 3		1014571	1		/			
ANR	1015038	AdditiveExpression	i + 2 * h + 1		1014571	0		+			
ANR	1015039	Identifier	i		1014571	0					
ANR	1015040	AdditiveExpression	2 * h + 1		1014571	1		+			
ANR	1015041	MultiplicativeExpression	2 * h		1014571	0		*			
ANR	1015042	PrimaryExpression	2		1014571	0					
ANR	1015043	Identifier	h		1014571	1					
ANR	1015044	PrimaryExpression	1		1014571	1					
ANR	1015045	PrimaryExpression	3		1014571	1					
ANR	1015046	ExpressionStatement	outp [ 3 * dspan + 3 ] = i	1424:8:42410:42429	1014571	24	True				
ANR	1015047	AssignmentExpression	outp [ 3 * dspan + 3 ] = i		1014571	0		=			
ANR	1015048	ArrayIndexing	outp [ 3 * dspan + 3 ]		1014571	0					
ANR	1015049	Identifier	outp		1014571	0					
ANR	1015050	AdditiveExpression	3 * dspan + 3		1014571	1		+			
ANR	1015051	MultiplicativeExpression	3 * dspan		1014571	0		*			
ANR	1015052	PrimaryExpression	3		1014571	0					
ANR	1015053	Identifier	dspan		1014571	1					
ANR	1015054	PrimaryExpression	3		1014571	1					
ANR	1015055	Identifier	i		1014571	1					
ANR	1015056	ExpressionStatement	outp += 4	1425:8:42439:42448	1014571	25	True				
ANR	1015057	AssignmentExpression	outp += 4		1014571	0		+=			
ANR	1015058	Identifier	outp		1014571	0					
ANR	1015059	PrimaryExpression	4		1014571	1					
ANR	1015060	ExpressionStatement	inp += 3	1426:8:42458:42466	1014571	26	True				
ANR	1015061	AssignmentExpression	inp += 3		1014571	0		+=			
ANR	1015062	Identifier	inp		1014571	0					
ANR	1015063	PrimaryExpression	3		1014571	1					
ANR	1015064	ReturnType	static void		1014571	1					
ANR	1015065	Identifier	down_core8_3_4		1014571	2					
ANR	1015066	ParameterList	"gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span"		1014571	3					
ANR	1015067	Parameter	gx_downscaler_t * ds	1367:27:40720:40738	1014571	0	True				
ANR	1015068	ParameterType	gx_downscaler_t *		1014571	0					
ANR	1015069	Identifier	ds		1014571	1					
ANR	1015070	Parameter	byte * outp	1368:27:40768:40788	1014571	1	True				
ANR	1015071	ParameterType	byte *		1014571	0					
ANR	1015072	Identifier	outp		1014571	1					
ANR	1015073	Parameter	byte * in_buffer	1369:27:40818:40843	1014571	2	True				
ANR	1015074	ParameterType	byte *		1014571	0					
ANR	1015075	Identifier	in_buffer		1014571	1					
ANR	1015076	Parameter	int row	1370:27:40873:40892	1014571	3	True				
ANR	1015077	ParameterType	int		1014571	0					
ANR	1015078	Identifier	row		1014571	1					
ANR	1015079	Parameter	int plane	1371:27:40922:40943	1014571	4	True				
ANR	1015080	ParameterType	int		1014571	0					
ANR	1015081	Identifier	plane		1014571	1					
ANR	1015082	Parameter	int span	1372:27:40973:40993	1014571	5	True				
ANR	1015083	ParameterType	int		1014571	0					
ANR	1015084	Identifier	span		1014571	1					
ANR	1015085	CFGEntryNode	ENTRY		1014571		True				
ANR	1015086	CFGExitNode	EXIT		1014571		True				
ANR	1015087	Symbol	plane		1014571						
ANR	1015088	Symbol	awidth		1014571						
ANR	1015089	Symbol	in_buffer		1014571						
ANR	1015090	Symbol	ds		1014571						
ANR	1015091	Symbol	outp		1014571						
ANR	1015092	Symbol	* ds		1014571						
ANR	1015093	Symbol	dspan		1014571						
ANR	1015094	Symbol	ds -> width		1014571						
ANR	1015095	Symbol	row		1014571						
ANR	1015096	Symbol	a		1014571						
ANR	1015097	Symbol	b		1014571						
ANR	1015098	Symbol	c		1014571						
ANR	1015099	Symbol	* span		1014571						
ANR	1015100	Symbol	d		1014571						
ANR	1015101	Symbol	e		1014571						
ANR	1015102	Symbol	f		1014571						
ANR	1015103	Symbol	ds -> scaled_span		1014571						
ANR	1015104	Symbol	g		1014571						
ANR	1015105	Symbol	ds -> awidth		1014571						
ANR	1015106	Symbol	h		1014571						
ANR	1015107	Symbol	i		1014571						
ANR	1015108	Symbol	inp		1014571						
ANR	1015109	Symbol	* inp		1014571						
ANR	1015110	Symbol	* dspan		1014571						
ANR	1015111	Symbol	pad_white		1014571						
ANR	1015112	Symbol	x		1014571						
ANR	1015113	Symbol	width		1014571						
ANR	1015114	Symbol	* outp		1014571						
ANR	1015115	Symbol	span		1014571						
ANR	1015116	Function	down_core24	1432:0:42524:44610							
ANR	1015117	FunctionDef	"down_core24 (gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span)"		1015116	0					
ANR	1015118	CompoundStatement		1438:0:42809:44610	1015116	0					
ANR	1015119	IdentifierDeclStatement	"int x , xx , y , value ;"	1439:4:42815:42836	1015116	0	True				
ANR	1015120	IdentifierDecl	x		1015116	0					
ANR	1015121	IdentifierDeclType	int		1015116	0					
ANR	1015122	Identifier	x		1015116	1					
ANR	1015123	IdentifierDecl	xx		1015116	1					
ANR	1015124	IdentifierDeclType	int		1015116	0					
ANR	1015125	Identifier	xx		1015116	1					
ANR	1015126	IdentifierDecl	y		1015116	2					
ANR	1015127	IdentifierDeclType	int		1015116	0					
ANR	1015128	Identifier	y		1015116	1					
ANR	1015129	IdentifierDecl	value		1015116	3					
ANR	1015130	IdentifierDeclType	int		1015116	0					
ANR	1015131	Identifier	value		1015116	1					
ANR	1015132	IdentifierDeclStatement	int pad_white ;	1440:4:42842:42857	1015116	1	True				
ANR	1015133	IdentifierDecl	pad_white		1015116	0					
ANR	1015134	IdentifierDeclType	int		1015116	0					
ANR	1015135	Identifier	pad_white		1015116	1					
ANR	1015136	IdentifierDeclStatement	byte * inp ;	1441:4:42863:42872	1015116	2	True				
ANR	1015137	IdentifierDecl	* inp		1015116	0					
ANR	1015138	IdentifierDeclType	byte *		1015116	0					
ANR	1015139	Identifier	inp		1015116	1					
ANR	1015140	IdentifierDeclStatement	int width = ds -> width ;	1442:4:42878:42902	1015116	3	True				
ANR	1015141	IdentifierDecl	width = ds -> width		1015116	0					
ANR	1015142	IdentifierDeclType	int		1015116	0					
ANR	1015143	Identifier	width		1015116	1					
ANR	1015144	AssignmentExpression	width = ds -> width		1015116	2		=			
ANR	1015145	Identifier	width		1015116	0					
ANR	1015146	PtrMemberAccess	ds -> width		1015116	1					
ANR	1015147	Identifier	ds		1015116	0					
ANR	1015148	Identifier	width		1015116	1					
ANR	1015149	IdentifierDeclStatement	int awidth = ds -> awidth ;	1443:4:42908:42933	1015116	4	True				
ANR	1015150	IdentifierDecl	awidth = ds -> awidth		1015116	0					
ANR	1015151	IdentifierDeclType	int		1015116	0					
ANR	1015152	Identifier	awidth		1015116	1					
ANR	1015153	AssignmentExpression	awidth = ds -> awidth		1015116	2		=			
ANR	1015154	Identifier	awidth		1015116	0					
ANR	1015155	PtrMemberAccess	ds -> awidth		1015116	1					
ANR	1015156	Identifier	ds		1015116	0					
ANR	1015157	Identifier	awidth		1015116	1					
ANR	1015158	IdentifierDeclStatement	int factor = ds -> factor ;	1444:4:42939:42964	1015116	5	True				
ANR	1015159	IdentifierDecl	factor = ds -> factor		1015116	0					
ANR	1015160	IdentifierDeclType	int		1015116	0					
ANR	1015161	Identifier	factor		1015116	1					
ANR	1015162	AssignmentExpression	factor = ds -> factor		1015116	2		=			
ANR	1015163	Identifier	factor		1015116	0					
ANR	1015164	PtrMemberAccess	ds -> factor		1015116	1					
ANR	1015165	Identifier	ds		1015116	0					
ANR	1015166	Identifier	factor		1015116	1					
ANR	1015167	IdentifierDeclStatement	int div = factor * factor ;	1445:4:42970:42998	1015116	6	True				
ANR	1015168	IdentifierDecl	div = factor * factor		1015116	0					
ANR	1015169	IdentifierDeclType	int		1015116	0					
ANR	1015170	Identifier	div		1015116	1					
ANR	1015171	AssignmentExpression	div = factor * factor		1015116	2		=			
ANR	1015172	Identifier	div		1015116	0					
ANR	1015173	MultiplicativeExpression	factor * factor		1015116	1		*			
ANR	1015174	Identifier	factor		1015116	0					
ANR	1015175	Identifier	factor		1015116	1					
ANR	1015176	ExpressionStatement	pad_white = ( awidth - width ) * factor * 3	1447:4:43005:43046	1015116	7	True				
ANR	1015177	AssignmentExpression	pad_white = ( awidth - width ) * factor * 3		1015116	0		=			
ANR	1015178	Identifier	pad_white		1015116	0					
ANR	1015179	MultiplicativeExpression	( awidth - width ) * factor * 3		1015116	1		*			
ANR	1015180	AdditiveExpression	awidth - width		1015116	0		-			
ANR	1015181	Identifier	awidth		1015116	0					
ANR	1015182	Identifier	width		1015116	1					
ANR	1015183	MultiplicativeExpression	factor * 3		1015116	1		*			
ANR	1015184	Identifier	factor		1015116	0					
ANR	1015185	PrimaryExpression	3		1015116	1					
ANR	1015186	IfStatement	if ( pad_white < 0 )		1015116	8					
ANR	1015187	Condition	pad_white < 0	1448:8:43056:43068	1015116	0	True				
ANR	1015188	RelationalExpression	pad_white < 0		1015116	0		<			
ANR	1015189	Identifier	pad_white		1015116	0					
ANR	1015190	PrimaryExpression	0		1015116	1					
ANR	1015191	ExpressionStatement	pad_white = 0	1449:8:43079:43092	1015116	1	True				
ANR	1015192	AssignmentExpression	pad_white = 0		1015116	0		=			
ANR	1015193	Identifier	pad_white		1015116	0					
ANR	1015194	PrimaryExpression	0		1015116	1					
ANR	1015195	IfStatement	if ( pad_white )		1015116	9					
ANR	1015196	Condition	pad_white	1451:8:43103:43111	1015116	0	True				
ANR	1015197	Identifier	pad_white		1015116	0					
ANR	1015198	CompoundStatement		15:4:308:308	1015116	1					
ANR	1015199	ExpressionStatement	inp = in_buffer + width * factor * 3	1453:8:43128:43160	1015116	0	True				
ANR	1015200	AssignmentExpression	inp = in_buffer + width * factor * 3		1015116	0		=			
ANR	1015201	Identifier	inp		1015116	0					
ANR	1015202	AdditiveExpression	in_buffer + width * factor * 3		1015116	1		+			
ANR	1015203	Identifier	in_buffer		1015116	0					
ANR	1015204	MultiplicativeExpression	width * factor * 3		1015116	1		*			
ANR	1015205	Identifier	width		1015116	0					
ANR	1015206	MultiplicativeExpression	factor * 3		1015116	1		*			
ANR	1015207	Identifier	factor		1015116	0					
ANR	1015208	PrimaryExpression	3		1015116	1					
ANR	1015209	ForStatement	for ( y = factor ; y > 0 ; y -- )		1015116	1					
ANR	1015210	ForInit	y = factor ;	1454:13:43175:43185	1015116	0	True				
ANR	1015211	AssignmentExpression	y = factor		1015116	0		=			
ANR	1015212	Identifier	y		1015116	0					
ANR	1015213	Identifier	factor		1015116	1					
ANR	1015214	Condition	y > 0	1454:25:43187:43191	1015116	1	True				
ANR	1015215	RelationalExpression	y > 0		1015116	0		>			
ANR	1015216	Identifier	y		1015116	0					
ANR	1015217	PrimaryExpression	0		1015116	1					
ANR	1015218	PostIncDecOperationExpression	y --	1454:32:43194:43196	1015116	2	True				
ANR	1015219	Identifier	y		1015116	0					
ANR	1015220	IncDec	--		1015116	1					
ANR	1015221	CompoundStatement		18:8:397:397	1015116	3					
ANR	1015222	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	1456:12:43221:43249	1015116	0	True				
ANR	1015223	CallExpression	"memset ( inp , 0xFF , pad_white )"		1015116	0					
ANR	1015224	Callee	memset		1015116	0					
ANR	1015225	Identifier	memset		1015116	0					
ANR	1015226	ArgumentList	inp		1015116	1					
ANR	1015227	Argument	inp		1015116	0					
ANR	1015228	Identifier	inp		1015116	0					
ANR	1015229	Argument	0xFF		1015116	1					
ANR	1015230	PrimaryExpression	0xFF		1015116	0					
ANR	1015231	Argument	pad_white		1015116	2					
ANR	1015232	Identifier	pad_white		1015116	0					
ANR	1015233	ExpressionStatement	inp += span	1457:12:43263:43274	1015116	1	True				
ANR	1015234	AssignmentExpression	inp += span		1015116	0		+=			
ANR	1015235	Identifier	inp		1015116	0					
ANR	1015236	Identifier	span		1015116	1					
ANR	1015237	ExpressionStatement	inp = in_buffer	1461:4:43297:43312	1015116	10	True				
ANR	1015238	AssignmentExpression	inp = in_buffer		1015116	0		=			
ANR	1015239	Identifier	inp		1015116	0					
ANR	1015240	Identifier	in_buffer		1015116	1					
ANR	1015241	CompoundStatement		28:8:618:650	1015116	11					
ANR	1015242	IdentifierDeclStatement	const int back = span * factor - 3 ;	1464:8:43383:43418	1015116	0	True				
ANR	1015243	IdentifierDecl	back = span * factor - 3		1015116	0					
ANR	1015244	IdentifierDeclType	const int		1015116	0					
ANR	1015245	Identifier	back		1015116	1					
ANR	1015246	AssignmentExpression	back = span * factor - 3		1015116	2		=			
ANR	1015247	Identifier	back		1015116	0					
ANR	1015248	AdditiveExpression	span * factor - 3		1015116	1		-			
ANR	1015249	MultiplicativeExpression	span * factor		1015116	0		*			
ANR	1015250	Identifier	span		1015116	0					
ANR	1015251	Identifier	factor		1015116	1					
ANR	1015252	PrimaryExpression	3		1015116	1					
ANR	1015253	IdentifierDeclStatement	const int back2 = factor * 3 - 1 ;	1465:8:43428:43460	1015116	1	True				
ANR	1015254	IdentifierDecl	back2 = factor * 3 - 1		1015116	0					
ANR	1015255	IdentifierDeclType	const int		1015116	0					
ANR	1015256	Identifier	back2		1015116	1					
ANR	1015257	AssignmentExpression	back2 = factor * 3 - 1		1015116	2		=			
ANR	1015258	Identifier	back2		1015116	0					
ANR	1015259	AdditiveExpression	factor * 3 - 1		1015116	1		-			
ANR	1015260	MultiplicativeExpression	factor * 3		1015116	0		*			
ANR	1015261	Identifier	factor		1015116	0					
ANR	1015262	PrimaryExpression	3		1015116	1					
ANR	1015263	PrimaryExpression	1		1015116	1					
ANR	1015264	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1015116	2					
ANR	1015265	ForInit	x = awidth ;	1466:13:43475:43485	1015116	0	True				
ANR	1015266	AssignmentExpression	x = awidth		1015116	0		=			
ANR	1015267	Identifier	x		1015116	0					
ANR	1015268	Identifier	awidth		1015116	1					
ANR	1015269	Condition	x > 0	1466:25:43487:43491	1015116	1	True				
ANR	1015270	RelationalExpression	x > 0		1015116	0		>			
ANR	1015271	Identifier	x		1015116	0					
ANR	1015272	PrimaryExpression	0		1015116	1					
ANR	1015273	PostIncDecOperationExpression	x --	1466:32:43494:43496	1015116	2	True				
ANR	1015274	Identifier	x		1015116	0					
ANR	1015275	IncDec	--		1015116	1					
ANR	1015276	CompoundStatement		30:8:697:697	1015116	3					
ANR	1015277	ExpressionStatement	value = 0	1469:12:43541:43550	1015116	0	True				
ANR	1015278	AssignmentExpression	value = 0		1015116	0		=			
ANR	1015279	Identifier	value		1015116	0					
ANR	1015280	PrimaryExpression	0		1015116	1					
ANR	1015281	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1015116	1					
ANR	1015282	ForInit	xx = factor ;	1470:17:43569:43580	1015116	0	True				
ANR	1015283	AssignmentExpression	xx = factor		1015116	0		=			
ANR	1015284	Identifier	xx		1015116	0					
ANR	1015285	Identifier	factor		1015116	1					
ANR	1015286	Condition	xx > 0	1470:30:43582:43587	1015116	1	True				
ANR	1015287	RelationalExpression	xx > 0		1015116	0		>			
ANR	1015288	Identifier	xx		1015116	0					
ANR	1015289	PrimaryExpression	0		1015116	1					
ANR	1015290	PostIncDecOperationExpression	xx --	1470:38:43590:43593	1015116	2	True				
ANR	1015291	Identifier	xx		1015116	0					
ANR	1015292	IncDec	--		1015116	1					
ANR	1015293	CompoundStatement		34:12:798:798	1015116	3					
ANR	1015294	ForStatement	for ( y = factor ; y > 0 ; y -- )		1015116	0					
ANR	1015295	ForInit	y = factor ;	1472:21:43631:43641	1015116	0	True				
ANR	1015296	AssignmentExpression	y = factor		1015116	0		=			
ANR	1015297	Identifier	y		1015116	0					
ANR	1015298	Identifier	factor		1015116	1					
ANR	1015299	Condition	y > 0	1472:33:43643:43647	1015116	1	True				
ANR	1015300	RelationalExpression	y > 0		1015116	0		>			
ANR	1015301	Identifier	y		1015116	0					
ANR	1015302	PrimaryExpression	0		1015116	1					
ANR	1015303	PostIncDecOperationExpression	y --	1472:40:43650:43652	1015116	2	True				
ANR	1015304	Identifier	y		1015116	0					
ANR	1015305	IncDec	--		1015116	1					
ANR	1015306	CompoundStatement		36:16:861:861	1015116	3					
ANR	1015307	ExpressionStatement	value += * inp	1474:20:43693:43706	1015116	0	True				
ANR	1015308	AssignmentExpression	value += * inp		1015116	0		+=			
ANR	1015309	Identifier	value		1015116	0					
ANR	1015310	UnaryOperationExpression	* inp		1015116	1					
ANR	1015311	UnaryOperator	*		1015116	0					
ANR	1015312	Identifier	inp		1015116	1					
ANR	1015313	ExpressionStatement	inp += span	1475:20:43728:43739	1015116	1	True				
ANR	1015314	AssignmentExpression	inp += span		1015116	0		+=			
ANR	1015315	Identifier	inp		1015116	0					
ANR	1015316	Identifier	span		1015116	1					
ANR	1015317	ExpressionStatement	inp -= back	1477:16:43775:43786	1015116	1	True				
ANR	1015318	AssignmentExpression	inp -= back		1015116	0		-=			
ANR	1015319	Identifier	inp		1015116	0					
ANR	1015320	Identifier	back		1015116	1					
ANR	1015321	ExpressionStatement	inp -= back2	1479:12:43814:43826	1015116	2	True				
ANR	1015322	AssignmentExpression	inp -= back2		1015116	0		-=			
ANR	1015323	Identifier	inp		1015116	0					
ANR	1015324	Identifier	back2		1015116	1					
ANR	1015325	ExpressionStatement	* outp ++ = ( value + ( div >> 1 ) ) / div	1480:12:43840:43870	1015116	3	True				
ANR	1015326	AssignmentExpression	* outp ++ = ( value + ( div >> 1 ) ) / div		1015116	0		=			
ANR	1015327	UnaryOperationExpression	* outp ++		1015116	0					
ANR	1015328	UnaryOperator	*		1015116	0					
ANR	1015329	PostIncDecOperationExpression	outp ++		1015116	1					
ANR	1015330	Identifier	outp		1015116	0					
ANR	1015331	IncDec	++		1015116	1					
ANR	1015332	MultiplicativeExpression	( value + ( div >> 1 ) ) / div		1015116	1		/			
ANR	1015333	AdditiveExpression	value + ( div >> 1 )		1015116	0		+			
ANR	1015334	Identifier	value		1015116	0					
ANR	1015335	ShiftExpression	div >> 1		1015116	1		>>			
ANR	1015336	Identifier	div		1015116	0					
ANR	1015337	PrimaryExpression	1		1015116	1					
ANR	1015338	Identifier	div		1015116	1					
ANR	1015339	ExpressionStatement	value = 0	1482:12:43904:43913	1015116	4	True				
ANR	1015340	AssignmentExpression	value = 0		1015116	0		=			
ANR	1015341	Identifier	value		1015116	0					
ANR	1015342	PrimaryExpression	0		1015116	1					
ANR	1015343	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1015116	5					
ANR	1015344	ForInit	xx = factor ;	1483:17:43932:43943	1015116	0	True				
ANR	1015345	AssignmentExpression	xx = factor		1015116	0		=			
ANR	1015346	Identifier	xx		1015116	0					
ANR	1015347	Identifier	factor		1015116	1					
ANR	1015348	Condition	xx > 0	1483:30:43945:43950	1015116	1	True				
ANR	1015349	RelationalExpression	xx > 0		1015116	0		>			
ANR	1015350	Identifier	xx		1015116	0					
ANR	1015351	PrimaryExpression	0		1015116	1					
ANR	1015352	PostIncDecOperationExpression	xx --	1483:38:43953:43956	1015116	2	True				
ANR	1015353	Identifier	xx		1015116	0					
ANR	1015354	IncDec	--		1015116	1					
ANR	1015355	CompoundStatement		47:12:1161:1161	1015116	3					
ANR	1015356	ForStatement	for ( y = factor ; y > 0 ; y -- )		1015116	0					
ANR	1015357	ForInit	y = factor ;	1485:21:43994:44004	1015116	0	True				
ANR	1015358	AssignmentExpression	y = factor		1015116	0		=			
ANR	1015359	Identifier	y		1015116	0					
ANR	1015360	Identifier	factor		1015116	1					
ANR	1015361	Condition	y > 0	1485:33:44006:44010	1015116	1	True				
ANR	1015362	RelationalExpression	y > 0		1015116	0		>			
ANR	1015363	Identifier	y		1015116	0					
ANR	1015364	PrimaryExpression	0		1015116	1					
ANR	1015365	PostIncDecOperationExpression	y --	1485:40:44013:44015	1015116	2	True				
ANR	1015366	Identifier	y		1015116	0					
ANR	1015367	IncDec	--		1015116	1					
ANR	1015368	CompoundStatement		49:16:1224:1224	1015116	3					
ANR	1015369	ExpressionStatement	value += * inp	1487:20:44056:44069	1015116	0	True				
ANR	1015370	AssignmentExpression	value += * inp		1015116	0		+=			
ANR	1015371	Identifier	value		1015116	0					
ANR	1015372	UnaryOperationExpression	* inp		1015116	1					
ANR	1015373	UnaryOperator	*		1015116	0					
ANR	1015374	Identifier	inp		1015116	1					
ANR	1015375	ExpressionStatement	inp += span	1488:20:44091:44102	1015116	1	True				
ANR	1015376	AssignmentExpression	inp += span		1015116	0		+=			
ANR	1015377	Identifier	inp		1015116	0					
ANR	1015378	Identifier	span		1015116	1					
ANR	1015379	ExpressionStatement	inp -= back	1490:16:44138:44149	1015116	1	True				
ANR	1015380	AssignmentExpression	inp -= back		1015116	0		-=			
ANR	1015381	Identifier	inp		1015116	0					
ANR	1015382	Identifier	back		1015116	1					
ANR	1015383	ExpressionStatement	inp -= back2	1492:12:44177:44189	1015116	6	True				
ANR	1015384	AssignmentExpression	inp -= back2		1015116	0		-=			
ANR	1015385	Identifier	inp		1015116	0					
ANR	1015386	Identifier	back2		1015116	1					
ANR	1015387	ExpressionStatement	* outp ++ = ( value + ( div >> 1 ) ) / div	1493:12:44203:44233	1015116	7	True				
ANR	1015388	AssignmentExpression	* outp ++ = ( value + ( div >> 1 ) ) / div		1015116	0		=			
ANR	1015389	UnaryOperationExpression	* outp ++		1015116	0					
ANR	1015390	UnaryOperator	*		1015116	0					
ANR	1015391	PostIncDecOperationExpression	outp ++		1015116	1					
ANR	1015392	Identifier	outp		1015116	0					
ANR	1015393	IncDec	++		1015116	1					
ANR	1015394	MultiplicativeExpression	( value + ( div >> 1 ) ) / div		1015116	1		/			
ANR	1015395	AdditiveExpression	value + ( div >> 1 )		1015116	0		+			
ANR	1015396	Identifier	value		1015116	0					
ANR	1015397	ShiftExpression	div >> 1		1015116	1		>>			
ANR	1015398	Identifier	div		1015116	0					
ANR	1015399	PrimaryExpression	1		1015116	1					
ANR	1015400	Identifier	div		1015116	1					
ANR	1015401	ExpressionStatement	value = 0	1495:12:44267:44276	1015116	8	True				
ANR	1015402	AssignmentExpression	value = 0		1015116	0		=			
ANR	1015403	Identifier	value		1015116	0					
ANR	1015404	PrimaryExpression	0		1015116	1					
ANR	1015405	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1015116	9					
ANR	1015406	ForInit	xx = factor ;	1496:17:44295:44306	1015116	0	True				
ANR	1015407	AssignmentExpression	xx = factor		1015116	0		=			
ANR	1015408	Identifier	xx		1015116	0					
ANR	1015409	Identifier	factor		1015116	1					
ANR	1015410	Condition	xx > 0	1496:30:44308:44313	1015116	1	True				
ANR	1015411	RelationalExpression	xx > 0		1015116	0		>			
ANR	1015412	Identifier	xx		1015116	0					
ANR	1015413	PrimaryExpression	0		1015116	1					
ANR	1015414	PostIncDecOperationExpression	xx --	1496:38:44316:44319	1015116	2	True				
ANR	1015415	Identifier	xx		1015116	0					
ANR	1015416	IncDec	--		1015116	1					
ANR	1015417	CompoundStatement		60:12:1524:1524	1015116	3					
ANR	1015418	ForStatement	for ( y = factor ; y > 0 ; y -- )		1015116	0					
ANR	1015419	ForInit	y = factor ;	1498:21:44357:44367	1015116	0	True				
ANR	1015420	AssignmentExpression	y = factor		1015116	0		=			
ANR	1015421	Identifier	y		1015116	0					
ANR	1015422	Identifier	factor		1015116	1					
ANR	1015423	Condition	y > 0	1498:33:44369:44373	1015116	1	True				
ANR	1015424	RelationalExpression	y > 0		1015116	0		>			
ANR	1015425	Identifier	y		1015116	0					
ANR	1015426	PrimaryExpression	0		1015116	1					
ANR	1015427	PostIncDecOperationExpression	y --	1498:40:44376:44378	1015116	2	True				
ANR	1015428	Identifier	y		1015116	0					
ANR	1015429	IncDec	--		1015116	1					
ANR	1015430	CompoundStatement		62:16:1587:1587	1015116	3					
ANR	1015431	ExpressionStatement	value += * inp	1500:20:44419:44432	1015116	0	True				
ANR	1015432	AssignmentExpression	value += * inp		1015116	0		+=			
ANR	1015433	Identifier	value		1015116	0					
ANR	1015434	UnaryOperationExpression	* inp		1015116	1					
ANR	1015435	UnaryOperator	*		1015116	0					
ANR	1015436	Identifier	inp		1015116	1					
ANR	1015437	ExpressionStatement	inp += span	1501:20:44454:44465	1015116	1	True				
ANR	1015438	AssignmentExpression	inp += span		1015116	0		+=			
ANR	1015439	Identifier	inp		1015116	0					
ANR	1015440	Identifier	span		1015116	1					
ANR	1015441	ExpressionStatement	inp -= back	1503:16:44501:44512	1015116	1	True				
ANR	1015442	AssignmentExpression	inp -= back		1015116	0		-=			
ANR	1015443	Identifier	inp		1015116	0					
ANR	1015444	Identifier	back		1015116	1					
ANR	1015445	ExpressionStatement	inp -= 2	1505:12:44540:44548	1015116	10	True				
ANR	1015446	AssignmentExpression	inp -= 2		1015116	0		-=			
ANR	1015447	Identifier	inp		1015116	0					
ANR	1015448	PrimaryExpression	2		1015116	1					
ANR	1015449	ExpressionStatement	* outp ++ = ( value + ( div >> 1 ) ) / div	1506:12:44562:44592	1015116	11	True				
ANR	1015450	AssignmentExpression	* outp ++ = ( value + ( div >> 1 ) ) / div		1015116	0		=			
ANR	1015451	UnaryOperationExpression	* outp ++		1015116	0					
ANR	1015452	UnaryOperator	*		1015116	0					
ANR	1015453	PostIncDecOperationExpression	outp ++		1015116	1					
ANR	1015454	Identifier	outp		1015116	0					
ANR	1015455	IncDec	++		1015116	1					
ANR	1015456	MultiplicativeExpression	( value + ( div >> 1 ) ) / div		1015116	1		/			
ANR	1015457	AdditiveExpression	value + ( div >> 1 )		1015116	0		+			
ANR	1015458	Identifier	value		1015116	0					
ANR	1015459	ShiftExpression	div >> 1		1015116	1		>>			
ANR	1015460	Identifier	div		1015116	0					
ANR	1015461	PrimaryExpression	1		1015116	1					
ANR	1015462	Identifier	div		1015116	1					
ANR	1015463	ReturnType	static void		1015116	1					
ANR	1015464	Identifier	down_core24		1015116	2					
ANR	1015465	ParameterList	"gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span"		1015116	3					
ANR	1015466	Parameter	gx_downscaler_t * ds	1432:24:42548:42566	1015116	0	True				
ANR	1015467	ParameterType	gx_downscaler_t *		1015116	0					
ANR	1015468	Identifier	ds		1015116	1					
ANR	1015469	Parameter	byte * outp	1433:24:42593:42613	1015116	1	True				
ANR	1015470	ParameterType	byte *		1015116	0					
ANR	1015471	Identifier	outp		1015116	1					
ANR	1015472	Parameter	byte * in_buffer	1434:24:42640:42665	1015116	2	True				
ANR	1015473	ParameterType	byte *		1015116	0					
ANR	1015474	Identifier	in_buffer		1015116	1					
ANR	1015475	Parameter	int row	1435:24:42692:42711	1015116	3	True				
ANR	1015476	ParameterType	int		1015116	0					
ANR	1015477	Identifier	row		1015116	1					
ANR	1015478	Parameter	int plane	1436:24:42738:42759	1015116	4	True				
ANR	1015479	ParameterType	int		1015116	0					
ANR	1015480	Identifier	plane		1015116	1					
ANR	1015481	Parameter	int span	1437:24:42786:42806	1015116	5	True				
ANR	1015482	ParameterType	int		1015116	0					
ANR	1015483	Identifier	span		1015116	1					
ANR	1015484	CFGEntryNode	ENTRY		1015116		True				
ANR	1015485	CFGExitNode	EXIT		1015116		True				
ANR	1015486	Symbol	plane		1015116						
ANR	1015487	Symbol	xx		1015116						
ANR	1015488	Symbol	awidth		1015116						
ANR	1015489	Symbol	in_buffer		1015116						
ANR	1015490	Symbol	ds -> awidth		1015116						
ANR	1015491	Symbol	back		1015116						
ANR	1015492	Symbol	inp		1015116						
ANR	1015493	Symbol	* inp		1015116						
ANR	1015494	Symbol	ds		1015116						
ANR	1015495	Symbol	div		1015116						
ANR	1015496	Symbol	outp		1015116						
ANR	1015497	Symbol	pad_white		1015116						
ANR	1015498	Symbol	* ds		1015116						
ANR	1015499	Symbol	ds -> factor		1015116						
ANR	1015500	Symbol	x		1015116						
ANR	1015501	Symbol	width		1015116						
ANR	1015502	Symbol	* outp ++		1015116						
ANR	1015503	Symbol	y		1015116						
ANR	1015504	Symbol	back2		1015116						
ANR	1015505	Symbol	ds -> width		1015116						
ANR	1015506	Symbol	row		1015116						
ANR	1015507	Symbol	factor		1015116						
ANR	1015508	Symbol	value		1015116						
ANR	1015509	Symbol	span		1015116						
ANR	1015510	Function	down_core32	1513:0:44661:47110							
ANR	1015511	FunctionDef	"down_core32 (gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span)"		1015510	0					
ANR	1015512	CompoundStatement		1519:0:44946:47110	1015510	0					
ANR	1015513	IdentifierDeclStatement	"int x , xx , y , value ;"	1520:4:44952:44973	1015510	0	True				
ANR	1015514	IdentifierDecl	x		1015510	0					
ANR	1015515	IdentifierDeclType	int		1015510	0					
ANR	1015516	Identifier	x		1015510	1					
ANR	1015517	IdentifierDecl	xx		1015510	1					
ANR	1015518	IdentifierDeclType	int		1015510	0					
ANR	1015519	Identifier	xx		1015510	1					
ANR	1015520	IdentifierDecl	y		1015510	2					
ANR	1015521	IdentifierDeclType	int		1015510	0					
ANR	1015522	Identifier	y		1015510	1					
ANR	1015523	IdentifierDecl	value		1015510	3					
ANR	1015524	IdentifierDeclType	int		1015510	0					
ANR	1015525	Identifier	value		1015510	1					
ANR	1015526	IdentifierDeclStatement	int pad_white ;	1521:4:44979:44994	1015510	1	True				
ANR	1015527	IdentifierDecl	pad_white		1015510	0					
ANR	1015528	IdentifierDeclType	int		1015510	0					
ANR	1015529	Identifier	pad_white		1015510	1					
ANR	1015530	IdentifierDeclStatement	byte * inp ;	1522:4:45000:45009	1015510	2	True				
ANR	1015531	IdentifierDecl	* inp		1015510	0					
ANR	1015532	IdentifierDeclType	byte *		1015510	0					
ANR	1015533	Identifier	inp		1015510	1					
ANR	1015534	IdentifierDeclStatement	int width = ds -> width ;	1523:4:45015:45039	1015510	3	True				
ANR	1015535	IdentifierDecl	width = ds -> width		1015510	0					
ANR	1015536	IdentifierDeclType	int		1015510	0					
ANR	1015537	Identifier	width		1015510	1					
ANR	1015538	AssignmentExpression	width = ds -> width		1015510	2		=			
ANR	1015539	Identifier	width		1015510	0					
ANR	1015540	PtrMemberAccess	ds -> width		1015510	1					
ANR	1015541	Identifier	ds		1015510	0					
ANR	1015542	Identifier	width		1015510	1					
ANR	1015543	IdentifierDeclStatement	int awidth = ds -> awidth ;	1524:4:45045:45070	1015510	4	True				
ANR	1015544	IdentifierDecl	awidth = ds -> awidth		1015510	0					
ANR	1015545	IdentifierDeclType	int		1015510	0					
ANR	1015546	Identifier	awidth		1015510	1					
ANR	1015547	AssignmentExpression	awidth = ds -> awidth		1015510	2		=			
ANR	1015548	Identifier	awidth		1015510	0					
ANR	1015549	PtrMemberAccess	ds -> awidth		1015510	1					
ANR	1015550	Identifier	ds		1015510	0					
ANR	1015551	Identifier	awidth		1015510	1					
ANR	1015552	IdentifierDeclStatement	int factor = ds -> factor ;	1525:4:45076:45101	1015510	5	True				
ANR	1015553	IdentifierDecl	factor = ds -> factor		1015510	0					
ANR	1015554	IdentifierDeclType	int		1015510	0					
ANR	1015555	Identifier	factor		1015510	1					
ANR	1015556	AssignmentExpression	factor = ds -> factor		1015510	2		=			
ANR	1015557	Identifier	factor		1015510	0					
ANR	1015558	PtrMemberAccess	ds -> factor		1015510	1					
ANR	1015559	Identifier	ds		1015510	0					
ANR	1015560	Identifier	factor		1015510	1					
ANR	1015561	IdentifierDeclStatement	int div = factor * factor ;	1526:4:45107:45135	1015510	6	True				
ANR	1015562	IdentifierDecl	div = factor * factor		1015510	0					
ANR	1015563	IdentifierDeclType	int		1015510	0					
ANR	1015564	Identifier	div		1015510	1					
ANR	1015565	AssignmentExpression	div = factor * factor		1015510	2		=			
ANR	1015566	Identifier	div		1015510	0					
ANR	1015567	MultiplicativeExpression	factor * factor		1015510	1		*			
ANR	1015568	Identifier	factor		1015510	0					
ANR	1015569	Identifier	factor		1015510	1					
ANR	1015570	ExpressionStatement	pad_white = ( awidth - width ) * factor * 4	1528:4:45142:45183	1015510	7	True				
ANR	1015571	AssignmentExpression	pad_white = ( awidth - width ) * factor * 4		1015510	0		=			
ANR	1015572	Identifier	pad_white		1015510	0					
ANR	1015573	MultiplicativeExpression	( awidth - width ) * factor * 4		1015510	1		*			
ANR	1015574	AdditiveExpression	awidth - width		1015510	0		-			
ANR	1015575	Identifier	awidth		1015510	0					
ANR	1015576	Identifier	width		1015510	1					
ANR	1015577	MultiplicativeExpression	factor * 4		1015510	1		*			
ANR	1015578	Identifier	factor		1015510	0					
ANR	1015579	PrimaryExpression	4		1015510	1					
ANR	1015580	IfStatement	if ( pad_white < 0 )		1015510	8					
ANR	1015581	Condition	pad_white < 0	1529:8:45193:45205	1015510	0	True				
ANR	1015582	RelationalExpression	pad_white < 0		1015510	0		<			
ANR	1015583	Identifier	pad_white		1015510	0					
ANR	1015584	PrimaryExpression	0		1015510	1					
ANR	1015585	ExpressionStatement	pad_white = 0	1530:8:45216:45229	1015510	1	True				
ANR	1015586	AssignmentExpression	pad_white = 0		1015510	0		=			
ANR	1015587	Identifier	pad_white		1015510	0					
ANR	1015588	PrimaryExpression	0		1015510	1					
ANR	1015589	IfStatement	if ( pad_white )		1015510	9					
ANR	1015590	Condition	pad_white	1532:8:45240:45248	1015510	0	True				
ANR	1015591	Identifier	pad_white		1015510	0					
ANR	1015592	CompoundStatement		15:4:308:308	1015510	1					
ANR	1015593	ExpressionStatement	inp = in_buffer + width * factor * 4	1534:8:45265:45297	1015510	0	True				
ANR	1015594	AssignmentExpression	inp = in_buffer + width * factor * 4		1015510	0		=			
ANR	1015595	Identifier	inp		1015510	0					
ANR	1015596	AdditiveExpression	in_buffer + width * factor * 4		1015510	1		+			
ANR	1015597	Identifier	in_buffer		1015510	0					
ANR	1015598	MultiplicativeExpression	width * factor * 4		1015510	1		*			
ANR	1015599	Identifier	width		1015510	0					
ANR	1015600	MultiplicativeExpression	factor * 4		1015510	1		*			
ANR	1015601	Identifier	factor		1015510	0					
ANR	1015602	PrimaryExpression	4		1015510	1					
ANR	1015603	ForStatement	for ( y = factor ; y > 0 ; y -- )		1015510	1					
ANR	1015604	ForInit	y = factor ;	1535:13:45312:45322	1015510	0	True				
ANR	1015605	AssignmentExpression	y = factor		1015510	0		=			
ANR	1015606	Identifier	y		1015510	0					
ANR	1015607	Identifier	factor		1015510	1					
ANR	1015608	Condition	y > 0	1535:25:45324:45328	1015510	1	True				
ANR	1015609	RelationalExpression	y > 0		1015510	0		>			
ANR	1015610	Identifier	y		1015510	0					
ANR	1015611	PrimaryExpression	0		1015510	1					
ANR	1015612	PostIncDecOperationExpression	y --	1535:32:45331:45333	1015510	2	True				
ANR	1015613	Identifier	y		1015510	0					
ANR	1015614	IncDec	--		1015510	1					
ANR	1015615	CompoundStatement		18:8:397:397	1015510	3					
ANR	1015616	ExpressionStatement	"memset ( inp , 0xFF , pad_white )"	1537:12:45358:45386	1015510	0	True				
ANR	1015617	CallExpression	"memset ( inp , 0xFF , pad_white )"		1015510	0					
ANR	1015618	Callee	memset		1015510	0					
ANR	1015619	Identifier	memset		1015510	0					
ANR	1015620	ArgumentList	inp		1015510	1					
ANR	1015621	Argument	inp		1015510	0					
ANR	1015622	Identifier	inp		1015510	0					
ANR	1015623	Argument	0xFF		1015510	1					
ANR	1015624	PrimaryExpression	0xFF		1015510	0					
ANR	1015625	Argument	pad_white		1015510	2					
ANR	1015626	Identifier	pad_white		1015510	0					
ANR	1015627	ExpressionStatement	inp += span	1538:12:45400:45411	1015510	1	True				
ANR	1015628	AssignmentExpression	inp += span		1015510	0		+=			
ANR	1015629	Identifier	inp		1015510	0					
ANR	1015630	Identifier	span		1015510	1					
ANR	1015631	ExpressionStatement	inp = in_buffer	1542:4:45434:45449	1015510	10	True				
ANR	1015632	AssignmentExpression	inp = in_buffer		1015510	0		=			
ANR	1015633	Identifier	inp		1015510	0					
ANR	1015634	Identifier	in_buffer		1015510	1					
ANR	1015635	CompoundStatement		28:8:618:650	1015510	11					
ANR	1015636	IdentifierDeclStatement	const int back = span * factor - 4 ;	1545:8:45520:45555	1015510	0	True				
ANR	1015637	IdentifierDecl	back = span * factor - 4		1015510	0					
ANR	1015638	IdentifierDeclType	const int		1015510	0					
ANR	1015639	Identifier	back		1015510	1					
ANR	1015640	AssignmentExpression	back = span * factor - 4		1015510	2		=			
ANR	1015641	Identifier	back		1015510	0					
ANR	1015642	AdditiveExpression	span * factor - 4		1015510	1		-			
ANR	1015643	MultiplicativeExpression	span * factor		1015510	0		*			
ANR	1015644	Identifier	span		1015510	0					
ANR	1015645	Identifier	factor		1015510	1					
ANR	1015646	PrimaryExpression	4		1015510	1					
ANR	1015647	IdentifierDeclStatement	const int back2 = factor * 4 - 1 ;	1546:8:45565:45597	1015510	1	True				
ANR	1015648	IdentifierDecl	back2 = factor * 4 - 1		1015510	0					
ANR	1015649	IdentifierDeclType	const int		1015510	0					
ANR	1015650	Identifier	back2		1015510	1					
ANR	1015651	AssignmentExpression	back2 = factor * 4 - 1		1015510	2		=			
ANR	1015652	Identifier	back2		1015510	0					
ANR	1015653	AdditiveExpression	factor * 4 - 1		1015510	1		-			
ANR	1015654	MultiplicativeExpression	factor * 4		1015510	0		*			
ANR	1015655	Identifier	factor		1015510	0					
ANR	1015656	PrimaryExpression	4		1015510	1					
ANR	1015657	PrimaryExpression	1		1015510	1					
ANR	1015658	ForStatement	for ( x = awidth ; x > 0 ; x -- )		1015510	2					
ANR	1015659	ForInit	x = awidth ;	1547:13:45612:45622	1015510	0	True				
ANR	1015660	AssignmentExpression	x = awidth		1015510	0		=			
ANR	1015661	Identifier	x		1015510	0					
ANR	1015662	Identifier	awidth		1015510	1					
ANR	1015663	Condition	x > 0	1547:25:45624:45628	1015510	1	True				
ANR	1015664	RelationalExpression	x > 0		1015510	0		>			
ANR	1015665	Identifier	x		1015510	0					
ANR	1015666	PrimaryExpression	0		1015510	1					
ANR	1015667	PostIncDecOperationExpression	x --	1547:32:45631:45633	1015510	2	True				
ANR	1015668	Identifier	x		1015510	0					
ANR	1015669	IncDec	--		1015510	1					
ANR	1015670	CompoundStatement		30:8:697:697	1015510	3					
ANR	1015671	ExpressionStatement	value = 0	1550:12:45678:45687	1015510	0	True				
ANR	1015672	AssignmentExpression	value = 0		1015510	0		=			
ANR	1015673	Identifier	value		1015510	0					
ANR	1015674	PrimaryExpression	0		1015510	1					
ANR	1015675	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1015510	1					
ANR	1015676	ForInit	xx = factor ;	1551:17:45706:45717	1015510	0	True				
ANR	1015677	AssignmentExpression	xx = factor		1015510	0		=			
ANR	1015678	Identifier	xx		1015510	0					
ANR	1015679	Identifier	factor		1015510	1					
ANR	1015680	Condition	xx > 0	1551:30:45719:45724	1015510	1	True				
ANR	1015681	RelationalExpression	xx > 0		1015510	0		>			
ANR	1015682	Identifier	xx		1015510	0					
ANR	1015683	PrimaryExpression	0		1015510	1					
ANR	1015684	PostIncDecOperationExpression	xx --	1551:38:45727:45730	1015510	2	True				
ANR	1015685	Identifier	xx		1015510	0					
ANR	1015686	IncDec	--		1015510	1					
ANR	1015687	CompoundStatement		34:12:798:798	1015510	3					
ANR	1015688	ForStatement	for ( y = factor ; y > 0 ; y -- )		1015510	0					
ANR	1015689	ForInit	y = factor ;	1553:21:45768:45778	1015510	0	True				
ANR	1015690	AssignmentExpression	y = factor		1015510	0		=			
ANR	1015691	Identifier	y		1015510	0					
ANR	1015692	Identifier	factor		1015510	1					
ANR	1015693	Condition	y > 0	1553:33:45780:45784	1015510	1	True				
ANR	1015694	RelationalExpression	y > 0		1015510	0		>			
ANR	1015695	Identifier	y		1015510	0					
ANR	1015696	PrimaryExpression	0		1015510	1					
ANR	1015697	PostIncDecOperationExpression	y --	1553:40:45787:45789	1015510	2	True				
ANR	1015698	Identifier	y		1015510	0					
ANR	1015699	IncDec	--		1015510	1					
ANR	1015700	CompoundStatement		36:16:861:861	1015510	3					
ANR	1015701	ExpressionStatement	value += * inp	1555:20:45830:45843	1015510	0	True				
ANR	1015702	AssignmentExpression	value += * inp		1015510	0		+=			
ANR	1015703	Identifier	value		1015510	0					
ANR	1015704	UnaryOperationExpression	* inp		1015510	1					
ANR	1015705	UnaryOperator	*		1015510	0					
ANR	1015706	Identifier	inp		1015510	1					
ANR	1015707	ExpressionStatement	inp += span	1556:20:45865:45876	1015510	1	True				
ANR	1015708	AssignmentExpression	inp += span		1015510	0		+=			
ANR	1015709	Identifier	inp		1015510	0					
ANR	1015710	Identifier	span		1015510	1					
ANR	1015711	ExpressionStatement	inp -= back	1558:16:45912:45923	1015510	1	True				
ANR	1015712	AssignmentExpression	inp -= back		1015510	0		-=			
ANR	1015713	Identifier	inp		1015510	0					
ANR	1015714	Identifier	back		1015510	1					
ANR	1015715	ExpressionStatement	inp -= back2	1560:12:45951:45963	1015510	2	True				
ANR	1015716	AssignmentExpression	inp -= back2		1015510	0		-=			
ANR	1015717	Identifier	inp		1015510	0					
ANR	1015718	Identifier	back2		1015510	1					
ANR	1015719	ExpressionStatement	* outp ++ = ( value + ( div >> 1 ) ) / div	1561:12:45977:46007	1015510	3	True				
ANR	1015720	AssignmentExpression	* outp ++ = ( value + ( div >> 1 ) ) / div		1015510	0		=			
ANR	1015721	UnaryOperationExpression	* outp ++		1015510	0					
ANR	1015722	UnaryOperator	*		1015510	0					
ANR	1015723	PostIncDecOperationExpression	outp ++		1015510	1					
ANR	1015724	Identifier	outp		1015510	0					
ANR	1015725	IncDec	++		1015510	1					
ANR	1015726	MultiplicativeExpression	( value + ( div >> 1 ) ) / div		1015510	1		/			
ANR	1015727	AdditiveExpression	value + ( div >> 1 )		1015510	0		+			
ANR	1015728	Identifier	value		1015510	0					
ANR	1015729	ShiftExpression	div >> 1		1015510	1		>>			
ANR	1015730	Identifier	div		1015510	0					
ANR	1015731	PrimaryExpression	1		1015510	1					
ANR	1015732	Identifier	div		1015510	1					
ANR	1015733	ExpressionStatement	value = 0	1563:12:46041:46050	1015510	4	True				
ANR	1015734	AssignmentExpression	value = 0		1015510	0		=			
ANR	1015735	Identifier	value		1015510	0					
ANR	1015736	PrimaryExpression	0		1015510	1					
ANR	1015737	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1015510	5					
ANR	1015738	ForInit	xx = factor ;	1564:17:46069:46080	1015510	0	True				
ANR	1015739	AssignmentExpression	xx = factor		1015510	0		=			
ANR	1015740	Identifier	xx		1015510	0					
ANR	1015741	Identifier	factor		1015510	1					
ANR	1015742	Condition	xx > 0	1564:30:46082:46087	1015510	1	True				
ANR	1015743	RelationalExpression	xx > 0		1015510	0		>			
ANR	1015744	Identifier	xx		1015510	0					
ANR	1015745	PrimaryExpression	0		1015510	1					
ANR	1015746	PostIncDecOperationExpression	xx --	1564:38:46090:46093	1015510	2	True				
ANR	1015747	Identifier	xx		1015510	0					
ANR	1015748	IncDec	--		1015510	1					
ANR	1015749	CompoundStatement		47:12:1161:1161	1015510	3					
ANR	1015750	ForStatement	for ( y = factor ; y > 0 ; y -- )		1015510	0					
ANR	1015751	ForInit	y = factor ;	1566:21:46131:46141	1015510	0	True				
ANR	1015752	AssignmentExpression	y = factor		1015510	0		=			
ANR	1015753	Identifier	y		1015510	0					
ANR	1015754	Identifier	factor		1015510	1					
ANR	1015755	Condition	y > 0	1566:33:46143:46147	1015510	1	True				
ANR	1015756	RelationalExpression	y > 0		1015510	0		>			
ANR	1015757	Identifier	y		1015510	0					
ANR	1015758	PrimaryExpression	0		1015510	1					
ANR	1015759	PostIncDecOperationExpression	y --	1566:40:46150:46152	1015510	2	True				
ANR	1015760	Identifier	y		1015510	0					
ANR	1015761	IncDec	--		1015510	1					
ANR	1015762	CompoundStatement		49:16:1224:1224	1015510	3					
ANR	1015763	ExpressionStatement	value += * inp	1568:20:46193:46206	1015510	0	True				
ANR	1015764	AssignmentExpression	value += * inp		1015510	0		+=			
ANR	1015765	Identifier	value		1015510	0					
ANR	1015766	UnaryOperationExpression	* inp		1015510	1					
ANR	1015767	UnaryOperator	*		1015510	0					
ANR	1015768	Identifier	inp		1015510	1					
ANR	1015769	ExpressionStatement	inp += span	1569:20:46228:46239	1015510	1	True				
ANR	1015770	AssignmentExpression	inp += span		1015510	0		+=			
ANR	1015771	Identifier	inp		1015510	0					
ANR	1015772	Identifier	span		1015510	1					
ANR	1015773	ExpressionStatement	inp -= back	1571:16:46275:46286	1015510	1	True				
ANR	1015774	AssignmentExpression	inp -= back		1015510	0		-=			
ANR	1015775	Identifier	inp		1015510	0					
ANR	1015776	Identifier	back		1015510	1					
ANR	1015777	ExpressionStatement	inp -= back2	1573:12:46314:46326	1015510	6	True				
ANR	1015778	AssignmentExpression	inp -= back2		1015510	0		-=			
ANR	1015779	Identifier	inp		1015510	0					
ANR	1015780	Identifier	back2		1015510	1					
ANR	1015781	ExpressionStatement	* outp ++ = ( value + ( div >> 1 ) ) / div	1574:12:46340:46370	1015510	7	True				
ANR	1015782	AssignmentExpression	* outp ++ = ( value + ( div >> 1 ) ) / div		1015510	0		=			
ANR	1015783	UnaryOperationExpression	* outp ++		1015510	0					
ANR	1015784	UnaryOperator	*		1015510	0					
ANR	1015785	PostIncDecOperationExpression	outp ++		1015510	1					
ANR	1015786	Identifier	outp		1015510	0					
ANR	1015787	IncDec	++		1015510	1					
ANR	1015788	MultiplicativeExpression	( value + ( div >> 1 ) ) / div		1015510	1		/			
ANR	1015789	AdditiveExpression	value + ( div >> 1 )		1015510	0		+			
ANR	1015790	Identifier	value		1015510	0					
ANR	1015791	ShiftExpression	div >> 1		1015510	1		>>			
ANR	1015792	Identifier	div		1015510	0					
ANR	1015793	PrimaryExpression	1		1015510	1					
ANR	1015794	Identifier	div		1015510	1					
ANR	1015795	ExpressionStatement	value = 0	1576:12:46404:46413	1015510	8	True				
ANR	1015796	AssignmentExpression	value = 0		1015510	0		=			
ANR	1015797	Identifier	value		1015510	0					
ANR	1015798	PrimaryExpression	0		1015510	1					
ANR	1015799	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1015510	9					
ANR	1015800	ForInit	xx = factor ;	1577:17:46432:46443	1015510	0	True				
ANR	1015801	AssignmentExpression	xx = factor		1015510	0		=			
ANR	1015802	Identifier	xx		1015510	0					
ANR	1015803	Identifier	factor		1015510	1					
ANR	1015804	Condition	xx > 0	1577:30:46445:46450	1015510	1	True				
ANR	1015805	RelationalExpression	xx > 0		1015510	0		>			
ANR	1015806	Identifier	xx		1015510	0					
ANR	1015807	PrimaryExpression	0		1015510	1					
ANR	1015808	PostIncDecOperationExpression	xx --	1577:38:46453:46456	1015510	2	True				
ANR	1015809	Identifier	xx		1015510	0					
ANR	1015810	IncDec	--		1015510	1					
ANR	1015811	CompoundStatement		60:12:1524:1524	1015510	3					
ANR	1015812	ForStatement	for ( y = factor ; y > 0 ; y -- )		1015510	0					
ANR	1015813	ForInit	y = factor ;	1579:21:46494:46504	1015510	0	True				
ANR	1015814	AssignmentExpression	y = factor		1015510	0		=			
ANR	1015815	Identifier	y		1015510	0					
ANR	1015816	Identifier	factor		1015510	1					
ANR	1015817	Condition	y > 0	1579:33:46506:46510	1015510	1	True				
ANR	1015818	RelationalExpression	y > 0		1015510	0		>			
ANR	1015819	Identifier	y		1015510	0					
ANR	1015820	PrimaryExpression	0		1015510	1					
ANR	1015821	PostIncDecOperationExpression	y --	1579:40:46513:46515	1015510	2	True				
ANR	1015822	Identifier	y		1015510	0					
ANR	1015823	IncDec	--		1015510	1					
ANR	1015824	CompoundStatement		62:16:1587:1587	1015510	3					
ANR	1015825	ExpressionStatement	value += * inp	1581:20:46556:46569	1015510	0	True				
ANR	1015826	AssignmentExpression	value += * inp		1015510	0		+=			
ANR	1015827	Identifier	value		1015510	0					
ANR	1015828	UnaryOperationExpression	* inp		1015510	1					
ANR	1015829	UnaryOperator	*		1015510	0					
ANR	1015830	Identifier	inp		1015510	1					
ANR	1015831	ExpressionStatement	inp += span	1582:20:46591:46602	1015510	1	True				
ANR	1015832	AssignmentExpression	inp += span		1015510	0		+=			
ANR	1015833	Identifier	inp		1015510	0					
ANR	1015834	Identifier	span		1015510	1					
ANR	1015835	ExpressionStatement	inp -= back	1584:16:46638:46649	1015510	1	True				
ANR	1015836	AssignmentExpression	inp -= back		1015510	0		-=			
ANR	1015837	Identifier	inp		1015510	0					
ANR	1015838	Identifier	back		1015510	1					
ANR	1015839	ExpressionStatement	inp -= back2	1586:12:46677:46689	1015510	10	True				
ANR	1015840	AssignmentExpression	inp -= back2		1015510	0		-=			
ANR	1015841	Identifier	inp		1015510	0					
ANR	1015842	Identifier	back2		1015510	1					
ANR	1015843	ExpressionStatement	* outp ++ = ( value + ( div >> 1 ) ) / div	1587:12:46703:46733	1015510	11	True				
ANR	1015844	AssignmentExpression	* outp ++ = ( value + ( div >> 1 ) ) / div		1015510	0		=			
ANR	1015845	UnaryOperationExpression	* outp ++		1015510	0					
ANR	1015846	UnaryOperator	*		1015510	0					
ANR	1015847	PostIncDecOperationExpression	outp ++		1015510	1					
ANR	1015848	Identifier	outp		1015510	0					
ANR	1015849	IncDec	++		1015510	1					
ANR	1015850	MultiplicativeExpression	( value + ( div >> 1 ) ) / div		1015510	1		/			
ANR	1015851	AdditiveExpression	value + ( div >> 1 )		1015510	0		+			
ANR	1015852	Identifier	value		1015510	0					
ANR	1015853	ShiftExpression	div >> 1		1015510	1		>>			
ANR	1015854	Identifier	div		1015510	0					
ANR	1015855	PrimaryExpression	1		1015510	1					
ANR	1015856	Identifier	div		1015510	1					
ANR	1015857	ExpressionStatement	value = 0	1589:12:46767:46776	1015510	12	True				
ANR	1015858	AssignmentExpression	value = 0		1015510	0		=			
ANR	1015859	Identifier	value		1015510	0					
ANR	1015860	PrimaryExpression	0		1015510	1					
ANR	1015861	ForStatement	for ( xx = factor ; xx > 0 ; xx -- )		1015510	13					
ANR	1015862	ForInit	xx = factor ;	1590:17:46795:46806	1015510	0	True				
ANR	1015863	AssignmentExpression	xx = factor		1015510	0		=			
ANR	1015864	Identifier	xx		1015510	0					
ANR	1015865	Identifier	factor		1015510	1					
ANR	1015866	Condition	xx > 0	1590:30:46808:46813	1015510	1	True				
ANR	1015867	RelationalExpression	xx > 0		1015510	0		>			
ANR	1015868	Identifier	xx		1015510	0					
ANR	1015869	PrimaryExpression	0		1015510	1					
ANR	1015870	PostIncDecOperationExpression	xx --	1590:38:46816:46819	1015510	2	True				
ANR	1015871	Identifier	xx		1015510	0					
ANR	1015872	IncDec	--		1015510	1					
ANR	1015873	CompoundStatement		73:12:1887:1887	1015510	3					
ANR	1015874	ForStatement	for ( y = factor ; y > 0 ; y -- )		1015510	0					
ANR	1015875	ForInit	y = factor ;	1592:21:46857:46867	1015510	0	True				
ANR	1015876	AssignmentExpression	y = factor		1015510	0		=			
ANR	1015877	Identifier	y		1015510	0					
ANR	1015878	Identifier	factor		1015510	1					
ANR	1015879	Condition	y > 0	1592:33:46869:46873	1015510	1	True				
ANR	1015880	RelationalExpression	y > 0		1015510	0		>			
ANR	1015881	Identifier	y		1015510	0					
ANR	1015882	PrimaryExpression	0		1015510	1					
ANR	1015883	PostIncDecOperationExpression	y --	1592:40:46876:46878	1015510	2	True				
ANR	1015884	Identifier	y		1015510	0					
ANR	1015885	IncDec	--		1015510	1					
ANR	1015886	CompoundStatement		75:16:1950:1950	1015510	3					
ANR	1015887	ExpressionStatement	value += * inp	1594:20:46919:46932	1015510	0	True				
ANR	1015888	AssignmentExpression	value += * inp		1015510	0		+=			
ANR	1015889	Identifier	value		1015510	0					
ANR	1015890	UnaryOperationExpression	* inp		1015510	1					
ANR	1015891	UnaryOperator	*		1015510	0					
ANR	1015892	Identifier	inp		1015510	1					
ANR	1015893	ExpressionStatement	inp += span	1595:20:46954:46965	1015510	1	True				
ANR	1015894	AssignmentExpression	inp += span		1015510	0		+=			
ANR	1015895	Identifier	inp		1015510	0					
ANR	1015896	Identifier	span		1015510	1					
ANR	1015897	ExpressionStatement	inp -= back	1597:16:47001:47012	1015510	1	True				
ANR	1015898	AssignmentExpression	inp -= back		1015510	0		-=			
ANR	1015899	Identifier	inp		1015510	0					
ANR	1015900	Identifier	back		1015510	1					
ANR	1015901	ExpressionStatement	inp -= 3	1599:12:47040:47048	1015510	14	True				
ANR	1015902	AssignmentExpression	inp -= 3		1015510	0		-=			
ANR	1015903	Identifier	inp		1015510	0					
ANR	1015904	PrimaryExpression	3		1015510	1					
ANR	1015905	ExpressionStatement	* outp ++ = ( value + ( div >> 1 ) ) / div	1600:12:47062:47092	1015510	15	True				
ANR	1015906	AssignmentExpression	* outp ++ = ( value + ( div >> 1 ) ) / div		1015510	0		=			
ANR	1015907	UnaryOperationExpression	* outp ++		1015510	0					
ANR	1015908	UnaryOperator	*		1015510	0					
ANR	1015909	PostIncDecOperationExpression	outp ++		1015510	1					
ANR	1015910	Identifier	outp		1015510	0					
ANR	1015911	IncDec	++		1015510	1					
ANR	1015912	MultiplicativeExpression	( value + ( div >> 1 ) ) / div		1015510	1		/			
ANR	1015913	AdditiveExpression	value + ( div >> 1 )		1015510	0		+			
ANR	1015914	Identifier	value		1015510	0					
ANR	1015915	ShiftExpression	div >> 1		1015510	1		>>			
ANR	1015916	Identifier	div		1015510	0					
ANR	1015917	PrimaryExpression	1		1015510	1					
ANR	1015918	Identifier	div		1015510	1					
ANR	1015919	ReturnType	static void		1015510	1					
ANR	1015920	Identifier	down_core32		1015510	2					
ANR	1015921	ParameterList	"gx_downscaler_t * ds , byte * outp , byte * in_buffer , int row , int plane , int span"		1015510	3					
ANR	1015922	Parameter	gx_downscaler_t * ds	1513:24:44685:44703	1015510	0	True				
ANR	1015923	ParameterType	gx_downscaler_t *		1015510	0					
ANR	1015924	Identifier	ds		1015510	1					
ANR	1015925	Parameter	byte * outp	1514:24:44730:44750	1015510	1	True				
ANR	1015926	ParameterType	byte *		1015510	0					
ANR	1015927	Identifier	outp		1015510	1					
ANR	1015928	Parameter	byte * in_buffer	1515:24:44777:44802	1015510	2	True				
ANR	1015929	ParameterType	byte *		1015510	0					
ANR	1015930	Identifier	in_buffer		1015510	1					
ANR	1015931	Parameter	int row	1516:24:44829:44848	1015510	3	True				
ANR	1015932	ParameterType	int		1015510	0					
ANR	1015933	Identifier	row		1015510	1					
ANR	1015934	Parameter	int plane	1517:24:44875:44896	1015510	4	True				
ANR	1015935	ParameterType	int		1015510	0					
ANR	1015936	Identifier	plane		1015510	1					
ANR	1015937	Parameter	int span	1518:24:44923:44943	1015510	5	True				
ANR	1015938	ParameterType	int		1015510	0					
ANR	1015939	Identifier	span		1015510	1					
ANR	1015940	CFGEntryNode	ENTRY		1015510		True				
ANR	1015941	CFGExitNode	EXIT		1015510		True				
ANR	1015942	Symbol	plane		1015510						
ANR	1015943	Symbol	xx		1015510						
ANR	1015944	Symbol	awidth		1015510						
ANR	1015945	Symbol	in_buffer		1015510						
ANR	1015946	Symbol	ds -> awidth		1015510						
ANR	1015947	Symbol	back		1015510						
ANR	1015948	Symbol	inp		1015510						
ANR	1015949	Symbol	* inp		1015510						
ANR	1015950	Symbol	ds		1015510						
ANR	1015951	Symbol	div		1015510						
ANR	1015952	Symbol	outp		1015510						
ANR	1015953	Symbol	pad_white		1015510						
ANR	1015954	Symbol	* ds		1015510						
ANR	1015955	Symbol	ds -> factor		1015510						
ANR	1015956	Symbol	x		1015510						
ANR	1015957	Symbol	width		1015510						
ANR	1015958	Symbol	* outp ++		1015510						
ANR	1015959	Symbol	y		1015510						
ANR	1015960	Symbol	back2		1015510						
ANR	1015961	Symbol	ds -> width		1015510						
ANR	1015962	Symbol	row		1015510						
ANR	1015963	Symbol	factor		1015510						
ANR	1015964	Symbol	value		1015510						
ANR	1015965	Symbol	span		1015510						
ANR	1015966	Function	decode_factor	1605:0:47113:47320							
ANR	1015967	FunctionDef	"decode_factor (int factor , int * up , int * down)"		1015966	0					
ANR	1015968	CompoundStatement		1606:0:47171:47320	1015966	0					
ANR	1015969	IfStatement	if ( factor == 32 )		1015966	0					
ANR	1015970	Condition	factor == 32	1607:8:47181:47192	1015966	0	True				
ANR	1015971	EqualityExpression	factor == 32		1015966	0		==			
ANR	1015972	Identifier	factor		1015966	0					
ANR	1015973	PrimaryExpression	32		1015966	1					
ANR	1015974	ExpressionStatement	"* down = 3 , * up = 2"	1608:8:47203:47221	1015966	1	True				
ANR	1015975	Expression	"* down = 3 , * up = 2"		1015966	0					
ANR	1015976	AssignmentExpression	* down = 3		1015966	0		=			
ANR	1015977	UnaryOperationExpression	* down		1015966	0					
ANR	1015978	UnaryOperator	*		1015966	0					
ANR	1015979	Identifier	down		1015966	1					
ANR	1015980	PrimaryExpression	3		1015966	1					
ANR	1015981	AssignmentExpression	* up = 2		1015966	1		=			
ANR	1015982	UnaryOperationExpression	* up		1015966	0					
ANR	1015983	UnaryOperator	*		1015966	0					
ANR	1015984	Identifier	up		1015966	1					
ANR	1015985	PrimaryExpression	2		1015966	1					
ANR	1015986	ElseStatement	else		1015966	0					
ANR	1015987	IfStatement	if ( factor == 34 )		1015966	0					
ANR	1015988	Condition	factor == 34	1609:13:47236:47247	1015966	0	True				
ANR	1015989	EqualityExpression	factor == 34		1015966	0		==			
ANR	1015990	Identifier	factor		1015966	0					
ANR	1015991	PrimaryExpression	34		1015966	1					
ANR	1015992	ExpressionStatement	"* down = 3 , * up = 4"	1610:8:47258:47276	1015966	1	True				
ANR	1015993	Expression	"* down = 3 , * up = 4"		1015966	0					
ANR	1015994	AssignmentExpression	* down = 3		1015966	0		=			
ANR	1015995	UnaryOperationExpression	* down		1015966	0					
ANR	1015996	UnaryOperator	*		1015966	0					
ANR	1015997	Identifier	down		1015966	1					
ANR	1015998	PrimaryExpression	3		1015966	1					
ANR	1015999	AssignmentExpression	* up = 4		1015966	1		=			
ANR	1016000	UnaryOperationExpression	* up		1015966	0					
ANR	1016001	UnaryOperator	*		1015966	0					
ANR	1016002	Identifier	up		1015966	1					
ANR	1016003	PrimaryExpression	4		1015966	1					
ANR	1016004	ElseStatement	else		1015966	0					
ANR	1016005	ExpressionStatement	"* down = factor , * up = 1"	1612:8:47295:47318	1015966	0	True				
ANR	1016006	Expression	"* down = factor , * up = 1"		1015966	0					
ANR	1016007	AssignmentExpression	* down = factor		1015966	0		=			
ANR	1016008	UnaryOperationExpression	* down		1015966	0					
ANR	1016009	UnaryOperator	*		1015966	0					
ANR	1016010	Identifier	down		1015966	1					
ANR	1016011	Identifier	factor		1015966	1					
ANR	1016012	AssignmentExpression	* up = 1		1015966	1		=			
ANR	1016013	UnaryOperationExpression	* up		1015966	0					
ANR	1016014	UnaryOperator	*		1015966	0					
ANR	1016015	Identifier	up		1015966	1					
ANR	1016016	PrimaryExpression	1		1015966	1					
ANR	1016017	ReturnType	static void		1015966	1					
ANR	1016018	Identifier	decode_factor		1015966	2					
ANR	1016019	ParameterList	"int factor , int * up , int * down"		1015966	3					
ANR	1016020	Parameter	int factor	1605:26:47139:47148	1015966	0	True				
ANR	1016021	ParameterType	int		1015966	0					
ANR	1016022	Identifier	factor		1015966	1					
ANR	1016023	Parameter	int * up	1605:38:47151:47157	1015966	1	True				
ANR	1016024	ParameterType	int *		1015966	0					
ANR	1016025	Identifier	up		1015966	1					
ANR	1016026	Parameter	int * down	1605:47:47160:47168	1015966	2	True				
ANR	1016027	ParameterType	int *		1015966	0					
ANR	1016028	Identifier	down		1015966	1					
ANR	1016029	CFGEntryNode	ENTRY		1015966		True				
ANR	1016030	CFGExitNode	EXIT		1015966		True				
ANR	1016031	Symbol	* up		1015966						
ANR	1016032	Symbol	* down		1015966						
ANR	1016033	Symbol	up		1015966						
ANR	1016034	Symbol	factor		1015966						
ANR	1016035	Symbol	down		1015966						
ANR	1016036	Function	gx_downscaler_scale	1615:0:47323:47458							
ANR	1016037	FunctionDef	"gx_downscaler_scale (int width , int factor)"		1016036	0					
ANR	1016038	CompoundStatement		1617:0:47370:47458	1016036	0					
ANR	1016039	IdentifierDeclStatement	"int up , down ;"	1618:4:47376:47388	1016036	0	True				
ANR	1016040	IdentifierDecl	up		1016036	0					
ANR	1016041	IdentifierDeclType	int		1016036	0					
ANR	1016042	Identifier	up		1016036	1					
ANR	1016043	IdentifierDecl	down		1016036	1					
ANR	1016044	IdentifierDeclType	int		1016036	0					
ANR	1016045	Identifier	down		1016036	1					
ANR	1016046	ExpressionStatement	"decode_factor ( factor , & up , & down )"	1620:4:47395:47428	1016036	1	True				
ANR	1016047	CallExpression	"decode_factor ( factor , & up , & down )"		1016036	0					
ANR	1016048	Callee	decode_factor		1016036	0					
ANR	1016049	Identifier	decode_factor		1016036	0					
ANR	1016050	ArgumentList	factor		1016036	1					
ANR	1016051	Argument	factor		1016036	0					
ANR	1016052	Identifier	factor		1016036	0					
ANR	1016053	Argument	& up		1016036	1					
ANR	1016054	UnaryOperationExpression	& up		1016036	0					
ANR	1016055	UnaryOperator	&		1016036	0					
ANR	1016056	Identifier	up		1016036	1					
ANR	1016057	Argument	& down		1016036	2					
ANR	1016058	UnaryOperationExpression	& down		1016036	0					
ANR	1016059	UnaryOperator	&		1016036	0					
ANR	1016060	Identifier	down		1016036	1					
ANR	1016061	ReturnStatement	return ( width * up ) / down ;	1621:4:47434:47456	1016036	2	True				
ANR	1016062	MultiplicativeExpression	( width * up ) / down		1016036	0		/			
ANR	1016063	MultiplicativeExpression	width * up		1016036	0		*			
ANR	1016064	Identifier	width		1016036	0					
ANR	1016065	Identifier	up		1016036	1					
ANR	1016066	Identifier	down		1016036	1					
ANR	1016067	ReturnType	int		1016036	1					
ANR	1016068	Identifier	gx_downscaler_scale		1016036	2					
ANR	1016069	ParameterList	"int width , int factor"		1016036	3					
ANR	1016070	Parameter	int width	1616:20:47347:47355	1016036	0	True				
ANR	1016071	ParameterType	int		1016036	0					
ANR	1016072	Identifier	width		1016036	1					
ANR	1016073	Parameter	int factor	1616:31:47358:47367	1016036	1	True				
ANR	1016074	ParameterType	int		1016036	0					
ANR	1016075	Identifier	factor		1016036	1					
ANR	1016076	CFGEntryNode	ENTRY		1016036		True				
ANR	1016077	CFGExitNode	EXIT		1016036		True				
ANR	1016078	Symbol	& up		1016036						
ANR	1016079	Symbol	& down		1016036						
ANR	1016080	Symbol	width		1016036						
ANR	1016081	Symbol	up		1016036						
ANR	1016082	Symbol	factor		1016036						
ANR	1016083	Symbol	down		1016036						
ANR	1016084	Function	gx_downscaler_adjust_bandheight	1624:0:47461:47622							
ANR	1016085	FunctionDef	"gx_downscaler_adjust_bandheight (int factor , int band_height)"		1016084	0					
ANR	1016086	CompoundStatement		1625:0:47526:47622	1016084	0					
ANR	1016087	IdentifierDeclStatement	"int up , down ;"	1626:4:47532:47544	1016084	0	True				
ANR	1016088	IdentifierDecl	up		1016084	0					
ANR	1016089	IdentifierDeclType	int		1016084	0					
ANR	1016090	Identifier	up		1016084	1					
ANR	1016091	IdentifierDecl	down		1016084	1					
ANR	1016092	IdentifierDeclType	int		1016084	0					
ANR	1016093	Identifier	down		1016084	1					
ANR	1016094	ExpressionStatement	"decode_factor ( factor , & up , & down )"	1628:4:47551:47584	1016084	1	True				
ANR	1016095	CallExpression	"decode_factor ( factor , & up , & down )"		1016084	0					
ANR	1016096	Callee	decode_factor		1016084	0					
ANR	1016097	Identifier	decode_factor		1016084	0					
ANR	1016098	ArgumentList	factor		1016084	1					
ANR	1016099	Argument	factor		1016084	0					
ANR	1016100	Identifier	factor		1016084	0					
ANR	1016101	Argument	& up		1016084	1					
ANR	1016102	UnaryOperationExpression	& up		1016084	0					
ANR	1016103	UnaryOperator	&		1016084	0					
ANR	1016104	Identifier	up		1016084	1					
ANR	1016105	Argument	& down		1016084	2					
ANR	1016106	UnaryOperationExpression	& down		1016084	0					
ANR	1016107	UnaryOperator	&		1016084	0					
ANR	1016108	Identifier	down		1016084	1					
ANR	1016109	ReturnStatement	return ( band_height / down ) * down ;	1629:4:47590:47620	1016084	2	True				
ANR	1016110	MultiplicativeExpression	( band_height / down ) * down		1016084	0		*			
ANR	1016111	MultiplicativeExpression	band_height / down		1016084	0		/			
ANR	1016112	Identifier	band_height		1016084	0					
ANR	1016113	Identifier	down		1016084	1					
ANR	1016114	Identifier	down		1016084	1					
ANR	1016115	ReturnType	int		1016084	1					
ANR	1016116	Identifier	gx_downscaler_adjust_bandheight		1016084	2					
ANR	1016117	ParameterList	"int factor , int band_height"		1016084	3					
ANR	1016118	Parameter	int factor	1624:36:47497:47506	1016084	0	True				
ANR	1016119	ParameterType	int		1016084	0					
ANR	1016120	Identifier	factor		1016084	1					
ANR	1016121	Parameter	int band_height	1624:48:47509:47523	1016084	1	True				
ANR	1016122	ParameterType	int		1016084	0					
ANR	1016123	Identifier	band_height		1016084	1					
ANR	1016124	CFGEntryNode	ENTRY		1016084		True				
ANR	1016125	CFGExitNode	EXIT		1016084		True				
ANR	1016126	Symbol	& up		1016084						
ANR	1016127	Symbol	& down		1016084						
ANR	1016128	Symbol	band_height		1016084						
ANR	1016129	Symbol	up		1016084						
ANR	1016130	Symbol	factor		1016084						
ANR	1016131	Symbol	down		1016084						
ANR	1016132	Function	gx_downscaler_scale_rounded	1632:0:47625:47777							
ANR	1016133	FunctionDef	"gx_downscaler_scale_rounded (int width , int factor)"		1016132	0					
ANR	1016134	CompoundStatement		1634:0:47680:47777	1016132	0					
ANR	1016135	IdentifierDeclStatement	"int up , down ;"	1635:4:47686:47698	1016132	0	True				
ANR	1016136	IdentifierDecl	up		1016132	0					
ANR	1016137	IdentifierDeclType	int		1016132	0					
ANR	1016138	Identifier	up		1016132	1					
ANR	1016139	IdentifierDecl	down		1016132	1					
ANR	1016140	IdentifierDeclType	int		1016132	0					
ANR	1016141	Identifier	down		1016132	1					
ANR	1016142	ExpressionStatement	"decode_factor ( factor , & up , & down )"	1637:4:47705:47738	1016132	1	True				
ANR	1016143	CallExpression	"decode_factor ( factor , & up , & down )"		1016132	0					
ANR	1016144	Callee	decode_factor		1016132	0					
ANR	1016145	Identifier	decode_factor		1016132	0					
ANR	1016146	ArgumentList	factor		1016132	1					
ANR	1016147	Argument	factor		1016132	0					
ANR	1016148	Identifier	factor		1016132	0					
ANR	1016149	Argument	& up		1016132	1					
ANR	1016150	UnaryOperationExpression	& up		1016132	0					
ANR	1016151	UnaryOperator	&		1016132	0					
ANR	1016152	Identifier	up		1016132	1					
ANR	1016153	Argument	& down		1016132	2					
ANR	1016154	UnaryOperationExpression	& down		1016132	0					
ANR	1016155	UnaryOperator	&		1016132	0					
ANR	1016156	Identifier	down		1016132	1					
ANR	1016157	ReturnStatement	return ( width * up + down - 1 ) / down ;	1638:4:47744:47775	1016132	2	True				
ANR	1016158	MultiplicativeExpression	( width * up + down - 1 ) / down		1016132	0		/			
ANR	1016159	AdditiveExpression	width * up + down - 1		1016132	0		+			
ANR	1016160	MultiplicativeExpression	width * up		1016132	0		*			
ANR	1016161	Identifier	width		1016132	0					
ANR	1016162	Identifier	up		1016132	1					
ANR	1016163	AdditiveExpression	down - 1		1016132	1		-			
ANR	1016164	Identifier	down		1016132	0					
ANR	1016165	PrimaryExpression	1		1016132	1					
ANR	1016166	Identifier	down		1016132	1					
ANR	1016167	ReturnType	int		1016132	1					
ANR	1016168	Identifier	gx_downscaler_scale_rounded		1016132	2					
ANR	1016169	ParameterList	"int width , int factor"		1016132	3					
ANR	1016170	Parameter	int width	1633:28:47657:47665	1016132	0	True				
ANR	1016171	ParameterType	int		1016132	0					
ANR	1016172	Identifier	width		1016132	1					
ANR	1016173	Parameter	int factor	1633:39:47668:47677	1016132	1	True				
ANR	1016174	ParameterType	int		1016132	0					
ANR	1016175	Identifier	factor		1016132	1					
ANR	1016176	CFGEntryNode	ENTRY		1016132		True				
ANR	1016177	CFGExitNode	EXIT		1016132		True				
ANR	1016178	Symbol	& up		1016132						
ANR	1016179	Symbol	& down		1016132						
ANR	1016180	Symbol	width		1016132						
ANR	1016181	Symbol	up		1016132						
ANR	1016182	Symbol	factor		1016132						
ANR	1016183	Symbol	down		1016132						
ANR	1016184	Function	get_planar_line_for_trap	1641:0:47780:48845							
ANR	1016185	FunctionDef	"get_planar_line_for_trap (void * arg , unsigned char * buf)"		1016184	0					
ANR	1016186	CompoundStatement		1642:0:47847:48845	1016184	0					
ANR	1016187	IdentifierDeclStatement	gx_downscaler_t * ds = ( gx_downscaler_t * ) arg ;	1643:4:47853:47897	1016184	0	True				
ANR	1016188	IdentifierDecl	* ds = ( gx_downscaler_t * ) arg		1016184	0					
ANR	1016189	IdentifierDeclType	gx_downscaler_t *		1016184	0					
ANR	1016190	Identifier	ds		1016184	1					
ANR	1016191	AssignmentExpression	* ds = ( gx_downscaler_t * ) arg		1016184	2		=			
ANR	1016192	Identifier	ds		1016184	0					
ANR	1016193	CastExpression	( gx_downscaler_t * ) arg		1016184	1					
ANR	1016194	CastTarget	gx_downscaler_t *		1016184	0					
ANR	1016195	Identifier	arg		1016184	1					
ANR	1016196	IdentifierDeclStatement	gs_int_rect rect ;	1644:4:47903:47919	1016184	1	True				
ANR	1016197	IdentifierDecl	rect		1016184	0					
ANR	1016198	IdentifierDeclType	gs_int_rect		1016184	0					
ANR	1016199	Identifier	rect		1016184	1					
ANR	1016200	IdentifierDeclStatement	gs_get_bits_params_t params ;	1645:4:47925:47952	1016184	2	True				
ANR	1016201	IdentifierDecl	params		1016184	0					
ANR	1016202	IdentifierDeclType	gs_get_bits_params_t		1016184	0					
ANR	1016203	Identifier	params		1016184	1					
ANR	1016204	IdentifierDeclStatement	int nc = ds -> num_planes ;	1646:4:47985:48008	1016184	3	True				
ANR	1016205	IdentifierDecl	nc = ds -> num_planes		1016184	0					
ANR	1016206	IdentifierDeclType	int		1016184	0					
ANR	1016207	Identifier	nc		1016184	1					
ANR	1016208	AssignmentExpression	nc = ds -> num_planes		1016184	2		=			
ANR	1016209	Identifier	nc		1016184	0					
ANR	1016210	PtrMemberAccess	ds -> num_planes		1016184	1					
ANR	1016211	Identifier	ds		1016184	0					
ANR	1016212	Identifier	num_planes		1016184	1					
ANR	1016213	IdentifierDeclStatement	"int i , code ;"	1647:4:48014:48025	1016184	4	True				
ANR	1016214	IdentifierDecl	i		1016184	0					
ANR	1016215	IdentifierDeclType	int		1016184	0					
ANR	1016216	Identifier	i		1016184	1					
ANR	1016217	IdentifierDecl	code		1016184	1					
ANR	1016218	IdentifierDeclType	int		1016184	0					
ANR	1016219	Identifier	code		1016184	1					
ANR	1016220	IdentifierDeclStatement	unsigned char * buf2 ;	1648:4:48031:48050	1016184	5	True				
ANR	1016221	IdentifierDecl	* buf2		1016184	0					
ANR	1016222	IdentifierDeclType	unsigned char *		1016184	0					
ANR	1016223	Identifier	buf2		1016184	1					
ANR	1016224	ExpressionStatement	rect . p . x = 0	1650:4:48057:48069	1016184	6	True				
ANR	1016225	AssignmentExpression	rect . p . x = 0		1016184	0		=			
ANR	1016226	MemberAccess	rect . p . x		1016184	0					
ANR	1016227	MemberAccess	rect . p		1016184	0					
ANR	1016228	Identifier	rect		1016184	0					
ANR	1016229	Identifier	p		1016184	1					
ANR	1016230	Identifier	x		1016184	1					
ANR	1016231	PrimaryExpression	0		1016184	1					
ANR	1016232	ExpressionStatement	rect . p . y = ds -> claptrap_y ++	1651:4:48075:48102	1016184	7	True				
ANR	1016233	AssignmentExpression	rect . p . y = ds -> claptrap_y ++		1016184	0		=			
ANR	1016234	MemberAccess	rect . p . y		1016184	0					
ANR	1016235	MemberAccess	rect . p		1016184	0					
ANR	1016236	Identifier	rect		1016184	0					
ANR	1016237	Identifier	p		1016184	1					
ANR	1016238	Identifier	y		1016184	1					
ANR	1016239	PostIncDecOperationExpression	ds -> claptrap_y ++		1016184	1					
ANR	1016240	PtrMemberAccess	ds -> claptrap_y		1016184	0					
ANR	1016241	Identifier	ds		1016184	0					
ANR	1016242	Identifier	claptrap_y		1016184	1					
ANR	1016243	IncDec	++		1016184	1					
ANR	1016244	ExpressionStatement	rect . q . x = ds -> dev -> width	1652:4:48108:48133	1016184	8	True				
ANR	1016245	AssignmentExpression	rect . q . x = ds -> dev -> width		1016184	0		=			
ANR	1016246	MemberAccess	rect . q . x		1016184	0					
ANR	1016247	MemberAccess	rect . q		1016184	0					
ANR	1016248	Identifier	rect		1016184	0					
ANR	1016249	Identifier	q		1016184	1					
ANR	1016250	Identifier	x		1016184	1					
ANR	1016251	PtrMemberAccess	ds -> dev -> width		1016184	1					
ANR	1016252	PtrMemberAccess	ds -> dev		1016184	0					
ANR	1016253	Identifier	ds		1016184	0					
ANR	1016254	Identifier	dev		1016184	1					
ANR	1016255	Identifier	width		1016184	1					
ANR	1016256	ExpressionStatement	rect . q . y = rect . p . y + 1	1653:4:48139:48160	1016184	9	True				
ANR	1016257	AssignmentExpression	rect . q . y = rect . p . y + 1		1016184	0		=			
ANR	1016258	MemberAccess	rect . q . y		1016184	0					
ANR	1016259	MemberAccess	rect . q		1016184	0					
ANR	1016260	Identifier	rect		1016184	0					
ANR	1016261	Identifier	q		1016184	1					
ANR	1016262	Identifier	y		1016184	1					
ANR	1016263	AdditiveExpression	rect . p . y + 1		1016184	1		+			
ANR	1016264	MemberAccess	rect . p . y		1016184	0					
ANR	1016265	MemberAccess	rect . p		1016184	0					
ANR	1016266	Identifier	rect		1016184	0					
ANR	1016267	Identifier	p		1016184	1					
ANR	1016268	Identifier	y		1016184	1					
ANR	1016269	PrimaryExpression	1		1016184	1					
ANR	1016270	IfStatement	if ( ds -> claptrap_y == ds -> dev -> height )		1016184	10					
ANR	1016271	Condition	ds -> claptrap_y == ds -> dev -> height	1656:8:48264:48296	1016184	0	True				
ANR	1016272	EqualityExpression	ds -> claptrap_y == ds -> dev -> height		1016184	0		==			
ANR	1016273	PtrMemberAccess	ds -> claptrap_y		1016184	0					
ANR	1016274	Identifier	ds		1016184	0					
ANR	1016275	Identifier	claptrap_y		1016184	1					
ANR	1016276	PtrMemberAccess	ds -> dev -> height		1016184	1					
ANR	1016277	PtrMemberAccess	ds -> dev		1016184	0					
ANR	1016278	Identifier	ds		1016184	0					
ANR	1016279	Identifier	dev		1016184	1					
ANR	1016280	Identifier	height		1016184	1					
ANR	1016281	ExpressionStatement	ds -> claptrap_y = 0	1657:8:48307:48325	1016184	1	True				
ANR	1016282	AssignmentExpression	ds -> claptrap_y = 0		1016184	0		=			
ANR	1016283	PtrMemberAccess	ds -> claptrap_y		1016184	0					
ANR	1016284	Identifier	ds		1016184	0					
ANR	1016285	Identifier	claptrap_y		1016184	1					
ANR	1016286	PrimaryExpression	0		1016184	1					
ANR	1016287	ExpressionStatement	params = * ds -> claptrap_params	1659:4:48332:48361	1016184	11	True				
ANR	1016288	AssignmentExpression	params = * ds -> claptrap_params		1016184	0		=			
ANR	1016289	Identifier	params		1016184	0					
ANR	1016290	UnaryOperationExpression	* ds -> claptrap_params		1016184	1					
ANR	1016291	UnaryOperator	*		1016184	0					
ANR	1016292	PtrMemberAccess	ds -> claptrap_params		1016184	1					
ANR	1016293	Identifier	ds		1016184	0					
ANR	1016294	Identifier	claptrap_params		1016184	1					
ANR	1016295	ExpressionStatement	buf2 = buf	1660:4:48367:48377	1016184	12	True				
ANR	1016296	AssignmentExpression	buf2 = buf		1016184	0		=			
ANR	1016297	Identifier	buf2		1016184	0					
ANR	1016298	Identifier	buf		1016184	1					
ANR	1016299	ForStatement	for ( i = 0 ; i < nc ; i ++ )		1016184	13					
ANR	1016300	ForInit	i = 0 ;	1661:9:48388:48393	1016184	0	True				
ANR	1016301	AssignmentExpression	i = 0		1016184	0		=			
ANR	1016302	Identifier	i		1016184	0					
ANR	1016303	PrimaryExpression	0		1016184	1					
ANR	1016304	Condition	i < nc	1661:16:48395:48400	1016184	1	True				
ANR	1016305	RelationalExpression	i < nc		1016184	0		<			
ANR	1016306	Identifier	i		1016184	0					
ANR	1016307	Identifier	nc		1016184	1					
ANR	1016308	PostIncDecOperationExpression	i ++	1661:24:48403:48405	1016184	2	True				
ANR	1016309	Identifier	i		1016184	0					
ANR	1016310	IncDec	++		1016184	1					
ANR	1016311	CompoundStatement		21:4:564:564	1016184	3					
ANR	1016312	ExpressionStatement	params . data [ i ] = buf2	1663:8:48422:48443	1016184	0	True				
ANR	1016313	AssignmentExpression	params . data [ i ] = buf2		1016184	0		=			
ANR	1016314	ArrayIndexing	params . data [ i ]		1016184	0					
ANR	1016315	MemberAccess	params . data		1016184	0					
ANR	1016316	Identifier	params		1016184	0					
ANR	1016317	Identifier	data		1016184	1					
ANR	1016318	Identifier	i		1016184	1					
ANR	1016319	Identifier	buf2		1016184	1					
ANR	1016320	ExpressionStatement	buf2 += ds -> width	1664:8:48453:48470	1016184	1	True				
ANR	1016321	AssignmentExpression	buf2 += ds -> width		1016184	0		+=			
ANR	1016322	Identifier	buf2		1016184	0					
ANR	1016323	PtrMemberAccess	ds -> width		1016184	1					
ANR	1016324	Identifier	ds		1016184	0					
ANR	1016325	Identifier	width		1016184	1					
ANR	1016326	ExpressionStatement	"code = ( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , & params , NULL )"	1667:4:48483:48561	1016184	14	True				
ANR	1016327	AssignmentExpression	"code = ( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , & params , NULL )"		1016184	0		=			
ANR	1016328	Identifier	code		1016184	0					
ANR	1016329	CallExpression	"( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , & params , NULL )"		1016184	1					
ANR	1016330	Callee	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1016184	0					
ANR	1016331	UnaryOperationExpression	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1016184	0					
ANR	1016332	UnaryOperator	*		1016184	0					
ANR	1016333	CallExpression	"dev_proc ( ds -> dev , get_bits_rectangle )"		1016184	1					
ANR	1016334	Callee	dev_proc		1016184	0					
ANR	1016335	Identifier	dev_proc		1016184	0					
ANR	1016336	ArgumentList	ds -> dev		1016184	1					
ANR	1016337	Argument	ds -> dev		1016184	0					
ANR	1016338	PtrMemberAccess	ds -> dev		1016184	0					
ANR	1016339	Identifier	ds		1016184	0					
ANR	1016340	Identifier	dev		1016184	1					
ANR	1016341	Argument	get_bits_rectangle		1016184	1					
ANR	1016342	Identifier	get_bits_rectangle		1016184	0					
ANR	1016343	ArgumentList	ds -> dev		1016184	1					
ANR	1016344	Argument	ds -> dev		1016184	0					
ANR	1016345	PtrMemberAccess	ds -> dev		1016184	0					
ANR	1016346	Identifier	ds		1016184	0					
ANR	1016347	Identifier	dev		1016184	1					
ANR	1016348	Argument	& rect		1016184	1					
ANR	1016349	UnaryOperationExpression	& rect		1016184	0					
ANR	1016350	UnaryOperator	&		1016184	0					
ANR	1016351	Identifier	rect		1016184	1					
ANR	1016352	Argument	& params		1016184	2					
ANR	1016353	UnaryOperationExpression	& params		1016184	0					
ANR	1016354	UnaryOperator	&		1016184	0					
ANR	1016355	Identifier	params		1016184	1					
ANR	1016356	Argument	NULL		1016184	3					
ANR	1016357	Identifier	NULL		1016184	0					
ANR	1016358	IfStatement	if ( code < 0 )		1016184	15					
ANR	1016359	Condition	code < 0	1668:8:48571:48578	1016184	0	True				
ANR	1016360	RelationalExpression	code < 0		1016184	0		<			
ANR	1016361	Identifier	code		1016184	0					
ANR	1016362	PrimaryExpression	0		1016184	1					
ANR	1016363	ReturnStatement	return code ;	1669:8:48589:48600	1016184	1	True				
ANR	1016364	Identifier	code		1016184	0					
ANR	1016365	ForStatement	for ( i = 0 ; i < nc ; i ++ )		1016184	16					
ANR	1016366	ForInit	i = 0 ;	1672:9:48682:48687	1016184	0	True				
ANR	1016367	AssignmentExpression	i = 0		1016184	0		=			
ANR	1016368	Identifier	i		1016184	0					
ANR	1016369	PrimaryExpression	0		1016184	1					
ANR	1016370	Condition	i < nc	1672:16:48689:48694	1016184	1	True				
ANR	1016371	RelationalExpression	i < nc		1016184	0		<			
ANR	1016372	Identifier	i		1016184	0					
ANR	1016373	Identifier	nc		1016184	1					
ANR	1016374	PostIncDecOperationExpression	i ++	1672:24:48697:48699	1016184	2	True				
ANR	1016375	Identifier	i		1016184	0					
ANR	1016376	IncDec	++		1016184	1					
ANR	1016377	CompoundStatement		32:4:858:858	1016184	3					
ANR	1016378	IfStatement	if ( params . data [ i ] != buf )		1016184	0					
ANR	1016379	Condition	params . data [ i ] != buf	1674:12:48720:48740	1016184	0	True				
ANR	1016380	EqualityExpression	params . data [ i ] != buf		1016184	0		!=			
ANR	1016381	ArrayIndexing	params . data [ i ]		1016184	0					
ANR	1016382	MemberAccess	params . data		1016184	0					
ANR	1016383	Identifier	params		1016184	0					
ANR	1016384	Identifier	data		1016184	1					
ANR	1016385	Identifier	i		1016184	1					
ANR	1016386	Identifier	buf		1016184	1					
ANR	1016387	ExpressionStatement	"memcpy ( buf , params . data [ i ] , ds -> width )"	1675:12:48755:48793	1016184	1	True				
ANR	1016388	CallExpression	"memcpy ( buf , params . data [ i ] , ds -> width )"		1016184	0					
ANR	1016389	Callee	memcpy		1016184	0					
ANR	1016390	Identifier	memcpy		1016184	0					
ANR	1016391	ArgumentList	buf		1016184	1					
ANR	1016392	Argument	buf		1016184	0					
ANR	1016393	Identifier	buf		1016184	0					
ANR	1016394	Argument	params . data [ i ]		1016184	1					
ANR	1016395	ArrayIndexing	params . data [ i ]		1016184	0					
ANR	1016396	MemberAccess	params . data		1016184	0					
ANR	1016397	Identifier	params		1016184	0					
ANR	1016398	Identifier	data		1016184	1					
ANR	1016399	Identifier	i		1016184	1					
ANR	1016400	Argument	ds -> width		1016184	2					
ANR	1016401	PtrMemberAccess	ds -> width		1016184	0					
ANR	1016402	Identifier	ds		1016184	0					
ANR	1016403	Identifier	width		1016184	1					
ANR	1016404	ExpressionStatement	buf += ds -> width	1676:8:48803:48819	1016184	1	True				
ANR	1016405	AssignmentExpression	buf += ds -> width		1016184	0		+=			
ANR	1016406	Identifier	buf		1016184	0					
ANR	1016407	PtrMemberAccess	ds -> width		1016184	1					
ANR	1016408	Identifier	ds		1016184	0					
ANR	1016409	Identifier	width		1016184	1					
ANR	1016410	ReturnStatement	return code ;	1679:4:48832:48843	1016184	17	True				
ANR	1016411	Identifier	code		1016184	0					
ANR	1016412	ReturnType	static int		1016184	1					
ANR	1016413	Identifier	get_planar_line_for_trap		1016184	2					
ANR	1016414	ParameterList	"void * arg , unsigned char * buf"		1016184	3					
ANR	1016415	Parameter	void * arg	1641:36:47816:47824	1016184	0	True				
ANR	1016416	ParameterType	void *		1016184	0					
ANR	1016417	Identifier	arg		1016184	1					
ANR	1016418	Parameter	unsigned char * buf	1641:47:47827:47844	1016184	1	True				
ANR	1016419	ParameterType	unsigned char *		1016184	0					
ANR	1016420	Identifier	buf		1016184	1					
ANR	1016421	CFGEntryNode	ENTRY		1016184		True				
ANR	1016422	CFGExitNode	EXIT		1016184		True				
ANR	1016423	Symbol	* ds -> dev		1016184						
ANR	1016424	Symbol	code		1016184						
ANR	1016425	Symbol	* ds -> claptrap_params		1016184						
ANR	1016426	Symbol	* dev_proc		1016184						
ANR	1016427	Symbol	* params . data		1016184						
ANR	1016428	Symbol	rect . q . y		1016184						
ANR	1016429	Symbol	get_bits_rectangle		1016184						
ANR	1016430	Symbol	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1016184						
ANR	1016431	Symbol	& rect		1016184						
ANR	1016432	Symbol	ds		1016184						
ANR	1016433	Symbol	rect . q . x		1016184						
ANR	1016434	Symbol	rect		1016184						
ANR	1016435	Symbol	* ds		1016184						
ANR	1016436	Symbol	dev_proc		1016184						
ANR	1016437	Symbol	arg		1016184						
ANR	1016438	Symbol	ds -> width		1016184						
ANR	1016439	Symbol	ds -> claptrap_y		1016184						
ANR	1016440	Symbol	* params		1016184						
ANR	1016441	Symbol	& params		1016184						
ANR	1016442	Symbol	ds -> num_planes		1016184						
ANR	1016443	Symbol	NULL		1016184						
ANR	1016444	Symbol	params . data		1016184						
ANR	1016445	Symbol	ds -> dev -> width		1016184						
ANR	1016446	Symbol	i		1016184						
ANR	1016447	Symbol	params		1016184						
ANR	1016448	Symbol	ds -> dev -> height		1016184						
ANR	1016449	Symbol	ds -> claptrap_params		1016184						
ANR	1016450	Symbol	rect . p . x		1016184						
ANR	1016451	Symbol	buf2		1016184						
ANR	1016452	Symbol	rect . p . y		1016184						
ANR	1016453	Symbol	buf		1016184						
ANR	1016454	Symbol	* i		1016184						
ANR	1016455	Symbol	nc		1016184						
ANR	1016456	Symbol	* * ds		1016184						
ANR	1016457	Symbol	ds -> dev		1016184						
ANR	1016458	Symbol	rect . q		1016184						
ANR	1016459	Symbol	rect . p		1016184						
ANR	1016460	Function	check_trapping	1682:0:48848:50439							
ANR	1016461	FunctionDef	"check_trapping (gs_memory_t * memory , int trap_w , int trap_h , int num_comps , const int * comp_order)"		1016460	0					
ANR	1016462	CompoundStatement		1684:0:48983:50439	1016460	0					
ANR	1016463	IfStatement	if ( trap_w > 0 || trap_h > 0 )		1016460	0					
ANR	1016464	Condition	trap_w > 0 || trap_h > 0	1686:8:49017:49040	1016460	0	True				
ANR	1016465	OrExpression	trap_w > 0 || trap_h > 0		1016460	0		||			
ANR	1016466	RelationalExpression	trap_w > 0		1016460	0		>			
ANR	1016467	Identifier	trap_w		1016460	0					
ANR	1016468	PrimaryExpression	0		1016460	1					
ANR	1016469	RelationalExpression	trap_h > 0		1016460	1		>			
ANR	1016470	Identifier	trap_h		1016460	0					
ANR	1016471	PrimaryExpression	0		1016460	1					
ANR	1016472	CompoundStatement		4:4:63:63	1016460	1					
ANR	1016473	Statement	dmprintf	1688:8:49057:49064	1016460	0	True				
ANR	1016474	Statement	(	1688:16:49065:49065	1016460	1	True				
ANR	1016475	Statement	memory	1688:17:49066:49071	1016460	2	True				
ANR	1016476	Statement	","	1688:23:49072:49072	1016460	3	True				
ANR	1016477	Statement	"""Trapping is disabled in this build. To enable trapping,\\n"""	1689:17:49091:49149	1016460	4	True				
ANR	1016478	Statement	"""follow the instructions in the documentation. Please note\\n"""	1690:17:49168:49228	1016460	5	True				
ANR	1016479	Statement	"""that if you do this, you are responsible for ensuring that\\n"""	1691:17:49247:49308	1016460	6	True				
ANR	1016480	Statement	"""you have any and all patent licenses that may be required.\\n"""	1692:17:49327:49388	1016460	7	True				
ANR	1016481	Statement	)	1692:79:49389:49389	1016460	8	True				
ANR	1016482	ExpressionStatement		1692:80:49390:49390	1016460	9	True				
ANR	1016483	ExpressionStatement	return_error ( gs_error_rangecheck )	1693:8:49400:49433	1016460	10	True				
ANR	1016484	CallExpression	return_error ( gs_error_rangecheck )		1016460	0					
ANR	1016485	Callee	return_error		1016460	0					
ANR	1016486	Identifier	return_error		1016460	0					
ANR	1016487	ArgumentList	gs_error_rangecheck		1016460	1					
ANR	1016488	Argument	gs_error_rangecheck		1016460	0					
ANR	1016489	Identifier	gs_error_rangecheck		1016460	0					
ANR	1016490	IfStatement	if ( trap_w < 0 || trap_h < 0 )		1016460	1					
ANR	1016491	Condition	trap_w < 0 || trap_h < 0	1697:8:49457:49480	1016460	0	True				
ANR	1016492	OrExpression	trap_w < 0 || trap_h < 0		1016460	0		||			
ANR	1016493	RelationalExpression	trap_w < 0		1016460	0		<			
ANR	1016494	Identifier	trap_w		1016460	0					
ANR	1016495	PrimaryExpression	0		1016460	1					
ANR	1016496	RelationalExpression	trap_h < 0		1016460	1		<			
ANR	1016497	Identifier	trap_h		1016460	0					
ANR	1016498	PrimaryExpression	0		1016460	1					
ANR	1016499	CompoundStatement		15:4:503:503	1016460	1					
ANR	1016500	ExpressionStatement	"dmprintf ( memory , ""Trapping range must be >= 0"" )"	1699:8:49497:49544	1016460	0	True				
ANR	1016501	CallExpression	"dmprintf ( memory , ""Trapping range must be >= 0"" )"		1016460	0					
ANR	1016502	Callee	dmprintf		1016460	0					
ANR	1016503	Identifier	dmprintf		1016460	0					
ANR	1016504	ArgumentList	memory		1016460	1					
ANR	1016505	Argument	memory		1016460	0					
ANR	1016506	Identifier	memory		1016460	0					
ANR	1016507	Argument	"""Trapping range must be >= 0"""		1016460	1					
ANR	1016508	PrimaryExpression	"""Trapping range must be >= 0"""		1016460	0					
ANR	1016509	ExpressionStatement	return_error ( gs_error_rangecheck )	1700:8:49554:49587	1016460	1	True				
ANR	1016510	CallExpression	return_error ( gs_error_rangecheck )		1016460	0					
ANR	1016511	Callee	return_error		1016460	0					
ANR	1016512	Identifier	return_error		1016460	0					
ANR	1016513	ArgumentList	gs_error_rangecheck		1016460	1					
ANR	1016514	Argument	gs_error_rangecheck		1016460	0					
ANR	1016515	Identifier	gs_error_rangecheck		1016460	0					
ANR	1016516	IfStatement	if ( trap_w > 0 || trap_h > 0 )		1016460	2					
ANR	1016517	Condition	trap_w > 0 || trap_h > 0	1703:8:49604:49627	1016460	0	True				
ANR	1016518	OrExpression	trap_w > 0 || trap_h > 0		1016460	0		||			
ANR	1016519	RelationalExpression	trap_w > 0		1016460	0		>			
ANR	1016520	Identifier	trap_w		1016460	0					
ANR	1016521	PrimaryExpression	0		1016460	1					
ANR	1016522	RelationalExpression	trap_h > 0		1016460	1		>			
ANR	1016523	Identifier	trap_h		1016460	0					
ANR	1016524	PrimaryExpression	0		1016460	1					
ANR	1016525	CompoundStatement		21:4:650:650	1016460	1					
ANR	1016526	IfStatement	if ( comp_order == NULL )		1016460	0					
ANR	1016527	Condition	comp_order == NULL	1705:12:49648:49665	1016460	0	True				
ANR	1016528	EqualityExpression	comp_order == NULL		1016460	0		==			
ANR	1016529	Identifier	comp_order		1016460	0					
ANR	1016530	Identifier	NULL		1016460	1					
ANR	1016531	CompoundStatement		23:8:692:692	1016460	1					
ANR	1016532	ExpressionStatement	"emprintf ( memory , ""Trapping cannot be used without comp_order being defined"" )"	1707:12:49690:49766	1016460	0	True				
ANR	1016533	CallExpression	"emprintf ( memory , ""Trapping cannot be used without comp_order being defined"" )"		1016460	0					
ANR	1016534	Callee	emprintf		1016460	0					
ANR	1016535	Identifier	emprintf		1016460	0					
ANR	1016536	ArgumentList	memory		1016460	1					
ANR	1016537	Argument	memory		1016460	0					
ANR	1016538	Identifier	memory		1016460	0					
ANR	1016539	Argument	"""Trapping cannot be used without comp_order being defined"""		1016460	1					
ANR	1016540	PrimaryExpression	"""Trapping cannot be used without comp_order being defined"""		1016460	0					
ANR	1016541	ExpressionStatement	return_error ( gs_error_rangecheck )	1708:12:49780:49813	1016460	1	True				
ANR	1016542	CallExpression	return_error ( gs_error_rangecheck )		1016460	0					
ANR	1016543	Callee	return_error		1016460	0					
ANR	1016544	Identifier	return_error		1016460	0					
ANR	1016545	ArgumentList	gs_error_rangecheck		1016460	1					
ANR	1016546	Argument	gs_error_rangecheck		1016460	0					
ANR	1016547	Identifier	gs_error_rangecheck		1016460	0					
ANR	1016548	CompoundStatement		31:12:996:1001	1016460	1					
ANR	1016549	IdentifierDeclStatement	char comps [ GS_CLIENT_COLOR_MAX_COMPONENTS ] = { 0 } ;	1713:12:49916:49966	1016460	0	True				
ANR	1016550	IdentifierDecl	comps [ GS_CLIENT_COLOR_MAX_COMPONENTS ] = { 0 }		1016460	0					
ANR	1016551	IdentifierDeclType	char [ GS_CLIENT_COLOR_MAX_COMPONENTS ]		1016460	0					
ANR	1016552	Identifier	comps		1016460	1					
ANR	1016553	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		1016460	2					
ANR	1016554	AssignmentExpression	comps [ GS_CLIENT_COLOR_MAX_COMPONENTS ] = { 0 }		1016460	3		=			
ANR	1016555	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		1016460	0					
ANR	1016556	InitializerList	0		1016460	1					
ANR	1016557	PrimaryExpression	0		1016460	0					
ANR	1016558	IdentifierDeclStatement	int i ;	1714:12:49980:49985	1016460	1	True				
ANR	1016559	IdentifierDecl	i		1016460	0					
ANR	1016560	IdentifierDeclType	int		1016460	0					
ANR	1016561	Identifier	i		1016460	1					
ANR	1016562	ForStatement	for ( i = 0 ; i < num_comps ; i ++ )		1016460	2					
ANR	1016563	ForInit	i = 0 ;	1716:17:50005:50010	1016460	0	True				
ANR	1016564	AssignmentExpression	i = 0		1016460	0		=			
ANR	1016565	Identifier	i		1016460	0					
ANR	1016566	PrimaryExpression	0		1016460	1					
ANR	1016567	Condition	i < num_comps	1716:24:50012:50024	1016460	1	True				
ANR	1016568	RelationalExpression	i < num_comps		1016460	0		<			
ANR	1016569	Identifier	i		1016460	0					
ANR	1016570	Identifier	num_comps		1016460	1					
ANR	1016571	PostIncDecOperationExpression	i ++	1716:39:50027:50029	1016460	2	True				
ANR	1016572	Identifier	i		1016460	0					
ANR	1016573	IncDec	++		1016460	1					
ANR	1016574	CompoundStatement		35:16:1078:1099	1016460	3					
ANR	1016575	IdentifierDeclStatement	int n = comp_order [ i ] ;	1718:16:50062:50083	1016460	0	True				
ANR	1016576	IdentifierDecl	n = comp_order [ i ]		1016460	0					
ANR	1016577	IdentifierDeclType	int		1016460	0					
ANR	1016578	Identifier	n		1016460	1					
ANR	1016579	AssignmentExpression	n = comp_order [ i ]		1016460	2		=			
ANR	1016580	Identifier	n		1016460	0					
ANR	1016581	ArrayIndexing	comp_order [ i ]		1016460	1					
ANR	1016582	Identifier	comp_order		1016460	0					
ANR	1016583	Identifier	i		1016460	1					
ANR	1016584	IfStatement	if ( n < 0 || n >= num_comps || comps [ n ] != 0 )		1016460	1					
ANR	1016585	Condition	n < 0 || n >= num_comps || comps [ n ] != 0	1719:20:50105:50144	1016460	0	True				
ANR	1016586	OrExpression	n < 0 || n >= num_comps || comps [ n ] != 0		1016460	0		||			
ANR	1016587	RelationalExpression	n < 0		1016460	0		<			
ANR	1016588	Identifier	n		1016460	0					
ANR	1016589	PrimaryExpression	0		1016460	1					
ANR	1016590	OrExpression	n >= num_comps || comps [ n ] != 0		1016460	1		||			
ANR	1016591	RelationalExpression	n >= num_comps		1016460	0		>=			
ANR	1016592	Identifier	n		1016460	0					
ANR	1016593	Identifier	num_comps		1016460	1					
ANR	1016594	EqualityExpression	comps [ n ] != 0		1016460	1		!=			
ANR	1016595	ArrayIndexing	comps [ n ]		1016460	0					
ANR	1016596	Identifier	comps		1016460	0					
ANR	1016597	Identifier	n		1016460	1					
ANR	1016598	PrimaryExpression	0		1016460	1					
ANR	1016599	BreakStatement	break ;	1720:20:50167:50172	1016460	1	True				
ANR	1016600	ExpressionStatement	comps [ n ] = 1	1721:16:50190:50202	1016460	2	True				
ANR	1016601	AssignmentExpression	comps [ n ] = 1		1016460	0		=			
ANR	1016602	ArrayIndexing	comps [ n ]		1016460	0					
ANR	1016603	Identifier	comps		1016460	0					
ANR	1016604	Identifier	n		1016460	1					
ANR	1016605	PrimaryExpression	1		1016460	1					
ANR	1016606	IfStatement	if ( i != num_comps )		1016460	3					
ANR	1016607	Condition	i != num_comps	1723:16:50234:50247	1016460	0	True				
ANR	1016608	EqualityExpression	i != num_comps		1016460	0		!=			
ANR	1016609	Identifier	i		1016460	0					
ANR	1016610	Identifier	num_comps		1016460	1					
ANR	1016611	CompoundStatement		41:12:1278:1278	1016460	1					
ANR	1016612	ExpressionStatement	"emprintf ( memory , ""Illegal component order passed to trapping"" )"	1725:16:50280:50342	1016460	0	True				
ANR	1016613	CallExpression	"emprintf ( memory , ""Illegal component order passed to trapping"" )"		1016460	0					
ANR	1016614	Callee	emprintf		1016460	0					
ANR	1016615	Identifier	emprintf		1016460	0					
ANR	1016616	ArgumentList	memory		1016460	1					
ANR	1016617	Argument	memory		1016460	0					
ANR	1016618	Identifier	memory		1016460	0					
ANR	1016619	Argument	"""Illegal component order passed to trapping"""		1016460	1					
ANR	1016620	PrimaryExpression	"""Illegal component order passed to trapping"""		1016460	0					
ANR	1016621	ExpressionStatement	return_error ( gs_error_rangecheck )	1726:16:50360:50393	1016460	1	True				
ANR	1016622	CallExpression	return_error ( gs_error_rangecheck )		1016460	0					
ANR	1016623	Callee	return_error		1016460	0					
ANR	1016624	Identifier	return_error		1016460	0					
ANR	1016625	ArgumentList	gs_error_rangecheck		1016460	1					
ANR	1016626	Argument	gs_error_rangecheck		1016460	0					
ANR	1016627	Identifier	gs_error_rangecheck		1016460	0					
ANR	1016628	ReturnStatement	return 0 ;	1730:4:50429:50437	1016460	3	True				
ANR	1016629	PrimaryExpression	0		1016460	0					
ANR	1016630	ReturnType	static int		1016460	1					
ANR	1016631	Identifier	check_trapping		1016460	2					
ANR	1016632	ParameterList	"gs_memory_t * memory , int trap_w , int trap_h , int num_comps , const int * comp_order"		1016460	3					
ANR	1016633	Parameter	gs_memory_t * memory	1682:26:48874:48892	1016460	0	True				
ANR	1016634	ParameterType	gs_memory_t *		1016460	0					
ANR	1016635	Identifier	memory		1016460	1					
ANR	1016636	Parameter	int trap_w	1682:47:48895:48904	1016460	1	True				
ANR	1016637	ParameterType	int		1016460	0					
ANR	1016638	Identifier	trap_w		1016460	1					
ANR	1016639	Parameter	int trap_h	1682:59:48907:48916	1016460	2	True				
ANR	1016640	ParameterType	int		1016460	0					
ANR	1016641	Identifier	trap_h		1016460	1					
ANR	1016642	Parameter	int num_comps	1683:26:48945:48957	1016460	3	True				
ANR	1016643	ParameterType	int		1016460	0					
ANR	1016644	Identifier	num_comps		1016460	1					
ANR	1016645	Parameter	const int * comp_order	1683:41:48960:48980	1016460	4	True				
ANR	1016646	ParameterType	const int *		1016460	0					
ANR	1016647	Identifier	comp_order		1016460	1					
ANR	1016648	CFGEntryNode	ENTRY		1016460		True				
ANR	1016649	CFGExitNode	EXIT		1016460		True				
ANR	1016650	Symbol	* comp_order		1016460						
ANR	1016651	Symbol	memory		1016460						
ANR	1016652	Symbol	trap_w		1016460						
ANR	1016653	Symbol	NULL		1016460						
ANR	1016654	Symbol	comps		1016460						
ANR	1016655	Symbol	comp_order		1016460						
ANR	1016656	Symbol	gs_error_rangecheck		1016460						
ANR	1016657	Symbol	i		1016460						
ANR	1016658	Symbol	* comps		1016460						
ANR	1016659	Symbol	GS_CLIENT_COLOR_MAX_COMPONENTS		1016460						
ANR	1016660	Symbol	n		1016460						
ANR	1016661	Symbol	trap_h		1016460						
ANR	1016662	Symbol	* i		1016460						
ANR	1016663	Symbol	num_comps		1016460						
ANR	1016664	Symbol	* n		1016460						
ANR	1016665	Function	init_ets	1733:0:50442:52064							
ANR	1016666	FunctionDef	"init_ets (gx_downscaler_t * ds , int num_planes , gx_downscale_core * downscale_core)"		1016665	0					
ANR	1016667	CompoundStatement		1734:0:50534:52064	1016665	0					
ANR	1016668	IdentifierDeclStatement	ETS_Params params = { 0 } ;	1735:4:50540:50565	1016665	0	True				
ANR	1016669	IdentifierDecl	params = { 0 }		1016665	0					
ANR	1016670	IdentifierDeclType	ETS_Params		1016665	0					
ANR	1016671	Identifier	params		1016665	1					
ANR	1016672	AssignmentExpression	params = { 0 }		1016665	2		=			
ANR	1016673	Identifier	params		1016665	0					
ANR	1016674	InitializerList	0		1016665	1					
ANR	1016675	PrimaryExpression	0		1016665	0					
ANR	1016676	IdentifierDeclStatement	"int strengths [ MAX_ETS_PLANES ] = { 128 , 51 , 51 , 13 , 13 , 13 , 13 , 13 } ;"	1736:4:50571:50638	1016665	1	True				
ANR	1016677	IdentifierDecl	"strengths [ MAX_ETS_PLANES ] = { 128 , 51 , 51 , 13 , 13 , 13 , 13 , 13 }"		1016665	0					
ANR	1016678	IdentifierDeclType	int [ MAX_ETS_PLANES ]		1016665	0					
ANR	1016679	Identifier	strengths		1016665	1					
ANR	1016680	Identifier	MAX_ETS_PLANES		1016665	2					
ANR	1016681	AssignmentExpression	"strengths [ MAX_ETS_PLANES ] = { 128 , 51 , 51 , 13 , 13 , 13 , 13 , 13 }"		1016665	3		=			
ANR	1016682	Identifier	MAX_ETS_PLANES		1016665	0					
ANR	1016683	InitializerList	128		1016665	1					
ANR	1016684	PrimaryExpression	128		1016665	0					
ANR	1016685	PrimaryExpression	51		1016665	1					
ANR	1016686	PrimaryExpression	51		1016665	2					
ANR	1016687	PrimaryExpression	13		1016665	3					
ANR	1016688	PrimaryExpression	13		1016665	4					
ANR	1016689	PrimaryExpression	13		1016665	5					
ANR	1016690	PrimaryExpression	13		1016665	6					
ANR	1016691	PrimaryExpression	13		1016665	7					
ANR	1016692	IdentifierDeclStatement	int lut [ ETS_SRC_MAX + 1 ] ;	1737:4:50644:50666	1016665	2	True				
ANR	1016693	IdentifierDecl	lut [ ETS_SRC_MAX + 1 ]		1016665	0					
ANR	1016694	IdentifierDeclType	int [ ETS_SRC_MAX + 1 ]		1016665	0					
ANR	1016695	Identifier	lut		1016665	1					
ANR	1016696	AdditiveExpression	ETS_SRC_MAX + 1		1016665	2		+			
ANR	1016697	Identifier	ETS_SRC_MAX		1016665	0					
ANR	1016698	PrimaryExpression	1		1016665	1					
ANR	1016699	IdentifierDeclStatement	int * luts [ MAX_ETS_PLANES ] ;	1738:4:50672:50697	1016665	3	True				
ANR	1016700	IdentifierDecl	* luts [ MAX_ETS_PLANES ]		1016665	0					
ANR	1016701	IdentifierDeclType	int * [ MAX_ETS_PLANES ]		1016665	0					
ANR	1016702	Identifier	luts		1016665	1					
ANR	1016703	Identifier	MAX_ETS_PLANES		1016665	2					
ANR	1016704	IdentifierDeclStatement	int rs_lut [ ETS_SRC_MAX + 1 ] ;	1739:4:50703:50728	1016665	4	True				
ANR	1016705	IdentifierDecl	rs_lut [ ETS_SRC_MAX + 1 ]		1016665	0					
ANR	1016706	IdentifierDeclType	int [ ETS_SRC_MAX + 1 ]		1016665	0					
ANR	1016707	Identifier	rs_lut		1016665	1					
ANR	1016708	AdditiveExpression	ETS_SRC_MAX + 1		1016665	2		+			
ANR	1016709	Identifier	ETS_SRC_MAX		1016665	0					
ANR	1016710	PrimaryExpression	1		1016665	1					
ANR	1016711	IdentifierDeclStatement	int * rs_luts [ MAX_ETS_PLANES ] ;	1740:4:50734:50762	1016665	5	True				
ANR	1016712	IdentifierDecl	* rs_luts [ MAX_ETS_PLANES ]		1016665	0					
ANR	1016713	IdentifierDeclType	int * [ MAX_ETS_PLANES ]		1016665	0					
ANR	1016714	Identifier	rs_luts		1016665	1					
ANR	1016715	Identifier	MAX_ETS_PLANES		1016665	2					
ANR	1016716	IdentifierDeclStatement	int i ;	1741:4:50768:50773	1016665	6	True				
ANR	1016717	IdentifierDecl	i		1016665	0					
ANR	1016718	IdentifierDeclType	int		1016665	0					
ANR	1016719	Identifier	i		1016665	1					
ANR	1016720	IdentifierDeclStatement	"int c1_scale [ MAX_ETS_PLANES ] = { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 } ;"	1742:4:50779:50836	1016665	7	True				
ANR	1016721	IdentifierDecl	"c1_scale [ MAX_ETS_PLANES ] = { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 }"		1016665	0					
ANR	1016722	IdentifierDeclType	int [ MAX_ETS_PLANES ]		1016665	0					
ANR	1016723	Identifier	c1_scale		1016665	1					
ANR	1016724	Identifier	MAX_ETS_PLANES		1016665	2					
ANR	1016725	AssignmentExpression	"c1_scale [ MAX_ETS_PLANES ] = { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 }"		1016665	3		=			
ANR	1016726	Identifier	MAX_ETS_PLANES		1016665	0					
ANR	1016727	InitializerList	1		1016665	1					
ANR	1016728	PrimaryExpression	1		1016665	0					
ANR	1016729	PrimaryExpression	1		1016665	1					
ANR	1016730	PrimaryExpression	1		1016665	2					
ANR	1016731	PrimaryExpression	1		1016665	3					
ANR	1016732	PrimaryExpression	1		1016665	4					
ANR	1016733	PrimaryExpression	1		1016665	5					
ANR	1016734	PrimaryExpression	1		1016665	6					
ANR	1016735	PrimaryExpression	1		1016665	7					
ANR	1016736	IdentifierDeclStatement	ETS_POLARITY polarity = ETS_BLACK_IS_ONE ;	1743:4:50842:50882	1016665	8	True				
ANR	1016737	IdentifierDecl	polarity = ETS_BLACK_IS_ONE		1016665	0					
ANR	1016738	IdentifierDeclType	ETS_POLARITY		1016665	0					
ANR	1016739	Identifier	polarity		1016665	1					
ANR	1016740	AssignmentExpression	polarity = ETS_BLACK_IS_ONE		1016665	2		=			
ANR	1016741	Identifier	ETS_BLACK_IS_ONE		1016665	0					
ANR	1016742	Identifier	ETS_BLACK_IS_ONE		1016665	1					
ANR	1016743	ExpressionStatement	polarity = ETS_BLACK_IS_ONE	1745:4:50889:50916	1016665	9	True				
ANR	1016744	AssignmentExpression	polarity = ETS_BLACK_IS_ONE		1016665	0		=			
ANR	1016745	Identifier	polarity		1016665	0					
ANR	1016746	Identifier	ETS_BLACK_IS_ONE		1016665	1					
ANR	1016747	IfStatement	if ( num_planes > MAX_ETS_PLANES )		1016665	10					
ANR	1016748	Condition	num_planes > MAX_ETS_PLANES	1747:8:50927:50953	1016665	0	True				
ANR	1016749	RelationalExpression	num_planes > MAX_ETS_PLANES		1016665	0		>			
ANR	1016750	Identifier	num_planes		1016665	0					
ANR	1016751	Identifier	MAX_ETS_PLANES		1016665	1					
ANR	1016752	ReturnStatement	return gs_error_rangecheck ;	1748:8:50964:50990	1016665	1	True				
ANR	1016753	Identifier	gs_error_rangecheck		1016665	0					
ANR	1016754	ExpressionStatement	ds -> ets_downscale = downscale_core	1750:4:50997:51031	1016665	11	True				
ANR	1016755	AssignmentExpression	ds -> ets_downscale = downscale_core		1016665	0		=			
ANR	1016756	PtrMemberAccess	ds -> ets_downscale		1016665	0					
ANR	1016757	Identifier	ds		1016665	0					
ANR	1016758	Identifier	ets_downscale		1016665	1					
ANR	1016759	Identifier	downscale_core		1016665	1					
ANR	1016760	CompoundStatement		21:8:550:576	1016665	12					
ANR	1016761	IdentifierDeclStatement	double scale = ETS_SRC_MAX ;	1754:8:51085:51111	1016665	0	True				
ANR	1016762	IdentifierDecl	scale = ETS_SRC_MAX		1016665	0					
ANR	1016763	IdentifierDeclType	double		1016665	0					
ANR	1016764	Identifier	scale		1016665	1					
ANR	1016765	AssignmentExpression	scale = ETS_SRC_MAX		1016665	2		=			
ANR	1016766	Identifier	ETS_SRC_MAX		1016665	0					
ANR	1016767	Identifier	ETS_SRC_MAX		1016665	1					
ANR	1016768	ForStatement	for ( i = 0 ; i < ( ETS_SRC_MAX + 1 ) ; i ++ )		1016665	1					
ANR	1016769	ForInit	i = 0 ;	1755:13:51126:51131	1016665	0	True				
ANR	1016770	AssignmentExpression	i = 0		1016665	0		=			
ANR	1016771	Identifier	i		1016665	0					
ANR	1016772	PrimaryExpression	0		1016665	1					
ANR	1016773	Condition	i < ( ETS_SRC_MAX + 1 )	1755:20:51133:51151	1016665	1	True				
ANR	1016774	RelationalExpression	i < ( ETS_SRC_MAX + 1 )		1016665	0		<			
ANR	1016775	Identifier	i		1016665	0					
ANR	1016776	AdditiveExpression	ETS_SRC_MAX + 1		1016665	1		+			
ANR	1016777	Identifier	ETS_SRC_MAX		1016665	0					
ANR	1016778	PrimaryExpression	1		1016665	1					
ANR	1016779	PostIncDecOperationExpression	i ++	1755:41:51154:51156	1016665	2	True				
ANR	1016780	Identifier	i		1016665	0					
ANR	1016781	IncDec	++		1016665	1					
ANR	1016782	ExpressionStatement	"lut [ i ] = ( int ) ( ( 1 << 24 ) * ( pow ( i / scale , 1.0 ) ) )"	1756:12:51171:51221	1016665	3	True				
ANR	1016783	AssignmentExpression	"lut [ i ] = ( int ) ( ( 1 << 24 ) * ( pow ( i / scale , 1.0 ) ) )"		1016665	0		=			
ANR	1016784	ArrayIndexing	lut [ i ]		1016665	0					
ANR	1016785	Identifier	lut		1016665	0					
ANR	1016786	Identifier	i		1016665	1					
ANR	1016787	CastExpression	"( int ) ( ( 1 << 24 ) * ( pow ( i / scale , 1.0 ) ) )"		1016665	1					
ANR	1016788	CastTarget	int		1016665	0					
ANR	1016789	MultiplicativeExpression	"( 1 << 24 ) * ( pow ( i / scale , 1.0 ) )"		1016665	1		*			
ANR	1016790	ShiftExpression	1 << 24		1016665	0		<<			
ANR	1016791	PrimaryExpression	1		1016665	0					
ANR	1016792	PrimaryExpression	24		1016665	1					
ANR	1016793	CallExpression	"pow ( i / scale , 1.0 )"		1016665	1					
ANR	1016794	Callee	pow		1016665	0					
ANR	1016795	Identifier	pow		1016665	0					
ANR	1016796	ArgumentList	i / scale		1016665	1					
ANR	1016797	Argument	i / scale		1016665	0					
ANR	1016798	MultiplicativeExpression	i / scale		1016665	0		/			
ANR	1016799	Identifier	i		1016665	0					
ANR	1016800	Identifier	scale		1016665	1					
ANR	1016801	Argument	1.0		1016665	1					
ANR	1016802	PrimaryExpression	1.0		1016665	0					
ANR	1016803	ForStatement	for ( i = 0 ; i < ( ETS_SRC_MAX + 1 ) ; i ++ )		1016665	13					
ANR	1016804	ForInit	i = 0 ;	1758:9:51238:51243	1016665	0	True				
ANR	1016805	AssignmentExpression	i = 0		1016665	0		=			
ANR	1016806	Identifier	i		1016665	0					
ANR	1016807	PrimaryExpression	0		1016665	1					
ANR	1016808	Condition	i < ( ETS_SRC_MAX + 1 )	1758:16:51245:51263	1016665	1	True				
ANR	1016809	RelationalExpression	i < ( ETS_SRC_MAX + 1 )		1016665	0		<			
ANR	1016810	Identifier	i		1016665	0					
ANR	1016811	AdditiveExpression	ETS_SRC_MAX + 1		1016665	1		+			
ANR	1016812	Identifier	ETS_SRC_MAX		1016665	0					
ANR	1016813	PrimaryExpression	1		1016665	1					
ANR	1016814	PostIncDecOperationExpression	i ++	1758:37:51266:51268	1016665	2	True				
ANR	1016815	Identifier	i		1016665	0					
ANR	1016816	IncDec	++		1016665	1					
ANR	1016817	ExpressionStatement	rs_lut [ i ] = 2 << 16	1759:8:51279:51298	1016665	3	True				
ANR	1016818	AssignmentExpression	rs_lut [ i ] = 2 << 16		1016665	0		=			
ANR	1016819	ArrayIndexing	rs_lut [ i ]		1016665	0					
ANR	1016820	Identifier	rs_lut		1016665	0					
ANR	1016821	Identifier	i		1016665	1					
ANR	1016822	ShiftExpression	2 << 16		1016665	1		<<			
ANR	1016823	PrimaryExpression	2		1016665	0					
ANR	1016824	PrimaryExpression	16		1016665	1					
ANR	1016825	ForStatement	for ( i = 0 ; i < num_planes ; i ++ )		1016665	14					
ANR	1016826	ForInit	i = 0 ;	1760:9:51309:51314	1016665	0	True				
ANR	1016827	AssignmentExpression	i = 0		1016665	0		=			
ANR	1016828	Identifier	i		1016665	0					
ANR	1016829	PrimaryExpression	0		1016665	1					
ANR	1016830	Condition	i < num_planes	1760:16:51316:51329	1016665	1	True				
ANR	1016831	RelationalExpression	i < num_planes		1016665	0		<			
ANR	1016832	Identifier	i		1016665	0					
ANR	1016833	Identifier	num_planes		1016665	1					
ANR	1016834	PostIncDecOperationExpression	i ++	1760:32:51332:51334	1016665	2	True				
ANR	1016835	Identifier	i		1016665	0					
ANR	1016836	IncDec	++		1016665	1					
ANR	1016837	ExpressionStatement	luts [ i ] = lut	1761:8:51345:51358	1016665	3	True				
ANR	1016838	AssignmentExpression	luts [ i ] = lut		1016665	0		=			
ANR	1016839	ArrayIndexing	luts [ i ]		1016665	0					
ANR	1016840	Identifier	luts		1016665	0					
ANR	1016841	Identifier	i		1016665	1					
ANR	1016842	Identifier	lut		1016665	1					
ANR	1016843	ForStatement	for ( i = 0 ; i < num_planes ; i ++ )		1016665	15					
ANR	1016844	ForInit	i = 0 ;	1762:9:51369:51374	1016665	0	True				
ANR	1016845	AssignmentExpression	i = 0		1016665	0		=			
ANR	1016846	Identifier	i		1016665	0					
ANR	1016847	PrimaryExpression	0		1016665	1					
ANR	1016848	Condition	i < num_planes	1762:16:51376:51389	1016665	1	True				
ANR	1016849	RelationalExpression	i < num_planes		1016665	0		<			
ANR	1016850	Identifier	i		1016665	0					
ANR	1016851	Identifier	num_planes		1016665	1					
ANR	1016852	PostIncDecOperationExpression	i ++	1762:32:51392:51394	1016665	2	True				
ANR	1016853	Identifier	i		1016665	0					
ANR	1016854	IncDec	++		1016665	1					
ANR	1016855	ExpressionStatement	rs_luts [ i ] = rs_lut	1763:8:51405:51424	1016665	3	True				
ANR	1016856	AssignmentExpression	rs_luts [ i ] = rs_lut		1016665	0		=			
ANR	1016857	ArrayIndexing	rs_luts [ i ]		1016665	0					
ANR	1016858	Identifier	rs_luts		1016665	0					
ANR	1016859	Identifier	i		1016665	1					
ANR	1016860	Identifier	rs_lut		1016665	1					
ANR	1016861	ExpressionStatement	params . width = ds -> width	1765:4:51431:51455	1016665	16	True				
ANR	1016862	AssignmentExpression	params . width = ds -> width		1016665	0		=			
ANR	1016863	MemberAccess	params . width		1016665	0					
ANR	1016864	Identifier	params		1016665	0					
ANR	1016865	Identifier	width		1016665	1					
ANR	1016866	PtrMemberAccess	ds -> width		1016665	1					
ANR	1016867	Identifier	ds		1016665	0					
ANR	1016868	Identifier	width		1016665	1					
ANR	1016869	ExpressionStatement	params . n_planes = num_planes	1766:4:51461:51489	1016665	17	True				
ANR	1016870	AssignmentExpression	params . n_planes = num_planes		1016665	0		=			
ANR	1016871	MemberAccess	params . n_planes		1016665	0					
ANR	1016872	Identifier	params		1016665	0					
ANR	1016873	Identifier	n_planes		1016665	1					
ANR	1016874	Identifier	num_planes		1016665	1					
ANR	1016875	ExpressionStatement	params . levels = 2	1767:4:51495:51512	1016665	18	True				
ANR	1016876	AssignmentExpression	params . levels = 2		1016665	0		=			
ANR	1016877	MemberAccess	params . levels		1016665	0					
ANR	1016878	Identifier	params		1016665	0					
ANR	1016879	Identifier	levels		1016665	1					
ANR	1016880	PrimaryExpression	2		1016665	1					
ANR	1016881	ExpressionStatement	params . luts = luts	1768:4:51518:51536	1016665	19	True				
ANR	1016882	AssignmentExpression	params . luts = luts		1016665	0		=			
ANR	1016883	MemberAccess	params . luts		1016665	0					
ANR	1016884	Identifier	params		1016665	0					
ANR	1016885	Identifier	luts		1016665	1					
ANR	1016886	Identifier	luts		1016665	1					
ANR	1016887	ExpressionStatement	params . distscale = 0	1769:4:51542:51562	1016665	20	True				
ANR	1016888	AssignmentExpression	params . distscale = 0		1016665	0		=			
ANR	1016889	MemberAccess	params . distscale		1016665	0					
ANR	1016890	Identifier	params		1016665	0					
ANR	1016891	Identifier	distscale		1016665	1					
ANR	1016892	PrimaryExpression	0		1016665	1					
ANR	1016893	ExpressionStatement	params . aspect_x = 1	1770:4:51568:51587	1016665	21	True				
ANR	1016894	AssignmentExpression	params . aspect_x = 1		1016665	0		=			
ANR	1016895	MemberAccess	params . aspect_x		1016665	0					
ANR	1016896	Identifier	params		1016665	0					
ANR	1016897	Identifier	aspect_x		1016665	1					
ANR	1016898	PrimaryExpression	1		1016665	1					
ANR	1016899	ExpressionStatement	params . aspect_y = 1	1771:4:51593:51612	1016665	22	True				
ANR	1016900	AssignmentExpression	params . aspect_y = 1		1016665	0		=			
ANR	1016901	MemberAccess	params . aspect_y		1016665	0					
ANR	1016902	Identifier	params		1016665	0					
ANR	1016903	Identifier	aspect_y		1016665	1					
ANR	1016904	PrimaryExpression	1		1016665	1					
ANR	1016905	ExpressionStatement	params . strengths = strengths	1772:4:51618:51646	1016665	23	True				
ANR	1016906	AssignmentExpression	params . strengths = strengths		1016665	0		=			
ANR	1016907	MemberAccess	params . strengths		1016665	0					
ANR	1016908	Identifier	params		1016665	0					
ANR	1016909	Identifier	strengths		1016665	1					
ANR	1016910	Identifier	strengths		1016665	1					
ANR	1016911	ExpressionStatement	params . rand_scale = 0	1773:4:51652:51673	1016665	24	True				
ANR	1016912	AssignmentExpression	params . rand_scale = 0		1016665	0		=			
ANR	1016913	MemberAccess	params . rand_scale		1016665	0					
ANR	1016914	Identifier	params		1016665	0					
ANR	1016915	Identifier	rand_scale		1016665	1					
ANR	1016916	PrimaryExpression	0		1016665	1					
ANR	1016917	ExpressionStatement	params . c1_scale = c1_scale	1774:4:51679:51705	1016665	25	True				
ANR	1016918	AssignmentExpression	params . c1_scale = c1_scale		1016665	0		=			
ANR	1016919	MemberAccess	params . c1_scale		1016665	0					
ANR	1016920	Identifier	params		1016665	0					
ANR	1016921	Identifier	c1_scale		1016665	1					
ANR	1016922	Identifier	c1_scale		1016665	1					
ANR	1016923	ExpressionStatement	params . ets_bias = ETS_BIAS_REDUCE_POSITIVE	1775:4:51711:51753	1016665	26	True				
ANR	1016924	AssignmentExpression	params . ets_bias = ETS_BIAS_REDUCE_POSITIVE		1016665	0		=			
ANR	1016925	MemberAccess	params . ets_bias		1016665	0					
ANR	1016926	Identifier	params		1016665	0					
ANR	1016927	Identifier	ets_bias		1016665	1					
ANR	1016928	Identifier	ETS_BIAS_REDUCE_POSITIVE		1016665	1					
ANR	1016929	ExpressionStatement	params . r_style = ETS_RSTYLE_THRESHOLD	1776:4:51759:51796	1016665	27	True				
ANR	1016930	AssignmentExpression	params . r_style = ETS_RSTYLE_THRESHOLD		1016665	0		=			
ANR	1016931	MemberAccess	params . r_style		1016665	0					
ANR	1016932	Identifier	params		1016665	0					
ANR	1016933	Identifier	r_style		1016665	1					
ANR	1016934	Identifier	ETS_RSTYLE_THRESHOLD		1016665	1					
ANR	1016935	ExpressionStatement	params . dump_file = NULL	1777:4:51802:51825	1016665	28	True				
ANR	1016936	AssignmentExpression	params . dump_file = NULL		1016665	0		=			
ANR	1016937	MemberAccess	params . dump_file		1016665	0					
ANR	1016938	Identifier	params		1016665	0					
ANR	1016939	Identifier	dump_file		1016665	1					
ANR	1016940	Identifier	NULL		1016665	1					
ANR	1016941	ExpressionStatement	params . dump_level = 0	1778:4:51831:51852	1016665	29	True				
ANR	1016942	AssignmentExpression	params . dump_level = 0		1016665	0		=			
ANR	1016943	MemberAccess	params . dump_level		1016665	0					
ANR	1016944	Identifier	params		1016665	0					
ANR	1016945	Identifier	dump_level		1016665	1					
ANR	1016946	PrimaryExpression	0		1016665	1					
ANR	1016947	ExpressionStatement	params . rand_scale_luts = rs_luts	1779:4:51858:51890	1016665	30	True				
ANR	1016948	AssignmentExpression	params . rand_scale_luts = rs_luts		1016665	0		=			
ANR	1016949	MemberAccess	params . rand_scale_luts		1016665	0					
ANR	1016950	Identifier	params		1016665	0					
ANR	1016951	Identifier	rand_scale_luts		1016665	1					
ANR	1016952	Identifier	rs_luts		1016665	1					
ANR	1016953	ExpressionStatement	params . polarity = polarity	1780:4:51896:51922	1016665	31	True				
ANR	1016954	AssignmentExpression	params . polarity = polarity		1016665	0		=			
ANR	1016955	MemberAccess	params . polarity		1016665	0					
ANR	1016956	Identifier	params		1016665	0					
ANR	1016957	Identifier	polarity		1016665	1					
ANR	1016958	Identifier	polarity		1016665	1					
ANR	1016959	ExpressionStatement	"ds -> ets_config = ets_create ( ds -> dev -> memory , & params )"	1782:4:51929:51982	1016665	32	True				
ANR	1016960	AssignmentExpression	"ds -> ets_config = ets_create ( ds -> dev -> memory , & params )"		1016665	0		=			
ANR	1016961	PtrMemberAccess	ds -> ets_config		1016665	0					
ANR	1016962	Identifier	ds		1016665	0					
ANR	1016963	Identifier	ets_config		1016665	1					
ANR	1016964	CallExpression	"ets_create ( ds -> dev -> memory , & params )"		1016665	1					
ANR	1016965	Callee	ets_create		1016665	0					
ANR	1016966	Identifier	ets_create		1016665	0					
ANR	1016967	ArgumentList	ds -> dev -> memory		1016665	1					
ANR	1016968	Argument	ds -> dev -> memory		1016665	0					
ANR	1016969	PtrMemberAccess	ds -> dev -> memory		1016665	0					
ANR	1016970	PtrMemberAccess	ds -> dev		1016665	0					
ANR	1016971	Identifier	ds		1016665	0					
ANR	1016972	Identifier	dev		1016665	1					
ANR	1016973	Identifier	memory		1016665	1					
ANR	1016974	Argument	& params		1016665	1					
ANR	1016975	UnaryOperationExpression	& params		1016665	0					
ANR	1016976	UnaryOperator	&		1016665	0					
ANR	1016977	Identifier	params		1016665	1					
ANR	1016978	IfStatement	if ( ds -> ets_config == NULL )		1016665	33					
ANR	1016979	Condition	ds -> ets_config == NULL	1783:8:51992:52013	1016665	0	True				
ANR	1016980	EqualityExpression	ds -> ets_config == NULL		1016665	0		==			
ANR	1016981	PtrMemberAccess	ds -> ets_config		1016665	0					
ANR	1016982	Identifier	ds		1016665	0					
ANR	1016983	Identifier	ets_config		1016665	1					
ANR	1016984	Identifier	NULL		1016665	1					
ANR	1016985	ReturnStatement	return gs_error_VMerror ;	1784:8:52024:52047	1016665	1	True				
ANR	1016986	Identifier	gs_error_VMerror		1016665	0					
ANR	1016987	ReturnStatement	return 0 ;	1786:4:52054:52062	1016665	34	True				
ANR	1016988	PrimaryExpression	0		1016665	0					
ANR	1016989	ReturnType	static int		1016665	1					
ANR	1016990	Identifier	init_ets		1016665	2					
ANR	1016991	ParameterList	"gx_downscaler_t * ds , int num_planes , gx_downscale_core * downscale_core"		1016665	3					
ANR	1016992	Parameter	gx_downscaler_t * ds	1733:20:50462:50480	1016665	0	True				
ANR	1016993	ParameterType	gx_downscaler_t *		1016665	0					
ANR	1016994	Identifier	ds		1016665	1					
ANR	1016995	Parameter	int num_planes	1733:41:50483:50496	1016665	1	True				
ANR	1016996	ParameterType	int		1016665	0					
ANR	1016997	Identifier	num_planes		1016665	1					
ANR	1016998	Parameter	gx_downscale_core * downscale_core	1733:57:50499:50531	1016665	2	True				
ANR	1016999	ParameterType	gx_downscale_core *		1016665	0					
ANR	1017000	Identifier	downscale_core		1016665	1					
ANR	1017001	CFGEntryNode	ENTRY		1016665		True				
ANR	1017002	CFGExitNode	EXIT		1016665		True				
ANR	1017003	Symbol	params . luts		1016665						
ANR	1017004	Symbol	params . aspect_x		1016665						
ANR	1017005	Symbol	ds -> ets_config		1016665						
ANR	1017006	Symbol	* rs_lut		1016665						
ANR	1017007	Symbol	* rs_luts		1016665						
ANR	1017008	Symbol	params . c1_scale		1016665						
ANR	1017009	Symbol	params . rand_scale_luts		1016665						
ANR	1017010	Symbol	params . aspect_y		1016665						
ANR	1017011	Symbol	rs_lut		1016665						
ANR	1017012	Symbol	gs_error_rangecheck		1016665						
ANR	1017013	Symbol	lut		1016665						
ANR	1017014	Symbol	ds -> dev -> memory		1016665						
ANR	1017015	Symbol	ds		1016665						
ANR	1017016	Symbol	ets_create		1016665						
ANR	1017017	Symbol	params . levels		1016665						
ANR	1017018	Symbol	params . ets_bias		1016665						
ANR	1017019	Symbol	params . r_style		1016665						
ANR	1017020	Symbol	num_planes		1016665						
ANR	1017021	Symbol	params . dump_file		1016665						
ANR	1017022	Symbol	ds -> width		1016665						
ANR	1017023	Symbol	polarity		1016665						
ANR	1017024	Symbol	& params		1016665						
ANR	1017025	Symbol	params . rand_scale		1016665						
ANR	1017026	Symbol	ETS_BLACK_IS_ONE		1016665						
ANR	1017027	Symbol	NULL		1016665						
ANR	1017028	Symbol	params . n_planes		1016665						
ANR	1017029	Symbol	params		1016665						
ANR	1017030	Symbol	params . strengths		1016665						
ANR	1017031	Symbol	strengths		1016665						
ANR	1017032	Symbol	rs_luts		1016665						
ANR	1017033	Symbol	ds -> dev		1016665						
ANR	1017034	Symbol	c1_scale		1016665						
ANR	1017035	Symbol	* ds -> dev		1016665						
ANR	1017036	Symbol	scale		1016665						
ANR	1017037	Symbol	params . polarity		1016665						
ANR	1017038	Symbol	ETS_RSTYLE_THRESHOLD		1016665						
ANR	1017039	Symbol	ds -> ets_downscale		1016665						
ANR	1017040	Symbol	* ds		1016665						
ANR	1017041	Symbol	pow		1016665						
ANR	1017042	Symbol	params . distscale		1016665						
ANR	1017043	Symbol	* luts		1016665						
ANR	1017044	Symbol	MAX_ETS_PLANES		1016665						
ANR	1017045	Symbol	ETS_SRC_MAX		1016665						
ANR	1017046	Symbol	downscale_core		1016665						
ANR	1017047	Symbol	i		1016665						
ANR	1017048	Symbol	params . width		1016665						
ANR	1017049	Symbol	gs_error_VMerror		1016665						
ANR	1017050	Symbol	* i		1016665						
ANR	1017051	Symbol	* lut		1016665						
ANR	1017052	Symbol	* * ds		1016665						
ANR	1017053	Symbol	luts		1016665						
ANR	1017054	Symbol	ETS_BIAS_REDUCE_POSITIVE		1016665						
ANR	1017055	Symbol	params . dump_level		1016665						
ANR	1017056	Function	gx_downscaler_init_planar	1790:0:52068:52696							
ANR	1017057	FunctionDef	"gx_downscaler_init_planar (gx_downscaler_t * ds , gx_device * dev , gs_get_bits_params_t * params , int num_comps , int factor , int mfs , int src_bpc , int dst_bpc)"		1017056	0					
ANR	1017058	CompoundStatement		1798:0:52543:52696	1017056	0					
ANR	1017059	ReturnStatement	"return gx_downscaler_init_planar_trapped_cm ( ds , dev , params , num_comps , factor , mfs , src_bpc , dst_bpc , 0 , 0 , NULL , NULL , NULL , num_comps ) ;"	1799:4:52549:52694	1017056	0	True				
ANR	1017060	CallExpression	"gx_downscaler_init_planar_trapped_cm ( ds , dev , params , num_comps , factor , mfs , src_bpc , dst_bpc , 0 , 0 , NULL , NULL , NULL , num_comps )"		1017056	0					
ANR	1017061	Callee	gx_downscaler_init_planar_trapped_cm		1017056	0					
ANR	1017062	Identifier	gx_downscaler_init_planar_trapped_cm		1017056	0					
ANR	1017063	ArgumentList	ds		1017056	1					
ANR	1017064	Argument	ds		1017056	0					
ANR	1017065	Identifier	ds		1017056	0					
ANR	1017066	Argument	dev		1017056	1					
ANR	1017067	Identifier	dev		1017056	0					
ANR	1017068	Argument	params		1017056	2					
ANR	1017069	Identifier	params		1017056	0					
ANR	1017070	Argument	num_comps		1017056	3					
ANR	1017071	Identifier	num_comps		1017056	0					
ANR	1017072	Argument	factor		1017056	4					
ANR	1017073	Identifier	factor		1017056	0					
ANR	1017074	Argument	mfs		1017056	5					
ANR	1017075	Identifier	mfs		1017056	0					
ANR	1017076	Argument	src_bpc		1017056	6					
ANR	1017077	Identifier	src_bpc		1017056	0					
ANR	1017078	Argument	dst_bpc		1017056	7					
ANR	1017079	Identifier	dst_bpc		1017056	0					
ANR	1017080	Argument	0		1017056	8					
ANR	1017081	PrimaryExpression	0		1017056	0					
ANR	1017082	Argument	0		1017056	9					
ANR	1017083	PrimaryExpression	0		1017056	0					
ANR	1017084	Argument	NULL		1017056	10					
ANR	1017085	Identifier	NULL		1017056	0					
ANR	1017086	Argument	NULL		1017056	11					
ANR	1017087	Identifier	NULL		1017056	0					
ANR	1017088	Argument	NULL		1017056	12					
ANR	1017089	Identifier	NULL		1017056	0					
ANR	1017090	Argument	num_comps		1017056	13					
ANR	1017091	Identifier	num_comps		1017056	0					
ANR	1017092	ReturnType	int		1017056	1					
ANR	1017093	Identifier	gx_downscaler_init_planar		1017056	2					
ANR	1017094	ParameterList	"gx_downscaler_t * ds , gx_device * dev , gs_get_bits_params_t * params , int num_comps , int factor , int mfs , int src_bpc , int dst_bpc"		1017056	3					
ANR	1017095	Parameter	gx_downscaler_t * ds	1790:30:52098:52121	1017056	0	True				
ANR	1017096	ParameterType	gx_downscaler_t *		1017056	0					
ANR	1017097	Identifier	ds		1017056	1					
ANR	1017098	Parameter	gx_device * dev	1791:30:52154:52178	1017056	1	True				
ANR	1017099	ParameterType	gx_device *		1017056	0					
ANR	1017100	Identifier	dev		1017056	1					
ANR	1017101	Parameter	gs_get_bits_params_t * params	1792:30:52211:52238	1017056	2	True				
ANR	1017102	ParameterType	gs_get_bits_params_t *		1017056	0					
ANR	1017103	Identifier	params		1017056	1					
ANR	1017104	Parameter	int num_comps	1793:30:52271:52301	1017056	3	True				
ANR	1017105	ParameterType	int		1017056	0					
ANR	1017106	Identifier	num_comps		1017056	1					
ANR	1017107	Parameter	int factor	1794:30:52334:52361	1017056	4	True				
ANR	1017108	ParameterType	int		1017056	0					
ANR	1017109	Identifier	factor		1017056	1					
ANR	1017110	Parameter	int mfs	1795:30:52394:52418	1017056	5	True				
ANR	1017111	ParameterType	int		1017056	0					
ANR	1017112	Identifier	mfs		1017056	1					
ANR	1017113	Parameter	int src_bpc	1796:30:52451:52479	1017056	6	True				
ANR	1017114	ParameterType	int		1017056	0					
ANR	1017115	Identifier	src_bpc		1017056	1					
ANR	1017116	Parameter	int dst_bpc	1797:30:52512:52540	1017056	7	True				
ANR	1017117	ParameterType	int		1017056	0					
ANR	1017118	Identifier	dst_bpc		1017056	1					
ANR	1017119	CFGEntryNode	ENTRY		1017056		True				
ANR	1017120	CFGExitNode	EXIT		1017056		True				
ANR	1017121	Symbol	dst_bpc		1017056						
ANR	1017122	Symbol	NULL		1017056						
ANR	1017123	Symbol	dev		1017056						
ANR	1017124	Symbol	gx_downscaler_init_planar_trapped_cm		1017056						
ANR	1017125	Symbol	num_comps		1017056						
ANR	1017126	Symbol	mfs		1017056						
ANR	1017127	Symbol	params		1017056						
ANR	1017128	Symbol	factor		1017056						
ANR	1017129	Symbol	src_bpc		1017056						
ANR	1017130	Symbol	ds		1017056						
ANR	1017131	Function	gx_downscaler_init_planar_trapped	1803:0:52699:53751							
ANR	1017132	FunctionDef	"gx_downscaler_init_planar_trapped (gx_downscaler_t * ds , gx_device * dev , gs_get_bits_params_t * params , int num_comps , int factor , int mfs , int src_bpc , int dst_bpc , int trap_w , int trap_h , const int * comp_order)"		1017131	0					
ANR	1017133	CompoundStatement		1814:0:53446:53751	1017131	0					
ANR	1017134	ReturnStatement	"return gx_downscaler_init_planar_trapped_cm ( ds , dev , params , num_comps , factor , mfs , src_bpc , dst_bpc , trap_w , trap_h , comp_order , NULL , NULL , num_comps ) ;"	1815:4:53452:53749	1017131	0	True				
ANR	1017135	CallExpression	"gx_downscaler_init_planar_trapped_cm ( ds , dev , params , num_comps , factor , mfs , src_bpc , dst_bpc , trap_w , trap_h , comp_order , NULL , NULL , num_comps )"		1017131	0					
ANR	1017136	Callee	gx_downscaler_init_planar_trapped_cm		1017131	0					
ANR	1017137	Identifier	gx_downscaler_init_planar_trapped_cm		1017131	0					
ANR	1017138	ArgumentList	ds		1017131	1					
ANR	1017139	Argument	ds		1017131	0					
ANR	1017140	Identifier	ds		1017131	0					
ANR	1017141	Argument	dev		1017131	1					
ANR	1017142	Identifier	dev		1017131	0					
ANR	1017143	Argument	params		1017131	2					
ANR	1017144	Identifier	params		1017131	0					
ANR	1017145	Argument	num_comps		1017131	3					
ANR	1017146	Identifier	num_comps		1017131	0					
ANR	1017147	Argument	factor		1017131	4					
ANR	1017148	Identifier	factor		1017131	0					
ANR	1017149	Argument	mfs		1017131	5					
ANR	1017150	Identifier	mfs		1017131	0					
ANR	1017151	Argument	src_bpc		1017131	6					
ANR	1017152	Identifier	src_bpc		1017131	0					
ANR	1017153	Argument	dst_bpc		1017131	7					
ANR	1017154	Identifier	dst_bpc		1017131	0					
ANR	1017155	Argument	trap_w		1017131	8					
ANR	1017156	Identifier	trap_w		1017131	0					
ANR	1017157	Argument	trap_h		1017131	9					
ANR	1017158	Identifier	trap_h		1017131	0					
ANR	1017159	Argument	comp_order		1017131	10					
ANR	1017160	Identifier	comp_order		1017131	0					
ANR	1017161	Argument	NULL		1017131	11					
ANR	1017162	Identifier	NULL		1017131	0					
ANR	1017163	Argument	NULL		1017131	12					
ANR	1017164	Identifier	NULL		1017131	0					
ANR	1017165	Argument	num_comps		1017131	13					
ANR	1017166	Identifier	num_comps		1017131	0					
ANR	1017167	ReturnType	int		1017131	1					
ANR	1017168	Identifier	gx_downscaler_init_planar_trapped		1017131	2					
ANR	1017169	ParameterList	"gx_downscaler_t * ds , gx_device * dev , gs_get_bits_params_t * params , int num_comps , int factor , int mfs , int src_bpc , int dst_bpc , int trap_w , int trap_h , const int * comp_order"		1017131	3					
ANR	1017170	Parameter	gx_downscaler_t * ds	1803:38:52737:52760	1017131	0	True				
ANR	1017171	ParameterType	gx_downscaler_t *		1017131	0					
ANR	1017172	Identifier	ds		1017131	1					
ANR	1017173	Parameter	gx_device * dev	1804:38:52801:52825	1017131	1	True				
ANR	1017174	ParameterType	gx_device *		1017131	0					
ANR	1017175	Identifier	dev		1017131	1					
ANR	1017176	Parameter	gs_get_bits_params_t * params	1805:38:52866:52893	1017131	2	True				
ANR	1017177	ParameterType	gs_get_bits_params_t *		1017131	0					
ANR	1017178	Identifier	params		1017131	1					
ANR	1017179	Parameter	int num_comps	1806:38:52934:52964	1017131	3	True				
ANR	1017180	ParameterType	int		1017131	0					
ANR	1017181	Identifier	num_comps		1017131	1					
ANR	1017182	Parameter	int factor	1807:38:53005:53032	1017131	4	True				
ANR	1017183	ParameterType	int		1017131	0					
ANR	1017184	Identifier	factor		1017131	1					
ANR	1017185	Parameter	int mfs	1808:38:53073:53097	1017131	5	True				
ANR	1017186	ParameterType	int		1017131	0					
ANR	1017187	Identifier	mfs		1017131	1					
ANR	1017188	Parameter	int src_bpc	1809:38:53138:53166	1017131	6	True				
ANR	1017189	ParameterType	int		1017131	0					
ANR	1017190	Identifier	src_bpc		1017131	1					
ANR	1017191	Parameter	int dst_bpc	1810:38:53207:53235	1017131	7	True				
ANR	1017192	ParameterType	int		1017131	0					
ANR	1017193	Identifier	dst_bpc		1017131	1					
ANR	1017194	Parameter	int trap_w	1811:38:53276:53303	1017131	8	True				
ANR	1017195	ParameterType	int		1017131	0					
ANR	1017196	Identifier	trap_w		1017131	1					
ANR	1017197	Parameter	int trap_h	1812:38:53344:53371	1017131	9	True				
ANR	1017198	ParameterType	int		1017131	0					
ANR	1017199	Identifier	trap_h		1017131	1					
ANR	1017200	Parameter	const int * comp_order	1813:38:53412:53443	1017131	10	True				
ANR	1017201	ParameterType	const int *		1017131	0					
ANR	1017202	Identifier	comp_order		1017131	1					
ANR	1017203	CFGEntryNode	ENTRY		1017131		True				
ANR	1017204	CFGExitNode	EXIT		1017131		True				
ANR	1017205	Symbol	dst_bpc		1017131						
ANR	1017206	Symbol	trap_w		1017131						
ANR	1017207	Symbol	NULL		1017131						
ANR	1017208	Symbol	comp_order		1017131						
ANR	1017209	Symbol	params		1017131						
ANR	1017210	Symbol	src_bpc		1017131						
ANR	1017211	Symbol	ds		1017131						
ANR	1017212	Symbol	trap_h		1017131						
ANR	1017213	Symbol	dev		1017131						
ANR	1017214	Symbol	gx_downscaler_init_planar_trapped_cm		1017131						
ANR	1017215	Symbol	num_comps		1017131						
ANR	1017216	Symbol	mfs		1017131						
ANR	1017217	Symbol	factor		1017131						
ANR	1017218	Function	gx_downscaler_init_planar_trapped_cm	1821:0:53754:59339							
ANR	1017219	FunctionDef	"gx_downscaler_init_planar_trapped_cm (gx_downscaler_t * ds , gx_device * dev , gs_get_bits_params_t * params , int num_comps , int factor , int mfs , int src_bpc , int dst_bpc , int trap_w , int trap_h , const int * comp_order , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps)"		1017218	0					
ANR	1017220	CompoundStatement		1835:0:54766:59339	1017218	0					
ANR	1017221	IdentifierDeclStatement	int span = bitmap_raster ( dev -> width * src_bpc ) ;	1836:4:54772:54833	1017218	0	True				
ANR	1017222	IdentifierDecl	span = bitmap_raster ( dev -> width * src_bpc )		1017218	0					
ANR	1017223	IdentifierDeclType	int		1017218	0					
ANR	1017224	Identifier	span		1017218	1					
ANR	1017225	AssignmentExpression	span = bitmap_raster ( dev -> width * src_bpc )		1017218	2		=			
ANR	1017226	Identifier	span		1017218	0					
ANR	1017227	CallExpression	bitmap_raster ( dev -> width * src_bpc )		1017218	1					
ANR	1017228	Callee	bitmap_raster		1017218	0					
ANR	1017229	Identifier	bitmap_raster		1017218	0					
ANR	1017230	ArgumentList	dev -> width * src_bpc		1017218	1					
ANR	1017231	Argument	dev -> width * src_bpc		1017218	0					
ANR	1017232	MultiplicativeExpression	dev -> width * src_bpc		1017218	0		*			
ANR	1017233	PtrMemberAccess	dev -> width		1017218	0					
ANR	1017234	Identifier	dev		1017218	0					
ANR	1017235	Identifier	width		1017218	1					
ANR	1017236	Identifier	src_bpc		1017218	1					
ANR	1017237	IdentifierDeclStatement	int post_span = bitmap_raster ( dev -> width * src_bpc ) ;	1837:4:54839:54905	1017218	1	True				
ANR	1017238	IdentifierDecl	post_span = bitmap_raster ( dev -> width * src_bpc )		1017218	0					
ANR	1017239	IdentifierDeclType	int		1017218	0					
ANR	1017240	Identifier	post_span		1017218	1					
ANR	1017241	AssignmentExpression	post_span = bitmap_raster ( dev -> width * src_bpc )		1017218	2		=			
ANR	1017242	Identifier	post_span		1017218	0					
ANR	1017243	CallExpression	bitmap_raster ( dev -> width * src_bpc )		1017218	1					
ANR	1017244	Callee	bitmap_raster		1017218	0					
ANR	1017245	Identifier	bitmap_raster		1017218	0					
ANR	1017246	ArgumentList	dev -> width * src_bpc		1017218	1					
ANR	1017247	Argument	dev -> width * src_bpc		1017218	0					
ANR	1017248	MultiplicativeExpression	dev -> width * src_bpc		1017218	0		*			
ANR	1017249	PtrMemberAccess	dev -> width		1017218	0					
ANR	1017250	Identifier	dev		1017218	0					
ANR	1017251	Identifier	width		1017218	1					
ANR	1017252	Identifier	src_bpc		1017218	1					
ANR	1017253	IdentifierDeclStatement	int width ;	1838:4:54911:54935	1017218	2	True				
ANR	1017254	IdentifierDecl	width		1017218	0					
ANR	1017255	IdentifierDeclType	int		1017218	0					
ANR	1017256	Identifier	width		1017218	1					
ANR	1017257	IdentifierDeclStatement	int code ;	1839:4:54941:54964	1017218	3	True				
ANR	1017258	IdentifierDecl	code		1017218	0					
ANR	1017259	IdentifierDeclType	int		1017218	0					
ANR	1017260	Identifier	code		1017218	1					
ANR	1017261	IdentifierDeclStatement	gx_downscale_core * core ;	1840:4:54970:54993	1017218	4	True				
ANR	1017262	IdentifierDecl	* core		1017218	0					
ANR	1017263	IdentifierDeclType	gx_downscale_core *		1017218	0					
ANR	1017264	Identifier	core		1017218	1					
ANR	1017265	IdentifierDeclStatement	int i ;	1841:4:54999:55019	1017218	5	True				
ANR	1017266	IdentifierDecl	i		1017218	0					
ANR	1017267	IdentifierDeclType	int		1017218	0					
ANR	1017268	Identifier	i		1017218	1					
ANR	1017269	IdentifierDeclStatement	"int upfactor , downfactor ;"	1842:4:55025:55064	1017218	6	True				
ANR	1017270	IdentifierDecl	upfactor		1017218	0					
ANR	1017271	IdentifierDeclType	int		1017218	0					
ANR	1017272	Identifier	upfactor		1017218	1					
ANR	1017273	IdentifierDecl	downfactor		1017218	1					
ANR	1017274	IdentifierDeclType	int		1017218	0					
ANR	1017275	Identifier	downfactor		1017218	1					
ANR	1017276	ExpressionStatement	"decode_factor ( factor , & upfactor , & downfactor )"	1844:4:55071:55116	1017218	7	True				
ANR	1017277	CallExpression	"decode_factor ( factor , & upfactor , & downfactor )"		1017218	0					
ANR	1017278	Callee	decode_factor		1017218	0					
ANR	1017279	Identifier	decode_factor		1017218	0					
ANR	1017280	ArgumentList	factor		1017218	1					
ANR	1017281	Argument	factor		1017218	0					
ANR	1017282	Identifier	factor		1017218	0					
ANR	1017283	Argument	& upfactor		1017218	1					
ANR	1017284	UnaryOperationExpression	& upfactor		1017218	0					
ANR	1017285	UnaryOperator	&		1017218	0					
ANR	1017286	Identifier	upfactor		1017218	1					
ANR	1017287	Argument	& downfactor		1017218	2					
ANR	1017288	UnaryOperationExpression	& downfactor		1017218	0					
ANR	1017289	UnaryOperator	&		1017218	0					
ANR	1017290	Identifier	downfactor		1017218	1					
ANR	1017291	ExpressionStatement	width = ( dev -> width * upfactor ) / downfactor	1847:4:55154:55194	1017218	8	True				
ANR	1017292	AssignmentExpression	width = ( dev -> width * upfactor ) / downfactor		1017218	0		=			
ANR	1017293	Identifier	width		1017218	0					
ANR	1017294	MultiplicativeExpression	( dev -> width * upfactor ) / downfactor		1017218	1		/			
ANR	1017295	MultiplicativeExpression	dev -> width * upfactor		1017218	0		*			
ANR	1017296	PtrMemberAccess	dev -> width		1017218	0					
ANR	1017297	Identifier	dev		1017218	0					
ANR	1017298	Identifier	width		1017218	1					
ANR	1017299	Identifier	upfactor		1017218	1					
ANR	1017300	Identifier	downfactor		1017218	1					
ANR	1017301	ExpressionStatement	"memset ( ds , 0 , sizeof ( * ds ) )"	1848:4:55200:55226	1017218	9	True				
ANR	1017302	CallExpression	"memset ( ds , 0 , sizeof ( * ds ) )"		1017218	0					
ANR	1017303	Callee	memset		1017218	0					
ANR	1017304	Identifier	memset		1017218	0					
ANR	1017305	ArgumentList	ds		1017218	1					
ANR	1017306	Argument	ds		1017218	0					
ANR	1017307	Identifier	ds		1017218	0					
ANR	1017308	Argument	0		1017218	1					
ANR	1017309	PrimaryExpression	0		1017218	0					
ANR	1017310	Argument	sizeof ( * ds )		1017218	2					
ANR	1017311	SizeofExpression	sizeof ( * ds )		1017218	0					
ANR	1017312	Sizeof	sizeof		1017218	0					
ANR	1017313	UnaryOperationExpression	* ds		1017218	1					
ANR	1017314	UnaryOperator	*		1017218	0					
ANR	1017315	Identifier	ds		1017218	1					
ANR	1017316	ExpressionStatement	ds -> dev = dev	1849:4:55232:55259	1017218	10	True				
ANR	1017317	AssignmentExpression	ds -> dev = dev		1017218	0		=			
ANR	1017318	PtrMemberAccess	ds -> dev		1017218	0					
ANR	1017319	Identifier	ds		1017218	0					
ANR	1017320	Identifier	dev		1017218	1					
ANR	1017321	Identifier	dev		1017218	1					
ANR	1017322	ExpressionStatement	ds -> width = width	1850:4:55265:55294	1017218	11	True				
ANR	1017323	AssignmentExpression	ds -> width = width		1017218	0		=			
ANR	1017324	PtrMemberAccess	ds -> width		1017218	0					
ANR	1017325	Identifier	ds		1017218	0					
ANR	1017326	Identifier	width		1017218	1					
ANR	1017327	Identifier	width		1017218	1					
ANR	1017328	ExpressionStatement	ds -> awidth = width	1851:4:55300:55329	1017218	12	True				
ANR	1017329	AssignmentExpression	ds -> awidth = width		1017218	0		=			
ANR	1017330	PtrMemberAccess	ds -> awidth		1017218	0					
ANR	1017331	Identifier	ds		1017218	0					
ANR	1017332	Identifier	awidth		1017218	1					
ANR	1017333	Identifier	width		1017218	1					
ANR	1017334	ExpressionStatement	ds -> span = span	1852:4:55335:55363	1017218	13	True				
ANR	1017335	AssignmentExpression	ds -> span = span		1017218	0		=			
ANR	1017336	PtrMemberAccess	ds -> span		1017218	0					
ANR	1017337	Identifier	ds		1017218	0					
ANR	1017338	Identifier	span		1017218	1					
ANR	1017339	Identifier	span		1017218	1					
ANR	1017340	ExpressionStatement	ds -> factor = factor	1853:4:55369:55399	1017218	14	True				
ANR	1017341	AssignmentExpression	ds -> factor = factor		1017218	0		=			
ANR	1017342	PtrMemberAccess	ds -> factor		1017218	0					
ANR	1017343	Identifier	ds		1017218	0					
ANR	1017344	Identifier	factor		1017218	1					
ANR	1017345	Identifier	factor		1017218	1					
ANR	1017346	ExpressionStatement	ds -> num_planes = num_comps	1854:4:55405:55438	1017218	15	True				
ANR	1017347	AssignmentExpression	ds -> num_planes = num_comps		1017218	0		=			
ANR	1017348	PtrMemberAccess	ds -> num_planes		1017218	0					
ANR	1017349	Identifier	ds		1017218	0					
ANR	1017350	Identifier	num_planes		1017218	1					
ANR	1017351	Identifier	num_comps		1017218	1					
ANR	1017352	ExpressionStatement	ds -> src_bpc = src_bpc	1855:4:55444:55475	1017218	16	True				
ANR	1017353	AssignmentExpression	ds -> src_bpc = src_bpc		1017218	0		=			
ANR	1017354	PtrMemberAccess	ds -> src_bpc		1017218	0					
ANR	1017355	Identifier	ds		1017218	0					
ANR	1017356	Identifier	src_bpc		1017218	1					
ANR	1017357	Identifier	src_bpc		1017218	1					
ANR	1017358	ExpressionStatement	ds -> scaled_data = NULL	1856:4:55481:55509	1017218	17	True				
ANR	1017359	AssignmentExpression	ds -> scaled_data = NULL		1017218	0		=			
ANR	1017360	PtrMemberAccess	ds -> scaled_data		1017218	0					
ANR	1017361	Identifier	ds		1017218	0					
ANR	1017362	Identifier	scaled_data		1017218	1					
ANR	1017363	Identifier	NULL		1017218	1					
ANR	1017364	ExpressionStatement	ds -> scaled_span = bitmap_raster ( ( dst_bpc * dev -> width * upfactor + downfactor - 1 ) / downfactor )	1857:4:55515:55609	1017218	18	True				
ANR	1017365	AssignmentExpression	ds -> scaled_span = bitmap_raster ( ( dst_bpc * dev -> width * upfactor + downfactor - 1 ) / downfactor )		1017218	0		=			
ANR	1017366	PtrMemberAccess	ds -> scaled_span		1017218	0					
ANR	1017367	Identifier	ds		1017218	0					
ANR	1017368	Identifier	scaled_span		1017218	1					
ANR	1017369	CallExpression	bitmap_raster ( ( dst_bpc * dev -> width * upfactor + downfactor - 1 ) / downfactor )		1017218	1					
ANR	1017370	Callee	bitmap_raster		1017218	0					
ANR	1017371	Identifier	bitmap_raster		1017218	0					
ANR	1017372	ArgumentList	( dst_bpc * dev -> width * upfactor + downfactor - 1 ) / downfactor		1017218	1					
ANR	1017373	Argument	( dst_bpc * dev -> width * upfactor + downfactor - 1 ) / downfactor		1017218	0					
ANR	1017374	MultiplicativeExpression	( dst_bpc * dev -> width * upfactor + downfactor - 1 ) / downfactor		1017218	0		/			
ANR	1017375	AdditiveExpression	dst_bpc * dev -> width * upfactor + downfactor - 1		1017218	0		+			
ANR	1017376	MultiplicativeExpression	dst_bpc * dev -> width * upfactor		1017218	0		*			
ANR	1017377	Identifier	dst_bpc		1017218	0					
ANR	1017378	MultiplicativeExpression	dev -> width * upfactor		1017218	1		*			
ANR	1017379	PtrMemberAccess	dev -> width		1017218	0					
ANR	1017380	Identifier	dev		1017218	0					
ANR	1017381	Identifier	width		1017218	1					
ANR	1017382	Identifier	upfactor		1017218	1					
ANR	1017383	AdditiveExpression	downfactor - 1		1017218	1		-			
ANR	1017384	Identifier	downfactor		1017218	0					
ANR	1017385	PrimaryExpression	1		1017218	1					
ANR	1017386	Identifier	downfactor		1017218	1					
ANR	1017387	ExpressionStatement	ds -> apply_cm = apply_cm	1858:4:55615:55647	1017218	19	True				
ANR	1017388	AssignmentExpression	ds -> apply_cm = apply_cm		1017218	0		=			
ANR	1017389	PtrMemberAccess	ds -> apply_cm		1017218	0					
ANR	1017390	Identifier	ds		1017218	0					
ANR	1017391	Identifier	apply_cm		1017218	1					
ANR	1017392	Identifier	apply_cm		1017218	1					
ANR	1017393	ExpressionStatement	ds -> apply_cm_arg = apply_cm_arg	1859:4:55653:55689	1017218	20	True				
ANR	1017394	AssignmentExpression	ds -> apply_cm_arg = apply_cm_arg		1017218	0		=			
ANR	1017395	PtrMemberAccess	ds -> apply_cm_arg		1017218	0					
ANR	1017396	Identifier	ds		1017218	0					
ANR	1017397	Identifier	apply_cm_arg		1017218	1					
ANR	1017398	Identifier	apply_cm_arg		1017218	1					
ANR	1017399	ExpressionStatement	ds -> early_cm = dst_bpc < src_bpc	1860:4:55695:55736	1017218	21	True				
ANR	1017400	AssignmentExpression	ds -> early_cm = dst_bpc < src_bpc		1017218	0		=			
ANR	1017401	PtrMemberAccess	ds -> early_cm		1017218	0					
ANR	1017402	Identifier	ds		1017218	0					
ANR	1017403	Identifier	early_cm		1017218	1					
ANR	1017404	RelationalExpression	dst_bpc < src_bpc		1017218	1		<			
ANR	1017405	Identifier	dst_bpc		1017218	0					
ANR	1017406	Identifier	src_bpc		1017218	1					
ANR	1017407	ExpressionStatement	ds -> post_cm_num_comps = post_cm_num_comps	1861:4:55742:55783	1017218	22	True				
ANR	1017408	AssignmentExpression	ds -> post_cm_num_comps = post_cm_num_comps		1017218	0		=			
ANR	1017409	PtrMemberAccess	ds -> post_cm_num_comps		1017218	0					
ANR	1017410	Identifier	ds		1017218	0					
ANR	1017411	Identifier	post_cm_num_comps		1017218	1					
ANR	1017412	Identifier	post_cm_num_comps		1017218	1					
ANR	1017413	IfStatement	if ( apply_cm )		1017218	23					
ANR	1017414	Condition	apply_cm	1863:8:55794:55801	1017218	0	True				
ANR	1017415	Identifier	apply_cm		1017218	0					
ANR	1017416	CompoundStatement		29:18:1037:1037	1017218	1					
ANR	1017417	ForStatement	for ( i = 0 ; i < post_cm_num_comps ; i ++ )		1017218	0					
ANR	1017418	ForInit	i = 0 ;	1864:13:55819:55824	1017218	0	True				
ANR	1017419	AssignmentExpression	i = 0		1017218	0		=			
ANR	1017420	Identifier	i		1017218	0					
ANR	1017421	PrimaryExpression	0		1017218	1					
ANR	1017422	Condition	i < post_cm_num_comps	1864:20:55826:55846	1017218	1	True				
ANR	1017423	RelationalExpression	i < post_cm_num_comps		1017218	0		<			
ANR	1017424	Identifier	i		1017218	0					
ANR	1017425	Identifier	post_cm_num_comps		1017218	1					
ANR	1017426	PostIncDecOperationExpression	i ++	1864:43:55849:55851	1017218	2	True				
ANR	1017427	Identifier	i		1017218	0					
ANR	1017428	IncDec	++		1017218	1					
ANR	1017429	CompoundStatement		30:48:1087:1087	1017218	3					
ANR	1017430	ExpressionStatement	"ds -> post_cm [ i ] = gs_alloc_bytes ( dev -> memory , post_span * downfactor , ""gx_downscaler(planar_data)"" )"	1865:12:55868:56014	1017218	0	True				
ANR	1017431	AssignmentExpression	"ds -> post_cm [ i ] = gs_alloc_bytes ( dev -> memory , post_span * downfactor , ""gx_downscaler(planar_data)"" )"		1017218	0		=			
ANR	1017432	ArrayIndexing	ds -> post_cm [ i ]		1017218	0					
ANR	1017433	PtrMemberAccess	ds -> post_cm		1017218	0					
ANR	1017434	Identifier	ds		1017218	0					
ANR	1017435	Identifier	post_cm		1017218	1					
ANR	1017436	Identifier	i		1017218	1					
ANR	1017437	CallExpression	"gs_alloc_bytes ( dev -> memory , post_span * downfactor , ""gx_downscaler(planar_data)"" )"		1017218	1					
ANR	1017438	Callee	gs_alloc_bytes		1017218	0					
ANR	1017439	Identifier	gs_alloc_bytes		1017218	0					
ANR	1017440	ArgumentList	dev -> memory		1017218	1					
ANR	1017441	Argument	dev -> memory		1017218	0					
ANR	1017442	PtrMemberAccess	dev -> memory		1017218	0					
ANR	1017443	Identifier	dev		1017218	0					
ANR	1017444	Identifier	memory		1017218	1					
ANR	1017445	Argument	post_span * downfactor		1017218	1					
ANR	1017446	MultiplicativeExpression	post_span * downfactor		1017218	0		*			
ANR	1017447	Identifier	post_span		1017218	0					
ANR	1017448	Identifier	downfactor		1017218	1					
ANR	1017449	Argument	"""gx_downscaler(planar_data)"""		1017218	2					
ANR	1017450	PrimaryExpression	"""gx_downscaler(planar_data)"""		1017218	0					
ANR	1017451	IfStatement	if ( ds -> post_cm [ i ] == NULL )		1017218	1					
ANR	1017452	Condition	ds -> post_cm [ i ] == NULL	1867:16:56032:56053	1017218	0	True				
ANR	1017453	EqualityExpression	ds -> post_cm [ i ] == NULL		1017218	0		==			
ANR	1017454	ArrayIndexing	ds -> post_cm [ i ]		1017218	0					
ANR	1017455	PtrMemberAccess	ds -> post_cm		1017218	0					
ANR	1017456	Identifier	ds		1017218	0					
ANR	1017457	Identifier	post_cm		1017218	1					
ANR	1017458	Identifier	i		1017218	1					
ANR	1017459	Identifier	NULL		1017218	1					
ANR	1017460	CompoundStatement		33:40:1289:1289	1017218	1					
ANR	1017461	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1868:16:56074:56112	1017218	0	True				
ANR	1017462	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1017218	0		=			
ANR	1017463	Identifier	code		1017218	0					
ANR	1017464	CallExpression	gs_note_error ( gs_error_VMerror )		1017218	1					
ANR	1017465	Callee	gs_note_error		1017218	0					
ANR	1017466	Identifier	gs_note_error		1017218	0					
ANR	1017467	ArgumentList	gs_error_VMerror		1017218	1					
ANR	1017468	Argument	gs_error_VMerror		1017218	0					
ANR	1017469	Identifier	gs_error_VMerror		1017218	0					
ANR	1017470	GotoStatement	goto cleanup ;	1869:16:56130:56142	1017218	1	True				
ANR	1017471	Identifier	cleanup		1017218	0					
ANR	1017472	ExpressionStatement	"code = check_trapping ( dev -> memory , trap_w , trap_h , num_comps , comp_order )"	1874:4:56179:56252	1017218	24	True				
ANR	1017473	AssignmentExpression	"code = check_trapping ( dev -> memory , trap_w , trap_h , num_comps , comp_order )"		1017218	0		=			
ANR	1017474	Identifier	code		1017218	0					
ANR	1017475	CallExpression	"check_trapping ( dev -> memory , trap_w , trap_h , num_comps , comp_order )"		1017218	1					
ANR	1017476	Callee	check_trapping		1017218	0					
ANR	1017477	Identifier	check_trapping		1017218	0					
ANR	1017478	ArgumentList	dev -> memory		1017218	1					
ANR	1017479	Argument	dev -> memory		1017218	0					
ANR	1017480	PtrMemberAccess	dev -> memory		1017218	0					
ANR	1017481	Identifier	dev		1017218	0					
ANR	1017482	Identifier	memory		1017218	1					
ANR	1017483	Argument	trap_w		1017218	1					
ANR	1017484	Identifier	trap_w		1017218	0					
ANR	1017485	Argument	trap_h		1017218	2					
ANR	1017486	Identifier	trap_h		1017218	0					
ANR	1017487	Argument	num_comps		1017218	3					
ANR	1017488	Identifier	num_comps		1017218	0					
ANR	1017489	Argument	comp_order		1017218	4					
ANR	1017490	Identifier	comp_order		1017218	0					
ANR	1017491	IfStatement	if ( code < 0 )		1017218	25					
ANR	1017492	Condition	code < 0	1875:8:56262:56269	1017218	0	True				
ANR	1017493	RelationalExpression	code < 0		1017218	0		<			
ANR	1017494	Identifier	code		1017218	0					
ANR	1017495	PrimaryExpression	0		1017218	1					
ANR	1017496	ReturnStatement	return code ;	1876:8:56280:56291	1017218	1	True				
ANR	1017497	Identifier	code		1017218	0					
ANR	1017498	IfStatement	if ( trap_w > 0 || trap_h > 0 )		1017218	26					
ANR	1017499	Condition	trap_w > 0 || trap_h > 0	1878:8:56302:56325	1017218	0	True				
ANR	1017500	OrExpression	trap_w > 0 || trap_h > 0		1017218	0		||			
ANR	1017501	RelationalExpression	trap_w > 0		1017218	0		>			
ANR	1017502	Identifier	trap_w		1017218	0					
ANR	1017503	PrimaryExpression	0		1017218	1					
ANR	1017504	RelationalExpression	trap_h > 0		1017218	1		>			
ANR	1017505	Identifier	trap_h		1017218	0					
ANR	1017506	PrimaryExpression	0		1017218	1					
ANR	1017507	CompoundStatement		44:34:1561:1561	1017218	1					
ANR	1017508	ExpressionStatement	"ds -> claptrap = ClapTrap_Init ( dev -> memory , width , dev -> height , num_comps , comp_order , trap_w , trap_h , get_planar_line_for_trap , ds )"	1879:8:56338:56468	1017218	0	True				
ANR	1017509	AssignmentExpression	"ds -> claptrap = ClapTrap_Init ( dev -> memory , width , dev -> height , num_comps , comp_order , trap_w , trap_h , get_planar_line_for_trap , ds )"		1017218	0		=			
ANR	1017510	PtrMemberAccess	ds -> claptrap		1017218	0					
ANR	1017511	Identifier	ds		1017218	0					
ANR	1017512	Identifier	claptrap		1017218	1					
ANR	1017513	CallExpression	"ClapTrap_Init ( dev -> memory , width , dev -> height , num_comps , comp_order , trap_w , trap_h , get_planar_line_for_trap , ds )"		1017218	1					
ANR	1017514	Callee	ClapTrap_Init		1017218	0					
ANR	1017515	Identifier	ClapTrap_Init		1017218	0					
ANR	1017516	ArgumentList	dev -> memory		1017218	1					
ANR	1017517	Argument	dev -> memory		1017218	0					
ANR	1017518	PtrMemberAccess	dev -> memory		1017218	0					
ANR	1017519	Identifier	dev		1017218	0					
ANR	1017520	Identifier	memory		1017218	1					
ANR	1017521	Argument	width		1017218	1					
ANR	1017522	Identifier	width		1017218	0					
ANR	1017523	Argument	dev -> height		1017218	2					
ANR	1017524	PtrMemberAccess	dev -> height		1017218	0					
ANR	1017525	Identifier	dev		1017218	0					
ANR	1017526	Identifier	height		1017218	1					
ANR	1017527	Argument	num_comps		1017218	3					
ANR	1017528	Identifier	num_comps		1017218	0					
ANR	1017529	Argument	comp_order		1017218	4					
ANR	1017530	Identifier	comp_order		1017218	0					
ANR	1017531	Argument	trap_w		1017218	5					
ANR	1017532	Identifier	trap_w		1017218	0					
ANR	1017533	Argument	trap_h		1017218	6					
ANR	1017534	Identifier	trap_h		1017218	0					
ANR	1017535	Argument	get_planar_line_for_trap		1017218	7					
ANR	1017536	Identifier	get_planar_line_for_trap		1017218	0					
ANR	1017537	Argument	ds		1017218	8					
ANR	1017538	Identifier	ds		1017218	0					
ANR	1017539	IfStatement	if ( ds -> claptrap == NULL )		1017218	1					
ANR	1017540	Condition	ds -> claptrap == NULL	1880:12:56482:56501	1017218	0	True				
ANR	1017541	EqualityExpression	ds -> claptrap == NULL		1017218	0		==			
ANR	1017542	PtrMemberAccess	ds -> claptrap		1017218	0					
ANR	1017543	Identifier	ds		1017218	0					
ANR	1017544	Identifier	claptrap		1017218	1					
ANR	1017545	Identifier	NULL		1017218	1					
ANR	1017546	CompoundStatement		46:34:1737:1737	1017218	1					
ANR	1017547	ExpressionStatement	"emprintf ( dev -> memory , ""Trapping initialisation failed"" )"	1881:12:56518:56573	1017218	0	True				
ANR	1017548	CallExpression	"emprintf ( dev -> memory , ""Trapping initialisation failed"" )"		1017218	0					
ANR	1017549	Callee	emprintf		1017218	0					
ANR	1017550	Identifier	emprintf		1017218	0					
ANR	1017551	ArgumentList	dev -> memory		1017218	1					
ANR	1017552	Argument	dev -> memory		1017218	0					
ANR	1017553	PtrMemberAccess	dev -> memory		1017218	0					
ANR	1017554	Identifier	dev		1017218	0					
ANR	1017555	Identifier	memory		1017218	1					
ANR	1017556	Argument	"""Trapping initialisation failed"""		1017218	1					
ANR	1017557	PrimaryExpression	"""Trapping initialisation failed"""		1017218	0					
ANR	1017558	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1882:12:56587:56625	1017218	1	True				
ANR	1017559	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1017218	0		=			
ANR	1017560	Identifier	code		1017218	0					
ANR	1017561	CallExpression	gs_note_error ( gs_error_VMerror )		1017218	1					
ANR	1017562	Callee	gs_note_error		1017218	0					
ANR	1017563	Identifier	gs_note_error		1017218	0					
ANR	1017564	ArgumentList	gs_error_VMerror		1017218	1					
ANR	1017565	Argument	gs_error_VMerror		1017218	0					
ANR	1017566	Identifier	gs_error_VMerror		1017218	0					
ANR	1017567	GotoStatement	goto cleanup ;	1883:12:56639:56651	1017218	2	True				
ANR	1017568	Identifier	cleanup		1017218	0					
ANR	1017569	ElseStatement	else		1017218	0					
ANR	1017570	ExpressionStatement	ds -> claptrap = NULL	1887:8:56686:56705	1017218	0	True				
ANR	1017571	AssignmentExpression	ds -> claptrap = NULL		1017218	0		=			
ANR	1017572	PtrMemberAccess	ds -> claptrap		1017218	0					
ANR	1017573	Identifier	ds		1017218	0					
ANR	1017574	Identifier	claptrap		1017218	1					
ANR	1017575	Identifier	NULL		1017218	1					
ANR	1017576	ExpressionStatement	"memcpy ( & ds -> params , params , sizeof ( * params ) )"	1889:4:56712:56756	1017218	27	True				
ANR	1017577	CallExpression	"memcpy ( & ds -> params , params , sizeof ( * params ) )"		1017218	0					
ANR	1017578	Callee	memcpy		1017218	0					
ANR	1017579	Identifier	memcpy		1017218	0					
ANR	1017580	ArgumentList	& ds -> params		1017218	1					
ANR	1017581	Argument	& ds -> params		1017218	0					
ANR	1017582	UnaryOperationExpression	& ds -> params		1017218	0					
ANR	1017583	UnaryOperator	&		1017218	0					
ANR	1017584	PtrMemberAccess	ds -> params		1017218	1					
ANR	1017585	Identifier	ds		1017218	0					
ANR	1017586	Identifier	params		1017218	1					
ANR	1017587	Argument	params		1017218	1					
ANR	1017588	Identifier	params		1017218	0					
ANR	1017589	Argument	sizeof ( * params )		1017218	2					
ANR	1017590	SizeofExpression	sizeof ( * params )		1017218	0					
ANR	1017591	Sizeof	sizeof		1017218	0					
ANR	1017592	UnaryOperationExpression	* params		1017218	1					
ANR	1017593	UnaryOperator	*		1017218	0					
ANR	1017594	Identifier	params		1017218	1					
ANR	1017595	ExpressionStatement	ds -> params . raster = span	1890:4:56762:56786	1017218	28	True				
ANR	1017596	AssignmentExpression	ds -> params . raster = span		1017218	0		=			
ANR	1017597	MemberAccess	ds -> params . raster		1017218	0					
ANR	1017598	PtrMemberAccess	ds -> params		1017218	0					
ANR	1017599	Identifier	ds		1017218	0					
ANR	1017600	Identifier	params		1017218	1					
ANR	1017601	Identifier	raster		1017218	1					
ANR	1017602	Identifier	span		1017218	1					
ANR	1017603	ForStatement	for ( i = 0 ; i < num_comps ; i ++ )		1017218	29					
ANR	1017604	ForInit	i = 0 ;	1891:9:56797:56802	1017218	0	True				
ANR	1017605	AssignmentExpression	i = 0		1017218	0		=			
ANR	1017606	Identifier	i		1017218	0					
ANR	1017607	PrimaryExpression	0		1017218	1					
ANR	1017608	Condition	i < num_comps	1891:16:56804:56816	1017218	1	True				
ANR	1017609	RelationalExpression	i < num_comps		1017218	0		<			
ANR	1017610	Identifier	i		1017218	0					
ANR	1017611	Identifier	num_comps		1017218	1					
ANR	1017612	PostIncDecOperationExpression	i ++	1891:31:56819:56821	1017218	2	True				
ANR	1017613	Identifier	i		1017218	0					
ANR	1017614	IncDec	++		1017218	1					
ANR	1017615	CompoundStatement		57:36:2057:2057	1017218	3					
ANR	1017616	ExpressionStatement	"ds -> pre_cm [ i ] = gs_alloc_bytes ( dev -> memory , span * downfactor , ""gx_downscaler(planar_data)"" )"	1892:8:56834:56970	1017218	0	True				
ANR	1017617	AssignmentExpression	"ds -> pre_cm [ i ] = gs_alloc_bytes ( dev -> memory , span * downfactor , ""gx_downscaler(planar_data)"" )"		1017218	0		=			
ANR	1017618	ArrayIndexing	ds -> pre_cm [ i ]		1017218	0					
ANR	1017619	PtrMemberAccess	ds -> pre_cm		1017218	0					
ANR	1017620	Identifier	ds		1017218	0					
ANR	1017621	Identifier	pre_cm		1017218	1					
ANR	1017622	Identifier	i		1017218	1					
ANR	1017623	CallExpression	"gs_alloc_bytes ( dev -> memory , span * downfactor , ""gx_downscaler(planar_data)"" )"		1017218	1					
ANR	1017624	Callee	gs_alloc_bytes		1017218	0					
ANR	1017625	Identifier	gs_alloc_bytes		1017218	0					
ANR	1017626	ArgumentList	dev -> memory		1017218	1					
ANR	1017627	Argument	dev -> memory		1017218	0					
ANR	1017628	PtrMemberAccess	dev -> memory		1017218	0					
ANR	1017629	Identifier	dev		1017218	0					
ANR	1017630	Identifier	memory		1017218	1					
ANR	1017631	Argument	span * downfactor		1017218	1					
ANR	1017632	MultiplicativeExpression	span * downfactor		1017218	0		*			
ANR	1017633	Identifier	span		1017218	0					
ANR	1017634	Identifier	downfactor		1017218	1					
ANR	1017635	Argument	"""gx_downscaler(planar_data)"""		1017218	2					
ANR	1017636	PrimaryExpression	"""gx_downscaler(planar_data)"""		1017218	0					
ANR	1017637	IfStatement	if ( ds -> pre_cm [ i ] == NULL )		1017218	1					
ANR	1017638	Condition	ds -> pre_cm [ i ] == NULL	1894:12:56984:57004	1017218	0	True				
ANR	1017639	EqualityExpression	ds -> pre_cm [ i ] == NULL		1017218	0		==			
ANR	1017640	ArrayIndexing	ds -> pre_cm [ i ]		1017218	0					
ANR	1017641	PtrMemberAccess	ds -> pre_cm		1017218	0					
ANR	1017642	Identifier	ds		1017218	0					
ANR	1017643	Identifier	pre_cm		1017218	1					
ANR	1017644	Identifier	i		1017218	1					
ANR	1017645	Identifier	NULL		1017218	1					
ANR	1017646	CompoundStatement		60:35:2240:2240	1017218	1					
ANR	1017647	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1895:12:57021:57059	1017218	0	True				
ANR	1017648	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1017218	0		=			
ANR	1017649	Identifier	code		1017218	0					
ANR	1017650	CallExpression	gs_note_error ( gs_error_VMerror )		1017218	1					
ANR	1017651	Callee	gs_note_error		1017218	0					
ANR	1017652	Identifier	gs_note_error		1017218	0					
ANR	1017653	ArgumentList	gs_error_VMerror		1017218	1					
ANR	1017654	Argument	gs_error_VMerror		1017218	0					
ANR	1017655	Identifier	gs_error_VMerror		1017218	0					
ANR	1017656	GotoStatement	goto cleanup ;	1896:12:57073:57085	1017218	1	True				
ANR	1017657	Identifier	cleanup		1017218	0					
ANR	1017658	IfStatement	if ( upfactor > 1 )		1017218	30					
ANR	1017659	Condition	upfactor > 1	1899:8:57111:57122	1017218	0	True				
ANR	1017660	RelationalExpression	upfactor > 1		1017218	0		>			
ANR	1017661	Identifier	upfactor		1017218	0					
ANR	1017662	PrimaryExpression	1		1017218	1					
ANR	1017663	CompoundStatement		65:22:2358:2358	1017218	1					
ANR	1017664	ExpressionStatement	"ds -> scaled_data = gs_alloc_bytes ( dev -> memory , ds -> scaled_span * upfactor * num_comps , ""gx_downscaler(scaled_data)"" )"	1900:8:57135:57291	1017218	0	True				
ANR	1017665	AssignmentExpression	"ds -> scaled_data = gs_alloc_bytes ( dev -> memory , ds -> scaled_span * upfactor * num_comps , ""gx_downscaler(scaled_data)"" )"		1017218	0		=			
ANR	1017666	PtrMemberAccess	ds -> scaled_data		1017218	0					
ANR	1017667	Identifier	ds		1017218	0					
ANR	1017668	Identifier	scaled_data		1017218	1					
ANR	1017669	CallExpression	"gs_alloc_bytes ( dev -> memory , ds -> scaled_span * upfactor * num_comps , ""gx_downscaler(scaled_data)"" )"		1017218	1					
ANR	1017670	Callee	gs_alloc_bytes		1017218	0					
ANR	1017671	Identifier	gs_alloc_bytes		1017218	0					
ANR	1017672	ArgumentList	dev -> memory		1017218	1					
ANR	1017673	Argument	dev -> memory		1017218	0					
ANR	1017674	PtrMemberAccess	dev -> memory		1017218	0					
ANR	1017675	Identifier	dev		1017218	0					
ANR	1017676	Identifier	memory		1017218	1					
ANR	1017677	Argument	ds -> scaled_span * upfactor * num_comps		1017218	1					
ANR	1017678	MultiplicativeExpression	ds -> scaled_span * upfactor * num_comps		1017218	0		*			
ANR	1017679	PtrMemberAccess	ds -> scaled_span		1017218	0					
ANR	1017680	Identifier	ds		1017218	0					
ANR	1017681	Identifier	scaled_span		1017218	1					
ANR	1017682	MultiplicativeExpression	upfactor * num_comps		1017218	1		*			
ANR	1017683	Identifier	upfactor		1017218	0					
ANR	1017684	Identifier	num_comps		1017218	1					
ANR	1017685	Argument	"""gx_downscaler(scaled_data)"""		1017218	2					
ANR	1017686	PrimaryExpression	"""gx_downscaler(scaled_data)"""		1017218	0					
ANR	1017687	IfStatement	if ( ds -> scaled_data == NULL )		1017218	1					
ANR	1017688	Condition	ds -> scaled_data == NULL	1902:12:57305:57327	1017218	0	True				
ANR	1017689	EqualityExpression	ds -> scaled_data == NULL		1017218	0		==			
ANR	1017690	PtrMemberAccess	ds -> scaled_data		1017218	0					
ANR	1017691	Identifier	ds		1017218	0					
ANR	1017692	Identifier	scaled_data		1017218	1					
ANR	1017693	Identifier	NULL		1017218	1					
ANR	1017694	CompoundStatement		68:37:2563:2563	1017218	1					
ANR	1017695	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1903:12:57344:57382	1017218	0	True				
ANR	1017696	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1017218	0		=			
ANR	1017697	Identifier	code		1017218	0					
ANR	1017698	CallExpression	gs_note_error ( gs_error_VMerror )		1017218	1					
ANR	1017699	Callee	gs_note_error		1017218	0					
ANR	1017700	Identifier	gs_note_error		1017218	0					
ANR	1017701	ArgumentList	gs_error_VMerror		1017218	1					
ANR	1017702	Argument	gs_error_VMerror		1017218	0					
ANR	1017703	Identifier	gs_error_VMerror		1017218	0					
ANR	1017704	GotoStatement	goto cleanup ;	1904:12:57396:57408	1017218	1	True				
ANR	1017705	Identifier	cleanup		1017218	0					
ANR	1017706	IfStatement	if ( ( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( factor == 32 ) )		1017218	31					
ANR	1017707	Condition	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( factor == 32 )	1908:8:57435:57484	1017218	0	True				
ANR	1017708	AndExpression	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( factor == 32 )		1017218	0		&&			
ANR	1017709	EqualityExpression	src_bpc == 8		1017218	0		==			
ANR	1017710	Identifier	src_bpc		1017218	0					
ANR	1017711	PrimaryExpression	8		1017218	1					
ANR	1017712	AndExpression	( dst_bpc == 8 ) && ( factor == 32 )		1017218	1		&&			
ANR	1017713	EqualityExpression	dst_bpc == 8		1017218	0		==			
ANR	1017714	Identifier	dst_bpc		1017218	0					
ANR	1017715	PrimaryExpression	8		1017218	1					
ANR	1017716	EqualityExpression	factor == 32		1017218	1		==			
ANR	1017717	Identifier	factor		1017218	0					
ANR	1017718	PrimaryExpression	32		1017218	1					
ANR	1017719	CompoundStatement		74:60:2720:2720	1017218	1					
ANR	1017720	ExpressionStatement	core = & down_core8_3_2	1909:8:57497:57519	1017218	0	True				
ANR	1017721	AssignmentExpression	core = & down_core8_3_2		1017218	0		=			
ANR	1017722	Identifier	core		1017218	0					
ANR	1017723	UnaryOperationExpression	& down_core8_3_2		1017218	1					
ANR	1017724	UnaryOperator	&		1017218	0					
ANR	1017725	Identifier	down_core8_3_2		1017218	1					
ANR	1017726	ElseStatement	else		1017218	0					
ANR	1017727	IfStatement	if ( ( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( factor == 34 ) )		1017218	0					
ANR	1017728	Condition	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( factor == 34 )	1910:15:57536:57585	1017218	0	True				
ANR	1017729	AndExpression	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( factor == 34 )		1017218	0		&&			
ANR	1017730	EqualityExpression	src_bpc == 8		1017218	0		==			
ANR	1017731	Identifier	src_bpc		1017218	0					
ANR	1017732	PrimaryExpression	8		1017218	1					
ANR	1017733	AndExpression	( dst_bpc == 8 ) && ( factor == 34 )		1017218	1		&&			
ANR	1017734	EqualityExpression	dst_bpc == 8		1017218	0		==			
ANR	1017735	Identifier	dst_bpc		1017218	0					
ANR	1017736	PrimaryExpression	8		1017218	1					
ANR	1017737	EqualityExpression	factor == 34		1017218	1		==			
ANR	1017738	Identifier	factor		1017218	0					
ANR	1017739	PrimaryExpression	34		1017218	1					
ANR	1017740	CompoundStatement		76:67:2821:2821	1017218	1					
ANR	1017741	ExpressionStatement	core = & down_core8_3_4	1911:8:57598:57620	1017218	0	True				
ANR	1017742	AssignmentExpression	core = & down_core8_3_4		1017218	0		=			
ANR	1017743	Identifier	core		1017218	0					
ANR	1017744	UnaryOperationExpression	& down_core8_3_4		1017218	1					
ANR	1017745	UnaryOperator	&		1017218	0					
ANR	1017746	Identifier	down_core8_3_4		1017218	1					
ANR	1017747	ElseStatement	else		1017218	0					
ANR	1017748	IfStatement	if ( factor > 8 )		1017218	0					
ANR	1017749	Condition	factor > 8	1912:15:57637:57646	1017218	0	True				
ANR	1017750	RelationalExpression	factor > 8		1017218	0		>			
ANR	1017751	Identifier	factor		1017218	0					
ANR	1017752	PrimaryExpression	8		1017218	1					
ANR	1017753	CompoundStatement		78:27:2882:2882	1017218	1					
ANR	1017754	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	1913:8:57659:57700	1017218	0	True				
ANR	1017755	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		1017218	0		=			
ANR	1017756	Identifier	code		1017218	0					
ANR	1017757	CallExpression	gs_note_error ( gs_error_rangecheck )		1017218	1					
ANR	1017758	Callee	gs_note_error		1017218	0					
ANR	1017759	Identifier	gs_note_error		1017218	0					
ANR	1017760	ArgumentList	gs_error_rangecheck		1017218	1					
ANR	1017761	Argument	gs_error_rangecheck		1017218	0					
ANR	1017762	Identifier	gs_error_rangecheck		1017218	0					
ANR	1017763	GotoStatement	goto cleanup ;	1914:8:57710:57722	1017218	1	True				
ANR	1017764	Identifier	cleanup		1017218	0					
ANR	1017765	ElseStatement	else		1017218	0					
ANR	1017766	IfStatement	if ( dst_bpc == 1 )		1017218	0					
ANR	1017767	Condition	dst_bpc == 1	1915:15:57739:57750	1017218	0	True				
ANR	1017768	EqualityExpression	dst_bpc == 1		1017218	0		==			
ANR	1017769	Identifier	dst_bpc		1017218	0					
ANR	1017770	PrimaryExpression	1		1017218	1					
ANR	1017771	CompoundStatement		81:29:2986:2986	1017218	1					
ANR	1017772	IfStatement	if ( mfs > 1 )		1017218	0					
ANR	1017773	Condition	mfs > 1	1916:12:57767:57773	1017218	0	True				
ANR	1017774	RelationalExpression	mfs > 1		1017218	0		>			
ANR	1017775	Identifier	mfs		1017218	0					
ANR	1017776	PrimaryExpression	1		1017218	1					
ANR	1017777	ExpressionStatement	core = & down_core_mfs	1917:12:57788:57809	1017218	1	True				
ANR	1017778	AssignmentExpression	core = & down_core_mfs		1017218	0		=			
ANR	1017779	Identifier	core		1017218	0					
ANR	1017780	UnaryOperationExpression	& down_core_mfs		1017218	1					
ANR	1017781	UnaryOperator	&		1017218	0					
ANR	1017782	Identifier	down_core_mfs		1017218	1					
ANR	1017783	ElseStatement	else		1017218	0					
ANR	1017784	IfStatement	if ( factor == 4 )		1017218	0					
ANR	1017785	Condition	factor == 4	1918:17:57828:57838	1017218	0	True				
ANR	1017786	EqualityExpression	factor == 4		1017218	0		==			
ANR	1017787	Identifier	factor		1017218	0					
ANR	1017788	PrimaryExpression	4		1017218	1					
ANR	1017789	ExpressionStatement	core = & down_core_4	1919:12:57853:57872	1017218	1	True				
ANR	1017790	AssignmentExpression	core = & down_core_4		1017218	0		=			
ANR	1017791	Identifier	core		1017218	0					
ANR	1017792	UnaryOperationExpression	& down_core_4		1017218	1					
ANR	1017793	UnaryOperator	&		1017218	0					
ANR	1017794	Identifier	down_core_4		1017218	1					
ANR	1017795	ElseStatement	else		1017218	0					
ANR	1017796	IfStatement	if ( factor == 3 )		1017218	0					
ANR	1017797	Condition	factor == 3	1920:17:57891:57901	1017218	0	True				
ANR	1017798	EqualityExpression	factor == 3		1017218	0		==			
ANR	1017799	Identifier	factor		1017218	0					
ANR	1017800	PrimaryExpression	3		1017218	1					
ANR	1017801	ExpressionStatement	core = & down_core_3	1921:12:57916:57935	1017218	1	True				
ANR	1017802	AssignmentExpression	core = & down_core_3		1017218	0		=			
ANR	1017803	Identifier	core		1017218	0					
ANR	1017804	UnaryOperationExpression	& down_core_3		1017218	1					
ANR	1017805	UnaryOperator	&		1017218	0					
ANR	1017806	Identifier	down_core_3		1017218	1					
ANR	1017807	ElseStatement	else		1017218	0					
ANR	1017808	IfStatement	if ( factor == 2 )		1017218	0					
ANR	1017809	Condition	factor == 2	1922:17:57954:57964	1017218	0	True				
ANR	1017810	EqualityExpression	factor == 2		1017218	0		==			
ANR	1017811	Identifier	factor		1017218	0					
ANR	1017812	PrimaryExpression	2		1017218	1					
ANR	1017813	ExpressionStatement	core = & down_core_2	1923:12:57979:57998	1017218	1	True				
ANR	1017814	AssignmentExpression	core = & down_core_2		1017218	0		=			
ANR	1017815	Identifier	core		1017218	0					
ANR	1017816	UnaryOperationExpression	& down_core_2		1017218	1					
ANR	1017817	UnaryOperator	&		1017218	0					
ANR	1017818	Identifier	down_core_2		1017218	1					
ANR	1017819	ElseStatement	else		1017218	0					
ANR	1017820	IfStatement	if ( factor == 1 )		1017218	0					
ANR	1017821	Condition	factor == 1	1924:17:58017:58027	1017218	0	True				
ANR	1017822	EqualityExpression	factor == 1		1017218	0		==			
ANR	1017823	Identifier	factor		1017218	0					
ANR	1017824	PrimaryExpression	1		1017218	1					
ANR	1017825	ExpressionStatement	core = & down_core_1	1925:12:58042:58061	1017218	1	True				
ANR	1017826	AssignmentExpression	core = & down_core_1		1017218	0		=			
ANR	1017827	Identifier	core		1017218	0					
ANR	1017828	UnaryOperationExpression	& down_core_1		1017218	1					
ANR	1017829	UnaryOperator	&		1017218	0					
ANR	1017830	Identifier	down_core_1		1017218	1					
ANR	1017831	ElseStatement	else		1017218	0					
ANR	1017832	ExpressionStatement	core = & down_core	1927:12:58088:58105	1017218	0	True				
ANR	1017833	AssignmentExpression	core = & down_core		1017218	0		=			
ANR	1017834	Identifier	core		1017218	0					
ANR	1017835	UnaryOperationExpression	& down_core		1017218	1					
ANR	1017836	UnaryOperator	&		1017218	0					
ANR	1017837	Identifier	down_core		1017218	1					
ANR	1017838	ElseStatement	else		1017218	0					
ANR	1017839	IfStatement	if ( factor == 1 )		1017218	0					
ANR	1017840	Condition	factor == 1	1928:15:58122:58132	1017218	0	True				
ANR	1017841	EqualityExpression	factor == 1		1017218	0		==			
ANR	1017842	Identifier	factor		1017218	0					
ANR	1017843	PrimaryExpression	1		1017218	1					
ANR	1017844	ExpressionStatement	core = NULL	1929:8:58143:58154	1017218	1	True				
ANR	1017845	AssignmentExpression	core = NULL		1017218	0		=			
ANR	1017846	Identifier	core		1017218	0					
ANR	1017847	Identifier	NULL		1017218	1					
ANR	1017848	ElseStatement	else		1017218	0					
ANR	1017849	IfStatement	if ( src_bpc == 16 )		1017218	0					
ANR	1017850	Condition	src_bpc == 16	1930:13:58169:58181	1017218	0	True				
ANR	1017851	EqualityExpression	src_bpc == 16		1017218	0		==			
ANR	1017852	Identifier	src_bpc		1017218	0					
ANR	1017853	PrimaryExpression	16		1017218	1					
ANR	1017854	ExpressionStatement	core = & down_core16	1931:8:58192:58211	1017218	1	True				
ANR	1017855	AssignmentExpression	core = & down_core16		1017218	0		=			
ANR	1017856	Identifier	core		1017218	0					
ANR	1017857	UnaryOperationExpression	& down_core16		1017218	1					
ANR	1017858	UnaryOperator	&		1017218	0					
ANR	1017859	Identifier	down_core16		1017218	1					
ANR	1017860	ElseStatement	else		1017218	0					
ANR	1017861	IfStatement	if ( factor == 4 )		1017218	0					
ANR	1017862	Condition	factor == 4	1932:13:58226:58236	1017218	0	True				
ANR	1017863	EqualityExpression	factor == 4		1017218	0		==			
ANR	1017864	Identifier	factor		1017218	0					
ANR	1017865	PrimaryExpression	4		1017218	1					
ANR	1017866	ExpressionStatement	core = & down_core8_4	1933:8:58247:58267	1017218	1	True				
ANR	1017867	AssignmentExpression	core = & down_core8_4		1017218	0		=			
ANR	1017868	Identifier	core		1017218	0					
ANR	1017869	UnaryOperationExpression	& down_core8_4		1017218	1					
ANR	1017870	UnaryOperator	&		1017218	0					
ANR	1017871	Identifier	down_core8_4		1017218	1					
ANR	1017872	ElseStatement	else		1017218	0					
ANR	1017873	IfStatement	if ( factor == 3 )		1017218	0					
ANR	1017874	Condition	factor == 3	1934:13:58282:58292	1017218	0	True				
ANR	1017875	EqualityExpression	factor == 3		1017218	0		==			
ANR	1017876	Identifier	factor		1017218	0					
ANR	1017877	PrimaryExpression	3		1017218	1					
ANR	1017878	ExpressionStatement	core = & down_core8_3	1935:8:58303:58323	1017218	1	True				
ANR	1017879	AssignmentExpression	core = & down_core8_3		1017218	0		=			
ANR	1017880	Identifier	core		1017218	0					
ANR	1017881	UnaryOperationExpression	& down_core8_3		1017218	1					
ANR	1017882	UnaryOperator	&		1017218	0					
ANR	1017883	Identifier	down_core8_3		1017218	1					
ANR	1017884	ElseStatement	else		1017218	0					
ANR	1017885	IfStatement	if ( factor == 2 )		1017218	0					
ANR	1017886	Condition	factor == 2	1936:13:58338:58348	1017218	0	True				
ANR	1017887	EqualityExpression	factor == 2		1017218	0		==			
ANR	1017888	Identifier	factor		1017218	0					
ANR	1017889	PrimaryExpression	2		1017218	1					
ANR	1017890	ExpressionStatement	core = & down_core8_2	1937:8:58359:58379	1017218	1	True				
ANR	1017891	AssignmentExpression	core = & down_core8_2		1017218	0		=			
ANR	1017892	Identifier	core		1017218	0					
ANR	1017893	UnaryOperationExpression	& down_core8_2		1017218	1					
ANR	1017894	UnaryOperator	&		1017218	0					
ANR	1017895	Identifier	down_core8_2		1017218	1					
ANR	1017896	ElseStatement	else		1017218	0					
ANR	1017897	ExpressionStatement	core = & down_core8	1939:8:58398:58416	1017218	0	True				
ANR	1017898	AssignmentExpression	core = & down_core8		1017218	0		=			
ANR	1017899	Identifier	core		1017218	0					
ANR	1017900	UnaryOperationExpression	& down_core8		1017218	1					
ANR	1017901	UnaryOperator	&		1017218	0					
ANR	1017902	Identifier	down_core8		1017218	1					
ANR	1017903	ExpressionStatement	ds -> down_core = core	1940:4:58422:58442	1017218	32	True				
ANR	1017904	AssignmentExpression	ds -> down_core = core		1017218	0		=			
ANR	1017905	PtrMemberAccess	ds -> down_core		1017218	0					
ANR	1017906	Identifier	ds		1017218	0					
ANR	1017907	Identifier	down_core		1017218	1					
ANR	1017908	Identifier	core		1017218	1					
ANR	1017909	IfStatement	if ( mfs > 1 )		1017218	33					
ANR	1017910	Condition	mfs > 1	1942:8:58453:58459	1017218	0	True				
ANR	1017911	RelationalExpression	mfs > 1		1017218	0		>			
ANR	1017912	Identifier	mfs		1017218	0					
ANR	1017913	PrimaryExpression	1		1017218	1					
ANR	1017914	CompoundStatement		108:17:3695:3695	1017218	1					
ANR	1017915	ExpressionStatement	"ds -> mfs_data = ( byte * ) gs_alloc_bytes ( dev -> memory , ( width + 1 ) * num_comps , ""gx_downscaler(mfs)"" )"	1943:8:58472:58659	1017218	0	True				
ANR	1017916	AssignmentExpression	"ds -> mfs_data = ( byte * ) gs_alloc_bytes ( dev -> memory , ( width + 1 ) * num_comps , ""gx_downscaler(mfs)"" )"		1017218	0		=			
ANR	1017917	PtrMemberAccess	ds -> mfs_data		1017218	0					
ANR	1017918	Identifier	ds		1017218	0					
ANR	1017919	Identifier	mfs_data		1017218	1					
ANR	1017920	CastExpression	"( byte * ) gs_alloc_bytes ( dev -> memory , ( width + 1 ) * num_comps , ""gx_downscaler(mfs)"" )"		1017218	1					
ANR	1017921	CastTarget	byte *		1017218	0					
ANR	1017922	CallExpression	"gs_alloc_bytes ( dev -> memory , ( width + 1 ) * num_comps , ""gx_downscaler(mfs)"" )"		1017218	1					
ANR	1017923	Callee	gs_alloc_bytes		1017218	0					
ANR	1017924	Identifier	gs_alloc_bytes		1017218	0					
ANR	1017925	ArgumentList	dev -> memory		1017218	1					
ANR	1017926	Argument	dev -> memory		1017218	0					
ANR	1017927	PtrMemberAccess	dev -> memory		1017218	0					
ANR	1017928	Identifier	dev		1017218	0					
ANR	1017929	Identifier	memory		1017218	1					
ANR	1017930	Argument	( width + 1 ) * num_comps		1017218	1					
ANR	1017931	MultiplicativeExpression	( width + 1 ) * num_comps		1017218	0		*			
ANR	1017932	AdditiveExpression	width + 1		1017218	0		+			
ANR	1017933	Identifier	width		1017218	0					
ANR	1017934	PrimaryExpression	1		1017218	1					
ANR	1017935	Identifier	num_comps		1017218	1					
ANR	1017936	Argument	"""gx_downscaler(mfs)"""		1017218	2					
ANR	1017937	PrimaryExpression	"""gx_downscaler(mfs)"""		1017218	0					
ANR	1017938	IfStatement	if ( ds -> mfs_data == NULL )		1017218	1					
ANR	1017939	Condition	ds -> mfs_data == NULL	1946:12:58673:58692	1017218	0	True				
ANR	1017940	EqualityExpression	ds -> mfs_data == NULL		1017218	0		==			
ANR	1017941	PtrMemberAccess	ds -> mfs_data		1017218	0					
ANR	1017942	Identifier	ds		1017218	0					
ANR	1017943	Identifier	mfs_data		1017218	1					
ANR	1017944	Identifier	NULL		1017218	1					
ANR	1017945	CompoundStatement		112:34:3928:3928	1017218	1					
ANR	1017946	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1947:12:58709:58747	1017218	0	True				
ANR	1017947	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1017218	0		=			
ANR	1017948	Identifier	code		1017218	0					
ANR	1017949	CallExpression	gs_note_error ( gs_error_VMerror )		1017218	1					
ANR	1017950	Callee	gs_note_error		1017218	0					
ANR	1017951	Identifier	gs_note_error		1017218	0					
ANR	1017952	ArgumentList	gs_error_VMerror		1017218	1					
ANR	1017953	Argument	gs_error_VMerror		1017218	0					
ANR	1017954	Identifier	gs_error_VMerror		1017218	0					
ANR	1017955	GotoStatement	goto cleanup ;	1948:12:58761:58773	1017218	1	True				
ANR	1017956	Identifier	cleanup		1017218	0					
ANR	1017957	ExpressionStatement	"memset ( ds -> mfs_data , 0 , ( width + 1 ) * num_comps )"	1950:8:58793:58839	1017218	2	True				
ANR	1017958	CallExpression	"memset ( ds -> mfs_data , 0 , ( width + 1 ) * num_comps )"		1017218	0					
ANR	1017959	Callee	memset		1017218	0					
ANR	1017960	Identifier	memset		1017218	0					
ANR	1017961	ArgumentList	ds -> mfs_data		1017218	1					
ANR	1017962	Argument	ds -> mfs_data		1017218	0					
ANR	1017963	PtrMemberAccess	ds -> mfs_data		1017218	0					
ANR	1017964	Identifier	ds		1017218	0					
ANR	1017965	Identifier	mfs_data		1017218	1					
ANR	1017966	Argument	0		1017218	1					
ANR	1017967	PrimaryExpression	0		1017218	0					
ANR	1017968	Argument	( width + 1 ) * num_comps		1017218	2					
ANR	1017969	MultiplicativeExpression	( width + 1 ) * num_comps		1017218	0		*			
ANR	1017970	AdditiveExpression	width + 1		1017218	0		+			
ANR	1017971	Identifier	width		1017218	0					
ANR	1017972	PrimaryExpression	1		1017218	1					
ANR	1017973	Identifier	num_comps		1017218	1					
ANR	1017974	IfStatement	if ( dst_bpc == 1 )		1017218	34					
ANR	1017975	Condition	dst_bpc == 1	1952:8:58855:58866	1017218	0	True				
ANR	1017976	EqualityExpression	dst_bpc == 1		1017218	0		==			
ANR	1017977	Identifier	dst_bpc		1017218	0					
ANR	1017978	PrimaryExpression	1		1017218	1					
ANR	1017979	CompoundStatement		118:22:4102:4102	1017218	1					
ANR	1017980	ExpressionStatement	"ds -> errors = ( int * ) gs_alloc_bytes ( dev -> memory , num_comps * ( width + 3 ) * sizeof ( int ) , ""gx_downscaler(errors)"" )"	1953:8:58879:59070	1017218	0	True				
ANR	1017981	AssignmentExpression	"ds -> errors = ( int * ) gs_alloc_bytes ( dev -> memory , num_comps * ( width + 3 ) * sizeof ( int ) , ""gx_downscaler(errors)"" )"		1017218	0		=			
ANR	1017982	PtrMemberAccess	ds -> errors		1017218	0					
ANR	1017983	Identifier	ds		1017218	0					
ANR	1017984	Identifier	errors		1017218	1					
ANR	1017985	CastExpression	"( int * ) gs_alloc_bytes ( dev -> memory , num_comps * ( width + 3 ) * sizeof ( int ) , ""gx_downscaler(errors)"" )"		1017218	1					
ANR	1017986	CastTarget	int *		1017218	0					
ANR	1017987	CallExpression	"gs_alloc_bytes ( dev -> memory , num_comps * ( width + 3 ) * sizeof ( int ) , ""gx_downscaler(errors)"" )"		1017218	1					
ANR	1017988	Callee	gs_alloc_bytes		1017218	0					
ANR	1017989	Identifier	gs_alloc_bytes		1017218	0					
ANR	1017990	ArgumentList	dev -> memory		1017218	1					
ANR	1017991	Argument	dev -> memory		1017218	0					
ANR	1017992	PtrMemberAccess	dev -> memory		1017218	0					
ANR	1017993	Identifier	dev		1017218	0					
ANR	1017994	Identifier	memory		1017218	1					
ANR	1017995	Argument	num_comps * ( width + 3 ) * sizeof ( int )		1017218	1					
ANR	1017996	MultiplicativeExpression	num_comps * ( width + 3 ) * sizeof ( int )		1017218	0		*			
ANR	1017997	Identifier	num_comps		1017218	0					
ANR	1017998	MultiplicativeExpression	( width + 3 ) * sizeof ( int )		1017218	1		*			
ANR	1017999	AdditiveExpression	width + 3		1017218	0		+			
ANR	1018000	Identifier	width		1017218	0					
ANR	1018001	PrimaryExpression	3		1017218	1					
ANR	1018002	SizeofExpression	sizeof ( int )		1017218	1					
ANR	1018003	Sizeof	sizeof		1017218	0					
ANR	1018004	SizeofOperand	int		1017218	1					
ANR	1018005	Argument	"""gx_downscaler(errors)"""		1017218	2					
ANR	1018006	PrimaryExpression	"""gx_downscaler(errors)"""		1017218	0					
ANR	1018007	IfStatement	if ( ds -> errors == NULL )		1017218	1					
ANR	1018008	Condition	ds -> errors == NULL	1956:12:59084:59101	1017218	0	True				
ANR	1018009	EqualityExpression	ds -> errors == NULL		1017218	0		==			
ANR	1018010	PtrMemberAccess	ds -> errors		1017218	0					
ANR	1018011	Identifier	ds		1017218	0					
ANR	1018012	Identifier	errors		1017218	1					
ANR	1018013	Identifier	NULL		1017218	1					
ANR	1018014	CompoundStatement		122:32:4337:4337	1017218	1					
ANR	1018015	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	1957:12:59118:59156	1017218	0	True				
ANR	1018016	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1017218	0		=			
ANR	1018017	Identifier	code		1017218	0					
ANR	1018018	CallExpression	gs_note_error ( gs_error_VMerror )		1017218	1					
ANR	1018019	Callee	gs_note_error		1017218	0					
ANR	1018020	Identifier	gs_note_error		1017218	0					
ANR	1018021	ArgumentList	gs_error_VMerror		1017218	1					
ANR	1018022	Argument	gs_error_VMerror		1017218	0					
ANR	1018023	Identifier	gs_error_VMerror		1017218	0					
ANR	1018024	GotoStatement	goto cleanup ;	1958:12:59170:59182	1017218	1	True				
ANR	1018025	Identifier	cleanup		1017218	0					
ANR	1018026	ExpressionStatement	"memset ( ds -> errors , 0 , num_comps * ( width + 3 ) * sizeof ( int ) )"	1960:8:59202:59260	1017218	2	True				
ANR	1018027	CallExpression	"memset ( ds -> errors , 0 , num_comps * ( width + 3 ) * sizeof ( int ) )"		1017218	0					
ANR	1018028	Callee	memset		1017218	0					
ANR	1018029	Identifier	memset		1017218	0					
ANR	1018030	ArgumentList	ds -> errors		1017218	1					
ANR	1018031	Argument	ds -> errors		1017218	0					
ANR	1018032	PtrMemberAccess	ds -> errors		1017218	0					
ANR	1018033	Identifier	ds		1017218	0					
ANR	1018034	Identifier	errors		1017218	1					
ANR	1018035	Argument	0		1017218	1					
ANR	1018036	PrimaryExpression	0		1017218	0					
ANR	1018037	Argument	num_comps * ( width + 3 ) * sizeof ( int )		1017218	2					
ANR	1018038	MultiplicativeExpression	num_comps * ( width + 3 ) * sizeof ( int )		1017218	0		*			
ANR	1018039	Identifier	num_comps		1017218	0					
ANR	1018040	MultiplicativeExpression	( width + 3 ) * sizeof ( int )		1017218	1		*			
ANR	1018041	AdditiveExpression	width + 3		1017218	0		+			
ANR	1018042	Identifier	width		1017218	0					
ANR	1018043	PrimaryExpression	3		1017218	1					
ANR	1018044	SizeofExpression	sizeof ( int )		1017218	1					
ANR	1018045	Sizeof	sizeof		1017218	0					
ANR	1018046	SizeofOperand	int		1017218	1					
ANR	1018047	ReturnStatement	return 0 ;	1963:4:59273:59281	1017218	35	True				
ANR	1018048	PrimaryExpression	0		1017218	0					
ANR	1018049	Label	cleanup :	1965:2:59286:59293	1017218	36	True				
ANR	1018050	Identifier	cleanup		1017218	0					
ANR	1018051	ExpressionStatement	gx_downscaler_fin ( ds )	1966:4:59299:59320	1017218	37	True				
ANR	1018052	CallExpression	gx_downscaler_fin ( ds )		1017218	0					
ANR	1018053	Callee	gx_downscaler_fin		1017218	0					
ANR	1018054	Identifier	gx_downscaler_fin		1017218	0					
ANR	1018055	ArgumentList	ds		1017218	1					
ANR	1018056	Argument	ds		1017218	0					
ANR	1018057	Identifier	ds		1017218	0					
ANR	1018058	ReturnStatement	return code ;	1967:4:59326:59337	1017218	38	True				
ANR	1018059	Identifier	code		1017218	0					
ANR	1018060	ReturnType	int		1017218	1					
ANR	1018061	Identifier	gx_downscaler_init_planar_trapped_cm		1017218	2					
ANR	1018062	ParameterList	"gx_downscaler_t * ds , gx_device * dev , gs_get_bits_params_t * params , int num_comps , int factor , int mfs , int src_bpc , int dst_bpc , int trap_w , int trap_h , const int * comp_order , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps"		1017218	3					
ANR	1018063	Parameter	gx_downscaler_t * ds	1821:41:53795:53818	1017218	0	True				
ANR	1018064	ParameterType	gx_downscaler_t *		1017218	0					
ANR	1018065	Identifier	ds		1017218	1					
ANR	1018066	Parameter	gx_device * dev	1822:41:53862:53886	1017218	1	True				
ANR	1018067	ParameterType	gx_device *		1017218	0					
ANR	1018068	Identifier	dev		1017218	1					
ANR	1018069	Parameter	gs_get_bits_params_t * params	1823:41:53930:53957	1017218	2	True				
ANR	1018070	ParameterType	gs_get_bits_params_t *		1017218	0					
ANR	1018071	Identifier	params		1017218	1					
ANR	1018072	Parameter	int num_comps	1824:41:54001:54031	1017218	3	True				
ANR	1018073	ParameterType	int		1017218	0					
ANR	1018074	Identifier	num_comps		1017218	1					
ANR	1018075	Parameter	int factor	1825:41:54075:54102	1017218	4	True				
ANR	1018076	ParameterType	int		1017218	0					
ANR	1018077	Identifier	factor		1017218	1					
ANR	1018078	Parameter	int mfs	1826:41:54146:54170	1017218	5	True				
ANR	1018079	ParameterType	int		1017218	0					
ANR	1018080	Identifier	mfs		1017218	1					
ANR	1018081	Parameter	int src_bpc	1827:41:54214:54242	1017218	6	True				
ANR	1018082	ParameterType	int		1017218	0					
ANR	1018083	Identifier	src_bpc		1017218	1					
ANR	1018084	Parameter	int dst_bpc	1828:41:54286:54314	1017218	7	True				
ANR	1018085	ParameterType	int		1017218	0					
ANR	1018086	Identifier	dst_bpc		1017218	1					
ANR	1018087	Parameter	int trap_w	1829:41:54358:54385	1017218	8	True				
ANR	1018088	ParameterType	int		1017218	0					
ANR	1018089	Identifier	trap_w		1017218	1					
ANR	1018090	Parameter	int trap_h	1830:41:54429:54456	1017218	9	True				
ANR	1018091	ParameterType	int		1017218	0					
ANR	1018092	Identifier	trap_h		1017218	1					
ANR	1018093	Parameter	const int * comp_order	1831:41:54500:54531	1017218	10	True				
ANR	1018094	ParameterType	const int *		1017218	0					
ANR	1018095	Identifier	comp_order		1017218	1					
ANR	1018096	Parameter	gx_downscale_cm_fn * apply_cm	1832:41:54575:54604	1017218	11	True				
ANR	1018097	ParameterType	gx_downscale_cm_fn *		1017218	0					
ANR	1018098	Identifier	apply_cm		1017218	1					
ANR	1018099	Parameter	void * apply_cm_arg	1833:41:54648:54681	1017218	12	True				
ANR	1018100	ParameterType	void *		1017218	0					
ANR	1018101	Identifier	apply_cm_arg		1017218	1					
ANR	1018102	Parameter	int post_cm_num_comps	1834:41:54725:54763	1017218	13	True				
ANR	1018103	ParameterType	int		1017218	0					
ANR	1018104	Identifier	post_cm_num_comps		1017218	1					
ANR	1018105	CFGEntryNode	ENTRY		1017218		True				
ANR	1018106	CFGExitNode	EXIT		1017218		True				
ANR	1018107	Symbol	& down_core		1017218						
ANR	1018108	Symbol	trap_w		1017218						
ANR	1018109	Symbol	comp_order		1017218						
ANR	1018110	Symbol	ds -> post_cm_num_comps		1017218						
ANR	1018111	Symbol	gs_error_rangecheck		1017218						
ANR	1018112	Symbol	apply_cm		1017218						
ANR	1018113	Symbol	ds		1017218						
ANR	1018114	Symbol	ClapTrap_Init		1017218						
ANR	1018115	Symbol	dev		1017218						
ANR	1018116	Symbol	ds -> errors		1017218						
ANR	1018117	Symbol	ds -> span		1017218						
ANR	1018118	Symbol	ds -> width		1017218						
ANR	1018119	Symbol	upfactor		1017218						
ANR	1018120	Symbol	ds -> scaled_data		1017218						
ANR	1018121	Symbol	& ds -> params		1017218						
ANR	1018122	Symbol	ds -> num_planes		1017218						
ANR	1018123	Symbol	NULL		1017218						
ANR	1018124	Symbol	get_planar_line_for_trap		1017218						
ANR	1018125	Symbol	apply_cm_arg		1017218						
ANR	1018126	Symbol	params		1017218						
ANR	1018127	Symbol	* ds -> post_cm		1017218						
ANR	1018128	Symbol	trap_h		1017218						
ANR	1018129	Symbol	core		1017218						
ANR	1018130	Symbol	& down_core_mfs		1017218						
ANR	1018131	Symbol	ds -> dev		1017218						
ANR	1018132	Symbol	ds -> pre_cm		1017218						
ANR	1018133	Symbol	* dev		1017218						
ANR	1018134	Symbol	ds -> early_cm		1017218						
ANR	1018135	Symbol	& down_core_4		1017218						
ANR	1018136	Symbol	& down_core_3		1017218						
ANR	1018137	Symbol	& down_core_2		1017218						
ANR	1018138	Symbol	code		1017218						
ANR	1018139	Symbol	& down_core_1		1017218						
ANR	1018140	Symbol	* ds -> pre_cm		1017218						
ANR	1018141	Symbol	dev -> height		1017218						
ANR	1018142	Symbol	& upfactor		1017218						
ANR	1018143	Symbol	ds -> post_cm		1017218						
ANR	1018144	Symbol	ds -> apply_cm		1017218						
ANR	1018145	Symbol	ds -> mfs_data		1017218						
ANR	1018146	Symbol	& down_core16		1017218						
ANR	1018147	Symbol	& down_core8_2		1017218						
ANR	1018148	Symbol	& downfactor		1017218						
ANR	1018149	Symbol	ds -> params		1017218						
ANR	1018150	Symbol	* ds		1017218						
ANR	1018151	Symbol	& down_core8_4		1017218						
ANR	1018152	Symbol	num_comps		1017218						
ANR	1018153	Symbol	& down_core8_3		1017218						
ANR	1018154	Symbol	ds -> claptrap		1017218						
ANR	1018155	Symbol	post_cm_num_comps		1017218						
ANR	1018156	Symbol	ds -> down_core		1017218						
ANR	1018157	Symbol	factor		1017218						
ANR	1018158	Symbol	* params		1017218						
ANR	1018159	Symbol	dst_bpc		1017218						
ANR	1018160	Symbol	gs_alloc_bytes		1017218						
ANR	1018161	Symbol	check_trapping		1017218						
ANR	1018162	Symbol	& down_core8_3_4		1017218						
ANR	1018163	Symbol	ds -> scaled_span		1017218						
ANR	1018164	Symbol	& down_core8_3_2		1017218						
ANR	1018165	Symbol	ds -> awidth		1017218						
ANR	1018166	Symbol	i		1017218						
ANR	1018167	Symbol	post_span		1017218						
ANR	1018168	Symbol	src_bpc		1017218						
ANR	1018169	Symbol	bitmap_raster		1017218						
ANR	1018170	Symbol	gs_error_VMerror		1017218						
ANR	1018171	Symbol	dev -> memory		1017218						
ANR	1018172	Symbol	gs_note_error		1017218						
ANR	1018173	Symbol	* i		1017218						
ANR	1018174	Symbol	ds -> src_bpc		1017218						
ANR	1018175	Symbol	dev -> width		1017218						
ANR	1018176	Symbol	ds -> factor		1017218						
ANR	1018177	Symbol	width		1017218						
ANR	1018178	Symbol	downfactor		1017218						
ANR	1018179	Symbol	ds -> apply_cm_arg		1017218						
ANR	1018180	Symbol	& down_core8		1017218						
ANR	1018181	Symbol	* * ds		1017218						
ANR	1018182	Symbol	ds -> params . raster		1017218						
ANR	1018183	Symbol	mfs		1017218						
ANR	1018184	Symbol	span		1017218						
ANR	1018185	Function	get_line_for_trap	1970:0:59342:59702							
ANR	1018186	FunctionDef	"get_line_for_trap (void * arg , unsigned char * buf)"		1018185	0					
ANR	1018187	CompoundStatement		1971:0:59402:59702	1018185	0					
ANR	1018188	IdentifierDeclStatement	gx_downscaler_t * ds = ( gx_downscaler_t * ) arg ;	1972:4:59408:59452	1018185	0	True				
ANR	1018189	IdentifierDecl	* ds = ( gx_downscaler_t * ) arg		1018185	0					
ANR	1018190	IdentifierDeclType	gx_downscaler_t *		1018185	0					
ANR	1018191	Identifier	ds		1018185	1					
ANR	1018192	AssignmentExpression	* ds = ( gx_downscaler_t * ) arg		1018185	2		=			
ANR	1018193	Identifier	ds		1018185	0					
ANR	1018194	CastExpression	( gx_downscaler_t * ) arg		1018185	1					
ANR	1018195	CastTarget	gx_downscaler_t *		1018185	0					
ANR	1018196	Identifier	arg		1018185	1					
ANR	1018197	IfStatement	if ( ds -> claptrap_y == ds -> dev -> height )		1018185	1					
ANR	1018198	Condition	ds -> claptrap_y == ds -> dev -> height	1976:8:59557:59589	1018185	0	True				
ANR	1018199	EqualityExpression	ds -> claptrap_y == ds -> dev -> height		1018185	0		==			
ANR	1018200	PtrMemberAccess	ds -> claptrap_y		1018185	0					
ANR	1018201	Identifier	ds		1018185	0					
ANR	1018202	Identifier	claptrap_y		1018185	1					
ANR	1018203	PtrMemberAccess	ds -> dev -> height		1018185	1					
ANR	1018204	PtrMemberAccess	ds -> dev		1018185	0					
ANR	1018205	Identifier	ds		1018185	0					
ANR	1018206	Identifier	dev		1018185	1					
ANR	1018207	Identifier	height		1018185	1					
ANR	1018208	ExpressionStatement	ds -> claptrap_y = 0	1977:8:59600:59618	1018185	1	True				
ANR	1018209	AssignmentExpression	ds -> claptrap_y = 0		1018185	0		=			
ANR	1018210	PtrMemberAccess	ds -> claptrap_y		1018185	0					
ANR	1018211	Identifier	ds		1018185	0					
ANR	1018212	Identifier	claptrap_y		1018185	1					
ANR	1018213	PrimaryExpression	0		1018185	1					
ANR	1018214	ReturnStatement	"return ( * dev_proc ( ds -> dev , get_bits ) ) ( ds -> dev , ds -> claptrap_y ++ , buf , NULL ) ;"	1979:4:59625:59700	1018185	2	True				
ANR	1018215	CallExpression	"( * dev_proc ( ds -> dev , get_bits ) ) ( ds -> dev , ds -> claptrap_y ++ , buf , NULL )"		1018185	0					
ANR	1018216	Callee	"* dev_proc ( ds -> dev , get_bits )"		1018185	0					
ANR	1018217	UnaryOperationExpression	"* dev_proc ( ds -> dev , get_bits )"		1018185	0					
ANR	1018218	UnaryOperator	*		1018185	0					
ANR	1018219	CallExpression	"dev_proc ( ds -> dev , get_bits )"		1018185	1					
ANR	1018220	Callee	dev_proc		1018185	0					
ANR	1018221	Identifier	dev_proc		1018185	0					
ANR	1018222	ArgumentList	ds -> dev		1018185	1					
ANR	1018223	Argument	ds -> dev		1018185	0					
ANR	1018224	PtrMemberAccess	ds -> dev		1018185	0					
ANR	1018225	Identifier	ds		1018185	0					
ANR	1018226	Identifier	dev		1018185	1					
ANR	1018227	Argument	get_bits		1018185	1					
ANR	1018228	Identifier	get_bits		1018185	0					
ANR	1018229	ArgumentList	ds -> dev		1018185	1					
ANR	1018230	Argument	ds -> dev		1018185	0					
ANR	1018231	PtrMemberAccess	ds -> dev		1018185	0					
ANR	1018232	Identifier	ds		1018185	0					
ANR	1018233	Identifier	dev		1018185	1					
ANR	1018234	Argument	ds -> claptrap_y ++		1018185	1					
ANR	1018235	PostIncDecOperationExpression	ds -> claptrap_y ++		1018185	0					
ANR	1018236	PtrMemberAccess	ds -> claptrap_y		1018185	0					
ANR	1018237	Identifier	ds		1018185	0					
ANR	1018238	Identifier	claptrap_y		1018185	1					
ANR	1018239	IncDec	++		1018185	1					
ANR	1018240	Argument	buf		1018185	2					
ANR	1018241	Identifier	buf		1018185	0					
ANR	1018242	Argument	NULL		1018185	3					
ANR	1018243	Identifier	NULL		1018185	0					
ANR	1018244	ReturnType	static int		1018185	1					
ANR	1018245	Identifier	get_line_for_trap		1018185	2					
ANR	1018246	ParameterList	"void * arg , unsigned char * buf"		1018185	3					
ANR	1018247	Parameter	void * arg	1970:29:59371:59379	1018185	0	True				
ANR	1018248	ParameterType	void *		1018185	0					
ANR	1018249	Identifier	arg		1018185	1					
ANR	1018250	Parameter	unsigned char * buf	1970:40:59382:59399	1018185	1	True				
ANR	1018251	ParameterType	unsigned char *		1018185	0					
ANR	1018252	Identifier	buf		1018185	1					
ANR	1018253	CFGEntryNode	ENTRY		1018185		True				
ANR	1018254	CFGExitNode	EXIT		1018185		True				
ANR	1018255	Symbol	* ds -> dev		1018185						
ANR	1018256	Symbol	NULL		1018185						
ANR	1018257	Symbol	get_bits		1018185						
ANR	1018258	Symbol	* dev_proc		1018185						
ANR	1018259	Symbol	ds -> dev -> height		1018185						
ANR	1018260	Symbol	ds		1018185						
ANR	1018261	Symbol	buf		1018185						
ANR	1018262	Symbol	* ds		1018185						
ANR	1018263	Symbol	"* dev_proc ( ds -> dev , get_bits )"		1018185						
ANR	1018264	Symbol	dev_proc		1018185						
ANR	1018265	Symbol	arg		1018185						
ANR	1018266	Symbol	* * ds		1018185						
ANR	1018267	Symbol	ds -> dev		1018185						
ANR	1018268	Symbol	ds -> claptrap_y		1018185						
ANR	1018269	Function	gx_downscaler_init	1982:0:59705:60348							
ANR	1018270	FunctionDef	"gx_downscaler_init (gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width)"		1018269	0					
ANR	1018271	CompoundStatement		1991:0:60178:60348	1018269	0					
ANR	1018272	ReturnStatement	"return gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , 0 , 0 , NULL , NULL , NULL , 0 , 0 ) ;"	1992:4:60184:60346	1018269	0	True				
ANR	1018273	CallExpression	"gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , 0 , 0 , NULL , NULL , NULL , 0 , 0 )"		1018269	0					
ANR	1018274	Callee	gx_downscaler_init_trapped_cm_ets		1018269	0					
ANR	1018275	Identifier	gx_downscaler_init_trapped_cm_ets		1018269	0					
ANR	1018276	ArgumentList	ds		1018269	1					
ANR	1018277	Argument	ds		1018269	0					
ANR	1018278	Identifier	ds		1018269	0					
ANR	1018279	Argument	dev		1018269	1					
ANR	1018280	Identifier	dev		1018269	0					
ANR	1018281	Argument	src_bpc		1018269	2					
ANR	1018282	Identifier	src_bpc		1018269	0					
ANR	1018283	Argument	dst_bpc		1018269	3					
ANR	1018284	Identifier	dst_bpc		1018269	0					
ANR	1018285	Argument	num_comps		1018269	4					
ANR	1018286	Identifier	num_comps		1018269	0					
ANR	1018287	Argument	factor		1018269	5					
ANR	1018288	Identifier	factor		1018269	0					
ANR	1018289	Argument	mfs		1018269	6					
ANR	1018290	Identifier	mfs		1018269	0					
ANR	1018291	Argument	adjust_width_proc		1018269	7					
ANR	1018292	Identifier	adjust_width_proc		1018269	0					
ANR	1018293	Argument	adjust_width		1018269	8					
ANR	1018294	Identifier	adjust_width		1018269	0					
ANR	1018295	Argument	0		1018269	9					
ANR	1018296	PrimaryExpression	0		1018269	0					
ANR	1018297	Argument	0		1018269	10					
ANR	1018298	PrimaryExpression	0		1018269	0					
ANR	1018299	Argument	NULL		1018269	11					
ANR	1018300	Identifier	NULL		1018269	0					
ANR	1018301	Argument	NULL		1018269	12					
ANR	1018302	Identifier	NULL		1018269	0					
ANR	1018303	Argument	NULL		1018269	13					
ANR	1018304	Identifier	NULL		1018269	0					
ANR	1018305	Argument	0		1018269	14					
ANR	1018306	PrimaryExpression	0		1018269	0					
ANR	1018307	Argument	0		1018269	15					
ANR	1018308	PrimaryExpression	0		1018269	0					
ANR	1018309	ReturnType	int		1018269	1					
ANR	1018310	Identifier	gx_downscaler_init		1018269	2					
ANR	1018311	ParameterList	"gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width"		1018269	3					
ANR	1018312	Parameter	gx_downscaler_t * ds	1982:23:59728:59748	1018269	0	True				
ANR	1018313	ParameterType	gx_downscaler_t *		1018269	0					
ANR	1018314	Identifier	ds		1018269	1					
ANR	1018315	Parameter	gx_device * dev	1983:23:59774:59795	1018269	1	True				
ANR	1018316	ParameterType	gx_device *		1018269	0					
ANR	1018317	Identifier	dev		1018269	1					
ANR	1018318	Parameter	int src_bpc	1984:23:59821:59846	1018269	2	True				
ANR	1018319	ParameterType	int		1018269	0					
ANR	1018320	Identifier	src_bpc		1018269	1					
ANR	1018321	Parameter	int dst_bpc	1985:23:59872:59897	1018269	3	True				
ANR	1018322	ParameterType	int		1018269	0					
ANR	1018323	Identifier	dst_bpc		1018269	1					
ANR	1018324	Parameter	int num_comps	1986:23:59923:59950	1018269	4	True				
ANR	1018325	ParameterType	int		1018269	0					
ANR	1018326	Identifier	num_comps		1018269	1					
ANR	1018327	Parameter	int factor	1987:23:59976:60000	1018269	5	True				
ANR	1018328	ParameterType	int		1018269	0					
ANR	1018329	Identifier	factor		1018269	1					
ANR	1018330	Parameter	int mfs	1988:23:60026:60047	1018269	6	True				
ANR	1018331	ParameterType	int		1018269	0					
ANR	1018332	Identifier	mfs		1018269	1					
ANR	1018333	Parameter	"int ( * adjust_width_proc ) ( int , int )"	1989:23:60073:60119	1018269	7	True				
ANR	1018334	ParameterType	"(( int , int ) int) *"		1018269	0					
ANR	1018335	Identifier	adjust_width_proc		1018269	1					
ANR	1018336	Parameter	int adjust_width	1990:23:60145:60175	1018269	8	True				
ANR	1018337	ParameterType	int		1018269	0					
ANR	1018338	Identifier	adjust_width		1018269	1					
ANR	1018339	CFGEntryNode	ENTRY		1018269		True				
ANR	1018340	CFGExitNode	EXIT		1018269		True				
ANR	1018341	Symbol	dst_bpc		1018269						
ANR	1018342	Symbol	adjust_width_proc		1018269						
ANR	1018343	Symbol	NULL		1018269						
ANR	1018344	Symbol	dev		1018269						
ANR	1018345	Symbol	num_comps		1018269						
ANR	1018346	Symbol	mfs		1018269						
ANR	1018347	Symbol	gx_downscaler_init_trapped_cm_ets		1018269						
ANR	1018348	Symbol	factor		1018269						
ANR	1018349	Symbol	src_bpc		1018269						
ANR	1018350	Symbol	ds		1018269						
ANR	1018351	Symbol	adjust_width		1018269						
ANR	1018352	Function	gx_downscaler_init_ets	1997:0:60352:61084							
ANR	1018353	FunctionDef	"gx_downscaler_init_ets (gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int ets)"		1018352	0					
ANR	1018354	CompoundStatement		2007:0:60912:61084	1018352	0					
ANR	1018355	ReturnStatement	"return gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , 0 , 0 , NULL , NULL , NULL , 0 , ets ) ;"	2008:4:60918:61082	1018352	0	True				
ANR	1018356	CallExpression	"gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , 0 , 0 , NULL , NULL , NULL , 0 , ets )"		1018352	0					
ANR	1018357	Callee	gx_downscaler_init_trapped_cm_ets		1018352	0					
ANR	1018358	Identifier	gx_downscaler_init_trapped_cm_ets		1018352	0					
ANR	1018359	ArgumentList	ds		1018352	1					
ANR	1018360	Argument	ds		1018352	0					
ANR	1018361	Identifier	ds		1018352	0					
ANR	1018362	Argument	dev		1018352	1					
ANR	1018363	Identifier	dev		1018352	0					
ANR	1018364	Argument	src_bpc		1018352	2					
ANR	1018365	Identifier	src_bpc		1018352	0					
ANR	1018366	Argument	dst_bpc		1018352	3					
ANR	1018367	Identifier	dst_bpc		1018352	0					
ANR	1018368	Argument	num_comps		1018352	4					
ANR	1018369	Identifier	num_comps		1018352	0					
ANR	1018370	Argument	factor		1018352	5					
ANR	1018371	Identifier	factor		1018352	0					
ANR	1018372	Argument	mfs		1018352	6					
ANR	1018373	Identifier	mfs		1018352	0					
ANR	1018374	Argument	adjust_width_proc		1018352	7					
ANR	1018375	Identifier	adjust_width_proc		1018352	0					
ANR	1018376	Argument	adjust_width		1018352	8					
ANR	1018377	Identifier	adjust_width		1018352	0					
ANR	1018378	Argument	0		1018352	9					
ANR	1018379	PrimaryExpression	0		1018352	0					
ANR	1018380	Argument	0		1018352	10					
ANR	1018381	PrimaryExpression	0		1018352	0					
ANR	1018382	Argument	NULL		1018352	11					
ANR	1018383	Identifier	NULL		1018352	0					
ANR	1018384	Argument	NULL		1018352	12					
ANR	1018385	Identifier	NULL		1018352	0					
ANR	1018386	Argument	NULL		1018352	13					
ANR	1018387	Identifier	NULL		1018352	0					
ANR	1018388	Argument	0		1018352	14					
ANR	1018389	PrimaryExpression	0		1018352	0					
ANR	1018390	Argument	ets		1018352	15					
ANR	1018391	Identifier	ets		1018352	0					
ANR	1018392	ReturnType	int		1018352	1					
ANR	1018393	Identifier	gx_downscaler_init_ets		1018352	2					
ANR	1018394	ParameterList	"gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int ets"		1018352	3					
ANR	1018395	Parameter	gx_downscaler_t * ds	1997:27:60379:60399	1018352	0	True				
ANR	1018396	ParameterType	gx_downscaler_t *		1018352	0					
ANR	1018397	Identifier	ds		1018352	1					
ANR	1018398	Parameter	gx_device * dev	1998:27:60429:60450	1018352	1	True				
ANR	1018399	ParameterType	gx_device *		1018352	0					
ANR	1018400	Identifier	dev		1018352	1					
ANR	1018401	Parameter	int src_bpc	1999:27:60480:60505	1018352	2	True				
ANR	1018402	ParameterType	int		1018352	0					
ANR	1018403	Identifier	src_bpc		1018352	1					
ANR	1018404	Parameter	int dst_bpc	2000:27:60535:60560	1018352	3	True				
ANR	1018405	ParameterType	int		1018352	0					
ANR	1018406	Identifier	dst_bpc		1018352	1					
ANR	1018407	Parameter	int num_comps	2001:27:60590:60617	1018352	4	True				
ANR	1018408	ParameterType	int		1018352	0					
ANR	1018409	Identifier	num_comps		1018352	1					
ANR	1018410	Parameter	int factor	2002:27:60647:60671	1018352	5	True				
ANR	1018411	ParameterType	int		1018352	0					
ANR	1018412	Identifier	factor		1018352	1					
ANR	1018413	Parameter	int mfs	2003:27:60701:60722	1018352	6	True				
ANR	1018414	ParameterType	int		1018352	0					
ANR	1018415	Identifier	mfs		1018352	1					
ANR	1018416	Parameter	"int ( * adjust_width_proc ) ( int , int )"	2004:27:60752:60798	1018352	7	True				
ANR	1018417	ParameterType	"(( int , int ) int) *"		1018352	0					
ANR	1018418	Identifier	adjust_width_proc		1018352	1					
ANR	1018419	Parameter	int adjust_width	2005:27:60828:60858	1018352	8	True				
ANR	1018420	ParameterType	int		1018352	0					
ANR	1018421	Identifier	adjust_width		1018352	1					
ANR	1018422	Parameter	int ets	2006:27:60888:60909	1018352	9	True				
ANR	1018423	ParameterType	int		1018352	0					
ANR	1018424	Identifier	ets		1018352	1					
ANR	1018425	CFGEntryNode	ENTRY		1018352		True				
ANR	1018426	CFGExitNode	EXIT		1018352		True				
ANR	1018427	Symbol	dst_bpc		1018352						
ANR	1018428	Symbol	adjust_width_proc		1018352						
ANR	1018429	Symbol	NULL		1018352						
ANR	1018430	Symbol	dev		1018352						
ANR	1018431	Symbol	ets		1018352						
ANR	1018432	Symbol	num_comps		1018352						
ANR	1018433	Symbol	mfs		1018352						
ANR	1018434	Symbol	gx_downscaler_init_trapped_cm_ets		1018352						
ANR	1018435	Symbol	factor		1018352						
ANR	1018436	Symbol	src_bpc		1018352						
ANR	1018437	Symbol	ds		1018352						
ANR	1018438	Symbol	adjust_width		1018352						
ANR	1018439	Function	gx_downscaler_init_trapped	2012:0:61087:62168							
ANR	1018440	FunctionDef	"gx_downscaler_init_trapped (gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int trap_w , int trap_h , const int * comp_order)"		1018439	0					
ANR	1018441	CompoundStatement		2024:0:61810:62168	1018439	0					
ANR	1018442	ReturnStatement	"return gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , trap_w , trap_h , comp_order , NULL , NULL , 0 , 0 ) ;"	2025:4:61816:62166	1018439	0	True				
ANR	1018443	CallExpression	"gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , trap_w , trap_h , comp_order , NULL , NULL , 0 , 0 )"		1018439	0					
ANR	1018444	Callee	gx_downscaler_init_trapped_cm_ets		1018439	0					
ANR	1018445	Identifier	gx_downscaler_init_trapped_cm_ets		1018439	0					
ANR	1018446	ArgumentList	ds		1018439	1					
ANR	1018447	Argument	ds		1018439	0					
ANR	1018448	Identifier	ds		1018439	0					
ANR	1018449	Argument	dev		1018439	1					
ANR	1018450	Identifier	dev		1018439	0					
ANR	1018451	Argument	src_bpc		1018439	2					
ANR	1018452	Identifier	src_bpc		1018439	0					
ANR	1018453	Argument	dst_bpc		1018439	3					
ANR	1018454	Identifier	dst_bpc		1018439	0					
ANR	1018455	Argument	num_comps		1018439	4					
ANR	1018456	Identifier	num_comps		1018439	0					
ANR	1018457	Argument	factor		1018439	5					
ANR	1018458	Identifier	factor		1018439	0					
ANR	1018459	Argument	mfs		1018439	6					
ANR	1018460	Identifier	mfs		1018439	0					
ANR	1018461	Argument	adjust_width_proc		1018439	7					
ANR	1018462	Identifier	adjust_width_proc		1018439	0					
ANR	1018463	Argument	adjust_width		1018439	8					
ANR	1018464	Identifier	adjust_width		1018439	0					
ANR	1018465	Argument	trap_w		1018439	9					
ANR	1018466	Identifier	trap_w		1018439	0					
ANR	1018467	Argument	trap_h		1018439	10					
ANR	1018468	Identifier	trap_h		1018439	0					
ANR	1018469	Argument	comp_order		1018439	11					
ANR	1018470	Identifier	comp_order		1018439	0					
ANR	1018471	Argument	NULL		1018439	12					
ANR	1018472	Identifier	NULL		1018439	0					
ANR	1018473	Argument	NULL		1018439	13					
ANR	1018474	Identifier	NULL		1018439	0					
ANR	1018475	Argument	0		1018439	14					
ANR	1018476	PrimaryExpression	0		1018439	0					
ANR	1018477	Argument	0		1018439	15					
ANR	1018478	PrimaryExpression	0		1018439	0					
ANR	1018479	ReturnType	int		1018439	1					
ANR	1018480	Identifier	gx_downscaler_init_trapped		1018439	2					
ANR	1018481	ParameterList	"gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int trap_w , int trap_h , const int * comp_order"		1018439	3					
ANR	1018482	Parameter	gx_downscaler_t * ds	2012:31:61118:61138	1018439	0	True				
ANR	1018483	ParameterType	gx_downscaler_t *		1018439	0					
ANR	1018484	Identifier	ds		1018439	1					
ANR	1018485	Parameter	gx_device * dev	2013:31:61172:61193	1018439	1	True				
ANR	1018486	ParameterType	gx_device *		1018439	0					
ANR	1018487	Identifier	dev		1018439	1					
ANR	1018488	Parameter	int src_bpc	2014:31:61227:61252	1018439	2	True				
ANR	1018489	ParameterType	int		1018439	0					
ANR	1018490	Identifier	src_bpc		1018439	1					
ANR	1018491	Parameter	int dst_bpc	2015:31:61286:61311	1018439	3	True				
ANR	1018492	ParameterType	int		1018439	0					
ANR	1018493	Identifier	dst_bpc		1018439	1					
ANR	1018494	Parameter	int num_comps	2016:31:61345:61372	1018439	4	True				
ANR	1018495	ParameterType	int		1018439	0					
ANR	1018496	Identifier	num_comps		1018439	1					
ANR	1018497	Parameter	int factor	2017:31:61406:61430	1018439	5	True				
ANR	1018498	ParameterType	int		1018439	0					
ANR	1018499	Identifier	factor		1018439	1					
ANR	1018500	Parameter	int mfs	2018:31:61464:61485	1018439	6	True				
ANR	1018501	ParameterType	int		1018439	0					
ANR	1018502	Identifier	mfs		1018439	1					
ANR	1018503	Parameter	"int ( * adjust_width_proc ) ( int , int )"	2019:31:61519:61565	1018439	7	True				
ANR	1018504	ParameterType	"(( int , int ) int) *"		1018439	0					
ANR	1018505	Identifier	adjust_width_proc		1018439	1					
ANR	1018506	Parameter	int adjust_width	2020:31:61599:61629	1018439	8	True				
ANR	1018507	ParameterType	int		1018439	0					
ANR	1018508	Identifier	adjust_width		1018439	1					
ANR	1018509	Parameter	int trap_w	2021:31:61663:61687	1018439	9	True				
ANR	1018510	ParameterType	int		1018439	0					
ANR	1018511	Identifier	trap_w		1018439	1					
ANR	1018512	Parameter	int trap_h	2022:31:61721:61745	1018439	10	True				
ANR	1018513	ParameterType	int		1018439	0					
ANR	1018514	Identifier	trap_h		1018439	1					
ANR	1018515	Parameter	const int * comp_order	2023:31:61779:61807	1018439	11	True				
ANR	1018516	ParameterType	const int *		1018439	0					
ANR	1018517	Identifier	comp_order		1018439	1					
ANR	1018518	CFGEntryNode	ENTRY		1018439		True				
ANR	1018519	CFGExitNode	EXIT		1018439		True				
ANR	1018520	Symbol	dst_bpc		1018439						
ANR	1018521	Symbol	trap_w		1018439						
ANR	1018522	Symbol	NULL		1018439						
ANR	1018523	Symbol	comp_order		1018439						
ANR	1018524	Symbol	gx_downscaler_init_trapped_cm_ets		1018439						
ANR	1018525	Symbol	src_bpc		1018439						
ANR	1018526	Symbol	ds		1018439						
ANR	1018527	Symbol	trap_h		1018439						
ANR	1018528	Symbol	adjust_width_proc		1018439						
ANR	1018529	Symbol	dev		1018439						
ANR	1018530	Symbol	num_comps		1018439						
ANR	1018531	Symbol	mfs		1018439						
ANR	1018532	Symbol	factor		1018439						
ANR	1018533	Symbol	adjust_width		1018439						
ANR	1018534	Function	gx_downscaler_init_trapped_ets	2032:0:62171:63361							
ANR	1018535	FunctionDef	"gx_downscaler_init_trapped_ets (gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int trap_w , int trap_h , const int * comp_order , int ets)"		1018534	0					
ANR	1018536	CompoundStatement		2045:0:63001:63361	1018534	0					
ANR	1018537	ReturnStatement	"return gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , trap_w , trap_h , comp_order , NULL , NULL , 0 , ets ) ;"	2046:4:63007:63359	1018534	0	True				
ANR	1018538	CallExpression	"gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , trap_w , trap_h , comp_order , NULL , NULL , 0 , ets )"		1018534	0					
ANR	1018539	Callee	gx_downscaler_init_trapped_cm_ets		1018534	0					
ANR	1018540	Identifier	gx_downscaler_init_trapped_cm_ets		1018534	0					
ANR	1018541	ArgumentList	ds		1018534	1					
ANR	1018542	Argument	ds		1018534	0					
ANR	1018543	Identifier	ds		1018534	0					
ANR	1018544	Argument	dev		1018534	1					
ANR	1018545	Identifier	dev		1018534	0					
ANR	1018546	Argument	src_bpc		1018534	2					
ANR	1018547	Identifier	src_bpc		1018534	0					
ANR	1018548	Argument	dst_bpc		1018534	3					
ANR	1018549	Identifier	dst_bpc		1018534	0					
ANR	1018550	Argument	num_comps		1018534	4					
ANR	1018551	Identifier	num_comps		1018534	0					
ANR	1018552	Argument	factor		1018534	5					
ANR	1018553	Identifier	factor		1018534	0					
ANR	1018554	Argument	mfs		1018534	6					
ANR	1018555	Identifier	mfs		1018534	0					
ANR	1018556	Argument	adjust_width_proc		1018534	7					
ANR	1018557	Identifier	adjust_width_proc		1018534	0					
ANR	1018558	Argument	adjust_width		1018534	8					
ANR	1018559	Identifier	adjust_width		1018534	0					
ANR	1018560	Argument	trap_w		1018534	9					
ANR	1018561	Identifier	trap_w		1018534	0					
ANR	1018562	Argument	trap_h		1018534	10					
ANR	1018563	Identifier	trap_h		1018534	0					
ANR	1018564	Argument	comp_order		1018534	11					
ANR	1018565	Identifier	comp_order		1018534	0					
ANR	1018566	Argument	NULL		1018534	12					
ANR	1018567	Identifier	NULL		1018534	0					
ANR	1018568	Argument	NULL		1018534	13					
ANR	1018569	Identifier	NULL		1018534	0					
ANR	1018570	Argument	0		1018534	14					
ANR	1018571	PrimaryExpression	0		1018534	0					
ANR	1018572	Argument	ets		1018534	15					
ANR	1018573	Identifier	ets		1018534	0					
ANR	1018574	ReturnType	int		1018534	1					
ANR	1018575	Identifier	gx_downscaler_init_trapped_ets		1018534	2					
ANR	1018576	ParameterList	"gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int trap_w , int trap_h , const int * comp_order , int ets"		1018534	3					
ANR	1018577	Parameter	gx_downscaler_t * ds	2032:35:62206:62226	1018534	0	True				
ANR	1018578	ParameterType	gx_downscaler_t *		1018534	0					
ANR	1018579	Identifier	ds		1018534	1					
ANR	1018580	Parameter	gx_device * dev	2033:35:62264:62285	1018534	1	True				
ANR	1018581	ParameterType	gx_device *		1018534	0					
ANR	1018582	Identifier	dev		1018534	1					
ANR	1018583	Parameter	int src_bpc	2034:35:62323:62348	1018534	2	True				
ANR	1018584	ParameterType	int		1018534	0					
ANR	1018585	Identifier	src_bpc		1018534	1					
ANR	1018586	Parameter	int dst_bpc	2035:35:62386:62411	1018534	3	True				
ANR	1018587	ParameterType	int		1018534	0					
ANR	1018588	Identifier	dst_bpc		1018534	1					
ANR	1018589	Parameter	int num_comps	2036:35:62449:62476	1018534	4	True				
ANR	1018590	ParameterType	int		1018534	0					
ANR	1018591	Identifier	num_comps		1018534	1					
ANR	1018592	Parameter	int factor	2037:35:62514:62538	1018534	5	True				
ANR	1018593	ParameterType	int		1018534	0					
ANR	1018594	Identifier	factor		1018534	1					
ANR	1018595	Parameter	int mfs	2038:35:62576:62597	1018534	6	True				
ANR	1018596	ParameterType	int		1018534	0					
ANR	1018597	Identifier	mfs		1018534	1					
ANR	1018598	Parameter	"int ( * adjust_width_proc ) ( int , int )"	2039:35:62635:62681	1018534	7	True				
ANR	1018599	ParameterType	"(( int , int ) int) *"		1018534	0					
ANR	1018600	Identifier	adjust_width_proc		1018534	1					
ANR	1018601	Parameter	int adjust_width	2040:35:62719:62749	1018534	8	True				
ANR	1018602	ParameterType	int		1018534	0					
ANR	1018603	Identifier	adjust_width		1018534	1					
ANR	1018604	Parameter	int trap_w	2041:35:62787:62811	1018534	9	True				
ANR	1018605	ParameterType	int		1018534	0					
ANR	1018606	Identifier	trap_w		1018534	1					
ANR	1018607	Parameter	int trap_h	2042:35:62849:62873	1018534	10	True				
ANR	1018608	ParameterType	int		1018534	0					
ANR	1018609	Identifier	trap_h		1018534	1					
ANR	1018610	Parameter	const int * comp_order	2043:35:62911:62939	1018534	11	True				
ANR	1018611	ParameterType	const int *		1018534	0					
ANR	1018612	Identifier	comp_order		1018534	1					
ANR	1018613	Parameter	int ets	2044:35:62977:62998	1018534	12	True				
ANR	1018614	ParameterType	int		1018534	0					
ANR	1018615	Identifier	ets		1018534	1					
ANR	1018616	CFGEntryNode	ENTRY		1018534		True				
ANR	1018617	CFGExitNode	EXIT		1018534		True				
ANR	1018618	Symbol	dst_bpc		1018534						
ANR	1018619	Symbol	trap_w		1018534						
ANR	1018620	Symbol	NULL		1018534						
ANR	1018621	Symbol	comp_order		1018534						
ANR	1018622	Symbol	ets		1018534						
ANR	1018623	Symbol	gx_downscaler_init_trapped_cm_ets		1018534						
ANR	1018624	Symbol	src_bpc		1018534						
ANR	1018625	Symbol	ds		1018534						
ANR	1018626	Symbol	trap_h		1018534						
ANR	1018627	Symbol	adjust_width_proc		1018534						
ANR	1018628	Symbol	dev		1018534						
ANR	1018629	Symbol	num_comps		1018534						
ANR	1018630	Symbol	mfs		1018534						
ANR	1018631	Symbol	factor		1018534						
ANR	1018632	Symbol	adjust_width		1018534						
ANR	1018633	Function	gx_downscaler_init_cm	2052:0:63363:64434							
ANR	1018634	FunctionDef	"gx_downscaler_init_cm (gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps)"		1018633	0					
ANR	1018635	CompoundStatement		2064:0:64064:64434	1018633	0					
ANR	1018636	ReturnStatement	"return gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , 0 , 0 , NULL , apply_cm , apply_cm_arg , post_cm_num_comps , 0 ) ;"	2065:4:64070:64432	1018633	0	True				
ANR	1018637	CallExpression	"gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , 0 , 0 , NULL , apply_cm , apply_cm_arg , post_cm_num_comps , 0 )"		1018633	0					
ANR	1018638	Callee	gx_downscaler_init_trapped_cm_ets		1018633	0					
ANR	1018639	Identifier	gx_downscaler_init_trapped_cm_ets		1018633	0					
ANR	1018640	ArgumentList	ds		1018633	1					
ANR	1018641	Argument	ds		1018633	0					
ANR	1018642	Identifier	ds		1018633	0					
ANR	1018643	Argument	dev		1018633	1					
ANR	1018644	Identifier	dev		1018633	0					
ANR	1018645	Argument	src_bpc		1018633	2					
ANR	1018646	Identifier	src_bpc		1018633	0					
ANR	1018647	Argument	dst_bpc		1018633	3					
ANR	1018648	Identifier	dst_bpc		1018633	0					
ANR	1018649	Argument	num_comps		1018633	4					
ANR	1018650	Identifier	num_comps		1018633	0					
ANR	1018651	Argument	factor		1018633	5					
ANR	1018652	Identifier	factor		1018633	0					
ANR	1018653	Argument	mfs		1018633	6					
ANR	1018654	Identifier	mfs		1018633	0					
ANR	1018655	Argument	adjust_width_proc		1018633	7					
ANR	1018656	Identifier	adjust_width_proc		1018633	0					
ANR	1018657	Argument	adjust_width		1018633	8					
ANR	1018658	Identifier	adjust_width		1018633	0					
ANR	1018659	Argument	0		1018633	9					
ANR	1018660	PrimaryExpression	0		1018633	0					
ANR	1018661	Argument	0		1018633	10					
ANR	1018662	PrimaryExpression	0		1018633	0					
ANR	1018663	Argument	NULL		1018633	11					
ANR	1018664	Identifier	NULL		1018633	0					
ANR	1018665	Argument	apply_cm		1018633	12					
ANR	1018666	Identifier	apply_cm		1018633	0					
ANR	1018667	Argument	apply_cm_arg		1018633	13					
ANR	1018668	Identifier	apply_cm_arg		1018633	0					
ANR	1018669	Argument	post_cm_num_comps		1018633	14					
ANR	1018670	Identifier	post_cm_num_comps		1018633	0					
ANR	1018671	Argument	0		1018633	15					
ANR	1018672	PrimaryExpression	0		1018633	0					
ANR	1018673	ReturnType	int		1018633	1					
ANR	1018674	Identifier	gx_downscaler_init_cm		1018633	2					
ANR	1018675	ParameterList	"gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps"		1018633	3					
ANR	1018676	Parameter	gx_downscaler_t * ds	2052:26:63389:63410	1018633	0	True				
ANR	1018677	ParameterType	gx_downscaler_t *		1018633	0					
ANR	1018678	Identifier	ds		1018633	1					
ANR	1018679	Parameter	gx_device * dev	2053:27:63440:63462	1018633	1	True				
ANR	1018680	ParameterType	gx_device *		1018633	0					
ANR	1018681	Identifier	dev		1018633	1					
ANR	1018682	Parameter	int src_bpc	2054:27:63492:63518	1018633	2	True				
ANR	1018683	ParameterType	int		1018633	0					
ANR	1018684	Identifier	src_bpc		1018633	1					
ANR	1018685	Parameter	int dst_bpc	2055:27:63548:63574	1018633	3	True				
ANR	1018686	ParameterType	int		1018633	0					
ANR	1018687	Identifier	dst_bpc		1018633	1					
ANR	1018688	Parameter	int num_comps	2056:27:63604:63632	1018633	4	True				
ANR	1018689	ParameterType	int		1018633	0					
ANR	1018690	Identifier	num_comps		1018633	1					
ANR	1018691	Parameter	int factor	2057:27:63662:63687	1018633	5	True				
ANR	1018692	ParameterType	int		1018633	0					
ANR	1018693	Identifier	factor		1018633	1					
ANR	1018694	Parameter	int mfs	2058:27:63717:63739	1018633	6	True				
ANR	1018695	ParameterType	int		1018633	0					
ANR	1018696	Identifier	mfs		1018633	1					
ANR	1018697	Parameter	"int ( * adjust_width_proc ) ( int , int )"	2059:27:63769:63816	1018633	7	True				
ANR	1018698	ParameterType	"(( int , int ) int) *"		1018633	0					
ANR	1018699	Identifier	adjust_width_proc		1018633	1					
ANR	1018700	Parameter	int adjust_width	2060:27:63846:63877	1018633	8	True				
ANR	1018701	ParameterType	int		1018633	0					
ANR	1018702	Identifier	adjust_width		1018633	1					
ANR	1018703	Parameter	gx_downscale_cm_fn * apply_cm	2061:27:63907:63934	1018633	9	True				
ANR	1018704	ParameterType	gx_downscale_cm_fn *		1018633	0					
ANR	1018705	Identifier	apply_cm		1018633	1					
ANR	1018706	Parameter	void * apply_cm_arg	2062:27:63964:63995	1018633	10	True				
ANR	1018707	ParameterType	void *		1018633	0					
ANR	1018708	Identifier	apply_cm_arg		1018633	1					
ANR	1018709	Parameter	int post_cm_num_comps	2063:27:64025:64061	1018633	11	True				
ANR	1018710	ParameterType	int		1018633	0					
ANR	1018711	Identifier	post_cm_num_comps		1018633	1					
ANR	1018712	CFGEntryNode	ENTRY		1018633		True				
ANR	1018713	CFGExitNode	EXIT		1018633		True				
ANR	1018714	Symbol	dst_bpc		1018633						
ANR	1018715	Symbol	NULL		1018633						
ANR	1018716	Symbol	apply_cm_arg		1018633						
ANR	1018717	Symbol	gx_downscaler_init_trapped_cm_ets		1018633						
ANR	1018718	Symbol	src_bpc		1018633						
ANR	1018719	Symbol	apply_cm		1018633						
ANR	1018720	Symbol	ds		1018633						
ANR	1018721	Symbol	adjust_width_proc		1018633						
ANR	1018722	Symbol	dev		1018633						
ANR	1018723	Symbol	num_comps		1018633						
ANR	1018724	Symbol	post_cm_num_comps		1018633						
ANR	1018725	Symbol	mfs		1018633						
ANR	1018726	Symbol	factor		1018633						
ANR	1018727	Symbol	adjust_width		1018633						
ANR	1018728	Function	gx_downscaler_init_cm_ets	2072:0:64437:65602							
ANR	1018729	FunctionDef	"gx_downscaler_init_cm_ets (gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps , int ets)"		1018728	0					
ANR	1018730	CompoundStatement		2085:0:65230:65602	1018728	0					
ANR	1018731	ReturnStatement	"return gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , 0 , 0 , NULL , apply_cm , apply_cm_arg , post_cm_num_comps , ets ) ;"	2086:4:65236:65600	1018728	0	True				
ANR	1018732	CallExpression	"gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , 0 , 0 , NULL , apply_cm , apply_cm_arg , post_cm_num_comps , ets )"		1018728	0					
ANR	1018733	Callee	gx_downscaler_init_trapped_cm_ets		1018728	0					
ANR	1018734	Identifier	gx_downscaler_init_trapped_cm_ets		1018728	0					
ANR	1018735	ArgumentList	ds		1018728	1					
ANR	1018736	Argument	ds		1018728	0					
ANR	1018737	Identifier	ds		1018728	0					
ANR	1018738	Argument	dev		1018728	1					
ANR	1018739	Identifier	dev		1018728	0					
ANR	1018740	Argument	src_bpc		1018728	2					
ANR	1018741	Identifier	src_bpc		1018728	0					
ANR	1018742	Argument	dst_bpc		1018728	3					
ANR	1018743	Identifier	dst_bpc		1018728	0					
ANR	1018744	Argument	num_comps		1018728	4					
ANR	1018745	Identifier	num_comps		1018728	0					
ANR	1018746	Argument	factor		1018728	5					
ANR	1018747	Identifier	factor		1018728	0					
ANR	1018748	Argument	mfs		1018728	6					
ANR	1018749	Identifier	mfs		1018728	0					
ANR	1018750	Argument	adjust_width_proc		1018728	7					
ANR	1018751	Identifier	adjust_width_proc		1018728	0					
ANR	1018752	Argument	adjust_width		1018728	8					
ANR	1018753	Identifier	adjust_width		1018728	0					
ANR	1018754	Argument	0		1018728	9					
ANR	1018755	PrimaryExpression	0		1018728	0					
ANR	1018756	Argument	0		1018728	10					
ANR	1018757	PrimaryExpression	0		1018728	0					
ANR	1018758	Argument	NULL		1018728	11					
ANR	1018759	Identifier	NULL		1018728	0					
ANR	1018760	Argument	apply_cm		1018728	12					
ANR	1018761	Identifier	apply_cm		1018728	0					
ANR	1018762	Argument	apply_cm_arg		1018728	13					
ANR	1018763	Identifier	apply_cm_arg		1018728	0					
ANR	1018764	Argument	post_cm_num_comps		1018728	14					
ANR	1018765	Identifier	post_cm_num_comps		1018728	0					
ANR	1018766	Argument	ets		1018728	15					
ANR	1018767	Identifier	ets		1018728	0					
ANR	1018768	ReturnType	int		1018728	1					
ANR	1018769	Identifier	gx_downscaler_init_cm_ets		1018728	2					
ANR	1018770	ParameterList	"gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps , int ets"		1018728	3					
ANR	1018771	Parameter	gx_downscaler_t * ds	2072:30:64467:64488	1018728	0	True				
ANR	1018772	ParameterType	gx_downscaler_t *		1018728	0					
ANR	1018773	Identifier	ds		1018728	1					
ANR	1018774	Parameter	gx_device * dev	2073:30:64521:64543	1018728	1	True				
ANR	1018775	ParameterType	gx_device *		1018728	0					
ANR	1018776	Identifier	dev		1018728	1					
ANR	1018777	Parameter	int src_bpc	2074:30:64576:64602	1018728	2	True				
ANR	1018778	ParameterType	int		1018728	0					
ANR	1018779	Identifier	src_bpc		1018728	1					
ANR	1018780	Parameter	int dst_bpc	2075:30:64635:64661	1018728	3	True				
ANR	1018781	ParameterType	int		1018728	0					
ANR	1018782	Identifier	dst_bpc		1018728	1					
ANR	1018783	Parameter	int num_comps	2076:30:64694:64722	1018728	4	True				
ANR	1018784	ParameterType	int		1018728	0					
ANR	1018785	Identifier	num_comps		1018728	1					
ANR	1018786	Parameter	int factor	2077:30:64755:64780	1018728	5	True				
ANR	1018787	ParameterType	int		1018728	0					
ANR	1018788	Identifier	factor		1018728	1					
ANR	1018789	Parameter	int mfs	2078:30:64813:64835	1018728	6	True				
ANR	1018790	ParameterType	int		1018728	0					
ANR	1018791	Identifier	mfs		1018728	1					
ANR	1018792	Parameter	"int ( * adjust_width_proc ) ( int , int )"	2079:30:64868:64915	1018728	7	True				
ANR	1018793	ParameterType	"(( int , int ) int) *"		1018728	0					
ANR	1018794	Identifier	adjust_width_proc		1018728	1					
ANR	1018795	Parameter	int adjust_width	2080:30:64948:64979	1018728	8	True				
ANR	1018796	ParameterType	int		1018728	0					
ANR	1018797	Identifier	adjust_width		1018728	1					
ANR	1018798	Parameter	gx_downscale_cm_fn * apply_cm	2081:30:65012:65039	1018728	9	True				
ANR	1018799	ParameterType	gx_downscale_cm_fn *		1018728	0					
ANR	1018800	Identifier	apply_cm		1018728	1					
ANR	1018801	Parameter	void * apply_cm_arg	2082:30:65072:65103	1018728	10	True				
ANR	1018802	ParameterType	void *		1018728	0					
ANR	1018803	Identifier	apply_cm_arg		1018728	1					
ANR	1018804	Parameter	int post_cm_num_comps	2083:30:65136:65172	1018728	11	True				
ANR	1018805	ParameterType	int		1018728	0					
ANR	1018806	Identifier	post_cm_num_comps		1018728	1					
ANR	1018807	Parameter	int ets	2084:30:65205:65227	1018728	12	True				
ANR	1018808	ParameterType	int		1018728	0					
ANR	1018809	Identifier	ets		1018728	1					
ANR	1018810	CFGEntryNode	ENTRY		1018728		True				
ANR	1018811	CFGExitNode	EXIT		1018728		True				
ANR	1018812	Symbol	dst_bpc		1018728						
ANR	1018813	Symbol	NULL		1018728						
ANR	1018814	Symbol	ets		1018728						
ANR	1018815	Symbol	apply_cm_arg		1018728						
ANR	1018816	Symbol	gx_downscaler_init_trapped_cm_ets		1018728						
ANR	1018817	Symbol	src_bpc		1018728						
ANR	1018818	Symbol	apply_cm		1018728						
ANR	1018819	Symbol	ds		1018728						
ANR	1018820	Symbol	adjust_width_proc		1018728						
ANR	1018821	Symbol	dev		1018728						
ANR	1018822	Symbol	num_comps		1018728						
ANR	1018823	Symbol	post_cm_num_comps		1018728						
ANR	1018824	Symbol	mfs		1018728						
ANR	1018825	Symbol	factor		1018728						
ANR	1018826	Symbol	adjust_width		1018728						
ANR	1018827	Function	gx_downscaler_init_trapped_cm	2093:0:65605:67012							
ANR	1018828	FunctionDef	"gx_downscaler_init_trapped_cm (gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int trap_w , int trap_h , const int * comp_order , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps)"		1018827	0					
ANR	1018829	CompoundStatement		2108:0:66581:67012	1018827	0					
ANR	1018830	ReturnStatement	"return gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , trap_w , trap_h , comp_order , apply_cm , apply_cm_arg , post_cm_num_comps , 0 ) ;"	2109:4:66587:67010	1018827	0	True				
ANR	1018831	CallExpression	"gx_downscaler_init_trapped_cm_ets ( ds , dev , src_bpc , dst_bpc , num_comps , factor , mfs , adjust_width_proc , adjust_width , trap_w , trap_h , comp_order , apply_cm , apply_cm_arg , post_cm_num_comps , 0 )"		1018827	0					
ANR	1018832	Callee	gx_downscaler_init_trapped_cm_ets		1018827	0					
ANR	1018833	Identifier	gx_downscaler_init_trapped_cm_ets		1018827	0					
ANR	1018834	ArgumentList	ds		1018827	1					
ANR	1018835	Argument	ds		1018827	0					
ANR	1018836	Identifier	ds		1018827	0					
ANR	1018837	Argument	dev		1018827	1					
ANR	1018838	Identifier	dev		1018827	0					
ANR	1018839	Argument	src_bpc		1018827	2					
ANR	1018840	Identifier	src_bpc		1018827	0					
ANR	1018841	Argument	dst_bpc		1018827	3					
ANR	1018842	Identifier	dst_bpc		1018827	0					
ANR	1018843	Argument	num_comps		1018827	4					
ANR	1018844	Identifier	num_comps		1018827	0					
ANR	1018845	Argument	factor		1018827	5					
ANR	1018846	Identifier	factor		1018827	0					
ANR	1018847	Argument	mfs		1018827	6					
ANR	1018848	Identifier	mfs		1018827	0					
ANR	1018849	Argument	adjust_width_proc		1018827	7					
ANR	1018850	Identifier	adjust_width_proc		1018827	0					
ANR	1018851	Argument	adjust_width		1018827	8					
ANR	1018852	Identifier	adjust_width		1018827	0					
ANR	1018853	Argument	trap_w		1018827	9					
ANR	1018854	Identifier	trap_w		1018827	0					
ANR	1018855	Argument	trap_h		1018827	10					
ANR	1018856	Identifier	trap_h		1018827	0					
ANR	1018857	Argument	comp_order		1018827	11					
ANR	1018858	Identifier	comp_order		1018827	0					
ANR	1018859	Argument	apply_cm		1018827	12					
ANR	1018860	Identifier	apply_cm		1018827	0					
ANR	1018861	Argument	apply_cm_arg		1018827	13					
ANR	1018862	Identifier	apply_cm_arg		1018827	0					
ANR	1018863	Argument	post_cm_num_comps		1018827	14					
ANR	1018864	Identifier	post_cm_num_comps		1018827	0					
ANR	1018865	Argument	0		1018827	15					
ANR	1018866	PrimaryExpression	0		1018827	0					
ANR	1018867	ReturnType	int		1018827	1					
ANR	1018868	Identifier	gx_downscaler_init_trapped_cm		1018827	2					
ANR	1018869	ParameterList	"gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int trap_w , int trap_h , const int * comp_order , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps"		1018827	3					
ANR	1018870	Parameter	gx_downscaler_t * ds	2093:34:65639:65660	1018827	0	True				
ANR	1018871	ParameterType	gx_downscaler_t *		1018827	0					
ANR	1018872	Identifier	ds		1018827	1					
ANR	1018873	Parameter	gx_device * dev	2094:34:65697:65719	1018827	1	True				
ANR	1018874	ParameterType	gx_device *		1018827	0					
ANR	1018875	Identifier	dev		1018827	1					
ANR	1018876	Parameter	int src_bpc	2095:34:65756:65782	1018827	2	True				
ANR	1018877	ParameterType	int		1018827	0					
ANR	1018878	Identifier	src_bpc		1018827	1					
ANR	1018879	Parameter	int dst_bpc	2096:34:65819:65845	1018827	3	True				
ANR	1018880	ParameterType	int		1018827	0					
ANR	1018881	Identifier	dst_bpc		1018827	1					
ANR	1018882	Parameter	int num_comps	2097:34:65882:65910	1018827	4	True				
ANR	1018883	ParameterType	int		1018827	0					
ANR	1018884	Identifier	num_comps		1018827	1					
ANR	1018885	Parameter	int factor	2098:34:65947:65972	1018827	5	True				
ANR	1018886	ParameterType	int		1018827	0					
ANR	1018887	Identifier	factor		1018827	1					
ANR	1018888	Parameter	int mfs	2099:34:66009:66031	1018827	6	True				
ANR	1018889	ParameterType	int		1018827	0					
ANR	1018890	Identifier	mfs		1018827	1					
ANR	1018891	Parameter	"int ( * adjust_width_proc ) ( int , int )"	2100:34:66068:66115	1018827	7	True				
ANR	1018892	ParameterType	"(( int , int ) int) *"		1018827	0					
ANR	1018893	Identifier	adjust_width_proc		1018827	1					
ANR	1018894	Parameter	int adjust_width	2101:34:66152:66183	1018827	8	True				
ANR	1018895	ParameterType	int		1018827	0					
ANR	1018896	Identifier	adjust_width		1018827	1					
ANR	1018897	Parameter	int trap_w	2102:34:66220:66245	1018827	9	True				
ANR	1018898	ParameterType	int		1018827	0					
ANR	1018899	Identifier	trap_w		1018827	1					
ANR	1018900	Parameter	int trap_h	2103:34:66282:66307	1018827	10	True				
ANR	1018901	ParameterType	int		1018827	0					
ANR	1018902	Identifier	trap_h		1018827	1					
ANR	1018903	Parameter	const int * comp_order	2104:34:66344:66373	1018827	11	True				
ANR	1018904	ParameterType	const int *		1018827	0					
ANR	1018905	Identifier	comp_order		1018827	1					
ANR	1018906	Parameter	gx_downscale_cm_fn * apply_cm	2105:34:66410:66437	1018827	12	True				
ANR	1018907	ParameterType	gx_downscale_cm_fn *		1018827	0					
ANR	1018908	Identifier	apply_cm		1018827	1					
ANR	1018909	Parameter	void * apply_cm_arg	2106:34:66474:66505	1018827	13	True				
ANR	1018910	ParameterType	void *		1018827	0					
ANR	1018911	Identifier	apply_cm_arg		1018827	1					
ANR	1018912	Parameter	int post_cm_num_comps	2107:34:66542:66578	1018827	14	True				
ANR	1018913	ParameterType	int		1018827	0					
ANR	1018914	Identifier	post_cm_num_comps		1018827	1					
ANR	1018915	CFGEntryNode	ENTRY		1018827		True				
ANR	1018916	CFGExitNode	EXIT		1018827		True				
ANR	1018917	Symbol	dst_bpc		1018827						
ANR	1018918	Symbol	trap_w		1018827						
ANR	1018919	Symbol	comp_order		1018827						
ANR	1018920	Symbol	apply_cm_arg		1018827						
ANR	1018921	Symbol	gx_downscaler_init_trapped_cm_ets		1018827						
ANR	1018922	Symbol	src_bpc		1018827						
ANR	1018923	Symbol	apply_cm		1018827						
ANR	1018924	Symbol	ds		1018827						
ANR	1018925	Symbol	trap_h		1018827						
ANR	1018926	Symbol	adjust_width_proc		1018827						
ANR	1018927	Symbol	dev		1018827						
ANR	1018928	Symbol	num_comps		1018827						
ANR	1018929	Symbol	post_cm_num_comps		1018827						
ANR	1018930	Symbol	mfs		1018827						
ANR	1018931	Symbol	factor		1018827						
ANR	1018932	Symbol	adjust_width		1018827						
ANR	1018933	Function	gx_downscaler_init_trapped_cm_ets	2117:0:67015:74139							
ANR	1018934	FunctionDef	"gx_downscaler_init_trapped_cm_ets (gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int trap_w , int trap_h , const int * comp_order , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps , int ets)"		1018933	0					
ANR	1018935	CompoundStatement		2133:0:68055:74139	1018933	0					
ANR	1018936	IdentifierDeclStatement	int size ;	2134:4:68061:68084	1018933	0	True				
ANR	1018937	IdentifierDecl	size		1018933	0					
ANR	1018938	IdentifierDeclType	int		1018933	0					
ANR	1018939	Identifier	size		1018933	1					
ANR	1018940	IdentifierDeclStatement	int post_size ;	2135:4:68090:68118	1018933	1	True				
ANR	1018941	IdentifierDecl	post_size		1018933	0					
ANR	1018942	IdentifierDeclType	int		1018933	0					
ANR	1018943	Identifier	post_size		1018933	1					
ANR	1018944	IdentifierDeclStatement	int span ;	2136:4:68124:68147	1018933	2	True				
ANR	1018945	IdentifierDecl	span		1018933	0					
ANR	1018946	IdentifierDeclType	int		1018933	0					
ANR	1018947	Identifier	span		1018933	1					
ANR	1018948	IdentifierDeclStatement	int width ;	2137:4:68153:68177	1018933	3	True				
ANR	1018949	IdentifierDecl	width		1018933	0					
ANR	1018950	IdentifierDeclType	int		1018933	0					
ANR	1018951	Identifier	width		1018933	1					
ANR	1018952	IdentifierDeclStatement	int awidth ;	2138:4:68183:68208	1018933	4	True				
ANR	1018953	IdentifierDecl	awidth		1018933	0					
ANR	1018954	IdentifierDeclType	int		1018933	0					
ANR	1018955	Identifier	awidth		1018933	1					
ANR	1018956	IdentifierDeclStatement	int pad_white ;	2139:4:68214:68242	1018933	5	True				
ANR	1018957	IdentifierDecl	pad_white		1018933	0					
ANR	1018958	IdentifierDeclType	int		1018933	0					
ANR	1018959	Identifier	pad_white		1018933	1					
ANR	1018960	IdentifierDeclStatement	int code ;	2140:4:68248:68271	1018933	6	True				
ANR	1018961	IdentifierDecl	code		1018933	0					
ANR	1018962	IdentifierDeclType	int		1018933	0					
ANR	1018963	Identifier	code		1018933	1					
ANR	1018964	IdentifierDeclStatement	gx_downscale_core * core ;	2141:4:68277:68300	1018933	7	True				
ANR	1018965	IdentifierDecl	* core		1018933	0					
ANR	1018966	IdentifierDeclType	gx_downscale_core *		1018933	0					
ANR	1018967	Identifier	core		1018933	1					
ANR	1018968	IdentifierDeclStatement	int upfactor ;	2142:4:68306:68333	1018933	8	True				
ANR	1018969	IdentifierDecl	upfactor		1018933	0					
ANR	1018970	IdentifierDeclType	int		1018933	0					
ANR	1018971	Identifier	upfactor		1018933	1					
ANR	1018972	IdentifierDeclStatement	int downfactor ;	2143:4:68339:68368	1018933	9	True				
ANR	1018973	IdentifierDecl	downfactor		1018933	0					
ANR	1018974	IdentifierDeclType	int		1018933	0					
ANR	1018975	Identifier	downfactor		1018933	1					
ANR	1018976	IdentifierDeclStatement	int nc ;	2144:4:68374:68395	1018933	10	True				
ANR	1018977	IdentifierDecl	nc		1018933	0					
ANR	1018978	IdentifierDeclType	int		1018933	0					
ANR	1018979	Identifier	nc		1018933	1					
ANR	1018980	ExpressionStatement	size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) dev )	2146:4:68402:68455	1018933	11	True				
ANR	1018981	AssignmentExpression	size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) dev )		1018933	0		=			
ANR	1018982	Identifier	size		1018933	0					
ANR	1018983	CallExpression	gdev_mem_bytes_per_scan_line ( ( gx_device * ) dev )		1018933	1					
ANR	1018984	Callee	gdev_mem_bytes_per_scan_line		1018933	0					
ANR	1018985	Identifier	gdev_mem_bytes_per_scan_line		1018933	0					
ANR	1018986	ArgumentList	( gx_device * ) dev		1018933	1					
ANR	1018987	Argument	( gx_device * ) dev		1018933	0					
ANR	1018988	CastExpression	( gx_device * ) dev		1018933	0					
ANR	1018989	CastTarget	gx_device *		1018933	0					
ANR	1018990	Identifier	dev		1018933	1					
ANR	1018991	ExpressionStatement	post_size = bitmap_raster ( dev -> width * src_bpc * post_cm_num_comps )	2147:4:68461:68528	1018933	12	True				
ANR	1018992	AssignmentExpression	post_size = bitmap_raster ( dev -> width * src_bpc * post_cm_num_comps )		1018933	0		=			
ANR	1018993	Identifier	post_size		1018933	0					
ANR	1018994	CallExpression	bitmap_raster ( dev -> width * src_bpc * post_cm_num_comps )		1018933	1					
ANR	1018995	Callee	bitmap_raster		1018933	0					
ANR	1018996	Identifier	bitmap_raster		1018933	0					
ANR	1018997	ArgumentList	dev -> width * src_bpc * post_cm_num_comps		1018933	1					
ANR	1018998	Argument	dev -> width * src_bpc * post_cm_num_comps		1018933	0					
ANR	1018999	MultiplicativeExpression	dev -> width * src_bpc * post_cm_num_comps		1018933	0		*			
ANR	1019000	PtrMemberAccess	dev -> width		1018933	0					
ANR	1019001	Identifier	dev		1018933	0					
ANR	1019002	Identifier	width		1018933	1					
ANR	1019003	MultiplicativeExpression	src_bpc * post_cm_num_comps		1018933	1		*			
ANR	1019004	Identifier	src_bpc		1018933	0					
ANR	1019005	Identifier	post_cm_num_comps		1018933	1					
ANR	1019006	ExpressionStatement	"decode_factor ( factor , & upfactor , & downfactor )"	2149:4:68535:68580	1018933	13	True				
ANR	1019007	CallExpression	"decode_factor ( factor , & upfactor , & downfactor )"		1018933	0					
ANR	1019008	Callee	decode_factor		1018933	0					
ANR	1019009	Identifier	decode_factor		1018933	0					
ANR	1019010	ArgumentList	factor		1018933	1					
ANR	1019011	Argument	factor		1018933	0					
ANR	1019012	Identifier	factor		1018933	0					
ANR	1019013	Argument	& upfactor		1018933	1					
ANR	1019014	UnaryOperationExpression	& upfactor		1018933	0					
ANR	1019015	UnaryOperator	&		1018933	0					
ANR	1019016	Identifier	upfactor		1018933	1					
ANR	1019017	Argument	& downfactor		1018933	2					
ANR	1019018	UnaryOperationExpression	& downfactor		1018933	0					
ANR	1019019	UnaryOperator	&		1018933	0					
ANR	1019020	Identifier	downfactor		1018933	1					
ANR	1019021	ExpressionStatement	width = ( dev -> width * upfactor ) / downfactor	2152:4:68618:68660	1018933	14	True				
ANR	1019022	AssignmentExpression	width = ( dev -> width * upfactor ) / downfactor		1018933	0		=			
ANR	1019023	Identifier	width		1018933	0					
ANR	1019024	MultiplicativeExpression	( dev -> width * upfactor ) / downfactor		1018933	1		/			
ANR	1019025	MultiplicativeExpression	dev -> width * upfactor		1018933	0		*			
ANR	1019026	PtrMemberAccess	dev -> width		1018933	0					
ANR	1019027	Identifier	dev		1018933	0					
ANR	1019028	Identifier	width		1018933	1					
ANR	1019029	Identifier	upfactor		1018933	1					
ANR	1019030	Identifier	downfactor		1018933	1					
ANR	1019031	ExpressionStatement	awidth = width	2153:4:68666:68680	1018933	15	True				
ANR	1019032	AssignmentExpression	awidth = width		1018933	0		=			
ANR	1019033	Identifier	awidth		1018933	0					
ANR	1019034	Identifier	width		1018933	1					
ANR	1019035	IfStatement	if ( adjust_width_proc != NULL )		1018933	16					
ANR	1019036	Condition	adjust_width_proc != NULL	2154:8:68690:68714	1018933	0	True				
ANR	1019037	EqualityExpression	adjust_width_proc != NULL		1018933	0		!=			
ANR	1019038	Identifier	adjust_width_proc		1018933	0					
ANR	1019039	Identifier	NULL		1018933	1					
ANR	1019040	ExpressionStatement	"awidth = ( * adjust_width_proc ) ( width , adjust_width )"	2155:8:68725:68775	1018933	1	True				
ANR	1019041	AssignmentExpression	"awidth = ( * adjust_width_proc ) ( width , adjust_width )"		1018933	0		=			
ANR	1019042	Identifier	awidth		1018933	0					
ANR	1019043	CallExpression	"( * adjust_width_proc ) ( width , adjust_width )"		1018933	1					
ANR	1019044	Callee	* adjust_width_proc		1018933	0					
ANR	1019045	UnaryOperationExpression	* adjust_width_proc		1018933	0					
ANR	1019046	UnaryOperator	*		1018933	0					
ANR	1019047	Identifier	adjust_width_proc		1018933	1					
ANR	1019048	ArgumentList	width		1018933	1					
ANR	1019049	Argument	width		1018933	0					
ANR	1019050	Identifier	width		1018933	0					
ANR	1019051	Argument	adjust_width		1018933	1					
ANR	1019052	Identifier	adjust_width		1018933	0					
ANR	1019053	ExpressionStatement	pad_white = awidth - width	2156:4:68781:68807	1018933	17	True				
ANR	1019054	AssignmentExpression	pad_white = awidth - width		1018933	0		=			
ANR	1019055	Identifier	pad_white		1018933	0					
ANR	1019056	AdditiveExpression	awidth - width		1018933	1		-			
ANR	1019057	Identifier	awidth		1018933	0					
ANR	1019058	Identifier	width		1018933	1					
ANR	1019059	IfStatement	if ( pad_white < 0 )		1018933	18					
ANR	1019060	Condition	pad_white < 0	2157:8:68817:68829	1018933	0	True				
ANR	1019061	RelationalExpression	pad_white < 0		1018933	0		<			
ANR	1019062	Identifier	pad_white		1018933	0					
ANR	1019063	PrimaryExpression	0		1018933	1					
ANR	1019064	ExpressionStatement	pad_white = 0	2158:8:68840:68853	1018933	1	True				
ANR	1019065	AssignmentExpression	pad_white = 0		1018933	0		=			
ANR	1019066	Identifier	pad_white		1018933	0					
ANR	1019067	PrimaryExpression	0		1018933	1					
ANR	1019068	ExpressionStatement	span = size + pad_white * downfactor * num_comps / upfactor + downfactor - 1	2161:4:68923:68991	1018933	19	True				
ANR	1019069	AssignmentExpression	span = size + pad_white * downfactor * num_comps / upfactor + downfactor - 1		1018933	0		=			
ANR	1019070	Identifier	span		1018933	0					
ANR	1019071	AdditiveExpression	size + pad_white * downfactor * num_comps / upfactor + downfactor - 1		1018933	1		+			
ANR	1019072	Identifier	size		1018933	0					
ANR	1019073	AdditiveExpression	pad_white * downfactor * num_comps / upfactor + downfactor - 1		1018933	1		+			
ANR	1019074	MultiplicativeExpression	pad_white * downfactor * num_comps / upfactor		1018933	0		*			
ANR	1019075	Identifier	pad_white		1018933	0					
ANR	1019076	MultiplicativeExpression	downfactor * num_comps / upfactor		1018933	1		*			
ANR	1019077	Identifier	downfactor		1018933	0					
ANR	1019078	MultiplicativeExpression	num_comps / upfactor		1018933	1		/			
ANR	1019079	Identifier	num_comps		1018933	0					
ANR	1019080	Identifier	upfactor		1018933	1					
ANR	1019081	AdditiveExpression	downfactor - 1		1018933	1		-			
ANR	1019082	Identifier	downfactor		1018933	0					
ANR	1019083	PrimaryExpression	1		1018933	1					
ANR	1019084	ExpressionStatement	"memset ( ds , 0 , sizeof ( * ds ) )"	2162:4:68997:69023	1018933	20	True				
ANR	1019085	CallExpression	"memset ( ds , 0 , sizeof ( * ds ) )"		1018933	0					
ANR	1019086	Callee	memset		1018933	0					
ANR	1019087	Identifier	memset		1018933	0					
ANR	1019088	ArgumentList	ds		1018933	1					
ANR	1019089	Argument	ds		1018933	0					
ANR	1019090	Identifier	ds		1018933	0					
ANR	1019091	Argument	0		1018933	1					
ANR	1019092	PrimaryExpression	0		1018933	0					
ANR	1019093	Argument	sizeof ( * ds )		1018933	2					
ANR	1019094	SizeofExpression	sizeof ( * ds )		1018933	0					
ANR	1019095	Sizeof	sizeof		1018933	0					
ANR	1019096	UnaryOperationExpression	* ds		1018933	1					
ANR	1019097	UnaryOperator	*		1018933	0					
ANR	1019098	Identifier	ds		1018933	1					
ANR	1019099	ExpressionStatement	ds -> dev = dev	2163:4:69029:69056	1018933	21	True				
ANR	1019100	AssignmentExpression	ds -> dev = dev		1018933	0		=			
ANR	1019101	PtrMemberAccess	ds -> dev		1018933	0					
ANR	1019102	Identifier	ds		1018933	0					
ANR	1019103	Identifier	dev		1018933	1					
ANR	1019104	Identifier	dev		1018933	1					
ANR	1019105	ExpressionStatement	ds -> width = width	2164:4:69062:69091	1018933	22	True				
ANR	1019106	AssignmentExpression	ds -> width = width		1018933	0		=			
ANR	1019107	PtrMemberAccess	ds -> width		1018933	0					
ANR	1019108	Identifier	ds		1018933	0					
ANR	1019109	Identifier	width		1018933	1					
ANR	1019110	Identifier	width		1018933	1					
ANR	1019111	ExpressionStatement	ds -> awidth = awidth	2165:4:69097:69127	1018933	23	True				
ANR	1019112	AssignmentExpression	ds -> awidth = awidth		1018933	0		=			
ANR	1019113	PtrMemberAccess	ds -> awidth		1018933	0					
ANR	1019114	Identifier	ds		1018933	0					
ANR	1019115	Identifier	awidth		1018933	1					
ANR	1019116	Identifier	awidth		1018933	1					
ANR	1019117	ExpressionStatement	ds -> span = span	2166:4:69133:69161	1018933	24	True				
ANR	1019118	AssignmentExpression	ds -> span = span		1018933	0		=			
ANR	1019119	PtrMemberAccess	ds -> span		1018933	0					
ANR	1019120	Identifier	ds		1018933	0					
ANR	1019121	Identifier	span		1018933	1					
ANR	1019122	Identifier	span		1018933	1					
ANR	1019123	ExpressionStatement	ds -> factor = factor	2167:4:69167:69197	1018933	25	True				
ANR	1019124	AssignmentExpression	ds -> factor = factor		1018933	0		=			
ANR	1019125	PtrMemberAccess	ds -> factor		1018933	0					
ANR	1019126	Identifier	ds		1018933	0					
ANR	1019127	Identifier	factor		1018933	1					
ANR	1019128	Identifier	factor		1018933	1					
ANR	1019129	ExpressionStatement	ds -> num_planes = 0	2168:4:69203:69228	1018933	26	True				
ANR	1019130	AssignmentExpression	ds -> num_planes = 0		1018933	0		=			
ANR	1019131	PtrMemberAccess	ds -> num_planes		1018933	0					
ANR	1019132	Identifier	ds		1018933	0					
ANR	1019133	Identifier	num_planes		1018933	1					
ANR	1019134	PrimaryExpression	0		1018933	1					
ANR	1019135	ExpressionStatement	ds -> src_bpc = src_bpc	2169:4:69234:69265	1018933	27	True				
ANR	1019136	AssignmentExpression	ds -> src_bpc = src_bpc		1018933	0		=			
ANR	1019137	PtrMemberAccess	ds -> src_bpc		1018933	0					
ANR	1019138	Identifier	ds		1018933	0					
ANR	1019139	Identifier	src_bpc		1018933	1					
ANR	1019140	Identifier	src_bpc		1018933	1					
ANR	1019141	ExpressionStatement	ds -> apply_cm = apply_cm	2170:4:69271:69303	1018933	28	True				
ANR	1019142	AssignmentExpression	ds -> apply_cm = apply_cm		1018933	0		=			
ANR	1019143	PtrMemberAccess	ds -> apply_cm		1018933	0					
ANR	1019144	Identifier	ds		1018933	0					
ANR	1019145	Identifier	apply_cm		1018933	1					
ANR	1019146	Identifier	apply_cm		1018933	1					
ANR	1019147	ExpressionStatement	ds -> apply_cm_arg = apply_cm_arg	2171:4:69309:69345	1018933	29	True				
ANR	1019148	AssignmentExpression	ds -> apply_cm_arg = apply_cm_arg		1018933	0		=			
ANR	1019149	PtrMemberAccess	ds -> apply_cm_arg		1018933	0					
ANR	1019150	Identifier	ds		1018933	0					
ANR	1019151	Identifier	apply_cm_arg		1018933	1					
ANR	1019152	Identifier	apply_cm_arg		1018933	1					
ANR	1019153	ExpressionStatement	ds -> early_cm = dst_bpc < src_bpc	2172:4:69351:69392	1018933	30	True				
ANR	1019154	AssignmentExpression	ds -> early_cm = dst_bpc < src_bpc		1018933	0		=			
ANR	1019155	PtrMemberAccess	ds -> early_cm		1018933	0					
ANR	1019156	Identifier	ds		1018933	0					
ANR	1019157	Identifier	early_cm		1018933	1					
ANR	1019158	RelationalExpression	dst_bpc < src_bpc		1018933	1		<			
ANR	1019159	Identifier	dst_bpc		1018933	0					
ANR	1019160	Identifier	src_bpc		1018933	1					
ANR	1019161	ExpressionStatement	ds -> post_cm_num_comps = post_cm_num_comps	2173:4:69398:69439	1018933	31	True				
ANR	1019162	AssignmentExpression	ds -> post_cm_num_comps = post_cm_num_comps		1018933	0		=			
ANR	1019163	PtrMemberAccess	ds -> post_cm_num_comps		1018933	0					
ANR	1019164	Identifier	ds		1018933	0					
ANR	1019165	Identifier	post_cm_num_comps		1018933	1					
ANR	1019166	Identifier	post_cm_num_comps		1018933	1					
ANR	1019167	ExpressionStatement	"code = check_trapping ( dev -> memory , trap_w , trap_h , num_comps , comp_order )"	2175:4:69446:69519	1018933	32	True				
ANR	1019168	AssignmentExpression	"code = check_trapping ( dev -> memory , trap_w , trap_h , num_comps , comp_order )"		1018933	0		=			
ANR	1019169	Identifier	code		1018933	0					
ANR	1019170	CallExpression	"check_trapping ( dev -> memory , trap_w , trap_h , num_comps , comp_order )"		1018933	1					
ANR	1019171	Callee	check_trapping		1018933	0					
ANR	1019172	Identifier	check_trapping		1018933	0					
ANR	1019173	ArgumentList	dev -> memory		1018933	1					
ANR	1019174	Argument	dev -> memory		1018933	0					
ANR	1019175	PtrMemberAccess	dev -> memory		1018933	0					
ANR	1019176	Identifier	dev		1018933	0					
ANR	1019177	Identifier	memory		1018933	1					
ANR	1019178	Argument	trap_w		1018933	1					
ANR	1019179	Identifier	trap_w		1018933	0					
ANR	1019180	Argument	trap_h		1018933	2					
ANR	1019181	Identifier	trap_h		1018933	0					
ANR	1019182	Argument	num_comps		1018933	3					
ANR	1019183	Identifier	num_comps		1018933	0					
ANR	1019184	Argument	comp_order		1018933	4					
ANR	1019185	Identifier	comp_order		1018933	0					
ANR	1019186	IfStatement	if ( code < 0 )		1018933	33					
ANR	1019187	Condition	code < 0	2176:8:69529:69536	1018933	0	True				
ANR	1019188	RelationalExpression	code < 0		1018933	0		<			
ANR	1019189	Identifier	code		1018933	0					
ANR	1019190	PrimaryExpression	0		1018933	1					
ANR	1019191	ReturnStatement	return code ;	2177:8:69547:69558	1018933	1	True				
ANR	1019192	Identifier	code		1018933	0					
ANR	1019193	IfStatement	if ( trap_w > 0 || trap_h > 0 )		1018933	34					
ANR	1019194	Condition	trap_w > 0 || trap_h > 0	2179:8:69569:69592	1018933	0	True				
ANR	1019195	OrExpression	trap_w > 0 || trap_h > 0		1018933	0		||			
ANR	1019196	RelationalExpression	trap_w > 0		1018933	0		>			
ANR	1019197	Identifier	trap_w		1018933	0					
ANR	1019198	PrimaryExpression	0		1018933	1					
ANR	1019199	RelationalExpression	trap_h > 0		1018933	1		>			
ANR	1019200	Identifier	trap_h		1018933	0					
ANR	1019201	PrimaryExpression	0		1018933	1					
ANR	1019202	CompoundStatement		47:34:1539:1539	1018933	1					
ANR	1019203	ExpressionStatement	"ds -> claptrap = ClapTrap_Init ( dev -> memory , width , dev -> height , num_comps , comp_order , trap_w , trap_h , get_line_for_trap , ds )"	2180:8:69605:69728	1018933	0	True				
ANR	1019204	AssignmentExpression	"ds -> claptrap = ClapTrap_Init ( dev -> memory , width , dev -> height , num_comps , comp_order , trap_w , trap_h , get_line_for_trap , ds )"		1018933	0		=			
ANR	1019205	PtrMemberAccess	ds -> claptrap		1018933	0					
ANR	1019206	Identifier	ds		1018933	0					
ANR	1019207	Identifier	claptrap		1018933	1					
ANR	1019208	CallExpression	"ClapTrap_Init ( dev -> memory , width , dev -> height , num_comps , comp_order , trap_w , trap_h , get_line_for_trap , ds )"		1018933	1					
ANR	1019209	Callee	ClapTrap_Init		1018933	0					
ANR	1019210	Identifier	ClapTrap_Init		1018933	0					
ANR	1019211	ArgumentList	dev -> memory		1018933	1					
ANR	1019212	Argument	dev -> memory		1018933	0					
ANR	1019213	PtrMemberAccess	dev -> memory		1018933	0					
ANR	1019214	Identifier	dev		1018933	0					
ANR	1019215	Identifier	memory		1018933	1					
ANR	1019216	Argument	width		1018933	1					
ANR	1019217	Identifier	width		1018933	0					
ANR	1019218	Argument	dev -> height		1018933	2					
ANR	1019219	PtrMemberAccess	dev -> height		1018933	0					
ANR	1019220	Identifier	dev		1018933	0					
ANR	1019221	Identifier	height		1018933	1					
ANR	1019222	Argument	num_comps		1018933	3					
ANR	1019223	Identifier	num_comps		1018933	0					
ANR	1019224	Argument	comp_order		1018933	4					
ANR	1019225	Identifier	comp_order		1018933	0					
ANR	1019226	Argument	trap_w		1018933	5					
ANR	1019227	Identifier	trap_w		1018933	0					
ANR	1019228	Argument	trap_h		1018933	6					
ANR	1019229	Identifier	trap_h		1018933	0					
ANR	1019230	Argument	get_line_for_trap		1018933	7					
ANR	1019231	Identifier	get_line_for_trap		1018933	0					
ANR	1019232	Argument	ds		1018933	8					
ANR	1019233	Identifier	ds		1018933	0					
ANR	1019234	IfStatement	if ( ds -> claptrap == NULL )		1018933	1					
ANR	1019235	Condition	ds -> claptrap == NULL	2181:12:69742:69761	1018933	0	True				
ANR	1019236	EqualityExpression	ds -> claptrap == NULL		1018933	0		==			
ANR	1019237	PtrMemberAccess	ds -> claptrap		1018933	0					
ANR	1019238	Identifier	ds		1018933	0					
ANR	1019239	Identifier	claptrap		1018933	1					
ANR	1019240	Identifier	NULL		1018933	1					
ANR	1019241	CompoundStatement		49:34:1708:1708	1018933	1					
ANR	1019242	ExpressionStatement	"emprintf ( dev -> memory , ""Trapping initialisation failed"" )"	2182:12:69778:69833	1018933	0	True				
ANR	1019243	CallExpression	"emprintf ( dev -> memory , ""Trapping initialisation failed"" )"		1018933	0					
ANR	1019244	Callee	emprintf		1018933	0					
ANR	1019245	Identifier	emprintf		1018933	0					
ANR	1019246	ArgumentList	dev -> memory		1018933	1					
ANR	1019247	Argument	dev -> memory		1018933	0					
ANR	1019248	PtrMemberAccess	dev -> memory		1018933	0					
ANR	1019249	Identifier	dev		1018933	0					
ANR	1019250	Identifier	memory		1018933	1					
ANR	1019251	Argument	"""Trapping initialisation failed"""		1018933	1					
ANR	1019252	PrimaryExpression	"""Trapping initialisation failed"""		1018933	0					
ANR	1019253	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	2183:12:69847:69885	1018933	1	True				
ANR	1019254	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1018933	0		=			
ANR	1019255	Identifier	code		1018933	0					
ANR	1019256	CallExpression	gs_note_error ( gs_error_VMerror )		1018933	1					
ANR	1019257	Callee	gs_note_error		1018933	0					
ANR	1019258	Identifier	gs_note_error		1018933	0					
ANR	1019259	ArgumentList	gs_error_VMerror		1018933	1					
ANR	1019260	Argument	gs_error_VMerror		1018933	0					
ANR	1019261	Identifier	gs_error_VMerror		1018933	0					
ANR	1019262	GotoStatement	goto cleanup ;	2184:12:69899:69911	1018933	2	True				
ANR	1019263	Identifier	cleanup		1018933	0					
ANR	1019264	ElseStatement	else		1018933	0					
ANR	1019265	ExpressionStatement	ds -> claptrap = NULL	2187:8:69942:69961	1018933	0	True				
ANR	1019266	AssignmentExpression	ds -> claptrap = NULL		1018933	0		=			
ANR	1019267	PtrMemberAccess	ds -> claptrap		1018933	0					
ANR	1019268	Identifier	ds		1018933	0					
ANR	1019269	Identifier	claptrap		1018933	1					
ANR	1019270	Identifier	NULL		1018933	1					
ANR	1019271	ExpressionStatement	core = NULL	2191:4:70085:70096	1018933	35	True				
ANR	1019272	AssignmentExpression	core = NULL		1018933	0		=			
ANR	1019273	Identifier	core		1018933	0					
ANR	1019274	Identifier	NULL		1018933	1					
ANR	1019275	WhileStatement	while ( 1 )		1018933	36					
ANR	1019276	Condition	1	2192:11:70109:70109	1018933	0	True				
ANR	1019277	PrimaryExpression	1		1018933	0					
ANR	1019278	CompoundStatement		61:4:2060:2060	1018933	1					
ANR	1019279	ExpressionStatement	nc = ds -> early_cm ? post_cm_num_comps : num_comps	2194:8:70126:70175	1018933	0	True				
ANR	1019280	AssignmentExpression	nc = ds -> early_cm ? post_cm_num_comps : num_comps		1018933	0		=			
ANR	1019281	Identifier	nc		1018933	0					
ANR	1019282	ConditionalExpression	ds -> early_cm ? post_cm_num_comps : num_comps		1018933	1					
ANR	1019283	Condition	ds -> early_cm		1018933	0					
ANR	1019284	PtrMemberAccess	ds -> early_cm		1018933	0					
ANR	1019285	Identifier	ds		1018933	0					
ANR	1019286	Identifier	early_cm		1018933	1					
ANR	1019287	Identifier	post_cm_num_comps		1018933	1					
ANR	1019288	Identifier	num_comps		1018933	2					
ANR	1019289	IfStatement	if ( factor > 8 )		1018933	1					
ANR	1019290	Condition	factor > 8	2196:12:70190:70199	1018933	0	True				
ANR	1019291	RelationalExpression	factor > 8		1018933	0		>			
ANR	1019292	Identifier	factor		1018933	0					
ANR	1019293	PrimaryExpression	8		1018933	1					
ANR	1019294	CompoundStatement		64:24:2146:2146	1018933	1					
ANR	1019295	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	2197:12:70216:70257	1018933	0	True				
ANR	1019296	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		1018933	0		=			
ANR	1019297	Identifier	code		1018933	0					
ANR	1019298	CallExpression	gs_note_error ( gs_error_rangecheck )		1018933	1					
ANR	1019299	Callee	gs_note_error		1018933	0					
ANR	1019300	Identifier	gs_note_error		1018933	0					
ANR	1019301	ArgumentList	gs_error_rangecheck		1018933	1					
ANR	1019302	Argument	gs_error_rangecheck		1018933	0					
ANR	1019303	Identifier	gs_error_rangecheck		1018933	0					
ANR	1019304	GotoStatement	goto cleanup ;	2198:12:70271:70283	1018933	1	True				
ANR	1019305	Identifier	cleanup		1018933	0					
ANR	1019306	ElseStatement	else		1018933	0					
ANR	1019307	IfStatement	if ( ( src_bpc == 16 ) && ( dst_bpc == 16 ) && ( nc == 1 ) )		1018933	0					
ANR	1019308	Condition	( src_bpc == 16 ) && ( dst_bpc == 16 ) && ( nc == 1 )	2200:17:70312:70358	1018933	0	True				
ANR	1019309	AndExpression	( src_bpc == 16 ) && ( dst_bpc == 16 ) && ( nc == 1 )		1018933	0		&&			
ANR	1019310	EqualityExpression	src_bpc == 16		1018933	0		==			
ANR	1019311	Identifier	src_bpc		1018933	0					
ANR	1019312	PrimaryExpression	16		1018933	1					
ANR	1019313	AndExpression	( dst_bpc == 16 ) && ( nc == 1 )		1018933	1		&&			
ANR	1019314	EqualityExpression	dst_bpc == 16		1018933	0		==			
ANR	1019315	Identifier	dst_bpc		1018933	0					
ANR	1019316	PrimaryExpression	16		1018933	1					
ANR	1019317	EqualityExpression	nc == 1		1018933	1		==			
ANR	1019318	Identifier	nc		1018933	0					
ANR	1019319	PrimaryExpression	1		1018933	1					
ANR	1019320	CompoundStatement		69:8:2313:2313	1018933	1					
ANR	1019321	ExpressionStatement	core = & down_core16	2202:12:70383:70402	1018933	0	True				
ANR	1019322	AssignmentExpression	core = & down_core16		1018933	0		=			
ANR	1019323	Identifier	core		1018933	0					
ANR	1019324	UnaryOperationExpression	& down_core16		1018933	1					
ANR	1019325	UnaryOperator	&		1018933	0					
ANR	1019326	Identifier	down_core16		1018933	1					
ANR	1019327	ElseStatement	else		1018933	0					
ANR	1019328	IfStatement	if ( ( src_bpc == 8 ) && ( dst_bpc == 1 ) && ( nc == 4 ) )		1018933	0					
ANR	1019329	Condition	( src_bpc == 8 ) && ( dst_bpc == 1 ) && ( nc == 4 )	2204:17:70431:70475	1018933	0	True				
ANR	1019330	AndExpression	( src_bpc == 8 ) && ( dst_bpc == 1 ) && ( nc == 4 )		1018933	0		&&			
ANR	1019331	EqualityExpression	src_bpc == 8		1018933	0		==			
ANR	1019332	Identifier	src_bpc		1018933	0					
ANR	1019333	PrimaryExpression	8		1018933	1					
ANR	1019334	AndExpression	( dst_bpc == 1 ) && ( nc == 4 )		1018933	1		&&			
ANR	1019335	EqualityExpression	dst_bpc == 1		1018933	0		==			
ANR	1019336	Identifier	dst_bpc		1018933	0					
ANR	1019337	PrimaryExpression	1		1018933	1					
ANR	1019338	EqualityExpression	nc == 4		1018933	1		==			
ANR	1019339	Identifier	nc		1018933	0					
ANR	1019340	PrimaryExpression	4		1018933	1					
ANR	1019341	CompoundStatement		73:8:2430:2430	1018933	1					
ANR	1019342	IfStatement	if ( mfs > 1 )		1018933	0					
ANR	1019343	Condition	mfs > 1	2206:16:70504:70510	1018933	0	True				
ANR	1019344	RelationalExpression	mfs > 1		1018933	0		>			
ANR	1019345	Identifier	mfs		1018933	0					
ANR	1019346	PrimaryExpression	1		1018933	1					
ANR	1019347	ExpressionStatement	core = & down_core4_mfs	2207:16:70529:70551	1018933	1	True				
ANR	1019348	AssignmentExpression	core = & down_core4_mfs		1018933	0		=			
ANR	1019349	Identifier	core		1018933	0					
ANR	1019350	UnaryOperationExpression	& down_core4_mfs		1018933	1					
ANR	1019351	UnaryOperator	&		1018933	0					
ANR	1019352	Identifier	down_core4_mfs		1018933	1					
ANR	1019353	ElseStatement	else		1018933	0					
ANR	1019354	IfStatement	if ( ets )		1018933	0					
ANR	1019355	Condition	ets	2208:21:70574:70576	1018933	0	True				
ANR	1019356	Identifier	ets		1018933	0					
ANR	1019357	CompoundStatement		77:12:2535:2535	1018933	1					
ANR	1019358	ExpressionStatement	"code = init_ets ( ds , 4 , core )"	2210:16:70609:70637	1018933	0	True				
ANR	1019359	AssignmentExpression	"code = init_ets ( ds , 4 , core )"		1018933	0		=			
ANR	1019360	Identifier	code		1018933	0					
ANR	1019361	CallExpression	"init_ets ( ds , 4 , core )"		1018933	1					
ANR	1019362	Callee	init_ets		1018933	0					
ANR	1019363	Identifier	init_ets		1018933	0					
ANR	1019364	ArgumentList	ds		1018933	1					
ANR	1019365	Argument	ds		1018933	0					
ANR	1019366	Identifier	ds		1018933	0					
ANR	1019367	Argument	4		1018933	1					
ANR	1019368	PrimaryExpression	4		1018933	0					
ANR	1019369	Argument	core		1018933	2					
ANR	1019370	Identifier	core		1018933	0					
ANR	1019371	IfStatement	if ( code )		1018933	1					
ANR	1019372	Condition	code	2211:20:70659:70662	1018933	0	True				
ANR	1019373	Identifier	code		1018933	0					
ANR	1019374	GotoStatement	goto cleanup ;	2212:20:70685:70697	1018933	1	True				
ANR	1019375	Identifier	cleanup		1018933	0					
ANR	1019376	ExpressionStatement	core = & down_core4_ets	2213:16:70715:70737	1018933	2	True				
ANR	1019377	AssignmentExpression	core = & down_core4_ets		1018933	0		=			
ANR	1019378	Identifier	core		1018933	0					
ANR	1019379	UnaryOperationExpression	& down_core4_ets		1018933	1					
ANR	1019380	UnaryOperator	&		1018933	0					
ANR	1019381	Identifier	down_core4_ets		1018933	1					
ANR	1019382	ElseStatement	else		1018933	0					
ANR	1019383	ExpressionStatement	core = & down_core4	2216:16:70786:70804	1018933	0	True				
ANR	1019384	AssignmentExpression	core = & down_core4		1018933	0		=			
ANR	1019385	Identifier	core		1018933	0					
ANR	1019386	UnaryOperationExpression	& down_core4		1018933	1					
ANR	1019387	UnaryOperator	&		1018933	0					
ANR	1019388	Identifier	down_core4		1018933	1					
ANR	1019389	ElseStatement	else		1018933	0					
ANR	1019390	IfStatement	if ( ( src_bpc == 8 ) && ( dst_bpc == 1 ) && ( nc == 1 ) )		1018933	0					
ANR	1019391	Condition	( src_bpc == 8 ) && ( dst_bpc == 1 ) && ( nc == 1 )	2218:17:70833:70877	1018933	0	True				
ANR	1019392	AndExpression	( src_bpc == 8 ) && ( dst_bpc == 1 ) && ( nc == 1 )		1018933	0		&&			
ANR	1019393	EqualityExpression	src_bpc == 8		1018933	0		==			
ANR	1019394	Identifier	src_bpc		1018933	0					
ANR	1019395	PrimaryExpression	8		1018933	1					
ANR	1019396	AndExpression	( dst_bpc == 1 ) && ( nc == 1 )		1018933	1		&&			
ANR	1019397	EqualityExpression	dst_bpc == 1		1018933	0		==			
ANR	1019398	Identifier	dst_bpc		1018933	0					
ANR	1019399	PrimaryExpression	1		1018933	1					
ANR	1019400	EqualityExpression	nc == 1		1018933	1		==			
ANR	1019401	Identifier	nc		1018933	0					
ANR	1019402	PrimaryExpression	1		1018933	1					
ANR	1019403	CompoundStatement		87:8:2832:2832	1018933	1					
ANR	1019404	IfStatement	if ( mfs > 1 )		1018933	0					
ANR	1019405	Condition	mfs > 1	2220:16:70906:70912	1018933	0	True				
ANR	1019406	RelationalExpression	mfs > 1		1018933	0		>			
ANR	1019407	Identifier	mfs		1018933	0					
ANR	1019408	PrimaryExpression	1		1018933	1					
ANR	1019409	ExpressionStatement	core = & down_core_mfs	2221:16:70931:70952	1018933	1	True				
ANR	1019410	AssignmentExpression	core = & down_core_mfs		1018933	0		=			
ANR	1019411	Identifier	core		1018933	0					
ANR	1019412	UnaryOperationExpression	& down_core_mfs		1018933	1					
ANR	1019413	UnaryOperator	&		1018933	0					
ANR	1019414	Identifier	down_core_mfs		1018933	1					
ANR	1019415	ElseStatement	else		1018933	0					
ANR	1019416	IfStatement	if ( ets )		1018933	0					
ANR	1019417	Condition	ets	2222:21:70975:70977	1018933	0	True				
ANR	1019418	Identifier	ets		1018933	0					
ANR	1019419	CompoundStatement		91:12:2936:2936	1018933	1					
ANR	1019420	ExpressionStatement	"code = init_ets ( ds , 1 , core )"	2224:16:71010:71038	1018933	0	True				
ANR	1019421	AssignmentExpression	"code = init_ets ( ds , 1 , core )"		1018933	0		=			
ANR	1019422	Identifier	code		1018933	0					
ANR	1019423	CallExpression	"init_ets ( ds , 1 , core )"		1018933	1					
ANR	1019424	Callee	init_ets		1018933	0					
ANR	1019425	Identifier	init_ets		1018933	0					
ANR	1019426	ArgumentList	ds		1018933	1					
ANR	1019427	Argument	ds		1018933	0					
ANR	1019428	Identifier	ds		1018933	0					
ANR	1019429	Argument	1		1018933	1					
ANR	1019430	PrimaryExpression	1		1018933	0					
ANR	1019431	Argument	core		1018933	2					
ANR	1019432	Identifier	core		1018933	0					
ANR	1019433	IfStatement	if ( code )		1018933	1					
ANR	1019434	Condition	code	2225:20:71060:71063	1018933	0	True				
ANR	1019435	Identifier	code		1018933	0					
ANR	1019436	GotoStatement	goto cleanup ;	2226:20:71086:71098	1018933	1	True				
ANR	1019437	Identifier	cleanup		1018933	0					
ANR	1019438	ExpressionStatement	core = & down_core_ets_1	2227:16:71116:71139	1018933	2	True				
ANR	1019439	AssignmentExpression	core = & down_core_ets_1		1018933	0		=			
ANR	1019440	Identifier	core		1018933	0					
ANR	1019441	UnaryOperationExpression	& down_core_ets_1		1018933	1					
ANR	1019442	UnaryOperator	&		1018933	0					
ANR	1019443	Identifier	down_core_ets_1		1018933	1					
ANR	1019444	ElseStatement	else		1018933	0					
ANR	1019445	IfStatement	if ( factor == 4 )		1018933	0					
ANR	1019446	Condition	factor == 4	2229:21:71176:71186	1018933	0	True				
ANR	1019447	EqualityExpression	factor == 4		1018933	0		==			
ANR	1019448	Identifier	factor		1018933	0					
ANR	1019449	PrimaryExpression	4		1018933	1					
ANR	1019450	ExpressionStatement	core = & down_core_4	2230:16:71205:71224	1018933	1	True				
ANR	1019451	AssignmentExpression	core = & down_core_4		1018933	0		=			
ANR	1019452	Identifier	core		1018933	0					
ANR	1019453	UnaryOperationExpression	& down_core_4		1018933	1					
ANR	1019454	UnaryOperator	&		1018933	0					
ANR	1019455	Identifier	down_core_4		1018933	1					
ANR	1019456	ElseStatement	else		1018933	0					
ANR	1019457	IfStatement	if ( factor == 3 )		1018933	0					
ANR	1019458	Condition	factor == 3	2231:21:71247:71257	1018933	0	True				
ANR	1019459	EqualityExpression	factor == 3		1018933	0		==			
ANR	1019460	Identifier	factor		1018933	0					
ANR	1019461	PrimaryExpression	3		1018933	1					
ANR	1019462	ExpressionStatement	core = & down_core_3	2232:16:71276:71295	1018933	1	True				
ANR	1019463	AssignmentExpression	core = & down_core_3		1018933	0		=			
ANR	1019464	Identifier	core		1018933	0					
ANR	1019465	UnaryOperationExpression	& down_core_3		1018933	1					
ANR	1019466	UnaryOperator	&		1018933	0					
ANR	1019467	Identifier	down_core_3		1018933	1					
ANR	1019468	ElseStatement	else		1018933	0					
ANR	1019469	IfStatement	if ( factor == 2 )		1018933	0					
ANR	1019470	Condition	factor == 2	2233:21:71318:71328	1018933	0	True				
ANR	1019471	EqualityExpression	factor == 2		1018933	0		==			
ANR	1019472	Identifier	factor		1018933	0					
ANR	1019473	PrimaryExpression	2		1018933	1					
ANR	1019474	ExpressionStatement	core = & down_core_2	2234:16:71347:71366	1018933	1	True				
ANR	1019475	AssignmentExpression	core = & down_core_2		1018933	0		=			
ANR	1019476	Identifier	core		1018933	0					
ANR	1019477	UnaryOperationExpression	& down_core_2		1018933	1					
ANR	1019478	UnaryOperator	&		1018933	0					
ANR	1019479	Identifier	down_core_2		1018933	1					
ANR	1019480	ElseStatement	else		1018933	0					
ANR	1019481	IfStatement	if ( factor == 1 )		1018933	0					
ANR	1019482	Condition	factor == 1	2235:21:71389:71399	1018933	0	True				
ANR	1019483	EqualityExpression	factor == 1		1018933	0		==			
ANR	1019484	Identifier	factor		1018933	0					
ANR	1019485	PrimaryExpression	1		1018933	1					
ANR	1019486	ExpressionStatement	core = & down_core_1	2236:16:71418:71437	1018933	1	True				
ANR	1019487	AssignmentExpression	core = & down_core_1		1018933	0		=			
ANR	1019488	Identifier	core		1018933	0					
ANR	1019489	UnaryOperationExpression	& down_core_1		1018933	1					
ANR	1019490	UnaryOperator	&		1018933	0					
ANR	1019491	Identifier	down_core_1		1018933	1					
ANR	1019492	ElseStatement	else		1018933	0					
ANR	1019493	ExpressionStatement	core = & down_core	2238:16:71472:71489	1018933	0	True				
ANR	1019494	AssignmentExpression	core = & down_core		1018933	0		=			
ANR	1019495	Identifier	core		1018933	0					
ANR	1019496	UnaryOperationExpression	& down_core		1018933	1					
ANR	1019497	UnaryOperator	&		1018933	0					
ANR	1019498	Identifier	down_core		1018933	1					
ANR	1019499	ElseStatement	else		1018933	0					
ANR	1019500	IfStatement	if ( ( factor == 1 ) && ( src_bpc == dst_bpc ) )		1018933	0					
ANR	1019501	Condition	( factor == 1 ) && ( src_bpc == dst_bpc )	2240:17:71518:71554	1018933	0	True				
ANR	1019502	AndExpression	( factor == 1 ) && ( src_bpc == dst_bpc )		1018933	0		&&			
ANR	1019503	EqualityExpression	factor == 1		1018933	0		==			
ANR	1019504	Identifier	factor		1018933	0					
ANR	1019505	PrimaryExpression	1		1018933	1					
ANR	1019506	EqualityExpression	src_bpc == dst_bpc		1018933	1		==			
ANR	1019507	Identifier	src_bpc		1018933	0					
ANR	1019508	Identifier	dst_bpc		1018933	1					
ANR	1019509	BreakStatement	break ;	2241:12:71569:71574	1018933	1	True				
ANR	1019510	ElseStatement	else		1018933	0					
ANR	1019511	IfStatement	if ( ( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( nc == 1 ) )		1018933	0					
ANR	1019512	Condition	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( nc == 1 )	2242:17:71593:71637	1018933	0	True				
ANR	1019513	AndExpression	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( nc == 1 )		1018933	0		&&			
ANR	1019514	EqualityExpression	src_bpc == 8		1018933	0		==			
ANR	1019515	Identifier	src_bpc		1018933	0					
ANR	1019516	PrimaryExpression	8		1018933	1					
ANR	1019517	AndExpression	( dst_bpc == 8 ) && ( nc == 1 )		1018933	1		&&			
ANR	1019518	EqualityExpression	dst_bpc == 8		1018933	0		==			
ANR	1019519	Identifier	dst_bpc		1018933	0					
ANR	1019520	PrimaryExpression	8		1018933	1					
ANR	1019521	EqualityExpression	nc == 1		1018933	1		==			
ANR	1019522	Identifier	nc		1018933	0					
ANR	1019523	PrimaryExpression	1		1018933	1					
ANR	1019524	CompoundStatement		111:8:3592:3592	1018933	1					
ANR	1019525	IfStatement	if ( factor == 4 )		1018933	0					
ANR	1019526	Condition	factor == 4	2244:16:71666:71676	1018933	0	True				
ANR	1019527	EqualityExpression	factor == 4		1018933	0		==			
ANR	1019528	Identifier	factor		1018933	0					
ANR	1019529	PrimaryExpression	4		1018933	1					
ANR	1019530	ExpressionStatement	core = & down_core8_4	2245:16:71695:71715	1018933	1	True				
ANR	1019531	AssignmentExpression	core = & down_core8_4		1018933	0		=			
ANR	1019532	Identifier	core		1018933	0					
ANR	1019533	UnaryOperationExpression	& down_core8_4		1018933	1					
ANR	1019534	UnaryOperator	&		1018933	0					
ANR	1019535	Identifier	down_core8_4		1018933	1					
ANR	1019536	ElseStatement	else		1018933	0					
ANR	1019537	IfStatement	if ( factor == 3 )		1018933	0					
ANR	1019538	Condition	factor == 3	2246:21:71738:71748	1018933	0	True				
ANR	1019539	EqualityExpression	factor == 3		1018933	0		==			
ANR	1019540	Identifier	factor		1018933	0					
ANR	1019541	PrimaryExpression	3		1018933	1					
ANR	1019542	ExpressionStatement	core = & down_core8_3	2247:16:71767:71787	1018933	1	True				
ANR	1019543	AssignmentExpression	core = & down_core8_3		1018933	0		=			
ANR	1019544	Identifier	core		1018933	0					
ANR	1019545	UnaryOperationExpression	& down_core8_3		1018933	1					
ANR	1019546	UnaryOperator	&		1018933	0					
ANR	1019547	Identifier	down_core8_3		1018933	1					
ANR	1019548	ElseStatement	else		1018933	0					
ANR	1019549	IfStatement	if ( factor == 2 )		1018933	0					
ANR	1019550	Condition	factor == 2	2248:21:71810:71820	1018933	0	True				
ANR	1019551	EqualityExpression	factor == 2		1018933	0		==			
ANR	1019552	Identifier	factor		1018933	0					
ANR	1019553	PrimaryExpression	2		1018933	1					
ANR	1019554	ExpressionStatement	core = & down_core8_2	2249:16:71839:71859	1018933	1	True				
ANR	1019555	AssignmentExpression	core = & down_core8_2		1018933	0		=			
ANR	1019556	Identifier	core		1018933	0					
ANR	1019557	UnaryOperationExpression	& down_core8_2		1018933	1					
ANR	1019558	UnaryOperator	&		1018933	0					
ANR	1019559	Identifier	down_core8_2		1018933	1					
ANR	1019560	ElseStatement	else		1018933	0					
ANR	1019561	ExpressionStatement	core = & down_core8	2251:16:71894:71912	1018933	0	True				
ANR	1019562	AssignmentExpression	core = & down_core8		1018933	0		=			
ANR	1019563	Identifier	core		1018933	0					
ANR	1019564	UnaryOperationExpression	& down_core8		1018933	1					
ANR	1019565	UnaryOperator	&		1018933	0					
ANR	1019566	Identifier	down_core8		1018933	1					
ANR	1019567	ElseStatement	else		1018933	0					
ANR	1019568	IfStatement	if ( ( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( nc == 3 ) )		1018933	0					
ANR	1019569	Condition	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( nc == 3 )	2253:17:71941:71985	1018933	0	True				
ANR	1019570	AndExpression	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( nc == 3 )		1018933	0		&&			
ANR	1019571	EqualityExpression	src_bpc == 8		1018933	0		==			
ANR	1019572	Identifier	src_bpc		1018933	0					
ANR	1019573	PrimaryExpression	8		1018933	1					
ANR	1019574	AndExpression	( dst_bpc == 8 ) && ( nc == 3 )		1018933	1		&&			
ANR	1019575	EqualityExpression	dst_bpc == 8		1018933	0		==			
ANR	1019576	Identifier	dst_bpc		1018933	0					
ANR	1019577	PrimaryExpression	8		1018933	1					
ANR	1019578	EqualityExpression	nc == 3		1018933	1		==			
ANR	1019579	Identifier	nc		1018933	0					
ANR	1019580	PrimaryExpression	3		1018933	1					
ANR	1019581	ExpressionStatement	core = & down_core24	2254:12:72000:72019	1018933	1	True				
ANR	1019582	AssignmentExpression	core = & down_core24		1018933	0		=			
ANR	1019583	Identifier	core		1018933	0					
ANR	1019584	UnaryOperationExpression	& down_core24		1018933	1					
ANR	1019585	UnaryOperator	&		1018933	0					
ANR	1019586	Identifier	down_core24		1018933	1					
ANR	1019587	ElseStatement	else		1018933	0					
ANR	1019588	IfStatement	if ( ( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( nc == 4 ) )		1018933	0					
ANR	1019589	Condition	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( nc == 4 )	2255:17:72038:72082	1018933	0	True				
ANR	1019590	AndExpression	( src_bpc == 8 ) && ( dst_bpc == 8 ) && ( nc == 4 )		1018933	0		&&			
ANR	1019591	EqualityExpression	src_bpc == 8		1018933	0		==			
ANR	1019592	Identifier	src_bpc		1018933	0					
ANR	1019593	PrimaryExpression	8		1018933	1					
ANR	1019594	AndExpression	( dst_bpc == 8 ) && ( nc == 4 )		1018933	1		&&			
ANR	1019595	EqualityExpression	dst_bpc == 8		1018933	0		==			
ANR	1019596	Identifier	dst_bpc		1018933	0					
ANR	1019597	PrimaryExpression	8		1018933	1					
ANR	1019598	EqualityExpression	nc == 4		1018933	1		==			
ANR	1019599	Identifier	nc		1018933	0					
ANR	1019600	PrimaryExpression	4		1018933	1					
ANR	1019601	ExpressionStatement	core = & down_core32	2256:12:72097:72116	1018933	1	True				
ANR	1019602	AssignmentExpression	core = & down_core32		1018933	0		=			
ANR	1019603	Identifier	core		1018933	0					
ANR	1019604	UnaryOperationExpression	& down_core32		1018933	1					
ANR	1019605	UnaryOperator	&		1018933	0					
ANR	1019606	Identifier	down_core32		1018933	1					
ANR	1019607	IfStatement	if ( core || ! ds -> early_cm )		1018933	2					
ANR	1019608	Condition	core || ! ds -> early_cm	2259:12:72202:72222	1018933	0	True				
ANR	1019609	OrExpression	core || ! ds -> early_cm		1018933	0		||			
ANR	1019610	Identifier	core		1018933	0					
ANR	1019611	UnaryOperationExpression	! ds -> early_cm		1018933	1					
ANR	1019612	UnaryOperator	!		1018933	0					
ANR	1019613	PtrMemberAccess	ds -> early_cm		1018933	1					
ANR	1019614	Identifier	ds		1018933	0					
ANR	1019615	Identifier	early_cm		1018933	1					
ANR	1019616	BreakStatement	break ;	2260:12:72237:72242	1018933	1	True				
ANR	1019617	ExpressionStatement	ds -> early_cm = false	2263:8:72276:72296	1018933	3	True				
ANR	1019618	AssignmentExpression	ds -> early_cm = false		1018933	0		=			
ANR	1019619	PtrMemberAccess	ds -> early_cm		1018933	0					
ANR	1019620	Identifier	ds		1018933	0					
ANR	1019621	Identifier	early_cm		1018933	1					
ANR	1019622	Identifier	false		1018933	1					
ANR	1019623	IfStatement	if ( factor == 1 && src_bpc == dst_bpc )		1018933	37					
ANR	1019624	Condition	factor == 1 && src_bpc == dst_bpc	2265:8:72312:72344	1018933	0	True				
ANR	1019625	AndExpression	factor == 1 && src_bpc == dst_bpc		1018933	0		&&			
ANR	1019626	EqualityExpression	factor == 1		1018933	0		==			
ANR	1019627	Identifier	factor		1018933	0					
ANR	1019628	PrimaryExpression	1		1018933	1					
ANR	1019629	EqualityExpression	src_bpc == dst_bpc		1018933	1		==			
ANR	1019630	Identifier	src_bpc		1018933	0					
ANR	1019631	Identifier	dst_bpc		1018933	1					
ANR	1019632	CompoundStatement		133:43:4291:4291	1018933	1					
ANR	1019633	ElseStatement	else		1018933	0					
ANR	1019634	IfStatement	if ( core == NULL )		1018933	0					
ANR	1019635	Condition	core == NULL	2267:15:72407:72418	1018933	0	True				
ANR	1019636	EqualityExpression	core == NULL		1018933	0		==			
ANR	1019637	Identifier	core		1018933	0					
ANR	1019638	Identifier	NULL		1018933	1					
ANR	1019639	CompoundStatement		135:29:4365:4365	1018933	1					
ANR	1019640	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	2268:8:72431:72472	1018933	0	True				
ANR	1019641	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		1018933	0		=			
ANR	1019642	Identifier	code		1018933	0					
ANR	1019643	CallExpression	gs_note_error ( gs_error_rangecheck )		1018933	1					
ANR	1019644	Callee	gs_note_error		1018933	0					
ANR	1019645	Identifier	gs_note_error		1018933	0					
ANR	1019646	ArgumentList	gs_error_rangecheck		1018933	1					
ANR	1019647	Argument	gs_error_rangecheck		1018933	0					
ANR	1019648	Identifier	gs_error_rangecheck		1018933	0					
ANR	1019649	GotoStatement	goto cleanup ;	2269:8:72482:72494	1018933	1	True				
ANR	1019650	Identifier	cleanup		1018933	0					
ANR	1019651	ExpressionStatement	ds -> down_core = core	2271:4:72506:72526	1018933	38	True				
ANR	1019652	AssignmentExpression	ds -> down_core = core		1018933	0		=			
ANR	1019653	PtrMemberAccess	ds -> down_core		1018933	0					
ANR	1019654	Identifier	ds		1018933	0					
ANR	1019655	Identifier	down_core		1018933	1					
ANR	1019656	Identifier	core		1018933	1					
ANR	1019657	IfStatement	if ( apply_cm )		1018933	39					
ANR	1019658	Condition	apply_cm	2273:8:72537:72544	1018933	0	True				
ANR	1019659	Identifier	apply_cm		1018933	0					
ANR	1019660	CompoundStatement		141:18:4491:4491	1018933	1					
ANR	1019661	ExpressionStatement	"ds -> post_cm [ 0 ] = gs_alloc_bytes ( dev -> memory , post_size * downfactor , ""gx_downscaler(data)"" )"	2274:8:72557:72728	1018933	0	True				
ANR	1019662	AssignmentExpression	"ds -> post_cm [ 0 ] = gs_alloc_bytes ( dev -> memory , post_size * downfactor , ""gx_downscaler(data)"" )"		1018933	0		=			
ANR	1019663	ArrayIndexing	ds -> post_cm [ 0 ]		1018933	0					
ANR	1019664	PtrMemberAccess	ds -> post_cm		1018933	0					
ANR	1019665	Identifier	ds		1018933	0					
ANR	1019666	Identifier	post_cm		1018933	1					
ANR	1019667	PrimaryExpression	0		1018933	1					
ANR	1019668	CallExpression	"gs_alloc_bytes ( dev -> memory , post_size * downfactor , ""gx_downscaler(data)"" )"		1018933	1					
ANR	1019669	Callee	gs_alloc_bytes		1018933	0					
ANR	1019670	Identifier	gs_alloc_bytes		1018933	0					
ANR	1019671	ArgumentList	dev -> memory		1018933	1					
ANR	1019672	Argument	dev -> memory		1018933	0					
ANR	1019673	PtrMemberAccess	dev -> memory		1018933	0					
ANR	1019674	Identifier	dev		1018933	0					
ANR	1019675	Identifier	memory		1018933	1					
ANR	1019676	Argument	post_size * downfactor		1018933	1					
ANR	1019677	MultiplicativeExpression	post_size * downfactor		1018933	0		*			
ANR	1019678	Identifier	post_size		1018933	0					
ANR	1019679	Identifier	downfactor		1018933	1					
ANR	1019680	Argument	"""gx_downscaler(data)"""		1018933	2					
ANR	1019681	PrimaryExpression	"""gx_downscaler(data)"""		1018933	0					
ANR	1019682	IfStatement	if ( ds -> post_cm [ 0 ] == NULL )		1018933	1					
ANR	1019683	Condition	ds -> post_cm [ 0 ] == NULL	2277:12:72742:72763	1018933	0	True				
ANR	1019684	EqualityExpression	ds -> post_cm [ 0 ] == NULL		1018933	0		==			
ANR	1019685	ArrayIndexing	ds -> post_cm [ 0 ]		1018933	0					
ANR	1019686	PtrMemberAccess	ds -> post_cm		1018933	0					
ANR	1019687	Identifier	ds		1018933	0					
ANR	1019688	Identifier	post_cm		1018933	1					
ANR	1019689	PrimaryExpression	0		1018933	1					
ANR	1019690	Identifier	NULL		1018933	1					
ANR	1019691	CompoundStatement		145:36:4710:4710	1018933	1					
ANR	1019692	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	2278:12:72780:72818	1018933	0	True				
ANR	1019693	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1018933	0		=			
ANR	1019694	Identifier	code		1018933	0					
ANR	1019695	CallExpression	gs_note_error ( gs_error_VMerror )		1018933	1					
ANR	1019696	Callee	gs_note_error		1018933	0					
ANR	1019697	Identifier	gs_note_error		1018933	0					
ANR	1019698	ArgumentList	gs_error_VMerror		1018933	1					
ANR	1019699	Argument	gs_error_VMerror		1018933	0					
ANR	1019700	Identifier	gs_error_VMerror		1018933	0					
ANR	1019701	GotoStatement	goto cleanup ;	2279:12:72832:72844	1018933	1	True				
ANR	1019702	Identifier	cleanup		1018933	0					
ANR	1019703	IfStatement	if ( core != NULL || apply_cm )		1018933	40					
ANR	1019704	Condition	core != NULL || apply_cm	2283:8:72871:72894	1018933	0	True				
ANR	1019705	OrExpression	core != NULL || apply_cm		1018933	0		||			
ANR	1019706	EqualityExpression	core != NULL		1018933	0		!=			
ANR	1019707	Identifier	core		1018933	0					
ANR	1019708	Identifier	NULL		1018933	1					
ANR	1019709	Identifier	apply_cm		1018933	1					
ANR	1019710	CompoundStatement		151:34:4841:4841	1018933	1					
ANR	1019711	ExpressionStatement	"ds -> pre_cm [ 0 ] = gs_alloc_bytes ( dev -> memory , span * downfactor , ""gx_downscaler(data)"" )"	2284:8:72907:73016	1018933	0	True				
ANR	1019712	AssignmentExpression	"ds -> pre_cm [ 0 ] = gs_alloc_bytes ( dev -> memory , span * downfactor , ""gx_downscaler(data)"" )"		1018933	0		=			
ANR	1019713	ArrayIndexing	ds -> pre_cm [ 0 ]		1018933	0					
ANR	1019714	PtrMemberAccess	ds -> pre_cm		1018933	0					
ANR	1019715	Identifier	ds		1018933	0					
ANR	1019716	Identifier	pre_cm		1018933	1					
ANR	1019717	PrimaryExpression	0		1018933	1					
ANR	1019718	CallExpression	"gs_alloc_bytes ( dev -> memory , span * downfactor , ""gx_downscaler(data)"" )"		1018933	1					
ANR	1019719	Callee	gs_alloc_bytes		1018933	0					
ANR	1019720	Identifier	gs_alloc_bytes		1018933	0					
ANR	1019721	ArgumentList	dev -> memory		1018933	1					
ANR	1019722	Argument	dev -> memory		1018933	0					
ANR	1019723	PtrMemberAccess	dev -> memory		1018933	0					
ANR	1019724	Identifier	dev		1018933	0					
ANR	1019725	Identifier	memory		1018933	1					
ANR	1019726	Argument	span * downfactor		1018933	1					
ANR	1019727	MultiplicativeExpression	span * downfactor		1018933	0		*			
ANR	1019728	Identifier	span		1018933	0					
ANR	1019729	Identifier	downfactor		1018933	1					
ANR	1019730	Argument	"""gx_downscaler(data)"""		1018933	2					
ANR	1019731	PrimaryExpression	"""gx_downscaler(data)"""		1018933	0					
ANR	1019732	IfStatement	if ( ds -> pre_cm [ 0 ] == NULL )		1018933	1					
ANR	1019733	Condition	ds -> pre_cm [ 0 ] == NULL	2287:12:73030:73050	1018933	0	True				
ANR	1019734	EqualityExpression	ds -> pre_cm [ 0 ] == NULL		1018933	0		==			
ANR	1019735	ArrayIndexing	ds -> pre_cm [ 0 ]		1018933	0					
ANR	1019736	PtrMemberAccess	ds -> pre_cm		1018933	0					
ANR	1019737	Identifier	ds		1018933	0					
ANR	1019738	Identifier	pre_cm		1018933	1					
ANR	1019739	PrimaryExpression	0		1018933	1					
ANR	1019740	Identifier	NULL		1018933	1					
ANR	1019741	CompoundStatement		155:35:4997:4997	1018933	1					
ANR	1019742	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	2288:12:73067:73105	1018933	0	True				
ANR	1019743	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1018933	0		=			
ANR	1019744	Identifier	code		1018933	0					
ANR	1019745	CallExpression	gs_note_error ( gs_error_VMerror )		1018933	1					
ANR	1019746	Callee	gs_note_error		1018933	0					
ANR	1019747	Identifier	gs_note_error		1018933	0					
ANR	1019748	ArgumentList	gs_error_VMerror		1018933	1					
ANR	1019749	Argument	gs_error_VMerror		1018933	0					
ANR	1019750	Identifier	gs_error_VMerror		1018933	0					
ANR	1019751	GotoStatement	goto cleanup ;	2289:12:73119:73131	1018933	1	True				
ANR	1019752	Identifier	cleanup		1018933	0					
ANR	1019753	IfStatement	if ( core != NULL )		1018933	41					
ANR	1019754	Condition	core != NULL	2292:8:73157:73168	1018933	0	True				
ANR	1019755	EqualityExpression	core != NULL		1018933	0		!=			
ANR	1019756	Identifier	core		1018933	0					
ANR	1019757	Identifier	NULL		1018933	1					
ANR	1019758	CompoundStatement		160:22:5115:5115	1018933	1					
ANR	1019759	IfStatement	if ( mfs > 1 )		1018933	0					
ANR	1019760	Condition	mfs > 1	2293:12:73185:73191	1018933	0	True				
ANR	1019761	RelationalExpression	mfs > 1		1018933	0		>			
ANR	1019762	Identifier	mfs		1018933	0					
ANR	1019763	PrimaryExpression	1		1018933	1					
ANR	1019764	CompoundStatement		161:21:5138:5138	1018933	1					
ANR	1019765	ExpressionStatement	"ds -> mfs_data = ( byte * ) gs_alloc_bytes ( dev -> memory , ( awidth + 1 ) * nc , ""gx_downscaler(mfs)"" )"	2294:12:73208:73395	1018933	0	True				
ANR	1019766	AssignmentExpression	"ds -> mfs_data = ( byte * ) gs_alloc_bytes ( dev -> memory , ( awidth + 1 ) * nc , ""gx_downscaler(mfs)"" )"		1018933	0		=			
ANR	1019767	PtrMemberAccess	ds -> mfs_data		1018933	0					
ANR	1019768	Identifier	ds		1018933	0					
ANR	1019769	Identifier	mfs_data		1018933	1					
ANR	1019770	CastExpression	"( byte * ) gs_alloc_bytes ( dev -> memory , ( awidth + 1 ) * nc , ""gx_downscaler(mfs)"" )"		1018933	1					
ANR	1019771	CastTarget	byte *		1018933	0					
ANR	1019772	CallExpression	"gs_alloc_bytes ( dev -> memory , ( awidth + 1 ) * nc , ""gx_downscaler(mfs)"" )"		1018933	1					
ANR	1019773	Callee	gs_alloc_bytes		1018933	0					
ANR	1019774	Identifier	gs_alloc_bytes		1018933	0					
ANR	1019775	ArgumentList	dev -> memory		1018933	1					
ANR	1019776	Argument	dev -> memory		1018933	0					
ANR	1019777	PtrMemberAccess	dev -> memory		1018933	0					
ANR	1019778	Identifier	dev		1018933	0					
ANR	1019779	Identifier	memory		1018933	1					
ANR	1019780	Argument	( awidth + 1 ) * nc		1018933	1					
ANR	1019781	MultiplicativeExpression	( awidth + 1 ) * nc		1018933	0		*			
ANR	1019782	AdditiveExpression	awidth + 1		1018933	0		+			
ANR	1019783	Identifier	awidth		1018933	0					
ANR	1019784	PrimaryExpression	1		1018933	1					
ANR	1019785	Identifier	nc		1018933	1					
ANR	1019786	Argument	"""gx_downscaler(mfs)"""		1018933	2					
ANR	1019787	PrimaryExpression	"""gx_downscaler(mfs)"""		1018933	0					
ANR	1019788	IfStatement	if ( ds -> mfs_data == NULL )		1018933	1					
ANR	1019789	Condition	ds -> mfs_data == NULL	2297:16:73413:73432	1018933	0	True				
ANR	1019790	EqualityExpression	ds -> mfs_data == NULL		1018933	0		==			
ANR	1019791	PtrMemberAccess	ds -> mfs_data		1018933	0					
ANR	1019792	Identifier	ds		1018933	0					
ANR	1019793	Identifier	mfs_data		1018933	1					
ANR	1019794	Identifier	NULL		1018933	1					
ANR	1019795	CompoundStatement		165:38:5379:5379	1018933	1					
ANR	1019796	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	2298:16:73453:73491	1018933	0	True				
ANR	1019797	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1018933	0		=			
ANR	1019798	Identifier	code		1018933	0					
ANR	1019799	CallExpression	gs_note_error ( gs_error_VMerror )		1018933	1					
ANR	1019800	Callee	gs_note_error		1018933	0					
ANR	1019801	Identifier	gs_note_error		1018933	0					
ANR	1019802	ArgumentList	gs_error_VMerror		1018933	1					
ANR	1019803	Argument	gs_error_VMerror		1018933	0					
ANR	1019804	Identifier	gs_error_VMerror		1018933	0					
ANR	1019805	GotoStatement	goto cleanup ;	2299:16:73509:73521	1018933	1	True				
ANR	1019806	Identifier	cleanup		1018933	0					
ANR	1019807	ExpressionStatement	"memset ( ds -> mfs_data , 0 , ( awidth + 1 ) * nc )"	2301:12:73549:73587	1018933	2	True				
ANR	1019808	CallExpression	"memset ( ds -> mfs_data , 0 , ( awidth + 1 ) * nc )"		1018933	0					
ANR	1019809	Callee	memset		1018933	0					
ANR	1019810	Identifier	memset		1018933	0					
ANR	1019811	ArgumentList	ds -> mfs_data		1018933	1					
ANR	1019812	Argument	ds -> mfs_data		1018933	0					
ANR	1019813	PtrMemberAccess	ds -> mfs_data		1018933	0					
ANR	1019814	Identifier	ds		1018933	0					
ANR	1019815	Identifier	mfs_data		1018933	1					
ANR	1019816	Argument	0		1018933	1					
ANR	1019817	PrimaryExpression	0		1018933	0					
ANR	1019818	Argument	( awidth + 1 ) * nc		1018933	2					
ANR	1019819	MultiplicativeExpression	( awidth + 1 ) * nc		1018933	0		*			
ANR	1019820	AdditiveExpression	awidth + 1		1018933	0		+			
ANR	1019821	Identifier	awidth		1018933	0					
ANR	1019822	PrimaryExpression	1		1018933	1					
ANR	1019823	Identifier	nc		1018933	1					
ANR	1019824	IfStatement	if ( dst_bpc == 1 )		1018933	1					
ANR	1019825	Condition	dst_bpc == 1	2303:12:73611:73622	1018933	0	True				
ANR	1019826	EqualityExpression	dst_bpc == 1		1018933	0		==			
ANR	1019827	Identifier	dst_bpc		1018933	0					
ANR	1019828	PrimaryExpression	1		1018933	1					
ANR	1019829	CompoundStatement		171:26:5569:5569	1018933	1					
ANR	1019830	ExpressionStatement	"ds -> errors = ( int * ) gs_alloc_bytes ( dev -> memory , num_comps * ( awidth + 3 ) * sizeof ( int ) , ""gx_downscaler(errors)"" )"	2304:12:73639:73839	1018933	0	True				
ANR	1019831	AssignmentExpression	"ds -> errors = ( int * ) gs_alloc_bytes ( dev -> memory , num_comps * ( awidth + 3 ) * sizeof ( int ) , ""gx_downscaler(errors)"" )"		1018933	0		=			
ANR	1019832	PtrMemberAccess	ds -> errors		1018933	0					
ANR	1019833	Identifier	ds		1018933	0					
ANR	1019834	Identifier	errors		1018933	1					
ANR	1019835	CastExpression	"( int * ) gs_alloc_bytes ( dev -> memory , num_comps * ( awidth + 3 ) * sizeof ( int ) , ""gx_downscaler(errors)"" )"		1018933	1					
ANR	1019836	CastTarget	int *		1018933	0					
ANR	1019837	CallExpression	"gs_alloc_bytes ( dev -> memory , num_comps * ( awidth + 3 ) * sizeof ( int ) , ""gx_downscaler(errors)"" )"		1018933	1					
ANR	1019838	Callee	gs_alloc_bytes		1018933	0					
ANR	1019839	Identifier	gs_alloc_bytes		1018933	0					
ANR	1019840	ArgumentList	dev -> memory		1018933	1					
ANR	1019841	Argument	dev -> memory		1018933	0					
ANR	1019842	PtrMemberAccess	dev -> memory		1018933	0					
ANR	1019843	Identifier	dev		1018933	0					
ANR	1019844	Identifier	memory		1018933	1					
ANR	1019845	Argument	num_comps * ( awidth + 3 ) * sizeof ( int )		1018933	1					
ANR	1019846	MultiplicativeExpression	num_comps * ( awidth + 3 ) * sizeof ( int )		1018933	0		*			
ANR	1019847	Identifier	num_comps		1018933	0					
ANR	1019848	MultiplicativeExpression	( awidth + 3 ) * sizeof ( int )		1018933	1		*			
ANR	1019849	AdditiveExpression	awidth + 3		1018933	0		+			
ANR	1019850	Identifier	awidth		1018933	0					
ANR	1019851	PrimaryExpression	3		1018933	1					
ANR	1019852	SizeofExpression	sizeof ( int )		1018933	1					
ANR	1019853	Sizeof	sizeof		1018933	0					
ANR	1019854	SizeofOperand	int		1018933	1					
ANR	1019855	Argument	"""gx_downscaler(errors)"""		1018933	2					
ANR	1019856	PrimaryExpression	"""gx_downscaler(errors)"""		1018933	0					
ANR	1019857	IfStatement	if ( ds -> errors == NULL )		1018933	1					
ANR	1019858	Condition	ds -> errors == NULL	2307:16:73857:73874	1018933	0	True				
ANR	1019859	EqualityExpression	ds -> errors == NULL		1018933	0		==			
ANR	1019860	PtrMemberAccess	ds -> errors		1018933	0					
ANR	1019861	Identifier	ds		1018933	0					
ANR	1019862	Identifier	errors		1018933	1					
ANR	1019863	Identifier	NULL		1018933	1					
ANR	1019864	CompoundStatement		175:36:5821:5821	1018933	1					
ANR	1019865	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	2308:16:73895:73933	1018933	0	True				
ANR	1019866	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		1018933	0		=			
ANR	1019867	Identifier	code		1018933	0					
ANR	1019868	CallExpression	gs_note_error ( gs_error_VMerror )		1018933	1					
ANR	1019869	Callee	gs_note_error		1018933	0					
ANR	1019870	Identifier	gs_note_error		1018933	0					
ANR	1019871	ArgumentList	gs_error_VMerror		1018933	1					
ANR	1019872	Argument	gs_error_VMerror		1018933	0					
ANR	1019873	Identifier	gs_error_VMerror		1018933	0					
ANR	1019874	GotoStatement	goto cleanup ;	2309:16:73951:73963	1018933	1	True				
ANR	1019875	Identifier	cleanup		1018933	0					
ANR	1019876	ExpressionStatement	"memset ( ds -> errors , 0 , num_comps * ( awidth + 3 ) * sizeof ( int ) )"	2311:12:73991:74050	1018933	2	True				
ANR	1019877	CallExpression	"memset ( ds -> errors , 0 , num_comps * ( awidth + 3 ) * sizeof ( int ) )"		1018933	0					
ANR	1019878	Callee	memset		1018933	0					
ANR	1019879	Identifier	memset		1018933	0					
ANR	1019880	ArgumentList	ds -> errors		1018933	1					
ANR	1019881	Argument	ds -> errors		1018933	0					
ANR	1019882	PtrMemberAccess	ds -> errors		1018933	0					
ANR	1019883	Identifier	ds		1018933	0					
ANR	1019884	Identifier	errors		1018933	1					
ANR	1019885	Argument	0		1018933	1					
ANR	1019886	PrimaryExpression	0		1018933	0					
ANR	1019887	Argument	num_comps * ( awidth + 3 ) * sizeof ( int )		1018933	2					
ANR	1019888	MultiplicativeExpression	num_comps * ( awidth + 3 ) * sizeof ( int )		1018933	0		*			
ANR	1019889	Identifier	num_comps		1018933	0					
ANR	1019890	MultiplicativeExpression	( awidth + 3 ) * sizeof ( int )		1018933	1		*			
ANR	1019891	AdditiveExpression	awidth + 3		1018933	0		+			
ANR	1019892	Identifier	awidth		1018933	0					
ANR	1019893	PrimaryExpression	3		1018933	1					
ANR	1019894	SizeofExpression	sizeof ( int )		1018933	1					
ANR	1019895	Sizeof	sizeof		1018933	0					
ANR	1019896	SizeofOperand	int		1018933	1					
ANR	1019897	ReturnStatement	return 0 ;	2315:4:74073:74081	1018933	42	True				
ANR	1019898	PrimaryExpression	0		1018933	0					
ANR	1019899	Label	cleanup :	2317:2:74086:74093	1018933	43	True				
ANR	1019900	Identifier	cleanup		1018933	0					
ANR	1019901	ExpressionStatement	gx_downscaler_fin ( ds )	2318:4:74099:74120	1018933	44	True				
ANR	1019902	CallExpression	gx_downscaler_fin ( ds )		1018933	0					
ANR	1019903	Callee	gx_downscaler_fin		1018933	0					
ANR	1019904	Identifier	gx_downscaler_fin		1018933	0					
ANR	1019905	ArgumentList	ds		1018933	1					
ANR	1019906	Argument	ds		1018933	0					
ANR	1019907	Identifier	ds		1018933	0					
ANR	1019908	ReturnStatement	return code ;	2319:4:74126:74137	1018933	45	True				
ANR	1019909	Identifier	code		1018933	0					
ANR	1019910	ReturnType	int		1018933	1					
ANR	1019911	Identifier	gx_downscaler_init_trapped_cm_ets		1018933	2					
ANR	1019912	ParameterList	"gx_downscaler_t * ds , gx_device * dev , int src_bpc , int dst_bpc , int num_comps , int factor , int mfs , int ( * adjust_width_proc ) ( int , int ) , int adjust_width , int trap_w , int trap_h , const int * comp_order , gx_downscale_cm_fn * apply_cm , void * apply_cm_arg , int post_cm_num_comps , int ets"		1018933	3					
ANR	1019913	Parameter	gx_downscaler_t * ds	2117:38:67053:67074	1018933	0	True				
ANR	1019914	ParameterType	gx_downscaler_t *		1018933	0					
ANR	1019915	Identifier	ds		1018933	1					
ANR	1019916	Parameter	gx_device * dev	2118:34:67111:67133	1018933	1	True				
ANR	1019917	ParameterType	gx_device *		1018933	0					
ANR	1019918	Identifier	dev		1018933	1					
ANR	1019919	Parameter	int src_bpc	2119:34:67170:67196	1018933	2	True				
ANR	1019920	ParameterType	int		1018933	0					
ANR	1019921	Identifier	src_bpc		1018933	1					
ANR	1019922	Parameter	int dst_bpc	2120:34:67233:67259	1018933	3	True				
ANR	1019923	ParameterType	int		1018933	0					
ANR	1019924	Identifier	dst_bpc		1018933	1					
ANR	1019925	Parameter	int num_comps	2121:34:67296:67324	1018933	4	True				
ANR	1019926	ParameterType	int		1018933	0					
ANR	1019927	Identifier	num_comps		1018933	1					
ANR	1019928	Parameter	int factor	2122:34:67361:67386	1018933	5	True				
ANR	1019929	ParameterType	int		1018933	0					
ANR	1019930	Identifier	factor		1018933	1					
ANR	1019931	Parameter	int mfs	2123:34:67423:67445	1018933	6	True				
ANR	1019932	ParameterType	int		1018933	0					
ANR	1019933	Identifier	mfs		1018933	1					
ANR	1019934	Parameter	"int ( * adjust_width_proc ) ( int , int )"	2124:34:67482:67529	1018933	7	True				
ANR	1019935	ParameterType	"(( int , int ) int) *"		1018933	0					
ANR	1019936	Identifier	adjust_width_proc		1018933	1					
ANR	1019937	Parameter	int adjust_width	2125:34:67566:67597	1018933	8	True				
ANR	1019938	ParameterType	int		1018933	0					
ANR	1019939	Identifier	adjust_width		1018933	1					
ANR	1019940	Parameter	int trap_w	2126:34:67634:67659	1018933	9	True				
ANR	1019941	ParameterType	int		1018933	0					
ANR	1019942	Identifier	trap_w		1018933	1					
ANR	1019943	Parameter	int trap_h	2127:34:67696:67722	1018933	10	True				
ANR	1019944	ParameterType	int		1018933	0					
ANR	1019945	Identifier	trap_h		1018933	1					
ANR	1019946	Parameter	const int * comp_order	2128:34:67759:67788	1018933	11	True				
ANR	1019947	ParameterType	const int *		1018933	0					
ANR	1019948	Identifier	comp_order		1018933	1					
ANR	1019949	Parameter	gx_downscale_cm_fn * apply_cm	2129:34:67825:67852	1018933	12	True				
ANR	1019950	ParameterType	gx_downscale_cm_fn *		1018933	0					
ANR	1019951	Identifier	apply_cm		1018933	1					
ANR	1019952	Parameter	void * apply_cm_arg	2130:34:67889:67920	1018933	13	True				
ANR	1019953	ParameterType	void *		1018933	0					
ANR	1019954	Identifier	apply_cm_arg		1018933	1					
ANR	1019955	Parameter	int post_cm_num_comps	2131:34:67957:67993	1018933	14	True				
ANR	1019956	ParameterType	int		1018933	0					
ANR	1019957	Identifier	post_cm_num_comps		1018933	1					
ANR	1019958	Parameter	int ets	2132:34:68030:68052	1018933	15	True				
ANR	1019959	ParameterType	int		1018933	0					
ANR	1019960	Identifier	ets		1018933	1					
ANR	1019961	CFGEntryNode	ENTRY		1018933		True				
ANR	1019962	CFGExitNode	EXIT		1018933		True				
ANR	1019963	Symbol	& down_core		1018933						
ANR	1019964	Symbol	trap_w		1018933						
ANR	1019965	Symbol	comp_order		1018933						
ANR	1019966	Symbol	ds -> post_cm_num_comps		1018933						
ANR	1019967	Symbol	gs_error_rangecheck		1018933						
ANR	1019968	Symbol	& down_core_ets_1		1018933						
ANR	1019969	Symbol	gdev_mem_bytes_per_scan_line		1018933						
ANR	1019970	Symbol	apply_cm		1018933						
ANR	1019971	Symbol	ds		1018933						
ANR	1019972	Symbol	ClapTrap_Init		1018933						
ANR	1019973	Symbol	dev		1018933						
ANR	1019974	Symbol	& down_core4_ets		1018933						
ANR	1019975	Symbol	ds -> errors		1018933						
ANR	1019976	Symbol	& down_core32		1018933						
ANR	1019977	Symbol	ds -> span		1018933						
ANR	1019978	Symbol	ds -> width		1018933						
ANR	1019979	Symbol	upfactor		1018933						
ANR	1019980	Symbol	post_size		1018933						
ANR	1019981	Symbol	NULL		1018933						
ANR	1019982	Symbol	ds -> num_planes		1018933						
ANR	1019983	Symbol	ets		1018933						
ANR	1019984	Symbol	apply_cm_arg		1018933						
ANR	1019985	Symbol	& down_core4_mfs		1018933						
ANR	1019986	Symbol	* ds -> post_cm		1018933						
ANR	1019987	Symbol	trap_h		1018933						
ANR	1019988	Symbol	core		1018933						
ANR	1019989	Symbol	& down_core_mfs		1018933						
ANR	1019990	Symbol	size		1018933						
ANR	1019991	Symbol	* adjust_width_proc		1018933						
ANR	1019992	Symbol	nc		1018933						
ANR	1019993	Symbol	ds -> dev		1018933						
ANR	1019994	Symbol	adjust_width		1018933						
ANR	1019995	Symbol	ds -> pre_cm		1018933						
ANR	1019996	Symbol	* dev		1018933						
ANR	1019997	Symbol	ds -> early_cm		1018933						
ANR	1019998	Symbol	& down_core_4		1018933						
ANR	1019999	Symbol	awidth		1018933						
ANR	1020000	Symbol	& down_core_3		1018933						
ANR	1020001	Symbol	& down_core_2		1018933						
ANR	1020002	Symbol	code		1018933						
ANR	1020003	Symbol	& down_core_1		1018933						
ANR	1020004	Symbol	* ds -> pre_cm		1018933						
ANR	1020005	Symbol	dev -> height		1018933						
ANR	1020006	Symbol	& upfactor		1018933						
ANR	1020007	Symbol	ds -> post_cm		1018933						
ANR	1020008	Symbol	ds -> apply_cm		1018933						
ANR	1020009	Symbol	ds -> mfs_data		1018933						
ANR	1020010	Symbol	get_line_for_trap		1018933						
ANR	1020011	Symbol	& down_core16		1018933						
ANR	1020012	Symbol	& down_core8_2		1018933						
ANR	1020013	Symbol	& downfactor		1018933						
ANR	1020014	Symbol	* ds		1018933						
ANR	1020015	Symbol	& down_core8_4		1018933						
ANR	1020016	Symbol	num_comps		1018933						
ANR	1020017	Symbol	& down_core8_3		1018933						
ANR	1020018	Symbol	ds -> claptrap		1018933						
ANR	1020019	Symbol	post_cm_num_comps		1018933						
ANR	1020020	Symbol	ds -> down_core		1018933						
ANR	1020021	Symbol	factor		1018933						
ANR	1020022	Symbol	dst_bpc		1018933						
ANR	1020023	Symbol	gs_alloc_bytes		1018933						
ANR	1020024	Symbol	check_trapping		1018933						
ANR	1020025	Symbol	ds -> awidth		1018933						
ANR	1020026	Symbol	false		1018933						
ANR	1020027	Symbol	src_bpc		1018933						
ANR	1020028	Symbol	bitmap_raster		1018933						
ANR	1020029	Symbol	init_ets		1018933						
ANR	1020030	Symbol	gs_error_VMerror		1018933						
ANR	1020031	Symbol	dev -> memory		1018933						
ANR	1020032	Symbol	gs_note_error		1018933						
ANR	1020033	Symbol	adjust_width_proc		1018933						
ANR	1020034	Symbol	& down_core24		1018933						
ANR	1020035	Symbol	ds -> src_bpc		1018933						
ANR	1020036	Symbol	dev -> width		1018933						
ANR	1020037	Symbol	pad_white		1018933						
ANR	1020038	Symbol	ds -> factor		1018933						
ANR	1020039	Symbol	width		1018933						
ANR	1020040	Symbol	downfactor		1018933						
ANR	1020041	Symbol	ds -> apply_cm_arg		1018933						
ANR	1020042	Symbol	& down_core8		1018933						
ANR	1020043	Symbol	* * ds		1018933						
ANR	1020044	Symbol	mfs		1018933						
ANR	1020045	Symbol	& down_core4		1018933						
ANR	1020046	Symbol	span		1018933						
ANR	1020047	Function	gx_downscaler_fin	2322:0:74142:74992							
ANR	1020048	FunctionDef	gx_downscaler_fin (gx_downscaler_t * ds)		1020047	0					
ANR	1020049	CompoundStatement		2323:0:74186:74992	1020047	0					
ANR	1020050	IdentifierDeclStatement	int plane ;	2324:4:74192:74201	1020047	0	True				
ANR	1020051	IdentifierDecl	plane		1020047	0					
ANR	1020052	IdentifierDeclType	int		1020047	0					
ANR	1020053	Identifier	plane		1020047	1					
ANR	1020054	ForStatement	for ( plane = 0 ; plane < GS_CLIENT_COLOR_MAX_COMPONENTS ; plane ++ )		1020047	1					
ANR	1020055	ForInit	plane = 0 ;	2325:9:74212:74219	1020047	0	True				
ANR	1020056	AssignmentExpression	plane = 0		1020047	0		=			
ANR	1020057	Identifier	plane		1020047	0					
ANR	1020058	PrimaryExpression	0		1020047	1					
ANR	1020059	Condition	plane < GS_CLIENT_COLOR_MAX_COMPONENTS	2325:18:74221:74258	1020047	1	True				
ANR	1020060	RelationalExpression	plane < GS_CLIENT_COLOR_MAX_COMPONENTS		1020047	0		<			
ANR	1020061	Identifier	plane		1020047	0					
ANR	1020062	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		1020047	1					
ANR	1020063	PostIncDecOperationExpression	plane ++	2325:58:74261:74267	1020047	2	True				
ANR	1020064	Identifier	plane		1020047	0					
ANR	1020065	IncDec	++		1020047	1					
ANR	1020066	CompoundStatement		3:67:83:83	1020047	3					
ANR	1020067	ExpressionStatement	"gs_free_object ( ds -> dev -> memory , ds -> pre_cm [ plane ] , ""gx_downscaler(planar_data)"" )"	2326:8:74280:74383	1020047	0	True				
ANR	1020068	CallExpression	"gs_free_object ( ds -> dev -> memory , ds -> pre_cm [ plane ] , ""gx_downscaler(planar_data)"" )"		1020047	0					
ANR	1020069	Callee	gs_free_object		1020047	0					
ANR	1020070	Identifier	gs_free_object		1020047	0					
ANR	1020071	ArgumentList	ds -> dev -> memory		1020047	1					
ANR	1020072	Argument	ds -> dev -> memory		1020047	0					
ANR	1020073	PtrMemberAccess	ds -> dev -> memory		1020047	0					
ANR	1020074	PtrMemberAccess	ds -> dev		1020047	0					
ANR	1020075	Identifier	ds		1020047	0					
ANR	1020076	Identifier	dev		1020047	1					
ANR	1020077	Identifier	memory		1020047	1					
ANR	1020078	Argument	ds -> pre_cm [ plane ]		1020047	1					
ANR	1020079	ArrayIndexing	ds -> pre_cm [ plane ]		1020047	0					
ANR	1020080	PtrMemberAccess	ds -> pre_cm		1020047	0					
ANR	1020081	Identifier	ds		1020047	0					
ANR	1020082	Identifier	pre_cm		1020047	1					
ANR	1020083	Identifier	plane		1020047	1					
ANR	1020084	Argument	"""gx_downscaler(planar_data)"""		1020047	2					
ANR	1020085	PrimaryExpression	"""gx_downscaler(planar_data)"""		1020047	0					
ANR	1020086	ExpressionStatement	"gs_free_object ( ds -> dev -> memory , ds -> post_cm [ plane ] , ""gx_downscaler(planar_data)"" )"	2328:8:74393:74497	1020047	1	True				
ANR	1020087	CallExpression	"gs_free_object ( ds -> dev -> memory , ds -> post_cm [ plane ] , ""gx_downscaler(planar_data)"" )"		1020047	0					
ANR	1020088	Callee	gs_free_object		1020047	0					
ANR	1020089	Identifier	gs_free_object		1020047	0					
ANR	1020090	ArgumentList	ds -> dev -> memory		1020047	1					
ANR	1020091	Argument	ds -> dev -> memory		1020047	0					
ANR	1020092	PtrMemberAccess	ds -> dev -> memory		1020047	0					
ANR	1020093	PtrMemberAccess	ds -> dev		1020047	0					
ANR	1020094	Identifier	ds		1020047	0					
ANR	1020095	Identifier	dev		1020047	1					
ANR	1020096	Identifier	memory		1020047	1					
ANR	1020097	Argument	ds -> post_cm [ plane ]		1020047	1					
ANR	1020098	ArrayIndexing	ds -> post_cm [ plane ]		1020047	0					
ANR	1020099	PtrMemberAccess	ds -> post_cm		1020047	0					
ANR	1020100	Identifier	ds		1020047	0					
ANR	1020101	Identifier	post_cm		1020047	1					
ANR	1020102	Identifier	plane		1020047	1					
ANR	1020103	Argument	"""gx_downscaler(planar_data)"""		1020047	2					
ANR	1020104	PrimaryExpression	"""gx_downscaler(planar_data)"""		1020047	0					
ANR	1020105	ExpressionStatement	ds -> num_planes = 0	2331:4:74509:74527	1020047	2	True				
ANR	1020106	AssignmentExpression	ds -> num_planes = 0		1020047	0		=			
ANR	1020107	PtrMemberAccess	ds -> num_planes		1020047	0					
ANR	1020108	Identifier	ds		1020047	0					
ANR	1020109	Identifier	num_planes		1020047	1					
ANR	1020110	PrimaryExpression	0		1020047	1					
ANR	1020111	ExpressionStatement	"gs_free_object ( ds -> dev -> memory , ds -> mfs_data , ""gx_downscaler(mfs)"" )"	2333:4:74534:74601	1020047	3	True				
ANR	1020112	CallExpression	"gs_free_object ( ds -> dev -> memory , ds -> mfs_data , ""gx_downscaler(mfs)"" )"		1020047	0					
ANR	1020113	Callee	gs_free_object		1020047	0					
ANR	1020114	Identifier	gs_free_object		1020047	0					
ANR	1020115	ArgumentList	ds -> dev -> memory		1020047	1					
ANR	1020116	Argument	ds -> dev -> memory		1020047	0					
ANR	1020117	PtrMemberAccess	ds -> dev -> memory		1020047	0					
ANR	1020118	PtrMemberAccess	ds -> dev		1020047	0					
ANR	1020119	Identifier	ds		1020047	0					
ANR	1020120	Identifier	dev		1020047	1					
ANR	1020121	Identifier	memory		1020047	1					
ANR	1020122	Argument	ds -> mfs_data		1020047	1					
ANR	1020123	PtrMemberAccess	ds -> mfs_data		1020047	0					
ANR	1020124	Identifier	ds		1020047	0					
ANR	1020125	Identifier	mfs_data		1020047	1					
ANR	1020126	Argument	"""gx_downscaler(mfs)"""		1020047	2					
ANR	1020127	PrimaryExpression	"""gx_downscaler(mfs)"""		1020047	0					
ANR	1020128	ExpressionStatement	ds -> mfs_data = NULL	2334:4:74607:74626	1020047	4	True				
ANR	1020129	AssignmentExpression	ds -> mfs_data = NULL		1020047	0		=			
ANR	1020130	PtrMemberAccess	ds -> mfs_data		1020047	0					
ANR	1020131	Identifier	ds		1020047	0					
ANR	1020132	Identifier	mfs_data		1020047	1					
ANR	1020133	Identifier	NULL		1020047	1					
ANR	1020134	ExpressionStatement	"gs_free_object ( ds -> dev -> memory , ds -> errors , ""gx_downscaler(errors)"" )"	2335:4:74632:74700	1020047	5	True				
ANR	1020135	CallExpression	"gs_free_object ( ds -> dev -> memory , ds -> errors , ""gx_downscaler(errors)"" )"		1020047	0					
ANR	1020136	Callee	gs_free_object		1020047	0					
ANR	1020137	Identifier	gs_free_object		1020047	0					
ANR	1020138	ArgumentList	ds -> dev -> memory		1020047	1					
ANR	1020139	Argument	ds -> dev -> memory		1020047	0					
ANR	1020140	PtrMemberAccess	ds -> dev -> memory		1020047	0					
ANR	1020141	PtrMemberAccess	ds -> dev		1020047	0					
ANR	1020142	Identifier	ds		1020047	0					
ANR	1020143	Identifier	dev		1020047	1					
ANR	1020144	Identifier	memory		1020047	1					
ANR	1020145	Argument	ds -> errors		1020047	1					
ANR	1020146	PtrMemberAccess	ds -> errors		1020047	0					
ANR	1020147	Identifier	ds		1020047	0					
ANR	1020148	Identifier	errors		1020047	1					
ANR	1020149	Argument	"""gx_downscaler(errors)"""		1020047	2					
ANR	1020150	PrimaryExpression	"""gx_downscaler(errors)"""		1020047	0					
ANR	1020151	ExpressionStatement	ds -> errors = NULL	2336:4:74706:74723	1020047	6	True				
ANR	1020152	AssignmentExpression	ds -> errors = NULL		1020047	0		=			
ANR	1020153	PtrMemberAccess	ds -> errors		1020047	0					
ANR	1020154	Identifier	ds		1020047	0					
ANR	1020155	Identifier	errors		1020047	1					
ANR	1020156	Identifier	NULL		1020047	1					
ANR	1020157	ExpressionStatement	"gs_free_object ( ds -> dev -> memory , ds -> scaled_data , ""gx_downscaler(scaled_data)"" )"	2337:4:74729:74807	1020047	7	True				
ANR	1020158	CallExpression	"gs_free_object ( ds -> dev -> memory , ds -> scaled_data , ""gx_downscaler(scaled_data)"" )"		1020047	0					
ANR	1020159	Callee	gs_free_object		1020047	0					
ANR	1020160	Identifier	gs_free_object		1020047	0					
ANR	1020161	ArgumentList	ds -> dev -> memory		1020047	1					
ANR	1020162	Argument	ds -> dev -> memory		1020047	0					
ANR	1020163	PtrMemberAccess	ds -> dev -> memory		1020047	0					
ANR	1020164	PtrMemberAccess	ds -> dev		1020047	0					
ANR	1020165	Identifier	ds		1020047	0					
ANR	1020166	Identifier	dev		1020047	1					
ANR	1020167	Identifier	memory		1020047	1					
ANR	1020168	Argument	ds -> scaled_data		1020047	1					
ANR	1020169	PtrMemberAccess	ds -> scaled_data		1020047	0					
ANR	1020170	Identifier	ds		1020047	0					
ANR	1020171	Identifier	scaled_data		1020047	1					
ANR	1020172	Argument	"""gx_downscaler(scaled_data)"""		1020047	2					
ANR	1020173	PrimaryExpression	"""gx_downscaler(scaled_data)"""		1020047	0					
ANR	1020174	ExpressionStatement	ds -> scaled_data = NULL	2338:4:74813:74835	1020047	8	True				
ANR	1020175	AssignmentExpression	ds -> scaled_data = NULL		1020047	0		=			
ANR	1020176	PtrMemberAccess	ds -> scaled_data		1020047	0					
ANR	1020177	Identifier	ds		1020047	0					
ANR	1020178	Identifier	scaled_data		1020047	1					
ANR	1020179	Identifier	NULL		1020047	1					
ANR	1020180	IfStatement	if ( ds -> claptrap )		1020047	9					
ANR	1020181	Condition	ds -> claptrap	2340:8:74846:74857	1020047	0	True				
ANR	1020182	PtrMemberAccess	ds -> claptrap		1020047	0					
ANR	1020183	Identifier	ds		1020047	0					
ANR	1020184	Identifier	claptrap		1020047	1					
ANR	1020185	ExpressionStatement	"ClapTrap_Fin ( ds -> dev -> memory , ds -> claptrap )"	2341:8:74868:74911	1020047	1	True				
ANR	1020186	CallExpression	"ClapTrap_Fin ( ds -> dev -> memory , ds -> claptrap )"		1020047	0					
ANR	1020187	Callee	ClapTrap_Fin		1020047	0					
ANR	1020188	Identifier	ClapTrap_Fin		1020047	0					
ANR	1020189	ArgumentList	ds -> dev -> memory		1020047	1					
ANR	1020190	Argument	ds -> dev -> memory		1020047	0					
ANR	1020191	PtrMemberAccess	ds -> dev -> memory		1020047	0					
ANR	1020192	PtrMemberAccess	ds -> dev		1020047	0					
ANR	1020193	Identifier	ds		1020047	0					
ANR	1020194	Identifier	dev		1020047	1					
ANR	1020195	Identifier	memory		1020047	1					
ANR	1020196	Argument	ds -> claptrap		1020047	1					
ANR	1020197	PtrMemberAccess	ds -> claptrap		1020047	0					
ANR	1020198	Identifier	ds		1020047	0					
ANR	1020199	Identifier	claptrap		1020047	1					
ANR	1020200	IfStatement	if ( ds -> ets_config )		1020047	10					
ANR	1020201	Condition	ds -> ets_config	2343:8:74922:74935	1020047	0	True				
ANR	1020202	PtrMemberAccess	ds -> ets_config		1020047	0					
ANR	1020203	Identifier	ds		1020047	0					
ANR	1020204	Identifier	ets_config		1020047	1					
ANR	1020205	ExpressionStatement	"ets_destroy ( ds -> dev -> memory , ds -> ets_config )"	2344:8:74946:74990	1020047	1	True				
ANR	1020206	CallExpression	"ets_destroy ( ds -> dev -> memory , ds -> ets_config )"		1020047	0					
ANR	1020207	Callee	ets_destroy		1020047	0					
ANR	1020208	Identifier	ets_destroy		1020047	0					
ANR	1020209	ArgumentList	ds -> dev -> memory		1020047	1					
ANR	1020210	Argument	ds -> dev -> memory		1020047	0					
ANR	1020211	PtrMemberAccess	ds -> dev -> memory		1020047	0					
ANR	1020212	PtrMemberAccess	ds -> dev		1020047	0					
ANR	1020213	Identifier	ds		1020047	0					
ANR	1020214	Identifier	dev		1020047	1					
ANR	1020215	Identifier	memory		1020047	1					
ANR	1020216	Argument	ds -> ets_config		1020047	1					
ANR	1020217	PtrMemberAccess	ds -> ets_config		1020047	0					
ANR	1020218	Identifier	ds		1020047	0					
ANR	1020219	Identifier	ets_config		1020047	1					
ANR	1020220	ReturnType	void		1020047	1					
ANR	1020221	Identifier	gx_downscaler_fin		1020047	2					
ANR	1020222	ParameterList	gx_downscaler_t * ds		1020047	3					
ANR	1020223	Parameter	gx_downscaler_t * ds	2322:23:74165:74183	1020047	0	True				
ANR	1020224	ParameterType	gx_downscaler_t *		1020047	0					
ANR	1020225	Identifier	ds		1020047	1					
ANR	1020226	CFGEntryNode	ENTRY		1020047		True				
ANR	1020227	CFGExitNode	EXIT		1020047		True				
ANR	1020228	Symbol	plane		1020047						
ANR	1020229	Symbol	* ds -> dev		1020047						
ANR	1020230	Symbol	ds -> ets_config		1020047						
ANR	1020231	Symbol	ds -> num_planes		1020047						
ANR	1020232	Symbol	NULL		1020047						
ANR	1020233	Symbol	* ds -> pre_cm		1020047						
ANR	1020234	Symbol	ds -> post_cm		1020047						
ANR	1020235	Symbol	GS_CLIENT_COLOR_MAX_COMPONENTS		1020047						
ANR	1020236	Symbol	ds -> dev -> memory		1020047						
ANR	1020237	Symbol	ds -> mfs_data		1020047						
ANR	1020238	Symbol	ds		1020047						
ANR	1020239	Symbol	* ds -> post_cm		1020047						
ANR	1020240	Symbol	ds -> errors		1020047						
ANR	1020241	Symbol	* ds		1020047						
ANR	1020242	Symbol	* * ds		1020047						
ANR	1020243	Symbol	ds -> claptrap		1020047						
ANR	1020244	Symbol	ds -> dev		1020047						
ANR	1020245	Symbol	* plane		1020047						
ANR	1020246	Symbol	ds -> scaled_data		1020047						
ANR	1020247	Symbol	ds -> pre_cm		1020047						
ANR	1020248	Function	gx_downscaler_getbits	2348:0:75013:77144							
ANR	1020249	FunctionDef	"gx_downscaler_getbits (gx_downscaler_t * ds , byte * out_data , int row)"		1020248	0					
ANR	1020250	CompoundStatement		2351:0:75161:77144	1020248	0					
ANR	1020251	IdentifierDeclStatement	int code = 0 ;	2352:4:75167:75181	1020248	0	True				
ANR	1020252	IdentifierDecl	code = 0		1020248	0					
ANR	1020253	IdentifierDeclType	int		1020248	0					
ANR	1020254	Identifier	code		1020248	1					
ANR	1020255	AssignmentExpression	code = 0		1020248	2		=			
ANR	1020256	Identifier	code		1020248	0					
ANR	1020257	PrimaryExpression	0		1020248	1					
ANR	1020258	IdentifierDeclStatement	"int y , y_end ;"	2353:4:75187:75201	1020248	1	True				
ANR	1020259	IdentifierDecl	y		1020248	0					
ANR	1020260	IdentifierDeclType	int		1020248	0					
ANR	1020261	Identifier	y		1020248	1					
ANR	1020262	IdentifierDecl	y_end		1020248	1					
ANR	1020263	IdentifierDeclType	int		1020248	0					
ANR	1020264	Identifier	y_end		1020248	1					
ANR	1020265	IdentifierDeclStatement	byte * data_ptr ;	2354:4:75207:75221	1020248	2	True				
ANR	1020266	IdentifierDecl	* data_ptr		1020248	0					
ANR	1020267	IdentifierDeclType	byte *		1020248	0					
ANR	1020268	Identifier	data_ptr		1020248	1					
ANR	1020269	IdentifierDeclStatement	"int upfactor , downfactor ;"	2355:4:75227:75253	1020248	3	True				
ANR	1020270	IdentifierDecl	upfactor		1020248	0					
ANR	1020271	IdentifierDeclType	int		1020248	0					
ANR	1020272	Identifier	upfactor		1020248	1					
ANR	1020273	IdentifierDecl	downfactor		1020248	1					
ANR	1020274	IdentifierDeclType	int		1020248	0					
ANR	1020275	Identifier	downfactor		1020248	1					
ANR	1020276	ExpressionStatement	"decode_factor ( ds -> factor , & upfactor , & downfactor )"	2357:4:75260:75309	1020248	4	True				
ANR	1020277	CallExpression	"decode_factor ( ds -> factor , & upfactor , & downfactor )"		1020248	0					
ANR	1020278	Callee	decode_factor		1020248	0					
ANR	1020279	Identifier	decode_factor		1020248	0					
ANR	1020280	ArgumentList	ds -> factor		1020248	1					
ANR	1020281	Argument	ds -> factor		1020248	0					
ANR	1020282	PtrMemberAccess	ds -> factor		1020248	0					
ANR	1020283	Identifier	ds		1020248	0					
ANR	1020284	Identifier	factor		1020248	1					
ANR	1020285	Argument	& upfactor		1020248	1					
ANR	1020286	UnaryOperationExpression	& upfactor		1020248	0					
ANR	1020287	UnaryOperator	&		1020248	0					
ANR	1020288	Identifier	upfactor		1020248	1					
ANR	1020289	Argument	& downfactor		1020248	2					
ANR	1020290	UnaryOperationExpression	& downfactor		1020248	0					
ANR	1020291	UnaryOperator	&		1020248	0					
ANR	1020292	Identifier	downfactor		1020248	1					
ANR	1020293	IfStatement	if ( ds -> down_core == NULL )		1020248	5					
ANR	1020294	Condition	ds -> down_core == NULL	2360:8:75356:75376	1020248	0	True				
ANR	1020295	EqualityExpression	ds -> down_core == NULL		1020248	0		==			
ANR	1020296	PtrMemberAccess	ds -> down_core		1020248	0					
ANR	1020297	Identifier	ds		1020248	0					
ANR	1020298	Identifier	down_core		1020248	1					
ANR	1020299	Identifier	NULL		1020248	1					
ANR	1020300	CompoundStatement		10:31:217:217	1020248	1					
ANR	1020301	IfStatement	if ( ds -> claptrap )		1020248	0					
ANR	1020302	Condition	ds -> claptrap	2361:12:75393:75404	1020248	0	True				
ANR	1020303	PtrMemberAccess	ds -> claptrap		1020248	0					
ANR	1020304	Identifier	ds		1020248	0					
ANR	1020305	Identifier	claptrap		1020248	1					
ANR	1020306	ExpressionStatement	"code = ClapTrap_GetLine ( ds -> claptrap , ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data )"	2362:12:75419:75497	1020248	1	True				
ANR	1020307	AssignmentExpression	"code = ClapTrap_GetLine ( ds -> claptrap , ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data )"		1020248	0		=			
ANR	1020308	Identifier	code		1020248	0					
ANR	1020309	CallExpression	"ClapTrap_GetLine ( ds -> claptrap , ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data )"		1020248	1					
ANR	1020310	Callee	ClapTrap_GetLine		1020248	0					
ANR	1020311	Identifier	ClapTrap_GetLine		1020248	0					
ANR	1020312	ArgumentList	ds -> claptrap		1020248	1					
ANR	1020313	Argument	ds -> claptrap		1020248	0					
ANR	1020314	PtrMemberAccess	ds -> claptrap		1020248	0					
ANR	1020315	Identifier	ds		1020248	0					
ANR	1020316	Identifier	claptrap		1020248	1					
ANR	1020317	Argument	ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data		1020248	1					
ANR	1020318	ConditionalExpression	ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data		1020248	0					
ANR	1020319	Condition	ds -> apply_cm		1020248	0					
ANR	1020320	PtrMemberAccess	ds -> apply_cm		1020248	0					
ANR	1020321	Identifier	ds		1020248	0					
ANR	1020322	Identifier	apply_cm		1020248	1					
ANR	1020323	ArrayIndexing	ds -> pre_cm [ 0 ]		1020248	1					
ANR	1020324	PtrMemberAccess	ds -> pre_cm		1020248	0					
ANR	1020325	Identifier	ds		1020248	0					
ANR	1020326	Identifier	pre_cm		1020248	1					
ANR	1020327	PrimaryExpression	0		1020248	1					
ANR	1020328	Identifier	out_data		1020248	2					
ANR	1020329	ElseStatement	else		1020248	0					
ANR	1020330	ExpressionStatement	"code = ( * dev_proc ( ds -> dev , get_bits ) ) ( ds -> dev , row , ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data , NULL )"	2364:12:75524:75622	1020248	0	True				
ANR	1020331	AssignmentExpression	"code = ( * dev_proc ( ds -> dev , get_bits ) ) ( ds -> dev , row , ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data , NULL )"		1020248	0		=			
ANR	1020332	Identifier	code		1020248	0					
ANR	1020333	CallExpression	"( * dev_proc ( ds -> dev , get_bits ) ) ( ds -> dev , row , ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data , NULL )"		1020248	1					
ANR	1020334	Callee	"* dev_proc ( ds -> dev , get_bits )"		1020248	0					
ANR	1020335	UnaryOperationExpression	"* dev_proc ( ds -> dev , get_bits )"		1020248	0					
ANR	1020336	UnaryOperator	*		1020248	0					
ANR	1020337	CallExpression	"dev_proc ( ds -> dev , get_bits )"		1020248	1					
ANR	1020338	Callee	dev_proc		1020248	0					
ANR	1020339	Identifier	dev_proc		1020248	0					
ANR	1020340	ArgumentList	ds -> dev		1020248	1					
ANR	1020341	Argument	ds -> dev		1020248	0					
ANR	1020342	PtrMemberAccess	ds -> dev		1020248	0					
ANR	1020343	Identifier	ds		1020248	0					
ANR	1020344	Identifier	dev		1020248	1					
ANR	1020345	Argument	get_bits		1020248	1					
ANR	1020346	Identifier	get_bits		1020248	0					
ANR	1020347	ArgumentList	ds -> dev		1020248	1					
ANR	1020348	Argument	ds -> dev		1020248	0					
ANR	1020349	PtrMemberAccess	ds -> dev		1020248	0					
ANR	1020350	Identifier	ds		1020248	0					
ANR	1020351	Identifier	dev		1020248	1					
ANR	1020352	Argument	row		1020248	1					
ANR	1020353	Identifier	row		1020248	0					
ANR	1020354	Argument	ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data		1020248	2					
ANR	1020355	ConditionalExpression	ds -> apply_cm ? ds -> pre_cm [ 0 ] : out_data		1020248	0					
ANR	1020356	Condition	ds -> apply_cm		1020248	0					
ANR	1020357	PtrMemberAccess	ds -> apply_cm		1020248	0					
ANR	1020358	Identifier	ds		1020248	0					
ANR	1020359	Identifier	apply_cm		1020248	1					
ANR	1020360	ArrayIndexing	ds -> pre_cm [ 0 ]		1020248	1					
ANR	1020361	PtrMemberAccess	ds -> pre_cm		1020248	0					
ANR	1020362	Identifier	ds		1020248	0					
ANR	1020363	Identifier	pre_cm		1020248	1					
ANR	1020364	PrimaryExpression	0		1020248	1					
ANR	1020365	Identifier	out_data		1020248	2					
ANR	1020366	Argument	NULL		1020248	3					
ANR	1020367	Identifier	NULL		1020248	0					
ANR	1020368	IfStatement	if ( code < 0 )		1020248	1					
ANR	1020369	Condition	code < 0	2365:12:75636:75643	1020248	0	True				
ANR	1020370	RelationalExpression	code < 0		1020248	0		<			
ANR	1020371	Identifier	code		1020248	0					
ANR	1020372	PrimaryExpression	0		1020248	1					
ANR	1020373	ReturnStatement	return code ;	2366:12:75658:75669	1020248	1	True				
ANR	1020374	Identifier	code		1020248	0					
ANR	1020375	IfStatement	if ( ds -> apply_cm )		1020248	2					
ANR	1020376	Condition	ds -> apply_cm	2367:12:75683:75694	1020248	0	True				
ANR	1020377	PtrMemberAccess	ds -> apply_cm		1020248	0					
ANR	1020378	Identifier	ds		1020248	0					
ANR	1020379	Identifier	apply_cm		1020248	1					
ANR	1020380	CompoundStatement		17:26:535:535	1020248	1					
ANR	1020381	ExpressionStatement	data_ptr = out_data	2368:12:75711:75730	1020248	0	True				
ANR	1020382	AssignmentExpression	data_ptr = out_data		1020248	0		=			
ANR	1020383	Identifier	data_ptr		1020248	0					
ANR	1020384	Identifier	out_data		1020248	1					
ANR	1020385	ReturnStatement	"return ds -> apply_cm ( ds -> apply_cm_arg , & data_ptr , ds -> pre_cm , ds -> width , 1 , 0 ) ;"	2369:12:75744:75821	1020248	1	True				
ANR	1020386	CallExpression	"ds -> apply_cm ( ds -> apply_cm_arg , & data_ptr , ds -> pre_cm , ds -> width , 1 , 0 )"		1020248	0					
ANR	1020387	Callee	ds -> apply_cm		1020248	0					
ANR	1020388	PtrMemberAccess	ds -> apply_cm		1020248	0					
ANR	1020389	Identifier	ds		1020248	0					
ANR	1020390	Identifier	apply_cm		1020248	1					
ANR	1020391	ArgumentList	ds -> apply_cm_arg		1020248	1					
ANR	1020392	Argument	ds -> apply_cm_arg		1020248	0					
ANR	1020393	PtrMemberAccess	ds -> apply_cm_arg		1020248	0					
ANR	1020394	Identifier	ds		1020248	0					
ANR	1020395	Identifier	apply_cm_arg		1020248	1					
ANR	1020396	Argument	& data_ptr		1020248	1					
ANR	1020397	UnaryOperationExpression	& data_ptr		1020248	0					
ANR	1020398	UnaryOperator	&		1020248	0					
ANR	1020399	Identifier	data_ptr		1020248	1					
ANR	1020400	Argument	ds -> pre_cm		1020248	2					
ANR	1020401	PtrMemberAccess	ds -> pre_cm		1020248	0					
ANR	1020402	Identifier	ds		1020248	0					
ANR	1020403	Identifier	pre_cm		1020248	1					
ANR	1020404	Argument	ds -> width		1020248	3					
ANR	1020405	PtrMemberAccess	ds -> width		1020248	0					
ANR	1020406	Identifier	ds		1020248	0					
ANR	1020407	Identifier	width		1020248	1					
ANR	1020408	Argument	1		1020248	4					
ANR	1020409	PrimaryExpression	1		1020248	0					
ANR	1020410	Argument	0		1020248	5					
ANR	1020411	PrimaryExpression	0		1020248	0					
ANR	1020412	ReturnStatement	return 0 ;	2371:8:75841:75849	1020248	3	True				
ANR	1020413	PrimaryExpression	0		1020248	0					
ANR	1020414	ExpressionStatement	y = row * downfactor	2375:4:75902:75929	1020248	6	True				
ANR	1020415	AssignmentExpression	y = row * downfactor		1020248	0		=			
ANR	1020416	Identifier	y		1020248	0					
ANR	1020417	MultiplicativeExpression	row * downfactor		1020248	1		*			
ANR	1020418	Identifier	row		1020248	0					
ANR	1020419	Identifier	downfactor		1020248	1					
ANR	1020420	ExpressionStatement	y_end = y + downfactor	2376:4:75935:75960	1020248	7	True				
ANR	1020421	AssignmentExpression	y_end = y + downfactor		1020248	0		=			
ANR	1020422	Identifier	y_end		1020248	0					
ANR	1020423	AdditiveExpression	y + downfactor		1020248	1		+			
ANR	1020424	Identifier	y		1020248	0					
ANR	1020425	Identifier	downfactor		1020248	1					
ANR	1020426	ExpressionStatement	data_ptr = ds -> pre_cm [ 0 ]	2377:4:75966:75990	1020248	8	True				
ANR	1020427	AssignmentExpression	data_ptr = ds -> pre_cm [ 0 ]		1020248	0		=			
ANR	1020428	Identifier	data_ptr		1020248	0					
ANR	1020429	ArrayIndexing	ds -> pre_cm [ 0 ]		1020248	1					
ANR	1020430	PtrMemberAccess	ds -> pre_cm		1020248	0					
ANR	1020431	Identifier	ds		1020248	0					
ANR	1020432	Identifier	pre_cm		1020248	1					
ANR	1020433	PrimaryExpression	0		1020248	1					
ANR	1020434	IfStatement	if ( ds -> claptrap )		1020248	9					
ANR	1020435	Condition	ds -> claptrap	2378:8:76000:76011	1020248	0	True				
ANR	1020436	PtrMemberAccess	ds -> claptrap		1020248	0					
ANR	1020437	Identifier	ds		1020248	0					
ANR	1020438	Identifier	claptrap		1020248	1					
ANR	1020439	CompoundStatement		28:22:852:852	1020248	1					
ANR	1020440	DoStatement	do		1020248	0					
ANR	1020441	CompoundStatement		29:11:865:865	1020248	0					
ANR	1020442	ExpressionStatement	"code = ClapTrap_GetLine ( ds -> claptrap , data_ptr )"	2380:12:76041:76088	1020248	0	True				
ANR	1020443	AssignmentExpression	"code = ClapTrap_GetLine ( ds -> claptrap , data_ptr )"		1020248	0		=			
ANR	1020444	Identifier	code		1020248	0					
ANR	1020445	CallExpression	"ClapTrap_GetLine ( ds -> claptrap , data_ptr )"		1020248	1					
ANR	1020446	Callee	ClapTrap_GetLine		1020248	0					
ANR	1020447	Identifier	ClapTrap_GetLine		1020248	0					
ANR	1020448	ArgumentList	ds -> claptrap		1020248	1					
ANR	1020449	Argument	ds -> claptrap		1020248	0					
ANR	1020450	PtrMemberAccess	ds -> claptrap		1020248	0					
ANR	1020451	Identifier	ds		1020248	0					
ANR	1020452	Identifier	claptrap		1020248	1					
ANR	1020453	Argument	data_ptr		1020248	1					
ANR	1020454	Identifier	data_ptr		1020248	0					
ANR	1020455	IfStatement	if ( code < 0 )		1020248	1					
ANR	1020456	Condition	code < 0	2381:16:76106:76113	1020248	0	True				
ANR	1020457	RelationalExpression	code < 0		1020248	0		<			
ANR	1020458	Identifier	code		1020248	0					
ANR	1020459	PrimaryExpression	0		1020248	1					
ANR	1020460	ReturnStatement	return code ;	2382:16:76132:76143	1020248	1	True				
ANR	1020461	Identifier	code		1020248	0					
ANR	1020462	ExpressionStatement	data_ptr += ds -> span	2383:12:76157:76177	1020248	2	True				
ANR	1020463	AssignmentExpression	data_ptr += ds -> span		1020248	0		+=			
ANR	1020464	Identifier	data_ptr		1020248	0					
ANR	1020465	PtrMemberAccess	ds -> span		1020248	1					
ANR	1020466	Identifier	ds		1020248	0					
ANR	1020467	Identifier	span		1020248	1					
ANR	1020468	ExpressionStatement	y ++	2384:12:76191:76194	1020248	3	True				
ANR	1020469	PostIncDecOperationExpression	y ++		1020248	0					
ANR	1020470	Identifier	y		1020248	0					
ANR	1020471	IncDec	++		1020248	1					
ANR	1020472	Condition	y < y_end	2385:17:76213:76221	1020248	1	True				
ANR	1020473	RelationalExpression	y < y_end		1020248	0		<			
ANR	1020474	Identifier	y		1020248	0					
ANR	1020475	Identifier	y_end		1020248	1					
ANR	1020476	ElseStatement	else		1020248	0					
ANR	1020477	CompoundStatement		36:11:1074:1074	1020248	0					
ANR	1020478	DoStatement	do		1020248	0					
ANR	1020479	CompoundStatement		37:11:1087:1087	1020248	0					
ANR	1020480	ExpressionStatement	"code = ( * dev_proc ( ds -> dev , get_bits ) ) ( ds -> dev , y , data_ptr , NULL )"	2388:12:76263:76328	1020248	0	True				
ANR	1020481	AssignmentExpression	"code = ( * dev_proc ( ds -> dev , get_bits ) ) ( ds -> dev , y , data_ptr , NULL )"		1020248	0		=			
ANR	1020482	Identifier	code		1020248	0					
ANR	1020483	CallExpression	"( * dev_proc ( ds -> dev , get_bits ) ) ( ds -> dev , y , data_ptr , NULL )"		1020248	1					
ANR	1020484	Callee	"* dev_proc ( ds -> dev , get_bits )"		1020248	0					
ANR	1020485	UnaryOperationExpression	"* dev_proc ( ds -> dev , get_bits )"		1020248	0					
ANR	1020486	UnaryOperator	*		1020248	0					
ANR	1020487	CallExpression	"dev_proc ( ds -> dev , get_bits )"		1020248	1					
ANR	1020488	Callee	dev_proc		1020248	0					
ANR	1020489	Identifier	dev_proc		1020248	0					
ANR	1020490	ArgumentList	ds -> dev		1020248	1					
ANR	1020491	Argument	ds -> dev		1020248	0					
ANR	1020492	PtrMemberAccess	ds -> dev		1020248	0					
ANR	1020493	Identifier	ds		1020248	0					
ANR	1020494	Identifier	dev		1020248	1					
ANR	1020495	Argument	get_bits		1020248	1					
ANR	1020496	Identifier	get_bits		1020248	0					
ANR	1020497	ArgumentList	ds -> dev		1020248	1					
ANR	1020498	Argument	ds -> dev		1020248	0					
ANR	1020499	PtrMemberAccess	ds -> dev		1020248	0					
ANR	1020500	Identifier	ds		1020248	0					
ANR	1020501	Identifier	dev		1020248	1					
ANR	1020502	Argument	y		1020248	1					
ANR	1020503	Identifier	y		1020248	0					
ANR	1020504	Argument	data_ptr		1020248	2					
ANR	1020505	Identifier	data_ptr		1020248	0					
ANR	1020506	Argument	NULL		1020248	3					
ANR	1020507	Identifier	NULL		1020248	0					
ANR	1020508	IfStatement	if ( code < 0 )		1020248	1					
ANR	1020509	Condition	code < 0	2389:16:76346:76353	1020248	0	True				
ANR	1020510	RelationalExpression	code < 0		1020248	0		<			
ANR	1020511	Identifier	code		1020248	0					
ANR	1020512	PrimaryExpression	0		1020248	1					
ANR	1020513	ReturnStatement	return code ;	2390:16:76372:76383	1020248	1	True				
ANR	1020514	Identifier	code		1020248	0					
ANR	1020515	ExpressionStatement	data_ptr += ds -> span	2391:12:76397:76417	1020248	2	True				
ANR	1020516	AssignmentExpression	data_ptr += ds -> span		1020248	0		+=			
ANR	1020517	Identifier	data_ptr		1020248	0					
ANR	1020518	PtrMemberAccess	ds -> span		1020248	1					
ANR	1020519	Identifier	ds		1020248	0					
ANR	1020520	Identifier	span		1020248	1					
ANR	1020521	ExpressionStatement	y ++	2392:12:76431:76434	1020248	3	True				
ANR	1020522	PostIncDecOperationExpression	y ++		1020248	0					
ANR	1020523	Identifier	y		1020248	0					
ANR	1020524	IncDec	++		1020248	1					
ANR	1020525	Condition	y < y_end	2393:17:76453:76461	1020248	1	True				
ANR	1020526	RelationalExpression	y < y_end		1020248	0		<			
ANR	1020527	Identifier	y		1020248	0					
ANR	1020528	Identifier	y_end		1020248	1					
ANR	1020529	IfStatement	if ( ds -> apply_cm )		1020248	10					
ANR	1020530	Condition	ds -> apply_cm	2396:8:76480:76491	1020248	0	True				
ANR	1020531	PtrMemberAccess	ds -> apply_cm		1020248	0					
ANR	1020532	Identifier	ds		1020248	0					
ANR	1020533	Identifier	apply_cm		1020248	1					
ANR	1020534	CompoundStatement		46:22:1332:1332	1020248	1					
ANR	1020535	IfStatement	if ( ds -> early_cm )		1020248	0					
ANR	1020536	Condition	ds -> early_cm	2397:12:76508:76519	1020248	0	True				
ANR	1020537	PtrMemberAccess	ds -> early_cm		1020248	0					
ANR	1020538	Identifier	ds		1020248	0					
ANR	1020539	Identifier	early_cm		1020248	1					
ANR	1020540	CompoundStatement		47:26:1360:1360	1020248	1					
ANR	1020541	ExpressionStatement	"code = ds -> apply_cm ( ds -> apply_cm_arg , ds -> post_cm , ds -> pre_cm , ds -> dev -> width , 1 , 0 )"	2398:12:76536:76620	1020248	0	True				
ANR	1020542	AssignmentExpression	"code = ds -> apply_cm ( ds -> apply_cm_arg , ds -> post_cm , ds -> pre_cm , ds -> dev -> width , 1 , 0 )"		1020248	0		=			
ANR	1020543	Identifier	code		1020248	0					
ANR	1020544	CallExpression	"ds -> apply_cm ( ds -> apply_cm_arg , ds -> post_cm , ds -> pre_cm , ds -> dev -> width , 1 , 0 )"		1020248	1					
ANR	1020545	Callee	ds -> apply_cm		1020248	0					
ANR	1020546	PtrMemberAccess	ds -> apply_cm		1020248	0					
ANR	1020547	Identifier	ds		1020248	0					
ANR	1020548	Identifier	apply_cm		1020248	1					
ANR	1020549	ArgumentList	ds -> apply_cm_arg		1020248	1					
ANR	1020550	Argument	ds -> apply_cm_arg		1020248	0					
ANR	1020551	PtrMemberAccess	ds -> apply_cm_arg		1020248	0					
ANR	1020552	Identifier	ds		1020248	0					
ANR	1020553	Identifier	apply_cm_arg		1020248	1					
ANR	1020554	Argument	ds -> post_cm		1020248	1					
ANR	1020555	PtrMemberAccess	ds -> post_cm		1020248	0					
ANR	1020556	Identifier	ds		1020248	0					
ANR	1020557	Identifier	post_cm		1020248	1					
ANR	1020558	Argument	ds -> pre_cm		1020248	2					
ANR	1020559	PtrMemberAccess	ds -> pre_cm		1020248	0					
ANR	1020560	Identifier	ds		1020248	0					
ANR	1020561	Identifier	pre_cm		1020248	1					
ANR	1020562	Argument	ds -> dev -> width		1020248	3					
ANR	1020563	PtrMemberAccess	ds -> dev -> width		1020248	0					
ANR	1020564	PtrMemberAccess	ds -> dev		1020248	0					
ANR	1020565	Identifier	ds		1020248	0					
ANR	1020566	Identifier	dev		1020248	1					
ANR	1020567	Identifier	width		1020248	1					
ANR	1020568	Argument	1		1020248	4					
ANR	1020569	PrimaryExpression	1		1020248	0					
ANR	1020570	Argument	0		1020248	5					
ANR	1020571	PrimaryExpression	0		1020248	0					
ANR	1020572	IfStatement	if ( code < 0 )		1020248	1					
ANR	1020573	Condition	code < 0	2399:16:76638:76645	1020248	0	True				
ANR	1020574	RelationalExpression	code < 0		1020248	0		<			
ANR	1020575	Identifier	code		1020248	0					
ANR	1020576	PrimaryExpression	0		1020248	1					
ANR	1020577	ReturnStatement	return code ;	2400:16:76664:76675	1020248	1	True				
ANR	1020578	Identifier	code		1020248	0					
ANR	1020579	ExpressionStatement	"( ds -> down_core ) ( ds , out_data , ds -> post_cm [ 0 ] , row , 0 , ds -> span )"	2401:12:76689:76752	1020248	2	True				
ANR	1020580	CallExpression	"( ds -> down_core ) ( ds , out_data , ds -> post_cm [ 0 ] , row , 0 , ds -> span )"		1020248	0					
ANR	1020581	Callee	ds -> down_core		1020248	0					
ANR	1020582	PtrMemberAccess	ds -> down_core		1020248	0					
ANR	1020583	Identifier	ds		1020248	0					
ANR	1020584	Identifier	down_core		1020248	1					
ANR	1020585	ArgumentList	ds		1020248	1					
ANR	1020586	Argument	ds		1020248	0					
ANR	1020587	Identifier	ds		1020248	0					
ANR	1020588	Argument	out_data		1020248	1					
ANR	1020589	Identifier	out_data		1020248	0					
ANR	1020590	Argument	ds -> post_cm [ 0 ]		1020248	2					
ANR	1020591	ArrayIndexing	ds -> post_cm [ 0 ]		1020248	0					
ANR	1020592	PtrMemberAccess	ds -> post_cm		1020248	0					
ANR	1020593	Identifier	ds		1020248	0					
ANR	1020594	Identifier	post_cm		1020248	1					
ANR	1020595	PrimaryExpression	0		1020248	1					
ANR	1020596	Argument	row		1020248	3					
ANR	1020597	Identifier	row		1020248	0					
ANR	1020598	Argument	0		1020248	4					
ANR	1020599	PrimaryExpression	0		1020248	0					
ANR	1020600	Argument	ds -> span		1020248	5					
ANR	1020601	PtrMemberAccess	ds -> span		1020248	0					
ANR	1020602	Identifier	ds		1020248	0					
ANR	1020603	Identifier	span		1020248	1					
ANR	1020604	ElseStatement	else		1020248	0					
ANR	1020605	CompoundStatement		52:15:1607:1607	1020248	0					
ANR	1020606	ExpressionStatement	data_ptr = out_data	2403:12:76783:76802	1020248	0	True				
ANR	1020607	AssignmentExpression	data_ptr = out_data		1020248	0		=			
ANR	1020608	Identifier	data_ptr		1020248	0					
ANR	1020609	Identifier	out_data		1020248	1					
ANR	1020610	ExpressionStatement	"( ds -> down_core ) ( ds , ds -> post_cm [ 0 ] , ds -> pre_cm [ 0 ] , row , 0 , ds -> span )"	2404:12:76816:76884	1020248	1	True				
ANR	1020611	CallExpression	"( ds -> down_core ) ( ds , ds -> post_cm [ 0 ] , ds -> pre_cm [ 0 ] , row , 0 , ds -> span )"		1020248	0					
ANR	1020612	Callee	ds -> down_core		1020248	0					
ANR	1020613	PtrMemberAccess	ds -> down_core		1020248	0					
ANR	1020614	Identifier	ds		1020248	0					
ANR	1020615	Identifier	down_core		1020248	1					
ANR	1020616	ArgumentList	ds		1020248	1					
ANR	1020617	Argument	ds		1020248	0					
ANR	1020618	Identifier	ds		1020248	0					
ANR	1020619	Argument	ds -> post_cm [ 0 ]		1020248	1					
ANR	1020620	ArrayIndexing	ds -> post_cm [ 0 ]		1020248	0					
ANR	1020621	PtrMemberAccess	ds -> post_cm		1020248	0					
ANR	1020622	Identifier	ds		1020248	0					
ANR	1020623	Identifier	post_cm		1020248	1					
ANR	1020624	PrimaryExpression	0		1020248	1					
ANR	1020625	Argument	ds -> pre_cm [ 0 ]		1020248	2					
ANR	1020626	ArrayIndexing	ds -> pre_cm [ 0 ]		1020248	0					
ANR	1020627	PtrMemberAccess	ds -> pre_cm		1020248	0					
ANR	1020628	Identifier	ds		1020248	0					
ANR	1020629	Identifier	pre_cm		1020248	1					
ANR	1020630	PrimaryExpression	0		1020248	1					
ANR	1020631	Argument	row		1020248	3					
ANR	1020632	Identifier	row		1020248	0					
ANR	1020633	Argument	0		1020248	4					
ANR	1020634	PrimaryExpression	0		1020248	0					
ANR	1020635	Argument	ds -> span		1020248	5					
ANR	1020636	PtrMemberAccess	ds -> span		1020248	0					
ANR	1020637	Identifier	ds		1020248	0					
ANR	1020638	Identifier	span		1020248	1					
ANR	1020639	ExpressionStatement	"code = ds -> apply_cm ( ds -> apply_cm_arg , & out_data , ds -> post_cm , ds -> width , 1 , 0 )"	2405:12:76898:76976	1020248	2	True				
ANR	1020640	AssignmentExpression	"code = ds -> apply_cm ( ds -> apply_cm_arg , & out_data , ds -> post_cm , ds -> width , 1 , 0 )"		1020248	0		=			
ANR	1020641	Identifier	code		1020248	0					
ANR	1020642	CallExpression	"ds -> apply_cm ( ds -> apply_cm_arg , & out_data , ds -> post_cm , ds -> width , 1 , 0 )"		1020248	1					
ANR	1020643	Callee	ds -> apply_cm		1020248	0					
ANR	1020644	PtrMemberAccess	ds -> apply_cm		1020248	0					
ANR	1020645	Identifier	ds		1020248	0					
ANR	1020646	Identifier	apply_cm		1020248	1					
ANR	1020647	ArgumentList	ds -> apply_cm_arg		1020248	1					
ANR	1020648	Argument	ds -> apply_cm_arg		1020248	0					
ANR	1020649	PtrMemberAccess	ds -> apply_cm_arg		1020248	0					
ANR	1020650	Identifier	ds		1020248	0					
ANR	1020651	Identifier	apply_cm_arg		1020248	1					
ANR	1020652	Argument	& out_data		1020248	1					
ANR	1020653	UnaryOperationExpression	& out_data		1020248	0					
ANR	1020654	UnaryOperator	&		1020248	0					
ANR	1020655	Identifier	out_data		1020248	1					
ANR	1020656	Argument	ds -> post_cm		1020248	2					
ANR	1020657	PtrMemberAccess	ds -> post_cm		1020248	0					
ANR	1020658	Identifier	ds		1020248	0					
ANR	1020659	Identifier	post_cm		1020248	1					
ANR	1020660	Argument	ds -> width		1020248	3					
ANR	1020661	PtrMemberAccess	ds -> width		1020248	0					
ANR	1020662	Identifier	ds		1020248	0					
ANR	1020663	Identifier	width		1020248	1					
ANR	1020664	Argument	1		1020248	4					
ANR	1020665	PrimaryExpression	1		1020248	0					
ANR	1020666	Argument	0		1020248	5					
ANR	1020667	PrimaryExpression	0		1020248	0					
ANR	1020668	IfStatement	if ( code < 0 )		1020248	3					
ANR	1020669	Condition	code < 0	2406:16:76994:77001	1020248	0	True				
ANR	1020670	RelationalExpression	code < 0		1020248	0		<			
ANR	1020671	Identifier	code		1020248	0					
ANR	1020672	PrimaryExpression	0		1020248	1					
ANR	1020673	ReturnStatement	return code ;	2407:16:77020:77031	1020248	1	True				
ANR	1020674	Identifier	code		1020248	0					
ANR	1020675	ElseStatement	else		1020248	0					
ANR	1020676	ExpressionStatement	"( ds -> down_core ) ( ds , out_data , ds -> pre_cm [ 0 ] , row , 0 , ds -> span )"	2410:8:77062:77124	1020248	0	True				
ANR	1020677	CallExpression	"( ds -> down_core ) ( ds , out_data , ds -> pre_cm [ 0 ] , row , 0 , ds -> span )"		1020248	0					
ANR	1020678	Callee	ds -> down_core		1020248	0					
ANR	1020679	PtrMemberAccess	ds -> down_core		1020248	0					
ANR	1020680	Identifier	ds		1020248	0					
ANR	1020681	Identifier	down_core		1020248	1					
ANR	1020682	ArgumentList	ds		1020248	1					
ANR	1020683	Argument	ds		1020248	0					
ANR	1020684	Identifier	ds		1020248	0					
ANR	1020685	Argument	out_data		1020248	1					
ANR	1020686	Identifier	out_data		1020248	0					
ANR	1020687	Argument	ds -> pre_cm [ 0 ]		1020248	2					
ANR	1020688	ArrayIndexing	ds -> pre_cm [ 0 ]		1020248	0					
ANR	1020689	PtrMemberAccess	ds -> pre_cm		1020248	0					
ANR	1020690	Identifier	ds		1020248	0					
ANR	1020691	Identifier	pre_cm		1020248	1					
ANR	1020692	PrimaryExpression	0		1020248	1					
ANR	1020693	Argument	row		1020248	3					
ANR	1020694	Identifier	row		1020248	0					
ANR	1020695	Argument	0		1020248	4					
ANR	1020696	PrimaryExpression	0		1020248	0					
ANR	1020697	Argument	ds -> span		1020248	5					
ANR	1020698	PtrMemberAccess	ds -> span		1020248	0					
ANR	1020699	Identifier	ds		1020248	0					
ANR	1020700	Identifier	span		1020248	1					
ANR	1020701	ReturnStatement	return code ;	2412:4:77131:77142	1020248	11	True				
ANR	1020702	Identifier	code		1020248	0					
ANR	1020703	ReturnType	int		1020248	1					
ANR	1020704	Identifier	gx_downscaler_getbits		1020248	2					
ANR	1020705	ParameterList	"gx_downscaler_t * ds , byte * out_data , int row"		1020248	3					
ANR	1020706	Parameter	gx_downscaler_t * ds	2348:26:75039:75057	1020248	0	True				
ANR	1020707	ParameterType	gx_downscaler_t *		1020248	0					
ANR	1020708	Identifier	ds		1020248	1					
ANR	1020709	Parameter	byte * out_data	2349:26:75086:75110	1020248	1	True				
ANR	1020710	ParameterType	byte *		1020248	0					
ANR	1020711	Identifier	out_data		1020248	1					
ANR	1020712	Parameter	int row	2350:26:75139:75158	1020248	2	True				
ANR	1020713	ParameterType	int		1020248	0					
ANR	1020714	Identifier	row		1020248	1					
ANR	1020715	CFGEntryNode	ENTRY		1020248		True				
ANR	1020716	CFGExitNode	EXIT		1020248		True				
ANR	1020717	Symbol	y_end		1020248						
ANR	1020718	Symbol	ds -> early_cm		1020248						
ANR	1020719	Symbol	* ds -> dev		1020248						
ANR	1020720	Symbol	code		1020248						
ANR	1020721	Symbol	* ds -> pre_cm		1020248						
ANR	1020722	Symbol	get_bits		1020248						
ANR	1020723	Symbol	* dev_proc		1020248						
ANR	1020724	Symbol	& upfactor		1020248						
ANR	1020725	Symbol	ds -> post_cm		1020248						
ANR	1020726	Symbol	ds -> apply_cm		1020248						
ANR	1020727	Symbol	out_data		1020248						
ANR	1020728	Symbol	ds		1020248						
ANR	1020729	Symbol	& data_ptr		1020248						
ANR	1020730	Symbol	& downfactor		1020248						
ANR	1020731	Symbol	* ds		1020248						
ANR	1020732	Symbol	dev_proc		1020248						
ANR	1020733	Symbol	ds -> claptrap		1020248						
ANR	1020734	Symbol	ds -> span		1020248						
ANR	1020735	Symbol	& out_data		1020248						
ANR	1020736	Symbol	ClapTrap_GetLine		1020248						
ANR	1020737	Symbol	ds -> width		1020248						
ANR	1020738	Symbol	row		1020248						
ANR	1020739	Symbol	ds -> down_core		1020248						
ANR	1020740	Symbol	upfactor		1020248						
ANR	1020741	Symbol	NULL		1020248						
ANR	1020742	Symbol	ds -> dev -> width		1020248						
ANR	1020743	Symbol	* ds -> post_cm		1020248						
ANR	1020744	Symbol	"* dev_proc ( ds -> dev , get_bits )"		1020248						
ANR	1020745	Symbol	ds -> factor		1020248						
ANR	1020746	Symbol	downfactor		1020248						
ANR	1020747	Symbol	ds -> apply_cm_arg		1020248						
ANR	1020748	Symbol	y		1020248						
ANR	1020749	Symbol	* * ds		1020248						
ANR	1020750	Symbol	ds -> dev		1020248						
ANR	1020751	Symbol	data_ptr		1020248						
ANR	1020752	Symbol	ds -> pre_cm		1020248						
ANR	1020753	Function	gx_downscaler_get_bits_rectangle	2416:0:77165:82923							
ANR	1020754	FunctionDef	"gx_downscaler_get_bits_rectangle (gx_downscaler_t * ds , gs_get_bits_params_t * params , int row)"		1020753	0					
ANR	1020755	CompoundStatement		2419:0:77359:82923	1020753	0					
ANR	1020756	IdentifierDeclStatement	int code ;	2420:4:77365:77391	1020753	0	True				
ANR	1020757	IdentifierDecl	code		1020753	0					
ANR	1020758	IdentifierDeclType	int		1020753	0					
ANR	1020759	Identifier	code		1020753	1					
ANR	1020760	IdentifierDeclStatement	gs_int_rect rect ;	2421:4:77397:77423	1020753	1	True				
ANR	1020761	IdentifierDecl	rect		1020753	0					
ANR	1020762	IdentifierDeclType	gs_int_rect		1020753	0					
ANR	1020763	Identifier	rect		1020753	1					
ANR	1020764	IdentifierDeclStatement	int plane ;	2422:4:77429:77456	1020753	2	True				
ANR	1020765	IdentifierDecl	plane		1020753	0					
ANR	1020766	IdentifierDeclType	int		1020753	0					
ANR	1020767	Identifier	plane		1020753	1					
ANR	1020768	IdentifierDeclStatement	int factor = ds -> factor ;	2423:4:77462:77503	1020753	3	True				
ANR	1020769	IdentifierDecl	factor = ds -> factor		1020753	0					
ANR	1020770	IdentifierDeclType	int		1020753	0					
ANR	1020771	Identifier	factor		1020753	1					
ANR	1020772	AssignmentExpression	factor = ds -> factor		1020753	2		=			
ANR	1020773	Identifier	factor		1020753	0					
ANR	1020774	PtrMemberAccess	ds -> factor		1020753	1					
ANR	1020775	Identifier	ds		1020753	0					
ANR	1020776	Identifier	factor		1020753	1					
ANR	1020777	IdentifierDeclStatement	gs_get_bits_params_t params2 ;	2424:4:77509:77538	1020753	4	True				
ANR	1020778	IdentifierDecl	params2		1020753	0					
ANR	1020779	IdentifierDeclType	gs_get_bits_params_t		1020753	0					
ANR	1020780	Identifier	params2		1020753	1					
ANR	1020781	IdentifierDeclStatement	"int upfactor , downfactor ;"	2425:4:77544:77586	1020753	5	True				
ANR	1020782	IdentifierDecl	upfactor		1020753	0					
ANR	1020783	IdentifierDeclType	int		1020753	0					
ANR	1020784	Identifier	upfactor		1020753	1					
ANR	1020785	IdentifierDecl	downfactor		1020753	1					
ANR	1020786	IdentifierDeclType	int		1020753	0					
ANR	1020787	Identifier	downfactor		1020753	1					
ANR	1020788	IdentifierDeclStatement	int subrow ;	2426:4:77592:77620	1020753	6	True				
ANR	1020789	IdentifierDecl	subrow		1020753	0					
ANR	1020790	IdentifierDeclType	int		1020753	0					
ANR	1020791	Identifier	subrow		1020753	1					
ANR	1020792	IdentifierDeclStatement	int copy = ( ds -> dev -> width * ds -> src_bpc + 7 ) >> 3 ;	2427:4:77626:77692	1020753	7	True				
ANR	1020793	IdentifierDecl	copy = ( ds -> dev -> width * ds -> src_bpc + 7 ) >> 3		1020753	0					
ANR	1020794	IdentifierDeclType	int		1020753	0					
ANR	1020795	Identifier	copy		1020753	1					
ANR	1020796	AssignmentExpression	copy = ( ds -> dev -> width * ds -> src_bpc + 7 ) >> 3		1020753	2		=			
ANR	1020797	Identifier	copy		1020753	0					
ANR	1020798	ShiftExpression	( ds -> dev -> width * ds -> src_bpc + 7 ) >> 3		1020753	1		>>			
ANR	1020799	AdditiveExpression	ds -> dev -> width * ds -> src_bpc + 7		1020753	0		+			
ANR	1020800	MultiplicativeExpression	ds -> dev -> width * ds -> src_bpc		1020753	0		*			
ANR	1020801	PtrMemberAccess	ds -> dev -> width		1020753	0					
ANR	1020802	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1020803	Identifier	ds		1020753	0					
ANR	1020804	Identifier	dev		1020753	1					
ANR	1020805	Identifier	width		1020753	1					
ANR	1020806	PtrMemberAccess	ds -> src_bpc		1020753	1					
ANR	1020807	Identifier	ds		1020753	0					
ANR	1020808	Identifier	src_bpc		1020753	1					
ANR	1020809	PrimaryExpression	7		1020753	1					
ANR	1020810	PrimaryExpression	3		1020753	1					
ANR	1020811	IdentifierDeclStatement	"int i , j ;"	2428:4:77698:77724	1020753	8	True				
ANR	1020812	IdentifierDecl	i		1020753	0					
ANR	1020813	IdentifierDeclType	int		1020753	0					
ANR	1020814	Identifier	i		1020753	1					
ANR	1020815	IdentifierDecl	j		1020753	1					
ANR	1020816	IdentifierDeclType	int		1020753	0					
ANR	1020817	Identifier	j		1020753	1					
ANR	1020818	ExpressionStatement	"decode_factor ( factor , & upfactor , & downfactor )"	2430:4:77731:77776	1020753	9	True				
ANR	1020819	CallExpression	"decode_factor ( factor , & upfactor , & downfactor )"		1020753	0					
ANR	1020820	Callee	decode_factor		1020753	0					
ANR	1020821	Identifier	decode_factor		1020753	0					
ANR	1020822	ArgumentList	factor		1020753	1					
ANR	1020823	Argument	factor		1020753	0					
ANR	1020824	Identifier	factor		1020753	0					
ANR	1020825	Argument	& upfactor		1020753	1					
ANR	1020826	UnaryOperationExpression	& upfactor		1020753	0					
ANR	1020827	UnaryOperator	&		1020753	0					
ANR	1020828	Identifier	upfactor		1020753	1					
ANR	1020829	Argument	& downfactor		1020753	2					
ANR	1020830	UnaryOperationExpression	& downfactor		1020753	0					
ANR	1020831	UnaryOperator	&		1020753	0					
ANR	1020832	Identifier	downfactor		1020753	1					
ANR	1020833	ExpressionStatement	subrow = row % upfactor	2432:4:77783:77806	1020753	10	True				
ANR	1020834	AssignmentExpression	subrow = row % upfactor		1020753	0		=			
ANR	1020835	Identifier	subrow		1020753	0					
ANR	1020836	MultiplicativeExpression	row % upfactor		1020753	1		%			
ANR	1020837	Identifier	row		1020753	0					
ANR	1020838	Identifier	upfactor		1020753	1					
ANR	1020839	IfStatement	if ( subrow )		1020753	11					
ANR	1020840	Condition	subrow	2433:8:77816:77821	1020753	0	True				
ANR	1020841	Identifier	subrow		1020753	0					
ANR	1020842	CompoundStatement		15:16:464:464	1020753	1					
ANR	1020843	ForStatement	for ( plane = 0 ; plane < ds -> num_planes ; plane ++ )		1020753	0					
ANR	1020844	ForInit	plane = 0 ;	2435:13:77901:77908	1020753	0	True				
ANR	1020845	AssignmentExpression	plane = 0		1020753	0		=			
ANR	1020846	Identifier	plane		1020753	0					
ANR	1020847	PrimaryExpression	0		1020753	1					
ANR	1020848	Condition	plane < ds -> num_planes	2435:22:77910:77931	1020753	1	True				
ANR	1020849	RelationalExpression	plane < ds -> num_planes		1020753	0		<			
ANR	1020850	Identifier	plane		1020753	0					
ANR	1020851	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1020852	Identifier	ds		1020753	0					
ANR	1020853	Identifier	num_planes		1020753	1					
ANR	1020854	PostIncDecOperationExpression	plane ++	2435:46:77934:77940	1020753	2	True				
ANR	1020855	Identifier	plane		1020753	0					
ANR	1020856	IncDec	++		1020753	1					
ANR	1020857	ExpressionStatement	params -> data [ plane ] = ds -> scaled_data + ( upfactor * plane + subrow ) * ds -> scaled_span	2436:12:77955:78040	1020753	3	True				
ANR	1020858	AssignmentExpression	params -> data [ plane ] = ds -> scaled_data + ( upfactor * plane + subrow ) * ds -> scaled_span		1020753	0		=			
ANR	1020859	ArrayIndexing	params -> data [ plane ]		1020753	0					
ANR	1020860	PtrMemberAccess	params -> data		1020753	0					
ANR	1020861	Identifier	params		1020753	0					
ANR	1020862	Identifier	data		1020753	1					
ANR	1020863	Identifier	plane		1020753	1					
ANR	1020864	AdditiveExpression	ds -> scaled_data + ( upfactor * plane + subrow ) * ds -> scaled_span		1020753	1		+			
ANR	1020865	PtrMemberAccess	ds -> scaled_data		1020753	0					
ANR	1020866	Identifier	ds		1020753	0					
ANR	1020867	Identifier	scaled_data		1020753	1					
ANR	1020868	MultiplicativeExpression	( upfactor * plane + subrow ) * ds -> scaled_span		1020753	1		*			
ANR	1020869	AdditiveExpression	upfactor * plane + subrow		1020753	0		+			
ANR	1020870	MultiplicativeExpression	upfactor * plane		1020753	0		*			
ANR	1020871	Identifier	upfactor		1020753	0					
ANR	1020872	Identifier	plane		1020753	1					
ANR	1020873	Identifier	subrow		1020753	1					
ANR	1020874	PtrMemberAccess	ds -> scaled_span		1020753	1					
ANR	1020875	Identifier	ds		1020753	0					
ANR	1020876	Identifier	scaled_span		1020753	1					
ANR	1020877	ReturnStatement	return 0 ;	2437:8:78050:78058	1020753	1	True				
ANR	1020878	PrimaryExpression	0		1020753	0					
ANR	1020879	ExpressionStatement	rect . p . x = 0	2440:4:78071:78083	1020753	12	True				
ANR	1020880	AssignmentExpression	rect . p . x = 0		1020753	0		=			
ANR	1020881	MemberAccess	rect . p . x		1020753	0					
ANR	1020882	MemberAccess	rect . p		1020753	0					
ANR	1020883	Identifier	rect		1020753	0					
ANR	1020884	Identifier	p		1020753	1					
ANR	1020885	Identifier	x		1020753	1					
ANR	1020886	PrimaryExpression	0		1020753	1					
ANR	1020887	ExpressionStatement	rect . p . y = ( row / upfactor ) * downfactor	2441:4:78089:78127	1020753	13	True				
ANR	1020888	AssignmentExpression	rect . p . y = ( row / upfactor ) * downfactor		1020753	0		=			
ANR	1020889	MemberAccess	rect . p . y		1020753	0					
ANR	1020890	MemberAccess	rect . p		1020753	0					
ANR	1020891	Identifier	rect		1020753	0					
ANR	1020892	Identifier	p		1020753	1					
ANR	1020893	Identifier	y		1020753	1					
ANR	1020894	MultiplicativeExpression	( row / upfactor ) * downfactor		1020753	1		*			
ANR	1020895	MultiplicativeExpression	row / upfactor		1020753	0		/			
ANR	1020896	Identifier	row		1020753	0					
ANR	1020897	Identifier	upfactor		1020753	1					
ANR	1020898	Identifier	downfactor		1020753	1					
ANR	1020899	ExpressionStatement	rect . q . x = ds -> dev -> width	2442:4:78133:78158	1020753	14	True				
ANR	1020900	AssignmentExpression	rect . q . x = ds -> dev -> width		1020753	0		=			
ANR	1020901	MemberAccess	rect . q . x		1020753	0					
ANR	1020902	MemberAccess	rect . q		1020753	0					
ANR	1020903	Identifier	rect		1020753	0					
ANR	1020904	Identifier	q		1020753	1					
ANR	1020905	Identifier	x		1020753	1					
ANR	1020906	PtrMemberAccess	ds -> dev -> width		1020753	1					
ANR	1020907	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1020908	Identifier	ds		1020753	0					
ANR	1020909	Identifier	dev		1020753	1					
ANR	1020910	Identifier	width		1020753	1					
ANR	1020911	ExpressionStatement	rect . q . y = ( ( row / upfactor ) + 1 ) * downfactor	2443:4:78164:78208	1020753	15	True				
ANR	1020912	AssignmentExpression	rect . q . y = ( ( row / upfactor ) + 1 ) * downfactor		1020753	0		=			
ANR	1020913	MemberAccess	rect . q . y		1020753	0					
ANR	1020914	MemberAccess	rect . q		1020753	0					
ANR	1020915	Identifier	rect		1020753	0					
ANR	1020916	Identifier	q		1020753	1					
ANR	1020917	Identifier	y		1020753	1					
ANR	1020918	MultiplicativeExpression	( ( row / upfactor ) + 1 ) * downfactor		1020753	1		*			
ANR	1020919	AdditiveExpression	( row / upfactor ) + 1		1020753	0		+			
ANR	1020920	MultiplicativeExpression	row / upfactor		1020753	0		/			
ANR	1020921	Identifier	row		1020753	0					
ANR	1020922	Identifier	upfactor		1020753	1					
ANR	1020923	PrimaryExpression	1		1020753	1					
ANR	1020924	Identifier	downfactor		1020753	1					
ANR	1020925	IfStatement	if ( ds -> down_core == NULL && ds -> claptrap == NULL )		1020753	16					
ANR	1020926	Condition	ds -> down_core == NULL && ds -> claptrap == NULL	2446:8:78255:78299	1020753	0	True				
ANR	1020927	AndExpression	ds -> down_core == NULL && ds -> claptrap == NULL		1020753	0		&&			
ANR	1020928	EqualityExpression	ds -> down_core == NULL		1020753	0		==			
ANR	1020929	PtrMemberAccess	ds -> down_core		1020753	0					
ANR	1020930	Identifier	ds		1020753	0					
ANR	1020931	Identifier	down_core		1020753	1					
ANR	1020932	Identifier	NULL		1020753	1					
ANR	1020933	EqualityExpression	ds -> claptrap == NULL		1020753	1		==			
ANR	1020934	PtrMemberAccess	ds -> claptrap		1020753	0					
ANR	1020935	Identifier	ds		1020753	0					
ANR	1020936	Identifier	claptrap		1020753	1					
ANR	1020937	Identifier	NULL		1020753	1					
ANR	1020938	CompoundStatement		29:8:952:978	1020753	1					
ANR	1020939	IdentifierDeclStatement	gs_get_bits_params_t saved ;	2447:8:78312:78338	1020753	0	True				
ANR	1020940	IdentifierDecl	saved		1020753	0					
ANR	1020941	IdentifierDeclType	gs_get_bits_params_t		1020753	0					
ANR	1020942	Identifier	saved		1020753	1					
ANR	1020943	IfStatement	if ( ds -> apply_cm )		1020753	1					
ANR	1020944	Condition	ds -> apply_cm	2448:12:78352:78363	1020753	0	True				
ANR	1020945	PtrMemberAccess	ds -> apply_cm		1020753	0					
ANR	1020946	Identifier	ds		1020753	0					
ANR	1020947	Identifier	apply_cm		1020753	1					
ANR	1020948	CompoundStatement		30:26:1006:1006	1020753	1					
ANR	1020949	ExpressionStatement	saved = * params	2451:12:78497:78512	1020753	0	True				
ANR	1020950	AssignmentExpression	saved = * params		1020753	0		=			
ANR	1020951	Identifier	saved		1020753	0					
ANR	1020952	UnaryOperationExpression	* params		1020753	1					
ANR	1020953	UnaryOperator	*		1020753	0					
ANR	1020954	Identifier	params		1020753	1					
ANR	1020955	ForStatement	for ( i = 0 ; i < ds -> num_planes ; i ++ )		1020753	1					
ANR	1020956	ForInit	i = 0 ;	2452:17:78531:78536	1020753	0	True				
ANR	1020957	AssignmentExpression	i = 0		1020753	0		=			
ANR	1020958	Identifier	i		1020753	0					
ANR	1020959	PrimaryExpression	0		1020753	1					
ANR	1020960	Condition	i < ds -> num_planes	2452:24:78538:78555	1020753	1	True				
ANR	1020961	RelationalExpression	i < ds -> num_planes		1020753	0		<			
ANR	1020962	Identifier	i		1020753	0					
ANR	1020963	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1020964	Identifier	ds		1020753	0					
ANR	1020965	Identifier	num_planes		1020753	1					
ANR	1020966	PostIncDecOperationExpression	i ++	2452:44:78558:78560	1020753	2	True				
ANR	1020967	Identifier	i		1020753	0					
ANR	1020968	IncDec	++		1020753	1					
ANR	1020969	ExpressionStatement	params -> data [ i ] = ds -> pre_cm [ i ]	2453:16:78579:78610	1020753	3	True				
ANR	1020970	AssignmentExpression	params -> data [ i ] = ds -> pre_cm [ i ]		1020753	0		=			
ANR	1020971	ArrayIndexing	params -> data [ i ]		1020753	0					
ANR	1020972	PtrMemberAccess	params -> data		1020753	0					
ANR	1020973	Identifier	params		1020753	0					
ANR	1020974	Identifier	data		1020753	1					
ANR	1020975	Identifier	i		1020753	1					
ANR	1020976	ArrayIndexing	ds -> pre_cm [ i ]		1020753	1					
ANR	1020977	PtrMemberAccess	ds -> pre_cm		1020753	0					
ANR	1020978	Identifier	ds		1020753	0					
ANR	1020979	Identifier	pre_cm		1020753	1					
ANR	1020980	Identifier	i		1020753	1					
ANR	1020981	ExpressionStatement	params -> options |= GB_RETURN_POINTER	2454:12:78624:78660	1020753	2	True				
ANR	1020982	AssignmentExpression	params -> options |= GB_RETURN_POINTER		1020753	0		|=			
ANR	1020983	PtrMemberAccess	params -> options		1020753	0					
ANR	1020984	Identifier	params		1020753	0					
ANR	1020985	Identifier	options		1020753	1					
ANR	1020986	Identifier	GB_RETURN_POINTER		1020753	1					
ANR	1020987	ExpressionStatement	"code = ( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , params , NULL )"	2456:8:78680:78757	1020753	2	True				
ANR	1020988	AssignmentExpression	"code = ( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , params , NULL )"		1020753	0		=			
ANR	1020989	Identifier	code		1020753	0					
ANR	1020990	CallExpression	"( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , params , NULL )"		1020753	1					
ANR	1020991	Callee	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1020753	0					
ANR	1020992	UnaryOperationExpression	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1020753	0					
ANR	1020993	UnaryOperator	*		1020753	0					
ANR	1020994	CallExpression	"dev_proc ( ds -> dev , get_bits_rectangle )"		1020753	1					
ANR	1020995	Callee	dev_proc		1020753	0					
ANR	1020996	Identifier	dev_proc		1020753	0					
ANR	1020997	ArgumentList	ds -> dev		1020753	1					
ANR	1020998	Argument	ds -> dev		1020753	0					
ANR	1020999	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1021000	Identifier	ds		1020753	0					
ANR	1021001	Identifier	dev		1020753	1					
ANR	1021002	Argument	get_bits_rectangle		1020753	1					
ANR	1021003	Identifier	get_bits_rectangle		1020753	0					
ANR	1021004	ArgumentList	ds -> dev		1020753	1					
ANR	1021005	Argument	ds -> dev		1020753	0					
ANR	1021006	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1021007	Identifier	ds		1020753	0					
ANR	1021008	Identifier	dev		1020753	1					
ANR	1021009	Argument	& rect		1020753	1					
ANR	1021010	UnaryOperationExpression	& rect		1020753	0					
ANR	1021011	UnaryOperator	&		1020753	0					
ANR	1021012	Identifier	rect		1020753	1					
ANR	1021013	Argument	params		1020753	2					
ANR	1021014	Identifier	params		1020753	0					
ANR	1021015	Argument	NULL		1020753	3					
ANR	1021016	Identifier	NULL		1020753	0					
ANR	1021017	IfStatement	if ( code < 0 )		1020753	3					
ANR	1021018	Condition	code < 0	2457:12:78771:78778	1020753	0	True				
ANR	1021019	RelationalExpression	code < 0		1020753	0		<			
ANR	1021020	Identifier	code		1020753	0					
ANR	1021021	PrimaryExpression	0		1020753	1					
ANR	1021022	ReturnStatement	return code ;	2458:12:78793:78804	1020753	1	True				
ANR	1021023	Identifier	code		1020753	0					
ANR	1021024	IfStatement	if ( ds -> apply_cm )		1020753	4					
ANR	1021025	Condition	ds -> apply_cm	2459:12:78818:78829	1020753	0	True				
ANR	1021026	PtrMemberAccess	ds -> apply_cm		1020753	0					
ANR	1021027	Identifier	ds		1020753	0					
ANR	1021028	Identifier	apply_cm		1020753	1					
ANR	1021029	CompoundStatement		42:12:1486:1499	1020753	1					
ANR	1021030	IdentifierDeclStatement	byte * * buffer ;	2460:12:78846:78859	1020753	0	True				
ANR	1021031	IdentifierDecl	* * buffer		1020753	0					
ANR	1021032	IdentifierDeclType	byte * *		1020753	0					
ANR	1021033	Identifier	buffer		1020753	1					
ANR	1021034	IfStatement	if ( saved . options & GB_RETURN_COPY )		1020753	1					
ANR	1021035	Condition	saved . options & GB_RETURN_COPY	2461:16:78877:78906	1020753	0	True				
ANR	1021036	BitAndExpression	saved . options & GB_RETURN_COPY		1020753	0		&			
ANR	1021037	MemberAccess	saved . options		1020753	0					
ANR	1021038	Identifier	saved		1020753	0					
ANR	1021039	Identifier	options		1020753	1					
ANR	1021040	Identifier	GB_RETURN_COPY		1020753	1					
ANR	1021041	CompoundStatement		43:48:1549:1549	1020753	1					
ANR	1021042	ExpressionStatement	params -> options &= ~GB_RETURN_POINTER	2463:16:79009:79046	1020753	0	True				
ANR	1021043	AssignmentExpression	params -> options &= ~GB_RETURN_POINTER		1020753	0		&=			
ANR	1021044	PtrMemberAccess	params -> options		1020753	0					
ANR	1021045	Identifier	params		1020753	0					
ANR	1021046	Identifier	options		1020753	1					
ANR	1021047	Identifier	~GB_RETURN_POINTER		1020753	1					
ANR	1021048	ExpressionStatement	buffer = saved . data	2464:16:79064:79083	1020753	1	True				
ANR	1021049	AssignmentExpression	buffer = saved . data		1020753	0		=			
ANR	1021050	Identifier	buffer		1020753	0					
ANR	1021051	MemberAccess	saved . data		1020753	1					
ANR	1021052	Identifier	saved		1020753	0					
ANR	1021053	Identifier	data		1020753	1					
ANR	1021054	ElseStatement	else		1020753	0					
ANR	1021055	ExpressionStatement	buffer = ds -> pre_cm	2466:16:79120:79139	1020753	0	True				
ANR	1021056	AssignmentExpression	buffer = ds -> pre_cm		1020753	0		=			
ANR	1021057	Identifier	buffer		1020753	0					
ANR	1021058	PtrMemberAccess	ds -> pre_cm		1020753	1					
ANR	1021059	Identifier	ds		1020753	0					
ANR	1021060	Identifier	pre_cm		1020753	1					
ANR	1021061	ExpressionStatement	"code = ds -> apply_cm ( ds -> apply_cm_arg , params -> data , buffer , ds -> dev -> width , rect . q . y - rect . p . y , params -> raster )"	2467:12:79153:79265	1020753	2	True				
ANR	1021062	AssignmentExpression	"code = ds -> apply_cm ( ds -> apply_cm_arg , params -> data , buffer , ds -> dev -> width , rect . q . y - rect . p . y , params -> raster )"		1020753	0		=			
ANR	1021063	Identifier	code		1020753	0					
ANR	1021064	CallExpression	"ds -> apply_cm ( ds -> apply_cm_arg , params -> data , buffer , ds -> dev -> width , rect . q . y - rect . p . y , params -> raster )"		1020753	1					
ANR	1021065	Callee	ds -> apply_cm		1020753	0					
ANR	1021066	PtrMemberAccess	ds -> apply_cm		1020753	0					
ANR	1021067	Identifier	ds		1020753	0					
ANR	1021068	Identifier	apply_cm		1020753	1					
ANR	1021069	ArgumentList	ds -> apply_cm_arg		1020753	1					
ANR	1021070	Argument	ds -> apply_cm_arg		1020753	0					
ANR	1021071	PtrMemberAccess	ds -> apply_cm_arg		1020753	0					
ANR	1021072	Identifier	ds		1020753	0					
ANR	1021073	Identifier	apply_cm_arg		1020753	1					
ANR	1021074	Argument	params -> data		1020753	1					
ANR	1021075	PtrMemberAccess	params -> data		1020753	0					
ANR	1021076	Identifier	params		1020753	0					
ANR	1021077	Identifier	data		1020753	1					
ANR	1021078	Argument	buffer		1020753	2					
ANR	1021079	Identifier	buffer		1020753	0					
ANR	1021080	Argument	ds -> dev -> width		1020753	3					
ANR	1021081	PtrMemberAccess	ds -> dev -> width		1020753	0					
ANR	1021082	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1021083	Identifier	ds		1020753	0					
ANR	1021084	Identifier	dev		1020753	1					
ANR	1021085	Identifier	width		1020753	1					
ANR	1021086	Argument	rect . q . y - rect . p . y		1020753	4					
ANR	1021087	AdditiveExpression	rect . q . y - rect . p . y		1020753	0		-			
ANR	1021088	MemberAccess	rect . q . y		1020753	0					
ANR	1021089	MemberAccess	rect . q		1020753	0					
ANR	1021090	Identifier	rect		1020753	0					
ANR	1021091	Identifier	q		1020753	1					
ANR	1021092	Identifier	y		1020753	1					
ANR	1021093	MemberAccess	rect . p . y		1020753	1					
ANR	1021094	MemberAccess	rect . p		1020753	0					
ANR	1021095	Identifier	rect		1020753	0					
ANR	1021096	Identifier	p		1020753	1					
ANR	1021097	Identifier	y		1020753	1					
ANR	1021098	Argument	params -> raster		1020753	5					
ANR	1021099	PtrMemberAccess	params -> raster		1020753	0					
ANR	1021100	Identifier	params		1020753	0					
ANR	1021101	Identifier	raster		1020753	1					
ANR	1021102	IfStatement	if ( ( saved . options & GB_RETURN_COPY ) == 0 )		1020753	3					
ANR	1021103	Condition	( saved . options & GB_RETURN_COPY ) == 0	2468:16:79283:79319	1020753	0	True				
ANR	1021104	EqualityExpression	( saved . options & GB_RETURN_COPY ) == 0		1020753	0		==			
ANR	1021105	BitAndExpression	saved . options & GB_RETURN_COPY		1020753	0		&			
ANR	1021106	MemberAccess	saved . options		1020753	0					
ANR	1021107	Identifier	saved		1020753	0					
ANR	1021108	Identifier	options		1020753	1					
ANR	1021109	Identifier	GB_RETURN_COPY		1020753	1					
ANR	1021110	PrimaryExpression	0		1020753	1					
ANR	1021111	ForStatement	for ( i = 0 ; i < ds -> num_planes ; i ++ )		1020753	1					
ANR	1021112	ForInit	i = 0 ;	2469:21:79343:79348	1020753	0	True				
ANR	1021113	AssignmentExpression	i = 0		1020753	0		=			
ANR	1021114	Identifier	i		1020753	0					
ANR	1021115	PrimaryExpression	0		1020753	1					
ANR	1021116	Condition	i < ds -> num_planes	2469:28:79350:79367	1020753	1	True				
ANR	1021117	RelationalExpression	i < ds -> num_planes		1020753	0		<			
ANR	1021118	Identifier	i		1020753	0					
ANR	1021119	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1021120	Identifier	ds		1020753	0					
ANR	1021121	Identifier	num_planes		1020753	1					
ANR	1021122	PostIncDecOperationExpression	i ++	2469:48:79370:79372	1020753	2	True				
ANR	1021123	Identifier	i		1020753	0					
ANR	1021124	IncDec	++		1020753	1					
ANR	1021125	ExpressionStatement	params -> data [ i ] = buffer [ i ]	2470:20:79395:79422	1020753	3	True				
ANR	1021126	AssignmentExpression	params -> data [ i ] = buffer [ i ]		1020753	0		=			
ANR	1021127	ArrayIndexing	params -> data [ i ]		1020753	0					
ANR	1021128	PtrMemberAccess	params -> data		1020753	0					
ANR	1021129	Identifier	params		1020753	0					
ANR	1021130	Identifier	data		1020753	1					
ANR	1021131	Identifier	i		1020753	1					
ANR	1021132	ArrayIndexing	buffer [ i ]		1020753	1					
ANR	1021133	Identifier	buffer		1020753	0					
ANR	1021134	Identifier	i		1020753	1					
ANR	1021135	ReturnStatement	return code ;	2472:8:79442:79453	1020753	5	True				
ANR	1021136	Identifier	code		1020753	0					
ANR	1021137	ExpressionStatement	"memcpy ( & params2 , & ds -> params , sizeof ( params2 ) )"	2477:4:79557:79603	1020753	17	True				
ANR	1021138	CallExpression	"memcpy ( & params2 , & ds -> params , sizeof ( params2 ) )"		1020753	0					
ANR	1021139	Callee	memcpy		1020753	0					
ANR	1021140	Identifier	memcpy		1020753	0					
ANR	1021141	ArgumentList	& params2		1020753	1					
ANR	1021142	Argument	& params2		1020753	0					
ANR	1021143	UnaryOperationExpression	& params2		1020753	0					
ANR	1021144	UnaryOperator	&		1020753	0					
ANR	1021145	Identifier	params2		1020753	1					
ANR	1021146	Argument	& ds -> params		1020753	1					
ANR	1021147	UnaryOperationExpression	& ds -> params		1020753	0					
ANR	1021148	UnaryOperator	&		1020753	0					
ANR	1021149	PtrMemberAccess	ds -> params		1020753	1					
ANR	1021150	Identifier	ds		1020753	0					
ANR	1021151	Identifier	params		1020753	1					
ANR	1021152	Argument	sizeof ( params2 )		1020753	2					
ANR	1021153	SizeofExpression	sizeof ( params2 )		1020753	0					
ANR	1021154	Sizeof	sizeof		1020753	0					
ANR	1021155	SizeofOperand	params2		1020753	1					
ANR	1021156	ForStatement	for ( i = 0 ; i < ds -> num_planes ; i ++ )		1020753	18					
ANR	1021157	ForInit	i = 0 ;	2478:9:79614:79619	1020753	0	True				
ANR	1021158	AssignmentExpression	i = 0		1020753	0		=			
ANR	1021159	Identifier	i		1020753	0					
ANR	1021160	PrimaryExpression	0		1020753	1					
ANR	1021161	Condition	i < ds -> num_planes	2478:16:79621:79638	1020753	1	True				
ANR	1021162	RelationalExpression	i < ds -> num_planes		1020753	0		<			
ANR	1021163	Identifier	i		1020753	0					
ANR	1021164	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1021165	Identifier	ds		1020753	0					
ANR	1021166	Identifier	num_planes		1020753	1					
ANR	1021167	PostIncDecOperationExpression	i ++	2478:36:79641:79643	1020753	2	True				
ANR	1021168	Identifier	i		1020753	0					
ANR	1021169	IncDec	++		1020753	1					
ANR	1021170	ExpressionStatement	params2 . data [ i ] = ds -> pre_cm [ i ]	2479:9:79655:79686	1020753	3	True				
ANR	1021171	AssignmentExpression	params2 . data [ i ] = ds -> pre_cm [ i ]		1020753	0		=			
ANR	1021172	ArrayIndexing	params2 . data [ i ]		1020753	0					
ANR	1021173	MemberAccess	params2 . data		1020753	0					
ANR	1021174	Identifier	params2		1020753	0					
ANR	1021175	Identifier	data		1020753	1					
ANR	1021176	Identifier	i		1020753	1					
ANR	1021177	ArrayIndexing	ds -> pre_cm [ i ]		1020753	1					
ANR	1021178	PtrMemberAccess	ds -> pre_cm		1020753	0					
ANR	1021179	Identifier	ds		1020753	0					
ANR	1021180	Identifier	pre_cm		1020753	1					
ANR	1021181	Identifier	i		1020753	1					
ANR	1021182	IfStatement	if ( ds -> claptrap )		1020753	19					
ANR	1021183	Condition	ds -> claptrap	2482:8:79741:79752	1020753	0	True				
ANR	1021184	PtrMemberAccess	ds -> claptrap		1020753	0					
ANR	1021185	Identifier	ds		1020753	0					
ANR	1021186	Identifier	claptrap		1020753	1					
ANR	1021187	ExpressionStatement	code = gs_error_rangecheck	2483:8:79763:79789	1020753	1	True				
ANR	1021188	AssignmentExpression	code = gs_error_rangecheck		1020753	0		=			
ANR	1021189	Identifier	code		1020753	0					
ANR	1021190	Identifier	gs_error_rangecheck		1020753	1					
ANR	1021191	ElseStatement	else		1020753	0					
ANR	1021192	ExpressionStatement	"code = ( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , & params2 , NULL )"	2485:8:79857:79936	1020753	0	True				
ANR	1021193	AssignmentExpression	"code = ( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , & params2 , NULL )"		1020753	0		=			
ANR	1021194	Identifier	code		1020753	0					
ANR	1021195	CallExpression	"( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , & params2 , NULL )"		1020753	1					
ANR	1021196	Callee	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1020753	0					
ANR	1021197	UnaryOperationExpression	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1020753	0					
ANR	1021198	UnaryOperator	*		1020753	0					
ANR	1021199	CallExpression	"dev_proc ( ds -> dev , get_bits_rectangle )"		1020753	1					
ANR	1021200	Callee	dev_proc		1020753	0					
ANR	1021201	Identifier	dev_proc		1020753	0					
ANR	1021202	ArgumentList	ds -> dev		1020753	1					
ANR	1021203	Argument	ds -> dev		1020753	0					
ANR	1021204	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1021205	Identifier	ds		1020753	0					
ANR	1021206	Identifier	dev		1020753	1					
ANR	1021207	Argument	get_bits_rectangle		1020753	1					
ANR	1021208	Identifier	get_bits_rectangle		1020753	0					
ANR	1021209	ArgumentList	ds -> dev		1020753	1					
ANR	1021210	Argument	ds -> dev		1020753	0					
ANR	1021211	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1021212	Identifier	ds		1020753	0					
ANR	1021213	Identifier	dev		1020753	1					
ANR	1021214	Argument	& rect		1020753	1					
ANR	1021215	UnaryOperationExpression	& rect		1020753	0					
ANR	1021216	UnaryOperator	&		1020753	0					
ANR	1021217	Identifier	rect		1020753	1					
ANR	1021218	Argument	& params2		1020753	2					
ANR	1021219	UnaryOperationExpression	& params2		1020753	0					
ANR	1021220	UnaryOperator	&		1020753	0					
ANR	1021221	Identifier	params2		1020753	1					
ANR	1021222	Argument	NULL		1020753	3					
ANR	1021223	Identifier	NULL		1020753	0					
ANR	1021224	IfStatement	if ( code == gs_error_rangecheck )		1020753	20					
ANR	1021225	Condition	code == gs_error_rangecheck	2486:8:79946:79972	1020753	0	True				
ANR	1021226	EqualityExpression	code == gs_error_rangecheck		1020753	0		==			
ANR	1021227	Identifier	code		1020753	0					
ANR	1021228	Identifier	gs_error_rangecheck		1020753	1					
ANR	1021229	CompoundStatement		68:37:2615:2615	1020753	1					
ANR	1021230	ForStatement	for ( i = 0 ; i < downfactor ; i ++ )		1020753	0					
ANR	1021231	ForInit	i = 0 ;	2491:13:80254:80259	1020753	0	True				
ANR	1021232	AssignmentExpression	i = 0		1020753	0		=			
ANR	1021233	Identifier	i		1020753	0					
ANR	1021234	PrimaryExpression	0		1020753	1					
ANR	1021235	Condition	i < downfactor	2491:20:80261:80274	1020753	1	True				
ANR	1021236	RelationalExpression	i < downfactor		1020753	0		<			
ANR	1021237	Identifier	i		1020753	0					
ANR	1021238	Identifier	downfactor		1020753	1					
ANR	1021239	PostIncDecOperationExpression	i ++	2491:36:80277:80279	1020753	2	True				
ANR	1021240	Identifier	i		1020753	0					
ANR	1021241	IncDec	++		1020753	1					
ANR	1021242	CompoundStatement		73:41:2922:2922	1020753	3					
ANR	1021243	ExpressionStatement	rect . q . y = rect . p . y + 1	2492:12:80296:80317	1020753	0	True				
ANR	1021244	AssignmentExpression	rect . q . y = rect . p . y + 1		1020753	0		=			
ANR	1021245	MemberAccess	rect . q . y		1020753	0					
ANR	1021246	MemberAccess	rect . q		1020753	0					
ANR	1021247	Identifier	rect		1020753	0					
ANR	1021248	Identifier	q		1020753	1					
ANR	1021249	Identifier	y		1020753	1					
ANR	1021250	AdditiveExpression	rect . p . y + 1		1020753	1		+			
ANR	1021251	MemberAccess	rect . p . y		1020753	0					
ANR	1021252	MemberAccess	rect . p		1020753	0					
ANR	1021253	Identifier	rect		1020753	0					
ANR	1021254	Identifier	p		1020753	1					
ANR	1021255	Identifier	y		1020753	1					
ANR	1021256	PrimaryExpression	1		1020753	1					
ANR	1021257	IfStatement	if ( rect . q . y > ds -> dev -> height )		1020753	1					
ANR	1021258	Condition	rect . q . y > ds -> dev -> height	2493:16:80335:80360	1020753	0	True				
ANR	1021259	RelationalExpression	rect . q . y > ds -> dev -> height		1020753	0		>			
ANR	1021260	MemberAccess	rect . q . y		1020753	0					
ANR	1021261	MemberAccess	rect . q		1020753	0					
ANR	1021262	Identifier	rect		1020753	0					
ANR	1021263	Identifier	q		1020753	1					
ANR	1021264	Identifier	y		1020753	1					
ANR	1021265	PtrMemberAccess	ds -> dev -> height		1020753	1					
ANR	1021266	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1021267	Identifier	ds		1020753	0					
ANR	1021268	Identifier	dev		1020753	1					
ANR	1021269	Identifier	height		1020753	1					
ANR	1021270	BreakStatement	break ;	2494:16:80379:80384	1020753	1	True				
ANR	1021271	ExpressionStatement	"memcpy ( & params2 , & ds -> params , sizeof ( params2 ) )"	2495:12:80398:80444	1020753	2	True				
ANR	1021272	CallExpression	"memcpy ( & params2 , & ds -> params , sizeof ( params2 ) )"		1020753	0					
ANR	1021273	Callee	memcpy		1020753	0					
ANR	1021274	Identifier	memcpy		1020753	0					
ANR	1021275	ArgumentList	& params2		1020753	1					
ANR	1021276	Argument	& params2		1020753	0					
ANR	1021277	UnaryOperationExpression	& params2		1020753	0					
ANR	1021278	UnaryOperator	&		1020753	0					
ANR	1021279	Identifier	params2		1020753	1					
ANR	1021280	Argument	& ds -> params		1020753	1					
ANR	1021281	UnaryOperationExpression	& ds -> params		1020753	0					
ANR	1021282	UnaryOperator	&		1020753	0					
ANR	1021283	PtrMemberAccess	ds -> params		1020753	1					
ANR	1021284	Identifier	ds		1020753	0					
ANR	1021285	Identifier	params		1020753	1					
ANR	1021286	Argument	sizeof ( params2 )		1020753	2					
ANR	1021287	SizeofExpression	sizeof ( params2 )		1020753	0					
ANR	1021288	Sizeof	sizeof		1020753	0					
ANR	1021289	SizeofOperand	params2		1020753	1					
ANR	1021290	ForStatement	for ( j = 0 ; j < ds -> num_planes ; j ++ )		1020753	3					
ANR	1021291	ForInit	j = 0 ;	2496:17:80463:80468	1020753	0	True				
ANR	1021292	AssignmentExpression	j = 0		1020753	0		=			
ANR	1021293	Identifier	j		1020753	0					
ANR	1021294	PrimaryExpression	0		1020753	1					
ANR	1021295	Condition	j < ds -> num_planes	2496:24:80470:80487	1020753	1	True				
ANR	1021296	RelationalExpression	j < ds -> num_planes		1020753	0		<			
ANR	1021297	Identifier	j		1020753	0					
ANR	1021298	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1021299	Identifier	ds		1020753	0					
ANR	1021300	Identifier	num_planes		1020753	1					
ANR	1021301	PostIncDecOperationExpression	j ++	2496:44:80490:80492	1020753	2	True				
ANR	1021302	Identifier	j		1020753	0					
ANR	1021303	IncDec	++		1020753	1					
ANR	1021304	ExpressionStatement	params2 . data [ j ] = ds -> pre_cm [ j ] + i * ds -> span	2497:16:80511:80557	1020753	3	True				
ANR	1021305	AssignmentExpression	params2 . data [ j ] = ds -> pre_cm [ j ] + i * ds -> span		1020753	0		=			
ANR	1021306	ArrayIndexing	params2 . data [ j ]		1020753	0					
ANR	1021307	MemberAccess	params2 . data		1020753	0					
ANR	1021308	Identifier	params2		1020753	0					
ANR	1021309	Identifier	data		1020753	1					
ANR	1021310	Identifier	j		1020753	1					
ANR	1021311	AdditiveExpression	ds -> pre_cm [ j ] + i * ds -> span		1020753	1		+			
ANR	1021312	ArrayIndexing	ds -> pre_cm [ j ]		1020753	0					
ANR	1021313	PtrMemberAccess	ds -> pre_cm		1020753	0					
ANR	1021314	Identifier	ds		1020753	0					
ANR	1021315	Identifier	pre_cm		1020753	1					
ANR	1021316	Identifier	j		1020753	1					
ANR	1021317	MultiplicativeExpression	i * ds -> span		1020753	1		*			
ANR	1021318	Identifier	i		1020753	0					
ANR	1021319	PtrMemberAccess	ds -> span		1020753	1					
ANR	1021320	Identifier	ds		1020753	0					
ANR	1021321	Identifier	span		1020753	1					
ANR	1021322	IfStatement	if ( ds -> claptrap )		1020753	4					
ANR	1021323	Condition	ds -> claptrap	2498:16:80575:80586	1020753	0	True				
ANR	1021324	PtrMemberAccess	ds -> claptrap		1020753	0					
ANR	1021325	Identifier	ds		1020753	0					
ANR	1021326	Identifier	claptrap		1020753	1					
ANR	1021327	CompoundStatement		80:30:3229:3229	1020753	1					
ANR	1021328	ExpressionStatement	ds -> claptrap_params = & params2	2499:16:80607:80637	1020753	0	True				
ANR	1021329	AssignmentExpression	ds -> claptrap_params = & params2		1020753	0		=			
ANR	1021330	PtrMemberAccess	ds -> claptrap_params		1020753	0					
ANR	1021331	Identifier	ds		1020753	0					
ANR	1021332	Identifier	claptrap_params		1020753	1					
ANR	1021333	UnaryOperationExpression	& params2		1020753	1					
ANR	1021334	UnaryOperator	&		1020753	0					
ANR	1021335	Identifier	params2		1020753	1					
ANR	1021336	ExpressionStatement	"code = ClapTrap_GetLinePlanar ( ds -> claptrap , & params2 . data [ 0 ] )"	2500:16:80655:80716	1020753	1	True				
ANR	1021337	AssignmentExpression	"code = ClapTrap_GetLinePlanar ( ds -> claptrap , & params2 . data [ 0 ] )"		1020753	0		=			
ANR	1021338	Identifier	code		1020753	0					
ANR	1021339	CallExpression	"ClapTrap_GetLinePlanar ( ds -> claptrap , & params2 . data [ 0 ] )"		1020753	1					
ANR	1021340	Callee	ClapTrap_GetLinePlanar		1020753	0					
ANR	1021341	Identifier	ClapTrap_GetLinePlanar		1020753	0					
ANR	1021342	ArgumentList	ds -> claptrap		1020753	1					
ANR	1021343	Argument	ds -> claptrap		1020753	0					
ANR	1021344	PtrMemberAccess	ds -> claptrap		1020753	0					
ANR	1021345	Identifier	ds		1020753	0					
ANR	1021346	Identifier	claptrap		1020753	1					
ANR	1021347	Argument	& params2 . data [ 0 ]		1020753	1					
ANR	1021348	UnaryOperationExpression	& params2 . data [ 0 ]		1020753	0					
ANR	1021349	UnaryOperator	&		1020753	0					
ANR	1021350	ArrayIndexing	params2 . data [ 0 ]		1020753	1					
ANR	1021351	MemberAccess	params2 . data		1020753	0					
ANR	1021352	Identifier	params2		1020753	0					
ANR	1021353	Identifier	data		1020753	1					
ANR	1021354	PrimaryExpression	0		1020753	1					
ANR	1021355	ElseStatement	else		1020753	0					
ANR	1021356	CompoundStatement		83:19:3377:3377	1020753	0					
ANR	1021357	ExpressionStatement	params2 . options &= ~GB_RETURN_POINTER	2503:16:80799:80836	1020753	0	True				
ANR	1021358	AssignmentExpression	params2 . options &= ~GB_RETURN_POINTER		1020753	0		&=			
ANR	1021359	MemberAccess	params2 . options		1020753	0					
ANR	1021360	Identifier	params2		1020753	0					
ANR	1021361	Identifier	options		1020753	1					
ANR	1021362	Identifier	~GB_RETURN_POINTER		1020753	1					
ANR	1021363	ExpressionStatement	params2 . options |= GB_RETURN_COPY	2504:16:80854:80888	1020753	1	True				
ANR	1021364	AssignmentExpression	params2 . options |= GB_RETURN_COPY		1020753	0		|=			
ANR	1021365	MemberAccess	params2 . options		1020753	0					
ANR	1021366	Identifier	params2		1020753	0					
ANR	1021367	Identifier	options		1020753	1					
ANR	1021368	Identifier	GB_RETURN_COPY		1020753	1					
ANR	1021369	ExpressionStatement	"code = ( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , & params2 , NULL )"	2505:16:80906:80985	1020753	2	True				
ANR	1021370	AssignmentExpression	"code = ( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , & params2 , NULL )"		1020753	0		=			
ANR	1021371	Identifier	code		1020753	0					
ANR	1021372	CallExpression	"( * dev_proc ( ds -> dev , get_bits_rectangle ) ) ( ds -> dev , & rect , & params2 , NULL )"		1020753	1					
ANR	1021373	Callee	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1020753	0					
ANR	1021374	UnaryOperationExpression	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1020753	0					
ANR	1021375	UnaryOperator	*		1020753	0					
ANR	1021376	CallExpression	"dev_proc ( ds -> dev , get_bits_rectangle )"		1020753	1					
ANR	1021377	Callee	dev_proc		1020753	0					
ANR	1021378	Identifier	dev_proc		1020753	0					
ANR	1021379	ArgumentList	ds -> dev		1020753	1					
ANR	1021380	Argument	ds -> dev		1020753	0					
ANR	1021381	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1021382	Identifier	ds		1020753	0					
ANR	1021383	Identifier	dev		1020753	1					
ANR	1021384	Argument	get_bits_rectangle		1020753	1					
ANR	1021385	Identifier	get_bits_rectangle		1020753	0					
ANR	1021386	ArgumentList	ds -> dev		1020753	1					
ANR	1021387	Argument	ds -> dev		1020753	0					
ANR	1021388	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1021389	Identifier	ds		1020753	0					
ANR	1021390	Identifier	dev		1020753	1					
ANR	1021391	Argument	& rect		1020753	1					
ANR	1021392	UnaryOperationExpression	& rect		1020753	0					
ANR	1021393	UnaryOperator	&		1020753	0					
ANR	1021394	Identifier	rect		1020753	1					
ANR	1021395	Argument	& params2		1020753	2					
ANR	1021396	UnaryOperationExpression	& params2		1020753	0					
ANR	1021397	UnaryOperator	&		1020753	0					
ANR	1021398	Identifier	params2		1020753	1					
ANR	1021399	Argument	NULL		1020753	3					
ANR	1021400	Identifier	NULL		1020753	0					
ANR	1021401	IfStatement	if ( code < 0 )		1020753	5					
ANR	1021402	Condition	code < 0	2507:16:81017:81024	1020753	0	True				
ANR	1021403	RelationalExpression	code < 0		1020753	0		<			
ANR	1021404	Identifier	code		1020753	0					
ANR	1021405	PrimaryExpression	0		1020753	1					
ANR	1021406	BreakStatement	break ;	2508:16:81043:81048	1020753	1	True				
ANR	1021407	ExpressionStatement	rect . p . y ++	2509:12:81062:81072	1020753	6	True				
ANR	1021408	PostIncDecOperationExpression	rect . p . y ++		1020753	0					
ANR	1021409	MemberAccess	rect . p . y		1020753	0					
ANR	1021410	MemberAccess	rect . p		1020753	0					
ANR	1021411	Identifier	rect		1020753	0					
ANR	1021412	Identifier	p		1020753	1					
ANR	1021413	Identifier	y		1020753	1					
ANR	1021414	IncDec	++		1020753	1					
ANR	1021415	IfStatement	if ( i == 0 )		1020753	1					
ANR	1021416	Condition	i == 0	2511:12:81096:81101	1020753	0	True				
ANR	1021417	EqualityExpression	i == 0		1020753	0		==			
ANR	1021418	Identifier	i		1020753	0					
ANR	1021419	PrimaryExpression	0		1020753	1					
ANR	1021420	ReturnStatement	return code ;	2512:12:81116:81127	1020753	1	True				
ANR	1021421	Identifier	code		1020753	0					
ANR	1021422	ForStatement	for ( ; i < downfactor ; i ++ )		1020753	2					
ANR	1021423	Condition	i < downfactor	2515:14:81272:81285	1020753	0	True				
ANR	1021424	RelationalExpression	i < downfactor		1020753	0		<			
ANR	1021425	Identifier	i		1020753	0					
ANR	1021426	Identifier	downfactor		1020753	1					
ANR	1021427	PostIncDecOperationExpression	i ++	2515:30:81288:81290	1020753	1	True				
ANR	1021428	Identifier	i		1020753	0					
ANR	1021429	IncDec	++		1020753	1					
ANR	1021430	ForStatement	for ( j = 0 ; j < ds -> num_planes ; j ++ )		1020753	2					
ANR	1021431	ForInit	j = 0 ;	2516:17:81310:81315	1020753	0	True				
ANR	1021432	AssignmentExpression	j = 0		1020753	0		=			
ANR	1021433	Identifier	j		1020753	0					
ANR	1021434	PrimaryExpression	0		1020753	1					
ANR	1021435	Condition	j < ds -> num_planes	2516:24:81317:81334	1020753	1	True				
ANR	1021436	RelationalExpression	j < ds -> num_planes		1020753	0		<			
ANR	1021437	Identifier	j		1020753	0					
ANR	1021438	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1021439	Identifier	ds		1020753	0					
ANR	1021440	Identifier	num_planes		1020753	1					
ANR	1021441	PostIncDecOperationExpression	j ++	2516:44:81337:81339	1020753	2	True				
ANR	1021442	Identifier	j		1020753	0					
ANR	1021443	IncDec	++		1020753	1					
ANR	1021444	ExpressionStatement	"memcpy ( ds -> pre_cm [ j ] + i * ds -> span , ds -> pre_cm [ j ] + ( i - 1 ) * ds -> span , copy )"	2517:16:81358:81430	1020753	3	True				
ANR	1021445	CallExpression	"memcpy ( ds -> pre_cm [ j ] + i * ds -> span , ds -> pre_cm [ j ] + ( i - 1 ) * ds -> span , copy )"		1020753	0					
ANR	1021446	Callee	memcpy		1020753	0					
ANR	1021447	Identifier	memcpy		1020753	0					
ANR	1021448	ArgumentList	ds -> pre_cm [ j ] + i * ds -> span		1020753	1					
ANR	1021449	Argument	ds -> pre_cm [ j ] + i * ds -> span		1020753	0					
ANR	1021450	AdditiveExpression	ds -> pre_cm [ j ] + i * ds -> span		1020753	0		+			
ANR	1021451	ArrayIndexing	ds -> pre_cm [ j ]		1020753	0					
ANR	1021452	PtrMemberAccess	ds -> pre_cm		1020753	0					
ANR	1021453	Identifier	ds		1020753	0					
ANR	1021454	Identifier	pre_cm		1020753	1					
ANR	1021455	Identifier	j		1020753	1					
ANR	1021456	MultiplicativeExpression	i * ds -> span		1020753	1		*			
ANR	1021457	Identifier	i		1020753	0					
ANR	1021458	PtrMemberAccess	ds -> span		1020753	1					
ANR	1021459	Identifier	ds		1020753	0					
ANR	1021460	Identifier	span		1020753	1					
ANR	1021461	Argument	ds -> pre_cm [ j ] + ( i - 1 ) * ds -> span		1020753	1					
ANR	1021462	AdditiveExpression	ds -> pre_cm [ j ] + ( i - 1 ) * ds -> span		1020753	0		+			
ANR	1021463	ArrayIndexing	ds -> pre_cm [ j ]		1020753	0					
ANR	1021464	PtrMemberAccess	ds -> pre_cm		1020753	0					
ANR	1021465	Identifier	ds		1020753	0					
ANR	1021466	Identifier	pre_cm		1020753	1					
ANR	1021467	Identifier	j		1020753	1					
ANR	1021468	MultiplicativeExpression	( i - 1 ) * ds -> span		1020753	1		*			
ANR	1021469	AdditiveExpression	i - 1		1020753	0		-			
ANR	1021470	Identifier	i		1020753	0					
ANR	1021471	PrimaryExpression	1		1020753	1					
ANR	1021472	PtrMemberAccess	ds -> span		1020753	1					
ANR	1021473	Identifier	ds		1020753	0					
ANR	1021474	Identifier	span		1020753	1					
ANR	1021475	Argument	copy		1020753	2					
ANR	1021476	Identifier	copy		1020753	0					
ANR	1021477	IfStatement	if ( code < 0 )		1020753	21					
ANR	1021478	Condition	code < 0	2519:8:81446:81453	1020753	0	True				
ANR	1021479	RelationalExpression	code < 0		1020753	0		<			
ANR	1021480	Identifier	code		1020753	0					
ANR	1021481	PrimaryExpression	0		1020753	1					
ANR	1021482	ReturnStatement	return code ;	2520:8:81464:81475	1020753	1	True				
ANR	1021483	Identifier	code		1020753	0					
ANR	1021484	IfStatement	if ( ds -> early_cm && ds -> apply_cm )		1020753	22					
ANR	1021485	Condition	ds -> early_cm && ds -> apply_cm	2522:8:81486:81513	1020753	0	True				
ANR	1021486	AndExpression	ds -> early_cm && ds -> apply_cm		1020753	0		&&			
ANR	1021487	PtrMemberAccess	ds -> early_cm		1020753	0					
ANR	1021488	Identifier	ds		1020753	0					
ANR	1021489	Identifier	early_cm		1020753	1					
ANR	1021490	PtrMemberAccess	ds -> apply_cm		1020753	1					
ANR	1021491	Identifier	ds		1020753	0					
ANR	1021492	Identifier	apply_cm		1020753	1					
ANR	1021493	CompoundStatement		104:38:4156:4156	1020753	1					
ANR	1021494	ExpressionStatement	"code = ds -> apply_cm ( ds -> apply_cm_arg , ds -> params . data , ds -> post_cm , ds -> dev -> width , downfactor , params -> raster )"	2523:8:81526:81637	1020753	0	True				
ANR	1021495	AssignmentExpression	"code = ds -> apply_cm ( ds -> apply_cm_arg , ds -> params . data , ds -> post_cm , ds -> dev -> width , downfactor , params -> raster )"		1020753	0		=			
ANR	1021496	Identifier	code		1020753	0					
ANR	1021497	CallExpression	"ds -> apply_cm ( ds -> apply_cm_arg , ds -> params . data , ds -> post_cm , ds -> dev -> width , downfactor , params -> raster )"		1020753	1					
ANR	1021498	Callee	ds -> apply_cm		1020753	0					
ANR	1021499	PtrMemberAccess	ds -> apply_cm		1020753	0					
ANR	1021500	Identifier	ds		1020753	0					
ANR	1021501	Identifier	apply_cm		1020753	1					
ANR	1021502	ArgumentList	ds -> apply_cm_arg		1020753	1					
ANR	1021503	Argument	ds -> apply_cm_arg		1020753	0					
ANR	1021504	PtrMemberAccess	ds -> apply_cm_arg		1020753	0					
ANR	1021505	Identifier	ds		1020753	0					
ANR	1021506	Identifier	apply_cm_arg		1020753	1					
ANR	1021507	Argument	ds -> params . data		1020753	1					
ANR	1021508	MemberAccess	ds -> params . data		1020753	0					
ANR	1021509	PtrMemberAccess	ds -> params		1020753	0					
ANR	1021510	Identifier	ds		1020753	0					
ANR	1021511	Identifier	params		1020753	1					
ANR	1021512	Identifier	data		1020753	1					
ANR	1021513	Argument	ds -> post_cm		1020753	2					
ANR	1021514	PtrMemberAccess	ds -> post_cm		1020753	0					
ANR	1021515	Identifier	ds		1020753	0					
ANR	1021516	Identifier	post_cm		1020753	1					
ANR	1021517	Argument	ds -> dev -> width		1020753	3					
ANR	1021518	PtrMemberAccess	ds -> dev -> width		1020753	0					
ANR	1021519	PtrMemberAccess	ds -> dev		1020753	0					
ANR	1021520	Identifier	ds		1020753	0					
ANR	1021521	Identifier	dev		1020753	1					
ANR	1021522	Identifier	width		1020753	1					
ANR	1021523	Argument	downfactor		1020753	4					
ANR	1021524	Identifier	downfactor		1020753	0					
ANR	1021525	Argument	params -> raster		1020753	5					
ANR	1021526	PtrMemberAccess	params -> raster		1020753	0					
ANR	1021527	Identifier	params		1020753	0					
ANR	1021528	Identifier	raster		1020753	1					
ANR	1021529	IfStatement	if ( code < 0 )		1020753	1					
ANR	1021530	Condition	code < 0	2524:12:81651:81658	1020753	0	True				
ANR	1021531	RelationalExpression	code < 0		1020753	0		<			
ANR	1021532	Identifier	code		1020753	0					
ANR	1021533	PrimaryExpression	0		1020753	1					
ANR	1021534	ReturnStatement	return code ;	2525:12:81673:81684	1020753	1	True				
ANR	1021535	Identifier	code		1020753	0					
ANR	1021536	ForStatement	for ( j = 0 ; j < ds -> num_planes ; j ++ )		1020753	2					
ANR	1021537	ForInit	j = 0 ;	2526:13:81699:81704	1020753	0	True				
ANR	1021538	AssignmentExpression	j = 0		1020753	0		=			
ANR	1021539	Identifier	j		1020753	0					
ANR	1021540	PrimaryExpression	0		1020753	1					
ANR	1021541	Condition	j < ds -> num_planes	2526:20:81706:81723	1020753	1	True				
ANR	1021542	RelationalExpression	j < ds -> num_planes		1020753	0		<			
ANR	1021543	Identifier	j		1020753	0					
ANR	1021544	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1021545	Identifier	ds		1020753	0					
ANR	1021546	Identifier	num_planes		1020753	1					
ANR	1021547	PostIncDecOperationExpression	j ++	2526:40:81726:81728	1020753	2	True				
ANR	1021548	Identifier	j		1020753	0					
ANR	1021549	IncDec	++		1020753	1					
ANR	1021550	ExpressionStatement	params2 . data [ j ] = ds -> post_cm [ j ]	2527:12:81743:81775	1020753	3	True				
ANR	1021551	AssignmentExpression	params2 . data [ j ] = ds -> post_cm [ j ]		1020753	0		=			
ANR	1021552	ArrayIndexing	params2 . data [ j ]		1020753	0					
ANR	1021553	MemberAccess	params2 . data		1020753	0					
ANR	1021554	Identifier	params2		1020753	0					
ANR	1021555	Identifier	data		1020753	1					
ANR	1021556	Identifier	j		1020753	1					
ANR	1021557	ArrayIndexing	ds -> post_cm [ j ]		1020753	1					
ANR	1021558	PtrMemberAccess	ds -> post_cm		1020753	0					
ANR	1021559	Identifier	ds		1020753	0					
ANR	1021560	Identifier	post_cm		1020753	1					
ANR	1021561	Identifier	j		1020753	1					
ANR	1021562	IfStatement	if ( upfactor > 1 )		1020753	23					
ANR	1021563	Condition	upfactor > 1	2530:8:81792:81803	1020753	0	True				
ANR	1021564	RelationalExpression	upfactor > 1		1020753	0		>			
ANR	1021565	Identifier	upfactor		1020753	0					
ANR	1021566	PrimaryExpression	1		1020753	1					
ANR	1021567	CompoundStatement		112:22:4446:4446	1020753	1					
ANR	1021568	ForStatement	for ( plane = 0 ; plane < ds -> num_planes ; plane ++ )		1020753	0					
ANR	1021569	ForInit	plane = 0 ;	2532:13:81887:81894	1020753	0	True				
ANR	1021570	AssignmentExpression	plane = 0		1020753	0		=			
ANR	1021571	Identifier	plane		1020753	0					
ANR	1021572	PrimaryExpression	0		1020753	1					
ANR	1021573	Condition	plane < ds -> num_planes	2532:22:81896:81917	1020753	1	True				
ANR	1021574	RelationalExpression	plane < ds -> num_planes		1020753	0		<			
ANR	1021575	Identifier	plane		1020753	0					
ANR	1021576	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1021577	Identifier	ds		1020753	0					
ANR	1021578	Identifier	num_planes		1020753	1					
ANR	1021579	PostIncDecOperationExpression	plane ++	2532:46:81920:81926	1020753	2	True				
ANR	1021580	Identifier	plane		1020753	0					
ANR	1021581	IncDec	++		1020753	1					
ANR	1021582	CompoundStatement		115:12:4583:4650	1020753	3					
ANR	1021583	IdentifierDeclStatement	byte * scaled = ds -> scaled_data + upfactor * plane * ds -> scaled_span ;	2533:12:81943:82010	1020753	0	True				
ANR	1021584	IdentifierDecl	* scaled = ds -> scaled_data + upfactor * plane * ds -> scaled_span		1020753	0					
ANR	1021585	IdentifierDeclType	byte *		1020753	0					
ANR	1021586	Identifier	scaled		1020753	1					
ANR	1021587	AssignmentExpression	* scaled = ds -> scaled_data + upfactor * plane * ds -> scaled_span		1020753	2		=			
ANR	1021588	Identifier	scaled		1020753	0					
ANR	1021589	AdditiveExpression	ds -> scaled_data + upfactor * plane * ds -> scaled_span		1020753	1		+			
ANR	1021590	PtrMemberAccess	ds -> scaled_data		1020753	0					
ANR	1021591	Identifier	ds		1020753	0					
ANR	1021592	Identifier	scaled_data		1020753	1					
ANR	1021593	MultiplicativeExpression	upfactor * plane * ds -> scaled_span		1020753	1		*			
ANR	1021594	Identifier	upfactor		1020753	0					
ANR	1021595	MultiplicativeExpression	plane * ds -> scaled_span		1020753	1		*			
ANR	1021596	Identifier	plane		1020753	0					
ANR	1021597	PtrMemberAccess	ds -> scaled_span		1020753	1					
ANR	1021598	Identifier	ds		1020753	0					
ANR	1021599	Identifier	scaled_span		1020753	1					
ANR	1021600	ExpressionStatement	"( ds -> down_core ) ( ds , scaled , params2 . data [ plane ] , row , plane , params2 . raster )"	2534:12:82024:82100	1020753	1	True				
ANR	1021601	CallExpression	"( ds -> down_core ) ( ds , scaled , params2 . data [ plane ] , row , plane , params2 . raster )"		1020753	0					
ANR	1021602	Callee	ds -> down_core		1020753	0					
ANR	1021603	PtrMemberAccess	ds -> down_core		1020753	0					
ANR	1021604	Identifier	ds		1020753	0					
ANR	1021605	Identifier	down_core		1020753	1					
ANR	1021606	ArgumentList	ds		1020753	1					
ANR	1021607	Argument	ds		1020753	0					
ANR	1021608	Identifier	ds		1020753	0					
ANR	1021609	Argument	scaled		1020753	1					
ANR	1021610	Identifier	scaled		1020753	0					
ANR	1021611	Argument	params2 . data [ plane ]		1020753	2					
ANR	1021612	ArrayIndexing	params2 . data [ plane ]		1020753	0					
ANR	1021613	MemberAccess	params2 . data		1020753	0					
ANR	1021614	Identifier	params2		1020753	0					
ANR	1021615	Identifier	data		1020753	1					
ANR	1021616	Identifier	plane		1020753	1					
ANR	1021617	Argument	row		1020753	3					
ANR	1021618	Identifier	row		1020753	0					
ANR	1021619	Argument	plane		1020753	4					
ANR	1021620	Identifier	plane		1020753	0					
ANR	1021621	Argument	params2 . raster		1020753	5					
ANR	1021622	MemberAccess	params2 . raster		1020753	0					
ANR	1021623	Identifier	params2		1020753	0					
ANR	1021624	Identifier	raster		1020753	1					
ANR	1021625	ExpressionStatement	params -> data [ plane ] = scaled	2535:12:82114:82142	1020753	2	True				
ANR	1021626	AssignmentExpression	params -> data [ plane ] = scaled		1020753	0		=			
ANR	1021627	ArrayIndexing	params -> data [ plane ]		1020753	0					
ANR	1021628	PtrMemberAccess	params -> data		1020753	0					
ANR	1021629	Identifier	params		1020753	0					
ANR	1021630	Identifier	data		1020753	1					
ANR	1021631	Identifier	plane		1020753	1					
ANR	1021632	Identifier	scaled		1020753	1					
ANR	1021633	ElseStatement	else		1020753	0					
ANR	1021634	IfStatement	if ( ds -> down_core != NULL )		1020753	0					
ANR	1021635	Condition	ds -> down_core != NULL	2537:15:82169:82189	1020753	0	True				
ANR	1021636	EqualityExpression	ds -> down_core != NULL		1020753	0		!=			
ANR	1021637	PtrMemberAccess	ds -> down_core		1020753	0					
ANR	1021638	Identifier	ds		1020753	0					
ANR	1021639	Identifier	down_core		1020753	1					
ANR	1021640	Identifier	NULL		1020753	1					
ANR	1021641	CompoundStatement		119:38:4832:4832	1020753	1					
ANR	1021642	ForStatement	for ( plane = 0 ; plane < ds -> num_planes ; plane ++ )		1020753	0					
ANR	1021643	ForInit	plane = 0 ;	2539:13:82257:82264	1020753	0	True				
ANR	1021644	AssignmentExpression	plane = 0		1020753	0		=			
ANR	1021645	Identifier	plane		1020753	0					
ANR	1021646	PrimaryExpression	0		1020753	1					
ANR	1021647	Condition	plane < ds -> num_planes	2539:22:82266:82287	1020753	1	True				
ANR	1021648	RelationalExpression	plane < ds -> num_planes		1020753	0		<			
ANR	1021649	Identifier	plane		1020753	0					
ANR	1021650	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1021651	Identifier	ds		1020753	0					
ANR	1021652	Identifier	num_planes		1020753	1					
ANR	1021653	PostIncDecOperationExpression	plane ++	2539:46:82290:82296	1020753	2	True				
ANR	1021654	Identifier	plane		1020753	0					
ANR	1021655	IncDec	++		1020753	1					
ANR	1021656	ExpressionStatement	"( ds -> down_core ) ( ds , params -> data [ plane ] , params2 . data [ plane ] , row , plane , params2 . raster )"	2540:12:82311:82400	1020753	3	True				
ANR	1021657	CallExpression	"( ds -> down_core ) ( ds , params -> data [ plane ] , params2 . data [ plane ] , row , plane , params2 . raster )"		1020753	0					
ANR	1021658	Callee	ds -> down_core		1020753	0					
ANR	1021659	PtrMemberAccess	ds -> down_core		1020753	0					
ANR	1021660	Identifier	ds		1020753	0					
ANR	1021661	Identifier	down_core		1020753	1					
ANR	1021662	ArgumentList	ds		1020753	1					
ANR	1021663	Argument	ds		1020753	0					
ANR	1021664	Identifier	ds		1020753	0					
ANR	1021665	Argument	params -> data [ plane ]		1020753	1					
ANR	1021666	ArrayIndexing	params -> data [ plane ]		1020753	0					
ANR	1021667	PtrMemberAccess	params -> data		1020753	0					
ANR	1021668	Identifier	params		1020753	0					
ANR	1021669	Identifier	data		1020753	1					
ANR	1021670	Identifier	plane		1020753	1					
ANR	1021671	Argument	params2 . data [ plane ]		1020753	2					
ANR	1021672	ArrayIndexing	params2 . data [ plane ]		1020753	0					
ANR	1021673	MemberAccess	params2 . data		1020753	0					
ANR	1021674	Identifier	params2		1020753	0					
ANR	1021675	Identifier	data		1020753	1					
ANR	1021676	Identifier	plane		1020753	1					
ANR	1021677	Argument	row		1020753	3					
ANR	1021678	Identifier	row		1020753	0					
ANR	1021679	Argument	plane		1020753	4					
ANR	1021680	Identifier	plane		1020753	0					
ANR	1021681	Argument	params2 . raster		1020753	5					
ANR	1021682	MemberAccess	params2 . raster		1020753	0					
ANR	1021683	Identifier	params2		1020753	0					
ANR	1021684	Identifier	raster		1020753	1					
ANR	1021685	ElseStatement	else		1020753	0					
ANR	1021686	CompoundStatement		123:11:5053:5053	1020753	0					
ANR	1021687	ExpressionStatement	assert ( ! ds -> early_cm || ds -> apply_cm == NULL )	2544:8:82516:82561	1020753	0	True				
ANR	1021688	CallExpression	assert ( ! ds -> early_cm || ds -> apply_cm == NULL )		1020753	0					
ANR	1021689	Callee	assert		1020753	0					
ANR	1021690	Identifier	assert		1020753	0					
ANR	1021691	ArgumentList	! ds -> early_cm || ds -> apply_cm == NULL		1020753	1					
ANR	1021692	Argument	! ds -> early_cm || ds -> apply_cm == NULL		1020753	0					
ANR	1021693	OrExpression	! ds -> early_cm || ds -> apply_cm == NULL		1020753	0		||			
ANR	1021694	UnaryOperationExpression	! ds -> early_cm		1020753	0					
ANR	1021695	UnaryOperator	!		1020753	0					
ANR	1021696	PtrMemberAccess	ds -> early_cm		1020753	1					
ANR	1021697	Identifier	ds		1020753	0					
ANR	1021698	Identifier	early_cm		1020753	1					
ANR	1021699	EqualityExpression	ds -> apply_cm == NULL		1020753	1		==			
ANR	1021700	PtrMemberAccess	ds -> apply_cm		1020753	0					
ANR	1021701	Identifier	ds		1020753	0					
ANR	1021702	Identifier	apply_cm		1020753	1					
ANR	1021703	Identifier	NULL		1020753	1					
ANR	1021704	ForStatement	for ( plane = 0 ; plane < ds -> num_planes ; plane ++ )		1020753	1					
ANR	1021705	ForInit	plane = 0 ;	2545:13:82576:82583	1020753	0	True				
ANR	1021706	AssignmentExpression	plane = 0		1020753	0		=			
ANR	1021707	Identifier	plane		1020753	0					
ANR	1021708	PrimaryExpression	0		1020753	1					
ANR	1021709	Condition	plane < ds -> num_planes	2545:22:82585:82606	1020753	1	True				
ANR	1021710	RelationalExpression	plane < ds -> num_planes		1020753	0		<			
ANR	1021711	Identifier	plane		1020753	0					
ANR	1021712	PtrMemberAccess	ds -> num_planes		1020753	1					
ANR	1021713	Identifier	ds		1020753	0					
ANR	1021714	Identifier	num_planes		1020753	1					
ANR	1021715	PostIncDecOperationExpression	plane ++	2545:46:82609:82615	1020753	2	True				
ANR	1021716	Identifier	plane		1020753	0					
ANR	1021717	IncDec	++		1020753	1					
ANR	1021718	ExpressionStatement	"memcpy ( params -> data [ plane ] , params2 . data [ plane ] , params2 . raster )"	2546:12:82630:82694	1020753	3	True				
ANR	1021719	CallExpression	"memcpy ( params -> data [ plane ] , params2 . data [ plane ] , params2 . raster )"		1020753	0					
ANR	1021720	Callee	memcpy		1020753	0					
ANR	1021721	Identifier	memcpy		1020753	0					
ANR	1021722	ArgumentList	params -> data [ plane ]		1020753	1					
ANR	1021723	Argument	params -> data [ plane ]		1020753	0					
ANR	1021724	ArrayIndexing	params -> data [ plane ]		1020753	0					
ANR	1021725	PtrMemberAccess	params -> data		1020753	0					
ANR	1021726	Identifier	params		1020753	0					
ANR	1021727	Identifier	data		1020753	1					
ANR	1021728	Identifier	plane		1020753	1					
ANR	1021729	Argument	params2 . data [ plane ]		1020753	1					
ANR	1021730	ArrayIndexing	params2 . data [ plane ]		1020753	0					
ANR	1021731	MemberAccess	params2 . data		1020753	0					
ANR	1021732	Identifier	params2		1020753	0					
ANR	1021733	Identifier	data		1020753	1					
ANR	1021734	Identifier	plane		1020753	1					
ANR	1021735	Argument	params2 . raster		1020753	2					
ANR	1021736	MemberAccess	params2 . raster		1020753	0					
ANR	1021737	Identifier	params2		1020753	0					
ANR	1021738	Identifier	raster		1020753	1					
ANR	1021739	IfStatement	if ( ! ds -> early_cm && ds -> apply_cm )		1020753	24					
ANR	1021740	Condition	! ds -> early_cm && ds -> apply_cm	2549:8:82711:82739	1020753	0	True				
ANR	1021741	AndExpression	! ds -> early_cm && ds -> apply_cm		1020753	0		&&			
ANR	1021742	UnaryOperationExpression	! ds -> early_cm		1020753	0					
ANR	1021743	UnaryOperator	!		1020753	0					
ANR	1021744	PtrMemberAccess	ds -> early_cm		1020753	1					
ANR	1021745	Identifier	ds		1020753	0					
ANR	1021746	Identifier	early_cm		1020753	1					
ANR	1021747	PtrMemberAccess	ds -> apply_cm		1020753	1					
ANR	1021748	Identifier	ds		1020753	0					
ANR	1021749	Identifier	apply_cm		1020753	1					
ANR	1021750	CompoundStatement		131:39:5382:5382	1020753	1					
ANR	1021751	ExpressionStatement	"code = ds -> apply_cm ( ds -> apply_cm_arg , ds -> params . data , params2 . data , ds -> width , 1 , params -> raster )"	2550:8:82752:82850	1020753	0	True				
ANR	1021752	AssignmentExpression	"code = ds -> apply_cm ( ds -> apply_cm_arg , ds -> params . data , params2 . data , ds -> width , 1 , params -> raster )"		1020753	0		=			
ANR	1021753	Identifier	code		1020753	0					
ANR	1021754	CallExpression	"ds -> apply_cm ( ds -> apply_cm_arg , ds -> params . data , params2 . data , ds -> width , 1 , params -> raster )"		1020753	1					
ANR	1021755	Callee	ds -> apply_cm		1020753	0					
ANR	1021756	PtrMemberAccess	ds -> apply_cm		1020753	0					
ANR	1021757	Identifier	ds		1020753	0					
ANR	1021758	Identifier	apply_cm		1020753	1					
ANR	1021759	ArgumentList	ds -> apply_cm_arg		1020753	1					
ANR	1021760	Argument	ds -> apply_cm_arg		1020753	0					
ANR	1021761	PtrMemberAccess	ds -> apply_cm_arg		1020753	0					
ANR	1021762	Identifier	ds		1020753	0					
ANR	1021763	Identifier	apply_cm_arg		1020753	1					
ANR	1021764	Argument	ds -> params . data		1020753	1					
ANR	1021765	MemberAccess	ds -> params . data		1020753	0					
ANR	1021766	PtrMemberAccess	ds -> params		1020753	0					
ANR	1021767	Identifier	ds		1020753	0					
ANR	1021768	Identifier	params		1020753	1					
ANR	1021769	Identifier	data		1020753	1					
ANR	1021770	Argument	params2 . data		1020753	2					
ANR	1021771	MemberAccess	params2 . data		1020753	0					
ANR	1021772	Identifier	params2		1020753	0					
ANR	1021773	Identifier	data		1020753	1					
ANR	1021774	Argument	ds -> width		1020753	3					
ANR	1021775	PtrMemberAccess	ds -> width		1020753	0					
ANR	1021776	Identifier	ds		1020753	0					
ANR	1021777	Identifier	width		1020753	1					
ANR	1021778	Argument	1		1020753	4					
ANR	1021779	PrimaryExpression	1		1020753	0					
ANR	1021780	Argument	params -> raster		1020753	5					
ANR	1021781	PtrMemberAccess	params -> raster		1020753	0					
ANR	1021782	Identifier	params		1020753	0					
ANR	1021783	Identifier	raster		1020753	1					
ANR	1021784	IfStatement	if ( code < 0 )		1020753	1					
ANR	1021785	Condition	code < 0	2551:12:82864:82871	1020753	0	True				
ANR	1021786	RelationalExpression	code < 0		1020753	0		<			
ANR	1021787	Identifier	code		1020753	0					
ANR	1021788	PrimaryExpression	0		1020753	1					
ANR	1021789	ReturnStatement	return code ;	2552:12:82886:82897	1020753	1	True				
ANR	1021790	Identifier	code		1020753	0					
ANR	1021791	ReturnStatement	return code ;	2555:4:82910:82921	1020753	25	True				
ANR	1021792	Identifier	code		1020753	0					
ANR	1021793	ReturnType	int		1020753	1					
ANR	1021794	Identifier	gx_downscaler_get_bits_rectangle		1020753	2					
ANR	1021795	ParameterList	"gx_downscaler_t * ds , gs_get_bits_params_t * params , int row"		1020753	3					
ANR	1021796	Parameter	gx_downscaler_t * ds	2416:37:77202:77225	1020753	0	True				
ANR	1021797	ParameterType	gx_downscaler_t *		1020753	0					
ANR	1021798	Identifier	ds		1020753	1					
ANR	1021799	Parameter	gs_get_bits_params_t * params	2417:37:77265:77292	1020753	1	True				
ANR	1021800	ParameterType	gs_get_bits_params_t *		1020753	0					
ANR	1021801	Identifier	params		1020753	1					
ANR	1021802	Parameter	int row	2418:37:77332:77356	1020753	2	True				
ANR	1021803	ParameterType	int		1020753	0					
ANR	1021804	Identifier	row		1020753	1					
ANR	1021805	CFGEntryNode	ENTRY		1020753		True				
ANR	1021806	CFGExitNode	EXIT		1020753		True				
ANR	1021807	Symbol	plane		1020753						
ANR	1021808	Symbol	gs_error_rangecheck		1020753						
ANR	1021809	Symbol	scaled		1020753						
ANR	1021810	Symbol	saved		1020753						
ANR	1021811	Symbol	* * params		1020753						
ANR	1021812	Symbol	rect . q . y		1020753						
ANR	1021813	Symbol	ds		1020753						
ANR	1021814	Symbol	rect . q . x		1020753						
ANR	1021815	Symbol	params2 . raster		1020753						
ANR	1021816	Symbol	ds -> span		1020753						
ANR	1021817	Symbol	ds -> width		1020753						
ANR	1021818	Symbol	buffer		1020753						
ANR	1021819	Symbol	upfactor		1020753						
ANR	1021820	Symbol	ds -> scaled_data		1020753						
ANR	1021821	Symbol	& ds -> params		1020753						
ANR	1021822	Symbol	ds -> num_planes		1020753						
ANR	1021823	Symbol	NULL		1020753						
ANR	1021824	Symbol	params -> options		1020753						
ANR	1021825	Symbol	ds -> dev -> width		1020753						
ANR	1021826	Symbol	ClapTrap_GetLinePlanar		1020753						
ANR	1021827	Symbol	params		1020753						
ANR	1021828	Symbol	ds -> dev -> height		1020753						
ANR	1021829	Symbol	ds -> claptrap_params		1020753						
ANR	1021830	Symbol	* ds -> post_cm		1020753						
ANR	1021831	Symbol	rect . p . x		1020753						
ANR	1021832	Symbol	rect . p . y		1020753						
ANR	1021833	Symbol	params2 . data		1020753						
ANR	1021834	Symbol	ds -> dev		1020753						
ANR	1021835	Symbol	rect . q		1020753						
ANR	1021836	Symbol	rect . p		1020753						
ANR	1021837	Symbol	ds -> pre_cm		1020753						
ANR	1021838	Symbol	* ds -> dev		1020753						
ANR	1021839	Symbol	ds -> early_cm		1020753						
ANR	1021840	Symbol	saved . options		1020753						
ANR	1021841	Symbol	code		1020753						
ANR	1021842	Symbol	* params2 . data		1020753						
ANR	1021843	Symbol	* ds -> pre_cm		1020753						
ANR	1021844	Symbol	params2 . options		1020753						
ANR	1021845	Symbol	subrow		1020753						
ANR	1021846	Symbol	* dev_proc		1020753						
ANR	1021847	Symbol	& upfactor		1020753						
ANR	1021848	Symbol	ds -> post_cm		1020753						
ANR	1021849	Symbol	ds -> apply_cm		1020753						
ANR	1021850	Symbol	"* dev_proc ( ds -> dev , get_bits_rectangle )"		1020753						
ANR	1021851	Symbol	get_bits_rectangle		1020753						
ANR	1021852	Symbol	& rect		1020753						
ANR	1021853	Symbol	params -> data		1020753						
ANR	1021854	Symbol	rect		1020753						
ANR	1021855	Symbol	~GB_RETURN_POINTER		1020753						
ANR	1021856	Symbol	& downfactor		1020753						
ANR	1021857	Symbol	ds -> params		1020753						
ANR	1021858	Symbol	* ds		1020753						
ANR	1021859	Symbol	dev_proc		1020753						
ANR	1021860	Symbol	params2		1020753						
ANR	1021861	Symbol	ds -> claptrap		1020753						
ANR	1021862	Symbol	row		1020753						
ANR	1021863	Symbol	copy		1020753						
ANR	1021864	Symbol	* plane		1020753						
ANR	1021865	Symbol	ds -> down_core		1020753						
ANR	1021866	Symbol	factor		1020753						
ANR	1021867	Symbol	ds -> params . data		1020753						
ANR	1021868	Symbol	* params		1020753						
ANR	1021869	Symbol	GB_RETURN_POINTER		1020753						
ANR	1021870	Symbol	* buffer		1020753						
ANR	1021871	Symbol	* params2		1020753						
ANR	1021872	Symbol	ds -> scaled_span		1020753						
ANR	1021873	Symbol	i		1020753						
ANR	1021874	Symbol	saved . data		1020753						
ANR	1021875	Symbol	j		1020753						
ANR	1021876	Symbol	params -> raster		1020753						
ANR	1021877	Symbol	GB_RETURN_COPY		1020753						
ANR	1021878	Symbol	& params2		1020753						
ANR	1021879	Symbol	* i		1020753						
ANR	1021880	Symbol	ds -> src_bpc		1020753						
ANR	1021881	Symbol	* j		1020753						
ANR	1021882	Symbol	ds -> factor		1020753						
ANR	1021883	Symbol	downfactor		1020753						
ANR	1021884	Symbol	ds -> apply_cm_arg		1020753						
ANR	1021885	Symbol	* * ds		1020753						
ANR	1021886	Symbol	* params -> data		1020753						
ANR	1021887	ClassDef	downscaler_process_page_arg_s	2558:8:82934:83111							
ANR	1021888	DeclStmt									
ANR	1021889	Decl							gx_process_page_options_t	gx_process_page_options_t *	orig_options
ANR	1021890	DeclStmt									
ANR	1021891	Decl							int	int	upfactor
ANR	1021892	DeclStmt									
ANR	1021893	Decl							int	int	downfactor
ANR	1021894	DeclStmt									
ANR	1021895	Decl							gx_downscaler_t	gx_downscaler_t	ds
ANR	1021896	DeclStmt									
ANR	1021897	Decl							downscaler_process_page_arg_s	downscaler_process_page_arg_s	downscaler_process_page_arg_t
ANR	1021898	ClassDef	downscaler_process_page_buffer_s	2567:8:83122:83242							
ANR	1021899	DeclStmt									
ANR	1021900	Decl							gx_device	gx_device *	bdev
ANR	1021901	DeclStmt									
ANR	1021902	Decl							void	void *	orig_buffer
ANR	1021903	DeclStmt									
ANR	1021904	Decl							downscaler_process_page_buffer_s	downscaler_process_page_buffer_s	downscaler_process_page_buffer_t
ANR	1021905	Function	downscaler_init_fn	2574:0:83245:84817							
ANR	1021906	FunctionDef	"downscaler_init_fn (void * arg_ , gx_device * dev , gs_memory_t * memory , int w , int h , void * * pbuffer)"		1021905	0					
ANR	1021907	CompoundStatement		2575:0:83354:84817	1021905	0					
ANR	1021908	IdentifierDeclStatement	downscaler_process_page_arg_t * arg = ( downscaler_process_page_arg_t * ) arg_ ;	2576:4:83360:83434	1021905	0	True				
ANR	1021909	IdentifierDecl	* arg = ( downscaler_process_page_arg_t * ) arg_		1021905	0					
ANR	1021910	IdentifierDeclType	downscaler_process_page_arg_t *		1021905	0					
ANR	1021911	Identifier	arg		1021905	1					
ANR	1021912	AssignmentExpression	* arg = ( downscaler_process_page_arg_t * ) arg_		1021905	2		=			
ANR	1021913	Identifier	arg		1021905	0					
ANR	1021914	CastExpression	( downscaler_process_page_arg_t * ) arg_		1021905	1					
ANR	1021915	CastTarget	downscaler_process_page_arg_t *		1021905	0					
ANR	1021916	Identifier	arg_		1021905	1					
ANR	1021917	IdentifierDeclStatement	downscaler_process_page_buffer_t * buffer ;	2577:4:83440:83480	1021905	1	True				
ANR	1021918	IdentifierDecl	* buffer		1021905	0					
ANR	1021919	IdentifierDeclType	downscaler_process_page_buffer_t *		1021905	0					
ANR	1021920	Identifier	buffer		1021905	1					
ANR	1021921	IdentifierDeclStatement	int code = 0 ;	2578:4:83486:83498	1021905	2	True				
ANR	1021922	IdentifierDecl	code = 0		1021905	0					
ANR	1021923	IdentifierDeclType	int		1021905	0					
ANR	1021924	Identifier	code		1021905	1					
ANR	1021925	AssignmentExpression	code = 0		1021905	2		=			
ANR	1021926	Identifier	code		1021905	0					
ANR	1021927	PrimaryExpression	0		1021905	1					
ANR	1021928	ExpressionStatement	"buffer = ( downscaler_process_page_buffer_t * ) gs_alloc_bytes ( memory , sizeof ( * buffer ) , ""downscaler process_page buffer"" )"	2580:4:83505:83623	1021905	3	True				
ANR	1021929	AssignmentExpression	"buffer = ( downscaler_process_page_buffer_t * ) gs_alloc_bytes ( memory , sizeof ( * buffer ) , ""downscaler process_page buffer"" )"		1021905	0		=			
ANR	1021930	Identifier	buffer		1021905	0					
ANR	1021931	CastExpression	"( downscaler_process_page_buffer_t * ) gs_alloc_bytes ( memory , sizeof ( * buffer ) , ""downscaler process_page buffer"" )"		1021905	1					
ANR	1021932	CastTarget	downscaler_process_page_buffer_t *		1021905	0					
ANR	1021933	CallExpression	"gs_alloc_bytes ( memory , sizeof ( * buffer ) , ""downscaler process_page buffer"" )"		1021905	1					
ANR	1021934	Callee	gs_alloc_bytes		1021905	0					
ANR	1021935	Identifier	gs_alloc_bytes		1021905	0					
ANR	1021936	ArgumentList	memory		1021905	1					
ANR	1021937	Argument	memory		1021905	0					
ANR	1021938	Identifier	memory		1021905	0					
ANR	1021939	Argument	sizeof ( * buffer )		1021905	1					
ANR	1021940	SizeofExpression	sizeof ( * buffer )		1021905	0					
ANR	1021941	Sizeof	sizeof		1021905	0					
ANR	1021942	UnaryOperationExpression	* buffer		1021905	1					
ANR	1021943	UnaryOperator	*		1021905	0					
ANR	1021944	Identifier	buffer		1021905	1					
ANR	1021945	Argument	"""downscaler process_page buffer"""		1021905	2					
ANR	1021946	PrimaryExpression	"""downscaler process_page buffer"""		1021905	0					
ANR	1021947	IfStatement	if ( buffer == NULL )		1021905	4					
ANR	1021948	Condition	buffer == NULL	2581:8:83633:83646	1021905	0	True				
ANR	1021949	EqualityExpression	buffer == NULL		1021905	0		==			
ANR	1021950	Identifier	buffer		1021905	0					
ANR	1021951	Identifier	NULL		1021905	1					
ANR	1021952	ExpressionStatement	return_error ( gs_error_VMerror )	2582:8:83657:83687	1021905	1	True				
ANR	1021953	CallExpression	return_error ( gs_error_VMerror )		1021905	0					
ANR	1021954	Callee	return_error		1021905	0					
ANR	1021955	Identifier	return_error		1021905	0					
ANR	1021956	ArgumentList	gs_error_VMerror		1021905	1					
ANR	1021957	Argument	gs_error_VMerror		1021905	0					
ANR	1021958	Identifier	gs_error_VMerror		1021905	0					
ANR	1021959	ExpressionStatement	"memset ( buffer , 0 , sizeof ( * buffer ) )"	2583:4:83693:83727	1021905	5	True				
ANR	1021960	CallExpression	"memset ( buffer , 0 , sizeof ( * buffer ) )"		1021905	0					
ANR	1021961	Callee	memset		1021905	0					
ANR	1021962	Identifier	memset		1021905	0					
ANR	1021963	ArgumentList	buffer		1021905	1					
ANR	1021964	Argument	buffer		1021905	0					
ANR	1021965	Identifier	buffer		1021905	0					
ANR	1021966	Argument	0		1021905	1					
ANR	1021967	PrimaryExpression	0		1021905	0					
ANR	1021968	Argument	sizeof ( * buffer )		1021905	2					
ANR	1021969	SizeofExpression	sizeof ( * buffer )		1021905	0					
ANR	1021970	Sizeof	sizeof		1021905	0					
ANR	1021971	UnaryOperationExpression	* buffer		1021905	1					
ANR	1021972	UnaryOperator	*		1021905	0					
ANR	1021973	Identifier	buffer		1021905	1					
ANR	1021974	IfStatement	if ( arg -> upfactor > arg -> downfactor )		1021905	6					
ANR	1021975	Condition	arg -> upfactor > arg -> downfactor	2585:8:83738:83768	1021905	0	True				
ANR	1021976	RelationalExpression	arg -> upfactor > arg -> downfactor		1021905	0		>			
ANR	1021977	PtrMemberAccess	arg -> upfactor		1021905	0					
ANR	1021978	Identifier	arg		1021905	0					
ANR	1021979	Identifier	upfactor		1021905	1					
ANR	1021980	PtrMemberAccess	arg -> downfactor		1021905	1					
ANR	1021981	Identifier	arg		1021905	0					
ANR	1021982	Identifier	downfactor		1021905	1					
ANR	1021983	CompoundStatement		11:41:416:416	1021905	1					
ANR	1021984	ExpressionStatement	"code = gx_default_create_buf_device ( & buffer -> bdev , dev , ( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor , NULL , memory , NULL )"	2586:8:83781:83963	1021905	0	True				
ANR	1021985	AssignmentExpression	"code = gx_default_create_buf_device ( & buffer -> bdev , dev , ( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor , NULL , memory , NULL )"		1021905	0		=			
ANR	1021986	Identifier	code		1021905	0					
ANR	1021987	CallExpression	"gx_default_create_buf_device ( & buffer -> bdev , dev , ( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor , NULL , memory , NULL )"		1021905	1					
ANR	1021988	Callee	gx_default_create_buf_device		1021905	0					
ANR	1021989	Identifier	gx_default_create_buf_device		1021905	0					
ANR	1021990	ArgumentList	& buffer -> bdev		1021905	1					
ANR	1021991	Argument	& buffer -> bdev		1021905	0					
ANR	1021992	UnaryOperationExpression	& buffer -> bdev		1021905	0					
ANR	1021993	UnaryOperator	&		1021905	0					
ANR	1021994	PtrMemberAccess	buffer -> bdev		1021905	1					
ANR	1021995	Identifier	buffer		1021905	0					
ANR	1021996	Identifier	bdev		1021905	1					
ANR	1021997	Argument	dev		1021905	1					
ANR	1021998	Identifier	dev		1021905	0					
ANR	1021999	Argument	( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1021905	2					
ANR	1022000	MultiplicativeExpression	( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1021905	0		/			
ANR	1022001	AdditiveExpression	h * arg -> upfactor + arg -> downfactor - 1		1021905	0		+			
ANR	1022002	MultiplicativeExpression	h * arg -> upfactor		1021905	0		*			
ANR	1022003	Identifier	h		1021905	0					
ANR	1022004	PtrMemberAccess	arg -> upfactor		1021905	1					
ANR	1022005	Identifier	arg		1021905	0					
ANR	1022006	Identifier	upfactor		1021905	1					
ANR	1022007	AdditiveExpression	arg -> downfactor - 1		1021905	1		-			
ANR	1022008	PtrMemberAccess	arg -> downfactor		1021905	0					
ANR	1022009	Identifier	arg		1021905	0					
ANR	1022010	Identifier	downfactor		1021905	1					
ANR	1022011	PrimaryExpression	1		1021905	1					
ANR	1022012	PtrMemberAccess	arg -> downfactor		1021905	1					
ANR	1022013	Identifier	arg		1021905	0					
ANR	1022014	Identifier	downfactor		1021905	1					
ANR	1022015	Argument	NULL		1021905	3					
ANR	1022016	Identifier	NULL		1021905	0					
ANR	1022017	Argument	memory		1021905	4					
ANR	1022018	Identifier	memory		1021905	0					
ANR	1022019	Argument	NULL		1021905	5					
ANR	1022020	Identifier	NULL		1021905	0					
ANR	1022021	IfStatement	if ( code < 0 )		1021905	1					
ANR	1022022	Condition	code < 0	2589:12:83977:83984	1021905	0	True				
ANR	1022023	RelationalExpression	code < 0		1021905	0		<			
ANR	1022024	Identifier	code		1021905	0					
ANR	1022025	PrimaryExpression	0		1021905	1					
ANR	1022026	CompoundStatement		15:22:632:632	1021905	1					
ANR	1022027	ExpressionStatement	"gs_free_object ( memory , buffer , ""downscaler process_page buffer"" )"	2590:12:84001:84065	1021905	0	True				
ANR	1022028	CallExpression	"gs_free_object ( memory , buffer , ""downscaler process_page buffer"" )"		1021905	0					
ANR	1022029	Callee	gs_free_object		1021905	0					
ANR	1022030	Identifier	gs_free_object		1021905	0					
ANR	1022031	ArgumentList	memory		1021905	1					
ANR	1022032	Argument	memory		1021905	0					
ANR	1022033	Identifier	memory		1021905	0					
ANR	1022034	Argument	buffer		1021905	1					
ANR	1022035	Identifier	buffer		1021905	0					
ANR	1022036	Argument	"""downscaler process_page buffer"""		1021905	2					
ANR	1022037	PrimaryExpression	"""downscaler process_page buffer"""		1021905	0					
ANR	1022038	ReturnStatement	return code ;	2591:12:84079:84090	1021905	1	True				
ANR	1022039	Identifier	code		1021905	0					
ANR	1022040	IfStatement	if ( arg -> orig_options && arg -> orig_options -> init_buffer_fn )		1021905	7					
ANR	1022041	Condition	arg -> orig_options && arg -> orig_options -> init_buffer_fn	2595:8:84117:84170	1021905	0	True				
ANR	1022042	AndExpression	arg -> orig_options && arg -> orig_options -> init_buffer_fn		1021905	0		&&			
ANR	1022043	PtrMemberAccess	arg -> orig_options		1021905	0					
ANR	1022044	Identifier	arg		1021905	0					
ANR	1022045	Identifier	orig_options		1021905	1					
ANR	1022046	PtrMemberAccess	arg -> orig_options -> init_buffer_fn		1021905	1					
ANR	1022047	PtrMemberAccess	arg -> orig_options		1021905	0					
ANR	1022048	Identifier	arg		1021905	0					
ANR	1022049	Identifier	orig_options		1021905	1					
ANR	1022050	Identifier	init_buffer_fn		1021905	1					
ANR	1022051	CompoundStatement		21:64:818:818	1021905	1					
ANR	1022052	ExpressionStatement	"code = arg -> orig_options -> init_buffer_fn ( arg -> orig_options -> arg , dev , memory , ( w * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor , ( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor , & buffer -> orig_buffer )"	2596:8:84183:84543	1021905	0	True				
ANR	1022053	AssignmentExpression	"code = arg -> orig_options -> init_buffer_fn ( arg -> orig_options -> arg , dev , memory , ( w * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor , ( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor , & buffer -> orig_buffer )"		1021905	0		=			
ANR	1022054	Identifier	code		1021905	0					
ANR	1022055	CallExpression	"arg -> orig_options -> init_buffer_fn ( arg -> orig_options -> arg , dev , memory , ( w * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor , ( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor , & buffer -> orig_buffer )"		1021905	1					
ANR	1022056	Callee	arg -> orig_options -> init_buffer_fn		1021905	0					
ANR	1022057	PtrMemberAccess	arg -> orig_options -> init_buffer_fn		1021905	0					
ANR	1022058	PtrMemberAccess	arg -> orig_options		1021905	0					
ANR	1022059	Identifier	arg		1021905	0					
ANR	1022060	Identifier	orig_options		1021905	1					
ANR	1022061	Identifier	init_buffer_fn		1021905	1					
ANR	1022062	ArgumentList	arg -> orig_options -> arg		1021905	1					
ANR	1022063	Argument	arg -> orig_options -> arg		1021905	0					
ANR	1022064	PtrMemberAccess	arg -> orig_options -> arg		1021905	0					
ANR	1022065	PtrMemberAccess	arg -> orig_options		1021905	0					
ANR	1022066	Identifier	arg		1021905	0					
ANR	1022067	Identifier	orig_options		1021905	1					
ANR	1022068	Identifier	arg		1021905	1					
ANR	1022069	Argument	dev		1021905	1					
ANR	1022070	Identifier	dev		1021905	0					
ANR	1022071	Argument	memory		1021905	2					
ANR	1022072	Identifier	memory		1021905	0					
ANR	1022073	Argument	( w * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1021905	3					
ANR	1022074	MultiplicativeExpression	( w * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1021905	0		/			
ANR	1022075	AdditiveExpression	w * arg -> upfactor + arg -> downfactor - 1		1021905	0		+			
ANR	1022076	MultiplicativeExpression	w * arg -> upfactor		1021905	0		*			
ANR	1022077	Identifier	w		1021905	0					
ANR	1022078	PtrMemberAccess	arg -> upfactor		1021905	1					
ANR	1022079	Identifier	arg		1021905	0					
ANR	1022080	Identifier	upfactor		1021905	1					
ANR	1022081	AdditiveExpression	arg -> downfactor - 1		1021905	1		-			
ANR	1022082	PtrMemberAccess	arg -> downfactor		1021905	0					
ANR	1022083	Identifier	arg		1021905	0					
ANR	1022084	Identifier	downfactor		1021905	1					
ANR	1022085	PrimaryExpression	1		1021905	1					
ANR	1022086	PtrMemberAccess	arg -> downfactor		1021905	1					
ANR	1022087	Identifier	arg		1021905	0					
ANR	1022088	Identifier	downfactor		1021905	1					
ANR	1022089	Argument	( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1021905	4					
ANR	1022090	MultiplicativeExpression	( h * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1021905	0		/			
ANR	1022091	AdditiveExpression	h * arg -> upfactor + arg -> downfactor - 1		1021905	0		+			
ANR	1022092	MultiplicativeExpression	h * arg -> upfactor		1021905	0		*			
ANR	1022093	Identifier	h		1021905	0					
ANR	1022094	PtrMemberAccess	arg -> upfactor		1021905	1					
ANR	1022095	Identifier	arg		1021905	0					
ANR	1022096	Identifier	upfactor		1021905	1					
ANR	1022097	AdditiveExpression	arg -> downfactor - 1		1021905	1		-			
ANR	1022098	PtrMemberAccess	arg -> downfactor		1021905	0					
ANR	1022099	Identifier	arg		1021905	0					
ANR	1022100	Identifier	downfactor		1021905	1					
ANR	1022101	PrimaryExpression	1		1021905	1					
ANR	1022102	PtrMemberAccess	arg -> downfactor		1021905	1					
ANR	1022103	Identifier	arg		1021905	0					
ANR	1022104	Identifier	downfactor		1021905	1					
ANR	1022105	Argument	& buffer -> orig_buffer		1021905	5					
ANR	1022106	UnaryOperationExpression	& buffer -> orig_buffer		1021905	0					
ANR	1022107	UnaryOperator	&		1021905	0					
ANR	1022108	PtrMemberAccess	buffer -> orig_buffer		1021905	1					
ANR	1022109	Identifier	buffer		1021905	0					
ANR	1022110	Identifier	orig_buffer		1021905	1					
ANR	1022111	IfStatement	if ( code < 0 )		1021905	1					
ANR	1022112	Condition	code < 0	2600:12:84557:84564	1021905	0	True				
ANR	1022113	RelationalExpression	code < 0		1021905	0		<			
ANR	1022114	Identifier	code		1021905	0					
ANR	1022115	PrimaryExpression	0		1021905	1					
ANR	1022116	CompoundStatement		26:22:1212:1212	1021905	1					
ANR	1022117	IfStatement	if ( buffer -> bdev )		1021905	0					
ANR	1022118	Condition	buffer -> bdev	2601:16:84585:84596	1021905	0	True				
ANR	1022119	PtrMemberAccess	buffer -> bdev		1021905	0					
ANR	1022120	Identifier	buffer		1021905	0					
ANR	1022121	Identifier	bdev		1021905	1					
ANR	1022122	ExpressionStatement	"dev_proc ( dev , close_device ) ( dev )"	2602:16:84615:84647	1021905	1	True				
ANR	1022123	CallExpression	"dev_proc ( dev , close_device ) ( dev )"		1021905	0					
ANR	1022124	Callee	"dev_proc ( dev , close_device )"		1021905	0					
ANR	1022125	CallExpression	"dev_proc ( dev , close_device )"		1021905	0					
ANR	1022126	Callee	dev_proc		1021905	0					
ANR	1022127	Identifier	dev_proc		1021905	0					
ANR	1022128	ArgumentList	dev		1021905	1					
ANR	1022129	Argument	dev		1021905	0					
ANR	1022130	Identifier	dev		1021905	0					
ANR	1022131	Argument	close_device		1021905	1					
ANR	1022132	Identifier	close_device		1021905	0					
ANR	1022133	ArgumentList	dev		1021905	1					
ANR	1022134	Argument	dev		1021905	0					
ANR	1022135	Identifier	dev		1021905	0					
ANR	1022136	ExpressionStatement	"gs_free_object ( memory , buffer , ""downscaler process_page buffer"" )"	2603:12:84661:84725	1021905	1	True				
ANR	1022137	CallExpression	"gs_free_object ( memory , buffer , ""downscaler process_page buffer"" )"		1021905	0					
ANR	1022138	Callee	gs_free_object		1021905	0					
ANR	1022139	Identifier	gs_free_object		1021905	0					
ANR	1022140	ArgumentList	memory		1021905	1					
ANR	1022141	Argument	memory		1021905	0					
ANR	1022142	Identifier	memory		1021905	0					
ANR	1022143	Argument	buffer		1021905	1					
ANR	1022144	Identifier	buffer		1021905	0					
ANR	1022145	Argument	"""downscaler process_page buffer"""		1021905	2					
ANR	1022146	PrimaryExpression	"""downscaler process_page buffer"""		1021905	0					
ANR	1022147	ReturnStatement	return code ;	2604:12:84739:84750	1021905	2	True				
ANR	1022148	Identifier	code		1021905	0					
ANR	1022149	ExpressionStatement	* pbuffer = ( void * ) buffer	2608:4:84773:84798	1021905	8	True				
ANR	1022150	AssignmentExpression	* pbuffer = ( void * ) buffer		1021905	0		=			
ANR	1022151	UnaryOperationExpression	* pbuffer		1021905	0					
ANR	1022152	UnaryOperator	*		1021905	0					
ANR	1022153	Identifier	pbuffer		1021905	1					
ANR	1022154	CastExpression	( void * ) buffer		1021905	1					
ANR	1022155	CastTarget	void *		1021905	0					
ANR	1022156	Identifier	buffer		1021905	1					
ANR	1022157	ReturnStatement	return code ;	2609:4:84804:84815	1021905	9	True				
ANR	1022158	Identifier	code		1021905	0					
ANR	1022159	ReturnType	static int		1021905	1					
ANR	1022160	Identifier	downscaler_init_fn		1021905	2					
ANR	1022161	ParameterList	"void * arg_ , gx_device * dev , gs_memory_t * memory , int w , int h , void * * pbuffer"		1021905	3					
ANR	1022162	Parameter	void * arg_	2574:30:83275:83284	1021905	0	True				
ANR	1022163	ParameterType	void *		1021905	0					
ANR	1022164	Identifier	arg_		1021905	1					
ANR	1022165	Parameter	gx_device * dev	2574:42:83287:83300	1021905	1	True				
ANR	1022166	ParameterType	gx_device *		1021905	0					
ANR	1022167	Identifier	dev		1021905	1					
ANR	1022168	Parameter	gs_memory_t * memory	2574:58:83303:83321	1021905	2	True				
ANR	1022169	ParameterType	gs_memory_t *		1021905	0					
ANR	1022170	Identifier	memory		1021905	1					
ANR	1022171	Parameter	int w	2574:79:83324:83328	1021905	3	True				
ANR	1022172	ParameterType	int		1021905	0					
ANR	1022173	Identifier	w		1021905	1					
ANR	1022174	Parameter	int h	2574:86:83331:83335	1021905	4	True				
ANR	1022175	ParameterType	int		1021905	0					
ANR	1022176	Identifier	h		1021905	1					
ANR	1022177	Parameter	void * * pbuffer	2574:93:83338:83351	1021905	5	True				
ANR	1022178	ParameterType	void * *		1021905	0					
ANR	1022179	Identifier	pbuffer		1021905	1					
ANR	1022180	CFGEntryNode	ENTRY		1021905		True				
ANR	1022181	CFGExitNode	EXIT		1021905		True				
ANR	1022182	Symbol	memory		1021905						
ANR	1022183	Symbol	code		1021905						
ANR	1022184	Symbol	gx_default_create_buf_device		1021905						
ANR	1022185	Symbol	close_device		1021905						
ANR	1022186	Symbol	& buffer -> bdev		1021905						
ANR	1022187	Symbol	* pbuffer		1021905						
ANR	1022188	Symbol	arg -> orig_options -> arg		1021905						
ANR	1022189	Symbol	dev		1021905						
ANR	1022190	Symbol	arg		1021905						
ANR	1022191	Symbol	buffer		1021905						
ANR	1022192	Symbol	buffer -> bdev		1021905						
ANR	1022193	Symbol	* arg -> orig_options		1021905						
ANR	1022194	Symbol	gs_alloc_bytes		1021905						
ANR	1022195	Symbol	* buffer		1021905						
ANR	1022196	Symbol	NULL		1021905						
ANR	1022197	Symbol	arg_		1021905						
ANR	1022198	Symbol	pbuffer		1021905						
ANR	1022199	Symbol	h		1021905						
ANR	1022200	Symbol	* * arg		1021905						
ANR	1022201	Symbol	gs_error_VMerror		1021905						
ANR	1022202	Symbol	& buffer -> orig_buffer		1021905						
ANR	1022203	Symbol	w		1021905						
ANR	1022204	Symbol	arg -> downfactor		1021905						
ANR	1022205	Symbol	arg -> upfactor		1021905						
ANR	1022206	Symbol	arg -> orig_options		1021905						
ANR	1022207	Symbol	arg -> orig_options -> init_buffer_fn		1021905						
ANR	1022208	Symbol	* arg		1021905						
ANR	1022209	Function	downscaler_process_fn	2612:0:84820:87124							
ANR	1022210	FunctionDef	"downscaler_process_fn (void * arg_ , gx_device * dev , gx_device * bdev , const gs_int_rect * rect , void * buffer_)"		1022209	0					
ANR	1022211	CompoundStatement		2613:0:84938:87124	1022209	0					
ANR	1022212	IdentifierDeclStatement	downscaler_process_page_arg_t * arg = ( downscaler_process_page_arg_t * ) arg_ ;	2614:4:84944:85018	1022209	0	True				
ANR	1022213	IdentifierDecl	* arg = ( downscaler_process_page_arg_t * ) arg_		1022209	0					
ANR	1022214	IdentifierDeclType	downscaler_process_page_arg_t *		1022209	0					
ANR	1022215	Identifier	arg		1022209	1					
ANR	1022216	AssignmentExpression	* arg = ( downscaler_process_page_arg_t * ) arg_		1022209	2		=			
ANR	1022217	Identifier	arg		1022209	0					
ANR	1022218	CastExpression	( downscaler_process_page_arg_t * ) arg_		1022209	1					
ANR	1022219	CastTarget	downscaler_process_page_arg_t *		1022209	0					
ANR	1022220	Identifier	arg_		1022209	1					
ANR	1022221	IdentifierDeclStatement	downscaler_process_page_buffer_t * buffer = ( downscaler_process_page_buffer_t * ) buffer_ ;	2615:4:85024:85110	1022209	1	True				
ANR	1022222	IdentifierDecl	* buffer = ( downscaler_process_page_buffer_t * ) buffer_		1022209	0					
ANR	1022223	IdentifierDeclType	downscaler_process_page_buffer_t *		1022209	0					
ANR	1022224	Identifier	buffer		1022209	1					
ANR	1022225	AssignmentExpression	* buffer = ( downscaler_process_page_buffer_t * ) buffer_		1022209	2		=			
ANR	1022226	Identifier	buffer		1022209	0					
ANR	1022227	CastExpression	( downscaler_process_page_buffer_t * ) buffer_		1022209	1					
ANR	1022228	CastTarget	downscaler_process_page_buffer_t *		1022209	0					
ANR	1022229	Identifier	buffer_		1022209	1					
ANR	1022230	IdentifierDeclStatement	"int code , raster_in , raster_out ;"	2616:4:85116:85147	1022209	2	True				
ANR	1022231	IdentifierDecl	code		1022209	0					
ANR	1022232	IdentifierDeclType	int		1022209	0					
ANR	1022233	Identifier	code		1022209	1					
ANR	1022234	IdentifierDecl	raster_in		1022209	1					
ANR	1022235	IdentifierDeclType	int		1022209	0					
ANR	1022236	Identifier	raster_in		1022209	1					
ANR	1022237	IdentifierDecl	raster_out		1022209	2					
ANR	1022238	IdentifierDeclType	int		1022209	0					
ANR	1022239	Identifier	raster_out		1022209	1					
ANR	1022240	IdentifierDeclStatement	gs_get_bits_params_t params ;	2617:4:85153:85180	1022209	3	True				
ANR	1022241	IdentifierDecl	params		1022209	0					
ANR	1022242	IdentifierDeclType	gs_get_bits_params_t		1022209	0					
ANR	1022243	Identifier	params		1022209	1					
ANR	1022244	IdentifierDeclStatement	"gs_int_rect in_rect , out_rect ;"	2618:4:85186:85215	1022209	4	True				
ANR	1022245	IdentifierDecl	in_rect		1022209	0					
ANR	1022246	IdentifierDeclType	gs_int_rect		1022209	0					
ANR	1022247	Identifier	in_rect		1022209	1					
ANR	1022248	IdentifierDecl	out_rect		1022209	1					
ANR	1022249	IdentifierDeclType	gs_int_rect		1022209	0					
ANR	1022250	Identifier	out_rect		1022209	1					
ANR	1022251	IdentifierDeclStatement	"byte * in_ptr , * out_ptr ;"	2619:4:85221:85243	1022209	5	True				
ANR	1022252	IdentifierDecl	* in_ptr		1022209	0					
ANR	1022253	IdentifierDeclType	byte *		1022209	0					
ANR	1022254	Identifier	in_ptr		1022209	1					
ANR	1022255	IdentifierDecl	* out_ptr		1022209	1					
ANR	1022256	IdentifierDeclType	byte *		1022209	0					
ANR	1022257	Identifier	out_ptr		1022209	1					
ANR	1022258	ExpressionStatement	in_rect . p . x = 0	2621:4:85250:85265	1022209	6	True				
ANR	1022259	AssignmentExpression	in_rect . p . x = 0		1022209	0		=			
ANR	1022260	MemberAccess	in_rect . p . x		1022209	0					
ANR	1022261	MemberAccess	in_rect . p		1022209	0					
ANR	1022262	Identifier	in_rect		1022209	0					
ANR	1022263	Identifier	p		1022209	1					
ANR	1022264	Identifier	x		1022209	1					
ANR	1022265	PrimaryExpression	0		1022209	1					
ANR	1022266	ExpressionStatement	in_rect . p . y = 0	2622:4:85271:85286	1022209	7	True				
ANR	1022267	AssignmentExpression	in_rect . p . y = 0		1022209	0		=			
ANR	1022268	MemberAccess	in_rect . p . y		1022209	0					
ANR	1022269	MemberAccess	in_rect . p		1022209	0					
ANR	1022270	Identifier	in_rect		1022209	0					
ANR	1022271	Identifier	p		1022209	1					
ANR	1022272	Identifier	y		1022209	1					
ANR	1022273	PrimaryExpression	0		1022209	1					
ANR	1022274	ExpressionStatement	in_rect . q . x = rect -> q . x - rect -> p . x	2623:4:85292:85327	1022209	8	True				
ANR	1022275	AssignmentExpression	in_rect . q . x = rect -> q . x - rect -> p . x		1022209	0		=			
ANR	1022276	MemberAccess	in_rect . q . x		1022209	0					
ANR	1022277	MemberAccess	in_rect . q		1022209	0					
ANR	1022278	Identifier	in_rect		1022209	0					
ANR	1022279	Identifier	q		1022209	1					
ANR	1022280	Identifier	x		1022209	1					
ANR	1022281	AdditiveExpression	rect -> q . x - rect -> p . x		1022209	1		-			
ANR	1022282	MemberAccess	rect -> q . x		1022209	0					
ANR	1022283	PtrMemberAccess	rect -> q		1022209	0					
ANR	1022284	Identifier	rect		1022209	0					
ANR	1022285	Identifier	q		1022209	1					
ANR	1022286	Identifier	x		1022209	1					
ANR	1022287	MemberAccess	rect -> p . x		1022209	1					
ANR	1022288	PtrMemberAccess	rect -> p		1022209	0					
ANR	1022289	Identifier	rect		1022209	0					
ANR	1022290	Identifier	p		1022209	1					
ANR	1022291	Identifier	x		1022209	1					
ANR	1022292	ExpressionStatement	in_rect . q . y = rect -> q . y - rect -> p . y	2624:4:85333:85368	1022209	9	True				
ANR	1022293	AssignmentExpression	in_rect . q . y = rect -> q . y - rect -> p . y		1022209	0		=			
ANR	1022294	MemberAccess	in_rect . q . y		1022209	0					
ANR	1022295	MemberAccess	in_rect . q		1022209	0					
ANR	1022296	Identifier	in_rect		1022209	0					
ANR	1022297	Identifier	q		1022209	1					
ANR	1022298	Identifier	y		1022209	1					
ANR	1022299	AdditiveExpression	rect -> q . y - rect -> p . y		1022209	1		-			
ANR	1022300	MemberAccess	rect -> q . y		1022209	0					
ANR	1022301	PtrMemberAccess	rect -> q		1022209	0					
ANR	1022302	Identifier	rect		1022209	0					
ANR	1022303	Identifier	q		1022209	1					
ANR	1022304	Identifier	y		1022209	1					
ANR	1022305	MemberAccess	rect -> p . y		1022209	1					
ANR	1022306	PtrMemberAccess	rect -> p		1022209	0					
ANR	1022307	Identifier	rect		1022209	0					
ANR	1022308	Identifier	p		1022209	1					
ANR	1022309	Identifier	y		1022209	1					
ANR	1022310	ExpressionStatement	out_rect . p . x = 0	2625:4:85374:85390	1022209	10	True				
ANR	1022311	AssignmentExpression	out_rect . p . x = 0		1022209	0		=			
ANR	1022312	MemberAccess	out_rect . p . x		1022209	0					
ANR	1022313	MemberAccess	out_rect . p		1022209	0					
ANR	1022314	Identifier	out_rect		1022209	0					
ANR	1022315	Identifier	p		1022209	1					
ANR	1022316	Identifier	x		1022209	1					
ANR	1022317	PrimaryExpression	0		1022209	1					
ANR	1022318	ExpressionStatement	out_rect . p . y = 0	2626:4:85396:85412	1022209	11	True				
ANR	1022319	AssignmentExpression	out_rect . p . y = 0		1022209	0		=			
ANR	1022320	MemberAccess	out_rect . p . y		1022209	0					
ANR	1022321	MemberAccess	out_rect . p		1022209	0					
ANR	1022322	Identifier	out_rect		1022209	0					
ANR	1022323	Identifier	p		1022209	1					
ANR	1022324	Identifier	y		1022209	1					
ANR	1022325	PrimaryExpression	0		1022209	1					
ANR	1022326	ExpressionStatement	out_rect . q . x = ( in_rect . q . x * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor	2627:4:85418:85500	1022209	12	True				
ANR	1022327	AssignmentExpression	out_rect . q . x = ( in_rect . q . x * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1022209	0		=			
ANR	1022328	MemberAccess	out_rect . q . x		1022209	0					
ANR	1022329	MemberAccess	out_rect . q		1022209	0					
ANR	1022330	Identifier	out_rect		1022209	0					
ANR	1022331	Identifier	q		1022209	1					
ANR	1022332	Identifier	x		1022209	1					
ANR	1022333	MultiplicativeExpression	( in_rect . q . x * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1022209	1		/			
ANR	1022334	AdditiveExpression	in_rect . q . x * arg -> upfactor + arg -> downfactor - 1		1022209	0		+			
ANR	1022335	MultiplicativeExpression	in_rect . q . x * arg -> upfactor		1022209	0		*			
ANR	1022336	MemberAccess	in_rect . q . x		1022209	0					
ANR	1022337	MemberAccess	in_rect . q		1022209	0					
ANR	1022338	Identifier	in_rect		1022209	0					
ANR	1022339	Identifier	q		1022209	1					
ANR	1022340	Identifier	x		1022209	1					
ANR	1022341	PtrMemberAccess	arg -> upfactor		1022209	1					
ANR	1022342	Identifier	arg		1022209	0					
ANR	1022343	Identifier	upfactor		1022209	1					
ANR	1022344	AdditiveExpression	arg -> downfactor - 1		1022209	1		-			
ANR	1022345	PtrMemberAccess	arg -> downfactor		1022209	0					
ANR	1022346	Identifier	arg		1022209	0					
ANR	1022347	Identifier	downfactor		1022209	1					
ANR	1022348	PrimaryExpression	1		1022209	1					
ANR	1022349	PtrMemberAccess	arg -> downfactor		1022209	1					
ANR	1022350	Identifier	arg		1022209	0					
ANR	1022351	Identifier	downfactor		1022209	1					
ANR	1022352	ExpressionStatement	out_rect . q . y = ( in_rect . q . y * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor	2628:4:85506:85588	1022209	13	True				
ANR	1022353	AssignmentExpression	out_rect . q . y = ( in_rect . q . y * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1022209	0		=			
ANR	1022354	MemberAccess	out_rect . q . y		1022209	0					
ANR	1022355	MemberAccess	out_rect . q		1022209	0					
ANR	1022356	Identifier	out_rect		1022209	0					
ANR	1022357	Identifier	q		1022209	1					
ANR	1022358	Identifier	y		1022209	1					
ANR	1022359	MultiplicativeExpression	( in_rect . q . y * arg -> upfactor + arg -> downfactor - 1 ) / arg -> downfactor		1022209	1		/			
ANR	1022360	AdditiveExpression	in_rect . q . y * arg -> upfactor + arg -> downfactor - 1		1022209	0		+			
ANR	1022361	MultiplicativeExpression	in_rect . q . y * arg -> upfactor		1022209	0		*			
ANR	1022362	MemberAccess	in_rect . q . y		1022209	0					
ANR	1022363	MemberAccess	in_rect . q		1022209	0					
ANR	1022364	Identifier	in_rect		1022209	0					
ANR	1022365	Identifier	q		1022209	1					
ANR	1022366	Identifier	y		1022209	1					
ANR	1022367	PtrMemberAccess	arg -> upfactor		1022209	1					
ANR	1022368	Identifier	arg		1022209	0					
ANR	1022369	Identifier	upfactor		1022209	1					
ANR	1022370	AdditiveExpression	arg -> downfactor - 1		1022209	1		-			
ANR	1022371	PtrMemberAccess	arg -> downfactor		1022209	0					
ANR	1022372	Identifier	arg		1022209	0					
ANR	1022373	Identifier	downfactor		1022209	1					
ANR	1022374	PrimaryExpression	1		1022209	1					
ANR	1022375	PtrMemberAccess	arg -> downfactor		1022209	1					
ANR	1022376	Identifier	arg		1022209	0					
ANR	1022377	Identifier	downfactor		1022209	1					
ANR	1022378	ExpressionStatement	params . options = GB_COLORS_NATIVE | GB_ALPHA_NONE | GB_PACKING_CHUNKY | GB_RETURN_POINTER | GB_ALIGN_ANY | GB_OFFSET_0 | GB_RASTER_ANY	2631:4:85636:85770	1022209	14	True				
ANR	1022379	AssignmentExpression	params . options = GB_COLORS_NATIVE | GB_ALPHA_NONE | GB_PACKING_CHUNKY | GB_RETURN_POINTER | GB_ALIGN_ANY | GB_OFFSET_0 | GB_RASTER_ANY		1022209	0		=			
ANR	1022380	MemberAccess	params . options		1022209	0					
ANR	1022381	Identifier	params		1022209	0					
ANR	1022382	Identifier	options		1022209	1					
ANR	1022383	InclusiveOrExpression	GB_COLORS_NATIVE | GB_ALPHA_NONE | GB_PACKING_CHUNKY | GB_RETURN_POINTER | GB_ALIGN_ANY | GB_OFFSET_0 | GB_RASTER_ANY		1022209	1		|			
ANR	1022384	Identifier	GB_COLORS_NATIVE		1022209	0					
ANR	1022385	InclusiveOrExpression	GB_ALPHA_NONE | GB_PACKING_CHUNKY | GB_RETURN_POINTER | GB_ALIGN_ANY | GB_OFFSET_0 | GB_RASTER_ANY		1022209	1		|			
ANR	1022386	Identifier	GB_ALPHA_NONE		1022209	0					
ANR	1022387	InclusiveOrExpression	GB_PACKING_CHUNKY | GB_RETURN_POINTER | GB_ALIGN_ANY | GB_OFFSET_0 | GB_RASTER_ANY		1022209	1		|			
ANR	1022388	Identifier	GB_PACKING_CHUNKY		1022209	0					
ANR	1022389	InclusiveOrExpression	GB_RETURN_POINTER | GB_ALIGN_ANY | GB_OFFSET_0 | GB_RASTER_ANY		1022209	1		|			
ANR	1022390	Identifier	GB_RETURN_POINTER		1022209	0					
ANR	1022391	InclusiveOrExpression	GB_ALIGN_ANY | GB_OFFSET_0 | GB_RASTER_ANY		1022209	1		|			
ANR	1022392	Identifier	GB_ALIGN_ANY		1022209	0					
ANR	1022393	InclusiveOrExpression	GB_OFFSET_0 | GB_RASTER_ANY		1022209	1		|			
ANR	1022394	Identifier	GB_OFFSET_0		1022209	0					
ANR	1022395	Identifier	GB_RASTER_ANY		1022209	1					
ANR	1022396	ExpressionStatement	"code = dev_proc ( bdev , get_bits_rectangle ) ( bdev , & in_rect , & params , NULL )"	2632:4:85776:85848	1022209	15	True				
ANR	1022397	AssignmentExpression	"code = dev_proc ( bdev , get_bits_rectangle ) ( bdev , & in_rect , & params , NULL )"		1022209	0		=			
ANR	1022398	Identifier	code		1022209	0					
ANR	1022399	CallExpression	"dev_proc ( bdev , get_bits_rectangle ) ( bdev , & in_rect , & params , NULL )"		1022209	1					
ANR	1022400	Callee	"dev_proc ( bdev , get_bits_rectangle )"		1022209	0					
ANR	1022401	CallExpression	"dev_proc ( bdev , get_bits_rectangle )"		1022209	0					
ANR	1022402	Callee	dev_proc		1022209	0					
ANR	1022403	Identifier	dev_proc		1022209	0					
ANR	1022404	ArgumentList	bdev		1022209	1					
ANR	1022405	Argument	bdev		1022209	0					
ANR	1022406	Identifier	bdev		1022209	0					
ANR	1022407	Argument	get_bits_rectangle		1022209	1					
ANR	1022408	Identifier	get_bits_rectangle		1022209	0					
ANR	1022409	ArgumentList	bdev		1022209	1					
ANR	1022410	Argument	bdev		1022209	0					
ANR	1022411	Identifier	bdev		1022209	0					
ANR	1022412	Argument	& in_rect		1022209	1					
ANR	1022413	UnaryOperationExpression	& in_rect		1022209	0					
ANR	1022414	UnaryOperator	&		1022209	0					
ANR	1022415	Identifier	in_rect		1022209	1					
ANR	1022416	Argument	& params		1022209	2					
ANR	1022417	UnaryOperationExpression	& params		1022209	0					
ANR	1022418	UnaryOperator	&		1022209	0					
ANR	1022419	Identifier	params		1022209	1					
ANR	1022420	Argument	NULL		1022209	3					
ANR	1022421	Identifier	NULL		1022209	0					
ANR	1022422	IfStatement	if ( code < 0 )		1022209	16					
ANR	1022423	Condition	code < 0	2633:8:85858:85865	1022209	0	True				
ANR	1022424	RelationalExpression	code < 0		1022209	0		<			
ANR	1022425	Identifier	code		1022209	0					
ANR	1022426	PrimaryExpression	0		1022209	1					
ANR	1022427	ReturnStatement	return code ;	2634:8:85876:85887	1022209	1	True				
ANR	1022428	Identifier	code		1022209	0					
ANR	1022429	ExpressionStatement	raster_in = params . raster	2635:4:85893:85918	1022209	17	True				
ANR	1022430	AssignmentExpression	raster_in = params . raster		1022209	0		=			
ANR	1022431	Identifier	raster_in		1022209	0					
ANR	1022432	MemberAccess	params . raster		1022209	1					
ANR	1022433	Identifier	params		1022209	0					
ANR	1022434	Identifier	raster		1022209	1					
ANR	1022435	ExpressionStatement	in_ptr = params . data [ 0 ]	2636:4:85924:85947	1022209	18	True				
ANR	1022436	AssignmentExpression	in_ptr = params . data [ 0 ]		1022209	0		=			
ANR	1022437	Identifier	in_ptr		1022209	0					
ANR	1022438	ArrayIndexing	params . data [ 0 ]		1022209	1					
ANR	1022439	MemberAccess	params . data		1022209	0					
ANR	1022440	Identifier	params		1022209	0					
ANR	1022441	Identifier	data		1022209	1					
ANR	1022442	PrimaryExpression	0		1022209	1					
ANR	1022443	IfStatement	if ( buffer -> bdev )		1022209	19					
ANR	1022444	Condition	buffer -> bdev	2639:8:85993:86004	1022209	0	True				
ANR	1022445	PtrMemberAccess	buffer -> bdev		1022209	0					
ANR	1022446	Identifier	buffer		1022209	0					
ANR	1022447	Identifier	bdev		1022209	1					
ANR	1022448	CompoundStatement		27:22:1068:1068	1022209	1					
ANR	1022449	ExpressionStatement	"code = dev_proc ( bdev , get_bits_rectangle ) ( buffer -> bdev , & out_rect , & params , NULL )"	2640:8:86017:86098	1022209	0	True				
ANR	1022450	AssignmentExpression	"code = dev_proc ( bdev , get_bits_rectangle ) ( buffer -> bdev , & out_rect , & params , NULL )"		1022209	0		=			
ANR	1022451	Identifier	code		1022209	0					
ANR	1022452	CallExpression	"dev_proc ( bdev , get_bits_rectangle ) ( buffer -> bdev , & out_rect , & params , NULL )"		1022209	1					
ANR	1022453	Callee	"dev_proc ( bdev , get_bits_rectangle )"		1022209	0					
ANR	1022454	CallExpression	"dev_proc ( bdev , get_bits_rectangle )"		1022209	0					
ANR	1022455	Callee	dev_proc		1022209	0					
ANR	1022456	Identifier	dev_proc		1022209	0					
ANR	1022457	ArgumentList	bdev		1022209	1					
ANR	1022458	Argument	bdev		1022209	0					
ANR	1022459	Identifier	bdev		1022209	0					
ANR	1022460	Argument	get_bits_rectangle		1022209	1					
ANR	1022461	Identifier	get_bits_rectangle		1022209	0					
ANR	1022462	ArgumentList	buffer -> bdev		1022209	1					
ANR	1022463	Argument	buffer -> bdev		1022209	0					
ANR	1022464	PtrMemberAccess	buffer -> bdev		1022209	0					
ANR	1022465	Identifier	buffer		1022209	0					
ANR	1022466	Identifier	bdev		1022209	1					
ANR	1022467	Argument	& out_rect		1022209	1					
ANR	1022468	UnaryOperationExpression	& out_rect		1022209	0					
ANR	1022469	UnaryOperator	&		1022209	0					
ANR	1022470	Identifier	out_rect		1022209	1					
ANR	1022471	Argument	& params		1022209	2					
ANR	1022472	UnaryOperationExpression	& params		1022209	0					
ANR	1022473	UnaryOperator	&		1022209	0					
ANR	1022474	Identifier	params		1022209	1					
ANR	1022475	Argument	NULL		1022209	3					
ANR	1022476	Identifier	NULL		1022209	0					
ANR	1022477	IfStatement	if ( code < 0 )		1022209	1					
ANR	1022478	Condition	code < 0	2641:12:86112:86119	1022209	0	True				
ANR	1022479	RelationalExpression	code < 0		1022209	0		<			
ANR	1022480	Identifier	code		1022209	0					
ANR	1022481	PrimaryExpression	0		1022209	1					
ANR	1022482	ReturnStatement	return code ;	2642:12:86134:86145	1022209	1	True				
ANR	1022483	Identifier	code		1022209	0					
ANR	1022484	ExpressionStatement	raster_out = params . raster	2643:8:86155:86181	1022209	2	True				
ANR	1022485	AssignmentExpression	raster_out = params . raster		1022209	0		=			
ANR	1022486	Identifier	raster_out		1022209	0					
ANR	1022487	MemberAccess	params . raster		1022209	1					
ANR	1022488	Identifier	params		1022209	0					
ANR	1022489	Identifier	raster		1022209	1					
ANR	1022490	ExpressionStatement	out_ptr = params . data [ 0 ]	2644:8:86191:86215	1022209	3	True				
ANR	1022491	AssignmentExpression	out_ptr = params . data [ 0 ]		1022209	0		=			
ANR	1022492	Identifier	out_ptr		1022209	0					
ANR	1022493	ArrayIndexing	params . data [ 0 ]		1022209	1					
ANR	1022494	MemberAccess	params . data		1022209	0					
ANR	1022495	Identifier	params		1022209	0					
ANR	1022496	Identifier	data		1022209	1					
ANR	1022497	PrimaryExpression	0		1022209	1					
ANR	1022498	ElseStatement	else		1022209	0					
ANR	1022499	CompoundStatement		33:11:1289:1289	1022209	0					
ANR	1022500	ExpressionStatement	raster_out = raster_in	2646:8:86238:86260	1022209	0	True				
ANR	1022501	AssignmentExpression	raster_out = raster_in		1022209	0		=			
ANR	1022502	Identifier	raster_out		1022209	0					
ANR	1022503	Identifier	raster_in		1022209	1					
ANR	1022504	ExpressionStatement	out_ptr = params . data [ 0 ]	2647:8:86270:86294	1022209	1	True				
ANR	1022505	AssignmentExpression	out_ptr = params . data [ 0 ]		1022209	0		=			
ANR	1022506	Identifier	out_ptr		1022209	0					
ANR	1022507	ArrayIndexing	params . data [ 0 ]		1022209	1					
ANR	1022508	MemberAccess	params . data		1022209	0					
ANR	1022509	Identifier	params		1022209	0					
ANR	1022510	Identifier	data		1022209	1					
ANR	1022511	PrimaryExpression	0		1022209	1					
ANR	1022512	IfStatement	if ( arg -> ds . down_core )		1022209	20					
ANR	1022513	Condition	arg -> ds . down_core	2651:8:86338:86354	1022209	0	True				
ANR	1022514	MemberAccess	arg -> ds . down_core		1022209	0					
ANR	1022515	PtrMemberAccess	arg -> ds		1022209	0					
ANR	1022516	Identifier	arg		1022209	0					
ANR	1022517	Identifier	ds		1022209	1					
ANR	1022518	Identifier	down_core		1022209	1					
ANR	1022519	CompoundStatement		40:8:1428:1433	1022209	1					
ANR	1022520	IdentifierDeclStatement	int y ;	2652:8:86367:86372	1022209	0	True				
ANR	1022521	IdentifierDecl	y		1022209	0					
ANR	1022522	IdentifierDeclType	int		1022209	0					
ANR	1022523	Identifier	y		1022209	1					
ANR	1022524	ForStatement	for ( y = rect -> p . y ; y < rect -> q . y ; y += arg -> downfactor )		1022209	1					
ANR	1022525	ForInit	y = rect -> p . y ;	2653:13:86387:86400	1022209	0	True				
ANR	1022526	AssignmentExpression	y = rect -> p . y		1022209	0		=			
ANR	1022527	Identifier	y		1022209	0					
ANR	1022528	MemberAccess	rect -> p . y		1022209	1					
ANR	1022529	PtrMemberAccess	rect -> p		1022209	0					
ANR	1022530	Identifier	rect		1022209	0					
ANR	1022531	Identifier	p		1022209	1					
ANR	1022532	Identifier	y		1022209	1					
ANR	1022533	Condition	y < rect -> q . y	2653:28:86402:86414	1022209	1	True				
ANR	1022534	RelationalExpression	y < rect -> q . y		1022209	0		<			
ANR	1022535	Identifier	y		1022209	0					
ANR	1022536	MemberAccess	rect -> q . y		1022209	1					
ANR	1022537	PtrMemberAccess	rect -> q		1022209	0					
ANR	1022538	Identifier	rect		1022209	0					
ANR	1022539	Identifier	q		1022209	1					
ANR	1022540	Identifier	y		1022209	1					
ANR	1022541	AssignmentExpression	y += arg -> downfactor	2653:43:86417:86436	1022209	2	True	+=			
ANR	1022542	Identifier	y		1022209	0					
ANR	1022543	PtrMemberAccess	arg -> downfactor		1022209	1					
ANR	1022544	Identifier	arg		1022209	0					
ANR	1022545	Identifier	downfactor		1022209	1					
ANR	1022546	CompoundStatement		42:8:1508:1508	1022209	3					
ANR	1022547	ExpressionStatement	"arg -> ds . down_core ( & arg -> ds , out_ptr , in_ptr , y , 0 , arg -> ds . span )"	2655:12:86461:86525	1022209	0	True				
ANR	1022548	CallExpression	"arg -> ds . down_core ( & arg -> ds , out_ptr , in_ptr , y , 0 , arg -> ds . span )"		1022209	0					
ANR	1022549	Callee	arg -> ds . down_core		1022209	0					
ANR	1022550	MemberAccess	arg -> ds . down_core		1022209	0					
ANR	1022551	PtrMemberAccess	arg -> ds		1022209	0					
ANR	1022552	Identifier	arg		1022209	0					
ANR	1022553	Identifier	ds		1022209	1					
ANR	1022554	Identifier	down_core		1022209	1					
ANR	1022555	ArgumentList	& arg -> ds		1022209	1					
ANR	1022556	Argument	& arg -> ds		1022209	0					
ANR	1022557	UnaryOperationExpression	& arg -> ds		1022209	0					
ANR	1022558	UnaryOperator	&		1022209	0					
ANR	1022559	PtrMemberAccess	arg -> ds		1022209	1					
ANR	1022560	Identifier	arg		1022209	0					
ANR	1022561	Identifier	ds		1022209	1					
ANR	1022562	Argument	out_ptr		1022209	1					
ANR	1022563	Identifier	out_ptr		1022209	0					
ANR	1022564	Argument	in_ptr		1022209	2					
ANR	1022565	Identifier	in_ptr		1022209	0					
ANR	1022566	Argument	y		1022209	3					
ANR	1022567	Identifier	y		1022209	0					
ANR	1022568	Argument	0		1022209	4					
ANR	1022569	PrimaryExpression	0		1022209	0					
ANR	1022570	Argument	arg -> ds . span		1022209	5					
ANR	1022571	MemberAccess	arg -> ds . span		1022209	0					
ANR	1022572	PtrMemberAccess	arg -> ds		1022209	0					
ANR	1022573	Identifier	arg		1022209	0					
ANR	1022574	Identifier	ds		1022209	1					
ANR	1022575	Identifier	span		1022209	1					
ANR	1022576	ExpressionStatement	in_ptr += arg -> ds . span * arg -> downfactor	2656:12:86539:86579	1022209	1	True				
ANR	1022577	AssignmentExpression	in_ptr += arg -> ds . span * arg -> downfactor		1022209	0		+=			
ANR	1022578	Identifier	in_ptr		1022209	0					
ANR	1022579	MultiplicativeExpression	arg -> ds . span * arg -> downfactor		1022209	1		*			
ANR	1022580	MemberAccess	arg -> ds . span		1022209	0					
ANR	1022581	PtrMemberAccess	arg -> ds		1022209	0					
ANR	1022582	Identifier	arg		1022209	0					
ANR	1022583	Identifier	ds		1022209	1					
ANR	1022584	Identifier	span		1022209	1					
ANR	1022585	PtrMemberAccess	arg -> downfactor		1022209	1					
ANR	1022586	Identifier	arg		1022209	0					
ANR	1022587	Identifier	downfactor		1022209	1					
ANR	1022588	ExpressionStatement	out_ptr += raster_out * arg -> upfactor	2657:12:86593:86630	1022209	2	True				
ANR	1022589	AssignmentExpression	out_ptr += raster_out * arg -> upfactor		1022209	0		+=			
ANR	1022590	Identifier	out_ptr		1022209	0					
ANR	1022591	MultiplicativeExpression	raster_out * arg -> upfactor		1022209	1		*			
ANR	1022592	Identifier	raster_out		1022209	0					
ANR	1022593	PtrMemberAccess	arg -> upfactor		1022209	1					
ANR	1022594	Identifier	arg		1022209	0					
ANR	1022595	Identifier	upfactor		1022209	1					
ANR	1022596	IfStatement	if ( code >= 0 && arg -> orig_options && arg -> orig_options -> process_fn )		1022209	21					
ANR	1022597	Condition	code >= 0 && arg -> orig_options && arg -> orig_options -> process_fn	2662:8:86697:86759	1022209	0	True				
ANR	1022598	AndExpression	code >= 0 && arg -> orig_options && arg -> orig_options -> process_fn		1022209	0		&&			
ANR	1022599	RelationalExpression	code >= 0		1022209	0		>=			
ANR	1022600	Identifier	code		1022209	0					
ANR	1022601	PrimaryExpression	0		1022209	1					
ANR	1022602	AndExpression	arg -> orig_options && arg -> orig_options -> process_fn		1022209	1		&&			
ANR	1022603	PtrMemberAccess	arg -> orig_options		1022209	0					
ANR	1022604	Identifier	arg		1022209	0					
ANR	1022605	Identifier	orig_options		1022209	1					
ANR	1022606	PtrMemberAccess	arg -> orig_options -> process_fn		1022209	1					
ANR	1022607	PtrMemberAccess	arg -> orig_options		1022209	0					
ANR	1022608	Identifier	arg		1022209	0					
ANR	1022609	Identifier	orig_options		1022209	1					
ANR	1022610	Identifier	process_fn		1022209	1					
ANR	1022611	CompoundStatement		50:73:1823:1823	1022209	1					
ANR	1022612	ExpressionStatement	out_rect . p . y = rect -> p . y * arg -> upfactor / arg -> downfactor	2663:8:86772:86826	1022209	0	True				
ANR	1022613	AssignmentExpression	out_rect . p . y = rect -> p . y * arg -> upfactor / arg -> downfactor		1022209	0		=			
ANR	1022614	MemberAccess	out_rect . p . y		1022209	0					
ANR	1022615	MemberAccess	out_rect . p		1022209	0					
ANR	1022616	Identifier	out_rect		1022209	0					
ANR	1022617	Identifier	p		1022209	1					
ANR	1022618	Identifier	y		1022209	1					
ANR	1022619	MultiplicativeExpression	rect -> p . y * arg -> upfactor / arg -> downfactor		1022209	1		*			
ANR	1022620	MemberAccess	rect -> p . y		1022209	0					
ANR	1022621	PtrMemberAccess	rect -> p		1022209	0					
ANR	1022622	Identifier	rect		1022209	0					
ANR	1022623	Identifier	p		1022209	1					
ANR	1022624	Identifier	y		1022209	1					
ANR	1022625	MultiplicativeExpression	arg -> upfactor / arg -> downfactor		1022209	1		/			
ANR	1022626	PtrMemberAccess	arg -> upfactor		1022209	0					
ANR	1022627	Identifier	arg		1022209	0					
ANR	1022628	Identifier	upfactor		1022209	1					
ANR	1022629	PtrMemberAccess	arg -> downfactor		1022209	1					
ANR	1022630	Identifier	arg		1022209	0					
ANR	1022631	Identifier	downfactor		1022209	1					
ANR	1022632	ExpressionStatement	out_rect . q . y += out_rect . p . y	2664:8:86836:86864	1022209	1	True				
ANR	1022633	AssignmentExpression	out_rect . q . y += out_rect . p . y		1022209	0		+=			
ANR	1022634	MemberAccess	out_rect . q . y		1022209	0					
ANR	1022635	MemberAccess	out_rect . q		1022209	0					
ANR	1022636	Identifier	out_rect		1022209	0					
ANR	1022637	Identifier	q		1022209	1					
ANR	1022638	Identifier	y		1022209	1					
ANR	1022639	MemberAccess	out_rect . p . y		1022209	1					
ANR	1022640	MemberAccess	out_rect . p		1022209	0					
ANR	1022641	Identifier	out_rect		1022209	0					
ANR	1022642	Identifier	p		1022209	1					
ANR	1022643	Identifier	y		1022209	1					
ANR	1022644	ExpressionStatement	"code = arg -> orig_options -> process_fn ( arg -> orig_options -> arg , dev , ( buffer -> bdev ? buffer -> bdev : bdev ) , & out_rect , buffer -> orig_buffer )"	2665:8:86874:87099	1022209	2	True				
ANR	1022645	AssignmentExpression	"code = arg -> orig_options -> process_fn ( arg -> orig_options -> arg , dev , ( buffer -> bdev ? buffer -> bdev : bdev ) , & out_rect , buffer -> orig_buffer )"		1022209	0		=			
ANR	1022646	Identifier	code		1022209	0					
ANR	1022647	CallExpression	"arg -> orig_options -> process_fn ( arg -> orig_options -> arg , dev , ( buffer -> bdev ? buffer -> bdev : bdev ) , & out_rect , buffer -> orig_buffer )"		1022209	1					
ANR	1022648	Callee	arg -> orig_options -> process_fn		1022209	0					
ANR	1022649	PtrMemberAccess	arg -> orig_options -> process_fn		1022209	0					
ANR	1022650	PtrMemberAccess	arg -> orig_options		1022209	0					
ANR	1022651	Identifier	arg		1022209	0					
ANR	1022652	Identifier	orig_options		1022209	1					
ANR	1022653	Identifier	process_fn		1022209	1					
ANR	1022654	ArgumentList	arg -> orig_options -> arg		1022209	1					
ANR	1022655	Argument	arg -> orig_options -> arg		1022209	0					
ANR	1022656	PtrMemberAccess	arg -> orig_options -> arg		1022209	0					
ANR	1022657	PtrMemberAccess	arg -> orig_options		1022209	0					
ANR	1022658	Identifier	arg		1022209	0					
ANR	1022659	Identifier	orig_options		1022209	1					
ANR	1022660	Identifier	arg		1022209	1					
ANR	1022661	Argument	dev		1022209	1					
ANR	1022662	Identifier	dev		1022209	0					
ANR	1022663	Argument	buffer -> bdev ? buffer -> bdev : bdev		1022209	2					
ANR	1022664	ConditionalExpression	buffer -> bdev ? buffer -> bdev : bdev		1022209	0					
ANR	1022665	Condition	buffer -> bdev		1022209	0					
ANR	1022666	PtrMemberAccess	buffer -> bdev		1022209	0					
ANR	1022667	Identifier	buffer		1022209	0					
ANR	1022668	Identifier	bdev		1022209	1					
ANR	1022669	PtrMemberAccess	buffer -> bdev		1022209	1					
ANR	1022670	Identifier	buffer		1022209	0					
ANR	1022671	Identifier	bdev		1022209	1					
ANR	1022672	Identifier	bdev		1022209	2					
ANR	1022673	Argument	& out_rect		1022209	3					
ANR	1022674	UnaryOperationExpression	& out_rect		1022209	0					
ANR	1022675	UnaryOperator	&		1022209	0					
ANR	1022676	Identifier	out_rect		1022209	1					
ANR	1022677	Argument	buffer -> orig_buffer		1022209	4					
ANR	1022678	PtrMemberAccess	buffer -> orig_buffer		1022209	0					
ANR	1022679	Identifier	buffer		1022209	0					
ANR	1022680	Identifier	orig_buffer		1022209	1					
ANR	1022681	ReturnStatement	return code ;	2669:4:87111:87122	1022209	22	True				
ANR	1022682	Identifier	code		1022209	0					
ANR	1022683	ReturnType	static int		1022209	1					
ANR	1022684	Identifier	downscaler_process_fn		1022209	2					
ANR	1022685	ParameterList	"void * arg_ , gx_device * dev , gx_device * bdev , const gs_int_rect * rect , void * buffer_"		1022209	3					
ANR	1022686	Parameter	void * arg_	2612:33:84853:84862	1022209	0	True				
ANR	1022687	ParameterType	void *		1022209	0					
ANR	1022688	Identifier	arg_		1022209	1					
ANR	1022689	Parameter	gx_device * dev	2612:45:84865:84878	1022209	1	True				
ANR	1022690	ParameterType	gx_device *		1022209	0					
ANR	1022691	Identifier	dev		1022209	1					
ANR	1022692	Parameter	gx_device * bdev	2612:61:84881:84895	1022209	2	True				
ANR	1022693	ParameterType	gx_device *		1022209	0					
ANR	1022694	Identifier	bdev		1022209	1					
ANR	1022695	Parameter	const gs_int_rect * rect	2612:78:84898:84920	1022209	3	True				
ANR	1022696	ParameterType	const gs_int_rect *		1022209	0					
ANR	1022697	Identifier	rect		1022209	1					
ANR	1022698	Parameter	void * buffer_	2612:103:84923:84935	1022209	4	True				
ANR	1022699	ParameterType	void *		1022209	0					
ANR	1022700	Identifier	buffer_		1022209	1					
ANR	1022701	CFGEntryNode	ENTRY		1022209		True				
ANR	1022702	CFGExitNode	EXIT		1022209		True				
ANR	1022703	Symbol	in_rect . p . x		1022209						
ANR	1022704	Symbol	in_rect . p . y		1022209						
ANR	1022705	Symbol	rect -> p . x		1022209						
ANR	1022706	Symbol	rect -> p . y		1022209						
ANR	1022707	Symbol	out_rect		1022209						
ANR	1022708	Symbol	buffer_		1022209						
ANR	1022709	Symbol	rect -> q . y		1022209						
ANR	1022710	Symbol	rect -> q . x		1022209						
ANR	1022711	Symbol	arg -> ds . span		1022209						
ANR	1022712	Symbol	GB_RASTER_ANY		1022209						
ANR	1022713	Symbol	in_rect . q . x		1022209						
ANR	1022714	Symbol	arg -> ds		1022209						
ANR	1022715	Symbol	dev		1022209						
ANR	1022716	Symbol	in_rect . q . y		1022209						
ANR	1022717	Symbol	buffer		1022209						
ANR	1022718	Symbol	GB_ALPHA_NONE		1022209						
ANR	1022719	Symbol	& params		1022209						
ANR	1022720	Symbol	out_rect . q		1022209						
ANR	1022721	Symbol	in_rect . p		1022209						
ANR	1022722	Symbol	in_rect . q		1022209						
ANR	1022723	Symbol	NULL		1022209						
ANR	1022724	Symbol	& in_rect		1022209						
ANR	1022725	Symbol	out_rect . p		1022209						
ANR	1022726	Symbol	* * arg		1022209						
ANR	1022727	Symbol	params		1022209						
ANR	1022728	Symbol	in_rect		1022209						
ANR	1022729	Symbol	out_rect . q . y		1022209						
ANR	1022730	Symbol	GB_OFFSET_0		1022209						
ANR	1022731	Symbol	out_rect . q . x		1022209						
ANR	1022732	Symbol	& arg -> ds		1022209						
ANR	1022733	Symbol	in_ptr		1022209						
ANR	1022734	Symbol	* rect		1022209						
ANR	1022735	Symbol	arg -> orig_options		1022209						
ANR	1022736	Symbol	arg -> orig_options -> process_fn		1022209						
ANR	1022737	Symbol	* arg		1022209						
ANR	1022738	Symbol	buffer -> orig_buffer		1022209						
ANR	1022739	Symbol	code		1022209						
ANR	1022740	Symbol	out_rect . p . x		1022209						
ANR	1022741	Symbol	out_rect . p . y		1022209						
ANR	1022742	Symbol	raster_in		1022209						
ANR	1022743	Symbol	* params . data		1022209						
ANR	1022744	Symbol	get_bits_rectangle		1022209						
ANR	1022745	Symbol	rect		1022209						
ANR	1022746	Symbol	GB_COLORS_NATIVE		1022209						
ANR	1022747	Symbol	arg -> orig_options -> arg		1022209						
ANR	1022748	Symbol	dev_proc		1022209						
ANR	1022749	Symbol	arg		1022209						
ANR	1022750	Symbol	buffer -> bdev		1022209						
ANR	1022751	Symbol	bdev		1022209						
ANR	1022752	Symbol	rect -> q		1022209						
ANR	1022753	Symbol	& out_rect		1022209						
ANR	1022754	Symbol	* arg -> orig_options		1022209						
ANR	1022755	Symbol	rect -> p		1022209						
ANR	1022756	Symbol	GB_PACKING_CHUNKY		1022209						
ANR	1022757	Symbol	* params		1022209						
ANR	1022758	Symbol	GB_RETURN_POINTER		1022209						
ANR	1022759	Symbol	* buffer		1022209						
ANR	1022760	Symbol	arg_		1022209						
ANR	1022761	Symbol	raster_out		1022209						
ANR	1022762	Symbol	params . raster		1022209						
ANR	1022763	Symbol	params . data		1022209						
ANR	1022764	Symbol	params . options		1022209						
ANR	1022765	Symbol	GB_ALIGN_ANY		1022209						
ANR	1022766	Symbol	arg -> ds . down_core		1022209						
ANR	1022767	Symbol	out_ptr		1022209						
ANR	1022768	Symbol	arg -> downfactor		1022209						
ANR	1022769	Symbol	y		1022209						
ANR	1022770	Symbol	arg -> upfactor		1022209						
ANR	1022771	Function	downscaler_free_fn	2672:0:87127:87666							
ANR	1022772	FunctionDef	"downscaler_free_fn (void * arg_ , gx_device * dev , gs_memory_t * memory , void * buffer_)"		1022771	0					
ANR	1022773	CompoundStatement		2674:0:87222:87666	1022771	0					
ANR	1022774	IdentifierDeclStatement	downscaler_process_page_arg_t * arg = ( downscaler_process_page_arg_t * ) arg_ ;	2675:4:87228:87302	1022771	0	True				
ANR	1022775	IdentifierDecl	* arg = ( downscaler_process_page_arg_t * ) arg_		1022771	0					
ANR	1022776	IdentifierDeclType	downscaler_process_page_arg_t *		1022771	0					
ANR	1022777	Identifier	arg		1022771	1					
ANR	1022778	AssignmentExpression	* arg = ( downscaler_process_page_arg_t * ) arg_		1022771	2		=			
ANR	1022779	Identifier	arg		1022771	0					
ANR	1022780	CastExpression	( downscaler_process_page_arg_t * ) arg_		1022771	1					
ANR	1022781	CastTarget	downscaler_process_page_arg_t *		1022771	0					
ANR	1022782	Identifier	arg_		1022771	1					
ANR	1022783	IdentifierDeclStatement	downscaler_process_page_buffer_t * buffer = ( downscaler_process_page_buffer_t * ) buffer_ ;	2676:4:87308:87394	1022771	1	True				
ANR	1022784	IdentifierDecl	* buffer = ( downscaler_process_page_buffer_t * ) buffer_		1022771	0					
ANR	1022785	IdentifierDeclType	downscaler_process_page_buffer_t *		1022771	0					
ANR	1022786	Identifier	buffer		1022771	1					
ANR	1022787	AssignmentExpression	* buffer = ( downscaler_process_page_buffer_t * ) buffer_		1022771	2		=			
ANR	1022788	Identifier	buffer		1022771	0					
ANR	1022789	CastExpression	( downscaler_process_page_buffer_t * ) buffer_		1022771	1					
ANR	1022790	CastTarget	downscaler_process_page_buffer_t *		1022771	0					
ANR	1022791	Identifier	buffer_		1022771	1					
ANR	1022792	ExpressionStatement	"arg -> orig_options -> free_buffer_fn ( arg -> orig_options -> arg , dev , memory , buffer -> orig_buffer )"	2678:4:87401:87530	1022771	2	True				
ANR	1022793	CallExpression	"arg -> orig_options -> free_buffer_fn ( arg -> orig_options -> arg , dev , memory , buffer -> orig_buffer )"		1022771	0					
ANR	1022794	Callee	arg -> orig_options -> free_buffer_fn		1022771	0					
ANR	1022795	PtrMemberAccess	arg -> orig_options -> free_buffer_fn		1022771	0					
ANR	1022796	PtrMemberAccess	arg -> orig_options		1022771	0					
ANR	1022797	Identifier	arg		1022771	0					
ANR	1022798	Identifier	orig_options		1022771	1					
ANR	1022799	Identifier	free_buffer_fn		1022771	1					
ANR	1022800	ArgumentList	arg -> orig_options -> arg		1022771	1					
ANR	1022801	Argument	arg -> orig_options -> arg		1022771	0					
ANR	1022802	PtrMemberAccess	arg -> orig_options -> arg		1022771	0					
ANR	1022803	PtrMemberAccess	arg -> orig_options		1022771	0					
ANR	1022804	Identifier	arg		1022771	0					
ANR	1022805	Identifier	orig_options		1022771	1					
ANR	1022806	Identifier	arg		1022771	1					
ANR	1022807	Argument	dev		1022771	1					
ANR	1022808	Identifier	dev		1022771	0					
ANR	1022809	Argument	memory		1022771	2					
ANR	1022810	Identifier	memory		1022771	0					
ANR	1022811	Argument	buffer -> orig_buffer		1022771	3					
ANR	1022812	PtrMemberAccess	buffer -> orig_buffer		1022771	0					
ANR	1022813	Identifier	buffer		1022771	0					
ANR	1022814	Identifier	orig_buffer		1022771	1					
ANR	1022815	IfStatement	if ( buffer -> bdev )		1022771	3					
ANR	1022816	Condition	buffer -> bdev	2680:8:87540:87551	1022771	0	True				
ANR	1022817	PtrMemberAccess	buffer -> bdev		1022771	0					
ANR	1022818	Identifier	buffer		1022771	0					
ANR	1022819	Identifier	bdev		1022771	1					
ANR	1022820	ExpressionStatement	"dev_proc ( dev , close_device ) ( dev )"	2681:8:87562:87594	1022771	1	True				
ANR	1022821	CallExpression	"dev_proc ( dev , close_device ) ( dev )"		1022771	0					
ANR	1022822	Callee	"dev_proc ( dev , close_device )"		1022771	0					
ANR	1022823	CallExpression	"dev_proc ( dev , close_device )"		1022771	0					
ANR	1022824	Callee	dev_proc		1022771	0					
ANR	1022825	Identifier	dev_proc		1022771	0					
ANR	1022826	ArgumentList	dev		1022771	1					
ANR	1022827	Argument	dev		1022771	0					
ANR	1022828	Identifier	dev		1022771	0					
ANR	1022829	Argument	close_device		1022771	1					
ANR	1022830	Identifier	close_device		1022771	0					
ANR	1022831	ArgumentList	dev		1022771	1					
ANR	1022832	Argument	dev		1022771	0					
ANR	1022833	Identifier	dev		1022771	0					
ANR	1022834	ExpressionStatement	"gs_free_object ( memory , buffer , ""downscaler process_page buffer"" )"	2682:4:87600:87664	1022771	4	True				
ANR	1022835	CallExpression	"gs_free_object ( memory , buffer , ""downscaler process_page buffer"" )"		1022771	0					
ANR	1022836	Callee	gs_free_object		1022771	0					
ANR	1022837	Identifier	gs_free_object		1022771	0					
ANR	1022838	ArgumentList	memory		1022771	1					
ANR	1022839	Argument	memory		1022771	0					
ANR	1022840	Identifier	memory		1022771	0					
ANR	1022841	Argument	buffer		1022771	1					
ANR	1022842	Identifier	buffer		1022771	0					
ANR	1022843	Argument	"""downscaler process_page buffer"""		1022771	2					
ANR	1022844	PrimaryExpression	"""downscaler process_page buffer"""		1022771	0					
ANR	1022845	ReturnType	static void		1022771	1					
ANR	1022846	Identifier	downscaler_free_fn		1022771	2					
ANR	1022847	ParameterList	"void * arg_ , gx_device * dev , gs_memory_t * memory , void * buffer_"		1022771	3					
ANR	1022848	Parameter	void * arg_	2673:19:87158:87167	1022771	0	True				
ANR	1022849	ParameterType	void *		1022771	0					
ANR	1022850	Identifier	arg_		1022771	1					
ANR	1022851	Parameter	gx_device * dev	2673:31:87170:87183	1022771	1	True				
ANR	1022852	ParameterType	gx_device *		1022771	0					
ANR	1022853	Identifier	dev		1022771	1					
ANR	1022854	Parameter	gs_memory_t * memory	2673:47:87186:87204	1022771	2	True				
ANR	1022855	ParameterType	gs_memory_t *		1022771	0					
ANR	1022856	Identifier	memory		1022771	1					
ANR	1022857	Parameter	void * buffer_	2673:68:87207:87219	1022771	3	True				
ANR	1022858	ParameterType	void *		1022771	0					
ANR	1022859	Identifier	buffer_		1022771	1					
ANR	1022860	CFGEntryNode	ENTRY		1022771		True				
ANR	1022861	CFGExitNode	EXIT		1022771		True				
ANR	1022862	Symbol	buffer -> orig_buffer		1022771						
ANR	1022863	Symbol	* buffer		1022771						
ANR	1022864	Symbol	memory		1022771						
ANR	1022865	Symbol	arg_		1022771						
ANR	1022866	Symbol	buffer_		1022771						
ANR	1022867	Symbol	* * arg		1022771						
ANR	1022868	Symbol	close_device		1022771						
ANR	1022869	Symbol	arg -> orig_options -> arg		1022771						
ANR	1022870	Symbol	dev		1022771						
ANR	1022871	Symbol	arg		1022771						
ANR	1022872	Symbol	arg -> orig_options		1022771						
ANR	1022873	Symbol	buffer		1022771						
ANR	1022874	Symbol	buffer -> bdev		1022771						
ANR	1022875	Symbol	* arg -> orig_options		1022771						
ANR	1022876	Symbol	* arg		1022771						
ANR	1022877	Function	downscaler_output_fn	2685:0:87669:88050							
ANR	1022878	FunctionDef	"downscaler_output_fn (void * arg_ , gx_device * dev , void * buffer_)"		1022877	0					
ANR	1022879	CompoundStatement		2687:0:87744:88050	1022877	0					
ANR	1022880	IdentifierDeclStatement	downscaler_process_page_arg_t * arg = ( downscaler_process_page_arg_t * ) arg_ ;	2688:4:87750:87824	1022877	0	True				
ANR	1022881	IdentifierDecl	* arg = ( downscaler_process_page_arg_t * ) arg_		1022877	0					
ANR	1022882	IdentifierDeclType	downscaler_process_page_arg_t *		1022877	0					
ANR	1022883	Identifier	arg		1022877	1					
ANR	1022884	AssignmentExpression	* arg = ( downscaler_process_page_arg_t * ) arg_		1022877	2		=			
ANR	1022885	Identifier	arg		1022877	0					
ANR	1022886	CastExpression	( downscaler_process_page_arg_t * ) arg_		1022877	1					
ANR	1022887	CastTarget	downscaler_process_page_arg_t *		1022877	0					
ANR	1022888	Identifier	arg_		1022877	1					
ANR	1022889	IdentifierDeclStatement	downscaler_process_page_buffer_t * buffer = ( downscaler_process_page_buffer_t * ) buffer_ ;	2689:4:87830:87916	1022877	1	True				
ANR	1022890	IdentifierDecl	* buffer = ( downscaler_process_page_buffer_t * ) buffer_		1022877	0					
ANR	1022891	IdentifierDeclType	downscaler_process_page_buffer_t *		1022877	0					
ANR	1022892	Identifier	buffer		1022877	1					
ANR	1022893	AssignmentExpression	* buffer = ( downscaler_process_page_buffer_t * ) buffer_		1022877	2		=			
ANR	1022894	Identifier	buffer		1022877	0					
ANR	1022895	CastExpression	( downscaler_process_page_buffer_t * ) buffer_		1022877	1					
ANR	1022896	CastTarget	downscaler_process_page_buffer_t *		1022877	0					
ANR	1022897	Identifier	buffer_		1022877	1					
ANR	1022898	ReturnStatement	"return arg -> orig_options -> output_fn ( arg -> orig_options -> arg , dev , buffer -> orig_buffer ) ;"	2691:4:87923:88048	1022877	2	True				
ANR	1022899	CallExpression	"arg -> orig_options -> output_fn ( arg -> orig_options -> arg , dev , buffer -> orig_buffer )"		1022877	0					
ANR	1022900	Callee	arg -> orig_options -> output_fn		1022877	0					
ANR	1022901	PtrMemberAccess	arg -> orig_options -> output_fn		1022877	0					
ANR	1022902	PtrMemberAccess	arg -> orig_options		1022877	0					
ANR	1022903	Identifier	arg		1022877	0					
ANR	1022904	Identifier	orig_options		1022877	1					
ANR	1022905	Identifier	output_fn		1022877	1					
ANR	1022906	ArgumentList	arg -> orig_options -> arg		1022877	1					
ANR	1022907	Argument	arg -> orig_options -> arg		1022877	0					
ANR	1022908	PtrMemberAccess	arg -> orig_options -> arg		1022877	0					
ANR	1022909	PtrMemberAccess	arg -> orig_options		1022877	0					
ANR	1022910	Identifier	arg		1022877	0					
ANR	1022911	Identifier	orig_options		1022877	1					
ANR	1022912	Identifier	arg		1022877	1					
ANR	1022913	Argument	dev		1022877	1					
ANR	1022914	Identifier	dev		1022877	0					
ANR	1022915	Argument	buffer -> orig_buffer		1022877	2					
ANR	1022916	PtrMemberAccess	buffer -> orig_buffer		1022877	0					
ANR	1022917	Identifier	buffer		1022877	0					
ANR	1022918	Identifier	orig_buffer		1022877	1					
ANR	1022919	ReturnType	static int		1022877	1					
ANR	1022920	Identifier	downscaler_output_fn		1022877	2					
ANR	1022921	ParameterList	"void * arg_ , gx_device * dev , void * buffer_"		1022877	3					
ANR	1022922	Parameter	void * arg_	2686:21:87701:87710	1022877	0	True				
ANR	1022923	ParameterType	void *		1022877	0					
ANR	1022924	Identifier	arg_		1022877	1					
ANR	1022925	Parameter	gx_device * dev	2686:33:87713:87726	1022877	1	True				
ANR	1022926	ParameterType	gx_device *		1022877	0					
ANR	1022927	Identifier	dev		1022877	1					
ANR	1022928	Parameter	void * buffer_	2686:49:87729:87741	1022877	2	True				
ANR	1022929	ParameterType	void *		1022877	0					
ANR	1022930	Identifier	buffer_		1022877	1					
ANR	1022931	CFGEntryNode	ENTRY		1022877		True				
ANR	1022932	CFGExitNode	EXIT		1022877		True				
ANR	1022933	Symbol	buffer -> orig_buffer		1022877						
ANR	1022934	Symbol	* buffer		1022877						
ANR	1022935	Symbol	arg_		1022877						
ANR	1022936	Symbol	buffer_		1022877						
ANR	1022937	Symbol	* * arg		1022877						
ANR	1022938	Symbol	arg -> orig_options -> output_fn		1022877						
ANR	1022939	Symbol	arg -> orig_options -> arg		1022877						
ANR	1022940	Symbol	dev		1022877						
ANR	1022941	Symbol	arg		1022877						
ANR	1022942	Symbol	arg -> orig_options		1022877						
ANR	1022943	Symbol	buffer		1022877						
ANR	1022944	Symbol	* arg -> orig_options		1022877						
ANR	1022945	Symbol	* arg		1022877						
ANR	1022946	Function	gx_downscaler_process_page	2697:0:88139:90210							
ANR	1022947	FunctionDef	"gx_downscaler_process_page (gx_device * dev , gx_process_page_options_t * options , int factor)"		1022946	0					
ANR	1022948	CompoundStatement		2700:0:88335:90210	1022946	0					
ANR	1022949	IdentifierDeclStatement	downscaler_process_page_arg_t arg = { 0 } ;	2701:4:88341:88382	1022946	0	True				
ANR	1022950	IdentifierDecl	arg = { 0 }		1022946	0					
ANR	1022951	IdentifierDeclType	downscaler_process_page_arg_t		1022946	0					
ANR	1022952	Identifier	arg		1022946	1					
ANR	1022953	AssignmentExpression	arg = { 0 }		1022946	2		=			
ANR	1022954	Identifier	arg		1022946	0					
ANR	1022955	InitializerList	0		1022946	1					
ANR	1022956	PrimaryExpression	0		1022946	0					
ANR	1022957	IdentifierDeclStatement	gx_process_page_options_t my_options = { 0 } ;	2702:4:88388:88432	1022946	1	True				
ANR	1022958	IdentifierDecl	my_options = { 0 }		1022946	0					
ANR	1022959	IdentifierDeclType	gx_process_page_options_t		1022946	0					
ANR	1022960	Identifier	my_options		1022946	1					
ANR	1022961	AssignmentExpression	my_options = { 0 }		1022946	2		=			
ANR	1022962	Identifier	my_options		1022946	0					
ANR	1022963	InitializerList	0		1022946	1					
ANR	1022964	PrimaryExpression	0		1022946	0					
ANR	1022965	IdentifierDeclStatement	int num_comps = dev -> color_info . num_components ;	2703:4:88438:88484	1022946	2	True				
ANR	1022966	IdentifierDecl	num_comps = dev -> color_info . num_components		1022946	0					
ANR	1022967	IdentifierDeclType	int		1022946	0					
ANR	1022968	Identifier	num_comps		1022946	1					
ANR	1022969	AssignmentExpression	num_comps = dev -> color_info . num_components		1022946	2		=			
ANR	1022970	Identifier	num_comps		1022946	0					
ANR	1022971	MemberAccess	dev -> color_info . num_components		1022946	1					
ANR	1022972	PtrMemberAccess	dev -> color_info		1022946	0					
ANR	1022973	Identifier	dev		1022946	0					
ANR	1022974	Identifier	color_info		1022946	1					
ANR	1022975	Identifier	num_components		1022946	1					
ANR	1022976	IdentifierDeclStatement	int src_bpc = dev -> color_info . comp_bits [ 0 ] ;	2704:4:88490:88532	1022946	3	True				
ANR	1022977	IdentifierDecl	src_bpc = dev -> color_info . comp_bits [ 0 ]		1022946	0					
ANR	1022978	IdentifierDeclType	int		1022946	0					
ANR	1022979	Identifier	src_bpc		1022946	1					
ANR	1022980	AssignmentExpression	src_bpc = dev -> color_info . comp_bits [ 0 ]		1022946	2		=			
ANR	1022981	Identifier	src_bpc		1022946	0					
ANR	1022982	ArrayIndexing	dev -> color_info . comp_bits [ 0 ]		1022946	1					
ANR	1022983	MemberAccess	dev -> color_info . comp_bits		1022946	0					
ANR	1022984	PtrMemberAccess	dev -> color_info		1022946	0					
ANR	1022985	Identifier	dev		1022946	0					
ANR	1022986	Identifier	color_info		1022946	1					
ANR	1022987	Identifier	comp_bits		1022946	1					
ANR	1022988	PrimaryExpression	0		1022946	1					
ANR	1022989	IdentifierDeclStatement	int scaled_w ;	2705:4:88538:88550	1022946	4	True				
ANR	1022990	IdentifierDecl	scaled_w		1022946	0					
ANR	1022991	IdentifierDeclType	int		1022946	0					
ANR	1022992	Identifier	scaled_w		1022946	1					
ANR	1022993	IdentifierDeclStatement	gx_downscale_core * core ;	2706:4:88556:88579	1022946	5	True				
ANR	1022994	IdentifierDecl	* core		1022946	0					
ANR	1022995	IdentifierDeclType	gx_downscale_core *		1022946	0					
ANR	1022996	Identifier	core		1022946	1					
ANR	1022997	ExpressionStatement	arg . orig_options = options	2708:4:88586:88612	1022946	6	True				
ANR	1022998	AssignmentExpression	arg . orig_options = options		1022946	0		=			
ANR	1022999	MemberAccess	arg . orig_options		1022946	0					
ANR	1023000	Identifier	arg		1022946	0					
ANR	1023001	Identifier	orig_options		1022946	1					
ANR	1023002	Identifier	options		1022946	1					
ANR	1023003	ExpressionStatement	"decode_factor ( factor , & arg . upfactor , & arg . downfactor )"	2709:4:88618:88671	1022946	7	True				
ANR	1023004	CallExpression	"decode_factor ( factor , & arg . upfactor , & arg . downfactor )"		1022946	0					
ANR	1023005	Callee	decode_factor		1022946	0					
ANR	1023006	Identifier	decode_factor		1022946	0					
ANR	1023007	ArgumentList	factor		1022946	1					
ANR	1023008	Argument	factor		1022946	0					
ANR	1023009	Identifier	factor		1022946	0					
ANR	1023010	Argument	& arg . upfactor		1022946	1					
ANR	1023011	UnaryOperationExpression	& arg . upfactor		1022946	0					
ANR	1023012	UnaryOperator	&		1022946	0					
ANR	1023013	MemberAccess	arg . upfactor		1022946	1					
ANR	1023014	Identifier	arg		1022946	0					
ANR	1023015	Identifier	upfactor		1022946	1					
ANR	1023016	Argument	& arg . downfactor		1022946	2					
ANR	1023017	UnaryOperationExpression	& arg . downfactor		1022946	0					
ANR	1023018	UnaryOperator	&		1022946	0					
ANR	1023019	MemberAccess	arg . downfactor		1022946	1					
ANR	1023020	Identifier	arg		1022946	0					
ANR	1023021	Identifier	downfactor		1022946	1					
ANR	1023022	ExpressionStatement	arg . ds . dev = dev	2710:4:88677:88693	1022946	8	True				
ANR	1023023	AssignmentExpression	arg . ds . dev = dev		1022946	0		=			
ANR	1023024	MemberAccess	arg . ds . dev		1022946	0					
ANR	1023025	MemberAccess	arg . ds		1022946	0					
ANR	1023026	Identifier	arg		1022946	0					
ANR	1023027	Identifier	ds		1022946	1					
ANR	1023028	Identifier	dev		1022946	1					
ANR	1023029	Identifier	dev		1022946	1					
ANR	1023030	ExpressionStatement	arg . ds . width = ( dev -> width * arg . upfactor + arg . downfactor - 1 ) / arg . downfactor	2711:4:88699:88775	1022946	9	True				
ANR	1023031	AssignmentExpression	arg . ds . width = ( dev -> width * arg . upfactor + arg . downfactor - 1 ) / arg . downfactor		1022946	0		=			
ANR	1023032	MemberAccess	arg . ds . width		1022946	0					
ANR	1023033	MemberAccess	arg . ds		1022946	0					
ANR	1023034	Identifier	arg		1022946	0					
ANR	1023035	Identifier	ds		1022946	1					
ANR	1023036	Identifier	width		1022946	1					
ANR	1023037	MultiplicativeExpression	( dev -> width * arg . upfactor + arg . downfactor - 1 ) / arg . downfactor		1022946	1		/			
ANR	1023038	AdditiveExpression	dev -> width * arg . upfactor + arg . downfactor - 1		1022946	0		+			
ANR	1023039	MultiplicativeExpression	dev -> width * arg . upfactor		1022946	0		*			
ANR	1023040	PtrMemberAccess	dev -> width		1022946	0					
ANR	1023041	Identifier	dev		1022946	0					
ANR	1023042	Identifier	width		1022946	1					
ANR	1023043	MemberAccess	arg . upfactor		1022946	1					
ANR	1023044	Identifier	arg		1022946	0					
ANR	1023045	Identifier	upfactor		1022946	1					
ANR	1023046	AdditiveExpression	arg . downfactor - 1		1022946	1		-			
ANR	1023047	MemberAccess	arg . downfactor		1022946	0					
ANR	1023048	Identifier	arg		1022946	0					
ANR	1023049	Identifier	downfactor		1022946	1					
ANR	1023050	PrimaryExpression	1		1022946	1					
ANR	1023051	MemberAccess	arg . downfactor		1022946	1					
ANR	1023052	Identifier	arg		1022946	0					
ANR	1023053	Identifier	downfactor		1022946	1					
ANR	1023054	ExpressionStatement	arg . ds . awidth = arg . ds . width	2712:4:88781:88809	1022946	10	True				
ANR	1023055	AssignmentExpression	arg . ds . awidth = arg . ds . width		1022946	0		=			
ANR	1023056	MemberAccess	arg . ds . awidth		1022946	0					
ANR	1023057	MemberAccess	arg . ds		1022946	0					
ANR	1023058	Identifier	arg		1022946	0					
ANR	1023059	Identifier	ds		1022946	1					
ANR	1023060	Identifier	awidth		1022946	1					
ANR	1023061	MemberAccess	arg . ds . width		1022946	1					
ANR	1023062	MemberAccess	arg . ds		1022946	0					
ANR	1023063	Identifier	arg		1022946	0					
ANR	1023064	Identifier	ds		1022946	1					
ANR	1023065	Identifier	width		1022946	1					
ANR	1023066	ExpressionStatement	arg . ds . span = bitmap_raster ( dev -> width * num_comps * src_bpc )	2713:4:88815:88876	1022946	11	True				
ANR	1023067	AssignmentExpression	arg . ds . span = bitmap_raster ( dev -> width * num_comps * src_bpc )		1022946	0		=			
ANR	1023068	MemberAccess	arg . ds . span		1022946	0					
ANR	1023069	MemberAccess	arg . ds		1022946	0					
ANR	1023070	Identifier	arg		1022946	0					
ANR	1023071	Identifier	ds		1022946	1					
ANR	1023072	Identifier	span		1022946	1					
ANR	1023073	CallExpression	bitmap_raster ( dev -> width * num_comps * src_bpc )		1022946	1					
ANR	1023074	Callee	bitmap_raster		1022946	0					
ANR	1023075	Identifier	bitmap_raster		1022946	0					
ANR	1023076	ArgumentList	dev -> width * num_comps * src_bpc		1022946	1					
ANR	1023077	Argument	dev -> width * num_comps * src_bpc		1022946	0					
ANR	1023078	MultiplicativeExpression	dev -> width * num_comps * src_bpc		1022946	0		*			
ANR	1023079	PtrMemberAccess	dev -> width		1022946	0					
ANR	1023080	Identifier	dev		1022946	0					
ANR	1023081	Identifier	width		1022946	1					
ANR	1023082	MultiplicativeExpression	num_comps * src_bpc		1022946	1		*			
ANR	1023083	Identifier	num_comps		1022946	0					
ANR	1023084	Identifier	src_bpc		1022946	1					
ANR	1023085	ExpressionStatement	scaled_w = ( dev -> width * arg . upfactor + arg . downfactor - 1 ) / arg . downfactor	2714:4:88882:88954	1022946	12	True				
ANR	1023086	AssignmentExpression	scaled_w = ( dev -> width * arg . upfactor + arg . downfactor - 1 ) / arg . downfactor		1022946	0		=			
ANR	1023087	Identifier	scaled_w		1022946	0					
ANR	1023088	MultiplicativeExpression	( dev -> width * arg . upfactor + arg . downfactor - 1 ) / arg . downfactor		1022946	1		/			
ANR	1023089	AdditiveExpression	dev -> width * arg . upfactor + arg . downfactor - 1		1022946	0		+			
ANR	1023090	MultiplicativeExpression	dev -> width * arg . upfactor		1022946	0		*			
ANR	1023091	PtrMemberAccess	dev -> width		1022946	0					
ANR	1023092	Identifier	dev		1022946	0					
ANR	1023093	Identifier	width		1022946	1					
ANR	1023094	MemberAccess	arg . upfactor		1022946	1					
ANR	1023095	Identifier	arg		1022946	0					
ANR	1023096	Identifier	upfactor		1022946	1					
ANR	1023097	AdditiveExpression	arg . downfactor - 1		1022946	1		-			
ANR	1023098	MemberAccess	arg . downfactor		1022946	0					
ANR	1023099	Identifier	arg		1022946	0					
ANR	1023100	Identifier	downfactor		1022946	1					
ANR	1023101	PrimaryExpression	1		1022946	1					
ANR	1023102	MemberAccess	arg . downfactor		1022946	1					
ANR	1023103	Identifier	arg		1022946	0					
ANR	1023104	Identifier	downfactor		1022946	1					
ANR	1023105	ExpressionStatement	arg . ds . factor = factor	2715:4:88960:88982	1022946	13	True				
ANR	1023106	AssignmentExpression	arg . ds . factor = factor		1022946	0		=			
ANR	1023107	MemberAccess	arg . ds . factor		1022946	0					
ANR	1023108	MemberAccess	arg . ds		1022946	0					
ANR	1023109	Identifier	arg		1022946	0					
ANR	1023110	Identifier	ds		1022946	1					
ANR	1023111	Identifier	factor		1022946	1					
ANR	1023112	Identifier	factor		1022946	1					
ANR	1023113	ExpressionStatement	arg . ds . src_bpc = src_bpc	2716:4:88988:89012	1022946	14	True				
ANR	1023114	AssignmentExpression	arg . ds . src_bpc = src_bpc		1022946	0		=			
ANR	1023115	MemberAccess	arg . ds . src_bpc		1022946	0					
ANR	1023116	MemberAccess	arg . ds		1022946	0					
ANR	1023117	Identifier	arg		1022946	0					
ANR	1023118	Identifier	ds		1022946	1					
ANR	1023119	Identifier	src_bpc		1022946	1					
ANR	1023120	Identifier	src_bpc		1022946	1					
ANR	1023121	ExpressionStatement	arg . ds . scaled_span = bitmap_raster ( scaled_w * num_comps * src_bpc )	2717:4:89018:89084	1022946	15	True				
ANR	1023122	AssignmentExpression	arg . ds . scaled_span = bitmap_raster ( scaled_w * num_comps * src_bpc )		1022946	0		=			
ANR	1023123	MemberAccess	arg . ds . scaled_span		1022946	0					
ANR	1023124	MemberAccess	arg . ds		1022946	0					
ANR	1023125	Identifier	arg		1022946	0					
ANR	1023126	Identifier	ds		1022946	1					
ANR	1023127	Identifier	scaled_span		1022946	1					
ANR	1023128	CallExpression	bitmap_raster ( scaled_w * num_comps * src_bpc )		1022946	1					
ANR	1023129	Callee	bitmap_raster		1022946	0					
ANR	1023130	Identifier	bitmap_raster		1022946	0					
ANR	1023131	ArgumentList	scaled_w * num_comps * src_bpc		1022946	1					
ANR	1023132	Argument	scaled_w * num_comps * src_bpc		1022946	0					
ANR	1023133	MultiplicativeExpression	scaled_w * num_comps * src_bpc		1022946	0		*			
ANR	1023134	Identifier	scaled_w		1022946	0					
ANR	1023135	MultiplicativeExpression	num_comps * src_bpc		1022946	1		*			
ANR	1023136	Identifier	num_comps		1022946	0					
ANR	1023137	Identifier	src_bpc		1022946	1					
ANR	1023138	ExpressionStatement	arg . ds . num_planes = 0	2718:4:89090:89111	1022946	16	True				
ANR	1023139	AssignmentExpression	arg . ds . num_planes = 0		1022946	0		=			
ANR	1023140	MemberAccess	arg . ds . num_planes		1022946	0					
ANR	1023141	MemberAccess	arg . ds		1022946	0					
ANR	1023142	Identifier	arg		1022946	0					
ANR	1023143	Identifier	ds		1022946	1					
ANR	1023144	Identifier	num_planes		1022946	1					
ANR	1023145	PrimaryExpression	0		1022946	1					
ANR	1023146	IfStatement	if ( factor > 8 )		1022946	17					
ANR	1023147	Condition	factor > 8	2721:8:89159:89168	1022946	0	True				
ANR	1023148	RelationalExpression	factor > 8		1022946	0		>			
ANR	1023149	Identifier	factor		1022946	0					
ANR	1023150	PrimaryExpression	8		1022946	1					
ANR	1023151	CompoundStatement		23:4:839:839	1022946	1					
ANR	1023152	ReturnStatement	return gs_note_error ( gs_error_rangecheck ) ;	2723:8:89185:89226	1022946	0	True				
ANR	1023153	CallExpression	gs_note_error ( gs_error_rangecheck )		1022946	0					
ANR	1023154	Callee	gs_note_error		1022946	0					
ANR	1023155	Identifier	gs_note_error		1022946	0					
ANR	1023156	ArgumentList	gs_error_rangecheck		1022946	1					
ANR	1023157	Argument	gs_error_rangecheck		1022946	0					
ANR	1023158	Identifier	gs_error_rangecheck		1022946	0					
ANR	1023159	ElseStatement	else		1022946	0					
ANR	1023160	IfStatement	if ( ( src_bpc == 16 ) && ( num_comps == 1 ) )		1022946	0					
ANR	1023161	Condition	( src_bpc == 16 ) && ( num_comps == 1 )	2725:13:89247:89281	1022946	0	True				
ANR	1023162	AndExpression	( src_bpc == 16 ) && ( num_comps == 1 )		1022946	0		&&			
ANR	1023163	EqualityExpression	src_bpc == 16		1022946	0		==			
ANR	1023164	Identifier	src_bpc		1022946	0					
ANR	1023165	PrimaryExpression	16		1022946	1					
ANR	1023166	EqualityExpression	num_comps == 1		1022946	1		==			
ANR	1023167	Identifier	num_comps		1022946	0					
ANR	1023168	PrimaryExpression	1		1022946	1					
ANR	1023169	CompoundStatement		27:4:952:952	1022946	1					
ANR	1023170	ExpressionStatement	core = & down_core16	2727:8:89298:89317	1022946	0	True				
ANR	1023171	AssignmentExpression	core = & down_core16		1022946	0		=			
ANR	1023172	Identifier	core		1022946	0					
ANR	1023173	UnaryOperationExpression	& down_core16		1022946	1					
ANR	1023174	UnaryOperator	&		1022946	0					
ANR	1023175	Identifier	down_core16		1022946	1					
ANR	1023176	ElseStatement	else		1022946	0					
ANR	1023177	IfStatement	if ( factor == 1 )		1022946	0					
ANR	1023178	Condition	factor == 1	2729:13:89338:89348	1022946	0	True				
ANR	1023179	EqualityExpression	factor == 1		1022946	0		==			
ANR	1023180	Identifier	factor		1022946	0					
ANR	1023181	PrimaryExpression	1		1022946	1					
ANR	1023182	ExpressionStatement	core = NULL	2730:8:89359:89370	1022946	1	True				
ANR	1023183	AssignmentExpression	core = NULL		1022946	0		=			
ANR	1023184	Identifier	core		1022946	0					
ANR	1023185	Identifier	NULL		1022946	1					
ANR	1023186	ElseStatement	else		1022946	0					
ANR	1023187	IfStatement	if ( ( src_bpc == 8 ) && ( num_comps == 1 ) )		1022946	0					
ANR	1023188	Condition	( src_bpc == 8 ) && ( num_comps == 1 )	2731:13:89385:89418	1022946	0	True				
ANR	1023189	AndExpression	( src_bpc == 8 ) && ( num_comps == 1 )		1022946	0		&&			
ANR	1023190	EqualityExpression	src_bpc == 8		1022946	0		==			
ANR	1023191	Identifier	src_bpc		1022946	0					
ANR	1023192	PrimaryExpression	8		1022946	1					
ANR	1023193	EqualityExpression	num_comps == 1		1022946	1		==			
ANR	1023194	Identifier	num_comps		1022946	0					
ANR	1023195	PrimaryExpression	1		1022946	1					
ANR	1023196	CompoundStatement		33:4:1089:1089	1022946	1					
ANR	1023197	IfStatement	if ( factor == 4 )		1022946	0					
ANR	1023198	Condition	factor == 4	2733:12:89439:89449	1022946	0	True				
ANR	1023199	EqualityExpression	factor == 4		1022946	0		==			
ANR	1023200	Identifier	factor		1022946	0					
ANR	1023201	PrimaryExpression	4		1022946	1					
ANR	1023202	ExpressionStatement	core = & down_core8_4	2734:12:89464:89484	1022946	1	True				
ANR	1023203	AssignmentExpression	core = & down_core8_4		1022946	0		=			
ANR	1023204	Identifier	core		1022946	0					
ANR	1023205	UnaryOperationExpression	& down_core8_4		1022946	1					
ANR	1023206	UnaryOperator	&		1022946	0					
ANR	1023207	Identifier	down_core8_4		1022946	1					
ANR	1023208	ElseStatement	else		1022946	0					
ANR	1023209	IfStatement	if ( factor == 3 )		1022946	0					
ANR	1023210	Condition	factor == 3	2735:17:89503:89513	1022946	0	True				
ANR	1023211	EqualityExpression	factor == 3		1022946	0		==			
ANR	1023212	Identifier	factor		1022946	0					
ANR	1023213	PrimaryExpression	3		1022946	1					
ANR	1023214	ExpressionStatement	core = & down_core8_3	2736:12:89528:89548	1022946	1	True				
ANR	1023215	AssignmentExpression	core = & down_core8_3		1022946	0		=			
ANR	1023216	Identifier	core		1022946	0					
ANR	1023217	UnaryOperationExpression	& down_core8_3		1022946	1					
ANR	1023218	UnaryOperator	&		1022946	0					
ANR	1023219	Identifier	down_core8_3		1022946	1					
ANR	1023220	ElseStatement	else		1022946	0					
ANR	1023221	IfStatement	if ( factor == 2 )		1022946	0					
ANR	1023222	Condition	factor == 2	2737:17:89567:89577	1022946	0	True				
ANR	1023223	EqualityExpression	factor == 2		1022946	0		==			
ANR	1023224	Identifier	factor		1022946	0					
ANR	1023225	PrimaryExpression	2		1022946	1					
ANR	1023226	ExpressionStatement	core = & down_core8_2	2738:12:89592:89612	1022946	1	True				
ANR	1023227	AssignmentExpression	core = & down_core8_2		1022946	0		=			
ANR	1023228	Identifier	core		1022946	0					
ANR	1023229	UnaryOperationExpression	& down_core8_2		1022946	1					
ANR	1023230	UnaryOperator	&		1022946	0					
ANR	1023231	Identifier	down_core8_2		1022946	1					
ANR	1023232	ElseStatement	else		1022946	0					
ANR	1023233	ExpressionStatement	core = & down_core8	2740:12:89639:89657	1022946	0	True				
ANR	1023234	AssignmentExpression	core = & down_core8		1022946	0		=			
ANR	1023235	Identifier	core		1022946	0					
ANR	1023236	UnaryOperationExpression	& down_core8		1022946	1					
ANR	1023237	UnaryOperator	&		1022946	0					
ANR	1023238	Identifier	down_core8		1022946	1					
ANR	1023239	ElseStatement	else		1022946	0					
ANR	1023240	IfStatement	if ( ( src_bpc == 8 ) && ( num_comps == 3 ) )		1022946	0					
ANR	1023241	Condition	( src_bpc == 8 ) && ( num_comps == 3 )	2742:13:89678:89711	1022946	0	True				
ANR	1023242	AndExpression	( src_bpc == 8 ) && ( num_comps == 3 )		1022946	0		&&			
ANR	1023243	EqualityExpression	src_bpc == 8		1022946	0		==			
ANR	1023244	Identifier	src_bpc		1022946	0					
ANR	1023245	PrimaryExpression	8		1022946	1					
ANR	1023246	EqualityExpression	num_comps == 3		1022946	1		==			
ANR	1023247	Identifier	num_comps		1022946	0					
ANR	1023248	PrimaryExpression	3		1022946	1					
ANR	1023249	ExpressionStatement	core = & down_core24	2743:8:89722:89741	1022946	1	True				
ANR	1023250	AssignmentExpression	core = & down_core24		1022946	0		=			
ANR	1023251	Identifier	core		1022946	0					
ANR	1023252	UnaryOperationExpression	& down_core24		1022946	1					
ANR	1023253	UnaryOperator	&		1022946	0					
ANR	1023254	Identifier	down_core24		1022946	1					
ANR	1023255	ElseStatement	else		1022946	0					
ANR	1023256	IfStatement	if ( ( src_bpc == 8 ) && ( num_comps == 4 ) )		1022946	0					
ANR	1023257	Condition	( src_bpc == 8 ) && ( num_comps == 4 )	2744:13:89756:89789	1022946	0	True				
ANR	1023258	AndExpression	( src_bpc == 8 ) && ( num_comps == 4 )		1022946	0		&&			
ANR	1023259	EqualityExpression	src_bpc == 8		1022946	0		==			
ANR	1023260	Identifier	src_bpc		1022946	0					
ANR	1023261	PrimaryExpression	8		1022946	1					
ANR	1023262	EqualityExpression	num_comps == 4		1022946	1		==			
ANR	1023263	Identifier	num_comps		1022946	0					
ANR	1023264	PrimaryExpression	4		1022946	1					
ANR	1023265	ExpressionStatement	core = & down_core32	2745:9:89801:89820	1022946	1	True				
ANR	1023266	AssignmentExpression	core = & down_core32		1022946	0		=			
ANR	1023267	Identifier	core		1022946	0					
ANR	1023268	UnaryOperationExpression	& down_core32		1022946	1					
ANR	1023269	UnaryOperator	&		1022946	0					
ANR	1023270	Identifier	down_core32		1022946	1					
ANR	1023271	ElseStatement	else		1022946	0					
ANR	1023272	CompoundStatement		47:9:1495:1495	1022946	0					
ANR	1023273	ReturnStatement	return gs_note_error ( gs_error_rangecheck ) ;	2747:8:89841:89882	1022946	0	True				
ANR	1023274	CallExpression	gs_note_error ( gs_error_rangecheck )		1022946	0					
ANR	1023275	Callee	gs_note_error		1022946	0					
ANR	1023276	Identifier	gs_note_error		1022946	0					
ANR	1023277	ArgumentList	gs_error_rangecheck		1022946	1					
ANR	1023278	Argument	gs_error_rangecheck		1022946	0					
ANR	1023279	Identifier	gs_error_rangecheck		1022946	0					
ANR	1023280	ExpressionStatement	arg . ds . down_core = core	2749:4:89894:89917	1022946	18	True				
ANR	1023281	AssignmentExpression	arg . ds . down_core = core		1022946	0		=			
ANR	1023282	MemberAccess	arg . ds . down_core		1022946	0					
ANR	1023283	MemberAccess	arg . ds		1022946	0					
ANR	1023284	Identifier	arg		1022946	0					
ANR	1023285	Identifier	ds		1022946	1					
ANR	1023286	Identifier	down_core		1022946	1					
ANR	1023287	Identifier	core		1022946	1					
ANR	1023288	ExpressionStatement	my_options . init_buffer_fn = downscaler_init_fn	2751:4:89924:89970	1022946	19	True				
ANR	1023289	AssignmentExpression	my_options . init_buffer_fn = downscaler_init_fn		1022946	0		=			
ANR	1023290	MemberAccess	my_options . init_buffer_fn		1022946	0					
ANR	1023291	Identifier	my_options		1022946	0					
ANR	1023292	Identifier	init_buffer_fn		1022946	1					
ANR	1023293	Identifier	downscaler_init_fn		1022946	1					
ANR	1023294	ExpressionStatement	my_options . process_fn = downscaler_process_fn	2752:4:89976:90021	1022946	20	True				
ANR	1023295	AssignmentExpression	my_options . process_fn = downscaler_process_fn		1022946	0		=			
ANR	1023296	MemberAccess	my_options . process_fn		1022946	0					
ANR	1023297	Identifier	my_options		1022946	0					
ANR	1023298	Identifier	process_fn		1022946	1					
ANR	1023299	Identifier	downscaler_process_fn		1022946	1					
ANR	1023300	ExpressionStatement	my_options . output_fn = downscaler_output_fn	2753:4:90027:90070	1022946	21	True				
ANR	1023301	AssignmentExpression	my_options . output_fn = downscaler_output_fn		1022946	0		=			
ANR	1023302	MemberAccess	my_options . output_fn		1022946	0					
ANR	1023303	Identifier	my_options		1022946	0					
ANR	1023304	Identifier	output_fn		1022946	1					
ANR	1023305	Identifier	downscaler_output_fn		1022946	1					
ANR	1023306	ExpressionStatement	my_options . free_buffer_fn = downscaler_free_fn	2754:4:90076:90122	1022946	22	True				
ANR	1023307	AssignmentExpression	my_options . free_buffer_fn = downscaler_free_fn		1022946	0		=			
ANR	1023308	MemberAccess	my_options . free_buffer_fn		1022946	0					
ANR	1023309	Identifier	my_options		1022946	0					
ANR	1023310	Identifier	free_buffer_fn		1022946	1					
ANR	1023311	Identifier	downscaler_free_fn		1022946	1					
ANR	1023312	ExpressionStatement	my_options . arg = & arg	2755:4:90128:90149	1022946	23	True				
ANR	1023313	AssignmentExpression	my_options . arg = & arg		1022946	0		=			
ANR	1023314	MemberAccess	my_options . arg		1022946	0					
ANR	1023315	Identifier	my_options		1022946	0					
ANR	1023316	Identifier	arg		1022946	1					
ANR	1023317	UnaryOperationExpression	& arg		1022946	1					
ANR	1023318	UnaryOperator	&		1022946	0					
ANR	1023319	Identifier	arg		1022946	1					
ANR	1023320	ReturnStatement	"return dev_proc ( dev , process_page ) ( dev , & my_options ) ;"	2757:4:90156:90208	1022946	24	True				
ANR	1023321	CallExpression	"dev_proc ( dev , process_page ) ( dev , & my_options )"		1022946	0					
ANR	1023322	Callee	"dev_proc ( dev , process_page )"		1022946	0					
ANR	1023323	CallExpression	"dev_proc ( dev , process_page )"		1022946	0					
ANR	1023324	Callee	dev_proc		1022946	0					
ANR	1023325	Identifier	dev_proc		1022946	0					
ANR	1023326	ArgumentList	dev		1022946	1					
ANR	1023327	Argument	dev		1022946	0					
ANR	1023328	Identifier	dev		1022946	0					
ANR	1023329	Argument	process_page		1022946	1					
ANR	1023330	Identifier	process_page		1022946	0					
ANR	1023331	ArgumentList	dev		1022946	1					
ANR	1023332	Argument	dev		1022946	0					
ANR	1023333	Identifier	dev		1022946	0					
ANR	1023334	Argument	& my_options		1022946	1					
ANR	1023335	UnaryOperationExpression	& my_options		1022946	0					
ANR	1023336	UnaryOperator	&		1022946	0					
ANR	1023337	Identifier	my_options		1022946	1					
ANR	1023338	ReturnType	int		1022946	1					
ANR	1023339	Identifier	gx_downscaler_process_page		1022946	2					
ANR	1023340	ParameterList	"gx_device * dev , gx_process_page_options_t * options , int factor"		1022946	3					
ANR	1023341	Parameter	gx_device * dev	2697:31:88170:88199	1022946	0	True				
ANR	1023342	ParameterType	gx_device *		1022946	0					
ANR	1023343	Identifier	dev		1022946	1					
ANR	1023344	Parameter	gx_process_page_options_t * options	2698:31:88233:88266	1022946	1	True				
ANR	1023345	ParameterType	gx_process_page_options_t *		1022946	0					
ANR	1023346	Identifier	options		1022946	1					
ANR	1023347	Parameter	int factor	2699:31:88300:88332	1022946	2	True				
ANR	1023348	ParameterType	int		1022946	0					
ANR	1023349	Identifier	factor		1022946	1					
ANR	1023350	CFGEntryNode	ENTRY		1022946		True				
ANR	1023351	CFGExitNode	EXIT		1022946		True				
ANR	1023352	Symbol	my_options . output_fn		1022946						
ANR	1023353	Symbol	gs_error_rangecheck		1022946						
ANR	1023354	Symbol	scaled_w		1022946						
ANR	1023355	Symbol	my_options . init_buffer_fn		1022946						
ANR	1023356	Symbol	arg . downfactor		1022946						
ANR	1023357	Symbol	arg . upfactor		1022946						
ANR	1023358	Symbol	downscaler_free_fn		1022946						
ANR	1023359	Symbol	process_page		1022946						
ANR	1023360	Symbol	dev		1022946						
ANR	1023361	Symbol	* dev -> color_info . comp_bits		1022946						
ANR	1023362	Symbol	& down_core32		1022946						
ANR	1023363	Symbol	options		1022946						
ANR	1023364	Symbol	arg . ds . awidth		1022946						
ANR	1023365	Symbol	arg . ds . width		1022946						
ANR	1023366	Symbol	my_options . free_buffer_fn		1022946						
ANR	1023367	Symbol	downscaler_output_fn		1022946						
ANR	1023368	Symbol	NULL		1022946						
ANR	1023369	Symbol	dev -> color_info . num_components		1022946						
ANR	1023370	Symbol	arg . ds . scaled_span		1022946						
ANR	1023371	Symbol	core		1022946						
ANR	1023372	Symbol	my_options		1022946						
ANR	1023373	Symbol	arg . ds		1022946						
ANR	1023374	Symbol	arg . orig_options		1022946						
ANR	1023375	Symbol	* dev		1022946						
ANR	1023376	Symbol	arg . ds . dev		1022946						
ANR	1023377	Symbol	arg . ds . span		1022946						
ANR	1023378	Symbol	dev -> color_info		1022946						
ANR	1023379	Symbol	& down_core16		1022946						
ANR	1023380	Symbol	& down_core8_2		1022946						
ANR	1023381	Symbol	dev -> color_info . comp_bits		1022946						
ANR	1023382	Symbol	& down_core8_4		1022946						
ANR	1023383	Symbol	dev_proc		1022946						
ANR	1023384	Symbol	arg		1022946						
ANR	1023385	Symbol	num_comps		1022946						
ANR	1023386	Symbol	& down_core8_3		1022946						
ANR	1023387	Symbol	downscaler_init_fn		1022946						
ANR	1023388	Symbol	factor		1022946						
ANR	1023389	Symbol	& arg . upfactor		1022946						
ANR	1023390	Symbol	& arg . downfactor		1022946						
ANR	1023391	Symbol	downscaler_process_fn		1022946						
ANR	1023392	Symbol	* * dev		1022946						
ANR	1023393	Symbol	* dev -> color_info		1022946						
ANR	1023394	Symbol	arg . ds . src_bpc		1022946						
ANR	1023395	Symbol	arg . ds . down_core		1022946						
ANR	1023396	Symbol	& my_options		1022946						
ANR	1023397	Symbol	src_bpc		1022946						
ANR	1023398	Symbol	bitmap_raster		1022946						
ANR	1023399	Symbol	gs_note_error		1022946						
ANR	1023400	Symbol	arg . ds . factor		1022946						
ANR	1023401	Symbol	& down_core24		1022946						
ANR	1023402	Symbol	dev -> width		1022946						
ANR	1023403	Symbol	my_options . process_fn		1022946						
ANR	1023404	Symbol	arg . ds . num_planes		1022946						
ANR	1023405	Symbol	& down_core8		1022946						
ANR	1023406	Symbol	& arg		1022946						
ANR	1023407	Symbol	my_options . arg		1022946						
ANR	1023408	Function	gx_downscaler_read_params	2760:0:90213:94526							
ANR	1023409	FunctionDef	"gx_downscaler_read_params (gs_param_list * plist , gx_downscaler_params * params , int features)"		1023408	0					
ANR	1023410	CompoundStatement		2763:0:90394:94526	1023408	0					
ANR	1023411	IdentifierDeclStatement	int code ;	2764:4:90400:90408	1023408	0	True				
ANR	1023412	IdentifierDecl	code		1023408	0					
ANR	1023413	IdentifierDeclType	int		1023408	0					
ANR	1023414	Identifier	code		1023408	1					
ANR	1023415	IdentifierDeclStatement	"int downscale , mfs , ets ;"	2765:4:90414:90437	1023408	1	True				
ANR	1023416	IdentifierDecl	downscale		1023408	0					
ANR	1023417	IdentifierDeclType	int		1023408	0					
ANR	1023418	Identifier	downscale		1023408	1					
ANR	1023419	IdentifierDecl	mfs		1023408	1					
ANR	1023420	IdentifierDeclType	int		1023408	0					
ANR	1023421	Identifier	mfs		1023408	1					
ANR	1023422	IdentifierDecl	ets		1023408	2					
ANR	1023423	IdentifierDeclType	int		1023408	0					
ANR	1023424	Identifier	ets		1023408	1					
ANR	1023425	IdentifierDeclStatement	"int trap_w , trap_h ;"	2766:4:90443:90461	1023408	2	True				
ANR	1023426	IdentifierDecl	trap_w		1023408	0					
ANR	1023427	IdentifierDeclType	int		1023408	0					
ANR	1023428	Identifier	trap_w		1023408	1					
ANR	1023429	IdentifierDecl	trap_h		1023408	1					
ANR	1023430	IdentifierDeclType	int		1023408	0					
ANR	1023431	Identifier	trap_h		1023408	1					
ANR	1023432	IdentifierDeclStatement	const char * param_name ;	2767:4:90467:90489	1023408	3	True				
ANR	1023433	IdentifierDecl	* param_name		1023408	0					
ANR	1023434	IdentifierDeclType	const char *		1023408	0					
ANR	1023435	Identifier	param_name		1023408	1					
ANR	1023436	IdentifierDeclStatement	gs_param_int_array trap_order ;	2768:4:90495:90524	1023408	4	True				
ANR	1023437	IdentifierDecl	trap_order		1023408	0					
ANR	1023438	IdentifierDeclType	gs_param_int_array		1023408	0					
ANR	1023439	Identifier	trap_order		1023408	1					
ANR	1023440	ExpressionStatement	trap_order . data = NULL	2770:4:90531:90553	1023408	5	True				
ANR	1023441	AssignmentExpression	trap_order . data = NULL		1023408	0		=			
ANR	1023442	MemberAccess	trap_order . data		1023408	0					
ANR	1023443	Identifier	trap_order		1023408	0					
ANR	1023444	Identifier	data		1023408	1					
ANR	1023445	Identifier	NULL		1023408	1					
ANR	1023446	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""DownScaleFactor"" ) , & downscale ) )"		1023408	6					
ANR	1023447	Condition	"code = param_read_int ( plist , ( param_name = ""DownScaleFactor"" ) , & downscale )"	2772:12:90568:90711	1023408	0	True				
ANR	1023448	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""DownScaleFactor"" ) , & downscale )"		1023408	0		=			
ANR	1023449	Identifier	code		1023408	0					
ANR	1023450	CallExpression	"param_read_int ( plist , ( param_name = ""DownScaleFactor"" ) , & downscale )"		1023408	1					
ANR	1023451	Callee	param_read_int		1023408	0					
ANR	1023452	Identifier	param_read_int		1023408	0					
ANR	1023453	ArgumentList	plist		1023408	1					
ANR	1023454	Argument	plist		1023408	0					
ANR	1023455	Identifier	plist		1023408	0					
ANR	1023456	Argument	"param_name = ""DownScaleFactor"""		1023408	1					
ANR	1023457	AssignmentExpression	"param_name = ""DownScaleFactor"""		1023408	0		=			
ANR	1023458	Identifier	param_name		1023408	0					
ANR	1023459	PrimaryExpression	"""DownScaleFactor"""		1023408	1					
ANR	1023460	Argument	& downscale		1023408	2					
ANR	1023461	UnaryOperationExpression	& downscale		1023408	0					
ANR	1023462	UnaryOperator	&		1023408	0					
ANR	1023463	Identifier	downscale		1023408	1					
ANR	1023464	CompoundStatement		12:48:319:319	1023408	1					
ANR	1023465	Label	case 1 :	2775:8:90724:90730	1023408	0	True				
ANR	1023466	BreakStatement	break ;	2776:12:90744:90749	1023408	1	True				
ANR	1023467	Label	case 0 :	2777:8:90759:90765	1023408	2	True				
ANR	1023468	IfStatement	if ( downscale >= 1 )		1023408	3					
ANR	1023469	Condition	downscale >= 1	2778:16:90783:90796	1023408	0	True				
ANR	1023470	RelationalExpression	downscale >= 1		1023408	0		>=			
ANR	1023471	Identifier	downscale		1023408	0					
ANR	1023472	PrimaryExpression	1		1023408	1					
ANR	1023473	CompoundStatement		16:32:404:404	1023408	1					
ANR	1023474	ExpressionStatement	params -> downscale_factor = downscale	2779:16:90817:90853	1023408	0	True				
ANR	1023475	AssignmentExpression	params -> downscale_factor = downscale		1023408	0		=			
ANR	1023476	PtrMemberAccess	params -> downscale_factor		1023408	0					
ANR	1023477	Identifier	params		1023408	0					
ANR	1023478	Identifier	downscale_factor		1023408	1					
ANR	1023479	Identifier	downscale		1023408	1					
ANR	1023480	BreakStatement	break ;	2780:16:90871:90876	1023408	1	True				
ANR	1023481	ExpressionStatement	code = gs_error_rangecheck	2782:12:90904:90930	1023408	4	True				
ANR	1023482	AssignmentExpression	code = gs_error_rangecheck		1023408	0		=			
ANR	1023483	Identifier	code		1023408	0					
ANR	1023484	Identifier	gs_error_rangecheck		1023408	1					
ANR	1023485	Label	default :	2783:8:90940:90947	1023408	5	True				
ANR	1023486	Identifier	default		1023408	0					
ANR	1023487	ExpressionStatement	"param_signal_error ( plist , param_name , code )"	2784:12:90961:91004	1023408	6	True				
ANR	1023488	CallExpression	"param_signal_error ( plist , param_name , code )"		1023408	0					
ANR	1023489	Callee	param_signal_error		1023408	0					
ANR	1023490	Identifier	param_signal_error		1023408	0					
ANR	1023491	ArgumentList	plist		1023408	1					
ANR	1023492	Argument	plist		1023408	0					
ANR	1023493	Identifier	plist		1023408	0					
ANR	1023494	Argument	param_name		1023408	1					
ANR	1023495	Identifier	param_name		1023408	0					
ANR	1023496	Argument	code		1023408	2					
ANR	1023497	Identifier	code		1023408	0					
ANR	1023498	ReturnStatement	return code ;	2785:12:91018:91029	1023408	7	True				
ANR	1023499	Identifier	code		1023408	0					
ANR	1023500	IfStatement	if ( features & GX_DOWNSCALER_PARAMS_MFS )		1023408	7					
ANR	1023501	Condition	features & GX_DOWNSCALER_PARAMS_MFS	2788:8:91046:91080	1023408	0	True				
ANR	1023502	BitAndExpression	features & GX_DOWNSCALER_PARAMS_MFS		1023408	0		&			
ANR	1023503	Identifier	features		1023408	0					
ANR	1023504	Identifier	GX_DOWNSCALER_PARAMS_MFS		1023408	1					
ANR	1023505	CompoundStatement		27:4:692:692	1023408	1					
ANR	1023506	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""MinFeatureSize"" ) , & mfs ) )"		1023408	0					
ANR	1023507	Condition	"code = param_read_int ( plist , ( param_name = ""MinFeatureSize"" ) , & mfs )"	2790:16:91105:91171	1023408	0	True				
ANR	1023508	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""MinFeatureSize"" ) , & mfs )"		1023408	0		=			
ANR	1023509	Identifier	code		1023408	0					
ANR	1023510	CallExpression	"param_read_int ( plist , ( param_name = ""MinFeatureSize"" ) , & mfs )"		1023408	1					
ANR	1023511	Callee	param_read_int		1023408	0					
ANR	1023512	Identifier	param_read_int		1023408	0					
ANR	1023513	ArgumentList	plist		1023408	1					
ANR	1023514	Argument	plist		1023408	0					
ANR	1023515	Identifier	plist		1023408	0					
ANR	1023516	Argument	"param_name = ""MinFeatureSize"""		1023408	1					
ANR	1023517	AssignmentExpression	"param_name = ""MinFeatureSize"""		1023408	0		=			
ANR	1023518	Identifier	param_name		1023408	0					
ANR	1023519	PrimaryExpression	"""MinFeatureSize"""		1023408	1					
ANR	1023520	Argument	& mfs		1023408	2					
ANR	1023521	UnaryOperationExpression	& mfs		1023408	0					
ANR	1023522	UnaryOperator	&		1023408	0					
ANR	1023523	Identifier	mfs		1023408	1					
ANR	1023524	CompoundStatement		28:85:779:779	1023408	1					
ANR	1023525	Label	case 1 :	2791:12:91188:91194	1023408	0	True				
ANR	1023526	BreakStatement	break ;	2792:16:91212:91217	1023408	1	True				
ANR	1023527	Label	case 0 :	2793:12:91231:91237	1023408	2	True				
ANR	1023528	IfStatement	if ( ( mfs >= 0 ) && ( mfs <= 4 ) )		1023408	3					
ANR	1023529	Condition	( mfs >= 0 ) && ( mfs <= 4 )	2794:20:91259:91282	1023408	0	True				
ANR	1023530	AndExpression	( mfs >= 0 ) && ( mfs <= 4 )		1023408	0		&&			
ANR	1023531	RelationalExpression	mfs >= 0		1023408	0		>=			
ANR	1023532	Identifier	mfs		1023408	0					
ANR	1023533	PrimaryExpression	0		1023408	1					
ANR	1023534	RelationalExpression	mfs <= 4		1023408	1		<=			
ANR	1023535	Identifier	mfs		1023408	0					
ANR	1023536	PrimaryExpression	4		1023408	1					
ANR	1023537	CompoundStatement		32:46:890:890	1023408	1					
ANR	1023538	ExpressionStatement	params -> min_feature_size = mfs	2795:20:91307:91337	1023408	0	True				
ANR	1023539	AssignmentExpression	params -> min_feature_size = mfs		1023408	0		=			
ANR	1023540	PtrMemberAccess	params -> min_feature_size		1023408	0					
ANR	1023541	Identifier	params		1023408	0					
ANR	1023542	Identifier	min_feature_size		1023408	1					
ANR	1023543	Identifier	mfs		1023408	1					
ANR	1023544	BreakStatement	break ;	2796:20:91359:91364	1023408	1	True				
ANR	1023545	ExpressionStatement	code = gs_error_rangecheck	2798:16:91400:91426	1023408	4	True				
ANR	1023546	AssignmentExpression	code = gs_error_rangecheck		1023408	0		=			
ANR	1023547	Identifier	code		1023408	0					
ANR	1023548	Identifier	gs_error_rangecheck		1023408	1					
ANR	1023549	Label	default :	2799:12:91440:91447	1023408	5	True				
ANR	1023550	Identifier	default		1023408	0					
ANR	1023551	ExpressionStatement	"param_signal_error ( plist , param_name , code )"	2800:16:91465:91508	1023408	6	True				
ANR	1023552	CallExpression	"param_signal_error ( plist , param_name , code )"		1023408	0					
ANR	1023553	Callee	param_signal_error		1023408	0					
ANR	1023554	Identifier	param_signal_error		1023408	0					
ANR	1023555	ArgumentList	plist		1023408	1					
ANR	1023556	Argument	plist		1023408	0					
ANR	1023557	Identifier	plist		1023408	0					
ANR	1023558	Argument	param_name		1023408	1					
ANR	1023559	Identifier	param_name		1023408	0					
ANR	1023560	Argument	code		1023408	2					
ANR	1023561	Identifier	code		1023408	0					
ANR	1023562	ReturnStatement	return code ;	2801:16:91526:91537	1023408	7	True				
ANR	1023563	Identifier	code		1023408	0					
ANR	1023564	IfStatement	if ( features & GX_DOWNSCALER_PARAMS_TRAP )		1023408	8					
ANR	1023565	Condition	features & GX_DOWNSCALER_PARAMS_TRAP	2805:8:91564:91599	1023408	0	True				
ANR	1023566	BitAndExpression	features & GX_DOWNSCALER_PARAMS_TRAP		1023408	0		&			
ANR	1023567	Identifier	features		1023408	0					
ANR	1023568	Identifier	GX_DOWNSCALER_PARAMS_TRAP		1023408	1					
ANR	1023569	CompoundStatement		44:4:1211:1211	1023408	1					
ANR	1023570	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""TrapX"" ) , & trap_w ) )"		1023408	0					
ANR	1023571	Condition	"code = param_read_int ( plist , ( param_name = ""TrapX"" ) , & trap_w )"	2807:16:91624:91760	1023408	0	True				
ANR	1023572	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""TrapX"" ) , & trap_w )"		1023408	0		=			
ANR	1023573	Identifier	code		1023408	0					
ANR	1023574	CallExpression	"param_read_int ( plist , ( param_name = ""TrapX"" ) , & trap_w )"		1023408	1					
ANR	1023575	Callee	param_read_int		1023408	0					
ANR	1023576	Identifier	param_read_int		1023408	0					
ANR	1023577	ArgumentList	plist		1023408	1					
ANR	1023578	Argument	plist		1023408	0					
ANR	1023579	Identifier	plist		1023408	0					
ANR	1023580	Argument	"param_name = ""TrapX"""		1023408	1					
ANR	1023581	AssignmentExpression	"param_name = ""TrapX"""		1023408	0		=			
ANR	1023582	Identifier	param_name		1023408	0					
ANR	1023583	PrimaryExpression	"""TrapX"""		1023408	1					
ANR	1023584	Argument	& trap_w		1023408	2					
ANR	1023585	UnaryOperationExpression	& trap_w		1023408	0					
ANR	1023586	UnaryOperator	&		1023408	0					
ANR	1023587	Identifier	trap_w		1023408	1					
ANR	1023588	CompoundStatement		47:48:1368:1368	1023408	1					
ANR	1023589	Label	case 1 :	2810:12:91777:91783	1023408	0	True				
ANR	1023590	BreakStatement	break ;	2811:16:91801:91806	1023408	1	True				
ANR	1023591	Label	case 0 :	2812:12:91820:91826	1023408	2	True				
ANR	1023592	IfStatement	if ( trap_w >= 0 )		1023408	3					
ANR	1023593	Condition	trap_w >= 0	2813:20:91848:91858	1023408	0	True				
ANR	1023594	RelationalExpression	trap_w >= 0		1023408	0		>=			
ANR	1023595	Identifier	trap_w		1023408	0					
ANR	1023596	PrimaryExpression	0		1023408	1					
ANR	1023597	CompoundStatement		52:16:1482:1482	1023408	1					
ANR	1023598	ExpressionStatement	params -> trap_w = trap_w	2815:20:91899:91922	1023408	0	True				
ANR	1023599	AssignmentExpression	params -> trap_w = trap_w		1023408	0		=			
ANR	1023600	PtrMemberAccess	params -> trap_w		1023408	0					
ANR	1023601	Identifier	params		1023408	0					
ANR	1023602	Identifier	trap_w		1023408	1					
ANR	1023603	Identifier	trap_w		1023408	1					
ANR	1023604	BreakStatement	break ;	2816:20:91944:91949	1023408	1	True				
ANR	1023605	ExpressionStatement	code = gs_error_rangecheck	2818:16:91985:92011	1023408	4	True				
ANR	1023606	AssignmentExpression	code = gs_error_rangecheck		1023408	0		=			
ANR	1023607	Identifier	code		1023408	0					
ANR	1023608	Identifier	gs_error_rangecheck		1023408	1					
ANR	1023609	Label	default :	2819:12:92025:92032	1023408	5	True				
ANR	1023610	Identifier	default		1023408	0					
ANR	1023611	ExpressionStatement	"param_signal_error ( plist , param_name , code )"	2820:16:92050:92093	1023408	6	True				
ANR	1023612	CallExpression	"param_signal_error ( plist , param_name , code )"		1023408	0					
ANR	1023613	Callee	param_signal_error		1023408	0					
ANR	1023614	Identifier	param_signal_error		1023408	0					
ANR	1023615	ArgumentList	plist		1023408	1					
ANR	1023616	Argument	plist		1023408	0					
ANR	1023617	Identifier	plist		1023408	0					
ANR	1023618	Argument	param_name		1023408	1					
ANR	1023619	Identifier	param_name		1023408	0					
ANR	1023620	Argument	code		1023408	2					
ANR	1023621	Identifier	code		1023408	0					
ANR	1023622	ReturnStatement	return code ;	2821:16:92111:92122	1023408	7	True				
ANR	1023623	Identifier	code		1023408	0					
ANR	1023624	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""TrapY"" ) , & trap_h ) )"		1023408	1					
ANR	1023625	Condition	"code = param_read_int ( plist , ( param_name = ""TrapY"" ) , & trap_h )"	2823:16:92150:92286	1023408	0	True				
ANR	1023626	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""TrapY"" ) , & trap_h )"		1023408	0		=			
ANR	1023627	Identifier	code		1023408	0					
ANR	1023628	CallExpression	"param_read_int ( plist , ( param_name = ""TrapY"" ) , & trap_h )"		1023408	1					
ANR	1023629	Callee	param_read_int		1023408	0					
ANR	1023630	Identifier	param_read_int		1023408	0					
ANR	1023631	ArgumentList	plist		1023408	1					
ANR	1023632	Argument	plist		1023408	0					
ANR	1023633	Identifier	plist		1023408	0					
ANR	1023634	Argument	"param_name = ""TrapY"""		1023408	1					
ANR	1023635	AssignmentExpression	"param_name = ""TrapY"""		1023408	0		=			
ANR	1023636	Identifier	param_name		1023408	0					
ANR	1023637	PrimaryExpression	"""TrapY"""		1023408	1					
ANR	1023638	Argument	& trap_h		1023408	2					
ANR	1023639	UnaryOperationExpression	& trap_h		1023408	0					
ANR	1023640	UnaryOperator	&		1023408	0					
ANR	1023641	Identifier	trap_h		1023408	1					
ANR	1023642	CompoundStatement		63:48:1894:1894	1023408	1					
ANR	1023643	Label	case 1 :	2826:12:92303:92309	1023408	0	True				
ANR	1023644	BreakStatement	break ;	2827:16:92327:92332	1023408	1	True				
ANR	1023645	Label	case 0 :	2828:12:92346:92352	1023408	2	True				
ANR	1023646	IfStatement	if ( trap_h >= 0 )		1023408	3					
ANR	1023647	Condition	trap_h >= 0	2829:20:92374:92384	1023408	0	True				
ANR	1023648	RelationalExpression	trap_h >= 0		1023408	0		>=			
ANR	1023649	Identifier	trap_h		1023408	0					
ANR	1023650	PrimaryExpression	0		1023408	1					
ANR	1023651	CompoundStatement		68:16:2008:2008	1023408	1					
ANR	1023652	ExpressionStatement	params -> trap_h = trap_h	2831:20:92425:92448	1023408	0	True				
ANR	1023653	AssignmentExpression	params -> trap_h = trap_h		1023408	0		=			
ANR	1023654	PtrMemberAccess	params -> trap_h		1023408	0					
ANR	1023655	Identifier	params		1023408	0					
ANR	1023656	Identifier	trap_h		1023408	1					
ANR	1023657	Identifier	trap_h		1023408	1					
ANR	1023658	BreakStatement	break ;	2832:20:92470:92475	1023408	1	True				
ANR	1023659	ExpressionStatement	code = gs_error_rangecheck	2834:16:92511:92537	1023408	4	True				
ANR	1023660	AssignmentExpression	code = gs_error_rangecheck		1023408	0		=			
ANR	1023661	Identifier	code		1023408	0					
ANR	1023662	Identifier	gs_error_rangecheck		1023408	1					
ANR	1023663	Label	default :	2835:12:92551:92558	1023408	5	True				
ANR	1023664	Identifier	default		1023408	0					
ANR	1023665	ExpressionStatement	"param_signal_error ( plist , param_name , code )"	2836:16:92576:92619	1023408	6	True				
ANR	1023666	CallExpression	"param_signal_error ( plist , param_name , code )"		1023408	0					
ANR	1023667	Callee	param_signal_error		1023408	0					
ANR	1023668	Identifier	param_signal_error		1023408	0					
ANR	1023669	ArgumentList	plist		1023408	1					
ANR	1023670	Argument	plist		1023408	0					
ANR	1023671	Identifier	plist		1023408	0					
ANR	1023672	Argument	param_name		1023408	1					
ANR	1023673	Identifier	param_name		1023408	0					
ANR	1023674	Argument	code		1023408	2					
ANR	1023675	Identifier	code		1023408	0					
ANR	1023676	ReturnStatement	return code ;	2837:16:92637:92648	1023408	7	True				
ANR	1023677	Identifier	code		1023408	0					
ANR	1023678	SwitchStatement	"switch ( code = param_read_int_array ( plist , ( param_name = ""TrapOrder"" ) , & trap_order ) )"		1023408	2					
ANR	1023679	Condition	"code = param_read_int_array ( plist , ( param_name = ""TrapOrder"" ) , & trap_order )"	2839:16:92676:92750	1023408	0	True				
ANR	1023680	AssignmentExpression	"code = param_read_int_array ( plist , ( param_name = ""TrapOrder"" ) , & trap_order )"		1023408	0		=			
ANR	1023681	Identifier	code		1023408	0					
ANR	1023682	CallExpression	"param_read_int_array ( plist , ( param_name = ""TrapOrder"" ) , & trap_order )"		1023408	1					
ANR	1023683	Callee	param_read_int_array		1023408	0					
ANR	1023684	Identifier	param_read_int_array		1023408	0					
ANR	1023685	ArgumentList	plist		1023408	1					
ANR	1023686	Argument	plist		1023408	0					
ANR	1023687	Identifier	plist		1023408	0					
ANR	1023688	Argument	"param_name = ""TrapOrder"""		1023408	1					
ANR	1023689	AssignmentExpression	"param_name = ""TrapOrder"""		1023408	0		=			
ANR	1023690	Identifier	param_name		1023408	0					
ANR	1023691	PrimaryExpression	"""TrapOrder"""		1023408	1					
ANR	1023692	Argument	& trap_order		1023408	2					
ANR	1023693	UnaryOperationExpression	& trap_order		1023408	0					
ANR	1023694	UnaryOperator	&		1023408	0					
ANR	1023695	Identifier	trap_order		1023408	1					
ANR	1023696	CompoundStatement		77:93:2358:2358	1023408	1					
ANR	1023697	Label	case 0 :	2840:12:92767:92773	1023408	0	True				
ANR	1023698	BreakStatement	break ;	2841:16:92791:92796	1023408	1	True				
ANR	1023699	Label	case 1 :	2842:12:92810:92816	1023408	2	True				
ANR	1023700	ExpressionStatement	trap_order . data = 0	2843:16:92834:92853	1023408	3	True				
ANR	1023701	AssignmentExpression	trap_order . data = 0		1023408	0		=			
ANR	1023702	MemberAccess	trap_order . data		1023408	0					
ANR	1023703	Identifier	trap_order		1023408	0					
ANR	1023704	Identifier	data		1023408	1					
ANR	1023705	PrimaryExpression	0		1023408	1					
ANR	1023706	BreakStatement	break ;	2844:16:92905:92910	1023408	4	True				
ANR	1023707	Label	default :	2845:12:92924:92931	1023408	5	True				
ANR	1023708	Identifier	default		1023408	0					
ANR	1023709	ExpressionStatement	"param_signal_error ( plist , param_name , code )"	2846:16:92949:92992	1023408	6	True				
ANR	1023710	CallExpression	"param_signal_error ( plist , param_name , code )"		1023408	0					
ANR	1023711	Callee	param_signal_error		1023408	0					
ANR	1023712	Identifier	param_signal_error		1023408	0					
ANR	1023713	ArgumentList	plist		1023408	1					
ANR	1023714	Argument	plist		1023408	0					
ANR	1023715	Identifier	plist		1023408	0					
ANR	1023716	Argument	param_name		1023408	1					
ANR	1023717	Identifier	param_name		1023408	0					
ANR	1023718	Argument	code		1023408	2					
ANR	1023719	Identifier	code		1023408	0					
ANR	1023720	ReturnStatement	return code ;	2847:16:93010:93021	1023408	7	True				
ANR	1023721	Identifier	code		1023408	0					
ANR	1023722	IfStatement	if ( trap_order . data != NULL )		1023408	3					
ANR	1023723	Condition	trap_order . data != NULL	2850:12:93046:93068	1023408	0	True				
ANR	1023724	EqualityExpression	trap_order . data != NULL		1023408	0		!=			
ANR	1023725	MemberAccess	trap_order . data		1023408	0					
ANR	1023726	Identifier	trap_order		1023408	0					
ANR	1023727	Identifier	data		1023408	1					
ANR	1023728	Identifier	NULL		1023408	1					
ANR	1023729	CompoundStatement		91:12:2717:2740	1023408	1					
ANR	1023730	IdentifierDeclStatement	int i ;	2852:12:93093:93098	1023408	0	True				
ANR	1023731	IdentifierDecl	i		1023408	0					
ANR	1023732	IdentifierDeclType	int		1023408	0					
ANR	1023733	Identifier	i		1023408	1					
ANR	1023734	IdentifierDeclStatement	int n = trap_order . size ;	2853:12:93112:93135	1023408	1	True				
ANR	1023735	IdentifierDecl	n = trap_order . size		1023408	0					
ANR	1023736	IdentifierDeclType	int		1023408	0					
ANR	1023737	Identifier	n		1023408	1					
ANR	1023738	AssignmentExpression	n = trap_order . size		1023408	2		=			
ANR	1023739	Identifier	n		1023408	0					
ANR	1023740	MemberAccess	trap_order . size		1023408	1					
ANR	1023741	Identifier	trap_order		1023408	0					
ANR	1023742	Identifier	size		1023408	1					
ANR	1023743	IfStatement	if ( n > GS_CLIENT_COLOR_MAX_COMPONENTS )		1023408	2					
ANR	1023744	Condition	n > GS_CLIENT_COLOR_MAX_COMPONENTS	2855:16:93154:93187	1023408	0	True				
ANR	1023745	RelationalExpression	n > GS_CLIENT_COLOR_MAX_COMPONENTS		1023408	0		>			
ANR	1023746	Identifier	n		1023408	0					
ANR	1023747	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		1023408	1					
ANR	1023748	ExpressionStatement	n = GS_CLIENT_COLOR_MAX_COMPONENTS	2856:16:93206:93240	1023408	1	True				
ANR	1023749	AssignmentExpression	n = GS_CLIENT_COLOR_MAX_COMPONENTS		1023408	0		=			
ANR	1023750	Identifier	n		1023408	0					
ANR	1023751	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		1023408	1					
ANR	1023752	ForStatement	for ( i = 0 ; i < n ; i ++ )		1023408	3					
ANR	1023753	ForInit	i = 0 ;	2858:17:93260:93265	1023408	0	True				
ANR	1023754	AssignmentExpression	i = 0		1023408	0		=			
ANR	1023755	Identifier	i		1023408	0					
ANR	1023756	PrimaryExpression	0		1023408	1					
ANR	1023757	Condition	i < n	2858:24:93267:93271	1023408	1	True				
ANR	1023758	RelationalExpression	i < n		1023408	0		<			
ANR	1023759	Identifier	i		1023408	0					
ANR	1023760	Identifier	n		1023408	1					
ANR	1023761	PostIncDecOperationExpression	i ++	2858:31:93274:93276	1023408	2	True				
ANR	1023762	Identifier	i		1023408	0					
ANR	1023763	IncDec	++		1023408	1					
ANR	1023764	CompoundStatement		97:12:2896:2896	1023408	3					
ANR	1023765	ExpressionStatement	params -> trap_order [ i ] = trap_order . data [ i ]	2860:16:93309:93351	1023408	0	True				
ANR	1023766	AssignmentExpression	params -> trap_order [ i ] = trap_order . data [ i ]		1023408	0		=			
ANR	1023767	ArrayIndexing	params -> trap_order [ i ]		1023408	0					
ANR	1023768	PtrMemberAccess	params -> trap_order		1023408	0					
ANR	1023769	Identifier	params		1023408	0					
ANR	1023770	Identifier	trap_order		1023408	1					
ANR	1023771	Identifier	i		1023408	1					
ANR	1023772	ArrayIndexing	trap_order . data [ i ]		1023408	1					
ANR	1023773	MemberAccess	trap_order . data		1023408	0					
ANR	1023774	Identifier	trap_order		1023408	0					
ANR	1023775	Identifier	data		1023408	1					
ANR	1023776	Identifier	i		1023408	1					
ANR	1023777	ForStatement	for ( ; i < GS_CLIENT_COLOR_MAX_COMPONENTS ; i ++ )		1023408	4					
ANR	1023778	Condition	i < GS_CLIENT_COLOR_MAX_COMPONENTS	2862:19:93386:93419	1023408	0	True				
ANR	1023779	RelationalExpression	i < GS_CLIENT_COLOR_MAX_COMPONENTS		1023408	0		<			
ANR	1023780	Identifier	i		1023408	0					
ANR	1023781	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		1023408	1					
ANR	1023782	PostIncDecOperationExpression	i ++	2862:55:93422:93424	1023408	1	True				
ANR	1023783	Identifier	i		1023408	0					
ANR	1023784	IncDec	++		1023408	1					
ANR	1023785	CompoundStatement		101:12:3044:3044	1023408	2					
ANR	1023786	ExpressionStatement	params -> trap_order [ i ] = i	2864:16:93457:93482	1023408	0	True				
ANR	1023787	AssignmentExpression	params -> trap_order [ i ] = i		1023408	0		=			
ANR	1023788	ArrayIndexing	params -> trap_order [ i ]		1023408	0					
ANR	1023789	PtrMemberAccess	params -> trap_order		1023408	0					
ANR	1023790	Identifier	params		1023408	0					
ANR	1023791	Identifier	trap_order		1023408	1					
ANR	1023792	Identifier	i		1023408	1					
ANR	1023793	Identifier	i		1023408	1					
ANR	1023794	ElseStatement	else		1023408	0					
ANR	1023795	CompoundStatement		108:12:3189:3194	1023408	0					
ANR	1023796	IdentifierDeclStatement	int i ;	2870:12:93584:93589	1023408	0	True				
ANR	1023797	IdentifierDecl	i		1023408	0					
ANR	1023798	IdentifierDeclType	int		1023408	0					
ANR	1023799	Identifier	i		1023408	1					
ANR	1023800	ExpressionStatement	params -> trap_order [ 0 ] = 3	2872:12:93604:93629	1023408	1	True				
ANR	1023801	AssignmentExpression	params -> trap_order [ 0 ] = 3		1023408	0		=			
ANR	1023802	ArrayIndexing	params -> trap_order [ 0 ]		1023408	0					
ANR	1023803	PtrMemberAccess	params -> trap_order		1023408	0					
ANR	1023804	Identifier	params		1023408	0					
ANR	1023805	Identifier	trap_order		1023408	1					
ANR	1023806	PrimaryExpression	0		1023408	1					
ANR	1023807	PrimaryExpression	3		1023408	1					
ANR	1023808	ExpressionStatement	params -> trap_order [ 1 ] = 1	2873:12:93651:93676	1023408	2	True				
ANR	1023809	AssignmentExpression	params -> trap_order [ 1 ] = 1		1023408	0		=			
ANR	1023810	ArrayIndexing	params -> trap_order [ 1 ]		1023408	0					
ANR	1023811	PtrMemberAccess	params -> trap_order		1023408	0					
ANR	1023812	Identifier	params		1023408	0					
ANR	1023813	Identifier	trap_order		1023408	1					
ANR	1023814	PrimaryExpression	1		1023408	1					
ANR	1023815	PrimaryExpression	1		1023408	1					
ANR	1023816	ExpressionStatement	params -> trap_order [ 2 ] = 0	2874:12:93698:93723	1023408	3	True				
ANR	1023817	AssignmentExpression	params -> trap_order [ 2 ] = 0		1023408	0		=			
ANR	1023818	ArrayIndexing	params -> trap_order [ 2 ]		1023408	0					
ANR	1023819	PtrMemberAccess	params -> trap_order		1023408	0					
ANR	1023820	Identifier	params		1023408	0					
ANR	1023821	Identifier	trap_order		1023408	1					
ANR	1023822	PrimaryExpression	2		1023408	1					
ANR	1023823	PrimaryExpression	0		1023408	1					
ANR	1023824	ExpressionStatement	params -> trap_order [ 3 ] = 2	2875:12:93745:93770	1023408	4	True				
ANR	1023825	AssignmentExpression	params -> trap_order [ 3 ] = 2		1023408	0		=			
ANR	1023826	ArrayIndexing	params -> trap_order [ 3 ]		1023408	0					
ANR	1023827	PtrMemberAccess	params -> trap_order		1023408	0					
ANR	1023828	Identifier	params		1023408	0					
ANR	1023829	Identifier	trap_order		1023408	1					
ANR	1023830	PrimaryExpression	3		1023408	1					
ANR	1023831	PrimaryExpression	2		1023408	1					
ANR	1023832	ForStatement	for ( i = 4 ; i < GS_CLIENT_COLOR_MAX_COMPONENTS ; i ++ )		1023408	5					
ANR	1023833	ForInit	i = 4 ;	2877:17:93798:93803	1023408	0	True				
ANR	1023834	AssignmentExpression	i = 4		1023408	0		=			
ANR	1023835	Identifier	i		1023408	0					
ANR	1023836	PrimaryExpression	4		1023408	1					
ANR	1023837	Condition	i < GS_CLIENT_COLOR_MAX_COMPONENTS	2877:24:93805:93838	1023408	1	True				
ANR	1023838	RelationalExpression	i < GS_CLIENT_COLOR_MAX_COMPONENTS		1023408	0		<			
ANR	1023839	Identifier	i		1023408	0					
ANR	1023840	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		1023408	1					
ANR	1023841	PostIncDecOperationExpression	i ++	2877:60:93841:93843	1023408	2	True				
ANR	1023842	Identifier	i		1023408	0					
ANR	1023843	IncDec	++		1023408	1					
ANR	1023844	CompoundStatement		116:12:3463:3463	1023408	3					
ANR	1023845	ExpressionStatement	params -> trap_order [ i ] = i	2879:16:93876:93901	1023408	0	True				
ANR	1023846	AssignmentExpression	params -> trap_order [ i ] = i		1023408	0		=			
ANR	1023847	ArrayIndexing	params -> trap_order [ i ]		1023408	0					
ANR	1023848	PtrMemberAccess	params -> trap_order		1023408	0					
ANR	1023849	Identifier	params		1023408	0					
ANR	1023850	Identifier	trap_order		1023408	1					
ANR	1023851	Identifier	i		1023408	1					
ANR	1023852	Identifier	i		1023408	1					
ANR	1023853	IfStatement	if ( features & GX_DOWNSCALER_PARAMS_ETS )		1023408	9					
ANR	1023854	Condition	features & GX_DOWNSCALER_PARAMS_ETS	2883:8:93941:93975	1023408	0	True				
ANR	1023855	BitAndExpression	features & GX_DOWNSCALER_PARAMS_ETS		1023408	0		&			
ANR	1023856	Identifier	features		1023408	0					
ANR	1023857	Identifier	GX_DOWNSCALER_PARAMS_ETS		1023408	1					
ANR	1023858	CompoundStatement		122:4:3587:3587	1023408	1					
ANR	1023859	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""DownScaleETS"" ) , & ets ) )"		1023408	0					
ANR	1023860	Condition	"code = param_read_int ( plist , ( param_name = ""DownScaleETS"" ) , & ets )"	2885:16:94000:94140	1023408	0	True				
ANR	1023861	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""DownScaleETS"" ) , & ets )"		1023408	0		=			
ANR	1023862	Identifier	code		1023408	0					
ANR	1023863	CallExpression	"param_read_int ( plist , ( param_name = ""DownScaleETS"" ) , & ets )"		1023408	1					
ANR	1023864	Callee	param_read_int		1023408	0					
ANR	1023865	Identifier	param_read_int		1023408	0					
ANR	1023866	ArgumentList	plist		1023408	1					
ANR	1023867	Argument	plist		1023408	0					
ANR	1023868	Identifier	plist		1023408	0					
ANR	1023869	Argument	"param_name = ""DownScaleETS"""		1023408	1					
ANR	1023870	AssignmentExpression	"param_name = ""DownScaleETS"""		1023408	0		=			
ANR	1023871	Identifier	param_name		1023408	0					
ANR	1023872	PrimaryExpression	"""DownScaleETS"""		1023408	1					
ANR	1023873	Argument	& ets		1023408	2					
ANR	1023874	UnaryOperationExpression	& ets		1023408	0					
ANR	1023875	UnaryOperator	&		1023408	0					
ANR	1023876	Identifier	ets		1023408	1					
ANR	1023877	CompoundStatement		125:45:3748:3748	1023408	1					
ANR	1023878	Label	case 1 :	2888:12:94157:94163	1023408	0	True				
ANR	1023879	BreakStatement	break ;	2889:16:94181:94186	1023408	1	True				
ANR	1023880	Label	case 0 :	2890:12:94200:94206	1023408	2	True				
ANR	1023881	IfStatement	if ( ets >= 0 )		1023408	3					
ANR	1023882	Condition	ets >= 0	2891:20:94228:94235	1023408	0	True				
ANR	1023883	RelationalExpression	ets >= 0		1023408	0		>=			
ANR	1023884	Identifier	ets		1023408	0					
ANR	1023885	PrimaryExpression	0		1023408	1					
ANR	1023886	CompoundStatement		130:16:3859:3859	1023408	1					
ANR	1023887	ExpressionStatement	params -> ets = ets	2893:20:94276:94293	1023408	0	True				
ANR	1023888	AssignmentExpression	params -> ets = ets		1023408	0		=			
ANR	1023889	PtrMemberAccess	params -> ets		1023408	0					
ANR	1023890	Identifier	params		1023408	0					
ANR	1023891	Identifier	ets		1023408	1					
ANR	1023892	Identifier	ets		1023408	1					
ANR	1023893	BreakStatement	break ;	2894:20:94315:94320	1023408	1	True				
ANR	1023894	ExpressionStatement	code = gs_error_rangecheck	2896:16:94356:94382	1023408	4	True				
ANR	1023895	AssignmentExpression	code = gs_error_rangecheck		1023408	0		=			
ANR	1023896	Identifier	code		1023408	0					
ANR	1023897	Identifier	gs_error_rangecheck		1023408	1					
ANR	1023898	Label	default :	2897:12:94396:94403	1023408	5	True				
ANR	1023899	Identifier	default		1023408	0					
ANR	1023900	ExpressionStatement	"param_signal_error ( plist , param_name , code )"	2898:16:94421:94464	1023408	6	True				
ANR	1023901	CallExpression	"param_signal_error ( plist , param_name , code )"		1023408	0					
ANR	1023902	Callee	param_signal_error		1023408	0					
ANR	1023903	Identifier	param_signal_error		1023408	0					
ANR	1023904	ArgumentList	plist		1023408	1					
ANR	1023905	Argument	plist		1023408	0					
ANR	1023906	Identifier	plist		1023408	0					
ANR	1023907	Argument	param_name		1023408	1					
ANR	1023908	Identifier	param_name		1023408	0					
ANR	1023909	Argument	code		1023408	2					
ANR	1023910	Identifier	code		1023408	0					
ANR	1023911	ReturnStatement	return code ;	2899:16:94482:94493	1023408	7	True				
ANR	1023912	Identifier	code		1023408	0					
ANR	1023913	ReturnStatement	return 0 ;	2903:4:94516:94524	1023408	10	True				
ANR	1023914	PrimaryExpression	0		1023408	0					
ANR	1023915	ReturnType	int		1023408	1					
ANR	1023916	Identifier	gx_downscaler_read_params		1023408	2					
ANR	1023917	ParameterList	"gs_param_list * plist , gx_downscaler_params * params , int features"		1023408	3					
ANR	1023918	Parameter	gs_param_list * plist	2760:30:90243:90269	1023408	0	True				
ANR	1023919	ParameterType	gs_param_list *		1023408	0					
ANR	1023920	Identifier	plist		1023408	1					
ANR	1023921	Parameter	gx_downscaler_params * params	2761:30:90302:90329	1023408	1	True				
ANR	1023922	ParameterType	gx_downscaler_params *		1023408	0					
ANR	1023923	Identifier	params		1023408	1					
ANR	1023924	Parameter	int features	2762:30:90362:90391	1023408	2	True				
ANR	1023925	ParameterType	int		1023408	0					
ANR	1023926	Identifier	features		1023408	1					
ANR	1023927	CFGEntryNode	ENTRY		1023408		True				
ANR	1023928	CFGExitNode	EXIT		1023408		True				
ANR	1023929	Symbol	code		1023408						
ANR	1023930	Symbol	trap_w		1023408						
ANR	1023931	Symbol	trap_order . data		1023408						
ANR	1023932	Symbol	gs_error_rangecheck		1023408						
ANR	1023933	Symbol	* trap_order		1023408						
ANR	1023934	Symbol	params -> trap_order		1023408						
ANR	1023935	Symbol	& trap_w		1023408						
ANR	1023936	Symbol	trap_order		1023408						
ANR	1023937	Symbol	& trap_h		1023408						
ANR	1023938	Symbol	GS_CLIENT_COLOR_MAX_COMPONENTS		1023408						
ANR	1023939	Symbol	* * params		1023408						
ANR	1023940	Symbol	& ets		1023408						
ANR	1023941	Symbol	GX_DOWNSCALER_PARAMS_MFS		1023408						
ANR	1023942	Symbol	features		1023408						
ANR	1023943	Symbol	plist		1023408						
ANR	1023944	Symbol	& downscale		1023408						
ANR	1023945	Symbol	param_read_int		1023408						
ANR	1023946	Symbol	GX_DOWNSCALER_PARAMS_TRAP		1023408						
ANR	1023947	Symbol	& trap_order		1023408						
ANR	1023948	Symbol	trap_order . size		1023408						
ANR	1023949	Symbol	* params		1023408						
ANR	1023950	Symbol	params -> trap_h		1023408						
ANR	1023951	Symbol	NULL		1023408						
ANR	1023952	Symbol	* params -> trap_order		1023408						
ANR	1023953	Symbol	ets		1023408						
ANR	1023954	Symbol	GX_DOWNSCALER_PARAMS_ETS		1023408						
ANR	1023955	Symbol	& mfs		1023408						
ANR	1023956	Symbol	params -> downscale_factor		1023408						
ANR	1023957	Symbol	i		1023408						
ANR	1023958	Symbol	params		1023408						
ANR	1023959	Symbol	params -> ets		1023408						
ANR	1023960	Symbol	n		1023408						
ANR	1023961	Symbol	trap_h		1023408						
ANR	1023962	Symbol	params -> min_feature_size		1023408						
ANR	1023963	Symbol	param_read_int_array		1023408						
ANR	1023964	Symbol	downscale		1023408						
ANR	1023965	Symbol	params -> trap_w		1023408						
ANR	1023966	Symbol	* i		1023408						
ANR	1023967	Symbol	mfs		1023408						
ANR	1023968	Symbol	param_name		1023408						
ANR	1023969	Symbol	* trap_order . data		1023408						
ANR	1023970	Function	gx_downscaler_write_params	2906:0:94529:95754							
ANR	1023971	FunctionDef	"gx_downscaler_write_params (gs_param_list * plist , gx_downscaler_params * params , int features)"		1023970	0					
ANR	1023972	CompoundStatement		2909:0:94713:95754	1023970	0					
ANR	1023973	IdentifierDeclStatement	int code ;	2910:4:94719:94727	1023970	0	True				
ANR	1023974	IdentifierDecl	code		1023970	0					
ANR	1023975	IdentifierDeclType	int		1023970	0					
ANR	1023976	Identifier	code		1023970	1					
ANR	1023977	IdentifierDeclStatement	int ecode = 0 ;	2911:4:94733:94746	1023970	1	True				
ANR	1023978	IdentifierDecl	ecode = 0		1023970	0					
ANR	1023979	IdentifierDeclType	int		1023970	0					
ANR	1023980	Identifier	ecode		1023970	1					
ANR	1023981	AssignmentExpression	ecode = 0		1023970	2		=			
ANR	1023982	Identifier	ecode		1023970	0					
ANR	1023983	PrimaryExpression	0		1023970	1					
ANR	1023984	IdentifierDeclStatement	gs_param_int_array trap_order ;	2912:4:94752:94781	1023970	2	True				
ANR	1023985	IdentifierDecl	trap_order		1023970	0					
ANR	1023986	IdentifierDeclType	gs_param_int_array		1023970	0					
ANR	1023987	Identifier	trap_order		1023970	1					
ANR	1023988	ExpressionStatement	trap_order . data = params -> trap_order	2914:4:94788:94824	1023970	3	True				
ANR	1023989	AssignmentExpression	trap_order . data = params -> trap_order		1023970	0		=			
ANR	1023990	MemberAccess	trap_order . data		1023970	0					
ANR	1023991	Identifier	trap_order		1023970	0					
ANR	1023992	Identifier	data		1023970	1					
ANR	1023993	PtrMemberAccess	params -> trap_order		1023970	1					
ANR	1023994	Identifier	params		1023970	0					
ANR	1023995	Identifier	trap_order		1023970	1					
ANR	1023996	ExpressionStatement	trap_order . size = GS_CLIENT_COLOR_MAX_COMPONENTS	2915:4:94830:94878	1023970	4	True				
ANR	1023997	AssignmentExpression	trap_order . size = GS_CLIENT_COLOR_MAX_COMPONENTS		1023970	0		=			
ANR	1023998	MemberAccess	trap_order . size		1023970	0					
ANR	1023999	Identifier	trap_order		1023970	0					
ANR	1024000	Identifier	size		1023970	1					
ANR	1024001	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		1023970	1					
ANR	1024002	ExpressionStatement	trap_order . persistent = false	2916:4:94884:94913	1023970	5	True				
ANR	1024003	AssignmentExpression	trap_order . persistent = false		1023970	0		=			
ANR	1024004	MemberAccess	trap_order . persistent		1023970	0					
ANR	1024005	Identifier	trap_order		1023970	0					
ANR	1024006	Identifier	persistent		1023970	1					
ANR	1024007	Identifier	false		1023970	1					
ANR	1024008	IfStatement	"if ( ( code = param_write_int ( plist , ""DownScaleFactor"" , & params -> downscale_factor ) ) < 0 )"		1023970	6					
ANR	1024009	Condition	"( code = param_write_int ( plist , ""DownScaleFactor"" , & params -> downscale_factor ) ) < 0"	2918:8:94924:95004	1023970	0	True				
ANR	1024010	RelationalExpression	"( code = param_write_int ( plist , ""DownScaleFactor"" , & params -> downscale_factor ) ) < 0"		1023970	0		<			
ANR	1024011	AssignmentExpression	"code = param_write_int ( plist , ""DownScaleFactor"" , & params -> downscale_factor )"		1023970	0		=			
ANR	1024012	Identifier	code		1023970	0					
ANR	1024013	CallExpression	"param_write_int ( plist , ""DownScaleFactor"" , & params -> downscale_factor )"		1023970	1					
ANR	1024014	Callee	param_write_int		1023970	0					
ANR	1024015	Identifier	param_write_int		1023970	0					
ANR	1024016	ArgumentList	plist		1023970	1					
ANR	1024017	Argument	plist		1023970	0					
ANR	1024018	Identifier	plist		1023970	0					
ANR	1024019	Argument	"""DownScaleFactor"""		1023970	1					
ANR	1024020	PrimaryExpression	"""DownScaleFactor"""		1023970	0					
ANR	1024021	Argument	& params -> downscale_factor		1023970	2					
ANR	1024022	UnaryOperationExpression	& params -> downscale_factor		1023970	0					
ANR	1024023	UnaryOperator	&		1023970	0					
ANR	1024024	PtrMemberAccess	params -> downscale_factor		1023970	1					
ANR	1024025	Identifier	params		1023970	0					
ANR	1024026	Identifier	downscale_factor		1023970	1					
ANR	1024027	PrimaryExpression	0		1023970	1					
ANR	1024028	ExpressionStatement	ecode = code	2919:8:95015:95027	1023970	1	True				
ANR	1024029	AssignmentExpression	ecode = code		1023970	0		=			
ANR	1024030	Identifier	ecode		1023970	0					
ANR	1024031	Identifier	code		1023970	1					
ANR	1024032	IfStatement	if ( features & GX_DOWNSCALER_PARAMS_MFS )		1023970	7					
ANR	1024033	Condition	features & GX_DOWNSCALER_PARAMS_MFS	2920:8:95037:95071	1023970	0	True				
ANR	1024034	BitAndExpression	features & GX_DOWNSCALER_PARAMS_MFS		1023970	0		&			
ANR	1024035	Identifier	features		1023970	0					
ANR	1024036	Identifier	GX_DOWNSCALER_PARAMS_MFS		1023970	1					
ANR	1024037	CompoundStatement		13:4:364:364	1023970	1					
ANR	1024038	IfStatement	"if ( ( code = param_write_int ( plist , ""MinFeatureSize"" , & params -> min_feature_size ) ) < 0 )"		1023970	0					
ANR	1024039	Condition	"( code = param_write_int ( plist , ""MinFeatureSize"" , & params -> min_feature_size ) ) < 0"	2922:12:95092:95171	1023970	0	True				
ANR	1024040	RelationalExpression	"( code = param_write_int ( plist , ""MinFeatureSize"" , & params -> min_feature_size ) ) < 0"		1023970	0		<			
ANR	1024041	AssignmentExpression	"code = param_write_int ( plist , ""MinFeatureSize"" , & params -> min_feature_size )"		1023970	0		=			
ANR	1024042	Identifier	code		1023970	0					
ANR	1024043	CallExpression	"param_write_int ( plist , ""MinFeatureSize"" , & params -> min_feature_size )"		1023970	1					
ANR	1024044	Callee	param_write_int		1023970	0					
ANR	1024045	Identifier	param_write_int		1023970	0					
ANR	1024046	ArgumentList	plist		1023970	1					
ANR	1024047	Argument	plist		1023970	0					
ANR	1024048	Identifier	plist		1023970	0					
ANR	1024049	Argument	"""MinFeatureSize"""		1023970	1					
ANR	1024050	PrimaryExpression	"""MinFeatureSize"""		1023970	0					
ANR	1024051	Argument	& params -> min_feature_size		1023970	2					
ANR	1024052	UnaryOperationExpression	& params -> min_feature_size		1023970	0					
ANR	1024053	UnaryOperator	&		1023970	0					
ANR	1024054	PtrMemberAccess	params -> min_feature_size		1023970	1					
ANR	1024055	Identifier	params		1023970	0					
ANR	1024056	Identifier	min_feature_size		1023970	1					
ANR	1024057	PrimaryExpression	0		1023970	1					
ANR	1024058	ExpressionStatement	ecode = code	2923:12:95186:95198	1023970	1	True				
ANR	1024059	AssignmentExpression	ecode = code		1023970	0		=			
ANR	1024060	Identifier	ecode		1023970	0					
ANR	1024061	Identifier	code		1023970	1					
ANR	1024062	IfStatement	if ( features & GX_DOWNSCALER_PARAMS_TRAP )		1023970	8					
ANR	1024063	Condition	features & GX_DOWNSCALER_PARAMS_TRAP	2925:8:95214:95249	1023970	0	True				
ANR	1024064	BitAndExpression	features & GX_DOWNSCALER_PARAMS_TRAP		1023970	0		&			
ANR	1024065	Identifier	features		1023970	0					
ANR	1024066	Identifier	GX_DOWNSCALER_PARAMS_TRAP		1023970	1					
ANR	1024067	CompoundStatement		18:4:542:542	1023970	1					
ANR	1024068	IfStatement	"if ( ( code = param_write_int ( plist , ""TrapX"" , & params -> trap_w ) ) < 0 )"		1023970	0					
ANR	1024069	Condition	"( code = param_write_int ( plist , ""TrapX"" , & params -> trap_w ) ) < 0"	2927:12:95270:95330	1023970	0	True				
ANR	1024070	RelationalExpression	"( code = param_write_int ( plist , ""TrapX"" , & params -> trap_w ) ) < 0"		1023970	0		<			
ANR	1024071	AssignmentExpression	"code = param_write_int ( plist , ""TrapX"" , & params -> trap_w )"		1023970	0		=			
ANR	1024072	Identifier	code		1023970	0					
ANR	1024073	CallExpression	"param_write_int ( plist , ""TrapX"" , & params -> trap_w )"		1023970	1					
ANR	1024074	Callee	param_write_int		1023970	0					
ANR	1024075	Identifier	param_write_int		1023970	0					
ANR	1024076	ArgumentList	plist		1023970	1					
ANR	1024077	Argument	plist		1023970	0					
ANR	1024078	Identifier	plist		1023970	0					
ANR	1024079	Argument	"""TrapX"""		1023970	1					
ANR	1024080	PrimaryExpression	"""TrapX"""		1023970	0					
ANR	1024081	Argument	& params -> trap_w		1023970	2					
ANR	1024082	UnaryOperationExpression	& params -> trap_w		1023970	0					
ANR	1024083	UnaryOperator	&		1023970	0					
ANR	1024084	PtrMemberAccess	params -> trap_w		1023970	1					
ANR	1024085	Identifier	params		1023970	0					
ANR	1024086	Identifier	trap_w		1023970	1					
ANR	1024087	PrimaryExpression	0		1023970	1					
ANR	1024088	ExpressionStatement	ecode = code	2928:12:95345:95357	1023970	1	True				
ANR	1024089	AssignmentExpression	ecode = code		1023970	0		=			
ANR	1024090	Identifier	ecode		1023970	0					
ANR	1024091	Identifier	code		1023970	1					
ANR	1024092	IfStatement	"if ( ( code = param_write_int ( plist , ""TrapY"" , & params -> trap_h ) ) < 0 )"		1023970	1					
ANR	1024093	Condition	"( code = param_write_int ( plist , ""TrapY"" , & params -> trap_h ) ) < 0"	2929:12:95371:95431	1023970	0	True				
ANR	1024094	RelationalExpression	"( code = param_write_int ( plist , ""TrapY"" , & params -> trap_h ) ) < 0"		1023970	0		<			
ANR	1024095	AssignmentExpression	"code = param_write_int ( plist , ""TrapY"" , & params -> trap_h )"		1023970	0		=			
ANR	1024096	Identifier	code		1023970	0					
ANR	1024097	CallExpression	"param_write_int ( plist , ""TrapY"" , & params -> trap_h )"		1023970	1					
ANR	1024098	Callee	param_write_int		1023970	0					
ANR	1024099	Identifier	param_write_int		1023970	0					
ANR	1024100	ArgumentList	plist		1023970	1					
ANR	1024101	Argument	plist		1023970	0					
ANR	1024102	Identifier	plist		1023970	0					
ANR	1024103	Argument	"""TrapY"""		1023970	1					
ANR	1024104	PrimaryExpression	"""TrapY"""		1023970	0					
ANR	1024105	Argument	& params -> trap_h		1023970	2					
ANR	1024106	UnaryOperationExpression	& params -> trap_h		1023970	0					
ANR	1024107	UnaryOperator	&		1023970	0					
ANR	1024108	PtrMemberAccess	params -> trap_h		1023970	1					
ANR	1024109	Identifier	params		1023970	0					
ANR	1024110	Identifier	trap_h		1023970	1					
ANR	1024111	PrimaryExpression	0		1023970	1					
ANR	1024112	ExpressionStatement	ecode = code	2930:12:95446:95458	1023970	1	True				
ANR	1024113	AssignmentExpression	ecode = code		1023970	0		=			
ANR	1024114	Identifier	ecode		1023970	0					
ANR	1024115	Identifier	code		1023970	1					
ANR	1024116	IfStatement	"if ( ( code = param_write_int_array ( plist , ""TrapOrder"" , & trap_order ) ) < 0 )"		1023970	2					
ANR	1024117	Condition	"( code = param_write_int_array ( plist , ""TrapOrder"" , & trap_order ) ) < 0"	2931:12:95472:95538	1023970	0	True				
ANR	1024118	RelationalExpression	"( code = param_write_int_array ( plist , ""TrapOrder"" , & trap_order ) ) < 0"		1023970	0		<			
ANR	1024119	AssignmentExpression	"code = param_write_int_array ( plist , ""TrapOrder"" , & trap_order )"		1023970	0		=			
ANR	1024120	Identifier	code		1023970	0					
ANR	1024121	CallExpression	"param_write_int_array ( plist , ""TrapOrder"" , & trap_order )"		1023970	1					
ANR	1024122	Callee	param_write_int_array		1023970	0					
ANR	1024123	Identifier	param_write_int_array		1023970	0					
ANR	1024124	ArgumentList	plist		1023970	1					
ANR	1024125	Argument	plist		1023970	0					
ANR	1024126	Identifier	plist		1023970	0					
ANR	1024127	Argument	"""TrapOrder"""		1023970	1					
ANR	1024128	PrimaryExpression	"""TrapOrder"""		1023970	0					
ANR	1024129	Argument	& trap_order		1023970	2					
ANR	1024130	UnaryOperationExpression	& trap_order		1023970	0					
ANR	1024131	UnaryOperator	&		1023970	0					
ANR	1024132	Identifier	trap_order		1023970	1					
ANR	1024133	PrimaryExpression	0		1023970	1					
ANR	1024134	ExpressionStatement	ecode = code	2932:12:95553:95565	1023970	1	True				
ANR	1024135	AssignmentExpression	ecode = code		1023970	0		=			
ANR	1024136	Identifier	ecode		1023970	0					
ANR	1024137	Identifier	code		1023970	1					
ANR	1024138	IfStatement	if ( features & GX_DOWNSCALER_PARAMS_ETS )		1023970	9					
ANR	1024139	Condition	features & GX_DOWNSCALER_PARAMS_ETS	2934:8:95581:95615	1023970	0	True				
ANR	1024140	BitAndExpression	features & GX_DOWNSCALER_PARAMS_ETS		1023970	0		&			
ANR	1024141	Identifier	features		1023970	0					
ANR	1024142	Identifier	GX_DOWNSCALER_PARAMS_ETS		1023970	1					
ANR	1024143	CompoundStatement		27:4:908:908	1023970	1					
ANR	1024144	IfStatement	"if ( ( code = param_write_int ( plist , ""DownScaleETS"" , & params -> ets ) ) < 0 )"		1023970	0					
ANR	1024145	Condition	"( code = param_write_int ( plist , ""DownScaleETS"" , & params -> ets ) ) < 0"	2936:12:95636:95700	1023970	0	True				
ANR	1024146	RelationalExpression	"( code = param_write_int ( plist , ""DownScaleETS"" , & params -> ets ) ) < 0"		1023970	0		<			
ANR	1024147	AssignmentExpression	"code = param_write_int ( plist , ""DownScaleETS"" , & params -> ets )"		1023970	0		=			
ANR	1024148	Identifier	code		1023970	0					
ANR	1024149	CallExpression	"param_write_int ( plist , ""DownScaleETS"" , & params -> ets )"		1023970	1					
ANR	1024150	Callee	param_write_int		1023970	0					
ANR	1024151	Identifier	param_write_int		1023970	0					
ANR	1024152	ArgumentList	plist		1023970	1					
ANR	1024153	Argument	plist		1023970	0					
ANR	1024154	Identifier	plist		1023970	0					
ANR	1024155	Argument	"""DownScaleETS"""		1023970	1					
ANR	1024156	PrimaryExpression	"""DownScaleETS"""		1023970	0					
ANR	1024157	Argument	& params -> ets		1023970	2					
ANR	1024158	UnaryOperationExpression	& params -> ets		1023970	0					
ANR	1024159	UnaryOperator	&		1023970	0					
ANR	1024160	PtrMemberAccess	params -> ets		1023970	1					
ANR	1024161	Identifier	params		1023970	0					
ANR	1024162	Identifier	ets		1023970	1					
ANR	1024163	PrimaryExpression	0		1023970	1					
ANR	1024164	ExpressionStatement	ecode = code	2937:12:95715:95727	1023970	1	True				
ANR	1024165	AssignmentExpression	ecode = code		1023970	0		=			
ANR	1024166	Identifier	ecode		1023970	0					
ANR	1024167	Identifier	code		1023970	1					
ANR	1024168	ReturnStatement	return ecode ;	2940:4:95740:95752	1023970	10	True				
ANR	1024169	Identifier	ecode		1023970	0					
ANR	1024170	ReturnType	int		1023970	1					
ANR	1024171	Identifier	gx_downscaler_write_params		1023970	2					
ANR	1024172	ParameterList	"gs_param_list * plist , gx_downscaler_params * params , int features"		1023970	3					
ANR	1024173	Parameter	gs_param_list * plist	2906:31:94560:94586	1023970	0	True				
ANR	1024174	ParameterType	gs_param_list *		1023970	0					
ANR	1024175	Identifier	plist		1023970	1					
ANR	1024176	Parameter	gx_downscaler_params * params	2907:31:94620:94647	1023970	1	True				
ANR	1024177	ParameterType	gx_downscaler_params *		1023970	0					
ANR	1024178	Identifier	params		1023970	1					
ANR	1024179	Parameter	int features	2908:31:94681:94710	1023970	2	True				
ANR	1024180	ParameterType	int		1023970	0					
ANR	1024181	Identifier	features		1023970	1					
ANR	1024182	CFGEntryNode	ENTRY		1023970		True				
ANR	1024183	CFGExitNode	EXIT		1023970		True				
ANR	1024184	Symbol	code		1023970						
ANR	1024185	Symbol	& params -> min_feature_size		1023970						
ANR	1024186	Symbol	params -> trap_order		1023970						
ANR	1024187	Symbol	trap_order . data		1023970						
ANR	1024188	Symbol	GX_DOWNSCALER_PARAMS_ETS		1023970						
ANR	1024189	Symbol	trap_order		1023970						
ANR	1024190	Symbol	false		1023970						
ANR	1024191	Symbol	& params -> trap_h		1023970						
ANR	1024192	Symbol	trap_order . persistent		1023970						
ANR	1024193	Symbol	params		1023970						
ANR	1024194	Symbol	GS_CLIENT_COLOR_MAX_COMPONENTS		1023970						
ANR	1024195	Symbol	& params -> downscale_factor		1023970						
ANR	1024196	Symbol	ecode		1023970						
ANR	1024197	Symbol	GX_DOWNSCALER_PARAMS_MFS		1023970						
ANR	1024198	Symbol	features		1023970						
ANR	1024199	Symbol	plist		1023970						
ANR	1024200	Symbol	GX_DOWNSCALER_PARAMS_TRAP		1023970						
ANR	1024201	Symbol	param_write_int_array		1023970						
ANR	1024202	Symbol	& params -> trap_w		1023970						
ANR	1024203	Symbol	& trap_order		1023970						
ANR	1024204	Symbol	& params -> ets		1023970						
ANR	1024205	Symbol	trap_order . size		1023970						
ANR	1024206	Symbol	param_write_int		1023970						
ANR	1024207	Symbol	* params		1023970						
ANR	1024208	Function	ets_malloc	2944:0:95798:95919							
ANR	1024209	FunctionDef	"ets_malloc (void * malloc_arg , int size)"		1024208	0					
ANR	1024210	CompoundStatement		2945:0:95843:95919	1024208	0					
ANR	1024211	ReturnStatement	"return gs_alloc_bytes ( ( gs_memory_t * ) malloc_arg , size , ""ets_malloc"" ) ;"	2946:4:95849:95917	1024208	0	True				
ANR	1024212	CallExpression	"gs_alloc_bytes ( ( gs_memory_t * ) malloc_arg , size , ""ets_malloc"" )"		1024208	0					
ANR	1024213	Callee	gs_alloc_bytes		1024208	0					
ANR	1024214	Identifier	gs_alloc_bytes		1024208	0					
ANR	1024215	ArgumentList	( gs_memory_t * ) malloc_arg		1024208	1					
ANR	1024216	Argument	( gs_memory_t * ) malloc_arg		1024208	0					
ANR	1024217	CastExpression	( gs_memory_t * ) malloc_arg		1024208	0					
ANR	1024218	CastTarget	gs_memory_t *		1024208	0					
ANR	1024219	Identifier	malloc_arg		1024208	1					
ANR	1024220	Argument	size		1024208	1					
ANR	1024221	Identifier	size		1024208	0					
ANR	1024222	Argument	"""ets_malloc"""		1024208	2					
ANR	1024223	PrimaryExpression	"""ets_malloc"""		1024208	0					
ANR	1024224	ReturnType	void *		1024208	1					
ANR	1024225	Identifier	ets_malloc		1024208	2					
ANR	1024226	ParameterList	"void * malloc_arg , int size"		1024208	3					
ANR	1024227	Parameter	void * malloc_arg	2944:17:95815:95830	1024208	0	True				
ANR	1024228	ParameterType	void *		1024208	0					
ANR	1024229	Identifier	malloc_arg		1024208	1					
ANR	1024230	Parameter	int size	2944:35:95833:95840	1024208	1	True				
ANR	1024231	ParameterType	int		1024208	0					
ANR	1024232	Identifier	size		1024208	1					
ANR	1024233	CFGEntryNode	ENTRY		1024208		True				
ANR	1024234	CFGExitNode	EXIT		1024208		True				
ANR	1024235	Symbol	gs_alloc_bytes		1024208						
ANR	1024236	Symbol	malloc_arg		1024208						
ANR	1024237	Symbol	size		1024208						
ANR	1024238	Function	ets_calloc	2949:0:95922:96093							
ANR	1024239	FunctionDef	"ets_calloc (void * malloc_arg , int count , int size)"		1024238	0					
ANR	1024240	CompoundStatement		2950:0:95978:96093	1024238	0					
ANR	1024241	IdentifierDeclStatement	"void * p = ets_malloc ( malloc_arg , count * size ) ;"	2951:4:95984:96030	1024238	0	True				
ANR	1024242	IdentifierDecl	"* p = ets_malloc ( malloc_arg , count * size )"		1024238	0					
ANR	1024243	IdentifierDeclType	void *		1024238	0					
ANR	1024244	Identifier	p		1024238	1					
ANR	1024245	AssignmentExpression	"* p = ets_malloc ( malloc_arg , count * size )"		1024238	2		=			
ANR	1024246	Identifier	p		1024238	0					
ANR	1024247	CallExpression	"ets_malloc ( malloc_arg , count * size )"		1024238	1					
ANR	1024248	Callee	ets_malloc		1024238	0					
ANR	1024249	Identifier	ets_malloc		1024238	0					
ANR	1024250	ArgumentList	malloc_arg		1024238	1					
ANR	1024251	Argument	malloc_arg		1024238	0					
ANR	1024252	Identifier	malloc_arg		1024238	0					
ANR	1024253	Argument	count * size		1024238	1					
ANR	1024254	MultiplicativeExpression	count * size		1024238	0		*			
ANR	1024255	Identifier	count		1024238	0					
ANR	1024256	Identifier	size		1024238	1					
ANR	1024257	IfStatement	if ( p )		1024238	1					
ANR	1024258	Condition	p	2952:8:96040:96040	1024238	0	True				
ANR	1024259	Identifier	p		1024238	0					
ANR	1024260	ExpressionStatement	"memset ( p , 0 , count * size )"	2953:8:96051:96077	1024238	1	True				
ANR	1024261	CallExpression	"memset ( p , 0 , count * size )"		1024238	0					
ANR	1024262	Callee	memset		1024238	0					
ANR	1024263	Identifier	memset		1024238	0					
ANR	1024264	ArgumentList	p		1024238	1					
ANR	1024265	Argument	p		1024238	0					
ANR	1024266	Identifier	p		1024238	0					
ANR	1024267	Argument	0		1024238	1					
ANR	1024268	PrimaryExpression	0		1024238	0					
ANR	1024269	Argument	count * size		1024238	2					
ANR	1024270	MultiplicativeExpression	count * size		1024238	0		*			
ANR	1024271	Identifier	count		1024238	0					
ANR	1024272	Identifier	size		1024238	1					
ANR	1024273	ReturnStatement	return p ;	2954:4:96083:96091	1024238	2	True				
ANR	1024274	Identifier	p		1024238	0					
ANR	1024275	ReturnType	void *		1024238	1					
ANR	1024276	Identifier	ets_calloc		1024238	2					
ANR	1024277	ParameterList	"void * malloc_arg , int count , int size"		1024238	3					
ANR	1024278	Parameter	void * malloc_arg	2949:17:95939:95954	1024238	0	True				
ANR	1024279	ParameterType	void *		1024238	0					
ANR	1024280	Identifier	malloc_arg		1024238	1					
ANR	1024281	Parameter	int count	2949:35:95957:95965	1024238	1	True				
ANR	1024282	ParameterType	int		1024238	0					
ANR	1024283	Identifier	count		1024238	1					
ANR	1024284	Parameter	int size	2949:46:95968:95975	1024238	2	True				
ANR	1024285	ParameterType	int		1024238	0					
ANR	1024286	Identifier	size		1024238	1					
ANR	1024287	CFGEntryNode	ENTRY		1024238		True				
ANR	1024288	CFGExitNode	EXIT		1024238		True				
ANR	1024289	Symbol	p		1024238						
ANR	1024290	Symbol	malloc_arg		1024238						
ANR	1024291	Symbol	size		1024238						
ANR	1024292	Symbol	count		1024238						
ANR	1024293	Symbol	ets_malloc		1024238						
ANR	1024294	Function	ets_free	2957:0:96096:96232							
ANR	1024295	FunctionDef	"ets_free (void * malloc_arg , void * p)"		1024294	0					
ANR	1024296	CompoundStatement		2958:0:96137:96232	1024294	0					
ANR	1024297	IfStatement	if ( ! p )		1024294	0					
ANR	1024298	Condition	! p	2959:8:96147:96148	1024294	0	True				
ANR	1024299	UnaryOperationExpression	! p		1024294	0					
ANR	1024300	UnaryOperator	!		1024294	0					
ANR	1024301	Identifier	p		1024294	1					
ANR	1024302	ReturnStatement	return ;	2960:8:96159:96165	1024294	1	True				
ANR	1024303	ExpressionStatement	"gs_free_object ( ( gs_memory_t * ) malloc_arg , p , ""ets_malloc"" )"	2962:4:96172:96230	1024294	1	True				
ANR	1024304	CallExpression	"gs_free_object ( ( gs_memory_t * ) malloc_arg , p , ""ets_malloc"" )"		1024294	0					
ANR	1024305	Callee	gs_free_object		1024294	0					
ANR	1024306	Identifier	gs_free_object		1024294	0					
ANR	1024307	ArgumentList	( gs_memory_t * ) malloc_arg		1024294	1					
ANR	1024308	Argument	( gs_memory_t * ) malloc_arg		1024294	0					
ANR	1024309	CastExpression	( gs_memory_t * ) malloc_arg		1024294	0					
ANR	1024310	CastTarget	gs_memory_t *		1024294	0					
ANR	1024311	Identifier	malloc_arg		1024294	1					
ANR	1024312	Argument	p		1024294	1					
ANR	1024313	Identifier	p		1024294	0					
ANR	1024314	Argument	"""ets_malloc"""		1024294	2					
ANR	1024315	PrimaryExpression	"""ets_malloc"""		1024294	0					
ANR	1024316	ReturnType	void		1024294	1					
ANR	1024317	Identifier	ets_free		1024294	2					
ANR	1024318	ParameterList	"void * malloc_arg , void * p"		1024294	3					
ANR	1024319	Parameter	void * malloc_arg	2957:14:96110:96125	1024294	0	True				
ANR	1024320	ParameterType	void *		1024294	0					
ANR	1024321	Identifier	malloc_arg		1024294	1					
ANR	1024322	Parameter	void * p	2957:32:96128:96134	1024294	1	True				
ANR	1024323	ParameterType	void *		1024294	0					
ANR	1024324	Identifier	p		1024294	1					
ANR	1024325	CFGEntryNode	ENTRY		1024294		True				
ANR	1024326	CFGExitNode	EXIT		1024294		True				
ANR	1024327	Symbol	p		1024294						
ANR	1024328	Symbol	malloc_arg		1024294						
