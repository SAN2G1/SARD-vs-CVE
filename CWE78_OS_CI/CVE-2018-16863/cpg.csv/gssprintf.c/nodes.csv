command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5307902	File	data/converged/CVE-2018-16863_ghostpdl/gssprintf.c								
ANR	5307903	DeclStmt									
ANR	5307904	Decl							uint32_t	uint32_t	apr_uint32_t
ANR	5307905	DeclStmt									
ANR	5307906	Decl							int32_t	int32_t	apr_int32_t
ANR	5307907	DeclStmt									
ANR	5307908	Decl							uint64_t	uint64_t	apr_uint64_t
ANR	5307909	DeclStmt									
ANR	5307910	Decl							int64_t	int64_t	apr_int64_t
ANR	5307911	DeclStmt									
ANR	5307912	Decl							size_t	size_t	apr_size_t
ANR	5307913	DeclStmt									
ANR	5307914	Decl							int64_t	int64_t	apr_off_t
ANR	5307915	DeclStmt									
ANR	5307916	Decl							struct apr_vformatter_buff_t	struct apr_vformatter_buff_t	apr_vformatter_buff_t
ANR	5307917	ClassDef	apr_vformatter_buff_t	49:0:1554:1702							
ANR	5307918	DeclStmt									
ANR	5307919	Decl							char	char *	curpos
ANR	5307920	DeclStmt									
ANR	5307921	Decl							char	char *	endpos
ANR	5307922	ClassDef	<unnamed>	56:8:1714:1752							
ANR	5307923	DeclStmt									
ANR	5307924	Decl									boolean_e
ANR	5307925	DeclStmt									
ANR	5307926	Decl							const char	const char [ ]	null_string
ANR	5307927	Function	apr_cvt	118:0:3256:4798							
ANR	5307928	FunctionDef	"apr_cvt (double arg , int ndigits , int * decpt , int * sign , int eflag , char * buf)"		5307927	0					
ANR	5307929	CompoundStatement		120:0:3369:4798	5307927	0					
ANR	5307930	Statement	register	121:4:3375:3382	5307927	0	True				
ANR	5307931	IdentifierDeclStatement	int r2 ;	121:13:3384:3390	5307927	1	True				
ANR	5307932	IdentifierDecl	r2		5307927	0					
ANR	5307933	IdentifierDeclType	int		5307927	0					
ANR	5307934	Identifier	r2		5307927	1					
ANR	5307935	IdentifierDeclStatement	"double fi , fj ;"	122:4:3396:3409	5307927	2	True				
ANR	5307936	IdentifierDecl	fi		5307927	0					
ANR	5307937	IdentifierDeclType	double		5307927	0					
ANR	5307938	Identifier	fi		5307927	1					
ANR	5307939	IdentifierDecl	fj		5307927	1					
ANR	5307940	IdentifierDeclType	double		5307927	0					
ANR	5307941	Identifier	fj		5307927	1					
ANR	5307942	Statement	register	123:4:3415:3422	5307927	3	True				
ANR	5307943	IdentifierDeclStatement	"char * p , * p1 ;"	123:13:3424:3436	5307927	4	True				
ANR	5307944	IdentifierDecl	* p		5307927	0					
ANR	5307945	IdentifierDeclType	char *		5307927	0					
ANR	5307946	Identifier	p		5307927	1					
ANR	5307947	IdentifierDecl	* p1		5307927	1					
ANR	5307948	IdentifierDeclType	char *		5307927	0					
ANR	5307949	Identifier	p1		5307927	1					
ANR	5307950	IfStatement	if ( ndigits >= NDIG - 1 )		5307927	5					
ANR	5307951	Condition	ndigits >= NDIG - 1	125:8:3451:3469	5307927	0	True				
ANR	5307952	RelationalExpression	ndigits >= NDIG - 1		5307927	0		>=			
ANR	5307953	Identifier	ndigits		5307927	0					
ANR	5307954	AdditiveExpression	NDIG - 1		5307927	1		-			
ANR	5307955	Identifier	NDIG		5307927	0					
ANR	5307956	PrimaryExpression	1		5307927	1					
ANR	5307957	ExpressionStatement	ndigits = NDIG - 2	126:8:3480:3498	5307927	1	True				
ANR	5307958	AssignmentExpression	ndigits = NDIG - 2		5307927	0		=			
ANR	5307959	Identifier	ndigits		5307927	0					
ANR	5307960	AdditiveExpression	NDIG - 2		5307927	1		-			
ANR	5307961	Identifier	NDIG		5307927	0					
ANR	5307962	PrimaryExpression	2		5307927	1					
ANR	5307963	ExpressionStatement	r2 = 0	127:4:3504:3510	5307927	6	True				
ANR	5307964	AssignmentExpression	r2 = 0		5307927	0		=			
ANR	5307965	Identifier	r2		5307927	0					
ANR	5307966	PrimaryExpression	0		5307927	1					
ANR	5307967	ExpressionStatement	* sign = 0	128:4:3516:3525	5307927	7	True				
ANR	5307968	AssignmentExpression	* sign = 0		5307927	0		=			
ANR	5307969	UnaryOperationExpression	* sign		5307927	0					
ANR	5307970	UnaryOperator	*		5307927	0					
ANR	5307971	Identifier	sign		5307927	1					
ANR	5307972	PrimaryExpression	0		5307927	1					
ANR	5307973	ExpressionStatement	p = & buf [ 0 ]	129:4:3531:3542	5307927	8	True				
ANR	5307974	AssignmentExpression	p = & buf [ 0 ]		5307927	0		=			
ANR	5307975	Identifier	p		5307927	0					
ANR	5307976	UnaryOperationExpression	& buf [ 0 ]		5307927	1					
ANR	5307977	UnaryOperator	&		5307927	0					
ANR	5307978	ArrayIndexing	buf [ 0 ]		5307927	1					
ANR	5307979	Identifier	buf		5307927	0					
ANR	5307980	PrimaryExpression	0		5307927	1					
ANR	5307981	IfStatement	if ( arg < 0 )		5307927	9					
ANR	5307982	Condition	arg < 0	130:8:3552:3558	5307927	0	True				
ANR	5307983	RelationalExpression	arg < 0		5307927	0		<			
ANR	5307984	Identifier	arg		5307927	0					
ANR	5307985	PrimaryExpression	0		5307927	1					
ANR	5307986	CompoundStatement		11:17:191:191	5307927	1					
ANR	5307987	ExpressionStatement	* sign = 1	131:8:3571:3580	5307927	0	True				
ANR	5307988	AssignmentExpression	* sign = 1		5307927	0		=			
ANR	5307989	UnaryOperationExpression	* sign		5307927	0					
ANR	5307990	UnaryOperator	*		5307927	0					
ANR	5307991	Identifier	sign		5307927	1					
ANR	5307992	PrimaryExpression	1		5307927	1					
ANR	5307993	ExpressionStatement	arg = - arg	132:8:3590:3600	5307927	1	True				
ANR	5307994	AssignmentExpression	arg = - arg		5307927	0		=			
ANR	5307995	Identifier	arg		5307927	0					
ANR	5307996	UnaryOperationExpression	- arg		5307927	1					
ANR	5307997	UnaryOperator	-		5307927	0					
ANR	5307998	Identifier	arg		5307927	1					
ANR	5307999	ExpressionStatement	"arg = modf ( arg , & fi )"	134:4:3612:3632	5307927	10	True				
ANR	5308000	AssignmentExpression	"arg = modf ( arg , & fi )"		5307927	0		=			
ANR	5308001	Identifier	arg		5307927	0					
ANR	5308002	CallExpression	"modf ( arg , & fi )"		5307927	1					
ANR	5308003	Callee	modf		5307927	0					
ANR	5308004	Identifier	modf		5307927	0					
ANR	5308005	ArgumentList	arg		5307927	1					
ANR	5308006	Argument	arg		5307927	0					
ANR	5308007	Identifier	arg		5307927	0					
ANR	5308008	Argument	& fi		5307927	1					
ANR	5308009	UnaryOperationExpression	& fi		5307927	0					
ANR	5308010	UnaryOperator	&		5307927	0					
ANR	5308011	Identifier	fi		5307927	1					
ANR	5308012	IfStatement	if ( fi != 0 )		5307927	11					
ANR	5308013	Condition	fi != 0	138:8:3680:3686	5307927	0	True				
ANR	5308014	EqualityExpression	fi != 0		5307927	0		!=			
ANR	5308015	Identifier	fi		5307927	0					
ANR	5308016	PrimaryExpression	0		5307927	1					
ANR	5308017	CompoundStatement		19:17:319:319	5307927	1					
ANR	5308018	ExpressionStatement	p1 = & buf [ NDIG ]	139:8:3699:3714	5307927	0	True				
ANR	5308019	AssignmentExpression	p1 = & buf [ NDIG ]		5307927	0		=			
ANR	5308020	Identifier	p1		5307927	0					
ANR	5308021	UnaryOperationExpression	& buf [ NDIG ]		5307927	1					
ANR	5308022	UnaryOperator	&		5307927	0					
ANR	5308023	ArrayIndexing	buf [ NDIG ]		5307927	1					
ANR	5308024	Identifier	buf		5307927	0					
ANR	5308025	Identifier	NDIG		5307927	1					
ANR	5308026	WhileStatement	while ( p1 > & buf [ 0 ] && fi != 0 )		5307927	1					
ANR	5308027	Condition	p1 > & buf [ 0 ] && fi != 0	140:15:3731:3753	5307927	0	True				
ANR	5308028	AndExpression	p1 > & buf [ 0 ] && fi != 0		5307927	0		&&			
ANR	5308029	RelationalExpression	p1 > & buf [ 0 ]		5307927	0		>			
ANR	5308030	Identifier	p1		5307927	0					
ANR	5308031	UnaryOperationExpression	& buf [ 0 ]		5307927	1					
ANR	5308032	UnaryOperator	&		5307927	0					
ANR	5308033	ArrayIndexing	buf [ 0 ]		5307927	1					
ANR	5308034	Identifier	buf		5307927	0					
ANR	5308035	PrimaryExpression	0		5307927	1					
ANR	5308036	EqualityExpression	fi != 0		5307927	1		!=			
ANR	5308037	Identifier	fi		5307927	0					
ANR	5308038	PrimaryExpression	0		5307927	1					
ANR	5308039	CompoundStatement		21:40:386:386	5307927	1					
ANR	5308040	ExpressionStatement	"fj = modf ( fi / 10 , & fi )"	141:12:3770:3793	5307927	0	True				
ANR	5308041	AssignmentExpression	"fj = modf ( fi / 10 , & fi )"		5307927	0		=			
ANR	5308042	Identifier	fj		5307927	0					
ANR	5308043	CallExpression	"modf ( fi / 10 , & fi )"		5307927	1					
ANR	5308044	Callee	modf		5307927	0					
ANR	5308045	Identifier	modf		5307927	0					
ANR	5308046	ArgumentList	fi / 10		5307927	1					
ANR	5308047	Argument	fi / 10		5307927	0					
ANR	5308048	MultiplicativeExpression	fi / 10		5307927	0		/			
ANR	5308049	Identifier	fi		5307927	0					
ANR	5308050	PrimaryExpression	10		5307927	1					
ANR	5308051	Argument	& fi		5307927	1					
ANR	5308052	UnaryOperationExpression	& fi		5307927	0					
ANR	5308053	UnaryOperator	&		5307927	0					
ANR	5308054	Identifier	fi		5307927	1					
ANR	5308055	ExpressionStatement	* -- p1 = ( int ) ( ( fj + .03 ) * 10 ) + '0'	142:12:3807:3844	5307927	1	True				
ANR	5308056	AssignmentExpression	* -- p1 = ( int ) ( ( fj + .03 ) * 10 ) + '0'		5307927	0		=			
ANR	5308057	UnaryOperationExpression	* -- p1		5307927	0					
ANR	5308058	UnaryOperator	*		5307927	0					
ANR	5308059	UnaryExpression	-- p1		5307927	1					
ANR	5308060	IncDec	--		5307927	0					
ANR	5308061	Identifier	p1		5307927	1					
ANR	5308062	AdditiveExpression	( int ) ( ( fj + .03 ) * 10 ) + '0'		5307927	1		+			
ANR	5308063	CastExpression	( int ) ( ( fj + .03 ) * 10 )		5307927	0					
ANR	5308064	CastTarget	int		5307927	0					
ANR	5308065	MultiplicativeExpression	( fj + .03 ) * 10		5307927	1		*			
ANR	5308066	AdditiveExpression	fj + .03		5307927	0		+			
ANR	5308067	Identifier	fj		5307927	0					
ANR	5308068	PrimaryExpression	.03		5307927	1					
ANR	5308069	PrimaryExpression	10		5307927	1					
ANR	5308070	PrimaryExpression	'0'		5307927	1					
ANR	5308071	ExpressionStatement	r2 ++	143:12:3858:3862	5307927	2	True				
ANR	5308072	PostIncDecOperationExpression	r2 ++		5307927	0					
ANR	5308073	Identifier	r2		5307927	0					
ANR	5308074	IncDec	++		5307927	1					
ANR	5308075	WhileStatement	while ( p1 < & buf [ NDIG ] )		5307927	2					
ANR	5308076	Condition	p1 < & buf [ NDIG ]	145:15:3889:3903	5307927	0	True				
ANR	5308077	RelationalExpression	p1 < & buf [ NDIG ]		5307927	0		<			
ANR	5308078	Identifier	p1		5307927	0					
ANR	5308079	UnaryOperationExpression	& buf [ NDIG ]		5307927	1					
ANR	5308080	UnaryOperator	&		5307927	0					
ANR	5308081	ArrayIndexing	buf [ NDIG ]		5307927	1					
ANR	5308082	Identifier	buf		5307927	0					
ANR	5308083	Identifier	NDIG		5307927	1					
ANR	5308084	ExpressionStatement	* p ++ = * p1 ++	146:12:3918:3930	5307927	1	True				
ANR	5308085	AssignmentExpression	* p ++ = * p1 ++		5307927	0		=			
ANR	5308086	UnaryOperationExpression	* p ++		5307927	0					
ANR	5308087	UnaryOperator	*		5307927	0					
ANR	5308088	PostIncDecOperationExpression	p ++		5307927	1					
ANR	5308089	Identifier	p		5307927	0					
ANR	5308090	IncDec	++		5307927	1					
ANR	5308091	UnaryOperationExpression	* p1 ++		5307927	1					
ANR	5308092	UnaryOperator	*		5307927	0					
ANR	5308093	PostIncDecOperationExpression	p1 ++		5307927	1					
ANR	5308094	Identifier	p1		5307927	0					
ANR	5308095	IncDec	++		5307927	1					
ANR	5308096	ElseStatement	else		5307927	0					
ANR	5308097	IfStatement	if ( arg > 0 )		5307927	0					
ANR	5308098	Condition	arg > 0	148:13:3951:3957	5307927	0	True				
ANR	5308099	RelationalExpression	arg > 0		5307927	0		>			
ANR	5308100	Identifier	arg		5307927	0					
ANR	5308101	PrimaryExpression	0		5307927	1					
ANR	5308102	CompoundStatement		29:22:590:590	5307927	1					
ANR	5308103	WhileStatement	while ( ( fj = arg * 10 ) < 1 )		5307927	0					
ANR	5308104	Condition	( fj = arg * 10 ) < 1	149:15:3977:3995	5307927	0	True				
ANR	5308105	RelationalExpression	( fj = arg * 10 ) < 1		5307927	0		<			
ANR	5308106	AssignmentExpression	fj = arg * 10		5307927	0		=			
ANR	5308107	Identifier	fj		5307927	0					
ANR	5308108	MultiplicativeExpression	arg * 10		5307927	1		*			
ANR	5308109	Identifier	arg		5307927	0					
ANR	5308110	PrimaryExpression	10		5307927	1					
ANR	5308111	PrimaryExpression	1		5307927	1					
ANR	5308112	CompoundStatement		30:36:628:628	5307927	1					
ANR	5308113	ExpressionStatement	arg = fj	150:12:4012:4020	5307927	0	True				
ANR	5308114	AssignmentExpression	arg = fj		5307927	0		=			
ANR	5308115	Identifier	arg		5307927	0					
ANR	5308116	Identifier	fj		5307927	1					
ANR	5308117	ExpressionStatement	r2 --	151:12:4034:4038	5307927	1	True				
ANR	5308118	PostIncDecOperationExpression	r2 --		5307927	0					
ANR	5308119	Identifier	r2		5307927	0					
ANR	5308120	IncDec	--		5307927	1					
ANR	5308121	ExpressionStatement	p1 = & buf [ ndigits ]	154:4:4060:4078	5307927	12	True				
ANR	5308122	AssignmentExpression	p1 = & buf [ ndigits ]		5307927	0		=			
ANR	5308123	Identifier	p1		5307927	0					
ANR	5308124	UnaryOperationExpression	& buf [ ndigits ]		5307927	1					
ANR	5308125	UnaryOperator	&		5307927	0					
ANR	5308126	ArrayIndexing	buf [ ndigits ]		5307927	1					
ANR	5308127	Identifier	buf		5307927	0					
ANR	5308128	Identifier	ndigits		5307927	1					
ANR	5308129	IfStatement	if ( eflag == 0 )		5307927	13					
ANR	5308130	Condition	eflag == 0	155:8:4088:4097	5307927	0	True				
ANR	5308131	EqualityExpression	eflag == 0		5307927	0		==			
ANR	5308132	Identifier	eflag		5307927	0					
ANR	5308133	PrimaryExpression	0		5307927	1					
ANR	5308134	ExpressionStatement	p1 += r2	156:8:4108:4116	5307927	1	True				
ANR	5308135	AssignmentExpression	p1 += r2		5307927	0		+=			
ANR	5308136	Identifier	p1		5307927	0					
ANR	5308137	Identifier	r2		5307927	1					
ANR	5308138	IfStatement	if ( p1 < & buf [ 0 ] )		5307927	14					
ANR	5308139	Condition	p1 < & buf [ 0 ]	157:8:4126:4137	5307927	0	True				
ANR	5308140	RelationalExpression	p1 < & buf [ 0 ]		5307927	0		<			
ANR	5308141	Identifier	p1		5307927	0					
ANR	5308142	UnaryOperationExpression	& buf [ 0 ]		5307927	1					
ANR	5308143	UnaryOperator	&		5307927	0					
ANR	5308144	ArrayIndexing	buf [ 0 ]		5307927	1					
ANR	5308145	Identifier	buf		5307927	0					
ANR	5308146	PrimaryExpression	0		5307927	1					
ANR	5308147	CompoundStatement		38:22:770:770	5307927	1					
ANR	5308148	ExpressionStatement	* decpt = - ndigits	158:8:4150:4167	5307927	0	True				
ANR	5308149	AssignmentExpression	* decpt = - ndigits		5307927	0		=			
ANR	5308150	UnaryOperationExpression	* decpt		5307927	0					
ANR	5308151	UnaryOperator	*		5307927	0					
ANR	5308152	Identifier	decpt		5307927	1					
ANR	5308153	UnaryOperationExpression	- ndigits		5307927	1					
ANR	5308154	UnaryOperator	-		5307927	0					
ANR	5308155	Identifier	ndigits		5307927	1					
ANR	5308156	ExpressionStatement	buf [ 0 ] = '\\0'	159:8:4177:4190	5307927	1	True				
ANR	5308157	AssignmentExpression	buf [ 0 ] = '\\0'		5307927	0		=			
ANR	5308158	ArrayIndexing	buf [ 0 ]		5307927	0					
ANR	5308159	Identifier	buf		5307927	0					
ANR	5308160	PrimaryExpression	0		5307927	1					
ANR	5308161	PrimaryExpression	'\\0'		5307927	1					
ANR	5308162	ReturnStatement	return ( buf ) ;	160:8:4200:4212	5307927	2	True				
ANR	5308163	Identifier	buf		5307927	0					
ANR	5308164	ExpressionStatement	* decpt = r2	162:4:4224:4235	5307927	15	True				
ANR	5308165	AssignmentExpression	* decpt = r2		5307927	0		=			
ANR	5308166	UnaryOperationExpression	* decpt		5307927	0					
ANR	5308167	UnaryOperator	*		5307927	0					
ANR	5308168	Identifier	decpt		5307927	1					
ANR	5308169	Identifier	r2		5307927	1					
ANR	5308170	WhileStatement	while ( p <= p1 && p < & buf [ NDIG ] )		5307927	16					
ANR	5308171	Condition	p <= p1 && p < & buf [ NDIG ]	163:11:4248:4272	5307927	0	True				
ANR	5308172	AndExpression	p <= p1 && p < & buf [ NDIG ]		5307927	0		&&			
ANR	5308173	RelationalExpression	p <= p1		5307927	0		<=			
ANR	5308174	Identifier	p		5307927	0					
ANR	5308175	Identifier	p1		5307927	1					
ANR	5308176	RelationalExpression	p < & buf [ NDIG ]		5307927	1		<			
ANR	5308177	Identifier	p		5307927	0					
ANR	5308178	UnaryOperationExpression	& buf [ NDIG ]		5307927	1					
ANR	5308179	UnaryOperator	&		5307927	0					
ANR	5308180	ArrayIndexing	buf [ NDIG ]		5307927	1					
ANR	5308181	Identifier	buf		5307927	0					
ANR	5308182	Identifier	NDIG		5307927	1					
ANR	5308183	CompoundStatement		44:38:905:905	5307927	1					
ANR	5308184	ExpressionStatement	arg *= 10	164:8:4285:4294	5307927	0	True				
ANR	5308185	AssignmentExpression	arg *= 10		5307927	0		*=			
ANR	5308186	Identifier	arg		5307927	0					
ANR	5308187	PrimaryExpression	10		5307927	1					
ANR	5308188	ExpressionStatement	"arg = modf ( arg , & fj )"	165:8:4304:4324	5307927	1	True				
ANR	5308189	AssignmentExpression	"arg = modf ( arg , & fj )"		5307927	0		=			
ANR	5308190	Identifier	arg		5307927	0					
ANR	5308191	CallExpression	"modf ( arg , & fj )"		5307927	1					
ANR	5308192	Callee	modf		5307927	0					
ANR	5308193	Identifier	modf		5307927	0					
ANR	5308194	ArgumentList	arg		5307927	1					
ANR	5308195	Argument	arg		5307927	0					
ANR	5308196	Identifier	arg		5307927	0					
ANR	5308197	Argument	& fj		5307927	1					
ANR	5308198	UnaryOperationExpression	& fj		5307927	0					
ANR	5308199	UnaryOperator	&		5307927	0					
ANR	5308200	Identifier	fj		5307927	1					
ANR	5308201	ExpressionStatement	* p ++ = ( int ) fj + '0'	166:8:4334:4355	5307927	2	True				
ANR	5308202	AssignmentExpression	* p ++ = ( int ) fj + '0'		5307927	0		=			
ANR	5308203	UnaryOperationExpression	* p ++		5307927	0					
ANR	5308204	UnaryOperator	*		5307927	0					
ANR	5308205	PostIncDecOperationExpression	p ++		5307927	1					
ANR	5308206	Identifier	p		5307927	0					
ANR	5308207	IncDec	++		5307927	1					
ANR	5308208	AdditiveExpression	( int ) fj + '0'		5307927	1		+			
ANR	5308209	CastExpression	( int ) fj		5307927	0					
ANR	5308210	CastTarget	int		5307927	0					
ANR	5308211	Identifier	fj		5307927	1					
ANR	5308212	PrimaryExpression	'0'		5307927	1					
ANR	5308213	IfStatement	if ( p1 >= & buf [ NDIG ] )		5307927	17					
ANR	5308214	Condition	p1 >= & buf [ NDIG ]	168:8:4371:4386	5307927	0	True				
ANR	5308215	RelationalExpression	p1 >= & buf [ NDIG ]		5307927	0		>=			
ANR	5308216	Identifier	p1		5307927	0					
ANR	5308217	UnaryOperationExpression	& buf [ NDIG ]		5307927	1					
ANR	5308218	UnaryOperator	&		5307927	0					
ANR	5308219	ArrayIndexing	buf [ NDIG ]		5307927	1					
ANR	5308220	Identifier	buf		5307927	0					
ANR	5308221	Identifier	NDIG		5307927	1					
ANR	5308222	CompoundStatement		49:26:1019:1019	5307927	1					
ANR	5308223	ExpressionStatement	buf [ NDIG - 1 ] = '\\0'	169:8:4399:4419	5307927	0	True				
ANR	5308224	AssignmentExpression	buf [ NDIG - 1 ] = '\\0'		5307927	0		=			
ANR	5308225	ArrayIndexing	buf [ NDIG - 1 ]		5307927	0					
ANR	5308226	Identifier	buf		5307927	0					
ANR	5308227	AdditiveExpression	NDIG - 1		5307927	1		-			
ANR	5308228	Identifier	NDIG		5307927	0					
ANR	5308229	PrimaryExpression	1		5307927	1					
ANR	5308230	PrimaryExpression	'\\0'		5307927	1					
ANR	5308231	ReturnStatement	return ( buf ) ;	170:8:4429:4441	5307927	1	True				
ANR	5308232	Identifier	buf		5307927	0					
ANR	5308233	ExpressionStatement	p = p1	172:4:4453:4459	5307927	18	True				
ANR	5308234	AssignmentExpression	p = p1		5307927	0		=			
ANR	5308235	Identifier	p		5307927	0					
ANR	5308236	Identifier	p1		5307927	1					
ANR	5308237	ExpressionStatement	* p1 += 5	173:4:4465:4473	5307927	19	True				
ANR	5308238	AssignmentExpression	* p1 += 5		5307927	0		+=			
ANR	5308239	UnaryOperationExpression	* p1		5307927	0					
ANR	5308240	UnaryOperator	*		5307927	0					
ANR	5308241	Identifier	p1		5307927	1					
ANR	5308242	PrimaryExpression	5		5307927	1					
ANR	5308243	WhileStatement	while ( * p1 > '9' )		5307927	20					
ANR	5308244	Condition	* p1 > '9'	174:11:4486:4494	5307927	0	True				
ANR	5308245	RelationalExpression	* p1 > '9'		5307927	0		>			
ANR	5308246	UnaryOperationExpression	* p1		5307927	0					
ANR	5308247	UnaryOperator	*		5307927	0					
ANR	5308248	Identifier	p1		5307927	1					
ANR	5308249	PrimaryExpression	'9'		5307927	1					
ANR	5308250	CompoundStatement		55:22:1127:1127	5307927	1					
ANR	5308251	ExpressionStatement	* p1 = '0'	175:8:4507:4516	5307927	0	True				
ANR	5308252	AssignmentExpression	* p1 = '0'		5307927	0		=			
ANR	5308253	UnaryOperationExpression	* p1		5307927	0					
ANR	5308254	UnaryOperator	*		5307927	0					
ANR	5308255	Identifier	p1		5307927	1					
ANR	5308256	PrimaryExpression	'0'		5307927	1					
ANR	5308257	IfStatement	if ( p1 > buf )		5307927	1					
ANR	5308258	Condition	p1 > buf	176:12:4530:4537	5307927	0	True				
ANR	5308259	RelationalExpression	p1 > buf		5307927	0		>			
ANR	5308260	Identifier	p1		5307927	0					
ANR	5308261	Identifier	buf		5307927	1					
ANR	5308262	ExpressionStatement	++ * -- p1	177:12:4552:4561	5307927	1	True				
ANR	5308263	UnaryExpression	++ * -- p1		5307927	0					
ANR	5308264	IncDec	++		5307927	0					
ANR	5308265	UnaryOperationExpression	* -- p1		5307927	1					
ANR	5308266	UnaryOperator	*		5307927	0					
ANR	5308267	UnaryExpression	-- p1		5307927	1					
ANR	5308268	IncDec	--		5307927	0					
ANR	5308269	Identifier	p1		5307927	1					
ANR	5308270	ElseStatement	else		5307927	0					
ANR	5308271	CompoundStatement		59:13:1206:1206	5307927	0					
ANR	5308272	ExpressionStatement	* p1 = '1'	179:12:4590:4599	5307927	0	True				
ANR	5308273	AssignmentExpression	* p1 = '1'		5307927	0		=			
ANR	5308274	UnaryOperationExpression	* p1		5307927	0					
ANR	5308275	UnaryOperator	*		5307927	0					
ANR	5308276	Identifier	p1		5307927	1					
ANR	5308277	PrimaryExpression	'1'		5307927	1					
ANR	5308278	ExpressionStatement	( * decpt ) ++	180:12:4613:4623	5307927	1	True				
ANR	5308279	PostIncDecOperationExpression	( * decpt ) ++		5307927	0					
ANR	5308280	UnaryOperationExpression	* decpt		5307927	0					
ANR	5308281	UnaryOperator	*		5307927	0					
ANR	5308282	Identifier	decpt		5307927	1					
ANR	5308283	IncDec	++		5307927	1					
ANR	5308284	IfStatement	if ( eflag == 0 )		5307927	2					
ANR	5308285	Condition	eflag == 0	181:16:4641:4650	5307927	0	True				
ANR	5308286	EqualityExpression	eflag == 0		5307927	0		==			
ANR	5308287	Identifier	eflag		5307927	0					
ANR	5308288	PrimaryExpression	0		5307927	1					
ANR	5308289	CompoundStatement		62:28:1283:1283	5307927	1					
ANR	5308290	IfStatement	if ( p > buf )		5307927	0					
ANR	5308291	Condition	p > buf	182:20:4675:4681	5307927	0	True				
ANR	5308292	RelationalExpression	p > buf		5307927	0		>			
ANR	5308293	Identifier	p		5307927	0					
ANR	5308294	Identifier	buf		5307927	1					
ANR	5308295	ExpressionStatement	* p = '0'	183:20:4704:4712	5307927	1	True				
ANR	5308296	AssignmentExpression	* p = '0'		5307927	0		=			
ANR	5308297	UnaryOperationExpression	* p		5307927	0					
ANR	5308298	UnaryOperator	*		5307927	0					
ANR	5308299	Identifier	p		5307927	1					
ANR	5308300	PrimaryExpression	'0'		5307927	1					
ANR	5308301	ExpressionStatement	p ++	184:16:4730:4733	5307927	1	True				
ANR	5308302	PostIncDecOperationExpression	p ++		5307927	0					
ANR	5308303	Identifier	p		5307927	0					
ANR	5308304	IncDec	++		5307927	1					
ANR	5308305	ExpressionStatement	* p = '\\0'	188:4:4769:4778	5307927	21	True				
ANR	5308306	AssignmentExpression	* p = '\\0'		5307927	0		=			
ANR	5308307	UnaryOperationExpression	* p		5307927	0					
ANR	5308308	UnaryOperator	*		5307927	0					
ANR	5308309	Identifier	p		5307927	1					
ANR	5308310	PrimaryExpression	'\\0'		5307927	1					
ANR	5308311	ReturnStatement	return ( buf ) ;	189:4:4784:4796	5307927	22	True				
ANR	5308312	Identifier	buf		5307927	0					
ANR	5308313	ReturnType	static char *		5307927	1					
ANR	5308314	Identifier	apr_cvt		5307927	2					
ANR	5308315	ParameterList	"double arg , int ndigits , int * decpt , int * sign , int eflag , char * buf"		5307927	3					
ANR	5308316	Parameter	double arg	118:21:3277:3286	5307927	0	True				
ANR	5308317	ParameterType	double		5307927	0					
ANR	5308318	Identifier	arg		5307927	1					
ANR	5308319	Parameter	int ndigits	118:33:3289:3299	5307927	1	True				
ANR	5308320	ParameterType	int		5307927	0					
ANR	5308321	Identifier	ndigits		5307927	1					
ANR	5308322	Parameter	int * decpt	118:46:3302:3311	5307927	2	True				
ANR	5308323	ParameterType	int *		5307927	0					
ANR	5308324	Identifier	decpt		5307927	1					
ANR	5308325	Parameter	int * sign	118:58:3314:3322	5307927	3	True				
ANR	5308326	ParameterType	int *		5307927	0					
ANR	5308327	Identifier	sign		5307927	1					
ANR	5308328	Parameter	int eflag	119:21:3347:3355	5307927	4	True				
ANR	5308329	ParameterType	int		5307927	0					
ANR	5308330	Identifier	eflag		5307927	1					
ANR	5308331	Parameter	char * buf	119:32:3358:3366	5307927	5	True				
ANR	5308332	ParameterType	char *		5307927	0					
ANR	5308333	Identifier	buf		5307927	1					
ANR	5308334	CFGEntryNode	ENTRY		5307927		True				
ANR	5308335	CFGExitNode	EXIT		5307927		True				
ANR	5308336	Symbol	r2		5307927						
ANR	5308337	Symbol	p1		5307927						
ANR	5308338	Symbol	* decpt		5307927						
ANR	5308339	Symbol	* buf		5307927						
ANR	5308340	Symbol	fi		5307927						
ANR	5308341	Symbol	fj		5307927						
ANR	5308342	Symbol	* -- p1		5307927						
ANR	5308343	Symbol	* p1		5307927						
ANR	5308344	Symbol	* p ++		5307927						
ANR	5308345	Symbol	sign		5307927						
ANR	5308346	Symbol	* p1 ++		5307927						
ANR	5308347	Symbol	& fi		5307927						
ANR	5308348	Symbol	eflag		5307927						
ANR	5308349	Symbol	& fj		5307927						
ANR	5308350	Symbol	p		5307927						
ANR	5308351	Symbol	NDIG		5307927						
ANR	5308352	Symbol	buf		5307927						
ANR	5308353	Symbol	decpt		5307927						
ANR	5308354	Symbol	arg		5307927						
ANR	5308355	Symbol	* sign		5307927						
ANR	5308356	Symbol	modf		5307927						
ANR	5308357	Symbol	* NDIG		5307927						
ANR	5308358	Symbol	* p		5307927						
ANR	5308359	Symbol	ndigits		5307927						
ANR	5308360	Function	apr_ecvt	192:0:4801:4941							
ANR	5308361	FunctionDef	"apr_ecvt (double arg , int ndigits , int * decpt , int * sign , char * buf)"		5308360	0					
ANR	5308362	CompoundStatement		193:0:4882:4941	5308360	0					
ANR	5308363	ReturnStatement	"return ( apr_cvt ( arg , ndigits , decpt , sign , 1 , buf ) ) ;"	194:4:4888:4939	5308360	0	True				
ANR	5308364	CallExpression	"apr_cvt ( arg , ndigits , decpt , sign , 1 , buf )"		5308360	0					
ANR	5308365	Callee	apr_cvt		5308360	0					
ANR	5308366	Identifier	apr_cvt		5308360	0					
ANR	5308367	ArgumentList	arg		5308360	1					
ANR	5308368	Argument	arg		5308360	0					
ANR	5308369	Identifier	arg		5308360	0					
ANR	5308370	Argument	ndigits		5308360	1					
ANR	5308371	Identifier	ndigits		5308360	0					
ANR	5308372	Argument	decpt		5308360	2					
ANR	5308373	Identifier	decpt		5308360	0					
ANR	5308374	Argument	sign		5308360	3					
ANR	5308375	Identifier	sign		5308360	0					
ANR	5308376	Argument	1		5308360	4					
ANR	5308377	PrimaryExpression	1		5308360	0					
ANR	5308378	Argument	buf		5308360	5					
ANR	5308379	Identifier	buf		5308360	0					
ANR	5308380	ReturnType	static char *		5308360	1					
ANR	5308381	Identifier	apr_ecvt		5308360	2					
ANR	5308382	ParameterList	"double arg , int ndigits , int * decpt , int * sign , char * buf"		5308360	3					
ANR	5308383	Parameter	double arg	192:22:4823:4832	5308360	0	True				
ANR	5308384	ParameterType	double		5308360	0					
ANR	5308385	Identifier	arg		5308360	1					
ANR	5308386	Parameter	int ndigits	192:34:4835:4845	5308360	1	True				
ANR	5308387	ParameterType	int		5308360	0					
ANR	5308388	Identifier	ndigits		5308360	1					
ANR	5308389	Parameter	int * decpt	192:47:4848:4857	5308360	2	True				
ANR	5308390	ParameterType	int *		5308360	0					
ANR	5308391	Identifier	decpt		5308360	1					
ANR	5308392	Parameter	int * sign	192:59:4860:4868	5308360	3	True				
ANR	5308393	ParameterType	int *		5308360	0					
ANR	5308394	Identifier	sign		5308360	1					
ANR	5308395	Parameter	char * buf	192:70:4871:4879	5308360	4	True				
ANR	5308396	ParameterType	char *		5308360	0					
ANR	5308397	Identifier	buf		5308360	1					
ANR	5308398	CFGEntryNode	ENTRY		5308360		True				
ANR	5308399	CFGExitNode	EXIT		5308360		True				
ANR	5308400	Symbol	buf		5308360						
ANR	5308401	Symbol	decpt		5308360						
ANR	5308402	Symbol	arg		5308360						
ANR	5308403	Symbol	sign		5308360						
ANR	5308404	Symbol	apr_cvt		5308360						
ANR	5308405	Symbol	ndigits		5308360						
ANR	5308406	Function	apr_fcvt	197:0:4944:5084							
ANR	5308407	FunctionDef	"apr_fcvt (double arg , int ndigits , int * decpt , int * sign , char * buf)"		5308406	0					
ANR	5308408	CompoundStatement		198:0:5025:5084	5308406	0					
ANR	5308409	ReturnStatement	"return ( apr_cvt ( arg , ndigits , decpt , sign , 0 , buf ) ) ;"	199:4:5031:5082	5308406	0	True				
ANR	5308410	CallExpression	"apr_cvt ( arg , ndigits , decpt , sign , 0 , buf )"		5308406	0					
ANR	5308411	Callee	apr_cvt		5308406	0					
ANR	5308412	Identifier	apr_cvt		5308406	0					
ANR	5308413	ArgumentList	arg		5308406	1					
ANR	5308414	Argument	arg		5308406	0					
ANR	5308415	Identifier	arg		5308406	0					
ANR	5308416	Argument	ndigits		5308406	1					
ANR	5308417	Identifier	ndigits		5308406	0					
ANR	5308418	Argument	decpt		5308406	2					
ANR	5308419	Identifier	decpt		5308406	0					
ANR	5308420	Argument	sign		5308406	3					
ANR	5308421	Identifier	sign		5308406	0					
ANR	5308422	Argument	0		5308406	4					
ANR	5308423	PrimaryExpression	0		5308406	0					
ANR	5308424	Argument	buf		5308406	5					
ANR	5308425	Identifier	buf		5308406	0					
ANR	5308426	ReturnType	static char *		5308406	1					
ANR	5308427	Identifier	apr_fcvt		5308406	2					
ANR	5308428	ParameterList	"double arg , int ndigits , int * decpt , int * sign , char * buf"		5308406	3					
ANR	5308429	Parameter	double arg	197:22:4966:4975	5308406	0	True				
ANR	5308430	ParameterType	double		5308406	0					
ANR	5308431	Identifier	arg		5308406	1					
ANR	5308432	Parameter	int ndigits	197:34:4978:4988	5308406	1	True				
ANR	5308433	ParameterType	int		5308406	0					
ANR	5308434	Identifier	ndigits		5308406	1					
ANR	5308435	Parameter	int * decpt	197:47:4991:5000	5308406	2	True				
ANR	5308436	ParameterType	int *		5308406	0					
ANR	5308437	Identifier	decpt		5308406	1					
ANR	5308438	Parameter	int * sign	197:59:5003:5011	5308406	3	True				
ANR	5308439	ParameterType	int *		5308406	0					
ANR	5308440	Identifier	sign		5308406	1					
ANR	5308441	Parameter	char * buf	197:70:5014:5022	5308406	4	True				
ANR	5308442	ParameterType	char *		5308406	0					
ANR	5308443	Identifier	buf		5308406	1					
ANR	5308444	CFGEntryNode	ENTRY		5308406		True				
ANR	5308445	CFGExitNode	EXIT		5308406		True				
ANR	5308446	Symbol	buf		5308406						
ANR	5308447	Symbol	decpt		5308406						
ANR	5308448	Symbol	arg		5308406						
ANR	5308449	Symbol	sign		5308406						
ANR	5308450	Symbol	apr_cvt		5308406						
ANR	5308451	Symbol	ndigits		5308406						
ANR	5308452	Function	apr_gcvt	207:0:5165:7040							
ANR	5308453	FunctionDef	"apr_gcvt (double number , int ndigit , char * buf , boolean_e altform)"		5308452	0					
ANR	5308454	CompoundStatement		208:0:5244:7040	5308452	0					
ANR	5308455	IdentifierDeclStatement	"int sign , decpt ;"	209:4:5250:5265	5308452	0	True				
ANR	5308456	IdentifierDecl	sign		5308452	0					
ANR	5308457	IdentifierDeclType	int		5308452	0					
ANR	5308458	Identifier	sign		5308452	1					
ANR	5308459	IdentifierDecl	decpt		5308452	1					
ANR	5308460	IdentifierDeclType	int		5308452	0					
ANR	5308461	Identifier	decpt		5308452	1					
ANR	5308462	Statement	register	210:4:5271:5278	5308452	1	True				
ANR	5308463	IdentifierDeclStatement	"char * p1 , * p2 ;"	210:13:5280:5293	5308452	2	True				
ANR	5308464	IdentifierDecl	* p1		5308452	0					
ANR	5308465	IdentifierDeclType	char *		5308452	0					
ANR	5308466	Identifier	p1		5308452	1					
ANR	5308467	IdentifierDecl	* p2		5308452	1					
ANR	5308468	IdentifierDeclType	char *		5308452	0					
ANR	5308469	Identifier	p2		5308452	1					
ANR	5308470	Statement	register	211:4:5299:5306	5308452	3	True				
ANR	5308471	IdentifierDeclStatement	int i ;	211:13:5308:5313	5308452	4	True				
ANR	5308472	IdentifierDecl	i		5308452	0					
ANR	5308473	IdentifierDeclType	int		5308452	0					
ANR	5308474	Identifier	i		5308452	1					
ANR	5308475	IdentifierDeclStatement	char buf1 [ NDIG ] ;	212:4:5319:5334	5308452	5	True				
ANR	5308476	IdentifierDecl	buf1 [ NDIG ]		5308452	0					
ANR	5308477	IdentifierDeclType	char [ NDIG ]		5308452	0					
ANR	5308478	Identifier	buf1		5308452	1					
ANR	5308479	Identifier	NDIG		5308452	2					
ANR	5308480	IdentifierDeclStatement	int nd = ndigit ;	213:4:5340:5355	5308452	6	True				
ANR	5308481	IdentifierDecl	nd = ndigit		5308452	0					
ANR	5308482	IdentifierDeclType	int		5308452	0					
ANR	5308483	Identifier	nd		5308452	1					
ANR	5308484	AssignmentExpression	nd = ndigit		5308452	2		=			
ANR	5308485	Identifier	ndigit		5308452	0					
ANR	5308486	Identifier	ndigit		5308452	1					
ANR	5308487	IdentifierDeclStatement	double magn = number < 0 ? - number : number ;	214:4:5361:5404	5308452	7	True				
ANR	5308488	IdentifierDecl	magn = number < 0 ? - number : number		5308452	0					
ANR	5308489	IdentifierDeclType	double		5308452	0					
ANR	5308490	Identifier	magn		5308452	1					
ANR	5308491	AssignmentExpression	magn = number < 0 ? - number : number		5308452	2		=			
ANR	5308492	Identifier	magn		5308452	0					
ANR	5308493	ConditionalExpression	number < 0 ? - number : number		5308452	1					
ANR	5308494	Condition	number < 0		5308452	0					
ANR	5308495	RelationalExpression	number < 0		5308452	0		<			
ANR	5308496	Identifier	number		5308452	0					
ANR	5308497	PrimaryExpression	0		5308452	1					
ANR	5308498	UnaryOperationExpression	- number		5308452	1					
ANR	5308499	UnaryOperator	-		5308452	0					
ANR	5308500	Identifier	number		5308452	1					
ANR	5308501	Identifier	number		5308452	2					
ANR	5308502	ExpressionStatement	"p1 = apr_ecvt ( number , ndigit , & decpt , & sign , buf1 )"	216:4:5411:5461	5308452	8	True				
ANR	5308503	AssignmentExpression	"p1 = apr_ecvt ( number , ndigit , & decpt , & sign , buf1 )"		5308452	0		=			
ANR	5308504	Identifier	p1		5308452	0					
ANR	5308505	CallExpression	"apr_ecvt ( number , ndigit , & decpt , & sign , buf1 )"		5308452	1					
ANR	5308506	Callee	apr_ecvt		5308452	0					
ANR	5308507	Identifier	apr_ecvt		5308452	0					
ANR	5308508	ArgumentList	number		5308452	1					
ANR	5308509	Argument	number		5308452	0					
ANR	5308510	Identifier	number		5308452	0					
ANR	5308511	Argument	ndigit		5308452	1					
ANR	5308512	Identifier	ndigit		5308452	0					
ANR	5308513	Argument	& decpt		5308452	2					
ANR	5308514	UnaryOperationExpression	& decpt		5308452	0					
ANR	5308515	UnaryOperator	&		5308452	0					
ANR	5308516	Identifier	decpt		5308452	1					
ANR	5308517	Argument	& sign		5308452	3					
ANR	5308518	UnaryOperationExpression	& sign		5308452	0					
ANR	5308519	UnaryOperator	&		5308452	0					
ANR	5308520	Identifier	sign		5308452	1					
ANR	5308521	Argument	buf1		5308452	4					
ANR	5308522	Identifier	buf1		5308452	0					
ANR	5308523	ExpressionStatement	p2 = buf	217:4:5467:5475	5308452	9	True				
ANR	5308524	AssignmentExpression	p2 = buf		5308452	0		=			
ANR	5308525	Identifier	p2		5308452	0					
ANR	5308526	Identifier	buf		5308452	1					
ANR	5308527	IfStatement	if ( sign )		5308452	10					
ANR	5308528	Condition	sign	218:8:5485:5488	5308452	0	True				
ANR	5308529	Identifier	sign		5308452	0					
ANR	5308530	ExpressionStatement	* p2 ++ = '-'	219:8:5499:5510	5308452	1	True				
ANR	5308531	AssignmentExpression	* p2 ++ = '-'		5308452	0		=			
ANR	5308532	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308533	UnaryOperator	*		5308452	0					
ANR	5308534	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308535	Identifier	p2		5308452	0					
ANR	5308536	IncDec	++		5308452	1					
ANR	5308537	PrimaryExpression	'-'		5308452	1					
ANR	5308538	ForStatement	for ( i = ndigit - 1 ; i > 0 && p1 [ i ] == '0' ; i -- )		5308452	11					
ANR	5308539	ForInit	i = ndigit - 1 ;	220:9:5521:5535	5308452	0	True				
ANR	5308540	AssignmentExpression	i = ndigit - 1		5308452	0		=			
ANR	5308541	Identifier	i		5308452	0					
ANR	5308542	AdditiveExpression	ndigit - 1		5308452	1		-			
ANR	5308543	Identifier	ndigit		5308452	0					
ANR	5308544	PrimaryExpression	1		5308452	1					
ANR	5308545	Condition	i > 0 && p1 [ i ] == '0'	220:25:5537:5557	5308452	1	True				
ANR	5308546	AndExpression	i > 0 && p1 [ i ] == '0'		5308452	0		&&			
ANR	5308547	RelationalExpression	i > 0		5308452	0		>			
ANR	5308548	Identifier	i		5308452	0					
ANR	5308549	PrimaryExpression	0		5308452	1					
ANR	5308550	EqualityExpression	p1 [ i ] == '0'		5308452	1		==			
ANR	5308551	ArrayIndexing	p1 [ i ]		5308452	0					
ANR	5308552	Identifier	p1		5308452	0					
ANR	5308553	Identifier	i		5308452	1					
ANR	5308554	PrimaryExpression	'0'		5308452	1					
ANR	5308555	PostIncDecOperationExpression	i --	220:48:5560:5562	5308452	2	True				
ANR	5308556	Identifier	i		5308452	0					
ANR	5308557	IncDec	--		5308452	1					
ANR	5308558	ExpressionStatement	ndigit --	221:8:5573:5581	5308452	3	True				
ANR	5308559	PostIncDecOperationExpression	ndigit --		5308452	0					
ANR	5308560	Identifier	ndigit		5308452	0					
ANR	5308561	IncDec	--		5308452	1					
ANR	5308562	IfStatement	if ( ( decpt >= 0 && decpt - ndigit > 4 ) || ( decpt < 0 && decpt < - 3 ) )		5308452	12					
ANR	5308563	Condition	( decpt >= 0 && decpt - ndigit > 4 ) || ( decpt < 0 && decpt < - 3 )	223:8:5603:5673	5308452	0	True				
ANR	5308564	OrExpression	( decpt >= 0 && decpt - ndigit > 4 ) || ( decpt < 0 && decpt < - 3 )		5308452	0		||			
ANR	5308565	AndExpression	decpt >= 0 && decpt - ndigit > 4		5308452	0		&&			
ANR	5308566	RelationalExpression	decpt >= 0		5308452	0		>=			
ANR	5308567	Identifier	decpt		5308452	0					
ANR	5308568	PrimaryExpression	0		5308452	1					
ANR	5308569	RelationalExpression	decpt - ndigit > 4		5308452	1		>			
ANR	5308570	AdditiveExpression	decpt - ndigit		5308452	0		-			
ANR	5308571	Identifier	decpt		5308452	0					
ANR	5308572	Identifier	ndigit		5308452	1					
ANR	5308573	PrimaryExpression	4		5308452	1					
ANR	5308574	AndExpression	decpt < 0 && decpt < - 3		5308452	1		&&			
ANR	5308575	RelationalExpression	decpt < 0		5308452	0		<			
ANR	5308576	Identifier	decpt		5308452	0					
ANR	5308577	PrimaryExpression	0		5308452	1					
ANR	5308578	RelationalExpression	decpt < - 3		5308452	1		<			
ANR	5308579	Identifier	decpt		5308452	0					
ANR	5308580	UnaryOperationExpression	- 3		5308452	1					
ANR	5308581	UnaryOperator	-		5308452	0					
ANR	5308582	PrimaryExpression	3		5308452	1					
ANR	5308583	CompoundStatement		17:38:431:431	5308452	1					
ANR	5308584	ExpressionStatement	decpt --	229:8:5861:5868	5308452	0	True				
ANR	5308585	PostIncDecOperationExpression	decpt --		5308452	0					
ANR	5308586	Identifier	decpt		5308452	0					
ANR	5308587	IncDec	--		5308452	1					
ANR	5308588	ExpressionStatement	* p2 ++ = * p1 ++	230:8:5878:5891	5308452	1	True				
ANR	5308589	AssignmentExpression	* p2 ++ = * p1 ++		5308452	0		=			
ANR	5308590	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308591	UnaryOperator	*		5308452	0					
ANR	5308592	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308593	Identifier	p2		5308452	0					
ANR	5308594	IncDec	++		5308452	1					
ANR	5308595	UnaryOperationExpression	* p1 ++		5308452	1					
ANR	5308596	UnaryOperator	*		5308452	0					
ANR	5308597	PostIncDecOperationExpression	p1 ++		5308452	1					
ANR	5308598	Identifier	p1		5308452	0					
ANR	5308599	IncDec	++		5308452	1					
ANR	5308600	IfStatement	if ( ndigit >= 2 )		5308452	2					
ANR	5308601	Condition	ndigit >= 2	232:12:5906:5916	5308452	0	True				
ANR	5308602	RelationalExpression	ndigit >= 2		5308452	0		>=			
ANR	5308603	Identifier	ndigit		5308452	0					
ANR	5308604	PrimaryExpression	2		5308452	1					
ANR	5308605	ExpressionStatement	* p2 ++ = '.'	233:12:5931:5942	5308452	1	True				
ANR	5308606	AssignmentExpression	* p2 ++ = '.'		5308452	0		=			
ANR	5308607	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308608	UnaryOperator	*		5308452	0					
ANR	5308609	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308610	Identifier	p2		5308452	0					
ANR	5308611	IncDec	++		5308452	1					
ANR	5308612	PrimaryExpression	'.'		5308452	1					
ANR	5308613	ForStatement	for ( i = 1 ; i < ndigit ; i ++ )		5308452	3					
ANR	5308614	ForInit	i = 1 ;	234:13:5957:5962	5308452	0	True				
ANR	5308615	AssignmentExpression	i = 1		5308452	0		=			
ANR	5308616	Identifier	i		5308452	0					
ANR	5308617	PrimaryExpression	1		5308452	1					
ANR	5308618	Condition	i < ndigit	234:20:5964:5973	5308452	1	True				
ANR	5308619	RelationalExpression	i < ndigit		5308452	0		<			
ANR	5308620	Identifier	i		5308452	0					
ANR	5308621	Identifier	ndigit		5308452	1					
ANR	5308622	PostIncDecOperationExpression	i ++	234:32:5976:5978	5308452	2	True				
ANR	5308623	Identifier	i		5308452	0					
ANR	5308624	IncDec	++		5308452	1					
ANR	5308625	ExpressionStatement	* p2 ++ = * p1 ++	235:12:5993:6006	5308452	3	True				
ANR	5308626	AssignmentExpression	* p2 ++ = * p1 ++		5308452	0		=			
ANR	5308627	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308628	UnaryOperator	*		5308452	0					
ANR	5308629	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308630	Identifier	p2		5308452	0					
ANR	5308631	IncDec	++		5308452	1					
ANR	5308632	UnaryOperationExpression	* p1 ++		5308452	1					
ANR	5308633	UnaryOperator	*		5308452	0					
ANR	5308634	PostIncDecOperationExpression	p1 ++		5308452	1					
ANR	5308635	Identifier	p1		5308452	0					
ANR	5308636	IncDec	++		5308452	1					
ANR	5308637	ExpressionStatement	* p2 ++ = 'e'	236:8:6016:6027	5308452	4	True				
ANR	5308638	AssignmentExpression	* p2 ++ = 'e'		5308452	0		=			
ANR	5308639	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308640	UnaryOperator	*		5308452	0					
ANR	5308641	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308642	Identifier	p2		5308452	0					
ANR	5308643	IncDec	++		5308452	1					
ANR	5308644	PrimaryExpression	'e'		5308452	1					
ANR	5308645	IfStatement	if ( decpt < 0 )		5308452	5					
ANR	5308646	Condition	decpt < 0	237:12:6041:6049	5308452	0	True				
ANR	5308647	RelationalExpression	decpt < 0		5308452	0		<			
ANR	5308648	Identifier	decpt		5308452	0					
ANR	5308649	PrimaryExpression	0		5308452	1					
ANR	5308650	CompoundStatement		30:23:807:807	5308452	1					
ANR	5308651	ExpressionStatement	decpt = - decpt	238:12:6066:6080	5308452	0	True				
ANR	5308652	AssignmentExpression	decpt = - decpt		5308452	0		=			
ANR	5308653	Identifier	decpt		5308452	0					
ANR	5308654	UnaryOperationExpression	- decpt		5308452	1					
ANR	5308655	UnaryOperator	-		5308452	0					
ANR	5308656	Identifier	decpt		5308452	1					
ANR	5308657	ExpressionStatement	* p2 ++ = '-'	239:12:6094:6105	5308452	1	True				
ANR	5308658	AssignmentExpression	* p2 ++ = '-'		5308452	0		=			
ANR	5308659	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308660	UnaryOperator	*		5308452	0					
ANR	5308661	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308662	Identifier	p2		5308452	0					
ANR	5308663	IncDec	++		5308452	1					
ANR	5308664	PrimaryExpression	'-'		5308452	1					
ANR	5308665	ElseStatement	else		5308452	0					
ANR	5308666	ExpressionStatement	* p2 ++ = '+'	242:12:6142:6153	5308452	0	True				
ANR	5308667	AssignmentExpression	* p2 ++ = '+'		5308452	0		=			
ANR	5308668	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308669	UnaryOperator	*		5308452	0					
ANR	5308670	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308671	Identifier	p2		5308452	0					
ANR	5308672	IncDec	++		5308452	1					
ANR	5308673	PrimaryExpression	'+'		5308452	1					
ANR	5308674	IfStatement	if ( decpt / 100 > 0 )		5308452	6					
ANR	5308675	Condition	decpt / 100 > 0	243:12:6167:6181	5308452	0	True				
ANR	5308676	RelationalExpression	decpt / 100 > 0		5308452	0		>			
ANR	5308677	MultiplicativeExpression	decpt / 100		5308452	0		/			
ANR	5308678	Identifier	decpt		5308452	0					
ANR	5308679	PrimaryExpression	100		5308452	1					
ANR	5308680	PrimaryExpression	0		5308452	1					
ANR	5308681	ExpressionStatement	* p2 ++ = decpt / 100 + '0'	244:12:6196:6221	5308452	1	True				
ANR	5308682	AssignmentExpression	* p2 ++ = decpt / 100 + '0'		5308452	0		=			
ANR	5308683	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308684	UnaryOperator	*		5308452	0					
ANR	5308685	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308686	Identifier	p2		5308452	0					
ANR	5308687	IncDec	++		5308452	1					
ANR	5308688	AdditiveExpression	decpt / 100 + '0'		5308452	1		+			
ANR	5308689	MultiplicativeExpression	decpt / 100		5308452	0		/			
ANR	5308690	Identifier	decpt		5308452	0					
ANR	5308691	PrimaryExpression	100		5308452	1					
ANR	5308692	PrimaryExpression	'0'		5308452	1					
ANR	5308693	IfStatement	if ( decpt / 10 > 0 )		5308452	7					
ANR	5308694	Condition	decpt / 10 > 0	247:12:6328:6341	5308452	0	True				
ANR	5308695	RelationalExpression	decpt / 10 > 0		5308452	0		>			
ANR	5308696	MultiplicativeExpression	decpt / 10		5308452	0		/			
ANR	5308697	Identifier	decpt		5308452	0					
ANR	5308698	PrimaryExpression	10		5308452	1					
ANR	5308699	PrimaryExpression	0		5308452	1					
ANR	5308700	ExpressionStatement	* p2 ++ = ( decpt % 100 ) / 10 + '0'	249:12:6363:6395	5308452	1	True				
ANR	5308701	AssignmentExpression	* p2 ++ = ( decpt % 100 ) / 10 + '0'		5308452	0		=			
ANR	5308702	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308703	UnaryOperator	*		5308452	0					
ANR	5308704	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308705	Identifier	p2		5308452	0					
ANR	5308706	IncDec	++		5308452	1					
ANR	5308707	AdditiveExpression	( decpt % 100 ) / 10 + '0'		5308452	1		+			
ANR	5308708	MultiplicativeExpression	( decpt % 100 ) / 10		5308452	0		/			
ANR	5308709	MultiplicativeExpression	decpt % 100		5308452	0		%			
ANR	5308710	Identifier	decpt		5308452	0					
ANR	5308711	PrimaryExpression	100		5308452	1					
ANR	5308712	PrimaryExpression	10		5308452	1					
ANR	5308713	PrimaryExpression	'0'		5308452	1					
ANR	5308714	ExpressionStatement	* p2 ++ = decpt % 10 + '0'	250:8:6405:6429	5308452	8	True				
ANR	5308715	AssignmentExpression	* p2 ++ = decpt % 10 + '0'		5308452	0		=			
ANR	5308716	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308717	UnaryOperator	*		5308452	0					
ANR	5308718	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308719	Identifier	p2		5308452	0					
ANR	5308720	IncDec	++		5308452	1					
ANR	5308721	AdditiveExpression	decpt % 10 + '0'		5308452	1		+			
ANR	5308722	MultiplicativeExpression	decpt % 10		5308452	0		%			
ANR	5308723	Identifier	decpt		5308452	0					
ANR	5308724	PrimaryExpression	10		5308452	1					
ANR	5308725	PrimaryExpression	'0'		5308452	1					
ANR	5308726	ElseStatement	else		5308452	0					
ANR	5308727	CompoundStatement		45:9:1201:1201	5308452	0					
ANR	5308728	IfStatement	if ( decpt <= 0 )		5308452	0					
ANR	5308729	Condition	decpt <= 0	253:12:6460:6469	5308452	0	True				
ANR	5308730	RelationalExpression	decpt <= 0		5308452	0		<=			
ANR	5308731	Identifier	decpt		5308452	0					
ANR	5308732	PrimaryExpression	0		5308452	1					
ANR	5308733	CompoundStatement		46:24:1227:1227	5308452	1					
ANR	5308734	IfStatement	if ( * p1 != '0' )		5308452	0					
ANR	5308735	Condition	* p1 != '0'	254:16:6490:6499	5308452	0	True				
ANR	5308736	EqualityExpression	* p1 != '0'		5308452	0		!=			
ANR	5308737	UnaryOperationExpression	* p1		5308452	0					
ANR	5308738	UnaryOperator	*		5308452	0					
ANR	5308739	Identifier	p1		5308452	1					
ANR	5308740	PrimaryExpression	'0'		5308452	1					
ANR	5308741	CompoundStatement		47:28:1257:1257	5308452	1					
ANR	5308742	ExpressionStatement	* p2 ++ = '0'	255:16:6520:6531	5308452	0	True				
ANR	5308743	AssignmentExpression	* p2 ++ = '0'		5308452	0		=			
ANR	5308744	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308745	UnaryOperator	*		5308452	0					
ANR	5308746	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308747	Identifier	p2		5308452	0					
ANR	5308748	IncDec	++		5308452	1					
ANR	5308749	PrimaryExpression	'0'		5308452	1					
ANR	5308750	ExpressionStatement	* p2 ++ = '.'	256:16:6549:6560	5308452	1	True				
ANR	5308751	AssignmentExpression	* p2 ++ = '.'		5308452	0		=			
ANR	5308752	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308753	UnaryOperator	*		5308452	0					
ANR	5308754	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308755	Identifier	p2		5308452	0					
ANR	5308756	IncDec	++		5308452	1					
ANR	5308757	PrimaryExpression	'.'		5308452	1					
ANR	5308758	WhileStatement	while ( decpt < 0 )		5308452	1					
ANR	5308759	Condition	decpt < 0	258:19:6595:6603	5308452	0	True				
ANR	5308760	RelationalExpression	decpt < 0		5308452	0		<			
ANR	5308761	Identifier	decpt		5308452	0					
ANR	5308762	PrimaryExpression	0		5308452	1					
ANR	5308763	CompoundStatement		51:30:1361:1361	5308452	1					
ANR	5308764	ExpressionStatement	decpt ++	259:16:6624:6631	5308452	0	True				
ANR	5308765	PostIncDecOperationExpression	decpt ++		5308452	0					
ANR	5308766	Identifier	decpt		5308452	0					
ANR	5308767	IncDec	++		5308452	1					
ANR	5308768	ExpressionStatement	* p2 ++ = '0'	260:16:6649:6660	5308452	1	True				
ANR	5308769	AssignmentExpression	* p2 ++ = '0'		5308452	0		=			
ANR	5308770	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308771	UnaryOperator	*		5308452	0					
ANR	5308772	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308773	Identifier	p2		5308452	0					
ANR	5308774	IncDec	++		5308452	1					
ANR	5308775	PrimaryExpression	'0'		5308452	1					
ANR	5308776	ForStatement	for ( i = 1 ; i <= ndigit ; i ++ )		5308452	1					
ANR	5308777	ForInit	i = 1 ;	263:13:6699:6704	5308452	0	True				
ANR	5308778	AssignmentExpression	i = 1		5308452	0		=			
ANR	5308779	Identifier	i		5308452	0					
ANR	5308780	PrimaryExpression	1		5308452	1					
ANR	5308781	Condition	i <= ndigit	263:20:6706:6716	5308452	1	True				
ANR	5308782	RelationalExpression	i <= ndigit		5308452	0		<=			
ANR	5308783	Identifier	i		5308452	0					
ANR	5308784	Identifier	ndigit		5308452	1					
ANR	5308785	PostIncDecOperationExpression	i ++	263:33:6719:6721	5308452	2	True				
ANR	5308786	Identifier	i		5308452	0					
ANR	5308787	IncDec	++		5308452	1					
ANR	5308788	CompoundStatement		56:38:1479:1479	5308452	3					
ANR	5308789	ExpressionStatement	* p2 ++ = * p1 ++	264:12:6738:6751	5308452	0	True				
ANR	5308790	AssignmentExpression	* p2 ++ = * p1 ++		5308452	0		=			
ANR	5308791	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308792	UnaryOperator	*		5308452	0					
ANR	5308793	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308794	Identifier	p2		5308452	0					
ANR	5308795	IncDec	++		5308452	1					
ANR	5308796	UnaryOperationExpression	* p1 ++		5308452	1					
ANR	5308797	UnaryOperator	*		5308452	0					
ANR	5308798	PostIncDecOperationExpression	p1 ++		5308452	1					
ANR	5308799	Identifier	p1		5308452	0					
ANR	5308800	IncDec	++		5308452	1					
ANR	5308801	IfStatement	if ( i == decpt )		5308452	1					
ANR	5308802	Condition	i == decpt	265:16:6769:6778	5308452	0	True				
ANR	5308803	EqualityExpression	i == decpt		5308452	0		==			
ANR	5308804	Identifier	i		5308452	0					
ANR	5308805	Identifier	decpt		5308452	1					
ANR	5308806	ExpressionStatement	* p2 ++ = '.'	266:16:6797:6808	5308452	1	True				
ANR	5308807	AssignmentExpression	* p2 ++ = '.'		5308452	0		=			
ANR	5308808	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308809	UnaryOperator	*		5308452	0					
ANR	5308810	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308811	Identifier	p2		5308452	0					
ANR	5308812	IncDec	++		5308452	1					
ANR	5308813	PrimaryExpression	'.'		5308452	1					
ANR	5308814	IfStatement	if ( ndigit < decpt )		5308452	2					
ANR	5308815	Condition	ndigit < decpt	268:12:6832:6845	5308452	0	True				
ANR	5308816	RelationalExpression	ndigit < decpt		5308452	0		<			
ANR	5308817	Identifier	ndigit		5308452	0					
ANR	5308818	Identifier	decpt		5308452	1					
ANR	5308819	CompoundStatement		61:28:1603:1603	5308452	1					
ANR	5308820	WhileStatement	while ( ndigit ++ < decpt )		5308452	0					
ANR	5308821	Condition	ndigit ++ < decpt	269:19:6869:6884	5308452	0	True				
ANR	5308822	RelationalExpression	ndigit ++ < decpt		5308452	0		<			
ANR	5308823	PostIncDecOperationExpression	ndigit ++		5308452	0					
ANR	5308824	Identifier	ndigit		5308452	0					
ANR	5308825	IncDec	++		5308452	1					
ANR	5308826	Identifier	decpt		5308452	1					
ANR	5308827	ExpressionStatement	* p2 ++ = '0'	270:16:6903:6914	5308452	1	True				
ANR	5308828	AssignmentExpression	* p2 ++ = '0'		5308452	0		=			
ANR	5308829	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308830	UnaryOperator	*		5308452	0					
ANR	5308831	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308832	Identifier	p2		5308452	0					
ANR	5308833	IncDec	++		5308452	1					
ANR	5308834	PrimaryExpression	'0'		5308452	1					
ANR	5308835	ExpressionStatement	* p2 ++ = '.'	271:12:6928:6939	5308452	1	True				
ANR	5308836	AssignmentExpression	* p2 ++ = '.'		5308452	0		=			
ANR	5308837	UnaryOperationExpression	* p2 ++		5308452	0					
ANR	5308838	UnaryOperator	*		5308452	0					
ANR	5308839	PostIncDecOperationExpression	p2 ++		5308452	1					
ANR	5308840	Identifier	p2		5308452	0					
ANR	5308841	IncDec	++		5308452	1					
ANR	5308842	PrimaryExpression	'.'		5308452	1					
ANR	5308843	IfStatement	if ( p2 [ - 1 ] == '.' && ! altform )		5308452	13					
ANR	5308844	Condition	p2 [ - 1 ] == '.' && ! altform	274:8:6965:6989	5308452	0	True				
ANR	5308845	AndExpression	p2 [ - 1 ] == '.' && ! altform		5308452	0		&&			
ANR	5308846	EqualityExpression	p2 [ - 1 ] == '.'		5308452	0		==			
ANR	5308847	ArrayIndexing	p2 [ - 1 ]		5308452	0					
ANR	5308848	Identifier	p2		5308452	0					
ANR	5308849	UnaryOperationExpression	- 1		5308452	1					
ANR	5308850	UnaryOperator	-		5308452	0					
ANR	5308851	PrimaryExpression	1		5308452	1					
ANR	5308852	PrimaryExpression	'.'		5308452	1					
ANR	5308853	UnaryOperationExpression	! altform		5308452	1					
ANR	5308854	UnaryOperator	!		5308452	0					
ANR	5308855	Identifier	altform		5308452	1					
ANR	5308856	ExpressionStatement	p2 --	275:8:7000:7004	5308452	1	True				
ANR	5308857	PostIncDecOperationExpression	p2 --		5308452	0					
ANR	5308858	Identifier	p2		5308452	0					
ANR	5308859	IncDec	--		5308452	1					
ANR	5308860	ExpressionStatement	* p2 = '\\0'	276:4:7010:7020	5308452	14	True				
ANR	5308861	AssignmentExpression	* p2 = '\\0'		5308452	0		=			
ANR	5308862	UnaryOperationExpression	* p2		5308452	0					
ANR	5308863	UnaryOperator	*		5308452	0					
ANR	5308864	Identifier	p2		5308452	1					
ANR	5308865	PrimaryExpression	'\\0'		5308452	1					
ANR	5308866	ReturnStatement	return ( buf ) ;	277:4:7026:7038	5308452	15	True				
ANR	5308867	Identifier	buf		5308452	0					
ANR	5308868	ReturnType	static char *		5308452	1					
ANR	5308869	Identifier	apr_gcvt		5308452	2					
ANR	5308870	ParameterList	"double number , int ndigit , char * buf , boolean_e altform"		5308452	3					
ANR	5308871	Parameter	double number	207:22:5187:5199	5308452	0	True				
ANR	5308872	ParameterType	double		5308452	0					
ANR	5308873	Identifier	number		5308452	1					
ANR	5308874	Parameter	int ndigit	207:37:5202:5211	5308452	1	True				
ANR	5308875	ParameterType	int		5308452	0					
ANR	5308876	Identifier	ndigit		5308452	1					
ANR	5308877	Parameter	char * buf	207:49:5214:5222	5308452	2	True				
ANR	5308878	ParameterType	char *		5308452	0					
ANR	5308879	Identifier	buf		5308452	1					
ANR	5308880	Parameter	boolean_e altform	207:60:5225:5241	5308452	3	True				
ANR	5308881	ParameterType	boolean_e		5308452	0					
ANR	5308882	Identifier	altform		5308452	1					
ANR	5308883	CFGEntryNode	ENTRY		5308452		True				
ANR	5308884	CFGExitNode	EXIT		5308452		True				
ANR	5308885	Symbol	p1		5308452						
ANR	5308886	Symbol	p2		5308452						
ANR	5308887	Symbol	* p1		5308452						
ANR	5308888	Symbol	apr_ecvt		5308452						
ANR	5308889	Symbol	& sign		5308452						
ANR	5308890	Symbol	sign		5308452						
ANR	5308891	Symbol	magn		5308452						
ANR	5308892	Symbol	* p1 ++		5308452						
ANR	5308893	Symbol	i		5308452						
ANR	5308894	Symbol	* p2 ++		5308452						
ANR	5308895	Symbol	* p2		5308452						
ANR	5308896	Symbol	buf1		5308452						
ANR	5308897	Symbol	number		5308452						
ANR	5308898	Symbol	buf		5308452						
ANR	5308899	Symbol	* i		5308452						
ANR	5308900	Symbol	& decpt		5308452						
ANR	5308901	Symbol	decpt		5308452						
ANR	5308902	Symbol	nd		5308452						
ANR	5308903	Symbol	altform		5308452						
ANR	5308904	Symbol	ndigit		5308452						
ANR	5308905	DeclStmt									
ANR	5308906	Decl							apr_size_t	apr_size_t	p
ANR	5308907	Function	conv_10	375:0:10780:11992							
ANR	5308908	FunctionDef	"conv_10 (register apr_int32_t num , register int is_unsigned , register int * is_negative , char * buf_end , register apr_size_t * len)"		5308907	0					
ANR	5308909	CompoundStatement		378:0:10963:11992	5308907	0					
ANR	5308910	Statement	register	379:4:10969:10976	5308907	0	True				
ANR	5308911	IdentifierDeclStatement	char * p = buf_end ;	379:13:10978:10995	5308907	1	True				
ANR	5308912	IdentifierDecl	* p = buf_end		5308907	0					
ANR	5308913	IdentifierDeclType	char *		5308907	0					
ANR	5308914	Identifier	p		5308907	1					
ANR	5308915	AssignmentExpression	* p = buf_end		5308907	2		=			
ANR	5308916	Identifier	buf_end		5308907	0					
ANR	5308917	Identifier	buf_end		5308907	1					
ANR	5308918	Statement	register	380:4:11001:11008	5308907	2	True				
ANR	5308919	IdentifierDeclStatement	apr_uint32_t magnitude = num ;	380:13:11010:11038	5308907	3	True				
ANR	5308920	IdentifierDecl	magnitude = num		5308907	0					
ANR	5308921	IdentifierDeclType	apr_uint32_t		5308907	0					
ANR	5308922	Identifier	magnitude		5308907	1					
ANR	5308923	AssignmentExpression	magnitude = num		5308907	2		=			
ANR	5308924	Identifier	num		5308907	0					
ANR	5308925	Identifier	num		5308907	1					
ANR	5308926	IfStatement	if ( is_unsigned )		5308907	4					
ANR	5308927	Condition	is_unsigned	382:8:11049:11059	5308907	0	True				
ANR	5308928	Identifier	is_unsigned		5308907	0					
ANR	5308929	CompoundStatement		5:21:98:98	5308907	1					
ANR	5308930	ExpressionStatement	* is_negative = FALSE	383:8:11072:11092	5308907	0	True				
ANR	5308931	AssignmentExpression	* is_negative = FALSE		5308907	0		=			
ANR	5308932	UnaryOperationExpression	* is_negative		5308907	0					
ANR	5308933	UnaryOperator	*		5308907	0					
ANR	5308934	Identifier	is_negative		5308907	1					
ANR	5308935	Identifier	FALSE		5308907	1					
ANR	5308936	ElseStatement	else		5308907	0					
ANR	5308937	CompoundStatement		8:9:145:145	5308907	0					
ANR	5308938	ExpressionStatement	* is_negative = ( num < 0 )	386:8:11119:11143	5308907	0	True				
ANR	5308939	AssignmentExpression	* is_negative = ( num < 0 )		5308907	0		=			
ANR	5308940	UnaryOperationExpression	* is_negative		5308907	0					
ANR	5308941	UnaryOperator	*		5308907	0					
ANR	5308942	Identifier	is_negative		5308907	1					
ANR	5308943	RelationalExpression	num < 0		5308907	1		<			
ANR	5308944	Identifier	num		5308907	0					
ANR	5308945	PrimaryExpression	0		5308907	1					
ANR	5308946	IfStatement	if ( * is_negative )		5308907	1					
ANR	5308947	Condition	* is_negative	397:12:11554:11565	5308907	0	True				
ANR	5308948	UnaryOperationExpression	* is_negative		5308907	0					
ANR	5308949	UnaryOperator	*		5308907	0					
ANR	5308950	Identifier	is_negative		5308907	1					
ANR	5308951	CompoundStatement		21:12:618:641	5308907	1					
ANR	5308952	IdentifierDeclStatement	apr_int32_t t = num + 1 ;	398:12:11582:11605	5308907	0	True				
ANR	5308953	IdentifierDecl	t = num + 1		5308907	0					
ANR	5308954	IdentifierDeclType	apr_int32_t		5308907	0					
ANR	5308955	Identifier	t		5308907	1					
ANR	5308956	AssignmentExpression	t = num + 1		5308907	2		=			
ANR	5308957	Identifier	t		5308907	0					
ANR	5308958	AdditiveExpression	num + 1		5308907	1		+			
ANR	5308959	Identifier	num		5308907	0					
ANR	5308960	PrimaryExpression	1		5308907	1					
ANR	5308961	ExpressionStatement	magnitude = ( ( apr_uint32_t ) - t ) + 1	399:12:11619:11654	5308907	1	True				
ANR	5308962	AssignmentExpression	magnitude = ( ( apr_uint32_t ) - t ) + 1		5308907	0		=			
ANR	5308963	Identifier	magnitude		5308907	0					
ANR	5308964	AdditiveExpression	( ( apr_uint32_t ) - t ) + 1		5308907	1		+			
ANR	5308965	CastExpression	( apr_uint32_t ) - t		5308907	0					
ANR	5308966	CastTarget	apr_uint32_t		5308907	0					
ANR	5308967	UnaryOperationExpression	- t		5308907	1					
ANR	5308968	UnaryOperator	-		5308907	0					
ANR	5308969	Identifier	t		5308907	1					
ANR	5308970	PrimaryExpression	1		5308907	1					
ANR	5308971	DoStatement	do		5308907	5					
ANR	5308972	CompoundStatement		30:17:815:858	5308907	0					
ANR	5308973	Statement	register	407:8:11770:11777	5308907	0	True				
ANR	5308974	IdentifierDeclStatement	apr_uint32_t new_magnitude = magnitude / 10 ;	407:17:11779:11822	5308907	1	True				
ANR	5308975	IdentifierDecl	new_magnitude = magnitude / 10		5308907	0					
ANR	5308976	IdentifierDeclType	apr_uint32_t		5308907	0					
ANR	5308977	Identifier	new_magnitude		5308907	1					
ANR	5308978	AssignmentExpression	new_magnitude = magnitude / 10		5308907	2		=			
ANR	5308979	Identifier	new_magnitude		5308907	0					
ANR	5308980	MultiplicativeExpression	magnitude / 10		5308907	1		/			
ANR	5308981	Identifier	magnitude		5308907	0					
ANR	5308982	PrimaryExpression	10		5308907	1					
ANR	5308983	ExpressionStatement	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )	409:8:11833:11885	5308907	2	True				
ANR	5308984	AssignmentExpression	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )		5308907	0		=			
ANR	5308985	UnaryOperationExpression	* -- p		5308907	0					
ANR	5308986	UnaryOperator	*		5308907	0					
ANR	5308987	UnaryExpression	-- p		5308907	1					
ANR	5308988	IncDec	--		5308907	0					
ANR	5308989	Identifier	p		5308907	1					
ANR	5308990	CastExpression	( char ) ( magnitude - new_magnitude * 10 + '0' )		5308907	1					
ANR	5308991	CastTarget	char		5308907	0					
ANR	5308992	AdditiveExpression	magnitude - new_magnitude * 10 + '0'		5308907	1		-			
ANR	5308993	Identifier	magnitude		5308907	0					
ANR	5308994	AdditiveExpression	new_magnitude * 10 + '0'		5308907	1		+			
ANR	5308995	MultiplicativeExpression	new_magnitude * 10		5308907	0		*			
ANR	5308996	Identifier	new_magnitude		5308907	0					
ANR	5308997	PrimaryExpression	10		5308907	1					
ANR	5308998	PrimaryExpression	'0'		5308907	1					
ANR	5308999	ExpressionStatement	magnitude = new_magnitude	410:8:11895:11920	5308907	3	True				
ANR	5309000	AssignmentExpression	magnitude = new_magnitude		5308907	0		=			
ANR	5309001	Identifier	magnitude		5308907	0					
ANR	5309002	Identifier	new_magnitude		5308907	1					
ANR	5309003	Condition	magnitude	412:11:11939:11947	5308907	1	True				
ANR	5309004	Identifier	magnitude		5308907	0					
ANR	5309005	ExpressionStatement	* len = buf_end - p	414:4:11956:11974	5308907	6	True				
ANR	5309006	AssignmentExpression	* len = buf_end - p		5308907	0		=			
ANR	5309007	UnaryOperationExpression	* len		5308907	0					
ANR	5309008	UnaryOperator	*		5308907	0					
ANR	5309009	Identifier	len		5308907	1					
ANR	5309010	AdditiveExpression	buf_end - p		5308907	1		-			
ANR	5309011	Identifier	buf_end		5308907	0					
ANR	5309012	Identifier	p		5308907	1					
ANR	5309013	ReturnStatement	return ( p ) ;	415:4:11980:11990	5308907	7	True				
ANR	5309014	Identifier	p		5308907	0					
ANR	5309015	ReturnType	static char *		5308907	1					
ANR	5309016	Identifier	conv_10		5308907	2					
ANR	5309017	ParameterList	"register apr_int32_t num , register int is_unsigned , register int * is_negative , char * buf_end , register apr_size_t * len"		5308907	3					
ANR	5309018	Parameter	register apr_int32_t num	375:21:10801:10824	5308907	0	True				
ANR	5309019	ParameterType	register apr_int32_t		5308907	0					
ANR	5309020	Identifier	num		5308907	1					
ANR	5309021	Parameter	register int is_unsigned	375:47:10827:10850	5308907	1	True				
ANR	5309022	ParameterType	register int		5308907	0					
ANR	5309023	Identifier	is_unsigned		5308907	1					
ANR	5309024	Parameter	register int * is_negative	376:21:10874:10898	5308907	2	True				
ANR	5309025	ParameterType	register int *		5308907	0					
ANR	5309026	Identifier	is_negative		5308907	1					
ANR	5309027	Parameter	char * buf_end	376:48:10901:10913	5308907	3	True				
ANR	5309028	ParameterType	char *		5308907	0					
ANR	5309029	Identifier	buf_end		5308907	1					
ANR	5309030	Parameter	register apr_size_t * len	377:21:10937:10960	5308907	4	True				
ANR	5309031	ParameterType	register apr_size_t *		5308907	0					
ANR	5309032	Identifier	len		5308907	1					
ANR	5309033	CFGEntryNode	ENTRY		5308907		True				
ANR	5309034	CFGExitNode	EXIT		5308907		True				
ANR	5309035	Symbol	* -- p		5308907						
ANR	5309036	Symbol	num		5308907						
ANR	5309037	Symbol	new_magnitude		5308907						
ANR	5309038	Symbol	p		5308907						
ANR	5309039	Symbol	len		5308907						
ANR	5309040	Symbol	t		5308907						
ANR	5309041	Symbol	is_unsigned		5308907						
ANR	5309042	Symbol	magnitude		5308907						
ANR	5309043	Symbol	FALSE		5308907						
ANR	5309044	Symbol	* p		5308907						
ANR	5309045	Symbol	buf_end		5308907						
ANR	5309046	Symbol	is_negative		5308907						
ANR	5309047	Symbol	* is_negative		5308907						
ANR	5309048	Symbol	* len		5308907						
ANR	5309049	Function	conv_10_quad	418:0:11995:13590							
ANR	5309050	FunctionDef	"conv_10_quad (apr_int64_t num , register int is_unsigned , register int * is_negative , char * buf_end , register apr_size_t * len)"		5309049	0					
ANR	5309051	CompoundStatement		421:0:12174:13590	5309049	0					
ANR	5309052	Statement	register	422:4:12180:12187	5309049	0	True				
ANR	5309053	IdentifierDeclStatement	char * p = buf_end ;	422:13:12189:12206	5309049	1	True				
ANR	5309054	IdentifierDecl	* p = buf_end		5309049	0					
ANR	5309055	IdentifierDeclType	char *		5309049	0					
ANR	5309056	Identifier	p		5309049	1					
ANR	5309057	AssignmentExpression	* p = buf_end		5309049	2		=			
ANR	5309058	Identifier	buf_end		5309049	0					
ANR	5309059	Identifier	buf_end		5309049	1					
ANR	5309060	IdentifierDeclStatement	apr_uint64_t magnitude = num ;	423:4:12212:12240	5309049	2	True				
ANR	5309061	IdentifierDecl	magnitude = num		5309049	0					
ANR	5309062	IdentifierDeclType	apr_uint64_t		5309049	0					
ANR	5309063	Identifier	magnitude		5309049	1					
ANR	5309064	AssignmentExpression	magnitude = num		5309049	2		=			
ANR	5309065	Identifier	num		5309049	0					
ANR	5309066	Identifier	num		5309049	1					
ANR	5309067	IfStatement	if ( ( magnitude <= APR_UINT32_MAX && is_unsigned ) || ( num <= APR_INT32_MAX && num >= APR_INT32_MIN && ! is_unsigned ) )		5309049	3					
ANR	5309068	Condition	( magnitude <= APR_UINT32_MAX && is_unsigned ) || ( num <= APR_INT32_MAX && num >= APR_INT32_MIN && ! is_unsigned )	430:8:12440:12557	5309049	0	True				
ANR	5309069	OrExpression	( magnitude <= APR_UINT32_MAX && is_unsigned ) || ( num <= APR_INT32_MAX && num >= APR_INT32_MIN && ! is_unsigned )		5309049	0		||			
ANR	5309070	AndExpression	magnitude <= APR_UINT32_MAX && is_unsigned		5309049	0		&&			
ANR	5309071	RelationalExpression	magnitude <= APR_UINT32_MAX		5309049	0		<=			
ANR	5309072	Identifier	magnitude		5309049	0					
ANR	5309073	Identifier	APR_UINT32_MAX		5309049	1					
ANR	5309074	Identifier	is_unsigned		5309049	1					
ANR	5309075	AndExpression	num <= APR_INT32_MAX && num >= APR_INT32_MIN && ! is_unsigned		5309049	1		&&			
ANR	5309076	RelationalExpression	num <= APR_INT32_MAX		5309049	0		<=			
ANR	5309077	Identifier	num		5309049	0					
ANR	5309078	Identifier	APR_INT32_MAX		5309049	1					
ANR	5309079	AndExpression	num >= APR_INT32_MIN && ! is_unsigned		5309049	1		&&			
ANR	5309080	RelationalExpression	num >= APR_INT32_MIN		5309049	0		>=			
ANR	5309081	Identifier	num		5309049	0					
ANR	5309082	Identifier	APR_INT32_MIN		5309049	1					
ANR	5309083	UnaryOperationExpression	! is_unsigned		5309049	1					
ANR	5309084	UnaryOperator	!		5309049	0					
ANR	5309085	Identifier	is_unsigned		5309049	1					
ANR	5309086	ReturnStatement	"return ( conv_10 ( ( apr_int32_t ) num , is_unsigned , is_negative , buf_end , len ) ) ;"	432:12:12572:12645	5309049	1	True				
ANR	5309087	CallExpression	"conv_10 ( ( apr_int32_t ) num , is_unsigned , is_negative , buf_end , len )"		5309049	0					
ANR	5309088	Callee	conv_10		5309049	0					
ANR	5309089	Identifier	conv_10		5309049	0					
ANR	5309090	ArgumentList	( apr_int32_t ) num		5309049	1					
ANR	5309091	Argument	( apr_int32_t ) num		5309049	0					
ANR	5309092	CastExpression	( apr_int32_t ) num		5309049	0					
ANR	5309093	CastTarget	apr_int32_t		5309049	0					
ANR	5309094	Identifier	num		5309049	1					
ANR	5309095	Argument	is_unsigned		5309049	1					
ANR	5309096	Identifier	is_unsigned		5309049	0					
ANR	5309097	Argument	is_negative		5309049	2					
ANR	5309098	Identifier	is_negative		5309049	0					
ANR	5309099	Argument	buf_end		5309049	3					
ANR	5309100	Identifier	buf_end		5309049	0					
ANR	5309101	Argument	len		5309049	4					
ANR	5309102	Identifier	len		5309049	0					
ANR	5309103	IfStatement	if ( is_unsigned )		5309049	4					
ANR	5309104	Condition	is_unsigned	434:8:12656:12666	5309049	0	True				
ANR	5309105	Identifier	is_unsigned		5309049	0					
ANR	5309106	CompoundStatement		14:21:494:494	5309049	1					
ANR	5309107	ExpressionStatement	* is_negative = FALSE	435:8:12679:12699	5309049	0	True				
ANR	5309108	AssignmentExpression	* is_negative = FALSE		5309049	0		=			
ANR	5309109	UnaryOperationExpression	* is_negative		5309049	0					
ANR	5309110	UnaryOperator	*		5309049	0					
ANR	5309111	Identifier	is_negative		5309049	1					
ANR	5309112	Identifier	FALSE		5309049	1					
ANR	5309113	ElseStatement	else		5309049	0					
ANR	5309114	CompoundStatement		17:9:541:541	5309049	0					
ANR	5309115	ExpressionStatement	* is_negative = ( num < 0 )	438:8:12726:12750	5309049	0	True				
ANR	5309116	AssignmentExpression	* is_negative = ( num < 0 )		5309049	0		=			
ANR	5309117	UnaryOperationExpression	* is_negative		5309049	0					
ANR	5309118	UnaryOperator	*		5309049	0					
ANR	5309119	Identifier	is_negative		5309049	1					
ANR	5309120	RelationalExpression	num < 0		5309049	1		<			
ANR	5309121	Identifier	num		5309049	0					
ANR	5309122	PrimaryExpression	0		5309049	1					
ANR	5309123	IfStatement	if ( * is_negative )		5309049	1					
ANR	5309124	Condition	* is_negative	449:12:13161:13172	5309049	0	True				
ANR	5309125	UnaryOperationExpression	* is_negative		5309049	0					
ANR	5309126	UnaryOperator	*		5309049	0					
ANR	5309127	Identifier	is_negative		5309049	1					
ANR	5309128	CompoundStatement		30:12:1014:1037	5309049	1					
ANR	5309129	IdentifierDeclStatement	apr_int64_t t = num + 1 ;	450:12:13189:13212	5309049	0	True				
ANR	5309130	IdentifierDecl	t = num + 1		5309049	0					
ANR	5309131	IdentifierDeclType	apr_int64_t		5309049	0					
ANR	5309132	Identifier	t		5309049	1					
ANR	5309133	AssignmentExpression	t = num + 1		5309049	2		=			
ANR	5309134	Identifier	t		5309049	0					
ANR	5309135	AdditiveExpression	num + 1		5309049	1		+			
ANR	5309136	Identifier	num		5309049	0					
ANR	5309137	PrimaryExpression	1		5309049	1					
ANR	5309138	ExpressionStatement	magnitude = ( ( apr_uint64_t ) - t ) + 1	451:12:13226:13261	5309049	1	True				
ANR	5309139	AssignmentExpression	magnitude = ( ( apr_uint64_t ) - t ) + 1		5309049	0		=			
ANR	5309140	Identifier	magnitude		5309049	0					
ANR	5309141	AdditiveExpression	( ( apr_uint64_t ) - t ) + 1		5309049	1		+			
ANR	5309142	CastExpression	( apr_uint64_t ) - t		5309049	0					
ANR	5309143	CastTarget	apr_uint64_t		5309049	0					
ANR	5309144	UnaryOperationExpression	- t		5309049	1					
ANR	5309145	UnaryOperator	-		5309049	0					
ANR	5309146	Identifier	t		5309049	1					
ANR	5309147	PrimaryExpression	1		5309049	1					
ANR	5309148	DoStatement	do		5309049	5					
ANR	5309149	CompoundStatement		39:8:1202:1245	5309049	0					
ANR	5309150	IdentifierDeclStatement	apr_uint64_t new_magnitude = magnitude / 10 ;	459:8:13377:13420	5309049	0	True				
ANR	5309151	IdentifierDecl	new_magnitude = magnitude / 10		5309049	0					
ANR	5309152	IdentifierDeclType	apr_uint64_t		5309049	0					
ANR	5309153	Identifier	new_magnitude		5309049	1					
ANR	5309154	AssignmentExpression	new_magnitude = magnitude / 10		5309049	2		=			
ANR	5309155	Identifier	new_magnitude		5309049	0					
ANR	5309156	MultiplicativeExpression	magnitude / 10		5309049	1		/			
ANR	5309157	Identifier	magnitude		5309049	0					
ANR	5309158	PrimaryExpression	10		5309049	1					
ANR	5309159	ExpressionStatement	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )	461:8:13431:13483	5309049	1	True				
ANR	5309160	AssignmentExpression	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )		5309049	0		=			
ANR	5309161	UnaryOperationExpression	* -- p		5309049	0					
ANR	5309162	UnaryOperator	*		5309049	0					
ANR	5309163	UnaryExpression	-- p		5309049	1					
ANR	5309164	IncDec	--		5309049	0					
ANR	5309165	Identifier	p		5309049	1					
ANR	5309166	CastExpression	( char ) ( magnitude - new_magnitude * 10 + '0' )		5309049	1					
ANR	5309167	CastTarget	char		5309049	0					
ANR	5309168	AdditiveExpression	magnitude - new_magnitude * 10 + '0'		5309049	1		-			
ANR	5309169	Identifier	magnitude		5309049	0					
ANR	5309170	AdditiveExpression	new_magnitude * 10 + '0'		5309049	1		+			
ANR	5309171	MultiplicativeExpression	new_magnitude * 10		5309049	0		*			
ANR	5309172	Identifier	new_magnitude		5309049	0					
ANR	5309173	PrimaryExpression	10		5309049	1					
ANR	5309174	PrimaryExpression	'0'		5309049	1					
ANR	5309175	ExpressionStatement	magnitude = new_magnitude	462:8:13493:13518	5309049	2	True				
ANR	5309176	AssignmentExpression	magnitude = new_magnitude		5309049	0		=			
ANR	5309177	Identifier	magnitude		5309049	0					
ANR	5309178	Identifier	new_magnitude		5309049	1					
ANR	5309179	Condition	magnitude	464:11:13537:13545	5309049	1	True				
ANR	5309180	Identifier	magnitude		5309049	0					
ANR	5309181	ExpressionStatement	* len = buf_end - p	466:4:13554:13572	5309049	6	True				
ANR	5309182	AssignmentExpression	* len = buf_end - p		5309049	0		=			
ANR	5309183	UnaryOperationExpression	* len		5309049	0					
ANR	5309184	UnaryOperator	*		5309049	0					
ANR	5309185	Identifier	len		5309049	1					
ANR	5309186	AdditiveExpression	buf_end - p		5309049	1		-			
ANR	5309187	Identifier	buf_end		5309049	0					
ANR	5309188	Identifier	p		5309049	1					
ANR	5309189	ReturnStatement	return ( p ) ;	467:4:13578:13588	5309049	7	True				
ANR	5309190	Identifier	p		5309049	0					
ANR	5309191	ReturnType	static char *		5309049	1					
ANR	5309192	Identifier	conv_10_quad		5309049	2					
ANR	5309193	ParameterList	"apr_int64_t num , register int is_unsigned , register int * is_negative , char * buf_end , register apr_size_t * len"		5309049	3					
ANR	5309194	Parameter	apr_int64_t num	418:26:12021:12035	5309049	0	True				
ANR	5309195	ParameterType	apr_int64_t		5309049	0					
ANR	5309196	Identifier	num		5309049	1					
ANR	5309197	Parameter	register int is_unsigned	418:43:12038:12061	5309049	1	True				
ANR	5309198	ParameterType	register int		5309049	0					
ANR	5309199	Identifier	is_unsigned		5309049	1					
ANR	5309200	Parameter	register int * is_negative	419:21:12085:12109	5309049	2	True				
ANR	5309201	ParameterType	register int *		5309049	0					
ANR	5309202	Identifier	is_negative		5309049	1					
ANR	5309203	Parameter	char * buf_end	419:48:12112:12124	5309049	3	True				
ANR	5309204	ParameterType	char *		5309049	0					
ANR	5309205	Identifier	buf_end		5309049	1					
ANR	5309206	Parameter	register apr_size_t * len	420:21:12148:12171	5309049	4	True				
ANR	5309207	ParameterType	register apr_size_t *		5309049	0					
ANR	5309208	Identifier	len		5309049	1					
ANR	5309209	CFGEntryNode	ENTRY		5309049		True				
ANR	5309210	CFGExitNode	EXIT		5309049		True				
ANR	5309211	Symbol	* -- p		5309049						
ANR	5309212	Symbol	num		5309049						
ANR	5309213	Symbol	APR_INT32_MIN		5309049						
ANR	5309214	Symbol	new_magnitude		5309049						
ANR	5309215	Symbol	p		5309049						
ANR	5309216	Symbol	APR_UINT32_MAX		5309049						
ANR	5309217	Symbol	len		5309049						
ANR	5309218	Symbol	t		5309049						
ANR	5309219	Symbol	is_unsigned		5309049						
ANR	5309220	Symbol	magnitude		5309049						
ANR	5309221	Symbol	FALSE		5309049						
ANR	5309222	Symbol	* p		5309049						
ANR	5309223	Symbol	buf_end		5309049						
ANR	5309224	Symbol	is_negative		5309049						
ANR	5309225	Symbol	conv_10		5309049						
ANR	5309226	Symbol	APR_INT32_MAX		5309049						
ANR	5309227	Symbol	* is_negative		5309049						
ANR	5309228	Symbol	* len		5309049						
ANR	5309229	Function	conv_in_addr	471:0:13605:14190							
ANR	5309230	FunctionDef	"conv_in_addr (struct in_addr * ia , char * buf_end , apr_size_t * len)"		5309229	0					
ANR	5309231	CompoundStatement		472:0:13683:14190	5309229	0					
ANR	5309232	IdentifierDeclStatement	unsigned addr = ntohl ( ia -> s_addr ) ;	473:4:13689:13722	5309229	0	True				
ANR	5309233	IdentifierDecl	addr = ntohl ( ia -> s_addr )		5309229	0					
ANR	5309234	IdentifierDeclType	unsigned		5309229	0					
ANR	5309235	Identifier	addr		5309229	1					
ANR	5309236	AssignmentExpression	addr = ntohl ( ia -> s_addr )		5309229	2		=			
ANR	5309237	Identifier	addr		5309229	0					
ANR	5309238	CallExpression	ntohl ( ia -> s_addr )		5309229	1					
ANR	5309239	Callee	ntohl		5309229	0					
ANR	5309240	Identifier	ntohl		5309229	0					
ANR	5309241	ArgumentList	ia -> s_addr		5309229	1					
ANR	5309242	Argument	ia -> s_addr		5309229	0					
ANR	5309243	PtrMemberAccess	ia -> s_addr		5309229	0					
ANR	5309244	Identifier	ia		5309229	0					
ANR	5309245	Identifier	s_addr		5309229	1					
ANR	5309246	IdentifierDeclStatement	char * p = buf_end ;	474:4:13728:13745	5309229	1	True				
ANR	5309247	IdentifierDecl	* p = buf_end		5309229	0					
ANR	5309248	IdentifierDeclType	char *		5309229	0					
ANR	5309249	Identifier	p		5309229	1					
ANR	5309250	AssignmentExpression	* p = buf_end		5309229	2		=			
ANR	5309251	Identifier	buf_end		5309229	0					
ANR	5309252	Identifier	buf_end		5309229	1					
ANR	5309253	IdentifierDeclStatement	int is_negative ;	475:4:13751:13766	5309229	2	True				
ANR	5309254	IdentifierDecl	is_negative		5309229	0					
ANR	5309255	IdentifierDeclType	int		5309229	0					
ANR	5309256	Identifier	is_negative		5309229	1					
ANR	5309257	IdentifierDeclStatement	apr_size_t sub_len ;	476:4:13772:13790	5309229	3	True				
ANR	5309258	IdentifierDecl	sub_len		5309229	0					
ANR	5309259	IdentifierDeclType	apr_size_t		5309229	0					
ANR	5309260	Identifier	sub_len		5309229	1					
ANR	5309261	ExpressionStatement	"p = conv_10 ( ( addr & 0x000000FF ) , TRUE , & is_negative , p , & sub_len )"	478:4:13797:13868	5309229	4	True				
ANR	5309262	AssignmentExpression	"p = conv_10 ( ( addr & 0x000000FF ) , TRUE , & is_negative , p , & sub_len )"		5309229	0		=			
ANR	5309263	Identifier	p		5309229	0					
ANR	5309264	CallExpression	"conv_10 ( ( addr & 0x000000FF ) , TRUE , & is_negative , p , & sub_len )"		5309229	1					
ANR	5309265	Callee	conv_10		5309229	0					
ANR	5309266	Identifier	conv_10		5309229	0					
ANR	5309267	ArgumentList	addr & 0x000000FF		5309229	1					
ANR	5309268	Argument	addr & 0x000000FF		5309229	0					
ANR	5309269	BitAndExpression	addr & 0x000000FF		5309229	0		&			
ANR	5309270	Identifier	addr		5309229	0					
ANR	5309271	PrimaryExpression	0x000000FF		5309229	1					
ANR	5309272	Argument	TRUE		5309229	1					
ANR	5309273	Identifier	TRUE		5309229	0					
ANR	5309274	Argument	& is_negative		5309229	2					
ANR	5309275	UnaryOperationExpression	& is_negative		5309229	0					
ANR	5309276	UnaryOperator	&		5309229	0					
ANR	5309277	Identifier	is_negative		5309229	1					
ANR	5309278	Argument	p		5309229	3					
ANR	5309279	Identifier	p		5309229	0					
ANR	5309280	Argument	& sub_len		5309229	4					
ANR	5309281	UnaryOperationExpression	& sub_len		5309229	0					
ANR	5309282	UnaryOperator	&		5309229	0					
ANR	5309283	Identifier	sub_len		5309229	1					
ANR	5309284	ExpressionStatement	* -- p = '.'	479:4:13874:13884	5309229	5	True				
ANR	5309285	AssignmentExpression	* -- p = '.'		5309229	0		=			
ANR	5309286	UnaryOperationExpression	* -- p		5309229	0					
ANR	5309287	UnaryOperator	*		5309229	0					
ANR	5309288	UnaryExpression	-- p		5309229	1					
ANR	5309289	IncDec	--		5309229	0					
ANR	5309290	Identifier	p		5309229	1					
ANR	5309291	PrimaryExpression	'.'		5309229	1					
ANR	5309292	ExpressionStatement	"p = conv_10 ( ( addr & 0x0000FF00 ) >> 8 , TRUE , & is_negative , p , & sub_len )"	480:4:13890:13961	5309229	6	True				
ANR	5309293	AssignmentExpression	"p = conv_10 ( ( addr & 0x0000FF00 ) >> 8 , TRUE , & is_negative , p , & sub_len )"		5309229	0		=			
ANR	5309294	Identifier	p		5309229	0					
ANR	5309295	CallExpression	"conv_10 ( ( addr & 0x0000FF00 ) >> 8 , TRUE , & is_negative , p , & sub_len )"		5309229	1					
ANR	5309296	Callee	conv_10		5309229	0					
ANR	5309297	Identifier	conv_10		5309229	0					
ANR	5309298	ArgumentList	( addr & 0x0000FF00 ) >> 8		5309229	1					
ANR	5309299	Argument	( addr & 0x0000FF00 ) >> 8		5309229	0					
ANR	5309300	ShiftExpression	( addr & 0x0000FF00 ) >> 8		5309229	0		>>			
ANR	5309301	BitAndExpression	addr & 0x0000FF00		5309229	0		&			
ANR	5309302	Identifier	addr		5309229	0					
ANR	5309303	PrimaryExpression	0x0000FF00		5309229	1					
ANR	5309304	PrimaryExpression	8		5309229	1					
ANR	5309305	Argument	TRUE		5309229	1					
ANR	5309306	Identifier	TRUE		5309229	0					
ANR	5309307	Argument	& is_negative		5309229	2					
ANR	5309308	UnaryOperationExpression	& is_negative		5309229	0					
ANR	5309309	UnaryOperator	&		5309229	0					
ANR	5309310	Identifier	is_negative		5309229	1					
ANR	5309311	Argument	p		5309229	3					
ANR	5309312	Identifier	p		5309229	0					
ANR	5309313	Argument	& sub_len		5309229	4					
ANR	5309314	UnaryOperationExpression	& sub_len		5309229	0					
ANR	5309315	UnaryOperator	&		5309229	0					
ANR	5309316	Identifier	sub_len		5309229	1					
ANR	5309317	ExpressionStatement	* -- p = '.'	481:4:13967:13977	5309229	7	True				
ANR	5309318	AssignmentExpression	* -- p = '.'		5309229	0		=			
ANR	5309319	UnaryOperationExpression	* -- p		5309229	0					
ANR	5309320	UnaryOperator	*		5309229	0					
ANR	5309321	UnaryExpression	-- p		5309229	1					
ANR	5309322	IncDec	--		5309229	0					
ANR	5309323	Identifier	p		5309229	1					
ANR	5309324	PrimaryExpression	'.'		5309229	1					
ANR	5309325	ExpressionStatement	"p = conv_10 ( ( addr & 0x00FF0000 ) >> 16 , TRUE , & is_negative , p , & sub_len )"	482:4:13983:14054	5309229	8	True				
ANR	5309326	AssignmentExpression	"p = conv_10 ( ( addr & 0x00FF0000 ) >> 16 , TRUE , & is_negative , p , & sub_len )"		5309229	0		=			
ANR	5309327	Identifier	p		5309229	0					
ANR	5309328	CallExpression	"conv_10 ( ( addr & 0x00FF0000 ) >> 16 , TRUE , & is_negative , p , & sub_len )"		5309229	1					
ANR	5309329	Callee	conv_10		5309229	0					
ANR	5309330	Identifier	conv_10		5309229	0					
ANR	5309331	ArgumentList	( addr & 0x00FF0000 ) >> 16		5309229	1					
ANR	5309332	Argument	( addr & 0x00FF0000 ) >> 16		5309229	0					
ANR	5309333	ShiftExpression	( addr & 0x00FF0000 ) >> 16		5309229	0		>>			
ANR	5309334	BitAndExpression	addr & 0x00FF0000		5309229	0		&			
ANR	5309335	Identifier	addr		5309229	0					
ANR	5309336	PrimaryExpression	0x00FF0000		5309229	1					
ANR	5309337	PrimaryExpression	16		5309229	1					
ANR	5309338	Argument	TRUE		5309229	1					
ANR	5309339	Identifier	TRUE		5309229	0					
ANR	5309340	Argument	& is_negative		5309229	2					
ANR	5309341	UnaryOperationExpression	& is_negative		5309229	0					
ANR	5309342	UnaryOperator	&		5309229	0					
ANR	5309343	Identifier	is_negative		5309229	1					
ANR	5309344	Argument	p		5309229	3					
ANR	5309345	Identifier	p		5309229	0					
ANR	5309346	Argument	& sub_len		5309229	4					
ANR	5309347	UnaryOperationExpression	& sub_len		5309229	0					
ANR	5309348	UnaryOperator	&		5309229	0					
ANR	5309349	Identifier	sub_len		5309229	1					
ANR	5309350	ExpressionStatement	* -- p = '.'	483:4:14060:14070	5309229	9	True				
ANR	5309351	AssignmentExpression	* -- p = '.'		5309229	0		=			
ANR	5309352	UnaryOperationExpression	* -- p		5309229	0					
ANR	5309353	UnaryOperator	*		5309229	0					
ANR	5309354	UnaryExpression	-- p		5309229	1					
ANR	5309355	IncDec	--		5309229	0					
ANR	5309356	Identifier	p		5309229	1					
ANR	5309357	PrimaryExpression	'.'		5309229	1					
ANR	5309358	ExpressionStatement	"p = conv_10 ( ( addr & 0xFF000000 ) >> 24 , TRUE , & is_negative , p , & sub_len )"	484:4:14076:14147	5309229	10	True				
ANR	5309359	AssignmentExpression	"p = conv_10 ( ( addr & 0xFF000000 ) >> 24 , TRUE , & is_negative , p , & sub_len )"		5309229	0		=			
ANR	5309360	Identifier	p		5309229	0					
ANR	5309361	CallExpression	"conv_10 ( ( addr & 0xFF000000 ) >> 24 , TRUE , & is_negative , p , & sub_len )"		5309229	1					
ANR	5309362	Callee	conv_10		5309229	0					
ANR	5309363	Identifier	conv_10		5309229	0					
ANR	5309364	ArgumentList	( addr & 0xFF000000 ) >> 24		5309229	1					
ANR	5309365	Argument	( addr & 0xFF000000 ) >> 24		5309229	0					
ANR	5309366	ShiftExpression	( addr & 0xFF000000 ) >> 24		5309229	0		>>			
ANR	5309367	BitAndExpression	addr & 0xFF000000		5309229	0		&			
ANR	5309368	Identifier	addr		5309229	0					
ANR	5309369	PrimaryExpression	0xFF000000		5309229	1					
ANR	5309370	PrimaryExpression	24		5309229	1					
ANR	5309371	Argument	TRUE		5309229	1					
ANR	5309372	Identifier	TRUE		5309229	0					
ANR	5309373	Argument	& is_negative		5309229	2					
ANR	5309374	UnaryOperationExpression	& is_negative		5309229	0					
ANR	5309375	UnaryOperator	&		5309229	0					
ANR	5309376	Identifier	is_negative		5309229	1					
ANR	5309377	Argument	p		5309229	3					
ANR	5309378	Identifier	p		5309229	0					
ANR	5309379	Argument	& sub_len		5309229	4					
ANR	5309380	UnaryOperationExpression	& sub_len		5309229	0					
ANR	5309381	UnaryOperator	&		5309229	0					
ANR	5309382	Identifier	sub_len		5309229	1					
ANR	5309383	ExpressionStatement	* len = buf_end - p	486:4:14154:14172	5309229	11	True				
ANR	5309384	AssignmentExpression	* len = buf_end - p		5309229	0		=			
ANR	5309385	UnaryOperationExpression	* len		5309229	0					
ANR	5309386	UnaryOperator	*		5309229	0					
ANR	5309387	Identifier	len		5309229	1					
ANR	5309388	AdditiveExpression	buf_end - p		5309229	1		-			
ANR	5309389	Identifier	buf_end		5309229	0					
ANR	5309390	Identifier	p		5309229	1					
ANR	5309391	ReturnStatement	return ( p ) ;	487:4:14178:14188	5309229	12	True				
ANR	5309392	Identifier	p		5309229	0					
ANR	5309393	ReturnType	static char *		5309229	1					
ANR	5309394	Identifier	conv_in_addr		5309229	2					
ANR	5309395	ParameterList	"struct in_addr * ia , char * buf_end , apr_size_t * len"		5309229	3					
ANR	5309396	Parameter	struct in_addr * ia	471:26:13631:13648	5309229	0	True				
ANR	5309397	ParameterType	struct in_addr *		5309229	0					
ANR	5309398	Identifier	ia		5309229	1					
ANR	5309399	Parameter	char * buf_end	471:46:13651:13663	5309229	1	True				
ANR	5309400	ParameterType	char *		5309229	0					
ANR	5309401	Identifier	buf_end		5309229	1					
ANR	5309402	Parameter	apr_size_t * len	471:61:13666:13680	5309229	2	True				
ANR	5309403	ParameterType	apr_size_t *		5309229	0					
ANR	5309404	Identifier	len		5309229	1					
ANR	5309405	CFGEntryNode	ENTRY		5309229		True				
ANR	5309406	CFGExitNode	EXIT		5309229		True				
ANR	5309407	Symbol	* -- p		5309229						
ANR	5309408	Symbol	ntohl		5309229						
ANR	5309409	Symbol	TRUE		5309229						
ANR	5309410	Symbol	& is_negative		5309229						
ANR	5309411	Symbol	& sub_len		5309229						
ANR	5309412	Symbol	p		5309229						
ANR	5309413	Symbol	sub_len		5309229						
ANR	5309414	Symbol	len		5309229						
ANR	5309415	Symbol	ia -> s_addr		5309229						
ANR	5309416	Symbol	ia		5309229						
ANR	5309417	Symbol	* p		5309229						
ANR	5309418	Symbol	buf_end		5309229						
ANR	5309419	Symbol	addr		5309229						
ANR	5309420	Symbol	* ia		5309229						
ANR	5309421	Symbol	is_negative		5309229						
ANR	5309422	Symbol	conv_10		5309229						
ANR	5309423	Symbol	* len		5309229						
ANR	5309424	Function	conv_apr_sockaddr	492:0:14306:15248							
ANR	5309425	FunctionDef	"conv_apr_sockaddr (apr_sockaddr_t * sa , char * buf_end , apr_size_t * len)"		5309424	0					
ANR	5309426	CompoundStatement		493:0:14389:15248	5309424	0					
ANR	5309427	IdentifierDeclStatement	char * p = buf_end ;	494:4:14395:14412	5309424	0	True				
ANR	5309428	IdentifierDecl	* p = buf_end		5309424	0					
ANR	5309429	IdentifierDeclType	char *		5309424	0					
ANR	5309430	Identifier	p		5309424	1					
ANR	5309431	AssignmentExpression	* p = buf_end		5309424	2		=			
ANR	5309432	Identifier	buf_end		5309424	0					
ANR	5309433	Identifier	buf_end		5309424	1					
ANR	5309434	IdentifierDeclStatement	int is_negative ;	495:4:14418:14433	5309424	1	True				
ANR	5309435	IdentifierDecl	is_negative		5309424	0					
ANR	5309436	IdentifierDeclType	int		5309424	0					
ANR	5309437	Identifier	is_negative		5309424	1					
ANR	5309438	IdentifierDeclStatement	apr_size_t sub_len ;	496:4:14439:14457	5309424	2	True				
ANR	5309439	IdentifierDecl	sub_len		5309424	0					
ANR	5309440	IdentifierDeclType	apr_size_t		5309424	0					
ANR	5309441	Identifier	sub_len		5309424	1					
ANR	5309442	IdentifierDeclStatement	char * ipaddr_str ;	497:4:14463:14479	5309424	3	True				
ANR	5309443	IdentifierDecl	* ipaddr_str		5309424	0					
ANR	5309444	IdentifierDeclType	char *		5309424	0					
ANR	5309445	Identifier	ipaddr_str		5309424	1					
ANR	5309446	ExpressionStatement	"p = conv_10 ( sa -> port , TRUE , & is_negative , p , & sub_len )"	499:4:14486:14540	5309424	4	True				
ANR	5309447	AssignmentExpression	"p = conv_10 ( sa -> port , TRUE , & is_negative , p , & sub_len )"		5309424	0		=			
ANR	5309448	Identifier	p		5309424	0					
ANR	5309449	CallExpression	"conv_10 ( sa -> port , TRUE , & is_negative , p , & sub_len )"		5309424	1					
ANR	5309450	Callee	conv_10		5309424	0					
ANR	5309451	Identifier	conv_10		5309424	0					
ANR	5309452	ArgumentList	sa -> port		5309424	1					
ANR	5309453	Argument	sa -> port		5309424	0					
ANR	5309454	PtrMemberAccess	sa -> port		5309424	0					
ANR	5309455	Identifier	sa		5309424	0					
ANR	5309456	Identifier	port		5309424	1					
ANR	5309457	Argument	TRUE		5309424	1					
ANR	5309458	Identifier	TRUE		5309424	0					
ANR	5309459	Argument	& is_negative		5309424	2					
ANR	5309460	UnaryOperationExpression	& is_negative		5309424	0					
ANR	5309461	UnaryOperator	&		5309424	0					
ANR	5309462	Identifier	is_negative		5309424	1					
ANR	5309463	Argument	p		5309424	3					
ANR	5309464	Identifier	p		5309424	0					
ANR	5309465	Argument	& sub_len		5309424	4					
ANR	5309466	UnaryOperationExpression	& sub_len		5309424	0					
ANR	5309467	UnaryOperator	&		5309424	0					
ANR	5309468	Identifier	sub_len		5309424	1					
ANR	5309469	ExpressionStatement	* -- p = ':'	500:4:14546:14556	5309424	5	True				
ANR	5309470	AssignmentExpression	* -- p = ':'		5309424	0		=			
ANR	5309471	UnaryOperationExpression	* -- p		5309424	0					
ANR	5309472	UnaryOperator	*		5309424	0					
ANR	5309473	UnaryExpression	-- p		5309424	1					
ANR	5309474	IncDec	--		5309424	0					
ANR	5309475	Identifier	p		5309424	1					
ANR	5309476	PrimaryExpression	':'		5309424	1					
ANR	5309477	ExpressionStatement	ipaddr_str = buf_end - NUM_BUF_SIZE	501:4:14562:14597	5309424	6	True				
ANR	5309478	AssignmentExpression	ipaddr_str = buf_end - NUM_BUF_SIZE		5309424	0		=			
ANR	5309479	Identifier	ipaddr_str		5309424	0					
ANR	5309480	AdditiveExpression	buf_end - NUM_BUF_SIZE		5309424	1		-			
ANR	5309481	Identifier	buf_end		5309424	0					
ANR	5309482	Identifier	NUM_BUF_SIZE		5309424	1					
ANR	5309483	IfStatement	"if ( apr_sockaddr_ip_getbuf ( ipaddr_str , sa -> addr_str_len , sa ) )"		5309424	7					
ANR	5309484	Condition	"apr_sockaddr_ip_getbuf ( ipaddr_str , sa -> addr_str_len , sa )"	502:8:14607:14662	5309424	0	True				
ANR	5309485	CallExpression	"apr_sockaddr_ip_getbuf ( ipaddr_str , sa -> addr_str_len , sa )"		5309424	0					
ANR	5309486	Callee	apr_sockaddr_ip_getbuf		5309424	0					
ANR	5309487	Identifier	apr_sockaddr_ip_getbuf		5309424	0					
ANR	5309488	ArgumentList	ipaddr_str		5309424	1					
ANR	5309489	Argument	ipaddr_str		5309424	0					
ANR	5309490	Identifier	ipaddr_str		5309424	0					
ANR	5309491	Argument	sa -> addr_str_len		5309424	1					
ANR	5309492	PtrMemberAccess	sa -> addr_str_len		5309424	0					
ANR	5309493	Identifier	sa		5309424	0					
ANR	5309494	Identifier	addr_str_len		5309424	1					
ANR	5309495	Argument	sa		5309424	2					
ANR	5309496	Identifier	sa		5309424	0					
ANR	5309497	CompoundStatement		10:66:275:275	5309424	1					
ANR	5309498	ExpressionStatement	* -- p = '?'	505:8:14791:14801	5309424	0	True				
ANR	5309499	AssignmentExpression	* -- p = '?'		5309424	0		=			
ANR	5309500	UnaryOperationExpression	* -- p		5309424	0					
ANR	5309501	UnaryOperator	*		5309424	0					
ANR	5309502	UnaryExpression	-- p		5309424	1					
ANR	5309503	IncDec	--		5309424	0					
ANR	5309504	Identifier	p		5309424	1					
ANR	5309505	PrimaryExpression	'?'		5309424	1					
ANR	5309506	ExpressionStatement	* len = buf_end - p	506:8:14811:14829	5309424	1	True				
ANR	5309507	AssignmentExpression	* len = buf_end - p		5309424	0		=			
ANR	5309508	UnaryOperationExpression	* len		5309424	0					
ANR	5309509	UnaryOperator	*		5309424	0					
ANR	5309510	Identifier	len		5309424	1					
ANR	5309511	AdditiveExpression	buf_end - p		5309424	1		-			
ANR	5309512	Identifier	buf_end		5309424	0					
ANR	5309513	Identifier	p		5309424	1					
ANR	5309514	ReturnStatement	return p ;	507:8:14839:14847	5309424	2	True				
ANR	5309515	Identifier	p		5309424	0					
ANR	5309516	ExpressionStatement	sub_len = strlen ( ipaddr_str )	509:4:14859:14887	5309424	8	True				
ANR	5309517	AssignmentExpression	sub_len = strlen ( ipaddr_str )		5309424	0		=			
ANR	5309518	Identifier	sub_len		5309424	0					
ANR	5309519	CallExpression	strlen ( ipaddr_str )		5309424	1					
ANR	5309520	Callee	strlen		5309424	0					
ANR	5309521	Identifier	strlen		5309424	0					
ANR	5309522	ArgumentList	ipaddr_str		5309424	1					
ANR	5309523	Argument	ipaddr_str		5309424	0					
ANR	5309524	Identifier	ipaddr_str		5309424	0					
ANR	5309525	IfStatement	if ( sa -> family == APR_INET6 && ! IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr ) )		5309424	9					
ANR	5309526	Condition	sa -> family == APR_INET6 && ! IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr )	511:8:14915:14994	5309424	0	True				
ANR	5309527	AndExpression	sa -> family == APR_INET6 && ! IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr )		5309424	0		&&			
ANR	5309528	EqualityExpression	sa -> family == APR_INET6		5309424	0		==			
ANR	5309529	PtrMemberAccess	sa -> family		5309424	0					
ANR	5309530	Identifier	sa		5309424	0					
ANR	5309531	Identifier	family		5309424	1					
ANR	5309532	Identifier	APR_INET6		5309424	1					
ANR	5309533	UnaryOperationExpression	! IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr )		5309424	1					
ANR	5309534	UnaryOperator	!		5309424	0					
ANR	5309535	CallExpression	IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr )		5309424	1					
ANR	5309536	Callee	IN6_IS_ADDR_V4MAPPED		5309424	0					
ANR	5309537	Identifier	IN6_IS_ADDR_V4MAPPED		5309424	0					
ANR	5309538	ArgumentList	& sa -> sa . sin6 . sin6_addr		5309424	1					
ANR	5309539	Argument	& sa -> sa . sin6 . sin6_addr		5309424	0					
ANR	5309540	UnaryOperationExpression	& sa -> sa . sin6 . sin6_addr		5309424	0					
ANR	5309541	UnaryOperator	&		5309424	0					
ANR	5309542	MemberAccess	sa -> sa . sin6 . sin6_addr		5309424	1					
ANR	5309543	MemberAccess	sa -> sa . sin6		5309424	0					
ANR	5309544	PtrMemberAccess	sa -> sa		5309424	0					
ANR	5309545	Identifier	sa		5309424	0					
ANR	5309546	Identifier	sa		5309424	1					
ANR	5309547	Identifier	sin6		5309424	1					
ANR	5309548	Identifier	sin6_addr		5309424	1					
ANR	5309549	CompoundStatement		20:55:607:607	5309424	1					
ANR	5309550	ExpressionStatement	* ( p - 1 ) = ']'	513:8:15007:15021	5309424	0	True				
ANR	5309551	AssignmentExpression	* ( p - 1 ) = ']'		5309424	0		=			
ANR	5309552	UnaryOperationExpression	* ( p - 1 )		5309424	0					
ANR	5309553	UnaryOperator	*		5309424	0					
ANR	5309554	AdditiveExpression	p - 1		5309424	1		-			
ANR	5309555	Identifier	p		5309424	0					
ANR	5309556	PrimaryExpression	1		5309424	1					
ANR	5309557	PrimaryExpression	']'		5309424	1					
ANR	5309558	ExpressionStatement	p -= sub_len + 2	514:8:15031:15047	5309424	1	True				
ANR	5309559	AssignmentExpression	p -= sub_len + 2		5309424	0		-=			
ANR	5309560	Identifier	p		5309424	0					
ANR	5309561	AdditiveExpression	sub_len + 2		5309424	1		+			
ANR	5309562	Identifier	sub_len		5309424	0					
ANR	5309563	PrimaryExpression	2		5309424	1					
ANR	5309564	ExpressionStatement	* p = '['	515:8:15057:15065	5309424	2	True				
ANR	5309565	AssignmentExpression	* p = '['		5309424	0		=			
ANR	5309566	UnaryOperationExpression	* p		5309424	0					
ANR	5309567	UnaryOperator	*		5309424	0					
ANR	5309568	Identifier	p		5309424	1					
ANR	5309569	PrimaryExpression	'['		5309424	1					
ANR	5309570	ExpressionStatement	"memcpy ( p + 1 , ipaddr_str , sub_len )"	516:8:15075:15109	5309424	3	True				
ANR	5309571	CallExpression	"memcpy ( p + 1 , ipaddr_str , sub_len )"		5309424	0					
ANR	5309572	Callee	memcpy		5309424	0					
ANR	5309573	Identifier	memcpy		5309424	0					
ANR	5309574	ArgumentList	p + 1		5309424	1					
ANR	5309575	Argument	p + 1		5309424	0					
ANR	5309576	AdditiveExpression	p + 1		5309424	0		+			
ANR	5309577	Identifier	p		5309424	0					
ANR	5309578	PrimaryExpression	1		5309424	1					
ANR	5309579	Argument	ipaddr_str		5309424	1					
ANR	5309580	Identifier	ipaddr_str		5309424	0					
ANR	5309581	Argument	sub_len		5309424	2					
ANR	5309582	Identifier	sub_len		5309424	0					
ANR	5309583	ElseStatement	else		5309424	0					
ANR	5309584	CompoundStatement		28:4:747:747	5309424	0					
ANR	5309585	ExpressionStatement	p -= sub_len	521:8:15147:15159	5309424	0	True				
ANR	5309586	AssignmentExpression	p -= sub_len		5309424	0		-=			
ANR	5309587	Identifier	p		5309424	0					
ANR	5309588	Identifier	sub_len		5309424	1					
ANR	5309589	ExpressionStatement	"memcpy ( p , ipaddr_str , sub_len )"	522:8:15169:15199	5309424	1	True				
ANR	5309590	CallExpression	"memcpy ( p , ipaddr_str , sub_len )"		5309424	0					
ANR	5309591	Callee	memcpy		5309424	0					
ANR	5309592	Identifier	memcpy		5309424	0					
ANR	5309593	ArgumentList	p		5309424	1					
ANR	5309594	Argument	p		5309424	0					
ANR	5309595	Identifier	p		5309424	0					
ANR	5309596	Argument	ipaddr_str		5309424	1					
ANR	5309597	Identifier	ipaddr_str		5309424	0					
ANR	5309598	Argument	sub_len		5309424	2					
ANR	5309599	Identifier	sub_len		5309424	0					
ANR	5309600	ExpressionStatement	* len = buf_end - p	525:4:15212:15230	5309424	10	True				
ANR	5309601	AssignmentExpression	* len = buf_end - p		5309424	0		=			
ANR	5309602	UnaryOperationExpression	* len		5309424	0					
ANR	5309603	UnaryOperator	*		5309424	0					
ANR	5309604	Identifier	len		5309424	1					
ANR	5309605	AdditiveExpression	buf_end - p		5309424	1		-			
ANR	5309606	Identifier	buf_end		5309424	0					
ANR	5309607	Identifier	p		5309424	1					
ANR	5309608	ReturnStatement	return ( p ) ;	526:4:15236:15246	5309424	11	True				
ANR	5309609	Identifier	p		5309424	0					
ANR	5309610	ReturnType	static char *		5309424	1					
ANR	5309611	Identifier	conv_apr_sockaddr		5309424	2					
ANR	5309612	ParameterList	"apr_sockaddr_t * sa , char * buf_end , apr_size_t * len"		5309424	3					
ANR	5309613	Parameter	apr_sockaddr_t * sa	492:31:14337:14354	5309424	0	True				
ANR	5309614	ParameterType	apr_sockaddr_t *		5309424	0					
ANR	5309615	Identifier	sa		5309424	1					
ANR	5309616	Parameter	char * buf_end	492:51:14357:14369	5309424	1	True				
ANR	5309617	ParameterType	char *		5309424	0					
ANR	5309618	Identifier	buf_end		5309424	1					
ANR	5309619	Parameter	apr_size_t * len	492:66:14372:14386	5309424	2	True				
ANR	5309620	ParameterType	apr_size_t *		5309424	0					
ANR	5309621	Identifier	len		5309424	1					
ANR	5309622	CFGEntryNode	ENTRY		5309424		True				
ANR	5309623	CFGExitNode	EXIT		5309424		True				
ANR	5309624	Symbol	* ( p - 1 )		5309424						
ANR	5309625	Symbol	& sa -> sa . sin6		5309424						
ANR	5309626	Symbol	sa -> addr_str_len		5309424						
ANR	5309627	Symbol	sa		5309424						
ANR	5309628	Symbol	& is_negative		5309424						
ANR	5309629	Symbol	& sa -> sa		5309424						
ANR	5309630	Symbol	sa -> sa . sin6		5309424						
ANR	5309631	Symbol	strlen		5309424						
ANR	5309632	Symbol	len		5309424						
ANR	5309633	Symbol	* sa		5309424						
ANR	5309634	Symbol	IN6_IS_ADDR_V4MAPPED		5309424						
ANR	5309635	Symbol	buf_end		5309424						
ANR	5309636	Symbol	sa -> sa		5309424						
ANR	5309637	Symbol	ipaddr_str		5309424						
ANR	5309638	Symbol	APR_INET6		5309424						
ANR	5309639	Symbol	* -- p		5309424						
ANR	5309640	Symbol	TRUE		5309424						
ANR	5309641	Symbol	& sub_len		5309424						
ANR	5309642	Symbol	p		5309424						
ANR	5309643	Symbol	sa -> family		5309424						
ANR	5309644	Symbol	sub_len		5309424						
ANR	5309645	Symbol	sa -> port		5309424						
ANR	5309646	Symbol	apr_sockaddr_ip_getbuf		5309424						
ANR	5309647	Symbol	NUM_BUF_SIZE		5309424						
ANR	5309648	Symbol	* p		5309424						
ANR	5309649	Symbol	is_negative		5309424						
ANR	5309650	Symbol	conv_10		5309424						
ANR	5309651	Symbol	& sa -> sa . sin6 . sin6_addr		5309424						
ANR	5309652	Symbol	* len		5309424						
ANR	5309653	Function	conv_os_thread_t	533:0:15280:15864							
ANR	5309654	FunctionDef	"conv_os_thread_t (apr_os_thread_t * tid , char * buf_end , apr_size_t * len)"		5309653	0					
ANR	5309655	CompoundStatement		534:0:15364:15864	5309653	0					
ANR	5309656	ClassDefStatement	union { apr_os_thread_t tid ; apr_uint64_t u64 ; apr_uint32_t u32 ; } u ;	535:4:15370:15466	5309653	0	True				
ANR	5309657	IdentifierDecl	u		5309653	0					
ANR	5309658	IdentifierDeclType			5309653	0					
ANR	5309659	Identifier	u		5309653	1					
ANR	5309660	IdentifierDeclStatement	int is_negative ;	540:4:15472:15487	5309653	1	True				
ANR	5309661	IdentifierDecl	is_negative		5309653	0					
ANR	5309662	IdentifierDeclType	int		5309653	0					
ANR	5309663	Identifier	is_negative		5309653	1					
ANR	5309664	ExpressionStatement	u . tid = * tid	542:4:15494:15506	5309653	2	True				
ANR	5309665	AssignmentExpression	u . tid = * tid		5309653	0		=			
ANR	5309666	MemberAccess	u . tid		5309653	0					
ANR	5309667	Identifier	u		5309653	0					
ANR	5309668	Identifier	tid		5309653	1					
ANR	5309669	UnaryOperationExpression	* tid		5309653	1					
ANR	5309670	UnaryOperator	*		5309653	0					
ANR	5309671	Identifier	tid		5309653	1					
ANR	5309672	SwitchStatement	switch ( sizeof ( u . tid ) )		5309653	3					
ANR	5309673	Condition	sizeof ( u . tid )	543:11:15519:15531	5309653	0	True				
ANR	5309674	SizeofExpression	sizeof ( u . tid )		5309653	0					
ANR	5309675	Sizeof	sizeof		5309653	0					
ANR	5309676	MemberAccess	u . tid		5309653	1					
ANR	5309677	Identifier	u		5309653	0					
ANR	5309678	Identifier	tid		5309653	1					
ANR	5309679	CompoundStatement		10:26:169:169	5309653	1					
ANR	5309680	Statement	case	544:4:15540:15543	5309653	0	True				
ANR	5309681	Statement	sizeof	544:9:15545:15550	5309653	1	True				
ANR	5309682	Statement	(	544:15:15551:15551	5309653	2	True				
ANR	5309683	Statement	apr_int32_t	544:16:15552:15562	5309653	3	True				
ANR	5309684	Statement	)	544:27:15563:15563	5309653	4	True				
ANR	5309685	Statement	:	544:28:15564:15564	5309653	5	True				
ANR	5309686	ReturnStatement	"return conv_10 ( u . u32 , TRUE , & is_negative , buf_end , len ) ;"	545:8:15574:15629	5309653	6	True				
ANR	5309687	CallExpression	"conv_10 ( u . u32 , TRUE , & is_negative , buf_end , len )"		5309653	0					
ANR	5309688	Callee	conv_10		5309653	0					
ANR	5309689	Identifier	conv_10		5309653	0					
ANR	5309690	ArgumentList	u . u32		5309653	1					
ANR	5309691	Argument	u . u32		5309653	0					
ANR	5309692	MemberAccess	u . u32		5309653	0					
ANR	5309693	Identifier	u		5309653	0					
ANR	5309694	Identifier	u32		5309653	1					
ANR	5309695	Argument	TRUE		5309653	1					
ANR	5309696	Identifier	TRUE		5309653	0					
ANR	5309697	Argument	& is_negative		5309653	2					
ANR	5309698	UnaryOperationExpression	& is_negative		5309653	0					
ANR	5309699	UnaryOperator	&		5309653	0					
ANR	5309700	Identifier	is_negative		5309653	1					
ANR	5309701	Argument	buf_end		5309653	3					
ANR	5309702	Identifier	buf_end		5309653	0					
ANR	5309703	Argument	len		5309653	4					
ANR	5309704	Identifier	len		5309653	0					
ANR	5309705	Statement	case	546:4:15635:15638	5309653	7	True				
ANR	5309706	Statement	sizeof	546:9:15640:15645	5309653	8	True				
ANR	5309707	Statement	(	546:15:15646:15646	5309653	9	True				
ANR	5309708	Statement	apr_int64_t	546:16:15647:15657	5309653	10	True				
ANR	5309709	Statement	)	546:27:15658:15658	5309653	11	True				
ANR	5309710	Statement	:	546:28:15659:15659	5309653	12	True				
ANR	5309711	ReturnStatement	"return conv_10_quad ( u . u64 , TRUE , & is_negative , buf_end , len ) ;"	547:8:15669:15729	5309653	13	True				
ANR	5309712	CallExpression	"conv_10_quad ( u . u64 , TRUE , & is_negative , buf_end , len )"		5309653	0					
ANR	5309713	Callee	conv_10_quad		5309653	0					
ANR	5309714	Identifier	conv_10_quad		5309653	0					
ANR	5309715	ArgumentList	u . u64		5309653	1					
ANR	5309716	Argument	u . u64		5309653	0					
ANR	5309717	MemberAccess	u . u64		5309653	0					
ANR	5309718	Identifier	u		5309653	0					
ANR	5309719	Identifier	u64		5309653	1					
ANR	5309720	Argument	TRUE		5309653	1					
ANR	5309721	Identifier	TRUE		5309653	0					
ANR	5309722	Argument	& is_negative		5309653	2					
ANR	5309723	UnaryOperationExpression	& is_negative		5309653	0					
ANR	5309724	UnaryOperator	&		5309653	0					
ANR	5309725	Identifier	is_negative		5309653	1					
ANR	5309726	Argument	buf_end		5309653	3					
ANR	5309727	Identifier	buf_end		5309653	0					
ANR	5309728	Argument	len		5309653	4					
ANR	5309729	Identifier	len		5309653	0					
ANR	5309730	Label	default :	548:4:15735:15742	5309653	14	True				
ANR	5309731	Identifier	default		5309653	0					
ANR	5309732	ReturnStatement	"return conv_10 ( 0 , TRUE , & is_negative , buf_end , len ) ;"	550:8:15805:15856	5309653	15	True				
ANR	5309733	CallExpression	"conv_10 ( 0 , TRUE , & is_negative , buf_end , len )"		5309653	0					
ANR	5309734	Callee	conv_10		5309653	0					
ANR	5309735	Identifier	conv_10		5309653	0					
ANR	5309736	ArgumentList	0		5309653	1					
ANR	5309737	Argument	0		5309653	0					
ANR	5309738	PrimaryExpression	0		5309653	0					
ANR	5309739	Argument	TRUE		5309653	1					
ANR	5309740	Identifier	TRUE		5309653	0					
ANR	5309741	Argument	& is_negative		5309653	2					
ANR	5309742	UnaryOperationExpression	& is_negative		5309653	0					
ANR	5309743	UnaryOperator	&		5309653	0					
ANR	5309744	Identifier	is_negative		5309653	1					
ANR	5309745	Argument	buf_end		5309653	3					
ANR	5309746	Identifier	buf_end		5309653	0					
ANR	5309747	Argument	len		5309653	4					
ANR	5309748	Identifier	len		5309653	0					
ANR	5309749	ReturnType	static char *		5309653	1					
ANR	5309750	Identifier	conv_os_thread_t		5309653	2					
ANR	5309751	ParameterList	"apr_os_thread_t * tid , char * buf_end , apr_size_t * len"		5309653	3					
ANR	5309752	Parameter	apr_os_thread_t * tid	533:30:15310:15329	5309653	0	True				
ANR	5309753	ParameterType	apr_os_thread_t *		5309653	0					
ANR	5309754	Identifier	tid		5309653	1					
ANR	5309755	Parameter	char * buf_end	533:52:15332:15344	5309653	1	True				
ANR	5309756	ParameterType	char *		5309653	0					
ANR	5309757	Identifier	buf_end		5309653	1					
ANR	5309758	Parameter	apr_size_t * len	533:67:15347:15361	5309653	2	True				
ANR	5309759	ParameterType	apr_size_t *		5309653	0					
ANR	5309760	Identifier	len		5309653	1					
ANR	5309761	CFGEntryNode	ENTRY		5309653		True				
ANR	5309762	CFGExitNode	EXIT		5309653		True				
ANR	5309763	Symbol	TRUE		5309653						
ANR	5309764	Symbol	tid		5309653						
ANR	5309765	Symbol	& is_negative		5309653						
ANR	5309766	Symbol	conv_10_quad		5309653						
ANR	5309767	Symbol	len		5309653						
ANR	5309768	Symbol	u		5309653						
ANR	5309769	Symbol	* tid		5309653						
ANR	5309770	Symbol	u . u64		5309653						
ANR	5309771	Symbol	u . u32		5309653						
ANR	5309772	Symbol	buf_end		5309653						
ANR	5309773	Symbol	is_negative		5309653						
ANR	5309774	Symbol	conv_10		5309653						
ANR	5309775	Symbol	u . tid		5309653						
ANR	5309776	Function	conv_fp	563:0:16111:18261							
ANR	5309777	FunctionDef	"conv_fp (register char format , register double num , boolean_e add_dp , int precision , int * is_negative , char * buf , apr_size_t * len)"		5309776	0					
ANR	5309778	CompoundStatement		566:0:16262:18261	5309776	0					
ANR	5309779	Statement	register	567:4:16268:16275	5309776	0	True				
ANR	5309780	IdentifierDeclStatement	char * s = buf ;	567:13:16277:16290	5309776	1	True				
ANR	5309781	IdentifierDecl	* s = buf		5309776	0					
ANR	5309782	IdentifierDeclType	char *		5309776	0					
ANR	5309783	Identifier	s		5309776	1					
ANR	5309784	AssignmentExpression	* s = buf		5309776	2		=			
ANR	5309785	Identifier	buf		5309776	0					
ANR	5309786	Identifier	buf		5309776	1					
ANR	5309787	Statement	register	568:4:16296:16303	5309776	2	True				
ANR	5309788	IdentifierDeclStatement	char * p ;	568:13:16305:16312	5309776	3	True				
ANR	5309789	IdentifierDecl	* p		5309776	0					
ANR	5309790	IdentifierDeclType	char *		5309776	0					
ANR	5309791	Identifier	p		5309776	1					
ANR	5309792	IdentifierDeclStatement	int decimal_point ;	569:4:16318:16335	5309776	4	True				
ANR	5309793	IdentifierDecl	decimal_point		5309776	0					
ANR	5309794	IdentifierDeclType	int		5309776	0					
ANR	5309795	Identifier	decimal_point		5309776	1					
ANR	5309796	IdentifierDeclStatement	char buf1 [ NDIG ] ;	570:4:16341:16356	5309776	5	True				
ANR	5309797	IdentifierDecl	buf1 [ NDIG ]		5309776	0					
ANR	5309798	IdentifierDeclType	char [ NDIG ]		5309776	0					
ANR	5309799	Identifier	buf1		5309776	1					
ANR	5309800	Identifier	NDIG		5309776	2					
ANR	5309801	IfStatement	if ( format == 'f' )		5309776	6					
ANR	5309802	Condition	format == 'f'	572:8:16367:16379	5309776	0	True				
ANR	5309803	EqualityExpression	format == 'f'		5309776	0		==			
ANR	5309804	Identifier	format		5309776	0					
ANR	5309805	PrimaryExpression	'f'		5309776	1					
ANR	5309806	ExpressionStatement	"p = apr_fcvt ( num , precision , & decimal_point , is_negative , buf1 )"	573:8:16390:16453	5309776	1	True				
ANR	5309807	AssignmentExpression	"p = apr_fcvt ( num , precision , & decimal_point , is_negative , buf1 )"		5309776	0		=			
ANR	5309808	Identifier	p		5309776	0					
ANR	5309809	CallExpression	"apr_fcvt ( num , precision , & decimal_point , is_negative , buf1 )"		5309776	1					
ANR	5309810	Callee	apr_fcvt		5309776	0					
ANR	5309811	Identifier	apr_fcvt		5309776	0					
ANR	5309812	ArgumentList	num		5309776	1					
ANR	5309813	Argument	num		5309776	0					
ANR	5309814	Identifier	num		5309776	0					
ANR	5309815	Argument	precision		5309776	1					
ANR	5309816	Identifier	precision		5309776	0					
ANR	5309817	Argument	& decimal_point		5309776	2					
ANR	5309818	UnaryOperationExpression	& decimal_point		5309776	0					
ANR	5309819	UnaryOperator	&		5309776	0					
ANR	5309820	Identifier	decimal_point		5309776	1					
ANR	5309821	Argument	is_negative		5309776	3					
ANR	5309822	Identifier	is_negative		5309776	0					
ANR	5309823	Argument	buf1		5309776	4					
ANR	5309824	Identifier	buf1		5309776	0					
ANR	5309825	ElseStatement	else		5309776	0					
ANR	5309826	ExpressionStatement	"p = apr_ecvt ( num , precision + 1 , & decimal_point , is_negative , buf1 )"	575:8:16499:16566	5309776	0	True				
ANR	5309827	AssignmentExpression	"p = apr_ecvt ( num , precision + 1 , & decimal_point , is_negative , buf1 )"		5309776	0		=			
ANR	5309828	Identifier	p		5309776	0					
ANR	5309829	CallExpression	"apr_ecvt ( num , precision + 1 , & decimal_point , is_negative , buf1 )"		5309776	1					
ANR	5309830	Callee	apr_ecvt		5309776	0					
ANR	5309831	Identifier	apr_ecvt		5309776	0					
ANR	5309832	ArgumentList	num		5309776	1					
ANR	5309833	Argument	num		5309776	0					
ANR	5309834	Identifier	num		5309776	0					
ANR	5309835	Argument	precision + 1		5309776	1					
ANR	5309836	AdditiveExpression	precision + 1		5309776	0		+			
ANR	5309837	Identifier	precision		5309776	0					
ANR	5309838	PrimaryExpression	1		5309776	1					
ANR	5309839	Argument	& decimal_point		5309776	2					
ANR	5309840	UnaryOperationExpression	& decimal_point		5309776	0					
ANR	5309841	UnaryOperator	&		5309776	0					
ANR	5309842	Identifier	decimal_point		5309776	1					
ANR	5309843	Argument	is_negative		5309776	3					
ANR	5309844	Identifier	is_negative		5309776	0					
ANR	5309845	Argument	buf1		5309776	4					
ANR	5309846	Identifier	buf1		5309776	0					
ANR	5309847	IfStatement	if ( apr_isalpha ( * p ) )		5309776	7					
ANR	5309848	Condition	apr_isalpha ( * p )	580:8:16626:16640	5309776	0	True				
ANR	5309849	CallExpression	apr_isalpha ( * p )		5309776	0					
ANR	5309850	Callee	apr_isalpha		5309776	0					
ANR	5309851	Identifier	apr_isalpha		5309776	0					
ANR	5309852	ArgumentList	* p		5309776	1					
ANR	5309853	Argument	* p		5309776	0					
ANR	5309854	UnaryOperationExpression	* p		5309776	0					
ANR	5309855	UnaryOperator	*		5309776	0					
ANR	5309856	Identifier	p		5309776	1					
ANR	5309857	CompoundStatement		15:25:380:380	5309776	1					
ANR	5309858	ExpressionStatement	* len = strlen ( p )	581:8:16653:16669	5309776	0	True				
ANR	5309859	AssignmentExpression	* len = strlen ( p )		5309776	0		=			
ANR	5309860	UnaryOperationExpression	* len		5309776	0					
ANR	5309861	UnaryOperator	*		5309776	0					
ANR	5309862	Identifier	len		5309776	1					
ANR	5309863	CallExpression	strlen ( p )		5309776	1					
ANR	5309864	Callee	strlen		5309776	0					
ANR	5309865	Identifier	strlen		5309776	0					
ANR	5309866	ArgumentList	p		5309776	1					
ANR	5309867	Argument	p		5309776	0					
ANR	5309868	Identifier	p		5309776	0					
ANR	5309869	ExpressionStatement	"memcpy ( buf , p , * len + 1 )"	582:8:16679:16703	5309776	1	True				
ANR	5309870	CallExpression	"memcpy ( buf , p , * len + 1 )"		5309776	0					
ANR	5309871	Callee	memcpy		5309776	0					
ANR	5309872	Identifier	memcpy		5309776	0					
ANR	5309873	ArgumentList	buf		5309776	1					
ANR	5309874	Argument	buf		5309776	0					
ANR	5309875	Identifier	buf		5309776	0					
ANR	5309876	Argument	p		5309776	1					
ANR	5309877	Identifier	p		5309776	0					
ANR	5309878	Argument	* len + 1		5309776	2					
ANR	5309879	AdditiveExpression	* len + 1		5309776	0		+			
ANR	5309880	UnaryOperationExpression	* len		5309776	0					
ANR	5309881	UnaryOperator	*		5309776	0					
ANR	5309882	Identifier	len		5309776	1					
ANR	5309883	PrimaryExpression	1		5309776	1					
ANR	5309884	ExpressionStatement	* is_negative = FALSE	583:8:16713:16733	5309776	2	True				
ANR	5309885	AssignmentExpression	* is_negative = FALSE		5309776	0		=			
ANR	5309886	UnaryOperationExpression	* is_negative		5309776	0					
ANR	5309887	UnaryOperator	*		5309776	0					
ANR	5309888	Identifier	is_negative		5309776	1					
ANR	5309889	Identifier	FALSE		5309776	1					
ANR	5309890	ReturnStatement	return ( buf ) ;	584:8:16743:16755	5309776	3	True				
ANR	5309891	Identifier	buf		5309776	0					
ANR	5309892	IfStatement	if ( format == 'f' )		5309776	8					
ANR	5309893	Condition	format == 'f'	587:8:16772:16784	5309776	0	True				
ANR	5309894	EqualityExpression	format == 'f'		5309776	0		==			
ANR	5309895	Identifier	format		5309776	0					
ANR	5309896	PrimaryExpression	'f'		5309776	1					
ANR	5309897	CompoundStatement		22:23:524:524	5309776	1					
ANR	5309898	IfStatement	if ( decimal_point <= 0 )		5309776	0					
ANR	5309899	Condition	decimal_point <= 0	588:12:16801:16818	5309776	0	True				
ANR	5309900	RelationalExpression	decimal_point <= 0		5309776	0		<=			
ANR	5309901	Identifier	decimal_point		5309776	0					
ANR	5309902	PrimaryExpression	0		5309776	1					
ANR	5309903	CompoundStatement		23:32:558:558	5309776	1					
ANR	5309904	ExpressionStatement	* s ++ = '0'	589:12:16835:16845	5309776	0	True				
ANR	5309905	AssignmentExpression	* s ++ = '0'		5309776	0		=			
ANR	5309906	UnaryOperationExpression	* s ++		5309776	0					
ANR	5309907	UnaryOperator	*		5309776	0					
ANR	5309908	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5309909	Identifier	s		5309776	0					
ANR	5309910	IncDec	++		5309776	1					
ANR	5309911	PrimaryExpression	'0'		5309776	1					
ANR	5309912	IfStatement	if ( precision > 0 )		5309776	1					
ANR	5309913	Condition	precision > 0	590:16:16863:16875	5309776	0	True				
ANR	5309914	RelationalExpression	precision > 0		5309776	0		>			
ANR	5309915	Identifier	precision		5309776	0					
ANR	5309916	PrimaryExpression	0		5309776	1					
ANR	5309917	CompoundStatement		25:31:615:615	5309776	1					
ANR	5309918	ExpressionStatement	* s ++ = '.'	591:16:16896:16906	5309776	0	True				
ANR	5309919	AssignmentExpression	* s ++ = '.'		5309776	0		=			
ANR	5309920	UnaryOperationExpression	* s ++		5309776	0					
ANR	5309921	UnaryOperator	*		5309776	0					
ANR	5309922	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5309923	Identifier	s		5309776	0					
ANR	5309924	IncDec	++		5309776	1					
ANR	5309925	PrimaryExpression	'.'		5309776	1					
ANR	5309926	WhileStatement	while ( decimal_point ++ < 0 )		5309776	1					
ANR	5309927	Condition	decimal_point ++ < 0	592:23:16931:16949	5309776	0	True				
ANR	5309928	RelationalExpression	decimal_point ++ < 0		5309776	0		<			
ANR	5309929	PostIncDecOperationExpression	decimal_point ++		5309776	0					
ANR	5309930	Identifier	decimal_point		5309776	0					
ANR	5309931	IncDec	++		5309776	1					
ANR	5309932	PrimaryExpression	0		5309776	1					
ANR	5309933	ExpressionStatement	* s ++ = '0'	593:20:16972:16982	5309776	1	True				
ANR	5309934	AssignmentExpression	* s ++ = '0'		5309776	0		=			
ANR	5309935	UnaryOperationExpression	* s ++		5309776	0					
ANR	5309936	UnaryOperator	*		5309776	0					
ANR	5309937	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5309938	Identifier	s		5309776	0					
ANR	5309939	IncDec	++		5309776	1					
ANR	5309940	PrimaryExpression	'0'		5309776	1					
ANR	5309941	ElseStatement	else		5309776	0					
ANR	5309942	IfStatement	if ( add_dp )		5309776	0					
ANR	5309943	Condition	add_dp	595:21:17019:17024	5309776	0	True				
ANR	5309944	Identifier	add_dp		5309776	0					
ANR	5309945	ExpressionStatement	* s ++ = '.'	596:16:17043:17053	5309776	1	True				
ANR	5309946	AssignmentExpression	* s ++ = '.'		5309776	0		=			
ANR	5309947	UnaryOperationExpression	* s ++		5309776	0					
ANR	5309948	UnaryOperator	*		5309776	0					
ANR	5309949	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5309950	Identifier	s		5309776	0					
ANR	5309951	IncDec	++		5309776	1					
ANR	5309952	PrimaryExpression	'.'		5309776	1					
ANR	5309953	ElseStatement	else		5309776	0					
ANR	5309954	CompoundStatement		33:13:815:815	5309776	0					
ANR	5309955	WhileStatement	while ( decimal_point -- > 0 )		5309776	0					
ANR	5309956	Condition	decimal_point -- > 0	599:19:17099:17117	5309776	0	True				
ANR	5309957	RelationalExpression	decimal_point -- > 0		5309776	0		>			
ANR	5309958	PostIncDecOperationExpression	decimal_point --		5309776	0					
ANR	5309959	Identifier	decimal_point		5309776	0					
ANR	5309960	IncDec	--		5309776	1					
ANR	5309961	PrimaryExpression	0		5309776	1					
ANR	5309962	ExpressionStatement	* s ++ = * p ++	600:16:17136:17147	5309776	1	True				
ANR	5309963	AssignmentExpression	* s ++ = * p ++		5309776	0		=			
ANR	5309964	UnaryOperationExpression	* s ++		5309776	0					
ANR	5309965	UnaryOperator	*		5309776	0					
ANR	5309966	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5309967	Identifier	s		5309776	0					
ANR	5309968	IncDec	++		5309776	1					
ANR	5309969	UnaryOperationExpression	* p ++		5309776	1					
ANR	5309970	UnaryOperator	*		5309776	0					
ANR	5309971	PostIncDecOperationExpression	p ++		5309776	1					
ANR	5309972	Identifier	p		5309776	0					
ANR	5309973	IncDec	++		5309776	1					
ANR	5309974	IfStatement	if ( precision > 0 || add_dp )		5309776	1					
ANR	5309975	Condition	precision > 0 || add_dp	601:16:17165:17187	5309776	0	True				
ANR	5309976	OrExpression	precision > 0 || add_dp		5309776	0		||			
ANR	5309977	RelationalExpression	precision > 0		5309776	0		>			
ANR	5309978	Identifier	precision		5309776	0					
ANR	5309979	PrimaryExpression	0		5309776	1					
ANR	5309980	Identifier	add_dp		5309776	1					
ANR	5309981	ExpressionStatement	* s ++ = '.'	602:16:17206:17216	5309776	1	True				
ANR	5309982	AssignmentExpression	* s ++ = '.'		5309776	0		=			
ANR	5309983	UnaryOperationExpression	* s ++		5309776	0					
ANR	5309984	UnaryOperator	*		5309776	0					
ANR	5309985	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5309986	Identifier	s		5309776	0					
ANR	5309987	IncDec	++		5309776	1					
ANR	5309988	PrimaryExpression	'.'		5309776	1					
ANR	5309989	ElseStatement	else		5309776	0					
ANR	5309990	CompoundStatement		40:9:980:980	5309776	0					
ANR	5309991	ExpressionStatement	* s ++ = * p ++	606:8:17253:17264	5309776	0	True				
ANR	5309992	AssignmentExpression	* s ++ = * p ++		5309776	0		=			
ANR	5309993	UnaryOperationExpression	* s ++		5309776	0					
ANR	5309994	UnaryOperator	*		5309776	0					
ANR	5309995	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5309996	Identifier	s		5309776	0					
ANR	5309997	IncDec	++		5309776	1					
ANR	5309998	UnaryOperationExpression	* p ++		5309776	1					
ANR	5309999	UnaryOperator	*		5309776	0					
ANR	5310000	PostIncDecOperationExpression	p ++		5309776	1					
ANR	5310001	Identifier	p		5309776	0					
ANR	5310002	IncDec	++		5309776	1					
ANR	5310003	IfStatement	if ( precision > 0 || add_dp )		5309776	1					
ANR	5310004	Condition	precision > 0 || add_dp	607:12:17278:17300	5309776	0	True				
ANR	5310005	OrExpression	precision > 0 || add_dp		5309776	0		||			
ANR	5310006	RelationalExpression	precision > 0		5309776	0		>			
ANR	5310007	Identifier	precision		5309776	0					
ANR	5310008	PrimaryExpression	0		5309776	1					
ANR	5310009	Identifier	add_dp		5309776	1					
ANR	5310010	ExpressionStatement	* s ++ = '.'	608:12:17315:17325	5309776	1	True				
ANR	5310011	AssignmentExpression	* s ++ = '.'		5309776	0		=			
ANR	5310012	UnaryOperationExpression	* s ++		5309776	0					
ANR	5310013	UnaryOperator	*		5309776	0					
ANR	5310014	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5310015	Identifier	s		5309776	0					
ANR	5310016	IncDec	++		5309776	1					
ANR	5310017	PrimaryExpression	'.'		5309776	1					
ANR	5310018	WhileStatement	while ( * p )		5309776	9					
ANR	5310019	Condition	* p	614:11:17409:17410	5309776	0	True				
ANR	5310020	UnaryOperationExpression	* p		5309776	0					
ANR	5310021	UnaryOperator	*		5309776	0					
ANR	5310022	Identifier	p		5309776	1					
ANR	5310023	ExpressionStatement	* s ++ = * p ++	615:8:17421:17432	5309776	1	True				
ANR	5310024	AssignmentExpression	* s ++ = * p ++		5309776	0		=			
ANR	5310025	UnaryOperationExpression	* s ++		5309776	0					
ANR	5310026	UnaryOperator	*		5309776	0					
ANR	5310027	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5310028	Identifier	s		5309776	0					
ANR	5310029	IncDec	++		5309776	1					
ANR	5310030	UnaryOperationExpression	* p ++		5309776	1					
ANR	5310031	UnaryOperator	*		5309776	0					
ANR	5310032	PostIncDecOperationExpression	p ++		5309776	1					
ANR	5310033	Identifier	p		5309776	0					
ANR	5310034	IncDec	++		5309776	1					
ANR	5310035	IfStatement	if ( format != 'f' )		5309776	10					
ANR	5310036	Condition	format != 'f'	617:8:17443:17455	5309776	0	True				
ANR	5310037	EqualityExpression	format != 'f'		5309776	0		!=			
ANR	5310038	Identifier	format		5309776	0					
ANR	5310039	PrimaryExpression	'f'		5309776	1					
ANR	5310040	CompoundStatement		55:8:1304:1328	5309776	1					
ANR	5310041	IdentifierDeclStatement	char temp [ EXPONENT_LENGTH ] ;	618:8:17468:17494	5309776	0	True				
ANR	5310042	IdentifierDecl	temp [ EXPONENT_LENGTH ]		5309776	0					
ANR	5310043	IdentifierDeclType	char [ EXPONENT_LENGTH ]		5309776	0					
ANR	5310044	Identifier	temp		5309776	1					
ANR	5310045	Identifier	EXPONENT_LENGTH		5309776	2					
ANR	5310046	IdentifierDeclStatement	apr_size_t t_len ;	619:8:17541:17557	5309776	1	True				
ANR	5310047	IdentifierDecl	t_len		5309776	0					
ANR	5310048	IdentifierDeclType	apr_size_t		5309776	0					
ANR	5310049	Identifier	t_len		5309776	1					
ANR	5310050	IdentifierDeclStatement	int exponent_is_negative ;	620:8:17567:17591	5309776	2	True				
ANR	5310051	IdentifierDecl	exponent_is_negative		5309776	0					
ANR	5310052	IdentifierDeclType	int		5309776	0					
ANR	5310053	Identifier	exponent_is_negative		5309776	1					
ANR	5310054	ExpressionStatement	* s ++ = format	622:8:17602:17615	5309776	3	True				
ANR	5310055	AssignmentExpression	* s ++ = format		5309776	0		=			
ANR	5310056	UnaryOperationExpression	* s ++		5309776	0					
ANR	5310057	UnaryOperator	*		5309776	0					
ANR	5310058	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5310059	Identifier	s		5309776	0					
ANR	5310060	IncDec	++		5309776	1					
ANR	5310061	Identifier	format		5309776	1					
ANR	5310062	ExpressionStatement	decimal_point --	623:8:17660:17675	5309776	4	True				
ANR	5310063	PostIncDecOperationExpression	decimal_point --		5309776	0					
ANR	5310064	Identifier	decimal_point		5309776	0					
ANR	5310065	IncDec	--		5309776	1					
ANR	5310066	IfStatement	if ( decimal_point != 0 )		5309776	5					
ANR	5310067	Condition	decimal_point != 0	624:12:17689:17706	5309776	0	True				
ANR	5310068	EqualityExpression	decimal_point != 0		5309776	0		!=			
ANR	5310069	Identifier	decimal_point		5309776	0					
ANR	5310070	PrimaryExpression	0		5309776	1					
ANR	5310071	CompoundStatement		59:32:1446:1446	5309776	1					
ANR	5310072	ExpressionStatement	"p = conv_10 ( ( apr_int32_t ) decimal_point , FALSE , & exponent_is_negative , & temp [ EXPONENT_LENGTH ] , & t_len )"	625:12:17723:17849	5309776	0	True				
ANR	5310073	AssignmentExpression	"p = conv_10 ( ( apr_int32_t ) decimal_point , FALSE , & exponent_is_negative , & temp [ EXPONENT_LENGTH ] , & t_len )"		5309776	0		=			
ANR	5310074	Identifier	p		5309776	0					
ANR	5310075	CallExpression	"conv_10 ( ( apr_int32_t ) decimal_point , FALSE , & exponent_is_negative , & temp [ EXPONENT_LENGTH ] , & t_len )"		5309776	1					
ANR	5310076	Callee	conv_10		5309776	0					
ANR	5310077	Identifier	conv_10		5309776	0					
ANR	5310078	ArgumentList	( apr_int32_t ) decimal_point		5309776	1					
ANR	5310079	Argument	( apr_int32_t ) decimal_point		5309776	0					
ANR	5310080	CastExpression	( apr_int32_t ) decimal_point		5309776	0					
ANR	5310081	CastTarget	apr_int32_t		5309776	0					
ANR	5310082	Identifier	decimal_point		5309776	1					
ANR	5310083	Argument	FALSE		5309776	1					
ANR	5310084	Identifier	FALSE		5309776	0					
ANR	5310085	Argument	& exponent_is_negative		5309776	2					
ANR	5310086	UnaryOperationExpression	& exponent_is_negative		5309776	0					
ANR	5310087	UnaryOperator	&		5309776	0					
ANR	5310088	Identifier	exponent_is_negative		5309776	1					
ANR	5310089	Argument	& temp [ EXPONENT_LENGTH ]		5309776	3					
ANR	5310090	UnaryOperationExpression	& temp [ EXPONENT_LENGTH ]		5309776	0					
ANR	5310091	UnaryOperator	&		5309776	0					
ANR	5310092	ArrayIndexing	temp [ EXPONENT_LENGTH ]		5309776	1					
ANR	5310093	Identifier	temp		5309776	0					
ANR	5310094	Identifier	EXPONENT_LENGTH		5309776	1					
ANR	5310095	Argument	& t_len		5309776	4					
ANR	5310096	UnaryOperationExpression	& t_len		5309776	0					
ANR	5310097	UnaryOperator	&		5309776	0					
ANR	5310098	Identifier	t_len		5309776	1					
ANR	5310099	ExpressionStatement	* s ++ = exponent_is_negative ? '-' : '+'	627:12:17863:17902	5309776	1	True				
ANR	5310100	AssignmentExpression	* s ++ = exponent_is_negative ? '-' : '+'		5309776	0		=			
ANR	5310101	UnaryOperationExpression	* s ++		5309776	0					
ANR	5310102	UnaryOperator	*		5309776	0					
ANR	5310103	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5310104	Identifier	s		5309776	0					
ANR	5310105	IncDec	++		5309776	1					
ANR	5310106	ConditionalExpression	exponent_is_negative ? '-' : '+'		5309776	1					
ANR	5310107	Condition	exponent_is_negative		5309776	0					
ANR	5310108	Identifier	exponent_is_negative		5309776	0					
ANR	5310109	PrimaryExpression	'-'		5309776	1					
ANR	5310110	PrimaryExpression	'+'		5309776	2					
ANR	5310111	IfStatement	if ( t_len == 1 )		5309776	2					
ANR	5310112	Condition	t_len == 1	632:16:18012:18021	5309776	0	True				
ANR	5310113	EqualityExpression	t_len == 1		5309776	0		==			
ANR	5310114	Identifier	t_len		5309776	0					
ANR	5310115	PrimaryExpression	1		5309776	1					
ANR	5310116	ExpressionStatement	* s ++ = '0'	633:16:18040:18050	5309776	1	True				
ANR	5310117	AssignmentExpression	* s ++ = '0'		5309776	0		=			
ANR	5310118	UnaryOperationExpression	* s ++		5309776	0					
ANR	5310119	UnaryOperator	*		5309776	0					
ANR	5310120	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5310121	Identifier	s		5309776	0					
ANR	5310122	IncDec	++		5309776	1					
ANR	5310123	PrimaryExpression	'0'		5309776	1					
ANR	5310124	WhileStatement	while ( t_len -- )		5309776	3					
ANR	5310125	Condition	t_len --	634:19:18071:18077	5309776	0	True				
ANR	5310126	PostIncDecOperationExpression	t_len --		5309776	0					
ANR	5310127	Identifier	t_len		5309776	0					
ANR	5310128	IncDec	--		5309776	1					
ANR	5310129	ExpressionStatement	* s ++ = * p ++	635:16:18096:18107	5309776	1	True				
ANR	5310130	AssignmentExpression	* s ++ = * p ++		5309776	0		=			
ANR	5310131	UnaryOperationExpression	* s ++		5309776	0					
ANR	5310132	UnaryOperator	*		5309776	0					
ANR	5310133	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5310134	Identifier	s		5309776	0					
ANR	5310135	IncDec	++		5309776	1					
ANR	5310136	UnaryOperationExpression	* p ++		5309776	1					
ANR	5310137	UnaryOperator	*		5309776	0					
ANR	5310138	PostIncDecOperationExpression	p ++		5309776	1					
ANR	5310139	Identifier	p		5309776	0					
ANR	5310140	IncDec	++		5309776	1					
ANR	5310141	ElseStatement	else		5309776	0					
ANR	5310142	CompoundStatement		72:13:1869:1869	5309776	0					
ANR	5310143	ExpressionStatement	* s ++ = '+'	638:12:18146:18156	5309776	0	True				
ANR	5310144	AssignmentExpression	* s ++ = '+'		5309776	0		=			
ANR	5310145	UnaryOperationExpression	* s ++		5309776	0					
ANR	5310146	UnaryOperator	*		5309776	0					
ANR	5310147	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5310148	Identifier	s		5309776	0					
ANR	5310149	IncDec	++		5309776	1					
ANR	5310150	PrimaryExpression	'+'		5309776	1					
ANR	5310151	ExpressionStatement	* s ++ = '0'	639:12:18170:18180	5309776	1	True				
ANR	5310152	AssignmentExpression	* s ++ = '0'		5309776	0		=			
ANR	5310153	UnaryOperationExpression	* s ++		5309776	0					
ANR	5310154	UnaryOperator	*		5309776	0					
ANR	5310155	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5310156	Identifier	s		5309776	0					
ANR	5310157	IncDec	++		5309776	1					
ANR	5310158	PrimaryExpression	'0'		5309776	1					
ANR	5310159	ExpressionStatement	* s ++ = '0'	640:12:18194:18204	5309776	2	True				
ANR	5310160	AssignmentExpression	* s ++ = '0'		5309776	0		=			
ANR	5310161	UnaryOperationExpression	* s ++		5309776	0					
ANR	5310162	UnaryOperator	*		5309776	0					
ANR	5310163	PostIncDecOperationExpression	s ++		5309776	1					
ANR	5310164	Identifier	s		5309776	0					
ANR	5310165	IncDec	++		5309776	1					
ANR	5310166	PrimaryExpression	'0'		5309776	1					
ANR	5310167	ExpressionStatement	* len = s - buf	644:4:18227:18241	5309776	11	True				
ANR	5310168	AssignmentExpression	* len = s - buf		5309776	0		=			
ANR	5310169	UnaryOperationExpression	* len		5309776	0					
ANR	5310170	UnaryOperator	*		5309776	0					
ANR	5310171	Identifier	len		5309776	1					
ANR	5310172	AdditiveExpression	s - buf		5309776	1		-			
ANR	5310173	Identifier	s		5309776	0					
ANR	5310174	Identifier	buf		5309776	1					
ANR	5310175	ReturnStatement	return ( buf ) ;	645:4:18247:18259	5309776	12	True				
ANR	5310176	Identifier	buf		5309776	0					
ANR	5310177	ReturnType	static char *		5309776	1					
ANR	5310178	Identifier	conv_fp		5309776	2					
ANR	5310179	ParameterList	"register char format , register double num , boolean_e add_dp , int precision , int * is_negative , char * buf , apr_size_t * len"		5309776	3					
ANR	5310180	Parameter	register char format	563:21:16132:16151	5309776	0	True				
ANR	5310181	ParameterType	register char		5309776	0					
ANR	5310182	Identifier	format		5309776	1					
ANR	5310183	Parameter	register double num	563:43:16154:16172	5309776	1	True				
ANR	5310184	ParameterType	register double		5309776	0					
ANR	5310185	Identifier	num		5309776	1					
ANR	5310186	Parameter	boolean_e add_dp	564:4:16179:16194	5309776	2	True				
ANR	5310187	ParameterType	boolean_e		5309776	0					
ANR	5310188	Identifier	add_dp		5309776	1					
ANR	5310189	Parameter	int precision	564:22:16197:16209	5309776	3	True				
ANR	5310190	ParameterType	int		5309776	0					
ANR	5310191	Identifier	precision		5309776	1					
ANR	5310192	Parameter	int * is_negative	564:37:16212:16227	5309776	4	True				
ANR	5310193	ParameterType	int *		5309776	0					
ANR	5310194	Identifier	is_negative		5309776	1					
ANR	5310195	Parameter	char * buf	565:4:16234:16242	5309776	5	True				
ANR	5310196	ParameterType	char *		5309776	0					
ANR	5310197	Identifier	buf		5309776	1					
ANR	5310198	Parameter	apr_size_t * len	565:15:16245:16259	5309776	6	True				
ANR	5310199	ParameterType	apr_size_t *		5309776	0					
ANR	5310200	Identifier	len		5309776	1					
ANR	5310201	CFGEntryNode	ENTRY		5309776		True				
ANR	5310202	CFGExitNode	EXIT		5309776		True				
ANR	5310203	Symbol	* s ++		5309776						
ANR	5310204	Symbol	& exponent_is_negative		5309776						
ANR	5310205	Symbol	decimal_point		5309776						
ANR	5310206	Symbol	t_len		5309776						
ANR	5310207	Symbol	exponent_is_negative		5309776						
ANR	5310208	Symbol	apr_ecvt		5309776						
ANR	5310209	Symbol	num		5309776						
ANR	5310210	Symbol	precision		5309776						
ANR	5310211	Symbol	& t_len		5309776						
ANR	5310212	Symbol	strlen		5309776						
ANR	5310213	Symbol	len		5309776						
ANR	5310214	Symbol	& decimal_point		5309776						
ANR	5310215	Symbol	EXPONENT_LENGTH		5309776						
ANR	5310216	Symbol	add_dp		5309776						
ANR	5310217	Symbol	apr_isalpha		5309776						
ANR	5310218	Symbol	temp		5309776						
ANR	5310219	Symbol	* p ++		5309776						
ANR	5310220	Symbol	format		5309776						
ANR	5310221	Symbol	apr_fcvt		5309776						
ANR	5310222	Symbol	p		5309776						
ANR	5310223	Symbol	buf1		5309776						
ANR	5310224	Symbol	buf		5309776						
ANR	5310225	Symbol	s		5309776						
ANR	5310226	Symbol	* p		5309776						
ANR	5310227	Symbol	FALSE		5309776						
ANR	5310228	Symbol	is_negative		5309776						
ANR	5310229	Symbol	conv_10		5309776						
ANR	5310230	Symbol	* len		5309776						
ANR	5310231	Symbol	* is_negative		5309776						
ANR	5310232	Function	conv_p2	662:0:18785:19331							
ANR	5310233	FunctionDef	"conv_p2 (register apr_uint32_t num , register int nbits , char format , char * buf_end , register apr_size_t * len)"		5310232	0					
ANR	5310234	CompoundStatement		664:0:18928:19331	5310232	0					
ANR	5310235	Statement	register	665:4:18934:18941	5310232	0	True				
ANR	5310236	IdentifierDeclStatement	int mask = ( 1 << nbits ) - 1 ;	665:13:18943:18970	5310232	1	True				
ANR	5310237	IdentifierDecl	mask = ( 1 << nbits ) - 1		5310232	0					
ANR	5310238	IdentifierDeclType	int		5310232	0					
ANR	5310239	Identifier	mask		5310232	1					
ANR	5310240	AssignmentExpression	mask = ( 1 << nbits ) - 1		5310232	2		=			
ANR	5310241	Identifier	mask		5310232	0					
ANR	5310242	AdditiveExpression	( 1 << nbits ) - 1		5310232	1		-			
ANR	5310243	ShiftExpression	1 << nbits		5310232	0		<<			
ANR	5310244	PrimaryExpression	1		5310232	0					
ANR	5310245	Identifier	nbits		5310232	1					
ANR	5310246	PrimaryExpression	1		5310232	1					
ANR	5310247	Statement	register	666:4:18976:18983	5310232	2	True				
ANR	5310248	IdentifierDeclStatement	char * p = buf_end ;	666:13:18985:19002	5310232	3	True				
ANR	5310249	IdentifierDecl	* p = buf_end		5310232	0					
ANR	5310250	IdentifierDeclType	char *		5310232	0					
ANR	5310251	Identifier	p		5310232	1					
ANR	5310252	AssignmentExpression	* p = buf_end		5310232	2		=			
ANR	5310253	Identifier	buf_end		5310232	0					
ANR	5310254	Identifier	buf_end		5310232	1					
ANR	5310255	Statement	static	667:4:19008:19013	5310232	4	True				
ANR	5310256	IdentifierDeclStatement	"const char low_digits [ ] = ""0123456789abcdef"" ;"	667:11:19015:19059	5310232	5	True				
ANR	5310257	IdentifierDecl	"low_digits [ ] = ""0123456789abcdef"""		5310232	0					
ANR	5310258	IdentifierDeclType	const char [ ]		5310232	0					
ANR	5310259	Identifier	low_digits		5310232	1					
ANR	5310260	AssignmentExpression	"low_digits [ ] = ""0123456789abcdef"""		5310232	2		=			
ANR	5310261	Identifier	low_digits		5310232	0					
ANR	5310262	PrimaryExpression	"""0123456789abcdef"""		5310232	1					
ANR	5310263	Statement	static	668:4:19065:19070	5310232	6	True				
ANR	5310264	IdentifierDeclStatement	"const char upper_digits [ ] = ""0123456789ABCDEF"" ;"	668:11:19072:19118	5310232	7	True				
ANR	5310265	IdentifierDecl	"upper_digits [ ] = ""0123456789ABCDEF"""		5310232	0					
ANR	5310266	IdentifierDeclType	const char [ ]		5310232	0					
ANR	5310267	Identifier	upper_digits		5310232	1					
ANR	5310268	AssignmentExpression	"upper_digits [ ] = ""0123456789ABCDEF"""		5310232	2		=			
ANR	5310269	Identifier	upper_digits		5310232	0					
ANR	5310270	PrimaryExpression	"""0123456789ABCDEF"""		5310232	1					
ANR	5310271	Statement	register	669:4:19124:19131	5310232	8	True				
ANR	5310272	IdentifierDeclStatement	const char * digits = ( format == 'X' ) ? upper_digits : low_digits ;	669:13:19133:19197	5310232	9	True				
ANR	5310273	IdentifierDecl	* digits = ( format == 'X' ) ? upper_digits : low_digits		5310232	0					
ANR	5310274	IdentifierDeclType	const char *		5310232	0					
ANR	5310275	Identifier	digits		5310232	1					
ANR	5310276	AssignmentExpression	* digits = ( format == 'X' ) ? upper_digits : low_digits		5310232	2		=			
ANR	5310277	Identifier	digits		5310232	0					
ANR	5310278	ConditionalExpression	( format == 'X' ) ? upper_digits : low_digits		5310232	1					
ANR	5310279	Condition	format == 'X'		5310232	0					
ANR	5310280	EqualityExpression	format == 'X'		5310232	0		==			
ANR	5310281	Identifier	format		5310232	0					
ANR	5310282	PrimaryExpression	'X'		5310232	1					
ANR	5310283	Identifier	upper_digits		5310232	1					
ANR	5310284	Identifier	low_digits		5310232	2					
ANR	5310285	DoStatement	do		5310232	10					
ANR	5310286	CompoundStatement		8:7:278:278	5310232	0					
ANR	5310287	ExpressionStatement	* -- p = digits [ num & mask ]	672:8:19217:19242	5310232	0	True				
ANR	5310288	AssignmentExpression	* -- p = digits [ num & mask ]		5310232	0		=			
ANR	5310289	UnaryOperationExpression	* -- p		5310232	0					
ANR	5310290	UnaryOperator	*		5310232	0					
ANR	5310291	UnaryExpression	-- p		5310232	1					
ANR	5310292	IncDec	--		5310232	0					
ANR	5310293	Identifier	p		5310232	1					
ANR	5310294	ArrayIndexing	digits [ num & mask ]		5310232	1					
ANR	5310295	Identifier	digits		5310232	0					
ANR	5310296	BitAndExpression	num & mask		5310232	1		&			
ANR	5310297	Identifier	num		5310232	0					
ANR	5310298	Identifier	mask		5310232	1					
ANR	5310299	ExpressionStatement	num >>= nbits	673:8:19252:19265	5310232	1	True				
ANR	5310300	AssignmentExpression	num >>= nbits		5310232	0		>>=			
ANR	5310301	Identifier	num		5310232	0					
ANR	5310302	Identifier	nbits		5310232	1					
ANR	5310303	Condition	num	675:11:19284:19286	5310232	1	True				
ANR	5310304	Identifier	num		5310232	0					
ANR	5310305	ExpressionStatement	* len = buf_end - p	677:4:19295:19313	5310232	11	True				
ANR	5310306	AssignmentExpression	* len = buf_end - p		5310232	0		=			
ANR	5310307	UnaryOperationExpression	* len		5310232	0					
ANR	5310308	UnaryOperator	*		5310232	0					
ANR	5310309	Identifier	len		5310232	1					
ANR	5310310	AdditiveExpression	buf_end - p		5310232	1		-			
ANR	5310311	Identifier	buf_end		5310232	0					
ANR	5310312	Identifier	p		5310232	1					
ANR	5310313	ReturnStatement	return ( p ) ;	678:4:19319:19329	5310232	12	True				
ANR	5310314	Identifier	p		5310232	0					
ANR	5310315	ReturnType	static char *		5310232	1					
ANR	5310316	Identifier	conv_p2		5310232	2					
ANR	5310317	ParameterList	"register apr_uint32_t num , register int nbits , char format , char * buf_end , register apr_size_t * len"		5310232	3					
ANR	5310318	Parameter	register apr_uint32_t num	662:21:18806:18830	5310232	0	True				
ANR	5310319	ParameterType	register apr_uint32_t		5310232	0					
ANR	5310320	Identifier	num		5310232	1					
ANR	5310321	Parameter	register int nbits	662:48:18833:18850	5310232	1	True				
ANR	5310322	ParameterType	register int		5310232	0					
ANR	5310323	Identifier	nbits		5310232	1					
ANR	5310324	Parameter	char format	663:21:18874:18884	5310232	2	True				
ANR	5310325	ParameterType	char		5310232	0					
ANR	5310326	Identifier	format		5310232	1					
ANR	5310327	Parameter	char * buf_end	663:34:18887:18899	5310232	3	True				
ANR	5310328	ParameterType	char *		5310232	0					
ANR	5310329	Identifier	buf_end		5310232	1					
ANR	5310330	Parameter	register apr_size_t * len	663:49:18902:18925	5310232	4	True				
ANR	5310331	ParameterType	register apr_size_t *		5310232	0					
ANR	5310332	Identifier	len		5310232	1					
ANR	5310333	CFGEntryNode	ENTRY		5310232		True				
ANR	5310334	CFGExitNode	EXIT		5310232		True				
ANR	5310335	Symbol	* mask		5310232						
ANR	5310336	Symbol	* -- p		5310232						
ANR	5310337	Symbol	num		5310232						
ANR	5310338	Symbol	nbits		5310232						
ANR	5310339	Symbol	format		5310232						
ANR	5310340	Symbol	* digits		5310232						
ANR	5310341	Symbol	p		5310232						
ANR	5310342	Symbol	* num		5310232						
ANR	5310343	Symbol	low_digits		5310232						
ANR	5310344	Symbol	upper_digits		5310232						
ANR	5310345	Symbol	len		5310232						
ANR	5310346	Symbol	digits		5310232						
ANR	5310347	Symbol	* p		5310232						
ANR	5310348	Symbol	buf_end		5310232						
ANR	5310349	Symbol	mask		5310232						
ANR	5310350	Symbol	* len		5310232						
ANR	5310351	Function	conv_p2_quad	681:0:19334:19981							
ANR	5310352	FunctionDef	"conv_p2_quad (apr_uint64_t num , register int nbits , char format , char * buf_end , register apr_size_t * len)"		5310351	0					
ANR	5310353	CompoundStatement		683:0:19473:19981	5310351	0					
ANR	5310354	Statement	register	684:4:19479:19486	5310351	0	True				
ANR	5310355	IdentifierDeclStatement	int mask = ( 1 << nbits ) - 1 ;	684:13:19488:19515	5310351	1	True				
ANR	5310356	IdentifierDecl	mask = ( 1 << nbits ) - 1		5310351	0					
ANR	5310357	IdentifierDeclType	int		5310351	0					
ANR	5310358	Identifier	mask		5310351	1					
ANR	5310359	AssignmentExpression	mask = ( 1 << nbits ) - 1		5310351	2		=			
ANR	5310360	Identifier	mask		5310351	0					
ANR	5310361	AdditiveExpression	( 1 << nbits ) - 1		5310351	1		-			
ANR	5310362	ShiftExpression	1 << nbits		5310351	0		<<			
ANR	5310363	PrimaryExpression	1		5310351	0					
ANR	5310364	Identifier	nbits		5310351	1					
ANR	5310365	PrimaryExpression	1		5310351	1					
ANR	5310366	Statement	register	685:4:19521:19528	5310351	2	True				
ANR	5310367	IdentifierDeclStatement	char * p = buf_end ;	685:13:19530:19547	5310351	3	True				
ANR	5310368	IdentifierDecl	* p = buf_end		5310351	0					
ANR	5310369	IdentifierDeclType	char *		5310351	0					
ANR	5310370	Identifier	p		5310351	1					
ANR	5310371	AssignmentExpression	* p = buf_end		5310351	2		=			
ANR	5310372	Identifier	buf_end		5310351	0					
ANR	5310373	Identifier	buf_end		5310351	1					
ANR	5310374	Statement	static	686:4:19553:19558	5310351	4	True				
ANR	5310375	IdentifierDeclStatement	"const char low_digits [ ] = ""0123456789abcdef"" ;"	686:11:19560:19604	5310351	5	True				
ANR	5310376	IdentifierDecl	"low_digits [ ] = ""0123456789abcdef"""		5310351	0					
ANR	5310377	IdentifierDeclType	const char [ ]		5310351	0					
ANR	5310378	Identifier	low_digits		5310351	1					
ANR	5310379	AssignmentExpression	"low_digits [ ] = ""0123456789abcdef"""		5310351	2		=			
ANR	5310380	Identifier	low_digits		5310351	0					
ANR	5310381	PrimaryExpression	"""0123456789abcdef"""		5310351	1					
ANR	5310382	Statement	static	687:4:19610:19615	5310351	6	True				
ANR	5310383	IdentifierDeclStatement	"const char upper_digits [ ] = ""0123456789ABCDEF"" ;"	687:11:19617:19663	5310351	7	True				
ANR	5310384	IdentifierDecl	"upper_digits [ ] = ""0123456789ABCDEF"""		5310351	0					
ANR	5310385	IdentifierDeclType	const char [ ]		5310351	0					
ANR	5310386	Identifier	upper_digits		5310351	1					
ANR	5310387	AssignmentExpression	"upper_digits [ ] = ""0123456789ABCDEF"""		5310351	2		=			
ANR	5310388	Identifier	upper_digits		5310351	0					
ANR	5310389	PrimaryExpression	"""0123456789ABCDEF"""		5310351	1					
ANR	5310390	Statement	register	688:4:19669:19676	5310351	8	True				
ANR	5310391	IdentifierDeclStatement	const char * digits = ( format == 'X' ) ? upper_digits : low_digits ;	688:13:19678:19742	5310351	9	True				
ANR	5310392	IdentifierDecl	* digits = ( format == 'X' ) ? upper_digits : low_digits		5310351	0					
ANR	5310393	IdentifierDeclType	const char *		5310351	0					
ANR	5310394	Identifier	digits		5310351	1					
ANR	5310395	AssignmentExpression	* digits = ( format == 'X' ) ? upper_digits : low_digits		5310351	2		=			
ANR	5310396	Identifier	digits		5310351	0					
ANR	5310397	ConditionalExpression	( format == 'X' ) ? upper_digits : low_digits		5310351	1					
ANR	5310398	Condition	format == 'X'		5310351	0					
ANR	5310399	EqualityExpression	format == 'X'		5310351	0		==			
ANR	5310400	Identifier	format		5310351	0					
ANR	5310401	PrimaryExpression	'X'		5310351	1					
ANR	5310402	Identifier	upper_digits		5310351	1					
ANR	5310403	Identifier	low_digits		5310351	2					
ANR	5310404	IfStatement	if ( num <= APR_UINT32_MAX )		5310351	10					
ANR	5310405	Condition	num <= APR_UINT32_MAX	690:8:19753:19773	5310351	0	True				
ANR	5310406	RelationalExpression	num <= APR_UINT32_MAX		5310351	0		<=			
ANR	5310407	Identifier	num		5310351	0					
ANR	5310408	Identifier	APR_UINT32_MAX		5310351	1					
ANR	5310409	ReturnStatement	"return ( conv_p2 ( ( apr_uint32_t ) num , nbits , format , buf_end , len ) ) ;"	691:8:19784:19847	5310351	1	True				
ANR	5310410	CallExpression	"conv_p2 ( ( apr_uint32_t ) num , nbits , format , buf_end , len )"		5310351	0					
ANR	5310411	Callee	conv_p2		5310351	0					
ANR	5310412	Identifier	conv_p2		5310351	0					
ANR	5310413	ArgumentList	( apr_uint32_t ) num		5310351	1					
ANR	5310414	Argument	( apr_uint32_t ) num		5310351	0					
ANR	5310415	CastExpression	( apr_uint32_t ) num		5310351	0					
ANR	5310416	CastTarget	apr_uint32_t		5310351	0					
ANR	5310417	Identifier	num		5310351	1					
ANR	5310418	Argument	nbits		5310351	1					
ANR	5310419	Identifier	nbits		5310351	0					
ANR	5310420	Argument	format		5310351	2					
ANR	5310421	Identifier	format		5310351	0					
ANR	5310422	Argument	buf_end		5310351	3					
ANR	5310423	Identifier	buf_end		5310351	0					
ANR	5310424	Argument	len		5310351	4					
ANR	5310425	Identifier	len		5310351	0					
ANR	5310426	DoStatement	do		5310351	11					
ANR	5310427	CompoundStatement		11:7:383:383	5310351	0					
ANR	5310428	ExpressionStatement	* -- p = digits [ num & mask ]	694:8:19867:19892	5310351	0	True				
ANR	5310429	AssignmentExpression	* -- p = digits [ num & mask ]		5310351	0		=			
ANR	5310430	UnaryOperationExpression	* -- p		5310351	0					
ANR	5310431	UnaryOperator	*		5310351	0					
ANR	5310432	UnaryExpression	-- p		5310351	1					
ANR	5310433	IncDec	--		5310351	0					
ANR	5310434	Identifier	p		5310351	1					
ANR	5310435	ArrayIndexing	digits [ num & mask ]		5310351	1					
ANR	5310436	Identifier	digits		5310351	0					
ANR	5310437	BitAndExpression	num & mask		5310351	1		&			
ANR	5310438	Identifier	num		5310351	0					
ANR	5310439	Identifier	mask		5310351	1					
ANR	5310440	ExpressionStatement	num >>= nbits	695:8:19902:19915	5310351	1	True				
ANR	5310441	AssignmentExpression	num >>= nbits		5310351	0		>>=			
ANR	5310442	Identifier	num		5310351	0					
ANR	5310443	Identifier	nbits		5310351	1					
ANR	5310444	Condition	num	697:11:19934:19936	5310351	1	True				
ANR	5310445	Identifier	num		5310351	0					
ANR	5310446	ExpressionStatement	* len = buf_end - p	699:4:19945:19963	5310351	12	True				
ANR	5310447	AssignmentExpression	* len = buf_end - p		5310351	0		=			
ANR	5310448	UnaryOperationExpression	* len		5310351	0					
ANR	5310449	UnaryOperator	*		5310351	0					
ANR	5310450	Identifier	len		5310351	1					
ANR	5310451	AdditiveExpression	buf_end - p		5310351	1		-			
ANR	5310452	Identifier	buf_end		5310351	0					
ANR	5310453	Identifier	p		5310351	1					
ANR	5310454	ReturnStatement	return ( p ) ;	700:4:19969:19979	5310351	13	True				
ANR	5310455	Identifier	p		5310351	0					
ANR	5310456	ReturnType	static char *		5310351	1					
ANR	5310457	Identifier	conv_p2_quad		5310351	2					
ANR	5310458	ParameterList	"apr_uint64_t num , register int nbits , char format , char * buf_end , register apr_size_t * len"		5310351	3					
ANR	5310459	Parameter	apr_uint64_t num	681:26:19360:19375	5310351	0	True				
ANR	5310460	ParameterType	apr_uint64_t		5310351	0					
ANR	5310461	Identifier	num		5310351	1					
ANR	5310462	Parameter	register int nbits	681:44:19378:19395	5310351	1	True				
ANR	5310463	ParameterType	register int		5310351	0					
ANR	5310464	Identifier	nbits		5310351	1					
ANR	5310465	Parameter	char format	682:21:19419:19429	5310351	2	True				
ANR	5310466	ParameterType	char		5310351	0					
ANR	5310467	Identifier	format		5310351	1					
ANR	5310468	Parameter	char * buf_end	682:34:19432:19444	5310351	3	True				
ANR	5310469	ParameterType	char *		5310351	0					
ANR	5310470	Identifier	buf_end		5310351	1					
ANR	5310471	Parameter	register apr_size_t * len	682:49:19447:19470	5310351	4	True				
ANR	5310472	ParameterType	register apr_size_t *		5310351	0					
ANR	5310473	Identifier	len		5310351	1					
ANR	5310474	CFGEntryNode	ENTRY		5310351		True				
ANR	5310475	CFGExitNode	EXIT		5310351		True				
ANR	5310476	Symbol	* mask		5310351						
ANR	5310477	Symbol	* -- p		5310351						
ANR	5310478	Symbol	num		5310351						
ANR	5310479	Symbol	nbits		5310351						
ANR	5310480	Symbol	format		5310351						
ANR	5310481	Symbol	* digits		5310351						
ANR	5310482	Symbol	p		5310351						
ANR	5310483	Symbol	* num		5310351						
ANR	5310484	Symbol	low_digits		5310351						
ANR	5310485	Symbol	upper_digits		5310351						
ANR	5310486	Symbol	APR_UINT32_MAX		5310351						
ANR	5310487	Symbol	len		5310351						
ANR	5310488	Symbol	conv_p2		5310351						
ANR	5310489	Symbol	digits		5310351						
ANR	5310490	Symbol	* p		5310351						
ANR	5310491	Symbol	buf_end		5310351						
ANR	5310492	Symbol	mask		5310351						
ANR	5310493	Symbol	* len		5310351						
ANR	5310494	Function	conv_os_thread_t_hex	704:0:20004:20568							
ANR	5310495	FunctionDef	"conv_os_thread_t_hex (apr_os_thread_t * tid , char * buf_end , apr_size_t * len)"		5310494	0					
ANR	5310496	CompoundStatement		705:0:20092:20568	5310494	0					
ANR	5310497	ClassDefStatement	union { apr_os_thread_t tid ; apr_uint64_t u64 ; apr_uint32_t u32 ; } u ;	706:4:20098:20194	5310494	0	True				
ANR	5310498	IdentifierDecl	u		5310494	0					
ANR	5310499	IdentifierDeclType			5310494	0					
ANR	5310500	Identifier	u		5310494	1					
ANR	5310501	IdentifierDeclStatement	int is_negative ;	711:4:20200:20215	5310494	1	True				
ANR	5310502	IdentifierDecl	is_negative		5310494	0					
ANR	5310503	IdentifierDeclType	int		5310494	0					
ANR	5310504	Identifier	is_negative		5310494	1					
ANR	5310505	ExpressionStatement	u . tid = * tid	713:4:20222:20234	5310494	2	True				
ANR	5310506	AssignmentExpression	u . tid = * tid		5310494	0		=			
ANR	5310507	MemberAccess	u . tid		5310494	0					
ANR	5310508	Identifier	u		5310494	0					
ANR	5310509	Identifier	tid		5310494	1					
ANR	5310510	UnaryOperationExpression	* tid		5310494	1					
ANR	5310511	UnaryOperator	*		5310494	0					
ANR	5310512	Identifier	tid		5310494	1					
ANR	5310513	SwitchStatement	switch ( sizeof ( u . tid ) )		5310494	3					
ANR	5310514	Condition	sizeof ( u . tid )	714:11:20247:20259	5310494	0	True				
ANR	5310515	SizeofExpression	sizeof ( u . tid )		5310494	0					
ANR	5310516	Sizeof	sizeof		5310494	0					
ANR	5310517	MemberAccess	u . tid		5310494	1					
ANR	5310518	Identifier	u		5310494	0					
ANR	5310519	Identifier	tid		5310494	1					
ANR	5310520	CompoundStatement		10:26:169:169	5310494	1					
ANR	5310521	Statement	case	715:4:20268:20271	5310494	0	True				
ANR	5310522	Statement	sizeof	715:9:20273:20278	5310494	1	True				
ANR	5310523	Statement	(	715:15:20279:20279	5310494	2	True				
ANR	5310524	Statement	apr_int32_t	715:16:20280:20290	5310494	3	True				
ANR	5310525	Statement	)	715:27:20291:20291	5310494	4	True				
ANR	5310526	Statement	:	715:28:20292:20292	5310494	5	True				
ANR	5310527	ReturnStatement	"return conv_p2 ( u . u32 , 4 , 'x' , buf_end , len ) ;"	716:8:20302:20345	5310494	6	True				
ANR	5310528	CallExpression	"conv_p2 ( u . u32 , 4 , 'x' , buf_end , len )"		5310494	0					
ANR	5310529	Callee	conv_p2		5310494	0					
ANR	5310530	Identifier	conv_p2		5310494	0					
ANR	5310531	ArgumentList	u . u32		5310494	1					
ANR	5310532	Argument	u . u32		5310494	0					
ANR	5310533	MemberAccess	u . u32		5310494	0					
ANR	5310534	Identifier	u		5310494	0					
ANR	5310535	Identifier	u32		5310494	1					
ANR	5310536	Argument	4		5310494	1					
ANR	5310537	PrimaryExpression	4		5310494	0					
ANR	5310538	Argument	'x'		5310494	2					
ANR	5310539	PrimaryExpression	'x'		5310494	0					
ANR	5310540	Argument	buf_end		5310494	3					
ANR	5310541	Identifier	buf_end		5310494	0					
ANR	5310542	Argument	len		5310494	4					
ANR	5310543	Identifier	len		5310494	0					
ANR	5310544	Statement	case	717:4:20351:20354	5310494	7	True				
ANR	5310545	Statement	sizeof	717:9:20356:20361	5310494	8	True				
ANR	5310546	Statement	(	717:15:20362:20362	5310494	9	True				
ANR	5310547	Statement	apr_int64_t	717:16:20363:20373	5310494	10	True				
ANR	5310548	Statement	)	717:27:20374:20374	5310494	11	True				
ANR	5310549	Statement	:	717:28:20375:20375	5310494	12	True				
ANR	5310550	ReturnStatement	"return conv_p2_quad ( u . u64 , 4 , 'x' , buf_end , len ) ;"	718:8:20385:20433	5310494	13	True				
ANR	5310551	CallExpression	"conv_p2_quad ( u . u64 , 4 , 'x' , buf_end , len )"		5310494	0					
ANR	5310552	Callee	conv_p2_quad		5310494	0					
ANR	5310553	Identifier	conv_p2_quad		5310494	0					
ANR	5310554	ArgumentList	u . u64		5310494	1					
ANR	5310555	Argument	u . u64		5310494	0					
ANR	5310556	MemberAccess	u . u64		5310494	0					
ANR	5310557	Identifier	u		5310494	0					
ANR	5310558	Identifier	u64		5310494	1					
ANR	5310559	Argument	4		5310494	1					
ANR	5310560	PrimaryExpression	4		5310494	0					
ANR	5310561	Argument	'x'		5310494	2					
ANR	5310562	PrimaryExpression	'x'		5310494	0					
ANR	5310563	Argument	buf_end		5310494	3					
ANR	5310564	Identifier	buf_end		5310494	0					
ANR	5310565	Argument	len		5310494	4					
ANR	5310566	Identifier	len		5310494	0					
ANR	5310567	Label	default :	719:4:20439:20446	5310494	14	True				
ANR	5310568	Identifier	default		5310494	0					
ANR	5310569	ReturnStatement	"return conv_10 ( 0 , TRUE , & is_negative , buf_end , len ) ;"	721:8:20509:20560	5310494	15	True				
ANR	5310570	CallExpression	"conv_10 ( 0 , TRUE , & is_negative , buf_end , len )"		5310494	0					
ANR	5310571	Callee	conv_10		5310494	0					
ANR	5310572	Identifier	conv_10		5310494	0					
ANR	5310573	ArgumentList	0		5310494	1					
ANR	5310574	Argument	0		5310494	0					
ANR	5310575	PrimaryExpression	0		5310494	0					
ANR	5310576	Argument	TRUE		5310494	1					
ANR	5310577	Identifier	TRUE		5310494	0					
ANR	5310578	Argument	& is_negative		5310494	2					
ANR	5310579	UnaryOperationExpression	& is_negative		5310494	0					
ANR	5310580	UnaryOperator	&		5310494	0					
ANR	5310581	Identifier	is_negative		5310494	1					
ANR	5310582	Argument	buf_end		5310494	3					
ANR	5310583	Identifier	buf_end		5310494	0					
ANR	5310584	Argument	len		5310494	4					
ANR	5310585	Identifier	len		5310494	0					
ANR	5310586	ReturnType	static char *		5310494	1					
ANR	5310587	Identifier	conv_os_thread_t_hex		5310494	2					
ANR	5310588	ParameterList	"apr_os_thread_t * tid , char * buf_end , apr_size_t * len"		5310494	3					
ANR	5310589	Parameter	apr_os_thread_t * tid	704:34:20038:20057	5310494	0	True				
ANR	5310590	ParameterType	apr_os_thread_t *		5310494	0					
ANR	5310591	Identifier	tid		5310494	1					
ANR	5310592	Parameter	char * buf_end	704:56:20060:20072	5310494	1	True				
ANR	5310593	ParameterType	char *		5310494	0					
ANR	5310594	Identifier	buf_end		5310494	1					
ANR	5310595	Parameter	apr_size_t * len	704:71:20075:20089	5310494	2	True				
ANR	5310596	ParameterType	apr_size_t *		5310494	0					
ANR	5310597	Identifier	len		5310494	1					
ANR	5310598	CFGEntryNode	ENTRY		5310494		True				
ANR	5310599	CFGExitNode	EXIT		5310494		True				
ANR	5310600	Symbol	TRUE		5310494						
ANR	5310601	Symbol	tid		5310494						
ANR	5310602	Symbol	& is_negative		5310494						
ANR	5310603	Symbol	len		5310494						
ANR	5310604	Symbol	u		5310494						
ANR	5310605	Symbol	conv_p2		5310494						
ANR	5310606	Symbol	conv_p2_quad		5310494						
ANR	5310607	Symbol	* tid		5310494						
ANR	5310608	Symbol	u . u64		5310494						
ANR	5310609	Symbol	u . u32		5310494						
ANR	5310610	Symbol	buf_end		5310494						
ANR	5310611	Symbol	is_negative		5310494						
ANR	5310612	Symbol	conv_10		5310494						
ANR	5310613	Symbol	u . tid		5310494						
ANR	5310614	Function	apr_vformatter	729:0:20638:45122							
ANR	5310615	FunctionDef	"apr_vformatter (int ( * flush_func ) ( apr_vformatter_buff_t * ) , apr_vformatter_buff_t * vbuff , const char * fmt , va_list ap)"		5310614	0					
ANR	5310616	CompoundStatement		731:0:20771:45122	5310614	0					
ANR	5310617	Statement	register	732:4:20777:20784	5310614	0	True				
ANR	5310618	IdentifierDeclStatement	char * sp ;	732:13:20786:20794	5310614	1	True				
ANR	5310619	IdentifierDecl	* sp		5310614	0					
ANR	5310620	IdentifierDeclType	char *		5310614	0					
ANR	5310621	Identifier	sp		5310614	1					
ANR	5310622	Statement	register	733:4:20800:20807	5310614	2	True				
ANR	5310623	IdentifierDeclStatement	char * bep ;	733:13:20809:20818	5310614	3	True				
ANR	5310624	IdentifierDecl	* bep		5310614	0					
ANR	5310625	IdentifierDeclType	char *		5310614	0					
ANR	5310626	Identifier	bep		5310614	1					
ANR	5310627	Statement	register	734:4:20824:20831	5310614	4	True				
ANR	5310628	IdentifierDeclStatement	int cc = 0 ;	734:13:20833:20843	5310614	5	True				
ANR	5310629	IdentifierDecl	cc = 0		5310614	0					
ANR	5310630	IdentifierDeclType	int		5310614	0					
ANR	5310631	Identifier	cc		5310614	1					
ANR	5310632	AssignmentExpression	cc = 0		5310614	2		=			
ANR	5310633	Identifier	cc		5310614	0					
ANR	5310634	PrimaryExpression	0		5310614	1					
ANR	5310635	Statement	register	735:4:20849:20856	5310614	6	True				
ANR	5310636	IdentifierDeclStatement	apr_size_t i ;	735:13:20858:20870	5310614	7	True				
ANR	5310637	IdentifierDecl	i		5310614	0					
ANR	5310638	IdentifierDeclType	apr_size_t		5310614	0					
ANR	5310639	Identifier	i		5310614	1					
ANR	5310640	Statement	register	737:4:20877:20884	5310614	8	True				
ANR	5310641	IdentifierDeclStatement	char * s = NULL ;	737:13:20886:20900	5310614	9	True				
ANR	5310642	IdentifierDecl	* s = NULL		5310614	0					
ANR	5310643	IdentifierDeclType	char *		5310614	0					
ANR	5310644	Identifier	s		5310614	1					
ANR	5310645	AssignmentExpression	* s = NULL		5310614	2		=			
ANR	5310646	Identifier	NULL		5310614	0					
ANR	5310647	Identifier	NULL		5310614	1					
ANR	5310648	IdentifierDeclStatement	char * q ;	738:4:20906:20913	5310614	10	True				
ANR	5310649	IdentifierDecl	* q		5310614	0					
ANR	5310650	IdentifierDeclType	char *		5310614	0					
ANR	5310651	Identifier	q		5310614	1					
ANR	5310652	IdentifierDeclStatement	apr_size_t s_len = 0 ;	739:4:20919:20939	5310614	11	True				
ANR	5310653	IdentifierDecl	s_len = 0		5310614	0					
ANR	5310654	IdentifierDeclType	apr_size_t		5310614	0					
ANR	5310655	Identifier	s_len		5310614	1					
ANR	5310656	AssignmentExpression	s_len = 0		5310614	2		=			
ANR	5310657	Identifier	s_len		5310614	0					
ANR	5310658	PrimaryExpression	0		5310614	1					
ANR	5310659	Statement	register	741:4:20946:20953	5310614	12	True				
ANR	5310660	IdentifierDeclStatement	apr_size_t min_width = 0 ;	741:13:20955:20979	5310614	13	True				
ANR	5310661	IdentifierDecl	min_width = 0		5310614	0					
ANR	5310662	IdentifierDeclType	apr_size_t		5310614	0					
ANR	5310663	Identifier	min_width		5310614	1					
ANR	5310664	AssignmentExpression	min_width = 0		5310614	2		=			
ANR	5310665	Identifier	min_width		5310614	0					
ANR	5310666	PrimaryExpression	0		5310614	1					
ANR	5310667	IdentifierDeclStatement	apr_size_t precision = 0 ;	742:4:20985:21009	5310614	14	True				
ANR	5310668	IdentifierDecl	precision = 0		5310614	0					
ANR	5310669	IdentifierDeclType	apr_size_t		5310614	0					
ANR	5310670	Identifier	precision		5310614	1					
ANR	5310671	AssignmentExpression	precision = 0		5310614	2		=			
ANR	5310672	Identifier	precision		5310614	0					
ANR	5310673	PrimaryExpression	0		5310614	1					
ANR	5310674	ClassDefStatement	"enum { LEFT , RIGHT } adjust ;"	743:4:21015:21054	5310614	15	True				
ANR	5310675	IdentifierDecl	adjust		5310614	0					
ANR	5310676	IdentifierDeclType			5310614	0					
ANR	5310677	Identifier	adjust		5310614	1					
ANR	5310678	IdentifierDeclStatement	char pad_char ;	746:4:21060:21073	5310614	16	True				
ANR	5310679	IdentifierDecl	pad_char		5310614	0					
ANR	5310680	IdentifierDeclType	char		5310614	0					
ANR	5310681	Identifier	pad_char		5310614	1					
ANR	5310682	IdentifierDeclStatement	char prefix_char ;	747:4:21079:21095	5310614	17	True				
ANR	5310683	IdentifierDecl	prefix_char		5310614	0					
ANR	5310684	IdentifierDeclType	char		5310614	0					
ANR	5310685	Identifier	prefix_char		5310614	1					
ANR	5310686	IdentifierDeclStatement	double fp_num ;	749:4:21102:21115	5310614	18	True				
ANR	5310687	IdentifierDecl	fp_num		5310614	0					
ANR	5310688	IdentifierDeclType	double		5310614	0					
ANR	5310689	Identifier	fp_num		5310614	1					
ANR	5310690	IdentifierDeclStatement	apr_int64_t i_quad = 0 ;	750:4:21121:21143	5310614	19	True				
ANR	5310691	IdentifierDecl	i_quad = 0		5310614	0					
ANR	5310692	IdentifierDeclType	apr_int64_t		5310614	0					
ANR	5310693	Identifier	i_quad		5310614	1					
ANR	5310694	AssignmentExpression	i_quad = 0		5310614	2		=			
ANR	5310695	Identifier	i_quad		5310614	0					
ANR	5310696	PrimaryExpression	0		5310614	1					
ANR	5310697	IdentifierDeclStatement	apr_uint64_t ui_quad ;	751:4:21149:21169	5310614	20	True				
ANR	5310698	IdentifierDecl	ui_quad		5310614	0					
ANR	5310699	IdentifierDeclType	apr_uint64_t		5310614	0					
ANR	5310700	Identifier	ui_quad		5310614	1					
ANR	5310701	IdentifierDeclStatement	apr_int32_t i_num = 0 ;	752:4:21175:21196	5310614	21	True				
ANR	5310702	IdentifierDecl	i_num = 0		5310614	0					
ANR	5310703	IdentifierDeclType	apr_int32_t		5310614	0					
ANR	5310704	Identifier	i_num		5310614	1					
ANR	5310705	AssignmentExpression	i_num = 0		5310614	2		=			
ANR	5310706	Identifier	i_num		5310614	0					
ANR	5310707	PrimaryExpression	0		5310614	1					
ANR	5310708	IdentifierDeclStatement	apr_uint32_t ui_num = 0 ;	753:4:21202:21225	5310614	22	True				
ANR	5310709	IdentifierDecl	ui_num = 0		5310614	0					
ANR	5310710	IdentifierDeclType	apr_uint32_t		5310614	0					
ANR	5310711	Identifier	ui_num		5310614	1					
ANR	5310712	AssignmentExpression	ui_num = 0		5310614	2		=			
ANR	5310713	Identifier	ui_num		5310614	0					
ANR	5310714	PrimaryExpression	0		5310614	1					
ANR	5310715	IdentifierDeclStatement	char num_buf [ NUM_BUF_SIZE ] ;	755:4:21232:21258	5310614	23	True				
ANR	5310716	IdentifierDecl	num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5310717	IdentifierDeclType	char [ NUM_BUF_SIZE ]		5310614	0					
ANR	5310718	Identifier	num_buf		5310614	1					
ANR	5310719	Identifier	NUM_BUF_SIZE		5310614	2					
ANR	5310720	IdentifierDeclStatement	char char_buf [ 2 ] ;	756:4:21264:21280	5310614	24	True				
ANR	5310721	IdentifierDecl	char_buf [ 2 ]		5310614	0					
ANR	5310722	IdentifierDeclType	char [ 2 ]		5310614	0					
ANR	5310723	Identifier	char_buf		5310614	1					
ANR	5310724	PrimaryExpression	2		5310614	2					
ANR	5310725	IdentifierDeclStatement	"char inf [ ] = ""#INF"" ;"	757:4:21338:21357	5310614	25	True				
ANR	5310726	IdentifierDecl	"inf [ ] = ""#INF"""		5310614	0					
ANR	5310727	IdentifierDeclType	char [ ]		5310614	0					
ANR	5310728	Identifier	inf		5310614	1					
ANR	5310729	AssignmentExpression	"inf [ ] = ""#INF"""		5310614	2		=			
ANR	5310730	Identifier	inf		5310614	0					
ANR	5310731	PrimaryExpression	"""#INF"""		5310614	1					
ANR	5310732	IdentifierDeclStatement	"char nan [ ] = ""#NAN"" ;"	758:4:21363:21382	5310614	26	True				
ANR	5310733	IdentifierDecl	"nan [ ] = ""#NAN"""		5310614	0					
ANR	5310734	IdentifierDeclType	char [ ]		5310614	0					
ANR	5310735	Identifier	nan		5310614	1					
ANR	5310736	AssignmentExpression	"nan [ ] = ""#NAN"""		5310614	2		=			
ANR	5310737	Identifier	nan		5310614	0					
ANR	5310738	PrimaryExpression	"""#NAN"""		5310614	1					
ANR	5310739	ClassDefStatement	"enum var_type_enum { IS_QUAD , IS_LONG , IS_SHORT , IS_INT }"	760:4:21389:21461	5310614	27	True				
ANR	5310740	Identifier	var_type_enum		5310614	0					
ANR	5310741	ExpressionStatement		762:5:21462:21462	5310614	28	True				
ANR	5310742	IdentifierDeclStatement	enum var_type_enum var_type = IS_INT ;	763:4:21468:21504	5310614	29	True				
ANR	5310743	IdentifierDecl	var_type = IS_INT		5310614	0					
ANR	5310744	IdentifierDeclType	enum var_type_enum		5310614	0					
ANR	5310745	Identifier	var_type		5310614	1					
ANR	5310746	AssignmentExpression	var_type = IS_INT		5310614	2		=			
ANR	5310747	Identifier	IS_INT		5310614	0					
ANR	5310748	Identifier	IS_INT		5310614	1					
ANR	5310749	IdentifierDeclStatement	boolean_e alternate_form ;	768:4:21548:21572	5310614	30	True				
ANR	5310750	IdentifierDecl	alternate_form		5310614	0					
ANR	5310751	IdentifierDeclType	boolean_e		5310614	0					
ANR	5310752	Identifier	alternate_form		5310614	1					
ANR	5310753	IdentifierDeclStatement	boolean_e print_sign ;	769:4:21578:21598	5310614	31	True				
ANR	5310754	IdentifierDecl	print_sign		5310614	0					
ANR	5310755	IdentifierDeclType	boolean_e		5310614	0					
ANR	5310756	Identifier	print_sign		5310614	1					
ANR	5310757	IdentifierDeclStatement	boolean_e print_blank ;	770:4:21604:21625	5310614	32	True				
ANR	5310758	IdentifierDecl	print_blank		5310614	0					
ANR	5310759	IdentifierDeclType	boolean_e		5310614	0					
ANR	5310760	Identifier	print_blank		5310614	1					
ANR	5310761	IdentifierDeclStatement	boolean_e adjust_precision ;	771:4:21631:21657	5310614	33	True				
ANR	5310762	IdentifierDecl	adjust_precision		5310614	0					
ANR	5310763	IdentifierDeclType	boolean_e		5310614	0					
ANR	5310764	Identifier	adjust_precision		5310614	1					
ANR	5310765	IdentifierDeclStatement	boolean_e adjust_width ;	772:4:21663:21685	5310614	34	True				
ANR	5310766	IdentifierDecl	adjust_width		5310614	0					
ANR	5310767	IdentifierDeclType	boolean_e		5310614	0					
ANR	5310768	Identifier	adjust_width		5310614	1					
ANR	5310769	IdentifierDeclStatement	int is_negative ;	773:4:21691:21706	5310614	35	True				
ANR	5310770	IdentifierDecl	is_negative		5310614	0					
ANR	5310771	IdentifierDeclType	int		5310614	0					
ANR	5310772	Identifier	is_negative		5310614	1					
ANR	5310773	ExpressionStatement	sp = vbuff -> curpos	775:4:21713:21731	5310614	36	True				
ANR	5310774	AssignmentExpression	sp = vbuff -> curpos		5310614	0		=			
ANR	5310775	Identifier	sp		5310614	0					
ANR	5310776	PtrMemberAccess	vbuff -> curpos		5310614	1					
ANR	5310777	Identifier	vbuff		5310614	0					
ANR	5310778	Identifier	curpos		5310614	1					
ANR	5310779	ExpressionStatement	bep = vbuff -> endpos	776:4:21737:21756	5310614	37	True				
ANR	5310780	AssignmentExpression	bep = vbuff -> endpos		5310614	0		=			
ANR	5310781	Identifier	bep		5310614	0					
ANR	5310782	PtrMemberAccess	vbuff -> endpos		5310614	1					
ANR	5310783	Identifier	vbuff		5310614	0					
ANR	5310784	Identifier	endpos		5310614	1					
ANR	5310785	WhileStatement	while ( * fmt )		5310614	38					
ANR	5310786	Condition	* fmt	778:11:21770:21773	5310614	0	True				
ANR	5310787	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310788	UnaryOperator	*		5310614	0					
ANR	5310789	Identifier	fmt		5310614	1					
ANR	5310790	CompoundStatement		48:17:1004:1004	5310614	1					
ANR	5310791	IfStatement	if ( * fmt != '%' )		5310614	0					
ANR	5310792	Condition	* fmt != '%'	779:12:21790:21800	5310614	0	True				
ANR	5310793	EqualityExpression	* fmt != '%'		5310614	0		!=			
ANR	5310794	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310795	UnaryOperator	*		5310614	0					
ANR	5310796	Identifier	fmt		5310614	1					
ANR	5310797	PrimaryExpression	'%'		5310614	1					
ANR	5310798	CompoundStatement		49:25:1031:1031	5310614	1					
ANR	5310799	ExpressionStatement	"INS_CHAR ( * fmt , sp , bep , cc )"	780:12:21817:21844	5310614	0	True				
ANR	5310800	CallExpression	"INS_CHAR ( * fmt , sp , bep , cc )"		5310614	0					
ANR	5310801	Callee	INS_CHAR		5310614	0					
ANR	5310802	Identifier	INS_CHAR		5310614	0					
ANR	5310803	ArgumentList	* fmt		5310614	1					
ANR	5310804	Argument	* fmt		5310614	0					
ANR	5310805	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310806	UnaryOperator	*		5310614	0					
ANR	5310807	Identifier	fmt		5310614	1					
ANR	5310808	Argument	sp		5310614	1					
ANR	5310809	Identifier	sp		5310614	0					
ANR	5310810	Argument	bep		5310614	2					
ANR	5310811	Identifier	bep		5310614	0					
ANR	5310812	Argument	cc		5310614	3					
ANR	5310813	Identifier	cc		5310614	0					
ANR	5310814	ElseStatement	else		5310614	0					
ANR	5310815	CompoundStatement		56:12:1183:1214	5310614	0					
ANR	5310816	IdentifierDeclStatement	boolean_e print_something = YES ;	786:12:21955:21986	5310614	0	True				
ANR	5310817	IdentifierDecl	print_something = YES		5310614	0					
ANR	5310818	IdentifierDeclType	boolean_e		5310614	0					
ANR	5310819	Identifier	print_something		5310614	1					
ANR	5310820	AssignmentExpression	print_something = YES		5310614	2		=			
ANR	5310821	Identifier	YES		5310614	0					
ANR	5310822	Identifier	YES		5310614	1					
ANR	5310823	ExpressionStatement	adjust = RIGHT	787:12:22000:22014	5310614	1	True				
ANR	5310824	AssignmentExpression	adjust = RIGHT		5310614	0		=			
ANR	5310825	Identifier	adjust		5310614	0					
ANR	5310826	Identifier	RIGHT		5310614	1					
ANR	5310827	ExpressionStatement	alternate_form = print_sign = print_blank = NO	788:12:22028:22074	5310614	2	True				
ANR	5310828	AssignmentExpression	alternate_form = print_sign = print_blank = NO		5310614	0		=			
ANR	5310829	Identifier	alternate_form		5310614	0					
ANR	5310830	AssignmentExpression	print_sign = print_blank = NO		5310614	1		=			
ANR	5310831	Identifier	print_sign		5310614	0					
ANR	5310832	AssignmentExpression	print_blank = NO		5310614	1		=			
ANR	5310833	Identifier	print_blank		5310614	0					
ANR	5310834	Identifier	NO		5310614	1					
ANR	5310835	ExpressionStatement	pad_char = ' '	789:12:22088:22102	5310614	3	True				
ANR	5310836	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5310837	Identifier	pad_char		5310614	0					
ANR	5310838	PrimaryExpression	' '		5310614	1					
ANR	5310839	ExpressionStatement	prefix_char = NUL	790:12:22116:22133	5310614	4	True				
ANR	5310840	AssignmentExpression	prefix_char = NUL		5310614	0		=			
ANR	5310841	Identifier	prefix_char		5310614	0					
ANR	5310842	Identifier	NUL		5310614	1					
ANR	5310843	ExpressionStatement	fmt ++	792:12:22148:22153	5310614	5	True				
ANR	5310844	PostIncDecOperationExpression	fmt ++		5310614	0					
ANR	5310845	Identifier	fmt		5310614	0					
ANR	5310846	IncDec	++		5310614	1					
ANR	5310847	IfStatement	if ( ! apr_islower ( * fmt ) )		5310614	6					
ANR	5310848	Condition	! apr_islower ( * fmt )	797:16:22270:22287	5310614	0	True				
ANR	5310849	UnaryOperationExpression	! apr_islower ( * fmt )		5310614	0					
ANR	5310850	UnaryOperator	!		5310614	0					
ANR	5310851	CallExpression	apr_islower ( * fmt )		5310614	1					
ANR	5310852	Callee	apr_islower		5310614	0					
ANR	5310853	Identifier	apr_islower		5310614	0					
ANR	5310854	ArgumentList	* fmt		5310614	1					
ANR	5310855	Argument	* fmt		5310614	0					
ANR	5310856	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310857	UnaryOperator	*		5310614	0					
ANR	5310858	Identifier	fmt		5310614	1					
ANR	5310859	CompoundStatement		67:36:1518:1518	5310614	1					
ANR	5310860	ForStatement	for ( ; ; fmt ++ )		5310614	0					
ANR	5310861	PostIncDecOperationExpression	fmt ++	801:24:22406:22410	5310614	0	True				
ANR	5310862	Identifier	fmt		5310614	0					
ANR	5310863	IncDec	++		5310614	1					
ANR	5310864	CompoundStatement		71:31:1641:1641	5310614	1					
ANR	5310865	IfStatement	if ( * fmt == '-' )		5310614	0					
ANR	5310866	Condition	* fmt == '-'	802:24:22439:22449	5310614	0	True				
ANR	5310867	EqualityExpression	* fmt == '-'		5310614	0		==			
ANR	5310868	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310869	UnaryOperator	*		5310614	0					
ANR	5310870	Identifier	fmt		5310614	1					
ANR	5310871	PrimaryExpression	'-'		5310614	1					
ANR	5310872	ExpressionStatement	adjust = LEFT	803:24:22476:22489	5310614	1	True				
ANR	5310873	AssignmentExpression	adjust = LEFT		5310614	0		=			
ANR	5310874	Identifier	adjust		5310614	0					
ANR	5310875	Identifier	LEFT		5310614	1					
ANR	5310876	ElseStatement	else		5310614	0					
ANR	5310877	IfStatement	if ( * fmt == '+' )		5310614	0					
ANR	5310878	Condition	* fmt == '+'	804:29:22520:22530	5310614	0	True				
ANR	5310879	EqualityExpression	* fmt == '+'		5310614	0		==			
ANR	5310880	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310881	UnaryOperator	*		5310614	0					
ANR	5310882	Identifier	fmt		5310614	1					
ANR	5310883	PrimaryExpression	'+'		5310614	1					
ANR	5310884	ExpressionStatement	print_sign = YES	805:24:22557:22573	5310614	1	True				
ANR	5310885	AssignmentExpression	print_sign = YES		5310614	0		=			
ANR	5310886	Identifier	print_sign		5310614	0					
ANR	5310887	Identifier	YES		5310614	1					
ANR	5310888	ElseStatement	else		5310614	0					
ANR	5310889	IfStatement	if ( * fmt == '#' )		5310614	0					
ANR	5310890	Condition	* fmt == '#'	806:29:22604:22614	5310614	0	True				
ANR	5310891	EqualityExpression	* fmt == '#'		5310614	0		==			
ANR	5310892	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310893	UnaryOperator	*		5310614	0					
ANR	5310894	Identifier	fmt		5310614	1					
ANR	5310895	PrimaryExpression	'#'		5310614	1					
ANR	5310896	ExpressionStatement	alternate_form = YES	807:24:22641:22661	5310614	1	True				
ANR	5310897	AssignmentExpression	alternate_form = YES		5310614	0		=			
ANR	5310898	Identifier	alternate_form		5310614	0					
ANR	5310899	Identifier	YES		5310614	1					
ANR	5310900	ElseStatement	else		5310614	0					
ANR	5310901	IfStatement	if ( * fmt == ' ' )		5310614	0					
ANR	5310902	Condition	* fmt == ' '	808:29:22692:22702	5310614	0	True				
ANR	5310903	EqualityExpression	* fmt == ' '		5310614	0		==			
ANR	5310904	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310905	UnaryOperator	*		5310614	0					
ANR	5310906	Identifier	fmt		5310614	1					
ANR	5310907	PrimaryExpression	' '		5310614	1					
ANR	5310908	ExpressionStatement	print_blank = YES	809:24:22729:22746	5310614	1	True				
ANR	5310909	AssignmentExpression	print_blank = YES		5310614	0		=			
ANR	5310910	Identifier	print_blank		5310614	0					
ANR	5310911	Identifier	YES		5310614	1					
ANR	5310912	ElseStatement	else		5310614	0					
ANR	5310913	IfStatement	if ( * fmt == '0' )		5310614	0					
ANR	5310914	Condition	* fmt == '0'	810:29:22777:22787	5310614	0	True				
ANR	5310915	EqualityExpression	* fmt == '0'		5310614	0		==			
ANR	5310916	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310917	UnaryOperator	*		5310614	0					
ANR	5310918	Identifier	fmt		5310614	1					
ANR	5310919	PrimaryExpression	'0'		5310614	1					
ANR	5310920	ExpressionStatement	pad_char = '0'	811:24:22814:22828	5310614	1	True				
ANR	5310921	AssignmentExpression	pad_char = '0'		5310614	0		=			
ANR	5310922	Identifier	pad_char		5310614	0					
ANR	5310923	PrimaryExpression	'0'		5310614	1					
ANR	5310924	ElseStatement	else		5310614	0					
ANR	5310925	BreakStatement	break ;	813:24:22879:22884	5310614	0	True				
ANR	5310926	IfStatement	if ( apr_isdigit ( * fmt ) )		5310614	1					
ANR	5310927	Condition	apr_isdigit ( * fmt )	819:20:23014:23030	5310614	0	True				
ANR	5310928	CallExpression	apr_isdigit ( * fmt )		5310614	0					
ANR	5310929	Callee	apr_isdigit		5310614	0					
ANR	5310930	Identifier	apr_isdigit		5310614	0					
ANR	5310931	ArgumentList	* fmt		5310614	1					
ANR	5310932	Argument	* fmt		5310614	0					
ANR	5310933	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310934	UnaryOperator	*		5310614	0					
ANR	5310935	Identifier	fmt		5310614	1					
ANR	5310936	CompoundStatement		89:39:2261:2261	5310614	1					
ANR	5310937	ExpressionStatement	"STR_TO_DEC ( fmt , min_width )"	820:20:23055:23081	5310614	0	True				
ANR	5310938	CallExpression	"STR_TO_DEC ( fmt , min_width )"		5310614	0					
ANR	5310939	Callee	STR_TO_DEC		5310614	0					
ANR	5310940	Identifier	STR_TO_DEC		5310614	0					
ANR	5310941	ArgumentList	fmt		5310614	1					
ANR	5310942	Argument	fmt		5310614	0					
ANR	5310943	Identifier	fmt		5310614	0					
ANR	5310944	Argument	min_width		5310614	1					
ANR	5310945	Identifier	min_width		5310614	0					
ANR	5310946	ExpressionStatement	adjust_width = YES	821:20:23103:23121	5310614	1	True				
ANR	5310947	AssignmentExpression	adjust_width = YES		5310614	0		=			
ANR	5310948	Identifier	adjust_width		5310614	0					
ANR	5310949	Identifier	YES		5310614	1					
ANR	5310950	ElseStatement	else		5310614	0					
ANR	5310951	IfStatement	if ( * fmt == '*' )		5310614	0					
ANR	5310952	Condition	* fmt == '*'	823:25:23166:23176	5310614	0	True				
ANR	5310953	EqualityExpression	* fmt == '*'		5310614	0		==			
ANR	5310954	UnaryOperationExpression	* fmt		5310614	0					
ANR	5310955	UnaryOperator	*		5310614	0					
ANR	5310956	Identifier	fmt		5310614	1					
ANR	5310957	PrimaryExpression	'*'		5310614	1					
ANR	5310958	CompoundStatement		94:20:2429:2452	5310614	1					
ANR	5310959	IdentifierDeclStatement	"int v = va_arg ( ap , int ) ;"	824:20:23201:23224	5310614	0	True				
ANR	5310960	IdentifierDecl	"v = va_arg ( ap , int )"		5310614	0					
ANR	5310961	IdentifierDeclType	int		5310614	0					
ANR	5310962	Identifier	v		5310614	1					
ANR	5310963	AssignmentExpression	"v = va_arg ( ap , int )"		5310614	2		=			
ANR	5310964	Identifier	v		5310614	0					
ANR	5310965	CallExpression	"va_arg ( ap , int )"		5310614	1					
ANR	5310966	Callee	va_arg		5310614	0					
ANR	5310967	Identifier	va_arg		5310614	0					
ANR	5310968	ArgumentList	ap		5310614	1					
ANR	5310969	Argument	ap		5310614	0					
ANR	5310970	Identifier	ap		5310614	0					
ANR	5310971	Argument	int		5310614	1					
ANR	5310972	Identifier	int		5310614	0					
ANR	5310973	ExpressionStatement	fmt ++	825:20:23246:23251	5310614	1	True				
ANR	5310974	PostIncDecOperationExpression	fmt ++		5310614	0					
ANR	5310975	Identifier	fmt		5310614	0					
ANR	5310976	IncDec	++		5310614	1					
ANR	5310977	ExpressionStatement	adjust_width = YES	826:20:23273:23291	5310614	2	True				
ANR	5310978	AssignmentExpression	adjust_width = YES		5310614	0		=			
ANR	5310979	Identifier	adjust_width		5310614	0					
ANR	5310980	Identifier	YES		5310614	1					
ANR	5310981	IfStatement	if ( v < 0 )		5310614	3					
ANR	5310982	Condition	v < 0	827:24:23317:23321	5310614	0	True				
ANR	5310983	RelationalExpression	v < 0		5310614	0		<			
ANR	5310984	Identifier	v		5310614	0					
ANR	5310985	PrimaryExpression	0		5310614	1					
ANR	5310986	CompoundStatement		97:31:2552:2552	5310614	1					
ANR	5310987	ExpressionStatement	adjust = LEFT	828:24:23350:23363	5310614	0	True				
ANR	5310988	AssignmentExpression	adjust = LEFT		5310614	0		=			
ANR	5310989	Identifier	adjust		5310614	0					
ANR	5310990	Identifier	LEFT		5310614	1					
ANR	5310991	ExpressionStatement	min_width = ( apr_size_t ) ( - v )	829:24:23389:23417	5310614	1	True				
ANR	5310992	AssignmentExpression	min_width = ( apr_size_t ) ( - v )		5310614	0		=			
ANR	5310993	Identifier	min_width		5310614	0					
ANR	5310994	CastExpression	( apr_size_t ) ( - v )		5310614	1					
ANR	5310995	CastTarget	apr_size_t		5310614	0					
ANR	5310996	UnaryOperationExpression	- v		5310614	1					
ANR	5310997	UnaryOperator	-		5310614	0					
ANR	5310998	Identifier	v		5310614	1					
ANR	5310999	ElseStatement	else		5310614	0					
ANR	5311000	ExpressionStatement	min_width = ( apr_size_t ) v	832:24:23490:23515	5310614	0	True				
ANR	5311001	AssignmentExpression	min_width = ( apr_size_t ) v		5310614	0		=			
ANR	5311002	Identifier	min_width		5310614	0					
ANR	5311003	CastExpression	( apr_size_t ) v		5310614	1					
ANR	5311004	CastTarget	apr_size_t		5310614	0					
ANR	5311005	Identifier	v		5310614	1					
ANR	5311006	ElseStatement	else		5310614	0					
ANR	5311007	ExpressionStatement	adjust_width = NO	835:20:23576:23593	5310614	0	True				
ANR	5311008	AssignmentExpression	adjust_width = NO		5310614	0		=			
ANR	5311009	Identifier	adjust_width		5310614	0					
ANR	5311010	Identifier	NO		5310614	1					
ANR	5311011	IfStatement	if ( * fmt == '.' )		5310614	2					
ANR	5311012	Condition	* fmt == '.'	840:20:23709:23719	5310614	0	True				
ANR	5311013	EqualityExpression	* fmt == '.'		5310614	0		==			
ANR	5311014	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311015	UnaryOperator	*		5310614	0					
ANR	5311016	Identifier	fmt		5310614	1					
ANR	5311017	PrimaryExpression	'.'		5310614	1					
ANR	5311018	CompoundStatement		110:33:2950:2950	5310614	1					
ANR	5311019	ExpressionStatement	adjust_precision = YES	841:20:23744:23766	5310614	0	True				
ANR	5311020	AssignmentExpression	adjust_precision = YES		5310614	0		=			
ANR	5311021	Identifier	adjust_precision		5310614	0					
ANR	5311022	Identifier	YES		5310614	1					
ANR	5311023	ExpressionStatement	fmt ++	842:20:23788:23793	5310614	1	True				
ANR	5311024	PostIncDecOperationExpression	fmt ++		5310614	0					
ANR	5311025	Identifier	fmt		5310614	0					
ANR	5311026	IncDec	++		5310614	1					
ANR	5311027	IfStatement	if ( apr_isdigit ( * fmt ) )		5310614	2					
ANR	5311028	Condition	apr_isdigit ( * fmt )	843:24:23819:23835	5310614	0	True				
ANR	5311029	CallExpression	apr_isdigit ( * fmt )		5310614	0					
ANR	5311030	Callee	apr_isdigit		5310614	0					
ANR	5311031	Identifier	apr_isdigit		5310614	0					
ANR	5311032	ArgumentList	* fmt		5310614	1					
ANR	5311033	Argument	* fmt		5310614	0					
ANR	5311034	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311035	UnaryOperator	*		5310614	0					
ANR	5311036	Identifier	fmt		5310614	1					
ANR	5311037	CompoundStatement		113:43:3066:3066	5310614	1					
ANR	5311038	ExpressionStatement	"STR_TO_DEC ( fmt , precision )"	844:24:23864:23890	5310614	0	True				
ANR	5311039	CallExpression	"STR_TO_DEC ( fmt , precision )"		5310614	0					
ANR	5311040	Callee	STR_TO_DEC		5310614	0					
ANR	5311041	Identifier	STR_TO_DEC		5310614	0					
ANR	5311042	ArgumentList	fmt		5310614	1					
ANR	5311043	Argument	fmt		5310614	0					
ANR	5311044	Identifier	fmt		5310614	0					
ANR	5311045	Argument	precision		5310614	1					
ANR	5311046	Identifier	precision		5310614	0					
ANR	5311047	ElseStatement	else		5310614	0					
ANR	5311048	IfStatement	if ( * fmt == '*' )		5310614	0					
ANR	5311049	Condition	* fmt == '*'	846:29:23943:23953	5310614	0	True				
ANR	5311050	EqualityExpression	* fmt == '*'		5310614	0		==			
ANR	5311051	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311052	UnaryOperator	*		5310614	0					
ANR	5311053	Identifier	fmt		5310614	1					
ANR	5311054	PrimaryExpression	'*'		5310614	1					
ANR	5311055	CompoundStatement		117:24:3210:3233	5310614	1					
ANR	5311056	IdentifierDeclStatement	"int v = va_arg ( ap , int ) ;"	847:24:23982:24005	5310614	0	True				
ANR	5311057	IdentifierDecl	"v = va_arg ( ap , int )"		5310614	0					
ANR	5311058	IdentifierDeclType	int		5310614	0					
ANR	5311059	Identifier	v		5310614	1					
ANR	5311060	AssignmentExpression	"v = va_arg ( ap , int )"		5310614	2		=			
ANR	5311061	Identifier	v		5310614	0					
ANR	5311062	CallExpression	"va_arg ( ap , int )"		5310614	1					
ANR	5311063	Callee	va_arg		5310614	0					
ANR	5311064	Identifier	va_arg		5310614	0					
ANR	5311065	ArgumentList	ap		5310614	1					
ANR	5311066	Argument	ap		5310614	0					
ANR	5311067	Identifier	ap		5310614	0					
ANR	5311068	Argument	int		5310614	1					
ANR	5311069	Identifier	int		5310614	0					
ANR	5311070	ExpressionStatement	fmt ++	848:24:24031:24036	5310614	1	True				
ANR	5311071	PostIncDecOperationExpression	fmt ++		5310614	0					
ANR	5311072	Identifier	fmt		5310614	0					
ANR	5311073	IncDec	++		5310614	1					
ANR	5311074	ExpressionStatement	precision = ( v < 0 ) ? 0 : ( apr_size_t ) v	849:24:24062:24101	5310614	2	True				
ANR	5311075	AssignmentExpression	precision = ( v < 0 ) ? 0 : ( apr_size_t ) v		5310614	0		=			
ANR	5311076	Identifier	precision		5310614	0					
ANR	5311077	ConditionalExpression	( v < 0 ) ? 0 : ( apr_size_t ) v		5310614	1					
ANR	5311078	Condition	v < 0		5310614	0					
ANR	5311079	RelationalExpression	v < 0		5310614	0		<			
ANR	5311080	Identifier	v		5310614	0					
ANR	5311081	PrimaryExpression	0		5310614	1					
ANR	5311082	PrimaryExpression	0		5310614	1					
ANR	5311083	CastExpression	( apr_size_t ) v		5310614	2					
ANR	5311084	CastTarget	apr_size_t		5310614	0					
ANR	5311085	Identifier	v		5310614	1					
ANR	5311086	ElseStatement	else		5310614	0					
ANR	5311087	ExpressionStatement	precision = 0	852:24:24174:24187	5310614	0	True				
ANR	5311088	AssignmentExpression	precision = 0		5310614	0		=			
ANR	5311089	Identifier	precision		5310614	0					
ANR	5311090	PrimaryExpression	0		5310614	1					
ANR	5311091	ElseStatement	else		5310614	0					
ANR	5311092	ExpressionStatement	adjust_precision = NO	855:20:24248:24269	5310614	0	True				
ANR	5311093	AssignmentExpression	adjust_precision = NO		5310614	0		=			
ANR	5311094	Identifier	adjust_precision		5310614	0					
ANR	5311095	Identifier	NO		5310614	1					
ANR	5311096	ElseStatement	else		5310614	0					
ANR	5311097	ExpressionStatement	adjust_precision = adjust_width = NO	858:16:24318:24354	5310614	0	True				
ANR	5311098	AssignmentExpression	adjust_precision = adjust_width = NO		5310614	0		=			
ANR	5311099	Identifier	adjust_precision		5310614	0					
ANR	5311100	AssignmentExpression	adjust_width = NO		5310614	1		=			
ANR	5311101	Identifier	adjust_width		5310614	0					
ANR	5311102	Identifier	NO		5310614	1					
ANR	5311103	IfStatement	"if ( ( sizeof ( APR_OFF_T_FMT ) > sizeof ( APR_INT64_T_FMT ) ) && ( ( sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ] ) || ( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 ) ) )"		5310614	7					
ANR	5311104	Condition	"( sizeof ( APR_OFF_T_FMT ) > sizeof ( APR_INT64_T_FMT ) ) && ( ( sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ] ) || ( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 ) )"	868:16:24790:25229	5310614	0	True				
ANR	5311105	AndExpression	"( sizeof ( APR_OFF_T_FMT ) > sizeof ( APR_INT64_T_FMT ) ) && ( ( sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ] ) || ( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 ) )"		5310614	0		&&			
ANR	5311106	RelationalExpression	sizeof ( APR_OFF_T_FMT ) > sizeof ( APR_INT64_T_FMT )		5310614	0		>			
ANR	5311107	SizeofExpression	sizeof ( APR_OFF_T_FMT )		5310614	0					
ANR	5311108	Sizeof	sizeof		5310614	0					
ANR	5311109	SizeofOperand	APR_OFF_T_FMT		5310614	1					
ANR	5311110	SizeofExpression	sizeof ( APR_INT64_T_FMT )		5310614	1					
ANR	5311111	Sizeof	sizeof		5310614	0					
ANR	5311112	SizeofOperand	APR_INT64_T_FMT		5310614	1					
ANR	5311113	OrExpression	"( sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ] ) || ( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 )"		5310614	1		||			
ANR	5311114	AndExpression	sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ]		5310614	0		&&			
ANR	5311115	EqualityExpression	sizeof ( APR_OFF_T_FMT ) == 4		5310614	0		==			
ANR	5311116	SizeofExpression	sizeof ( APR_OFF_T_FMT )		5310614	0					
ANR	5311117	Sizeof	sizeof		5310614	0					
ANR	5311118	SizeofOperand	APR_OFF_T_FMT		5310614	1					
ANR	5311119	PrimaryExpression	4		5310614	1					
ANR	5311120	AndExpression	fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ]		5310614	1		&&			
ANR	5311121	EqualityExpression	fmt [ 0 ] == APR_OFF_T_FMT [ 0 ]		5310614	0		==			
ANR	5311122	ArrayIndexing	fmt [ 0 ]		5310614	0					
ANR	5311123	Identifier	fmt		5310614	0					
ANR	5311124	PrimaryExpression	0		5310614	1					
ANR	5311125	ArrayIndexing	APR_OFF_T_FMT [ 0 ]		5310614	1					
ANR	5311126	Identifier	APR_OFF_T_FMT		5310614	0					
ANR	5311127	PrimaryExpression	0		5310614	1					
ANR	5311128	EqualityExpression	fmt [ 1 ] == APR_OFF_T_FMT [ 1 ]		5310614	1		==			
ANR	5311129	ArrayIndexing	fmt [ 1 ]		5310614	0					
ANR	5311130	Identifier	fmt		5310614	0					
ANR	5311131	PrimaryExpression	1		5310614	1					
ANR	5311132	ArrayIndexing	APR_OFF_T_FMT [ 1 ]		5310614	1					
ANR	5311133	Identifier	APR_OFF_T_FMT		5310614	0					
ANR	5311134	PrimaryExpression	1		5310614	1					
ANR	5311135	OrExpression	"( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 )"		5310614	1		||			
ANR	5311136	AndExpression	sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ]		5310614	0		&&			
ANR	5311137	EqualityExpression	sizeof ( APR_OFF_T_FMT ) == 3		5310614	0		==			
ANR	5311138	SizeofExpression	sizeof ( APR_OFF_T_FMT )		5310614	0					
ANR	5311139	Sizeof	sizeof		5310614	0					
ANR	5311140	SizeofOperand	APR_OFF_T_FMT		5310614	1					
ANR	5311141	PrimaryExpression	3		5310614	1					
ANR	5311142	EqualityExpression	fmt [ 0 ] == APR_OFF_T_FMT [ 0 ]		5310614	1		==			
ANR	5311143	ArrayIndexing	fmt [ 0 ]		5310614	0					
ANR	5311144	Identifier	fmt		5310614	0					
ANR	5311145	PrimaryExpression	0		5310614	1					
ANR	5311146	ArrayIndexing	APR_OFF_T_FMT [ 0 ]		5310614	1					
ANR	5311147	Identifier	APR_OFF_T_FMT		5310614	0					
ANR	5311148	PrimaryExpression	0		5310614	1					
ANR	5311149	AndExpression	"sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0"		5310614	1		&&			
ANR	5311150	RelationalExpression	sizeof ( APR_OFF_T_FMT ) > 4		5310614	0		>			
ANR	5311151	SizeofExpression	sizeof ( APR_OFF_T_FMT )		5310614	0					
ANR	5311152	Sizeof	sizeof		5310614	0					
ANR	5311153	SizeofOperand	APR_OFF_T_FMT		5310614	1					
ANR	5311154	PrimaryExpression	4		5310614	1					
ANR	5311155	EqualityExpression	"strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0"		5310614	1		==			
ANR	5311156	CallExpression	"strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 )"		5310614	0					
ANR	5311157	Callee	strncmp		5310614	0					
ANR	5311158	Identifier	strncmp		5310614	0					
ANR	5311159	ArgumentList	fmt		5310614	1					
ANR	5311160	Argument	fmt		5310614	0					
ANR	5311161	Identifier	fmt		5310614	0					
ANR	5311162	Argument	APR_OFF_T_FMT		5310614	1					
ANR	5311163	Identifier	APR_OFF_T_FMT		5310614	0					
ANR	5311164	Argument	sizeof ( APR_OFF_T_FMT ) - 2		5310614	2					
ANR	5311165	AdditiveExpression	sizeof ( APR_OFF_T_FMT ) - 2		5310614	0		-			
ANR	5311166	SizeofExpression	sizeof ( APR_OFF_T_FMT )		5310614	0					
ANR	5311167	Sizeof	sizeof		5310614	0					
ANR	5311168	SizeofOperand	APR_OFF_T_FMT		5310614	1					
ANR	5311169	PrimaryExpression	2		5310614	1					
ANR	5311170	PrimaryExpression	0		5310614	1					
ANR	5311171	CompoundStatement		146:60:4460:4460	5310614	1					
ANR	5311172	ExpressionStatement	var_type = IS_QUAD	878:16:25326:25344	5310614	0	True				
ANR	5311173	AssignmentExpression	var_type = IS_QUAD		5310614	0		=			
ANR	5311174	Identifier	var_type		5310614	0					
ANR	5311175	Identifier	IS_QUAD		5310614	1					
ANR	5311176	ExpressionStatement	fmt += ( sizeof ( APR_OFF_T_FMT ) - 2 )	879:16:25362:25396	5310614	1	True				
ANR	5311177	AssignmentExpression	fmt += ( sizeof ( APR_OFF_T_FMT ) - 2 )		5310614	0		+=			
ANR	5311178	Identifier	fmt		5310614	0					
ANR	5311179	AdditiveExpression	sizeof ( APR_OFF_T_FMT ) - 2		5310614	1		-			
ANR	5311180	SizeofExpression	sizeof ( APR_OFF_T_FMT )		5310614	0					
ANR	5311181	Sizeof	sizeof		5310614	0					
ANR	5311182	SizeofOperand	APR_OFF_T_FMT		5310614	1					
ANR	5311183	PrimaryExpression	2		5310614	1					
ANR	5311184	ElseStatement	else		5310614	0					
ANR	5311185	IfStatement	"if ( ( sizeof ( APR_INT64_T_FMT ) == 4 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ] ) || ( sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] ) || ( sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0 ) )"		5310614	0					
ANR	5311186	Condition	"( sizeof ( APR_INT64_T_FMT ) == 4 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ] ) || ( sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] ) || ( sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0 )"	881:21:25433:25818	5310614	0	True				
ANR	5311187	OrExpression	"( sizeof ( APR_INT64_T_FMT ) == 4 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ] ) || ( sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] ) || ( sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0 )"		5310614	0		||			
ANR	5311188	AndExpression	sizeof ( APR_INT64_T_FMT ) == 4 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ]		5310614	0		&&			
ANR	5311189	EqualityExpression	sizeof ( APR_INT64_T_FMT ) == 4		5310614	0		==			
ANR	5311190	SizeofExpression	sizeof ( APR_INT64_T_FMT )		5310614	0					
ANR	5311191	Sizeof	sizeof		5310614	0					
ANR	5311192	SizeofOperand	APR_INT64_T_FMT		5310614	1					
ANR	5311193	PrimaryExpression	4		5310614	1					
ANR	5311194	AndExpression	fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ]		5310614	1		&&			
ANR	5311195	EqualityExpression	fmt [ 0 ] == APR_INT64_T_FMT [ 0 ]		5310614	0		==			
ANR	5311196	ArrayIndexing	fmt [ 0 ]		5310614	0					
ANR	5311197	Identifier	fmt		5310614	0					
ANR	5311198	PrimaryExpression	0		5310614	1					
ANR	5311199	ArrayIndexing	APR_INT64_T_FMT [ 0 ]		5310614	1					
ANR	5311200	Identifier	APR_INT64_T_FMT		5310614	0					
ANR	5311201	PrimaryExpression	0		5310614	1					
ANR	5311202	EqualityExpression	fmt [ 1 ] == APR_INT64_T_FMT [ 1 ]		5310614	1		==			
ANR	5311203	ArrayIndexing	fmt [ 1 ]		5310614	0					
ANR	5311204	Identifier	fmt		5310614	0					
ANR	5311205	PrimaryExpression	1		5310614	1					
ANR	5311206	ArrayIndexing	APR_INT64_T_FMT [ 1 ]		5310614	1					
ANR	5311207	Identifier	APR_INT64_T_FMT		5310614	0					
ANR	5311208	PrimaryExpression	1		5310614	1					
ANR	5311209	OrExpression	"( sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] ) || ( sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0 )"		5310614	1		||			
ANR	5311210	AndExpression	sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ]		5310614	0		&&			
ANR	5311211	EqualityExpression	sizeof ( APR_INT64_T_FMT ) == 3		5310614	0		==			
ANR	5311212	SizeofExpression	sizeof ( APR_INT64_T_FMT )		5310614	0					
ANR	5311213	Sizeof	sizeof		5310614	0					
ANR	5311214	SizeofOperand	APR_INT64_T_FMT		5310614	1					
ANR	5311215	PrimaryExpression	3		5310614	1					
ANR	5311216	EqualityExpression	fmt [ 0 ] == APR_INT64_T_FMT [ 0 ]		5310614	1		==			
ANR	5311217	ArrayIndexing	fmt [ 0 ]		5310614	0					
ANR	5311218	Identifier	fmt		5310614	0					
ANR	5311219	PrimaryExpression	0		5310614	1					
ANR	5311220	ArrayIndexing	APR_INT64_T_FMT [ 0 ]		5310614	1					
ANR	5311221	Identifier	APR_INT64_T_FMT		5310614	0					
ANR	5311222	PrimaryExpression	0		5310614	1					
ANR	5311223	AndExpression	"sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0"		5310614	1		&&			
ANR	5311224	RelationalExpression	sizeof ( APR_INT64_T_FMT ) > 4		5310614	0		>			
ANR	5311225	SizeofExpression	sizeof ( APR_INT64_T_FMT )		5310614	0					
ANR	5311226	Sizeof	sizeof		5310614	0					
ANR	5311227	SizeofOperand	APR_INT64_T_FMT		5310614	1					
ANR	5311228	PrimaryExpression	4		5310614	1					
ANR	5311229	EqualityExpression	"strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0"		5310614	1		==			
ANR	5311230	CallExpression	"strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 )"		5310614	0					
ANR	5311231	Callee	strncmp		5310614	0					
ANR	5311232	Identifier	strncmp		5310614	0					
ANR	5311233	ArgumentList	fmt		5310614	1					
ANR	5311234	Argument	fmt		5310614	0					
ANR	5311235	Identifier	fmt		5310614	0					
ANR	5311236	Argument	APR_INT64_T_FMT		5310614	1					
ANR	5311237	Identifier	APR_INT64_T_FMT		5310614	0					
ANR	5311238	Argument	sizeof ( APR_INT64_T_FMT ) - 2		5310614	2					
ANR	5311239	AdditiveExpression	sizeof ( APR_INT64_T_FMT ) - 2		5310614	0		-			
ANR	5311240	SizeofExpression	sizeof ( APR_INT64_T_FMT )		5310614	0					
ANR	5311241	Sizeof	sizeof		5310614	0					
ANR	5311242	SizeofOperand	APR_INT64_T_FMT		5310614	1					
ANR	5311243	PrimaryExpression	2		5310614	1					
ANR	5311244	PrimaryExpression	0		5310614	1					
ANR	5311245	CompoundStatement		158:61:5049:5049	5310614	1					
ANR	5311246	ExpressionStatement	var_type = IS_QUAD	890:16:25915:25933	5310614	0	True				
ANR	5311247	AssignmentExpression	var_type = IS_QUAD		5310614	0		=			
ANR	5311248	Identifier	var_type		5310614	0					
ANR	5311249	Identifier	IS_QUAD		5310614	1					
ANR	5311250	ExpressionStatement	fmt += ( sizeof ( APR_INT64_T_FMT ) - 2 )	891:16:25951:25987	5310614	1	True				
ANR	5311251	AssignmentExpression	fmt += ( sizeof ( APR_INT64_T_FMT ) - 2 )		5310614	0		+=			
ANR	5311252	Identifier	fmt		5310614	0					
ANR	5311253	AdditiveExpression	sizeof ( APR_INT64_T_FMT ) - 2		5310614	1		-			
ANR	5311254	SizeofExpression	sizeof ( APR_INT64_T_FMT )		5310614	0					
ANR	5311255	Sizeof	sizeof		5310614	0					
ANR	5311256	SizeofOperand	APR_INT64_T_FMT		5310614	1					
ANR	5311257	PrimaryExpression	2		5310614	1					
ANR	5311258	ElseStatement	else		5310614	0					
ANR	5311259	IfStatement	if ( * fmt == 'q' )		5310614	0					
ANR	5311260	Condition	* fmt == 'q'	893:21:26024:26034	5310614	0	True				
ANR	5311261	EqualityExpression	* fmt == 'q'		5310614	0		==			
ANR	5311262	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311263	UnaryOperator	*		5310614	0					
ANR	5311264	Identifier	fmt		5310614	1					
ANR	5311265	PrimaryExpression	'q'		5310614	1					
ANR	5311266	CompoundStatement		163:34:5265:5265	5310614	1					
ANR	5311267	ExpressionStatement	var_type = IS_QUAD	894:16:26055:26073	5310614	0	True				
ANR	5311268	AssignmentExpression	var_type = IS_QUAD		5310614	0		=			
ANR	5311269	Identifier	var_type		5310614	0					
ANR	5311270	Identifier	IS_QUAD		5310614	1					
ANR	5311271	ExpressionStatement	fmt ++	895:16:26091:26096	5310614	1	True				
ANR	5311272	PostIncDecOperationExpression	fmt ++		5310614	0					
ANR	5311273	Identifier	fmt		5310614	0					
ANR	5311274	IncDec	++		5310614	1					
ANR	5311275	ElseStatement	else		5310614	0					
ANR	5311276	IfStatement	if ( * fmt == 'l' )		5310614	0					
ANR	5311277	Condition	* fmt == 'l'	897:21:26133:26143	5310614	0	True				
ANR	5311278	EqualityExpression	* fmt == 'l'		5310614	0		==			
ANR	5311279	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311280	UnaryOperator	*		5310614	0					
ANR	5311281	Identifier	fmt		5310614	1					
ANR	5311282	PrimaryExpression	'l'		5310614	1					
ANR	5311283	CompoundStatement		167:34:5374:5374	5310614	1					
ANR	5311284	ExpressionStatement	var_type = IS_LONG	898:16:26164:26182	5310614	0	True				
ANR	5311285	AssignmentExpression	var_type = IS_LONG		5310614	0		=			
ANR	5311286	Identifier	var_type		5310614	0					
ANR	5311287	Identifier	IS_LONG		5310614	1					
ANR	5311288	ExpressionStatement	fmt ++	899:16:26200:26205	5310614	1	True				
ANR	5311289	PostIncDecOperationExpression	fmt ++		5310614	0					
ANR	5311290	Identifier	fmt		5310614	0					
ANR	5311291	IncDec	++		5310614	1					
ANR	5311292	ElseStatement	else		5310614	0					
ANR	5311293	IfStatement	if ( * fmt == 'h' )		5310614	0					
ANR	5311294	Condition	* fmt == 'h'	901:21:26242:26252	5310614	0	True				
ANR	5311295	EqualityExpression	* fmt == 'h'		5310614	0		==			
ANR	5311296	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311297	UnaryOperator	*		5310614	0					
ANR	5311298	Identifier	fmt		5310614	1					
ANR	5311299	PrimaryExpression	'h'		5310614	1					
ANR	5311300	CompoundStatement		171:34:5483:5483	5310614	1					
ANR	5311301	ExpressionStatement	var_type = IS_SHORT	902:16:26273:26292	5310614	0	True				
ANR	5311302	AssignmentExpression	var_type = IS_SHORT		5310614	0		=			
ANR	5311303	Identifier	var_type		5310614	0					
ANR	5311304	Identifier	IS_SHORT		5310614	1					
ANR	5311305	ExpressionStatement	fmt ++	903:16:26310:26315	5310614	1	True				
ANR	5311306	PostIncDecOperationExpression	fmt ++		5310614	0					
ANR	5311307	Identifier	fmt		5310614	0					
ANR	5311308	IncDec	++		5310614	1					
ANR	5311309	ElseStatement	else		5310614	0					
ANR	5311310	CompoundStatement		175:17:5576:5576	5310614	0					
ANR	5311311	ExpressionStatement	var_type = IS_INT	906:16:26366:26383	5310614	0	True				
ANR	5311312	AssignmentExpression	var_type = IS_INT		5310614	0		=			
ANR	5311313	Identifier	var_type		5310614	0					
ANR	5311314	Identifier	IS_INT		5310614	1					
ANR	5311315	SwitchStatement	switch ( * fmt )		5310614	8					
ANR	5311316	Condition	* fmt	920:20:26966:26969	5310614	0	True				
ANR	5311317	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311318	UnaryOperator	*		5310614	0					
ANR	5311319	Identifier	fmt		5310614	1					
ANR	5311320	CompoundStatement		190:26:6200:6200	5310614	1					
ANR	5311321	Label	case 'u' :	921:12:26986:26994	5310614	0	True				
ANR	5311322	IfStatement	if ( var_type == IS_QUAD )		5310614	1					
ANR	5311323	Condition	var_type == IS_QUAD	922:20:27016:27034	5310614	0	True				
ANR	5311324	EqualityExpression	var_type == IS_QUAD		5310614	0		==			
ANR	5311325	Identifier	var_type		5310614	0					
ANR	5311326	Identifier	IS_QUAD		5310614	1					
ANR	5311327	CompoundStatement		192:41:6265:6265	5310614	1					
ANR	5311328	ExpressionStatement	"i_quad = va_arg ( ap , apr_uint64_t )"	923:20:27059:27092	5310614	0	True				
ANR	5311329	AssignmentExpression	"i_quad = va_arg ( ap , apr_uint64_t )"		5310614	0		=			
ANR	5311330	Identifier	i_quad		5310614	0					
ANR	5311331	CallExpression	"va_arg ( ap , apr_uint64_t )"		5310614	1					
ANR	5311332	Callee	va_arg		5310614	0					
ANR	5311333	Identifier	va_arg		5310614	0					
ANR	5311334	ArgumentList	ap		5310614	1					
ANR	5311335	Argument	ap		5310614	0					
ANR	5311336	Identifier	ap		5310614	0					
ANR	5311337	Argument	apr_uint64_t		5310614	1					
ANR	5311338	Identifier	apr_uint64_t		5310614	0					
ANR	5311339	ExpressionStatement	"s = conv_10_quad ( i_quad , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	924:20:27114:27215	5310614	1	True				
ANR	5311340	AssignmentExpression	"s = conv_10_quad ( i_quad , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5311341	Identifier	s		5310614	0					
ANR	5311342	CallExpression	"conv_10_quad ( i_quad , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5311343	Callee	conv_10_quad		5310614	0					
ANR	5311344	Identifier	conv_10_quad		5310614	0					
ANR	5311345	ArgumentList	i_quad		5310614	1					
ANR	5311346	Argument	i_quad		5310614	0					
ANR	5311347	Identifier	i_quad		5310614	0					
ANR	5311348	Argument	1		5310614	1					
ANR	5311349	PrimaryExpression	1		5310614	0					
ANR	5311350	Argument	& is_negative		5310614	2					
ANR	5311351	UnaryOperationExpression	& is_negative		5310614	0					
ANR	5311352	UnaryOperator	&		5310614	0					
ANR	5311353	Identifier	is_negative		5310614	1					
ANR	5311354	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5311355	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5311356	UnaryOperator	&		5310614	0					
ANR	5311357	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5311358	Identifier	num_buf		5310614	0					
ANR	5311359	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5311360	Argument	& s_len		5310614	4					
ANR	5311361	UnaryOperationExpression	& s_len		5310614	0					
ANR	5311362	UnaryOperator	&		5310614	0					
ANR	5311363	Identifier	s_len		5310614	1					
ANR	5311364	ElseStatement	else		5310614	0					
ANR	5311365	CompoundStatement		197:21:6484:6484	5310614	0					
ANR	5311366	IfStatement	if ( var_type == IS_LONG )		5310614	0					
ANR	5311367	Condition	var_type == IS_LONG	928:24:27282:27300	5310614	0	True				
ANR	5311368	EqualityExpression	var_type == IS_LONG		5310614	0		==			
ANR	5311369	Identifier	var_type		5310614	0					
ANR	5311370	Identifier	IS_LONG		5310614	1					
ANR	5311371	ExpressionStatement	"i_num = ( apr_int32_t ) va_arg ( ap , apr_uint32_t )"	929:24:27327:27373	5310614	1	True				
ANR	5311372	AssignmentExpression	"i_num = ( apr_int32_t ) va_arg ( ap , apr_uint32_t )"		5310614	0		=			
ANR	5311373	Identifier	i_num		5310614	0					
ANR	5311374	CastExpression	"( apr_int32_t ) va_arg ( ap , apr_uint32_t )"		5310614	1					
ANR	5311375	CastTarget	apr_int32_t		5310614	0					
ANR	5311376	CallExpression	"va_arg ( ap , apr_uint32_t )"		5310614	1					
ANR	5311377	Callee	va_arg		5310614	0					
ANR	5311378	Identifier	va_arg		5310614	0					
ANR	5311379	ArgumentList	ap		5310614	1					
ANR	5311380	Argument	ap		5310614	0					
ANR	5311381	Identifier	ap		5310614	0					
ANR	5311382	Argument	apr_uint32_t		5310614	1					
ANR	5311383	Identifier	apr_uint32_t		5310614	0					
ANR	5311384	ElseStatement	else		5310614	0					
ANR	5311385	IfStatement	if ( var_type == IS_SHORT )		5310614	0					
ANR	5311386	Condition	var_type == IS_SHORT	930:29:27404:27423	5310614	0	True				
ANR	5311387	EqualityExpression	var_type == IS_SHORT		5310614	0		==			
ANR	5311388	Identifier	var_type		5310614	0					
ANR	5311389	Identifier	IS_SHORT		5310614	1					
ANR	5311390	Statement	i_num	931:24:27450:27454	5310614	1	True				
ANR	5311391	ElseStatement	else		5310614	0					
ANR	5311392	Statement	i_num	933:24:27564:27568	5310614	0	True				
ANR	5311393	Statement	=	931:30:27456:27456	5310614	1	True				
ANR	5311394	Statement	(	931:32:27458:27458	5310614	2	True				
ANR	5311395	Statement	apr_int32_t	931:33:27459:27469	5310614	3	True				
ANR	5311396	Statement	)	931:44:27470:27470	5310614	4	True				
ANR	5311397	Statement	(	931:46:27472:27472	5310614	5	True				
ANR	5311398	Statement	unsigned	931:47:27473:27480	5310614	6	True				
ANR	5311399	Statement	short	931:56:27482:27486	5310614	7	True				
ANR	5311400	Statement	)	931:61:27487:27487	5310614	8	True				
ANR	5311401	Statement	va_arg	931:63:27489:27494	5310614	9	True				
ANR	5311402	Statement	(	931:69:27495:27495	5310614	10	True				
ANR	5311403	Statement	ap	931:70:27496:27497	5310614	11	True				
ANR	5311404	Statement	","	931:72:27498:27498	5310614	12	True				
ANR	5311405	Statement	unsigned	931:74:27500:27507	5310614	13	True				
ANR	5311406	Statement	int	931:83:27509:27511	5310614	14	True				
ANR	5311407	Statement	)	931:86:27512:27512	5310614	15	True				
ANR	5311408	ExpressionStatement		931:87:27513:27513	5310614	16	True				
ANR	5311409	Statement	=	933:30:27570:27570	5310614	17	True				
ANR	5311410	Statement	(	933:32:27572:27572	5310614	18	True				
ANR	5311411	Statement	apr_int32_t	933:33:27573:27583	5310614	19	True				
ANR	5311412	Statement	)	933:44:27584:27584	5310614	20	True				
ANR	5311413	Statement	va_arg	933:46:27586:27591	5310614	21	True				
ANR	5311414	Statement	(	933:52:27592:27592	5310614	22	True				
ANR	5311415	Statement	ap	933:53:27593:27594	5310614	23	True				
ANR	5311416	Statement	","	933:55:27595:27595	5310614	24	True				
ANR	5311417	Statement	unsigned	933:57:27597:27604	5310614	25	True				
ANR	5311418	Statement	int	933:66:27606:27608	5310614	26	True				
ANR	5311419	Statement	)	933:69:27609:27609	5310614	27	True				
ANR	5311420	ExpressionStatement		933:70:27610:27610	5310614	28	True				
ANR	5311421	ExpressionStatement	"s = conv_10 ( i_num , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	934:20:27632:27727	5310614	29	True				
ANR	5311422	AssignmentExpression	"s = conv_10 ( i_num , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5311423	Identifier	s		5310614	0					
ANR	5311424	CallExpression	"conv_10 ( i_num , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5311425	Callee	conv_10		5310614	0					
ANR	5311426	Identifier	conv_10		5310614	0					
ANR	5311427	ArgumentList	i_num		5310614	1					
ANR	5311428	Argument	i_num		5310614	0					
ANR	5311429	Identifier	i_num		5310614	0					
ANR	5311430	Argument	1		5310614	1					
ANR	5311431	PrimaryExpression	1		5310614	0					
ANR	5311432	Argument	& is_negative		5310614	2					
ANR	5311433	UnaryOperationExpression	& is_negative		5310614	0					
ANR	5311434	UnaryOperator	&		5310614	0					
ANR	5311435	Identifier	is_negative		5310614	1					
ANR	5311436	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5311437	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5311438	UnaryOperator	&		5310614	0					
ANR	5311439	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5311440	Identifier	num_buf		5310614	0					
ANR	5311441	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5311442	Argument	& s_len		5310614	4					
ANR	5311443	UnaryOperationExpression	& s_len		5310614	0					
ANR	5311444	UnaryOperator	&		5310614	0					
ANR	5311445	Identifier	s_len		5310614	1					
ANR	5311446	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	937:16:27763:27815	5310614	2	True				
ANR	5311447	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		5310614	0					
ANR	5311448	Callee	FIX_PRECISION		5310614	0					
ANR	5311449	Identifier	FIX_PRECISION		5310614	0					
ANR	5311450	ArgumentList	adjust_precision		5310614	1					
ANR	5311451	Argument	adjust_precision		5310614	0					
ANR	5311452	Identifier	adjust_precision		5310614	0					
ANR	5311453	Argument	precision		5310614	1					
ANR	5311454	Identifier	precision		5310614	0					
ANR	5311455	Argument	s		5310614	2					
ANR	5311456	Identifier	s		5310614	0					
ANR	5311457	Argument	s_len		5310614	3					
ANR	5311458	Identifier	s_len		5310614	0					
ANR	5311459	BreakStatement	break ;	938:16:27833:27838	5310614	3	True				
ANR	5311460	Label	case 'd' :	940:12:27853:27861	5310614	4	True				
ANR	5311461	Label	case 'i' :	941:12:27875:27883	5310614	5	True				
ANR	5311462	IfStatement	if ( var_type == IS_QUAD )		5310614	6					
ANR	5311463	Condition	var_type == IS_QUAD	942:20:27905:27923	5310614	0	True				
ANR	5311464	EqualityExpression	var_type == IS_QUAD		5310614	0		==			
ANR	5311465	Identifier	var_type		5310614	0					
ANR	5311466	Identifier	IS_QUAD		5310614	1					
ANR	5311467	CompoundStatement		212:41:7154:7154	5310614	1					
ANR	5311468	ExpressionStatement	"i_quad = va_arg ( ap , apr_int64_t )"	943:20:27948:27980	5310614	0	True				
ANR	5311469	AssignmentExpression	"i_quad = va_arg ( ap , apr_int64_t )"		5310614	0		=			
ANR	5311470	Identifier	i_quad		5310614	0					
ANR	5311471	CallExpression	"va_arg ( ap , apr_int64_t )"		5310614	1					
ANR	5311472	Callee	va_arg		5310614	0					
ANR	5311473	Identifier	va_arg		5310614	0					
ANR	5311474	ArgumentList	ap		5310614	1					
ANR	5311475	Argument	ap		5310614	0					
ANR	5311476	Identifier	ap		5310614	0					
ANR	5311477	Argument	apr_int64_t		5310614	1					
ANR	5311478	Identifier	apr_int64_t		5310614	0					
ANR	5311479	ExpressionStatement	"s = conv_10_quad ( i_quad , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	944:20:28002:28103	5310614	1	True				
ANR	5311480	AssignmentExpression	"s = conv_10_quad ( i_quad , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5311481	Identifier	s		5310614	0					
ANR	5311482	CallExpression	"conv_10_quad ( i_quad , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5311483	Callee	conv_10_quad		5310614	0					
ANR	5311484	Identifier	conv_10_quad		5310614	0					
ANR	5311485	ArgumentList	i_quad		5310614	1					
ANR	5311486	Argument	i_quad		5310614	0					
ANR	5311487	Identifier	i_quad		5310614	0					
ANR	5311488	Argument	0		5310614	1					
ANR	5311489	PrimaryExpression	0		5310614	0					
ANR	5311490	Argument	& is_negative		5310614	2					
ANR	5311491	UnaryOperationExpression	& is_negative		5310614	0					
ANR	5311492	UnaryOperator	&		5310614	0					
ANR	5311493	Identifier	is_negative		5310614	1					
ANR	5311494	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5311495	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5311496	UnaryOperator	&		5310614	0					
ANR	5311497	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5311498	Identifier	num_buf		5310614	0					
ANR	5311499	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5311500	Argument	& s_len		5310614	4					
ANR	5311501	UnaryOperationExpression	& s_len		5310614	0					
ANR	5311502	UnaryOperator	&		5310614	0					
ANR	5311503	Identifier	s_len		5310614	1					
ANR	5311504	ElseStatement	else		5310614	0					
ANR	5311505	CompoundStatement		217:21:7372:7372	5310614	0					
ANR	5311506	IfStatement	if ( var_type == IS_LONG )		5310614	0					
ANR	5311507	Condition	var_type == IS_LONG	948:24:28170:28188	5310614	0	True				
ANR	5311508	EqualityExpression	var_type == IS_LONG		5310614	0		==			
ANR	5311509	Identifier	var_type		5310614	0					
ANR	5311510	Identifier	IS_LONG		5310614	1					
ANR	5311511	ExpressionStatement	"i_num = va_arg ( ap , apr_int32_t )"	949:24:28215:28246	5310614	1	True				
ANR	5311512	AssignmentExpression	"i_num = va_arg ( ap , apr_int32_t )"		5310614	0		=			
ANR	5311513	Identifier	i_num		5310614	0					
ANR	5311514	CallExpression	"va_arg ( ap , apr_int32_t )"		5310614	1					
ANR	5311515	Callee	va_arg		5310614	0					
ANR	5311516	Identifier	va_arg		5310614	0					
ANR	5311517	ArgumentList	ap		5310614	1					
ANR	5311518	Argument	ap		5310614	0					
ANR	5311519	Identifier	ap		5310614	0					
ANR	5311520	Argument	apr_int32_t		5310614	1					
ANR	5311521	Identifier	apr_int32_t		5310614	0					
ANR	5311522	ElseStatement	else		5310614	0					
ANR	5311523	IfStatement	if ( var_type == IS_SHORT )		5310614	0					
ANR	5311524	Condition	var_type == IS_SHORT	950:29:28277:28296	5310614	0	True				
ANR	5311525	EqualityExpression	var_type == IS_SHORT		5310614	0		==			
ANR	5311526	Identifier	var_type		5310614	0					
ANR	5311527	Identifier	IS_SHORT		5310614	1					
ANR	5311528	ExpressionStatement	"i_num = ( short ) va_arg ( ap , int )"	951:24:28323:28354	5310614	1	True				
ANR	5311529	AssignmentExpression	"i_num = ( short ) va_arg ( ap , int )"		5310614	0		=			
ANR	5311530	Identifier	i_num		5310614	0					
ANR	5311531	CastExpression	"( short ) va_arg ( ap , int )"		5310614	1					
ANR	5311532	CastTarget	short		5310614	0					
ANR	5311533	CallExpression	"va_arg ( ap , int )"		5310614	1					
ANR	5311534	Callee	va_arg		5310614	0					
ANR	5311535	Identifier	va_arg		5310614	0					
ANR	5311536	ArgumentList	ap		5310614	1					
ANR	5311537	Argument	ap		5310614	0					
ANR	5311538	Identifier	ap		5310614	0					
ANR	5311539	Argument	int		5310614	1					
ANR	5311540	Identifier	int		5310614	0					
ANR	5311541	ElseStatement	else		5310614	0					
ANR	5311542	ExpressionStatement	"i_num = va_arg ( ap , int )"	953:24:28405:28428	5310614	0	True				
ANR	5311543	AssignmentExpression	"i_num = va_arg ( ap , int )"		5310614	0		=			
ANR	5311544	Identifier	i_num		5310614	0					
ANR	5311545	CallExpression	"va_arg ( ap , int )"		5310614	1					
ANR	5311546	Callee	va_arg		5310614	0					
ANR	5311547	Identifier	va_arg		5310614	0					
ANR	5311548	ArgumentList	ap		5310614	1					
ANR	5311549	Argument	ap		5310614	0					
ANR	5311550	Identifier	ap		5310614	0					
ANR	5311551	Argument	int		5310614	1					
ANR	5311552	Identifier	int		5310614	0					
ANR	5311553	ExpressionStatement	"s = conv_10 ( i_num , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	954:20:28450:28545	5310614	1	True				
ANR	5311554	AssignmentExpression	"s = conv_10 ( i_num , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5311555	Identifier	s		5310614	0					
ANR	5311556	CallExpression	"conv_10 ( i_num , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5311557	Callee	conv_10		5310614	0					
ANR	5311558	Identifier	conv_10		5310614	0					
ANR	5311559	ArgumentList	i_num		5310614	1					
ANR	5311560	Argument	i_num		5310614	0					
ANR	5311561	Identifier	i_num		5310614	0					
ANR	5311562	Argument	0		5310614	1					
ANR	5311563	PrimaryExpression	0		5310614	0					
ANR	5311564	Argument	& is_negative		5310614	2					
ANR	5311565	UnaryOperationExpression	& is_negative		5310614	0					
ANR	5311566	UnaryOperator	&		5310614	0					
ANR	5311567	Identifier	is_negative		5310614	1					
ANR	5311568	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5311569	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5311570	UnaryOperator	&		5310614	0					
ANR	5311571	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5311572	Identifier	num_buf		5310614	0					
ANR	5311573	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5311574	Argument	& s_len		5310614	4					
ANR	5311575	UnaryOperationExpression	& s_len		5310614	0					
ANR	5311576	UnaryOperator	&		5310614	0					
ANR	5311577	Identifier	s_len		5310614	1					
ANR	5311578	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	957:16:28581:28633	5310614	7	True				
ANR	5311579	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		5310614	0					
ANR	5311580	Callee	FIX_PRECISION		5310614	0					
ANR	5311581	Identifier	FIX_PRECISION		5310614	0					
ANR	5311582	ArgumentList	adjust_precision		5310614	1					
ANR	5311583	Argument	adjust_precision		5310614	0					
ANR	5311584	Identifier	adjust_precision		5310614	0					
ANR	5311585	Argument	precision		5310614	1					
ANR	5311586	Identifier	precision		5310614	0					
ANR	5311587	Argument	s		5310614	2					
ANR	5311588	Identifier	s		5310614	0					
ANR	5311589	Argument	s_len		5310614	3					
ANR	5311590	Identifier	s_len		5310614	0					
ANR	5311591	IfStatement	if ( is_negative )		5310614	8					
ANR	5311592	Condition	is_negative	959:20:28656:28666	5310614	0	True				
ANR	5311593	Identifier	is_negative		5310614	0					
ANR	5311594	ExpressionStatement	prefix_char = '-'	960:20:28689:28706	5310614	1	True				
ANR	5311595	AssignmentExpression	prefix_char = '-'		5310614	0		=			
ANR	5311596	Identifier	prefix_char		5310614	0					
ANR	5311597	PrimaryExpression	'-'		5310614	1					
ANR	5311598	ElseStatement	else		5310614	0					
ANR	5311599	IfStatement	if ( print_sign )		5310614	0					
ANR	5311600	Condition	print_sign	961:25:28733:28742	5310614	0	True				
ANR	5311601	Identifier	print_sign		5310614	0					
ANR	5311602	ExpressionStatement	prefix_char = '+'	962:20:28765:28782	5310614	1	True				
ANR	5311603	AssignmentExpression	prefix_char = '+'		5310614	0		=			
ANR	5311604	Identifier	prefix_char		5310614	0					
ANR	5311605	PrimaryExpression	'+'		5310614	1					
ANR	5311606	ElseStatement	else		5310614	0					
ANR	5311607	IfStatement	if ( print_blank )		5310614	0					
ANR	5311608	Condition	print_blank	963:25:28809:28819	5310614	0	True				
ANR	5311609	Identifier	print_blank		5310614	0					
ANR	5311610	ExpressionStatement	prefix_char = ' '	964:20:28842:28859	5310614	1	True				
ANR	5311611	AssignmentExpression	prefix_char = ' '		5310614	0		=			
ANR	5311612	Identifier	prefix_char		5310614	0					
ANR	5311613	PrimaryExpression	' '		5310614	1					
ANR	5311614	BreakStatement	break ;	965:16:28877:28882	5310614	9	True				
ANR	5311615	Label	case 'o' :	968:12:28898:28906	5310614	10	True				
ANR	5311616	IfStatement	if ( var_type == IS_QUAD )		5310614	11					
ANR	5311617	Condition	var_type == IS_QUAD	969:20:28928:28946	5310614	0	True				
ANR	5311618	EqualityExpression	var_type == IS_QUAD		5310614	0		==			
ANR	5311619	Identifier	var_type		5310614	0					
ANR	5311620	Identifier	IS_QUAD		5310614	1					
ANR	5311621	CompoundStatement		239:41:8177:8177	5310614	1					
ANR	5311622	ExpressionStatement	"ui_quad = va_arg ( ap , apr_uint64_t )"	970:20:28971:29005	5310614	0	True				
ANR	5311623	AssignmentExpression	"ui_quad = va_arg ( ap , apr_uint64_t )"		5310614	0		=			
ANR	5311624	Identifier	ui_quad		5310614	0					
ANR	5311625	CallExpression	"va_arg ( ap , apr_uint64_t )"		5310614	1					
ANR	5311626	Callee	va_arg		5310614	0					
ANR	5311627	Identifier	va_arg		5310614	0					
ANR	5311628	ArgumentList	ap		5310614	1					
ANR	5311629	Argument	ap		5310614	0					
ANR	5311630	Identifier	ap		5310614	0					
ANR	5311631	Argument	apr_uint64_t		5310614	1					
ANR	5311632	Identifier	apr_uint64_t		5310614	0					
ANR	5311633	ExpressionStatement	"s = conv_p2_quad ( ui_quad , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	971:20:29027:29121	5310614	1	True				
ANR	5311634	AssignmentExpression	"s = conv_p2_quad ( ui_quad , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5311635	Identifier	s		5310614	0					
ANR	5311636	CallExpression	"conv_p2_quad ( ui_quad , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5311637	Callee	conv_p2_quad		5310614	0					
ANR	5311638	Identifier	conv_p2_quad		5310614	0					
ANR	5311639	ArgumentList	ui_quad		5310614	1					
ANR	5311640	Argument	ui_quad		5310614	0					
ANR	5311641	Identifier	ui_quad		5310614	0					
ANR	5311642	Argument	3		5310614	1					
ANR	5311643	PrimaryExpression	3		5310614	0					
ANR	5311644	Argument	* fmt		5310614	2					
ANR	5311645	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311646	UnaryOperator	*		5310614	0					
ANR	5311647	Identifier	fmt		5310614	1					
ANR	5311648	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5311649	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5311650	UnaryOperator	&		5310614	0					
ANR	5311651	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5311652	Identifier	num_buf		5310614	0					
ANR	5311653	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5311654	Argument	& s_len		5310614	4					
ANR	5311655	UnaryOperationExpression	& s_len		5310614	0					
ANR	5311656	UnaryOperator	&		5310614	0					
ANR	5311657	Identifier	s_len		5310614	1					
ANR	5311658	ElseStatement	else		5310614	0					
ANR	5311659	CompoundStatement		244:21:8390:8390	5310614	0					
ANR	5311660	IfStatement	if ( var_type == IS_LONG )		5310614	0					
ANR	5311661	Condition	var_type == IS_LONG	975:24:29188:29206	5310614	0	True				
ANR	5311662	EqualityExpression	var_type == IS_LONG		5310614	0		==			
ANR	5311663	Identifier	var_type		5310614	0					
ANR	5311664	Identifier	IS_LONG		5310614	1					
ANR	5311665	ExpressionStatement	"ui_num = va_arg ( ap , apr_uint32_t )"	976:24:29233:29266	5310614	1	True				
ANR	5311666	AssignmentExpression	"ui_num = va_arg ( ap , apr_uint32_t )"		5310614	0		=			
ANR	5311667	Identifier	ui_num		5310614	0					
ANR	5311668	CallExpression	"va_arg ( ap , apr_uint32_t )"		5310614	1					
ANR	5311669	Callee	va_arg		5310614	0					
ANR	5311670	Identifier	va_arg		5310614	0					
ANR	5311671	ArgumentList	ap		5310614	1					
ANR	5311672	Argument	ap		5310614	0					
ANR	5311673	Identifier	ap		5310614	0					
ANR	5311674	Argument	apr_uint32_t		5310614	1					
ANR	5311675	Identifier	apr_uint32_t		5310614	0					
ANR	5311676	ElseStatement	else		5310614	0					
ANR	5311677	IfStatement	if ( var_type == IS_SHORT )		5310614	0					
ANR	5311678	Condition	var_type == IS_SHORT	977:29:29297:29316	5310614	0	True				
ANR	5311679	EqualityExpression	var_type == IS_SHORT		5310614	0		==			
ANR	5311680	Identifier	var_type		5310614	0					
ANR	5311681	Identifier	IS_SHORT		5310614	1					
ANR	5311682	Statement	ui_num	978:24:29343:29348	5310614	1	True				
ANR	5311683	ElseStatement	else		5310614	0					
ANR	5311684	Statement	ui_num	980:24:29444:29449	5310614	0	True				
ANR	5311685	Statement	=	978:31:29350:29350	5310614	1	True				
ANR	5311686	Statement	(	978:33:29352:29352	5310614	2	True				
ANR	5311687	Statement	unsigned	978:34:29353:29360	5310614	3	True				
ANR	5311688	Statement	short	978:43:29362:29366	5310614	4	True				
ANR	5311689	Statement	)	978:48:29367:29367	5310614	5	True				
ANR	5311690	Statement	va_arg	978:50:29369:29374	5310614	6	True				
ANR	5311691	Statement	(	978:56:29375:29375	5310614	7	True				
ANR	5311692	Statement	ap	978:57:29376:29377	5310614	8	True				
ANR	5311693	Statement	","	978:59:29378:29378	5310614	9	True				
ANR	5311694	Statement	unsigned	978:61:29380:29387	5310614	10	True				
ANR	5311695	Statement	int	978:70:29389:29391	5310614	11	True				
ANR	5311696	Statement	)	978:73:29392:29392	5310614	12	True				
ANR	5311697	ExpressionStatement		978:74:29393:29393	5310614	13	True				
ANR	5311698	Statement	=	980:31:29451:29451	5310614	14	True				
ANR	5311699	Statement	va_arg	980:33:29453:29458	5310614	15	True				
ANR	5311700	Statement	(	980:39:29459:29459	5310614	16	True				
ANR	5311701	Statement	ap	980:40:29460:29461	5310614	17	True				
ANR	5311702	Statement	","	980:42:29462:29462	5310614	18	True				
ANR	5311703	Statement	unsigned	980:44:29464:29471	5310614	19	True				
ANR	5311704	Statement	int	980:53:29473:29475	5310614	20	True				
ANR	5311705	Statement	)	980:56:29476:29476	5310614	21	True				
ANR	5311706	ExpressionStatement		980:57:29477:29477	5310614	22	True				
ANR	5311707	ExpressionStatement	"s = conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	981:20:29499:29587	5310614	23	True				
ANR	5311708	AssignmentExpression	"s = conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5311709	Identifier	s		5310614	0					
ANR	5311710	CallExpression	"conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5311711	Callee	conv_p2		5310614	0					
ANR	5311712	Identifier	conv_p2		5310614	0					
ANR	5311713	ArgumentList	ui_num		5310614	1					
ANR	5311714	Argument	ui_num		5310614	0					
ANR	5311715	Identifier	ui_num		5310614	0					
ANR	5311716	Argument	3		5310614	1					
ANR	5311717	PrimaryExpression	3		5310614	0					
ANR	5311718	Argument	* fmt		5310614	2					
ANR	5311719	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311720	UnaryOperator	*		5310614	0					
ANR	5311721	Identifier	fmt		5310614	1					
ANR	5311722	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5311723	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5311724	UnaryOperator	&		5310614	0					
ANR	5311725	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5311726	Identifier	num_buf		5310614	0					
ANR	5311727	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5311728	Argument	& s_len		5310614	4					
ANR	5311729	UnaryOperationExpression	& s_len		5310614	0					
ANR	5311730	UnaryOperator	&		5310614	0					
ANR	5311731	Identifier	s_len		5310614	1					
ANR	5311732	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	984:16:29623:29675	5310614	12	True				
ANR	5311733	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		5310614	0					
ANR	5311734	Callee	FIX_PRECISION		5310614	0					
ANR	5311735	Identifier	FIX_PRECISION		5310614	0					
ANR	5311736	ArgumentList	adjust_precision		5310614	1					
ANR	5311737	Argument	adjust_precision		5310614	0					
ANR	5311738	Identifier	adjust_precision		5310614	0					
ANR	5311739	Argument	precision		5310614	1					
ANR	5311740	Identifier	precision		5310614	0					
ANR	5311741	Argument	s		5310614	2					
ANR	5311742	Identifier	s		5310614	0					
ANR	5311743	Argument	s_len		5310614	3					
ANR	5311744	Identifier	s_len		5310614	0					
ANR	5311745	IfStatement	if ( alternate_form && * s != '0' )		5310614	13					
ANR	5311746	Condition	alternate_form && * s != '0'	985:20:29697:29723	5310614	0	True				
ANR	5311747	AndExpression	alternate_form && * s != '0'		5310614	0		&&			
ANR	5311748	Identifier	alternate_form		5310614	0					
ANR	5311749	EqualityExpression	* s != '0'		5310614	1		!=			
ANR	5311750	UnaryOperationExpression	* s		5310614	0					
ANR	5311751	UnaryOperator	*		5310614	0					
ANR	5311752	Identifier	s		5310614	1					
ANR	5311753	PrimaryExpression	'0'		5310614	1					
ANR	5311754	CompoundStatement		255:49:8954:8954	5310614	1					
ANR	5311755	ExpressionStatement	* -- s = '0'	986:20:29748:29758	5310614	0	True				
ANR	5311756	AssignmentExpression	* -- s = '0'		5310614	0		=			
ANR	5311757	UnaryOperationExpression	* -- s		5310614	0					
ANR	5311758	UnaryOperator	*		5310614	0					
ANR	5311759	UnaryExpression	-- s		5310614	1					
ANR	5311760	IncDec	--		5310614	0					
ANR	5311761	Identifier	s		5310614	1					
ANR	5311762	PrimaryExpression	'0'		5310614	1					
ANR	5311763	ExpressionStatement	s_len ++	987:20:29780:29787	5310614	1	True				
ANR	5311764	PostIncDecOperationExpression	s_len ++		5310614	0					
ANR	5311765	Identifier	s_len		5310614	0					
ANR	5311766	IncDec	++		5310614	1					
ANR	5311767	BreakStatement	break ;	989:16:29823:29828	5310614	14	True				
ANR	5311768	Label	case 'x' :	992:12:29844:29852	5310614	15	True				
ANR	5311769	Label	case 'X' :	993:12:29866:29874	5310614	16	True				
ANR	5311770	IfStatement	if ( var_type == IS_QUAD )		5310614	17					
ANR	5311771	Condition	var_type == IS_QUAD	994:20:29896:29914	5310614	0	True				
ANR	5311772	EqualityExpression	var_type == IS_QUAD		5310614	0		==			
ANR	5311773	Identifier	var_type		5310614	0					
ANR	5311774	Identifier	IS_QUAD		5310614	1					
ANR	5311775	CompoundStatement		264:41:9145:9145	5310614	1					
ANR	5311776	ExpressionStatement	"ui_quad = va_arg ( ap , apr_uint64_t )"	995:20:29939:29973	5310614	0	True				
ANR	5311777	AssignmentExpression	"ui_quad = va_arg ( ap , apr_uint64_t )"		5310614	0		=			
ANR	5311778	Identifier	ui_quad		5310614	0					
ANR	5311779	CallExpression	"va_arg ( ap , apr_uint64_t )"		5310614	1					
ANR	5311780	Callee	va_arg		5310614	0					
ANR	5311781	Identifier	va_arg		5310614	0					
ANR	5311782	ArgumentList	ap		5310614	1					
ANR	5311783	Argument	ap		5310614	0					
ANR	5311784	Identifier	ap		5310614	0					
ANR	5311785	Argument	apr_uint64_t		5310614	1					
ANR	5311786	Identifier	apr_uint64_t		5310614	0					
ANR	5311787	ExpressionStatement	"s = conv_p2_quad ( ui_quad , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	996:20:29995:30089	5310614	1	True				
ANR	5311788	AssignmentExpression	"s = conv_p2_quad ( ui_quad , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5311789	Identifier	s		5310614	0					
ANR	5311790	CallExpression	"conv_p2_quad ( ui_quad , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5311791	Callee	conv_p2_quad		5310614	0					
ANR	5311792	Identifier	conv_p2_quad		5310614	0					
ANR	5311793	ArgumentList	ui_quad		5310614	1					
ANR	5311794	Argument	ui_quad		5310614	0					
ANR	5311795	Identifier	ui_quad		5310614	0					
ANR	5311796	Argument	4		5310614	1					
ANR	5311797	PrimaryExpression	4		5310614	0					
ANR	5311798	Argument	* fmt		5310614	2					
ANR	5311799	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311800	UnaryOperator	*		5310614	0					
ANR	5311801	Identifier	fmt		5310614	1					
ANR	5311802	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5311803	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5311804	UnaryOperator	&		5310614	0					
ANR	5311805	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5311806	Identifier	num_buf		5310614	0					
ANR	5311807	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5311808	Argument	& s_len		5310614	4					
ANR	5311809	UnaryOperationExpression	& s_len		5310614	0					
ANR	5311810	UnaryOperator	&		5310614	0					
ANR	5311811	Identifier	s_len		5310614	1					
ANR	5311812	ElseStatement	else		5310614	0					
ANR	5311813	CompoundStatement		269:21:9358:9358	5310614	0					
ANR	5311814	IfStatement	if ( var_type == IS_LONG )		5310614	0					
ANR	5311815	Condition	var_type == IS_LONG	1000:24:30156:30174	5310614	0	True				
ANR	5311816	EqualityExpression	var_type == IS_LONG		5310614	0		==			
ANR	5311817	Identifier	var_type		5310614	0					
ANR	5311818	Identifier	IS_LONG		5310614	1					
ANR	5311819	ExpressionStatement	"ui_num = va_arg ( ap , apr_uint32_t )"	1001:24:30201:30234	5310614	1	True				
ANR	5311820	AssignmentExpression	"ui_num = va_arg ( ap , apr_uint32_t )"		5310614	0		=			
ANR	5311821	Identifier	ui_num		5310614	0					
ANR	5311822	CallExpression	"va_arg ( ap , apr_uint32_t )"		5310614	1					
ANR	5311823	Callee	va_arg		5310614	0					
ANR	5311824	Identifier	va_arg		5310614	0					
ANR	5311825	ArgumentList	ap		5310614	1					
ANR	5311826	Argument	ap		5310614	0					
ANR	5311827	Identifier	ap		5310614	0					
ANR	5311828	Argument	apr_uint32_t		5310614	1					
ANR	5311829	Identifier	apr_uint32_t		5310614	0					
ANR	5311830	ElseStatement	else		5310614	0					
ANR	5311831	IfStatement	if ( var_type == IS_SHORT )		5310614	0					
ANR	5311832	Condition	var_type == IS_SHORT	1002:29:30265:30284	5310614	0	True				
ANR	5311833	EqualityExpression	var_type == IS_SHORT		5310614	0		==			
ANR	5311834	Identifier	var_type		5310614	0					
ANR	5311835	Identifier	IS_SHORT		5310614	1					
ANR	5311836	Statement	ui_num	1003:24:30311:30316	5310614	1	True				
ANR	5311837	ElseStatement	else		5310614	0					
ANR	5311838	Statement	ui_num	1005:24:30412:30417	5310614	0	True				
ANR	5311839	Statement	=	1003:31:30318:30318	5310614	1	True				
ANR	5311840	Statement	(	1003:33:30320:30320	5310614	2	True				
ANR	5311841	Statement	unsigned	1003:34:30321:30328	5310614	3	True				
ANR	5311842	Statement	short	1003:43:30330:30334	5310614	4	True				
ANR	5311843	Statement	)	1003:48:30335:30335	5310614	5	True				
ANR	5311844	Statement	va_arg	1003:50:30337:30342	5310614	6	True				
ANR	5311845	Statement	(	1003:56:30343:30343	5310614	7	True				
ANR	5311846	Statement	ap	1003:57:30344:30345	5310614	8	True				
ANR	5311847	Statement	","	1003:59:30346:30346	5310614	9	True				
ANR	5311848	Statement	unsigned	1003:61:30348:30355	5310614	10	True				
ANR	5311849	Statement	int	1003:70:30357:30359	5310614	11	True				
ANR	5311850	Statement	)	1003:73:30360:30360	5310614	12	True				
ANR	5311851	ExpressionStatement		1003:74:30361:30361	5310614	13	True				
ANR	5311852	Statement	=	1005:31:30419:30419	5310614	14	True				
ANR	5311853	Statement	va_arg	1005:33:30421:30426	5310614	15	True				
ANR	5311854	Statement	(	1005:39:30427:30427	5310614	16	True				
ANR	5311855	Statement	ap	1005:40:30428:30429	5310614	17	True				
ANR	5311856	Statement	","	1005:42:30430:30430	5310614	18	True				
ANR	5311857	Statement	unsigned	1005:44:30432:30439	5310614	19	True				
ANR	5311858	Statement	int	1005:53:30441:30443	5310614	20	True				
ANR	5311859	Statement	)	1005:56:30444:30444	5310614	21	True				
ANR	5311860	ExpressionStatement		1005:57:30445:30445	5310614	22	True				
ANR	5311861	ExpressionStatement	"s = conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1006:20:30467:30555	5310614	23	True				
ANR	5311862	AssignmentExpression	"s = conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5311863	Identifier	s		5310614	0					
ANR	5311864	CallExpression	"conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5311865	Callee	conv_p2		5310614	0					
ANR	5311866	Identifier	conv_p2		5310614	0					
ANR	5311867	ArgumentList	ui_num		5310614	1					
ANR	5311868	Argument	ui_num		5310614	0					
ANR	5311869	Identifier	ui_num		5310614	0					
ANR	5311870	Argument	4		5310614	1					
ANR	5311871	PrimaryExpression	4		5310614	0					
ANR	5311872	Argument	* fmt		5310614	2					
ANR	5311873	UnaryOperationExpression	* fmt		5310614	0					
ANR	5311874	UnaryOperator	*		5310614	0					
ANR	5311875	Identifier	fmt		5310614	1					
ANR	5311876	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5311877	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5311878	UnaryOperator	&		5310614	0					
ANR	5311879	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5311880	Identifier	num_buf		5310614	0					
ANR	5311881	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5311882	Argument	& s_len		5310614	4					
ANR	5311883	UnaryOperationExpression	& s_len		5310614	0					
ANR	5311884	UnaryOperator	&		5310614	0					
ANR	5311885	Identifier	s_len		5310614	1					
ANR	5311886	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	1009:16:30591:30643	5310614	18	True				
ANR	5311887	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		5310614	0					
ANR	5311888	Callee	FIX_PRECISION		5310614	0					
ANR	5311889	Identifier	FIX_PRECISION		5310614	0					
ANR	5311890	ArgumentList	adjust_precision		5310614	1					
ANR	5311891	Argument	adjust_precision		5310614	0					
ANR	5311892	Identifier	adjust_precision		5310614	0					
ANR	5311893	Argument	precision		5310614	1					
ANR	5311894	Identifier	precision		5310614	0					
ANR	5311895	Argument	s		5310614	2					
ANR	5311896	Identifier	s		5310614	0					
ANR	5311897	Argument	s_len		5310614	3					
ANR	5311898	Identifier	s_len		5310614	0					
ANR	5311899	IfStatement	if ( alternate_form && ui_num != 0 )		5310614	19					
ANR	5311900	Condition	alternate_form && ui_num != 0	1010:20:30665:30693	5310614	0	True				
ANR	5311901	AndExpression	alternate_form && ui_num != 0		5310614	0		&&			
ANR	5311902	Identifier	alternate_form		5310614	0					
ANR	5311903	EqualityExpression	ui_num != 0		5310614	1		!=			
ANR	5311904	Identifier	ui_num		5310614	0					
ANR	5311905	PrimaryExpression	0		5310614	1					
ANR	5311906	CompoundStatement		280:51:9924:9924	5310614	1					
ANR	5311907	ExpressionStatement	* -- s = * fmt	1011:20:30718:30729	5310614	0	True				
ANR	5311908	AssignmentExpression	* -- s = * fmt		5310614	0		=			
ANR	5311909	UnaryOperationExpression	* -- s		5310614	0					
ANR	5311910	UnaryOperator	*		5310614	0					
ANR	5311911	UnaryExpression	-- s		5310614	1					
ANR	5311912	IncDec	--		5310614	0					
ANR	5311913	Identifier	s		5310614	1					
ANR	5311914	UnaryOperationExpression	* fmt		5310614	1					
ANR	5311915	UnaryOperator	*		5310614	0					
ANR	5311916	Identifier	fmt		5310614	1					
ANR	5311917	ExpressionStatement	* -- s = '0'	1012:20:30775:30785	5310614	1	True				
ANR	5311918	AssignmentExpression	* -- s = '0'		5310614	0		=			
ANR	5311919	UnaryOperationExpression	* -- s		5310614	0					
ANR	5311920	UnaryOperator	*		5310614	0					
ANR	5311921	UnaryExpression	-- s		5310614	1					
ANR	5311922	IncDec	--		5310614	0					
ANR	5311923	Identifier	s		5310614	1					
ANR	5311924	PrimaryExpression	'0'		5310614	1					
ANR	5311925	ExpressionStatement	s_len += 2	1013:20:30807:30817	5310614	2	True				
ANR	5311926	AssignmentExpression	s_len += 2		5310614	0		+=			
ANR	5311927	Identifier	s_len		5310614	0					
ANR	5311928	PrimaryExpression	2		5310614	1					
ANR	5311929	BreakStatement	break ;	1015:16:30853:30858	5310614	20	True				
ANR	5311930	Label	case 's' :	1018:12:30874:30882	5310614	21	True				
ANR	5311931	Statement	s	1019:16:30900:30900	5310614	22	True				
ANR	5311932	Statement	=	1019:18:30902:30902	5310614	23	True				
ANR	5311933	Statement	va_arg	1019:20:30904:30909	5310614	24	True				
ANR	5311934	Statement	(	1019:26:30910:30910	5310614	25	True				
ANR	5311935	Statement	ap	1019:27:30911:30912	5310614	26	True				
ANR	5311936	Statement	","	1019:29:30913:30913	5310614	27	True				
ANR	5311937	Statement	char	1019:31:30915:30918	5310614	28	True				
ANR	5311938	Statement	*	1019:36:30920:30920	5310614	29	True				
ANR	5311939	Statement	)	1019:37:30921:30921	5310614	30	True				
ANR	5311940	ExpressionStatement		1019:38:30922:30922	5310614	31	True				
ANR	5311941	IfStatement	if ( s != NULL )		5310614	32					
ANR	5311942	Condition	s != NULL	1020:20:30944:30952	5310614	0	True				
ANR	5311943	EqualityExpression	s != NULL		5310614	0		!=			
ANR	5311944	Identifier	s		5310614	0					
ANR	5311945	Identifier	NULL		5310614	1					
ANR	5311946	CompoundStatement		290:31:10183:10183	5310614	1					
ANR	5311947	IfStatement	if ( ! adjust_precision )		5310614	0					
ANR	5311948	Condition	! adjust_precision	1021:24:30981:30997	5310614	0	True				
ANR	5311949	UnaryOperationExpression	! adjust_precision		5310614	0					
ANR	5311950	UnaryOperator	!		5310614	0					
ANR	5311951	Identifier	adjust_precision		5310614	1					
ANR	5311952	CompoundStatement		291:43:10228:10228	5310614	1					
ANR	5311953	ExpressionStatement	s_len = strlen ( s )	1022:24:31026:31043	5310614	0	True				
ANR	5311954	AssignmentExpression	s_len = strlen ( s )		5310614	0		=			
ANR	5311955	Identifier	s_len		5310614	0					
ANR	5311956	CallExpression	strlen ( s )		5310614	1					
ANR	5311957	Callee	strlen		5310614	0					
ANR	5311958	Identifier	strlen		5310614	0					
ANR	5311959	ArgumentList	s		5310614	1					
ANR	5311960	Argument	s		5310614	0					
ANR	5311961	Identifier	s		5310614	0					
ANR	5311962	ElseStatement	else		5310614	0					
ANR	5311963	CompoundStatement		317:24:11618:11634	5310614	0					
ANR	5311964	IdentifierDeclStatement	const char * walk ;	1047:24:32390:32406	5310614	0	True				
ANR	5311965	IdentifierDecl	* walk		5310614	0					
ANR	5311966	IdentifierDeclType	const char *		5310614	0					
ANR	5311967	Identifier	walk		5310614	1					
ANR	5311968	ForStatement	"for ( walk = s , s_len = 0 ; ( s_len < precision ) && ( * walk != '\\0' ) ; ++ walk , ++ s_len )"		5310614	1					
ANR	5311969	ForInit	"walk = s , s_len = 0 ;"	1049:29:32438:32457	5310614	0	True				
ANR	5311970	Expression	"walk = s , s_len = 0"		5310614	0					
ANR	5311971	AssignmentExpression	walk = s		5310614	0		=			
ANR	5311972	Identifier	walk		5310614	0					
ANR	5311973	Identifier	s		5310614	1					
ANR	5311974	AssignmentExpression	s_len = 0		5310614	1		=			
ANR	5311975	Identifier	s_len		5310614	0					
ANR	5311976	PrimaryExpression	0		5310614	1					
ANR	5311977	Condition	( s_len < precision ) && ( * walk != '\\0' )	1050:29:32488:32525	5310614	1	True				
ANR	5311978	AndExpression	( s_len < precision ) && ( * walk != '\\0' )		5310614	0		&&			
ANR	5311979	RelationalExpression	s_len < precision		5310614	0		<			
ANR	5311980	Identifier	s_len		5310614	0					
ANR	5311981	Identifier	precision		5310614	1					
ANR	5311982	EqualityExpression	* walk != '\\0'		5310614	1		!=			
ANR	5311983	UnaryOperationExpression	* walk		5310614	0					
ANR	5311984	UnaryOperator	*		5310614	0					
ANR	5311985	Identifier	walk		5310614	1					
ANR	5311986	PrimaryExpression	'\\0'		5310614	1					
ANR	5311987	Expression	"++ walk , ++ s_len"	1051:29:32557:32571	5310614	2	True				
ANR	5311988	UnaryExpression	++ walk		5310614	0					
ANR	5311989	IncDec	++		5310614	0					
ANR	5311990	Identifier	walk		5310614	1					
ANR	5311991	UnaryExpression	++ s_len		5310614	1					
ANR	5311992	IncDec	++		5310614	0					
ANR	5311993	Identifier	s_len		5310614	1					
ANR	5311994	ExpressionStatement		1051:45:32573:32573	5310614	3	True				
ANR	5311995	ElseStatement	else		5310614	0					
ANR	5311996	CompoundStatement		324:21:11864:11864	5310614	0					
ANR	5311997	ExpressionStatement	s = S_NULL	1055:20:32658:32668	5310614	0	True				
ANR	5311998	AssignmentExpression	s = S_NULL		5310614	0		=			
ANR	5311999	Identifier	s		5310614	0					
ANR	5312000	Identifier	S_NULL		5310614	1					
ANR	5312001	ExpressionStatement	s_len = S_NULL_LEN	1056:20:32690:32708	5310614	1	True				
ANR	5312002	AssignmentExpression	s_len = S_NULL_LEN		5310614	0		=			
ANR	5312003	Identifier	s_len		5310614	0					
ANR	5312004	Identifier	S_NULL_LEN		5310614	1					
ANR	5312005	ExpressionStatement	pad_char = ' '	1058:16:32744:32758	5310614	33	True				
ANR	5312006	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5312007	Identifier	pad_char		5310614	0					
ANR	5312008	PrimaryExpression	' '		5310614	1					
ANR	5312009	BreakStatement	break ;	1059:16:32776:32781	5310614	34	True				
ANR	5312010	Label	case 'f' :	1062:12:32797:32805	5310614	35	True				
ANR	5312011	Label	case 'e' :	1063:12:32819:32827	5310614	36	True				
ANR	5312012	Label	case 'E' :	1064:12:32841:32849	5310614	37	True				
ANR	5312013	ExpressionStatement	"fp_num = va_arg ( ap , double )"	1065:16:32867:32894	5310614	38	True				
ANR	5312014	AssignmentExpression	"fp_num = va_arg ( ap , double )"		5310614	0		=			
ANR	5312015	Identifier	fp_num		5310614	0					
ANR	5312016	CallExpression	"va_arg ( ap , double )"		5310614	1					
ANR	5312017	Callee	va_arg		5310614	0					
ANR	5312018	Identifier	va_arg		5310614	0					
ANR	5312019	ArgumentList	ap		5310614	1					
ANR	5312020	Argument	ap		5310614	0					
ANR	5312021	Identifier	ap		5310614	0					
ANR	5312022	Argument	double		5310614	1					
ANR	5312023	Identifier	double		5310614	0					
ANR	5312024	ExpressionStatement	s = NULL	1069:16:33026:33034	5310614	39	True				
ANR	5312025	AssignmentExpression	s = NULL		5310614	0		=			
ANR	5312026	Identifier	s		5310614	0					
ANR	5312027	Identifier	NULL		5310614	1					
ANR	5312028	IfStatement	if ( isnan ( fp_num ) )		5310614	40					
ANR	5312029	Condition	isnan ( fp_num )	1071:20:33074:33086	5310614	0	True				
ANR	5312030	CallExpression	isnan ( fp_num )		5310614	0					
ANR	5312031	Callee	isnan		5310614	0					
ANR	5312032	Identifier	isnan		5310614	0					
ANR	5312033	ArgumentList	fp_num		5310614	1					
ANR	5312034	Argument	fp_num		5310614	0					
ANR	5312035	Identifier	fp_num		5310614	0					
ANR	5312036	CompoundStatement		341:35:12317:12317	5310614	1					
ANR	5312037	ExpressionStatement	s = nan	1072:20:33111:33118	5310614	0	True				
ANR	5312038	AssignmentExpression	s = nan		5310614	0		=			
ANR	5312039	Identifier	s		5310614	0					
ANR	5312040	Identifier	nan		5310614	1					
ANR	5312041	ExpressionStatement	s_len = strlen ( nan )	1073:20:33140:33159	5310614	1	True				
ANR	5312042	AssignmentExpression	s_len = strlen ( nan )		5310614	0		=			
ANR	5312043	Identifier	s_len		5310614	0					
ANR	5312044	CallExpression	strlen ( nan )		5310614	1					
ANR	5312045	Callee	strlen		5310614	0					
ANR	5312046	Identifier	strlen		5310614	0					
ANR	5312047	ArgumentList	nan		5310614	1					
ANR	5312048	Argument	nan		5310614	0					
ANR	5312049	Identifier	nan		5310614	0					
ANR	5312050	IfStatement	if ( ! s && isinf ( fp_num ) )		5310614	41					
ANR	5312051	Condition	! s && isinf ( fp_num )	1077:20:33224:33242	5310614	0	True				
ANR	5312052	AndExpression	! s && isinf ( fp_num )		5310614	0		&&			
ANR	5312053	UnaryOperationExpression	! s		5310614	0					
ANR	5312054	UnaryOperator	!		5310614	0					
ANR	5312055	Identifier	s		5310614	1					
ANR	5312056	CallExpression	isinf ( fp_num )		5310614	1					
ANR	5312057	Callee	isinf		5310614	0					
ANR	5312058	Identifier	isinf		5310614	0					
ANR	5312059	ArgumentList	fp_num		5310614	1					
ANR	5312060	Argument	fp_num		5310614	0					
ANR	5312061	Identifier	fp_num		5310614	0					
ANR	5312062	CompoundStatement		347:41:12473:12473	5310614	1					
ANR	5312063	ExpressionStatement	s = inf	1078:20:33267:33274	5310614	0	True				
ANR	5312064	AssignmentExpression	s = inf		5310614	0		=			
ANR	5312065	Identifier	s		5310614	0					
ANR	5312066	Identifier	inf		5310614	1					
ANR	5312067	ExpressionStatement	s_len = strlen ( inf )	1079:20:33296:33315	5310614	1	True				
ANR	5312068	AssignmentExpression	s_len = strlen ( inf )		5310614	0		=			
ANR	5312069	Identifier	s_len		5310614	0					
ANR	5312070	CallExpression	strlen ( inf )		5310614	1					
ANR	5312071	Callee	strlen		5310614	0					
ANR	5312072	Identifier	strlen		5310614	0					
ANR	5312073	ArgumentList	inf		5310614	1					
ANR	5312074	Argument	inf		5310614	0					
ANR	5312075	Identifier	inf		5310614	0					
ANR	5312076	IfStatement	if ( ! s )		5310614	42					
ANR	5312077	Condition	! s	1082:20:33362:33363	5310614	0	True				
ANR	5312078	UnaryOperationExpression	! s		5310614	0					
ANR	5312079	UnaryOperator	!		5310614	0					
ANR	5312080	Identifier	s		5310614	1					
ANR	5312081	CompoundStatement		352:24:12594:12594	5310614	1					
ANR	5312082	ExpressionStatement	"s = conv_fp ( * fmt , fp_num , alternate_form , ( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision ) , & is_negative , & num_buf [ 1 ] , & s_len )"	1083:20:33388:33588	5310614	0	True				
ANR	5312083	AssignmentExpression	"s = conv_fp ( * fmt , fp_num , alternate_form , ( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision ) , & is_negative , & num_buf [ 1 ] , & s_len )"		5310614	0		=			
ANR	5312084	Identifier	s		5310614	0					
ANR	5312085	CallExpression	"conv_fp ( * fmt , fp_num , alternate_form , ( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision ) , & is_negative , & num_buf [ 1 ] , & s_len )"		5310614	1					
ANR	5312086	Callee	conv_fp		5310614	0					
ANR	5312087	Identifier	conv_fp		5310614	0					
ANR	5312088	ArgumentList	* fmt		5310614	1					
ANR	5312089	Argument	* fmt		5310614	0					
ANR	5312090	UnaryOperationExpression	* fmt		5310614	0					
ANR	5312091	UnaryOperator	*		5310614	0					
ANR	5312092	Identifier	fmt		5310614	1					
ANR	5312093	Argument	fp_num		5310614	1					
ANR	5312094	Identifier	fp_num		5310614	0					
ANR	5312095	Argument	alternate_form		5310614	2					
ANR	5312096	Identifier	alternate_form		5310614	0					
ANR	5312097	Argument	( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision )		5310614	3					
ANR	5312098	CastExpression	( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision )		5310614	0					
ANR	5312099	CastTarget	int		5310614	0					
ANR	5312100	ConditionalExpression	( adjust_precision == NO ) ? FLOAT_DIGITS : precision		5310614	1					
ANR	5312101	Condition	adjust_precision == NO		5310614	0					
ANR	5312102	EqualityExpression	adjust_precision == NO		5310614	0		==			
ANR	5312103	Identifier	adjust_precision		5310614	0					
ANR	5312104	Identifier	NO		5310614	1					
ANR	5312105	Identifier	FLOAT_DIGITS		5310614	1					
ANR	5312106	Identifier	precision		5310614	2					
ANR	5312107	Argument	& is_negative		5310614	4					
ANR	5312108	UnaryOperationExpression	& is_negative		5310614	0					
ANR	5312109	UnaryOperator	&		5310614	0					
ANR	5312110	Identifier	is_negative		5310614	1					
ANR	5312111	Argument	& num_buf [ 1 ]		5310614	5					
ANR	5312112	UnaryOperationExpression	& num_buf [ 1 ]		5310614	0					
ANR	5312113	UnaryOperator	&		5310614	0					
ANR	5312114	ArrayIndexing	num_buf [ 1 ]		5310614	1					
ANR	5312115	Identifier	num_buf		5310614	0					
ANR	5312116	PrimaryExpression	1		5310614	1					
ANR	5312117	Argument	& s_len		5310614	6					
ANR	5312118	UnaryOperationExpression	& s_len		5310614	0					
ANR	5312119	UnaryOperator	&		5310614	0					
ANR	5312120	Identifier	s_len		5310614	1					
ANR	5312121	IfStatement	if ( is_negative )		5310614	1					
ANR	5312122	Condition	is_negative	1086:24:33614:33624	5310614	0	True				
ANR	5312123	Identifier	is_negative		5310614	0					
ANR	5312124	ExpressionStatement	prefix_char = '-'	1087:24:33651:33668	5310614	1	True				
ANR	5312125	AssignmentExpression	prefix_char = '-'		5310614	0		=			
ANR	5312126	Identifier	prefix_char		5310614	0					
ANR	5312127	PrimaryExpression	'-'		5310614	1					
ANR	5312128	ElseStatement	else		5310614	0					
ANR	5312129	IfStatement	if ( print_sign )		5310614	0					
ANR	5312130	Condition	print_sign	1088:29:33699:33708	5310614	0	True				
ANR	5312131	Identifier	print_sign		5310614	0					
ANR	5312132	ExpressionStatement	prefix_char = '+'	1089:24:33735:33752	5310614	1	True				
ANR	5312133	AssignmentExpression	prefix_char = '+'		5310614	0		=			
ANR	5312134	Identifier	prefix_char		5310614	0					
ANR	5312135	PrimaryExpression	'+'		5310614	1					
ANR	5312136	ElseStatement	else		5310614	0					
ANR	5312137	IfStatement	if ( print_blank )		5310614	0					
ANR	5312138	Condition	print_blank	1090:29:33783:33793	5310614	0	True				
ANR	5312139	Identifier	print_blank		5310614	0					
ANR	5312140	ExpressionStatement	prefix_char = ' '	1091:24:33820:33837	5310614	1	True				
ANR	5312141	AssignmentExpression	prefix_char = ' '		5310614	0		=			
ANR	5312142	Identifier	prefix_char		5310614	0					
ANR	5312143	PrimaryExpression	' '		5310614	1					
ANR	5312144	BreakStatement	break ;	1093:16:33873:33878	5310614	43	True				
ANR	5312145	Label	case 'g' :	1096:12:33894:33902	5310614	44	True				
ANR	5312146	Label	case 'G' :	1097:12:33916:33924	5310614	45	True				
ANR	5312147	ExpressionStatement	"fp_num = va_arg ( ap , double )"	1098:16:33942:33969	5310614	46	True				
ANR	5312148	AssignmentExpression	"fp_num = va_arg ( ap , double )"		5310614	0		=			
ANR	5312149	Identifier	fp_num		5310614	0					
ANR	5312150	CallExpression	"va_arg ( ap , double )"		5310614	1					
ANR	5312151	Callee	va_arg		5310614	0					
ANR	5312152	Identifier	va_arg		5310614	0					
ANR	5312153	ArgumentList	ap		5310614	1					
ANR	5312154	Argument	ap		5310614	0					
ANR	5312155	Identifier	ap		5310614	0					
ANR	5312156	Argument	double		5310614	1					
ANR	5312157	Identifier	double		5310614	0					
ANR	5312158	ExpressionStatement	s = NULL	1099:16:33987:33995	5310614	47	True				
ANR	5312159	AssignmentExpression	s = NULL		5310614	0		=			
ANR	5312160	Identifier	s		5310614	0					
ANR	5312161	Identifier	NULL		5310614	1					
ANR	5312162	IfStatement	if ( isnan ( fp_num ) )		5310614	48					
ANR	5312163	Condition	isnan ( fp_num )	1101:20:34035:34047	5310614	0	True				
ANR	5312164	CallExpression	isnan ( fp_num )		5310614	0					
ANR	5312165	Callee	isnan		5310614	0					
ANR	5312166	Identifier	isnan		5310614	0					
ANR	5312167	ArgumentList	fp_num		5310614	1					
ANR	5312168	Argument	fp_num		5310614	0					
ANR	5312169	Identifier	fp_num		5310614	0					
ANR	5312170	CompoundStatement		371:35:13278:13278	5310614	1					
ANR	5312171	ExpressionStatement	s = nan	1102:20:34072:34079	5310614	0	True				
ANR	5312172	AssignmentExpression	s = nan		5310614	0		=			
ANR	5312173	Identifier	s		5310614	0					
ANR	5312174	Identifier	nan		5310614	1					
ANR	5312175	ExpressionStatement	s_len = strlen ( nan )	1103:20:34101:34120	5310614	1	True				
ANR	5312176	AssignmentExpression	s_len = strlen ( nan )		5310614	0		=			
ANR	5312177	Identifier	s_len		5310614	0					
ANR	5312178	CallExpression	strlen ( nan )		5310614	1					
ANR	5312179	Callee	strlen		5310614	0					
ANR	5312180	Identifier	strlen		5310614	0					
ANR	5312181	ArgumentList	nan		5310614	1					
ANR	5312182	Argument	nan		5310614	0					
ANR	5312183	Identifier	nan		5310614	0					
ANR	5312184	IfStatement	if ( ! s && isinf ( fp_num ) )		5310614	49					
ANR	5312185	Condition	! s && isinf ( fp_num )	1107:20:34185:34203	5310614	0	True				
ANR	5312186	AndExpression	! s && isinf ( fp_num )		5310614	0		&&			
ANR	5312187	UnaryOperationExpression	! s		5310614	0					
ANR	5312188	UnaryOperator	!		5310614	0					
ANR	5312189	Identifier	s		5310614	1					
ANR	5312190	CallExpression	isinf ( fp_num )		5310614	1					
ANR	5312191	Callee	isinf		5310614	0					
ANR	5312192	Identifier	isinf		5310614	0					
ANR	5312193	ArgumentList	fp_num		5310614	1					
ANR	5312194	Argument	fp_num		5310614	0					
ANR	5312195	Identifier	fp_num		5310614	0					
ANR	5312196	CompoundStatement		377:41:13434:13434	5310614	1					
ANR	5312197	ExpressionStatement	s = inf	1108:20:34228:34235	5310614	0	True				
ANR	5312198	AssignmentExpression	s = inf		5310614	0		=			
ANR	5312199	Identifier	s		5310614	0					
ANR	5312200	Identifier	inf		5310614	1					
ANR	5312201	ExpressionStatement	s_len = strlen ( inf )	1109:20:34257:34276	5310614	1	True				
ANR	5312202	AssignmentExpression	s_len = strlen ( inf )		5310614	0		=			
ANR	5312203	Identifier	s_len		5310614	0					
ANR	5312204	CallExpression	strlen ( inf )		5310614	1					
ANR	5312205	Callee	strlen		5310614	0					
ANR	5312206	Identifier	strlen		5310614	0					
ANR	5312207	ArgumentList	inf		5310614	1					
ANR	5312208	Argument	inf		5310614	0					
ANR	5312209	Identifier	inf		5310614	0					
ANR	5312210	IfStatement	if ( ! s )		5310614	50					
ANR	5312211	Condition	! s	1112:20:34323:34324	5310614	0	True				
ANR	5312212	UnaryOperationExpression	! s		5310614	0					
ANR	5312213	UnaryOperator	!		5310614	0					
ANR	5312214	Identifier	s		5310614	1					
ANR	5312215	CompoundStatement		382:24:13555:13555	5310614	1					
ANR	5312216	IfStatement	if ( adjust_precision == NO )		5310614	0					
ANR	5312217	Condition	adjust_precision == NO	1113:24:34353:34374	5310614	0	True				
ANR	5312218	EqualityExpression	adjust_precision == NO		5310614	0		==			
ANR	5312219	Identifier	adjust_precision		5310614	0					
ANR	5312220	Identifier	NO		5310614	1					
ANR	5312221	ExpressionStatement	precision = FLOAT_DIGITS	1114:24:34401:34425	5310614	1	True				
ANR	5312222	AssignmentExpression	precision = FLOAT_DIGITS		5310614	0		=			
ANR	5312223	Identifier	precision		5310614	0					
ANR	5312224	Identifier	FLOAT_DIGITS		5310614	1					
ANR	5312225	ElseStatement	else		5310614	0					
ANR	5312226	IfStatement	if ( precision == 0 )		5310614	0					
ANR	5312227	Condition	precision == 0	1115:29:34456:34469	5310614	0	True				
ANR	5312228	EqualityExpression	precision == 0		5310614	0		==			
ANR	5312229	Identifier	precision		5310614	0					
ANR	5312230	PrimaryExpression	0		5310614	1					
ANR	5312231	ExpressionStatement	precision = 1	1116:24:34496:34509	5310614	1	True				
ANR	5312232	AssignmentExpression	precision = 1		5310614	0		=			
ANR	5312233	Identifier	precision		5310614	0					
ANR	5312234	PrimaryExpression	1		5310614	1					
ANR	5312235	ExpressionStatement	"s = apr_gcvt ( fp_num , ( int ) precision , & num_buf [ 1 ] , alternate_form )"	1120:20:34659:34757	5310614	1	True				
ANR	5312236	AssignmentExpression	"s = apr_gcvt ( fp_num , ( int ) precision , & num_buf [ 1 ] , alternate_form )"		5310614	0		=			
ANR	5312237	Identifier	s		5310614	0					
ANR	5312238	CallExpression	"apr_gcvt ( fp_num , ( int ) precision , & num_buf [ 1 ] , alternate_form )"		5310614	1					
ANR	5312239	Callee	apr_gcvt		5310614	0					
ANR	5312240	Identifier	apr_gcvt		5310614	0					
ANR	5312241	ArgumentList	fp_num		5310614	1					
ANR	5312242	Argument	fp_num		5310614	0					
ANR	5312243	Identifier	fp_num		5310614	0					
ANR	5312244	Argument	( int ) precision		5310614	1					
ANR	5312245	CastExpression	( int ) precision		5310614	0					
ANR	5312246	CastTarget	int		5310614	0					
ANR	5312247	Identifier	precision		5310614	1					
ANR	5312248	Argument	& num_buf [ 1 ]		5310614	2					
ANR	5312249	UnaryOperationExpression	& num_buf [ 1 ]		5310614	0					
ANR	5312250	UnaryOperator	&		5310614	0					
ANR	5312251	ArrayIndexing	num_buf [ 1 ]		5310614	1					
ANR	5312252	Identifier	num_buf		5310614	0					
ANR	5312253	PrimaryExpression	1		5310614	1					
ANR	5312254	Argument	alternate_form		5310614	3					
ANR	5312255	Identifier	alternate_form		5310614	0					
ANR	5312256	IfStatement	if ( * s == '-' )		5310614	2					
ANR	5312257	Condition	* s == '-'	1122:24:34783:34791	5310614	0	True				
ANR	5312258	EqualityExpression	* s == '-'		5310614	0		==			
ANR	5312259	UnaryOperationExpression	* s		5310614	0					
ANR	5312260	UnaryOperator	*		5310614	0					
ANR	5312261	Identifier	s		5310614	1					
ANR	5312262	PrimaryExpression	'-'		5310614	1					
ANR	5312263	ExpressionStatement	prefix_char = * s ++	1123:24:34818:34836	5310614	1	True				
ANR	5312264	AssignmentExpression	prefix_char = * s ++		5310614	0		=			
ANR	5312265	Identifier	prefix_char		5310614	0					
ANR	5312266	UnaryOperationExpression	* s ++		5310614	1					
ANR	5312267	UnaryOperator	*		5310614	0					
ANR	5312268	PostIncDecOperationExpression	s ++		5310614	1					
ANR	5312269	Identifier	s		5310614	0					
ANR	5312270	IncDec	++		5310614	1					
ANR	5312271	ElseStatement	else		5310614	0					
ANR	5312272	IfStatement	if ( print_sign )		5310614	0					
ANR	5312273	Condition	print_sign	1124:29:34867:34876	5310614	0	True				
ANR	5312274	Identifier	print_sign		5310614	0					
ANR	5312275	ExpressionStatement	prefix_char = '+'	1125:24:34903:34920	5310614	1	True				
ANR	5312276	AssignmentExpression	prefix_char = '+'		5310614	0		=			
ANR	5312277	Identifier	prefix_char		5310614	0					
ANR	5312278	PrimaryExpression	'+'		5310614	1					
ANR	5312279	ElseStatement	else		5310614	0					
ANR	5312280	IfStatement	if ( print_blank )		5310614	0					
ANR	5312281	Condition	print_blank	1126:29:34951:34961	5310614	0	True				
ANR	5312282	Identifier	print_blank		5310614	0					
ANR	5312283	ExpressionStatement	prefix_char = ' '	1127:24:34988:35005	5310614	1	True				
ANR	5312284	AssignmentExpression	prefix_char = ' '		5310614	0		=			
ANR	5312285	Identifier	prefix_char		5310614	0					
ANR	5312286	PrimaryExpression	' '		5310614	1					
ANR	5312287	ExpressionStatement	s_len = strlen ( s )	1129:20:35028:35045	5310614	3	True				
ANR	5312288	AssignmentExpression	s_len = strlen ( s )		5310614	0		=			
ANR	5312289	Identifier	s_len		5310614	0					
ANR	5312290	CallExpression	strlen ( s )		5310614	1					
ANR	5312291	Callee	strlen		5310614	0					
ANR	5312292	Identifier	strlen		5310614	0					
ANR	5312293	ArgumentList	s		5310614	1					
ANR	5312294	Argument	s		5310614	0					
ANR	5312295	Identifier	s		5310614	0					
ANR	5312296	IfStatement	"if ( alternate_form && ( q = strchr ( s , '.' ) ) == NULL )"		5310614	4					
ANR	5312297	Condition	"alternate_form && ( q = strchr ( s , '.' ) ) == NULL"	1131:24:35072:35117	5310614	0	True				
ANR	5312298	AndExpression	"alternate_form && ( q = strchr ( s , '.' ) ) == NULL"		5310614	0		&&			
ANR	5312299	Identifier	alternate_form		5310614	0					
ANR	5312300	EqualityExpression	"( q = strchr ( s , '.' ) ) == NULL"		5310614	1		==			
ANR	5312301	AssignmentExpression	"q = strchr ( s , '.' )"		5310614	0		=			
ANR	5312302	Identifier	q		5310614	0					
ANR	5312303	CallExpression	"strchr ( s , '.' )"		5310614	1					
ANR	5312304	Callee	strchr		5310614	0					
ANR	5312305	Identifier	strchr		5310614	0					
ANR	5312306	ArgumentList	s		5310614	1					
ANR	5312307	Argument	s		5310614	0					
ANR	5312308	Identifier	s		5310614	0					
ANR	5312309	Argument	'.'		5310614	1					
ANR	5312310	PrimaryExpression	'.'		5310614	0					
ANR	5312311	Identifier	NULL		5310614	1					
ANR	5312312	CompoundStatement		401:72:14348:14348	5310614	1					
ANR	5312313	ExpressionStatement	s [ s_len ++ ] = '.'	1132:24:35146:35162	5310614	0	True				
ANR	5312314	AssignmentExpression	s [ s_len ++ ] = '.'		5310614	0		=			
ANR	5312315	ArrayIndexing	s [ s_len ++ ]		5310614	0					
ANR	5312316	Identifier	s		5310614	0					
ANR	5312317	PostIncDecOperationExpression	s_len ++		5310614	1					
ANR	5312318	Identifier	s_len		5310614	0					
ANR	5312319	IncDec	++		5310614	1					
ANR	5312320	PrimaryExpression	'.'		5310614	1					
ANR	5312321	ExpressionStatement	s [ s_len ] = '\\0'	1133:24:35188:35203	5310614	1	True				
ANR	5312322	AssignmentExpression	s [ s_len ] = '\\0'		5310614	0		=			
ANR	5312323	ArrayIndexing	s [ s_len ]		5310614	0					
ANR	5312324	Identifier	s		5310614	0					
ANR	5312325	Identifier	s_len		5310614	1					
ANR	5312326	PrimaryExpression	'\\0'		5310614	1					
ANR	5312327	IfStatement	"if ( * fmt == 'G' && ( q = strchr ( s , 'e' ) ) != NULL )"		5310614	5					
ANR	5312328	Condition	"* fmt == 'G' && ( q = strchr ( s , 'e' ) ) != NULL"	1135:24:35288:35330	5310614	0	True				
ANR	5312329	AndExpression	"* fmt == 'G' && ( q = strchr ( s , 'e' ) ) != NULL"		5310614	0		&&			
ANR	5312330	EqualityExpression	* fmt == 'G'		5310614	0		==			
ANR	5312331	UnaryOperationExpression	* fmt		5310614	0					
ANR	5312332	UnaryOperator	*		5310614	0					
ANR	5312333	Identifier	fmt		5310614	1					
ANR	5312334	PrimaryExpression	'G'		5310614	1					
ANR	5312335	EqualityExpression	"( q = strchr ( s , 'e' ) ) != NULL"		5310614	1		!=			
ANR	5312336	AssignmentExpression	"q = strchr ( s , 'e' )"		5310614	0		=			
ANR	5312337	Identifier	q		5310614	0					
ANR	5312338	CallExpression	"strchr ( s , 'e' )"		5310614	1					
ANR	5312339	Callee	strchr		5310614	0					
ANR	5312340	Identifier	strchr		5310614	0					
ANR	5312341	ArgumentList	s		5310614	1					
ANR	5312342	Argument	s		5310614	0					
ANR	5312343	Identifier	s		5310614	0					
ANR	5312344	Argument	'e'		5310614	1					
ANR	5312345	PrimaryExpression	'e'		5310614	0					
ANR	5312346	Identifier	NULL		5310614	1					
ANR	5312347	ExpressionStatement	* q = 'E'	1136:24:35357:35365	5310614	1	True				
ANR	5312348	AssignmentExpression	* q = 'E'		5310614	0		=			
ANR	5312349	UnaryOperationExpression	* q		5310614	0					
ANR	5312350	UnaryOperator	*		5310614	0					
ANR	5312351	Identifier	q		5310614	1					
ANR	5312352	PrimaryExpression	'E'		5310614	1					
ANR	5312353	BreakStatement	break ;	1138:16:35401:35406	5310614	51	True				
ANR	5312354	Label	case 'c' :	1141:12:35422:35430	5310614	52	True				
ANR	5312355	ExpressionStatement	"char_buf [ 0 ] = ( char ) ( va_arg ( ap , int ) )"	1142:16:35448:35486	5310614	53	True				
ANR	5312356	AssignmentExpression	"char_buf [ 0 ] = ( char ) ( va_arg ( ap , int ) )"		5310614	0		=			
ANR	5312357	ArrayIndexing	char_buf [ 0 ]		5310614	0					
ANR	5312358	Identifier	char_buf		5310614	0					
ANR	5312359	PrimaryExpression	0		5310614	1					
ANR	5312360	CastExpression	"( char ) ( va_arg ( ap , int ) )"		5310614	1					
ANR	5312361	CastTarget	char		5310614	0					
ANR	5312362	CallExpression	"va_arg ( ap , int )"		5310614	1					
ANR	5312363	Callee	va_arg		5310614	0					
ANR	5312364	Identifier	va_arg		5310614	0					
ANR	5312365	ArgumentList	ap		5310614	1					
ANR	5312366	Argument	ap		5310614	0					
ANR	5312367	Identifier	ap		5310614	0					
ANR	5312368	Argument	int		5310614	1					
ANR	5312369	Identifier	int		5310614	0					
ANR	5312370	ExpressionStatement	s = & char_buf [ 0 ]	1143:16:35504:35520	5310614	54	True				
ANR	5312371	AssignmentExpression	s = & char_buf [ 0 ]		5310614	0		=			
ANR	5312372	Identifier	s		5310614	0					
ANR	5312373	UnaryOperationExpression	& char_buf [ 0 ]		5310614	1					
ANR	5312374	UnaryOperator	&		5310614	0					
ANR	5312375	ArrayIndexing	char_buf [ 0 ]		5310614	1					
ANR	5312376	Identifier	char_buf		5310614	0					
ANR	5312377	PrimaryExpression	0		5310614	1					
ANR	5312378	ExpressionStatement	s_len = 1	1144:16:35538:35547	5310614	55	True				
ANR	5312379	AssignmentExpression	s_len = 1		5310614	0		=			
ANR	5312380	Identifier	s_len		5310614	0					
ANR	5312381	PrimaryExpression	1		5310614	1					
ANR	5312382	ExpressionStatement	pad_char = ' '	1145:16:35565:35579	5310614	56	True				
ANR	5312383	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5312384	Identifier	pad_char		5310614	0					
ANR	5312385	PrimaryExpression	' '		5310614	1					
ANR	5312386	BreakStatement	break ;	1146:16:35597:35602	5310614	57	True				
ANR	5312387	Label	case '%' :	1149:12:35618:35626	5310614	58	True				
ANR	5312388	ExpressionStatement	char_buf [ 0 ] = '%'	1150:16:35644:35661	5310614	59	True				
ANR	5312389	AssignmentExpression	char_buf [ 0 ] = '%'		5310614	0		=			
ANR	5312390	ArrayIndexing	char_buf [ 0 ]		5310614	0					
ANR	5312391	Identifier	char_buf		5310614	0					
ANR	5312392	PrimaryExpression	0		5310614	1					
ANR	5312393	PrimaryExpression	'%'		5310614	1					
ANR	5312394	ExpressionStatement	s = & char_buf [ 0 ]	1151:16:35679:35695	5310614	60	True				
ANR	5312395	AssignmentExpression	s = & char_buf [ 0 ]		5310614	0		=			
ANR	5312396	Identifier	s		5310614	0					
ANR	5312397	UnaryOperationExpression	& char_buf [ 0 ]		5310614	1					
ANR	5312398	UnaryOperator	&		5310614	0					
ANR	5312399	ArrayIndexing	char_buf [ 0 ]		5310614	1					
ANR	5312400	Identifier	char_buf		5310614	0					
ANR	5312401	PrimaryExpression	0		5310614	1					
ANR	5312402	ExpressionStatement	s_len = 1	1152:16:35713:35722	5310614	61	True				
ANR	5312403	AssignmentExpression	s_len = 1		5310614	0		=			
ANR	5312404	Identifier	s_len		5310614	0					
ANR	5312405	PrimaryExpression	1		5310614	1					
ANR	5312406	ExpressionStatement	pad_char = ' '	1153:16:35740:35754	5310614	62	True				
ANR	5312407	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5312408	Identifier	pad_char		5310614	0					
ANR	5312409	PrimaryExpression	' '		5310614	1					
ANR	5312410	BreakStatement	break ;	1154:16:35772:35777	5310614	63	True				
ANR	5312411	Label	case 'n' :	1157:12:35793:35801	5310614	64	True				
ANR	5312412	IfStatement	if ( var_type == IS_QUAD )		5310614	65					
ANR	5312413	Condition	var_type == IS_QUAD	1158:20:35823:35841	5310614	0	True				
ANR	5312414	EqualityExpression	var_type == IS_QUAD		5310614	0		==			
ANR	5312415	Identifier	var_type		5310614	0					
ANR	5312416	Identifier	IS_QUAD		5310614	1					
ANR	5312417	Statement	*	1159:20:35864:35864	5310614	1	True				
ANR	5312418	ElseStatement	else		5310614	0					
ANR	5312419	IfStatement	if ( var_type == IS_LONG )		5310614	0					
ANR	5312420	Condition	var_type == IS_LONG	1160:25:35924:35942	5310614	0	True				
ANR	5312421	EqualityExpression	var_type == IS_LONG		5310614	0		==			
ANR	5312422	Identifier	var_type		5310614	0					
ANR	5312423	Identifier	IS_LONG		5310614	1					
ANR	5312424	Statement	*	1161:20:35965:35965	5310614	1	True				
ANR	5312425	ElseStatement	else		5310614	0					
ANR	5312426	IfStatement	if ( var_type == IS_SHORT )		5310614	0					
ANR	5312427	Condition	var_type == IS_SHORT	1162:25:36018:36037	5310614	0	True				
ANR	5312428	EqualityExpression	var_type == IS_SHORT		5310614	0		==			
ANR	5312429	Identifier	var_type		5310614	0					
ANR	5312430	Identifier	IS_SHORT		5310614	1					
ANR	5312431	Statement	*	1163:20:36060:36060	5310614	1	True				
ANR	5312432	ElseStatement	else		5310614	0					
ANR	5312433	Statement	*	1165:20:36130:36130	5310614	0	True				
ANR	5312434	Statement	(	1159:21:35865:35865	5310614	66	True				
ANR	5312435	Statement	va_arg	1159:22:35866:35871	5310614	67	True				
ANR	5312436	Statement	(	1159:28:35872:35872	5310614	68	True				
ANR	5312437	Statement	ap	1159:29:35873:35874	5310614	69	True				
ANR	5312438	Statement	","	1159:31:35875:35875	5310614	70	True				
ANR	5312439	Statement	apr_int64_t	1159:33:35877:35887	5310614	71	True				
ANR	5312440	Statement	*	1159:45:35889:35889	5310614	72	True				
ANR	5312441	Statement	)	1159:46:35890:35890	5310614	73	True				
ANR	5312442	Statement	)	1159:47:35891:35891	5310614	74	True				
ANR	5312443	Statement	=	1159:49:35893:35893	5310614	75	True				
ANR	5312444	ExpressionStatement	cc	1159:51:35895:35897	5310614	76	True				
ANR	5312445	Identifier	cc		5310614	0					
ANR	5312446	Statement	(	1161:21:35966:35966	5310614	77	True				
ANR	5312447	Statement	va_arg	1161:22:35967:35972	5310614	78	True				
ANR	5312448	Statement	(	1161:28:35973:35973	5310614	79	True				
ANR	5312449	Statement	ap	1161:29:35974:35975	5310614	80	True				
ANR	5312450	Statement	","	1161:31:35976:35976	5310614	81	True				
ANR	5312451	Statement	long	1161:33:35978:35981	5310614	82	True				
ANR	5312452	Statement	*	1161:38:35983:35983	5310614	83	True				
ANR	5312453	Statement	)	1161:39:35984:35984	5310614	84	True				
ANR	5312454	Statement	)	1161:40:35985:35985	5310614	85	True				
ANR	5312455	Statement	=	1161:42:35987:35987	5310614	86	True				
ANR	5312456	ExpressionStatement	cc	1161:44:35989:35991	5310614	87	True				
ANR	5312457	Identifier	cc		5310614	0					
ANR	5312458	Statement	(	1163:21:36061:36061	5310614	88	True				
ANR	5312459	Statement	va_arg	1163:22:36062:36067	5310614	89	True				
ANR	5312460	Statement	(	1163:28:36068:36068	5310614	90	True				
ANR	5312461	Statement	ap	1163:29:36069:36070	5310614	91	True				
ANR	5312462	Statement	","	1163:31:36071:36071	5310614	92	True				
ANR	5312463	Statement	short	1163:33:36073:36077	5310614	93	True				
ANR	5312464	Statement	*	1163:39:36079:36079	5310614	94	True				
ANR	5312465	Statement	)	1163:40:36080:36080	5310614	95	True				
ANR	5312466	Statement	)	1163:41:36081:36081	5310614	96	True				
ANR	5312467	Statement	=	1163:43:36083:36083	5310614	97	True				
ANR	5312468	ExpressionStatement	cc	1163:45:36085:36087	5310614	98	True				
ANR	5312469	Identifier	cc		5310614	0					
ANR	5312470	Statement	(	1165:21:36131:36131	5310614	99	True				
ANR	5312471	Statement	va_arg	1165:22:36132:36137	5310614	100	True				
ANR	5312472	Statement	(	1165:28:36138:36138	5310614	101	True				
ANR	5312473	Statement	ap	1165:29:36139:36140	5310614	102	True				
ANR	5312474	Statement	","	1165:31:36141:36141	5310614	103	True				
ANR	5312475	Statement	int	1165:33:36143:36145	5310614	104	True				
ANR	5312476	Statement	*	1165:37:36147:36147	5310614	105	True				
ANR	5312477	Statement	)	1165:38:36148:36148	5310614	106	True				
ANR	5312478	Statement	)	1165:39:36149:36149	5310614	107	True				
ANR	5312479	Statement	=	1165:41:36151:36151	5310614	108	True				
ANR	5312480	ExpressionStatement	cc	1165:43:36153:36155	5310614	109	True				
ANR	5312481	Identifier	cc		5310614	0					
ANR	5312482	ExpressionStatement	print_something = NO	1166:16:36173:36193	5310614	110	True				
ANR	5312483	AssignmentExpression	print_something = NO		5310614	0		=			
ANR	5312484	Identifier	print_something		5310614	0					
ANR	5312485	Identifier	NO		5310614	1					
ANR	5312486	BreakStatement	break ;	1167:16:36211:36216	5310614	111	True				
ANR	5312487	Label	case 'p' :	1173:12:36380:36388	5310614	112	True				
ANR	5312488	SwitchStatement	switch ( * ++ fmt )		5310614	113					
ANR	5312489	Condition	* ++ fmt	1174:23:36413:36418	5310614	0	True				
ANR	5312490	UnaryOperationExpression	* ++ fmt		5310614	0					
ANR	5312491	UnaryOperator	*		5310614	0					
ANR	5312492	UnaryExpression	++ fmt		5310614	1					
ANR	5312493	IncDec	++		5310614	0					
ANR	5312494	Identifier	fmt		5310614	1					
ANR	5312495	CompoundStatement		444:31:15649:15649	5310614	1					
ANR	5312496	Label	case 'p' :	1181:16:36743:36751	5310614	0	True				
ANR	5312497	IfStatement	if ( sizeof ( void * ) <= sizeof ( apr_uint64_t ) )		5310614	1					
ANR	5312498	Condition	sizeof ( void * ) <= sizeof ( apr_uint64_t )	1183:24:36803:36840	5310614	0	True				
ANR	5312499	RelationalExpression	sizeof ( void * ) <= sizeof ( apr_uint64_t )		5310614	0		<=			
ANR	5312500	SizeofExpression	sizeof ( void * )		5310614	0					
ANR	5312501	Sizeof	sizeof		5310614	0					
ANR	5312502	SizeofOperand	void *		5310614	1					
ANR	5312503	SizeofExpression	sizeof ( apr_uint64_t )		5310614	1					
ANR	5312504	Sizeof	sizeof		5310614	0					
ANR	5312505	SizeofOperand	apr_uint64_t		5310614	1					
ANR	5312506	CompoundStatement		453:64:16071:16071	5310614	1					
ANR	5312507	Statement	ui_quad	1184:24:36869:36875	5310614	0	True				
ANR	5312508	Statement	=	1184:32:36877:36877	5310614	1	True				
ANR	5312509	Statement	(	1184:34:36879:36879	5310614	2	True				
ANR	5312510	Statement	apr_uint64_t	1184:35:36880:36891	5310614	3	True				
ANR	5312511	Statement	)	1184:47:36892:36892	5310614	4	True				
ANR	5312512	Statement	va_arg	1184:49:36894:36899	5310614	5	True				
ANR	5312513	Statement	(	1184:55:36900:36900	5310614	6	True				
ANR	5312514	Statement	ap	1184:56:36901:36902	5310614	7	True				
ANR	5312515	Statement	","	1184:58:36903:36903	5310614	8	True				
ANR	5312516	Statement	void	1184:60:36905:36908	5310614	9	True				
ANR	5312517	Statement	*	1184:65:36910:36910	5310614	10	True				
ANR	5312518	Statement	)	1184:66:36911:36911	5310614	11	True				
ANR	5312519	ExpressionStatement		1184:67:36912:36912	5310614	12	True				
ANR	5312520	ExpressionStatement	"s = conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1185:24:36938:37035	5310614	13	True				
ANR	5312521	AssignmentExpression	"s = conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5312522	Identifier	s		5310614	0					
ANR	5312523	CallExpression	"conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5312524	Callee	conv_p2_quad		5310614	0					
ANR	5312525	Identifier	conv_p2_quad		5310614	0					
ANR	5312526	ArgumentList	ui_quad		5310614	1					
ANR	5312527	Argument	ui_quad		5310614	0					
ANR	5312528	Identifier	ui_quad		5310614	0					
ANR	5312529	Argument	4		5310614	1					
ANR	5312530	PrimaryExpression	4		5310614	0					
ANR	5312531	Argument	'x'		5310614	2					
ANR	5312532	PrimaryExpression	'x'		5310614	0					
ANR	5312533	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5312534	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5312535	UnaryOperator	&		5310614	0					
ANR	5312536	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5312537	Identifier	num_buf		5310614	0					
ANR	5312538	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5312539	Argument	& s_len		5310614	4					
ANR	5312540	UnaryOperationExpression	& s_len		5310614	0					
ANR	5312541	UnaryOperator	&		5310614	0					
ANR	5312542	Identifier	s_len		5310614	1					
ANR	5312543	ElseStatement	else		5310614	0					
ANR	5312544	CompoundStatement		465:25:16598:16598	5310614	0					
ANR	5312545	ExpressionStatement	"s = ( char * ) ""%p"""	1196:24:37396:37412	5310614	0	True				
ANR	5312546	AssignmentExpression	"s = ( char * ) ""%p"""		5310614	0		=			
ANR	5312547	Identifier	s		5310614	0					
ANR	5312548	CastExpression	"( char * ) ""%p"""		5310614	1					
ANR	5312549	CastTarget	char *		5310614	0					
ANR	5312550	PrimaryExpression	"""%p"""		5310614	1					
ANR	5312551	ExpressionStatement	s_len = 2	1197:24:37438:37447	5310614	1	True				
ANR	5312552	AssignmentExpression	s_len = 2		5310614	0		=			
ANR	5312553	Identifier	s_len		5310614	0					
ANR	5312554	PrimaryExpression	2		5310614	1					
ANR	5312555	ExpressionStatement	prefix_char = NUL	1198:24:37473:37490	5310614	2	True				
ANR	5312556	AssignmentExpression	prefix_char = NUL		5310614	0		=			
ANR	5312557	Identifier	prefix_char		5310614	0					
ANR	5312558	Identifier	NUL		5310614	1					
ANR	5312559	ExpressionStatement	pad_char = ' '	1200:20:37534:37548	5310614	2	True				
ANR	5312560	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5312561	Identifier	pad_char		5310614	0					
ANR	5312562	PrimaryExpression	' '		5310614	1					
ANR	5312563	BreakStatement	break ;	1201:20:37570:37575	5310614	3	True				
ANR	5312564	Label	case 'I' :	1205:16:37668:37676	5310614	4	True				
ANR	5312565	CompoundStatement		477:20:16944:16962	5310614	5					
ANR	5312566	IdentifierDeclStatement	apr_sockaddr_t * sa ;	1207:20:37716:37734	5310614	0	True				
ANR	5312567	IdentifierDecl	* sa		5310614	0					
ANR	5312568	IdentifierDeclType	apr_sockaddr_t *		5310614	0					
ANR	5312569	Identifier	sa		5310614	1					
ANR	5312570	Statement	sa	1209:20:37757:37758	5310614	1	True				
ANR	5312571	Statement	=	1209:23:37760:37760	5310614	2	True				
ANR	5312572	Statement	va_arg	1209:25:37762:37767	5310614	3	True				
ANR	5312573	Statement	(	1209:31:37768:37768	5310614	4	True				
ANR	5312574	Statement	ap	1209:32:37769:37770	5310614	5	True				
ANR	5312575	Statement	","	1209:34:37771:37771	5310614	6	True				
ANR	5312576	Statement	apr_sockaddr_t	1209:36:37773:37786	5310614	7	True				
ANR	5312577	Statement	*	1209:51:37788:37788	5310614	8	True				
ANR	5312578	Statement	)	1209:52:37789:37789	5310614	9	True				
ANR	5312579	ExpressionStatement		1209:53:37790:37790	5310614	10	True				
ANR	5312580	IfStatement	if ( sa != NULL )		5310614	11					
ANR	5312581	Condition	sa != NULL	1210:24:37816:37825	5310614	0	True				
ANR	5312582	EqualityExpression	sa != NULL		5310614	0		!=			
ANR	5312583	Identifier	sa		5310614	0					
ANR	5312584	Identifier	NULL		5310614	1					
ANR	5312585	CompoundStatement		480:36:17056:17056	5310614	1					
ANR	5312586	ExpressionStatement	"s = conv_apr_sockaddr ( sa , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1211:24:37854:37911	5310614	0	True				
ANR	5312587	AssignmentExpression	"s = conv_apr_sockaddr ( sa , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5312588	Identifier	s		5310614	0					
ANR	5312589	CallExpression	"conv_apr_sockaddr ( sa , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5312590	Callee	conv_apr_sockaddr		5310614	0					
ANR	5312591	Identifier	conv_apr_sockaddr		5310614	0					
ANR	5312592	ArgumentList	sa		5310614	1					
ANR	5312593	Argument	sa		5310614	0					
ANR	5312594	Identifier	sa		5310614	0					
ANR	5312595	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5312596	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5312597	UnaryOperator	&		5310614	0					
ANR	5312598	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5312599	Identifier	num_buf		5310614	0					
ANR	5312600	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5312601	Argument	& s_len		5310614	2					
ANR	5312602	UnaryOperationExpression	& s_len		5310614	0					
ANR	5312603	UnaryOperator	&		5310614	0					
ANR	5312604	Identifier	s_len		5310614	1					
ANR	5312605	IfStatement	if ( adjust_precision && precision < s_len )		5310614	1					
ANR	5312606	Condition	adjust_precision && precision < s_len	1212:28:37941:37977	5310614	0	True				
ANR	5312607	AndExpression	adjust_precision && precision < s_len		5310614	0		&&			
ANR	5312608	Identifier	adjust_precision		5310614	0					
ANR	5312609	RelationalExpression	precision < s_len		5310614	1		<			
ANR	5312610	Identifier	precision		5310614	0					
ANR	5312611	Identifier	s_len		5310614	1					
ANR	5312612	ExpressionStatement	s_len = precision	1213:28:38008:38025	5310614	1	True				
ANR	5312613	AssignmentExpression	s_len = precision		5310614	0		=			
ANR	5312614	Identifier	s_len		5310614	0					
ANR	5312615	Identifier	precision		5310614	1					
ANR	5312616	ElseStatement	else		5310614	0					
ANR	5312617	CompoundStatement		485:25:17302:17302	5310614	0					
ANR	5312618	ExpressionStatement	s = S_NULL	1216:24:38100:38110	5310614	0	True				
ANR	5312619	AssignmentExpression	s = S_NULL		5310614	0		=			
ANR	5312620	Identifier	s		5310614	0					
ANR	5312621	Identifier	S_NULL		5310614	1					
ANR	5312622	ExpressionStatement	s_len = S_NULL_LEN	1217:24:38136:38154	5310614	1	True				
ANR	5312623	AssignmentExpression	s_len = S_NULL_LEN		5310614	0		=			
ANR	5312624	Identifier	s_len		5310614	0					
ANR	5312625	Identifier	S_NULL_LEN		5310614	1					
ANR	5312626	ExpressionStatement	pad_char = ' '	1219:20:38198:38212	5310614	12	True				
ANR	5312627	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5312628	Identifier	pad_char		5310614	0					
ANR	5312629	PrimaryExpression	' '		5310614	1					
ANR	5312630	BreakStatement	break ;	1221:16:38248:38253	5310614	6	True				
ANR	5312631	Label	case 'A' :	1224:16:38328:38336	5310614	7	True				
ANR	5312632	CompoundStatement		496:20:17604:17622	5310614	8					
ANR	5312633	IdentifierDeclStatement	struct in_addr * ia ;	1226:20:38376:38394	5310614	0	True				
ANR	5312634	IdentifierDecl	* ia		5310614	0					
ANR	5312635	IdentifierDeclType	struct in_addr *		5310614	0					
ANR	5312636	Identifier	ia		5310614	1					
ANR	5312637	Statement	ia	1228:20:38417:38418	5310614	1	True				
ANR	5312638	Statement	=	1228:23:38420:38420	5310614	2	True				
ANR	5312639	Statement	va_arg	1228:25:38422:38427	5310614	3	True				
ANR	5312640	Statement	(	1228:31:38428:38428	5310614	4	True				
ANR	5312641	Statement	ap	1228:32:38429:38430	5310614	5	True				
ANR	5312642	Statement	","	1228:34:38431:38431	5310614	6	True				
ANR	5312643	Statement	struct	1228:36:38433:38438	5310614	7	True				
ANR	5312644	Statement	in_addr	1228:43:38440:38446	5310614	8	True				
ANR	5312645	Statement	*	1228:51:38448:38448	5310614	9	True				
ANR	5312646	Statement	)	1228:52:38449:38449	5310614	10	True				
ANR	5312647	ExpressionStatement		1228:53:38450:38450	5310614	11	True				
ANR	5312648	IfStatement	if ( ia != NULL )		5310614	12					
ANR	5312649	Condition	ia != NULL	1229:24:38476:38485	5310614	0	True				
ANR	5312650	EqualityExpression	ia != NULL		5310614	0		!=			
ANR	5312651	Identifier	ia		5310614	0					
ANR	5312652	Identifier	NULL		5310614	1					
ANR	5312653	CompoundStatement		499:36:17716:17716	5310614	1					
ANR	5312654	ExpressionStatement	"s = conv_in_addr ( ia , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1230:24:38514:38566	5310614	0	True				
ANR	5312655	AssignmentExpression	"s = conv_in_addr ( ia , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5312656	Identifier	s		5310614	0					
ANR	5312657	CallExpression	"conv_in_addr ( ia , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5312658	Callee	conv_in_addr		5310614	0					
ANR	5312659	Identifier	conv_in_addr		5310614	0					
ANR	5312660	ArgumentList	ia		5310614	1					
ANR	5312661	Argument	ia		5310614	0					
ANR	5312662	Identifier	ia		5310614	0					
ANR	5312663	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5312664	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5312665	UnaryOperator	&		5310614	0					
ANR	5312666	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5312667	Identifier	num_buf		5310614	0					
ANR	5312668	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5312669	Argument	& s_len		5310614	2					
ANR	5312670	UnaryOperationExpression	& s_len		5310614	0					
ANR	5312671	UnaryOperator	&		5310614	0					
ANR	5312672	Identifier	s_len		5310614	1					
ANR	5312673	IfStatement	if ( adjust_precision && precision < s_len )		5310614	1					
ANR	5312674	Condition	adjust_precision && precision < s_len	1231:28:38596:38632	5310614	0	True				
ANR	5312675	AndExpression	adjust_precision && precision < s_len		5310614	0		&&			
ANR	5312676	Identifier	adjust_precision		5310614	0					
ANR	5312677	RelationalExpression	precision < s_len		5310614	1		<			
ANR	5312678	Identifier	precision		5310614	0					
ANR	5312679	Identifier	s_len		5310614	1					
ANR	5312680	ExpressionStatement	s_len = precision	1232:28:38663:38680	5310614	1	True				
ANR	5312681	AssignmentExpression	s_len = precision		5310614	0		=			
ANR	5312682	Identifier	s_len		5310614	0					
ANR	5312683	Identifier	precision		5310614	1					
ANR	5312684	ElseStatement	else		5310614	0					
ANR	5312685	CompoundStatement		504:25:17957:17957	5310614	0					
ANR	5312686	ExpressionStatement	s = S_NULL	1235:24:38755:38765	5310614	0	True				
ANR	5312687	AssignmentExpression	s = S_NULL		5310614	0		=			
ANR	5312688	Identifier	s		5310614	0					
ANR	5312689	Identifier	S_NULL		5310614	1					
ANR	5312690	ExpressionStatement	s_len = S_NULL_LEN	1236:24:38791:38809	5310614	1	True				
ANR	5312691	AssignmentExpression	s_len = S_NULL_LEN		5310614	0		=			
ANR	5312692	Identifier	s_len		5310614	0					
ANR	5312693	Identifier	S_NULL_LEN		5310614	1					
ANR	5312694	ExpressionStatement	pad_char = ' '	1238:20:38853:38867	5310614	13	True				
ANR	5312695	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5312696	Identifier	pad_char		5310614	0					
ANR	5312697	PrimaryExpression	' '		5310614	1					
ANR	5312698	BreakStatement	break ;	1240:16:38903:38908	5310614	9	True				
ANR	5312699	Label	case 'm' :	1243:16:38985:38993	5310614	10	True				
ANR	5312700	CompoundStatement		515:20:18261:18278	5310614	11					
ANR	5312701	IdentifierDeclStatement	apr_status_t * mrv ;	1245:20:39033:39050	5310614	0	True				
ANR	5312702	IdentifierDecl	* mrv		5310614	0					
ANR	5312703	IdentifierDeclType	apr_status_t *		5310614	0					
ANR	5312704	Identifier	mrv		5310614	1					
ANR	5312705	Statement	mrv	1247:20:39073:39075	5310614	1	True				
ANR	5312706	Statement	=	1247:24:39077:39077	5310614	2	True				
ANR	5312707	Statement	va_arg	1247:26:39079:39084	5310614	3	True				
ANR	5312708	Statement	(	1247:32:39085:39085	5310614	4	True				
ANR	5312709	Statement	ap	1247:33:39086:39087	5310614	5	True				
ANR	5312710	Statement	","	1247:35:39088:39088	5310614	6	True				
ANR	5312711	Statement	apr_status_t	1247:37:39090:39101	5310614	7	True				
ANR	5312712	Statement	*	1247:50:39103:39103	5310614	8	True				
ANR	5312713	Statement	)	1247:51:39104:39104	5310614	9	True				
ANR	5312714	ExpressionStatement		1247:52:39105:39105	5310614	10	True				
ANR	5312715	IfStatement	if ( mrv != NULL )		5310614	11					
ANR	5312716	Condition	mrv != NULL	1248:24:39131:39141	5310614	0	True				
ANR	5312717	EqualityExpression	mrv != NULL		5310614	0		!=			
ANR	5312718	Identifier	mrv		5310614	0					
ANR	5312719	Identifier	NULL		5310614	1					
ANR	5312720	CompoundStatement		518:37:18372:18372	5310614	1					
ANR	5312721	ExpressionStatement	"s = apr_strerror ( * mrv , num_buf , NUM_BUF_SIZE - 1 )"	1249:24:39170:39217	5310614	0	True				
ANR	5312722	AssignmentExpression	"s = apr_strerror ( * mrv , num_buf , NUM_BUF_SIZE - 1 )"		5310614	0		=			
ANR	5312723	Identifier	s		5310614	0					
ANR	5312724	CallExpression	"apr_strerror ( * mrv , num_buf , NUM_BUF_SIZE - 1 )"		5310614	1					
ANR	5312725	Callee	apr_strerror		5310614	0					
ANR	5312726	Identifier	apr_strerror		5310614	0					
ANR	5312727	ArgumentList	* mrv		5310614	1					
ANR	5312728	Argument	* mrv		5310614	0					
ANR	5312729	UnaryOperationExpression	* mrv		5310614	0					
ANR	5312730	UnaryOperator	*		5310614	0					
ANR	5312731	Identifier	mrv		5310614	1					
ANR	5312732	Argument	num_buf		5310614	1					
ANR	5312733	Identifier	num_buf		5310614	0					
ANR	5312734	Argument	NUM_BUF_SIZE - 1		5310614	2					
ANR	5312735	AdditiveExpression	NUM_BUF_SIZE - 1		5310614	0		-			
ANR	5312736	Identifier	NUM_BUF_SIZE		5310614	0					
ANR	5312737	PrimaryExpression	1		5310614	1					
ANR	5312738	ExpressionStatement	s_len = strlen ( s )	1250:24:39243:39260	5310614	1	True				
ANR	5312739	AssignmentExpression	s_len = strlen ( s )		5310614	0		=			
ANR	5312740	Identifier	s_len		5310614	0					
ANR	5312741	CallExpression	strlen ( s )		5310614	1					
ANR	5312742	Callee	strlen		5310614	0					
ANR	5312743	Identifier	strlen		5310614	0					
ANR	5312744	ArgumentList	s		5310614	1					
ANR	5312745	Argument	s		5310614	0					
ANR	5312746	Identifier	s		5310614	0					
ANR	5312747	ElseStatement	else		5310614	0					
ANR	5312748	CompoundStatement		522:25:18537:18537	5310614	0					
ANR	5312749	ExpressionStatement	s = S_NULL	1253:24:39335:39345	5310614	0	True				
ANR	5312750	AssignmentExpression	s = S_NULL		5310614	0		=			
ANR	5312751	Identifier	s		5310614	0					
ANR	5312752	Identifier	S_NULL		5310614	1					
ANR	5312753	ExpressionStatement	s_len = S_NULL_LEN	1254:24:39371:39389	5310614	1	True				
ANR	5312754	AssignmentExpression	s_len = S_NULL_LEN		5310614	0		=			
ANR	5312755	Identifier	s_len		5310614	0					
ANR	5312756	Identifier	S_NULL_LEN		5310614	1					
ANR	5312757	ExpressionStatement	pad_char = ' '	1256:20:39433:39447	5310614	12	True				
ANR	5312758	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5312759	Identifier	pad_char		5310614	0					
ANR	5312760	PrimaryExpression	' '		5310614	1					
ANR	5312761	BreakStatement	break ;	1258:16:39483:39488	5310614	12	True				
ANR	5312762	Label	case 'T' :	1261:16:39514:39522	5310614	13	True				
ANR	5312763	CompoundStatement		534:20:18810:18830	5310614	14					
ANR	5312764	IdentifierDeclStatement	apr_os_thread_t * tid ;	1264:20:39582:39602	5310614	0	True				
ANR	5312765	IdentifierDecl	* tid		5310614	0					
ANR	5312766	IdentifierDeclType	apr_os_thread_t *		5310614	0					
ANR	5312767	Identifier	tid		5310614	1					
ANR	5312768	Statement	tid	1266:20:39625:39627	5310614	1	True				
ANR	5312769	Statement	=	1266:24:39629:39629	5310614	2	True				
ANR	5312770	Statement	va_arg	1266:26:39631:39636	5310614	3	True				
ANR	5312771	Statement	(	1266:32:39637:39637	5310614	4	True				
ANR	5312772	Statement	ap	1266:33:39638:39639	5310614	5	True				
ANR	5312773	Statement	","	1266:35:39640:39640	5310614	6	True				
ANR	5312774	Statement	apr_os_thread_t	1266:37:39642:39656	5310614	7	True				
ANR	5312775	Statement	*	1266:53:39658:39658	5310614	8	True				
ANR	5312776	Statement	)	1266:54:39659:39659	5310614	9	True				
ANR	5312777	ExpressionStatement		1266:55:39660:39660	5310614	10	True				
ANR	5312778	IfStatement	if ( tid != NULL )		5310614	11					
ANR	5312779	Condition	tid != NULL	1267:24:39686:39696	5310614	0	True				
ANR	5312780	EqualityExpression	tid != NULL		5310614	0		!=			
ANR	5312781	Identifier	tid		5310614	0					
ANR	5312782	Identifier	NULL		5310614	1					
ANR	5312783	CompoundStatement		537:37:18927:18927	5310614	1					
ANR	5312784	ExpressionStatement	"s = conv_os_thread_t ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1268:24:39725:39782	5310614	0	True				
ANR	5312785	AssignmentExpression	"s = conv_os_thread_t ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5312786	Identifier	s		5310614	0					
ANR	5312787	CallExpression	"conv_os_thread_t ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5312788	Callee	conv_os_thread_t		5310614	0					
ANR	5312789	Identifier	conv_os_thread_t		5310614	0					
ANR	5312790	ArgumentList	tid		5310614	1					
ANR	5312791	Argument	tid		5310614	0					
ANR	5312792	Identifier	tid		5310614	0					
ANR	5312793	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5312794	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5312795	UnaryOperator	&		5310614	0					
ANR	5312796	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5312797	Identifier	num_buf		5310614	0					
ANR	5312798	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5312799	Argument	& s_len		5310614	2					
ANR	5312800	UnaryOperationExpression	& s_len		5310614	0					
ANR	5312801	UnaryOperator	&		5310614	0					
ANR	5312802	Identifier	s_len		5310614	1					
ANR	5312803	IfStatement	if ( adjust_precision && precision < s_len )		5310614	1					
ANR	5312804	Condition	adjust_precision && precision < s_len	1269:28:39812:39848	5310614	0	True				
ANR	5312805	AndExpression	adjust_precision && precision < s_len		5310614	0		&&			
ANR	5312806	Identifier	adjust_precision		5310614	0					
ANR	5312807	RelationalExpression	precision < s_len		5310614	1		<			
ANR	5312808	Identifier	precision		5310614	0					
ANR	5312809	Identifier	s_len		5310614	1					
ANR	5312810	ExpressionStatement	s_len = precision	1270:28:39879:39896	5310614	1	True				
ANR	5312811	AssignmentExpression	s_len = precision		5310614	0		=			
ANR	5312812	Identifier	s_len		5310614	0					
ANR	5312813	Identifier	precision		5310614	1					
ANR	5312814	ElseStatement	else		5310614	0					
ANR	5312815	CompoundStatement		542:25:19173:19173	5310614	0					
ANR	5312816	ExpressionStatement	s = S_NULL	1273:24:39971:39981	5310614	0	True				
ANR	5312817	AssignmentExpression	s = S_NULL		5310614	0		=			
ANR	5312818	Identifier	s		5310614	0					
ANR	5312819	Identifier	S_NULL		5310614	1					
ANR	5312820	ExpressionStatement	s_len = S_NULL_LEN	1274:24:40007:40025	5310614	1	True				
ANR	5312821	AssignmentExpression	s_len = S_NULL_LEN		5310614	0		=			
ANR	5312822	Identifier	s_len		5310614	0					
ANR	5312823	Identifier	S_NULL_LEN		5310614	1					
ANR	5312824	ExpressionStatement	pad_char = ' '	1276:20:40069:40083	5310614	12	True				
ANR	5312825	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5312826	Identifier	pad_char		5310614	0					
ANR	5312827	PrimaryExpression	' '		5310614	1					
ANR	5312828	BreakStatement	break ;	1284:20:40280:40285	5310614	15	True				
ANR	5312829	Label	case 't' :	1286:16:40304:40312	5310614	16	True				
ANR	5312830	CompoundStatement		559:20:19600:19620	5310614	17					
ANR	5312831	IdentifierDeclStatement	apr_os_thread_t * tid ;	1289:20:40372:40392	5310614	0	True				
ANR	5312832	IdentifierDecl	* tid		5310614	0					
ANR	5312833	IdentifierDeclType	apr_os_thread_t *		5310614	0					
ANR	5312834	Identifier	tid		5310614	1					
ANR	5312835	Statement	tid	1291:20:40415:40417	5310614	1	True				
ANR	5312836	Statement	=	1291:24:40419:40419	5310614	2	True				
ANR	5312837	Statement	va_arg	1291:26:40421:40426	5310614	3	True				
ANR	5312838	Statement	(	1291:32:40427:40427	5310614	4	True				
ANR	5312839	Statement	ap	1291:33:40428:40429	5310614	5	True				
ANR	5312840	Statement	","	1291:35:40430:40430	5310614	6	True				
ANR	5312841	Statement	apr_os_thread_t	1291:37:40432:40446	5310614	7	True				
ANR	5312842	Statement	*	1291:53:40448:40448	5310614	8	True				
ANR	5312843	Statement	)	1291:54:40449:40449	5310614	9	True				
ANR	5312844	ExpressionStatement		1291:55:40450:40450	5310614	10	True				
ANR	5312845	IfStatement	if ( tid != NULL )		5310614	11					
ANR	5312846	Condition	tid != NULL	1292:24:40476:40486	5310614	0	True				
ANR	5312847	EqualityExpression	tid != NULL		5310614	0		!=			
ANR	5312848	Identifier	tid		5310614	0					
ANR	5312849	Identifier	NULL		5310614	1					
ANR	5312850	CompoundStatement		562:37:19717:19717	5310614	1					
ANR	5312851	ExpressionStatement	"s = conv_os_thread_t_hex ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1293:24:40515:40576	5310614	0	True				
ANR	5312852	AssignmentExpression	"s = conv_os_thread_t_hex ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5312853	Identifier	s		5310614	0					
ANR	5312854	CallExpression	"conv_os_thread_t_hex ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5312855	Callee	conv_os_thread_t_hex		5310614	0					
ANR	5312856	Identifier	conv_os_thread_t_hex		5310614	0					
ANR	5312857	ArgumentList	tid		5310614	1					
ANR	5312858	Argument	tid		5310614	0					
ANR	5312859	Identifier	tid		5310614	0					
ANR	5312860	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5312861	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5312862	UnaryOperator	&		5310614	0					
ANR	5312863	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5312864	Identifier	num_buf		5310614	0					
ANR	5312865	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5312866	Argument	& s_len		5310614	2					
ANR	5312867	UnaryOperationExpression	& s_len		5310614	0					
ANR	5312868	UnaryOperator	&		5310614	0					
ANR	5312869	Identifier	s_len		5310614	1					
ANR	5312870	IfStatement	if ( adjust_precision && precision < s_len )		5310614	1					
ANR	5312871	Condition	adjust_precision && precision < s_len	1294:28:40606:40642	5310614	0	True				
ANR	5312872	AndExpression	adjust_precision && precision < s_len		5310614	0		&&			
ANR	5312873	Identifier	adjust_precision		5310614	0					
ANR	5312874	RelationalExpression	precision < s_len		5310614	1		<			
ANR	5312875	Identifier	precision		5310614	0					
ANR	5312876	Identifier	s_len		5310614	1					
ANR	5312877	ExpressionStatement	s_len = precision	1295:28:40673:40690	5310614	1	True				
ANR	5312878	AssignmentExpression	s_len = precision		5310614	0		=			
ANR	5312879	Identifier	s_len		5310614	0					
ANR	5312880	Identifier	precision		5310614	1					
ANR	5312881	ElseStatement	else		5310614	0					
ANR	5312882	CompoundStatement		567:25:19967:19967	5310614	0					
ANR	5312883	ExpressionStatement	s = S_NULL	1298:24:40765:40775	5310614	0	True				
ANR	5312884	AssignmentExpression	s = S_NULL		5310614	0		=			
ANR	5312885	Identifier	s		5310614	0					
ANR	5312886	Identifier	S_NULL		5310614	1					
ANR	5312887	ExpressionStatement	s_len = S_NULL_LEN	1299:24:40801:40819	5310614	1	True				
ANR	5312888	AssignmentExpression	s_len = S_NULL_LEN		5310614	0		=			
ANR	5312889	Identifier	s_len		5310614	0					
ANR	5312890	Identifier	S_NULL_LEN		5310614	1					
ANR	5312891	ExpressionStatement	pad_char = ' '	1301:20:40863:40877	5310614	12	True				
ANR	5312892	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5312893	Identifier	pad_char		5310614	0					
ANR	5312894	PrimaryExpression	' '		5310614	1					
ANR	5312895	BreakStatement	break ;	1309:20:41074:41079	5310614	18	True				
ANR	5312896	Label	case 'B' :	1312:16:41110:41118	5310614	19	True				
ANR	5312897	Label	case 'F' :	1313:16:41136:41144	5310614	20	True				
ANR	5312898	Label	case 'S' :	1314:16:41162:41170	5310614	21	True				
ANR	5312899	CompoundStatement		587:20:20471:20489	5310614	22					
ANR	5312900	IdentifierDeclStatement	char buf [ 5 ] ;	1316:20:41210:41221	5310614	0	True				
ANR	5312901	IdentifierDecl	buf [ 5 ]		5310614	0					
ANR	5312902	IdentifierDeclType	char [ 5 ]		5310614	0					
ANR	5312903	Identifier	buf		5310614	1					
ANR	5312904	PrimaryExpression	5		5310614	2					
ANR	5312905	IdentifierDeclStatement	apr_off_t size = 0 ;	1317:20:41243:41261	5310614	1	True				
ANR	5312906	IdentifierDecl	size = 0		5310614	0					
ANR	5312907	IdentifierDeclType	apr_off_t		5310614	0					
ANR	5312908	Identifier	size		5310614	1					
ANR	5312909	AssignmentExpression	size = 0		5310614	2		=			
ANR	5312910	Identifier	size		5310614	0					
ANR	5312911	PrimaryExpression	0		5310614	1					
ANR	5312912	IfStatement	if ( * fmt == 'B' )		5310614	2					
ANR	5312913	Condition	* fmt == 'B'	1319:24:41288:41298	5310614	0	True				
ANR	5312914	EqualityExpression	* fmt == 'B'		5310614	0		==			
ANR	5312915	UnaryOperationExpression	* fmt		5310614	0					
ANR	5312916	UnaryOperator	*		5310614	0					
ANR	5312917	Identifier	fmt		5310614	1					
ANR	5312918	PrimaryExpression	'B'		5310614	1					
ANR	5312919	CompoundStatement		589:37:20529:20529	5310614	1					
ANR	5312920	Statement	apr_uint32_t	1320:24:41327:41338	5310614	0	True				
ANR	5312921	Statement	*	1320:37:41340:41340	5310614	1	True				
ANR	5312922	Statement	arg	1320:38:41341:41343	5310614	2	True				
ANR	5312923	Statement	=	1320:42:41345:41345	5310614	3	True				
ANR	5312924	Statement	va_arg	1320:44:41347:41352	5310614	4	True				
ANR	5312925	Statement	(	1320:50:41353:41353	5310614	5	True				
ANR	5312926	Statement	ap	1320:51:41354:41355	5310614	6	True				
ANR	5312927	Statement	","	1320:53:41356:41356	5310614	7	True				
ANR	5312928	Statement	apr_uint32_t	1320:55:41358:41369	5310614	8	True				
ANR	5312929	Statement	*	1320:68:41371:41371	5310614	9	True				
ANR	5312930	Statement	)	1320:69:41372:41372	5310614	10	True				
ANR	5312931	ExpressionStatement		1320:70:41373:41373	5310614	11	True				
ANR	5312932	ExpressionStatement	size = ( arg ) ? * arg : 0	1321:24:41399:41422	5310614	12	True				
ANR	5312933	AssignmentExpression	size = ( arg ) ? * arg : 0		5310614	0		=			
ANR	5312934	Identifier	size		5310614	0					
ANR	5312935	ConditionalExpression	( arg ) ? * arg : 0		5310614	1					
ANR	5312936	Condition	arg		5310614	0					
ANR	5312937	Identifier	arg		5310614	0					
ANR	5312938	UnaryOperationExpression	* arg		5310614	1					
ANR	5312939	UnaryOperator	*		5310614	0					
ANR	5312940	Identifier	arg		5310614	1					
ANR	5312941	PrimaryExpression	0		5310614	2					
ANR	5312942	ElseStatement	else		5310614	0					
ANR	5312943	IfStatement	if ( * fmt == 'F' )		5310614	0					
ANR	5312944	Condition	* fmt == 'F'	1323:29:41475:41485	5310614	0	True				
ANR	5312945	EqualityExpression	* fmt == 'F'		5310614	0		==			
ANR	5312946	UnaryOperationExpression	* fmt		5310614	0					
ANR	5312947	UnaryOperator	*		5310614	0					
ANR	5312948	Identifier	fmt		5310614	1					
ANR	5312949	PrimaryExpression	'F'		5310614	1					
ANR	5312950	CompoundStatement		593:42:20716:20716	5310614	1					
ANR	5312951	Statement	apr_off_t	1324:24:41514:41522	5310614	0	True				
ANR	5312952	Statement	*	1324:34:41524:41524	5310614	1	True				
ANR	5312953	Statement	arg	1324:35:41525:41527	5310614	2	True				
ANR	5312954	Statement	=	1324:39:41529:41529	5310614	3	True				
ANR	5312955	Statement	va_arg	1324:41:41531:41536	5310614	4	True				
ANR	5312956	Statement	(	1324:47:41537:41537	5310614	5	True				
ANR	5312957	Statement	ap	1324:48:41538:41539	5310614	6	True				
ANR	5312958	Statement	","	1324:50:41540:41540	5310614	7	True				
ANR	5312959	Statement	apr_off_t	1324:52:41542:41550	5310614	8	True				
ANR	5312960	Statement	*	1324:62:41552:41552	5310614	9	True				
ANR	5312961	Statement	)	1324:63:41553:41553	5310614	10	True				
ANR	5312962	ExpressionStatement		1324:64:41554:41554	5310614	11	True				
ANR	5312963	ExpressionStatement	size = ( arg ) ? * arg : 0	1325:24:41580:41603	5310614	12	True				
ANR	5312964	AssignmentExpression	size = ( arg ) ? * arg : 0		5310614	0		=			
ANR	5312965	Identifier	size		5310614	0					
ANR	5312966	ConditionalExpression	( arg ) ? * arg : 0		5310614	1					
ANR	5312967	Condition	arg		5310614	0					
ANR	5312968	Identifier	arg		5310614	0					
ANR	5312969	UnaryOperationExpression	* arg		5310614	1					
ANR	5312970	UnaryOperator	*		5310614	0					
ANR	5312971	Identifier	arg		5310614	1					
ANR	5312972	PrimaryExpression	0		5310614	2					
ANR	5312973	ElseStatement	else		5310614	0					
ANR	5312974	CompoundStatement		597:25:20880:20880	5310614	0					
ANR	5312975	Statement	apr_size_t	1328:24:41678:41687	5310614	0	True				
ANR	5312976	Statement	*	1328:35:41689:41689	5310614	1	True				
ANR	5312977	Statement	arg	1328:36:41690:41692	5310614	2	True				
ANR	5312978	Statement	=	1328:40:41694:41694	5310614	3	True				
ANR	5312979	Statement	va_arg	1328:42:41696:41701	5310614	4	True				
ANR	5312980	Statement	(	1328:48:41702:41702	5310614	5	True				
ANR	5312981	Statement	ap	1328:49:41703:41704	5310614	6	True				
ANR	5312982	Statement	","	1328:51:41705:41705	5310614	7	True				
ANR	5312983	Statement	apr_size_t	1328:53:41707:41716	5310614	8	True				
ANR	5312984	Statement	*	1328:64:41718:41718	5310614	9	True				
ANR	5312985	Statement	)	1328:65:41719:41719	5310614	10	True				
ANR	5312986	ExpressionStatement		1328:66:41720:41720	5310614	11	True				
ANR	5312987	ExpressionStatement	size = ( arg ) ? * arg : 0	1329:24:41746:41769	5310614	12	True				
ANR	5312988	AssignmentExpression	size = ( arg ) ? * arg : 0		5310614	0		=			
ANR	5312989	Identifier	size		5310614	0					
ANR	5312990	ConditionalExpression	( arg ) ? * arg : 0		5310614	1					
ANR	5312991	Condition	arg		5310614	0					
ANR	5312992	Identifier	arg		5310614	0					
ANR	5312993	UnaryOperationExpression	* arg		5310614	1					
ANR	5312994	UnaryOperator	*		5310614	0					
ANR	5312995	Identifier	arg		5310614	1					
ANR	5312996	PrimaryExpression	0		5310614	2					
ANR	5312997	ExpressionStatement	"s = apr_strfsize ( size , buf )"	1332:20:41814:41841	5310614	3	True				
ANR	5312998	AssignmentExpression	"s = apr_strfsize ( size , buf )"		5310614	0		=			
ANR	5312999	Identifier	s		5310614	0					
ANR	5313000	CallExpression	"apr_strfsize ( size , buf )"		5310614	1					
ANR	5313001	Callee	apr_strfsize		5310614	0					
ANR	5313002	Identifier	apr_strfsize		5310614	0					
ANR	5313003	ArgumentList	size		5310614	1					
ANR	5313004	Argument	size		5310614	0					
ANR	5313005	Identifier	size		5310614	0					
ANR	5313006	Argument	buf		5310614	1					
ANR	5313007	Identifier	buf		5310614	0					
ANR	5313008	ExpressionStatement	s_len = strlen ( s )	1333:20:41863:41880	5310614	4	True				
ANR	5313009	AssignmentExpression	s_len = strlen ( s )		5310614	0		=			
ANR	5313010	Identifier	s_len		5310614	0					
ANR	5313011	CallExpression	strlen ( s )		5310614	1					
ANR	5313012	Callee	strlen		5310614	0					
ANR	5313013	Identifier	strlen		5310614	0					
ANR	5313014	ArgumentList	s		5310614	1					
ANR	5313015	Argument	s		5310614	0					
ANR	5313016	Identifier	s		5310614	0					
ANR	5313017	ExpressionStatement	pad_char = ' '	1334:20:41902:41916	5310614	5	True				
ANR	5313018	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5313019	Identifier	pad_char		5310614	0					
ANR	5313020	PrimaryExpression	' '		5310614	1					
ANR	5313021	BreakStatement	break ;	1336:16:41952:41957	5310614	23	True				
ANR	5313022	Label	case NUL :	1339:16:41983:41991	5310614	24	True				
ANR	5313023	Identifier	NUL		5310614	0					
ANR	5313024	IfStatement	if ( sizeof ( void * ) <= sizeof ( apr_uint64_t ) )		5310614	25					
ANR	5313025	Condition	sizeof ( void * ) <= sizeof ( apr_uint64_t )	1342:24:42112:42149	5310614	0	True				
ANR	5313026	RelationalExpression	sizeof ( void * ) <= sizeof ( apr_uint64_t )		5310614	0		<=			
ANR	5313027	SizeofExpression	sizeof ( void * )		5310614	0					
ANR	5313028	Sizeof	sizeof		5310614	0					
ANR	5313029	SizeofOperand	void *		5310614	1					
ANR	5313030	SizeofExpression	sizeof ( apr_uint64_t )		5310614	1					
ANR	5313031	Sizeof	sizeof		5310614	0					
ANR	5313032	SizeofOperand	apr_uint64_t		5310614	1					
ANR	5313033	CompoundStatement		612:64:21380:21380	5310614	1					
ANR	5313034	Statement	ui_quad	1343:24:42178:42184	5310614	0	True				
ANR	5313035	Statement	=	1343:32:42186:42186	5310614	1	True				
ANR	5313036	Statement	(	1343:34:42188:42188	5310614	2	True				
ANR	5313037	Statement	apr_uint64_t	1343:35:42189:42200	5310614	3	True				
ANR	5313038	Statement	)	1343:47:42201:42201	5310614	4	True				
ANR	5313039	Statement	va_arg	1343:49:42203:42208	5310614	5	True				
ANR	5313040	Statement	(	1343:55:42209:42209	5310614	6	True				
ANR	5313041	Statement	ap	1343:56:42210:42211	5310614	7	True				
ANR	5313042	Statement	","	1343:58:42212:42212	5310614	8	True				
ANR	5313043	Statement	void	1343:60:42214:42217	5310614	9	True				
ANR	5313044	Statement	*	1343:65:42219:42219	5310614	10	True				
ANR	5313045	Statement	)	1343:66:42220:42220	5310614	11	True				
ANR	5313046	ExpressionStatement		1343:67:42221:42221	5310614	12	True				
ANR	5313047	ExpressionStatement	"s = conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1344:24:42247:42344	5310614	13	True				
ANR	5313048	AssignmentExpression	"s = conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	0		=			
ANR	5313049	Identifier	s		5310614	0					
ANR	5313050	CallExpression	"conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		5310614	1					
ANR	5313051	Callee	conv_p2_quad		5310614	0					
ANR	5313052	Identifier	conv_p2_quad		5310614	0					
ANR	5313053	ArgumentList	ui_quad		5310614	1					
ANR	5313054	Argument	ui_quad		5310614	0					
ANR	5313055	Identifier	ui_quad		5310614	0					
ANR	5313056	Argument	4		5310614	1					
ANR	5313057	PrimaryExpression	4		5310614	0					
ANR	5313058	Argument	'x'		5310614	2					
ANR	5313059	PrimaryExpression	'x'		5310614	0					
ANR	5313060	Argument	& num_buf [ NUM_BUF_SIZE ]		5310614	3					
ANR	5313061	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		5310614	0					
ANR	5313062	UnaryOperator	&		5310614	0					
ANR	5313063	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		5310614	1					
ANR	5313064	Identifier	num_buf		5310614	0					
ANR	5313065	Identifier	NUM_BUF_SIZE		5310614	1					
ANR	5313066	Argument	& s_len		5310614	4					
ANR	5313067	UnaryOperationExpression	& s_len		5310614	0					
ANR	5313068	UnaryOperator	&		5310614	0					
ANR	5313069	Identifier	s_len		5310614	1					
ANR	5313070	ElseStatement	else		5310614	0					
ANR	5313071	CompoundStatement		624:25:21907:21907	5310614	0					
ANR	5313072	ExpressionStatement	"s = ( char * ) ""%p"""	1355:24:42705:42721	5310614	0	True				
ANR	5313073	AssignmentExpression	"s = ( char * ) ""%p"""		5310614	0		=			
ANR	5313074	Identifier	s		5310614	0					
ANR	5313075	CastExpression	"( char * ) ""%p"""		5310614	1					
ANR	5313076	CastTarget	char *		5310614	0					
ANR	5313077	PrimaryExpression	"""%p"""		5310614	1					
ANR	5313078	ExpressionStatement	s_len = 2	1356:24:42747:42756	5310614	1	True				
ANR	5313079	AssignmentExpression	s_len = 2		5310614	0		=			
ANR	5313080	Identifier	s_len		5310614	0					
ANR	5313081	PrimaryExpression	2		5310614	1					
ANR	5313082	ExpressionStatement	prefix_char = NUL	1357:24:42782:42799	5310614	2	True				
ANR	5313083	AssignmentExpression	prefix_char = NUL		5310614	0		=			
ANR	5313084	Identifier	prefix_char		5310614	0					
ANR	5313085	Identifier	NUL		5310614	1					
ANR	5313086	ExpressionStatement	pad_char = ' '	1359:20:42843:42857	5310614	26	True				
ANR	5313087	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5313088	Identifier	pad_char		5310614	0					
ANR	5313089	PrimaryExpression	' '		5310614	1					
ANR	5313090	ExpressionStatement	fmt --	1360:20:42879:42884	5310614	27	True				
ANR	5313091	PostIncDecOperationExpression	fmt --		5310614	0					
ANR	5313092	Identifier	fmt		5310614	0					
ANR	5313093	IncDec	--		5310614	1					
ANR	5313094	BreakStatement	break ;	1361:20:42906:42911	5310614	28	True				
ANR	5313095	Label	default :	1363:16:42930:42937	5310614	29	True				
ANR	5313096	Identifier	default		5310614	0					
ANR	5313097	ExpressionStatement	"s = ( char * ) ""bogus %p"""	1364:20:42959:42981	5310614	30	True				
ANR	5313098	AssignmentExpression	"s = ( char * ) ""bogus %p"""		5310614	0		=			
ANR	5313099	Identifier	s		5310614	0					
ANR	5313100	CastExpression	"( char * ) ""bogus %p"""		5310614	1					
ANR	5313101	CastTarget	char *		5310614	0					
ANR	5313102	PrimaryExpression	"""bogus %p"""		5310614	1					
ANR	5313103	ExpressionStatement	s_len = 8	1365:20:43003:43012	5310614	31	True				
ANR	5313104	AssignmentExpression	s_len = 8		5310614	0		=			
ANR	5313105	Identifier	s_len		5310614	0					
ANR	5313106	PrimaryExpression	8		5310614	1					
ANR	5313107	ExpressionStatement	prefix_char = NUL	1366:20:43034:43051	5310614	32	True				
ANR	5313108	AssignmentExpression	prefix_char = NUL		5310614	0		=			
ANR	5313109	Identifier	prefix_char		5310614	0					
ANR	5313110	Identifier	NUL		5310614	1					
ANR	5313111	Statement	(	1367:20:43073:43073	5310614	33	True				
ANR	5313112	Statement	void	1367:21:43074:43077	5310614	34	True				
ANR	5313113	Statement	)	1367:25:43078:43078	5310614	35	True				
ANR	5313114	Statement	va_arg	1367:26:43079:43084	5310614	36	True				
ANR	5313115	Statement	(	1367:32:43085:43085	5310614	37	True				
ANR	5313116	Statement	ap	1367:33:43086:43087	5310614	38	True				
ANR	5313117	Statement	","	1367:35:43088:43088	5310614	39	True				
ANR	5313118	Statement	void	1367:37:43090:43093	5310614	40	True				
ANR	5313119	Statement	*	1367:42:43095:43095	5310614	41	True				
ANR	5313120	Statement	)	1367:43:43096:43096	5310614	42	True				
ANR	5313121	ExpressionStatement		1367:44:43097:43097	5310614	43	True				
ANR	5313122	BreakStatement	break ;	1368:20:43162:43167	5310614	44	True				
ANR	5313123	BreakStatement	break ;	1370:16:43203:43208	5310614	114	True				
ANR	5313124	Label	case NUL :	1372:12:43223:43231	5310614	115	True				
ANR	5313125	Identifier	NUL		5310614	0					
ANR	5313126	ContinueStatement	continue ;	1377:16:43387:43395	5310614	116	True				
ANR	5313127	Label	default :	1390:12:43968:43975	5310614	117	True				
ANR	5313128	Identifier	default		5310614	0					
ANR	5313129	ExpressionStatement	char_buf [ 0 ] = '%'	1391:16:43993:44010	5310614	118	True				
ANR	5313130	AssignmentExpression	char_buf [ 0 ] = '%'		5310614	0		=			
ANR	5313131	ArrayIndexing	char_buf [ 0 ]		5310614	0					
ANR	5313132	Identifier	char_buf		5310614	0					
ANR	5313133	PrimaryExpression	0		5310614	1					
ANR	5313134	PrimaryExpression	'%'		5310614	1					
ANR	5313135	ExpressionStatement	char_buf [ 1 ] = * fmt	1392:16:44028:44046	5310614	119	True				
ANR	5313136	AssignmentExpression	char_buf [ 1 ] = * fmt		5310614	0		=			
ANR	5313137	ArrayIndexing	char_buf [ 1 ]		5310614	0					
ANR	5313138	Identifier	char_buf		5310614	0					
ANR	5313139	PrimaryExpression	1		5310614	1					
ANR	5313140	UnaryOperationExpression	* fmt		5310614	1					
ANR	5313141	UnaryOperator	*		5310614	0					
ANR	5313142	Identifier	fmt		5310614	1					
ANR	5313143	ExpressionStatement	s = char_buf	1393:16:44064:44076	5310614	120	True				
ANR	5313144	AssignmentExpression	s = char_buf		5310614	0		=			
ANR	5313145	Identifier	s		5310614	0					
ANR	5313146	Identifier	char_buf		5310614	1					
ANR	5313147	ExpressionStatement	s_len = 2	1394:16:44094:44103	5310614	121	True				
ANR	5313148	AssignmentExpression	s_len = 2		5310614	0		=			
ANR	5313149	Identifier	s_len		5310614	0					
ANR	5313150	PrimaryExpression	2		5310614	1					
ANR	5313151	ExpressionStatement	pad_char = ' '	1395:16:44121:44135	5310614	122	True				
ANR	5313152	AssignmentExpression	pad_char = ' '		5310614	0		=			
ANR	5313153	Identifier	pad_char		5310614	0					
ANR	5313154	PrimaryExpression	' '		5310614	1					
ANR	5313155	BreakStatement	break ;	1396:16:44153:44158	5310614	123	True				
ANR	5313156	IfStatement	if ( prefix_char != NUL && s != S_NULL && s != char_buf )		5310614	9					
ANR	5313157	Condition	prefix_char != NUL && s != S_NULL && s != char_buf	1399:16:44191:44240	5310614	0	True				
ANR	5313158	AndExpression	prefix_char != NUL && s != S_NULL && s != char_buf		5310614	0		&&			
ANR	5313159	EqualityExpression	prefix_char != NUL		5310614	0		!=			
ANR	5313160	Identifier	prefix_char		5310614	0					
ANR	5313161	Identifier	NUL		5310614	1					
ANR	5313162	AndExpression	s != S_NULL && s != char_buf		5310614	1		&&			
ANR	5313163	EqualityExpression	s != S_NULL		5310614	0		!=			
ANR	5313164	Identifier	s		5310614	0					
ANR	5313165	Identifier	S_NULL		5310614	1					
ANR	5313166	EqualityExpression	s != char_buf		5310614	1		!=			
ANR	5313167	Identifier	s		5310614	0					
ANR	5313168	Identifier	char_buf		5310614	1					
ANR	5313169	CompoundStatement		669:68:23471:23471	5310614	1					
ANR	5313170	ExpressionStatement	* -- s = prefix_char	1400:16:44261:44279	5310614	0	True				
ANR	5313171	AssignmentExpression	* -- s = prefix_char		5310614	0		=			
ANR	5313172	UnaryOperationExpression	* -- s		5310614	0					
ANR	5313173	UnaryOperator	*		5310614	0					
ANR	5313174	UnaryExpression	-- s		5310614	1					
ANR	5313175	IncDec	--		5310614	0					
ANR	5313176	Identifier	s		5310614	1					
ANR	5313177	Identifier	prefix_char		5310614	1					
ANR	5313178	ExpressionStatement	s_len ++	1401:16:44297:44304	5310614	1	True				
ANR	5313179	PostIncDecOperationExpression	s_len ++		5310614	0					
ANR	5313180	Identifier	s_len		5310614	0					
ANR	5313181	IncDec	++		5310614	1					
ANR	5313182	IfStatement	if ( adjust_width && adjust == RIGHT && min_width > s_len )		5310614	10					
ANR	5313183	Condition	adjust_width && adjust == RIGHT && min_width > s_len	1404:16:44337:44388	5310614	0	True				
ANR	5313184	AndExpression	adjust_width && adjust == RIGHT && min_width > s_len		5310614	0		&&			
ANR	5313185	Identifier	adjust_width		5310614	0					
ANR	5313186	AndExpression	adjust == RIGHT && min_width > s_len		5310614	1		&&			
ANR	5313187	EqualityExpression	adjust == RIGHT		5310614	0		==			
ANR	5313188	Identifier	adjust		5310614	0					
ANR	5313189	Identifier	RIGHT		5310614	1					
ANR	5313190	RelationalExpression	min_width > s_len		5310614	1		>			
ANR	5313191	Identifier	min_width		5310614	0					
ANR	5313192	Identifier	s_len		5310614	1					
ANR	5313193	CompoundStatement		674:70:23619:23619	5310614	1					
ANR	5313194	IfStatement	if ( pad_char == '0' && prefix_char != NUL )		5310614	0					
ANR	5313195	Condition	pad_char == '0' && prefix_char != NUL	1405:20:44413:44449	5310614	0	True				
ANR	5313196	AndExpression	pad_char == '0' && prefix_char != NUL		5310614	0		&&			
ANR	5313197	EqualityExpression	pad_char == '0'		5310614	0		==			
ANR	5313198	Identifier	pad_char		5310614	0					
ANR	5313199	PrimaryExpression	'0'		5310614	1					
ANR	5313200	EqualityExpression	prefix_char != NUL		5310614	1		!=			
ANR	5313201	Identifier	prefix_char		5310614	0					
ANR	5313202	Identifier	NUL		5310614	1					
ANR	5313203	CompoundStatement		675:59:23680:23680	5310614	1					
ANR	5313204	ExpressionStatement	"INS_CHAR ( * s , sp , bep , cc )"	1406:20:44474:44499	5310614	0	True				
ANR	5313205	CallExpression	"INS_CHAR ( * s , sp , bep , cc )"		5310614	0					
ANR	5313206	Callee	INS_CHAR		5310614	0					
ANR	5313207	Identifier	INS_CHAR		5310614	0					
ANR	5313208	ArgumentList	* s		5310614	1					
ANR	5313209	Argument	* s		5310614	0					
ANR	5313210	UnaryOperationExpression	* s		5310614	0					
ANR	5313211	UnaryOperator	*		5310614	0					
ANR	5313212	Identifier	s		5310614	1					
ANR	5313213	Argument	sp		5310614	1					
ANR	5313214	Identifier	sp		5310614	0					
ANR	5313215	Argument	bep		5310614	2					
ANR	5313216	Identifier	bep		5310614	0					
ANR	5313217	Argument	cc		5310614	3					
ANR	5313218	Identifier	cc		5310614	0					
ANR	5313219	ExpressionStatement	s ++	1407:20:44521:44524	5310614	1	True				
ANR	5313220	PostIncDecOperationExpression	s ++		5310614	0					
ANR	5313221	Identifier	s		5310614	0					
ANR	5313222	IncDec	++		5310614	1					
ANR	5313223	ExpressionStatement	s_len --	1408:20:44546:44553	5310614	2	True				
ANR	5313224	PostIncDecOperationExpression	s_len --		5310614	0					
ANR	5313225	Identifier	s_len		5310614	0					
ANR	5313226	IncDec	--		5310614	1					
ANR	5313227	ExpressionStatement	min_width --	1409:20:44575:44586	5310614	3	True				
ANR	5313228	PostIncDecOperationExpression	min_width --		5310614	0					
ANR	5313229	Identifier	min_width		5310614	0					
ANR	5313230	IncDec	--		5310614	1					
ANR	5313231	ExpressionStatement	"PAD ( min_width , s_len , pad_char )"	1411:16:44622:44653	5310614	1	True				
ANR	5313232	CallExpression	"PAD ( min_width , s_len , pad_char )"		5310614	0					
ANR	5313233	Callee	PAD		5310614	0					
ANR	5313234	Identifier	PAD		5310614	0					
ANR	5313235	ArgumentList	min_width		5310614	1					
ANR	5313236	Argument	min_width		5310614	0					
ANR	5313237	Identifier	min_width		5310614	0					
ANR	5313238	Argument	s_len		5310614	1					
ANR	5313239	Identifier	s_len		5310614	0					
ANR	5313240	Argument	pad_char		5310614	2					
ANR	5313241	Identifier	pad_char		5310614	0					
ANR	5313242	IfStatement	if ( print_something == YES )		5310614	11					
ANR	5313243	Condition	print_something == YES	1417:16:44753:44774	5310614	0	True				
ANR	5313244	EqualityExpression	print_something == YES		5310614	0		==			
ANR	5313245	Identifier	print_something		5310614	0					
ANR	5313246	Identifier	YES		5310614	1					
ANR	5313247	CompoundStatement		687:40:24005:24005	5310614	1					
ANR	5313248	ForStatement	for ( i = s_len ; i != 0 ; i -- )		5310614	0					
ANR	5313249	ForInit	i = s_len ;	1418:21:44800:44809	5310614	0	True				
ANR	5313250	AssignmentExpression	i = s_len		5310614	0		=			
ANR	5313251	Identifier	i		5310614	0					
ANR	5313252	Identifier	s_len		5310614	1					
ANR	5313253	Condition	i != 0	1418:32:44811:44816	5310614	1	True				
ANR	5313254	EqualityExpression	i != 0		5310614	0		!=			
ANR	5313255	Identifier	i		5310614	0					
ANR	5313256	PrimaryExpression	0		5310614	1					
ANR	5313257	PostIncDecOperationExpression	i --	1418:40:44819:44821	5310614	2	True				
ANR	5313258	Identifier	i		5310614	0					
ANR	5313259	IncDec	--		5310614	1					
ANR	5313260	CompoundStatement		688:45:24052:24052	5310614	3					
ANR	5313261	ExpressionStatement	"INS_CHAR ( * s , sp , bep , cc )"	1419:22:44848:44873	5310614	0	True				
ANR	5313262	CallExpression	"INS_CHAR ( * s , sp , bep , cc )"		5310614	0					
ANR	5313263	Callee	INS_CHAR		5310614	0					
ANR	5313264	Identifier	INS_CHAR		5310614	0					
ANR	5313265	ArgumentList	* s		5310614	1					
ANR	5313266	Argument	* s		5310614	0					
ANR	5313267	UnaryOperationExpression	* s		5310614	0					
ANR	5313268	UnaryOperator	*		5310614	0					
ANR	5313269	Identifier	s		5310614	1					
ANR	5313270	Argument	sp		5310614	1					
ANR	5313271	Identifier	sp		5310614	0					
ANR	5313272	Argument	bep		5310614	2					
ANR	5313273	Identifier	bep		5310614	0					
ANR	5313274	Argument	cc		5310614	3					
ANR	5313275	Identifier	cc		5310614	0					
ANR	5313276	ExpressionStatement	s ++	1420:20:44895:44898	5310614	1	True				
ANR	5313277	PostIncDecOperationExpression	s ++		5310614	0					
ANR	5313278	Identifier	s		5310614	0					
ANR	5313279	IncDec	++		5310614	1					
ANR	5313280	IfStatement	if ( adjust_width && adjust == LEFT && min_width > s_len )		5310614	12					
ANR	5313281	Condition	adjust_width && adjust == LEFT && min_width > s_len	1424:16:44949:44999	5310614	0	True				
ANR	5313282	AndExpression	adjust_width && adjust == LEFT && min_width > s_len		5310614	0		&&			
ANR	5313283	Identifier	adjust_width		5310614	0					
ANR	5313284	AndExpression	adjust == LEFT && min_width > s_len		5310614	1		&&			
ANR	5313285	EqualityExpression	adjust == LEFT		5310614	0		==			
ANR	5313286	Identifier	adjust		5310614	0					
ANR	5313287	Identifier	LEFT		5310614	1					
ANR	5313288	RelationalExpression	min_width > s_len		5310614	1		>			
ANR	5313289	Identifier	min_width		5310614	0					
ANR	5313290	Identifier	s_len		5310614	1					
ANR	5313291	ExpressionStatement	"PAD ( min_width , s_len , pad_char )"	1425:16:45018:45049	5310614	1	True				
ANR	5313292	CallExpression	"PAD ( min_width , s_len , pad_char )"		5310614	0					
ANR	5313293	Callee	PAD		5310614	0					
ANR	5313294	Identifier	PAD		5310614	0					
ANR	5313295	ArgumentList	min_width		5310614	1					
ANR	5313296	Argument	min_width		5310614	0					
ANR	5313297	Identifier	min_width		5310614	0					
ANR	5313298	Argument	s_len		5310614	1					
ANR	5313299	Identifier	s_len		5310614	0					
ANR	5313300	Argument	pad_char		5310614	2					
ANR	5313301	Identifier	pad_char		5310614	0					
ANR	5313302	ExpressionStatement	fmt ++	1427:8:45069:45074	5310614	1	True				
ANR	5313303	PostIncDecOperationExpression	fmt ++		5310614	0					
ANR	5313304	Identifier	fmt		5310614	0					
ANR	5313305	IncDec	++		5310614	1					
ANR	5313306	ExpressionStatement	vbuff -> curpos = sp	1429:4:45086:45104	5310614	39	True				
ANR	5313307	AssignmentExpression	vbuff -> curpos = sp		5310614	0		=			
ANR	5313308	PtrMemberAccess	vbuff -> curpos		5310614	0					
ANR	5313309	Identifier	vbuff		5310614	0					
ANR	5313310	Identifier	curpos		5310614	1					
ANR	5313311	Identifier	sp		5310614	1					
ANR	5313312	ReturnStatement	return cc ;	1431:4:45111:45120	5310614	40	True				
ANR	5313313	Identifier	cc		5310614	0					
ANR	5313314	ReturnType	static int		5310614	1					
ANR	5313315	Identifier	apr_vformatter		5310614	2					
ANR	5313316	ParameterList	"int ( * flush_func ) ( apr_vformatter_buff_t * ) , apr_vformatter_buff_t * vbuff , const char * fmt , va_list ap"		5310614	3					
ANR	5313317	Parameter	int ( * flush_func ) ( apr_vformatter_buff_t * )	729:26:20664:20705	5310614	0	True				
ANR	5313318	ParameterType	(( apr_vformatter_buff_t * ) int) *		5310614	0					
ANR	5313319	Identifier	flush_func		5310614	1					
ANR	5313320	Parameter	apr_vformatter_buff_t * vbuff	730:4:20712:20739	5310614	1	True				
ANR	5313321	ParameterType	apr_vformatter_buff_t *		5310614	0					
ANR	5313322	Identifier	vbuff		5310614	1					
ANR	5313323	Parameter	const char * fmt	730:34:20742:20756	5310614	2	True				
ANR	5313324	ParameterType	const char *		5310614	0					
ANR	5313325	Identifier	fmt		5310614	1					
ANR	5313326	Parameter	va_list ap	730:51:20759:20768	5310614	3	True				
ANR	5313327	ParameterType	va_list		5310614	0					
ANR	5313328	Identifier	ap		5310614	1					
ANR	5313329	CFGEntryNode	ENTRY		5310614		True				
ANR	5313330	CFGExitNode	EXIT		5310614		True				
ANR	5313331	InfiniteForNode	true		5310614		True				
ANR	5313332	Symbol	APR_OFF_T_FMT		5310614						
ANR	5313333	Symbol	* ++ fmt		5310614						
ANR	5313334	Symbol	strchr		5310614						
ANR	5313335	Symbol	conv_fp		5310614						
ANR	5313336	Symbol	& is_negative		5310614						
ANR	5313337	Symbol	strncmp		5310614						
ANR	5313338	Symbol	conv_p2		5310614						
ANR	5313339	Symbol	apr_isdigit		5310614						
ANR	5313340	Symbol	ia		5310614						
ANR	5313341	Symbol	nan		5310614						
ANR	5313342	Symbol	* mrv		5310614						
ANR	5313343	Symbol	va_arg		5310614						
ANR	5313344	Symbol	vbuff -> curpos		5310614						
ANR	5313345	Symbol	LEFT		5310614						
ANR	5313346	Symbol	double		5310614						
ANR	5313347	Symbol	apr_uint64_t		5310614						
ANR	5313348	Symbol	apr_strerror		5310614						
ANR	5313349	Symbol	ap		5310614						
ANR	5313350	Symbol	* s_len		5310614						
ANR	5313351	Symbol	conv_os_thread_t_hex		5310614						
ANR	5313352	Symbol	size		5310614						
ANR	5313353	Symbol	* arg		5310614						
ANR	5313354	Symbol	apr_strfsize		5310614						
ANR	5313355	Symbol	i_num		5310614						
ANR	5313356	Symbol	flush_func		5310614						
ANR	5313357	Symbol	print_sign		5310614						
ANR	5313358	Symbol	isnan		5310614						
ANR	5313359	Symbol	FLOAT_DIGITS		5310614						
ANR	5313360	Symbol	sa		5310614						
ANR	5313361	Symbol	pad_char		5310614						
ANR	5313362	Symbol	var_type		5310614						
ANR	5313363	Symbol	arg		5310614						
ANR	5313364	Symbol	RIGHT		5310614						
ANR	5313365	Symbol	* walk		5310614						
ANR	5313366	Symbol	sp		5310614						
ANR	5313367	Symbol	* vbuff		5310614						
ANR	5313368	Symbol	apr_islower		5310614						
ANR	5313369	Symbol	cc		5310614						
ANR	5313370	Symbol	print_something		5310614						
ANR	5313371	Symbol	conv_os_thread_t		5310614						
ANR	5313372	Symbol	vbuff		5310614						
ANR	5313373	Symbol	NUL		5310614						
ANR	5313374	Symbol	i		5310614						
ANR	5313375	Symbol	* char_buf		5310614						
ANR	5313376	Symbol	mrv		5310614						
ANR	5313377	Symbol	q		5310614						
ANR	5313378	Symbol	buf		5310614						
ANR	5313379	Symbol	s		5310614						
ANR	5313380	Symbol	apr_uint32_t		5310614						
ANR	5313381	Symbol	IS_INT		5310614						
ANR	5313382	Symbol	v		5310614						
ANR	5313383	Symbol	& s_len		5310614						
ANR	5313384	Symbol	precision		5310614						
ANR	5313385	Symbol	isinf		5310614						
ANR	5313386	Symbol	fmt		5310614						
ANR	5313387	Symbol	bep		5310614						
ANR	5313388	Symbol	tid		5310614						
ANR	5313389	Symbol	strlen		5310614						
ANR	5313390	Symbol	adjust_precision		5310614						
ANR	5313391	Symbol	IS_QUAD		5310614						
ANR	5313392	Symbol	apr_int32_t		5310614						
ANR	5313393	Symbol	conv_p2_quad		5310614						
ANR	5313394	Symbol	char_buf		5310614						
ANR	5313395	Symbol	NULL		5310614						
ANR	5313396	Symbol	* -- s		5310614						
ANR	5313397	Symbol	IS_SHORT		5310614						
ANR	5313398	Symbol	conv_10_quad		5310614						
ANR	5313399	Symbol	adjust		5310614						
ANR	5313400	Symbol	is_negative		5310614						
ANR	5313401	Symbol	conv_10		5310614						
ANR	5313402	Symbol	vbuff -> endpos		5310614						
ANR	5313403	Symbol	adjust_width		5310614						
ANR	5313404	Symbol	ui_num		5310614						
ANR	5313405	Symbol	* s ++		5310614						
ANR	5313406	Symbol	i_quad		5310614						
ANR	5313407	Symbol	NO		5310614						
ANR	5313408	Symbol	YES		5310614						
ANR	5313409	Symbol	ui_quad		5310614						
ANR	5313410	Symbol	s_len		5310614						
ANR	5313411	Symbol	* fmt		5310614						
ANR	5313412	Symbol	apr_gcvt		5310614						
ANR	5313413	Symbol	conv_in_addr		5310614						
ANR	5313414	Symbol	IS_LONG		5310614						
ANR	5313415	Symbol	print_blank		5310614						
ANR	5313416	Symbol	min_width		5310614						
ANR	5313417	Symbol	inf		5310614						
ANR	5313418	Symbol	S_NULL_LEN		5310614						
ANR	5313419	Symbol	* APR_INT64_T_FMT		5310614						
ANR	5313420	Symbol	alternate_form		5310614						
ANR	5313421	Symbol	int		5310614						
ANR	5313422	Symbol	* APR_OFF_T_FMT		5310614						
ANR	5313423	Symbol	S_NULL		5310614						
ANR	5313424	Symbol	prefix_char		5310614						
ANR	5313425	Symbol	fp_num		5310614						
ANR	5313426	Symbol	APR_INT64_T_FMT		5310614						
ANR	5313427	Symbol	apr_int64_t		5310614						
ANR	5313428	Symbol	NUM_BUF_SIZE		5310614						
ANR	5313429	Symbol	conv_apr_sockaddr		5310614						
ANR	5313430	Symbol	num_buf		5310614						
ANR	5313431	Symbol	* q		5310614						
ANR	5313432	Symbol	* s		5310614						
ANR	5313433	Symbol	walk		5310614						
ANR	5313434	Function	snprintf_flush	1435:0:45126:45349							
ANR	5313435	FunctionDef	snprintf_flush (apr_vformatter_buff_t * vbuff)		5313434	0					
ANR	5313436	CompoundStatement		1436:0:45182:45349	5313434	0					
ANR	5313437	ReturnStatement	return - 1 ;	1440:4:45338:45347	5313434	0	True				
ANR	5313438	UnaryOperationExpression	- 1		5313434	0					
ANR	5313439	UnaryOperator	-		5313434	0					
ANR	5313440	PrimaryExpression	1		5313434	1					
ANR	5313441	ReturnType	static int		5313434	1					
ANR	5313442	Identifier	snprintf_flush		5313434	2					
ANR	5313443	ParameterList	apr_vformatter_buff_t * vbuff		5313434	3					
ANR	5313444	Parameter	apr_vformatter_buff_t * vbuff	1435:26:45152:45179	5313434	0	True				
ANR	5313445	ParameterType	apr_vformatter_buff_t *		5313434	0					
ANR	5313446	Identifier	vbuff		5313434	1					
ANR	5313447	CFGEntryNode	ENTRY		5313434		True				
ANR	5313448	CFGExitNode	EXIT		5313434		True				
ANR	5313449	Symbol	vbuff		5313434						
ANR	5313450	Function	gs_snprintf	1443:0:45352:46328							
ANR	5313451	FunctionDef	"gs_snprintf (char * buf , int len , const char * format)"		5313450	0					
ANR	5313452	CompoundStatement		1445:0:45450:46328	5313450	0					
ANR	5313453	IdentifierDeclStatement	int cc ;	1446:4:45456:45462	5313450	0	True				
ANR	5313454	IdentifierDecl	cc		5313450	0					
ANR	5313455	IdentifierDeclType	int		5313450	0					
ANR	5313456	Identifier	cc		5313450	1					
ANR	5313457	IdentifierDeclStatement	va_list ap ;	1447:4:45468:45478	5313450	1	True				
ANR	5313458	IdentifierDecl	ap		5313450	0					
ANR	5313459	IdentifierDeclType	va_list		5313450	0					
ANR	5313460	Identifier	ap		5313450	1					
ANR	5313461	IdentifierDeclStatement	apr_vformatter_buff_t vbuff ;	1448:4:45484:45511	5313450	2	True				
ANR	5313462	IdentifierDecl	vbuff		5313450	0					
ANR	5313463	IdentifierDeclType	apr_vformatter_buff_t		5313450	0					
ANR	5313464	Identifier	vbuff		5313450	1					
ANR	5313465	IfStatement	if ( len == 0 )		5313450	3					
ANR	5313466	Condition	len == 0	1450:8:45522:45529	5313450	0	True				
ANR	5313467	EqualityExpression	len == 0		5313450	0		==			
ANR	5313468	Identifier	len		5313450	0					
ANR	5313469	PrimaryExpression	0		5313450	1					
ANR	5313470	CompoundStatement		6:18:81:81	5313450	1					
ANR	5313471	ExpressionStatement	vbuff . curpos = NULL	1458:8:45944:45963	5313450	0	True				
ANR	5313472	AssignmentExpression	vbuff . curpos = NULL		5313450	0		=			
ANR	5313473	MemberAccess	vbuff . curpos		5313450	0					
ANR	5313474	Identifier	vbuff		5313450	0					
ANR	5313475	Identifier	curpos		5313450	1					
ANR	5313476	Identifier	NULL		5313450	1					
ANR	5313477	ExpressionStatement	vbuff . endpos = NULL	1459:8:45973:45992	5313450	1	True				
ANR	5313478	AssignmentExpression	vbuff . endpos = NULL		5313450	0		=			
ANR	5313479	MemberAccess	vbuff . endpos		5313450	0					
ANR	5313480	Identifier	vbuff		5313450	0					
ANR	5313481	Identifier	endpos		5313450	1					
ANR	5313482	Identifier	NULL		5313450	1					
ANR	5313483	ElseStatement	else		5313450	0					
ANR	5313484	CompoundStatement		16:11:554:554	5313450	0					
ANR	5313485	ExpressionStatement	vbuff . curpos = buf	1462:8:46062:46080	5313450	0	True				
ANR	5313486	AssignmentExpression	vbuff . curpos = buf		5313450	0		=			
ANR	5313487	MemberAccess	vbuff . curpos		5313450	0					
ANR	5313488	Identifier	vbuff		5313450	0					
ANR	5313489	Identifier	curpos		5313450	1					
ANR	5313490	Identifier	buf		5313450	1					
ANR	5313491	ExpressionStatement	vbuff . endpos = buf + len - 1	1463:8:46090:46118	5313450	1	True				
ANR	5313492	AssignmentExpression	vbuff . endpos = buf + len - 1		5313450	0		=			
ANR	5313493	MemberAccess	vbuff . endpos		5313450	0					
ANR	5313494	Identifier	vbuff		5313450	0					
ANR	5313495	Identifier	endpos		5313450	1					
ANR	5313496	AdditiveExpression	buf + len - 1		5313450	1		+			
ANR	5313497	Identifier	buf		5313450	0					
ANR	5313498	AdditiveExpression	len - 1		5313450	1		-			
ANR	5313499	Identifier	len		5313450	0					
ANR	5313500	PrimaryExpression	1		5313450	1					
ANR	5313501	ExpressionStatement	"va_start ( ap , format )"	1465:4:46130:46150	5313450	4	True				
ANR	5313502	CallExpression	"va_start ( ap , format )"		5313450	0					
ANR	5313503	Callee	va_start		5313450	0					
ANR	5313504	Identifier	va_start		5313450	0					
ANR	5313505	ArgumentList	ap		5313450	1					
ANR	5313506	Argument	ap		5313450	0					
ANR	5313507	Identifier	ap		5313450	0					
ANR	5313508	Argument	format		5313450	1					
ANR	5313509	Identifier	format		5313450	0					
ANR	5313510	ExpressionStatement	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"	1466:4:46156:46211	5313450	5	True				
ANR	5313511	AssignmentExpression	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		5313450	0		=			
ANR	5313512	Identifier	cc		5313450	0					
ANR	5313513	CallExpression	"apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		5313450	1					
ANR	5313514	Callee	apr_vformatter		5313450	0					
ANR	5313515	Identifier	apr_vformatter		5313450	0					
ANR	5313516	ArgumentList	snprintf_flush		5313450	1					
ANR	5313517	Argument	snprintf_flush		5313450	0					
ANR	5313518	Identifier	snprintf_flush		5313450	0					
ANR	5313519	Argument	& vbuff		5313450	1					
ANR	5313520	UnaryOperationExpression	& vbuff		5313450	0					
ANR	5313521	UnaryOperator	&		5313450	0					
ANR	5313522	Identifier	vbuff		5313450	1					
ANR	5313523	Argument	format		5313450	2					
ANR	5313524	Identifier	format		5313450	0					
ANR	5313525	Argument	ap		5313450	3					
ANR	5313526	Identifier	ap		5313450	0					
ANR	5313527	ExpressionStatement	va_end ( ap )	1467:4:46217:46227	5313450	6	True				
ANR	5313528	CallExpression	va_end ( ap )		5313450	0					
ANR	5313529	Callee	va_end		5313450	0					
ANR	5313530	Identifier	va_end		5313450	0					
ANR	5313531	ArgumentList	ap		5313450	1					
ANR	5313532	Argument	ap		5313450	0					
ANR	5313533	Identifier	ap		5313450	0					
ANR	5313534	IfStatement	if ( len != 0 )		5313450	7					
ANR	5313535	Condition	len != 0	1468:8:46237:46244	5313450	0	True				
ANR	5313536	EqualityExpression	len != 0		5313450	0		!=			
ANR	5313537	Identifier	len		5313450	0					
ANR	5313538	PrimaryExpression	0		5313450	1					
ANR	5313539	CompoundStatement		24:18:796:796	5313450	1					
ANR	5313540	ExpressionStatement	* vbuff . curpos = '\\0'	1469:8:46257:46277	5313450	0	True				
ANR	5313541	AssignmentExpression	* vbuff . curpos = '\\0'		5313450	0		=			
ANR	5313542	UnaryOperationExpression	* vbuff . curpos		5313450	0					
ANR	5313543	UnaryOperator	*		5313450	0					
ANR	5313544	MemberAccess	vbuff . curpos		5313450	1					
ANR	5313545	Identifier	vbuff		5313450	0					
ANR	5313546	Identifier	curpos		5313450	1					
ANR	5313547	PrimaryExpression	'\\0'		5313450	1					
ANR	5313548	ReturnStatement	return ( cc == - 1 ) ? ( int ) len - 1 : cc ;	1471:4:46289:46326	5313450	8	True				
ANR	5313549	ConditionalExpression	( cc == - 1 ) ? ( int ) len - 1 : cc		5313450	0					
ANR	5313550	Condition	cc == - 1		5313450	0					
ANR	5313551	EqualityExpression	cc == - 1		5313450	0		==			
ANR	5313552	Identifier	cc		5313450	0					
ANR	5313553	UnaryOperationExpression	- 1		5313450	1					
ANR	5313554	UnaryOperator	-		5313450	0					
ANR	5313555	PrimaryExpression	1		5313450	1					
ANR	5313556	AdditiveExpression	( int ) len - 1		5313450	1		-			
ANR	5313557	CastExpression	( int ) len		5313450	0					
ANR	5313558	CastTarget	int		5313450	0					
ANR	5313559	Identifier	len		5313450	1					
ANR	5313560	PrimaryExpression	1		5313450	1					
ANR	5313561	Identifier	cc		5313450	2					
ANR	5313562	ReturnType	int		5313450	1					
ANR	5313563	Identifier	gs_snprintf		5313450	2					
ANR	5313564	ParameterList	"char * buf , int len , const char * format"		5313450	3					
ANR	5313565	Parameter	char * buf	1443:16:45368:45376	5313450	0	True				
ANR	5313566	ParameterType	char *		5313450	0					
ANR	5313567	Identifier	buf		5313450	1					
ANR	5313568	Parameter	int len	1443:27:45379:45385	5313450	1	True				
ANR	5313569	ParameterType	int		5313450	0					
ANR	5313570	Identifier	len		5313450	1					
ANR	5313571	Parameter	const char * format	1444:37:45425:45442	5313450	2	True				
ANR	5313572	ParameterType	const char *		5313450	0					
ANR	5313573	Identifier	format		5313450	1					
ANR	5313574	CFGEntryNode	ENTRY		5313450		True				
ANR	5313575	CFGExitNode	EXIT		5313450		True				
ANR	5313576	Symbol	cc		5313450						
ANR	5313577	Symbol	* vbuff . curpos		5313450						
ANR	5313578	Symbol	NULL		5313450						
ANR	5313579	Symbol	vbuff		5313450						
ANR	5313580	Symbol	format		5313450						
ANR	5313581	Symbol	vbuff . curpos		5313450						
ANR	5313582	Symbol	snprintf_flush		5313450						
ANR	5313583	Symbol	ap		5313450						
ANR	5313584	Symbol	buf		5313450						
ANR	5313585	Symbol	len		5313450						
ANR	5313586	Symbol	vbuff . endpos		5313450						
ANR	5313587	Symbol	& vbuff		5313450						
ANR	5313588	Symbol	apr_vformatter		5313450						
ANR	5313589	Symbol	* vbuff		5313450						
ANR	5313590	Function	gs_sprintf	1474:0:46331:46702							
ANR	5313591	FunctionDef	"gs_sprintf (char * buf , const char * format)"		5313590	0					
ANR	5313592	CompoundStatement		1475:0:46382:46702	5313590	0					
ANR	5313593	IdentifierDeclStatement	int cc ;	1476:4:46388:46394	5313590	0	True				
ANR	5313594	IdentifierDecl	cc		5313590	0					
ANR	5313595	IdentifierDeclType	int		5313590	0					
ANR	5313596	Identifier	cc		5313590	1					
ANR	5313597	IdentifierDeclStatement	va_list ap ;	1477:4:46400:46410	5313590	1	True				
ANR	5313598	IdentifierDecl	ap		5313590	0					
ANR	5313599	IdentifierDeclType	va_list		5313590	0					
ANR	5313600	Identifier	ap		5313590	1					
ANR	5313601	IdentifierDeclStatement	apr_vformatter_buff_t vbuff ;	1478:4:46416:46443	5313590	2	True				
ANR	5313602	IdentifierDecl	vbuff		5313590	0					
ANR	5313603	IdentifierDeclType	apr_vformatter_buff_t		5313590	0					
ANR	5313604	Identifier	vbuff		5313590	1					
ANR	5313605	ExpressionStatement	vbuff . curpos = buf	1481:4:46493:46511	5313590	3	True				
ANR	5313606	AssignmentExpression	vbuff . curpos = buf		5313590	0		=			
ANR	5313607	MemberAccess	vbuff . curpos		5313590	0					
ANR	5313608	Identifier	vbuff		5313590	0					
ANR	5313609	Identifier	curpos		5313590	1					
ANR	5313610	Identifier	buf		5313590	1					
ANR	5313611	ExpressionStatement	vbuff . endpos = buf + NUM_BUF_SIZE - 1	1482:4:46517:46554	5313590	4	True				
ANR	5313612	AssignmentExpression	vbuff . endpos = buf + NUM_BUF_SIZE - 1		5313590	0		=			
ANR	5313613	MemberAccess	vbuff . endpos		5313590	0					
ANR	5313614	Identifier	vbuff		5313590	0					
ANR	5313615	Identifier	endpos		5313590	1					
ANR	5313616	AdditiveExpression	buf + NUM_BUF_SIZE - 1		5313590	1		+			
ANR	5313617	Identifier	buf		5313590	0					
ANR	5313618	AdditiveExpression	NUM_BUF_SIZE - 1		5313590	1		-			
ANR	5313619	Identifier	NUM_BUF_SIZE		5313590	0					
ANR	5313620	PrimaryExpression	1		5313590	1					
ANR	5313621	ExpressionStatement	"va_start ( ap , format )"	1484:4:46561:46581	5313590	5	True				
ANR	5313622	CallExpression	"va_start ( ap , format )"		5313590	0					
ANR	5313623	Callee	va_start		5313590	0					
ANR	5313624	Identifier	va_start		5313590	0					
ANR	5313625	ArgumentList	ap		5313590	1					
ANR	5313626	Argument	ap		5313590	0					
ANR	5313627	Identifier	ap		5313590	0					
ANR	5313628	Argument	format		5313590	1					
ANR	5313629	Identifier	format		5313590	0					
ANR	5313630	ExpressionStatement	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"	1485:4:46587:46642	5313590	6	True				
ANR	5313631	AssignmentExpression	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		5313590	0		=			
ANR	5313632	Identifier	cc		5313590	0					
ANR	5313633	CallExpression	"apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		5313590	1					
ANR	5313634	Callee	apr_vformatter		5313590	0					
ANR	5313635	Identifier	apr_vformatter		5313590	0					
ANR	5313636	ArgumentList	snprintf_flush		5313590	1					
ANR	5313637	Argument	snprintf_flush		5313590	0					
ANR	5313638	Identifier	snprintf_flush		5313590	0					
ANR	5313639	Argument	& vbuff		5313590	1					
ANR	5313640	UnaryOperationExpression	& vbuff		5313590	0					
ANR	5313641	UnaryOperator	&		5313590	0					
ANR	5313642	Identifier	vbuff		5313590	1					
ANR	5313643	Argument	format		5313590	2					
ANR	5313644	Identifier	format		5313590	0					
ANR	5313645	Argument	ap		5313590	3					
ANR	5313646	Identifier	ap		5313590	0					
ANR	5313647	ExpressionStatement	va_end ( ap )	1486:4:46648:46658	5313590	7	True				
ANR	5313648	CallExpression	va_end ( ap )		5313590	0					
ANR	5313649	Callee	va_end		5313590	0					
ANR	5313650	Identifier	va_end		5313590	0					
ANR	5313651	ArgumentList	ap		5313590	1					
ANR	5313652	Argument	ap		5313590	0					
ANR	5313653	Identifier	ap		5313590	0					
ANR	5313654	ExpressionStatement	* vbuff . curpos = '\\0'	1487:4:46664:46684	5313590	8	True				
ANR	5313655	AssignmentExpression	* vbuff . curpos = '\\0'		5313590	0		=			
ANR	5313656	UnaryOperationExpression	* vbuff . curpos		5313590	0					
ANR	5313657	UnaryOperator	*		5313590	0					
ANR	5313658	MemberAccess	vbuff . curpos		5313590	1					
ANR	5313659	Identifier	vbuff		5313590	0					
ANR	5313660	Identifier	curpos		5313590	1					
ANR	5313661	PrimaryExpression	'\\0'		5313590	1					
ANR	5313662	ReturnStatement	return cc ;	1489:4:46691:46700	5313590	9	True				
ANR	5313663	Identifier	cc		5313590	0					
ANR	5313664	ReturnType	int		5313590	1					
ANR	5313665	Identifier	gs_sprintf		5313590	2					
ANR	5313666	ParameterList	"char * buf , const char * format"		5313590	3					
ANR	5313667	Parameter	char * buf	1474:15:46346:46354	5313590	0	True				
ANR	5313668	ParameterType	char *		5313590	0					
ANR	5313669	Identifier	buf		5313590	1					
ANR	5313670	Parameter	const char * format	1474:26:46357:46374	5313590	1	True				
ANR	5313671	ParameterType	const char *		5313590	0					
ANR	5313672	Identifier	format		5313590	1					
ANR	5313673	CFGEntryNode	ENTRY		5313590		True				
ANR	5313674	CFGExitNode	EXIT		5313590		True				
ANR	5313675	Symbol	cc		5313590						
ANR	5313676	Symbol	* vbuff . curpos		5313590						
ANR	5313677	Symbol	vbuff		5313590						
ANR	5313678	Symbol	format		5313590						
ANR	5313679	Symbol	vbuff . curpos		5313590						
ANR	5313680	Symbol	snprintf_flush		5313590						
ANR	5313681	Symbol	ap		5313590						
ANR	5313682	Symbol	buf		5313590						
ANR	5313683	Symbol	NUM_BUF_SIZE		5313590						
ANR	5313684	Symbol	vbuff . endpos		5313590						
ANR	5313685	Symbol	& vbuff		5313590						
ANR	5313686	Symbol	apr_vformatter		5313590						
ANR	5313687	Symbol	* vbuff		5313590						
ANR	5313688	Function	gs_vsnprintf	1493:0:46706:47254							
ANR	5313689	FunctionDef	"gs_vsnprintf (char * buf , int len , const char * format , va_list ap)"		5313688	0					
ANR	5313690	CompoundStatement		1495:0:46806:47254	5313688	0					
ANR	5313691	IdentifierDeclStatement	int cc ;	1496:4:46812:46818	5313688	0	True				
ANR	5313692	IdentifierDecl	cc		5313688	0					
ANR	5313693	IdentifierDeclType	int		5313688	0					
ANR	5313694	Identifier	cc		5313688	1					
ANR	5313695	IdentifierDeclStatement	apr_vformatter_buff_t vbuff ;	1497:4:46824:46851	5313688	1	True				
ANR	5313696	IdentifierDecl	vbuff		5313688	0					
ANR	5313697	IdentifierDeclType	apr_vformatter_buff_t		5313688	0					
ANR	5313698	Identifier	vbuff		5313688	1					
ANR	5313699	IfStatement	if ( len == 0 )		5313688	2					
ANR	5313700	Condition	len == 0	1499:8:46862:46869	5313688	0	True				
ANR	5313701	EqualityExpression	len == 0		5313688	0		==			
ANR	5313702	Identifier	len		5313688	0					
ANR	5313703	PrimaryExpression	0		5313688	1					
ANR	5313704	CompoundStatement		5:18:65:65	5313688	1					
ANR	5313705	ExpressionStatement	vbuff . curpos = NULL	1501:8:46911:46930	5313688	0	True				
ANR	5313706	AssignmentExpression	vbuff . curpos = NULL		5313688	0		=			
ANR	5313707	MemberAccess	vbuff . curpos		5313688	0					
ANR	5313708	Identifier	vbuff		5313688	0					
ANR	5313709	Identifier	curpos		5313688	1					
ANR	5313710	Identifier	NULL		5313688	1					
ANR	5313711	ExpressionStatement	vbuff . endpos = NULL	1502:8:46940:46959	5313688	1	True				
ANR	5313712	AssignmentExpression	vbuff . endpos = NULL		5313688	0		=			
ANR	5313713	MemberAccess	vbuff . endpos		5313688	0					
ANR	5313714	Identifier	vbuff		5313688	0					
ANR	5313715	Identifier	endpos		5313688	1					
ANR	5313716	Identifier	NULL		5313688	1					
ANR	5313717	ElseStatement	else		5313688	0					
ANR	5313718	CompoundStatement		9:11:165:165	5313688	0					
ANR	5313719	ExpressionStatement	vbuff . curpos = buf	1505:8:47029:47047	5313688	0	True				
ANR	5313720	AssignmentExpression	vbuff . curpos = buf		5313688	0		=			
ANR	5313721	MemberAccess	vbuff . curpos		5313688	0					
ANR	5313722	Identifier	vbuff		5313688	0					
ANR	5313723	Identifier	curpos		5313688	1					
ANR	5313724	Identifier	buf		5313688	1					
ANR	5313725	ExpressionStatement	vbuff . endpos = buf + len - 1	1506:8:47057:47085	5313688	1	True				
ANR	5313726	AssignmentExpression	vbuff . endpos = buf + len - 1		5313688	0		=			
ANR	5313727	MemberAccess	vbuff . endpos		5313688	0					
ANR	5313728	Identifier	vbuff		5313688	0					
ANR	5313729	Identifier	endpos		5313688	1					
ANR	5313730	AdditiveExpression	buf + len - 1		5313688	1		+			
ANR	5313731	Identifier	buf		5313688	0					
ANR	5313732	AdditiveExpression	len - 1		5313688	1		-			
ANR	5313733	Identifier	len		5313688	0					
ANR	5313734	PrimaryExpression	1		5313688	1					
ANR	5313735	ExpressionStatement	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"	1508:4:47097:47152	5313688	3	True				
ANR	5313736	AssignmentExpression	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		5313688	0		=			
ANR	5313737	Identifier	cc		5313688	0					
ANR	5313738	CallExpression	"apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		5313688	1					
ANR	5313739	Callee	apr_vformatter		5313688	0					
ANR	5313740	Identifier	apr_vformatter		5313688	0					
ANR	5313741	ArgumentList	snprintf_flush		5313688	1					
ANR	5313742	Argument	snprintf_flush		5313688	0					
ANR	5313743	Identifier	snprintf_flush		5313688	0					
ANR	5313744	Argument	& vbuff		5313688	1					
ANR	5313745	UnaryOperationExpression	& vbuff		5313688	0					
ANR	5313746	UnaryOperator	&		5313688	0					
ANR	5313747	Identifier	vbuff		5313688	1					
ANR	5313748	Argument	format		5313688	2					
ANR	5313749	Identifier	format		5313688	0					
ANR	5313750	Argument	ap		5313688	3					
ANR	5313751	Identifier	ap		5313688	0					
ANR	5313752	IfStatement	if ( len != 0 )		5313688	4					
ANR	5313753	Condition	len != 0	1509:8:47162:47169	5313688	0	True				
ANR	5313754	EqualityExpression	len != 0		5313688	0		!=			
ANR	5313755	Identifier	len		5313688	0					
ANR	5313756	PrimaryExpression	0		5313688	1					
ANR	5313757	CompoundStatement		15:18:365:365	5313688	1					
ANR	5313758	ExpressionStatement	* vbuff . curpos = '\\0'	1510:8:47182:47202	5313688	0	True				
ANR	5313759	AssignmentExpression	* vbuff . curpos = '\\0'		5313688	0		=			
ANR	5313760	UnaryOperationExpression	* vbuff . curpos		5313688	0					
ANR	5313761	UnaryOperator	*		5313688	0					
ANR	5313762	MemberAccess	vbuff . curpos		5313688	1					
ANR	5313763	Identifier	vbuff		5313688	0					
ANR	5313764	Identifier	curpos		5313688	1					
ANR	5313765	PrimaryExpression	'\\0'		5313688	1					
ANR	5313766	ReturnStatement	return ( cc == - 1 ) ? ( int ) len - 1 : cc ;	1513:4:47215:47252	5313688	5	True				
ANR	5313767	ConditionalExpression	( cc == - 1 ) ? ( int ) len - 1 : cc		5313688	0					
ANR	5313768	Condition	cc == - 1		5313688	0					
ANR	5313769	EqualityExpression	cc == - 1		5313688	0		==			
ANR	5313770	Identifier	cc		5313688	0					
ANR	5313771	UnaryOperationExpression	- 1		5313688	1					
ANR	5313772	UnaryOperator	-		5313688	0					
ANR	5313773	PrimaryExpression	1		5313688	1					
ANR	5313774	AdditiveExpression	( int ) len - 1		5313688	1		-			
ANR	5313775	CastExpression	( int ) len		5313688	0					
ANR	5313776	CastTarget	int		5313688	0					
ANR	5313777	Identifier	len		5313688	1					
ANR	5313778	PrimaryExpression	1		5313688	1					
ANR	5313779	Identifier	cc		5313688	2					
ANR	5313780	ReturnType	int		5313688	1					
ANR	5313781	Identifier	gs_vsnprintf		5313688	2					
ANR	5313782	ParameterList	"char * buf , int len , const char * format , va_list ap"		5313688	3					
ANR	5313783	Parameter	char * buf	1493:17:46723:46731	5313688	0	True				
ANR	5313784	ParameterType	char *		5313688	0					
ANR	5313785	Identifier	buf		5313688	1					
ANR	5313786	Parameter	int len	1493:28:46734:46740	5313688	1	True				
ANR	5313787	ParameterType	int		5313688	0					
ANR	5313788	Identifier	len		5313688	1					
ANR	5313789	Parameter	const char * format	1493:37:46743:46760	5313688	2	True				
ANR	5313790	ParameterType	const char *		5313688	0					
ANR	5313791	Identifier	format		5313688	1					
ANR	5313792	Parameter	va_list ap	1494:31:46794:46803	5313688	3	True				
ANR	5313793	ParameterType	va_list		5313688	0					
ANR	5313794	Identifier	ap		5313688	1					
ANR	5313795	CFGEntryNode	ENTRY		5313688		True				
ANR	5313796	CFGExitNode	EXIT		5313688		True				
ANR	5313797	Symbol	cc		5313688						
ANR	5313798	Symbol	* vbuff . curpos		5313688						
ANR	5313799	Symbol	NULL		5313688						
ANR	5313800	Symbol	vbuff		5313688						
ANR	5313801	Symbol	format		5313688						
ANR	5313802	Symbol	vbuff . curpos		5313688						
ANR	5313803	Symbol	snprintf_flush		5313688						
ANR	5313804	Symbol	ap		5313688						
ANR	5313805	Symbol	buf		5313688						
ANR	5313806	Symbol	len		5313688						
ANR	5313807	Symbol	vbuff . endpos		5313688						
ANR	5313808	Symbol	& vbuff		5313688						
ANR	5313809	Symbol	apr_vformatter		5313688						
ANR	5313810	Symbol	* vbuff		5313688						
ANR	5313811	Function	gs_vsprintf	1516:0:47257:47578							
ANR	5313812	FunctionDef	"gs_vsprintf (char * buf , const char * format , va_list ap)"		5313811	0					
ANR	5313813	CompoundStatement		1517:0:47316:47578	5313811	0					
ANR	5313814	IdentifierDeclStatement	int cc ;	1518:4:47322:47328	5313811	0	True				
ANR	5313815	IdentifierDecl	cc		5313811	0					
ANR	5313816	IdentifierDeclType	int		5313811	0					
ANR	5313817	Identifier	cc		5313811	1					
ANR	5313818	IdentifierDeclStatement	apr_vformatter_buff_t vbuff ;	1519:4:47334:47361	5313811	1	True				
ANR	5313819	IdentifierDecl	vbuff		5313811	0					
ANR	5313820	IdentifierDeclType	apr_vformatter_buff_t		5313811	0					
ANR	5313821	Identifier	vbuff		5313811	1					
ANR	5313822	ExpressionStatement	vbuff . curpos = buf	1522:4:47411:47429	5313811	2	True				
ANR	5313823	AssignmentExpression	vbuff . curpos = buf		5313811	0		=			
ANR	5313824	MemberAccess	vbuff . curpos		5313811	0					
ANR	5313825	Identifier	vbuff		5313811	0					
ANR	5313826	Identifier	curpos		5313811	1					
ANR	5313827	Identifier	buf		5313811	1					
ANR	5313828	ExpressionStatement	vbuff . endpos = buf + NUM_BUF_SIZE - 1	1523:4:47435:47472	5313811	3	True				
ANR	5313829	AssignmentExpression	vbuff . endpos = buf + NUM_BUF_SIZE - 1		5313811	0		=			
ANR	5313830	MemberAccess	vbuff . endpos		5313811	0					
ANR	5313831	Identifier	vbuff		5313811	0					
ANR	5313832	Identifier	endpos		5313811	1					
ANR	5313833	AdditiveExpression	buf + NUM_BUF_SIZE - 1		5313811	1		+			
ANR	5313834	Identifier	buf		5313811	0					
ANR	5313835	AdditiveExpression	NUM_BUF_SIZE - 1		5313811	1		-			
ANR	5313836	Identifier	NUM_BUF_SIZE		5313811	0					
ANR	5313837	PrimaryExpression	1		5313811	1					
ANR	5313838	ExpressionStatement	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"	1525:4:47479:47534	5313811	4	True				
ANR	5313839	AssignmentExpression	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		5313811	0		=			
ANR	5313840	Identifier	cc		5313811	0					
ANR	5313841	CallExpression	"apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		5313811	1					
ANR	5313842	Callee	apr_vformatter		5313811	0					
ANR	5313843	Identifier	apr_vformatter		5313811	0					
ANR	5313844	ArgumentList	snprintf_flush		5313811	1					
ANR	5313845	Argument	snprintf_flush		5313811	0					
ANR	5313846	Identifier	snprintf_flush		5313811	0					
ANR	5313847	Argument	& vbuff		5313811	1					
ANR	5313848	UnaryOperationExpression	& vbuff		5313811	0					
ANR	5313849	UnaryOperator	&		5313811	0					
ANR	5313850	Identifier	vbuff		5313811	1					
ANR	5313851	Argument	format		5313811	2					
ANR	5313852	Identifier	format		5313811	0					
ANR	5313853	Argument	ap		5313811	3					
ANR	5313854	Identifier	ap		5313811	0					
ANR	5313855	ExpressionStatement	* vbuff . curpos = '\\0'	1526:4:47540:47560	5313811	5	True				
ANR	5313856	AssignmentExpression	* vbuff . curpos = '\\0'		5313811	0		=			
ANR	5313857	UnaryOperationExpression	* vbuff . curpos		5313811	0					
ANR	5313858	UnaryOperator	*		5313811	0					
ANR	5313859	MemberAccess	vbuff . curpos		5313811	1					
ANR	5313860	Identifier	vbuff		5313811	0					
ANR	5313861	Identifier	curpos		5313811	1					
ANR	5313862	PrimaryExpression	'\\0'		5313811	1					
ANR	5313863	ReturnStatement	return cc ;	1528:4:47567:47576	5313811	6	True				
ANR	5313864	Identifier	cc		5313811	0					
ANR	5313865	ReturnType	int		5313811	1					
ANR	5313866	Identifier	gs_vsprintf		5313811	2					
ANR	5313867	ParameterList	"char * buf , const char * format , va_list ap"		5313811	3					
ANR	5313868	Parameter	char * buf	1516:16:47273:47281	5313811	0	True				
ANR	5313869	ParameterType	char *		5313811	0					
ANR	5313870	Identifier	buf		5313811	1					
ANR	5313871	Parameter	const char * format	1516:27:47284:47301	5313811	1	True				
ANR	5313872	ParameterType	const char *		5313811	0					
ANR	5313873	Identifier	format		5313811	1					
ANR	5313874	Parameter	va_list ap	1516:47:47304:47313	5313811	2	True				
ANR	5313875	ParameterType	va_list		5313811	0					
ANR	5313876	Identifier	ap		5313811	1					
ANR	5313877	CFGEntryNode	ENTRY		5313811		True				
ANR	5313878	CFGExitNode	EXIT		5313811		True				
ANR	5313879	Symbol	cc		5313811						
ANR	5313880	Symbol	* vbuff . curpos		5313811						
ANR	5313881	Symbol	vbuff		5313811						
ANR	5313882	Symbol	format		5313811						
ANR	5313883	Symbol	vbuff . curpos		5313811						
ANR	5313884	Symbol	snprintf_flush		5313811						
ANR	5313885	Symbol	ap		5313811						
ANR	5313886	Symbol	buf		5313811						
ANR	5313887	Symbol	NUM_BUF_SIZE		5313811						
ANR	5313888	Symbol	vbuff . endpos		5313811						
ANR	5313889	Symbol	& vbuff		5313811						
ANR	5313890	Symbol	apr_vformatter		5313811						
ANR	5313891	Symbol	* vbuff		5313811						
