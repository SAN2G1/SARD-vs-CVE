command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10498050	File	data/converged/CVE-2018-16863_ghostpdl/toolbin_halftone_thresh_remap_thresh_remap.c								
ANR	10498051	Function	main	46:0:1818:8619							
ANR	10498052	FunctionDef	"main (int argc , char * argv [ ])"		10498051	0					
ANR	10498053	CompoundStatement		47:30:1852:8619	10498051	0					
ANR	10498054	IdentifierDeclStatement	"FILE * tfile , * ofile = stdout , * lfile = NULL ;"	49:4:1859:1902	10498051	0	True				
ANR	10498055	IdentifierDecl	* tfile		10498051	0					
ANR	10498056	IdentifierDeclType	FILE *		10498051	0					
ANR	10498057	Identifier	tfile		10498051	1					
ANR	10498058	IdentifierDecl	* ofile = stdout		10498051	1					
ANR	10498059	IdentifierDeclType	FILE *		10498051	0					
ANR	10498060	Identifier	ofile		10498051	1					
ANR	10498061	AssignmentExpression	* ofile = stdout		10498051	2		=			
ANR	10498062	Identifier	stdout		10498051	0					
ANR	10498063	Identifier	stdout		10498051	1					
ANR	10498064	IdentifierDecl	* lfile = NULL		10498051	2					
ANR	10498065	IdentifierDeclType	FILE *		10498051	0					
ANR	10498066	Identifier	lfile		10498051	1					
ANR	10498067	AssignmentExpression	* lfile = NULL		10498051	2		=			
ANR	10498068	Identifier	NULL		10498051	0					
ANR	10498069	Identifier	NULL		10498051	1					
ANR	10498070	IdentifierDeclStatement	"int code , optargc , i , level , width , height , num_pix , num_lin , cur_pix ;"	50:4:1908:1977	10498051	1	True				
ANR	10498071	IdentifierDecl	code		10498051	0					
ANR	10498072	IdentifierDeclType	int		10498051	0					
ANR	10498073	Identifier	code		10498051	1					
ANR	10498074	IdentifierDecl	optargc		10498051	1					
ANR	10498075	IdentifierDeclType	int		10498051	0					
ANR	10498076	Identifier	optargc		10498051	1					
ANR	10498077	IdentifierDecl	i		10498051	2					
ANR	10498078	IdentifierDeclType	int		10498051	0					
ANR	10498079	Identifier	i		10498051	1					
ANR	10498080	IdentifierDecl	level		10498051	3					
ANR	10498081	IdentifierDeclType	int		10498051	0					
ANR	10498082	Identifier	level		10498051	1					
ANR	10498083	IdentifierDecl	width		10498051	4					
ANR	10498084	IdentifierDeclType	int		10498051	0					
ANR	10498085	Identifier	width		10498051	1					
ANR	10498086	IdentifierDecl	height		10498051	5					
ANR	10498087	IdentifierDeclType	int		10498051	0					
ANR	10498088	Identifier	height		10498051	1					
ANR	10498089	IdentifierDecl	num_pix		10498051	6					
ANR	10498090	IdentifierDeclType	int		10498051	0					
ANR	10498091	Identifier	num_pix		10498051	1					
ANR	10498092	IdentifierDecl	num_lin		10498051	7					
ANR	10498093	IdentifierDeclType	int		10498051	0					
ANR	10498094	Identifier	num_lin		10498051	1					
ANR	10498095	IdentifierDecl	cur_pix		10498051	8					
ANR	10498096	IdentifierDeclType	int		10498051	0					
ANR	10498097	Identifier	cur_pix		10498051	1					
ANR	10498098	IdentifierDeclStatement	"int counts = 0 , quiet = 0 ;"	51:4:1983:2004	10498051	2	True				
ANR	10498099	IdentifierDecl	counts = 0		10498051	0					
ANR	10498100	IdentifierDeclType	int		10498051	0					
ANR	10498101	Identifier	counts		10498051	1					
ANR	10498102	AssignmentExpression	counts = 0		10498051	2		=			
ANR	10498103	Identifier	counts		10498051	0					
ANR	10498104	PrimaryExpression	0		10498051	1					
ANR	10498105	IdentifierDecl	quiet = 0		10498051	1					
ANR	10498106	IdentifierDeclType	int		10498051	0					
ANR	10498107	Identifier	quiet		10498051	1					
ANR	10498108	AssignmentExpression	quiet = 0		10498051	2		=			
ANR	10498109	Identifier	quiet		10498051	0					
ANR	10498110	PrimaryExpression	0		10498051	1					
ANR	10498111	Statement	int	52:4:2010:2012	10498051	3	True				
ANR	10498112	ExpressionStatement	"thresh_order [ MAX_WIDTH * MAX_HEIGHT ] [ 2 ] , cur_level , lin_levels [ 257 ]"	52:8:2014:2080	10498051	4	True				
ANR	10498113	Expression	"thresh_order [ MAX_WIDTH * MAX_HEIGHT ] [ 2 ] , cur_level , lin_levels [ 257 ]"		10498051	0					
ANR	10498114	ArrayIndexing	thresh_order [ MAX_WIDTH * MAX_HEIGHT ] [ 2 ]		10498051	0					
ANR	10498115	ArrayIndexing	thresh_order [ MAX_WIDTH * MAX_HEIGHT ]		10498051	0					
ANR	10498116	Identifier	thresh_order		10498051	0					
ANR	10498117	MultiplicativeExpression	MAX_WIDTH * MAX_HEIGHT		10498051	1		*			
ANR	10498118	Identifier	MAX_WIDTH		10498051	0					
ANR	10498119	Identifier	MAX_HEIGHT		10498051	1					
ANR	10498120	PrimaryExpression	2		10498051	1					
ANR	10498121	Expression	"cur_level , lin_levels [ 257 ]"		10498051	1					
ANR	10498122	Identifier	cur_level		10498051	0					
ANR	10498123	ArrayIndexing	lin_levels [ 257 ]		10498051	1					
ANR	10498124	Identifier	lin_levels		10498051	0					
ANR	10498125	PrimaryExpression	257		10498051	1					
ANR	10498126	IdentifierDeclStatement	"double cur_value , lin_values [ 257 ] , delta_value ;"	53:4:2086:2132	10498051	5	True				
ANR	10498127	IdentifierDecl	cur_value		10498051	0					
ANR	10498128	IdentifierDeclType	double		10498051	0					
ANR	10498129	Identifier	cur_value		10498051	1					
ANR	10498130	IdentifierDecl	lin_values [ 257 ]		10498051	1					
ANR	10498131	IdentifierDeclType	double [ 257 ]		10498051	0					
ANR	10498132	Identifier	lin_values		10498051	1					
ANR	10498133	PrimaryExpression	257		10498051	2					
ANR	10498134	IdentifierDecl	delta_value		10498051	2					
ANR	10498135	IdentifierDeclType	double		10498051	0					
ANR	10498136	Identifier	delta_value		10498051	1					
ANR	10498137	IdentifierDeclStatement	unsigned char thresh [ MAX_WIDTH * MAX_HEIGHT ] ;	54:4:2138:2180	10498051	6	True				
ANR	10498138	IdentifierDecl	thresh [ MAX_WIDTH * MAX_HEIGHT ]		10498051	0					
ANR	10498139	IdentifierDeclType	unsigned char [ MAX_WIDTH * MAX_HEIGHT ]		10498051	0					
ANR	10498140	Identifier	thresh		10498051	1					
ANR	10498141	MultiplicativeExpression	MAX_WIDTH * MAX_HEIGHT		10498051	2		*			
ANR	10498142	Identifier	MAX_WIDTH		10498051	0					
ANR	10498143	Identifier	MAX_HEIGHT		10498051	1					
ANR	10498144	IdentifierDeclStatement	"char * ofilename , format = 'b' ;"	55:4:2186:2215	10498051	7	True				
ANR	10498145	IdentifierDecl	* ofilename		10498051	0					
ANR	10498146	IdentifierDeclType	char *		10498051	0					
ANR	10498147	Identifier	ofilename		10498051	1					
ANR	10498148	IdentifierDecl	format = 'b'		10498051	1					
ANR	10498149	IdentifierDeclType	char		10498051	0					
ANR	10498150	Identifier	format		10498051	1					
ANR	10498151	AssignmentExpression	format = 'b'		10498051	2		=			
ANR	10498152	Identifier	format		10498051	0					
ANR	10498153	PrimaryExpression	'b'		10498051	1					
ANR	10498154	IdentifierDeclStatement	int pixcounts [ 256 ] ;	56:4:2221:2239	10498051	8	True				
ANR	10498155	IdentifierDecl	pixcounts [ 256 ]		10498051	0					
ANR	10498156	IdentifierDeclType	int [ 256 ]		10498051	0					
ANR	10498157	Identifier	pixcounts		10498051	1					
ANR	10498158	PrimaryExpression	256		10498051	2					
ANR	10498159	IfStatement	if ( argc < 2 )		10498051	9					
ANR	10498160	Condition	argc < 2	58:8:2250:2257	10498051	0	True				
ANR	10498161	RelationalExpression	argc < 2		10498051	0		<			
ANR	10498162	Identifier	argc		10498051	0					
ANR	10498163	PrimaryExpression	2		10498051	1					
ANR	10498164	GotoStatement	goto usage ;	59:8:2268:2278	10498051	1	True				
ANR	10498165	Identifier	usage		10498051	0					
ANR	10498166	ExpressionStatement	optargc = 1	61:4:2310:2321	10498051	10	True				
ANR	10498167	AssignmentExpression	optargc = 1		10498051	0		=			
ANR	10498168	Identifier	optargc		10498051	0					
ANR	10498169	PrimaryExpression	1		10498051	1					
ANR	10498170	WhileStatement	while ( argv [ optargc ] [ 0 ] == '-' )		10498051	11					
ANR	10498171	Condition	argv [ optargc ] [ 0 ] == '-'	62:11:2334:2356	10498051	0	True				
ANR	10498172	EqualityExpression	argv [ optargc ] [ 0 ] == '-'		10498051	0		==			
ANR	10498173	ArrayIndexing	argv [ optargc ] [ 0 ]		10498051	0					
ANR	10498174	ArrayIndexing	argv [ optargc ]		10498051	0					
ANR	10498175	Identifier	argv		10498051	0					
ANR	10498176	Identifier	optargc		10498051	1					
ANR	10498177	PrimaryExpression	0		10498051	1					
ANR	10498178	PrimaryExpression	'-'		10498051	1					
ANR	10498179	CompoundStatement		16:36:506:506	10498051	1					
ANR	10498180	SwitchStatement	switch ( argv [ optargc ] [ 1 ] )		10498051	0					
ANR	10498181	Condition	argv [ optargc ] [ 1 ]	63:16:2377:2392	10498051	0	True				
ANR	10498182	ArrayIndexing	argv [ optargc ] [ 1 ]		10498051	0					
ANR	10498183	ArrayIndexing	argv [ optargc ]		10498051	0					
ANR	10498184	Identifier	argv		10498051	0					
ANR	10498185	Identifier	optargc		10498051	1					
ANR	10498186	PrimaryExpression	1		10498051	1					
ANR	10498187	CompoundStatement		17:34:542:542	10498051	1					
ANR	10498188	Label	case 'c' :	64:10:2407:2415	10498051	0	True				
ANR	10498189	ExpressionStatement	counts = 1	65:12:2429:2439	10498051	1	True				
ANR	10498190	AssignmentExpression	counts = 1		10498051	0		=			
ANR	10498191	Identifier	counts		10498051	0					
ANR	10498192	PrimaryExpression	1		10498051	1					
ANR	10498193	BreakStatement	break ;	66:12:2453:2458	10498051	2	True				
ANR	10498194	Label	case 'o' :	67:10:2470:2478	10498051	3	True				
ANR	10498195	IfStatement	if ( argv [ optargc ] [ 2 ] == 0 )		10498051	4					
ANR	10498196	Condition	argv [ optargc ] [ 2 ] == 0	68:16:2496:2516	10498051	0	True				
ANR	10498197	EqualityExpression	argv [ optargc ] [ 2 ] == 0		10498051	0		==			
ANR	10498198	ArrayIndexing	argv [ optargc ] [ 2 ]		10498051	0					
ANR	10498199	ArrayIndexing	argv [ optargc ]		10498051	0					
ANR	10498200	Identifier	argv		10498051	0					
ANR	10498201	Identifier	optargc		10498051	1					
ANR	10498202	PrimaryExpression	2		10498051	1					
ANR	10498203	PrimaryExpression	0		10498051	1					
ANR	10498204	ExpressionStatement	ofilename = argv [ ++ optargc ]	69:16:2535:2562	10498051	1	True				
ANR	10498205	AssignmentExpression	ofilename = argv [ ++ optargc ]		10498051	0		=			
ANR	10498206	Identifier	ofilename		10498051	0					
ANR	10498207	ArrayIndexing	argv [ ++ optargc ]		10498051	1					
ANR	10498208	Identifier	argv		10498051	0					
ANR	10498209	UnaryExpression	++ optargc		10498051	1					
ANR	10498210	IncDec	++		10498051	0					
ANR	10498211	Identifier	optargc		10498051	1					
ANR	10498212	ElseStatement	else		10498051	0					
ANR	10498213	ExpressionStatement	ofilename = & argv [ optargc ] [ 2 ]	71:16:2597:2626	10498051	0	True				
ANR	10498214	AssignmentExpression	ofilename = & argv [ optargc ] [ 2 ]		10498051	0		=			
ANR	10498215	Identifier	ofilename		10498051	0					
ANR	10498216	UnaryOperationExpression	& argv [ optargc ] [ 2 ]		10498051	1					
ANR	10498217	UnaryOperator	&		10498051	0					
ANR	10498218	ArrayIndexing	argv [ optargc ] [ 2 ]		10498051	1					
ANR	10498219	ArrayIndexing	argv [ optargc ]		10498051	0					
ANR	10498220	Identifier	argv		10498051	0					
ANR	10498221	Identifier	optargc		10498051	1					
ANR	10498222	PrimaryExpression	2		10498051	1					
ANR	10498223	ExpressionStatement	"ofile = fopen ( ofilename , ""w"" )"	72:19:2647:2676	10498051	5	True				
ANR	10498224	AssignmentExpression	"ofile = fopen ( ofilename , ""w"" )"		10498051	0		=			
ANR	10498225	Identifier	ofile		10498051	0					
ANR	10498226	CallExpression	"fopen ( ofilename , ""w"" )"		10498051	1					
ANR	10498227	Callee	fopen		10498051	0					
ANR	10498228	Identifier	fopen		10498051	0					
ANR	10498229	ArgumentList	ofilename		10498051	1					
ANR	10498230	Argument	ofilename		10498051	0					
ANR	10498231	Identifier	ofilename		10498051	0					
ANR	10498232	Argument	"""w"""		10498051	1					
ANR	10498233	PrimaryExpression	"""w"""		10498051	0					
ANR	10498234	IfStatement	if ( ofile == NULL )		10498051	6					
ANR	10498235	Condition	ofile == NULL	73:16:2694:2706	10498051	0	True				
ANR	10498236	EqualityExpression	ofile == NULL		10498051	0		==			
ANR	10498237	Identifier	ofile		10498051	0					
ANR	10498238	Identifier	NULL		10498051	1					
ANR	10498239	CompoundStatement		27:31:856:856	10498051	1					
ANR	10498240	ExpressionStatement	"fprintf ( stderr , ""\\nUnable to open outputfile: '%s'\\n"" , ofilename )"	74:16:2727:2792	10498051	0	True				
ANR	10498241	CallExpression	"fprintf ( stderr , ""\\nUnable to open outputfile: '%s'\\n"" , ofilename )"		10498051	0					
ANR	10498242	Callee	fprintf		10498051	0					
ANR	10498243	Identifier	fprintf		10498051	0					
ANR	10498244	ArgumentList	stderr		10498051	1					
ANR	10498245	Argument	stderr		10498051	0					
ANR	10498246	Identifier	stderr		10498051	0					
ANR	10498247	Argument	"""\\nUnable to open outputfile: '%s'\\n"""		10498051	1					
ANR	10498248	PrimaryExpression	"""\\nUnable to open outputfile: '%s'\\n"""		10498051	0					
ANR	10498249	Argument	ofilename		10498051	2					
ANR	10498250	Identifier	ofilename		10498051	0					
ANR	10498251	ExpressionStatement	exit ( 1 )	75:16:2810:2817	10498051	1	True				
ANR	10498252	CallExpression	exit ( 1 )		10498051	0					
ANR	10498253	Callee	exit		10498051	0					
ANR	10498254	Identifier	exit		10498051	0					
ANR	10498255	ArgumentList	1		10498051	1					
ANR	10498256	Argument	1		10498051	0					
ANR	10498257	PrimaryExpression	1		10498051	0					
ANR	10498258	BreakStatement	break ;	77:12:2845:2850	10498051	7	True				
ANR	10498259	Label	case 'p' :	78:10:2862:2870	10498051	8	True				
ANR	10498260	ExpressionStatement	format = 'p'	79:12:2884:2896	10498051	9	True				
ANR	10498261	AssignmentExpression	format = 'p'		10498051	0		=			
ANR	10498262	Identifier	format		10498051	0					
ANR	10498263	PrimaryExpression	'p'		10498051	1					
ANR	10498264	BreakStatement	break ;	80:12:2910:2915	10498051	10	True				
ANR	10498265	Label	case 'q' :	81:10:2927:2935	10498051	11	True				
ANR	10498266	ExpressionStatement	quiet = 1	82:12:2949:2958	10498051	12	True				
ANR	10498267	AssignmentExpression	quiet = 1		10498051	0		=			
ANR	10498268	Identifier	quiet		10498051	0					
ANR	10498269	PrimaryExpression	1		10498051	1					
ANR	10498270	Label	default :	83:10:2970:2977	10498051	13	True				
ANR	10498271	Identifier	default		10498051	0					
ANR	10498272	BreakStatement	break ;	84:12:2991:2996	10498051	14	True				
ANR	10498273	ExpressionStatement	optargc ++	86:8:3016:3025	10498051	1	True				
ANR	10498274	PostIncDecOperationExpression	optargc ++		10498051	0					
ANR	10498275	Identifier	optargc		10498051	0					
ANR	10498276	IncDec	++		10498051	1					
ANR	10498277	IfStatement	if ( argc - optargc < 1 )		10498051	12					
ANR	10498278	Condition	argc - optargc < 1	88:8:3041:3056	10498051	0	True				
ANR	10498279	RelationalExpression	argc - optargc < 1		10498051	0		<			
ANR	10498280	AdditiveExpression	argc - optargc		10498051	0		-			
ANR	10498281	Identifier	argc		10498051	0					
ANR	10498282	Identifier	optargc		10498051	1					
ANR	10498283	PrimaryExpression	1		10498051	1					
ANR	10498284	GotoStatement	goto usage ;	89:8:3067:3077	10498051	1	True				
ANR	10498285	Identifier	usage		10498051	0					
ANR	10498286	ExpressionStatement	"tfile = fopen ( argv [ optargc ] , ""r"" )"	92:4:3119:3151	10498051	13	True				
ANR	10498287	AssignmentExpression	"tfile = fopen ( argv [ optargc ] , ""r"" )"		10498051	0		=			
ANR	10498288	Identifier	tfile		10498051	0					
ANR	10498289	CallExpression	"fopen ( argv [ optargc ] , ""r"" )"		10498051	1					
ANR	10498290	Callee	fopen		10498051	0					
ANR	10498291	Identifier	fopen		10498051	0					
ANR	10498292	ArgumentList	argv [ optargc ]		10498051	1					
ANR	10498293	Argument	argv [ optargc ]		10498051	0					
ANR	10498294	ArrayIndexing	argv [ optargc ]		10498051	0					
ANR	10498295	Identifier	argv		10498051	0					
ANR	10498296	Identifier	optargc		10498051	1					
ANR	10498297	Argument	"""r"""		10498051	1					
ANR	10498298	PrimaryExpression	"""r"""		10498051	0					
ANR	10498299	IfStatement	if ( tfile == NULL )		10498051	14					
ANR	10498300	Condition	tfile == NULL	93:8:3161:3173	10498051	0	True				
ANR	10498301	EqualityExpression	tfile == NULL		10498051	0		==			
ANR	10498302	Identifier	tfile		10498051	0					
ANR	10498303	Identifier	NULL		10498051	1					
ANR	10498304	CompoundStatement		47:23:1323:1323	10498051	1					
ANR	10498305	ExpressionStatement	"fprintf ( stderr , ""\\n    Threshold data file not found: '%s'\\n"" , argv [ optargc ] )"	94:8:3186:3263	10498051	0	True				
ANR	10498306	CallExpression	"fprintf ( stderr , ""\\n    Threshold data file not found: '%s'\\n"" , argv [ optargc ] )"		10498051	0					
ANR	10498307	Callee	fprintf		10498051	0					
ANR	10498308	Identifier	fprintf		10498051	0					
ANR	10498309	ArgumentList	stderr		10498051	1					
ANR	10498310	Argument	stderr		10498051	0					
ANR	10498311	Identifier	stderr		10498051	0					
ANR	10498312	Argument	"""\\n    Threshold data file not found: '%s'\\n"""		10498051	1					
ANR	10498313	PrimaryExpression	"""\\n    Threshold data file not found: '%s'\\n"""		10498051	0					
ANR	10498314	Argument	argv [ optargc ]		10498051	2					
ANR	10498315	ArrayIndexing	argv [ optargc ]		10498051	0					
ANR	10498316	Identifier	argv		10498051	0					
ANR	10498317	Identifier	optargc		10498051	1					
ANR	10498318	ExpressionStatement	exit ( 1 )	95:8:3273:3280	10498051	1	True				
ANR	10498319	CallExpression	exit ( 1 )		10498051	0					
ANR	10498320	Callee	exit		10498051	0					
ANR	10498321	Identifier	exit		10498051	0					
ANR	10498322	ArgumentList	1		10498051	1					
ANR	10498323	Argument	1		10498051	0					
ANR	10498324	PrimaryExpression	1		10498051	0					
ANR	10498325	ExpressionStatement	"i = fscanf ( tfile , ""# W=%d H=%d"" , & width , & height )"	98:4:3346:3395	10498051	15	True				
ANR	10498326	AssignmentExpression	"i = fscanf ( tfile , ""# W=%d H=%d"" , & width , & height )"		10498051	0		=			
ANR	10498327	Identifier	i		10498051	0					
ANR	10498328	CallExpression	"fscanf ( tfile , ""# W=%d H=%d"" , & width , & height )"		10498051	1					
ANR	10498329	Callee	fscanf		10498051	0					
ANR	10498330	Identifier	fscanf		10498051	0					
ANR	10498331	ArgumentList	tfile		10498051	1					
ANR	10498332	Argument	tfile		10498051	0					
ANR	10498333	Identifier	tfile		10498051	0					
ANR	10498334	Argument	"""# W=%d H=%d"""		10498051	1					
ANR	10498335	PrimaryExpression	"""# W=%d H=%d"""		10498051	0					
ANR	10498336	Argument	& width		10498051	2					
ANR	10498337	UnaryOperationExpression	& width		10498051	0					
ANR	10498338	UnaryOperator	&		10498051	0					
ANR	10498339	Identifier	width		10498051	1					
ANR	10498340	Argument	& height		10498051	3					
ANR	10498341	UnaryOperationExpression	& height		10498051	0					
ANR	10498342	UnaryOperator	&		10498051	0					
ANR	10498343	Identifier	height		10498051	1					
ANR	10498344	IfStatement	if ( i < 2 )		10498051	16					
ANR	10498345	Condition	i < 2	99:8:3405:3409	10498051	0	True				
ANR	10498346	RelationalExpression	i < 2		10498051	0		<			
ANR	10498347	Identifier	i		10498051	0					
ANR	10498348	PrimaryExpression	2		10498051	1					
ANR	10498349	CompoundStatement		53:15:1559:1559	10498051	1					
ANR	10498350	ExpressionStatement	"printf ( ""Missing header line. Should be: # W=### H=###\\n"" )"	100:8:3422:3479	10498051	0	True				
ANR	10498351	CallExpression	"printf ( ""Missing header line. Should be: # W=### H=###\\n"" )"		10498051	0					
ANR	10498352	Callee	printf		10498051	0					
ANR	10498353	Identifier	printf		10498051	0					
ANR	10498354	ArgumentList	"""Missing header line. Should be: # W=### H=###\\n"""		10498051	1					
ANR	10498355	Argument	"""Missing header line. Should be: # W=### H=###\\n"""		10498051	0					
ANR	10498356	PrimaryExpression	"""Missing header line. Should be: # W=### H=###\\n"""		10498051	0					
ANR	10498357	ExpressionStatement	exit ( 1 )	101:8:3489:3496	10498051	1	True				
ANR	10498358	CallExpression	exit ( 1 )		10498051	0					
ANR	10498359	Callee	exit		10498051	0					
ANR	10498360	Identifier	exit		10498051	0					
ANR	10498361	ArgumentList	1		10498051	1					
ANR	10498362	Argument	1		10498051	0					
ANR	10498363	PrimaryExpression	1		10498051	0					
ANR	10498364	ForStatement	for ( i = 0 ; i < width * height ; i ++ )		10498051	17					
ANR	10498365	ForInit	i = 0 ;	104:9:3514:3517	10498051	0	True				
ANR	10498366	AssignmentExpression	i = 0		10498051	0		=			
ANR	10498367	Identifier	i		10498051	0					
ANR	10498368	PrimaryExpression	0		10498051	1					
ANR	10498369	Condition	i < width * height	104:14:3519:3532	10498051	1	True				
ANR	10498370	RelationalExpression	i < width * height		10498051	0		<			
ANR	10498371	Identifier	i		10498051	0					
ANR	10498372	MultiplicativeExpression	width * height		10498051	1		*			
ANR	10498373	Identifier	width		10498051	0					
ANR	10498374	Identifier	height		10498051	1					
ANR	10498375	PostIncDecOperationExpression	i ++	104:30:3535:3537	10498051	2	True				
ANR	10498376	Identifier	i		10498051	0					
ANR	10498377	IncDec	++		10498051	1					
ANR	10498378	CompoundStatement		58:35:1687:1687	10498051	3					
ANR	10498379	ExpressionStatement	"code = fscanf ( tfile , ""%d %d"" , & thresh_order [ i ] [ 0 ] , & thresh_order [ i ] [ 1 ] )"	105:8:3550:3620	10498051	0	True				
ANR	10498380	AssignmentExpression	"code = fscanf ( tfile , ""%d %d"" , & thresh_order [ i ] [ 0 ] , & thresh_order [ i ] [ 1 ] )"		10498051	0		=			
ANR	10498381	Identifier	code		10498051	0					
ANR	10498382	CallExpression	"fscanf ( tfile , ""%d %d"" , & thresh_order [ i ] [ 0 ] , & thresh_order [ i ] [ 1 ] )"		10498051	1					
ANR	10498383	Callee	fscanf		10498051	0					
ANR	10498384	Identifier	fscanf		10498051	0					
ANR	10498385	ArgumentList	tfile		10498051	1					
ANR	10498386	Argument	tfile		10498051	0					
ANR	10498387	Identifier	tfile		10498051	0					
ANR	10498388	Argument	"""%d %d"""		10498051	1					
ANR	10498389	PrimaryExpression	"""%d %d"""		10498051	0					
ANR	10498390	Argument	& thresh_order [ i ] [ 0 ]		10498051	2					
ANR	10498391	UnaryOperationExpression	& thresh_order [ i ] [ 0 ]		10498051	0					
ANR	10498392	UnaryOperator	&		10498051	0					
ANR	10498393	ArrayIndexing	thresh_order [ i ] [ 0 ]		10498051	1					
ANR	10498394	ArrayIndexing	thresh_order [ i ]		10498051	0					
ANR	10498395	Identifier	thresh_order		10498051	0					
ANR	10498396	Identifier	i		10498051	1					
ANR	10498397	PrimaryExpression	0		10498051	1					
ANR	10498398	Argument	& thresh_order [ i ] [ 1 ]		10498051	3					
ANR	10498399	UnaryOperationExpression	& thresh_order [ i ] [ 1 ]		10498051	0					
ANR	10498400	UnaryOperator	&		10498051	0					
ANR	10498401	ArrayIndexing	thresh_order [ i ] [ 1 ]		10498051	1					
ANR	10498402	ArrayIndexing	thresh_order [ i ]		10498051	0					
ANR	10498403	Identifier	thresh_order		10498051	0					
ANR	10498404	Identifier	i		10498051	1					
ANR	10498405	PrimaryExpression	1		10498051	1					
ANR	10498406	IfStatement	if ( code < 2 )		10498051	1					
ANR	10498407	Condition	code < 2	106:12:3634:3641	10498051	0	True				
ANR	10498408	RelationalExpression	code < 2		10498051	0		<			
ANR	10498409	Identifier	code		10498051	0					
ANR	10498410	PrimaryExpression	2		10498051	1					
ANR	10498411	BreakStatement	break ;	106:22:3644:3649	10498051	1	True				
ANR	10498412	ExpressionStatement	num_pix = i	108:4:3661:3672	10498051	18	True				
ANR	10498413	AssignmentExpression	num_pix = i		10498051	0		=			
ANR	10498414	Identifier	num_pix		10498051	0					
ANR	10498415	Identifier	i		10498051	1					
ANR	10498416	IfStatement	if ( argc - optargc < 2 )		10498051	19					
ANR	10498417	Condition	argc - optargc < 2	110:8:3683:3698	10498051	0	True				
ANR	10498418	RelationalExpression	argc - optargc < 2		10498051	0		<			
ANR	10498419	AdditiveExpression	argc - optargc		10498051	0		-			
ANR	10498420	Identifier	argc		10498051	0					
ANR	10498421	Identifier	optargc		10498051	1					
ANR	10498422	PrimaryExpression	2		10498051	1					
ANR	10498423	CompoundStatement		64:26:1848:1848	10498051	1					
ANR	10498424	ExpressionStatement	num_lin = 1	111:8:3711:3722	10498051	0	True				
ANR	10498425	AssignmentExpression	num_lin = 1		10498051	0		=			
ANR	10498426	Identifier	num_lin		10498051	0					
ANR	10498427	PrimaryExpression	1		10498051	1					
ANR	10498428	ExpressionStatement	lin_levels [ 0 ] = 256	112:8:3732:3751	10498051	1	True				
ANR	10498429	AssignmentExpression	lin_levels [ 0 ] = 256		10498051	0		=			
ANR	10498430	ArrayIndexing	lin_levels [ 0 ]		10498051	0					
ANR	10498431	Identifier	lin_levels		10498051	0					
ANR	10498432	PrimaryExpression	0		10498051	1					
ANR	10498433	PrimaryExpression	256		10498051	1					
ANR	10498434	ExpressionStatement	lin_values [ 0 ] = 1.0	113:8:3761:3780	10498051	2	True				
ANR	10498435	AssignmentExpression	lin_values [ 0 ] = 1.0		10498051	0		=			
ANR	10498436	ArrayIndexing	lin_values [ 0 ]		10498051	0					
ANR	10498437	Identifier	lin_values		10498051	0					
ANR	10498438	PrimaryExpression	0		10498051	1					
ANR	10498439	PrimaryExpression	1.0		10498051	1					
ANR	10498440	ElseStatement	else		10498051	0					
ANR	10498441	CompoundStatement		68:11:1940:1940	10498051	0					
ANR	10498442	ExpressionStatement	"lfile = fopen ( argv [ optargc + 1 ] , ""r"" )"	115:8:3803:3839	10498051	0	True				
ANR	10498443	AssignmentExpression	"lfile = fopen ( argv [ optargc + 1 ] , ""r"" )"		10498051	0		=			
ANR	10498444	Identifier	lfile		10498051	0					
ANR	10498445	CallExpression	"fopen ( argv [ optargc + 1 ] , ""r"" )"		10498051	1					
ANR	10498446	Callee	fopen		10498051	0					
ANR	10498447	Identifier	fopen		10498051	0					
ANR	10498448	ArgumentList	argv [ optargc + 1 ]		10498051	1					
ANR	10498449	Argument	argv [ optargc + 1 ]		10498051	0					
ANR	10498450	ArrayIndexing	argv [ optargc + 1 ]		10498051	0					
ANR	10498451	Identifier	argv		10498051	0					
ANR	10498452	AdditiveExpression	optargc + 1		10498051	1		+			
ANR	10498453	Identifier	optargc		10498051	0					
ANR	10498454	PrimaryExpression	1		10498051	1					
ANR	10498455	Argument	"""r"""		10498051	1					
ANR	10498456	PrimaryExpression	"""r"""		10498051	0					
ANR	10498457	IfStatement	if ( lfile == NULL )		10498051	1					
ANR	10498458	Condition	lfile == NULL	116:12:3853:3865	10498051	0	True				
ANR	10498459	EqualityExpression	lfile == NULL		10498051	0		==			
ANR	10498460	Identifier	lfile		10498051	0					
ANR	10498461	Identifier	NULL		10498051	1					
ANR	10498462	CompoundStatement		70:27:2015:2015	10498051	1					
ANR	10498463	ExpressionStatement	"fprintf ( stderr , ""\\n    Linearization file not found: '%s'\\n"" , argv [ optargc + 1 ] )"	117:12:3882:3960	10498051	0	True				
ANR	10498464	CallExpression	"fprintf ( stderr , ""\\n    Linearization file not found: '%s'\\n"" , argv [ optargc + 1 ] )"		10498051	0					
ANR	10498465	Callee	fprintf		10498051	0					
ANR	10498466	Identifier	fprintf		10498051	0					
ANR	10498467	ArgumentList	stderr		10498051	1					
ANR	10498468	Argument	stderr		10498051	0					
ANR	10498469	Identifier	stderr		10498051	0					
ANR	10498470	Argument	"""\\n    Linearization file not found: '%s'\\n"""		10498051	1					
ANR	10498471	PrimaryExpression	"""\\n    Linearization file not found: '%s'\\n"""		10498051	0					
ANR	10498472	Argument	argv [ optargc + 1 ]		10498051	2					
ANR	10498473	ArrayIndexing	argv [ optargc + 1 ]		10498051	0					
ANR	10498474	Identifier	argv		10498051	0					
ANR	10498475	AdditiveExpression	optargc + 1		10498051	1		+			
ANR	10498476	Identifier	optargc		10498051	0					
ANR	10498477	PrimaryExpression	1		10498051	1					
ANR	10498478	ExpressionStatement	exit ( 1 )	118:12:3974:3981	10498051	1	True				
ANR	10498479	CallExpression	exit ( 1 )		10498051	0					
ANR	10498480	Callee	exit		10498051	0					
ANR	10498481	Identifier	exit		10498051	0					
ANR	10498482	ArgumentList	1		10498051	1					
ANR	10498483	Argument	1		10498051	0					
ANR	10498484	PrimaryExpression	1		10498051	0					
ANR	10498485	ExpressionStatement	num_lin = 0	120:8:4001:4012	10498051	2	True				
ANR	10498486	AssignmentExpression	num_lin = 0		10498051	0		=			
ANR	10498487	Identifier	num_lin		10498051	0					
ANR	10498488	PrimaryExpression	0		10498051	1					
ANR	10498489	WhileStatement	"while ( ( i = fscanf ( lfile , ""%d %f"" , & lin_levels [ num_lin ] , & lin_values [ num_lin ] ) ) == 2 )"		10498051	3					
ANR	10498490	Condition	"( i = fscanf ( lfile , ""%d %f"" , & lin_levels [ num_lin ] , & lin_values [ num_lin ] ) ) == 2"	121:15:4029:4105	10498051	0	True				
ANR	10498491	EqualityExpression	"( i = fscanf ( lfile , ""%d %f"" , & lin_levels [ num_lin ] , & lin_values [ num_lin ] ) ) == 2"		10498051	0		==			
ANR	10498492	AssignmentExpression	"i = fscanf ( lfile , ""%d %f"" , & lin_levels [ num_lin ] , & lin_values [ num_lin ] )"		10498051	0		=			
ANR	10498493	Identifier	i		10498051	0					
ANR	10498494	CallExpression	"fscanf ( lfile , ""%d %f"" , & lin_levels [ num_lin ] , & lin_values [ num_lin ] )"		10498051	1					
ANR	10498495	Callee	fscanf		10498051	0					
ANR	10498496	Identifier	fscanf		10498051	0					
ANR	10498497	ArgumentList	lfile		10498051	1					
ANR	10498498	Argument	lfile		10498051	0					
ANR	10498499	Identifier	lfile		10498051	0					
ANR	10498500	Argument	"""%d %f"""		10498051	1					
ANR	10498501	PrimaryExpression	"""%d %f"""		10498051	0					
ANR	10498502	Argument	& lin_levels [ num_lin ]		10498051	2					
ANR	10498503	UnaryOperationExpression	& lin_levels [ num_lin ]		10498051	0					
ANR	10498504	UnaryOperator	&		10498051	0					
ANR	10498505	ArrayIndexing	lin_levels [ num_lin ]		10498051	1					
ANR	10498506	Identifier	lin_levels		10498051	0					
ANR	10498507	Identifier	num_lin		10498051	1					
ANR	10498508	Argument	& lin_values [ num_lin ]		10498051	3					
ANR	10498509	UnaryOperationExpression	& lin_values [ num_lin ]		10498051	0					
ANR	10498510	UnaryOperator	&		10498051	0					
ANR	10498511	ArrayIndexing	lin_values [ num_lin ]		10498051	1					
ANR	10498512	Identifier	lin_values		10498051	0					
ANR	10498513	Identifier	num_lin		10498051	1					
ANR	10498514	PrimaryExpression	2		10498051	1					
ANR	10498515	ExpressionStatement	num_lin ++	122:12:4120:4129	10498051	1	True				
ANR	10498516	PostIncDecOperationExpression	num_lin ++		10498051	0					
ANR	10498517	Identifier	num_lin		10498051	0					
ANR	10498518	IncDec	++		10498051	1					
ANR	10498519	IfStatement	if ( lin_levels [ num_lin ] != 256 )		10498051	4					
ANR	10498520	Condition	lin_levels [ num_lin ] != 256	123:12:4143:4168	10498051	0	True				
ANR	10498521	EqualityExpression	lin_levels [ num_lin ] != 256		10498051	0		!=			
ANR	10498522	ArrayIndexing	lin_levels [ num_lin ]		10498051	0					
ANR	10498523	Identifier	lin_levels		10498051	0					
ANR	10498524	Identifier	num_lin		10498051	1					
ANR	10498525	PrimaryExpression	256		10498051	1					
ANR	10498526	CompoundStatement		77:40:2318:2318	10498051	1					
ANR	10498527	ExpressionStatement	lin_levels [ num_lin ] = 256	124:12:4185:4210	10498051	0	True				
ANR	10498528	AssignmentExpression	lin_levels [ num_lin ] = 256		10498051	0		=			
ANR	10498529	ArrayIndexing	lin_levels [ num_lin ]		10498051	0					
ANR	10498530	Identifier	lin_levels		10498051	0					
ANR	10498531	Identifier	num_lin		10498051	1					
ANR	10498532	PrimaryExpression	256		10498051	1					
ANR	10498533	ExpressionStatement	lin_values [ num_lin ++ ] = 1.0	125:12:4224:4251	10498051	1	True				
ANR	10498534	AssignmentExpression	lin_values [ num_lin ++ ] = 1.0		10498051	0		=			
ANR	10498535	ArrayIndexing	lin_values [ num_lin ++ ]		10498051	0					
ANR	10498536	Identifier	lin_values		10498051	0					
ANR	10498537	PostIncDecOperationExpression	num_lin ++		10498051	1					
ANR	10498538	Identifier	num_lin		10498051	0					
ANR	10498539	IncDec	++		10498051	1					
ANR	10498540	PrimaryExpression	1.0		10498051	1					
ANR	10498541	ExpressionStatement	"fprintf ( stderr , ""\\ntransfer function data did not include final level 256 value\\n"" )"	126:12:4310:4393	10498051	2	True				
ANR	10498542	CallExpression	"fprintf ( stderr , ""\\ntransfer function data did not include final level 256 value\\n"" )"		10498051	0					
ANR	10498543	Callee	fprintf		10498051	0					
ANR	10498544	Identifier	fprintf		10498051	0					
ANR	10498545	ArgumentList	stderr		10498051	1					
ANR	10498546	Argument	stderr		10498051	0					
ANR	10498547	Identifier	stderr		10498051	0					
ANR	10498548	Argument	"""\\ntransfer function data did not include final level 256 value\\n"""		10498051	1					
ANR	10498549	PrimaryExpression	"""\\ntransfer function data did not include final level 256 value\\n"""		10498051	0					
ANR	10498550	IfStatement	if ( quiet == 0 )		10498051	20					
ANR	10498551	Condition	quiet == 0	130:8:4420:4429	10498051	0	True				
ANR	10498552	EqualityExpression	quiet == 0		10498051	0		==			
ANR	10498553	Identifier	quiet		10498051	0					
ANR	10498554	PrimaryExpression	0		10498051	1					
ANR	10498555	CompoundStatement		84:20:2579:2579	10498051	1					
ANR	10498556	Statement	fprintf	131:8:4442:4448	10498051	0	True				
ANR	10498557	Statement	(	131:15:4449:4449	10498051	1	True				
ANR	10498558	Statement	stderr	131:16:4450:4455	10498051	2	True				
ANR	10498559	Statement	","	131:22:4456:4456	10498051	3	True				
ANR	10498560	Statement	"""mapping '%s' from %d levels to 256 levels.\\n"""	131:24:4458:4503	10498051	4	True				
ANR	10498561	Statement	"""number of mapped data points is %d.\\n"""	132:12:4517:4555	10498051	5	True				
ANR	10498562	Statement	","	132:51:4556:4556	10498051	6	True				
ANR	10498563	Statement	argv	133:12:4570:4573	10498051	7	True				
ANR	10498564	Statement	[	133:16:4574:4574	10498051	8	True				
ANR	10498565	Statement	optargc	133:17:4575:4581	10498051	9	True				
ANR	10498566	Statement	]	133:24:4582:4582	10498051	10	True				
ANR	10498567	Statement	","	133:25:4583:4583	10498051	11	True				
ANR	10498568	Statement	num_pix	133:27:4585:4591	10498051	12	True				
ANR	10498569	Statement	","	133:34:4592:4592	10498051	13	True				
ANR	10498570	Statement	num_lin	133:36:4594:4600	10498051	14	True				
ANR	10498571	Statement	)	133:43:4601:4601	10498051	15	True				
ANR	10498572	ExpressionStatement		133:44:4602:4602	10498051	16	True				
ANR	10498573	ExpressionStatement	cur_level = 0	136:4:4615:4628	10498051	21	True				
ANR	10498574	AssignmentExpression	cur_level = 0		10498051	0		=			
ANR	10498575	Identifier	cur_level		10498051	0					
ANR	10498576	PrimaryExpression	0		10498051	1					
ANR	10498577	ExpressionStatement	cur_value = 0.0	137:4:4634:4649	10498051	22	True				
ANR	10498578	AssignmentExpression	cur_value = 0.0		10498051	0		=			
ANR	10498579	Identifier	cur_value		10498051	0					
ANR	10498580	PrimaryExpression	0.0		10498051	1					
ANR	10498581	ExpressionStatement	cur_pix = 0	138:4:4655:4666	10498051	23	True				
ANR	10498582	AssignmentExpression	cur_pix = 0		10498051	0		=			
ANR	10498583	Identifier	cur_pix		10498051	0					
ANR	10498584	PrimaryExpression	0		10498051	1					
ANR	10498585	ExpressionStatement	cur_value = 0.0	139:4:4672:4687	10498051	24	True				
ANR	10498586	AssignmentExpression	cur_value = 0.0		10498051	0		=			
ANR	10498587	Identifier	cur_value		10498051	0					
ANR	10498588	PrimaryExpression	0.0		10498051	1					
ANR	10498589	ExpressionStatement	delta_value = lin_values [ num_lin - 1 ] / ( double ) ( num_pix )	140:4:4693:4748	10498051	25	True				
ANR	10498590	AssignmentExpression	delta_value = lin_values [ num_lin - 1 ] / ( double ) ( num_pix )		10498051	0		=			
ANR	10498591	Identifier	delta_value		10498051	0					
ANR	10498592	MultiplicativeExpression	lin_values [ num_lin - 1 ] / ( double ) ( num_pix )		10498051	1		/			
ANR	10498593	ArrayIndexing	lin_values [ num_lin - 1 ]		10498051	0					
ANR	10498594	Identifier	lin_values		10498051	0					
ANR	10498595	AdditiveExpression	num_lin - 1		10498051	1		-			
ANR	10498596	Identifier	num_lin		10498051	0					
ANR	10498597	PrimaryExpression	1		10498051	1					
ANR	10498598	CastExpression	( double ) ( num_pix )		10498051	1					
ANR	10498599	CastTarget	double		10498051	0					
ANR	10498600	Identifier	num_pix		10498051	1					
ANR	10498601	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		10498051	26					
ANR	10498602	ForInit	i = 0 ;	141:9:4759:4762	10498051	0	True				
ANR	10498603	AssignmentExpression	i = 0		10498051	0		=			
ANR	10498604	Identifier	i		10498051	0					
ANR	10498605	PrimaryExpression	0		10498051	1					
ANR	10498606	Condition	i < 256	141:14:4764:4768	10498051	1	True				
ANR	10498607	RelationalExpression	i < 256		10498051	0		<			
ANR	10498608	Identifier	i		10498051	0					
ANR	10498609	PrimaryExpression	256		10498051	1					
ANR	10498610	PostIncDecOperationExpression	i ++	141:21:4771:4773	10498051	2	True				
ANR	10498611	Identifier	i		10498051	0					
ANR	10498612	IncDec	++		10498051	1					
ANR	10498613	ExpressionStatement	pixcounts [ i ] = 0	142:8:4784:4800	10498051	3	True				
ANR	10498614	AssignmentExpression	pixcounts [ i ] = 0		10498051	0		=			
ANR	10498615	ArrayIndexing	pixcounts [ i ]		10498051	0					
ANR	10498616	Identifier	pixcounts		10498051	0					
ANR	10498617	Identifier	i		10498051	1					
ANR	10498618	PrimaryExpression	0		10498051	1					
ANR	10498619	ForStatement	for ( i = 0 ; i < num_lin ; i ++ )		10498051	27					
ANR	10498620	ForInit	i = 0 ;	144:9:4812:4815	10498051	0	True				
ANR	10498621	AssignmentExpression	i = 0		10498051	0		=			
ANR	10498622	Identifier	i		10498051	0					
ANR	10498623	PrimaryExpression	0		10498051	1					
ANR	10498624	Condition	i < num_lin	144:14:4817:4825	10498051	1	True				
ANR	10498625	RelationalExpression	i < num_lin		10498051	0		<			
ANR	10498626	Identifier	i		10498051	0					
ANR	10498627	Identifier	num_lin		10498051	1					
ANR	10498628	PostIncDecOperationExpression	i ++	144:25:4828:4830	10498051	2	True				
ANR	10498629	Identifier	i		10498051	0					
ANR	10498630	IncDec	++		10498051	1					
ANR	10498631	CompoundStatement		103:8:3160:3189	10498051	3					
ANR	10498632	IdentifierDeclStatement	"int range_levels , base_level = cur_level ;"	145:8:4843:4883	10498051	0	True				
ANR	10498633	IdentifierDecl	range_levels		10498051	0					
ANR	10498634	IdentifierDeclType	int		10498051	0					
ANR	10498635	Identifier	range_levels		10498051	1					
ANR	10498636	IdentifierDecl	base_level = cur_level		10498051	1					
ANR	10498637	IdentifierDeclType	int		10498051	0					
ANR	10498638	Identifier	base_level		10498051	1					
ANR	10498639	AssignmentExpression	base_level = cur_level		10498051	2		=			
ANR	10498640	Identifier	cur_level		10498051	0					
ANR	10498641	Identifier	cur_level		10498051	1					
ANR	10498642	IdentifierDeclStatement	float base_value = cur_value ;	146:8:4893:4921	10498051	1	True				
ANR	10498643	IdentifierDecl	base_value = cur_value		10498051	0					
ANR	10498644	IdentifierDeclType	float		10498051	0					
ANR	10498645	Identifier	base_value		10498051	1					
ANR	10498646	AssignmentExpression	base_value = cur_value		10498051	2		=			
ANR	10498647	Identifier	cur_value		10498051	0					
ANR	10498648	Identifier	cur_value		10498051	1					
ANR	10498649	IdentifierDeclStatement	int next_level = lin_levels [ i ] ;	147:8:4931:4961	10498051	2	True				
ANR	10498650	IdentifierDecl	next_level = lin_levels [ i ]		10498051	0					
ANR	10498651	IdentifierDeclType	int		10498051	0					
ANR	10498652	Identifier	next_level		10498051	1					
ANR	10498653	AssignmentExpression	next_level = lin_levels [ i ]		10498051	2		=			
ANR	10498654	Identifier	next_level		10498051	0					
ANR	10498655	ArrayIndexing	lin_levels [ i ]		10498051	1					
ANR	10498656	Identifier	lin_levels		10498051	0					
ANR	10498657	Identifier	i		10498051	1					
ANR	10498658	IdentifierDeclStatement	float next_value = lin_values [ i ] ;	148:8:4971:5003	10498051	3	True				
ANR	10498659	IdentifierDecl	next_value = lin_values [ i ]		10498051	0					
ANR	10498660	IdentifierDeclType	float		10498051	0					
ANR	10498661	Identifier	next_value		10498051	1					
ANR	10498662	AssignmentExpression	next_value = lin_values [ i ]		10498051	2		=			
ANR	10498663	Identifier	next_value		10498051	0					
ANR	10498664	ArrayIndexing	lin_values [ i ]		10498051	1					
ANR	10498665	Identifier	lin_values		10498051	0					
ANR	10498666	Identifier	i		10498051	1					
ANR	10498667	IdentifierDeclStatement	"float end_value , range_values ;"	149:8:5013:5042	10498051	4	True				
ANR	10498668	IdentifierDecl	end_value		10498051	0					
ANR	10498669	IdentifierDeclType	float		10498051	0					
ANR	10498670	Identifier	end_value		10498051	1					
ANR	10498671	IdentifierDecl	range_values		10498051	1					
ANR	10498672	IdentifierDeclType	float		10498051	0					
ANR	10498673	Identifier	range_values		10498051	1					
ANR	10498674	ExpressionStatement	range_values = next_value - cur_value	151:8:5053:5090	10498051	5	True				
ANR	10498675	AssignmentExpression	range_values = next_value - cur_value		10498051	0		=			
ANR	10498676	Identifier	range_values		10498051	0					
ANR	10498677	AdditiveExpression	next_value - cur_value		10498051	1		-			
ANR	10498678	Identifier	next_value		10498051	0					
ANR	10498679	Identifier	cur_value		10498051	1					
ANR	10498680	ExpressionStatement	range_levels = next_level - cur_level	152:8:5100:5137	10498051	6	True				
ANR	10498681	AssignmentExpression	range_levels = next_level - cur_level		10498051	0		=			
ANR	10498682	Identifier	range_levels		10498051	0					
ANR	10498683	AdditiveExpression	next_level - cur_level		10498051	1		-			
ANR	10498684	Identifier	next_level		10498051	0					
ANR	10498685	Identifier	cur_level		10498051	1					
ANR	10498686	IfStatement	if ( range_levels == 0 )		10498051	7					
ANR	10498687	Condition	range_levels == 0	153:12:5151:5167	10498051	0	True				
ANR	10498688	EqualityExpression	range_levels == 0		10498051	0		==			
ANR	10498689	Identifier	range_levels		10498051	0					
ANR	10498690	PrimaryExpression	0		10498051	1					
ANR	10498691	ContinueStatement	continue ;	154:12:5182:5190	10498051	1	True				
ANR	10498692	ForStatement	for ( level = cur_level ; level < next_level ; level ++ )		10498051	8					
ANR	10498693	ForInit	level = cur_level ;	156:13:5264:5279	10498051	0	True				
ANR	10498694	AssignmentExpression	level = cur_level		10498051	0		=			
ANR	10498695	Identifier	level		10498051	0					
ANR	10498696	Identifier	cur_level		10498051	1					
ANR	10498697	Condition	level < next_level	156:30:5281:5296	10498051	1	True				
ANR	10498698	RelationalExpression	level < next_level		10498051	0		<			
ANR	10498699	Identifier	level		10498051	0					
ANR	10498700	Identifier	next_level		10498051	1					
ANR	10498701	PostIncDecOperationExpression	level ++	156:48:5299:5305	10498051	2	True				
ANR	10498702	Identifier	level		10498051	0					
ANR	10498703	IncDec	++		10498051	1					
ANR	10498704	CompoundStatement		110:57:3455:3455	10498051	3					
ANR	10498705	ExpressionStatement	end_value = base_value + range_values * ( float ) ( 1 + level - base_level ) / ( float ) range_levels	157:12:5322:5411	10498051	0	True				
ANR	10498706	AssignmentExpression	end_value = base_value + range_values * ( float ) ( 1 + level - base_level ) / ( float ) range_levels		10498051	0		=			
ANR	10498707	Identifier	end_value		10498051	0					
ANR	10498708	AdditiveExpression	base_value + range_values * ( float ) ( 1 + level - base_level ) / ( float ) range_levels		10498051	1		+			
ANR	10498709	Identifier	base_value		10498051	0					
ANR	10498710	MultiplicativeExpression	range_values * ( float ) ( 1 + level - base_level ) / ( float ) range_levels		10498051	1		*			
ANR	10498711	Identifier	range_values		10498051	0					
ANR	10498712	MultiplicativeExpression	( float ) ( 1 + level - base_level ) / ( float ) range_levels		10498051	1		/			
ANR	10498713	CastExpression	( float ) ( 1 + level - base_level )		10498051	0					
ANR	10498714	CastTarget	float		10498051	0					
ANR	10498715	AdditiveExpression	1 + level - base_level		10498051	1		+			
ANR	10498716	PrimaryExpression	1		10498051	0					
ANR	10498717	AdditiveExpression	level - base_level		10498051	1		-			
ANR	10498718	Identifier	level		10498051	0					
ANR	10498719	Identifier	base_level		10498051	1					
ANR	10498720	CastExpression	( float ) range_levels		10498051	1					
ANR	10498721	CastTarget	float		10498051	0					
ANR	10498722	Identifier	range_levels		10498051	1					
ANR	10498723	IfStatement	if ( end_value > next_value )		10498051	1					
ANR	10498724	Condition	end_value > next_value	158:16:5429:5450	10498051	0	True				
ANR	10498725	RelationalExpression	end_value > next_value		10498051	0		>			
ANR	10498726	Identifier	end_value		10498051	0					
ANR	10498727	Identifier	next_value		10498051	1					
ANR	10498728	ExpressionStatement	end_value = next_value	159:16:5469:5491	10498051	1	True				
ANR	10498729	AssignmentExpression	end_value = next_value		10498051	0		=			
ANR	10498730	Identifier	end_value		10498051	0					
ANR	10498731	Identifier	next_value		10498051	1					
ANR	10498732	WhileStatement	while ( end_value - cur_value > 0.00001 )		10498051	2					
ANR	10498733	Condition	end_value - cur_value > 0.00001	160:19:5552:5582	10498051	0	True				
ANR	10498734	RelationalExpression	end_value - cur_value > 0.00001		10498051	0		>			
ANR	10498735	AdditiveExpression	end_value - cur_value		10498051	0		-			
ANR	10498736	Identifier	end_value		10498051	0					
ANR	10498737	Identifier	cur_value		10498051	1					
ANR	10498738	PrimaryExpression	0.00001		10498051	1					
ANR	10498739	CompoundStatement		114:52:3732:3732	10498051	1					
ANR	10498740	ExpressionStatement	thresh [ thresh_order [ cur_pix ] [ 0 ] + ( width * thresh_order [ cur_pix ] [ 1 ] ) ] = level	161:16:5603:5678	10498051	0	True				
ANR	10498741	AssignmentExpression	thresh [ thresh_order [ cur_pix ] [ 0 ] + ( width * thresh_order [ cur_pix ] [ 1 ] ) ] = level		10498051	0		=			
ANR	10498742	ArrayIndexing	thresh [ thresh_order [ cur_pix ] [ 0 ] + ( width * thresh_order [ cur_pix ] [ 1 ] ) ]		10498051	0					
ANR	10498743	Identifier	thresh		10498051	0					
ANR	10498744	AdditiveExpression	thresh_order [ cur_pix ] [ 0 ] + ( width * thresh_order [ cur_pix ] [ 1 ] )		10498051	1		+			
ANR	10498745	ArrayIndexing	thresh_order [ cur_pix ] [ 0 ]		10498051	0					
ANR	10498746	ArrayIndexing	thresh_order [ cur_pix ]		10498051	0					
ANR	10498747	Identifier	thresh_order		10498051	0					
ANR	10498748	Identifier	cur_pix		10498051	1					
ANR	10498749	PrimaryExpression	0		10498051	1					
ANR	10498750	MultiplicativeExpression	width * thresh_order [ cur_pix ] [ 1 ]		10498051	1		*			
ANR	10498751	Identifier	width		10498051	0					
ANR	10498752	ArrayIndexing	thresh_order [ cur_pix ] [ 1 ]		10498051	1					
ANR	10498753	ArrayIndexing	thresh_order [ cur_pix ]		10498051	0					
ANR	10498754	Identifier	thresh_order		10498051	0					
ANR	10498755	Identifier	cur_pix		10498051	1					
ANR	10498756	PrimaryExpression	1		10498051	1					
ANR	10498757	Identifier	level		10498051	1					
ANR	10498758	ExpressionStatement	pixcounts [ level ] ++	162:16:5696:5714	10498051	1	True				
ANR	10498759	PostIncDecOperationExpression	pixcounts [ level ] ++		10498051	0					
ANR	10498760	ArrayIndexing	pixcounts [ level ]		10498051	0					
ANR	10498761	Identifier	pixcounts		10498051	0					
ANR	10498762	Identifier	level		10498051	1					
ANR	10498763	IncDec	++		10498051	1					
ANR	10498764	ExpressionStatement	cur_pix ++	163:16:5732:5741	10498051	2	True				
ANR	10498765	PostIncDecOperationExpression	cur_pix ++		10498051	0					
ANR	10498766	Identifier	cur_pix		10498051	0					
ANR	10498767	IncDec	++		10498051	1					
ANR	10498768	IfStatement	if ( cur_pix >= num_pix )		10498051	3					
ANR	10498769	Condition	cur_pix >= num_pix	164:20:5763:5780	10498051	0	True				
ANR	10498770	RelationalExpression	cur_pix >= num_pix		10498051	0		>=			
ANR	10498771	Identifier	cur_pix		10498051	0					
ANR	10498772	Identifier	num_pix		10498051	1					
ANR	10498773	BreakStatement	break ;	165:20:5803:5808	10498051	1	True				
ANR	10498774	ExpressionStatement	cur_value += delta_value	166:16:5826:5850	10498051	4	True				
ANR	10498775	AssignmentExpression	cur_value += delta_value		10498051	0		+=			
ANR	10498776	Identifier	cur_value		10498051	0					
ANR	10498777	Identifier	delta_value		10498051	1					
ANR	10498778	IfStatement	if ( cur_pix >= num_pix )		10498051	3					
ANR	10498779	Condition	cur_pix >= num_pix	168:16:5882:5899	10498051	0	True				
ANR	10498780	RelationalExpression	cur_pix >= num_pix		10498051	0		>=			
ANR	10498781	Identifier	cur_pix		10498051	0					
ANR	10498782	Identifier	num_pix		10498051	1					
ANR	10498783	BreakStatement	break ;	169:16:5918:5923	10498051	1	True				
ANR	10498784	ExpressionStatement	cur_level = next_level	171:8:5943:5965	10498051	9	True				
ANR	10498785	AssignmentExpression	cur_level = next_level		10498051	0		=			
ANR	10498786	Identifier	cur_level		10498051	0					
ANR	10498787	Identifier	next_level		10498051	1					
ANR	10498788	ForStatement	for ( ; cur_pix < num_pix ; cur_pix ++ )		10498051	28					
ANR	10498789	Condition	cur_pix < num_pix	174:11:6023:6039	10498051	0	True				
ANR	10498790	RelationalExpression	cur_pix < num_pix		10498051	0		<			
ANR	10498791	Identifier	cur_pix		10498051	0					
ANR	10498792	Identifier	num_pix		10498051	1					
ANR	10498793	PostIncDecOperationExpression	cur_pix ++	174:30:6042:6050	10498051	1	True				
ANR	10498794	Identifier	cur_pix		10498051	0					
ANR	10498795	IncDec	++		10498051	1					
ANR	10498796	CompoundStatement		128:41:4200:4200	10498051	2					
ANR	10498797	ExpressionStatement	thresh [ thresh_order [ cur_pix ] [ 0 ] + ( width * thresh_order [ cur_pix ] [ 1 ] ) ] = 255	175:8:6063:6136	10498051	0	True				
ANR	10498798	AssignmentExpression	thresh [ thresh_order [ cur_pix ] [ 0 ] + ( width * thresh_order [ cur_pix ] [ 1 ] ) ] = 255		10498051	0		=			
ANR	10498799	ArrayIndexing	thresh [ thresh_order [ cur_pix ] [ 0 ] + ( width * thresh_order [ cur_pix ] [ 1 ] ) ]		10498051	0					
ANR	10498800	Identifier	thresh		10498051	0					
ANR	10498801	AdditiveExpression	thresh_order [ cur_pix ] [ 0 ] + ( width * thresh_order [ cur_pix ] [ 1 ] )		10498051	1		+			
ANR	10498802	ArrayIndexing	thresh_order [ cur_pix ] [ 0 ]		10498051	0					
ANR	10498803	ArrayIndexing	thresh_order [ cur_pix ]		10498051	0					
ANR	10498804	Identifier	thresh_order		10498051	0					
ANR	10498805	Identifier	cur_pix		10498051	1					
ANR	10498806	PrimaryExpression	0		10498051	1					
ANR	10498807	MultiplicativeExpression	width * thresh_order [ cur_pix ] [ 1 ]		10498051	1		*			
ANR	10498808	Identifier	width		10498051	0					
ANR	10498809	ArrayIndexing	thresh_order [ cur_pix ] [ 1 ]		10498051	1					
ANR	10498810	ArrayIndexing	thresh_order [ cur_pix ]		10498051	0					
ANR	10498811	Identifier	thresh_order		10498051	0					
ANR	10498812	Identifier	cur_pix		10498051	1					
ANR	10498813	PrimaryExpression	1		10498051	1					
ANR	10498814	PrimaryExpression	255		10498051	1					
ANR	10498815	ExpressionStatement	pixcounts [ 255 ] ++	176:8:6146:6162	10498051	1	True				
ANR	10498816	PostIncDecOperationExpression	pixcounts [ 255 ] ++		10498051	0					
ANR	10498817	ArrayIndexing	pixcounts [ 255 ]		10498051	0					
ANR	10498818	Identifier	pixcounts		10498051	0					
ANR	10498819	PrimaryExpression	255		10498051	1					
ANR	10498820	IncDec	++		10498051	1					
ANR	10498821	IfStatement	if ( format == 'p' )		10498051	29					
ANR	10498822	Condition	format == 'p'	179:8:6227:6239	10498051	0	True				
ANR	10498823	EqualityExpression	format == 'p'		10498051	0		==			
ANR	10498824	Identifier	format		10498051	0					
ANR	10498825	PrimaryExpression	'p'		10498051	1					
ANR	10498826	CompoundStatement		133:23:4389:4389	10498051	1					
ANR	10498827	IfStatement	if ( num_pix >= 65536 )		10498051	0					
ANR	10498828	Condition	num_pix >= 65536	181:10:6320:6335	10498051	0	True				
ANR	10498829	RelationalExpression	num_pix >= 65536		10498051	0		>=			
ANR	10498830	Identifier	num_pix		10498051	0					
ANR	10498831	PrimaryExpression	65536		10498051	1					
ANR	10498832	CompoundStatement		135:28:4485:4485	10498051	1					
ANR	10498833	ExpressionStatement	"fprintf ( stderr , ""\\nThreshold array too large for PostScript format HalftoneType 3.\\n"" )"	182:12:6352:6438	10498051	0	True				
ANR	10498834	CallExpression	"fprintf ( stderr , ""\\nThreshold array too large for PostScript format HalftoneType 3.\\n"" )"		10498051	0					
ANR	10498835	Callee	fprintf		10498051	0					
ANR	10498836	Identifier	fprintf		10498051	0					
ANR	10498837	ArgumentList	stderr		10498051	1					
ANR	10498838	Argument	stderr		10498051	0					
ANR	10498839	Identifier	stderr		10498051	0					
ANR	10498840	Argument	"""\\nThreshold array too large for PostScript format HalftoneType 3.\\n"""		10498051	1					
ANR	10498841	PrimaryExpression	"""\\nThreshold array too large for PostScript format HalftoneType 3.\\n"""		10498051	0					
ANR	10498842	ExpressionStatement	exit ( 1 )	183:12:6452:6459	10498051	1	True				
ANR	10498843	CallExpression	exit ( 1 )		10498051	0					
ANR	10498844	Callee	exit		10498051	0					
ANR	10498845	Identifier	exit		10498051	0					
ANR	10498846	ArgumentList	1		10498051	1					
ANR	10498847	Argument	1		10498051	0					
ANR	10498848	PrimaryExpression	1		10498051	0					
ANR	10498849	ExpressionStatement	"fprintf ( ofile , ""%%!PS\\n%% Created from '%s'\\n"" , argv [ optargc ] )"	185:8:6479:6539	10498051	1	True				
ANR	10498850	CallExpression	"fprintf ( ofile , ""%%!PS\\n%% Created from '%s'\\n"" , argv [ optargc ] )"		10498051	0					
ANR	10498851	Callee	fprintf		10498051	0					
ANR	10498852	Identifier	fprintf		10498051	0					
ANR	10498853	ArgumentList	ofile		10498051	1					
ANR	10498854	Argument	ofile		10498051	0					
ANR	10498855	Identifier	ofile		10498051	0					
ANR	10498856	Argument	"""%%!PS\\n%% Created from '%s'\\n"""		10498051	1					
ANR	10498857	PrimaryExpression	"""%%!PS\\n%% Created from '%s'\\n"""		10498051	0					
ANR	10498858	Argument	argv [ optargc ]		10498051	2					
ANR	10498859	ArrayIndexing	argv [ optargc ]		10498051	0					
ANR	10498860	Identifier	argv		10498051	0					
ANR	10498861	Identifier	optargc		10498051	1					
ANR	10498862	ExpressionStatement	"fprintf ( ofile , ""<< /HalftoneType 3\\n   /Width %d\\n   /Height %d\\n   /Thresholds <"" , width , height )"	186:8:6549:6659	10498051	2	True				
ANR	10498863	CallExpression	"fprintf ( ofile , ""<< /HalftoneType 3\\n   /Width %d\\n   /Height %d\\n   /Thresholds <"" , width , height )"		10498051	0					
ANR	10498864	Callee	fprintf		10498051	0					
ANR	10498865	Identifier	fprintf		10498051	0					
ANR	10498866	ArgumentList	ofile		10498051	1					
ANR	10498867	Argument	ofile		10498051	0					
ANR	10498868	Identifier	ofile		10498051	0					
ANR	10498869	Argument	"""<< /HalftoneType 3\\n   /Width %d\\n   /Height %d\\n   /Thresholds <"""		10498051	1					
ANR	10498870	PrimaryExpression	"""<< /HalftoneType 3\\n   /Width %d\\n   /Height %d\\n   /Thresholds <"""		10498051	0					
ANR	10498871	Argument	width		10498051	2					
ANR	10498872	Identifier	width		10498051	0					
ANR	10498873	Argument	height		10498051	3					
ANR	10498874	Identifier	height		10498051	0					
ANR	10498875	ForStatement	for ( i = 0 ; i < num_pix ; i ++ )		10498051	3					
ANR	10498876	ForInit	i = 0 ;	188:13:6674:6677	10498051	0	True				
ANR	10498877	AssignmentExpression	i = 0		10498051	0		=			
ANR	10498878	Identifier	i		10498051	0					
ANR	10498879	PrimaryExpression	0		10498051	1					
ANR	10498880	Condition	i < num_pix	188:18:6679:6687	10498051	1	True				
ANR	10498881	RelationalExpression	i < num_pix		10498051	0		<			
ANR	10498882	Identifier	i		10498051	0					
ANR	10498883	Identifier	num_pix		10498051	1					
ANR	10498884	PostIncDecOperationExpression	i ++	188:29:6690:6692	10498051	2	True				
ANR	10498885	Identifier	i		10498051	0					
ANR	10498886	IncDec	++		10498051	1					
ANR	10498887	ExpressionStatement	"fprintf ( ofile , ( ( i % 32 ) == 0 ) ? ""\\n     %02x "" : ""%02x "" , 255 - thresh [ i ] )"	189:12:6707:6782	10498051	3	True				
ANR	10498888	CallExpression	"fprintf ( ofile , ( ( i % 32 ) == 0 ) ? ""\\n     %02x "" : ""%02x "" , 255 - thresh [ i ] )"		10498051	0					
ANR	10498889	Callee	fprintf		10498051	0					
ANR	10498890	Identifier	fprintf		10498051	0					
ANR	10498891	ArgumentList	ofile		10498051	1					
ANR	10498892	Argument	ofile		10498051	0					
ANR	10498893	Identifier	ofile		10498051	0					
ANR	10498894	Argument	"( ( i % 32 ) == 0 ) ? ""\\n     %02x "" : ""%02x """		10498051	1					
ANR	10498895	ConditionalExpression	"( ( i % 32 ) == 0 ) ? ""\\n     %02x "" : ""%02x """		10498051	0					
ANR	10498896	Condition	( i % 32 ) == 0		10498051	0					
ANR	10498897	EqualityExpression	( i % 32 ) == 0		10498051	0		==			
ANR	10498898	MultiplicativeExpression	i % 32		10498051	0		%			
ANR	10498899	Identifier	i		10498051	0					
ANR	10498900	PrimaryExpression	32		10498051	1					
ANR	10498901	PrimaryExpression	0		10498051	1					
ANR	10498902	PrimaryExpression	"""\\n     %02x """		10498051	1					
ANR	10498903	PrimaryExpression	"""%02x """		10498051	2					
ANR	10498904	Argument	255 - thresh [ i ]		10498051	2					
ANR	10498905	AdditiveExpression	255 - thresh [ i ]		10498051	0		-			
ANR	10498906	PrimaryExpression	255		10498051	0					
ANR	10498907	ArrayIndexing	thresh [ i ]		10498051	1					
ANR	10498908	Identifier	thresh		10498051	0					
ANR	10498909	Identifier	i		10498051	1					
ANR	10498910	ExpressionStatement	"fprintf ( ofile , "">\\n>>\\n"" )"	190:8:6792:6817	10498051	4	True				
ANR	10498911	CallExpression	"fprintf ( ofile , "">\\n>>\\n"" )"		10498051	0					
ANR	10498912	Callee	fprintf		10498051	0					
ANR	10498913	Identifier	fprintf		10498051	0					
ANR	10498914	ArgumentList	ofile		10498051	1					
ANR	10498915	Argument	ofile		10498051	0					
ANR	10498916	Identifier	ofile		10498051	0					
ANR	10498917	Argument	""">\\n>>\\n"""		10498051	1					
ANR	10498918	PrimaryExpression	""">\\n>>\\n"""		10498051	0					
ANR	10498919	ExpressionStatement	"fprintf ( ofile , ""/Default exch /Halftone defineresource sethalftone\\n{ } settransfer\\n"" )"	191:8:6827:6913	10498051	5	True				
ANR	10498920	CallExpression	"fprintf ( ofile , ""/Default exch /Halftone defineresource sethalftone\\n{ } settransfer\\n"" )"		10498051	0					
ANR	10498921	Callee	fprintf		10498051	0					
ANR	10498922	Identifier	fprintf		10498051	0					
ANR	10498923	ArgumentList	ofile		10498051	1					
ANR	10498924	Argument	ofile		10498051	0					
ANR	10498925	Identifier	ofile		10498051	0					
ANR	10498926	Argument	"""/Default exch /Halftone defineresource sethalftone\\n{ } settransfer\\n"""		10498051	1					
ANR	10498927	PrimaryExpression	"""/Default exch /Halftone defineresource sethalftone\\n{ } settransfer\\n"""		10498051	0					
ANR	10498928	ExpressionStatement	"fprintf ( ofile , ""%%%%EOF\\n"" )"	192:8:6923:6949	10498051	6	True				
ANR	10498929	CallExpression	"fprintf ( ofile , ""%%%%EOF\\n"" )"		10498051	0					
ANR	10498930	Callee	fprintf		10498051	0					
ANR	10498931	Identifier	fprintf		10498051	0					
ANR	10498932	ArgumentList	ofile		10498051	1					
ANR	10498933	Argument	ofile		10498051	0					
ANR	10498934	Identifier	ofile		10498051	0					
ANR	10498935	Argument	"""%%%%EOF\\n"""		10498051	1					
ANR	10498936	PrimaryExpression	"""%%%%EOF\\n"""		10498051	0					
ANR	10498937	ElseStatement	else		10498051	0					
ANR	10498938	CompoundStatement		147:11:5109:5109	10498051	0					
ANR	10498939	ExpressionStatement	"fprintf ( ofile , ""%c%c"" , width / 256 , width >> 256 )"	195:8:7034:7079	10498051	0	True				
ANR	10498940	CallExpression	"fprintf ( ofile , ""%c%c"" , width / 256 , width >> 256 )"		10498051	0					
ANR	10498941	Callee	fprintf		10498051	0					
ANR	10498942	Identifier	fprintf		10498051	0					
ANR	10498943	ArgumentList	ofile		10498051	1					
ANR	10498944	Argument	ofile		10498051	0					
ANR	10498945	Identifier	ofile		10498051	0					
ANR	10498946	Argument	"""%c%c"""		10498051	1					
ANR	10498947	PrimaryExpression	"""%c%c"""		10498051	0					
ANR	10498948	Argument	width / 256		10498051	2					
ANR	10498949	MultiplicativeExpression	width / 256		10498051	0		/			
ANR	10498950	Identifier	width		10498051	0					
ANR	10498951	PrimaryExpression	256		10498051	1					
ANR	10498952	Argument	width >> 256		10498051	3					
ANR	10498953	ShiftExpression	width >> 256		10498051	0		>>			
ANR	10498954	Identifier	width		10498051	0					
ANR	10498955	PrimaryExpression	256		10498051	1					
ANR	10498956	ForStatement	for ( i = 0 ; i < num_pix ; i ++ )		10498051	1					
ANR	10498957	ForInit	i = 0 ;	196:13:7094:7097	10498051	0	True				
ANR	10498958	AssignmentExpression	i = 0		10498051	0		=			
ANR	10498959	Identifier	i		10498051	0					
ANR	10498960	PrimaryExpression	0		10498051	1					
ANR	10498961	Condition	i < num_pix	196:18:7099:7107	10498051	1	True				
ANR	10498962	RelationalExpression	i < num_pix		10498051	0		<			
ANR	10498963	Identifier	i		10498051	0					
ANR	10498964	Identifier	num_pix		10498051	1					
ANR	10498965	PostIncDecOperationExpression	i ++	196:29:7110:7112	10498051	2	True				
ANR	10498966	Identifier	i		10498051	0					
ANR	10498967	IncDec	++		10498051	1					
ANR	10498968	ExpressionStatement	"fprintf ( ofile , ""%c"" , thresh [ i ] )"	197:12:7127:7158	10498051	3	True				
ANR	10498969	CallExpression	"fprintf ( ofile , ""%c"" , thresh [ i ] )"		10498051	0					
ANR	10498970	Callee	fprintf		10498051	0					
ANR	10498971	Identifier	fprintf		10498051	0					
ANR	10498972	ArgumentList	ofile		10498051	1					
ANR	10498973	Argument	ofile		10498051	0					
ANR	10498974	Identifier	ofile		10498051	0					
ANR	10498975	Argument	"""%c"""		10498051	1					
ANR	10498976	PrimaryExpression	"""%c"""		10498051	0					
ANR	10498977	Argument	thresh [ i ]		10498051	2					
ANR	10498978	ArrayIndexing	thresh [ i ]		10498051	0					
ANR	10498979	Identifier	thresh		10498051	0					
ANR	10498980	Identifier	i		10498051	1					
ANR	10498981	ExpressionStatement	fclose ( ofile )	199:4:7170:7183	10498051	30	True				
ANR	10498982	CallExpression	fclose ( ofile )		10498051	0					
ANR	10498983	Callee	fclose		10498051	0					
ANR	10498984	Identifier	fclose		10498051	0					
ANR	10498985	ArgumentList	ofile		10498051	1					
ANR	10498986	Argument	ofile		10498051	0					
ANR	10498987	Identifier	ofile		10498051	0					
ANR	10498988	IfStatement	if ( counts )		10498051	31					
ANR	10498989	Condition	counts	200:8:7193:7198	10498051	0	True				
ANR	10498990	Identifier	counts		10498051	0					
ANR	10498991	CompoundStatement		154:16:5348:5348	10498051	1					
ANR	10498992	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		10498051	0					
ANR	10498993	ForInit	i = 0 ;	201:13:7216:7219	10498051	0	True				
ANR	10498994	AssignmentExpression	i = 0		10498051	0		=			
ANR	10498995	Identifier	i		10498051	0					
ANR	10498996	PrimaryExpression	0		10498051	1					
ANR	10498997	Condition	i < 256	201:18:7221:7225	10498051	1	True				
ANR	10498998	RelationalExpression	i < 256		10498051	0		<			
ANR	10498999	Identifier	i		10498051	0					
ANR	10499000	PrimaryExpression	256		10498051	1					
ANR	10499001	PostIncDecOperationExpression	i ++	201:25:7228:7230	10498051	2	True				
ANR	10499002	Identifier	i		10498051	0					
ANR	10499003	IncDec	++		10498051	1					
ANR	10499004	ExpressionStatement	"printf ( ""%03d: %d\\n"" , i , pixcounts [ i ] )"	202:12:7245:7282	10498051	3	True				
ANR	10499005	CallExpression	"printf ( ""%03d: %d\\n"" , i , pixcounts [ i ] )"		10498051	0					
ANR	10499006	Callee	printf		10498051	0					
ANR	10499007	Identifier	printf		10498051	0					
ANR	10499008	ArgumentList	"""%03d: %d\\n"""		10498051	1					
ANR	10499009	Argument	"""%03d: %d\\n"""		10498051	0					
ANR	10499010	PrimaryExpression	"""%03d: %d\\n"""		10498051	0					
ANR	10499011	Argument	i		10498051	1					
ANR	10499012	Identifier	i		10498051	0					
ANR	10499013	Argument	pixcounts [ i ]		10498051	2					
ANR	10499014	ArrayIndexing	pixcounts [ i ]		10498051	0					
ANR	10499015	Identifier	pixcounts		10498051	0					
ANR	10499016	Identifier	i		10498051	1					
ANR	10499017	ReturnStatement	return 0 ;	205:4:7295:7303	10498051	32	True				
ANR	10499018	PrimaryExpression	0		10498051	0					
ANR	10499019	Label	usage :	207:0:7306:7311	10498051	33	True				
ANR	10499020	Identifier	usage		10498051	0					
ANR	10499021	Statement	fprintf	208:4:7317:7323	10498051	34	True				
ANR	10499022	Statement	(	208:11:7324:7324	10498051	35	True				
ANR	10499023	Statement	stderr	208:12:7325:7330	10498051	36	True				
ANR	10499024	Statement	","	208:18:7331:7331	10498051	37	True				
ANR	10499025	Statement	"""usage: """	209:8:7341:7349	10498051	38	True				
ANR	10499026	Statement	"""thresh_remap [-c] [-p] [-q] [-o outputfile] threshold.tos [transfer.dat][> threshold.bin]\\n"""	210:8:7359:7451	10498051	39	True				
ANR	10499027	Statement	"""\\n"""	211:8:7461:7464	10498051	40	True				
ANR	10499028	Statement	"""\\t-c outputs the count of pixels at each of 256 levels\\n"""	212:8:7474:7531	10498051	41	True				
ANR	10499029	Statement	"""\\t-p generates output in PostScript HalftoneType 3 format\\n"""	213:8:7541:7601	10498051	42	True				
ANR	10499030	Statement	"""\\t-q suppresses output (except -c)\\n"""	214:8:7611:7648	10498051	43	True				
ANR	10499031	Statement	"""\\t-o specifies the file for the binary or PostScript remapped threshold array\\n"""	215:8:7658:7738	10498051	44	True				
ANR	10499032	Statement	"""\\n"""	216:8:7748:7751	10498051	45	True				
ANR	10499033	Statement	"""\\tthreshold.tos is the file produced by either gen_stochastic or\\n"""	217:8:7761:7828	10498051	46	True				
ANR	10499034	Statement	"""\\tgen_ordered consisting of a header line that has the width and\\n"""	218:8:7838:7905	10498051	47	True				
ANR	10499035	Statement	"""\\theight (format '# W=%%d H=%%d' followed by a list of pixels in\\n"""	219:8:7915:7982	10498051	48	True				
ANR	10499036	Statement	"""\\torder of painting, one line per pixel format: %%d %%d\\n"""	220:8:7992:8050	10498051	49	True				
ANR	10499037	Statement	"""\\ttransfer.dat is optional. If missing, the thresold array will have\\n"""	222:8:8061:8132	10498051	50	True				
ANR	10499038	Statement	"""\\t1/256 of the total at each level. The format of the transfer.dat\\n"""	223:8:8142:8211	10498051	51	True				
ANR	10499039	Statement	"""\\tfile is: %%d %%f     where the first integer is the level and the\\n"""	224:8:8221:8291	10498051	52	True				
ANR	10499040	Statement	"""\\tsecond float is the brightness (0 == dark, similar to L* value).\\n"""	225:8:8301:8370	10498051	53	True				
ANR	10499041	Statement	"""\\tThe 'level' is in the range 0 to 256. The final entry should be\\n"""	226:8:8380:8448	10498051	54	True				
ANR	10499042	Statement	"""\\t256 WHITEVALUE. If the final measurement is not level 256, then\\n"""	227:8:8458:8526	10498051	55	True				
ANR	10499043	Statement	"""\\tthe assumed WHITEVALUE will be 1.0000\\n"""	228:8:8536:8578	10498051	56	True				
ANR	10499044	Statement	"""\\n"""	229:8:8588:8591	10498051	57	True				
ANR	10499045	Statement	)	230:8:8601:8601	10498051	58	True				
ANR	10499046	ExpressionStatement		230:9:8602:8602	10498051	59	True				
ANR	10499047	ReturnStatement	return ( 1 ) ;	231:4:8608:8617	10498051	60	True				
ANR	10499048	PrimaryExpression	1		10498051	0					
ANR	10499049	ReturnType	int		10498051	1					
ANR	10499050	Identifier	main		10498051	2					
ANR	10499051	ParameterList	"int argc , char * argv [ ]"		10498051	3					
ANR	10499052	Parameter	int argc	47:6:1828:1835	10498051	0	True				
ANR	10499053	ParameterType	int		10498051	0					
ANR	10499054	Identifier	argc		10498051	1					
ANR	10499055	Parameter	char * argv [ ]	47:16:1838:1849	10498051	1	True				
ANR	10499056	ParameterType	char * [ ]		10498051	0					
ANR	10499057	Identifier	argv		10498051	1					
ANR	10499058	CFGEntryNode	ENTRY		10498051		True				
ANR	10499059	CFGExitNode	EXIT		10498051		True				
ANR	10499060	Symbol	optargc		10498051						
ANR	10499061	Symbol	* * optargc		10498051						
ANR	10499062	Symbol	range_levels		10498051						
ANR	10499063	Symbol	* * cur_pix		10498051						
ANR	10499064	Symbol	cur_pix		10498051						
ANR	10499065	Symbol	* pixcounts		10498051						
ANR	10499066	Symbol	stdout		10498051						
ANR	10499067	Symbol	MAX_WIDTH		10498051						
ANR	10499068	Symbol	counts		10498051						
ANR	10499069	Symbol	* argv		10498051						
ANR	10499070	Symbol	* level		10498051						
ANR	10499071	Symbol	lin_levels		10498051						
ANR	10499072	Symbol	& height		10498051						
ANR	10499073	Symbol	next_value		10498051						
ANR	10499074	Symbol	next_level		10498051						
ANR	10499075	Symbol	delta_value		10498051						
ANR	10499076	Symbol	ofilename		10498051						
ANR	10499077	Symbol	MAX_HEIGHT		10498051						
ANR	10499078	Symbol	* lin_levels		10498051						
ANR	10499079	Symbol	num_lin		10498051						
ANR	10499080	Symbol	* * argv		10498051						
ANR	10499081	Symbol	* lin_values		10498051						
ANR	10499082	Symbol	cur_value		10498051						
ANR	10499083	Symbol	height		10498051						
ANR	10499084	Symbol	NULL		10498051						
ANR	10499085	Symbol	level		10498051						
ANR	10499086	Symbol	ofile		10498051						
ANR	10499087	Symbol	num_pix		10498051						
ANR	10499088	Symbol	format		10498051						
ANR	10499089	Symbol	* cur_pix		10498051						
ANR	10499090	Symbol	stderr		10498051						
ANR	10499091	Symbol	* * * thresh_order		10498051						
ANR	10499092	Symbol	* * thresh_order		10498051						
ANR	10499093	Symbol	thresh_order		10498051						
ANR	10499094	Symbol	lin_values		10498051						
ANR	10499095	Symbol	* thresh_order		10498051						
ANR	10499096	Symbol	code		10498051						
ANR	10499097	Symbol	* num_lin		10498051						
ANR	10499098	Symbol	lfile		10498051						
ANR	10499099	Symbol	& width		10498051						
ANR	10499100	Symbol	argv		10498051						
ANR	10499101	Symbol	* width		10498051						
ANR	10499102	Symbol	base_level		10498051						
ANR	10499103	Symbol	base_value		10498051						
ANR	10499104	Symbol	* * * cur_pix		10498051						
ANR	10499105	Symbol	* MAX_WIDTH		10498051						
ANR	10499106	Symbol	pixcounts		10498051						
ANR	10499107	Symbol	quiet		10498051						
ANR	10499108	Symbol	thresh		10498051						
ANR	10499109	Symbol	argc		10498051						
ANR	10499110	Symbol	fopen		10498051						
ANR	10499111	Symbol	cur_level		10498051						
ANR	10499112	Symbol	tfile		10498051						
ANR	10499113	Symbol	range_values		10498051						
ANR	10499114	Symbol	* optargc		10498051						
ANR	10499115	Symbol	i		10498051						
ANR	10499116	Symbol	* thresh		10498051						
ANR	10499117	Symbol	* MAX_HEIGHT		10498051						
ANR	10499118	Symbol	fscanf		10498051						
ANR	10499119	Symbol	* i		10498051						
ANR	10499120	Symbol	end_value		10498051						
ANR	10499121	Symbol	width		10498051						
