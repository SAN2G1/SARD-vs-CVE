command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8048224	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcfrgrnd.c								
ANR	8048225	Function	free_foreground	29:0:849:1174							
ANR	8048226	FunctionDef	"free_foreground (gs_memory_t * pmem , void * pvfrgrnd , client_name_t cname)"		8048225	0					
ANR	8048227	CompoundStatement		31:0:934:1174	8048225	0					
ANR	8048228	IdentifierDeclStatement	pcl_frgrnd_t * pfrgrnd = ( pcl_frgrnd_t * ) pvfrgrnd ;	32:4:940:989	8048225	0	True				
ANR	8048229	IdentifierDecl	* pfrgrnd = ( pcl_frgrnd_t * ) pvfrgrnd		8048225	0					
ANR	8048230	IdentifierDeclType	pcl_frgrnd_t *		8048225	0					
ANR	8048231	Identifier	pfrgrnd		8048225	1					
ANR	8048232	AssignmentExpression	* pfrgrnd = ( pcl_frgrnd_t * ) pvfrgrnd		8048225	2		=			
ANR	8048233	Identifier	pfrgrnd		8048225	0					
ANR	8048234	CastExpression	( pcl_frgrnd_t * ) pvfrgrnd		8048225	1					
ANR	8048235	CastTarget	pcl_frgrnd_t *		8048225	0					
ANR	8048236	Identifier	pvfrgrnd		8048225	1					
ANR	8048237	IfStatement	if ( pfrgrnd -> pbase != 0 )		8048225	1					
ANR	8048238	Condition	pfrgrnd -> pbase != 0	34:8:1000:1018	8048225	0	True				
ANR	8048239	EqualityExpression	pfrgrnd -> pbase != 0		8048225	0		!=			
ANR	8048240	PtrMemberAccess	pfrgrnd -> pbase		8048225	0					
ANR	8048241	Identifier	pfrgrnd		8048225	0					
ANR	8048242	Identifier	pbase		8048225	1					
ANR	8048243	PrimaryExpression	0		8048225	1					
ANR	8048244	ExpressionStatement	pcl_cs_base_release ( pfrgrnd -> pbase )	35:8:1029:1064	8048225	1	True				
ANR	8048245	CallExpression	pcl_cs_base_release ( pfrgrnd -> pbase )		8048225	0					
ANR	8048246	Callee	pcl_cs_base_release		8048225	0					
ANR	8048247	Identifier	pcl_cs_base_release		8048225	0					
ANR	8048248	ArgumentList	pfrgrnd -> pbase		8048225	1					
ANR	8048249	Argument	pfrgrnd -> pbase		8048225	0					
ANR	8048250	PtrMemberAccess	pfrgrnd -> pbase		8048225	0					
ANR	8048251	Identifier	pfrgrnd		8048225	0					
ANR	8048252	Identifier	pbase		8048225	1					
ANR	8048253	IfStatement	if ( pfrgrnd -> pht != 0 )		8048225	2					
ANR	8048254	Condition	pfrgrnd -> pht != 0	36:8:1074:1090	8048225	0	True				
ANR	8048255	EqualityExpression	pfrgrnd -> pht != 0		8048225	0		!=			
ANR	8048256	PtrMemberAccess	pfrgrnd -> pht		8048225	0					
ANR	8048257	Identifier	pfrgrnd		8048225	0					
ANR	8048258	Identifier	pht		8048225	1					
ANR	8048259	PrimaryExpression	0		8048225	1					
ANR	8048260	ExpressionStatement	pcl_ht_release ( pfrgrnd -> pht )	37:8:1101:1129	8048225	1	True				
ANR	8048261	CallExpression	pcl_ht_release ( pfrgrnd -> pht )		8048225	0					
ANR	8048262	Callee	pcl_ht_release		8048225	0					
ANR	8048263	Identifier	pcl_ht_release		8048225	0					
ANR	8048264	ArgumentList	pfrgrnd -> pht		8048225	1					
ANR	8048265	Argument	pfrgrnd -> pht		8048225	0					
ANR	8048266	PtrMemberAccess	pfrgrnd -> pht		8048225	0					
ANR	8048267	Identifier	pfrgrnd		8048225	0					
ANR	8048268	Identifier	pht		8048225	1					
ANR	8048269	ExpressionStatement	"gs_free_object ( pmem , pvfrgrnd , cname )"	38:4:1135:1172	8048225	3	True				
ANR	8048270	CallExpression	"gs_free_object ( pmem , pvfrgrnd , cname )"		8048225	0					
ANR	8048271	Callee	gs_free_object		8048225	0					
ANR	8048272	Identifier	gs_free_object		8048225	0					
ANR	8048273	ArgumentList	pmem		8048225	1					
ANR	8048274	Argument	pmem		8048225	0					
ANR	8048275	Identifier	pmem		8048225	0					
ANR	8048276	Argument	pvfrgrnd		8048225	1					
ANR	8048277	Identifier	pvfrgrnd		8048225	0					
ANR	8048278	Argument	cname		8048225	2					
ANR	8048279	Identifier	cname		8048225	0					
ANR	8048280	ReturnType	static void		8048225	1					
ANR	8048281	Identifier	free_foreground		8048225	2					
ANR	8048282	ParameterList	"gs_memory_t * pmem , void * pvfrgrnd , client_name_t cname"		8048225	3					
ANR	8048283	Parameter	gs_memory_t * pmem	30:16:877:894	8048225	0	True				
ANR	8048284	ParameterType	gs_memory_t *		8048225	0					
ANR	8048285	Identifier	pmem		8048225	1					
ANR	8048286	Parameter	void * pvfrgrnd	30:36:897:910	8048225	1	True				
ANR	8048287	ParameterType	void *		8048225	0					
ANR	8048288	Identifier	pvfrgrnd		8048225	1					
ANR	8048289	Parameter	client_name_t cname	30:52:913:931	8048225	2	True				
ANR	8048290	ParameterType	client_name_t		8048225	0					
ANR	8048291	Identifier	cname		8048225	1					
ANR	8048292	CFGEntryNode	ENTRY		8048225		True				
ANR	8048293	CFGExitNode	EXIT		8048225		True				
ANR	8048294	Symbol	pmem		8048225						
ANR	8048295	Symbol	pfrgrnd		8048225						
ANR	8048296	Symbol	pfrgrnd -> pbase		8048225						
ANR	8048297	Symbol	cname		8048225						
ANR	8048298	Symbol	* pfrgrnd		8048225						
ANR	8048299	Symbol	pfrgrnd -> pht		8048225						
ANR	8048300	Symbol	pvfrgrnd		8048225						
ANR	8048301	Function	alloc_foreground	46:0:1279:1789							
ANR	8048302	FunctionDef	"alloc_foreground (pcl_state_t * pcs , pcl_frgrnd_t * * ppfrgrnd , gs_memory_t * pmem)"		8048301	0					
ANR	8048303	CompoundStatement		49:0:1389:1789	8048301	0					
ANR	8048304	IdentifierDeclStatement	pcl_frgrnd_t * pfrgrnd = 0 ;	50:4:1395:1420	8048301	0	True				
ANR	8048305	IdentifierDecl	* pfrgrnd = 0		8048301	0					
ANR	8048306	IdentifierDeclType	pcl_frgrnd_t *		8048301	0					
ANR	8048307	Identifier	pfrgrnd		8048301	1					
ANR	8048308	AssignmentExpression	* pfrgrnd = 0		8048301	2		=			
ANR	8048309	Identifier	pfrgrnd		8048301	0					
ANR	8048310	PrimaryExpression	0		8048301	1					
ANR	8048311	Statement	rc_alloc_struct_1	52:4:1427:1443	8048301	1	True				
ANR	8048312	Statement	(	52:21:1444:1444	8048301	2	True				
ANR	8048313	Statement	pfrgrnd	52:22:1445:1451	8048301	3	True				
ANR	8048314	Statement	","	52:29:1452:1452	8048301	4	True				
ANR	8048315	Statement	pcl_frgrnd_t	53:22:1476:1487	8048301	5	True				
ANR	8048316	Statement	","	53:34:1488:1488	8048301	6	True				
ANR	8048317	Statement	&	54:22:1512:1512	8048301	7	True				
ANR	8048318	Statement	st_frgrnd_t	54:23:1513:1523	8048301	8	True				
ANR	8048319	Statement	","	54:34:1524:1524	8048301	9	True				
ANR	8048320	Statement	pmem	55:22:1548:1551	8048301	10	True				
ANR	8048321	Statement	","	55:26:1552:1552	8048301	11	True				
ANR	8048322	Statement	return	56:22:1576:1581	8048301	12	True				
ANR	8048323	Statement	e_Memory	56:29:1583:1590	8048301	13	True				
ANR	8048324	Statement	","	56:37:1591:1591	8048301	14	True				
ANR	8048325	Statement	"""allocate pcl foreground object"""	56:39:1593:1624	8048301	15	True				
ANR	8048326	Statement	)	56:71:1625:1625	8048301	16	True				
ANR	8048327	ExpressionStatement		56:72:1626:1626	8048301	17	True				
ANR	8048328	ExpressionStatement	pfrgrnd -> rc . free = free_foreground	57:4:1632:1666	8048301	18	True				
ANR	8048329	AssignmentExpression	pfrgrnd -> rc . free = free_foreground		8048301	0		=			
ANR	8048330	MemberAccess	pfrgrnd -> rc . free		8048301	0					
ANR	8048331	PtrMemberAccess	pfrgrnd -> rc		8048301	0					
ANR	8048332	Identifier	pfrgrnd		8048301	0					
ANR	8048333	Identifier	rc		8048301	1					
ANR	8048334	Identifier	free		8048301	1					
ANR	8048335	Identifier	free_foreground		8048301	1					
ANR	8048336	ExpressionStatement	pfrgrnd -> id = pcl_next_id ( pcs )	58:4:1672:1702	8048301	19	True				
ANR	8048337	AssignmentExpression	pfrgrnd -> id = pcl_next_id ( pcs )		8048301	0		=			
ANR	8048338	PtrMemberAccess	pfrgrnd -> id		8048301	0					
ANR	8048339	Identifier	pfrgrnd		8048301	0					
ANR	8048340	Identifier	id		8048301	1					
ANR	8048341	CallExpression	pcl_next_id ( pcs )		8048301	1					
ANR	8048342	Callee	pcl_next_id		8048301	0					
ANR	8048343	Identifier	pcl_next_id		8048301	0					
ANR	8048344	ArgumentList	pcs		8048301	1					
ANR	8048345	Argument	pcs		8048301	0					
ANR	8048346	Identifier	pcs		8048301	0					
ANR	8048347	ExpressionStatement	pfrgrnd -> pbase = 0	59:4:1708:1726	8048301	20	True				
ANR	8048348	AssignmentExpression	pfrgrnd -> pbase = 0		8048301	0		=			
ANR	8048349	PtrMemberAccess	pfrgrnd -> pbase		8048301	0					
ANR	8048350	Identifier	pfrgrnd		8048301	0					
ANR	8048351	Identifier	pbase		8048301	1					
ANR	8048352	PrimaryExpression	0		8048301	1					
ANR	8048353	ExpressionStatement	pfrgrnd -> pht = 0	60:4:1732:1748	8048301	21	True				
ANR	8048354	AssignmentExpression	pfrgrnd -> pht = 0		8048301	0		=			
ANR	8048355	PtrMemberAccess	pfrgrnd -> pht		8048301	0					
ANR	8048356	Identifier	pfrgrnd		8048301	0					
ANR	8048357	Identifier	pht		8048301	1					
ANR	8048358	PrimaryExpression	0		8048301	1					
ANR	8048359	ExpressionStatement	* ppfrgrnd = pfrgrnd	61:4:1754:1773	8048301	22	True				
ANR	8048360	AssignmentExpression	* ppfrgrnd = pfrgrnd		8048301	0		=			
ANR	8048361	UnaryOperationExpression	* ppfrgrnd		8048301	0					
ANR	8048362	UnaryOperator	*		8048301	0					
ANR	8048363	Identifier	ppfrgrnd		8048301	1					
ANR	8048364	Identifier	pfrgrnd		8048301	1					
ANR	8048365	ReturnStatement	return 0 ;	62:4:1779:1787	8048301	23	True				
ANR	8048366	PrimaryExpression	0		8048301	0					
ANR	8048367	ReturnType	static int		8048301	1					
ANR	8048368	Identifier	alloc_foreground		8048301	2					
ANR	8048369	ParameterList	"pcl_state_t * pcs , pcl_frgrnd_t * * ppfrgrnd , gs_memory_t * pmem"		8048301	3					
ANR	8048370	Parameter	pcl_state_t * pcs	47:17:1307:1323	8048301	0	True				
ANR	8048371	ParameterType	pcl_state_t *		8048301	0					
ANR	8048372	Identifier	pcs		8048301	1					
ANR	8048373	Parameter	pcl_frgrnd_t * * ppfrgrnd	48:17:1343:1366	8048301	1	True				
ANR	8048374	ParameterType	pcl_frgrnd_t * *		8048301	0					
ANR	8048375	Identifier	ppfrgrnd		8048301	1					
ANR	8048376	Parameter	gs_memory_t * pmem	48:43:1369:1386	8048301	2	True				
ANR	8048377	ParameterType	gs_memory_t *		8048301	0					
ANR	8048378	Identifier	pmem		8048301	1					
ANR	8048379	CFGEntryNode	ENTRY		8048301		True				
ANR	8048380	CFGExitNode	EXIT		8048301		True				
ANR	8048381	Symbol	pcs		8048301						
ANR	8048382	Symbol	pfrgrnd		8048301						
ANR	8048383	Symbol	pfrgrnd -> rc		8048301						
ANR	8048384	Symbol	free_foreground		8048301						
ANR	8048385	Symbol	pfrgrnd -> pht		8048301						
ANR	8048386	Symbol	ppfrgrnd		8048301						
ANR	8048387	Symbol	pmem		8048301						
ANR	8048388	Symbol	pfrgrnd -> rc . free		8048301						
ANR	8048389	Symbol	pfrgrnd -> pbase		8048301						
ANR	8048390	Symbol	* pfrgrnd		8048301						
ANR	8048391	Symbol	pcl_next_id		8048301						
ANR	8048392	Symbol	pfrgrnd -> id		8048301						
ANR	8048393	Symbol	* ppfrgrnd		8048301						
ANR	8048394	Function	build_foreground	74:0:2051:4171							
ANR	8048395	FunctionDef	"build_foreground (pcl_state_t * pcs , pcl_frgrnd_t * * ppfrgrnd , const pcl_palette_t * ppalet , int pal_entry , gs_memory_t * pmem)"		8048394	0					
ANR	8048396	CompoundStatement		79:0:2240:4171	8048394	0					
ANR	8048397	IdentifierDeclStatement	pcl_frgrnd_t * pfrgrnd = * ppfrgrnd ;	80:4:2246:2279	8048394	0	True				
ANR	8048398	IdentifierDecl	* pfrgrnd = * ppfrgrnd		8048394	0					
ANR	8048399	IdentifierDeclType	pcl_frgrnd_t *		8048394	0					
ANR	8048400	Identifier	pfrgrnd		8048394	1					
ANR	8048401	AssignmentExpression	* pfrgrnd = * ppfrgrnd		8048394	2		=			
ANR	8048402	Identifier	pfrgrnd		8048394	0					
ANR	8048403	UnaryOperationExpression	* ppfrgrnd		8048394	1					
ANR	8048404	UnaryOperator	*		8048394	0					
ANR	8048405	Identifier	ppfrgrnd		8048394	1					
ANR	8048406	IdentifierDeclStatement	const pcl_cs_indexed_t * pindexed = ppalet -> pindexed ;	81:4:2285:2336	8048394	1	True				
ANR	8048407	IdentifierDecl	* pindexed = ppalet -> pindexed		8048394	0					
ANR	8048408	IdentifierDeclType	const pcl_cs_indexed_t *		8048394	0					
ANR	8048409	Identifier	pindexed		8048394	1					
ANR	8048410	AssignmentExpression	* pindexed = ppalet -> pindexed		8048394	2		=			
ANR	8048411	Identifier	pindexed		8048394	0					
ANR	8048412	PtrMemberAccess	ppalet -> pindexed		8048394	1					
ANR	8048413	Identifier	ppalet		8048394	0					
ANR	8048414	Identifier	pindexed		8048394	1					
ANR	8048415	IdentifierDeclStatement	int num_entries ;	82:4:2342:2357	8048394	2	True				
ANR	8048416	IdentifierDecl	num_entries		8048394	0					
ANR	8048417	IdentifierDeclType	int		8048394	0					
ANR	8048418	Identifier	num_entries		8048394	1					
ANR	8048419	IdentifierDeclStatement	bool is_default = false ;	83:4:2363:2386	8048394	3	True				
ANR	8048420	IdentifierDecl	is_default = false		8048394	0					
ANR	8048421	IdentifierDeclType	bool		8048394	0					
ANR	8048422	Identifier	is_default		8048394	1					
ANR	8048423	AssignmentExpression	is_default = false		8048394	2		=			
ANR	8048424	Identifier	false		8048394	0					
ANR	8048425	Identifier	false		8048394	1					
ANR	8048426	IdentifierDeclStatement	int code = 0 ;	84:4:2392:2404	8048394	4	True				
ANR	8048427	IdentifierDecl	code = 0		8048394	0					
ANR	8048428	IdentifierDeclType	int		8048394	0					
ANR	8048429	Identifier	code		8048394	1					
ANR	8048430	AssignmentExpression	code = 0		8048394	2		=			
ANR	8048431	Identifier	code		8048394	0					
ANR	8048432	PrimaryExpression	0		8048394	1					
ANR	8048433	IfStatement	if ( ( pindexed != 0 ) && ( pindexed -> pfixed ) && ( pindexed -> num_entries == 2 ) && ( pal_entry == 1 ) )		8048394	5					
ANR	8048434	Condition	( pindexed != 0 ) && ( pindexed -> pfixed ) && ( pindexed -> num_entries == 2 ) && ( pal_entry == 1 )	92:8:2704:2800	8048394	0	True				
ANR	8048435	AndExpression	( pindexed != 0 ) && ( pindexed -> pfixed ) && ( pindexed -> num_entries == 2 ) && ( pal_entry == 1 )		8048394	0		&&			
ANR	8048436	EqualityExpression	pindexed != 0		8048394	0		!=			
ANR	8048437	Identifier	pindexed		8048394	0					
ANR	8048438	PrimaryExpression	0		8048394	1					
ANR	8048439	AndExpression	( pindexed -> pfixed ) && ( pindexed -> num_entries == 2 ) && ( pal_entry == 1 )		8048394	1		&&			
ANR	8048440	PtrMemberAccess	pindexed -> pfixed		8048394	0					
ANR	8048441	Identifier	pindexed		8048394	0					
ANR	8048442	Identifier	pfixed		8048394	1					
ANR	8048443	AndExpression	( pindexed -> num_entries == 2 ) && ( pal_entry == 1 )		8048394	1		&&			
ANR	8048444	EqualityExpression	pindexed -> num_entries == 2		8048394	0		==			
ANR	8048445	PtrMemberAccess	pindexed -> num_entries		8048394	0					
ANR	8048446	Identifier	pindexed		8048394	0					
ANR	8048447	Identifier	num_entries		8048394	1					
ANR	8048448	PrimaryExpression	2		8048394	1					
ANR	8048449	EqualityExpression	pal_entry == 1		8048394	1		==			
ANR	8048450	Identifier	pal_entry		8048394	0					
ANR	8048451	PrimaryExpression	1		8048394	1					
ANR	8048452	CompoundStatement		15:80:562:562	8048394	1					
ANR	8048453	ExpressionStatement	is_default = true	94:8:2813:2830	8048394	0	True				
ANR	8048454	AssignmentExpression	is_default = true		8048394	0		=			
ANR	8048455	Identifier	is_default		8048394	0					
ANR	8048456	Identifier	true		8048394	1					
ANR	8048457	IfStatement	if ( pcs -> pdflt_frgrnd != 0 )		8048394	1					
ANR	8048458	Condition	pcs -> pdflt_frgrnd != 0	95:12:2844:2865	8048394	0	True				
ANR	8048459	EqualityExpression	pcs -> pdflt_frgrnd != 0		8048394	0		!=			
ANR	8048460	PtrMemberAccess	pcs -> pdflt_frgrnd		8048394	0					
ANR	8048461	Identifier	pcs		8048394	0					
ANR	8048462	Identifier	pdflt_frgrnd		8048394	1					
ANR	8048463	PrimaryExpression	0		8048394	1					
ANR	8048464	CompoundStatement		17:36:627:627	8048394	1					
ANR	8048465	ExpressionStatement	"pcl_frgrnd_copy_from ( * ppfrgrnd , pcs -> pdflt_frgrnd )"	96:12:2882:2932	8048394	0	True				
ANR	8048466	CallExpression	"pcl_frgrnd_copy_from ( * ppfrgrnd , pcs -> pdflt_frgrnd )"		8048394	0					
ANR	8048467	Callee	pcl_frgrnd_copy_from		8048394	0					
ANR	8048468	Identifier	pcl_frgrnd_copy_from		8048394	0					
ANR	8048469	ArgumentList	* ppfrgrnd		8048394	1					
ANR	8048470	Argument	* ppfrgrnd		8048394	0					
ANR	8048471	UnaryOperationExpression	* ppfrgrnd		8048394	0					
ANR	8048472	UnaryOperator	*		8048394	0					
ANR	8048473	Identifier	ppfrgrnd		8048394	1					
ANR	8048474	Argument	pcs -> pdflt_frgrnd		8048394	1					
ANR	8048475	PtrMemberAccess	pcs -> pdflt_frgrnd		8048394	0					
ANR	8048476	Identifier	pcs		8048394	0					
ANR	8048477	Identifier	pdflt_frgrnd		8048394	1					
ANR	8048478	ReturnStatement	return 0 ;	97:12:2946:2954	8048394	1	True				
ANR	8048479	PrimaryExpression	0		8048394	0					
ANR	8048480	ExpressionStatement	num_entries = pindexed -> num_entries	101:4:2977:3012	8048394	6	True				
ANR	8048481	AssignmentExpression	num_entries = pindexed -> num_entries		8048394	0		=			
ANR	8048482	Identifier	num_entries		8048394	0					
ANR	8048483	PtrMemberAccess	pindexed -> num_entries		8048394	1					
ANR	8048484	Identifier	pindexed		8048394	0					
ANR	8048485	Identifier	num_entries		8048394	1					
ANR	8048486	IfStatement	if ( pfrgrnd != 0 )		8048394	7					
ANR	8048487	Condition	pfrgrnd != 0	104:8:3069:3080	8048394	0	True				
ANR	8048488	EqualityExpression	pfrgrnd != 0		8048394	0		!=			
ANR	8048489	Identifier	pfrgrnd		8048394	0					
ANR	8048490	PrimaryExpression	0		8048394	1					
ANR	8048491	CompoundStatement		26:22:842:842	8048394	1					
ANR	8048492	ExpressionStatement	"rc_decrement ( pfrgrnd , ""build pcl foreground"" )"	105:8:3093:3138	8048394	0	True				
ANR	8048493	CallExpression	"rc_decrement ( pfrgrnd , ""build pcl foreground"" )"		8048394	0					
ANR	8048494	Callee	rc_decrement		8048394	0					
ANR	8048495	Identifier	rc_decrement		8048394	0					
ANR	8048496	ArgumentList	pfrgrnd		8048394	1					
ANR	8048497	Argument	pfrgrnd		8048394	0					
ANR	8048498	Identifier	pfrgrnd		8048394	0					
ANR	8048499	Argument	"""build pcl foreground"""		8048394	1					
ANR	8048500	PrimaryExpression	"""build pcl foreground"""		8048394	0					
ANR	8048501	ExpressionStatement	* ppfrgrnd = 0	106:8:3148:3161	8048394	1	True				
ANR	8048502	AssignmentExpression	* ppfrgrnd = 0		8048394	0		=			
ANR	8048503	UnaryOperationExpression	* ppfrgrnd		8048394	0					
ANR	8048504	UnaryOperator	*		8048394	0					
ANR	8048505	Identifier	ppfrgrnd		8048394	1					
ANR	8048506	PrimaryExpression	0		8048394	1					
ANR	8048507	IfStatement	"if ( ( code = alloc_foreground ( pcs , ppfrgrnd , pmem ) ) < 0 )"		8048394	8					
ANR	8048508	Condition	"( code = alloc_foreground ( pcs , ppfrgrnd , pmem ) ) < 0"	109:8:3178:3227	8048394	0	True				
ANR	8048509	RelationalExpression	"( code = alloc_foreground ( pcs , ppfrgrnd , pmem ) ) < 0"		8048394	0		<			
ANR	8048510	AssignmentExpression	"code = alloc_foreground ( pcs , ppfrgrnd , pmem )"		8048394	0		=			
ANR	8048511	Identifier	code		8048394	0					
ANR	8048512	CallExpression	"alloc_foreground ( pcs , ppfrgrnd , pmem )"		8048394	1					
ANR	8048513	Callee	alloc_foreground		8048394	0					
ANR	8048514	Identifier	alloc_foreground		8048394	0					
ANR	8048515	ArgumentList	pcs		8048394	1					
ANR	8048516	Argument	pcs		8048394	0					
ANR	8048517	Identifier	pcs		8048394	0					
ANR	8048518	Argument	ppfrgrnd		8048394	1					
ANR	8048519	Identifier	ppfrgrnd		8048394	0					
ANR	8048520	Argument	pmem		8048394	2					
ANR	8048521	Identifier	pmem		8048394	0					
ANR	8048522	PrimaryExpression	0		8048394	1					
ANR	8048523	ReturnStatement	return code ;	110:8:3238:3249	8048394	1	True				
ANR	8048524	Identifier	code		8048394	0					
ANR	8048525	ExpressionStatement	pfrgrnd = * ppfrgrnd	111:4:3255:3274	8048394	9	True				
ANR	8048526	AssignmentExpression	pfrgrnd = * ppfrgrnd		8048394	0		=			
ANR	8048527	Identifier	pfrgrnd		8048394	0					
ANR	8048528	UnaryOperationExpression	* ppfrgrnd		8048394	1					
ANR	8048529	UnaryOperator	*		8048394	0					
ANR	8048530	Identifier	ppfrgrnd		8048394	1					
ANR	8048531	IfStatement	if ( ( pal_entry < 0 ) || ( pal_entry >= num_entries ) )		8048394	10					
ANR	8048532	Condition	( pal_entry < 0 ) || ( pal_entry >= num_entries )	114:8:3352:3396	8048394	0	True				
ANR	8048533	OrExpression	( pal_entry < 0 ) || ( pal_entry >= num_entries )		8048394	0		||			
ANR	8048534	RelationalExpression	pal_entry < 0		8048394	0		<			
ANR	8048535	Identifier	pal_entry		8048394	0					
ANR	8048536	PrimaryExpression	0		8048394	1					
ANR	8048537	RelationalExpression	pal_entry >= num_entries		8048394	1		>=			
ANR	8048538	Identifier	pal_entry		8048394	0					
ANR	8048539	Identifier	num_entries		8048394	1					
ANR	8048540	CompoundStatement		36:55:1158:1158	8048394	1					
ANR	8048541	IfStatement	if ( pindexed -> is_GL )		8048394	0					
ANR	8048542	Condition	pindexed -> is_GL	115:12:3413:3427	8048394	0	True				
ANR	8048543	PtrMemberAccess	pindexed -> is_GL		8048394	0					
ANR	8048544	Identifier	pindexed		8048394	0					
ANR	8048545	Identifier	is_GL		8048394	1					
ANR	8048546	CompoundStatement		38:12:1203:1232	8048394	1					
ANR	8048547	IdentifierDeclStatement	int max_pen = num_entries - 1 ;	116:12:3444:3473	8048394	0	True				
ANR	8048548	IdentifierDecl	max_pen = num_entries - 1		8048394	0					
ANR	8048549	IdentifierDeclType	int		8048394	0					
ANR	8048550	Identifier	max_pen		8048394	1					
ANR	8048551	AssignmentExpression	max_pen = num_entries - 1		8048394	2		=			
ANR	8048552	Identifier	max_pen		8048394	0					
ANR	8048553	AdditiveExpression	num_entries - 1		8048394	1		-			
ANR	8048554	Identifier	num_entries		8048394	0					
ANR	8048555	PrimaryExpression	1		8048394	1					
ANR	8048556	WhileStatement	while ( pal_entry > max_pen )		8048394	1					
ANR	8048557	Condition	pal_entry > max_pen	118:19:3495:3513	8048394	0	True				
ANR	8048558	RelationalExpression	pal_entry > max_pen		8048394	0		>			
ANR	8048559	Identifier	pal_entry		8048394	0					
ANR	8048560	Identifier	max_pen		8048394	1					
ANR	8048561	ExpressionStatement	pal_entry -= max_pen	119:16:3532:3552	8048394	1	True				
ANR	8048562	AssignmentExpression	pal_entry -= max_pen		8048394	0		-=			
ANR	8048563	Identifier	pal_entry		8048394	0					
ANR	8048564	Identifier	max_pen		8048394	1					
ANR	8048565	ElseStatement	else		8048394	0					
ANR	8048566	CompoundStatement		42:15:1328:1328	8048394	0					
ANR	8048567	ExpressionStatement	pal_entry %= num_entries	121:12:3583:3607	8048394	0	True				
ANR	8048568	AssignmentExpression	pal_entry %= num_entries		8048394	0		%=			
ANR	8048569	Identifier	pal_entry		8048394	0					
ANR	8048570	Identifier	num_entries		8048394	1					
ANR	8048571	IfStatement	if ( pal_entry < 0 )		8048394	1					
ANR	8048572	Condition	pal_entry < 0	122:16:3625:3637	8048394	0	True				
ANR	8048573	RelationalExpression	pal_entry < 0		8048394	0		<			
ANR	8048574	Identifier	pal_entry		8048394	0					
ANR	8048575	PrimaryExpression	0		8048394	1					
ANR	8048576	ExpressionStatement	pal_entry += num_entries	123:16:3656:3680	8048394	1	True				
ANR	8048577	AssignmentExpression	pal_entry += num_entries		8048394	0		+=			
ANR	8048578	Identifier	pal_entry		8048394	0					
ANR	8048579	Identifier	num_entries		8048394	1					
ANR	8048580	ExpressionStatement	pfrgrnd -> is_cmy = ( ppalet -> pindexed -> original_cspace == 1 )	127:4:3703:3761	8048394	11	True				
ANR	8048581	AssignmentExpression	pfrgrnd -> is_cmy = ( ppalet -> pindexed -> original_cspace == 1 )		8048394	0		=			
ANR	8048582	PtrMemberAccess	pfrgrnd -> is_cmy		8048394	0					
ANR	8048583	Identifier	pfrgrnd		8048394	0					
ANR	8048584	Identifier	is_cmy		8048394	1					
ANR	8048585	EqualityExpression	ppalet -> pindexed -> original_cspace == 1		8048394	1		==			
ANR	8048586	PtrMemberAccess	ppalet -> pindexed -> original_cspace		8048394	0					
ANR	8048587	PtrMemberAccess	ppalet -> pindexed		8048394	0					
ANR	8048588	Identifier	ppalet		8048394	0					
ANR	8048589	Identifier	pindexed		8048394	1					
ANR	8048590	Identifier	original_cspace		8048394	1					
ANR	8048591	PrimaryExpression	1		8048394	1					
ANR	8048592	ExpressionStatement	pfrgrnd -> color [ 0 ] = pindexed -> palette . data [ 3 * pal_entry ]	128:4:3767:3824	8048394	12	True				
ANR	8048593	AssignmentExpression	pfrgrnd -> color [ 0 ] = pindexed -> palette . data [ 3 * pal_entry ]		8048394	0		=			
ANR	8048594	ArrayIndexing	pfrgrnd -> color [ 0 ]		8048394	0					
ANR	8048595	PtrMemberAccess	pfrgrnd -> color		8048394	0					
ANR	8048596	Identifier	pfrgrnd		8048394	0					
ANR	8048597	Identifier	color		8048394	1					
ANR	8048598	PrimaryExpression	0		8048394	1					
ANR	8048599	ArrayIndexing	pindexed -> palette . data [ 3 * pal_entry ]		8048394	1					
ANR	8048600	MemberAccess	pindexed -> palette . data		8048394	0					
ANR	8048601	PtrMemberAccess	pindexed -> palette		8048394	0					
ANR	8048602	Identifier	pindexed		8048394	0					
ANR	8048603	Identifier	palette		8048394	1					
ANR	8048604	Identifier	data		8048394	1					
ANR	8048605	MultiplicativeExpression	3 * pal_entry		8048394	1		*			
ANR	8048606	PrimaryExpression	3		8048394	0					
ANR	8048607	Identifier	pal_entry		8048394	1					
ANR	8048608	ExpressionStatement	pfrgrnd -> color [ 1 ] = pindexed -> palette . data [ 3 * pal_entry + 1 ]	129:4:3830:3891	8048394	13	True				
ANR	8048609	AssignmentExpression	pfrgrnd -> color [ 1 ] = pindexed -> palette . data [ 3 * pal_entry + 1 ]		8048394	0		=			
ANR	8048610	ArrayIndexing	pfrgrnd -> color [ 1 ]		8048394	0					
ANR	8048611	PtrMemberAccess	pfrgrnd -> color		8048394	0					
ANR	8048612	Identifier	pfrgrnd		8048394	0					
ANR	8048613	Identifier	color		8048394	1					
ANR	8048614	PrimaryExpression	1		8048394	1					
ANR	8048615	ArrayIndexing	pindexed -> palette . data [ 3 * pal_entry + 1 ]		8048394	1					
ANR	8048616	MemberAccess	pindexed -> palette . data		8048394	0					
ANR	8048617	PtrMemberAccess	pindexed -> palette		8048394	0					
ANR	8048618	Identifier	pindexed		8048394	0					
ANR	8048619	Identifier	palette		8048394	1					
ANR	8048620	Identifier	data		8048394	1					
ANR	8048621	AdditiveExpression	3 * pal_entry + 1		8048394	1		+			
ANR	8048622	MultiplicativeExpression	3 * pal_entry		8048394	0		*			
ANR	8048623	PrimaryExpression	3		8048394	0					
ANR	8048624	Identifier	pal_entry		8048394	1					
ANR	8048625	PrimaryExpression	1		8048394	1					
ANR	8048626	ExpressionStatement	pfrgrnd -> color [ 2 ] = pindexed -> palette . data [ 3 * pal_entry + 2 ]	130:4:3897:3958	8048394	14	True				
ANR	8048627	AssignmentExpression	pfrgrnd -> color [ 2 ] = pindexed -> palette . data [ 3 * pal_entry + 2 ]		8048394	0		=			
ANR	8048628	ArrayIndexing	pfrgrnd -> color [ 2 ]		8048394	0					
ANR	8048629	PtrMemberAccess	pfrgrnd -> color		8048394	0					
ANR	8048630	Identifier	pfrgrnd		8048394	0					
ANR	8048631	Identifier	color		8048394	1					
ANR	8048632	PrimaryExpression	2		8048394	1					
ANR	8048633	ArrayIndexing	pindexed -> palette . data [ 3 * pal_entry + 2 ]		8048394	1					
ANR	8048634	MemberAccess	pindexed -> palette . data		8048394	0					
ANR	8048635	PtrMemberAccess	pindexed -> palette		8048394	0					
ANR	8048636	Identifier	pindexed		8048394	0					
ANR	8048637	Identifier	palette		8048394	1					
ANR	8048638	Identifier	data		8048394	1					
ANR	8048639	AdditiveExpression	3 * pal_entry + 2		8048394	1		+			
ANR	8048640	MultiplicativeExpression	3 * pal_entry		8048394	0		*			
ANR	8048641	PrimaryExpression	3		8048394	0					
ANR	8048642	Identifier	pal_entry		8048394	1					
ANR	8048643	PrimaryExpression	2		8048394	1					
ANR	8048644	ExpressionStatement	"pcl_cs_base_init_from ( pfrgrnd -> pbase , ppalet -> pindexed -> pbase )"	131:4:3964:4026	8048394	15	True				
ANR	8048645	CallExpression	"pcl_cs_base_init_from ( pfrgrnd -> pbase , ppalet -> pindexed -> pbase )"		8048394	0					
ANR	8048646	Callee	pcl_cs_base_init_from		8048394	0					
ANR	8048647	Identifier	pcl_cs_base_init_from		8048394	0					
ANR	8048648	ArgumentList	pfrgrnd -> pbase		8048394	1					
ANR	8048649	Argument	pfrgrnd -> pbase		8048394	0					
ANR	8048650	PtrMemberAccess	pfrgrnd -> pbase		8048394	0					
ANR	8048651	Identifier	pfrgrnd		8048394	0					
ANR	8048652	Identifier	pbase		8048394	1					
ANR	8048653	Argument	ppalet -> pindexed -> pbase		8048394	1					
ANR	8048654	PtrMemberAccess	ppalet -> pindexed -> pbase		8048394	0					
ANR	8048655	PtrMemberAccess	ppalet -> pindexed		8048394	0					
ANR	8048656	Identifier	ppalet		8048394	0					
ANR	8048657	Identifier	pindexed		8048394	1					
ANR	8048658	Identifier	pbase		8048394	1					
ANR	8048659	ExpressionStatement	"pcl_ht_init_from ( pfrgrnd -> pht , ppalet -> pht )"	132:4:4032:4075	8048394	16	True				
ANR	8048660	CallExpression	"pcl_ht_init_from ( pfrgrnd -> pht , ppalet -> pht )"		8048394	0					
ANR	8048661	Callee	pcl_ht_init_from		8048394	0					
ANR	8048662	Identifier	pcl_ht_init_from		8048394	0					
ANR	8048663	ArgumentList	pfrgrnd -> pht		8048394	1					
ANR	8048664	Argument	pfrgrnd -> pht		8048394	0					
ANR	8048665	PtrMemberAccess	pfrgrnd -> pht		8048394	0					
ANR	8048666	Identifier	pfrgrnd		8048394	0					
ANR	8048667	Identifier	pht		8048394	1					
ANR	8048668	Argument	ppalet -> pht		8048394	1					
ANR	8048669	PtrMemberAccess	ppalet -> pht		8048394	0					
ANR	8048670	Identifier	ppalet		8048394	0					
ANR	8048671	Identifier	pht		8048394	1					
ANR	8048672	IfStatement	if ( is_default )		8048394	17					
ANR	8048673	Condition	is_default	134:8:4086:4095	8048394	0	True				
ANR	8048674	Identifier	is_default		8048394	0					
ANR	8048675	ExpressionStatement	"pcl_frgrnd_init_from ( pcs -> pdflt_frgrnd , pfrgrnd )"	135:8:4106:4154	8048394	1	True				
ANR	8048676	CallExpression	"pcl_frgrnd_init_from ( pcs -> pdflt_frgrnd , pfrgrnd )"		8048394	0					
ANR	8048677	Callee	pcl_frgrnd_init_from		8048394	0					
ANR	8048678	Identifier	pcl_frgrnd_init_from		8048394	0					
ANR	8048679	ArgumentList	pcs -> pdflt_frgrnd		8048394	1					
ANR	8048680	Argument	pcs -> pdflt_frgrnd		8048394	0					
ANR	8048681	PtrMemberAccess	pcs -> pdflt_frgrnd		8048394	0					
ANR	8048682	Identifier	pcs		8048394	0					
ANR	8048683	Identifier	pdflt_frgrnd		8048394	1					
ANR	8048684	Argument	pfrgrnd		8048394	1					
ANR	8048685	Identifier	pfrgrnd		8048394	0					
ANR	8048686	ReturnStatement	return 0 ;	137:4:4161:4169	8048394	18	True				
ANR	8048687	PrimaryExpression	0		8048394	0					
ANR	8048688	ReturnType	static int		8048394	1					
ANR	8048689	Identifier	build_foreground		8048394	2					
ANR	8048690	ParameterList	"pcl_state_t * pcs , pcl_frgrnd_t * * ppfrgrnd , const pcl_palette_t * ppalet , int pal_entry , gs_memory_t * pmem"		8048394	3					
ANR	8048691	Parameter	pcl_state_t * pcs	75:17:2079:2095	8048394	0	True				
ANR	8048692	ParameterType	pcl_state_t *		8048394	0					
ANR	8048693	Identifier	pcs		8048394	1					
ANR	8048694	Parameter	pcl_frgrnd_t * * ppfrgrnd	76:17:2115:2138	8048394	1	True				
ANR	8048695	ParameterType	pcl_frgrnd_t * *		8048394	0					
ANR	8048696	Identifier	ppfrgrnd		8048394	1					
ANR	8048697	Parameter	const pcl_palette_t * ppalet	77:17:2158:2185	8048394	2	True				
ANR	8048698	ParameterType	const pcl_palette_t *		8048394	0					
ANR	8048699	Identifier	ppalet		8048394	1					
ANR	8048700	Parameter	int pal_entry	78:17:2205:2217	8048394	3	True				
ANR	8048701	ParameterType	int		8048394	0					
ANR	8048702	Identifier	pal_entry		8048394	1					
ANR	8048703	Parameter	gs_memory_t * pmem	78:32:2220:2237	8048394	4	True				
ANR	8048704	ParameterType	gs_memory_t *		8048394	0					
ANR	8048705	Identifier	pmem		8048394	1					
ANR	8048706	CFGEntryNode	ENTRY		8048394		True				
ANR	8048707	CFGExitNode	EXIT		8048394		True				
ANR	8048708	Symbol	* * pindexed		8048394						
ANR	8048709	Symbol	* pindexed -> palette . data		8048394						
ANR	8048710	Symbol	code		8048394						
ANR	8048711	Symbol	pindexed -> is_GL		8048394						
ANR	8048712	Symbol	pindexed -> palette		8048394						
ANR	8048713	Symbol	* pindexed		8048394						
ANR	8048714	Symbol	pindexed -> palette . data		8048394						
ANR	8048715	Symbol	pfrgrnd -> pht		8048394						
ANR	8048716	Symbol	* pcs		8048394						
ANR	8048717	Symbol	* ppalet -> pindexed		8048394						
ANR	8048718	Symbol	pal_entry		8048394						
ANR	8048719	Symbol	* * ppalet		8048394						
ANR	8048720	Symbol	pmem		8048394						
ANR	8048721	Symbol	ppalet -> pht		8048394						
ANR	8048722	Symbol	pfrgrnd -> pbase		8048394						
ANR	8048723	Symbol	pindexed		8048394						
ANR	8048724	Symbol	* pfrgrnd -> color		8048394						
ANR	8048725	Symbol	pindexed -> pfixed		8048394						
ANR	8048726	Symbol	alloc_foreground		8048394						
ANR	8048727	Symbol	pfrgrnd -> is_cmy		8048394						
ANR	8048728	Symbol	pcs		8048394						
ANR	8048729	Symbol	pfrgrnd		8048394						
ANR	8048730	Symbol	* * pfrgrnd		8048394						
ANR	8048731	Symbol	pfrgrnd -> color		8048394						
ANR	8048732	Symbol	false		8048394						
ANR	8048733	Symbol	max_pen		8048394						
ANR	8048734	Symbol	ppalet		8048394						
ANR	8048735	Symbol	is_default		8048394						
ANR	8048736	Symbol	* pal_entry		8048394						
ANR	8048737	Symbol	ppalet -> pindexed -> pbase		8048394						
ANR	8048738	Symbol	ppfrgrnd		8048394						
ANR	8048739	Symbol	ppalet -> pindexed -> original_cspace		8048394						
ANR	8048740	Symbol	pcs -> pdflt_frgrnd		8048394						
ANR	8048741	Symbol	* pindexed -> palette		8048394						
ANR	8048742	Symbol	true		8048394						
ANR	8048743	Symbol	* pfrgrnd		8048394						
ANR	8048744	Symbol	ppalet -> pindexed		8048394						
ANR	8048745	Symbol	pindexed -> num_entries		8048394						
ANR	8048746	Symbol	num_entries		8048394						
ANR	8048747	Symbol	* ppfrgrnd		8048394						
ANR	8048748	Symbol	* ppalet		8048394						
ANR	8048749	Function	pcl_frgrnd_set_default_foreground	145:0:4361:4668							
ANR	8048750	FunctionDef	pcl_frgrnd_set_default_foreground (pcl_state_t * pcs)		8048749	0					
ANR	8048751	CompoundStatement		147:0:4418:4668	8048749	0					
ANR	8048752	IdentifierDeclStatement	int code = 0 ;	148:4:4424:4436	8048749	0	True				
ANR	8048753	IdentifierDecl	code = 0		8048749	0					
ANR	8048754	IdentifierDeclType	int		8048749	0					
ANR	8048755	Identifier	code		8048749	1					
ANR	8048756	AssignmentExpression	code = 0		8048749	2		=			
ANR	8048757	Identifier	code		8048749	0					
ANR	8048758	PrimaryExpression	0		8048749	1					
ANR	8048759	IfStatement	if ( ( code = pcl_palette_check_complete ( pcs ) ) < 0 )		8048749	1					
ANR	8048760	Condition	( code = pcl_palette_check_complete ( pcs ) ) < 0	151:8:4492:4535	8048749	0	True				
ANR	8048761	RelationalExpression	( code = pcl_palette_check_complete ( pcs ) ) < 0		8048749	0		<			
ANR	8048762	AssignmentExpression	code = pcl_palette_check_complete ( pcs )		8048749	0		=			
ANR	8048763	Identifier	code		8048749	0					
ANR	8048764	CallExpression	pcl_palette_check_complete ( pcs )		8048749	1					
ANR	8048765	Callee	pcl_palette_check_complete		8048749	0					
ANR	8048766	Identifier	pcl_palette_check_complete		8048749	0					
ANR	8048767	ArgumentList	pcs		8048749	1					
ANR	8048768	Argument	pcs		8048749	0					
ANR	8048769	Identifier	pcs		8048749	0					
ANR	8048770	PrimaryExpression	0		8048749	1					
ANR	8048771	ReturnStatement	return code ;	152:8:4546:4557	8048749	1	True				
ANR	8048772	Identifier	code		8048749	0					
ANR	8048773	ReturnStatement	"return build_foreground ( pcs , & ( pcs -> pfrgrnd ) , pcs -> ppalet , 1 , pcs -> memory ) ;"	154:4:4564:4666	8048749	2	True				
ANR	8048774	CallExpression	"build_foreground ( pcs , & ( pcs -> pfrgrnd ) , pcs -> ppalet , 1 , pcs -> memory )"		8048749	0					
ANR	8048775	Callee	build_foreground		8048749	0					
ANR	8048776	Identifier	build_foreground		8048749	0					
ANR	8048777	ArgumentList	pcs		8048749	1					
ANR	8048778	Argument	pcs		8048749	0					
ANR	8048779	Identifier	pcs		8048749	0					
ANR	8048780	Argument	& ( pcs -> pfrgrnd )		8048749	1					
ANR	8048781	UnaryOperationExpression	& ( pcs -> pfrgrnd )		8048749	0					
ANR	8048782	UnaryOperator	&		8048749	0					
ANR	8048783	PtrMemberAccess	pcs -> pfrgrnd		8048749	1					
ANR	8048784	Identifier	pcs		8048749	0					
ANR	8048785	Identifier	pfrgrnd		8048749	1					
ANR	8048786	Argument	pcs -> ppalet		8048749	2					
ANR	8048787	PtrMemberAccess	pcs -> ppalet		8048749	0					
ANR	8048788	Identifier	pcs		8048749	0					
ANR	8048789	Identifier	ppalet		8048749	1					
ANR	8048790	Argument	1		8048749	3					
ANR	8048791	PrimaryExpression	1		8048749	0					
ANR	8048792	Argument	pcs -> memory		8048749	4					
ANR	8048793	PtrMemberAccess	pcs -> memory		8048749	0					
ANR	8048794	Identifier	pcs		8048749	0					
ANR	8048795	Identifier	memory		8048749	1					
ANR	8048796	ReturnType	int		8048749	1					
ANR	8048797	Identifier	pcl_frgrnd_set_default_foreground		8048749	2					
ANR	8048798	ParameterList	pcl_state_t * pcs		8048749	3					
ANR	8048799	Parameter	pcl_state_t * pcs	146:34:4399:4415	8048749	0	True				
ANR	8048800	ParameterType	pcl_state_t *		8048749	0					
ANR	8048801	Identifier	pcs		8048749	1					
ANR	8048802	CFGEntryNode	ENTRY		8048749		True				
ANR	8048803	CFGExitNode	EXIT		8048749		True				
ANR	8048804	Symbol	pcs		8048749						
ANR	8048805	Symbol	code		8048749						
ANR	8048806	Symbol	& pcs -> pfrgrnd		8048749						
ANR	8048807	Symbol	pcs -> ppalet		8048749						
ANR	8048808	Symbol	pcs -> memory		8048749						
ANR	8048809	Symbol	* pcs		8048749						
ANR	8048810	Symbol	build_foreground		8048749						
ANR	8048811	Symbol	pcl_palette_check_complete		8048749						
ANR	8048812	Function	set_foreground	163:0:4776:5217							
ANR	8048813	FunctionDef	"set_foreground (pcl_args_t * pargs , pcl_state_t * pcs)"		8048812	0					
ANR	8048814	CompoundStatement		165:0:4841:5217	8048812	0					
ANR	8048815	IdentifierDeclStatement	int code ;	166:4:4847:4855	8048812	0	True				
ANR	8048816	IdentifierDecl	code		8048812	0					
ANR	8048817	IdentifierDeclType	int		8048812	0					
ANR	8048818	Identifier	code		8048812	1					
ANR	8048819	IfStatement	if ( pcs -> personality == pcl5e || pcs -> raster_state . graphics_mode )		8048812	1					
ANR	8048820	Condition	pcs -> personality == pcl5e || pcs -> raster_state . graphics_mode	168:8:4866:4925	8048812	0	True				
ANR	8048821	OrExpression	pcs -> personality == pcl5e || pcs -> raster_state . graphics_mode		8048812	0		||			
ANR	8048822	EqualityExpression	pcs -> personality == pcl5e		8048812	0		==			
ANR	8048823	PtrMemberAccess	pcs -> personality		8048812	0					
ANR	8048824	Identifier	pcs		8048812	0					
ANR	8048825	Identifier	personality		8048812	1					
ANR	8048826	Identifier	pcl5e		8048812	1					
ANR	8048827	MemberAccess	pcs -> raster_state . graphics_mode		8048812	1					
ANR	8048828	PtrMemberAccess	pcs -> raster_state		8048812	0					
ANR	8048829	Identifier	pcs		8048812	0					
ANR	8048830	Identifier	raster_state		8048812	1					
ANR	8048831	Identifier	graphics_mode		8048812	1					
ANR	8048832	ReturnStatement	return 0 ;	169:8:4936:4944	8048812	1	True				
ANR	8048833	PrimaryExpression	0		8048812	0					
ANR	8048834	IfStatement	if ( ( code = pcl_palette_check_complete ( pcs ) ) < 0 )		8048812	2					
ANR	8048835	Condition	( code = pcl_palette_check_complete ( pcs ) ) < 0	172:8:5000:5043	8048812	0	True				
ANR	8048836	RelationalExpression	( code = pcl_palette_check_complete ( pcs ) ) < 0		8048812	0		<			
ANR	8048837	AssignmentExpression	code = pcl_palette_check_complete ( pcs )		8048812	0		=			
ANR	8048838	Identifier	code		8048812	0					
ANR	8048839	CallExpression	pcl_palette_check_complete ( pcs )		8048812	1					
ANR	8048840	Callee	pcl_palette_check_complete		8048812	0					
ANR	8048841	Identifier	pcl_palette_check_complete		8048812	0					
ANR	8048842	ArgumentList	pcs		8048812	1					
ANR	8048843	Argument	pcs		8048812	0					
ANR	8048844	Identifier	pcs		8048812	0					
ANR	8048845	PrimaryExpression	0		8048812	1					
ANR	8048846	ReturnStatement	return code ;	173:8:5054:5065	8048812	1	True				
ANR	8048847	Identifier	code		8048812	0					
ANR	8048848	ReturnStatement	"return build_foreground ( pcs , & ( pcs -> pfrgrnd ) , pcs -> ppalet , int_arg ( pargs ) , pcs -> memory ) ;"	175:4:5072:5215	8048812	3	True				
ANR	8048849	CallExpression	"build_foreground ( pcs , & ( pcs -> pfrgrnd ) , pcs -> ppalet , int_arg ( pargs ) , pcs -> memory )"		8048812	0					
ANR	8048850	Callee	build_foreground		8048812	0					
ANR	8048851	Identifier	build_foreground		8048812	0					
ANR	8048852	ArgumentList	pcs		8048812	1					
ANR	8048853	Argument	pcs		8048812	0					
ANR	8048854	Identifier	pcs		8048812	0					
ANR	8048855	Argument	& ( pcs -> pfrgrnd )		8048812	1					
ANR	8048856	UnaryOperationExpression	& ( pcs -> pfrgrnd )		8048812	0					
ANR	8048857	UnaryOperator	&		8048812	0					
ANR	8048858	PtrMemberAccess	pcs -> pfrgrnd		8048812	1					
ANR	8048859	Identifier	pcs		8048812	0					
ANR	8048860	Identifier	pfrgrnd		8048812	1					
ANR	8048861	Argument	pcs -> ppalet		8048812	2					
ANR	8048862	PtrMemberAccess	pcs -> ppalet		8048812	0					
ANR	8048863	Identifier	pcs		8048812	0					
ANR	8048864	Identifier	ppalet		8048812	1					
ANR	8048865	Argument	int_arg ( pargs )		8048812	3					
ANR	8048866	CallExpression	int_arg ( pargs )		8048812	0					
ANR	8048867	Callee	int_arg		8048812	0					
ANR	8048868	Identifier	int_arg		8048812	0					
ANR	8048869	ArgumentList	pargs		8048812	1					
ANR	8048870	Argument	pargs		8048812	0					
ANR	8048871	Identifier	pargs		8048812	0					
ANR	8048872	Argument	pcs -> memory		8048812	4					
ANR	8048873	PtrMemberAccess	pcs -> memory		8048812	0					
ANR	8048874	Identifier	pcs		8048812	0					
ANR	8048875	Identifier	memory		8048812	1					
ANR	8048876	ReturnType	static int		8048812	1					
ANR	8048877	Identifier	set_foreground		8048812	2					
ANR	8048878	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8048812	3					
ANR	8048879	Parameter	pcl_args_t * pargs	164:15:4802:4819	8048812	0	True				
ANR	8048880	ParameterType	pcl_args_t *		8048812	0					
ANR	8048881	Identifier	pargs		8048812	1					
ANR	8048882	Parameter	pcl_state_t * pcs	164:35:4822:4838	8048812	1	True				
ANR	8048883	ParameterType	pcl_state_t *		8048812	0					
ANR	8048884	Identifier	pcs		8048812	1					
ANR	8048885	CFGEntryNode	ENTRY		8048812		True				
ANR	8048886	CFGExitNode	EXIT		8048812		True				
ANR	8048887	Symbol	pcs -> personality		8048812						
ANR	8048888	Symbol	pcs		8048812						
ANR	8048889	Symbol	code		8048812						
ANR	8048890	Symbol	& pcs -> pfrgrnd		8048812						
ANR	8048891	Symbol	* pcs		8048812						
ANR	8048892	Symbol	pcl_palette_check_complete		8048812						
ANR	8048893	Symbol	pcs -> raster_state		8048812						
ANR	8048894	Symbol	pcl5e		8048812						
ANR	8048895	Symbol	int_arg		8048812						
ANR	8048896	Symbol	pargs		8048812						
ANR	8048897	Symbol	pcs -> ppalet		8048812						
ANR	8048898	Symbol	pcs -> memory		8048812						
ANR	8048899	Symbol	pcs -> raster_state . graphics_mode		8048812						
ANR	8048900	Symbol	build_foreground		8048812						
ANR	8048901	Function	frgrnd_do_registration	186:0:5383:5685							
ANR	8048902	FunctionDef	"frgrnd_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8048901	0					
ANR	8048903	CompoundStatement		189:0:5498:5685	8048901	0					
ANR	8048904	Statement	DEFINE_CLASS	190:4:5504:5515	8048901	0	True				
ANR	8048905	Statement	(	190:16:5516:5516	8048901	1	True				
ANR	8048906	Statement	'*'	190:17:5517:5519	8048901	2	True				
ANR	8048907	Statement	)	190:20:5520:5520	8048901	3	True				
ANR	8048908	CompoundStatement		2:22:23:23	8048901	4					
ANR	8048909	Statement	'v'	191:8:5532:5534	8048901	0	True				
ANR	8048910	Statement	","	191:11:5535:5535	8048901	1	True				
ANR	8048911	Statement	'S'	191:13:5537:5539	8048901	2	True				
ANR	8048912	Statement	","	191:16:5540:5540	8048901	3	True				
ANR	8048913	Statement	PCL_COMMAND	192:12:5554:5564	8048901	4	True				
ANR	8048914	Statement	(	192:23:5565:5565	8048901	5	True				
ANR	8048915	Statement	"""Set Foreground"""	192:24:5566:5581	8048901	6	True				
ANR	8048916	Statement	","	192:40:5582:5582	8048901	7	True				
ANR	8048917	Statement	set_foreground	192:42:5584:5597	8048901	8	True				
ANR	8048918	Statement	","	192:56:5598:5598	8048901	9	True				
ANR	8048919	Statement	pca_neg_ok	193:24:5624:5633	8048901	10	True				
ANR	8048920	Statement	|	193:35:5635:5635	8048901	11	True				
ANR	8048921	Statement	pca_raster_graphics	193:37:5637:5655	8048901	12	True				
ANR	8048922	Statement	)	193:56:5656:5656	8048901	13	True				
ANR	8048923	Statement	","	194:5:5663:5663	8048901	5	True				
ANR	8048924	Statement	END_CLASS	194:7:5665:5673	8048901	6	True				
ANR	8048925	ReturnStatement	return 0 ;	194:17:5675:5683	8048901	7	True				
ANR	8048926	PrimaryExpression	0		8048901	0					
ANR	8048927	ReturnType	static int		8048901	1					
ANR	8048928	Identifier	frgrnd_do_registration		8048901	2					
ANR	8048929	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8048901	3					
ANR	8048930	Parameter	pcl_parser_state_t * pcl_parser_state	187:23:5417:5453	8048901	0	True				
ANR	8048931	ParameterType	pcl_parser_state_t *		8048901	0					
ANR	8048932	Identifier	pcl_parser_state		8048901	1					
ANR	8048933	Parameter	gs_memory_t * mem	188:23:5479:5495	8048901	1	True				
ANR	8048934	ParameterType	gs_memory_t *		8048901	0					
ANR	8048935	Identifier	mem		8048901	1					
ANR	8048936	CFGEntryNode	ENTRY		8048901		True				
ANR	8048937	CFGExitNode	EXIT		8048901		True				
ANR	8048938	Symbol	mem		8048901						
ANR	8048939	Symbol	pcl_parser_state		8048901						
ANR	8048940	Function	frgrnd_do_reset	197:0:5688:6026							
ANR	8048941	FunctionDef	"frgrnd_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8048940	0					
ANR	8048942	CompoundStatement		199:0:5757:6026	8048940	0					
ANR	8048943	IfStatement	if ( type & ( pcl_reset_permanent ) )		8048940	0					
ANR	8048944	Condition	type & ( pcl_reset_permanent )	200:8:5767:5794	8048940	0	True				
ANR	8048945	BitAndExpression	type & ( pcl_reset_permanent )		8048940	0		&			
ANR	8048946	Identifier	type		8048940	0					
ANR	8048947	Identifier	pcl_reset_permanent		8048940	1					
ANR	8048948	CompoundStatement		2:38:39:39	8048940	1					
ANR	8048949	ExpressionStatement	"rc_decrement ( pcs -> pfrgrnd , ""foreground reset pfrgrnd"" )"	201:8:5807:5861	8048940	0	True				
ANR	8048950	CallExpression	"rc_decrement ( pcs -> pfrgrnd , ""foreground reset pfrgrnd"" )"		8048940	0					
ANR	8048951	Callee	rc_decrement		8048940	0					
ANR	8048952	Identifier	rc_decrement		8048940	0					
ANR	8048953	ArgumentList	pcs -> pfrgrnd		8048940	1					
ANR	8048954	Argument	pcs -> pfrgrnd		8048940	0					
ANR	8048955	PtrMemberAccess	pcs -> pfrgrnd		8048940	0					
ANR	8048956	Identifier	pcs		8048940	0					
ANR	8048957	Identifier	pfrgrnd		8048940	1					
ANR	8048958	Argument	"""foreground reset pfrgrnd"""		8048940	1					
ANR	8048959	PrimaryExpression	"""foreground reset pfrgrnd"""		8048940	0					
ANR	8048960	ExpressionStatement	"rc_decrement ( pcs -> pdflt_frgrnd , ""foreground reset pdflt_frgrnd"" )"	202:8:5871:5935	8048940	1	True				
ANR	8048961	CallExpression	"rc_decrement ( pcs -> pdflt_frgrnd , ""foreground reset pdflt_frgrnd"" )"		8048940	0					
ANR	8048962	Callee	rc_decrement		8048940	0					
ANR	8048963	Identifier	rc_decrement		8048940	0					
ANR	8048964	ArgumentList	pcs -> pdflt_frgrnd		8048940	1					
ANR	8048965	Argument	pcs -> pdflt_frgrnd		8048940	0					
ANR	8048966	PtrMemberAccess	pcs -> pdflt_frgrnd		8048940	0					
ANR	8048967	Identifier	pcs		8048940	0					
ANR	8048968	Identifier	pdflt_frgrnd		8048940	1					
ANR	8048969	Argument	"""foreground reset pdflt_frgrnd"""		8048940	1					
ANR	8048970	PrimaryExpression	"""foreground reset pdflt_frgrnd"""		8048940	0					
ANR	8048971	ExpressionStatement	"rc_decrement ( pcs -> pwhite_cs , ""foreground reset p_white_cs"" )"	203:8:5945:6004	8048940	2	True				
ANR	8048972	CallExpression	"rc_decrement ( pcs -> pwhite_cs , ""foreground reset p_white_cs"" )"		8048940	0					
ANR	8048973	Callee	rc_decrement		8048940	0					
ANR	8048974	Identifier	rc_decrement		8048940	0					
ANR	8048975	ArgumentList	pcs -> pwhite_cs		8048940	1					
ANR	8048976	Argument	pcs -> pwhite_cs		8048940	0					
ANR	8048977	PtrMemberAccess	pcs -> pwhite_cs		8048940	0					
ANR	8048978	Identifier	pcs		8048940	0					
ANR	8048979	Identifier	pwhite_cs		8048940	1					
ANR	8048980	Argument	"""foreground reset p_white_cs"""		8048940	1					
ANR	8048981	PrimaryExpression	"""foreground reset p_white_cs"""		8048940	0					
ANR	8048982	ReturnStatement	return 0 ;	205:4:6016:6024	8048940	1	True				
ANR	8048983	PrimaryExpression	0		8048940	0					
ANR	8048984	ReturnType	static int		8048940	1					
ANR	8048985	Identifier	frgrnd_do_reset		8048940	2					
ANR	8048986	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8048940	3					
ANR	8048987	Parameter	pcl_state_t * pcs	198:16:5715:5731	8048940	0	True				
ANR	8048988	ParameterType	pcl_state_t *		8048940	0					
ANR	8048989	Identifier	pcs		8048940	1					
ANR	8048990	Parameter	pcl_reset_type_t type	198:35:5734:5754	8048940	1	True				
ANR	8048991	ParameterType	pcl_reset_type_t		8048940	0					
ANR	8048992	Identifier	type		8048940	1					
ANR	8048993	CFGEntryNode	ENTRY		8048940		True				
ANR	8048994	CFGExitNode	EXIT		8048940		True				
ANR	8048995	Symbol	pcs		8048940						
ANR	8048996	Symbol	pcs -> pdflt_frgrnd		8048940						
ANR	8048997	Symbol	pcs -> pfrgrnd		8048940						
ANR	8048998	Symbol	pcl_reset_permanent		8048940						
ANR	8048999	Symbol	* pcs		8048940						
ANR	8049000	Symbol	pcs -> pwhite_cs		8048940						
ANR	8049001	Symbol	type		8048940						
ANR	8049002	Function	frgrnd_do_copy	208:0:6029:6411							
ANR	8049003	FunctionDef	"frgrnd_do_copy (pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation)"		8049002	0					
ANR	8049004	CompoundStatement		211:0:6149:6411	8049002	0					
ANR	8049005	IfStatement	if ( ( operation & ( pcl_copy_before_call | pcl_copy_before_overlay ) ) != 0 )		8049002	0					
ANR	8049006	Condition	( operation & ( pcl_copy_before_call | pcl_copy_before_overlay ) ) != 0	212:8:6159:6225	8049002	0	True				
ANR	8049007	EqualityExpression	( operation & ( pcl_copy_before_call | pcl_copy_before_overlay ) ) != 0		8049002	0		!=			
ANR	8049008	BitAndExpression	operation & ( pcl_copy_before_call | pcl_copy_before_overlay )		8049002	0		&			
ANR	8049009	Identifier	operation		8049002	0					
ANR	8049010	InclusiveOrExpression	pcl_copy_before_call | pcl_copy_before_overlay		8049002	1		|			
ANR	8049011	Identifier	pcl_copy_before_call		8049002	0					
ANR	8049012	Identifier	pcl_copy_before_overlay		8049002	1					
ANR	8049013	PrimaryExpression	0		8049002	1					
ANR	8049014	ExpressionStatement	"pcl_frgrnd_init_from ( psaved -> pfrgrnd , pcs -> pfrgrnd )"	213:8:6236:6287	8049002	1	True				
ANR	8049015	CallExpression	"pcl_frgrnd_init_from ( psaved -> pfrgrnd , pcs -> pfrgrnd )"		8049002	0					
ANR	8049016	Callee	pcl_frgrnd_init_from		8049002	0					
ANR	8049017	Identifier	pcl_frgrnd_init_from		8049002	0					
ANR	8049018	ArgumentList	psaved -> pfrgrnd		8049002	1					
ANR	8049019	Argument	psaved -> pfrgrnd		8049002	0					
ANR	8049020	PtrMemberAccess	psaved -> pfrgrnd		8049002	0					
ANR	8049021	Identifier	psaved		8049002	0					
ANR	8049022	Identifier	pfrgrnd		8049002	1					
ANR	8049023	Argument	pcs -> pfrgrnd		8049002	1					
ANR	8049024	PtrMemberAccess	pcs -> pfrgrnd		8049002	0					
ANR	8049025	Identifier	pcs		8049002	0					
ANR	8049026	Identifier	pfrgrnd		8049002	1					
ANR	8049027	ElseStatement	else		8049002	0					
ANR	8049028	IfStatement	if ( ( operation & pcl_copy_after ) != 0 )		8049002	0					
ANR	8049029	Condition	( operation & pcl_copy_after ) != 0	214:13:6302:6334	8049002	0	True				
ANR	8049030	EqualityExpression	( operation & pcl_copy_after ) != 0		8049002	0		!=			
ANR	8049031	BitAndExpression	operation & pcl_copy_after		8049002	0		&			
ANR	8049032	Identifier	operation		8049002	0					
ANR	8049033	Identifier	pcl_copy_after		8049002	1					
ANR	8049034	PrimaryExpression	0		8049002	1					
ANR	8049035	ExpressionStatement	pcl_frgrnd_release ( ( ( pcl_state_t * ) pcs ) -> pfrgrnd )	215:8:6345:6395	8049002	1	True				
ANR	8049036	CallExpression	pcl_frgrnd_release ( ( ( pcl_state_t * ) pcs ) -> pfrgrnd )		8049002	0					
ANR	8049037	Callee	pcl_frgrnd_release		8049002	0					
ANR	8049038	Identifier	pcl_frgrnd_release		8049002	0					
ANR	8049039	ArgumentList	( ( pcl_state_t * ) pcs ) -> pfrgrnd		8049002	1					
ANR	8049040	Argument	( ( pcl_state_t * ) pcs ) -> pfrgrnd		8049002	0					
ANR	8049041	PtrMemberAccess	( ( pcl_state_t * ) pcs ) -> pfrgrnd		8049002	0					
ANR	8049042	CastExpression	( pcl_state_t * ) pcs		8049002	0					
ANR	8049043	CastTarget	pcl_state_t *		8049002	0					
ANR	8049044	Identifier	pcs		8049002	1					
ANR	8049045	Identifier	pfrgrnd		8049002	1					
ANR	8049046	ReturnStatement	return 0 ;	216:4:6401:6409	8049002	1	True				
ANR	8049047	PrimaryExpression	0		8049002	0					
ANR	8049048	ReturnType	static int		8049002	1					
ANR	8049049	Identifier	frgrnd_do_copy		8049002	2					
ANR	8049050	ParameterList	"pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation"		8049002	3					
ANR	8049051	Parameter	pcl_state_t * psaved	209:15:6055:6074	8049002	0	True				
ANR	8049052	ParameterType	pcl_state_t *		8049002	0					
ANR	8049053	Identifier	psaved		8049002	1					
ANR	8049054	Parameter	const pcl_state_t * pcs	210:15:6092:6114	8049002	1	True				
ANR	8049055	ParameterType	const pcl_state_t *		8049002	0					
ANR	8049056	Identifier	pcs		8049002	1					
ANR	8049057	Parameter	pcl_copy_operation_t operation	210:40:6117:6146	8049002	2	True				
ANR	8049058	ParameterType	pcl_copy_operation_t		8049002	0					
ANR	8049059	Identifier	operation		8049002	1					
ANR	8049060	CFGEntryNode	ENTRY		8049002		True				
ANR	8049061	CFGExitNode	EXIT		8049002		True				
ANR	8049062	Symbol	pcl_copy_before_call		8049002						
ANR	8049063	Symbol	pcs		8049002						
ANR	8049064	Symbol	pcl_copy_before_overlay		8049002						
ANR	8049065	Symbol	* psaved		8049002						
ANR	8049066	Symbol	psaved -> pfrgrnd		8049002						
ANR	8049067	Symbol	psaved		8049002						
ANR	8049068	Symbol	pcl_copy_after		8049002						
ANR	8049069	Symbol	( ( pcl_state_t * ) pcs ) -> pfrgrnd		8049002						
ANR	8049070	Symbol	pcs -> pfrgrnd		8049002						
ANR	8049071	Symbol	* pcs		8049002						
ANR	8049072	Symbol	operation		8049002						
ANR	8049073	Function	is_invisible_pattern	222:0:6499:6897							
ANR	8049074	FunctionDef	is_invisible_pattern (pcl_state_t * pcs)		8049073	0					
ANR	8049075	CompoundStatement		224:0:6544:6897	8049073	0					
ANR	8049076	IfStatement	if ( pcs -> pattern_transparent )		8049073	0					
ANR	8049077	Condition	pcs -> pattern_transparent	225:8:6554:6577	8049073	0	True				
ANR	8049078	PtrMemberAccess	pcs -> pattern_transparent		8049073	0					
ANR	8049079	Identifier	pcs		8049073	0					
ANR	8049080	Identifier	pattern_transparent		8049073	1					
ANR	8049081	CompoundStatement		2:34:35:35	8049073	1					
ANR	8049082	IfStatement	if ( pcs -> pattern_type == pcl_pattern_solid_white )		8049073	0					
ANR	8049083	Condition	pcs -> pattern_type == pcl_pattern_solid_white	226:12:6594:6637	8049073	0	True				
ANR	8049084	EqualityExpression	pcs -> pattern_type == pcl_pattern_solid_white		8049073	0		==			
ANR	8049085	PtrMemberAccess	pcs -> pattern_type		8049073	0					
ANR	8049086	Identifier	pcs		8049073	0					
ANR	8049087	Identifier	pattern_type		8049073	1					
ANR	8049088	Identifier	pcl_pattern_solid_white		8049073	1					
ANR	8049089	ReturnStatement	return true ;	227:12:6652:6663	8049073	1	True				
ANR	8049090	Identifier	true		8049073	0					
ANR	8049091	IfStatement	if ( pcs -> pfrgrnd -> color [ 0 ] == 0xff && pcs -> pfrgrnd -> color [ 1 ] == 0xff && pcs -> pfrgrnd -> color [ 2 ] == 0xff )		8049073	1					
ANR	8049092	Condition	pcs -> pfrgrnd -> color [ 0 ] == 0xff && pcs -> pfrgrnd -> color [ 1 ] == 0xff && pcs -> pfrgrnd -> color [ 2 ] == 0xff	228:12:6677:6786	8049073	0	True				
ANR	8049093	AndExpression	pcs -> pfrgrnd -> color [ 0 ] == 0xff && pcs -> pfrgrnd -> color [ 1 ] == 0xff && pcs -> pfrgrnd -> color [ 2 ] == 0xff		8049073	0		&&			
ANR	8049094	EqualityExpression	pcs -> pfrgrnd -> color [ 0 ] == 0xff		8049073	0		==			
ANR	8049095	ArrayIndexing	pcs -> pfrgrnd -> color [ 0 ]		8049073	0					
ANR	8049096	PtrMemberAccess	pcs -> pfrgrnd -> color		8049073	0					
ANR	8049097	PtrMemberAccess	pcs -> pfrgrnd		8049073	0					
ANR	8049098	Identifier	pcs		8049073	0					
ANR	8049099	Identifier	pfrgrnd		8049073	1					
ANR	8049100	Identifier	color		8049073	1					
ANR	8049101	PrimaryExpression	0		8049073	1					
ANR	8049102	PrimaryExpression	0xff		8049073	1					
ANR	8049103	AndExpression	pcs -> pfrgrnd -> color [ 1 ] == 0xff && pcs -> pfrgrnd -> color [ 2 ] == 0xff		8049073	1		&&			
ANR	8049104	EqualityExpression	pcs -> pfrgrnd -> color [ 1 ] == 0xff		8049073	0		==			
ANR	8049105	ArrayIndexing	pcs -> pfrgrnd -> color [ 1 ]		8049073	0					
ANR	8049106	PtrMemberAccess	pcs -> pfrgrnd -> color		8049073	0					
ANR	8049107	PtrMemberAccess	pcs -> pfrgrnd		8049073	0					
ANR	8049108	Identifier	pcs		8049073	0					
ANR	8049109	Identifier	pfrgrnd		8049073	1					
ANR	8049110	Identifier	color		8049073	1					
ANR	8049111	PrimaryExpression	1		8049073	1					
ANR	8049112	PrimaryExpression	0xff		8049073	1					
ANR	8049113	EqualityExpression	pcs -> pfrgrnd -> color [ 2 ] == 0xff		8049073	1		==			
ANR	8049114	ArrayIndexing	pcs -> pfrgrnd -> color [ 2 ]		8049073	0					
ANR	8049115	PtrMemberAccess	pcs -> pfrgrnd -> color		8049073	0					
ANR	8049116	PtrMemberAccess	pcs -> pfrgrnd		8049073	0					
ANR	8049117	Identifier	pcs		8049073	0					
ANR	8049118	Identifier	pfrgrnd		8049073	1					
ANR	8049119	Identifier	color		8049073	1					
ANR	8049120	PrimaryExpression	2		8049073	1					
ANR	8049121	PrimaryExpression	0xff		8049073	1					
ANR	8049122	ReturnStatement	return true ;	230:12:6801:6812	8049073	1	True				
ANR	8049123	Identifier	true		8049073	0					
ANR	8049124	ReturnStatement	return false ;	232:4:6883:6895	8049073	1	True				
ANR	8049125	Identifier	false		8049073	0					
ANR	8049126	ReturnType	bool		8049073	1					
ANR	8049127	Identifier	is_invisible_pattern		8049073	2					
ANR	8049128	ParameterList	pcl_state_t * pcs		8049073	3					
ANR	8049129	Parameter	pcl_state_t * pcs	223:21:6525:6541	8049073	0	True				
ANR	8049130	ParameterType	pcl_state_t *		8049073	0					
ANR	8049131	Identifier	pcs		8049073	1					
ANR	8049132	CFGEntryNode	ENTRY		8049073		True				
ANR	8049133	CFGExitNode	EXIT		8049073		True				
ANR	8049134	Symbol	pcs		8049073						
ANR	8049135	Symbol	* * pcs -> pfrgrnd		8049073						
ANR	8049136	Symbol	pcl_pattern_solid_white		8049073						
ANR	8049137	Symbol	false		8049073						
ANR	8049138	Symbol	pcs -> pattern_transparent		8049073						
ANR	8049139	Symbol	pcs -> pfrgrnd -> color		8049073						
ANR	8049140	Symbol	* pcs		8049073						
ANR	8049141	Symbol	pcs -> pattern_type		8049073						
ANR	8049142	Symbol	* * pcs		8049073						
ANR	8049143	Symbol	* pcs -> pfrgrnd		8049073						
ANR	8049144	Symbol	true		8049073						
ANR	8049145	Symbol	pcs -> pfrgrnd		8049073						
ANR	8049146	Symbol	* pcs -> pfrgrnd -> color		8049073						
ANR	8049147	Symbol	* * * pcs		8049073						
ANR	8049148	DeclStmt									
ANR	8049149	Decl							const pcl_init_t	const pcl_init_t	pcl_frgrnd_init
