command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	405547	File	data/converged/CVE-2018-16863_ghostpdl/base_gp_psync.c								
ANR	405548	ClassDef	pt_semaphore_t	44:8:1324:1431							
ANR	405549	DeclStmt									
ANR	405550	Decl							int	int	count
ANR	405551	DeclStmt									
ANR	405552	Decl							pthread_mutex_t	pthread_mutex_t	mutex
ANR	405553	DeclStmt									
ANR	405554	Decl							pthread_cond_t	pthread_cond_t	cond
ANR	405555	DeclStmt									
ANR	405556	Decl							pt_semaphore_t	pt_semaphore_t	pt_semaphore_t
ANR	405557	Function	gp_semaphore_sizeof	50:0:1434:1502							
ANR	405558	FunctionDef	gp_semaphore_sizeof ()		405557	0					
ANR	405559	CompoundStatement		52:0:1465:1502	405557	0					
ANR	405560	ReturnStatement	return sizeof ( pt_semaphore_t ) ;	53:4:1471:1500	405557	0	True				
ANR	405561	SizeofExpression	sizeof ( pt_semaphore_t )		405557	0					
ANR	405562	Sizeof	sizeof		405557	0					
ANR	405563	SizeofOperand	pt_semaphore_t		405557	1					
ANR	405564	ReturnType	uint		405557	1					
ANR	405565	Identifier	gp_semaphore_sizeof		405557	2					
ANR	405566	ParameterList			405557	3					
ANR	405567	CFGEntryNode	ENTRY		405557		True				
ANR	405568	CFGExitNode	EXIT		405557		True				
ANR	405569	Function	gp_semaphore_open	63:0:1686:2348							
ANR	405570	FunctionDef	gp_semaphore_open (gp_semaphore * sema)		405569	0					
ANR	405571	CompoundStatement		65:0:1729:2348	405569	0					
ANR	405572	Statement	pt_semaphore_t	66:4:1735:1748	405569	0	True				
ANR	405573	Statement	*	66:19:1750:1750	405569	1	True				
ANR	405574	Statement	const	66:21:1752:1756	405569	2	True				
ANR	405575	ExpressionStatement	sem = ( pt_semaphore_t * ) sema	66:27:1758:1786	405569	3	True				
ANR	405576	AssignmentExpression	sem = ( pt_semaphore_t * ) sema		405569	0		=			
ANR	405577	Identifier	sem		405569	0					
ANR	405578	CastExpression	( pt_semaphore_t * ) sema		405569	1					
ANR	405579	CastTarget	pt_semaphore_t *		405569	0					
ANR	405580	Identifier	sema		405569	1					
ANR	405581	IdentifierDeclStatement	int scode ;	67:4:1792:1801	405569	4	True				
ANR	405582	IdentifierDecl	scode		405569	0					
ANR	405583	IdentifierDeclType	int		405569	0					
ANR	405584	Identifier	scode		405569	1					
ANR	405585	ExpressionStatement	"eprintf ( ""Can't create semaphores when memory squeezing with forks\\n"" )"	70:4:1837:1906	405569	5	True				
ANR	405586	CallExpression	"eprintf ( ""Can't create semaphores when memory squeezing with forks\\n"" )"		405569	0					
ANR	405587	Callee	eprintf		405569	0					
ANR	405588	Identifier	eprintf		405569	0					
ANR	405589	ArgumentList	"""Can't create semaphores when memory squeezing with forks\\n"""		405569	1					
ANR	405590	Argument	"""Can't create semaphores when memory squeezing with forks\\n"""		405569	0					
ANR	405591	PrimaryExpression	"""Can't create semaphores when memory squeezing with forks\\n"""		405569	0					
ANR	405592	ExpressionStatement	Memento_bt ( )	71:4:1912:1924	405569	6	True				
ANR	405593	CallExpression	Memento_bt ( )		405569	0					
ANR	405594	Callee	Memento_bt		405569	0					
ANR	405595	Identifier	Memento_bt		405569	0					
ANR	405596	ArgumentList			405569	1					
ANR	405597	ExpressionStatement	return_error ( gs_error_VMerror )	72:4:1930:1960	405569	7	True				
ANR	405598	CallExpression	return_error ( gs_error_VMerror )		405569	0					
ANR	405599	Callee	return_error		405569	0					
ANR	405600	Identifier	return_error		405569	0					
ANR	405601	ArgumentList	gs_error_VMerror		405569	1					
ANR	405602	Argument	gs_error_VMerror		405569	0					
ANR	405603	Identifier	gs_error_VMerror		405569	0					
ANR	405604	IfStatement	if ( ! sema )		405569	8					
ANR	405605	Condition	! sema	75:8:1978:1982	405569	0	True				
ANR	405606	UnaryOperationExpression	! sema		405569	0					
ANR	405607	UnaryOperator	!		405569	0					
ANR	405608	Identifier	sema		405569	1					
ANR	405609	ReturnStatement	return - 1 ;	76:8:1993:2002	405569	1	True				
ANR	405610	UnaryOperationExpression	- 1		405569	0					
ANR	405611	UnaryOperator	-		405569	0					
ANR	405612	PrimaryExpression	1		405569	1					
ANR	405613	ExpressionStatement	sem -> count = 0	77:4:2042:2056	405569	9	True				
ANR	405614	AssignmentExpression	sem -> count = 0		405569	0		=			
ANR	405615	PtrMemberAccess	sem -> count		405569	0					
ANR	405616	Identifier	sem		405569	0					
ANR	405617	Identifier	count		405569	1					
ANR	405618	PrimaryExpression	0		405569	1					
ANR	405619	ExpressionStatement	"scode = pthread_mutex_init ( & sem -> mutex , NULL )"	78:4:2062:2107	405569	10	True				
ANR	405620	AssignmentExpression	"scode = pthread_mutex_init ( & sem -> mutex , NULL )"		405569	0		=			
ANR	405621	Identifier	scode		405569	0					
ANR	405622	CallExpression	"pthread_mutex_init ( & sem -> mutex , NULL )"		405569	1					
ANR	405623	Callee	pthread_mutex_init		405569	0					
ANR	405624	Identifier	pthread_mutex_init		405569	0					
ANR	405625	ArgumentList	& sem -> mutex		405569	1					
ANR	405626	Argument	& sem -> mutex		405569	0					
ANR	405627	UnaryOperationExpression	& sem -> mutex		405569	0					
ANR	405628	UnaryOperator	&		405569	0					
ANR	405629	PtrMemberAccess	sem -> mutex		405569	1					
ANR	405630	Identifier	sem		405569	0					
ANR	405631	Identifier	mutex		405569	1					
ANR	405632	Argument	NULL		405569	1					
ANR	405633	Identifier	NULL		405569	0					
ANR	405634	IfStatement	if ( scode == 0 )		405569	11					
ANR	405635	Condition	scode == 0	79:8:2117:2126	405569	0	True				
ANR	405636	EqualityExpression	scode == 0		405569	0		==			
ANR	405637	Identifier	scode		405569	0					
ANR	405638	PrimaryExpression	0		405569	1					
ANR	405639	CompoundStatement		16:4:403:403	405569	1					
ANR	405640	ExpressionStatement	"scode = pthread_cond_init ( & sem -> cond , NULL )"	81:8:2143:2186	405569	0	True				
ANR	405641	AssignmentExpression	"scode = pthread_cond_init ( & sem -> cond , NULL )"		405569	0		=			
ANR	405642	Identifier	scode		405569	0					
ANR	405643	CallExpression	"pthread_cond_init ( & sem -> cond , NULL )"		405569	1					
ANR	405644	Callee	pthread_cond_init		405569	0					
ANR	405645	Identifier	pthread_cond_init		405569	0					
ANR	405646	ArgumentList	& sem -> cond		405569	1					
ANR	405647	Argument	& sem -> cond		405569	0					
ANR	405648	UnaryOperationExpression	& sem -> cond		405569	0					
ANR	405649	UnaryOperator	&		405569	0					
ANR	405650	PtrMemberAccess	sem -> cond		405569	1					
ANR	405651	Identifier	sem		405569	0					
ANR	405652	Identifier	cond		405569	1					
ANR	405653	Argument	NULL		405569	1					
ANR	405654	Identifier	NULL		405569	0					
ANR	405655	IfStatement	if ( scode )		405569	1					
ANR	405656	Condition	scode	82:12:2200:2204	405569	0	True				
ANR	405657	Identifier	scode		405569	0					
ANR	405658	ExpressionStatement	pthread_mutex_destroy ( & sem -> mutex )	83:12:2219:2253	405569	1	True				
ANR	405659	CallExpression	pthread_mutex_destroy ( & sem -> mutex )		405569	0					
ANR	405660	Callee	pthread_mutex_destroy		405569	0					
ANR	405661	Identifier	pthread_mutex_destroy		405569	0					
ANR	405662	ArgumentList	& sem -> mutex		405569	1					
ANR	405663	Argument	& sem -> mutex		405569	0					
ANR	405664	UnaryOperationExpression	& sem -> mutex		405569	0					
ANR	405665	UnaryOperator	&		405569	0					
ANR	405666	PtrMemberAccess	sem -> mutex		405569	1					
ANR	405667	Identifier	sem		405569	0					
ANR	405668	Identifier	mutex		405569	1					
ANR	405669	IfStatement	if ( scode )		405569	12					
ANR	405670	Condition	scode	85:8:2269:2273	405569	0	True				
ANR	405671	Identifier	scode		405569	0					
ANR	405672	ExpressionStatement	"memset ( sem , 0 , sizeof ( * sem ) )"	86:8:2284:2312	405569	1	True				
ANR	405673	CallExpression	"memset ( sem , 0 , sizeof ( * sem ) )"		405569	0					
ANR	405674	Callee	memset		405569	0					
ANR	405675	Identifier	memset		405569	0					
ANR	405676	ArgumentList	sem		405569	1					
ANR	405677	Argument	sem		405569	0					
ANR	405678	Identifier	sem		405569	0					
ANR	405679	Argument	0		405569	1					
ANR	405680	PrimaryExpression	0		405569	0					
ANR	405681	Argument	sizeof ( * sem )		405569	2					
ANR	405682	SizeofExpression	sizeof ( * sem )		405569	0					
ANR	405683	Sizeof	sizeof		405569	0					
ANR	405684	UnaryOperationExpression	* sem		405569	1					
ANR	405685	UnaryOperator	*		405569	0					
ANR	405686	Identifier	sem		405569	1					
ANR	405687	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	87:4:2318:2346	405569	13	True				
ANR	405688	CallExpression	SEM_ERROR_CODE ( scode )		405569	0					
ANR	405689	Callee	SEM_ERROR_CODE		405569	0					
ANR	405690	Identifier	SEM_ERROR_CODE		405569	0					
ANR	405691	ArgumentList	scode		405569	1					
ANR	405692	Argument	scode		405569	0					
ANR	405693	Identifier	scode		405569	0					
ANR	405694	ReturnType	int		405569	1					
ANR	405695	Identifier	gp_semaphore_open		405569	2					
ANR	405696	ParameterList	gp_semaphore * sema		405569	3					
ANR	405697	Parameter	gp_semaphore * sema	64:18:1708:1726	405569	0	True				
ANR	405698	ParameterType	gp_semaphore *		405569	0					
ANR	405699	Identifier	sema		405569	1					
ANR	405700	CFGEntryNode	ENTRY		405569		True				
ANR	405701	CFGExitNode	EXIT		405569		True				
ANR	405702	Symbol	gs_error_VMerror		405569						
ANR	405703	Symbol	sem -> count		405569						
ANR	405704	Symbol	pthread_mutex_init		405569						
ANR	405705	Symbol	sema		405569						
ANR	405706	Symbol	scode		405569						
ANR	405707	Symbol	NULL		405569						
ANR	405708	Symbol	* sem		405569						
ANR	405709	Symbol	pthread_cond_init		405569						
ANR	405710	Symbol	SEM_ERROR_CODE		405569						
ANR	405711	Symbol	sem		405569						
ANR	405712	Symbol	& sem -> cond		405569						
ANR	405713	Symbol	& sem -> mutex		405569						
ANR	405714	Function	gp_semaphore_close	90:0:2351:2651							
ANR	405715	FunctionDef	gp_semaphore_close (gp_semaphore * sema)		405714	0					
ANR	405716	CompoundStatement		92:0:2395:2651	405714	0					
ANR	405717	Statement	pt_semaphore_t	93:4:2401:2414	405714	0	True				
ANR	405718	Statement	*	93:19:2416:2416	405714	1	True				
ANR	405719	Statement	const	93:21:2418:2422	405714	2	True				
ANR	405720	ExpressionStatement	sem = ( pt_semaphore_t * ) sema	93:27:2424:2452	405714	3	True				
ANR	405721	AssignmentExpression	sem = ( pt_semaphore_t * ) sema		405714	0		=			
ANR	405722	Identifier	sem		405714	0					
ANR	405723	CastExpression	( pt_semaphore_t * ) sema		405714	1					
ANR	405724	CastTarget	pt_semaphore_t *		405714	0					
ANR	405725	Identifier	sema		405714	1					
ANR	405726	IdentifierDeclStatement	"int scode , scode2 ;"	94:4:2458:2475	405714	4	True				
ANR	405727	IdentifierDecl	scode		405714	0					
ANR	405728	IdentifierDeclType	int		405714	0					
ANR	405729	Identifier	scode		405714	1					
ANR	405730	IdentifierDecl	scode2		405714	1					
ANR	405731	IdentifierDeclType	int		405714	0					
ANR	405732	Identifier	scode2		405714	1					
ANR	405733	ExpressionStatement	scode = pthread_cond_destroy ( & sem -> cond )	96:4:2482:2522	405714	5	True				
ANR	405734	AssignmentExpression	scode = pthread_cond_destroy ( & sem -> cond )		405714	0		=			
ANR	405735	Identifier	scode		405714	0					
ANR	405736	CallExpression	pthread_cond_destroy ( & sem -> cond )		405714	1					
ANR	405737	Callee	pthread_cond_destroy		405714	0					
ANR	405738	Identifier	pthread_cond_destroy		405714	0					
ANR	405739	ArgumentList	& sem -> cond		405714	1					
ANR	405740	Argument	& sem -> cond		405714	0					
ANR	405741	UnaryOperationExpression	& sem -> cond		405714	0					
ANR	405742	UnaryOperator	&		405714	0					
ANR	405743	PtrMemberAccess	sem -> cond		405714	1					
ANR	405744	Identifier	sem		405714	0					
ANR	405745	Identifier	cond		405714	1					
ANR	405746	ExpressionStatement	scode2 = pthread_mutex_destroy ( & sem -> mutex )	97:4:2528:2571	405714	6	True				
ANR	405747	AssignmentExpression	scode2 = pthread_mutex_destroy ( & sem -> mutex )		405714	0		=			
ANR	405748	Identifier	scode2		405714	0					
ANR	405749	CallExpression	pthread_mutex_destroy ( & sem -> mutex )		405714	1					
ANR	405750	Callee	pthread_mutex_destroy		405714	0					
ANR	405751	Identifier	pthread_mutex_destroy		405714	0					
ANR	405752	ArgumentList	& sem -> mutex		405714	1					
ANR	405753	Argument	& sem -> mutex		405714	0					
ANR	405754	UnaryOperationExpression	& sem -> mutex		405714	0					
ANR	405755	UnaryOperator	&		405714	0					
ANR	405756	PtrMemberAccess	sem -> mutex		405714	1					
ANR	405757	Identifier	sem		405714	0					
ANR	405758	Identifier	mutex		405714	1					
ANR	405759	IfStatement	if ( scode == 0 )		405714	7					
ANR	405760	Condition	scode == 0	98:8:2581:2590	405714	0	True				
ANR	405761	EqualityExpression	scode == 0		405714	0		==			
ANR	405762	Identifier	scode		405714	0					
ANR	405763	PrimaryExpression	0		405714	1					
ANR	405764	ExpressionStatement	scode = scode2	99:8:2601:2615	405714	1	True				
ANR	405765	AssignmentExpression	scode = scode2		405714	0		=			
ANR	405766	Identifier	scode		405714	0					
ANR	405767	Identifier	scode2		405714	1					
ANR	405768	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	100:4:2621:2649	405714	8	True				
ANR	405769	CallExpression	SEM_ERROR_CODE ( scode )		405714	0					
ANR	405770	Callee	SEM_ERROR_CODE		405714	0					
ANR	405771	Identifier	SEM_ERROR_CODE		405714	0					
ANR	405772	ArgumentList	scode		405714	1					
ANR	405773	Argument	scode		405714	0					
ANR	405774	Identifier	scode		405714	0					
ANR	405775	ReturnType	int		405714	1					
ANR	405776	Identifier	gp_semaphore_close		405714	2					
ANR	405777	ParameterList	gp_semaphore * sema		405714	3					
ANR	405778	Parameter	gp_semaphore * sema	91:19:2374:2392	405714	0	True				
ANR	405779	ParameterType	gp_semaphore *		405714	0					
ANR	405780	Identifier	sema		405714	1					
ANR	405781	CFGEntryNode	ENTRY		405714		True				
ANR	405782	CFGExitNode	EXIT		405714		True				
ANR	405783	Symbol	sema		405714						
ANR	405784	Symbol	scode		405714						
ANR	405785	Symbol	pthread_cond_destroy		405714						
ANR	405786	Symbol	scode2		405714						
ANR	405787	Symbol	SEM_ERROR_CODE		405714						
ANR	405788	Symbol	sem		405714						
ANR	405789	Symbol	pthread_mutex_destroy		405714						
ANR	405790	Symbol	& sem -> cond		405714						
ANR	405791	Symbol	& sem -> mutex		405714						
ANR	405792	Function	gp_semaphore_wait	103:0:2654:3353							
ANR	405793	FunctionDef	gp_semaphore_wait (gp_semaphore * sema)		405792	0					
ANR	405794	CompoundStatement		105:0:2697:3353	405792	0					
ANR	405795	Statement	pt_semaphore_t	106:4:2703:2716	405792	0	True				
ANR	405796	Statement	*	106:19:2718:2718	405792	1	True				
ANR	405797	Statement	const	106:21:2720:2724	405792	2	True				
ANR	405798	ExpressionStatement	sem = ( pt_semaphore_t * ) sema	106:27:2726:2754	405792	3	True				
ANR	405799	AssignmentExpression	sem = ( pt_semaphore_t * ) sema		405792	0		=			
ANR	405800	Identifier	sem		405792	0					
ANR	405801	CastExpression	( pt_semaphore_t * ) sema		405792	1					
ANR	405802	CastTarget	pt_semaphore_t *		405792	0					
ANR	405803	Identifier	sema		405792	1					
ANR	405804	IdentifierDeclStatement	"int scode , scode2 ;"	107:4:2760:2777	405792	4	True				
ANR	405805	IdentifierDecl	scode		405792	0					
ANR	405806	IdentifierDeclType	int		405792	0					
ANR	405807	Identifier	scode		405792	1					
ANR	405808	IdentifierDecl	scode2		405792	1					
ANR	405809	IdentifierDeclType	int		405792	0					
ANR	405810	Identifier	scode2		405792	1					
ANR	405811	ExpressionStatement	"eprintf ( ""Can't create mutexes when memory squeezing with forks\\n"" )"	110:4:2813:2879	405792	5	True				
ANR	405812	CallExpression	"eprintf ( ""Can't create mutexes when memory squeezing with forks\\n"" )"		405792	0					
ANR	405813	Callee	eprintf		405792	0					
ANR	405814	Identifier	eprintf		405792	0					
ANR	405815	ArgumentList	"""Can't create mutexes when memory squeezing with forks\\n"""		405792	1					
ANR	405816	Argument	"""Can't create mutexes when memory squeezing with forks\\n"""		405792	0					
ANR	405817	PrimaryExpression	"""Can't create mutexes when memory squeezing with forks\\n"""		405792	0					
ANR	405818	ExpressionStatement	Memento_bt ( )	111:4:2885:2897	405792	6	True				
ANR	405819	CallExpression	Memento_bt ( )		405792	0					
ANR	405820	Callee	Memento_bt		405792	0					
ANR	405821	Identifier	Memento_bt		405792	0					
ANR	405822	ArgumentList			405792	1					
ANR	405823	ExpressionStatement	return_error ( gs_error_VMerror )	112:4:2903:2933	405792	7	True				
ANR	405824	CallExpression	return_error ( gs_error_VMerror )		405792	0					
ANR	405825	Callee	return_error		405792	0					
ANR	405826	Identifier	return_error		405792	0					
ANR	405827	ArgumentList	gs_error_VMerror		405792	1					
ANR	405828	Argument	gs_error_VMerror		405792	0					
ANR	405829	Identifier	gs_error_VMerror		405792	0					
ANR	405830	ExpressionStatement	scode = pthread_mutex_lock ( & sem -> mutex )	115:4:2947:2986	405792	8	True				
ANR	405831	AssignmentExpression	scode = pthread_mutex_lock ( & sem -> mutex )		405792	0		=			
ANR	405832	Identifier	scode		405792	0					
ANR	405833	CallExpression	pthread_mutex_lock ( & sem -> mutex )		405792	1					
ANR	405834	Callee	pthread_mutex_lock		405792	0					
ANR	405835	Identifier	pthread_mutex_lock		405792	0					
ANR	405836	ArgumentList	& sem -> mutex		405792	1					
ANR	405837	Argument	& sem -> mutex		405792	0					
ANR	405838	UnaryOperationExpression	& sem -> mutex		405792	0					
ANR	405839	UnaryOperator	&		405792	0					
ANR	405840	PtrMemberAccess	sem -> mutex		405792	1					
ANR	405841	Identifier	sem		405792	0					
ANR	405842	Identifier	mutex		405792	1					
ANR	405843	IfStatement	if ( scode != 0 )		405792	9					
ANR	405844	Condition	scode != 0	116:8:2996:3005	405792	0	True				
ANR	405845	EqualityExpression	scode != 0		405792	0		!=			
ANR	405846	Identifier	scode		405792	0					
ANR	405847	PrimaryExpression	0		405792	1					
ANR	405848	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	117:8:3016:3044	405792	1	True				
ANR	405849	CallExpression	SEM_ERROR_CODE ( scode )		405792	0					
ANR	405850	Callee	SEM_ERROR_CODE		405792	0					
ANR	405851	Identifier	SEM_ERROR_CODE		405792	0					
ANR	405852	ArgumentList	scode		405792	1					
ANR	405853	Argument	scode		405792	0					
ANR	405854	Identifier	scode		405792	0					
ANR	405855	WhileStatement	while ( sem -> count == 0 )		405792	10					
ANR	405856	Condition	sem -> count == 0	118:11:3057:3071	405792	0	True				
ANR	405857	EqualityExpression	sem -> count == 0		405792	0		==			
ANR	405858	PtrMemberAccess	sem -> count		405792	0					
ANR	405859	Identifier	sem		405792	0					
ANR	405860	Identifier	count		405792	1					
ANR	405861	PrimaryExpression	0		405792	1					
ANR	405862	CompoundStatement		14:28:376:376	405792	1					
ANR	405863	ExpressionStatement	"scode = pthread_cond_wait ( & sem -> cond , & sem -> mutex )"	119:8:3084:3134	405792	0	True				
ANR	405864	AssignmentExpression	"scode = pthread_cond_wait ( & sem -> cond , & sem -> mutex )"		405792	0		=			
ANR	405865	Identifier	scode		405792	0					
ANR	405866	CallExpression	"pthread_cond_wait ( & sem -> cond , & sem -> mutex )"		405792	1					
ANR	405867	Callee	pthread_cond_wait		405792	0					
ANR	405868	Identifier	pthread_cond_wait		405792	0					
ANR	405869	ArgumentList	& sem -> cond		405792	1					
ANR	405870	Argument	& sem -> cond		405792	0					
ANR	405871	UnaryOperationExpression	& sem -> cond		405792	0					
ANR	405872	UnaryOperator	&		405792	0					
ANR	405873	PtrMemberAccess	sem -> cond		405792	1					
ANR	405874	Identifier	sem		405792	0					
ANR	405875	Identifier	cond		405792	1					
ANR	405876	Argument	& sem -> mutex		405792	1					
ANR	405877	UnaryOperationExpression	& sem -> mutex		405792	0					
ANR	405878	UnaryOperator	&		405792	0					
ANR	405879	PtrMemberAccess	sem -> mutex		405792	1					
ANR	405880	Identifier	sem		405792	0					
ANR	405881	Identifier	mutex		405792	1					
ANR	405882	IfStatement	if ( scode != 0 )		405792	1					
ANR	405883	Condition	scode != 0	120:12:3148:3157	405792	0	True				
ANR	405884	EqualityExpression	scode != 0		405792	0		!=			
ANR	405885	Identifier	scode		405792	0					
ANR	405886	PrimaryExpression	0		405792	1					
ANR	405887	BreakStatement	break ;	121:12:3172:3177	405792	1	True				
ANR	405888	IfStatement	if ( scode == 0 )		405792	11					
ANR	405889	Condition	scode == 0	123:8:3193:3202	405792	0	True				
ANR	405890	EqualityExpression	scode == 0		405792	0		==			
ANR	405891	Identifier	scode		405792	0					
ANR	405892	PrimaryExpression	0		405792	1					
ANR	405893	ExpressionStatement	-- sem -> count	124:8:3213:3225	405792	1	True				
ANR	405894	UnaryExpression	-- sem -> count		405792	0					
ANR	405895	IncDec	--		405792	0					
ANR	405896	PtrMemberAccess	sem -> count		405792	1					
ANR	405897	Identifier	sem		405792	0					
ANR	405898	Identifier	count		405792	1					
ANR	405899	ExpressionStatement	scode2 = pthread_mutex_unlock ( & sem -> mutex )	125:4:3231:3273	405792	12	True				
ANR	405900	AssignmentExpression	scode2 = pthread_mutex_unlock ( & sem -> mutex )		405792	0		=			
ANR	405901	Identifier	scode2		405792	0					
ANR	405902	CallExpression	pthread_mutex_unlock ( & sem -> mutex )		405792	1					
ANR	405903	Callee	pthread_mutex_unlock		405792	0					
ANR	405904	Identifier	pthread_mutex_unlock		405792	0					
ANR	405905	ArgumentList	& sem -> mutex		405792	1					
ANR	405906	Argument	& sem -> mutex		405792	0					
ANR	405907	UnaryOperationExpression	& sem -> mutex		405792	0					
ANR	405908	UnaryOperator	&		405792	0					
ANR	405909	PtrMemberAccess	sem -> mutex		405792	1					
ANR	405910	Identifier	sem		405792	0					
ANR	405911	Identifier	mutex		405792	1					
ANR	405912	IfStatement	if ( scode == 0 )		405792	13					
ANR	405913	Condition	scode == 0	126:8:3283:3292	405792	0	True				
ANR	405914	EqualityExpression	scode == 0		405792	0		==			
ANR	405915	Identifier	scode		405792	0					
ANR	405916	PrimaryExpression	0		405792	1					
ANR	405917	ExpressionStatement	scode = scode2	127:8:3303:3317	405792	1	True				
ANR	405918	AssignmentExpression	scode = scode2		405792	0		=			
ANR	405919	Identifier	scode		405792	0					
ANR	405920	Identifier	scode2		405792	1					
ANR	405921	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	128:4:3323:3351	405792	14	True				
ANR	405922	CallExpression	SEM_ERROR_CODE ( scode )		405792	0					
ANR	405923	Callee	SEM_ERROR_CODE		405792	0					
ANR	405924	Identifier	SEM_ERROR_CODE		405792	0					
ANR	405925	ArgumentList	scode		405792	1					
ANR	405926	Argument	scode		405792	0					
ANR	405927	Identifier	scode		405792	0					
ANR	405928	ReturnType	int		405792	1					
ANR	405929	Identifier	gp_semaphore_wait		405792	2					
ANR	405930	ParameterList	gp_semaphore * sema		405792	3					
ANR	405931	Parameter	gp_semaphore * sema	104:18:2676:2694	405792	0	True				
ANR	405932	ParameterType	gp_semaphore *		405792	0					
ANR	405933	Identifier	sema		405792	1					
ANR	405934	CFGEntryNode	ENTRY		405792		True				
ANR	405935	CFGExitNode	EXIT		405792		True				
ANR	405936	Symbol	scode		405792						
ANR	405937	Symbol	* sem		405792						
ANR	405938	Symbol	pthread_cond_wait		405792						
ANR	405939	Symbol	& sem -> cond		405792						
ANR	405940	Symbol	gs_error_VMerror		405792						
ANR	405941	Symbol	sem -> count		405792						
ANR	405942	Symbol	sema		405792						
ANR	405943	Symbol	scode2		405792						
ANR	405944	Symbol	pthread_mutex_lock		405792						
ANR	405945	Symbol	pthread_mutex_unlock		405792						
ANR	405946	Symbol	SEM_ERROR_CODE		405792						
ANR	405947	Symbol	sem		405792						
ANR	405948	Symbol	& sem -> mutex		405792						
ANR	405949	Function	gp_semaphore_signal	131:0:3356:3789							
ANR	405950	FunctionDef	gp_semaphore_signal (gp_semaphore * sema)		405949	0					
ANR	405951	CompoundStatement		133:0:3401:3789	405949	0					
ANR	405952	Statement	pt_semaphore_t	134:4:3407:3420	405949	0	True				
ANR	405953	Statement	*	134:19:3422:3422	405949	1	True				
ANR	405954	Statement	const	134:21:3424:3428	405949	2	True				
ANR	405955	ExpressionStatement	sem = ( pt_semaphore_t * ) sema	134:27:3430:3458	405949	3	True				
ANR	405956	AssignmentExpression	sem = ( pt_semaphore_t * ) sema		405949	0		=			
ANR	405957	Identifier	sem		405949	0					
ANR	405958	CastExpression	( pt_semaphore_t * ) sema		405949	1					
ANR	405959	CastTarget	pt_semaphore_t *		405949	0					
ANR	405960	Identifier	sema		405949	1					
ANR	405961	IdentifierDeclStatement	"int scode , scode2 ;"	135:4:3464:3481	405949	4	True				
ANR	405962	IdentifierDecl	scode		405949	0					
ANR	405963	IdentifierDeclType	int		405949	0					
ANR	405964	Identifier	scode		405949	1					
ANR	405965	IdentifierDecl	scode2		405949	1					
ANR	405966	IdentifierDeclType	int		405949	0					
ANR	405967	Identifier	scode2		405949	1					
ANR	405968	ExpressionStatement	scode = pthread_mutex_lock ( & sem -> mutex )	137:4:3488:3527	405949	5	True				
ANR	405969	AssignmentExpression	scode = pthread_mutex_lock ( & sem -> mutex )		405949	0		=			
ANR	405970	Identifier	scode		405949	0					
ANR	405971	CallExpression	pthread_mutex_lock ( & sem -> mutex )		405949	1					
ANR	405972	Callee	pthread_mutex_lock		405949	0					
ANR	405973	Identifier	pthread_mutex_lock		405949	0					
ANR	405974	ArgumentList	& sem -> mutex		405949	1					
ANR	405975	Argument	& sem -> mutex		405949	0					
ANR	405976	UnaryOperationExpression	& sem -> mutex		405949	0					
ANR	405977	UnaryOperator	&		405949	0					
ANR	405978	PtrMemberAccess	sem -> mutex		405949	1					
ANR	405979	Identifier	sem		405949	0					
ANR	405980	Identifier	mutex		405949	1					
ANR	405981	IfStatement	if ( scode != 0 )		405949	6					
ANR	405982	Condition	scode != 0	138:8:3537:3546	405949	0	True				
ANR	405983	EqualityExpression	scode != 0		405949	0		!=			
ANR	405984	Identifier	scode		405949	0					
ANR	405985	PrimaryExpression	0		405949	1					
ANR	405986	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	139:8:3557:3585	405949	1	True				
ANR	405987	CallExpression	SEM_ERROR_CODE ( scode )		405949	0					
ANR	405988	Callee	SEM_ERROR_CODE		405949	0					
ANR	405989	Identifier	SEM_ERROR_CODE		405949	0					
ANR	405990	ArgumentList	scode		405949	1					
ANR	405991	Argument	scode		405949	0					
ANR	405992	Identifier	scode		405949	0					
ANR	405993	IfStatement	if ( sem -> count ++ == 0 )		405949	7					
ANR	405994	Condition	sem -> count ++ == 0	140:8:3595:3611	405949	0	True				
ANR	405995	EqualityExpression	sem -> count ++ == 0		405949	0		==			
ANR	405996	PostIncDecOperationExpression	sem -> count ++		405949	0					
ANR	405997	PtrMemberAccess	sem -> count		405949	0					
ANR	405998	Identifier	sem		405949	0					
ANR	405999	Identifier	count		405949	1					
ANR	406000	IncDec	++		405949	1					
ANR	406001	PrimaryExpression	0		405949	1					
ANR	406002	ExpressionStatement	scode = pthread_cond_signal ( & sem -> cond )	141:8:3622:3661	405949	1	True				
ANR	406003	AssignmentExpression	scode = pthread_cond_signal ( & sem -> cond )		405949	0		=			
ANR	406004	Identifier	scode		405949	0					
ANR	406005	CallExpression	pthread_cond_signal ( & sem -> cond )		405949	1					
ANR	406006	Callee	pthread_cond_signal		405949	0					
ANR	406007	Identifier	pthread_cond_signal		405949	0					
ANR	406008	ArgumentList	& sem -> cond		405949	1					
ANR	406009	Argument	& sem -> cond		405949	0					
ANR	406010	UnaryOperationExpression	& sem -> cond		405949	0					
ANR	406011	UnaryOperator	&		405949	0					
ANR	406012	PtrMemberAccess	sem -> cond		405949	1					
ANR	406013	Identifier	sem		405949	0					
ANR	406014	Identifier	cond		405949	1					
ANR	406015	ExpressionStatement	scode2 = pthread_mutex_unlock ( & sem -> mutex )	142:4:3667:3709	405949	8	True				
ANR	406016	AssignmentExpression	scode2 = pthread_mutex_unlock ( & sem -> mutex )		405949	0		=			
ANR	406017	Identifier	scode2		405949	0					
ANR	406018	CallExpression	pthread_mutex_unlock ( & sem -> mutex )		405949	1					
ANR	406019	Callee	pthread_mutex_unlock		405949	0					
ANR	406020	Identifier	pthread_mutex_unlock		405949	0					
ANR	406021	ArgumentList	& sem -> mutex		405949	1					
ANR	406022	Argument	& sem -> mutex		405949	0					
ANR	406023	UnaryOperationExpression	& sem -> mutex		405949	0					
ANR	406024	UnaryOperator	&		405949	0					
ANR	406025	PtrMemberAccess	sem -> mutex		405949	1					
ANR	406026	Identifier	sem		405949	0					
ANR	406027	Identifier	mutex		405949	1					
ANR	406028	IfStatement	if ( scode == 0 )		405949	9					
ANR	406029	Condition	scode == 0	143:8:3719:3728	405949	0	True				
ANR	406030	EqualityExpression	scode == 0		405949	0		==			
ANR	406031	Identifier	scode		405949	0					
ANR	406032	PrimaryExpression	0		405949	1					
ANR	406033	ExpressionStatement	scode = scode2	144:8:3739:3753	405949	1	True				
ANR	406034	AssignmentExpression	scode = scode2		405949	0		=			
ANR	406035	Identifier	scode		405949	0					
ANR	406036	Identifier	scode2		405949	1					
ANR	406037	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	145:4:3759:3787	405949	10	True				
ANR	406038	CallExpression	SEM_ERROR_CODE ( scode )		405949	0					
ANR	406039	Callee	SEM_ERROR_CODE		405949	0					
ANR	406040	Identifier	SEM_ERROR_CODE		405949	0					
ANR	406041	ArgumentList	scode		405949	1					
ANR	406042	Argument	scode		405949	0					
ANR	406043	Identifier	scode		405949	0					
ANR	406044	ReturnType	int		405949	1					
ANR	406045	Identifier	gp_semaphore_signal		405949	2					
ANR	406046	ParameterList	gp_semaphore * sema		405949	3					
ANR	406047	Parameter	gp_semaphore * sema	132:20:3380:3398	405949	0	True				
ANR	406048	ParameterType	gp_semaphore *		405949	0					
ANR	406049	Identifier	sema		405949	1					
ANR	406050	CFGEntryNode	ENTRY		405949		True				
ANR	406051	CFGExitNode	EXIT		405949		True				
ANR	406052	Symbol	sem -> count		405949						
ANR	406053	Symbol	sema		405949						
ANR	406054	Symbol	scode		405949						
ANR	406055	Symbol	* sem		405949						
ANR	406056	Symbol	scode2		405949						
ANR	406057	Symbol	pthread_mutex_lock		405949						
ANR	406058	Symbol	pthread_mutex_unlock		405949						
ANR	406059	Symbol	SEM_ERROR_CODE		405949						
ANR	406060	Symbol	sem		405949						
ANR	406061	Symbol	pthread_cond_signal		405949						
ANR	406062	Symbol	& sem -> cond		405949						
ANR	406063	Symbol	& sem -> mutex		405949						
ANR	406064	ClassDef	gp_pthread_recursive_s	159:8:4213:4404							
ANR	406065	DeclStmt									
ANR	406066	Decl							pthread_mutex_t	pthread_mutex_t	mutex
ANR	406067	DeclStmt									
ANR	406068	Decl							pthread_t	pthread_t	self_id
ANR	406069	DeclStmt									
ANR	406070	Decl							int	int	lcount
ANR	406071	DeclStmt									
ANR	406072	Decl							gp_pthread_recursive_s	gp_pthread_recursive_s	gp_pthread_recursive_t
ANR	406073	Function	gp_monitor_sizeof	167:0:4407:4481							
ANR	406074	FunctionDef	gp_monitor_sizeof ()		406073	0					
ANR	406075	CompoundStatement		169:0:4436:4481	406073	0					
ANR	406076	ReturnStatement	return sizeof ( gp_pthread_recursive_t ) ;	170:4:4442:4479	406073	0	True				
ANR	406077	SizeofExpression	sizeof ( gp_pthread_recursive_t )		406073	0					
ANR	406078	Sizeof	sizeof		406073	0					
ANR	406079	SizeofOperand	gp_pthread_recursive_t		406073	1					
ANR	406080	ReturnType	uint		406073	1					
ANR	406081	Identifier	gp_monitor_sizeof		406073	2					
ANR	406082	ParameterList			406073	3					
ANR	406083	CFGEntryNode	ENTRY		406073		True				
ANR	406084	CFGExitNode	EXIT		406073		True				
ANR	406085	Function	gp_monitor_open	173:0:4484:5465							
ANR	406086	FunctionDef	gp_monitor_open (gp_monitor * mona)		406085	0					
ANR	406087	CompoundStatement		175:0:4523:5465	406085	0					
ANR	406088	IdentifierDeclStatement	pthread_mutex_t * mon ;	176:4:4529:4549	406085	0	True				
ANR	406089	IdentifierDecl	* mon		406085	0					
ANR	406090	IdentifierDeclType	pthread_mutex_t *		406085	0					
ANR	406091	Identifier	mon		406085	1					
ANR	406092	IdentifierDeclStatement	int scode ;	177:4:4555:4564	406085	1	True				
ANR	406093	IdentifierDecl	scode		406085	0					
ANR	406094	IdentifierDeclType	int		406085	0					
ANR	406095	Identifier	scode		406085	1					
ANR	406096	IdentifierDeclStatement	pthread_mutexattr_t attr ;	178:4:4570:4594	406085	2	True				
ANR	406097	IdentifierDecl	attr		406085	0					
ANR	406098	IdentifierDeclType	pthread_mutexattr_t		406085	0					
ANR	406099	Identifier	attr		406085	1					
ANR	406100	IdentifierDeclStatement	pthread_mutexattr_t * attrp = NULL ;	179:4:4600:4633	406085	3	True				
ANR	406101	IdentifierDecl	* attrp = NULL		406085	0					
ANR	406102	IdentifierDeclType	pthread_mutexattr_t *		406085	0					
ANR	406103	Identifier	attrp		406085	1					
ANR	406104	AssignmentExpression	* attrp = NULL		406085	2		=			
ANR	406105	Identifier	NULL		406085	0					
ANR	406106	Identifier	NULL		406085	1					
ANR	406107	ExpressionStatement	"eprintf ( ""Can't create monitors when memory squeezing with forks\\n"" )"	182:4:4669:4736	406085	4	True				
ANR	406108	CallExpression	"eprintf ( ""Can't create monitors when memory squeezing with forks\\n"" )"		406085	0					
ANR	406109	Callee	eprintf		406085	0					
ANR	406110	Identifier	eprintf		406085	0					
ANR	406111	ArgumentList	"""Can't create monitors when memory squeezing with forks\\n"""		406085	1					
ANR	406112	Argument	"""Can't create monitors when memory squeezing with forks\\n"""		406085	0					
ANR	406113	PrimaryExpression	"""Can't create monitors when memory squeezing with forks\\n"""		406085	0					
ANR	406114	ExpressionStatement	Memento_bt ( )	183:4:4742:4754	406085	5	True				
ANR	406115	CallExpression	Memento_bt ( )		406085	0					
ANR	406116	Callee	Memento_bt		406085	0					
ANR	406117	Identifier	Memento_bt		406085	0					
ANR	406118	ArgumentList			406085	1					
ANR	406119	ExpressionStatement	return_error ( gs_error_VMerror )	184:4:4760:4790	406085	6	True				
ANR	406120	CallExpression	return_error ( gs_error_VMerror )		406085	0					
ANR	406121	Callee	return_error		406085	0					
ANR	406122	Identifier	return_error		406085	0					
ANR	406123	ArgumentList	gs_error_VMerror		406085	1					
ANR	406124	Argument	gs_error_VMerror		406085	0					
ANR	406125	Identifier	gs_error_VMerror		406085	0					
ANR	406126	IfStatement	if ( ! mona )		406085	7					
ANR	406127	Condition	! mona	187:8:4808:4812	406085	0	True				
ANR	406128	UnaryOperationExpression	! mona		406085	0					
ANR	406129	UnaryOperator	!		406085	0					
ANR	406130	Identifier	mona		406085	1					
ANR	406131	ReturnStatement	return - 1 ;	188:8:4823:4832	406085	1	True				
ANR	406132	UnaryOperationExpression	- 1		406085	0					
ANR	406133	UnaryOperator	-		406085	0					
ANR	406134	PrimaryExpression	1		406085	1					
ANR	406135	ExpressionStatement	attrp = & attr	192:4:4902:4915	406085	8	True				
ANR	406136	AssignmentExpression	attrp = & attr		406085	0		=			
ANR	406137	Identifier	attrp		406085	0					
ANR	406138	UnaryOperationExpression	& attr		406085	1					
ANR	406139	UnaryOperator	&		406085	0					
ANR	406140	Identifier	attr		406085	1					
ANR	406141	ExpressionStatement	scode = pthread_mutexattr_init ( attrp )	193:4:4921:4958	406085	9	True				
ANR	406142	AssignmentExpression	scode = pthread_mutexattr_init ( attrp )		406085	0		=			
ANR	406143	Identifier	scode		406085	0					
ANR	406144	CallExpression	pthread_mutexattr_init ( attrp )		406085	1					
ANR	406145	Callee	pthread_mutexattr_init		406085	0					
ANR	406146	Identifier	pthread_mutexattr_init		406085	0					
ANR	406147	ArgumentList	attrp		406085	1					
ANR	406148	Argument	attrp		406085	0					
ANR	406149	Identifier	attrp		406085	0					
ANR	406150	IfStatement	if ( scode < 0 )		406085	10					
ANR	406151	Condition	scode < 0	194:8:4968:4976	406085	0	True				
ANR	406152	RelationalExpression	scode < 0		406085	0		<			
ANR	406153	Identifier	scode		406085	0					
ANR	406154	PrimaryExpression	0		406085	1					
ANR	406155	GotoStatement	goto done ;	194:19:4979:4988	406085	1	True				
ANR	406156	Identifier	done		406085	0					
ANR	406157	ExpressionStatement	"scode = pthread_mutexattr_settype ( attrp , GS_RECURSIVE_MUTEXATTR )"	196:4:4995:5059	406085	11	True				
ANR	406158	AssignmentExpression	"scode = pthread_mutexattr_settype ( attrp , GS_RECURSIVE_MUTEXATTR )"		406085	0		=			
ANR	406159	Identifier	scode		406085	0					
ANR	406160	CallExpression	"pthread_mutexattr_settype ( attrp , GS_RECURSIVE_MUTEXATTR )"		406085	1					
ANR	406161	Callee	pthread_mutexattr_settype		406085	0					
ANR	406162	Identifier	pthread_mutexattr_settype		406085	0					
ANR	406163	ArgumentList	attrp		406085	1					
ANR	406164	Argument	attrp		406085	0					
ANR	406165	Identifier	attrp		406085	0					
ANR	406166	Argument	GS_RECURSIVE_MUTEXATTR		406085	1					
ANR	406167	Identifier	GS_RECURSIVE_MUTEXATTR		406085	0					
ANR	406168	IfStatement	if ( scode < 0 )		406085	12					
ANR	406169	Condition	scode < 0	197:8:5069:5077	406085	0	True				
ANR	406170	RelationalExpression	scode < 0		406085	0		<			
ANR	406171	Identifier	scode		406085	0					
ANR	406172	PrimaryExpression	0		406085	1					
ANR	406173	CompoundStatement		23:19:556:556	406085	1					
ANR	406174	GotoStatement	goto done ;	198:8:5090:5099	406085	0	True				
ANR	406175	Identifier	done		406085	0					
ANR	406176	ExpressionStatement	mon = & ( ( gp_pthread_recursive_t * ) mona ) -> mutex	205:4:5270:5316	406085	13	True				
ANR	406177	AssignmentExpression	mon = & ( ( gp_pthread_recursive_t * ) mona ) -> mutex		406085	0		=			
ANR	406178	Identifier	mon		406085	0					
ANR	406179	UnaryOperationExpression	& ( ( gp_pthread_recursive_t * ) mona ) -> mutex		406085	1					
ANR	406180	UnaryOperator	&		406085	0					
ANR	406181	PtrMemberAccess	( ( gp_pthread_recursive_t * ) mona ) -> mutex		406085	1					
ANR	406182	CastExpression	( gp_pthread_recursive_t * ) mona		406085	0					
ANR	406183	CastTarget	gp_pthread_recursive_t *		406085	0					
ANR	406184	Identifier	mona		406085	1					
ANR	406185	Identifier	mutex		406085	1					
ANR	406186	ExpressionStatement	"scode = pthread_mutex_init ( mon , attrp )"	206:4:5322:5360	406085	14	True				
ANR	406187	AssignmentExpression	"scode = pthread_mutex_init ( mon , attrp )"		406085	0		=			
ANR	406188	Identifier	scode		406085	0					
ANR	406189	CallExpression	"pthread_mutex_init ( mon , attrp )"		406085	1					
ANR	406190	Callee	pthread_mutex_init		406085	0					
ANR	406191	Identifier	pthread_mutex_init		406085	0					
ANR	406192	ArgumentList	mon		406085	1					
ANR	406193	Argument	mon		406085	0					
ANR	406194	Identifier	mon		406085	0					
ANR	406195	Argument	attrp		406085	1					
ANR	406196	Identifier	attrp		406085	0					
ANR	406197	IfStatement	if ( attrp )		406085	15					
ANR	406198	Condition	attrp	207:8:5370:5374	406085	0	True				
ANR	406199	Identifier	attrp		406085	0					
ANR	406200	ExpressionStatement	( void ) pthread_mutexattr_destroy ( attrp )	208:8:5385:5423	406085	1	True				
ANR	406201	CastExpression	( void ) pthread_mutexattr_destroy ( attrp )		406085	0					
ANR	406202	CastTarget	void		406085	0					
ANR	406203	CallExpression	pthread_mutexattr_destroy ( attrp )		406085	1					
ANR	406204	Callee	pthread_mutexattr_destroy		406085	0					
ANR	406205	Identifier	pthread_mutexattr_destroy		406085	0					
ANR	406206	ArgumentList	attrp		406085	1					
ANR	406207	Argument	attrp		406085	0					
ANR	406208	Identifier	attrp		406085	0					
ANR	406209	Label	done :	209:0:5425:5429	406085	16	True				
ANR	406210	Identifier	done		406085	0					
ANR	406211	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	210:4:5435:5463	406085	17	True				
ANR	406212	CallExpression	SEM_ERROR_CODE ( scode )		406085	0					
ANR	406213	Callee	SEM_ERROR_CODE		406085	0					
ANR	406214	Identifier	SEM_ERROR_CODE		406085	0					
ANR	406215	ArgumentList	scode		406085	1					
ANR	406216	Argument	scode		406085	0					
ANR	406217	Identifier	scode		406085	0					
ANR	406218	ReturnType	int		406085	1					
ANR	406219	Identifier	gp_monitor_open		406085	2					
ANR	406220	ParameterList	gp_monitor * mona		406085	3					
ANR	406221	Parameter	gp_monitor * mona	174:16:4504:4520	406085	0	True				
ANR	406222	ParameterType	gp_monitor *		406085	0					
ANR	406223	Identifier	mona		406085	1					
ANR	406224	CFGEntryNode	ENTRY		406085		True				
ANR	406225	CFGExitNode	EXIT		406085		True				
ANR	406226	Symbol	scode		406085						
ANR	406227	Symbol	NULL		406085						
ANR	406228	Symbol	& attr		406085						
ANR	406229	Symbol	mona		406085						
ANR	406230	Symbol	mon		406085						
ANR	406231	Symbol	GS_RECURSIVE_MUTEXATTR		406085						
ANR	406232	Symbol	gs_error_VMerror		406085						
ANR	406233	Symbol	attrp		406085						
ANR	406234	Symbol	pthread_mutex_init		406085						
ANR	406235	Symbol	pthread_mutexattr_init		406085						
ANR	406236	Symbol	pthread_mutexattr_settype		406085						
ANR	406237	Symbol	SEM_ERROR_CODE		406085						
ANR	406238	Symbol	attr		406085						
ANR	406239	Symbol	& ( ( gp_pthread_recursive_t * ) mona ) -> mutex		406085						
ANR	406240	Function	gp_monitor_close	213:0:5468:5676							
ANR	406241	FunctionDef	gp_monitor_close (gp_monitor * mona)		406240	0					
ANR	406242	CompoundStatement		215:0:5508:5676	406240	0					
ANR	406243	Statement	pthread_mutex_t	216:4:5514:5528	406240	0	True				
ANR	406244	Statement	*	216:20:5530:5530	406240	1	True				
ANR	406245	Statement	const	216:22:5532:5536	406240	2	True				
ANR	406246	ExpressionStatement	mon = & ( ( gp_pthread_recursive_t * ) mona ) -> mutex	216:28:5538:5584	406240	3	True				
ANR	406247	AssignmentExpression	mon = & ( ( gp_pthread_recursive_t * ) mona ) -> mutex		406240	0		=			
ANR	406248	Identifier	mon		406240	0					
ANR	406249	UnaryOperationExpression	& ( ( gp_pthread_recursive_t * ) mona ) -> mutex		406240	1					
ANR	406250	UnaryOperator	&		406240	0					
ANR	406251	PtrMemberAccess	( ( gp_pthread_recursive_t * ) mona ) -> mutex		406240	1					
ANR	406252	CastExpression	( gp_pthread_recursive_t * ) mona		406240	0					
ANR	406253	CastTarget	gp_pthread_recursive_t *		406240	0					
ANR	406254	Identifier	mona		406240	1					
ANR	406255	Identifier	mutex		406240	1					
ANR	406256	IdentifierDeclStatement	int scode ;	217:4:5590:5599	406240	4	True				
ANR	406257	IdentifierDecl	scode		406240	0					
ANR	406258	IdentifierDeclType	int		406240	0					
ANR	406259	Identifier	scode		406240	1					
ANR	406260	ExpressionStatement	scode = pthread_mutex_destroy ( mon )	219:4:5606:5640	406240	5	True				
ANR	406261	AssignmentExpression	scode = pthread_mutex_destroy ( mon )		406240	0		=			
ANR	406262	Identifier	scode		406240	0					
ANR	406263	CallExpression	pthread_mutex_destroy ( mon )		406240	1					
ANR	406264	Callee	pthread_mutex_destroy		406240	0					
ANR	406265	Identifier	pthread_mutex_destroy		406240	0					
ANR	406266	ArgumentList	mon		406240	1					
ANR	406267	Argument	mon		406240	0					
ANR	406268	Identifier	mon		406240	0					
ANR	406269	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	220:4:5646:5674	406240	6	True				
ANR	406270	CallExpression	SEM_ERROR_CODE ( scode )		406240	0					
ANR	406271	Callee	SEM_ERROR_CODE		406240	0					
ANR	406272	Identifier	SEM_ERROR_CODE		406240	0					
ANR	406273	ArgumentList	scode		406240	1					
ANR	406274	Argument	scode		406240	0					
ANR	406275	Identifier	scode		406240	0					
ANR	406276	ReturnType	int		406240	1					
ANR	406277	Identifier	gp_monitor_close		406240	2					
ANR	406278	ParameterList	gp_monitor * mona		406240	3					
ANR	406279	Parameter	gp_monitor * mona	214:17:5489:5505	406240	0	True				
ANR	406280	ParameterType	gp_monitor *		406240	0					
ANR	406281	Identifier	mona		406240	1					
ANR	406282	CFGEntryNode	ENTRY		406240		True				
ANR	406283	CFGExitNode	EXIT		406240		True				
ANR	406284	Symbol	scode		406240						
ANR	406285	Symbol	mona		406240						
ANR	406286	Symbol	SEM_ERROR_CODE		406240						
ANR	406287	Symbol	& ( ( gp_pthread_recursive_t * ) mona ) -> mutex		406240						
ANR	406288	Symbol	mon		406240						
ANR	406289	Symbol	pthread_mutex_destroy		406240						
ANR	406290	Function	gp_monitor_enter	223:0:5679:6582							
ANR	406291	FunctionDef	gp_monitor_enter (gp_monitor * mona)		406290	0					
ANR	406292	CompoundStatement		225:0:5719:6582	406290	0					
ANR	406293	Statement	pthread_mutex_t	226:4:5725:5739	406290	0	True				
ANR	406294	Statement	*	226:20:5741:5741	406290	1	True				
ANR	406295	Statement	const	226:22:5743:5747	406290	2	True				
ANR	406296	ExpressionStatement	mon = ( pthread_mutex_t * ) mona	226:28:5749:5778	406290	3	True				
ANR	406297	AssignmentExpression	mon = ( pthread_mutex_t * ) mona		406290	0		=			
ANR	406298	Identifier	mon		406290	0					
ANR	406299	CastExpression	( pthread_mutex_t * ) mona		406290	1					
ANR	406300	CastTarget	pthread_mutex_t *		406290	0					
ANR	406301	Identifier	mona		406290	1					
ANR	406302	IdentifierDeclStatement	int scode ;	227:4:5784:5793	406290	4	True				
ANR	406303	IdentifierDecl	scode		406290	0					
ANR	406304	IdentifierDeclType	int		406290	0					
ANR	406305	Identifier	scode		406290	1					
ANR	406306	ExpressionStatement	scode = pthread_mutex_lock ( mon )	230:4:5830:5861	406290	5	True				
ANR	406307	AssignmentExpression	scode = pthread_mutex_lock ( mon )		406290	0		=			
ANR	406308	Identifier	scode		406290	0					
ANR	406309	CallExpression	pthread_mutex_lock ( mon )		406290	1					
ANR	406310	Callee	pthread_mutex_lock		406290	0					
ANR	406311	Identifier	pthread_mutex_lock		406290	0					
ANR	406312	ArgumentList	mon		406290	1					
ANR	406313	Argument	mon		406290	0					
ANR	406314	Identifier	mon		406290	0					
ANR	406315	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	250:4:6552:6580	406290	6	True				
ANR	406316	CallExpression	SEM_ERROR_CODE ( scode )		406290	0					
ANR	406317	Callee	SEM_ERROR_CODE		406290	0					
ANR	406318	Identifier	SEM_ERROR_CODE		406290	0					
ANR	406319	ArgumentList	scode		406290	1					
ANR	406320	Argument	scode		406290	0					
ANR	406321	Identifier	scode		406290	0					
ANR	406322	ReturnType	int		406290	1					
ANR	406323	Identifier	gp_monitor_enter		406290	2					
ANR	406324	ParameterList	gp_monitor * mona		406290	3					
ANR	406325	Parameter	gp_monitor * mona	224:17:5700:5716	406290	0	True				
ANR	406326	ParameterType	gp_monitor *		406290	0					
ANR	406327	Identifier	mona		406290	1					
ANR	406328	CFGEntryNode	ENTRY		406290		True				
ANR	406329	CFGExitNode	EXIT		406290		True				
ANR	406330	Symbol	scode		406290						
ANR	406331	Symbol	mona		406290						
ANR	406332	Symbol	pthread_mutex_lock		406290						
ANR	406333	Symbol	SEM_ERROR_CODE		406290						
ANR	406334	Symbol	mon		406290						
ANR	406335	Function	gp_monitor_leave	253:0:6585:7292							
ANR	406336	FunctionDef	gp_monitor_leave (gp_monitor * mona)		406335	0					
ANR	406337	CompoundStatement		255:0:6625:7292	406335	0					
ANR	406338	Statement	pthread_mutex_t	256:4:6631:6645	406335	0	True				
ANR	406339	Statement	*	256:20:6647:6647	406335	1	True				
ANR	406340	Statement	const	256:22:6649:6653	406335	2	True				
ANR	406341	ExpressionStatement	mon = ( pthread_mutex_t * ) mona	256:28:6655:6684	406335	3	True				
ANR	406342	AssignmentExpression	mon = ( pthread_mutex_t * ) mona		406335	0		=			
ANR	406343	Identifier	mon		406335	0					
ANR	406344	CastExpression	( pthread_mutex_t * ) mona		406335	1					
ANR	406345	CastTarget	pthread_mutex_t *		406335	0					
ANR	406346	Identifier	mona		406335	1					
ANR	406347	IdentifierDeclStatement	int scode = 0 ;	257:4:6690:6703	406335	4	True				
ANR	406348	IdentifierDecl	scode = 0		406335	0					
ANR	406349	IdentifierDeclType	int		406335	0					
ANR	406350	Identifier	scode		406335	1					
ANR	406351	AssignmentExpression	scode = 0		406335	2		=			
ANR	406352	Identifier	scode		406335	0					
ANR	406353	PrimaryExpression	0		406335	1					
ANR	406354	ExpressionStatement	scode = pthread_mutex_unlock ( mon )	260:4:6740:6773	406335	5	True				
ANR	406355	AssignmentExpression	scode = pthread_mutex_unlock ( mon )		406335	0		=			
ANR	406356	Identifier	scode		406335	0					
ANR	406357	CallExpression	pthread_mutex_unlock ( mon )		406335	1					
ANR	406358	Callee	pthread_mutex_unlock		406335	0					
ANR	406359	Identifier	pthread_mutex_unlock		406335	0					
ANR	406360	ArgumentList	mon		406335	1					
ANR	406361	Argument	mon		406335	0					
ANR	406362	Identifier	mon		406335	0					
ANR	406363	ReturnStatement	return SEM_ERROR_CODE ( scode ) ;	275:4:7262:7290	406335	6	True				
ANR	406364	CallExpression	SEM_ERROR_CODE ( scode )		406335	0					
ANR	406365	Callee	SEM_ERROR_CODE		406335	0					
ANR	406366	Identifier	SEM_ERROR_CODE		406335	0					
ANR	406367	ArgumentList	scode		406335	1					
ANR	406368	Argument	scode		406335	0					
ANR	406369	Identifier	scode		406335	0					
ANR	406370	ReturnType	int		406335	1					
ANR	406371	Identifier	gp_monitor_leave		406335	2					
ANR	406372	ParameterList	gp_monitor * mona		406335	3					
ANR	406373	Parameter	gp_monitor * mona	254:17:6606:6622	406335	0	True				
ANR	406374	ParameterType	gp_monitor *		406335	0					
ANR	406375	Identifier	mona		406335	1					
ANR	406376	CFGEntryNode	ENTRY		406335		True				
ANR	406377	CFGExitNode	EXIT		406335		True				
ANR	406378	Symbol	scode		406335						
ANR	406379	Symbol	mona		406335						
ANR	406380	Symbol	pthread_mutex_unlock		406335						
ANR	406381	Symbol	SEM_ERROR_CODE		406335						
ANR	406382	Symbol	mon		406335						
ANR	406383	ClassDef	gp_thread_creation_closure_s	286:8:7581:7770							
ANR	406384	DeclStmt									
ANR	406385	Decl							gp_thread_creation_callback_t	gp_thread_creation_callback_t	proc
ANR	406386	DeclStmt									
ANR	406387	Decl							void	void *	proc_data
ANR	406388	DeclStmt									
ANR	406389	Decl							gp_thread_creation_closure_s	gp_thread_creation_closure_s	gp_thread_creation_closure_t
ANR	406390	Function	gp_thread_begin_wrapper	292:0:7829:8145							
ANR	406391	FunctionDef	gp_thread_begin_wrapper (void * thread_data)		406390	0					
ANR	406392	CompoundStatement		294:0:7923:8145	406390	0					
ANR	406393	IdentifierDeclStatement	gp_thread_creation_closure_t closure ;	295:4:7929:7965	406390	0	True				
ANR	406394	IdentifierDecl	closure		406390	0					
ANR	406395	IdentifierDeclType	gp_thread_creation_closure_t		406390	0					
ANR	406396	Identifier	closure		406390	1					
ANR	406397	ExpressionStatement	closure = * ( gp_thread_creation_closure_t * ) thread_data	297:4:7972:8026	406390	1	True				
ANR	406398	AssignmentExpression	closure = * ( gp_thread_creation_closure_t * ) thread_data		406390	0		=			
ANR	406399	Identifier	closure		406390	0					
ANR	406400	UnaryOperationExpression	* ( gp_thread_creation_closure_t * ) thread_data		406390	1					
ANR	406401	UnaryOperator	*		406390	0					
ANR	406402	CastExpression	( gp_thread_creation_closure_t * ) thread_data		406390	1					
ANR	406403	CastTarget	gp_thread_creation_closure_t *		406390	0					
ANR	406404	Identifier	thread_data		406390	1					
ANR	406405	ExpressionStatement	free ( thread_data )	298:4:8032:8049	406390	2	True				
ANR	406406	CallExpression	free ( thread_data )		406390	0					
ANR	406407	Callee	free		406390	0					
ANR	406408	Identifier	free		406390	0					
ANR	406409	ArgumentList	thread_data		406390	1					
ANR	406410	Argument	thread_data		406390	0					
ANR	406411	Identifier	thread_data		406390	0					
ANR	406412	ExpressionStatement	DISCARD ( closure . proc ( closure . proc_data ) )	299:4:8055:8095	406390	3	True				
ANR	406413	CallExpression	DISCARD ( closure . proc ( closure . proc_data ) )		406390	0					
ANR	406414	Callee	DISCARD		406390	0					
ANR	406415	Identifier	DISCARD		406390	0					
ANR	406416	ArgumentList	closure . proc ( closure . proc_data )		406390	1					
ANR	406417	Argument	closure . proc ( closure . proc_data )		406390	0					
ANR	406418	CallExpression	closure . proc ( closure . proc_data )		406390	0					
ANR	406419	Callee	closure . proc		406390	0					
ANR	406420	MemberAccess	closure . proc		406390	0					
ANR	406421	Identifier	closure		406390	0					
ANR	406422	Identifier	proc		406390	1					
ANR	406423	ArgumentList	closure . proc_data		406390	1					
ANR	406424	Argument	closure . proc_data		406390	0					
ANR	406425	MemberAccess	closure . proc_data		406390	0					
ANR	406426	Identifier	closure		406390	0					
ANR	406427	Identifier	proc_data		406390	1					
ANR	406428	ReturnStatement	return NULL ;	300:4:8101:8112	406390	4	True				
ANR	406429	Identifier	NULL		406390	0					
ANR	406430	ReturnType	static void *		406390	1					
ANR	406431	Identifier	gp_thread_begin_wrapper		406390	2					
ANR	406432	ParameterList	void * thread_data		406390	3					
ANR	406433	Parameter	void * thread_data	293:24:7867:7883	406390	0	True				
ANR	406434	ParameterType	void *		406390	0					
ANR	406435	Identifier	thread_data		406390	1					
ANR	406436	CFGEntryNode	ENTRY		406390		True				
ANR	406437	CFGExitNode	EXIT		406390		True				
ANR	406438	Symbol	closure . proc		406390						
ANR	406439	Symbol	NULL		406390						
ANR	406440	Symbol	closure . proc_data		406390						
ANR	406441	Symbol	* ( gp_thread_creation_closure_t * ) thread_data		406390						
ANR	406442	Symbol	* thread_data		406390						
ANR	406443	Symbol	closure		406390						
ANR	406444	Symbol	thread_data		406390						
ANR	406445	Function	gp_create_thread	303:0:8148:8990							
ANR	406446	FunctionDef	"gp_create_thread (gp_thread_creation_callback_t proc , void * proc_data)"		406445	0					
ANR	406447	CompoundStatement		305:0:8222:8990	406445	0					
ANR	406448	IdentifierDeclStatement	gp_thread_creation_closure_t * closure = ( gp_thread_creation_closure_t * ) malloc ( sizeof ( * closure ) ) ;	306:4:8228:8332	406445	0	True				
ANR	406449	IdentifierDecl	* closure = ( gp_thread_creation_closure_t * ) malloc ( sizeof ( * closure ) )		406445	0					
ANR	406450	IdentifierDeclType	gp_thread_creation_closure_t *		406445	0					
ANR	406451	Identifier	closure		406445	1					
ANR	406452	AssignmentExpression	* closure = ( gp_thread_creation_closure_t * ) malloc ( sizeof ( * closure ) )		406445	2		=			
ANR	406453	Identifier	closure		406445	0					
ANR	406454	CastExpression	( gp_thread_creation_closure_t * ) malloc ( sizeof ( * closure ) )		406445	1					
ANR	406455	CastTarget	gp_thread_creation_closure_t *		406445	0					
ANR	406456	CallExpression	malloc ( sizeof ( * closure ) )		406445	1					
ANR	406457	Callee	malloc		406445	0					
ANR	406458	Identifier	malloc		406445	0					
ANR	406459	ArgumentList	sizeof ( * closure )		406445	1					
ANR	406460	Argument	sizeof ( * closure )		406445	0					
ANR	406461	SizeofExpression	sizeof ( * closure )		406445	0					
ANR	406462	Sizeof	sizeof		406445	0					
ANR	406463	UnaryOperationExpression	* closure		406445	1					
ANR	406464	UnaryOperator	*		406445	0					
ANR	406465	Identifier	closure		406445	1					
ANR	406466	IdentifierDeclStatement	pthread_t ignore_thread ;	308:4:8338:8361	406445	1	True				
ANR	406467	IdentifierDecl	ignore_thread		406445	0					
ANR	406468	IdentifierDeclType	pthread_t		406445	0					
ANR	406469	Identifier	ignore_thread		406445	1					
ANR	406470	IdentifierDeclStatement	pthread_attr_t attr ;	309:4:8367:8386	406445	2	True				
ANR	406471	IdentifierDecl	attr		406445	0					
ANR	406472	IdentifierDeclType	pthread_attr_t		406445	0					
ANR	406473	Identifier	attr		406445	1					
ANR	406474	IdentifierDeclStatement	int code ;	310:4:8392:8400	406445	3	True				
ANR	406475	IdentifierDecl	code		406445	0					
ANR	406476	IdentifierDeclType	int		406445	0					
ANR	406477	Identifier	code		406445	1					
ANR	406478	ExpressionStatement	"eprintf ( ""Can't create threads when memory squeezing with forks\\n"" )"	313:4:8436:8502	406445	4	True				
ANR	406479	CallExpression	"eprintf ( ""Can't create threads when memory squeezing with forks\\n"" )"		406445	0					
ANR	406480	Callee	eprintf		406445	0					
ANR	406481	Identifier	eprintf		406445	0					
ANR	406482	ArgumentList	"""Can't create threads when memory squeezing with forks\\n"""		406445	1					
ANR	406483	Argument	"""Can't create threads when memory squeezing with forks\\n"""		406445	0					
ANR	406484	PrimaryExpression	"""Can't create threads when memory squeezing with forks\\n"""		406445	0					
ANR	406485	ExpressionStatement	Memento_bt ( )	314:4:8508:8520	406445	5	True				
ANR	406486	CallExpression	Memento_bt ( )		406445	0					
ANR	406487	Callee	Memento_bt		406445	0					
ANR	406488	Identifier	Memento_bt		406445	0					
ANR	406489	ArgumentList			406445	1					
ANR	406490	ExpressionStatement	return_error ( gs_error_VMerror )	315:4:8526:8556	406445	6	True				
ANR	406491	CallExpression	return_error ( gs_error_VMerror )		406445	0					
ANR	406492	Callee	return_error		406445	0					
ANR	406493	Identifier	return_error		406445	0					
ANR	406494	ArgumentList	gs_error_VMerror		406445	1					
ANR	406495	Argument	gs_error_VMerror		406445	0					
ANR	406496	Identifier	gs_error_VMerror		406445	0					
ANR	406497	IfStatement	if ( ! closure )		406445	7					
ANR	406498	Condition	! closure	318:8:8574:8581	406445	0	True				
ANR	406499	UnaryOperationExpression	! closure		406445	0					
ANR	406500	UnaryOperator	!		406445	0					
ANR	406501	Identifier	closure		406445	1					
ANR	406502	ExpressionStatement	return_error ( gs_error_VMerror )	319:8:8592:8622	406445	1	True				
ANR	406503	CallExpression	return_error ( gs_error_VMerror )		406445	0					
ANR	406504	Callee	return_error		406445	0					
ANR	406505	Identifier	return_error		406445	0					
ANR	406506	ArgumentList	gs_error_VMerror		406445	1					
ANR	406507	Argument	gs_error_VMerror		406445	0					
ANR	406508	Identifier	gs_error_VMerror		406445	0					
ANR	406509	ExpressionStatement	closure -> proc = proc	320:4:8628:8648	406445	8	True				
ANR	406510	AssignmentExpression	closure -> proc = proc		406445	0		=			
ANR	406511	PtrMemberAccess	closure -> proc		406445	0					
ANR	406512	Identifier	closure		406445	0					
ANR	406513	Identifier	proc		406445	1					
ANR	406514	Identifier	proc		406445	1					
ANR	406515	ExpressionStatement	closure -> proc_data = proc_data	321:4:8654:8684	406445	9	True				
ANR	406516	AssignmentExpression	closure -> proc_data = proc_data		406445	0		=			
ANR	406517	PtrMemberAccess	closure -> proc_data		406445	0					
ANR	406518	Identifier	closure		406445	0					
ANR	406519	Identifier	proc_data		406445	1					
ANR	406520	Identifier	proc_data		406445	1					
ANR	406521	ExpressionStatement	pthread_attr_init ( & attr )	322:4:8690:8714	406445	10	True				
ANR	406522	CallExpression	pthread_attr_init ( & attr )		406445	0					
ANR	406523	Callee	pthread_attr_init		406445	0					
ANR	406524	Identifier	pthread_attr_init		406445	0					
ANR	406525	ArgumentList	& attr		406445	1					
ANR	406526	Argument	& attr		406445	0					
ANR	406527	UnaryOperationExpression	& attr		406445	0					
ANR	406528	UnaryOperator	&		406445	0					
ANR	406529	Identifier	attr		406445	1					
ANR	406530	ExpressionStatement	"pthread_attr_setdetachstate ( & attr , PTHREAD_CREATE_DETACHED )"	323:4:8720:8779	406445	11	True				
ANR	406531	CallExpression	"pthread_attr_setdetachstate ( & attr , PTHREAD_CREATE_DETACHED )"		406445	0					
ANR	406532	Callee	pthread_attr_setdetachstate		406445	0					
ANR	406533	Identifier	pthread_attr_setdetachstate		406445	0					
ANR	406534	ArgumentList	& attr		406445	1					
ANR	406535	Argument	& attr		406445	0					
ANR	406536	UnaryOperationExpression	& attr		406445	0					
ANR	406537	UnaryOperator	&		406445	0					
ANR	406538	Identifier	attr		406445	1					
ANR	406539	Argument	PTHREAD_CREATE_DETACHED		406445	1					
ANR	406540	Identifier	PTHREAD_CREATE_DETACHED		406445	0					
ANR	406541	ExpressionStatement	"code = pthread_create ( & ignore_thread , & attr , gp_thread_begin_wrapper , closure )"	324:4:8785:8889	406445	12	True				
ANR	406542	AssignmentExpression	"code = pthread_create ( & ignore_thread , & attr , gp_thread_begin_wrapper , closure )"		406445	0		=			
ANR	406543	Identifier	code		406445	0					
ANR	406544	CallExpression	"pthread_create ( & ignore_thread , & attr , gp_thread_begin_wrapper , closure )"		406445	1					
ANR	406545	Callee	pthread_create		406445	0					
ANR	406546	Identifier	pthread_create		406445	0					
ANR	406547	ArgumentList	& ignore_thread		406445	1					
ANR	406548	Argument	& ignore_thread		406445	0					
ANR	406549	UnaryOperationExpression	& ignore_thread		406445	0					
ANR	406550	UnaryOperator	&		406445	0					
ANR	406551	Identifier	ignore_thread		406445	1					
ANR	406552	Argument	& attr		406445	1					
ANR	406553	UnaryOperationExpression	& attr		406445	0					
ANR	406554	UnaryOperator	&		406445	0					
ANR	406555	Identifier	attr		406445	1					
ANR	406556	Argument	gp_thread_begin_wrapper		406445	2					
ANR	406557	Identifier	gp_thread_begin_wrapper		406445	0					
ANR	406558	Argument	closure		406445	3					
ANR	406559	Identifier	closure		406445	0					
ANR	406560	IfStatement	if ( code )		406445	13					
ANR	406561	Condition	code	326:8:8899:8902	406445	0	True				
ANR	406562	Identifier	code		406445	0					
ANR	406563	CompoundStatement		22:14:682:682	406445	1					
ANR	406564	ExpressionStatement	free ( closure )	327:8:8915:8928	406445	0	True				
ANR	406565	CallExpression	free ( closure )		406445	0					
ANR	406566	Callee	free		406445	0					
ANR	406567	Identifier	free		406445	0					
ANR	406568	ArgumentList	closure		406445	1					
ANR	406569	Argument	closure		406445	0					
ANR	406570	Identifier	closure		406445	0					
ANR	406571	ExpressionStatement	return_error ( gs_error_ioerror )	328:8:8938:8968	406445	1	True				
ANR	406572	CallExpression	return_error ( gs_error_ioerror )		406445	0					
ANR	406573	Callee	return_error		406445	0					
ANR	406574	Identifier	return_error		406445	0					
ANR	406575	ArgumentList	gs_error_ioerror		406445	1					
ANR	406576	Argument	gs_error_ioerror		406445	0					
ANR	406577	Identifier	gs_error_ioerror		406445	0					
ANR	406578	ReturnStatement	return 0 ;	330:4:8980:8988	406445	14	True				
ANR	406579	PrimaryExpression	0		406445	0					
ANR	406580	ReturnType	int		406445	1					
ANR	406581	Identifier	gp_create_thread		406445	2					
ANR	406582	ParameterList	"gp_thread_creation_callback_t proc , void * proc_data"		406445	3					
ANR	406583	Parameter	gp_thread_creation_callback_t proc	304:17:8169:8202	406445	0	True				
ANR	406584	ParameterType	gp_thread_creation_callback_t		406445	0					
ANR	406585	Identifier	proc		406445	1					
ANR	406586	Parameter	void * proc_data	304:53:8205:8219	406445	1	True				
ANR	406587	ParameterType	void *		406445	0					
ANR	406588	Identifier	proc_data		406445	1					
ANR	406589	CFGEntryNode	ENTRY		406445		True				
ANR	406590	CFGExitNode	EXIT		406445		True				
ANR	406591	Symbol	malloc		406445						
ANR	406592	Symbol	proc		406445						
ANR	406593	Symbol	ignore_thread		406445						
ANR	406594	Symbol	gp_thread_begin_wrapper		406445						
ANR	406595	Symbol	* closure		406445						
ANR	406596	Symbol	code		406445						
ANR	406597	Symbol	& attr		406445						
ANR	406598	Symbol	closure -> proc		406445						
ANR	406599	Symbol	gs_error_ioerror		406445						
ANR	406600	Symbol	PTHREAD_CREATE_DETACHED		406445						
ANR	406601	Symbol	proc_data		406445						
ANR	406602	Symbol	gs_error_VMerror		406445						
ANR	406603	Symbol	attr		406445						
ANR	406604	Symbol	closure		406445						
ANR	406605	Symbol	pthread_create		406445						
ANR	406606	Symbol	& ignore_thread		406445						
ANR	406607	Symbol	closure -> proc_data		406445						
ANR	406608	Function	gp_thread_start	333:0:8993:9767							
ANR	406609	FunctionDef	"gp_thread_start (gp_thread_creation_callback_t proc , void * proc_data , gp_thread_id * thread)"		406608	0					
ANR	406610	CompoundStatement		336:0:9104:9767	406608	0					
ANR	406611	IdentifierDeclStatement	gp_thread_creation_closure_t * closure = ( gp_thread_creation_closure_t * ) malloc ( sizeof ( * closure ) ) ;	337:4:9110:9214	406608	0	True				
ANR	406612	IdentifierDecl	* closure = ( gp_thread_creation_closure_t * ) malloc ( sizeof ( * closure ) )		406608	0					
ANR	406613	IdentifierDeclType	gp_thread_creation_closure_t *		406608	0					
ANR	406614	Identifier	closure		406608	1					
ANR	406615	AssignmentExpression	* closure = ( gp_thread_creation_closure_t * ) malloc ( sizeof ( * closure ) )		406608	2		=			
ANR	406616	Identifier	closure		406608	0					
ANR	406617	CastExpression	( gp_thread_creation_closure_t * ) malloc ( sizeof ( * closure ) )		406608	1					
ANR	406618	CastTarget	gp_thread_creation_closure_t *		406608	0					
ANR	406619	CallExpression	malloc ( sizeof ( * closure ) )		406608	1					
ANR	406620	Callee	malloc		406608	0					
ANR	406621	Identifier	malloc		406608	0					
ANR	406622	ArgumentList	sizeof ( * closure )		406608	1					
ANR	406623	Argument	sizeof ( * closure )		406608	0					
ANR	406624	SizeofExpression	sizeof ( * closure )		406608	0					
ANR	406625	Sizeof	sizeof		406608	0					
ANR	406626	UnaryOperationExpression	* closure		406608	1					
ANR	406627	UnaryOperator	*		406608	0					
ANR	406628	Identifier	closure		406608	1					
ANR	406629	IdentifierDeclStatement	pthread_t new_thread ;	339:4:9220:9240	406608	1	True				
ANR	406630	IdentifierDecl	new_thread		406608	0					
ANR	406631	IdentifierDeclType	pthread_t		406608	0					
ANR	406632	Identifier	new_thread		406608	1					
ANR	406633	IdentifierDeclStatement	pthread_attr_t attr ;	340:4:9246:9265	406608	2	True				
ANR	406634	IdentifierDecl	attr		406608	0					
ANR	406635	IdentifierDeclType	pthread_attr_t		406608	0					
ANR	406636	Identifier	attr		406608	1					
ANR	406637	IdentifierDeclStatement	int code ;	341:4:9271:9279	406608	3	True				
ANR	406638	IdentifierDecl	code		406608	0					
ANR	406639	IdentifierDeclType	int		406608	0					
ANR	406640	Identifier	code		406608	1					
ANR	406641	IfStatement	if ( ! closure )		406608	4					
ANR	406642	Condition	! closure	343:8:9290:9297	406608	0	True				
ANR	406643	UnaryOperationExpression	! closure		406608	0					
ANR	406644	UnaryOperator	!		406608	0					
ANR	406645	Identifier	closure		406608	1					
ANR	406646	ExpressionStatement	return_error ( gs_error_VMerror )	344:8:9308:9338	406608	1	True				
ANR	406647	CallExpression	return_error ( gs_error_VMerror )		406608	0					
ANR	406648	Callee	return_error		406608	0					
ANR	406649	Identifier	return_error		406608	0					
ANR	406650	ArgumentList	gs_error_VMerror		406608	1					
ANR	406651	Argument	gs_error_VMerror		406608	0					
ANR	406652	Identifier	gs_error_VMerror		406608	0					
ANR	406653	ExpressionStatement	closure -> proc = proc	345:4:9344:9364	406608	5	True				
ANR	406654	AssignmentExpression	closure -> proc = proc		406608	0		=			
ANR	406655	PtrMemberAccess	closure -> proc		406608	0					
ANR	406656	Identifier	closure		406608	0					
ANR	406657	Identifier	proc		406608	1					
ANR	406658	Identifier	proc		406608	1					
ANR	406659	ExpressionStatement	closure -> proc_data = proc_data	346:4:9370:9400	406608	6	True				
ANR	406660	AssignmentExpression	closure -> proc_data = proc_data		406608	0		=			
ANR	406661	PtrMemberAccess	closure -> proc_data		406608	0					
ANR	406662	Identifier	closure		406608	0					
ANR	406663	Identifier	proc_data		406608	1					
ANR	406664	Identifier	proc_data		406608	1					
ANR	406665	ExpressionStatement	pthread_attr_init ( & attr )	347:4:9406:9430	406608	7	True				
ANR	406666	CallExpression	pthread_attr_init ( & attr )		406608	0					
ANR	406667	Callee	pthread_attr_init		406608	0					
ANR	406668	Identifier	pthread_attr_init		406608	0					
ANR	406669	ArgumentList	& attr		406608	1					
ANR	406670	Argument	& attr		406608	0					
ANR	406671	UnaryOperationExpression	& attr		406608	0					
ANR	406672	UnaryOperator	&		406608	0					
ANR	406673	Identifier	attr		406608	1					
ANR	406674	ExpressionStatement	"pthread_attr_setdetachstate ( & attr , PTHREAD_CREATE_JOINABLE )"	348:4:9436:9495	406608	8	True				
ANR	406675	CallExpression	"pthread_attr_setdetachstate ( & attr , PTHREAD_CREATE_JOINABLE )"		406608	0					
ANR	406676	Callee	pthread_attr_setdetachstate		406608	0					
ANR	406677	Identifier	pthread_attr_setdetachstate		406608	0					
ANR	406678	ArgumentList	& attr		406608	1					
ANR	406679	Argument	& attr		406608	0					
ANR	406680	UnaryOperationExpression	& attr		406608	0					
ANR	406681	UnaryOperator	&		406608	0					
ANR	406682	Identifier	attr		406608	1					
ANR	406683	Argument	PTHREAD_CREATE_JOINABLE		406608	1					
ANR	406684	Identifier	PTHREAD_CREATE_JOINABLE		406608	0					
ANR	406685	ExpressionStatement	"code = pthread_create ( & new_thread , & attr , gp_thread_begin_wrapper , closure )"	349:4:9501:9602	406608	9	True				
ANR	406686	AssignmentExpression	"code = pthread_create ( & new_thread , & attr , gp_thread_begin_wrapper , closure )"		406608	0		=			
ANR	406687	Identifier	code		406608	0					
ANR	406688	CallExpression	"pthread_create ( & new_thread , & attr , gp_thread_begin_wrapper , closure )"		406608	1					
ANR	406689	Callee	pthread_create		406608	0					
ANR	406690	Identifier	pthread_create		406608	0					
ANR	406691	ArgumentList	& new_thread		406608	1					
ANR	406692	Argument	& new_thread		406608	0					
ANR	406693	UnaryOperationExpression	& new_thread		406608	0					
ANR	406694	UnaryOperator	&		406608	0					
ANR	406695	Identifier	new_thread		406608	1					
ANR	406696	Argument	& attr		406608	1					
ANR	406697	UnaryOperationExpression	& attr		406608	0					
ANR	406698	UnaryOperator	&		406608	0					
ANR	406699	Identifier	attr		406608	1					
ANR	406700	Argument	gp_thread_begin_wrapper		406608	2					
ANR	406701	Identifier	gp_thread_begin_wrapper		406608	0					
ANR	406702	Argument	closure		406608	3					
ANR	406703	Identifier	closure		406608	0					
ANR	406704	IfStatement	if ( code )		406608	10					
ANR	406705	Condition	code	351:8:9612:9615	406608	0	True				
ANR	406706	Identifier	code		406608	0					
ANR	406707	CompoundStatement		16:14:513:513	406608	1					
ANR	406708	ExpressionStatement	* thread = NULL	352:8:9628:9642	406608	0	True				
ANR	406709	AssignmentExpression	* thread = NULL		406608	0		=			
ANR	406710	UnaryOperationExpression	* thread		406608	0					
ANR	406711	UnaryOperator	*		406608	0					
ANR	406712	Identifier	thread		406608	1					
ANR	406713	Identifier	NULL		406608	1					
ANR	406714	ExpressionStatement	free ( closure )	353:8:9652:9665	406608	1	True				
ANR	406715	CallExpression	free ( closure )		406608	0					
ANR	406716	Callee	free		406608	0					
ANR	406717	Identifier	free		406608	0					
ANR	406718	ArgumentList	closure		406608	1					
ANR	406719	Argument	closure		406608	0					
ANR	406720	Identifier	closure		406608	0					
ANR	406721	ExpressionStatement	return_error ( gs_error_ioerror )	354:8:9675:9705	406608	2	True				
ANR	406722	CallExpression	return_error ( gs_error_ioerror )		406608	0					
ANR	406723	Callee	return_error		406608	0					
ANR	406724	Identifier	return_error		406608	0					
ANR	406725	ArgumentList	gs_error_ioerror		406608	1					
ANR	406726	Argument	gs_error_ioerror		406608	0					
ANR	406727	Identifier	gs_error_ioerror		406608	0					
ANR	406728	ExpressionStatement	* thread = ( gp_thread_id ) new_thread	356:4:9717:9751	406608	11	True				
ANR	406729	AssignmentExpression	* thread = ( gp_thread_id ) new_thread		406608	0		=			
ANR	406730	UnaryOperationExpression	* thread		406608	0					
ANR	406731	UnaryOperator	*		406608	0					
ANR	406732	Identifier	thread		406608	1					
ANR	406733	CastExpression	( gp_thread_id ) new_thread		406608	1					
ANR	406734	CastTarget	gp_thread_id		406608	0					
ANR	406735	Identifier	new_thread		406608	1					
ANR	406736	ReturnStatement	return 0 ;	357:4:9757:9765	406608	12	True				
ANR	406737	PrimaryExpression	0		406608	0					
ANR	406738	ReturnType	int		406608	1					
ANR	406739	Identifier	gp_thread_start		406608	2					
ANR	406740	ParameterList	"gp_thread_creation_callback_t proc , void * proc_data , gp_thread_id * thread"		406608	3					
ANR	406741	Parameter	gp_thread_creation_callback_t proc	334:16:9013:9046	406608	0	True				
ANR	406742	ParameterType	gp_thread_creation_callback_t		406608	0					
ANR	406743	Identifier	proc		406608	1					
ANR	406744	Parameter	void * proc_data	334:52:9049:9063	406608	1	True				
ANR	406745	ParameterType	void *		406608	0					
ANR	406746	Identifier	proc_data		406608	1					
ANR	406747	Parameter	gp_thread_id * thread	335:16:9082:9101	406608	2	True				
ANR	406748	ParameterType	gp_thread_id *		406608	0					
ANR	406749	Identifier	thread		406608	1					
ANR	406750	CFGEntryNode	ENTRY		406608		True				
ANR	406751	CFGExitNode	EXIT		406608		True				
ANR	406752	Symbol	malloc		406608						
ANR	406753	Symbol	proc		406608						
ANR	406754	Symbol	new_thread		406608						
ANR	406755	Symbol	gp_thread_begin_wrapper		406608						
ANR	406756	Symbol	* closure		406608						
ANR	406757	Symbol	code		406608						
ANR	406758	Symbol	& attr		406608						
ANR	406759	Symbol	& new_thread		406608						
ANR	406760	Symbol	NULL		406608						
ANR	406761	Symbol	closure -> proc		406608						
ANR	406762	Symbol	gs_error_ioerror		406608						
ANR	406763	Symbol	thread		406608						
ANR	406764	Symbol	proc_data		406608						
ANR	406765	Symbol	gs_error_VMerror		406608						
ANR	406766	Symbol	PTHREAD_CREATE_JOINABLE		406608						
ANR	406767	Symbol	* thread		406608						
ANR	406768	Symbol	attr		406608						
ANR	406769	Symbol	closure		406608						
ANR	406770	Symbol	pthread_create		406608						
ANR	406771	Symbol	closure -> proc_data		406608						
ANR	406772	Function	gp_thread_finish	360:0:9770:9898							
ANR	406773	FunctionDef	gp_thread_finish (gp_thread_id thread)		406772	0					
ANR	406774	CompoundStatement		361:0:9813:9898	406772	0					
ANR	406775	IfStatement	if ( thread == NULL )		406772	0					
ANR	406776	Condition	thread == NULL	362:8:9823:9836	406772	0	True				
ANR	406777	EqualityExpression	thread == NULL		406772	0		==			
ANR	406778	Identifier	thread		406772	0					
ANR	406779	Identifier	NULL		406772	1					
ANR	406780	ReturnStatement	return ;	363:8:9847:9853	406772	1	True				
ANR	406781	ExpressionStatement	"pthread_join ( ( pthread_t ) thread , NULL )"	364:4:9859:9896	406772	1	True				
ANR	406782	CallExpression	"pthread_join ( ( pthread_t ) thread , NULL )"		406772	0					
ANR	406783	Callee	pthread_join		406772	0					
ANR	406784	Identifier	pthread_join		406772	0					
ANR	406785	ArgumentList	( pthread_t ) thread		406772	1					
ANR	406786	Argument	( pthread_t ) thread		406772	0					
ANR	406787	CastExpression	( pthread_t ) thread		406772	0					
ANR	406788	CastTarget	pthread_t		406772	0					
ANR	406789	Identifier	thread		406772	1					
ANR	406790	Argument	NULL		406772	1					
ANR	406791	Identifier	NULL		406772	0					
ANR	406792	ReturnType	void		406772	1					
ANR	406793	Identifier	gp_thread_finish		406772	2					
ANR	406794	ParameterList	gp_thread_id thread		406772	3					
ANR	406795	Parameter	gp_thread_id thread	360:22:9792:9810	406772	0	True				
ANR	406796	ParameterType	gp_thread_id		406772	0					
ANR	406797	Identifier	thread		406772	1					
ANR	406798	CFGEntryNode	ENTRY		406772		True				
ANR	406799	CFGExitNode	EXIT		406772		True				
ANR	406800	Symbol	NULL		406772						
ANR	406801	Symbol	thread		406772						
ANR	406802	Function	gp_monitor_label	367:0:9901:10107							
ANR	406803	FunctionDef	"gp_monitor_label (gp_monitor * mona , const char * name)"		406802	0					
ANR	406804	CompoundStatement		368:0:9962:10107	406802	0					
ANR	406805	Statement	pthread_mutex_t	369:4:9968:9982	406802	0	True				
ANR	406806	Statement	*	369:20:9984:9984	406802	1	True				
ANR	406807	Statement	const	369:22:9986:9990	406802	2	True				
ANR	406808	ExpressionStatement	mon = & ( ( gp_pthread_recursive_t * ) mona ) -> mutex	369:28:9992:10038	406802	3	True				
ANR	406809	AssignmentExpression	mon = & ( ( gp_pthread_recursive_t * ) mona ) -> mutex		406802	0		=			
ANR	406810	Identifier	mon		406802	0					
ANR	406811	UnaryOperationExpression	& ( ( gp_pthread_recursive_t * ) mona ) -> mutex		406802	1					
ANR	406812	UnaryOperator	&		406802	0					
ANR	406813	PtrMemberAccess	( ( gp_pthread_recursive_t * ) mona ) -> mutex		406802	1					
ANR	406814	CastExpression	( gp_pthread_recursive_t * ) mona		406802	0					
ANR	406815	CastTarget	gp_pthread_recursive_t *		406802	0					
ANR	406816	Identifier	mona		406802	1					
ANR	406817	Identifier	mutex		406802	1					
ANR	406818	ExpressionStatement	( void ) mon	371:4:10045:10054	406802	4	True				
ANR	406819	CastExpression	( void ) mon		406802	0					
ANR	406820	CastTarget	void		406802	0					
ANR	406821	Identifier	mon		406802	1					
ANR	406822	ExpressionStatement	( void ) name	372:4:10060:10070	406802	5	True				
ANR	406823	CastExpression	( void ) name		406802	0					
ANR	406824	CastTarget	void		406802	0					
ANR	406825	Identifier	name		406802	1					
ANR	406826	ExpressionStatement	"Bobbin_label_mutex ( mon , name )"	373:4:10076:10105	406802	6	True				
ANR	406827	CallExpression	"Bobbin_label_mutex ( mon , name )"		406802	0					
ANR	406828	Callee	Bobbin_label_mutex		406802	0					
ANR	406829	Identifier	Bobbin_label_mutex		406802	0					
ANR	406830	ArgumentList	mon		406802	1					
ANR	406831	Argument	mon		406802	0					
ANR	406832	Identifier	mon		406802	0					
ANR	406833	Argument	name		406802	1					
ANR	406834	Identifier	name		406802	0					
ANR	406835	ReturnType	void		406802	1					
ANR	406836	Identifier	( gp_monitor_label )		406802	2					
ANR	406837	Identifier	gp_monitor_label		406802	3					
ANR	406838	ParameterList	"gp_monitor * mona , const char * name"		406802	4					
ANR	406839	Parameter	gp_monitor * mona	367:24:9925:9941	406802	0	True				
ANR	406840	ParameterType	gp_monitor *		406802	0					
ANR	406841	Identifier	mona		406802	1					
ANR	406842	Parameter	const char * name	367:43:9944:9959	406802	1	True				
ANR	406843	ParameterType	const char *		406802	0					
ANR	406844	Identifier	name		406802	1					
ANR	406845	CFGEntryNode	ENTRY		406802		True				
ANR	406846	CFGExitNode	EXIT		406802		True				
ANR	406847	Symbol	mona		406802						
ANR	406848	Symbol	name		406802						
ANR	406849	Symbol	& ( ( gp_pthread_recursive_t * ) mona ) -> mutex		406802						
ANR	406850	Symbol	mon		406802						
ANR	406851	Function	gp_semaphore_label	376:0:10110:10350							
ANR	406852	FunctionDef	"gp_semaphore_label (gp_semaphore * sema , const char * name)"		406851	0					
ANR	406853	CompoundStatement		377:0:10175:10350	406851	0					
ANR	406854	Statement	pt_semaphore_t	378:4:10181:10194	406851	0	True				
ANR	406855	Statement	*	378:19:10196:10196	406851	1	True				
ANR	406856	Statement	const	378:21:10198:10202	406851	2	True				
ANR	406857	ExpressionStatement	sem = ( pt_semaphore_t * ) sema	378:27:10204:10232	406851	3	True				
ANR	406858	AssignmentExpression	sem = ( pt_semaphore_t * ) sema		406851	0		=			
ANR	406859	Identifier	sem		406851	0					
ANR	406860	CastExpression	( pt_semaphore_t * ) sema		406851	1					
ANR	406861	CastTarget	pt_semaphore_t *		406851	0					
ANR	406862	Identifier	sema		406851	1					
ANR	406863	ExpressionStatement	( void ) sem	380:4:10239:10248	406851	4	True				
ANR	406864	CastExpression	( void ) sem		406851	0					
ANR	406865	CastTarget	void		406851	0					
ANR	406866	Identifier	sem		406851	1					
ANR	406867	ExpressionStatement	( void ) name	381:4:10254:10264	406851	5	True				
ANR	406868	CastExpression	( void ) name		406851	0					
ANR	406869	CastTarget	void		406851	0					
ANR	406870	Identifier	name		406851	1					
ANR	406871	ExpressionStatement	"Bobbin_label_mutex ( & sem -> mutex , name )"	382:4:10270:10307	406851	6	True				
ANR	406872	CallExpression	"Bobbin_label_mutex ( & sem -> mutex , name )"		406851	0					
ANR	406873	Callee	Bobbin_label_mutex		406851	0					
ANR	406874	Identifier	Bobbin_label_mutex		406851	0					
ANR	406875	ArgumentList	& sem -> mutex		406851	1					
ANR	406876	Argument	& sem -> mutex		406851	0					
ANR	406877	UnaryOperationExpression	& sem -> mutex		406851	0					
ANR	406878	UnaryOperator	&		406851	0					
ANR	406879	PtrMemberAccess	sem -> mutex		406851	1					
ANR	406880	Identifier	sem		406851	0					
ANR	406881	Identifier	mutex		406851	1					
ANR	406882	Argument	name		406851	1					
ANR	406883	Identifier	name		406851	0					
ANR	406884	ExpressionStatement	"Bobbin_label_cond ( & sem -> cond , name )"	383:4:10313:10348	406851	7	True				
ANR	406885	CallExpression	"Bobbin_label_cond ( & sem -> cond , name )"		406851	0					
ANR	406886	Callee	Bobbin_label_cond		406851	0					
ANR	406887	Identifier	Bobbin_label_cond		406851	0					
ANR	406888	ArgumentList	& sem -> cond		406851	1					
ANR	406889	Argument	& sem -> cond		406851	0					
ANR	406890	UnaryOperationExpression	& sem -> cond		406851	0					
ANR	406891	UnaryOperator	&		406851	0					
ANR	406892	PtrMemberAccess	sem -> cond		406851	1					
ANR	406893	Identifier	sem		406851	0					
ANR	406894	Identifier	cond		406851	1					
ANR	406895	Argument	name		406851	1					
ANR	406896	Identifier	name		406851	0					
ANR	406897	ReturnType	void		406851	1					
ANR	406898	Identifier	( gp_semaphore_label )		406851	2					
ANR	406899	Identifier	gp_semaphore_label		406851	3					
ANR	406900	ParameterList	"gp_semaphore * sema , const char * name"		406851	4					
ANR	406901	Parameter	gp_semaphore * sema	376:26:10136:10154	406851	0	True				
ANR	406902	ParameterType	gp_semaphore *		406851	0					
ANR	406903	Identifier	sema		406851	1					
ANR	406904	Parameter	const char * name	376:47:10157:10172	406851	1	True				
ANR	406905	ParameterType	const char *		406851	0					
ANR	406906	Identifier	name		406851	1					
ANR	406907	CFGEntryNode	ENTRY		406851		True				
ANR	406908	CFGExitNode	EXIT		406851		True				
ANR	406909	Symbol	sema		406851						
ANR	406910	Symbol	name		406851						
ANR	406911	Symbol	sem		406851						
ANR	406912	Symbol	& sem -> cond		406851						
ANR	406913	Symbol	& sem -> mutex		406851						
ANR	406914	Function	gp_thread_label	386:0:10353:10501							
ANR	406915	FunctionDef	"gp_thread_label (gp_thread_id thread , const char * name)"		406914	0					
ANR	406916	CompoundStatement		387:0:10415:10501	406914	0					
ANR	406917	ExpressionStatement	( void ) thread	388:4:10421:10433	406914	0	True				
ANR	406918	CastExpression	( void ) thread		406914	0					
ANR	406919	CastTarget	void		406914	0					
ANR	406920	Identifier	thread		406914	1					
ANR	406921	ExpressionStatement	( void ) name	389:4:10439:10449	406914	1	True				
ANR	406922	CastExpression	( void ) name		406914	0					
ANR	406923	CastTarget	void		406914	0					
ANR	406924	Identifier	name		406914	1					
ANR	406925	ExpressionStatement	"Bobbin_label_thread ( ( pthread_t ) thread , name )"	390:4:10455:10499	406914	2	True				
ANR	406926	CallExpression	"Bobbin_label_thread ( ( pthread_t ) thread , name )"		406914	0					
ANR	406927	Callee	Bobbin_label_thread		406914	0					
ANR	406928	Identifier	Bobbin_label_thread		406914	0					
ANR	406929	ArgumentList	( pthread_t ) thread		406914	1					
ANR	406930	Argument	( pthread_t ) thread		406914	0					
ANR	406931	CastExpression	( pthread_t ) thread		406914	0					
ANR	406932	CastTarget	pthread_t		406914	0					
ANR	406933	Identifier	thread		406914	1					
ANR	406934	Argument	name		406914	1					
ANR	406935	Identifier	name		406914	0					
ANR	406936	ReturnType	void		406914	1					
ANR	406937	Identifier	( gp_thread_label )		406914	2					
ANR	406938	Identifier	gp_thread_label		406914	3					
ANR	406939	ParameterList	"gp_thread_id thread , const char * name"		406914	4					
ANR	406940	Parameter	gp_thread_id thread	386:23:10376:10394	406914	0	True				
ANR	406941	ParameterType	gp_thread_id		406914	0					
ANR	406942	Identifier	thread		406914	1					
ANR	406943	Parameter	const char * name	386:44:10397:10412	406914	1	True				
ANR	406944	ParameterType	const char *		406914	0					
ANR	406945	Identifier	name		406914	1					
ANR	406946	CFGEntryNode	ENTRY		406914		True				
ANR	406947	CFGExitNode	EXIT		406914		True				
ANR	406948	Symbol	name		406914						
ANR	406949	Symbol	thread		406914						
